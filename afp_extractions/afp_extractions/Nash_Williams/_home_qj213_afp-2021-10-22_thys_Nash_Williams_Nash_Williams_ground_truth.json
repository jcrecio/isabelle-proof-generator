{"file_name": "/home/qj213/afp-2021-10-22/thys/Nash_Williams/Nash_Williams.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Nash_Williams", "problem_names": ["lemma finite_nat_Int_greaterThan_iff:\n  fixes N :: \"nat set\"\n  shows \"finite (N \\<inter> {n<..}) \\<longleftrightarrow> finite N\"", "lemma init_segment_subset: \"init_segment S T \\<Longrightarrow> S \\<subseteq> T\"", "lemma init_segment_refl: \"init_segment S S\"", "lemma init_segment_antisym: \"\\<lbrakk>init_segment S T; init_segment T S\\<rbrakk> \\<Longrightarrow> S=T\"", "lemma init_segment_trans: \"\\<lbrakk>init_segment S T; init_segment T U\\<rbrakk> \\<Longrightarrow> init_segment S U\"", "lemma init_segment_empty2 [iff]: \"init_segment S {} \\<longleftrightarrow> S={}\"", "lemma init_segment_Un: \"S \\<lless> S' \\<Longrightarrow> init_segment S (S \\<union> S')\"", "lemma init_segment_iff:\n  shows \"init_segment S T \\<longleftrightarrow> S=T \\<or> (\\<exists>m \\<in> T. S = {n \\<in> T. n < m})\" (is \"?lhs=?rhs\")", "lemma init_segment_empty [iff]: \"init_segment {} S\"", "lemma init_segment_insert_iff:\n  assumes Sn: \"S \\<lless> {n}\" and TS: \"\\<And>x. x \\<in> T-S \\<Longrightarrow> n\\<le>x\"\n  shows \"init_segment (insert n S) T \\<longleftrightarrow> init_segment S T \\<and> n \\<in> T\"", "lemma init_segment_insert:\n  assumes \"init_segment S T\" and T: \"T \\<lless> {n}\"\n  shows \"init_segment S (insert n T)\"", "lemma comparables_iff: \"T \\<in> comparables S M \\<longleftrightarrow> finite T \\<and> (init_segment T S \\<or> init_segment S T \\<and> T \\<subseteq> S \\<union> M)\"", "lemma comparables_subset: \"\\<Union>(comparables S M) \\<subseteq> S \\<union> M\"", "lemma comparables_empty [simp]: \"comparables {} M = Fpow M\"", "lemma comparables_mono: \"N \\<subseteq> M \\<Longrightarrow> comparables S N \\<subseteq> comparables S M\"", "lemma strongly_accepts_imp_accepts:\n  \"\\<lbrakk>strongly_accepts \\<F> S M; infinite M\\<rbrakk> \\<Longrightarrow> accepts \\<F> S M\"", "lemma rejects_trivial: \"\\<lbrakk>rejects \\<F> S M; thin_set \\<F>; init_segment F S; F \\<in> \\<F>\\<rbrakk> \\<Longrightarrow> False\"", "lemma rejects_subset: \"\\<lbrakk>rejects \\<F> S M; N \\<subseteq> M\\<rbrakk> \\<Longrightarrow> rejects \\<F> S N\"", "lemma strongly_accepts_subset: \"\\<lbrakk>strongly_accepts \\<F> S M; N \\<subseteq> M\\<rbrakk> \\<Longrightarrow> strongly_accepts \\<F> S N\"", "lemma decides_subset: \"\\<lbrakk>decides \\<F> S M; N \\<subseteq> M\\<rbrakk> \\<Longrightarrow> decides \\<F> S N\"", "lemma decides_subsets_subset: \"\\<lbrakk>decides_subsets \\<F> M; N \\<subseteq> M\\<rbrakk> \\<Longrightarrow> decides_subsets \\<F> N\"", "lemma rejects_empty [simp]: \"rejects \\<F> {} M \\<longleftrightarrow> Fpow M \\<inter> \\<F> = {}\"", "lemma strongly_accepts_empty [simp]: \"strongly_accepts \\<F> {} M \\<longleftrightarrow> (\\<forall>N\\<subseteq>M. Fpow N \\<inter> \\<F> = {} \\<longrightarrow> finite N)\"", "lemma ex_infinite_decides_1:\n  assumes \"infinite M\"\n  obtains N where \"N \\<subseteq> M\" \"infinite N\" \"decides \\<F> S N\"", "lemma sorted_wrt_subset: \"\\<lbrakk>X \\<in> list.set l; sorted_wrt (\\<le>) l\\<rbrakk> \\<Longrightarrow> hd l \\<subseteq> X\"", "theorem Nash_Williams_2:\n  assumes \"thin_set \\<F>\" shows \"Ramsey \\<F> 2\"", "theorem Nash_Williams:\n  assumes \\<F>: \"thin_set \\<F>\" \"r > 0\" shows \"Ramsey \\<F> r\""], "translations": [["", "lemma finite_nat_Int_greaterThan_iff:\n  fixes N :: \"nat set\"\n  shows \"finite (N \\<inter> {n<..}) \\<longleftrightarrow> finite N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (N \\<inter> {n<..}) = finite N", "apply (simp add: finite_nat_iff_bounded subset_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>k.\n        \\<forall>t. t \\<in> N \\<and> n < t \\<longrightarrow> t < k) =\n    (\\<exists>k. \\<forall>t. t \\<in> N \\<longrightarrow> t < k)", "by (metis dual_order.strict_trans2 nat_less_le not_less_eq)"], ["", "subsection \\<open>Initial segments\\<close>"], ["", "definition init_segment :: \"nat set \\<Rightarrow> nat set \\<Rightarrow> bool\"\n  where \"init_segment S T \\<equiv> \\<exists>S'. T = S \\<union> S' \\<and> S \\<lless> S'\""], ["", "lemma init_segment_subset: \"init_segment S T \\<Longrightarrow> S \\<subseteq> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. init_segment S T \\<Longrightarrow> S \\<subseteq> T", "by (auto simp: init_segment_def)"], ["", "lemma init_segment_refl: \"init_segment S S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. init_segment S S", "by (metis empty_iff init_segment_def less_sets_def sup_bot.right_neutral)"], ["", "lemma init_segment_antisym: \"\\<lbrakk>init_segment S T; init_segment T S\\<rbrakk> \\<Longrightarrow> S=T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>init_segment S T; init_segment T S\\<rbrakk>\n    \\<Longrightarrow> S = T", "by (auto simp: init_segment_def)"], ["", "lemma init_segment_trans: \"\\<lbrakk>init_segment S T; init_segment T U\\<rbrakk> \\<Longrightarrow> init_segment S U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>init_segment S T; init_segment T U\\<rbrakk>\n    \\<Longrightarrow> init_segment S U", "unfolding init_segment_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>S'. T = S \\<union> S' \\<and> S \\<lless> S';\n     \\<exists>S'. U = T \\<union> S' \\<and> T \\<lless> S'\\<rbrakk>\n    \\<Longrightarrow> \\<exists>S'. U = S \\<union> S' \\<and> S \\<lless> S'", "by (meson UnE Un_assoc Un_upper1 less_sets_def less_sets_weaken1)"], ["", "lemma init_segment_empty2 [iff]: \"init_segment S {} \\<longleftrightarrow> S={}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. init_segment S {} = (S = {})", "by (auto simp: init_segment_def less_sets_def)"], ["", "lemma init_segment_Un: \"S \\<lless> S' \\<Longrightarrow> init_segment S (S \\<union> S')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<lless> S' \\<Longrightarrow> init_segment S (S \\<union> S')", "by (auto simp: init_segment_def less_sets_def)"], ["", "lemma init_segment_iff:\n  shows \"init_segment S T \\<longleftrightarrow> S=T \\<or> (\\<exists>m \\<in> T. S = {n \\<in> T. n < m})\" (is \"?lhs=?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. init_segment S T =\n    (S = T \\<or> (\\<exists>m\\<in>T. S = {n \\<in> T. n < m}))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. init_segment S T \\<Longrightarrow>\n    S = T \\<or> (\\<exists>m\\<in>T. S = {n \\<in> T. n < m})\n 2. S = T \\<or> (\\<exists>m\\<in>T. S = {n \\<in> T. n < m}) \\<Longrightarrow>\n    init_segment S T", "assume ?lhs"], ["proof (state)\nthis:\n  init_segment S T\n\ngoal (2 subgoals):\n 1. init_segment S T \\<Longrightarrow>\n    S = T \\<or> (\\<exists>m\\<in>T. S = {n \\<in> T. n < m})\n 2. S = T \\<or> (\\<exists>m\\<in>T. S = {n \\<in> T. n < m}) \\<Longrightarrow>\n    init_segment S T", "then"], ["proof (chain)\npicking this:\n  init_segment S T", "obtain S' where S': \"T = S \\<union> S'\" \"S \\<lless> S'\""], ["proof (prove)\nusing this:\n  init_segment S T\n\ngoal (1 subgoal):\n 1. (\\<And>S'.\n        \\<lbrakk>T = S \\<union> S'; S \\<lless> S'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson init_segment_def)"], ["proof (state)\nthis:\n  T = S \\<union> S'\n  S \\<lless> S'\n\ngoal (2 subgoals):\n 1. init_segment S T \\<Longrightarrow>\n    S = T \\<or> (\\<exists>m\\<in>T. S = {n \\<in> T. n < m})\n 2. S = T \\<or> (\\<exists>m\\<in>T. S = {n \\<in> T. n < m}) \\<Longrightarrow>\n    init_segment S T", "then"], ["proof (chain)\npicking this:\n  T = S \\<union> S'\n  S \\<lless> S'", "have \"S \\<subseteq> T\""], ["proof (prove)\nusing this:\n  T = S \\<union> S'\n  S \\<lless> S'\n\ngoal (1 subgoal):\n 1. S \\<subseteq> T", "by auto"], ["proof (state)\nthis:\n  S \\<subseteq> T\n\ngoal (2 subgoals):\n 1. init_segment S T \\<Longrightarrow>\n    S = T \\<or> (\\<exists>m\\<in>T. S = {n \\<in> T. n < m})\n 2. S = T \\<or> (\\<exists>m\\<in>T. S = {n \\<in> T. n < m}) \\<Longrightarrow>\n    init_segment S T", "then"], ["proof (chain)\npicking this:\n  S \\<subseteq> T", "have eq: \"S' = T-S\""], ["proof (prove)\nusing this:\n  S \\<subseteq> T\n\ngoal (1 subgoal):\n 1. S' = T - S", "using S'"], ["proof (prove)\nusing this:\n  S \\<subseteq> T\n  T = S \\<union> S'\n  S \\<lless> S'\n\ngoal (1 subgoal):\n 1. S' = T - S", "by (auto simp: less_sets_def)"], ["proof (state)\nthis:\n  S' = T - S\n\ngoal (2 subgoals):\n 1. init_segment S T \\<Longrightarrow>\n    S = T \\<or> (\\<exists>m\\<in>T. S = {n \\<in> T. n < m})\n 2. S = T \\<or> (\\<exists>m\\<in>T. S = {n \\<in> T. n < m}) \\<Longrightarrow>\n    init_segment S T", "show ?rhs"], ["proof (prove)\ngoal (1 subgoal):\n 1. S = T \\<or> (\\<exists>m\\<in>T. S = {n \\<in> T. n < m})", "proof (cases \"T \\<subseteq> S\")"], ["proof (state)\ngoal (2 subgoals):\n 1. T \\<subseteq> S \\<Longrightarrow>\n    S = T \\<or> (\\<exists>m\\<in>T. S = {n \\<in> T. n < m})\n 2. \\<not> T \\<subseteq> S \\<Longrightarrow>\n    S = T \\<or> (\\<exists>m\\<in>T. S = {n \\<in> T. n < m})", "case True"], ["proof (state)\nthis:\n  T \\<subseteq> S\n\ngoal (2 subgoals):\n 1. T \\<subseteq> S \\<Longrightarrow>\n    S = T \\<or> (\\<exists>m\\<in>T. S = {n \\<in> T. n < m})\n 2. \\<not> T \\<subseteq> S \\<Longrightarrow>\n    S = T \\<or> (\\<exists>m\\<in>T. S = {n \\<in> T. n < m})", "with \\<open>S \\<subseteq> T\\<close>"], ["proof (chain)\npicking this:\n  S \\<subseteq> T\n  T \\<subseteq> S", "show ?rhs"], ["proof (prove)\nusing this:\n  S \\<subseteq> T\n  T \\<subseteq> S\n\ngoal (1 subgoal):\n 1. S = T \\<or> (\\<exists>m\\<in>T. S = {n \\<in> T. n < m})", "by blast"], ["proof (state)\nthis:\n  S = T \\<or> (\\<exists>m\\<in>T. S = {n \\<in> T. n < m})\n\ngoal (1 subgoal):\n 1. \\<not> T \\<subseteq> S \\<Longrightarrow>\n    S = T \\<or> (\\<exists>m\\<in>T. S = {n \\<in> T. n < m})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> T \\<subseteq> S \\<Longrightarrow>\n    S = T \\<or> (\\<exists>m\\<in>T. S = {n \\<in> T. n < m})", "case False"], ["proof (state)\nthis:\n  \\<not> T \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<not> T \\<subseteq> S \\<Longrightarrow>\n    S = T \\<or> (\\<exists>m\\<in>T. S = {n \\<in> T. n < m})", "then"], ["proof (chain)\npicking this:\n  \\<not> T \\<subseteq> S", "have \"Inf S' \\<in> T\""], ["proof (prove)\nusing this:\n  \\<not> T \\<subseteq> S\n\ngoal (1 subgoal):\n 1. Inf S' \\<in> T", "by (metis Diff_eq_empty_iff Diff_iff Inf_nat_def1 eq)"], ["proof (state)\nthis:\n  Inf S' \\<in> T\n\ngoal (1 subgoal):\n 1. \\<not> T \\<subseteq> S \\<Longrightarrow>\n    S = T \\<or> (\\<exists>m\\<in>T. S = {n \\<in> T. n < m})", "moreover"], ["proof (state)\nthis:\n  Inf S' \\<in> T\n\ngoal (1 subgoal):\n 1. \\<not> T \\<subseteq> S \\<Longrightarrow>\n    S = T \\<or> (\\<exists>m\\<in>T. S = {n \\<in> T. n < m})", "have \"\\<And>x. x \\<in> S \\<Longrightarrow> x < Inf S'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> S \\<Longrightarrow> x < Inf S'", "using S' False"], ["proof (prove)\nusing this:\n  T = S \\<union> S'\n  S \\<lless> S'\n  \\<not> T \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> S \\<Longrightarrow> x < Inf S'", "by (auto simp: less_sets_def intro!: Inf_nat_def1)"], ["proof (state)\nthis:\n  ?x \\<in> S \\<Longrightarrow> ?x < Inf S'\n\ngoal (1 subgoal):\n 1. \\<not> T \\<subseteq> S \\<Longrightarrow>\n    S = T \\<or> (\\<exists>m\\<in>T. S = {n \\<in> T. n < m})", "moreover"], ["proof (state)\nthis:\n  ?x \\<in> S \\<Longrightarrow> ?x < Inf S'\n\ngoal (1 subgoal):\n 1. \\<not> T \\<subseteq> S \\<Longrightarrow>\n    S = T \\<or> (\\<exists>m\\<in>T. S = {n \\<in> T. n < m})", "have \"{n \\<in> T. n < Inf S'} \\<subseteq> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {n \\<in> T. n < Inf S'} \\<subseteq> S", "using Inf_nat_def eq not_less_Least"], ["proof (prove)\nusing this:\n  Inf ?X = (LEAST n. n \\<in> ?X)\n  S' = T - S\n  ?k < (LEAST x. ?P x) \\<Longrightarrow> \\<not> ?P ?k\n\ngoal (1 subgoal):\n 1. {n \\<in> T. n < Inf S'} \\<subseteq> S", "by fastforce"], ["proof (state)\nthis:\n  {n \\<in> T. n < Inf S'} \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<not> T \\<subseteq> S \\<Longrightarrow>\n    S = T \\<or> (\\<exists>m\\<in>T. S = {n \\<in> T. n < m})", "ultimately"], ["proof (chain)\npicking this:\n  Inf S' \\<in> T\n  ?x \\<in> S \\<Longrightarrow> ?x < Inf S'\n  {n \\<in> T. n < Inf S'} \\<subseteq> S", "show ?rhs"], ["proof (prove)\nusing this:\n  Inf S' \\<in> T\n  ?x \\<in> S \\<Longrightarrow> ?x < Inf S'\n  {n \\<in> T. n < Inf S'} \\<subseteq> S\n\ngoal (1 subgoal):\n 1. S = T \\<or> (\\<exists>m\\<in>T. S = {n \\<in> T. n < m})", "using \\<open>S \\<subseteq> T\\<close>"], ["proof (prove)\nusing this:\n  Inf S' \\<in> T\n  ?x \\<in> S \\<Longrightarrow> ?x < Inf S'\n  {n \\<in> T. n < Inf S'} \\<subseteq> S\n  S \\<subseteq> T\n\ngoal (1 subgoal):\n 1. S = T \\<or> (\\<exists>m\\<in>T. S = {n \\<in> T. n < m})", "by blast"], ["proof (state)\nthis:\n  S = T \\<or> (\\<exists>m\\<in>T. S = {n \\<in> T. n < m})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  S = T \\<or> (\\<exists>m\\<in>T. S = {n \\<in> T. n < m})\n\ngoal (1 subgoal):\n 1. S = T \\<or> (\\<exists>m\\<in>T. S = {n \\<in> T. n < m}) \\<Longrightarrow>\n    init_segment S T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. S = T \\<or> (\\<exists>m\\<in>T. S = {n \\<in> T. n < m}) \\<Longrightarrow>\n    init_segment S T", "assume ?rhs"], ["proof (state)\nthis:\n  S = T \\<or> (\\<exists>m\\<in>T. S = {n \\<in> T. n < m})\n\ngoal (1 subgoal):\n 1. S = T \\<or> (\\<exists>m\\<in>T. S = {n \\<in> T. n < m}) \\<Longrightarrow>\n    init_segment S T", "then"], ["proof (chain)\npicking this:\n  S = T \\<or> (\\<exists>m\\<in>T. S = {n \\<in> T. n < m})", "show ?lhs"], ["proof (prove)\nusing this:\n  S = T \\<or> (\\<exists>m\\<in>T. S = {n \\<in> T. n < m})\n\ngoal (1 subgoal):\n 1. init_segment S T", "proof (elim disjE bexE)"], ["proof (state)\ngoal (2 subgoals):\n 1. S = T \\<Longrightarrow> init_segment S T\n 2. \\<And>m.\n       \\<lbrakk>m \\<in> T; S = {n \\<in> T. n < m}\\<rbrakk>\n       \\<Longrightarrow> init_segment S T", "assume \"S = T\""], ["proof (state)\nthis:\n  S = T\n\ngoal (2 subgoals):\n 1. S = T \\<Longrightarrow> init_segment S T\n 2. \\<And>m.\n       \\<lbrakk>m \\<in> T; S = {n \\<in> T. n < m}\\<rbrakk>\n       \\<Longrightarrow> init_segment S T", "then"], ["proof (chain)\npicking this:\n  S = T", "show \"init_segment S T\""], ["proof (prove)\nusing this:\n  S = T\n\ngoal (1 subgoal):\n 1. init_segment S T", "using init_segment_refl"], ["proof (prove)\nusing this:\n  S = T\n  init_segment ?S ?S\n\ngoal (1 subgoal):\n 1. init_segment S T", "by blast"], ["proof (state)\nthis:\n  init_segment S T\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>m \\<in> T; S = {n \\<in> T. n < m}\\<rbrakk>\n       \\<Longrightarrow> init_segment S T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>m \\<in> T; S = {n \\<in> T. n < m}\\<rbrakk>\n       \\<Longrightarrow> init_segment S T", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>m \\<in> T; S = {n \\<in> T. n < m}\\<rbrakk>\n       \\<Longrightarrow> init_segment S T", "assume m: \"m \\<in> T\" \"S = {n \\<in> T. n < m}\""], ["proof (state)\nthis:\n  m \\<in> T\n  S = {n \\<in> T. n < m}\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>m \\<in> T; S = {n \\<in> T. n < m}\\<rbrakk>\n       \\<Longrightarrow> init_segment S T", "then"], ["proof (chain)\npicking this:\n  m \\<in> T\n  S = {n \\<in> T. n < m}", "have \"T = S \\<union> {n \\<in> T. m \\<le> n}\""], ["proof (prove)\nusing this:\n  m \\<in> T\n  S = {n \\<in> T. n < m}\n\ngoal (1 subgoal):\n 1. T = S \\<union> {n \\<in> T. m \\<le> n}", "by auto"], ["proof (state)\nthis:\n  T = S \\<union> {n \\<in> T. m \\<le> n}\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>m \\<in> T; S = {n \\<in> T. n < m}\\<rbrakk>\n       \\<Longrightarrow> init_segment S T", "moreover"], ["proof (state)\nthis:\n  T = S \\<union> {n \\<in> T. m \\<le> n}\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>m \\<in> T; S = {n \\<in> T. n < m}\\<rbrakk>\n       \\<Longrightarrow> init_segment S T", "have \"S \\<lless> {n \\<in> T. m \\<le> n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<lless> {n \\<in> T. m \\<le> n}", "using m"], ["proof (prove)\nusing this:\n  m \\<in> T\n  S = {n \\<in> T. n < m}\n\ngoal (1 subgoal):\n 1. S \\<lless> {n \\<in> T. m \\<le> n}", "by (auto simp: less_sets_def)"], ["proof (state)\nthis:\n  S \\<lless> {n \\<in> T. m \\<le> n}\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>m \\<in> T; S = {n \\<in> T. n < m}\\<rbrakk>\n       \\<Longrightarrow> init_segment S T", "ultimately"], ["proof (chain)\npicking this:\n  T = S \\<union> {n \\<in> T. m \\<le> n}\n  S \\<lless> {n \\<in> T. m \\<le> n}", "show \"init_segment S T\""], ["proof (prove)\nusing this:\n  T = S \\<union> {n \\<in> T. m \\<le> n}\n  S \\<lless> {n \\<in> T. m \\<le> n}\n\ngoal (1 subgoal):\n 1. init_segment S T", "using init_segment_Un"], ["proof (prove)\nusing this:\n  T = S \\<union> {n \\<in> T. m \\<le> n}\n  S \\<lless> {n \\<in> T. m \\<le> n}\n  ?S \\<lless> ?S' \\<Longrightarrow> init_segment ?S (?S \\<union> ?S')\n\ngoal (1 subgoal):\n 1. init_segment S T", "by force"], ["proof (state)\nthis:\n  init_segment S T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  init_segment S T\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma init_segment_empty [iff]: \"init_segment {} S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. init_segment {} S", "by (auto simp: init_segment_def less_sets_def)"], ["", "lemma init_segment_insert_iff:\n  assumes Sn: \"S \\<lless> {n}\" and TS: \"\\<And>x. x \\<in> T-S \\<Longrightarrow> n\\<le>x\"\n  shows \"init_segment (insert n S) T \\<longleftrightarrow> init_segment S T \\<and> n \\<in> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. init_segment (insert n S) T = (init_segment S T \\<and> n \\<in> T)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. init_segment (insert n S) T \\<Longrightarrow>\n    init_segment S T \\<and> n \\<in> T\n 2. init_segment S T \\<and> n \\<in> T \\<Longrightarrow>\n    init_segment (insert n S) T", "assume \"init_segment (insert n S) T\""], ["proof (state)\nthis:\n  init_segment (insert n S) T\n\ngoal (2 subgoals):\n 1. init_segment (insert n S) T \\<Longrightarrow>\n    init_segment S T \\<and> n \\<in> T\n 2. init_segment S T \\<and> n \\<in> T \\<Longrightarrow>\n    init_segment (insert n S) T", "then"], ["proof (chain)\npicking this:\n  init_segment (insert n S) T", "have \"init_segment ({n} \\<union> S) T\""], ["proof (prove)\nusing this:\n  init_segment (insert n S) T\n\ngoal (1 subgoal):\n 1. init_segment ({n} \\<union> S) T", "by auto"], ["proof (state)\nthis:\n  init_segment ({n} \\<union> S) T\n\ngoal (2 subgoals):\n 1. init_segment (insert n S) T \\<Longrightarrow>\n    init_segment S T \\<and> n \\<in> T\n 2. init_segment S T \\<and> n \\<in> T \\<Longrightarrow>\n    init_segment (insert n S) T", "then"], ["proof (chain)\npicking this:\n  init_segment ({n} \\<union> S) T", "show \"init_segment S T \\<and> n \\<in> T\""], ["proof (prove)\nusing this:\n  init_segment ({n} \\<union> S) T\n\ngoal (1 subgoal):\n 1. init_segment S T \\<and> n \\<in> T", "by (metis Sn Un_iff init_segment_def init_segment_trans insertI1 sup_commute)"], ["proof (state)\nthis:\n  init_segment S T \\<and> n \\<in> T\n\ngoal (1 subgoal):\n 1. init_segment S T \\<and> n \\<in> T \\<Longrightarrow>\n    init_segment (insert n S) T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. init_segment S T \\<and> n \\<in> T \\<Longrightarrow>\n    init_segment (insert n S) T", "assume rhs: \"init_segment S T \\<and> n \\<in> T\""], ["proof (state)\nthis:\n  init_segment S T \\<and> n \\<in> T\n\ngoal (1 subgoal):\n 1. init_segment S T \\<and> n \\<in> T \\<Longrightarrow>\n    init_segment (insert n S) T", "then"], ["proof (chain)\npicking this:\n  init_segment S T \\<and> n \\<in> T", "obtain R where R: \"T = S \\<union> R\" \"S \\<lless> R\""], ["proof (prove)\nusing this:\n  init_segment S T \\<and> n \\<in> T\n\ngoal (1 subgoal):\n 1. (\\<And>R.\n        \\<lbrakk>T = S \\<union> R; S \\<lless> R\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: init_segment_def less_sets_def)"], ["proof (state)\nthis:\n  T = S \\<union> R\n  S \\<lless> R\n\ngoal (1 subgoal):\n 1. init_segment S T \\<and> n \\<in> T \\<Longrightarrow>\n    init_segment (insert n S) T", "then"], ["proof (chain)\npicking this:\n  T = S \\<union> R\n  S \\<lless> R", "have \"S\\<union>R = insert n (S \\<union> (R-{n})) \\<and> insert n S \\<lless> R-{n}\""], ["proof (prove)\nusing this:\n  T = S \\<union> R\n  S \\<lless> R\n\ngoal (1 subgoal):\n 1. S \\<union> R = insert n (S \\<union> (R - {n})) \\<and>\n    insert n S \\<lless> R - {n}", "unfolding less_sets_def"], ["proof (prove)\nusing this:\n  T = S \\<union> R\n  \\<forall>x\\<in>S. \\<forall>y\\<in>R. x < y\n\ngoal (1 subgoal):\n 1. S \\<union> R = insert n (S \\<union> (R - {n})) \\<and>\n    (\\<forall>x\\<in>insert n S. \\<forall>y\\<in>R - {n}. x < y)", "using rhs TS nat_less_le"], ["proof (prove)\nusing this:\n  T = S \\<union> R\n  \\<forall>x\\<in>S. \\<forall>y\\<in>R. x < y\n  init_segment S T \\<and> n \\<in> T\n  ?x \\<in> T - S \\<Longrightarrow> n \\<le> ?x\n  (?m < ?n) = (?m \\<le> ?n \\<and> ?m \\<noteq> ?n)\n\ngoal (1 subgoal):\n 1. S \\<union> R = insert n (S \\<union> (R - {n})) \\<and>\n    (\\<forall>x\\<in>insert n S. \\<forall>y\\<in>R - {n}. x < y)", "by auto"], ["proof (state)\nthis:\n  S \\<union> R = insert n (S \\<union> (R - {n})) \\<and>\n  insert n S \\<lless> R - {n}\n\ngoal (1 subgoal):\n 1. init_segment S T \\<and> n \\<in> T \\<Longrightarrow>\n    init_segment (insert n S) T", "then"], ["proof (chain)\npicking this:\n  S \\<union> R = insert n (S \\<union> (R - {n})) \\<and>\n  insert n S \\<lless> R - {n}", "show \"init_segment (insert n S) T\""], ["proof (prove)\nusing this:\n  S \\<union> R = insert n (S \\<union> (R - {n})) \\<and>\n  insert n S \\<lless> R - {n}\n\ngoal (1 subgoal):\n 1. init_segment (insert n S) T", "using R init_segment_Un"], ["proof (prove)\nusing this:\n  S \\<union> R = insert n (S \\<union> (R - {n})) \\<and>\n  insert n S \\<lless> R - {n}\n  T = S \\<union> R\n  S \\<lless> R\n  ?S \\<lless> ?S' \\<Longrightarrow> init_segment ?S (?S \\<union> ?S')\n\ngoal (1 subgoal):\n 1. init_segment (insert n S) T", "by force"], ["proof (state)\nthis:\n  init_segment (insert n S) T\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma init_segment_insert:\n  assumes \"init_segment S T\" and T: \"T \\<lless> {n}\"\n  shows \"init_segment S (insert n T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. init_segment S (insert n T)", "proof (cases \"T={}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. T = {} \\<Longrightarrow> init_segment S (insert n T)\n 2. T \\<noteq> {} \\<Longrightarrow> init_segment S (insert n T)", "case False"], ["proof (state)\nthis:\n  T \\<noteq> {}\n\ngoal (2 subgoals):\n 1. T = {} \\<Longrightarrow> init_segment S (insert n T)\n 2. T \\<noteq> {} \\<Longrightarrow> init_segment S (insert n T)", "obtain S' where S': \"T = S \\<union> S'\" \"S \\<lless> S'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>S'.\n        \\<lbrakk>T = S \\<union> S'; S \\<lless> S'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson assms init_segment_def)"], ["proof (state)\nthis:\n  T = S \\<union> S'\n  S \\<lless> S'\n\ngoal (2 subgoals):\n 1. T = {} \\<Longrightarrow> init_segment S (insert n T)\n 2. T \\<noteq> {} \\<Longrightarrow> init_segment S (insert n T)", "then"], ["proof (chain)\npicking this:\n  T = S \\<union> S'\n  S \\<lless> S'", "have \"insert n T = S \\<union> (insert n S')\" \"S \\<lless> (insert n S')\""], ["proof (prove)\nusing this:\n  T = S \\<union> S'\n  S \\<lless> S'\n\ngoal (1 subgoal):\n 1. insert n T = S \\<union> insert n S' &&& S \\<lless> insert n S'", "using T False"], ["proof (prove)\nusing this:\n  T = S \\<union> S'\n  S \\<lless> S'\n  T \\<lless> {n}\n  T \\<noteq> {}\n\ngoal (1 subgoal):\n 1. insert n T = S \\<union> insert n S' &&& S \\<lless> insert n S'", "by (auto simp: less_sets_def)"], ["proof (state)\nthis:\n  insert n T = S \\<union> insert n S'\n  S \\<lless> insert n S'\n\ngoal (2 subgoals):\n 1. T = {} \\<Longrightarrow> init_segment S (insert n T)\n 2. T \\<noteq> {} \\<Longrightarrow> init_segment S (insert n T)", "then"], ["proof (chain)\npicking this:\n  insert n T = S \\<union> insert n S'\n  S \\<lless> insert n S'", "show ?thesis"], ["proof (prove)\nusing this:\n  insert n T = S \\<union> insert n S'\n  S \\<lless> insert n S'\n\ngoal (1 subgoal):\n 1. init_segment S (insert n T)", "using init_segment_Un"], ["proof (prove)\nusing this:\n  insert n T = S \\<union> insert n S'\n  S \\<lless> insert n S'\n  ?S \\<lless> ?S' \\<Longrightarrow> init_segment ?S (?S \\<union> ?S')\n\ngoal (1 subgoal):\n 1. init_segment S (insert n T)", "by presburger"], ["proof (state)\nthis:\n  init_segment S (insert n T)\n\ngoal (1 subgoal):\n 1. T = {} \\<Longrightarrow> init_segment S (insert n T)", "qed (use assms in auto)"], ["", "subsection \\<open>Definitions and basic properties\\<close>"], ["", "definition Ramsey :: \"[nat set set, nat] \\<Rightarrow> bool\"\n  where \"Ramsey \\<F> r \\<equiv> \\<forall>f \\<in> \\<F> \\<rightarrow> {..<r}.\n                       \\<forall>M. infinite M \\<longrightarrow>\n                           (\\<exists>N i. N \\<subseteq> M \\<and> infinite N \\<and> i<r \\<and> (\\<forall>j<r. j\\<noteq>i \\<longrightarrow> f -` {j} \\<inter> \\<F> \\<inter> Pow N = {}))\""], ["", "definition thin_set :: \"nat set set \\<Rightarrow> bool\"\n  where \"thin_set \\<F> \\<equiv> \\<F> \\<subseteq> Collect finite \\<and> (\\<forall>S\\<in>\\<F>. \\<forall>T\\<in>\\<F>. init_segment S T \\<longrightarrow> S=T)\""], ["", "definition comparables :: \"nat set \\<Rightarrow> nat set \\<Rightarrow> nat set set\"\n  where \"comparables S M \\<equiv> {T. finite T \\<and> (init_segment T S \\<or> init_segment S T \\<and> T-S \\<subseteq> M)}\""], ["", "lemma comparables_iff: \"T \\<in> comparables S M \\<longleftrightarrow> finite T \\<and> (init_segment T S \\<or> init_segment S T \\<and> T \\<subseteq> S \\<union> M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (T \\<in> comparables S M) =\n    (finite T \\<and>\n     (init_segment T S \\<or>\n      init_segment S T \\<and> T \\<subseteq> S \\<union> M))", "by (auto simp: comparables_def init_segment_def)"], ["", "lemma comparables_subset: \"\\<Union>(comparables S M) \\<subseteq> S \\<union> M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (comparables S M) \\<subseteq> S \\<union> M", "by (auto simp: comparables_def init_segment_def)"], ["", "lemma comparables_empty [simp]: \"comparables {} M = Fpow M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. comparables {} M = Fpow M", "by (auto simp: comparables_def Fpow_def)"], ["", "lemma comparables_mono: \"N \\<subseteq> M \\<Longrightarrow> comparables S N \\<subseteq> comparables S M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N \\<subseteq> M \\<Longrightarrow>\n    comparables S N \\<subseteq> comparables S M", "by (auto simp: comparables_def)"], ["", "definition \"rejects \\<F> S M \\<equiv> comparables S M \\<inter> \\<F> = {}\""], ["", "abbreviation accepts\n  where \"accepts \\<F> S M \\<equiv> \\<not> rejects \\<F> S M\""], ["", "definition strongly_accepts\n  where \"strongly_accepts \\<F> S M \\<equiv> (\\<forall>N\\<subseteq>M. rejects \\<F> S N \\<longrightarrow> finite N)\""], ["", "definition decides\n  where \"decides \\<F> S M \\<equiv> rejects \\<F> S M \\<or> strongly_accepts \\<F> S M\""], ["", "definition decides_subsets\n  where \"decides_subsets \\<F> M \\<equiv> \\<forall>T. T \\<subseteq> M \\<longrightarrow> finite T \\<longrightarrow> decides \\<F> T M\""], ["", "lemma strongly_accepts_imp_accepts:\n  \"\\<lbrakk>strongly_accepts \\<F> S M; infinite M\\<rbrakk> \\<Longrightarrow> accepts \\<F> S M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>strongly_accepts \\<F> S M; infinite M\\<rbrakk>\n    \\<Longrightarrow> accepts \\<F> S M", "unfolding strongly_accepts_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>N\\<subseteq>M.\n                rejects \\<F> S N \\<longrightarrow> finite N;\n     infinite M\\<rbrakk>\n    \\<Longrightarrow> accepts \\<F> S M", "by blast"], ["", "lemma rejects_trivial: \"\\<lbrakk>rejects \\<F> S M; thin_set \\<F>; init_segment F S; F \\<in> \\<F>\\<rbrakk> \\<Longrightarrow> False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>rejects \\<F> S M; thin_set \\<F>; init_segment F S;\n     F \\<in> \\<F>\\<rbrakk>\n    \\<Longrightarrow> False", "unfolding rejects_def thin_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>comparables S M \\<inter> \\<F> = {};\n     \\<F> \\<subseteq> Collect finite \\<and>\n     (\\<forall>S\\<in>\\<F>.\n         \\<forall>T\\<in>\\<F>. init_segment S T \\<longrightarrow> S = T);\n     init_segment F S; F \\<in> \\<F>\\<rbrakk>\n    \\<Longrightarrow> False", "using comparables_iff"], ["proof (prove)\nusing this:\n  (?T \\<in> comparables ?S ?M) =\n  (finite ?T \\<and>\n   (init_segment ?T ?S \\<or>\n    init_segment ?S ?T \\<and> ?T \\<subseteq> ?S \\<union> ?M))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>comparables S M \\<inter> \\<F> = {};\n     \\<F> \\<subseteq> Collect finite \\<and>\n     (\\<forall>S\\<in>\\<F>.\n         \\<forall>T\\<in>\\<F>. init_segment S T \\<longrightarrow> S = T);\n     init_segment F S; F \\<in> \\<F>\\<rbrakk>\n    \\<Longrightarrow> False", "by blast"], ["", "lemma rejects_subset: \"\\<lbrakk>rejects \\<F> S M; N \\<subseteq> M\\<rbrakk> \\<Longrightarrow> rejects \\<F> S N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>rejects \\<F> S M; N \\<subseteq> M\\<rbrakk>\n    \\<Longrightarrow> rejects \\<F> S N", "by (fastforce simp add: rejects_def comparables_def)"], ["", "lemma strongly_accepts_subset: \"\\<lbrakk>strongly_accepts \\<F> S M; N \\<subseteq> M\\<rbrakk> \\<Longrightarrow> strongly_accepts \\<F> S N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>strongly_accepts \\<F> S M; N \\<subseteq> M\\<rbrakk>\n    \\<Longrightarrow> strongly_accepts \\<F> S N", "by (auto simp: strongly_accepts_def)"], ["", "lemma decides_subset: \"\\<lbrakk>decides \\<F> S M; N \\<subseteq> M\\<rbrakk> \\<Longrightarrow> decides \\<F> S N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>decides \\<F> S M; N \\<subseteq> M\\<rbrakk>\n    \\<Longrightarrow> decides \\<F> S N", "unfolding decides_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>rejects \\<F> S M \\<or> strongly_accepts \\<F> S M;\n     N \\<subseteq> M\\<rbrakk>\n    \\<Longrightarrow> rejects \\<F> S N \\<or> strongly_accepts \\<F> S N", "using rejects_subset strongly_accepts_subset"], ["proof (prove)\nusing this:\n  \\<lbrakk>rejects ?\\<F> ?S ?M; ?N \\<subseteq> ?M\\<rbrakk>\n  \\<Longrightarrow> rejects ?\\<F> ?S ?N\n  \\<lbrakk>strongly_accepts ?\\<F> ?S ?M; ?N \\<subseteq> ?M\\<rbrakk>\n  \\<Longrightarrow> strongly_accepts ?\\<F> ?S ?N\n\ngoal (1 subgoal):\n 1. \\<lbrakk>rejects \\<F> S M \\<or> strongly_accepts \\<F> S M;\n     N \\<subseteq> M\\<rbrakk>\n    \\<Longrightarrow> rejects \\<F> S N \\<or> strongly_accepts \\<F> S N", "by blast"], ["", "lemma decides_subsets_subset: \"\\<lbrakk>decides_subsets \\<F> M; N \\<subseteq> M\\<rbrakk> \\<Longrightarrow> decides_subsets \\<F> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>decides_subsets \\<F> M; N \\<subseteq> M\\<rbrakk>\n    \\<Longrightarrow> decides_subsets \\<F> N", "by (meson decides_subset decides_subsets_def subset_trans)"], ["", "lemma rejects_empty [simp]: \"rejects \\<F> {} M \\<longleftrightarrow> Fpow M \\<inter> \\<F> = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rejects \\<F> {} M = (Fpow M \\<inter> \\<F> = {})", "by (auto simp: rejects_def comparables_def Fpow_def)"], ["", "lemma strongly_accepts_empty [simp]: \"strongly_accepts \\<F> {} M \\<longleftrightarrow> (\\<forall>N\\<subseteq>M. Fpow N \\<inter> \\<F> = {} \\<longrightarrow> finite N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strongly_accepts \\<F> {} M =\n    (\\<forall>N\\<subseteq>M.\n        Fpow N \\<inter> \\<F> = {} \\<longrightarrow> finite N)", "by (simp add: strongly_accepts_def Fpow_def disjoint_iff)"], ["", "lemma ex_infinite_decides_1:\n  assumes \"infinite M\"\n  obtains N where \"N \\<subseteq> M\" \"infinite N\" \"decides \\<F> S N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N; decides \\<F> S N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson assms decides_def order_refl strongly_accepts_def)"], ["", "proposition ex_infinite_decides_finite:\n  assumes \"infinite M\" \"finite S\"\n  obtains N where \"N \\<subseteq> M\" \"infinite N\" \"\\<And>T. T \\<subseteq> S \\<Longrightarrow> decides \\<F> T N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         \\<And>T.\n            T \\<subseteq> S \\<Longrightarrow> decides \\<F> T N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         \\<And>T.\n            T \\<subseteq> S \\<Longrightarrow> decides \\<F> T N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"finite (Pow S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (Pow S)", "by (simp add: \\<open>finite S\\<close>)"], ["proof (state)\nthis:\n  finite (Pow S)\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         \\<And>T.\n            T \\<subseteq> S \\<Longrightarrow> decides \\<F> T N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  finite (Pow S)", "obtain f :: \"nat \\<Rightarrow> nat set\" where f: \"f ` {..< card (Pow S)} = Pow S\""], ["proof (prove)\nusing this:\n  finite (Pow S)\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        f ` {..<card (Pow S)} = Pow S \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis bij_betw_imp_surj_on [OF bij_betw_from_nat_into_finite])"], ["proof (state)\nthis:\n  f ` {..<card (Pow S)} = Pow S\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         \\<And>T.\n            T \\<subseteq> S \\<Longrightarrow> decides \\<F> T N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain M0 where M0: \"infinite M0\" \"M0 \\<subseteq> M\" \"decides \\<F> (f 0) M0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>M0.\n        \\<lbrakk>infinite M0; M0 \\<subseteq> M;\n         decides \\<F> (f 0) M0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson \\<open>infinite M\\<close> ex_infinite_decides_1)"], ["proof (state)\nthis:\n  infinite M0\n  M0 \\<subseteq> M\n  decides \\<F> (f 0) M0\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         \\<And>T.\n            T \\<subseteq> S \\<Longrightarrow> decides \\<F> T N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define F where \"F \\<equiv> rec_nat M0 (\\<lambda>n N. @N'. N' \\<subseteq> N \\<and> infinite N' \\<and> decides \\<F> (f (Suc n)) N')\""], ["proof (state)\nthis:\n  F \\<equiv>\n  rec_nat M0\n   (\\<lambda>n N.\n       SOME N'.\n          N' \\<subseteq> N \\<and>\n          infinite N' \\<and> decides \\<F> (f (Suc n)) N')\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         \\<And>T.\n            T \\<subseteq> S \\<Longrightarrow> decides \\<F> T N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have P_Suc: \"F (Suc n) = (@N'. N' \\<subseteq> F n \\<and> infinite N' \\<and> decides \\<F> (f (Suc n)) N')\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. F (Suc n) =\n    (SOME N'.\n        N' \\<subseteq> F n \\<and>\n        infinite N' \\<and> decides \\<F> (f (Suc n)) N')", "by (auto simp: F_def)"], ["proof (state)\nthis:\n  F (Suc ?n) =\n  (SOME N'.\n      N' \\<subseteq> F ?n \\<and>\n      infinite N' \\<and> decides \\<F> (f (Suc ?n)) N')\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         \\<And>T.\n            T \\<subseteq> S \\<Longrightarrow> decides \\<F> T N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have *: \"infinite (F n) \\<and> decides \\<F> (f n) (F n) \\<and> F n \\<subseteq> M\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite (F n) \\<and> decides \\<F> (f n) (F n) \\<and> F n \\<subseteq> M", "proof (induction n)"], ["proof (state)\ngoal (2 subgoals):\n 1. infinite (F 0) \\<and> decides \\<F> (f 0) (F 0) \\<and> F 0 \\<subseteq> M\n 2. \\<And>n.\n       infinite (F n) \\<and>\n       decides \\<F> (f n) (F n) \\<and> F n \\<subseteq> M \\<Longrightarrow>\n       infinite (F (Suc n)) \\<and>\n       decides \\<F> (f (Suc n)) (F (Suc n)) \\<and> F (Suc n) \\<subseteq> M", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. infinite (F 0) \\<and> decides \\<F> (f 0) (F 0) \\<and> F 0 \\<subseteq> M\n 2. \\<And>n.\n       infinite (F n) \\<and>\n       decides \\<F> (f n) (F n) \\<and> F n \\<subseteq> M \\<Longrightarrow>\n       infinite (F (Suc n)) \\<and>\n       decides \\<F> (f (Suc n)) (F (Suc n)) \\<and> F (Suc n) \\<subseteq> M", "with \\<open>infinite M\\<close>"], ["proof (chain)\npicking this:\n  infinite M", "show ?case"], ["proof (prove)\nusing this:\n  infinite M\n\ngoal (1 subgoal):\n 1. infinite (F 0) \\<and> decides \\<F> (f 0) (F 0) \\<and> F 0 \\<subseteq> M", "by (auto simp: F_def M0)"], ["proof (state)\nthis:\n  infinite (F 0) \\<and> decides \\<F> (f 0) (F 0) \\<and> F 0 \\<subseteq> M\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       infinite (F n) \\<and>\n       decides \\<F> (f n) (F n) \\<and> F n \\<subseteq> M \\<Longrightarrow>\n       infinite (F (Suc n)) \\<and>\n       decides \\<F> (f (Suc n)) (F (Suc n)) \\<and> F (Suc n) \\<subseteq> M", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       infinite (F n) \\<and>\n       decides \\<F> (f n) (F n) \\<and> F n \\<subseteq> M \\<Longrightarrow>\n       infinite (F (Suc n)) \\<and>\n       decides \\<F> (f (Suc n)) (F (Suc n)) \\<and> F (Suc n) \\<subseteq> M", "case (Suc n)"], ["proof (state)\nthis:\n  infinite (F n) \\<and> decides \\<F> (f n) (F n) \\<and> F n \\<subseteq> M\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       infinite (F n) \\<and>\n       decides \\<F> (f n) (F n) \\<and> F n \\<subseteq> M \\<Longrightarrow>\n       infinite (F (Suc n)) \\<and>\n       decides \\<F> (f (Suc n)) (F (Suc n)) \\<and> F (Suc n) \\<subseteq> M", "let ?\\<Phi> = \"\\<lambda>N'. N' \\<subseteq> F n \\<and> infinite N' \\<and> decides \\<F> (f (Suc n)) N'\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       infinite (F n) \\<and>\n       decides \\<F> (f n) (F n) \\<and> F n \\<subseteq> M \\<Longrightarrow>\n       infinite (F (Suc n)) \\<and>\n       decides \\<F> (f (Suc n)) (F (Suc n)) \\<and> F (Suc n) \\<subseteq> M", "have \"\\<exists>N'. ?\\<Phi> N'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>N'\\<subseteq>F n.\n       infinite N' \\<and> decides \\<F> (f (Suc n)) N'", "by (meson Suc ex_infinite_decides_1 subset_trans)"], ["proof (state)\nthis:\n  \\<exists>N'\\<subseteq>F n. infinite N' \\<and> decides \\<F> (f (Suc n)) N'\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       infinite (F n) \\<and>\n       decides \\<F> (f n) (F n) \\<and> F n \\<subseteq> M \\<Longrightarrow>\n       infinite (F (Suc n)) \\<and>\n       decides \\<F> (f (Suc n)) (F (Suc n)) \\<and> F (Suc n) \\<subseteq> M", "then"], ["proof (chain)\npicking this:\n  \\<exists>N'\\<subseteq>F n. infinite N' \\<and> decides \\<F> (f (Suc n)) N'", "have \"Eps ?\\<Phi> \\<subseteq> F n \\<and> infinite (Eps ?\\<Phi>) \\<and> decides \\<F> (f (Suc n)) (Eps ?\\<Phi>)\""], ["proof (prove)\nusing this:\n  \\<exists>N'\\<subseteq>F n. infinite N' \\<and> decides \\<F> (f (Suc n)) N'\n\ngoal (1 subgoal):\n 1. (SOME N'.\n        N' \\<subseteq> F n \\<and>\n        infinite N' \\<and> decides \\<F> (f (Suc n)) N')\n    \\<subseteq> F n \\<and>\n    infinite\n     (SOME N'.\n         N' \\<subseteq> F n \\<and>\n         infinite N' \\<and> decides \\<F> (f (Suc n)) N') \\<and>\n    decides \\<F> (f (Suc n))\n     (SOME N'.\n         N' \\<subseteq> F n \\<and>\n         infinite N' \\<and> decides \\<F> (f (Suc n)) N')", "by (rule someI_ex)"], ["proof (state)\nthis:\n  (SOME N'.\n      N' \\<subseteq> F n \\<and>\n      infinite N' \\<and> decides \\<F> (f (Suc n)) N')\n  \\<subseteq> F n \\<and>\n  infinite\n   (SOME N'.\n       N' \\<subseteq> F n \\<and>\n       infinite N' \\<and> decides \\<F> (f (Suc n)) N') \\<and>\n  decides \\<F> (f (Suc n))\n   (SOME N'.\n       N' \\<subseteq> F n \\<and>\n       infinite N' \\<and> decides \\<F> (f (Suc n)) N')\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       infinite (F n) \\<and>\n       decides \\<F> (f n) (F n) \\<and> F n \\<subseteq> M \\<Longrightarrow>\n       infinite (F (Suc n)) \\<and>\n       decides \\<F> (f (Suc n)) (F (Suc n)) \\<and> F (Suc n) \\<subseteq> M", "with Suc.IH"], ["proof (chain)\npicking this:\n  infinite (F n) \\<and> decides \\<F> (f n) (F n) \\<and> F n \\<subseteq> M\n  (SOME N'.\n      N' \\<subseteq> F n \\<and>\n      infinite N' \\<and> decides \\<F> (f (Suc n)) N')\n  \\<subseteq> F n \\<and>\n  infinite\n   (SOME N'.\n       N' \\<subseteq> F n \\<and>\n       infinite N' \\<and> decides \\<F> (f (Suc n)) N') \\<and>\n  decides \\<F> (f (Suc n))\n   (SOME N'.\n       N' \\<subseteq> F n \\<and>\n       infinite N' \\<and> decides \\<F> (f (Suc n)) N')", "show ?case"], ["proof (prove)\nusing this:\n  infinite (F n) \\<and> decides \\<F> (f n) (F n) \\<and> F n \\<subseteq> M\n  (SOME N'.\n      N' \\<subseteq> F n \\<and>\n      infinite N' \\<and> decides \\<F> (f (Suc n)) N')\n  \\<subseteq> F n \\<and>\n  infinite\n   (SOME N'.\n       N' \\<subseteq> F n \\<and>\n       infinite N' \\<and> decides \\<F> (f (Suc n)) N') \\<and>\n  decides \\<F> (f (Suc n))\n   (SOME N'.\n       N' \\<subseteq> F n \\<and>\n       infinite N' \\<and> decides \\<F> (f (Suc n)) N')\n\ngoal (1 subgoal):\n 1. infinite (F (Suc n)) \\<and>\n    decides \\<F> (f (Suc n)) (F (Suc n)) \\<and> F (Suc n) \\<subseteq> M", "by (auto simp: P_Suc)"], ["proof (state)\nthis:\n  infinite (F (Suc n)) \\<and>\n  decides \\<F> (f (Suc n)) (F (Suc n)) \\<and> F (Suc n) \\<subseteq> M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  infinite (F ?n) \\<and>\n  decides \\<F> (f ?n) (F ?n) \\<and> F ?n \\<subseteq> M\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         \\<And>T.\n            T \\<subseteq> S \\<Longrightarrow> decides \\<F> T N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  infinite (F ?n) \\<and>\n  decides \\<F> (f ?n) (F ?n) \\<and> F ?n \\<subseteq> M", "have telescope: \"F (Suc n) \\<subseteq> F n\" for n"], ["proof (prove)\nusing this:\n  infinite (F ?n) \\<and>\n  decides \\<F> (f ?n) (F ?n) \\<and> F ?n \\<subseteq> M\n\ngoal (1 subgoal):\n 1. F (Suc n) \\<subseteq> F n", "unfolding P_Suc"], ["proof (prove)\nusing this:\n  infinite (F ?n) \\<and>\n  decides \\<F> (f ?n) (F ?n) \\<and> F ?n \\<subseteq> M\n\ngoal (1 subgoal):\n 1. (SOME N'.\n        N' \\<subseteq> F n \\<and>\n        infinite N' \\<and> decides \\<F> (f (Suc n)) N')\n    \\<subseteq> F n", "by (metis (no_types, lifting) ex_infinite_decides_1 someI_ex)"], ["proof (state)\nthis:\n  F (Suc ?n) \\<subseteq> F ?n\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         \\<And>T.\n            T \\<subseteq> S \\<Longrightarrow> decides \\<F> T N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "let ?N = \"\\<Inter>n<card (Pow S). F n\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         \\<And>T.\n            T \\<subseteq> S \\<Longrightarrow> decides \\<F> T N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. ?N \\<subseteq> M\n 2. infinite ?N\n 3. \\<And>T. T \\<subseteq> S \\<Longrightarrow> decides \\<F> T ?N", "show \"?N \\<subseteq> M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Inter> (F ` {..<card (Pow S)}) \\<subseteq> M", "by (metis \"*\" INF_lower2 Pow_iff f imageE order_refl)"], ["proof (state)\nthis:\n  \\<Inter> (F ` {..<card (Pow S)}) \\<subseteq> M\n\ngoal (2 subgoals):\n 1. infinite (\\<Inter> (F ` {..<card (Pow S)}))\n 2. \\<And>T.\n       T \\<subseteq> S \\<Longrightarrow>\n       decides \\<F> T (\\<Inter> (F ` {..<card (Pow S)}))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. infinite (\\<Inter> (F ` {..<card (Pow S)}))\n 2. \\<And>T.\n       T \\<subseteq> S \\<Longrightarrow>\n       decides \\<F> T (\\<Inter> (F ` {..<card (Pow S)}))", "have eq: \"(\\<Inter>n\\<le>m. F n) = F m\" for m"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Inter> (F ` {..m}) = F m", "by (induction m) (use telescope in \\<open>auto simp: atMost_Suc\\<close>)"], ["proof (state)\nthis:\n  \\<Inter> (F ` {..?m}) = F ?m\n\ngoal (2 subgoals):\n 1. infinite (\\<Inter> (F ` {..<card (Pow S)}))\n 2. \\<And>T.\n       T \\<subseteq> S \\<Longrightarrow>\n       decides \\<F> T (\\<Inter> (F ` {..<card (Pow S)}))", "then"], ["proof (chain)\npicking this:\n  \\<Inter> (F ` {..?m}) = F ?m", "show \"infinite ?N\""], ["proof (prove)\nusing this:\n  \\<Inter> (F ` {..?m}) = F ?m\n\ngoal (1 subgoal):\n 1. infinite (\\<Inter> (F ` {..<card (Pow S)}))", "by (metis \"*\" Suc_le_D Suc_le_eq finite_subset le_INF_iff lessThan_Suc_atMost lessThan_iff)"], ["proof (state)\nthis:\n  infinite (\\<Inter> (F ` {..<card (Pow S)}))\n\ngoal (1 subgoal):\n 1. \\<And>T.\n       T \\<subseteq> S \\<Longrightarrow>\n       decides \\<F> T (\\<Inter> (F ` {..<card (Pow S)}))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>T.\n       T \\<subseteq> S \\<Longrightarrow>\n       decides \\<F> T (\\<Inter> (F ` {..<card (Pow S)}))", "fix T"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>T.\n       T \\<subseteq> S \\<Longrightarrow>\n       decides \\<F> T (\\<Inter> (F ` {..<card (Pow S)}))", "assume \"T \\<subseteq> S\""], ["proof (state)\nthis:\n  T \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<And>T.\n       T \\<subseteq> S \\<Longrightarrow>\n       decides \\<F> T (\\<Inter> (F ` {..<card (Pow S)}))", "then"], ["proof (chain)\npicking this:\n  T \\<subseteq> S", "obtain m where \"f m = T\" \"m < card (Pow S)\""], ["proof (prove)\nusing this:\n  T \\<subseteq> S\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>f m = T; m < card (Pow S)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using f"], ["proof (prove)\nusing this:\n  T \\<subseteq> S\n  f ` {..<card (Pow S)} = Pow S\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>f m = T; m < card (Pow S)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (blast elim: equalityE)"], ["proof (state)\nthis:\n  f m = T\n  m < card (Pow S)\n\ngoal (1 subgoal):\n 1. \\<And>T.\n       T \\<subseteq> S \\<Longrightarrow>\n       decides \\<F> T (\\<Inter> (F ` {..<card (Pow S)}))", "then"], ["proof (chain)\npicking this:\n  f m = T\n  m < card (Pow S)", "show \"decides \\<F> T ?N\""], ["proof (prove)\nusing this:\n  f m = T\n  m < card (Pow S)\n\ngoal (1 subgoal):\n 1. decides \\<F> T (\\<Inter> (F ` {..<card (Pow S)}))", "by (metis \"*\" INT_lower decides_subset lessThan_iff)"], ["proof (state)\nthis:\n  decides \\<F> T (\\<Inter> (F ` {..<card (Pow S)}))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sorted_wrt_subset: \"\\<lbrakk>X \\<in> list.set l; sorted_wrt (\\<le>) l\\<rbrakk> \\<Longrightarrow> hd l \\<subseteq> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<in> set l; sorted_wrt (\\<subseteq>) l\\<rbrakk>\n    \\<Longrightarrow> hd l \\<subseteq> X", "by (induction l) auto"], ["", "text \\<open>Todor?evi?'s Lemma 1.18\\<close>"], ["", "proposition ex_infinite_decides_subsets:\n  assumes \"thin_set \\<F>\" \"infinite M\"\n  obtains N where \"N \\<subseteq> M\" \"infinite N\" \"decides_subsets \\<F> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         decides_subsets \\<F> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         decides_subsets \\<F> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain M0 where M0: \"infinite M0\" \"M0 \\<subseteq> M\" \"decides \\<F> {} M0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>M0.\n        \\<lbrakk>infinite M0; M0 \\<subseteq> M; decides \\<F> {} M0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson \\<open>infinite M\\<close> ex_infinite_decides_1)"], ["proof (state)\nthis:\n  infinite M0\n  M0 \\<subseteq> M\n  decides \\<F> {} M0\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         decides_subsets \\<F> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define decides_all where \"decides_all \\<equiv> \\<lambda>S N. \\<forall>T \\<subseteq> S. decides \\<F> T N\""], ["proof (state)\nthis:\n  decides_all \\<equiv>\n  \\<lambda>S N. \\<forall>T\\<subseteq>S. decides \\<F> T N\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         decides_subsets \\<F> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define \\<Phi> where \"\\<Phi> \\<equiv> \\<lambda>NL N. N \\<subseteq> hd NL \\<and> Inf N > Inf (hd NL) \\<and> infinite N \\<and> decides_all (List.set (map Inf NL)) N\""], ["proof (state)\nthis:\n  \\<Phi> \\<equiv>\n  \\<lambda>NL N.\n     N \\<subseteq> hd NL \\<and>\n     Inf (hd NL) < Inf N \\<and>\n     infinite N \\<and> decides_all (set (map Inf NL)) N\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         decides_subsets \\<F> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<exists>N. \\<Phi> NL N\" if \"infinite (hd NL)\" for NL"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>N. \\<Phi> NL N", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>N. \\<Phi> NL N", "obtain N where N: \"N \\<subseteq> hd NL \\<and> infinite N \\<and> decides_all (List.set (map Inf NL)) N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>N.\n        N \\<subseteq> hd NL \\<and>\n        infinite N \\<and> decides_all (set (map Inf NL)) N \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding \\<Phi>_def decides_all_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>N.\n        N \\<subseteq> hd NL \\<and>\n        infinite N \\<and>\n        (\\<forall>T\\<subseteq>set (map Inf NL).\n            decides \\<F> T N) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis List.finite_set ex_infinite_decides_finite \\<open>infinite (hd NL)\\<close>)"], ["proof (state)\nthis:\n  N \\<subseteq> hd NL \\<and>\n  infinite N \\<and> decides_all (set (map Inf NL)) N\n\ngoal (1 subgoal):\n 1. \\<exists>N. \\<Phi> NL N", "then"], ["proof (chain)\npicking this:\n  N \\<subseteq> hd NL \\<and>\n  infinite N \\<and> decides_all (set (map Inf NL)) N", "have \"Inf (N \\<inter> {Inf (hd NL)<..}) > Inf (hd NL)\""], ["proof (prove)\nusing this:\n  N \\<subseteq> hd NL \\<and>\n  infinite N \\<and> decides_all (set (map Inf NL)) N\n\ngoal (1 subgoal):\n 1. Inf (hd NL) < Inf (N \\<inter> {Inf (hd NL)<..})", "by (metis Inf_nat_def1 Int_iff finite.emptyI finite_nat_Int_greaterThan_iff greaterThan_iff)"], ["proof (state)\nthis:\n  Inf (hd NL) < Inf (N \\<inter> {Inf (hd NL)<..})\n\ngoal (1 subgoal):\n 1. \\<exists>N. \\<Phi> NL N", "then"], ["proof (chain)\npicking this:\n  Inf (hd NL) < Inf (N \\<inter> {Inf (hd NL)<..})", "show ?thesis"], ["proof (prove)\nusing this:\n  Inf (hd NL) < Inf (N \\<inter> {Inf (hd NL)<..})\n\ngoal (1 subgoal):\n 1. \\<exists>N. \\<Phi> NL N", "unfolding \\<Phi>_def decides_all_def"], ["proof (prove)\nusing this:\n  Inf (hd NL) < Inf (N \\<inter> {Inf (hd NL)<..})\n\ngoal (1 subgoal):\n 1. \\<exists>N\\<subseteq>hd NL.\n       Inf (hd NL) < Inf N \\<and>\n       infinite N \\<and>\n       (\\<forall>T\\<subseteq>set (map Inf NL). decides \\<F> T N)", "by (meson Int_lower1 N decides_all_def decides_subset finite_nat_Int_greaterThan_iff subset_trans)"], ["proof (state)\nthis:\n  \\<exists>N. \\<Phi> NL N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  infinite (hd ?NL) \\<Longrightarrow> \\<exists>N. \\<Phi> ?NL N\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         decides_subsets \\<F> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  infinite (hd ?NL) \\<Longrightarrow> \\<exists>N. \\<Phi> ?NL N", "have \\<Phi>_Eps: \"\\<Phi> NL (Eps (\\<Phi> NL))\" if \"infinite (hd NL)\" for NL"], ["proof (prove)\nusing this:\n  infinite (hd ?NL) \\<Longrightarrow> \\<exists>N. \\<Phi> ?NL N\n\ngoal (1 subgoal):\n 1. \\<Phi> NL (Eps (\\<Phi> NL))", "by (simp add: someI_ex that)"], ["proof (state)\nthis:\n  infinite (hd ?NL) \\<Longrightarrow> \\<Phi> ?NL (Eps (\\<Phi> ?NL))\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         decides_subsets \\<F> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define F where \"F \\<equiv> rec_nat [M0] (\\<lambda>n NL. (Eps (\\<Phi> NL)) # NL)\""], ["proof (state)\nthis:\n  F \\<equiv> rec_nat [M0] (\\<lambda>n NL. Eps (\\<Phi> NL) # NL)\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         decides_subsets \\<F> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have F_simps [simp]: \"F 0 = [M0]\" \"F (Suc n) = Eps (\\<Phi> (F n)) # F n\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. F 0 = [M0] &&& F (Suc n) = Eps (\\<Phi> (F n)) # F n", "by (auto simp: F_def)"], ["proof (state)\nthis:\n  F 0 = [M0]\n  F (Suc ?n) = Eps (\\<Phi> (F ?n)) # F ?n\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         decides_subsets \\<F> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have F: \"F n \\<noteq> [] \\<and> sorted_wrt (\\<le>) (F n) \\<and> list.set (F n) \\<subseteq> Collect infinite \\<and> list.set (F n) \\<subseteq> Pow M\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. F n \\<noteq> [] \\<and>\n    sorted_wrt (\\<subseteq>) (F n) \\<and>\n    set (F n) \\<subseteq> {S. infinite S} \\<and> set (F n) \\<subseteq> Pow M", "proof (induction n)"], ["proof (state)\ngoal (2 subgoals):\n 1. F 0 \\<noteq> [] \\<and>\n    sorted_wrt (\\<subseteq>) (F 0) \\<and>\n    set (F 0) \\<subseteq> {S. infinite S} \\<and> set (F 0) \\<subseteq> Pow M\n 2. \\<And>n.\n       F n \\<noteq> [] \\<and>\n       sorted_wrt (\\<subseteq>) (F n) \\<and>\n       set (F n) \\<subseteq> {S. infinite S} \\<and>\n       set (F n) \\<subseteq> Pow M \\<Longrightarrow>\n       F (Suc n) \\<noteq> [] \\<and>\n       sorted_wrt (\\<subseteq>) (F (Suc n)) \\<and>\n       set (F (Suc n)) \\<subseteq> {S. infinite S} \\<and>\n       set (F (Suc n)) \\<subseteq> Pow M", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. F 0 \\<noteq> [] \\<and>\n    sorted_wrt (\\<subseteq>) (F 0) \\<and>\n    set (F 0) \\<subseteq> {S. infinite S} \\<and> set (F 0) \\<subseteq> Pow M\n 2. \\<And>n.\n       F n \\<noteq> [] \\<and>\n       sorted_wrt (\\<subseteq>) (F n) \\<and>\n       set (F n) \\<subseteq> {S. infinite S} \\<and>\n       set (F n) \\<subseteq> Pow M \\<Longrightarrow>\n       F (Suc n) \\<noteq> [] \\<and>\n       sorted_wrt (\\<subseteq>) (F (Suc n)) \\<and>\n       set (F (Suc n)) \\<subseteq> {S. infinite S} \\<and>\n       set (F (Suc n)) \\<subseteq> Pow M", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. F 0 \\<noteq> [] \\<and>\n    sorted_wrt (\\<subseteq>) (F 0) \\<and>\n    set (F 0) \\<subseteq> {S. infinite S} \\<and> set (F 0) \\<subseteq> Pow M", "by (simp add: M0)"], ["proof (state)\nthis:\n  F 0 \\<noteq> [] \\<and>\n  sorted_wrt (\\<subseteq>) (F 0) \\<and>\n  set (F 0) \\<subseteq> {S. infinite S} \\<and> set (F 0) \\<subseteq> Pow M\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       F n \\<noteq> [] \\<and>\n       sorted_wrt (\\<subseteq>) (F n) \\<and>\n       set (F n) \\<subseteq> {S. infinite S} \\<and>\n       set (F n) \\<subseteq> Pow M \\<Longrightarrow>\n       F (Suc n) \\<noteq> [] \\<and>\n       sorted_wrt (\\<subseteq>) (F (Suc n)) \\<and>\n       set (F (Suc n)) \\<subseteq> {S. infinite S} \\<and>\n       set (F (Suc n)) \\<subseteq> Pow M", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       F n \\<noteq> [] \\<and>\n       sorted_wrt (\\<subseteq>) (F n) \\<and>\n       set (F n) \\<subseteq> {S. infinite S} \\<and>\n       set (F n) \\<subseteq> Pow M \\<Longrightarrow>\n       F (Suc n) \\<noteq> [] \\<and>\n       sorted_wrt (\\<subseteq>) (F (Suc n)) \\<and>\n       set (F (Suc n)) \\<subseteq> {S. infinite S} \\<and>\n       set (F (Suc n)) \\<subseteq> Pow M", "case (Suc n)"], ["proof (state)\nthis:\n  F n \\<noteq> [] \\<and>\n  sorted_wrt (\\<subseteq>) (F n) \\<and>\n  set (F n) \\<subseteq> {S. infinite S} \\<and> set (F n) \\<subseteq> Pow M\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       F n \\<noteq> [] \\<and>\n       sorted_wrt (\\<subseteq>) (F n) \\<and>\n       set (F n) \\<subseteq> {S. infinite S} \\<and>\n       set (F n) \\<subseteq> Pow M \\<Longrightarrow>\n       F (Suc n) \\<noteq> [] \\<and>\n       sorted_wrt (\\<subseteq>) (F (Suc n)) \\<and>\n       set (F (Suc n)) \\<subseteq> {S. infinite S} \\<and>\n       set (F (Suc n)) \\<subseteq> Pow M", "then"], ["proof (chain)\npicking this:\n  F n \\<noteq> [] \\<and>\n  sorted_wrt (\\<subseteq>) (F n) \\<and>\n  set (F n) \\<subseteq> {S. infinite S} \\<and> set (F n) \\<subseteq> Pow M", "have *: \"\\<Phi> (F n) (Eps (\\<Phi> (F n)))\""], ["proof (prove)\nusing this:\n  F n \\<noteq> [] \\<and>\n  sorted_wrt (\\<subseteq>) (F n) \\<and>\n  set (F n) \\<subseteq> {S. infinite S} \\<and> set (F n) \\<subseteq> Pow M\n\ngoal (1 subgoal):\n 1. \\<Phi> (F n) (Eps (\\<Phi> (F n)))", "using \\<Phi>_Eps hd_in_set"], ["proof (prove)\nusing this:\n  F n \\<noteq> [] \\<and>\n  sorted_wrt (\\<subseteq>) (F n) \\<and>\n  set (F n) \\<subseteq> {S. infinite S} \\<and> set (F n) \\<subseteq> Pow M\n  infinite (hd ?NL) \\<Longrightarrow> \\<Phi> ?NL (Eps (\\<Phi> ?NL))\n  ?xs \\<noteq> [] \\<Longrightarrow> hd ?xs \\<in> set ?xs\n\ngoal (1 subgoal):\n 1. \\<Phi> (F n) (Eps (\\<Phi> (F n)))", "by blast"], ["proof (state)\nthis:\n  \\<Phi> (F n) (Eps (\\<Phi> (F n)))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       F n \\<noteq> [] \\<and>\n       sorted_wrt (\\<subseteq>) (F n) \\<and>\n       set (F n) \\<subseteq> {S. infinite S} \\<and>\n       set (F n) \\<subseteq> Pow M \\<Longrightarrow>\n       F (Suc n) \\<noteq> [] \\<and>\n       sorted_wrt (\\<subseteq>) (F (Suc n)) \\<and>\n       set (F (Suc n)) \\<subseteq> {S. infinite S} \\<and>\n       set (F (Suc n)) \\<subseteq> Pow M", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. F (Suc n) \\<noteq> [] \\<and>\n    sorted_wrt (\\<subseteq>) (F (Suc n)) \\<and>\n    set (F (Suc n)) \\<subseteq> {S. infinite S} \\<and>\n    set (F (Suc n)) \\<subseteq> Pow M", "proof (intro conjI)"], ["proof (state)\ngoal (4 subgoals):\n 1. F (Suc n) \\<noteq> []\n 2. sorted_wrt (\\<subseteq>) (F (Suc n))\n 3. set (F (Suc n)) \\<subseteq> {S. infinite S}\n 4. set (F (Suc n)) \\<subseteq> Pow M", "show \"sorted_wrt (\\<subseteq>) (F (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_wrt (\\<subseteq>) (F (Suc n))", "using subset_trans [OF _ sorted_wrt_subset] Suc.IH \\<Phi>_def \"*\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?A \\<subseteq> hd ?l1; ?C \\<in> set ?l1;\n   sorted_wrt (\\<subseteq>) ?l1\\<rbrakk>\n  \\<Longrightarrow> ?A \\<subseteq> ?C\n  F n \\<noteq> [] \\<and>\n  sorted_wrt (\\<subseteq>) (F n) \\<and>\n  set (F n) \\<subseteq> {S. infinite S} \\<and> set (F n) \\<subseteq> Pow M\n  \\<Phi> \\<equiv>\n  \\<lambda>NL N.\n     N \\<subseteq> hd NL \\<and>\n     Inf (hd NL) < Inf N \\<and>\n     infinite N \\<and> decides_all (set (map Inf NL)) N\n  \\<Phi> (F n) (Eps (\\<Phi> (F n)))\n\ngoal (1 subgoal):\n 1. sorted_wrt (\\<subseteq>) (F (Suc n))", "by auto"], ["proof (state)\nthis:\n  sorted_wrt (\\<subseteq>) (F (Suc n))\n\ngoal (3 subgoals):\n 1. F (Suc n) \\<noteq> []\n 2. set (F (Suc n)) \\<subseteq> {S. infinite S}\n 3. set (F (Suc n)) \\<subseteq> Pow M", "show \"list.set (F (Suc n)) \\<subseteq> {S. infinite S}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (F (Suc n)) \\<subseteq> {S. infinite S}", "using \"*\" \\<Phi>_def Suc.IH"], ["proof (prove)\nusing this:\n  \\<Phi> (F n) (Eps (\\<Phi> (F n)))\n  \\<Phi> \\<equiv>\n  \\<lambda>NL N.\n     N \\<subseteq> hd NL \\<and>\n     Inf (hd NL) < Inf N \\<and>\n     infinite N \\<and> decides_all (set (map Inf NL)) N\n  F n \\<noteq> [] \\<and>\n  sorted_wrt (\\<subseteq>) (F n) \\<and>\n  set (F n) \\<subseteq> {S. infinite S} \\<and> set (F n) \\<subseteq> Pow M\n\ngoal (1 subgoal):\n 1. set (F (Suc n)) \\<subseteq> {S. infinite S}", "by force"], ["proof (state)\nthis:\n  set (F (Suc n)) \\<subseteq> {S. infinite S}\n\ngoal (2 subgoals):\n 1. F (Suc n) \\<noteq> []\n 2. set (F (Suc n)) \\<subseteq> Pow M", "show \"list.set (F (Suc n)) \\<subseteq> Pow M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (F (Suc n)) \\<subseteq> Pow M", "using \"*\" Suc.IH \\<Phi>_def hd_in_set"], ["proof (prove)\nusing this:\n  \\<Phi> (F n) (Eps (\\<Phi> (F n)))\n  F n \\<noteq> [] \\<and>\n  sorted_wrt (\\<subseteq>) (F n) \\<and>\n  set (F n) \\<subseteq> {S. infinite S} \\<and> set (F n) \\<subseteq> Pow M\n  \\<Phi> \\<equiv>\n  \\<lambda>NL N.\n     N \\<subseteq> hd NL \\<and>\n     Inf (hd NL) < Inf N \\<and>\n     infinite N \\<and> decides_all (set (map Inf NL)) N\n  ?xs \\<noteq> [] \\<Longrightarrow> hd ?xs \\<in> set ?xs\n\ngoal (1 subgoal):\n 1. set (F (Suc n)) \\<subseteq> Pow M", "by force"], ["proof (state)\nthis:\n  set (F (Suc n)) \\<subseteq> Pow M\n\ngoal (1 subgoal):\n 1. F (Suc n) \\<noteq> []", "qed auto"], ["proof (state)\nthis:\n  F (Suc n) \\<noteq> [] \\<and>\n  sorted_wrt (\\<subseteq>) (F (Suc n)) \\<and>\n  set (F (Suc n)) \\<subseteq> {S. infinite S} \\<and>\n  set (F (Suc n)) \\<subseteq> Pow M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  F ?n \\<noteq> [] \\<and>\n  sorted_wrt (\\<subseteq>) (F ?n) \\<and>\n  set (F ?n) \\<subseteq> {S. infinite S} \\<and> set (F ?n) \\<subseteq> Pow M\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         decides_subsets \\<F> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \\<Phi>F: \"\\<Phi> (F n) (Eps (\\<Phi> (F n)))\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Phi> (F n) (Eps (\\<Phi> (F n)))", "using F \\<Phi>_Eps hd_in_set"], ["proof (prove)\nusing this:\n  F ?n \\<noteq> [] \\<and>\n  sorted_wrt (\\<subseteq>) (F ?n) \\<and>\n  set (F ?n) \\<subseteq> {S. infinite S} \\<and> set (F ?n) \\<subseteq> Pow M\n  infinite (hd ?NL) \\<Longrightarrow> \\<Phi> ?NL (Eps (\\<Phi> ?NL))\n  ?xs \\<noteq> [] \\<Longrightarrow> hd ?xs \\<in> set ?xs\n\ngoal (1 subgoal):\n 1. \\<Phi> (F n) (Eps (\\<Phi> (F n)))", "by blast"], ["proof (state)\nthis:\n  \\<Phi> (F ?n) (Eps (\\<Phi> (F ?n)))\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         decides_subsets \\<F> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<Phi> (F ?n) (Eps (\\<Phi> (F ?n)))", "have decides: \"decides_all (List.set (map Inf (F n))) (Eps (\\<Phi> (F n)))\" for n"], ["proof (prove)\nusing this:\n  \\<Phi> (F ?n) (Eps (\\<Phi> (F ?n)))\n\ngoal (1 subgoal):\n 1. decides_all (set (map Inf (F n))) (Eps (\\<Phi> (F n)))", "using \\<Phi>_def"], ["proof (prove)\nusing this:\n  \\<Phi> (F ?n) (Eps (\\<Phi> (F ?n)))\n  \\<Phi> \\<equiv>\n  \\<lambda>NL N.\n     N \\<subseteq> hd NL \\<and>\n     Inf (hd NL) < Inf N \\<and>\n     infinite N \\<and> decides_all (set (map Inf NL)) N\n\ngoal (1 subgoal):\n 1. decides_all (set (map Inf (F n))) (Eps (\\<Phi> (F n)))", "by blast"], ["proof (state)\nthis:\n  decides_all (set (map Inf (F ?n))) (Eps (\\<Phi> (F ?n)))\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         decides_subsets \\<F> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have Eps_subset_hd: \"Eps (\\<Phi> (F n)) \\<subseteq> hd (F n) \" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. Eps (\\<Phi> (F n)) \\<subseteq> hd (F n)", "using \\<Phi>F \\<Phi>_def"], ["proof (prove)\nusing this:\n  \\<Phi> (F ?n) (Eps (\\<Phi> (F ?n)))\n  \\<Phi> \\<equiv>\n  \\<lambda>NL N.\n     N \\<subseteq> hd NL \\<and>\n     Inf (hd NL) < Inf N \\<and>\n     infinite N \\<and> decides_all (set (map Inf NL)) N\n\ngoal (1 subgoal):\n 1. Eps (\\<Phi> (F n)) \\<subseteq> hd (F n)", "by blast"], ["proof (state)\nthis:\n  Eps (\\<Phi> (F ?n)) \\<subseteq> hd (F ?n)\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         decides_subsets \\<F> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"List.set (map Inf (F n)) \\<subseteq> List.set (map Inf (F (Suc n)))\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. set (map Inf (F n)) \\<subseteq> set (map Inf (F (Suc n)))", "by auto"], ["proof (state)\nthis:\n  set (map Inf (F ?n)) \\<subseteq> set (map Inf (F (Suc ?n)))\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         decides_subsets \\<F> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  set (map Inf (F ?n)) \\<subseteq> set (map Inf (F (Suc ?n)))", "have map_Inf_subset: \"m \\<le> n \\<Longrightarrow> List.set (map Inf (F m)) \\<subseteq> List.set (map Inf (F n))\" for m n"], ["proof (prove)\nusing this:\n  set (map Inf (F ?n)) \\<subseteq> set (map Inf (F (Suc ?n)))\n\ngoal (1 subgoal):\n 1. m \\<le> n \\<Longrightarrow>\n    set (map Inf (F m)) \\<subseteq> set (map Inf (F n))", "by (rule order_class.lift_Suc_mono_le) auto"], ["proof (state)\nthis:\n  ?m \\<le> ?n \\<Longrightarrow>\n  set (map Inf (F ?m)) \\<subseteq> set (map Inf (F ?n))\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         decides_subsets \\<F> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define mmap where \"mmap \\<equiv> \\<lambda>n. Inf (hd (F (Suc n)))\""], ["proof (state)\nthis:\n  mmap \\<equiv> \\<lambda>n. Inf (hd (F (Suc n)))\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         decides_subsets \\<F> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"mmap n < mmap (Suc n)\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. mmap n < mmap (Suc n)", "by (metis F_simps(2) \\<Phi>F \\<Phi>_def list.sel(1) mmap_def)"], ["proof (state)\nthis:\n  mmap ?n < mmap (Suc ?n)\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         decides_subsets \\<F> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  mmap ?n < mmap (Suc ?n)", "have \"strict_mono mmap\""], ["proof (prove)\nusing this:\n  mmap ?n < mmap (Suc ?n)\n\ngoal (1 subgoal):\n 1. strict_mono mmap", "by (simp add: lift_Suc_mono_less strict_mono_def)"], ["proof (state)\nthis:\n  strict_mono mmap\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         decides_subsets \\<F> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  strict_mono mmap", "have \"inj mmap\""], ["proof (prove)\nusing this:\n  strict_mono mmap\n\ngoal (1 subgoal):\n 1. inj mmap", "by (simp add: strict_mono_imp_inj_on)"], ["proof (state)\nthis:\n  inj mmap\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         decides_subsets \\<F> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have finite_F_bound: \"\\<exists>n. S \\<subseteq> List.set (map Inf (F n))\"\n    if S: \"S \\<subseteq> range mmap\" \"finite S\" for S"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n. S \\<subseteq> set (map Inf (F n))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>n. S \\<subseteq> set (map Inf (F n))", "obtain K where \"finite K\" \"S \\<subseteq> mmap ` K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>K.\n        \\<lbrakk>finite K; S \\<subseteq> mmap ` K\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis S finite_subset_image order_refl)"], ["proof (state)\nthis:\n  finite K\n  S \\<subseteq> mmap ` K\n\ngoal (1 subgoal):\n 1. \\<exists>n. S \\<subseteq> set (map Inf (F n))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n. S \\<subseteq> set (map Inf (F n))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. S \\<subseteq> set (map Inf (F ?n))", "have \"mmap ` K \\<subseteq> list.set (map Inf (F (Suc (Max K))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mmap ` K \\<subseteq> set (map Inf (F (Suc (Max K))))", "unfolding mmap_def image_subset_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>K.\n       Inf (hd (F (Suc x))) \\<in> set (map Inf (F (Suc (Max K))))", "by (metis F Max_ge \\<open>finite K\\<close> hd_in_set imageI map_Inf_subset not_less_eq_eq set_map subsetD)"], ["proof (state)\nthis:\n  mmap ` K \\<subseteq> set (map Inf (F (Suc (Max K))))\n\ngoal (1 subgoal):\n 1. S \\<subseteq> set (map Inf (F ?n))", "with S"], ["proof (chain)\npicking this:\n  S \\<subseteq> range mmap\n  finite S\n  mmap ` K \\<subseteq> set (map Inf (F (Suc (Max K))))", "show \"S \\<subseteq> list.set (map Inf (F (Suc (Max K))))\""], ["proof (prove)\nusing this:\n  S \\<subseteq> range mmap\n  finite S\n  mmap ` K \\<subseteq> set (map Inf (F (Suc (Max K))))\n\ngoal (1 subgoal):\n 1. S \\<subseteq> set (map Inf (F (Suc (Max K))))", "using \\<open>S \\<subseteq> mmap ` K\\<close>"], ["proof (prove)\nusing this:\n  S \\<subseteq> range mmap\n  finite S\n  mmap ` K \\<subseteq> set (map Inf (F (Suc (Max K))))\n  S \\<subseteq> mmap ` K\n\ngoal (1 subgoal):\n 1. S \\<subseteq> set (map Inf (F (Suc (Max K))))", "by auto"], ["proof (state)\nthis:\n  S \\<subseteq> set (map Inf (F (Suc (Max K))))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>n. S \\<subseteq> set (map Inf (F n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?S \\<subseteq> range mmap; finite ?S\\<rbrakk>\n  \\<Longrightarrow> \\<exists>n. ?S \\<subseteq> set (map Inf (F n))\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         decides_subsets \\<F> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"Eps (\\<Phi> (F (Suc n))) \\<subseteq> Eps (\\<Phi> (F n))\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. Eps (\\<Phi> (F (Suc n))) \\<subseteq> Eps (\\<Phi> (F n))", "by (metis F_simps(2) \\<Phi>F \\<Phi>_def list.sel(1))"], ["proof (state)\nthis:\n  Eps (\\<Phi> (F (Suc ?n))) \\<subseteq> Eps (\\<Phi> (F ?n))\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         decides_subsets \\<F> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  Eps (\\<Phi> (F (Suc ?n))) \\<subseteq> Eps (\\<Phi> (F ?n))", "have Eps_\\<Phi>_decreasing: \"m \\<le> n \\<Longrightarrow> Eps (\\<Phi> (F n)) \\<subseteq> Eps (\\<Phi> (F m))\" for m n"], ["proof (prove)\nusing this:\n  Eps (\\<Phi> (F (Suc ?n))) \\<subseteq> Eps (\\<Phi> (F ?n))\n\ngoal (1 subgoal):\n 1. m \\<le> n \\<Longrightarrow>\n    Eps (\\<Phi> (F n)) \\<subseteq> Eps (\\<Phi> (F m))", "by (rule order_class.lift_Suc_antimono_le)"], ["proof (state)\nthis:\n  ?m \\<le> ?n \\<Longrightarrow>\n  Eps (\\<Phi> (F ?n)) \\<subseteq> Eps (\\<Phi> (F ?m))\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         decides_subsets \\<F> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have hd_Suc_eq_Eps: \"hd (F (Suc n)) = Eps (\\<Phi> (F n))\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. hd (F (Suc n)) = Eps (\\<Phi> (F n))", "by simp"], ["proof (state)\nthis:\n  hd (F (Suc ?n)) = Eps (\\<Phi> (F ?n))\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         decides_subsets \\<F> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have Inf_hd_in_hd: \"Inf (hd (F n)) \\<in> hd (F n)\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf (hd (F n)) \\<in> hd (F n)", "by (metis Inf_nat_def1 \\<Phi>F \\<Phi>_def finite.emptyI rev_finite_subset)"], ["proof (state)\nthis:\n  Inf (hd (F ?n)) \\<in> hd (F ?n)\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         decides_subsets \\<F> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  Inf (hd (F ?n)) \\<in> hd (F ?n)", "have Inf_hd_in_Eps: \"Inf (hd (F m)) \\<in> Eps (\\<Phi> (F n))\" if \"m>n\" for m n"], ["proof (prove)\nusing this:\n  Inf (hd (F ?n)) \\<in> hd (F ?n)\n\ngoal (1 subgoal):\n 1. Inf (hd (F m)) \\<in> Eps (\\<Phi> (F n))", "by (metis Eps_\\<Phi>_decreasing Nat.lessE leD mmap_def not_less_eq_eq subsetD that hd_Suc_eq_Eps)"], ["proof (state)\nthis:\n  ?n < ?m \\<Longrightarrow> Inf (hd (F ?m)) \\<in> Eps (\\<Phi> (F ?n))\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         decides_subsets \\<F> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  ?n < ?m \\<Longrightarrow> Inf (hd (F ?m)) \\<in> Eps (\\<Phi> (F ?n))", "have image_mmap_subset_hd_F: \"mmap ` {n..} \\<subseteq> hd (F (Suc n))\" for n"], ["proof (prove)\nusing this:\n  ?n < ?m \\<Longrightarrow> Inf (hd (F ?m)) \\<in> Eps (\\<Phi> (F ?n))\n\ngoal (1 subgoal):\n 1. mmap ` {n..} \\<subseteq> hd (F (Suc n))", "by (metis hd_Suc_eq_Eps atLeast_iff image_subsetI le_imp_less_Suc mmap_def)"], ["proof (state)\nthis:\n  mmap ` {?n..} \\<subseteq> hd (F (Suc ?n))\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         decides_subsets \\<F> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"list.set (F k) \\<subseteq> list.set (F n)\" if \"k \\<le> n\" for k n"], ["proof (prove)\ngoal (1 subgoal):\n 1. set (F k) \\<subseteq> set (F n)", "by (rule order_class.lift_Suc_mono_le) (use that in auto)"], ["proof (state)\nthis:\n  ?k \\<le> ?n \\<Longrightarrow> set (F ?k) \\<subseteq> set (F ?n)\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         decides_subsets \\<F> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  ?k \\<le> ?n \\<Longrightarrow> set (F ?k) \\<subseteq> set (F ?n)", "have hd_F_in_F: \"hd (F k) \\<in> list.set (F n)\" if \"k \\<le> n\" for k n"], ["proof (prove)\nusing this:\n  ?k \\<le> ?n \\<Longrightarrow> set (F ?k) \\<subseteq> set (F ?n)\n\ngoal (1 subgoal):\n 1. hd (F k) \\<in> set (F n)", "by (meson F hd_in_set subsetD that)"], ["proof (state)\nthis:\n  ?k \\<le> ?n \\<Longrightarrow> hd (F ?k) \\<in> set (F ?n)\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         decides_subsets \\<F> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. ?N \\<subseteq> M\n 2. infinite ?N\n 3. decides_subsets \\<F> ?N", "show infinite_mm: \"infinite (range mmap)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite (range mmap)", "using \\<open>inj mmap\\<close> range_inj_infinite"], ["proof (prove)\nusing this:\n  inj mmap\n  inj ?f \\<Longrightarrow> infinite (range ?f)\n\ngoal (1 subgoal):\n 1. infinite (range mmap)", "by blast"], ["proof (state)\nthis:\n  infinite (range mmap)\n\ngoal (2 subgoals):\n 1. range mmap \\<subseteq> M\n 2. decides_subsets \\<F> (range mmap)", "show \"range mmap \\<subseteq> M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range mmap \\<subseteq> M", "using Eps_subset_hd \\<open>M0 \\<subseteq> M\\<close> image_mmap_subset_hd_F"], ["proof (prove)\nusing this:\n  Eps (\\<Phi> (F ?n)) \\<subseteq> hd (F ?n)\n  M0 \\<subseteq> M\n  mmap ` {?n..} \\<subseteq> hd (F (Suc ?n))\n\ngoal (1 subgoal):\n 1. range mmap \\<subseteq> M", "by fastforce"], ["proof (state)\nthis:\n  range mmap \\<subseteq> M\n\ngoal (1 subgoal):\n 1. decides_subsets \\<F> (range mmap)", "show \"decides_subsets \\<F> (range mmap)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. decides_subsets \\<F> (range mmap)", "unfolding decides_subsets_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>T\\<subseteq>range mmap.\n       finite T \\<longrightarrow> decides \\<F> T (range mmap)", "proof (intro strip)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>T.\n       \\<lbrakk>T \\<subseteq> range mmap; finite T\\<rbrakk>\n       \\<Longrightarrow> decides \\<F> T (range mmap)", "fix S"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>T.\n       \\<lbrakk>T \\<subseteq> range mmap; finite T\\<rbrakk>\n       \\<Longrightarrow> decides \\<F> T (range mmap)", "assume \"S \\<subseteq> range mmap\" \"finite S\""], ["proof (state)\nthis:\n  S \\<subseteq> range mmap\n  finite S\n\ngoal (1 subgoal):\n 1. \\<And>T.\n       \\<lbrakk>T \\<subseteq> range mmap; finite T\\<rbrakk>\n       \\<Longrightarrow> decides \\<F> T (range mmap)", "define n where \"n \\<equiv> LEAST n. S \\<subseteq> List.set (map Inf (F n))\""], ["proof (state)\nthis:\n  n \\<equiv> LEAST n. S \\<subseteq> set (map Inf (F n))\n\ngoal (1 subgoal):\n 1. \\<And>T.\n       \\<lbrakk>T \\<subseteq> range mmap; finite T\\<rbrakk>\n       \\<Longrightarrow> decides \\<F> T (range mmap)", "have \"\\<exists>n. S \\<subseteq> List.set (map Inf (F n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n. S \\<subseteq> set (map Inf (F n))", "using \\<open>S \\<subseteq> range mmap\\<close> \\<open>finite S\\<close> finite_F_bound"], ["proof (prove)\nusing this:\n  S \\<subseteq> range mmap\n  finite S\n  \\<lbrakk>?S \\<subseteq> range mmap; finite ?S\\<rbrakk>\n  \\<Longrightarrow> \\<exists>n. ?S \\<subseteq> set (map Inf (F n))\n\ngoal (1 subgoal):\n 1. \\<exists>n. S \\<subseteq> set (map Inf (F n))", "by blast"], ["proof (state)\nthis:\n  \\<exists>n. S \\<subseteq> set (map Inf (F n))\n\ngoal (1 subgoal):\n 1. \\<And>T.\n       \\<lbrakk>T \\<subseteq> range mmap; finite T\\<rbrakk>\n       \\<Longrightarrow> decides \\<F> T (range mmap)", "then"], ["proof (chain)\npicking this:\n  \\<exists>n. S \\<subseteq> set (map Inf (F n))", "have S: \"S \\<subseteq> List.set (map Inf (F n))\" and minS: \"\\<And>m. m<n \\<Longrightarrow> \\<not> S \\<subseteq> List.set (map Inf (F m))\""], ["proof (prove)\nusing this:\n  \\<exists>n. S \\<subseteq> set (map Inf (F n))\n\ngoal (1 subgoal):\n 1. S \\<subseteq> set (map Inf (F n)) &&&\n    (\\<And>m.\n        m < n \\<Longrightarrow> \\<not> S \\<subseteq> set (map Inf (F m)))", "unfolding n_def"], ["proof (prove)\nusing this:\n  \\<exists>n. S \\<subseteq> set (map Inf (F n))\n\ngoal (1 subgoal):\n 1. S \\<subseteq> set (map Inf\n                        (F (LEAST n.\n                               S \\<subseteq> set (map Inf (F n))))) &&&\n    (\\<And>m.\n        m < (LEAST n. S \\<subseteq> set (map Inf (F n))) \\<Longrightarrow>\n        \\<not> S \\<subseteq> set (map Inf (F m)))", "by (meson LeastI_ex not_less_Least)+"], ["proof (state)\nthis:\n  S \\<subseteq> set (map Inf (F n))\n  ?m < n \\<Longrightarrow> \\<not> S \\<subseteq> set (map Inf (F ?m))\n\ngoal (1 subgoal):\n 1. \\<And>T.\n       \\<lbrakk>T \\<subseteq> range mmap; finite T\\<rbrakk>\n       \\<Longrightarrow> decides \\<F> T (range mmap)", "have decides_Fn: \"decides \\<F> S (Eps (\\<Phi> (F n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. decides \\<F> S (Eps (\\<Phi> (F n)))", "using S decides decides_all_def"], ["proof (prove)\nusing this:\n  S \\<subseteq> set (map Inf (F n))\n  decides_all (set (map Inf (F ?n))) (Eps (\\<Phi> (F ?n)))\n  decides_all \\<equiv>\n  \\<lambda>S N. \\<forall>T\\<subseteq>S. decides \\<F> T N\n\ngoal (1 subgoal):\n 1. decides \\<F> S (Eps (\\<Phi> (F n)))", "by blast"], ["proof (state)\nthis:\n  decides \\<F> S (Eps (\\<Phi> (F n)))\n\ngoal (1 subgoal):\n 1. \\<And>T.\n       \\<lbrakk>T \\<subseteq> range mmap; finite T\\<rbrakk>\n       \\<Longrightarrow> decides \\<F> T (range mmap)", "show \"decides \\<F> S (range mmap)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. decides \\<F> S (range mmap)", "proof (cases \"n=0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> decides \\<F> S (range mmap)\n 2. n \\<noteq> 0 \\<Longrightarrow> decides \\<F> S (range mmap)", "case True"], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> decides \\<F> S (range mmap)\n 2. n \\<noteq> 0 \\<Longrightarrow> decides \\<F> S (range mmap)", "then"], ["proof (chain)\npicking this:\n  n = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  n = 0\n\ngoal (1 subgoal):\n 1. decides \\<F> S (range mmap)", "by (metis image_mmap_subset_hd_F decides_Fn decides_subset hd_Suc_eq_Eps atLeast_0)"], ["proof (state)\nthis:\n  decides \\<F> S (range mmap)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> decides \\<F> S (range mmap)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> decides \\<F> S (range mmap)", "case False"], ["proof (state)\nthis:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> decides \\<F> S (range mmap)", "have notin_map_Inf: \"x \\<notin> List.set (map Inf (F n))\" if \"S \\<lless> {x}\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> set (map Inf (F n))", "proof clarsimp"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>x = Inf xa; xa \\<in> set (F n)\\<rbrakk>\n       \\<Longrightarrow> False", "fix T"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>x = Inf xa; xa \\<in> set (F n)\\<rbrakk>\n       \\<Longrightarrow> False", "assume \"x = Inf T\" and \"T \\<in> list.set (F n)\""], ["proof (state)\nthis:\n  x = Inf T\n  T \\<in> set (F n)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>x = Inf xa; xa \\<in> set (F n)\\<rbrakk>\n       \\<Longrightarrow> False", "with that"], ["proof (chain)\npicking this:\n  S \\<lless> {x}\n  x = Inf T\n  T \\<in> set (F n)", "have ls: \"S \\<lless> {Inf T}\""], ["proof (prove)\nusing this:\n  S \\<lless> {x}\n  x = Inf T\n  T \\<in> set (F n)\n\ngoal (1 subgoal):\n 1. S \\<lless> {Inf T}", "by auto"], ["proof (state)\nthis:\n  S \\<lless> {Inf T}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>x = Inf xa; xa \\<in> set (F n)\\<rbrakk>\n       \\<Longrightarrow> False", "have \"S \\<subseteq> List.set (map Inf (F j))\"\n            if  T: \"T \\<in> list.set (F (Suc j))\" for j"], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<subseteq> set (map Inf (F j))", "proof clarsimp"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> S \\<Longrightarrow> x \\<in> Inf ` set (F j)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> S \\<Longrightarrow> x \\<in> Inf ` set (F j)", "assume \"x \\<in> S\""], ["proof (state)\nthis:\n  x \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> S \\<Longrightarrow> x \\<in> Inf ` set (F j)", "then"], ["proof (chain)\npicking this:\n  x \\<in> S", "have \"x < Inf T\""], ["proof (prove)\nusing this:\n  x \\<in> S\n\ngoal (1 subgoal):\n 1. x < Inf T", "using less_setsD ls"], ["proof (prove)\nusing this:\n  x \\<in> S\n  \\<lbrakk>?A \\<lless> ?B; ?a \\<in> ?A; ?b \\<in> ?B\\<rbrakk>\n  \\<Longrightarrow> ?a < ?b\n  S \\<lless> {Inf T}\n\ngoal (1 subgoal):\n 1. x < Inf T", "by blast"], ["proof (state)\nthis:\n  x < Inf T\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> S \\<Longrightarrow> x \\<in> Inf ` set (F j)", "then"], ["proof (chain)\npicking this:\n  x < Inf T", "have \"x \\<notin> T\""], ["proof (prove)\nusing this:\n  x < Inf T\n\ngoal (1 subgoal):\n 1. x \\<notin> T", "using Inf_nat_def not_less_Least"], ["proof (prove)\nusing this:\n  x < Inf T\n  Inf ?X = (LEAST n. n \\<in> ?X)\n  ?k < (LEAST x. ?P x) \\<Longrightarrow> \\<not> ?P ?k\n\ngoal (1 subgoal):\n 1. x \\<notin> T", "by auto"], ["proof (state)\nthis:\n  x \\<notin> T\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> S \\<Longrightarrow> x \\<in> Inf ` set (F j)", "obtain k where k: \"x = mmap k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k. x = mmap k \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using \\<open>S \\<subseteq> range mmap\\<close> \\<open>x \\<in> S\\<close>"], ["proof (prove)\nusing this:\n  S \\<subseteq> range mmap\n  x \\<in> S\n\ngoal (1 subgoal):\n 1. (\\<And>k. x = mmap k \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  x = mmap k\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> S \\<Longrightarrow> x \\<in> Inf ` set (F j)", "with T \\<open>x < Inf T\\<close>"], ["proof (chain)\npicking this:\n  T \\<in> set (F (Suc j))\n  x < Inf T\n  x = mmap k", "have \"k < j\""], ["proof (prove)\nusing this:\n  T \\<in> set (F (Suc j))\n  x < Inf T\n  x = mmap k\n\ngoal (1 subgoal):\n 1. k < j", "by (metis Eps_\\<Phi>_decreasing F Inf_hd_in_hd hd_Suc_eq_Eps \\<open>x \\<notin> T\\<close> mmap_def not_le sorted_wrt_subset subsetD)"], ["proof (state)\nthis:\n  k < j\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> S \\<Longrightarrow> x \\<in> Inf ` set (F j)", "then"], ["proof (chain)\npicking this:\n  k < j", "have \"Eps (\\<Phi> (F k)) \\<in> list.set (F j)\""], ["proof (prove)\nusing this:\n  k < j\n\ngoal (1 subgoal):\n 1. Eps (\\<Phi> (F k)) \\<in> set (F j)", "by (metis Suc_leI hd_Suc_eq_Eps hd_F_in_F)"], ["proof (state)\nthis:\n  Eps (\\<Phi> (F k)) \\<in> set (F j)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> S \\<Longrightarrow> x \\<in> Inf ` set (F j)", "then"], ["proof (chain)\npicking this:\n  Eps (\\<Phi> (F k)) \\<in> set (F j)", "show \"x \\<in> Inf ` list.set (F j)\""], ["proof (prove)\nusing this:\n  Eps (\\<Phi> (F k)) \\<in> set (F j)\n\ngoal (1 subgoal):\n 1. x \\<in> Inf ` set (F j)", "by (auto simp: k image_iff mmap_def)"], ["proof (state)\nthis:\n  x \\<in> Inf ` set (F j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  T \\<in> set (F (Suc ?j)) \\<Longrightarrow>\n  S \\<subseteq> set (map Inf (F ?j))\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>x = Inf xa; xa \\<in> set (F n)\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  T \\<in> set (F (Suc ?j)) \\<Longrightarrow>\n  S \\<subseteq> set (map Inf (F ?j))", "obtain m where \"m<n\" \"S \\<subseteq> List.set (map Inf (F m))\""], ["proof (prove)\nusing this:\n  T \\<in> set (F (Suc ?j)) \\<Longrightarrow>\n  S \\<subseteq> set (map Inf (F ?j))\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>m < n; S \\<subseteq> set (map Inf (F m))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>n \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  T \\<in> set (F (Suc ?j)) \\<Longrightarrow>\n  S \\<subseteq> set (map Inf (F ?j))\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>m < n; S \\<subseteq> set (map Inf (F m))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis \\<open>T \\<in> list.set (F n)\\<close> lessI less_Suc_eq_0_disj)"], ["proof (state)\nthis:\n  m < n\n  S \\<subseteq> set (map Inf (F m))\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>x = Inf xa; xa \\<in> set (F n)\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  m < n\n  S \\<subseteq> set (map Inf (F m))", "show False"], ["proof (prove)\nusing this:\n  m < n\n  S \\<subseteq> set (map Inf (F m))\n\ngoal (1 subgoal):\n 1. False", "using minS"], ["proof (prove)\nusing this:\n  m < n\n  S \\<subseteq> set (map Inf (F m))\n  ?m < n \\<Longrightarrow> \\<not> S \\<subseteq> set (map Inf (F ?m))\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  S \\<lless> {?x} \\<Longrightarrow> ?x \\<notin> set (map Inf (F n))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> decides \\<F> S (range mmap)", "have Inf_hd_F: \"Inf (hd (F m)) \\<in> Eps (\\<Phi> (F n))\" if \"S \\<lless> {Inf (hd (F m))}\" for m"], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf (hd (F m)) \\<in> Eps (\\<Phi> (F n))", "by (metis Inf_hd_in_Eps hd_F_in_F notin_map_Inf imageI leI set_map that)"], ["proof (state)\nthis:\n  S \\<lless> {Inf (hd (F ?m))} \\<Longrightarrow>\n  Inf (hd (F ?m)) \\<in> Eps (\\<Phi> (F n))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> decides \\<F> S (range mmap)", "have less_S: \"S \\<lless> {Inf (hd (F m))}\"\n          if \"init_segment S T\" \"Inf (hd (F m)) \\<in> T\" \"Inf (hd (F m)) \\<notin> S\" for T m"], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<lless> {Inf (hd (F m))}", "using \\<open>finite S\\<close> that"], ["proof (prove)\nusing this:\n  finite S\n  init_segment S T\n  Inf (hd (F m)) \\<in> T\n  Inf (hd (F m)) \\<notin> S\n\ngoal (1 subgoal):\n 1. S \\<lless> {Inf (hd (F m))}", "by (auto simp: init_segment_iff less_sets_def)"], ["proof (state)\nthis:\n  \\<lbrakk>init_segment S ?T; Inf (hd (F ?m)) \\<in> ?T;\n   Inf (hd (F ?m)) \\<notin> S\\<rbrakk>\n  \\<Longrightarrow> S \\<lless> {Inf (hd (F ?m))}\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> decides \\<F> S (range mmap)", "consider \"rejects \\<F> S (Eps (\\<Phi> (F n)))\" | \"strongly_accepts \\<F> S (Eps (\\<Phi> (F n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>rejects \\<F> S (Eps (\\<Phi> (F n))) \\<Longrightarrow> thesis;\n     strongly_accepts \\<F> S (Eps (\\<Phi> (F n))) \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using decides_Fn"], ["proof (prove)\nusing this:\n  decides \\<F> S (Eps (\\<Phi> (F n)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>rejects \\<F> S (Eps (\\<Phi> (F n))) \\<Longrightarrow> thesis;\n     strongly_accepts \\<F> S (Eps (\\<Phi> (F n))) \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by (auto simp: decides_def)"], ["proof (state)\nthis:\n  \\<lbrakk>rejects \\<F> S (Eps (\\<Phi> (F n))) \\<Longrightarrow> ?thesis;\n   strongly_accepts \\<F> S (Eps (\\<Phi> (F n))) \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> decides \\<F> S (range mmap)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>rejects \\<F> S (Eps (\\<Phi> (F n))) \\<Longrightarrow> ?thesis;\n   strongly_accepts \\<F> S (Eps (\\<Phi> (F n))) \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>rejects \\<F> S (Eps (\\<Phi> (F n))) \\<Longrightarrow> ?thesis;\n   strongly_accepts \\<F> S (Eps (\\<Phi> (F n))) \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. decides \\<F> S (range mmap)", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. rejects \\<F> S (Eps (\\<Phi> (F n))) \\<Longrightarrow>\n    decides \\<F> S (range mmap)\n 2. strongly_accepts \\<F> S (Eps (\\<Phi> (F n))) \\<Longrightarrow>\n    decides \\<F> S (range mmap)", "case 1"], ["proof (state)\nthis:\n  rejects \\<F> S (Eps (\\<Phi> (F n)))\n\ngoal (2 subgoals):\n 1. rejects \\<F> S (Eps (\\<Phi> (F n))) \\<Longrightarrow>\n    decides \\<F> S (range mmap)\n 2. strongly_accepts \\<F> S (Eps (\\<Phi> (F n))) \\<Longrightarrow>\n    decides \\<F> S (range mmap)", "have \"rejects \\<F> S (range mmap)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rejects \\<F> S (range mmap)", "proof (clarsimp simp: rejects_def disjoint_iff)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> comparables S (range mmap); x \\<in> \\<F>\\<rbrakk>\n       \\<Longrightarrow> False", "fix X"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> comparables S (range mmap); x \\<in> \\<F>\\<rbrakk>\n       \\<Longrightarrow> False", "assume \"X \\<in> comparables S (range mmap)\" and \"X \\<in> \\<F>\""], ["proof (state)\nthis:\n  X \\<in> comparables S (range mmap)\n  X \\<in> \\<F>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> comparables S (range mmap); x \\<in> \\<F>\\<rbrakk>\n       \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  X \\<in> comparables S (range mmap)\n  X \\<in> \\<F>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> comparables S (range mmap); x \\<in> \\<F>\\<rbrakk>\n       \\<Longrightarrow> False", "have \"\\<And>x X. \\<lbrakk>X \\<in> \\<F>; init_segment S X; x \\<in> X; x \\<notin> S; x \\<in> range mmap\\<rbrakk>\n                                \\<Longrightarrow> x \\<in> Eps (\\<Phi> (F n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x X.\n       \\<lbrakk>X \\<in> \\<F>; init_segment S X; x \\<in> X; x \\<notin> S;\n        x \\<in> range mmap\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Eps (\\<Phi> (F n))", "using less_S Inf_hd_F mmap_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>init_segment S ?T; Inf (hd (F ?m)) \\<in> ?T;\n   Inf (hd (F ?m)) \\<notin> S\\<rbrakk>\n  \\<Longrightarrow> S \\<lless> {Inf (hd (F ?m))}\n  S \\<lless> {Inf (hd (F ?m))} \\<Longrightarrow>\n  Inf (hd (F ?m)) \\<in> Eps (\\<Phi> (F n))\n  mmap \\<equiv> \\<lambda>n. Inf (hd (F (Suc n)))\n\ngoal (1 subgoal):\n 1. \\<And>x X.\n       \\<lbrakk>X \\<in> \\<F>; init_segment S X; x \\<in> X; x \\<notin> S;\n        x \\<in> range mmap\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Eps (\\<Phi> (F n))", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>?X \\<in> \\<F>; init_segment S ?X; ?x \\<in> ?X; ?x \\<notin> S;\n   ?x \\<in> range mmap\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> Eps (\\<Phi> (F n))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> comparables S (range mmap); x \\<in> \\<F>\\<rbrakk>\n       \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  X \\<in> comparables S (range mmap)\n  X \\<in> \\<F>\n  \\<lbrakk>?X \\<in> \\<F>; init_segment S ?X; ?x \\<in> ?X; ?x \\<notin> S;\n   ?x \\<in> range mmap\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> Eps (\\<Phi> (F n))", "have \"X \\<in> comparables S (Eps (\\<Phi> (F n)))\""], ["proof (prove)\nusing this:\n  X \\<in> comparables S (range mmap)\n  X \\<in> \\<F>\n  \\<lbrakk>?X \\<in> \\<F>; init_segment S ?X; ?x \\<in> ?X; ?x \\<notin> S;\n   ?x \\<in> range mmap\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> Eps (\\<Phi> (F n))\n\ngoal (1 subgoal):\n 1. X \\<in> comparables S (Eps (\\<Phi> (F n)))", "by (auto simp: comparables_def disjoint_iff subset_iff)"], ["proof (state)\nthis:\n  X \\<in> comparables S (Eps (\\<Phi> (F n)))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> comparables S (range mmap); x \\<in> \\<F>\\<rbrakk>\n       \\<Longrightarrow> False", "with 1 \\<open>X \\<in> \\<F>\\<close>"], ["proof (chain)\npicking this:\n  rejects \\<F> S (Eps (\\<Phi> (F n)))\n  X \\<in> \\<F>\n  X \\<in> comparables S (Eps (\\<Phi> (F n)))", "show False"], ["proof (prove)\nusing this:\n  rejects \\<F> S (Eps (\\<Phi> (F n)))\n  X \\<in> \\<F>\n  X \\<in> comparables S (Eps (\\<Phi> (F n)))\n\ngoal (1 subgoal):\n 1. False", "by (auto simp: rejects_def)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rejects \\<F> S (range mmap)\n\ngoal (2 subgoals):\n 1. rejects \\<F> S (Eps (\\<Phi> (F n))) \\<Longrightarrow>\n    decides \\<F> S (range mmap)\n 2. strongly_accepts \\<F> S (Eps (\\<Phi> (F n))) \\<Longrightarrow>\n    decides \\<F> S (range mmap)", "then"], ["proof (chain)\npicking this:\n  rejects \\<F> S (range mmap)", "show ?thesis"], ["proof (prove)\nusing this:\n  rejects \\<F> S (range mmap)\n\ngoal (1 subgoal):\n 1. decides \\<F> S (range mmap)", "by (auto simp: decides_def)"], ["proof (state)\nthis:\n  decides \\<F> S (range mmap)\n\ngoal (1 subgoal):\n 1. strongly_accepts \\<F> S (Eps (\\<Phi> (F n))) \\<Longrightarrow>\n    decides \\<F> S (range mmap)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. strongly_accepts \\<F> S (Eps (\\<Phi> (F n))) \\<Longrightarrow>\n    decides \\<F> S (range mmap)", "case 2"], ["proof (state)\nthis:\n  strongly_accepts \\<F> S (Eps (\\<Phi> (F n)))\n\ngoal (1 subgoal):\n 1. strongly_accepts \\<F> S (Eps (\\<Phi> (F n))) \\<Longrightarrow>\n    decides \\<F> S (range mmap)", "have False\n            if \"N \\<subseteq> range mmap\" and \"rejects \\<F> S N\" and \"infinite N\" for N"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. False", "have \"N = mmap ` {n..} \\<inter> N \\<union> mmap ` {..<n} \\<inter> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N = mmap ` {n..} \\<inter> N \\<union> mmap ` {..<n} \\<inter> N", "using in_mono that(1)"], ["proof (prove)\nusing this:\n  ?A \\<subseteq> ?B \\<Longrightarrow>\n  ?x \\<in> ?A \\<longrightarrow> ?x \\<in> ?B\n  N \\<subseteq> range mmap\n\ngoal (1 subgoal):\n 1. N = mmap ` {n..} \\<inter> N \\<union> mmap ` {..<n} \\<inter> N", "by fastforce"], ["proof (state)\nthis:\n  N = mmap ` {n..} \\<inter> N \\<union> mmap ` {..<n} \\<inter> N\n\ngoal (1 subgoal):\n 1. False", "then"], ["proof (chain)\npicking this:\n  N = mmap ` {n..} \\<inter> N \\<union> mmap ` {..<n} \\<inter> N", "have \"infinite (mmap ` {n..} \\<inter> N)\""], ["proof (prove)\nusing this:\n  N = mmap ` {n..} \\<inter> N \\<union> mmap ` {..<n} \\<inter> N\n\ngoal (1 subgoal):\n 1. infinite (mmap ` {n..} \\<inter> N)", "by (metis finite_Int finite_Un finite_imageI finite_lessThan that(3))"], ["proof (state)\nthis:\n  infinite (mmap ` {n..} \\<inter> N)\n\ngoal (1 subgoal):\n 1. False", "moreover"], ["proof (state)\nthis:\n  infinite (mmap ` {n..} \\<inter> N)\n\ngoal (1 subgoal):\n 1. False", "have \"rejects \\<F> S (mmap ` {n..} \\<inter> N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rejects \\<F> S (mmap ` {n..} \\<inter> N)", "using rejects_subset \\<open>rejects \\<F> S N\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>rejects ?\\<F> ?S ?M; ?N \\<subseteq> ?M\\<rbrakk>\n  \\<Longrightarrow> rejects ?\\<F> ?S ?N\n  rejects \\<F> S N\n\ngoal (1 subgoal):\n 1. rejects \\<F> S (mmap ` {n..} \\<inter> N)", "by fastforce"], ["proof (state)\nthis:\n  rejects \\<F> S (mmap ` {n..} \\<inter> N)\n\ngoal (1 subgoal):\n 1. False", "moreover"], ["proof (state)\nthis:\n  rejects \\<F> S (mmap ` {n..} \\<inter> N)\n\ngoal (1 subgoal):\n 1. False", "have \"mmap ` {n..} \\<inter> N \\<subseteq>Eps (\\<Phi> (F n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mmap ` {n..} \\<inter> N \\<subseteq> Eps (\\<Phi> (F n))", "using image_mmap_subset_hd_F"], ["proof (prove)\nusing this:\n  mmap ` {?n..} \\<subseteq> hd (F (Suc ?n))\n\ngoal (1 subgoal):\n 1. mmap ` {n..} \\<inter> N \\<subseteq> Eps (\\<Phi> (F n))", "by fastforce"], ["proof (state)\nthis:\n  mmap ` {n..} \\<inter> N \\<subseteq> Eps (\\<Phi> (F n))\n\ngoal (1 subgoal):\n 1. False", "ultimately"], ["proof (chain)\npicking this:\n  infinite (mmap ` {n..} \\<inter> N)\n  rejects \\<F> S (mmap ` {n..} \\<inter> N)\n  mmap ` {n..} \\<inter> N \\<subseteq> Eps (\\<Phi> (F n))", "show ?thesis"], ["proof (prove)\nusing this:\n  infinite (mmap ` {n..} \\<inter> N)\n  rejects \\<F> S (mmap ` {n..} \\<inter> N)\n  mmap ` {n..} \\<inter> N \\<subseteq> Eps (\\<Phi> (F n))\n\ngoal (1 subgoal):\n 1. False", "using 2"], ["proof (prove)\nusing this:\n  infinite (mmap ` {n..} \\<inter> N)\n  rejects \\<F> S (mmap ` {n..} \\<inter> N)\n  mmap ` {n..} \\<inter> N \\<subseteq> Eps (\\<Phi> (F n))\n  strongly_accepts \\<F> S (Eps (\\<Phi> (F n)))\n\ngoal (1 subgoal):\n 1. False", "by (auto simp: strongly_accepts_def)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?N \\<subseteq> range mmap; rejects \\<F> S ?N;\n   infinite ?N\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. strongly_accepts \\<F> S (Eps (\\<Phi> (F n))) \\<Longrightarrow>\n    decides \\<F> S (range mmap)", "with 2"], ["proof (chain)\npicking this:\n  strongly_accepts \\<F> S (Eps (\\<Phi> (F n)))\n  \\<lbrakk>?N \\<subseteq> range mmap; rejects \\<F> S ?N;\n   infinite ?N\\<rbrakk>\n  \\<Longrightarrow> False", "have \"strongly_accepts \\<F> S (range mmap)\""], ["proof (prove)\nusing this:\n  strongly_accepts \\<F> S (Eps (\\<Phi> (F n)))\n  \\<lbrakk>?N \\<subseteq> range mmap; rejects \\<F> S ?N;\n   infinite ?N\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. strongly_accepts \\<F> S (range mmap)", "by (auto simp: strongly_accepts_def)"], ["proof (state)\nthis:\n  strongly_accepts \\<F> S (range mmap)\n\ngoal (1 subgoal):\n 1. strongly_accepts \\<F> S (Eps (\\<Phi> (F n))) \\<Longrightarrow>\n    decides \\<F> S (range mmap)", "then"], ["proof (chain)\npicking this:\n  strongly_accepts \\<F> S (range mmap)", "show ?thesis"], ["proof (prove)\nusing this:\n  strongly_accepts \\<F> S (range mmap)\n\ngoal (1 subgoal):\n 1. decides \\<F> S (range mmap)", "by (auto simp: decides_def)"], ["proof (state)\nthis:\n  decides \\<F> S (range mmap)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  decides \\<F> S (range mmap)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  decides \\<F> S (range mmap)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  decides_subsets \\<F> (range mmap)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Todor?evi?'s Lemma 1.19\\<close>"], ["", "proposition strongly_accepts_1_19:\n  assumes acc: \"strongly_accepts \\<F> S M\"\n    and \"thin_set \\<F>\" \"infinite M\" \"S \\<subseteq> M\" \"finite S\"\n    and dsM: \"decides_subsets \\<F> M\"\n  shows \"finite {n \\<in> M. \\<not> strongly_accepts \\<F> (insert n S) M}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {n \\<in> M. \\<not> strongly_accepts \\<F> (insert n S) M}", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. infinite\n     {n \\<in> M.\n      \\<not> strongly_accepts \\<F> (insert n S) M} \\<Longrightarrow>\n    False", "define N where \"N = {n \\<in> M. rejects \\<F> (insert n S) M} \\<inter> {Sup S<..}\""], ["proof (state)\nthis:\n  N = {n \\<in> M. rejects \\<F> (insert n S) M} \\<inter> {Sup S<..}\n\ngoal (1 subgoal):\n 1. infinite\n     {n \\<in> M.\n      \\<not> strongly_accepts \\<F> (insert n S) M} \\<Longrightarrow>\n    False", "have \"N \\<subseteq> M\" and N: \"\\<And>n. n \\<in> N \\<longleftrightarrow> n \\<in> M \\<and> rejects \\<F> (insert n S) M \\<and> n > Sup S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N \\<subseteq> M &&&\n    (\\<And>n.\n        (n \\<in> N) =\n        (n \\<in> M \\<and> rejects \\<F> (insert n S) M \\<and> Sup S < n))", "by (auto simp: N_def)"], ["proof (state)\nthis:\n  N \\<subseteq> M\n  (?n \\<in> N) =\n  (?n \\<in> M \\<and> rejects \\<F> (insert ?n S) M \\<and> Sup S < ?n)\n\ngoal (1 subgoal):\n 1. infinite\n     {n \\<in> M.\n      \\<not> strongly_accepts \\<F> (insert n S) M} \\<Longrightarrow>\n    False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  infinite {n \\<in> M. \\<not> strongly_accepts \\<F> (insert n S) M}\n\ngoal (1 subgoal):\n 1. infinite\n     {n \\<in> M.\n      \\<not> strongly_accepts \\<F> (insert n S) M} \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  infinite {n \\<in> M. \\<not> strongly_accepts \\<F> (insert n S) M}\n\ngoal (1 subgoal):\n 1. infinite\n     {n \\<in> M.\n      \\<not> strongly_accepts \\<F> (insert n S) M} \\<Longrightarrow>\n    False", "have \"{n \\<in> M. \\<not> strongly_accepts \\<F> (insert n S) M} = {n \\<in> M. rejects \\<F> (insert n S) M}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {n \\<in> M. \\<not> strongly_accepts \\<F> (insert n S) M} =\n    {n \\<in> M. rejects \\<F> (insert n S) M}", "using dsM \\<open>finite S\\<close> \\<open>infinite M\\<close> \\<open>S \\<subseteq> M\\<close>"], ["proof (prove)\nusing this:\n  decides_subsets \\<F> M\n  finite S\n  infinite M\n  S \\<subseteq> M\n\ngoal (1 subgoal):\n 1. {n \\<in> M. \\<not> strongly_accepts \\<F> (insert n S) M} =\n    {n \\<in> M. rejects \\<F> (insert n S) M}", "unfolding decides_subsets_def"], ["proof (prove)\nusing this:\n  \\<forall>T\\<subseteq>M. finite T \\<longrightarrow> decides \\<F> T M\n  finite S\n  infinite M\n  S \\<subseteq> M\n\ngoal (1 subgoal):\n 1. {n \\<in> M. \\<not> strongly_accepts \\<F> (insert n S) M} =\n    {n \\<in> M. rejects \\<F> (insert n S) M}", "by (meson decides_def finite.insertI insert_subset strongly_accepts_imp_accepts)"], ["proof (state)\nthis:\n  {n \\<in> M. \\<not> strongly_accepts \\<F> (insert n S) M} =\n  {n \\<in> M. rejects \\<F> (insert n S) M}\n\ngoal (1 subgoal):\n 1. infinite\n     {n \\<in> M.\n      \\<not> strongly_accepts \\<F> (insert n S) M} \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  infinite {n \\<in> M. \\<not> strongly_accepts \\<F> (insert n S) M}\n  {n \\<in> M. \\<not> strongly_accepts \\<F> (insert n S) M} =\n  {n \\<in> M. rejects \\<F> (insert n S) M}", "have \"infinite {n \\<in> M. rejects \\<F> (insert n S) M}\""], ["proof (prove)\nusing this:\n  infinite {n \\<in> M. \\<not> strongly_accepts \\<F> (insert n S) M}\n  {n \\<in> M. \\<not> strongly_accepts \\<F> (insert n S) M} =\n  {n \\<in> M. rejects \\<F> (insert n S) M}\n\ngoal (1 subgoal):\n 1. infinite {n \\<in> M. rejects \\<F> (insert n S) M}", "by simp"], ["proof (state)\nthis:\n  infinite {n \\<in> M. rejects \\<F> (insert n S) M}\n\ngoal (1 subgoal):\n 1. infinite\n     {n \\<in> M.\n      \\<not> strongly_accepts \\<F> (insert n S) M} \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  infinite {n \\<in> M. rejects \\<F> (insert n S) M}", "have \"infinite N\""], ["proof (prove)\nusing this:\n  infinite {n \\<in> M. rejects \\<F> (insert n S) M}\n\ngoal (1 subgoal):\n 1. infinite N", "by (simp add: N_def finite_nat_Int_greaterThan_iff)"], ["proof (state)\nthis:\n  infinite N\n\ngoal (1 subgoal):\n 1. infinite\n     {n \\<in> M.\n      \\<not> strongly_accepts \\<F> (insert n S) M} \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  infinite N", "have \"accepts \\<F> S N\""], ["proof (prove)\nusing this:\n  infinite N\n\ngoal (1 subgoal):\n 1. accepts \\<F> S N", "using acc strongly_accepts_def \\<open>N \\<subseteq> M\\<close>"], ["proof (prove)\nusing this:\n  infinite N\n  strongly_accepts \\<F> S M\n  strongly_accepts ?\\<F> ?S ?M \\<equiv>\n  \\<forall>N\\<subseteq>?M. rejects ?\\<F> ?S N \\<longrightarrow> finite N\n  N \\<subseteq> M\n\ngoal (1 subgoal):\n 1. accepts \\<F> S N", "by blast"], ["proof (state)\nthis:\n  accepts \\<F> S N\n\ngoal (1 subgoal):\n 1. infinite\n     {n \\<in> M.\n      \\<not> strongly_accepts \\<F> (insert n S) M} \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  accepts \\<F> S N", "obtain T where T: \"T \\<in> comparables S N\" \"T \\<in> \\<F>\" and TSN: \"T \\<subseteq> S \\<union> N\""], ["proof (prove)\nusing this:\n  accepts \\<F> S N\n\ngoal (1 subgoal):\n 1. (\\<And>T.\n        \\<lbrakk>T \\<in> comparables S N; T \\<in> \\<F>;\n         T \\<subseteq> S \\<union> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding rejects_def"], ["proof (prove)\nusing this:\n  comparables S N \\<inter> \\<F> \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>T.\n        \\<lbrakk>T \\<in> comparables S N; T \\<in> \\<F>;\n         T \\<subseteq> S \\<union> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using comparables_iff init_segment_subset"], ["proof (prove)\nusing this:\n  comparables S N \\<inter> \\<F> \\<noteq> {}\n  (?T \\<in> comparables ?S ?M) =\n  (finite ?T \\<and>\n   (init_segment ?T ?S \\<or>\n    init_segment ?S ?T \\<and> ?T \\<subseteq> ?S \\<union> ?M))\n  init_segment ?S ?T \\<Longrightarrow> ?S \\<subseteq> ?T\n\ngoal (1 subgoal):\n 1. (\\<And>T.\n        \\<lbrakk>T \\<in> comparables S N; T \\<in> \\<F>;\n         T \\<subseteq> S \\<union> N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  T \\<in> comparables S N\n  T \\<in> \\<F>\n  T \\<subseteq> S \\<union> N\n\ngoal (1 subgoal):\n 1. infinite\n     {n \\<in> M.\n      \\<not> strongly_accepts \\<F> (insert n S) M} \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  T \\<in> comparables S N\n  T \\<in> \\<F>\n  T \\<subseteq> S \\<union> N", "consider \"init_segment T S\" | \"init_segment S T\" \"S\\<noteq>T\""], ["proof (prove)\nusing this:\n  T \\<in> comparables S N\n  T \\<in> \\<F>\n  T \\<subseteq> S \\<union> N\n\ngoal (1 subgoal):\n 1. \\<lbrakk>init_segment T S \\<Longrightarrow> thesis;\n     \\<lbrakk>init_segment S T; S \\<noteq> T\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by (auto simp: comparables_def)"], ["proof (state)\nthis:\n  \\<lbrakk>init_segment T S \\<Longrightarrow> ?thesis;\n   \\<lbrakk>init_segment S T; S \\<noteq> T\\<rbrakk>\n   \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. infinite\n     {n \\<in> M.\n      \\<not> strongly_accepts \\<F> (insert n S) M} \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>init_segment T S \\<Longrightarrow> ?thesis;\n   \\<lbrakk>init_segment S T; S \\<noteq> T\\<rbrakk>\n   \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show False"], ["proof (prove)\nusing this:\n  \\<lbrakk>init_segment T S \\<Longrightarrow> ?thesis;\n   \\<lbrakk>init_segment S T; S \\<noteq> T\\<rbrakk>\n   \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. False", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. init_segment T S \\<Longrightarrow> False\n 2. \\<lbrakk>init_segment S T; S \\<noteq> T\\<rbrakk> \\<Longrightarrow> False", "case 1"], ["proof (state)\nthis:\n  init_segment T S\n\ngoal (2 subgoals):\n 1. init_segment T S \\<Longrightarrow> False\n 2. \\<lbrakk>init_segment S T; S \\<noteq> T\\<rbrakk> \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  init_segment T S", "have \"init_segment T (insert n S)\" if \"n \\<in> N\" for n"], ["proof (prove)\nusing this:\n  init_segment T S\n\ngoal (1 subgoal):\n 1. init_segment T (insert n S)", "by (meson Sup_nat_less_sets_singleton N \\<open>finite S\\<close> init_segment_insert that)"], ["proof (state)\nthis:\n  ?n \\<in> N \\<Longrightarrow> init_segment T (insert ?n S)\n\ngoal (2 subgoals):\n 1. init_segment T S \\<Longrightarrow> False\n 2. \\<lbrakk>init_segment S T; S \\<noteq> T\\<rbrakk> \\<Longrightarrow> False", "with \\<open>infinite N\\<close> \\<open>thin_set \\<F>\\<close> \\<open>T \\<in> \\<F>\\<close>"], ["proof (chain)\npicking this:\n  infinite N\n  thin_set \\<F>\n  T \\<in> \\<F>\n  ?n \\<in> N \\<Longrightarrow> init_segment T (insert ?n S)", "show False"], ["proof (prove)\nusing this:\n  infinite N\n  thin_set \\<F>\n  T \\<in> \\<F>\n  ?n \\<in> N \\<Longrightarrow> init_segment T (insert ?n S)\n\ngoal (1 subgoal):\n 1. False", "by (meson N infinite_nat_iff_unbounded rejects_trivial)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<lbrakk>init_segment S T; S \\<noteq> T\\<rbrakk> \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>init_segment S T; S \\<noteq> T\\<rbrakk> \\<Longrightarrow> False", "let ?n = \"Min (T-S)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>init_segment S T; S \\<noteq> T\\<rbrakk> \\<Longrightarrow> False", "case 2"], ["proof (state)\nthis:\n  init_segment S T\n  S \\<noteq> T\n\ngoal (1 subgoal):\n 1. \\<lbrakk>init_segment S T; S \\<noteq> T\\<rbrakk> \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  init_segment S T\n  S \\<noteq> T", "have \"?n \\<in> N\""], ["proof (prove)\nusing this:\n  init_segment S T\n  S \\<noteq> T\n\ngoal (1 subgoal):\n 1. Min (T - S) \\<in> N", "by (metis Diff_partition Diff_subset_conv Min_in T(1) TSN comparables_iff finite_Diff init_segment_subset subsetD sup_bot.right_neutral)"], ["proof (state)\nthis:\n  Min (T - S) \\<in> N\n\ngoal (1 subgoal):\n 1. \\<lbrakk>init_segment S T; S \\<noteq> T\\<rbrakk> \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  Min (T - S) \\<in> N", "have \"rejects \\<F> (insert ?n S) N\""], ["proof (prove)\nusing this:\n  Min (T - S) \\<in> N\n\ngoal (1 subgoal):\n 1. rejects \\<F> (insert (Min (T - S)) S) N", "using rejects_subset \\<open>N \\<subseteq> M\\<close>"], ["proof (prove)\nusing this:\n  Min (T - S) \\<in> N\n  \\<lbrakk>rejects ?\\<F> ?S ?M; ?N \\<subseteq> ?M\\<rbrakk>\n  \\<Longrightarrow> rejects ?\\<F> ?S ?N\n  N \\<subseteq> M\n\ngoal (1 subgoal):\n 1. rejects \\<F> (insert (Min (T - S)) S) N", "by (auto simp: N_def)"], ["proof (state)\nthis:\n  rejects \\<F> (insert (Min (T - S)) S) N\n\ngoal (1 subgoal):\n 1. \\<lbrakk>init_segment S T; S \\<noteq> T\\<rbrakk> \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  rejects \\<F> (insert (Min (T - S)) S) N", "have \\<section>: \"\\<not> init_segment T (insert ?n S) \\<and> (\\<not> init_segment (insert ?n S) T \\<or> insert ?n S = T)\""], ["proof (prove)\nusing this:\n  rejects \\<F> (insert (Min (T - S)) S) N\n\ngoal (1 subgoal):\n 1. \\<not> init_segment T (insert (Min (T - S)) S) \\<and>\n    (\\<not> init_segment (insert (Min (T - S)) S) T \\<or>\n     insert (Min (T - S)) S = T)", "using T Diff_partition TSN \\<open>Min (T - S) \\<in> N\\<close> \\<open>finite S\\<close>"], ["proof (prove)\nusing this:\n  rejects \\<F> (insert (Min (T - S)) S) N\n  T \\<in> comparables S N\n  T \\<in> \\<F>\n  ?A \\<subseteq> ?B \\<Longrightarrow> ?A \\<union> (?B - ?A) = ?B\n  T \\<subseteq> S \\<union> N\n  Min (T - S) \\<in> N\n  finite S\n\ngoal (1 subgoal):\n 1. \\<not> init_segment T (insert (Min (T - S)) S) \\<and>\n    (\\<not> init_segment (insert (Min (T - S)) S) T \\<or>\n     insert (Min (T - S)) S = T)", "unfolding rejects_def comparables_iff disjoint_iff"], ["proof (prove)\nusing this:\n  \\<forall>x.\n     finite x \\<and>\n     (init_segment x (insert (Min (T - S)) S) \\<or>\n      init_segment (insert (Min (T - S)) S) x \\<and>\n      x \\<subseteq> insert (Min (T - S)) S \\<union> N) \\<longrightarrow>\n     x \\<notin> \\<F>\n  finite T \\<and>\n  (init_segment T S \\<or>\n   init_segment S T \\<and> T \\<subseteq> S \\<union> N)\n  T \\<in> \\<F>\n  ?A \\<subseteq> ?B \\<Longrightarrow> ?A \\<union> (?B - ?A) = ?B\n  T \\<subseteq> S \\<union> N\n  Min (T - S) \\<in> N\n  finite S\n\ngoal (1 subgoal):\n 1. \\<not> init_segment T (insert (Min (T - S)) S) \\<and>\n    (\\<not> init_segment (insert (Min (T - S)) S) T \\<or>\n     insert (Min (T - S)) S = T)", "by auto"], ["proof (state)\nthis:\n  \\<not> init_segment T (insert (Min (T - S)) S) \\<and>\n  (\\<not> init_segment (insert (Min (T - S)) S) T \\<or>\n   insert (Min (T - S)) S = T)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>init_segment S T; S \\<noteq> T\\<rbrakk> \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> init_segment T (insert (Min (T - S)) S) \\<and>\n  (\\<not> init_segment (insert (Min (T - S)) S) T \\<or>\n   insert (Min (T - S)) S = T)", "have T_nS: \"T \\<subseteq> insert ?n S\""], ["proof (prove)\nusing this:\n  \\<not> init_segment T (insert (Min (T - S)) S) \\<and>\n  (\\<not> init_segment (insert (Min (T - S)) S) T \\<or>\n   insert (Min (T - S)) S = T)\n\ngoal (1 subgoal):\n 1. T \\<subseteq> insert (Min (T - S)) S", "proof (elim conjE disjE)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<not> init_segment T (insert (Min (T - S)) S);\n     \\<not> init_segment (insert (Min (T - S)) S) T\\<rbrakk>\n    \\<Longrightarrow> T \\<subseteq> insert (Min (T - S)) S\n 2. \\<lbrakk>\\<not> init_segment T (insert (Min (T - S)) S);\n     insert (Min (T - S)) S = T\\<rbrakk>\n    \\<Longrightarrow> T \\<subseteq> insert (Min (T - S)) S", "assume \"\\<not> init_segment T (insert ?n S)\" \"\\<not> init_segment (insert ?n S) T\""], ["proof (state)\nthis:\n  \\<not> init_segment T (insert (Min (T - S)) S)\n  \\<not> init_segment (insert (Min (T - S)) S) T\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<not> init_segment T (insert (Min (T - S)) S);\n     \\<not> init_segment (insert (Min (T - S)) S) T\\<rbrakk>\n    \\<Longrightarrow> T \\<subseteq> insert (Min (T - S)) S\n 2. \\<lbrakk>\\<not> init_segment T (insert (Min (T - S)) S);\n     insert (Min (T - S)) S = T\\<rbrakk>\n    \\<Longrightarrow> T \\<subseteq> insert (Min (T - S)) S", "moreover"], ["proof (state)\nthis:\n  \\<not> init_segment T (insert (Min (T - S)) S)\n  \\<not> init_segment (insert (Min (T - S)) S) T\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<not> init_segment T (insert (Min (T - S)) S);\n     \\<not> init_segment (insert (Min (T - S)) S) T\\<rbrakk>\n    \\<Longrightarrow> T \\<subseteq> insert (Min (T - S)) S\n 2. \\<lbrakk>\\<not> init_segment T (insert (Min (T - S)) S);\n     insert (Min (T - S)) S = T\\<rbrakk>\n    \\<Longrightarrow> T \\<subseteq> insert (Min (T - S)) S", "have \"S \\<lless> {Min (T - S)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<lless> {Min (T - S)}", "using Sup_nat_less_sets_singleton N \\<open>Min (T - S) \\<in> N\\<close> assms(5)"], ["proof (prove)\nusing this:\n  \\<lbrakk>Sup ?T < ?n; finite ?T\\<rbrakk>\n  \\<Longrightarrow> ?T \\<lless> {?n}\n  (?n \\<in> N) =\n  (?n \\<in> M \\<and> rejects \\<F> (insert ?n S) M \\<and> Sup S < ?n)\n  Min (T - S) \\<in> N\n  finite S\n\ngoal (1 subgoal):\n 1. S \\<lless> {Min (T - S)}", "by blast"], ["proof (state)\nthis:\n  S \\<lless> {Min (T - S)}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<not> init_segment T (insert (Min (T - S)) S);\n     \\<not> init_segment (insert (Min (T - S)) S) T\\<rbrakk>\n    \\<Longrightarrow> T \\<subseteq> insert (Min (T - S)) S\n 2. \\<lbrakk>\\<not> init_segment T (insert (Min (T - S)) S);\n     insert (Min (T - S)) S = T\\<rbrakk>\n    \\<Longrightarrow> T \\<subseteq> insert (Min (T - S)) S", "moreover"], ["proof (state)\nthis:\n  S \\<lless> {Min (T - S)}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<not> init_segment T (insert (Min (T - S)) S);\n     \\<not> init_segment (insert (Min (T - S)) S) T\\<rbrakk>\n    \\<Longrightarrow> T \\<subseteq> insert (Min (T - S)) S\n 2. \\<lbrakk>\\<not> init_segment T (insert (Min (T - S)) S);\n     insert (Min (T - S)) S = T\\<rbrakk>\n    \\<Longrightarrow> T \\<subseteq> insert (Min (T - S)) S", "have \"finite (T - S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (T - S)", "using T comparables_iff"], ["proof (prove)\nusing this:\n  T \\<in> comparables S N\n  T \\<in> \\<F>\n  (?T \\<in> comparables ?S ?M) =\n  (finite ?T \\<and>\n   (init_segment ?T ?S \\<or>\n    init_segment ?S ?T \\<and> ?T \\<subseteq> ?S \\<union> ?M))\n\ngoal (1 subgoal):\n 1. finite (T - S)", "by blast"], ["proof (state)\nthis:\n  finite (T - S)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<not> init_segment T (insert (Min (T - S)) S);\n     \\<not> init_segment (insert (Min (T - S)) S) T\\<rbrakk>\n    \\<Longrightarrow> T \\<subseteq> insert (Min (T - S)) S\n 2. \\<lbrakk>\\<not> init_segment T (insert (Min (T - S)) S);\n     insert (Min (T - S)) S = T\\<rbrakk>\n    \\<Longrightarrow> T \\<subseteq> insert (Min (T - S)) S", "ultimately"], ["proof (chain)\npicking this:\n  \\<not> init_segment T (insert (Min (T - S)) S)\n  \\<not> init_segment (insert (Min (T - S)) S) T\n  S \\<lless> {Min (T - S)}\n  finite (T - S)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> init_segment T (insert (Min (T - S)) S)\n  \\<not> init_segment (insert (Min (T - S)) S) T\n  S \\<lless> {Min (T - S)}\n  finite (T - S)\n\ngoal (1 subgoal):\n 1. T \\<subseteq> insert (Min (T - S)) S", "using \\<open>init_segment S T\\<close> Min_in init_segment_insert_iff"], ["proof (prove)\nusing this:\n  \\<not> init_segment T (insert (Min (T - S)) S)\n  \\<not> init_segment (insert (Min (T - S)) S) T\n  S \\<lless> {Min (T - S)}\n  finite (T - S)\n  init_segment S T\n  \\<lbrakk>finite ?A; ?A \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Min ?A \\<in> ?A\n  \\<lbrakk>?S \\<lless> {?n};\n   \\<And>x. x \\<in> ?T - ?S \\<Longrightarrow> ?n \\<le> x\\<rbrakk>\n  \\<Longrightarrow> init_segment (insert ?n ?S) ?T =\n                    (init_segment ?S ?T \\<and> ?n \\<in> ?T)\n\ngoal (1 subgoal):\n 1. T \\<subseteq> insert (Min (T - S)) S", "by auto"], ["proof (state)\nthis:\n  T \\<subseteq> insert (Min (T - S)) S\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> init_segment T (insert (Min (T - S)) S);\n     insert (Min (T - S)) S = T\\<rbrakk>\n    \\<Longrightarrow> T \\<subseteq> insert (Min (T - S)) S", "qed auto"], ["proof (state)\nthis:\n  T \\<subseteq> insert (Min (T - S)) S\n\ngoal (1 subgoal):\n 1. \\<lbrakk>init_segment S T; S \\<noteq> T\\<rbrakk> \\<Longrightarrow> False", "have non_TS: \"\\<not> init_segment T S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> init_segment T S", "by (meson Sup_nat_less_sets_singleton N \\<open>?n \\<in> N\\<close> \\<open>\\<not> init_segment T (insert (?n) S) \\<and> (\\<not> init_segment (insert (?n) S) T \\<or> insert (?n) S = T)\\<close> assms(5) init_segment_insert)"], ["proof (state)\nthis:\n  \\<not> init_segment T S\n\ngoal (1 subgoal):\n 1. \\<lbrakk>init_segment S T; S \\<noteq> T\\<rbrakk> \\<Longrightarrow> False", "consider (ST) \"S \\<subseteq> T\" | (TS) \"T \\<subseteq> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<subseteq> T \\<Longrightarrow> thesis;\n     T \\<subseteq> S \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using 2 init_segment_subset"], ["proof (prove)\nusing this:\n  init_segment S T\n  S \\<noteq> T\n  init_segment ?S ?T \\<Longrightarrow> ?S \\<subseteq> ?T\n\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<subseteq> T \\<Longrightarrow> thesis;\n     T \\<subseteq> S \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>S \\<subseteq> T \\<Longrightarrow> ?thesis;\n   T \\<subseteq> S \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<lbrakk>init_segment S T; S \\<noteq> T\\<rbrakk> \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>S \\<subseteq> T \\<Longrightarrow> ?thesis;\n   T \\<subseteq> S \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show False"], ["proof (prove)\nusing this:\n  \\<lbrakk>S \\<subseteq> T \\<Longrightarrow> ?thesis;\n   T \\<subseteq> S \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. False", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. S \\<subseteq> T \\<Longrightarrow> False\n 2. T \\<subseteq> S \\<Longrightarrow> False", "case ST"], ["proof (state)\nthis:\n  S \\<subseteq> T\n\ngoal (2 subgoals):\n 1. S \\<subseteq> T \\<Longrightarrow> False\n 2. T \\<subseteq> S \\<Longrightarrow> False", "with \\<section>"], ["proof (chain)\npicking this:\n  \\<not> init_segment T (insert (Min (T - S)) S) \\<and>\n  (\\<not> init_segment (insert (Min (T - S)) S) T \\<or>\n   insert (Min (T - S)) S = T)\n  S \\<subseteq> T", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> init_segment T (insert (Min (T - S)) S) \\<and>\n  (\\<not> init_segment (insert (Min (T - S)) S) T \\<or>\n   insert (Min (T - S)) S = T)\n  S \\<subseteq> T\n\ngoal (1 subgoal):\n 1. False", "using 2 T(1) \\<open>T \\<subseteq> insert (?n) S\\<close>  comparables_iff init_segment_iff"], ["proof (prove)\nusing this:\n  \\<not> init_segment T (insert (Min (T - S)) S) \\<and>\n  (\\<not> init_segment (insert (Min (T - S)) S) T \\<or>\n   insert (Min (T - S)) S = T)\n  S \\<subseteq> T\n  init_segment S T\n  S \\<noteq> T\n  T \\<in> comparables S N\n  T \\<subseteq> insert (Min (T - S)) S\n  (?T \\<in> comparables ?S ?M) =\n  (finite ?T \\<and>\n   (init_segment ?T ?S \\<or>\n    init_segment ?S ?T \\<and> ?T \\<subseteq> ?S \\<union> ?M))\n  init_segment ?S ?T =\n  (?S = ?T \\<or> (\\<exists>m\\<in>?T. ?S = {n \\<in> ?T. n < m}))\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. T \\<subseteq> S \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. T \\<subseteq> S \\<Longrightarrow> False", "case TS"], ["proof (state)\nthis:\n  T \\<subseteq> S\n\ngoal (1 subgoal):\n 1. T \\<subseteq> S \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  T \\<subseteq> S", "show ?thesis"], ["proof (prove)\nusing this:\n  T \\<subseteq> S\n\ngoal (1 subgoal):\n 1. False", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. T \\<subseteq> S \\<Longrightarrow> False", "have \"\\<not> init_segment T S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> init_segment T S", "by (meson Sup_nat_less_sets_singleton N \\<open>?n \\<in> N\\<close> \\<section> assms(5) init_segment_insert)"], ["proof (state)\nthis:\n  \\<not> init_segment T S\n\ngoal (1 subgoal):\n 1. T \\<subseteq> S \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> init_segment T S", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> init_segment T S\n\ngoal (1 subgoal):\n 1. False", "using 2 TS init_segment_subset"], ["proof (prove)\nusing this:\n  \\<not> init_segment T S\n  init_segment S T\n  S \\<noteq> T\n  T \\<subseteq> S\n  init_segment ?S ?T \\<Longrightarrow> ?S \\<subseteq> ?T\n\ngoal (1 subgoal):\n 1. False", "by fastforce"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Much work is needed for this slight strengthening of the previous result!\\<close>"], ["", "proposition strongly_accepts_1_19_plus:\n  assumes \"thin_set \\<F>\" \"infinite M\"\n    and dsM: \"decides_subsets \\<F> M\"\n  obtains N where \"N \\<subseteq> M\" \"infinite N\"\n       \"\\<And>S n. \\<lbrakk>S \\<subseteq> N; finite S; strongly_accepts \\<F> S N; n \\<in> N; S \\<lless> {n}\\<rbrakk>\n              \\<Longrightarrow> strongly_accepts \\<F> (insert n S) N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         \\<And>S n.\n            \\<lbrakk>S \\<subseteq> N; finite S; strongly_accepts \\<F> S N;\n             n \\<in> N; S \\<lless> {n}\\<rbrakk>\n            \\<Longrightarrow> strongly_accepts \\<F> (insert n S) N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         \\<And>S n.\n            \\<lbrakk>S \\<subseteq> N; finite S; strongly_accepts \\<F> S N;\n             n \\<in> N; S \\<lless> {n}\\<rbrakk>\n            \\<Longrightarrow> strongly_accepts \\<F> (insert n S) N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define insert_closed where\n    \"insert_closed \\<equiv> \\<lambda>NL N. \\<forall>T \\<subseteq> Inf ` set NL. \\<forall>n \\<in> N.\n                      strongly_accepts \\<F> T ((Inf ` set NL) \\<union> hd NL) \\<longrightarrow>\n                      T \\<lless> {n} \\<longrightarrow> strongly_accepts \\<F> (insert n T) ((Inf ` set NL) \\<union> hd NL)\""], ["proof (state)\nthis:\n  insert_closed \\<equiv>\n  \\<lambda>NL N.\n     \\<forall>T\\<subseteq>Inf ` set NL.\n        \\<forall>n\\<in>N.\n           strongly_accepts \\<F> T\n            (Inf ` set NL \\<union> hd NL) \\<longrightarrow>\n           T \\<lless> {n} \\<longrightarrow>\n           strongly_accepts \\<F> (insert n T) (Inf ` set NL \\<union> hd NL)\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         \\<And>S n.\n            \\<lbrakk>S \\<subseteq> N; finite S; strongly_accepts \\<F> S N;\n             n \\<in> N; S \\<lless> {n}\\<rbrakk>\n            \\<Longrightarrow> strongly_accepts \\<F> (insert n S) N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define \\<Phi> where \"\\<Phi> \\<equiv> \\<lambda>NL N. N \\<subseteq> hd NL \\<and> Inf N > Inf (hd NL) \\<and> infinite N \\<and> insert_closed NL N\""], ["proof (state)\nthis:\n  \\<Phi> \\<equiv>\n  \\<lambda>NL N.\n     N \\<subseteq> hd NL \\<and>\n     Inf (hd NL) < Inf N \\<and> infinite N \\<and> insert_closed NL N\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         \\<And>S n.\n            \\<lbrakk>S \\<subseteq> N; finite S; strongly_accepts \\<F> S N;\n             n \\<in> N; S \\<lless> {n}\\<rbrakk>\n            \\<Longrightarrow> strongly_accepts \\<F> (insert n S) N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<exists>N. \\<Phi> NL N\" if NL: \"infinite (hd NL)\" \"Inf ` set NL \\<union> hd NL \\<subseteq> M\" for NL"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>N. \\<Phi> NL N", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>N. \\<Phi> NL N", "let ?m = \"Inf ` set NL\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>N. \\<Phi> NL N", "let ?M = \"?m \\<union> hd NL\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>N. \\<Phi> NL N", "define P where \"P \\<equiv> \\<lambda>S. {n \\<in> ?M. \\<not> strongly_accepts \\<F> (insert n S) ?M}\""], ["proof (state)\nthis:\n  P \\<equiv>\n  \\<lambda>S.\n     {n \\<in> Inf ` set NL \\<union> hd NL.\n      \\<not> strongly_accepts \\<F> (insert n S)\n              (Inf ` set NL \\<union> hd NL)}\n\ngoal (1 subgoal):\n 1. \\<exists>N. \\<Phi> NL N", "have \"\\<exists>k. P S \\<subseteq> {..k}\"\n      if \"S \\<subseteq> Inf ` set NL\" \"strongly_accepts \\<F> S ?M\" for S"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k. P S \\<subseteq> {..k}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>k. P S \\<subseteq> {..k}", "have \"finite (P S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (P S)", "unfolding P_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     {n \\<in> Inf ` set NL \\<union> hd NL.\n      \\<not> strongly_accepts \\<F> (insert n S)\n              (Inf ` set NL \\<union> hd NL)}", "proof (rule strongly_accepts_1_19)"], ["proof (state)\ngoal (6 subgoals):\n 1. strongly_accepts \\<F> S (Inf ` set NL \\<union> hd NL)\n 2. thin_set \\<F>\n 3. infinite (Inf ` set NL \\<union> hd NL)\n 4. S \\<subseteq> Inf ` set NL \\<union> hd NL\n 5. finite S\n 6. decides_subsets \\<F> (Inf ` set NL \\<union> hd NL)", "show \"decides_subsets \\<F> ?M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. decides_subsets \\<F> (Inf ` set NL \\<union> hd NL)", "using NL(2) decides_subsets_subset dsM"], ["proof (prove)\nusing this:\n  Inf ` set NL \\<union> hd NL \\<subseteq> M\n  \\<lbrakk>decides_subsets ?\\<F> ?M; ?N \\<subseteq> ?M\\<rbrakk>\n  \\<Longrightarrow> decides_subsets ?\\<F> ?N\n  decides_subsets \\<F> M\n\ngoal (1 subgoal):\n 1. decides_subsets \\<F> (Inf ` set NL \\<union> hd NL)", "by blast"], ["proof (state)\nthis:\n  decides_subsets \\<F> (Inf ` set NL \\<union> hd NL)\n\ngoal (5 subgoals):\n 1. strongly_accepts \\<F> S (Inf ` set NL \\<union> hd NL)\n 2. thin_set \\<F>\n 3. infinite (Inf ` set NL \\<union> hd NL)\n 4. S \\<subseteq> Inf ` set NL \\<union> hd NL\n 5. finite S", "show \"finite S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite S", "using finite_surj that(1)"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?A; ?B \\<subseteq> ?f ` ?A\\<rbrakk>\n  \\<Longrightarrow> finite ?B\n  S \\<subseteq> Inf ` set NL\n\ngoal (1 subgoal):\n 1. finite S", "by blast"], ["proof (state)\nthis:\n  finite S\n\ngoal (4 subgoals):\n 1. strongly_accepts \\<F> S (Inf ` set NL \\<union> hd NL)\n 2. thin_set \\<F>\n 3. infinite (Inf ` set NL \\<union> hd NL)\n 4. S \\<subseteq> Inf ` set NL \\<union> hd NL", "qed (use that NL assms in auto)"], ["proof (state)\nthis:\n  finite (P S)\n\ngoal (1 subgoal):\n 1. \\<exists>k. P S \\<subseteq> {..k}", "then"], ["proof (chain)\npicking this:\n  finite (P S)", "show ?thesis"], ["proof (prove)\nusing this:\n  finite (P S)\n\ngoal (1 subgoal):\n 1. \\<exists>k. P S \\<subseteq> {..k}", "by (simp add: finite_nat_iff_bounded_le)"], ["proof (state)\nthis:\n  \\<exists>k. P S \\<subseteq> {..k}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?S \\<subseteq> Inf ` set NL;\n   strongly_accepts \\<F> ?S (Inf ` set NL \\<union> hd NL)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>k. P ?S \\<subseteq> {..k}\n\ngoal (1 subgoal):\n 1. \\<exists>N. \\<Phi> NL N", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?S \\<subseteq> Inf ` set NL;\n   strongly_accepts \\<F> ?S (Inf ` set NL \\<union> hd NL)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>k. P ?S \\<subseteq> {..k}", "obtain f where f: \"\\<And>S. \\<lbrakk>S \\<subseteq> Inf ` set NL; strongly_accepts \\<F> S ?M\\<rbrakk> \\<Longrightarrow> P S \\<subseteq> {..f S}\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?S \\<subseteq> Inf ` set NL;\n   strongly_accepts \\<F> ?S (Inf ` set NL \\<union> hd NL)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>k. P ?S \\<subseteq> {..k}\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        (\\<And>S.\n            \\<lbrakk>S \\<subseteq> Inf ` set NL;\n             strongly_accepts \\<F> S (Inf ` set NL \\<union> hd NL)\\<rbrakk>\n            \\<Longrightarrow> P S \\<subseteq> {..f S}) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  \\<lbrakk>?S \\<subseteq> Inf ` set NL;\n   strongly_accepts \\<F> ?S (Inf ` set NL \\<union> hd NL)\\<rbrakk>\n  \\<Longrightarrow> P ?S \\<subseteq> {..f ?S}\n\ngoal (1 subgoal):\n 1. \\<exists>N. \\<Phi> NL N", "define m where \"m \\<equiv> Max (insert (Inf (hd NL)) (f ` Pow (Inf ` set NL)))\""], ["proof (state)\nthis:\n  m \\<equiv> Max (insert (Inf (hd NL)) (f ` Pow (Inf ` set NL)))\n\ngoal (1 subgoal):\n 1. \\<exists>N. \\<Phi> NL N", "have \\<section>: \"strongly_accepts \\<F> (insert n S) ?M\"\n      if S: \"S \\<subseteq> Inf ` set NL\" \"strongly_accepts \\<F> S ?M\" and n: \"n \\<in> hd NL \\<inter> {m<..}\" for S n"], ["proof (prove)\ngoal (1 subgoal):\n 1. strongly_accepts \\<F> (insert n S) (Inf ` set NL \\<union> hd NL)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. strongly_accepts \\<F> (insert n S) (Inf ` set NL \\<union> hd NL)", "have \"f S \\<le> m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f S \\<le> m", "unfolding m_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. f S \\<le> Max (insert (Inf (hd NL)) (f ` Pow (Inf ` set NL)))", "using that(1)"], ["proof (prove)\nusing this:\n  S \\<subseteq> Inf ` set NL\n\ngoal (1 subgoal):\n 1. f S \\<le> Max (insert (Inf (hd NL)) (f ` Pow (Inf ` set NL)))", "by auto"], ["proof (state)\nthis:\n  f S \\<le> m\n\ngoal (1 subgoal):\n 1. strongly_accepts \\<F> (insert n S) (Inf ` set NL \\<union> hd NL)", "then"], ["proof (chain)\npicking this:\n  f S \\<le> m", "show ?thesis"], ["proof (prove)\nusing this:\n  f S \\<le> m\n\ngoal (1 subgoal):\n 1. strongly_accepts \\<F> (insert n S) (Inf ` set NL \\<union> hd NL)", "using f [OF S] n"], ["proof (prove)\nusing this:\n  f S \\<le> m\n  P S \\<subseteq> {..f S}\n  n \\<in> hd NL \\<inter> {m<..}\n\ngoal (1 subgoal):\n 1. strongly_accepts \\<F> (insert n S) (Inf ` set NL \\<union> hd NL)", "unfolding P_def"], ["proof (prove)\nusing this:\n  f S \\<le> m\n  {n \\<in> Inf ` set NL \\<union> hd NL.\n   \\<not> strongly_accepts \\<F> (insert n S) (Inf ` set NL \\<union> hd NL)}\n  \\<subseteq> {..f S}\n  n \\<in> hd NL \\<inter> {m<..}\n\ngoal (1 subgoal):\n 1. strongly_accepts \\<F> (insert n S) (Inf ` set NL \\<union> hd NL)", "by auto"], ["proof (state)\nthis:\n  strongly_accepts \\<F> (insert n S) (Inf ` set NL \\<union> hd NL)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?S \\<subseteq> Inf ` set NL;\n   strongly_accepts \\<F> ?S (Inf ` set NL \\<union> hd NL);\n   ?n \\<in> hd NL \\<inter> {m<..}\\<rbrakk>\n  \\<Longrightarrow> strongly_accepts \\<F> (insert ?n ?S)\n                     (Inf ` set NL \\<union> hd NL)\n\ngoal (1 subgoal):\n 1. \\<exists>N. \\<Phi> NL N", "have \"\\<Phi> NL (hd NL \\<inter> {m<..})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Phi> NL (hd NL \\<inter> {m<..})", "unfolding \\<Phi>_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. hd NL \\<inter> {m<..} \\<subseteq> hd NL \\<and>\n    Inf (hd NL) < Inf (hd NL \\<inter> {m<..}) \\<and>\n    infinite (hd NL \\<inter> {m<..}) \\<and>\n    insert_closed NL (hd NL \\<inter> {m<..})", "proof (intro conjI)"], ["proof (state)\ngoal (4 subgoals):\n 1. hd NL \\<inter> {m<..} \\<subseteq> hd NL\n 2. Inf (hd NL) < Inf (hd NL \\<inter> {m<..})\n 3. infinite (hd NL \\<inter> {m<..})\n 4. insert_closed NL (hd NL \\<inter> {m<..})", "have \"Inf (hd NL) \\<le> m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf (hd NL) \\<le> m", "by (simp add: m_def)"], ["proof (state)\nthis:\n  Inf (hd NL) \\<le> m\n\ngoal (4 subgoals):\n 1. hd NL \\<inter> {m<..} \\<subseteq> hd NL\n 2. Inf (hd NL) < Inf (hd NL \\<inter> {m<..})\n 3. infinite (hd NL \\<inter> {m<..})\n 4. insert_closed NL (hd NL \\<inter> {m<..})", "then"], ["proof (chain)\npicking this:\n  Inf (hd NL) \\<le> m", "show \"Inf (hd NL) < Inf (hd NL \\<inter> {m<..})\""], ["proof (prove)\nusing this:\n  Inf (hd NL) \\<le> m\n\ngoal (1 subgoal):\n 1. Inf (hd NL) < Inf (hd NL \\<inter> {m<..})", "by (metis Inf_nat_def1 Int_iff finite.emptyI finite_nat_Int_greaterThan_iff greaterThan_iff le_less_trans that(1))"], ["proof (state)\nthis:\n  Inf (hd NL) < Inf (hd NL \\<inter> {m<..})\n\ngoal (3 subgoals):\n 1. hd NL \\<inter> {m<..} \\<subseteq> hd NL\n 2. infinite (hd NL \\<inter> {m<..})\n 3. insert_closed NL (hd NL \\<inter> {m<..})", "show \"infinite (hd NL \\<inter> {m<..})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite (hd NL \\<inter> {m<..})", "by (simp add: finite_nat_Int_greaterThan_iff that(1))"], ["proof (state)\nthis:\n  infinite (hd NL \\<inter> {m<..})\n\ngoal (2 subgoals):\n 1. hd NL \\<inter> {m<..} \\<subseteq> hd NL\n 2. insert_closed NL (hd NL \\<inter> {m<..})", "show \"insert_closed NL (hd NL \\<inter> {m<..})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert_closed NL (hd NL \\<inter> {m<..})", "by (auto intro: \\<section> simp: insert_closed_def)"], ["proof (state)\nthis:\n  insert_closed NL (hd NL \\<inter> {m<..})\n\ngoal (1 subgoal):\n 1. hd NL \\<inter> {m<..} \\<subseteq> hd NL", "qed auto"], ["proof (state)\nthis:\n  \\<Phi> NL (hd NL \\<inter> {m<..})\n\ngoal (1 subgoal):\n 1. \\<exists>N. \\<Phi> NL N", "then"], ["proof (chain)\npicking this:\n  \\<Phi> NL (hd NL \\<inter> {m<..})", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Phi> NL (hd NL \\<inter> {m<..})\n\ngoal (1 subgoal):\n 1. \\<exists>N. \\<Phi> NL N", ".."], ["proof (state)\nthis:\n  \\<exists>N. \\<Phi> NL N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>infinite (hd ?NL);\n   Inf ` set ?NL \\<union> hd ?NL \\<subseteq> M\\<rbrakk>\n  \\<Longrightarrow> \\<exists>N. \\<Phi> ?NL N\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         \\<And>S n.\n            \\<lbrakk>S \\<subseteq> N; finite S; strongly_accepts \\<F> S N;\n             n \\<in> N; S \\<lless> {n}\\<rbrakk>\n            \\<Longrightarrow> strongly_accepts \\<F> (insert n S) N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>infinite (hd ?NL);\n   Inf ` set ?NL \\<union> hd ?NL \\<subseteq> M\\<rbrakk>\n  \\<Longrightarrow> \\<exists>N. \\<Phi> ?NL N", "have \\<Phi>_Eps: \"\\<Phi> NL (Eps (\\<Phi> NL))\" if \"infinite (hd NL)\"  \"Inf ` set NL \\<union> hd NL \\<subseteq> M\" for NL"], ["proof (prove)\nusing this:\n  \\<lbrakk>infinite (hd ?NL);\n   Inf ` set ?NL \\<union> hd ?NL \\<subseteq> M\\<rbrakk>\n  \\<Longrightarrow> \\<exists>N. \\<Phi> ?NL N\n\ngoal (1 subgoal):\n 1. \\<Phi> NL (Eps (\\<Phi> NL))", "by (meson someI_ex that)"], ["proof (state)\nthis:\n  \\<lbrakk>infinite (hd ?NL);\n   Inf ` set ?NL \\<union> hd ?NL \\<subseteq> M\\<rbrakk>\n  \\<Longrightarrow> \\<Phi> ?NL (Eps (\\<Phi> ?NL))\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         \\<And>S n.\n            \\<lbrakk>S \\<subseteq> N; finite S; strongly_accepts \\<F> S N;\n             n \\<in> N; S \\<lless> {n}\\<rbrakk>\n            \\<Longrightarrow> strongly_accepts \\<F> (insert n S) N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define F where \"F \\<equiv> rec_nat [M] (\\<lambda>n NL. (Eps (\\<Phi> NL)) # NL)\""], ["proof (state)\nthis:\n  F \\<equiv> rec_nat [M] (\\<lambda>n NL. Eps (\\<Phi> NL) # NL)\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         \\<And>S n.\n            \\<lbrakk>S \\<subseteq> N; finite S; strongly_accepts \\<F> S N;\n             n \\<in> N; S \\<lless> {n}\\<rbrakk>\n            \\<Longrightarrow> strongly_accepts \\<F> (insert n S) N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have F_simps [simp]: \"F 0 = [M]\" \"F (Suc n) = Eps (\\<Phi> (F n)) # F n\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. F 0 = [M] &&& F (Suc n) = Eps (\\<Phi> (F n)) # F n", "by (auto simp: F_def)"], ["proof (state)\nthis:\n  F 0 = [M]\n  F (Suc ?n) = Eps (\\<Phi> (F ?n)) # F ?n\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         \\<And>S n.\n            \\<lbrakk>S \\<subseteq> N; finite S; strongly_accepts \\<F> S N;\n             n \\<in> N; S \\<lless> {n}\\<rbrakk>\n            \\<Longrightarrow> strongly_accepts \\<F> (insert n S) N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have InfM: \"Inf M \\<in> M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf M \\<in> M", "by (metis Inf_nat_def1 assms(2) finite.emptyI)"], ["proof (state)\nthis:\n  Inf M \\<in> M\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         \\<And>S n.\n            \\<lbrakk>S \\<subseteq> N; finite S; strongly_accepts \\<F> S N;\n             n \\<in> N; S \\<lless> {n}\\<rbrakk>\n            \\<Longrightarrow> strongly_accepts \\<F> (insert n S) N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have F: \"F n \\<noteq> [] \\<and> sorted_wrt (\\<le>) (F n) \\<and> list.set (F n) \\<subseteq> Collect infinite \\<and> set (F n) \\<subseteq> Pow M \\<and> Inf ` list.set (F n) \\<subseteq> M\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. F n \\<noteq> [] \\<and>\n    sorted_wrt (\\<subseteq>) (F n) \\<and>\n    set (F n) \\<subseteq> {S. infinite S} \\<and>\n    set (F n) \\<subseteq> Pow M \\<and> Inf ` set (F n) \\<subseteq> M", "proof (induction n)"], ["proof (state)\ngoal (2 subgoals):\n 1. F 0 \\<noteq> [] \\<and>\n    sorted_wrt (\\<subseteq>) (F 0) \\<and>\n    set (F 0) \\<subseteq> {S. infinite S} \\<and>\n    set (F 0) \\<subseteq> Pow M \\<and> Inf ` set (F 0) \\<subseteq> M\n 2. \\<And>n.\n       F n \\<noteq> [] \\<and>\n       sorted_wrt (\\<subseteq>) (F n) \\<and>\n       set (F n) \\<subseteq> {S. infinite S} \\<and>\n       set (F n) \\<subseteq> Pow M \\<and>\n       Inf ` set (F n) \\<subseteq> M \\<Longrightarrow>\n       F (Suc n) \\<noteq> [] \\<and>\n       sorted_wrt (\\<subseteq>) (F (Suc n)) \\<and>\n       set (F (Suc n)) \\<subseteq> {S. infinite S} \\<and>\n       set (F (Suc n)) \\<subseteq> Pow M \\<and>\n       Inf ` set (F (Suc n)) \\<subseteq> M", "case (Suc n)"], ["proof (state)\nthis:\n  F n \\<noteq> [] \\<and>\n  sorted_wrt (\\<subseteq>) (F n) \\<and>\n  set (F n) \\<subseteq> {S. infinite S} \\<and>\n  set (F n) \\<subseteq> Pow M \\<and> Inf ` set (F n) \\<subseteq> M\n\ngoal (2 subgoals):\n 1. F 0 \\<noteq> [] \\<and>\n    sorted_wrt (\\<subseteq>) (F 0) \\<and>\n    set (F 0) \\<subseteq> {S. infinite S} \\<and>\n    set (F 0) \\<subseteq> Pow M \\<and> Inf ` set (F 0) \\<subseteq> M\n 2. \\<And>n.\n       F n \\<noteq> [] \\<and>\n       sorted_wrt (\\<subseteq>) (F n) \\<and>\n       set (F n) \\<subseteq> {S. infinite S} \\<and>\n       set (F n) \\<subseteq> Pow M \\<and>\n       Inf ` set (F n) \\<subseteq> M \\<Longrightarrow>\n       F (Suc n) \\<noteq> [] \\<and>\n       sorted_wrt (\\<subseteq>) (F (Suc n)) \\<and>\n       set (F (Suc n)) \\<subseteq> {S. infinite S} \\<and>\n       set (F (Suc n)) \\<subseteq> Pow M \\<and>\n       Inf ` set (F (Suc n)) \\<subseteq> M", "have \"hd (F n) \\<subseteq> M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hd (F n) \\<subseteq> M", "by (meson Pow_iff Suc.IH hd_in_set subsetD)"], ["proof (state)\nthis:\n  hd (F n) \\<subseteq> M\n\ngoal (2 subgoals):\n 1. F 0 \\<noteq> [] \\<and>\n    sorted_wrt (\\<subseteq>) (F 0) \\<and>\n    set (F 0) \\<subseteq> {S. infinite S} \\<and>\n    set (F 0) \\<subseteq> Pow M \\<and> Inf ` set (F 0) \\<subseteq> M\n 2. \\<And>n.\n       F n \\<noteq> [] \\<and>\n       sorted_wrt (\\<subseteq>) (F n) \\<and>\n       set (F n) \\<subseteq> {S. infinite S} \\<and>\n       set (F n) \\<subseteq> Pow M \\<and>\n       Inf ` set (F n) \\<subseteq> M \\<Longrightarrow>\n       F (Suc n) \\<noteq> [] \\<and>\n       sorted_wrt (\\<subseteq>) (F (Suc n)) \\<and>\n       set (F (Suc n)) \\<subseteq> {S. infinite S} \\<and>\n       set (F (Suc n)) \\<subseteq> Pow M \\<and>\n       Inf ` set (F (Suc n)) \\<subseteq> M", "then"], ["proof (chain)\npicking this:\n  hd (F n) \\<subseteq> M", "have 1: \"Ball (list.set (F n)) ((\\<subseteq>) (Eps (\\<Phi> (F n))))\""], ["proof (prove)\nusing this:\n  hd (F n) \\<subseteq> M\n\ngoal (1 subgoal):\n 1. Ball (set (F n)) ((\\<subseteq>) (Eps (\\<Phi> (F n))))", "using order_trans [OF _ sorted_wrt_subset]"], ["proof (prove)\nusing this:\n  hd (F n) \\<subseteq> M\n  \\<lbrakk>?x \\<subseteq> hd ?l1; ?z \\<in> set ?l1;\n   sorted_wrt (\\<subseteq>) ?l1\\<rbrakk>\n  \\<Longrightarrow> ?x \\<subseteq> ?z\n\ngoal (1 subgoal):\n 1. Ball (set (F n)) ((\\<subseteq>) (Eps (\\<Phi> (F n))))", "by (metis Suc.IH Un_subset_iff \\<Phi>_Eps \\<Phi>_def hd_in_set mem_Collect_eq subsetD)"], ["proof (state)\nthis:\n  Ball (set (F n)) ((\\<subseteq>) (Eps (\\<Phi> (F n))))\n\ngoal (2 subgoals):\n 1. F 0 \\<noteq> [] \\<and>\n    sorted_wrt (\\<subseteq>) (F 0) \\<and>\n    set (F 0) \\<subseteq> {S. infinite S} \\<and>\n    set (F 0) \\<subseteq> Pow M \\<and> Inf ` set (F 0) \\<subseteq> M\n 2. \\<And>n.\n       F n \\<noteq> [] \\<and>\n       sorted_wrt (\\<subseteq>) (F n) \\<and>\n       set (F n) \\<subseteq> {S. infinite S} \\<and>\n       set (F n) \\<subseteq> Pow M \\<and>\n       Inf ` set (F n) \\<subseteq> M \\<Longrightarrow>\n       F (Suc n) \\<noteq> [] \\<and>\n       sorted_wrt (\\<subseteq>) (F (Suc n)) \\<and>\n       set (F (Suc n)) \\<subseteq> {S. infinite S} \\<and>\n       set (F (Suc n)) \\<subseteq> Pow M \\<and>\n       Inf ` set (F (Suc n)) \\<subseteq> M", "have 2: \"infinite (Eps (\\<Phi> (F n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite (Eps (\\<Phi> (F n)))", "by (metis Ball_Collect Pow_iff Suc.IH Un_subset_iff \\<Phi>_Eps \\<Phi>_def hd_in_set subset_iff)"], ["proof (state)\nthis:\n  infinite (Eps (\\<Phi> (F n)))\n\ngoal (2 subgoals):\n 1. F 0 \\<noteq> [] \\<and>\n    sorted_wrt (\\<subseteq>) (F 0) \\<and>\n    set (F 0) \\<subseteq> {S. infinite S} \\<and>\n    set (F 0) \\<subseteq> Pow M \\<and> Inf ` set (F 0) \\<subseteq> M\n 2. \\<And>n.\n       F n \\<noteq> [] \\<and>\n       sorted_wrt (\\<subseteq>) (F n) \\<and>\n       set (F n) \\<subseteq> {S. infinite S} \\<and>\n       set (F n) \\<subseteq> Pow M \\<and>\n       Inf ` set (F n) \\<subseteq> M \\<Longrightarrow>\n       F (Suc n) \\<noteq> [] \\<and>\n       sorted_wrt (\\<subseteq>) (F (Suc n)) \\<and>\n       set (F (Suc n)) \\<subseteq> {S. infinite S} \\<and>\n       set (F (Suc n)) \\<subseteq> Pow M \\<and>\n       Inf ` set (F (Suc n)) \\<subseteq> M", "have 3: \"Eps (\\<Phi> (F n)) \\<subseteq> M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Eps (\\<Phi> (F n)) \\<subseteq> M", "by (meson Pow_iff Suc.IH 1 hd_in_set subset_iff)"], ["proof (state)\nthis:\n  Eps (\\<Phi> (F n)) \\<subseteq> M\n\ngoal (2 subgoals):\n 1. F 0 \\<noteq> [] \\<and>\n    sorted_wrt (\\<subseteq>) (F 0) \\<and>\n    set (F 0) \\<subseteq> {S. infinite S} \\<and>\n    set (F 0) \\<subseteq> Pow M \\<and> Inf ` set (F 0) \\<subseteq> M\n 2. \\<And>n.\n       F n \\<noteq> [] \\<and>\n       sorted_wrt (\\<subseteq>) (F n) \\<and>\n       set (F n) \\<subseteq> {S. infinite S} \\<and>\n       set (F n) \\<subseteq> Pow M \\<and>\n       Inf ` set (F n) \\<subseteq> M \\<Longrightarrow>\n       F (Suc n) \\<noteq> [] \\<and>\n       sorted_wrt (\\<subseteq>) (F (Suc n)) \\<and>\n       set (F (Suc n)) \\<subseteq> {S. infinite S} \\<and>\n       set (F (Suc n)) \\<subseteq> Pow M \\<and>\n       Inf ` set (F (Suc n)) \\<subseteq> M", "have \"Inf (Eps (\\<Phi> (F n))) \\<in> M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf (Eps (\\<Phi> (F n))) \\<in> M", "by (metis 2 3 Inf_nat_def1 finite.simps in_mono)"], ["proof (state)\nthis:\n  Inf (Eps (\\<Phi> (F n))) \\<in> M\n\ngoal (2 subgoals):\n 1. F 0 \\<noteq> [] \\<and>\n    sorted_wrt (\\<subseteq>) (F 0) \\<and>\n    set (F 0) \\<subseteq> {S. infinite S} \\<and>\n    set (F 0) \\<subseteq> Pow M \\<and> Inf ` set (F 0) \\<subseteq> M\n 2. \\<And>n.\n       F n \\<noteq> [] \\<and>\n       sorted_wrt (\\<subseteq>) (F n) \\<and>\n       set (F n) \\<subseteq> {S. infinite S} \\<and>\n       set (F n) \\<subseteq> Pow M \\<and>\n       Inf ` set (F n) \\<subseteq> M \\<Longrightarrow>\n       F (Suc n) \\<noteq> [] \\<and>\n       sorted_wrt (\\<subseteq>) (F (Suc n)) \\<and>\n       set (F (Suc n)) \\<subseteq> {S. infinite S} \\<and>\n       set (F (Suc n)) \\<subseteq> Pow M \\<and>\n       Inf ` set (F (Suc n)) \\<subseteq> M", "with 1 2 3"], ["proof (chain)\npicking this:\n  Ball (set (F n)) ((\\<subseteq>) (Eps (\\<Phi> (F n))))\n  infinite (Eps (\\<Phi> (F n)))\n  Eps (\\<Phi> (F n)) \\<subseteq> M\n  Inf (Eps (\\<Phi> (F n))) \\<in> M", "show ?case"], ["proof (prove)\nusing this:\n  Ball (set (F n)) ((\\<subseteq>) (Eps (\\<Phi> (F n))))\n  infinite (Eps (\\<Phi> (F n)))\n  Eps (\\<Phi> (F n)) \\<subseteq> M\n  Inf (Eps (\\<Phi> (F n))) \\<in> M\n\ngoal (1 subgoal):\n 1. F (Suc n) \\<noteq> [] \\<and>\n    sorted_wrt (\\<subseteq>) (F (Suc n)) \\<and>\n    set (F (Suc n)) \\<subseteq> {S. infinite S} \\<and>\n    set (F (Suc n)) \\<subseteq> Pow M \\<and>\n    Inf ` set (F (Suc n)) \\<subseteq> M", "using Suc"], ["proof (prove)\nusing this:\n  Ball (set (F n)) ((\\<subseteq>) (Eps (\\<Phi> (F n))))\n  infinite (Eps (\\<Phi> (F n)))\n  Eps (\\<Phi> (F n)) \\<subseteq> M\n  Inf (Eps (\\<Phi> (F n))) \\<in> M\n  F n \\<noteq> [] \\<and>\n  sorted_wrt (\\<subseteq>) (F n) \\<and>\n  set (F n) \\<subseteq> {S. infinite S} \\<and>\n  set (F n) \\<subseteq> Pow M \\<and> Inf ` set (F n) \\<subseteq> M\n\ngoal (1 subgoal):\n 1. F (Suc n) \\<noteq> [] \\<and>\n    sorted_wrt (\\<subseteq>) (F (Suc n)) \\<and>\n    set (F (Suc n)) \\<subseteq> {S. infinite S} \\<and>\n    set (F (Suc n)) \\<subseteq> Pow M \\<and>\n    Inf ` set (F (Suc n)) \\<subseteq> M", "by simp"], ["proof (state)\nthis:\n  F (Suc n) \\<noteq> [] \\<and>\n  sorted_wrt (\\<subseteq>) (F (Suc n)) \\<and>\n  set (F (Suc n)) \\<subseteq> {S. infinite S} \\<and>\n  set (F (Suc n)) \\<subseteq> Pow M \\<and>\n  Inf ` set (F (Suc n)) \\<subseteq> M\n\ngoal (1 subgoal):\n 1. F 0 \\<noteq> [] \\<and>\n    sorted_wrt (\\<subseteq>) (F 0) \\<and>\n    set (F 0) \\<subseteq> {S. infinite S} \\<and>\n    set (F 0) \\<subseteq> Pow M \\<and> Inf ` set (F 0) \\<subseteq> M", "qed (auto simp: InfM \\<open>infinite M\\<close>)"], ["proof (state)\nthis:\n  F ?n \\<noteq> [] \\<and>\n  sorted_wrt (\\<subseteq>) (F ?n) \\<and>\n  set (F ?n) \\<subseteq> {S. infinite S} \\<and>\n  set (F ?n) \\<subseteq> Pow M \\<and> Inf ` set (F ?n) \\<subseteq> M\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         \\<And>S n.\n            \\<lbrakk>S \\<subseteq> N; finite S; strongly_accepts \\<F> S N;\n             n \\<in> N; S \\<lless> {n}\\<rbrakk>\n            \\<Longrightarrow> strongly_accepts \\<F> (insert n S) N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \\<Phi>F: \"\\<Phi> (F n) (Eps (\\<Phi> (F n)))\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Phi> (F n) (Eps (\\<Phi> (F n)))", "by (metis Ball_Collect F Pow_iff Un_subset_iff \\<Phi>_Eps hd_in_set subset_code(1))"], ["proof (state)\nthis:\n  \\<Phi> (F ?n) (Eps (\\<Phi> (F ?n)))\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         \\<And>S n.\n            \\<lbrakk>S \\<subseteq> N; finite S; strongly_accepts \\<F> S N;\n             n \\<in> N; S \\<lless> {n}\\<rbrakk>\n            \\<Longrightarrow> strongly_accepts \\<F> (insert n S) N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<Phi> (F ?n) (Eps (\\<Phi> (F ?n)))", "have insert_closed: \"insert_closed (F n) (Eps (\\<Phi> (F n)))\" for n"], ["proof (prove)\nusing this:\n  \\<Phi> (F ?n) (Eps (\\<Phi> (F ?n)))\n\ngoal (1 subgoal):\n 1. insert_closed (F n) (Eps (\\<Phi> (F n)))", "using \\<Phi>_def"], ["proof (prove)\nusing this:\n  \\<Phi> (F ?n) (Eps (\\<Phi> (F ?n)))\n  \\<Phi> \\<equiv>\n  \\<lambda>NL N.\n     N \\<subseteq> hd NL \\<and>\n     Inf (hd NL) < Inf N \\<and> infinite N \\<and> insert_closed NL N\n\ngoal (1 subgoal):\n 1. insert_closed (F n) (Eps (\\<Phi> (F n)))", "by blast"], ["proof (state)\nthis:\n  insert_closed (F ?n) (Eps (\\<Phi> (F ?n)))\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         \\<And>S n.\n            \\<lbrakk>S \\<subseteq> N; finite S; strongly_accepts \\<F> S N;\n             n \\<in> N; S \\<lless> {n}\\<rbrakk>\n            \\<Longrightarrow> strongly_accepts \\<F> (insert n S) N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have Eps_subset_hd: \"Eps (\\<Phi> (F n)) \\<subseteq> hd (F n)\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. Eps (\\<Phi> (F n)) \\<subseteq> hd (F n)", "using \\<Phi>F \\<Phi>_def"], ["proof (prove)\nusing this:\n  \\<Phi> (F ?n) (Eps (\\<Phi> (F ?n)))\n  \\<Phi> \\<equiv>\n  \\<lambda>NL N.\n     N \\<subseteq> hd NL \\<and>\n     Inf (hd NL) < Inf N \\<and> infinite N \\<and> insert_closed NL N\n\ngoal (1 subgoal):\n 1. Eps (\\<Phi> (F n)) \\<subseteq> hd (F n)", "by blast"], ["proof (state)\nthis:\n  Eps (\\<Phi> (F ?n)) \\<subseteq> hd (F ?n)\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         \\<And>S n.\n            \\<lbrakk>S \\<subseteq> N; finite S; strongly_accepts \\<F> S N;\n             n \\<in> N; S \\<lless> {n}\\<rbrakk>\n            \\<Longrightarrow> strongly_accepts \\<F> (insert n S) N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define mmap where \"mmap \\<equiv> \\<lambda>n. Inf (hd (F (Suc n)))\""], ["proof (state)\nthis:\n  mmap \\<equiv> \\<lambda>n. Inf (hd (F (Suc n)))\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         \\<And>S n.\n            \\<lbrakk>S \\<subseteq> N; finite S; strongly_accepts \\<F> S N;\n             n \\<in> N; S \\<lless> {n}\\<rbrakk>\n            \\<Longrightarrow> strongly_accepts \\<F> (insert n S) N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"mmap n < mmap (Suc n)\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. mmap n < mmap (Suc n)", "by (metis F_simps(2) \\<Phi>F \\<Phi>_def list.sel(1) mmap_def)"], ["proof (state)\nthis:\n  mmap ?n < mmap (Suc ?n)\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         \\<And>S n.\n            \\<lbrakk>S \\<subseteq> N; finite S; strongly_accepts \\<F> S N;\n             n \\<in> N; S \\<lless> {n}\\<rbrakk>\n            \\<Longrightarrow> strongly_accepts \\<F> (insert n S) N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  mmap ?n < mmap (Suc ?n)", "have \"strict_mono mmap\""], ["proof (prove)\nusing this:\n  mmap ?n < mmap (Suc ?n)\n\ngoal (1 subgoal):\n 1. strict_mono mmap", "by (simp add: lift_Suc_mono_less strict_mono_def)"], ["proof (state)\nthis:\n  strict_mono mmap\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         \\<And>S n.\n            \\<lbrakk>S \\<subseteq> N; finite S; strongly_accepts \\<F> S N;\n             n \\<in> N; S \\<lless> {n}\\<rbrakk>\n            \\<Longrightarrow> strongly_accepts \\<F> (insert n S) N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  strict_mono mmap", "have \"inj mmap\""], ["proof (prove)\nusing this:\n  strict_mono mmap\n\ngoal (1 subgoal):\n 1. inj mmap", "by (simp add: strict_mono_imp_inj_on)"], ["proof (state)\nthis:\n  inj mmap\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         \\<And>S n.\n            \\<lbrakk>S \\<subseteq> N; finite S; strongly_accepts \\<F> S N;\n             n \\<in> N; S \\<lless> {n}\\<rbrakk>\n            \\<Longrightarrow> strongly_accepts \\<F> (insert n S) N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"Eps (\\<Phi> (F (Suc n))) \\<subseteq> Eps (\\<Phi> (F n))\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. Eps (\\<Phi> (F (Suc n))) \\<subseteq> Eps (\\<Phi> (F n))", "by (metis F_simps(2) \\<Phi>F \\<Phi>_def list.sel(1))"], ["proof (state)\nthis:\n  Eps (\\<Phi> (F (Suc ?n))) \\<subseteq> Eps (\\<Phi> (F ?n))\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         \\<And>S n.\n            \\<lbrakk>S \\<subseteq> N; finite S; strongly_accepts \\<F> S N;\n             n \\<in> N; S \\<lless> {n}\\<rbrakk>\n            \\<Longrightarrow> strongly_accepts \\<F> (insert n S) N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  Eps (\\<Phi> (F (Suc ?n))) \\<subseteq> Eps (\\<Phi> (F ?n))", "have Eps_\\<Phi>_decreasing: \"m \\<le> n \\<Longrightarrow> Eps (\\<Phi> (F n)) \\<subseteq> Eps (\\<Phi> (F m))\" for m n"], ["proof (prove)\nusing this:\n  Eps (\\<Phi> (F (Suc ?n))) \\<subseteq> Eps (\\<Phi> (F ?n))\n\ngoal (1 subgoal):\n 1. m \\<le> n \\<Longrightarrow>\n    Eps (\\<Phi> (F n)) \\<subseteq> Eps (\\<Phi> (F m))", "by (rule order_class.lift_Suc_antimono_le)"], ["proof (state)\nthis:\n  ?m \\<le> ?n \\<Longrightarrow>\n  Eps (\\<Phi> (F ?n)) \\<subseteq> Eps (\\<Phi> (F ?m))\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         \\<And>S n.\n            \\<lbrakk>S \\<subseteq> N; finite S; strongly_accepts \\<F> S N;\n             n \\<in> N; S \\<lless> {n}\\<rbrakk>\n            \\<Longrightarrow> strongly_accepts \\<F> (insert n S) N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have hd_Suc_eq_Eps: \"hd (F (Suc n)) = Eps (\\<Phi> (F n))\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. hd (F (Suc n)) = Eps (\\<Phi> (F n))", "by simp"], ["proof (state)\nthis:\n  hd (F (Suc ?n)) = Eps (\\<Phi> (F ?n))\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         \\<And>S n.\n            \\<lbrakk>S \\<subseteq> N; finite S; strongly_accepts \\<F> S N;\n             n \\<in> N; S \\<lless> {n}\\<rbrakk>\n            \\<Longrightarrow> strongly_accepts \\<F> (insert n S) N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"Inf (hd (F n)) \\<in> hd (F n)\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf (hd (F n)) \\<in> hd (F n)", "by (metis Inf_nat_def1 \\<Phi>F \\<Phi>_def finite.emptyI finite_subset)"], ["proof (state)\nthis:\n  Inf (hd (F ?n)) \\<in> hd (F ?n)\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         \\<And>S n.\n            \\<lbrakk>S \\<subseteq> N; finite S; strongly_accepts \\<F> S N;\n             n \\<in> N; S \\<lless> {n}\\<rbrakk>\n            \\<Longrightarrow> strongly_accepts \\<F> (insert n S) N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  Inf (hd (F ?n)) \\<in> hd (F ?n)", "have Inf_hd_in_Eps: \"Inf (hd (F m)) \\<in> Eps (\\<Phi> (F n))\" if \"m>n\" for m n"], ["proof (prove)\nusing this:\n  Inf (hd (F ?n)) \\<in> hd (F ?n)\n\ngoal (1 subgoal):\n 1. Inf (hd (F m)) \\<in> Eps (\\<Phi> (F n))", "by (metis Eps_\\<Phi>_decreasing Nat.lessE hd_Suc_eq_Eps less_imp_le_nat subsetD that)"], ["proof (state)\nthis:\n  ?n < ?m \\<Longrightarrow> Inf (hd (F ?m)) \\<in> Eps (\\<Phi> (F ?n))\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         \\<And>S n.\n            \\<lbrakk>S \\<subseteq> N; finite S; strongly_accepts \\<F> S N;\n             n \\<in> N; S \\<lless> {n}\\<rbrakk>\n            \\<Longrightarrow> strongly_accepts \\<F> (insert n S) N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  ?n < ?m \\<Longrightarrow> Inf (hd (F ?m)) \\<in> Eps (\\<Phi> (F ?n))", "have image_mmap_subset_hd_F: \"mmap ` {n..} \\<subseteq> hd (F (Suc n))\" for n"], ["proof (prove)\nusing this:\n  ?n < ?m \\<Longrightarrow> Inf (hd (F ?m)) \\<in> Eps (\\<Phi> (F ?n))\n\ngoal (1 subgoal):\n 1. mmap ` {n..} \\<subseteq> hd (F (Suc n))", "by (metis hd_Suc_eq_Eps atLeast_iff image_subsetI le_imp_less_Suc mmap_def)"], ["proof (state)\nthis:\n  mmap ` {?n..} \\<subseteq> hd (F (Suc ?n))\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         \\<And>S n.\n            \\<lbrakk>S \\<subseteq> N; finite S; strongly_accepts \\<F> S N;\n             n \\<in> N; S \\<lless> {n}\\<rbrakk>\n            \\<Longrightarrow> strongly_accepts \\<F> (insert n S) N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"list.set (F k) \\<subseteq> list.set (F n)\" if \"k \\<le> n\" for k n"], ["proof (prove)\ngoal (1 subgoal):\n 1. set (F k) \\<subseteq> set (F n)", "by (rule order_class.lift_Suc_mono_le) (use that in auto)"], ["proof (state)\nthis:\n  ?k \\<le> ?n \\<Longrightarrow> set (F ?k) \\<subseteq> set (F ?n)\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         \\<And>S n.\n            \\<lbrakk>S \\<subseteq> N; finite S; strongly_accepts \\<F> S N;\n             n \\<in> N; S \\<lless> {n}\\<rbrakk>\n            \\<Longrightarrow> strongly_accepts \\<F> (insert n S) N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  ?k \\<le> ?n \\<Longrightarrow> set (F ?k) \\<subseteq> set (F ?n)", "have hd_F_in_F: \"hd (F k) \\<in> list.set (F n)\" if \"k \\<le> n\" for k n"], ["proof (prove)\nusing this:\n  ?k \\<le> ?n \\<Longrightarrow> set (F ?k) \\<subseteq> set (F ?n)\n\ngoal (1 subgoal):\n 1. hd (F k) \\<in> set (F n)", "by (meson F hd_in_set subsetD that)"], ["proof (state)\nthis:\n  ?k \\<le> ?n \\<Longrightarrow> hd (F ?k) \\<in> set (F ?n)\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         \\<And>S n.\n            \\<lbrakk>S \\<subseteq> N; finite S; strongly_accepts \\<F> S N;\n             n \\<in> N; S \\<lless> {n}\\<rbrakk>\n            \\<Longrightarrow> strongly_accepts \\<F> (insert n S) N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. ?N \\<subseteq> M\n 2. infinite ?N\n 3. \\<And>S n.\n       \\<lbrakk>S \\<subseteq> ?N; finite S; strongly_accepts \\<F> S ?N;\n        n \\<in> ?N; S \\<lless> {n}\\<rbrakk>\n       \\<Longrightarrow> strongly_accepts \\<F> (insert n S) ?N", "show infinite_mm: \"infinite (range mmap)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite (range mmap)", "using \\<open>inj mmap\\<close> range_inj_infinite"], ["proof (prove)\nusing this:\n  inj mmap\n  inj ?f \\<Longrightarrow> infinite (range ?f)\n\ngoal (1 subgoal):\n 1. infinite (range mmap)", "by blast"], ["proof (state)\nthis:\n  infinite (range mmap)\n\ngoal (2 subgoals):\n 1. range mmap \\<subseteq> M\n 2. \\<And>S n.\n       \\<lbrakk>S \\<subseteq> range mmap; finite S;\n        strongly_accepts \\<F> S (range mmap); n \\<in> range mmap;\n        S \\<lless> {n}\\<rbrakk>\n       \\<Longrightarrow> strongly_accepts \\<F> (insert n S) (range mmap)", "show \"range mmap \\<subseteq> M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range mmap \\<subseteq> M", "using Eps_subset_hd image_mmap_subset_hd_F"], ["proof (prove)\nusing this:\n  Eps (\\<Phi> (F ?n)) \\<subseteq> hd (F ?n)\n  mmap ` {?n..} \\<subseteq> hd (F (Suc ?n))\n\ngoal (1 subgoal):\n 1. range mmap \\<subseteq> M", "by fastforce"], ["proof (state)\nthis:\n  range mmap \\<subseteq> M\n\ngoal (1 subgoal):\n 1. \\<And>S n.\n       \\<lbrakk>S \\<subseteq> range mmap; finite S;\n        strongly_accepts \\<F> S (range mmap); n \\<in> range mmap;\n        S \\<lless> {n}\\<rbrakk>\n       \\<Longrightarrow> strongly_accepts \\<F> (insert n S) (range mmap)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>S n.\n       \\<lbrakk>S \\<subseteq> range mmap; finite S;\n        strongly_accepts \\<F> S (range mmap); n \\<in> range mmap;\n        S \\<lless> {n}\\<rbrakk>\n       \\<Longrightarrow> strongly_accepts \\<F> (insert n S) (range mmap)", "fix S a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>S n.\n       \\<lbrakk>S \\<subseteq> range mmap; finite S;\n        strongly_accepts \\<F> S (range mmap); n \\<in> range mmap;\n        S \\<lless> {n}\\<rbrakk>\n       \\<Longrightarrow> strongly_accepts \\<F> (insert n S) (range mmap)", "assume \"S \\<subseteq> range mmap\" \"finite S\" and acc: \"strongly_accepts \\<F> S (range mmap)\"\n       and a: \"a \\<in> range mmap\" and Sn: \"S \\<lless> {a}\""], ["proof (state)\nthis:\n  S \\<subseteq> range mmap\n  finite S\n  strongly_accepts \\<F> S (range mmap)\n  a \\<in> range mmap\n  S \\<lless> {a}\n\ngoal (1 subgoal):\n 1. \\<And>S n.\n       \\<lbrakk>S \\<subseteq> range mmap; finite S;\n        strongly_accepts \\<F> S (range mmap); n \\<in> range mmap;\n        S \\<lless> {n}\\<rbrakk>\n       \\<Longrightarrow> strongly_accepts \\<F> (insert n S) (range mmap)", "then"], ["proof (chain)\npicking this:\n  S \\<subseteq> range mmap\n  finite S\n  strongly_accepts \\<F> S (range mmap)\n  a \\<in> range mmap\n  S \\<lless> {a}", "obtain n where n: \"a = mmap n\""], ["proof (prove)\nusing this:\n  S \\<subseteq> range mmap\n  finite S\n  strongly_accepts \\<F> S (range mmap)\n  a \\<in> range mmap\n  S \\<lless> {a}\n\ngoal (1 subgoal):\n 1. (\\<And>n. a = mmap n \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  a = mmap n\n\ngoal (1 subgoal):\n 1. \\<And>S n.\n       \\<lbrakk>S \\<subseteq> range mmap; finite S;\n        strongly_accepts \\<F> S (range mmap); n \\<in> range mmap;\n        S \\<lless> {n}\\<rbrakk>\n       \\<Longrightarrow> strongly_accepts \\<F> (insert n S) (range mmap)", "define N where \"N \\<equiv> LEAST n. S \\<subseteq> mmap ` {..<n}\""], ["proof (state)\nthis:\n  N \\<equiv> LEAST n. S \\<subseteq> mmap ` {..<n}\n\ngoal (1 subgoal):\n 1. \\<And>S n.\n       \\<lbrakk>S \\<subseteq> range mmap; finite S;\n        strongly_accepts \\<F> S (range mmap); n \\<in> range mmap;\n        S \\<lless> {n}\\<rbrakk>\n       \\<Longrightarrow> strongly_accepts \\<F> (insert n S) (range mmap)", "have \"\\<exists>n. S \\<subseteq> mmap ` {..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n. S \\<subseteq> mmap ` {..<n}", "by (metis \\<open>S \\<subseteq> range mmap\\<close> \\<open>finite S\\<close> finite_nat_iff_bounded finite_subset_image image_mono)"], ["proof (state)\nthis:\n  \\<exists>n. S \\<subseteq> mmap ` {..<n}\n\ngoal (1 subgoal):\n 1. \\<And>S n.\n       \\<lbrakk>S \\<subseteq> range mmap; finite S;\n        strongly_accepts \\<F> S (range mmap); n \\<in> range mmap;\n        S \\<lless> {n}\\<rbrakk>\n       \\<Longrightarrow> strongly_accepts \\<F> (insert n S) (range mmap)", "then"], ["proof (chain)\npicking this:\n  \\<exists>n. S \\<subseteq> mmap ` {..<n}", "have S: \"S \\<subseteq> mmap ` {..<N}\" and minS: \"\\<And>m. m<N \\<Longrightarrow> \\<not> S \\<subseteq> mmap ` {..<m}\""], ["proof (prove)\nusing this:\n  \\<exists>n. S \\<subseteq> mmap ` {..<n}\n\ngoal (1 subgoal):\n 1. S \\<subseteq> mmap ` {..<N} &&&\n    (\\<And>m. m < N \\<Longrightarrow> \\<not> S \\<subseteq> mmap ` {..<m})", "unfolding N_def"], ["proof (prove)\nusing this:\n  \\<exists>n. S \\<subseteq> mmap ` {..<n}\n\ngoal (1 subgoal):\n 1. S \\<subseteq> mmap ` {..<LEAST n. S \\<subseteq> mmap ` {..<n}} &&&\n    (\\<And>m.\n        m < (LEAST n. S \\<subseteq> mmap ` {..<n}) \\<Longrightarrow>\n        \\<not> S \\<subseteq> mmap ` {..<m})", "by (meson LeastI_ex not_less_Least)+"], ["proof (state)\nthis:\n  S \\<subseteq> mmap ` {..<N}\n  ?m < N \\<Longrightarrow> \\<not> S \\<subseteq> mmap ` {..<?m}\n\ngoal (1 subgoal):\n 1. \\<And>S n.\n       \\<lbrakk>S \\<subseteq> range mmap; finite S;\n        strongly_accepts \\<F> S (range mmap); n \\<in> range mmap;\n        S \\<lless> {n}\\<rbrakk>\n       \\<Longrightarrow> strongly_accepts \\<F> (insert n S) (range mmap)", "have range_mmap_subset: \"range mmap \\<subseteq> Inf ` list.set (F n) \\<union> hd (F n)\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. range mmap \\<subseteq> Inf ` set (F n) \\<union> hd (F n)", "proof (induction n)"], ["proof (state)\ngoal (2 subgoals):\n 1. range mmap \\<subseteq> Inf ` set (F 0) \\<union> hd (F 0)\n 2. \\<And>n.\n       range mmap\n       \\<subseteq> Inf ` set (F n) \\<union> hd (F n) \\<Longrightarrow>\n       range mmap \\<subseteq> Inf ` set (F (Suc n)) \\<union> hd (F (Suc n))", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. range mmap \\<subseteq> Inf ` set (F 0) \\<union> hd (F 0)\n 2. \\<And>n.\n       range mmap\n       \\<subseteq> Inf ` set (F n) \\<union> hd (F n) \\<Longrightarrow>\n       range mmap \\<subseteq> Inf ` set (F (Suc n)) \\<union> hd (F (Suc n))", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. range mmap \\<subseteq> Inf ` set (F 0) \\<union> hd (F 0)", "using Eps_subset_hd image_mmap_subset_hd_F"], ["proof (prove)\nusing this:\n  Eps (\\<Phi> (F ?n)) \\<subseteq> hd (F ?n)\n  mmap ` {?n..} \\<subseteq> hd (F (Suc ?n))\n\ngoal (1 subgoal):\n 1. range mmap \\<subseteq> Inf ` set (F 0) \\<union> hd (F 0)", "by fastforce"], ["proof (state)\nthis:\n  range mmap \\<subseteq> Inf ` set (F 0) \\<union> hd (F 0)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       range mmap\n       \\<subseteq> Inf ` set (F n) \\<union> hd (F n) \\<Longrightarrow>\n       range mmap \\<subseteq> Inf ` set (F (Suc n)) \\<union> hd (F (Suc n))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       range mmap\n       \\<subseteq> Inf ` set (F n) \\<union> hd (F n) \\<Longrightarrow>\n       range mmap \\<subseteq> Inf ` set (F (Suc n)) \\<union> hd (F (Suc n))", "case (Suc n)"], ["proof (state)\nthis:\n  range mmap \\<subseteq> Inf ` set (F n) \\<union> hd (F n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       range mmap\n       \\<subseteq> Inf ` set (F n) \\<union> hd (F n) \\<Longrightarrow>\n       range mmap \\<subseteq> Inf ` set (F (Suc n)) \\<union> hd (F (Suc n))", "then"], ["proof (chain)\npicking this:\n  range mmap \\<subseteq> Inf ` set (F n) \\<union> hd (F n)", "show ?case"], ["proof (prove)\nusing this:\n  range mmap \\<subseteq> Inf ` set (F n) \\<union> hd (F n)\n\ngoal (1 subgoal):\n 1. range mmap \\<subseteq> Inf ` set (F (Suc n)) \\<union> hd (F (Suc n))", "by clarsimp (metis Inf_hd_in_Eps hd_F_in_F image_iff leI mmap_def)"], ["proof (state)\nthis:\n  range mmap \\<subseteq> Inf ` set (F (Suc n)) \\<union> hd (F (Suc n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  range mmap \\<subseteq> Inf ` set (F ?n) \\<union> hd (F ?n)\n\ngoal (1 subgoal):\n 1. \\<And>S n.\n       \\<lbrakk>S \\<subseteq> range mmap; finite S;\n        strongly_accepts \\<F> S (range mmap); n \\<in> range mmap;\n        S \\<lless> {n}\\<rbrakk>\n       \\<Longrightarrow> strongly_accepts \\<F> (insert n S) (range mmap)", "have subM: \"(Inf ` list.set (F N) \\<union> hd (F N)) \\<subseteq> M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf ` set (F N) \\<union> hd (F N) \\<subseteq> M", "by (meson F PowD hd_in_set subsetD sup.boundedI)"], ["proof (state)\nthis:\n  Inf ` set (F N) \\<union> hd (F N) \\<subseteq> M\n\ngoal (1 subgoal):\n 1. \\<And>S n.\n       \\<lbrakk>S \\<subseteq> range mmap; finite S;\n        strongly_accepts \\<F> S (range mmap); n \\<in> range mmap;\n        S \\<lless> {n}\\<rbrakk>\n       \\<Longrightarrow> strongly_accepts \\<F> (insert n S) (range mmap)", "have \"strongly_accepts \\<F> (insert a S) (Inf ` list.set (F N) \\<union> hd (F N))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strongly_accepts \\<F> (insert a S) (Inf ` set (F N) \\<union> hd (F N))", "proof (rule insert_closed [unfolded insert_closed_def, rule_format])"], ["proof (state)\ngoal (4 subgoals):\n 1. S \\<subseteq> Inf ` set (F N)\n 2. a \\<in> Eps (\\<Phi> (F N))\n 3. strongly_accepts \\<F> S (Inf ` set (F N) \\<union> hd (F N))\n 4. S \\<lless> {a}", "have \"mmap ` {..<N} \\<subseteq> Inf ` list.set (F N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mmap ` {..<N} \\<subseteq> Inf ` set (F N)", "using Suc_leI hd_F_in_F"], ["proof (prove)\nusing this:\n  ?m < ?n \\<Longrightarrow> Suc ?m \\<le> ?n\n  ?k \\<le> ?n \\<Longrightarrow> hd (F ?k) \\<in> set (F ?n)\n\ngoal (1 subgoal):\n 1. mmap ` {..<N} \\<subseteq> Inf ` set (F N)", "by (fastforce simp: mmap_def le_eq_less_or_eq)"], ["proof (state)\nthis:\n  mmap ` {..<N} \\<subseteq> Inf ` set (F N)\n\ngoal (4 subgoals):\n 1. S \\<subseteq> Inf ` set (F N)\n 2. a \\<in> Eps (\\<Phi> (F N))\n 3. strongly_accepts \\<F> S (Inf ` set (F N) \\<union> hd (F N))\n 4. S \\<lless> {a}", "with S"], ["proof (chain)\npicking this:\n  S \\<subseteq> mmap ` {..<N}\n  mmap ` {..<N} \\<subseteq> Inf ` set (F N)", "show Ssub: \"S \\<subseteq> Inf ` list.set (F N)\""], ["proof (prove)\nusing this:\n  S \\<subseteq> mmap ` {..<N}\n  mmap ` {..<N} \\<subseteq> Inf ` set (F N)\n\ngoal (1 subgoal):\n 1. S \\<subseteq> Inf ` set (F N)", "by auto"], ["proof (state)\nthis:\n  S \\<subseteq> Inf ` set (F N)\n\ngoal (3 subgoals):\n 1. a \\<in> Eps (\\<Phi> (F N))\n 2. strongly_accepts \\<F> S (Inf ` set (F N) \\<union> hd (F N))\n 3. S \\<lless> {a}", "have \"S \\<subseteq> mmap ` {..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<subseteq> mmap ` {..<n}", "using Sn S \\<open>strict_mono mmap\\<close> strict_mono_less"], ["proof (prove)\nusing this:\n  S \\<lless> {a}\n  S \\<subseteq> mmap ` {..<N}\n  strict_mono mmap\n  strict_mono ?f \\<Longrightarrow> (?f ?x < ?f ?y) = (?x < ?y)\n\ngoal (1 subgoal):\n 1. S \\<subseteq> mmap ` {..<n}", "by (fastforce simp: less_sets_def n  image_iff subset_iff Bex_def)"], ["proof (state)\nthis:\n  S \\<subseteq> mmap ` {..<n}\n\ngoal (3 subgoals):\n 1. a \\<in> Eps (\\<Phi> (F N))\n 2. strongly_accepts \\<F> S (Inf ` set (F N) \\<union> hd (F N))\n 3. S \\<lless> {a}", "with leI minS"], ["proof (chain)\npicking this:\n  \\<not> ?x < ?y \\<Longrightarrow> ?y \\<le> ?x\n  ?m < N \\<Longrightarrow> \\<not> S \\<subseteq> mmap ` {..<?m}\n  S \\<subseteq> mmap ` {..<n}", "have \"n\\<ge>N\""], ["proof (prove)\nusing this:\n  \\<not> ?x < ?y \\<Longrightarrow> ?y \\<le> ?x\n  ?m < N \\<Longrightarrow> \\<not> S \\<subseteq> mmap ` {..<?m}\n  S \\<subseteq> mmap ` {..<n}\n\ngoal (1 subgoal):\n 1. N \\<le> n", "by blast"], ["proof (state)\nthis:\n  N \\<le> n\n\ngoal (3 subgoals):\n 1. a \\<in> Eps (\\<Phi> (F N))\n 2. strongly_accepts \\<F> S (Inf ` set (F N) \\<union> hd (F N))\n 3. S \\<lless> {a}", "then"], ["proof (chain)\npicking this:\n  N \\<le> n", "show \"a \\<in> Eps (\\<Phi> (F N))\""], ["proof (prove)\nusing this:\n  N \\<le> n\n\ngoal (1 subgoal):\n 1. a \\<in> Eps (\\<Phi> (F N))", "using image_mmap_subset_hd_F n"], ["proof (prove)\nusing this:\n  N \\<le> n\n  mmap ` {?n..} \\<subseteq> hd (F (Suc ?n))\n  a = mmap n\n\ngoal (1 subgoal):\n 1. a \\<in> Eps (\\<Phi> (F N))", "by fastforce"], ["proof (state)\nthis:\n  a \\<in> Eps (\\<Phi> (F N))\n\ngoal (2 subgoals):\n 1. strongly_accepts \\<F> S (Inf ` set (F N) \\<union> hd (F N))\n 2. S \\<lless> {a}", "show \"strongly_accepts \\<F> S (Inf ` list.set (F N) \\<union> hd (F N))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strongly_accepts \\<F> S (Inf ` set (F N) \\<union> hd (F N))", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> strongly_accepts \\<F> S\n            (Inf ` set (F N) \\<union> hd (F N)) \\<Longrightarrow>\n    False", "assume \"\\<not> strongly_accepts \\<F> S (Inf ` list.set (F N) \\<union> hd (F N))\""], ["proof (state)\nthis:\n  \\<not> strongly_accepts \\<F> S (Inf ` set (F N) \\<union> hd (F N))\n\ngoal (1 subgoal):\n 1. \\<not> strongly_accepts \\<F> S\n            (Inf ` set (F N) \\<union> hd (F N)) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<not> strongly_accepts \\<F> S (Inf ` set (F N) \\<union> hd (F N))", "have \"rejects \\<F> S (Inf ` list.set (F N) \\<union> hd (F N))\""], ["proof (prove)\nusing this:\n  \\<not> strongly_accepts \\<F> S (Inf ` set (F N) \\<union> hd (F N))\n\ngoal (1 subgoal):\n 1. rejects \\<F> S (Inf ` set (F N) \\<union> hd (F N))", "using dsM subM"], ["proof (prove)\nusing this:\n  \\<not> strongly_accepts \\<F> S (Inf ` set (F N) \\<union> hd (F N))\n  decides_subsets \\<F> M\n  Inf ` set (F N) \\<union> hd (F N) \\<subseteq> M\n\ngoal (1 subgoal):\n 1. rejects \\<F> S (Inf ` set (F N) \\<union> hd (F N))", "unfolding decides_subsets_def"], ["proof (prove)\nusing this:\n  \\<not> strongly_accepts \\<F> S (Inf ` set (F N) \\<union> hd (F N))\n  \\<forall>T\\<subseteq>M. finite T \\<longrightarrow> decides \\<F> T M\n  Inf ` set (F N) \\<union> hd (F N) \\<subseteq> M\n\ngoal (1 subgoal):\n 1. rejects \\<F> S (Inf ` set (F N) \\<union> hd (F N))", "by (meson F Ssub \\<open>finite S\\<close> decides_def decides_subset subset_trans)"], ["proof (state)\nthis:\n  rejects \\<F> S (Inf ` set (F N) \\<union> hd (F N))\n\ngoal (1 subgoal):\n 1. \\<not> strongly_accepts \\<F> S\n            (Inf ` set (F N) \\<union> hd (F N)) \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  rejects \\<F> S (Inf ` set (F N) \\<union> hd (F N))\n\ngoal (1 subgoal):\n 1. \\<not> strongly_accepts \\<F> S\n            (Inf ` set (F N) \\<union> hd (F N)) \\<Longrightarrow>\n    False", "have \"accepts \\<F> S (range mmap)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. accepts \\<F> S (range mmap)", "using \\<open>inj mmap\\<close> acc range_inj_infinite strongly_accepts_imp_accepts"], ["proof (prove)\nusing this:\n  inj mmap\n  strongly_accepts \\<F> S (range mmap)\n  inj ?f \\<Longrightarrow> infinite (range ?f)\n  \\<lbrakk>strongly_accepts ?\\<F> ?S ?M; infinite ?M\\<rbrakk>\n  \\<Longrightarrow> accepts ?\\<F> ?S ?M\n\ngoal (1 subgoal):\n 1. accepts \\<F> S (range mmap)", "by blast"], ["proof (state)\nthis:\n  accepts \\<F> S (range mmap)\n\ngoal (1 subgoal):\n 1. \\<not> strongly_accepts \\<F> S\n            (Inf ` set (F N) \\<union> hd (F N)) \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  rejects \\<F> S (Inf ` set (F N) \\<union> hd (F N))\n  accepts \\<F> S (range mmap)", "show False"], ["proof (prove)\nusing this:\n  rejects \\<F> S (Inf ` set (F N) \\<union> hd (F N))\n  accepts \\<F> S (range mmap)\n\ngoal (1 subgoal):\n 1. False", "by (meson range_mmap_subset rejects_subset)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  strongly_accepts \\<F> S (Inf ` set (F N) \\<union> hd (F N))\n\ngoal (1 subgoal):\n 1. S \\<lless> {a}", "qed (auto simp: Sn)"], ["proof (state)\nthis:\n  strongly_accepts \\<F> (insert a S) (Inf ` set (F N) \\<union> hd (F N))\n\ngoal (1 subgoal):\n 1. \\<And>S n.\n       \\<lbrakk>S \\<subseteq> range mmap; finite S;\n        strongly_accepts \\<F> S (range mmap); n \\<in> range mmap;\n        S \\<lless> {n}\\<rbrakk>\n       \\<Longrightarrow> strongly_accepts \\<F> (insert n S) (range mmap)", "then"], ["proof (chain)\npicking this:\n  strongly_accepts \\<F> (insert a S) (Inf ` set (F N) \\<union> hd (F N))", "show \"strongly_accepts \\<F> (insert a S) (range mmap)\""], ["proof (prove)\nusing this:\n  strongly_accepts \\<F> (insert a S) (Inf ` set (F N) \\<union> hd (F N))\n\ngoal (1 subgoal):\n 1. strongly_accepts \\<F> (insert a S) (range mmap)", "using range_mmap_subset strongly_accepts_subset"], ["proof (prove)\nusing this:\n  strongly_accepts \\<F> (insert a S) (Inf ` set (F N) \\<union> hd (F N))\n  range mmap \\<subseteq> Inf ` set (F ?n) \\<union> hd (F ?n)\n  \\<lbrakk>strongly_accepts ?\\<F> ?S ?M; ?N \\<subseteq> ?M\\<rbrakk>\n  \\<Longrightarrow> strongly_accepts ?\\<F> ?S ?N\n\ngoal (1 subgoal):\n 1. strongly_accepts \\<F> (insert a S) (range mmap)", "by auto"], ["proof (state)\nthis:\n  strongly_accepts \\<F> (insert a S) (range mmap)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Main Theorem\\<close>"], ["", "text\\<open>Weirdly, the assumption  @{term \"f ` \\<F> \\<subseteq> {..<2}\"} is not used here; it's perhaps unnecessary due to\n     the particular way that @{term Ramsey} is defined. It's only needed for @{term \"r > 2\"}\\<close>"], ["", "theorem Nash_Williams_2:\n  assumes \"thin_set \\<F>\" shows \"Ramsey \\<F> 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ramsey \\<F> 2", "unfolding Ramsey_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>\\<F> \\<rightarrow> {..<2}.\n       \\<forall>M.\n          infinite M \\<longrightarrow>\n          (\\<exists>N i.\n              N \\<subseteq> M \\<and>\n              infinite N \\<and>\n              i < 2 \\<and>\n              (\\<forall>j<2.\n                  j \\<noteq> i \\<longrightarrow>\n                  f -` {j} \\<inter> \\<F> \\<inter> Pow N = {}))", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f M.\n       \\<lbrakk>f \\<in> \\<F> \\<rightarrow> {..<2}; infinite M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>N i.\n                            N \\<subseteq> M \\<and>\n                            infinite N \\<and>\n                            i < 2 \\<and>\n                            (\\<forall>j<2.\n                                j \\<noteq> i \\<longrightarrow>\n                                f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "fix f :: \"nat set \\<Rightarrow> nat\" and M :: \"nat set\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f M.\n       \\<lbrakk>f \\<in> \\<F> \\<rightarrow> {..<2}; infinite M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>N i.\n                            N \\<subseteq> M \\<and>\n                            infinite N \\<and>\n                            i < 2 \\<and>\n                            (\\<forall>j<2.\n                                j \\<noteq> i \\<longrightarrow>\n                                f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "assume \"infinite M\""], ["proof (state)\nthis:\n  infinite M\n\ngoal (1 subgoal):\n 1. \\<And>f M.\n       \\<lbrakk>f \\<in> \\<F> \\<rightarrow> {..<2}; infinite M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>N i.\n                            N \\<subseteq> M \\<and>\n                            infinite N \\<and>\n                            i < 2 \\<and>\n                            (\\<forall>j<2.\n                                j \\<noteq> i \\<longrightarrow>\n                                f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "let ?\\<F> = \"\\<lambda>i. f -` {i} \\<inter> \\<F>\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f M.\n       \\<lbrakk>f \\<in> \\<F> \\<rightarrow> {..<2}; infinite M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>N i.\n                            N \\<subseteq> M \\<and>\n                            infinite N \\<and>\n                            i < 2 \\<and>\n                            (\\<forall>j<2.\n                                j \\<noteq> i \\<longrightarrow>\n                                f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "have fin\\<F>: \"\\<And>X. X \\<in> \\<F> \\<Longrightarrow> finite X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>X. X \\<in> \\<F> \\<Longrightarrow> finite X", "using assms thin_set_def"], ["proof (prove)\nusing this:\n  thin_set \\<F>\n  thin_set ?\\<F> \\<equiv>\n  ?\\<F> \\<subseteq> Collect finite \\<and>\n  (\\<forall>S\\<in>?\\<F>.\n      \\<forall>T\\<in>?\\<F>. init_segment S T \\<longrightarrow> S = T)\n\ngoal (1 subgoal):\n 1. \\<And>X. X \\<in> \\<F> \\<Longrightarrow> finite X", "by auto"], ["proof (state)\nthis:\n  ?X \\<in> \\<F> \\<Longrightarrow> finite ?X\n\ngoal (1 subgoal):\n 1. \\<And>f M.\n       \\<lbrakk>f \\<in> \\<F> \\<rightarrow> {..<2}; infinite M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>N i.\n                            N \\<subseteq> M \\<and>\n                            infinite N \\<and>\n                            i < 2 \\<and>\n                            (\\<forall>j<2.\n                                j \\<noteq> i \\<longrightarrow>\n                                f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "have thin: \"thin_set (?\\<F> i)\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. thin_set (f -` {i} \\<inter> \\<F>)", "using assms thin_set_def"], ["proof (prove)\nusing this:\n  thin_set \\<F>\n  thin_set ?\\<F> \\<equiv>\n  ?\\<F> \\<subseteq> Collect finite \\<and>\n  (\\<forall>S\\<in>?\\<F>.\n      \\<forall>T\\<in>?\\<F>. init_segment S T \\<longrightarrow> S = T)\n\ngoal (1 subgoal):\n 1. thin_set (f -` {i} \\<inter> \\<F>)", "by auto"], ["proof (state)\nthis:\n  thin_set (f -` {?i} \\<inter> \\<F>)\n\ngoal (1 subgoal):\n 1. \\<And>f M.\n       \\<lbrakk>f \\<in> \\<F> \\<rightarrow> {..<2}; infinite M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>N i.\n                            N \\<subseteq> M \\<and>\n                            infinite N \\<and>\n                            i < 2 \\<and>\n                            (\\<forall>j<2.\n                                j \\<noteq> i \\<longrightarrow>\n                                f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "obtain N where \"N \\<subseteq> M\" \"infinite N\" and N: \"decides_subsets (?\\<F> 0) N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         decides_subsets (f -` {0} \\<inter> \\<F>) N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>infinite M\\<close> ex_infinite_decides_subsets thin"], ["proof (prove)\nusing this:\n  infinite M\n  \\<lbrakk>thin_set ?\\<F>; infinite ?M;\n   \\<And>N.\n      \\<lbrakk>N \\<subseteq> ?M; infinite N;\n       decides_subsets ?\\<F> N\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  thin_set (f -` {?i} \\<inter> \\<F>)\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>N \\<subseteq> M; infinite N;\n         decides_subsets (f -` {0} \\<inter> \\<F>) N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  N \\<subseteq> M\n  infinite N\n  decides_subsets (f -` {0} \\<inter> \\<F>) N\n\ngoal (1 subgoal):\n 1. \\<And>f M.\n       \\<lbrakk>f \\<in> \\<F> \\<rightarrow> {..<2}; infinite M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>N i.\n                            N \\<subseteq> M \\<and>\n                            infinite N \\<and>\n                            i < 2 \\<and>\n                            (\\<forall>j<2.\n                                j \\<noteq> i \\<longrightarrow>\n                                f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "then"], ["proof (chain)\npicking this:\n  N \\<subseteq> M\n  infinite N\n  decides_subsets (f -` {0} \\<inter> \\<F>) N", "consider \"rejects (?\\<F> 0) {} N\" | \"strongly_accepts (?\\<F> 0) {} N\""], ["proof (prove)\nusing this:\n  N \\<subseteq> M\n  infinite N\n  decides_subsets (f -` {0} \\<inter> \\<F>) N\n\ngoal (1 subgoal):\n 1. \\<lbrakk>rejects (f -` {0} \\<inter> \\<F>) {} N \\<Longrightarrow> thesis;\n     strongly_accepts (f -` {0} \\<inter> \\<F>) {} N \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "unfolding decides_def decides_subsets_def"], ["proof (prove)\nusing this:\n  N \\<subseteq> M\n  infinite N\n  \\<forall>T\\<subseteq>N.\n     finite T \\<longrightarrow>\n     rejects (f -` {0} \\<inter> \\<F>) T N \\<or>\n     strongly_accepts (f -` {0} \\<inter> \\<F>) T N\n\ngoal (1 subgoal):\n 1. \\<lbrakk>rejects (f -` {0} \\<inter> \\<F>) {} N \\<Longrightarrow> thesis;\n     strongly_accepts (f -` {0} \\<inter> \\<F>) {} N \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>rejects (f -` {0} \\<inter> \\<F>) {} N \\<Longrightarrow> ?thesis;\n   strongly_accepts (f -` {0} \\<inter> \\<F>) {} N \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>f M.\n       \\<lbrakk>f \\<in> \\<F> \\<rightarrow> {..<2}; infinite M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>N i.\n                            N \\<subseteq> M \\<and>\n                            infinite N \\<and>\n                            i < 2 \\<and>\n                            (\\<forall>j<2.\n                                j \\<noteq> i \\<longrightarrow>\n                                f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>rejects (f -` {0} \\<inter> \\<F>) {} N \\<Longrightarrow> ?thesis;\n   strongly_accepts (f -` {0} \\<inter> \\<F>) {} N \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show \"\\<exists>N i. N \\<subseteq> M \\<and> infinite N \\<and> i<2 \\<and> (\\<forall>j<2. j \\<noteq> i \\<longrightarrow> f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})\""], ["proof (prove)\nusing this:\n  \\<lbrakk>rejects (f -` {0} \\<inter> \\<F>) {} N \\<Longrightarrow> ?thesis;\n   strongly_accepts (f -` {0} \\<inter> \\<F>) {} N \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<exists>N i.\n       N \\<subseteq> M \\<and>\n       infinite N \\<and>\n       i < 2 \\<and>\n       (\\<forall>j<2.\n           j \\<noteq> i \\<longrightarrow>\n           f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. rejects (f -` {0} \\<inter> \\<F>) {} N \\<Longrightarrow>\n    \\<exists>N i.\n       N \\<subseteq> M \\<and>\n       infinite N \\<and>\n       i < 2 \\<and>\n       (\\<forall>j<2.\n           j \\<noteq> i \\<longrightarrow>\n           f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})\n 2. strongly_accepts (f -` {0} \\<inter> \\<F>) {} N \\<Longrightarrow>\n    \\<exists>N i.\n       N \\<subseteq> M \\<and>\n       infinite N \\<and>\n       i < 2 \\<and>\n       (\\<forall>j<2.\n           j \\<noteq> i \\<longrightarrow>\n           f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "case 1"], ["proof (state)\nthis:\n  rejects (f -` {0} \\<inter> \\<F>) {} N\n\ngoal (2 subgoals):\n 1. rejects (f -` {0} \\<inter> \\<F>) {} N \\<Longrightarrow>\n    \\<exists>N i.\n       N \\<subseteq> M \\<and>\n       infinite N \\<and>\n       i < 2 \\<and>\n       (\\<forall>j<2.\n           j \\<noteq> i \\<longrightarrow>\n           f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})\n 2. strongly_accepts (f -` {0} \\<inter> \\<F>) {} N \\<Longrightarrow>\n    \\<exists>N i.\n       N \\<subseteq> M \\<and>\n       infinite N \\<and>\n       i < 2 \\<and>\n       (\\<forall>j<2.\n           j \\<noteq> i \\<longrightarrow>\n           f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "then"], ["proof (chain)\npicking this:\n  rejects (f -` {0} \\<inter> \\<F>) {} N", "have \"?\\<F> 0 \\<inter> Pow N = {}\""], ["proof (prove)\nusing this:\n  rejects (f -` {0} \\<inter> \\<F>) {} N\n\ngoal (1 subgoal):\n 1. f -` {0} \\<inter> \\<F> \\<inter> Pow N = {}", "unfolding rejects_def disjoint_iff"], ["proof (prove)\nusing this:\n  \\<forall>x.\n     x \\<in> comparables {} N \\<longrightarrow>\n     x \\<notin> f -` {0} \\<inter> \\<F>\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       x \\<in> f -` {0} \\<inter> \\<F> \\<longrightarrow> x \\<notin> Pow N", "by (metis IntD2 PowD comparables_iff fin\\<F> init_segment_empty sup_bot.left_neutral)"], ["proof (state)\nthis:\n  f -` {0} \\<inter> \\<F> \\<inter> Pow N = {}\n\ngoal (2 subgoals):\n 1. rejects (f -` {0} \\<inter> \\<F>) {} N \\<Longrightarrow>\n    \\<exists>N i.\n       N \\<subseteq> M \\<and>\n       infinite N \\<and>\n       i < 2 \\<and>\n       (\\<forall>j<2.\n           j \\<noteq> i \\<longrightarrow>\n           f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})\n 2. strongly_accepts (f -` {0} \\<inter> \\<F>) {} N \\<Longrightarrow>\n    \\<exists>N i.\n       N \\<subseteq> M \\<and>\n       infinite N \\<and>\n       i < 2 \\<and>\n       (\\<forall>j<2.\n           j \\<noteq> i \\<longrightarrow>\n           f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "then"], ["proof (chain)\npicking this:\n  f -` {0} \\<inter> \\<F> \\<inter> Pow N = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  f -` {0} \\<inter> \\<F> \\<inter> Pow N = {}\n\ngoal (1 subgoal):\n 1. \\<exists>N i.\n       N \\<subseteq> M \\<and>\n       infinite N \\<and>\n       i < 2 \\<and>\n       (\\<forall>j<2.\n           j \\<noteq> i \\<longrightarrow>\n           f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "using \\<open>N \\<subseteq> M\\<close> \\<open>infinite N\\<close> less_2_cases_iff"], ["proof (prove)\nusing this:\n  f -` {0} \\<inter> \\<F> \\<inter> Pow N = {}\n  N \\<subseteq> M\n  infinite N\n  (?n < 2) = (?n = 0 \\<or> ?n = Suc 0)\n\ngoal (1 subgoal):\n 1. \\<exists>N i.\n       N \\<subseteq> M \\<and>\n       infinite N \\<and>\n       i < 2 \\<and>\n       (\\<forall>j<2.\n           j \\<noteq> i \\<longrightarrow>\n           f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "by auto"], ["proof (state)\nthis:\n  \\<exists>N i.\n     N \\<subseteq> M \\<and>\n     infinite N \\<and>\n     i < 2 \\<and>\n     (\\<forall>j<2.\n         j \\<noteq> i \\<longrightarrow>\n         f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})\n\ngoal (1 subgoal):\n 1. strongly_accepts (f -` {0} \\<inter> \\<F>) {} N \\<Longrightarrow>\n    \\<exists>N i.\n       N \\<subseteq> M \\<and>\n       infinite N \\<and>\n       i < 2 \\<and>\n       (\\<forall>j<2.\n           j \\<noteq> i \\<longrightarrow>\n           f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. strongly_accepts (f -` {0} \\<inter> \\<F>) {} N \\<Longrightarrow>\n    \\<exists>N i.\n       N \\<subseteq> M \\<and>\n       infinite N \\<and>\n       i < 2 \\<and>\n       (\\<forall>j<2.\n           j \\<noteq> i \\<longrightarrow>\n           f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "case 2"], ["proof (state)\nthis:\n  strongly_accepts (f -` {0} \\<inter> \\<F>) {} N\n\ngoal (1 subgoal):\n 1. strongly_accepts (f -` {0} \\<inter> \\<F>) {} N \\<Longrightarrow>\n    \\<exists>N i.\n       N \\<subseteq> M \\<and>\n       infinite N \\<and>\n       i < 2 \\<and>\n       (\\<forall>j<2.\n           j \\<noteq> i \\<longrightarrow>\n           f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "then"], ["proof (chain)\npicking this:\n  strongly_accepts (f -` {0} \\<inter> \\<F>) {} N", "have \\<section>: \"\\<And>P. \\<lbrakk>P\\<subseteq>N; \\<And>S. \\<lbrakk>S \\<subseteq> P; finite S\\<rbrakk> \\<Longrightarrow> S \\<notin> (?\\<F> 0)\\<rbrakk> \\<Longrightarrow> finite P\""], ["proof (prove)\nusing this:\n  strongly_accepts (f -` {0} \\<inter> \\<F>) {} N\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       \\<lbrakk>P \\<subseteq> N;\n        \\<And>S.\n           \\<lbrakk>S \\<subseteq> P; finite S\\<rbrakk>\n           \\<Longrightarrow> S \\<notin> f -` {0} \\<inter> \\<F>\\<rbrakk>\n       \\<Longrightarrow> finite P", "by (auto simp: Fpow_def disjoint_iff)"], ["proof (state)\nthis:\n  \\<lbrakk>?P \\<subseteq> N;\n   \\<And>S.\n      \\<lbrakk>S \\<subseteq> ?P; finite S\\<rbrakk>\n      \\<Longrightarrow> S \\<notin> f -` {0} \\<inter> \\<F>\\<rbrakk>\n  \\<Longrightarrow> finite ?P\n\ngoal (1 subgoal):\n 1. strongly_accepts (f -` {0} \\<inter> \\<F>) {} N \\<Longrightarrow>\n    \\<exists>N i.\n       N \\<subseteq> M \\<and>\n       infinite N \\<and>\n       i < 2 \\<and>\n       (\\<forall>j<2.\n           j \\<noteq> i \\<longrightarrow>\n           f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "obtain P where \"P \\<subseteq> N\" \"infinite P\" and P:\n      \"\\<And>S n. \\<lbrakk>S \\<subseteq> P; finite S; strongly_accepts (?\\<F> 0) S P; n \\<in> P; S \\<lless> {n}\\<rbrakk>\n              \\<Longrightarrow> strongly_accepts (?\\<F> 0) (insert n S) P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>P.\n        \\<lbrakk>P \\<subseteq> N; infinite P;\n         \\<And>S n.\n            \\<lbrakk>S \\<subseteq> P; finite S;\n             strongly_accepts (f -` {0} \\<inter> \\<F>) S P; n \\<in> P;\n             S \\<lless> {n}\\<rbrakk>\n            \\<Longrightarrow> strongly_accepts (f -` {0} \\<inter> \\<F>)\n                               (insert n S) P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using strongly_accepts_1_19_plus [OF thin \\<open>infinite N\\<close> N]"], ["proof (prove)\nusing this:\n  (\\<And>Na.\n      \\<lbrakk>Na \\<subseteq> N; infinite Na;\n       \\<And>S n.\n          \\<lbrakk>S \\<subseteq> Na; finite S;\n           strongly_accepts (f -` {0} \\<inter> \\<F>) S Na; n \\<in> Na;\n           S \\<lless> {n}\\<rbrakk>\n          \\<Longrightarrow> strongly_accepts (f -` {0} \\<inter> \\<F>)\n                             (insert n S) Na\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>P.\n        \\<lbrakk>P \\<subseteq> N; infinite P;\n         \\<And>S n.\n            \\<lbrakk>S \\<subseteq> P; finite S;\n             strongly_accepts (f -` {0} \\<inter> \\<F>) S P; n \\<in> P;\n             S \\<lless> {n}\\<rbrakk>\n            \\<Longrightarrow> strongly_accepts (f -` {0} \\<inter> \\<F>)\n                               (insert n S) P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<subseteq> N\n  infinite P\n  \\<lbrakk>?S \\<subseteq> P; finite ?S;\n   strongly_accepts (f -` {0} \\<inter> \\<F>) ?S P; ?n \\<in> P;\n   ?S \\<lless> {?n}\\<rbrakk>\n  \\<Longrightarrow> strongly_accepts (f -` {0} \\<inter> \\<F>) (insert ?n ?S)\n                     P\n\ngoal (1 subgoal):\n 1. strongly_accepts (f -` {0} \\<inter> \\<F>) {} N \\<Longrightarrow>\n    \\<exists>N i.\n       N \\<subseteq> M \\<and>\n       infinite N \\<and>\n       i < 2 \\<and>\n       (\\<forall>j<2.\n           j \\<noteq> i \\<longrightarrow>\n           f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "have \"?\\<F> 1 \\<inter> Pow P = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f -` {1} \\<inter> \\<F> \\<inter> Pow P = {}", "proof (clarsimp simp: disjoint_iff)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>f x = Suc 0; x \\<in> \\<F>; x \\<subseteq> P\\<rbrakk>\n       \\<Longrightarrow> False", "fix T"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>f x = Suc 0; x \\<in> \\<F>; x \\<subseteq> P\\<rbrakk>\n       \\<Longrightarrow> False", "assume T: \"f T = Suc 0\" \"T \\<in> \\<F>\" and \"T \\<subseteq> P\""], ["proof (state)\nthis:\n  f T = Suc 0\n  T \\<in> \\<F>\n  T \\<subseteq> P\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>f x = Suc 0; x \\<in> \\<F>; x \\<subseteq> P\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  f T = Suc 0\n  T \\<in> \\<F>\n  T \\<subseteq> P", "have \"finite T\""], ["proof (prove)\nusing this:\n  f T = Suc 0\n  T \\<in> \\<F>\n  T \\<subseteq> P\n\ngoal (1 subgoal):\n 1. finite T", "using fin\\<F>"], ["proof (prove)\nusing this:\n  f T = Suc 0\n  T \\<in> \\<F>\n  T \\<subseteq> P\n  ?X \\<in> \\<F> \\<Longrightarrow> finite ?X\n\ngoal (1 subgoal):\n 1. finite T", "by blast"], ["proof (state)\nthis:\n  finite T\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>f x = Suc 0; x \\<in> \\<F>; x \\<subseteq> P\\<rbrakk>\n       \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  finite T\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>f x = Suc 0; x \\<in> \\<F>; x \\<subseteq> P\\<rbrakk>\n       \\<Longrightarrow> False", "have \"strongly_accepts (?\\<F> 0) S P\" if \"finite S\" \"S \\<subseteq> P\" for S"], ["proof (prove)\ngoal (1 subgoal):\n 1. strongly_accepts (f -` {0} \\<inter> \\<F>) S P", "using that"], ["proof (prove)\nusing this:\n  finite S\n  S \\<subseteq> P\n\ngoal (1 subgoal):\n 1. strongly_accepts (f -` {0} \\<inter> \\<F>) S P", "proof (induction \"card S\" arbitrary: S)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>S.\n       \\<lbrakk>0 = card S; finite S; S \\<subseteq> P\\<rbrakk>\n       \\<Longrightarrow> strongly_accepts (f -` {0} \\<inter> \\<F>) S P\n 2. \\<And>x S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>x = card S; finite S; S \\<subseteq> P\\<rbrakk>\n                   \\<Longrightarrow> strongly_accepts\n(f -` {0} \\<inter> \\<F>) S P;\n        Suc x = card S; finite S; S \\<subseteq> P\\<rbrakk>\n       \\<Longrightarrow> strongly_accepts (f -` {0} \\<inter> \\<F>) S P", "case (Suc n)"], ["proof (state)\nthis:\n  \\<lbrakk>n = card ?S; finite ?S; ?S \\<subseteq> P\\<rbrakk>\n  \\<Longrightarrow> strongly_accepts (f -` {0} \\<inter> \\<F>) ?S P\n  Suc n = card S\n  finite S\n  S \\<subseteq> P\n\ngoal (2 subgoals):\n 1. \\<And>S.\n       \\<lbrakk>0 = card S; finite S; S \\<subseteq> P\\<rbrakk>\n       \\<Longrightarrow> strongly_accepts (f -` {0} \\<inter> \\<F>) S P\n 2. \\<And>x S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>x = card S; finite S; S \\<subseteq> P\\<rbrakk>\n                   \\<Longrightarrow> strongly_accepts\n(f -` {0} \\<inter> \\<F>) S P;\n        Suc x = card S; finite S; S \\<subseteq> P\\<rbrakk>\n       \\<Longrightarrow> strongly_accepts (f -` {0} \\<inter> \\<F>) S P", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>n = card ?S; finite ?S; ?S \\<subseteq> P\\<rbrakk>\n  \\<Longrightarrow> strongly_accepts (f -` {0} \\<inter> \\<F>) ?S P\n  Suc n = card S\n  finite S\n  S \\<subseteq> P", "have Seq: \"S = insert (Sup S) (S - {Sup S})\""], ["proof (prove)\nusing this:\n  \\<lbrakk>n = card ?S; finite ?S; ?S \\<subseteq> P\\<rbrakk>\n  \\<Longrightarrow> strongly_accepts (f -` {0} \\<inter> \\<F>) ?S P\n  Suc n = card S\n  finite S\n  S \\<subseteq> P\n\ngoal (1 subgoal):\n 1. S = insert (Sup S) (S - {Sup S})", "using Sup_nat_def Max_eq_iff"], ["proof (prove)\nusing this:\n  \\<lbrakk>n = card ?S; finite ?S; ?S \\<subseteq> P\\<rbrakk>\n  \\<Longrightarrow> strongly_accepts (f -` {0} \\<inter> \\<F>) ?S P\n  Suc n = card S\n  finite S\n  S \\<subseteq> P\n  Sup ?X = (if ?X = {} then 0 else Max ?X)\n  \\<lbrakk>finite ?A; ?A \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> (Max ?A = ?m) =\n                    (?m \\<in> ?A \\<and> (\\<forall>a\\<in>?A. a \\<le> ?m))\n\ngoal (1 subgoal):\n 1. S = insert (Sup S) (S - {Sup S})", "by fastforce"], ["proof (state)\nthis:\n  S = insert (Sup S) (S - {Sup S})\n\ngoal (2 subgoals):\n 1. \\<And>S.\n       \\<lbrakk>0 = card S; finite S; S \\<subseteq> P\\<rbrakk>\n       \\<Longrightarrow> strongly_accepts (f -` {0} \\<inter> \\<F>) S P\n 2. \\<And>x S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>x = card S; finite S; S \\<subseteq> P\\<rbrakk>\n                   \\<Longrightarrow> strongly_accepts\n(f -` {0} \\<inter> \\<F>) S P;\n        Suc x = card S; finite S; S \\<subseteq> P\\<rbrakk>\n       \\<Longrightarrow> strongly_accepts (f -` {0} \\<inter> \\<F>) S P", "then"], ["proof (chain)\npicking this:\n  S = insert (Sup S) (S - {Sup S})", "have \"card (S - {Sup S}) = n\""], ["proof (prove)\nusing this:\n  S = insert (Sup S) (S - {Sup S})\n\ngoal (1 subgoal):\n 1. card (S - {Sup S}) = n", "using Suc card_Diff_singleton"], ["proof (prove)\nusing this:\n  S = insert (Sup S) (S - {Sup S})\n  \\<lbrakk>n = card ?S; finite ?S; ?S \\<subseteq> P\\<rbrakk>\n  \\<Longrightarrow> strongly_accepts (f -` {0} \\<inter> \\<F>) ?S P\n  Suc n = card S\n  finite S\n  S \\<subseteq> P\n  \\<lbrakk>finite ?A; ?x \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> card (?A - {?x}) = card ?A - 1\n\ngoal (1 subgoal):\n 1. card (S - {Sup S}) = n", "by fastforce"], ["proof (state)\nthis:\n  card (S - {Sup S}) = n\n\ngoal (2 subgoals):\n 1. \\<And>S.\n       \\<lbrakk>0 = card S; finite S; S \\<subseteq> P\\<rbrakk>\n       \\<Longrightarrow> strongly_accepts (f -` {0} \\<inter> \\<F>) S P\n 2. \\<And>x S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>x = card S; finite S; S \\<subseteq> P\\<rbrakk>\n                   \\<Longrightarrow> strongly_accepts\n(f -` {0} \\<inter> \\<F>) S P;\n        Suc x = card S; finite S; S \\<subseteq> P\\<rbrakk>\n       \\<Longrightarrow> strongly_accepts (f -` {0} \\<inter> \\<F>) S P", "then"], ["proof (chain)\npicking this:\n  card (S - {Sup S}) = n", "have sacc: \"strongly_accepts (?\\<F> 0) (S - {Sup S}) P\""], ["proof (prove)\nusing this:\n  card (S - {Sup S}) = n\n\ngoal (1 subgoal):\n 1. strongly_accepts (f -` {0} \\<inter> \\<F>) (S - {Sup S}) P", "using Suc"], ["proof (prove)\nusing this:\n  card (S - {Sup S}) = n\n  \\<lbrakk>n = card ?S; finite ?S; ?S \\<subseteq> P\\<rbrakk>\n  \\<Longrightarrow> strongly_accepts (f -` {0} \\<inter> \\<F>) ?S P\n  Suc n = card S\n  finite S\n  S \\<subseteq> P\n\ngoal (1 subgoal):\n 1. strongly_accepts (f -` {0} \\<inter> \\<F>) (S - {Sup S}) P", "by blast"], ["proof (state)\nthis:\n  strongly_accepts (f -` {0} \\<inter> \\<F>) (S - {Sup S}) P\n\ngoal (2 subgoals):\n 1. \\<And>S.\n       \\<lbrakk>0 = card S; finite S; S \\<subseteq> P\\<rbrakk>\n       \\<Longrightarrow> strongly_accepts (f -` {0} \\<inter> \\<F>) S P\n 2. \\<And>x S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>x = card S; finite S; S \\<subseteq> P\\<rbrakk>\n                   \\<Longrightarrow> strongly_accepts\n(f -` {0} \\<inter> \\<F>) S P;\n        Suc x = card S; finite S; S \\<subseteq> P\\<rbrakk>\n       \\<Longrightarrow> strongly_accepts (f -` {0} \\<inter> \\<F>) S P", "have \"S \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<noteq> {}", "using Suc.hyps(2)"], ["proof (prove)\nusing this:\n  Suc n = card S\n\ngoal (1 subgoal):\n 1. S \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  S \\<noteq> {}\n\ngoal (2 subgoals):\n 1. \\<And>S.\n       \\<lbrakk>0 = card S; finite S; S \\<subseteq> P\\<rbrakk>\n       \\<Longrightarrow> strongly_accepts (f -` {0} \\<inter> \\<F>) S P\n 2. \\<And>x S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>x = card S; finite S; S \\<subseteq> P\\<rbrakk>\n                   \\<Longrightarrow> strongly_accepts\n(f -` {0} \\<inter> \\<F>) S P;\n        Suc x = card S; finite S; S \\<subseteq> P\\<rbrakk>\n       \\<Longrightarrow> strongly_accepts (f -` {0} \\<inter> \\<F>) S P", "have \"S - {Sup S} \\<lless> {Sup S}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S - {Sup S} \\<lless> {Sup S}", "by (simp add: Suc.prems(1) Sup_nat_def \\<open>S \\<noteq> {}\\<close> dual_order.strict_iff_order less_sets_def)"], ["proof (state)\nthis:\n  S - {Sup S} \\<lless> {Sup S}\n\ngoal (2 subgoals):\n 1. \\<And>S.\n       \\<lbrakk>0 = card S; finite S; S \\<subseteq> P\\<rbrakk>\n       \\<Longrightarrow> strongly_accepts (f -` {0} \\<inter> \\<F>) S P\n 2. \\<And>x S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>x = card S; finite S; S \\<subseteq> P\\<rbrakk>\n                   \\<Longrightarrow> strongly_accepts\n(f -` {0} \\<inter> \\<F>) S P;\n        Suc x = card S; finite S; S \\<subseteq> P\\<rbrakk>\n       \\<Longrightarrow> strongly_accepts (f -` {0} \\<inter> \\<F>) S P", "then"], ["proof (chain)\npicking this:\n  S - {Sup S} \\<lless> {Sup S}", "have \"strongly_accepts (?\\<F> 0) (insert (Sup S) (S - {Sup S})) P\""], ["proof (prove)\nusing this:\n  S - {Sup S} \\<lless> {Sup S}\n\ngoal (1 subgoal):\n 1. strongly_accepts (f -` {0} \\<inter> \\<F>) (insert (Sup S) (S - {Sup S}))\n     P", "by (metis P Seq Suc.prems finite_Diff insert_subset sacc)"], ["proof (state)\nthis:\n  strongly_accepts (f -` {0} \\<inter> \\<F>) (insert (Sup S) (S - {Sup S})) P\n\ngoal (2 subgoals):\n 1. \\<And>S.\n       \\<lbrakk>0 = card S; finite S; S \\<subseteq> P\\<rbrakk>\n       \\<Longrightarrow> strongly_accepts (f -` {0} \\<inter> \\<F>) S P\n 2. \\<And>x S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>x = card S; finite S; S \\<subseteq> P\\<rbrakk>\n                   \\<Longrightarrow> strongly_accepts\n(f -` {0} \\<inter> \\<F>) S P;\n        Suc x = card S; finite S; S \\<subseteq> P\\<rbrakk>\n       \\<Longrightarrow> strongly_accepts (f -` {0} \\<inter> \\<F>) S P", "then"], ["proof (chain)\npicking this:\n  strongly_accepts (f -` {0} \\<inter> \\<F>) (insert (Sup S) (S - {Sup S})) P", "show ?case"], ["proof (prove)\nusing this:\n  strongly_accepts (f -` {0} \\<inter> \\<F>) (insert (Sup S) (S - {Sup S})) P\n\ngoal (1 subgoal):\n 1. strongly_accepts (f -` {0} \\<inter> \\<F>) S P", "using Seq"], ["proof (prove)\nusing this:\n  strongly_accepts (f -` {0} \\<inter> \\<F>) (insert (Sup S) (S - {Sup S})) P\n  S = insert (Sup S) (S - {Sup S})\n\ngoal (1 subgoal):\n 1. strongly_accepts (f -` {0} \\<inter> \\<F>) S P", "by auto"], ["proof (state)\nthis:\n  strongly_accepts (f -` {0} \\<inter> \\<F>) S P\n\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<lbrakk>0 = card S; finite S; S \\<subseteq> P\\<rbrakk>\n       \\<Longrightarrow> strongly_accepts (f -` {0} \\<inter> \\<F>) S P", "qed (use 2 \\<open>P \\<subseteq> N\\<close> in auto)"], ["proof (state)\nthis:\n  \\<lbrakk>finite ?S; ?S \\<subseteq> P\\<rbrakk>\n  \\<Longrightarrow> strongly_accepts (f -` {0} \\<inter> \\<F>) ?S P\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>f x = Suc 0; x \\<in> \\<F>; x \\<subseteq> P\\<rbrakk>\n       \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  finite T\n  \\<lbrakk>finite ?S; ?S \\<subseteq> P\\<rbrakk>\n  \\<Longrightarrow> strongly_accepts (f -` {0} \\<inter> \\<F>) ?S P", "have \"\\<exists>x\\<in>comparables T P. f x = 0 \\<and> x \\<in> \\<F>\""], ["proof (prove)\nusing this:\n  finite T\n  \\<lbrakk>finite ?S; ?S \\<subseteq> P\\<rbrakk>\n  \\<Longrightarrow> strongly_accepts (f -` {0} \\<inter> \\<F>) ?S P\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>comparables T P. f x = 0 \\<and> x \\<in> \\<F>", "unfolding strongly_accepts_def rejects_def disjoint_iff"], ["proof (prove)\nusing this:\n  finite T\n  \\<lbrakk>finite ?S; ?S \\<subseteq> P\\<rbrakk>\n  \\<Longrightarrow> \\<forall>N\\<subseteq>P.\n                       (\\<forall>x.\n                           x \\<in> comparables ?S N \\<longrightarrow>\n                           x \\<notin> f -` {0} \\<inter>\n\\<F>) \\<longrightarrow>\n                       finite N\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>comparables T P. f x = 0 \\<and> x \\<in> \\<F>", "by (metis \\<open>T \\<subseteq> P\\<close> \\<open>infinite P\\<close> IntE order_refl vimage_singleton_eq)"], ["proof (state)\nthis:\n  \\<exists>x\\<in>comparables T P. f x = 0 \\<and> x \\<in> \\<F>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>f x = Suc 0; x \\<in> \\<F>; x \\<subseteq> P\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>x\\<in>comparables T P. f x = 0 \\<and> x \\<in> \\<F>", "show False"], ["proof (prove)\nusing this:\n  \\<exists>x\\<in>comparables T P. f x = 0 \\<and> x \\<in> \\<F>\n\ngoal (1 subgoal):\n 1. False", "using T assms thin_set_def comparables_def"], ["proof (prove)\nusing this:\n  \\<exists>x\\<in>comparables T P. f x = 0 \\<and> x \\<in> \\<F>\n  f T = Suc 0\n  T \\<in> \\<F>\n  thin_set \\<F>\n  thin_set ?\\<F> \\<equiv>\n  ?\\<F> \\<subseteq> Collect finite \\<and>\n  (\\<forall>S\\<in>?\\<F>.\n      \\<forall>T\\<in>?\\<F>. init_segment S T \\<longrightarrow> S = T)\n  comparables ?S ?M \\<equiv>\n  {T. finite T \\<and>\n      (init_segment T ?S \\<or>\n       init_segment ?S T \\<and> T - ?S \\<subseteq> ?M)}\n\ngoal (1 subgoal):\n 1. False", "by force"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f -` {1} \\<inter> \\<F> \\<inter> Pow P = {}\n\ngoal (1 subgoal):\n 1. strongly_accepts (f -` {0} \\<inter> \\<F>) {} N \\<Longrightarrow>\n    \\<exists>N i.\n       N \\<subseteq> M \\<and>\n       infinite N \\<and>\n       i < 2 \\<and>\n       (\\<forall>j<2.\n           j \\<noteq> i \\<longrightarrow>\n           f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "then"], ["proof (chain)\npicking this:\n  f -` {1} \\<inter> \\<F> \\<inter> Pow P = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  f -` {1} \\<inter> \\<F> \\<inter> Pow P = {}\n\ngoal (1 subgoal):\n 1. \\<exists>N i.\n       N \\<subseteq> M \\<and>\n       infinite N \\<and>\n       i < 2 \\<and>\n       (\\<forall>j<2.\n           j \\<noteq> i \\<longrightarrow>\n           f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "by (metis One_nat_def \\<open>N \\<subseteq> M\\<close> \\<open>P \\<subseteq> N\\<close> \\<open>infinite P\\<close> less_2_cases_iff subset_trans)"], ["proof (state)\nthis:\n  \\<exists>N i.\n     N \\<subseteq> M \\<and>\n     infinite N \\<and>\n     i < 2 \\<and>\n     (\\<forall>j<2.\n         j \\<noteq> i \\<longrightarrow>\n         f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>N i.\n     N \\<subseteq> M \\<and>\n     infinite N \\<and>\n     i < 2 \\<and>\n     (\\<forall>j<2.\n         j \\<noteq> i \\<longrightarrow>\n         f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem Nash_Williams:\n  assumes \\<F>: \"thin_set \\<F>\" \"r > 0\" shows \"Ramsey \\<F> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ramsey \\<F> r", "using \\<open>r > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < r\n\ngoal (1 subgoal):\n 1. Ramsey \\<F> r", "proof (induction r)"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < 0 \\<Longrightarrow> Ramsey \\<F> 0\n 2. \\<And>r.\n       \\<lbrakk>0 < r \\<Longrightarrow> Ramsey \\<F> r; 0 < Suc r\\<rbrakk>\n       \\<Longrightarrow> Ramsey \\<F> (Suc r)", "case (Suc r)"], ["proof (state)\nthis:\n  0 < r \\<Longrightarrow> Ramsey \\<F> r\n  0 < Suc r\n\ngoal (2 subgoals):\n 1. 0 < 0 \\<Longrightarrow> Ramsey \\<F> 0\n 2. \\<And>r.\n       \\<lbrakk>0 < r \\<Longrightarrow> Ramsey \\<F> r; 0 < Suc r\\<rbrakk>\n       \\<Longrightarrow> Ramsey \\<F> (Suc r)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. Ramsey \\<F> (Suc r)", "proof (cases \"r<2\")"], ["proof (state)\ngoal (2 subgoals):\n 1. r < 2 \\<Longrightarrow> Ramsey \\<F> (Suc r)\n 2. \\<not> r < 2 \\<Longrightarrow> Ramsey \\<F> (Suc r)", "case True"], ["proof (state)\nthis:\n  r < 2\n\ngoal (2 subgoals):\n 1. r < 2 \\<Longrightarrow> Ramsey \\<F> (Suc r)\n 2. \\<not> r < 2 \\<Longrightarrow> Ramsey \\<F> (Suc r)", "then"], ["proof (chain)\npicking this:\n  r < 2", "show ?thesis"], ["proof (prove)\nusing this:\n  r < 2\n\ngoal (1 subgoal):\n 1. Ramsey \\<F> (Suc r)", "by (metis Nash_Williams_2 One_nat_def Ramsey_def assms(1) less_2_cases less_one numeral_2_eq_2 order_refl)"], ["proof (state)\nthis:\n  Ramsey \\<F> (Suc r)\n\ngoal (1 subgoal):\n 1. \\<not> r < 2 \\<Longrightarrow> Ramsey \\<F> (Suc r)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> r < 2 \\<Longrightarrow> Ramsey \\<F> (Suc r)", "case False"], ["proof (state)\nthis:\n  \\<not> r < 2\n\ngoal (1 subgoal):\n 1. \\<not> r < 2 \\<Longrightarrow> Ramsey \\<F> (Suc r)", "with Suc.IH"], ["proof (chain)\npicking this:\n  0 < r \\<Longrightarrow> Ramsey \\<F> r\n  \\<not> r < 2", "have Ram: \"Ramsey \\<F> r\""], ["proof (prove)\nusing this:\n  0 < r \\<Longrightarrow> Ramsey \\<F> r\n  \\<not> r < 2\n\ngoal (1 subgoal):\n 1. Ramsey \\<F> r", "by auto"], ["proof (state)\nthis:\n  Ramsey \\<F> r\n\ngoal (1 subgoal):\n 1. \\<not> r < 2 \\<Longrightarrow> Ramsey \\<F> (Suc r)", "have \"r \\<ge> 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 \\<le> r", "by (simp add: False leI)"], ["proof (state)\nthis:\n  2 \\<le> r\n\ngoal (1 subgoal):\n 1. \\<not> r < 2 \\<Longrightarrow> Ramsey \\<F> (Suc r)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Ramsey \\<F> (Suc r)", "unfolding Ramsey_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>\\<F> \\<rightarrow> {..<Suc r}.\n       \\<forall>M.\n          infinite M \\<longrightarrow>\n          (\\<exists>N i.\n              N \\<subseteq> M \\<and>\n              infinite N \\<and>\n              i < Suc r \\<and>\n              (\\<forall>j<Suc r.\n                  j \\<noteq> i \\<longrightarrow>\n                  f -` {j} \\<inter> \\<F> \\<inter> Pow N = {}))", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f M.\n       \\<lbrakk>f \\<in> \\<F> \\<rightarrow> {..<Suc r}; infinite M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>N i.\n                            N \\<subseteq> M \\<and>\n                            infinite N \\<and>\n                            i < Suc r \\<and>\n                            (\\<forall>j<Suc r.\n                                j \\<noteq> i \\<longrightarrow>\n                                f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "fix f and M :: \"nat set\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f M.\n       \\<lbrakk>f \\<in> \\<F> \\<rightarrow> {..<Suc r}; infinite M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>N i.\n                            N \\<subseteq> M \\<and>\n                            infinite N \\<and>\n                            i < Suc r \\<and>\n                            (\\<forall>j<Suc r.\n                                j \\<noteq> i \\<longrightarrow>\n                                f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "assume fim: \"f \\<in> \\<F> \\<rightarrow> {..<Suc r}\"\n        and \"infinite M\""], ["proof (state)\nthis:\n  f \\<in> \\<F> \\<rightarrow> {..<Suc r}\n  infinite M\n\ngoal (1 subgoal):\n 1. \\<And>f M.\n       \\<lbrakk>f \\<in> \\<F> \\<rightarrow> {..<Suc r}; infinite M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>N i.\n                            N \\<subseteq> M \\<and>\n                            infinite N \\<and>\n                            i < Suc r \\<and>\n                            (\\<forall>j<Suc r.\n                                j \\<noteq> i \\<longrightarrow>\n                                f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "define g where \"g \\<equiv> \\<lambda>x. if f x = r then r-1 else f x\""], ["proof (state)\nthis:\n  g \\<equiv> \\<lambda>x. if f x = r then r - 1 else f x\n\ngoal (1 subgoal):\n 1. \\<And>f M.\n       \\<lbrakk>f \\<in> \\<F> \\<rightarrow> {..<Suc r}; infinite M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>N i.\n                            N \\<subseteq> M \\<and>\n                            infinite N \\<and>\n                            i < Suc r \\<and>\n                            (\\<forall>j<Suc r.\n                                j \\<noteq> i \\<longrightarrow>\n                                f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "have gim: \"g \\<in> \\<F> \\<rightarrow> {..<r}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<in> \\<F> \\<rightarrow> {..<r}", "using fim False"], ["proof (prove)\nusing this:\n  f \\<in> \\<F> \\<rightarrow> {..<Suc r}\n  \\<not> r < 2\n\ngoal (1 subgoal):\n 1. g \\<in> \\<F> \\<rightarrow> {..<r}", "by (force simp: g_def)"], ["proof (state)\nthis:\n  g \\<in> \\<F> \\<rightarrow> {..<r}\n\ngoal (1 subgoal):\n 1. \\<And>f M.\n       \\<lbrakk>f \\<in> \\<F> \\<rightarrow> {..<Suc r}; infinite M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>N i.\n                            N \\<subseteq> M \\<and>\n                            infinite N \\<and>\n                            i < Suc r \\<and>\n                            (\\<forall>j<Suc r.\n                                j \\<noteq> i \\<longrightarrow>\n                                f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "then"], ["proof (chain)\npicking this:\n  g \\<in> \\<F> \\<rightarrow> {..<r}", "obtain N i where  \"N \\<subseteq> M\" \"infinite N\" \"i<r\" and i: \"\\<And>j. \\<lbrakk>j<r; i\\<noteq>j\\<rbrakk> \\<Longrightarrow> g -` {j} \\<inter> \\<F> \\<inter> Pow N = {}\""], ["proof (prove)\nusing this:\n  g \\<in> \\<F> \\<rightarrow> {..<r}\n\ngoal (1 subgoal):\n 1. (\\<And>N i.\n        \\<lbrakk>N \\<subseteq> M; infinite N; i < r;\n         \\<And>j.\n            \\<lbrakk>j < r; i \\<noteq> j\\<rbrakk>\n            \\<Longrightarrow> g -` {j} \\<inter> \\<F> \\<inter> Pow N =\n                              {}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Ram \\<open>infinite M\\<close>"], ["proof (prove)\nusing this:\n  g \\<in> \\<F> \\<rightarrow> {..<r}\n  Ramsey \\<F> r\n  infinite M\n\ngoal (1 subgoal):\n 1. (\\<And>N i.\n        \\<lbrakk>N \\<subseteq> M; infinite N; i < r;\n         \\<And>j.\n            \\<lbrakk>j < r; i \\<noteq> j\\<rbrakk>\n            \\<Longrightarrow> g -` {j} \\<inter> \\<F> \\<inter> Pow N =\n                              {}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis Ramsey_def)"], ["proof (state)\nthis:\n  N \\<subseteq> M\n  infinite N\n  i < r\n  \\<lbrakk>?j < r; i \\<noteq> ?j\\<rbrakk>\n  \\<Longrightarrow> g -` {?j} \\<inter> \\<F> \\<inter> Pow N = {}\n\ngoal (1 subgoal):\n 1. \\<And>f M.\n       \\<lbrakk>f \\<in> \\<F> \\<rightarrow> {..<Suc r}; infinite M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>N i.\n                            N \\<subseteq> M \\<and>\n                            infinite N \\<and>\n                            i < Suc r \\<and>\n                            (\\<forall>j<Suc r.\n                                j \\<noteq> i \\<longrightarrow>\n                                f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "show \"\\<exists>N i. N \\<subseteq> M \\<and> infinite N \\<and> i < Suc r \\<and> (\\<forall>j<Suc r. j \\<noteq> i \\<longrightarrow> f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>N i.\n       N \\<subseteq> M \\<and>\n       infinite N \\<and>\n       i < Suc r \\<and>\n       (\\<forall>j<Suc r.\n           j \\<noteq> i \\<longrightarrow>\n           f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "proof (cases \"i<r-1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i < r - 1 \\<Longrightarrow>\n    \\<exists>N i.\n       N \\<subseteq> M \\<and>\n       infinite N \\<and>\n       i < Suc r \\<and>\n       (\\<forall>j<Suc r.\n           j \\<noteq> i \\<longrightarrow>\n           f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})\n 2. \\<not> i < r - 1 \\<Longrightarrow>\n    \\<exists>N i.\n       N \\<subseteq> M \\<and>\n       infinite N \\<and>\n       i < Suc r \\<and>\n       (\\<forall>j<Suc r.\n           j \\<noteq> i \\<longrightarrow>\n           f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "case True"], ["proof (state)\nthis:\n  i < r - 1\n\ngoal (2 subgoals):\n 1. i < r - 1 \\<Longrightarrow>\n    \\<exists>N i.\n       N \\<subseteq> M \\<and>\n       infinite N \\<and>\n       i < Suc r \\<and>\n       (\\<forall>j<Suc r.\n           j \\<noteq> i \\<longrightarrow>\n           f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})\n 2. \\<not> i < r - 1 \\<Longrightarrow>\n    \\<exists>N i.\n       N \\<subseteq> M \\<and>\n       infinite N \\<and>\n       i < Suc r \\<and>\n       (\\<forall>j<Suc r.\n           j \\<noteq> i \\<longrightarrow>\n           f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "have \"f -` {j} \\<inter> \\<F> \\<inter> Pow N = {}\" if \"j < Suc r\" \"i \\<noteq> j\" for j"], ["proof (prove)\ngoal (1 subgoal):\n 1. f -` {j} \\<inter> \\<F> \\<inter> Pow N = {}", "using \\<open>N \\<subseteq> M\\<close> \\<open>infinite N\\<close> \\<open>i<r\\<close> i that"], ["proof (prove)\nusing this:\n  N \\<subseteq> M\n  infinite N\n  i < r\n  \\<lbrakk>?j < r; i \\<noteq> ?j\\<rbrakk>\n  \\<Longrightarrow> g -` {?j} \\<inter> \\<F> \\<inter> Pow N = {}\n  j < Suc r\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. f -` {j} \\<inter> \\<F> \\<inter> Pow N = {}", "apply (clarsimp simp add: disjoint_iff g_def less_Suc_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>N \\<subseteq> M; infinite N; i < r;\n        \\<And>j.\n           \\<lbrakk>j < r; i \\<noteq> j\\<rbrakk>\n           \\<Longrightarrow> \\<forall>x.\n                                (if f x = r then r - 1 else f x) = j \\<and>\n                                x \\<in> \\<F> \\<longrightarrow>\n                                \\<not> x \\<subseteq> N;\n        f x < r \\<or> f x = r; i \\<noteq> f x; x \\<in> \\<F>; j = f x;\n        x \\<subseteq> N\\<rbrakk>\n       \\<Longrightarrow> False", "by (metis True diff_less less_nat_zero_code nat_neq_iff zero_less_one)"], ["proof (state)\nthis:\n  \\<lbrakk>?j < Suc r; i \\<noteq> ?j\\<rbrakk>\n  \\<Longrightarrow> f -` {?j} \\<inter> \\<F> \\<inter> Pow N = {}\n\ngoal (2 subgoals):\n 1. i < r - 1 \\<Longrightarrow>\n    \\<exists>N i.\n       N \\<subseteq> M \\<and>\n       infinite N \\<and>\n       i < Suc r \\<and>\n       (\\<forall>j<Suc r.\n           j \\<noteq> i \\<longrightarrow>\n           f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})\n 2. \\<not> i < r - 1 \\<Longrightarrow>\n    \\<exists>N i.\n       N \\<subseteq> M \\<and>\n       infinite N \\<and>\n       i < Suc r \\<and>\n       (\\<forall>j<Suc r.\n           j \\<noteq> i \\<longrightarrow>\n           f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?j < Suc r; i \\<noteq> ?j\\<rbrakk>\n  \\<Longrightarrow> f -` {?j} \\<inter> \\<F> \\<inter> Pow N = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?j < Suc r; i \\<noteq> ?j\\<rbrakk>\n  \\<Longrightarrow> f -` {?j} \\<inter> \\<F> \\<inter> Pow N = {}\n\ngoal (1 subgoal):\n 1. \\<exists>N i.\n       N \\<subseteq> M \\<and>\n       infinite N \\<and>\n       i < Suc r \\<and>\n       (\\<forall>j<Suc r.\n           j \\<noteq> i \\<longrightarrow>\n           f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "by (metis \\<open>N \\<subseteq> M\\<close> \\<open>infinite N\\<close> less_Suc_eq)"], ["proof (state)\nthis:\n  \\<exists>N i.\n     N \\<subseteq> M \\<and>\n     infinite N \\<and>\n     i < Suc r \\<and>\n     (\\<forall>j<Suc r.\n         j \\<noteq> i \\<longrightarrow>\n         f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})\n\ngoal (1 subgoal):\n 1. \\<not> i < r - 1 \\<Longrightarrow>\n    \\<exists>N i.\n       N \\<subseteq> M \\<and>\n       infinite N \\<and>\n       i < Suc r \\<and>\n       (\\<forall>j<Suc r.\n           j \\<noteq> i \\<longrightarrow>\n           f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> i < r - 1 \\<Longrightarrow>\n    \\<exists>N i.\n       N \\<subseteq> M \\<and>\n       infinite N \\<and>\n       i < Suc r \\<and>\n       (\\<forall>j<Suc r.\n           j \\<noteq> i \\<longrightarrow>\n           f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "case False"], ["proof (state)\nthis:\n  \\<not> i < r - 1\n\ngoal (1 subgoal):\n 1. \\<not> i < r - 1 \\<Longrightarrow>\n    \\<exists>N i.\n       N \\<subseteq> M \\<and>\n       infinite N \\<and>\n       i < Suc r \\<and>\n       (\\<forall>j<Suc r.\n           j \\<noteq> i \\<longrightarrow>\n           f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "then"], ["proof (chain)\npicking this:\n  \\<not> i < r - 1", "have \"i = r-1\""], ["proof (prove)\nusing this:\n  \\<not> i < r - 1\n\ngoal (1 subgoal):\n 1. i = r - 1", "using \\<open>i<r\\<close>"], ["proof (prove)\nusing this:\n  \\<not> i < r - 1\n  i < r\n\ngoal (1 subgoal):\n 1. i = r - 1", "by linarith"], ["proof (state)\nthis:\n  i = r - 1\n\ngoal (1 subgoal):\n 1. \\<not> i < r - 1 \\<Longrightarrow>\n    \\<exists>N i.\n       N \\<subseteq> M \\<and>\n       infinite N \\<and>\n       i < Suc r \\<and>\n       (\\<forall>j<Suc r.\n           j \\<noteq> i \\<longrightarrow>\n           f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "then"], ["proof (chain)\npicking this:\n  i = r - 1", "have null: \"f -` {j} \\<inter> \\<F> \\<inter> Pow N = {}\" if \"j<r-1\" for j"], ["proof (prove)\nusing this:\n  i = r - 1\n\ngoal (1 subgoal):\n 1. f -` {j} \\<inter> \\<F> \\<inter> Pow N = {}", "using that i [of j] \\<open>i < r\\<close>"], ["proof (prove)\nusing this:\n  i = r - 1\n  j < r - 1\n  \\<lbrakk>j < r; i \\<noteq> j\\<rbrakk>\n  \\<Longrightarrow> g -` {j} \\<inter> \\<F> \\<inter> Pow N = {}\n  i < r\n\ngoal (1 subgoal):\n 1. f -` {j} \\<inter> \\<F> \\<inter> Pow N = {}", "by (auto simp: g_def disjoint_iff split: if_split_asm)"], ["proof (state)\nthis:\n  ?j < r - 1 \\<Longrightarrow> f -` {?j} \\<inter> \\<F> \\<inter> Pow N = {}\n\ngoal (1 subgoal):\n 1. \\<not> i < r - 1 \\<Longrightarrow>\n    \\<exists>N i.\n       N \\<subseteq> M \\<and>\n       infinite N \\<and>\n       i < Suc r \\<and>\n       (\\<forall>j<Suc r.\n           j \\<noteq> i \\<longrightarrow>\n           f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "define h where \"h \\<equiv> \\<lambda>x. if f x = r then 0 else f x\""], ["proof (state)\nthis:\n  h \\<equiv> \\<lambda>x. if f x = r then 0 else f x\n\ngoal (1 subgoal):\n 1. \\<not> i < r - 1 \\<Longrightarrow>\n    \\<exists>N i.\n       N \\<subseteq> M \\<and>\n       infinite N \\<and>\n       i < Suc r \\<and>\n       (\\<forall>j<Suc r.\n           j \\<noteq> i \\<longrightarrow>\n           f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "have him: \"h \\<in> \\<F> \\<rightarrow> {..<r}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<in> \\<F> \\<rightarrow> {..<r}", "using fim i False \\<open>i<r\\<close>"], ["proof (prove)\nusing this:\n  f \\<in> \\<F> \\<rightarrow> {..<Suc r}\n  \\<lbrakk>?j < r; i \\<noteq> ?j\\<rbrakk>\n  \\<Longrightarrow> g -` {?j} \\<inter> \\<F> \\<inter> Pow N = {}\n  \\<not> i < r - 1\n  i < r\n\ngoal (1 subgoal):\n 1. h \\<in> \\<F> \\<rightarrow> {..<r}", "by (force simp: h_def)"], ["proof (state)\nthis:\n  h \\<in> \\<F> \\<rightarrow> {..<r}\n\ngoal (1 subgoal):\n 1. \\<not> i < r - 1 \\<Longrightarrow>\n    \\<exists>N i.\n       N \\<subseteq> M \\<and>\n       infinite N \\<and>\n       i < Suc r \\<and>\n       (\\<forall>j<Suc r.\n           j \\<noteq> i \\<longrightarrow>\n           f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "then"], ["proof (chain)\npicking this:\n  h \\<in> \\<F> \\<rightarrow> {..<r}", "obtain P j where \"P \\<subseteq> N\" \"infinite P\" \"j<r\" and j: \"\\<forall>k<r. j\\<noteq>k \\<longrightarrow> h -` {k} \\<inter> \\<F> \\<inter> Pow P = {}\""], ["proof (prove)\nusing this:\n  h \\<in> \\<F> \\<rightarrow> {..<r}\n\ngoal (1 subgoal):\n 1. (\\<And>P j.\n        \\<lbrakk>P \\<subseteq> N; infinite P; j < r;\n         \\<forall>k<r.\n            j \\<noteq> k \\<longrightarrow>\n            h -` {k} \\<inter> \\<F> \\<inter> Pow P = {}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis Ramsey_def Ram \\<open>infinite N\\<close>)"], ["proof (state)\nthis:\n  P \\<subseteq> N\n  infinite P\n  j < r\n  \\<forall>k<r.\n     j \\<noteq> k \\<longrightarrow>\n     h -` {k} \\<inter> \\<F> \\<inter> Pow P = {}\n\ngoal (1 subgoal):\n 1. \\<not> i < r - 1 \\<Longrightarrow>\n    \\<exists>N i.\n       N \\<subseteq> M \\<and>\n       infinite N \\<and>\n       i < Suc r \\<and>\n       (\\<forall>j<Suc r.\n           j \\<noteq> i \\<longrightarrow>\n           f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "have \"\\<exists>i. \\<forall>j<Suc r. j \\<noteq> i \\<longrightarrow> f -` {j} \\<inter> \\<F> \\<inter> Pow P = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i.\n       \\<forall>j<Suc r.\n          j \\<noteq> i \\<longrightarrow>\n          f -` {j} \\<inter> \\<F> \\<inter> Pow P = {}", "proof (cases \"j=0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    \\<exists>i.\n       \\<forall>j<Suc r.\n          j \\<noteq> i \\<longrightarrow>\n          f -` {j} \\<inter> \\<F> \\<inter> Pow P = {}\n 2. j \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>i.\n       \\<forall>j<Suc r.\n          j \\<noteq> i \\<longrightarrow>\n          f -` {j} \\<inter> \\<F> \\<inter> Pow P = {}", "case True"], ["proof (state)\nthis:\n  j = 0\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    \\<exists>i.\n       \\<forall>j<Suc r.\n          j \\<noteq> i \\<longrightarrow>\n          f -` {j} \\<inter> \\<F> \\<inter> Pow P = {}\n 2. j \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>i.\n       \\<forall>j<Suc r.\n          j \\<noteq> i \\<longrightarrow>\n          f -` {j} \\<inter> \\<F> \\<inter> Pow P = {}", "then"], ["proof (chain)\npicking this:\n  j = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  j = 0\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       \\<forall>j<Suc r.\n          j \\<noteq> i \\<longrightarrow>\n          f -` {j} \\<inter> \\<F> \\<inter> Pow P = {}", "apply (rule_tac x=r in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. j = 0 \\<Longrightarrow>\n    \\<forall>j<Suc r.\n       j \\<noteq> r \\<longrightarrow>\n       f -` {j} \\<inter> \\<F> \\<inter> Pow P = {}", "using null [of 0] \\<open>r \\<ge> 2\\<close> \\<open>P \\<subseteq> N\\<close> j"], ["proof (prove)\nusing this:\n  0 < r - 1 \\<Longrightarrow> f -` {0} \\<inter> \\<F> \\<inter> Pow N = {}\n  2 \\<le> r\n  P \\<subseteq> N\n  \\<forall>k<r.\n     j \\<noteq> k \\<longrightarrow>\n     h -` {k} \\<inter> \\<F> \\<inter> Pow P = {}\n\ngoal (1 subgoal):\n 1. j = 0 \\<Longrightarrow>\n    \\<forall>j<Suc r.\n       j \\<noteq> r \\<longrightarrow>\n       f -` {j} \\<inter> \\<F> \\<inter> Pow P = {}", "by (force simp: h_def disjoint_iff less_Suc_eq)"], ["proof (state)\nthis:\n  \\<exists>i.\n     \\<forall>j<Suc r.\n        j \\<noteq> i \\<longrightarrow>\n        f -` {j} \\<inter> \\<F> \\<inter> Pow P = {}\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>i.\n       \\<forall>j<Suc r.\n          j \\<noteq> i \\<longrightarrow>\n          f -` {j} \\<inter> \\<F> \\<inter> Pow P = {}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>i.\n       \\<forall>j<Suc r.\n          j \\<noteq> i \\<longrightarrow>\n          f -` {j} \\<inter> \\<F> \\<inter> Pow P = {}", "case False"], ["proof (state)\nthis:\n  j \\<noteq> 0\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>i.\n       \\<forall>j<Suc r.\n          j \\<noteq> i \\<longrightarrow>\n          f -` {j} \\<inter> \\<F> \\<inter> Pow P = {}", "then"], ["proof (chain)\npicking this:\n  j \\<noteq> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  j \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       \\<forall>j<Suc r.\n          j \\<noteq> i \\<longrightarrow>\n          f -` {j} \\<inter> \\<F> \\<inter> Pow P = {}", "apply (rule_tac x=j in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    \\<forall>ja<Suc r.\n       ja \\<noteq> j \\<longrightarrow>\n       f -` {ja} \\<inter> \\<F> \\<inter> Pow P = {}", "using j \\<open>j < r\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>k<r.\n     j \\<noteq> k \\<longrightarrow>\n     h -` {k} \\<inter> \\<F> \\<inter> Pow P = {}\n  j < r\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 \\<Longrightarrow>\n    \\<forall>ja<Suc r.\n       ja \\<noteq> j \\<longrightarrow>\n       f -` {ja} \\<inter> \\<F> \\<inter> Pow P = {}", "by (auto simp: h_def less_Suc_eq disjoint_iff intro: less_trans)"], ["proof (state)\nthis:\n  \\<exists>i.\n     \\<forall>j<Suc r.\n        j \\<noteq> i \\<longrightarrow>\n        f -` {j} \\<inter> \\<F> \\<inter> Pow P = {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>i.\n     \\<forall>j<Suc r.\n        j \\<noteq> i \\<longrightarrow>\n        f -` {j} \\<inter> \\<F> \\<inter> Pow P = {}\n\ngoal (1 subgoal):\n 1. \\<not> i < r - 1 \\<Longrightarrow>\n    \\<exists>N i.\n       N \\<subseteq> M \\<and>\n       infinite N \\<and>\n       i < Suc r \\<and>\n       (\\<forall>j<Suc r.\n           j \\<noteq> i \\<longrightarrow>\n           f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "then"], ["proof (chain)\npicking this:\n  \\<exists>i.\n     \\<forall>j<Suc r.\n        j \\<noteq> i \\<longrightarrow>\n        f -` {j} \\<inter> \\<F> \\<inter> Pow P = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>i.\n     \\<forall>j<Suc r.\n        j \\<noteq> i \\<longrightarrow>\n        f -` {j} \\<inter> \\<F> \\<inter> Pow P = {}\n\ngoal (1 subgoal):\n 1. \\<exists>N i.\n       N \\<subseteq> M \\<and>\n       infinite N \\<and>\n       i < Suc r \\<and>\n       (\\<forall>j<Suc r.\n           j \\<noteq> i \\<longrightarrow>\n           f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})", "by (metis Suc.prems \\<open>N \\<subseteq> M\\<close> \\<open>P \\<subseteq> N\\<close> \\<open>infinite P\\<close> subset_trans)"], ["proof (state)\nthis:\n  \\<exists>N i.\n     N \\<subseteq> M \\<and>\n     infinite N \\<and>\n     i < Suc r \\<and>\n     (\\<forall>j<Suc r.\n         j \\<noteq> i \\<longrightarrow>\n         f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>N i.\n     N \\<subseteq> M \\<and>\n     infinite N \\<and>\n     i < Suc r \\<and>\n     (\\<forall>j<Suc r.\n         j \\<noteq> i \\<longrightarrow>\n         f -` {j} \\<inter> \\<F> \\<inter> Pow N = {})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Ramsey \\<F> (Suc r)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Ramsey \\<F> (Suc r)\n\ngoal (1 subgoal):\n 1. 0 < 0 \\<Longrightarrow> Ramsey \\<F> 0", "qed auto"], ["", "end"]]}