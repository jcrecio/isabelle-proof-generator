{"file_name": "/home/qj213/afp-2021-10-22/thys/HereditarilyFinite/HF.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/HereditarilyFinite", "problem_names": ["lemma Abs_hf_0 [simp]: \"Abs_hf 0 = 0\"", "lemma finite_hfset [simp]: \"finite (hfset a)\"", "lemma HF_hfset [simp]: \"HF (hfset a) = a\"", "lemma hfset_HF [simp]: \"finite A \\<Longrightarrow> hfset (HF A) = A\"", "lemma inj_on_HF: \"inj_on HF (Collect finite)\"", "lemma hmem_hempty [simp]: \"a \\<^bold>\\<notin> 0\"", "lemmas hemptyE [elim!] = hmem_hempty [THEN notE]", "lemma hmem_hinsert [iff]:\n  \"hmem a (c \\<triangleleft> b) \\<longleftrightarrow> a = b \\<or> a \\<^bold>\\<in> c\"", "lemma hf_ext: \"a = b \\<longleftrightarrow> (\\<forall>x. x \\<^bold>\\<in> a \\<longleftrightarrow> x \\<^bold>\\<in> b)\"", "lemma finite_cases [consumes 1, case_names empty insert]:\n  \"\\<lbrakk>finite F; F = {} \\<Longrightarrow> P; \\<And>A x. \\<lbrakk>F = insert x A; x \\<notin> A; finite A\\<rbrakk> \\<Longrightarrow> P\\<rbrakk> \\<Longrightarrow> P\"", "lemma hf_cases [cases type: hf, case_names 0 hinsert]:\n  obtains \"y = 0\" | a b where \"y = b \\<triangleleft> a\" and \"a \\<^bold>\\<notin> b\"", "lemma Rep_hf_hinsert:\n  \"a \\<^bold>\\<notin> b \\<Longrightarrow> Rep_hf (hinsert a b) = 2 ^ (Rep_hf a) + Rep_hf b\"", "lemma less_two_power: \"n < 2 ^ n\"", "lemma hempty_iff: \"z=0 \\<longleftrightarrow> (\\<forall>x. x \\<^bold>\\<notin> z)\"", "lemma hinsert_iff: \"z = x \\<triangleleft> y \\<longleftrightarrow> (\\<forall>u. u \\<^bold>\\<in> z \\<longleftrightarrow> u \\<^bold>\\<in> x \\<or> u = y)\"", "lemma hf_induct [induct type: hf, case_names 0 hinsert]:\n  assumes [simp]: \"P 0\"\n                  \"\\<And>x y. \\<lbrakk>P x; P y; x \\<^bold>\\<notin> y\\<rbrakk> \\<Longrightarrow> P (y \\<triangleleft> x)\"\n  shows \"P z\"", "lemma hf_induct_ax: \"\\<lbrakk>P 0; \\<forall>x. P x \\<longrightarrow> (\\<forall>y. P y \\<longrightarrow> P (x \\<triangleleft> y))\\<rbrakk> \\<Longrightarrow> P x\"", "lemma hf_equalityI [intro]: \"(\\<And>x. x \\<^bold>\\<in> a \\<longleftrightarrow> x \\<^bold>\\<in> b) \\<Longrightarrow> a = b\"", "lemma hinsert_nonempty [simp]: \"A \\<triangleleft> a \\<noteq> 0\"", "lemma hinsert_commute: \"(z \\<triangleleft> y) \\<triangleleft> x = (z \\<triangleleft> x) \\<triangleleft> y\"", "lemma hmem_HF_iff [simp]: \"x \\<^bold>\\<in> HF A \\<longleftrightarrow> x \\<in> A \\<and> finite A\"", "lemma singleton_eq_iff [iff]: \"\\<lbrace>a\\<rbrace> = \\<lbrace>b\\<rbrace> \\<longleftrightarrow> a=b\"", "lemma doubleton_eq_iff: \"\\<lbrace>a,b\\<rbrace> = \\<lbrace>c,d\\<rbrace> \\<longleftrightarrow> (a=c \\<and> b=d) \\<or> (a=d \\<and> b=c)\"", "lemma hpair_def': \"hpair a b = \\<lbrace>\\<lbrace>a,a\\<rbrace>,\\<lbrace>a,b\\<rbrace>\\<rbrace>\"", "lemma hpair_iff [simp]: \"hpair a b = hpair a' b' \\<longleftrightarrow> a=a' \\<and> b=b'\"", "lemmas hpair_inject = hpair_iff [THEN iffD1, THEN conjE, elim!]", "lemma hfst_conv [simp]: \"hfst \\<langle>a,b\\<rangle> = a\"", "lemma hsnd_conv [simp]: \"hsnd \\<langle>a,b\\<rangle> = b\"", "lemma hsplit [simp]: \"hsplit c \\<langle>a,b\\<rangle> = c a b\"", "lemma binary_union: \"\\<exists>z. \\<forall>u. u \\<^bold>\\<in> z \\<longleftrightarrow> u \\<^bold>\\<in> x \\<or> u \\<^bold>\\<in> y\"", "lemma union_of_set: \"\\<exists>z. \\<forall>u. u \\<^bold>\\<in> z \\<longleftrightarrow> (\\<exists>y. y \\<^bold>\\<in> x \\<and> u \\<^bold>\\<in> y)\"", "lemma comprehension: \"\\<exists>z. \\<forall>u. u \\<^bold>\\<in> z \\<longleftrightarrow> u \\<^bold>\\<in> x \\<and> P u\"", "lemma HCollect_iff [iff]: \"hmem x (HCollect P A) \\<longleftrightarrow> P x \\<and> x \\<^bold>\\<in> A\"", "lemma HCollectI: \"a \\<^bold>\\<in> A \\<Longrightarrow> P a \\<Longrightarrow> hmem a \\<lbrace>x \\<^bold>\\<in> A. P x\\<rbrace>\"", "lemma HCollectE:\n  assumes \"a \\<^bold>\\<in> \\<lbrace>x \\<^bold>\\<in> A. P x\\<rbrace>\" obtains \"a \\<^bold>\\<in> A\" \"P a\"", "lemma HCollect_hempty [simp]: \"HCollect P 0 = 0\"", "lemma hunion_iff [iff]: \"hmem x (a \\<squnion> b) \\<longleftrightarrow> x \\<^bold>\\<in> a \\<or> x \\<^bold>\\<in> b\"", "lemma HUnion_iff [iff]: \"hmem x (\\<Squnion> A) \\<longleftrightarrow> (\\<exists>y. y \\<^bold>\\<in> A \\<and> x \\<^bold>\\<in> y)\"", "lemma HUnion_hempty [simp]: \"\\<Squnion> 0 = 0\"", "lemma HUnion_hinsert [simp]: \"\\<Squnion>(A \\<triangleleft> a) = a \\<squnion> \\<Squnion>A\"", "lemma HUnion_hunion [simp]: \"\\<Squnion>(A \\<squnion> B) =  \\<Squnion>A \\<squnion> \\<Squnion>B\"", "lemma hinter_iff [iff]: \"hmem u (x \\<sqinter> y) \\<longleftrightarrow> u \\<^bold>\\<in> x \\<and> u \\<^bold>\\<in> y\"", "lemma HInter_hempty [iff]: \"\\<Sqinter> 0 = 0\"", "lemma HInter_iff [simp]: \"A\\<noteq>0 \\<Longrightarrow> hmem x (\\<Sqinter> A) \\<longleftrightarrow> (\\<forall>y. y \\<^bold>\\<in> A \\<longrightarrow> x \\<^bold>\\<in> y)\"", "lemma HInter_hinsert [simp]: \"A\\<noteq>0 \\<Longrightarrow> \\<Sqinter>(A \\<triangleleft> a) = a \\<sqinter> \\<Sqinter>A\"", "lemma hdiff_iff [iff]: \"hmem u (x - y) \\<longleftrightarrow> u \\<^bold>\\<in> x \\<and> u \\<^bold>\\<notin> y\"", "lemma hdiff_zero [simp]: fixes x :: hf shows \"(x - 0) = x\"", "lemma zero_hdiff [simp]: fixes x :: hf shows \"(0 - x) = 0\"", "lemma hdiff_insert: \"A - (B \\<triangleleft> a) = A - B - \\<lbrace>a\\<rbrace>\"", "lemma hinsert_hdiff_if:\n  \"(A \\<triangleleft> x) - B = (if x \\<^bold>\\<in> B then A - B else (A - B) \\<triangleleft> x)\"", "lemma replacement:\n  \"(\\<forall>u v v'. u \\<^bold>\\<in> x \\<longrightarrow> R u v \\<longrightarrow> R u v' \\<longrightarrow> v'=v) \\<Longrightarrow> \\<exists>z. \\<forall>v. v \\<^bold>\\<in> z \\<longleftrightarrow> (\\<exists>u. u \\<^bold>\\<in> x \\<and> R u v)\"", "lemma replacement_fun: \"\\<exists>z. \\<forall>v. v \\<^bold>\\<in> z \\<longleftrightarrow> (\\<exists>u. u \\<^bold>\\<in> x \\<and> v = f u)\"", "lemma PrimReplace_iff:\n  assumes sv: \"\\<forall>u v v'. u \\<^bold>\\<in> A \\<longrightarrow> R u v \\<longrightarrow> R u v' \\<longrightarrow> v'=v\"\n  shows \"v \\<^bold>\\<in> (PrimReplace A R) \\<longleftrightarrow> (\\<exists>u. u \\<^bold>\\<in> A \\<and> R u v)\"", "lemma Replace_iff [iff]:\n  \"v \\<^bold>\\<in> Replace A R \\<longleftrightarrow> (\\<exists>u. u \\<^bold>\\<in> A \\<and> R u v \\<and> (\\<forall>y. R u y \\<longrightarrow> y=v))\"", "lemma Replace_0 [simp]: \"Replace 0 R = 0\"", "lemma Replace_hunion [simp]: \"Replace (A \\<squnion> B) R = Replace A R  \\<squnion>  Replace B R\"", "lemma Replace_cong [cong]:\n    \"\\<lbrakk> A=B;  \\<And>x y. x \\<^bold>\\<in> B \\<Longrightarrow> P x y \\<longleftrightarrow> Q x y \\<rbrakk>  \\<Longrightarrow> Replace A P = Replace B Q\"", "lemma RepFun_iff [iff]: \"v \\<^bold>\\<in> (RepFun A f) \\<longleftrightarrow> (\\<exists>u. u \\<^bold>\\<in> A \\<and> v = f u)\"", "lemma RepFun_cong [cong]:\n    \"\\<lbrakk> A=B;  \\<And>x. x \\<^bold>\\<in> B \\<Longrightarrow> f(x)=g(x) \\<rbrakk>  \\<Longrightarrow> RepFun A f = RepFun B g\"", "lemma triv_RepFun [simp]: \"RepFun A (\\<lambda>x. x) = A\"", "lemma RepFun_0 [simp]: \"RepFun 0 f = 0\"", "lemma RepFun_hinsert [simp]: \"RepFun (hinsert a b) f = hinsert (f a) (RepFun b f)\"", "lemma RepFun_hunion [simp]:\n  \"RepFun (A \\<squnion> B) f = RepFun A f  \\<squnion>  RepFun B f\"", "lemma HF_HUnion: \"\\<lbrakk>finite A; \\<And>x. x\\<in>A \\<Longrightarrow> finite (B x)\\<rbrakk> \\<Longrightarrow> HF (\\<Union>x \\<in> A. B x) = (\\<Squnion>x\\<^bold>\\<in>HF A. HF (B x))\"", "lemma hsubsetI [intro!]:\n    \"(\\<And>x. x\\<^bold>\\<in>A \\<Longrightarrow> x\\<^bold>\\<in>B) \\<Longrightarrow> A \\<le> B\"", "lemma hsubsetCE [elim]: \"\\<lbrakk> A \\<le> B;  c\\<^bold>\\<notin>A \\<Longrightarrow> P;  c\\<^bold>\\<in>B \\<Longrightarrow> P \\<rbrakk>  \\<Longrightarrow> P\"", "lemma hsubsetD [elim]: \"\\<lbrakk> A \\<le> B;  c\\<^bold>\\<in>A \\<rbrakk> \\<Longrightarrow> c\\<^bold>\\<in>B\"", "lemma rev_hsubsetD: \"\\<lbrakk> c\\<^bold>\\<in>A; A\\<le>B \\<rbrakk> \\<Longrightarrow> c\\<^bold>\\<in>B\"", "lemma contra_hsubsetD: \"\\<lbrakk> A \\<le> B; c \\<notin> B \\<rbrakk>  \\<Longrightarrow> c \\<notin> A\"", "lemma rev_contra_hsubsetD: \"\\<lbrakk> c \\<notin> B;  A \\<le> B \\<rbrakk>  \\<Longrightarrow> c \\<notin> A\"", "lemma hf_equalityE:\n  fixes A :: hf shows \"A = B \\<Longrightarrow> (A \\<le> B \\<Longrightarrow> B \\<le> A \\<Longrightarrow> P) \\<Longrightarrow> P\"", "lemma hinter_hempty_left [simp]: \"0 \\<sqinter> A = 0\"", "lemma hinter_hempty_right [simp]: \"A \\<sqinter> 0 = 0\"", "lemma hunion_hempty_left [simp]: \"0 \\<squnion> A = A\"", "lemma hunion_hempty_right [simp]: \"A \\<squnion> 0 = A\"", "lemma less_eq_hempty [simp]: \"u \\<le> 0 \\<longleftrightarrow> u = (0::hf)\"", "lemma less_eq_insert1_iff [iff]: \"(hinsert x y) \\<le> z \\<longleftrightarrow> x \\<^bold>\\<in> z \\<and> y \\<le> z\"", "lemma less_eq_insert2_iff:\n  \"z \\<le> (hinsert x y) \\<longleftrightarrow> z \\<le> y \\<or> (\\<exists>u. hinsert x u = z \\<and> x \\<^bold>\\<notin> u \\<and> u \\<le> y)\"", "lemma zero_le [simp]: \"0 \\<le> (x::hf)\"", "lemma hinsert_eq_sup: \"b \\<triangleleft> a = b \\<squnion> \\<lbrace>a\\<rbrace>\"", "lemma hunion_hinsert_left: \"hinsert x A \\<squnion> B = hinsert x (A \\<squnion> B)\"", "lemma hunion_hinsert_right: \"B \\<squnion> hinsert x A = hinsert x (B \\<squnion> A)\"", "lemma hinter_hinsert_left: \"hinsert x A \\<sqinter> B = (if x \\<^bold>\\<in> B then hinsert x (A \\<sqinter> B) else A \\<sqinter> B)\"", "lemma hinter_hinsert_right: \"B \\<sqinter> hinsert x A = (if x \\<^bold>\\<in> B then hinsert x (B \\<sqinter> A) else B \\<sqinter> A)\"", "lemma foundation:\n  assumes z: \"z \\<noteq> 0\" shows \"\\<exists>w. w \\<^bold>\\<in> z \\<and> w \\<sqinter> z = 0\"", "lemma hmem_not_refl: \"x \\<^bold>\\<notin> x\"", "lemma hmem_not_sym: \"\\<not> (x \\<^bold>\\<in> y \\<and> y \\<^bold>\\<in> x)\"", "lemma hmem_ne: \"x \\<^bold>\\<in> y \\<Longrightarrow> x \\<noteq> y\"", "lemma hmem_Sup_ne: \"x \\<^bold>\\<in> y \\<Longrightarrow> \\<Squnion>x \\<noteq> y\"", "lemma hpair_neq_fst: \"\\<langle>a,b\\<rangle> \\<noteq> a\"", "lemma hpair_neq_snd: \"\\<langle>a,b\\<rangle> \\<noteq> b\"", "lemma hpair_nonzero [simp]: \"\\<langle>x,y\\<rangle> \\<noteq> 0\"", "lemma zero_notin_hpair: \"0 \\<^bold>\\<notin> \\<langle>x,y\\<rangle>\"", "lemma hfset_0 [simp]: \"hfset 0 = {}\"", "lemma hfset_hinsert: \"hfset (b \\<triangleleft> a) = insert a (hfset b)\"", "lemma hfset_hdiff: \"hfset (x - y) = hfset x - hfset y\"", "lemma hcard_0 [simp]: \"hcard 0 = 0\"", "lemma hcard_hinsert_if: \"hcard (hinsert x y) = (if x \\<^bold>\\<in> y then hcard y else Suc (hcard y))\"", "lemma hcard_union_inter: \"hcard (x \\<squnion> y) + hcard (x \\<sqinter> y) = hcard x + hcard y\"", "lemma hcard_hdiff1_less: \"x \\<^bold>\\<in> z \\<Longrightarrow> hcard (z - \\<lbrace>x\\<rbrace>) < hcard z\"", "lemma powerset: \"\\<exists>z. \\<forall>u. u \\<^bold>\\<in> z \\<longleftrightarrow> u \\<le> x\"", "lemma HPow_iff [iff]: \"u \\<^bold>\\<in> HPow x \\<longleftrightarrow> u \\<le> x\"", "lemma HPow_mono: \"x \\<le> y \\<Longrightarrow> HPow x \\<le> HPow y\"", "lemma HPow_mono_strict: \"x < y \\<Longrightarrow> HPow x < HPow y\"", "lemma HPow_mono_iff [simp]: \"HPow x \\<le> HPow y \\<longleftrightarrow> x \\<le> y\"", "lemma HPow_mono_strict_iff [simp]: \"HPow x < HPow y \\<longleftrightarrow> x < y\"", "lemma hball_cong [cong]:\n    \"\\<lbrakk> A=A';  \\<And>x. x \\<^bold>\\<in> A' \\<Longrightarrow> P(x) \\<longleftrightarrow> P'(x) \\<rbrakk>  \\<Longrightarrow> (\\<forall>x\\<^bold>\\<in>A. P(x)) \\<longleftrightarrow> (\\<forall>x\\<^bold>\\<in>A'. P'(x))\"", "lemma hballI [intro!]: \"(\\<And>x. x\\<^bold>\\<in>A \\<Longrightarrow> P x) \\<Longrightarrow> \\<forall>x\\<^bold>\\<in>A. P x\"", "lemma hbspec [dest?]: \"\\<forall>x\\<^bold>\\<in>A. P x \\<Longrightarrow> x\\<^bold>\\<in>A \\<Longrightarrow> P x\"", "lemma hballE [elim]: \"\\<forall>x\\<^bold>\\<in>A. P x \\<Longrightarrow> (P x \\<Longrightarrow> Q) \\<Longrightarrow> (x \\<^bold>\\<notin> A \\<Longrightarrow> Q) \\<Longrightarrow> Q\"", "lemma hbex_cong [cong]:\n    \"\\<lbrakk> A=A';  \\<And>x. x \\<^bold>\\<in> A' \\<Longrightarrow> P(x) \\<longleftrightarrow> P'(x) \\<rbrakk>  \\<Longrightarrow> (\\<exists>x\\<^bold>\\<in>A. P(x)) \\<longleftrightarrow> (\\<exists>x\\<^bold>\\<in>A'. P'(x))\"", "lemma hbexI [intro]: \"P x \\<Longrightarrow> x\\<^bold>\\<in>A \\<Longrightarrow> \\<exists>x\\<^bold>\\<in>A. P x\"", "lemma rev_hbexI [intro?]: \"x\\<^bold>\\<in>A \\<Longrightarrow> P x \\<Longrightarrow> \\<exists>x\\<^bold>\\<in>A. P x\"", "lemma bexCI: \"(\\<forall>x\\<^bold>\\<in>A. \\<not> P x \\<Longrightarrow> P a) \\<Longrightarrow> a\\<^bold>\\<in>A \\<Longrightarrow> \\<exists>x\\<^bold>\\<in>A. P x\"", "lemma hbexE [elim!]: \"\\<exists>x\\<^bold>\\<in>A. P x \\<Longrightarrow> (\\<And>x. x\\<^bold>\\<in>A \\<Longrightarrow> P x \\<Longrightarrow> Q) \\<Longrightarrow> Q\"", "lemma hball_triv [simp]: \"(\\<forall>x\\<^bold>\\<in>A. P) = ((\\<exists>x. x\\<^bold>\\<in>A) \\<longrightarrow> P)\"\n  \\<comment> \\<open>trivial rewrite rule.\\<close>", "lemma hbex_triv [simp]: \"(\\<exists>x\\<^bold>\\<in>A. P) = ((\\<exists>x. x\\<^bold>\\<in>A) \\<and> P)\"\n  \\<comment> \\<open>Dual form for existentials.\\<close>", "lemma hbex_triv_one_point1 [simp]: \"(\\<exists>x\\<^bold>\\<in>A. x = a) = (a\\<^bold>\\<in>A)\"", "lemma hbex_triv_one_point2 [simp]: \"(\\<exists>x\\<^bold>\\<in>A. a = x) = (a\\<^bold>\\<in>A)\"", "lemma hbex_one_point1 [simp]: \"(\\<exists>x\\<^bold>\\<in>A. x = a \\<and> P x) = (a\\<^bold>\\<in>A \\<and> P a)\"", "lemma hbex_one_point2 [simp]: \"(\\<exists>x\\<^bold>\\<in>A. a = x \\<and> P x) = (a\\<^bold>\\<in>A \\<and> P a)\"", "lemma hball_one_point1 [simp]: \"(\\<forall>x\\<^bold>\\<in>A. x = a \\<longrightarrow> P x) = (a\\<^bold>\\<in>A \\<longrightarrow> P a)\"", "lemma hball_one_point2 [simp]: \"(\\<forall>x\\<^bold>\\<in>A. a = x \\<longrightarrow> P x) = (a\\<^bold>\\<in>A \\<longrightarrow> P a)\"", "lemma hball_conj_distrib:\n  \"(\\<forall>x\\<^bold>\\<in>A. P x \\<and> Q x) \\<longleftrightarrow> ((\\<forall>x\\<^bold>\\<in>A. P x) \\<and> (\\<forall>x\\<^bold>\\<in>A. Q x))\"", "lemma hbex_disj_distrib:\n  \"(\\<exists>x\\<^bold>\\<in>A. P x \\<or> Q x) \\<longleftrightarrow> ((\\<exists>x\\<^bold>\\<in>A. P x) \\<or> (\\<exists>x\\<^bold>\\<in>A. Q x))\"", "lemma hb_all_simps [simp, no_atp]:\n  \"\\<And>A P Q. (\\<forall>x \\<^bold>\\<in> A. P x \\<or> Q) \\<longleftrightarrow> ((\\<forall>x \\<^bold>\\<in> A. P x) \\<or> Q)\"\n  \"\\<And>A P Q. (\\<forall>x \\<^bold>\\<in> A. P \\<or> Q x) \\<longleftrightarrow> (P \\<or> (\\<forall>x \\<^bold>\\<in> A. Q x))\"\n  \"\\<And>A P Q. (\\<forall>x \\<^bold>\\<in> A. P \\<longrightarrow> Q x) \\<longleftrightarrow> (P \\<longrightarrow> (\\<forall>x \\<^bold>\\<in> A. Q x))\"\n  \"\\<And>A P Q. (\\<forall>x \\<^bold>\\<in> A. P x \\<longrightarrow> Q) \\<longleftrightarrow> ((\\<exists>x \\<^bold>\\<in> A. P x) \\<longrightarrow> Q)\"\n  \"\\<And>P. (\\<forall>x \\<^bold>\\<in> 0. P x) \\<longleftrightarrow> True\"\n  \"\\<And>a B P. (\\<forall>x \\<^bold>\\<in> B \\<triangleleft> a. P x) \\<longleftrightarrow> (P a \\<and> (\\<forall>x \\<^bold>\\<in> B. P x))\"\n  \"\\<And>P Q. (\\<forall>x \\<^bold>\\<in> HCollect Q A. P x) \\<longleftrightarrow> (\\<forall>x \\<^bold>\\<in> A. Q x \\<longrightarrow> P x)\"\n  \"\\<And>A P. (\\<not> (\\<forall>x \\<^bold>\\<in> A. P x)) \\<longleftrightarrow> (\\<exists>x \\<^bold>\\<in> A. \\<not> P x)\"", "lemma hb_ex_simps [simp, no_atp]:\n  \"\\<And>A P Q. (\\<exists>x \\<^bold>\\<in> A. P x \\<and> Q) \\<longleftrightarrow> ((\\<exists>x \\<^bold>\\<in> A. P x) \\<and> Q)\"\n  \"\\<And>A P Q. (\\<exists>x \\<^bold>\\<in> A. P \\<and> Q x) \\<longleftrightarrow> (P \\<and> (\\<exists>x \\<^bold>\\<in> A. Q x))\"\n  \"\\<And>P. (\\<exists>x \\<^bold>\\<in> 0. P x) \\<longleftrightarrow> False\"\n  \"\\<And>a B P. (\\<exists>x \\<^bold>\\<in> B \\<triangleleft> a. P x) \\<longleftrightarrow> (P a \\<or> (\\<exists>x \\<^bold>\\<in> B. P x))\"\n  \"\\<And>P Q. (\\<exists>x \\<^bold>\\<in> HCollect Q A. P x) \\<longleftrightarrow> (\\<exists>x \\<^bold>\\<in> A. Q x \\<and> P x)\"\n  \"\\<And>A P. (\\<not>(\\<exists>x \\<^bold>\\<in> A. P x)) \\<longleftrightarrow> (\\<forall>x \\<^bold>\\<in> A. \\<not> P x)\"", "lemma le_HCollect_iff: \"A \\<le> \\<lbrace>x \\<^bold>\\<in> B. P x\\<rbrace> \\<longleftrightarrow> A \\<le> B \\<and> (\\<forall>x \\<^bold>\\<in> A. P x)\"", "lemma hrestrict_iff [iff]:\n    \"z \\<^bold>\\<in> hrestrict r A \\<longleftrightarrow> z \\<^bold>\\<in> r \\<and> (\\<exists> x y. z = \\<langle>x, y\\<rangle> \\<and> x \\<^bold>\\<in> A)\"", "lemma hrelation_0 [simp]: \"hrelation 0\"", "lemma hrelation_restr [iff]: \"hrelation (hrestrict r x)\"", "lemma hrelation_hunion [simp]: \"hrelation (f \\<squnion> g) \\<longleftrightarrow> hrelation f \\<and> hrelation g\"", "lemma hfunction_restr: \"hfunction r \\<Longrightarrow> hfunction (hrestrict r x)\"", "lemma hdomain_restr [simp]: \"hdomain (hrestrict r x) = hdomain r \\<sqinter> x\"", "lemma hdomain_0 [simp]: \"hdomain 0 = 0\"", "lemma hdomain_ins [simp]: \"hdomain (r \\<triangleleft> \\<langle>x, y\\<rangle>) = hdomain r \\<triangleleft> x\"", "lemma hdomain_hunion [simp]: \"hdomain (f \\<squnion> g) = hdomain f \\<squnion> hdomain g\"", "lemma hdomain_not_mem [iff]: \"\\<langle>hdomain r, a\\<rangle> \\<^bold>\\<notin> r\"", "lemma app_singleton [simp]: \"app \\<lbrace>\\<langle>x, y\\<rangle>\\<rbrace> x = y\"", "lemma app_equality: \"hfunction f \\<Longrightarrow> \\<langle>x, y\\<rangle> \\<^bold>\\<in> f \\<Longrightarrow> app f x = y\"", "lemma app_ins2: \"x' \\<noteq> x \\<Longrightarrow> app (f \\<triangleleft> \\<langle>x, y\\<rangle>) x' = app f x'\"", "lemma hfunction_0 [simp]: \"hfunction 0\"", "lemma hfunction_ins: \"hfunction f \\<Longrightarrow> x \\<^bold>\\<notin> hdomain f \\<Longrightarrow> hfunction (f\\<triangleleft> \\<langle>x, y\\<rangle>)\"", "lemma hdomainI: \"\\<langle>x, y\\<rangle> \\<^bold>\\<in> f \\<Longrightarrow> x \\<^bold>\\<in> hdomain f\"", "lemma hfunction_hunion: \"hdomain f \\<sqinter> hdomain g = 0\n            \\<Longrightarrow> hfunction (f \\<squnion> g) \\<longleftrightarrow> hfunction f \\<and> hfunction g\"", "lemma app_hrestrict [simp]: \"x \\<^bold>\\<in> A \\<Longrightarrow> app (hrestrict f A) x = app f x\"", "lemma HUN_iff [simp]: \"b \\<^bold>\\<in> (\\<Squnion>x\\<^bold>\\<in>A. B(x)) \\<longleftrightarrow> (\\<exists>x\\<^bold>\\<in>A. b \\<^bold>\\<in> B(x))\"", "lemma HUN_I: \"\\<lbrakk> a \\<^bold>\\<in> A;  b \\<^bold>\\<in> B(a) \\<rbrakk>  \\<Longrightarrow> b \\<^bold>\\<in> (\\<Squnion>x\\<^bold>\\<in>A. B(x))\"", "lemma HUN_E [elim!]: assumes \"b \\<^bold>\\<in> (\\<Squnion>x\\<^bold>\\<in>A. B(x))\" obtains x where \"x \\<^bold>\\<in> A\"  \"b \\<^bold>\\<in> B(x)\"", "lemma HINT_iff: \"b \\<^bold>\\<in> (\\<Sqinter>x\\<^bold>\\<in>A. B(x)) \\<longleftrightarrow> (\\<forall>x\\<^bold>\\<in>A. b \\<^bold>\\<in> B(x)) \\<and> A\\<noteq>0\"", "lemma HINT_I: \"\\<lbrakk> \\<And>x. x \\<^bold>\\<in> A \\<Longrightarrow> b \\<^bold>\\<in> B(x);  A\\<noteq>0 \\<rbrakk> \\<Longrightarrow> b \\<^bold>\\<in> (\\<Sqinter>x\\<^bold>\\<in>A. B(x))\"", "lemma HINT_E: \"\\<lbrakk> b \\<^bold>\\<in> (\\<Sqinter>x\\<^bold>\\<in>A. B(x));  a \\<^bold>\\<in> A \\<rbrakk> \\<Longrightarrow> b \\<^bold>\\<in> B(a)\"", "lemma HSigma_iff [simp]: \"\\<langle>a,b\\<rangle> \\<^bold>\\<in> HSigma A B \\<longleftrightarrow> a \\<^bold>\\<in> A \\<and> b \\<^bold>\\<in> B(a)\"", "lemma HSigmaI [intro!]: \"\\<lbrakk> a \\<^bold>\\<in> A;  b \\<^bold>\\<in> B(a) \\<rbrakk>  \\<Longrightarrow> \\<langle>a,b\\<rangle> \\<^bold>\\<in> HSigma A B\"", "lemmas HSigmaD1 = HSigma_iff [THEN iffD1, THEN conjunct1]", "lemmas HSigmaD2 = HSigma_iff [THEN iffD1, THEN conjunct2]", "lemma HSigmaE [elim!]:\n  assumes \"c \\<^bold>\\<in> HSigma A B\"\n  obtains x y where \"x \\<^bold>\\<in> A\" \"y \\<^bold>\\<in> B(x)\" \"c=\\<langle>x,y\\<rangle>\"", "lemma HSigmaE2 [elim!]:\n  assumes \"\\<langle>a,b\\<rangle> \\<^bold>\\<in> HSigma A B\" obtains \"a \\<^bold>\\<in> A\" and \"b \\<^bold>\\<in> B(a)\"", "lemma HSigma_empty1 [simp]: \"HSigma 0 B = 0\"", "lemma times_iff [simp]: \"\\<langle>a,b\\<rangle> \\<^bold>\\<in> A * B \\<longleftrightarrow> a \\<^bold>\\<in> A \\<and> b \\<^bold>\\<in> B\"", "lemma timesI [intro!]: \"\\<lbrakk> a \\<^bold>\\<in> A;  b \\<^bold>\\<in> B \\<rbrakk>  \\<Longrightarrow> \\<langle>a,b\\<rangle> \\<^bold>\\<in> A * B\"", "lemmas timesD1 = times_iff [THEN iffD1, THEN conjunct1]", "lemmas timesD2 = times_iff [THEN iffD1, THEN conjunct2]", "lemma timesE [elim!]:\n  assumes c: \"c \\<^bold>\\<in> A * B\"\n  obtains x y where \"x \\<^bold>\\<in> A\" \"y \\<^bold>\\<in> B\" \"c=\\<langle>x,y\\<rangle>\"", "lemma timesE2 [elim!]:\n  assumes \"\\<langle>a,b\\<rangle> \\<^bold>\\<in> A * B\" obtains \"a \\<^bold>\\<in> A\" and \"b \\<^bold>\\<in> B\"", "lemma times_empty1 [simp]: \"0 * B = (0::hf)\"", "lemma times_empty2 [simp]: \"A*0 = (0::hf)\"", "lemma times_empty_iff: \"A*B=0 \\<longleftrightarrow> A=0 \\<or> B=(0::hf)\"", "lemmas sum_defs = plus_hf_def Inl_def Inr_def", "lemma Inl_nonzero [simp]:\"Inl x \\<noteq> 0\"", "lemma Inr_nonzero [simp]:\"Inr x \\<noteq> 0\"", "lemma Inl_in_sum_iff [iff]: \"Inl(a) \\<^bold>\\<in> A+B \\<longleftrightarrow> a \\<^bold>\\<in> A\"", "lemma Inr_in_sum_iff [iff]: \"Inr(b) \\<^bold>\\<in> A+B \\<longleftrightarrow> b \\<^bold>\\<in> B\"", "lemma sumE [elim!]:\n  assumes u: \"u \\<^bold>\\<in> A+B\"\n  obtains x where \"x \\<^bold>\\<in> A\" \"u=Inl(x)\" | y where \"y \\<^bold>\\<in> B\" \"u=Inr(y)\"", "lemma Inl_iff [iff]: \"Inl(a)=Inl(b) \\<longleftrightarrow> a=b\"", "lemma Inr_iff [iff]: \"Inr(a)=Inr(b) \\<longleftrightarrow> a=b\"", "lemma Inl_Inr_iff [iff]: \"Inl(a)=Inr(b) \\<longleftrightarrow> False\"", "lemma Inr_Inl_iff [iff]: \"Inr(b)=Inl(a) \\<longleftrightarrow> False\"", "lemma sum_empty [simp]: \"0+0 = (0::hf)\"", "lemma sum_iff: \"u \\<^bold>\\<in> A+B \\<longleftrightarrow> (\\<exists>x. x \\<^bold>\\<in> A \\<and> u=Inl(x)) \\<or> (\\<exists>y. y \\<^bold>\\<in> B \\<and> u=Inr(y))\"", "lemma sum_subset_iff:\n  fixes A :: hf shows \"A+B \\<le> C+D \\<longleftrightarrow> A\\<le>C \\<and> B\\<le>D\"", "lemma sum_equal_iff:\n  fixes A :: hf shows \"A+B = C+D \\<longleftrightarrow> A=C \\<and> B=D\"", "lemma sum_case_Inl [simp]: \"sum_case f g (Inl x) = f x\"", "lemma sum_case_Inr [simp]: \"sum_case f g (Inr y) = g y\"", "lemma sum_case_non [simp]: \"\\<not> is_hsum a \\<Longrightarrow> sum_case f g a = undefined\"", "lemma is_hsum_cases: \"(\\<exists>x. z = Inl x \\<or> z = Inr x) \\<or> \\<not> is_hsum z\"", "lemma sum_case_split:\n  \"P (sum_case f g a) \\<longleftrightarrow> (\\<forall>x. a = Inl x \\<longrightarrow> P(f x)) \\<and> (\\<forall>y. a = Inr y \\<longrightarrow> P(g y)) \\<and> (\\<not> is_hsum a \\<longrightarrow> P undefined)\"", "lemma sum_case_split_asm:\n  \"P (sum_case f g a) \\<longleftrightarrow> \\<not> ((\\<exists>x. a = Inl x \\<and> \\<not> P(f x)) \\<or> (\\<exists>y. a = Inr y \\<and> \\<not> P(g y)) \\<or> (\\<not> is_hsum a \\<and> \\<not> P undefined))\""], "translations": [["", "lemma Abs_hf_0 [simp]: \"Abs_hf 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_hf 0 = 0", "by (simp add: HF_def Zero_hf_def)"], ["", "text \\<open>HF Set enumerations\\<close>"], ["", "abbreviation inserthf :: \"hf \\<Rightarrow> hf \\<Rightarrow> hf\"  (infixl \"\\<triangleleft>\" 60)\n  where \"y \\<triangleleft> x \\<equiv> hinsert x y\""], ["", "syntax (ASCII)\n  \"_HFinset\" :: \"args \\<Rightarrow> hf\"      (\"{|(_)|}\")"], ["", "syntax\n  \"_HFinset\" :: \"args \\<Rightarrow> hf\"      (\"\\<lbrace>_\\<rbrace>\")"], ["", "translations\n  \"\\<lbrace>x, y\\<rbrace>\" \\<rightleftharpoons> \"\\<lbrace>y\\<rbrace> \\<triangleleft> x\"\n  \"\\<lbrace>x\\<rbrace>\"    \\<rightleftharpoons> \"0 \\<triangleleft> x\""], ["", "lemma finite_hfset [simp]: \"finite (hfset a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (hfset a)", "unfolding hfset_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (Abs_hf ` set_decode (Rep_hf a))", "by simp"], ["", "lemma HF_hfset [simp]: \"HF (hfset a) = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HF (hfset a) = a", "unfolding HF_def hfset_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_hf (set_encode (Rep_hf ` Abs_hf ` set_decode (Rep_hf a))) = a", "by (simp add: image_image Abs_hf_inverse Rep_hf_inverse)"], ["", "lemma hfset_HF [simp]: \"finite A \\<Longrightarrow> hfset (HF A) = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite A \\<Longrightarrow> hfset (HF A) = A", "unfolding HF_def hfset_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite A \\<Longrightarrow>\n    Abs_hf ` set_decode (Rep_hf (Abs_hf (set_encode (Rep_hf ` A)))) = A", "by (simp add: image_image Abs_hf_inverse Rep_hf_inverse)"], ["", "lemma inj_on_HF: \"inj_on HF (Collect finite)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on HF (Collect finite)", "by (metis hfset_HF inj_onI mem_Collect_eq)"], ["", "lemma hmem_hempty [simp]: \"a \\<^bold>\\<notin> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<^bold>\\<notin> 0", "unfolding hmem_def Zero_hf_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<notin> hfset (HF {})", "by simp"], ["", "lemmas hemptyE [elim!] = hmem_hempty [THEN notE]"], ["", "lemma hmem_hinsert [iff]:\n  \"hmem a (c \\<triangleleft> b) \\<longleftrightarrow> a = b \\<or> a \\<^bold>\\<in> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<^bold>\\<in> c \\<triangleleft> b) = (a = b \\<or> a \\<^bold>\\<in> c)", "unfolding hmem_def hinsert_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<in> hfset (HF (insert b (hfset c)))) =\n    (a = b \\<or> a \\<in> hfset c)", "by simp"], ["", "lemma hf_ext: \"a = b \\<longleftrightarrow> (\\<forall>x. x \\<^bold>\\<in> a \\<longleftrightarrow> x \\<^bold>\\<in> b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a = b) = (\\<forall>x. (x \\<^bold>\\<in> a) = (x \\<^bold>\\<in> b))", "unfolding hmem_def set_eq_iff [symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a = b) = (hfset a = hfset b)", "by (metis HF_hfset)"], ["", "lemma finite_cases [consumes 1, case_names empty insert]:\n  \"\\<lbrakk>finite F; F = {} \\<Longrightarrow> P; \\<And>A x. \\<lbrakk>F = insert x A; x \\<notin> A; finite A\\<rbrakk> \\<Longrightarrow> P\\<rbrakk> \\<Longrightarrow> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite F; F = {} \\<Longrightarrow> P;\n     \\<And>A x.\n        \\<lbrakk>F = insert x A; x \\<notin> A; finite A\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> P", "by (induct F rule: finite_induct, simp_all)"], ["", "lemma hf_cases [cases type: hf, case_names 0 hinsert]:\n  obtains \"y = 0\" | a b where \"y = b \\<triangleleft> a\" and \"a \\<^bold>\\<notin> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>y = 0 \\<Longrightarrow> thesis;\n     \\<And>a b.\n        \\<lbrakk>y = b \\<triangleleft> a; a \\<^bold>\\<notin> b\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>y = 0 \\<Longrightarrow> thesis;\n     \\<And>a b.\n        \\<lbrakk>y = b \\<triangleleft> a; a \\<^bold>\\<notin> b\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "have \"finite (hfset y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (hfset y)", "by (rule finite_hfset)"], ["proof (state)\nthis:\n  finite (hfset y)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y = 0 \\<Longrightarrow> thesis;\n     \\<And>a b.\n        \\<lbrakk>y = b \\<triangleleft> a; a \\<^bold>\\<notin> b\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "thus thesis"], ["proof (prove)\nusing this:\n  finite (hfset y)\n\ngoal (1 subgoal):\n 1. thesis", "by (metis Zero_hf_def finite_cases hf_ext hfset_HF hinsert_def hmem_def that)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Rep_hf_hinsert:\n  \"a \\<^bold>\\<notin> b \\<Longrightarrow> Rep_hf (hinsert a b) = 2 ^ (Rep_hf a) + Rep_hf b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<^bold>\\<notin> b \\<Longrightarrow>\n    Rep_hf (b \\<triangleleft> a) = 2 ^ Rep_hf a + Rep_hf b", "unfolding hinsert_def HF_def hfset_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<^bold>\\<notin> b \\<Longrightarrow>\n    Rep_hf\n     (Abs_hf\n       (set_encode (Rep_hf ` insert a (Abs_hf ` set_decode (Rep_hf b))))) =\n    2 ^ Rep_hf a + Rep_hf b", "apply (simp add: image_image Abs_hf_inverse Rep_hf_inverse)"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<^bold>\\<notin> b \\<Longrightarrow>\n    set_encode (insert (Rep_hf a) (set_decode (Rep_hf b))) =\n    2 ^ Rep_hf a + Rep_hf b", "apply (subst set_encode_insert, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. a \\<^bold>\\<notin> b \\<Longrightarrow>\n    Rep_hf a \\<notin> set_decode (Rep_hf b)\n 2. a \\<^bold>\\<notin> b \\<Longrightarrow>\n    2 ^ Rep_hf a + set_encode (set_decode (Rep_hf b)) =\n    2 ^ Rep_hf a + Rep_hf b", "apply (clarsimp simp add: hmem_def hfset_def image_def\n    Rep_hf_inject [symmetric] Abs_hf_inverse, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma less_two_power: \"n < 2 ^ n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n < 2 ^ n", "by (induct n, auto)"], ["", "section \\<open>Verifying the Axioms of HF\\<close>"], ["", "text \\<open>HF1\\<close>"], ["", "lemma hempty_iff: \"z=0 \\<longleftrightarrow> (\\<forall>x. x \\<^bold>\\<notin> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (z = 0) = (\\<forall>x. x \\<^bold>\\<notin> z)", "by (simp add: hf_ext)"], ["", "text \\<open>HF2\\<close>"], ["", "lemma hinsert_iff: \"z = x \\<triangleleft> y \\<longleftrightarrow> (\\<forall>u. u \\<^bold>\\<in> z \\<longleftrightarrow> u \\<^bold>\\<in> x \\<or> u = y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (z = x \\<triangleleft> y) =\n    (\\<forall>u. (u \\<^bold>\\<in> z) = (u \\<^bold>\\<in> x \\<or> u = y))", "by (auto simp: hf_ext)"], ["", "text \\<open>HF induction\\<close>"], ["", "lemma hf_induct [induct type: hf, case_names 0 hinsert]:\n  assumes [simp]: \"P 0\"\n                  \"\\<And>x y. \\<lbrakk>P x; P y; x \\<^bold>\\<notin> y\\<rbrakk> \\<Longrightarrow> P (y \\<triangleleft> x)\"\n  shows \"P z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P z", "proof (induct z rule: wf_induct [where r=\"measure Rep_hf\", OF wf_measure])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>y.\n          (y, x) \\<in> measure Rep_hf \\<longrightarrow>\n          P y \\<Longrightarrow>\n       P x", "case (1 x)"], ["proof (state)\nthis:\n  \\<forall>y. (y, x) \\<in> measure Rep_hf \\<longrightarrow> P y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>y.\n          (y, x) \\<in> measure Rep_hf \\<longrightarrow>\n          P y \\<Longrightarrow>\n       P x", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. P x", "proof (cases x rule: hf_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. x = 0 \\<Longrightarrow> P x\n 2. \\<And>a b.\n       \\<lbrakk>x = b \\<triangleleft> a; a \\<^bold>\\<notin> b\\<rbrakk>\n       \\<Longrightarrow> P x", "case 0"], ["proof (state)\nthis:\n  x = 0\n\ngoal (2 subgoals):\n 1. x = 0 \\<Longrightarrow> P x\n 2. \\<And>a b.\n       \\<lbrakk>x = b \\<triangleleft> a; a \\<^bold>\\<notin> b\\<rbrakk>\n       \\<Longrightarrow> P x", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = 0\n\ngoal (1 subgoal):\n 1. P x", "by simp"], ["proof (state)\nthis:\n  P x\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>x = b \\<triangleleft> a; a \\<^bold>\\<notin> b\\<rbrakk>\n       \\<Longrightarrow> P x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>x = b \\<triangleleft> a; a \\<^bold>\\<notin> b\\<rbrakk>\n       \\<Longrightarrow> P x", "case (hinsert a b)"], ["proof (state)\nthis:\n  x = b \\<triangleleft> a\n  a \\<^bold>\\<notin> b\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>x = b \\<triangleleft> a; a \\<^bold>\\<notin> b\\<rbrakk>\n       \\<Longrightarrow> P x", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = b \\<triangleleft> a\n  a \\<^bold>\\<notin> b\n\ngoal (1 subgoal):\n 1. P x", "using 1"], ["proof (prove)\nusing this:\n  x = b \\<triangleleft> a\n  a \\<^bold>\\<notin> b\n  \\<forall>y. (y, x) \\<in> measure Rep_hf \\<longrightarrow> P y\n\ngoal (1 subgoal):\n 1. P x", "by (simp add: Rep_hf_hinsert\n                      less_le_trans [OF less_two_power le_add1])"], ["proof (state)\nthis:\n  P x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P x\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>HF3\\<close>"], ["", "lemma hf_induct_ax: \"\\<lbrakk>P 0; \\<forall>x. P x \\<longrightarrow> (\\<forall>y. P y \\<longrightarrow> P (x \\<triangleleft> y))\\<rbrakk> \\<Longrightarrow> P x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P 0;\n     \\<forall>x.\n        P x \\<longrightarrow>\n        (\\<forall>y. P y \\<longrightarrow> P (x \\<triangleleft> y))\\<rbrakk>\n    \\<Longrightarrow> P x", "by (induct x, auto)"], ["", "lemma hf_equalityI [intro]: \"(\\<And>x. x \\<^bold>\\<in> a \\<longleftrightarrow> x \\<^bold>\\<in> b) \\<Longrightarrow> a = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x. (x \\<^bold>\\<in> a) = (x \\<^bold>\\<in> b)) \\<Longrightarrow>\n    a = b", "by (simp add: hf_ext)"], ["", "lemma hinsert_nonempty [simp]: \"A \\<triangleleft> a \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<triangleleft> a \\<noteq> 0", "by (auto simp: hf_ext)"], ["", "lemma hinsert_commute: \"(z \\<triangleleft> y) \\<triangleleft> x = (z \\<triangleleft> x) \\<triangleleft> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<triangleleft> y \\<triangleleft> x =\n    z \\<triangleleft> x \\<triangleleft> y", "by (auto simp: hf_ext)"], ["", "lemma hmem_HF_iff [simp]: \"x \\<^bold>\\<in> HF A \\<longleftrightarrow> x \\<in> A \\<and> finite A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<^bold>\\<in> HF A) = (x \\<in> A \\<and> finite A)", "apply (cases \"finite A\", auto)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>finite A; x \\<^bold>\\<in> HF A\\<rbrakk>\n    \\<Longrightarrow> x \\<in> A\n 2. \\<lbrakk>finite A; x \\<in> A\\<rbrakk>\n    \\<Longrightarrow> x \\<^bold>\\<in> HF A\n 3. \\<lbrakk>infinite A; x \\<^bold>\\<in> HF A\\<rbrakk>\n    \\<Longrightarrow> False", "apply (simp add: hmem_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>finite A; x \\<in> A\\<rbrakk>\n    \\<Longrightarrow> x \\<^bold>\\<in> HF A\n 2. \\<lbrakk>infinite A; x \\<^bold>\\<in> HF A\\<rbrakk>\n    \\<Longrightarrow> False", "apply (simp add: hmem_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>infinite A; x \\<^bold>\\<in> HF A\\<rbrakk>\n    \\<Longrightarrow> False", "apply (metis HF_def Rep_hf_inject Abs_hf_0 finite_imageD hempty_iff inj_onI set_encode_inf)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "section \\<open>Ordered Pairs, from ZF/ZF.thy\\<close>"], ["", "lemma singleton_eq_iff [iff]: \"\\<lbrace>a\\<rbrace> = \\<lbrace>b\\<rbrace> \\<longleftrightarrow> a=b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrace>a\\<rbrace> = \\<lbrace>b\\<rbrace>) = (a = b)", "by (metis hmem_hempty hmem_hinsert)"], ["", "lemma doubleton_eq_iff: \"\\<lbrace>a,b\\<rbrace> = \\<lbrace>c,d\\<rbrace> \\<longleftrightarrow> (a=c \\<and> b=d) \\<or> (a=d \\<and> b=c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrace>a, b\\<rbrace> = \\<lbrace>c, d\\<rbrace>) =\n    (a = c \\<and> b = d \\<or> a = d \\<and> b = c)", "by auto (metis hmem_hempty hmem_hinsert)+"], ["", "definition hpair :: \"hf \\<Rightarrow> hf \\<Rightarrow> hf\"\n  where \"hpair a b = \\<lbrace>\\<lbrace>a\\<rbrace>,\\<lbrace>a,b\\<rbrace>\\<rbrace>\""], ["", "definition hfst :: \"hf \\<Rightarrow> hf\"\n  where \"hfst p \\<equiv> THE x. \\<exists>y. p = hpair x y\""], ["", "definition hsnd :: \"hf \\<Rightarrow> hf\"\n  where \"hsnd p \\<equiv> THE y. \\<exists>x. p = hpair x y\""], ["", "definition hsplit :: \"[[hf, hf] \\<Rightarrow> 'a, hf] \\<Rightarrow> 'a::{}\"  \\<comment> \\<open>for pattern-matching\\<close>\n  where \"hsplit c \\<equiv> \\<lambda>p. c (hfst p) (hsnd p)\""], ["", "text \\<open>Ordered Pairs, from ZF/ZF.thy\\<close>"], ["", "nonterminal hfs"], ["", "syntax (ASCII)\n  \"_Tuple\"    :: \"[hf, hfs] \\<Rightarrow> hf\"              (\"<(_,/ _)>\")\n  \"_hpattern\" :: \"[pttrn, patterns] \\<Rightarrow> pttrn\"   (\"<_,/ _>\")"], ["", "syntax\n  \"\"          :: \"hf \\<Rightarrow> hfs\"                    (\"_\")\n  \"_Enum\"     :: \"[hf, hfs] \\<Rightarrow> hfs\"             (\"_,/ _\")\n  \"_Tuple\"    :: \"[hf, hfs] \\<Rightarrow> hf\"              (\"\\<langle>(_,/ _)\\<rangle>\")\n  \"_hpattern\" :: \"[pttrn, patterns] \\<Rightarrow> pttrn\"   (\"\\<langle>_,/ _\\<rangle>\")"], ["", "translations\n  \"<x, y, z>\"    \\<rightleftharpoons> \"<x, <y, z>>\"\n  \"<x, y>\"       \\<rightleftharpoons> \"CONST hpair x y\"\n  \"<x, y, z>\"    \\<rightleftharpoons> \"<x, <y, z>>\"\n  \"\\<lambda><x,y,zs>. b\" \\<rightleftharpoons> \"CONST hsplit(\\<lambda>x <y,zs>. b)\"\n  \"\\<lambda><x,y>. b\"    \\<rightleftharpoons> \"CONST hsplit(\\<lambda>x y. b)\""], ["", "lemma hpair_def': \"hpair a b = \\<lbrace>\\<lbrace>a,a\\<rbrace>,\\<lbrace>a,b\\<rbrace>\\<rbrace>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>a, b\\<rangle> = \\<lbrace>\\<lbrace>a, a\\<rbrace>, \\<lbrace>a,\n    b\\<rbrace>\\<rbrace>", "by (auto simp: hf_ext hpair_def)"], ["", "lemma hpair_iff [simp]: \"hpair a b = hpair a' b' \\<longleftrightarrow> a=a' \\<and> b=b'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<langle>a, b\\<rangle> = \\<langle>a', b'\\<rangle>) =\n    (a = a' \\<and> b = b')", "by (auto simp: hpair_def' doubleton_eq_iff)"], ["", "lemmas hpair_inject = hpair_iff [THEN iffD1, THEN conjE, elim!]"], ["", "lemma hfst_conv [simp]: \"hfst \\<langle>a,b\\<rangle> = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hfst \\<langle>a, b\\<rangle> = a", "by (simp add: hfst_def)"], ["", "lemma hsnd_conv [simp]: \"hsnd \\<langle>a,b\\<rangle> = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hsnd \\<langle>a, b\\<rangle> = b", "by (simp add: hsnd_def)"], ["", "lemma hsplit [simp]: \"hsplit c \\<langle>a,b\\<rangle> = c a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hsplit c \\<langle>a, b\\<rangle> = c a b", "by (simp add: hsplit_def)"], ["", "section \\<open>Unions, Comprehensions, Intersections\\<close>"], ["", "subsection \\<open>Unions\\<close>"], ["", "text \\<open>Theorem 1.5 (Existence of the union of two sets).\\<close>"], ["", "lemma binary_union: \"\\<exists>z. \\<forall>u. u \\<^bold>\\<in> z \\<longleftrightarrow> u \\<^bold>\\<in> x \\<or> u \\<^bold>\\<in> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>z.\n       \\<forall>u.\n          (u \\<^bold>\\<in> z) = (u \\<^bold>\\<in> x \\<or> u \\<^bold>\\<in> y)", "proof (induct x rule: hf_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>z.\n       \\<forall>u.\n          (u \\<^bold>\\<in> z) = (u \\<^bold>\\<in> 0 \\<or> u \\<^bold>\\<in> y)\n 2. \\<And>x ya.\n       \\<lbrakk>\\<exists>z.\n                   \\<forall>u.\n                      (u \\<^bold>\\<in> z) =\n                      (u \\<^bold>\\<in> x \\<or> u \\<^bold>\\<in> y);\n        \\<exists>z.\n           \\<forall>u.\n              (u \\<^bold>\\<in> z) =\n              (u \\<^bold>\\<in> ya \\<or> u \\<^bold>\\<in> y);\n        x \\<^bold>\\<notin> ya\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z.\n                            \\<forall>u.\n                               (u \\<^bold>\\<in> z) =\n                               (u \\<^bold>\\<in> ya \\<triangleleft> x \\<or>\n                                u \\<^bold>\\<in> y)", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<exists>z.\n       \\<forall>u.\n          (u \\<^bold>\\<in> z) = (u \\<^bold>\\<in> 0 \\<or> u \\<^bold>\\<in> y)\n 2. \\<And>x ya.\n       \\<lbrakk>\\<exists>z.\n                   \\<forall>u.\n                      (u \\<^bold>\\<in> z) =\n                      (u \\<^bold>\\<in> x \\<or> u \\<^bold>\\<in> y);\n        \\<exists>z.\n           \\<forall>u.\n              (u \\<^bold>\\<in> z) =\n              (u \\<^bold>\\<in> ya \\<or> u \\<^bold>\\<in> y);\n        x \\<^bold>\\<notin> ya\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z.\n                            \\<forall>u.\n                               (u \\<^bold>\\<in> z) =\n                               (u \\<^bold>\\<in> ya \\<triangleleft> x \\<or>\n                                u \\<^bold>\\<in> y)", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>z.\n       \\<forall>u.\n          (u \\<^bold>\\<in> z) = (u \\<^bold>\\<in> 0 \\<or> u \\<^bold>\\<in> y)", "by auto"], ["proof (state)\nthis:\n  \\<exists>z.\n     \\<forall>u.\n        (u \\<^bold>\\<in> z) = (u \\<^bold>\\<in> 0 \\<or> u \\<^bold>\\<in> y)\n\ngoal (1 subgoal):\n 1. \\<And>x ya.\n       \\<lbrakk>\\<exists>z.\n                   \\<forall>u.\n                      (u \\<^bold>\\<in> z) =\n                      (u \\<^bold>\\<in> x \\<or> u \\<^bold>\\<in> y);\n        \\<exists>z.\n           \\<forall>u.\n              (u \\<^bold>\\<in> z) =\n              (u \\<^bold>\\<in> ya \\<or> u \\<^bold>\\<in> y);\n        x \\<^bold>\\<notin> ya\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z.\n                            \\<forall>u.\n                               (u \\<^bold>\\<in> z) =\n                               (u \\<^bold>\\<in> ya \\<triangleleft> x \\<or>\n                                u \\<^bold>\\<in> y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x ya.\n       \\<lbrakk>\\<exists>z.\n                   \\<forall>u.\n                      (u \\<^bold>\\<in> z) =\n                      (u \\<^bold>\\<in> x \\<or> u \\<^bold>\\<in> y);\n        \\<exists>z.\n           \\<forall>u.\n              (u \\<^bold>\\<in> z) =\n              (u \\<^bold>\\<in> ya \\<or> u \\<^bold>\\<in> y);\n        x \\<^bold>\\<notin> ya\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z.\n                            \\<forall>u.\n                               (u \\<^bold>\\<in> z) =\n                               (u \\<^bold>\\<in> ya \\<triangleleft> x \\<or>\n                                u \\<^bold>\\<in> y)", "case (hinsert a b)"], ["proof (state)\nthis:\n  \\<exists>z.\n     \\<forall>u.\n        (u \\<^bold>\\<in> z) = (u \\<^bold>\\<in> a \\<or> u \\<^bold>\\<in> y)\n  \\<exists>z.\n     \\<forall>u.\n        (u \\<^bold>\\<in> z) = (u \\<^bold>\\<in> b \\<or> u \\<^bold>\\<in> y)\n  a \\<^bold>\\<notin> b\n\ngoal (1 subgoal):\n 1. \\<And>x ya.\n       \\<lbrakk>\\<exists>z.\n                   \\<forall>u.\n                      (u \\<^bold>\\<in> z) =\n                      (u \\<^bold>\\<in> x \\<or> u \\<^bold>\\<in> y);\n        \\<exists>z.\n           \\<forall>u.\n              (u \\<^bold>\\<in> z) =\n              (u \\<^bold>\\<in> ya \\<or> u \\<^bold>\\<in> y);\n        x \\<^bold>\\<notin> ya\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z.\n                            \\<forall>u.\n                               (u \\<^bold>\\<in> z) =\n                               (u \\<^bold>\\<in> ya \\<triangleleft> x \\<or>\n                                u \\<^bold>\\<in> y)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<exists>z.\n     \\<forall>u.\n        (u \\<^bold>\\<in> z) = (u \\<^bold>\\<in> a \\<or> u \\<^bold>\\<in> y)\n  \\<exists>z.\n     \\<forall>u.\n        (u \\<^bold>\\<in> z) = (u \\<^bold>\\<in> b \\<or> u \\<^bold>\\<in> y)\n  a \\<^bold>\\<notin> b\n\ngoal (1 subgoal):\n 1. \\<exists>z.\n       \\<forall>u.\n          (u \\<^bold>\\<in> z) =\n          (u \\<^bold>\\<in> b \\<triangleleft> a \\<or> u \\<^bold>\\<in> y)", "by (metis hmem_hinsert)"], ["proof (state)\nthis:\n  \\<exists>z.\n     \\<forall>u.\n        (u \\<^bold>\\<in> z) =\n        (u \\<^bold>\\<in> b \\<triangleleft> a \\<or> u \\<^bold>\\<in> y)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Theorem 1.6 (Existence of the union of a set of sets).\\<close>"], ["", "lemma union_of_set: \"\\<exists>z. \\<forall>u. u \\<^bold>\\<in> z \\<longleftrightarrow> (\\<exists>y. y \\<^bold>\\<in> x \\<and> u \\<^bold>\\<in> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>z.\n       \\<forall>u.\n          (u \\<^bold>\\<in> z) =\n          (\\<exists>y. y \\<^bold>\\<in> x \\<and> u \\<^bold>\\<in> y)", "proof (induct x rule: hf_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>z.\n       \\<forall>u.\n          (u \\<^bold>\\<in> z) =\n          (\\<exists>y. y \\<^bold>\\<in> 0 \\<and> u \\<^bold>\\<in> y)\n 2. \\<And>x y.\n       \\<lbrakk>\\<exists>z.\n                   \\<forall>u.\n                      (u \\<^bold>\\<in> z) =\n                      (\\<exists>y.\n                          y \\<^bold>\\<in> x \\<and> u \\<^bold>\\<in> y);\n        \\<exists>z.\n           \\<forall>u.\n              (u \\<^bold>\\<in> z) =\n              (\\<exists>ya. ya \\<^bold>\\<in> y \\<and> u \\<^bold>\\<in> ya);\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z.\n                            \\<forall>u.\n                               (u \\<^bold>\\<in> z) =\n                               (\\<exists>ya.\n                                   ya \\<^bold>\\<in>\n                                   y \\<triangleleft> x \\<and>\n                                   u \\<^bold>\\<in> ya)", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<exists>z.\n       \\<forall>u.\n          (u \\<^bold>\\<in> z) =\n          (\\<exists>y. y \\<^bold>\\<in> 0 \\<and> u \\<^bold>\\<in> y)\n 2. \\<And>x y.\n       \\<lbrakk>\\<exists>z.\n                   \\<forall>u.\n                      (u \\<^bold>\\<in> z) =\n                      (\\<exists>y.\n                          y \\<^bold>\\<in> x \\<and> u \\<^bold>\\<in> y);\n        \\<exists>z.\n           \\<forall>u.\n              (u \\<^bold>\\<in> z) =\n              (\\<exists>ya. ya \\<^bold>\\<in> y \\<and> u \\<^bold>\\<in> ya);\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z.\n                            \\<forall>u.\n                               (u \\<^bold>\\<in> z) =\n                               (\\<exists>ya.\n                                   ya \\<^bold>\\<in>\n                                   y \\<triangleleft> x \\<and>\n                                   u \\<^bold>\\<in> ya)", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>z.\n       \\<forall>u.\n          (u \\<^bold>\\<in> z) =\n          (\\<exists>y. y \\<^bold>\\<in> 0 \\<and> u \\<^bold>\\<in> y)", "by (metis hmem_hempty)"], ["proof (state)\nthis:\n  \\<exists>z.\n     \\<forall>u.\n        (u \\<^bold>\\<in> z) =\n        (\\<exists>y. y \\<^bold>\\<in> 0 \\<and> u \\<^bold>\\<in> y)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>\\<exists>z.\n                   \\<forall>u.\n                      (u \\<^bold>\\<in> z) =\n                      (\\<exists>y.\n                          y \\<^bold>\\<in> x \\<and> u \\<^bold>\\<in> y);\n        \\<exists>z.\n           \\<forall>u.\n              (u \\<^bold>\\<in> z) =\n              (\\<exists>ya. ya \\<^bold>\\<in> y \\<and> u \\<^bold>\\<in> ya);\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z.\n                            \\<forall>u.\n                               (u \\<^bold>\\<in> z) =\n                               (\\<exists>ya.\n                                   ya \\<^bold>\\<in>\n                                   y \\<triangleleft> x \\<and>\n                                   u \\<^bold>\\<in> ya)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>\\<exists>z.\n                   \\<forall>u.\n                      (u \\<^bold>\\<in> z) =\n                      (\\<exists>y.\n                          y \\<^bold>\\<in> x \\<and> u \\<^bold>\\<in> y);\n        \\<exists>z.\n           \\<forall>u.\n              (u \\<^bold>\\<in> z) =\n              (\\<exists>ya. ya \\<^bold>\\<in> y \\<and> u \\<^bold>\\<in> ya);\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z.\n                            \\<forall>u.\n                               (u \\<^bold>\\<in> z) =\n                               (\\<exists>ya.\n                                   ya \\<^bold>\\<in>\n                                   y \\<triangleleft> x \\<and>\n                                   u \\<^bold>\\<in> ya)", "case (hinsert a b)"], ["proof (state)\nthis:\n  \\<exists>z.\n     \\<forall>u.\n        (u \\<^bold>\\<in> z) =\n        (\\<exists>y. y \\<^bold>\\<in> a \\<and> u \\<^bold>\\<in> y)\n  \\<exists>z.\n     \\<forall>u.\n        (u \\<^bold>\\<in> z) =\n        (\\<exists>y. y \\<^bold>\\<in> b \\<and> u \\<^bold>\\<in> y)\n  a \\<^bold>\\<notin> b\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>\\<exists>z.\n                   \\<forall>u.\n                      (u \\<^bold>\\<in> z) =\n                      (\\<exists>y.\n                          y \\<^bold>\\<in> x \\<and> u \\<^bold>\\<in> y);\n        \\<exists>z.\n           \\<forall>u.\n              (u \\<^bold>\\<in> z) =\n              (\\<exists>ya. ya \\<^bold>\\<in> y \\<and> u \\<^bold>\\<in> ya);\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z.\n                            \\<forall>u.\n                               (u \\<^bold>\\<in> z) =\n                               (\\<exists>ya.\n                                   ya \\<^bold>\\<in>\n                                   y \\<triangleleft> x \\<and>\n                                   u \\<^bold>\\<in> ya)", "then"], ["proof (chain)\npicking this:\n  \\<exists>z.\n     \\<forall>u.\n        (u \\<^bold>\\<in> z) =\n        (\\<exists>y. y \\<^bold>\\<in> a \\<and> u \\<^bold>\\<in> y)\n  \\<exists>z.\n     \\<forall>u.\n        (u \\<^bold>\\<in> z) =\n        (\\<exists>y. y \\<^bold>\\<in> b \\<and> u \\<^bold>\\<in> y)\n  a \\<^bold>\\<notin> b", "show ?case"], ["proof (prove)\nusing this:\n  \\<exists>z.\n     \\<forall>u.\n        (u \\<^bold>\\<in> z) =\n        (\\<exists>y. y \\<^bold>\\<in> a \\<and> u \\<^bold>\\<in> y)\n  \\<exists>z.\n     \\<forall>u.\n        (u \\<^bold>\\<in> z) =\n        (\\<exists>y. y \\<^bold>\\<in> b \\<and> u \\<^bold>\\<in> y)\n  a \\<^bold>\\<notin> b\n\ngoal (1 subgoal):\n 1. \\<exists>z.\n       \\<forall>u.\n          (u \\<^bold>\\<in> z) =\n          (\\<exists>y.\n              y \\<^bold>\\<in> b \\<triangleleft> a \\<and> u \\<^bold>\\<in> y)", "by (metis hmem_hinsert binary_union [of a])"], ["proof (state)\nthis:\n  \\<exists>z.\n     \\<forall>u.\n        (u \\<^bold>\\<in> z) =\n        (\\<exists>y.\n            y \\<^bold>\\<in> b \\<triangleleft> a \\<and> u \\<^bold>\\<in> y)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Set comprehensions\\<close>"], ["", "text \\<open>Theorem 1.7, comprehension scheme\\<close>"], ["", "lemma comprehension: \"\\<exists>z. \\<forall>u. u \\<^bold>\\<in> z \\<longleftrightarrow> u \\<^bold>\\<in> x \\<and> P u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>z.\n       \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<^bold>\\<in> x \\<and> P u)", "proof (induct x rule: hf_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>z.\n       \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<^bold>\\<in> 0 \\<and> P u)\n 2. \\<And>x y.\n       \\<lbrakk>\\<exists>z.\n                   \\<forall>u.\n                      (u \\<^bold>\\<in> z) = (u \\<^bold>\\<in> x \\<and> P u);\n        \\<exists>z.\n           \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<^bold>\\<in> y \\<and> P u);\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z.\n                            \\<forall>u.\n                               (u \\<^bold>\\<in> z) =\n                               (u \\<^bold>\\<in> y \\<triangleleft> x \\<and>\n                                P u)", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<exists>z.\n       \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<^bold>\\<in> 0 \\<and> P u)\n 2. \\<And>x y.\n       \\<lbrakk>\\<exists>z.\n                   \\<forall>u.\n                      (u \\<^bold>\\<in> z) = (u \\<^bold>\\<in> x \\<and> P u);\n        \\<exists>z.\n           \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<^bold>\\<in> y \\<and> P u);\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z.\n                            \\<forall>u.\n                               (u \\<^bold>\\<in> z) =\n                               (u \\<^bold>\\<in> y \\<triangleleft> x \\<and>\n                                P u)", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>z.\n       \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<^bold>\\<in> 0 \\<and> P u)", "by (metis hmem_hempty)"], ["proof (state)\nthis:\n  \\<exists>z.\n     \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<^bold>\\<in> 0 \\<and> P u)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>\\<exists>z.\n                   \\<forall>u.\n                      (u \\<^bold>\\<in> z) = (u \\<^bold>\\<in> x \\<and> P u);\n        \\<exists>z.\n           \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<^bold>\\<in> y \\<and> P u);\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z.\n                            \\<forall>u.\n                               (u \\<^bold>\\<in> z) =\n                               (u \\<^bold>\\<in> y \\<triangleleft> x \\<and>\n                                P u)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>\\<exists>z.\n                   \\<forall>u.\n                      (u \\<^bold>\\<in> z) = (u \\<^bold>\\<in> x \\<and> P u);\n        \\<exists>z.\n           \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<^bold>\\<in> y \\<and> P u);\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z.\n                            \\<forall>u.\n                               (u \\<^bold>\\<in> z) =\n                               (u \\<^bold>\\<in> y \\<triangleleft> x \\<and>\n                                P u)", "case (hinsert a b)"], ["proof (state)\nthis:\n  \\<exists>z.\n     \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<^bold>\\<in> a \\<and> P u)\n  \\<exists>z.\n     \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<^bold>\\<in> b \\<and> P u)\n  a \\<^bold>\\<notin> b\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>\\<exists>z.\n                   \\<forall>u.\n                      (u \\<^bold>\\<in> z) = (u \\<^bold>\\<in> x \\<and> P u);\n        \\<exists>z.\n           \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<^bold>\\<in> y \\<and> P u);\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z.\n                            \\<forall>u.\n                               (u \\<^bold>\\<in> z) =\n                               (u \\<^bold>\\<in> y \\<triangleleft> x \\<and>\n                                P u)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<exists>z.\n     \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<^bold>\\<in> a \\<and> P u)\n  \\<exists>z.\n     \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<^bold>\\<in> b \\<and> P u)\n  a \\<^bold>\\<notin> b\n\ngoal (1 subgoal):\n 1. \\<exists>z.\n       \\<forall>u.\n          (u \\<^bold>\\<in> z) =\n          (u \\<^bold>\\<in> b \\<triangleleft> a \\<and> P u)", "by (metis hmem_hinsert)"], ["proof (state)\nthis:\n  \\<exists>z.\n     \\<forall>u.\n        (u \\<^bold>\\<in> z) =\n        (u \\<^bold>\\<in> b \\<triangleleft> a \\<and> P u)\n\ngoal:\nNo subgoals!", "qed"], ["", "definition HCollect :: \"(hf \\<Rightarrow> bool) \\<Rightarrow> hf \\<Rightarrow> hf\" \\<comment> \\<open>comprehension\\<close>\n  where \"HCollect P A = (THE z. \\<forall>u. u \\<^bold>\\<in> z = (P u \\<and> u \\<^bold>\\<in> A))\""], ["", "syntax (ASCII)\n  \"_HCollect\" :: \"idt \\<Rightarrow> hf \\<Rightarrow> bool \\<Rightarrow> hf\"    (\"(1\\<lbrace>_ <:/ _./ _\\<rbrace>)\")"], ["", "syntax\n  \"_HCollect\" :: \"idt \\<Rightarrow> hf \\<Rightarrow> bool \\<Rightarrow> hf\"    (\"(1\\<lbrace>_ \\<^bold>\\<in>/ _./ _\\<rbrace>)\")"], ["", "translations\n  \"\\<lbrace>x \\<^bold>\\<in> A. P\\<rbrace>\" \\<rightleftharpoons> \"CONST HCollect (\\<lambda>x. P) A\""], ["", "lemma HCollect_iff [iff]: \"hmem x (HCollect P A) \\<longleftrightarrow> P x \\<and> x \\<^bold>\\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<^bold>\\<in> HCollect P A) = (P x \\<and> x \\<^bold>\\<in> A)", "apply (insert comprehension [of A P], clarify)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<forall>u.\n          (u \\<^bold>\\<in> z) =\n          (u \\<^bold>\\<in> A \\<and> P u) \\<Longrightarrow>\n       (x \\<^bold>\\<in> HCollect P A) = (P x \\<and> x \\<^bold>\\<in> A)", "apply (simp add: HCollect_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<forall>u.\n          (u \\<^bold>\\<in> z) =\n          (u \\<^bold>\\<in> A \\<and> P u) \\<Longrightarrow>\n       (x \\<^bold>\\<in>\n        (THE z.\n            \\<forall>u.\n               (u \\<^bold>\\<in> z) = (P u \\<and> u \\<^bold>\\<in> A))) =\n       (P x \\<and> x \\<^bold>\\<in> A)", "apply (rule theI2, blast)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>z x.\n       \\<lbrakk>\\<forall>u.\n                   (u \\<^bold>\\<in> z) = (u \\<^bold>\\<in> A \\<and> P u);\n        \\<forall>u.\n           (u \\<^bold>\\<in> x) = (P u \\<and> u \\<^bold>\\<in> A)\\<rbrakk>\n       \\<Longrightarrow> x = z\n 2. \\<And>z xa.\n       \\<lbrakk>\\<forall>u.\n                   (u \\<^bold>\\<in> z) = (u \\<^bold>\\<in> A \\<and> P u);\n        \\<forall>u.\n           (u \\<^bold>\\<in> xa) = (P u \\<and> u \\<^bold>\\<in> A)\\<rbrakk>\n       \\<Longrightarrow> (x \\<^bold>\\<in> xa) =\n                         (P x \\<and> x \\<^bold>\\<in> A)", "apply (auto simp: hf_ext)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma HCollectI: \"a \\<^bold>\\<in> A \\<Longrightarrow> P a \\<Longrightarrow> hmem a \\<lbrace>x \\<^bold>\\<in> A. P x\\<rbrace>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<^bold>\\<in> A; P a\\<rbrakk>\n    \\<Longrightarrow> a \\<^bold>\\<in> HCollect P A", "by simp"], ["", "lemma HCollectE:\n  assumes \"a \\<^bold>\\<in> \\<lbrace>x \\<^bold>\\<in> A. P x\\<rbrace>\" obtains \"a \\<^bold>\\<in> A\" \"P a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>a \\<^bold>\\<in> A; P a\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  a \\<^bold>\\<in> HCollect P A\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>a \\<^bold>\\<in> A; P a\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["", "lemma HCollect_hempty [simp]: \"HCollect P 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HCollect P 0 = 0", "by (simp add: hf_ext)"], ["", "subsection \\<open>Union operators\\<close>"], ["", "instantiation hf :: sup\nbegin"], ["", "definition \"sup a b = (THE z. \\<forall>u. u \\<^bold>\\<in> z \\<longleftrightarrow> u \\<^bold>\\<in> a \\<or> u \\<^bold>\\<in> b)\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(hf, sup_class)", ".."], ["", "end"], ["", "abbreviation hunion :: \"hf \\<Rightarrow> hf \\<Rightarrow> hf\" (infixl \"\\<squnion>\" 65) where\n  \"hunion \\<equiv> sup\""], ["", "lemma hunion_iff [iff]: \"hmem x (a \\<squnion> b) \\<longleftrightarrow> x \\<^bold>\\<in> a \\<or> x \\<^bold>\\<in> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<^bold>\\<in> a \\<squnion> b) =\n    (x \\<^bold>\\<in> a \\<or> x \\<^bold>\\<in> b)", "apply (insert binary_union [of a b], clarify)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<forall>u.\n          (u \\<^bold>\\<in> z) =\n          (u \\<^bold>\\<in> a \\<or> u \\<^bold>\\<in> b) \\<Longrightarrow>\n       (x \\<^bold>\\<in> a \\<squnion> b) =\n       (x \\<^bold>\\<in> a \\<or> x \\<^bold>\\<in> b)", "apply (simp add: sup_hf_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<forall>u.\n          (u \\<^bold>\\<in> z) =\n          (u \\<^bold>\\<in> a \\<or> u \\<^bold>\\<in> b) \\<Longrightarrow>\n       (x \\<^bold>\\<in>\n        (THE z.\n            \\<forall>u.\n               (u \\<^bold>\\<in> z) =\n               (u \\<^bold>\\<in> a \\<or> u \\<^bold>\\<in> b))) =\n       (x \\<^bold>\\<in> a \\<or> x \\<^bold>\\<in> b)", "apply (rule theI2)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>z.\n       \\<forall>u.\n          (u \\<^bold>\\<in> z) =\n          (u \\<^bold>\\<in> a \\<or> u \\<^bold>\\<in> b) \\<Longrightarrow>\n       \\<forall>u.\n          (u \\<^bold>\\<in> ?a2 z) =\n          (u \\<^bold>\\<in> a \\<or> u \\<^bold>\\<in> b)\n 2. \\<And>z x.\n       \\<lbrakk>\\<forall>u.\n                   (u \\<^bold>\\<in> z) =\n                   (u \\<^bold>\\<in> a \\<or> u \\<^bold>\\<in> b);\n        \\<forall>u.\n           (u \\<^bold>\\<in> x) =\n           (u \\<^bold>\\<in> a \\<or> u \\<^bold>\\<in> b)\\<rbrakk>\n       \\<Longrightarrow> x = ?a2 z\n 3. \\<And>z xa.\n       \\<lbrakk>\\<forall>u.\n                   (u \\<^bold>\\<in> z) =\n                   (u \\<^bold>\\<in> a \\<or> u \\<^bold>\\<in> b);\n        \\<forall>u.\n           (u \\<^bold>\\<in> xa) =\n           (u \\<^bold>\\<in> a \\<or> u \\<^bold>\\<in> b)\\<rbrakk>\n       \\<Longrightarrow> (x \\<^bold>\\<in> xa) =\n                         (x \\<^bold>\\<in> a \\<or> x \\<^bold>\\<in> b)", "apply (auto simp: hf_ext)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition HUnion :: \"hf \\<Rightarrow> hf\"        (\"\\<Squnion>_\" [900] 900)\n  where \"HUnion A = (THE z. \\<forall>u. u \\<^bold>\\<in> z \\<longleftrightarrow> (\\<exists>y. y \\<^bold>\\<in> A \\<and> u \\<^bold>\\<in> y))\""], ["", "lemma HUnion_iff [iff]: \"hmem x (\\<Squnion> A) \\<longleftrightarrow> (\\<exists>y. y \\<^bold>\\<in> A \\<and> x \\<^bold>\\<in> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<^bold>\\<in> \\<Squnion>A) =\n    (\\<exists>y. y \\<^bold>\\<in> A \\<and> x \\<^bold>\\<in> y)", "apply (insert union_of_set [of A], clarify)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<forall>u.\n          (u \\<^bold>\\<in> z) =\n          (\\<exists>y.\n              y \\<^bold>\\<in> A \\<and> u \\<^bold>\\<in> y) \\<Longrightarrow>\n       (x \\<^bold>\\<in> \\<Squnion>A) =\n       (\\<exists>y. y \\<^bold>\\<in> A \\<and> x \\<^bold>\\<in> y)", "apply (simp add: HUnion_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<forall>u.\n          (u \\<^bold>\\<in> z) =\n          (\\<exists>y.\n              y \\<^bold>\\<in> A \\<and> u \\<^bold>\\<in> y) \\<Longrightarrow>\n       (x \\<^bold>\\<in>\n        (THE z.\n            \\<forall>u.\n               (u \\<^bold>\\<in> z) =\n               (\\<exists>y. y \\<^bold>\\<in> A \\<and> u \\<^bold>\\<in> y))) =\n       (\\<exists>y. y \\<^bold>\\<in> A \\<and> x \\<^bold>\\<in> y)", "apply (rule theI2)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>z.\n       \\<forall>u.\n          (u \\<^bold>\\<in> z) =\n          (\\<exists>y.\n              y \\<^bold>\\<in> A \\<and> u \\<^bold>\\<in> y) \\<Longrightarrow>\n       \\<forall>u.\n          (u \\<^bold>\\<in> ?a2 z) =\n          (\\<exists>y. y \\<^bold>\\<in> A \\<and> u \\<^bold>\\<in> y)\n 2. \\<And>z y.\n       \\<lbrakk>\\<forall>u.\n                   (u \\<^bold>\\<in> z) =\n                   (\\<exists>y. y \\<^bold>\\<in> A \\<and> u \\<^bold>\\<in> y);\n        \\<forall>u.\n           (u \\<^bold>\\<in> y) =\n           (\\<exists>y. y \\<^bold>\\<in> A \\<and> u \\<^bold>\\<in> y)\\<rbrakk>\n       \\<Longrightarrow> y = ?a2 z\n 3. \\<And>z y.\n       \\<lbrakk>\\<forall>u.\n                   (u \\<^bold>\\<in> z) =\n                   (\\<exists>y. y \\<^bold>\\<in> A \\<and> u \\<^bold>\\<in> y);\n        \\<forall>u.\n           (u \\<^bold>\\<in> y) =\n           (\\<exists>y. y \\<^bold>\\<in> A \\<and> u \\<^bold>\\<in> y)\\<rbrakk>\n       \\<Longrightarrow> (x \\<^bold>\\<in> y) =\n                         (\\<exists>y.\n                             y \\<^bold>\\<in> A \\<and> x \\<^bold>\\<in> y)", "apply (auto simp: hf_ext)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma HUnion_hempty [simp]: \"\\<Squnion> 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Squnion>0 = 0", "by (simp add: hf_ext)"], ["", "lemma HUnion_hinsert [simp]: \"\\<Squnion>(A \\<triangleleft> a) = a \\<squnion> \\<Squnion>A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Squnion>(A \\<triangleleft> a) = a \\<squnion> \\<Squnion>A", "by (auto simp: hf_ext)"], ["", "lemma HUnion_hunion [simp]: \"\\<Squnion>(A \\<squnion> B) =  \\<Squnion>A \\<squnion> \\<Squnion>B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Squnion>(A \\<squnion> B) = \\<Squnion>A \\<squnion> \\<Squnion>B", "by blast"], ["", "subsection \\<open>Definition 1.8, Intersections\\<close>"], ["", "instantiation hf :: inf\nbegin"], ["", "definition \"inf a b = \\<lbrace>x \\<^bold>\\<in> a. x \\<^bold>\\<in> b\\<rbrace>\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(hf, inf_class)", ".."], ["", "end"], ["", "abbreviation hinter :: \"hf \\<Rightarrow> hf \\<Rightarrow> hf\" (infixl \"\\<sqinter>\" 70) where\n  \"hinter \\<equiv> inf\""], ["", "lemma hinter_iff [iff]: \"hmem u (x \\<sqinter> y) \\<longleftrightarrow> u \\<^bold>\\<in> x \\<and> u \\<^bold>\\<in> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u \\<^bold>\\<in> x \\<sqinter> y) =\n    (u \\<^bold>\\<in> x \\<and> u \\<^bold>\\<in> y)", "by (metis HCollect_iff inf_hf_def)"], ["", "definition HInter :: \"hf \\<Rightarrow> hf\"           (\"\\<Sqinter>_\" [900] 900)\n  where \"HInter(A) = \\<lbrace>x \\<^bold>\\<in> HUnion(A). \\<forall>y. y \\<^bold>\\<in> A \\<longrightarrow> x \\<^bold>\\<in> y\\<rbrace>\""], ["", "lemma HInter_hempty [iff]: \"\\<Sqinter> 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sqinter>0 = 0", "by (metis HCollect_hempty HUnion_hempty HInter_def)"], ["", "lemma HInter_iff [simp]: \"A\\<noteq>0 \\<Longrightarrow> hmem x (\\<Sqinter> A) \\<longleftrightarrow> (\\<forall>y. y \\<^bold>\\<in> A \\<longrightarrow> x \\<^bold>\\<in> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<noteq> 0 \\<Longrightarrow>\n    (x \\<^bold>\\<in> \\<Sqinter>A) =\n    (\\<forall>y. y \\<^bold>\\<in> A \\<longrightarrow> x \\<^bold>\\<in> y)", "by (auto simp: HInter_def)"], ["", "lemma HInter_hinsert [simp]: \"A\\<noteq>0 \\<Longrightarrow> \\<Sqinter>(A \\<triangleleft> a) = a \\<sqinter> \\<Sqinter>A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<noteq> 0 \\<Longrightarrow>\n    \\<Sqinter>(A \\<triangleleft> a) = a \\<sqinter> \\<Sqinter>A", "by (auto simp: hf_ext HInter_iff [OF hinsert_nonempty])"], ["", "subsection \\<open>Set Difference\\<close>"], ["", "instantiation hf :: minus\nbegin"], ["", "definition \"A - B = \\<lbrace>x \\<^bold>\\<in> A. x \\<^bold>\\<notin> B\\<rbrace>\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(hf, minus_class)", ".."], ["", "end"], ["", "lemma hdiff_iff [iff]: \"hmem u (x - y) \\<longleftrightarrow> u \\<^bold>\\<in> x \\<and> u \\<^bold>\\<notin> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u \\<^bold>\\<in> x - y) =\n    (u \\<^bold>\\<in> x \\<and> u \\<^bold>\\<notin> y)", "by (auto simp: minus_hf_def)"], ["", "lemma hdiff_zero [simp]: fixes x :: hf shows \"(x - 0) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x - 0 = x", "by blast"], ["", "lemma zero_hdiff [simp]: fixes x :: hf shows \"(0 - x) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 - x = 0", "by blast"], ["", "lemma hdiff_insert: \"A - (B \\<triangleleft> a) = A - B - \\<lbrace>a\\<rbrace>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A - (B \\<triangleleft> a) = A - B - \\<lbrace>a\\<rbrace>", "by blast"], ["", "lemma hinsert_hdiff_if:\n  \"(A \\<triangleleft> x) - B = (if x \\<^bold>\\<in> B then A - B else (A - B) \\<triangleleft> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A \\<triangleleft> x) - B =\n    (if x \\<^bold>\\<in> B then A - B else A - B \\<triangleleft> x)", "by auto"], ["", "section \\<open>Replacement\\<close>"], ["", "text \\<open>Theorem 1.9 (Replacement Scheme).\\<close>"], ["", "lemma replacement:\n  \"(\\<forall>u v v'. u \\<^bold>\\<in> x \\<longrightarrow> R u v \\<longrightarrow> R u v' \\<longrightarrow> v'=v) \\<Longrightarrow> \\<exists>z. \\<forall>v. v \\<^bold>\\<in> z \\<longleftrightarrow> (\\<exists>u. u \\<^bold>\\<in> x \\<and> R u v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>u v v'.\n       u \\<^bold>\\<in> x \\<longrightarrow>\n       R u v \\<longrightarrow>\n       R u v' \\<longrightarrow> v' = v \\<Longrightarrow>\n    \\<exists>z.\n       \\<forall>v.\n          (v \\<^bold>\\<in> z) = (\\<exists>u. u \\<^bold>\\<in> x \\<and> R u v)", "proof (induct x rule: hf_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>u v v'.\n       u \\<^bold>\\<in> 0 \\<longrightarrow>\n       R u v \\<longrightarrow>\n       R u v' \\<longrightarrow> v' = v \\<Longrightarrow>\n    \\<exists>z.\n       \\<forall>v.\n          (v \\<^bold>\\<in> z) = (\\<exists>u. u \\<^bold>\\<in> 0 \\<and> R u v)\n 2. \\<And>x y.\n       \\<lbrakk>\\<forall>u v v'.\n                   u \\<^bold>\\<in> x \\<longrightarrow>\n                   R u v \\<longrightarrow>\n                   R u v' \\<longrightarrow> v' = v \\<Longrightarrow>\n                \\<exists>z.\n                   \\<forall>v.\n                      (v \\<^bold>\\<in> z) =\n                      (\\<exists>u. u \\<^bold>\\<in> x \\<and> R u v);\n        \\<forall>u v v'.\n           u \\<^bold>\\<in> y \\<longrightarrow>\n           R u v \\<longrightarrow>\n           R u v' \\<longrightarrow> v' = v \\<Longrightarrow>\n        \\<exists>z.\n           \\<forall>v.\n              (v \\<^bold>\\<in> z) =\n              (\\<exists>u. u \\<^bold>\\<in> y \\<and> R u v);\n        x \\<^bold>\\<notin> y;\n        \\<forall>u v v'.\n           u \\<^bold>\\<in> y \\<triangleleft> x \\<longrightarrow>\n           R u v \\<longrightarrow> R u v' \\<longrightarrow> v' = v\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z.\n                            \\<forall>v.\n                               (v \\<^bold>\\<in> z) =\n                               (\\<exists>u.\n                                   u \\<^bold>\\<in>\n                                   y \\<triangleleft> x \\<and>\n                                   R u v)", "case 0"], ["proof (state)\nthis:\n  \\<forall>u v v'.\n     u \\<^bold>\\<in> 0 \\<longrightarrow>\n     R u v \\<longrightarrow> R u v' \\<longrightarrow> v' = v\n\ngoal (2 subgoals):\n 1. \\<forall>u v v'.\n       u \\<^bold>\\<in> 0 \\<longrightarrow>\n       R u v \\<longrightarrow>\n       R u v' \\<longrightarrow> v' = v \\<Longrightarrow>\n    \\<exists>z.\n       \\<forall>v.\n          (v \\<^bold>\\<in> z) = (\\<exists>u. u \\<^bold>\\<in> 0 \\<and> R u v)\n 2. \\<And>x y.\n       \\<lbrakk>\\<forall>u v v'.\n                   u \\<^bold>\\<in> x \\<longrightarrow>\n                   R u v \\<longrightarrow>\n                   R u v' \\<longrightarrow> v' = v \\<Longrightarrow>\n                \\<exists>z.\n                   \\<forall>v.\n                      (v \\<^bold>\\<in> z) =\n                      (\\<exists>u. u \\<^bold>\\<in> x \\<and> R u v);\n        \\<forall>u v v'.\n           u \\<^bold>\\<in> y \\<longrightarrow>\n           R u v \\<longrightarrow>\n           R u v' \\<longrightarrow> v' = v \\<Longrightarrow>\n        \\<exists>z.\n           \\<forall>v.\n              (v \\<^bold>\\<in> z) =\n              (\\<exists>u. u \\<^bold>\\<in> y \\<and> R u v);\n        x \\<^bold>\\<notin> y;\n        \\<forall>u v v'.\n           u \\<^bold>\\<in> y \\<triangleleft> x \\<longrightarrow>\n           R u v \\<longrightarrow> R u v' \\<longrightarrow> v' = v\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z.\n                            \\<forall>v.\n                               (v \\<^bold>\\<in> z) =\n                               (\\<exists>u.\n                                   u \\<^bold>\\<in>\n                                   y \\<triangleleft> x \\<and>\n                                   R u v)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>u v v'.\n     u \\<^bold>\\<in> 0 \\<longrightarrow>\n     R u v \\<longrightarrow> R u v' \\<longrightarrow> v' = v\n\ngoal (1 subgoal):\n 1. \\<exists>z.\n       \\<forall>v.\n          (v \\<^bold>\\<in> z) = (\\<exists>u. u \\<^bold>\\<in> 0 \\<and> R u v)", "by (metis hmem_hempty)"], ["proof (state)\nthis:\n  \\<exists>z.\n     \\<forall>v.\n        (v \\<^bold>\\<in> z) = (\\<exists>u. u \\<^bold>\\<in> 0 \\<and> R u v)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>\\<forall>u v v'.\n                   u \\<^bold>\\<in> x \\<longrightarrow>\n                   R u v \\<longrightarrow>\n                   R u v' \\<longrightarrow> v' = v \\<Longrightarrow>\n                \\<exists>z.\n                   \\<forall>v.\n                      (v \\<^bold>\\<in> z) =\n                      (\\<exists>u. u \\<^bold>\\<in> x \\<and> R u v);\n        \\<forall>u v v'.\n           u \\<^bold>\\<in> y \\<longrightarrow>\n           R u v \\<longrightarrow>\n           R u v' \\<longrightarrow> v' = v \\<Longrightarrow>\n        \\<exists>z.\n           \\<forall>v.\n              (v \\<^bold>\\<in> z) =\n              (\\<exists>u. u \\<^bold>\\<in> y \\<and> R u v);\n        x \\<^bold>\\<notin> y;\n        \\<forall>u v v'.\n           u \\<^bold>\\<in> y \\<triangleleft> x \\<longrightarrow>\n           R u v \\<longrightarrow> R u v' \\<longrightarrow> v' = v\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z.\n                            \\<forall>v.\n                               (v \\<^bold>\\<in> z) =\n                               (\\<exists>u.\n                                   u \\<^bold>\\<in>\n                                   y \\<triangleleft> x \\<and>\n                                   R u v)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>\\<forall>u v v'.\n                   u \\<^bold>\\<in> x \\<longrightarrow>\n                   R u v \\<longrightarrow>\n                   R u v' \\<longrightarrow> v' = v \\<Longrightarrow>\n                \\<exists>z.\n                   \\<forall>v.\n                      (v \\<^bold>\\<in> z) =\n                      (\\<exists>u. u \\<^bold>\\<in> x \\<and> R u v);\n        \\<forall>u v v'.\n           u \\<^bold>\\<in> y \\<longrightarrow>\n           R u v \\<longrightarrow>\n           R u v' \\<longrightarrow> v' = v \\<Longrightarrow>\n        \\<exists>z.\n           \\<forall>v.\n              (v \\<^bold>\\<in> z) =\n              (\\<exists>u. u \\<^bold>\\<in> y \\<and> R u v);\n        x \\<^bold>\\<notin> y;\n        \\<forall>u v v'.\n           u \\<^bold>\\<in> y \\<triangleleft> x \\<longrightarrow>\n           R u v \\<longrightarrow> R u v' \\<longrightarrow> v' = v\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z.\n                            \\<forall>v.\n                               (v \\<^bold>\\<in> z) =\n                               (\\<exists>u.\n                                   u \\<^bold>\\<in>\n                                   y \\<triangleleft> x \\<and>\n                                   R u v)", "case (hinsert a b)"], ["proof (state)\nthis:\n  \\<forall>u v v'.\n     u \\<^bold>\\<in> a \\<longrightarrow>\n     R u v \\<longrightarrow>\n     R u v' \\<longrightarrow> v' = v \\<Longrightarrow>\n  \\<exists>z.\n     \\<forall>v.\n        (v \\<^bold>\\<in> z) = (\\<exists>u. u \\<^bold>\\<in> a \\<and> R u v)\n  \\<forall>u v v'.\n     u \\<^bold>\\<in> b \\<longrightarrow>\n     R u v \\<longrightarrow>\n     R u v' \\<longrightarrow> v' = v \\<Longrightarrow>\n  \\<exists>z.\n     \\<forall>v.\n        (v \\<^bold>\\<in> z) = (\\<exists>u. u \\<^bold>\\<in> b \\<and> R u v)\n  a \\<^bold>\\<notin> b\n  \\<forall>u v v'.\n     u \\<^bold>\\<in> b \\<triangleleft> a \\<longrightarrow>\n     R u v \\<longrightarrow> R u v' \\<longrightarrow> v' = v\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>\\<forall>u v v'.\n                   u \\<^bold>\\<in> x \\<longrightarrow>\n                   R u v \\<longrightarrow>\n                   R u v' \\<longrightarrow> v' = v \\<Longrightarrow>\n                \\<exists>z.\n                   \\<forall>v.\n                      (v \\<^bold>\\<in> z) =\n                      (\\<exists>u. u \\<^bold>\\<in> x \\<and> R u v);\n        \\<forall>u v v'.\n           u \\<^bold>\\<in> y \\<longrightarrow>\n           R u v \\<longrightarrow>\n           R u v' \\<longrightarrow> v' = v \\<Longrightarrow>\n        \\<exists>z.\n           \\<forall>v.\n              (v \\<^bold>\\<in> z) =\n              (\\<exists>u. u \\<^bold>\\<in> y \\<and> R u v);\n        x \\<^bold>\\<notin> y;\n        \\<forall>u v v'.\n           u \\<^bold>\\<in> y \\<triangleleft> x \\<longrightarrow>\n           R u v \\<longrightarrow> R u v' \\<longrightarrow> v' = v\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z.\n                            \\<forall>v.\n                               (v \\<^bold>\\<in> z) =\n                               (\\<exists>u.\n                                   u \\<^bold>\\<in>\n                                   y \\<triangleleft> x \\<and>\n                                   R u v)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>u v v'.\n     u \\<^bold>\\<in> a \\<longrightarrow>\n     R u v \\<longrightarrow>\n     R u v' \\<longrightarrow> v' = v \\<Longrightarrow>\n  \\<exists>z.\n     \\<forall>v.\n        (v \\<^bold>\\<in> z) = (\\<exists>u. u \\<^bold>\\<in> a \\<and> R u v)\n  \\<forall>u v v'.\n     u \\<^bold>\\<in> b \\<longrightarrow>\n     R u v \\<longrightarrow>\n     R u v' \\<longrightarrow> v' = v \\<Longrightarrow>\n  \\<exists>z.\n     \\<forall>v.\n        (v \\<^bold>\\<in> z) = (\\<exists>u. u \\<^bold>\\<in> b \\<and> R u v)\n  a \\<^bold>\\<notin> b\n  \\<forall>u v v'.\n     u \\<^bold>\\<in> b \\<triangleleft> a \\<longrightarrow>\n     R u v \\<longrightarrow> R u v' \\<longrightarrow> v' = v\n\ngoal (1 subgoal):\n 1. \\<exists>z.\n       \\<forall>v.\n          (v \\<^bold>\\<in> z) =\n          (\\<exists>u. u \\<^bold>\\<in> b \\<triangleleft> a \\<and> R u v)", "by simp (metis hmem_hinsert)"], ["proof (state)\nthis:\n  \\<exists>z.\n     \\<forall>v.\n        (v \\<^bold>\\<in> z) =\n        (\\<exists>u. u \\<^bold>\\<in> b \\<triangleleft> a \\<and> R u v)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma replacement_fun: \"\\<exists>z. \\<forall>v. v \\<^bold>\\<in> z \\<longleftrightarrow> (\\<exists>u. u \\<^bold>\\<in> x \\<and> v = f u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>z.\n       \\<forall>v.\n          (v \\<^bold>\\<in> z) =\n          (\\<exists>u. u \\<^bold>\\<in> x \\<and> v = f u)", "by (rule replacement [where R = \"\\<lambda>u v. v = f u\"]) auto"], ["", "definition PrimReplace :: \"hf \\<Rightarrow> (hf \\<Rightarrow> hf \\<Rightarrow> bool) \\<Rightarrow> hf\"\n  where \"PrimReplace A R = (THE z. \\<forall>v. v \\<^bold>\\<in> z \\<longleftrightarrow> (\\<exists>u. u \\<^bold>\\<in> A \\<and> R u v))\""], ["", "definition Replace :: \"hf \\<Rightarrow> (hf \\<Rightarrow> hf \\<Rightarrow> bool) \\<Rightarrow> hf\"\n  where \"Replace A R = PrimReplace A (\\<lambda>x y. (\\<exists>!z. R x z) \\<and> R x y)\""], ["", "definition RepFun :: \"hf \\<Rightarrow> (hf \\<Rightarrow> hf) \\<Rightarrow> hf\"\n  where \"RepFun A f = Replace A (\\<lambda>x y. y = f x)\""], ["", "syntax (ASCII)\n  \"_HReplace\"  :: \"[pttrn, pttrn, hf, bool] \\<Rightarrow> hf\" (\"(1{|_ ./ _<: _, _|})\")\n  \"_HRepFun\"   :: \"[hf, pttrn, hf] \\<Rightarrow> hf\"          (\"(1{|_ ./ _<: _|})\" [51,0,51])\n  \"_HINTER\"    :: \"[pttrn, hf, hf] \\<Rightarrow> hf\"          (\"(3INT _<:_./ _)\" 10)\n  \"_HUNION\"    :: \"[pttrn, hf, hf] \\<Rightarrow> hf\"          (\"(3UN _<:_./ _)\" 10)"], ["", "syntax\n  \"_HReplace\"  :: \"[pttrn, pttrn, hf, bool] \\<Rightarrow> hf\" (\"(1\\<lbrace>_ ./ _ \\<^bold>\\<in> _, _\\<rbrace>)\")\n  \"_HRepFun\"   :: \"[hf, pttrn, hf] \\<Rightarrow> hf\"          (\"(1\\<lbrace>_ ./ _ \\<^bold>\\<in> _\\<rbrace>)\" [51,0,51])\n  \"_HINTER\"    :: \"[pttrn, hf, hf] \\<Rightarrow> hf\"          (\"(3\\<Sqinter>_\\<^bold>\\<in>_./ _)\" 10)\n  \"_HUNION\"    :: \"[pttrn, hf, hf] \\<Rightarrow> hf\"          (\"(3\\<Squnion>_\\<^bold>\\<in>_./ _)\" 10)"], ["", "translations\n  \"\\<lbrace>y. x\\<^bold>\\<in>A, Q\\<rbrace>\" \\<rightleftharpoons> \"CONST Replace A (\\<lambda>x y. Q)\"\n  \"\\<lbrace>b. x\\<^bold>\\<in>A\\<rbrace>\"    \\<rightleftharpoons> \"CONST RepFun A (\\<lambda>x. b)\"\n  \"\\<Sqinter>x\\<^bold>\\<in>A. B\"    \\<rightleftharpoons> \"CONST HInter(CONST RepFun A (\\<lambda>x. B))\"\n  \"\\<Squnion>x\\<^bold>\\<in>A. B\"    \\<rightleftharpoons> \"CONST HUnion(CONST RepFun A (\\<lambda>x. B))\""], ["", "lemma PrimReplace_iff:\n  assumes sv: \"\\<forall>u v v'. u \\<^bold>\\<in> A \\<longrightarrow> R u v \\<longrightarrow> R u v' \\<longrightarrow> v'=v\"\n  shows \"v \\<^bold>\\<in> (PrimReplace A R) \\<longleftrightarrow> (\\<exists>u. u \\<^bold>\\<in> A \\<and> R u v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (v \\<^bold>\\<in> PrimReplace A R) =\n    (\\<exists>u. u \\<^bold>\\<in> A \\<and> R u v)", "apply (insert replacement [OF sv], clarify)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<forall>v.\n          (v \\<^bold>\\<in> z) =\n          (\\<exists>u. u \\<^bold>\\<in> A \\<and> R u v) \\<Longrightarrow>\n       (v \\<^bold>\\<in> PrimReplace A R) =\n       (\\<exists>u. u \\<^bold>\\<in> A \\<and> R u v)", "apply (simp add: PrimReplace_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<forall>v.\n          (v \\<^bold>\\<in> z) =\n          (\\<exists>u. u \\<^bold>\\<in> A \\<and> R u v) \\<Longrightarrow>\n       (v \\<^bold>\\<in>\n        (THE z.\n            \\<forall>v.\n               (v \\<^bold>\\<in> z) =\n               (\\<exists>u. u \\<^bold>\\<in> A \\<and> R u v))) =\n       (\\<exists>u. u \\<^bold>\\<in> A \\<and> R u v)", "apply (rule theI2)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>z.\n       \\<forall>v.\n          (v \\<^bold>\\<in> z) =\n          (\\<exists>u. u \\<^bold>\\<in> A \\<and> R u v) \\<Longrightarrow>\n       \\<forall>v.\n          (v \\<^bold>\\<in> ?a3 z) =\n          (\\<exists>u. u \\<^bold>\\<in> A \\<and> R u v)\n 2. \\<And>z u.\n       \\<lbrakk>\\<forall>v.\n                   (v \\<^bold>\\<in> z) =\n                   (\\<exists>u. u \\<^bold>\\<in> A \\<and> R u v);\n        \\<forall>v.\n           (v \\<^bold>\\<in> u) =\n           (\\<exists>u. u \\<^bold>\\<in> A \\<and> R u v)\\<rbrakk>\n       \\<Longrightarrow> u = ?a3 z\n 3. \\<And>z u.\n       \\<lbrakk>\\<forall>v.\n                   (v \\<^bold>\\<in> z) =\n                   (\\<exists>u. u \\<^bold>\\<in> A \\<and> R u v);\n        \\<forall>v.\n           (v \\<^bold>\\<in> u) =\n           (\\<exists>u. u \\<^bold>\\<in> A \\<and> R u v)\\<rbrakk>\n       \\<Longrightarrow> (v \\<^bold>\\<in> u) =\n                         (\\<exists>u. u \\<^bold>\\<in> A \\<and> R u v)", "apply (auto simp: hf_ext)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Replace_iff [iff]:\n  \"v \\<^bold>\\<in> Replace A R \\<longleftrightarrow> (\\<exists>u. u \\<^bold>\\<in> A \\<and> R u v \\<and> (\\<forall>y. R u y \\<longrightarrow> y=v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (v \\<^bold>\\<in> Replace A R) =\n    (\\<exists>u.\n        u \\<^bold>\\<in> A \\<and>\n        R u v \\<and> (\\<forall>y. R u y \\<longrightarrow> y = v))", "apply (simp add: Replace_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (v \\<^bold>\\<in>\n     PrimReplace A (\\<lambda>x y. (\\<exists>!z. R x z) \\<and> R x y)) =\n    (\\<exists>u.\n        u \\<^bold>\\<in> A \\<and>\n        R u v \\<and> (\\<forall>y. R u y \\<longrightarrow> y = v))", "apply (subst PrimReplace_iff, auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Replace_0 [simp]: \"Replace 0 R = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Replace 0 R = 0", "by blast"], ["", "lemma Replace_hunion [simp]: \"Replace (A \\<squnion> B) R = Replace A R  \\<squnion>  Replace B R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Replace (A \\<squnion> B) R = Replace A R \\<squnion> Replace B R", "by blast"], ["", "lemma Replace_cong [cong]:\n    \"\\<lbrakk> A=B;  \\<And>x y. x \\<^bold>\\<in> B \\<Longrightarrow> P x y \\<longleftrightarrow> Q x y \\<rbrakk>  \\<Longrightarrow> Replace A P = Replace B Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A = B;\n     \\<And>x y. x \\<^bold>\\<in> B \\<Longrightarrow> P x y = Q x y\\<rbrakk>\n    \\<Longrightarrow> Replace A P = Replace B Q", "by (simp add: hf_ext cong: conj_cong)"], ["", "lemma RepFun_iff [iff]: \"v \\<^bold>\\<in> (RepFun A f) \\<longleftrightarrow> (\\<exists>u. u \\<^bold>\\<in> A \\<and> v = f u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (v \\<^bold>\\<in> RepFun A f) =\n    (\\<exists>u. u \\<^bold>\\<in> A \\<and> v = f u)", "by (auto simp: RepFun_def)"], ["", "lemma RepFun_cong [cong]:\n    \"\\<lbrakk> A=B;  \\<And>x. x \\<^bold>\\<in> B \\<Longrightarrow> f(x)=g(x) \\<rbrakk>  \\<Longrightarrow> RepFun A f = RepFun B g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A = B;\n     \\<And>x. x \\<^bold>\\<in> B \\<Longrightarrow> f x = g x\\<rbrakk>\n    \\<Longrightarrow> RepFun A f = RepFun B g", "by (simp add: RepFun_def)"], ["", "lemma triv_RepFun [simp]: \"RepFun A (\\<lambda>x. x) = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>x . x \\<^bold>\\<in> A\\<rbrace> = A", "by blast"], ["", "lemma RepFun_0 [simp]: \"RepFun 0 f = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. RepFun 0 f = 0", "by blast"], ["", "lemma RepFun_hinsert [simp]: \"RepFun (hinsert a b) f = hinsert (f a) (RepFun b f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. RepFun (b \\<triangleleft> a) f = RepFun b f \\<triangleleft> f a", "by blast"], ["", "lemma RepFun_hunion [simp]:\n  \"RepFun (A \\<squnion> B) f = RepFun A f  \\<squnion>  RepFun B f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. RepFun (A \\<squnion> B) f = RepFun A f \\<squnion> RepFun B f", "by blast"], ["", "lemma HF_HUnion: \"\\<lbrakk>finite A; \\<And>x. x\\<in>A \\<Longrightarrow> finite (B x)\\<rbrakk> \\<Longrightarrow> HF (\\<Union>x \\<in> A. B x) = (\\<Squnion>x\\<^bold>\\<in>HF A. HF (B x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A;\n     \\<And>x. x \\<in> A \\<Longrightarrow> finite (B x)\\<rbrakk>\n    \\<Longrightarrow> HF (\\<Union> (B ` A)) =\n                      (\\<Squnion>x\\<^bold>\\<in>HF A. HF (B x))", "by (rule hf_equalityI) (auto)"], ["", "section \\<open>Subset relation and the Lattice Properties\\<close>"], ["", "text \\<open>Definition 1.10 (Subset relation).\\<close>"], ["", "instantiation hf :: order\nbegin"], ["", "definition less_eq_hf where \"A \\<le> B \\<longleftrightarrow> (\\<forall>x. x \\<^bold>\\<in> A \\<longrightarrow> x \\<^bold>\\<in> B)\""], ["", "definition less_hf    where \"A < B \\<longleftrightarrow> A \\<le> B \\<and> A \\<noteq> (B::hf)\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(hf, order_class)", "by standard (auto simp: less_eq_hf_def less_hf_def)"], ["", "end"], ["", "subsection \\<open>Rules for subsets\\<close>"], ["", "lemma hsubsetI [intro!]:\n    \"(\\<And>x. x\\<^bold>\\<in>A \\<Longrightarrow> x\\<^bold>\\<in>B) \\<Longrightarrow> A \\<le> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        x \\<^bold>\\<in> A \\<Longrightarrow>\n        x \\<^bold>\\<in> B) \\<Longrightarrow>\n    A \\<le> B", "by (simp add: less_eq_hf_def)"], ["", "text \\<open>Classical elimination rule\\<close>"], ["", "lemma hsubsetCE [elim]: \"\\<lbrakk> A \\<le> B;  c\\<^bold>\\<notin>A \\<Longrightarrow> P;  c\\<^bold>\\<in>B \\<Longrightarrow> P \\<rbrakk>  \\<Longrightarrow> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<le> B; c \\<^bold>\\<notin> A \\<Longrightarrow> P;\n     c \\<^bold>\\<in> B \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> P", "by (auto simp: less_eq_hf_def)"], ["", "text \\<open>Rule in Modus Ponens style\\<close>"], ["", "lemma hsubsetD [elim]: \"\\<lbrakk> A \\<le> B;  c\\<^bold>\\<in>A \\<rbrakk> \\<Longrightarrow> c\\<^bold>\\<in>B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<le> B; c \\<^bold>\\<in> A\\<rbrakk>\n    \\<Longrightarrow> c \\<^bold>\\<in> B", "by (simp add: less_eq_hf_def)"], ["", "text \\<open>Sometimes useful with premises in this order\\<close>"], ["", "lemma rev_hsubsetD: \"\\<lbrakk> c\\<^bold>\\<in>A; A\\<le>B \\<rbrakk> \\<Longrightarrow> c\\<^bold>\\<in>B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>c \\<^bold>\\<in> A; A \\<le> B\\<rbrakk>\n    \\<Longrightarrow> c \\<^bold>\\<in> B", "by blast"], ["", "lemma contra_hsubsetD: \"\\<lbrakk> A \\<le> B; c \\<notin> B \\<rbrakk>  \\<Longrightarrow> c \\<notin> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> B; c \\<notin> B\\<rbrakk>\n    \\<Longrightarrow> c \\<notin> A", "by blast"], ["", "lemma rev_contra_hsubsetD: \"\\<lbrakk> c \\<notin> B;  A \\<le> B \\<rbrakk>  \\<Longrightarrow> c \\<notin> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>c \\<notin> B; A \\<subseteq> B\\<rbrakk>\n    \\<Longrightarrow> c \\<notin> A", "by blast"], ["", "lemma hf_equalityE:\n  fixes A :: hf shows \"A = B \\<Longrightarrow> (A \\<le> B \\<Longrightarrow> B \\<le> A \\<Longrightarrow> P) \\<Longrightarrow> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A = B;\n     \\<lbrakk>A \\<le> B; B \\<le> A\\<rbrakk> \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> P", "by (metis order_refl)"], ["", "subsection \\<open>Lattice properties\\<close>"], ["", "instantiation hf :: distrib_lattice\nbegin"], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(hf, distrib_lattice_class)", "by standard (auto simp: less_eq_hf_def less_hf_def inf_hf_def)"], ["", "end"], ["", "instantiation hf :: bounded_lattice_bot\nbegin"], ["", "definition \"bot = (0::hf)\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(hf, bounded_lattice_bot_class)", "by standard (auto simp: less_eq_hf_def bot_hf_def)"], ["", "end"], ["", "lemma hinter_hempty_left [simp]: \"0 \\<sqinter> A = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<sqinter> A = 0", "by (metis bot_hf_def inf_bot_left)"], ["", "lemma hinter_hempty_right [simp]: \"A \\<sqinter> 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<sqinter> 0 = 0", "by (metis bot_hf_def inf_bot_right)"], ["", "lemma hunion_hempty_left [simp]: \"0 \\<squnion> A = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<squnion> A = A", "by (metis bot_hf_def sup_bot_left)"], ["", "lemma hunion_hempty_right [simp]: \"A \\<squnion> 0 = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<squnion> 0 = A", "by (metis bot_hf_def sup_bot_right)"], ["", "lemma less_eq_hempty [simp]: \"u \\<le> 0 \\<longleftrightarrow> u = (0::hf)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u \\<le> 0) = (u = 0)", "by (metis hempty_iff less_eq_hf_def)"], ["", "lemma less_eq_insert1_iff [iff]: \"(hinsert x y) \\<le> z \\<longleftrightarrow> x \\<^bold>\\<in> z \\<and> y \\<le> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y \\<triangleleft> x \\<le> z) = (x \\<^bold>\\<in> z \\<and> y \\<le> z)", "by (auto simp: less_eq_hf_def)"], ["", "lemma less_eq_insert2_iff:\n  \"z \\<le> (hinsert x y) \\<longleftrightarrow> z \\<le> y \\<or> (\\<exists>u. hinsert x u = z \\<and> x \\<^bold>\\<notin> u \\<and> u \\<le> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (z \\<le> y \\<triangleleft> x) =\n    (z \\<le> y \\<or>\n     (\\<exists>u.\n         u \\<triangleleft> x = z \\<and>\n         x \\<^bold>\\<notin> u \\<and> u \\<le> y))", "proof (cases \"x \\<^bold>\\<in> z\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<^bold>\\<in> z \\<Longrightarrow>\n    (z \\<le> y \\<triangleleft> x) =\n    (z \\<le> y \\<or>\n     (\\<exists>u.\n         u \\<triangleleft> x = z \\<and>\n         x \\<^bold>\\<notin> u \\<and> u \\<le> y))\n 2. x \\<^bold>\\<notin> z \\<Longrightarrow>\n    (z \\<le> y \\<triangleleft> x) =\n    (z \\<le> y \\<or>\n     (\\<exists>u.\n         u \\<triangleleft> x = z \\<and>\n         x \\<^bold>\\<notin> u \\<and> u \\<le> y))", "case True"], ["proof (state)\nthis:\n  x \\<^bold>\\<in> z\n\ngoal (2 subgoals):\n 1. x \\<^bold>\\<in> z \\<Longrightarrow>\n    (z \\<le> y \\<triangleleft> x) =\n    (z \\<le> y \\<or>\n     (\\<exists>u.\n         u \\<triangleleft> x = z \\<and>\n         x \\<^bold>\\<notin> u \\<and> u \\<le> y))\n 2. x \\<^bold>\\<notin> z \\<Longrightarrow>\n    (z \\<le> y \\<triangleleft> x) =\n    (z \\<le> y \\<or>\n     (\\<exists>u.\n         u \\<triangleleft> x = z \\<and>\n         x \\<^bold>\\<notin> u \\<and> u \\<le> y))", "hence u: \"hinsert x (z - \\<lbrace>x\\<rbrace>) = z\""], ["proof (prove)\nusing this:\n  x \\<^bold>\\<in> z\n\ngoal (1 subgoal):\n 1. z - \\<lbrace>x\\<rbrace> \\<triangleleft> x = z", "by auto"], ["proof (state)\nthis:\n  z - \\<lbrace>x\\<rbrace> \\<triangleleft> x = z\n\ngoal (2 subgoals):\n 1. x \\<^bold>\\<in> z \\<Longrightarrow>\n    (z \\<le> y \\<triangleleft> x) =\n    (z \\<le> y \\<or>\n     (\\<exists>u.\n         u \\<triangleleft> x = z \\<and>\n         x \\<^bold>\\<notin> u \\<and> u \\<le> y))\n 2. x \\<^bold>\\<notin> z \\<Longrightarrow>\n    (z \\<le> y \\<triangleleft> x) =\n    (z \\<le> y \\<or>\n     (\\<exists>u.\n         u \\<triangleleft> x = z \\<and>\n         x \\<^bold>\\<notin> u \\<and> u \\<le> y))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (z \\<le> y \\<triangleleft> x) =\n    (z \\<le> y \\<or>\n     (\\<exists>u.\n         u \\<triangleleft> x = z \\<and>\n         x \\<^bold>\\<notin> u \\<and> u \\<le> y))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. z \\<le> y \\<triangleleft> x \\<Longrightarrow>\n    z \\<le> y \\<or>\n    (\\<exists>u.\n        u \\<triangleleft> x = z \\<and>\n        x \\<^bold>\\<notin> u \\<and> u \\<le> y)\n 2. z \\<le> y \\<or>\n    (\\<exists>u.\n        u \\<triangleleft> x = z \\<and>\n        x \\<^bold>\\<notin> u \\<and> u \\<le> y) \\<Longrightarrow>\n    z \\<le> y \\<triangleleft> x", "assume \"z \\<le> (hinsert x y)\""], ["proof (state)\nthis:\n  z \\<le> y \\<triangleleft> x\n\ngoal (2 subgoals):\n 1. z \\<le> y \\<triangleleft> x \\<Longrightarrow>\n    z \\<le> y \\<or>\n    (\\<exists>u.\n        u \\<triangleleft> x = z \\<and>\n        x \\<^bold>\\<notin> u \\<and> u \\<le> y)\n 2. z \\<le> y \\<or>\n    (\\<exists>u.\n        u \\<triangleleft> x = z \\<and>\n        x \\<^bold>\\<notin> u \\<and> u \\<le> y) \\<Longrightarrow>\n    z \\<le> y \\<triangleleft> x", "thus \"z \\<le> y \\<or> (\\<exists>u. hinsert x u = z \\<and> x \\<^bold>\\<notin> u \\<and> u \\<le> y)\""], ["proof (prove)\nusing this:\n  z \\<le> y \\<triangleleft> x\n\ngoal (1 subgoal):\n 1. z \\<le> y \\<or>\n    (\\<exists>u.\n        u \\<triangleleft> x = z \\<and>\n        x \\<^bold>\\<notin> u \\<and> u \\<le> y)", "by (simp add: less_eq_hf_def) (metis u hdiff_iff hmem_hinsert)"], ["proof (state)\nthis:\n  z \\<le> y \\<or>\n  (\\<exists>u.\n      u \\<triangleleft> x = z \\<and> x \\<^bold>\\<notin> u \\<and> u \\<le> y)\n\ngoal (1 subgoal):\n 1. z \\<le> y \\<or>\n    (\\<exists>u.\n        u \\<triangleleft> x = z \\<and>\n        x \\<^bold>\\<notin> u \\<and> u \\<le> y) \\<Longrightarrow>\n    z \\<le> y \\<triangleleft> x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. z \\<le> y \\<or>\n    (\\<exists>u.\n        u \\<triangleleft> x = z \\<and>\n        x \\<^bold>\\<notin> u \\<and> u \\<le> y) \\<Longrightarrow>\n    z \\<le> y \\<triangleleft> x", "assume \"z \\<le> y \\<or> (\\<exists>u. hinsert x u = z \\<and> x \\<^bold>\\<notin> u \\<and> u \\<le> y)\""], ["proof (state)\nthis:\n  z \\<le> y \\<or>\n  (\\<exists>u.\n      u \\<triangleleft> x = z \\<and> x \\<^bold>\\<notin> u \\<and> u \\<le> y)\n\ngoal (1 subgoal):\n 1. z \\<le> y \\<or>\n    (\\<exists>u.\n        u \\<triangleleft> x = z \\<and>\n        x \\<^bold>\\<notin> u \\<and> u \\<le> y) \\<Longrightarrow>\n    z \\<le> y \\<triangleleft> x", "thus \"z \\<le> (hinsert x y)\""], ["proof (prove)\nusing this:\n  z \\<le> y \\<or>\n  (\\<exists>u.\n      u \\<triangleleft> x = z \\<and> x \\<^bold>\\<notin> u \\<and> u \\<le> y)\n\ngoal (1 subgoal):\n 1. z \\<le> y \\<triangleleft> x", "by (auto simp: less_eq_hf_def)"], ["proof (state)\nthis:\n  z \\<le> y \\<triangleleft> x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (z \\<le> y \\<triangleleft> x) =\n  (z \\<le> y \\<or>\n   (\\<exists>u.\n       u \\<triangleleft> x = z \\<and>\n       x \\<^bold>\\<notin> u \\<and> u \\<le> y))\n\ngoal (1 subgoal):\n 1. x \\<^bold>\\<notin> z \\<Longrightarrow>\n    (z \\<le> y \\<triangleleft> x) =\n    (z \\<le> y \\<or>\n     (\\<exists>u.\n         u \\<triangleleft> x = z \\<and>\n         x \\<^bold>\\<notin> u \\<and> u \\<le> y))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<^bold>\\<notin> z \\<Longrightarrow>\n    (z \\<le> y \\<triangleleft> x) =\n    (z \\<le> y \\<or>\n     (\\<exists>u.\n         u \\<triangleleft> x = z \\<and>\n         x \\<^bold>\\<notin> u \\<and> u \\<le> y))", "case False"], ["proof (state)\nthis:\n  x \\<^bold>\\<notin> z\n\ngoal (1 subgoal):\n 1. x \\<^bold>\\<notin> z \\<Longrightarrow>\n    (z \\<le> y \\<triangleleft> x) =\n    (z \\<le> y \\<or>\n     (\\<exists>u.\n         u \\<triangleleft> x = z \\<and>\n         x \\<^bold>\\<notin> u \\<and> u \\<le> y))", "thus ?thesis"], ["proof (prove)\nusing this:\n  x \\<^bold>\\<notin> z\n\ngoal (1 subgoal):\n 1. (z \\<le> y \\<triangleleft> x) =\n    (z \\<le> y \\<or>\n     (\\<exists>u.\n         u \\<triangleleft> x = z \\<and>\n         x \\<^bold>\\<notin> u \\<and> u \\<le> y))", "by (metis hmem_hinsert less_eq_hf_def)"], ["proof (state)\nthis:\n  (z \\<le> y \\<triangleleft> x) =\n  (z \\<le> y \\<or>\n   (\\<exists>u.\n       u \\<triangleleft> x = z \\<and>\n       x \\<^bold>\\<notin> u \\<and> u \\<le> y))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma zero_le [simp]: \"0 \\<le> (x::hf)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> x", "by blast"], ["", "lemma hinsert_eq_sup: \"b \\<triangleleft> a = b \\<squnion> \\<lbrace>a\\<rbrace>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<triangleleft> a = b \\<squnion> \\<lbrace>a\\<rbrace>", "by blast"], ["", "lemma hunion_hinsert_left: \"hinsert x A \\<squnion> B = hinsert x (A \\<squnion> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A \\<triangleleft> x) \\<squnion> B = A \\<squnion> B \\<triangleleft> x", "by blast"], ["", "lemma hunion_hinsert_right: \"B \\<squnion> hinsert x A = hinsert x (B \\<squnion> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<squnion> (A \\<triangleleft> x) = B \\<squnion> A \\<triangleleft> x", "by blast"], ["", "lemma hinter_hinsert_left: \"hinsert x A \\<sqinter> B = (if x \\<^bold>\\<in> B then hinsert x (A \\<sqinter> B) else A \\<sqinter> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A \\<triangleleft> x) \\<sqinter> B =\n    (if x \\<^bold>\\<in> B then A \\<sqinter> B \\<triangleleft> x\n     else A \\<sqinter> B)", "by auto"], ["", "lemma hinter_hinsert_right: \"B \\<sqinter> hinsert x A = (if x \\<^bold>\\<in> B then hinsert x (B \\<sqinter> A) else B \\<sqinter> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<sqinter> (A \\<triangleleft> x) =\n    (if x \\<^bold>\\<in> B then B \\<sqinter> A \\<triangleleft> x\n     else B \\<sqinter> A)", "by auto"], ["", "section \\<open>Foundation, Cardinality, Powersets\\<close>"], ["", "subsection \\<open>Foundation\\<close>"], ["", "text \\<open>Theorem 1.13: Foundation (Regularity) Property.\\<close>"], ["", "lemma foundation:\n  assumes z: \"z \\<noteq> 0\" shows \"\\<exists>w. w \\<^bold>\\<in> z \\<and> w \\<sqinter> z = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>w. w \\<^bold>\\<in> z \\<and> w \\<sqinter> z = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>w. w \\<^bold>\\<in> z \\<and> w \\<sqinter> z = 0", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>w. w \\<^bold>\\<in> z \\<and> w \\<sqinter> z = 0", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>w. w \\<^bold>\\<in> z \\<and> w \\<sqinter> z = 0", "assume z: \"(\\<forall>w. w \\<^bold>\\<in> z \\<longrightarrow> w \\<sqinter> z \\<noteq> 0)\""], ["proof (state)\nthis:\n  \\<forall>w. w \\<^bold>\\<in> z \\<longrightarrow> w \\<sqinter> z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>w. w \\<^bold>\\<in> z \\<and> w \\<sqinter> z = 0", "have \"x \\<^bold>\\<notin> z \\<and> x \\<sqinter> z = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<^bold>\\<notin> z \\<and> x \\<sqinter> z = 0", "proof (induction x rule: hf_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 \\<^bold>\\<notin> z \\<and> 0 \\<sqinter> z = 0\n 2. \\<And>x y.\n       \\<lbrakk>x \\<^bold>\\<notin> z \\<and> x \\<sqinter> z = 0;\n        y \\<^bold>\\<notin> z \\<and> y \\<sqinter> z = 0;\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> y \\<triangleleft> x \\<^bold>\\<notin> z \\<and>\n                         (y \\<triangleleft> x) \\<sqinter> z = 0", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. 0 \\<^bold>\\<notin> z \\<and> 0 \\<sqinter> z = 0\n 2. \\<And>x y.\n       \\<lbrakk>x \\<^bold>\\<notin> z \\<and> x \\<sqinter> z = 0;\n        y \\<^bold>\\<notin> z \\<and> y \\<sqinter> z = 0;\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> y \\<triangleleft> x \\<^bold>\\<notin> z \\<and>\n                         (y \\<triangleleft> x) \\<sqinter> z = 0", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<^bold>\\<notin> z \\<and> 0 \\<sqinter> z = 0", "by (metis hinter_hempty_left z)"], ["proof (state)\nthis:\n  0 \\<^bold>\\<notin> z \\<and> 0 \\<sqinter> z = 0\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<^bold>\\<notin> z \\<and> x \\<sqinter> z = 0;\n        y \\<^bold>\\<notin> z \\<and> y \\<sqinter> z = 0;\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> y \\<triangleleft> x \\<^bold>\\<notin> z \\<and>\n                         (y \\<triangleleft> x) \\<sqinter> z = 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<^bold>\\<notin> z \\<and> x \\<sqinter> z = 0;\n        y \\<^bold>\\<notin> z \\<and> y \\<sqinter> z = 0;\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> y \\<triangleleft> x \\<^bold>\\<notin> z \\<and>\n                         (y \\<triangleleft> x) \\<sqinter> z = 0", "case (hinsert x y)"], ["proof (state)\nthis:\n  x \\<^bold>\\<notin> z \\<and> x \\<sqinter> z = 0\n  y \\<^bold>\\<notin> z \\<and> y \\<sqinter> z = 0\n  x \\<^bold>\\<notin> y\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<^bold>\\<notin> z \\<and> x \\<sqinter> z = 0;\n        y \\<^bold>\\<notin> z \\<and> y \\<sqinter> z = 0;\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> y \\<triangleleft> x \\<^bold>\\<notin> z \\<and>\n                         (y \\<triangleleft> x) \\<sqinter> z = 0", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<^bold>\\<notin> z \\<and> x \\<sqinter> z = 0\n  y \\<^bold>\\<notin> z \\<and> y \\<sqinter> z = 0\n  x \\<^bold>\\<notin> y\n\ngoal (1 subgoal):\n 1. y \\<triangleleft> x \\<^bold>\\<notin> z \\<and>\n    (y \\<triangleleft> x) \\<sqinter> z = 0", "by (metis hinter_hinsert_left z)"], ["proof (state)\nthis:\n  y \\<triangleleft> x \\<^bold>\\<notin> z \\<and>\n  (y \\<triangleleft> x) \\<sqinter> z = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<^bold>\\<notin> z \\<and> x \\<sqinter> z = 0\n\ngoal (1 subgoal):\n 1. \\<exists>w. w \\<^bold>\\<in> z \\<and> w \\<sqinter> z = 0", "}"], ["proof (state)\nthis:\n  \\<forall>w.\n     w \\<^bold>\\<in> z \\<longrightarrow>\n     w \\<sqinter> z \\<noteq> 0 \\<Longrightarrow>\n  ?x2 \\<^bold>\\<notin> z \\<and> ?x2 \\<sqinter> z = 0\n\ngoal (1 subgoal):\n 1. \\<exists>w. w \\<^bold>\\<in> z \\<and> w \\<sqinter> z = 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>w.\n     w \\<^bold>\\<in> z \\<longrightarrow>\n     w \\<sqinter> z \\<noteq> 0 \\<Longrightarrow>\n  ?x2 \\<^bold>\\<notin> z \\<and> ?x2 \\<sqinter> z = 0\n\ngoal (1 subgoal):\n 1. \\<exists>w. w \\<^bold>\\<in> z \\<and> w \\<sqinter> z = 0", "using z"], ["proof (prove)\nusing this:\n  \\<forall>w.\n     w \\<^bold>\\<in> z \\<longrightarrow>\n     w \\<sqinter> z \\<noteq> 0 \\<Longrightarrow>\n  ?x2 \\<^bold>\\<notin> z \\<and> ?x2 \\<sqinter> z = 0\n  z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>w. w \\<^bold>\\<in> z \\<and> w \\<sqinter> z = 0", "by (metis z hempty_iff)"], ["proof (state)\nthis:\n  \\<exists>w. w \\<^bold>\\<in> z \\<and> w \\<sqinter> z = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma hmem_not_refl: \"x \\<^bold>\\<notin> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<^bold>\\<notin> x", "using foundation [of \"\\<lbrace>x\\<rbrace>\"]"], ["proof (prove)\nusing this:\n  \\<lbrace>x\\<rbrace> \\<noteq> 0 \\<Longrightarrow>\n  \\<exists>w.\n     w \\<^bold>\\<in> \\<lbrace>x\\<rbrace> \\<and>\n     w \\<sqinter> \\<lbrace>x\\<rbrace> = 0\n\ngoal (1 subgoal):\n 1. x \\<^bold>\\<notin> x", "by (metis hinter_iff hmem_hempty hmem_hinsert)"], ["", "lemma hmem_not_sym: \"\\<not> (x \\<^bold>\\<in> y \\<and> y \\<^bold>\\<in> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (x \\<^bold>\\<in> y \\<and> y \\<^bold>\\<in> x)", "using foundation [of \"\\<lbrace>x,y\\<rbrace>\"]"], ["proof (prove)\nusing this:\n  \\<lbrace>x, y\\<rbrace> \\<noteq> 0 \\<Longrightarrow>\n  \\<exists>w.\n     w \\<^bold>\\<in> \\<lbrace>x, y\\<rbrace> \\<and>\n     w \\<sqinter> \\<lbrace>x, y\\<rbrace> = 0\n\ngoal (1 subgoal):\n 1. \\<not> (x \\<^bold>\\<in> y \\<and> y \\<^bold>\\<in> x)", "by (metis hinter_iff hmem_hempty hmem_hinsert)"], ["", "lemma hmem_ne: \"x \\<^bold>\\<in> y \\<Longrightarrow> x \\<noteq> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<^bold>\\<in> y \\<Longrightarrow> x \\<noteq> y", "by (metis hmem_not_refl)"], ["", "lemma hmem_Sup_ne: \"x \\<^bold>\\<in> y \\<Longrightarrow> \\<Squnion>x \\<noteq> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<^bold>\\<in> y \\<Longrightarrow> \\<Squnion>x \\<noteq> y", "by (metis HUnion_iff hmem_not_sym)"], ["", "lemma hpair_neq_fst: \"\\<langle>a,b\\<rangle> \\<noteq> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>a, b\\<rangle> \\<noteq> a", "by (metis hpair_def hinsert_iff hmem_not_sym)"], ["", "lemma hpair_neq_snd: \"\\<langle>a,b\\<rangle> \\<noteq> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>a, b\\<rangle> \\<noteq> b", "by (metis hpair_def hinsert_iff hmem_not_sym)"], ["", "lemma hpair_nonzero [simp]: \"\\<langle>x,y\\<rangle> \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>x, y\\<rangle> \\<noteq> 0", "by (auto simp: hpair_def)"], ["", "lemma zero_notin_hpair: \"0 \\<^bold>\\<notin> \\<langle>x,y\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<^bold>\\<notin> \\<langle>x, y\\<rangle>", "by (auto simp: hpair_def)"], ["", "subsection \\<open>Cardinality\\<close>"], ["", "text \\<open>First we need to hack the underlying representation\\<close>"], ["", "lemma hfset_0 [simp]: \"hfset 0 = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hfset 0 = {}", "by (metis Zero_hf_def finite.emptyI hfset_HF)"], ["", "lemma hfset_hinsert: \"hfset (b \\<triangleleft> a) = insert a (hfset b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hfset (b \\<triangleleft> a) = insert a (hfset b)", "by (metis finite_insert hinsert_def HF.finite_hfset hfset_HF)"], ["", "lemma hfset_hdiff: \"hfset (x - y) = hfset x - hfset y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hfset (x - y) = hfset x - hfset y", "proof (induct x arbitrary: y rule: hf_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y. hfset (0 - y) = hfset 0 - hfset y\n 2. \\<And>x y ya.\n       \\<lbrakk>\\<And>y. hfset (x - y) = hfset x - hfset y;\n        \\<And>ya. hfset (y - ya) = hfset y - hfset ya;\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> hfset ((y \\<triangleleft> x) - ya) =\n                         hfset (y \\<triangleleft> x) - hfset ya", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>y. hfset (0 - y) = hfset 0 - hfset y\n 2. \\<And>x y ya.\n       \\<lbrakk>\\<And>y. hfset (x - y) = hfset x - hfset y;\n        \\<And>ya. hfset (y - ya) = hfset y - hfset ya;\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> hfset ((y \\<triangleleft> x) - ya) =\n                         hfset (y \\<triangleleft> x) - hfset ya", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. hfset (0 - y) = hfset 0 - hfset y", "by simp"], ["proof (state)\nthis:\n  hfset (0 - y) = hfset 0 - hfset y\n\ngoal (1 subgoal):\n 1. \\<And>x y ya.\n       \\<lbrakk>\\<And>y. hfset (x - y) = hfset x - hfset y;\n        \\<And>ya. hfset (y - ya) = hfset y - hfset ya;\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> hfset ((y \\<triangleleft> x) - ya) =\n                         hfset (y \\<triangleleft> x) - hfset ya", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y ya.\n       \\<lbrakk>\\<And>y. hfset (x - y) = hfset x - hfset y;\n        \\<And>ya. hfset (y - ya) = hfset y - hfset ya;\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> hfset ((y \\<triangleleft> x) - ya) =\n                         hfset (y \\<triangleleft> x) - hfset ya", "case (hinsert a b)"], ["proof (state)\nthis:\n  hfset (a - ?y) = hfset a - hfset ?y\n  hfset (b - ?y) = hfset b - hfset ?y\n  a \\<^bold>\\<notin> b\n\ngoal (1 subgoal):\n 1. \\<And>x y ya.\n       \\<lbrakk>\\<And>y. hfset (x - y) = hfset x - hfset y;\n        \\<And>ya. hfset (y - ya) = hfset y - hfset ya;\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> hfset ((y \\<triangleleft> x) - ya) =\n                         hfset (y \\<triangleleft> x) - hfset ya", "thus ?case"], ["proof (prove)\nusing this:\n  hfset (a - ?y) = hfset a - hfset ?y\n  hfset (b - ?y) = hfset b - hfset ?y\n  a \\<^bold>\\<notin> b\n\ngoal (1 subgoal):\n 1. hfset ((b \\<triangleleft> a) - y) =\n    hfset (b \\<triangleleft> a) - hfset y", "by (simp add: hfset_hinsert Set.insert_Diff_if hinsert_hdiff_if hmem_def)"], ["proof (state)\nthis:\n  hfset ((b \\<triangleleft> a) - y) = hfset (b \\<triangleleft> a) - hfset y\n\ngoal:\nNo subgoals!", "qed"], ["", "definition hcard :: \"hf \\<Rightarrow> nat\"\n  where \"hcard x = card (hfset x)\""], ["", "lemma hcard_0 [simp]: \"hcard 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hcard 0 = 0", "by (simp add: hcard_def)"], ["", "lemma hcard_hinsert_if: \"hcard (hinsert x y) = (if x \\<^bold>\\<in> y then hcard y else Suc (hcard y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hcard (y \\<triangleleft> x) =\n    (if x \\<^bold>\\<in> y then hcard y else Suc (hcard y))", "by (simp add: hcard_def hfset_hinsert card_insert_if hmem_def)"], ["", "lemma hcard_union_inter: \"hcard (x \\<squnion> y) + hcard (x \\<sqinter> y) = hcard x + hcard y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hcard (x \\<squnion> y) + hcard (x \\<sqinter> y) = hcard x + hcard y", "apply (induct x arbitrary: y rule: hf_induct)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       hcard (0 \\<squnion> y) + hcard (0 \\<sqinter> y) = hcard 0 + hcard y\n 2. \\<And>x y ya.\n       \\<lbrakk>\\<And>y.\n                   hcard (x \\<squnion> y) + hcard (x \\<sqinter> y) =\n                   hcard x + hcard y;\n        \\<And>ya.\n           hcard (y \\<squnion> ya) + hcard (y \\<sqinter> ya) =\n           hcard y + hcard ya;\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> hcard ((y \\<triangleleft> x) \\<squnion> ya) +\n                         hcard ((y \\<triangleleft> x) \\<sqinter> ya) =\n                         hcard (y \\<triangleleft> x) + hcard ya", "apply (auto simp: hcard_hinsert_if hunion_hinsert_left hinter_hinsert_left)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma hcard_hdiff1_less: \"x \\<^bold>\\<in> z \\<Longrightarrow> hcard (z - \\<lbrace>x\\<rbrace>) < hcard z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<^bold>\\<in> z \\<Longrightarrow>\n    hcard (z - \\<lbrace>x\\<rbrace>) < hcard z", "by (simp add: hcard_def hfset_hdiff hfset_hinsert)\n     (metis card_Diff1_less finite_hfset hmem_def)"], ["", "subsection \\<open>Powerset Operator\\<close>"], ["", "text \\<open>Theorem 1.11 (Existence of the power set).\\<close>"], ["", "lemma powerset: \"\\<exists>z. \\<forall>u. u \\<^bold>\\<in> z \\<longleftrightarrow> u \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>z. \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<le> x)", "proof (induction x rule: hf_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>z. \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<le> 0)\n 2. \\<And>x y.\n       \\<lbrakk>\\<exists>z. \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<le> x);\n        \\<exists>z. \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<le> y);\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z.\n                            \\<forall>u.\n                               (u \\<^bold>\\<in> z) =\n                               (u \\<le> y \\<triangleleft> x)", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<exists>z. \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<le> 0)\n 2. \\<And>x y.\n       \\<lbrakk>\\<exists>z. \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<le> x);\n        \\<exists>z. \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<le> y);\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z.\n                            \\<forall>u.\n                               (u \\<^bold>\\<in> z) =\n                               (u \\<le> y \\<triangleleft> x)", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>z. \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<le> 0)", "by (metis hmem_hempty hmem_hinsert less_eq_hempty)"], ["proof (state)\nthis:\n  \\<exists>z. \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<le> 0)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>\\<exists>z. \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<le> x);\n        \\<exists>z. \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<le> y);\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z.\n                            \\<forall>u.\n                               (u \\<^bold>\\<in> z) =\n                               (u \\<le> y \\<triangleleft> x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>\\<exists>z. \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<le> x);\n        \\<exists>z. \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<le> y);\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z.\n                            \\<forall>u.\n                               (u \\<^bold>\\<in> z) =\n                               (u \\<le> y \\<triangleleft> x)", "case (hinsert a b)"], ["proof (state)\nthis:\n  \\<exists>z. \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<le> a)\n  \\<exists>z. \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<le> b)\n  a \\<^bold>\\<notin> b\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>\\<exists>z. \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<le> x);\n        \\<exists>z. \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<le> y);\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z.\n                            \\<forall>u.\n                               (u \\<^bold>\\<in> z) =\n                               (u \\<le> y \\<triangleleft> x)", "then"], ["proof (chain)\npicking this:\n  \\<exists>z. \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<le> a)\n  \\<exists>z. \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<le> b)\n  a \\<^bold>\\<notin> b", "obtain Pb where Pb: \"\\<forall>u. u \\<^bold>\\<in> Pb \\<longleftrightarrow> u \\<le> b\""], ["proof (prove)\nusing this:\n  \\<exists>z. \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<le> a)\n  \\<exists>z. \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<le> b)\n  a \\<^bold>\\<notin> b\n\ngoal (1 subgoal):\n 1. (\\<And>Pb.\n        \\<forall>u. (u \\<^bold>\\<in> Pb) = (u \\<le> b) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<forall>u. (u \\<^bold>\\<in> Pb) = (u \\<le> b)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>\\<exists>z. \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<le> x);\n        \\<exists>z. \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<le> y);\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z.\n                            \\<forall>u.\n                               (u \\<^bold>\\<in> z) =\n                               (u \\<le> y \\<triangleleft> x)", "obtain RPb where RPb: \"\\<forall>v. v \\<^bold>\\<in> RPb \\<longleftrightarrow> (\\<exists>u. u \\<^bold>\\<in> Pb \\<and> v = hinsert a u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>RPb.\n        \\<forall>v.\n           (v \\<^bold>\\<in> RPb) =\n           (\\<exists>u.\n               u \\<^bold>\\<in> Pb \\<and>\n               v = u \\<triangleleft> a) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using replacement_fun"], ["proof (prove)\nusing this:\n  \\<exists>z.\n     \\<forall>v.\n        (v \\<^bold>\\<in> z) =\n        (\\<exists>u. u \\<^bold>\\<in> ?x \\<and> v = ?f u)\n\ngoal (1 subgoal):\n 1. (\\<And>RPb.\n        \\<forall>v.\n           (v \\<^bold>\\<in> RPb) =\n           (\\<exists>u.\n               u \\<^bold>\\<in> Pb \\<and>\n               v = u \\<triangleleft> a) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  \\<forall>v.\n     (v \\<^bold>\\<in> RPb) =\n     (\\<exists>u. u \\<^bold>\\<in> Pb \\<and> v = u \\<triangleleft> a)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>\\<exists>z. \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<le> x);\n        \\<exists>z. \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<le> y);\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z.\n                            \\<forall>u.\n                               (u \\<^bold>\\<in> z) =\n                               (u \\<le> y \\<triangleleft> x)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>v.\n     (v \\<^bold>\\<in> RPb) =\n     (\\<exists>u. u \\<^bold>\\<in> Pb \\<and> v = u \\<triangleleft> a)\n\ngoal (1 subgoal):\n 1. \\<exists>z.\n       \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<le> b \\<triangleleft> a)", "using Pb binary_union [of Pb RPb]"], ["proof (prove)\nusing this:\n  \\<forall>v.\n     (v \\<^bold>\\<in> RPb) =\n     (\\<exists>u. u \\<^bold>\\<in> Pb \\<and> v = u \\<triangleleft> a)\n  \\<forall>u. (u \\<^bold>\\<in> Pb) = (u \\<le> b)\n  \\<exists>z.\n     \\<forall>u.\n        (u \\<^bold>\\<in> z) = (u \\<^bold>\\<in> Pb \\<or> u \\<^bold>\\<in> RPb)\n\ngoal (1 subgoal):\n 1. \\<exists>z.\n       \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<le> b \\<triangleleft> a)", "apply (simp add: less_eq_insert2_iff, clarify)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z za.\n       \\<lbrakk>\\<forall>v.\n                   (v \\<^bold>\\<in> RPb) =\n                   (\\<exists>u\\<le>b. v = u \\<triangleleft> a);\n        \\<forall>u. (u \\<^bold>\\<in> Pb) = (u \\<le> b);\n        \\<forall>v.\n           (v \\<^bold>\\<in> RPb) =\n           (\\<exists>u. u \\<^bold>\\<in> Pb \\<and> v = u \\<triangleleft> a);\n        \\<forall>u. (u \\<^bold>\\<in> Pb) = (u \\<le> b);\n        \\<forall>u.\n           (u \\<^bold>\\<in> z) =\n           (u \\<le> b \\<or> (\\<exists>ua\\<le>b. u = ua \\<triangleleft> a));\n        \\<forall>u.\n           (u \\<^bold>\\<in> za) =\n           (u \\<^bold>\\<in> Pb \\<or> u \\<^bold>\\<in> RPb)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z.\n                            \\<forall>u.\n                               (u \\<^bold>\\<in> z) =\n                               (u \\<le> b \\<or>\n                                (\\<exists>ua.\n                                    ua \\<triangleleft> a = u \\<and>\n                                    a \\<^bold>\\<notin> ua \\<and>\n                                    ua \\<le> b))", "apply (rule_tac x=z in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z za.\n       \\<lbrakk>\\<forall>v.\n                   (v \\<^bold>\\<in> RPb) =\n                   (\\<exists>u\\<le>b. v = u \\<triangleleft> a);\n        \\<forall>u. (u \\<^bold>\\<in> Pb) = (u \\<le> b);\n        \\<forall>v.\n           (v \\<^bold>\\<in> RPb) =\n           (\\<exists>u. u \\<^bold>\\<in> Pb \\<and> v = u \\<triangleleft> a);\n        \\<forall>u. (u \\<^bold>\\<in> Pb) = (u \\<le> b);\n        \\<forall>u.\n           (u \\<^bold>\\<in> z) =\n           (u \\<le> b \\<or> (\\<exists>ua\\<le>b. u = ua \\<triangleleft> a));\n        \\<forall>u.\n           (u \\<^bold>\\<in> za) =\n           (u \\<^bold>\\<in> Pb \\<or> u \\<^bold>\\<in> RPb)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>u.\n                            (u \\<^bold>\\<in> z) =\n                            (u \\<le> b \\<or>\n                             (\\<exists>ua.\n                                 ua \\<triangleleft> a = u \\<and>\n                                 a \\<^bold>\\<notin> ua \\<and> ua \\<le> b))", "apply (metis hinsert.hyps less_eq_hf_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>z.\n     \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<le> b \\<triangleleft> a)\n\ngoal:\nNo subgoals!", "qed"], ["", "definition HPow :: \"hf \\<Rightarrow> hf\"\n  where \"HPow x = (THE z. \\<forall>u. u \\<^bold>\\<in> z \\<longleftrightarrow> u \\<le> x)\""], ["", "lemma HPow_iff [iff]: \"u \\<^bold>\\<in> HPow x \\<longleftrightarrow> u \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u \\<^bold>\\<in> HPow x) = (u \\<le> x)", "apply (insert powerset [of x], clarify)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<le> x) \\<Longrightarrow>\n       (u \\<^bold>\\<in> HPow x) = (u \\<le> x)", "apply (simp add: HPow_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<le> x) \\<Longrightarrow>\n       (u \\<^bold>\\<in>\n        (THE z. \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<le> x))) =\n       (u \\<le> x)", "apply (rule theI2)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>z.\n       \\<forall>u. (u \\<^bold>\\<in> z) = (u \\<le> x) \\<Longrightarrow>\n       \\<forall>u. (u \\<^bold>\\<in> ?a2 z) = (u \\<le> x)\n 2. \\<And>z xa.\n       \\<lbrakk>\\<forall>u. (u \\<^bold>\\<in> z) = (u \\<le> x);\n        \\<forall>u. (u \\<^bold>\\<in> xa) = (u \\<le> x)\\<rbrakk>\n       \\<Longrightarrow> xa = ?a2 z\n 3. \\<And>z xa.\n       \\<lbrakk>\\<forall>u. (u \\<^bold>\\<in> z) = (u \\<le> x);\n        \\<forall>u. (u \\<^bold>\\<in> xa) = (u \\<le> x)\\<rbrakk>\n       \\<Longrightarrow> (u \\<^bold>\\<in> xa) = (u \\<le> x)", "apply (auto simp: hf_ext)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma HPow_mono: \"x \\<le> y \\<Longrightarrow> HPow x \\<le> HPow y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow> HPow x \\<le> HPow y", "by (metis HPow_iff less_eq_hf_def order_trans)"], ["", "lemma HPow_mono_strict: \"x < y \\<Longrightarrow> HPow x < HPow y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x < y \\<Longrightarrow> HPow x < HPow y", "by (metis HPow_iff HPow_mono less_le_not_le order_eq_iff)"], ["", "lemma HPow_mono_iff [simp]: \"HPow x \\<le> HPow y \\<longleftrightarrow> x \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (HPow x \\<le> HPow y) = (x \\<le> y)", "by (metis HPow_iff HPow_mono hsubsetCE order_refl)"], ["", "lemma HPow_mono_strict_iff [simp]: \"HPow x < HPow y \\<longleftrightarrow> x < y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (HPow x < HPow y) = (x < y)", "by (metis HPow_mono_iff less_le_not_le)"], ["", "section \\<open>Bounded Quantifiers\\<close>"], ["", "definition HBall :: \"hf \\<Rightarrow> (hf \\<Rightarrow> bool) \\<Rightarrow> bool\" where\n  \"HBall A P \\<longleftrightarrow> (\\<forall>x. x \\<^bold>\\<in> A \\<longrightarrow> P x)\"   \\<comment> \\<open>bounded universal quantifiers\\<close>"], ["", "definition HBex :: \"hf \\<Rightarrow> (hf \\<Rightarrow> bool) \\<Rightarrow> bool\" where\n  \"HBex A P \\<longleftrightarrow> (\\<exists>x. x \\<^bold>\\<in> A \\<and> P x)\"   \\<comment> \\<open>bounded existential quantifiers\\<close>"], ["", "syntax (ASCII)\n  \"_HBall\"       :: \"pttrn \\<Rightarrow> hf \\<Rightarrow> bool \\<Rightarrow> bool\"      (\"(3ALL _<:_./ _)\" [0, 0, 10] 10)\n  \"_HBex\"        :: \"pttrn \\<Rightarrow> hf \\<Rightarrow> bool \\<Rightarrow> bool\"      (\"(3EX _<:_./ _)\"  [0, 0, 10] 10)\n  \"_HBex1\"       :: \"pttrn \\<Rightarrow> hf \\<Rightarrow> bool \\<Rightarrow> bool\"      (\"(3EX! _<:_./ _)\" [0, 0, 10] 10)"], ["", "syntax\n  \"_HBall\"       :: \"pttrn \\<Rightarrow> hf \\<Rightarrow> bool \\<Rightarrow> bool\"      (\"(3\\<forall>_\\<^bold>\\<in>_./ _)\"  [0, 0, 10] 10)\n  \"_HBex\"        :: \"pttrn \\<Rightarrow> hf \\<Rightarrow> bool \\<Rightarrow> bool\"      (\"(3\\<exists>_\\<^bold>\\<in>_./ _)\"  [0, 0, 10] 10)\n  \"_HBex1\"       :: \"pttrn \\<Rightarrow> hf \\<Rightarrow> bool \\<Rightarrow> bool\"      (\"(3\\<exists>!_\\<^bold>\\<in>_./ _)\" [0, 0, 10] 10)"], ["", "translations\n  \"\\<forall>x\\<^bold>\\<in>A. P\" \\<rightleftharpoons> \"CONST HBall A (\\<lambda>x. P)\"\n  \"\\<exists>x\\<^bold>\\<in>A. P\" \\<rightleftharpoons> \"CONST HBex A (\\<lambda>x. P)\"\n  \"\\<exists>!x\\<^bold>\\<in>A. P\" \\<rightharpoonup> \"\\<exists>!x. x\\<in>A \\<and> P\""], ["", "lemma hball_cong [cong]:\n    \"\\<lbrakk> A=A';  \\<And>x. x \\<^bold>\\<in> A' \\<Longrightarrow> P(x) \\<longleftrightarrow> P'(x) \\<rbrakk>  \\<Longrightarrow> (\\<forall>x\\<^bold>\\<in>A. P(x)) \\<longleftrightarrow> (\\<forall>x\\<^bold>\\<in>A'. P'(x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A = A';\n     \\<And>x. x \\<^bold>\\<in> A' \\<Longrightarrow> P x = P' x\\<rbrakk>\n    \\<Longrightarrow> HBall A P = HBall A' P'", "by (simp add: HBall_def)"], ["", "lemma hballI [intro!]: \"(\\<And>x. x\\<^bold>\\<in>A \\<Longrightarrow> P x) \\<Longrightarrow> \\<forall>x\\<^bold>\\<in>A. P x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x. x \\<^bold>\\<in> A \\<Longrightarrow> P x) \\<Longrightarrow>\n    HBall A P", "by (simp add: HBall_def)"], ["", "lemma hbspec [dest?]: \"\\<forall>x\\<^bold>\\<in>A. P x \\<Longrightarrow> x\\<^bold>\\<in>A \\<Longrightarrow> P x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>HBall A P; x \\<^bold>\\<in> A\\<rbrakk> \\<Longrightarrow> P x", "by (simp add: HBall_def)"], ["", "lemma hballE [elim]: \"\\<forall>x\\<^bold>\\<in>A. P x \\<Longrightarrow> (P x \\<Longrightarrow> Q) \\<Longrightarrow> (x \\<^bold>\\<notin> A \\<Longrightarrow> Q) \\<Longrightarrow> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>HBall A P; P x \\<Longrightarrow> Q;\n     x \\<^bold>\\<notin> A \\<Longrightarrow> Q\\<rbrakk>\n    \\<Longrightarrow> Q", "by (unfold HBall_def) blast"], ["", "lemma hbex_cong [cong]:\n    \"\\<lbrakk> A=A';  \\<And>x. x \\<^bold>\\<in> A' \\<Longrightarrow> P(x) \\<longleftrightarrow> P'(x) \\<rbrakk>  \\<Longrightarrow> (\\<exists>x\\<^bold>\\<in>A. P(x)) \\<longleftrightarrow> (\\<exists>x\\<^bold>\\<in>A'. P'(x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A = A';\n     \\<And>x. x \\<^bold>\\<in> A' \\<Longrightarrow> P x = P' x\\<rbrakk>\n    \\<Longrightarrow> HBex A P = HBex A' P'", "by (simp add: HBex_def cong: conj_cong)"], ["", "lemma hbexI [intro]: \"P x \\<Longrightarrow> x\\<^bold>\\<in>A \\<Longrightarrow> \\<exists>x\\<^bold>\\<in>A. P x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P x; x \\<^bold>\\<in> A\\<rbrakk> \\<Longrightarrow> HBex A P", "by (unfold HBex_def) blast"], ["", "lemma rev_hbexI [intro?]: \"x\\<^bold>\\<in>A \\<Longrightarrow> P x \\<Longrightarrow> \\<exists>x\\<^bold>\\<in>A. P x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<^bold>\\<in> A; P x\\<rbrakk> \\<Longrightarrow> HBex A P", "by (unfold HBex_def) blast"], ["", "lemma bexCI: \"(\\<forall>x\\<^bold>\\<in>A. \\<not> P x \\<Longrightarrow> P a) \\<Longrightarrow> a\\<^bold>\\<in>A \\<Longrightarrow> \\<exists>x\\<^bold>\\<in>A. P x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x\\<^bold>\\<in>A. \\<not> P x \\<Longrightarrow> P a;\n     a \\<^bold>\\<in> A\\<rbrakk>\n    \\<Longrightarrow> HBex A P", "by (unfold HBex_def) blast"], ["", "lemma hbexE [elim!]: \"\\<exists>x\\<^bold>\\<in>A. P x \\<Longrightarrow> (\\<And>x. x\\<^bold>\\<in>A \\<Longrightarrow> P x \\<Longrightarrow> Q) \\<Longrightarrow> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>HBex A P;\n     \\<And>x.\n        \\<lbrakk>x \\<^bold>\\<in> A; P x\\<rbrakk>\n        \\<Longrightarrow> Q\\<rbrakk>\n    \\<Longrightarrow> Q", "by (unfold HBex_def) blast"], ["", "lemma hball_triv [simp]: \"(\\<forall>x\\<^bold>\\<in>A. P) = ((\\<exists>x. x\\<^bold>\\<in>A) \\<longrightarrow> P)\"\n  \\<comment> \\<open>trivial rewrite rule.\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x\\<^bold>\\<in>A. P) =\n    ((\\<exists>x. x \\<^bold>\\<in> A) \\<longrightarrow> P)", "by (simp add: HBall_def)"], ["", "lemma hbex_triv [simp]: \"(\\<exists>x\\<^bold>\\<in>A. P) = ((\\<exists>x. x\\<^bold>\\<in>A) \\<and> P)\"\n  \\<comment> \\<open>Dual form for existentials.\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>x\\<^bold>\\<in>A. P) =\n    ((\\<exists>x. x \\<^bold>\\<in> A) \\<and> P)", "by (simp add: HBex_def)"], ["", "lemma hbex_triv_one_point1 [simp]: \"(\\<exists>x\\<^bold>\\<in>A. x = a) = (a\\<^bold>\\<in>A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>x\\<^bold>\\<in>A. x = a) = (a \\<^bold>\\<in> A)", "by blast"], ["", "lemma hbex_triv_one_point2 [simp]: \"(\\<exists>x\\<^bold>\\<in>A. a = x) = (a\\<^bold>\\<in>A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HBex A ((=) a) = (a \\<^bold>\\<in> A)", "by blast"], ["", "lemma hbex_one_point1 [simp]: \"(\\<exists>x\\<^bold>\\<in>A. x = a \\<and> P x) = (a\\<^bold>\\<in>A \\<and> P a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>x\\<^bold>\\<in>A. x = a \\<and> P x) =\n    (a \\<^bold>\\<in> A \\<and> P a)", "by blast"], ["", "lemma hbex_one_point2 [simp]: \"(\\<exists>x\\<^bold>\\<in>A. a = x \\<and> P x) = (a\\<^bold>\\<in>A \\<and> P a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>x\\<^bold>\\<in>A. a = x \\<and> P x) =\n    (a \\<^bold>\\<in> A \\<and> P a)", "by blast"], ["", "lemma hball_one_point1 [simp]: \"(\\<forall>x\\<^bold>\\<in>A. x = a \\<longrightarrow> P x) = (a\\<^bold>\\<in>A \\<longrightarrow> P a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x\\<^bold>\\<in>A. x = a \\<longrightarrow> P x) =\n    (a \\<^bold>\\<in> A \\<longrightarrow> P a)", "by blast"], ["", "lemma hball_one_point2 [simp]: \"(\\<forall>x\\<^bold>\\<in>A. a = x \\<longrightarrow> P x) = (a\\<^bold>\\<in>A \\<longrightarrow> P a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x\\<^bold>\\<in>A. a = x \\<longrightarrow> P x) =\n    (a \\<^bold>\\<in> A \\<longrightarrow> P a)", "by blast"], ["", "lemma hball_conj_distrib:\n  \"(\\<forall>x\\<^bold>\\<in>A. P x \\<and> Q x) \\<longleftrightarrow> ((\\<forall>x\\<^bold>\\<in>A. P x) \\<and> (\\<forall>x\\<^bold>\\<in>A. Q x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x\\<^bold>\\<in>A. P x \\<and> Q x) =\n    (HBall A P \\<and> HBall A Q)", "by blast"], ["", "lemma hbex_disj_distrib:\n  \"(\\<exists>x\\<^bold>\\<in>A. P x \\<or> Q x) \\<longleftrightarrow> ((\\<exists>x\\<^bold>\\<in>A. P x) \\<or> (\\<exists>x\\<^bold>\\<in>A. Q x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>x\\<^bold>\\<in>A. P x \\<or> Q x) = (HBex A P \\<or> HBex A Q)", "by blast"], ["", "lemma hb_all_simps [simp, no_atp]:\n  \"\\<And>A P Q. (\\<forall>x \\<^bold>\\<in> A. P x \\<or> Q) \\<longleftrightarrow> ((\\<forall>x \\<^bold>\\<in> A. P x) \\<or> Q)\"\n  \"\\<And>A P Q. (\\<forall>x \\<^bold>\\<in> A. P \\<or> Q x) \\<longleftrightarrow> (P \\<or> (\\<forall>x \\<^bold>\\<in> A. Q x))\"\n  \"\\<And>A P Q. (\\<forall>x \\<^bold>\\<in> A. P \\<longrightarrow> Q x) \\<longleftrightarrow> (P \\<longrightarrow> (\\<forall>x \\<^bold>\\<in> A. Q x))\"\n  \"\\<And>A P Q. (\\<forall>x \\<^bold>\\<in> A. P x \\<longrightarrow> Q) \\<longleftrightarrow> ((\\<exists>x \\<^bold>\\<in> A. P x) \\<longrightarrow> Q)\"\n  \"\\<And>P. (\\<forall>x \\<^bold>\\<in> 0. P x) \\<longleftrightarrow> True\"\n  \"\\<And>a B P. (\\<forall>x \\<^bold>\\<in> B \\<triangleleft> a. P x) \\<longleftrightarrow> (P a \\<and> (\\<forall>x \\<^bold>\\<in> B. P x))\"\n  \"\\<And>P Q. (\\<forall>x \\<^bold>\\<in> HCollect Q A. P x) \\<longleftrightarrow> (\\<forall>x \\<^bold>\\<in> A. Q x \\<longrightarrow> P x)\"\n  \"\\<And>A P. (\\<not> (\\<forall>x \\<^bold>\\<in> A. P x)) \\<longleftrightarrow> (\\<exists>x \\<^bold>\\<in> A. \\<not> P x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (((\\<And>A P Q.\n          (\\<forall>x\\<^bold>\\<in>A. P x \\<or> Q) = (HBall A P \\<or> Q)) &&&\n      (\\<And>A P Q.\n          (\\<forall>x\\<^bold>\\<in>A. P \\<or> Q x) =\n          (P \\<or> HBall A Q))) &&&\n     (\\<And>A P Q.\n         (\\<forall>x\\<^bold>\\<in>A. P \\<longrightarrow> Q x) =\n         (P \\<longrightarrow> HBall A Q)) &&&\n     (\\<And>A P Q.\n         (\\<forall>x\\<^bold>\\<in>A. P x \\<longrightarrow> Q) =\n         (HBex A P \\<longrightarrow> Q))) &&&\n    ((\\<And>P. HBall 0 P = True) &&&\n     (\\<And>a B P.\n         HBall (B \\<triangleleft> a) P = (P a \\<and> HBall B P))) &&&\n    (\\<And>P Q.\n        HBall (HCollect Q A) P =\n        (\\<forall>x\\<^bold>\\<in>A. Q x \\<longrightarrow> P x)) &&&\n    (\\<And>A P. (\\<not> HBall A P) = (\\<exists>x\\<^bold>\\<in>A. \\<not> P x))", "by auto"], ["", "lemma hb_ex_simps [simp, no_atp]:\n  \"\\<And>A P Q. (\\<exists>x \\<^bold>\\<in> A. P x \\<and> Q) \\<longleftrightarrow> ((\\<exists>x \\<^bold>\\<in> A. P x) \\<and> Q)\"\n  \"\\<And>A P Q. (\\<exists>x \\<^bold>\\<in> A. P \\<and> Q x) \\<longleftrightarrow> (P \\<and> (\\<exists>x \\<^bold>\\<in> A. Q x))\"\n  \"\\<And>P. (\\<exists>x \\<^bold>\\<in> 0. P x) \\<longleftrightarrow> False\"\n  \"\\<And>a B P. (\\<exists>x \\<^bold>\\<in> B \\<triangleleft> a. P x) \\<longleftrightarrow> (P a \\<or> (\\<exists>x \\<^bold>\\<in> B. P x))\"\n  \"\\<And>P Q. (\\<exists>x \\<^bold>\\<in> HCollect Q A. P x) \\<longleftrightarrow> (\\<exists>x \\<^bold>\\<in> A. Q x \\<and> P x)\"\n  \"\\<And>A P. (\\<not>(\\<exists>x \\<^bold>\\<in> A. P x)) \\<longleftrightarrow> (\\<forall>x \\<^bold>\\<in> A. \\<not> P x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<And>A P Q.\n         (\\<exists>x\\<^bold>\\<in>A. P x \\<and> Q) = (HBex A P \\<and> Q)) &&&\n     (\\<And>A P Q.\n         (\\<exists>x\\<^bold>\\<in>A. P \\<and> Q x) = (P \\<and> HBex A Q)) &&&\n     (\\<And>P. HBex 0 P = False)) &&&\n    (\\<And>a B P. HBex (B \\<triangleleft> a) P = (P a \\<or> HBex B P)) &&&\n    (\\<And>P Q.\n        HBex (HCollect Q A) P =\n        (\\<exists>x\\<^bold>\\<in>A. Q x \\<and> P x)) &&&\n    (\\<And>A P. (\\<not> HBex A P) = (\\<forall>x\\<^bold>\\<in>A. \\<not> P x))", "by auto"], ["", "lemma le_HCollect_iff: \"A \\<le> \\<lbrace>x \\<^bold>\\<in> B. P x\\<rbrace> \\<longleftrightarrow> A \\<le> B \\<and> (\\<forall>x \\<^bold>\\<in> A. P x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A \\<le> HCollect P B) = (A \\<le> B \\<and> HBall A P)", "by blast"], ["", "section \\<open>Relations and Functions\\<close>"], ["", "definition is_hpair :: \"hf \\<Rightarrow> bool\"\n  where \"is_hpair z = (\\<exists>x y. z = \\<langle>x,y\\<rangle>)\""], ["", "definition hconverse :: \"hf \\<Rightarrow> hf\"\n  where \"hconverse(r) = \\<lbrace>z. w \\<^bold>\\<in> r, \\<exists>x y. w = \\<langle>x,y\\<rangle> \\<and> z = \\<langle>y,x\\<rangle>\\<rbrace>\""], ["", "definition hdomain :: \"hf \\<Rightarrow> hf\"\n  where \"hdomain(r) = \\<lbrace>x. w \\<^bold>\\<in> r, \\<exists>y. w = \\<langle>x,y\\<rangle>\\<rbrace>\""], ["", "definition hrange :: \"hf \\<Rightarrow> hf\"\n  where \"hrange(r) = hdomain(hconverse(r))\""], ["", "definition hrelation :: \"hf \\<Rightarrow> bool\"\n  where \"hrelation(r) = (\\<forall>z. z \\<^bold>\\<in> r \\<longrightarrow> is_hpair z)\""], ["", "definition hrestrict :: \"hf \\<Rightarrow> hf \\<Rightarrow> hf\"\n  \\<comment> \\<open>Restrict the relation r to the domain A\\<close>\n  where \"hrestrict r A = \\<lbrace>z \\<^bold>\\<in> r. \\<exists>x \\<^bold>\\<in> A. \\<exists>y. z = \\<langle>x,y\\<rangle>\\<rbrace>\""], ["", "definition nonrestrict :: \"hf \\<Rightarrow> hf \\<Rightarrow> hf\"\n  where \"nonrestrict r A = \\<lbrace>z \\<^bold>\\<in> r. \\<forall>x \\<^bold>\\<in> A. \\<forall>y. z \\<noteq> \\<langle>x,y\\<rangle>\\<rbrace>\""], ["", "definition hfunction :: \"hf \\<Rightarrow> bool\"\n  where \"hfunction(r) = (\\<forall>x y. \\<langle>x,y\\<rangle> \\<^bold>\\<in> r \\<longrightarrow> (\\<forall>y'. \\<langle>x,y'\\<rangle> \\<^bold>\\<in> r \\<longrightarrow> y=y'))\""], ["", "definition app :: \"hf \\<Rightarrow> hf \\<Rightarrow> hf\"\n  where \"app f x = (THE y. \\<langle>x, y\\<rangle> \\<^bold>\\<in> f)\""], ["", "lemma hrestrict_iff [iff]:\n    \"z \\<^bold>\\<in> hrestrict r A \\<longleftrightarrow> z \\<^bold>\\<in> r \\<and> (\\<exists> x y. z = \\<langle>x, y\\<rangle> \\<and> x \\<^bold>\\<in> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (z \\<^bold>\\<in> hrestrict r A) =\n    (z \\<^bold>\\<in> r \\<and>\n     (\\<exists>x y. z = \\<langle>x, y\\<rangle> \\<and> x \\<^bold>\\<in> A))", "by (auto simp: hrestrict_def)"], ["", "lemma hrelation_0 [simp]: \"hrelation 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hrelation 0", "by (force simp add: hrelation_def)"], ["", "lemma hrelation_restr [iff]: \"hrelation (hrestrict r x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hrelation (hrestrict r x)", "by (metis hrelation_def hrestrict_iff is_hpair_def)"], ["", "lemma hrelation_hunion [simp]: \"hrelation (f \\<squnion> g) \\<longleftrightarrow> hrelation f \\<and> hrelation g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hrelation (f \\<squnion> g) = (hrelation f \\<and> hrelation g)", "by (auto simp: hrelation_def)"], ["", "lemma hfunction_restr: \"hfunction r \\<Longrightarrow> hfunction (hrestrict r x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hfunction r \\<Longrightarrow> hfunction (hrestrict r x)", "by (auto simp: hfunction_def hrestrict_def)"], ["", "lemma hdomain_restr [simp]: \"hdomain (hrestrict r x) = hdomain r \\<sqinter> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hdomain (hrestrict r x) = hdomain r \\<sqinter> x", "by (force simp add: hdomain_def hrestrict_def)"], ["", "lemma hdomain_0 [simp]: \"hdomain 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hdomain 0 = 0", "by (force simp add: hdomain_def)"], ["", "lemma hdomain_ins [simp]: \"hdomain (r \\<triangleleft> \\<langle>x, y\\<rangle>) = hdomain r \\<triangleleft> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hdomain (r \\<triangleleft> \\<langle>x, y\\<rangle>) =\n    hdomain r \\<triangleleft> x", "by (force simp add: hdomain_def)"], ["", "lemma hdomain_hunion [simp]: \"hdomain (f \\<squnion> g) = hdomain f \\<squnion> hdomain g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hdomain (f \\<squnion> g) = hdomain f \\<squnion> hdomain g", "by (simp add: hdomain_def)"], ["", "lemma hdomain_not_mem [iff]: \"\\<langle>hdomain r, a\\<rangle> \\<^bold>\\<notin> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>hdomain r, a\\<rangle> \\<^bold>\\<notin> r", "by (metis hdomain_ins hinter_hinsert_right hmem_hinsert hmem_not_refl\n            hunion_hinsert_right sup_inf_absorb)"], ["", "lemma app_singleton [simp]: \"app \\<lbrace>\\<langle>x, y\\<rangle>\\<rbrace> x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. app \\<lbrace>\\<langle>x, y\\<rangle>\\<rbrace> x = y", "by (simp add: app_def)"], ["", "lemma app_equality: \"hfunction f \\<Longrightarrow> \\<langle>x, y\\<rangle> \\<^bold>\\<in> f \\<Longrightarrow> app f x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>hfunction f; \\<langle>x, y\\<rangle> \\<^bold>\\<in> f\\<rbrakk>\n    \\<Longrightarrow> app f x = y", "by (auto simp: app_def hfunction_def intro: the1I2)"], ["", "lemma app_ins2: \"x' \\<noteq> x \\<Longrightarrow> app (f \\<triangleleft> \\<langle>x, y\\<rangle>) x' = app f x'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x' \\<noteq> x \\<Longrightarrow>\n    app (f \\<triangleleft> \\<langle>x, y\\<rangle>) x' = app f x'", "by (simp add: app_def)"], ["", "lemma hfunction_0 [simp]: \"hfunction 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hfunction 0", "by (force simp add: hfunction_def)"], ["", "lemma hfunction_ins: \"hfunction f \\<Longrightarrow> x \\<^bold>\\<notin> hdomain f \\<Longrightarrow> hfunction (f\\<triangleleft> \\<langle>x, y\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>hfunction f; x \\<^bold>\\<notin> hdomain f\\<rbrakk>\n    \\<Longrightarrow> hfunction (f \\<triangleleft> \\<langle>x, y\\<rangle>)", "by (auto simp: hfunction_def hdomain_def)"], ["", "lemma hdomainI: \"\\<langle>x, y\\<rangle> \\<^bold>\\<in> f \\<Longrightarrow> x \\<^bold>\\<in> hdomain f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>x, y\\<rangle> \\<^bold>\\<in> f \\<Longrightarrow>\n    x \\<^bold>\\<in> hdomain f", "by (auto simp: hdomain_def)"], ["", "lemma hfunction_hunion: \"hdomain f \\<sqinter> hdomain g = 0\n            \\<Longrightarrow> hfunction (f \\<squnion> g) \\<longleftrightarrow> hfunction f \\<and> hfunction g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hdomain f \\<sqinter> hdomain g = 0 \\<Longrightarrow>\n    hfunction (f \\<squnion> g) = (hfunction f \\<and> hfunction g)", "by (auto simp: hfunction_def) (metis hdomainI hinter_iff hmem_hempty)+"], ["", "lemma app_hrestrict [simp]: \"x \\<^bold>\\<in> A \\<Longrightarrow> app (hrestrict f A) x = app f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<^bold>\\<in> A \\<Longrightarrow> app (hrestrict f A) x = app f x", "by (simp add: hrestrict_def app_def)"], ["", "section \\<open>Operations on families of sets\\<close>"], ["", "definition HLambda :: \"hf \\<Rightarrow> (hf \\<Rightarrow> hf) \\<Rightarrow> hf\"\n  where \"HLambda A b = RepFun A (\\<lambda>x. \\<langle>x, b x\\<rangle>)\""], ["", "definition HSigma :: \"hf \\<Rightarrow> (hf \\<Rightarrow> hf) \\<Rightarrow> hf\"\n  where \"HSigma A B = (\\<Squnion>x\\<^bold>\\<in>A. \\<Squnion>y\\<^bold>\\<in>B(x). \\<lbrace>\\<langle>x,y\\<rangle>\\<rbrace>)\""], ["", "definition HPi :: \"hf \\<Rightarrow> (hf \\<Rightarrow> hf) \\<Rightarrow> hf\"\n  where \"HPi A B = \\<lbrace> f \\<^bold>\\<in> HPow(HSigma A B). A \\<le> hdomain(f) \\<and> hfunction(f)\\<rbrace>\""], ["", "syntax (ASCII)\n  \"_PROD\"     :: \"[pttrn, hf, hf] \\<Rightarrow> hf\"        (\"(3PROD _<:_./ _)\" 10)\n  \"_SUM\"      :: \"[pttrn, hf, hf] \\<Rightarrow> hf\"        (\"(3SUM _<:_./ _)\" 10)\n  \"_lam\"      :: \"[pttrn, hf, hf] \\<Rightarrow> hf\"        (\"(3lam _<:_./ _)\" 10)"], ["", "syntax\n  \"_PROD\"     :: \"[pttrn, hf, hf] \\<Rightarrow> hf\"        (\"(3\\<Prod>_\\<^bold>\\<in>_./ _)\" 10)\n  \"_SUM\"      :: \"[pttrn, hf, hf] \\<Rightarrow> hf\"        (\"(3\\<Sum>_\\<^bold>\\<in>_./ _)\" 10)\n  \"_lam\"      :: \"[pttrn, hf, hf] \\<Rightarrow> hf\"        (\"(3\\<lambda>_\\<^bold>\\<in>_./ _)\" 10)"], ["", "translations\n  \"\\<Prod>x\\<^bold>\\<in>A. B\" \\<rightleftharpoons> \"CONST HPi A (\\<lambda>x. B)\"\n  \"\\<Sum>x\\<^bold>\\<in>A. B\" \\<rightleftharpoons> \"CONST HSigma A (\\<lambda>x. B)\"\n  \"\\<lambda>x\\<^bold>\\<in>A. f\"  \\<rightleftharpoons> \"CONST HLambda A (\\<lambda>x. f)\""], ["", "subsection \\<open>Rules for Unions and Intersections of families\\<close>"], ["", "lemma HUN_iff [simp]: \"b \\<^bold>\\<in> (\\<Squnion>x\\<^bold>\\<in>A. B(x)) \\<longleftrightarrow> (\\<exists>x\\<^bold>\\<in>A. b \\<^bold>\\<in> B(x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b \\<^bold>\\<in> \\<Squnion>RepFun A B) =\n    (\\<exists>x\\<^bold>\\<in>A. b \\<^bold>\\<in> B x)", "by auto"], ["", "(*The order of the premises presupposes that A is rigid; b may be flexible*)"], ["", "lemma HUN_I: \"\\<lbrakk> a \\<^bold>\\<in> A;  b \\<^bold>\\<in> B(a) \\<rbrakk>  \\<Longrightarrow> b \\<^bold>\\<in> (\\<Squnion>x\\<^bold>\\<in>A. B(x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<^bold>\\<in> A; b \\<^bold>\\<in> B a\\<rbrakk>\n    \\<Longrightarrow> b \\<^bold>\\<in> \\<Squnion>RepFun A B", "by auto"], ["", "lemma HUN_E [elim!]: assumes \"b \\<^bold>\\<in> (\\<Squnion>x\\<^bold>\\<in>A. B(x))\" obtains x where \"x \\<^bold>\\<in> A\"  \"b \\<^bold>\\<in> B(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<^bold>\\<in> A; b \\<^bold>\\<in> B x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  b \\<^bold>\\<in> \\<Squnion>RepFun A B\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<^bold>\\<in> A; b \\<^bold>\\<in> B x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["", "lemma HINT_iff: \"b \\<^bold>\\<in> (\\<Sqinter>x\\<^bold>\\<in>A. B(x)) \\<longleftrightarrow> (\\<forall>x\\<^bold>\\<in>A. b \\<^bold>\\<in> B(x)) \\<and> A\\<noteq>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b \\<^bold>\\<in> \\<Sqinter>RepFun A B) =\n    ((\\<forall>x\\<^bold>\\<in>A. b \\<^bold>\\<in> B x) \\<and> A \\<noteq> 0)", "by (simp add: HInter_def HBall_def) (metis foundation hmem_hempty)"], ["", "lemma HINT_I: \"\\<lbrakk> \\<And>x. x \\<^bold>\\<in> A \\<Longrightarrow> b \\<^bold>\\<in> B(x);  A\\<noteq>0 \\<rbrakk> \\<Longrightarrow> b \\<^bold>\\<in> (\\<Sqinter>x\\<^bold>\\<in>A. B(x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x.\n                x \\<^bold>\\<in> A \\<Longrightarrow> b \\<^bold>\\<in> B x;\n     A \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> b \\<^bold>\\<in> \\<Sqinter>RepFun A B", "by (simp add: HINT_iff)"], ["", "lemma HINT_E: \"\\<lbrakk> b \\<^bold>\\<in> (\\<Sqinter>x\\<^bold>\\<in>A. B(x));  a \\<^bold>\\<in> A \\<rbrakk> \\<Longrightarrow> b \\<^bold>\\<in> B(a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>b \\<^bold>\\<in> \\<Sqinter>RepFun A B;\n     a \\<^bold>\\<in> A\\<rbrakk>\n    \\<Longrightarrow> b \\<^bold>\\<in> B a", "by (auto simp: HINT_iff)"], ["", "subsection \\<open>Generalized Cartesian product\\<close>"], ["", "lemma HSigma_iff [simp]: \"\\<langle>a,b\\<rangle> \\<^bold>\\<in> HSigma A B \\<longleftrightarrow> a \\<^bold>\\<in> A \\<and> b \\<^bold>\\<in> B(a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<langle>a, b\\<rangle> \\<^bold>\\<in> HSigma A B) =\n    (a \\<^bold>\\<in> A \\<and> b \\<^bold>\\<in> B a)", "by (force simp add: HSigma_def)"], ["", "lemma HSigmaI [intro!]: \"\\<lbrakk> a \\<^bold>\\<in> A;  b \\<^bold>\\<in> B(a) \\<rbrakk>  \\<Longrightarrow> \\<langle>a,b\\<rangle> \\<^bold>\\<in> HSigma A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<^bold>\\<in> A; b \\<^bold>\\<in> B a\\<rbrakk>\n    \\<Longrightarrow> \\<langle>a, b\\<rangle> \\<^bold>\\<in> HSigma A B", "by simp"], ["", "lemmas HSigmaD1 = HSigma_iff [THEN iffD1, THEN conjunct1]"], ["", "lemmas HSigmaD2 = HSigma_iff [THEN iffD1, THEN conjunct2]"], ["", "text \\<open>The general elimination rule\\<close>"], ["", "lemma HSigmaE [elim!]:\n  assumes \"c \\<^bold>\\<in> HSigma A B\"\n  obtains x y where \"x \\<^bold>\\<in> A\" \"y \\<^bold>\\<in> B(x)\" \"c=\\<langle>x,y\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        \\<lbrakk>x \\<^bold>\\<in> A; y \\<^bold>\\<in> B x;\n         c = \\<langle>x, y\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  c \\<^bold>\\<in> HSigma A B\n\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        \\<lbrakk>x \\<^bold>\\<in> A; y \\<^bold>\\<in> B x;\n         c = \\<langle>x, y\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (force simp add: HSigma_def)"], ["", "lemma HSigmaE2 [elim!]:\n  assumes \"\\<langle>a,b\\<rangle> \\<^bold>\\<in> HSigma A B\" obtains \"a \\<^bold>\\<in> A\" and \"b \\<^bold>\\<in> B(a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>a \\<^bold>\\<in> A; b \\<^bold>\\<in> B a\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  \\<langle>a, b\\<rangle> \\<^bold>\\<in> HSigma A B\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>a \\<^bold>\\<in> A; b \\<^bold>\\<in> B a\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["", "lemma HSigma_empty1 [simp]: \"HSigma 0 B = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HSigma 0 B = 0", "by blast"], ["", "instantiation hf :: times\nbegin"], ["", "definition \"A * B = HSigma A (\\<lambda>x. B)\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(hf, times_class)", ".."], ["", "end"], ["", "lemma times_iff [simp]: \"\\<langle>a,b\\<rangle> \\<^bold>\\<in> A * B \\<longleftrightarrow> a \\<^bold>\\<in> A \\<and> b \\<^bold>\\<in> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<langle>a, b\\<rangle> \\<^bold>\\<in> A * B) =\n    (a \\<^bold>\\<in> A \\<and> b \\<^bold>\\<in> B)", "by (simp add: times_hf_def)"], ["", "lemma timesI [intro!]: \"\\<lbrakk> a \\<^bold>\\<in> A;  b \\<^bold>\\<in> B \\<rbrakk>  \\<Longrightarrow> \\<langle>a,b\\<rangle> \\<^bold>\\<in> A * B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<^bold>\\<in> A; b \\<^bold>\\<in> B\\<rbrakk>\n    \\<Longrightarrow> \\<langle>a, b\\<rangle> \\<^bold>\\<in> A * B", "by simp"], ["", "lemmas timesD1 = times_iff [THEN iffD1, THEN conjunct1]"], ["", "lemmas timesD2 = times_iff [THEN iffD1, THEN conjunct2]"], ["", "text \\<open>The general elimination rule\\<close>"], ["", "lemma timesE [elim!]:\n  assumes c: \"c \\<^bold>\\<in> A * B\"\n  obtains x y where \"x \\<^bold>\\<in> A\" \"y \\<^bold>\\<in> B\" \"c=\\<langle>x,y\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        \\<lbrakk>x \\<^bold>\\<in> A; y \\<^bold>\\<in> B;\n         c = \\<langle>x, y\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using c"], ["proof (prove)\nusing this:\n  c \\<^bold>\\<in> A * B\n\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        \\<lbrakk>x \\<^bold>\\<in> A; y \\<^bold>\\<in> B;\n         c = \\<langle>x, y\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: times_hf_def)"], ["", "text \\<open>...and a specific one\\<close>"], ["", "lemma timesE2 [elim!]:\n  assumes \"\\<langle>a,b\\<rangle> \\<^bold>\\<in> A * B\" obtains \"a \\<^bold>\\<in> A\" and \"b \\<^bold>\\<in> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>a \\<^bold>\\<in> A; b \\<^bold>\\<in> B\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  \\<langle>a, b\\<rangle> \\<^bold>\\<in> A * B\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>a \\<^bold>\\<in> A; b \\<^bold>\\<in> B\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["", "lemma times_empty1 [simp]: \"0 * B = (0::hf)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 * B = 0", "by auto"], ["", "lemma times_empty2 [simp]: \"A*0 = (0::hf)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A * 0 = 0", "by blast"], ["", "lemma times_empty_iff: \"A*B=0 \\<longleftrightarrow> A=0 \\<or> B=(0::hf)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A * B = 0) = (A = 0 \\<or> B = 0)", "by (auto simp: times_hf_def hf_ext)"], ["", "instantiation hf :: mult_zero\nbegin"], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(hf, mult_zero_class)", "by standard auto"], ["", "end"], ["", "section \\<open>Disjoint Sum\\<close>"], ["", "instantiation hf :: zero_neq_one\nbegin"], ["", "definition One_hf_def: \"1 = \\<lbrace>0\\<rbrace>\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(hf, zero_neq_one_class)", "by standard (auto simp: One_hf_def)"], ["", "end"], ["", "instantiation hf :: plus\nbegin"], ["", "definition \"A + B = (\\<lbrace>0\\<rbrace> * A) \\<squnion> (\\<lbrace>1\\<rbrace> * B)\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(hf, plus_class)", ".."], ["", "end"], ["", "definition Inl :: \"hf\\<Rightarrow>hf\" where\n     \"Inl(a) \\<equiv> \\<langle>0,a\\<rangle>\""], ["", "definition Inr :: \"hf\\<Rightarrow>hf\" where\n     \"Inr(b) \\<equiv> \\<langle>1,b\\<rangle>\""], ["", "lemmas sum_defs = plus_hf_def Inl_def Inr_def"], ["", "lemma Inl_nonzero [simp]:\"Inl x \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HF.Inl x \\<noteq> 0", "by (metis Inl_def hpair_nonzero)"], ["", "lemma Inr_nonzero [simp]:\"Inr x \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HF.Inr x \\<noteq> 0", "by (metis Inr_def hpair_nonzero)"], ["", "text\\<open>Introduction rules for the injections (as equivalences)\\<close>"], ["", "lemma Inl_in_sum_iff [iff]: \"Inl(a) \\<^bold>\\<in> A+B \\<longleftrightarrow> a \\<^bold>\\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (HF.Inl a \\<^bold>\\<in> A + B) = (a \\<^bold>\\<in> A)", "by (auto simp: sum_defs)"], ["", "lemma Inr_in_sum_iff [iff]: \"Inr(b) \\<^bold>\\<in> A+B \\<longleftrightarrow> b \\<^bold>\\<in> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (HF.Inr b \\<^bold>\\<in> A + B) = (b \\<^bold>\\<in> B)", "by (auto simp: sum_defs)"], ["", "text \\<open>Elimination rule\\<close>"], ["", "lemma sumE [elim!]:\n  assumes u: \"u \\<^bold>\\<in> A+B\"\n  obtains x where \"x \\<^bold>\\<in> A\" \"u=Inl(x)\" | y where \"y \\<^bold>\\<in> B\" \"u=Inr(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x.\n                \\<lbrakk>x \\<^bold>\\<in> A; u = HF.Inl x\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<And>y.\n        \\<lbrakk>y \\<^bold>\\<in> B; u = HF.Inr y\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using u"], ["proof (prove)\nusing this:\n  u \\<^bold>\\<in> A + B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x.\n                \\<lbrakk>x \\<^bold>\\<in> A; u = HF.Inl x\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<And>y.\n        \\<lbrakk>y \\<^bold>\\<in> B; u = HF.Inr y\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by (auto simp: sum_defs)"], ["", "text \\<open>Injection and freeness equivalences, for rewriting\\<close>"], ["", "lemma Inl_iff [iff]: \"Inl(a)=Inl(b) \\<longleftrightarrow> a=b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (HF.Inl a = HF.Inl b) = (a = b)", "by (simp add: sum_defs)"], ["", "lemma Inr_iff [iff]: \"Inr(a)=Inr(b) \\<longleftrightarrow> a=b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (HF.Inr a = HF.Inr b) = (a = b)", "by (simp add: sum_defs)"], ["", "lemma Inl_Inr_iff [iff]: \"Inl(a)=Inr(b) \\<longleftrightarrow> False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (HF.Inl a = HF.Inr b) = False", "by (simp add: sum_defs)"], ["", "lemma Inr_Inl_iff [iff]: \"Inr(b)=Inl(a) \\<longleftrightarrow> False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (HF.Inr b = HF.Inl a) = False", "by (simp add: sum_defs)"], ["", "lemma sum_empty [simp]: \"0+0 = (0::hf)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 + 0 = 0", "by (auto simp: sum_defs)"], ["", "lemma sum_iff: \"u \\<^bold>\\<in> A+B \\<longleftrightarrow> (\\<exists>x. x \\<^bold>\\<in> A \\<and> u=Inl(x)) \\<or> (\\<exists>y. y \\<^bold>\\<in> B \\<and> u=Inr(y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u \\<^bold>\\<in> A + B) =\n    ((\\<exists>x. x \\<^bold>\\<in> A \\<and> u = HF.Inl x) \\<or>\n     (\\<exists>y. y \\<^bold>\\<in> B \\<and> u = HF.Inr y))", "by blast"], ["", "lemma sum_subset_iff:\n  fixes A :: hf shows \"A+B \\<le> C+D \\<longleftrightarrow> A\\<le>C \\<and> B\\<le>D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A + B \\<le> C + D) = (A \\<le> C \\<and> B \\<le> D)", "by blast"], ["", "lemma sum_equal_iff:\n  fixes A :: hf shows \"A+B = C+D \\<longleftrightarrow> A=C \\<and> B=D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A + B = C + D) = (A = C \\<and> B = D)", "by (auto simp: hf_ext sum_subset_iff)"], ["", "definition is_hsum :: \"hf \\<Rightarrow> bool\"\n  where \"is_hsum z = (\\<exists>x. z = Inl x \\<or> z = Inr x)\""], ["", "definition sum_case  :: \"(hf \\<Rightarrow> 'a) \\<Rightarrow> (hf \\<Rightarrow> 'a) \\<Rightarrow> hf \\<Rightarrow> 'a\"\n  where\n  \"sum_case f g a \\<equiv>\n    THE z. (\\<forall>x. a = Inl x \\<longrightarrow> z = f x) \\<and> (\\<forall>y. a = Inr y \\<longrightarrow> z = g y) \\<and> (\\<not> is_hsum a \\<longrightarrow> z = undefined)\""], ["", "lemma sum_case_Inl [simp]: \"sum_case f g (Inl x) = f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_case f g (HF.Inl x) = f x", "by (simp add: sum_case_def is_hsum_def)"], ["", "lemma sum_case_Inr [simp]: \"sum_case f g (Inr y) = g y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_case f g (HF.Inr y) = g y", "by (simp add: sum_case_def is_hsum_def)"], ["", "lemma sum_case_non [simp]: \"\\<not> is_hsum a \\<Longrightarrow> sum_case f g a = undefined\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> is_hsum a \\<Longrightarrow> sum_case f g a = undefined", "by (simp add: sum_case_def is_hsum_def)"], ["", "lemma is_hsum_cases: \"(\\<exists>x. z = Inl x \\<or> z = Inr x) \\<or> \\<not> is_hsum z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>x. z = HF.Inl x \\<or> z = HF.Inr x) \\<or> \\<not> is_hsum z", "by (auto simp: is_hsum_def)"], ["", "lemma sum_case_split:\n  \"P (sum_case f g a) \\<longleftrightarrow> (\\<forall>x. a = Inl x \\<longrightarrow> P(f x)) \\<and> (\\<forall>y. a = Inr y \\<longrightarrow> P(g y)) \\<and> (\\<not> is_hsum a \\<longrightarrow> P undefined)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (sum_case f g a) =\n    ((\\<forall>x. a = HF.Inl x \\<longrightarrow> P (f x)) \\<and>\n     (\\<forall>y. a = HF.Inr y \\<longrightarrow> P (g y)) \\<and>\n     (\\<not> is_hsum a \\<longrightarrow> P undefined))", "by (cases \"is_hsum a\") (auto simp: is_hsum_def)"], ["", "lemma sum_case_split_asm:\n  \"P (sum_case f g a) \\<longleftrightarrow> \\<not> ((\\<exists>x. a = Inl x \\<and> \\<not> P(f x)) \\<or> (\\<exists>y. a = Inr y \\<and> \\<not> P(g y)) \\<or> (\\<not> is_hsum a \\<and> \\<not> P undefined))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (sum_case f g a) =\n    (\\<not> ((\\<exists>x. a = HF.Inl x \\<and> \\<not> P (f x)) \\<or>\n             (\\<exists>y. a = HF.Inr y \\<and> \\<not> P (g y)) \\<or>\n             \\<not> is_hsum a \\<and> \\<not> P undefined))", "by (auto simp add: sum_case_split)"], ["", "end"]]}