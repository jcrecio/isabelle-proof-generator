{"file_name": "/home/qj213/afp-2021-10-22/thys/HereditarilyFinite/Finitary.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/HereditarilyFinite", "problem_names": ["lemma hf_of_eq_iff [simp]: \"hf_of x = hf_of y \\<longleftrightarrow> x=y\"", "lemma [simp]: fixes x :: \"'a list\" shows \"hf_of x = hf_of y \\<Longrightarrow> x = y\""], "translations": [["", "lemma hf_of_eq_iff [simp]: \"hf_of x = hf_of y \\<longleftrightarrow> x=y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (hf_of x = hf_of y) = (x = y)", "using inj"], ["proof (prove)\nusing this:\n  inj hf_of\n\ngoal (1 subgoal):\n 1. (hf_of x = hf_of y) = (x = y)", "by (auto simp: inj_on_def)"], ["", "end"], ["", "instantiation unit :: finitary\nbegin"], ["", "definition hf_of_unit_def: \"hf_of (u::unit) \\<equiv> 0\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(unit, finitary_class)", "by intro_classes (auto simp: inj_on_def hf_of_unit_def)"], ["", "end"], ["", "instantiation bool :: finitary\nbegin"], ["", "definition hf_of_bool_def: \"hf_of b \\<equiv> if b then 1 else 0\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(bool, finitary_class)", "by intro_classes (auto simp: inj_on_def hf_of_bool_def)"], ["", "end"], ["", "instantiation nat :: finitary\nbegin"], ["", "definition hf_of_nat_def: \"hf_of \\<equiv> ord_of\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(nat, finitary_class)", "by intro_classes (auto simp: inj_on_def hf_of_nat_def)"], ["", "end"], ["", "instantiation int :: finitary\nbegin"], ["", "definition hf_of_int_def: \n    \"hf_of i \\<equiv> if i\\<ge>(0::int) then \\<langle>0, hf_of (nat i)\\<rangle> else \\<langle>1, hf_of (nat (-i))\\<rangle>\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(int, finitary_class)", "by intro_classes (auto simp: inj_on_def hf_of_int_def)"], ["", "end"], ["", "text \\<open>Strings are char lists, and are not considered separately.\\<close>"], ["", "instantiation char :: finitary\nbegin"], ["", "definition hf_of_char_def: \n    \"hf_of x \\<equiv> hf_of (of_char x :: nat)\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(char, finitary_class)", "by standard (auto simp: inj_on_def hf_of_char_def)"], ["", "end"], ["", "instantiation prod :: (finitary,finitary) finitary\nbegin"], ["", "definition hf_of_prod_def: \n    \"hf_of \\<equiv> \\<lambda>(x,y). \\<langle>hf_of x, hf_of y\\<rangle>\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a \\<times> 'b, finitary_class)", "by intro_classes (auto simp: inj_on_def hf_of_prod_def)"], ["", "end"], ["", "instantiation sum :: (finitary,finitary) finitary\nbegin"], ["", "definition hf_of_sum_def: \n    \"hf_of \\<equiv> case_sum (HF.Inl o hf_of) (HF.Inr o hf_of)\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a + 'b, finitary_class)", "by intro_classes (auto simp: inj_on_def hf_of_sum_def split: sum.split_asm)"], ["", "end"], ["", "instantiation option :: (finitary) finitary\nbegin"], ["", "definition hf_of_option_def: \n    \"hf_of \\<equiv> case_option 0 (\\<lambda>x. \\<lbrace>hf_of x\\<rbrace>)\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a option, finitary_class)", "by intro_classes (auto simp: inj_on_def hf_of_option_def split: option.split_asm)"], ["", "end"], ["", "instantiation list :: (finitary) finitary\nbegin"], ["", "primrec hf_of_list where\n    \"hf_of_list Nil = 0\"\n  | \"hf_of_list (x#xs) = \\<langle>hf_of x, hf_of_list xs\\<rangle>\""], ["", "lemma [simp]: fixes x :: \"'a list\" shows \"hf_of x = hf_of y \\<Longrightarrow> x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hf_of x = hf_of y \\<Longrightarrow> x = y", "apply (induct x arbitrary: y, auto)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y. hf_of y = 0 \\<Longrightarrow> [] = y\n 2. \\<And>a x y.\n       \\<lbrakk>\\<And>y. hf_of x = hf_of y \\<Longrightarrow> x = y;\n        \\<langle>hf_of a, hf_of x\\<rangle> = hf_of y\\<rbrakk>\n       \\<Longrightarrow> a # x = y", "apply (metis (mono_tags) hf_of_list.simps(2) hpair_nonzero neq_Nil_conv)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a x y.\n       \\<lbrakk>\\<And>y. hf_of x = hf_of y \\<Longrightarrow> x = y;\n        \\<langle>hf_of a, hf_of x\\<rangle> = hf_of y\\<rbrakk>\n       \\<Longrightarrow> a # x = y", "apply (rename_tac y)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a x y.\n       \\<lbrakk>\\<And>y. hf_of x = hf_of y \\<Longrightarrow> x = y;\n        \\<langle>hf_of a, hf_of x\\<rangle> = hf_of y\\<rbrakk>\n       \\<Longrightarrow> a # x = y", "apply (case_tac y, auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a list, finitary_class)", "by intro_classes (auto simp: inj_on_def)"], ["", "end"], ["", "end"]]}