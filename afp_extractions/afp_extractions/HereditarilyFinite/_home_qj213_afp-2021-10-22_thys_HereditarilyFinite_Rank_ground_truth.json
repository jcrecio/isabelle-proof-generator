{"file_name": "/home/qj213/afp-2021-10-22/thys/HereditarilyFinite/Rank.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/HereditarilyFinite", "problem_names": ["lemma Vset_0 [simp]: \"Vset 0 = 0\"", "lemma Vset_succ [simp]: \"Ord k \\<Longrightarrow> Vset (succ k) = HPow (Vset k)\"", "lemma Vset_non [simp]: \"\\<not> Ord x \\<Longrightarrow> Vset x = 0\"", "lemma Vset_mono_strict:\n  assumes \"Ord m\" \"n \\<^bold>\\<in> m\" shows \"Vset n < Vset m\"", "lemma Vset_mono: \"\\<lbrakk>Ord m; n \\<le> m\\<rbrakk> \\<Longrightarrow> Vset n \\<le> Vset m\"", "lemma Vset_Transset: \"Ord m \\<Longrightarrow> Transset (Vset m)\"", "lemma Ord_sup [simp]: \"Ord k \\<Longrightarrow> Ord l \\<Longrightarrow> Ord (k \\<squnion> l)\"", "lemma Ord_inf [simp]: \"Ord k \\<Longrightarrow> Ord l \\<Longrightarrow> Ord (k \\<sqinter> l)\"", "lemma Vset_universal: \"\\<exists>n. Ord n \\<and> x \\<^bold>\\<in> Vset n\"", "lemma Ord_minimal:\n   \"Ord k \\<Longrightarrow> P k \\<Longrightarrow> \\<exists>n. Ord n \\<and> P n \\<and> (\\<forall>m. Ord m \\<and> P m \\<longrightarrow> n \\<le> m)\"", "lemma OrdLeastI: \"Ord k \\<Longrightarrow> P k \\<Longrightarrow> P(LEAST n. Ord n \\<and> P n)\"", "lemma OrdLeast_le: \"Ord k \\<Longrightarrow> P k \\<Longrightarrow> (LEAST n. Ord n \\<and> P n) \\<le> k\"", "lemma OrdLeast_Ord:\n  assumes \"Ord k\" \"P k\"shows \"Ord(LEAST n. Ord n \\<and> P n)\"", "lemma [simp]: \"rank 0 = 0\"", "lemma in_Vset_rank: \"a \\<^bold>\\<in> Vset(succ(rank a))\"", "lemma Ord_rank [simp]: \"Ord (rank a)\"", "lemma le_Vset_rank: \"a \\<le> Vset(rank a)\"", "lemma VsetI: \"succ(rank a) \\<le> k \\<Longrightarrow> Ord k \\<Longrightarrow> a \\<^bold>\\<in> Vset k\"", "lemma Vset_succ_rank_le: \"Ord k \\<Longrightarrow> a \\<^bold>\\<in> Vset (succ k) \\<Longrightarrow> rank a \\<le> k\"", "lemma Vset_rank_lt: assumes a: \"a \\<^bold>\\<in> Vset k\" shows \"rank a < k\"", "theorem rank_lt: \"a \\<^bold>\\<in> b \\<Longrightarrow> rank(a) < rank(b)\"", "lemma rank_mono: \"x \\<le> y \\<Longrightarrow> rank x \\<le> rank y\"", "lemma rank_sup [simp]: \"rank (a \\<squnion> b) = rank a \\<squnion> rank b\"", "lemma rank_singleton [simp]: \"rank \\<lbrace>a\\<rbrace> = succ(rank a)\"", "lemma rank_hinsert [simp]: \"rank (b \\<triangleleft> a) = rank b \\<squnion> succ(rank a)\"", "lemma eclose_facts:\n  shows Transset_eclose: \"Transset (eclose X)\"\n   and  le_eclose: \"X \\<le> eclose X\"", "lemma eclose_minimal:\n  assumes Y: \"Transset Y\" \"X\\<le>Y\" shows \"eclose X \\<le> Y\"", "lemma eclose_0 [simp]: \"eclose 0 = 0\"", "lemma eclose_sup [simp]: \"eclose (a \\<squnion> b) = eclose a \\<squnion> eclose b\"", "lemma eclose_singleton [simp]: \"eclose \\<lbrace>a\\<rbrace> = (eclose a) \\<triangleleft> a\"", "lemma eclose_hinsert [simp]: \"eclose (b \\<triangleleft> a) = eclose b \\<squnion> (eclose a \\<triangleleft> a)\"", "lemma eclose_succ [simp]: \"eclose (succ a) = eclose a \\<triangleleft> a\"", "lemma fst_in_eclose [simp]: \"x \\<^bold>\\<in> eclose \\<langle>x, y\\<rangle>\"", "lemma snd_in_eclose [simp]: \"y \\<^bold>\\<in> eclose \\<langle>x, y\\<rangle>\"", "lemma rank_eclose [simp]: \"rank (eclose x) = rank x\"", "lemma hmem_induct [case_names step]:\n  assumes ih: \"\\<And>x. (\\<And>y. y \\<^bold>\\<in> x \\<Longrightarrow> P y) \\<Longrightarrow> P x\" shows \"P x\"", "lemma wf_hmem_rel: \"wf hmem_rel\"", "lemma hmem_eclose_le: \"y \\<^bold>\\<in> x \\<Longrightarrow> eclose y \\<le> eclose x\"", "lemma hmem_rel_iff_hmem_eclose: \"(x,y) \\<in> hmem_rel \\<longleftrightarrow> x \\<^bold>\\<in> eclose y\"", "lemma hmemrec: \"hmemrec G a = G (ecut (hmemrec G) a) a\"", "lemma def_hmemrec: \"f \\<equiv> hmemrec G \\<Longrightarrow> f a = G (ecut (hmemrec G) a) a\"", "lemma ecut_apply: \"y \\<^bold>\\<in> eclose x \\<Longrightarrow> ecut f x y = f y\"", "lemma RepFun_ecut: \"y \\<le> z \\<Longrightarrow> RepFun y (ecut f z) = RepFun y f\"", "lemma hmem_rel_induct [case_names step]:\n  assumes ih: \"\\<And>x. (\\<And>y. (y,x) \\<in> hmem_rel \\<Longrightarrow> P y) \\<Longrightarrow> P x\" shows \"P x\"", "lemma rank_HUnion_less:  \"x \\<noteq> 0 \\<Longrightarrow> rank (\\<Squnion>x) < rank x\""], "translations": [["", "lemma Vset_0 [simp]: \"Vset 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Vset 0 = 0", "by (simp add: Vset_def)"], ["", "lemma Vset_succ [simp]: \"Ord k \\<Longrightarrow> Vset (succ k) = HPow (Vset k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ord k \\<Longrightarrow> Vset (succ k) = HPow (Vset k)", "by (simp add: Vset_def)"], ["", "lemma Vset_non [simp]: \"\\<not> Ord x \\<Longrightarrow> Vset x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> Ord x \\<Longrightarrow> Vset x = 0", "by (simp add: Vset_def)"], ["", "text \\<open>Theorem 4.2(a)\\<close>"], ["", "lemma Vset_mono_strict:\n  assumes \"Ord m\" \"n \\<^bold>\\<in> m\" shows \"Vset n < Vset m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Vset n < Vset m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Vset n < Vset m", "have n: \"Ord n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ord n", "by (metis Ord_in_Ord assms)"], ["proof (state)\nthis:\n  Ord n\n\ngoal (1 subgoal):\n 1. Vset n < Vset m", "hence \"Ord m \\<Longrightarrow> n \\<^bold>\\<in> m \\<Longrightarrow> Vset n < Vset m\""], ["proof (prove)\nusing this:\n  Ord n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Ord m; n \\<^bold>\\<in> m\\<rbrakk>\n    \\<Longrightarrow> Vset n < Vset m", "proof (induct n arbitrary: m rule: Ord_induct2)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>m.\n       \\<lbrakk>Ord m; 0 \\<^bold>\\<in> m\\<rbrakk>\n       \\<Longrightarrow> Vset 0 < Vset m\n 2. \\<And>k m.\n       \\<lbrakk>Ord k;\n        \\<And>m.\n           \\<lbrakk>Ord m; k \\<^bold>\\<in> m\\<rbrakk>\n           \\<Longrightarrow> Vset k < Vset m;\n        Ord m; succ k \\<^bold>\\<in> m\\<rbrakk>\n       \\<Longrightarrow> Vset (succ k) < Vset m", "case 0"], ["proof (state)\nthis:\n  Ord m\n  0 \\<^bold>\\<in> m\n\ngoal (2 subgoals):\n 1. \\<And>m.\n       \\<lbrakk>Ord m; 0 \\<^bold>\\<in> m\\<rbrakk>\n       \\<Longrightarrow> Vset 0 < Vset m\n 2. \\<And>k m.\n       \\<lbrakk>Ord k;\n        \\<And>m.\n           \\<lbrakk>Ord m; k \\<^bold>\\<in> m\\<rbrakk>\n           \\<Longrightarrow> Vset k < Vset m;\n        Ord m; succ k \\<^bold>\\<in> m\\<rbrakk>\n       \\<Longrightarrow> Vset (succ k) < Vset m", "thus ?case"], ["proof (prove)\nusing this:\n  Ord m\n  0 \\<^bold>\\<in> m\n\ngoal (1 subgoal):\n 1. Vset 0 < Vset m", "by (metis HPow_iff Ord_cases Vset_0 Vset_succ hemptyE le_imp_less_or_eq zero_le)"], ["proof (state)\nthis:\n  Vset 0 < Vset m\n\ngoal (1 subgoal):\n 1. \\<And>k m.\n       \\<lbrakk>Ord k;\n        \\<And>m.\n           \\<lbrakk>Ord m; k \\<^bold>\\<in> m\\<rbrakk>\n           \\<Longrightarrow> Vset k < Vset m;\n        Ord m; succ k \\<^bold>\\<in> m\\<rbrakk>\n       \\<Longrightarrow> Vset (succ k) < Vset m", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k m.\n       \\<lbrakk>Ord k;\n        \\<And>m.\n           \\<lbrakk>Ord m; k \\<^bold>\\<in> m\\<rbrakk>\n           \\<Longrightarrow> Vset k < Vset m;\n        Ord m; succ k \\<^bold>\\<in> m\\<rbrakk>\n       \\<Longrightarrow> Vset (succ k) < Vset m", "case (succ n)"], ["proof (state)\nthis:\n  Ord n\n  \\<lbrakk>Ord ?m; n \\<^bold>\\<in> ?m\\<rbrakk>\n  \\<Longrightarrow> Vset n < Vset ?m\n  Ord m\n  succ n \\<^bold>\\<in> m\n\ngoal (1 subgoal):\n 1. \\<And>k m.\n       \\<lbrakk>Ord k;\n        \\<And>m.\n           \\<lbrakk>Ord m; k \\<^bold>\\<in> m\\<rbrakk>\n           \\<Longrightarrow> Vset k < Vset m;\n        Ord m; succ k \\<^bold>\\<in> m\\<rbrakk>\n       \\<Longrightarrow> Vset (succ k) < Vset m", "then"], ["proof (chain)\npicking this:\n  Ord n\n  \\<lbrakk>Ord ?m; n \\<^bold>\\<in> ?m\\<rbrakk>\n  \\<Longrightarrow> Vset n < Vset ?m\n  Ord m\n  succ n \\<^bold>\\<in> m", "show ?case"], ["proof (prove)\nusing this:\n  Ord n\n  \\<lbrakk>Ord ?m; n \\<^bold>\\<in> ?m\\<rbrakk>\n  \\<Longrightarrow> Vset n < Vset ?m\n  Ord m\n  succ n \\<^bold>\\<in> m\n\ngoal (1 subgoal):\n 1. Vset (succ n) < Vset m", "using \\<open>Ord m\\<close>"], ["proof (prove)\nusing this:\n  Ord n\n  \\<lbrakk>Ord ?m; n \\<^bold>\\<in> ?m\\<rbrakk>\n  \\<Longrightarrow> Vset n < Vset ?m\n  Ord m\n  succ n \\<^bold>\\<in> m\n  Ord m\n\ngoal (1 subgoal):\n 1. Vset (succ n) < Vset m", "by (metis Ord_cases hemptyE HPow_mono_strict_iff Vset_succ mem_succ_iff)"], ["proof (state)\nthis:\n  Vset (succ n) < Vset m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>Ord m; n \\<^bold>\\<in> m\\<rbrakk>\n  \\<Longrightarrow> Vset n < Vset m\n\ngoal (1 subgoal):\n 1. Vset n < Vset m", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>Ord m; n \\<^bold>\\<in> m\\<rbrakk>\n  \\<Longrightarrow> Vset n < Vset m\n\ngoal (1 subgoal):\n 1. Vset n < Vset m", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>Ord m; n \\<^bold>\\<in> m\\<rbrakk>\n  \\<Longrightarrow> Vset n < Vset m\n  Ord m\n  n \\<^bold>\\<in> m\n\ngoal (1 subgoal):\n 1. Vset n < Vset m", "."], ["proof (state)\nthis:\n  Vset n < Vset m\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Vset_mono: \"\\<lbrakk>Ord m; n \\<le> m\\<rbrakk> \\<Longrightarrow> Vset n \\<le> Vset m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ord m; n \\<le> m\\<rbrakk> \\<Longrightarrow> Vset n \\<le> Vset m", "by (metis Ord_linear2 Vset_mono_strict Vset_non order.order_iff_strict\n            order_class.order.antisym zero_le)"], ["", "text \\<open>Theorem 4.2(b)\\<close>"], ["", "lemma Vset_Transset: \"Ord m \\<Longrightarrow> Transset (Vset m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ord m \\<Longrightarrow> Transset (Vset m)", "by (induct rule: Ord_induct2) (auto simp: Transset_def)"], ["", "lemma Ord_sup [simp]: \"Ord k \\<Longrightarrow> Ord l \\<Longrightarrow> Ord (k \\<squnion> l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ord k; Ord l\\<rbrakk> \\<Longrightarrow> Ord (k \\<squnion> l)", "by (metis Ord_linear_le le_iff_sup sup_absorb1)"], ["", "lemma Ord_inf [simp]: \"Ord k \\<Longrightarrow> Ord l \\<Longrightarrow> Ord (k \\<sqinter> l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ord k; Ord l\\<rbrakk> \\<Longrightarrow> Ord (k \\<sqinter> l)", "by (metis Ord_linear_le inf_absorb2 le_iff_inf)"], ["", "text \\<open>Theorem 4.3\\<close>"], ["", "lemma Vset_universal: \"\\<exists>n. Ord n \\<and> x \\<^bold>\\<in> Vset n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n. Ord n \\<and> x \\<^bold>\\<in> Vset n", "proof (induct x rule: hf_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>n. Ord n \\<and> 0 \\<^bold>\\<in> Vset n\n 2. \\<And>x y.\n       \\<lbrakk>\\<exists>n. Ord n \\<and> x \\<^bold>\\<in> Vset n;\n        \\<exists>n. Ord n \\<and> y \\<^bold>\\<in> Vset n;\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                            Ord n \\<and>\n                            y \\<triangleleft> x \\<^bold>\\<in> Vset n", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<exists>n. Ord n \\<and> 0 \\<^bold>\\<in> Vset n\n 2. \\<And>x y.\n       \\<lbrakk>\\<exists>n. Ord n \\<and> x \\<^bold>\\<in> Vset n;\n        \\<exists>n. Ord n \\<and> y \\<^bold>\\<in> Vset n;\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                            Ord n \\<and>\n                            y \\<triangleleft> x \\<^bold>\\<in> Vset n", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n. Ord n \\<and> 0 \\<^bold>\\<in> Vset n", "by (metis HPow_iff Ord_0 Ord_succ Vset_succ zero_le)"], ["proof (state)\nthis:\n  \\<exists>n. Ord n \\<and> 0 \\<^bold>\\<in> Vset n\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>\\<exists>n. Ord n \\<and> x \\<^bold>\\<in> Vset n;\n        \\<exists>n. Ord n \\<and> y \\<^bold>\\<in> Vset n;\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                            Ord n \\<and>\n                            y \\<triangleleft> x \\<^bold>\\<in> Vset n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>\\<exists>n. Ord n \\<and> x \\<^bold>\\<in> Vset n;\n        \\<exists>n. Ord n \\<and> y \\<^bold>\\<in> Vset n;\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                            Ord n \\<and>\n                            y \\<triangleleft> x \\<^bold>\\<in> Vset n", "case (hinsert a b)"], ["proof (state)\nthis:\n  \\<exists>n. Ord n \\<and> a \\<^bold>\\<in> Vset n\n  \\<exists>n. Ord n \\<and> b \\<^bold>\\<in> Vset n\n  a \\<^bold>\\<notin> b\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>\\<exists>n. Ord n \\<and> x \\<^bold>\\<in> Vset n;\n        \\<exists>n. Ord n \\<and> y \\<^bold>\\<in> Vset n;\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                            Ord n \\<and>\n                            y \\<triangleleft> x \\<^bold>\\<in> Vset n", "then"], ["proof (chain)\npicking this:\n  \\<exists>n. Ord n \\<and> a \\<^bold>\\<in> Vset n\n  \\<exists>n. Ord n \\<and> b \\<^bold>\\<in> Vset n\n  a \\<^bold>\\<notin> b", "obtain na nb where nab: \"Ord na\" \"a \\<^bold>\\<in> Vset na\" \"Ord nb\" \"b \\<^bold>\\<in> Vset nb\""], ["proof (prove)\nusing this:\n  \\<exists>n. Ord n \\<and> a \\<^bold>\\<in> Vset n\n  \\<exists>n. Ord n \\<and> b \\<^bold>\\<in> Vset n\n  a \\<^bold>\\<notin> b\n\ngoal (1 subgoal):\n 1. (\\<And>na nb.\n        \\<lbrakk>Ord na; a \\<^bold>\\<in> Vset na; Ord nb;\n         b \\<^bold>\\<in> Vset nb\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Ord na\n  a \\<^bold>\\<in> Vset na\n  Ord nb\n  b \\<^bold>\\<in> Vset nb\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>\\<exists>n. Ord n \\<and> x \\<^bold>\\<in> Vset n;\n        \\<exists>n. Ord n \\<and> y \\<^bold>\\<in> Vset n;\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                            Ord n \\<and>\n                            y \\<triangleleft> x \\<^bold>\\<in> Vset n", "hence \"b \\<le> Vset nb\""], ["proof (prove)\nusing this:\n  Ord na\n  a \\<^bold>\\<in> Vset na\n  Ord nb\n  b \\<^bold>\\<in> Vset nb\n\ngoal (1 subgoal):\n 1. b \\<le> Vset nb", "using Vset_Transset [of nb]"], ["proof (prove)\nusing this:\n  Ord na\n  a \\<^bold>\\<in> Vset na\n  Ord nb\n  b \\<^bold>\\<in> Vset nb\n  Ord nb \\<Longrightarrow> Transset (Vset nb)\n\ngoal (1 subgoal):\n 1. b \\<le> Vset nb", "by (auto simp: Transset_def)"], ["proof (state)\nthis:\n  b \\<le> Vset nb\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>\\<exists>n. Ord n \\<and> x \\<^bold>\\<in> Vset n;\n        \\<exists>n. Ord n \\<and> y \\<^bold>\\<in> Vset n;\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                            Ord n \\<and>\n                            y \\<triangleleft> x \\<^bold>\\<in> Vset n", "also"], ["proof (state)\nthis:\n  b \\<le> Vset nb\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>\\<exists>n. Ord n \\<and> x \\<^bold>\\<in> Vset n;\n        \\<exists>n. Ord n \\<and> y \\<^bold>\\<in> Vset n;\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                            Ord n \\<and>\n                            y \\<triangleleft> x \\<^bold>\\<in> Vset n", "have \"... \\<le> Vset (na \\<squnion> nb)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Vset nb \\<le> Vset (na \\<squnion> nb)", "using nab"], ["proof (prove)\nusing this:\n  Ord na\n  a \\<^bold>\\<in> Vset na\n  Ord nb\n  b \\<^bold>\\<in> Vset nb\n\ngoal (1 subgoal):\n 1. Vset nb \\<le> Vset (na \\<squnion> nb)", "by (metis Ord_sup Vset_mono sup_ge2)"], ["proof (state)\nthis:\n  Vset nb \\<le> Vset (na \\<squnion> nb)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>\\<exists>n. Ord n \\<and> x \\<^bold>\\<in> Vset n;\n        \\<exists>n. Ord n \\<and> y \\<^bold>\\<in> Vset n;\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                            Ord n \\<and>\n                            y \\<triangleleft> x \\<^bold>\\<in> Vset n", "finally"], ["proof (chain)\npicking this:\n  b \\<le> Vset (na \\<squnion> nb)", "have \"b \\<triangleleft> a \\<^bold>\\<in> Vset (succ (na \\<squnion> nb))\""], ["proof (prove)\nusing this:\n  b \\<le> Vset (na \\<squnion> nb)\n\ngoal (1 subgoal):\n 1. b \\<triangleleft> a \\<^bold>\\<in> Vset (succ (na \\<squnion> nb))", "using nab"], ["proof (prove)\nusing this:\n  b \\<le> Vset (na \\<squnion> nb)\n  Ord na\n  a \\<^bold>\\<in> Vset na\n  Ord nb\n  b \\<^bold>\\<in> Vset nb\n\ngoal (1 subgoal):\n 1. b \\<triangleleft> a \\<^bold>\\<in> Vset (succ (na \\<squnion> nb))", "by simp (metis Ord_sup Vset_mono sup_ge1 rev_hsubsetD)"], ["proof (state)\nthis:\n  b \\<triangleleft> a \\<^bold>\\<in> Vset (succ (na \\<squnion> nb))\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>\\<exists>n. Ord n \\<and> x \\<^bold>\\<in> Vset n;\n        \\<exists>n. Ord n \\<and> y \\<^bold>\\<in> Vset n;\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                            Ord n \\<and>\n                            y \\<triangleleft> x \\<^bold>\\<in> Vset n", "thus ?case"], ["proof (prove)\nusing this:\n  b \\<triangleleft> a \\<^bold>\\<in> Vset (succ (na \\<squnion> nb))\n\ngoal (1 subgoal):\n 1. \\<exists>n. Ord n \\<and> b \\<triangleleft> a \\<^bold>\\<in> Vset n", "using nab"], ["proof (prove)\nusing this:\n  b \\<triangleleft> a \\<^bold>\\<in> Vset (succ (na \\<squnion> nb))\n  Ord na\n  a \\<^bold>\\<in> Vset na\n  Ord nb\n  b \\<^bold>\\<in> Vset nb\n\ngoal (1 subgoal):\n 1. \\<exists>n. Ord n \\<and> b \\<triangleleft> a \\<^bold>\\<in> Vset n", "by (metis Ord_succ Ord_sup)"], ["proof (state)\nthis:\n  \\<exists>n. Ord n \\<and> b \\<triangleleft> a \\<^bold>\\<in> Vset n\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open>Least Ordinal Operator\\<close>"], ["", "text \\<open>Definition 4.4. For every x, let rank(x) be the least ordinal n such that...\\<close>"], ["", "lemma Ord_minimal:\n   \"Ord k \\<Longrightarrow> P k \\<Longrightarrow> \\<exists>n. Ord n \\<and> P n \\<and> (\\<forall>m. Ord m \\<and> P m \\<longrightarrow> n \\<le> m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ord k; P k\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n.\n                         Ord n \\<and>\n                         P n \\<and>\n                         (\\<forall>m.\n                             Ord m \\<and> P m \\<longrightarrow> n \\<le> m)", "by (induct k rule: Ord_induct) (metis Ord_linear2)"], ["", "lemma OrdLeastI: \"Ord k \\<Longrightarrow> P k \\<Longrightarrow> P(LEAST n. Ord n \\<and> P n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ord k; P k\\<rbrakk>\n    \\<Longrightarrow> P (LEAST n. Ord n \\<and> P n)", "by (metis (lifting, no_types) Least_equality Ord_minimal)"], ["", "lemma OrdLeast_le: \"Ord k \\<Longrightarrow> P k \\<Longrightarrow> (LEAST n. Ord n \\<and> P n) \\<le> k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ord k; P k\\<rbrakk>\n    \\<Longrightarrow> (LEAST n. Ord n \\<and> P n) \\<le> k", "by (metis (lifting, no_types) Least_equality Ord_minimal)"], ["", "lemma OrdLeast_Ord:\n  assumes \"Ord k\" \"P k\"shows \"Ord(LEAST n. Ord n \\<and> P n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ord (LEAST n. Ord n \\<and> P n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Ord (LEAST n. Ord n \\<and> P n)", "obtain n where \"Ord n\" \"P n\" \"\\<forall>m. Ord m \\<and> P m \\<longrightarrow> n \\<le> m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>Ord n; P n;\n         \\<forall>m. Ord m \\<and> P m \\<longrightarrow> n \\<le> m\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis Ord_minimal assms)"], ["proof (state)\nthis:\n  Ord n\n  P n\n  \\<forall>m. Ord m \\<and> P m \\<longrightarrow> n \\<le> m\n\ngoal (1 subgoal):\n 1. Ord (LEAST n. Ord n \\<and> P n)", "thus ?thesis"], ["proof (prove)\nusing this:\n  Ord n\n  P n\n  \\<forall>m. Ord m \\<and> P m \\<longrightarrow> n \\<le> m\n\ngoal (1 subgoal):\n 1. Ord (LEAST n. Ord n \\<and> P n)", "by (metis (lifting) Least_equality)"], ["proof (state)\nthis:\n  Ord (LEAST n. Ord n \\<and> P n)\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open>Rank Function\\<close>"], ["", "definition rank :: \"hf \\<Rightarrow> hf\"\n  where \"rank x = (LEAST n. Ord n \\<and> x \\<^bold>\\<in> Vset (succ n))\""], ["", "lemma [simp]: \"rank 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank 0 = 0", "by (simp add: rank_def) (metis (lifting) HPow_iff Least_equality Ord_0 Vset_succ zero_le)"], ["", "lemma in_Vset_rank: \"a \\<^bold>\\<in> Vset(succ(rank a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<^bold>\\<in> Vset (succ (rank a))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<^bold>\\<in> Vset (succ (rank a))", "from Vset_universal [of a]"], ["proof (chain)\npicking this:\n  \\<exists>n. Ord n \\<and> a \\<^bold>\\<in> Vset n", "obtain na where na: \"Ord na\" \"a \\<^bold>\\<in> Vset (succ na)\""], ["proof (prove)\nusing this:\n  \\<exists>n. Ord n \\<and> a \\<^bold>\\<in> Vset n\n\ngoal (1 subgoal):\n 1. (\\<And>na.\n        \\<lbrakk>Ord na; a \\<^bold>\\<in> Vset (succ na)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis Ord_Union Ord_in_Ord Ord_pred Vset_0 hempty_iff)"], ["proof (state)\nthis:\n  Ord na\n  a \\<^bold>\\<in> Vset (succ na)\n\ngoal (1 subgoal):\n 1. a \\<^bold>\\<in> Vset (succ (rank a))", "thus ?thesis"], ["proof (prove)\nusing this:\n  Ord na\n  a \\<^bold>\\<in> Vset (succ na)\n\ngoal (1 subgoal):\n 1. a \\<^bold>\\<in> Vset (succ (rank a))", "by (unfold rank_def) (rule OrdLeastI)"], ["proof (state)\nthis:\n  a \\<^bold>\\<in> Vset (succ (rank a))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Ord_rank [simp]: \"Ord (rank a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ord (rank a)", "by (metis Ord_succ_iff Vset_non hemptyE in_Vset_rank)"], ["", "lemma le_Vset_rank: \"a \\<le> Vset(rank a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> Vset (rank a)", "by (metis HPow_iff Ord_succ_iff Vset_non Vset_succ hemptyE in_Vset_rank)"], ["", "lemma VsetI: \"succ(rank a) \\<le> k \\<Longrightarrow> Ord k \\<Longrightarrow> a \\<^bold>\\<in> Vset k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>succ (rank a) \\<le> k; Ord k\\<rbrakk>\n    \\<Longrightarrow> a \\<^bold>\\<in> Vset k", "by (metis Vset_mono hsubsetCE in_Vset_rank)"], ["", "lemma Vset_succ_rank_le: \"Ord k \\<Longrightarrow> a \\<^bold>\\<in> Vset (succ k) \\<Longrightarrow> rank a \\<le> k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ord k; a \\<^bold>\\<in> Vset (succ k)\\<rbrakk>\n    \\<Longrightarrow> rank a \\<le> k", "by (unfold rank_def) (rule OrdLeast_le)"], ["", "lemma Vset_rank_lt: assumes a: \"a \\<^bold>\\<in> Vset k\" shows \"rank a < k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank a < k", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rank a < k", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. rank a < k", "assume k: \"Ord k\""], ["proof (state)\nthis:\n  Ord k\n\ngoal (1 subgoal):\n 1. rank a < k", "hence ?thesis"], ["proof (prove)\nusing this:\n  Ord k\n\ngoal (1 subgoal):\n 1. rank a < k", "proof (cases k rule: Ord_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow> rank a < k\n 2. \\<And>l.\n       \\<lbrakk>Ord l; succ l = k\\<rbrakk> \\<Longrightarrow> rank a < k", "case 0"], ["proof (state)\nthis:\n  k = 0\n\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow> rank a < k\n 2. \\<And>l.\n       \\<lbrakk>Ord l; succ l = k\\<rbrakk> \\<Longrightarrow> rank a < k", "thus ?thesis"], ["proof (prove)\nusing this:\n  k = 0\n\ngoal (1 subgoal):\n 1. rank a < k", "using a"], ["proof (prove)\nusing this:\n  k = 0\n  a \\<^bold>\\<in> Vset k\n\ngoal (1 subgoal):\n 1. rank a < k", "by simp"], ["proof (state)\nthis:\n  rank a < k\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>Ord l; succ l = k\\<rbrakk> \\<Longrightarrow> rank a < k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>Ord l; succ l = k\\<rbrakk> \\<Longrightarrow> rank a < k", "case (succ l)"], ["proof (state)\nthis:\n  Ord l\n  succ l = k\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>Ord l; succ l = k\\<rbrakk> \\<Longrightarrow> rank a < k", "thus ?thesis"], ["proof (prove)\nusing this:\n  Ord l\n  succ l = k\n\ngoal (1 subgoal):\n 1. rank a < k", "using a"], ["proof (prove)\nusing this:\n  Ord l\n  succ l = k\n  a \\<^bold>\\<in> Vset k\n\ngoal (1 subgoal):\n 1. rank a < k", "by (metis Ord_lt_succ_iff_le Ord_succ_iff Vset_non Vset_succ_rank_le hemptyE in_Vset_rank)"], ["proof (state)\nthis:\n  rank a < k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rank a < k\n\ngoal (1 subgoal):\n 1. rank a < k", "}"], ["proof (state)\nthis:\n  Ord k \\<Longrightarrow> rank a < k\n\ngoal (1 subgoal):\n 1. rank a < k", "thus ?thesis"], ["proof (prove)\nusing this:\n  Ord k \\<Longrightarrow> rank a < k\n\ngoal (1 subgoal):\n 1. rank a < k", "using a"], ["proof (prove)\nusing this:\n  Ord k \\<Longrightarrow> rank a < k\n  a \\<^bold>\\<in> Vset k\n\ngoal (1 subgoal):\n 1. rank a < k", "by (metis Vset_non hemptyE)"], ["proof (state)\nthis:\n  rank a < k\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Theorem 4.5\\<close>"], ["", "theorem rank_lt: \"a \\<^bold>\\<in> b \\<Longrightarrow> rank(a) < rank(b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<^bold>\\<in> b \\<Longrightarrow> rank a < rank b", "by (metis Vset_rank_lt hsubsetD le_Vset_rank)"], ["", "lemma rank_mono: \"x \\<le> y \\<Longrightarrow> rank x \\<le> rank y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow> rank x \\<le> rank y", "by (metis HPow_iff Ord_rank Vset_succ Vset_succ_rank_le dual_order.trans le_Vset_rank)"], ["", "lemma rank_sup [simp]: \"rank (a \\<squnion> b) = rank a \\<squnion> rank b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank (a \\<squnion> b) = rank a \\<squnion> rank b", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. rank (a \\<squnion> b) \\<le> rank a \\<squnion> rank b\n 2. rank a \\<squnion> rank b \\<le> rank (a \\<squnion> b)", "have o: \"Ord (rank a \\<squnion> rank b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ord (rank a \\<squnion> rank b)", "by simp"], ["proof (state)\nthis:\n  Ord (rank a \\<squnion> rank b)\n\ngoal (2 subgoals):\n 1. rank (a \\<squnion> b) \\<le> rank a \\<squnion> rank b\n 2. rank a \\<squnion> rank b \\<le> rank (a \\<squnion> b)", "thus \"rank (a \\<squnion> b) \\<le> rank a \\<squnion> rank b\""], ["proof (prove)\nusing this:\n  Ord (rank a \\<squnion> rank b)\n\ngoal (1 subgoal):\n 1. rank (a \\<squnion> b) \\<le> rank a \\<squnion> rank b", "apply (rule Vset_succ_rank_le, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> Vset (rank a \\<squnion> rank b) \\<and>\n    b \\<le> Vset (rank a \\<squnion> rank b)", "apply (metis le_Vset_rank order_trans Vset_mono sup_ge1 sup_ge2 o)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  rank (a \\<squnion> b) \\<le> rank a \\<squnion> rank b\n\ngoal (1 subgoal):\n 1. rank a \\<squnion> rank b \\<le> rank (a \\<squnion> b)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. rank a \\<squnion> rank b \\<le> rank (a \\<squnion> b)", "show \"rank a \\<squnion> rank b \\<le> rank (a \\<squnion> b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank a \\<squnion> rank b \\<le> rank (a \\<squnion> b)", "by (metis le_supI le_supI1 le_supI2 order_eq_refl rank_mono)"], ["proof (state)\nthis:\n  rank a \\<squnion> rank b \\<le> rank (a \\<squnion> b)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rank_singleton [simp]: \"rank \\<lbrace>a\\<rbrace> = succ(rank a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank \\<lbrace>a\\<rbrace> = succ (rank a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rank \\<lbrace>a\\<rbrace> = succ (rank a)", "have oba: \"Ord (succ (rank a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ord (succ (rank a))", "by simp"], ["proof (state)\nthis:\n  Ord (succ (rank a))\n\ngoal (1 subgoal):\n 1. rank \\<lbrace>a\\<rbrace> = succ (rank a)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. rank \\<lbrace>a\\<rbrace> = succ (rank a)", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. rank \\<lbrace>a\\<rbrace> \\<le> succ (rank a)\n 2. succ (rank a) \\<le> rank \\<lbrace>a\\<rbrace>", "show \"rank \\<lbrace>a\\<rbrace> \\<le> succ (rank a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank \\<lbrace>a\\<rbrace> \\<le> succ (rank a)", "by (metis Vset_succ_rank_le HPow_iff Vset_succ in_Vset_rank less_eq_insert1_iff oba zero_le)"], ["proof (state)\nthis:\n  rank \\<lbrace>a\\<rbrace> \\<le> succ (rank a)\n\ngoal (1 subgoal):\n 1. succ (rank a) \\<le> rank \\<lbrace>a\\<rbrace>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. succ (rank a) \\<le> rank \\<lbrace>a\\<rbrace>", "show \"succ (rank a) \\<le> rank\\<lbrace>a\\<rbrace>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. succ (rank a) \\<le> rank \\<lbrace>a\\<rbrace>", "by (metis Ord_linear_le Ord_lt_succ_iff_le rank_lt Ord_rank hmem_hinsert less_le_not_le oba)"], ["proof (state)\nthis:\n  succ (rank a) \\<le> rank \\<lbrace>a\\<rbrace>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rank \\<lbrace>a\\<rbrace> = succ (rank a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rank_hinsert [simp]: \"rank (b \\<triangleleft> a) = rank b \\<squnion> succ(rank a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank (b \\<triangleleft> a) = rank b \\<squnion> succ (rank a)", "by (metis hinsert_eq_sup rank_singleton rank_sup)"], ["", "text \\<open>Definition 4.6. The transitive closure of @{term x} is\n the minimal transitive set @{term y} such that @{term\"x\\<le>y\"}.\\<close>"], ["", "section \\<open>Epsilon Closure\\<close>"], ["", "definition\n  eclose    :: \"hf \\<Rightarrow> hf\"  where\n    \"eclose X = \\<Sqinter> \\<lbrace>Y \\<^bold>\\<in> HPow(Vset (rank X)). Transset Y \\<and> X\\<le>Y\\<rbrace>\""], ["", "lemma eclose_facts:\n  shows Transset_eclose: \"Transset (eclose X)\"\n   and  le_eclose: \"X \\<le> eclose X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Transset (eclose X) &&& X \\<le> eclose X", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. Transset (eclose X)\n 2. X \\<le> eclose X", "have nz: \"\\<lbrace>Y \\<^bold>\\<in> HPow(Vset (rank X)). Transset Y \\<and> X\\<le>Y\\<rbrace> \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>Y \\<^bold>\\<in> HPow (Vset (rank X)).\n     Transset Y \\<and> X \\<le> Y\\<rbrace> \\<noteq>\n    0", "by (simp add: eclose_def hempty_iff) (metis Ord_rank Vset_Transset le_Vset_rank order_refl)"], ["proof (state)\nthis:\n  \\<lbrace>Y \\<^bold>\\<in> HPow (Vset (rank X)).\n   Transset Y \\<and> X \\<le> Y\\<rbrace> \\<noteq>\n  0\n\ngoal (2 subgoals):\n 1. Transset (eclose X)\n 2. X \\<le> eclose X", "show \"Transset (eclose X)\" \"X \\<le> eclose X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Transset (eclose X) &&& X \\<le> eclose X", "using HInter_iff [OF nz]"], ["proof (prove)\nusing this:\n  (?x \\<^bold>\\<in>\n   \\<Sqinter>\\<lbrace>Y \\<^bold>\\<in> HPow (Vset (rank X)).\n              Transset Y \\<and> X \\<le> Y\\<rbrace>) =\n  (\\<forall>y.\n      y \\<^bold>\\<in>\n      \\<lbrace>Y \\<^bold>\\<in> HPow (Vset (rank X)).\n       Transset Y \\<and> X \\<le> Y\\<rbrace> \\<longrightarrow>\n      ?x \\<^bold>\\<in> y)\n\ngoal (1 subgoal):\n 1. Transset (eclose X) &&& X \\<le> eclose X", "by (auto simp: eclose_def Transset_def)"], ["proof (state)\nthis:\n  Transset (eclose X)\n  X \\<le> eclose X\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma eclose_minimal:\n  assumes Y: \"Transset Y\" \"X\\<le>Y\" shows \"eclose X \\<le> Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eclose X \\<le> Y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. eclose X \\<le> Y", "have \"\\<lbrace>Y \\<^bold>\\<in> HPow(Vset (rank X)). Transset Y \\<and> X\\<le>Y\\<rbrace> \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>Y \\<^bold>\\<in> HPow (Vset (rank X)).\n     Transset Y \\<and> X \\<le> Y\\<rbrace> \\<noteq>\n    0", "by (simp add: eclose_def hempty_iff) (metis Ord_rank Vset_Transset le_Vset_rank order_refl)"], ["proof (state)\nthis:\n  \\<lbrace>Y \\<^bold>\\<in> HPow (Vset (rank X)).\n   Transset Y \\<and> X \\<le> Y\\<rbrace> \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. eclose X \\<le> Y", "moreover"], ["proof (state)\nthis:\n  \\<lbrace>Y \\<^bold>\\<in> HPow (Vset (rank X)).\n   Transset Y \\<and> X \\<le> Y\\<rbrace> \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. eclose X \\<le> Y", "have \"Transset (Y \\<sqinter> Vset (rank X))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Transset (Y \\<sqinter> Vset (rank X))", "by (metis Ord_rank Transset_inf Vset_Transset Y(1))"], ["proof (state)\nthis:\n  Transset (Y \\<sqinter> Vset (rank X))\n\ngoal (1 subgoal):\n 1. eclose X \\<le> Y", "moreover"], ["proof (state)\nthis:\n  Transset (Y \\<sqinter> Vset (rank X))\n\ngoal (1 subgoal):\n 1. eclose X \\<le> Y", "have \"X \\<le> Y \\<sqinter> Vset (rank X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<le> Y \\<sqinter> Vset (rank X)", "by (metis Y(2) le_Vset_rank le_inf_iff)"], ["proof (state)\nthis:\n  X \\<le> Y \\<sqinter> Vset (rank X)\n\ngoal (1 subgoal):\n 1. eclose X \\<le> Y", "ultimately"], ["proof (chain)\npicking this:\n  \\<lbrace>Y \\<^bold>\\<in> HPow (Vset (rank X)).\n   Transset Y \\<and> X \\<le> Y\\<rbrace> \\<noteq>\n  0\n  Transset (Y \\<sqinter> Vset (rank X))\n  X \\<le> Y \\<sqinter> Vset (rank X)", "show \"eclose X \\<le> Y\""], ["proof (prove)\nusing this:\n  \\<lbrace>Y \\<^bold>\\<in> HPow (Vset (rank X)).\n   Transset Y \\<and> X \\<le> Y\\<rbrace> \\<noteq>\n  0\n  Transset (Y \\<sqinter> Vset (rank X))\n  X \\<le> Y \\<sqinter> Vset (rank X)\n\ngoal (1 subgoal):\n 1. eclose X \\<le> Y", "apply (auto simp: eclose_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<lbrace>Y \\<^bold>\\<in> HPow (Vset (rank X)).\n                 Transset Y \\<and> X \\<le> Y\\<rbrace> \\<noteq>\n                0;\n        Transset (Y \\<sqinter> Vset (rank X));\n        \\<forall>y.\n           Transset y \\<and>\n           X \\<le> y \\<and> y \\<le> Vset (rank X) \\<longrightarrow>\n           x \\<^bold>\\<in> y;\n        X \\<le> Y; X \\<le> Vset (rank X)\\<rbrakk>\n       \\<Longrightarrow> x \\<^bold>\\<in> Y", "apply (metis hinter_iff le_inf_iff order_refl)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  eclose X \\<le> Y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma eclose_0 [simp]: \"eclose 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eclose 0 = 0", "by (metis Ord_0 Vset_0 Vset_Transset eclose_minimal less_eq_hempty)"], ["", "lemma eclose_sup [simp]: \"eclose (a \\<squnion> b) = eclose a \\<squnion> eclose b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eclose (a \\<squnion> b) = eclose a \\<squnion> eclose b", "proof (rule order_antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. eclose (a \\<squnion> b) \\<le> eclose a \\<squnion> eclose b\n 2. eclose a \\<squnion> eclose b \\<le> eclose (a \\<squnion> b)", "show \"eclose (a \\<squnion> b) \\<le> eclose a \\<squnion> eclose b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eclose (a \\<squnion> b) \\<le> eclose a \\<squnion> eclose b", "by (metis Transset_eclose Transset_sup eclose_minimal le_eclose sup_mono)"], ["proof (state)\nthis:\n  eclose (a \\<squnion> b) \\<le> eclose a \\<squnion> eclose b\n\ngoal (1 subgoal):\n 1. eclose a \\<squnion> eclose b \\<le> eclose (a \\<squnion> b)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. eclose a \\<squnion> eclose b \\<le> eclose (a \\<squnion> b)", "show \"eclose a \\<squnion> eclose b \\<le> eclose (a \\<squnion> b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eclose a \\<squnion> eclose b \\<le> eclose (a \\<squnion> b)", "by (metis Transset_eclose eclose_minimal le_eclose le_sup_iff)"], ["proof (state)\nthis:\n  eclose a \\<squnion> eclose b \\<le> eclose (a \\<squnion> b)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma eclose_singleton [simp]: \"eclose \\<lbrace>a\\<rbrace> = (eclose a) \\<triangleleft> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eclose \\<lbrace>a\\<rbrace> = eclose a \\<triangleleft> a", "proof (rule order_antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. eclose \\<lbrace>a\\<rbrace> \\<le> eclose a \\<triangleleft> a\n 2. eclose a \\<triangleleft> a \\<le> eclose \\<lbrace>a\\<rbrace>", "show \"eclose \\<lbrace>a\\<rbrace> \\<le> eclose a \\<triangleleft> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eclose \\<lbrace>a\\<rbrace> \\<le> eclose a \\<triangleleft> a", "by (metis eclose_minimal Transset_eclose Transset_hinsert\n              le_eclose less_eq_insert1_iff order_refl zero_le)"], ["proof (state)\nthis:\n  eclose \\<lbrace>a\\<rbrace> \\<le> eclose a \\<triangleleft> a\n\ngoal (1 subgoal):\n 1. eclose a \\<triangleleft> a \\<le> eclose \\<lbrace>a\\<rbrace>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. eclose a \\<triangleleft> a \\<le> eclose \\<lbrace>a\\<rbrace>", "show \"eclose a \\<triangleleft> a \\<le> eclose \\<lbrace>a\\<rbrace>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eclose a \\<triangleleft> a \\<le> eclose \\<lbrace>a\\<rbrace>", "by (metis Transset_def Transset_eclose eclose_minimal le_eclose less_eq_insert1_iff)"], ["proof (state)\nthis:\n  eclose a \\<triangleleft> a \\<le> eclose \\<lbrace>a\\<rbrace>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma eclose_hinsert [simp]: \"eclose (b \\<triangleleft> a) = eclose b \\<squnion> (eclose a \\<triangleleft> a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eclose (b \\<triangleleft> a) =\n    eclose b \\<squnion> (eclose a \\<triangleleft> a)", "by (metis eclose_singleton eclose_sup hinsert_eq_sup)"], ["", "lemma eclose_succ [simp]: \"eclose (succ a) = eclose a \\<triangleleft> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eclose (succ a) = eclose a \\<triangleleft> a", "by (auto simp: succ_def)"], ["", "lemma fst_in_eclose [simp]: \"x \\<^bold>\\<in> eclose \\<langle>x, y\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<^bold>\\<in> eclose \\<langle>x, y\\<rangle>", "by (metis eclose_hinsert hmem_hinsert hpair_def hunion_iff)"], ["", "lemma snd_in_eclose [simp]: \"y \\<^bold>\\<in> eclose \\<langle>x, y\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<^bold>\\<in> eclose \\<langle>x, y\\<rangle>", "by (metis eclose_hinsert hmem_hinsert hpair_def hunion_iff)"], ["", "text \\<open>Theorem 4.7. rank(x) = rank(cl(x)).\\<close>"], ["", "lemma rank_eclose [simp]: \"rank (eclose x) = rank x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank (eclose x) = rank x", "proof (induct x rule: hf_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. rank (eclose 0) = rank 0\n 2. \\<And>x y.\n       \\<lbrakk>rank (eclose x) = rank x; rank (eclose y) = rank y;\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> rank (eclose (y \\<triangleleft> x)) =\n                         rank (y \\<triangleleft> x)", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. rank (eclose 0) = rank 0\n 2. \\<And>x y.\n       \\<lbrakk>rank (eclose x) = rank x; rank (eclose y) = rank y;\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> rank (eclose (y \\<triangleleft> x)) =\n                         rank (y \\<triangleleft> x)", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. rank (eclose 0) = rank 0", "by simp"], ["proof (state)\nthis:\n  rank (eclose 0) = rank 0\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>rank (eclose x) = rank x; rank (eclose y) = rank y;\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> rank (eclose (y \\<triangleleft> x)) =\n                         rank (y \\<triangleleft> x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>rank (eclose x) = rank x; rank (eclose y) = rank y;\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> rank (eclose (y \\<triangleleft> x)) =\n                         rank (y \\<triangleleft> x)", "case (hinsert a b)"], ["proof (state)\nthis:\n  rank (eclose a) = rank a\n  rank (eclose b) = rank b\n  a \\<^bold>\\<notin> b\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>rank (eclose x) = rank x; rank (eclose y) = rank y;\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> rank (eclose (y \\<triangleleft> x)) =\n                         rank (y \\<triangleleft> x)", "thus ?case"], ["proof (prove)\nusing this:\n  rank (eclose a) = rank a\n  rank (eclose b) = rank b\n  a \\<^bold>\\<notin> b\n\ngoal (1 subgoal):\n 1. rank (eclose (b \\<triangleleft> a)) = rank (b \\<triangleleft> a)", "by simp (metis hinsert_eq_sup succ_def sup.left_idem)"], ["proof (state)\nthis:\n  rank (eclose (b \\<triangleleft> a)) = rank (b \\<triangleleft> a)\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open>Epsilon-Recursion\\<close>"], ["", "text \\<open>Theorem 4.9.  Definition of a function by recursion on rank.\\<close>"], ["", "lemma hmem_induct [case_names step]:\n  assumes ih: \"\\<And>x. (\\<And>y. y \\<^bold>\\<in> x \\<Longrightarrow> P y) \\<Longrightarrow> P x\" shows \"P x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P x", "have \"\\<And>y. y \\<^bold>\\<in> x \\<Longrightarrow> P y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y. y \\<^bold>\\<in> x \\<Longrightarrow> P y", "proof (induct x rule: hf_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y. y \\<^bold>\\<in> 0 \\<Longrightarrow> P y\n 2. \\<And>x y ya.\n       \\<lbrakk>\\<And>y. y \\<^bold>\\<in> x \\<Longrightarrow> P y;\n        \\<And>ya. ya \\<^bold>\\<in> y \\<Longrightarrow> P ya;\n        x \\<^bold>\\<notin> y; ya \\<^bold>\\<in> y \\<triangleleft> x\\<rbrakk>\n       \\<Longrightarrow> P ya", "case 0"], ["proof (state)\nthis:\n  y \\<^bold>\\<in> 0\n\ngoal (2 subgoals):\n 1. \\<And>y. y \\<^bold>\\<in> 0 \\<Longrightarrow> P y\n 2. \\<And>x y ya.\n       \\<lbrakk>\\<And>y. y \\<^bold>\\<in> x \\<Longrightarrow> P y;\n        \\<And>ya. ya \\<^bold>\\<in> y \\<Longrightarrow> P ya;\n        x \\<^bold>\\<notin> y; ya \\<^bold>\\<in> y \\<triangleleft> x\\<rbrakk>\n       \\<Longrightarrow> P ya", "thus ?case"], ["proof (prove)\nusing this:\n  y \\<^bold>\\<in> 0\n\ngoal (1 subgoal):\n 1. P y", "by simp"], ["proof (state)\nthis:\n  P y\n\ngoal (1 subgoal):\n 1. \\<And>x y ya.\n       \\<lbrakk>\\<And>y. y \\<^bold>\\<in> x \\<Longrightarrow> P y;\n        \\<And>ya. ya \\<^bold>\\<in> y \\<Longrightarrow> P ya;\n        x \\<^bold>\\<notin> y; ya \\<^bold>\\<in> y \\<triangleleft> x\\<rbrakk>\n       \\<Longrightarrow> P ya", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y ya.\n       \\<lbrakk>\\<And>y. y \\<^bold>\\<in> x \\<Longrightarrow> P y;\n        \\<And>ya. ya \\<^bold>\\<in> y \\<Longrightarrow> P ya;\n        x \\<^bold>\\<notin> y; ya \\<^bold>\\<in> y \\<triangleleft> x\\<rbrakk>\n       \\<Longrightarrow> P ya", "case (hinsert a b)"], ["proof (state)\nthis:\n  ?y \\<^bold>\\<in> a \\<Longrightarrow> P ?y\n  ?y \\<^bold>\\<in> b \\<Longrightarrow> P ?y\n  a \\<^bold>\\<notin> b\n  y \\<^bold>\\<in> b \\<triangleleft> a\n\ngoal (1 subgoal):\n 1. \\<And>x y ya.\n       \\<lbrakk>\\<And>y. y \\<^bold>\\<in> x \\<Longrightarrow> P y;\n        \\<And>ya. ya \\<^bold>\\<in> y \\<Longrightarrow> P ya;\n        x \\<^bold>\\<notin> y; ya \\<^bold>\\<in> y \\<triangleleft> x\\<rbrakk>\n       \\<Longrightarrow> P ya", "thus ?case"], ["proof (prove)\nusing this:\n  ?y \\<^bold>\\<in> a \\<Longrightarrow> P ?y\n  ?y \\<^bold>\\<in> b \\<Longrightarrow> P ?y\n  a \\<^bold>\\<notin> b\n  y \\<^bold>\\<in> b \\<triangleleft> a\n\ngoal (1 subgoal):\n 1. P y", "by (metis assms hmem_hinsert)"], ["proof (state)\nthis:\n  P y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?y \\<^bold>\\<in> x \\<Longrightarrow> P ?y\n\ngoal (1 subgoal):\n 1. P x", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?y \\<^bold>\\<in> x \\<Longrightarrow> P ?y\n\ngoal (1 subgoal):\n 1. P x", "by (metis ih)"], ["proof (state)\nthis:\n  P x\n\ngoal:\nNo subgoals!", "qed"], ["", "definition\n  hmem_rel :: \"(hf * hf) set\" where\n  \"hmem_rel = trancl {(x,y). x \\<^bold>\\<in> y}\""], ["", "lemma wf_hmem_rel: \"wf hmem_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf hmem_rel", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. wf hmem_rel", "have \"wf {(x,y). x \\<^bold>\\<in> y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf {(x, y). x \\<^bold>\\<in> y}", "by (metis (full_types) hmem_induct wfPUNIVI wfP_def)"], ["proof (state)\nthis:\n  wf {(x, y). x \\<^bold>\\<in> y}\n\ngoal (1 subgoal):\n 1. wf hmem_rel", "thus ?thesis"], ["proof (prove)\nusing this:\n  wf {(x, y). x \\<^bold>\\<in> y}\n\ngoal (1 subgoal):\n 1. wf hmem_rel", "by (metis hmem_rel_def wf_trancl)"], ["proof (state)\nthis:\n  wf hmem_rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma hmem_eclose_le: \"y \\<^bold>\\<in> x \\<Longrightarrow> eclose y \\<le> eclose x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<^bold>\\<in> x \\<Longrightarrow> eclose y \\<le> eclose x", "by (metis Transset_def Transset_eclose eclose_minimal hsubsetD le_eclose)"], ["", "lemma hmem_rel_iff_hmem_eclose: \"(x,y) \\<in> hmem_rel \\<longleftrightarrow> x \\<^bold>\\<in> eclose y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x, y) \\<in> hmem_rel) = (x \\<^bold>\\<in> eclose y)", "proof (unfold hmem_rel_def, rule iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. (x, y) \\<in> {(x, y). x \\<^bold>\\<in> y}\\<^sup>+ \\<Longrightarrow>\n    x \\<^bold>\\<in> eclose y\n 2. x \\<^bold>\\<in> eclose y \\<Longrightarrow>\n    (x, y) \\<in> {(x, y). x \\<^bold>\\<in> y}\\<^sup>+", "assume \"(x, y) \\<in> trancl {(x, y). x \\<^bold>\\<in> y}\""], ["proof (state)\nthis:\n  (x, y) \\<in> {(x, y). x \\<^bold>\\<in> y}\\<^sup>+\n\ngoal (2 subgoals):\n 1. (x, y) \\<in> {(x, y). x \\<^bold>\\<in> y}\\<^sup>+ \\<Longrightarrow>\n    x \\<^bold>\\<in> eclose y\n 2. x \\<^bold>\\<in> eclose y \\<Longrightarrow>\n    (x, y) \\<in> {(x, y). x \\<^bold>\\<in> y}\\<^sup>+", "thus \"x \\<^bold>\\<in> eclose y\""], ["proof (prove)\nusing this:\n  (x, y) \\<in> {(x, y). x \\<^bold>\\<in> y}\\<^sup>+\n\ngoal (1 subgoal):\n 1. x \\<^bold>\\<in> eclose y", "proof (induct rule: trancl_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y.\n       (x, y) \\<in> {(x, y). x \\<^bold>\\<in> y} \\<Longrightarrow>\n       x \\<^bold>\\<in> eclose y\n 2. \\<And>y z.\n       \\<lbrakk>(x, y) \\<in> {(x, y). x \\<^bold>\\<in> y}\\<^sup>+;\n        (y, z) \\<in> {(x, y). x \\<^bold>\\<in> y};\n        x \\<^bold>\\<in> eclose y\\<rbrakk>\n       \\<Longrightarrow> x \\<^bold>\\<in> eclose z", "case (base y)"], ["proof (state)\nthis:\n  (x, y) \\<in> {(x, y). x \\<^bold>\\<in> y}\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       (x, y) \\<in> {(x, y). x \\<^bold>\\<in> y} \\<Longrightarrow>\n       x \\<^bold>\\<in> eclose y\n 2. \\<And>y z.\n       \\<lbrakk>(x, y) \\<in> {(x, y). x \\<^bold>\\<in> y}\\<^sup>+;\n        (y, z) \\<in> {(x, y). x \\<^bold>\\<in> y};\n        x \\<^bold>\\<in> eclose y\\<rbrakk>\n       \\<Longrightarrow> x \\<^bold>\\<in> eclose z", "thus ?case"], ["proof (prove)\nusing this:\n  (x, y) \\<in> {(x, y). x \\<^bold>\\<in> y}\n\ngoal (1 subgoal):\n 1. x \\<^bold>\\<in> eclose y", "by (metis hsubsetCE le_eclose mem_Collect_eq split_conv)"], ["proof (state)\nthis:\n  x \\<^bold>\\<in> eclose y\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(x, y) \\<in> {(x, y). x \\<^bold>\\<in> y}\\<^sup>+;\n        (y, z) \\<in> {(x, y). x \\<^bold>\\<in> y};\n        x \\<^bold>\\<in> eclose y\\<rbrakk>\n       \\<Longrightarrow> x \\<^bold>\\<in> eclose z", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(x, y) \\<in> {(x, y). x \\<^bold>\\<in> y}\\<^sup>+;\n        (y, z) \\<in> {(x, y). x \\<^bold>\\<in> y};\n        x \\<^bold>\\<in> eclose y\\<rbrakk>\n       \\<Longrightarrow> x \\<^bold>\\<in> eclose z", "case (step y z)"], ["proof (state)\nthis:\n  (x, y) \\<in> {(x, y). x \\<^bold>\\<in> y}\\<^sup>+\n  (y, z) \\<in> {(x, y). x \\<^bold>\\<in> y}\n  x \\<^bold>\\<in> eclose y\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(x, y) \\<in> {(x, y). x \\<^bold>\\<in> y}\\<^sup>+;\n        (y, z) \\<in> {(x, y). x \\<^bold>\\<in> y};\n        x \\<^bold>\\<in> eclose y\\<rbrakk>\n       \\<Longrightarrow> x \\<^bold>\\<in> eclose z", "thus ?case"], ["proof (prove)\nusing this:\n  (x, y) \\<in> {(x, y). x \\<^bold>\\<in> y}\\<^sup>+\n  (y, z) \\<in> {(x, y). x \\<^bold>\\<in> y}\n  x \\<^bold>\\<in> eclose y\n\ngoal (1 subgoal):\n 1. x \\<^bold>\\<in> eclose z", "by (metis hmem_eclose_le hsubsetD mem_Collect_eq split_conv)"], ["proof (state)\nthis:\n  x \\<^bold>\\<in> eclose z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<^bold>\\<in> eclose y\n\ngoal (1 subgoal):\n 1. x \\<^bold>\\<in> eclose y \\<Longrightarrow>\n    (x, y) \\<in> {(x, y). x \\<^bold>\\<in> y}\\<^sup>+", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<^bold>\\<in> eclose y \\<Longrightarrow>\n    (x, y) \\<in> {(x, y). x \\<^bold>\\<in> y}\\<^sup>+", "have \"Transset \\<lbrace>x \\<^bold>\\<in> eclose y. (x, y) \\<in> hmem_rel\\<rbrace>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Transset\n     \\<lbrace>x \\<^bold>\\<in> eclose y. (x, y) \\<in> hmem_rel\\<rbrace>", "using Transset_eclose"], ["proof (prove)\nusing this:\n  Transset (eclose ?X)\n\ngoal (1 subgoal):\n 1. Transset\n     \\<lbrace>x \\<^bold>\\<in> eclose y. (x, y) \\<in> hmem_rel\\<rbrace>", "by (auto simp: Transset_def hmem_rel_def intro: trancl_trans)"], ["proof (state)\nthis:\n  Transset \\<lbrace>x \\<^bold>\\<in> eclose y. (x, y) \\<in> hmem_rel\\<rbrace>\n\ngoal (1 subgoal):\n 1. x \\<^bold>\\<in> eclose y \\<Longrightarrow>\n    (x, y) \\<in> {(x, y). x \\<^bold>\\<in> y}\\<^sup>+", "hence \"eclose y \\<le> \\<lbrace>x \\<^bold>\\<in> eclose y. (x, y) \\<in> hmem_rel\\<rbrace>\""], ["proof (prove)\nusing this:\n  Transset \\<lbrace>x \\<^bold>\\<in> eclose y. (x, y) \\<in> hmem_rel\\<rbrace>\n\ngoal (1 subgoal):\n 1. eclose y\n    \\<le> \\<lbrace>x \\<^bold>\\<in> eclose y. (x, y) \\<in> hmem_rel\\<rbrace>", "by (rule eclose_minimal) (auto simp: le_HCollect_iff le_eclose hmem_rel_def)"], ["proof (state)\nthis:\n  eclose y\n  \\<le> \\<lbrace>x \\<^bold>\\<in> eclose y. (x, y) \\<in> hmem_rel\\<rbrace>\n\ngoal (1 subgoal):\n 1. x \\<^bold>\\<in> eclose y \\<Longrightarrow>\n    (x, y) \\<in> {(x, y). x \\<^bold>\\<in> y}\\<^sup>+", "moreover"], ["proof (state)\nthis:\n  eclose y\n  \\<le> \\<lbrace>x \\<^bold>\\<in> eclose y. (x, y) \\<in> hmem_rel\\<rbrace>\n\ngoal (1 subgoal):\n 1. x \\<^bold>\\<in> eclose y \\<Longrightarrow>\n    (x, y) \\<in> {(x, y). x \\<^bold>\\<in> y}\\<^sup>+", "assume \"x \\<^bold>\\<in> eclose y\""], ["proof (state)\nthis:\n  x \\<^bold>\\<in> eclose y\n\ngoal (1 subgoal):\n 1. x \\<^bold>\\<in> eclose y \\<Longrightarrow>\n    (x, y) \\<in> {(x, y). x \\<^bold>\\<in> y}\\<^sup>+", "ultimately"], ["proof (chain)\npicking this:\n  eclose y\n  \\<le> \\<lbrace>x \\<^bold>\\<in> eclose y. (x, y) \\<in> hmem_rel\\<rbrace>\n  x \\<^bold>\\<in> eclose y", "show \"(x, y) \\<in> trancl {(x, y). x \\<^bold>\\<in> y}\""], ["proof (prove)\nusing this:\n  eclose y\n  \\<le> \\<lbrace>x \\<^bold>\\<in> eclose y. (x, y) \\<in> hmem_rel\\<rbrace>\n  x \\<^bold>\\<in> eclose y\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> {(x, y). x \\<^bold>\\<in> y}\\<^sup>+", "by (metis HCollect_iff hmem_rel_def hsubsetD)"], ["proof (state)\nthis:\n  (x, y) \\<in> {(x, y). x \\<^bold>\\<in> y}\\<^sup>+\n\ngoal:\nNo subgoals!", "qed"], ["", "definition hmemrec :: \"((hf \\<Rightarrow> 'a) \\<Rightarrow> hf \\<Rightarrow> 'a) \\<Rightarrow> hf \\<Rightarrow> 'a\" where\n  \"hmemrec G \\<equiv> wfrec hmem_rel G\""], ["", "definition ecut :: \"(hf \\<Rightarrow> 'a) \\<Rightarrow> hf \\<Rightarrow> hf \\<Rightarrow> 'a\" where\n  \"ecut f x \\<equiv> (\\<lambda>y. if y \\<^bold>\\<in> eclose x then f y else undefined)\""], ["", "lemma hmemrec: \"hmemrec G a = G (ecut (hmemrec G) a) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hmemrec G a = G (ecut (hmemrec G) a) a", "by (simp add: cut_def ecut_def hmem_rel_iff_hmem_eclose def_wfrec [OF hmemrec_def wf_hmem_rel])"], ["", "text \\<open>This form avoids giant explosions in proofs.\\<close>"], ["", "lemma def_hmemrec: \"f \\<equiv> hmemrec G \\<Longrightarrow> f a = G (ecut (hmemrec G) a) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<equiv> hmemrec G \\<Longrightarrow> f a = G (ecut (hmemrec G) a) a", "by (metis hmemrec)"], ["", "lemma ecut_apply: \"y \\<^bold>\\<in> eclose x \\<Longrightarrow> ecut f x y = f y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<^bold>\\<in> eclose x \\<Longrightarrow> ecut f x y = f y", "by (metis ecut_def)"], ["", "lemma RepFun_ecut: \"y \\<le> z \\<Longrightarrow> RepFun y (ecut f z) = RepFun y f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<le> z \\<Longrightarrow> RepFun y (ecut f z) = RepFun y f", "apply (auto simp: hf_ext)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x u.\n       \\<lbrakk>y \\<le> z; u \\<^bold>\\<in> y;\n        \\<forall>xa.\n           (xa \\<^bold>\\<in> x) = (xa \\<^bold>\\<in> ecut f z u)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ua.\n                            ua \\<^bold>\\<in> y \\<and>\n                            (\\<forall>x.\n                                (x \\<^bold>\\<in> ecut f z u) =\n                                (x \\<^bold>\\<in> f ua))\n 2. \\<And>x u.\n       \\<lbrakk>y \\<le> z; u \\<^bold>\\<in> y;\n        \\<forall>xa. (xa \\<^bold>\\<in> x) = (xa \\<^bold>\\<in> f u)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ua.\n                            ua \\<^bold>\\<in> y \\<and>\n                            (\\<forall>x.\n                                (x \\<^bold>\\<in> f u) =\n                                (x \\<^bold>\\<in> ecut f z ua))", "apply (metis ecut_def hsubsetD le_eclose)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x u.\n       \\<lbrakk>y \\<le> z; u \\<^bold>\\<in> y;\n        \\<forall>xa. (xa \\<^bold>\\<in> x) = (xa \\<^bold>\\<in> f u)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ua.\n                            ua \\<^bold>\\<in> y \\<and>\n                            (\\<forall>x.\n                                (x \\<^bold>\\<in> f u) =\n                                (x \\<^bold>\\<in> ecut f z ua))", "apply (metis ecut_apply le_eclose hsubsetD)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text \\<open>Now, a stronger induction rule, for the transitive closure of membership\\<close>"], ["", "lemma hmem_rel_induct [case_names step]:\n  assumes ih: \"\\<And>x. (\\<And>y. (y,x) \\<in> hmem_rel \\<Longrightarrow> P y) \\<Longrightarrow> P x\" shows \"P x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P x", "have \"\\<And>y. (y,x) \\<in> hmem_rel \\<Longrightarrow> P y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y. (y, x) \\<in> hmem_rel \\<Longrightarrow> P y", "proof (induct x rule: hf_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y. (y, 0) \\<in> hmem_rel \\<Longrightarrow> P y\n 2. \\<And>x y ya.\n       \\<lbrakk>\\<And>y. (y, x) \\<in> hmem_rel \\<Longrightarrow> P y;\n        \\<And>ya. (ya, y) \\<in> hmem_rel \\<Longrightarrow> P ya;\n        x \\<^bold>\\<notin> y;\n        (ya, y \\<triangleleft> x) \\<in> hmem_rel\\<rbrakk>\n       \\<Longrightarrow> P ya", "case 0"], ["proof (state)\nthis:\n  (y, 0) \\<in> hmem_rel\n\ngoal (2 subgoals):\n 1. \\<And>y. (y, 0) \\<in> hmem_rel \\<Longrightarrow> P y\n 2. \\<And>x y ya.\n       \\<lbrakk>\\<And>y. (y, x) \\<in> hmem_rel \\<Longrightarrow> P y;\n        \\<And>ya. (ya, y) \\<in> hmem_rel \\<Longrightarrow> P ya;\n        x \\<^bold>\\<notin> y;\n        (ya, y \\<triangleleft> x) \\<in> hmem_rel\\<rbrakk>\n       \\<Longrightarrow> P ya", "thus ?case"], ["proof (prove)\nusing this:\n  (y, 0) \\<in> hmem_rel\n\ngoal (1 subgoal):\n 1. P y", "by (metis eclose_0 hmem_hempty hmem_rel_iff_hmem_eclose)"], ["proof (state)\nthis:\n  P y\n\ngoal (1 subgoal):\n 1. \\<And>x y ya.\n       \\<lbrakk>\\<And>y. (y, x) \\<in> hmem_rel \\<Longrightarrow> P y;\n        \\<And>ya. (ya, y) \\<in> hmem_rel \\<Longrightarrow> P ya;\n        x \\<^bold>\\<notin> y;\n        (ya, y \\<triangleleft> x) \\<in> hmem_rel\\<rbrakk>\n       \\<Longrightarrow> P ya", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y ya.\n       \\<lbrakk>\\<And>y. (y, x) \\<in> hmem_rel \\<Longrightarrow> P y;\n        \\<And>ya. (ya, y) \\<in> hmem_rel \\<Longrightarrow> P ya;\n        x \\<^bold>\\<notin> y;\n        (ya, y \\<triangleleft> x) \\<in> hmem_rel\\<rbrakk>\n       \\<Longrightarrow> P ya", "case (hinsert a b)"], ["proof (state)\nthis:\n  (?y, a) \\<in> hmem_rel \\<Longrightarrow> P ?y\n  (?y, b) \\<in> hmem_rel \\<Longrightarrow> P ?y\n  a \\<^bold>\\<notin> b\n  (y, b \\<triangleleft> a) \\<in> hmem_rel\n\ngoal (1 subgoal):\n 1. \\<And>x y ya.\n       \\<lbrakk>\\<And>y. (y, x) \\<in> hmem_rel \\<Longrightarrow> P y;\n        \\<And>ya. (ya, y) \\<in> hmem_rel \\<Longrightarrow> P ya;\n        x \\<^bold>\\<notin> y;\n        (ya, y \\<triangleleft> x) \\<in> hmem_rel\\<rbrakk>\n       \\<Longrightarrow> P ya", "thus ?case"], ["proof (prove)\nusing this:\n  (?y, a) \\<in> hmem_rel \\<Longrightarrow> P ?y\n  (?y, b) \\<in> hmem_rel \\<Longrightarrow> P ?y\n  a \\<^bold>\\<notin> b\n  (y, b \\<triangleleft> a) \\<in> hmem_rel\n\ngoal (1 subgoal):\n 1. P y", "by (metis assms eclose_hinsert hmem_hinsert hmem_rel_iff_hmem_eclose hunion_iff)"], ["proof (state)\nthis:\n  P y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (?y, x) \\<in> hmem_rel \\<Longrightarrow> P ?y\n\ngoal (1 subgoal):\n 1. P x", "thus ?thesis"], ["proof (prove)\nusing this:\n  (?y, x) \\<in> hmem_rel \\<Longrightarrow> P ?y\n\ngoal (1 subgoal):\n 1. P x", "by (metis assms)"], ["proof (state)\nthis:\n  P x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rank_HUnion_less:  \"x \\<noteq> 0 \\<Longrightarrow> rank (\\<Squnion>x) < rank x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> 0 \\<Longrightarrow> rank (\\<Squnion>x) < rank x", "apply (induct x rule: hf_induct, auto)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<noteq> 0 \\<Longrightarrow> rank (\\<Squnion>x) < rank x;\n        y \\<noteq> 0 \\<Longrightarrow> rank (\\<Squnion>y) < rank y;\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> rank x < rank y \\<squnion> succ (rank x)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<noteq> 0 \\<Longrightarrow> rank (\\<Squnion>x) < rank x;\n        y \\<noteq> 0 \\<Longrightarrow> rank (\\<Squnion>y) < rank y;\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> rank (\\<Squnion>y)\n                         < rank y \\<squnion> succ (rank x)", "apply (metis hmem_hinsert rank_hinsert rank_lt)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<noteq> 0 \\<Longrightarrow> rank (\\<Squnion>x) < rank x;\n        y \\<noteq> 0 \\<Longrightarrow> rank (\\<Squnion>y) < rank y;\n        x \\<^bold>\\<notin> y\\<rbrakk>\n       \\<Longrightarrow> rank (\\<Squnion>y)\n                         < rank y \\<squnion> succ (rank x)", "apply (metis HUnion_hempty Ord_lt_succ_iff_le Ord_rank hunion_hempty_right\n               less_supI1 less_supI2 rank_sup sup.cobounded2)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "corollary Sup_ne: \"x \\<noteq> 0 \\<Longrightarrow> \\<Squnion>x \\<noteq> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> 0 \\<Longrightarrow> \\<Squnion>x \\<noteq> x", "by (metis less_irrefl rank_HUnion_less)"], ["", "end"]]}