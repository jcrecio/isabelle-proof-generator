{"file_name": "/home/qj213/afp-2021-10-22/thys/HOL-CSP/Stop.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/HOL-CSP", "problem_names": ["lemma is_process_REP_STOP: \"is_process ({(s, X). s = []},{})\"", "lemma Rep_Abs_STOP : \"Rep_process (Abs_process ({(s, X). s = []},{})) = ({(s, X). s = []},{})\"", "lemma F_STOP : \"F STOP = {(s,X). s = []}\"", "lemma D_STOP: \"D STOP = {}\"", "lemma T_STOP: \"T STOP = {[]}\""], "translations": [["", "lemma is_process_REP_STOP: \"is_process ({(s, X). s = []},{})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_process ({(s, X). s = []}, {})", "by(simp add: is_process_def FAILURES_def DIVERGENCES_def)"], ["", "lemma Rep_Abs_STOP : \"Rep_process (Abs_process ({(s, X). s = []},{})) = ({(s, X). s = []},{})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_process (Abs_process ({(s, X). s = []}, {})) =\n    ({(s, X). s = []}, {})", "by(subst Abs_process_inverse, simp add: Rep_process is_process_REP_STOP, auto)"], ["", "lemma F_STOP : \"F STOP = {(s,X). s = []}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F STOP = {(s, X). s = []}", "by(simp add: STOP_def FAILURES_def F_def Rep_Abs_STOP)"], ["", "lemma D_STOP: \"D STOP = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D STOP = {}", "by(simp add: STOP_def DIVERGENCES_def D_def Rep_Abs_STOP)"], ["", "lemma T_STOP: \"T STOP = {[]}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T STOP = {[]}", "by(simp add: STOP_def TRACES_def FAILURES_def T_def Rep_Abs_STOP)"], ["", "end"]]}