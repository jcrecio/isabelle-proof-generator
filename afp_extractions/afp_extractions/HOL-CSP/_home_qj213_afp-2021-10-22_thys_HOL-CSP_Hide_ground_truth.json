{"file_name": "/home/qj213/afp-2021-10-22/thys/HOL-CSP/Hide.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/HOL-CSP", "problem_names": ["lemma hiding_tickFree : \"tickFree s \\<longleftrightarrow> tickFree (trace_hide s (ev`A))\"", "lemma hiding_fronttickFree : \"front_tickFree s \\<Longrightarrow> front_tickFree (trace_hide s (ev`A))\"", "lemma trace_hide_union[simp] : \"trace_hide t (ev ` (A \\<union> B)) = trace_hide (trace_hide t (ev ` A)) (ev ` B)\"", "lemma isInfHiddenRun_1: \"isInfHiddenRun f P A \\<longleftrightarrow> strict_mono f \\<and> (\\<forall> i. f i \\<in> T P) \\<and>  \n                                                  (\\<forall>i. \\<exists>t. f i = f 0 @ t \\<and> set t \\<subseteq>  (ev ` A))\"\n                         (is \"?A \\<longleftrightarrow> ?B\")", "lemma inf_hidden:\n  assumes as1:\"\\<forall>t. trace_hide t (ev ` A) = trace_hide s (ev ` A) \\<longrightarrow> (t, ev ` A) \\<notin> F P\"\n      and as2:\"s \\<in> T P\"\n    shows \"\\<exists>f. isInfHiddenRun f P A \\<and> s \\<in> range f\"", "lemma trace_hide_append: \"s @ t = trace_hide ta (ev ` A) \\<Longrightarrow> \\<exists>ss tt. ta = ss@tt \\<and> \n                                                                     s = trace_hide ss (ev ` A) \\<and> \n                                                                     t = trace_hide tt (ev ` A)\"", "lemma hiding_maintains_is_process:\n      \"is_process     ({(s,X). \\<exists> t. s = trace_hide t (ev`A) \\<and> (t,X \\<union> (ev`A)) \\<in> F P} \\<union>\n                          {(s,X). s \\<in> div_hide P A}, div_hide P A)\" (is \"is_process(?f, ?d)\")", "lemma Rep_Abs_Hiding: \"Rep_process (Abs_process \n                                  ({(s,X). \\<exists> t. s = trace_hide t (ev`A) \\<and> (t,X \\<union> (ev`A)) \\<in> F P} \\<union>\n                                   {(s,X). s \\<in> div_hide P A}, div_hide P A))\n                                  = ({(s,X). \\<exists> t. s = trace_hide t (ev`A) \\<and> (t,X \\<union> (ev`A)) \\<in> F P} \\<union>\n                                     {(s,X). s \\<in> div_hide P A}, div_hide P A)\"", "lemma F_hiding: \"F(P \\\\ A) = {(s,X). \\<exists> t. s = trace_hide t (ev`A) \\<and> (t,X \\<union> (ev`A)) \\<in> F P} \\<union>\n                              {(s,X). s \\<in> div_hide P A}\"", "lemma D_hiding: \"D(P \\\\ A) = div_hide P A\"", "lemma T_hiding: \"T(P \\\\ A) = {s. \\<exists>t. s = trace_hide t (ev`A) \\<and>  (t, ev`A) \\<in> F P} \\<union> div_hide P A\"", "lemma mono_hiding[simp]: \"(P::'a process) \\<sqsubseteq> Q \\<Longrightarrow> (P \\\\ A) \\<sqsubseteq> (Q \\\\ A)\"", "lemma cont_hiding1 : \"chain Y \\<Longrightarrow> chain (\\<lambda> i. (Y i \\\\ A))\"", "lemma KoenigLemma: \n  assumes *:\"infinite (Tr::'a list set)\" and **:\"\\<forall>i. finite{t. \\<exists>t'\\<in>Tr. t = take i t'}\"\n  shows \"\\<exists>(f::nat \\<Rightarrow> 'a list). strict_mono f \\<and> range f \\<subseteq> {t. \\<exists>t'\\<in>Tr. t \\<le> t'}\"", "lemma div_hiding_lub :  \"finite (A::'a set) \\<Longrightarrow> chain Y \\<Longrightarrow> D (\\<Squnion> i. (Y i \\\\ A)) \\<subseteq> D ((\\<Squnion> i. Y i) \\\\ A)\"", "lemma cont_hiding2 : \"finite A \\<Longrightarrow> chain Y \\<Longrightarrow> ((\\<Squnion> i. Y i) \\\\ A) = (\\<Squnion> i. (Y i \\\\ A))\"", "lemma cont_hiding_base[simp] : \"finite A \\<Longrightarrow> cont (\\<lambda>x. x \\\\ A)\"", "lemma hiding_cont[simp]:  \"finite A \\<Longrightarrow> cont f \\<Longrightarrow> cont (\\<lambda>x. f x \\\\ A)\""], "translations": [["", "lemma hiding_tickFree : \"tickFree s \\<longleftrightarrow> tickFree (trace_hide s (ev`A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tickFree s = tickFree (trace_hide s (ev ` A))", "by (auto simp add: tickFree_def)"], ["", "lemma hiding_fronttickFree : \"front_tickFree s \\<Longrightarrow> front_tickFree (trace_hide s (ev`A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. front_tickFree s \\<Longrightarrow>\n    front_tickFree (trace_hide s (ev ` A))", "apply(auto simp add: front_tickFree_charn tickFree_def split:if_splits)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t x.\n       \\<lbrakk>tick \\<notin> set t; s = t @ [ev x];\n        \\<forall>a ta.\n           trace_hide t (ev ` A) = ta @ [a] \\<longrightarrow>\n           tick \\<in> set ta;\n        x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> trace_hide t (ev ` A) = []", "by (metis hiding_tickFree list_nonMt_append tickFree_append tickFree_def)"], ["", "lemma trace_hide_union[simp] : \"trace_hide t (ev ` (A \\<union> B)) = trace_hide (trace_hide t (ev ` A)) (ev ` B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trace_hide t (ev ` (A \\<union> B)) =\n    trace_hide (trace_hide t (ev ` A)) (ev ` B)", "by (subgoal_tac \"ev ` (A \\<union> B) = (ev ` A) \\<union> (ev ` B)\") auto"], ["", "abbreviation \"isInfHiddenRun f P A \\<equiv> strict_mono f \\<and> (\\<forall> i. f i \\<in> T P) \\<and> \n                                      (\\<forall> i. trace_hide (f i) (ev ` A) = trace_hide (f (0::nat)) (ev ` A))\""], ["", "lemma isInfHiddenRun_1: \"isInfHiddenRun f P A \\<longleftrightarrow> strict_mono f \\<and> (\\<forall> i. f i \\<in> T P) \\<and>  \n                                                  (\\<forall>i. \\<exists>t. f i = f 0 @ t \\<and> set t \\<subseteq>  (ev ` A))\"\n                         (is \"?A \\<longleftrightarrow> ?B\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. isInfHiddenRun f P A =\n    (strict_mono f \\<and>\n     (\\<forall>i. f i \\<in> T P) \\<and>\n     (\\<forall>i.\n         \\<exists>t. f i = f 0 @ t \\<and> set t \\<subseteq> ev ` A))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. isInfHiddenRun f P A \\<Longrightarrow>\n    strict_mono f \\<and>\n    (\\<forall>i. f i \\<in> T P) \\<and>\n    (\\<forall>i. \\<exists>t. f i = f 0 @ t \\<and> set t \\<subseteq> ev ` A)\n 2. strict_mono f \\<and>\n    (\\<forall>i. f i \\<in> T P) \\<and>\n    (\\<forall>i.\n        \\<exists>t.\n           f i = f 0 @ t \\<and> set t \\<subseteq> ev ` A) \\<Longrightarrow>\n    isInfHiddenRun f P A", "assume A: ?A"], ["proof (state)\nthis:\n  isInfHiddenRun f P A\n\ngoal (2 subgoals):\n 1. isInfHiddenRun f P A \\<Longrightarrow>\n    strict_mono f \\<and>\n    (\\<forall>i. f i \\<in> T P) \\<and>\n    (\\<forall>i. \\<exists>t. f i = f 0 @ t \\<and> set t \\<subseteq> ev ` A)\n 2. strict_mono f \\<and>\n    (\\<forall>i. f i \\<in> T P) \\<and>\n    (\\<forall>i.\n        \\<exists>t.\n           f i = f 0 @ t \\<and> set t \\<subseteq> ev ` A) \\<Longrightarrow>\n    isInfHiddenRun f P A", "{"], ["proof (state)\nthis:\n  isInfHiddenRun f P A\n\ngoal (2 subgoals):\n 1. isInfHiddenRun f P A \\<Longrightarrow>\n    strict_mono f \\<and>\n    (\\<forall>i. f i \\<in> T P) \\<and>\n    (\\<forall>i. \\<exists>t. f i = f 0 @ t \\<and> set t \\<subseteq> ev ` A)\n 2. strict_mono f \\<and>\n    (\\<forall>i. f i \\<in> T P) \\<and>\n    (\\<forall>i.\n        \\<exists>t.\n           f i = f 0 @ t \\<and> set t \\<subseteq> ev ` A) \\<Longrightarrow>\n    isInfHiddenRun f P A", "fix i"], ["proof (state)\ngoal (2 subgoals):\n 1. isInfHiddenRun f P A \\<Longrightarrow>\n    strict_mono f \\<and>\n    (\\<forall>i. f i \\<in> T P) \\<and>\n    (\\<forall>i. \\<exists>t. f i = f 0 @ t \\<and> set t \\<subseteq> ev ` A)\n 2. strict_mono f \\<and>\n    (\\<forall>i. f i \\<in> T P) \\<and>\n    (\\<forall>i.\n        \\<exists>t.\n           f i = f 0 @ t \\<and> set t \\<subseteq> ev ` A) \\<Longrightarrow>\n    isInfHiddenRun f P A", "from A"], ["proof (chain)\npicking this:\n  isInfHiddenRun f P A", "have \"f 0 \\<le> f i\""], ["proof (prove)\nusing this:\n  isInfHiddenRun f P A\n\ngoal (1 subgoal):\n 1. f 0 \\<le> f i", "using strict_mono_less_eq"], ["proof (prove)\nusing this:\n  isInfHiddenRun f P A\n  strict_mono ?f \\<Longrightarrow> (?f ?x \\<le> ?f ?y) = (?x \\<le> ?y)\n\ngoal (1 subgoal):\n 1. f 0 \\<le> f i", "by blast"], ["proof (state)\nthis:\n  f 0 \\<le> f i\n\ngoal (2 subgoals):\n 1. isInfHiddenRun f P A \\<Longrightarrow>\n    strict_mono f \\<and>\n    (\\<forall>i. f i \\<in> T P) \\<and>\n    (\\<forall>i. \\<exists>t. f i = f 0 @ t \\<and> set t \\<subseteq> ev ` A)\n 2. strict_mono f \\<and>\n    (\\<forall>i. f i \\<in> T P) \\<and>\n    (\\<forall>i.\n        \\<exists>t.\n           f i = f 0 @ t \\<and> set t \\<subseteq> ev ` A) \\<Longrightarrow>\n    isInfHiddenRun f P A", "then"], ["proof (chain)\npicking this:\n  f 0 \\<le> f i", "obtain t where B:\"f i = f 0 @ t\""], ["proof (prove)\nusing this:\n  f 0 \\<le> f i\n\ngoal (1 subgoal):\n 1. (\\<And>t. f i = f 0 @ t \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis le_list_def)"], ["proof (state)\nthis:\n  f i = f 0 @ t\n\ngoal (2 subgoals):\n 1. isInfHiddenRun f P A \\<Longrightarrow>\n    strict_mono f \\<and>\n    (\\<forall>i. f i \\<in> T P) \\<and>\n    (\\<forall>i. \\<exists>t. f i = f 0 @ t \\<and> set t \\<subseteq> ev ` A)\n 2. strict_mono f \\<and>\n    (\\<forall>i. f i \\<in> T P) \\<and>\n    (\\<forall>i.\n        \\<exists>t.\n           f i = f 0 @ t \\<and> set t \\<subseteq> ev ` A) \\<Longrightarrow>\n    isInfHiddenRun f P A", "hence \"trace_hide (f i) (ev ` A) = (trace_hide (f 0) (ev ` A)) @ (trace_hide t (ev ` A))\""], ["proof (prove)\nusing this:\n  f i = f 0 @ t\n\ngoal (1 subgoal):\n 1. trace_hide (f i) (ev ` A) =\n    trace_hide (f 0) (ev ` A) @ trace_hide t (ev ` A)", "by simp"], ["proof (state)\nthis:\n  trace_hide (f i) (ev ` A) =\n  trace_hide (f 0) (ev ` A) @ trace_hide t (ev ` A)\n\ngoal (2 subgoals):\n 1. isInfHiddenRun f P A \\<Longrightarrow>\n    strict_mono f \\<and>\n    (\\<forall>i. f i \\<in> T P) \\<and>\n    (\\<forall>i. \\<exists>t. f i = f 0 @ t \\<and> set t \\<subseteq> ev ` A)\n 2. strict_mono f \\<and>\n    (\\<forall>i. f i \\<in> T P) \\<and>\n    (\\<forall>i.\n        \\<exists>t.\n           f i = f 0 @ t \\<and> set t \\<subseteq> ev ` A) \\<Longrightarrow>\n    isInfHiddenRun f P A", "with A"], ["proof (chain)\npicking this:\n  isInfHiddenRun f P A\n  trace_hide (f i) (ev ` A) =\n  trace_hide (f 0) (ev ` A) @ trace_hide t (ev ` A)", "have \"trace_hide t (ev ` A) = []\""], ["proof (prove)\nusing this:\n  isInfHiddenRun f P A\n  trace_hide (f i) (ev ` A) =\n  trace_hide (f 0) (ev ` A) @ trace_hide t (ev ` A)\n\ngoal (1 subgoal):\n 1. trace_hide t (ev ` A) = []", "by (metis append_self_conv)"], ["proof (state)\nthis:\n  trace_hide t (ev ` A) = []\n\ngoal (2 subgoals):\n 1. isInfHiddenRun f P A \\<Longrightarrow>\n    strict_mono f \\<and>\n    (\\<forall>i. f i \\<in> T P) \\<and>\n    (\\<forall>i. \\<exists>t. f i = f 0 @ t \\<and> set t \\<subseteq> ev ` A)\n 2. strict_mono f \\<and>\n    (\\<forall>i. f i \\<in> T P) \\<and>\n    (\\<forall>i.\n        \\<exists>t.\n           f i = f 0 @ t \\<and> set t \\<subseteq> ev ` A) \\<Longrightarrow>\n    isInfHiddenRun f P A", "with B"], ["proof (chain)\npicking this:\n  f i = f 0 @ t\n  trace_hide t (ev ` A) = []", "have \"\\<exists>t. f i = f 0 @ t \\<and> set t \\<subseteq>  (ev ` A)\""], ["proof (prove)\nusing this:\n  f i = f 0 @ t\n  trace_hide t (ev ` A) = []\n\ngoal (1 subgoal):\n 1. \\<exists>t. f i = f 0 @ t \\<and> set t \\<subseteq> ev ` A", "using filter_empty_conv[of \"\\<lambda>x. x \\<notin> (ev ` A)\"]"], ["proof (prove)\nusing this:\n  f i = f 0 @ t\n  trace_hide t (ev ` A) = []\n  (trace_hide ?xs (ev ` A) = []) =\n  (\\<forall>x\\<in>set ?xs. \\<not> x \\<notin> ev ` A)\n\ngoal (1 subgoal):\n 1. \\<exists>t. f i = f 0 @ t \\<and> set t \\<subseteq> ev ` A", "by auto"], ["proof (state)\nthis:\n  \\<exists>t. f i = f 0 @ t \\<and> set t \\<subseteq> ev ` A\n\ngoal (2 subgoals):\n 1. isInfHiddenRun f P A \\<Longrightarrow>\n    strict_mono f \\<and>\n    (\\<forall>i. f i \\<in> T P) \\<and>\n    (\\<forall>i. \\<exists>t. f i = f 0 @ t \\<and> set t \\<subseteq> ev ` A)\n 2. strict_mono f \\<and>\n    (\\<forall>i. f i \\<in> T P) \\<and>\n    (\\<forall>i.\n        \\<exists>t.\n           f i = f 0 @ t \\<and> set t \\<subseteq> ev ` A) \\<Longrightarrow>\n    isInfHiddenRun f P A", "}"], ["proof (state)\nthis:\n  \\<exists>t. f ?i2 = f 0 @ t \\<and> set t \\<subseteq> ev ` A\n\ngoal (2 subgoals):\n 1. isInfHiddenRun f P A \\<Longrightarrow>\n    strict_mono f \\<and>\n    (\\<forall>i. f i \\<in> T P) \\<and>\n    (\\<forall>i. \\<exists>t. f i = f 0 @ t \\<and> set t \\<subseteq> ev ` A)\n 2. strict_mono f \\<and>\n    (\\<forall>i. f i \\<in> T P) \\<and>\n    (\\<forall>i.\n        \\<exists>t.\n           f i = f 0 @ t \\<and> set t \\<subseteq> ev ` A) \\<Longrightarrow>\n    isInfHiddenRun f P A", "with A"], ["proof (chain)\npicking this:\n  isInfHiddenRun f P A\n  \\<exists>t. f ?i2 = f 0 @ t \\<and> set t \\<subseteq> ev ` A", "show ?B"], ["proof (prove)\nusing this:\n  isInfHiddenRun f P A\n  \\<exists>t. f ?i2 = f 0 @ t \\<and> set t \\<subseteq> ev ` A\n\ngoal (1 subgoal):\n 1. strict_mono f \\<and>\n    (\\<forall>i. f i \\<in> T P) \\<and>\n    (\\<forall>i. \\<exists>t. f i = f 0 @ t \\<and> set t \\<subseteq> ev ` A)", "by simp"], ["proof (state)\nthis:\n  strict_mono f \\<and>\n  (\\<forall>i. f i \\<in> T P) \\<and>\n  (\\<forall>i. \\<exists>t. f i = f 0 @ t \\<and> set t \\<subseteq> ev ` A)\n\ngoal (1 subgoal):\n 1. strict_mono f \\<and>\n    (\\<forall>i. f i \\<in> T P) \\<and>\n    (\\<forall>i.\n        \\<exists>t.\n           f i = f 0 @ t \\<and> set t \\<subseteq> ev ` A) \\<Longrightarrow>\n    isInfHiddenRun f P A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. strict_mono f \\<and>\n    (\\<forall>i. f i \\<in> T P) \\<and>\n    (\\<forall>i.\n        \\<exists>t.\n           f i = f 0 @ t \\<and> set t \\<subseteq> ev ` A) \\<Longrightarrow>\n    isInfHiddenRun f P A", "assume B: ?B"], ["proof (state)\nthis:\n  strict_mono f \\<and>\n  (\\<forall>i. f i \\<in> T P) \\<and>\n  (\\<forall>i. \\<exists>t. f i = f 0 @ t \\<and> set t \\<subseteq> ev ` A)\n\ngoal (1 subgoal):\n 1. strict_mono f \\<and>\n    (\\<forall>i. f i \\<in> T P) \\<and>\n    (\\<forall>i.\n        \\<exists>t.\n           f i = f 0 @ t \\<and> set t \\<subseteq> ev ` A) \\<Longrightarrow>\n    isInfHiddenRun f P A", "{"], ["proof (state)\nthis:\n  strict_mono f \\<and>\n  (\\<forall>i. f i \\<in> T P) \\<and>\n  (\\<forall>i. \\<exists>t. f i = f 0 @ t \\<and> set t \\<subseteq> ev ` A)\n\ngoal (1 subgoal):\n 1. strict_mono f \\<and>\n    (\\<forall>i. f i \\<in> T P) \\<and>\n    (\\<forall>i.\n        \\<exists>t.\n           f i = f 0 @ t \\<and> set t \\<subseteq> ev ` A) \\<Longrightarrow>\n    isInfHiddenRun f P A", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. strict_mono f \\<and>\n    (\\<forall>i. f i \\<in> T P) \\<and>\n    (\\<forall>i.\n        \\<exists>t.\n           f i = f 0 @ t \\<and> set t \\<subseteq> ev ` A) \\<Longrightarrow>\n    isInfHiddenRun f P A", "from B"], ["proof (chain)\npicking this:\n  strict_mono f \\<and>\n  (\\<forall>i. f i \\<in> T P) \\<and>\n  (\\<forall>i. \\<exists>t. f i = f 0 @ t \\<and> set t \\<subseteq> ev ` A)", "obtain t where B:\"f i = f 0 @ t\" and \"set t \\<subseteq>  (ev ` A)\""], ["proof (prove)\nusing this:\n  strict_mono f \\<and>\n  (\\<forall>i. f i \\<in> T P) \\<and>\n  (\\<forall>i. \\<exists>t. f i = f 0 @ t \\<and> set t \\<subseteq> ev ` A)\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>f i = f 0 @ t; set t \\<subseteq> ev ` A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  f i = f 0 @ t\n  set t \\<subseteq> ev ` A\n\ngoal (1 subgoal):\n 1. strict_mono f \\<and>\n    (\\<forall>i. f i \\<in> T P) \\<and>\n    (\\<forall>i.\n        \\<exists>t.\n           f i = f 0 @ t \\<and> set t \\<subseteq> ev ` A) \\<Longrightarrow>\n    isInfHiddenRun f P A", "hence \"trace_hide (f i) (ev ` A) = (trace_hide (f 0) (ev ` A))\""], ["proof (prove)\nusing this:\n  f i = f 0 @ t\n  set t \\<subseteq> ev ` A\n\ngoal (1 subgoal):\n 1. trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)", "by (simp add: subset_iff)"], ["proof (state)\nthis:\n  trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\n\ngoal (1 subgoal):\n 1. strict_mono f \\<and>\n    (\\<forall>i. f i \\<in> T P) \\<and>\n    (\\<forall>i.\n        \\<exists>t.\n           f i = f 0 @ t \\<and> set t \\<subseteq> ev ` A) \\<Longrightarrow>\n    isInfHiddenRun f P A", "}"], ["proof (state)\nthis:\n  trace_hide (f ?i2) (ev ` A) = trace_hide (f 0) (ev ` A)\n\ngoal (1 subgoal):\n 1. strict_mono f \\<and>\n    (\\<forall>i. f i \\<in> T P) \\<and>\n    (\\<forall>i.\n        \\<exists>t.\n           f i = f 0 @ t \\<and> set t \\<subseteq> ev ` A) \\<Longrightarrow>\n    isInfHiddenRun f P A", "with B"], ["proof (chain)\npicking this:\n  strict_mono f \\<and>\n  (\\<forall>i. f i \\<in> T P) \\<and>\n  (\\<forall>i. \\<exists>t. f i = f 0 @ t \\<and> set t \\<subseteq> ev ` A)\n  trace_hide (f ?i2) (ev ` A) = trace_hide (f 0) (ev ` A)", "show ?A"], ["proof (prove)\nusing this:\n  strict_mono f \\<and>\n  (\\<forall>i. f i \\<in> T P) \\<and>\n  (\\<forall>i. \\<exists>t. f i = f 0 @ t \\<and> set t \\<subseteq> ev ` A)\n  trace_hide (f ?i2) (ev ` A) = trace_hide (f 0) (ev ` A)\n\ngoal (1 subgoal):\n 1. isInfHiddenRun f P A", "by simp"], ["proof (state)\nthis:\n  isInfHiddenRun f P A\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>The Hiding Operator Definition\\<close>"], ["", "abbreviation \"div_hide P A \\<equiv> {s. \\<exists> t u. front_tickFree u \\<and>\n                                        tickFree t \\<and> s = trace_hide t (ev ` A) @ u \\<and> \n                                        (t \\<in> D P \\<or> (\\<exists> f. isInfHiddenRun f P A \\<and> t \\<in> range f))}\""], ["", "definition hiding  :: \"['\\<alpha> process ,'\\<alpha> set] => '\\<alpha> process\"     (\"_ \\\\ _\" [73,72] 72)  where  \n  \"P \\\\ A \\<equiv> Abs_process ({(s,X). \\<exists> t. s = trace_hide t (ev`A) \\<and> (t,X \\<union> (ev`A)) \\<in> F P} \\<union>\n                          {(s,X). s \\<in> div_hide P A}, div_hide P A)\""], ["", "lemma inf_hidden:\n  assumes as1:\"\\<forall>t. trace_hide t (ev ` A) = trace_hide s (ev ` A) \\<longrightarrow> (t, ev ` A) \\<notin> F P\"\n      and as2:\"s \\<in> T P\"\n    shows \"\\<exists>f. isInfHiddenRun f P A \\<and> s \\<in> range f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f. isInfHiddenRun f P A \\<and> s \\<in> range f", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. isInfHiddenRun ?f P A \\<and> s \\<in> range ?f", "define f where A:\"f = rec_nat s (\\<lambda>i t. (let e = SOME e. e \\<in> ev`A \\<and> t @ [e] \\<in> T P in t @ [e]))\""], ["proof (state)\nthis:\n  f =\n  rec_nat s\n   (\\<lambda>i t.\n       let e = SOME e. e \\<in> ev ` A \\<and> t @ [e] \\<in> T P in t @ [e])\n\ngoal (1 subgoal):\n 1. isInfHiddenRun ?f P A \\<and> s \\<in> range ?f", "hence B:\"strict_mono f\""], ["proof (prove)\nusing this:\n  f =\n  rec_nat s\n   (\\<lambda>i t.\n       let e = SOME e. e \\<in> ev ` A \\<and> t @ [e] \\<in> T P in t @ [e])\n\ngoal (1 subgoal):\n 1. strict_mono f", "by (simp add:strict_mono_def lift_Suc_mono_less_iff)"], ["proof (state)\nthis:\n  strict_mono f\n\ngoal (1 subgoal):\n 1. isInfHiddenRun ?f P A \\<and> s \\<in> range ?f", "from A"], ["proof (chain)\npicking this:\n  f =\n  rec_nat s\n   (\\<lambda>i t.\n       let e = SOME e. e \\<in> ev ` A \\<and> t @ [e] \\<in> T P in t @ [e])", "have C:\"s \\<in> range f\""], ["proof (prove)\nusing this:\n  f =\n  rec_nat s\n   (\\<lambda>i t.\n       let e = SOME e. e \\<in> ev ` A \\<and> t @ [e] \\<in> T P in t @ [e])\n\ngoal (1 subgoal):\n 1. s \\<in> range f", "by (metis (mono_tags, lifting) old.nat.simps(6) range_eqI)"], ["proof (state)\nthis:\n  s \\<in> range f\n\ngoal (1 subgoal):\n 1. isInfHiddenRun ?f P A \\<and> s \\<in> range ?f", "{"], ["proof (state)\nthis:\n  s \\<in> range f\n\ngoal (1 subgoal):\n 1. isInfHiddenRun ?f P A \\<and> s \\<in> range ?f", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. isInfHiddenRun ?f P A \\<and> s \\<in> range ?f", "have \"f i \\<in> T P \\<and> trace_hide (f i) (ev ` A) = (trace_hide s (ev ` A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f i \\<in> T P \\<and> trace_hide (f i) (ev ` A) = trace_hide s (ev ` A)", "proof(induct i, simp add: A Nil_elem_T as2)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       f i \\<in> T P \\<and>\n       trace_hide (f i) (ev ` A) = trace_hide s (ev ` A) \\<Longrightarrow>\n       f (Suc i) \\<in> T P \\<and>\n       trace_hide (f (Suc i)) (ev ` A) = trace_hide s (ev ` A)", "case (Suc i)"], ["proof (state)\nthis:\n  f i \\<in> T P \\<and> trace_hide (f i) (ev ` A) = trace_hide s (ev ` A)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       f i \\<in> T P \\<and>\n       trace_hide (f i) (ev ` A) = trace_hide s (ev ` A) \\<Longrightarrow>\n       f (Suc i) \\<in> T P \\<and>\n       trace_hide (f (Suc i)) (ev ` A) = trace_hide s (ev ` A)", "with as1[THEN spec, of \"f i\"]"], ["proof (chain)\npicking this:\n  trace_hide (f i) (ev ` A) = trace_hide s (ev ` A) \\<longrightarrow>\n  (f i, ev ` A) \\<notin> F P\n  f i \\<in> T P \\<and> trace_hide (f i) (ev ` A) = trace_hide s (ev ` A)", "have a:\"\\<exists>e. e \\<in> ev`A \\<and> f i @ [e] \\<in> T P\""], ["proof (prove)\nusing this:\n  trace_hide (f i) (ev ` A) = trace_hide s (ev ` A) \\<longrightarrow>\n  (f i, ev ` A) \\<notin> F P\n  f i \\<in> T P \\<and> trace_hide (f i) (ev ` A) = trace_hide s (ev ` A)\n\ngoal (1 subgoal):\n 1. \\<exists>e. e \\<in> ev ` A \\<and> f i @ [e] \\<in> T P", "using is_processT5_S7"], ["proof (prove)\nusing this:\n  trace_hide (f i) (ev ` A) = trace_hide s (ev ` A) \\<longrightarrow>\n  (f i, ev ` A) \\<notin> F P\n  f i \\<in> T P \\<and> trace_hide (f i) (ev ` A) = trace_hide s (ev ` A)\n  \\<lbrakk>?t \\<in> T ?P; (?t, ?A) \\<notin> F ?P\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x. x \\<in> ?A \\<and> ?t @ [x] \\<in> T ?P\n\ngoal (1 subgoal):\n 1. \\<exists>e. e \\<in> ev ` A \\<and> f i @ [e] \\<in> T P", "by force"], ["proof (state)\nthis:\n  \\<exists>e. e \\<in> ev ` A \\<and> f i @ [e] \\<in> T P\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       f i \\<in> T P \\<and>\n       trace_hide (f i) (ev ` A) = trace_hide s (ev ` A) \\<Longrightarrow>\n       f (Suc i) \\<in> T P \\<and>\n       trace_hide (f (Suc i)) (ev ` A) = trace_hide s (ev ` A)", "from A"], ["proof (chain)\npicking this:\n  f =\n  rec_nat s\n   (\\<lambda>i t.\n       let e = SOME e. e \\<in> ev ` A \\<and> t @ [e] \\<in> T P in t @ [e])", "have b:\"f (Suc i) = (let e = SOME e. e \\<in> ev`A \\<and> f i @ [e] \\<in> T P in  f i @ [e])\""], ["proof (prove)\nusing this:\n  f =\n  rec_nat s\n   (\\<lambda>i t.\n       let e = SOME e. e \\<in> ev ` A \\<and> t @ [e] \\<in> T P in t @ [e])\n\ngoal (1 subgoal):\n 1. f (Suc i) =\n    (let e = SOME e. e \\<in> ev ` A \\<and> f i @ [e] \\<in> T P in f i @ [e])", "by simp"], ["proof (state)\nthis:\n  f (Suc i) =\n  (let e = SOME e. e \\<in> ev ` A \\<and> f i @ [e] \\<in> T P in f i @ [e])\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       f i \\<in> T P \\<and>\n       trace_hide (f i) (ev ` A) = trace_hide s (ev ` A) \\<Longrightarrow>\n       f (Suc i) \\<in> T P \\<and>\n       trace_hide (f (Suc i)) (ev ` A) = trace_hide s (ev ` A)", "with Suc a[THEN someI_ex]"], ["proof (chain)\npicking this:\n  f i \\<in> T P \\<and> trace_hide (f i) (ev ` A) = trace_hide s (ev ` A)\n  (SOME x. x \\<in> ev ` A \\<and> f i @ [x] \\<in> T P) \\<in> ev ` A \\<and>\n  f i @ [SOME x. x \\<in> ev ` A \\<and> f i @ [x] \\<in> T P] \\<in> T P\n  f (Suc i) =\n  (let e = SOME e. e \\<in> ev ` A \\<and> f i @ [e] \\<in> T P in f i @ [e])", "show ?case"], ["proof (prove)\nusing this:\n  f i \\<in> T P \\<and> trace_hide (f i) (ev ` A) = trace_hide s (ev ` A)\n  (SOME x. x \\<in> ev ` A \\<and> f i @ [x] \\<in> T P) \\<in> ev ` A \\<and>\n  f i @ [SOME x. x \\<in> ev ` A \\<and> f i @ [x] \\<in> T P] \\<in> T P\n  f (Suc i) =\n  (let e = SOME e. e \\<in> ev ` A \\<and> f i @ [e] \\<in> T P in f i @ [e])\n\ngoal (1 subgoal):\n 1. f (Suc i) \\<in> T P \\<and>\n    trace_hide (f (Suc i)) (ev ` A) = trace_hide s (ev ` A)", "by simp"], ["proof (state)\nthis:\n  f (Suc i) \\<in> T P \\<and>\n  trace_hide (f (Suc i)) (ev ` A) = trace_hide s (ev ` A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f i \\<in> T P \\<and> trace_hide (f i) (ev ` A) = trace_hide s (ev ` A)\n\ngoal (1 subgoal):\n 1. isInfHiddenRun ?f P A \\<and> s \\<in> range ?f", "}"], ["proof (state)\nthis:\n  f ?i2 \\<in> T P \\<and> trace_hide (f ?i2) (ev ` A) = trace_hide s (ev ` A)\n\ngoal (1 subgoal):\n 1. isInfHiddenRun ?f P A \\<and> s \\<in> range ?f", "with B C"], ["proof (chain)\npicking this:\n  strict_mono f\n  s \\<in> range f\n  f ?i2 \\<in> T P \\<and> trace_hide (f ?i2) (ev ` A) = trace_hide s (ev ` A)", "show \"isInfHiddenRun f P A \\<and> s \\<in> range f\""], ["proof (prove)\nusing this:\n  strict_mono f\n  s \\<in> range f\n  f ?i2 \\<in> T P \\<and> trace_hide (f ?i2) (ev ` A) = trace_hide s (ev ` A)\n\ngoal (1 subgoal):\n 1. isInfHiddenRun f P A \\<and> s \\<in> range f", "by simp"], ["proof (state)\nthis:\n  isInfHiddenRun f P A \\<and> s \\<in> range f\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Consequences\\<close>"], ["", "lemma trace_hide_append: \"s @ t = trace_hide ta (ev ` A) \\<Longrightarrow> \\<exists>ss tt. ta = ss@tt \\<and> \n                                                                     s = trace_hide ss (ev ` A) \\<and> \n                                                                     t = trace_hide tt (ev ` A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s @ t = trace_hide ta (ev ` A) \\<Longrightarrow>\n    \\<exists>ss tt.\n       ta = ss @ tt \\<and>\n       s = trace_hide ss (ev ` A) \\<and> t = trace_hide tt (ev ` A)", "proof(induct \"ta\" arbitrary:s t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s t.\n       s @ t = trace_hide [] (ev ` A) \\<Longrightarrow>\n       \\<exists>ss tt.\n          [] = ss @ tt \\<and>\n          s = trace_hide ss (ev ` A) \\<and> t = trace_hide tt (ev ` A)\n 2. \\<And>a ta s t.\n       \\<lbrakk>\\<And>s t.\n                   s @ t = trace_hide ta (ev ` A) \\<Longrightarrow>\n                   \\<exists>ss tt.\n                      ta = ss @ tt \\<and>\n                      s = trace_hide ss (ev ` A) \\<and>\n                      t = trace_hide tt (ev ` A);\n        s @ t = trace_hide (a # ta) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ss tt.\n                            a # ta = ss @ tt \\<and>\n                            s = trace_hide ss (ev ` A) \\<and>\n                            t = trace_hide tt (ev ` A)", "case Nil"], ["proof (state)\nthis:\n  s @ t = trace_hide [] (ev ` A)\n\ngoal (2 subgoals):\n 1. \\<And>s t.\n       s @ t = trace_hide [] (ev ` A) \\<Longrightarrow>\n       \\<exists>ss tt.\n          [] = ss @ tt \\<and>\n          s = trace_hide ss (ev ` A) \\<and> t = trace_hide tt (ev ` A)\n 2. \\<And>a ta s t.\n       \\<lbrakk>\\<And>s t.\n                   s @ t = trace_hide ta (ev ` A) \\<Longrightarrow>\n                   \\<exists>ss tt.\n                      ta = ss @ tt \\<and>\n                      s = trace_hide ss (ev ` A) \\<and>\n                      t = trace_hide tt (ev ` A);\n        s @ t = trace_hide (a # ta) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ss tt.\n                            a # ta = ss @ tt \\<and>\n                            s = trace_hide ss (ev ` A) \\<and>\n                            t = trace_hide tt (ev ` A)", "thus ?case"], ["proof (prove)\nusing this:\n  s @ t = trace_hide [] (ev ` A)\n\ngoal (1 subgoal):\n 1. \\<exists>ss tt.\n       [] = ss @ tt \\<and>\n       s = trace_hide ss (ev ` A) \\<and> t = trace_hide tt (ev ` A)", "by simp"], ["proof (state)\nthis:\n  \\<exists>ss tt.\n     [] = ss @ tt \\<and>\n     s = trace_hide ss (ev ` A) \\<and> t = trace_hide tt (ev ` A)\n\ngoal (1 subgoal):\n 1. \\<And>a ta s t.\n       \\<lbrakk>\\<And>s t.\n                   s @ t = trace_hide ta (ev ` A) \\<Longrightarrow>\n                   \\<exists>ss tt.\n                      ta = ss @ tt \\<and>\n                      s = trace_hide ss (ev ` A) \\<and>\n                      t = trace_hide tt (ev ` A);\n        s @ t = trace_hide (a # ta) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ss tt.\n                            a # ta = ss @ tt \\<and>\n                            s = trace_hide ss (ev ` A) \\<and>\n                            t = trace_hide tt (ev ` A)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a ta s t.\n       \\<lbrakk>\\<And>s t.\n                   s @ t = trace_hide ta (ev ` A) \\<Longrightarrow>\n                   \\<exists>ss tt.\n                      ta = ss @ tt \\<and>\n                      s = trace_hide ss (ev ` A) \\<and>\n                      t = trace_hide tt (ev ` A);\n        s @ t = trace_hide (a # ta) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ss tt.\n                            a # ta = ss @ tt \\<and>\n                            s = trace_hide ss (ev ` A) \\<and>\n                            t = trace_hide tt (ev ` A)", "case (Cons a ta)"], ["proof (state)\nthis:\n  ?s @ ?t = trace_hide ta (ev ` A) \\<Longrightarrow>\n  \\<exists>ss tt.\n     ta = ss @ tt \\<and>\n     ?s = trace_hide ss (ev ` A) \\<and> ?t = trace_hide tt (ev ` A)\n  s @ t = trace_hide (a # ta) (ev ` A)\n\ngoal (1 subgoal):\n 1. \\<And>a ta s t.\n       \\<lbrakk>\\<And>s t.\n                   s @ t = trace_hide ta (ev ` A) \\<Longrightarrow>\n                   \\<exists>ss tt.\n                      ta = ss @ tt \\<and>\n                      s = trace_hide ss (ev ` A) \\<and>\n                      t = trace_hide tt (ev ` A);\n        s @ t = trace_hide (a # ta) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ss tt.\n                            a # ta = ss @ tt \\<and>\n                            s = trace_hide ss (ev ` A) \\<and>\n                            t = trace_hide tt (ev ` A)", "thus ?case"], ["proof (prove)\nusing this:\n  ?s @ ?t = trace_hide ta (ev ` A) \\<Longrightarrow>\n  \\<exists>ss tt.\n     ta = ss @ tt \\<and>\n     ?s = trace_hide ss (ev ` A) \\<and> ?t = trace_hide tt (ev ` A)\n  s @ t = trace_hide (a # ta) (ev ` A)\n\ngoal (1 subgoal):\n 1. \\<exists>ss tt.\n       a # ta = ss @ tt \\<and>\n       s = trace_hide ss (ev ` A) \\<and> t = trace_hide tt (ev ` A)", "proof(cases \"a \\<in> (ev ` A)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>s t.\n                s @ t = trace_hide ta (ev ` A) \\<Longrightarrow>\n                \\<exists>ss tt.\n                   ta = ss @ tt \\<and>\n                   s = trace_hide ss (ev ` A) \\<and>\n                   t = trace_hide tt (ev ` A);\n     s @ t = trace_hide (a # ta) (ev ` A); a \\<in> ev ` A\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ss tt.\n                         a # ta = ss @ tt \\<and>\n                         s = trace_hide ss (ev ` A) \\<and>\n                         t = trace_hide tt (ev ` A)\n 2. \\<lbrakk>\\<And>s t.\n                s @ t = trace_hide ta (ev ` A) \\<Longrightarrow>\n                \\<exists>ss tt.\n                   ta = ss @ tt \\<and>\n                   s = trace_hide ss (ev ` A) \\<and>\n                   t = trace_hide tt (ev ` A);\n     s @ t = trace_hide (a # ta) (ev ` A); a \\<notin> ev ` A\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ss tt.\n                         a # ta = ss @ tt \\<and>\n                         s = trace_hide ss (ev ` A) \\<and>\n                         t = trace_hide tt (ev ` A)", "case True"], ["proof (state)\nthis:\n  a \\<in> ev ` A\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>s t.\n                s @ t = trace_hide ta (ev ` A) \\<Longrightarrow>\n                \\<exists>ss tt.\n                   ta = ss @ tt \\<and>\n                   s = trace_hide ss (ev ` A) \\<and>\n                   t = trace_hide tt (ev ` A);\n     s @ t = trace_hide (a # ta) (ev ` A); a \\<in> ev ` A\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ss tt.\n                         a # ta = ss @ tt \\<and>\n                         s = trace_hide ss (ev ` A) \\<and>\n                         t = trace_hide tt (ev ` A)\n 2. \\<lbrakk>\\<And>s t.\n                s @ t = trace_hide ta (ev ` A) \\<Longrightarrow>\n                \\<exists>ss tt.\n                   ta = ss @ tt \\<and>\n                   s = trace_hide ss (ev ` A) \\<and>\n                   t = trace_hide tt (ev ` A);\n     s @ t = trace_hide (a # ta) (ev ` A); a \\<notin> ev ` A\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ss tt.\n                         a # ta = ss @ tt \\<and>\n                         s = trace_hide ss (ev ` A) \\<and>\n                         t = trace_hide tt (ev ` A)", "hence \"s @ t = trace_hide ta (ev ` A)\""], ["proof (prove)\nusing this:\n  a \\<in> ev ` A\n\ngoal (1 subgoal):\n 1. s @ t = trace_hide ta (ev ` A)", "by (simp add: Cons)"], ["proof (state)\nthis:\n  s @ t = trace_hide ta (ev ` A)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>s t.\n                s @ t = trace_hide ta (ev ` A) \\<Longrightarrow>\n                \\<exists>ss tt.\n                   ta = ss @ tt \\<and>\n                   s = trace_hide ss (ev ` A) \\<and>\n                   t = trace_hide tt (ev ` A);\n     s @ t = trace_hide (a # ta) (ev ` A); a \\<in> ev ` A\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ss tt.\n                         a # ta = ss @ tt \\<and>\n                         s = trace_hide ss (ev ` A) \\<and>\n                         t = trace_hide tt (ev ` A)\n 2. \\<lbrakk>\\<And>s t.\n                s @ t = trace_hide ta (ev ` A) \\<Longrightarrow>\n                \\<exists>ss tt.\n                   ta = ss @ tt \\<and>\n                   s = trace_hide ss (ev ` A) \\<and>\n                   t = trace_hide tt (ev ` A);\n     s @ t = trace_hide (a # ta) (ev ` A); a \\<notin> ev ` A\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ss tt.\n                         a # ta = ss @ tt \\<and>\n                         s = trace_hide ss (ev ` A) \\<and>\n                         t = trace_hide tt (ev ` A)", "with Cons"], ["proof (chain)\npicking this:\n  ?s @ ?t = trace_hide ta (ev ` A) \\<Longrightarrow>\n  \\<exists>ss tt.\n     ta = ss @ tt \\<and>\n     ?s = trace_hide ss (ev ` A) \\<and> ?t = trace_hide tt (ev ` A)\n  s @ t = trace_hide (a # ta) (ev ` A)\n  s @ t = trace_hide ta (ev ` A)", "obtain ss tt where \"ta = ss @ tt \\<and> s = trace_hide ss (ev ` A) \n                                  \\<and> t = trace_hide tt (ev ` A)\""], ["proof (prove)\nusing this:\n  ?s @ ?t = trace_hide ta (ev ` A) \\<Longrightarrow>\n  \\<exists>ss tt.\n     ta = ss @ tt \\<and>\n     ?s = trace_hide ss (ev ` A) \\<and> ?t = trace_hide tt (ev ` A)\n  s @ t = trace_hide (a # ta) (ev ` A)\n  s @ t = trace_hide ta (ev ` A)\n\ngoal (1 subgoal):\n 1. (\\<And>ss tt.\n        ta = ss @ tt \\<and>\n        s = trace_hide ss (ev ` A) \\<and>\n        t = trace_hide tt (ev ` A) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  ta = ss @ tt \\<and>\n  s = trace_hide ss (ev ` A) \\<and> t = trace_hide tt (ev ` A)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>s t.\n                s @ t = trace_hide ta (ev ` A) \\<Longrightarrow>\n                \\<exists>ss tt.\n                   ta = ss @ tt \\<and>\n                   s = trace_hide ss (ev ` A) \\<and>\n                   t = trace_hide tt (ev ` A);\n     s @ t = trace_hide (a # ta) (ev ` A); a \\<in> ev ` A\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ss tt.\n                         a # ta = ss @ tt \\<and>\n                         s = trace_hide ss (ev ` A) \\<and>\n                         t = trace_hide tt (ev ` A)\n 2. \\<lbrakk>\\<And>s t.\n                s @ t = trace_hide ta (ev ` A) \\<Longrightarrow>\n                \\<exists>ss tt.\n                   ta = ss @ tt \\<and>\n                   s = trace_hide ss (ev ` A) \\<and>\n                   t = trace_hide tt (ev ` A);\n     s @ t = trace_hide (a # ta) (ev ` A); a \\<notin> ev ` A\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ss tt.\n                         a # ta = ss @ tt \\<and>\n                         s = trace_hide ss (ev ` A) \\<and>\n                         t = trace_hide tt (ev ` A)", "with True Cons"], ["proof (chain)\npicking this:\n  a \\<in> ev ` A\n  ?s @ ?t = trace_hide ta (ev ` A) \\<Longrightarrow>\n  \\<exists>ss tt.\n     ta = ss @ tt \\<and>\n     ?s = trace_hide ss (ev ` A) \\<and> ?t = trace_hide tt (ev ` A)\n  s @ t = trace_hide (a # ta) (ev ` A)\n  ta = ss @ tt \\<and>\n  s = trace_hide ss (ev ` A) \\<and> t = trace_hide tt (ev ` A)", "show ?thesis"], ["proof (prove)\nusing this:\n  a \\<in> ev ` A\n  ?s @ ?t = trace_hide ta (ev ` A) \\<Longrightarrow>\n  \\<exists>ss tt.\n     ta = ss @ tt \\<and>\n     ?s = trace_hide ss (ev ` A) \\<and> ?t = trace_hide tt (ev ` A)\n  s @ t = trace_hide (a # ta) (ev ` A)\n  ta = ss @ tt \\<and>\n  s = trace_hide ss (ev ` A) \\<and> t = trace_hide tt (ev ` A)\n\ngoal (1 subgoal):\n 1. \\<exists>ss tt.\n       a # ta = ss @ tt \\<and>\n       s = trace_hide ss (ev ` A) \\<and> t = trace_hide tt (ev ` A)", "by (rule_tac x=\"a#ss\" in exI, rule_tac x=tt in exI, auto)"], ["proof (state)\nthis:\n  \\<exists>ss tt.\n     a # ta = ss @ tt \\<and>\n     s = trace_hide ss (ev ` A) \\<and> t = trace_hide tt (ev ` A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>s t.\n                s @ t = trace_hide ta (ev ` A) \\<Longrightarrow>\n                \\<exists>ss tt.\n                   ta = ss @ tt \\<and>\n                   s = trace_hide ss (ev ` A) \\<and>\n                   t = trace_hide tt (ev ` A);\n     s @ t = trace_hide (a # ta) (ev ` A); a \\<notin> ev ` A\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ss tt.\n                         a # ta = ss @ tt \\<and>\n                         s = trace_hide ss (ev ` A) \\<and>\n                         t = trace_hide tt (ev ` A)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>s t.\n                s @ t = trace_hide ta (ev ` A) \\<Longrightarrow>\n                \\<exists>ss tt.\n                   ta = ss @ tt \\<and>\n                   s = trace_hide ss (ev ` A) \\<and>\n                   t = trace_hide tt (ev ` A);\n     s @ t = trace_hide (a # ta) (ev ` A); a \\<notin> ev ` A\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ss tt.\n                         a # ta = ss @ tt \\<and>\n                         s = trace_hide ss (ev ` A) \\<and>\n                         t = trace_hide tt (ev ` A)", "case False"], ["proof (state)\nthis:\n  a \\<notin> ev ` A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>s t.\n                s @ t = trace_hide ta (ev ` A) \\<Longrightarrow>\n                \\<exists>ss tt.\n                   ta = ss @ tt \\<and>\n                   s = trace_hide ss (ev ` A) \\<and>\n                   t = trace_hide tt (ev ` A);\n     s @ t = trace_hide (a # ta) (ev ` A); a \\<notin> ev ` A\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ss tt.\n                         a # ta = ss @ tt \\<and>\n                         s = trace_hide ss (ev ` A) \\<and>\n                         t = trace_hide tt (ev ` A)", "thus ?thesis"], ["proof (prove)\nusing this:\n  a \\<notin> ev ` A\n\ngoal (1 subgoal):\n 1. \\<exists>ss tt.\n       a # ta = ss @ tt \\<and>\n       s = trace_hide ss (ev ` A) \\<and> t = trace_hide tt (ev ` A)", "proof(cases s)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<notin> ev ` A; s = []\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ss tt.\n                         a # ta = ss @ tt \\<and>\n                         s = trace_hide ss (ev ` A) \\<and>\n                         t = trace_hide tt (ev ` A)\n 2. \\<And>aa list.\n       \\<lbrakk>a \\<notin> ev ` A; s = aa # list\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ss tt.\n                            a # ta = ss @ tt \\<and>\n                            s = trace_hide ss (ev ` A) \\<and>\n                            t = trace_hide tt (ev ` A)", "case Nil"], ["proof (state)\nthis:\n  s = []\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<notin> ev ` A; s = []\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ss tt.\n                         a # ta = ss @ tt \\<and>\n                         s = trace_hide ss (ev ` A) \\<and>\n                         t = trace_hide tt (ev ` A)\n 2. \\<And>aa list.\n       \\<lbrakk>a \\<notin> ev ` A; s = aa # list\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ss tt.\n                            a # ta = ss @ tt \\<and>\n                            s = trace_hide ss (ev ` A) \\<and>\n                            t = trace_hide tt (ev ` A)", "thus ?thesis"], ["proof (prove)\nusing this:\n  s = []\n\ngoal (1 subgoal):\n 1. \\<exists>ss tt.\n       a # ta = ss @ tt \\<and>\n       s = trace_hide ss (ev ` A) \\<and> t = trace_hide tt (ev ` A)", "using Cons"], ["proof (prove)\nusing this:\n  s = []\n  ?s @ ?t = trace_hide ta (ev ` A) \\<Longrightarrow>\n  \\<exists>ss tt.\n     ta = ss @ tt \\<and>\n     ?s = trace_hide ss (ev ` A) \\<and> ?t = trace_hide tt (ev ` A)\n  s @ t = trace_hide (a # ta) (ev ` A)\n\ngoal (1 subgoal):\n 1. \\<exists>ss tt.\n       a # ta = ss @ tt \\<and>\n       s = trace_hide ss (ev ` A) \\<and> t = trace_hide tt (ev ` A)", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>ss tt.\n     a # ta = ss @ tt \\<and>\n     s = trace_hide ss (ev ` A) \\<and> t = trace_hide tt (ev ` A)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       \\<lbrakk>a \\<notin> ev ` A; s = aa # list\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ss tt.\n                            a # ta = ss @ tt \\<and>\n                            s = trace_hide ss (ev ` A) \\<and>\n                            t = trace_hide tt (ev ` A)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       \\<lbrakk>a \\<notin> ev ` A; s = aa # list\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ss tt.\n                            a # ta = ss @ tt \\<and>\n                            s = trace_hide ss (ev ` A) \\<and>\n                            t = trace_hide tt (ev ` A)", "case Cons2:(Cons aa tls)"], ["proof (state)\nthis:\n  s = aa # tls\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       \\<lbrakk>a \\<notin> ev ` A; s = aa # list\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ss tt.\n                            a # ta = ss @ tt \\<and>\n                            s = trace_hide ss (ev ` A) \\<and>\n                            t = trace_hide tt (ev ` A)", "with False"], ["proof (chain)\npicking this:\n  a \\<notin> ev ` A\n  s = aa # tls", "have A:\"a = aa \\<and> tls @ t = trace_hide ta (ev ` A)\""], ["proof (prove)\nusing this:\n  a \\<notin> ev ` A\n  s = aa # tls\n\ngoal (1 subgoal):\n 1. a = aa \\<and> tls @ t = trace_hide ta (ev ` A)", "using Cons"], ["proof (prove)\nusing this:\n  a \\<notin> ev ` A\n  s = aa # tls\n  ?s @ ?t = trace_hide ta (ev ` A) \\<Longrightarrow>\n  \\<exists>ss tt.\n     ta = ss @ tt \\<and>\n     ?s = trace_hide ss (ev ` A) \\<and> ?t = trace_hide tt (ev ` A)\n  s @ t = trace_hide (a # ta) (ev ` A)\n\ngoal (1 subgoal):\n 1. a = aa \\<and> tls @ t = trace_hide ta (ev ` A)", "by auto"], ["proof (state)\nthis:\n  a = aa \\<and> tls @ t = trace_hide ta (ev ` A)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       \\<lbrakk>a \\<notin> ev ` A; s = aa # list\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ss tt.\n                            a # ta = ss @ tt \\<and>\n                            s = trace_hide ss (ev ` A) \\<and>\n                            t = trace_hide tt (ev ` A)", "with Cons"], ["proof (chain)\npicking this:\n  ?s @ ?t = trace_hide ta (ev ` A) \\<Longrightarrow>\n  \\<exists>ss tt.\n     ta = ss @ tt \\<and>\n     ?s = trace_hide ss (ev ` A) \\<and> ?t = trace_hide tt (ev ` A)\n  s @ t = trace_hide (a # ta) (ev ` A)\n  a = aa \\<and> tls @ t = trace_hide ta (ev ` A)", "obtain ss tt where \"ta = ss @ tt \\<and> tls = trace_hide ss (ev ` A) \n                                  \\<and> t = trace_hide tt (ev ` A)\""], ["proof (prove)\nusing this:\n  ?s @ ?t = trace_hide ta (ev ` A) \\<Longrightarrow>\n  \\<exists>ss tt.\n     ta = ss @ tt \\<and>\n     ?s = trace_hide ss (ev ` A) \\<and> ?t = trace_hide tt (ev ` A)\n  s @ t = trace_hide (a # ta) (ev ` A)\n  a = aa \\<and> tls @ t = trace_hide ta (ev ` A)\n\ngoal (1 subgoal):\n 1. (\\<And>ss tt.\n        ta = ss @ tt \\<and>\n        tls = trace_hide ss (ev ` A) \\<and>\n        t = trace_hide tt (ev ` A) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  ta = ss @ tt \\<and>\n  tls = trace_hide ss (ev ` A) \\<and> t = trace_hide tt (ev ` A)\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       \\<lbrakk>a \\<notin> ev ` A; s = aa # list\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ss tt.\n                            a # ta = ss @ tt \\<and>\n                            s = trace_hide ss (ev ` A) \\<and>\n                            t = trace_hide tt (ev ` A)", "with Cons2 A False"], ["proof (chain)\npicking this:\n  s = aa # tls\n  a = aa \\<and> tls @ t = trace_hide ta (ev ` A)\n  a \\<notin> ev ` A\n  ta = ss @ tt \\<and>\n  tls = trace_hide ss (ev ` A) \\<and> t = trace_hide tt (ev ` A)", "show ?thesis"], ["proof (prove)\nusing this:\n  s = aa # tls\n  a = aa \\<and> tls @ t = trace_hide ta (ev ` A)\n  a \\<notin> ev ` A\n  ta = ss @ tt \\<and>\n  tls = trace_hide ss (ev ` A) \\<and> t = trace_hide tt (ev ` A)\n\ngoal (1 subgoal):\n 1. \\<exists>ss tt.\n       a # ta = ss @ tt \\<and>\n       s = trace_hide ss (ev ` A) \\<and> t = trace_hide tt (ev ` A)", "by (rule_tac x=\"a#ss\" in exI, rule_tac x=tt in exI, auto)"], ["proof (state)\nthis:\n  \\<exists>ss tt.\n     a # ta = ss @ tt \\<and>\n     s = trace_hide ss (ev ` A) \\<and> t = trace_hide tt (ev ` A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ss tt.\n     a # ta = ss @ tt \\<and>\n     s = trace_hide ss (ev ` A) \\<and> t = trace_hide tt (ev ` A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ss tt.\n     a # ta = ss @ tt \\<and>\n     s = trace_hide ss (ev ` A) \\<and> t = trace_hide tt (ev ` A)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma hiding_maintains_is_process:\n      \"is_process     ({(s,X). \\<exists> t. s = trace_hide t (ev`A) \\<and> (t,X \\<union> (ev`A)) \\<in> F P} \\<union>\n                          {(s,X). s \\<in> div_hide P A}, div_hide P A)\" (is \"is_process(?f, ?d)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_process\n     ({(s, X).\n       \\<exists>t.\n          s = trace_hide t (ev ` A) \\<and>\n          (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n      {(s, X). s \\<in> div_hide P A},\n      div_hide P A)", "proof (simp only: fst_conv snd_conv F_def is_process_def FAILURES_def DIVERGENCES_def,\n      fold FAILURES_def DIVERGENCES_def,fold F_def,intro conjI, goal_cases)"], ["proof (state)\ngoal (9 subgoals):\n 1. ([], {})\n    \\<in> {(s, X).\n           \\<exists>t.\n              s = trace_hide t (ev ` A) \\<and>\n              (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n          {(s, X). s \\<in> div_hide P A}\n 2. \\<forall>s X.\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<longrightarrow>\n       front_tickFree s\n 3. \\<forall>s t.\n       (s @ t, {})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<longrightarrow>\n       (s, {})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 4. \\<forall>s X Y.\n       (s, Y)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<and>\n       X \\<subseteq> Y \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 5. \\<forall>s X Y.\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<and>\n       (\\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (s @ [c], {})\n           \\<notin> {(s, X).\n                     \\<exists>t.\n                        s = trace_hide t (ev ` A) \\<and>\n                        (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n                    {(s, X). s \\<in> div_hide P A}) \\<longrightarrow>\n       (s, X \\<union> Y)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 6. \\<forall>s X.\n       (s @ [tick], {})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<longrightarrow>\n       (s, X - {tick})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 7. \\<forall>s t.\n       s \\<in> div_hide P A \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t \\<in> div_hide P A\n 8. \\<forall>s X.\n       s \\<in> div_hide P A \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 9. \\<forall>s.\n       s @ [tick] \\<in> div_hide P A \\<longrightarrow> s \\<in> div_hide P A", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (9 subgoals):\n 1. ([], {})\n    \\<in> {(s, X).\n           \\<exists>t.\n              s = trace_hide t (ev ` A) \\<and>\n              (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n          {(s, X). s \\<in> div_hide P A}\n 2. \\<forall>s X.\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<longrightarrow>\n       front_tickFree s\n 3. \\<forall>s t.\n       (s @ t, {})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<longrightarrow>\n       (s, {})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 4. \\<forall>s X Y.\n       (s, Y)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<and>\n       X \\<subseteq> Y \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 5. \\<forall>s X Y.\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<and>\n       (\\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (s @ [c], {})\n           \\<notin> {(s, X).\n                     \\<exists>t.\n                        s = trace_hide t (ev ` A) \\<and>\n                        (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n                    {(s, X). s \\<in> div_hide P A}) \\<longrightarrow>\n       (s, X \\<union> Y)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 6. \\<forall>s X.\n       (s @ [tick], {})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<longrightarrow>\n       (s, X - {tick})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 7. \\<forall>s t.\n       s \\<in> div_hide P A \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t \\<in> div_hide P A\n 8. \\<forall>s X.\n       s \\<in> div_hide P A \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 9. \\<forall>s.\n       s @ [tick] \\<in> div_hide P A \\<longrightarrow> s \\<in> div_hide P A", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([], {})\n    \\<in> {(s, X).\n           \\<exists>t.\n              s = trace_hide t (ev ` A) \\<and>\n              (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n          {(s, X). s \\<in> div_hide P A}", "proof (auto, rule not_not[THEN iffD1], rule notI, simp, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>t.\n                trace_hide t (ev ` A) = [] \\<longrightarrow>\n                tickFree t \\<longrightarrow>\n                t \\<notin> D P \\<and>\n                (\\<forall>f.\n                    strict_mono f \\<longrightarrow>\n                    (\\<exists>i. f i \\<notin> T P) \\<or>\n                    (\\<exists>i.\n                        trace_hide (f i) (ev ` A) \\<noteq>\n                        trace_hide (f 0) (ev ` A)) \\<or>\n                    t \\<notin> range f);\n     \\<forall>t.\n        [] = trace_hide t (ev ` A) \\<longrightarrow>\n        (t, ev ` A) \\<notin> F P\\<rbrakk>\n    \\<Longrightarrow> False", "case 1"], ["proof (state)\nthis:\n  \\<forall>t.\n     trace_hide t (ev ` A) = [] \\<longrightarrow>\n     tickFree t \\<longrightarrow>\n     t \\<notin> D P \\<and>\n     (\\<forall>f.\n         strict_mono f \\<longrightarrow>\n         (\\<exists>i. f i \\<notin> T P) \\<or>\n         (\\<exists>i.\n             trace_hide (f i) (ev ` A) \\<noteq>\n             trace_hide (f 0) (ev ` A)) \\<or>\n         t \\<notin> range f)\n  \\<forall>t.\n     [] = trace_hide t (ev ` A) \\<longrightarrow> (t, ev ` A) \\<notin> F P\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>t.\n                trace_hide t (ev ` A) = [] \\<longrightarrow>\n                tickFree t \\<longrightarrow>\n                t \\<notin> D P \\<and>\n                (\\<forall>f.\n                    strict_mono f \\<longrightarrow>\n                    (\\<exists>i. f i \\<notin> T P) \\<or>\n                    (\\<exists>i.\n                        trace_hide (f i) (ev ` A) \\<noteq>\n                        trace_hide (f 0) (ev ` A)) \\<or>\n                    t \\<notin> range f);\n     \\<forall>t.\n        [] = trace_hide t (ev ` A) \\<longrightarrow>\n        (t, ev ` A) \\<notin> F P\\<rbrakk>\n    \\<Longrightarrow> False", "from inf_hidden[of A \"[]\" P]"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<forall>t.\n              trace_hide t (ev ` A) =\n              trace_hide [] (ev ` A) \\<longrightarrow>\n              (t, ev ` A) \\<notin> F P;\n   [] \\<in> T P\\<rbrakk>\n  \\<Longrightarrow> \\<exists>f. isInfHiddenRun f P A \\<and> [] \\<in> range f", "obtain f where A:\"isInfHiddenRun f P A \\<and> [] \\<in> range f\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>t.\n              trace_hide t (ev ` A) =\n              trace_hide [] (ev ` A) \\<longrightarrow>\n              (t, ev ` A) \\<notin> F P;\n   [] \\<in> T P\\<rbrakk>\n  \\<Longrightarrow> \\<exists>f. isInfHiddenRun f P A \\<and> [] \\<in> range f\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        isInfHiddenRun f P A \\<and> [] \\<in> range f \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using \"1\"(2) Nil_elem_T"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>t.\n              trace_hide t (ev ` A) =\n              trace_hide [] (ev ` A) \\<longrightarrow>\n              (t, ev ` A) \\<notin> F P;\n   [] \\<in> T P\\<rbrakk>\n  \\<Longrightarrow> \\<exists>f. isInfHiddenRun f P A \\<and> [] \\<in> range f\n  \\<forall>t.\n     [] = trace_hide t (ev ` A) \\<longrightarrow> (t, ev ` A) \\<notin> F P\n  [] \\<in> T ?P\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        isInfHiddenRun f P A \\<and> [] \\<in> range f \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  isInfHiddenRun f P A \\<and> [] \\<in> range f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>t.\n                trace_hide t (ev ` A) = [] \\<longrightarrow>\n                tickFree t \\<longrightarrow>\n                t \\<notin> D P \\<and>\n                (\\<forall>f.\n                    strict_mono f \\<longrightarrow>\n                    (\\<exists>i. f i \\<notin> T P) \\<or>\n                    (\\<exists>i.\n                        trace_hide (f i) (ev ` A) \\<noteq>\n                        trace_hide (f 0) (ev ` A)) \\<or>\n                    t \\<notin> range f);\n     \\<forall>t.\n        [] = trace_hide t (ev ` A) \\<longrightarrow>\n        (t, ev ` A) \\<notin> F P\\<rbrakk>\n    \\<Longrightarrow> False", "from A 1(1)[THEN spec, of \"[]\"] filter.simps(1) tickFree_Nil"], ["proof (chain)\npicking this:\n  isInfHiddenRun f P A \\<and> [] \\<in> range f\n  trace_hide [] (ev ` A) = [] \\<longrightarrow>\n  tickFree [] \\<longrightarrow>\n  [] \\<notin> D P \\<and>\n  (\\<forall>f.\n      strict_mono f \\<longrightarrow>\n      (\\<exists>i. f i \\<notin> T P) \\<or>\n      (\\<exists>i.\n          trace_hide (f i) (ev ` A) \\<noteq>\n          trace_hide (f 0) (ev ` A)) \\<or>\n      [] \\<notin> range f)\n  filter ?P [] = []\n  tickFree []", "show ?case"], ["proof (prove)\nusing this:\n  isInfHiddenRun f P A \\<and> [] \\<in> range f\n  trace_hide [] (ev ` A) = [] \\<longrightarrow>\n  tickFree [] \\<longrightarrow>\n  [] \\<notin> D P \\<and>\n  (\\<forall>f.\n      strict_mono f \\<longrightarrow>\n      (\\<exists>i. f i \\<notin> T P) \\<or>\n      (\\<exists>i.\n          trace_hide (f i) (ev ` A) \\<noteq>\n          trace_hide (f 0) (ev ` A)) \\<or>\n      [] \\<notin> range f)\n  filter ?P [] = []\n  tickFree []\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ([], {})\n  \\<in> {(s, X).\n         \\<exists>t.\n            s = trace_hide t (ev ` A) \\<and>\n            (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n        {(s, X). s \\<in> div_hide P A}\n\ngoal (8 subgoals):\n 1. \\<forall>s X.\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<longrightarrow>\n       front_tickFree s\n 2. \\<forall>s t.\n       (s @ t, {})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<longrightarrow>\n       (s, {})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 3. \\<forall>s X Y.\n       (s, Y)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<and>\n       X \\<subseteq> Y \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 4. \\<forall>s X Y.\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<and>\n       (\\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (s @ [c], {})\n           \\<notin> {(s, X).\n                     \\<exists>t.\n                        s = trace_hide t (ev ` A) \\<and>\n                        (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n                    {(s, X). s \\<in> div_hide P A}) \\<longrightarrow>\n       (s, X \\<union> Y)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 5. \\<forall>s X.\n       (s @ [tick], {})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<longrightarrow>\n       (s, X - {tick})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 6. \\<forall>s t.\n       s \\<in> div_hide P A \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t \\<in> div_hide P A\n 7. \\<forall>s X.\n       s \\<in> div_hide P A \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 8. \\<forall>s.\n       s @ [tick] \\<in> div_hide P A \\<longrightarrow> s \\<in> div_hide P A", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<forall>s X.\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<longrightarrow>\n       front_tickFree s\n 2. \\<forall>s t.\n       (s @ t, {})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<longrightarrow>\n       (s, {})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 3. \\<forall>s X Y.\n       (s, Y)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<and>\n       X \\<subseteq> Y \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 4. \\<forall>s X Y.\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<and>\n       (\\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (s @ [c], {})\n           \\<notin> {(s, X).\n                     \\<exists>t.\n                        s = trace_hide t (ev ` A) \\<and>\n                        (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n                    {(s, X). s \\<in> div_hide P A}) \\<longrightarrow>\n       (s, X \\<union> Y)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 5. \\<forall>s X.\n       (s @ [tick], {})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<longrightarrow>\n       (s, X - {tick})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 6. \\<forall>s t.\n       s \\<in> div_hide P A \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t \\<in> div_hide P A\n 7. \\<forall>s X.\n       s \\<in> div_hide P A \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 8. \\<forall>s.\n       s @ [tick] \\<in> div_hide P A \\<longrightarrow> s \\<in> div_hide P A", "case 2"], ["proof (state)\nthis:\n  \n\ngoal (8 subgoals):\n 1. \\<forall>s X.\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<longrightarrow>\n       front_tickFree s\n 2. \\<forall>s t.\n       (s @ t, {})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<longrightarrow>\n       (s, {})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 3. \\<forall>s X Y.\n       (s, Y)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<and>\n       X \\<subseteq> Y \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 4. \\<forall>s X Y.\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<and>\n       (\\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (s @ [c], {})\n           \\<notin> {(s, X).\n                     \\<exists>t.\n                        s = trace_hide t (ev ` A) \\<and>\n                        (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n                    {(s, X). s \\<in> div_hide P A}) \\<longrightarrow>\n       (s, X \\<union> Y)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 5. \\<forall>s X.\n       (s @ [tick], {})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<longrightarrow>\n       (s, X - {tick})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 6. \\<forall>s t.\n       s \\<in> div_hide P A \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t \\<in> div_hide P A\n 7. \\<forall>s X.\n       s \\<in> div_hide P A \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 8. \\<forall>s.\n       s @ [tick] \\<in> div_hide P A \\<longrightarrow> s \\<in> div_hide P A", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s X.\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<longrightarrow>\n       front_tickFree s", "using is_processT2 hiding_fronttickFree front_tickFree_append hiding_tickFree"], ["proof (prove)\nusing this:\n  \\<forall>s X. (s, X) \\<in> F ?P \\<longrightarrow> front_tickFree s\n  front_tickFree ?s \\<Longrightarrow>\n  front_tickFree (trace_hide ?s (ev ` ?A))\n  \\<lbrakk>tickFree ?s; front_tickFree ?t\\<rbrakk>\n  \\<Longrightarrow> front_tickFree (?s @ ?t)\n  tickFree ?s = tickFree (trace_hide ?s (ev ` ?A))\n\ngoal (1 subgoal):\n 1. \\<forall>s X.\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<longrightarrow>\n       front_tickFree s", "by blast+"], ["proof (state)\nthis:\n  \\<forall>s X.\n     (s, X)\n     \\<in> {(s, X).\n            \\<exists>t.\n               s = trace_hide t (ev ` A) \\<and>\n               (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n           {(s, X). s \\<in> div_hide P A} \\<longrightarrow>\n     front_tickFree s\n\ngoal (7 subgoals):\n 1. \\<forall>s t.\n       (s @ t, {})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<longrightarrow>\n       (s, {})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 2. \\<forall>s X Y.\n       (s, Y)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<and>\n       X \\<subseteq> Y \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 3. \\<forall>s X Y.\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<and>\n       (\\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (s @ [c], {})\n           \\<notin> {(s, X).\n                     \\<exists>t.\n                        s = trace_hide t (ev ` A) \\<and>\n                        (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n                    {(s, X). s \\<in> div_hide P A}) \\<longrightarrow>\n       (s, X \\<union> Y)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 4. \\<forall>s X.\n       (s @ [tick], {})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<longrightarrow>\n       (s, X - {tick})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 5. \\<forall>s t.\n       s \\<in> div_hide P A \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t \\<in> div_hide P A\n 6. \\<forall>s X.\n       s \\<in> div_hide P A \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 7. \\<forall>s.\n       s @ [tick] \\<in> div_hide P A \\<longrightarrow> s \\<in> div_hide P A", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<forall>s t.\n       (s @ t, {})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<longrightarrow>\n       (s, {})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 2. \\<forall>s X Y.\n       (s, Y)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<and>\n       X \\<subseteq> Y \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 3. \\<forall>s X Y.\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<and>\n       (\\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (s @ [c], {})\n           \\<notin> {(s, X).\n                     \\<exists>t.\n                        s = trace_hide t (ev ` A) \\<and>\n                        (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n                    {(s, X). s \\<in> div_hide P A}) \\<longrightarrow>\n       (s, X \\<union> Y)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 4. \\<forall>s X.\n       (s @ [tick], {})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<longrightarrow>\n       (s, X - {tick})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 5. \\<forall>s t.\n       s \\<in> div_hide P A \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t \\<in> div_hide P A\n 6. \\<forall>s X.\n       s \\<in> div_hide P A \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 7. \\<forall>s.\n       s @ [tick] \\<in> div_hide P A \\<longrightarrow> s \\<in> div_hide P A", "case 3"], ["proof (state)\nthis:\n  \n\ngoal (7 subgoals):\n 1. \\<forall>s t.\n       (s @ t, {})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<longrightarrow>\n       (s, {})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 2. \\<forall>s X Y.\n       (s, Y)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<and>\n       X \\<subseteq> Y \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 3. \\<forall>s X Y.\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<and>\n       (\\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (s @ [c], {})\n           \\<notin> {(s, X).\n                     \\<exists>t.\n                        s = trace_hide t (ev ` A) \\<and>\n                        (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n                    {(s, X). s \\<in> div_hide P A}) \\<longrightarrow>\n       (s, X \\<union> Y)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 4. \\<forall>s X.\n       (s @ [tick], {})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<longrightarrow>\n       (s, X - {tick})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 5. \\<forall>s t.\n       s \\<in> div_hide P A \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t \\<in> div_hide P A\n 6. \\<forall>s X.\n       s \\<in> div_hide P A \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 7. \\<forall>s.\n       s @ [tick] \\<in> div_hide P A \\<longrightarrow> s \\<in> div_hide P A", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s t.\n       (s @ t, {})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<longrightarrow>\n       (s, {})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}", "proof(auto del:disjE, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s t ta.\n       \\<lbrakk>s @ t = trace_hide ta (ev ` A); (ta, ev ` A) \\<in> F P;\n        \\<forall>t u.\n           s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           t \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            s = trace_hide t (ev ` A) \\<and>\n                            (t, ev ` A) \\<in> F P\n 2. \\<And>s t ta u.\n       \\<lbrakk>front_tickFree u; tickFree ta;\n        s @ t = trace_hide ta (ev ` A) @ u;\n        ta \\<in> D P \\<or>\n        (\\<exists>f.\n            strict_mono f \\<and>\n            (\\<forall>i. f i \\<in> T P) \\<and>\n            (\\<forall>i.\n                trace_hide (f i) (ev ` A) =\n                trace_hide (f 0) (ev ` A)) \\<and>\n            ta \\<in> range f);\n        \\<forall>t u.\n           s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           t \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            s = trace_hide t (ev ` A) \\<and>\n                            (t, ev ` A) \\<in> F P", "case (1 s t ta)"], ["proof (state)\nthis:\n  s @ t = trace_hide ta (ev ` A)\n  (ta, ev ` A) \\<in> F P\n  \\<forall>t u.\n     s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n     tickFree t \\<longrightarrow>\n     front_tickFree u \\<longrightarrow>\n     t \\<notin> D P \\<and>\n     (\\<forall>f.\n         strict_mono f \\<longrightarrow>\n         (\\<exists>i. f i \\<notin> T P) \\<or>\n         (\\<exists>i.\n             trace_hide (f i) (ev ` A) \\<noteq>\n             trace_hide (f 0) (ev ` A)) \\<or>\n         t \\<notin> range f)\n\ngoal (2 subgoals):\n 1. \\<And>s t ta.\n       \\<lbrakk>s @ t = trace_hide ta (ev ` A); (ta, ev ` A) \\<in> F P;\n        \\<forall>t u.\n           s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           t \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            s = trace_hide t (ev ` A) \\<and>\n                            (t, ev ` A) \\<in> F P\n 2. \\<And>s t ta u.\n       \\<lbrakk>front_tickFree u; tickFree ta;\n        s @ t = trace_hide ta (ev ` A) @ u;\n        ta \\<in> D P \\<or>\n        (\\<exists>f.\n            strict_mono f \\<and>\n            (\\<forall>i. f i \\<in> T P) \\<and>\n            (\\<forall>i.\n                trace_hide (f i) (ev ` A) =\n                trace_hide (f 0) (ev ` A)) \\<and>\n            ta \\<in> range f);\n        \\<forall>t u.\n           s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           t \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            s = trace_hide t (ev ` A) \\<and>\n                            (t, ev ` A) \\<in> F P", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P", "proof(cases \"tickFree s\")"], ["proof (state)\ngoal (2 subgoals):\n 1. tickFree s \\<Longrightarrow>\n    \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P\n 2. \\<not> tickFree s \\<Longrightarrow>\n    \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P", "case True"], ["proof (state)\nthis:\n  tickFree s\n\ngoal (2 subgoals):\n 1. tickFree s \\<Longrightarrow>\n    \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P\n 2. \\<not> tickFree s \\<Longrightarrow>\n    \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P", "from 1(2)"], ["proof (chain)\npicking this:\n  (ta, ev ` A) \\<in> F P", "obtain ss tt where A:\"ta = ss@tt \\<and> s = trace_hide ss (ev ` A) \\<and> ss \\<in> T P\""], ["proof (prove)\nusing this:\n  (ta, ev ` A) \\<in> F P\n\ngoal (1 subgoal):\n 1. (\\<And>ss tt.\n        ta = ss @ tt \\<and>\n        s = trace_hide ss (ev ` A) \\<and> ss \\<in> T P \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using trace_hide_append[of s t A ta, OF 1(1)]"], ["proof (prove)\nusing this:\n  (ta, ev ` A) \\<in> F P\n  \\<exists>ss tt.\n     ta = ss @ tt \\<and>\n     s = trace_hide ss (ev ` A) \\<and> t = trace_hide tt (ev ` A)\n\ngoal (1 subgoal):\n 1. (\\<And>ss tt.\n        ta = ss @ tt \\<and>\n        s = trace_hide ss (ev ` A) \\<and> ss \\<in> T P \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis F_T is_processT3_SR)"], ["proof (state)\nthis:\n  ta = ss @ tt \\<and> s = trace_hide ss (ev ` A) \\<and> ss \\<in> T P\n\ngoal (2 subgoals):\n 1. tickFree s \\<Longrightarrow>\n    \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P\n 2. \\<not> tickFree s \\<Longrightarrow>\n    \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P", "with True"], ["proof (chain)\npicking this:\n  tickFree s\n  ta = ss @ tt \\<and> s = trace_hide ss (ev ` A) \\<and> ss \\<in> T P", "have B:\"tickFree ss\""], ["proof (prove)\nusing this:\n  tickFree s\n  ta = ss @ tt \\<and> s = trace_hide ss (ev ` A) \\<and> ss \\<in> T P\n\ngoal (1 subgoal):\n 1. tickFree ss", "by (metis event.distinct(1) filter_set imageE member_filter tickFree_def)"], ["proof (state)\nthis:\n  tickFree ss\n\ngoal (2 subgoals):\n 1. tickFree s \\<Longrightarrow>\n    \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P\n 2. \\<not> tickFree s \\<Longrightarrow>\n    \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P", "using 1(3) A B inf_hidden[of A ss P]"], ["proof (prove)\nusing this:\n  \\<forall>t u.\n     s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n     tickFree t \\<longrightarrow>\n     front_tickFree u \\<longrightarrow>\n     t \\<notin> D P \\<and>\n     (\\<forall>f.\n         strict_mono f \\<longrightarrow>\n         (\\<exists>i. f i \\<notin> T P) \\<or>\n         (\\<exists>i.\n             trace_hide (f i) (ev ` A) \\<noteq>\n             trace_hide (f 0) (ev ` A)) \\<or>\n         t \\<notin> range f)\n  ta = ss @ tt \\<and> s = trace_hide ss (ev ` A) \\<and> ss \\<in> T P\n  tickFree ss\n  \\<lbrakk>\\<forall>t.\n              trace_hide t (ev ` A) =\n              trace_hide ss (ev ` A) \\<longrightarrow>\n              (t, ev ` A) \\<notin> F P;\n   ss \\<in> T P\\<rbrakk>\n  \\<Longrightarrow> \\<exists>f. isInfHiddenRun f P A \\<and> ss \\<in> range f\n\ngoal (1 subgoal):\n 1. \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P", "by (metis append_Nil2 front_tickFree_Nil)"], ["proof (state)\nthis:\n  \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P\n\ngoal (1 subgoal):\n 1. \\<not> tickFree s \\<Longrightarrow>\n    \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> tickFree s \\<Longrightarrow>\n    \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P", "case False"], ["proof (state)\nthis:\n  \\<not> tickFree s\n\ngoal (1 subgoal):\n 1. \\<not> tickFree s \\<Longrightarrow>\n    \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P", "with 1(1,2)"], ["proof (chain)\npicking this:\n  s @ t = trace_hide ta (ev ` A)\n  (ta, ev ` A) \\<in> F P\n  \\<not> tickFree s", "obtain ss tt where A:\"s = ss@[tick] \\<and> ta = tt@[tick]\""], ["proof (prove)\nusing this:\n  s @ t = trace_hide ta (ev ` A)\n  (ta, ev ` A) \\<in> F P\n  \\<not> tickFree s\n\ngoal (1 subgoal):\n 1. (\\<And>ss tt.\n        s = ss @ [tick] \\<and> ta = tt @ [tick] \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis append_Nil2 contra_subsetD filter_is_subset front_tickFree_mono \n                  hiding_fronttickFree is_processT nonTickFree_n_frontTickFree tickFree_def)"], ["proof (state)\nthis:\n  s = ss @ [tick] \\<and> ta = tt @ [tick]\n\ngoal (1 subgoal):\n 1. \\<not> tickFree s \\<Longrightarrow>\n    \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P", "with 1(1,2)"], ["proof (chain)\npicking this:\n  s @ t = trace_hide ta (ev ` A)\n  (ta, ev ` A) \\<in> F P\n  s = ss @ [tick] \\<and> ta = tt @ [tick]", "have \"ss = trace_hide tt (ev ` A)\""], ["proof (prove)\nusing this:\n  s @ t = trace_hide ta (ev ` A)\n  (ta, ev ` A) \\<in> F P\n  s = ss @ [tick] \\<and> ta = tt @ [tick]\n\ngoal (1 subgoal):\n 1. ss = trace_hide tt (ev ` A)", "by (metis (no_types, lifting) butlast_append butlast_snoc contra_subsetD \n                  filter.simps(2) filter_append filter_is_subset front_tickFree_implies_tickFree \n                  front_tickFree_single is_processT nonTickFree_n_frontTickFree non_tickFree_tick \n                  self_append_conv2 tickFree_append tickFree_def)"], ["proof (state)\nthis:\n  ss = trace_hide tt (ev ` A)\n\ngoal (1 subgoal):\n 1. \\<not> tickFree s \\<Longrightarrow>\n    \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P", "with False 1(1,2) A"], ["proof (chain)\npicking this:\n  \\<not> tickFree s\n  s @ t = trace_hide ta (ev ` A)\n  (ta, ev ` A) \\<in> F P\n  s = ss @ [tick] \\<and> ta = tt @ [tick]\n  ss = trace_hide tt (ev ` A)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> tickFree s\n  s @ t = trace_hide ta (ev ` A)\n  (ta, ev ` A) \\<in> F P\n  s = ss @ [tick] \\<and> ta = tt @ [tick]\n  ss = trace_hide tt (ev ` A)\n\ngoal (1 subgoal):\n 1. \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P", "by (metis append_Nil2 front_tickFree_mono hiding_fronttickFree is_processT)"], ["proof (state)\nthis:\n  \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P\n\ngoal (1 subgoal):\n 1. \\<And>s t ta u.\n       \\<lbrakk>front_tickFree u; tickFree ta;\n        s @ t = trace_hide ta (ev ` A) @ u;\n        ta \\<in> D P \\<or>\n        (\\<exists>f.\n            strict_mono f \\<and>\n            (\\<forall>i. f i \\<in> T P) \\<and>\n            (\\<forall>i.\n                trace_hide (f i) (ev ` A) =\n                trace_hide (f 0) (ev ` A)) \\<and>\n            ta \\<in> range f);\n        \\<forall>t u.\n           s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           t \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            s = trace_hide t (ev ` A) \\<and>\n                            (t, ev ` A) \\<in> F P", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s t ta u.\n       \\<lbrakk>front_tickFree u; tickFree ta;\n        s @ t = trace_hide ta (ev ` A) @ u;\n        ta \\<in> D P \\<or>\n        (\\<exists>f.\n            strict_mono f \\<and>\n            (\\<forall>i. f i \\<in> T P) \\<and>\n            (\\<forall>i.\n                trace_hide (f i) (ev ` A) =\n                trace_hide (f 0) (ev ` A)) \\<and>\n            ta \\<in> range f);\n        \\<forall>t u.\n           s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           t \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            s = trace_hide t (ev ` A) \\<and>\n                            (t, ev ` A) \\<in> F P", "case (2 s t ta u)"], ["proof (state)\nthis:\n  front_tickFree u\n  tickFree ta\n  s @ t = trace_hide ta (ev ` A) @ u\n  ta \\<in> D P \\<or>\n  (\\<exists>f.\n      strict_mono f \\<and>\n      (\\<forall>i. f i \\<in> T P) \\<and>\n      (\\<forall>i.\n          trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n      ta \\<in> range f)\n  \\<forall>t u.\n     s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n     tickFree t \\<longrightarrow>\n     front_tickFree u \\<longrightarrow>\n     t \\<notin> D P \\<and>\n     (\\<forall>f.\n         strict_mono f \\<longrightarrow>\n         (\\<exists>i. f i \\<notin> T P) \\<or>\n         (\\<exists>i.\n             trace_hide (f i) (ev ` A) \\<noteq>\n             trace_hide (f 0) (ev ` A)) \\<or>\n         t \\<notin> range f)\n\ngoal (1 subgoal):\n 1. \\<And>s t ta u.\n       \\<lbrakk>front_tickFree u; tickFree ta;\n        s @ t = trace_hide ta (ev ` A) @ u;\n        ta \\<in> D P \\<or>\n        (\\<exists>f.\n            strict_mono f \\<and>\n            (\\<forall>i. f i \\<in> T P) \\<and>\n            (\\<forall>i.\n                trace_hide (f i) (ev ` A) =\n                trace_hide (f 0) (ev ` A)) \\<and>\n            ta \\<in> range f);\n        \\<forall>t u.\n           s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           t \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            s = trace_hide t (ev ` A) \\<and>\n                            (t, ev ` A) \\<in> F P", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P", "proof(cases \"length s \\<le> length (trace_hide ta (ev ` A))\")"], ["proof (state)\ngoal (2 subgoals):\n 1. length s \\<le> length (trace_hide ta (ev ` A)) \\<Longrightarrow>\n    \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P\n 2. \\<not> length s \\<le> length (trace_hide ta (ev ` A)) \\<Longrightarrow>\n    \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P", "case True"], ["proof (state)\nthis:\n  length s \\<le> length (trace_hide ta (ev ` A))\n\ngoal (2 subgoals):\n 1. length s \\<le> length (trace_hide ta (ev ` A)) \\<Longrightarrow>\n    \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P\n 2. \\<not> length s \\<le> length (trace_hide ta (ev ` A)) \\<Longrightarrow>\n    \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P", "with append_eq_append_conv2[THEN iffD1, OF 2(3)]"], ["proof (chain)\npicking this:\n  \\<exists>us.\n     s = trace_hide ta (ev ` A) @ us \\<and> us @ t = u \\<or>\n     s @ us = trace_hide ta (ev ` A) \\<and> t = us @ u\n  length s \\<le> length (trace_hide ta (ev ` A))", "obtain tt where \"s@tt = trace_hide ta (ev ` A)\""], ["proof (prove)\nusing this:\n  \\<exists>us.\n     s = trace_hide ta (ev ` A) @ us \\<and> us @ t = u \\<or>\n     s @ us = trace_hide ta (ev ` A) \\<and> t = us @ u\n  length s \\<le> length (trace_hide ta (ev ` A))\n\ngoal (1 subgoal):\n 1. (\\<And>tt.\n        s @ tt = trace_hide ta (ev ` A) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s @ tt = trace_hide ta (ev ` A)\n\ngoal (2 subgoals):\n 1. length s \\<le> length (trace_hide ta (ev ` A)) \\<Longrightarrow>\n    \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P\n 2. \\<not> length s \\<le> length (trace_hide ta (ev ` A)) \\<Longrightarrow>\n    \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P", "with 2(4)"], ["proof (chain)\npicking this:\n  ta \\<in> D P \\<or>\n  (\\<exists>f.\n      strict_mono f \\<and>\n      (\\<forall>i. f i \\<in> T P) \\<and>\n      (\\<forall>i.\n          trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n      ta \\<in> range f)\n  s @ tt = trace_hide ta (ev ` A)", "obtain ss ttt where A:\"ta = ss@ttt \\<and> s = trace_hide ss (ev ` A) \\<and> ss \\<in> T P\""], ["proof (prove)\nusing this:\n  ta \\<in> D P \\<or>\n  (\\<exists>f.\n      strict_mono f \\<and>\n      (\\<forall>i. f i \\<in> T P) \\<and>\n      (\\<forall>i.\n          trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n      ta \\<in> range f)\n  s @ tt = trace_hide ta (ev ` A)\n\ngoal (1 subgoal):\n 1. (\\<And>ss ttt.\n        ta = ss @ ttt \\<and>\n        s = trace_hide ss (ev ` A) \\<and> ss \\<in> T P \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using trace_hide_append[of s tt A ta]"], ["proof (prove)\nusing this:\n  ta \\<in> D P \\<or>\n  (\\<exists>f.\n      strict_mono f \\<and>\n      (\\<forall>i. f i \\<in> T P) \\<and>\n      (\\<forall>i.\n          trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n      ta \\<in> range f)\n  s @ tt = trace_hide ta (ev ` A)\n  s @ tt = trace_hide ta (ev ` A) \\<Longrightarrow>\n  \\<exists>ss tta.\n     ta = ss @ tta \\<and>\n     s = trace_hide ss (ev ` A) \\<and> tt = trace_hide tta (ev ` A)\n\ngoal (1 subgoal):\n 1. (\\<And>ss ttt.\n        ta = ss @ ttt \\<and>\n        s = trace_hide ss (ev ` A) \\<and> ss \\<in> T P \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis D_T imageE is_processT3_ST)"], ["proof (state)\nthis:\n  ta = ss @ ttt \\<and> s = trace_hide ss (ev ` A) \\<and> ss \\<in> T P\n\ngoal (2 subgoals):\n 1. length s \\<le> length (trace_hide ta (ev ` A)) \\<Longrightarrow>\n    \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P\n 2. \\<not> length s \\<le> length (trace_hide ta (ev ` A)) \\<Longrightarrow>\n    \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P", "with 2(2)"], ["proof (chain)\npicking this:\n  tickFree ta\n  ta = ss @ ttt \\<and> s = trace_hide ss (ev ` A) \\<and> ss \\<in> T P", "have B:\"tickFree ss\""], ["proof (prove)\nusing this:\n  tickFree ta\n  ta = ss @ ttt \\<and> s = trace_hide ss (ev ` A) \\<and> ss \\<in> T P\n\ngoal (1 subgoal):\n 1. tickFree ss", "using tickFree_append"], ["proof (prove)\nusing this:\n  tickFree ta\n  ta = ss @ ttt \\<and> s = trace_hide ss (ev ` A) \\<and> ss \\<in> T P\n  tickFree (?s @ ?t) = (tickFree ?s \\<and> tickFree ?t)\n\ngoal (1 subgoal):\n 1. tickFree ss", "by blast"], ["proof (state)\nthis:\n  tickFree ss\n\ngoal (2 subgoals):\n 1. length s \\<le> length (trace_hide ta (ev ` A)) \\<Longrightarrow>\n    \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P\n 2. \\<not> length s \\<le> length (trace_hide ta (ev ` A)) \\<Longrightarrow>\n    \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P", "using 2(4,5) A B inf_hidden[of A ss P]"], ["proof (prove)\nusing this:\n  ta \\<in> D P \\<or>\n  (\\<exists>f.\n      strict_mono f \\<and>\n      (\\<forall>i. f i \\<in> T P) \\<and>\n      (\\<forall>i.\n          trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n      ta \\<in> range f)\n  \\<forall>t u.\n     s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n     tickFree t \\<longrightarrow>\n     front_tickFree u \\<longrightarrow>\n     t \\<notin> D P \\<and>\n     (\\<forall>f.\n         strict_mono f \\<longrightarrow>\n         (\\<exists>i. f i \\<notin> T P) \\<or>\n         (\\<exists>i.\n             trace_hide (f i) (ev ` A) \\<noteq>\n             trace_hide (f 0) (ev ` A)) \\<or>\n         t \\<notin> range f)\n  ta = ss @ ttt \\<and> s = trace_hide ss (ev ` A) \\<and> ss \\<in> T P\n  tickFree ss\n  \\<lbrakk>\\<forall>t.\n              trace_hide t (ev ` A) =\n              trace_hide ss (ev ` A) \\<longrightarrow>\n              (t, ev ` A) \\<notin> F P;\n   ss \\<in> T P\\<rbrakk>\n  \\<Longrightarrow> \\<exists>f. isInfHiddenRun f P A \\<and> ss \\<in> range f\n\ngoal (1 subgoal):\n 1. \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P", "by (metis (no_types, lifting) append_Nil2 is_processT)"], ["proof (state)\nthis:\n  \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P\n\ngoal (1 subgoal):\n 1. \\<not> length s \\<le> length (trace_hide ta (ev ` A)) \\<Longrightarrow>\n    \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> length s \\<le> length (trace_hide ta (ev ` A)) \\<Longrightarrow>\n    \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P", "case False"], ["proof (state)\nthis:\n  \\<not> length s \\<le> length (trace_hide ta (ev ` A))\n\ngoal (1 subgoal):\n 1. \\<not> length s \\<le> length (trace_hide ta (ev ` A)) \\<Longrightarrow>\n    \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P", "with 2(3)"], ["proof (chain)\npicking this:\n  s @ t = trace_hide ta (ev ` A) @ u\n  \\<not> length s \\<le> length (trace_hide ta (ev ` A))", "obtain uu uuu where A:\"s = trace_hide ta (ev ` A) @ uu \\<and> u = uu @ uuu\""], ["proof (prove)\nusing this:\n  s @ t = trace_hide ta (ev ` A) @ u\n  \\<not> length s \\<le> length (trace_hide ta (ev ` A))\n\ngoal (1 subgoal):\n 1. (\\<And>uu uuu.\n        s = trace_hide ta (ev ` A) @ uu \\<and>\n        u = uu @ uuu \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: append_eq_append_conv2, metis le_length_mono le_list_def)"], ["proof (state)\nthis:\n  s = trace_hide ta (ev ` A) @ uu \\<and> u = uu @ uuu\n\ngoal (1 subgoal):\n 1. \\<not> length s \\<le> length (trace_hide ta (ev ` A)) \\<Longrightarrow>\n    \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P", "with 2(1,2,4) 2(5)[rule_format, of ta uu]"], ["proof (chain)\npicking this:\n  front_tickFree u\n  tickFree ta\n  ta \\<in> D P \\<or>\n  (\\<exists>f.\n      strict_mono f \\<and>\n      (\\<forall>i. f i \\<in> T P) \\<and>\n      (\\<forall>i.\n          trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n      ta \\<in> range f)\n  \\<lbrakk>s = trace_hide ta (ev ` A) @ uu; tickFree ta;\n   front_tickFree uu\\<rbrakk>\n  \\<Longrightarrow> ta \\<notin> D P \\<and>\n                    (\\<forall>f.\n                        strict_mono f \\<longrightarrow>\n                        (\\<exists>i. f i \\<notin> T P) \\<or>\n                        (\\<exists>i.\n                            trace_hide (f i) (ev ` A) \\<noteq>\n                            trace_hide (f 0) (ev ` A)) \\<or>\n                        ta \\<notin> range f)\n  s = trace_hide ta (ev ` A) @ uu \\<and> u = uu @ uuu", "show ?thesis"], ["proof (prove)\nusing this:\n  front_tickFree u\n  tickFree ta\n  ta \\<in> D P \\<or>\n  (\\<exists>f.\n      strict_mono f \\<and>\n      (\\<forall>i. f i \\<in> T P) \\<and>\n      (\\<forall>i.\n          trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n      ta \\<in> range f)\n  \\<lbrakk>s = trace_hide ta (ev ` A) @ uu; tickFree ta;\n   front_tickFree uu\\<rbrakk>\n  \\<Longrightarrow> ta \\<notin> D P \\<and>\n                    (\\<forall>f.\n                        strict_mono f \\<longrightarrow>\n                        (\\<exists>i. f i \\<notin> T P) \\<or>\n                        (\\<exists>i.\n                            trace_hide (f i) (ev ` A) \\<noteq>\n                            trace_hide (f 0) (ev ` A)) \\<or>\n                        ta \\<notin> range f)\n  s = trace_hide ta (ev ` A) @ uu \\<and> u = uu @ uuu\n\ngoal (1 subgoal):\n 1. \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P", "using front_tickFree_dw_closed"], ["proof (prove)\nusing this:\n  front_tickFree u\n  tickFree ta\n  ta \\<in> D P \\<or>\n  (\\<exists>f.\n      strict_mono f \\<and>\n      (\\<forall>i. f i \\<in> T P) \\<and>\n      (\\<forall>i.\n          trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n      ta \\<in> range f)\n  \\<lbrakk>s = trace_hide ta (ev ` A) @ uu; tickFree ta;\n   front_tickFree uu\\<rbrakk>\n  \\<Longrightarrow> ta \\<notin> D P \\<and>\n                    (\\<forall>f.\n                        strict_mono f \\<longrightarrow>\n                        (\\<exists>i. f i \\<notin> T P) \\<or>\n                        (\\<exists>i.\n                            trace_hide (f i) (ev ` A) \\<noteq>\n                            trace_hide (f 0) (ev ` A)) \\<or>\n                        ta \\<notin> range f)\n  s = trace_hide ta (ev ` A) @ uu \\<and> u = uu @ uuu\n  front_tickFree (?s @ ?t) \\<Longrightarrow> front_tickFree ?s\n\ngoal (1 subgoal):\n 1. \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P", "by blast"], ["proof (state)\nthis:\n  \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>t. s = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>s t.\n     (s @ t, {})\n     \\<in> {(s, X).\n            \\<exists>t.\n               s = trace_hide t (ev ` A) \\<and>\n               (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n           {(s, X). s \\<in> div_hide P A} \\<longrightarrow>\n     (s, {})\n     \\<in> {(s, X).\n            \\<exists>t.\n               s = trace_hide t (ev ` A) \\<and>\n               (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n           {(s, X). s \\<in> div_hide P A}\n\ngoal (6 subgoals):\n 1. \\<forall>s X Y.\n       (s, Y)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<and>\n       X \\<subseteq> Y \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 2. \\<forall>s X Y.\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<and>\n       (\\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (s @ [c], {})\n           \\<notin> {(s, X).\n                     \\<exists>t.\n                        s = trace_hide t (ev ` A) \\<and>\n                        (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n                    {(s, X). s \\<in> div_hide P A}) \\<longrightarrow>\n       (s, X \\<union> Y)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 3. \\<forall>s X.\n       (s @ [tick], {})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<longrightarrow>\n       (s, X - {tick})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 4. \\<forall>s t.\n       s \\<in> div_hide P A \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t \\<in> div_hide P A\n 5. \\<forall>s X.\n       s \\<in> div_hide P A \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 6. \\<forall>s.\n       s @ [tick] \\<in> div_hide P A \\<longrightarrow> s \\<in> div_hide P A", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<forall>s X Y.\n       (s, Y)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<and>\n       X \\<subseteq> Y \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 2. \\<forall>s X Y.\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<and>\n       (\\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (s @ [c], {})\n           \\<notin> {(s, X).\n                     \\<exists>t.\n                        s = trace_hide t (ev ` A) \\<and>\n                        (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n                    {(s, X). s \\<in> div_hide P A}) \\<longrightarrow>\n       (s, X \\<union> Y)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 3. \\<forall>s X.\n       (s @ [tick], {})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<longrightarrow>\n       (s, X - {tick})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 4. \\<forall>s t.\n       s \\<in> div_hide P A \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t \\<in> div_hide P A\n 5. \\<forall>s X.\n       s \\<in> div_hide P A \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 6. \\<forall>s.\n       s @ [tick] \\<in> div_hide P A \\<longrightarrow> s \\<in> div_hide P A", "case 4"], ["proof (state)\nthis:\n  \n\ngoal (6 subgoals):\n 1. \\<forall>s X Y.\n       (s, Y)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<and>\n       X \\<subseteq> Y \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 2. \\<forall>s X Y.\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<and>\n       (\\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (s @ [c], {})\n           \\<notin> {(s, X).\n                     \\<exists>t.\n                        s = trace_hide t (ev ` A) \\<and>\n                        (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n                    {(s, X). s \\<in> div_hide P A}) \\<longrightarrow>\n       (s, X \\<union> Y)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 3. \\<forall>s X.\n       (s @ [tick], {})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<longrightarrow>\n       (s, X - {tick})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 4. \\<forall>s t.\n       s \\<in> div_hide P A \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t \\<in> div_hide P A\n 5. \\<forall>s X.\n       s \\<in> div_hide P A \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 6. \\<forall>s.\n       s @ [tick] \\<in> div_hide P A \\<longrightarrow> s \\<in> div_hide P A", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s X Y.\n       (s, Y)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<and>\n       X \\<subseteq> Y \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}", "by (auto, metis (mono_tags) Un_subset_iff is_processT4 sup.cobounded2 sup.coboundedI1)"], ["proof (state)\nthis:\n  \\<forall>s X Y.\n     (s, Y)\n     \\<in> {(s, X).\n            \\<exists>t.\n               s = trace_hide t (ev ` A) \\<and>\n               (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n           {(s, X). s \\<in> div_hide P A} \\<and>\n     X \\<subseteq> Y \\<longrightarrow>\n     (s, X)\n     \\<in> {(s, X).\n            \\<exists>t.\n               s = trace_hide t (ev ` A) \\<and>\n               (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n           {(s, X). s \\<in> div_hide P A}\n\ngoal (5 subgoals):\n 1. \\<forall>s X Y.\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<and>\n       (\\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (s @ [c], {})\n           \\<notin> {(s, X).\n                     \\<exists>t.\n                        s = trace_hide t (ev ` A) \\<and>\n                        (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n                    {(s, X). s \\<in> div_hide P A}) \\<longrightarrow>\n       (s, X \\<union> Y)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 2. \\<forall>s X.\n       (s @ [tick], {})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<longrightarrow>\n       (s, X - {tick})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 3. \\<forall>s t.\n       s \\<in> div_hide P A \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t \\<in> div_hide P A\n 4. \\<forall>s X.\n       s \\<in> div_hide P A \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 5. \\<forall>s.\n       s @ [tick] \\<in> div_hide P A \\<longrightarrow> s \\<in> div_hide P A", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<forall>s X Y.\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<and>\n       (\\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (s @ [c], {})\n           \\<notin> {(s, X).\n                     \\<exists>t.\n                        s = trace_hide t (ev ` A) \\<and>\n                        (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n                    {(s, X). s \\<in> div_hide P A}) \\<longrightarrow>\n       (s, X \\<union> Y)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 2. \\<forall>s X.\n       (s @ [tick], {})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<longrightarrow>\n       (s, X - {tick})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 3. \\<forall>s t.\n       s \\<in> div_hide P A \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t \\<in> div_hide P A\n 4. \\<forall>s X.\n       s \\<in> div_hide P A \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 5. \\<forall>s.\n       s @ [tick] \\<in> div_hide P A \\<longrightarrow> s \\<in> div_hide P A", "case 5"], ["proof (state)\nthis:\n  \n\ngoal (5 subgoals):\n 1. \\<forall>s X Y.\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<and>\n       (\\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (s @ [c], {})\n           \\<notin> {(s, X).\n                     \\<exists>t.\n                        s = trace_hide t (ev ` A) \\<and>\n                        (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n                    {(s, X). s \\<in> div_hide P A}) \\<longrightarrow>\n       (s, X \\<union> Y)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 2. \\<forall>s X.\n       (s @ [tick], {})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<longrightarrow>\n       (s, X - {tick})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 3. \\<forall>s t.\n       s \\<in> div_hide P A \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t \\<in> div_hide P A\n 4. \\<forall>s X.\n       s \\<in> div_hide P A \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 5. \\<forall>s.\n       s @ [tick] \\<in> div_hide P A \\<longrightarrow> s \\<in> div_hide P A", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s X Y.\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<and>\n       (\\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (s @ [c], {})\n           \\<notin> {(s, X).\n                     \\<exists>t.\n                        s = trace_hide t (ev ` A) \\<and>\n                        (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n                    {(s, X). s \\<in> div_hide P A}) \\<longrightarrow>\n       (s, X \\<union> Y)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}", "proof(intro impI allI, auto, rule not_not[THEN iffD1], rule notI, simp, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X Y t.\n       \\<lbrakk>\\<forall>c.\n                   c \\<in> Y \\<longrightarrow>\n                   (\\<forall>ta.\n                       trace_hide t (ev ` A) @ [c] =\n                       trace_hide ta (ev ` A) \\<longrightarrow>\n                       (ta, ev ` A) \\<notin> F P) \\<and>\n                   (\\<forall>ta u.\n                       trace_hide t (ev ` A) @ [c] =\n                       trace_hide ta (ev ` A) @ u \\<longrightarrow>\n                       tickFree ta \\<longrightarrow>\n                       front_tickFree u \\<longrightarrow>\n                       ta \\<notin> D P \\<and>\n                       (\\<forall>f.\n                           strict_mono f \\<longrightarrow>\n                           (\\<exists>i. f i \\<notin> T P) \\<or>\n                           (\\<exists>i.\n                               trace_hide (f i) (ev ` A) \\<noteq>\n                               trace_hide (f 0) (ev ` A)) \\<or>\n                           ta \\<notin> range f));\n        \\<forall>ta u.\n           trace_hide t (ev ` A) =\n           trace_hide ta (ev ` A) @ u \\<longrightarrow>\n           tickFree ta \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           ta \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               ta \\<notin> range f);\n        (t, X \\<union> ev ` A) \\<in> F P;\n        \\<forall>ta.\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) \\<longrightarrow>\n           (ta, X \\<union> Y \\<union> ev ` A) \\<notin> F P\\<rbrakk>\n       \\<Longrightarrow> False", "case (1 X Y t)"], ["proof (state)\nthis:\n  \\<forall>c.\n     c \\<in> Y \\<longrightarrow>\n     (\\<forall>ta.\n         trace_hide t (ev ` A) @ [c] =\n         trace_hide ta (ev ` A) \\<longrightarrow>\n         (ta, ev ` A) \\<notin> F P) \\<and>\n     (\\<forall>ta u.\n         trace_hide t (ev ` A) @ [c] =\n         trace_hide ta (ev ` A) @ u \\<longrightarrow>\n         tickFree ta \\<longrightarrow>\n         front_tickFree u \\<longrightarrow>\n         ta \\<notin> D P \\<and>\n         (\\<forall>f.\n             strict_mono f \\<longrightarrow>\n             (\\<exists>i. f i \\<notin> T P) \\<or>\n             (\\<exists>i.\n                 trace_hide (f i) (ev ` A) \\<noteq>\n                 trace_hide (f 0) (ev ` A)) \\<or>\n             ta \\<notin> range f))\n  \\<forall>ta u.\n     trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<longrightarrow>\n     tickFree ta \\<longrightarrow>\n     front_tickFree u \\<longrightarrow>\n     ta \\<notin> D P \\<and>\n     (\\<forall>f.\n         strict_mono f \\<longrightarrow>\n         (\\<exists>i. f i \\<notin> T P) \\<or>\n         (\\<exists>i.\n             trace_hide (f i) (ev ` A) \\<noteq>\n             trace_hide (f 0) (ev ` A)) \\<or>\n         ta \\<notin> range f)\n  (t, X \\<union> ev ` A) \\<in> F P\n  \\<forall>ta.\n     trace_hide t (ev ` A) = trace_hide ta (ev ` A) \\<longrightarrow>\n     (ta, X \\<union> Y \\<union> ev ` A) \\<notin> F P\n\ngoal (1 subgoal):\n 1. \\<And>X Y t.\n       \\<lbrakk>\\<forall>c.\n                   c \\<in> Y \\<longrightarrow>\n                   (\\<forall>ta.\n                       trace_hide t (ev ` A) @ [c] =\n                       trace_hide ta (ev ` A) \\<longrightarrow>\n                       (ta, ev ` A) \\<notin> F P) \\<and>\n                   (\\<forall>ta u.\n                       trace_hide t (ev ` A) @ [c] =\n                       trace_hide ta (ev ` A) @ u \\<longrightarrow>\n                       tickFree ta \\<longrightarrow>\n                       front_tickFree u \\<longrightarrow>\n                       ta \\<notin> D P \\<and>\n                       (\\<forall>f.\n                           strict_mono f \\<longrightarrow>\n                           (\\<exists>i. f i \\<notin> T P) \\<or>\n                           (\\<exists>i.\n                               trace_hide (f i) (ev ` A) \\<noteq>\n                               trace_hide (f 0) (ev ` A)) \\<or>\n                           ta \\<notin> range f));\n        \\<forall>ta u.\n           trace_hide t (ev ` A) =\n           trace_hide ta (ev ` A) @ u \\<longrightarrow>\n           tickFree ta \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           ta \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               ta \\<notin> range f);\n        (t, X \\<union> ev ` A) \\<in> F P;\n        \\<forall>ta.\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) \\<longrightarrow>\n           (ta, X \\<union> Y \\<union> ev ` A) \\<notin> F P\\<rbrakk>\n       \\<Longrightarrow> False", "from 1(3) 1(4)[THEN spec, of t, simplified]"], ["proof (chain)\npicking this:\n  (t, X \\<union> ev ` A) \\<in> F P\n  (t, X \\<union> Y \\<union> ev ` A) \\<notin> F P", "obtain c where A1:\"c \\<in> Y\" and A2:\"c \\<notin> (ev`A)\" \n                                                           and A3:\"t@[c] \\<in> T P\""], ["proof (prove)\nusing this:\n  (t, X \\<union> ev ` A) \\<in> F P\n  (t, X \\<union> Y \\<union> ev ` A) \\<notin> F P\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> Y; c \\<notin> ev ` A; t @ [c] \\<in> T P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using is_processT5_S7'[of t \"X \\<union> (ev`A)\" P Y]"], ["proof (prove)\nusing this:\n  (t, X \\<union> ev ` A) \\<in> F P\n  (t, X \\<union> Y \\<union> ev ` A) \\<notin> F P\n  \\<lbrakk>(t, X \\<union> ev ` A) \\<in> F P;\n   (t, X \\<union> ev ` A \\<union> Y) \\<notin> F P\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x.\n                       x \\<in> Y \\<and>\n                       x \\<notin> X \\<union> ev ` A \\<and> t @ [x] \\<in> T P\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> Y; c \\<notin> ev ` A; t @ [c] \\<in> T P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis UnCI sup_commute sup_left_commute)"], ["proof (state)\nthis:\n  c \\<in> Y\n  c \\<notin> ev ` A\n  t @ [c] \\<in> T P\n\ngoal (1 subgoal):\n 1. \\<And>X Y t.\n       \\<lbrakk>\\<forall>c.\n                   c \\<in> Y \\<longrightarrow>\n                   (\\<forall>ta.\n                       trace_hide t (ev ` A) @ [c] =\n                       trace_hide ta (ev ` A) \\<longrightarrow>\n                       (ta, ev ` A) \\<notin> F P) \\<and>\n                   (\\<forall>ta u.\n                       trace_hide t (ev ` A) @ [c] =\n                       trace_hide ta (ev ` A) @ u \\<longrightarrow>\n                       tickFree ta \\<longrightarrow>\n                       front_tickFree u \\<longrightarrow>\n                       ta \\<notin> D P \\<and>\n                       (\\<forall>f.\n                           strict_mono f \\<longrightarrow>\n                           (\\<exists>i. f i \\<notin> T P) \\<or>\n                           (\\<exists>i.\n                               trace_hide (f i) (ev ` A) \\<noteq>\n                               trace_hide (f 0) (ev ` A)) \\<or>\n                           ta \\<notin> range f));\n        \\<forall>ta u.\n           trace_hide t (ev ` A) =\n           trace_hide ta (ev ` A) @ u \\<longrightarrow>\n           tickFree ta \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           ta \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               ta \\<notin> range f);\n        (t, X \\<union> ev ` A) \\<in> F P;\n        \\<forall>ta.\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) \\<longrightarrow>\n           (ta, X \\<union> Y \\<union> ev ` A) \\<notin> F P\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"trace_hide t (ev ` A) @ [c] = trace_hide (t@[c]) (ev ` A)\""], ["proof (prove)\nusing this:\n  c \\<in> Y\n  c \\<notin> ev ` A\n  t @ [c] \\<in> T P\n\ngoal (1 subgoal):\n 1. trace_hide t (ev ` A) @ [c] = trace_hide (t @ [c]) (ev ` A)", "by simp"], ["proof (state)\nthis:\n  trace_hide t (ev ` A) @ [c] = trace_hide (t @ [c]) (ev ` A)\n\ngoal (1 subgoal):\n 1. \\<And>X Y t.\n       \\<lbrakk>\\<forall>c.\n                   c \\<in> Y \\<longrightarrow>\n                   (\\<forall>ta.\n                       trace_hide t (ev ` A) @ [c] =\n                       trace_hide ta (ev ` A) \\<longrightarrow>\n                       (ta, ev ` A) \\<notin> F P) \\<and>\n                   (\\<forall>ta u.\n                       trace_hide t (ev ` A) @ [c] =\n                       trace_hide ta (ev ` A) @ u \\<longrightarrow>\n                       tickFree ta \\<longrightarrow>\n                       front_tickFree u \\<longrightarrow>\n                       ta \\<notin> D P \\<and>\n                       (\\<forall>f.\n                           strict_mono f \\<longrightarrow>\n                           (\\<exists>i. f i \\<notin> T P) \\<or>\n                           (\\<exists>i.\n                               trace_hide (f i) (ev ` A) \\<noteq>\n                               trace_hide (f 0) (ev ` A)) \\<or>\n                           ta \\<notin> range f));\n        \\<forall>ta u.\n           trace_hide t (ev ` A) =\n           trace_hide ta (ev ` A) @ u \\<longrightarrow>\n           tickFree ta \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           ta \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               ta \\<notin> range f);\n        (t, X \\<union> ev ` A) \\<in> F P;\n        \\<forall>ta.\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) \\<longrightarrow>\n           (ta, X \\<union> Y \\<union> ev ` A) \\<notin> F P\\<rbrakk>\n       \\<Longrightarrow> False", "thus ?case"], ["proof (prove)\nusing this:\n  trace_hide t (ev ` A) @ [c] = trace_hide (t @ [c]) (ev ` A)\n\ngoal (1 subgoal):\n 1. False", "using 1(1)[rule_format, OF A1] inf_hidden[of A \"t@[c]\", rotated, OF A3]"], ["proof (prove)\nusing this:\n  trace_hide t (ev ` A) @ [c] = trace_hide (t @ [c]) (ev ` A)\n  (\\<forall>ta.\n      trace_hide t (ev ` A) @ [c] = trace_hide ta (ev ` A) \\<longrightarrow>\n      (ta, ev ` A) \\<notin> F P) \\<and>\n  (\\<forall>ta u.\n      trace_hide t (ev ` A) @ [c] =\n      trace_hide ta (ev ` A) @ u \\<longrightarrow>\n      tickFree ta \\<longrightarrow>\n      front_tickFree u \\<longrightarrow>\n      ta \\<notin> D P \\<and>\n      (\\<forall>f.\n          strict_mono f \\<longrightarrow>\n          (\\<exists>i. f i \\<notin> T P) \\<or>\n          (\\<exists>i.\n              trace_hide (f i) (ev ` A) \\<noteq>\n              trace_hide (f 0) (ev ` A)) \\<or>\n          ta \\<notin> range f))\n  \\<forall>ta.\n     trace_hide ta (ev ` A) =\n     trace_hide (t @ [c]) (ev ` A) \\<longrightarrow>\n     (ta, ev ` A) \\<notin> F P \\<Longrightarrow>\n  \\<exists>f. isInfHiddenRun f P A \\<and> t @ [c] \\<in> range f\n\ngoal (1 subgoal):\n 1. False", "by (metis (no_types, lifting) append.right_neutral append_T_imp_tickFree \n                                    front_tickFree_Nil is_processT5_S7 not_Cons_self2 rangeE)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>s X Y.\n     (s, X)\n     \\<in> {(s, X).\n            \\<exists>t.\n               s = trace_hide t (ev ` A) \\<and>\n               (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n           {(s, X). s \\<in> div_hide P A} \\<and>\n     (\\<forall>c.\n         c \\<in> Y \\<longrightarrow>\n         (s @ [c], {})\n         \\<notin> {(s, X).\n                   \\<exists>t.\n                      s = trace_hide t (ev ` A) \\<and>\n                      (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n                  {(s, X). s \\<in> div_hide P A}) \\<longrightarrow>\n     (s, X \\<union> Y)\n     \\<in> {(s, X).\n            \\<exists>t.\n               s = trace_hide t (ev ` A) \\<and>\n               (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n           {(s, X). s \\<in> div_hide P A}\n\ngoal (4 subgoals):\n 1. \\<forall>s X.\n       (s @ [tick], {})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<longrightarrow>\n       (s, X - {tick})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 2. \\<forall>s t.\n       s \\<in> div_hide P A \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t \\<in> div_hide P A\n 3. \\<forall>s X.\n       s \\<in> div_hide P A \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 4. \\<forall>s.\n       s @ [tick] \\<in> div_hide P A \\<longrightarrow> s \\<in> div_hide P A", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<forall>s X.\n       (s @ [tick], {})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<longrightarrow>\n       (s, X - {tick})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 2. \\<forall>s t.\n       s \\<in> div_hide P A \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t \\<in> div_hide P A\n 3. \\<forall>s X.\n       s \\<in> div_hide P A \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 4. \\<forall>s.\n       s @ [tick] \\<in> div_hide P A \\<longrightarrow> s \\<in> div_hide P A", "case 6"], ["proof (state)\nthis:\n  \n\ngoal (4 subgoals):\n 1. \\<forall>s X.\n       (s @ [tick], {})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<longrightarrow>\n       (s, X - {tick})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 2. \\<forall>s t.\n       s \\<in> div_hide P A \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t \\<in> div_hide P A\n 3. \\<forall>s X.\n       s \\<in> div_hide P A \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 4. \\<forall>s.\n       s @ [tick] \\<in> div_hide P A \\<longrightarrow> s \\<in> div_hide P A", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s X.\n       (s @ [tick], {})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A} \\<longrightarrow>\n       (s, X - {tick})\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}", "proof (auto, goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>s X t.\n       \\<lbrakk>s @ [tick] = trace_hide t (ev ` A); (t, ev ` A) \\<in> F P;\n        \\<forall>t u.\n           s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           t \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            s = trace_hide t (ev ` A) \\<and>\n                            (t, X - {tick} \\<union> ev ` A) \\<in> F P\n 2. \\<And>s X t u.\n       \\<lbrakk>front_tickFree u; tickFree t;\n        s @ [tick] = trace_hide t (ev ` A) @ u;\n        \\<forall>t u.\n           s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           t \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f);\n        t \\<in> D P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            s = trace_hide t (ev ` A) \\<and>\n                            (t, X - {tick} \\<union> ev ` A) \\<in> F P\n 3. \\<And>s X u f x.\n       \\<lbrakk>front_tickFree u; tickFree (f x);\n        s @ [tick] = trace_hide (f x) (ev ` A) @ u;\n        \\<forall>t u.\n           s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           t \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f);\n        strict_mono f; \\<forall>i. f i \\<in> T P;\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            s = trace_hide t (ev ` A) \\<and>\n                            (t, X - {tick} \\<union> ev ` A) \\<in> F P", "case (1 s X t)"], ["proof (state)\nthis:\n  s @ [tick] = trace_hide t (ev ` A)\n  (t, ev ` A) \\<in> F P\n  \\<forall>t u.\n     s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n     tickFree t \\<longrightarrow>\n     front_tickFree u \\<longrightarrow>\n     t \\<notin> D P \\<and>\n     (\\<forall>f.\n         strict_mono f \\<longrightarrow>\n         (\\<exists>i. f i \\<notin> T P) \\<or>\n         (\\<exists>i.\n             trace_hide (f i) (ev ` A) \\<noteq>\n             trace_hide (f 0) (ev ` A)) \\<or>\n         t \\<notin> range f)\n\ngoal (3 subgoals):\n 1. \\<And>s X t.\n       \\<lbrakk>s @ [tick] = trace_hide t (ev ` A); (t, ev ` A) \\<in> F P;\n        \\<forall>t u.\n           s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           t \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            s = trace_hide t (ev ` A) \\<and>\n                            (t, X - {tick} \\<union> ev ` A) \\<in> F P\n 2. \\<And>s X t u.\n       \\<lbrakk>front_tickFree u; tickFree t;\n        s @ [tick] = trace_hide t (ev ` A) @ u;\n        \\<forall>t u.\n           s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           t \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f);\n        t \\<in> D P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            s = trace_hide t (ev ` A) \\<and>\n                            (t, X - {tick} \\<union> ev ` A) \\<in> F P\n 3. \\<And>s X u f x.\n       \\<lbrakk>front_tickFree u; tickFree (f x);\n        s @ [tick] = trace_hide (f x) (ev ` A) @ u;\n        \\<forall>t u.\n           s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           t \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f);\n        strict_mono f; \\<forall>i. f i \\<in> T P;\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            s = trace_hide t (ev ` A) \\<and>\n                            (t, X - {tick} \\<union> ev ` A) \\<in> F P", "hence \"front_tickFree t\""], ["proof (prove)\nusing this:\n  s @ [tick] = trace_hide t (ev ` A)\n  (t, ev ` A) \\<in> F P\n  \\<forall>t u.\n     s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n     tickFree t \\<longrightarrow>\n     front_tickFree u \\<longrightarrow>\n     t \\<notin> D P \\<and>\n     (\\<forall>f.\n         strict_mono f \\<longrightarrow>\n         (\\<exists>i. f i \\<notin> T P) \\<or>\n         (\\<exists>i.\n             trace_hide (f i) (ev ` A) \\<noteq>\n             trace_hide (f 0) (ev ` A)) \\<or>\n         t \\<notin> range f)\n\ngoal (1 subgoal):\n 1. front_tickFree t", "by (simp add:is_processT2)"], ["proof (state)\nthis:\n  front_tickFree t\n\ngoal (3 subgoals):\n 1. \\<And>s X t.\n       \\<lbrakk>s @ [tick] = trace_hide t (ev ` A); (t, ev ` A) \\<in> F P;\n        \\<forall>t u.\n           s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           t \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            s = trace_hide t (ev ` A) \\<and>\n                            (t, X - {tick} \\<union> ev ` A) \\<in> F P\n 2. \\<And>s X t u.\n       \\<lbrakk>front_tickFree u; tickFree t;\n        s @ [tick] = trace_hide t (ev ` A) @ u;\n        \\<forall>t u.\n           s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           t \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f);\n        t \\<in> D P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            s = trace_hide t (ev ` A) \\<and>\n                            (t, X - {tick} \\<union> ev ` A) \\<in> F P\n 3. \\<And>s X u f x.\n       \\<lbrakk>front_tickFree u; tickFree (f x);\n        s @ [tick] = trace_hide (f x) (ev ` A) @ u;\n        \\<forall>t u.\n           s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           t \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f);\n        strict_mono f; \\<forall>i. f i \\<in> T P;\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            s = trace_hide t (ev ` A) \\<and>\n                            (t, X - {tick} \\<union> ev ` A) \\<in> F P", "with 1(1)"], ["proof (chain)\npicking this:\n  s @ [tick] = trace_hide t (ev ` A)\n  front_tickFree t", "obtain t' where A:\"t = t'@[tick]\""], ["proof (prove)\nusing this:\n  s @ [tick] = trace_hide t (ev ` A)\n  front_tickFree t\n\ngoal (1 subgoal):\n 1. (\\<And>t'. t = t' @ [tick] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis filter_is_subset nonTickFree_n_frontTickFree non_tickFree_tick \n          subset_iff tickFree_append tickFree_def)"], ["proof (state)\nthis:\n  t = t' @ [tick]\n\ngoal (3 subgoals):\n 1. \\<And>s X t.\n       \\<lbrakk>s @ [tick] = trace_hide t (ev ` A); (t, ev ` A) \\<in> F P;\n        \\<forall>t u.\n           s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           t \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            s = trace_hide t (ev ` A) \\<and>\n                            (t, X - {tick} \\<union> ev ` A) \\<in> F P\n 2. \\<And>s X t u.\n       \\<lbrakk>front_tickFree u; tickFree t;\n        s @ [tick] = trace_hide t (ev ` A) @ u;\n        \\<forall>t u.\n           s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           t \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f);\n        t \\<in> D P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            s = trace_hide t (ev ` A) \\<and>\n                            (t, X - {tick} \\<union> ev ` A) \\<in> F P\n 3. \\<And>s X u f x.\n       \\<lbrakk>front_tickFree u; tickFree (f x);\n        s @ [tick] = trace_hide (f x) (ev ` A) @ u;\n        \\<forall>t u.\n           s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           t \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f);\n        strict_mono f; \\<forall>i. f i \\<in> T P;\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            s = trace_hide t (ev ` A) \\<and>\n                            (t, X - {tick} \\<union> ev ` A) \\<in> F P", "with 1(1,2)"], ["proof (chain)\npicking this:\n  s @ [tick] = trace_hide t (ev ` A)\n  (t, ev ` A) \\<in> F P\n  t = t' @ [tick]", "have B:\"s = trace_hide t' (ev ` A)\""], ["proof (prove)\nusing this:\n  s @ [tick] = trace_hide t (ev ` A)\n  (t, ev ` A) \\<in> F P\n  t = t' @ [tick]\n\ngoal (1 subgoal):\n 1. s = trace_hide t' (ev ` A)", "by (auto simp add:tickFree_def split:if_splits)"], ["proof (state)\nthis:\n  s = trace_hide t' (ev ` A)\n\ngoal (3 subgoals):\n 1. \\<And>s X t.\n       \\<lbrakk>s @ [tick] = trace_hide t (ev ` A); (t, ev ` A) \\<in> F P;\n        \\<forall>t u.\n           s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           t \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            s = trace_hide t (ev ` A) \\<and>\n                            (t, X - {tick} \\<union> ev ` A) \\<in> F P\n 2. \\<And>s X t u.\n       \\<lbrakk>front_tickFree u; tickFree t;\n        s @ [tick] = trace_hide t (ev ` A) @ u;\n        \\<forall>t u.\n           s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           t \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f);\n        t \\<in> D P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            s = trace_hide t (ev ` A) \\<and>\n                            (t, X - {tick} \\<union> ev ` A) \\<in> F P\n 3. \\<And>s X u f x.\n       \\<lbrakk>front_tickFree u; tickFree (f x);\n        s @ [tick] = trace_hide (f x) (ev ` A) @ u;\n        \\<forall>t u.\n           s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           t \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f);\n        strict_mono f; \\<forall>i. f i \\<in> T P;\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            s = trace_hide t (ev ` A) \\<and>\n                            (t, X - {tick} \\<union> ev ` A) \\<in> F P", "with A 1(1,2) is_processT6[of P, THEN spec, THEN spec, of t' \"X \\<union> ev ` A\"] \n         is_processT4_empty[of t \"ev ` A\" P]"], ["proof (chain)\npicking this:\n  t = t' @ [tick]\n  s @ [tick] = trace_hide t (ev ` A)\n  (t, ev ` A) \\<in> F P\n  (t' @ [tick], {}) \\<in> F P \\<longrightarrow>\n  (t', X \\<union> ev ` A - {tick}) \\<in> F P\n  (t, ev ` A) \\<in> F P \\<Longrightarrow> (t, {}) \\<in> F P\n  s = trace_hide t' (ev ` A)", "show ?case"], ["proof (prove)\nusing this:\n  t = t' @ [tick]\n  s @ [tick] = trace_hide t (ev ` A)\n  (t, ev ` A) \\<in> F P\n  (t' @ [tick], {}) \\<in> F P \\<longrightarrow>\n  (t', X \\<union> ev ` A - {tick}) \\<in> F P\n  (t, ev ` A) \\<in> F P \\<Longrightarrow> (t, {}) \\<in> F P\n  s = trace_hide t' (ev ` A)\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       s = trace_hide t (ev ` A) \\<and>\n       (t, X - {tick} \\<union> ev ` A) \\<in> F P", "by (auto simp add: Un_Diff split:if_splits)"], ["proof (state)\nthis:\n  \\<exists>t.\n     s = trace_hide t (ev ` A) \\<and>\n     (t, X - {tick} \\<union> ev ` A) \\<in> F P\n\ngoal (2 subgoals):\n 1. \\<And>s X t u.\n       \\<lbrakk>front_tickFree u; tickFree t;\n        s @ [tick] = trace_hide t (ev ` A) @ u;\n        \\<forall>t u.\n           s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           t \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f);\n        t \\<in> D P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            s = trace_hide t (ev ` A) \\<and>\n                            (t, X - {tick} \\<union> ev ` A) \\<in> F P\n 2. \\<And>s X u f x.\n       \\<lbrakk>front_tickFree u; tickFree (f x);\n        s @ [tick] = trace_hide (f x) (ev ` A) @ u;\n        \\<forall>t u.\n           s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           t \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f);\n        strict_mono f; \\<forall>i. f i \\<in> T P;\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            s = trace_hide t (ev ` A) \\<and>\n                            (t, X - {tick} \\<union> ev ` A) \\<in> F P", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s X t u.\n       \\<lbrakk>front_tickFree u; tickFree t;\n        s @ [tick] = trace_hide t (ev ` A) @ u;\n        \\<forall>t u.\n           s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           t \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f);\n        t \\<in> D P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            s = trace_hide t (ev ` A) \\<and>\n                            (t, X - {tick} \\<union> ev ` A) \\<in> F P\n 2. \\<And>s X u f x.\n       \\<lbrakk>front_tickFree u; tickFree (f x);\n        s @ [tick] = trace_hide (f x) (ev ` A) @ u;\n        \\<forall>t u.\n           s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           t \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f);\n        strict_mono f; \\<forall>i. f i \\<in> T P;\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            s = trace_hide t (ev ` A) \\<and>\n                            (t, X - {tick} \\<union> ev ` A) \\<in> F P", "case (2 s X t u)"], ["proof (state)\nthis:\n  front_tickFree u\n  tickFree t\n  s @ [tick] = trace_hide t (ev ` A) @ u\n  \\<forall>t u.\n     s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n     tickFree t \\<longrightarrow>\n     front_tickFree u \\<longrightarrow>\n     t \\<notin> D P \\<and>\n     (\\<forall>f.\n         strict_mono f \\<longrightarrow>\n         (\\<exists>i. f i \\<notin> T P) \\<or>\n         (\\<exists>i.\n             trace_hide (f i) (ev ` A) \\<noteq>\n             trace_hide (f 0) (ev ` A)) \\<or>\n         t \\<notin> range f)\n  t \\<in> D P\n\ngoal (2 subgoals):\n 1. \\<And>s X t u.\n       \\<lbrakk>front_tickFree u; tickFree t;\n        s @ [tick] = trace_hide t (ev ` A) @ u;\n        \\<forall>t u.\n           s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           t \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f);\n        t \\<in> D P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            s = trace_hide t (ev ` A) \\<and>\n                            (t, X - {tick} \\<union> ev ` A) \\<in> F P\n 2. \\<And>s X u f x.\n       \\<lbrakk>front_tickFree u; tickFree (f x);\n        s @ [tick] = trace_hide (f x) (ev ` A) @ u;\n        \\<forall>t u.\n           s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           t \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f);\n        strict_mono f; \\<forall>i. f i \\<in> T P;\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            s = trace_hide t (ev ` A) \\<and>\n                            (t, X - {tick} \\<union> ev ` A) \\<in> F P", "then"], ["proof (chain)\npicking this:\n  front_tickFree u\n  tickFree t\n  s @ [tick] = trace_hide t (ev ` A) @ u\n  \\<forall>t u.\n     s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n     tickFree t \\<longrightarrow>\n     front_tickFree u \\<longrightarrow>\n     t \\<notin> D P \\<and>\n     (\\<forall>f.\n         strict_mono f \\<longrightarrow>\n         (\\<exists>i. f i \\<notin> T P) \\<or>\n         (\\<exists>i.\n             trace_hide (f i) (ev ` A) \\<noteq>\n             trace_hide (f 0) (ev ` A)) \\<or>\n         t \\<notin> range f)\n  t \\<in> D P", "obtain u' where A:\"u = u'@[tick]\""], ["proof (prove)\nusing this:\n  front_tickFree u\n  tickFree t\n  s @ [tick] = trace_hide t (ev ` A) @ u\n  \\<forall>t u.\n     s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n     tickFree t \\<longrightarrow>\n     front_tickFree u \\<longrightarrow>\n     t \\<notin> D P \\<and>\n     (\\<forall>f.\n         strict_mono f \\<longrightarrow>\n         (\\<exists>i. f i \\<notin> T P) \\<or>\n         (\\<exists>i.\n             trace_hide (f i) (ev ` A) \\<noteq>\n             trace_hide (f 0) (ev ` A)) \\<or>\n         t \\<notin> range f)\n  t \\<in> D P\n\ngoal (1 subgoal):\n 1. (\\<And>u'. u = u' @ [tick] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis filter_is_subset nonTickFree_n_frontTickFree non_tickFree_tick           \n          subset_iff tickFree_append tickFree_def)"], ["proof (state)\nthis:\n  u = u' @ [tick]\n\ngoal (2 subgoals):\n 1. \\<And>s X t u.\n       \\<lbrakk>front_tickFree u; tickFree t;\n        s @ [tick] = trace_hide t (ev ` A) @ u;\n        \\<forall>t u.\n           s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           t \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f);\n        t \\<in> D P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            s = trace_hide t (ev ` A) \\<and>\n                            (t, X - {tick} \\<union> ev ` A) \\<in> F P\n 2. \\<And>s X u f x.\n       \\<lbrakk>front_tickFree u; tickFree (f x);\n        s @ [tick] = trace_hide (f x) (ev ` A) @ u;\n        \\<forall>t u.\n           s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           t \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f);\n        strict_mono f; \\<forall>i. f i \\<in> T P;\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            s = trace_hide t (ev ` A) \\<and>\n                            (t, X - {tick} \\<union> ev ` A) \\<in> F P", "with 2(3)"], ["proof (chain)\npicking this:\n  s @ [tick] = trace_hide t (ev ` A) @ u\n  u = u' @ [tick]", "have B:\"s = trace_hide t (ev ` A) @ u'\""], ["proof (prove)\nusing this:\n  s @ [tick] = trace_hide t (ev ` A) @ u\n  u = u' @ [tick]\n\ngoal (1 subgoal):\n 1. s = trace_hide t (ev ` A) @ u'", "by (auto simp add:tickFree_def split:if_splits)"], ["proof (state)\nthis:\n  s = trace_hide t (ev ` A) @ u'\n\ngoal (2 subgoals):\n 1. \\<And>s X t u.\n       \\<lbrakk>front_tickFree u; tickFree t;\n        s @ [tick] = trace_hide t (ev ` A) @ u;\n        \\<forall>t u.\n           s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           t \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f);\n        t \\<in> D P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            s = trace_hide t (ev ` A) \\<and>\n                            (t, X - {tick} \\<union> ev ` A) \\<in> F P\n 2. \\<And>s X u f x.\n       \\<lbrakk>front_tickFree u; tickFree (f x);\n        s @ [tick] = trace_hide (f x) (ev ` A) @ u;\n        \\<forall>t u.\n           s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           t \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f);\n        strict_mono f; \\<forall>i. f i \\<in> T P;\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            s = trace_hide t (ev ` A) \\<and>\n                            (t, X - {tick} \\<union> ev ` A) \\<in> F P", "with 2(1,2,5) 2(4)[THEN spec, THEN spec, of t u']"], ["proof (chain)\npicking this:\n  front_tickFree u\n  tickFree t\n  t \\<in> D P\n  s = trace_hide t (ev ` A) @ u' \\<longrightarrow>\n  tickFree t \\<longrightarrow>\n  front_tickFree u' \\<longrightarrow>\n  t \\<notin> D P \\<and>\n  (\\<forall>f.\n      strict_mono f \\<longrightarrow>\n      (\\<exists>i. f i \\<notin> T P) \\<or>\n      (\\<exists>i.\n          trace_hide (f i) (ev ` A) \\<noteq>\n          trace_hide (f 0) (ev ` A)) \\<or>\n      t \\<notin> range f)\n  s = trace_hide t (ev ` A) @ u'", "show ?case"], ["proof (prove)\nusing this:\n  front_tickFree u\n  tickFree t\n  t \\<in> D P\n  s = trace_hide t (ev ` A) @ u' \\<longrightarrow>\n  tickFree t \\<longrightarrow>\n  front_tickFree u' \\<longrightarrow>\n  t \\<notin> D P \\<and>\n  (\\<forall>f.\n      strict_mono f \\<longrightarrow>\n      (\\<exists>i. f i \\<notin> T P) \\<or>\n      (\\<exists>i.\n          trace_hide (f i) (ev ` A) \\<noteq>\n          trace_hide (f 0) (ev ` A)) \\<or>\n      t \\<notin> range f)\n  s = trace_hide t (ev ` A) @ u'\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       s = trace_hide t (ev ` A) \\<and>\n       (t, X - {tick} \\<union> ev ` A) \\<in> F P", "using front_tickFree_dw_closed A"], ["proof (prove)\nusing this:\n  front_tickFree u\n  tickFree t\n  t \\<in> D P\n  s = trace_hide t (ev ` A) @ u' \\<longrightarrow>\n  tickFree t \\<longrightarrow>\n  front_tickFree u' \\<longrightarrow>\n  t \\<notin> D P \\<and>\n  (\\<forall>f.\n      strict_mono f \\<longrightarrow>\n      (\\<exists>i. f i \\<notin> T P) \\<or>\n      (\\<exists>i.\n          trace_hide (f i) (ev ` A) \\<noteq>\n          trace_hide (f 0) (ev ` A)) \\<or>\n      t \\<notin> range f)\n  s = trace_hide t (ev ` A) @ u'\n  front_tickFree (?s @ ?t) \\<Longrightarrow> front_tickFree ?s\n  u = u' @ [tick]\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       s = trace_hide t (ev ` A) \\<and>\n       (t, X - {tick} \\<union> ev ` A) \\<in> F P", "by blast"], ["proof (state)\nthis:\n  \\<exists>t.\n     s = trace_hide t (ev ` A) \\<and>\n     (t, X - {tick} \\<union> ev ` A) \\<in> F P\n\ngoal (1 subgoal):\n 1. \\<And>s X u f x.\n       \\<lbrakk>front_tickFree u; tickFree (f x);\n        s @ [tick] = trace_hide (f x) (ev ` A) @ u;\n        \\<forall>t u.\n           s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           t \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f);\n        strict_mono f; \\<forall>i. f i \\<in> T P;\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            s = trace_hide t (ev ` A) \\<and>\n                            (t, X - {tick} \\<union> ev ` A) \\<in> F P", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s X u f x.\n       \\<lbrakk>front_tickFree u; tickFree (f x);\n        s @ [tick] = trace_hide (f x) (ev ` A) @ u;\n        \\<forall>t u.\n           s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           t \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f);\n        strict_mono f; \\<forall>i. f i \\<in> T P;\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            s = trace_hide t (ev ` A) \\<and>\n                            (t, X - {tick} \\<union> ev ` A) \\<in> F P", "case (3 s X u f x)"], ["proof (state)\nthis:\n  front_tickFree u\n  tickFree (f x)\n  s @ [tick] = trace_hide (f x) (ev ` A) @ u\n  \\<forall>t u.\n     s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n     tickFree t \\<longrightarrow>\n     front_tickFree u \\<longrightarrow>\n     t \\<notin> D P \\<and>\n     (\\<forall>f.\n         strict_mono f \\<longrightarrow>\n         (\\<exists>i. f i \\<notin> T P) \\<or>\n         (\\<exists>i.\n             trace_hide (f i) (ev ` A) \\<noteq>\n             trace_hide (f 0) (ev ` A)) \\<or>\n         t \\<notin> range f)\n  strict_mono f\n  \\<forall>i. f i \\<in> T P\n  \\<forall>i. trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\n\ngoal (1 subgoal):\n 1. \\<And>s X u f x.\n       \\<lbrakk>front_tickFree u; tickFree (f x);\n        s @ [tick] = trace_hide (f x) (ev ` A) @ u;\n        \\<forall>t u.\n           s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           t \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f);\n        strict_mono f; \\<forall>i. f i \\<in> T P;\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            s = trace_hide t (ev ` A) \\<and>\n                            (t, X - {tick} \\<union> ev ` A) \\<in> F P", "then"], ["proof (chain)\npicking this:\n  front_tickFree u\n  tickFree (f x)\n  s @ [tick] = trace_hide (f x) (ev ` A) @ u\n  \\<forall>t u.\n     s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n     tickFree t \\<longrightarrow>\n     front_tickFree u \\<longrightarrow>\n     t \\<notin> D P \\<and>\n     (\\<forall>f.\n         strict_mono f \\<longrightarrow>\n         (\\<exists>i. f i \\<notin> T P) \\<or>\n         (\\<exists>i.\n             trace_hide (f i) (ev ` A) \\<noteq>\n             trace_hide (f 0) (ev ` A)) \\<or>\n         t \\<notin> range f)\n  strict_mono f\n  \\<forall>i. f i \\<in> T P\n  \\<forall>i. trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)", "obtain u' where A:\"u = u'@[tick]\""], ["proof (prove)\nusing this:\n  front_tickFree u\n  tickFree (f x)\n  s @ [tick] = trace_hide (f x) (ev ` A) @ u\n  \\<forall>t u.\n     s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n     tickFree t \\<longrightarrow>\n     front_tickFree u \\<longrightarrow>\n     t \\<notin> D P \\<and>\n     (\\<forall>f.\n         strict_mono f \\<longrightarrow>\n         (\\<exists>i. f i \\<notin> T P) \\<or>\n         (\\<exists>i.\n             trace_hide (f i) (ev ` A) \\<noteq>\n             trace_hide (f 0) (ev ` A)) \\<or>\n         t \\<notin> range f)\n  strict_mono f\n  \\<forall>i. f i \\<in> T P\n  \\<forall>i. trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\n\ngoal (1 subgoal):\n 1. (\\<And>u'. u = u' @ [tick] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis filter_is_subset nonTickFree_n_frontTickFree non_tickFree_tick           \n          subset_iff tickFree_append tickFree_def)"], ["proof (state)\nthis:\n  u = u' @ [tick]\n\ngoal (1 subgoal):\n 1. \\<And>s X u f x.\n       \\<lbrakk>front_tickFree u; tickFree (f x);\n        s @ [tick] = trace_hide (f x) (ev ` A) @ u;\n        \\<forall>t u.\n           s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           t \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f);\n        strict_mono f; \\<forall>i. f i \\<in> T P;\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            s = trace_hide t (ev ` A) \\<and>\n                            (t, X - {tick} \\<union> ev ` A) \\<in> F P", "with 3(3)"], ["proof (chain)\npicking this:\n  s @ [tick] = trace_hide (f x) (ev ` A) @ u\n  u = u' @ [tick]", "have B:\"s = trace_hide (f x) (ev ` A) @ u'\""], ["proof (prove)\nusing this:\n  s @ [tick] = trace_hide (f x) (ev ` A) @ u\n  u = u' @ [tick]\n\ngoal (1 subgoal):\n 1. s = trace_hide (f x) (ev ` A) @ u'", "by (auto simp add:tickFree_def split:if_splits)"], ["proof (state)\nthis:\n  s = trace_hide (f x) (ev ` A) @ u'\n\ngoal (1 subgoal):\n 1. \\<And>s X u f x.\n       \\<lbrakk>front_tickFree u; tickFree (f x);\n        s @ [tick] = trace_hide (f x) (ev ` A) @ u;\n        \\<forall>t u.\n           s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           t \\<notin> D P \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T P) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f);\n        strict_mono f; \\<forall>i. f i \\<in> T P;\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            s = trace_hide t (ev ` A) \\<and>\n                            (t, X - {tick} \\<union> ev ` A) \\<in> F P", "with 3(1,2,3,5,6,7) 3(4)[THEN spec, THEN spec, of \"f x\" u']"], ["proof (chain)\npicking this:\n  front_tickFree u\n  tickFree (f x)\n  s @ [tick] = trace_hide (f x) (ev ` A) @ u\n  strict_mono f\n  \\<forall>i. f i \\<in> T P\n  \\<forall>i. trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\n  s = trace_hide (f x) (ev ` A) @ u' \\<longrightarrow>\n  tickFree (f x) \\<longrightarrow>\n  front_tickFree u' \\<longrightarrow>\n  f x \\<notin> D P \\<and>\n  (\\<forall>fa.\n      strict_mono fa \\<longrightarrow>\n      (\\<exists>i. fa i \\<notin> T P) \\<or>\n      (\\<exists>i.\n          trace_hide (fa i) (ev ` A) \\<noteq>\n          trace_hide (fa 0) (ev ` A)) \\<or>\n      f x \\<notin> range fa)\n  s = trace_hide (f x) (ev ` A) @ u'", "show ?case"], ["proof (prove)\nusing this:\n  front_tickFree u\n  tickFree (f x)\n  s @ [tick] = trace_hide (f x) (ev ` A) @ u\n  strict_mono f\n  \\<forall>i. f i \\<in> T P\n  \\<forall>i. trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\n  s = trace_hide (f x) (ev ` A) @ u' \\<longrightarrow>\n  tickFree (f x) \\<longrightarrow>\n  front_tickFree u' \\<longrightarrow>\n  f x \\<notin> D P \\<and>\n  (\\<forall>fa.\n      strict_mono fa \\<longrightarrow>\n      (\\<exists>i. fa i \\<notin> T P) \\<or>\n      (\\<exists>i.\n          trace_hide (fa i) (ev ` A) \\<noteq>\n          trace_hide (fa 0) (ev ` A)) \\<or>\n      f x \\<notin> range fa)\n  s = trace_hide (f x) (ev ` A) @ u'\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       s = trace_hide t (ev ` A) \\<and>\n       (t, X - {tick} \\<union> ev ` A) \\<in> F P", "using front_tickFree_dw_closed[of u' \"[tick]\"]"], ["proof (prove)\nusing this:\n  front_tickFree u\n  tickFree (f x)\n  s @ [tick] = trace_hide (f x) (ev ` A) @ u\n  strict_mono f\n  \\<forall>i. f i \\<in> T P\n  \\<forall>i. trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\n  s = trace_hide (f x) (ev ` A) @ u' \\<longrightarrow>\n  tickFree (f x) \\<longrightarrow>\n  front_tickFree u' \\<longrightarrow>\n  f x \\<notin> D P \\<and>\n  (\\<forall>fa.\n      strict_mono fa \\<longrightarrow>\n      (\\<exists>i. fa i \\<notin> T P) \\<or>\n      (\\<exists>i.\n          trace_hide (fa i) (ev ` A) \\<noteq>\n          trace_hide (fa 0) (ev ` A)) \\<or>\n      f x \\<notin> range fa)\n  s = trace_hide (f x) (ev ` A) @ u'\n  front_tickFree (u' @ [tick]) \\<Longrightarrow> front_tickFree u'\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       s = trace_hide t (ev ` A) \\<and>\n       (t, X - {tick} \\<union> ev ` A) \\<in> F P", "by auto"], ["proof (state)\nthis:\n  \\<exists>t.\n     s = trace_hide t (ev ` A) \\<and>\n     (t, X - {tick} \\<union> ev ` A) \\<in> F P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>s X.\n     (s @ [tick], {})\n     \\<in> {(s, X).\n            \\<exists>t.\n               s = trace_hide t (ev ` A) \\<and>\n               (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n           {(s, X). s \\<in> div_hide P A} \\<longrightarrow>\n     (s, X - {tick})\n     \\<in> {(s, X).\n            \\<exists>t.\n               s = trace_hide t (ev ` A) \\<and>\n               (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n           {(s, X). s \\<in> div_hide P A}\n\ngoal (3 subgoals):\n 1. \\<forall>s t.\n       s \\<in> div_hide P A \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t \\<in> div_hide P A\n 2. \\<forall>s X.\n       s \\<in> div_hide P A \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 3. \\<forall>s.\n       s @ [tick] \\<in> div_hide P A \\<longrightarrow> s \\<in> div_hide P A", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<forall>s t.\n       s \\<in> div_hide P A \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t \\<in> div_hide P A\n 2. \\<forall>s X.\n       s \\<in> div_hide P A \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 3. \\<forall>s.\n       s @ [tick] \\<in> div_hide P A \\<longrightarrow> s \\<in> div_hide P A", "case 7"], ["proof (state)\nthis:\n  \n\ngoal (3 subgoals):\n 1. \\<forall>s t.\n       s \\<in> div_hide P A \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t \\<in> div_hide P A\n 2. \\<forall>s X.\n       s \\<in> div_hide P A \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 3. \\<forall>s.\n       s @ [tick] \\<in> div_hide P A \\<longrightarrow> s \\<in> div_hide P A", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s t.\n       s \\<in> div_hide P A \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t \\<in> div_hide P A", "using front_tickFree_append"], ["proof (prove)\nusing this:\n  \\<lbrakk>tickFree ?s; front_tickFree ?t\\<rbrakk>\n  \\<Longrightarrow> front_tickFree (?s @ ?t)\n\ngoal (1 subgoal):\n 1. \\<forall>s t.\n       s \\<in> div_hide P A \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t \\<in> div_hide P A", "by (auto, blast +)"], ["proof (state)\nthis:\n  \\<forall>s t.\n     s \\<in> div_hide P A \\<and>\n     tickFree s \\<and> front_tickFree t \\<longrightarrow>\n     s @ t \\<in> div_hide P A\n\ngoal (2 subgoals):\n 1. \\<forall>s X.\n       s \\<in> div_hide P A \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 2. \\<forall>s.\n       s @ [tick] \\<in> div_hide P A \\<longrightarrow> s \\<in> div_hide P A", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>s X.\n       s \\<in> div_hide P A \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 2. \\<forall>s.\n       s @ [tick] \\<in> div_hide P A \\<longrightarrow> s \\<in> div_hide P A", "case 8"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<forall>s X.\n       s \\<in> div_hide P A \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}\n 2. \\<forall>s.\n       s @ [tick] \\<in> div_hide P A \\<longrightarrow> s \\<in> div_hide P A", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s X.\n       s \\<in> div_hide P A \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, X).\n              \\<exists>t.\n                 s = trace_hide t (ev ` A) \\<and>\n                 (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n             {(s, X). s \\<in> div_hide P A}", "by simp"], ["proof (state)\nthis:\n  \\<forall>s X.\n     s \\<in> div_hide P A \\<longrightarrow>\n     (s, X)\n     \\<in> {(s, X).\n            \\<exists>t.\n               s = trace_hide t (ev ` A) \\<and>\n               (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n           {(s, X). s \\<in> div_hide P A}\n\ngoal (1 subgoal):\n 1. \\<forall>s.\n       s @ [tick] \\<in> div_hide P A \\<longrightarrow> s \\<in> div_hide P A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>s.\n       s @ [tick] \\<in> div_hide P A \\<longrightarrow> s \\<in> div_hide P A", "case 9"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<forall>s.\n       s @ [tick] \\<in> div_hide P A \\<longrightarrow> s \\<in> div_hide P A", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s.\n       s @ [tick] \\<in> div_hide P A \\<longrightarrow> s \\<in> div_hide P A", "proof (intro allI impI, simp, elim exE, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s t u.\n       front_tickFree u \\<and>\n       tickFree t \\<and>\n       s @ [tick] = trace_hide t (ev ` A) @ u \\<and>\n       (t \\<in> D P \\<or>\n        (\\<exists>f.\n            strict_mono f \\<and>\n            (\\<forall>i. f i \\<in> T P) \\<and>\n            (\\<forall>i.\n                trace_hide (f i) (ev ` A) =\n                trace_hide (f 0) (ev ` A)) \\<and>\n            t \\<in> range f)) \\<Longrightarrow>\n       \\<exists>t u.\n          front_tickFree u \\<and>\n          tickFree t \\<and>\n          s = trace_hide t (ev ` A) @ u \\<and>\n          (t \\<in> D P \\<or>\n           (\\<exists>f.\n               strict_mono f \\<and>\n               (\\<forall>i. f i \\<in> T P) \\<and>\n               (\\<forall>i.\n                   trace_hide (f i) (ev ` A) =\n                   trace_hide (f 0) (ev ` A)) \\<and>\n               t \\<in> range f))", "case (1 s t u)"], ["proof (state)\nthis:\n  front_tickFree u \\<and>\n  tickFree t \\<and>\n  s @ [tick] = trace_hide t (ev ` A) @ u \\<and>\n  (t \\<in> D P \\<or>\n   (\\<exists>f.\n       strict_mono f \\<and>\n       (\\<forall>i. f i \\<in> T P) \\<and>\n       (\\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n       t \\<in> range f))\n\ngoal (1 subgoal):\n 1. \\<And>s t u.\n       front_tickFree u \\<and>\n       tickFree t \\<and>\n       s @ [tick] = trace_hide t (ev ` A) @ u \\<and>\n       (t \\<in> D P \\<or>\n        (\\<exists>f.\n            strict_mono f \\<and>\n            (\\<forall>i. f i \\<in> T P) \\<and>\n            (\\<forall>i.\n                trace_hide (f i) (ev ` A) =\n                trace_hide (f 0) (ev ` A)) \\<and>\n            t \\<in> range f)) \\<Longrightarrow>\n       \\<exists>t u.\n          front_tickFree u \\<and>\n          tickFree t \\<and>\n          s = trace_hide t (ev ` A) @ u \\<and>\n          (t \\<in> D P \\<or>\n           (\\<exists>f.\n               strict_mono f \\<and>\n               (\\<forall>i. f i \\<in> T P) \\<and>\n               (\\<forall>i.\n                   trace_hide (f i) (ev ` A) =\n                   trace_hide (f 0) (ev ` A)) \\<and>\n               t \\<in> range f))", "then"], ["proof (chain)\npicking this:\n  front_tickFree u \\<and>\n  tickFree t \\<and>\n  s @ [tick] = trace_hide t (ev ` A) @ u \\<and>\n  (t \\<in> D P \\<or>\n   (\\<exists>f.\n       strict_mono f \\<and>\n       (\\<forall>i. f i \\<in> T P) \\<and>\n       (\\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n       t \\<in> range f))", "obtain u' where \"u = u'@[tick]\""], ["proof (prove)\nusing this:\n  front_tickFree u \\<and>\n  tickFree t \\<and>\n  s @ [tick] = trace_hide t (ev ` A) @ u \\<and>\n  (t \\<in> D P \\<or>\n   (\\<exists>f.\n       strict_mono f \\<and>\n       (\\<forall>i. f i \\<in> T P) \\<and>\n       (\\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n       t \\<in> range f))\n\ngoal (1 subgoal):\n 1. (\\<And>u'. u = u' @ [tick] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis hiding_tickFree nonTickFree_n_frontTickFree non_tickFree_tick tickFree_append)"], ["proof (state)\nthis:\n  u = u' @ [tick]\n\ngoal (1 subgoal):\n 1. \\<And>s t u.\n       front_tickFree u \\<and>\n       tickFree t \\<and>\n       s @ [tick] = trace_hide t (ev ` A) @ u \\<and>\n       (t \\<in> D P \\<or>\n        (\\<exists>f.\n            strict_mono f \\<and>\n            (\\<forall>i. f i \\<in> T P) \\<and>\n            (\\<forall>i.\n                trace_hide (f i) (ev ` A) =\n                trace_hide (f 0) (ev ` A)) \\<and>\n            t \\<in> range f)) \\<Longrightarrow>\n       \\<exists>t u.\n          front_tickFree u \\<and>\n          tickFree t \\<and>\n          s = trace_hide t (ev ` A) @ u \\<and>\n          (t \\<in> D P \\<or>\n           (\\<exists>f.\n               strict_mono f \\<and>\n               (\\<forall>i. f i \\<in> T P) \\<and>\n               (\\<forall>i.\n                   trace_hide (f i) (ev ` A) =\n                   trace_hide (f 0) (ev ` A)) \\<and>\n               t \\<in> range f))", "with 1"], ["proof (chain)\npicking this:\n  front_tickFree u \\<and>\n  tickFree t \\<and>\n  s @ [tick] = trace_hide t (ev ` A) @ u \\<and>\n  (t \\<in> D P \\<or>\n   (\\<exists>f.\n       strict_mono f \\<and>\n       (\\<forall>i. f i \\<in> T P) \\<and>\n       (\\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n       t \\<in> range f))\n  u = u' @ [tick]", "show ?case"], ["proof (prove)\nusing this:\n  front_tickFree u \\<and>\n  tickFree t \\<and>\n  s @ [tick] = trace_hide t (ev ` A) @ u \\<and>\n  (t \\<in> D P \\<or>\n   (\\<exists>f.\n       strict_mono f \\<and>\n       (\\<forall>i. f i \\<in> T P) \\<and>\n       (\\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n       t \\<in> range f))\n  u = u' @ [tick]\n\ngoal (1 subgoal):\n 1. \\<exists>t u.\n       front_tickFree u \\<and>\n       tickFree t \\<and>\n       s = trace_hide t (ev ` A) @ u \\<and>\n       (t \\<in> D P \\<or>\n        (\\<exists>f.\n            strict_mono f \\<and>\n            (\\<forall>i. f i \\<in> T P) \\<and>\n            (\\<forall>i.\n                trace_hide (f i) (ev ` A) =\n                trace_hide (f 0) (ev ` A)) \\<and>\n            t \\<in> range f))", "apply(rule_tac x=t in exI, rule_tac x=u' in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>front_tickFree u \\<and>\n             tickFree t \\<and>\n             s @ [tick] = trace_hide t (ev ` A) @ u \\<and>\n             (t \\<in> D P \\<or>\n              (\\<exists>f.\n                  strict_mono f \\<and>\n                  (\\<forall>i. f i \\<in> T P) \\<and>\n                  (\\<forall>i.\n                      trace_hide (f i) (ev ` A) =\n                      trace_hide (f 0) (ev ` A)) \\<and>\n                  t \\<in> range f));\n     u = u' @ [tick];\n     front_tickFree u \\<and>\n     tickFree t \\<and>\n     s @ [tick] = trace_hide t (ev ` A) @ u \\<and>\n     (t \\<in> D P \\<or>\n      (\\<exists>f.\n          strict_mono f \\<and>\n          (\\<forall>i. f i \\<in> T P) \\<and>\n          (\\<forall>i.\n              trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n          t \\<in> range f));\n     u = u' @ [tick]\\<rbrakk>\n    \\<Longrightarrow> front_tickFree u' \\<and>\n                      tickFree t \\<and>\n                      s = trace_hide t (ev ` A) @ u' \\<and>\n                      (t \\<in> D P \\<or>\n                       (\\<exists>f.\n                           strict_mono f \\<and>\n                           (\\<forall>i. f i \\<in> T P) \\<and>\n                           (\\<forall>i.\n                               trace_hide (f i) (ev ` A) =\n                               trace_hide (f 0) (ev ` A)) \\<and>\n                           t \\<in> range f))", "using front_tickFree_dw_closed"], ["proof (prove)\nusing this:\n  front_tickFree (?s @ ?t) \\<Longrightarrow> front_tickFree ?s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>front_tickFree u \\<and>\n             tickFree t \\<and>\n             s @ [tick] = trace_hide t (ev ` A) @ u \\<and>\n             (t \\<in> D P \\<or>\n              (\\<exists>f.\n                  strict_mono f \\<and>\n                  (\\<forall>i. f i \\<in> T P) \\<and>\n                  (\\<forall>i.\n                      trace_hide (f i) (ev ` A) =\n                      trace_hide (f 0) (ev ` A)) \\<and>\n                  t \\<in> range f));\n     u = u' @ [tick];\n     front_tickFree u \\<and>\n     tickFree t \\<and>\n     s @ [tick] = trace_hide t (ev ` A) @ u \\<and>\n     (t \\<in> D P \\<or>\n      (\\<exists>f.\n          strict_mono f \\<and>\n          (\\<forall>i. f i \\<in> T P) \\<and>\n          (\\<forall>i.\n              trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n          t \\<in> range f));\n     u = u' @ [tick]\\<rbrakk>\n    \\<Longrightarrow> front_tickFree u' \\<and>\n                      tickFree t \\<and>\n                      s = trace_hide t (ev ` A) @ u' \\<and>\n                      (t \\<in> D P \\<or>\n                       (\\<exists>f.\n                           strict_mono f \\<and>\n                           (\\<forall>i. f i \\<in> T P) \\<and>\n                           (\\<forall>i.\n                               trace_hide (f i) (ev ` A) =\n                               trace_hide (f 0) (ev ` A)) \\<and>\n                           t \\<in> range f))", "by auto"], ["proof (state)\nthis:\n  \\<exists>t u.\n     front_tickFree u \\<and>\n     tickFree t \\<and>\n     s = trace_hide t (ev ` A) @ u \\<and>\n     (t \\<in> D P \\<or>\n      (\\<exists>f.\n          strict_mono f \\<and>\n          (\\<forall>i. f i \\<in> T P) \\<and>\n          (\\<forall>i.\n              trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n          t \\<in> range f))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>s.\n     s @ [tick] \\<in> div_hide P A \\<longrightarrow> s \\<in> div_hide P A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Rep_Abs_Hiding: \"Rep_process (Abs_process \n                                  ({(s,X). \\<exists> t. s = trace_hide t (ev`A) \\<and> (t,X \\<union> (ev`A)) \\<in> F P} \\<union>\n                                   {(s,X). s \\<in> div_hide P A}, div_hide P A))\n                                  = ({(s,X). \\<exists> t. s = trace_hide t (ev`A) \\<and> (t,X \\<union> (ev`A)) \\<in> F P} \\<union>\n                                     {(s,X). s \\<in> div_hide P A}, div_hide P A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_process\n     (Abs_process\n       ({(s, X).\n         \\<exists>t.\n            s = trace_hide t (ev ` A) \\<and>\n            (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n        {(s, X). s \\<in> div_hide P A},\n        div_hide P A)) =\n    ({(s, X).\n      \\<exists>t.\n         s = trace_hide t (ev ` A) \\<and>\n         (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n     {(s, X). s \\<in> div_hide P A},\n     div_hide P A)", "by (simp only:CollectI Rep_process Abs_process_inverse hiding_maintains_is_process)"], ["", "subsection\\<open>Projections\\<close>"], ["", "lemma F_hiding: \"F(P \\\\ A) = {(s,X). \\<exists> t. s = trace_hide t (ev`A) \\<and> (t,X \\<union> (ev`A)) \\<in> F P} \\<union>\n                              {(s,X). s \\<in> div_hide P A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F (P \\ A) =\n    {(s, X).\n     \\<exists>t.\n        s = trace_hide t (ev ` A) \\<and>\n        (t, X \\<union> ev ` A) \\<in> F P} \\<union>\n    {(s, X). s \\<in> div_hide P A}", "by (subst F_def, simp only: hiding_def Rep_Abs_Hiding FAILURES_def fst_conv)"], ["", "lemma D_hiding: \"D(P \\\\ A) = div_hide P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D (P \\ A) = div_hide P A", "by (subst D_def, simp only: hiding_def Rep_Abs_Hiding DIVERGENCES_def snd_conv)"], ["", "lemma T_hiding: \"T(P \\\\ A) = {s. \\<exists>t. s = trace_hide t (ev`A) \\<and>  (t, ev`A) \\<in> F P} \\<union> div_hide P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T (P \\ A) =\n    {trace_hide t (ev ` A) |t. (t, ev ` A) \\<in> F P} \\<union> div_hide P A", "apply (unfold T_def, simp only:Rep_Abs_Hiding hiding_def TRACES_def FAILURES_def fst_conv, auto)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>b t.\n       \\<lbrakk>\\<forall>ta u.\n                   trace_hide t (ev ` A) =\n                   trace_hide ta (ev ` A) @ u \\<longrightarrow>\n                   tickFree ta \\<longrightarrow>\n                   front_tickFree u \\<longrightarrow>\n                   ta \\<notin> D P \\<and>\n                   (\\<forall>f.\n                       strict_mono f \\<longrightarrow>\n                       (\\<exists>i.\n                           \\<forall>b.\n                              (f i, b) \\<notin> fst (Rep_process P)) \\<or>\n                       (\\<exists>i.\n                           trace_hide (f i) (ev ` A) \\<noteq>\n                           trace_hide (f 0) (ev ` A)) \\<or>\n                       ta \\<notin> range f);\n        (t, b \\<union> ev ` A) \\<in> F P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta.\n                            trace_hide t (ev ` A) =\n                            trace_hide ta (ev ` A) \\<and>\n                            (ta, ev ` A) \\<in> F P\n 2. \\<And>u f xa.\n       \\<lbrakk>\\<forall>t ua.\n                   trace_hide (f xa) (ev ` A) @ u =\n                   trace_hide t (ev ` A) @ ua \\<longrightarrow>\n                   tickFree t \\<longrightarrow>\n                   front_tickFree ua \\<longrightarrow>\n                   t \\<notin> D P \\<and>\n                   (\\<forall>f.\n                       strict_mono f \\<longrightarrow>\n                       (\\<exists>i.\n                           \\<forall>b.\n                              (f i, b) \\<notin> fst (Rep_process P)) \\<or>\n                       (\\<exists>i.\n                           trace_hide (f i) (ev ` A) \\<noteq>\n                           trace_hide (f 0) (ev ` A)) \\<or>\n                       t \\<notin> range f);\n        front_tickFree u; tickFree (f xa); strict_mono f;\n        \\<forall>i. f i \\<in> T P;\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            trace_hide (f xa) (ev ` A) @ u =\n                            trace_hide t (ev ` A) \\<and>\n                            (t, ev ` A) \\<in> F P\n 3. \\<And>t.\n       \\<lbrakk>\\<forall>ta u.\n                   trace_hide t (ev ` A) =\n                   trace_hide ta (ev ` A) @ u \\<longrightarrow>\n                   tickFree ta \\<longrightarrow>\n                   front_tickFree u \\<longrightarrow>\n                   ta \\<notin> D P \\<and>\n                   (\\<forall>f.\n                       strict_mono f \\<longrightarrow>\n                       (\\<exists>i. f i \\<notin> T P) \\<or>\n                       (\\<exists>i.\n                           trace_hide (f i) (ev ` A) \\<noteq>\n                           trace_hide (f 0) (ev ` A)) \\<or>\n                       ta \\<notin> range f);\n        (t, ev ` A) \\<in> F P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b ta.\n                            trace_hide t (ev ` A) =\n                            trace_hide ta (ev ` A) \\<and>\n                            (ta, b \\<union> ev ` A) \\<in> F P\n 4. \\<And>u f xa.\n       \\<lbrakk>\\<forall>t ua.\n                   trace_hide (f xa) (ev ` A) @ u =\n                   trace_hide t (ev ` A) @ ua \\<longrightarrow>\n                   tickFree t \\<longrightarrow>\n                   front_tickFree ua \\<longrightarrow>\n                   t \\<notin> D P \\<and>\n                   (\\<forall>f.\n                       strict_mono f \\<longrightarrow>\n                       (\\<exists>i. f i \\<notin> T P) \\<or>\n                       (\\<exists>i.\n                           trace_hide (f i) (ev ` A) \\<noteq>\n                           trace_hide (f 0) (ev ` A)) \\<or>\n                       t \\<notin> range f);\n        front_tickFree u; tickFree (f xa); strict_mono f;\n        \\<forall>i. \\<exists>b. (f i, b) \\<in> fst (Rep_process P);\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b t.\n                            trace_hide (f xa) (ev ` A) @ u =\n                            trace_hide t (ev ` A) \\<and>\n                            (t, b \\<union> ev ` A) \\<in> F P", "apply (metis is_processT sup.cobounded2)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>u f xa.\n       \\<lbrakk>\\<forall>t ua.\n                   trace_hide (f xa) (ev ` A) @ u =\n                   trace_hide t (ev ` A) @ ua \\<longrightarrow>\n                   tickFree t \\<longrightarrow>\n                   front_tickFree ua \\<longrightarrow>\n                   t \\<notin> D P \\<and>\n                   (\\<forall>f.\n                       strict_mono f \\<longrightarrow>\n                       (\\<exists>i.\n                           \\<forall>b.\n                              (f i, b) \\<notin> fst (Rep_process P)) \\<or>\n                       (\\<exists>i.\n                           trace_hide (f i) (ev ` A) \\<noteq>\n                           trace_hide (f 0) (ev ` A)) \\<or>\n                       t \\<notin> range f);\n        front_tickFree u; tickFree (f xa); strict_mono f;\n        \\<forall>i. f i \\<in> T P;\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            trace_hide (f xa) (ev ` A) @ u =\n                            trace_hide t (ev ` A) \\<and>\n                            (t, ev ` A) \\<in> F P\n 2. \\<And>t.\n       \\<lbrakk>\\<forall>ta u.\n                   trace_hide t (ev ` A) =\n                   trace_hide ta (ev ` A) @ u \\<longrightarrow>\n                   tickFree ta \\<longrightarrow>\n                   front_tickFree u \\<longrightarrow>\n                   ta \\<notin> D P \\<and>\n                   (\\<forall>f.\n                       strict_mono f \\<longrightarrow>\n                       (\\<exists>i. f i \\<notin> T P) \\<or>\n                       (\\<exists>i.\n                           trace_hide (f i) (ev ` A) \\<noteq>\n                           trace_hide (f 0) (ev ` A)) \\<or>\n                       ta \\<notin> range f);\n        (t, ev ` A) \\<in> F P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b ta.\n                            trace_hide t (ev ` A) =\n                            trace_hide ta (ev ` A) \\<and>\n                            (ta, b \\<union> ev ` A) \\<in> F P\n 3. \\<And>u f xa.\n       \\<lbrakk>\\<forall>t ua.\n                   trace_hide (f xa) (ev ` A) @ u =\n                   trace_hide t (ev ` A) @ ua \\<longrightarrow>\n                   tickFree t \\<longrightarrow>\n                   front_tickFree ua \\<longrightarrow>\n                   t \\<notin> D P \\<and>\n                   (\\<forall>f.\n                       strict_mono f \\<longrightarrow>\n                       (\\<exists>i. f i \\<notin> T P) \\<or>\n                       (\\<exists>i.\n                           trace_hide (f i) (ev ` A) \\<noteq>\n                           trace_hide (f 0) (ev ` A)) \\<or>\n                       t \\<notin> range f);\n        front_tickFree u; tickFree (f xa); strict_mono f;\n        \\<forall>i. \\<exists>b. (f i, b) \\<in> fst (Rep_process P);\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b t.\n                            trace_hide (f xa) (ev ` A) @ u =\n                            trace_hide t (ev ` A) \\<and>\n                            (t, b \\<union> ev ` A) \\<in> F P", "apply (metis FAILURES_def F_def NF_NT range_eqI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>\\<forall>ta u.\n                   trace_hide t (ev ` A) =\n                   trace_hide ta (ev ` A) @ u \\<longrightarrow>\n                   tickFree ta \\<longrightarrow>\n                   front_tickFree u \\<longrightarrow>\n                   ta \\<notin> D P \\<and>\n                   (\\<forall>f.\n                       strict_mono f \\<longrightarrow>\n                       (\\<exists>i. f i \\<notin> T P) \\<or>\n                       (\\<exists>i.\n                           trace_hide (f i) (ev ` A) \\<noteq>\n                           trace_hide (f 0) (ev ` A)) \\<or>\n                       ta \\<notin> range f);\n        (t, ev ` A) \\<in> F P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b ta.\n                            trace_hide t (ev ` A) =\n                            trace_hide ta (ev ` A) \\<and>\n                            (ta, b \\<union> ev ` A) \\<in> F P\n 2. \\<And>u f xa.\n       \\<lbrakk>\\<forall>t ua.\n                   trace_hide (f xa) (ev ` A) @ u =\n                   trace_hide t (ev ` A) @ ua \\<longrightarrow>\n                   tickFree t \\<longrightarrow>\n                   front_tickFree ua \\<longrightarrow>\n                   t \\<notin> D P \\<and>\n                   (\\<forall>f.\n                       strict_mono f \\<longrightarrow>\n                       (\\<exists>i. f i \\<notin> T P) \\<or>\n                       (\\<exists>i.\n                           trace_hide (f i) (ev ` A) \\<noteq>\n                           trace_hide (f 0) (ev ` A)) \\<or>\n                       t \\<notin> range f);\n        front_tickFree u; tickFree (f xa); strict_mono f;\n        \\<forall>i. \\<exists>b. (f i, b) \\<in> fst (Rep_process P);\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b t.\n                            trace_hide (f xa) (ev ` A) @ u =\n                            trace_hide t (ev ` A) \\<and>\n                            (t, b \\<union> ev ` A) \\<in> F P", "apply (metis sup.idem)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>u f xa.\n       \\<lbrakk>\\<forall>t ua.\n                   trace_hide (f xa) (ev ` A) @ u =\n                   trace_hide t (ev ` A) @ ua \\<longrightarrow>\n                   tickFree t \\<longrightarrow>\n                   front_tickFree ua \\<longrightarrow>\n                   t \\<notin> D P \\<and>\n                   (\\<forall>f.\n                       strict_mono f \\<longrightarrow>\n                       (\\<exists>i. f i \\<notin> T P) \\<or>\n                       (\\<exists>i.\n                           trace_hide (f i) (ev ` A) \\<noteq>\n                           trace_hide (f 0) (ev ` A)) \\<or>\n                       t \\<notin> range f);\n        front_tickFree u; tickFree (f xa); strict_mono f;\n        \\<forall>i. \\<exists>b. (f i, b) \\<in> fst (Rep_process P);\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b t.\n                            trace_hide (f xa) (ev ` A) @ u =\n                            trace_hide t (ev ` A) \\<and>\n                            (t, b \\<union> ev ` A) \\<in> F P", "by (metis FAILURES_def F_T F_def range_eqI)"], ["", "subsection\\<open>Continuity Rule\\<close>"], ["", "lemma mono_hiding[simp]: \"(P::'a process) \\<sqsubseteq> Q \\<Longrightarrow> (P \\\\ A) \\<sqsubseteq> (Q \\\\ A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<sqsubseteq> Q \\<Longrightarrow> P \\ A \\<sqsubseteq> Q \\ A", "proof (auto simp only:le_approx_def D_hiding Ra_def F_hiding T_hiding, goal_cases)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>t u.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q; front_tickFree u; tickFree t;\n        t \\<in> D Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta ua.\n                            front_tickFree ua \\<and>\n                            tickFree ta \\<and>\n                            trace_hide t (ev ` A) @ u =\n                            trace_hide ta (ev ` A) @ ua \\<and>\n                            (ta \\<in> D P \\<or>\n                             (\\<exists>f.\n                                 isInfHiddenRun f P A \\<and>\n                                 ta \\<in> range f))\n 2. \\<And>u f xa.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q; front_tickFree u; tickFree (f xa);\n        xa \\<in> UNIV; strict_mono f; \\<forall>i. f i \\<in> T Q;\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t ua.\n                            front_tickFree ua \\<and>\n                            tickFree t \\<and>\n                            trace_hide (f xa) (ev ` A) @ u =\n                            trace_hide t (ev ` A) @ ua \\<and>\n                            (t \\<in> D P \\<or>\n                             (\\<exists>f.\n                                 isInfHiddenRun f P A \\<and>\n                                 t \\<in> range f))\n 3. \\<And>x t.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>ta u.\n           front_tickFree u \\<and>\n           tickFree ta \\<and>\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n           (ta \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f));\n        \\<nexists>ta.\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) \\<and>\n           (ta, x \\<union> ev ` A) \\<in> F Q;\n        (t, x \\<union> ev ` A) \\<in> F P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta u.\n                            front_tickFree u \\<and>\n                            tickFree ta \\<and>\n                            trace_hide t (ev ` A) =\n                            trace_hide ta (ev ` A) @ u \\<and>\n                            (ta \\<in> D Q \\<or>\n                             (\\<exists>f.\n                                 isInfHiddenRun f Q A \\<and>\n                                 ta \\<in> range f))\n 4. \\<And>x t.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>ta u.\n           front_tickFree u \\<and>\n           tickFree ta \\<and>\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n           (ta \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f));\n        \\<nexists>ta.\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) \\<and>\n           (ta, x \\<union> ev ` A) \\<in> F P;\n        (t, x \\<union> ev ` A) \\<in> F Q\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x t u.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>ta ua.\n           front_tickFree ua \\<and>\n           tickFree ta \\<and>\n           trace_hide t (ev ` A) @ u = trace_hide ta (ev ` A) @ ua \\<and>\n           (ta \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f));\n        \\<nexists>ta.\n           trace_hide t (ev ` A) @ u = trace_hide ta (ev ` A) \\<and>\n           (ta, x \\<union> ev ` A) \\<in> F P;\n        front_tickFree u; tickFree t; t \\<in> D Q\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x u f xa.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>t ua.\n           front_tickFree ua \\<and>\n           tickFree t \\<and>\n           trace_hide (f xa) (ev ` A) @ u =\n           trace_hide t (ev ` A) @ ua \\<and>\n           (t \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> t \\<in> range f));\n        \\<nexists>t.\n           trace_hide (f xa) (ev ` A) @ u = trace_hide t (ev ` A) \\<and>\n           (t, x \\<union> ev ` A) \\<in> F P;\n        front_tickFree u; tickFree (f xa); xa \\<in> UNIV; strict_mono f;\n        \\<forall>i. f i \\<in> T Q;\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q; x \\<in> min_elems (div_hide P A);\n        \\<nexists>t u.\n           front_tickFree u \\<and>\n           tickFree t \\<and>\n           x = trace_hide t (ev ` A) @ u \\<and>\n           (t \\<in> D Q \\<or>\n            (\\<exists>f.\n                isInfHiddenRun f Q A \\<and> t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            x = trace_hide t (ev ` A) \\<and>\n                            (t, ev ` A) \\<in> F Q", "case (1 t u)"], ["proof (state)\nthis:\n  D Q \\<subseteq> D P\n  \\<forall>s.\n     s \\<notin> D P \\<longrightarrow>\n     {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q}\n  min_elems (D P) \\<subseteq> T Q\n  front_tickFree u\n  tickFree t\n  t \\<in> D Q\n\ngoal (7 subgoals):\n 1. \\<And>t u.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q; front_tickFree u; tickFree t;\n        t \\<in> D Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta ua.\n                            front_tickFree ua \\<and>\n                            tickFree ta \\<and>\n                            trace_hide t (ev ` A) @ u =\n                            trace_hide ta (ev ` A) @ ua \\<and>\n                            (ta \\<in> D P \\<or>\n                             (\\<exists>f.\n                                 isInfHiddenRun f P A \\<and>\n                                 ta \\<in> range f))\n 2. \\<And>u f xa.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q; front_tickFree u; tickFree (f xa);\n        xa \\<in> UNIV; strict_mono f; \\<forall>i. f i \\<in> T Q;\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t ua.\n                            front_tickFree ua \\<and>\n                            tickFree t \\<and>\n                            trace_hide (f xa) (ev ` A) @ u =\n                            trace_hide t (ev ` A) @ ua \\<and>\n                            (t \\<in> D P \\<or>\n                             (\\<exists>f.\n                                 isInfHiddenRun f P A \\<and>\n                                 t \\<in> range f))\n 3. \\<And>x t.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>ta u.\n           front_tickFree u \\<and>\n           tickFree ta \\<and>\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n           (ta \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f));\n        \\<nexists>ta.\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) \\<and>\n           (ta, x \\<union> ev ` A) \\<in> F Q;\n        (t, x \\<union> ev ` A) \\<in> F P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta u.\n                            front_tickFree u \\<and>\n                            tickFree ta \\<and>\n                            trace_hide t (ev ` A) =\n                            trace_hide ta (ev ` A) @ u \\<and>\n                            (ta \\<in> D Q \\<or>\n                             (\\<exists>f.\n                                 isInfHiddenRun f Q A \\<and>\n                                 ta \\<in> range f))\n 4. \\<And>x t.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>ta u.\n           front_tickFree u \\<and>\n           tickFree ta \\<and>\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n           (ta \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f));\n        \\<nexists>ta.\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) \\<and>\n           (ta, x \\<union> ev ` A) \\<in> F P;\n        (t, x \\<union> ev ` A) \\<in> F Q\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x t u.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>ta ua.\n           front_tickFree ua \\<and>\n           tickFree ta \\<and>\n           trace_hide t (ev ` A) @ u = trace_hide ta (ev ` A) @ ua \\<and>\n           (ta \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f));\n        \\<nexists>ta.\n           trace_hide t (ev ` A) @ u = trace_hide ta (ev ` A) \\<and>\n           (ta, x \\<union> ev ` A) \\<in> F P;\n        front_tickFree u; tickFree t; t \\<in> D Q\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x u f xa.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>t ua.\n           front_tickFree ua \\<and>\n           tickFree t \\<and>\n           trace_hide (f xa) (ev ` A) @ u =\n           trace_hide t (ev ` A) @ ua \\<and>\n           (t \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> t \\<in> range f));\n        \\<nexists>t.\n           trace_hide (f xa) (ev ` A) @ u = trace_hide t (ev ` A) \\<and>\n           (t, x \\<union> ev ` A) \\<in> F P;\n        front_tickFree u; tickFree (f xa); xa \\<in> UNIV; strict_mono f;\n        \\<forall>i. f i \\<in> T Q;\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>x.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q; x \\<in> min_elems (div_hide P A);\n        \\<nexists>t u.\n           front_tickFree u \\<and>\n           tickFree t \\<and>\n           x = trace_hide t (ev ` A) @ u \\<and>\n           (t \\<in> D Q \\<or>\n            (\\<exists>f.\n                isInfHiddenRun f Q A \\<and> t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            x = trace_hide t (ev ` A) \\<and>\n                            (t, ev ` A) \\<in> F Q", "thus ?case"], ["proof (prove)\nusing this:\n  D Q \\<subseteq> D P\n  \\<forall>s.\n     s \\<notin> D P \\<longrightarrow>\n     {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q}\n  min_elems (D P) \\<subseteq> T Q\n  front_tickFree u\n  tickFree t\n  t \\<in> D Q\n\ngoal (1 subgoal):\n 1. \\<exists>ta ua.\n       front_tickFree ua \\<and>\n       tickFree ta \\<and>\n       trace_hide t (ev ` A) @ u = trace_hide ta (ev ` A) @ ua \\<and>\n       (ta \\<in> D P \\<or>\n        (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f))", "by blast"], ["proof (state)\nthis:\n  \\<exists>ta ua.\n     front_tickFree ua \\<and>\n     tickFree ta \\<and>\n     trace_hide t (ev ` A) @ u = trace_hide ta (ev ` A) @ ua \\<and>\n     (ta \\<in> D P \\<or>\n      (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f))\n\ngoal (6 subgoals):\n 1. \\<And>u f xa.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q; front_tickFree u; tickFree (f xa);\n        xa \\<in> UNIV; strict_mono f; \\<forall>i. f i \\<in> T Q;\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t ua.\n                            front_tickFree ua \\<and>\n                            tickFree t \\<and>\n                            trace_hide (f xa) (ev ` A) @ u =\n                            trace_hide t (ev ` A) @ ua \\<and>\n                            (t \\<in> D P \\<or>\n                             (\\<exists>f.\n                                 isInfHiddenRun f P A \\<and>\n                                 t \\<in> range f))\n 2. \\<And>x t.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>ta u.\n           front_tickFree u \\<and>\n           tickFree ta \\<and>\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n           (ta \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f));\n        \\<nexists>ta.\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) \\<and>\n           (ta, x \\<union> ev ` A) \\<in> F Q;\n        (t, x \\<union> ev ` A) \\<in> F P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta u.\n                            front_tickFree u \\<and>\n                            tickFree ta \\<and>\n                            trace_hide t (ev ` A) =\n                            trace_hide ta (ev ` A) @ u \\<and>\n                            (ta \\<in> D Q \\<or>\n                             (\\<exists>f.\n                                 isInfHiddenRun f Q A \\<and>\n                                 ta \\<in> range f))\n 3. \\<And>x t.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>ta u.\n           front_tickFree u \\<and>\n           tickFree ta \\<and>\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n           (ta \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f));\n        \\<nexists>ta.\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) \\<and>\n           (ta, x \\<union> ev ` A) \\<in> F P;\n        (t, x \\<union> ev ` A) \\<in> F Q\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x t u.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>ta ua.\n           front_tickFree ua \\<and>\n           tickFree ta \\<and>\n           trace_hide t (ev ` A) @ u = trace_hide ta (ev ` A) @ ua \\<and>\n           (ta \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f));\n        \\<nexists>ta.\n           trace_hide t (ev ` A) @ u = trace_hide ta (ev ` A) \\<and>\n           (ta, x \\<union> ev ` A) \\<in> F P;\n        front_tickFree u; tickFree t; t \\<in> D Q\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x u f xa.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>t ua.\n           front_tickFree ua \\<and>\n           tickFree t \\<and>\n           trace_hide (f xa) (ev ` A) @ u =\n           trace_hide t (ev ` A) @ ua \\<and>\n           (t \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> t \\<in> range f));\n        \\<nexists>t.\n           trace_hide (f xa) (ev ` A) @ u = trace_hide t (ev ` A) \\<and>\n           (t, x \\<union> ev ` A) \\<in> F P;\n        front_tickFree u; tickFree (f xa); xa \\<in> UNIV; strict_mono f;\n        \\<forall>i. f i \\<in> T Q;\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q; x \\<in> min_elems (div_hide P A);\n        \\<nexists>t u.\n           front_tickFree u \\<and>\n           tickFree t \\<and>\n           x = trace_hide t (ev ` A) @ u \\<and>\n           (t \\<in> D Q \\<or>\n            (\\<exists>f.\n                isInfHiddenRun f Q A \\<and> t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            x = trace_hide t (ev ` A) \\<and>\n                            (t, ev ` A) \\<in> F Q", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>u f xa.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q; front_tickFree u; tickFree (f xa);\n        xa \\<in> UNIV; strict_mono f; \\<forall>i. f i \\<in> T Q;\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t ua.\n                            front_tickFree ua \\<and>\n                            tickFree t \\<and>\n                            trace_hide (f xa) (ev ` A) @ u =\n                            trace_hide t (ev ` A) @ ua \\<and>\n                            (t \\<in> D P \\<or>\n                             (\\<exists>f.\n                                 isInfHiddenRun f P A \\<and>\n                                 t \\<in> range f))\n 2. \\<And>x t.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>ta u.\n           front_tickFree u \\<and>\n           tickFree ta \\<and>\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n           (ta \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f));\n        \\<nexists>ta.\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) \\<and>\n           (ta, x \\<union> ev ` A) \\<in> F Q;\n        (t, x \\<union> ev ` A) \\<in> F P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta u.\n                            front_tickFree u \\<and>\n                            tickFree ta \\<and>\n                            trace_hide t (ev ` A) =\n                            trace_hide ta (ev ` A) @ u \\<and>\n                            (ta \\<in> D Q \\<or>\n                             (\\<exists>f.\n                                 isInfHiddenRun f Q A \\<and>\n                                 ta \\<in> range f))\n 3. \\<And>x t.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>ta u.\n           front_tickFree u \\<and>\n           tickFree ta \\<and>\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n           (ta \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f));\n        \\<nexists>ta.\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) \\<and>\n           (ta, x \\<union> ev ` A) \\<in> F P;\n        (t, x \\<union> ev ` A) \\<in> F Q\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x t u.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>ta ua.\n           front_tickFree ua \\<and>\n           tickFree ta \\<and>\n           trace_hide t (ev ` A) @ u = trace_hide ta (ev ` A) @ ua \\<and>\n           (ta \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f));\n        \\<nexists>ta.\n           trace_hide t (ev ` A) @ u = trace_hide ta (ev ` A) \\<and>\n           (ta, x \\<union> ev ` A) \\<in> F P;\n        front_tickFree u; tickFree t; t \\<in> D Q\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x u f xa.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>t ua.\n           front_tickFree ua \\<and>\n           tickFree t \\<and>\n           trace_hide (f xa) (ev ` A) @ u =\n           trace_hide t (ev ` A) @ ua \\<and>\n           (t \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> t \\<in> range f));\n        \\<nexists>t.\n           trace_hide (f xa) (ev ` A) @ u = trace_hide t (ev ` A) \\<and>\n           (t, x \\<union> ev ` A) \\<in> F P;\n        front_tickFree u; tickFree (f xa); xa \\<in> UNIV; strict_mono f;\n        \\<forall>i. f i \\<in> T Q;\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q; x \\<in> min_elems (div_hide P A);\n        \\<nexists>t u.\n           front_tickFree u \\<and>\n           tickFree t \\<and>\n           x = trace_hide t (ev ` A) @ u \\<and>\n           (t \\<in> D Q \\<or>\n            (\\<exists>f.\n                isInfHiddenRun f Q A \\<and> t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            x = trace_hide t (ev ` A) \\<and>\n                            (t, ev ` A) \\<in> F Q", "case (2 u f xa)"], ["proof (state)\nthis:\n  D Q \\<subseteq> D P\n  \\<forall>s.\n     s \\<notin> D P \\<longrightarrow>\n     {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q}\n  min_elems (D P) \\<subseteq> T Q\n  front_tickFree u\n  tickFree (f xa)\n  xa \\<in> UNIV\n  strict_mono f\n  \\<forall>i. f i \\<in> T Q\n  \\<forall>i. trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\n\ngoal (6 subgoals):\n 1. \\<And>u f xa.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q; front_tickFree u; tickFree (f xa);\n        xa \\<in> UNIV; strict_mono f; \\<forall>i. f i \\<in> T Q;\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t ua.\n                            front_tickFree ua \\<and>\n                            tickFree t \\<and>\n                            trace_hide (f xa) (ev ` A) @ u =\n                            trace_hide t (ev ` A) @ ua \\<and>\n                            (t \\<in> D P \\<or>\n                             (\\<exists>f.\n                                 isInfHiddenRun f P A \\<and>\n                                 t \\<in> range f))\n 2. \\<And>x t.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>ta u.\n           front_tickFree u \\<and>\n           tickFree ta \\<and>\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n           (ta \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f));\n        \\<nexists>ta.\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) \\<and>\n           (ta, x \\<union> ev ` A) \\<in> F Q;\n        (t, x \\<union> ev ` A) \\<in> F P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta u.\n                            front_tickFree u \\<and>\n                            tickFree ta \\<and>\n                            trace_hide t (ev ` A) =\n                            trace_hide ta (ev ` A) @ u \\<and>\n                            (ta \\<in> D Q \\<or>\n                             (\\<exists>f.\n                                 isInfHiddenRun f Q A \\<and>\n                                 ta \\<in> range f))\n 3. \\<And>x t.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>ta u.\n           front_tickFree u \\<and>\n           tickFree ta \\<and>\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n           (ta \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f));\n        \\<nexists>ta.\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) \\<and>\n           (ta, x \\<union> ev ` A) \\<in> F P;\n        (t, x \\<union> ev ` A) \\<in> F Q\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x t u.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>ta ua.\n           front_tickFree ua \\<and>\n           tickFree ta \\<and>\n           trace_hide t (ev ` A) @ u = trace_hide ta (ev ` A) @ ua \\<and>\n           (ta \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f));\n        \\<nexists>ta.\n           trace_hide t (ev ` A) @ u = trace_hide ta (ev ` A) \\<and>\n           (ta, x \\<union> ev ` A) \\<in> F P;\n        front_tickFree u; tickFree t; t \\<in> D Q\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x u f xa.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>t ua.\n           front_tickFree ua \\<and>\n           tickFree t \\<and>\n           trace_hide (f xa) (ev ` A) @ u =\n           trace_hide t (ev ` A) @ ua \\<and>\n           (t \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> t \\<in> range f));\n        \\<nexists>t.\n           trace_hide (f xa) (ev ` A) @ u = trace_hide t (ev ` A) \\<and>\n           (t, x \\<union> ev ` A) \\<in> F P;\n        front_tickFree u; tickFree (f xa); xa \\<in> UNIV; strict_mono f;\n        \\<forall>i. f i \\<in> T Q;\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>x.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q; x \\<in> min_elems (div_hide P A);\n        \\<nexists>t u.\n           front_tickFree u \\<and>\n           tickFree t \\<and>\n           x = trace_hide t (ev ` A) @ u \\<and>\n           (t \\<in> D Q \\<or>\n            (\\<exists>f.\n                isInfHiddenRun f Q A \\<and> t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            x = trace_hide t (ev ` A) \\<and>\n                            (t, ev ` A) \\<in> F Q", "thus ?case"], ["proof (prove)\nusing this:\n  D Q \\<subseteq> D P\n  \\<forall>s.\n     s \\<notin> D P \\<longrightarrow>\n     {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q}\n  min_elems (D P) \\<subseteq> T Q\n  front_tickFree u\n  tickFree (f xa)\n  xa \\<in> UNIV\n  strict_mono f\n  \\<forall>i. f i \\<in> T Q\n  \\<forall>i. trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\n\ngoal (1 subgoal):\n 1. \\<exists>t ua.\n       front_tickFree ua \\<and>\n       tickFree t \\<and>\n       trace_hide (f xa) (ev ` A) @ u = trace_hide t (ev ` A) @ ua \\<and>\n       (t \\<in> D P \\<or>\n        (\\<exists>f. isInfHiddenRun f P A \\<and> t \\<in> range f))", "apply(rule_tac x=\"f xa\" in exI, rule_tac x=u in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>D Q \\<subseteq> D P;\n     \\<forall>s.\n        s \\<notin> D P \\<longrightarrow>\n        {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n     min_elems (D P) \\<subseteq> T Q; front_tickFree u; tickFree (f xa);\n     xa \\<in> UNIV; strict_mono f; \\<forall>i. f i \\<in> T Q;\n     \\<forall>i. trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A);\n     D Q \\<subseteq> D P;\n     \\<forall>s.\n        s \\<notin> D P \\<longrightarrow>\n        {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n     min_elems (D P) \\<subseteq> T Q; front_tickFree u; tickFree (f xa);\n     xa \\<in> UNIV; strict_mono f; \\<forall>i. f i \\<in> T Q;\n     \\<forall>i.\n        trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n    \\<Longrightarrow> front_tickFree u \\<and>\n                      tickFree (f xa) \\<and>\n                      trace_hide (f xa) (ev ` A) @ u =\n                      trace_hide (f xa) (ev ` A) @ u \\<and>\n                      (f xa \\<in> D P \\<or>\n                       (\\<exists>fa.\n                           isInfHiddenRun fa P A \\<and>\n                           f xa \\<in> range fa))", "by (metis D_T Ra_def le_approx2T le_approx_def rangeI)"], ["proof (state)\nthis:\n  \\<exists>t ua.\n     front_tickFree ua \\<and>\n     tickFree t \\<and>\n     trace_hide (f xa) (ev ` A) @ u = trace_hide t (ev ` A) @ ua \\<and>\n     (t \\<in> D P \\<or>\n      (\\<exists>f. isInfHiddenRun f P A \\<and> t \\<in> range f))\n\ngoal (5 subgoals):\n 1. \\<And>x t.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>ta u.\n           front_tickFree u \\<and>\n           tickFree ta \\<and>\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n           (ta \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f));\n        \\<nexists>ta.\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) \\<and>\n           (ta, x \\<union> ev ` A) \\<in> F Q;\n        (t, x \\<union> ev ` A) \\<in> F P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta u.\n                            front_tickFree u \\<and>\n                            tickFree ta \\<and>\n                            trace_hide t (ev ` A) =\n                            trace_hide ta (ev ` A) @ u \\<and>\n                            (ta \\<in> D Q \\<or>\n                             (\\<exists>f.\n                                 isInfHiddenRun f Q A \\<and>\n                                 ta \\<in> range f))\n 2. \\<And>x t.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>ta u.\n           front_tickFree u \\<and>\n           tickFree ta \\<and>\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n           (ta \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f));\n        \\<nexists>ta.\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) \\<and>\n           (ta, x \\<union> ev ` A) \\<in> F P;\n        (t, x \\<union> ev ` A) \\<in> F Q\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x t u.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>ta ua.\n           front_tickFree ua \\<and>\n           tickFree ta \\<and>\n           trace_hide t (ev ` A) @ u = trace_hide ta (ev ` A) @ ua \\<and>\n           (ta \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f));\n        \\<nexists>ta.\n           trace_hide t (ev ` A) @ u = trace_hide ta (ev ` A) \\<and>\n           (ta, x \\<union> ev ` A) \\<in> F P;\n        front_tickFree u; tickFree t; t \\<in> D Q\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x u f xa.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>t ua.\n           front_tickFree ua \\<and>\n           tickFree t \\<and>\n           trace_hide (f xa) (ev ` A) @ u =\n           trace_hide t (ev ` A) @ ua \\<and>\n           (t \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> t \\<in> range f));\n        \\<nexists>t.\n           trace_hide (f xa) (ev ` A) @ u = trace_hide t (ev ` A) \\<and>\n           (t, x \\<union> ev ` A) \\<in> F P;\n        front_tickFree u; tickFree (f xa); xa \\<in> UNIV; strict_mono f;\n        \\<forall>i. f i \\<in> T Q;\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q; x \\<in> min_elems (div_hide P A);\n        \\<nexists>t u.\n           front_tickFree u \\<and>\n           tickFree t \\<and>\n           x = trace_hide t (ev ` A) @ u \\<and>\n           (t \\<in> D Q \\<or>\n            (\\<exists>f.\n                isInfHiddenRun f Q A \\<and> t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            x = trace_hide t (ev ` A) \\<and>\n                            (t, ev ` A) \\<in> F Q", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x t.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>ta u.\n           front_tickFree u \\<and>\n           tickFree ta \\<and>\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n           (ta \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f));\n        \\<nexists>ta.\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) \\<and>\n           (ta, x \\<union> ev ` A) \\<in> F Q;\n        (t, x \\<union> ev ` A) \\<in> F P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta u.\n                            front_tickFree u \\<and>\n                            tickFree ta \\<and>\n                            trace_hide t (ev ` A) =\n                            trace_hide ta (ev ` A) @ u \\<and>\n                            (ta \\<in> D Q \\<or>\n                             (\\<exists>f.\n                                 isInfHiddenRun f Q A \\<and>\n                                 ta \\<in> range f))\n 2. \\<And>x t.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>ta u.\n           front_tickFree u \\<and>\n           tickFree ta \\<and>\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n           (ta \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f));\n        \\<nexists>ta.\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) \\<and>\n           (ta, x \\<union> ev ` A) \\<in> F P;\n        (t, x \\<union> ev ` A) \\<in> F Q\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x t u.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>ta ua.\n           front_tickFree ua \\<and>\n           tickFree ta \\<and>\n           trace_hide t (ev ` A) @ u = trace_hide ta (ev ` A) @ ua \\<and>\n           (ta \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f));\n        \\<nexists>ta.\n           trace_hide t (ev ` A) @ u = trace_hide ta (ev ` A) \\<and>\n           (ta, x \\<union> ev ` A) \\<in> F P;\n        front_tickFree u; tickFree t; t \\<in> D Q\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x u f xa.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>t ua.\n           front_tickFree ua \\<and>\n           tickFree t \\<and>\n           trace_hide (f xa) (ev ` A) @ u =\n           trace_hide t (ev ` A) @ ua \\<and>\n           (t \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> t \\<in> range f));\n        \\<nexists>t.\n           trace_hide (f xa) (ev ` A) @ u = trace_hide t (ev ` A) \\<and>\n           (t, x \\<union> ev ` A) \\<in> F P;\n        front_tickFree u; tickFree (f xa); xa \\<in> UNIV; strict_mono f;\n        \\<forall>i. f i \\<in> T Q;\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q; x \\<in> min_elems (div_hide P A);\n        \\<nexists>t u.\n           front_tickFree u \\<and>\n           tickFree t \\<and>\n           x = trace_hide t (ev ` A) @ u \\<and>\n           (t \\<in> D Q \\<or>\n            (\\<exists>f.\n                isInfHiddenRun f Q A \\<and> t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            x = trace_hide t (ev ` A) \\<and>\n                            (t, ev ` A) \\<in> F Q", "case (3 x t)"], ["proof (state)\nthis:\n  D Q \\<subseteq> D P\n  \\<forall>s.\n     s \\<notin> D P \\<longrightarrow>\n     {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q}\n  min_elems (D P) \\<subseteq> T Q\n  \\<nexists>ta u.\n     front_tickFree u \\<and>\n     tickFree ta \\<and>\n     trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n     (ta \\<in> D P \\<or>\n      (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f))\n  \\<nexists>ta.\n     trace_hide t (ev ` A) = trace_hide ta (ev ` A) \\<and>\n     (ta, x \\<union> ev ` A) \\<in> F Q\n  (t, x \\<union> ev ` A) \\<in> F P\n\ngoal (5 subgoals):\n 1. \\<And>x t.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>ta u.\n           front_tickFree u \\<and>\n           tickFree ta \\<and>\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n           (ta \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f));\n        \\<nexists>ta.\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) \\<and>\n           (ta, x \\<union> ev ` A) \\<in> F Q;\n        (t, x \\<union> ev ` A) \\<in> F P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta u.\n                            front_tickFree u \\<and>\n                            tickFree ta \\<and>\n                            trace_hide t (ev ` A) =\n                            trace_hide ta (ev ` A) @ u \\<and>\n                            (ta \\<in> D Q \\<or>\n                             (\\<exists>f.\n                                 isInfHiddenRun f Q A \\<and>\n                                 ta \\<in> range f))\n 2. \\<And>x t.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>ta u.\n           front_tickFree u \\<and>\n           tickFree ta \\<and>\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n           (ta \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f));\n        \\<nexists>ta.\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) \\<and>\n           (ta, x \\<union> ev ` A) \\<in> F P;\n        (t, x \\<union> ev ` A) \\<in> F Q\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x t u.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>ta ua.\n           front_tickFree ua \\<and>\n           tickFree ta \\<and>\n           trace_hide t (ev ` A) @ u = trace_hide ta (ev ` A) @ ua \\<and>\n           (ta \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f));\n        \\<nexists>ta.\n           trace_hide t (ev ` A) @ u = trace_hide ta (ev ` A) \\<and>\n           (ta, x \\<union> ev ` A) \\<in> F P;\n        front_tickFree u; tickFree t; t \\<in> D Q\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x u f xa.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>t ua.\n           front_tickFree ua \\<and>\n           tickFree t \\<and>\n           trace_hide (f xa) (ev ` A) @ u =\n           trace_hide t (ev ` A) @ ua \\<and>\n           (t \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> t \\<in> range f));\n        \\<nexists>t.\n           trace_hide (f xa) (ev ` A) @ u = trace_hide t (ev ` A) \\<and>\n           (t, x \\<union> ev ` A) \\<in> F P;\n        front_tickFree u; tickFree (f xa); xa \\<in> UNIV; strict_mono f;\n        \\<forall>i. f i \\<in> T Q;\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q; x \\<in> min_elems (div_hide P A);\n        \\<nexists>t u.\n           front_tickFree u \\<and>\n           tickFree t \\<and>\n           x = trace_hide t (ev ` A) @ u \\<and>\n           (t \\<in> D Q \\<or>\n            (\\<exists>f.\n                isInfHiddenRun f Q A \\<and> t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            x = trace_hide t (ev ` A) \\<and>\n                            (t, ev ` A) \\<in> F Q", "hence A:\"front_tickFree t\""], ["proof (prove)\nusing this:\n  D Q \\<subseteq> D P\n  \\<forall>s.\n     s \\<notin> D P \\<longrightarrow>\n     {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q}\n  min_elems (D P) \\<subseteq> T Q\n  \\<nexists>ta u.\n     front_tickFree u \\<and>\n     tickFree ta \\<and>\n     trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n     (ta \\<in> D P \\<or>\n      (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f))\n  \\<nexists>ta.\n     trace_hide t (ev ` A) = trace_hide ta (ev ` A) \\<and>\n     (ta, x \\<union> ev ` A) \\<in> F Q\n  (t, x \\<union> ev ` A) \\<in> F P\n\ngoal (1 subgoal):\n 1. front_tickFree t", "by (meson is_processT2)"], ["proof (state)\nthis:\n  front_tickFree t\n\ngoal (5 subgoals):\n 1. \\<And>x t.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>ta u.\n           front_tickFree u \\<and>\n           tickFree ta \\<and>\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n           (ta \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f));\n        \\<nexists>ta.\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) \\<and>\n           (ta, x \\<union> ev ` A) \\<in> F Q;\n        (t, x \\<union> ev ` A) \\<in> F P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta u.\n                            front_tickFree u \\<and>\n                            tickFree ta \\<and>\n                            trace_hide t (ev ` A) =\n                            trace_hide ta (ev ` A) @ u \\<and>\n                            (ta \\<in> D Q \\<or>\n                             (\\<exists>f.\n                                 isInfHiddenRun f Q A \\<and>\n                                 ta \\<in> range f))\n 2. \\<And>x t.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>ta u.\n           front_tickFree u \\<and>\n           tickFree ta \\<and>\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n           (ta \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f));\n        \\<nexists>ta.\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) \\<and>\n           (ta, x \\<union> ev ` A) \\<in> F P;\n        (t, x \\<union> ev ` A) \\<in> F Q\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x t u.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>ta ua.\n           front_tickFree ua \\<and>\n           tickFree ta \\<and>\n           trace_hide t (ev ` A) @ u = trace_hide ta (ev ` A) @ ua \\<and>\n           (ta \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f));\n        \\<nexists>ta.\n           trace_hide t (ev ` A) @ u = trace_hide ta (ev ` A) \\<and>\n           (ta, x \\<union> ev ` A) \\<in> F P;\n        front_tickFree u; tickFree t; t \\<in> D Q\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x u f xa.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>t ua.\n           front_tickFree ua \\<and>\n           tickFree t \\<and>\n           trace_hide (f xa) (ev ` A) @ u =\n           trace_hide t (ev ` A) @ ua \\<and>\n           (t \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> t \\<in> range f));\n        \\<nexists>t.\n           trace_hide (f xa) (ev ` A) @ u = trace_hide t (ev ` A) \\<and>\n           (t, x \\<union> ev ` A) \\<in> F P;\n        front_tickFree u; tickFree (f xa); xa \\<in> UNIV; strict_mono f;\n        \\<forall>i. f i \\<in> T Q;\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>x.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q; x \\<in> min_elems (div_hide P A);\n        \\<nexists>t u.\n           front_tickFree u \\<and>\n           tickFree t \\<and>\n           x = trace_hide t (ev ` A) @ u \\<and>\n           (t \\<in> D Q \\<or>\n            (\\<exists>f.\n                isInfHiddenRun f Q A \\<and> t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            x = trace_hide t (ev ` A) \\<and>\n                            (t, ev ` A) \\<in> F Q", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ta u.\n       front_tickFree u \\<and>\n       tickFree ta \\<and>\n       trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n       (ta \\<in> D Q \\<or>\n        (\\<exists>f. isInfHiddenRun f Q A \\<and> ta \\<in> range f))", "proof(cases \"tickFree t\")"], ["proof (state)\ngoal (2 subgoals):\n 1. tickFree t \\<Longrightarrow>\n    \\<exists>ta u.\n       front_tickFree u \\<and>\n       tickFree ta \\<and>\n       trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n       (ta \\<in> D Q \\<or>\n        (\\<exists>f. isInfHiddenRun f Q A \\<and> ta \\<in> range f))\n 2. \\<not> tickFree t \\<Longrightarrow>\n    \\<exists>ta u.\n       front_tickFree u \\<and>\n       tickFree ta \\<and>\n       trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n       (ta \\<in> D Q \\<or>\n        (\\<exists>f. isInfHiddenRun f Q A \\<and> ta \\<in> range f))", "case True"], ["proof (state)\nthis:\n  tickFree t\n\ngoal (2 subgoals):\n 1. tickFree t \\<Longrightarrow>\n    \\<exists>ta u.\n       front_tickFree u \\<and>\n       tickFree ta \\<and>\n       trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n       (ta \\<in> D Q \\<or>\n        (\\<exists>f. isInfHiddenRun f Q A \\<and> ta \\<in> range f))\n 2. \\<not> tickFree t \\<Longrightarrow>\n    \\<exists>ta u.\n       front_tickFree u \\<and>\n       tickFree ta \\<and>\n       trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n       (ta \\<in> D Q \\<or>\n        (\\<exists>f. isInfHiddenRun f Q A \\<and> ta \\<in> range f))", "thus ?thesis"], ["proof (prove)\nusing this:\n  tickFree t\n\ngoal (1 subgoal):\n 1. \\<exists>ta u.\n       front_tickFree u \\<and>\n       tickFree ta \\<and>\n       trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n       (ta \\<in> D Q \\<or>\n        (\\<exists>f. isInfHiddenRun f Q A \\<and> ta \\<in> range f))", "by (metis \"3\"(2) \"3\"(4) \"3\"(5) \"3\"(6) front_tickFree_charn mem_Collect_eq self_append_conv)"], ["proof (state)\nthis:\n  \\<exists>ta u.\n     front_tickFree u \\<and>\n     tickFree ta \\<and>\n     trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n     (ta \\<in> D Q \\<or>\n      (\\<exists>f. isInfHiddenRun f Q A \\<and> ta \\<in> range f))\n\ngoal (1 subgoal):\n 1. \\<not> tickFree t \\<Longrightarrow>\n    \\<exists>ta u.\n       front_tickFree u \\<and>\n       tickFree ta \\<and>\n       trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n       (ta \\<in> D Q \\<or>\n        (\\<exists>f. isInfHiddenRun f Q A \\<and> ta \\<in> range f))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> tickFree t \\<Longrightarrow>\n    \\<exists>ta u.\n       front_tickFree u \\<and>\n       tickFree ta \\<and>\n       trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n       (ta \\<in> D Q \\<or>\n        (\\<exists>f. isInfHiddenRun f Q A \\<and> ta \\<in> range f))", "case False"], ["proof (state)\nthis:\n  \\<not> tickFree t\n\ngoal (1 subgoal):\n 1. \\<not> tickFree t \\<Longrightarrow>\n    \\<exists>ta u.\n       front_tickFree u \\<and>\n       tickFree ta \\<and>\n       trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n       (ta \\<in> D Q \\<or>\n        (\\<exists>f. isInfHiddenRun f Q A \\<and> ta \\<in> range f))", "with A"], ["proof (chain)\npicking this:\n  front_tickFree t\n  \\<not> tickFree t", "obtain t' where \"t = t'@[tick]\""], ["proof (prove)\nusing this:\n  front_tickFree t\n  \\<not> tickFree t\n\ngoal (1 subgoal):\n 1. (\\<And>t'. t = t' @ [tick] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using nonTickFree_n_frontTickFree"], ["proof (prove)\nusing this:\n  front_tickFree t\n  \\<not> tickFree t\n  \\<lbrakk>\\<not> tickFree ?s; front_tickFree ?s\\<rbrakk>\n  \\<Longrightarrow> \\<exists>t. ?s = t @ [tick]\n\ngoal (1 subgoal):\n 1. (\\<And>t'. t = t' @ [tick] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  t = t' @ [tick]\n\ngoal (1 subgoal):\n 1. \\<not> tickFree t \\<Longrightarrow>\n    \\<exists>ta u.\n       front_tickFree u \\<and>\n       tickFree ta \\<and>\n       trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n       (ta \\<in> D Q \\<or>\n        (\\<exists>f. isInfHiddenRun f Q A \\<and> ta \\<in> range f))", "with 3"], ["proof (chain)\npicking this:\n  D Q \\<subseteq> D P\n  \\<forall>s.\n     s \\<notin> D P \\<longrightarrow>\n     {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q}\n  min_elems (D P) \\<subseteq> T Q\n  \\<nexists>ta u.\n     front_tickFree u \\<and>\n     tickFree ta \\<and>\n     trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n     (ta \\<in> D P \\<or>\n      (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f))\n  \\<nexists>ta.\n     trace_hide t (ev ` A) = trace_hide ta (ev ` A) \\<and>\n     (ta, x \\<union> ev ` A) \\<in> F Q\n  (t, x \\<union> ev ` A) \\<in> F P\n  t = t' @ [tick]", "show ?thesis"], ["proof (prove)\nusing this:\n  D Q \\<subseteq> D P\n  \\<forall>s.\n     s \\<notin> D P \\<longrightarrow>\n     {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q}\n  min_elems (D P) \\<subseteq> T Q\n  \\<nexists>ta u.\n     front_tickFree u \\<and>\n     tickFree ta \\<and>\n     trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n     (ta \\<in> D P \\<or>\n      (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f))\n  \\<nexists>ta.\n     trace_hide t (ev ` A) = trace_hide ta (ev ` A) \\<and>\n     (ta, x \\<union> ev ` A) \\<in> F Q\n  (t, x \\<union> ev ` A) \\<in> F P\n  t = t' @ [tick]\n\ngoal (1 subgoal):\n 1. \\<exists>ta u.\n       front_tickFree u \\<and>\n       tickFree ta \\<and>\n       trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n       (ta \\<in> D Q \\<or>\n        (\\<exists>f. isInfHiddenRun f Q A \\<and> ta \\<in> range f))", "by (metis (no_types, lifting) filter.simps(1) filter.simps(2) front_tickFree_mono\n          front_tickFree_Nil filter_append is_processT9 list.distinct(1) local.A mem_Collect_eq)"], ["proof (state)\nthis:\n  \\<exists>ta u.\n     front_tickFree u \\<and>\n     tickFree ta \\<and>\n     trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n     (ta \\<in> D Q \\<or>\n      (\\<exists>f. isInfHiddenRun f Q A \\<and> ta \\<in> range f))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ta u.\n     front_tickFree u \\<and>\n     tickFree ta \\<and>\n     trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n     (ta \\<in> D Q \\<or>\n      (\\<exists>f. isInfHiddenRun f Q A \\<and> ta \\<in> range f))\n\ngoal (4 subgoals):\n 1. \\<And>x t.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>ta u.\n           front_tickFree u \\<and>\n           tickFree ta \\<and>\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n           (ta \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f));\n        \\<nexists>ta.\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) \\<and>\n           (ta, x \\<union> ev ` A) \\<in> F P;\n        (t, x \\<union> ev ` A) \\<in> F Q\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x t u.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>ta ua.\n           front_tickFree ua \\<and>\n           tickFree ta \\<and>\n           trace_hide t (ev ` A) @ u = trace_hide ta (ev ` A) @ ua \\<and>\n           (ta \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f));\n        \\<nexists>ta.\n           trace_hide t (ev ` A) @ u = trace_hide ta (ev ` A) \\<and>\n           (ta, x \\<union> ev ` A) \\<in> F P;\n        front_tickFree u; tickFree t; t \\<in> D Q\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x u f xa.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>t ua.\n           front_tickFree ua \\<and>\n           tickFree t \\<and>\n           trace_hide (f xa) (ev ` A) @ u =\n           trace_hide t (ev ` A) @ ua \\<and>\n           (t \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> t \\<in> range f));\n        \\<nexists>t.\n           trace_hide (f xa) (ev ` A) @ u = trace_hide t (ev ` A) \\<and>\n           (t, x \\<union> ev ` A) \\<in> F P;\n        front_tickFree u; tickFree (f xa); xa \\<in> UNIV; strict_mono f;\n        \\<forall>i. f i \\<in> T Q;\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q; x \\<in> min_elems (div_hide P A);\n        \\<nexists>t u.\n           front_tickFree u \\<and>\n           tickFree t \\<and>\n           x = trace_hide t (ev ` A) @ u \\<and>\n           (t \\<in> D Q \\<or>\n            (\\<exists>f.\n                isInfHiddenRun f Q A \\<and> t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            x = trace_hide t (ev ` A) \\<and>\n                            (t, ev ` A) \\<in> F Q", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x t.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>ta u.\n           front_tickFree u \\<and>\n           tickFree ta \\<and>\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n           (ta \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f));\n        \\<nexists>ta.\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) \\<and>\n           (ta, x \\<union> ev ` A) \\<in> F P;\n        (t, x \\<union> ev ` A) \\<in> F Q\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x t u.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>ta ua.\n           front_tickFree ua \\<and>\n           tickFree ta \\<and>\n           trace_hide t (ev ` A) @ u = trace_hide ta (ev ` A) @ ua \\<and>\n           (ta \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f));\n        \\<nexists>ta.\n           trace_hide t (ev ` A) @ u = trace_hide ta (ev ` A) \\<and>\n           (ta, x \\<union> ev ` A) \\<in> F P;\n        front_tickFree u; tickFree t; t \\<in> D Q\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x u f xa.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>t ua.\n           front_tickFree ua \\<and>\n           tickFree t \\<and>\n           trace_hide (f xa) (ev ` A) @ u =\n           trace_hide t (ev ` A) @ ua \\<and>\n           (t \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> t \\<in> range f));\n        \\<nexists>t.\n           trace_hide (f xa) (ev ` A) @ u = trace_hide t (ev ` A) \\<and>\n           (t, x \\<union> ev ` A) \\<in> F P;\n        front_tickFree u; tickFree (f xa); xa \\<in> UNIV; strict_mono f;\n        \\<forall>i. f i \\<in> T Q;\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q; x \\<in> min_elems (div_hide P A);\n        \\<nexists>t u.\n           front_tickFree u \\<and>\n           tickFree t \\<and>\n           x = trace_hide t (ev ` A) @ u \\<and>\n           (t \\<in> D Q \\<or>\n            (\\<exists>f.\n                isInfHiddenRun f Q A \\<and> t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            x = trace_hide t (ev ` A) \\<and>\n                            (t, ev ` A) \\<in> F Q", "case (4 x t)"], ["proof (state)\nthis:\n  D Q \\<subseteq> D P\n  \\<forall>s.\n     s \\<notin> D P \\<longrightarrow>\n     {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q}\n  min_elems (D P) \\<subseteq> T Q\n  \\<nexists>ta u.\n     front_tickFree u \\<and>\n     tickFree ta \\<and>\n     trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n     (ta \\<in> D P \\<or>\n      (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f))\n  \\<nexists>ta.\n     trace_hide t (ev ` A) = trace_hide ta (ev ` A) \\<and>\n     (ta, x \\<union> ev ` A) \\<in> F P\n  (t, x \\<union> ev ` A) \\<in> F Q\n\ngoal (4 subgoals):\n 1. \\<And>x t.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>ta u.\n           front_tickFree u \\<and>\n           tickFree ta \\<and>\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n           (ta \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f));\n        \\<nexists>ta.\n           trace_hide t (ev ` A) = trace_hide ta (ev ` A) \\<and>\n           (ta, x \\<union> ev ` A) \\<in> F P;\n        (t, x \\<union> ev ` A) \\<in> F Q\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x t u.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>ta ua.\n           front_tickFree ua \\<and>\n           tickFree ta \\<and>\n           trace_hide t (ev ` A) @ u = trace_hide ta (ev ` A) @ ua \\<and>\n           (ta \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f));\n        \\<nexists>ta.\n           trace_hide t (ev ` A) @ u = trace_hide ta (ev ` A) \\<and>\n           (ta, x \\<union> ev ` A) \\<in> F P;\n        front_tickFree u; tickFree t; t \\<in> D Q\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x u f xa.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>t ua.\n           front_tickFree ua \\<and>\n           tickFree t \\<and>\n           trace_hide (f xa) (ev ` A) @ u =\n           trace_hide t (ev ` A) @ ua \\<and>\n           (t \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> t \\<in> range f));\n        \\<nexists>t.\n           trace_hide (f xa) (ev ` A) @ u = trace_hide t (ev ` A) \\<and>\n           (t, x \\<union> ev ` A) \\<in> F P;\n        front_tickFree u; tickFree (f xa); xa \\<in> UNIV; strict_mono f;\n        \\<forall>i. f i \\<in> T Q;\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q; x \\<in> min_elems (div_hide P A);\n        \\<nexists>t u.\n           front_tickFree u \\<and>\n           tickFree t \\<and>\n           x = trace_hide t (ev ` A) @ u \\<and>\n           (t \\<in> D Q \\<or>\n            (\\<exists>f.\n                isInfHiddenRun f Q A \\<and> t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            x = trace_hide t (ev ` A) \\<and>\n                            (t, ev ` A) \\<in> F Q", "thus ?case"], ["proof (prove)\nusing this:\n  D Q \\<subseteq> D P\n  \\<forall>s.\n     s \\<notin> D P \\<longrightarrow>\n     {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q}\n  min_elems (D P) \\<subseteq> T Q\n  \\<nexists>ta u.\n     front_tickFree u \\<and>\n     tickFree ta \\<and>\n     trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n     (ta \\<in> D P \\<or>\n      (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f))\n  \\<nexists>ta.\n     trace_hide t (ev ` A) = trace_hide ta (ev ` A) \\<and>\n     (ta, x \\<union> ev ` A) \\<in> F P\n  (t, x \\<union> ev ` A) \\<in> F Q\n\ngoal (1 subgoal):\n 1. False", "using NF_ND"], ["proof (prove)\nusing this:\n  D Q \\<subseteq> D P\n  \\<forall>s.\n     s \\<notin> D P \\<longrightarrow>\n     {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q}\n  min_elems (D P) \\<subseteq> T Q\n  \\<nexists>ta u.\n     front_tickFree u \\<and>\n     tickFree ta \\<and>\n     trace_hide t (ev ` A) = trace_hide ta (ev ` A) @ u \\<and>\n     (ta \\<in> D P \\<or>\n      (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f))\n  \\<nexists>ta.\n     trace_hide t (ev ` A) = trace_hide ta (ev ` A) \\<and>\n     (ta, x \\<union> ev ` A) \\<in> F P\n  (t, x \\<union> ev ` A) \\<in> F Q\n  (?s, ?X) \\<notin> F ?P \\<Longrightarrow> ?s \\<notin> D ?P\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal (3 subgoals):\n 1. \\<And>x t u.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>ta ua.\n           front_tickFree ua \\<and>\n           tickFree ta \\<and>\n           trace_hide t (ev ` A) @ u = trace_hide ta (ev ` A) @ ua \\<and>\n           (ta \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f));\n        \\<nexists>ta.\n           trace_hide t (ev ` A) @ u = trace_hide ta (ev ` A) \\<and>\n           (ta, x \\<union> ev ` A) \\<in> F P;\n        front_tickFree u; tickFree t; t \\<in> D Q\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x u f xa.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>t ua.\n           front_tickFree ua \\<and>\n           tickFree t \\<and>\n           trace_hide (f xa) (ev ` A) @ u =\n           trace_hide t (ev ` A) @ ua \\<and>\n           (t \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> t \\<in> range f));\n        \\<nexists>t.\n           trace_hide (f xa) (ev ` A) @ u = trace_hide t (ev ` A) \\<and>\n           (t, x \\<union> ev ` A) \\<in> F P;\n        front_tickFree u; tickFree (f xa); xa \\<in> UNIV; strict_mono f;\n        \\<forall>i. f i \\<in> T Q;\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q; x \\<in> min_elems (div_hide P A);\n        \\<nexists>t u.\n           front_tickFree u \\<and>\n           tickFree t \\<and>\n           x = trace_hide t (ev ` A) @ u \\<and>\n           (t \\<in> D Q \\<or>\n            (\\<exists>f.\n                isInfHiddenRun f Q A \\<and> t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            x = trace_hide t (ev ` A) \\<and>\n                            (t, ev ` A) \\<in> F Q", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x t u.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>ta ua.\n           front_tickFree ua \\<and>\n           tickFree ta \\<and>\n           trace_hide t (ev ` A) @ u = trace_hide ta (ev ` A) @ ua \\<and>\n           (ta \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f));\n        \\<nexists>ta.\n           trace_hide t (ev ` A) @ u = trace_hide ta (ev ` A) \\<and>\n           (ta, x \\<union> ev ` A) \\<in> F P;\n        front_tickFree u; tickFree t; t \\<in> D Q\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x u f xa.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>t ua.\n           front_tickFree ua \\<and>\n           tickFree t \\<and>\n           trace_hide (f xa) (ev ` A) @ u =\n           trace_hide t (ev ` A) @ ua \\<and>\n           (t \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> t \\<in> range f));\n        \\<nexists>t.\n           trace_hide (f xa) (ev ` A) @ u = trace_hide t (ev ` A) \\<and>\n           (t, x \\<union> ev ` A) \\<in> F P;\n        front_tickFree u; tickFree (f xa); xa \\<in> UNIV; strict_mono f;\n        \\<forall>i. f i \\<in> T Q;\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q; x \\<in> min_elems (div_hide P A);\n        \\<nexists>t u.\n           front_tickFree u \\<and>\n           tickFree t \\<and>\n           x = trace_hide t (ev ` A) @ u \\<and>\n           (t \\<in> D Q \\<or>\n            (\\<exists>f.\n                isInfHiddenRun f Q A \\<and> t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            x = trace_hide t (ev ` A) \\<and>\n                            (t, ev ` A) \\<in> F Q", "case (5 x t u)"], ["proof (state)\nthis:\n  D Q \\<subseteq> D P\n  \\<forall>s.\n     s \\<notin> D P \\<longrightarrow>\n     {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q}\n  min_elems (D P) \\<subseteq> T Q\n  \\<nexists>ta ua.\n     front_tickFree ua \\<and>\n     tickFree ta \\<and>\n     trace_hide t (ev ` A) @ u = trace_hide ta (ev ` A) @ ua \\<and>\n     (ta \\<in> D P \\<or>\n      (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f))\n  \\<nexists>ta.\n     trace_hide t (ev ` A) @ u = trace_hide ta (ev ` A) \\<and>\n     (ta, x \\<union> ev ` A) \\<in> F P\n  front_tickFree u\n  tickFree t\n  t \\<in> D Q\n\ngoal (3 subgoals):\n 1. \\<And>x t u.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>ta ua.\n           front_tickFree ua \\<and>\n           tickFree ta \\<and>\n           trace_hide t (ev ` A) @ u = trace_hide ta (ev ` A) @ ua \\<and>\n           (ta \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f));\n        \\<nexists>ta.\n           trace_hide t (ev ` A) @ u = trace_hide ta (ev ` A) \\<and>\n           (ta, x \\<union> ev ` A) \\<in> F P;\n        front_tickFree u; tickFree t; t \\<in> D Q\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x u f xa.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>t ua.\n           front_tickFree ua \\<and>\n           tickFree t \\<and>\n           trace_hide (f xa) (ev ` A) @ u =\n           trace_hide t (ev ` A) @ ua \\<and>\n           (t \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> t \\<in> range f));\n        \\<nexists>t.\n           trace_hide (f xa) (ev ` A) @ u = trace_hide t (ev ` A) \\<and>\n           (t, x \\<union> ev ` A) \\<in> F P;\n        front_tickFree u; tickFree (f xa); xa \\<in> UNIV; strict_mono f;\n        \\<forall>i. f i \\<in> T Q;\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q; x \\<in> min_elems (div_hide P A);\n        \\<nexists>t u.\n           front_tickFree u \\<and>\n           tickFree t \\<and>\n           x = trace_hide t (ev ` A) @ u \\<and>\n           (t \\<in> D Q \\<or>\n            (\\<exists>f.\n                isInfHiddenRun f Q A \\<and> t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            x = trace_hide t (ev ` A) \\<and>\n                            (t, ev ` A) \\<in> F Q", "thus ?case"], ["proof (prove)\nusing this:\n  D Q \\<subseteq> D P\n  \\<forall>s.\n     s \\<notin> D P \\<longrightarrow>\n     {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q}\n  min_elems (D P) \\<subseteq> T Q\n  \\<nexists>ta ua.\n     front_tickFree ua \\<and>\n     tickFree ta \\<and>\n     trace_hide t (ev ` A) @ u = trace_hide ta (ev ` A) @ ua \\<and>\n     (ta \\<in> D P \\<or>\n      (\\<exists>f. isInfHiddenRun f P A \\<and> ta \\<in> range f))\n  \\<nexists>ta.\n     trace_hide t (ev ` A) @ u = trace_hide ta (ev ` A) \\<and>\n     (ta, x \\<union> ev ` A) \\<in> F P\n  front_tickFree u\n  tickFree t\n  t \\<in> D Q\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal (2 subgoals):\n 1. \\<And>x u f xa.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>t ua.\n           front_tickFree ua \\<and>\n           tickFree t \\<and>\n           trace_hide (f xa) (ev ` A) @ u =\n           trace_hide t (ev ` A) @ ua \\<and>\n           (t \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> t \\<in> range f));\n        \\<nexists>t.\n           trace_hide (f xa) (ev ` A) @ u = trace_hide t (ev ` A) \\<and>\n           (t, x \\<union> ev ` A) \\<in> F P;\n        front_tickFree u; tickFree (f xa); xa \\<in> UNIV; strict_mono f;\n        \\<forall>i. f i \\<in> T Q;\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q; x \\<in> min_elems (div_hide P A);\n        \\<nexists>t u.\n           front_tickFree u \\<and>\n           tickFree t \\<and>\n           x = trace_hide t (ev ` A) @ u \\<and>\n           (t \\<in> D Q \\<or>\n            (\\<exists>f.\n                isInfHiddenRun f Q A \\<and> t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            x = trace_hide t (ev ` A) \\<and>\n                            (t, ev ` A) \\<in> F Q", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x u f xa.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>t ua.\n           front_tickFree ua \\<and>\n           tickFree t \\<and>\n           trace_hide (f xa) (ev ` A) @ u =\n           trace_hide t (ev ` A) @ ua \\<and>\n           (t \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> t \\<in> range f));\n        \\<nexists>t.\n           trace_hide (f xa) (ev ` A) @ u = trace_hide t (ev ` A) \\<and>\n           (t, x \\<union> ev ` A) \\<in> F P;\n        front_tickFree u; tickFree (f xa); xa \\<in> UNIV; strict_mono f;\n        \\<forall>i. f i \\<in> T Q;\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q; x \\<in> min_elems (div_hide P A);\n        \\<nexists>t u.\n           front_tickFree u \\<and>\n           tickFree t \\<and>\n           x = trace_hide t (ev ` A) @ u \\<and>\n           (t \\<in> D Q \\<or>\n            (\\<exists>f.\n                isInfHiddenRun f Q A \\<and> t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            x = trace_hide t (ev ` A) \\<and>\n                            (t, ev ` A) \\<in> F Q", "case (6 x u f xa)"], ["proof (state)\nthis:\n  D Q \\<subseteq> D P\n  \\<forall>s.\n     s \\<notin> D P \\<longrightarrow>\n     {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q}\n  min_elems (D P) \\<subseteq> T Q\n  \\<nexists>t ua.\n     front_tickFree ua \\<and>\n     tickFree t \\<and>\n     trace_hide (f xa) (ev ` A) @ u = trace_hide t (ev ` A) @ ua \\<and>\n     (t \\<in> D P \\<or>\n      (\\<exists>f. isInfHiddenRun f P A \\<and> t \\<in> range f))\n  \\<nexists>t.\n     trace_hide (f xa) (ev ` A) @ u = trace_hide t (ev ` A) \\<and>\n     (t, x \\<union> ev ` A) \\<in> F P\n  front_tickFree u\n  tickFree (f xa)\n  xa \\<in> UNIV\n  strict_mono f\n  \\<forall>i. f i \\<in> T Q\n  \\<forall>i. trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\n\ngoal (2 subgoals):\n 1. \\<And>x u f xa.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q;\n        \\<nexists>t ua.\n           front_tickFree ua \\<and>\n           tickFree t \\<and>\n           trace_hide (f xa) (ev ` A) @ u =\n           trace_hide t (ev ` A) @ ua \\<and>\n           (t \\<in> D P \\<or>\n            (\\<exists>f. isInfHiddenRun f P A \\<and> t \\<in> range f));\n        \\<nexists>t.\n           trace_hide (f xa) (ev ` A) @ u = trace_hide t (ev ` A) \\<and>\n           (t, x \\<union> ev ` A) \\<in> F P;\n        front_tickFree u; tickFree (f xa); xa \\<in> UNIV; strict_mono f;\n        \\<forall>i. f i \\<in> T Q;\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q; x \\<in> min_elems (div_hide P A);\n        \\<nexists>t u.\n           front_tickFree u \\<and>\n           tickFree t \\<and>\n           x = trace_hide t (ev ` A) @ u \\<and>\n           (t \\<in> D Q \\<or>\n            (\\<exists>f.\n                isInfHiddenRun f Q A \\<and> t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            x = trace_hide t (ev ` A) \\<and>\n                            (t, ev ` A) \\<in> F Q", "thus ?case"], ["proof (prove)\nusing this:\n  D Q \\<subseteq> D P\n  \\<forall>s.\n     s \\<notin> D P \\<longrightarrow>\n     {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q}\n  min_elems (D P) \\<subseteq> T Q\n  \\<nexists>t ua.\n     front_tickFree ua \\<and>\n     tickFree t \\<and>\n     trace_hide (f xa) (ev ` A) @ u = trace_hide t (ev ` A) @ ua \\<and>\n     (t \\<in> D P \\<or>\n      (\\<exists>f. isInfHiddenRun f P A \\<and> t \\<in> range f))\n  \\<nexists>t.\n     trace_hide (f xa) (ev ` A) @ u = trace_hide t (ev ` A) \\<and>\n     (t, x \\<union> ev ` A) \\<in> F P\n  front_tickFree u\n  tickFree (f xa)\n  xa \\<in> UNIV\n  strict_mono f\n  \\<forall>i. f i \\<in> T Q\n  \\<forall>i. trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\n\ngoal (1 subgoal):\n 1. False", "by (metis D_T Ra_def le_approx2T le_approx_def rangeI)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q; x \\<in> min_elems (div_hide P A);\n        \\<nexists>t u.\n           front_tickFree u \\<and>\n           tickFree t \\<and>\n           x = trace_hide t (ev ` A) @ u \\<and>\n           (t \\<in> D Q \\<or>\n            (\\<exists>f.\n                isInfHiddenRun f Q A \\<and> t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            x = trace_hide t (ev ` A) \\<and>\n                            (t, ev ` A) \\<in> F Q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q; x \\<in> min_elems (div_hide P A);\n        \\<nexists>t u.\n           front_tickFree u \\<and>\n           tickFree t \\<and>\n           x = trace_hide t (ev ` A) @ u \\<and>\n           (t \\<in> D Q \\<or>\n            (\\<exists>f.\n                isInfHiddenRun f Q A \\<and> t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            x = trace_hide t (ev ` A) \\<and>\n                            (t, ev ` A) \\<in> F Q", "case (7 x)"], ["proof (state)\nthis:\n  D Q \\<subseteq> D P\n  \\<forall>s.\n     s \\<notin> D P \\<longrightarrow>\n     {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q}\n  min_elems (D P) \\<subseteq> T Q\n  x \\<in> min_elems (div_hide P A)\n  \\<nexists>t u.\n     front_tickFree u \\<and>\n     tickFree t \\<and>\n     x = trace_hide t (ev ` A) @ u \\<and>\n     (t \\<in> D Q \\<or>\n      (\\<exists>f. isInfHiddenRun f Q A \\<and> t \\<in> range f))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q; x \\<in> min_elems (div_hide P A);\n        \\<nexists>t u.\n           front_tickFree u \\<and>\n           tickFree t \\<and>\n           x = trace_hide t (ev ` A) @ u \\<and>\n           (t \\<in> D Q \\<or>\n            (\\<exists>f.\n                isInfHiddenRun f Q A \\<and> t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            x = trace_hide t (ev ` A) \\<and>\n                            (t, ev ` A) \\<in> F Q", "from 7(4)"], ["proof (chain)\npicking this:\n  x \\<in> min_elems (div_hide P A)", "have A:\"x \\<in> min_elems (div_hide P A)\""], ["proof (prove)\nusing this:\n  x \\<in> min_elems (div_hide P A)\n\ngoal (1 subgoal):\n 1. x \\<in> min_elems (div_hide P A)", "by simp"], ["proof (state)\nthis:\n  x \\<in> min_elems (div_hide P A)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q; x \\<in> min_elems (div_hide P A);\n        \\<nexists>t u.\n           front_tickFree u \\<and>\n           tickFree t \\<and>\n           x = trace_hide t (ev ` A) @ u \\<and>\n           (t \\<in> D Q \\<or>\n            (\\<exists>f.\n                isInfHiddenRun f Q A \\<and> t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            x = trace_hide t (ev ` A) \\<and>\n                            (t, ev ` A) \\<in> F Q", "from elem_min_elems[OF 7(4), simplified]"], ["proof (chain)\npicking this:\n  \\<exists>t u.\n     front_tickFree u \\<and>\n     tickFree t \\<and>\n     x = trace_hide t (ev ` A) @ u \\<and>\n     (t \\<in> D P \\<or>\n      (\\<exists>f.\n          strict_mono f \\<and>\n          (\\<forall>i. f i \\<in> T P) \\<and>\n          (\\<forall>i.\n              trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n          t \\<in> range f))", "obtain t u \n    where B1:\"x = trace_hide t (ev ` A) @ u\" and B2:\"tickFree t\" and B3:\"front_tickFree u\" and \n             B4:\"(t \\<in> D P \\<or> (\\<exists>(f:: nat \\<Rightarrow> 'a event list). strict_mono f \\<and> (\\<forall>i. f i \\<in> T P) \\<and>\n             (\\<forall>i. trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and> t \\<in> range f))\""], ["proof (prove)\nusing this:\n  \\<exists>t u.\n     front_tickFree u \\<and>\n     tickFree t \\<and>\n     x = trace_hide t (ev ` A) @ u \\<and>\n     (t \\<in> D P \\<or>\n      (\\<exists>f.\n          strict_mono f \\<and>\n          (\\<forall>i. f i \\<in> T P) \\<and>\n          (\\<forall>i.\n              trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n          t \\<in> range f))\n\ngoal (1 subgoal):\n 1. (\\<And>t u.\n        \\<lbrakk>x = trace_hide t (ev ` A) @ u; tickFree t;\n         front_tickFree u;\n         t \\<in> D P \\<or>\n         (\\<exists>f.\n             strict_mono f \\<and>\n             (\\<forall>i. f i \\<in> T P) \\<and>\n             (\\<forall>i.\n                 trace_hide (f i) (ev ` A) =\n                 trace_hide (f 0) (ev ` A)) \\<and>\n             t \\<in> range f)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x = trace_hide t (ev ` A) @ u\n  tickFree t\n  front_tickFree u\n  t \\<in> D P \\<or>\n  (\\<exists>f.\n      strict_mono f \\<and>\n      (\\<forall>i. f i \\<in> T P) \\<and>\n      (\\<forall>i.\n          trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n      t \\<in> range f)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>D Q \\<subseteq> D P;\n        \\<forall>s.\n           s \\<notin> D P \\<longrightarrow>\n           {X. (s, X) \\<in> F P} = {X. (s, X) \\<in> F Q};\n        min_elems (D P) \\<subseteq> T Q; x \\<in> min_elems (div_hide P A);\n        \\<nexists>t u.\n           front_tickFree u \\<and>\n           tickFree t \\<and>\n           x = trace_hide t (ev ` A) @ u \\<and>\n           (t \\<in> D Q \\<or>\n            (\\<exists>f.\n                isInfHiddenRun f Q A \\<and> t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            x = trace_hide t (ev ` A) \\<and>\n                            (t, ev ` A) \\<in> F Q", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t. x = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F Q", "proof(cases \"t \\<in> D P\")"], ["proof (state)\ngoal (2 subgoals):\n 1. t \\<in> D P \\<Longrightarrow>\n    \\<exists>t. x = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F Q\n 2. t \\<notin> D P \\<Longrightarrow>\n    \\<exists>t. x = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F Q", "case True"], ["proof (state)\nthis:\n  t \\<in> D P\n\ngoal (2 subgoals):\n 1. t \\<in> D P \\<Longrightarrow>\n    \\<exists>t. x = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F Q\n 2. t \\<notin> D P \\<Longrightarrow>\n    \\<exists>t. x = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F Q", "then"], ["proof (chain)\npicking this:\n  t \\<in> D P", "obtain t' t'' where C1:\"t'@t''=t\" and C2:\"t' \\<in> min_elems (D P)\""], ["proof (prove)\nusing this:\n  t \\<in> D P\n\ngoal (1 subgoal):\n 1. (\\<And>t' t''.\n        \\<lbrakk>t' @ t'' = t; t' \\<in> min_elems (D P)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis min_elems_charn)"], ["proof (state)\nthis:\n  t' @ t'' = t\n  t' \\<in> min_elems (D P)\n\ngoal (2 subgoals):\n 1. t \\<in> D P \\<Longrightarrow>\n    \\<exists>t. x = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F Q\n 2. t \\<notin> D P \\<Longrightarrow>\n    \\<exists>t. x = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F Q", "hence C3:\"trace_hide t' (ev ` A) \\<in> div_hide P A\""], ["proof (prove)\nusing this:\n  t' @ t'' = t\n  t' \\<in> min_elems (D P)\n\ngoal (1 subgoal):\n 1. trace_hide t' (ev ` A) \\<in> div_hide P A", "apply (simp, rule_tac x=t' in exI, rule_tac x=\"[]\" in exI, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t' @ t'' = t; t' \\<in> min_elems (D P)\\<rbrakk>\n    \\<Longrightarrow> tickFree t' \\<and>\n                      (t' \\<in> D P \\<or>\n                       (\\<exists>f.\n                           strict_mono f \\<and>\n                           (\\<forall>i. f i \\<in> T P) \\<and>\n                           (\\<forall>i.\n                               trace_hide (f i) (ev ` A) =\n                               trace_hide (f 0) (ev ` A)) \\<and>\n                           t' \\<in> range f))", "using B2 elem_min_elems tickFree_append"], ["proof (prove)\nusing this:\n  tickFree t\n  ?c \\<in> min_elems ?B \\<Longrightarrow> ?c \\<in> ?B\n  tickFree (?s @ ?t) = (tickFree ?s \\<and> tickFree ?t)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>t' @ t'' = t; t' \\<in> min_elems (D P)\\<rbrakk>\n    \\<Longrightarrow> tickFree t' \\<and>\n                      (t' \\<in> D P \\<or>\n                       (\\<exists>f.\n                           strict_mono f \\<and>\n                           (\\<forall>i. f i \\<in> T P) \\<and>\n                           (\\<forall>i.\n                               trace_hide (f i) (ev ` A) =\n                               trace_hide (f 0) (ev ` A)) \\<and>\n                           t' \\<in> range f))", "by blast"], ["proof (state)\nthis:\n  trace_hide t' (ev ` A) \\<in> div_hide P A\n\ngoal (2 subgoals):\n 1. t \\<in> D P \\<Longrightarrow>\n    \\<exists>t. x = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F Q\n 2. t \\<notin> D P \\<Longrightarrow>\n    \\<exists>t. x = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F Q", "from C1 B1"], ["proof (chain)\npicking this:\n  t' @ t'' = t\n  x = trace_hide t (ev ` A) @ u", "have D1:\"trace_hide t' (ev ` A) @ trace_hide t'' (ev ` A) = trace_hide t (ev ` A)\""], ["proof (prove)\nusing this:\n  t' @ t'' = t\n  x = trace_hide t (ev ` A) @ u\n\ngoal (1 subgoal):\n 1. trace_hide t' (ev ` A) @ trace_hide t'' (ev ` A) = trace_hide t (ev ` A)", "by fastforce"], ["proof (state)\nthis:\n  trace_hide t' (ev ` A) @ trace_hide t'' (ev ` A) = trace_hide t (ev ` A)\n\ngoal (2 subgoals):\n 1. t \\<in> D P \\<Longrightarrow>\n    \\<exists>t. x = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F Q\n 2. t \\<notin> D P \\<Longrightarrow>\n    \\<exists>t. x = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F Q", "from B1 C1 D1 min_elems_no[OF A C3]"], ["proof (chain)\npicking this:\n  x = trace_hide t (ev ` A) @ u\n  t' @ t'' = t\n  trace_hide t' (ev ` A) @ trace_hide t'' (ev ` A) = trace_hide t (ev ` A)\n  trace_hide t' (ev ` A) \\<le> x \\<Longrightarrow>\n  x = trace_hide t' (ev ` A)", "have E1:\"x=trace_hide t' (ev ` A)\""], ["proof (prove)\nusing this:\n  x = trace_hide t (ev ` A) @ u\n  t' @ t'' = t\n  trace_hide t' (ev ` A) @ trace_hide t'' (ev ` A) = trace_hide t (ev ` A)\n  trace_hide t' (ev ` A) \\<le> x \\<Longrightarrow>\n  x = trace_hide t' (ev ` A)\n\ngoal (1 subgoal):\n 1. x = trace_hide t' (ev ` A)", "by (metis (no_types, lifting) append.assoc le_list_def)"], ["proof (state)\nthis:\n  x = trace_hide t' (ev ` A)\n\ngoal (2 subgoals):\n 1. t \\<in> D P \\<Longrightarrow>\n    \\<exists>t. x = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F Q\n 2. t \\<notin> D P \\<Longrightarrow>\n    \\<exists>t. x = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F Q", "with B1 B2 B3 C1 D1 7(5)[simplified, rule_format, of \"t'\" \"[]\"]"], ["proof (chain)\npicking this:\n  x = trace_hide t (ev ` A) @ u\n  tickFree t\n  front_tickFree u\n  t' @ t'' = t\n  trace_hide t' (ev ` A) @ trace_hide t'' (ev ` A) = trace_hide t (ev ` A)\n  \\<lbrakk>x = trace_hide t' (ev ` A) @ []; tickFree t';\n   front_tickFree []\\<rbrakk>\n  \\<Longrightarrow> t' \\<notin> D Q \\<and>\n                    (\\<forall>f.\n                        strict_mono f \\<longrightarrow>\n                        (\\<exists>i. f i \\<notin> T Q) \\<or>\n                        (\\<exists>i.\n                            trace_hide (f i) (ev ` A) \\<noteq>\n                            trace_hide (f 0) (ev ` A)) \\<or>\n                        t' \\<notin> range f)\n  x = trace_hide t' (ev ` A)", "have E2:\"(\\<forall>(f:: nat \\<Rightarrow> 'a event list). strict_mono f \\<longrightarrow> (\\<exists>i. f i \\<notin> T Q) \\<or>\n              (\\<exists>i. trace_hide (f i) (ev ` A) \\<noteq> trace_hide (f 0) (ev ` A)) \\<or> t' \\<notin> range f)\""], ["proof (prove)\nusing this:\n  x = trace_hide t (ev ` A) @ u\n  tickFree t\n  front_tickFree u\n  t' @ t'' = t\n  trace_hide t' (ev ` A) @ trace_hide t'' (ev ` A) = trace_hide t (ev ` A)\n  \\<lbrakk>x = trace_hide t' (ev ` A) @ []; tickFree t';\n   front_tickFree []\\<rbrakk>\n  \\<Longrightarrow> t' \\<notin> D Q \\<and>\n                    (\\<forall>f.\n                        strict_mono f \\<longrightarrow>\n                        (\\<exists>i. f i \\<notin> T Q) \\<or>\n                        (\\<exists>i.\n                            trace_hide (f i) (ev ` A) \\<noteq>\n                            trace_hide (f 0) (ev ` A)) \\<or>\n                        t' \\<notin> range f)\n  x = trace_hide t' (ev ` A)\n\ngoal (1 subgoal):\n 1. \\<forall>f.\n       strict_mono f \\<longrightarrow>\n       (\\<exists>i. f i \\<notin> T Q) \\<or>\n       (\\<exists>i.\n           trace_hide (f i) (ev ` A) \\<noteq>\n           trace_hide (f 0) (ev ` A)) \\<or>\n       t' \\<notin> range f", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>trace_hide t' (ev ` A) = trace_hide t (ev ` A); tickFree t;\n     t' @ t'' = t; u = [] \\<and> trace_hide t'' (ev ` A) = [];\n     tickFree t' \\<Longrightarrow>\n     t' \\<notin> D Q \\<and>\n     (\\<forall>f.\n         strict_mono f \\<longrightarrow>\n         (\\<exists>i. f i \\<notin> T Q) \\<or>\n         (\\<exists>i.\n             trace_hide (f i) (ev ` A) \\<noteq>\n             trace_hide (f 0) (ev ` A)) \\<or>\n         t' \\<notin> range f);\n     x = trace_hide t (ev ` A)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>f.\n                         strict_mono f \\<longrightarrow>\n                         (\\<exists>i. f i \\<notin> T Q) \\<or>\n                         (\\<exists>i.\n                             trace_hide (f i) (ev ` A) \\<noteq>\n                             trace_hide (f 0) (ev ` A)) \\<or>\n                         t' \\<notin> range f", "using front_tickFree_append hiding_tickFree tickFree_append"], ["proof (prove)\nusing this:\n  \\<lbrakk>tickFree ?s; front_tickFree ?t\\<rbrakk>\n  \\<Longrightarrow> front_tickFree (?s @ ?t)\n  tickFree ?s = tickFree (trace_hide ?s (ev ` ?A))\n  tickFree (?s @ ?t) = (tickFree ?s \\<and> tickFree ?t)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>trace_hide t' (ev ` A) = trace_hide t (ev ` A); tickFree t;\n     t' @ t'' = t; u = [] \\<and> trace_hide t'' (ev ` A) = [];\n     tickFree t' \\<Longrightarrow>\n     t' \\<notin> D Q \\<and>\n     (\\<forall>f.\n         strict_mono f \\<longrightarrow>\n         (\\<exists>i. f i \\<notin> T Q) \\<or>\n         (\\<exists>i.\n             trace_hide (f i) (ev ` A) \\<noteq>\n             trace_hide (f 0) (ev ` A)) \\<or>\n         t' \\<notin> range f);\n     x = trace_hide t (ev ` A)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>f.\n                         strict_mono f \\<longrightarrow>\n                         (\\<exists>i. f i \\<notin> T Q) \\<or>\n                         (\\<exists>i.\n                             trace_hide (f i) (ev ` A) \\<noteq>\n                             trace_hide (f 0) (ev ` A)) \\<or>\n                         t' \\<notin> range f", "by blast"], ["proof (state)\nthis:\n  \\<forall>f.\n     strict_mono f \\<longrightarrow>\n     (\\<exists>i. f i \\<notin> T Q) \\<or>\n     (\\<exists>i.\n         trace_hide (f i) (ev ` A) \\<noteq> trace_hide (f 0) (ev ` A)) \\<or>\n     t' \\<notin> range f\n\ngoal (2 subgoals):\n 1. t \\<in> D P \\<Longrightarrow>\n    \\<exists>t. x = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F Q\n 2. t \\<notin> D P \\<Longrightarrow>\n    \\<exists>t. x = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F Q", "with E1 7(3) C2 inf_hidden[of A t' Q]"], ["proof (chain)\npicking this:\n  x = trace_hide t' (ev ` A)\n  min_elems (D P) \\<subseteq> T Q\n  t' \\<in> min_elems (D P)\n  \\<lbrakk>\\<forall>t.\n              trace_hide t (ev ` A) =\n              trace_hide t' (ev ` A) \\<longrightarrow>\n              (t, ev ` A) \\<notin> F Q;\n   t' \\<in> T Q\\<rbrakk>\n  \\<Longrightarrow> \\<exists>f. isInfHiddenRun f Q A \\<and> t' \\<in> range f\n  \\<forall>f.\n     strict_mono f \\<longrightarrow>\n     (\\<exists>i. f i \\<notin> T Q) \\<or>\n     (\\<exists>i.\n         trace_hide (f i) (ev ` A) \\<noteq> trace_hide (f 0) (ev ` A)) \\<or>\n     t' \\<notin> range f", "show ?thesis"], ["proof (prove)\nusing this:\n  x = trace_hide t' (ev ` A)\n  min_elems (D P) \\<subseteq> T Q\n  t' \\<in> min_elems (D P)\n  \\<lbrakk>\\<forall>t.\n              trace_hide t (ev ` A) =\n              trace_hide t' (ev ` A) \\<longrightarrow>\n              (t, ev ` A) \\<notin> F Q;\n   t' \\<in> T Q\\<rbrakk>\n  \\<Longrightarrow> \\<exists>f. isInfHiddenRun f Q A \\<and> t' \\<in> range f\n  \\<forall>f.\n     strict_mono f \\<longrightarrow>\n     (\\<exists>i. f i \\<notin> T Q) \\<or>\n     (\\<exists>i.\n         trace_hide (f i) (ev ` A) \\<noteq> trace_hide (f 0) (ev ` A)) \\<or>\n     t' \\<notin> range f\n\ngoal (1 subgoal):\n 1. \\<exists>t. x = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F Q", "by (metis (no_types, lifting) contra_subsetD)"], ["proof (state)\nthis:\n  \\<exists>t. x = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F Q\n\ngoal (1 subgoal):\n 1. t \\<notin> D P \\<Longrightarrow>\n    \\<exists>t. x = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F Q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. t \\<notin> D P \\<Longrightarrow>\n    \\<exists>t. x = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F Q", "case False"], ["proof (state)\nthis:\n  t \\<notin> D P\n\ngoal (1 subgoal):\n 1. t \\<notin> D P \\<Longrightarrow>\n    \\<exists>t. x = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F Q", "from B1 B2 B3 B4"], ["proof (chain)\npicking this:\n  x = trace_hide t (ev ` A) @ u\n  tickFree t\n  front_tickFree u\n  t \\<in> D P \\<or>\n  (\\<exists>f.\n      strict_mono f \\<and>\n      (\\<forall>i. f i \\<in> T P) \\<and>\n      (\\<forall>i.\n          trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n      t \\<in> range f)", "have  C:\"trace_hide t (ev ` A) \\<in> div_hide P A\""], ["proof (prove)\nusing this:\n  x = trace_hide t (ev ` A) @ u\n  tickFree t\n  front_tickFree u\n  t \\<in> D P \\<or>\n  (\\<exists>f.\n      strict_mono f \\<and>\n      (\\<forall>i. f i \\<in> T P) \\<and>\n      (\\<forall>i.\n          trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n      t \\<in> range f)\n\ngoal (1 subgoal):\n 1. trace_hide t (ev ` A) \\<in> div_hide P A", "by (simp, rule_tac x=t in exI, rule_tac x=\"[]\" in exI, simp)"], ["proof (state)\nthis:\n  trace_hide t (ev ` A) \\<in> div_hide P A\n\ngoal (1 subgoal):\n 1. t \\<notin> D P \\<Longrightarrow>\n    \\<exists>t. x = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F Q", "from B1 min_elems_no[OF A C]"], ["proof (chain)\npicking this:\n  x = trace_hide t (ev ` A) @ u\n  trace_hide t (ev ` A) \\<le> x \\<Longrightarrow> x = trace_hide t (ev ` A)", "have E1:\"x=trace_hide t (ev ` A)\""], ["proof (prove)\nusing this:\n  x = trace_hide t (ev ` A) @ u\n  trace_hide t (ev ` A) \\<le> x \\<Longrightarrow> x = trace_hide t (ev ` A)\n\ngoal (1 subgoal):\n 1. x = trace_hide t (ev ` A)", "using le_list_def"], ["proof (prove)\nusing this:\n  x = trace_hide t (ev ` A) @ u\n  trace_hide t (ev ` A) \\<le> x \\<Longrightarrow> x = trace_hide t (ev ` A)\n  (?s \\<le> ?t) = (\\<exists>r. ?s @ r = ?t)\n\ngoal (1 subgoal):\n 1. x = trace_hide t (ev ` A)", "by auto"], ["proof (state)\nthis:\n  x = trace_hide t (ev ` A)\n\ngoal (1 subgoal):\n 1. t \\<notin> D P \\<Longrightarrow>\n    \\<exists>t. x = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F Q", "from B4 False 7(2)[rule_format, of t, OF False]"], ["proof (chain)\npicking this:\n  t \\<in> D P \\<or>\n  (\\<exists>f.\n      strict_mono f \\<and>\n      (\\<forall>i. f i \\<in> T P) \\<and>\n      (\\<forall>i.\n          trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n      t \\<in> range f)\n  t \\<notin> D P\n  {X. (t, X) \\<in> F P} = {X. (t, X) \\<in> F Q}", "have \"t \\<in> T Q\""], ["proof (prove)\nusing this:\n  t \\<in> D P \\<or>\n  (\\<exists>f.\n      strict_mono f \\<and>\n      (\\<forall>i. f i \\<in> T P) \\<and>\n      (\\<forall>i.\n          trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n      t \\<in> range f)\n  t \\<notin> D P\n  {X. (t, X) \\<in> F P} = {X. (t, X) \\<in> F Q}\n\ngoal (1 subgoal):\n 1. t \\<in> T Q", "using F_T T_F"], ["proof (prove)\nusing this:\n  t \\<in> D P \\<or>\n  (\\<exists>f.\n      strict_mono f \\<and>\n      (\\<forall>i. f i \\<in> T P) \\<and>\n      (\\<forall>i.\n          trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n      t \\<in> range f)\n  t \\<notin> D P\n  {X. (t, X) \\<in> F P} = {X. (t, X) \\<in> F Q}\n  (?s, ?X) \\<in> F ?P \\<Longrightarrow> ?s \\<in> T ?P\n  ?s \\<in> T ?P \\<Longrightarrow> (?s, {}) \\<in> F ?P\n\ngoal (1 subgoal):\n 1. t \\<in> T Q", "by blast"], ["proof (state)\nthis:\n  t \\<in> T Q\n\ngoal (1 subgoal):\n 1. t \\<notin> D P \\<Longrightarrow>\n    \\<exists>t. x = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F Q", "with E1 7(5)[simplified, rule_format, of t \"[]\", simplified, OF E1 B2] inf_hidden[of A t Q]"], ["proof (chain)\npicking this:\n  x = trace_hide t (ev ` A)\n  t \\<notin> D Q \\<and>\n  (\\<forall>f.\n      strict_mono f \\<longrightarrow>\n      (\\<exists>i. f i \\<notin> T Q) \\<or>\n      (\\<exists>i.\n          trace_hide (f i) (ev ` A) \\<noteq>\n          trace_hide (f 0) (ev ` A)) \\<or>\n      t \\<notin> range f)\n  \\<lbrakk>\\<forall>ta.\n              trace_hide ta (ev ` A) =\n              trace_hide t (ev ` A) \\<longrightarrow>\n              (ta, ev ` A) \\<notin> F Q;\n   t \\<in> T Q\\<rbrakk>\n  \\<Longrightarrow> \\<exists>f. isInfHiddenRun f Q A \\<and> t \\<in> range f\n  t \\<in> T Q", "show ?thesis"], ["proof (prove)\nusing this:\n  x = trace_hide t (ev ` A)\n  t \\<notin> D Q \\<and>\n  (\\<forall>f.\n      strict_mono f \\<longrightarrow>\n      (\\<exists>i. f i \\<notin> T Q) \\<or>\n      (\\<exists>i.\n          trace_hide (f i) (ev ` A) \\<noteq>\n          trace_hide (f 0) (ev ` A)) \\<or>\n      t \\<notin> range f)\n  \\<lbrakk>\\<forall>ta.\n              trace_hide ta (ev ` A) =\n              trace_hide t (ev ` A) \\<longrightarrow>\n              (ta, ev ` A) \\<notin> F Q;\n   t \\<in> T Q\\<rbrakk>\n  \\<Longrightarrow> \\<exists>f. isInfHiddenRun f Q A \\<and> t \\<in> range f\n  t \\<in> T Q\n\ngoal (1 subgoal):\n 1. \\<exists>t. x = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F Q", "by metis"], ["proof (state)\nthis:\n  \\<exists>t. x = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F Q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>t. x = trace_hide t (ev ` A) \\<and> (t, ev ` A) \\<in> F Q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cont_hiding1 : \"chain Y \\<Longrightarrow> chain (\\<lambda> i. (Y i \\\\ A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chain Y \\<Longrightarrow> chain (\\<lambda>i. Y i \\ A)", "by (simp add: po_class.chain_def)"], ["", "lemma KoenigLemma: \n  assumes *:\"infinite (Tr::'a list set)\" and **:\"\\<forall>i. finite{t. \\<exists>t'\\<in>Tr. t = take i t'}\"\n  shows \"\\<exists>(f::nat \\<Rightarrow> 'a list). strict_mono f \\<and> range f \\<subseteq> {t. \\<exists>t'\\<in>Tr. t \\<le> t'}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f.\n       strict_mono f \\<and>\n       range f \\<subseteq> {t. \\<exists>t'\\<in>Tr. t \\<le> t'}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>f.\n       strict_mono f \\<and>\n       range f \\<subseteq> {t. \\<exists>t'\\<in>Tr. t \\<le> t'}", "define Tr' where \"Tr' = {t. \\<exists>t'\\<in>Tr. t \\<le> t'}\""], ["proof (state)\nthis:\n  Tr' = {t. \\<exists>t'\\<in>Tr. t \\<le> t'}\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       strict_mono f \\<and>\n       range f \\<subseteq> {t. \\<exists>t'\\<in>Tr. t \\<le> t'}", "(* prefix closure *)"], ["proof (state)\nthis:\n  Tr' = {t. \\<exists>t'\\<in>Tr. t \\<le> t'}\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       strict_mono f \\<and>\n       range f \\<subseteq> {t. \\<exists>t'\\<in>Tr. t \\<le> t'}", "have a:\"infinite Tr'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite Tr'", "by (metis (mono_tags, lifting) * Tr'_def infinite_super mem_Collect_eq order_refl subsetI)"], ["proof (state)\nthis:\n  infinite Tr'\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       strict_mono f \\<and>\n       range f \\<subseteq> {t. \\<exists>t'\\<in>Tr. t \\<le> t'}", "{"], ["proof (state)\nthis:\n  infinite Tr'\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       strict_mono f \\<and>\n       range f \\<subseteq> {t. \\<exists>t'\\<in>Tr. t \\<le> t'}", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>f.\n       strict_mono f \\<and>\n       range f \\<subseteq> {t. \\<exists>t'\\<in>Tr. t \\<le> t'}", "have \"{t \\<in> Tr'. length t = i} \\<subseteq> {t. \\<exists>t'\\<in>Tr. t = take i t'}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {t \\<in> Tr'. length t = i}\n    \\<subseteq> {t. \\<exists>t'\\<in>Tr. t = take i t'}", "by (auto simp add:Tr'_def, metis append_eq_conv_conj le_list_def)"], ["proof (state)\nthis:\n  {t \\<in> Tr'. length t = i}\n  \\<subseteq> {t. \\<exists>t'\\<in>Tr. t = take i t'}\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       strict_mono f \\<and>\n       range f \\<subseteq> {t. \\<exists>t'\\<in>Tr. t \\<le> t'}", "with **"], ["proof (chain)\npicking this:\n  \\<forall>i. finite {t. \\<exists>t'\\<in>Tr. t = take i t'}\n  {t \\<in> Tr'. length t = i}\n  \\<subseteq> {t. \\<exists>t'\\<in>Tr. t = take i t'}", "have \"finite({t\\<in>Tr'. length t = i})\""], ["proof (prove)\nusing this:\n  \\<forall>i. finite {t. \\<exists>t'\\<in>Tr. t = take i t'}\n  {t \\<in> Tr'. length t = i}\n  \\<subseteq> {t. \\<exists>t'\\<in>Tr. t = take i t'}\n\ngoal (1 subgoal):\n 1. finite {t \\<in> Tr'. length t = i}", "using infinite_super"], ["proof (prove)\nusing this:\n  \\<forall>i. finite {t. \\<exists>t'\\<in>Tr. t = take i t'}\n  {t \\<in> Tr'. length t = i}\n  \\<subseteq> {t. \\<exists>t'\\<in>Tr. t = take i t'}\n  \\<lbrakk>?S \\<subseteq> ?T; infinite ?S\\<rbrakk>\n  \\<Longrightarrow> infinite ?T\n\ngoal (1 subgoal):\n 1. finite {t \\<in> Tr'. length t = i}", "by blast"], ["proof (state)\nthis:\n  finite {t \\<in> Tr'. length t = i}\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       strict_mono f \\<and>\n       range f \\<subseteq> {t. \\<exists>t'\\<in>Tr. t \\<le> t'}", "}"], ["proof (state)\nthis:\n  finite {t \\<in> Tr'. length t = ?i2}\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       strict_mono f \\<and>\n       range f \\<subseteq> {t. \\<exists>t'\\<in>Tr. t \\<le> t'}", "note b=this"], ["proof (state)\nthis:\n  finite {t \\<in> Tr'. length t = ?i2}\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       strict_mono f \\<and>\n       range f \\<subseteq> {t. \\<exists>t'\\<in>Tr. t \\<le> t'}", "{"], ["proof (state)\nthis:\n  finite {t \\<in> Tr'. length t = ?i2}\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       strict_mono f \\<and>\n       range f \\<subseteq> {t. \\<exists>t'\\<in>Tr. t \\<le> t'}", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>f.\n       strict_mono f \\<and>\n       range f \\<subseteq> {t. \\<exists>t'\\<in>Tr. t \\<le> t'}", "define E where \"E = {e |e. t@[e]\\<in> Tr'}\""], ["proof (state)\nthis:\n  E = {e |e. t @ [e] \\<in> Tr'}\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       strict_mono f \\<and>\n       range f \\<subseteq> {t. \\<exists>t'\\<in>Tr. t \\<le> t'}", "have aa:\"finite E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite E", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite E", "have \"inj_on (\\<lambda>e. t @ [e]) E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>e. t @ [e]) E", "by (simp add: inj_on_def)"], ["proof (state)\nthis:\n  inj_on (\\<lambda>e. t @ [e]) E\n\ngoal (1 subgoal):\n 1. finite E", "with b[of \"Suc (length t)\"] inj_on_finite[of \"\\<lambda>e. t@[e]\" E \"{t' \\<in> Tr'. length t' = Suc (length t)}\"]"], ["proof (chain)\npicking this:\n  finite {ta \\<in> Tr'. length ta = Suc (length t)}\n  \\<lbrakk>inj_on (\\<lambda>e. t @ [e]) E;\n   (\\<lambda>e. t @ [e]) ` E\n   \\<subseteq> {t' \\<in> Tr'. length t' = Suc (length t)};\n   finite {t' \\<in> Tr'. length t' = Suc (length t)}\\<rbrakk>\n  \\<Longrightarrow> finite E\n  inj_on (\\<lambda>e. t @ [e]) E", "show ?thesis"], ["proof (prove)\nusing this:\n  finite {ta \\<in> Tr'. length ta = Suc (length t)}\n  \\<lbrakk>inj_on (\\<lambda>e. t @ [e]) E;\n   (\\<lambda>e. t @ [e]) ` E\n   \\<subseteq> {t' \\<in> Tr'. length t' = Suc (length t)};\n   finite {t' \\<in> Tr'. length t' = Suc (length t)}\\<rbrakk>\n  \\<Longrightarrow> finite E\n  inj_on (\\<lambda>e. t @ [e]) E\n\ngoal (1 subgoal):\n 1. finite E", "by (simp add: E_def image_Collect_subsetI)"], ["proof (state)\nthis:\n  finite E\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite E\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       strict_mono f \\<and>\n       range f \\<subseteq> {t. \\<exists>t'\\<in>Tr. t \\<le> t'}", "hence bb:\"finite {t@[e] |e. e\\<in>E}\""], ["proof (prove)\nusing this:\n  finite E\n\ngoal (1 subgoal):\n 1. finite {t @ [e] |e. e \\<in> E}", "by simp"], ["proof (state)\nthis:\n  finite {t @ [e] |e. e \\<in> E}\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       strict_mono f \\<and>\n       range f \\<subseteq> {t. \\<exists>t'\\<in>Tr. t \\<le> t'}", "have \"{t'\\<in>Tr'. t < t'} = {t@[e] |e. e\\<in>E} \\<union> (\\<Union>e\\<in>E. {t'\\<in>Tr'. t@[e] < t'})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {t' \\<in> Tr'. t < t'} =\n    {t @ [e] |e. e \\<in> E} \\<union>\n    (\\<Union>e\\<in>E. {t' \\<in> Tr'. t @ [e] < t'})", "proof (auto simp add:Let_def E_def Tr'_def, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>t < x; xa \\<in> Tr; x \\<le> xa;\n        \\<forall>xa.\n           (\\<forall>x\\<in>Tr. \\<not> t @ [xa] \\<le> x) \\<or>\n           \\<not> t @ [xa] < x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            x = t @ [e] \\<and>\n                            (\\<exists>x\\<in>Tr. t @ [e] \\<le> x)\n 2. \\<And>x xa xb xc.\n       \\<lbrakk>xb \\<in> Tr; t @ [xa] \\<le> xb; t @ [xa] < x; xc \\<in> Tr;\n        x \\<le> xc\\<rbrakk>\n       \\<Longrightarrow> t < x", "case (1 x xa)"], ["proof (state)\nthis:\n  t < x\n  xa \\<in> Tr\n  x \\<le> xa\n  \\<forall>xa.\n     (\\<forall>x\\<in>Tr. \\<not> t @ [xa] \\<le> x) \\<or> \\<not> t @ [xa] < x\n\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>t < x; xa \\<in> Tr; x \\<le> xa;\n        \\<forall>xa.\n           (\\<forall>x\\<in>Tr. \\<not> t @ [xa] \\<le> x) \\<or>\n           \\<not> t @ [xa] < x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            x = t @ [e] \\<and>\n                            (\\<exists>x\\<in>Tr. t @ [e] \\<le> x)\n 2. \\<And>x xa xb xc.\n       \\<lbrakk>xb \\<in> Tr; t @ [xa] \\<le> xb; t @ [xa] < x; xc \\<in> Tr;\n        x \\<le> xc\\<rbrakk>\n       \\<Longrightarrow> t < x", "then"], ["proof (chain)\npicking this:\n  t < x\n  xa \\<in> Tr\n  x \\<le> xa\n  \\<forall>xa.\n     (\\<forall>x\\<in>Tr. \\<not> t @ [xa] \\<le> x) \\<or> \\<not> t @ [xa] < x", "obtain u e where \"x = t @ [e] @ u\""], ["proof (prove)\nusing this:\n  t < x\n  xa \\<in> Tr\n  x \\<le> xa\n  \\<forall>xa.\n     (\\<forall>x\\<in>Tr. \\<not> t @ [xa] \\<le> x) \\<or> \\<not> t @ [xa] < x\n\ngoal (1 subgoal):\n 1. (\\<And>e u. x = t @ [e] @ u \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis A append_Cons append_Nil append_Nil2 le_list_def list.exhaust)"], ["proof (state)\nthis:\n  x = t @ [e] @ u\n\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>t < x; xa \\<in> Tr; x \\<le> xa;\n        \\<forall>xa.\n           (\\<forall>x\\<in>Tr. \\<not> t @ [xa] \\<le> x) \\<or>\n           \\<not> t @ [xa] < x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e.\n                            x = t @ [e] \\<and>\n                            (\\<exists>x\\<in>Tr. t @ [e] \\<le> x)\n 2. \\<And>x xa xb xc.\n       \\<lbrakk>xb \\<in> Tr; t @ [xa] \\<le> xb; t @ [xa] < x; xc \\<in> Tr;\n        x \\<le> xc\\<rbrakk>\n       \\<Longrightarrow> t < x", "with 1 1(4)[rule_format, of e]"], ["proof (chain)\npicking this:\n  t < x\n  xa \\<in> Tr\n  x \\<le> xa\n  \\<forall>xa.\n     (\\<forall>x\\<in>Tr. \\<not> t @ [xa] \\<le> x) \\<or> \\<not> t @ [xa] < x\n  (\\<forall>x\\<in>Tr. \\<not> t @ [e] \\<le> x) \\<or> \\<not> t @ [e] < x\n  x = t @ [e] @ u", "show ?case"], ["proof (prove)\nusing this:\n  t < x\n  xa \\<in> Tr\n  x \\<le> xa\n  \\<forall>xa.\n     (\\<forall>x\\<in>Tr. \\<not> t @ [xa] \\<le> x) \\<or> \\<not> t @ [xa] < x\n  (\\<forall>x\\<in>Tr. \\<not> t @ [e] \\<le> x) \\<or> \\<not> t @ [e] < x\n  x = t @ [e] @ u\n\ngoal (1 subgoal):\n 1. \\<exists>e. x = t @ [e] \\<and> (\\<exists>x\\<in>Tr. t @ [e] \\<le> x)", "by (metis append_assoc le_list_def less_list_def)"], ["proof (state)\nthis:\n  \\<exists>e. x = t @ [e] \\<and> (\\<exists>x\\<in>Tr. t @ [e] \\<le> x)\n\ngoal (1 subgoal):\n 1. \\<And>x xa xb xc.\n       \\<lbrakk>xb \\<in> Tr; t @ [xa] \\<le> xb; t @ [xa] < x; xc \\<in> Tr;\n        x \\<le> xc\\<rbrakk>\n       \\<Longrightarrow> t < x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xa xb xc.\n       \\<lbrakk>xb \\<in> Tr; t @ [xa] \\<le> xb; t @ [xa] < x; xc \\<in> Tr;\n        x \\<le> xc\\<rbrakk>\n       \\<Longrightarrow> t < x", "case (2 x xa xb xc)"], ["proof (state)\nthis:\n  xb \\<in> Tr\n  t @ [xa] \\<le> xb\n  t @ [xa] < x\n  xc \\<in> Tr\n  x \\<le> xc\n\ngoal (1 subgoal):\n 1. \\<And>x xa xb xc.\n       \\<lbrakk>xb \\<in> Tr; t @ [xa] \\<le> xb; t @ [xa] < x; xc \\<in> Tr;\n        x \\<le> xc\\<rbrakk>\n       \\<Longrightarrow> t < x", "thus ?case"], ["proof (prove)\nusing this:\n  xb \\<in> Tr\n  t @ [xa] \\<le> xb\n  t @ [xa] < x\n  xc \\<in> Tr\n  x \\<le> xc\n\ngoal (1 subgoal):\n 1. t < x", "by (meson less_self less_trans)"], ["proof (state)\nthis:\n  t < x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {t' \\<in> Tr'. t < t'} =\n  {t @ [e] |e. e \\<in> E} \\<union>\n  (\\<Union>e\\<in>E. {t' \\<in> Tr'. t @ [e] < t'})\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       strict_mono f \\<and>\n       range f \\<subseteq> {t. \\<exists>t'\\<in>Tr. t \\<le> t'}", "with aa bb"], ["proof (chain)\npicking this:\n  finite E\n  finite {t @ [e] |e. e \\<in> E}\n  {t' \\<in> Tr'. t < t'} =\n  {t @ [e] |e. e \\<in> E} \\<union>\n  (\\<Union>e\\<in>E. {t' \\<in> Tr'. t @ [e] < t'})", "have \"infinite {t'\\<in>Tr'. t < t'} \\<Longrightarrow> \\<exists>e. infinite {t'\\<in>Tr'. t@[e] < t'}\""], ["proof (prove)\nusing this:\n  finite E\n  finite {t @ [e] |e. e \\<in> E}\n  {t' \\<in> Tr'. t < t'} =\n  {t @ [e] |e. e \\<in> E} \\<union>\n  (\\<Union>e\\<in>E. {t' \\<in> Tr'. t @ [e] < t'})\n\ngoal (1 subgoal):\n 1. infinite {t' \\<in> Tr'. t < t'} \\<Longrightarrow>\n    \\<exists>e. infinite {t' \\<in> Tr'. t @ [e] < t'}", "by auto"], ["proof (state)\nthis:\n  infinite {t' \\<in> Tr'. t < t'} \\<Longrightarrow>\n  \\<exists>e. infinite {t' \\<in> Tr'. t @ [e] < t'}\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       strict_mono f \\<and>\n       range f \\<subseteq> {t. \\<exists>t'\\<in>Tr. t \\<le> t'}", "}"], ["proof (state)\nthis:\n  infinite {t' \\<in> Tr'. ?t2 < t'} \\<Longrightarrow>\n  \\<exists>e. infinite {t' \\<in> Tr'. ?t2 @ [e] < t'}\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       strict_mono f \\<and>\n       range f \\<subseteq> {t. \\<exists>t'\\<in>Tr. t \\<le> t'}", "note c=this"], ["proof (state)\nthis:\n  infinite {t' \\<in> Tr'. ?t2 < t'} \\<Longrightarrow>\n  \\<exists>e. infinite {t' \\<in> Tr'. ?t2 @ [e] < t'}\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       strict_mono f \\<and>\n       range f \\<subseteq> {t. \\<exists>t'\\<in>Tr. t \\<le> t'}", "define ff where d:\"ff =rec_nat [] (\\<lambda>i t. (let e = SOME e. infinite {t'\\<in>Tr'. t@[e] < t'} in t @ [e]))\""], ["proof (state)\nthis:\n  ff =\n  rec_nat []\n   (\\<lambda>i t.\n       let e = SOME e. infinite {t' \\<in> Tr'. t @ [e] < t'} in t @ [e])\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       strict_mono f \\<and>\n       range f \\<subseteq> {t. \\<exists>t'\\<in>Tr. t \\<le> t'}", "hence dd:\"\\<forall>n. ff (Suc n) > ff n\""], ["proof (prove)\nusing this:\n  ff =\n  rec_nat []\n   (\\<lambda>i t.\n       let e = SOME e. infinite {t' \\<in> Tr'. t @ [e] < t'} in t @ [e])\n\ngoal (1 subgoal):\n 1. \\<forall>n. ff n < ff (Suc n)", "by simp"], ["proof (state)\nthis:\n  \\<forall>n. ff n < ff (Suc n)\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       strict_mono f \\<and>\n       range f \\<subseteq> {t. \\<exists>t'\\<in>Tr. t \\<le> t'}", "(* funny *)"], ["proof (state)\nthis:\n  \\<forall>n. ff n < ff (Suc n)\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       strict_mono f \\<and>\n       range f \\<subseteq> {t. \\<exists>t'\\<in>Tr. t \\<le> t'}", "hence e:\"strict_mono ff\""], ["proof (prove)\nusing this:\n  \\<forall>n. ff n < ff (Suc n)\n\ngoal (1 subgoal):\n 1. strict_mono ff", "by (simp add: lift_Suc_mono_less strict_monoI)"], ["proof (state)\nthis:\n  strict_mono ff\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       strict_mono f \\<and>\n       range f \\<subseteq> {t. \\<exists>t'\\<in>Tr. t \\<le> t'}", "{"], ["proof (state)\nthis:\n  strict_mono ff\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       strict_mono f \\<and>\n       range f \\<subseteq> {t. \\<exists>t'\\<in>Tr. t \\<le> t'}", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>f.\n       strict_mono f \\<and>\n       range f \\<subseteq> {t. \\<exists>t'\\<in>Tr. t \\<le> t'}", "have \"ff n \\<in> Tr' \\<and> infinite {t' \\<in> Tr'. ff n < t'}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ff n \\<in> Tr' \\<and> infinite {t' \\<in> Tr'. ff n < t'}", "proof(induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. ff 0 \\<in> Tr' \\<and> infinite {t' \\<in> Tr'. ff 0 < t'}\n 2. \\<And>n.\n       ff n \\<in> Tr' \\<and>\n       infinite {t' \\<in> Tr'. ff n < t'} \\<Longrightarrow>\n       ff (Suc n) \\<in> Tr' \\<and> infinite {t' \\<in> Tr'. ff (Suc n) < t'}", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. ff 0 \\<in> Tr' \\<and> infinite {t' \\<in> Tr'. ff 0 < t'}\n 2. \\<And>n.\n       ff n \\<in> Tr' \\<and>\n       infinite {t' \\<in> Tr'. ff n < t'} \\<Longrightarrow>\n       ff (Suc n) \\<in> Tr' \\<and> infinite {t' \\<in> Tr'. ff (Suc n) < t'}", "from a Tr'_def"], ["proof (chain)\npicking this:\n  infinite Tr'\n  Tr' = {t. \\<exists>t'\\<in>Tr. t \\<le> t'}", "have  \"Tr' = {t' \\<in> Tr'. [] < t'} \\<union> {[]}\""], ["proof (prove)\nusing this:\n  infinite Tr'\n  Tr' = {t. \\<exists>t'\\<in>Tr. t \\<le> t'}\n\ngoal (1 subgoal):\n 1. Tr' = {t' \\<in> Tr'. [] < t'} \\<union> {[]}", "by (auto simp add: le_neq_trans)"], ["proof (state)\nthis:\n  Tr' = {t' \\<in> Tr'. [] < t'} \\<union> {[]}\n\ngoal (2 subgoals):\n 1. ff 0 \\<in> Tr' \\<and> infinite {t' \\<in> Tr'. ff 0 < t'}\n 2. \\<And>n.\n       ff n \\<in> Tr' \\<and>\n       infinite {t' \\<in> Tr'. ff n < t'} \\<Longrightarrow>\n       ff (Suc n) \\<in> Tr' \\<and> infinite {t' \\<in> Tr'. ff (Suc n) < t'}", "with a"], ["proof (chain)\npicking this:\n  infinite Tr'\n  Tr' = {t' \\<in> Tr'. [] < t'} \\<union> {[]}", "have \"infinite {t' \\<in> Tr'. [] < t'}\""], ["proof (prove)\nusing this:\n  infinite Tr'\n  Tr' = {t' \\<in> Tr'. [] < t'} \\<union> {[]}\n\ngoal (1 subgoal):\n 1. infinite {t' \\<in> Tr'. [] < t'}", "by (metis (no_types, lifting) finite.emptyI finite.insertI finite_UnI)"], ["proof (state)\nthis:\n  infinite {t' \\<in> Tr'. [] < t'}\n\ngoal (2 subgoals):\n 1. ff 0 \\<in> Tr' \\<and> infinite {t' \\<in> Tr'. ff 0 < t'}\n 2. \\<And>n.\n       ff n \\<in> Tr' \\<and>\n       infinite {t' \\<in> Tr'. ff n < t'} \\<Longrightarrow>\n       ff (Suc n) \\<in> Tr' \\<and> infinite {t' \\<in> Tr'. ff (Suc n) < t'}", "with d Tr'_def"], ["proof (chain)\npicking this:\n  ff =\n  rec_nat []\n   (\\<lambda>i t.\n       let e = SOME e. infinite {t' \\<in> Tr'. t @ [e] < t'} in t @ [e])\n  Tr' = {t. \\<exists>t'\\<in>Tr. t \\<le> t'}\n  infinite {t' \\<in> Tr'. [] < t'}", "show ?case"], ["proof (prove)\nusing this:\n  ff =\n  rec_nat []\n   (\\<lambda>i t.\n       let e = SOME e. infinite {t' \\<in> Tr'. t @ [e] < t'} in t @ [e])\n  Tr' = {t. \\<exists>t'\\<in>Tr. t \\<le> t'}\n  infinite {t' \\<in> Tr'. [] < t'}\n\ngoal (1 subgoal):\n 1. ff 0 \\<in> Tr' \\<and> infinite {t' \\<in> Tr'. ff 0 < t'}", "by auto"], ["proof (state)\nthis:\n  ff 0 \\<in> Tr' \\<and> infinite {t' \\<in> Tr'. ff 0 < t'}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ff n \\<in> Tr' \\<and>\n       infinite {t' \\<in> Tr'. ff n < t'} \\<Longrightarrow>\n       ff (Suc n) \\<in> Tr' \\<and> infinite {t' \\<in> Tr'. ff (Suc n) < t'}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       ff n \\<in> Tr' \\<and>\n       infinite {t' \\<in> Tr'. ff n < t'} \\<Longrightarrow>\n       ff (Suc n) \\<in> Tr' \\<and> infinite {t' \\<in> Tr'. ff (Suc n) < t'}", "case (Suc n)"], ["proof (state)\nthis:\n  ff n \\<in> Tr' \\<and> infinite {t' \\<in> Tr'. ff n < t'}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ff n \\<in> Tr' \\<and>\n       infinite {t' \\<in> Tr'. ff n < t'} \\<Longrightarrow>\n       ff (Suc n) \\<in> Tr' \\<and> infinite {t' \\<in> Tr'. ff (Suc n) < t'}", "from d"], ["proof (chain)\npicking this:\n  ff =\n  rec_nat []\n   (\\<lambda>i t.\n       let e = SOME e. infinite {t' \\<in> Tr'. t @ [e] < t'} in t @ [e])", "have \"ff (Suc n) = (let e = SOME e. infinite {t'\\<in>Tr'. ff n@[e] < t'} in ff n @ [e])\""], ["proof (prove)\nusing this:\n  ff =\n  rec_nat []\n   (\\<lambda>i t.\n       let e = SOME e. infinite {t' \\<in> Tr'. t @ [e] < t'} in t @ [e])\n\ngoal (1 subgoal):\n 1. ff (Suc n) =\n    (let e = SOME e. infinite {t' \\<in> Tr'. ff n @ [e] < t'} in ff n @ [e])", "by simp"], ["proof (state)\nthis:\n  ff (Suc n) =\n  (let e = SOME e. infinite {t' \\<in> Tr'. ff n @ [e] < t'} in ff n @ [e])\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ff n \\<in> Tr' \\<and>\n       infinite {t' \\<in> Tr'. ff n < t'} \\<Longrightarrow>\n       ff (Suc n) \\<in> Tr' \\<and> infinite {t' \\<in> Tr'. ff (Suc n) < t'}", "with c[rule_format, of \"ff n\"]"], ["proof (chain)\npicking this:\n  infinite {t' \\<in> Tr'. ff n < t'} \\<Longrightarrow>\n  \\<exists>e. infinite {t' \\<in> Tr'. ff n @ [e] < t'}\n  ff (Suc n) =\n  (let e = SOME e. infinite {t' \\<in> Tr'. ff n @ [e] < t'} in ff n @ [e])", "obtain e where \n        a1:\"ff (Suc n) = (ff n) @ [e] \\<and> infinite {t' \\<in> Tr'. ff n @ [e] < t'}\""], ["proof (prove)\nusing this:\n  infinite {t' \\<in> Tr'. ff n < t'} \\<Longrightarrow>\n  \\<exists>e. infinite {t' \\<in> Tr'. ff n @ [e] < t'}\n  ff (Suc n) =\n  (let e = SOME e. infinite {t' \\<in> Tr'. ff n @ [e] < t'} in ff n @ [e])\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        ff (Suc n) = ff n @ [e] \\<and>\n        infinite {t' \\<in> Tr'. ff n @ [e] < t'} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis (no_types, lifting) Suc.hyps someI_ex)"], ["proof (state)\nthis:\n  ff (Suc n) = ff n @ [e] \\<and> infinite {t' \\<in> Tr'. ff n @ [e] < t'}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ff n \\<in> Tr' \\<and>\n       infinite {t' \\<in> Tr'. ff n < t'} \\<Longrightarrow>\n       ff (Suc n) \\<in> Tr' \\<and> infinite {t' \\<in> Tr'. ff (Suc n) < t'}", "then"], ["proof (chain)\npicking this:\n  ff (Suc n) = ff n @ [e] \\<and> infinite {t' \\<in> Tr'. ff n @ [e] < t'}", "obtain i where \"i \\<in> Tr' \\<and> ff (Suc n) < i\""], ["proof (prove)\nusing this:\n  ff (Suc n) = ff n @ [e] \\<and> infinite {t' \\<in> Tr'. ff n @ [e] < t'}\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        i \\<in> Tr' \\<and> ff (Suc n) < i \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using not_finite_existsD"], ["proof (prove)\nusing this:\n  ff (Suc n) = ff n @ [e] \\<and> infinite {t' \\<in> Tr'. ff n @ [e] < t'}\n  infinite {a. ?P a} \\<Longrightarrow> \\<exists>a. ?P a\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        i \\<in> Tr' \\<and> ff (Suc n) < i \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  i \\<in> Tr' \\<and> ff (Suc n) < i\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ff n \\<in> Tr' \\<and>\n       infinite {t' \\<in> Tr'. ff n < t'} \\<Longrightarrow>\n       ff (Suc n) \\<in> Tr' \\<and> infinite {t' \\<in> Tr'. ff (Suc n) < t'}", "with Tr'_def"], ["proof (chain)\npicking this:\n  Tr' = {t. \\<exists>t'\\<in>Tr. t \\<le> t'}\n  i \\<in> Tr' \\<and> ff (Suc n) < i", "have \"ff (Suc n) \\<in> Tr'\""], ["proof (prove)\nusing this:\n  Tr' = {t. \\<exists>t'\\<in>Tr. t \\<le> t'}\n  i \\<in> Tr' \\<and> ff (Suc n) < i\n\ngoal (1 subgoal):\n 1. ff (Suc n) \\<in> Tr'", "using dual_order.trans less_imp_le"], ["proof (prove)\nusing this:\n  Tr' = {t. \\<exists>t'\\<in>Tr. t \\<le> t'}\n  i \\<in> Tr' \\<and> ff (Suc n) < i\n  \\<lbrakk>?b \\<le> ?a; ?c \\<le> ?b\\<rbrakk> \\<Longrightarrow> ?c \\<le> ?a\n  ?x < ?y \\<Longrightarrow> ?x \\<le> ?y\n\ngoal (1 subgoal):\n 1. ff (Suc n) \\<in> Tr'", "by fastforce"], ["proof (state)\nthis:\n  ff (Suc n) \\<in> Tr'\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ff n \\<in> Tr' \\<and>\n       infinite {t' \\<in> Tr'. ff n < t'} \\<Longrightarrow>\n       ff (Suc n) \\<in> Tr' \\<and> infinite {t' \\<in> Tr'. ff (Suc n) < t'}", "with a1"], ["proof (chain)\npicking this:\n  ff (Suc n) = ff n @ [e] \\<and> infinite {t' \\<in> Tr'. ff n @ [e] < t'}\n  ff (Suc n) \\<in> Tr'", "show ?case"], ["proof (prove)\nusing this:\n  ff (Suc n) = ff n @ [e] \\<and> infinite {t' \\<in> Tr'. ff n @ [e] < t'}\n  ff (Suc n) \\<in> Tr'\n\ngoal (1 subgoal):\n 1. ff (Suc n) \\<in> Tr' \\<and> infinite {t' \\<in> Tr'. ff (Suc n) < t'}", "by simp"], ["proof (state)\nthis:\n  ff (Suc n) \\<in> Tr' \\<and> infinite {t' \\<in> Tr'. ff (Suc n) < t'}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ff n \\<in> Tr' \\<and> infinite {t' \\<in> Tr'. ff n < t'}\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       strict_mono f \\<and>\n       range f \\<subseteq> {t. \\<exists>t'\\<in>Tr. t \\<le> t'}", "}"], ["proof (state)\nthis:\n  ff ?n2 \\<in> Tr' \\<and> infinite {t' \\<in> Tr'. ff ?n2 < t'}\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       strict_mono f \\<and>\n       range f \\<subseteq> {t. \\<exists>t'\\<in>Tr. t \\<le> t'}", "note g=this"], ["proof (state)\nthis:\n  ff ?n2 \\<in> Tr' \\<and> infinite {t' \\<in> Tr'. ff ?n2 < t'}\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       strict_mono f \\<and>\n       range f \\<subseteq> {t. \\<exists>t'\\<in>Tr. t \\<le> t'}", "hence h:\"range ff \\<subseteq> Tr'\""], ["proof (prove)\nusing this:\n  ff ?n2 \\<in> Tr' \\<and> infinite {t' \\<in> Tr'. ff ?n2 < t'}\n\ngoal (1 subgoal):\n 1. range ff \\<subseteq> Tr'", "by auto"], ["proof (state)\nthis:\n  range ff \\<subseteq> Tr'\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       strict_mono f \\<and>\n       range f \\<subseteq> {t. \\<exists>t'\\<in>Tr. t \\<le> t'}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f.\n       strict_mono f \\<and>\n       range f \\<subseteq> {t. \\<exists>t'\\<in>Tr. t \\<le> t'}", "using Tr'_def e h"], ["proof (prove)\nusing this:\n  Tr' = {t. \\<exists>t'\\<in>Tr. t \\<le> t'}\n  strict_mono ff\n  range ff \\<subseteq> Tr'\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       strict_mono f \\<and>\n       range f \\<subseteq> {t. \\<exists>t'\\<in>Tr. t \\<le> t'}", "by blast"], ["proof (state)\nthis:\n  \\<exists>f.\n     strict_mono f \\<and>\n     range f \\<subseteq> {t. \\<exists>t'\\<in>Tr. t \\<le> t'}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma div_hiding_lub :  \"finite (A::'a set) \\<Longrightarrow> chain Y \\<Longrightarrow> D (\\<Squnion> i. (Y i \\\\ A)) \\<subseteq> D ((\\<Squnion> i. Y i) \\\\ A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; chain Y\\<rbrakk>\n    \\<Longrightarrow> D (\\<Squnion>i. Y i \\ A)\n                      \\<subseteq> D ((\\<Squnion>i. Y i) \\ A)", "proof (auto simp add:limproc_is_thelub cont_hiding1 D_hiding T_hiding D_LUB T_LUB, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>xa.\n           \\<exists>t u.\n              front_tickFree u \\<and>\n              tickFree t \\<and>\n              x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or>\n               (\\<exists>f.\n                   strict_mono f \\<and>\n                   (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                   (\\<forall>i.\n                       trace_hide (f i) (ev ` A) =\n                       trace_hide (f 0) (ev ` A)) \\<and>\n                   t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u.\n                            front_tickFree u \\<and>\n                            tickFree t \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))", "case (1 x)"], ["proof (state)\nthis:\n  finite A\n  chain Y\n  \\<forall>xa.\n     \\<exists>t u.\n        front_tickFree u \\<and>\n        tickFree t \\<and>\n        x = trace_hide t (ev ` A) @ u \\<and>\n        (t \\<in> D (Y xa) \\<or>\n         (\\<exists>f.\n             strict_mono f \\<and>\n             (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n             (\\<forall>i.\n                 trace_hide (f i) (ev ` A) =\n                 trace_hide (f 0) (ev ` A)) \\<and>\n             t \\<in> range f))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>xa.\n           \\<exists>t u.\n              front_tickFree u \\<and>\n              tickFree t \\<and>\n              x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or>\n               (\\<exists>f.\n                   strict_mono f \\<and>\n                   (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                   (\\<forall>i.\n                       trace_hide (f i) (ev ` A) =\n                       trace_hide (f 0) (ev ` A)) \\<and>\n                   t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u.\n                            front_tickFree u \\<and>\n                            tickFree t \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))", "{"], ["proof (state)\nthis:\n  finite A\n  chain Y\n  \\<forall>xa.\n     \\<exists>t u.\n        front_tickFree u \\<and>\n        tickFree t \\<and>\n        x = trace_hide t (ev ` A) @ u \\<and>\n        (t \\<in> D (Y xa) \\<or>\n         (\\<exists>f.\n             strict_mono f \\<and>\n             (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n             (\\<forall>i.\n                 trace_hide (f i) (ev ` A) =\n                 trace_hide (f 0) (ev ` A)) \\<and>\n             t \\<in> range f))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>xa.\n           \\<exists>t u.\n              front_tickFree u \\<and>\n              tickFree t \\<and>\n              x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or>\n               (\\<exists>f.\n                   strict_mono f \\<and>\n                   (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                   (\\<forall>i.\n                       trace_hide (f i) (ev ` A) =\n                       trace_hide (f 0) (ev ` A)) \\<and>\n                   t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u.\n                            front_tickFree u \\<and>\n                            tickFree t \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))", "fix xa t u f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>xa.\n           \\<exists>t u.\n              front_tickFree u \\<and>\n              tickFree t \\<and>\n              x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or>\n               (\\<exists>f.\n                   strict_mono f \\<and>\n                   (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                   (\\<forall>i.\n                       trace_hide (f i) (ev ` A) =\n                       trace_hide (f 0) (ev ` A)) \\<and>\n                   t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u.\n                            front_tickFree u \\<and>\n                            tickFree t \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))", "assume a:\"front_tickFree u \\<and> tickFree t \\<and> x = trace_hide t (ev ` A) @ u \\<and>\n              isInfHiddenRun f (Y xa) A \\<and> (\\<forall> i. f i \\<notin> D (Y xa)) \\<and> t \\<in> range f\""], ["proof (state)\nthis:\n  front_tickFree u \\<and>\n  tickFree t \\<and>\n  x = trace_hide t (ev ` A) @ u \\<and>\n  isInfHiddenRun f (Y xa) A \\<and>\n  (\\<forall>i. f i \\<notin> D (Y xa)) \\<and> t \\<in> range f\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>xa.\n           \\<exists>t u.\n              front_tickFree u \\<and>\n              tickFree t \\<and>\n              x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or>\n               (\\<exists>f.\n                   strict_mono f \\<and>\n                   (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                   (\\<forall>i.\n                       trace_hide (f i) (ev ` A) =\n                       trace_hide (f 0) (ev ` A)) \\<and>\n                   t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u.\n                            front_tickFree u \\<and>\n                            tickFree t \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))", "hence \"(\\<forall>i n. f i \\<in> T (Y n))\""], ["proof (prove)\nusing this:\n  front_tickFree u \\<and>\n  tickFree t \\<and>\n  x = trace_hide t (ev ` A) @ u \\<and>\n  isInfHiddenRun f (Y xa) A \\<and>\n  (\\<forall>i. f i \\<notin> D (Y xa)) \\<and> t \\<in> range f\n\ngoal (1 subgoal):\n 1. \\<forall>i n. f i \\<in> T (Y n)", "using 1(2) NT_ND chain_lemma le_approx2T"], ["proof (prove)\nusing this:\n  front_tickFree u \\<and>\n  tickFree t \\<and>\n  x = trace_hide t (ev ` A) @ u \\<and>\n  isInfHiddenRun f (Y xa) A \\<and>\n  (\\<forall>i. f i \\<notin> D (Y xa)) \\<and> t \\<in> range f\n  chain Y\n  ?c \\<notin> T ?P \\<Longrightarrow> ?c \\<notin> D ?P\n  chain ?S \\<Longrightarrow>\n  ?S ?i \\<sqsubseteq> ?S ?k \\<or> ?S ?k \\<sqsubseteq> ?S ?i\n  \\<lbrakk>?P \\<sqsubseteq> ?Q; ?s \\<notin> D ?P\\<rbrakk>\n  \\<Longrightarrow> (?s \\<in> T ?Q) = (?s \\<in> T ?P)\n\ngoal (1 subgoal):\n 1. \\<forall>i n. f i \\<in> T (Y n)", "by blast"], ["proof (state)\nthis:\n  \\<forall>i n. f i \\<in> T (Y n)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>xa.\n           \\<exists>t u.\n              front_tickFree u \\<and>\n              tickFree t \\<and>\n              x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or>\n               (\\<exists>f.\n                   strict_mono f \\<and>\n                   (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                   (\\<forall>i.\n                       trace_hide (f i) (ev ` A) =\n                       trace_hide (f 0) (ev ` A)) \\<and>\n                   t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u.\n                            front_tickFree u \\<and>\n                            tickFree t \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))", "with a"], ["proof (chain)\npicking this:\n  front_tickFree u \\<and>\n  tickFree t \\<and>\n  x = trace_hide t (ev ` A) @ u \\<and>\n  isInfHiddenRun f (Y xa) A \\<and>\n  (\\<forall>i. f i \\<notin> D (Y xa)) \\<and> t \\<in> range f\n  \\<forall>i n. f i \\<in> T (Y n)", "have ?case"], ["proof (prove)\nusing this:\n  front_tickFree u \\<and>\n  tickFree t \\<and>\n  x = trace_hide t (ev ` A) @ u \\<and>\n  isInfHiddenRun f (Y xa) A \\<and>\n  (\\<forall>i. f i \\<notin> D (Y xa)) \\<and> t \\<in> range f\n  \\<forall>i n. f i \\<in> T (Y n)\n\ngoal (1 subgoal):\n 1. \\<exists>t u.\n       front_tickFree u \\<and>\n       tickFree t \\<and>\n       x = trace_hide t (ev ` A) @ u \\<and>\n       ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n        (\\<exists>f.\n            strict_mono f \\<and>\n            (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n            (\\<forall>i.\n                trace_hide (f i) (ev ` A) =\n                trace_hide (f 0) (ev ` A)) \\<and>\n            t \\<in> range f))", "by blast"], ["proof (state)\nthis:\n  \\<exists>t u.\n     front_tickFree u \\<and>\n     tickFree t \\<and>\n     x = trace_hide t (ev ` A) @ u \\<and>\n     ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n      (\\<exists>f.\n          strict_mono f \\<and>\n          (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n          (\\<forall>i.\n              trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n          t \\<in> range f))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>xa.\n           \\<exists>t u.\n              front_tickFree u \\<and>\n              tickFree t \\<and>\n              x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or>\n               (\\<exists>f.\n                   strict_mono f \\<and>\n                   (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                   (\\<forall>i.\n                       trace_hide (f i) (ev ` A) =\n                       trace_hide (f 0) (ev ` A)) \\<and>\n                   t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u.\n                            front_tickFree u \\<and>\n                            tickFree t \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))", "}"], ["proof (state)\nthis:\n  front_tickFree ?u2 \\<and>\n  tickFree ?t2 \\<and>\n  x = trace_hide ?t2 (ev ` A) @ ?u2 \\<and>\n  isInfHiddenRun ?f2 (Y ?xa2) A \\<and>\n  (\\<forall>i. ?f2 i \\<notin> D (Y ?xa2)) \\<and>\n  ?t2 \\<in> range ?f2 \\<Longrightarrow>\n  \\<exists>t u.\n     front_tickFree u \\<and>\n     tickFree t \\<and>\n     x = trace_hide t (ev ` A) @ u \\<and>\n     ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n      (\\<exists>f.\n          strict_mono f \\<and>\n          (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n          (\\<forall>i.\n              trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n          t \\<in> range f))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>xa.\n           \\<exists>t u.\n              front_tickFree u \\<and>\n              tickFree t \\<and>\n              x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or>\n               (\\<exists>f.\n                   strict_mono f \\<and>\n                   (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                   (\\<forall>i.\n                       trace_hide (f i) (ev ` A) =\n                       trace_hide (f 0) (ev ` A)) \\<and>\n                   t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u.\n                            front_tickFree u \\<and>\n                            tickFree t \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))", "note aa=this"], ["proof (state)\nthis:\n  front_tickFree ?u2 \\<and>\n  tickFree ?t2 \\<and>\n  x = trace_hide ?t2 (ev ` A) @ ?u2 \\<and>\n  isInfHiddenRun ?f2 (Y ?xa2) A \\<and>\n  (\\<forall>i. ?f2 i \\<notin> D (Y ?xa2)) \\<and>\n  ?t2 \\<in> range ?f2 \\<Longrightarrow>\n  \\<exists>t u.\n     front_tickFree u \\<and>\n     tickFree t \\<and>\n     x = trace_hide t (ev ` A) @ u \\<and>\n     ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n      (\\<exists>f.\n          strict_mono f \\<and>\n          (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n          (\\<forall>i.\n              trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n          t \\<in> range f))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>xa.\n           \\<exists>t u.\n              front_tickFree u \\<and>\n              tickFree t \\<and>\n              x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or>\n               (\\<exists>f.\n                   strict_mono f \\<and>\n                   (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                   (\\<forall>i.\n                       trace_hide (f i) (ev ` A) =\n                       trace_hide (f 0) (ev ` A)) \\<and>\n                   t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u.\n                            front_tickFree u \\<and>\n                            tickFree t \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))", "{"], ["proof (state)\nthis:\n  front_tickFree ?u2 \\<and>\n  tickFree ?t2 \\<and>\n  x = trace_hide ?t2 (ev ` A) @ ?u2 \\<and>\n  isInfHiddenRun ?f2 (Y ?xa2) A \\<and>\n  (\\<forall>i. ?f2 i \\<notin> D (Y ?xa2)) \\<and>\n  ?t2 \\<in> range ?f2 \\<Longrightarrow>\n  \\<exists>t u.\n     front_tickFree u \\<and>\n     tickFree t \\<and>\n     x = trace_hide t (ev ` A) @ u \\<and>\n     ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n      (\\<exists>f.\n          strict_mono f \\<and>\n          (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n          (\\<forall>i.\n              trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n          t \\<in> range f))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>xa.\n           \\<exists>t u.\n              front_tickFree u \\<and>\n              tickFree t \\<and>\n              x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or>\n               (\\<exists>f.\n                   strict_mono f \\<and>\n                   (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                   (\\<forall>i.\n                       trace_hide (f i) (ev ` A) =\n                       trace_hide (f 0) (ev ` A)) \\<and>\n                   t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u.\n                            front_tickFree u \\<and>\n                            tickFree t \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))", "fix xa t u f j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>xa.\n           \\<exists>t u.\n              front_tickFree u \\<and>\n              tickFree t \\<and>\n              x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or>\n               (\\<exists>f.\n                   strict_mono f \\<and>\n                   (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                   (\\<forall>i.\n                       trace_hide (f i) (ev ` A) =\n                       trace_hide (f 0) (ev ` A)) \\<and>\n                   t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u.\n                            front_tickFree u \\<and>\n                            tickFree t \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))", "assume a:\"front_tickFree u \\<and> tickFree t \\<and> x = trace_hide t (ev ` A) @ u \\<and> \n              isInfHiddenRun f (Y xa) A \\<and> (f j \\<in> D (Y xa)) \\<and> t \\<in> range f\""], ["proof (state)\nthis:\n  front_tickFree u \\<and>\n  tickFree t \\<and>\n  x = trace_hide t (ev ` A) @ u \\<and>\n  isInfHiddenRun f (Y xa) A \\<and> f j \\<in> D (Y xa) \\<and> t \\<in> range f\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>xa.\n           \\<exists>t u.\n              front_tickFree u \\<and>\n              tickFree t \\<and>\n              x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or>\n               (\\<exists>f.\n                   strict_mono f \\<and>\n                   (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                   (\\<forall>i.\n                       trace_hide (f i) (ev ` A) =\n                       trace_hide (f 0) (ev ` A)) \\<and>\n                   t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u.\n                            front_tickFree u \\<and>\n                            tickFree t \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))", "hence \"\\<exists>t u. front_tickFree u \\<and> tickFree t \\<and> x = trace_hide t (ev ` A) @ u \\<and> t \\<in> D (Y xa)\""], ["proof (prove)\nusing this:\n  front_tickFree u \\<and>\n  tickFree t \\<and>\n  x = trace_hide t (ev ` A) @ u \\<and>\n  isInfHiddenRun f (Y xa) A \\<and> f j \\<in> D (Y xa) \\<and> t \\<in> range f\n\ngoal (1 subgoal):\n 1. \\<exists>t u.\n       front_tickFree u \\<and>\n       tickFree t \\<and>\n       x = trace_hide t (ev ` A) @ u \\<and> t \\<in> D (Y xa)", "apply(rule_tac x=\"f j\" in exI, rule_tac x=u in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>front_tickFree u \\<and>\n             tickFree t \\<and>\n             x = trace_hide t (ev ` A) @ u \\<and>\n             isInfHiddenRun f (Y xa) A \\<and>\n             f j \\<in> D (Y xa) \\<and> t \\<in> range f;\n     front_tickFree u \\<and>\n     tickFree t \\<and>\n     x = trace_hide t (ev ` A) @ u \\<and>\n     isInfHiddenRun f (Y xa) A \\<and>\n     f j \\<in> D (Y xa) \\<and> t \\<in> range f\\<rbrakk>\n    \\<Longrightarrow> front_tickFree u \\<and>\n                      tickFree (f j) \\<and>\n                      x = trace_hide (f j) (ev ` A) @ u \\<and>\n                      f j \\<in> D (Y xa)", "using hiding_tickFree[of \"f j\" A] hiding_tickFree[of t A]"], ["proof (prove)\nusing this:\n  tickFree (f j) = tickFree (trace_hide (f j) (ev ` A))\n  tickFree t = tickFree (trace_hide t (ev ` A))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>front_tickFree u \\<and>\n             tickFree t \\<and>\n             x = trace_hide t (ev ` A) @ u \\<and>\n             isInfHiddenRun f (Y xa) A \\<and>\n             f j \\<in> D (Y xa) \\<and> t \\<in> range f;\n     front_tickFree u \\<and>\n     tickFree t \\<and>\n     x = trace_hide t (ev ` A) @ u \\<and>\n     isInfHiddenRun f (Y xa) A \\<and>\n     f j \\<in> D (Y xa) \\<and> t \\<in> range f\\<rbrakk>\n    \\<Longrightarrow> front_tickFree u \\<and>\n                      tickFree (f j) \\<and>\n                      x = trace_hide (f j) (ev ` A) @ u \\<and>\n                      f j \\<in> D (Y xa)", "by (metis imageE)"], ["proof (state)\nthis:\n  \\<exists>t u.\n     front_tickFree u \\<and>\n     tickFree t \\<and> x = trace_hide t (ev ` A) @ u \\<and> t \\<in> D (Y xa)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>xa.\n           \\<exists>t u.\n              front_tickFree u \\<and>\n              tickFree t \\<and>\n              x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or>\n               (\\<exists>f.\n                   strict_mono f \\<and>\n                   (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                   (\\<forall>i.\n                       trace_hide (f i) (ev ` A) =\n                       trace_hide (f 0) (ev ` A)) \\<and>\n                   t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u.\n                            front_tickFree u \\<and>\n                            tickFree t \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))", "}"], ["proof (state)\nthis:\n  front_tickFree ?u2 \\<and>\n  tickFree ?t2 \\<and>\n  x = trace_hide ?t2 (ev ` A) @ ?u2 \\<and>\n  isInfHiddenRun ?f2 (Y ?xa2) A \\<and>\n  ?f2 ?j2 \\<in> D (Y ?xa2) \\<and> ?t2 \\<in> range ?f2 \\<Longrightarrow>\n  \\<exists>t u.\n     front_tickFree u \\<and>\n     tickFree t \\<and>\n     x = trace_hide t (ev ` A) @ u \\<and> t \\<in> D (Y ?xa2)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>xa.\n           \\<exists>t u.\n              front_tickFree u \\<and>\n              tickFree t \\<and>\n              x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or>\n               (\\<exists>f.\n                   strict_mono f \\<and>\n                   (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                   (\\<forall>i.\n                       trace_hide (f i) (ev ` A) =\n                       trace_hide (f 0) (ev ` A)) \\<and>\n                   t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u.\n                            front_tickFree u \\<and>\n                            tickFree t \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))", "note bb=this"], ["proof (state)\nthis:\n  front_tickFree ?u2 \\<and>\n  tickFree ?t2 \\<and>\n  x = trace_hide ?t2 (ev ` A) @ ?u2 \\<and>\n  isInfHiddenRun ?f2 (Y ?xa2) A \\<and>\n  ?f2 ?j2 \\<in> D (Y ?xa2) \\<and> ?t2 \\<in> range ?f2 \\<Longrightarrow>\n  \\<exists>t u.\n     front_tickFree u \\<and>\n     tickFree t \\<and>\n     x = trace_hide t (ev ` A) @ u \\<and> t \\<in> D (Y ?xa2)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>xa.\n           \\<exists>t u.\n              front_tickFree u \\<and>\n              tickFree t \\<and>\n              x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or>\n               (\\<exists>f.\n                   strict_mono f \\<and>\n                   (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                   (\\<forall>i.\n                       trace_hide (f i) (ev ` A) =\n                       trace_hide (f 0) (ev ` A)) \\<and>\n                   t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u.\n                            front_tickFree u \\<and>\n                            tickFree t \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))", "have cc: \"\\<forall>xa. \\<exists>t u. front_tickFree u \\<and> tickFree t \\<and> x = trace_hide t (ev ` A) @ u \\<and> t \\<in> D (Y xa)\n           \\<Longrightarrow> ?case\" (is \"\\<forall>xa. \\<exists>t. ?S t xa \\<Longrightarrow> ?case\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>xa.\n       \\<exists>t u.\n          front_tickFree u \\<and>\n          tickFree t \\<and>\n          x = trace_hide t (ev ` A) @ u \\<and>\n          t \\<in> D (Y xa) \\<Longrightarrow>\n    \\<exists>t u.\n       front_tickFree u \\<and>\n       tickFree t \\<and>\n       x = trace_hide t (ev ` A) @ u \\<and>\n       ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n        (\\<exists>f.\n            strict_mono f \\<and>\n            (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n            (\\<forall>i.\n                trace_hide (f i) (ev ` A) =\n                trace_hide (f 0) (ev ` A)) \\<and>\n            t \\<in> range f))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>xa.\n       \\<exists>t u.\n          front_tickFree u \\<and>\n          tickFree t \\<and>\n          x = trace_hide t (ev ` A) @ u \\<and>\n          t \\<in> D (Y xa) \\<Longrightarrow>\n    \\<exists>t u.\n       front_tickFree u \\<and>\n       tickFree t \\<and>\n       x = trace_hide t (ev ` A) @ u \\<and>\n       ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n        (\\<exists>f.\n            strict_mono f \\<and>\n            (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n            (\\<forall>i.\n                trace_hide (f i) (ev ` A) =\n                trace_hide (f 0) (ev ` A)) \\<and>\n            t \\<in> range f))", "assume dd:\"\\<forall>xa. \\<exists>t u. front_tickFree u \\<and> tickFree t \\<and> x = trace_hide t (ev ` A) @ u \\<and> t \\<in> D (Y xa)\"\n             (is \"\\<forall>xa. \\<exists>t. ?S t xa\")"], ["proof (state)\nthis:\n  \\<forall>xa.\n     \\<exists>t u.\n        front_tickFree u \\<and>\n        tickFree t \\<and>\n        x = trace_hide t (ev ` A) @ u \\<and> t \\<in> D (Y xa)\n\ngoal (1 subgoal):\n 1. \\<forall>xa.\n       \\<exists>t u.\n          front_tickFree u \\<and>\n          tickFree t \\<and>\n          x = trace_hide t (ev ` A) @ u \\<and>\n          t \\<in> D (Y xa) \\<Longrightarrow>\n    \\<exists>t u.\n       front_tickFree u \\<and>\n       tickFree t \\<and>\n       x = trace_hide t (ev ` A) @ u \\<and>\n       ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n        (\\<exists>f.\n            strict_mono f \\<and>\n            (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n            (\\<forall>i.\n                trace_hide (f i) (ev ` A) =\n                trace_hide (f 0) (ev ` A)) \\<and>\n            t \\<in> range f))", "define f where \"f = (\\<lambda>n. SOME t. ?S t n)\""], ["proof (state)\nthis:\n  f =\n  (\\<lambda>n.\n      SOME t.\n         \\<exists>u.\n            front_tickFree u \\<and>\n            tickFree t \\<and>\n            x = trace_hide t (ev ` A) @ u \\<and> t \\<in> D (Y n))\n\ngoal (1 subgoal):\n 1. \\<forall>xa.\n       \\<exists>t u.\n          front_tickFree u \\<and>\n          tickFree t \\<and>\n          x = trace_hide t (ev ` A) @ u \\<and>\n          t \\<in> D (Y xa) \\<Longrightarrow>\n    \\<exists>t u.\n       front_tickFree u \\<and>\n       tickFree t \\<and>\n       x = trace_hide t (ev ` A) @ u \\<and>\n       ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n        (\\<exists>f.\n            strict_mono f \\<and>\n            (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n            (\\<forall>i.\n                trace_hide (f i) (ev ` A) =\n                trace_hide (f 0) (ev ` A)) \\<and>\n            t \\<in> range f))", "thus ?case"], ["proof (prove)\nusing this:\n  f =\n  (\\<lambda>n.\n      SOME t.\n         \\<exists>u.\n            front_tickFree u \\<and>\n            tickFree t \\<and>\n            x = trace_hide t (ev ` A) @ u \\<and> t \\<in> D (Y n))\n\ngoal (1 subgoal):\n 1. \\<exists>t u.\n       front_tickFree u \\<and>\n       tickFree t \\<and>\n       x = trace_hide t (ev ` A) @ u \\<and>\n       ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n        (\\<exists>f.\n            strict_mono f \\<and>\n            (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n            (\\<forall>i.\n                trace_hide (f i) (ev ` A) =\n                trace_hide (f 0) (ev ` A)) \\<and>\n            t \\<in> range f))", "proof (cases \"finite(range f)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     finite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))\n 2. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "case True"], ["proof (state)\nthis:\n  finite (range f)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     finite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))\n 2. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "obtain t where gg:\"infinite (f -` {t})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t.\n        infinite (f -` {t}) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using f_def True inf_img_fin_dom"], ["proof (prove)\nusing this:\n  f =\n  (\\<lambda>n.\n      SOME t.\n         \\<exists>u.\n            front_tickFree u \\<and>\n            tickFree t \\<and>\n            x = trace_hide t (ev ` A) @ u \\<and> t \\<in> D (Y n))\n  finite (range f)\n  \\<lbrakk>finite (?f ` ?A); infinite ?A\\<rbrakk>\n  \\<Longrightarrow> \\<exists>y\\<in>?f ` ?A. infinite (?f -` {y})\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        infinite (f -` {t}) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  infinite (f -` {t})\n\ngoal (2 subgoals):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     finite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))\n 2. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "then"], ["proof (chain)\npicking this:\n  infinite (f -` {t})", "obtain k where \"f k = t\""], ["proof (prove)\nusing this:\n  infinite (f -` {t})\n\ngoal (1 subgoal):\n 1. (\\<And>k. f k = t \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using finite_nat_set_iff_bounded_le"], ["proof (prove)\nusing this:\n  infinite (f -` {t})\n  finite ?N = (\\<exists>m. \\<forall>n\\<in>?N. n \\<le> m)\n\ngoal (1 subgoal):\n 1. (\\<And>k. f k = t \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  f k = t\n\ngoal (2 subgoals):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     finite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))\n 2. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "then"], ["proof (chain)\npicking this:\n  f k = t", "obtain u where uu:\"front_tickFree u \\<and> x = trace_hide t (ev ` A) @ u \\<and> tickFree t\""], ["proof (prove)\nusing this:\n  f k = t\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        front_tickFree u \\<and>\n        x = trace_hide t (ev ` A) @ u \\<and> tickFree t \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using f_def dd[rule_format, of k] some_eq_ex[of \"\\<lambda>t. ?S t k\"]"], ["proof (prove)\nusing this:\n  f k = t\n  f =\n  (\\<lambda>n.\n      SOME t.\n         \\<exists>u.\n            front_tickFree u \\<and>\n            tickFree t \\<and>\n            x = trace_hide t (ev ` A) @ u \\<and> t \\<in> D (Y n))\n  \\<exists>t u.\n     front_tickFree u \\<and>\n     tickFree t \\<and> x = trace_hide t (ev ` A) @ u \\<and> t \\<in> D (Y k)\n  (\\<exists>u.\n      front_tickFree u \\<and>\n      tickFree\n       (SOME xa.\n           \\<exists>u.\n              front_tickFree u \\<and>\n              tickFree xa \\<and>\n              x = trace_hide xa (ev ` A) @ u \\<and> xa \\<in> D (Y k)) \\<and>\n      x =\n      trace_hide\n       (SOME xa.\n           \\<exists>u.\n              front_tickFree u \\<and>\n              tickFree xa \\<and>\n              x = trace_hide xa (ev ` A) @ u \\<and> xa \\<in> D (Y k))\n       (ev ` A) @\n      u \\<and>\n      (SOME xa.\n          \\<exists>u.\n             front_tickFree u \\<and>\n             tickFree xa \\<and>\n             x = trace_hide xa (ev ` A) @ u \\<and> xa \\<in> D (Y k))\n      \\<in> D (Y k)) =\n  (\\<exists>xa u.\n      front_tickFree u \\<and>\n      tickFree xa \\<and>\n      x = trace_hide xa (ev ` A) @ u \\<and> xa \\<in> D (Y k))\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        front_tickFree u \\<and>\n        x = trace_hide t (ev ` A) @ u \\<and> tickFree t \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  front_tickFree u \\<and> x = trace_hide t (ev ` A) @ u \\<and> tickFree t\n\ngoal (2 subgoals):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     finite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))\n 2. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "{"], ["proof (state)\nthis:\n  front_tickFree u \\<and> x = trace_hide t (ev ` A) @ u \\<and> tickFree t\n\ngoal (2 subgoals):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     finite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))\n 2. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "fix m"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     finite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))\n 2. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "from gg"], ["proof (chain)\npicking this:\n  infinite (f -` {t})", "obtain n where gg:\"n \\<ge> m \\<and> n \\<in> (f -` {t})\""], ["proof (prove)\nusing this:\n  infinite (f -` {t})\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        m \\<le> n \\<and> n \\<in> f -` {t} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (meson finite_nat_set_iff_bounded_le nat_le_linear)"], ["proof (state)\nthis:\n  m \\<le> n \\<and> n \\<in> f -` {t}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     finite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))\n 2. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "hence \"t \\<in> D (Y n)\""], ["proof (prove)\nusing this:\n  m \\<le> n \\<and> n \\<in> f -` {t}\n\ngoal (1 subgoal):\n 1. t \\<in> D (Y n)", "using f_def dd[rule_format, of n] some_eq_ex[of \"\\<lambda>t. ?S t n\"]"], ["proof (prove)\nusing this:\n  m \\<le> n \\<and> n \\<in> f -` {t}\n  f =\n  (\\<lambda>n.\n      SOME t.\n         \\<exists>u.\n            front_tickFree u \\<and>\n            tickFree t \\<and>\n            x = trace_hide t (ev ` A) @ u \\<and> t \\<in> D (Y n))\n  \\<exists>t u.\n     front_tickFree u \\<and>\n     tickFree t \\<and> x = trace_hide t (ev ` A) @ u \\<and> t \\<in> D (Y n)\n  (\\<exists>u.\n      front_tickFree u \\<and>\n      tickFree\n       (SOME xa.\n           \\<exists>u.\n              front_tickFree u \\<and>\n              tickFree xa \\<and>\n              x = trace_hide xa (ev ` A) @ u \\<and> xa \\<in> D (Y n)) \\<and>\n      x =\n      trace_hide\n       (SOME xa.\n           \\<exists>u.\n              front_tickFree u \\<and>\n              tickFree xa \\<and>\n              x = trace_hide xa (ev ` A) @ u \\<and> xa \\<in> D (Y n))\n       (ev ` A) @\n      u \\<and>\n      (SOME xa.\n          \\<exists>u.\n             front_tickFree u \\<and>\n             tickFree xa \\<and>\n             x = trace_hide xa (ev ` A) @ u \\<and> xa \\<in> D (Y n))\n      \\<in> D (Y n)) =\n  (\\<exists>xa u.\n      front_tickFree u \\<and>\n      tickFree xa \\<and>\n      x = trace_hide xa (ev ` A) @ u \\<and> xa \\<in> D (Y n))\n\ngoal (1 subgoal):\n 1. t \\<in> D (Y n)", "by auto"], ["proof (state)\nthis:\n  t \\<in> D (Y n)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     finite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))\n 2. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "with gg 1(2)"], ["proof (chain)\npicking this:\n  m \\<le> n \\<and> n \\<in> f -` {t}\n  chain Y\n  t \\<in> D (Y n)", "have \"t \\<in> D (Y m)\""], ["proof (prove)\nusing this:\n  m \\<le> n \\<and> n \\<in> f -` {t}\n  chain Y\n  t \\<in> D (Y n)\n\ngoal (1 subgoal):\n 1. t \\<in> D (Y m)", "by (meson contra_subsetD le_approx_def po_class.chain_mono)"], ["proof (state)\nthis:\n  t \\<in> D (Y m)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     finite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))\n 2. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "}"], ["proof (state)\nthis:\n  t \\<in> D (Y ?m2)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     finite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))\n 2. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "with gg uu"], ["proof (chain)\npicking this:\n  infinite (f -` {t})\n  front_tickFree u \\<and> x = trace_hide t (ev ` A) @ u \\<and> tickFree t\n  t \\<in> D (Y ?m2)", "show ?thesis"], ["proof (prove)\nusing this:\n  infinite (f -` {t})\n  front_tickFree u \\<and> x = trace_hide t (ev ` A) @ u \\<and> tickFree t\n  t \\<in> D (Y ?m2)\n\ngoal (1 subgoal):\n 1. \\<exists>t u.\n       front_tickFree u \\<and>\n       tickFree t \\<and>\n       x = trace_hide t (ev ` A) @ u \\<and>\n       ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n        (\\<exists>f.\n            strict_mono f \\<and>\n            (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n            (\\<forall>i.\n                trace_hide (f i) (ev ` A) =\n                trace_hide (f 0) (ev ` A)) \\<and>\n            t \\<in> range f))", "by blast"], ["proof (state)\nthis:\n  \\<exists>t u.\n     front_tickFree u \\<and>\n     tickFree t \\<and>\n     x = trace_hide t (ev ` A) @ u \\<and>\n     ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n      (\\<exists>f.\n          strict_mono f \\<and>\n          (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n          (\\<forall>i.\n              trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n          t \\<in> range f))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "case False"], ["proof (state)\nthis:\n  infinite (range f)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "{"], ["proof (state)\nthis:\n  infinite (range f)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "assume \"t \\<in> range f\""], ["proof (state)\nthis:\n  t \\<in> range f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "then"], ["proof (chain)\npicking this:\n  t \\<in> range f", "obtain k where \"f k = t\""], ["proof (prove)\nusing this:\n  t \\<in> range f\n\ngoal (1 subgoal):\n 1. (\\<And>k. f k = t \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using finite_nat_set_iff_bounded_le"], ["proof (prove)\nusing this:\n  t \\<in> range f\n  finite ?N = (\\<exists>m. \\<forall>n\\<in>?N. n \\<le> m)\n\ngoal (1 subgoal):\n 1. (\\<And>k. f k = t \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  f k = t\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "then"], ["proof (chain)\npicking this:\n  f k = t", "obtain u where uu:\"front_tickFree u \\<and> x = trace_hide t (ev ` A) @ u \\<and> tickFree t\""], ["proof (prove)\nusing this:\n  f k = t\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        front_tickFree u \\<and>\n        x = trace_hide t (ev ` A) @ u \\<and> tickFree t \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using f_def dd[rule_format, of k] some_eq_ex[of \"\\<lambda>t. ?S t k\"]"], ["proof (prove)\nusing this:\n  f k = t\n  f =\n  (\\<lambda>n.\n      SOME t.\n         \\<exists>u.\n            front_tickFree u \\<and>\n            tickFree t \\<and>\n            x = trace_hide t (ev ` A) @ u \\<and> t \\<in> D (Y n))\n  \\<exists>t u.\n     front_tickFree u \\<and>\n     tickFree t \\<and> x = trace_hide t (ev ` A) @ u \\<and> t \\<in> D (Y k)\n  (\\<exists>u.\n      front_tickFree u \\<and>\n      tickFree\n       (SOME xa.\n           \\<exists>u.\n              front_tickFree u \\<and>\n              tickFree xa \\<and>\n              x = trace_hide xa (ev ` A) @ u \\<and> xa \\<in> D (Y k)) \\<and>\n      x =\n      trace_hide\n       (SOME xa.\n           \\<exists>u.\n              front_tickFree u \\<and>\n              tickFree xa \\<and>\n              x = trace_hide xa (ev ` A) @ u \\<and> xa \\<in> D (Y k))\n       (ev ` A) @\n      u \\<and>\n      (SOME xa.\n          \\<exists>u.\n             front_tickFree u \\<and>\n             tickFree xa \\<and>\n             x = trace_hide xa (ev ` A) @ u \\<and> xa \\<in> D (Y k))\n      \\<in> D (Y k)) =\n  (\\<exists>xa u.\n      front_tickFree u \\<and>\n      tickFree xa \\<and>\n      x = trace_hide xa (ev ` A) @ u \\<and> xa \\<in> D (Y k))\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        front_tickFree u \\<and>\n        x = trace_hide t (ev ` A) @ u \\<and> tickFree t \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  front_tickFree u \\<and> x = trace_hide t (ev ` A) @ u \\<and> tickFree t\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "hence \"set t \\<subseteq> set x \\<union> (ev ` A)\""], ["proof (prove)\nusing this:\n  front_tickFree u \\<and> x = trace_hide t (ev ` A) @ u \\<and> tickFree t\n\ngoal (1 subgoal):\n 1. set t \\<subseteq> set x \\<union> ev ` A", "by auto"], ["proof (state)\nthis:\n  set t \\<subseteq> set x \\<union> ev ` A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "}"], ["proof (state)\nthis:\n  ?t2 \\<in> range f \\<Longrightarrow>\n  set ?t2 \\<subseteq> set x \\<union> ev ` A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "note ee=this"], ["proof (state)\nthis:\n  ?t2 \\<in> range f \\<Longrightarrow>\n  set ?t2 \\<subseteq> set x \\<union> ev ` A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "{"], ["proof (state)\nthis:\n  ?t2 \\<in> range f \\<Longrightarrow>\n  set ?t2 \\<subseteq> set x \\<union> ev ` A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "have \"finite {(take i t)|t. t \\<in> range f}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {take i t |t. t \\<in> range f}", "proof(induct i, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       finite {take i t |t. t \\<in> range f} \\<Longrightarrow>\n       finite {take (Suc i) t |t. t \\<in> range f}", "case (Suc i)"], ["proof (state)\nthis:\n  finite {take i t |t. t \\<in> range f}\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       finite {take i t |t. t \\<in> range f} \\<Longrightarrow>\n       finite {take (Suc i) t |t. t \\<in> range f}", "have ff:\"{take (Suc i) t|t. t \\<in> range f} \\<subseteq> {(take i t)|t. t \\<in> range f} \\<union>\n                        (\\<Union>e\\<in>(set x \\<union> (ev ` A)). {(take i t)@[e]|t. t \\<in> range f})\" (is \"?AA \\<subseteq> ?BB\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. {take (Suc i) t |t. t \\<in> range f}\n    \\<subseteq> {take i t |t. t \\<in> range f} \\<union>\n                (\\<Union>e\\<in>set x \\<union> ev ` A.\n                    {take i t @ [e] |t. t \\<in> range f})", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {take (Suc i) t |t. t \\<in> range f} \\<Longrightarrow>\n       xa \\<in> {take i t |t. t \\<in> range f} \\<union>\n                (\\<Union>e\\<in>set x \\<union> ev ` A.\n                    {take i t @ [e] |t. t \\<in> range f})", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {take (Suc i) t |t. t \\<in> range f} \\<Longrightarrow>\n       xa \\<in> {take i t |t. t \\<in> range f} \\<union>\n                (\\<Union>e\\<in>set x \\<union> ev ` A.\n                    {take i t @ [e] |t. t \\<in> range f})", "assume \"t \\<in> ?AA\""], ["proof (state)\nthis:\n  t \\<in> {take (Suc i) t |t. t \\<in> range f}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {take (Suc i) t |t. t \\<in> range f} \\<Longrightarrow>\n       xa \\<in> {take i t |t. t \\<in> range f} \\<union>\n                (\\<Union>e\\<in>set x \\<union> ev ` A.\n                    {take i t @ [e] |t. t \\<in> range f})", "then"], ["proof (chain)\npicking this:\n  t \\<in> {take (Suc i) t |t. t \\<in> range f}", "obtain t' where hh:\"t' \\<in> range f \\<and> t = take (Suc i) t'\""], ["proof (prove)\nusing this:\n  t \\<in> {take (Suc i) t |t. t \\<in> range f}\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        t' \\<in> range f \\<and> t = take (Suc i) t' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using finite_nat_set_iff_bounded_le"], ["proof (prove)\nusing this:\n  t \\<in> {take (Suc i) t |t. t \\<in> range f}\n  finite ?N = (\\<exists>m. \\<forall>n\\<in>?N. n \\<le> m)\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        t' \\<in> range f \\<and> t = take (Suc i) t' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  t' \\<in> range f \\<and> t = take (Suc i) t'\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {take (Suc i) t |t. t \\<in> range f} \\<Longrightarrow>\n       xa \\<in> {take i t |t. t \\<in> range f} \\<union>\n                (\\<Union>e\\<in>set x \\<union> ev ` A.\n                    {take i t @ [e] |t. t \\<in> range f})", "with ee[of t']"], ["proof (chain)\npicking this:\n  t' \\<in> range f \\<Longrightarrow>\n  set t' \\<subseteq> set x \\<union> ev ` A\n  t' \\<in> range f \\<and> t = take (Suc i) t'", "show \"t \\<in> ?BB\""], ["proof (prove)\nusing this:\n  t' \\<in> range f \\<Longrightarrow>\n  set t' \\<subseteq> set x \\<union> ev ` A\n  t' \\<in> range f \\<and> t = take (Suc i) t'\n\ngoal (1 subgoal):\n 1. t \\<in> {take i t |t. t \\<in> range f} \\<union>\n            (\\<Union>e\\<in>set x \\<union> ev ` A.\n                {take i t @ [e] |t. t \\<in> range f})", "proof(cases \"length t' > i\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>t' \\<in> range f \\<Longrightarrow>\n             set t' \\<subseteq> set x \\<union> ev ` A;\n     t' \\<in> range f \\<and> t = take (Suc i) t'; i < length t'\\<rbrakk>\n    \\<Longrightarrow> t \\<in> {take i t |t. t \\<in> range f} \\<union>\n                              (\\<Union>e\\<in>set x \\<union> ev ` A.\n                                  {take i t @ [e] |t. t \\<in> range f})\n 2. \\<lbrakk>t' \\<in> range f \\<Longrightarrow>\n             set t' \\<subseteq> set x \\<union> ev ` A;\n     t' \\<in> range f \\<and> t = take (Suc i) t';\n     \\<not> i < length t'\\<rbrakk>\n    \\<Longrightarrow> t \\<in> {take i t |t. t \\<in> range f} \\<union>\n                              (\\<Union>e\\<in>set x \\<union> ev ` A.\n                                  {take i t @ [e] |t. t \\<in> range f})", "case True"], ["proof (state)\nthis:\n  i < length t'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>t' \\<in> range f \\<Longrightarrow>\n             set t' \\<subseteq> set x \\<union> ev ` A;\n     t' \\<in> range f \\<and> t = take (Suc i) t'; i < length t'\\<rbrakk>\n    \\<Longrightarrow> t \\<in> {take i t |t. t \\<in> range f} \\<union>\n                              (\\<Union>e\\<in>set x \\<union> ev ` A.\n                                  {take i t @ [e] |t. t \\<in> range f})\n 2. \\<lbrakk>t' \\<in> range f \\<Longrightarrow>\n             set t' \\<subseteq> set x \\<union> ev ` A;\n     t' \\<in> range f \\<and> t = take (Suc i) t';\n     \\<not> i < length t'\\<rbrakk>\n    \\<Longrightarrow> t \\<in> {take i t |t. t \\<in> range f} \\<union>\n                              (\\<Union>e\\<in>set x \\<union> ev ` A.\n                                  {take i t @ [e] |t. t \\<in> range f})", "hence ii:\"take (Suc i) t' = take i t' @ [t'!i]\""], ["proof (prove)\nusing this:\n  i < length t'\n\ngoal (1 subgoal):\n 1. take (Suc i) t' = take i t' @ [t' ! i]", "by (simp add: take_Suc_conv_app_nth)"], ["proof (state)\nthis:\n  take (Suc i) t' = take i t' @ [t' ! i]\n\ngoal (2 subgoals):\n 1. \\<lbrakk>t' \\<in> range f \\<Longrightarrow>\n             set t' \\<subseteq> set x \\<union> ev ` A;\n     t' \\<in> range f \\<and> t = take (Suc i) t'; i < length t'\\<rbrakk>\n    \\<Longrightarrow> t \\<in> {take i t |t. t \\<in> range f} \\<union>\n                              (\\<Union>e\\<in>set x \\<union> ev ` A.\n                                  {take i t @ [e] |t. t \\<in> range f})\n 2. \\<lbrakk>t' \\<in> range f \\<Longrightarrow>\n             set t' \\<subseteq> set x \\<union> ev ` A;\n     t' \\<in> range f \\<and> t = take (Suc i) t';\n     \\<not> i < length t'\\<rbrakk>\n    \\<Longrightarrow> t \\<in> {take i t |t. t \\<in> range f} \\<union>\n                              (\\<Union>e\\<in>set x \\<union> ev ` A.\n                                  {take i t @ [e] |t. t \\<in> range f})", "with ee[of t']"], ["proof (chain)\npicking this:\n  t' \\<in> range f \\<Longrightarrow>\n  set t' \\<subseteq> set x \\<union> ev ` A\n  take (Suc i) t' = take i t' @ [t' ! i]", "have \"t'!i \\<in> set x \\<union> (ev ` A)\""], ["proof (prove)\nusing this:\n  t' \\<in> range f \\<Longrightarrow>\n  set t' \\<subseteq> set x \\<union> ev ` A\n  take (Suc i) t' = take i t' @ [t' ! i]\n\ngoal (1 subgoal):\n 1. t' ! i \\<in> set x \\<union> ev ` A", "by (meson True contra_subsetD hh nth_mem)"], ["proof (state)\nthis:\n  t' ! i \\<in> set x \\<union> ev ` A\n\ngoal (2 subgoals):\n 1. \\<lbrakk>t' \\<in> range f \\<Longrightarrow>\n             set t' \\<subseteq> set x \\<union> ev ` A;\n     t' \\<in> range f \\<and> t = take (Suc i) t'; i < length t'\\<rbrakk>\n    \\<Longrightarrow> t \\<in> {take i t |t. t \\<in> range f} \\<union>\n                              (\\<Union>e\\<in>set x \\<union> ev ` A.\n                                  {take i t @ [e] |t. t \\<in> range f})\n 2. \\<lbrakk>t' \\<in> range f \\<Longrightarrow>\n             set t' \\<subseteq> set x \\<union> ev ` A;\n     t' \\<in> range f \\<and> t = take (Suc i) t';\n     \\<not> i < length t'\\<rbrakk>\n    \\<Longrightarrow> t \\<in> {take i t |t. t \\<in> range f} \\<union>\n                              (\\<Union>e\\<in>set x \\<union> ev ` A.\n                                  {take i t @ [e] |t. t \\<in> range f})", "with ii hh"], ["proof (chain)\npicking this:\n  take (Suc i) t' = take i t' @ [t' ! i]\n  t' \\<in> range f \\<and> t = take (Suc i) t'\n  t' ! i \\<in> set x \\<union> ev ` A", "show ?thesis"], ["proof (prove)\nusing this:\n  take (Suc i) t' = take i t' @ [t' ! i]\n  t' \\<in> range f \\<and> t = take (Suc i) t'\n  t' ! i \\<in> set x \\<union> ev ` A\n\ngoal (1 subgoal):\n 1. t \\<in> {take i t |t. t \\<in> range f} \\<union>\n            (\\<Union>e\\<in>set x \\<union> ev ` A.\n                {take i t @ [e] |t. t \\<in> range f})", "by blast"], ["proof (state)\nthis:\n  t \\<in> {take i t |t. t \\<in> range f} \\<union>\n          (\\<Union>e\\<in>set x \\<union> ev ` A.\n              {take i t @ [e] |t. t \\<in> range f})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>t' \\<in> range f \\<Longrightarrow>\n             set t' \\<subseteq> set x \\<union> ev ` A;\n     t' \\<in> range f \\<and> t = take (Suc i) t';\n     \\<not> i < length t'\\<rbrakk>\n    \\<Longrightarrow> t \\<in> {take i t |t. t \\<in> range f} \\<union>\n                              (\\<Union>e\\<in>set x \\<union> ev ` A.\n                                  {take i t @ [e] |t. t \\<in> range f})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>t' \\<in> range f \\<Longrightarrow>\n             set t' \\<subseteq> set x \\<union> ev ` A;\n     t' \\<in> range f \\<and> t = take (Suc i) t';\n     \\<not> i < length t'\\<rbrakk>\n    \\<Longrightarrow> t \\<in> {take i t |t. t \\<in> range f} \\<union>\n                              (\\<Union>e\\<in>set x \\<union> ev ` A.\n                                  {take i t @ [e] |t. t \\<in> range f})", "case False"], ["proof (state)\nthis:\n  \\<not> i < length t'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>t' \\<in> range f \\<Longrightarrow>\n             set t' \\<subseteq> set x \\<union> ev ` A;\n     t' \\<in> range f \\<and> t = take (Suc i) t';\n     \\<not> i < length t'\\<rbrakk>\n    \\<Longrightarrow> t \\<in> {take i t |t. t \\<in> range f} \\<union>\n                              (\\<Union>e\\<in>set x \\<union> ev ` A.\n                                  {take i t @ [e] |t. t \\<in> range f})", "hence \"take (Suc i) t' = take i t'\""], ["proof (prove)\nusing this:\n  \\<not> i < length t'\n\ngoal (1 subgoal):\n 1. take (Suc i) t' = take i t'", "by fastforce"], ["proof (state)\nthis:\n  take (Suc i) t' = take i t'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>t' \\<in> range f \\<Longrightarrow>\n             set t' \\<subseteq> set x \\<union> ev ` A;\n     t' \\<in> range f \\<and> t = take (Suc i) t';\n     \\<not> i < length t'\\<rbrakk>\n    \\<Longrightarrow> t \\<in> {take i t |t. t \\<in> range f} \\<union>\n                              (\\<Union>e\\<in>set x \\<union> ev ` A.\n                                  {take i t @ [e] |t. t \\<in> range f})", "with hh"], ["proof (chain)\npicking this:\n  t' \\<in> range f \\<and> t = take (Suc i) t'\n  take (Suc i) t' = take i t'", "show ?thesis"], ["proof (prove)\nusing this:\n  t' \\<in> range f \\<and> t = take (Suc i) t'\n  take (Suc i) t' = take i t'\n\ngoal (1 subgoal):\n 1. t \\<in> {take i t |t. t \\<in> range f} \\<union>\n            (\\<Union>e\\<in>set x \\<union> ev ` A.\n                {take i t @ [e] |t. t \\<in> range f})", "by auto"], ["proof (state)\nthis:\n  t \\<in> {take i t |t. t \\<in> range f} \\<union>\n          (\\<Union>e\\<in>set x \\<union> ev ` A.\n              {take i t @ [e] |t. t \\<in> range f})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  t \\<in> {take i t |t. t \\<in> range f} \\<union>\n          (\\<Union>e\\<in>set x \\<union> ev ` A.\n              {take i t @ [e] |t. t \\<in> range f})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {take (Suc i) t |t. t \\<in> range f}\n  \\<subseteq> {take i t |t. t \\<in> range f} \\<union>\n              (\\<Union>e\\<in>set x \\<union> ev ` A.\n                  {take i t @ [e] |t. t \\<in> range f})\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       finite {take i t |t. t \\<in> range f} \\<Longrightarrow>\n       finite {take (Suc i) t |t. t \\<in> range f}", "{"], ["proof (state)\nthis:\n  {take (Suc i) t |t. t \\<in> range f}\n  \\<subseteq> {take i t |t. t \\<in> range f} \\<union>\n              (\\<Union>e\\<in>set x \\<union> ev ` A.\n                  {take i t @ [e] |t. t \\<in> range f})\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       finite {take i t |t. t \\<in> range f} \\<Longrightarrow>\n       finite {take (Suc i) t |t. t \\<in> range f}", "fix e"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       finite {take i t |t. t \\<in> range f} \\<Longrightarrow>\n       finite {take (Suc i) t |t. t \\<in> range f}", "have \"{x @ [e] |x. \\<exists>t. x = take i t \\<and> t \\<in> range f} = {take i t' @ [e] |t'. t' \\<in> range f}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x @ [e] |x. \\<exists>t. x = take i t \\<and> t \\<in> range f} =\n    {take i t' @ [e] |t'. t' \\<in> range f}", "by auto"], ["proof (state)\nthis:\n  {x @ [e] |x. \\<exists>t. x = take i t \\<and> t \\<in> range f} =\n  {take i t' @ [e] |t'. t' \\<in> range f}\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       finite {take i t |t. t \\<in> range f} \\<Longrightarrow>\n       finite {take (Suc i) t |t. t \\<in> range f}", "hence \"finite({(take i t') @ [e] |t'. t'\\<in>range f})\""], ["proof (prove)\nusing this:\n  {x @ [e] |x. \\<exists>t. x = take i t \\<and> t \\<in> range f} =\n  {take i t' @ [e] |t'. t' \\<in> range f}\n\ngoal (1 subgoal):\n 1. finite {take i t' @ [e] |t'. t' \\<in> range f}", "using finite_image_set[of _ \"\\<lambda>t. t@[e]\", OF Suc]"], ["proof (prove)\nusing this:\n  {x @ [e] |x. \\<exists>t. x = take i t \\<and> t \\<in> range f} =\n  {take i t' @ [e] |t'. t' \\<in> range f}\n  finite {x @ [e] |x. \\<exists>t. x = take i t \\<and> t \\<in> range f}\n\ngoal (1 subgoal):\n 1. finite {take i t' @ [e] |t'. t' \\<in> range f}", "by auto"], ["proof (state)\nthis:\n  finite {take i t' @ [e] |t'. t' \\<in> range f}\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       finite {take i t |t. t \\<in> range f} \\<Longrightarrow>\n       finite {take (Suc i) t |t. t \\<in> range f}", "}"], ["proof (state)\nthis:\n  finite {take i t' @ [?e2] |t'. t' \\<in> range f}\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       finite {take i t |t. t \\<in> range f} \\<Longrightarrow>\n       finite {take (Suc i) t |t. t \\<in> range f}", "note gg=this"], ["proof (state)\nthis:\n  finite {take i t' @ [?e2] |t'. t' \\<in> range f}\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       finite {take i t |t. t \\<in> range f} \\<Longrightarrow>\n       finite {take (Suc i) t |t. t \\<in> range f}", "have \"finite(set x \\<union> (ev ` A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (set x \\<union> ev ` A)", "using 1(1)"], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. finite (set x \\<union> ev ` A)", "by simp"], ["proof (state)\nthis:\n  finite (set x \\<union> ev ` A)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       finite {take i t |t. t \\<in> range f} \\<Longrightarrow>\n       finite {take (Suc i) t |t. t \\<in> range f}", "with ff gg Suc"], ["proof (chain)\npicking this:\n  {take (Suc i) t |t. t \\<in> range f}\n  \\<subseteq> {take i t |t. t \\<in> range f} \\<union>\n              (\\<Union>e\\<in>set x \\<union> ev ` A.\n                  {take i t @ [e] |t. t \\<in> range f})\n  finite {take i t' @ [?e2] |t'. t' \\<in> range f}\n  finite {take i t |t. t \\<in> range f}\n  finite (set x \\<union> ev ` A)", "show ?case"], ["proof (prove)\nusing this:\n  {take (Suc i) t |t. t \\<in> range f}\n  \\<subseteq> {take i t |t. t \\<in> range f} \\<union>\n              (\\<Union>e\\<in>set x \\<union> ev ` A.\n                  {take i t @ [e] |t. t \\<in> range f})\n  finite {take i t' @ [?e2] |t'. t' \\<in> range f}\n  finite {take i t |t. t \\<in> range f}\n  finite (set x \\<union> ev ` A)\n\ngoal (1 subgoal):\n 1. finite {take (Suc i) t |t. t \\<in> range f}", "by (metis (no_types, lifting) finite_UN finite_Un finite_subset)"], ["proof (state)\nthis:\n  finite {take (Suc i) t |t. t \\<in> range f}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite {take i t |t. t \\<in> range f}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "}"], ["proof (state)\nthis:\n  finite {take ?i2 t |t. t \\<in> range f}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "note ff=this"], ["proof (state)\nthis:\n  finite {take ?i2 t |t. t \\<in> range f}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "hence \"\\<forall>i. {take i t |t. t \\<in> range f} = {t. \\<exists>t'. t = take i (f t')}\""], ["proof (prove)\nusing this:\n  finite {take ?i2 t |t. t \\<in> range f}\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       {take i t |t. t \\<in> range f} = {t. \\<exists>t'. t = take i (f t')}", "by auto"], ["proof (state)\nthis:\n  \\<forall>i.\n     {take i t |t. t \\<in> range f} = {t. \\<exists>t'. t = take i (f t')}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "with KoenigLemma[of \"range f\", OF False] ff"], ["proof (chain)\npicking this:\n  \\<forall>i.\n     finite {t. \\<exists>t'\\<in>range f. t = take i t'} \\<Longrightarrow>\n  \\<exists>fa.\n     strict_mono fa \\<and>\n     range fa \\<subseteq> {t. \\<exists>t'\\<in>range f. t \\<le> t'}\n  finite {take ?i2 t |t. t \\<in> range f}\n  \\<forall>i.\n     {take i t |t. t \\<in> range f} = {t. \\<exists>t'. t = take i (f t')}", "obtain f' where gg:\"strict_mono (f':: nat \\<Rightarrow> 'a event list) \\<and> \n                                            range f' \\<subseteq> {t. \\<exists>t'\\<in>range f. t \\<le> t'}\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     finite {t. \\<exists>t'\\<in>range f. t = take i t'} \\<Longrightarrow>\n  \\<exists>fa.\n     strict_mono fa \\<and>\n     range fa \\<subseteq> {t. \\<exists>t'\\<in>range f. t \\<le> t'}\n  finite {take ?i2 t |t. t \\<in> range f}\n  \\<forall>i.\n     {take i t |t. t \\<in> range f} = {t. \\<exists>t'. t = take i (f t')}\n\ngoal (1 subgoal):\n 1. (\\<And>f'.\n        strict_mono f' \\<and>\n        range f'\n        \\<subseteq> {t. \\<exists>t'\\<in>range f.\n                           t \\<le> t'} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  strict_mono f' \\<and>\n  range f' \\<subseteq> {t. \\<exists>t'\\<in>range f. t \\<le> t'}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "{"], ["proof (state)\nthis:\n  strict_mono f' \\<and>\n  range f' \\<subseteq> {t. \\<exists>t'\\<in>range f. t \\<le> t'}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "define M where \"M = {m. f' n \\<le> f m }\""], ["proof (state)\nthis:\n  M = {m. f' n \\<le> f m}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "assume \"finite M\""], ["proof (state)\nthis:\n  finite M\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "hence l1:\"finite {length (f m)|m. m \\<in> M}\""], ["proof (prove)\nusing this:\n  finite M\n\ngoal (1 subgoal):\n 1. finite {length (f m) |m. m \\<in> M}", "by simp"], ["proof (state)\nthis:\n  finite {length (f m) |m. m \\<in> M}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "obtain lm where l2:\"lm = Max {length (f m)|m. m \\<in> M}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>lm.\n        lm = Max {length (f m) |m. m \\<in> M} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  lm = Max {length (f m) |m. m \\<in> M}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "{"], ["proof (state)\nthis:\n  lm = Max {length (f m) |m. m \\<in> M}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "have \"length (f' k) \\<ge> k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<le> length (f' k)", "by(induct k, simp, metis (full_types) gg lessI less_length_mono linorder_not_le \n                                        not_less_eq_eq order_trans strict_mono_def)"], ["proof (state)\nthis:\n  k \\<le> length (f' k)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "}"], ["proof (state)\nthis:\n  ?k2 \\<le> length (f' ?k2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "with gg"], ["proof (chain)\npicking this:\n  strict_mono f' \\<and>\n  range f' \\<subseteq> {t. \\<exists>t'\\<in>range f. t \\<le> t'}\n  ?k2 \\<le> length (f' ?k2)", "obtain m where r1:\"length (f' m) > lm\""], ["proof (prove)\nusing this:\n  strict_mono f' \\<and>\n  range f' \\<subseteq> {t. \\<exists>t'\\<in>range f. t \\<le> t'}\n  ?k2 \\<le> length (f' ?k2)\n\ngoal (1 subgoal):\n 1. (\\<And>m. lm < length (f' m) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson lessI less_le_trans)"], ["proof (state)\nthis:\n  lm < length (f' m)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "from gg"], ["proof (chain)\npicking this:\n  strict_mono f' \\<and>\n  range f' \\<subseteq> {t. \\<exists>t'\\<in>range f. t \\<le> t'}", "obtain r where r2:\"f' (max m n) \\<le> f r\""], ["proof (prove)\nusing this:\n  strict_mono f' \\<and>\n  range f' \\<subseteq> {t. \\<exists>t'\\<in>range f. t \\<le> t'}\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        f' (max m n) \\<le> f r \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  f' (max m n) \\<le> f r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "with gg"], ["proof (chain)\npicking this:\n  strict_mono f' \\<and>\n  range f' \\<subseteq> {t. \\<exists>t'\\<in>range f. t \\<le> t'}\n  f' (max m n) \\<le> f r", "have r3: \"r \\<in> M\""], ["proof (prove)\nusing this:\n  strict_mono f' \\<and>\n  range f' \\<subseteq> {t. \\<exists>t'\\<in>range f. t \\<le> t'}\n  f' (max m n) \\<le> f r\n\ngoal (1 subgoal):\n 1. r \\<in> M", "by (metis (no_types, lifting) M_def max.bounded_iff mem_Collect_eq order_refl \n                                          order_trans strict_mono_less_eq)"], ["proof (state)\nthis:\n  r \\<in> M\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "with l1 l2"], ["proof (chain)\npicking this:\n  finite {length (f m) |m. m \\<in> M}\n  lm = Max {length (f m) |m. m \\<in> M}\n  r \\<in> M", "have f1:\"length (f r) \\<le> lm\""], ["proof (prove)\nusing this:\n  finite {length (f m) |m. m \\<in> M}\n  lm = Max {length (f m) |m. m \\<in> M}\n  r \\<in> M\n\ngoal (1 subgoal):\n 1. length (f r) \\<le> lm", "using Max_ge"], ["proof (prove)\nusing this:\n  finite {length (f m) |m. m \\<in> M}\n  lm = Max {length (f m) |m. m \\<in> M}\n  r \\<in> M\n  \\<lbrakk>finite ?A; ?x \\<in> ?A\\<rbrakk> \\<Longrightarrow> ?x \\<le> Max ?A\n\ngoal (1 subgoal):\n 1. length (f r) \\<le> lm", "by blast"], ["proof (state)\nthis:\n  length (f r) \\<le> lm\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "from r1 r2"], ["proof (chain)\npicking this:\n  lm < length (f' m)\n  f' (max m n) \\<le> f r", "have f2:\"length (f r) > lm\""], ["proof (prove)\nusing this:\n  lm < length (f' m)\n  f' (max m n) \\<le> f r\n\ngoal (1 subgoal):\n 1. lm < length (f r)", "by (meson dual_order.strict_trans1 gg le_length_mono max.bounded_iff order_refl \n                      strict_mono_less_eq)"], ["proof (state)\nthis:\n  lm < length (f r)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "from f1 f2"], ["proof (chain)\npicking this:\n  length (f r) \\<le> lm\n  lm < length (f r)", "have False"], ["proof (prove)\nusing this:\n  length (f r) \\<le> lm\n  lm < length (f r)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "}"], ["proof (state)\nthis:\n  finite {m. f' ?n2 \\<le> f m} \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "note ii=this"], ["proof (state)\nthis:\n  finite {m. f' ?n2 \\<le> f m} \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "{"], ["proof (state)\nthis:\n  finite {m. f' ?n2 \\<le> f m} \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "fix i n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "from ii"], ["proof (chain)\npicking this:\n  finite {m. f' ?n2 \\<le> f m} \\<Longrightarrow> False", "obtain m where jj:\"m \\<ge> n \\<and> f m \\<ge> f' i\""], ["proof (prove)\nusing this:\n  finite {m. f' ?n2 \\<le> f m} \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        n \\<le> m \\<and> f' i \\<le> f m \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis finite_nat_set_iff_bounded_le mem_Collect_eq nat_le_linear)"], ["proof (state)\nthis:\n  n \\<le> m \\<and> f' i \\<le> f m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "have kk: \"(f m) \\<in> D (Y m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f m \\<in> D (Y m)", "using f_def dd[rule_format, of m] some_eq_ex[of \"\\<lambda>t. ?S t m\"]"], ["proof (prove)\nusing this:\n  f =\n  (\\<lambda>n.\n      SOME t.\n         \\<exists>u.\n            front_tickFree u \\<and>\n            tickFree t \\<and>\n            x = trace_hide t (ev ` A) @ u \\<and> t \\<in> D (Y n))\n  \\<exists>t u.\n     front_tickFree u \\<and>\n     tickFree t \\<and> x = trace_hide t (ev ` A) @ u \\<and> t \\<in> D (Y m)\n  (\\<exists>u.\n      front_tickFree u \\<and>\n      tickFree\n       (SOME xa.\n           \\<exists>u.\n              front_tickFree u \\<and>\n              tickFree xa \\<and>\n              x = trace_hide xa (ev ` A) @ u \\<and> xa \\<in> D (Y m)) \\<and>\n      x =\n      trace_hide\n       (SOME xa.\n           \\<exists>u.\n              front_tickFree u \\<and>\n              tickFree xa \\<and>\n              x = trace_hide xa (ev ` A) @ u \\<and> xa \\<in> D (Y m))\n       (ev ` A) @\n      u \\<and>\n      (SOME xa.\n          \\<exists>u.\n             front_tickFree u \\<and>\n             tickFree xa \\<and>\n             x = trace_hide xa (ev ` A) @ u \\<and> xa \\<in> D (Y m))\n      \\<in> D (Y m)) =\n  (\\<exists>xa u.\n      front_tickFree u \\<and>\n      tickFree xa \\<and>\n      x = trace_hide xa (ev ` A) @ u \\<and> xa \\<in> D (Y m))\n\ngoal (1 subgoal):\n 1. f m \\<in> D (Y m)", "by auto"], ["proof (state)\nthis:\n  f m \\<in> D (Y m)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "with jj gg"], ["proof (chain)\npicking this:\n  n \\<le> m \\<and> f' i \\<le> f m\n  strict_mono f' \\<and>\n  range f' \\<subseteq> {t. \\<exists>t'\\<in>range f. t \\<le> t'}\n  f m \\<in> D (Y m)", "have \"(f' i) \\<in> T (Y m)\""], ["proof (prove)\nusing this:\n  n \\<le> m \\<and> f' i \\<le> f m\n  strict_mono f' \\<and>\n  range f' \\<subseteq> {t. \\<exists>t'\\<in>range f. t \\<le> t'}\n  f m \\<in> D (Y m)\n\ngoal (1 subgoal):\n 1. f' i \\<in> T (Y m)", "by (meson D_T is_processT3_ST_pref)"], ["proof (state)\nthis:\n  f' i \\<in> T (Y m)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "with jj 1(2)"], ["proof (chain)\npicking this:\n  n \\<le> m \\<and> f' i \\<le> f m\n  chain Y\n  f' i \\<in> T (Y m)", "have  \"(f' i) \\<in> T (Y n)\""], ["proof (prove)\nusing this:\n  n \\<le> m \\<and> f' i \\<le> f m\n  chain Y\n  f' i \\<in> T (Y m)\n\ngoal (1 subgoal):\n 1. f' i \\<in> T (Y n)", "using D_T le_approx2T po_class.chain_mono"], ["proof (prove)\nusing this:\n  n \\<le> m \\<and> f' i \\<le> f m\n  chain Y\n  f' i \\<in> T (Y m)\n  ?s \\<in> D ?P \\<Longrightarrow> ?s \\<in> T ?P\n  \\<lbrakk>?P \\<sqsubseteq> ?Q; ?s \\<notin> D ?P\\<rbrakk>\n  \\<Longrightarrow> (?s \\<in> T ?Q) = (?s \\<in> T ?P)\n  \\<lbrakk>chain ?Y; ?i \\<le> ?j\\<rbrakk>\n  \\<Longrightarrow> ?Y ?i \\<sqsubseteq> ?Y ?j\n\ngoal (1 subgoal):\n 1. f' i \\<in> T (Y n)", "by blast"], ["proof (state)\nthis:\n  f' i \\<in> T (Y n)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "}"], ["proof (state)\nthis:\n  f' ?i2 \\<in> T (Y ?n2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "note jj=this"], ["proof (state)\nthis:\n  f' ?i2 \\<in> T (Y ?n2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "from gg"], ["proof (chain)\npicking this:\n  strict_mono f' \\<and>\n  range f' \\<subseteq> {t. \\<exists>t'\\<in>range f. t \\<le> t'}", "have kk:\"mono (\\<lambda>n. trace_hide (f' n) (ev ` A))\""], ["proof (prove)\nusing this:\n  strict_mono f' \\<and>\n  range f' \\<subseteq> {t. \\<exists>t'\\<in>range f. t \\<le> t'}\n\ngoal (1 subgoal):\n 1. mono (\\<lambda>n. trace_hide (f' n) (ev ` A))", "unfolding strict_mono_def mono_def"], ["proof (prove)\nusing this:\n  (\\<forall>x y. x < y \\<longrightarrow> f' x < f' y) \\<and>\n  range f' \\<subseteq> {t. \\<exists>t'\\<in>range f. t \\<le> t'}\n\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       x \\<le> y \\<longrightarrow>\n       trace_hide (f' x) (ev ` A) \\<le> trace_hide (f' y) (ev ` A)", "by (metis (no_types, lifting) filter_append gg le_list_def mono_def strict_mono_mono)"], ["proof (state)\nthis:\n  mono (\\<lambda>n. trace_hide (f' n) (ev ` A))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "{"], ["proof (state)\nthis:\n  mono (\\<lambda>n. trace_hide (f' n) (ev ` A))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "from gg"], ["proof (chain)\npicking this:\n  strict_mono f' \\<and>\n  range f' \\<subseteq> {t. \\<exists>t'\\<in>range f. t \\<le> t'}", "obtain k r where \"f k = f' n @ r\""], ["proof (prove)\nusing this:\n  strict_mono f' \\<and>\n  range f' \\<subseteq> {t. \\<exists>t'\\<in>range f. t \\<le> t'}\n\ngoal (1 subgoal):\n 1. (\\<And>k r. f k = f' n @ r \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis ii le_list_def not_finite_existsD)"], ["proof (state)\nthis:\n  f k = f' n @ r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "hence \"trace_hide (f' n) (ev ` A) \\<le> x\""], ["proof (prove)\nusing this:\n  f k = f' n @ r\n\ngoal (1 subgoal):\n 1. trace_hide (f' n) (ev ` A) \\<le> x", "using f_def dd[rule_format, of k] some_eq_ex[of \"\\<lambda>t. ?S t k\"] le_list_def"], ["proof (prove)\nusing this:\n  f k = f' n @ r\n  f =\n  (\\<lambda>n.\n      SOME t.\n         \\<exists>u.\n            front_tickFree u \\<and>\n            tickFree t \\<and>\n            x = trace_hide t (ev ` A) @ u \\<and> t \\<in> D (Y n))\n  \\<exists>t u.\n     front_tickFree u \\<and>\n     tickFree t \\<and> x = trace_hide t (ev ` A) @ u \\<and> t \\<in> D (Y k)\n  (\\<exists>u.\n      front_tickFree u \\<and>\n      tickFree\n       (SOME xa.\n           \\<exists>u.\n              front_tickFree u \\<and>\n              tickFree xa \\<and>\n              x = trace_hide xa (ev ` A) @ u \\<and> xa \\<in> D (Y k)) \\<and>\n      x =\n      trace_hide\n       (SOME xa.\n           \\<exists>u.\n              front_tickFree u \\<and>\n              tickFree xa \\<and>\n              x = trace_hide xa (ev ` A) @ u \\<and> xa \\<in> D (Y k))\n       (ev ` A) @\n      u \\<and>\n      (SOME xa.\n          \\<exists>u.\n             front_tickFree u \\<and>\n             tickFree xa \\<and>\n             x = trace_hide xa (ev ` A) @ u \\<and> xa \\<in> D (Y k))\n      \\<in> D (Y k)) =\n  (\\<exists>xa u.\n      front_tickFree u \\<and>\n      tickFree xa \\<and>\n      x = trace_hide xa (ev ` A) @ u \\<and> xa \\<in> D (Y k))\n  (?s \\<le> ?t) = (\\<exists>r. ?s @ r = ?t)\n\ngoal (1 subgoal):\n 1. trace_hide (f' n) (ev ` A) \\<le> x", "by auto blast"], ["proof (state)\nthis:\n  trace_hide (f' n) (ev ` A) \\<le> x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "}"], ["proof (state)\nthis:\n  trace_hide (f' ?n2) (ev ` A) \\<le> x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "note ll=this"], ["proof (state)\nthis:\n  trace_hide (f' ?n2) (ev ` A) \\<le> x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "{"], ["proof (state)\nthis:\n  trace_hide (f' ?n2) (ev ` A) \\<le> x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "assume llll:\"\\<forall>m. \\<exists>n. trace_hide (f' n) (ev ` A) > trace_hide (f' m) (ev ` A)\""], ["proof (state)\nthis:\n  \\<forall>m.\n     \\<exists>n. trace_hide (f' m) (ev ` A) < trace_hide (f' n) (ev ` A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "hence lll:\"\\<forall>m. \\<exists>n. length (trace_hide (f' n) (ev ` A)) > length (trace_hide (f' m) (ev ` A))\""], ["proof (prove)\nusing this:\n  \\<forall>m.\n     \\<exists>n. trace_hide (f' m) (ev ` A) < trace_hide (f' n) (ev ` A)\n\ngoal (1 subgoal):\n 1. \\<forall>m.\n       \\<exists>n.\n          length (trace_hide (f' m) (ev ` A))\n          < length (trace_hide (f' n) (ev ` A))", "using less_length_mono"], ["proof (prove)\nusing this:\n  \\<forall>m.\n     \\<exists>n. trace_hide (f' m) (ev ` A) < trace_hide (f' n) (ev ` A)\n  ?s < ?t \\<Longrightarrow> length ?s < length ?t\n\ngoal (1 subgoal):\n 1. \\<forall>m.\n       \\<exists>n.\n          length (trace_hide (f' m) (ev ` A))\n          < length (trace_hide (f' n) (ev ` A))", "by blast"], ["proof (state)\nthis:\n  \\<forall>m.\n     \\<exists>n.\n        length (trace_hide (f' m) (ev ` A))\n        < length (trace_hide (f' n) (ev ` A))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "define ff where lll':\"ff = rec_nat (length (trace_hide (f' 0) (ev ` A))) \n                (\\<lambda>i t. (let n = SOME n. (length (trace_hide (f' n) (ev ` A))) > t \n                         in length (trace_hide (f' n) (ev ` A))))\""], ["proof (state)\nthis:\n  ff =\n  rec_nat (length (trace_hide (f' 0) (ev ` A)))\n   (\\<lambda>i t.\n       let n = SOME n. t < length (trace_hide (f' n) (ev ` A))\n       in length (trace_hide (f' n) (ev ` A)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "{"], ["proof (state)\nthis:\n  ff =\n  rec_nat (length (trace_hide (f' 0) (ev ` A)))\n   (\\<lambda>i t.\n       let n = SOME n. t < length (trace_hide (f' n) (ev ` A))\n       in length (trace_hide (f' n) (ev ` A)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "from lll' lll[rule_format, of n]"], ["proof (chain)\npicking this:\n  ff =\n  rec_nat (length (trace_hide (f' 0) (ev ` A)))\n   (\\<lambda>i t.\n       let n = SOME n. t < length (trace_hide (f' n) (ev ` A))\n       in length (trace_hide (f' n) (ev ` A)))\n  \\<exists>na.\n     length (trace_hide (f' n) (ev ` A))\n     < length (trace_hide (f' na) (ev ` A))", "have \"ff (Suc n) > ff n\""], ["proof (prove)\nusing this:\n  ff =\n  rec_nat (length (trace_hide (f' 0) (ev ` A)))\n   (\\<lambda>i t.\n       let n = SOME n. t < length (trace_hide (f' n) (ev ` A))\n       in length (trace_hide (f' n) (ev ` A)))\n  \\<exists>na.\n     length (trace_hide (f' n) (ev ` A))\n     < length (trace_hide (f' na) (ev ` A))\n\ngoal (1 subgoal):\n 1. ff n < ff (Suc n)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ff =\n             rec_nat (length (trace_hide (f' 0) (ev ` A)))\n              (\\<lambda>i t.\n                  length\n                   (trace_hide\n                     (f' (SOME n. t < length (trace_hide (f' n) (ev ` A))))\n                     (ev ` A)));\n     \\<exists>na.\n        length (trace_hide (f' n) (ev ` A))\n        < length (trace_hide (f' na) (ev ` A))\\<rbrakk>\n    \\<Longrightarrow> rec_nat (length (trace_hide (f' 0) (ev ` A)))\n                       (\\<lambda>i t.\n                           length\n                            (trace_hide\n                              (f' (SOME n.\nt < length (trace_hide (f' n) (ev ` A))))\n                              (ev ` A)))\n                       n\n                      < length\n                         (trace_hide\n                           (f' (SOME na.\n                                   rec_nat\n                                    (length (trace_hide (f' 0) (ev ` A)))\n                                    (\\<lambda>i t.\n  length\n   (trace_hide (f' (SOME n. t < length (trace_hide (f' n) (ev ` A))))\n     (ev ` A)))\n                                    n\n                                   < length (trace_hide (f' na) (ev ` A))))\n                           (ev ` A))", "apply (cases n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>ff =\n             rec_nat (length (trace_hide (f' 0) (ev ` A)))\n              (\\<lambda>i t.\n                  length\n                   (trace_hide\n                     (f' (SOME n. t < length (trace_hide (f' n) (ev ` A))))\n                     (ev ` A)));\n     \\<exists>na.\n        length (trace_hide (f' n) (ev ` A))\n        < length (trace_hide (f' na) (ev ` A));\n     n = 0\\<rbrakk>\n    \\<Longrightarrow> rec_nat (length (trace_hide (f' 0) (ev ` A)))\n                       (\\<lambda>i t.\n                           length\n                            (trace_hide\n                              (f' (SOME n.\nt < length (trace_hide (f' n) (ev ` A))))\n                              (ev ` A)))\n                       n\n                      < length\n                         (trace_hide\n                           (f' (SOME na.\n                                   rec_nat\n                                    (length (trace_hide (f' 0) (ev ` A)))\n                                    (\\<lambda>i t.\n  length\n   (trace_hide (f' (SOME n. t < length (trace_hide (f' n) (ev ` A))))\n     (ev ` A)))\n                                    n\n                                   < length (trace_hide (f' na) (ev ` A))))\n                           (ev ` A))\n 2. \\<And>nat.\n       \\<lbrakk>ff =\n                rec_nat (length (trace_hide (f' 0) (ev ` A)))\n                 (\\<lambda>i t.\n                     length\n                      (trace_hide\n                        (f' (SOME n.\n                                t < length (trace_hide (f' n) (ev ` A))))\n                        (ev ` A)));\n        \\<exists>na.\n           length (trace_hide (f' n) (ev ` A))\n           < length (trace_hide (f' na) (ev ` A));\n        n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> rec_nat (length (trace_hide (f' 0) (ev ` A)))\n                          (\\<lambda>i t.\n                              length\n                               (trace_hide\n                                 (f' (SOME n.\n   t < length (trace_hide (f' n) (ev ` A))))\n                                 (ev ` A)))\n                          n\n                         < length\n                            (trace_hide\n                              (f' (SOME na.\nrec_nat (length (trace_hide (f' 0) (ev ` A)))\n (\\<lambda>i t.\n     length\n      (trace_hide (f' (SOME n. t < length (trace_hide (f' n) (ev ` A))))\n        (ev ` A)))\n n\n< length (trace_hide (f' na) (ev ` A))))\n                              (ev ` A))", "apply (metis (no_types, lifting) old.nat.simps(6) someI_ex)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>ff =\n                rec_nat (length (trace_hide (f' 0) (ev ` A)))\n                 (\\<lambda>i t.\n                     length\n                      (trace_hide\n                        (f' (SOME n.\n                                t < length (trace_hide (f' n) (ev ` A))))\n                        (ev ` A)));\n        \\<exists>na.\n           length (trace_hide (f' n) (ev ` A))\n           < length (trace_hide (f' na) (ev ` A));\n        n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> rec_nat (length (trace_hide (f' 0) (ev ` A)))\n                          (\\<lambda>i t.\n                              length\n                               (trace_hide\n                                 (f' (SOME n.\n   t < length (trace_hide (f' n) (ev ` A))))\n                                 (ev ` A)))\n                          n\n                         < length\n                            (trace_hide\n                              (f' (SOME na.\nrec_nat (length (trace_hide (f' 0) (ev ` A)))\n (\\<lambda>i t.\n     length\n      (trace_hide (f' (SOME n. t < length (trace_hide (f' n) (ev ` A))))\n        (ev ` A)))\n n\n< length (trace_hide (f' na) (ev ` A))))\n                              (ev ` A))", "by (metis (no_types, lifting) llll less_length_mono old.nat.simps(7) someI_ex)"], ["proof (state)\nthis:\n  ff n < ff (Suc n)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "}"], ["proof (state)\nthis:\n  ff ?n2 < ff (Suc ?n2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "note lll''=this"], ["proof (state)\nthis:\n  ff ?n2 < ff (Suc ?n2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "with lll''"], ["proof (chain)\npicking this:\n  ff ?n2 < ff (Suc ?n2)\n  ff ?n2 < ff (Suc ?n2)", "have \"strict_mono ff\""], ["proof (prove)\nusing this:\n  ff ?n2 < ff (Suc ?n2)\n  ff ?n2 < ff (Suc ?n2)\n\ngoal (1 subgoal):\n 1. strict_mono ff", "by (simp add: lll'' lift_Suc_mono_less strict_monoI)"], ["proof (state)\nthis:\n  strict_mono ff\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "hence lll''':\"infinite(range ff)\""], ["proof (prove)\nusing this:\n  strict_mono ff\n\ngoal (1 subgoal):\n 1. infinite (range ff)", "using finite_imageD strict_mono_imp_inj_on"], ["proof (prove)\nusing this:\n  strict_mono ff\n  \\<lbrakk>finite (?f ` ?A); inj_on ?f ?A\\<rbrakk>\n  \\<Longrightarrow> finite ?A\n  strict_mono ?f \\<Longrightarrow> inj_on ?f ?A\n\ngoal (1 subgoal):\n 1. infinite (range ff)", "by auto"], ["proof (state)\nthis:\n  infinite (range ff)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "from lll lll'"], ["proof (chain)\npicking this:\n  \\<forall>m.\n     \\<exists>n.\n        length (trace_hide (f' m) (ev ` A))\n        < length (trace_hide (f' n) (ev ` A))\n  ff =\n  rec_nat (length (trace_hide (f' 0) (ev ` A)))\n   (\\<lambda>i t.\n       let n = SOME n. t < length (trace_hide (f' n) (ev ` A))\n       in length (trace_hide (f' n) (ev ` A)))", "have \"range ff \\<subseteq> range (\\<lambda>n. length (trace_hide (f' n) (ev ` A)))\""], ["proof (prove)\nusing this:\n  \\<forall>m.\n     \\<exists>n.\n        length (trace_hide (f' m) (ev ` A))\n        < length (trace_hide (f' n) (ev ` A))\n  ff =\n  rec_nat (length (trace_hide (f' 0) (ev ` A)))\n   (\\<lambda>i t.\n       let n = SOME n. t < length (trace_hide (f' n) (ev ` A))\n       in length (trace_hide (f' n) (ev ` A)))\n\ngoal (1 subgoal):\n 1. range ff\n    \\<subseteq> range (\\<lambda>n. length (trace_hide (f' n) (ev ` A)))", "by (auto, metis (mono_tags, lifting) old.nat.exhaust old.nat.simps(6) old.nat.simps(7) range_eqI)"], ["proof (state)\nthis:\n  range ff\n  \\<subseteq> range (\\<lambda>n. length (trace_hide (f' n) (ev ` A)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "with lll'''"], ["proof (chain)\npicking this:\n  infinite (range ff)\n  range ff\n  \\<subseteq> range (\\<lambda>n. length (trace_hide (f' n) (ev ` A)))", "have \"infinite (range (\\<lambda>n. length (trace_hide (f' n) (ev ` A))))\""], ["proof (prove)\nusing this:\n  infinite (range ff)\n  range ff\n  \\<subseteq> range (\\<lambda>n. length (trace_hide (f' n) (ev ` A)))\n\ngoal (1 subgoal):\n 1. infinite (range (\\<lambda>n. length (trace_hide (f' n) (ev ` A))))", "using finite_subset"], ["proof (prove)\nusing this:\n  infinite (range ff)\n  range ff\n  \\<subseteq> range (\\<lambda>n. length (trace_hide (f' n) (ev ` A)))\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. infinite (range (\\<lambda>n. length (trace_hide (f' n) (ev ` A))))", "by auto"], ["proof (state)\nthis:\n  infinite (range (\\<lambda>n. length (trace_hide (f' n) (ev ` A))))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "hence \"\\<exists>m. length (trace_hide (f' m) (ev ` A)) > length x\""], ["proof (prove)\nusing this:\n  infinite (range (\\<lambda>n. length (trace_hide (f' n) (ev ` A))))\n\ngoal (1 subgoal):\n 1. \\<exists>m. length x < length (trace_hide (f' m) (ev ` A))", "using finite_nat_set_iff_bounded_le"], ["proof (prove)\nusing this:\n  infinite (range (\\<lambda>n. length (trace_hide (f' n) (ev ` A))))\n  finite ?N = (\\<exists>m. \\<forall>n\\<in>?N. n \\<le> m)\n\ngoal (1 subgoal):\n 1. \\<exists>m. length x < length (trace_hide (f' m) (ev ` A))", "by (metis (no_types, lifting) not_less rangeE)"], ["proof (state)\nthis:\n  \\<exists>m. length x < length (trace_hide (f' m) (ev ` A))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "with ll"], ["proof (chain)\npicking this:\n  trace_hide (f' ?n2) (ev ` A) \\<le> x\n  \\<exists>m. length x < length (trace_hide (f' m) (ev ` A))", "have False"], ["proof (prove)\nusing this:\n  trace_hide (f' ?n2) (ev ` A) \\<le> x\n  \\<exists>m. length x < length (trace_hide (f' m) (ev ` A))\n\ngoal (1 subgoal):\n 1. False", "using le_length_mono not_less"], ["proof (prove)\nusing this:\n  trace_hide (f' ?n2) (ev ` A) \\<le> x\n  \\<exists>m. length x < length (trace_hide (f' m) (ev ` A))\n  ?s \\<le> ?t \\<Longrightarrow> length ?s \\<le> length ?t\n  (\\<not> ?x < ?y) = (?y \\<le> ?x)\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "}"], ["proof (state)\nthis:\n  \\<forall>m.\n     \\<exists>n.\n        trace_hide (f' m) (ev ` A)\n        < trace_hide (f' n) (ev ` A) \\<Longrightarrow>\n  False\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "then"], ["proof (chain)\npicking this:\n  \\<forall>m.\n     \\<exists>n.\n        trace_hide (f' m) (ev ` A)\n        < trace_hide (f' n) (ev ` A) \\<Longrightarrow>\n  False", "obtain m where mm:\"\\<forall>n. trace_hide (f' n) (ev ` A) \\<le> trace_hide (f' m) (ev ` A)\""], ["proof (prove)\nusing this:\n  \\<forall>m.\n     \\<exists>n.\n        trace_hide (f' m) (ev ` A)\n        < trace_hide (f' n) (ev ` A) \\<Longrightarrow>\n  False\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<forall>n.\n           trace_hide (f' n) (ev ` A)\n           \\<le> trace_hide (f' m) (ev ` A) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis (mono_tags, lifting) A kk le_cases mono_def)"], ["proof (state)\nthis:\n  \\<forall>n. trace_hide (f' n) (ev ` A) \\<le> trace_hide (f' m) (ev ` A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "with gg"], ["proof (chain)\npicking this:\n  strict_mono f' \\<and>\n  range f' \\<subseteq> {t. \\<exists>t'\\<in>range f. t \\<le> t'}\n  \\<forall>n. trace_hide (f' n) (ev ` A) \\<le> trace_hide (f' m) (ev ` A)", "obtain k where nn:\"f k \\<ge> f' m\""], ["proof (prove)\nusing this:\n  strict_mono f' \\<and>\n  range f' \\<subseteq> {t. \\<exists>t'\\<in>range f. t \\<le> t'}\n  \\<forall>n. trace_hide (f' n) (ev ` A) \\<le> trace_hide (f' m) (ev ` A)\n\ngoal (1 subgoal):\n 1. (\\<And>k. f' m \\<le> f k \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  f' m \\<le> f k\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "then"], ["proof (chain)\npicking this:\n  f' m \\<le> f k", "obtain u where oo:\"front_tickFree u \\<and> x = trace_hide (f' m) (ev ` A) @ u \\<and> tickFree (f' m)\""], ["proof (prove)\nusing this:\n  f' m \\<le> f k\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        front_tickFree u \\<and>\n        x = trace_hide (f' m) (ev ` A) @ u \\<and>\n        tickFree (f' m) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using f_def dd[rule_format, of k] some_eq_ex[of \"\\<lambda>t. ?S t k\"]"], ["proof (prove)\nusing this:\n  f' m \\<le> f k\n  f =\n  (\\<lambda>n.\n      SOME t.\n         \\<exists>u.\n            front_tickFree u \\<and>\n            tickFree t \\<and>\n            x = trace_hide t (ev ` A) @ u \\<and> t \\<in> D (Y n))\n  \\<exists>t u.\n     front_tickFree u \\<and>\n     tickFree t \\<and> x = trace_hide t (ev ` A) @ u \\<and> t \\<in> D (Y k)\n  (\\<exists>u.\n      front_tickFree u \\<and>\n      tickFree\n       (SOME xa.\n           \\<exists>u.\n              front_tickFree u \\<and>\n              tickFree xa \\<and>\n              x = trace_hide xa (ev ` A) @ u \\<and> xa \\<in> D (Y k)) \\<and>\n      x =\n      trace_hide\n       (SOME xa.\n           \\<exists>u.\n              front_tickFree u \\<and>\n              tickFree xa \\<and>\n              x = trace_hide xa (ev ` A) @ u \\<and> xa \\<in> D (Y k))\n       (ev ` A) @\n      u \\<and>\n      (SOME xa.\n          \\<exists>u.\n             front_tickFree u \\<and>\n             tickFree xa \\<and>\n             x = trace_hide xa (ev ` A) @ u \\<and> xa \\<in> D (Y k))\n      \\<in> D (Y k)) =\n  (\\<exists>xa u.\n      front_tickFree u \\<and>\n      tickFree xa \\<and>\n      x = trace_hide xa (ev ` A) @ u \\<and> xa \\<in> D (Y k))\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        front_tickFree u \\<and>\n        x = trace_hide (f' m) (ev ` A) @ u \\<and>\n        tickFree (f' m) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto, metis (no_types, lifting) contra_subsetD filter_is_subset front_tickFree_append \n                          front_tickFree_mono le_list_def ll tickFree_Nil tickFree_append \n                          tickFree_def tickFree_implies_front_tickFree)"], ["proof (state)\nthis:\n  front_tickFree u \\<and>\n  x = trace_hide (f' m) (ev ` A) @ u \\<and> tickFree (f' m)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f =\n             (\\<lambda>n.\n                 SOME t.\n                    \\<exists>u.\n                       front_tickFree u \\<and>\n                       tickFree t \\<and>\n                       x = trace_hide t (ev ` A) @ u \\<and>\n                       t \\<in> D (Y n));\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         front_tickFree u \\<and>\n                         tickFree t \\<and>\n                         x = trace_hide t (ev ` A) @ u \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                          (\\<exists>f.\n                              strict_mono f \\<and>\n                              (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                              (\\<forall>i.\n                                  trace_hide (f i) (ev ` A) =\n                                  trace_hide (f 0) (ev ` A)) \\<and>\n                              t \\<in> range f))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t u.\n       front_tickFree u \\<and>\n       tickFree t \\<and>\n       x = trace_hide t (ev ` A) @ u \\<and>\n       ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n        (\\<exists>f.\n            strict_mono f \\<and>\n            (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n            (\\<forall>i.\n                trace_hide (f i) (ev ` A) =\n                trace_hide (f 0) (ev ` A)) \\<and>\n            t \\<in> range f))", "apply(rule_tac x=\"f' m\" in exI, rule_tac x=u in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. front_tickFree u \\<and>\n    tickFree (f' m) \\<and>\n    x = trace_hide (f' m) (ev ` A) @ u \\<and>\n    ((\\<forall>x. f' m \\<in> D (Y x)) \\<or>\n     (\\<exists>f.\n         strict_mono f \\<and>\n         (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n         (\\<forall>i.\n             trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n         f' m \\<in> range f))", "apply(simp add:oo, rule disjI2, rule_tac x=\"\\<lambda>n. f' (n + m)\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. strict_mono (\\<lambda>n. f' (n + m)) \\<and>\n    (\\<forall>i x. f' (i + m) \\<in> T (Y x)) \\<and>\n    (\\<forall>i.\n        trace_hide (f' (i + m)) (ev ` A) =\n        trace_hide (f' (0 + m)) (ev ` A)) \\<and>\n    f' m \\<in> range (\\<lambda>n. f' (n + m))", "using gg jj kk mm"], ["proof (prove)\nusing this:\n  strict_mono f' \\<and>\n  range f' \\<subseteq> {t. \\<exists>t'\\<in>range f. t \\<le> t'}\n  f' ?i2 \\<in> T (Y ?n2)\n  mono (\\<lambda>n. trace_hide (f' n) (ev ` A))\n  \\<forall>n. trace_hide (f' n) (ev ` A) \\<le> trace_hide (f' m) (ev ` A)\n\ngoal (1 subgoal):\n 1. strict_mono (\\<lambda>n. f' (n + m)) \\<and>\n    (\\<forall>i x. f' (i + m) \\<in> T (Y x)) \\<and>\n    (\\<forall>i.\n        trace_hide (f' (i + m)) (ev ` A) =\n        trace_hide (f' (0 + m)) (ev ` A)) \\<and>\n    f' m \\<in> range (\\<lambda>n. f' (n + m))", "apply (auto simp add: strict_mono_def dual_order.antisym mono_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>i n. f' i \\<in> T (Y n);\n     \\<forall>x y.\n        x \\<le> y \\<longrightarrow>\n        trace_hide (f' x) (ev ` A) \\<le> trace_hide (f' y) (ev ` A);\n     \\<forall>n.\n        trace_hide (f' n) (ev ` A) \\<le> trace_hide (f' m) (ev ` A);\n     \\<forall>x y. x < y \\<longrightarrow> f' x < f' y;\n     range f' \\<subseteq> {t. \\<exists>x. t \\<le> f x}\\<rbrakk>\n    \\<Longrightarrow> f' m \\<in> range (\\<lambda>n. f' (n + m))", "by (metis plus_nat.add_0 rangeI)"], ["proof (state)\nthis:\n  \\<exists>t u.\n     front_tickFree u \\<and>\n     tickFree t \\<and>\n     x = trace_hide t (ev ` A) @ u \\<and>\n     ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n      (\\<exists>f.\n          strict_mono f \\<and>\n          (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n          (\\<forall>i.\n              trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n          t \\<in> range f))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>t u.\n     front_tickFree u \\<and>\n     tickFree t \\<and>\n     x = trace_hide t (ev ` A) @ u \\<and>\n     ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n      (\\<exists>f.\n          strict_mono f \\<and>\n          (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n          (\\<forall>i.\n              trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n          t \\<in> range f))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>xa.\n     \\<exists>t u.\n        front_tickFree u \\<and>\n        tickFree t \\<and>\n        x = trace_hide t (ev ` A) @ u \\<and>\n        t \\<in> D (Y xa) \\<Longrightarrow>\n  \\<exists>t u.\n     front_tickFree u \\<and>\n     tickFree t \\<and>\n     x = trace_hide t (ev ` A) @ u \\<and>\n     ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n      (\\<exists>f.\n          strict_mono f \\<and>\n          (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n          (\\<forall>i.\n              trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n          t \\<in> range f))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>xa.\n           \\<exists>t u.\n              front_tickFree u \\<and>\n              tickFree t \\<and>\n              x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or>\n               (\\<exists>f.\n                   strict_mono f \\<and>\n                   (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                   (\\<forall>i.\n                       trace_hide (f i) (ev ` A) =\n                       trace_hide (f 0) (ev ` A)) \\<and>\n                   t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u.\n                            front_tickFree u \\<and>\n                            tickFree t \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t u.\n       front_tickFree u \\<and>\n       tickFree t \\<and>\n       x = trace_hide t (ev ` A) @ u \\<and>\n       ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n        (\\<exists>f.\n            strict_mono f \\<and>\n            (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n            (\\<forall>i.\n                trace_hide (f i) (ev ` A) =\n                trace_hide (f 0) (ev ` A)) \\<and>\n            t \\<in> range f))", "proof (cases \"\\<exists> xa t u f. front_tickFree u \\<and> tickFree t \\<and> (\\<forall> i. f i \\<notin> D (Y xa)) \\<and> t \\<in> range f \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and> isInfHiddenRun f (Y xa) A\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>xa t u f.\n       front_tickFree u \\<and>\n       tickFree t \\<and>\n       (\\<forall>i. f i \\<notin> D (Y xa)) \\<and>\n       t \\<in> range f \\<and>\n       x = trace_hide t (ev ` A) @ u \\<and>\n       isInfHiddenRun f (Y xa) A \\<Longrightarrow>\n    \\<exists>t u.\n       front_tickFree u \\<and>\n       tickFree t \\<and>\n       x = trace_hide t (ev ` A) @ u \\<and>\n       ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n        (\\<exists>f.\n            strict_mono f \\<and>\n            (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n            (\\<forall>i.\n                trace_hide (f i) (ev ` A) =\n                trace_hide (f 0) (ev ` A)) \\<and>\n            t \\<in> range f))\n 2. \\<nexists>xa t u f.\n       front_tickFree u \\<and>\n       tickFree t \\<and>\n       (\\<forall>i. f i \\<notin> D (Y xa)) \\<and>\n       t \\<in> range f \\<and>\n       x = trace_hide t (ev ` A) @ u \\<and>\n       isInfHiddenRun f (Y xa) A \\<Longrightarrow>\n    \\<exists>t u.\n       front_tickFree u \\<and>\n       tickFree t \\<and>\n       x = trace_hide t (ev ` A) @ u \\<and>\n       ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n        (\\<exists>f.\n            strict_mono f \\<and>\n            (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n            (\\<forall>i.\n                trace_hide (f i) (ev ` A) =\n                trace_hide (f 0) (ev ` A)) \\<and>\n            t \\<in> range f))", "case True"], ["proof (state)\nthis:\n  \\<exists>xa t u f.\n     front_tickFree u \\<and>\n     tickFree t \\<and>\n     (\\<forall>i. f i \\<notin> D (Y xa)) \\<and>\n     t \\<in> range f \\<and>\n     x = trace_hide t (ev ` A) @ u \\<and> isInfHiddenRun f (Y xa) A\n\ngoal (2 subgoals):\n 1. \\<exists>xa t u f.\n       front_tickFree u \\<and>\n       tickFree t \\<and>\n       (\\<forall>i. f i \\<notin> D (Y xa)) \\<and>\n       t \\<in> range f \\<and>\n       x = trace_hide t (ev ` A) @ u \\<and>\n       isInfHiddenRun f (Y xa) A \\<Longrightarrow>\n    \\<exists>t u.\n       front_tickFree u \\<and>\n       tickFree t \\<and>\n       x = trace_hide t (ev ` A) @ u \\<and>\n       ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n        (\\<exists>f.\n            strict_mono f \\<and>\n            (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n            (\\<forall>i.\n                trace_hide (f i) (ev ` A) =\n                trace_hide (f 0) (ev ` A)) \\<and>\n            t \\<in> range f))\n 2. \\<nexists>xa t u f.\n       front_tickFree u \\<and>\n       tickFree t \\<and>\n       (\\<forall>i. f i \\<notin> D (Y xa)) \\<and>\n       t \\<in> range f \\<and>\n       x = trace_hide t (ev ` A) @ u \\<and>\n       isInfHiddenRun f (Y xa) A \\<Longrightarrow>\n    \\<exists>t u.\n       front_tickFree u \\<and>\n       tickFree t \\<and>\n       x = trace_hide t (ev ` A) @ u \\<and>\n       ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n        (\\<exists>f.\n            strict_mono f \\<and>\n            (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n            (\\<forall>i.\n                trace_hide (f i) (ev ` A) =\n                trace_hide (f 0) (ev ` A)) \\<and>\n            t \\<in> range f))", "then"], ["proof (chain)\npicking this:\n  \\<exists>xa t u f.\n     front_tickFree u \\<and>\n     tickFree t \\<and>\n     (\\<forall>i. f i \\<notin> D (Y xa)) \\<and>\n     t \\<in> range f \\<and>\n     x = trace_hide t (ev ` A) @ u \\<and> isInfHiddenRun f (Y xa) A", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>xa t u f.\n     front_tickFree u \\<and>\n     tickFree t \\<and>\n     (\\<forall>i. f i \\<notin> D (Y xa)) \\<and>\n     t \\<in> range f \\<and>\n     x = trace_hide t (ev ` A) @ u \\<and> isInfHiddenRun f (Y xa) A\n\ngoal (1 subgoal):\n 1. \\<exists>t u.\n       front_tickFree u \\<and>\n       tickFree t \\<and>\n       x = trace_hide t (ev ` A) @ u \\<and>\n       ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n        (\\<exists>f.\n            strict_mono f \\<and>\n            (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n            (\\<forall>i.\n                trace_hide (f i) (ev ` A) =\n                trace_hide (f 0) (ev ` A)) \\<and>\n            t \\<in> range f))", "using aa"], ["proof (prove)\nusing this:\n  \\<exists>xa t u f.\n     front_tickFree u \\<and>\n     tickFree t \\<and>\n     (\\<forall>i. f i \\<notin> D (Y xa)) \\<and>\n     t \\<in> range f \\<and>\n     x = trace_hide t (ev ` A) @ u \\<and> isInfHiddenRun f (Y xa) A\n  front_tickFree ?u2 \\<and>\n  tickFree ?t2 \\<and>\n  x = trace_hide ?t2 (ev ` A) @ ?u2 \\<and>\n  isInfHiddenRun ?f2 (Y ?xa2) A \\<and>\n  (\\<forall>i. ?f2 i \\<notin> D (Y ?xa2)) \\<and>\n  ?t2 \\<in> range ?f2 \\<Longrightarrow>\n  \\<exists>t u.\n     front_tickFree u \\<and>\n     tickFree t \\<and>\n     x = trace_hide t (ev ` A) @ u \\<and>\n     ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n      (\\<exists>f.\n          strict_mono f \\<and>\n          (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n          (\\<forall>i.\n              trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n          t \\<in> range f))\n\ngoal (1 subgoal):\n 1. \\<exists>t u.\n       front_tickFree u \\<and>\n       tickFree t \\<and>\n       x = trace_hide t (ev ` A) @ u \\<and>\n       ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n        (\\<exists>f.\n            strict_mono f \\<and>\n            (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n            (\\<forall>i.\n                trace_hide (f i) (ev ` A) =\n                trace_hide (f 0) (ev ` A)) \\<and>\n            t \\<in> range f))", "by blast"], ["proof (state)\nthis:\n  \\<exists>t u.\n     front_tickFree u \\<and>\n     tickFree t \\<and>\n     x = trace_hide t (ev ` A) @ u \\<and>\n     ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n      (\\<exists>f.\n          strict_mono f \\<and>\n          (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n          (\\<forall>i.\n              trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n          t \\<in> range f))\n\ngoal (1 subgoal):\n 1. \\<nexists>xa t u f.\n       front_tickFree u \\<and>\n       tickFree t \\<and>\n       (\\<forall>i. f i \\<notin> D (Y xa)) \\<and>\n       t \\<in> range f \\<and>\n       x = trace_hide t (ev ` A) @ u \\<and>\n       isInfHiddenRun f (Y xa) A \\<Longrightarrow>\n    \\<exists>t u.\n       front_tickFree u \\<and>\n       tickFree t \\<and>\n       x = trace_hide t (ev ` A) @ u \\<and>\n       ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n        (\\<exists>f.\n            strict_mono f \\<and>\n            (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n            (\\<forall>i.\n                trace_hide (f i) (ev ` A) =\n                trace_hide (f 0) (ev ` A)) \\<and>\n            t \\<in> range f))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>xa t u f.\n       front_tickFree u \\<and>\n       tickFree t \\<and>\n       (\\<forall>i. f i \\<notin> D (Y xa)) \\<and>\n       t \\<in> range f \\<and>\n       x = trace_hide t (ev ` A) @ u \\<and>\n       isInfHiddenRun f (Y xa) A \\<Longrightarrow>\n    \\<exists>t u.\n       front_tickFree u \\<and>\n       tickFree t \\<and>\n       x = trace_hide t (ev ` A) @ u \\<and>\n       ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n        (\\<exists>f.\n            strict_mono f \\<and>\n            (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n            (\\<forall>i.\n                trace_hide (f i) (ev ` A) =\n                trace_hide (f 0) (ev ` A)) \\<and>\n            t \\<in> range f))", "case False"], ["proof (state)\nthis:\n  \\<nexists>xa t u f.\n     front_tickFree u \\<and>\n     tickFree t \\<and>\n     (\\<forall>i. f i \\<notin> D (Y xa)) \\<and>\n     t \\<in> range f \\<and>\n     x = trace_hide t (ev ` A) @ u \\<and> isInfHiddenRun f (Y xa) A\n\ngoal (1 subgoal):\n 1. \\<nexists>xa t u f.\n       front_tickFree u \\<and>\n       tickFree t \\<and>\n       (\\<forall>i. f i \\<notin> D (Y xa)) \\<and>\n       t \\<in> range f \\<and>\n       x = trace_hide t (ev ` A) @ u \\<and>\n       isInfHiddenRun f (Y xa) A \\<Longrightarrow>\n    \\<exists>t u.\n       front_tickFree u \\<and>\n       tickFree t \\<and>\n       x = trace_hide t (ev ` A) @ u \\<and>\n       ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n        (\\<exists>f.\n            strict_mono f \\<and>\n            (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n            (\\<forall>i.\n                trace_hide (f i) (ev ` A) =\n                trace_hide (f 0) (ev ` A)) \\<and>\n            t \\<in> range f))", "have dd:\"\\<forall>xa. \\<exists>t u. front_tickFree u \\<and> tickFree t \\<and> x = trace_hide t (ev ` A) @ u \\<and>\n             (t \\<in> D (Y xa) \\<or> (\\<exists>f. isInfHiddenRun f (Y xa) A \\<and> (\\<exists>i. f i \\<in> D (Y xa)) \\<and> t \\<in> range f))\" \n            (is \"\\<forall>xa. ?dd xa\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>xa.\n       \\<exists>t u.\n          front_tickFree u \\<and>\n          tickFree t \\<and>\n          x = trace_hide t (ev ` A) @ u \\<and>\n          (t \\<in> D (Y xa) \\<or>\n           (\\<exists>f.\n               isInfHiddenRun f (Y xa) A \\<and>\n               (\\<exists>i. f i \\<in> D (Y xa)) \\<and> t \\<in> range f))", "proof (rule_tac allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<exists>t u.\n          front_tickFree u \\<and>\n          tickFree t \\<and>\n          x = trace_hide t (ev ` A) @ u \\<and>\n          (t \\<in> D (Y xa) \\<or>\n           (\\<exists>f.\n               isInfHiddenRun f (Y xa) A \\<and>\n               (\\<exists>i. f i \\<in> D (Y xa)) \\<and> t \\<in> range f))", "fix xa"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<exists>t u.\n          front_tickFree u \\<and>\n          tickFree t \\<and>\n          x = trace_hide t (ev ` A) @ u \\<and>\n          (t \\<in> D (Y xa) \\<or>\n           (\\<exists>f.\n               isInfHiddenRun f (Y xa) A \\<and>\n               (\\<exists>i. f i \\<in> D (Y xa)) \\<and> t \\<in> range f))", "from 1(3)"], ["proof (chain)\npicking this:\n  \\<forall>xa.\n     \\<exists>t u.\n        front_tickFree u \\<and>\n        tickFree t \\<and>\n        x = trace_hide t (ev ` A) @ u \\<and>\n        (t \\<in> D (Y xa) \\<or>\n         (\\<exists>f.\n             strict_mono f \\<and>\n             (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n             (\\<forall>i.\n                 trace_hide (f i) (ev ` A) =\n                 trace_hide (f 0) (ev ` A)) \\<and>\n             t \\<in> range f))", "obtain t u where \n              \"front_tickFree u \\<and> tickFree t \\<and> x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or> (\\<exists>f. isInfHiddenRun f (Y xa) A \\<and> t \\<in> range f))\""], ["proof (prove)\nusing this:\n  \\<forall>xa.\n     \\<exists>t u.\n        front_tickFree u \\<and>\n        tickFree t \\<and>\n        x = trace_hide t (ev ` A) @ u \\<and>\n        (t \\<in> D (Y xa) \\<or>\n         (\\<exists>f.\n             strict_mono f \\<and>\n             (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n             (\\<forall>i.\n                 trace_hide (f i) (ev ` A) =\n                 trace_hide (f 0) (ev ` A)) \\<and>\n             t \\<in> range f))\n\ngoal (1 subgoal):\n 1. (\\<And>u t.\n        front_tickFree u \\<and>\n        tickFree t \\<and>\n        x = trace_hide t (ev ` A) @ u \\<and>\n        (t \\<in> D (Y xa) \\<or>\n         (\\<exists>f.\n             isInfHiddenRun f (Y xa) A \\<and>\n             t \\<in> range f)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  front_tickFree u \\<and>\n  tickFree t \\<and>\n  x = trace_hide t (ev ` A) @ u \\<and>\n  (t \\<in> D (Y xa) \\<or>\n   (\\<exists>f. isInfHiddenRun f (Y xa) A \\<and> t \\<in> range f))\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<exists>t u.\n          front_tickFree u \\<and>\n          tickFree t \\<and>\n          x = trace_hide t (ev ` A) @ u \\<and>\n          (t \\<in> D (Y xa) \\<or>\n           (\\<exists>f.\n               isInfHiddenRun f (Y xa) A \\<and>\n               (\\<exists>i. f i \\<in> D (Y xa)) \\<and> t \\<in> range f))", "thus \"?dd xa\""], ["proof (prove)\nusing this:\n  front_tickFree u \\<and>\n  tickFree t \\<and>\n  x = trace_hide t (ev ` A) @ u \\<and>\n  (t \\<in> D (Y xa) \\<or>\n   (\\<exists>f. isInfHiddenRun f (Y xa) A \\<and> t \\<in> range f))\n\ngoal (1 subgoal):\n 1. \\<exists>t u.\n       front_tickFree u \\<and>\n       tickFree t \\<and>\n       x = trace_hide t (ev ` A) @ u \\<and>\n       (t \\<in> D (Y xa) \\<or>\n        (\\<exists>f.\n            isInfHiddenRun f (Y xa) A \\<and>\n            (\\<exists>i. f i \\<in> D (Y xa)) \\<and> t \\<in> range f))", "apply(rule_tac x=t in exI, rule_tac x=u in exI, intro conjI, simp_all, elim conjE disjE, simp_all)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>f.\n                strict_mono f \\<and>\n                (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                (\\<forall>i.\n                    trace_hide (f i) (ev ` A) =\n                    trace_hide (f 0) (ev ` A)) \\<and>\n                t \\<in> range f;\n     front_tickFree u \\<and>\n     tickFree t \\<and> x = trace_hide t (ev ` A) @ u\\<rbrakk>\n    \\<Longrightarrow> t \\<in> D (Y xa) \\<or>\n                      (\\<exists>f.\n                          strict_mono f \\<and>\n                          (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                          (\\<forall>i.\n                              trace_hide (f i) (ev ` A) =\n                              trace_hide (f 0) (ev ` A)) \\<and>\n                          (\\<exists>i. f i \\<in> D (Y xa)) \\<and>\n                          t \\<in> range f)", "using 1(1) False NT_ND chain_lemma le_approx2T"], ["proof (prove)\nusing this:\n  finite A\n  \\<nexists>xa t u f.\n     front_tickFree u \\<and>\n     tickFree t \\<and>\n     (\\<forall>i. f i \\<notin> D (Y xa)) \\<and>\n     t \\<in> range f \\<and>\n     x = trace_hide t (ev ` A) @ u \\<and> isInfHiddenRun f (Y xa) A\n  ?c \\<notin> T ?P \\<Longrightarrow> ?c \\<notin> D ?P\n  chain ?S \\<Longrightarrow>\n  ?S ?i \\<sqsubseteq> ?S ?k \\<or> ?S ?k \\<sqsubseteq> ?S ?i\n  \\<lbrakk>?P \\<sqsubseteq> ?Q; ?s \\<notin> D ?P\\<rbrakk>\n  \\<Longrightarrow> (?s \\<in> T ?Q) = (?s \\<in> T ?P)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>f.\n                strict_mono f \\<and>\n                (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                (\\<forall>i.\n                    trace_hide (f i) (ev ` A) =\n                    trace_hide (f 0) (ev ` A)) \\<and>\n                t \\<in> range f;\n     front_tickFree u \\<and>\n     tickFree t \\<and> x = trace_hide t (ev ` A) @ u\\<rbrakk>\n    \\<Longrightarrow> t \\<in> D (Y xa) \\<or>\n                      (\\<exists>f.\n                          strict_mono f \\<and>\n                          (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                          (\\<forall>i.\n                              trace_hide (f i) (ev ` A) =\n                              trace_hide (f 0) (ev ` A)) \\<and>\n                          (\\<exists>i. f i \\<in> D (Y xa)) \\<and>\n                          t \\<in> range f)", "by blast"], ["proof (state)\nthis:\n  \\<exists>t u.\n     front_tickFree u \\<and>\n     tickFree t \\<and>\n     x = trace_hide t (ev ` A) @ u \\<and>\n     (t \\<in> D (Y xa) \\<or>\n      (\\<exists>f.\n          isInfHiddenRun f (Y xa) A \\<and>\n          (\\<exists>i. f i \\<in> D (Y xa)) \\<and> t \\<in> range f))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>xa.\n     \\<exists>t u.\n        front_tickFree u \\<and>\n        tickFree t \\<and>\n        x = trace_hide t (ev ` A) @ u \\<and>\n        (t \\<in> D (Y xa) \\<or>\n         (\\<exists>f.\n             isInfHiddenRun f (Y xa) A \\<and>\n             (\\<exists>i. f i \\<in> D (Y xa)) \\<and> t \\<in> range f))\n\ngoal (1 subgoal):\n 1. \\<nexists>xa t u f.\n       front_tickFree u \\<and>\n       tickFree t \\<and>\n       (\\<forall>i. f i \\<notin> D (Y xa)) \\<and>\n       t \\<in> range f \\<and>\n       x = trace_hide t (ev ` A) @ u \\<and>\n       isInfHiddenRun f (Y xa) A \\<Longrightarrow>\n    \\<exists>t u.\n       front_tickFree u \\<and>\n       tickFree t \\<and>\n       x = trace_hide t (ev ` A) @ u \\<and>\n       ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n        (\\<exists>f.\n            strict_mono f \\<and>\n            (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n            (\\<forall>i.\n                trace_hide (f i) (ev ` A) =\n                trace_hide (f 0) (ev ` A)) \\<and>\n            t \\<in> range f))", "hence ee:\"\\<forall>xa. \\<exists>t u. front_tickFree u \\<and> tickFree t \\<and> x = trace_hide t (ev ` A) @ u \\<and> t \\<in> D (Y xa)\""], ["proof (prove)\nusing this:\n  \\<forall>xa.\n     \\<exists>t u.\n        front_tickFree u \\<and>\n        tickFree t \\<and>\n        x = trace_hide t (ev ` A) @ u \\<and>\n        (t \\<in> D (Y xa) \\<or>\n         (\\<exists>f.\n             isInfHiddenRun f (Y xa) A \\<and>\n             (\\<exists>i. f i \\<in> D (Y xa)) \\<and> t \\<in> range f))\n\ngoal (1 subgoal):\n 1. \\<forall>xa.\n       \\<exists>t u.\n          front_tickFree u \\<and>\n          tickFree t \\<and>\n          x = trace_hide t (ev ` A) @ u \\<and> t \\<in> D (Y xa)", "using bb"], ["proof (prove)\nusing this:\n  \\<forall>xa.\n     \\<exists>t u.\n        front_tickFree u \\<and>\n        tickFree t \\<and>\n        x = trace_hide t (ev ` A) @ u \\<and>\n        (t \\<in> D (Y xa) \\<or>\n         (\\<exists>f.\n             isInfHiddenRun f (Y xa) A \\<and>\n             (\\<exists>i. f i \\<in> D (Y xa)) \\<and> t \\<in> range f))\n  front_tickFree ?u2 \\<and>\n  tickFree ?t2 \\<and>\n  x = trace_hide ?t2 (ev ` A) @ ?u2 \\<and>\n  isInfHiddenRun ?f2 (Y ?xa2) A \\<and>\n  ?f2 ?j2 \\<in> D (Y ?xa2) \\<and> ?t2 \\<in> range ?f2 \\<Longrightarrow>\n  \\<exists>t u.\n     front_tickFree u \\<and>\n     tickFree t \\<and>\n     x = trace_hide t (ev ` A) @ u \\<and> t \\<in> D (Y ?xa2)\n\ngoal (1 subgoal):\n 1. \\<forall>xa.\n       \\<exists>t u.\n          front_tickFree u \\<and>\n          tickFree t \\<and>\n          x = trace_hide t (ev ` A) @ u \\<and> t \\<in> D (Y xa)", "by blast"], ["proof (state)\nthis:\n  \\<forall>xa.\n     \\<exists>t u.\n        front_tickFree u \\<and>\n        tickFree t \\<and>\n        x = trace_hide t (ev ` A) @ u \\<and> t \\<in> D (Y xa)\n\ngoal (1 subgoal):\n 1. \\<nexists>xa t u f.\n       front_tickFree u \\<and>\n       tickFree t \\<and>\n       (\\<forall>i. f i \\<notin> D (Y xa)) \\<and>\n       t \\<in> range f \\<and>\n       x = trace_hide t (ev ` A) @ u \\<and>\n       isInfHiddenRun f (Y xa) A \\<Longrightarrow>\n    \\<exists>t u.\n       front_tickFree u \\<and>\n       tickFree t \\<and>\n       x = trace_hide t (ev ` A) @ u \\<and>\n       ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n        (\\<exists>f.\n            strict_mono f \\<and>\n            (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n            (\\<forall>i.\n                trace_hide (f i) (ev ` A) =\n                trace_hide (f 0) (ev ` A)) \\<and>\n            t \\<in> range f))", "with cc"], ["proof (chain)\npicking this:\n  \\<forall>xa.\n     \\<exists>t u.\n        front_tickFree u \\<and>\n        tickFree t \\<and>\n        x = trace_hide t (ev ` A) @ u \\<and>\n        t \\<in> D (Y xa) \\<Longrightarrow>\n  \\<exists>t u.\n     front_tickFree u \\<and>\n     tickFree t \\<and>\n     x = trace_hide t (ev ` A) @ u \\<and>\n     ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n      (\\<exists>f.\n          strict_mono f \\<and>\n          (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n          (\\<forall>i.\n              trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n          t \\<in> range f))\n  \\<forall>xa.\n     \\<exists>t u.\n        front_tickFree u \\<and>\n        tickFree t \\<and>\n        x = trace_hide t (ev ` A) @ u \\<and> t \\<in> D (Y xa)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>xa.\n     \\<exists>t u.\n        front_tickFree u \\<and>\n        tickFree t \\<and>\n        x = trace_hide t (ev ` A) @ u \\<and>\n        t \\<in> D (Y xa) \\<Longrightarrow>\n  \\<exists>t u.\n     front_tickFree u \\<and>\n     tickFree t \\<and>\n     x = trace_hide t (ev ` A) @ u \\<and>\n     ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n      (\\<exists>f.\n          strict_mono f \\<and>\n          (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n          (\\<forall>i.\n              trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n          t \\<in> range f))\n  \\<forall>xa.\n     \\<exists>t u.\n        front_tickFree u \\<and>\n        tickFree t \\<and>\n        x = trace_hide t (ev ` A) @ u \\<and> t \\<in> D (Y xa)\n\ngoal (1 subgoal):\n 1. \\<exists>t u.\n       front_tickFree u \\<and>\n       tickFree t \\<and>\n       x = trace_hide t (ev ` A) @ u \\<and>\n       ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n        (\\<exists>f.\n            strict_mono f \\<and>\n            (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n            (\\<forall>i.\n                trace_hide (f i) (ev ` A) =\n                trace_hide (f 0) (ev ` A)) \\<and>\n            t \\<in> range f))", "by simp"], ["proof (state)\nthis:\n  \\<exists>t u.\n     front_tickFree u \\<and>\n     tickFree t \\<and>\n     x = trace_hide t (ev ` A) @ u \\<and>\n     ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n      (\\<exists>f.\n          strict_mono f \\<and>\n          (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n          (\\<forall>i.\n              trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n          t \\<in> range f))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>t u.\n     front_tickFree u \\<and>\n     tickFree t \\<and>\n     x = trace_hide t (ev ` A) @ u \\<and>\n     ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n      (\\<exists>f.\n          strict_mono f \\<and>\n          (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n          (\\<forall>i.\n              trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n          t \\<in> range f))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cont_hiding2 : \"finite A \\<Longrightarrow> chain Y \\<Longrightarrow> ((\\<Squnion> i. Y i) \\\\ A) = (\\<Squnion> i. (Y i \\\\ A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; chain Y\\<rbrakk>\n    \\<Longrightarrow> (\\<Squnion>i. Y i) \\ A = (\\<Squnion>i. Y i \\ A)", "proof(auto simp add:limproc_is_thelub cont_hiding1 Process_eq_spec \n                    D_hiding Ra_def F_hiding T_hiding F_LUB  D_LUB T_LUB, goal_cases)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>b x t u.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>ta ua.\n           trace_hide t (ev ` A) @ u =\n           trace_hide ta (ev ` A) @ ua \\<longrightarrow>\n           tickFree ta \\<longrightarrow>\n           front_tickFree ua \\<longrightarrow>\n           ta \\<notin> D (Y x) \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T (Y x)) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               ta \\<notin> range f);\n        front_tickFree u; tickFree t; \\<forall>x. t \\<in> D (Y x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta.\n                            trace_hide t (ev ` A) @ u =\n                            trace_hide ta (ev ` A) \\<and>\n                            (ta, b \\<union> ev ` A) \\<in> F (Y x)\n 2. \\<And>b x u f xa.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>t ua.\n           trace_hide (f xa) (ev ` A) @ u =\n           trace_hide t (ev ` A) @ ua \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree ua \\<longrightarrow>\n           t \\<notin> D (Y x) \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T (Y x)) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f);\n        front_tickFree u; tickFree (f xa); strict_mono f;\n        \\<forall>i x. f i \\<in> T (Y x);\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            trace_hide (f xa) (ev ` A) @ u =\n                            trace_hide t (ev ` A) \\<and>\n                            (t, b \\<union> ev ` A) \\<in> F (Y x)\n 3. \\<And>a b.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>x.\n           (\\<exists>t.\n               a = trace_hide t (ev ` A) \\<and>\n               (t, b \\<union> ev ` A) \\<in> F (Y x)) \\<or>\n           (\\<exists>t u.\n               front_tickFree u \\<and>\n               tickFree t \\<and>\n               a = trace_hide t (ev ` A) @ u \\<and>\n               (t \\<in> D (Y x) \\<or>\n                (\\<exists>f.\n                    strict_mono f \\<and>\n                    (\\<forall>i. f i \\<in> T (Y x)) \\<and>\n                    (\\<forall>i.\n                        trace_hide (f i) (ev ` A) =\n                        trace_hide (f 0) (ev ` A)) \\<and>\n                    t \\<in> range f)));\n        \\<forall>t u.\n           a = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           (\\<exists>x. t \\<notin> D (Y x)) \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i x. f i \\<notin> T (Y x)) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            a = trace_hide t (ev ` A) \\<and>\n                            (\\<forall>x.\n                                (t, b \\<union> ev ` A) \\<in> F (Y x))\n 4. \\<And>xa t u.\n       \\<lbrakk>finite A; chain Y; front_tickFree u; tickFree t;\n        \\<forall>x. t \\<in> D (Y x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta ua.\n                            front_tickFree ua \\<and>\n                            tickFree ta \\<and>\n                            trace_hide t (ev ` A) @ u =\n                            trace_hide ta (ev ` A) @ ua \\<and>\n                            (ta \\<in> D (Y xa) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 ta \\<in> range f))\n 5. \\<And>xa u f xb.\n       \\<lbrakk>finite A; chain Y; front_tickFree u; tickFree (f xb);\n        strict_mono f; \\<forall>i x. f i \\<in> T (Y x);\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t ua.\n                            front_tickFree ua \\<and>\n                            tickFree t \\<and>\n                            trace_hide (f xb) (ev ` A) @ u =\n                            trace_hide t (ev ` A) @ ua \\<and>\n                            (t \\<in> D (Y xa) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))\n 6. \\<And>x.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>xa.\n           \\<exists>t u.\n              front_tickFree u \\<and>\n              tickFree t \\<and>\n              x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or>\n               (\\<exists>f.\n                   strict_mono f \\<and>\n                   (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                   (\\<forall>i.\n                       trace_hide (f i) (ev ` A) =\n                       trace_hide (f 0) (ev ` A)) \\<and>\n                   t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u.\n                            front_tickFree u \\<and>\n                            tickFree t \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))", "case (1 b x t u)"], ["proof (state)\nthis:\n  finite A\n  chain Y\n  \\<forall>ta ua.\n     trace_hide t (ev ` A) @ u =\n     trace_hide ta (ev ` A) @ ua \\<longrightarrow>\n     tickFree ta \\<longrightarrow>\n     front_tickFree ua \\<longrightarrow>\n     ta \\<notin> D (Y x) \\<and>\n     (\\<forall>f.\n         strict_mono f \\<longrightarrow>\n         (\\<exists>i. f i \\<notin> T (Y x)) \\<or>\n         (\\<exists>i.\n             trace_hide (f i) (ev ` A) \\<noteq>\n             trace_hide (f 0) (ev ` A)) \\<or>\n         ta \\<notin> range f)\n  front_tickFree u\n  tickFree t\n  \\<forall>x. t \\<in> D (Y x)\n\ngoal (6 subgoals):\n 1. \\<And>b x t u.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>ta ua.\n           trace_hide t (ev ` A) @ u =\n           trace_hide ta (ev ` A) @ ua \\<longrightarrow>\n           tickFree ta \\<longrightarrow>\n           front_tickFree ua \\<longrightarrow>\n           ta \\<notin> D (Y x) \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T (Y x)) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               ta \\<notin> range f);\n        front_tickFree u; tickFree t; \\<forall>x. t \\<in> D (Y x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta.\n                            trace_hide t (ev ` A) @ u =\n                            trace_hide ta (ev ` A) \\<and>\n                            (ta, b \\<union> ev ` A) \\<in> F (Y x)\n 2. \\<And>b x u f xa.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>t ua.\n           trace_hide (f xa) (ev ` A) @ u =\n           trace_hide t (ev ` A) @ ua \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree ua \\<longrightarrow>\n           t \\<notin> D (Y x) \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T (Y x)) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f);\n        front_tickFree u; tickFree (f xa); strict_mono f;\n        \\<forall>i x. f i \\<in> T (Y x);\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            trace_hide (f xa) (ev ` A) @ u =\n                            trace_hide t (ev ` A) \\<and>\n                            (t, b \\<union> ev ` A) \\<in> F (Y x)\n 3. \\<And>a b.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>x.\n           (\\<exists>t.\n               a = trace_hide t (ev ` A) \\<and>\n               (t, b \\<union> ev ` A) \\<in> F (Y x)) \\<or>\n           (\\<exists>t u.\n               front_tickFree u \\<and>\n               tickFree t \\<and>\n               a = trace_hide t (ev ` A) @ u \\<and>\n               (t \\<in> D (Y x) \\<or>\n                (\\<exists>f.\n                    strict_mono f \\<and>\n                    (\\<forall>i. f i \\<in> T (Y x)) \\<and>\n                    (\\<forall>i.\n                        trace_hide (f i) (ev ` A) =\n                        trace_hide (f 0) (ev ` A)) \\<and>\n                    t \\<in> range f)));\n        \\<forall>t u.\n           a = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           (\\<exists>x. t \\<notin> D (Y x)) \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i x. f i \\<notin> T (Y x)) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            a = trace_hide t (ev ` A) \\<and>\n                            (\\<forall>x.\n                                (t, b \\<union> ev ` A) \\<in> F (Y x))\n 4. \\<And>xa t u.\n       \\<lbrakk>finite A; chain Y; front_tickFree u; tickFree t;\n        \\<forall>x. t \\<in> D (Y x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta ua.\n                            front_tickFree ua \\<and>\n                            tickFree ta \\<and>\n                            trace_hide t (ev ` A) @ u =\n                            trace_hide ta (ev ` A) @ ua \\<and>\n                            (ta \\<in> D (Y xa) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 ta \\<in> range f))\n 5. \\<And>xa u f xb.\n       \\<lbrakk>finite A; chain Y; front_tickFree u; tickFree (f xb);\n        strict_mono f; \\<forall>i x. f i \\<in> T (Y x);\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t ua.\n                            front_tickFree ua \\<and>\n                            tickFree t \\<and>\n                            trace_hide (f xb) (ev ` A) @ u =\n                            trace_hide t (ev ` A) @ ua \\<and>\n                            (t \\<in> D (Y xa) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))\n 6. \\<And>x.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>xa.\n           \\<exists>t u.\n              front_tickFree u \\<and>\n              tickFree t \\<and>\n              x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or>\n               (\\<exists>f.\n                   strict_mono f \\<and>\n                   (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                   (\\<forall>i.\n                       trace_hide (f i) (ev ` A) =\n                       trace_hide (f 0) (ev ` A)) \\<and>\n                   t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u.\n                            front_tickFree u \\<and>\n                            tickFree t \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))", "thus ?case"], ["proof (prove)\nusing this:\n  finite A\n  chain Y\n  \\<forall>ta ua.\n     trace_hide t (ev ` A) @ u =\n     trace_hide ta (ev ` A) @ ua \\<longrightarrow>\n     tickFree ta \\<longrightarrow>\n     front_tickFree ua \\<longrightarrow>\n     ta \\<notin> D (Y x) \\<and>\n     (\\<forall>f.\n         strict_mono f \\<longrightarrow>\n         (\\<exists>i. f i \\<notin> T (Y x)) \\<or>\n         (\\<exists>i.\n             trace_hide (f i) (ev ` A) \\<noteq>\n             trace_hide (f 0) (ev ` A)) \\<or>\n         ta \\<notin> range f)\n  front_tickFree u\n  tickFree t\n  \\<forall>x. t \\<in> D (Y x)\n\ngoal (1 subgoal):\n 1. \\<exists>ta.\n       trace_hide t (ev ` A) @ u = trace_hide ta (ev ` A) \\<and>\n       (ta, b \\<union> ev ` A) \\<in> F (Y x)", "by blast"], ["proof (state)\nthis:\n  \\<exists>ta.\n     trace_hide t (ev ` A) @ u = trace_hide ta (ev ` A) \\<and>\n     (ta, b \\<union> ev ` A) \\<in> F (Y x)\n\ngoal (5 subgoals):\n 1. \\<And>b x u f xa.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>t ua.\n           trace_hide (f xa) (ev ` A) @ u =\n           trace_hide t (ev ` A) @ ua \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree ua \\<longrightarrow>\n           t \\<notin> D (Y x) \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T (Y x)) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f);\n        front_tickFree u; tickFree (f xa); strict_mono f;\n        \\<forall>i x. f i \\<in> T (Y x);\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            trace_hide (f xa) (ev ` A) @ u =\n                            trace_hide t (ev ` A) \\<and>\n                            (t, b \\<union> ev ` A) \\<in> F (Y x)\n 2. \\<And>a b.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>x.\n           (\\<exists>t.\n               a = trace_hide t (ev ` A) \\<and>\n               (t, b \\<union> ev ` A) \\<in> F (Y x)) \\<or>\n           (\\<exists>t u.\n               front_tickFree u \\<and>\n               tickFree t \\<and>\n               a = trace_hide t (ev ` A) @ u \\<and>\n               (t \\<in> D (Y x) \\<or>\n                (\\<exists>f.\n                    strict_mono f \\<and>\n                    (\\<forall>i. f i \\<in> T (Y x)) \\<and>\n                    (\\<forall>i.\n                        trace_hide (f i) (ev ` A) =\n                        trace_hide (f 0) (ev ` A)) \\<and>\n                    t \\<in> range f)));\n        \\<forall>t u.\n           a = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           (\\<exists>x. t \\<notin> D (Y x)) \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i x. f i \\<notin> T (Y x)) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            a = trace_hide t (ev ` A) \\<and>\n                            (\\<forall>x.\n                                (t, b \\<union> ev ` A) \\<in> F (Y x))\n 3. \\<And>xa t u.\n       \\<lbrakk>finite A; chain Y; front_tickFree u; tickFree t;\n        \\<forall>x. t \\<in> D (Y x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta ua.\n                            front_tickFree ua \\<and>\n                            tickFree ta \\<and>\n                            trace_hide t (ev ` A) @ u =\n                            trace_hide ta (ev ` A) @ ua \\<and>\n                            (ta \\<in> D (Y xa) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 ta \\<in> range f))\n 4. \\<And>xa u f xb.\n       \\<lbrakk>finite A; chain Y; front_tickFree u; tickFree (f xb);\n        strict_mono f; \\<forall>i x. f i \\<in> T (Y x);\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t ua.\n                            front_tickFree ua \\<and>\n                            tickFree t \\<and>\n                            trace_hide (f xb) (ev ` A) @ u =\n                            trace_hide t (ev ` A) @ ua \\<and>\n                            (t \\<in> D (Y xa) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))\n 5. \\<And>x.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>xa.\n           \\<exists>t u.\n              front_tickFree u \\<and>\n              tickFree t \\<and>\n              x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or>\n               (\\<exists>f.\n                   strict_mono f \\<and>\n                   (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                   (\\<forall>i.\n                       trace_hide (f i) (ev ` A) =\n                       trace_hide (f 0) (ev ` A)) \\<and>\n                   t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u.\n                            front_tickFree u \\<and>\n                            tickFree t \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>b x u f xa.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>t ua.\n           trace_hide (f xa) (ev ` A) @ u =\n           trace_hide t (ev ` A) @ ua \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree ua \\<longrightarrow>\n           t \\<notin> D (Y x) \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T (Y x)) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f);\n        front_tickFree u; tickFree (f xa); strict_mono f;\n        \\<forall>i x. f i \\<in> T (Y x);\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            trace_hide (f xa) (ev ` A) @ u =\n                            trace_hide t (ev ` A) \\<and>\n                            (t, b \\<union> ev ` A) \\<in> F (Y x)\n 2. \\<And>a b.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>x.\n           (\\<exists>t.\n               a = trace_hide t (ev ` A) \\<and>\n               (t, b \\<union> ev ` A) \\<in> F (Y x)) \\<or>\n           (\\<exists>t u.\n               front_tickFree u \\<and>\n               tickFree t \\<and>\n               a = trace_hide t (ev ` A) @ u \\<and>\n               (t \\<in> D (Y x) \\<or>\n                (\\<exists>f.\n                    strict_mono f \\<and>\n                    (\\<forall>i. f i \\<in> T (Y x)) \\<and>\n                    (\\<forall>i.\n                        trace_hide (f i) (ev ` A) =\n                        trace_hide (f 0) (ev ` A)) \\<and>\n                    t \\<in> range f)));\n        \\<forall>t u.\n           a = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           (\\<exists>x. t \\<notin> D (Y x)) \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i x. f i \\<notin> T (Y x)) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            a = trace_hide t (ev ` A) \\<and>\n                            (\\<forall>x.\n                                (t, b \\<union> ev ` A) \\<in> F (Y x))\n 3. \\<And>xa t u.\n       \\<lbrakk>finite A; chain Y; front_tickFree u; tickFree t;\n        \\<forall>x. t \\<in> D (Y x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta ua.\n                            front_tickFree ua \\<and>\n                            tickFree ta \\<and>\n                            trace_hide t (ev ` A) @ u =\n                            trace_hide ta (ev ` A) @ ua \\<and>\n                            (ta \\<in> D (Y xa) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 ta \\<in> range f))\n 4. \\<And>xa u f xb.\n       \\<lbrakk>finite A; chain Y; front_tickFree u; tickFree (f xb);\n        strict_mono f; \\<forall>i x. f i \\<in> T (Y x);\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t ua.\n                            front_tickFree ua \\<and>\n                            tickFree t \\<and>\n                            trace_hide (f xb) (ev ` A) @ u =\n                            trace_hide t (ev ` A) @ ua \\<and>\n                            (t \\<in> D (Y xa) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))\n 5. \\<And>x.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>xa.\n           \\<exists>t u.\n              front_tickFree u \\<and>\n              tickFree t \\<and>\n              x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or>\n               (\\<exists>f.\n                   strict_mono f \\<and>\n                   (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                   (\\<forall>i.\n                       trace_hide (f i) (ev ` A) =\n                       trace_hide (f 0) (ev ` A)) \\<and>\n                   t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u.\n                            front_tickFree u \\<and>\n                            tickFree t \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))", "case (2 b x u f xa)"], ["proof (state)\nthis:\n  finite A\n  chain Y\n  \\<forall>t ua.\n     trace_hide (f xa) (ev ` A) @ u =\n     trace_hide t (ev ` A) @ ua \\<longrightarrow>\n     tickFree t \\<longrightarrow>\n     front_tickFree ua \\<longrightarrow>\n     t \\<notin> D (Y x) \\<and>\n     (\\<forall>f.\n         strict_mono f \\<longrightarrow>\n         (\\<exists>i. f i \\<notin> T (Y x)) \\<or>\n         (\\<exists>i.\n             trace_hide (f i) (ev ` A) \\<noteq>\n             trace_hide (f 0) (ev ` A)) \\<or>\n         t \\<notin> range f)\n  front_tickFree u\n  tickFree (f xa)\n  strict_mono f\n  \\<forall>i x. f i \\<in> T (Y x)\n  \\<forall>i. trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\n\ngoal (5 subgoals):\n 1. \\<And>b x u f xa.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>t ua.\n           trace_hide (f xa) (ev ` A) @ u =\n           trace_hide t (ev ` A) @ ua \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree ua \\<longrightarrow>\n           t \\<notin> D (Y x) \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> T (Y x)) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f);\n        front_tickFree u; tickFree (f xa); strict_mono f;\n        \\<forall>i x. f i \\<in> T (Y x);\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            trace_hide (f xa) (ev ` A) @ u =\n                            trace_hide t (ev ` A) \\<and>\n                            (t, b \\<union> ev ` A) \\<in> F (Y x)\n 2. \\<And>a b.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>x.\n           (\\<exists>t.\n               a = trace_hide t (ev ` A) \\<and>\n               (t, b \\<union> ev ` A) \\<in> F (Y x)) \\<or>\n           (\\<exists>t u.\n               front_tickFree u \\<and>\n               tickFree t \\<and>\n               a = trace_hide t (ev ` A) @ u \\<and>\n               (t \\<in> D (Y x) \\<or>\n                (\\<exists>f.\n                    strict_mono f \\<and>\n                    (\\<forall>i. f i \\<in> T (Y x)) \\<and>\n                    (\\<forall>i.\n                        trace_hide (f i) (ev ` A) =\n                        trace_hide (f 0) (ev ` A)) \\<and>\n                    t \\<in> range f)));\n        \\<forall>t u.\n           a = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           (\\<exists>x. t \\<notin> D (Y x)) \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i x. f i \\<notin> T (Y x)) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            a = trace_hide t (ev ` A) \\<and>\n                            (\\<forall>x.\n                                (t, b \\<union> ev ` A) \\<in> F (Y x))\n 3. \\<And>xa t u.\n       \\<lbrakk>finite A; chain Y; front_tickFree u; tickFree t;\n        \\<forall>x. t \\<in> D (Y x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta ua.\n                            front_tickFree ua \\<and>\n                            tickFree ta \\<and>\n                            trace_hide t (ev ` A) @ u =\n                            trace_hide ta (ev ` A) @ ua \\<and>\n                            (ta \\<in> D (Y xa) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 ta \\<in> range f))\n 4. \\<And>xa u f xb.\n       \\<lbrakk>finite A; chain Y; front_tickFree u; tickFree (f xb);\n        strict_mono f; \\<forall>i x. f i \\<in> T (Y x);\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t ua.\n                            front_tickFree ua \\<and>\n                            tickFree t \\<and>\n                            trace_hide (f xb) (ev ` A) @ u =\n                            trace_hide t (ev ` A) @ ua \\<and>\n                            (t \\<in> D (Y xa) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))\n 5. \\<And>x.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>xa.\n           \\<exists>t u.\n              front_tickFree u \\<and>\n              tickFree t \\<and>\n              x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or>\n               (\\<exists>f.\n                   strict_mono f \\<and>\n                   (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                   (\\<forall>i.\n                       trace_hide (f i) (ev ` A) =\n                       trace_hide (f 0) (ev ` A)) \\<and>\n                   t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u.\n                            front_tickFree u \\<and>\n                            tickFree t \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))", "thus ?case"], ["proof (prove)\nusing this:\n  finite A\n  chain Y\n  \\<forall>t ua.\n     trace_hide (f xa) (ev ` A) @ u =\n     trace_hide t (ev ` A) @ ua \\<longrightarrow>\n     tickFree t \\<longrightarrow>\n     front_tickFree ua \\<longrightarrow>\n     t \\<notin> D (Y x) \\<and>\n     (\\<forall>f.\n         strict_mono f \\<longrightarrow>\n         (\\<exists>i. f i \\<notin> T (Y x)) \\<or>\n         (\\<exists>i.\n             trace_hide (f i) (ev ` A) \\<noteq>\n             trace_hide (f 0) (ev ` A)) \\<or>\n         t \\<notin> range f)\n  front_tickFree u\n  tickFree (f xa)\n  strict_mono f\n  \\<forall>i x. f i \\<in> T (Y x)\n  \\<forall>i. trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       trace_hide (f xa) (ev ` A) @ u = trace_hide t (ev ` A) \\<and>\n       (t, b \\<union> ev ` A) \\<in> F (Y x)", "by blast"], ["proof (state)\nthis:\n  \\<exists>t.\n     trace_hide (f xa) (ev ` A) @ u = trace_hide t (ev ` A) \\<and>\n     (t, b \\<union> ev ` A) \\<in> F (Y x)\n\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>x.\n           (\\<exists>t.\n               a = trace_hide t (ev ` A) \\<and>\n               (t, b \\<union> ev ` A) \\<in> F (Y x)) \\<or>\n           (\\<exists>t u.\n               front_tickFree u \\<and>\n               tickFree t \\<and>\n               a = trace_hide t (ev ` A) @ u \\<and>\n               (t \\<in> D (Y x) \\<or>\n                (\\<exists>f.\n                    strict_mono f \\<and>\n                    (\\<forall>i. f i \\<in> T (Y x)) \\<and>\n                    (\\<forall>i.\n                        trace_hide (f i) (ev ` A) =\n                        trace_hide (f 0) (ev ` A)) \\<and>\n                    t \\<in> range f)));\n        \\<forall>t u.\n           a = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           (\\<exists>x. t \\<notin> D (Y x)) \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i x. f i \\<notin> T (Y x)) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            a = trace_hide t (ev ` A) \\<and>\n                            (\\<forall>x.\n                                (t, b \\<union> ev ` A) \\<in> F (Y x))\n 2. \\<And>xa t u.\n       \\<lbrakk>finite A; chain Y; front_tickFree u; tickFree t;\n        \\<forall>x. t \\<in> D (Y x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta ua.\n                            front_tickFree ua \\<and>\n                            tickFree ta \\<and>\n                            trace_hide t (ev ` A) @ u =\n                            trace_hide ta (ev ` A) @ ua \\<and>\n                            (ta \\<in> D (Y xa) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 ta \\<in> range f))\n 3. \\<And>xa u f xb.\n       \\<lbrakk>finite A; chain Y; front_tickFree u; tickFree (f xb);\n        strict_mono f; \\<forall>i x. f i \\<in> T (Y x);\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t ua.\n                            front_tickFree ua \\<and>\n                            tickFree t \\<and>\n                            trace_hide (f xb) (ev ` A) @ u =\n                            trace_hide t (ev ` A) @ ua \\<and>\n                            (t \\<in> D (Y xa) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))\n 4. \\<And>x.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>xa.\n           \\<exists>t u.\n              front_tickFree u \\<and>\n              tickFree t \\<and>\n              x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or>\n               (\\<exists>f.\n                   strict_mono f \\<and>\n                   (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                   (\\<forall>i.\n                       trace_hide (f i) (ev ` A) =\n                       trace_hide (f 0) (ev ` A)) \\<and>\n                   t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u.\n                            front_tickFree u \\<and>\n                            tickFree t \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>x.\n           (\\<exists>t.\n               a = trace_hide t (ev ` A) \\<and>\n               (t, b \\<union> ev ` A) \\<in> F (Y x)) \\<or>\n           (\\<exists>t u.\n               front_tickFree u \\<and>\n               tickFree t \\<and>\n               a = trace_hide t (ev ` A) @ u \\<and>\n               (t \\<in> D (Y x) \\<or>\n                (\\<exists>f.\n                    strict_mono f \\<and>\n                    (\\<forall>i. f i \\<in> T (Y x)) \\<and>\n                    (\\<forall>i.\n                        trace_hide (f i) (ev ` A) =\n                        trace_hide (f 0) (ev ` A)) \\<and>\n                    t \\<in> range f)));\n        \\<forall>t u.\n           a = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           (\\<exists>x. t \\<notin> D (Y x)) \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i x. f i \\<notin> T (Y x)) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            a = trace_hide t (ev ` A) \\<and>\n                            (\\<forall>x.\n                                (t, b \\<union> ev ` A) \\<in> F (Y x))\n 2. \\<And>xa t u.\n       \\<lbrakk>finite A; chain Y; front_tickFree u; tickFree t;\n        \\<forall>x. t \\<in> D (Y x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta ua.\n                            front_tickFree ua \\<and>\n                            tickFree ta \\<and>\n                            trace_hide t (ev ` A) @ u =\n                            trace_hide ta (ev ` A) @ ua \\<and>\n                            (ta \\<in> D (Y xa) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 ta \\<in> range f))\n 3. \\<And>xa u f xb.\n       \\<lbrakk>finite A; chain Y; front_tickFree u; tickFree (f xb);\n        strict_mono f; \\<forall>i x. f i \\<in> T (Y x);\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t ua.\n                            front_tickFree ua \\<and>\n                            tickFree t \\<and>\n                            trace_hide (f xb) (ev ` A) @ u =\n                            trace_hide t (ev ` A) @ ua \\<and>\n                            (t \\<in> D (Y xa) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))\n 4. \\<And>x.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>xa.\n           \\<exists>t u.\n              front_tickFree u \\<and>\n              tickFree t \\<and>\n              x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or>\n               (\\<exists>f.\n                   strict_mono f \\<and>\n                   (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                   (\\<forall>i.\n                       trace_hide (f i) (ev ` A) =\n                       trace_hide (f 0) (ev ` A)) \\<and>\n                   t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u.\n                            front_tickFree u \\<and>\n                            tickFree t \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))", "case (3 s X)"], ["proof (state)\nthis:\n  finite A\n  chain Y\n  \\<forall>x.\n     (\\<exists>t.\n         s = trace_hide t (ev ` A) \\<and>\n         (t, X \\<union> ev ` A) \\<in> F (Y x)) \\<or>\n     (\\<exists>t u.\n         front_tickFree u \\<and>\n         tickFree t \\<and>\n         s = trace_hide t (ev ` A) @ u \\<and>\n         (t \\<in> D (Y x) \\<or>\n          (\\<exists>f.\n              strict_mono f \\<and>\n              (\\<forall>i. f i \\<in> T (Y x)) \\<and>\n              (\\<forall>i.\n                  trace_hide (f i) (ev ` A) =\n                  trace_hide (f 0) (ev ` A)) \\<and>\n              t \\<in> range f)))\n  \\<forall>t u.\n     s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n     tickFree t \\<longrightarrow>\n     front_tickFree u \\<longrightarrow>\n     (\\<exists>x. t \\<notin> D (Y x)) \\<and>\n     (\\<forall>f.\n         strict_mono f \\<longrightarrow>\n         (\\<exists>i x. f i \\<notin> T (Y x)) \\<or>\n         (\\<exists>i.\n             trace_hide (f i) (ev ` A) \\<noteq>\n             trace_hide (f 0) (ev ` A)) \\<or>\n         t \\<notin> range f)\n\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>x.\n           (\\<exists>t.\n               a = trace_hide t (ev ` A) \\<and>\n               (t, b \\<union> ev ` A) \\<in> F (Y x)) \\<or>\n           (\\<exists>t u.\n               front_tickFree u \\<and>\n               tickFree t \\<and>\n               a = trace_hide t (ev ` A) @ u \\<and>\n               (t \\<in> D (Y x) \\<or>\n                (\\<exists>f.\n                    strict_mono f \\<and>\n                    (\\<forall>i. f i \\<in> T (Y x)) \\<and>\n                    (\\<forall>i.\n                        trace_hide (f i) (ev ` A) =\n                        trace_hide (f 0) (ev ` A)) \\<and>\n                    t \\<in> range f)));\n        \\<forall>t u.\n           a = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           (\\<exists>x. t \\<notin> D (Y x)) \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i x. f i \\<notin> T (Y x)) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            a = trace_hide t (ev ` A) \\<and>\n                            (\\<forall>x.\n                                (t, b \\<union> ev ` A) \\<in> F (Y x))\n 2. \\<And>xa t u.\n       \\<lbrakk>finite A; chain Y; front_tickFree u; tickFree t;\n        \\<forall>x. t \\<in> D (Y x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta ua.\n                            front_tickFree ua \\<and>\n                            tickFree ta \\<and>\n                            trace_hide t (ev ` A) @ u =\n                            trace_hide ta (ev ` A) @ ua \\<and>\n                            (ta \\<in> D (Y xa) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 ta \\<in> range f))\n 3. \\<And>xa u f xb.\n       \\<lbrakk>finite A; chain Y; front_tickFree u; tickFree (f xb);\n        strict_mono f; \\<forall>i x. f i \\<in> T (Y x);\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t ua.\n                            front_tickFree ua \\<and>\n                            tickFree t \\<and>\n                            trace_hide (f xb) (ev ` A) @ u =\n                            trace_hide t (ev ` A) @ ua \\<and>\n                            (t \\<in> D (Y xa) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))\n 4. \\<And>x.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>xa.\n           \\<exists>t u.\n              front_tickFree u \\<and>\n              tickFree t \\<and>\n              x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or>\n               (\\<exists>f.\n                   strict_mono f \\<and>\n                   (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                   (\\<forall>i.\n                       trace_hide (f i) (ev ` A) =\n                       trace_hide (f 0) (ev ` A)) \\<and>\n                   t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u.\n                            front_tickFree u \\<and>\n                            tickFree t \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))", "hence \"s \\<notin> D ((\\<Squnion> i. Y i) \\\\ A)\""], ["proof (prove)\nusing this:\n  finite A\n  chain Y\n  \\<forall>x.\n     (\\<exists>t.\n         s = trace_hide t (ev ` A) \\<and>\n         (t, X \\<union> ev ` A) \\<in> F (Y x)) \\<or>\n     (\\<exists>t u.\n         front_tickFree u \\<and>\n         tickFree t \\<and>\n         s = trace_hide t (ev ` A) @ u \\<and>\n         (t \\<in> D (Y x) \\<or>\n          (\\<exists>f.\n              strict_mono f \\<and>\n              (\\<forall>i. f i \\<in> T (Y x)) \\<and>\n              (\\<forall>i.\n                  trace_hide (f i) (ev ` A) =\n                  trace_hide (f 0) (ev ` A)) \\<and>\n              t \\<in> range f)))\n  \\<forall>t u.\n     s = trace_hide t (ev ` A) @ u \\<longrightarrow>\n     tickFree t \\<longrightarrow>\n     front_tickFree u \\<longrightarrow>\n     (\\<exists>x. t \\<notin> D (Y x)) \\<and>\n     (\\<forall>f.\n         strict_mono f \\<longrightarrow>\n         (\\<exists>i x. f i \\<notin> T (Y x)) \\<or>\n         (\\<exists>i.\n             trace_hide (f i) (ev ` A) \\<noteq>\n             trace_hide (f 0) (ev ` A)) \\<or>\n         t \\<notin> range f)\n\ngoal (1 subgoal):\n 1. s \\<notin> D ((\\<Squnion>i. Y i) \\ A)", "by (simp add:limproc_is_thelub cont_hiding1 F_LUB  D_LUB T_LUB D_hiding)"], ["proof (state)\nthis:\n  s \\<notin> D ((\\<Squnion>i. Y i) \\ A)\n\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>x.\n           (\\<exists>t.\n               a = trace_hide t (ev ` A) \\<and>\n               (t, b \\<union> ev ` A) \\<in> F (Y x)) \\<or>\n           (\\<exists>t u.\n               front_tickFree u \\<and>\n               tickFree t \\<and>\n               a = trace_hide t (ev ` A) @ u \\<and>\n               (t \\<in> D (Y x) \\<or>\n                (\\<exists>f.\n                    strict_mono f \\<and>\n                    (\\<forall>i. f i \\<in> T (Y x)) \\<and>\n                    (\\<forall>i.\n                        trace_hide (f i) (ev ` A) =\n                        trace_hide (f 0) (ev ` A)) \\<and>\n                    t \\<in> range f)));\n        \\<forall>t u.\n           a = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           (\\<exists>x. t \\<notin> D (Y x)) \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i x. f i \\<notin> T (Y x)) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            a = trace_hide t (ev ` A) \\<and>\n                            (\\<forall>x.\n                                (t, b \\<union> ev ` A) \\<in> F (Y x))\n 2. \\<And>xa t u.\n       \\<lbrakk>finite A; chain Y; front_tickFree u; tickFree t;\n        \\<forall>x. t \\<in> D (Y x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta ua.\n                            front_tickFree ua \\<and>\n                            tickFree ta \\<and>\n                            trace_hide t (ev ` A) @ u =\n                            trace_hide ta (ev ` A) @ ua \\<and>\n                            (ta \\<in> D (Y xa) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 ta \\<in> range f))\n 3. \\<And>xa u f xb.\n       \\<lbrakk>finite A; chain Y; front_tickFree u; tickFree (f xb);\n        strict_mono f; \\<forall>i x. f i \\<in> T (Y x);\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t ua.\n                            front_tickFree ua \\<and>\n                            tickFree t \\<and>\n                            trace_hide (f xb) (ev ` A) @ u =\n                            trace_hide t (ev ` A) @ ua \\<and>\n                            (t \\<in> D (Y xa) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))\n 4. \\<And>x.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>xa.\n           \\<exists>t u.\n              front_tickFree u \\<and>\n              tickFree t \\<and>\n              x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or>\n               (\\<exists>f.\n                   strict_mono f \\<and>\n                   (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                   (\\<forall>i.\n                       trace_hide (f i) (ev ` A) =\n                       trace_hide (f 0) (ev ` A)) \\<and>\n                   t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u.\n                            front_tickFree u \\<and>\n                            tickFree t \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))", "with 3(1,2)"], ["proof (chain)\npicking this:\n  finite A\n  chain Y\n  s \\<notin> D ((\\<Squnion>i. Y i) \\ A)", "obtain n where a:\"s \\<notin> D (Y n \\\\ A)\""], ["proof (prove)\nusing this:\n  finite A\n  chain Y\n  s \\<notin> D ((\\<Squnion>i. Y i) \\ A)\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        s \\<notin> D (Y n \\ A) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis (no_types, lifting) D_LUB_2 div_hiding_lub subsetCE limproc_is_thelub cont_hiding1)"], ["proof (state)\nthis:\n  s \\<notin> D (Y n \\ A)\n\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>x.\n           (\\<exists>t.\n               a = trace_hide t (ev ` A) \\<and>\n               (t, b \\<union> ev ` A) \\<in> F (Y x)) \\<or>\n           (\\<exists>t u.\n               front_tickFree u \\<and>\n               tickFree t \\<and>\n               a = trace_hide t (ev ` A) @ u \\<and>\n               (t \\<in> D (Y x) \\<or>\n                (\\<exists>f.\n                    strict_mono f \\<and>\n                    (\\<forall>i. f i \\<in> T (Y x)) \\<and>\n                    (\\<forall>i.\n                        trace_hide (f i) (ev ` A) =\n                        trace_hide (f 0) (ev ` A)) \\<and>\n                    t \\<in> range f)));\n        \\<forall>t u.\n           a = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           (\\<exists>x. t \\<notin> D (Y x)) \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i x. f i \\<notin> T (Y x)) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            a = trace_hide t (ev ` A) \\<and>\n                            (\\<forall>x.\n                                (t, b \\<union> ev ` A) \\<in> F (Y x))\n 2. \\<And>xa t u.\n       \\<lbrakk>finite A; chain Y; front_tickFree u; tickFree t;\n        \\<forall>x. t \\<in> D (Y x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta ua.\n                            front_tickFree ua \\<and>\n                            tickFree ta \\<and>\n                            trace_hide t (ev ` A) @ u =\n                            trace_hide ta (ev ` A) @ ua \\<and>\n                            (ta \\<in> D (Y xa) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 ta \\<in> range f))\n 3. \\<And>xa u f xb.\n       \\<lbrakk>finite A; chain Y; front_tickFree u; tickFree (f xb);\n        strict_mono f; \\<forall>i x. f i \\<in> T (Y x);\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t ua.\n                            front_tickFree ua \\<and>\n                            tickFree t \\<and>\n                            trace_hide (f xb) (ev ` A) @ u =\n                            trace_hide t (ev ` A) @ ua \\<and>\n                            (t \\<in> D (Y xa) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))\n 4. \\<And>x.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>xa.\n           \\<exists>t u.\n              front_tickFree u \\<and>\n              tickFree t \\<and>\n              x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or>\n               (\\<exists>f.\n                   strict_mono f \\<and>\n                   (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                   (\\<forall>i.\n                       trace_hide (f i) (ev ` A) =\n                       trace_hide (f 0) (ev ` A)) \\<and>\n                   t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u.\n                            front_tickFree u \\<and>\n                            tickFree t \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))", "with 3(3)"], ["proof (chain)\npicking this:\n  \\<forall>x.\n     (\\<exists>t.\n         s = trace_hide t (ev ` A) \\<and>\n         (t, X \\<union> ev ` A) \\<in> F (Y x)) \\<or>\n     (\\<exists>t u.\n         front_tickFree u \\<and>\n         tickFree t \\<and>\n         s = trace_hide t (ev ` A) @ u \\<and>\n         (t \\<in> D (Y x) \\<or>\n          (\\<exists>f.\n              strict_mono f \\<and>\n              (\\<forall>i. f i \\<in> T (Y x)) \\<and>\n              (\\<forall>i.\n                  trace_hide (f i) (ev ` A) =\n                  trace_hide (f 0) (ev ` A)) \\<and>\n              t \\<in> range f)))\n  s \\<notin> D (Y n \\ A)", "obtain t where b:\"s = trace_hide t (ev ` A) \\<and> (t, X \\<union> ev ` A) \\<in> F (Y n)\""], ["proof (prove)\nusing this:\n  \\<forall>x.\n     (\\<exists>t.\n         s = trace_hide t (ev ` A) \\<and>\n         (t, X \\<union> ev ` A) \\<in> F (Y x)) \\<or>\n     (\\<exists>t u.\n         front_tickFree u \\<and>\n         tickFree t \\<and>\n         s = trace_hide t (ev ` A) @ u \\<and>\n         (t \\<in> D (Y x) \\<or>\n          (\\<exists>f.\n              strict_mono f \\<and>\n              (\\<forall>i. f i \\<in> T (Y x)) \\<and>\n              (\\<forall>i.\n                  trace_hide (f i) (ev ` A) =\n                  trace_hide (f 0) (ev ` A)) \\<and>\n              t \\<in> range f)))\n  s \\<notin> D (Y n \\ A)\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        s = trace_hide t (ev ` A) \\<and>\n        (t, X \\<union> ev ` A) \\<in> F (Y n) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding D_hiding"], ["proof (prove)\nusing this:\n  \\<forall>x.\n     (\\<exists>t.\n         s = trace_hide t (ev ` A) \\<and>\n         (t, X \\<union> ev ` A) \\<in> F (Y x)) \\<or>\n     (\\<exists>t u.\n         front_tickFree u \\<and>\n         tickFree t \\<and>\n         s = trace_hide t (ev ` A) @ u \\<and>\n         (t \\<in> D (Y x) \\<or>\n          (\\<exists>f.\n              strict_mono f \\<and>\n              (\\<forall>i. f i \\<in> T (Y x)) \\<and>\n              (\\<forall>i.\n                  trace_hide (f i) (ev ` A) =\n                  trace_hide (f 0) (ev ` A)) \\<and>\n              t \\<in> range f)))\n  s \\<notin> div_hide (Y n) A\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        s = trace_hide t (ev ` A) \\<and>\n        (t, X \\<union> ev ` A) \\<in> F (Y n) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  s = trace_hide t (ev ` A) \\<and> (t, X \\<union> ev ` A) \\<in> F (Y n)\n\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>x.\n           (\\<exists>t.\n               a = trace_hide t (ev ` A) \\<and>\n               (t, b \\<union> ev ` A) \\<in> F (Y x)) \\<or>\n           (\\<exists>t u.\n               front_tickFree u \\<and>\n               tickFree t \\<and>\n               a = trace_hide t (ev ` A) @ u \\<and>\n               (t \\<in> D (Y x) \\<or>\n                (\\<exists>f.\n                    strict_mono f \\<and>\n                    (\\<forall>i. f i \\<in> T (Y x)) \\<and>\n                    (\\<forall>i.\n                        trace_hide (f i) (ev ` A) =\n                        trace_hide (f 0) (ev ` A)) \\<and>\n                    t \\<in> range f)));\n        \\<forall>t u.\n           a = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           (\\<exists>x. t \\<notin> D (Y x)) \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i x. f i \\<notin> T (Y x)) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            a = trace_hide t (ev ` A) \\<and>\n                            (\\<forall>x.\n                                (t, b \\<union> ev ` A) \\<in> F (Y x))\n 2. \\<And>xa t u.\n       \\<lbrakk>finite A; chain Y; front_tickFree u; tickFree t;\n        \\<forall>x. t \\<in> D (Y x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta ua.\n                            front_tickFree ua \\<and>\n                            tickFree ta \\<and>\n                            trace_hide t (ev ` A) @ u =\n                            trace_hide ta (ev ` A) @ ua \\<and>\n                            (ta \\<in> D (Y xa) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 ta \\<in> range f))\n 3. \\<And>xa u f xb.\n       \\<lbrakk>finite A; chain Y; front_tickFree u; tickFree (f xb);\n        strict_mono f; \\<forall>i x. f i \\<in> T (Y x);\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t ua.\n                            front_tickFree ua \\<and>\n                            tickFree t \\<and>\n                            trace_hide (f xb) (ev ` A) @ u =\n                            trace_hide t (ev ` A) @ ua \\<and>\n                            (t \\<in> D (Y xa) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))\n 4. \\<And>x.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>xa.\n           \\<exists>t u.\n              front_tickFree u \\<and>\n              tickFree t \\<and>\n              x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or>\n               (\\<exists>f.\n                   strict_mono f \\<and>\n                   (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                   (\\<forall>i.\n                       trace_hide (f i) (ev ` A) =\n                       trace_hide (f 0) (ev ` A)) \\<and>\n                   t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u.\n                            front_tickFree u \\<and>\n                            tickFree t \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))", "hence c:\"front_tickFree t\""], ["proof (prove)\nusing this:\n  s = trace_hide t (ev ` A) \\<and> (t, X \\<union> ev ` A) \\<in> F (Y n)\n\ngoal (1 subgoal):\n 1. front_tickFree t", "using is_processT2"], ["proof (prove)\nusing this:\n  s = trace_hide t (ev ` A) \\<and> (t, X \\<union> ev ` A) \\<in> F (Y n)\n  \\<forall>s X. (s, X) \\<in> F ?P \\<longrightarrow> front_tickFree s\n\ngoal (1 subgoal):\n 1. front_tickFree t", "by blast"], ["proof (state)\nthis:\n  front_tickFree t\n\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>x.\n           (\\<exists>t.\n               a = trace_hide t (ev ` A) \\<and>\n               (t, b \\<union> ev ` A) \\<in> F (Y x)) \\<or>\n           (\\<exists>t u.\n               front_tickFree u \\<and>\n               tickFree t \\<and>\n               a = trace_hide t (ev ` A) @ u \\<and>\n               (t \\<in> D (Y x) \\<or>\n                (\\<exists>f.\n                    strict_mono f \\<and>\n                    (\\<forall>i. f i \\<in> T (Y x)) \\<and>\n                    (\\<forall>i.\n                        trace_hide (f i) (ev ` A) =\n                        trace_hide (f 0) (ev ` A)) \\<and>\n                    t \\<in> range f)));\n        \\<forall>t u.\n           a = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           (\\<exists>x. t \\<notin> D (Y x)) \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i x. f i \\<notin> T (Y x)) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            a = trace_hide t (ev ` A) \\<and>\n                            (\\<forall>x.\n                                (t, b \\<union> ev ` A) \\<in> F (Y x))\n 2. \\<And>xa t u.\n       \\<lbrakk>finite A; chain Y; front_tickFree u; tickFree t;\n        \\<forall>x. t \\<in> D (Y x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta ua.\n                            front_tickFree ua \\<and>\n                            tickFree ta \\<and>\n                            trace_hide t (ev ` A) @ u =\n                            trace_hide ta (ev ` A) @ ua \\<and>\n                            (ta \\<in> D (Y xa) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 ta \\<in> range f))\n 3. \\<And>xa u f xb.\n       \\<lbrakk>finite A; chain Y; front_tickFree u; tickFree (f xb);\n        strict_mono f; \\<forall>i x. f i \\<in> T (Y x);\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t ua.\n                            front_tickFree ua \\<and>\n                            tickFree t \\<and>\n                            trace_hide (f xb) (ev ` A) @ u =\n                            trace_hide t (ev ` A) @ ua \\<and>\n                            (t \\<in> D (Y xa) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))\n 4. \\<And>x.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>xa.\n           \\<exists>t u.\n              front_tickFree u \\<and>\n              tickFree t \\<and>\n              x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or>\n               (\\<exists>f.\n                   strict_mono f \\<and>\n                   (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                   (\\<forall>i.\n                       trace_hide (f i) (ev ` A) =\n                       trace_hide (f 0) (ev ` A)) \\<and>\n                   t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u.\n                            front_tickFree u \\<and>\n                            tickFree t \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))", "have d:\"t \\<notin> D(Y n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<notin> D (Y n)", "proof(cases \"tickFree t\")"], ["proof (state)\ngoal (2 subgoals):\n 1. tickFree t \\<Longrightarrow> t \\<notin> D (Y n)\n 2. \\<not> tickFree t \\<Longrightarrow> t \\<notin> D (Y n)", "case True"], ["proof (state)\nthis:\n  tickFree t\n\ngoal (2 subgoals):\n 1. tickFree t \\<Longrightarrow> t \\<notin> D (Y n)\n 2. \\<not> tickFree t \\<Longrightarrow> t \\<notin> D (Y n)", "with a b"], ["proof (chain)\npicking this:\n  s \\<notin> D (Y n \\ A)\n  s = trace_hide t (ev ` A) \\<and> (t, X \\<union> ev ` A) \\<in> F (Y n)\n  tickFree t", "show ?thesis"], ["proof (prove)\nusing this:\n  s \\<notin> D (Y n \\ A)\n  s = trace_hide t (ev ` A) \\<and> (t, X \\<union> ev ` A) \\<in> F (Y n)\n  tickFree t\n\ngoal (1 subgoal):\n 1. t \\<notin> D (Y n)", "using front_tickFree_Nil"], ["proof (prove)\nusing this:\n  s \\<notin> D (Y n \\ A)\n  s = trace_hide t (ev ` A) \\<and> (t, X \\<union> ev ` A) \\<in> F (Y n)\n  tickFree t\n  front_tickFree []\n\ngoal (1 subgoal):\n 1. t \\<notin> D (Y n)", "by (simp add:D_hiding)"], ["proof (state)\nthis:\n  t \\<notin> D (Y n)\n\ngoal (1 subgoal):\n 1. \\<not> tickFree t \\<Longrightarrow> t \\<notin> D (Y n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> tickFree t \\<Longrightarrow> t \\<notin> D (Y n)", "case False"], ["proof (state)\nthis:\n  \\<not> tickFree t\n\ngoal (1 subgoal):\n 1. \\<not> tickFree t \\<Longrightarrow> t \\<notin> D (Y n)", "with c"], ["proof (chain)\npicking this:\n  front_tickFree t\n  \\<not> tickFree t", "obtain t' where \"t = t'@[tick]\""], ["proof (prove)\nusing this:\n  front_tickFree t\n  \\<not> tickFree t\n\ngoal (1 subgoal):\n 1. (\\<And>t'. t = t' @ [tick] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using nonTickFree_n_frontTickFree"], ["proof (prove)\nusing this:\n  front_tickFree t\n  \\<not> tickFree t\n  \\<lbrakk>\\<not> tickFree ?s; front_tickFree ?s\\<rbrakk>\n  \\<Longrightarrow> \\<exists>t. ?s = t @ [tick]\n\ngoal (1 subgoal):\n 1. (\\<And>t'. t = t' @ [tick] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  t = t' @ [tick]\n\ngoal (1 subgoal):\n 1. \\<not> tickFree t \\<Longrightarrow> t \\<notin> D (Y n)", "with a b"], ["proof (chain)\npicking this:\n  s \\<notin> D (Y n \\ A)\n  s = trace_hide t (ev ` A) \\<and> (t, X \\<union> ev ` A) \\<in> F (Y n)\n  t = t' @ [tick]", "show ?thesis"], ["proof (prove)\nusing this:\n  s \\<notin> D (Y n \\ A)\n  s = trace_hide t (ev ` A) \\<and> (t, X \\<union> ev ` A) \\<in> F (Y n)\n  t = t' @ [tick]\n\ngoal (1 subgoal):\n 1. t \\<notin> D (Y n)", "apply(simp add:D_hiding, erule_tac x=t' in allE, erule_tac x=\"[tick]\" in allE, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(t' @ [tick], X \\<union> ev ` A) \\<in> F (Y n);\n     trace_hide t' (ev ` A) @\n     (if tick \\<notin> ev ` A then tick # trace_hide [] (ev ` A)\n      else trace_hide [] (ev ` A))\n     \\<notin> D (Y n \\ A);\n     (if tick \\<notin> ev ` A then tick # trace_hide [] (ev ` A)\n      else trace_hide [] (ev ` A)) =\n     [tick] \\<longrightarrow>\n     tickFree t' \\<longrightarrow>\n     t' \\<notin> D (Y n) \\<and>\n     (\\<forall>f.\n         strict_mono f \\<longrightarrow>\n         (\\<exists>i. f i \\<notin> T (Y n)) \\<or>\n         (\\<exists>i.\n             trace_hide (f i) (ev ` A) \\<noteq>\n             trace_hide (f 0) (ev ` A)) \\<or>\n         t' \\<notin> range f);\n     s =\n     trace_hide t' (ev ` A) @\n     (if tick \\<notin> ev ` A then tick # trace_hide [] (ev ` A)\n      else trace_hide [] (ev ` A));\n     t = t' @ [tick]\\<rbrakk>\n    \\<Longrightarrow> t' @ [tick] \\<notin> D (Y n)", "by (metis event.distinct(1) filter.simps(1) front_tickFree_implies_tickFree imageE is_processT)"], ["proof (state)\nthis:\n  t \\<notin> D (Y n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  t \\<notin> D (Y n)\n\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>x.\n           (\\<exists>t.\n               a = trace_hide t (ev ` A) \\<and>\n               (t, b \\<union> ev ` A) \\<in> F (Y x)) \\<or>\n           (\\<exists>t u.\n               front_tickFree u \\<and>\n               tickFree t \\<and>\n               a = trace_hide t (ev ` A) @ u \\<and>\n               (t \\<in> D (Y x) \\<or>\n                (\\<exists>f.\n                    strict_mono f \\<and>\n                    (\\<forall>i. f i \\<in> T (Y x)) \\<and>\n                    (\\<forall>i.\n                        trace_hide (f i) (ev ` A) =\n                        trace_hide (f 0) (ev ` A)) \\<and>\n                    t \\<in> range f)));\n        \\<forall>t u.\n           a = trace_hide t (ev ` A) @ u \\<longrightarrow>\n           tickFree t \\<longrightarrow>\n           front_tickFree u \\<longrightarrow>\n           (\\<exists>x. t \\<notin> D (Y x)) \\<and>\n           (\\<forall>f.\n               strict_mono f \\<longrightarrow>\n               (\\<exists>i x. f i \\<notin> T (Y x)) \\<or>\n               (\\<exists>i.\n                   trace_hide (f i) (ev ` A) \\<noteq>\n                   trace_hide (f 0) (ev ` A)) \\<or>\n               t \\<notin> range f)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            a = trace_hide t (ev ` A) \\<and>\n                            (\\<forall>x.\n                                (t, b \\<union> ev ` A) \\<in> F (Y x))\n 2. \\<And>xa t u.\n       \\<lbrakk>finite A; chain Y; front_tickFree u; tickFree t;\n        \\<forall>x. t \\<in> D (Y x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta ua.\n                            front_tickFree ua \\<and>\n                            tickFree ta \\<and>\n                            trace_hide t (ev ` A) @ u =\n                            trace_hide ta (ev ` A) @ ua \\<and>\n                            (ta \\<in> D (Y xa) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 ta \\<in> range f))\n 3. \\<And>xa u f xb.\n       \\<lbrakk>finite A; chain Y; front_tickFree u; tickFree (f xb);\n        strict_mono f; \\<forall>i x. f i \\<in> T (Y x);\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t ua.\n                            front_tickFree ua \\<and>\n                            tickFree t \\<and>\n                            trace_hide (f xb) (ev ` A) @ u =\n                            trace_hide t (ev ` A) @ ua \\<and>\n                            (t \\<in> D (Y xa) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))\n 4. \\<And>x.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>xa.\n           \\<exists>t u.\n              front_tickFree u \\<and>\n              tickFree t \\<and>\n              x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or>\n               (\\<exists>f.\n                   strict_mono f \\<and>\n                   (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                   (\\<forall>i.\n                       trace_hide (f i) (ev ` A) =\n                       trace_hide (f 0) (ev ` A)) \\<and>\n                   t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u.\n                            front_tickFree u \\<and>\n                            tickFree t \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))", "with b"], ["proof (chain)\npicking this:\n  s = trace_hide t (ev ` A) \\<and> (t, X \\<union> ev ` A) \\<in> F (Y n)\n  t \\<notin> D (Y n)", "show ?case"], ["proof (prove)\nusing this:\n  s = trace_hide t (ev ` A) \\<and> (t, X \\<union> ev ` A) \\<in> F (Y n)\n  t \\<notin> D (Y n)\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       s = trace_hide t (ev ` A) \\<and>\n       (\\<forall>x. (t, X \\<union> ev ` A) \\<in> F (Y x))", "using 3(2) NF_ND chain_lemma proc_ord2a"], ["proof (prove)\nusing this:\n  s = trace_hide t (ev ` A) \\<and> (t, X \\<union> ev ` A) \\<in> F (Y n)\n  t \\<notin> D (Y n)\n  chain Y\n  (?s, ?X) \\<notin> F ?P \\<Longrightarrow> ?s \\<notin> D ?P\n  chain ?S \\<Longrightarrow>\n  ?S ?i \\<sqsubseteq> ?S ?k \\<or> ?S ?k \\<sqsubseteq> ?S ?i\n  \\<lbrakk>?P \\<sqsubseteq> ?Q; ?s \\<notin> D ?P\\<rbrakk>\n  \\<Longrightarrow> ((?s, ?X) \\<in> F ?P) = ((?s, ?X) \\<in> F ?Q)\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       s = trace_hide t (ev ` A) \\<and>\n       (\\<forall>x. (t, X \\<union> ev ` A) \\<in> F (Y x))", "by blast"], ["proof (state)\nthis:\n  \\<exists>t.\n     s = trace_hide t (ev ` A) \\<and>\n     (\\<forall>x. (t, X \\<union> ev ` A) \\<in> F (Y x))\n\ngoal (3 subgoals):\n 1. \\<And>xa t u.\n       \\<lbrakk>finite A; chain Y; front_tickFree u; tickFree t;\n        \\<forall>x. t \\<in> D (Y x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta ua.\n                            front_tickFree ua \\<and>\n                            tickFree ta \\<and>\n                            trace_hide t (ev ` A) @ u =\n                            trace_hide ta (ev ` A) @ ua \\<and>\n                            (ta \\<in> D (Y xa) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 ta \\<in> range f))\n 2. \\<And>xa u f xb.\n       \\<lbrakk>finite A; chain Y; front_tickFree u; tickFree (f xb);\n        strict_mono f; \\<forall>i x. f i \\<in> T (Y x);\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t ua.\n                            front_tickFree ua \\<and>\n                            tickFree t \\<and>\n                            trace_hide (f xb) (ev ` A) @ u =\n                            trace_hide t (ev ` A) @ ua \\<and>\n                            (t \\<in> D (Y xa) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))\n 3. \\<And>x.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>xa.\n           \\<exists>t u.\n              front_tickFree u \\<and>\n              tickFree t \\<and>\n              x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or>\n               (\\<exists>f.\n                   strict_mono f \\<and>\n                   (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                   (\\<forall>i.\n                       trace_hide (f i) (ev ` A) =\n                       trace_hide (f 0) (ev ` A)) \\<and>\n                   t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u.\n                            front_tickFree u \\<and>\n                            tickFree t \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>xa t u.\n       \\<lbrakk>finite A; chain Y; front_tickFree u; tickFree t;\n        \\<forall>x. t \\<in> D (Y x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta ua.\n                            front_tickFree ua \\<and>\n                            tickFree ta \\<and>\n                            trace_hide t (ev ` A) @ u =\n                            trace_hide ta (ev ` A) @ ua \\<and>\n                            (ta \\<in> D (Y xa) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 ta \\<in> range f))\n 2. \\<And>xa u f xb.\n       \\<lbrakk>finite A; chain Y; front_tickFree u; tickFree (f xb);\n        strict_mono f; \\<forall>i x. f i \\<in> T (Y x);\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t ua.\n                            front_tickFree ua \\<and>\n                            tickFree t \\<and>\n                            trace_hide (f xb) (ev ` A) @ u =\n                            trace_hide t (ev ` A) @ ua \\<and>\n                            (t \\<in> D (Y xa) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))\n 3. \\<And>x.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>xa.\n           \\<exists>t u.\n              front_tickFree u \\<and>\n              tickFree t \\<and>\n              x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or>\n               (\\<exists>f.\n                   strict_mono f \\<and>\n                   (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                   (\\<forall>i.\n                       trace_hide (f i) (ev ` A) =\n                       trace_hide (f 0) (ev ` A)) \\<and>\n                   t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u.\n                            front_tickFree u \\<and>\n                            tickFree t \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))", "case (4 xa t u)"], ["proof (state)\nthis:\n  finite A\n  chain Y\n  front_tickFree u\n  tickFree t\n  \\<forall>x. t \\<in> D (Y x)\n\ngoal (3 subgoals):\n 1. \\<And>xa t u.\n       \\<lbrakk>finite A; chain Y; front_tickFree u; tickFree t;\n        \\<forall>x. t \\<in> D (Y x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta ua.\n                            front_tickFree ua \\<and>\n                            tickFree ta \\<and>\n                            trace_hide t (ev ` A) @ u =\n                            trace_hide ta (ev ` A) @ ua \\<and>\n                            (ta \\<in> D (Y xa) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 ta \\<in> range f))\n 2. \\<And>xa u f xb.\n       \\<lbrakk>finite A; chain Y; front_tickFree u; tickFree (f xb);\n        strict_mono f; \\<forall>i x. f i \\<in> T (Y x);\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t ua.\n                            front_tickFree ua \\<and>\n                            tickFree t \\<and>\n                            trace_hide (f xb) (ev ` A) @ u =\n                            trace_hide t (ev ` A) @ ua \\<and>\n                            (t \\<in> D (Y xa) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))\n 3. \\<And>x.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>xa.\n           \\<exists>t u.\n              front_tickFree u \\<and>\n              tickFree t \\<and>\n              x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or>\n               (\\<exists>f.\n                   strict_mono f \\<and>\n                   (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                   (\\<forall>i.\n                       trace_hide (f i) (ev ` A) =\n                       trace_hide (f 0) (ev ` A)) \\<and>\n                   t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u.\n                            front_tickFree u \\<and>\n                            tickFree t \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))", "thus ?case"], ["proof (prove)\nusing this:\n  finite A\n  chain Y\n  front_tickFree u\n  tickFree t\n  \\<forall>x. t \\<in> D (Y x)\n\ngoal (1 subgoal):\n 1. \\<exists>ta ua.\n       front_tickFree ua \\<and>\n       tickFree ta \\<and>\n       trace_hide t (ev ` A) @ u = trace_hide ta (ev ` A) @ ua \\<and>\n       (ta \\<in> D (Y xa) \\<or>\n        (\\<exists>f.\n            strict_mono f \\<and>\n            (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n            (\\<forall>i.\n                trace_hide (f i) (ev ` A) =\n                trace_hide (f 0) (ev ` A)) \\<and>\n            ta \\<in> range f))", "by blast"], ["proof (state)\nthis:\n  \\<exists>ta ua.\n     front_tickFree ua \\<and>\n     tickFree ta \\<and>\n     trace_hide t (ev ` A) @ u = trace_hide ta (ev ` A) @ ua \\<and>\n     (ta \\<in> D (Y xa) \\<or>\n      (\\<exists>f.\n          strict_mono f \\<and>\n          (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n          (\\<forall>i.\n              trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n          ta \\<in> range f))\n\ngoal (2 subgoals):\n 1. \\<And>xa u f xb.\n       \\<lbrakk>finite A; chain Y; front_tickFree u; tickFree (f xb);\n        strict_mono f; \\<forall>i x. f i \\<in> T (Y x);\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t ua.\n                            front_tickFree ua \\<and>\n                            tickFree t \\<and>\n                            trace_hide (f xb) (ev ` A) @ u =\n                            trace_hide t (ev ` A) @ ua \\<and>\n                            (t \\<in> D (Y xa) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))\n 2. \\<And>x.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>xa.\n           \\<exists>t u.\n              front_tickFree u \\<and>\n              tickFree t \\<and>\n              x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or>\n               (\\<exists>f.\n                   strict_mono f \\<and>\n                   (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                   (\\<forall>i.\n                       trace_hide (f i) (ev ` A) =\n                       trace_hide (f 0) (ev ` A)) \\<and>\n                   t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u.\n                            front_tickFree u \\<and>\n                            tickFree t \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa u f xb.\n       \\<lbrakk>finite A; chain Y; front_tickFree u; tickFree (f xb);\n        strict_mono f; \\<forall>i x. f i \\<in> T (Y x);\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t ua.\n                            front_tickFree ua \\<and>\n                            tickFree t \\<and>\n                            trace_hide (f xb) (ev ` A) @ u =\n                            trace_hide t (ev ` A) @ ua \\<and>\n                            (t \\<in> D (Y xa) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))\n 2. \\<And>x.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>xa.\n           \\<exists>t u.\n              front_tickFree u \\<and>\n              tickFree t \\<and>\n              x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or>\n               (\\<exists>f.\n                   strict_mono f \\<and>\n                   (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                   (\\<forall>i.\n                       trace_hide (f i) (ev ` A) =\n                       trace_hide (f 0) (ev ` A)) \\<and>\n                   t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u.\n                            front_tickFree u \\<and>\n                            tickFree t \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))", "case (5 xa u f xb)"], ["proof (state)\nthis:\n  finite A\n  chain Y\n  front_tickFree u\n  tickFree (f xb)\n  strict_mono f\n  \\<forall>i x. f i \\<in> T (Y x)\n  \\<forall>i. trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\n\ngoal (2 subgoals):\n 1. \\<And>xa u f xb.\n       \\<lbrakk>finite A; chain Y; front_tickFree u; tickFree (f xb);\n        strict_mono f; \\<forall>i x. f i \\<in> T (Y x);\n        \\<forall>i.\n           trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t ua.\n                            front_tickFree ua \\<and>\n                            tickFree t \\<and>\n                            trace_hide (f xb) (ev ` A) @ u =\n                            trace_hide t (ev ` A) @ ua \\<and>\n                            (t \\<in> D (Y xa) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))\n 2. \\<And>x.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>xa.\n           \\<exists>t u.\n              front_tickFree u \\<and>\n              tickFree t \\<and>\n              x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or>\n               (\\<exists>f.\n                   strict_mono f \\<and>\n                   (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                   (\\<forall>i.\n                       trace_hide (f i) (ev ` A) =\n                       trace_hide (f 0) (ev ` A)) \\<and>\n                   t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u.\n                            front_tickFree u \\<and>\n                            tickFree t \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))", "thus ?case"], ["proof (prove)\nusing this:\n  finite A\n  chain Y\n  front_tickFree u\n  tickFree (f xb)\n  strict_mono f\n  \\<forall>i x. f i \\<in> T (Y x)\n  \\<forall>i. trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)\n\ngoal (1 subgoal):\n 1. \\<exists>t ua.\n       front_tickFree ua \\<and>\n       tickFree t \\<and>\n       trace_hide (f xb) (ev ` A) @ u = trace_hide t (ev ` A) @ ua \\<and>\n       (t \\<in> D (Y xa) \\<or>\n        (\\<exists>f.\n            strict_mono f \\<and>\n            (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n            (\\<forall>i.\n                trace_hide (f i) (ev ` A) =\n                trace_hide (f 0) (ev ` A)) \\<and>\n            t \\<in> range f))", "by blast"], ["proof (state)\nthis:\n  \\<exists>t ua.\n     front_tickFree ua \\<and>\n     tickFree t \\<and>\n     trace_hide (f xb) (ev ` A) @ u = trace_hide t (ev ` A) @ ua \\<and>\n     (t \\<in> D (Y xa) \\<or>\n      (\\<exists>f.\n          strict_mono f \\<and>\n          (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n          (\\<forall>i.\n              trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n          t \\<in> range f))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>xa.\n           \\<exists>t u.\n              front_tickFree u \\<and>\n              tickFree t \\<and>\n              x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or>\n               (\\<exists>f.\n                   strict_mono f \\<and>\n                   (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                   (\\<forall>i.\n                       trace_hide (f i) (ev ` A) =\n                       trace_hide (f 0) (ev ` A)) \\<and>\n                   t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u.\n                            front_tickFree u \\<and>\n                            tickFree t \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>xa.\n           \\<exists>t u.\n              front_tickFree u \\<and>\n              tickFree t \\<and>\n              x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or>\n               (\\<exists>f.\n                   strict_mono f \\<and>\n                   (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                   (\\<forall>i.\n                       trace_hide (f i) (ev ` A) =\n                       trace_hide (f 0) (ev ` A)) \\<and>\n                   t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u.\n                            front_tickFree u \\<and>\n                            tickFree t \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))", "case (6 s)"], ["proof (state)\nthis:\n  finite A\n  chain Y\n  \\<forall>x.\n     \\<exists>t u.\n        front_tickFree u \\<and>\n        tickFree t \\<and>\n        s = trace_hide t (ev ` A) @ u \\<and>\n        (t \\<in> D (Y x) \\<or>\n         (\\<exists>f.\n             strict_mono f \\<and>\n             (\\<forall>i. f i \\<in> T (Y x)) \\<and>\n             (\\<forall>i.\n                 trace_hide (f i) (ev ` A) =\n                 trace_hide (f 0) (ev ` A)) \\<and>\n             t \\<in> range f))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>xa.\n           \\<exists>t u.\n              front_tickFree u \\<and>\n              tickFree t \\<and>\n              x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or>\n               (\\<exists>f.\n                   strict_mono f \\<and>\n                   (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                   (\\<forall>i.\n                       trace_hide (f i) (ev ` A) =\n                       trace_hide (f 0) (ev ` A)) \\<and>\n                   t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u.\n                            front_tickFree u \\<and>\n                            tickFree t \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))", "hence \"s \\<in> D (\\<Squnion> i. (Y i \\\\ A))\""], ["proof (prove)\nusing this:\n  finite A\n  chain Y\n  \\<forall>x.\n     \\<exists>t u.\n        front_tickFree u \\<and>\n        tickFree t \\<and>\n        s = trace_hide t (ev ` A) @ u \\<and>\n        (t \\<in> D (Y x) \\<or>\n         (\\<exists>f.\n             strict_mono f \\<and>\n             (\\<forall>i. f i \\<in> T (Y x)) \\<and>\n             (\\<forall>i.\n                 trace_hide (f i) (ev ` A) =\n                 trace_hide (f 0) (ev ` A)) \\<and>\n             t \\<in> range f))\n\ngoal (1 subgoal):\n 1. s \\<in> D (\\<Squnion>i. Y i \\ A)", "by (simp add:limproc_is_thelub cont_hiding1 6(1) D_hiding D_LUB)"], ["proof (state)\nthis:\n  s \\<in> D (\\<Squnion>i. Y i \\ A)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>xa.\n           \\<exists>t u.\n              front_tickFree u \\<and>\n              tickFree t \\<and>\n              x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or>\n               (\\<exists>f.\n                   strict_mono f \\<and>\n                   (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                   (\\<forall>i.\n                       trace_hide (f i) (ev ` A) =\n                       trace_hide (f 0) (ev ` A)) \\<and>\n                   t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u.\n                            front_tickFree u \\<and>\n                            tickFree t \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))", "with div_hiding_lub[OF 6(1,2)]"], ["proof (chain)\npicking this:\n  D (\\<Squnion>i. Y i \\ A) \\<subseteq> D ((\\<Squnion>i. Y i) \\ A)\n  s \\<in> D (\\<Squnion>i. Y i \\ A)", "have  \"s \\<in> D ((\\<Squnion>i. Y i) \\\\ A)\""], ["proof (prove)\nusing this:\n  D (\\<Squnion>i. Y i \\ A) \\<subseteq> D ((\\<Squnion>i. Y i) \\ A)\n  s \\<in> D (\\<Squnion>i. Y i \\ A)\n\ngoal (1 subgoal):\n 1. s \\<in> D ((\\<Squnion>i. Y i) \\ A)", "by blast"], ["proof (state)\nthis:\n  s \\<in> D ((\\<Squnion>i. Y i) \\ A)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>finite A; chain Y;\n        \\<forall>xa.\n           \\<exists>t u.\n              front_tickFree u \\<and>\n              tickFree t \\<and>\n              x = trace_hide t (ev ` A) @ u \\<and>\n              (t \\<in> D (Y xa) \\<or>\n               (\\<exists>f.\n                   strict_mono f \\<and>\n                   (\\<forall>i. f i \\<in> T (Y xa)) \\<and>\n                   (\\<forall>i.\n                       trace_hide (f i) (ev ` A) =\n                       trace_hide (f 0) (ev ` A)) \\<and>\n                   t \\<in> range f))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u.\n                            front_tickFree u \\<and>\n                            tickFree t \\<and>\n                            x = trace_hide t (ev ` A) @ u \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n                             (\\<exists>f.\n                                 strict_mono f \\<and>\n                                 (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n                                 (\\<forall>i.\n                                     trace_hide (f i) (ev ` A) =\n                                     trace_hide (f 0) (ev ` A)) \\<and>\n                                 t \\<in> range f))", "thus ?case"], ["proof (prove)\nusing this:\n  s \\<in> D ((\\<Squnion>i. Y i) \\ A)\n\ngoal (1 subgoal):\n 1. \\<exists>t u.\n       front_tickFree u \\<and>\n       tickFree t \\<and>\n       s = trace_hide t (ev ` A) @ u \\<and>\n       ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n        (\\<exists>f.\n            strict_mono f \\<and>\n            (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n            (\\<forall>i.\n                trace_hide (f i) (ev ` A) =\n                trace_hide (f 0) (ev ` A)) \\<and>\n            t \\<in> range f))", "by (simp add:limproc_is_thelub 6(2) D_hiding D_LUB T_LUB)"], ["proof (state)\nthis:\n  \\<exists>t u.\n     front_tickFree u \\<and>\n     tickFree t \\<and>\n     s = trace_hide t (ev ` A) @ u \\<and>\n     ((\\<forall>x. t \\<in> D (Y x)) \\<or>\n      (\\<exists>f.\n          strict_mono f \\<and>\n          (\\<forall>i x. f i \\<in> T (Y x)) \\<and>\n          (\\<forall>i.\n              trace_hide (f i) (ev ` A) = trace_hide (f 0) (ev ` A)) \\<and>\n          t \\<in> range f))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cont_hiding_base[simp] : \"finite A \\<Longrightarrow> cont (\\<lambda>x. x \\\\ A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite A \\<Longrightarrow> cont (\\<lambda>x. x \\ A)", "by (simp add: cont_def cont_hiding1 cont_hiding2 cpo_lubI)"], ["", "lemma hiding_cont[simp]:  \"finite A \\<Longrightarrow> cont f \\<Longrightarrow> cont (\\<lambda>x. f x \\\\ A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; cont f\\<rbrakk>\n    \\<Longrightarrow> cont (\\<lambda>x. f x \\ A)", "by (rule_tac f=f in cont_compose, simp_all)"], ["", "end"]]}