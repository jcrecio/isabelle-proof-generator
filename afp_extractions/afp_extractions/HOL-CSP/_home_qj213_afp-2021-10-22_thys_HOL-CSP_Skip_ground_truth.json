{"file_name": "/home/qj213/afp-2021-10-22/thys/HOL-CSP/Skip.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/HOL-CSP", "problem_names": ["lemma is_process_REP_Skip:\n\" is_process ({(s, X). s = [] \\<and> tick \\<notin> X} \\<union> {(s, X). s = [tick]}, {})\"", "lemma is_process_REP_Skip2:\n\"is_process ({[]} \\<times> {X. tick \\<notin> X} \\<union> {(s, X). s = [tick]}, {})\"", "lemmas process_prover = Rep_process Abs_process_inverse \n\t                       FAILURES_def TRACES_def \n\t                       DIVERGENCES_def is_process_REP_Skip", "lemma F_SKIP:\n\"F SKIP = {(s, X). s = [] \\<and> tick \\<notin> X} \\<union> {(s, X). s = [tick]}\"", "lemma D_SKIP: \"D SKIP = {}\"", "lemma T_SKIP: \"T SKIP ={[],[tick]}\""], "translations": [["", "lemma is_process_REP_Skip:\n\" is_process ({(s, X). s = [] \\<and> tick \\<notin> X} \\<union> {(s, X). s = [tick]}, {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_process\n     ({(s, X). s = [] \\<and> tick \\<notin> X} \\<union> {(s, X). s = [tick]},\n      {})", "apply(auto simp: FAILURES_def DIVERGENCES_def front_tickFree_def is_process_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s t.\n       \\<lbrakk>s @ t = [tick]; s \\<noteq> [tick]\\<rbrakk>\n       \\<Longrightarrow> s = []", "apply(erule contrapos_np,drule neq_Nil_conv[THEN iffD1], auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma is_process_REP_Skip2:\n\"is_process ({[]} \\<times> {X. tick \\<notin> X} \\<union> {(s, X). s = [tick]}, {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_process\n     ({[]} \\<times> {X. tick \\<notin> X} \\<union> {(s, X). s = [tick]}, {})", "using is_process_REP_Skip"], ["proof (prove)\nusing this:\n  is_process\n   ({(s, X). s = [] \\<and> tick \\<notin> X} \\<union> {(s, X). s = [tick]},\n    {})\n\ngoal (1 subgoal):\n 1. is_process\n     ({[]} \\<times> {X. tick \\<notin> X} \\<union> {(s, X). s = [tick]}, {})", "by auto"], ["", "lemmas process_prover = Rep_process Abs_process_inverse \n\t                       FAILURES_def TRACES_def \n\t                       DIVERGENCES_def is_process_REP_Skip"], ["", "lemma F_SKIP:\n\"F SKIP = {(s, X). s = [] \\<and> tick \\<notin> X} \\<union> {(s, X). s = [tick]}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F SKIP =\n    {(s, X). s = [] \\<and> tick \\<notin> X} \\<union> {(s, X). s = [tick]}", "by(simp add:  process_prover SKIP_def F_def is_process_REP_Skip2)"], ["", "lemma D_SKIP: \"D SKIP = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D SKIP = {}", "by(simp add:  process_prover SKIP_def D_def is_process_REP_Skip2)"], ["", "lemma T_SKIP: \"T SKIP ={[],[tick]}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T SKIP = {[], [tick]}", "by(auto simp:  process_prover SKIP_def T_def is_process_REP_Skip2)"], ["", "end"]]}