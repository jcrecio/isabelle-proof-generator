{"file_name": "/home/qj213/afp-2021-10-22/thys/HOL-CSP/Ndet.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/HOL-CSP", "problem_names": ["lemma is_process_REP_ND:\n\"is_process (F P \\<union> F Q , D P \\<union> D Q)\"", "lemma Rep_Abs_ND:\n\"Rep_process(Abs_process(F P \\<union> F Q , D P \\<union> D Q)) = (F P \\<union> F Q , D P \\<union> D Q)\"", "lemma F_ndet : \"F(P \\<sqinter> Q) = F P \\<union> F Q\"", "lemma D_ndet : \"D(P \\<sqinter> Q) = D P \\<union> D Q\"", "lemma T_ndet : \"T(P \\<sqinter> Q) = T P \\<union> T Q\"", "lemma Ndet_commute: \"(P \\<sqinter> Q) = (Q \\<sqinter> P)\"", "lemma  mono_Ndet1: \"P \\<sqsubseteq> Q \\<Longrightarrow> D (Q \\<sqinter> S) \\<subseteq> D (P \\<sqinter> S)\"", "lemma mono_Ndet2: \"P \\<sqsubseteq> Q \\<Longrightarrow> (\\<forall> s. s \\<notin> D (P \\<sqinter> S) \\<longrightarrow> Ra (P \\<sqinter> S) s = Ra (Q \\<sqinter> S) s)\"", "lemma mono_Ndet3: \"P \\<sqsubseteq> Q \\<Longrightarrow> min_elems (D (P \\<sqinter> S)) \\<subseteq> T (Q \\<sqinter> S)\"", "lemma mono_Ndet[simp] : \"P \\<sqsubseteq> Q \\<Longrightarrow> (P \\<sqinter> S) \\<sqsubseteq> (Q \\<sqinter> S)\"", "lemma mono_Ndet_sym[simp] : \"P \\<sqsubseteq> Q \\<Longrightarrow> (S \\<sqinter> P) \\<sqsubseteq> (S \\<sqinter> Q)\"", "lemma cont_Ndet1: \nassumes chain:\"chain Y\"\nshows  \"((\\<Squnion> i. Y i) \\<sqinter> S) = (\\<Squnion> i. (Y i \\<sqinter> S))\"", "lemma ndet_cont[simp]: \nassumes f: \"cont f\"\nand     g: \"cont g\"\nshows      \"cont (\\<lambda>x. f x \\<sqinter> g x)\""], "translations": [["", "lemma is_process_REP_ND:\n\"is_process (F P \\<union> F Q , D P \\<union> D Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_process (F P \\<union> F Q, D P \\<union> D Q)", "proof(simp only: fst_conv snd_conv Rep_process is_process_def DIVERGENCES_def FAILURES_def,\n      intro conjI)"], ["proof (state)\ngoal (9 subgoals):\n 1. ([], {}) \\<in> F P \\<union> F Q\n 2. \\<forall>s X.\n       (s, X) \\<in> F P \\<union> F Q \\<longrightarrow> front_tickFree s\n 3. \\<forall>s t.\n       (s @ t, {}) \\<in> F P \\<union> F Q \\<longrightarrow>\n       (s, {}) \\<in> F P \\<union> F Q\n 4. \\<forall>s X Y.\n       (s, Y) \\<in> F P \\<union> F Q \\<and>\n       X \\<subseteq> Y \\<longrightarrow>\n       (s, X) \\<in> F P \\<union> F Q\n 5. \\<forall>s X Y.\n       (s, X) \\<in> F P \\<union> F Q \\<and>\n       (\\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (s @ [c], {}) \\<notin> F P \\<union> F Q) \\<longrightarrow>\n       (s, X \\<union> Y) \\<in> F P \\<union> F Q\n 6. \\<forall>s X.\n       (s @ [tick], {}) \\<in> F P \\<union> F Q \\<longrightarrow>\n       (s, X - {tick}) \\<in> F P \\<union> F Q\n 7. \\<forall>s t.\n       s \\<in> D P \\<union> D Q \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t \\<in> D P \\<union> D Q\n 8. \\<forall>s X.\n       s \\<in> D P \\<union> D Q \\<longrightarrow>\n       (s, X) \\<in> F P \\<union> F Q\n 9. \\<forall>s.\n       s @ [tick] \\<in> D P \\<union> D Q \\<longrightarrow>\n       s \\<in> D P \\<union> D Q", "show \"([], {}) \\<in> (F P \\<union> F Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([], {}) \\<in> F P \\<union> F Q", "by(simp add: is_processT1)"], ["proof (state)\nthis:\n  ([], {}) \\<in> F P \\<union> F Q\n\ngoal (8 subgoals):\n 1. \\<forall>s X.\n       (s, X) \\<in> F P \\<union> F Q \\<longrightarrow> front_tickFree s\n 2. \\<forall>s t.\n       (s @ t, {}) \\<in> F P \\<union> F Q \\<longrightarrow>\n       (s, {}) \\<in> F P \\<union> F Q\n 3. \\<forall>s X Y.\n       (s, Y) \\<in> F P \\<union> F Q \\<and>\n       X \\<subseteq> Y \\<longrightarrow>\n       (s, X) \\<in> F P \\<union> F Q\n 4. \\<forall>s X Y.\n       (s, X) \\<in> F P \\<union> F Q \\<and>\n       (\\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (s @ [c], {}) \\<notin> F P \\<union> F Q) \\<longrightarrow>\n       (s, X \\<union> Y) \\<in> F P \\<union> F Q\n 5. \\<forall>s X.\n       (s @ [tick], {}) \\<in> F P \\<union> F Q \\<longrightarrow>\n       (s, X - {tick}) \\<in> F P \\<union> F Q\n 6. \\<forall>s t.\n       s \\<in> D P \\<union> D Q \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t \\<in> D P \\<union> D Q\n 7. \\<forall>s X.\n       s \\<in> D P \\<union> D Q \\<longrightarrow>\n       (s, X) \\<in> F P \\<union> F Q\n 8. \\<forall>s.\n       s @ [tick] \\<in> D P \\<union> D Q \\<longrightarrow>\n       s \\<in> D P \\<union> D Q", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<forall>s X.\n       (s, X) \\<in> F P \\<union> F Q \\<longrightarrow> front_tickFree s\n 2. \\<forall>s t.\n       (s @ t, {}) \\<in> F P \\<union> F Q \\<longrightarrow>\n       (s, {}) \\<in> F P \\<union> F Q\n 3. \\<forall>s X Y.\n       (s, Y) \\<in> F P \\<union> F Q \\<and>\n       X \\<subseteq> Y \\<longrightarrow>\n       (s, X) \\<in> F P \\<union> F Q\n 4. \\<forall>s X Y.\n       (s, X) \\<in> F P \\<union> F Q \\<and>\n       (\\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (s @ [c], {}) \\<notin> F P \\<union> F Q) \\<longrightarrow>\n       (s, X \\<union> Y) \\<in> F P \\<union> F Q\n 5. \\<forall>s X.\n       (s @ [tick], {}) \\<in> F P \\<union> F Q \\<longrightarrow>\n       (s, X - {tick}) \\<in> F P \\<union> F Q\n 6. \\<forall>s t.\n       s \\<in> D P \\<union> D Q \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t \\<in> D P \\<union> D Q\n 7. \\<forall>s X.\n       s \\<in> D P \\<union> D Q \\<longrightarrow>\n       (s, X) \\<in> F P \\<union> F Q\n 8. \\<forall>s.\n       s @ [tick] \\<in> D P \\<union> D Q \\<longrightarrow>\n       s \\<in> D P \\<union> D Q", "show \"\\<forall>s X. (s, X) \\<in> (F P \\<union> F Q) \\<longrightarrow> front_tickFree s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s X.\n       (s, X) \\<in> F P \\<union> F Q \\<longrightarrow> front_tickFree s", "by(auto simp: is_processT2)"], ["proof (state)\nthis:\n  \\<forall>s X.\n     (s, X) \\<in> F P \\<union> F Q \\<longrightarrow> front_tickFree s\n\ngoal (7 subgoals):\n 1. \\<forall>s t.\n       (s @ t, {}) \\<in> F P \\<union> F Q \\<longrightarrow>\n       (s, {}) \\<in> F P \\<union> F Q\n 2. \\<forall>s X Y.\n       (s, Y) \\<in> F P \\<union> F Q \\<and>\n       X \\<subseteq> Y \\<longrightarrow>\n       (s, X) \\<in> F P \\<union> F Q\n 3. \\<forall>s X Y.\n       (s, X) \\<in> F P \\<union> F Q \\<and>\n       (\\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (s @ [c], {}) \\<notin> F P \\<union> F Q) \\<longrightarrow>\n       (s, X \\<union> Y) \\<in> F P \\<union> F Q\n 4. \\<forall>s X.\n       (s @ [tick], {}) \\<in> F P \\<union> F Q \\<longrightarrow>\n       (s, X - {tick}) \\<in> F P \\<union> F Q\n 5. \\<forall>s t.\n       s \\<in> D P \\<union> D Q \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t \\<in> D P \\<union> D Q\n 6. \\<forall>s X.\n       s \\<in> D P \\<union> D Q \\<longrightarrow>\n       (s, X) \\<in> F P \\<union> F Q\n 7. \\<forall>s.\n       s @ [tick] \\<in> D P \\<union> D Q \\<longrightarrow>\n       s \\<in> D P \\<union> D Q", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<forall>s t.\n       (s @ t, {}) \\<in> F P \\<union> F Q \\<longrightarrow>\n       (s, {}) \\<in> F P \\<union> F Q\n 2. \\<forall>s X Y.\n       (s, Y) \\<in> F P \\<union> F Q \\<and>\n       X \\<subseteq> Y \\<longrightarrow>\n       (s, X) \\<in> F P \\<union> F Q\n 3. \\<forall>s X Y.\n       (s, X) \\<in> F P \\<union> F Q \\<and>\n       (\\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (s @ [c], {}) \\<notin> F P \\<union> F Q) \\<longrightarrow>\n       (s, X \\<union> Y) \\<in> F P \\<union> F Q\n 4. \\<forall>s X.\n       (s @ [tick], {}) \\<in> F P \\<union> F Q \\<longrightarrow>\n       (s, X - {tick}) \\<in> F P \\<union> F Q\n 5. \\<forall>s t.\n       s \\<in> D P \\<union> D Q \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t \\<in> D P \\<union> D Q\n 6. \\<forall>s X.\n       s \\<in> D P \\<union> D Q \\<longrightarrow>\n       (s, X) \\<in> F P \\<union> F Q\n 7. \\<forall>s.\n       s @ [tick] \\<in> D P \\<union> D Q \\<longrightarrow>\n       s \\<in> D P \\<union> D Q", "show \"\\<forall>s t.   (s @ t, {}) \\<in>(F P \\<union> F Q) \\<longrightarrow> (s, {}) \\<in> (F P \\<union> F Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s t.\n       (s @ t, {}) \\<in> F P \\<union> F Q \\<longrightarrow>\n       (s, {}) \\<in> F P \\<union> F Q", "by (auto simp: is_processT1 dest!: is_processT3[rule_format])"], ["proof (state)\nthis:\n  \\<forall>s t.\n     (s @ t, {}) \\<in> F P \\<union> F Q \\<longrightarrow>\n     (s, {}) \\<in> F P \\<union> F Q\n\ngoal (6 subgoals):\n 1. \\<forall>s X Y.\n       (s, Y) \\<in> F P \\<union> F Q \\<and>\n       X \\<subseteq> Y \\<longrightarrow>\n       (s, X) \\<in> F P \\<union> F Q\n 2. \\<forall>s X Y.\n       (s, X) \\<in> F P \\<union> F Q \\<and>\n       (\\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (s @ [c], {}) \\<notin> F P \\<union> F Q) \\<longrightarrow>\n       (s, X \\<union> Y) \\<in> F P \\<union> F Q\n 3. \\<forall>s X.\n       (s @ [tick], {}) \\<in> F P \\<union> F Q \\<longrightarrow>\n       (s, X - {tick}) \\<in> F P \\<union> F Q\n 4. \\<forall>s t.\n       s \\<in> D P \\<union> D Q \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t \\<in> D P \\<union> D Q\n 5. \\<forall>s X.\n       s \\<in> D P \\<union> D Q \\<longrightarrow>\n       (s, X) \\<in> F P \\<union> F Q\n 6. \\<forall>s.\n       s @ [tick] \\<in> D P \\<union> D Q \\<longrightarrow>\n       s \\<in> D P \\<union> D Q", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<forall>s X Y.\n       (s, Y) \\<in> F P \\<union> F Q \\<and>\n       X \\<subseteq> Y \\<longrightarrow>\n       (s, X) \\<in> F P \\<union> F Q\n 2. \\<forall>s X Y.\n       (s, X) \\<in> F P \\<union> F Q \\<and>\n       (\\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (s @ [c], {}) \\<notin> F P \\<union> F Q) \\<longrightarrow>\n       (s, X \\<union> Y) \\<in> F P \\<union> F Q\n 3. \\<forall>s X.\n       (s @ [tick], {}) \\<in> F P \\<union> F Q \\<longrightarrow>\n       (s, X - {tick}) \\<in> F P \\<union> F Q\n 4. \\<forall>s t.\n       s \\<in> D P \\<union> D Q \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t \\<in> D P \\<union> D Q\n 5. \\<forall>s X.\n       s \\<in> D P \\<union> D Q \\<longrightarrow>\n       (s, X) \\<in> F P \\<union> F Q\n 6. \\<forall>s.\n       s @ [tick] \\<in> D P \\<union> D Q \\<longrightarrow>\n       s \\<in> D P \\<union> D Q", "show \"\\<forall>s X Y. (s, Y) \\<in> (F P \\<union> F Q) \\<and> X \\<subseteq> Y \\<longrightarrow> (s, X) \\<in> (F P \\<union> F Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s X Y.\n       (s, Y) \\<in> F P \\<union> F Q \\<and>\n       X \\<subseteq> Y \\<longrightarrow>\n       (s, X) \\<in> F P \\<union> F Q", "by(auto dest: is_processT4[rule_format,OF conj_commute[THEN iffD1], OF conjI])"], ["proof (state)\nthis:\n  \\<forall>s X Y.\n     (s, Y) \\<in> F P \\<union> F Q \\<and> X \\<subseteq> Y \\<longrightarrow>\n     (s, X) \\<in> F P \\<union> F Q\n\ngoal (5 subgoals):\n 1. \\<forall>s X Y.\n       (s, X) \\<in> F P \\<union> F Q \\<and>\n       (\\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (s @ [c], {}) \\<notin> F P \\<union> F Q) \\<longrightarrow>\n       (s, X \\<union> Y) \\<in> F P \\<union> F Q\n 2. \\<forall>s X.\n       (s @ [tick], {}) \\<in> F P \\<union> F Q \\<longrightarrow>\n       (s, X - {tick}) \\<in> F P \\<union> F Q\n 3. \\<forall>s t.\n       s \\<in> D P \\<union> D Q \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t \\<in> D P \\<union> D Q\n 4. \\<forall>s X.\n       s \\<in> D P \\<union> D Q \\<longrightarrow>\n       (s, X) \\<in> F P \\<union> F Q\n 5. \\<forall>s.\n       s @ [tick] \\<in> D P \\<union> D Q \\<longrightarrow>\n       s \\<in> D P \\<union> D Q", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<forall>s X Y.\n       (s, X) \\<in> F P \\<union> F Q \\<and>\n       (\\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (s @ [c], {}) \\<notin> F P \\<union> F Q) \\<longrightarrow>\n       (s, X \\<union> Y) \\<in> F P \\<union> F Q\n 2. \\<forall>s X.\n       (s @ [tick], {}) \\<in> F P \\<union> F Q \\<longrightarrow>\n       (s, X - {tick}) \\<in> F P \\<union> F Q\n 3. \\<forall>s t.\n       s \\<in> D P \\<union> D Q \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t \\<in> D P \\<union> D Q\n 4. \\<forall>s X.\n       s \\<in> D P \\<union> D Q \\<longrightarrow>\n       (s, X) \\<in> F P \\<union> F Q\n 5. \\<forall>s.\n       s @ [tick] \\<in> D P \\<union> D Q \\<longrightarrow>\n       s \\<in> D P \\<union> D Q", "show \"\\<forall>sa X Y. (sa, X) \\<in> (F P \\<union> F Q) \\<and> (\\<forall>c. c \\<in> Y \\<longrightarrow> (sa @ [c], {}) \\<notin> (F P \\<union> F Q))\n          \\<longrightarrow> (sa, X \\<union> Y) \\<in> (F P \\<union> F Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>sa X Y.\n       (sa, X) \\<in> F P \\<union> F Q \\<and>\n       (\\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (sa @ [c], {}) \\<notin> F P \\<union> F Q) \\<longrightarrow>\n       (sa, X \\<union> Y) \\<in> F P \\<union> F Q", "by(auto simp: is_processT5 T_F)"], ["proof (state)\nthis:\n  \\<forall>sa X Y.\n     (sa, X) \\<in> F P \\<union> F Q \\<and>\n     (\\<forall>c.\n         c \\<in> Y \\<longrightarrow>\n         (sa @ [c], {}) \\<notin> F P \\<union> F Q) \\<longrightarrow>\n     (sa, X \\<union> Y) \\<in> F P \\<union> F Q\n\ngoal (4 subgoals):\n 1. \\<forall>s X.\n       (s @ [tick], {}) \\<in> F P \\<union> F Q \\<longrightarrow>\n       (s, X - {tick}) \\<in> F P \\<union> F Q\n 2. \\<forall>s t.\n       s \\<in> D P \\<union> D Q \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t \\<in> D P \\<union> D Q\n 3. \\<forall>s X.\n       s \\<in> D P \\<union> D Q \\<longrightarrow>\n       (s, X) \\<in> F P \\<union> F Q\n 4. \\<forall>s.\n       s @ [tick] \\<in> D P \\<union> D Q \\<longrightarrow>\n       s \\<in> D P \\<union> D Q", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<forall>s X.\n       (s @ [tick], {}) \\<in> F P \\<union> F Q \\<longrightarrow>\n       (s, X - {tick}) \\<in> F P \\<union> F Q\n 2. \\<forall>s t.\n       s \\<in> D P \\<union> D Q \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t \\<in> D P \\<union> D Q\n 3. \\<forall>s X.\n       s \\<in> D P \\<union> D Q \\<longrightarrow>\n       (s, X) \\<in> F P \\<union> F Q\n 4. \\<forall>s.\n       s @ [tick] \\<in> D P \\<union> D Q \\<longrightarrow>\n       s \\<in> D P \\<union> D Q", "show \"\\<forall>s X. (s @ [tick], {}) \\<in> (F P \\<union> F Q) \\<longrightarrow> (s, X - {tick}) \\<in> (F P \\<union> F Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s X.\n       (s @ [tick], {}) \\<in> F P \\<union> F Q \\<longrightarrow>\n       (s, X - {tick}) \\<in> F P \\<union> F Q", "apply((rule allI)+, rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s X.\n       (s @ [tick], {}) \\<in> F P \\<union> F Q \\<Longrightarrow>\n       (s, X - {tick}) \\<in> F P \\<union> F Q", "apply(rename_tac s X, case_tac \"s=[]\", simp_all add: is_processT6[rule_format] T_F_spec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s X.\n       \\<lbrakk>[tick] \\<in> T P \\<or> [tick] \\<in> T Q; s = []\\<rbrakk>\n       \\<Longrightarrow> ([], X - {tick}) \\<in> F P \\<or>\n                         ([], X - {tick}) \\<in> F Q\n 2. \\<And>s X.\n       \\<lbrakk>s @ [tick] \\<in> T P \\<or> s @ [tick] \\<in> T Q;\n        s \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> (s, X - {tick}) \\<in> F P \\<or>\n                         (s, X - {tick}) \\<in> F Q", "apply(erule disjE,simp_all add: is_processT6[rule_format] T_F_spec)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s X.\n       \\<lbrakk>s @ [tick] \\<in> T P \\<or> s @ [tick] \\<in> T Q;\n        s \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> (s, X - {tick}) \\<in> F P \\<or>\n                         (s, X - {tick}) \\<in> F Q", "apply(erule disjE,simp_all add: is_processT6[rule_format] T_F_spec)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<forall>s X.\n     (s @ [tick], {}) \\<in> F P \\<union> F Q \\<longrightarrow>\n     (s, X - {tick}) \\<in> F P \\<union> F Q\n\ngoal (3 subgoals):\n 1. \\<forall>s t.\n       s \\<in> D P \\<union> D Q \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t \\<in> D P \\<union> D Q\n 2. \\<forall>s X.\n       s \\<in> D P \\<union> D Q \\<longrightarrow>\n       (s, X) \\<in> F P \\<union> F Q\n 3. \\<forall>s.\n       s @ [tick] \\<in> D P \\<union> D Q \\<longrightarrow>\n       s \\<in> D P \\<union> D Q", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<forall>s t.\n       s \\<in> D P \\<union> D Q \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t \\<in> D P \\<union> D Q\n 2. \\<forall>s X.\n       s \\<in> D P \\<union> D Q \\<longrightarrow>\n       (s, X) \\<in> F P \\<union> F Q\n 3. \\<forall>s.\n       s @ [tick] \\<in> D P \\<union> D Q \\<longrightarrow>\n       s \\<in> D P \\<union> D Q", "show \"\\<forall>s t. s \\<in> D P \\<union> D Q \\<and> tickFree s \\<and> front_tickFree t \\<longrightarrow> s @ t \\<in> D P \\<union> D Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s t.\n       s \\<in> D P \\<union> D Q \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t \\<in> D P \\<union> D Q", "by(auto simp: is_processT7)"], ["proof (state)\nthis:\n  \\<forall>s t.\n     s \\<in> D P \\<union> D Q \\<and>\n     tickFree s \\<and> front_tickFree t \\<longrightarrow>\n     s @ t \\<in> D P \\<union> D Q\n\ngoal (2 subgoals):\n 1. \\<forall>s X.\n       s \\<in> D P \\<union> D Q \\<longrightarrow>\n       (s, X) \\<in> F P \\<union> F Q\n 2. \\<forall>s.\n       s @ [tick] \\<in> D P \\<union> D Q \\<longrightarrow>\n       s \\<in> D P \\<union> D Q", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>s X.\n       s \\<in> D P \\<union> D Q \\<longrightarrow>\n       (s, X) \\<in> F P \\<union> F Q\n 2. \\<forall>s.\n       s @ [tick] \\<in> D P \\<union> D Q \\<longrightarrow>\n       s \\<in> D P \\<union> D Q", "show \"\\<forall>s X. s \\<in> D P \\<union> D Q \\<longrightarrow> (s, X) \\<in> (F P \\<union> F Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s X.\n       s \\<in> D P \\<union> D Q \\<longrightarrow>\n       (s, X) \\<in> F P \\<union> F Q", "by(auto simp: is_processT8[rule_format])"], ["proof (state)\nthis:\n  \\<forall>s X.\n     s \\<in> D P \\<union> D Q \\<longrightarrow>\n     (s, X) \\<in> F P \\<union> F Q\n\ngoal (1 subgoal):\n 1. \\<forall>s.\n       s @ [tick] \\<in> D P \\<union> D Q \\<longrightarrow>\n       s \\<in> D P \\<union> D Q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>s.\n       s @ [tick] \\<in> D P \\<union> D Q \\<longrightarrow>\n       s \\<in> D P \\<union> D Q", "show \"\\<forall>s. s @ [tick] \\<in> D P \\<union> D Q \\<longrightarrow> s \\<in> D P \\<union> D Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s.\n       s @ [tick] \\<in> D P \\<union> D Q \\<longrightarrow>\n       s \\<in> D P \\<union> D Q", "by(auto intro!:is_processT9[rule_format])"], ["proof (state)\nthis:\n  \\<forall>s.\n     s @ [tick] \\<in> D P \\<union> D Q \\<longrightarrow>\n     s \\<in> D P \\<union> D Q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Rep_Abs_ND:\n\"Rep_process(Abs_process(F P \\<union> F Q , D P \\<union> D Q)) = (F P \\<union> F Q , D P \\<union> D Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_process (Abs_process (F P \\<union> F Q, D P \\<union> D Q)) =\n    (F P \\<union> F Q, D P \\<union> D Q)", "by(simp only:CollectI Rep_process Abs_process_inverse is_process_REP_ND)"], ["", "subsection\\<open>Some Laws\\<close>"], ["", "text \\<open>The commutativity of the operator helps to simplify the subsequent\n      continuity proof and is therefore developed here: \\<close>"], ["", "lemma F_ndet : \"F(P \\<sqinter> Q) = F P \\<union> F Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F (P |-| Q) = F P \\<union> F Q", "apply (subst F_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. FAILURES (Rep_process (P |-| Q)) = F P \\<union> F Q", "apply (simp only: ndet_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. FAILURES\n     (Rep_process (Abs_process (F P \\<union> F Q, D P \\<union> D Q))) =\n    F P \\<union> F Q", "by (simp add: FAILURES_def Rep_Abs_ND)"], ["", "lemma D_ndet : \"D(P \\<sqinter> Q) = D P \\<union> D Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D (P |-| Q) = D P \\<union> D Q", "by(subst D_def, simp only: ndet_def Rep_Abs_ND DIVERGENCES_def snd_conv)"], ["", "lemma T_ndet : \"T(P \\<sqinter> Q) = T P \\<union> T Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T (P |-| Q) = T P \\<union> T Q", "apply(subst T_def, simp only: ndet_def Rep_Abs_ND TRACES_def FAILURES_def\n                             fst_def snd_conv)"], ["proof (prove)\ngoal (1 subgoal):\n 1. {tr.\n     \\<exists>a.\n        a \\<in> (case (F P \\<union> F Q, D P \\<union> D Q) of\n                 (x1, x2) \\<Rightarrow> x1) \\<and>\n        tr = (case a of (x1, x2) \\<Rightarrow> x1)} =\n    T P \\<union> T Q", "apply(auto simp: T_F F_T is_processT1 Nil_elem_T)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> T P \\<Longrightarrow>\n       \\<exists>b. (x, b) \\<in> F P \\<or> (x, b) \\<in> F Q\n 2. \\<And>x.\n       x \\<in> T Q \\<Longrightarrow>\n       \\<exists>b. (x, b) \\<in> F P \\<or> (x, b) \\<in> F Q", "apply(rule_tac x=\"{}\" in exI, simp add: T_F F_T is_processT1 Nil_elem_T)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Ndet_commute: \"(P \\<sqinter> Q) = (Q \\<sqinter> P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P |-| Q) = (Q |-| P)", "by(auto simp: Process_eq_spec F_ndet D_ndet)"], ["", "subsection\\<open>The Continuity Rule\\<close>"], ["", "lemma  mono_Ndet1: \"P \\<sqsubseteq> Q \\<Longrightarrow> D (Q \\<sqinter> S) \\<subseteq> D (P \\<sqinter> S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<sqsubseteq> Q \\<Longrightarrow> D (Q |-| S) \\<subseteq> D (P |-| S)", "apply(drule le_approx1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. D Q \\<subseteq> D P \\<Longrightarrow>\n    D (Q |-| S) \\<subseteq> D (P |-| S)", "by (auto simp: Process_eq_spec F_ndet D_ndet)"], ["", "lemma mono_Ndet2: \"P \\<sqsubseteq> Q \\<Longrightarrow> (\\<forall> s. s \\<notin> D (P \\<sqinter> S) \\<longrightarrow> Ra (P \\<sqinter> S) s = Ra (Q \\<sqinter> S) s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<sqsubseteq> Q \\<Longrightarrow>\n    \\<forall>s.\n       s \\<notin> D (P |-| S) \\<longrightarrow>\n       Ra (P |-| S) s = Ra (Q |-| S) s", "apply(subst (asm) le_approx_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. D Q \\<subseteq> D P \\<and>\n    (\\<forall>s. s \\<notin> D P \\<longrightarrow> Ra P s = Ra Q s) \\<and>\n    min_elems (D P) \\<subseteq> T Q \\<Longrightarrow>\n    \\<forall>s.\n       s \\<notin> D (P |-| S) \\<longrightarrow>\n       Ra (P |-| S) s = Ra (Q |-| S) s", "by (auto simp: Process_eq_spec F_ndet D_ndet Ra_def)"], ["", "lemma mono_Ndet3: \"P \\<sqsubseteq> Q \\<Longrightarrow> min_elems (D (P \\<sqinter> S)) \\<subseteq> T (Q \\<sqinter> S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<sqsubseteq> Q \\<Longrightarrow>\n    min_elems (D (P |-| S)) \\<subseteq> T (Q |-| S)", "apply(auto dest!:le_approx3 simp: min_elems_def subset_iff F_ndet D_ndet T_ndet)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>\\<forall>t.\n                   t \\<in> D P \\<and>\n                   (\\<forall>ta.\n                       ta \\<in> D P \\<longrightarrow>\n                       \\<not> ta < t) \\<longrightarrow>\n                   t \\<in> T Q;\n        \\<forall>ta.\n           (ta \\<in> D P \\<longrightarrow> \\<not> ta < t) \\<and>\n           (ta \\<in> D S \\<longrightarrow> \\<not> ta < t);\n        t \\<notin> T S; t \\<in> D S\\<rbrakk>\n       \\<Longrightarrow> t \\<in> T Q", "apply(erule_tac x=\"t\" in allE, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>\\<forall>ta.\n                   (ta \\<in> D P \\<longrightarrow> \\<not> ta < t) \\<and>\n                   (ta \\<in> D S \\<longrightarrow> \\<not> ta < t);\n        t \\<notin> T S; t \\<in> D S; t \\<notin> D P\\<rbrakk>\n       \\<Longrightarrow> t \\<in> T Q", "by (erule_tac x=\"[]\" in allE, auto simp: less_list_def Nil_elem_T D_T)"], ["", "lemma mono_Ndet[simp] : \"P \\<sqsubseteq> Q \\<Longrightarrow> (P \\<sqinter> S) \\<sqsubseteq> (Q \\<sqinter> S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<sqsubseteq> Q \\<Longrightarrow> (P |-| S) \\<sqsubseteq> (Q |-| S)", "by(auto simp:le_approx_def mono_Ndet1 mono_Ndet2 mono_Ndet3)"], ["", "lemma mono_Ndet_sym[simp] : \"P \\<sqsubseteq> Q \\<Longrightarrow> (S \\<sqinter> P) \\<sqsubseteq> (S \\<sqinter> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<sqsubseteq> Q \\<Longrightarrow> (S |-| P) \\<sqsubseteq> (S |-| Q)", "by (auto simp: Ndet_commute)"], ["", "lemma cont_Ndet1: \nassumes chain:\"chain Y\"\nshows  \"((\\<Squnion> i. Y i) \\<sqinter> S) = (\\<Squnion> i. (Y i \\<sqinter> S))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<Squnion>i. Y i) |-| S) = (\\<Squnion>i. Y i |-| S)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ((\\<Squnion>i. Y i) |-| S) = (\\<Squnion>i. Y i |-| S)", "have A : \"chain (\\<lambda>i. Y i \\<sqinter> S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chain (\\<lambda>i. Y i |-| S)", "apply(insert chain,rule chainI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       chain Y \\<Longrightarrow> (Y i |-| S) \\<sqsubseteq> (Y (Suc i) |-| S)", "apply(frule_tac i=\"i\" in chainE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>chain Y; Y i \\<sqsubseteq> Y (Suc i)\\<rbrakk>\n       \\<Longrightarrow> (Y i |-| S) \\<sqsubseteq> (Y (Suc i) |-| S)", "by(simp)"], ["proof (state)\nthis:\n  chain (\\<lambda>i. Y i |-| S)\n\ngoal (1 subgoal):\n 1. ((\\<Squnion>i. Y i) |-| S) = (\\<Squnion>i. Y i |-| S)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<Squnion>i. Y i) |-| S) = (\\<Squnion>i. Y i |-| S)", "using chain"], ["proof (prove)\nusing this:\n  chain Y\n\ngoal (1 subgoal):\n 1. ((\\<Squnion>i. Y i) |-| S) = (\\<Squnion>i. Y i |-| S)", "by(auto simp add: limproc_is_thelub Process_eq_spec D_ndet F_ndet F_LUB D_LUB A)"], ["proof (state)\nthis:\n  ((\\<Squnion>i. Y i) |-| S) = (\\<Squnion>i. Y i |-| S)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ndet_cont[simp]: \nassumes f: \"cont f\"\nand     g: \"cont g\"\nshows      \"cont (\\<lambda>x. f x \\<sqinter> g x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cont (\\<lambda>x. f x |-| g x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cont (\\<lambda>x. f x |-| g x)", "have A:\"\\<And>x. cont f \\<Longrightarrow> cont g \\<Longrightarrow> cont (\\<lambda>X. (f x)\\<sqinter> X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>cont f; cont g\\<rbrakk> \\<Longrightarrow> cont ((|-|) (f x))", "apply(rule contI2, rule monofunI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>cont f; cont g; xa \\<sqsubseteq> y\\<rbrakk>\n       \\<Longrightarrow> (f x |-| xa) \\<sqsubseteq> (f x |-| y)\n 2. \\<And>x Y.\n       \\<lbrakk>cont f; cont g; chain Y;\n        chain (\\<lambda>i. f x |-| Y i)\\<rbrakk>\n       \\<Longrightarrow> (f x |-| (\\<Squnion>i. Y i)) \\<sqsubseteq>\n                         (\\<Squnion>i. f x |-| Y i)", "apply(auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x Y.\n       \\<lbrakk>cont f; cont g; chain Y;\n        chain (\\<lambda>i. f x |-| Y i)\\<rbrakk>\n       \\<Longrightarrow> (f x |-| (\\<Squnion>i. Y i)) \\<sqsubseteq>\n                         (\\<Squnion>i. f x |-| Y i)", "apply(subst Ndet_commute, subst cont_Ndet1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x Y.\n       \\<lbrakk>cont f; cont g; chain Y;\n        chain (\\<lambda>i. f x |-| Y i)\\<rbrakk>\n       \\<Longrightarrow> chain Y\n 2. \\<And>x Y.\n       \\<lbrakk>cont f; cont g; chain Y;\n        chain (\\<lambda>i. f x |-| Y i)\\<rbrakk>\n       \\<Longrightarrow> (\\<Squnion>i. Y i |-| f x) \\<sqsubseteq>\n                         (\\<Squnion>i. f x |-| Y i)", "by   (auto simp:Ndet_commute)"], ["proof (state)\nthis:\n  \\<lbrakk>cont f; cont g\\<rbrakk> \\<Longrightarrow> cont ((|-|) (f ?x))\n\ngoal (1 subgoal):\n 1. cont (\\<lambda>x. f x |-| g x)", "have B:\"\\<And>y. cont f \\<Longrightarrow> cont g \\<Longrightarrow> cont (\\<lambda>x. f x \\<sqinter> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>cont f; cont g\\<rbrakk>\n       \\<Longrightarrow> cont (\\<lambda>x. f x |-| y)", "apply(rule_tac c=\"(\\<lambda> g. g \\<sqinter> y)\" in cont_compose)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>cont f; cont g\\<rbrakk>\n       \\<Longrightarrow> cont (\\<lambda>g. g |-| y)\n 2. \\<And>y. \\<lbrakk>cont f; cont g\\<rbrakk> \\<Longrightarrow> cont f", "apply(rule contI2,rule monofunI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y x ya.\n       \\<lbrakk>cont f; cont g; x \\<sqsubseteq> ya\\<rbrakk>\n       \\<Longrightarrow> (x |-| y) \\<sqsubseteq> (ya |-| y)\n 2. \\<And>y Y.\n       \\<lbrakk>cont f; cont g; chain Y;\n        chain (\\<lambda>i. Y i |-| y)\\<rbrakk>\n       \\<Longrightarrow> ((\\<Squnion>i. Y i) |-| y) \\<sqsubseteq>\n                         (\\<Squnion>i. Y i |-| y)\n 3. \\<And>y. \\<lbrakk>cont f; cont g\\<rbrakk> \\<Longrightarrow> cont f", "by   (simp_all add: cont_Ndet1)"], ["proof (state)\nthis:\n  \\<lbrakk>cont f; cont g\\<rbrakk>\n  \\<Longrightarrow> cont (\\<lambda>x. f x |-| ?y)\n\ngoal (1 subgoal):\n 1. cont (\\<lambda>x. f x |-| g x)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. cont (\\<lambda>x. f x |-| g x)", "using f g"], ["proof (prove)\nusing this:\n  cont f\n  cont g\n\ngoal (1 subgoal):\n 1. cont (\\<lambda>x. f x |-| g x)", "by (rule_tac f=\"(\\<lambda> x. (\\<lambda> g. f x \\<sqinter> g))\" in cont_apply, auto simp: A B)"], ["proof (state)\nthis:\n  cont (\\<lambda>x. f x |-| g x)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}