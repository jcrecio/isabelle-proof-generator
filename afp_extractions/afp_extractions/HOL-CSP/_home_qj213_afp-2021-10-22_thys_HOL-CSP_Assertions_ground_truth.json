{"file_name": "/home/qj213/afp-2021-10-22/thys/HOL-CSP/Assertions.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/HOL-CSP", "problem_names": ["lemma DF_unfold : \"DF A = (\\<sqinter> z \\<in> A \\<rightarrow> DF A)\"", "lemma DF_subset: \"A \\<noteq> {} \\<Longrightarrow> A \\<subseteq> B \\<Longrightarrow> DF B \\<sqsubseteq>\\<^sub>F\\<^sub>D DF A\"", "lemma DF_Univ_freeness: \"A \\<noteq> {} \\<Longrightarrow> (DF A) \\<sqsubseteq>\\<^sub>F\\<^sub>D P  \\<Longrightarrow> deadlock_free P\"", "lemma deadlock_free_ndet: \"deadlock_free P \\<Longrightarrow> deadlock_free Q \\<Longrightarrow> deadlock_free (P \\<sqinter> Q)\"", "lemma deadlock_free_skip:\"DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV  \\<sqsubseteq>\\<^sub>F\\<^sub>D SKIP\""], "translations": [["", "lemma DF_unfold : \"DF A = (\\<sqinter> z \\<in> A \\<rightarrow> DF A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. DF A = (\\<sqinter>z\\<in>A \\<rightarrow>  DF A)", "by(simp add: DF_def, rule trans, rule fix_eq, simp)"], ["", "definition deadlock_free :: \"'a process \\<Rightarrow> bool\"\n  where   \"deadlock_free P \\<equiv> DF UNIV \\<sqsubseteq>\\<^sub>F\\<^sub>D P\""], ["", "definition DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P :: \"'a set \\<Rightarrow> 'a process\"\n  where   \"DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P A \\<equiv> \\<mu> X. ((\\<sqinter> x \\<in> A \\<rightarrow> X) \\<sqinter> SKIP)\""], ["", "definition RUN :: \"'a set \\<Rightarrow> 'a process\"\n  where   \"RUN A \\<equiv> \\<mu> X. \\<box> x \\<in> A \\<rightarrow> X\""], ["", "definition CHAOS :: \"'a set \\<Rightarrow> 'a process\" \n  where   \"CHAOS A \\<equiv> \\<mu> X. (STOP \\<sqinter> (\\<box> x \\<in> A \\<rightarrow> X))\""], ["", "definition lifelock_free :: \"'a process \\<Rightarrow> bool\"\n  where   \"lifelock_free P \\<equiv> CHAOS UNIV \\<sqsubseteq>\\<^sub>F\\<^sub>D P\""], ["", "section\\<open>Some deadlock freeness laws\\<close>"], ["", "lemma DF_subset: \"A \\<noteq> {} \\<Longrightarrow> A \\<subseteq> B \\<Longrightarrow> DF B \\<sqsubseteq>\\<^sub>F\\<^sub>D DF A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<noteq> {}; A \\<subseteq> B\\<rbrakk>\n    \\<Longrightarrow> DF B \\<sqsubseteq>\\<^sub>F\\<^sub>D DF A", "apply(subst DF_def, unfold failure_divergence_refine_def, rule fix_ind)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>A \\<noteq> {}; A \\<subseteq> B\\<rbrakk>\n    \\<Longrightarrow> adm (\\<lambda>a. a \\<le> DF A)\n 2. \\<lbrakk>A \\<noteq> {}; A \\<subseteq> B\\<rbrakk>\n    \\<Longrightarrow> \\<bottom> \\<le> DF A\n 3. \\<And>x.\n       \\<lbrakk>A \\<noteq> {}; A \\<subseteq> B; x \\<le> DF A\\<rbrakk>\n       \\<Longrightarrow> (\\<Lambda> x.\n                             \\<sqinter>xa\\<in>B \\<rightarrow>  x)\\<cdot>\n                         x\n                         \\<le> DF A", "apply(rule le_adm, simp_all add:monofunI, subst DF_unfold)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>A \\<noteq> {}; A \\<subseteq> B; x \\<le> DF A\\<rbrakk>\n       \\<Longrightarrow> (\\<sqinter>xa\\<in>B \\<rightarrow>  x)\n                         \\<le> (\\<sqinter>z\\<in>A \\<rightarrow>  DF A)", "by (metis mndet_FD_subset mono_mndet_FD order.trans)"], ["", "lemma DF_Univ_freeness: \"A \\<noteq> {} \\<Longrightarrow> (DF A) \\<sqsubseteq>\\<^sub>F\\<^sub>D P  \\<Longrightarrow> deadlock_free P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<noteq> {}; DF A \\<sqsubseteq>\\<^sub>F\\<^sub>D P\\<rbrakk>\n    \\<Longrightarrow> deadlock_free P", "by (meson deadlock_free_def DF_subset failure_divergence_refine_def order.trans subset_UNIV)"], ["", "lemma deadlock_free_ndet: \"deadlock_free P \\<Longrightarrow> deadlock_free Q \\<Longrightarrow> deadlock_free (P \\<sqinter> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>deadlock_free P; deadlock_free Q\\<rbrakk>\n    \\<Longrightarrow> deadlock_free (P |-| Q)", "by (simp add: D_ndet F_ndet deadlock_free_def failure_divergence_refine_def le_ref_def)"], ["", "lemma deadlock_free_skip:\"DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV  \\<sqsubseteq>\\<^sub>F\\<^sub>D SKIP\""], ["proof (prove)\ngoal (1 subgoal):\n 1. DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV \\<sqsubseteq>\\<^sub>F\\<^sub>D\n    SKIP", "by(simp add:DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P_def failure_divergence_refine_def, rule fix_ind, simp_all)"], ["", "end"]]}