{"file_name": "/home/qj213/afp-2021-10-22/thys/HOL-CSP/Sync.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/HOL-CSP", "problem_names": ["lemma finiteSetinterleavingList: \"finite (set (setinterleavingList(s, X, t)))\"", "lemma sym : \"setinterleaving(s, X, t)= setinterleaving(t, X, s)\"", "lemma emptyLeftProperty:\"\\<forall>s. s setinterleaves (([], t), A)\\<longrightarrow>s=t\"", "lemma emptyLeftSelf: \" (\\<forall>t1. t1\\<in> set t\\<longrightarrow>t1\\<notin>A)\\<longrightarrow>t setinterleaves (([], t), A) \"", "lemma emptyLeftNonSync: \"\\<forall>s. s setinterleaves (([], t), A)\\<longrightarrow>(\\<forall>t1. t1\\<in> set t\\<longrightarrow>t1\\<notin>A)\"", "lemma ftf_syn1: \"a \\<notin> set(u) \\<and> a \\<notin> set(t) \\<and> s setinterleaves ((t, u), A) \\<longrightarrow> a \\<notin> set(s)\"", "lemma addNonSyncEmpty: \"sa setinterleaves (([], u), A) \\<and> y1 \\<notin> A \\<longrightarrow>\n    (sa @ [y1]) setinterleaves (([y1], u), A) \\<and> (sa @ [y1]) setinterleaves (([], u @ [y1]), A)\"", "lemma addNonSync: \"sa setinterleaves ((t,u),A)\\<and> y1 \\<notin> A\\<longrightarrow>\n(sa@[y1]) setinterleaves ((t@[y1],u),A)\\<and>(sa@[y1]) setinterleaves ((t,u@[y1]),A)\"", "lemma addSyncEmpty: \"sa setinterleaves (([], u), A) \\<and> y1 \\<in> A \\<longrightarrow> \n                    (sa @ [y1]) setinterleaves (([y1], u @ [y1]), A)\"", "lemma addSync: \"sa setinterleaves ((t,u),A)\\<and> y1 \\<in> A\\<longrightarrow>(sa@[y1]) setinterleaves ((t@[y1],u@[y1]),A)\"", "lemma doubleReverse: \"s1 setinterleaves ((t, u), A)\\<longrightarrow>(rev s1) setinterleaves ((rev t, rev u), A)\"", "lemma  ftf_syn21: \"(a\\<in>set(u)\\<and>a\\<notin>set(t)\\<or>a\\<in>set(t)\\<and>a\\<notin>set(u))\\<and>a\\<in>A\\<longrightarrow>setinterleaving(u, A ,t)= {}\"", "lemma ftf_syn32: \"u=u1@[tick]\\<and>t=t1@[tick]\\<and>s setinterleaves ((t, u), insert tick (ev ` A))\\<Longrightarrow>\n                  \\<exists>s1. s1 setinterleaves ((t1, u1), insert tick (ev ` A))\\<and> (s=s1@[tick])\"", "lemma syncWithTick_imp_NTF: \"(s @ [tick]) setinterleaves ((t, u),insert tick (ev ` A)) \\<Longrightarrow>t\\<in> T P\\<Longrightarrow>\n  u\\<in> T Q\\<Longrightarrow> \\<exists>t1 u1. t=t1@[tick] \\<and> u=u1@[tick]\\<and> s setinterleaves ((t1, u1), insert tick (ev ` A))\"", "lemma synPrefix1: \" ta = [] \\<Longrightarrow> \\<exists>t1 u1. (s @ t) setinterleaves ((ta, u), A) \\<longrightarrow> \n                    t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)\"", "lemma synPrefix: \"\\<exists>t1 u1. (s @ t) setinterleaves ((ta, u), A)\\<longrightarrow>\n                  t1\\<le>ta\\<and>u1\\<le>u\\<and>s setinterleaves ((t1, u1), A)\"", "lemma syncWithTick_imp_NTF1: \"(s @ [tick]) setinterleaves ((t, u), insert tick (ev ` A)) \\<Longrightarrow>\nt\\<in> T P\\<Longrightarrow>u\\<in> T Q\\<Longrightarrow> \\<exists> t u Xa Y. (t, Xa) \\<in> F P \\<and> ( (u, Y) \\<in> F Q \\<and> s setinterleaves \n((t, u), insert tick (ev ` A)) \\<and> X - {tick} = (Xa \\<union> Y) \\<inter> insert tick (ev ` A) \\<union> Xa \\<inter> Y)\"", "lemma ftf_syn: \"front_tickFree u\\<Longrightarrow>front_tickFree t\\<Longrightarrow>s setinterleaves ((t, u),insert tick (ev ` A))\n      \\<Longrightarrow>front_tickFree s\"", "lemma is_processT5_SYNC2: \"\\<And> sa Y t u Xa Ya.  (t,Xa) \\<in> F P \\<and> (u,Ya) \\<in> F Q \\<and>  \n(sa setinterleaves ((t,u),insert tick (ev ` A))) \\<Longrightarrow>\\<forall>c. c \\<in> Y \\<longrightarrow>(\\<forall> t1 u1. (sa@[c]) setinterleaves \n((t1,u1),insert tick (ev ` A))\\<longrightarrow>(((t1,{})\\<in>F P\\<longrightarrow>(u1, {})\\<notin>F Q)\\<and>((t1,{})\\<in>F Q\\<longrightarrow>(u1, {})\\<notin>F P))) \\<Longrightarrow>\n\\<exists>t2 u2 Xb. (t2, Xb) \\<in> F P \\<and> (\\<exists>Yb.(u2, Yb) \\<in> F Q \\<and>sa setinterleaves ((t2, u2), insert tick (ev ` A)) \n\\<and>(Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union> Xa \\<inter> Ya \\<union> Y = (Xb \\<union> Yb) \\<inter> insert tick (ev ` A) \\<union> Xb \\<inter> Yb)\"", "lemma pt3: \"ta \\<in> T P \\<Longrightarrow>u \\<in> T Q \\<Longrightarrow> (s @ t) setinterleaves ((ta, u), insert tick (ev ` A))\\<Longrightarrow>\n        \\<exists>t u X. (t, X) \\<in> F P \\<and>(\\<exists>Y. (u, Y) \\<in> F Q \\<and>s setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n                 tick \\<notin> X \\<and> tick \\<notin> Y \\<and> (X \\<union> Y) \\<inter> ev ` A = {} \\<and> X \\<inter> Y = {})\"", "lemma sync_maintains_is_process:\n \"is_process ({(s,R).\\<exists> t u X Y. (t,X) \\<in> F P \\<and> (u,Y) \\<in> F Q \\<and> \n                                     (s setinterleaves ((t,u),(ev`A) \\<union> {tick})) \\<and> \n                                     R = (X \\<union> Y) \\<inter> ((ev`A) \\<union> {tick}) \\<union> X \\<inter> Y} \\<union> \n                   {(s,R).\\<exists> t u r v. front_tickFree v \\<and> (tickFree r \\<or> v=[]) \\<and> \n                                     s = r@v \\<and> \n                                     (r setinterleaves ((t,u),(ev`A) \\<union> {tick})) \\<and>      \n          (t \\<in> D P \\<and> u \\<in> T Q \\<or> t \\<in> D Q \\<and> u \\<in> T P)},\n\n                   {s.    \\<exists> t u r v. front_tickFree v \\<and> (tickFree r \\<or> v=[]) \\<and> \n                                     s = r@v \\<and> \n                                     (r setinterleaves ((t,u),(ev`A) \\<union> {tick})) \\<and> \n                                     (t \\<in> D P \\<and> u \\<in> T Q \\<or> t \\<in> D Q \\<and> u \\<in> T P)})\"\n                    (is \"is_process(?f, ?d)\")", "lemmas  Rep_Abs_Sync[simp] = Abs_process_inverse[simplified, OF sync_maintains_is_process]", "lemma\n  F_sync    : \"F(P \\<lbrakk> A \\<rbrakk> Q) = \n                   {(s,R).\\<exists> t u X Y. (t,X) \\<in> F P \\<and> \n                                       (u,Y) \\<in> F Q \\<and> \n                                       s setinterleaves ((t,u),(ev`A) \\<union> {tick}) \\<and> \n                                       R = (X \\<union> Y) \\<inter> ((ev`A) \\<union> {tick}) \\<union> X \\<inter> Y} \\<union> \n                   {(s,R).\\<exists> t u r v. front_tickFree v \\<and> \n                                       (tickFree r \\<or> v=[]) \\<and> \n                                       s = r@v \\<and> \n                                       r setinterleaves ((t,u),(ev`A)\\<union>{tick}) \\<and> \n                                       (t \\<in> D P \\<and> u \\<in> T Q \\<or> t \\<in> D Q \\<and> u \\<in> T P)}\"", "lemma\n  D_sync    : \"D(P \\<lbrakk> A \\<rbrakk> Q) = \n                   {s.    \\<exists> t u r v. front_tickFree v \\<and> (tickFree r \\<or> v=[]) \\<and> \n                            s = r@v \\<and> r setinterleaves ((t,u),(ev`A) \\<union> {tick}) \\<and> \n                            (t \\<in> D P \\<and> u \\<in> T Q \\<or> t \\<in> D Q \\<and> u \\<in> T P)}\"", "lemma\n  T_sync    : \"T(P \\<lbrakk> A \\<rbrakk> Q) = \n                   {s.    \\<exists> t u. t \\<in> T P \\<and> u \\<in> T Q \\<and> \n                                 s setinterleaves ((t,u),(ev`A) \\<union> {tick})}\\<union>\n {s.    \\<exists> t u r v. front_tickFree v \\<and> (tickFree r \\<or> v=[]) \\<and> \n                            s = r@v \\<and> r setinterleaves ((t,u),(ev`A) \\<union> {tick}) \\<and> \n                            (t \\<in> D P \\<and> u \\<in> T Q \\<or> t \\<in> D Q \\<and> u \\<in> T P)}\"", "lemma mono_Sync_D1:  \n\"P \\<sqsubseteq> Q \\<Longrightarrow> D (Q \\<lbrakk> A \\<rbrakk> S) \\<subseteq> D (P \\<lbrakk> A \\<rbrakk> S)\"", "lemma mono_Sync_D2:\n\"P \\<sqsubseteq> Q\\<Longrightarrow>(\\<forall> s. s \\<notin> D (P  \\<lbrakk> A \\<rbrakk>  S) \\<longrightarrow> Ra (P  \\<lbrakk> A \\<rbrakk>  S) s = Ra (Q  \\<lbrakk> A \\<rbrakk>  S) s)\"", "lemma interPrefixEmpty: \"s setinterleaves ((t,[]),A)\\<and>t1<t\\<Longrightarrow>\\<exists>s1<s. s1 setinterleaves ((t1, []), A)\"", "lemma interPrefix:\"\\<exists>u1 s1. s setinterleaves((t,u),A)\\<and>t1<t\\<longrightarrow>u1\\<le>u\\<and>s1<s\\<and>s1 setinterleaves((t1,u1),A)\"", "lemma mono_sync2a:\"r\\<in>min_elems(D (P \\<lbrakk>A\\<rbrakk> S))\\<Longrightarrow>\\<exists>t u. r setinterleaves ((t, u),insert tick (ev ` A))\\<and>\n(t \\<in> min_elems(D P) \\<and> u \\<in> T S \\<or> t \\<in> min_elems(D S) \\<and> u \\<in> T P\\<and> u \\<in> (T P-(D P-min_elems(D P))))\"", "lemma mono_Sync_D3: \n  assumes ordered: \"P \\<sqsubseteq> Q\" \n  shows \"min_elems (D (P  \\<lbrakk>A\\<rbrakk> S)) \\<subseteq> T (Q  \\<lbrakk>A\\<rbrakk> S)\"", "lemma mono_D_syn: \"D (S \\<lbrakk> A \\<rbrakk> Q) = D (Q \\<lbrakk> A \\<rbrakk> S)\"", "lemma mono_T_syn: \"T (S \\<lbrakk> A \\<rbrakk> Q) = T (Q \\<lbrakk> A \\<rbrakk> S)\"", "lemma mono_F_syn: \"F (S \\<lbrakk> A \\<rbrakk> Q)  = F (Q \\<lbrakk> A \\<rbrakk> S) \"", "lemma mono_Ra_syn: \"Ra (S \\<lbrakk> A \\<rbrakk> Q) s = Ra (Q \\<lbrakk> A \\<rbrakk> S) s\"", "lemma mono_Sync[simp]     : \"P \\<sqsubseteq> Q \\<Longrightarrow> (P \\<lbrakk> A \\<rbrakk> S) \\<sqsubseteq> (Q \\<lbrakk> A \\<rbrakk> S)\"", "lemma mono_Sync_sym [simp]    : \"P \\<sqsubseteq> Q \\<Longrightarrow> (S \\<lbrakk> A \\<rbrakk> P) \\<sqsubseteq> (S \\<lbrakk> A \\<rbrakk> Q)\"", "lemma chain_Sync1: \"chain Y \\<Longrightarrow> chain (\\<lambda>i. Y i  \\<lbrakk> A \\<rbrakk> S)\"", "lemma chain_Sync2: \"chain Y \\<Longrightarrow> chain (\\<lambda>i. S  \\<lbrakk> A \\<rbrakk> Y i)\"", "lemma empty_setinterleaving : \"[] setinterleaves ((t, u), A) \\<Longrightarrow> t = []\"", "lemma inters_fin_fund: \"finite{(t, u). s setinterleaves ((t, u), A)}\"", "lemma inters_fin: \"finite{(t, u, r). r setinterleaves ((t, u), insert tick (ev ` A))\\<and> \n(\\<exists>v. x = r @ v \\<and> front_tickFree v \\<and> (tickFree r \\<or> v = []))}\" (is \"finite ?A\")", "lemma limproc_Sync_D: \"chain Y\\<Longrightarrow>D(lim_proc(range Y)\\<lbrakk> A \\<rbrakk> S)=D(lim_proc(range(\\<lambda>i. Y i \\<lbrakk> A \\<rbrakk> S)))\"", "lemma limproc_Sync_F_annex1: \" chain Y\\<Longrightarrow>\\<forall>n. (a, b) \\<in> F (Y n \\<lbrakk>A\\<rbrakk> S) \\<Longrightarrow> \\<exists>x. a \\<notin> D (Y x \\<lbrakk>A\\<rbrakk> S) \\<Longrightarrow>\n\\<exists>t u X. (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and> (\\<exists>Y. (u, Y) \\<in> F S \\<and> a setinterleaves((t, u),insert tick (ev ` A))\n\\<and> b = (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union> X \\<inter> Y)\"", "lemma limproc_Sync_F_annex2: \"chain Y\\<Longrightarrow>\\<forall>t u r. r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n(\\<forall>v. a = r @ v \\<longrightarrow> front_tickFree v \\<longrightarrow>\\<not> tickFree r \\<and> v \\<noteq> [] \\<or> ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and> \n(t \\<in> D S \\<longrightarrow> (\\<exists>x. u \\<notin> T (Y x))))\\<Longrightarrow>\\<exists>x. a \\<notin> D(Y x \\<lbrakk> A \\<rbrakk> S)\"", "lemma limproc_Sync_F: \"chain Y\\<Longrightarrow>F(lim_proc (range Y)\\<lbrakk> A \\<rbrakk>S)=F(lim_proc (range (\\<lambda>i. Y i \\<lbrakk> A \\<rbrakk> S)))\"", "lemma cont_left_sync : \"chain Y \\<Longrightarrow> ((\\<Squnion> i. Y i) \\<lbrakk> A \\<rbrakk> S) = (\\<Squnion> i. (Y i \\<lbrakk> A \\<rbrakk> S))\"", "lemma cont_right_sync : \"chain Y \\<Longrightarrow> (S \\<lbrakk> A \\<rbrakk> (\\<Squnion> i. Y i)) = (\\<Squnion> i. (S \\<lbrakk> A \\<rbrakk> Y i))\"", "lemma Sync_cont[simp]: \nassumes f:\"cont f\" \nand     g:\"cont g\"\nshows     \"cont (\\<lambda>x. (f x) \\<lbrakk>A\\<rbrakk> (g x))\""], "translations": [["", "lemma finiteSetinterleavingList: \"finite (set (setinterleavingList(s, X, t)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (set (setinterleavingList (s, X, t)))", "by auto"], ["", "lemma sym : \"setinterleaving(s, X, t)= setinterleaving(t, X, s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. setinterleaving (s, X, t) = setinterleaving (t, X, s)", "by (rule setinterleaving.induct[of \"\\<lambda>(s,X,t). setinterleaving (s, X, t) \n  = setinterleaving (t, X, s)\" \"(s, X, t)\", simplified], auto)"], ["", "abbreviation \"setinterleaves_syntax\"  \n                         (\"_ setinterleaves '(()'(_, _')(), _')\" [60,0,0,0]70)\nwhere\n \"u setinterleaves ((s, t), X) == (u \\<in> setinterleaving(s, X, t))\""], ["", "subsection\\<open>Definition\\<close>"], ["", "definition sync :: \"['a process,'a set,'a process] => 'a process\" \n           (\"(3_ \\<lbrakk>_\\<rbrakk>/ _)\" [14,0,15] 14)  \nwhere\n \"P \\<lbrakk> A \\<rbrakk> Q == \n       Abs_process({(s,R).\\<exists> t u X Y. (t,X) \\<in> F P \\<and> (u,Y) \\<in> F Q \\<and> \n                                     (s setinterleaves ((t,u),(ev`A) \\<union> {tick})) \\<and> \n                                     R = (X \\<union> Y) \\<inter> ((ev`A) \\<union> {tick}) \\<union> X \\<inter> Y} \\<union> \n                   {(s,R).\\<exists> t u r v. front_tickFree v \\<and> (tickFree r \\<or> v=[]) \\<and> \n                                     s = r@v \\<and> \n                                     (r setinterleaves ((t,u),(ev`A) \\<union> {tick})) \\<and> \n          (t \\<in> D P \\<and> u \\<in> T Q \\<or> t \\<in> D Q \\<and> u \\<in> T P)},\n\n                   {s.    \\<exists> t u r v. front_tickFree v \\<and> (tickFree r \\<or> v=[]) \\<and> \n                                     s = r@v \\<and> \n                                     (r setinterleaves ((t,u),(ev`A) \\<union> {tick})) \\<and> \n                                     (t \\<in> D P \\<and> u \\<in> T Q \\<or> t \\<in> D Q \\<and> u \\<in> T P)})\""], ["", "subsection\\<open>Consequences\\<close>"], ["", "lemma emptyLeftProperty:\"\\<forall>s. s setinterleaves (([], t), A)\\<longrightarrow>s=t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s. s setinterleaves (([], t), A) \\<longrightarrow> s = t", "apply(induct_tac t)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>s. s setinterleaves (([], []), A) \\<longrightarrow> s = []\n 2. \\<And>a list.\n       \\<forall>s.\n          s setinterleaves (([], list), A) \\<longrightarrow>\n          s = list \\<Longrightarrow>\n       \\<forall>s.\n          s setinterleaves (([], a # list), A) \\<longrightarrow>\n          s = a # list", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<forall>s.\n          s setinterleaves (([], list), A) \\<longrightarrow>\n          s = list \\<Longrightarrow>\n       \\<forall>s.\n          s setinterleaves (([], a # list), A) \\<longrightarrow>\n          s = a # list", "by auto"], ["", "lemma emptyLeftSelf: \" (\\<forall>t1. t1\\<in> set t\\<longrightarrow>t1\\<notin>A)\\<longrightarrow>t setinterleaves (([], t), A) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>t1.\n        t1 \\<in> set t \\<longrightarrow> t1 \\<notin> A) \\<longrightarrow>\n    t setinterleaves (([], t), A)", "apply(induct_tac t)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (\\<forall>t1.\n        t1 \\<in> set [] \\<longrightarrow> t1 \\<notin> A) \\<longrightarrow>\n    [] setinterleaves (([], []), A)\n 2. \\<And>a list.\n       (\\<forall>t1.\n           t1 \\<in> set list \\<longrightarrow>\n           t1 \\<notin> A) \\<longrightarrow>\n       list setinterleaves (([], list), A) \\<Longrightarrow>\n       (\\<forall>t1.\n           t1 \\<in> set (a # list) \\<longrightarrow>\n           t1 \\<notin> A) \\<longrightarrow>\n       a # list setinterleaves (([], a # list), A)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       (\\<forall>t1.\n           t1 \\<in> set list \\<longrightarrow>\n           t1 \\<notin> A) \\<longrightarrow>\n       list setinterleaves (([], list), A) \\<Longrightarrow>\n       (\\<forall>t1.\n           t1 \\<in> set (a # list) \\<longrightarrow>\n           t1 \\<notin> A) \\<longrightarrow>\n       a # list setinterleaves (([], a # list), A)", "by auto"], ["", "lemma emptyLeftNonSync: \"\\<forall>s. s setinterleaves (([], t), A)\\<longrightarrow>(\\<forall>t1. t1\\<in> set t\\<longrightarrow>t1\\<notin>A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s.\n       s setinterleaves (([], t), A) \\<longrightarrow>\n       (\\<forall>t1. t1 \\<in> set t \\<longrightarrow> t1 \\<notin> A)", "apply(induct_tac t)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>s.\n       s setinterleaves (([], []), A) \\<longrightarrow>\n       (\\<forall>t1. t1 \\<in> set [] \\<longrightarrow> t1 \\<notin> A)\n 2. \\<And>a list.\n       \\<forall>s.\n          s setinterleaves (([], list), A) \\<longrightarrow>\n          (\\<forall>t1.\n              t1 \\<in> set list \\<longrightarrow>\n              t1 \\<notin> A) \\<Longrightarrow>\n       \\<forall>s.\n          s setinterleaves (([], a # list), A) \\<longrightarrow>\n          (\\<forall>t1.\n              t1 \\<in> set (a # list) \\<longrightarrow> t1 \\<notin> A)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<forall>s.\n          s setinterleaves (([], list), A) \\<longrightarrow>\n          (\\<forall>t1.\n              t1 \\<in> set list \\<longrightarrow>\n              t1 \\<notin> A) \\<Longrightarrow>\n       \\<forall>s.\n          s setinterleaves (([], a # list), A) \\<longrightarrow>\n          (\\<forall>t1.\n              t1 \\<in> set (a # list) \\<longrightarrow> t1 \\<notin> A)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<forall>s.\n          s setinterleaves (([], list), A) \\<longrightarrow>\n          (\\<forall>t1.\n              t1 \\<in> set list \\<longrightarrow>\n              t1 \\<notin> A) \\<Longrightarrow>\n       \\<forall>s.\n          s setinterleaves (([], a # list), A) \\<longrightarrow>\n          (\\<forall>t1.\n              t1 \\<in> set (a # list) \\<longrightarrow> t1 \\<notin> A)", "fix a list"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<forall>s.\n          s setinterleaves (([], list), A) \\<longrightarrow>\n          (\\<forall>t1.\n              t1 \\<in> set list \\<longrightarrow>\n              t1 \\<notin> A) \\<Longrightarrow>\n       \\<forall>s.\n          s setinterleaves (([], a # list), A) \\<longrightarrow>\n          (\\<forall>t1.\n              t1 \\<in> set (a # list) \\<longrightarrow> t1 \\<notin> A)", "assume a: \"\\<forall>s. s setinterleaves (([], list), A) \\<longrightarrow> (\\<forall>t1. t1 \\<in> set list \\<longrightarrow> t1 \\<notin> A)\""], ["proof (state)\nthis:\n  \\<forall>s.\n     s setinterleaves (([], list), A) \\<longrightarrow>\n     (\\<forall>t1. t1 \\<in> set list \\<longrightarrow> t1 \\<notin> A)\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<forall>s.\n          s setinterleaves (([], list), A) \\<longrightarrow>\n          (\\<forall>t1.\n              t1 \\<in> set list \\<longrightarrow>\n              t1 \\<notin> A) \\<Longrightarrow>\n       \\<forall>s.\n          s setinterleaves (([], a # list), A) \\<longrightarrow>\n          (\\<forall>t1.\n              t1 \\<in> set (a # list) \\<longrightarrow> t1 \\<notin> A)", "thus \"\\<forall>s. s setinterleaves (([], a # list), A) \\<longrightarrow> (\\<forall>t1. t1 \\<in> set (a # list) \\<longrightarrow> t1 \\<notin> A)\""], ["proof (prove)\nusing this:\n  \\<forall>s.\n     s setinterleaves (([], list), A) \\<longrightarrow>\n     (\\<forall>t1. t1 \\<in> set list \\<longrightarrow> t1 \\<notin> A)\n\ngoal (1 subgoal):\n 1. \\<forall>s.\n       s setinterleaves (([], a # list), A) \\<longrightarrow>\n       (\\<forall>t1.\n           t1 \\<in> set (a # list) \\<longrightarrow> t1 \\<notin> A)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>s.\n       s setinterleaves (([], list), A) \\<longrightarrow>\n       (\\<forall>t1.\n           t1 \\<in> set list \\<longrightarrow>\n           t1 \\<notin> A) \\<Longrightarrow>\n    \\<forall>s.\n       s setinterleaves (([], a # list), A) \\<longrightarrow>\n       (\\<forall>t1.\n           t1 \\<in> set (a # list) \\<longrightarrow> t1 \\<notin> A)", "have th: \"s setinterleaves (([], a # list), A)\\<longrightarrow>a\\<notin>A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s setinterleaves (([], a # list), A) \\<longrightarrow> a \\<notin> A", "by auto"], ["proof (state)\nthis:\n  s setinterleaves (([], a # list), A) \\<longrightarrow> a \\<notin> A\n\ngoal (1 subgoal):\n 1. \\<forall>s.\n       s setinterleaves (([], list), A) \\<longrightarrow>\n       (\\<forall>t1.\n           t1 \\<in> set list \\<longrightarrow>\n           t1 \\<notin> A) \\<Longrightarrow>\n    \\<forall>s.\n       s setinterleaves (([], a # list), A) \\<longrightarrow>\n       (\\<forall>t1.\n           t1 \\<in> set (a # list) \\<longrightarrow> t1 \\<notin> A)", "obtain s1 where th1: \"s setinterleaves (([], a # list), A)\\<longrightarrow>s1 setinterleaves (([], list), A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s1.\n        s setinterleaves (([], a # list), A) \\<longrightarrow>\n        s1 setinterleaves (([], list), A) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using mem_Collect_eq th"], ["proof (prove)\nusing this:\n  (?a \\<in> Collect ?P) = ?P ?a\n  s setinterleaves (([], a # list), A) \\<longrightarrow> a \\<notin> A\n\ngoal (1 subgoal):\n 1. (\\<And>s1.\n        s setinterleaves (([], a # list), A) \\<longrightarrow>\n        s1 setinterleaves (([], list), A) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  s setinterleaves (([], a # list), A) \\<longrightarrow>\n  s1 setinterleaves (([], list), A)\n\ngoal (1 subgoal):\n 1. \\<forall>s.\n       s setinterleaves (([], list), A) \\<longrightarrow>\n       (\\<forall>t1.\n           t1 \\<in> set list \\<longrightarrow>\n           t1 \\<notin> A) \\<Longrightarrow>\n    \\<forall>s.\n       s setinterleaves (([], a # list), A) \\<longrightarrow>\n       (\\<forall>t1.\n           t1 \\<in> set (a # list) \\<longrightarrow> t1 \\<notin> A)", "from a th1"], ["proof (chain)\npicking this:\n  \\<forall>s.\n     s setinterleaves (([], list), A) \\<longrightarrow>\n     (\\<forall>t1. t1 \\<in> set list \\<longrightarrow> t1 \\<notin> A)\n  s setinterleaves (([], a # list), A) \\<longrightarrow>\n  s1 setinterleaves (([], list), A)", "have th2: \"\\<forall>s. s setinterleaves (([], a # list), A)\\<longrightarrow>(\\<forall>t. t\\<in> set list\\<longrightarrow>t \\<notin> A)\""], ["proof (prove)\nusing this:\n  \\<forall>s.\n     s setinterleaves (([], list), A) \\<longrightarrow>\n     (\\<forall>t1. t1 \\<in> set list \\<longrightarrow> t1 \\<notin> A)\n  s setinterleaves (([], a # list), A) \\<longrightarrow>\n  s1 setinterleaves (([], list), A)\n\ngoal (1 subgoal):\n 1. \\<forall>s.\n       s setinterleaves (([], a # list), A) \\<longrightarrow>\n       (\\<forall>t. t \\<in> set list \\<longrightarrow> t \\<notin> A)", "by auto"], ["proof (state)\nthis:\n  \\<forall>s.\n     s setinterleaves (([], a # list), A) \\<longrightarrow>\n     (\\<forall>t. t \\<in> set list \\<longrightarrow> t \\<notin> A)\n\ngoal (1 subgoal):\n 1. \\<forall>s.\n       s setinterleaves (([], list), A) \\<longrightarrow>\n       (\\<forall>t1.\n           t1 \\<in> set list \\<longrightarrow>\n           t1 \\<notin> A) \\<Longrightarrow>\n    \\<forall>s.\n       s setinterleaves (([], a # list), A) \\<longrightarrow>\n       (\\<forall>t1.\n           t1 \\<in> set (a # list) \\<longrightarrow> t1 \\<notin> A)", "with a"], ["proof (chain)\npicking this:\n  \\<forall>s.\n     s setinterleaves (([], list), A) \\<longrightarrow>\n     (\\<forall>t1. t1 \\<in> set list \\<longrightarrow> t1 \\<notin> A)\n  \\<forall>s.\n     s setinterleaves (([], a # list), A) \\<longrightarrow>\n     (\\<forall>t. t \\<in> set list \\<longrightarrow> t \\<notin> A)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>s.\n     s setinterleaves (([], list), A) \\<longrightarrow>\n     (\\<forall>t1. t1 \\<in> set list \\<longrightarrow> t1 \\<notin> A)\n  \\<forall>s.\n     s setinterleaves (([], a # list), A) \\<longrightarrow>\n     (\\<forall>t. t \\<in> set list \\<longrightarrow> t \\<notin> A)\n\ngoal (1 subgoal):\n 1. \\<forall>s.\n       s setinterleaves (([], a # list), A) \\<longrightarrow>\n       (\\<forall>t1.\n           t1 \\<in> set (a # list) \\<longrightarrow> t1 \\<notin> A)", "by (metis (no_types, lifting) empty_iff set_ConsD setinterleaving.simps(2))"], ["proof (state)\nthis:\n  \\<forall>s.\n     s setinterleaves (([], a # list), A) \\<longrightarrow>\n     (\\<forall>t1. t1 \\<in> set (a # list) \\<longrightarrow> t1 \\<notin> A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>s.\n     s setinterleaves (([], a # list), A) \\<longrightarrow>\n     (\\<forall>t1. t1 \\<in> set (a # list) \\<longrightarrow> t1 \\<notin> A)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ftf_syn1: \"a \\<notin> set(u) \\<and> a \\<notin> set(t) \\<and> s setinterleaves ((t, u), A) \\<longrightarrow> a \\<notin> set(s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<notin> set u \\<and>\n    a \\<notin> set t \\<and> s setinterleaves ((t, u), A) \\<longrightarrow>\n    a \\<notin> set s", "proof (induction \"length t + length u\" arbitrary:s t u rule:nat_less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t u s.\n       \\<forall>m<length t + length u.\n          \\<forall>x xa.\n             m = length x + length xa \\<longrightarrow>\n             (\\<forall>xb.\n                 a \\<notin> set xa \\<and>\n                 a \\<notin> set x \\<and>\n                 xb setinterleaves ((x, xa), A) \\<longrightarrow>\n                 a \\<notin> set xb) \\<Longrightarrow>\n       a \\<notin> set u \\<and>\n       a \\<notin> set t \\<and>\n       s setinterleaves ((t, u), A) \\<longrightarrow>\n       a \\<notin> set s", "case 1"], ["proof (state)\nthis:\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            a \\<notin> set xa \\<and>\n            a \\<notin> set x \\<and>\n            xb setinterleaves ((x, xa), A) \\<longrightarrow>\n            a \\<notin> set xb)\n\ngoal (1 subgoal):\n 1. \\<And>t u s.\n       \\<forall>m<length t + length u.\n          \\<forall>x xa.\n             m = length x + length xa \\<longrightarrow>\n             (\\<forall>xb.\n                 a \\<notin> set xa \\<and>\n                 a \\<notin> set x \\<and>\n                 xb setinterleaves ((x, xa), A) \\<longrightarrow>\n                 a \\<notin> set xb) \\<Longrightarrow>\n       a \\<notin> set u \\<and>\n       a \\<notin> set t \\<and>\n       s setinterleaves ((t, u), A) \\<longrightarrow>\n       a \\<notin> set s", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<notin> set u \\<and>\n    a \\<notin> set t \\<and> s setinterleaves ((t, u), A) \\<longrightarrow>\n    a \\<notin> set s", "apply(cases t)"], ["proof (prove)\ngoal (2 subgoals):\n 1. t = [] \\<Longrightarrow>\n    a \\<notin> set u \\<and>\n    a \\<notin> set t \\<and> s setinterleaves ((t, u), A) \\<longrightarrow>\n    a \\<notin> set s\n 2. \\<And>aa list.\n       t = aa # list \\<Longrightarrow>\n       a \\<notin> set u \\<and>\n       a \\<notin> set t \\<and>\n       s setinterleaves ((t, u), A) \\<longrightarrow>\n       a \\<notin> set s", "using sym emptyLeftProperty"], ["proof (prove)\nusing this:\n  setinterleaving (?s, ?X, ?t) = setinterleaving (?t, ?X, ?s)\n  \\<forall>s. s setinterleaves (([], ?t), ?A) \\<longrightarrow> s = ?t\n\ngoal (2 subgoals):\n 1. t = [] \\<Longrightarrow>\n    a \\<notin> set u \\<and>\n    a \\<notin> set t \\<and> s setinterleaves ((t, u), A) \\<longrightarrow>\n    a \\<notin> set s\n 2. \\<And>aa list.\n       t = aa # list \\<Longrightarrow>\n       a \\<notin> set u \\<and>\n       a \\<notin> set t \\<and>\n       s setinterleaves ((t, u), A) \\<longrightarrow>\n       a \\<notin> set s", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       t = aa # list \\<Longrightarrow>\n       a \\<notin> set u \\<and>\n       a \\<notin> set t \\<and>\n       s setinterleaves ((t, u), A) \\<longrightarrow>\n       a \\<notin> set s", "apply(cases u)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa list.\n       \\<lbrakk>t = aa # list; u = []\\<rbrakk>\n       \\<Longrightarrow> a \\<notin> set u \\<and>\n                         a \\<notin> set t \\<and>\n                         s setinterleaves ((t, u), A) \\<longrightarrow>\n                         a \\<notin> set s\n 2. \\<And>aa list aaa lista.\n       \\<lbrakk>t = aa # list; u = aaa # lista\\<rbrakk>\n       \\<Longrightarrow> a \\<notin> set u \\<and>\n                         a \\<notin> set t \\<and>\n                         s setinterleaves ((t, u), A) \\<longrightarrow>\n                         a \\<notin> set s", "using sym emptyLeftProperty"], ["proof (prove)\nusing this:\n  setinterleaving (?s, ?X, ?t) = setinterleaving (?t, ?X, ?s)\n  \\<forall>s. s setinterleaves (([], ?t), ?A) \\<longrightarrow> s = ?t\n\ngoal (2 subgoals):\n 1. \\<And>aa list.\n       \\<lbrakk>t = aa # list; u = []\\<rbrakk>\n       \\<Longrightarrow> a \\<notin> set u \\<and>\n                         a \\<notin> set t \\<and>\n                         s setinterleaves ((t, u), A) \\<longrightarrow>\n                         a \\<notin> set s\n 2. \\<And>aa list aaa lista.\n       \\<lbrakk>t = aa # list; u = aaa # lista\\<rbrakk>\n       \\<Longrightarrow> a \\<notin> set u \\<and>\n                         a \\<notin> set t \\<and>\n                         s setinterleaves ((t, u), A) \\<longrightarrow>\n                         a \\<notin> set s", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa list aaa lista.\n       \\<lbrakk>t = aa # list; u = aaa # lista\\<rbrakk>\n       \\<Longrightarrow> a \\<notin> set u \\<and>\n                         a \\<notin> set t \\<and>\n                         s setinterleaves ((t, u), A) \\<longrightarrow>\n                         a \\<notin> set s", "apply(simp split:if_splits, intro conjI impI, elim conjE disjE exE)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>aa list aaa lista u.\n       \\<lbrakk>t = aa # list; u = aaa # lista; aa = aaa; aaa \\<notin> A;\n        a \\<noteq> aaa; a \\<notin> set lista; a \\<noteq> aaa;\n        a \\<notin> set list; s = aaa # u;\n        u setinterleaves ((list, aaa # lista), A)\\<rbrakk>\n       \\<Longrightarrow> a \\<notin> set s\n 2. \\<And>aa list aaa lista u.\n       \\<lbrakk>t = aa # list; u = aaa # lista; aa = aaa; aaa \\<notin> A;\n        a \\<noteq> aaa; a \\<notin> set lista; a \\<noteq> aaa;\n        a \\<notin> set list; s = aaa # u;\n        u setinterleaves ((aaa # list, lista), A)\\<rbrakk>\n       \\<Longrightarrow> a \\<notin> set s\n 3. \\<And>aa list aaa lista.\n       \\<lbrakk>t = aa # list; u = aaa # lista; aa = aaa; aaa \\<in> A;\n        a \\<noteq> aaa \\<and>\n        a \\<notin> set lista \\<and>\n        a \\<noteq> aaa \\<and>\n        a \\<notin> set list \\<and>\n        (\\<exists>u.\n            s = aaa # u \\<and> u setinterleaves ((list, lista), A))\\<rbrakk>\n       \\<Longrightarrow> a \\<notin> set s\n 4. \\<And>aa list aaa lista.\n       \\<lbrakk>t = aa # list; u = aaa # lista; aa \\<noteq> aaa;\n        aaa \\<notin> A; aa \\<in> A;\n        a \\<noteq> aaa \\<and>\n        a \\<notin> set lista \\<and>\n        a \\<noteq> aa \\<and>\n        a \\<notin> set list \\<and>\n        (\\<exists>u.\n            s = aaa # u \\<and>\n            u setinterleaves ((aa # list, lista), A))\\<rbrakk>\n       \\<Longrightarrow> a \\<notin> set s\n 5. \\<And>aa list aaa lista.\n       \\<lbrakk>t = aa # list; u = aaa # lista; aa \\<noteq> aaa;\n        aaa \\<notin> A; aa \\<notin> A;\n        a \\<noteq> aaa \\<and>\n        a \\<notin> set lista \\<and>\n        a \\<noteq> aa \\<and>\n        a \\<notin> set list \\<and>\n        ((\\<exists>u.\n             s = aa # u \\<and>\n             u setinterleaves ((list, aaa # lista), A)) \\<or>\n         (\\<exists>u.\n             s = aaa # u \\<and>\n             u setinterleaves ((aa # list, lista), A)))\\<rbrakk>\n       \\<Longrightarrow> a \\<notin> set s\n 6. \\<And>aa list aaa lista.\n       \\<lbrakk>t = aa # list; u = aaa # lista; aa \\<noteq> aaa;\n        aaa \\<in> A; aa \\<notin> A;\n        a \\<noteq> aaa \\<and>\n        a \\<notin> set lista \\<and>\n        a \\<noteq> aa \\<and>\n        a \\<notin> set list \\<and>\n        (\\<exists>u.\n            s = aa # u \\<and>\n            u setinterleaves ((list, aaa # lista), A))\\<rbrakk>\n       \\<Longrightarrow> a \\<notin> set s", "apply (metis \"1.hyps\" add_less_le_mono length_Cons lessI order_refl set_ConsD)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>aa list aaa lista u.\n       \\<lbrakk>t = aa # list; u = aaa # lista; aa = aaa; aaa \\<notin> A;\n        a \\<noteq> aaa; a \\<notin> set lista; a \\<noteq> aaa;\n        a \\<notin> set list; s = aaa # u;\n        u setinterleaves ((aaa # list, lista), A)\\<rbrakk>\n       \\<Longrightarrow> a \\<notin> set s\n 2. \\<And>aa list aaa lista.\n       \\<lbrakk>t = aa # list; u = aaa # lista; aa = aaa; aaa \\<in> A;\n        a \\<noteq> aaa \\<and>\n        a \\<notin> set lista \\<and>\n        a \\<noteq> aaa \\<and>\n        a \\<notin> set list \\<and>\n        (\\<exists>u.\n            s = aaa # u \\<and> u setinterleaves ((list, lista), A))\\<rbrakk>\n       \\<Longrightarrow> a \\<notin> set s\n 3. \\<And>aa list aaa lista.\n       \\<lbrakk>t = aa # list; u = aaa # lista; aa \\<noteq> aaa;\n        aaa \\<notin> A; aa \\<in> A;\n        a \\<noteq> aaa \\<and>\n        a \\<notin> set lista \\<and>\n        a \\<noteq> aa \\<and>\n        a \\<notin> set list \\<and>\n        (\\<exists>u.\n            s = aaa # u \\<and>\n            u setinterleaves ((aa # list, lista), A))\\<rbrakk>\n       \\<Longrightarrow> a \\<notin> set s\n 4. \\<And>aa list aaa lista.\n       \\<lbrakk>t = aa # list; u = aaa # lista; aa \\<noteq> aaa;\n        aaa \\<notin> A; aa \\<notin> A;\n        a \\<noteq> aaa \\<and>\n        a \\<notin> set lista \\<and>\n        a \\<noteq> aa \\<and>\n        a \\<notin> set list \\<and>\n        ((\\<exists>u.\n             s = aa # u \\<and>\n             u setinterleaves ((list, aaa # lista), A)) \\<or>\n         (\\<exists>u.\n             s = aaa # u \\<and>\n             u setinterleaves ((aa # list, lista), A)))\\<rbrakk>\n       \\<Longrightarrow> a \\<notin> set s\n 5. \\<And>aa list aaa lista.\n       \\<lbrakk>t = aa # list; u = aaa # lista; aa \\<noteq> aaa;\n        aaa \\<in> A; aa \\<notin> A;\n        a \\<noteq> aaa \\<and>\n        a \\<notin> set lista \\<and>\n        a \\<noteq> aa \\<and>\n        a \\<notin> set list \\<and>\n        (\\<exists>u.\n            s = aa # u \\<and>\n            u setinterleaves ((list, aaa # lista), A))\\<rbrakk>\n       \\<Longrightarrow> a \\<notin> set s", "apply (metis \"1.hyps\" add_Suc_right length_Cons lessI set_ConsD)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>aa list aaa lista.\n       \\<lbrakk>t = aa # list; u = aaa # lista; aa = aaa; aaa \\<in> A;\n        a \\<noteq> aaa \\<and>\n        a \\<notin> set lista \\<and>\n        a \\<noteq> aaa \\<and>\n        a \\<notin> set list \\<and>\n        (\\<exists>u.\n            s = aaa # u \\<and> u setinterleaves ((list, lista), A))\\<rbrakk>\n       \\<Longrightarrow> a \\<notin> set s\n 2. \\<And>aa list aaa lista.\n       \\<lbrakk>t = aa # list; u = aaa # lista; aa \\<noteq> aaa;\n        aaa \\<notin> A; aa \\<in> A;\n        a \\<noteq> aaa \\<and>\n        a \\<notin> set lista \\<and>\n        a \\<noteq> aa \\<and>\n        a \\<notin> set list \\<and>\n        (\\<exists>u.\n            s = aaa # u \\<and>\n            u setinterleaves ((aa # list, lista), A))\\<rbrakk>\n       \\<Longrightarrow> a \\<notin> set s\n 3. \\<And>aa list aaa lista.\n       \\<lbrakk>t = aa # list; u = aaa # lista; aa \\<noteq> aaa;\n        aaa \\<notin> A; aa \\<notin> A;\n        a \\<noteq> aaa \\<and>\n        a \\<notin> set lista \\<and>\n        a \\<noteq> aa \\<and>\n        a \\<notin> set list \\<and>\n        ((\\<exists>u.\n             s = aa # u \\<and>\n             u setinterleaves ((list, aaa # lista), A)) \\<or>\n         (\\<exists>u.\n             s = aaa # u \\<and>\n             u setinterleaves ((aa # list, lista), A)))\\<rbrakk>\n       \\<Longrightarrow> a \\<notin> set s\n 4. \\<And>aa list aaa lista.\n       \\<lbrakk>t = aa # list; u = aaa # lista; aa \\<noteq> aaa;\n        aaa \\<in> A; aa \\<notin> A;\n        a \\<noteq> aaa \\<and>\n        a \\<notin> set lista \\<and>\n        a \\<noteq> aa \\<and>\n        a \\<notin> set list \\<and>\n        (\\<exists>u.\n            s = aa # u \\<and>\n            u setinterleaves ((list, aaa # lista), A))\\<rbrakk>\n       \\<Longrightarrow> a \\<notin> set s", "apply (metis \"1.hyps\" add_less_mono length_Cons lessI set_ConsD)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>aa list aaa lista.\n       \\<lbrakk>t = aa # list; u = aaa # lista; aa \\<noteq> aaa;\n        aaa \\<notin> A; aa \\<in> A;\n        a \\<noteq> aaa \\<and>\n        a \\<notin> set lista \\<and>\n        a \\<noteq> aa \\<and>\n        a \\<notin> set list \\<and>\n        (\\<exists>u.\n            s = aaa # u \\<and>\n            u setinterleaves ((aa # list, lista), A))\\<rbrakk>\n       \\<Longrightarrow> a \\<notin> set s\n 2. \\<And>aa list aaa lista.\n       \\<lbrakk>t = aa # list; u = aaa # lista; aa \\<noteq> aaa;\n        aaa \\<notin> A; aa \\<notin> A;\n        a \\<noteq> aaa \\<and>\n        a \\<notin> set lista \\<and>\n        a \\<noteq> aa \\<and>\n        a \\<notin> set list \\<and>\n        ((\\<exists>u.\n             s = aa # u \\<and>\n             u setinterleaves ((list, aaa # lista), A)) \\<or>\n         (\\<exists>u.\n             s = aaa # u \\<and>\n             u setinterleaves ((aa # list, lista), A)))\\<rbrakk>\n       \\<Longrightarrow> a \\<notin> set s\n 3. \\<And>aa list aaa lista.\n       \\<lbrakk>t = aa # list; u = aaa # lista; aa \\<noteq> aaa;\n        aaa \\<in> A; aa \\<notin> A;\n        a \\<noteq> aaa \\<and>\n        a \\<notin> set lista \\<and>\n        a \\<noteq> aa \\<and>\n        a \\<notin> set list \\<and>\n        (\\<exists>u.\n            s = aa # u \\<and>\n            u setinterleaves ((list, aaa # lista), A))\\<rbrakk>\n       \\<Longrightarrow> a \\<notin> set s", "apply (metis \"1.hyps\" add_Suc_right length_Cons lessI set_ConsD)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa list aaa lista.\n       \\<lbrakk>t = aa # list; u = aaa # lista; aa \\<noteq> aaa;\n        aaa \\<notin> A; aa \\<notin> A;\n        a \\<noteq> aaa \\<and>\n        a \\<notin> set lista \\<and>\n        a \\<noteq> aa \\<and>\n        a \\<notin> set list \\<and>\n        ((\\<exists>u.\n             s = aa # u \\<and>\n             u setinterleaves ((list, aaa # lista), A)) \\<or>\n         (\\<exists>u.\n             s = aaa # u \\<and>\n             u setinterleaves ((aa # list, lista), A)))\\<rbrakk>\n       \\<Longrightarrow> a \\<notin> set s\n 2. \\<And>aa list aaa lista.\n       \\<lbrakk>t = aa # list; u = aaa # lista; aa \\<noteq> aaa;\n        aaa \\<in> A; aa \\<notin> A;\n        a \\<noteq> aaa \\<and>\n        a \\<notin> set lista \\<and>\n        a \\<noteq> aa \\<and>\n        a \\<notin> set list \\<and>\n        (\\<exists>u.\n            s = aa # u \\<and>\n            u setinterleaves ((list, aaa # lista), A))\\<rbrakk>\n       \\<Longrightarrow> a \\<notin> set s", "apply (metis (no_types, hide_lams) \"1.hyps\" add.commute add_Suc_right insert_iff \n                                         length_Cons lessI list.simps(15))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa list aaa lista.\n       \\<lbrakk>t = aa # list; u = aaa # lista; aa \\<noteq> aaa;\n        aaa \\<in> A; aa \\<notin> A;\n        a \\<noteq> aaa \\<and>\n        a \\<notin> set lista \\<and>\n        a \\<noteq> aa \\<and>\n        a \\<notin> set list \\<and>\n        (\\<exists>u.\n            s = aa # u \\<and>\n            u setinterleaves ((list, aaa # lista), A))\\<rbrakk>\n       \\<Longrightarrow> a \\<notin> set s", "by (metis \"1.hyps\" add_less_le_mono length_Cons lessI order_refl set_ConsD)"], ["proof (state)\nthis:\n  a \\<notin> set u \\<and>\n  a \\<notin> set t \\<and> s setinterleaves ((t, u), A) \\<longrightarrow>\n  a \\<notin> set s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma addNonSyncEmpty: \"sa setinterleaves (([], u), A) \\<and> y1 \\<notin> A \\<longrightarrow>\n    (sa @ [y1]) setinterleaves (([y1], u), A) \\<and> (sa @ [y1]) setinterleaves (([], u @ [y1]), A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sa setinterleaves (([], u), A) \\<and> y1 \\<notin> A \\<longrightarrow>\n    sa @ [y1] setinterleaves (([y1], u), A) \\<and>\n    sa @ [y1] setinterleaves (([], u @ [y1]), A)", "proof (induction \"length u\" arbitrary:sa u rule:nat_less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u sa.\n       \\<forall>m<length u.\n          \\<forall>x.\n             m = length x \\<longrightarrow>\n             (\\<forall>xa.\n                 xa setinterleaves (([], x), A) \\<and>\n                 y1 \\<notin> A \\<longrightarrow>\n                 xa @ [y1] setinterleaves (([y1], x), A) \\<and>\n                 xa @\n                 [y1] setinterleaves (([], x @ [y1]), A)) \\<Longrightarrow>\n       sa setinterleaves (([], u), A) \\<and> y1 \\<notin> A \\<longrightarrow>\n       sa @ [y1] setinterleaves (([y1], u), A) \\<and>\n       sa @ [y1] setinterleaves (([], u @ [y1]), A)", "case 1"], ["proof (state)\nthis:\n  \\<forall>m<length u.\n     \\<forall>x.\n        m = length x \\<longrightarrow>\n        (\\<forall>xa.\n            xa setinterleaves (([], x), A) \\<and>\n            y1 \\<notin> A \\<longrightarrow>\n            xa @ [y1] setinterleaves (([y1], x), A) \\<and>\n            xa @ [y1] setinterleaves (([], x @ [y1]), A))\n\ngoal (1 subgoal):\n 1. \\<And>u sa.\n       \\<forall>m<length u.\n          \\<forall>x.\n             m = length x \\<longrightarrow>\n             (\\<forall>xa.\n                 xa setinterleaves (([], x), A) \\<and>\n                 y1 \\<notin> A \\<longrightarrow>\n                 xa @ [y1] setinterleaves (([y1], x), A) \\<and>\n                 xa @\n                 [y1] setinterleaves (([], x @ [y1]), A)) \\<Longrightarrow>\n       sa setinterleaves (([], u), A) \\<and> y1 \\<notin> A \\<longrightarrow>\n       sa @ [y1] setinterleaves (([y1], u), A) \\<and>\n       sa @ [y1] setinterleaves (([], u @ [y1]), A)", "then"], ["proof (chain)\npicking this:\n  \\<forall>m<length u.\n     \\<forall>x.\n        m = length x \\<longrightarrow>\n        (\\<forall>xa.\n            xa setinterleaves (([], x), A) \\<and>\n            y1 \\<notin> A \\<longrightarrow>\n            xa @ [y1] setinterleaves (([y1], x), A) \\<and>\n            xa @ [y1] setinterleaves (([], x @ [y1]), A))", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>m<length u.\n     \\<forall>x.\n        m = length x \\<longrightarrow>\n        (\\<forall>xa.\n            xa setinterleaves (([], x), A) \\<and>\n            y1 \\<notin> A \\<longrightarrow>\n            xa @ [y1] setinterleaves (([y1], x), A) \\<and>\n            xa @ [y1] setinterleaves (([], x @ [y1]), A))\n\ngoal (1 subgoal):\n 1. sa setinterleaves (([], u), A) \\<and> y1 \\<notin> A \\<longrightarrow>\n    sa @ [y1] setinterleaves (([y1], u), A) \\<and>\n    sa @ [y1] setinterleaves (([], u @ [y1]), A)", "apply(cases u)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>m<length u.\n                \\<forall>x.\n                   m = length x \\<longrightarrow>\n                   (\\<forall>xa.\n                       xa setinterleaves (([], x), A) \\<and>\n                       y1 \\<notin> A \\<longrightarrow>\n                       xa @ [y1] setinterleaves (([y1], x), A) \\<and>\n                       xa @ [y1] setinterleaves (([], x @ [y1]), A));\n     u = []\\<rbrakk>\n    \\<Longrightarrow> sa setinterleaves (([], u), A) \\<and>\n                      y1 \\<notin> A \\<longrightarrow>\n                      sa @ [y1] setinterleaves (([y1], u), A) \\<and>\n                      sa @ [y1] setinterleaves (([], u @ [y1]), A)\n 2. \\<And>a list.\n       \\<lbrakk>\\<forall>m<length u.\n                   \\<forall>x.\n                      m = length x \\<longrightarrow>\n                      (\\<forall>xa.\n                          xa setinterleaves (([], x), A) \\<and>\n                          y1 \\<notin> A \\<longrightarrow>\n                          xa @ [y1] setinterleaves (([y1], x), A) \\<and>\n                          xa @ [y1] setinterleaves (([], x @ [y1]), A));\n        u = a # list\\<rbrakk>\n       \\<Longrightarrow> sa setinterleaves (([], u), A) \\<and>\n                         y1 \\<notin> A \\<longrightarrow>\n                         sa @ [y1] setinterleaves (([y1], u), A) \\<and>\n                         sa @ [y1] setinterleaves (([], u @ [y1]), A)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>\\<forall>m<length u.\n                   \\<forall>x.\n                      m = length x \\<longrightarrow>\n                      (\\<forall>xa.\n                          xa setinterleaves (([], x), A) \\<and>\n                          y1 \\<notin> A \\<longrightarrow>\n                          xa @ [y1] setinterleaves (([y1], x), A) \\<and>\n                          xa @ [y1] setinterleaves (([], x @ [y1]), A));\n        u = a # list\\<rbrakk>\n       \\<Longrightarrow> sa setinterleaves (([], u), A) \\<and>\n                         y1 \\<notin> A \\<longrightarrow>\n                         sa @ [y1] setinterleaves (([y1], u), A) \\<and>\n                         sa @ [y1] setinterleaves (([], u @ [y1]), A)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>\\<forall>m<length u.\n                   \\<forall>x.\n                      m = length x \\<longrightarrow>\n                      (\\<forall>xa.\n                          xa setinterleaves (([], x), A) \\<and>\n                          y1 \\<notin> A \\<longrightarrow>\n                          xa @ [y1] setinterleaves (([y1], x), A) \\<and>\n                          xa @ [y1] setinterleaves (([], x @ [y1]), A));\n        u = a # list\\<rbrakk>\n       \\<Longrightarrow> sa setinterleaves (([], u), A) \\<and>\n                         y1 \\<notin> A \\<longrightarrow>\n                         sa @ [y1] setinterleaves (([y1], u), A) \\<and>\n                         sa @ [y1] setinterleaves (([], u @ [y1]), A)", "fix a list"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>\\<forall>m<length u.\n                   \\<forall>x.\n                      m = length x \\<longrightarrow>\n                      (\\<forall>xa.\n                          xa setinterleaves (([], x), A) \\<and>\n                          y1 \\<notin> A \\<longrightarrow>\n                          xa @ [y1] setinterleaves (([y1], x), A) \\<and>\n                          xa @ [y1] setinterleaves (([], x @ [y1]), A));\n        u = a # list\\<rbrakk>\n       \\<Longrightarrow> sa setinterleaves (([], u), A) \\<and>\n                         y1 \\<notin> A \\<longrightarrow>\n                         sa @ [y1] setinterleaves (([y1], u), A) \\<and>\n                         sa @ [y1] setinterleaves (([], u @ [y1]), A)", "assume a: \"\\<forall>m<length u. \\<forall>x. m = length x \\<longrightarrow>(\\<forall>xa. xa setinterleaves (([], x), A) \\<and> y1 \\<notin> A \\<longrightarrow>\n       (xa @ [y1]) setinterleaves (([y1], x), A) \\<and> (xa @ [y1]) setinterleaves (([], x @ [y1]), A))\"\n      and b: \"u = a # list\""], ["proof (state)\nthis:\n  \\<forall>m<length u.\n     \\<forall>x.\n        m = length x \\<longrightarrow>\n        (\\<forall>xa.\n            xa setinterleaves (([], x), A) \\<and>\n            y1 \\<notin> A \\<longrightarrow>\n            xa @ [y1] setinterleaves (([y1], x), A) \\<and>\n            xa @ [y1] setinterleaves (([], x @ [y1]), A))\n  u = a # list\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>\\<forall>m<length u.\n                   \\<forall>x.\n                      m = length x \\<longrightarrow>\n                      (\\<forall>xa.\n                          xa setinterleaves (([], x), A) \\<and>\n                          y1 \\<notin> A \\<longrightarrow>\n                          xa @ [y1] setinterleaves (([y1], x), A) \\<and>\n                          xa @ [y1] setinterleaves (([], x @ [y1]), A));\n        u = a # list\\<rbrakk>\n       \\<Longrightarrow> sa setinterleaves (([], u), A) \\<and>\n                         y1 \\<notin> A \\<longrightarrow>\n                         sa @ [y1] setinterleaves (([y1], u), A) \\<and>\n                         sa @ [y1] setinterleaves (([], u @ [y1]), A)", "from b"], ["proof (chain)\npicking this:\n  u = a # list", "have th: \"sa setinterleaves (([], u), A)\\<Longrightarrow>(tl sa) setinterleaves (([], list), A)\""], ["proof (prove)\nusing this:\n  u = a # list\n\ngoal (1 subgoal):\n 1. sa setinterleaves (([], u), A) \\<Longrightarrow>\n    tl sa setinterleaves (([], list), A)", "by (metis emptyLeftNonSync emptyLeftProperty emptyLeftSelf list.distinct(1) list.sel(3) \n        list.set_sel(2))"], ["proof (state)\nthis:\n  sa setinterleaves (([], u), A) \\<Longrightarrow>\n  tl sa setinterleaves (([], list), A)\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>\\<forall>m<length u.\n                   \\<forall>x.\n                      m = length x \\<longrightarrow>\n                      (\\<forall>xa.\n                          xa setinterleaves (([], x), A) \\<and>\n                          y1 \\<notin> A \\<longrightarrow>\n                          xa @ [y1] setinterleaves (([y1], x), A) \\<and>\n                          xa @ [y1] setinterleaves (([], x @ [y1]), A));\n        u = a # list\\<rbrakk>\n       \\<Longrightarrow> sa setinterleaves (([], u), A) \\<and>\n                         y1 \\<notin> A \\<longrightarrow>\n                         sa @ [y1] setinterleaves (([y1], u), A) \\<and>\n                         sa @ [y1] setinterleaves (([], u @ [y1]), A)", "from a b th"], ["proof (chain)\npicking this:\n  \\<forall>m<length u.\n     \\<forall>x.\n        m = length x \\<longrightarrow>\n        (\\<forall>xa.\n            xa setinterleaves (([], x), A) \\<and>\n            y1 \\<notin> A \\<longrightarrow>\n            xa @ [y1] setinterleaves (([y1], x), A) \\<and>\n            xa @ [y1] setinterleaves (([], x @ [y1]), A))\n  u = a # list\n  sa setinterleaves (([], u), A) \\<Longrightarrow>\n  tl sa setinterleaves (([], list), A)", "have th1: \"sa setinterleaves (([], u), A) \\<and> y1 \\<notin> A\\<longrightarrow> ((tl sa) @ [y1]) \n      setinterleaves (([y1], list), A)\\<and>((tl sa)@[y1]) setinterleaves (([], list@[y1]), A)\""], ["proof (prove)\nusing this:\n  \\<forall>m<length u.\n     \\<forall>x.\n        m = length x \\<longrightarrow>\n        (\\<forall>xa.\n            xa setinterleaves (([], x), A) \\<and>\n            y1 \\<notin> A \\<longrightarrow>\n            xa @ [y1] setinterleaves (([y1], x), A) \\<and>\n            xa @ [y1] setinterleaves (([], x @ [y1]), A))\n  u = a # list\n  sa setinterleaves (([], u), A) \\<Longrightarrow>\n  tl sa setinterleaves (([], list), A)\n\ngoal (1 subgoal):\n 1. sa setinterleaves (([], u), A) \\<and> y1 \\<notin> A \\<longrightarrow>\n    tl sa @ [y1] setinterleaves (([y1], list), A) \\<and>\n    tl sa @ [y1] setinterleaves (([], list @ [y1]), A)", "by auto"], ["proof (state)\nthis:\n  sa setinterleaves (([], u), A) \\<and> y1 \\<notin> A \\<longrightarrow>\n  tl sa @ [y1] setinterleaves (([y1], list), A) \\<and>\n  tl sa @ [y1] setinterleaves (([], list @ [y1]), A)\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>\\<forall>m<length u.\n                   \\<forall>x.\n                      m = length x \\<longrightarrow>\n                      (\\<forall>xa.\n                          xa setinterleaves (([], x), A) \\<and>\n                          y1 \\<notin> A \\<longrightarrow>\n                          xa @ [y1] setinterleaves (([y1], x), A) \\<and>\n                          xa @ [y1] setinterleaves (([], x @ [y1]), A));\n        u = a # list\\<rbrakk>\n       \\<Longrightarrow> sa setinterleaves (([], u), A) \\<and>\n                         y1 \\<notin> A \\<longrightarrow>\n                         sa @ [y1] setinterleaves (([y1], u), A) \\<and>\n                         sa @ [y1] setinterleaves (([], u @ [y1]), A)", "thus \"sa setinterleaves (([], u), A) \\<and> y1 \\<notin> A \\<longrightarrow>\n        (sa @ [y1]) setinterleaves (([y1], u), A) \\<and> (sa @ [y1]) setinterleaves (([], u @ [y1]), A)\""], ["proof (prove)\nusing this:\n  sa setinterleaves (([], u), A) \\<and> y1 \\<notin> A \\<longrightarrow>\n  tl sa @ [y1] setinterleaves (([y1], list), A) \\<and>\n  tl sa @ [y1] setinterleaves (([], list @ [y1]), A)\n\ngoal (1 subgoal):\n 1. sa setinterleaves (([], u), A) \\<and> y1 \\<notin> A \\<longrightarrow>\n    sa @ [y1] setinterleaves (([y1], u), A) \\<and>\n    sa @ [y1] setinterleaves (([], u @ [y1]), A)", "using  b th"], ["proof (prove)\nusing this:\n  sa setinterleaves (([], u), A) \\<and> y1 \\<notin> A \\<longrightarrow>\n  tl sa @ [y1] setinterleaves (([y1], list), A) \\<and>\n  tl sa @ [y1] setinterleaves (([], list @ [y1]), A)\n  u = a # list\n  sa setinterleaves (([], u), A) \\<Longrightarrow>\n  tl sa setinterleaves (([], list), A)\n\ngoal (1 subgoal):\n 1. sa setinterleaves (([], u), A) \\<and> y1 \\<notin> A \\<longrightarrow>\n    sa @ [y1] setinterleaves (([y1], u), A) \\<and>\n    sa @ [y1] setinterleaves (([], u @ [y1]), A)", "by auto"], ["proof (state)\nthis:\n  sa setinterleaves (([], u), A) \\<and> y1 \\<notin> A \\<longrightarrow>\n  sa @ [y1] setinterleaves (([y1], u), A) \\<and>\n  sa @ [y1] setinterleaves (([], u @ [y1]), A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sa setinterleaves (([], u), A) \\<and> y1 \\<notin> A \\<longrightarrow>\n  sa @ [y1] setinterleaves (([y1], u), A) \\<and>\n  sa @ [y1] setinterleaves (([], u @ [y1]), A)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma addNonSync: \"sa setinterleaves ((t,u),A)\\<and> y1 \\<notin> A\\<longrightarrow>\n(sa@[y1]) setinterleaves ((t@[y1],u),A)\\<and>(sa@[y1]) setinterleaves ((t,u@[y1]),A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sa setinterleaves ((t, u), A) \\<and> y1 \\<notin> A \\<longrightarrow>\n    sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n    sa @ [y1] setinterleaves ((t, u @ [y1]), A)", "proof (induction \"length t + length u\" arbitrary:sa t u rule:nat_less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t u sa.\n       \\<forall>m<length t + length u.\n          \\<forall>x xa.\n             m = length x + length xa \\<longrightarrow>\n             (\\<forall>xb.\n                 xb setinterleaves ((x, xa), A) \\<and>\n                 y1 \\<notin> A \\<longrightarrow>\n                 xb @ [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n                 xb @\n                 [y1] setinterleaves ((x, xa @ [y1]), A)) \\<Longrightarrow>\n       sa setinterleaves ((t, u), A) \\<and> y1 \\<notin> A \\<longrightarrow>\n       sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n       sa @ [y1] setinterleaves ((t, u @ [y1]), A)", "case 1"], ["proof (state)\nthis:\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<and>\n            y1 \\<notin> A \\<longrightarrow>\n            xb @ [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n            xb @ [y1] setinterleaves ((x, xa @ [y1]), A))\n\ngoal (1 subgoal):\n 1. \\<And>t u sa.\n       \\<forall>m<length t + length u.\n          \\<forall>x xa.\n             m = length x + length xa \\<longrightarrow>\n             (\\<forall>xb.\n                 xb setinterleaves ((x, xa), A) \\<and>\n                 y1 \\<notin> A \\<longrightarrow>\n                 xb @ [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n                 xb @\n                 [y1] setinterleaves ((x, xa @ [y1]), A)) \\<Longrightarrow>\n       sa setinterleaves ((t, u), A) \\<and> y1 \\<notin> A \\<longrightarrow>\n       sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n       sa @ [y1] setinterleaves ((t, u @ [y1]), A)", "then"], ["proof (chain)\npicking this:\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<and>\n            y1 \\<notin> A \\<longrightarrow>\n            xb @ [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n            xb @ [y1] setinterleaves ((x, xa @ [y1]), A))", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<and>\n            y1 \\<notin> A \\<longrightarrow>\n            xb @ [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n            xb @ [y1] setinterleaves ((x, xa @ [y1]), A))\n\ngoal (1 subgoal):\n 1. sa setinterleaves ((t, u), A) \\<and> y1 \\<notin> A \\<longrightarrow>\n    sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n    sa @ [y1] setinterleaves ((t, u @ [y1]), A)", "apply(cases t)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<and>\n                       y1 \\<notin> A \\<longrightarrow>\n                       xb @ [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n                       xb @ [y1] setinterleaves ((x, xa @ [y1]), A));\n     t = []\\<rbrakk>\n    \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                      y1 \\<notin> A \\<longrightarrow>\n                      sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n                      sa @ [y1] setinterleaves ((t, u @ [y1]), A)\n 2. \\<And>a list.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          y1 \\<notin> A \\<longrightarrow>\n                          xb @\n                          [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n                          xb @ [y1] setinterleaves ((x, xa @ [y1]), A));\n        t = a # list\\<rbrakk>\n       \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                         y1 \\<notin> A \\<longrightarrow>\n                         sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n                         sa @ [y1] setinterleaves ((t, u @ [y1]), A)", "apply (simp add: addNonSyncEmpty)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          y1 \\<notin> A \\<longrightarrow>\n                          xb @\n                          [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n                          xb @ [y1] setinterleaves ((x, xa @ [y1]), A));\n        t = a # list\\<rbrakk>\n       \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                         y1 \\<notin> A \\<longrightarrow>\n                         sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n                         sa @ [y1] setinterleaves ((t, u @ [y1]), A)", "apply (cases u)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a list.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          y1 \\<notin> A \\<longrightarrow>\n                          xb @\n                          [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n                          xb @ [y1] setinterleaves ((x, xa @ [y1]), A));\n        t = a # list; u = []\\<rbrakk>\n       \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                         y1 \\<notin> A \\<longrightarrow>\n                         sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n                         sa @ [y1] setinterleaves ((t, u @ [y1]), A)\n 2. \\<And>a list aa lista.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          y1 \\<notin> A \\<longrightarrow>\n                          xb @\n                          [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n                          xb @ [y1] setinterleaves ((x, xa @ [y1]), A));\n        t = a # list; u = aa # lista\\<rbrakk>\n       \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                         y1 \\<notin> A \\<longrightarrow>\n                         sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n                         sa @ [y1] setinterleaves ((t, u @ [y1]), A)", "apply (metis Sync.sym addNonSyncEmpty append_self_conv2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list aa lista.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          y1 \\<notin> A \\<longrightarrow>\n                          xb @\n                          [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n                          xb @ [y1] setinterleaves ((x, xa @ [y1]), A));\n        t = a # list; u = aa # lista\\<rbrakk>\n       \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                         y1 \\<notin> A \\<longrightarrow>\n                         sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n                         sa @ [y1] setinterleaves ((t, u @ [y1]), A)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list aa lista.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          y1 \\<notin> A \\<longrightarrow>\n                          xb @\n                          [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n                          xb @ [y1] setinterleaves ((x, xa @ [y1]), A));\n        t = a # list; u = aa # lista\\<rbrakk>\n       \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                         y1 \\<notin> A \\<longrightarrow>\n                         sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n                         sa @ [y1] setinterleaves ((t, u @ [y1]), A)", "fix a list aa lista"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list aa lista.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          y1 \\<notin> A \\<longrightarrow>\n                          xb @\n                          [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n                          xb @ [y1] setinterleaves ((x, xa @ [y1]), A));\n        t = a # list; u = aa # lista\\<rbrakk>\n       \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                         y1 \\<notin> A \\<longrightarrow>\n                         sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n                         sa @ [y1] setinterleaves ((t, u @ [y1]), A)", "assume a: \"\\<forall>m<length t + length u. \\<forall>x xa. m = length x + length xa \\<longrightarrow>\n    (\\<forall>xb. xb setinterleaves ((x, xa), A) \\<and> y1 \\<notin> A \\<longrightarrow>(xb @ [y1]) setinterleaves ((x @ [y1], xa), A) \n    \\<and> (xb @ [y1]) setinterleaves ((x, xa @ [y1]), A))\"\n    and b: \" t = a # list\" \n    and c: \"u = aa # lista\""], ["proof (state)\nthis:\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<and>\n            y1 \\<notin> A \\<longrightarrow>\n            xb @ [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n            xb @ [y1] setinterleaves ((x, xa @ [y1]), A))\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<And>a list aa lista.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          y1 \\<notin> A \\<longrightarrow>\n                          xb @\n                          [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n                          xb @ [y1] setinterleaves ((x, xa @ [y1]), A));\n        t = a # list; u = aa # lista\\<rbrakk>\n       \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                         y1 \\<notin> A \\<longrightarrow>\n                         sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n                         sa @ [y1] setinterleaves ((t, u @ [y1]), A)", "thus \" sa setinterleaves ((t, u), A) \\<and> y1 \\<notin> A \\<longrightarrow>\n     (sa @ [y1]) setinterleaves ((t @ [y1], u), A) \\<and> (sa @ [y1]) setinterleaves ((t, u @ [y1]), A)\""], ["proof (prove)\nusing this:\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<and>\n            y1 \\<notin> A \\<longrightarrow>\n            xb @ [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n            xb @ [y1] setinterleaves ((x, xa @ [y1]), A))\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. sa setinterleaves ((t, u), A) \\<and> y1 \\<notin> A \\<longrightarrow>\n    sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n    sa @ [y1] setinterleaves ((t, u @ [y1]), A)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<and>\n                       y1 \\<notin> A \\<longrightarrow>\n                       xb @ [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n                       xb @ [y1] setinterleaves ((x, xa @ [y1]), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                      y1 \\<notin> A \\<longrightarrow>\n                      sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n                      sa @ [y1] setinterleaves ((t, u @ [y1]), A)", "from b c"], ["proof (chain)\npicking this:\n  t = a # list\n  u = aa # lista", "have th0pre: \"a=aa\\<and>aa\\<in> A\\<Longrightarrow>sa setinterleaves ((t, u), A) \\<Longrightarrow>\n                              (tl sa) setinterleaves ((list,lista), A)\""], ["proof (prove)\nusing this:\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = aa \\<and> aa \\<in> A;\n     sa setinterleaves ((t, u), A)\\<rbrakk>\n    \\<Longrightarrow> tl sa setinterleaves ((list, lista), A)", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>a = aa \\<and> aa \\<in> A; sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((list, lista), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<and>\n                       y1 \\<notin> A \\<longrightarrow>\n                       xb @ [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n                       xb @ [y1] setinterleaves ((x, xa @ [y1]), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                      y1 \\<notin> A \\<longrightarrow>\n                      sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n                      sa @ [y1] setinterleaves ((t, u @ [y1]), A)", "from th0pre a b c"], ["proof (chain)\npicking this:\n  \\<lbrakk>a = aa \\<and> aa \\<in> A; sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((list, lista), A)\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<and>\n            y1 \\<notin> A \\<longrightarrow>\n            xb @ [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n            xb @ [y1] setinterleaves ((x, xa @ [y1]), A))\n  t = a # list\n  u = aa # lista", "have th0pre1: \"a=aa\\<and>aa\\<in> A\\<Longrightarrow>sa setinterleaves ((t, u), A)\\<and> y1 \\<notin> A\\<Longrightarrow>\n       ((tl sa) @ [y1]) setinterleaves ((list@ [y1], lista), A)\\<and>\n       ((tl sa) @ [y1]) setinterleaves ((list, lista@ [y1]), A)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>a = aa \\<and> aa \\<in> A; sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((list, lista), A)\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<and>\n            y1 \\<notin> A \\<longrightarrow>\n            xb @ [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n            xb @ [y1] setinterleaves ((x, xa @ [y1]), A))\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = aa \\<and> aa \\<in> A;\n     sa setinterleaves ((t, u), A) \\<and> y1 \\<notin> A\\<rbrakk>\n    \\<Longrightarrow> tl sa @\n                      [y1] setinterleaves ((list @ [y1], lista), A) \\<and>\n                      tl sa @ [y1] setinterleaves ((list, lista @ [y1]), A)", "by (metis add_less_mono length_Cons lessI)"], ["proof (state)\nthis:\n  \\<lbrakk>a = aa \\<and> aa \\<in> A;\n   sa setinterleaves ((t, u), A) \\<and> y1 \\<notin> A\\<rbrakk>\n  \\<Longrightarrow> tl sa @\n                    [y1] setinterleaves ((list @ [y1], lista), A) \\<and>\n                    tl sa @ [y1] setinterleaves ((list, lista @ [y1]), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<and>\n                       y1 \\<notin> A \\<longrightarrow>\n                       xb @ [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n                       xb @ [y1] setinterleaves ((x, xa @ [y1]), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                      y1 \\<notin> A \\<longrightarrow>\n                      sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n                      sa @ [y1] setinterleaves ((t, u @ [y1]), A)", "from  th0pre th0pre1 b c"], ["proof (chain)\npicking this:\n  \\<lbrakk>a = aa \\<and> aa \\<in> A; sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((list, lista), A)\n  \\<lbrakk>a = aa \\<and> aa \\<in> A;\n   sa setinterleaves ((t, u), A) \\<and> y1 \\<notin> A\\<rbrakk>\n  \\<Longrightarrow> tl sa @\n                    [y1] setinterleaves ((list @ [y1], lista), A) \\<and>\n                    tl sa @ [y1] setinterleaves ((list, lista @ [y1]), A)\n  t = a # list\n  u = aa # lista", "have th0: \"a=aa\\<and>aa\\<in> A\\<Longrightarrow>sa setinterleaves ((t, u), A) \\<and> y1 \\<notin> A \\<longrightarrow>\n      (sa @ [y1]) setinterleaves ((t @ [y1], u), A)\\<and>(sa @ [y1]) setinterleaves ((t, u @ [y1]), A)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>a = aa \\<and> aa \\<in> A; sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((list, lista), A)\n  \\<lbrakk>a = aa \\<and> aa \\<in> A;\n   sa setinterleaves ((t, u), A) \\<and> y1 \\<notin> A\\<rbrakk>\n  \\<Longrightarrow> tl sa @\n                    [y1] setinterleaves ((list @ [y1], lista), A) \\<and>\n                    tl sa @ [y1] setinterleaves ((list, lista @ [y1]), A)\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. a = aa \\<and> aa \\<in> A \\<Longrightarrow>\n    sa setinterleaves ((t, u), A) \\<and> y1 \\<notin> A \\<longrightarrow>\n    sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n    sa @ [y1] setinterleaves ((t, u @ [y1]), A)", "by auto"], ["proof (state)\nthis:\n  a = aa \\<and> aa \\<in> A \\<Longrightarrow>\n  sa setinterleaves ((t, u), A) \\<and> y1 \\<notin> A \\<longrightarrow>\n  sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n  sa @ [y1] setinterleaves ((t, u @ [y1]), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<and>\n                       y1 \\<notin> A \\<longrightarrow>\n                       xb @ [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n                       xb @ [y1] setinterleaves ((x, xa @ [y1]), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                      y1 \\<notin> A \\<longrightarrow>\n                      sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n                      sa @ [y1] setinterleaves ((t, u @ [y1]), A)", "from b c"], ["proof (chain)\npicking this:\n  t = a # list\n  u = aa # lista", "have th1pre: \"a\\<notin>A\\<and>aa\\<in> A\\<Longrightarrow>sa setinterleaves ((t, u), A) \\<Longrightarrow>\n                             (tl sa) setinterleaves ((list,aa#lista), A)\""], ["proof (prove)\nusing this:\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n     sa setinterleaves ((t, u), A)\\<rbrakk>\n    \\<Longrightarrow> tl sa setinterleaves ((list, aa # lista), A)", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n   sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((list, aa # lista), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<and>\n                       y1 \\<notin> A \\<longrightarrow>\n                       xb @ [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n                       xb @ [y1] setinterleaves ((x, xa @ [y1]), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                      y1 \\<notin> A \\<longrightarrow>\n                      sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n                      sa @ [y1] setinterleaves ((t, u @ [y1]), A)", "from th1pre a b c"], ["proof (chain)\npicking this:\n  \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n   sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((list, aa # lista), A)\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<and>\n            y1 \\<notin> A \\<longrightarrow>\n            xb @ [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n            xb @ [y1] setinterleaves ((x, xa @ [y1]), A))\n  t = a # list\n  u = aa # lista", "have th1pre1: \"a\\<notin>A\\<and>aa\\<in> A\\<Longrightarrow>sa setinterleaves ((t, u), A)\\<and> y1 \\<notin> A\\<Longrightarrow>\n      ((tl sa) @ [y1]) setinterleaves ((list@ [y1], aa#lista), A)\\<and>\n      ((tl sa) @ [y1]) setinterleaves ((list, aa#lista@ [y1]), A)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n   sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((list, aa # lista), A)\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<and>\n            y1 \\<notin> A \\<longrightarrow>\n            xb @ [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n            xb @ [y1] setinterleaves ((x, xa @ [y1]), A))\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n     sa setinterleaves ((t, u), A) \\<and> y1 \\<notin> A\\<rbrakk>\n    \\<Longrightarrow> tl sa @\n                      [y1] setinterleaves ((list @\n      [y1], aa # lista), A) \\<and>\n                      tl sa @\n                      [y1] setinterleaves ((list, aa # lista @ [y1]), A)", "by (metis add_Suc append_Cons length_Cons lessI)"], ["proof (state)\nthis:\n  \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n   sa setinterleaves ((t, u), A) \\<and> y1 \\<notin> A\\<rbrakk>\n  \\<Longrightarrow> tl sa @\n                    [y1] setinterleaves ((list @\n    [y1], aa # lista), A) \\<and>\n                    tl sa @\n                    [y1] setinterleaves ((list, aa # lista @ [y1]), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<and>\n                       y1 \\<notin> A \\<longrightarrow>\n                       xb @ [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n                       xb @ [y1] setinterleaves ((x, xa @ [y1]), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                      y1 \\<notin> A \\<longrightarrow>\n                      sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n                      sa @ [y1] setinterleaves ((t, u @ [y1]), A)", "from  th1pre th1pre1 b c"], ["proof (chain)\npicking this:\n  \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n   sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((list, aa # lista), A)\n  \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n   sa setinterleaves ((t, u), A) \\<and> y1 \\<notin> A\\<rbrakk>\n  \\<Longrightarrow> tl sa @\n                    [y1] setinterleaves ((list @\n    [y1], aa # lista), A) \\<and>\n                    tl sa @\n                    [y1] setinterleaves ((list, aa # lista @ [y1]), A)\n  t = a # list\n  u = aa # lista", "have th1: \"a\\<notin>A\\<and>aa\\<in> A\\<Longrightarrow>sa setinterleaves ((t, u), A) \\<and> y1 \\<notin> A \\<longrightarrow>  \n      (sa @ [y1]) setinterleaves ((t @ [y1], u), A)\\<and>(sa @ [y1]) setinterleaves ((t, u @ [y1]), A)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n   sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((list, aa # lista), A)\n  \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n   sa setinterleaves ((t, u), A) \\<and> y1 \\<notin> A\\<rbrakk>\n  \\<Longrightarrow> tl sa @\n                    [y1] setinterleaves ((list @\n    [y1], aa # lista), A) \\<and>\n                    tl sa @\n                    [y1] setinterleaves ((list, aa # lista @ [y1]), A)\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. a \\<notin> A \\<and> aa \\<in> A \\<Longrightarrow>\n    sa setinterleaves ((t, u), A) \\<and> y1 \\<notin> A \\<longrightarrow>\n    sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n    sa @ [y1] setinterleaves ((t, u @ [y1]), A)", "by auto"], ["proof (state)\nthis:\n  a \\<notin> A \\<and> aa \\<in> A \\<Longrightarrow>\n  sa setinterleaves ((t, u), A) \\<and> y1 \\<notin> A \\<longrightarrow>\n  sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n  sa @ [y1] setinterleaves ((t, u @ [y1]), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<and>\n                       y1 \\<notin> A \\<longrightarrow>\n                       xb @ [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n                       xb @ [y1] setinterleaves ((x, xa @ [y1]), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                      y1 \\<notin> A \\<longrightarrow>\n                      sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n                      sa @ [y1] setinterleaves ((t, u @ [y1]), A)", "from b c"], ["proof (chain)\npicking this:\n  t = a # list\n  u = aa # lista", "have th2pre: \"aa\\<notin>A\\<and>a\\<in> A\\<Longrightarrow>sa setinterleaves ((t, u), A) \\<Longrightarrow>\n                             (tl sa) setinterleaves ((a#list,lista), A)\""], ["proof (prove)\nusing this:\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n     sa setinterleaves ((t, u), A)\\<rbrakk>\n    \\<Longrightarrow> tl sa setinterleaves ((a # list, lista), A)", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n   sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((a # list, lista), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<and>\n                       y1 \\<notin> A \\<longrightarrow>\n                       xb @ [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n                       xb @ [y1] setinterleaves ((x, xa @ [y1]), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                      y1 \\<notin> A \\<longrightarrow>\n                      sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n                      sa @ [y1] setinterleaves ((t, u @ [y1]), A)", "from th2pre a b c"], ["proof (chain)\npicking this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n   sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((a # list, lista), A)\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<and>\n            y1 \\<notin> A \\<longrightarrow>\n            xb @ [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n            xb @ [y1] setinterleaves ((x, xa @ [y1]), A))\n  t = a # list\n  u = aa # lista", "have th2pre1: \"aa\\<notin>A\\<and>a\\<in> A\\<Longrightarrow>sa setinterleaves ((t, u), A)\\<and> y1 \\<notin> A\\<Longrightarrow>\n      ((tl sa) @ [y1]) setinterleaves ((a#list@ [y1], lista), A)\\<and>\n      ((tl sa) @ [y1]) setinterleaves ((a#list, lista@ [y1]), A)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n   sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((a # list, lista), A)\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<and>\n            y1 \\<notin> A \\<longrightarrow>\n            xb @ [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n            xb @ [y1] setinterleaves ((x, xa @ [y1]), A))\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n     sa setinterleaves ((t, u), A) \\<and> y1 \\<notin> A\\<rbrakk>\n    \\<Longrightarrow> tl sa @\n                      [y1] setinterleaves ((a #\n      list @ [y1], lista), A) \\<and>\n                      tl sa @\n                      [y1] setinterleaves ((a # list, lista @ [y1]), A)", "by (metis add_Suc_right append_Cons length_Cons lessI)"], ["proof (state)\nthis:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n   sa setinterleaves ((t, u), A) \\<and> y1 \\<notin> A\\<rbrakk>\n  \\<Longrightarrow> tl sa @\n                    [y1] setinterleaves ((a # list @ [y1], lista), A) \\<and>\n                    tl sa @\n                    [y1] setinterleaves ((a # list, lista @ [y1]), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<and>\n                       y1 \\<notin> A \\<longrightarrow>\n                       xb @ [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n                       xb @ [y1] setinterleaves ((x, xa @ [y1]), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                      y1 \\<notin> A \\<longrightarrow>\n                      sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n                      sa @ [y1] setinterleaves ((t, u @ [y1]), A)", "from  th2pre th2pre1 b c"], ["proof (chain)\npicking this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n   sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((a # list, lista), A)\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n   sa setinterleaves ((t, u), A) \\<and> y1 \\<notin> A\\<rbrakk>\n  \\<Longrightarrow> tl sa @\n                    [y1] setinterleaves ((a # list @ [y1], lista), A) \\<and>\n                    tl sa @\n                    [y1] setinterleaves ((a # list, lista @ [y1]), A)\n  t = a # list\n  u = aa # lista", "have th2: \"aa\\<notin>A\\<and>a\\<in> A\\<Longrightarrow>sa setinterleaves ((t, u), A) \\<and> y1 \\<notin> A \\<longrightarrow> \n      (sa @ [y1]) setinterleaves ((t @ [y1], u), A)\\<and>(sa @ [y1]) setinterleaves ((t, u @ [y1]), A)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n   sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((a # list, lista), A)\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n   sa setinterleaves ((t, u), A) \\<and> y1 \\<notin> A\\<rbrakk>\n  \\<Longrightarrow> tl sa @\n                    [y1] setinterleaves ((a # list @ [y1], lista), A) \\<and>\n                    tl sa @\n                    [y1] setinterleaves ((a # list, lista @ [y1]), A)\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. aa \\<notin> A \\<and> a \\<in> A \\<Longrightarrow>\n    sa setinterleaves ((t, u), A) \\<and> y1 \\<notin> A \\<longrightarrow>\n    sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n    sa @ [y1] setinterleaves ((t, u @ [y1]), A)", "by auto"], ["proof (state)\nthis:\n  aa \\<notin> A \\<and> a \\<in> A \\<Longrightarrow>\n  sa setinterleaves ((t, u), A) \\<and> y1 \\<notin> A \\<longrightarrow>\n  sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n  sa @ [y1] setinterleaves ((t, u @ [y1]), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<and>\n                       y1 \\<notin> A \\<longrightarrow>\n                       xb @ [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n                       xb @ [y1] setinterleaves ((x, xa @ [y1]), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                      y1 \\<notin> A \\<longrightarrow>\n                      sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n                      sa @ [y1] setinterleaves ((t, u @ [y1]), A)", "from b c"], ["proof (chain)\npicking this:\n  t = a # list\n  u = aa # lista", "have th3pre: \"aa\\<notin>A\\<and>a\\<notin> A\\<Longrightarrow>sa setinterleaves ((t, u), A)\\<Longrightarrow>\n     (tl sa) setinterleaves ((a#list,lista), A)\\<or>(tl sa)setinterleaves ((list,aa#lista), A)\""], ["proof (prove)\nusing this:\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n     sa setinterleaves ((t, u), A)\\<rbrakk>\n    \\<Longrightarrow> tl sa setinterleaves ((a # list, lista), A) \\<or>\n                      tl sa setinterleaves ((list, aa # lista), A)", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((a # list, lista), A) \\<or>\n                    tl sa setinterleaves ((list, aa # lista), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<and>\n                       y1 \\<notin> A \\<longrightarrow>\n                       xb @ [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n                       xb @ [y1] setinterleaves ((x, xa @ [y1]), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                      y1 \\<notin> A \\<longrightarrow>\n                      sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n                      sa @ [y1] setinterleaves ((t, u @ [y1]), A)", "from th3pre a b c"], ["proof (chain)\npicking this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((a # list, lista), A) \\<or>\n                    tl sa setinterleaves ((list, aa # lista), A)\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<and>\n            y1 \\<notin> A \\<longrightarrow>\n            xb @ [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n            xb @ [y1] setinterleaves ((x, xa @ [y1]), A))\n  t = a # list\n  u = aa # lista", "have th3pre1: \"aa\\<notin>A\\<and>a\\<notin> A\\<Longrightarrow>sa setinterleaves ((t, u), A)\\<and>\n      (tl sa) setinterleaves ((a#list,lista), A)\\<and> y1 \\<notin> A \\<Longrightarrow>\n      ((tl sa) @ [y1]) setinterleaves ((a#list@ [y1], lista ), A)\\<and>((tl sa) @ [y1]) setinterleaves \n      ((a#list, lista@ [y1] ), A)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((a # list, lista), A) \\<or>\n                    tl sa setinterleaves ((list, aa # lista), A)\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<and>\n            y1 \\<notin> A \\<longrightarrow>\n            xb @ [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n            xb @ [y1] setinterleaves ((x, xa @ [y1]), A))\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n     sa setinterleaves ((t, u), A) \\<and>\n     tl sa setinterleaves ((a # list, lista), A) \\<and>\n     y1 \\<notin> A\\<rbrakk>\n    \\<Longrightarrow> tl sa @\n                      [y1] setinterleaves ((a #\n      list @ [y1], lista), A) \\<and>\n                      tl sa @\n                      [y1] setinterleaves ((a # list, lista @ [y1]), A)", "by (metis add_Suc_right append_Cons length_Cons lessI)"], ["proof (state)\nthis:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   sa setinterleaves ((t, u), A) \\<and>\n   tl sa setinterleaves ((a # list, lista), A) \\<and> y1 \\<notin> A\\<rbrakk>\n  \\<Longrightarrow> tl sa @\n                    [y1] setinterleaves ((a # list @ [y1], lista), A) \\<and>\n                    tl sa @\n                    [y1] setinterleaves ((a # list, lista @ [y1]), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<and>\n                       y1 \\<notin> A \\<longrightarrow>\n                       xb @ [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n                       xb @ [y1] setinterleaves ((x, xa @ [y1]), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                      y1 \\<notin> A \\<longrightarrow>\n                      sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n                      sa @ [y1] setinterleaves ((t, u @ [y1]), A)", "from th3pre a b c"], ["proof (chain)\npicking this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((a # list, lista), A) \\<or>\n                    tl sa setinterleaves ((list, aa # lista), A)\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<and>\n            y1 \\<notin> A \\<longrightarrow>\n            xb @ [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n            xb @ [y1] setinterleaves ((x, xa @ [y1]), A))\n  t = a # list\n  u = aa # lista", "have th3pre2: \"aa\\<notin>A\\<and>a\\<notin> A\\<Longrightarrow>sa setinterleaves ((t, u), A)\\<and>\n      (tl sa) setinterleaves ((list,aa#lista), A)\\<and> y1 \\<notin> A \\<Longrightarrow>((tl sa) @ [y1]) setinterleaves \n      ((list@ [y1], aa#lista ), A)\\<and>((tl sa) @ [y1]) setinterleaves ((list, aa#lista @ [y1]), A)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((a # list, lista), A) \\<or>\n                    tl sa setinterleaves ((list, aa # lista), A)\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<and>\n            y1 \\<notin> A \\<longrightarrow>\n            xb @ [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n            xb @ [y1] setinterleaves ((x, xa @ [y1]), A))\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n     sa setinterleaves ((t, u), A) \\<and>\n     tl sa setinterleaves ((list, aa # lista), A) \\<and>\n     y1 \\<notin> A\\<rbrakk>\n    \\<Longrightarrow> tl sa @\n                      [y1] setinterleaves ((list @\n      [y1], aa # lista), A) \\<and>\n                      tl sa @\n                      [y1] setinterleaves ((list, aa # lista @ [y1]), A)", "by (metis add_Suc append_Cons length_Cons lessI)"], ["proof (state)\nthis:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   sa setinterleaves ((t, u), A) \\<and>\n   tl sa setinterleaves ((list, aa # lista), A) \\<and>\n   y1 \\<notin> A\\<rbrakk>\n  \\<Longrightarrow> tl sa @\n                    [y1] setinterleaves ((list @\n    [y1], aa # lista), A) \\<and>\n                    tl sa @\n                    [y1] setinterleaves ((list, aa # lista @ [y1]), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<and>\n                       y1 \\<notin> A \\<longrightarrow>\n                       xb @ [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n                       xb @ [y1] setinterleaves ((x, xa @ [y1]), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                      y1 \\<notin> A \\<longrightarrow>\n                      sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n                      sa @ [y1] setinterleaves ((t, u @ [y1]), A)", "from th3pre th3pre1 th3pre2 a b c"], ["proof (chain)\npicking this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((a # list, lista), A) \\<or>\n                    tl sa setinterleaves ((list, aa # lista), A)\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   sa setinterleaves ((t, u), A) \\<and>\n   tl sa setinterleaves ((a # list, lista), A) \\<and> y1 \\<notin> A\\<rbrakk>\n  \\<Longrightarrow> tl sa @\n                    [y1] setinterleaves ((a # list @ [y1], lista), A) \\<and>\n                    tl sa @\n                    [y1] setinterleaves ((a # list, lista @ [y1]), A)\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   sa setinterleaves ((t, u), A) \\<and>\n   tl sa setinterleaves ((list, aa # lista), A) \\<and>\n   y1 \\<notin> A\\<rbrakk>\n  \\<Longrightarrow> tl sa @\n                    [y1] setinterleaves ((list @\n    [y1], aa # lista), A) \\<and>\n                    tl sa @\n                    [y1] setinterleaves ((list, aa # lista @ [y1]), A)\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<and>\n            y1 \\<notin> A \\<longrightarrow>\n            xb @ [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n            xb @ [y1] setinterleaves ((x, xa @ [y1]), A))\n  t = a # list\n  u = aa # lista", "have th3: \"aa\\<notin>A\\<and>a\\<notin> A\\<Longrightarrow>sa setinterleaves ((t, u), A) \\<and> \n      y1 \\<notin> A \\<longrightarrow>(sa @ [y1]) setinterleaves ((t @ [y1], u), A) \\<and> \n      (sa @ [y1]) setinterleaves ((t, u @ [y1]), A)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((a # list, lista), A) \\<or>\n                    tl sa setinterleaves ((list, aa # lista), A)\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   sa setinterleaves ((t, u), A) \\<and>\n   tl sa setinterleaves ((a # list, lista), A) \\<and> y1 \\<notin> A\\<rbrakk>\n  \\<Longrightarrow> tl sa @\n                    [y1] setinterleaves ((a # list @ [y1], lista), A) \\<and>\n                    tl sa @\n                    [y1] setinterleaves ((a # list, lista @ [y1]), A)\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   sa setinterleaves ((t, u), A) \\<and>\n   tl sa setinterleaves ((list, aa # lista), A) \\<and>\n   y1 \\<notin> A\\<rbrakk>\n  \\<Longrightarrow> tl sa @\n                    [y1] setinterleaves ((list @\n    [y1], aa # lista), A) \\<and>\n                    tl sa @\n                    [y1] setinterleaves ((list, aa # lista @ [y1]), A)\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<and>\n            y1 \\<notin> A \\<longrightarrow>\n            xb @ [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n            xb @ [y1] setinterleaves ((x, xa @ [y1]), A))\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. aa \\<notin> A \\<and> a \\<notin> A \\<Longrightarrow>\n    sa setinterleaves ((t, u), A) \\<and> y1 \\<notin> A \\<longrightarrow>\n    sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n    sa @ [y1] setinterleaves ((t, u @ [y1]), A)", "by auto"], ["proof (state)\nthis:\n  aa \\<notin> A \\<and> a \\<notin> A \\<Longrightarrow>\n  sa setinterleaves ((t, u), A) \\<and> y1 \\<notin> A \\<longrightarrow>\n  sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n  sa @ [y1] setinterleaves ((t, u @ [y1]), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<and>\n                       y1 \\<notin> A \\<longrightarrow>\n                       xb @ [y1] setinterleaves ((x @ [y1], xa), A) \\<and>\n                       xb @ [y1] setinterleaves ((x, xa @ [y1]), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                      y1 \\<notin> A \\<longrightarrow>\n                      sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n                      sa @ [y1] setinterleaves ((t, u @ [y1]), A)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. sa setinterleaves ((t, u), A) \\<and> y1 \\<notin> A \\<longrightarrow>\n    sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n    sa @ [y1] setinterleaves ((t, u @ [y1]), A)", "using b c th0 th1 th2 th3"], ["proof (prove)\nusing this:\n  t = a # list\n  u = aa # lista\n  a = aa \\<and> aa \\<in> A \\<Longrightarrow>\n  sa setinterleaves ((t, u), A) \\<and> y1 \\<notin> A \\<longrightarrow>\n  sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n  sa @ [y1] setinterleaves ((t, u @ [y1]), A)\n  a \\<notin> A \\<and> aa \\<in> A \\<Longrightarrow>\n  sa setinterleaves ((t, u), A) \\<and> y1 \\<notin> A \\<longrightarrow>\n  sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n  sa @ [y1] setinterleaves ((t, u @ [y1]), A)\n  aa \\<notin> A \\<and> a \\<in> A \\<Longrightarrow>\n  sa setinterleaves ((t, u), A) \\<and> y1 \\<notin> A \\<longrightarrow>\n  sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n  sa @ [y1] setinterleaves ((t, u @ [y1]), A)\n  aa \\<notin> A \\<and> a \\<notin> A \\<Longrightarrow>\n  sa setinterleaves ((t, u), A) \\<and> y1 \\<notin> A \\<longrightarrow>\n  sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n  sa @ [y1] setinterleaves ((t, u @ [y1]), A)\n\ngoal (1 subgoal):\n 1. sa setinterleaves ((t, u), A) \\<and> y1 \\<notin> A \\<longrightarrow>\n    sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n    sa @ [y1] setinterleaves ((t, u @ [y1]), A)", "by auto"], ["proof (state)\nthis:\n  sa setinterleaves ((t, u), A) \\<and> y1 \\<notin> A \\<longrightarrow>\n  sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n  sa @ [y1] setinterleaves ((t, u @ [y1]), A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sa setinterleaves ((t, u), A) \\<and> y1 \\<notin> A \\<longrightarrow>\n  sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n  sa @ [y1] setinterleaves ((t, u @ [y1]), A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sa setinterleaves ((t, u), A) \\<and> y1 \\<notin> A \\<longrightarrow>\n  sa @ [y1] setinterleaves ((t @ [y1], u), A) \\<and>\n  sa @ [y1] setinterleaves ((t, u @ [y1]), A)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma addSyncEmpty: \"sa setinterleaves (([], u), A) \\<and> y1 \\<in> A \\<longrightarrow> \n                    (sa @ [y1]) setinterleaves (([y1], u @ [y1]), A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sa setinterleaves (([], u), A) \\<and> y1 \\<in> A \\<longrightarrow>\n    sa @ [y1] setinterleaves (([y1], u @ [y1]), A)", "proof (induction \"length u\" arbitrary:sa u rule:nat_less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u sa.\n       \\<forall>m<length u.\n          \\<forall>x.\n             m = length x \\<longrightarrow>\n             (\\<forall>xa.\n                 xa setinterleaves (([], x), A) \\<and>\n                 y1 \\<in> A \\<longrightarrow>\n                 xa @\n                 [y1] setinterleaves (([y1], x @\n       [y1]), A)) \\<Longrightarrow>\n       sa setinterleaves (([], u), A) \\<and> y1 \\<in> A \\<longrightarrow>\n       sa @ [y1] setinterleaves (([y1], u @ [y1]), A)", "case 1"], ["proof (state)\nthis:\n  \\<forall>m<length u.\n     \\<forall>x.\n        m = length x \\<longrightarrow>\n        (\\<forall>xa.\n            xa setinterleaves (([], x), A) \\<and>\n            y1 \\<in> A \\<longrightarrow>\n            xa @ [y1] setinterleaves (([y1], x @ [y1]), A))\n\ngoal (1 subgoal):\n 1. \\<And>u sa.\n       \\<forall>m<length u.\n          \\<forall>x.\n             m = length x \\<longrightarrow>\n             (\\<forall>xa.\n                 xa setinterleaves (([], x), A) \\<and>\n                 y1 \\<in> A \\<longrightarrow>\n                 xa @\n                 [y1] setinterleaves (([y1], x @\n       [y1]), A)) \\<Longrightarrow>\n       sa setinterleaves (([], u), A) \\<and> y1 \\<in> A \\<longrightarrow>\n       sa @ [y1] setinterleaves (([y1], u @ [y1]), A)", "then"], ["proof (chain)\npicking this:\n  \\<forall>m<length u.\n     \\<forall>x.\n        m = length x \\<longrightarrow>\n        (\\<forall>xa.\n            xa setinterleaves (([], x), A) \\<and>\n            y1 \\<in> A \\<longrightarrow>\n            xa @ [y1] setinterleaves (([y1], x @ [y1]), A))", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>m<length u.\n     \\<forall>x.\n        m = length x \\<longrightarrow>\n        (\\<forall>xa.\n            xa setinterleaves (([], x), A) \\<and>\n            y1 \\<in> A \\<longrightarrow>\n            xa @ [y1] setinterleaves (([y1], x @ [y1]), A))\n\ngoal (1 subgoal):\n 1. sa setinterleaves (([], u), A) \\<and> y1 \\<in> A \\<longrightarrow>\n    sa @ [y1] setinterleaves (([y1], u @ [y1]), A)", "apply(cases u)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>m<length u.\n                \\<forall>x.\n                   m = length x \\<longrightarrow>\n                   (\\<forall>xa.\n                       xa setinterleaves (([], x), A) \\<and>\n                       y1 \\<in> A \\<longrightarrow>\n                       xa @ [y1] setinterleaves (([y1], x @ [y1]), A));\n     u = []\\<rbrakk>\n    \\<Longrightarrow> sa setinterleaves (([], u), A) \\<and>\n                      y1 \\<in> A \\<longrightarrow>\n                      sa @ [y1] setinterleaves (([y1], u @ [y1]), A)\n 2. \\<And>a list.\n       \\<lbrakk>\\<forall>m<length u.\n                   \\<forall>x.\n                      m = length x \\<longrightarrow>\n                      (\\<forall>xa.\n                          xa setinterleaves (([], x), A) \\<and>\n                          y1 \\<in> A \\<longrightarrow>\n                          xa @ [y1] setinterleaves (([y1], x @ [y1]), A));\n        u = a # list\\<rbrakk>\n       \\<Longrightarrow> sa setinterleaves (([], u), A) \\<and>\n                         y1 \\<in> A \\<longrightarrow>\n                         sa @ [y1] setinterleaves (([y1], u @ [y1]), A)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>\\<forall>m<length u.\n                   \\<forall>x.\n                      m = length x \\<longrightarrow>\n                      (\\<forall>xa.\n                          xa setinterleaves (([], x), A) \\<and>\n                          y1 \\<in> A \\<longrightarrow>\n                          xa @ [y1] setinterleaves (([y1], x @ [y1]), A));\n        u = a # list\\<rbrakk>\n       \\<Longrightarrow> sa setinterleaves (([], u), A) \\<and>\n                         y1 \\<in> A \\<longrightarrow>\n                         sa @ [y1] setinterleaves (([y1], u @ [y1]), A)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>\\<forall>m<length u.\n                   \\<forall>x.\n                      m = length x \\<longrightarrow>\n                      (\\<forall>xa.\n                          xa setinterleaves (([], x), A) \\<and>\n                          y1 \\<in> A \\<longrightarrow>\n                          xa @ [y1] setinterleaves (([y1], x @ [y1]), A));\n        u = a # list\\<rbrakk>\n       \\<Longrightarrow> sa setinterleaves (([], u), A) \\<and>\n                         y1 \\<in> A \\<longrightarrow>\n                         sa @ [y1] setinterleaves (([y1], u @ [y1]), A)", "fix a list"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>\\<forall>m<length u.\n                   \\<forall>x.\n                      m = length x \\<longrightarrow>\n                      (\\<forall>xa.\n                          xa setinterleaves (([], x), A) \\<and>\n                          y1 \\<in> A \\<longrightarrow>\n                          xa @ [y1] setinterleaves (([y1], x @ [y1]), A));\n        u = a # list\\<rbrakk>\n       \\<Longrightarrow> sa setinterleaves (([], u), A) \\<and>\n                         y1 \\<in> A \\<longrightarrow>\n                         sa @ [y1] setinterleaves (([y1], u @ [y1]), A)", "assume a: \"\\<forall>m<length u. \\<forall>x. m = length x \\<longrightarrow>(\\<forall>xa. xa setinterleaves (([], x), A) \\<and> y1 \\<in> A \n                 \\<longrightarrow> (xa @ [y1]) setinterleaves (([y1], x @ [y1]), A))\"\n      and b: \"u = a # list\""], ["proof (state)\nthis:\n  \\<forall>m<length u.\n     \\<forall>x.\n        m = length x \\<longrightarrow>\n        (\\<forall>xa.\n            xa setinterleaves (([], x), A) \\<and>\n            y1 \\<in> A \\<longrightarrow>\n            xa @ [y1] setinterleaves (([y1], x @ [y1]), A))\n  u = a # list\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>\\<forall>m<length u.\n                   \\<forall>x.\n                      m = length x \\<longrightarrow>\n                      (\\<forall>xa.\n                          xa setinterleaves (([], x), A) \\<and>\n                          y1 \\<in> A \\<longrightarrow>\n                          xa @ [y1] setinterleaves (([y1], x @ [y1]), A));\n        u = a # list\\<rbrakk>\n       \\<Longrightarrow> sa setinterleaves (([], u), A) \\<and>\n                         y1 \\<in> A \\<longrightarrow>\n                         sa @ [y1] setinterleaves (([y1], u @ [y1]), A)", "from b"], ["proof (chain)\npicking this:\n  u = a # list", "have th: \"sa setinterleaves (([], u), A)\\<Longrightarrow>(tl sa) setinterleaves (([], list), A)\""], ["proof (prove)\nusing this:\n  u = a # list\n\ngoal (1 subgoal):\n 1. sa setinterleaves (([], u), A) \\<Longrightarrow>\n    tl sa setinterleaves (([], list), A)", "by (metis emptyLeftNonSync emptyLeftProperty emptyLeftSelf list.distinct(1) list.sel(3) \n           list.set_sel(2))"], ["proof (state)\nthis:\n  sa setinterleaves (([], u), A) \\<Longrightarrow>\n  tl sa setinterleaves (([], list), A)\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>\\<forall>m<length u.\n                   \\<forall>x.\n                      m = length x \\<longrightarrow>\n                      (\\<forall>xa.\n                          xa setinterleaves (([], x), A) \\<and>\n                          y1 \\<in> A \\<longrightarrow>\n                          xa @ [y1] setinterleaves (([y1], x @ [y1]), A));\n        u = a # list\\<rbrakk>\n       \\<Longrightarrow> sa setinterleaves (([], u), A) \\<and>\n                         y1 \\<in> A \\<longrightarrow>\n                         sa @ [y1] setinterleaves (([y1], u @ [y1]), A)", "from a th"], ["proof (chain)\npicking this:\n  \\<forall>m<length u.\n     \\<forall>x.\n        m = length x \\<longrightarrow>\n        (\\<forall>xa.\n            xa setinterleaves (([], x), A) \\<and>\n            y1 \\<in> A \\<longrightarrow>\n            xa @ [y1] setinterleaves (([y1], x @ [y1]), A))\n  sa setinterleaves (([], u), A) \\<Longrightarrow>\n  tl sa setinterleaves (([], list), A)", "have th1: \"sa setinterleaves (([], u), A) \\<and> y1 \\<in> A\\<Longrightarrow> \n      ((tl sa) @ [y1]) setinterleaves (([y1], list @ [y1]), A)\""], ["proof (prove)\nusing this:\n  \\<forall>m<length u.\n     \\<forall>x.\n        m = length x \\<longrightarrow>\n        (\\<forall>xa.\n            xa setinterleaves (([], x), A) \\<and>\n            y1 \\<in> A \\<longrightarrow>\n            xa @ [y1] setinterleaves (([y1], x @ [y1]), A))\n  sa setinterleaves (([], u), A) \\<Longrightarrow>\n  tl sa setinterleaves (([], list), A)\n\ngoal (1 subgoal):\n 1. sa setinterleaves (([], u), A) \\<and> y1 \\<in> A \\<Longrightarrow>\n    tl sa @ [y1] setinterleaves (([y1], list @ [y1]), A)", "using b"], ["proof (prove)\nusing this:\n  \\<forall>m<length u.\n     \\<forall>x.\n        m = length x \\<longrightarrow>\n        (\\<forall>xa.\n            xa setinterleaves (([], x), A) \\<and>\n            y1 \\<in> A \\<longrightarrow>\n            xa @ [y1] setinterleaves (([y1], x @ [y1]), A))\n  sa setinterleaves (([], u), A) \\<Longrightarrow>\n  tl sa setinterleaves (([], list), A)\n  u = a # list\n\ngoal (1 subgoal):\n 1. sa setinterleaves (([], u), A) \\<and> y1 \\<in> A \\<Longrightarrow>\n    tl sa @ [y1] setinterleaves (([y1], list @ [y1]), A)", "by auto"], ["proof (state)\nthis:\n  sa setinterleaves (([], u), A) \\<and> y1 \\<in> A \\<Longrightarrow>\n  tl sa @ [y1] setinterleaves (([y1], list @ [y1]), A)\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>\\<forall>m<length u.\n                   \\<forall>x.\n                      m = length x \\<longrightarrow>\n                      (\\<forall>xa.\n                          xa setinterleaves (([], x), A) \\<and>\n                          y1 \\<in> A \\<longrightarrow>\n                          xa @ [y1] setinterleaves (([y1], x @ [y1]), A));\n        u = a # list\\<rbrakk>\n       \\<Longrightarrow> sa setinterleaves (([], u), A) \\<and>\n                         y1 \\<in> A \\<longrightarrow>\n                         sa @ [y1] setinterleaves (([y1], u @ [y1]), A)", "thus \"sa setinterleaves (([], u), A) \\<and> y1 \\<in> A \\<longrightarrow> \n           (sa @ [y1]) setinterleaves (([y1], u @ [y1]), A)\""], ["proof (prove)\nusing this:\n  sa setinterleaves (([], u), A) \\<and> y1 \\<in> A \\<Longrightarrow>\n  tl sa @ [y1] setinterleaves (([y1], list @ [y1]), A)\n\ngoal (1 subgoal):\n 1. sa setinterleaves (([], u), A) \\<and> y1 \\<in> A \\<longrightarrow>\n    sa @ [y1] setinterleaves (([y1], u @ [y1]), A)", "using b th"], ["proof (prove)\nusing this:\n  sa setinterleaves (([], u), A) \\<and> y1 \\<in> A \\<Longrightarrow>\n  tl sa @ [y1] setinterleaves (([y1], list @ [y1]), A)\n  u = a # list\n  sa setinterleaves (([], u), A) \\<Longrightarrow>\n  tl sa setinterleaves (([], list), A)\n\ngoal (1 subgoal):\n 1. sa setinterleaves (([], u), A) \\<and> y1 \\<in> A \\<longrightarrow>\n    sa @ [y1] setinterleaves (([y1], u @ [y1]), A)", "by auto"], ["proof (state)\nthis:\n  sa setinterleaves (([], u), A) \\<and> y1 \\<in> A \\<longrightarrow>\n  sa @ [y1] setinterleaves (([y1], u @ [y1]), A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sa setinterleaves (([], u), A) \\<and> y1 \\<in> A \\<longrightarrow>\n  sa @ [y1] setinterleaves (([y1], u @ [y1]), A)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma addSync: \"sa setinterleaves ((t,u),A)\\<and> y1 \\<in> A\\<longrightarrow>(sa@[y1]) setinterleaves ((t@[y1],u@[y1]),A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sa setinterleaves ((t, u), A) \\<and> y1 \\<in> A \\<longrightarrow>\n    sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)", "proof (induction \"length t + length u\" arbitrary:sa t u rule:nat_less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t u sa.\n       \\<forall>m<length t + length u.\n          \\<forall>x xa.\n             m = length x + length xa \\<longrightarrow>\n             (\\<forall>xb.\n                 xb setinterleaves ((x, xa), A) \\<and>\n                 y1 \\<in> A \\<longrightarrow>\n                 xb @\n                 [y1] setinterleaves ((x @\n [y1], xa @ [y1]), A)) \\<Longrightarrow>\n       sa setinterleaves ((t, u), A) \\<and> y1 \\<in> A \\<longrightarrow>\n       sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)", "case 1"], ["proof (state)\nthis:\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<and>\n            y1 \\<in> A \\<longrightarrow>\n            xb @ [y1] setinterleaves ((x @ [y1], xa @ [y1]), A))\n\ngoal (1 subgoal):\n 1. \\<And>t u sa.\n       \\<forall>m<length t + length u.\n          \\<forall>x xa.\n             m = length x + length xa \\<longrightarrow>\n             (\\<forall>xb.\n                 xb setinterleaves ((x, xa), A) \\<and>\n                 y1 \\<in> A \\<longrightarrow>\n                 xb @\n                 [y1] setinterleaves ((x @\n [y1], xa @ [y1]), A)) \\<Longrightarrow>\n       sa setinterleaves ((t, u), A) \\<and> y1 \\<in> A \\<longrightarrow>\n       sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)", "then"], ["proof (chain)\npicking this:\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<and>\n            y1 \\<in> A \\<longrightarrow>\n            xb @ [y1] setinterleaves ((x @ [y1], xa @ [y1]), A))", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<and>\n            y1 \\<in> A \\<longrightarrow>\n            xb @ [y1] setinterleaves ((x @ [y1], xa @ [y1]), A))\n\ngoal (1 subgoal):\n 1. sa setinterleaves ((t, u), A) \\<and> y1 \\<in> A \\<longrightarrow>\n    sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)", "apply(cases t)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<and>\n                       y1 \\<in> A \\<longrightarrow>\n                       xb @ [y1] setinterleaves ((x @ [y1], xa @ [y1]), A));\n     t = []\\<rbrakk>\n    \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                      y1 \\<in> A \\<longrightarrow>\n                      sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)\n 2. \\<And>a list.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          y1 \\<in> A \\<longrightarrow>\n                          xb @\n                          [y1] setinterleaves ((x @ [y1], xa @ [y1]), A));\n        t = a # list\\<rbrakk>\n       \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                         y1 \\<in> A \\<longrightarrow>\n                         sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)", "apply (simp add: addSyncEmpty)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          y1 \\<in> A \\<longrightarrow>\n                          xb @\n                          [y1] setinterleaves ((x @ [y1], xa @ [y1]), A));\n        t = a # list\\<rbrakk>\n       \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                         y1 \\<in> A \\<longrightarrow>\n                         sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)", "apply(cases u)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a list.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          y1 \\<in> A \\<longrightarrow>\n                          xb @\n                          [y1] setinterleaves ((x @ [y1], xa @ [y1]), A));\n        t = a # list; u = []\\<rbrakk>\n       \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                         y1 \\<in> A \\<longrightarrow>\n                         sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)\n 2. \\<And>a list aa lista.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          y1 \\<in> A \\<longrightarrow>\n                          xb @\n                          [y1] setinterleaves ((x @ [y1], xa @ [y1]), A));\n        t = a # list; u = aa # lista\\<rbrakk>\n       \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                         y1 \\<in> A \\<longrightarrow>\n                         sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)", "apply (metis Sync.sym addSyncEmpty append.left_neutral)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list aa lista.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          y1 \\<in> A \\<longrightarrow>\n                          xb @\n                          [y1] setinterleaves ((x @ [y1], xa @ [y1]), A));\n        t = a # list; u = aa # lista\\<rbrakk>\n       \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                         y1 \\<in> A \\<longrightarrow>\n                         sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list aa lista.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          y1 \\<in> A \\<longrightarrow>\n                          xb @\n                          [y1] setinterleaves ((x @ [y1], xa @ [y1]), A));\n        t = a # list; u = aa # lista\\<rbrakk>\n       \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                         y1 \\<in> A \\<longrightarrow>\n                         sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)", "fix a list aa lista"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list aa lista.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          y1 \\<in> A \\<longrightarrow>\n                          xb @\n                          [y1] setinterleaves ((x @ [y1], xa @ [y1]), A));\n        t = a # list; u = aa # lista\\<rbrakk>\n       \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                         y1 \\<in> A \\<longrightarrow>\n                         sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)", "assume a: \"\\<forall>m<length t + length u. \\<forall>x xa. m = length x + length xa \\<longrightarrow>\n                 (\\<forall>xb. xb setinterleaves ((x, xa), A) \\<and> y1 \\<in> A \\<longrightarrow> (xb @ [y1]) setinterleaves \n                 ((x @ [y1], xa @ [y1]), A))\"\n    and b: \"t = a # list \"\n    and c: \" u = aa # lista\""], ["proof (state)\nthis:\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<and>\n            y1 \\<in> A \\<longrightarrow>\n            xb @ [y1] setinterleaves ((x @ [y1], xa @ [y1]), A))\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<And>a list aa lista.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          y1 \\<in> A \\<longrightarrow>\n                          xb @\n                          [y1] setinterleaves ((x @ [y1], xa @ [y1]), A));\n        t = a # list; u = aa # lista\\<rbrakk>\n       \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                         y1 \\<in> A \\<longrightarrow>\n                         sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)", "thus \"sa setinterleaves((t, u),A)\\<and>y1 \\<in>A\\<longrightarrow>(sa @ [y1]) setinterleaves ((t @ [y1], u @ [y1]), A)\""], ["proof (prove)\nusing this:\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<and>\n            y1 \\<in> A \\<longrightarrow>\n            xb @ [y1] setinterleaves ((x @ [y1], xa @ [y1]), A))\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. sa setinterleaves ((t, u), A) \\<and> y1 \\<in> A \\<longrightarrow>\n    sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<and>\n                       y1 \\<in> A \\<longrightarrow>\n                       xb @ [y1] setinterleaves ((x @ [y1], xa @ [y1]), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                      y1 \\<in> A \\<longrightarrow>\n                      sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)", "from b c"], ["proof (chain)\npicking this:\n  t = a # list\n  u = aa # lista", "have th0pre: \"a=aa\\<and>aa\\<in> A\\<Longrightarrow>sa setinterleaves ((t, u), A) \\<Longrightarrow>\n      (tl sa) setinterleaves ((list,lista), A)\""], ["proof (prove)\nusing this:\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = aa \\<and> aa \\<in> A;\n     sa setinterleaves ((t, u), A)\\<rbrakk>\n    \\<Longrightarrow> tl sa setinterleaves ((list, lista), A)", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>a = aa \\<and> aa \\<in> A; sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((list, lista), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<and>\n                       y1 \\<in> A \\<longrightarrow>\n                       xb @ [y1] setinterleaves ((x @ [y1], xa @ [y1]), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                      y1 \\<in> A \\<longrightarrow>\n                      sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)", "from th0pre a b c"], ["proof (chain)\npicking this:\n  \\<lbrakk>a = aa \\<and> aa \\<in> A; sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((list, lista), A)\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<and>\n            y1 \\<in> A \\<longrightarrow>\n            xb @ [y1] setinterleaves ((x @ [y1], xa @ [y1]), A))\n  t = a # list\n  u = aa # lista", "have th0pre1: \"a=aa\\<and>aa\\<in> A\\<Longrightarrow>sa setinterleaves ((t, u), A)\\<and> y1 \\<in> A\\<Longrightarrow>\n      ((tl sa) @ [y1]) setinterleaves ((list@ [y1], lista @ [y1]), A)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>a = aa \\<and> aa \\<in> A; sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((list, lista), A)\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<and>\n            y1 \\<in> A \\<longrightarrow>\n            xb @ [y1] setinterleaves ((x @ [y1], xa @ [y1]), A))\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = aa \\<and> aa \\<in> A;\n     sa setinterleaves ((t, u), A) \\<and> y1 \\<in> A\\<rbrakk>\n    \\<Longrightarrow> tl sa @\n                      [y1] setinterleaves ((list @ [y1], lista @ [y1]), A)", "by (metis add_less_mono length_Cons lessI)"], ["proof (state)\nthis:\n  \\<lbrakk>a = aa \\<and> aa \\<in> A;\n   sa setinterleaves ((t, u), A) \\<and> y1 \\<in> A\\<rbrakk>\n  \\<Longrightarrow> tl sa @\n                    [y1] setinterleaves ((list @ [y1], lista @ [y1]), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<and>\n                       y1 \\<in> A \\<longrightarrow>\n                       xb @ [y1] setinterleaves ((x @ [y1], xa @ [y1]), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                      y1 \\<in> A \\<longrightarrow>\n                      sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)", "from  th0pre th0pre1 b c"], ["proof (chain)\npicking this:\n  \\<lbrakk>a = aa \\<and> aa \\<in> A; sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((list, lista), A)\n  \\<lbrakk>a = aa \\<and> aa \\<in> A;\n   sa setinterleaves ((t, u), A) \\<and> y1 \\<in> A\\<rbrakk>\n  \\<Longrightarrow> tl sa @\n                    [y1] setinterleaves ((list @ [y1], lista @ [y1]), A)\n  t = a # list\n  u = aa # lista", "have th0: \"a=aa\\<and>a\\<in>A\\<Longrightarrow>sa setinterleaves ((t, u), A) \\<and> y1 \\<in> A \\<longrightarrow> \n      (sa @ [y1]) setinterleaves ((t @ [y1], u @ [y1]), A)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>a = aa \\<and> aa \\<in> A; sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((list, lista), A)\n  \\<lbrakk>a = aa \\<and> aa \\<in> A;\n   sa setinterleaves ((t, u), A) \\<and> y1 \\<in> A\\<rbrakk>\n  \\<Longrightarrow> tl sa @\n                    [y1] setinterleaves ((list @ [y1], lista @ [y1]), A)\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. a = aa \\<and> a \\<in> A \\<Longrightarrow>\n    sa setinterleaves ((t, u), A) \\<and> y1 \\<in> A \\<longrightarrow>\n    sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)", "by auto"], ["proof (state)\nthis:\n  a = aa \\<and> a \\<in> A \\<Longrightarrow>\n  sa setinterleaves ((t, u), A) \\<and> y1 \\<in> A \\<longrightarrow>\n  sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<and>\n                       y1 \\<in> A \\<longrightarrow>\n                       xb @ [y1] setinterleaves ((x @ [y1], xa @ [y1]), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                      y1 \\<in> A \\<longrightarrow>\n                      sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)", "from b c"], ["proof (chain)\npicking this:\n  t = a # list\n  u = aa # lista", "have th1pre: \"a\\<notin>A\\<and>aa\\<in> A\\<Longrightarrow>sa setinterleaves ((t, u), A) \\<Longrightarrow>\n      (tl sa) setinterleaves ((list,aa#lista), A)\""], ["proof (prove)\nusing this:\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n     sa setinterleaves ((t, u), A)\\<rbrakk>\n    \\<Longrightarrow> tl sa setinterleaves ((list, aa # lista), A)", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n   sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((list, aa # lista), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<and>\n                       y1 \\<in> A \\<longrightarrow>\n                       xb @ [y1] setinterleaves ((x @ [y1], xa @ [y1]), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                      y1 \\<in> A \\<longrightarrow>\n                      sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)", "from th1pre a b c"], ["proof (chain)\npicking this:\n  \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n   sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((list, aa # lista), A)\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<and>\n            y1 \\<in> A \\<longrightarrow>\n            xb @ [y1] setinterleaves ((x @ [y1], xa @ [y1]), A))\n  t = a # list\n  u = aa # lista", "have th1pre1: \"a\\<notin>A\\<and>aa\\<in> A\\<Longrightarrow>sa setinterleaves ((t, u), A)\\<and> y1 \\<in> A\\<Longrightarrow>\n      ((tl sa) @ [y1]) setinterleaves ((list@ [y1], aa#lista @ [y1]), A)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n   sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((list, aa # lista), A)\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<and>\n            y1 \\<in> A \\<longrightarrow>\n            xb @ [y1] setinterleaves ((x @ [y1], xa @ [y1]), A))\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n     sa setinterleaves ((t, u), A) \\<and> y1 \\<in> A\\<rbrakk>\n    \\<Longrightarrow> tl sa @\n                      [y1] setinterleaves ((list @\n      [y1], aa # lista @ [y1]), A)", "by (metis add_Suc append_Cons length_Cons lessI)"], ["proof (state)\nthis:\n  \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n   sa setinterleaves ((t, u), A) \\<and> y1 \\<in> A\\<rbrakk>\n  \\<Longrightarrow> tl sa @\n                    [y1] setinterleaves ((list @\n    [y1], aa # lista @ [y1]), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<and>\n                       y1 \\<in> A \\<longrightarrow>\n                       xb @ [y1] setinterleaves ((x @ [y1], xa @ [y1]), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                      y1 \\<in> A \\<longrightarrow>\n                      sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)", "from  th1pre th1pre1 b c"], ["proof (chain)\npicking this:\n  \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n   sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((list, aa # lista), A)\n  \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n   sa setinterleaves ((t, u), A) \\<and> y1 \\<in> A\\<rbrakk>\n  \\<Longrightarrow> tl sa @\n                    [y1] setinterleaves ((list @\n    [y1], aa # lista @ [y1]), A)\n  t = a # list\n  u = aa # lista", "have th1: \"a\\<notin>A\\<and>aa\\<in> A\\<Longrightarrow>sa setinterleaves ((t, u), A) \\<and> y1 \\<in> A \\<longrightarrow> \n      (sa @ [y1]) setinterleaves ((t @ [y1], u @ [y1]), A)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n   sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((list, aa # lista), A)\n  \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n   sa setinterleaves ((t, u), A) \\<and> y1 \\<in> A\\<rbrakk>\n  \\<Longrightarrow> tl sa @\n                    [y1] setinterleaves ((list @\n    [y1], aa # lista @ [y1]), A)\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. a \\<notin> A \\<and> aa \\<in> A \\<Longrightarrow>\n    sa setinterleaves ((t, u), A) \\<and> y1 \\<in> A \\<longrightarrow>\n    sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)", "by auto"], ["proof (state)\nthis:\n  a \\<notin> A \\<and> aa \\<in> A \\<Longrightarrow>\n  sa setinterleaves ((t, u), A) \\<and> y1 \\<in> A \\<longrightarrow>\n  sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<and>\n                       y1 \\<in> A \\<longrightarrow>\n                       xb @ [y1] setinterleaves ((x @ [y1], xa @ [y1]), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                      y1 \\<in> A \\<longrightarrow>\n                      sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)", "from b c"], ["proof (chain)\npicking this:\n  t = a # list\n  u = aa # lista", "have th2pre: \"aa\\<notin>A\\<and>a\\<in> A\\<Longrightarrow>sa setinterleaves ((t, u), A) \\<Longrightarrow>\n      (tl sa) setinterleaves ((a#list,lista), A)\""], ["proof (prove)\nusing this:\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n     sa setinterleaves ((t, u), A)\\<rbrakk>\n    \\<Longrightarrow> tl sa setinterleaves ((a # list, lista), A)", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n   sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((a # list, lista), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<and>\n                       y1 \\<in> A \\<longrightarrow>\n                       xb @ [y1] setinterleaves ((x @ [y1], xa @ [y1]), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                      y1 \\<in> A \\<longrightarrow>\n                      sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)", "from th2pre a b c"], ["proof (chain)\npicking this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n   sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((a # list, lista), A)\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<and>\n            y1 \\<in> A \\<longrightarrow>\n            xb @ [y1] setinterleaves ((x @ [y1], xa @ [y1]), A))\n  t = a # list\n  u = aa # lista", "have th2pre1: \"aa\\<notin>A\\<and>a\\<in> A\\<Longrightarrow>sa setinterleaves ((t, u), A)\\<and> y1 \\<in> A\\<Longrightarrow>\n      ((tl sa) @ [y1]) setinterleaves ((a#list@ [y1], lista @ [y1]), A)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n   sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((a # list, lista), A)\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<and>\n            y1 \\<in> A \\<longrightarrow>\n            xb @ [y1] setinterleaves ((x @ [y1], xa @ [y1]), A))\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n     sa setinterleaves ((t, u), A) \\<and> y1 \\<in> A\\<rbrakk>\n    \\<Longrightarrow> tl sa @\n                      [y1] setinterleaves ((a #\n      list @ [y1], lista @ [y1]), A)", "by (metis add_Suc_right append_Cons length_Cons lessI)"], ["proof (state)\nthis:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n   sa setinterleaves ((t, u), A) \\<and> y1 \\<in> A\\<rbrakk>\n  \\<Longrightarrow> tl sa @\n                    [y1] setinterleaves ((a # list @ [y1], lista @ [y1]), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<and>\n                       y1 \\<in> A \\<longrightarrow>\n                       xb @ [y1] setinterleaves ((x @ [y1], xa @ [y1]), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                      y1 \\<in> A \\<longrightarrow>\n                      sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)", "from  th2pre th2pre1 b c"], ["proof (chain)\npicking this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n   sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((a # list, lista), A)\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n   sa setinterleaves ((t, u), A) \\<and> y1 \\<in> A\\<rbrakk>\n  \\<Longrightarrow> tl sa @\n                    [y1] setinterleaves ((a # list @ [y1], lista @ [y1]), A)\n  t = a # list\n  u = aa # lista", "have th2: \"aa\\<notin>A\\<and>a\\<in> A\\<Longrightarrow>sa setinterleaves ((t, u), A) \\<and> y1 \\<in> A \\<longrightarrow> \n      (sa @ [y1]) setinterleaves ((t @ [y1], u @ [y1]), A)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n   sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((a # list, lista), A)\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n   sa setinterleaves ((t, u), A) \\<and> y1 \\<in> A\\<rbrakk>\n  \\<Longrightarrow> tl sa @\n                    [y1] setinterleaves ((a # list @ [y1], lista @ [y1]), A)\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. aa \\<notin> A \\<and> a \\<in> A \\<Longrightarrow>\n    sa setinterleaves ((t, u), A) \\<and> y1 \\<in> A \\<longrightarrow>\n    sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)", "by auto"], ["proof (state)\nthis:\n  aa \\<notin> A \\<and> a \\<in> A \\<Longrightarrow>\n  sa setinterleaves ((t, u), A) \\<and> y1 \\<in> A \\<longrightarrow>\n  sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<and>\n                       y1 \\<in> A \\<longrightarrow>\n                       xb @ [y1] setinterleaves ((x @ [y1], xa @ [y1]), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                      y1 \\<in> A \\<longrightarrow>\n                      sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)", "from b c"], ["proof (chain)\npicking this:\n  t = a # list\n  u = aa # lista", "have th3pre: \"aa\\<notin>A\\<and>a\\<notin> A\\<Longrightarrow>sa setinterleaves ((t, u), A)\\<Longrightarrow>\n      (tl sa) setinterleaves((a#list,lista), A)\\<or>(tl sa)setinterleaves ((list,aa#lista), A)\""], ["proof (prove)\nusing this:\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n     sa setinterleaves ((t, u), A)\\<rbrakk>\n    \\<Longrightarrow> tl sa setinterleaves ((a # list, lista), A) \\<or>\n                      tl sa setinterleaves ((list, aa # lista), A)", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((a # list, lista), A) \\<or>\n                    tl sa setinterleaves ((list, aa # lista), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<and>\n                       y1 \\<in> A \\<longrightarrow>\n                       xb @ [y1] setinterleaves ((x @ [y1], xa @ [y1]), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                      y1 \\<in> A \\<longrightarrow>\n                      sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)", "from th3pre a b c"], ["proof (chain)\npicking this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((a # list, lista), A) \\<or>\n                    tl sa setinterleaves ((list, aa # lista), A)\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<and>\n            y1 \\<in> A \\<longrightarrow>\n            xb @ [y1] setinterleaves ((x @ [y1], xa @ [y1]), A))\n  t = a # list\n  u = aa # lista", "have th3pre1: \"aa\\<notin>A\\<and>a\\<notin> A\\<Longrightarrow>sa setinterleaves ((t, u), A)\\<and>\n      (tl sa) setinterleaves ((a#list,lista), A)\\<and> y1 \\<in> A \\<Longrightarrow>\n      ((tl sa) @ [y1]) setinterleaves ((a#list@ [y1], lista @ [y1]), A)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((a # list, lista), A) \\<or>\n                    tl sa setinterleaves ((list, aa # lista), A)\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<and>\n            y1 \\<in> A \\<longrightarrow>\n            xb @ [y1] setinterleaves ((x @ [y1], xa @ [y1]), A))\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n     sa setinterleaves ((t, u), A) \\<and>\n     tl sa setinterleaves ((a # list, lista), A) \\<and> y1 \\<in> A\\<rbrakk>\n    \\<Longrightarrow> tl sa @\n                      [y1] setinterleaves ((a #\n      list @ [y1], lista @ [y1]), A)", "by (metis add_Suc_right append_Cons length_Cons lessI)"], ["proof (state)\nthis:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   sa setinterleaves ((t, u), A) \\<and>\n   tl sa setinterleaves ((a # list, lista), A) \\<and> y1 \\<in> A\\<rbrakk>\n  \\<Longrightarrow> tl sa @\n                    [y1] setinterleaves ((a # list @ [y1], lista @ [y1]), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<and>\n                       y1 \\<in> A \\<longrightarrow>\n                       xb @ [y1] setinterleaves ((x @ [y1], xa @ [y1]), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                      y1 \\<in> A \\<longrightarrow>\n                      sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)", "from th3pre a b c"], ["proof (chain)\npicking this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((a # list, lista), A) \\<or>\n                    tl sa setinterleaves ((list, aa # lista), A)\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<and>\n            y1 \\<in> A \\<longrightarrow>\n            xb @ [y1] setinterleaves ((x @ [y1], xa @ [y1]), A))\n  t = a # list\n  u = aa # lista", "have th3pre2: \"aa\\<notin>A\\<and>a\\<notin> A\\<Longrightarrow>sa setinterleaves ((t, u), A)\\<and>\n      (tl sa) setinterleaves ((list,aa#lista), A)\\<and> y1 \\<in> A \\<Longrightarrow>\n      ((tl sa) @ [y1]) setinterleaves ((list@ [y1], aa#lista @ [y1]), A)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((a # list, lista), A) \\<or>\n                    tl sa setinterleaves ((list, aa # lista), A)\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<and>\n            y1 \\<in> A \\<longrightarrow>\n            xb @ [y1] setinterleaves ((x @ [y1], xa @ [y1]), A))\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n     sa setinterleaves ((t, u), A) \\<and>\n     tl sa setinterleaves ((list, aa # lista), A) \\<and> y1 \\<in> A\\<rbrakk>\n    \\<Longrightarrow> tl sa @\n                      [y1] setinterleaves ((list @\n      [y1], aa # lista @ [y1]), A)", "by (metis add_Suc append_Cons length_Cons lessI)"], ["proof (state)\nthis:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   sa setinterleaves ((t, u), A) \\<and>\n   tl sa setinterleaves ((list, aa # lista), A) \\<and> y1 \\<in> A\\<rbrakk>\n  \\<Longrightarrow> tl sa @\n                    [y1] setinterleaves ((list @\n    [y1], aa # lista @ [y1]), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<and>\n                       y1 \\<in> A \\<longrightarrow>\n                       xb @ [y1] setinterleaves ((x @ [y1], xa @ [y1]), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                      y1 \\<in> A \\<longrightarrow>\n                      sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)", "from th3pre th3pre1 th3pre2 a b c"], ["proof (chain)\npicking this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((a # list, lista), A) \\<or>\n                    tl sa setinterleaves ((list, aa # lista), A)\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   sa setinterleaves ((t, u), A) \\<and>\n   tl sa setinterleaves ((a # list, lista), A) \\<and> y1 \\<in> A\\<rbrakk>\n  \\<Longrightarrow> tl sa @\n                    [y1] setinterleaves ((a # list @ [y1], lista @ [y1]), A)\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   sa setinterleaves ((t, u), A) \\<and>\n   tl sa setinterleaves ((list, aa # lista), A) \\<and> y1 \\<in> A\\<rbrakk>\n  \\<Longrightarrow> tl sa @\n                    [y1] setinterleaves ((list @\n    [y1], aa # lista @ [y1]), A)\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<and>\n            y1 \\<in> A \\<longrightarrow>\n            xb @ [y1] setinterleaves ((x @ [y1], xa @ [y1]), A))\n  t = a # list\n  u = aa # lista", "have th3: \"aa\\<notin>A\\<and>a\\<notin> A\\<Longrightarrow>sa setinterleaves ((t, u), A) \\<and> \n      y1 \\<in> A \\<longrightarrow> (sa @ [y1]) setinterleaves ((t @ [y1], u @ [y1]), A)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   sa setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl sa setinterleaves ((a # list, lista), A) \\<or>\n                    tl sa setinterleaves ((list, aa # lista), A)\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   sa setinterleaves ((t, u), A) \\<and>\n   tl sa setinterleaves ((a # list, lista), A) \\<and> y1 \\<in> A\\<rbrakk>\n  \\<Longrightarrow> tl sa @\n                    [y1] setinterleaves ((a # list @ [y1], lista @ [y1]), A)\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   sa setinterleaves ((t, u), A) \\<and>\n   tl sa setinterleaves ((list, aa # lista), A) \\<and> y1 \\<in> A\\<rbrakk>\n  \\<Longrightarrow> tl sa @\n                    [y1] setinterleaves ((list @\n    [y1], aa # lista @ [y1]), A)\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<and>\n            y1 \\<in> A \\<longrightarrow>\n            xb @ [y1] setinterleaves ((x @ [y1], xa @ [y1]), A))\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. aa \\<notin> A \\<and> a \\<notin> A \\<Longrightarrow>\n    sa setinterleaves ((t, u), A) \\<and> y1 \\<in> A \\<longrightarrow>\n    sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)", "by auto"], ["proof (state)\nthis:\n  aa \\<notin> A \\<and> a \\<notin> A \\<Longrightarrow>\n  sa setinterleaves ((t, u), A) \\<and> y1 \\<in> A \\<longrightarrow>\n  sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<and>\n                       y1 \\<in> A \\<longrightarrow>\n                       xb @ [y1] setinterleaves ((x @ [y1], xa @ [y1]), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> sa setinterleaves ((t, u), A) \\<and>\n                      y1 \\<in> A \\<longrightarrow>\n                      sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. sa setinterleaves ((t, u), A) \\<and> y1 \\<in> A \\<longrightarrow>\n    sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)", "using b c th0 th1 th2 th3"], ["proof (prove)\nusing this:\n  t = a # list\n  u = aa # lista\n  a = aa \\<and> a \\<in> A \\<Longrightarrow>\n  sa setinterleaves ((t, u), A) \\<and> y1 \\<in> A \\<longrightarrow>\n  sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)\n  a \\<notin> A \\<and> aa \\<in> A \\<Longrightarrow>\n  sa setinterleaves ((t, u), A) \\<and> y1 \\<in> A \\<longrightarrow>\n  sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)\n  aa \\<notin> A \\<and> a \\<in> A \\<Longrightarrow>\n  sa setinterleaves ((t, u), A) \\<and> y1 \\<in> A \\<longrightarrow>\n  sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)\n  aa \\<notin> A \\<and> a \\<notin> A \\<Longrightarrow>\n  sa setinterleaves ((t, u), A) \\<and> y1 \\<in> A \\<longrightarrow>\n  sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)\n\ngoal (1 subgoal):\n 1. sa setinterleaves ((t, u), A) \\<and> y1 \\<in> A \\<longrightarrow>\n    sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)", "by auto"], ["proof (state)\nthis:\n  sa setinterleaves ((t, u), A) \\<and> y1 \\<in> A \\<longrightarrow>\n  sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sa setinterleaves ((t, u), A) \\<and> y1 \\<in> A \\<longrightarrow>\n  sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sa setinterleaves ((t, u), A) \\<and> y1 \\<in> A \\<longrightarrow>\n  sa @ [y1] setinterleaves ((t @ [y1], u @ [y1]), A)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma doubleReverse: \"s1 setinterleaves ((t, u), A)\\<longrightarrow>(rev s1) setinterleaves ((rev t, rev u), A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s1 setinterleaves ((t, u), A) \\<longrightarrow>\n    rev s1 setinterleaves ((rev t, rev u), A)", "proof (induction \"length t + length u\" arbitrary:s1 t u rule:nat_less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t u s1.\n       \\<forall>m<length t + length u.\n          \\<forall>x xa.\n             m = length x + length xa \\<longrightarrow>\n             (\\<forall>xb.\n                 xb setinterleaves ((x, xa), A) \\<longrightarrow>\n                 rev xb setinterleaves ((rev\n    x, rev xa), A)) \\<Longrightarrow>\n       s1 setinterleaves ((t, u), A) \\<longrightarrow>\n       rev s1 setinterleaves ((rev t, rev u), A)", "case 1"], ["proof (state)\nthis:\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<longrightarrow>\n            rev xb setinterleaves ((rev x, rev xa), A))\n\ngoal (1 subgoal):\n 1. \\<And>t u s1.\n       \\<forall>m<length t + length u.\n          \\<forall>x xa.\n             m = length x + length xa \\<longrightarrow>\n             (\\<forall>xb.\n                 xb setinterleaves ((x, xa), A) \\<longrightarrow>\n                 rev xb setinterleaves ((rev\n    x, rev xa), A)) \\<Longrightarrow>\n       s1 setinterleaves ((t, u), A) \\<longrightarrow>\n       rev s1 setinterleaves ((rev t, rev u), A)", "then"], ["proof (chain)\npicking this:\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<longrightarrow>\n            rev xb setinterleaves ((rev x, rev xa), A))", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<longrightarrow>\n            rev xb setinterleaves ((rev x, rev xa), A))\n\ngoal (1 subgoal):\n 1. s1 setinterleaves ((t, u), A) \\<longrightarrow>\n    rev s1 setinterleaves ((rev t, rev u), A)", "apply(cases t)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<longrightarrow>\n                       rev xb setinterleaves ((rev x, rev xa), A));\n     t = []\\<rbrakk>\n    \\<Longrightarrow> s1 setinterleaves ((t, u), A) \\<longrightarrow>\n                      rev s1 setinterleaves ((rev t, rev u), A)\n 2. \\<And>a list.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb.\n                          xb setinterleaves ((x, xa), A) \\<longrightarrow>\n                          rev xb setinterleaves ((rev x, rev xa), A));\n        t = a # list\\<rbrakk>\n       \\<Longrightarrow> s1 setinterleaves ((t, u), A) \\<longrightarrow>\n                         rev s1 setinterleaves ((rev t, rev u), A)", "using emptyLeftNonSync"], ["proof (prove)\nusing this:\n  \\<forall>s.\n     s setinterleaves (([], ?t), ?A) \\<longrightarrow>\n     (\\<forall>t1. t1 \\<in> set ?t \\<longrightarrow> t1 \\<notin> ?A)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<longrightarrow>\n                       rev xb setinterleaves ((rev x, rev xa), A));\n     t = []\\<rbrakk>\n    \\<Longrightarrow> s1 setinterleaves ((t, u), A) \\<longrightarrow>\n                      rev s1 setinterleaves ((rev t, rev u), A)\n 2. \\<And>a list.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb.\n                          xb setinterleaves ((x, xa), A) \\<longrightarrow>\n                          rev xb setinterleaves ((rev x, rev xa), A));\n        t = a # list\\<rbrakk>\n       \\<Longrightarrow> s1 setinterleaves ((t, u), A) \\<longrightarrow>\n                         rev s1 setinterleaves ((rev t, rev u), A)", "apply (metis emptyLeftProperty emptyLeftSelf rev.simps(1) set_rev)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb.\n                          xb setinterleaves ((x, xa), A) \\<longrightarrow>\n                          rev xb setinterleaves ((rev x, rev xa), A));\n        t = a # list\\<rbrakk>\n       \\<Longrightarrow> s1 setinterleaves ((t, u), A) \\<longrightarrow>\n                         rev s1 setinterleaves ((rev t, rev u), A)", "apply(cases u)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a list.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb.\n                          xb setinterleaves ((x, xa), A) \\<longrightarrow>\n                          rev xb setinterleaves ((rev x, rev xa), A));\n        t = a # list; u = []\\<rbrakk>\n       \\<Longrightarrow> s1 setinterleaves ((t, u), A) \\<longrightarrow>\n                         rev s1 setinterleaves ((rev t, rev u), A)\n 2. \\<And>a list aa lista.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb.\n                          xb setinterleaves ((x, xa), A) \\<longrightarrow>\n                          rev xb setinterleaves ((rev x, rev xa), A));\n        t = a # list; u = aa # lista\\<rbrakk>\n       \\<Longrightarrow> s1 setinterleaves ((t, u), A) \\<longrightarrow>\n                         rev s1 setinterleaves ((rev t, rev u), A)", "using sym"], ["proof (prove)\nusing this:\n  setinterleaving (?s, ?X, ?t) = setinterleaving (?t, ?X, ?s)\n\ngoal (2 subgoals):\n 1. \\<And>a list.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb.\n                          xb setinterleaves ((x, xa), A) \\<longrightarrow>\n                          rev xb setinterleaves ((rev x, rev xa), A));\n        t = a # list; u = []\\<rbrakk>\n       \\<Longrightarrow> s1 setinterleaves ((t, u), A) \\<longrightarrow>\n                         rev s1 setinterleaves ((rev t, rev u), A)\n 2. \\<And>a list aa lista.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb.\n                          xb setinterleaves ((x, xa), A) \\<longrightarrow>\n                          rev xb setinterleaves ((rev x, rev xa), A));\n        t = a # list; u = aa # lista\\<rbrakk>\n       \\<Longrightarrow> s1 setinterleaves ((t, u), A) \\<longrightarrow>\n                         rev s1 setinterleaves ((rev t, rev u), A)", "apply (metis (no_types, lifting) emptyLeftNonSync emptyLeftProperty emptyLeftSelf \n     rev.simps(1) set_rev)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list aa lista.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb.\n                          xb setinterleaves ((x, xa), A) \\<longrightarrow>\n                          rev xb setinterleaves ((rev x, rev xa), A));\n        t = a # list; u = aa # lista\\<rbrakk>\n       \\<Longrightarrow> s1 setinterleaves ((t, u), A) \\<longrightarrow>\n                         rev s1 setinterleaves ((rev t, rev u), A)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list aa lista.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb.\n                          xb setinterleaves ((x, xa), A) \\<longrightarrow>\n                          rev xb setinterleaves ((rev x, rev xa), A));\n        t = a # list; u = aa # lista\\<rbrakk>\n       \\<Longrightarrow> s1 setinterleaves ((t, u), A) \\<longrightarrow>\n                         rev s1 setinterleaves ((rev t, rev u), A)", "fix a list aa lista"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list aa lista.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb.\n                          xb setinterleaves ((x, xa), A) \\<longrightarrow>\n                          rev xb setinterleaves ((rev x, rev xa), A));\n        t = a # list; u = aa # lista\\<rbrakk>\n       \\<Longrightarrow> s1 setinterleaves ((t, u), A) \\<longrightarrow>\n                         rev s1 setinterleaves ((rev t, rev u), A)", "assume a: \"\\<forall>m<length t + length u. \\<forall>x xa. m = length x + length xa \\<longrightarrow>\n               (\\<forall>xb. xb setinterleaves ((x, xa), A) \\<longrightarrow>rev xb setinterleaves ((rev x, rev xa), A))\"\n    and b: \"t = a # list\"\n    and c: \"u = aa # lista\""], ["proof (state)\nthis:\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<longrightarrow>\n            rev xb setinterleaves ((rev x, rev xa), A))\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<And>a list aa lista.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb.\n                          xb setinterleaves ((x, xa), A) \\<longrightarrow>\n                          rev xb setinterleaves ((rev x, rev xa), A));\n        t = a # list; u = aa # lista\\<rbrakk>\n       \\<Longrightarrow> s1 setinterleaves ((t, u), A) \\<longrightarrow>\n                         rev s1 setinterleaves ((rev t, rev u), A)", "thus \"s1 setinterleaves ((t, u), A) \\<longrightarrow>rev s1 setinterleaves ((rev t, rev u), A)\""], ["proof (prove)\nusing this:\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<longrightarrow>\n            rev xb setinterleaves ((rev x, rev xa), A))\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. s1 setinterleaves ((t, u), A) \\<longrightarrow>\n    rev s1 setinterleaves ((rev t, rev u), A)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<longrightarrow>\n                       rev xb setinterleaves ((rev x, rev xa), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> s1 setinterleaves ((t, u), A) \\<longrightarrow>\n                      rev s1 setinterleaves ((rev t, rev u), A)", "from b c"], ["proof (chain)\npicking this:\n  t = a # list\n  u = aa # lista", "have th0pre: \"a=aa\\<and>aa\\<in> A\\<Longrightarrow>s1 setinterleaves ((t, u), A)\\<Longrightarrow>\n      (tl s1) setinterleaves ((list,lista), A)\""], ["proof (prove)\nusing this:\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = aa \\<and> aa \\<in> A;\n     s1 setinterleaves ((t, u), A)\\<rbrakk>\n    \\<Longrightarrow> tl s1 setinterleaves ((list, lista), A)", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>a = aa \\<and> aa \\<in> A; s1 setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s1 setinterleaves ((list, lista), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<longrightarrow>\n                       rev xb setinterleaves ((rev x, rev xa), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> s1 setinterleaves ((t, u), A) \\<longrightarrow>\n                      rev s1 setinterleaves ((rev t, rev u), A)", "from th0pre a b c"], ["proof (chain)\npicking this:\n  \\<lbrakk>a = aa \\<and> aa \\<in> A; s1 setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s1 setinterleaves ((list, lista), A)\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<longrightarrow>\n            rev xb setinterleaves ((rev x, rev xa), A))\n  t = a # list\n  u = aa # lista", "have th0pre1: \"a=aa\\<and>aa\\<in> A\\<Longrightarrow>s1 setinterleaves ((t, u), A)\\<Longrightarrow>\n      ((rev (tl s1)) setinterleaves ((rev list, rev lista), A))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>a = aa \\<and> aa \\<in> A; s1 setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s1 setinterleaves ((list, lista), A)\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<longrightarrow>\n            rev xb setinterleaves ((rev x, rev xa), A))\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = aa \\<and> aa \\<in> A;\n     s1 setinterleaves ((t, u), A)\\<rbrakk>\n    \\<Longrightarrow> rev (tl s1) setinterleaves ((rev list, rev lista), A)", "by (metis add_less_mono length_Cons lessI)"], ["proof (state)\nthis:\n  \\<lbrakk>a = aa \\<and> aa \\<in> A; s1 setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> rev (tl s1) setinterleaves ((rev list, rev lista), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<longrightarrow>\n                       rev xb setinterleaves ((rev x, rev xa), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> s1 setinterleaves ((t, u), A) \\<longrightarrow>\n                      rev s1 setinterleaves ((rev t, rev u), A)", "from  th0pre th0pre1 b c"], ["proof (chain)\npicking this:\n  \\<lbrakk>a = aa \\<and> aa \\<in> A; s1 setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s1 setinterleaves ((list, lista), A)\n  \\<lbrakk>a = aa \\<and> aa \\<in> A; s1 setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> rev (tl s1) setinterleaves ((rev list, rev lista), A)\n  t = a # list\n  u = aa # lista", "have th0: \"a=aa\\<and>aa\\<in> A\\<Longrightarrow>s1 setinterleaves ((t, u), A) \\<longrightarrow>\n      rev s1 setinterleaves ((rev t, rev u), A)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>a = aa \\<and> aa \\<in> A; s1 setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s1 setinterleaves ((list, lista), A)\n  \\<lbrakk>a = aa \\<and> aa \\<in> A; s1 setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> rev (tl s1) setinterleaves ((rev list, rev lista), A)\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. a = aa \\<and> aa \\<in> A \\<Longrightarrow>\n    s1 setinterleaves ((t, u), A) \\<longrightarrow>\n    rev s1 setinterleaves ((rev t, rev u), A)", "using addSync"], ["proof (prove)\nusing this:\n  \\<lbrakk>a = aa \\<and> aa \\<in> A; s1 setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s1 setinterleaves ((list, lista), A)\n  \\<lbrakk>a = aa \\<and> aa \\<in> A; s1 setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> rev (tl s1) setinterleaves ((rev list, rev lista), A)\n  t = a # list\n  u = aa # lista\n  ?sa setinterleaves ((?t, ?u), ?A) \\<and> ?y1.0 \\<in> ?A \\<longrightarrow>\n  ?sa @ [?y1.0] setinterleaves ((?t @ [?y1.0], ?u @ [?y1.0]), ?A)\n\ngoal (1 subgoal):\n 1. a = aa \\<and> aa \\<in> A \\<Longrightarrow>\n    s1 setinterleaves ((t, u), A) \\<longrightarrow>\n    rev s1 setinterleaves ((rev t, rev u), A)", "by fastforce"], ["proof (state)\nthis:\n  a = aa \\<and> aa \\<in> A \\<Longrightarrow>\n  s1 setinterleaves ((t, u), A) \\<longrightarrow>\n  rev s1 setinterleaves ((rev t, rev u), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<longrightarrow>\n                       rev xb setinterleaves ((rev x, rev xa), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> s1 setinterleaves ((t, u), A) \\<longrightarrow>\n                      rev s1 setinterleaves ((rev t, rev u), A)", "from b c"], ["proof (chain)\npicking this:\n  t = a # list\n  u = aa # lista", "have th1pre: \"a\\<notin>A\\<and>aa\\<in> A\\<Longrightarrow>s1 setinterleaves ((t, u), A)\\<Longrightarrow>\n      (tl s1) setinterleaves ((list,aa#lista), A)\""], ["proof (prove)\nusing this:\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n     s1 setinterleaves ((t, u), A)\\<rbrakk>\n    \\<Longrightarrow> tl s1 setinterleaves ((list, aa # lista), A)", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n   s1 setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s1 setinterleaves ((list, aa # lista), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<longrightarrow>\n                       rev xb setinterleaves ((rev x, rev xa), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> s1 setinterleaves ((t, u), A) \\<longrightarrow>\n                      rev s1 setinterleaves ((rev t, rev u), A)", "from th1pre a b c"], ["proof (chain)\npicking this:\n  \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n   s1 setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s1 setinterleaves ((list, aa # lista), A)\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<longrightarrow>\n            rev xb setinterleaves ((rev x, rev xa), A))\n  t = a # list\n  u = aa # lista", "have th1pre1: \"a\\<notin>A\\<and>aa\\<in> A\\<Longrightarrow>s1 setinterleaves ((t, u), A)\\<Longrightarrow>\n      ((rev (tl s1)) setinterleaves ((rev list, rev (aa#lista)), A))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n   s1 setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s1 setinterleaves ((list, aa # lista), A)\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<longrightarrow>\n            rev xb setinterleaves ((rev x, rev xa), A))\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n     s1 setinterleaves ((t, u), A)\\<rbrakk>\n    \\<Longrightarrow> rev (tl s1) setinterleaves ((rev\n              list, rev (aa # lista)), A)", "by (metis add_less_mono1 length_Cons lessI)"], ["proof (state)\nthis:\n  \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n   s1 setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> rev (tl s1) setinterleaves ((rev\n            list, rev (aa # lista)), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<longrightarrow>\n                       rev xb setinterleaves ((rev x, rev xa), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> s1 setinterleaves ((t, u), A) \\<longrightarrow>\n                      rev s1 setinterleaves ((rev t, rev u), A)", "from  th1pre th1pre1 b c"], ["proof (chain)\npicking this:\n  \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n   s1 setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s1 setinterleaves ((list, aa # lista), A)\n  \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n   s1 setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> rev (tl s1) setinterleaves ((rev\n            list, rev (aa # lista)), A)\n  t = a # list\n  u = aa # lista", "have th1: \"a\\<notin>A\\<and>aa\\<in> A\\<Longrightarrow>s1 setinterleaves ((t, u), A) \\<longrightarrow>\n      rev s1 setinterleaves ((rev t, rev u), A)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n   s1 setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s1 setinterleaves ((list, aa # lista), A)\n  \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n   s1 setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> rev (tl s1) setinterleaves ((rev\n            list, rev (aa # lista)), A)\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. a \\<notin> A \\<and> aa \\<in> A \\<Longrightarrow>\n    s1 setinterleaves ((t, u), A) \\<longrightarrow>\n    rev s1 setinterleaves ((rev t, rev u), A)", "using addNonSync"], ["proof (prove)\nusing this:\n  \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n   s1 setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s1 setinterleaves ((list, aa # lista), A)\n  \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n   s1 setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> rev (tl s1) setinterleaves ((rev\n            list, rev (aa # lista)), A)\n  t = a # list\n  u = aa # lista\n  ?sa setinterleaves ((?t, ?u), ?A) \\<and>\n  ?y1.0 \\<notin> ?A \\<longrightarrow>\n  ?sa @ [?y1.0] setinterleaves ((?t @ [?y1.0], ?u), ?A) \\<and>\n  ?sa @ [?y1.0] setinterleaves ((?t, ?u @ [?y1.0]), ?A)\n\ngoal (1 subgoal):\n 1. a \\<notin> A \\<and> aa \\<in> A \\<Longrightarrow>\n    s1 setinterleaves ((t, u), A) \\<longrightarrow>\n    rev s1 setinterleaves ((rev t, rev u), A)", "by fastforce"], ["proof (state)\nthis:\n  a \\<notin> A \\<and> aa \\<in> A \\<Longrightarrow>\n  s1 setinterleaves ((t, u), A) \\<longrightarrow>\n  rev s1 setinterleaves ((rev t, rev u), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<longrightarrow>\n                       rev xb setinterleaves ((rev x, rev xa), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> s1 setinterleaves ((t, u), A) \\<longrightarrow>\n                      rev s1 setinterleaves ((rev t, rev u), A)", "from b c"], ["proof (chain)\npicking this:\n  t = a # list\n  u = aa # lista", "have th2pre: \"aa\\<notin>A\\<and>a\\<in> A\\<Longrightarrow>s1 setinterleaves ((t, u), A)\\<Longrightarrow>\n      (tl s1) setinterleaves ((a#list,lista), A)\""], ["proof (prove)\nusing this:\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n     s1 setinterleaves ((t, u), A)\\<rbrakk>\n    \\<Longrightarrow> tl s1 setinterleaves ((a # list, lista), A)", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n   s1 setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s1 setinterleaves ((a # list, lista), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<longrightarrow>\n                       rev xb setinterleaves ((rev x, rev xa), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> s1 setinterleaves ((t, u), A) \\<longrightarrow>\n                      rev s1 setinterleaves ((rev t, rev u), A)", "from th2pre a b c"], ["proof (chain)\npicking this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n   s1 setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s1 setinterleaves ((a # list, lista), A)\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<longrightarrow>\n            rev xb setinterleaves ((rev x, rev xa), A))\n  t = a # list\n  u = aa # lista", "have th2pre1: \"aa\\<notin>A\\<and>a\\<in> A\\<Longrightarrow>s1 setinterleaves ((t, u), A)\\<Longrightarrow>\n      ((rev (tl s1)) setinterleaves ((rev (a#list), rev lista), A))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n   s1 setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s1 setinterleaves ((a # list, lista), A)\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<longrightarrow>\n            rev xb setinterleaves ((rev x, rev xa), A))\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n     s1 setinterleaves ((t, u), A)\\<rbrakk>\n    \\<Longrightarrow> rev (tl s1) setinterleaves ((rev\n              (a # list), rev lista), A)", "by (metis add_Suc_right length_Cons lessI)"], ["proof (state)\nthis:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n   s1 setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> rev (tl s1) setinterleaves ((rev\n            (a # list), rev lista), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<longrightarrow>\n                       rev xb setinterleaves ((rev x, rev xa), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> s1 setinterleaves ((t, u), A) \\<longrightarrow>\n                      rev s1 setinterleaves ((rev t, rev u), A)", "from  th2pre th2pre1 b c"], ["proof (chain)\npicking this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n   s1 setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s1 setinterleaves ((a # list, lista), A)\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n   s1 setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> rev (tl s1) setinterleaves ((rev\n            (a # list), rev lista), A)\n  t = a # list\n  u = aa # lista", "have th2: \"aa\\<notin>A\\<and>a\\<in> A\\<Longrightarrow>s1 setinterleaves ((t, u), A) \\<longrightarrow>\n      rev s1 setinterleaves ((rev t, rev u), A)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n   s1 setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s1 setinterleaves ((a # list, lista), A)\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n   s1 setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> rev (tl s1) setinterleaves ((rev\n            (a # list), rev lista), A)\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. aa \\<notin> A \\<and> a \\<in> A \\<Longrightarrow>\n    s1 setinterleaves ((t, u), A) \\<longrightarrow>\n    rev s1 setinterleaves ((rev t, rev u), A)", "using addNonSync"], ["proof (prove)\nusing this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n   s1 setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s1 setinterleaves ((a # list, lista), A)\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n   s1 setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> rev (tl s1) setinterleaves ((rev\n            (a # list), rev lista), A)\n  t = a # list\n  u = aa # lista\n  ?sa setinterleaves ((?t, ?u), ?A) \\<and>\n  ?y1.0 \\<notin> ?A \\<longrightarrow>\n  ?sa @ [?y1.0] setinterleaves ((?t @ [?y1.0], ?u), ?A) \\<and>\n  ?sa @ [?y1.0] setinterleaves ((?t, ?u @ [?y1.0]), ?A)\n\ngoal (1 subgoal):\n 1. aa \\<notin> A \\<and> a \\<in> A \\<Longrightarrow>\n    s1 setinterleaves ((t, u), A) \\<longrightarrow>\n    rev s1 setinterleaves ((rev t, rev u), A)", "by fastforce"], ["proof (state)\nthis:\n  aa \\<notin> A \\<and> a \\<in> A \\<Longrightarrow>\n  s1 setinterleaves ((t, u), A) \\<longrightarrow>\n  rev s1 setinterleaves ((rev t, rev u), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<longrightarrow>\n                       rev xb setinterleaves ((rev x, rev xa), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> s1 setinterleaves ((t, u), A) \\<longrightarrow>\n                      rev s1 setinterleaves ((rev t, rev u), A)", "from b c"], ["proof (chain)\npicking this:\n  t = a # list\n  u = aa # lista", "have th3pre: \"aa\\<notin>A\\<and>a\\<notin> A\\<Longrightarrow>s1 setinterleaves ((t, u), A)\\<Longrightarrow>\n      (tl s1) setinterleaves ((a#list,lista),A)\\<or>(tl s1) setinterleaves((list,aa#lista), A)\""], ["proof (prove)\nusing this:\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n     s1 setinterleaves ((t, u), A)\\<rbrakk>\n    \\<Longrightarrow> tl s1 setinterleaves ((a # list, lista), A) \\<or>\n                      tl s1 setinterleaves ((list, aa # lista), A)", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   s1 setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s1 setinterleaves ((a # list, lista), A) \\<or>\n                    tl s1 setinterleaves ((list, aa # lista), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<longrightarrow>\n                       rev xb setinterleaves ((rev x, rev xa), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> s1 setinterleaves ((t, u), A) \\<longrightarrow>\n                      rev s1 setinterleaves ((rev t, rev u), A)", "from th3pre a b c"], ["proof (chain)\npicking this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   s1 setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s1 setinterleaves ((a # list, lista), A) \\<or>\n                    tl s1 setinterleaves ((list, aa # lista), A)\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<longrightarrow>\n            rev xb setinterleaves ((rev x, rev xa), A))\n  t = a # list\n  u = aa # lista", "have th3pre1: \"aa\\<notin>A\\<and>a\\<notin> A\\<Longrightarrow>s1 setinterleaves ((t, u), A)\\<and>\n      (tl s1) setinterleaves ((a#list,lista), A) \\<Longrightarrow>\n      ((rev (tl s1)) setinterleaves ((rev (a#list), rev (lista)), A))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   s1 setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s1 setinterleaves ((a # list, lista), A) \\<or>\n                    tl s1 setinterleaves ((list, aa # lista), A)\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<longrightarrow>\n            rev xb setinterleaves ((rev x, rev xa), A))\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n     s1 setinterleaves ((t, u), A) \\<and>\n     tl s1 setinterleaves ((a # list, lista), A)\\<rbrakk>\n    \\<Longrightarrow> rev (tl s1) setinterleaves ((rev\n              (a # list), rev lista), A)", "by (metis add_Suc_right length_Cons lessI)"], ["proof (state)\nthis:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   s1 setinterleaves ((t, u), A) \\<and>\n   tl s1 setinterleaves ((a # list, lista), A)\\<rbrakk>\n  \\<Longrightarrow> rev (tl s1) setinterleaves ((rev\n            (a # list), rev lista), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<longrightarrow>\n                       rev xb setinterleaves ((rev x, rev xa), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> s1 setinterleaves ((t, u), A) \\<longrightarrow>\n                      rev s1 setinterleaves ((rev t, rev u), A)", "from th3pre a b c"], ["proof (chain)\npicking this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   s1 setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s1 setinterleaves ((a # list, lista), A) \\<or>\n                    tl s1 setinterleaves ((list, aa # lista), A)\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<longrightarrow>\n            rev xb setinterleaves ((rev x, rev xa), A))\n  t = a # list\n  u = aa # lista", "have th3pre2: \"aa\\<notin>A\\<and>a\\<notin> A\\<Longrightarrow>s1 setinterleaves ((t, u), A)\\<and>\n      (tl s1) setinterleaves ((list,aa#lista), A) \\<Longrightarrow>\n      ((rev (tl s1)) setinterleaves ((rev (list), rev (aa#lista)), A))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   s1 setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s1 setinterleaves ((a # list, lista), A) \\<or>\n                    tl s1 setinterleaves ((list, aa # lista), A)\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<longrightarrow>\n            rev xb setinterleaves ((rev x, rev xa), A))\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n     s1 setinterleaves ((t, u), A) \\<and>\n     tl s1 setinterleaves ((list, aa # lista), A)\\<rbrakk>\n    \\<Longrightarrow> rev (tl s1) setinterleaves ((rev\n              list, rev (aa # lista)), A)", "by (metis add_less_mono1 length_Cons lessI)"], ["proof (state)\nthis:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   s1 setinterleaves ((t, u), A) \\<and>\n   tl s1 setinterleaves ((list, aa # lista), A)\\<rbrakk>\n  \\<Longrightarrow> rev (tl s1) setinterleaves ((rev\n            list, rev (aa # lista)), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<longrightarrow>\n                       rev xb setinterleaves ((rev x, rev xa), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> s1 setinterleaves ((t, u), A) \\<longrightarrow>\n                      rev s1 setinterleaves ((rev t, rev u), A)", "from  th3pre1"], ["proof (chain)\npicking this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   s1 setinterleaves ((t, u), A) \\<and>\n   tl s1 setinterleaves ((a # list, lista), A)\\<rbrakk>\n  \\<Longrightarrow> rev (tl s1) setinterleaves ((rev\n            (a # list), rev lista), A)", "have th3pre31: \"aa\\<notin>A\\<and>a\\<notin> A\\<Longrightarrow>s1 setinterleaves ((t, u), A)\\<and>\n      ((rev (tl s1)) setinterleaves ((rev (a#list), rev (lista)), A))\\<longrightarrow>\n      ((rev (tl s1))@[aa]) setinterleaves ((rev (a#list), (rev (lista))@[aa]), A)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   s1 setinterleaves ((t, u), A) \\<and>\n   tl s1 setinterleaves ((a # list, lista), A)\\<rbrakk>\n  \\<Longrightarrow> rev (tl s1) setinterleaves ((rev\n            (a # list), rev lista), A)\n\ngoal (1 subgoal):\n 1. aa \\<notin> A \\<and> a \\<notin> A \\<Longrightarrow>\n    s1 setinterleaves ((t, u), A) \\<and>\n    rev (tl s1) setinterleaves ((rev (a #\nlist), rev lista), A) \\<longrightarrow>\n    rev (tl s1) @\n    [aa] setinterleaves ((rev (a # list), rev lista @ [aa]), A)", "by (simp add: addNonSync)"], ["proof (state)\nthis:\n  aa \\<notin> A \\<and> a \\<notin> A \\<Longrightarrow>\n  s1 setinterleaves ((t, u), A) \\<and>\n  rev (tl s1) setinterleaves ((rev (a #\n                                    list), rev lista), A) \\<longrightarrow>\n  rev (tl s1) @ [aa] setinterleaves ((rev (a # list), rev lista @ [aa]), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<longrightarrow>\n                       rev xb setinterleaves ((rev x, rev xa), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> s1 setinterleaves ((t, u), A) \\<longrightarrow>\n                      rev s1 setinterleaves ((rev t, rev u), A)", "from  th3pre2"], ["proof (chain)\npicking this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   s1 setinterleaves ((t, u), A) \\<and>\n   tl s1 setinterleaves ((list, aa # lista), A)\\<rbrakk>\n  \\<Longrightarrow> rev (tl s1) setinterleaves ((rev\n            list, rev (aa # lista)), A)", "have th3pre32: \"aa\\<notin>A\\<and>a\\<notin> A\\<Longrightarrow>s1 setinterleaves ((t, u), A)\\<and>\n      ((rev (tl s1)) setinterleaves ((rev (list), rev (aa#lista)), A))\\<longrightarrow>\n      ((rev (tl s1))@[a]) setinterleaves (((rev (list)@[a]), (rev (aa#lista))), A)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   s1 setinterleaves ((t, u), A) \\<and>\n   tl s1 setinterleaves ((list, aa # lista), A)\\<rbrakk>\n  \\<Longrightarrow> rev (tl s1) setinterleaves ((rev\n            list, rev (aa # lista)), A)\n\ngoal (1 subgoal):\n 1. aa \\<notin> A \\<and> a \\<notin> A \\<Longrightarrow>\n    s1 setinterleaves ((t, u), A) \\<and>\n    rev (tl s1) setinterleaves ((rev list, rev\n      (aa # lista)), A) \\<longrightarrow>\n    rev (tl s1) @ [a] setinterleaves ((rev list @ [a], rev (aa # lista)), A)", "by (simp add: addNonSync)"], ["proof (state)\nthis:\n  aa \\<notin> A \\<and> a \\<notin> A \\<Longrightarrow>\n  s1 setinterleaves ((t, u), A) \\<and>\n  rev (tl s1) setinterleaves ((rev list, rev\n    (aa # lista)), A) \\<longrightarrow>\n  rev (tl s1) @ [a] setinterleaves ((rev list @ [a], rev (aa # lista)), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<longrightarrow>\n                       rev xb setinterleaves ((rev x, rev xa), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> s1 setinterleaves ((t, u), A) \\<longrightarrow>\n                      rev s1 setinterleaves ((rev t, rev u), A)", "from th3pre th3pre1 th3pre2 th3pre31 th3pre32 a b c"], ["proof (chain)\npicking this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   s1 setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s1 setinterleaves ((a # list, lista), A) \\<or>\n                    tl s1 setinterleaves ((list, aa # lista), A)\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   s1 setinterleaves ((t, u), A) \\<and>\n   tl s1 setinterleaves ((a # list, lista), A)\\<rbrakk>\n  \\<Longrightarrow> rev (tl s1) setinterleaves ((rev\n            (a # list), rev lista), A)\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   s1 setinterleaves ((t, u), A) \\<and>\n   tl s1 setinterleaves ((list, aa # lista), A)\\<rbrakk>\n  \\<Longrightarrow> rev (tl s1) setinterleaves ((rev\n            list, rev (aa # lista)), A)\n  aa \\<notin> A \\<and> a \\<notin> A \\<Longrightarrow>\n  s1 setinterleaves ((t, u), A) \\<and>\n  rev (tl s1) setinterleaves ((rev (a #\n                                    list), rev lista), A) \\<longrightarrow>\n  rev (tl s1) @ [aa] setinterleaves ((rev (a # list), rev lista @ [aa]), A)\n  aa \\<notin> A \\<and> a \\<notin> A \\<Longrightarrow>\n  s1 setinterleaves ((t, u), A) \\<and>\n  rev (tl s1) setinterleaves ((rev list, rev\n    (aa # lista)), A) \\<longrightarrow>\n  rev (tl s1) @ [a] setinterleaves ((rev list @ [a], rev (aa # lista)), A)\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<longrightarrow>\n            rev xb setinterleaves ((rev x, rev xa), A))\n  t = a # list\n  u = aa # lista", "have th3: \"aa\\<notin>A\\<and>a\\<notin> A\\<Longrightarrow>\n      s1 setinterleaves ((t, u), A) \\<longrightarrow>rev s1 setinterleaves ((rev t, rev u), A)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   s1 setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s1 setinterleaves ((a # list, lista), A) \\<or>\n                    tl s1 setinterleaves ((list, aa # lista), A)\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   s1 setinterleaves ((t, u), A) \\<and>\n   tl s1 setinterleaves ((a # list, lista), A)\\<rbrakk>\n  \\<Longrightarrow> rev (tl s1) setinterleaves ((rev\n            (a # list), rev lista), A)\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   s1 setinterleaves ((t, u), A) \\<and>\n   tl s1 setinterleaves ((list, aa # lista), A)\\<rbrakk>\n  \\<Longrightarrow> rev (tl s1) setinterleaves ((rev\n            list, rev (aa # lista)), A)\n  aa \\<notin> A \\<and> a \\<notin> A \\<Longrightarrow>\n  s1 setinterleaves ((t, u), A) \\<and>\n  rev (tl s1) setinterleaves ((rev (a #\n                                    list), rev lista), A) \\<longrightarrow>\n  rev (tl s1) @ [aa] setinterleaves ((rev (a # list), rev lista @ [aa]), A)\n  aa \\<notin> A \\<and> a \\<notin> A \\<Longrightarrow>\n  s1 setinterleaves ((t, u), A) \\<and>\n  rev (tl s1) setinterleaves ((rev list, rev\n    (aa # lista)), A) \\<longrightarrow>\n  rev (tl s1) @ [a] setinterleaves ((rev list @ [a], rev (aa # lista)), A)\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb.\n            xb setinterleaves ((x, xa), A) \\<longrightarrow>\n            rev xb setinterleaves ((rev x, rev xa), A))\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. aa \\<notin> A \\<and> a \\<notin> A \\<Longrightarrow>\n    s1 setinterleaves ((t, u), A) \\<longrightarrow>\n    rev s1 setinterleaves ((rev t, rev u), A)", "by force"], ["proof (state)\nthis:\n  aa \\<notin> A \\<and> a \\<notin> A \\<Longrightarrow>\n  s1 setinterleaves ((t, u), A) \\<longrightarrow>\n  rev s1 setinterleaves ((rev t, rev u), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb.\n                       xb setinterleaves ((x, xa), A) \\<longrightarrow>\n                       rev xb setinterleaves ((rev x, rev xa), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> s1 setinterleaves ((t, u), A) \\<longrightarrow>\n                      rev s1 setinterleaves ((rev t, rev u), A)", "show?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. s1 setinterleaves ((t, u), A) \\<longrightarrow>\n    rev s1 setinterleaves ((rev t, rev u), A)", "using b c th0 th1 th2 th3"], ["proof (prove)\nusing this:\n  t = a # list\n  u = aa # lista\n  a = aa \\<and> aa \\<in> A \\<Longrightarrow>\n  s1 setinterleaves ((t, u), A) \\<longrightarrow>\n  rev s1 setinterleaves ((rev t, rev u), A)\n  a \\<notin> A \\<and> aa \\<in> A \\<Longrightarrow>\n  s1 setinterleaves ((t, u), A) \\<longrightarrow>\n  rev s1 setinterleaves ((rev t, rev u), A)\n  aa \\<notin> A \\<and> a \\<in> A \\<Longrightarrow>\n  s1 setinterleaves ((t, u), A) \\<longrightarrow>\n  rev s1 setinterleaves ((rev t, rev u), A)\n  aa \\<notin> A \\<and> a \\<notin> A \\<Longrightarrow>\n  s1 setinterleaves ((t, u), A) \\<longrightarrow>\n  rev s1 setinterleaves ((rev t, rev u), A)\n\ngoal (1 subgoal):\n 1. s1 setinterleaves ((t, u), A) \\<longrightarrow>\n    rev s1 setinterleaves ((rev t, rev u), A)", "by auto"], ["proof (state)\nthis:\n  s1 setinterleaves ((t, u), A) \\<longrightarrow>\n  rev s1 setinterleaves ((rev t, rev u), A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  s1 setinterleaves ((t, u), A) \\<longrightarrow>\n  rev s1 setinterleaves ((rev t, rev u), A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  s1 setinterleaves ((t, u), A) \\<longrightarrow>\n  rev s1 setinterleaves ((rev t, rev u), A)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma  ftf_syn21: \"(a\\<in>set(u)\\<and>a\\<notin>set(t)\\<or>a\\<in>set(t)\\<and>a\\<notin>set(u))\\<and>a\\<in>A\\<longrightarrow>setinterleaving(u, A ,t)= {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<in> set u \\<and> a \\<notin> set t \\<or>\n     a \\<in> set t \\<and> a \\<notin> set u) \\<and>\n    a \\<in> A \\<longrightarrow>\n    setinterleaving (u, A, t) = {}", "proof (induction \"length t + length u\" arbitrary: t u rule:nat_less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t u.\n       \\<forall>m<length t + length u.\n          \\<forall>x xa.\n             m = length x + length xa \\<longrightarrow>\n             (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n              a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n             a \\<in> A \\<longrightarrow>\n             setinterleaving (xa, A, x) = {} \\<Longrightarrow>\n       (a \\<in> set u \\<and> a \\<notin> set t \\<or>\n        a \\<in> set t \\<and> a \\<notin> set u) \\<and>\n       a \\<in> A \\<longrightarrow>\n       setinterleaving (u, A, t) = {}", "case 1"], ["proof (state)\nthis:\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n         a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n        a \\<in> A \\<longrightarrow>\n        setinterleaving (xa, A, x) = {}\n\ngoal (1 subgoal):\n 1. \\<And>t u.\n       \\<forall>m<length t + length u.\n          \\<forall>x xa.\n             m = length x + length xa \\<longrightarrow>\n             (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n              a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n             a \\<in> A \\<longrightarrow>\n             setinterleaving (xa, A, x) = {} \\<Longrightarrow>\n       (a \\<in> set u \\<and> a \\<notin> set t \\<or>\n        a \\<in> set t \\<and> a \\<notin> set u) \\<and>\n       a \\<in> A \\<longrightarrow>\n       setinterleaving (u, A, t) = {}", "then"], ["proof (chain)\npicking this:\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n         a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n        a \\<in> A \\<longrightarrow>\n        setinterleaving (xa, A, x) = {}", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n         a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n        a \\<in> A \\<longrightarrow>\n        setinterleaving (xa, A, x) = {}\n\ngoal (1 subgoal):\n 1. (a \\<in> set u \\<and> a \\<notin> set t \\<or>\n     a \\<in> set t \\<and> a \\<notin> set u) \\<and>\n    a \\<in> A \\<longrightarrow>\n    setinterleaving (u, A, t) = {}", "apply(cases t)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                    a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                   a \\<in> A \\<longrightarrow>\n                   setinterleaving (xa, A, x) = {};\n     t = []\\<rbrakk>\n    \\<Longrightarrow> (a \\<in> set u \\<and> a \\<notin> set t \\<or>\n                       a \\<in> set t \\<and> a \\<notin> set u) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (u, A, t) = {}\n 2. \\<And>aa list.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list\\<rbrakk>\n       \\<Longrightarrow> (a \\<in> set u \\<and> a \\<notin> set t \\<or>\n                          a \\<in> set t \\<and> a \\<notin> set u) \\<and>\n                         a \\<in> A \\<longrightarrow>\n                         setinterleaving (u, A, t) = {}", "using Sync.sym emptyLeftNonSync"], ["proof (prove)\nusing this:\n  setinterleaving (?s, ?X, ?t) = setinterleaving (?t, ?X, ?s)\n  \\<forall>s.\n     s setinterleaves (([], ?t), ?A) \\<longrightarrow>\n     (\\<forall>t1. t1 \\<in> set ?t \\<longrightarrow> t1 \\<notin> ?A)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                    a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                   a \\<in> A \\<longrightarrow>\n                   setinterleaving (xa, A, x) = {};\n     t = []\\<rbrakk>\n    \\<Longrightarrow> (a \\<in> set u \\<and> a \\<notin> set t \\<or>\n                       a \\<in> set t \\<and> a \\<notin> set u) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (u, A, t) = {}\n 2. \\<And>aa list.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list\\<rbrakk>\n       \\<Longrightarrow> (a \\<in> set u \\<and> a \\<notin> set t \\<or>\n                          a \\<in> set t \\<and> a \\<notin> set u) \\<and>\n                         a \\<in> A \\<longrightarrow>\n                         setinterleaving (u, A, t) = {}", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list\\<rbrakk>\n       \\<Longrightarrow> (a \\<in> set u \\<and> a \\<notin> set t \\<or>\n                          a \\<in> set t \\<and> a \\<notin> set u) \\<and>\n                         a \\<in> A \\<longrightarrow>\n                         setinterleaving (u, A, t) = {}", "apply(cases u)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa list.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = []\\<rbrakk>\n       \\<Longrightarrow> (a \\<in> set u \\<and> a \\<notin> set t \\<or>\n                          a \\<in> set t \\<and> a \\<notin> set u) \\<and>\n                         a \\<in> A \\<longrightarrow>\n                         setinterleaving (u, A, t) = {}\n 2. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista\\<rbrakk>\n       \\<Longrightarrow> (a \\<in> set u \\<and> a \\<notin> set t \\<or>\n                          a \\<in> set t \\<and> a \\<notin> set u) \\<and>\n                         a \\<in> A \\<longrightarrow>\n                         setinterleaving (u, A, t) = {}", "apply auto[1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista\\<rbrakk>\n       \\<Longrightarrow> (a \\<in> set u \\<and> a \\<notin> set t \\<or>\n                          a \\<in> set t \\<and> a \\<notin> set u) \\<and>\n                         a \\<in> A \\<longrightarrow>\n                         setinterleaving (u, A, t) = {}", "apply(simp split:if_splits, intro conjI impI, elim conjE disjE exE)"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa = aa; aa \\<notin> A; a \\<in> A;\n        a \\<noteq> aa; a \\<notin> set list; a = aa\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (lista, A, aa # list) = {}\n 2. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa = aa; aa \\<notin> A; a \\<in> A;\n        a \\<noteq> aa; a \\<notin> set list; a \\<in> set lista\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (lista, A, aa # list) = {}\n 3. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa = aa; aa \\<notin> A; a \\<in> A;\n        a \\<noteq> aa; a \\<notin> set lista; a = aa\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (lista, A, aa # list) = {}\n 4. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa = aa; aa \\<notin> A; a \\<in> A;\n        a \\<noteq> aa; a \\<notin> set lista; a \\<in> set list\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (lista, A, aa # list) = {}\n 5. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa = aa; aa \\<notin> A;\n        ((a = aa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (aa # lista, A, list) = {}\n 6. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa = aa; aa \\<in> A;\n        ((a = aa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (lista, A, list) = {}\n 7. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa \\<noteq> aa; aa \\<notin> A;\n        aaa \\<in> A;\n        ((a = aaa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aaa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (aaa # lista, A, list) = {}\n 8. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa \\<noteq> aa; aa \\<notin> A;\n        aaa \\<notin> A;\n        ((a = aaa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aaa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (lista, A, aa # list) = {}\n 9. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa \\<noteq> aa; aa \\<notin> A;\n        aaa \\<notin> A;\n        ((a = aaa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aaa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (aaa # lista, A, list) = {}\n 10. \\<And>aa list aaa lista.\n        \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                    \\<forall>x xa.\n                       m = length x + length xa \\<longrightarrow>\n                       (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                        a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                       a \\<in> A \\<longrightarrow>\n                       setinterleaving (xa, A, x) = {};\n         t = aa # list; u = aaa # lista; aaa \\<noteq> aa; aa \\<in> A;\n         aaa \\<notin> A;\n         ((a = aaa \\<or> a \\<in> set lista) \\<and>\n          a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n          (a = aa \\<or> a \\<in> set list) \\<and>\n          a \\<noteq> aaa \\<and> a \\<notin> set lista) \\<and>\n         a \\<in> A\\<rbrakk>\n        \\<Longrightarrow> setinterleaving (lista, A, aa # list) = {}", "apply blast"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa = aa; aa \\<notin> A; a \\<in> A;\n        a \\<noteq> aa; a \\<notin> set list; a \\<in> set lista\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (lista, A, aa # list) = {}\n 2. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa = aa; aa \\<notin> A; a \\<in> A;\n        a \\<noteq> aa; a \\<notin> set lista; a = aa\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (lista, A, aa # list) = {}\n 3. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa = aa; aa \\<notin> A; a \\<in> A;\n        a \\<noteq> aa; a \\<notin> set lista; a \\<in> set list\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (lista, A, aa # list) = {}\n 4. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa = aa; aa \\<notin> A;\n        ((a = aa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (aa # lista, A, list) = {}\n 5. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa = aa; aa \\<in> A;\n        ((a = aa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (lista, A, list) = {}\n 6. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa \\<noteq> aa; aa \\<notin> A;\n        aaa \\<in> A;\n        ((a = aaa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aaa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (aaa # lista, A, list) = {}\n 7. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa \\<noteq> aa; aa \\<notin> A;\n        aaa \\<notin> A;\n        ((a = aaa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aaa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (lista, A, aa # list) = {}\n 8. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa \\<noteq> aa; aa \\<notin> A;\n        aaa \\<notin> A;\n        ((a = aaa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aaa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (aaa # lista, A, list) = {}\n 9. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa \\<noteq> aa; aa \\<in> A;\n        aaa \\<notin> A;\n        ((a = aaa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aaa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (lista, A, aa # list) = {}", "apply auto[1]"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa = aa; aa \\<notin> A; a \\<in> A;\n        a \\<noteq> aa; a \\<notin> set lista; a = aa\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (lista, A, aa # list) = {}\n 2. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa = aa; aa \\<notin> A; a \\<in> A;\n        a \\<noteq> aa; a \\<notin> set lista; a \\<in> set list\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (lista, A, aa # list) = {}\n 3. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa = aa; aa \\<notin> A;\n        ((a = aa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (aa # lista, A, list) = {}\n 4. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa = aa; aa \\<in> A;\n        ((a = aa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (lista, A, list) = {}\n 5. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa \\<noteq> aa; aa \\<notin> A;\n        aaa \\<in> A;\n        ((a = aaa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aaa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (aaa # lista, A, list) = {}\n 6. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa \\<noteq> aa; aa \\<notin> A;\n        aaa \\<notin> A;\n        ((a = aaa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aaa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (lista, A, aa # list) = {}\n 7. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa \\<noteq> aa; aa \\<notin> A;\n        aaa \\<notin> A;\n        ((a = aaa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aaa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (aaa # lista, A, list) = {}\n 8. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa \\<noteq> aa; aa \\<in> A;\n        aaa \\<notin> A;\n        ((a = aaa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aaa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (lista, A, aa # list) = {}", "apply blast"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa = aa; aa \\<notin> A; a \\<in> A;\n        a \\<noteq> aa; a \\<notin> set lista; a \\<in> set list\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (lista, A, aa # list) = {}\n 2. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa = aa; aa \\<notin> A;\n        ((a = aa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (aa # lista, A, list) = {}\n 3. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa = aa; aa \\<in> A;\n        ((a = aa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (lista, A, list) = {}\n 4. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa \\<noteq> aa; aa \\<notin> A;\n        aaa \\<in> A;\n        ((a = aaa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aaa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (aaa # lista, A, list) = {}\n 5. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa \\<noteq> aa; aa \\<notin> A;\n        aaa \\<notin> A;\n        ((a = aaa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aaa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (lista, A, aa # list) = {}\n 6. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa \\<noteq> aa; aa \\<notin> A;\n        aaa \\<notin> A;\n        ((a = aaa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aaa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (aaa # lista, A, list) = {}\n 7. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa \\<noteq> aa; aa \\<in> A;\n        aaa \\<notin> A;\n        ((a = aaa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aaa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (lista, A, aa # list) = {}", "apply auto[1]"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa = aa; aa \\<notin> A;\n        ((a = aa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (aa # lista, A, list) = {}\n 2. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa = aa; aa \\<in> A;\n        ((a = aa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (lista, A, list) = {}\n 3. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa \\<noteq> aa; aa \\<notin> A;\n        aaa \\<in> A;\n        ((a = aaa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aaa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (aaa # lista, A, list) = {}\n 4. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa \\<noteq> aa; aa \\<notin> A;\n        aaa \\<notin> A;\n        ((a = aaa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aaa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (lista, A, aa # list) = {}\n 5. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa \\<noteq> aa; aa \\<notin> A;\n        aaa \\<notin> A;\n        ((a = aaa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aaa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (aaa # lista, A, list) = {}\n 6. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa \\<noteq> aa; aa \\<in> A;\n        aaa \\<notin> A;\n        ((a = aaa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aaa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (lista, A, aa # list) = {}", "apply auto[1]"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa = aa; aa \\<in> A;\n        ((a = aa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (lista, A, list) = {}\n 2. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa \\<noteq> aa; aa \\<notin> A;\n        aaa \\<in> A;\n        ((a = aaa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aaa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (aaa # lista, A, list) = {}\n 3. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa \\<noteq> aa; aa \\<notin> A;\n        aaa \\<notin> A;\n        ((a = aaa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aaa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (lista, A, aa # list) = {}\n 4. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa \\<noteq> aa; aa \\<notin> A;\n        aaa \\<notin> A;\n        ((a = aaa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aaa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (aaa # lista, A, list) = {}\n 5. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa \\<noteq> aa; aa \\<in> A;\n        aaa \\<notin> A;\n        ((a = aaa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aaa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (lista, A, aa # list) = {}", "using less_SucI"], ["proof (prove)\nusing this:\n  ?m < ?n \\<Longrightarrow> ?m < Suc ?n\n\ngoal (5 subgoals):\n 1. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa = aa; aa \\<in> A;\n        ((a = aa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (lista, A, list) = {}\n 2. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa \\<noteq> aa; aa \\<notin> A;\n        aaa \\<in> A;\n        ((a = aaa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aaa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (aaa # lista, A, list) = {}\n 3. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa \\<noteq> aa; aa \\<notin> A;\n        aaa \\<notin> A;\n        ((a = aaa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aaa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (lista, A, aa # list) = {}\n 4. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa \\<noteq> aa; aa \\<notin> A;\n        aaa \\<notin> A;\n        ((a = aaa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aaa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (aaa # lista, A, list) = {}\n 5. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa \\<noteq> aa; aa \\<in> A;\n        aaa \\<notin> A;\n        ((a = aaa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aaa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (lista, A, aa # list) = {}", "apply blast"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa \\<noteq> aa; aa \\<notin> A;\n        aaa \\<in> A;\n        ((a = aaa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aaa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (aaa # lista, A, list) = {}\n 2. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa \\<noteq> aa; aa \\<notin> A;\n        aaa \\<notin> A;\n        ((a = aaa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aaa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (lista, A, aa # list) = {}\n 3. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa \\<noteq> aa; aa \\<notin> A;\n        aaa \\<notin> A;\n        ((a = aaa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aaa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (aaa # lista, A, list) = {}\n 4. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa \\<noteq> aa; aa \\<in> A;\n        aaa \\<notin> A;\n        ((a = aaa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aaa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (lista, A, aa # list) = {}", "apply auto[1]"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa \\<noteq> aa; aa \\<notin> A;\n        aaa \\<notin> A;\n        ((a = aaa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aaa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (lista, A, aa # list) = {}\n 2. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa \\<noteq> aa; aa \\<notin> A;\n        aaa \\<notin> A;\n        ((a = aaa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aaa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (aaa # lista, A, list) = {}\n 3. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa \\<noteq> aa; aa \\<in> A;\n        aaa \\<notin> A;\n        ((a = aaa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aaa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (lista, A, aa # list) = {}", "apply auto[1]"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa \\<noteq> aa; aa \\<notin> A;\n        aaa \\<notin> A;\n        ((a = aaa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aaa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (aaa # lista, A, list) = {}\n 2. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa \\<noteq> aa; aa \\<in> A;\n        aaa \\<notin> A;\n        ((a = aaa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aaa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (lista, A, aa # list) = {}", "using list.simps(15)"], ["proof (prove)\nusing this:\n  set (?x21.0 # ?x22.0) = insert ?x21.0 (set ?x22.0)\n\ngoal (2 subgoals):\n 1. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa \\<noteq> aa; aa \\<notin> A;\n        aaa \\<notin> A;\n        ((a = aaa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aaa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (aaa # lista, A, list) = {}\n 2. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa \\<noteq> aa; aa \\<in> A;\n        aaa \\<notin> A;\n        ((a = aaa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aaa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (lista, A, aa # list) = {}", "apply auto[1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa list aaa lista.\n       \\<lbrakk>\\<forall>m<Suc (Suc (length list + length lista)).\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (a \\<in> set xa \\<and> a \\<notin> set x \\<or>\n                       a \\<in> set x \\<and> a \\<notin> set xa) \\<and>\n                      a \\<in> A \\<longrightarrow>\n                      setinterleaving (xa, A, x) = {};\n        t = aa # list; u = aaa # lista; aaa \\<noteq> aa; aa \\<in> A;\n        aaa \\<notin> A;\n        ((a = aaa \\<or> a \\<in> set lista) \\<and>\n         a \\<noteq> aa \\<and> a \\<notin> set list \\<or>\n         (a = aa \\<or> a \\<in> set list) \\<and>\n         a \\<noteq> aaa \\<and> a \\<notin> set lista) \\<and>\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> setinterleaving (lista, A, aa # list) = {}", "by auto"], ["proof (state)\nthis:\n  (a \\<in> set u \\<and> a \\<notin> set t \\<or>\n   a \\<in> set t \\<and> a \\<notin> set u) \\<and>\n  a \\<in> A \\<longrightarrow>\n  setinterleaving (u, A, t) = {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ftf_syn32: \"u=u1@[tick]\\<and>t=t1@[tick]\\<and>s setinterleaves ((t, u), insert tick (ev ` A))\\<Longrightarrow>\n                  \\<exists>s1. s1 setinterleaves ((t1, u1), insert tick (ev ` A))\\<and> (s=s1@[tick])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u = u1 @ [tick] \\<and>\n    t = t1 @ [tick] \\<and>\n    s setinterleaves ((t, u), insert tick (ev ` A)) \\<Longrightarrow>\n    \\<exists>s1.\n       s1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n       s = s1 @ [tick]", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. u = u1 @ [tick] \\<and>\n    t = t1 @ [tick] \\<and>\n    s setinterleaves ((t, u), insert tick (ev ` A)) \\<Longrightarrow>\n    \\<exists>s1.\n       s1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n       s = s1 @ [tick]", "assume h: \"u=u1@[tick]\\<and>t=t1@[tick]\\<and>s setinterleaves ((t, u), insert tick (ev ` A))\""], ["proof (state)\nthis:\n  u = u1 @ [tick] \\<and>\n  t = t1 @ [tick] \\<and> s setinterleaves ((t, u), insert tick (ev ` A))\n\ngoal (1 subgoal):\n 1. u = u1 @ [tick] \\<and>\n    t = t1 @ [tick] \\<and>\n    s setinterleaves ((t, u), insert tick (ev ` A)) \\<Longrightarrow>\n    \\<exists>s1.\n       s1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n       s = s1 @ [tick]", "thus \"\\<exists>s1. s1 setinterleaves ((t1, u1), insert tick (ev ` A))\\<and> (s=s1@[tick])\""], ["proof (prove)\nusing this:\n  u = u1 @ [tick] \\<and>\n  t = t1 @ [tick] \\<and> s setinterleaves ((t, u), insert tick (ev ` A))\n\ngoal (1 subgoal):\n 1. \\<exists>s1.\n       s1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n       s = s1 @ [tick]", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. u = u1 @ [tick] \\<and>\n    t = t1 @ [tick] \\<and>\n    s setinterleaves ((t, u), insert tick (ev ` A)) \\<Longrightarrow>\n    \\<exists>s1.\n       s1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n       s = s1 @ [tick]", "from h"], ["proof (chain)\npicking this:\n  u = u1 @ [tick] \\<and>\n  t = t1 @ [tick] \\<and> s setinterleaves ((t, u), insert tick (ev ` A))", "have a:\"rev u=tick#rev u1\""], ["proof (prove)\nusing this:\n  u = u1 @ [tick] \\<and>\n  t = t1 @ [tick] \\<and> s setinterleaves ((t, u), insert tick (ev ` A))\n\ngoal (1 subgoal):\n 1. rev u = tick # rev u1", "by auto"], ["proof (state)\nthis:\n  rev u = tick # rev u1\n\ngoal (1 subgoal):\n 1. u = u1 @ [tick] \\<and>\n    t = t1 @ [tick] \\<and>\n    s setinterleaves ((t, u), insert tick (ev ` A)) \\<Longrightarrow>\n    \\<exists>s1.\n       s1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n       s = s1 @ [tick]", "from h"], ["proof (chain)\npicking this:\n  u = u1 @ [tick] \\<and>\n  t = t1 @ [tick] \\<and> s setinterleaves ((t, u), insert tick (ev ` A))", "have b:\"rev t=tick#rev t1\""], ["proof (prove)\nusing this:\n  u = u1 @ [tick] \\<and>\n  t = t1 @ [tick] \\<and> s setinterleaves ((t, u), insert tick (ev ` A))\n\ngoal (1 subgoal):\n 1. rev t = tick # rev t1", "by auto"], ["proof (state)\nthis:\n  rev t = tick # rev t1\n\ngoal (1 subgoal):\n 1. u = u1 @ [tick] \\<and>\n    t = t1 @ [tick] \\<and>\n    s setinterleaves ((t, u), insert tick (ev ` A)) \\<Longrightarrow>\n    \\<exists>s1.\n       s1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n       s = s1 @ [tick]", "from h"], ["proof (chain)\npicking this:\n  u = u1 @ [tick] \\<and>\n  t = t1 @ [tick] \\<and> s setinterleaves ((t, u), insert tick (ev ` A))", "have ab: \"(rev s)  setinterleaves ((tick#rev t1, tick#rev u1), insert tick (ev ` A))\""], ["proof (prove)\nusing this:\n  u = u1 @ [tick] \\<and>\n  t = t1 @ [tick] \\<and> s setinterleaves ((t, u), insert tick (ev ` A))\n\ngoal (1 subgoal):\n 1. rev s setinterleaves ((tick #\n                           rev t1, tick # rev u1), insert tick (ev ` A))", "using doubleReverse"], ["proof (prove)\nusing this:\n  u = u1 @ [tick] \\<and>\n  t = t1 @ [tick] \\<and> s setinterleaves ((t, u), insert tick (ev ` A))\n  ?s1.0 setinterleaves ((?t, ?u), ?A) \\<longrightarrow>\n  rev ?s1.0 setinterleaves ((rev ?t, rev ?u), ?A)\n\ngoal (1 subgoal):\n 1. rev s setinterleaves ((tick #\n                           rev t1, tick # rev u1), insert tick (ev ` A))", "by fastforce"], ["proof (state)\nthis:\n  rev s setinterleaves ((tick #\n                         rev t1, tick # rev u1), insert tick (ev ` A))\n\ngoal (1 subgoal):\n 1. u = u1 @ [tick] \\<and>\n    t = t1 @ [tick] \\<and>\n    s setinterleaves ((t, u), insert tick (ev ` A)) \\<Longrightarrow>\n    \\<exists>s1.\n       s1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n       s = s1 @ [tick]", "from h"], ["proof (chain)\npicking this:\n  u = u1 @ [tick] \\<and>\n  t = t1 @ [tick] \\<and> s setinterleaves ((t, u), insert tick (ev ` A))", "obtain ss where c: \"ss  setinterleaves  ((rev t1, rev u1), insert tick (ev ` A))\\<and> \n    ss=tl(rev s)\""], ["proof (prove)\nusing this:\n  u = u1 @ [tick] \\<and>\n  t = t1 @ [tick] \\<and> s setinterleaves ((t, u), insert tick (ev ` A))\n\ngoal (1 subgoal):\n 1. (\\<And>ss.\n        ss setinterleaves ((rev t1, rev u1), insert tick (ev ` A)) \\<and>\n        ss = tl (rev s) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using ab"], ["proof (prove)\nusing this:\n  u = u1 @ [tick] \\<and>\n  t = t1 @ [tick] \\<and> s setinterleaves ((t, u), insert tick (ev ` A))\n  rev s setinterleaves ((tick #\n                         rev t1, tick # rev u1), insert tick (ev ` A))\n\ngoal (1 subgoal):\n 1. (\\<And>ss.\n        ss setinterleaves ((rev t1, rev u1), insert tick (ev ` A)) \\<and>\n        ss = tl (rev s) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ss setinterleaves ((rev t1, rev u1), insert tick (ev ` A)) \\<and>\n  ss = tl (rev s)\n\ngoal (1 subgoal):\n 1. u = u1 @ [tick] \\<and>\n    t = t1 @ [tick] \\<and>\n    s setinterleaves ((t, u), insert tick (ev ` A)) \\<Longrightarrow>\n    \\<exists>s1.\n       s1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n       s = s1 @ [tick]", "from c"], ["proof (chain)\npicking this:\n  ss setinterleaves ((rev t1, rev u1), insert tick (ev ` A)) \\<and>\n  ss = tl (rev s)", "have d: \"(rev ss)  setinterleaves  (( t1,  u1), insert tick (ev ` A))\""], ["proof (prove)\nusing this:\n  ss setinterleaves ((rev t1, rev u1), insert tick (ev ` A)) \\<and>\n  ss = tl (rev s)\n\ngoal (1 subgoal):\n 1. rev ss setinterleaves ((t1, u1), insert tick (ev ` A))", "using doubleReverse"], ["proof (prove)\nusing this:\n  ss setinterleaves ((rev t1, rev u1), insert tick (ev ` A)) \\<and>\n  ss = tl (rev s)\n  ?s1.0 setinterleaves ((?t, ?u), ?A) \\<longrightarrow>\n  rev ?s1.0 setinterleaves ((rev ?t, rev ?u), ?A)\n\ngoal (1 subgoal):\n 1. rev ss setinterleaves ((t1, u1), insert tick (ev ` A))", "by fastforce"], ["proof (state)\nthis:\n  rev ss setinterleaves ((t1, u1), insert tick (ev ` A))\n\ngoal (1 subgoal):\n 1. u = u1 @ [tick] \\<and>\n    t = t1 @ [tick] \\<and>\n    s setinterleaves ((t, u), insert tick (ev ` A)) \\<Longrightarrow>\n    \\<exists>s1.\n       s1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n       s = s1 @ [tick]", "from d"], ["proof (chain)\npicking this:\n  rev ss setinterleaves ((t1, u1), insert tick (ev ` A))", "have e: \"rev s=tick#ss\""], ["proof (prove)\nusing this:\n  rev ss setinterleaves ((t1, u1), insert tick (ev ` A))\n\ngoal (1 subgoal):\n 1. rev s = tick # ss", "using ab append_Cons_eq_iff c"], ["proof (prove)\nusing this:\n  rev ss setinterleaves ((t1, u1), insert tick (ev ` A))\n  rev s setinterleaves ((tick #\n                         rev t1, tick # rev u1), insert tick (ev ` A))\n  \\<lbrakk>?x \\<notin> set ?xs; ?x \\<notin> set ?ys\\<rbrakk>\n  \\<Longrightarrow> (?xs @ ?x # ?ys = ?xs' @ ?x # ?ys') =\n                    (?xs = ?xs' \\<and> ?ys = ?ys')\n  ss setinterleaves ((rev t1, rev u1), insert tick (ev ` A)) \\<and>\n  ss = tl (rev s)\n\ngoal (1 subgoal):\n 1. rev s = tick # ss", "by auto"], ["proof (state)\nthis:\n  rev s = tick # ss\n\ngoal (1 subgoal):\n 1. u = u1 @ [tick] \\<and>\n    t = t1 @ [tick] \\<and>\n    s setinterleaves ((t, u), insert tick (ev ` A)) \\<Longrightarrow>\n    \\<exists>s1.\n       s1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n       s = s1 @ [tick]", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>s1.\n       s1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n       s = s1 @ [tick]", "using d e"], ["proof (prove)\nusing this:\n  rev ss setinterleaves ((t1, u1), insert tick (ev ` A))\n  rev s = tick # ss\n\ngoal (1 subgoal):\n 1. \\<exists>s1.\n       s1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n       s = s1 @ [tick]", "by blast"], ["proof (state)\nthis:\n  \\<exists>s1.\n     s1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n     s = s1 @ [tick]\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>s1.\n     s1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n     s = s1 @ [tick]\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma syncWithTick_imp_NTF: \"(s @ [tick]) setinterleaves ((t, u),insert tick (ev ` A)) \\<Longrightarrow>t\\<in> T P\\<Longrightarrow>\n  u\\<in> T Q\\<Longrightarrow> \\<exists>t1 u1. t=t1@[tick] \\<and> u=u1@[tick]\\<and> s setinterleaves ((t1, u1), insert tick (ev ` A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s @ [tick] setinterleaves ((t, u), insert tick (ev ` A));\n     t \\<in> T P; u \\<in> T Q\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         t = t1 @ [tick] \\<and>\n                         u = u1 @ [tick] \\<and>\n                         s setinterleaves ((t1, u1), insert tick (ev ` A))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>s @ [tick] setinterleaves ((t, u), insert tick (ev ` A));\n     t \\<in> T P; u \\<in> T Q\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         t = t1 @ [tick] \\<and>\n                         u = u1 @ [tick] \\<and>\n                         s setinterleaves ((t1, u1), insert tick (ev ` A))", "assume h: \"(s @ [tick]) setinterleaves ((t, u), insert tick (ev ` A))\"\n  and h1: \"t\\<in> T P\"\n  and h2: \"u\\<in> T Q\""], ["proof (state)\nthis:\n  s @ [tick] setinterleaves ((t, u), insert tick (ev ` A))\n  t \\<in> T P\n  u \\<in> T Q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s @ [tick] setinterleaves ((t, u), insert tick (ev ` A));\n     t \\<in> T P; u \\<in> T Q\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         t = t1 @ [tick] \\<and>\n                         u = u1 @ [tick] \\<and>\n                         s setinterleaves ((t1, u1), insert tick (ev ` A))", "thus \"\\<exists>t1 u1. t=t1@[tick] \\<and> u=u1@[tick]\\<and> s setinterleaves ((t1, u1), insert tick (ev ` A))\""], ["proof (prove)\nusing this:\n  s @ [tick] setinterleaves ((t, u), insert tick (ev ` A))\n  t \\<in> T P\n  u \\<in> T Q\n\ngoal (1 subgoal):\n 1. \\<exists>t1 u1.\n       t = t1 @ [tick] \\<and>\n       u = u1 @ [tick] \\<and>\n       s setinterleaves ((t1, u1), insert tick (ev ` A))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>s @ [tick] setinterleaves ((t, u), insert tick (ev ` A));\n     t \\<in> T P; u \\<in> T Q\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         t = t1 @ [tick] \\<and>\n                         u = u1 @ [tick] \\<and>\n                         s setinterleaves ((t1, u1), insert tick (ev ` A))", "from h"], ["proof (chain)\npicking this:\n  s @ [tick] setinterleaves ((t, u), insert tick (ev ` A))", "have a: \"(tick#rev s) setinterleaves ((rev t, rev u), insert tick (ev ` A))\""], ["proof (prove)\nusing this:\n  s @ [tick] setinterleaves ((t, u), insert tick (ev ` A))\n\ngoal (1 subgoal):\n 1. tick # rev s setinterleaves ((rev t, rev u), insert tick (ev ` A))", "using doubleReverse"], ["proof (prove)\nusing this:\n  s @ [tick] setinterleaves ((t, u), insert tick (ev ` A))\n  ?s1.0 setinterleaves ((?t, ?u), ?A) \\<longrightarrow>\n  rev ?s1.0 setinterleaves ((rev ?t, rev ?u), ?A)\n\ngoal (1 subgoal):\n 1. tick # rev s setinterleaves ((rev t, rev u), insert tick (ev ` A))", "by fastforce"], ["proof (state)\nthis:\n  tick # rev s setinterleaves ((rev t, rev u), insert tick (ev ` A))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s @ [tick] setinterleaves ((t, u), insert tick (ev ` A));\n     t \\<in> T P; u \\<in> T Q\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         t = t1 @ [tick] \\<and>\n                         u = u1 @ [tick] \\<and>\n                         s setinterleaves ((t1, u1), insert tick (ev ` A))", "from h"], ["proof (chain)\npicking this:\n  s @ [tick] setinterleaves ((t, u), insert tick (ev ` A))", "obtain tt uu where b: \"t=tt@[tick]\\<and>u=uu@[tick]\""], ["proof (prove)\nusing this:\n  s @ [tick] setinterleaves ((t, u), insert tick (ev ` A))\n\ngoal (1 subgoal):\n 1. (\\<And>tt uu.\n        t = tt @ [tick] \\<and> u = uu @ [tick] \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis T_nonTickFree_imp_decomp empty_iff ftf_syn1 ftf_syn21 h1 h2 insertI1 \n          non_tickFree_tick tickFree_append tickFree_def)"], ["proof (state)\nthis:\n  t = tt @ [tick] \\<and> u = uu @ [tick]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s @ [tick] setinterleaves ((t, u), insert tick (ev ` A));\n     t \\<in> T P; u \\<in> T Q\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         t = t1 @ [tick] \\<and>\n                         u = u1 @ [tick] \\<and>\n                         s setinterleaves ((t1, u1), insert tick (ev ` A))", "from h b"], ["proof (chain)\npicking this:\n  s @ [tick] setinterleaves ((t, u), insert tick (ev ` A))\n  t = tt @ [tick] \\<and> u = uu @ [tick]", "have d: \"s setinterleaves ((tt, uu), insert tick (ev ` A))\""], ["proof (prove)\nusing this:\n  s @ [tick] setinterleaves ((t, u), insert tick (ev ` A))\n  t = tt @ [tick] \\<and> u = uu @ [tick]\n\ngoal (1 subgoal):\n 1. s setinterleaves ((tt, uu), insert tick (ev ` A))", "using ftf_syn32"], ["proof (prove)\nusing this:\n  s @ [tick] setinterleaves ((t, u), insert tick (ev ` A))\n  t = tt @ [tick] \\<and> u = uu @ [tick]\n  ?u = ?u1.0 @ [tick] \\<and>\n  ?t = ?t1.0 @ [tick] \\<and>\n  ?s setinterleaves ((?t, ?u), insert tick (ev ` ?A)) \\<Longrightarrow>\n  \\<exists>s1.\n     s1 setinterleaves ((?t1.0, ?u1.0), insert tick (ev ` ?A)) \\<and>\n     ?s = s1 @ [tick]\n\ngoal (1 subgoal):\n 1. s setinterleaves ((tt, uu), insert tick (ev ` A))", "by blast"], ["proof (state)\nthis:\n  s setinterleaves ((tt, uu), insert tick (ev ` A))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s @ [tick] setinterleaves ((t, u), insert tick (ev ` A));\n     t \\<in> T P; u \\<in> T Q\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         t = t1 @ [tick] \\<and>\n                         u = u1 @ [tick] \\<and>\n                         s setinterleaves ((t1, u1), insert tick (ev ` A))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t1 u1.\n       t = t1 @ [tick] \\<and>\n       u = u1 @ [tick] \\<and>\n       s setinterleaves ((t1, u1), insert tick (ev ` A))", "using b d"], ["proof (prove)\nusing this:\n  t = tt @ [tick] \\<and> u = uu @ [tick]\n  s setinterleaves ((tt, uu), insert tick (ev ` A))\n\ngoal (1 subgoal):\n 1. \\<exists>t1 u1.\n       t = t1 @ [tick] \\<and>\n       u = u1 @ [tick] \\<and>\n       s setinterleaves ((t1, u1), insert tick (ev ` A))", "by blast"], ["proof (state)\nthis:\n  \\<exists>t1 u1.\n     t = t1 @ [tick] \\<and>\n     u = u1 @ [tick] \\<and>\n     s setinterleaves ((t1, u1), insert tick (ev ` A))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>t1 u1.\n     t = t1 @ [tick] \\<and>\n     u = u1 @ [tick] \\<and>\n     s setinterleaves ((t1, u1), insert tick (ev ` A))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma synPrefix1: \" ta = [] \\<Longrightarrow> \\<exists>t1 u1. (s @ t) setinterleaves ((ta, u), A) \\<longrightarrow> \n                    t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ta = [] \\<Longrightarrow>\n    \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. ta = [] \\<Longrightarrow>\n    \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "assume a: \"ta = []\""], ["proof (state)\nthis:\n  ta = []\n\ngoal (1 subgoal):\n 1. ta = [] \\<Longrightarrow>\n    \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "obtain u1 where th: \"u1=s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u1. u1 = s \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  u1 = s\n\ngoal (1 subgoal):\n 1. ta = [] \\<Longrightarrow>\n    \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "from a"], ["proof (chain)\npicking this:\n  ta = []", "have th2: \"(s @ t) setinterleaves ((ta, u), A) \\<longrightarrow> (s @ t)= u\""], ["proof (prove)\nusing this:\n  ta = []\n\ngoal (1 subgoal):\n 1. s @ t setinterleaves ((ta, u), A) \\<longrightarrow> s @ t = u", "by (simp add: a emptyLeftProperty)"], ["proof (state)\nthis:\n  s @ t setinterleaves ((ta, u), A) \\<longrightarrow> s @ t = u\n\ngoal (1 subgoal):\n 1. ta = [] \\<Longrightarrow>\n    \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "from a"], ["proof (chain)\npicking this:\n  ta = []", "have th3: \"(s @ t) setinterleaves ((ta, u), A) \\<longrightarrow> (\\<forall>t1. t1\\<in>set u\\<longrightarrow>t1\\<notin>A)\""], ["proof (prove)\nusing this:\n  ta = []\n\ngoal (1 subgoal):\n 1. s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n    (\\<forall>t1. t1 \\<in> set u \\<longrightarrow> t1 \\<notin> A)", "by (simp add: emptyLeftNonSync)"], ["proof (state)\nthis:\n  s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n  (\\<forall>t1. t1 \\<in> set u \\<longrightarrow> t1 \\<notin> A)\n\ngoal (1 subgoal):\n 1. ta = [] \\<Longrightarrow>\n    \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "from a th"], ["proof (chain)\npicking this:\n  ta = []\n  u1 = s", "have th1: \"(s @ t) setinterleaves ((ta, u), A) \\<longrightarrow> [] \\<le> ta \\<and> u1 \\<le> u \""], ["proof (prove)\nusing this:\n  ta = []\n  u1 = s\n\ngoal (1 subgoal):\n 1. s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n    [] \\<le> ta \\<and> u1 \\<le> u", "using le_list_def th2"], ["proof (prove)\nusing this:\n  ta = []\n  u1 = s\n  (?s \\<le> ?t) = (\\<exists>r. ?s @ r = ?t)\n  s @ t setinterleaves ((ta, u), A) \\<longrightarrow> s @ t = u\n\ngoal (1 subgoal):\n 1. s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n    [] \\<le> ta \\<and> u1 \\<le> u", "by blast"], ["proof (state)\nthis:\n  s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n  [] \\<le> ta \\<and> u1 \\<le> u\n\ngoal (1 subgoal):\n 1. ta = [] \\<Longrightarrow>\n    \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "from a th"], ["proof (chain)\npicking this:\n  ta = []\n  u1 = s", "have thh1: \"(s @ t) setinterleaves ((ta, u), A)\\<and> (\\<forall>t1. t1\\<in>set u1\\<longrightarrow>t1\\<notin>A) \\<longrightarrow> \n  s setinterleaves (([], u1), A)\""], ["proof (prove)\nusing this:\n  ta = []\n  u1 = s\n\ngoal (1 subgoal):\n 1. s @ t setinterleaves ((ta, u), A) \\<and>\n    (\\<forall>t1.\n        t1 \\<in> set u1 \\<longrightarrow> t1 \\<notin> A) \\<longrightarrow>\n    s setinterleaves (([], u1), A)", "by (simp add: emptyLeftSelf)"], ["proof (state)\nthis:\n  s @ t setinterleaves ((ta, u), A) \\<and>\n  (\\<forall>t1.\n      t1 \\<in> set u1 \\<longrightarrow> t1 \\<notin> A) \\<longrightarrow>\n  s setinterleaves (([], u1), A)\n\ngoal (1 subgoal):\n 1. ta = [] \\<Longrightarrow>\n    \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "thus \"\\<exists>t1 u1. (s @ t) setinterleaves ((ta, u), A) \\<longrightarrow> t1 \\<le> ta \\<and> u1 \\<le> u \\<and> \n  s setinterleaves ((t1, u1), A)\""], ["proof (prove)\nusing this:\n  s @ t setinterleaves ((ta, u), A) \\<and>\n  (\\<forall>t1.\n      t1 \\<in> set u1 \\<longrightarrow> t1 \\<notin> A) \\<longrightarrow>\n  s setinterleaves (([], u1), A)\n\ngoal (1 subgoal):\n 1. \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "using th th1 th2 th3 thh1"], ["proof (prove)\nusing this:\n  s @ t setinterleaves ((ta, u), A) \\<and>\n  (\\<forall>t1.\n      t1 \\<in> set u1 \\<longrightarrow> t1 \\<notin> A) \\<longrightarrow>\n  s setinterleaves (([], u1), A)\n  u1 = s\n  s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n  [] \\<le> ta \\<and> u1 \\<le> u\n  s @ t setinterleaves ((ta, u), A) \\<longrightarrow> s @ t = u\n  s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n  (\\<forall>t1. t1 \\<in> set u \\<longrightarrow> t1 \\<notin> A)\n  s @ t setinterleaves ((ta, u), A) \\<and>\n  (\\<forall>t1.\n      t1 \\<in> set u1 \\<longrightarrow> t1 \\<notin> A) \\<longrightarrow>\n  s setinterleaves (([], u1), A)\n\ngoal (1 subgoal):\n 1. \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>t1 u1.\n     s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n     t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma synPrefix: \"\\<exists>t1 u1. (s @ t) setinterleaves ((ta, u), A)\\<longrightarrow>\n                  t1\\<le>ta\\<and>u1\\<le>u\\<and>s setinterleaves ((t1, u1), A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "proof (induction \"length ta + length u\" arbitrary: s t ta u rule:nat_less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ta u s t.\n       \\<forall>m<length ta + length u.\n          \\<forall>x xa.\n             m = length x + length xa \\<longrightarrow>\n             (\\<forall>xb xc.\n                 \\<exists>t1 u1.\n                    xb @ xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                    t1 \\<le> x \\<and>\n                    u1 \\<le> xa \\<and>\n                    xb setinterleaves ((t1, u1), A)) \\<Longrightarrow>\n       \\<exists>t1 u1.\n          s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n          t1 \\<le> ta \\<and>\n          u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "case 1"], ["proof (state)\nthis:\n  \\<forall>m<length ta + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb xc.\n            \\<exists>t1 u1.\n               xb @ xc setinterleaves ((x, xa), A) \\<longrightarrow>\n               t1 \\<le> x \\<and>\n               u1 \\<le> xa \\<and> xb setinterleaves ((t1, u1), A))\n\ngoal (1 subgoal):\n 1. \\<And>ta u s t.\n       \\<forall>m<length ta + length u.\n          \\<forall>x xa.\n             m = length x + length xa \\<longrightarrow>\n             (\\<forall>xb xc.\n                 \\<exists>t1 u1.\n                    xb @ xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                    t1 \\<le> x \\<and>\n                    u1 \\<le> xa \\<and>\n                    xb setinterleaves ((t1, u1), A)) \\<Longrightarrow>\n       \\<exists>t1 u1.\n          s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n          t1 \\<le> ta \\<and>\n          u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "then"], ["proof (chain)\npicking this:\n  \\<forall>m<length ta + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb xc.\n            \\<exists>t1 u1.\n               xb @ xc setinterleaves ((x, xa), A) \\<longrightarrow>\n               t1 \\<le> x \\<and>\n               u1 \\<le> xa \\<and> xb setinterleaves ((t1, u1), A))", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>m<length ta + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb xc.\n            \\<exists>t1 u1.\n               xb @ xc setinterleaves ((x, xa), A) \\<longrightarrow>\n               t1 \\<le> x \\<and>\n               u1 \\<le> xa \\<and> xb setinterleaves ((t1, u1), A))\n\ngoal (1 subgoal):\n 1. \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "apply(cases ta)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>m<length ta + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>t1 u1.\n                          xb @\n                          xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                          t1 \\<le> x \\<and>\n                          u1 \\<le> xa \\<and>\n                          xb setinterleaves ((t1, u1), A));\n     ta = []\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n                         t1 \\<le> ta \\<and>\n                         u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)\n 2. \\<And>a list.\n       \\<lbrakk>\\<forall>m<length ta + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb xc.\n                          \\<exists>t1 u1.\n                             xb @\n                             xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                             t1 \\<le> x \\<and>\n                             u1 \\<le> xa \\<and>\n                             xb setinterleaves ((t1, u1), A));\n        ta = a # list\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t1 u1.\n                            s @\n                            t setinterleaves ((ta, u), A) \\<longrightarrow>\n                            t1 \\<le> ta \\<and>\n                            u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "using synPrefix1"], ["proof (prove)\nusing this:\n  ?ta = [] \\<Longrightarrow>\n  \\<exists>t1 u1.\n     ?s @ ?t setinterleaves ((?ta, ?u), ?A) \\<longrightarrow>\n     t1 \\<le> ?ta \\<and> u1 \\<le> ?u \\<and> ?s setinterleaves ((t1, u1), ?A)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>m<length ta + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>t1 u1.\n                          xb @\n                          xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                          t1 \\<le> x \\<and>\n                          u1 \\<le> xa \\<and>\n                          xb setinterleaves ((t1, u1), A));\n     ta = []\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n                         t1 \\<le> ta \\<and>\n                         u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)\n 2. \\<And>a list.\n       \\<lbrakk>\\<forall>m<length ta + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb xc.\n                          \\<exists>t1 u1.\n                             xb @\n                             xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                             t1 \\<le> x \\<and>\n                             u1 \\<le> xa \\<and>\n                             xb setinterleaves ((t1, u1), A));\n        ta = a # list\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t1 u1.\n                            s @\n                            t setinterleaves ((ta, u), A) \\<longrightarrow>\n                            t1 \\<le> ta \\<and>\n                            u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>\\<forall>m<length ta + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb xc.\n                          \\<exists>t1 u1.\n                             xb @\n                             xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                             t1 \\<le> x \\<and>\n                             u1 \\<le> xa \\<and>\n                             xb setinterleaves ((t1, u1), A));\n        ta = a # list\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t1 u1.\n                            s @\n                            t setinterleaves ((ta, u), A) \\<longrightarrow>\n                            t1 \\<le> ta \\<and>\n                            u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "apply(cases u)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a list.\n       \\<lbrakk>\\<forall>m<length ta + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb xc.\n                          \\<exists>t1 u1.\n                             xb @\n                             xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                             t1 \\<le> x \\<and>\n                             u1 \\<le> xa \\<and>\n                             xb setinterleaves ((t1, u1), A));\n        ta = a # list; u = []\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t1 u1.\n                            s @\n                            t setinterleaves ((ta, u), A) \\<longrightarrow>\n                            t1 \\<le> ta \\<and>\n                            u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)\n 2. \\<And>a list aa lista.\n       \\<lbrakk>\\<forall>m<length ta + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb xc.\n                          \\<exists>t1 u1.\n                             xb @\n                             xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                             t1 \\<le> x \\<and>\n                             u1 \\<le> xa \\<and>\n                             xb setinterleaves ((t1, u1), A));\n        ta = a # list; u = aa # lista\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t1 u1.\n                            s @\n                            t setinterleaves ((ta, u), A) \\<longrightarrow>\n                            t1 \\<le> ta \\<and>\n                            u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "using sym synPrefix1"], ["proof (prove)\nusing this:\n  setinterleaving (?s, ?X, ?t) = setinterleaving (?t, ?X, ?s)\n  ?ta = [] \\<Longrightarrow>\n  \\<exists>t1 u1.\n     ?s @ ?t setinterleaves ((?ta, ?u), ?A) \\<longrightarrow>\n     t1 \\<le> ?ta \\<and> u1 \\<le> ?u \\<and> ?s setinterleaves ((t1, u1), ?A)\n\ngoal (2 subgoals):\n 1. \\<And>a list.\n       \\<lbrakk>\\<forall>m<length ta + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb xc.\n                          \\<exists>t1 u1.\n                             xb @\n                             xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                             t1 \\<le> x \\<and>\n                             u1 \\<le> xa \\<and>\n                             xb setinterleaves ((t1, u1), A));\n        ta = a # list; u = []\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t1 u1.\n                            s @\n                            t setinterleaves ((ta, u), A) \\<longrightarrow>\n                            t1 \\<le> ta \\<and>\n                            u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)\n 2. \\<And>a list aa lista.\n       \\<lbrakk>\\<forall>m<length ta + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb xc.\n                          \\<exists>t1 u1.\n                             xb @\n                             xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                             t1 \\<le> x \\<and>\n                             u1 \\<le> xa \\<and>\n                             xb setinterleaves ((t1, u1), A));\n        ta = a # list; u = aa # lista\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t1 u1.\n                            s @\n                            t setinterleaves ((ta, u), A) \\<longrightarrow>\n                            t1 \\<le> ta \\<and>\n                            u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "apply metis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list aa lista.\n       \\<lbrakk>\\<forall>m<length ta + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb xc.\n                          \\<exists>t1 u1.\n                             xb @\n                             xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                             t1 \\<le> x \\<and>\n                             u1 \\<le> xa \\<and>\n                             xb setinterleaves ((t1, u1), A));\n        ta = a # list; u = aa # lista\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t1 u1.\n                            s @\n                            t setinterleaves ((ta, u), A) \\<longrightarrow>\n                            t1 \\<le> ta \\<and>\n                            u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list aa lista.\n       \\<lbrakk>\\<forall>m<length ta + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb xc.\n                          \\<exists>t1 u1.\n                             xb @\n                             xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                             t1 \\<le> x \\<and>\n                             u1 \\<le> xa \\<and>\n                             xb setinterleaves ((t1, u1), A));\n        ta = a # list; u = aa # lista\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t1 u1.\n                            s @\n                            t setinterleaves ((ta, u), A) \\<longrightarrow>\n                            t1 \\<le> ta \\<and>\n                            u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "fix a list aa lista s t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list aa lista.\n       \\<lbrakk>\\<forall>m<length ta + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb xc.\n                          \\<exists>t1 u1.\n                             xb @\n                             xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                             t1 \\<le> x \\<and>\n                             u1 \\<le> xa \\<and>\n                             xb setinterleaves ((t1, u1), A));\n        ta = a # list; u = aa # lista\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t1 u1.\n                            sa__ @\n                            tb__ setinterleaves ((ta, u), A) \\<longrightarrow>\n                            t1 \\<le> ta \\<and>\n                            u1 \\<le> u \\<and>\n                            sa__ setinterleaves ((t1, u1), A)", "assume a: \" \\<forall>m<length ta + length u. \\<forall>x xa. m = length x + length xa \\<longrightarrow>\n                 (\\<forall>xb xc. \\<exists>t1 u1. (xb @ xc) setinterleaves ((x, xa), A) \\<longrightarrow>\n                 t1 \\<le> x \\<and> u1 \\<le> xa \\<and> xb setinterleaves ((t1, u1), A))\"\n     and b: \"ta = a # list\"\n     and c: \"u = aa # lista \""], ["proof (state)\nthis:\n  \\<forall>m<length ta + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb xc.\n            \\<exists>t1 u1.\n               xb @ xc setinterleaves ((x, xa), A) \\<longrightarrow>\n               t1 \\<le> x \\<and>\n               u1 \\<le> xa \\<and> xb setinterleaves ((t1, u1), A))\n  ta = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<And>a list aa lista.\n       \\<lbrakk>\\<forall>m<length ta + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb xc.\n                          \\<exists>t1 u1.\n                             xb @\n                             xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                             t1 \\<le> x \\<and>\n                             u1 \\<le> xa \\<and>\n                             xb setinterleaves ((t1, u1), A));\n        ta = a # list; u = aa # lista\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t1 u1.\n                            sa__ @\n                            tb__ setinterleaves ((ta, u), A) \\<longrightarrow>\n                            t1 \\<le> ta \\<and>\n                            u1 \\<le> u \\<and>\n                            sa__ setinterleaves ((t1, u1), A)", "thus \" \\<exists>t1 u1. (s @ t) setinterleaves ((ta, u), A) \\<longrightarrow> t1 \\<le> ta \\<and> u1 \\<le> u \\<and> \n            s setinterleaves ((t1, u1), A)\""], ["proof (prove)\nusing this:\n  \\<forall>m<length ta + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb xc.\n            \\<exists>t1 u1.\n               xb @ xc setinterleaves ((x, xa), A) \\<longrightarrow>\n               t1 \\<le> x \\<and>\n               u1 \\<le> xa \\<and> xb setinterleaves ((t1, u1), A))\n  ta = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length ta + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>t1 u1.\n                          xb @\n                          xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                          t1 \\<le> x \\<and>\n                          u1 \\<le> xa \\<and>\n                          xb setinterleaves ((t1, u1), A));\n     ta = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n                         t1 \\<le> ta \\<and>\n                         u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "from a"], ["proof (chain)\npicking this:\n  \\<forall>m<length ta + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb xc.\n            \\<exists>t1 u1.\n               xb @ xc setinterleaves ((x, xa), A) \\<longrightarrow>\n               t1 \\<le> x \\<and>\n               u1 \\<le> xa \\<and> xb setinterleaves ((t1, u1), A))", "have th0: \"\\<forall>xb xc. \\<exists>t1 u1. (xb @ xc) setinterleaves ((list, lista), A) \\<longrightarrow>\n                                  t1 \\<le> list \\<and> u1 \\<le> lista \\<and> xb setinterleaves ((t1, u1), A)\""], ["proof (prove)\nusing this:\n  \\<forall>m<length ta + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb xc.\n            \\<exists>t1 u1.\n               xb @ xc setinterleaves ((x, xa), A) \\<longrightarrow>\n               t1 \\<le> x \\<and>\n               u1 \\<le> xa \\<and> xb setinterleaves ((t1, u1), A))\n\ngoal (1 subgoal):\n 1. \\<forall>xb xc.\n       \\<exists>t1 u1.\n          xb @ xc setinterleaves ((list, lista), A) \\<longrightarrow>\n          t1 \\<le> list \\<and>\n          u1 \\<le> lista \\<and> xb setinterleaves ((t1, u1), A)", "by (metis add_less_le_mono b c impossible_Cons le_cases not_le_imp_less)"], ["proof (state)\nthis:\n  \\<forall>xb xc.\n     \\<exists>t1 u1.\n        xb @ xc setinterleaves ((list, lista), A) \\<longrightarrow>\n        t1 \\<le> list \\<and>\n        u1 \\<le> lista \\<and> xb setinterleaves ((t1, u1), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length ta + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>t1 u1.\n                          xb @\n                          xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                          t1 \\<le> x \\<and>\n                          u1 \\<le> xa \\<and>\n                          xb setinterleaves ((t1, u1), A));\n     ta = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n                         t1 \\<le> ta \\<and>\n                         u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "from b c"], ["proof (chain)\npicking this:\n  ta = a # list\n  u = aa # lista", "obtain yb where thp: \"a=aa\\<and>a\\<in> A\\<and>(s@t) setinterleaves ((ta, u), A)\\<and>length s >1 \\<Longrightarrow>\n       yb=tl s\""], ["proof (prove)\nusing this:\n  ta = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. (\\<And>yb.\n        (a = aa \\<and>\n         a \\<in> A \\<and>\n         s @ t setinterleaves ((ta, u), A) \\<and>\n         1 < length s \\<Longrightarrow>\n         yb = tl s) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  a = aa \\<and>\n  a \\<in> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and> 1 < length s \\<Longrightarrow>\n  yb = tl s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length ta + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>t1 u1.\n                          xb @\n                          xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                          t1 \\<le> x \\<and>\n                          u1 \\<le> xa \\<and>\n                          xb setinterleaves ((t1, u1), A));\n     ta = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n                         t1 \\<le> ta \\<and>\n                         u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "with b c"], ["proof (chain)\npicking this:\n  ta = a # list\n  u = aa # lista\n  a = aa \\<and>\n  a \\<in> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and> 1 < length s \\<Longrightarrow>\n  yb = tl s", "have thp4: \"a=aa\\<and>a\\<in> A\\<and>(s @ t) setinterleaves ((ta, u), A)\\<and>length s >1 \\<Longrightarrow>s=a#yb\""], ["proof (prove)\nusing this:\n  ta = a # list\n  u = aa # lista\n  a = aa \\<and>\n  a \\<in> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and> 1 < length s \\<Longrightarrow>\n  yb = tl s\n\ngoal (1 subgoal):\n 1. a = aa \\<and>\n    a \\<in> A \\<and>\n    s @ t setinterleaves ((ta, u), A) \\<and> 1 < length s \\<Longrightarrow>\n    s = a # yb", "by (auto, metis Cons_eq_append_conv list.sel(3) list.size(3) not_less0)"], ["proof (state)\nthis:\n  a = aa \\<and>\n  a \\<in> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and> 1 < length s \\<Longrightarrow>\n  s = a # yb\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length ta + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>t1 u1.\n                          xb @\n                          xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                          t1 \\<le> x \\<and>\n                          u1 \\<le> xa \\<and>\n                          xb setinterleaves ((t1, u1), A));\n     ta = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n                         t1 \\<le> ta \\<and>\n                         u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "have thp5: \"a=aa\\<and>a\\<in> A\\<and>(s @ t) setinterleaves ((ta, u), A)\\<and>length s >1 \\<Longrightarrow>\n       (yb @ t) setinterleaves ((list, lista), A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a = aa \\<and>\n    a \\<in> A \\<and>\n    s @ t setinterleaves ((ta, u), A) \\<and> 1 < length s \\<Longrightarrow>\n    yb @ t setinterleaves ((list, lista), A)", "using b c thp4"], ["proof (prove)\nusing this:\n  ta = a # list\n  u = aa # lista\n  a = aa \\<and>\n  a \\<in> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and> 1 < length s \\<Longrightarrow>\n  s = a # yb\n\ngoal (1 subgoal):\n 1. a = aa \\<and>\n    a \\<in> A \\<and>\n    s @ t setinterleaves ((ta, u), A) \\<and> 1 < length s \\<Longrightarrow>\n    yb @ t setinterleaves ((list, lista), A)", "by auto"], ["proof (state)\nthis:\n  a = aa \\<and>\n  a \\<in> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and> 1 < length s \\<Longrightarrow>\n  yb @ t setinterleaves ((list, lista), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length ta + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>t1 u1.\n                          xb @\n                          xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                          t1 \\<le> x \\<and>\n                          u1 \\<le> xa \\<and>\n                          xb setinterleaves ((t1, u1), A));\n     ta = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n                         t1 \\<le> ta \\<and>\n                         u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "from th0"], ["proof (chain)\npicking this:\n  \\<forall>xb xc.\n     \\<exists>t1 u1.\n        xb @ xc setinterleaves ((list, lista), A) \\<longrightarrow>\n        t1 \\<le> list \\<and>\n        u1 \\<le> lista \\<and> xb setinterleaves ((t1, u1), A)", "obtain yt yu where thp1: \"a = aa \\<and> a \\<in> A \\<Longrightarrow> (s @ t) setinterleaves ((ta, u), A) \\<and> \n       1 < length s\\<Longrightarrow>yb setinterleaves ((yt, yu), A)\\<and>yt\\<le>list\\<and>yu\\<le>lista\""], ["proof (prove)\nusing this:\n  \\<forall>xb xc.\n     \\<exists>t1 u1.\n        xb @ xc setinterleaves ((list, lista), A) \\<longrightarrow>\n        t1 \\<le> list \\<and>\n        u1 \\<le> lista \\<and> xb setinterleaves ((t1, u1), A)\n\ngoal (1 subgoal):\n 1. (\\<And>yt yu.\n        (\\<lbrakk>a = aa \\<and> a \\<in> A;\n          s @ t setinterleaves ((ta, u), A) \\<and> 1 < length s\\<rbrakk>\n         \\<Longrightarrow> yb setinterleaves ((yt, yu), A) \\<and>\n                           yt \\<le> list \\<and>\n                           yu \\<le> lista) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using thp5"], ["proof (prove)\nusing this:\n  \\<forall>xb xc.\n     \\<exists>t1 u1.\n        xb @ xc setinterleaves ((list, lista), A) \\<longrightarrow>\n        t1 \\<le> list \\<and>\n        u1 \\<le> lista \\<and> xb setinterleaves ((t1, u1), A)\n  a = aa \\<and>\n  a \\<in> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and> 1 < length s \\<Longrightarrow>\n  yb @ t setinterleaves ((list, lista), A)\n\ngoal (1 subgoal):\n 1. (\\<And>yt yu.\n        (\\<lbrakk>a = aa \\<and> a \\<in> A;\n          s @ t setinterleaves ((ta, u), A) \\<and> 1 < length s\\<rbrakk>\n         \\<Longrightarrow> yb setinterleaves ((yt, yu), A) \\<and>\n                           yt \\<le> list \\<and>\n                           yu \\<le> lista) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>a = aa \\<and> a \\<in> A;\n   s @ t setinterleaves ((ta, u), A) \\<and> 1 < length s\\<rbrakk>\n  \\<Longrightarrow> yb setinterleaves ((yt, yu), A) \\<and>\n                    yt \\<le> list \\<and> yu \\<le> lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length ta + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>t1 u1.\n                          xb @\n                          xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                          t1 \\<le> x \\<and>\n                          u1 \\<le> xa \\<and>\n                          xb setinterleaves ((t1, u1), A));\n     ta = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n                         t1 \\<le> ta \\<and>\n                         u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "from thp thp1"], ["proof (chain)\npicking this:\n  a = aa \\<and>\n  a \\<in> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and> 1 < length s \\<Longrightarrow>\n  yb = tl s\n  \\<lbrakk>a = aa \\<and> a \\<in> A;\n   s @ t setinterleaves ((ta, u), A) \\<and> 1 < length s\\<rbrakk>\n  \\<Longrightarrow> yb setinterleaves ((yt, yu), A) \\<and>\n                    yt \\<le> list \\<and> yu \\<le> lista", "have thp2: \"a=aa\\<and>a\\<in> A\\<Longrightarrow> (s @ t) setinterleaves ((ta, u), A)\\<and> length s >1\\<longrightarrow> \n       s setinterleaves ((a#yt, aa#yu), A)\""], ["proof (prove)\nusing this:\n  a = aa \\<and>\n  a \\<in> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and> 1 < length s \\<Longrightarrow>\n  yb = tl s\n  \\<lbrakk>a = aa \\<and> a \\<in> A;\n   s @ t setinterleaves ((ta, u), A) \\<and> 1 < length s\\<rbrakk>\n  \\<Longrightarrow> yb setinterleaves ((yt, yu), A) \\<and>\n                    yt \\<le> list \\<and> yu \\<le> lista\n\ngoal (1 subgoal):\n 1. a = aa \\<and> a \\<in> A \\<Longrightarrow>\n    s @ t setinterleaves ((ta, u), A) \\<and> 1 < length s \\<longrightarrow>\n    s setinterleaves ((a # yt, aa # yu), A)", "using thp4"], ["proof (prove)\nusing this:\n  a = aa \\<and>\n  a \\<in> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and> 1 < length s \\<Longrightarrow>\n  yb = tl s\n  \\<lbrakk>a = aa \\<and> a \\<in> A;\n   s @ t setinterleaves ((ta, u), A) \\<and> 1 < length s\\<rbrakk>\n  \\<Longrightarrow> yb setinterleaves ((yt, yu), A) \\<and>\n                    yt \\<le> list \\<and> yu \\<le> lista\n  a = aa \\<and>\n  a \\<in> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and> 1 < length s \\<Longrightarrow>\n  s = a # yb\n\ngoal (1 subgoal):\n 1. a = aa \\<and> a \\<in> A \\<Longrightarrow>\n    s @ t setinterleaves ((ta, u), A) \\<and> 1 < length s \\<longrightarrow>\n    s setinterleaves ((a # yt, aa # yu), A)", "by auto"], ["proof (state)\nthis:\n  a = aa \\<and> a \\<in> A \\<Longrightarrow>\n  s @ t setinterleaves ((ta, u), A) \\<and> 1 < length s \\<longrightarrow>\n  s setinterleaves ((a # yt, aa # yu), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length ta + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>t1 u1.\n                          xb @\n                          xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                          t1 \\<le> x \\<and>\n                          u1 \\<le> xa \\<and>\n                          xb setinterleaves ((t1, u1), A));\n     ta = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n                         t1 \\<le> ta \\<and>\n                         u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "from b c"], ["proof (chain)\npicking this:\n  ta = a # list\n  u = aa # lista", "have thp3: \"a=aa\\<and>a\\<in> A\\<Longrightarrow> (s @ t) setinterleaves ((ta, u), A) \\<and> length s=1\\<longrightarrow>\n       s setinterleaves (([a], [aa]), A)\""], ["proof (prove)\nusing this:\n  ta = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. a = aa \\<and> a \\<in> A \\<Longrightarrow>\n    s @ t setinterleaves ((ta, u), A) \\<and> length s = 1 \\<longrightarrow>\n    s setinterleaves (([a], [aa]), A)", "using append_eq_append_conv2[of s t \"[aa]\"]"], ["proof (prove)\nusing this:\n  ta = a # list\n  u = aa # lista\n  (s @ t = [aa] @ ?ts) =\n  (\\<exists>us.\n      s = [aa] @ us \\<and> us @ t = ?ts \\<or>\n      s @ us = [aa] \\<and> t = us @ ?ts)\n\ngoal (1 subgoal):\n 1. a = aa \\<and> a \\<in> A \\<Longrightarrow>\n    s @ t setinterleaves ((ta, u), A) \\<and> length s = 1 \\<longrightarrow>\n    s setinterleaves (([a], [aa]), A)", "by (auto, metis append_Nil2 \n         append_eq_append_conv length_Cons list.size(3))"], ["proof (state)\nthis:\n  a = aa \\<and> a \\<in> A \\<Longrightarrow>\n  s @ t setinterleaves ((ta, u), A) \\<and> length s = 1 \\<longrightarrow>\n  s setinterleaves (([a], [aa]), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length ta + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>t1 u1.\n                          xb @\n                          xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                          t1 \\<le> x \\<and>\n                          u1 \\<le> xa \\<and>\n                          xb setinterleaves ((t1, u1), A));\n     ta = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n                         t1 \\<le> ta \\<and>\n                         u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "have thp6: \"a=aa\\<and>a\\<in> A\\<Longrightarrow> (s @ t) setinterleaves ((ta, u), A) \\<and> length s=0\\<longrightarrow>\n       s setinterleaves (([], []), A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a = aa \\<and> a \\<in> A \\<Longrightarrow>\n    s @ t setinterleaves ((ta, u), A) \\<and> length s = 0 \\<longrightarrow>\n    s setinterleaves (([], []), A)", "by auto"], ["proof (state)\nthis:\n  a = aa \\<and> a \\<in> A \\<Longrightarrow>\n  s @ t setinterleaves ((ta, u), A) \\<and> length s = 0 \\<longrightarrow>\n  s setinterleaves (([], []), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length ta + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>t1 u1.\n                          xb @\n                          xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                          t1 \\<le> x \\<and>\n                          u1 \\<le> xa \\<and>\n                          xb setinterleaves ((t1, u1), A));\n     ta = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n                         t1 \\<le> ta \\<and>\n                         u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "from thp1"], ["proof (chain)\npicking this:\n  \\<lbrakk>a = aa \\<and> a \\<in> A;\n   s @ t setinterleaves ((ta, u), A) \\<and> 1 < length s\\<rbrakk>\n  \\<Longrightarrow> yb setinterleaves ((yt, yu), A) \\<and>\n                    yt \\<le> list \\<and> yu \\<le> lista", "have thp7: \"a=aa\\<and>a\\<in> A\\<Longrightarrow> (s @ t) setinterleaves ((ta, u), A)\\<and> length s >1\\<Longrightarrow>\n       (a # yt)\\<le>ta \\<and>(aa # yu)\\<le>u\""], ["proof (prove)\nusing this:\n  \\<lbrakk>a = aa \\<and> a \\<in> A;\n   s @ t setinterleaves ((ta, u), A) \\<and> 1 < length s\\<rbrakk>\n  \\<Longrightarrow> yb setinterleaves ((yt, yu), A) \\<and>\n                    yt \\<le> list \\<and> yu \\<le> lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = aa \\<and> a \\<in> A;\n     s @ t setinterleaves ((ta, u), A) \\<and> 1 < length s\\<rbrakk>\n    \\<Longrightarrow> a # yt \\<le> ta \\<and> aa # yu \\<le> u", "by (metis b c le_less less_cons)"], ["proof (state)\nthis:\n  \\<lbrakk>a = aa \\<and> a \\<in> A;\n   s @ t setinterleaves ((ta, u), A) \\<and> 1 < length s\\<rbrakk>\n  \\<Longrightarrow> a # yt \\<le> ta \\<and> aa # yu \\<le> u\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length ta + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>t1 u1.\n                          xb @\n                          xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                          t1 \\<le> x \\<and>\n                          u1 \\<le> xa \\<and>\n                          xb setinterleaves ((t1, u1), A));\n     ta = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n                         t1 \\<le> ta \\<and>\n                         u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "have th: \"a=aa\\<and>a\\<in> A\\<Longrightarrow>\\<exists>t1 u1. (s @ t) setinterleaves ((ta, u), A) \\<longrightarrow> \n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a = aa \\<and> a \\<in> A \\<Longrightarrow>\n    \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a = aa \\<and> a \\<in> A \\<Longrightarrow>\n    \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "assume dd:\"a=aa \\<and> a\\<in> A\""], ["proof (state)\nthis:\n  a = aa \\<and> a \\<in> A\n\ngoal (1 subgoal):\n 1. a = aa \\<and> a \\<in> A \\<Longrightarrow>\n    \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "consider (aa) \"length s = 0\" | (bb) \"length s = 1\" | (cc) \"length s > 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>length s = 0 \\<Longrightarrow> thesis;\n     length s = 1 \\<Longrightarrow> thesis;\n     1 < length s \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by linarith"], ["proof (state)\nthis:\n  \\<lbrakk>length s = 0 \\<Longrightarrow> ?thesis;\n   length s = 1 \\<Longrightarrow> ?thesis;\n   1 < length s \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. a = aa \\<and> a \\<in> A \\<Longrightarrow>\n    \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>length s = 0 \\<Longrightarrow> ?thesis;\n   length s = 1 \\<Longrightarrow> ?thesis;\n   1 < length s \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>length s = 0 \\<Longrightarrow> ?thesis;\n   length s = 1 \\<Longrightarrow> ?thesis;\n   1 < length s \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "proof cases"], ["proof (state)\ngoal (3 subgoals):\n 1. length s = 0 \\<Longrightarrow>\n    \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)\n 2. length s = 1 \\<Longrightarrow>\n    \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)\n 3. 1 < length s \\<Longrightarrow>\n    \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "case aa"], ["proof (state)\nthis:\n  length s = 0\n\ngoal (3 subgoals):\n 1. length s = 0 \\<Longrightarrow>\n    \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)\n 2. length s = 1 \\<Longrightarrow>\n    \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)\n 3. 1 < length s \\<Longrightarrow>\n    \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "with thp6"], ["proof (chain)\npicking this:\n  a = aa \\<and> a \\<in> A \\<Longrightarrow>\n  s @ t setinterleaves ((ta, u), A) \\<and> length s = 0 \\<longrightarrow>\n  s setinterleaves (([], []), A)\n  length s = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  a = aa \\<and> a \\<in> A \\<Longrightarrow>\n  s @ t setinterleaves ((ta, u), A) \\<and> length s = 0 \\<longrightarrow>\n  s setinterleaves (([], []), A)\n  length s = 0\n\ngoal (1 subgoal):\n 1. \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "by (rule_tac x=\"[]\" in exI, rule_tac x=\"[]\" in exI, simp)"], ["proof (state)\nthis:\n  \\<exists>t1 u1.\n     s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n     t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)\n\ngoal (2 subgoals):\n 1. length s = 1 \\<Longrightarrow>\n    \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)\n 2. 1 < length s \\<Longrightarrow>\n    \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. length s = 1 \\<Longrightarrow>\n    \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)\n 2. 1 < length s \\<Longrightarrow>\n    \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "case bb"], ["proof (state)\nthis:\n  length s = 1\n\ngoal (2 subgoals):\n 1. length s = 1 \\<Longrightarrow>\n    \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)\n 2. 1 < length s \\<Longrightarrow>\n    \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "with dd thp3 b c"], ["proof (chain)\npicking this:\n  a = aa \\<and> a \\<in> A\n  a = aa \\<and> a \\<in> A \\<Longrightarrow>\n  s @ t setinterleaves ((ta, u), A) \\<and> length s = 1 \\<longrightarrow>\n  s setinterleaves (([a], [aa]), A)\n  ta = a # list\n  u = aa # lista\n  length s = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  a = aa \\<and> a \\<in> A\n  a = aa \\<and> a \\<in> A \\<Longrightarrow>\n  s @ t setinterleaves ((ta, u), A) \\<and> length s = 1 \\<longrightarrow>\n  s setinterleaves (([a], [aa]), A)\n  ta = a # list\n  u = aa # lista\n  length s = 1\n\ngoal (1 subgoal):\n 1. \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "by (rule_tac x=\"[a]\" in exI, rule_tac x=\"[a]\" in exI, auto simp add: le_list_def)"], ["proof (state)\nthis:\n  \\<exists>t1 u1.\n     s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n     t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)\n\ngoal (1 subgoal):\n 1. 1 < length s \\<Longrightarrow>\n    \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 < length s \\<Longrightarrow>\n    \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "case cc"], ["proof (state)\nthis:\n  1 < length s\n\ngoal (1 subgoal):\n 1. 1 < length s \\<Longrightarrow>\n    \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "with dd thp2 thp7 b c"], ["proof (chain)\npicking this:\n  a = aa \\<and> a \\<in> A\n  a = aa \\<and> a \\<in> A \\<Longrightarrow>\n  s @ t setinterleaves ((ta, u), A) \\<and> 1 < length s \\<longrightarrow>\n  s setinterleaves ((a # yt, aa # yu), A)\n  \\<lbrakk>a = aa \\<and> a \\<in> A;\n   s @ t setinterleaves ((ta, u), A) \\<and> 1 < length s\\<rbrakk>\n  \\<Longrightarrow> a # yt \\<le> ta \\<and> aa # yu \\<le> u\n  ta = a # list\n  u = aa # lista\n  1 < length s", "show ?thesis"], ["proof (prove)\nusing this:\n  a = aa \\<and> a \\<in> A\n  a = aa \\<and> a \\<in> A \\<Longrightarrow>\n  s @ t setinterleaves ((ta, u), A) \\<and> 1 < length s \\<longrightarrow>\n  s setinterleaves ((a # yt, aa # yu), A)\n  \\<lbrakk>a = aa \\<and> a \\<in> A;\n   s @ t setinterleaves ((ta, u), A) \\<and> 1 < length s\\<rbrakk>\n  \\<Longrightarrow> a # yt \\<le> ta \\<and> aa # yu \\<le> u\n  ta = a # list\n  u = aa # lista\n  1 < length s\n\ngoal (1 subgoal):\n 1. \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "by (rule_tac x=\"a#yt\" in exI, rule_tac x=\"a#yu\" in exI, auto simp add: le_list_def)"], ["proof (state)\nthis:\n  \\<exists>t1 u1.\n     s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n     t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>t1 u1.\n     s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n     t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a = aa \\<and> a \\<in> A \\<Longrightarrow>\n  \\<exists>t1 u1.\n     s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n     t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length ta + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>t1 u1.\n                          xb @\n                          xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                          t1 \\<le> x \\<and>\n                          u1 \\<le> xa \\<and>\n                          xb setinterleaves ((t1, u1), A));\n     ta = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n                         t1 \\<le> ta \\<and>\n                         u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "from b c"], ["proof (chain)\npicking this:\n  ta = a # list\n  u = aa # lista", "have th1pre: \"a\\<notin>A\\<and>aa\\<in> A\\<and>(s @ t) setinterleaves ((ta, u), A) \\<longrightarrow>\n      tl (s @ t) setinterleaves ((list, u), A)\\<and>hd (s@t)=a\""], ["proof (prove)\nusing this:\n  ta = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. a \\<notin> A \\<and>\n    aa \\<in> A \\<and> s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n    tl (s @ t) setinterleaves ((list, u), A) \\<and> hd (s @ t) = a", "by auto"], ["proof (state)\nthis:\n  a \\<notin> A \\<and>\n  aa \\<in> A \\<and> s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n  tl (s @ t) setinterleaves ((list, u), A) \\<and> hd (s @ t) = a\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length ta + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>t1 u1.\n                          xb @\n                          xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                          t1 \\<le> x \\<and>\n                          u1 \\<le> xa \\<and>\n                          xb setinterleaves ((t1, u1), A));\n     ta = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n                         t1 \\<le> ta \\<and>\n                         u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "from a b c"], ["proof (chain)\npicking this:\n  \\<forall>m<length ta + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb xc.\n            \\<exists>t1 u1.\n               xb @ xc setinterleaves ((x, xa), A) \\<longrightarrow>\n               t1 \\<le> x \\<and>\n               u1 \\<le> xa \\<and> xb setinterleaves ((t1, u1), A))\n  ta = a # list\n  u = aa # lista", "obtain yt1 yu1 where th1pre1: \"a\\<notin>A\\<and>aa\\<in> A\\<and>(s @ t) setinterleaves ((ta, u), A)\\<and>\n      length s>0\\<longrightarrow>yt1\\<le>list\\<and> yu1 \\<le> u\\<and> tl s setinterleaves ((yt1, yu1), A)\""], ["proof (prove)\nusing this:\n  \\<forall>m<length ta + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb xc.\n            \\<exists>t1 u1.\n               xb @ xc setinterleaves ((x, xa), A) \\<longrightarrow>\n               t1 \\<le> x \\<and>\n               u1 \\<le> xa \\<and> xb setinterleaves ((t1, u1), A))\n  ta = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. (\\<And>yt1 yu1.\n        a \\<notin> A \\<and>\n        aa \\<in> A \\<and>\n        s @ t setinterleaves ((ta, u), A) \\<and>\n        0 < length s \\<longrightarrow>\n        yt1 \\<le> list \\<and>\n        yu1 \\<le> u \\<and>\n        tl s setinterleaves ((yt1, yu1), A) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis (no_types, lifting) length_Cons length_greater_0_conv lessI plus_nat.simps(2) \n        th1pre tl_append2)"], ["proof (state)\nthis:\n  a \\<notin> A \\<and>\n  aa \\<in> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and> 0 < length s \\<longrightarrow>\n  yt1 \\<le> list \\<and>\n  yu1 \\<le> u \\<and> tl s setinterleaves ((yt1, yu1), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length ta + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>t1 u1.\n                          xb @\n                          xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                          t1 \\<le> x \\<and>\n                          u1 \\<le> xa \\<and>\n                          xb setinterleaves ((t1, u1), A));\n     ta = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n                         t1 \\<le> ta \\<and>\n                         u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "from b"], ["proof (chain)\npicking this:\n  ta = a # list", "have th1pre2: \"yt1\\<le>list\\<longrightarrow>a#yt1\\<le>ta\""], ["proof (prove)\nusing this:\n  ta = a # list\n\ngoal (1 subgoal):\n 1. yt1 \\<le> list \\<longrightarrow> a # yt1 \\<le> ta", "by (simp add: le_less less_cons)"], ["proof (state)\nthis:\n  yt1 \\<le> list \\<longrightarrow> a # yt1 \\<le> ta\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length ta + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>t1 u1.\n                          xb @\n                          xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                          t1 \\<le> x \\<and>\n                          u1 \\<le> xa \\<and>\n                          xb setinterleaves ((t1, u1), A));\n     ta = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n                         t1 \\<le> ta \\<and>\n                         u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "from b c"], ["proof (chain)\npicking this:\n  ta = a # list\n  u = aa # lista", "have th1pre3: \"a\\<notin>A\\<and>aa\\<in> A\\<and>tl s setinterleaves ((yt1, yu1), A)\\<longrightarrow>\n      (a#(tl s)) setinterleaves ((a#yt1, yu1), A)\""], ["proof (prove)\nusing this:\n  ta = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. a \\<notin> A \\<and>\n    aa \\<in> A \\<and> tl s setinterleaves ((yt1, yu1), A) \\<longrightarrow>\n    a # tl s setinterleaves ((a # yt1, yu1), A)", "by (metis (mono_tags, lifting) addNonSync doubleReverse rev.simps(2) rev_rev_ident)"], ["proof (state)\nthis:\n  a \\<notin> A \\<and>\n  aa \\<in> A \\<and> tl s setinterleaves ((yt1, yu1), A) \\<longrightarrow>\n  a # tl s setinterleaves ((a # yt1, yu1), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length ta + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>t1 u1.\n                          xb @\n                          xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                          t1 \\<le> x \\<and>\n                          u1 \\<le> xa \\<and>\n                          xb setinterleaves ((t1, u1), A));\n     ta = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n                         t1 \\<le> ta \\<and>\n                         u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "from b c th1pre1 th1pre2"], ["proof (chain)\npicking this:\n  ta = a # list\n  u = aa # lista\n  a \\<notin> A \\<and>\n  aa \\<in> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and> 0 < length s \\<longrightarrow>\n  yt1 \\<le> list \\<and>\n  yu1 \\<le> u \\<and> tl s setinterleaves ((yt1, yu1), A)\n  yt1 \\<le> list \\<longrightarrow> a # yt1 \\<le> ta", "have th1pre4: \"a\\<notin>A\\<and>aa\\<in> A\\<and>(s @ t) setinterleaves ((ta, u), A)\\<and>\n      length s>0 \\<longrightarrow>a#yt1\\<le>ta\\<and> yu1 \\<le>u\\<and> s setinterleaves ((a#yt1, yu1), A)\""], ["proof (prove)\nusing this:\n  ta = a # list\n  u = aa # lista\n  a \\<notin> A \\<and>\n  aa \\<in> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and> 0 < length s \\<longrightarrow>\n  yt1 \\<le> list \\<and>\n  yu1 \\<le> u \\<and> tl s setinterleaves ((yt1, yu1), A)\n  yt1 \\<le> list \\<longrightarrow> a # yt1 \\<le> ta\n\ngoal (1 subgoal):\n 1. a \\<notin> A \\<and>\n    aa \\<in> A \\<and>\n    s @ t setinterleaves ((ta, u), A) \\<and> 0 < length s \\<longrightarrow>\n    a # yt1 \\<le> ta \\<and>\n    yu1 \\<le> u \\<and> s setinterleaves ((a # yt1, yu1), A)", "using th1pre th1pre3"], ["proof (prove)\nusing this:\n  ta = a # list\n  u = aa # lista\n  a \\<notin> A \\<and>\n  aa \\<in> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and> 0 < length s \\<longrightarrow>\n  yt1 \\<le> list \\<and>\n  yu1 \\<le> u \\<and> tl s setinterleaves ((yt1, yu1), A)\n  yt1 \\<le> list \\<longrightarrow> a # yt1 \\<le> ta\n  a \\<notin> A \\<and>\n  aa \\<in> A \\<and> s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n  tl (s @ t) setinterleaves ((list, u), A) \\<and> hd (s @ t) = a\n  a \\<notin> A \\<and>\n  aa \\<in> A \\<and> tl s setinterleaves ((yt1, yu1), A) \\<longrightarrow>\n  a # tl s setinterleaves ((a # yt1, yu1), A)\n\ngoal (1 subgoal):\n 1. a \\<notin> A \\<and>\n    aa \\<in> A \\<and>\n    s @ t setinterleaves ((ta, u), A) \\<and> 0 < length s \\<longrightarrow>\n    a # yt1 \\<le> ta \\<and>\n    yu1 \\<le> u \\<and> s setinterleaves ((a # yt1, yu1), A)", "by fastforce"], ["proof (state)\nthis:\n  a \\<notin> A \\<and>\n  aa \\<in> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and> 0 < length s \\<longrightarrow>\n  a # yt1 \\<le> ta \\<and>\n  yu1 \\<le> u \\<and> s setinterleaves ((a # yt1, yu1), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length ta + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>t1 u1.\n                          xb @\n                          xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                          t1 \\<le> x \\<and>\n                          u1 \\<le> xa \\<and>\n                          xb setinterleaves ((t1, u1), A));\n     ta = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n                         t1 \\<le> ta \\<and>\n                         u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "have th1pre5:\"a\\<notin>A\\<and>aa\\<in> A\\<and>(s @ t) setinterleaves ((ta, u), A)\\<and>length s=0 \\<longrightarrow>[]\\<le>ta\\<and> [] \\<le>u\\<and> \n      s setinterleaves (([], []), A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<notin> A \\<and>\n    aa \\<in> A \\<and>\n    s @ t setinterleaves ((ta, u), A) \\<and> length s = 0 \\<longrightarrow>\n    [] \\<le> ta \\<and> [] \\<le> u \\<and> s setinterleaves (([], []), A)", "by auto"], ["proof (state)\nthis:\n  a \\<notin> A \\<and>\n  aa \\<in> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and> length s = 0 \\<longrightarrow>\n  [] \\<le> ta \\<and> [] \\<le> u \\<and> s setinterleaves (([], []), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length ta + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>t1 u1.\n                          xb @\n                          xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                          t1 \\<le> x \\<and>\n                          u1 \\<le> xa \\<and>\n                          xb setinterleaves ((t1, u1), A));\n     ta = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n                         t1 \\<le> ta \\<and>\n                         u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "have th1: \"a\\<notin>A\\<and>aa\\<in> A\\<Longrightarrow>\\<exists>t1 u1. (s @ t) setinterleaves ((ta, u), A) \\<longrightarrow> \n      t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<notin> A \\<and> aa \\<in> A \\<Longrightarrow>\n    \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "using th1pre4 th1pre5"], ["proof (prove)\nusing this:\n  a \\<notin> A \\<and>\n  aa \\<in> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and> 0 < length s \\<longrightarrow>\n  a # yt1 \\<le> ta \\<and>\n  yu1 \\<le> u \\<and> s setinterleaves ((a # yt1, yu1), A)\n  a \\<notin> A \\<and>\n  aa \\<in> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and> length s = 0 \\<longrightarrow>\n  [] \\<le> ta \\<and> [] \\<le> u \\<and> s setinterleaves (([], []), A)\n\ngoal (1 subgoal):\n 1. a \\<notin> A \\<and> aa \\<in> A \\<Longrightarrow>\n    \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "by blast"], ["proof (state)\nthis:\n  a \\<notin> A \\<and> aa \\<in> A \\<Longrightarrow>\n  \\<exists>t1 u1.\n     s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n     t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length ta + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>t1 u1.\n                          xb @\n                          xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                          t1 \\<le> x \\<and>\n                          u1 \\<le> xa \\<and>\n                          xb setinterleaves ((t1, u1), A));\n     ta = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n                         t1 \\<le> ta \\<and>\n                         u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "from b c"], ["proof (chain)\npicking this:\n  ta = a # list\n  u = aa # lista", "have th2pre: \"aa\\<notin>A\\<and>a\\<in> A\\<and>(s @ t) setinterleaves ((ta, u), A) \\<longrightarrow>\n      tl (s @ t) setinterleaves ((ta, lista), A)\\<and>hd (s@t)=aa\""], ["proof (prove)\nusing this:\n  ta = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. aa \\<notin> A \\<and>\n    a \\<in> A \\<and> s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n    tl (s @ t) setinterleaves ((ta, lista), A) \\<and> hd (s @ t) = aa", "by auto"], ["proof (state)\nthis:\n  aa \\<notin> A \\<and>\n  a \\<in> A \\<and> s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n  tl (s @ t) setinterleaves ((ta, lista), A) \\<and> hd (s @ t) = aa\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length ta + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>t1 u1.\n                          xb @\n                          xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                          t1 \\<le> x \\<and>\n                          u1 \\<le> xa \\<and>\n                          xb setinterleaves ((t1, u1), A));\n     ta = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n                         t1 \\<le> ta \\<and>\n                         u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "from a b c"], ["proof (chain)\npicking this:\n  \\<forall>m<length ta + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb xc.\n            \\<exists>t1 u1.\n               xb @ xc setinterleaves ((x, xa), A) \\<longrightarrow>\n               t1 \\<le> x \\<and>\n               u1 \\<le> xa \\<and> xb setinterleaves ((t1, u1), A))\n  ta = a # list\n  u = aa # lista", "obtain yt2 yu2 where th2pre1: \"aa\\<notin>A\\<and>a\\<in> A\\<and>(s @ t) setinterleaves ((ta, u), A)\\<and>\n      length s>0\\<longrightarrow>yt2\\<le>ta\\<and> yu2 \\<le> lista\\<and> (tl s) setinterleaves ((yt2, yu2), A)\""], ["proof (prove)\nusing this:\n  \\<forall>m<length ta + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb xc.\n            \\<exists>t1 u1.\n               xb @ xc setinterleaves ((x, xa), A) \\<longrightarrow>\n               t1 \\<le> x \\<and>\n               u1 \\<le> xa \\<and> xb setinterleaves ((t1, u1), A))\n  ta = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. (\\<And>yt2 yu2.\n        aa \\<notin> A \\<and>\n        a \\<in> A \\<and>\n        s @ t setinterleaves ((ta, u), A) \\<and>\n        0 < length s \\<longrightarrow>\n        yt2 \\<le> ta \\<and>\n        yu2 \\<le> lista \\<and>\n        tl s setinterleaves ((yt2, yu2), A) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis (no_types, lifting) add_Suc_right length_Cons length_greater_0_conv lessI \n        th2pre tl_append2)"], ["proof (state)\nthis:\n  aa \\<notin> A \\<and>\n  a \\<in> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and> 0 < length s \\<longrightarrow>\n  yt2 \\<le> ta \\<and>\n  yu2 \\<le> lista \\<and> tl s setinterleaves ((yt2, yu2), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length ta + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>t1 u1.\n                          xb @\n                          xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                          t1 \\<le> x \\<and>\n                          u1 \\<le> xa \\<and>\n                          xb setinterleaves ((t1, u1), A));\n     ta = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n                         t1 \\<le> ta \\<and>\n                         u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "from c"], ["proof (chain)\npicking this:\n  u = aa # lista", "have th2pre2: \"yu2\\<le>lista\\<longrightarrow>aa#yu2\\<le>u\""], ["proof (prove)\nusing this:\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. yu2 \\<le> lista \\<longrightarrow> aa # yu2 \\<le> u", "by (simp add: le_less less_cons)"], ["proof (state)\nthis:\n  yu2 \\<le> lista \\<longrightarrow> aa # yu2 \\<le> u\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length ta + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>t1 u1.\n                          xb @\n                          xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                          t1 \\<le> x \\<and>\n                          u1 \\<le> xa \\<and>\n                          xb setinterleaves ((t1, u1), A));\n     ta = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n                         t1 \\<le> ta \\<and>\n                         u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "from b c"], ["proof (chain)\npicking this:\n  ta = a # list\n  u = aa # lista", "have th2pre3: \"aa\\<notin>A\\<and>a\\<in> A\\<and>tl s setinterleaves ((yt2, yu2), A)\\<longrightarrow>\n      (aa#(tl s)) setinterleaves ((yt2, aa#yu2), A)\""], ["proof (prove)\nusing this:\n  ta = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. aa \\<notin> A \\<and>\n    a \\<in> A \\<and> tl s setinterleaves ((yt2, yu2), A) \\<longrightarrow>\n    aa # tl s setinterleaves ((yt2, aa # yu2), A)", "by (metis (mono_tags, lifting) addNonSync doubleReverse rev.simps(2) rev_rev_ident)"], ["proof (state)\nthis:\n  aa \\<notin> A \\<and>\n  a \\<in> A \\<and> tl s setinterleaves ((yt2, yu2), A) \\<longrightarrow>\n  aa # tl s setinterleaves ((yt2, aa # yu2), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length ta + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>t1 u1.\n                          xb @\n                          xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                          t1 \\<le> x \\<and>\n                          u1 \\<le> xa \\<and>\n                          xb setinterleaves ((t1, u1), A));\n     ta = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n                         t1 \\<le> ta \\<and>\n                         u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "from b c th2pre1 th2pre2"], ["proof (chain)\npicking this:\n  ta = a # list\n  u = aa # lista\n  aa \\<notin> A \\<and>\n  a \\<in> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and> 0 < length s \\<longrightarrow>\n  yt2 \\<le> ta \\<and>\n  yu2 \\<le> lista \\<and> tl s setinterleaves ((yt2, yu2), A)\n  yu2 \\<le> lista \\<longrightarrow> aa # yu2 \\<le> u", "have th2pre4: \"aa\\<notin>A\\<and>a\\<in> A\\<and>(s @ t) setinterleaves ((ta, u), A)\\<and>\n      length s>0 \\<longrightarrow>yt2\\<le>ta\\<and> aa#yu2 \\<le>u\\<and> s setinterleaves ((yt2, aa#yu2), A)\""], ["proof (prove)\nusing this:\n  ta = a # list\n  u = aa # lista\n  aa \\<notin> A \\<and>\n  a \\<in> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and> 0 < length s \\<longrightarrow>\n  yt2 \\<le> ta \\<and>\n  yu2 \\<le> lista \\<and> tl s setinterleaves ((yt2, yu2), A)\n  yu2 \\<le> lista \\<longrightarrow> aa # yu2 \\<le> u\n\ngoal (1 subgoal):\n 1. aa \\<notin> A \\<and>\n    a \\<in> A \\<and>\n    s @ t setinterleaves ((ta, u), A) \\<and> 0 < length s \\<longrightarrow>\n    yt2 \\<le> ta \\<and>\n    aa # yu2 \\<le> u \\<and> s setinterleaves ((yt2, aa # yu2), A)", "using th2pre th2pre3"], ["proof (prove)\nusing this:\n  ta = a # list\n  u = aa # lista\n  aa \\<notin> A \\<and>\n  a \\<in> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and> 0 < length s \\<longrightarrow>\n  yt2 \\<le> ta \\<and>\n  yu2 \\<le> lista \\<and> tl s setinterleaves ((yt2, yu2), A)\n  yu2 \\<le> lista \\<longrightarrow> aa # yu2 \\<le> u\n  aa \\<notin> A \\<and>\n  a \\<in> A \\<and> s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n  tl (s @ t) setinterleaves ((ta, lista), A) \\<and> hd (s @ t) = aa\n  aa \\<notin> A \\<and>\n  a \\<in> A \\<and> tl s setinterleaves ((yt2, yu2), A) \\<longrightarrow>\n  aa # tl s setinterleaves ((yt2, aa # yu2), A)\n\ngoal (1 subgoal):\n 1. aa \\<notin> A \\<and>\n    a \\<in> A \\<and>\n    s @ t setinterleaves ((ta, u), A) \\<and> 0 < length s \\<longrightarrow>\n    yt2 \\<le> ta \\<and>\n    aa # yu2 \\<le> u \\<and> s setinterleaves ((yt2, aa # yu2), A)", "by fastforce"], ["proof (state)\nthis:\n  aa \\<notin> A \\<and>\n  a \\<in> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and> 0 < length s \\<longrightarrow>\n  yt2 \\<le> ta \\<and>\n  aa # yu2 \\<le> u \\<and> s setinterleaves ((yt2, aa # yu2), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length ta + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>t1 u1.\n                          xb @\n                          xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                          t1 \\<le> x \\<and>\n                          u1 \\<le> xa \\<and>\n                          xb setinterleaves ((t1, u1), A));\n     ta = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n                         t1 \\<le> ta \\<and>\n                         u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "have th2pre5:\"aa\\<notin>A\\<and>a\\<in> A\\<and>(s @ t) setinterleaves ((ta, u), A)\\<and>length s=0 \\<longrightarrow>\n      []\\<le>ta\\<and> [] \\<le>u\\<and> s setinterleaves (([], []), A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. aa \\<notin> A \\<and>\n    a \\<in> A \\<and>\n    s @ t setinterleaves ((ta, u), A) \\<and> length s = 0 \\<longrightarrow>\n    [] \\<le> ta \\<and> [] \\<le> u \\<and> s setinterleaves (([], []), A)", "by auto"], ["proof (state)\nthis:\n  aa \\<notin> A \\<and>\n  a \\<in> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and> length s = 0 \\<longrightarrow>\n  [] \\<le> ta \\<and> [] \\<le> u \\<and> s setinterleaves (([], []), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length ta + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>t1 u1.\n                          xb @\n                          xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                          t1 \\<le> x \\<and>\n                          u1 \\<le> xa \\<and>\n                          xb setinterleaves ((t1, u1), A));\n     ta = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n                         t1 \\<le> ta \\<and>\n                         u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "have th2: \"aa\\<notin>A\\<and>a\\<in> A\\<Longrightarrow>\\<exists>t1 u1. (s @ t) setinterleaves ((ta, u), A) \\<longrightarrow> \n      t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. aa \\<notin> A \\<and> a \\<in> A \\<Longrightarrow>\n    \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "using th2pre4 th2pre5"], ["proof (prove)\nusing this:\n  aa \\<notin> A \\<and>\n  a \\<in> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and> 0 < length s \\<longrightarrow>\n  yt2 \\<le> ta \\<and>\n  aa # yu2 \\<le> u \\<and> s setinterleaves ((yt2, aa # yu2), A)\n  aa \\<notin> A \\<and>\n  a \\<in> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and> length s = 0 \\<longrightarrow>\n  [] \\<le> ta \\<and> [] \\<le> u \\<and> s setinterleaves (([], []), A)\n\ngoal (1 subgoal):\n 1. aa \\<notin> A \\<and> a \\<in> A \\<Longrightarrow>\n    \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "by blast"], ["proof (state)\nthis:\n  aa \\<notin> A \\<and> a \\<in> A \\<Longrightarrow>\n  \\<exists>t1 u1.\n     s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n     t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length ta + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>t1 u1.\n                          xb @\n                          xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                          t1 \\<le> x \\<and>\n                          u1 \\<le> xa \\<and>\n                          xb setinterleaves ((t1, u1), A));\n     ta = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n                         t1 \\<le> ta \\<and>\n                         u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "from b c"], ["proof (chain)\npicking this:\n  ta = a # list\n  u = aa # lista", "have th3pre: \"aa\\<notin>A\\<and>a\\<notin> A\\<and>(s @ t) setinterleaves ((ta, u), A)\\<longrightarrow>tl (s @ t) \n      setinterleaves ((ta, lista), A)\\<and>hd (s@t)=aa\\<or>tl (s @ t)setinterleaves((list, u), A)\\<and>hd(s@t)=a\""], ["proof (prove)\nusing this:\n  ta = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. aa \\<notin> A \\<and>\n    a \\<notin> A \\<and> s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n    tl (s @ t) setinterleaves ((ta, lista), A) \\<and> hd (s @ t) = aa \\<or>\n    tl (s @ t) setinterleaves ((list, u), A) \\<and> hd (s @ t) = a", "by auto"], ["proof (state)\nthis:\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and> s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n  tl (s @ t) setinterleaves ((ta, lista), A) \\<and> hd (s @ t) = aa \\<or>\n  tl (s @ t) setinterleaves ((list, u), A) \\<and> hd (s @ t) = a\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length ta + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>t1 u1.\n                          xb @\n                          xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                          t1 \\<le> x \\<and>\n                          u1 \\<le> xa \\<and>\n                          xb setinterleaves ((t1, u1), A));\n     ta = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n                         t1 \\<le> ta \\<and>\n                         u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "from a b c th3pre"], ["proof (chain)\npicking this:\n  \\<forall>m<length ta + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb xc.\n            \\<exists>t1 u1.\n               xb @ xc setinterleaves ((x, xa), A) \\<longrightarrow>\n               t1 \\<le> x \\<and>\n               u1 \\<le> xa \\<and> xb setinterleaves ((t1, u1), A))\n  ta = a # list\n  u = aa # lista\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and> s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n  tl (s @ t) setinterleaves ((ta, lista), A) \\<and> hd (s @ t) = aa \\<or>\n  tl (s @ t) setinterleaves ((list, u), A) \\<and> hd (s @ t) = a", "obtain yt31 yu31 where th3pre1: \"aa\\<notin>A\\<and>a\\<notin> A\\<and>\n      (s @ t) setinterleaves ((ta, u), A)\\<and>tl (s @ t) setinterleaves ((ta, lista), A)\\<and>\n      hd (s@t)=aa\\<and>length s>0\\<longrightarrow>yt31\\<le>ta\\<and> yu31 \\<le> lista\\<and> (tl s) setinterleaves ((yt31, yu31), A)\""], ["proof (prove)\nusing this:\n  \\<forall>m<length ta + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb xc.\n            \\<exists>t1 u1.\n               xb @ xc setinterleaves ((x, xa), A) \\<longrightarrow>\n               t1 \\<le> x \\<and>\n               u1 \\<le> xa \\<and> xb setinterleaves ((t1, u1), A))\n  ta = a # list\n  u = aa # lista\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and> s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n  tl (s @ t) setinterleaves ((ta, lista), A) \\<and> hd (s @ t) = aa \\<or>\n  tl (s @ t) setinterleaves ((list, u), A) \\<and> hd (s @ t) = a\n\ngoal (1 subgoal):\n 1. (\\<And>yt31 yu31.\n        aa \\<notin> A \\<and>\n        a \\<notin> A \\<and>\n        s @ t setinterleaves ((ta, u), A) \\<and>\n        tl (s @ t) setinterleaves ((ta, lista), A) \\<and>\n        hd (s @ t) = aa \\<and> 0 < length s \\<longrightarrow>\n        yt31 \\<le> ta \\<and>\n        yu31 \\<le> lista \\<and>\n        tl s setinterleaves ((yt31, yu31), A) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(metis(no_types,lifting)add_Suc_right length_Cons length_greater_0_conv lessI tl_append2)"], ["proof (state)\nthis:\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and>\n  tl (s @ t) setinterleaves ((ta, lista), A) \\<and>\n  hd (s @ t) = aa \\<and> 0 < length s \\<longrightarrow>\n  yt31 \\<le> ta \\<and>\n  yu31 \\<le> lista \\<and> tl s setinterleaves ((yt31, yu31), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length ta + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>t1 u1.\n                          xb @\n                          xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                          t1 \\<le> x \\<and>\n                          u1 \\<le> xa \\<and>\n                          xb setinterleaves ((t1, u1), A));\n     ta = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n                         t1 \\<le> ta \\<and>\n                         u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "from a b c th3pre"], ["proof (chain)\npicking this:\n  \\<forall>m<length ta + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb xc.\n            \\<exists>t1 u1.\n               xb @ xc setinterleaves ((x, xa), A) \\<longrightarrow>\n               t1 \\<le> x \\<and>\n               u1 \\<le> xa \\<and> xb setinterleaves ((t1, u1), A))\n  ta = a # list\n  u = aa # lista\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and> s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n  tl (s @ t) setinterleaves ((ta, lista), A) \\<and> hd (s @ t) = aa \\<or>\n  tl (s @ t) setinterleaves ((list, u), A) \\<and> hd (s @ t) = a", "obtain yt32 yu32 where th3pre2: \"aa\\<notin>A\\<and>a\\<notin>A\\<and>(s@t)setinterleaves ((ta, u),A)\\<and>\n      tl (s @ t) setinterleaves ((list, u), A)\\<and>hd (s@t)=a\\<and>length s>0\\<longrightarrow>yt32\\<le>list\\<and> yu32 \\<le>u\\<and> \n      (tl s) setinterleaves ((yt32, yu32), A)\""], ["proof (prove)\nusing this:\n  \\<forall>m<length ta + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb xc.\n            \\<exists>t1 u1.\n               xb @ xc setinterleaves ((x, xa), A) \\<longrightarrow>\n               t1 \\<le> x \\<and>\n               u1 \\<le> xa \\<and> xb setinterleaves ((t1, u1), A))\n  ta = a # list\n  u = aa # lista\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and> s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n  tl (s @ t) setinterleaves ((ta, lista), A) \\<and> hd (s @ t) = aa \\<or>\n  tl (s @ t) setinterleaves ((list, u), A) \\<and> hd (s @ t) = a\n\ngoal (1 subgoal):\n 1. (\\<And>yt32 yu32.\n        aa \\<notin> A \\<and>\n        a \\<notin> A \\<and>\n        s @ t setinterleaves ((ta, u), A) \\<and>\n        tl (s @ t) setinterleaves ((list, u), A) \\<and>\n        hd (s @ t) = a \\<and> 0 < length s \\<longrightarrow>\n        yt32 \\<le> list \\<and>\n        yu32 \\<le> u \\<and>\n        tl s setinterleaves ((yt32, yu32), A) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis add_less_mono1 impossible_Cons le_neq_implies_less length_greater_0_conv \n        nat_le_linear tl_append2)"], ["proof (state)\nthis:\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and>\n  tl (s @ t) setinterleaves ((list, u), A) \\<and>\n  hd (s @ t) = a \\<and> 0 < length s \\<longrightarrow>\n  yt32 \\<le> list \\<and>\n  yu32 \\<le> u \\<and> tl s setinterleaves ((yt32, yu32), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length ta + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>t1 u1.\n                          xb @\n                          xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                          t1 \\<le> x \\<and>\n                          u1 \\<le> xa \\<and>\n                          xb setinterleaves ((t1, u1), A));\n     ta = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n                         t1 \\<le> ta \\<and>\n                         u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "from b c"], ["proof (chain)\npicking this:\n  ta = a # list\n  u = aa # lista", "have th3pre3: \"aa\\<notin>A\\<and>a\\<notin> A\\<and>tl s setinterleaves ((yt31, yu31), A)\\<longrightarrow>\n      (aa#(tl s)) setinterleaves ((yt31, aa#yu31), A)\""], ["proof (prove)\nusing this:\n  ta = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. aa \\<notin> A \\<and>\n    a \\<notin> A \\<and>\n    tl s setinterleaves ((yt31, yu31), A) \\<longrightarrow>\n    aa # tl s setinterleaves ((yt31, aa # yu31), A)", "by (metis (mono_tags, lifting) addNonSync doubleReverse rev.simps(2) rev_rev_ident)"], ["proof (state)\nthis:\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  tl s setinterleaves ((yt31, yu31), A) \\<longrightarrow>\n  aa # tl s setinterleaves ((yt31, aa # yu31), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length ta + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>t1 u1.\n                          xb @\n                          xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                          t1 \\<le> x \\<and>\n                          u1 \\<le> xa \\<and>\n                          xb setinterleaves ((t1, u1), A));\n     ta = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n                         t1 \\<le> ta \\<and>\n                         u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "from b c th3pre1 th3pre2"], ["proof (chain)\npicking this:\n  ta = a # list\n  u = aa # lista\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and>\n  tl (s @ t) setinterleaves ((ta, lista), A) \\<and>\n  hd (s @ t) = aa \\<and> 0 < length s \\<longrightarrow>\n  yt31 \\<le> ta \\<and>\n  yu31 \\<le> lista \\<and> tl s setinterleaves ((yt31, yu31), A)\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and>\n  tl (s @ t) setinterleaves ((list, u), A) \\<and>\n  hd (s @ t) = a \\<and> 0 < length s \\<longrightarrow>\n  yt32 \\<le> list \\<and>\n  yu32 \\<le> u \\<and> tl s setinterleaves ((yt32, yu32), A)", "have th3pre4: \"aa\\<notin>A\\<and>a\\<notin> A\\<and>(s @ t) setinterleaves ((ta, u), A)\\<and>\n      length s>0\\<and>tl (s @ t) setinterleaves ((ta, lista), A)\\<and>hd (s@t)=aa \\<longrightarrow>yt31\\<le>ta\\<and> aa#yu31 \\<le>u\\<and> \n      s setinterleaves ((yt31, aa#yu31), A)\""], ["proof (prove)\nusing this:\n  ta = a # list\n  u = aa # lista\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and>\n  tl (s @ t) setinterleaves ((ta, lista), A) \\<and>\n  hd (s @ t) = aa \\<and> 0 < length s \\<longrightarrow>\n  yt31 \\<le> ta \\<and>\n  yu31 \\<le> lista \\<and> tl s setinterleaves ((yt31, yu31), A)\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and>\n  tl (s @ t) setinterleaves ((list, u), A) \\<and>\n  hd (s @ t) = a \\<and> 0 < length s \\<longrightarrow>\n  yt32 \\<le> list \\<and>\n  yu32 \\<le> u \\<and> tl s setinterleaves ((yt32, yu32), A)\n\ngoal (1 subgoal):\n 1. aa \\<notin> A \\<and>\n    a \\<notin> A \\<and>\n    s @ t setinterleaves ((ta, u), A) \\<and>\n    0 < length s \\<and>\n    tl (s @ t) setinterleaves ((ta, lista), A) \\<and>\n    hd (s @ t) = aa \\<longrightarrow>\n    yt31 \\<le> ta \\<and>\n    aa # yu31 \\<le> u \\<and> s setinterleaves ((yt31, aa # yu31), A)", "by (metis hd_append2 le_less length_greater_0_conv less_cons list.exhaust_sel th3pre3)"], ["proof (state)\nthis:\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and>\n  0 < length s \\<and>\n  tl (s @ t) setinterleaves ((ta, lista), A) \\<and>\n  hd (s @ t) = aa \\<longrightarrow>\n  yt31 \\<le> ta \\<and>\n  aa # yu31 \\<le> u \\<and> s setinterleaves ((yt31, aa # yu31), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length ta + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>t1 u1.\n                          xb @\n                          xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                          t1 \\<le> x \\<and>\n                          u1 \\<le> xa \\<and>\n                          xb setinterleaves ((t1, u1), A));\n     ta = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n                         t1 \\<le> ta \\<and>\n                         u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "from b c"], ["proof (chain)\npicking this:\n  ta = a # list\n  u = aa # lista", "have th3pre5: \"aa\\<notin>A\\<and>a\\<notin> A\\<and>tl s setinterleaves ((yt32, yu32), A)\\<longrightarrow>\n      (a#(tl s)) setinterleaves ((a#yt32, yu32), A)\""], ["proof (prove)\nusing this:\n  ta = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. aa \\<notin> A \\<and>\n    a \\<notin> A \\<and>\n    tl s setinterleaves ((yt32, yu32), A) \\<longrightarrow>\n    a # tl s setinterleaves ((a # yt32, yu32), A)", "by (metis (mono_tags, lifting) addNonSync doubleReverse rev.simps(2) rev_rev_ident)"], ["proof (state)\nthis:\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  tl s setinterleaves ((yt32, yu32), A) \\<longrightarrow>\n  a # tl s setinterleaves ((a # yt32, yu32), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length ta + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>t1 u1.\n                          xb @\n                          xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                          t1 \\<le> x \\<and>\n                          u1 \\<le> xa \\<and>\n                          xb setinterleaves ((t1, u1), A));\n     ta = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n                         t1 \\<le> ta \\<and>\n                         u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "from b c th3pre1 th3pre2"], ["proof (chain)\npicking this:\n  ta = a # list\n  u = aa # lista\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and>\n  tl (s @ t) setinterleaves ((ta, lista), A) \\<and>\n  hd (s @ t) = aa \\<and> 0 < length s \\<longrightarrow>\n  yt31 \\<le> ta \\<and>\n  yu31 \\<le> lista \\<and> tl s setinterleaves ((yt31, yu31), A)\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and>\n  tl (s @ t) setinterleaves ((list, u), A) \\<and>\n  hd (s @ t) = a \\<and> 0 < length s \\<longrightarrow>\n  yt32 \\<le> list \\<and>\n  yu32 \\<le> u \\<and> tl s setinterleaves ((yt32, yu32), A)", "have th3pre6: \"aa\\<notin>A\\<and>a\\<notin> A\\<and>(s @ t) setinterleaves ((ta, u), A)\\<and>\n      length s>0\\<and>tl (s @ t) setinterleaves ((list, u), A)\\<and>hd (s@t)=a \\<longrightarrow>a#yt32\\<le>ta\\<and> yu32 \\<le>u\\<and> \n      s setinterleaves ((a#yt32, yu32), A)\""], ["proof (prove)\nusing this:\n  ta = a # list\n  u = aa # lista\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and>\n  tl (s @ t) setinterleaves ((ta, lista), A) \\<and>\n  hd (s @ t) = aa \\<and> 0 < length s \\<longrightarrow>\n  yt31 \\<le> ta \\<and>\n  yu31 \\<le> lista \\<and> tl s setinterleaves ((yt31, yu31), A)\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and>\n  tl (s @ t) setinterleaves ((list, u), A) \\<and>\n  hd (s @ t) = a \\<and> 0 < length s \\<longrightarrow>\n  yt32 \\<le> list \\<and>\n  yu32 \\<le> u \\<and> tl s setinterleaves ((yt32, yu32), A)\n\ngoal (1 subgoal):\n 1. aa \\<notin> A \\<and>\n    a \\<notin> A \\<and>\n    s @ t setinterleaves ((ta, u), A) \\<and>\n    0 < length s \\<and>\n    tl (s @ t) setinterleaves ((list, u), A) \\<and>\n    hd (s @ t) = a \\<longrightarrow>\n    a # yt32 \\<le> ta \\<and>\n    yu32 \\<le> u \\<and> s setinterleaves ((a # yt32, yu32), A)", "using th3pre th3pre5"], ["proof (prove)\nusing this:\n  ta = a # list\n  u = aa # lista\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and>\n  tl (s @ t) setinterleaves ((ta, lista), A) \\<and>\n  hd (s @ t) = aa \\<and> 0 < length s \\<longrightarrow>\n  yt31 \\<le> ta \\<and>\n  yu31 \\<le> lista \\<and> tl s setinterleaves ((yt31, yu31), A)\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and>\n  tl (s @ t) setinterleaves ((list, u), A) \\<and>\n  hd (s @ t) = a \\<and> 0 < length s \\<longrightarrow>\n  yt32 \\<le> list \\<and>\n  yu32 \\<le> u \\<and> tl s setinterleaves ((yt32, yu32), A)\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and> s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n  tl (s @ t) setinterleaves ((ta, lista), A) \\<and> hd (s @ t) = aa \\<or>\n  tl (s @ t) setinterleaves ((list, u), A) \\<and> hd (s @ t) = a\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  tl s setinterleaves ((yt32, yu32), A) \\<longrightarrow>\n  a # tl s setinterleaves ((a # yt32, yu32), A)\n\ngoal (1 subgoal):\n 1. aa \\<notin> A \\<and>\n    a \\<notin> A \\<and>\n    s @ t setinterleaves ((ta, u), A) \\<and>\n    0 < length s \\<and>\n    tl (s @ t) setinterleaves ((list, u), A) \\<and>\n    hd (s @ t) = a \\<longrightarrow>\n    a # yt32 \\<le> ta \\<and>\n    yu32 \\<le> u \\<and> s setinterleaves ((a # yt32, yu32), A)", "by (metis hd_append2 le_less length_greater_0_conv less_cons \n        list.exhaust_sel)"], ["proof (state)\nthis:\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and>\n  0 < length s \\<and>\n  tl (s @ t) setinterleaves ((list, u), A) \\<and>\n  hd (s @ t) = a \\<longrightarrow>\n  a # yt32 \\<le> ta \\<and>\n  yu32 \\<le> u \\<and> s setinterleaves ((a # yt32, yu32), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length ta + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>t1 u1.\n                          xb @\n                          xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                          t1 \\<le> x \\<and>\n                          u1 \\<le> xa \\<and>\n                          xb setinterleaves ((t1, u1), A));\n     ta = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n                         t1 \\<le> ta \\<and>\n                         u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "have th3pre7:\"aa\\<notin>A\\<and>a\\<notin> A\\<and>(s @ t) setinterleaves ((ta, u), A)\\<and>length s=0 \\<longrightarrow>\n      []\\<le>ta\\<and> [] \\<le>u\\<and> s setinterleaves (([], []), A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. aa \\<notin> A \\<and>\n    a \\<notin> A \\<and>\n    s @ t setinterleaves ((ta, u), A) \\<and> length s = 0 \\<longrightarrow>\n    [] \\<le> ta \\<and> [] \\<le> u \\<and> s setinterleaves (([], []), A)", "by auto"], ["proof (state)\nthis:\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and> length s = 0 \\<longrightarrow>\n  [] \\<le> ta \\<and> [] \\<le> u \\<and> s setinterleaves (([], []), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length ta + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>t1 u1.\n                          xb @\n                          xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                          t1 \\<le> x \\<and>\n                          u1 \\<le> xa \\<and>\n                          xb setinterleaves ((t1, u1), A));\n     ta = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n                         t1 \\<le> ta \\<and>\n                         u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "have th3: \"aa\\<notin>A\\<and>a\\<notin> A\\<Longrightarrow>\\<exists>t1 u1. (s @ t) setinterleaves ((ta, u), A) \\<longrightarrow> \n      t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. aa \\<notin> A \\<and> a \\<notin> A \\<Longrightarrow>\n    \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "using th3pre th3pre4 th3pre6 th3pre7"], ["proof (prove)\nusing this:\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and> s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n  tl (s @ t) setinterleaves ((ta, lista), A) \\<and> hd (s @ t) = aa \\<or>\n  tl (s @ t) setinterleaves ((list, u), A) \\<and> hd (s @ t) = a\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and>\n  0 < length s \\<and>\n  tl (s @ t) setinterleaves ((ta, lista), A) \\<and>\n  hd (s @ t) = aa \\<longrightarrow>\n  yt31 \\<le> ta \\<and>\n  aa # yu31 \\<le> u \\<and> s setinterleaves ((yt31, aa # yu31), A)\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and>\n  0 < length s \\<and>\n  tl (s @ t) setinterleaves ((list, u), A) \\<and>\n  hd (s @ t) = a \\<longrightarrow>\n  a # yt32 \\<le> ta \\<and>\n  yu32 \\<le> u \\<and> s setinterleaves ((a # yt32, yu32), A)\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  s @ t setinterleaves ((ta, u), A) \\<and> length s = 0 \\<longrightarrow>\n  [] \\<le> ta \\<and> [] \\<le> u \\<and> s setinterleaves (([], []), A)\n\ngoal (1 subgoal):\n 1. aa \\<notin> A \\<and> a \\<notin> A \\<Longrightarrow>\n    \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "by blast"], ["proof (state)\nthis:\n  aa \\<notin> A \\<and> a \\<notin> A \\<Longrightarrow>\n  \\<exists>t1 u1.\n     s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n     t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length ta + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>t1 u1.\n                          xb @\n                          xc setinterleaves ((x, xa), A) \\<longrightarrow>\n                          t1 \\<le> x \\<and>\n                          u1 \\<le> xa \\<and>\n                          xb setinterleaves ((t1, u1), A));\n     ta = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t1 u1.\n                         s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n                         t1 \\<le> ta \\<and>\n                         u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "with a b c th th1 th2"], ["proof (chain)\npicking this:\n  \\<forall>m<length ta + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb xc.\n            \\<exists>t1 u1.\n               xb @ xc setinterleaves ((x, xa), A) \\<longrightarrow>\n               t1 \\<le> x \\<and>\n               u1 \\<le> xa \\<and> xb setinterleaves ((t1, u1), A))\n  ta = a # list\n  u = aa # lista\n  a = aa \\<and> a \\<in> A \\<Longrightarrow>\n  \\<exists>t1 u1.\n     s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n     t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)\n  a \\<notin> A \\<and> aa \\<in> A \\<Longrightarrow>\n  \\<exists>t1 u1.\n     s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n     t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)\n  aa \\<notin> A \\<and> a \\<in> A \\<Longrightarrow>\n  \\<exists>t1 u1.\n     s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n     t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)\n  aa \\<notin> A \\<and> a \\<notin> A \\<Longrightarrow>\n  \\<exists>t1 u1.\n     s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n     t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>m<length ta + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb xc.\n            \\<exists>t1 u1.\n               xb @ xc setinterleaves ((x, xa), A) \\<longrightarrow>\n               t1 \\<le> x \\<and>\n               u1 \\<le> xa \\<and> xb setinterleaves ((t1, u1), A))\n  ta = a # list\n  u = aa # lista\n  a = aa \\<and> a \\<in> A \\<Longrightarrow>\n  \\<exists>t1 u1.\n     s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n     t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)\n  a \\<notin> A \\<and> aa \\<in> A \\<Longrightarrow>\n  \\<exists>t1 u1.\n     s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n     t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)\n  aa \\<notin> A \\<and> a \\<in> A \\<Longrightarrow>\n  \\<exists>t1 u1.\n     s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n     t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)\n  aa \\<notin> A \\<and> a \\<notin> A \\<Longrightarrow>\n  \\<exists>t1 u1.\n     s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n     t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)\n\ngoal (1 subgoal):\n 1. \\<exists>t1 u1.\n       s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n       t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>t1 u1.\n     s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n     t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>t1 u1.\n     s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n     t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>t1 u1.\n     s @ t setinterleaves ((ta, u), A) \\<longrightarrow>\n     t1 \\<le> ta \\<and> u1 \\<le> u \\<and> s setinterleaves ((t1, u1), A)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma syncWithTick_imp_NTF1: \"(s @ [tick]) setinterleaves ((t, u), insert tick (ev ` A)) \\<Longrightarrow>\nt\\<in> T P\\<Longrightarrow>u\\<in> T Q\\<Longrightarrow> \\<exists> t u Xa Y. (t, Xa) \\<in> F P \\<and> ( (u, Y) \\<in> F Q \\<and> s setinterleaves \n((t, u), insert tick (ev ` A)) \\<and> X - {tick} = (Xa \\<union> Y) \\<inter> insert tick (ev ` A) \\<union> Xa \\<inter> Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s @ [tick] setinterleaves ((t, u), insert tick (ev ` A));\n     t \\<in> T P; u \\<in> T Q\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u Xa Y.\n                         (t, Xa) \\<in> F P \\<and>\n                         (u, Y) \\<in> F Q \\<and>\n                         s setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         X - {tick} =\n                         (Xa \\<union> Y) \\<inter>\n                         insert tick (ev ` A) \\<union>\n                         Xa \\<inter> Y", "apply (drule syncWithTick_imp_NTF)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>t \\<in> T P; u \\<in> T Q\\<rbrakk>\n    \\<Longrightarrow> t \\<in> T ?P\n 2. \\<lbrakk>t \\<in> T P; u \\<in> T Q\\<rbrakk>\n    \\<Longrightarrow> u \\<in> T ?Q\n 3. \\<lbrakk>t \\<in> T P; u \\<in> T Q;\n     \\<exists>t1 u1.\n        t = t1 @ [tick] \\<and>\n        u = u1 @ [tick] \\<and>\n        s setinterleaves ((t1, u1), insert tick (ev ` A))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u Xa Y.\n                         (t, Xa) \\<in> F P \\<and>\n                         (u, Y) \\<in> F Q \\<and>\n                         s setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         X - {tick} =\n                         (Xa \\<union> Y) \\<inter>\n                         insert tick (ev ` A) \\<union>\n                         Xa \\<inter> Y", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>t \\<in> T P; u \\<in> T Q\\<rbrakk>\n    \\<Longrightarrow> u \\<in> T ?Q\n 2. \\<lbrakk>t \\<in> T P; u \\<in> T Q;\n     \\<exists>t1 u1.\n        t = t1 @ [tick] \\<and>\n        u = u1 @ [tick] \\<and>\n        s setinterleaves ((t1, u1), insert tick (ev ` A))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u Xa Y.\n                         (t, Xa) \\<in> F P \\<and>\n                         (u, Y) \\<in> F Q \\<and>\n                         s setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         X - {tick} =\n                         (Xa \\<union> Y) \\<inter>\n                         insert tick (ev ` A) \\<union>\n                         Xa \\<inter> Y", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t \\<in> T P; u \\<in> T Q;\n     \\<exists>t1 u1.\n        t = t1 @ [tick] \\<and>\n        u = u1 @ [tick] \\<and>\n        s setinterleaves ((t1, u1), insert tick (ev ` A))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u Xa Y.\n                         (t, Xa) \\<in> F P \\<and>\n                         (u, Y) \\<in> F Q \\<and>\n                         s setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         X - {tick} =\n                         (Xa \\<union> Y) \\<inter>\n                         insert tick (ev ` A) \\<union>\n                         Xa \\<inter> Y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>t \\<in> T P; u \\<in> T Q;\n     \\<exists>t1 u1.\n        t = t1 @ [tick] \\<and>\n        u = u1 @ [tick] \\<and>\n        s setinterleaves ((t1, u1), insert tick (ev ` A))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u Xa Y.\n                         (t, Xa) \\<in> F P \\<and>\n                         (u, Y) \\<in> F Q \\<and>\n                         s setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         X - {tick} =\n                         (Xa \\<union> Y) \\<inter>\n                         insert tick (ev ` A) \\<union>\n                         Xa \\<inter> Y", "assume A: \"t \\<in> T P\"\n  and B: \"u \\<in> T Q\"\n  and C: \"\\<exists>t1 u1. t = t1 @ [tick]\\<and>u = u1@[tick]\\<and>s setinterleaves ((t1, u1), insert tick (ev ` A))\""], ["proof (state)\nthis:\n  t \\<in> T P\n  u \\<in> T Q\n  \\<exists>t1 u1.\n     t = t1 @ [tick] \\<and>\n     u = u1 @ [tick] \\<and>\n     s setinterleaves ((t1, u1), insert tick (ev ` A))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>t \\<in> T P; u \\<in> T Q;\n     \\<exists>t1 u1.\n        t = t1 @ [tick] \\<and>\n        u = u1 @ [tick] \\<and>\n        s setinterleaves ((t1, u1), insert tick (ev ` A))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u Xa Y.\n                         (t, Xa) \\<in> F P \\<and>\n                         (u, Y) \\<in> F Q \\<and>\n                         s setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         X - {tick} =\n                         (Xa \\<union> Y) \\<inter>\n                         insert tick (ev ` A) \\<union>\n                         Xa \\<inter> Y", "from C"], ["proof (chain)\npicking this:\n  \\<exists>t1 u1.\n     t = t1 @ [tick] \\<and>\n     u = u1 @ [tick] \\<and>\n     s setinterleaves ((t1, u1), insert tick (ev ` A))", "obtain t1 u1 where D: \"t = t1 @ [tick] \\<and> u = u1 @ [tick] \\<and> s setinterleaves \n  ((t1, u1), insert tick (ev ` A))\""], ["proof (prove)\nusing this:\n  \\<exists>t1 u1.\n     t = t1 @ [tick] \\<and>\n     u = u1 @ [tick] \\<and>\n     s setinterleaves ((t1, u1), insert tick (ev ` A))\n\ngoal (1 subgoal):\n 1. (\\<And>t1 u1.\n        t = t1 @ [tick] \\<and>\n        u = u1 @ [tick] \\<and>\n        s setinterleaves ((t1, u1), insert tick (ev ` A)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  t = t1 @ [tick] \\<and>\n  u = u1 @ [tick] \\<and> s setinterleaves ((t1, u1), insert tick (ev ` A))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>t \\<in> T P; u \\<in> T Q;\n     \\<exists>t1 u1.\n        t = t1 @ [tick] \\<and>\n        u = u1 @ [tick] \\<and>\n        s setinterleaves ((t1, u1), insert tick (ev ` A))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u Xa Y.\n                         (t, Xa) \\<in> F P \\<and>\n                         (u, Y) \\<in> F Q \\<and>\n                         s setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         X - {tick} =\n                         (Xa \\<union> Y) \\<inter>\n                         insert tick (ev ` A) \\<union>\n                         Xa \\<inter> Y", "from A B D"], ["proof (chain)\npicking this:\n  t \\<in> T P\n  u \\<in> T Q\n  t = t1 @ [tick] \\<and>\n  u = u1 @ [tick] \\<and> s setinterleaves ((t1, u1), insert tick (ev ` A))", "have E: \"(t1, X-{tick}) \\<in> F P\\<and>(u1, X-{tick}) \\<in> F Q\""], ["proof (prove)\nusing this:\n  t \\<in> T P\n  u \\<in> T Q\n  t = t1 @ [tick] \\<and>\n  u = u1 @ [tick] \\<and> s setinterleaves ((t1, u1), insert tick (ev ` A))\n\ngoal (1 subgoal):\n 1. (t1, X - {tick}) \\<in> F P \\<and> (u1, X - {tick}) \\<in> F Q", "by (simp add: T_F process_charn)"], ["proof (state)\nthis:\n  (t1, X - {tick}) \\<in> F P \\<and> (u1, X - {tick}) \\<in> F Q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>t \\<in> T P; u \\<in> T Q;\n     \\<exists>t1 u1.\n        t = t1 @ [tick] \\<and>\n        u = u1 @ [tick] \\<and>\n        s setinterleaves ((t1, u1), insert tick (ev ` A))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u Xa Y.\n                         (t, Xa) \\<in> F P \\<and>\n                         (u, Y) \\<in> F Q \\<and>\n                         s setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         X - {tick} =\n                         (Xa \\<union> Y) \\<inter>\n                         insert tick (ev ` A) \\<union>\n                         Xa \\<inter> Y", "thus  \" \\<exists>t u Xa Y. (t, Xa) \\<in> F P \\<and> (u, Y) \\<in> F Q \\<and> s setinterleaves ((t, u), insert tick (ev ` A)) \n          \\<and> X - {tick} = (Xa \\<union> Y) \\<inter> insert tick (ev ` A) \\<union> Xa \\<inter> Y\""], ["proof (prove)\nusing this:\n  (t1, X - {tick}) \\<in> F P \\<and> (u1, X - {tick}) \\<in> F Q\n\ngoal (1 subgoal):\n 1. \\<exists>t u Xa Y.\n       (t, Xa) \\<in> F P \\<and>\n       (u, Y) \\<in> F Q \\<and>\n       s setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n       X - {tick} =\n       (Xa \\<union> Y) \\<inter> insert tick (ev ` A) \\<union> Xa \\<inter> Y", "using A B C D E"], ["proof (prove)\nusing this:\n  (t1, X - {tick}) \\<in> F P \\<and> (u1, X - {tick}) \\<in> F Q\n  t \\<in> T P\n  u \\<in> T Q\n  \\<exists>t1 u1.\n     t = t1 @ [tick] \\<and>\n     u = u1 @ [tick] \\<and>\n     s setinterleaves ((t1, u1), insert tick (ev ` A))\n  t = t1 @ [tick] \\<and>\n  u = u1 @ [tick] \\<and> s setinterleaves ((t1, u1), insert tick (ev ` A))\n  (t1, X - {tick}) \\<in> F P \\<and> (u1, X - {tick}) \\<in> F Q\n\ngoal (1 subgoal):\n 1. \\<exists>t u Xa Y.\n       (t, Xa) \\<in> F P \\<and>\n       (u, Y) \\<in> F Q \\<and>\n       s setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n       X - {tick} =\n       (Xa \\<union> Y) \\<inter> insert tick (ev ` A) \\<union> Xa \\<inter> Y", "by blast"], ["proof (state)\nthis:\n  \\<exists>t u Xa Y.\n     (t, Xa) \\<in> F P \\<and>\n     (u, Y) \\<in> F Q \\<and>\n     s setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n     X - {tick} =\n     (Xa \\<union> Y) \\<inter> insert tick (ev ` A) \\<union> Xa \\<inter> Y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ftf_syn: \"front_tickFree u\\<Longrightarrow>front_tickFree t\\<Longrightarrow>s setinterleaves ((t, u),insert tick (ev ` A))\n      \\<Longrightarrow>front_tickFree s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>front_tickFree u; front_tickFree t;\n     s setinterleaves ((t, u), insert tick (ev ` A))\\<rbrakk>\n    \\<Longrightarrow> front_tickFree s", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>front_tickFree u; front_tickFree t;\n     s setinterleaves ((t, u), insert tick (ev ` A))\\<rbrakk>\n    \\<Longrightarrow> front_tickFree s", "assume A: \"front_tickFree u\""], ["proof (state)\nthis:\n  front_tickFree u\n\ngoal (1 subgoal):\n 1. \\<lbrakk>front_tickFree u; front_tickFree t;\n     s setinterleaves ((t, u), insert tick (ev ` A))\\<rbrakk>\n    \\<Longrightarrow> front_tickFree s", "assume B: \"front_tickFree t\""], ["proof (state)\nthis:\n  front_tickFree t\n\ngoal (1 subgoal):\n 1. \\<lbrakk>front_tickFree u; front_tickFree t;\n     s setinterleaves ((t, u), insert tick (ev ` A))\\<rbrakk>\n    \\<Longrightarrow> front_tickFree s", "assume C: \"s setinterleaves ((t, u), insert tick (ev ` A))\""], ["proof (state)\nthis:\n  s setinterleaves ((t, u), insert tick (ev ` A))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>front_tickFree u; front_tickFree t;\n     s setinterleaves ((t, u), insert tick (ev ` A))\\<rbrakk>\n    \\<Longrightarrow> front_tickFree s", "thus \"front_tickFree s\""], ["proof (prove)\nusing this:\n  s setinterleaves ((t, u), insert tick (ev ` A))\n\ngoal (1 subgoal):\n 1. front_tickFree s", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. s setinterleaves ((t, u), insert tick (ev ` A)) \\<Longrightarrow>\n    front_tickFree s", "from A"], ["proof (chain)\npicking this:\n  front_tickFree u", "obtain u1 where A1: \"\\<forall> u2. u1\\<le>u\\<and>tickFree u1\\<and>  (u2\\<le>u\\<and>tickFree u2\\<longrightarrow>u2\\<le>u1)\""], ["proof (prove)\nusing this:\n  front_tickFree u\n\ngoal (1 subgoal):\n 1. (\\<And>u1.\n        \\<forall>u2.\n           u1 \\<le> u \\<and>\n           tickFree u1 \\<and>\n           (u2 \\<le> u \\<and> tickFree u2 \\<longrightarrow>\n            u2 \\<le> u1) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis append.right_neutral append_eq_first_pref_spec front_tickFree_charn le_list_def \n         tickFree_Nil)"], ["proof (state)\nthis:\n  \\<forall>u2.\n     u1 \\<le> u \\<and>\n     tickFree u1 \\<and>\n     (u2 \\<le> u \\<and> tickFree u2 \\<longrightarrow> u2 \\<le> u1)\n\ngoal (1 subgoal):\n 1. s setinterleaves ((t, u), insert tick (ev ` A)) \\<Longrightarrow>\n    front_tickFree s", "from A A1"], ["proof (chain)\npicking this:\n  front_tickFree u\n  \\<forall>u2.\n     u1 \\<le> u \\<and>\n     tickFree u1 \\<and>\n     (u2 \\<le> u \\<and> tickFree u2 \\<longrightarrow> u2 \\<le> u1)", "have AA1: \"u1=u\\<or>u=u1@[tick]\""], ["proof (prove)\nusing this:\n  front_tickFree u\n  \\<forall>u2.\n     u1 \\<le> u \\<and>\n     tickFree u1 \\<and>\n     (u2 \\<le> u \\<and> tickFree u2 \\<longrightarrow> u2 \\<le> u1)\n\ngoal (1 subgoal):\n 1. u1 = u \\<or> u = u1 @ [tick]", "by (metis(no_types, lifting) antisym append_Nil2 append_eq_first_pref_spec append_is_Nil_conv \n      front_tickFree_charn le_list_def less_list_def less_self nonTickFree_n_frontTickFree)"], ["proof (state)\nthis:\n  u1 = u \\<or> u = u1 @ [tick]\n\ngoal (1 subgoal):\n 1. s setinterleaves ((t, u), insert tick (ev ` A)) \\<Longrightarrow>\n    front_tickFree s", "from B"], ["proof (chain)\npicking this:\n  front_tickFree t", "obtain t1 where B1: \"\\<forall> t2. t1\\<le>t\\<and>tickFree t1\\<and>  (t2\\<le>t\\<and>tickFree t2\\<longrightarrow>t2\\<le>t1)\""], ["proof (prove)\nusing this:\n  front_tickFree t\n\ngoal (1 subgoal):\n 1. (\\<And>t1.\n        \\<forall>t2.\n           t1 \\<le> t \\<and>\n           tickFree t1 \\<and>\n           (t2 \\<le> t \\<and> tickFree t2 \\<longrightarrow>\n            t2 \\<le> t1) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis append.right_neutral append_eq_first_pref_spec front_tickFree_charn le_list_def \n      tickFree_Nil)"], ["proof (state)\nthis:\n  \\<forall>t2.\n     t1 \\<le> t \\<and>\n     tickFree t1 \\<and>\n     (t2 \\<le> t \\<and> tickFree t2 \\<longrightarrow> t2 \\<le> t1)\n\ngoal (1 subgoal):\n 1. s setinterleaves ((t, u), insert tick (ev ` A)) \\<Longrightarrow>\n    front_tickFree s", "from B B1"], ["proof (chain)\npicking this:\n  front_tickFree t\n  \\<forall>t2.\n     t1 \\<le> t \\<and>\n     tickFree t1 \\<and>\n     (t2 \\<le> t \\<and> tickFree t2 \\<longrightarrow> t2 \\<le> t1)", "have BB1: \"t1=t\\<or>t=t1@[tick]\""], ["proof (prove)\nusing this:\n  front_tickFree t\n  \\<forall>t2.\n     t1 \\<le> t \\<and>\n     tickFree t1 \\<and>\n     (t2 \\<le> t \\<and> tickFree t2 \\<longrightarrow> t2 \\<le> t1)\n\ngoal (1 subgoal):\n 1. t1 = t \\<or> t = t1 @ [tick]", "by (metis(no_types, lifting) antisym append_Nil2 append_eq_first_pref_spec append_is_Nil_conv \n      front_tickFree_charn le_list_def less_list_def less_self nonTickFree_n_frontTickFree)"], ["proof (state)\nthis:\n  t1 = t \\<or> t = t1 @ [tick]\n\ngoal (1 subgoal):\n 1. s setinterleaves ((t, u), insert tick (ev ` A)) \\<Longrightarrow>\n    front_tickFree s", "from A1 B1"], ["proof (chain)\npicking this:\n  \\<forall>u2.\n     u1 \\<le> u \\<and>\n     tickFree u1 \\<and>\n     (u2 \\<le> u \\<and> tickFree u2 \\<longrightarrow> u2 \\<le> u1)\n  \\<forall>t2.\n     t1 \\<le> t \\<and>\n     tickFree t1 \\<and>\n     (t2 \\<le> t \\<and> tickFree t2 \\<longrightarrow> t2 \\<le> t1)", "have C1: \"\\<forall>s1. s1 setinterleaves ((t1, u1), insert tick (ev ` A))\\<longrightarrow>tickFree s1\""], ["proof (prove)\nusing this:\n  \\<forall>u2.\n     u1 \\<le> u \\<and>\n     tickFree u1 \\<and>\n     (u2 \\<le> u \\<and> tickFree u2 \\<longrightarrow> u2 \\<le> u1)\n  \\<forall>t2.\n     t1 \\<le> t \\<and>\n     tickFree t1 \\<and>\n     (t2 \\<le> t \\<and> tickFree t2 \\<longrightarrow> t2 \\<le> t1)\n\ngoal (1 subgoal):\n 1. \\<forall>s1.\n       s1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<longrightarrow>\n       tickFree s1", "by (meson ftf_syn1 tickFree_def)"], ["proof (state)\nthis:\n  \\<forall>s1.\n     s1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<longrightarrow>\n     tickFree s1\n\ngoal (1 subgoal):\n 1. s setinterleaves ((t, u), insert tick (ev ` A)) \\<Longrightarrow>\n    front_tickFree s", "from AA1 BB1"], ["proof (chain)\npicking this:\n  u1 = u \\<or> u = u1 @ [tick]\n  t1 = t \\<or> t = t1 @ [tick]", "have CC1: \"u1=u\\<and>t1=t\\<longrightarrow>tickFree s\""], ["proof (prove)\nusing this:\n  u1 = u \\<or> u = u1 @ [tick]\n  t1 = t \\<or> t = t1 @ [tick]\n\ngoal (1 subgoal):\n 1. u1 = u \\<and> t1 = t \\<longrightarrow> tickFree s", "by (simp add: C C1)"], ["proof (state)\nthis:\n  u1 = u \\<and> t1 = t \\<longrightarrow> tickFree s\n\ngoal (1 subgoal):\n 1. s setinterleaves ((t, u), insert tick (ev ` A)) \\<Longrightarrow>\n    front_tickFree s", "from AA1 BB1"], ["proof (chain)\npicking this:\n  u1 = u \\<or> u = u1 @ [tick]\n  t1 = t \\<or> t = t1 @ [tick]", "have CC2: \"u1=u\\<and>t=t1@[tick]\\<longrightarrow>tickFree s\""], ["proof (prove)\nusing this:\n  u1 = u \\<or> u = u1 @ [tick]\n  t1 = t \\<or> t = t1 @ [tick]\n\ngoal (1 subgoal):\n 1. u1 = u \\<and> t = t1 @ [tick] \\<longrightarrow> tickFree s", "using ftf_syn21"], ["proof (prove)\nusing this:\n  u1 = u \\<or> u = u1 @ [tick]\n  t1 = t \\<or> t = t1 @ [tick]\n  (?a \\<in> set ?u \\<and> ?a \\<notin> set ?t \\<or>\n   ?a \\<in> set ?t \\<and> ?a \\<notin> set ?u) \\<and>\n  ?a \\<in> ?A \\<longrightarrow>\n  setinterleaving (?u, ?A, ?t) = {}\n\ngoal (1 subgoal):\n 1. u1 = u \\<and> t = t1 @ [tick] \\<longrightarrow> tickFree s", "by (metis A1 C equals0D insertI1 non_tickFree_tick tickFree_append tickFree_def)"], ["proof (state)\nthis:\n  u1 = u \\<and> t = t1 @ [tick] \\<longrightarrow> tickFree s\n\ngoal (1 subgoal):\n 1. s setinterleaves ((t, u), insert tick (ev ` A)) \\<Longrightarrow>\n    front_tickFree s", "from AA1 BB1"], ["proof (chain)\npicking this:\n  u1 = u \\<or> u = u1 @ [tick]\n  t1 = t \\<or> t = t1 @ [tick]", "have CC3: \"u=u1@[tick]\\<and>t1=t\\<longrightarrow>tickFree s\""], ["proof (prove)\nusing this:\n  u1 = u \\<or> u = u1 @ [tick]\n  t1 = t \\<or> t = t1 @ [tick]\n\ngoal (1 subgoal):\n 1. u = u1 @ [tick] \\<and> t1 = t \\<longrightarrow> tickFree s", "using ftf_syn21"], ["proof (prove)\nusing this:\n  u1 = u \\<or> u = u1 @ [tick]\n  t1 = t \\<or> t = t1 @ [tick]\n  (?a \\<in> set ?u \\<and> ?a \\<notin> set ?t \\<or>\n   ?a \\<in> set ?t \\<and> ?a \\<notin> set ?u) \\<and>\n  ?a \\<in> ?A \\<longrightarrow>\n  setinterleaving (?u, ?A, ?t) = {}\n\ngoal (1 subgoal):\n 1. u = u1 @ [tick] \\<and> t1 = t \\<longrightarrow> tickFree s", "by (metis B1 C insertI1 insert_not_empty mk_disjoint_insert non_tickFree_tick tickFree_append \n      tickFree_def)"], ["proof (state)\nthis:\n  u = u1 @ [tick] \\<and> t1 = t \\<longrightarrow> tickFree s\n\ngoal (1 subgoal):\n 1. s setinterleaves ((t, u), insert tick (ev ` A)) \\<Longrightarrow>\n    front_tickFree s", "from AA1 BB1"], ["proof (chain)\npicking this:\n  u1 = u \\<or> u = u1 @ [tick]\n  t1 = t \\<or> t = t1 @ [tick]", "have CC4: \"u=u1@[tick]\\<and>t=t1@[tick]\\<Longrightarrow>\n    \\<exists>s1. s1 setinterleaves ((t1, u1), insert tick (ev ` A))\\<and>(s=s1@[tick])\""], ["proof (prove)\nusing this:\n  u1 = u \\<or> u = u1 @ [tick]\n  t1 = t \\<or> t = t1 @ [tick]\n\ngoal (1 subgoal):\n 1. u = u1 @ [tick] \\<and> t = t1 @ [tick] \\<Longrightarrow>\n    \\<exists>s1.\n       s1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n       s = s1 @ [tick]", "using C ftf_syn32"], ["proof (prove)\nusing this:\n  u1 = u \\<or> u = u1 @ [tick]\n  t1 = t \\<or> t = t1 @ [tick]\n  s setinterleaves ((t, u), insert tick (ev ` A))\n  ?u = ?u1.0 @ [tick] \\<and>\n  ?t = ?t1.0 @ [tick] \\<and>\n  ?s setinterleaves ((?t, ?u), insert tick (ev ` ?A)) \\<Longrightarrow>\n  \\<exists>s1.\n     s1 setinterleaves ((?t1.0, ?u1.0), insert tick (ev ` ?A)) \\<and>\n     ?s = s1 @ [tick]\n\ngoal (1 subgoal):\n 1. u = u1 @ [tick] \\<and> t = t1 @ [tick] \\<Longrightarrow>\n    \\<exists>s1.\n       s1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n       s = s1 @ [tick]", "by blast"], ["proof (state)\nthis:\n  u = u1 @ [tick] \\<and> t = t1 @ [tick] \\<Longrightarrow>\n  \\<exists>s1.\n     s1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n     s = s1 @ [tick]\n\ngoal (1 subgoal):\n 1. s setinterleaves ((t, u), insert tick (ev ` A)) \\<Longrightarrow>\n    front_tickFree s", "from C1 CC4"], ["proof (chain)\npicking this:\n  \\<forall>s1.\n     s1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<longrightarrow>\n     tickFree s1\n  u = u1 @ [tick] \\<and> t = t1 @ [tick] \\<Longrightarrow>\n  \\<exists>s1.\n     s1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n     s = s1 @ [tick]", "have CC5: \"front_tickFree s\""], ["proof (prove)\nusing this:\n  \\<forall>s1.\n     s1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<longrightarrow>\n     tickFree s1\n  u = u1 @ [tick] \\<and> t = t1 @ [tick] \\<Longrightarrow>\n  \\<exists>s1.\n     s1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n     s = s1 @ [tick]\n\ngoal (1 subgoal):\n 1. front_tickFree s", "using AA1 BB1 CC1 CC2 CC3 tickFree_implies_front_tickFree \n      tickFree_implies_front_tickFree_single"], ["proof (prove)\nusing this:\n  \\<forall>s1.\n     s1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<longrightarrow>\n     tickFree s1\n  u = u1 @ [tick] \\<and> t = t1 @ [tick] \\<Longrightarrow>\n  \\<exists>s1.\n     s1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n     s = s1 @ [tick]\n  u1 = u \\<or> u = u1 @ [tick]\n  t1 = t \\<or> t = t1 @ [tick]\n  u1 = u \\<and> t1 = t \\<longrightarrow> tickFree s\n  u1 = u \\<and> t = t1 @ [tick] \\<longrightarrow> tickFree s\n  u = u1 @ [tick] \\<and> t1 = t \\<longrightarrow> tickFree s\n  tickFree ?s \\<Longrightarrow> front_tickFree ?s\n  tickFree ?t \\<Longrightarrow> front_tickFree (?t @ [?a])\n\ngoal (1 subgoal):\n 1. front_tickFree s", "by auto"], ["proof (state)\nthis:\n  front_tickFree s\n\ngoal (1 subgoal):\n 1. s setinterleaves ((t, u), insert tick (ev ` A)) \\<Longrightarrow>\n    front_tickFree s", "with A1 B1 C1 AA1 BB1"], ["proof (chain)\npicking this:\n  \\<forall>u2.\n     u1 \\<le> u \\<and>\n     tickFree u1 \\<and>\n     (u2 \\<le> u \\<and> tickFree u2 \\<longrightarrow> u2 \\<le> u1)\n  \\<forall>t2.\n     t1 \\<le> t \\<and>\n     tickFree t1 \\<and>\n     (t2 \\<le> t \\<and> tickFree t2 \\<longrightarrow> t2 \\<le> t1)\n  \\<forall>s1.\n     s1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<longrightarrow>\n     tickFree s1\n  u1 = u \\<or> u = u1 @ [tick]\n  t1 = t \\<or> t = t1 @ [tick]\n  front_tickFree s", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>u2.\n     u1 \\<le> u \\<and>\n     tickFree u1 \\<and>\n     (u2 \\<le> u \\<and> tickFree u2 \\<longrightarrow> u2 \\<le> u1)\n  \\<forall>t2.\n     t1 \\<le> t \\<and>\n     tickFree t1 \\<and>\n     (t2 \\<le> t \\<and> tickFree t2 \\<longrightarrow> t2 \\<le> t1)\n  \\<forall>s1.\n     s1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<longrightarrow>\n     tickFree s1\n  u1 = u \\<or> u = u1 @ [tick]\n  t1 = t \\<or> t = t1 @ [tick]\n  front_tickFree s\n\ngoal (1 subgoal):\n 1. front_tickFree s", "using CC1 CC2 CC3 tickFree_implies_front_tickFree"], ["proof (prove)\nusing this:\n  \\<forall>u2.\n     u1 \\<le> u \\<and>\n     tickFree u1 \\<and>\n     (u2 \\<le> u \\<and> tickFree u2 \\<longrightarrow> u2 \\<le> u1)\n  \\<forall>t2.\n     t1 \\<le> t \\<and>\n     tickFree t1 \\<and>\n     (t2 \\<le> t \\<and> tickFree t2 \\<longrightarrow> t2 \\<le> t1)\n  \\<forall>s1.\n     s1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<longrightarrow>\n     tickFree s1\n  u1 = u \\<or> u = u1 @ [tick]\n  t1 = t \\<or> t = t1 @ [tick]\n  front_tickFree s\n  u1 = u \\<and> t1 = t \\<longrightarrow> tickFree s\n  u1 = u \\<and> t = t1 @ [tick] \\<longrightarrow> tickFree s\n  u = u1 @ [tick] \\<and> t1 = t \\<longrightarrow> tickFree s\n  tickFree ?s \\<Longrightarrow> front_tickFree ?s\n\ngoal (1 subgoal):\n 1. front_tickFree s", "by auto"], ["proof (state)\nthis:\n  front_tickFree s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  front_tickFree s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma is_processT5_SYNC2: \"\\<And> sa Y t u Xa Ya.  (t,Xa) \\<in> F P \\<and> (u,Ya) \\<in> F Q \\<and>  \n(sa setinterleaves ((t,u),insert tick (ev ` A))) \\<Longrightarrow>\\<forall>c. c \\<in> Y \\<longrightarrow>(\\<forall> t1 u1. (sa@[c]) setinterleaves \n((t1,u1),insert tick (ev ` A))\\<longrightarrow>(((t1,{})\\<in>F P\\<longrightarrow>(u1, {})\\<notin>F Q)\\<and>((t1,{})\\<in>F Q\\<longrightarrow>(u1, {})\\<notin>F P))) \\<Longrightarrow>\n\\<exists>t2 u2 Xb. (t2, Xb) \\<in> F P \\<and> (\\<exists>Yb.(u2, Yb) \\<in> F Q \\<and>sa setinterleaves ((t2, u2), insert tick (ev ` A)) \n\\<and>(Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union> Xa \\<inter> Ya \\<union> Y = (Xb \\<union> Yb) \\<inter> insert tick (ev ` A) \\<union> Xb \\<inter> Yb)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>sa Y t u Xa Ya.\n       \\<lbrakk>(t, Xa) \\<in> F P \\<and>\n                (u, Ya) \\<in> F Q \\<and>\n                sa setinterleaves ((t, u), insert tick (ev ` A));\n        \\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (\\<forall>t1 u1.\n               sa @\n               [c] setinterleaves ((t1, u1), insert tick\n        (ev ` A)) \\<longrightarrow>\n               ((t1, {}) \\<in> F P \\<longrightarrow>\n                (u1, {}) \\<notin> F Q) \\<and>\n               ((t1, {}) \\<in> F Q \\<longrightarrow>\n                (u1, {}) \\<notin> F P))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t2 u2 Xb.\n                            (t2, Xb) \\<in> F P \\<and>\n                            (\\<exists>Yb.\n                                (u2, Yb) \\<in> F Q \\<and>\n                                sa setinterleaves ((t2, u2), insert tick\n                        (ev ` A)) \\<and>\n                                (Xa \\<union> Ya) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Ya \\<union>\n                                Y =\n                                (Xb \\<union> Yb) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xb \\<inter> Yb)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>sa Y t u Xa Ya.\n       \\<lbrakk>(t, Xa) \\<in> F P \\<and>\n                (u, Ya) \\<in> F Q \\<and>\n                sa setinterleaves ((t, u), insert tick (ev ` A));\n        \\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (\\<forall>t1 u1.\n               sa @\n               [c] setinterleaves ((t1, u1), insert tick\n        (ev ` A)) \\<longrightarrow>\n               ((t1, {}) \\<in> F P \\<longrightarrow>\n                (u1, {}) \\<notin> F Q) \\<and>\n               ((t1, {}) \\<in> F Q \\<longrightarrow>\n                (u1, {}) \\<notin> F P))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t2 u2 Xb.\n                            (t2, Xb) \\<in> F P \\<and>\n                            (\\<exists>Yb.\n                                (u2, Yb) \\<in> F Q \\<and>\n                                sa setinterleaves ((t2, u2), insert tick\n                        (ev ` A)) \\<and>\n                                (Xa \\<union> Ya) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Ya \\<union>\n                                Y =\n                                (Xb \\<union> Yb) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xb \\<inter> Yb)", "fix sa Y t u Xa Ya"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>sa Y t u Xa Ya.\n       \\<lbrakk>(t, Xa) \\<in> F P \\<and>\n                (u, Ya) \\<in> F Q \\<and>\n                sa setinterleaves ((t, u), insert tick (ev ` A));\n        \\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (\\<forall>t1 u1.\n               sa @\n               [c] setinterleaves ((t1, u1), insert tick\n        (ev ` A)) \\<longrightarrow>\n               ((t1, {}) \\<in> F P \\<longrightarrow>\n                (u1, {}) \\<notin> F Q) \\<and>\n               ((t1, {}) \\<in> F Q \\<longrightarrow>\n                (u1, {}) \\<notin> F P))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t2 u2 Xb.\n                            (t2, Xb) \\<in> F P \\<and>\n                            (\\<exists>Yb.\n                                (u2, Yb) \\<in> F Q \\<and>\n                                sa setinterleaves ((t2, u2), insert tick\n                        (ev ` A)) \\<and>\n                                (Xa \\<union> Ya) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Ya \\<union>\n                                Y =\n                                (Xb \\<union> Yb) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xb \\<inter> Yb)", "assume A: \"(t,Xa) \\<in> F P \\<and> (u,Ya) \\<in> F Q \\<and>(sa setinterleaves ((t,u),insert tick (ev ` A)))\" \n  and B: \" \\<forall>c. c \\<in> Y \\<longrightarrow>(\\<forall> t1 u1. (sa@[c]) setinterleaves ((t1,u1),insert tick (ev ` A))\\<longrightarrow>\n  (((t1,{})\\<in>F P\\<longrightarrow>(u1, {})\\<notin>F Q)\\<and>((t1,{})\\<in>F Q\\<longrightarrow>(u1, {})\\<notin>F P)))\""], ["proof (state)\nthis:\n  (t, Xa) \\<in> F P \\<and>\n  (u, Ya) \\<in> F Q \\<and> sa setinterleaves ((t, u), insert tick (ev ` A))\n  \\<forall>c.\n     c \\<in> Y \\<longrightarrow>\n     (\\<forall>t1 u1.\n         sa @\n         [c] setinterleaves ((t1, u1), insert tick\n  (ev ` A)) \\<longrightarrow>\n         ((t1, {}) \\<in> F P \\<longrightarrow> (u1, {}) \\<notin> F Q) \\<and>\n         ((t1, {}) \\<in> F Q \\<longrightarrow> (u1, {}) \\<notin> F P))\n\ngoal (1 subgoal):\n 1. \\<And>sa Y t u Xa Ya.\n       \\<lbrakk>(t, Xa) \\<in> F P \\<and>\n                (u, Ya) \\<in> F Q \\<and>\n                sa setinterleaves ((t, u), insert tick (ev ` A));\n        \\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (\\<forall>t1 u1.\n               sa @\n               [c] setinterleaves ((t1, u1), insert tick\n        (ev ` A)) \\<longrightarrow>\n               ((t1, {}) \\<in> F P \\<longrightarrow>\n                (u1, {}) \\<notin> F Q) \\<and>\n               ((t1, {}) \\<in> F Q \\<longrightarrow>\n                (u1, {}) \\<notin> F P))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t2 u2 Xb.\n                            (t2, Xb) \\<in> F P \\<and>\n                            (\\<exists>Yb.\n                                (u2, Yb) \\<in> F Q \\<and>\n                                sa setinterleaves ((t2, u2), insert tick\n                        (ev ` A)) \\<and>\n                                (Xa \\<union> Ya) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Ya \\<union>\n                                Y =\n                                (Xb \\<union> Yb) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xb \\<inter> Yb)", "thus \"\\<exists>t2 u2 Xb. (t2, Xb) \\<in> F P \\<and> (\\<exists>Yb. (u2, Yb) \\<in> F Q \\<and> sa setinterleaves \n  ((t2, u2), insert tick (ev ` A)) \\<and>(Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union> Xa \\<inter> Ya \\<union> Y = (Xb \\<union> Yb) \\<inter> \n  insert tick (ev ` A) \\<union> Xb \\<inter> Yb)\""], ["proof (prove)\nusing this:\n  (t, Xa) \\<in> F P \\<and>\n  (u, Ya) \\<in> F Q \\<and> sa setinterleaves ((t, u), insert tick (ev ` A))\n  \\<forall>c.\n     c \\<in> Y \\<longrightarrow>\n     (\\<forall>t1 u1.\n         sa @\n         [c] setinterleaves ((t1, u1), insert tick\n  (ev ` A)) \\<longrightarrow>\n         ((t1, {}) \\<in> F P \\<longrightarrow> (u1, {}) \\<notin> F Q) \\<and>\n         ((t1, {}) \\<in> F Q \\<longrightarrow> (u1, {}) \\<notin> F P))\n\ngoal (1 subgoal):\n 1. \\<exists>t2 u2 Xb.\n       (t2, Xb) \\<in> F P \\<and>\n       (\\<exists>Yb.\n           (u2, Yb) \\<in> F Q \\<and>\n           sa setinterleaves ((t2, u2), insert tick (ev ` A)) \\<and>\n           (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n           Xa \\<inter> Ya \\<union>\n           Y =\n           (Xb \\<union> Yb) \\<inter> insert tick (ev ` A) \\<union>\n           Xb \\<inter> Yb)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>(t, Xa) \\<in> F P \\<and>\n             (u, Ya) \\<in> F Q \\<and>\n             sa setinterleaves ((t, u), insert tick (ev ` A));\n     \\<forall>c.\n        c \\<in> Y \\<longrightarrow>\n        (\\<forall>t1 u1.\n            sa @\n            [c] setinterleaves ((t1, u1), insert tick\n     (ev ` A)) \\<longrightarrow>\n            ((t1, {}) \\<in> F P \\<longrightarrow>\n             (u1, {}) \\<notin> F Q) \\<and>\n            ((t1, {}) \\<in> F Q \\<longrightarrow>\n             (u1, {}) \\<notin> F P))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t2 u2 Xb.\n                         (t2, Xb) \\<in> F P \\<and>\n                         (\\<exists>Yb.\n                             (u2, Yb) \\<in> F Q \\<and>\n                             sa setinterleaves ((t2, u2), insert tick\n                     (ev ` A)) \\<and>\n                             (Xa \\<union> Ya) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xa \\<inter> Ya \\<union>\n                             Y =\n                             (Xb \\<union> Yb) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xb \\<inter> Yb)", "from A B"], ["proof (chain)\npicking this:\n  (t, Xa) \\<in> F P \\<and>\n  (u, Ya) \\<in> F Q \\<and> sa setinterleaves ((t, u), insert tick (ev ` A))\n  \\<forall>c.\n     c \\<in> Y \\<longrightarrow>\n     (\\<forall>t1 u1.\n         sa @\n         [c] setinterleaves ((t1, u1), insert tick\n  (ev ` A)) \\<longrightarrow>\n         ((t1, {}) \\<in> F P \\<longrightarrow> (u1, {}) \\<notin> F Q) \\<and>\n         ((t1, {}) \\<in> F Q \\<longrightarrow> (u1, {}) \\<notin> F P))", "obtain Y1 Y2 where A1: \"(Y1=(Y\\<inter>insert tick (ev ` A)))\\<and>(Y2=(Y - insert tick (ev ` A)))\""], ["proof (prove)\nusing this:\n  (t, Xa) \\<in> F P \\<and>\n  (u, Ya) \\<in> F Q \\<and> sa setinterleaves ((t, u), insert tick (ev ` A))\n  \\<forall>c.\n     c \\<in> Y \\<longrightarrow>\n     (\\<forall>t1 u1.\n         sa @\n         [c] setinterleaves ((t1, u1), insert tick\n  (ev ` A)) \\<longrightarrow>\n         ((t1, {}) \\<in> F P \\<longrightarrow> (u1, {}) \\<notin> F Q) \\<and>\n         ((t1, {}) \\<in> F Q \\<longrightarrow> (u1, {}) \\<notin> F P))\n\ngoal (1 subgoal):\n 1. (\\<And>Y1 Y2.\n        Y1 = Y \\<inter> insert tick (ev ` A) \\<and>\n        Y2 = Y - insert tick (ev ` A) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Y1 = Y \\<inter> insert tick (ev ` A) \\<and> Y2 = Y - insert tick (ev ` A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(t, Xa) \\<in> F P \\<and>\n             (u, Ya) \\<in> F Q \\<and>\n             sa setinterleaves ((t, u), insert tick (ev ` A));\n     \\<forall>c.\n        c \\<in> Y \\<longrightarrow>\n        (\\<forall>t1 u1.\n            sa @\n            [c] setinterleaves ((t1, u1), insert tick\n     (ev ` A)) \\<longrightarrow>\n            ((t1, {}) \\<in> F P \\<longrightarrow>\n             (u1, {}) \\<notin> F Q) \\<and>\n            ((t1, {}) \\<in> F Q \\<longrightarrow>\n             (u1, {}) \\<notin> F P))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t2 u2 Xb.\n                         (t2, Xb) \\<in> F P \\<and>\n                         (\\<exists>Yb.\n                             (u2, Yb) \\<in> F Q \\<and>\n                             sa setinterleaves ((t2, u2), insert tick\n                     (ev ` A)) \\<and>\n                             (Xa \\<union> Ya) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xa \\<inter> Ya \\<union>\n                             Y =\n                             (Xb \\<union> Yb) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xb \\<inter> Yb)", "from A1"], ["proof (chain)\npicking this:\n  Y1 = Y \\<inter> insert tick (ev ` A) \\<and> Y2 = Y - insert tick (ev ` A)", "have AA1: \"Y1 \\<union> Y2 = Y\""], ["proof (prove)\nusing this:\n  Y1 = Y \\<inter> insert tick (ev ` A) \\<and> Y2 = Y - insert tick (ev ` A)\n\ngoal (1 subgoal):\n 1. Y1 \\<union> Y2 = Y", "by blast"], ["proof (state)\nthis:\n  Y1 \\<union> Y2 = Y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(t, Xa) \\<in> F P \\<and>\n             (u, Ya) \\<in> F Q \\<and>\n             sa setinterleaves ((t, u), insert tick (ev ` A));\n     \\<forall>c.\n        c \\<in> Y \\<longrightarrow>\n        (\\<forall>t1 u1.\n            sa @\n            [c] setinterleaves ((t1, u1), insert tick\n     (ev ` A)) \\<longrightarrow>\n            ((t1, {}) \\<in> F P \\<longrightarrow>\n             (u1, {}) \\<notin> F Q) \\<and>\n            ((t1, {}) \\<in> F Q \\<longrightarrow>\n             (u1, {}) \\<notin> F P))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t2 u2 Xb.\n                         (t2, Xb) \\<in> F P \\<and>\n                         (\\<exists>Yb.\n                             (u2, Yb) \\<in> F Q \\<and>\n                             sa setinterleaves ((t2, u2), insert tick\n                     (ev ` A)) \\<and>\n                             (Xa \\<union> Ya) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xa \\<inter> Ya \\<union>\n                             Y =\n                             (Xb \\<union> Yb) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xb \\<inter> Yb)", "from A1"], ["proof (chain)\npicking this:\n  Y1 = Y \\<inter> insert tick (ev ` A) \\<and> Y2 = Y - insert tick (ev ` A)", "have newAA: \"\\<forall>y\\<in>Y1. y\\<in> insert tick (ev ` A)\""], ["proof (prove)\nusing this:\n  Y1 = Y \\<inter> insert tick (ev ` A) \\<and> Y2 = Y - insert tick (ev ` A)\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>Y1. y \\<in> insert tick (ev ` A)", "by blast"], ["proof (state)\nthis:\n  \\<forall>y\\<in>Y1. y \\<in> insert tick (ev ` A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(t, Xa) \\<in> F P \\<and>\n             (u, Ya) \\<in> F Q \\<and>\n             sa setinterleaves ((t, u), insert tick (ev ` A));\n     \\<forall>c.\n        c \\<in> Y \\<longrightarrow>\n        (\\<forall>t1 u1.\n            sa @\n            [c] setinterleaves ((t1, u1), insert tick\n     (ev ` A)) \\<longrightarrow>\n            ((t1, {}) \\<in> F P \\<longrightarrow>\n             (u1, {}) \\<notin> F Q) \\<and>\n            ((t1, {}) \\<in> F Q \\<longrightarrow>\n             (u1, {}) \\<notin> F P))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t2 u2 Xb.\n                         (t2, Xb) \\<in> F P \\<and>\n                         (\\<exists>Yb.\n                             (u2, Yb) \\<in> F Q \\<and>\n                             sa setinterleaves ((t2, u2), insert tick\n                     (ev ` A)) \\<and>\n                             (Xa \\<union> Ya) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xa \\<inter> Ya \\<union>\n                             Y =\n                             (Xb \\<union> Yb) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xb \\<inter> Yb)", "from A1"], ["proof (chain)\npicking this:\n  Y1 = Y \\<inter> insert tick (ev ` A) \\<and> Y2 = Y - insert tick (ev ` A)", "have newAAA: \"\\<forall>y\\<in>Y2. y\\<notin> insert tick (ev ` A)\""], ["proof (prove)\nusing this:\n  Y1 = Y \\<inter> insert tick (ev ` A) \\<and> Y2 = Y - insert tick (ev ` A)\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>Y2. y \\<notin> insert tick (ev ` A)", "by blast"], ["proof (state)\nthis:\n  \\<forall>y\\<in>Y2. y \\<notin> insert tick (ev ` A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(t, Xa) \\<in> F P \\<and>\n             (u, Ya) \\<in> F Q \\<and>\n             sa setinterleaves ((t, u), insert tick (ev ` A));\n     \\<forall>c.\n        c \\<in> Y \\<longrightarrow>\n        (\\<forall>t1 u1.\n            sa @\n            [c] setinterleaves ((t1, u1), insert tick\n     (ev ` A)) \\<longrightarrow>\n            ((t1, {}) \\<in> F P \\<longrightarrow>\n             (u1, {}) \\<notin> F Q) \\<and>\n            ((t1, {}) \\<in> F Q \\<longrightarrow>\n             (u1, {}) \\<notin> F P))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t2 u2 Xb.\n                         (t2, Xb) \\<in> F P \\<and>\n                         (\\<exists>Yb.\n                             (u2, Yb) \\<in> F Q \\<and>\n                             sa setinterleaves ((t2, u2), insert tick\n                     (ev ` A)) \\<and>\n                             (Xa \\<union> Ya) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xa \\<inter> Ya \\<union>\n                             Y =\n                             (Xb \\<union> Yb) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xb \\<inter> Yb)", "from B A1"], ["proof (chain)\npicking this:\n  \\<forall>c.\n     c \\<in> Y \\<longrightarrow>\n     (\\<forall>t1 u1.\n         sa @\n         [c] setinterleaves ((t1, u1), insert tick\n  (ev ` A)) \\<longrightarrow>\n         ((t1, {}) \\<in> F P \\<longrightarrow> (u1, {}) \\<notin> F Q) \\<and>\n         ((t1, {}) \\<in> F Q \\<longrightarrow> (u1, {}) \\<notin> F P))\n  Y1 = Y \\<inter> insert tick (ev ` A) \\<and> Y2 = Y - insert tick (ev ` A)", "have AA2: \"\\<forall>z\\<in>Y1.(t@[z], {})\\<notin>F P\\<or>(u@[z], {})\\<notin>F Q\""], ["proof (prove)\nusing this:\n  \\<forall>c.\n     c \\<in> Y \\<longrightarrow>\n     (\\<forall>t1 u1.\n         sa @\n         [c] setinterleaves ((t1, u1), insert tick\n  (ev ` A)) \\<longrightarrow>\n         ((t1, {}) \\<in> F P \\<longrightarrow> (u1, {}) \\<notin> F Q) \\<and>\n         ((t1, {}) \\<in> F Q \\<longrightarrow> (u1, {}) \\<notin> F P))\n  Y1 = Y \\<inter> insert tick (ev ` A) \\<and> Y2 = Y - insert tick (ev ` A)\n\ngoal (1 subgoal):\n 1. \\<forall>z\\<in>Y1.\n       (t @ [z], {}) \\<notin> F P \\<or> (u @ [z], {}) \\<notin> F Q", "proof(cases \"\\<exists>z\\<in>Y1. (t@[z], {})\\<in>F P\\<and>(u@[z], {})\\<in>F Q\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>c.\n                c \\<in> Y \\<longrightarrow>\n                (\\<forall>t1 u1.\n                    sa @\n                    [c] setinterleaves ((t1, u1), insert tick\n             (ev ` A)) \\<longrightarrow>\n                    ((t1, {}) \\<in> F P \\<longrightarrow>\n                     (u1, {}) \\<notin> F Q) \\<and>\n                    ((t1, {}) \\<in> F Q \\<longrightarrow>\n                     (u1, {}) \\<notin> F P));\n     Y1 = Y \\<inter> insert tick (ev ` A) \\<and>\n     Y2 = Y - insert tick (ev ` A);\n     \\<exists>z\\<in>Y1.\n        (t @ [z], {}) \\<in> F P \\<and> (u @ [z], {}) \\<in> F Q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>z\\<in>Y1.\n                         (t @ [z], {}) \\<notin> F P \\<or>\n                         (u @ [z], {}) \\<notin> F Q\n 2. \\<lbrakk>\\<forall>c.\n                c \\<in> Y \\<longrightarrow>\n                (\\<forall>t1 u1.\n                    sa @\n                    [c] setinterleaves ((t1, u1), insert tick\n             (ev ` A)) \\<longrightarrow>\n                    ((t1, {}) \\<in> F P \\<longrightarrow>\n                     (u1, {}) \\<notin> F Q) \\<and>\n                    ((t1, {}) \\<in> F Q \\<longrightarrow>\n                     (u1, {}) \\<notin> F P));\n     Y1 = Y \\<inter> insert tick (ev ` A) \\<and>\n     Y2 = Y - insert tick (ev ` A);\n     \\<not> (\\<exists>z\\<in>Y1.\n                (t @ [z], {}) \\<in> F P \\<and>\n                (u @ [z], {}) \\<in> F Q)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>z\\<in>Y1.\n                         (t @ [z], {}) \\<notin> F P \\<or>\n                         (u @ [z], {}) \\<notin> F Q", "case True"], ["proof (state)\nthis:\n  \\<exists>z\\<in>Y1. (t @ [z], {}) \\<in> F P \\<and> (u @ [z], {}) \\<in> F Q\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>c.\n                c \\<in> Y \\<longrightarrow>\n                (\\<forall>t1 u1.\n                    sa @\n                    [c] setinterleaves ((t1, u1), insert tick\n             (ev ` A)) \\<longrightarrow>\n                    ((t1, {}) \\<in> F P \\<longrightarrow>\n                     (u1, {}) \\<notin> F Q) \\<and>\n                    ((t1, {}) \\<in> F Q \\<longrightarrow>\n                     (u1, {}) \\<notin> F P));\n     Y1 = Y \\<inter> insert tick (ev ` A) \\<and>\n     Y2 = Y - insert tick (ev ` A);\n     \\<exists>z\\<in>Y1.\n        (t @ [z], {}) \\<in> F P \\<and> (u @ [z], {}) \\<in> F Q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>z\\<in>Y1.\n                         (t @ [z], {}) \\<notin> F P \\<or>\n                         (u @ [z], {}) \\<notin> F Q\n 2. \\<lbrakk>\\<forall>c.\n                c \\<in> Y \\<longrightarrow>\n                (\\<forall>t1 u1.\n                    sa @\n                    [c] setinterleaves ((t1, u1), insert tick\n             (ev ` A)) \\<longrightarrow>\n                    ((t1, {}) \\<in> F P \\<longrightarrow>\n                     (u1, {}) \\<notin> F Q) \\<and>\n                    ((t1, {}) \\<in> F Q \\<longrightarrow>\n                     (u1, {}) \\<notin> F P));\n     Y1 = Y \\<inter> insert tick (ev ` A) \\<and>\n     Y2 = Y - insert tick (ev ` A);\n     \\<not> (\\<exists>z\\<in>Y1.\n                (t @ [z], {}) \\<in> F P \\<and>\n                (u @ [z], {}) \\<in> F Q)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>z\\<in>Y1.\n                         (t @ [z], {}) \\<notin> F P \\<or>\n                         (u @ [z], {}) \\<notin> F Q", "from True"], ["proof (chain)\npicking this:\n  \\<exists>z\\<in>Y1. (t @ [z], {}) \\<in> F P \\<and> (u @ [z], {}) \\<in> F Q", "obtain z1 where TrA: \"z1\\<in>Y1\\<and>(t@[z1], {})\\<in>F P\\<and>(u@[z1], {})\\<in>F Q\""], ["proof (prove)\nusing this:\n  \\<exists>z\\<in>Y1. (t @ [z], {}) \\<in> F P \\<and> (u @ [z], {}) \\<in> F Q\n\ngoal (1 subgoal):\n 1. (\\<And>z1.\n        z1 \\<in> Y1 \\<and>\n        (t @ [z1], {}) \\<in> F P \\<and>\n        (u @ [z1], {}) \\<in> F Q \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  z1 \\<in> Y1 \\<and>\n  (t @ [z1], {}) \\<in> F P \\<and> (u @ [z1], {}) \\<in> F Q\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>c.\n                c \\<in> Y \\<longrightarrow>\n                (\\<forall>t1 u1.\n                    sa @\n                    [c] setinterleaves ((t1, u1), insert tick\n             (ev ` A)) \\<longrightarrow>\n                    ((t1, {}) \\<in> F P \\<longrightarrow>\n                     (u1, {}) \\<notin> F Q) \\<and>\n                    ((t1, {}) \\<in> F Q \\<longrightarrow>\n                     (u1, {}) \\<notin> F P));\n     Y1 = Y \\<inter> insert tick (ev ` A) \\<and>\n     Y2 = Y - insert tick (ev ` A);\n     \\<exists>z\\<in>Y1.\n        (t @ [z], {}) \\<in> F P \\<and> (u @ [z], {}) \\<in> F Q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>z\\<in>Y1.\n                         (t @ [z], {}) \\<notin> F P \\<or>\n                         (u @ [z], {}) \\<notin> F Q\n 2. \\<lbrakk>\\<forall>c.\n                c \\<in> Y \\<longrightarrow>\n                (\\<forall>t1 u1.\n                    sa @\n                    [c] setinterleaves ((t1, u1), insert tick\n             (ev ` A)) \\<longrightarrow>\n                    ((t1, {}) \\<in> F P \\<longrightarrow>\n                     (u1, {}) \\<notin> F Q) \\<and>\n                    ((t1, {}) \\<in> F Q \\<longrightarrow>\n                     (u1, {}) \\<notin> F P));\n     Y1 = Y \\<inter> insert tick (ev ` A) \\<and>\n     Y2 = Y - insert tick (ev ` A);\n     \\<not> (\\<exists>z\\<in>Y1.\n                (t @ [z], {}) \\<in> F P \\<and>\n                (u @ [z], {}) \\<in> F Q)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>z\\<in>Y1.\n                         (t @ [z], {}) \\<notin> F P \\<or>\n                         (u @ [z], {}) \\<notin> F Q", "from TrA A"], ["proof (chain)\npicking this:\n  z1 \\<in> Y1 \\<and>\n  (t @ [z1], {}) \\<in> F P \\<and> (u @ [z1], {}) \\<in> F Q\n  (t, Xa) \\<in> F P \\<and>\n  (u, Ya) \\<in> F Q \\<and> sa setinterleaves ((t, u), insert tick (ev ` A))", "have TrB: \"\\<lbrakk>sa setinterleaves ((t,u),insert tick(ev ` A)); z1\\<in>insert tick (ev ` A)\\<rbrakk>\n      \\<Longrightarrow>(sa@[z1]) setinterleaves ((t@[z1],(u@[z1])),insert tick (ev ` A))\""], ["proof (prove)\nusing this:\n  z1 \\<in> Y1 \\<and>\n  (t @ [z1], {}) \\<in> F P \\<and> (u @ [z1], {}) \\<in> F Q\n  (t, Xa) \\<in> F P \\<and>\n  (u, Ya) \\<in> F Q \\<and> sa setinterleaves ((t, u), insert tick (ev ` A))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>sa setinterleaves ((t, u), insert tick (ev ` A));\n     z1 \\<in> insert tick (ev ` A)\\<rbrakk>\n    \\<Longrightarrow> sa @\n                      [z1] setinterleaves ((t @\n      [z1], u @ [z1]), insert tick (ev ` A))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>sa setinterleaves ((t, u), insert tick (ev ` A));\n     z1 \\<in> insert tick (ev ` A);\n     z1 \\<in> Y1 \\<and>\n     (t @ [z1], {}) \\<in> F P \\<and> (u @ [z1], {}) \\<in> F Q;\n     (t, Xa) \\<in> F P \\<and>\n     (u, Ya) \\<in> F Q \\<and>\n     sa setinterleaves ((t, u), insert tick (ev ` A))\\<rbrakk>\n    \\<Longrightarrow> sa @\n                      [z1] setinterleaves ((t @\n      [z1], u @ [z1]), insert tick (ev ` A))", "have a: \"(rev sa) setinterleaves ((rev t,rev u),insert tick (ev ` A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rev sa setinterleaves ((rev t, rev u), insert tick (ev ` A))", "using local.A doubleReverse"], ["proof (prove)\nusing this:\n  (t, Xa) \\<in> F P \\<and>\n  (u, Ya) \\<in> F Q \\<and> sa setinterleaves ((t, u), insert tick (ev ` A))\n  ?s1.0 setinterleaves ((?t, ?u), ?A) \\<longrightarrow>\n  rev ?s1.0 setinterleaves ((rev ?t, rev ?u), ?A)\n\ngoal (1 subgoal):\n 1. rev sa setinterleaves ((rev t, rev u), insert tick (ev ` A))", "by blast"], ["proof (state)\nthis:\n  rev sa setinterleaves ((rev t, rev u), insert tick (ev ` A))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>sa setinterleaves ((t, u), insert tick (ev ` A));\n     z1 \\<in> insert tick (ev ` A);\n     z1 \\<in> Y1 \\<and>\n     (t @ [z1], {}) \\<in> F P \\<and> (u @ [z1], {}) \\<in> F Q;\n     (t, Xa) \\<in> F P \\<and>\n     (u, Ya) \\<in> F Q \\<and>\n     sa setinterleaves ((t, u), insert tick (ev ` A))\\<rbrakk>\n    \\<Longrightarrow> sa @\n                      [z1] setinterleaves ((t @\n      [z1], u @ [z1]), insert tick (ev ` A))", "have b: \"(z1#rev sa)  setinterleaves  ((z1#rev t,z1# rev u),insert tick (ev ` A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z1 #\n    rev sa setinterleaves ((z1 # rev t, z1 # rev u), insert tick (ev ` A))", "using TrA a newAA"], ["proof (prove)\nusing this:\n  z1 \\<in> Y1 \\<and>\n  (t @ [z1], {}) \\<in> F P \\<and> (u @ [z1], {}) \\<in> F Q\n  rev sa setinterleaves ((rev t, rev u), insert tick (ev ` A))\n  \\<forall>y\\<in>Y1. y \\<in> insert tick (ev ` A)\n\ngoal (1 subgoal):\n 1. z1 #\n    rev sa setinterleaves ((z1 # rev t, z1 # rev u), insert tick (ev ` A))", "by auto"], ["proof (state)\nthis:\n  z1 #\n  rev sa setinterleaves ((z1 # rev t, z1 # rev u), insert tick (ev ` A))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>sa setinterleaves ((t, u), insert tick (ev ` A));\n     z1 \\<in> insert tick (ev ` A);\n     z1 \\<in> Y1 \\<and>\n     (t @ [z1], {}) \\<in> F P \\<and> (u @ [z1], {}) \\<in> F Q;\n     (t, Xa) \\<in> F P \\<and>\n     (u, Ya) \\<in> F Q \\<and>\n     sa setinterleaves ((t, u), insert tick (ev ` A))\\<rbrakk>\n    \\<Longrightarrow> sa @\n                      [z1] setinterleaves ((t @\n      [z1], u @ [z1]), insert tick (ev ` A))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. sa @ [z1] setinterleaves ((t @ [z1], u @ [z1]), insert tick (ev ` A))", "using b doubleReverse"], ["proof (prove)\nusing this:\n  z1 #\n  rev sa setinterleaves ((z1 # rev t, z1 # rev u), insert tick (ev ` A))\n  ?s1.0 setinterleaves ((?t, ?u), ?A) \\<longrightarrow>\n  rev ?s1.0 setinterleaves ((rev ?t, rev ?u), ?A)\n\ngoal (1 subgoal):\n 1. sa @ [z1] setinterleaves ((t @ [z1], u @ [z1]), insert tick (ev ` A))", "by fastforce"], ["proof (state)\nthis:\n  sa @ [z1] setinterleaves ((t @ [z1], u @ [z1]), insert tick (ev ` A))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>sa setinterleaves ((t, u), insert tick (ev ` A));\n   z1 \\<in> insert tick (ev ` A)\\<rbrakk>\n  \\<Longrightarrow> sa @\n                    [z1] setinterleaves ((t @\n    [z1], u @ [z1]), insert tick (ev ` A))\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>c.\n                c \\<in> Y \\<longrightarrow>\n                (\\<forall>t1 u1.\n                    sa @\n                    [c] setinterleaves ((t1, u1), insert tick\n             (ev ` A)) \\<longrightarrow>\n                    ((t1, {}) \\<in> F P \\<longrightarrow>\n                     (u1, {}) \\<notin> F Q) \\<and>\n                    ((t1, {}) \\<in> F Q \\<longrightarrow>\n                     (u1, {}) \\<notin> F P));\n     Y1 = Y \\<inter> insert tick (ev ` A) \\<and>\n     Y2 = Y - insert tick (ev ` A);\n     \\<exists>z\\<in>Y1.\n        (t @ [z], {}) \\<in> F P \\<and> (u @ [z], {}) \\<in> F Q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>z\\<in>Y1.\n                         (t @ [z], {}) \\<notin> F P \\<or>\n                         (u @ [z], {}) \\<notin> F Q\n 2. \\<lbrakk>\\<forall>c.\n                c \\<in> Y \\<longrightarrow>\n                (\\<forall>t1 u1.\n                    sa @\n                    [c] setinterleaves ((t1, u1), insert tick\n             (ev ` A)) \\<longrightarrow>\n                    ((t1, {}) \\<in> F P \\<longrightarrow>\n                     (u1, {}) \\<notin> F Q) \\<and>\n                    ((t1, {}) \\<in> F Q \\<longrightarrow>\n                     (u1, {}) \\<notin> F P));\n     Y1 = Y \\<inter> insert tick (ev ` A) \\<and>\n     Y2 = Y - insert tick (ev ` A);\n     \\<not> (\\<exists>z\\<in>Y1.\n                (t @ [z], {}) \\<in> F P \\<and>\n                (u @ [z], {}) \\<in> F Q)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>z\\<in>Y1.\n                         (t @ [z], {}) \\<notin> F P \\<or>\n                         (u @ [z], {}) \\<notin> F Q", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>sa setinterleaves ((t, u), insert tick (ev ` A));\n   z1 \\<in> insert tick (ev ` A)\\<rbrakk>\n  \\<Longrightarrow> sa @\n                    [z1] setinterleaves ((t @\n    [z1], u @ [z1]), insert tick (ev ` A))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>sa setinterleaves ((t, u), insert tick (ev ` A));\n   z1 \\<in> insert tick (ev ` A)\\<rbrakk>\n  \\<Longrightarrow> sa @\n                    [z1] setinterleaves ((t @\n    [z1], u @ [z1]), insert tick (ev ` A))\n\ngoal (1 subgoal):\n 1. \\<forall>z\\<in>Y1.\n       (t @ [z], {}) \\<notin> F P \\<or> (u @ [z], {}) \\<notin> F Q", "using A1 B TrA local.A"], ["proof (prove)\nusing this:\n  \\<lbrakk>sa setinterleaves ((t, u), insert tick (ev ` A));\n   z1 \\<in> insert tick (ev ` A)\\<rbrakk>\n  \\<Longrightarrow> sa @\n                    [z1] setinterleaves ((t @\n    [z1], u @ [z1]), insert tick (ev ` A))\n  Y1 = Y \\<inter> insert tick (ev ` A) \\<and> Y2 = Y - insert tick (ev ` A)\n  \\<forall>c.\n     c \\<in> Y \\<longrightarrow>\n     (\\<forall>t1 u1.\n         sa @\n         [c] setinterleaves ((t1, u1), insert tick\n  (ev ` A)) \\<longrightarrow>\n         ((t1, {}) \\<in> F P \\<longrightarrow> (u1, {}) \\<notin> F Q) \\<and>\n         ((t1, {}) \\<in> F Q \\<longrightarrow> (u1, {}) \\<notin> F P))\n  z1 \\<in> Y1 \\<and>\n  (t @ [z1], {}) \\<in> F P \\<and> (u @ [z1], {}) \\<in> F Q\n  (t, Xa) \\<in> F P \\<and>\n  (u, Ya) \\<in> F Q \\<and> sa setinterleaves ((t, u), insert tick (ev ` A))\n\ngoal (1 subgoal):\n 1. \\<forall>z\\<in>Y1.\n       (t @ [z], {}) \\<notin> F P \\<or> (u @ [z], {}) \\<notin> F Q", "by blast"], ["proof (state)\nthis:\n  \\<forall>z\\<in>Y1.\n     (t @ [z], {}) \\<notin> F P \\<or> (u @ [z], {}) \\<notin> F Q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>c.\n                c \\<in> Y \\<longrightarrow>\n                (\\<forall>t1 u1.\n                    sa @\n                    [c] setinterleaves ((t1, u1), insert tick\n             (ev ` A)) \\<longrightarrow>\n                    ((t1, {}) \\<in> F P \\<longrightarrow>\n                     (u1, {}) \\<notin> F Q) \\<and>\n                    ((t1, {}) \\<in> F Q \\<longrightarrow>\n                     (u1, {}) \\<notin> F P));\n     Y1 = Y \\<inter> insert tick (ev ` A) \\<and>\n     Y2 = Y - insert tick (ev ` A);\n     \\<not> (\\<exists>z\\<in>Y1.\n                (t @ [z], {}) \\<in> F P \\<and>\n                (u @ [z], {}) \\<in> F Q)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>z\\<in>Y1.\n                         (t @ [z], {}) \\<notin> F P \\<or>\n                         (u @ [z], {}) \\<notin> F Q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>c.\n                c \\<in> Y \\<longrightarrow>\n                (\\<forall>t1 u1.\n                    sa @\n                    [c] setinterleaves ((t1, u1), insert tick\n             (ev ` A)) \\<longrightarrow>\n                    ((t1, {}) \\<in> F P \\<longrightarrow>\n                     (u1, {}) \\<notin> F Q) \\<and>\n                    ((t1, {}) \\<in> F Q \\<longrightarrow>\n                     (u1, {}) \\<notin> F P));\n     Y1 = Y \\<inter> insert tick (ev ` A) \\<and>\n     Y2 = Y - insert tick (ev ` A);\n     \\<not> (\\<exists>z\\<in>Y1.\n                (t @ [z], {}) \\<in> F P \\<and>\n                (u @ [z], {}) \\<in> F Q)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>z\\<in>Y1.\n                         (t @ [z], {}) \\<notin> F P \\<or>\n                         (u @ [z], {}) \\<notin> F Q", "case False"], ["proof (state)\nthis:\n  \\<not> (\\<exists>z\\<in>Y1.\n             (t @ [z], {}) \\<in> F P \\<and> (u @ [z], {}) \\<in> F Q)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>c.\n                c \\<in> Y \\<longrightarrow>\n                (\\<forall>t1 u1.\n                    sa @\n                    [c] setinterleaves ((t1, u1), insert tick\n             (ev ` A)) \\<longrightarrow>\n                    ((t1, {}) \\<in> F P \\<longrightarrow>\n                     (u1, {}) \\<notin> F Q) \\<and>\n                    ((t1, {}) \\<in> F Q \\<longrightarrow>\n                     (u1, {}) \\<notin> F P));\n     Y1 = Y \\<inter> insert tick (ev ` A) \\<and>\n     Y2 = Y - insert tick (ev ` A);\n     \\<not> (\\<exists>z\\<in>Y1.\n                (t @ [z], {}) \\<in> F P \\<and>\n                (u @ [z], {}) \\<in> F Q)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>z\\<in>Y1.\n                         (t @ [z], {}) \\<notin> F P \\<or>\n                         (u @ [z], {}) \\<notin> F Q", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<exists>z\\<in>Y1.\n             (t @ [z], {}) \\<in> F P \\<and> (u @ [z], {}) \\<in> F Q)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>z\\<in>Y1.\n             (t @ [z], {}) \\<in> F P \\<and> (u @ [z], {}) \\<in> F Q)\n\ngoal (1 subgoal):\n 1. \\<forall>z\\<in>Y1.\n       (t @ [z], {}) \\<notin> F P \\<or> (u @ [z], {}) \\<notin> F Q", "by blast"], ["proof (state)\nthis:\n  \\<forall>z\\<in>Y1.\n     (t @ [z], {}) \\<notin> F P \\<or> (u @ [z], {}) \\<notin> F Q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>z\\<in>Y1.\n     (t @ [z], {}) \\<notin> F P \\<or> (u @ [z], {}) \\<notin> F Q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(t, Xa) \\<in> F P \\<and>\n             (u, Ya) \\<in> F Q \\<and>\n             sa setinterleaves ((t, u), insert tick (ev ` A));\n     \\<forall>c.\n        c \\<in> Y \\<longrightarrow>\n        (\\<forall>t1 u1.\n            sa @\n            [c] setinterleaves ((t1, u1), insert tick\n     (ev ` A)) \\<longrightarrow>\n            ((t1, {}) \\<in> F P \\<longrightarrow>\n             (u1, {}) \\<notin> F Q) \\<and>\n            ((t1, {}) \\<in> F Q \\<longrightarrow>\n             (u1, {}) \\<notin> F P))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t2 u2 Xb.\n                         (t2, Xb) \\<in> F P \\<and>\n                         (\\<exists>Yb.\n                             (u2, Yb) \\<in> F Q \\<and>\n                             sa setinterleaves ((t2, u2), insert tick\n                     (ev ` A)) \\<and>\n                             (Xa \\<union> Ya) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xa \\<inter> Ya \\<union>\n                             Y =\n                             (Xb \\<union> Yb) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xb \\<inter> Yb)", "from A B A1"], ["proof (chain)\npicking this:\n  (t, Xa) \\<in> F P \\<and>\n  (u, Ya) \\<in> F Q \\<and> sa setinterleaves ((t, u), insert tick (ev ` A))\n  \\<forall>c.\n     c \\<in> Y \\<longrightarrow>\n     (\\<forall>t1 u1.\n         sa @\n         [c] setinterleaves ((t1, u1), insert tick\n  (ev ` A)) \\<longrightarrow>\n         ((t1, {}) \\<in> F P \\<longrightarrow> (u1, {}) \\<notin> F Q) \\<and>\n         ((t1, {}) \\<in> F Q \\<longrightarrow> (u1, {}) \\<notin> F P))\n  Y1 = Y \\<inter> insert tick (ev ` A) \\<and> Y2 = Y - insert tick (ev ` A)", "obtain Z1 Z2 where A2: \"(Z1=Y1\\<inter>{z.(t@[z], {})\\<notin>F P})\\<and>(Z2=Y1-{z.(t@[z], {})\\<notin>F P})\""], ["proof (prove)\nusing this:\n  (t, Xa) \\<in> F P \\<and>\n  (u, Ya) \\<in> F Q \\<and> sa setinterleaves ((t, u), insert tick (ev ` A))\n  \\<forall>c.\n     c \\<in> Y \\<longrightarrow>\n     (\\<forall>t1 u1.\n         sa @\n         [c] setinterleaves ((t1, u1), insert tick\n  (ev ` A)) \\<longrightarrow>\n         ((t1, {}) \\<in> F P \\<longrightarrow> (u1, {}) \\<notin> F Q) \\<and>\n         ((t1, {}) \\<in> F Q \\<longrightarrow> (u1, {}) \\<notin> F P))\n  Y1 = Y \\<inter> insert tick (ev ` A) \\<and> Y2 = Y - insert tick (ev ` A)\n\ngoal (1 subgoal):\n 1. (\\<And>Z1 Z2.\n        Z1 = Y1 \\<inter> {z. (t @ [z], {}) \\<notin> F P} \\<and>\n        Z2 = Y1 - {z. (t @ [z], {}) \\<notin> F P} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Z1 = Y1 \\<inter> {z. (t @ [z], {}) \\<notin> F P} \\<and>\n  Z2 = Y1 - {z. (t @ [z], {}) \\<notin> F P}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(t, Xa) \\<in> F P \\<and>\n             (u, Ya) \\<in> F Q \\<and>\n             sa setinterleaves ((t, u), insert tick (ev ` A));\n     \\<forall>c.\n        c \\<in> Y \\<longrightarrow>\n        (\\<forall>t1 u1.\n            sa @\n            [c] setinterleaves ((t1, u1), insert tick\n     (ev ` A)) \\<longrightarrow>\n            ((t1, {}) \\<in> F P \\<longrightarrow>\n             (u1, {}) \\<notin> F Q) \\<and>\n            ((t1, {}) \\<in> F Q \\<longrightarrow>\n             (u1, {}) \\<notin> F P))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t2 u2 Xb.\n                         (t2, Xb) \\<in> F P \\<and>\n                         (\\<exists>Yb.\n                             (u2, Yb) \\<in> F Q \\<and>\n                             sa setinterleaves ((t2, u2), insert tick\n                     (ev ` A)) \\<and>\n                             (Xa \\<union> Ya) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xa \\<inter> Ya \\<union>\n                             Y =\n                             (Xb \\<union> Yb) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xb \\<inter> Yb)", "from A2"], ["proof (chain)\npicking this:\n  Z1 = Y1 \\<inter> {z. (t @ [z], {}) \\<notin> F P} \\<and>\n  Z2 = Y1 - {z. (t @ [z], {}) \\<notin> F P}", "have BA: \"Y1=Z1\\<union>Z2\""], ["proof (prove)\nusing this:\n  Z1 = Y1 \\<inter> {z. (t @ [z], {}) \\<notin> F P} \\<and>\n  Z2 = Y1 - {z. (t @ [z], {}) \\<notin> F P}\n\ngoal (1 subgoal):\n 1. Y1 = Z1 \\<union> Z2", "by blast"], ["proof (state)\nthis:\n  Y1 = Z1 \\<union> Z2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(t, Xa) \\<in> F P \\<and>\n             (u, Ya) \\<in> F Q \\<and>\n             sa setinterleaves ((t, u), insert tick (ev ` A));\n     \\<forall>c.\n        c \\<in> Y \\<longrightarrow>\n        (\\<forall>t1 u1.\n            sa @\n            [c] setinterleaves ((t1, u1), insert tick\n     (ev ` A)) \\<longrightarrow>\n            ((t1, {}) \\<in> F P \\<longrightarrow>\n             (u1, {}) \\<notin> F Q) \\<and>\n            ((t1, {}) \\<in> F Q \\<longrightarrow>\n             (u1, {}) \\<notin> F P))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t2 u2 Xb.\n                         (t2, Xb) \\<in> F P \\<and>\n                         (\\<exists>Yb.\n                             (u2, Yb) \\<in> F Q \\<and>\n                             sa setinterleaves ((t2, u2), insert tick\n                     (ev ` A)) \\<and>\n                             (Xa \\<union> Ya) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xa \\<inter> Ya \\<union>\n                             Y =\n                             (Xb \\<union> Yb) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xb \\<inter> Yb)", "from A2"], ["proof (chain)\npicking this:\n  Z1 = Y1 \\<inter> {z. (t @ [z], {}) \\<notin> F P} \\<and>\n  Z2 = Y1 - {z. (t @ [z], {}) \\<notin> F P}", "have BAA: \"\\<forall>z\\<in>Z1. (t@[z], {})\\<notin>F P\""], ["proof (prove)\nusing this:\n  Z1 = Y1 \\<inter> {z. (t @ [z], {}) \\<notin> F P} \\<and>\n  Z2 = Y1 - {z. (t @ [z], {}) \\<notin> F P}\n\ngoal (1 subgoal):\n 1. \\<forall>z\\<in>Z1. (t @ [z], {}) \\<notin> F P", "by blast"], ["proof (state)\nthis:\n  \\<forall>z\\<in>Z1. (t @ [z], {}) \\<notin> F P\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(t, Xa) \\<in> F P \\<and>\n             (u, Ya) \\<in> F Q \\<and>\n             sa setinterleaves ((t, u), insert tick (ev ` A));\n     \\<forall>c.\n        c \\<in> Y \\<longrightarrow>\n        (\\<forall>t1 u1.\n            sa @\n            [c] setinterleaves ((t1, u1), insert tick\n     (ev ` A)) \\<longrightarrow>\n            ((t1, {}) \\<in> F P \\<longrightarrow>\n             (u1, {}) \\<notin> F Q) \\<and>\n            ((t1, {}) \\<in> F Q \\<longrightarrow>\n             (u1, {}) \\<notin> F P))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t2 u2 Xb.\n                         (t2, Xb) \\<in> F P \\<and>\n                         (\\<exists>Yb.\n                             (u2, Yb) \\<in> F Q \\<and>\n                             sa setinterleaves ((t2, u2), insert tick\n                     (ev ` A)) \\<and>\n                             (Xa \\<union> Ya) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xa \\<inter> Ya \\<union>\n                             Y =\n                             (Xb \\<union> Yb) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xb \\<inter> Yb)", "from A2"], ["proof (chain)\npicking this:\n  Z1 = Y1 \\<inter> {z. (t @ [z], {}) \\<notin> F P} \\<and>\n  Z2 = Y1 - {z. (t @ [z], {}) \\<notin> F P}", "have BAAA: \"\\<forall>z\\<in>Z2. (u@[z], {})\\<notin>F Q\""], ["proof (prove)\nusing this:\n  Z1 = Y1 \\<inter> {z. (t @ [z], {}) \\<notin> F P} \\<and>\n  Z2 = Y1 - {z. (t @ [z], {}) \\<notin> F P}\n\ngoal (1 subgoal):\n 1. \\<forall>z\\<in>Z2. (u @ [z], {}) \\<notin> F Q", "using AA2"], ["proof (prove)\nusing this:\n  Z1 = Y1 \\<inter> {z. (t @ [z], {}) \\<notin> F P} \\<and>\n  Z2 = Y1 - {z. (t @ [z], {}) \\<notin> F P}\n  \\<forall>z\\<in>Y1.\n     (t @ [z], {}) \\<notin> F P \\<or> (u @ [z], {}) \\<notin> F Q\n\ngoal (1 subgoal):\n 1. \\<forall>z\\<in>Z2. (u @ [z], {}) \\<notin> F Q", "by blast"], ["proof (state)\nthis:\n  \\<forall>z\\<in>Z2. (u @ [z], {}) \\<notin> F Q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(t, Xa) \\<in> F P \\<and>\n             (u, Ya) \\<in> F Q \\<and>\n             sa setinterleaves ((t, u), insert tick (ev ` A));\n     \\<forall>c.\n        c \\<in> Y \\<longrightarrow>\n        (\\<forall>t1 u1.\n            sa @\n            [c] setinterleaves ((t1, u1), insert tick\n     (ev ` A)) \\<longrightarrow>\n            ((t1, {}) \\<in> F P \\<longrightarrow>\n             (u1, {}) \\<notin> F Q) \\<and>\n            ((t1, {}) \\<in> F Q \\<longrightarrow>\n             (u1, {}) \\<notin> F P))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t2 u2 Xb.\n                         (t2, Xb) \\<in> F P \\<and>\n                         (\\<exists>Yb.\n                             (u2, Yb) \\<in> F Q \\<and>\n                             sa setinterleaves ((t2, u2), insert tick\n                     (ev ` A)) \\<and>\n                             (Xa \\<union> Ya) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xa \\<inter> Ya \\<union>\n                             Y =\n                             (Xb \\<union> Yb) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xb \\<inter> Yb)", "from A2 BA BAA"], ["proof (chain)\npicking this:\n  Z1 = Y1 \\<inter> {z. (t @ [z], {}) \\<notin> F P} \\<and>\n  Z2 = Y1 - {z. (t @ [z], {}) \\<notin> F P}\n  Y1 = Z1 \\<union> Z2\n  \\<forall>z\\<in>Z1. (t @ [z], {}) \\<notin> F P", "have A3: \"(t, Z1)\\<in> F P\""], ["proof (prove)\nusing this:\n  Z1 = Y1 \\<inter> {z. (t @ [z], {}) \\<notin> F P} \\<and>\n  Z2 = Y1 - {z. (t @ [z], {}) \\<notin> F P}\n  Y1 = Z1 \\<union> Z2\n  \\<forall>z\\<in>Z1. (t @ [z], {}) \\<notin> F P\n\ngoal (1 subgoal):\n 1. (t, Z1) \\<in> F P", "by (meson F_T NF_NT is_processT5_S7 local.A)"], ["proof (state)\nthis:\n  (t, Z1) \\<in> F P\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(t, Xa) \\<in> F P \\<and>\n             (u, Ya) \\<in> F Q \\<and>\n             sa setinterleaves ((t, u), insert tick (ev ` A));\n     \\<forall>c.\n        c \\<in> Y \\<longrightarrow>\n        (\\<forall>t1 u1.\n            sa @\n            [c] setinterleaves ((t1, u1), insert tick\n     (ev ` A)) \\<longrightarrow>\n            ((t1, {}) \\<in> F P \\<longrightarrow>\n             (u1, {}) \\<notin> F Q) \\<and>\n            ((t1, {}) \\<in> F Q \\<longrightarrow>\n             (u1, {}) \\<notin> F P))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t2 u2 Xb.\n                         (t2, Xb) \\<in> F P \\<and>\n                         (\\<exists>Yb.\n                             (u2, Yb) \\<in> F Q \\<and>\n                             sa setinterleaves ((t2, u2), insert tick\n                     (ev ` A)) \\<and>\n                             (Xa \\<union> Ya) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xa \\<inter> Ya \\<union>\n                             Y =\n                             (Xb \\<union> Yb) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xb \\<inter> Yb)", "from A A1"], ["proof (chain)\npicking this:\n  (t, Xa) \\<in> F P \\<and>\n  (u, Ya) \\<in> F Q \\<and> sa setinterleaves ((t, u), insert tick (ev ` A))\n  Y1 = Y \\<inter> insert tick (ev ` A) \\<and> Y2 = Y - insert tick (ev ` A)", "have A43: \"\\<forall>y\\<in>Y2. (t@[y], {})\\<notin> F P\\<and>(u@[y], {})\\<notin> F Q\""], ["proof (prove)\nusing this:\n  (t, Xa) \\<in> F P \\<and>\n  (u, Ya) \\<in> F Q \\<and> sa setinterleaves ((t, u), insert tick (ev ` A))\n  Y1 = Y \\<inter> insert tick (ev ` A) \\<and> Y2 = Y - insert tick (ev ` A)\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>Y2.\n       (t @ [y], {}) \\<notin> F P \\<and> (u @ [y], {}) \\<notin> F Q", "proof(cases \"\\<exists>y\\<in>Y2. ((t@[y], {})\\<in> F P)\\<or>((u@[y], {})\\<in> F Q)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>(t, Xa) \\<in> F P \\<and>\n             (u, Ya) \\<in> F Q \\<and>\n             sa setinterleaves ((t, u), insert tick (ev ` A));\n     Y1 = Y \\<inter> insert tick (ev ` A) \\<and>\n     Y2 = Y - insert tick (ev ` A);\n     \\<exists>y\\<in>Y2.\n        (t @ [y], {}) \\<in> F P \\<or> (u @ [y], {}) \\<in> F Q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>y\\<in>Y2.\n                         (t @ [y], {}) \\<notin> F P \\<and>\n                         (u @ [y], {}) \\<notin> F Q\n 2. \\<lbrakk>(t, Xa) \\<in> F P \\<and>\n             (u, Ya) \\<in> F Q \\<and>\n             sa setinterleaves ((t, u), insert tick (ev ` A));\n     Y1 = Y \\<inter> insert tick (ev ` A) \\<and>\n     Y2 = Y - insert tick (ev ` A);\n     \\<not> (\\<exists>y\\<in>Y2.\n                (t @ [y], {}) \\<in> F P \\<or>\n                (u @ [y], {}) \\<in> F Q)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>y\\<in>Y2.\n                         (t @ [y], {}) \\<notin> F P \\<and>\n                         (u @ [y], {}) \\<notin> F Q", "case True"], ["proof (state)\nthis:\n  \\<exists>y\\<in>Y2. (t @ [y], {}) \\<in> F P \\<or> (u @ [y], {}) \\<in> F Q\n\ngoal (2 subgoals):\n 1. \\<lbrakk>(t, Xa) \\<in> F P \\<and>\n             (u, Ya) \\<in> F Q \\<and>\n             sa setinterleaves ((t, u), insert tick (ev ` A));\n     Y1 = Y \\<inter> insert tick (ev ` A) \\<and>\n     Y2 = Y - insert tick (ev ` A);\n     \\<exists>y\\<in>Y2.\n        (t @ [y], {}) \\<in> F P \\<or> (u @ [y], {}) \\<in> F Q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>y\\<in>Y2.\n                         (t @ [y], {}) \\<notin> F P \\<and>\n                         (u @ [y], {}) \\<notin> F Q\n 2. \\<lbrakk>(t, Xa) \\<in> F P \\<and>\n             (u, Ya) \\<in> F Q \\<and>\n             sa setinterleaves ((t, u), insert tick (ev ` A));\n     Y1 = Y \\<inter> insert tick (ev ` A) \\<and>\n     Y2 = Y - insert tick (ev ` A);\n     \\<not> (\\<exists>y\\<in>Y2.\n                (t @ [y], {}) \\<in> F P \\<or>\n                (u @ [y], {}) \\<in> F Q)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>y\\<in>Y2.\n                         (t @ [y], {}) \\<notin> F P \\<and>\n                         (u @ [y], {}) \\<notin> F Q", "from True"], ["proof (chain)\npicking this:\n  \\<exists>y\\<in>Y2. (t @ [y], {}) \\<in> F P \\<or> (u @ [y], {}) \\<in> F Q", "obtain y1 where innAA: \"y1\\<in>Y2\\<and>(((t@[y1], {})\\<in> F P)\\<or>((u@[y1], {})\\<in> F Q))\""], ["proof (prove)\nusing this:\n  \\<exists>y\\<in>Y2. (t @ [y], {}) \\<in> F P \\<or> (u @ [y], {}) \\<in> F Q\n\ngoal (1 subgoal):\n 1. (\\<And>y1.\n        y1 \\<in> Y2 \\<and>\n        ((t @ [y1], {}) \\<in> F P \\<or>\n         (u @ [y1], {}) \\<in> F Q) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  y1 \\<in> Y2 \\<and>\n  ((t @ [y1], {}) \\<in> F P \\<or> (u @ [y1], {}) \\<in> F Q)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>(t, Xa) \\<in> F P \\<and>\n             (u, Ya) \\<in> F Q \\<and>\n             sa setinterleaves ((t, u), insert tick (ev ` A));\n     Y1 = Y \\<inter> insert tick (ev ` A) \\<and>\n     Y2 = Y - insert tick (ev ` A);\n     \\<exists>y\\<in>Y2.\n        (t @ [y], {}) \\<in> F P \\<or> (u @ [y], {}) \\<in> F Q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>y\\<in>Y2.\n                         (t @ [y], {}) \\<notin> F P \\<and>\n                         (u @ [y], {}) \\<notin> F Q\n 2. \\<lbrakk>(t, Xa) \\<in> F P \\<and>\n             (u, Ya) \\<in> F Q \\<and>\n             sa setinterleaves ((t, u), insert tick (ev ` A));\n     Y1 = Y \\<inter> insert tick (ev ` A) \\<and>\n     Y2 = Y - insert tick (ev ` A);\n     \\<not> (\\<exists>y\\<in>Y2.\n                (t @ [y], {}) \\<in> F P \\<or>\n                (u @ [y], {}) \\<in> F Q)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>y\\<in>Y2.\n                         (t @ [y], {}) \\<notin> F P \\<and>\n                         (u @ [y], {}) \\<notin> F Q", "from innAA"], ["proof (chain)\npicking this:\n  y1 \\<in> Y2 \\<and>\n  ((t @ [y1], {}) \\<in> F P \\<or> (u @ [y1], {}) \\<in> F Q)", "have innAAA: \"y1\\<notin> insert tick (ev ` A)\""], ["proof (prove)\nusing this:\n  y1 \\<in> Y2 \\<and>\n  ((t @ [y1], {}) \\<in> F P \\<or> (u @ [y1], {}) \\<in> F Q)\n\ngoal (1 subgoal):\n 1. y1 \\<notin> insert tick (ev ` A)", "using newAAA"], ["proof (prove)\nusing this:\n  y1 \\<in> Y2 \\<and>\n  ((t @ [y1], {}) \\<in> F P \\<or> (u @ [y1], {}) \\<in> F Q)\n  \\<forall>y\\<in>Y2. y \\<notin> insert tick (ev ` A)\n\ngoal (1 subgoal):\n 1. y1 \\<notin> insert tick (ev ` A)", "by auto"], ["proof (state)\nthis:\n  y1 \\<notin> insert tick (ev ` A)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>(t, Xa) \\<in> F P \\<and>\n             (u, Ya) \\<in> F Q \\<and>\n             sa setinterleaves ((t, u), insert tick (ev ` A));\n     Y1 = Y \\<inter> insert tick (ev ` A) \\<and>\n     Y2 = Y - insert tick (ev ` A);\n     \\<exists>y\\<in>Y2.\n        (t @ [y], {}) \\<in> F P \\<or> (u @ [y], {}) \\<in> F Q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>y\\<in>Y2.\n                         (t @ [y], {}) \\<notin> F P \\<and>\n                         (u @ [y], {}) \\<notin> F Q\n 2. \\<lbrakk>(t, Xa) \\<in> F P \\<and>\n             (u, Ya) \\<in> F Q \\<and>\n             sa setinterleaves ((t, u), insert tick (ev ` A));\n     Y1 = Y \\<inter> insert tick (ev ` A) \\<and>\n     Y2 = Y - insert tick (ev ` A);\n     \\<not> (\\<exists>y\\<in>Y2.\n                (t @ [y], {}) \\<in> F P \\<or>\n                (u @ [y], {}) \\<in> F Q)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>y\\<in>Y2.\n                         (t @ [y], {}) \\<notin> F P \\<and>\n                         (u @ [y], {}) \\<notin> F Q", "from innAA"], ["proof (chain)\npicking this:\n  y1 \\<in> Y2 \\<and>\n  ((t @ [y1], {}) \\<in> F P \\<or> (u @ [y1], {}) \\<in> F Q)", "have innAA1: \"\\<lbrakk>sa setinterleaves ((t,u),insert tick (ev ` A)); \n      y1 \\<notin> insert tick (ev ` A)\\<rbrakk>\\<Longrightarrow>((t@[y1], {})\\<in> F P\\<longrightarrow>(sa@[y1]) setinterleaves \n      ((t@[y1],u),insert tick (ev ` A)))\\<and>((u@[y1], {})\\<in> F Q\\<longrightarrow>(sa@[y1]) setinterleaves \n      ((t,u@[y1]),insert tick (ev ` A)))\""], ["proof (prove)\nusing this:\n  y1 \\<in> Y2 \\<and>\n  ((t @ [y1], {}) \\<in> F P \\<or> (u @ [y1], {}) \\<in> F Q)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>sa setinterleaves ((t, u), insert tick (ev ` A));\n     y1 \\<notin> insert tick (ev ` A)\\<rbrakk>\n    \\<Longrightarrow> ((t @ [y1], {}) \\<in> F P \\<longrightarrow>\n                       sa @\n                       [y1] setinterleaves ((t @\n       [y1], u), insert tick (ev ` A))) \\<and>\n                      ((u @ [y1], {}) \\<in> F Q \\<longrightarrow>\n                       sa @\n                       [y1] setinterleaves ((t, u @\n          [y1]), insert tick (ev ` A)))", "by (simp add: addNonSync)"], ["proof (state)\nthis:\n  \\<lbrakk>sa setinterleaves ((t, u), insert tick (ev ` A));\n   y1 \\<notin> insert tick (ev ` A)\\<rbrakk>\n  \\<Longrightarrow> ((t @ [y1], {}) \\<in> F P \\<longrightarrow>\n                     sa @\n                     [y1] setinterleaves ((t @\n     [y1], u), insert tick (ev ` A))) \\<and>\n                    ((u @ [y1], {}) \\<in> F Q \\<longrightarrow>\n                     sa @\n                     [y1] setinterleaves ((t, u @\n        [y1]), insert tick (ev ` A)))\n\ngoal (2 subgoals):\n 1. \\<lbrakk>(t, Xa) \\<in> F P \\<and>\n             (u, Ya) \\<in> F Q \\<and>\n             sa setinterleaves ((t, u), insert tick (ev ` A));\n     Y1 = Y \\<inter> insert tick (ev ` A) \\<and>\n     Y2 = Y - insert tick (ev ` A);\n     \\<exists>y\\<in>Y2.\n        (t @ [y], {}) \\<in> F P \\<or> (u @ [y], {}) \\<in> F Q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>y\\<in>Y2.\n                         (t @ [y], {}) \\<notin> F P \\<and>\n                         (u @ [y], {}) \\<notin> F Q\n 2. \\<lbrakk>(t, Xa) \\<in> F P \\<and>\n             (u, Ya) \\<in> F Q \\<and>\n             sa setinterleaves ((t, u), insert tick (ev ` A));\n     Y1 = Y \\<inter> insert tick (ev ` A) \\<and>\n     Y2 = Y - insert tick (ev ` A);\n     \\<not> (\\<exists>y\\<in>Y2.\n                (t @ [y], {}) \\<in> F P \\<or>\n                (u @ [y], {}) \\<in> F Q)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>y\\<in>Y2.\n                         (t @ [y], {}) \\<notin> F P \\<and>\n                         (u @ [y], {}) \\<notin> F Q", "with A B innAA1 innAA"], ["proof (chain)\npicking this:\n  (t, Xa) \\<in> F P \\<and>\n  (u, Ya) \\<in> F Q \\<and> sa setinterleaves ((t, u), insert tick (ev ` A))\n  \\<forall>c.\n     c \\<in> Y \\<longrightarrow>\n     (\\<forall>t1 u1.\n         sa @\n         [c] setinterleaves ((t1, u1), insert tick\n  (ev ` A)) \\<longrightarrow>\n         ((t1, {}) \\<in> F P \\<longrightarrow> (u1, {}) \\<notin> F Q) \\<and>\n         ((t1, {}) \\<in> F Q \\<longrightarrow> (u1, {}) \\<notin> F P))\n  \\<lbrakk>sa setinterleaves ((t, u), insert tick (ev ` A));\n   y1 \\<notin> insert tick (ev ` A)\\<rbrakk>\n  \\<Longrightarrow> ((t @ [y1], {}) \\<in> F P \\<longrightarrow>\n                     sa @\n                     [y1] setinterleaves ((t @\n     [y1], u), insert tick (ev ` A))) \\<and>\n                    ((u @ [y1], {}) \\<in> F Q \\<longrightarrow>\n                     sa @\n                     [y1] setinterleaves ((t, u @\n        [y1]), insert tick (ev ` A)))\n  y1 \\<in> Y2 \\<and>\n  ((t @ [y1], {}) \\<in> F P \\<or> (u @ [y1], {}) \\<in> F Q)\n  \\<lbrakk>sa setinterleaves ((t, u), insert tick (ev ` A));\n   y1 \\<notin> insert tick (ev ` A)\\<rbrakk>\n  \\<Longrightarrow> ((t @ [y1], {}) \\<in> F P \\<longrightarrow>\n                     sa @\n                     [y1] setinterleaves ((t @\n     [y1], u), insert tick (ev ` A))) \\<and>\n                    ((u @ [y1], {}) \\<in> F Q \\<longrightarrow>\n                     sa @\n                     [y1] setinterleaves ((t, u @\n        [y1]), insert tick (ev ` A)))", "show ?thesis"], ["proof (prove)\nusing this:\n  (t, Xa) \\<in> F P \\<and>\n  (u, Ya) \\<in> F Q \\<and> sa setinterleaves ((t, u), insert tick (ev ` A))\n  \\<forall>c.\n     c \\<in> Y \\<longrightarrow>\n     (\\<forall>t1 u1.\n         sa @\n         [c] setinterleaves ((t1, u1), insert tick\n  (ev ` A)) \\<longrightarrow>\n         ((t1, {}) \\<in> F P \\<longrightarrow> (u1, {}) \\<notin> F Q) \\<and>\n         ((t1, {}) \\<in> F Q \\<longrightarrow> (u1, {}) \\<notin> F P))\n  \\<lbrakk>sa setinterleaves ((t, u), insert tick (ev ` A));\n   y1 \\<notin> insert tick (ev ` A)\\<rbrakk>\n  \\<Longrightarrow> ((t @ [y1], {}) \\<in> F P \\<longrightarrow>\n                     sa @\n                     [y1] setinterleaves ((t @\n     [y1], u), insert tick (ev ` A))) \\<and>\n                    ((u @ [y1], {}) \\<in> F Q \\<longrightarrow>\n                     sa @\n                     [y1] setinterleaves ((t, u @\n        [y1]), insert tick (ev ` A)))\n  y1 \\<in> Y2 \\<and>\n  ((t @ [y1], {}) \\<in> F P \\<or> (u @ [y1], {}) \\<in> F Q)\n  \\<lbrakk>sa setinterleaves ((t, u), insert tick (ev ` A));\n   y1 \\<notin> insert tick (ev ` A)\\<rbrakk>\n  \\<Longrightarrow> ((t @ [y1], {}) \\<in> F P \\<longrightarrow>\n                     sa @\n                     [y1] setinterleaves ((t @\n     [y1], u), insert tick (ev ` A))) \\<and>\n                    ((u @ [y1], {}) \\<in> F Q \\<longrightarrow>\n                     sa @\n                     [y1] setinterleaves ((t, u @\n        [y1]), insert tick (ev ` A)))\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>Y2.\n       (t @ [y], {}) \\<notin> F P \\<and> (u @ [y], {}) \\<notin> F Q", "by (metis A1 DiffD1 innAAA is_processT4_empty)"], ["proof (state)\nthis:\n  \\<forall>y\\<in>Y2.\n     (t @ [y], {}) \\<notin> F P \\<and> (u @ [y], {}) \\<notin> F Q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(t, Xa) \\<in> F P \\<and>\n             (u, Ya) \\<in> F Q \\<and>\n             sa setinterleaves ((t, u), insert tick (ev ` A));\n     Y1 = Y \\<inter> insert tick (ev ` A) \\<and>\n     Y2 = Y - insert tick (ev ` A);\n     \\<not> (\\<exists>y\\<in>Y2.\n                (t @ [y], {}) \\<in> F P \\<or>\n                (u @ [y], {}) \\<in> F Q)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>y\\<in>Y2.\n                         (t @ [y], {}) \\<notin> F P \\<and>\n                         (u @ [y], {}) \\<notin> F Q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>(t, Xa) \\<in> F P \\<and>\n             (u, Ya) \\<in> F Q \\<and>\n             sa setinterleaves ((t, u), insert tick (ev ` A));\n     Y1 = Y \\<inter> insert tick (ev ` A) \\<and>\n     Y2 = Y - insert tick (ev ` A);\n     \\<not> (\\<exists>y\\<in>Y2.\n                (t @ [y], {}) \\<in> F P \\<or>\n                (u @ [y], {}) \\<in> F Q)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>y\\<in>Y2.\n                         (t @ [y], {}) \\<notin> F P \\<and>\n                         (u @ [y], {}) \\<notin> F Q", "case False"], ["proof (state)\nthis:\n  \\<not> (\\<exists>y\\<in>Y2.\n             (t @ [y], {}) \\<in> F P \\<or> (u @ [y], {}) \\<in> F Q)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(t, Xa) \\<in> F P \\<and>\n             (u, Ya) \\<in> F Q \\<and>\n             sa setinterleaves ((t, u), insert tick (ev ` A));\n     Y1 = Y \\<inter> insert tick (ev ` A) \\<and>\n     Y2 = Y - insert tick (ev ` A);\n     \\<not> (\\<exists>y\\<in>Y2.\n                (t @ [y], {}) \\<in> F P \\<or>\n                (u @ [y], {}) \\<in> F Q)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>y\\<in>Y2.\n                         (t @ [y], {}) \\<notin> F P \\<and>\n                         (u @ [y], {}) \\<notin> F Q", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<exists>y\\<in>Y2.\n             (t @ [y], {}) \\<in> F P \\<or> (u @ [y], {}) \\<in> F Q)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>y\\<in>Y2.\n             (t @ [y], {}) \\<in> F P \\<or> (u @ [y], {}) \\<in> F Q)\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>Y2.\n       (t @ [y], {}) \\<notin> F P \\<and> (u @ [y], {}) \\<notin> F Q", "by blast"], ["proof (state)\nthis:\n  \\<forall>y\\<in>Y2.\n     (t @ [y], {}) \\<notin> F P \\<and> (u @ [y], {}) \\<notin> F Q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>y\\<in>Y2.\n     (t @ [y], {}) \\<notin> F P \\<and> (u @ [y], {}) \\<notin> F Q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(t, Xa) \\<in> F P \\<and>\n             (u, Ya) \\<in> F Q \\<and>\n             sa setinterleaves ((t, u), insert tick (ev ` A));\n     \\<forall>c.\n        c \\<in> Y \\<longrightarrow>\n        (\\<forall>t1 u1.\n            sa @\n            [c] setinterleaves ((t1, u1), insert tick\n     (ev ` A)) \\<longrightarrow>\n            ((t1, {}) \\<in> F P \\<longrightarrow>\n             (u1, {}) \\<notin> F Q) \\<and>\n            ((t1, {}) \\<in> F Q \\<longrightarrow>\n             (u1, {}) \\<notin> F P))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t2 u2 Xb.\n                         (t2, Xb) \\<in> F P \\<and>\n                         (\\<exists>Yb.\n                             (u2, Yb) \\<in> F Q \\<and>\n                             sa setinterleaves ((t2, u2), insert tick\n                     (ev ` A)) \\<and>\n                             (Xa \\<union> Ya) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xa \\<inter> Ya \\<union>\n                             Y =\n                             (Xb \\<union> Yb) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xb \\<inter> Yb)", "from A1  A2"], ["proof (chain)\npicking this:\n  Y1 = Y \\<inter> insert tick (ev ` A) \\<and> Y2 = Y - insert tick (ev ` A)\n  Z1 = Y1 \\<inter> {z. (t @ [z], {}) \\<notin> F P} \\<and>\n  Z2 = Y1 - {z. (t @ [z], {}) \\<notin> F P}", "obtain Xbb where B1: \"Xbb=(Xa\\<union>Z1\\<union>Y2)\""], ["proof (prove)\nusing this:\n  Y1 = Y \\<inter> insert tick (ev ` A) \\<and> Y2 = Y - insert tick (ev ` A)\n  Z1 = Y1 \\<inter> {z. (t @ [z], {}) \\<notin> F P} \\<and>\n  Z2 = Y1 - {z. (t @ [z], {}) \\<notin> F P}\n\ngoal (1 subgoal):\n 1. (\\<And>Xbb.\n        Xbb = Xa \\<union> Z1 \\<union> Y2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Xbb = Xa \\<union> Z1 \\<union> Y2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(t, Xa) \\<in> F P \\<and>\n             (u, Ya) \\<in> F Q \\<and>\n             sa setinterleaves ((t, u), insert tick (ev ` A));\n     \\<forall>c.\n        c \\<in> Y \\<longrightarrow>\n        (\\<forall>t1 u1.\n            sa @\n            [c] setinterleaves ((t1, u1), insert tick\n     (ev ` A)) \\<longrightarrow>\n            ((t1, {}) \\<in> F P \\<longrightarrow>\n             (u1, {}) \\<notin> F Q) \\<and>\n            ((t1, {}) \\<in> F Q \\<longrightarrow>\n             (u1, {}) \\<notin> F P))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t2 u2 Xb.\n                         (t2, Xb) \\<in> F P \\<and>\n                         (\\<exists>Yb.\n                             (u2, Yb) \\<in> F Q \\<and>\n                             sa setinterleaves ((t2, u2), insert tick\n                     (ev ` A)) \\<and>\n                             (Xa \\<union> Ya) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xa \\<inter> Ya \\<union>\n                             Y =\n                             (Xb \\<union> Yb) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xb \\<inter> Yb)", "from A B1 A3 A43"], ["proof (chain)\npicking this:\n  (t, Xa) \\<in> F P \\<and>\n  (u, Ya) \\<in> F Q \\<and> sa setinterleaves ((t, u), insert tick (ev ` A))\n  Xbb = Xa \\<union> Z1 \\<union> Y2\n  (t, Z1) \\<in> F P\n  \\<forall>y\\<in>Y2.\n     (t @ [y], {}) \\<notin> F P \\<and> (u @ [y], {}) \\<notin> F Q", "have A5: \"(t, Xbb)\\<in> F P\""], ["proof (prove)\nusing this:\n  (t, Xa) \\<in> F P \\<and>\n  (u, Ya) \\<in> F Q \\<and> sa setinterleaves ((t, u), insert tick (ev ` A))\n  Xbb = Xa \\<union> Z1 \\<union> Y2\n  (t, Z1) \\<in> F P\n  \\<forall>y\\<in>Y2.\n     (t @ [y], {}) \\<notin> F P \\<and> (u @ [y], {}) \\<notin> F Q\n\ngoal (1 subgoal):\n 1. (t, Xbb) \\<in> F P", "by (meson BAA is_processT5_S1)"], ["proof (state)\nthis:\n  (t, Xbb) \\<in> F P\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(t, Xa) \\<in> F P \\<and>\n             (u, Ya) \\<in> F Q \\<and>\n             sa setinterleaves ((t, u), insert tick (ev ` A));\n     \\<forall>c.\n        c \\<in> Y \\<longrightarrow>\n        (\\<forall>t1 u1.\n            sa @\n            [c] setinterleaves ((t1, u1), insert tick\n     (ev ` A)) \\<longrightarrow>\n            ((t1, {}) \\<in> F P \\<longrightarrow>\n             (u1, {}) \\<notin> F Q) \\<and>\n            ((t1, {}) \\<in> F Q \\<longrightarrow>\n             (u1, {}) \\<notin> F P))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t2 u2 Xb.\n                         (t2, Xb) \\<in> F P \\<and>\n                         (\\<exists>Yb.\n                             (u2, Yb) \\<in> F Q \\<and>\n                             sa setinterleaves ((t2, u2), insert tick\n                     (ev ` A)) \\<and>\n                             (Xa \\<union> Ya) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xa \\<inter> Ya \\<union>\n                             Y =\n                             (Xb \\<union> Yb) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xb \\<inter> Yb)", "from A1 A2"], ["proof (chain)\npicking this:\n  Y1 = Y \\<inter> insert tick (ev ` A) \\<and> Y2 = Y - insert tick (ev ` A)\n  Z1 = Y1 \\<inter> {z. (t @ [z], {}) \\<notin> F P} \\<and>\n  Z2 = Y1 - {z. (t @ [z], {}) \\<notin> F P}", "obtain Ybb where B2: \"Ybb=(Ya\\<union>Z2\\<union>Y2)\""], ["proof (prove)\nusing this:\n  Y1 = Y \\<inter> insert tick (ev ` A) \\<and> Y2 = Y - insert tick (ev ` A)\n  Z1 = Y1 \\<inter> {z. (t @ [z], {}) \\<notin> F P} \\<and>\n  Z2 = Y1 - {z. (t @ [z], {}) \\<notin> F P}\n\ngoal (1 subgoal):\n 1. (\\<And>Ybb.\n        Ybb = Ya \\<union> Z2 \\<union> Y2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Ybb = Ya \\<union> Z2 \\<union> Y2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(t, Xa) \\<in> F P \\<and>\n             (u, Ya) \\<in> F Q \\<and>\n             sa setinterleaves ((t, u), insert tick (ev ` A));\n     \\<forall>c.\n        c \\<in> Y \\<longrightarrow>\n        (\\<forall>t1 u1.\n            sa @\n            [c] setinterleaves ((t1, u1), insert tick\n     (ev ` A)) \\<longrightarrow>\n            ((t1, {}) \\<in> F P \\<longrightarrow>\n             (u1, {}) \\<notin> F Q) \\<and>\n            ((t1, {}) \\<in> F Q \\<longrightarrow>\n             (u1, {}) \\<notin> F P))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t2 u2 Xb.\n                         (t2, Xb) \\<in> F P \\<and>\n                         (\\<exists>Yb.\n                             (u2, Yb) \\<in> F Q \\<and>\n                             sa setinterleaves ((t2, u2), insert tick\n                     (ev ` A)) \\<and>\n                             (Xa \\<union> Ya) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xa \\<inter> Ya \\<union>\n                             Y =\n                             (Xb \\<union> Yb) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xb \\<inter> Yb)", "from A B"], ["proof (chain)\npicking this:\n  (t, Xa) \\<in> F P \\<and>\n  (u, Ya) \\<in> F Q \\<and> sa setinterleaves ((t, u), insert tick (ev ` A))\n  \\<forall>c.\n     c \\<in> Y \\<longrightarrow>\n     (\\<forall>t1 u1.\n         sa @\n         [c] setinterleaves ((t1, u1), insert tick\n  (ev ` A)) \\<longrightarrow>\n         ((t1, {}) \\<in> F P \\<longrightarrow> (u1, {}) \\<notin> F Q) \\<and>\n         ((t1, {}) \\<in> F Q \\<longrightarrow> (u1, {}) \\<notin> F P))", "have A52: \"(u, Ybb)\\<in> F Q\""], ["proof (prove)\nusing this:\n  (t, Xa) \\<in> F P \\<and>\n  (u, Ya) \\<in> F Q \\<and> sa setinterleaves ((t, u), insert tick (ev ` A))\n  \\<forall>c.\n     c \\<in> Y \\<longrightarrow>\n     (\\<forall>t1 u1.\n         sa @\n         [c] setinterleaves ((t1, u1), insert tick\n  (ev ` A)) \\<longrightarrow>\n         ((t1, {}) \\<in> F P \\<longrightarrow> (u1, {}) \\<notin> F Q) \\<and>\n         ((t1, {}) \\<in> F Q \\<longrightarrow> (u1, {}) \\<notin> F P))\n\ngoal (1 subgoal):\n 1. (u, Ybb) \\<in> F Q", "by (metis A43 B2 BAAA is_processT5_S1)"], ["proof (state)\nthis:\n  (u, Ybb) \\<in> F Q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(t, Xa) \\<in> F P \\<and>\n             (u, Ya) \\<in> F Q \\<and>\n             sa setinterleaves ((t, u), insert tick (ev ` A));\n     \\<forall>c.\n        c \\<in> Y \\<longrightarrow>\n        (\\<forall>t1 u1.\n            sa @\n            [c] setinterleaves ((t1, u1), insert tick\n     (ev ` A)) \\<longrightarrow>\n            ((t1, {}) \\<in> F P \\<longrightarrow>\n             (u1, {}) \\<notin> F Q) \\<and>\n            ((t1, {}) \\<in> F Q \\<longrightarrow>\n             (u1, {}) \\<notin> F P))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t2 u2 Xb.\n                         (t2, Xb) \\<in> F P \\<and>\n                         (\\<exists>Yb.\n                             (u2, Yb) \\<in> F Q \\<and>\n                             sa setinterleaves ((t2, u2), insert tick\n                     (ev ` A)) \\<and>\n                             (Xa \\<union> Ya) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xa \\<inter> Ya \\<union>\n                             Y =\n                             (Xb \\<union> Yb) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xb \\<inter> Yb)", "from A1 A2"], ["proof (chain)\npicking this:\n  Y1 = Y \\<inter> insert tick (ev ` A) \\<and> Y2 = Y - insert tick (ev ` A)\n  Z1 = Y1 \\<inter> {z. (t @ [z], {}) \\<notin> F P} \\<and>\n  Z2 = Y1 - {z. (t @ [z], {}) \\<notin> F P}", "have A61: \"(Xbb \\<union> Ybb)\\<inter>insert tick (ev ` A)=((Xa\\<union>Ya\\<union>Y1\\<union>Y2) \\<inter> insert tick (ev ` A))\""], ["proof (prove)\nusing this:\n  Y1 = Y \\<inter> insert tick (ev ` A) \\<and> Y2 = Y - insert tick (ev ` A)\n  Z1 = Y1 \\<inter> {z. (t @ [z], {}) \\<notin> F P} \\<and>\n  Z2 = Y1 - {z. (t @ [z], {}) \\<notin> F P}\n\ngoal (1 subgoal):\n 1. (Xbb \\<union> Ybb) \\<inter> insert tick (ev ` A) =\n    (Xa \\<union> Ya \\<union> Y1 \\<union> Y2) \\<inter> insert tick (ev ` A)", "using B1 B2"], ["proof (prove)\nusing this:\n  Y1 = Y \\<inter> insert tick (ev ` A) \\<and> Y2 = Y - insert tick (ev ` A)\n  Z1 = Y1 \\<inter> {z. (t @ [z], {}) \\<notin> F P} \\<and>\n  Z2 = Y1 - {z. (t @ [z], {}) \\<notin> F P}\n  Xbb = Xa \\<union> Z1 \\<union> Y2\n  Ybb = Ya \\<union> Z2 \\<union> Y2\n\ngoal (1 subgoal):\n 1. (Xbb \\<union> Ybb) \\<inter> insert tick (ev ` A) =\n    (Xa \\<union> Ya \\<union> Y1 \\<union> Y2) \\<inter> insert tick (ev ` A)", "by blast"], ["proof (state)\nthis:\n  (Xbb \\<union> Ybb) \\<inter> insert tick (ev ` A) =\n  (Xa \\<union> Ya \\<union> Y1 \\<union> Y2) \\<inter> insert tick (ev ` A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(t, Xa) \\<in> F P \\<and>\n             (u, Ya) \\<in> F Q \\<and>\n             sa setinterleaves ((t, u), insert tick (ev ` A));\n     \\<forall>c.\n        c \\<in> Y \\<longrightarrow>\n        (\\<forall>t1 u1.\n            sa @\n            [c] setinterleaves ((t1, u1), insert tick\n     (ev ` A)) \\<longrightarrow>\n            ((t1, {}) \\<in> F P \\<longrightarrow>\n             (u1, {}) \\<notin> F Q) \\<and>\n            ((t1, {}) \\<in> F Q \\<longrightarrow>\n             (u1, {}) \\<notin> F P))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t2 u2 Xb.\n                         (t2, Xb) \\<in> F P \\<and>\n                         (\\<exists>Yb.\n                             (u2, Yb) \\<in> F Q \\<and>\n                             sa setinterleaves ((t2, u2), insert tick\n                     (ev ` A)) \\<and>\n                             (Xa \\<union> Ya) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xa \\<inter> Ya \\<union>\n                             Y =\n                             (Xb \\<union> Yb) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xb \\<inter> Yb)", "from A1"], ["proof (chain)\npicking this:\n  Y1 = Y \\<inter> insert tick (ev ` A) \\<and> Y2 = Y - insert tick (ev ` A)", "have A62: \"(Y1) \\<inter> insert tick (ev ` A)=Y1\""], ["proof (prove)\nusing this:\n  Y1 = Y \\<inter> insert tick (ev ` A) \\<and> Y2 = Y - insert tick (ev ` A)\n\ngoal (1 subgoal):\n 1. Y1 \\<inter> insert tick (ev ` A) = Y1", "using inf.orderE"], ["proof (prove)\nusing this:\n  Y1 = Y \\<inter> insert tick (ev ` A) \\<and> Y2 = Y - insert tick (ev ` A)\n  \\<lbrakk>?a \\<le> ?b; ?a = inf ?a ?b \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. Y1 \\<inter> insert tick (ev ` A) = Y1", "by auto"], ["proof (state)\nthis:\n  Y1 \\<inter> insert tick (ev ` A) = Y1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(t, Xa) \\<in> F P \\<and>\n             (u, Ya) \\<in> F Q \\<and>\n             sa setinterleaves ((t, u), insert tick (ev ` A));\n     \\<forall>c.\n        c \\<in> Y \\<longrightarrow>\n        (\\<forall>t1 u1.\n            sa @\n            [c] setinterleaves ((t1, u1), insert tick\n     (ev ` A)) \\<longrightarrow>\n            ((t1, {}) \\<in> F P \\<longrightarrow>\n             (u1, {}) \\<notin> F Q) \\<and>\n            ((t1, {}) \\<in> F Q \\<longrightarrow>\n             (u1, {}) \\<notin> F P))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t2 u2 Xb.\n                         (t2, Xb) \\<in> F P \\<and>\n                         (\\<exists>Yb.\n                             (u2, Yb) \\<in> F Q \\<and>\n                             sa setinterleaves ((t2, u2), insert tick\n                     (ev ` A)) \\<and>\n                             (Xa \\<union> Ya) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xa \\<inter> Ya \\<union>\n                             Y =\n                             (Xb \\<union> Yb) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xb \\<inter> Yb)", "from A1"], ["proof (chain)\npicking this:\n  Y1 = Y \\<inter> insert tick (ev ` A) \\<and> Y2 = Y - insert tick (ev ` A)", "have A63: \"(Y2) \\<inter> insert tick (ev ` A)={}\""], ["proof (prove)\nusing this:\n  Y1 = Y \\<inter> insert tick (ev ` A) \\<and> Y2 = Y - insert tick (ev ` A)\n\ngoal (1 subgoal):\n 1. Y2 \\<inter> insert tick (ev ` A) = {}", "by (simp add: AA1 Int_commute)"], ["proof (state)\nthis:\n  Y2 \\<inter> insert tick (ev ` A) = {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(t, Xa) \\<in> F P \\<and>\n             (u, Ya) \\<in> F Q \\<and>\n             sa setinterleaves ((t, u), insert tick (ev ` A));\n     \\<forall>c.\n        c \\<in> Y \\<longrightarrow>\n        (\\<forall>t1 u1.\n            sa @\n            [c] setinterleaves ((t1, u1), insert tick\n     (ev ` A)) \\<longrightarrow>\n            ((t1, {}) \\<in> F P \\<longrightarrow>\n             (u1, {}) \\<notin> F Q) \\<and>\n            ((t1, {}) \\<in> F Q \\<longrightarrow>\n             (u1, {}) \\<notin> F P))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t2 u2 Xb.\n                         (t2, Xb) \\<in> F P \\<and>\n                         (\\<exists>Yb.\n                             (u2, Yb) \\<in> F Q \\<and>\n                             sa setinterleaves ((t2, u2), insert tick\n                     (ev ` A)) \\<and>\n                             (Xa \\<union> Ya) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xa \\<inter> Ya \\<union>\n                             Y =\n                             (Xb \\<union> Yb) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xb \\<inter> Yb)", "from A61 A62 A63"], ["proof (chain)\npicking this:\n  (Xbb \\<union> Ybb) \\<inter> insert tick (ev ` A) =\n  (Xa \\<union> Ya \\<union> Y1 \\<union> Y2) \\<inter> insert tick (ev ` A)\n  Y1 \\<inter> insert tick (ev ` A) = Y1\n  Y2 \\<inter> insert tick (ev ` A) = {}", "have A64:\"((Xa\\<union>Ya\\<union>Y1\\<union>Y2)\\<inter>insert tick(ev `A))=((Xa\\<union>Ya)\\<inter>insert tick(ev `A)\\<union>Y1)\""], ["proof (prove)\nusing this:\n  (Xbb \\<union> Ybb) \\<inter> insert tick (ev ` A) =\n  (Xa \\<union> Ya \\<union> Y1 \\<union> Y2) \\<inter> insert tick (ev ` A)\n  Y1 \\<inter> insert tick (ev ` A) = Y1\n  Y2 \\<inter> insert tick (ev ` A) = {}\n\ngoal (1 subgoal):\n 1. (Xa \\<union> Ya \\<union> Y1 \\<union> Y2) \\<inter> insert tick (ev ` A) =\n    (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union> Y1", "by (simp add: Int_Un_distrib2)"], ["proof (state)\nthis:\n  (Xa \\<union> Ya \\<union> Y1 \\<union> Y2) \\<inter> insert tick (ev ` A) =\n  (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union> Y1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(t, Xa) \\<in> F P \\<and>\n             (u, Ya) \\<in> F Q \\<and>\n             sa setinterleaves ((t, u), insert tick (ev ` A));\n     \\<forall>c.\n        c \\<in> Y \\<longrightarrow>\n        (\\<forall>t1 u1.\n            sa @\n            [c] setinterleaves ((t1, u1), insert tick\n     (ev ` A)) \\<longrightarrow>\n            ((t1, {}) \\<in> F P \\<longrightarrow>\n             (u1, {}) \\<notin> F Q) \\<and>\n            ((t1, {}) \\<in> F Q \\<longrightarrow>\n             (u1, {}) \\<notin> F P))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t2 u2 Xb.\n                         (t2, Xb) \\<in> F P \\<and>\n                         (\\<exists>Yb.\n                             (u2, Yb) \\<in> F Q \\<and>\n                             sa setinterleaves ((t2, u2), insert tick\n                     (ev ` A)) \\<and>\n                             (Xa \\<union> Ya) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xa \\<inter> Ya \\<union>\n                             Y =\n                             (Xb \\<union> Yb) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xb \\<inter> Yb)", "from AA1 BA B1 B2"], ["proof (chain)\npicking this:\n  Y1 \\<union> Y2 = Y\n  Y1 = Z1 \\<union> Z2\n  Xbb = Xa \\<union> Z1 \\<union> Y2\n  Ybb = Ya \\<union> Z2 \\<union> Y2", "have A65: \"(Xbb\\<inter>Ybb)\\<subseteq>((Xa\\<inter>Ya)\\<union>Y) \""], ["proof (prove)\nusing this:\n  Y1 \\<union> Y2 = Y\n  Y1 = Z1 \\<union> Z2\n  Xbb = Xa \\<union> Z1 \\<union> Y2\n  Ybb = Ya \\<union> Z2 \\<union> Y2\n\ngoal (1 subgoal):\n 1. Xbb \\<inter> Ybb \\<subseteq> Xa \\<inter> Ya \\<union> Y", "by auto"], ["proof (state)\nthis:\n  Xbb \\<inter> Ybb \\<subseteq> Xa \\<inter> Ya \\<union> Y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(t, Xa) \\<in> F P \\<and>\n             (u, Ya) \\<in> F Q \\<and>\n             sa setinterleaves ((t, u), insert tick (ev ` A));\n     \\<forall>c.\n        c \\<in> Y \\<longrightarrow>\n        (\\<forall>t1 u1.\n            sa @\n            [c] setinterleaves ((t1, u1), insert tick\n     (ev ` A)) \\<longrightarrow>\n            ((t1, {}) \\<in> F P \\<longrightarrow>\n             (u1, {}) \\<notin> F Q) \\<and>\n            ((t1, {}) \\<in> F Q \\<longrightarrow>\n             (u1, {}) \\<notin> F P))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t2 u2 Xb.\n                         (t2, Xb) \\<in> F P \\<and>\n                         (\\<exists>Yb.\n                             (u2, Yb) \\<in> F Q \\<and>\n                             sa setinterleaves ((t2, u2), insert tick\n                     (ev ` A)) \\<and>\n                             (Xa \\<union> Ya) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xa \\<inter> Ya \\<union>\n                             Y =\n                             (Xb \\<union> Yb) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xb \\<inter> Yb)", "from AA1 BA B1 B2"], ["proof (chain)\npicking this:\n  Y1 \\<union> Y2 = Y\n  Y1 = Z1 \\<union> Z2\n  Xbb = Xa \\<union> Z1 \\<union> Y2\n  Ybb = Ya \\<union> Z2 \\<union> Y2", "have A66:\"(Xbb\\<inter>Ybb)\\<supseteq>((Xa\\<inter>Ya)\\<union>Y2)\""], ["proof (prove)\nusing this:\n  Y1 \\<union> Y2 = Y\n  Y1 = Z1 \\<union> Z2\n  Xbb = Xa \\<union> Z1 \\<union> Y2\n  Ybb = Ya \\<union> Z2 \\<union> Y2\n\ngoal (1 subgoal):\n 1. Xa \\<inter> Ya \\<union> Y2 \\<subseteq> Xbb \\<inter> Ybb", "by auto"], ["proof (state)\nthis:\n  Xa \\<inter> Ya \\<union> Y2 \\<subseteq> Xbb \\<inter> Ybb\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(t, Xa) \\<in> F P \\<and>\n             (u, Ya) \\<in> F Q \\<and>\n             sa setinterleaves ((t, u), insert tick (ev ` A));\n     \\<forall>c.\n        c \\<in> Y \\<longrightarrow>\n        (\\<forall>t1 u1.\n            sa @\n            [c] setinterleaves ((t1, u1), insert tick\n     (ev ` A)) \\<longrightarrow>\n            ((t1, {}) \\<in> F P \\<longrightarrow>\n             (u1, {}) \\<notin> F Q) \\<and>\n            ((t1, {}) \\<in> F Q \\<longrightarrow>\n             (u1, {}) \\<notin> F P))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t2 u2 Xb.\n                         (t2, Xb) \\<in> F P \\<and>\n                         (\\<exists>Yb.\n                             (u2, Yb) \\<in> F Q \\<and>\n                             sa setinterleaves ((t2, u2), insert tick\n                     (ev ` A)) \\<and>\n                             (Xa \\<union> Ya) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xa \\<inter> Ya \\<union>\n                             Y =\n                             (Xb \\<union> Yb) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xb \\<inter> Yb)", "from A1 A2"], ["proof (chain)\npicking this:\n  Y1 = Y \\<inter> insert tick (ev ` A) \\<and> Y2 = Y - insert tick (ev ` A)\n  Z1 = Y1 \\<inter> {z. (t @ [z], {}) \\<notin> F P} \\<and>\n  Z2 = Y1 - {z. (t @ [z], {}) \\<notin> F P}", "have A66: \"((Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union> Xa \\<inter> Ya \\<union> Y) = ((Xbb \\<union> Ybb) \\<inter> \n    insert tick (ev ` A) \\<union> Xbb \\<inter> Ybb)\""], ["proof (prove)\nusing this:\n  Y1 = Y \\<inter> insert tick (ev ` A) \\<and> Y2 = Y - insert tick (ev ` A)\n  Z1 = Y1 \\<inter> {z. (t @ [z], {}) \\<notin> F P} \\<and>\n  Z2 = Y1 - {z. (t @ [z], {}) \\<notin> F P}\n\ngoal (1 subgoal):\n 1. (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n    Xa \\<inter> Ya \\<union>\n    Y =\n    (Xbb \\<union> Ybb) \\<inter> insert tick (ev ` A) \\<union>\n    Xbb \\<inter> Ybb", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>Y1 = Y \\<inter> insert tick (ev ` A) \\<and>\n             Y2 = Y - insert tick (ev ` A);\n     Z1 = Y1 \\<inter> {z. (t @ [z], {}) \\<notin> F P} \\<and>\n     Z2 = Y1 - {z. (t @ [z], {}) \\<notin> F P}\\<rbrakk>\n    \\<Longrightarrow> (Xa \\<union> Ya) \\<inter>\n                      insert tick (ev ` A) \\<union>\n                      Xa \\<inter> Ya \\<union>\n                      Y =\n                      (Xbb \\<union> Ybb) \\<inter>\n                      insert tick (ev ` A) \\<union>\n                      Xbb \\<inter> Ybb", "have f1: \"(Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union> Xa \\<inter> Ya \\<union> Y = Y \\<union> Xa \\<inter> Ya \\<union> ((Xa \\<union> Ya) \\<inter> \n      insert tick (ev ` A) \\<union> Xbb \\<inter> Ybb)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n    Xa \\<inter> Ya \\<union>\n    Y =\n    Y \\<union> Xa \\<inter> Ya \\<union>\n    ((Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n     Xbb \\<inter> Ybb)", "using A65"], ["proof (prove)\nusing this:\n  Xbb \\<inter> Ybb \\<subseteq> Xa \\<inter> Ya \\<union> Y\n\ngoal (1 subgoal):\n 1. (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n    Xa \\<inter> Ya \\<union>\n    Y =\n    Y \\<union> Xa \\<inter> Ya \\<union>\n    ((Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n     Xbb \\<inter> Ybb)", "by auto"], ["proof (state)\nthis:\n  (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n  Xa \\<inter> Ya \\<union>\n  Y =\n  Y \\<union> Xa \\<inter> Ya \\<union>\n  ((Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union> Xbb \\<inter> Ybb)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Y1 = Y \\<inter> insert tick (ev ` A) \\<and>\n             Y2 = Y - insert tick (ev ` A);\n     Z1 = Y1 \\<inter> {z. (t @ [z], {}) \\<notin> F P} \\<and>\n     Z2 = Y1 - {z. (t @ [z], {}) \\<notin> F P}\\<rbrakk>\n    \\<Longrightarrow> (Xa \\<union> Ya) \\<inter>\n                      insert tick (ev ` A) \\<union>\n                      Xa \\<inter> Ya \\<union>\n                      Y =\n                      (Xbb \\<union> Ybb) \\<inter>\n                      insert tick (ev ` A) \\<union>\n                      Xbb \\<inter> Ybb", "have \"Xa \\<inter> Ya \\<union> Y2 \\<union> Xbb \\<inter> Ybb = Xbb \\<inter> Ybb\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Xa \\<inter> Ya \\<union> Y2 \\<union> Xbb \\<inter> Ybb = Xbb \\<inter> Ybb", "by (meson A66 le_iff_sup)"], ["proof (state)\nthis:\n  Xa \\<inter> Ya \\<union> Y2 \\<union> Xbb \\<inter> Ybb = Xbb \\<inter> Ybb\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Y1 = Y \\<inter> insert tick (ev ` A) \\<and>\n             Y2 = Y - insert tick (ev ` A);\n     Z1 = Y1 \\<inter> {z. (t @ [z], {}) \\<notin> F P} \\<and>\n     Z2 = Y1 - {z. (t @ [z], {}) \\<notin> F P}\\<rbrakk>\n    \\<Longrightarrow> (Xa \\<union> Ya) \\<inter>\n                      insert tick (ev ` A) \\<union>\n                      Xa \\<inter> Ya \\<union>\n                      Y =\n                      (Xbb \\<union> Ybb) \\<inter>\n                      insert tick (ev ` A) \\<union>\n                      Xbb \\<inter> Ybb", "then"], ["proof (chain)\npicking this:\n  Xa \\<inter> Ya \\<union> Y2 \\<union> Xbb \\<inter> Ybb = Xbb \\<inter> Ybb", "have \"(Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union> Xa \\<inter> Ya \\<union> Y = Xbb \\<inter> Ybb \\<union> ((Xa \\<union> Ya) \\<inter> \n      insert tick (ev ` A) \\<union> Y1)\""], ["proof (prove)\nusing this:\n  Xa \\<inter> Ya \\<union> Y2 \\<union> Xbb \\<inter> Ybb = Xbb \\<inter> Ybb\n\ngoal (1 subgoal):\n 1. (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n    Xa \\<inter> Ya \\<union>\n    Y =\n    Xbb \\<inter> Ybb \\<union>\n    ((Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union> Y1)", "using f1 A1"], ["proof (prove)\nusing this:\n  Xa \\<inter> Ya \\<union> Y2 \\<union> Xbb \\<inter> Ybb = Xbb \\<inter> Ybb\n  (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n  Xa \\<inter> Ya \\<union>\n  Y =\n  Y \\<union> Xa \\<inter> Ya \\<union>\n  ((Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union> Xbb \\<inter> Ybb)\n  Y1 = Y \\<inter> insert tick (ev ` A) \\<and> Y2 = Y - insert tick (ev ` A)\n\ngoal (1 subgoal):\n 1. (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n    Xa \\<inter> Ya \\<union>\n    Y =\n    Xbb \\<inter> Ybb \\<union>\n    ((Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union> Y1)", "by auto"], ["proof (state)\nthis:\n  (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n  Xa \\<inter> Ya \\<union>\n  Y =\n  Xbb \\<inter> Ybb \\<union>\n  ((Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union> Y1)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Y1 = Y \\<inter> insert tick (ev ` A) \\<and>\n             Y2 = Y - insert tick (ev ` A);\n     Z1 = Y1 \\<inter> {z. (t @ [z], {}) \\<notin> F P} \\<and>\n     Z2 = Y1 - {z. (t @ [z], {}) \\<notin> F P}\\<rbrakk>\n    \\<Longrightarrow> (Xa \\<union> Ya) \\<inter>\n                      insert tick (ev ` A) \\<union>\n                      Xa \\<inter> Ya \\<union>\n                      Y =\n                      (Xbb \\<union> Ybb) \\<inter>\n                      insert tick (ev ` A) \\<union>\n                      Xbb \\<inter> Ybb", "then"], ["proof (chain)\npicking this:\n  (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n  Xa \\<inter> Ya \\<union>\n  Y =\n  Xbb \\<inter> Ybb \\<union>\n  ((Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union> Y1)", "show ?thesis"], ["proof (prove)\nusing this:\n  (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n  Xa \\<inter> Ya \\<union>\n  Y =\n  Xbb \\<inter> Ybb \\<union>\n  ((Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union> Y1)\n\ngoal (1 subgoal):\n 1. (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n    Xa \\<inter> Ya \\<union>\n    Y =\n    (Xbb \\<union> Ybb) \\<inter> insert tick (ev ` A) \\<union>\n    Xbb \\<inter> Ybb", "using A61 A64"], ["proof (prove)\nusing this:\n  (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n  Xa \\<inter> Ya \\<union>\n  Y =\n  Xbb \\<inter> Ybb \\<union>\n  ((Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union> Y1)\n  (Xbb \\<union> Ybb) \\<inter> insert tick (ev ` A) =\n  (Xa \\<union> Ya \\<union> Y1 \\<union> Y2) \\<inter> insert tick (ev ` A)\n  (Xa \\<union> Ya \\<union> Y1 \\<union> Y2) \\<inter> insert tick (ev ` A) =\n  (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union> Y1\n\ngoal (1 subgoal):\n 1. (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n    Xa \\<inter> Ya \\<union>\n    Y =\n    (Xbb \\<union> Ybb) \\<inter> insert tick (ev ` A) \\<union>\n    Xbb \\<inter> Ybb", "by force"], ["proof (state)\nthis:\n  (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n  Xa \\<inter> Ya \\<union>\n  Y =\n  (Xbb \\<union> Ybb) \\<inter> insert tick (ev ` A) \\<union> Xbb \\<inter> Ybb\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n  Xa \\<inter> Ya \\<union>\n  Y =\n  (Xbb \\<union> Ybb) \\<inter> insert tick (ev ` A) \\<union> Xbb \\<inter> Ybb\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(t, Xa) \\<in> F P \\<and>\n             (u, Ya) \\<in> F Q \\<and>\n             sa setinterleaves ((t, u), insert tick (ev ` A));\n     \\<forall>c.\n        c \\<in> Y \\<longrightarrow>\n        (\\<forall>t1 u1.\n            sa @\n            [c] setinterleaves ((t1, u1), insert tick\n     (ev ` A)) \\<longrightarrow>\n            ((t1, {}) \\<in> F P \\<longrightarrow>\n             (u1, {}) \\<notin> F Q) \\<and>\n            ((t1, {}) \\<in> F Q \\<longrightarrow>\n             (u1, {}) \\<notin> F P))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t2 u2 Xb.\n                         (t2, Xb) \\<in> F P \\<and>\n                         (\\<exists>Yb.\n                             (u2, Yb) \\<in> F Q \\<and>\n                             sa setinterleaves ((t2, u2), insert tick\n                     (ev ` A)) \\<and>\n                             (Xa \\<union> Ya) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xa \\<inter> Ya \\<union>\n                             Y =\n                             (Xb \\<union> Yb) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             Xb \\<inter> Yb)", "with A5 A52 A66"], ["proof (chain)\npicking this:\n  (t, Xbb) \\<in> F P\n  (u, Ybb) \\<in> F Q\n  (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n  Xa \\<inter> Ya \\<union>\n  Y =\n  (Xbb \\<union> Ybb) \\<inter> insert tick (ev ` A) \\<union> Xbb \\<inter> Ybb\n  (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n  Xa \\<inter> Ya \\<union>\n  Y =\n  (Xbb \\<union> Ybb) \\<inter> insert tick (ev ` A) \\<union> Xbb \\<inter> Ybb", "show ?thesis"], ["proof (prove)\nusing this:\n  (t, Xbb) \\<in> F P\n  (u, Ybb) \\<in> F Q\n  (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n  Xa \\<inter> Ya \\<union>\n  Y =\n  (Xbb \\<union> Ybb) \\<inter> insert tick (ev ` A) \\<union> Xbb \\<inter> Ybb\n  (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n  Xa \\<inter> Ya \\<union>\n  Y =\n  (Xbb \\<union> Ybb) \\<inter> insert tick (ev ` A) \\<union> Xbb \\<inter> Ybb\n\ngoal (1 subgoal):\n 1. \\<exists>t2 u2 Xb.\n       (t2, Xb) \\<in> F P \\<and>\n       (\\<exists>Yb.\n           (u2, Yb) \\<in> F Q \\<and>\n           sa setinterleaves ((t2, u2), insert tick (ev ` A)) \\<and>\n           (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n           Xa \\<inter> Ya \\<union>\n           Y =\n           (Xb \\<union> Yb) \\<inter> insert tick (ev ` A) \\<union>\n           Xb \\<inter> Yb)", "using local.A"], ["proof (prove)\nusing this:\n  (t, Xbb) \\<in> F P\n  (u, Ybb) \\<in> F Q\n  (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n  Xa \\<inter> Ya \\<union>\n  Y =\n  (Xbb \\<union> Ybb) \\<inter> insert tick (ev ` A) \\<union> Xbb \\<inter> Ybb\n  (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n  Xa \\<inter> Ya \\<union>\n  Y =\n  (Xbb \\<union> Ybb) \\<inter> insert tick (ev ` A) \\<union> Xbb \\<inter> Ybb\n  (t, Xa) \\<in> F P \\<and>\n  (u, Ya) \\<in> F Q \\<and> sa setinterleaves ((t, u), insert tick (ev ` A))\n\ngoal (1 subgoal):\n 1. \\<exists>t2 u2 Xb.\n       (t2, Xb) \\<in> F P \\<and>\n       (\\<exists>Yb.\n           (u2, Yb) \\<in> F Q \\<and>\n           sa setinterleaves ((t2, u2), insert tick (ev ` A)) \\<and>\n           (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n           Xa \\<inter> Ya \\<union>\n           Y =\n           (Xb \\<union> Yb) \\<inter> insert tick (ev ` A) \\<union>\n           Xb \\<inter> Yb)", "by blast"], ["proof (state)\nthis:\n  \\<exists>t2 u2 Xb.\n     (t2, Xb) \\<in> F P \\<and>\n     (\\<exists>Yb.\n         (u2, Yb) \\<in> F Q \\<and>\n         sa setinterleaves ((t2, u2), insert tick (ev ` A)) \\<and>\n         (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n         Xa \\<inter> Ya \\<union>\n         Y =\n         (Xb \\<union> Yb) \\<inter> insert tick (ev ` A) \\<union>\n         Xb \\<inter> Yb)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>t2 u2 Xb.\n     (t2, Xb) \\<in> F P \\<and>\n     (\\<exists>Yb.\n         (u2, Yb) \\<in> F Q \\<and>\n         sa setinterleaves ((t2, u2), insert tick (ev ` A)) \\<and>\n         (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n         Xa \\<inter> Ya \\<union>\n         Y =\n         (Xb \\<union> Yb) \\<inter> insert tick (ev ` A) \\<union>\n         Xb \\<inter> Yb)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pt3: \"ta \\<in> T P \\<Longrightarrow>u \\<in> T Q \\<Longrightarrow> (s @ t) setinterleaves ((ta, u), insert tick (ev ` A))\\<Longrightarrow>\n        \\<exists>t u X. (t, X) \\<in> F P \\<and>(\\<exists>Y. (u, Y) \\<in> F Q \\<and>s setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n                 tick \\<notin> X \\<and> tick \\<notin> Y \\<and> (X \\<union> Y) \\<inter> ev ` A = {} \\<and> X \\<inter> Y = {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ta \\<in> T P; u \\<in> T Q;\n     s @ t setinterleaves ((ta, u), insert tick (ev ` A))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u X.\n                         (t, X) \\<in> F P \\<and>\n                         (\\<exists>Y.\n                             (u, Y) \\<in> F Q \\<and>\n                             s setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                             tick \\<notin> X \\<and>\n                             tick \\<notin> Y \\<and>\n                             (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                             X \\<inter> Y = {})", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>ta \\<in> T P; u \\<in> T Q;\n     s @ t setinterleaves ((ta, u), insert tick (ev ` A))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u X.\n                         (t, X) \\<in> F P \\<and>\n                         (\\<exists>Y.\n                             (u, Y) \\<in> F Q \\<and>\n                             s setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                             tick \\<notin> X \\<and>\n                             tick \\<notin> Y \\<and>\n                             (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                             X \\<inter> Y = {})", "assume a1: \"ta \\<in> T P\""], ["proof (state)\nthis:\n  ta \\<in> T P\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ta \\<in> T P; u \\<in> T Q;\n     s @ t setinterleaves ((ta, u), insert tick (ev ` A))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u X.\n                         (t, X) \\<in> F P \\<and>\n                         (\\<exists>Y.\n                             (u, Y) \\<in> F Q \\<and>\n                             s setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                             tick \\<notin> X \\<and>\n                             tick \\<notin> Y \\<and>\n                             (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                             X \\<inter> Y = {})", "assume a2: \"u \\<in> T Q\""], ["proof (state)\nthis:\n  u \\<in> T Q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ta \\<in> T P; u \\<in> T Q;\n     s @ t setinterleaves ((ta, u), insert tick (ev ` A))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u X.\n                         (t, X) \\<in> F P \\<and>\n                         (\\<exists>Y.\n                             (u, Y) \\<in> F Q \\<and>\n                             s setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                             tick \\<notin> X \\<and>\n                             tick \\<notin> Y \\<and>\n                             (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                             X \\<inter> Y = {})", "assume a3: \"(s @ t) setinterleaves ((ta, u), insert tick (ev ` A))\""], ["proof (state)\nthis:\n  s @ t setinterleaves ((ta, u), insert tick (ev ` A))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ta \\<in> T P; u \\<in> T Q;\n     s @ t setinterleaves ((ta, u), insert tick (ev ` A))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u X.\n                         (t, X) \\<in> F P \\<and>\n                         (\\<exists>Y.\n                             (u, Y) \\<in> F Q \\<and>\n                             s setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                             tick \\<notin> X \\<and>\n                             tick \\<notin> Y \\<and>\n                             (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                             X \\<inter> Y = {})", "have aa: \"ta \\<in> T P \\<Longrightarrow>u \\<in> T Q \\<Longrightarrow> (s @ t) setinterleaves ((ta, u), insert tick (ev ` A))\\<Longrightarrow>\n                \\<exists>t u. t \\<in> T P \\<and>(u \\<in> T Q \\<and>s setinterleaves ((t, u), insert tick (ev ` A)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ta \\<in> T P; u \\<in> T Q;\n     s @ t setinterleaves ((ta, u), insert tick (ev ` A))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         t \\<in> T P \\<and>\n                         u \\<in> T Q \\<and>\n                         s setinterleaves ((t, u), insert tick (ev ` A))", "using is_processT3_ST_pref synPrefix"], ["proof (prove)\nusing this:\n  \\<lbrakk>?t \\<in> T ?P; ?s \\<le> ?t\\<rbrakk>\n  \\<Longrightarrow> ?s \\<in> T ?P\n  \\<exists>t1 u1.\n     ?s @ ?t setinterleaves ((?ta, ?u), ?A) \\<longrightarrow>\n     t1 \\<le> ?ta \\<and> u1 \\<le> ?u \\<and> ?s setinterleaves ((t1, u1), ?A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ta \\<in> T P; u \\<in> T Q;\n     s @ t setinterleaves ((ta, u), insert tick (ev ` A))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         t \\<in> T P \\<and>\n                         u \\<in> T Q \\<and>\n                         s setinterleaves ((t, u), insert tick (ev ` A))", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>ta \\<in> T P; u \\<in> T Q;\n   s @ t setinterleaves ((ta, u), insert tick (ev ` A))\\<rbrakk>\n  \\<Longrightarrow> \\<exists>t u.\n                       t \\<in> T P \\<and>\n                       u \\<in> T Q \\<and>\n                       s setinterleaves ((t, u), insert tick (ev ` A))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ta \\<in> T P; u \\<in> T Q;\n     s @ t setinterleaves ((ta, u), insert tick (ev ` A))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u X.\n                         (t, X) \\<in> F P \\<and>\n                         (\\<exists>Y.\n                             (u, Y) \\<in> F Q \\<and>\n                             s setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                             tick \\<notin> X \\<and>\n                             tick \\<notin> Y \\<and>\n                             (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                             X \\<inter> Y = {})", "thus \"\\<exists>t u X. (t, X) \\<in> F P \\<and>(\\<exists>Y. (u, Y) \\<in> F Q \\<and>s setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n                 tick \\<notin> X \\<and> tick \\<notin> Y \\<and> (X \\<union> Y) \\<inter> ev ` A = {} \\<and> X \\<inter> Y = {})\""], ["proof (prove)\nusing this:\n  \\<lbrakk>ta \\<in> T P; u \\<in> T Q;\n   s @ t setinterleaves ((ta, u), insert tick (ev ` A))\\<rbrakk>\n  \\<Longrightarrow> \\<exists>t u.\n                       t \\<in> T P \\<and>\n                       u \\<in> T Q \\<and>\n                       s setinterleaves ((t, u), insert tick (ev ` A))\n\ngoal (1 subgoal):\n 1. \\<exists>t u X.\n       (t, X) \\<in> F P \\<and>\n       (\\<exists>Y.\n           (u, Y) \\<in> F Q \\<and>\n           s setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           tick \\<notin> X \\<and>\n           tick \\<notin> Y \\<and>\n           (X \\<union> Y) \\<inter> ev ` A = {} \\<and> X \\<inter> Y = {})", "using NF_NT a1 a2 a3"], ["proof (prove)\nusing this:\n  \\<lbrakk>ta \\<in> T P; u \\<in> T Q;\n   s @ t setinterleaves ((ta, u), insert tick (ev ` A))\\<rbrakk>\n  \\<Longrightarrow> \\<exists>t u.\n                       t \\<in> T P \\<and>\n                       u \\<in> T Q \\<and>\n                       s setinterleaves ((t, u), insert tick (ev ` A))\n  (?s, {}) \\<notin> F ?P \\<Longrightarrow> ?s \\<notin> T ?P\n  ta \\<in> T P\n  u \\<in> T Q\n  s @ t setinterleaves ((ta, u), insert tick (ev ` A))\n\ngoal (1 subgoal):\n 1. \\<exists>t u X.\n       (t, X) \\<in> F P \\<and>\n       (\\<exists>Y.\n           (u, Y) \\<in> F Q \\<and>\n           s setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           tick \\<notin> X \\<and>\n           tick \\<notin> Y \\<and>\n           (X \\<union> Y) \\<inter> ev ` A = {} \\<and> X \\<inter> Y = {})", "by blast"], ["proof (state)\nthis:\n  \\<exists>t u X.\n     (t, X) \\<in> F P \\<and>\n     (\\<exists>Y.\n         (u, Y) \\<in> F Q \\<and>\n         s setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n         tick \\<notin> X \\<and>\n         tick \\<notin> Y \\<and>\n         (X \\<union> Y) \\<inter> ev ` A = {} \\<and> X \\<inter> Y = {})\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sync_maintains_is_process:\n \"is_process ({(s,R).\\<exists> t u X Y. (t,X) \\<in> F P \\<and> (u,Y) \\<in> F Q \\<and> \n                                     (s setinterleaves ((t,u),(ev`A) \\<union> {tick})) \\<and> \n                                     R = (X \\<union> Y) \\<inter> ((ev`A) \\<union> {tick}) \\<union> X \\<inter> Y} \\<union> \n                   {(s,R).\\<exists> t u r v. front_tickFree v \\<and> (tickFree r \\<or> v=[]) \\<and> \n                                     s = r@v \\<and> \n                                     (r setinterleaves ((t,u),(ev`A) \\<union> {tick})) \\<and>      \n          (t \\<in> D P \\<and> u \\<in> T Q \\<or> t \\<in> D Q \\<and> u \\<in> T P)},\n\n                   {s.    \\<exists> t u r v. front_tickFree v \\<and> (tickFree r \\<or> v=[]) \\<and> \n                                     s = r@v \\<and> \n                                     (r setinterleaves ((t,u),(ev`A) \\<union> {tick})) \\<and> \n                                     (t \\<in> D P \\<and> u \\<in> T Q \\<or> t \\<in> D Q \\<and> u \\<in> T P)})\"\n                    (is \"is_process(?f, ?d)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_process\n     ({(s, R).\n       \\<exists>t u X Y.\n          (t, X) \\<in> F P \\<and>\n          (u, Y) \\<in> F Q \\<and>\n          s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n          R =\n          (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n          X \\<inter> Y} \\<union>\n      {(s, R).\n       \\<exists>t u r v.\n          front_tickFree v \\<and>\n          (tickFree r \\<or> v = []) \\<and>\n          s = r @ v \\<and>\n          r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n          (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n           t \\<in> D Q \\<and> u \\<in> T P)},\n      {s. \\<exists>t u r v.\n             front_tickFree v \\<and>\n             (tickFree r \\<or> v = []) \\<and>\n             s = r @ v \\<and>\n             r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n             (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n              t \\<in> D Q \\<and> u \\<in> T P)})", "proof(simp only: fst_conv snd_conv F_def is_process_def FAILURES_def DIVERGENCES_def,\n      fold FAILURES_def DIVERGENCES_def,fold F_def,intro conjI)"], ["proof (state)\ngoal (9 subgoals):\n 1. ([], {})\n    \\<in> {(s, R).\n           \\<exists>t u X Y.\n              (t, X) \\<in> F P \\<and>\n              (u, Y) \\<in> F Q \\<and>\n              s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n              R =\n              (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n              X \\<inter> Y} \\<union>\n          {(s, R).\n           \\<exists>t u r v.\n              front_tickFree v \\<and>\n              (tickFree r \\<or> v = []) \\<and>\n              s = r @ v \\<and>\n              r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n              (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n               t \\<in> D Q \\<and> u \\<in> T P)}\n 2. \\<forall>s X.\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       front_tickFree s\n 3. \\<forall>s t.\n       (s @ t, {})\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       (s, {})\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 4. \\<forall>s X Y.\n       (s, Y)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<and>\n       X \\<subseteq> Y \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 5. \\<forall>s X Y.\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<and>\n       (\\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (s @ [c], {})\n           \\<notin> {(s, R).\n                     \\<exists>t u X Y.\n                        (t, X) \\<in> F P \\<and>\n                        (u, Y) \\<in> F Q \\<and>\n                        s setinterleaves ((t, u), ev ` A \\<union>\n            {tick}) \\<and>\n                        R =\n                        (X \\<union> Y) \\<inter>\n                        (ev ` A \\<union> {tick}) \\<union>\n                        X \\<inter> Y} \\<union>\n                    {(s, R).\n                     \\<exists>t u r v.\n                        front_tickFree v \\<and>\n                        (tickFree r \\<or> v = []) \\<and>\n                        s = r @ v \\<and>\n                        r setinterleaves ((t, u), ev ` A \\<union>\n            {tick}) \\<and>\n                        (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                         t \\<in> D Q \\<and> u \\<in> T P)}) \\<longrightarrow>\n       (s, X \\<union> Y)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 6. \\<forall>s X.\n       (s @ [tick], {})\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       (s, X - {tick})\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 7. \\<forall>s t.\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)} \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t\n       \\<in> {s. \\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    s = r @ v \\<and>\n                    r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                    (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                     t \\<in> D Q \\<and> u \\<in> T P)}\n 8. \\<forall>s X.\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 9. \\<forall>s.\n       s @ [tick]\n       \\<in> {s. \\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    s = r @ v \\<and>\n                    r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                    (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                     t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)}", "show \"([], {}) \\<in> ?f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([], {})\n    \\<in> {(s, R).\n           \\<exists>t u X Y.\n              (t, X) \\<in> F P \\<and>\n              (u, Y) \\<in> F Q \\<and>\n              s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n              R =\n              (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n              X \\<inter> Y} \\<union>\n          {(s, R).\n           \\<exists>t u r v.\n              front_tickFree v \\<and>\n              (tickFree r \\<or> v = []) \\<and>\n              s = r @ v \\<and>\n              r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n              (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n               t \\<in> D Q \\<and> u \\<in> T P)}", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>t u.\n       [] setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n       (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n       (t \\<in> D Q \\<longrightarrow> u \\<notin> T P) \\<Longrightarrow>\n    \\<exists>t u X.\n       (t, X) \\<in> F P \\<and>\n       (\\<exists>Y.\n           (u, Y) \\<in> F Q \\<and>\n           [] setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           tick \\<notin> X \\<and>\n           tick \\<notin> Y \\<and>\n           (X \\<union> Y) \\<inter> ev ` A = {} \\<and> X \\<inter> Y = {})", "by (metis Int_commute Int_empty_right Sync.si_empty1 Un_empty empty_iff insert_iff is_processT1)"], ["proof (state)\nthis:\n  ([], {})\n  \\<in> {(s, R).\n         \\<exists>t u X Y.\n            (t, X) \\<in> F P \\<and>\n            (u, Y) \\<in> F Q \\<and>\n            s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n            R =\n            (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n            X \\<inter> Y} \\<union>\n        {(s, R).\n         \\<exists>t u r v.\n            front_tickFree v \\<and>\n            (tickFree r \\<or> v = []) \\<and>\n            s = r @ v \\<and>\n            r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n            (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n             t \\<in> D Q \\<and> u \\<in> T P)}\n\ngoal (8 subgoals):\n 1. \\<forall>s X.\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       front_tickFree s\n 2. \\<forall>s t.\n       (s @ t, {})\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       (s, {})\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 3. \\<forall>s X Y.\n       (s, Y)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<and>\n       X \\<subseteq> Y \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 4. \\<forall>s X Y.\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<and>\n       (\\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (s @ [c], {})\n           \\<notin> {(s, R).\n                     \\<exists>t u X Y.\n                        (t, X) \\<in> F P \\<and>\n                        (u, Y) \\<in> F Q \\<and>\n                        s setinterleaves ((t, u), ev ` A \\<union>\n            {tick}) \\<and>\n                        R =\n                        (X \\<union> Y) \\<inter>\n                        (ev ` A \\<union> {tick}) \\<union>\n                        X \\<inter> Y} \\<union>\n                    {(s, R).\n                     \\<exists>t u r v.\n                        front_tickFree v \\<and>\n                        (tickFree r \\<or> v = []) \\<and>\n                        s = r @ v \\<and>\n                        r setinterleaves ((t, u), ev ` A \\<union>\n            {tick}) \\<and>\n                        (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                         t \\<in> D Q \\<and> u \\<in> T P)}) \\<longrightarrow>\n       (s, X \\<union> Y)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 5. \\<forall>s X.\n       (s @ [tick], {})\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       (s, X - {tick})\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 6. \\<forall>s t.\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)} \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t\n       \\<in> {s. \\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    s = r @ v \\<and>\n                    r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                    (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                     t \\<in> D Q \\<and> u \\<in> T P)}\n 7. \\<forall>s X.\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 8. \\<forall>s.\n       s @ [tick]\n       \\<in> {s. \\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    s = r @ v \\<and>\n                    r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                    (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                     t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)}", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<forall>s X.\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       front_tickFree s\n 2. \\<forall>s t.\n       (s @ t, {})\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       (s, {})\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 3. \\<forall>s X Y.\n       (s, Y)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<and>\n       X \\<subseteq> Y \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 4. \\<forall>s X Y.\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<and>\n       (\\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (s @ [c], {})\n           \\<notin> {(s, R).\n                     \\<exists>t u X Y.\n                        (t, X) \\<in> F P \\<and>\n                        (u, Y) \\<in> F Q \\<and>\n                        s setinterleaves ((t, u), ev ` A \\<union>\n            {tick}) \\<and>\n                        R =\n                        (X \\<union> Y) \\<inter>\n                        (ev ` A \\<union> {tick}) \\<union>\n                        X \\<inter> Y} \\<union>\n                    {(s, R).\n                     \\<exists>t u r v.\n                        front_tickFree v \\<and>\n                        (tickFree r \\<or> v = []) \\<and>\n                        s = r @ v \\<and>\n                        r setinterleaves ((t, u), ev ` A \\<union>\n            {tick}) \\<and>\n                        (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                         t \\<in> D Q \\<and> u \\<in> T P)}) \\<longrightarrow>\n       (s, X \\<union> Y)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 5. \\<forall>s X.\n       (s @ [tick], {})\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       (s, X - {tick})\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 6. \\<forall>s t.\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)} \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t\n       \\<in> {s. \\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    s = r @ v \\<and>\n                    r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                    (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                     t \\<in> D Q \\<and> u \\<in> T P)}\n 7. \\<forall>s X.\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 8. \\<forall>s.\n       s @ [tick]\n       \\<in> {s. \\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    s = r @ v \\<and>\n                    r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                    (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                     t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)}", "show \" \\<forall>s X. (s, X) \\<in> ?f \\<longrightarrow> front_tickFree s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s X.\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       front_tickFree s", "apply (auto simp:is_processT2 append_T_imp_tickFree front_tickFree_append D_imp_front_tickFree)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s t u Xa Y.\n       \\<lbrakk>(t, Xa) \\<in> F P; (u, Y) \\<in> F Q;\n        s setinterleaves ((t, u), insert tick (ev ` A))\\<rbrakk>\n       \\<Longrightarrow> front_tickFree s\n 2. \\<And>t u r.\n       \\<lbrakk>r setinterleaves ((t, u), insert tick (ev ` A));\n        t \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> front_tickFree r\n 3. \\<And>t u r.\n       \\<lbrakk>r setinterleaves ((t, u), insert tick (ev ` A));\n        t \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> front_tickFree r", "using ftf_syn is_processT2"], ["proof (prove)\nusing this:\n  \\<lbrakk>front_tickFree ?u; front_tickFree ?t;\n   ?s setinterleaves ((?t, ?u), insert tick (ev ` ?A))\\<rbrakk>\n  \\<Longrightarrow> front_tickFree ?s\n  \\<forall>s X. (s, X) \\<in> F ?P \\<longrightarrow> front_tickFree s\n\ngoal (3 subgoals):\n 1. \\<And>s t u Xa Y.\n       \\<lbrakk>(t, Xa) \\<in> F P; (u, Y) \\<in> F Q;\n        s setinterleaves ((t, u), insert tick (ev ` A))\\<rbrakk>\n       \\<Longrightarrow> front_tickFree s\n 2. \\<And>t u r.\n       \\<lbrakk>r setinterleaves ((t, u), insert tick (ev ` A));\n        t \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> front_tickFree r\n 3. \\<And>t u r.\n       \\<lbrakk>r setinterleaves ((t, u), insert tick (ev ` A));\n        t \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> front_tickFree r", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t u r.\n       \\<lbrakk>r setinterleaves ((t, u), insert tick (ev ` A));\n        t \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> front_tickFree r\n 2. \\<And>t u r.\n       \\<lbrakk>r setinterleaves ((t, u), insert tick (ev ` A));\n        t \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> front_tickFree r", "using D_imp_front_tickFree ftf_syn is_processT2_TR"], ["proof (prove)\nusing this:\n  ?s \\<in> D ?P \\<Longrightarrow> front_tickFree ?s\n  \\<lbrakk>front_tickFree ?u; front_tickFree ?t;\n   ?s setinterleaves ((?t, ?u), insert tick (ev ` ?A))\\<rbrakk>\n  \\<Longrightarrow> front_tickFree ?s\n  \\<forall>s. s \\<in> T ?P \\<longrightarrow> front_tickFree s\n\ngoal (2 subgoals):\n 1. \\<And>t u r.\n       \\<lbrakk>r setinterleaves ((t, u), insert tick (ev ` A));\n        t \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> front_tickFree r\n 2. \\<And>t u r.\n       \\<lbrakk>r setinterleaves ((t, u), insert tick (ev ` A));\n        t \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> front_tickFree r", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t u r.\n       \\<lbrakk>r setinterleaves ((t, u), insert tick (ev ` A));\n        t \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> front_tickFree r", "using D_imp_front_tickFree ftf_syn is_processT2_TR"], ["proof (prove)\nusing this:\n  ?s \\<in> D ?P \\<Longrightarrow> front_tickFree ?s\n  \\<lbrakk>front_tickFree ?u; front_tickFree ?t;\n   ?s setinterleaves ((?t, ?u), insert tick (ev ` ?A))\\<rbrakk>\n  \\<Longrightarrow> front_tickFree ?s\n  \\<forall>s. s \\<in> T ?P \\<longrightarrow> front_tickFree s\n\ngoal (1 subgoal):\n 1. \\<And>t u r.\n       \\<lbrakk>r setinterleaves ((t, u), insert tick (ev ` A));\n        t \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> front_tickFree r", "by blast"], ["proof (state)\nthis:\n  \\<forall>s X.\n     (s, X)\n     \\<in> {(s, R).\n            \\<exists>t u X Y.\n               (t, X) \\<in> F P \\<and>\n               (u, Y) \\<in> F Q \\<and>\n               s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n               R =\n               (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n               X \\<inter> Y} \\<union>\n           {(s, R).\n            \\<exists>t u r v.\n               front_tickFree v \\<and>\n               (tickFree r \\<or> v = []) \\<and>\n               s = r @ v \\<and>\n               r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n               (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n     front_tickFree s\n\ngoal (7 subgoals):\n 1. \\<forall>s t.\n       (s @ t, {})\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       (s, {})\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 2. \\<forall>s X Y.\n       (s, Y)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<and>\n       X \\<subseteq> Y \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 3. \\<forall>s X Y.\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<and>\n       (\\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (s @ [c], {})\n           \\<notin> {(s, R).\n                     \\<exists>t u X Y.\n                        (t, X) \\<in> F P \\<and>\n                        (u, Y) \\<in> F Q \\<and>\n                        s setinterleaves ((t, u), ev ` A \\<union>\n            {tick}) \\<and>\n                        R =\n                        (X \\<union> Y) \\<inter>\n                        (ev ` A \\<union> {tick}) \\<union>\n                        X \\<inter> Y} \\<union>\n                    {(s, R).\n                     \\<exists>t u r v.\n                        front_tickFree v \\<and>\n                        (tickFree r \\<or> v = []) \\<and>\n                        s = r @ v \\<and>\n                        r setinterleaves ((t, u), ev ` A \\<union>\n            {tick}) \\<and>\n                        (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                         t \\<in> D Q \\<and> u \\<in> T P)}) \\<longrightarrow>\n       (s, X \\<union> Y)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 4. \\<forall>s X.\n       (s @ [tick], {})\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       (s, X - {tick})\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 5. \\<forall>s t.\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)} \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t\n       \\<in> {s. \\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    s = r @ v \\<and>\n                    r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                    (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                     t \\<in> D Q \\<and> u \\<in> T P)}\n 6. \\<forall>s X.\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 7. \\<forall>s.\n       s @ [tick]\n       \\<in> {s. \\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    s = r @ v \\<and>\n                    r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                    (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                     t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)}", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<forall>s t.\n       (s @ t, {})\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       (s, {})\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 2. \\<forall>s X Y.\n       (s, Y)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<and>\n       X \\<subseteq> Y \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 3. \\<forall>s X Y.\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<and>\n       (\\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (s @ [c], {})\n           \\<notin> {(s, R).\n                     \\<exists>t u X Y.\n                        (t, X) \\<in> F P \\<and>\n                        (u, Y) \\<in> F Q \\<and>\n                        s setinterleaves ((t, u), ev ` A \\<union>\n            {tick}) \\<and>\n                        R =\n                        (X \\<union> Y) \\<inter>\n                        (ev ` A \\<union> {tick}) \\<union>\n                        X \\<inter> Y} \\<union>\n                    {(s, R).\n                     \\<exists>t u r v.\n                        front_tickFree v \\<and>\n                        (tickFree r \\<or> v = []) \\<and>\n                        s = r @ v \\<and>\n                        r setinterleaves ((t, u), ev ` A \\<union>\n            {tick}) \\<and>\n                        (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                         t \\<in> D Q \\<and> u \\<in> T P)}) \\<longrightarrow>\n       (s, X \\<union> Y)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 4. \\<forall>s X.\n       (s @ [tick], {})\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       (s, X - {tick})\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 5. \\<forall>s t.\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)} \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t\n       \\<in> {s. \\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    s = r @ v \\<and>\n                    r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                    (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                     t \\<in> D Q \\<and> u \\<in> T P)}\n 6. \\<forall>s X.\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 7. \\<forall>s.\n       s @ [tick]\n       \\<in> {s. \\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    s = r @ v \\<and>\n                    r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                    (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                     t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)}", "show \"\\<forall>s t. (s @ t, {}) \\<in> ?f \\<longrightarrow> (s, {}) \\<in> ?f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s t.\n       (s @ t, {})\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       (s, {})\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}", "apply auto"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>s t ta u X Y.\n       \\<lbrakk>(ta, X) \\<in> F P; (u, Y) \\<in> F Q;\n        s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        tick \\<notin> X; tick \\<notin> Y;\n        (X \\<union> Y) \\<inter> ev ` A = {}; X \\<inter> Y = {};\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 2. \\<And>s t ta u r v.\n       \\<lbrakk>front_tickFree v; s @ t = r @ v;\n        r setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 3. \\<And>s t ta u r v.\n       \\<lbrakk>front_tickFree v; s @ t = r @ v;\n        r setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 4. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 5. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})", "apply(drule F_T)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>s t ta u X Y.\n       \\<lbrakk>(u, Y) \\<in> F Q;\n        s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        tick \\<notin> X; tick \\<notin> Y;\n        (X \\<union> Y) \\<inter> ev ` A = {}; X \\<inter> Y = {};\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 2. \\<And>s t ta u r v.\n       \\<lbrakk>front_tickFree v; s @ t = r @ v;\n        r setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 3. \\<And>s t ta u r v.\n       \\<lbrakk>front_tickFree v; s @ t = r @ v;\n        r setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 4. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 5. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})", "apply(drule F_T)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>s t ta u X Y.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        tick \\<notin> X; tick \\<notin> Y;\n        (X \\<union> Y) \\<inter> ev ` A = {}; X \\<inter> Y = {};\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> T P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 2. \\<And>s t ta u r v.\n       \\<lbrakk>front_tickFree v; s @ t = r @ v;\n        r setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 3. \\<And>s t ta u r v.\n       \\<lbrakk>front_tickFree v; s @ t = r @ v;\n        r setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 4. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 5. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})", "proof(goal_cases)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>s t ta u X Y.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        tick \\<notin> X; tick \\<notin> Y;\n        (X \\<union> Y) \\<inter> ev ` A = {}; X \\<inter> Y = {};\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> T P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 2. \\<And>s t ta u r v.\n       \\<lbrakk>front_tickFree v; s @ t = r @ v;\n        r setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 3. \\<And>s t ta u r v.\n       \\<lbrakk>front_tickFree v; s @ t = r @ v;\n        r setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 4. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 5. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})", "case (1 s t ta u X Y)"], ["proof (state)\nthis:\n  s @ t setinterleaves ((ta, u), insert tick (ev ` A))\n  tick \\<notin> X\n  tick \\<notin> Y\n  (X \\<union> Y) \\<inter> ev ` A = {}\n  X \\<inter> Y = {}\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         s = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n         (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n         (t \\<in> D Q \\<longrightarrow> u \\<notin> T P))\n  ta \\<in> T P\n  u \\<in> T Q\n\ngoal (5 subgoals):\n 1. \\<And>s t ta u X Y.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        tick \\<notin> X; tick \\<notin> Y;\n        (X \\<union> Y) \\<inter> ev ` A = {}; X \\<inter> Y = {};\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> T P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 2. \\<And>s t ta u r v.\n       \\<lbrakk>front_tickFree v; s @ t = r @ v;\n        r setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 3. \\<And>s t ta u r v.\n       \\<lbrakk>front_tickFree v; s @ t = r @ v;\n        r setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 4. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 5. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})", "then"], ["proof (chain)\npicking this:\n  s @ t setinterleaves ((ta, u), insert tick (ev ` A))\n  tick \\<notin> X\n  tick \\<notin> Y\n  (X \\<union> Y) \\<inter> ev ` A = {}\n  X \\<inter> Y = {}\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         s = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n         (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n         (t \\<in> D Q \\<longrightarrow> u \\<notin> T P))\n  ta \\<in> T P\n  u \\<in> T Q", "show ?case"], ["proof (prove)\nusing this:\n  s @ t setinterleaves ((ta, u), insert tick (ev ` A))\n  tick \\<notin> X\n  tick \\<notin> Y\n  (X \\<union> Y) \\<inter> ev ` A = {}\n  X \\<inter> Y = {}\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         s = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n         (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n         (t \\<in> D Q \\<longrightarrow> u \\<notin> T P))\n  ta \\<in> T P\n  u \\<in> T Q\n\ngoal (1 subgoal):\n 1. \\<exists>t u X.\n       (t, X) \\<in> F P \\<and>\n       (\\<exists>Y.\n           (u, Y) \\<in> F Q \\<and>\n           s setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           tick \\<notin> X \\<and>\n           tick \\<notin> Y \\<and>\n           (X \\<union> Y) \\<inter> ev ` A = {} \\<and> X \\<inter> Y = {})", "using pt3"], ["proof (prove)\nusing this:\n  s @ t setinterleaves ((ta, u), insert tick (ev ` A))\n  tick \\<notin> X\n  tick \\<notin> Y\n  (X \\<union> Y) \\<inter> ev ` A = {}\n  X \\<inter> Y = {}\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         s = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n         (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n         (t \\<in> D Q \\<longrightarrow> u \\<notin> T P))\n  ta \\<in> T P\n  u \\<in> T Q\n  \\<lbrakk>?ta \\<in> T ?P; ?u \\<in> T ?Q;\n   ?s @ ?t setinterleaves ((?ta, ?u), insert tick (ev ` ?A))\\<rbrakk>\n  \\<Longrightarrow> \\<exists>t u X.\n                       (t, X) \\<in> F ?P \\<and>\n                       (\\<exists>Y.\n                           (u, Y) \\<in> F ?Q \\<and>\n                           ?s setinterleaves ((t, u), insert tick\n                 (ev ` ?A)) \\<and>\n                           tick \\<notin> X \\<and>\n                           tick \\<notin> Y \\<and>\n                           (X \\<union> Y) \\<inter> ev ` ?A = {} \\<and>\n                           X \\<inter> Y = {})\n\ngoal (1 subgoal):\n 1. \\<exists>t u X.\n       (t, X) \\<in> F P \\<and>\n       (\\<exists>Y.\n           (u, Y) \\<in> F Q \\<and>\n           s setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           tick \\<notin> X \\<and>\n           tick \\<notin> Y \\<and>\n           (X \\<union> Y) \\<inter> ev ` A = {} \\<and> X \\<inter> Y = {})", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>t u X.\n     (t, X) \\<in> F P \\<and>\n     (\\<exists>Y.\n         (u, Y) \\<in> F Q \\<and>\n         s setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n         tick \\<notin> X \\<and>\n         tick \\<notin> Y \\<and>\n         (X \\<union> Y) \\<inter> ev ` A = {} \\<and> X \\<inter> Y = {})\n\ngoal (4 subgoals):\n 1. \\<And>s t ta u r v.\n       \\<lbrakk>front_tickFree v; s @ t = r @ v;\n        r setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 2. \\<And>s t ta u r v.\n       \\<lbrakk>front_tickFree v; s @ t = r @ v;\n        r setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 3. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 4. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>s t ta u r v.\n       \\<lbrakk>front_tickFree v; s @ t = r @ v;\n        r setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 2. \\<And>s t ta u r v.\n       \\<lbrakk>front_tickFree v; s @ t = r @ v;\n        r setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 3. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 4. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})", "case (2 s t ta u r v)"], ["proof (state)\nthis:\n  front_tickFree v\n  s @ t = r @ v\n  r setinterleaves ((ta, u), insert tick (ev ` A))\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         s = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n         (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n         (t \\<in> D Q \\<longrightarrow> u \\<notin> T P))\n  tickFree r\n  ta \\<in> D P\n  u \\<in> T Q\n\ngoal (4 subgoals):\n 1. \\<And>s t ta u r v.\n       \\<lbrakk>front_tickFree v; s @ t = r @ v;\n        r setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 2. \\<And>s t ta u r v.\n       \\<lbrakk>front_tickFree v; s @ t = r @ v;\n        r setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 3. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 4. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})", "have aa: \"front_tickFree v \\<Longrightarrow>s@t = r @ v \\<Longrightarrow> r setinterleaves ((ta, u), insert tick (ev ` A)) \\<Longrightarrow>\n  \\<forall>t u r. r setinterleaves ((t,u),insert tick(ev `A))\\<longrightarrow>(\\<forall>v. s=r@v\\<longrightarrow>front_tickFree v\\<longrightarrow>\\<not>tickFree r \n  \\<and> v\\<noteq>[]\\<or>(t \\<in> D P\\<longrightarrow>u \\<notin> T Q) \\<and> (t \\<in> D Q \\<longrightarrow> u \\<notin> T P)) \\<Longrightarrow>tickFree r \\<Longrightarrow>ta \\<in> D P \\<Longrightarrow>u \\<in> T Q \\<Longrightarrow>s<r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>front_tickFree v; s @ t = r @ v;\n     r setinterleaves ((ta, u), insert tick (ev ` A));\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        (\\<forall>v.\n            s = r @ v \\<longrightarrow>\n            front_tickFree v \\<longrightarrow>\n            \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n            (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n            (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n     tickFree r; ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n    \\<Longrightarrow> s < r", "apply(simp add: append_eq_append_conv2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>front_tickFree v;\n     \\<exists>us.\n        s = r @ us \\<and> us @ t = v \\<or> s @ us = r \\<and> t = us @ v;\n     r setinterleaves ((ta, u), insert tick (ev ` A));\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        (\\<forall>v.\n            s = r @ v \\<longrightarrow>\n            front_tickFree v \\<longrightarrow>\n            \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n            (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n            (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n     tickFree r; ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n    \\<Longrightarrow> s < r", "by (metis append_Nil2 front_tickFree_Nil front_tickFree_dw_closed le_list_def less_list_def)"], ["proof (state)\nthis:\n  \\<lbrakk>front_tickFree v; s @ t = r @ v;\n   r setinterleaves ((ta, u), insert tick (ev ` A));\n   \\<forall>t u r.\n      r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n      (\\<forall>v.\n          s = r @ v \\<longrightarrow>\n          front_tickFree v \\<longrightarrow>\n          \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n          (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n          (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n   tickFree r; ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n  \\<Longrightarrow> s < r\n\ngoal (4 subgoals):\n 1. \\<And>s t ta u r v.\n       \\<lbrakk>front_tickFree v; s @ t = r @ v;\n        r setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 2. \\<And>s t ta u r v.\n       \\<lbrakk>front_tickFree v; s @ t = r @ v;\n        r setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 3. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 4. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})", "from 2(1,2,3,4,5,6,7) Sync.sym aa"], ["proof (chain)\npicking this:\n  front_tickFree v\n  s @ t = r @ v\n  r setinterleaves ((ta, u), insert tick (ev ` A))\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         s = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n         (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n         (t \\<in> D Q \\<longrightarrow> u \\<notin> T P))\n  tickFree r\n  ta \\<in> D P\n  u \\<in> T Q\n  setinterleaving (?s, ?X, ?t) = setinterleaving (?t, ?X, ?s)\n  \\<lbrakk>front_tickFree v; s @ t = r @ v;\n   r setinterleaves ((ta, u), insert tick (ev ` A));\n   \\<forall>t u r.\n      r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n      (\\<forall>v.\n          s = r @ v \\<longrightarrow>\n          front_tickFree v \\<longrightarrow>\n          \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n          (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n          (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n   tickFree r; ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n  \\<Longrightarrow> s < r", "have a1: \"s<r\""], ["proof (prove)\nusing this:\n  front_tickFree v\n  s @ t = r @ v\n  r setinterleaves ((ta, u), insert tick (ev ` A))\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         s = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n         (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n         (t \\<in> D Q \\<longrightarrow> u \\<notin> T P))\n  tickFree r\n  ta \\<in> D P\n  u \\<in> T Q\n  setinterleaving (?s, ?X, ?t) = setinterleaving (?t, ?X, ?s)\n  \\<lbrakk>front_tickFree v; s @ t = r @ v;\n   r setinterleaves ((ta, u), insert tick (ev ` A));\n   \\<forall>t u r.\n      r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n      (\\<forall>v.\n          s = r @ v \\<longrightarrow>\n          front_tickFree v \\<longrightarrow>\n          \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n          (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n          (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n   tickFree r; ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n  \\<Longrightarrow> s < r\n\ngoal (1 subgoal):\n 1. s < r", "by blast"], ["proof (state)\nthis:\n  s < r\n\ngoal (4 subgoals):\n 1. \\<And>s t ta u r v.\n       \\<lbrakk>front_tickFree v; s @ t = r @ v;\n        r setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 2. \\<And>s t ta u r v.\n       \\<lbrakk>front_tickFree v; s @ t = r @ v;\n        r setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 3. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 4. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})", "have aaa: \"r setinterleaves ((ta, u), insert tick (ev ` A)) \\<Longrightarrow>tickFree r \\<Longrightarrow>ta \\<in> D P \\<Longrightarrow>\n  u \\<in> T Q \\<Longrightarrow>s<r\\<Longrightarrow>\\<exists>t u X. (t, X) \\<in> F P \\<and>(\\<exists>Y. (u, Y) \\<in> F Q \\<and>s setinterleaves \n  ((t, u), insert tick (ev ` A)) \\<and>tick \\<notin> X \\<and> tick \\<notin> Y \\<and> (X \\<union> Y) \\<inter> ev ` A = {} \\<and> X \\<inter> Y = {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r setinterleaves ((ta, u), insert tick (ev ` A)); tickFree r;\n     ta \\<in> D P; u \\<in> T Q; s < r\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u X.\n                         (t, X) \\<in> F P \\<and>\n                         (\\<exists>Y.\n                             (u, Y) \\<in> F Q \\<and>\n                             s setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                             tick \\<notin> X \\<and>\n                             tick \\<notin> Y \\<and>\n                             (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                             X \\<inter> Y = {})", "apply(drule D_T)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r setinterleaves ((ta, u), insert tick (ev ` A)); tickFree r;\n     u \\<in> T Q; s < r; ta \\<in> T P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u X.\n                         (t, X) \\<in> F P \\<and>\n                         (\\<exists>Y.\n                             (u, Y) \\<in> F Q \\<and>\n                             s setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                             tick \\<notin> X \\<and>\n                             tick \\<notin> Y \\<and>\n                             (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                             X \\<inter> Y = {})", "apply(simp add: le_list_def less_list_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r setinterleaves ((ta, u), insert tick (ev ` A)); tickFree r;\n     u \\<in> T Q; (\\<exists>ra. s @ ra = r) \\<and> s \\<noteq> r;\n     ta \\<in> T P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u X.\n                         (t, X) \\<in> F P \\<and>\n                         (\\<exists>Y.\n                             (u, Y) \\<in> F Q \\<and>\n                             s setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                             tick \\<notin> X \\<and>\n                             tick \\<notin> Y \\<and>\n                             (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                             X \\<inter> Y = {})", "using Sync.sym pt3"], ["proof (prove)\nusing this:\n  setinterleaving (?s, ?X, ?t) = setinterleaving (?t, ?X, ?s)\n  \\<lbrakk>?ta \\<in> T ?P; ?u \\<in> T ?Q;\n   ?s @ ?t setinterleaves ((?ta, ?u), insert tick (ev ` ?A))\\<rbrakk>\n  \\<Longrightarrow> \\<exists>t u X.\n                       (t, X) \\<in> F ?P \\<and>\n                       (\\<exists>Y.\n                           (u, Y) \\<in> F ?Q \\<and>\n                           ?s setinterleaves ((t, u), insert tick\n                 (ev ` ?A)) \\<and>\n                           tick \\<notin> X \\<and>\n                           tick \\<notin> Y \\<and>\n                           (X \\<union> Y) \\<inter> ev ` ?A = {} \\<and>\n                           X \\<inter> Y = {})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r setinterleaves ((ta, u), insert tick (ev ` A)); tickFree r;\n     u \\<in> T Q; (\\<exists>ra. s @ ra = r) \\<and> s \\<noteq> r;\n     ta \\<in> T P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u X.\n                         (t, X) \\<in> F P \\<and>\n                         (\\<exists>Y.\n                             (u, Y) \\<in> F Q \\<and>\n                             s setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                             tick \\<notin> X \\<and>\n                             tick \\<notin> Y \\<and>\n                             (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                             X \\<inter> Y = {})", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>r setinterleaves ((ta, u), insert tick (ev ` A)); tickFree r;\n   ta \\<in> D P; u \\<in> T Q; s < r\\<rbrakk>\n  \\<Longrightarrow> \\<exists>t u X.\n                       (t, X) \\<in> F P \\<and>\n                       (\\<exists>Y.\n                           (u, Y) \\<in> F Q \\<and>\n                           s setinterleaves ((t, u), insert tick\n                (ev ` A)) \\<and>\n                           tick \\<notin> X \\<and>\n                           tick \\<notin> Y \\<and>\n                           (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                           X \\<inter> Y = {})\n\ngoal (4 subgoals):\n 1. \\<And>s t ta u r v.\n       \\<lbrakk>front_tickFree v; s @ t = r @ v;\n        r setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 2. \\<And>s t ta u r v.\n       \\<lbrakk>front_tickFree v; s @ t = r @ v;\n        r setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 3. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 4. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})", "have aab: \"\\<exists>t u X. (t, X) \\<in> F P \\<and>(\\<exists>Y. (u, Y) \\<in> F Q \\<and> s setinterleaves \n  ((t, u), insert tick (ev ` A)) \\<and> tick \\<notin> X \\<and> tick \\<notin> Y \\<and> (X \\<union> Y) \\<inter> ev ` A = {} \\<and> X \\<inter> Y = {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t u X.\n       (t, X) \\<in> F P \\<and>\n       (\\<exists>Y.\n           (u, Y) \\<in> F Q \\<and>\n           s setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           tick \\<notin> X \\<and>\n           tick \\<notin> Y \\<and>\n           (X \\<union> Y) \\<inter> ev ` A = {} \\<and> X \\<inter> Y = {})", "using 2(1,2,3,4,5,6,7) aa aaa Sync.sym"], ["proof (prove)\nusing this:\n  front_tickFree v\n  s @ t = r @ v\n  r setinterleaves ((ta, u), insert tick (ev ` A))\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         s = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n         (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n         (t \\<in> D Q \\<longrightarrow> u \\<notin> T P))\n  tickFree r\n  ta \\<in> D P\n  u \\<in> T Q\n  \\<lbrakk>front_tickFree v; s @ t = r @ v;\n   r setinterleaves ((ta, u), insert tick (ev ` A));\n   \\<forall>t u r.\n      r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n      (\\<forall>v.\n          s = r @ v \\<longrightarrow>\n          front_tickFree v \\<longrightarrow>\n          \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n          (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n          (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n   tickFree r; ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n  \\<Longrightarrow> s < r\n  \\<lbrakk>r setinterleaves ((ta, u), insert tick (ev ` A)); tickFree r;\n   ta \\<in> D P; u \\<in> T Q; s < r\\<rbrakk>\n  \\<Longrightarrow> \\<exists>t u X.\n                       (t, X) \\<in> F P \\<and>\n                       (\\<exists>Y.\n                           (u, Y) \\<in> F Q \\<and>\n                           s setinterleaves ((t, u), insert tick\n                (ev ` A)) \\<and>\n                           tick \\<notin> X \\<and>\n                           tick \\<notin> Y \\<and>\n                           (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                           X \\<inter> Y = {})\n  setinterleaving (?s, ?X, ?t) = setinterleaving (?t, ?X, ?s)\n\ngoal (1 subgoal):\n 1. \\<exists>t u X.\n       (t, X) \\<in> F P \\<and>\n       (\\<exists>Y.\n           (u, Y) \\<in> F Q \\<and>\n           s setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           tick \\<notin> X \\<and>\n           tick \\<notin> Y \\<and>\n           (X \\<union> Y) \\<inter> ev ` A = {} \\<and> X \\<inter> Y = {})", "by auto"], ["proof (state)\nthis:\n  \\<exists>t u X.\n     (t, X) \\<in> F P \\<and>\n     (\\<exists>Y.\n         (u, Y) \\<in> F Q \\<and>\n         s setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n         tick \\<notin> X \\<and>\n         tick \\<notin> Y \\<and>\n         (X \\<union> Y) \\<inter> ev ` A = {} \\<and> X \\<inter> Y = {})\n\ngoal (4 subgoals):\n 1. \\<And>s t ta u r v.\n       \\<lbrakk>front_tickFree v; s @ t = r @ v;\n        r setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 2. \\<And>s t ta u r v.\n       \\<lbrakk>front_tickFree v; s @ t = r @ v;\n        r setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 3. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 4. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})", "then"], ["proof (chain)\npicking this:\n  \\<exists>t u X.\n     (t, X) \\<in> F P \\<and>\n     (\\<exists>Y.\n         (u, Y) \\<in> F Q \\<and>\n         s setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n         tick \\<notin> X \\<and>\n         tick \\<notin> Y \\<and>\n         (X \\<union> Y) \\<inter> ev ` A = {} \\<and> X \\<inter> Y = {})", "show ?case"], ["proof (prove)\nusing this:\n  \\<exists>t u X.\n     (t, X) \\<in> F P \\<and>\n     (\\<exists>Y.\n         (u, Y) \\<in> F Q \\<and>\n         s setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n         tick \\<notin> X \\<and>\n         tick \\<notin> Y \\<and>\n         (X \\<union> Y) \\<inter> ev ` A = {} \\<and> X \\<inter> Y = {})\n\ngoal (1 subgoal):\n 1. \\<exists>t u X.\n       (t, X) \\<in> F P \\<and>\n       (\\<exists>Y.\n           (u, Y) \\<in> F Q \\<and>\n           s setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           tick \\<notin> X \\<and>\n           tick \\<notin> Y \\<and>\n           (X \\<union> Y) \\<inter> ev ` A = {} \\<and> X \\<inter> Y = {})", "by auto"], ["proof (state)\nthis:\n  \\<exists>t u X.\n     (t, X) \\<in> F P \\<and>\n     (\\<exists>Y.\n         (u, Y) \\<in> F Q \\<and>\n         s setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n         tick \\<notin> X \\<and>\n         tick \\<notin> Y \\<and>\n         (X \\<union> Y) \\<inter> ev ` A = {} \\<and> X \\<inter> Y = {})\n\ngoal (3 subgoals):\n 1. \\<And>s t ta u r v.\n       \\<lbrakk>front_tickFree v; s @ t = r @ v;\n        r setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 2. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 3. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>s t ta u r v.\n       \\<lbrakk>front_tickFree v; s @ t = r @ v;\n        r setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 2. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 3. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})", "case (3 s t ta u r v)"], ["proof (state)\nthis:\n  front_tickFree v\n  s @ t = r @ v\n  r setinterleaves ((ta, u), insert tick (ev ` A))\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         s = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n         (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n         (t \\<in> D Q \\<longrightarrow> u \\<notin> T P))\n  tickFree r\n  ta \\<in> D Q\n  u \\<in> T P\n\ngoal (3 subgoals):\n 1. \\<And>s t ta u r v.\n       \\<lbrakk>front_tickFree v; s @ t = r @ v;\n        r setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 2. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 3. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})", "have aa: \"front_tickFree v \\<Longrightarrow>s @ t = r @ v \\<Longrightarrow> r setinterleaves ((ta, u), insert tick (ev ` A)) \n  \\<Longrightarrow>\\<forall>t u r. r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>(\\<forall>v. s = r @ v \\<longrightarrow>front_tickFree v \n  \\<longrightarrow>\\<not> tickFree r \\<and> v \\<noteq> [] \\<or> (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and> (t \\<in> D Q \\<longrightarrow> u \\<notin> T P)) \\<Longrightarrow>tickFree r \\<Longrightarrow>\n  ta \\<in> D Q \\<Longrightarrow>u \\<in> T P \\<Longrightarrow>s<r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>front_tickFree v; s @ t = r @ v;\n     r setinterleaves ((ta, u), insert tick (ev ` A));\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        (\\<forall>v.\n            s = r @ v \\<longrightarrow>\n            front_tickFree v \\<longrightarrow>\n            \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n            (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n            (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n     tickFree r; ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n    \\<Longrightarrow> s < r", "apply(simp add: append_eq_append_conv2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>front_tickFree v;\n     \\<exists>us.\n        s = r @ us \\<and> us @ t = v \\<or> s @ us = r \\<and> t = us @ v;\n     r setinterleaves ((ta, u), insert tick (ev ` A));\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        (\\<forall>v.\n            s = r @ v \\<longrightarrow>\n            front_tickFree v \\<longrightarrow>\n            \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n            (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n            (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n     tickFree r; ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n    \\<Longrightarrow> s < r", "by (metis append_Nil2 front_tickFree_Nil front_tickFree_dw_closed le_list_def less_list_def)"], ["proof (state)\nthis:\n  \\<lbrakk>front_tickFree v; s @ t = r @ v;\n   r setinterleaves ((ta, u), insert tick (ev ` A));\n   \\<forall>t u r.\n      r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n      (\\<forall>v.\n          s = r @ v \\<longrightarrow>\n          front_tickFree v \\<longrightarrow>\n          \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n          (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n          (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n   tickFree r; ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n  \\<Longrightarrow> s < r\n\ngoal (3 subgoals):\n 1. \\<And>s t ta u r v.\n       \\<lbrakk>front_tickFree v; s @ t = r @ v;\n        r setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 2. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 3. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})", "have aaa: \"r setinterleaves ((ta, u), insert tick (ev ` A)) \\<Longrightarrow>tickFree r \\<Longrightarrow>ta \\<in> D Q \\<Longrightarrow>u \\<in> T P \n  \\<Longrightarrow>s<r\\<Longrightarrow>\\<exists>t u X. (t, X) \\<in> F P \\<and>(\\<exists>Y. (u, Y) \\<in> F Q \\<and>s setinterleaves ((t, u), insert tick (ev ` A)) \n  \\<and>tick \\<notin> X \\<and> tick \\<notin> Y \\<and> (X \\<union> Y) \\<inter> ev ` A = {} \\<and> X \\<inter> Y = {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r setinterleaves ((ta, u), insert tick (ev ` A)); tickFree r;\n     ta \\<in> D Q; u \\<in> T P; s < r\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u X.\n                         (t, X) \\<in> F P \\<and>\n                         (\\<exists>Y.\n                             (u, Y) \\<in> F Q \\<and>\n                             s setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                             tick \\<notin> X \\<and>\n                             tick \\<notin> Y \\<and>\n                             (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                             X \\<inter> Y = {})", "apply(drule D_T)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r setinterleaves ((ta, u), insert tick (ev ` A)); tickFree r;\n     u \\<in> T P; s < r; ta \\<in> T Q\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u X.\n                         (t, X) \\<in> F P \\<and>\n                         (\\<exists>Y.\n                             (u, Y) \\<in> F Q \\<and>\n                             s setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                             tick \\<notin> X \\<and>\n                             tick \\<notin> Y \\<and>\n                             (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                             X \\<inter> Y = {})", "apply(simp add: le_list_def less_list_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r setinterleaves ((ta, u), insert tick (ev ` A)); tickFree r;\n     u \\<in> T P; (\\<exists>ra. s @ ra = r) \\<and> s \\<noteq> r;\n     ta \\<in> T Q\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u X.\n                         (t, X) \\<in> F P \\<and>\n                         (\\<exists>Y.\n                             (u, Y) \\<in> F Q \\<and>\n                             s setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                             tick \\<notin> X \\<and>\n                             tick \\<notin> Y \\<and>\n                             (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                             X \\<inter> Y = {})", "using Sync.sym pt3"], ["proof (prove)\nusing this:\n  setinterleaving (?s, ?X, ?t) = setinterleaving (?t, ?X, ?s)\n  \\<lbrakk>?ta \\<in> T ?P; ?u \\<in> T ?Q;\n   ?s @ ?t setinterleaves ((?ta, ?u), insert tick (ev ` ?A))\\<rbrakk>\n  \\<Longrightarrow> \\<exists>t u X.\n                       (t, X) \\<in> F ?P \\<and>\n                       (\\<exists>Y.\n                           (u, Y) \\<in> F ?Q \\<and>\n                           ?s setinterleaves ((t, u), insert tick\n                 (ev ` ?A)) \\<and>\n                           tick \\<notin> X \\<and>\n                           tick \\<notin> Y \\<and>\n                           (X \\<union> Y) \\<inter> ev ` ?A = {} \\<and>\n                           X \\<inter> Y = {})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r setinterleaves ((ta, u), insert tick (ev ` A)); tickFree r;\n     u \\<in> T P; (\\<exists>ra. s @ ra = r) \\<and> s \\<noteq> r;\n     ta \\<in> T Q\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u X.\n                         (t, X) \\<in> F P \\<and>\n                         (\\<exists>Y.\n                             (u, Y) \\<in> F Q \\<and>\n                             s setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                             tick \\<notin> X \\<and>\n                             tick \\<notin> Y \\<and>\n                             (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                             X \\<inter> Y = {})", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>r setinterleaves ((ta, u), insert tick (ev ` A)); tickFree r;\n   ta \\<in> D Q; u \\<in> T P; s < r\\<rbrakk>\n  \\<Longrightarrow> \\<exists>t u X.\n                       (t, X) \\<in> F P \\<and>\n                       (\\<exists>Y.\n                           (u, Y) \\<in> F Q \\<and>\n                           s setinterleaves ((t, u), insert tick\n                (ev ` A)) \\<and>\n                           tick \\<notin> X \\<and>\n                           tick \\<notin> Y \\<and>\n                           (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                           X \\<inter> Y = {})\n\ngoal (3 subgoals):\n 1. \\<And>s t ta u r v.\n       \\<lbrakk>front_tickFree v; s @ t = r @ v;\n        r setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 2. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 3. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})", "from 3(1,2,3,4,5,6,7) Sync.sym aa"], ["proof (chain)\npicking this:\n  front_tickFree v\n  s @ t = r @ v\n  r setinterleaves ((ta, u), insert tick (ev ` A))\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         s = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n         (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n         (t \\<in> D Q \\<longrightarrow> u \\<notin> T P))\n  tickFree r\n  ta \\<in> D Q\n  u \\<in> T P\n  setinterleaving (?s, ?X, ?t) = setinterleaving (?t, ?X, ?s)\n  \\<lbrakk>front_tickFree v; s @ t = r @ v;\n   r setinterleaves ((ta, u), insert tick (ev ` A));\n   \\<forall>t u r.\n      r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n      (\\<forall>v.\n          s = r @ v \\<longrightarrow>\n          front_tickFree v \\<longrightarrow>\n          \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n          (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n          (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n   tickFree r; ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n  \\<Longrightarrow> s < r", "have a1: \"s<r\""], ["proof (prove)\nusing this:\n  front_tickFree v\n  s @ t = r @ v\n  r setinterleaves ((ta, u), insert tick (ev ` A))\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         s = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n         (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n         (t \\<in> D Q \\<longrightarrow> u \\<notin> T P))\n  tickFree r\n  ta \\<in> D Q\n  u \\<in> T P\n  setinterleaving (?s, ?X, ?t) = setinterleaving (?t, ?X, ?s)\n  \\<lbrakk>front_tickFree v; s @ t = r @ v;\n   r setinterleaves ((ta, u), insert tick (ev ` A));\n   \\<forall>t u r.\n      r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n      (\\<forall>v.\n          s = r @ v \\<longrightarrow>\n          front_tickFree v \\<longrightarrow>\n          \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n          (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n          (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n   tickFree r; ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n  \\<Longrightarrow> s < r\n\ngoal (1 subgoal):\n 1. s < r", "by blast"], ["proof (state)\nthis:\n  s < r\n\ngoal (3 subgoals):\n 1. \\<And>s t ta u r v.\n       \\<lbrakk>front_tickFree v; s @ t = r @ v;\n        r setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 2. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 3. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})", "have aab: \"\\<exists>t u X. (t, X) \\<in> F P \\<and> (\\<exists>Y. (u, Y) \\<in> F Q \\<and> s setinterleaves \n  ((t, u), insert tick (ev ` A)) \\<and> tick \\<notin> X \\<and> tick \\<notin> Y \\<and> (X \\<union> Y) \\<inter> ev ` A = {} \\<and> X \\<inter> Y = {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t u X.\n       (t, X) \\<in> F P \\<and>\n       (\\<exists>Y.\n           (u, Y) \\<in> F Q \\<and>\n           s setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           tick \\<notin> X \\<and>\n           tick \\<notin> Y \\<and>\n           (X \\<union> Y) \\<inter> ev ` A = {} \\<and> X \\<inter> Y = {})", "using 3(1,2,3,4,5,6,7) aa aaa Sync.sym"], ["proof (prove)\nusing this:\n  front_tickFree v\n  s @ t = r @ v\n  r setinterleaves ((ta, u), insert tick (ev ` A))\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         s = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n         (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n         (t \\<in> D Q \\<longrightarrow> u \\<notin> T P))\n  tickFree r\n  ta \\<in> D Q\n  u \\<in> T P\n  \\<lbrakk>front_tickFree v; s @ t = r @ v;\n   r setinterleaves ((ta, u), insert tick (ev ` A));\n   \\<forall>t u r.\n      r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n      (\\<forall>v.\n          s = r @ v \\<longrightarrow>\n          front_tickFree v \\<longrightarrow>\n          \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n          (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n          (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n   tickFree r; ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n  \\<Longrightarrow> s < r\n  \\<lbrakk>r setinterleaves ((ta, u), insert tick (ev ` A)); tickFree r;\n   ta \\<in> D Q; u \\<in> T P; s < r\\<rbrakk>\n  \\<Longrightarrow> \\<exists>t u X.\n                       (t, X) \\<in> F P \\<and>\n                       (\\<exists>Y.\n                           (u, Y) \\<in> F Q \\<and>\n                           s setinterleaves ((t, u), insert tick\n                (ev ` A)) \\<and>\n                           tick \\<notin> X \\<and>\n                           tick \\<notin> Y \\<and>\n                           (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                           X \\<inter> Y = {})\n  setinterleaving (?s, ?X, ?t) = setinterleaving (?t, ?X, ?s)\n\ngoal (1 subgoal):\n 1. \\<exists>t u X.\n       (t, X) \\<in> F P \\<and>\n       (\\<exists>Y.\n           (u, Y) \\<in> F Q \\<and>\n           s setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           tick \\<notin> X \\<and>\n           tick \\<notin> Y \\<and>\n           (X \\<union> Y) \\<inter> ev ` A = {} \\<and> X \\<inter> Y = {})", "by auto"], ["proof (state)\nthis:\n  \\<exists>t u X.\n     (t, X) \\<in> F P \\<and>\n     (\\<exists>Y.\n         (u, Y) \\<in> F Q \\<and>\n         s setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n         tick \\<notin> X \\<and>\n         tick \\<notin> Y \\<and>\n         (X \\<union> Y) \\<inter> ev ` A = {} \\<and> X \\<inter> Y = {})\n\ngoal (3 subgoals):\n 1. \\<And>s t ta u r v.\n       \\<lbrakk>front_tickFree v; s @ t = r @ v;\n        r setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 2. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 3. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})", "then"], ["proof (chain)\npicking this:\n  \\<exists>t u X.\n     (t, X) \\<in> F P \\<and>\n     (\\<exists>Y.\n         (u, Y) \\<in> F Q \\<and>\n         s setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n         tick \\<notin> X \\<and>\n         tick \\<notin> Y \\<and>\n         (X \\<union> Y) \\<inter> ev ` A = {} \\<and> X \\<inter> Y = {})", "show ?case"], ["proof (prove)\nusing this:\n  \\<exists>t u X.\n     (t, X) \\<in> F P \\<and>\n     (\\<exists>Y.\n         (u, Y) \\<in> F Q \\<and>\n         s setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n         tick \\<notin> X \\<and>\n         tick \\<notin> Y \\<and>\n         (X \\<union> Y) \\<inter> ev ` A = {} \\<and> X \\<inter> Y = {})\n\ngoal (1 subgoal):\n 1. \\<exists>t u X.\n       (t, X) \\<in> F P \\<and>\n       (\\<exists>Y.\n           (u, Y) \\<in> F Q \\<and>\n           s setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           tick \\<notin> X \\<and>\n           tick \\<notin> Y \\<and>\n           (X \\<union> Y) \\<inter> ev ` A = {} \\<and> X \\<inter> Y = {})", "by auto"], ["proof (state)\nthis:\n  \\<exists>t u X.\n     (t, X) \\<in> F P \\<and>\n     (\\<exists>Y.\n         (u, Y) \\<in> F Q \\<and>\n         s setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n         tick \\<notin> X \\<and>\n         tick \\<notin> Y \\<and>\n         (X \\<union> Y) \\<inter> ev ` A = {} \\<and> X \\<inter> Y = {})\n\ngoal (2 subgoals):\n 1. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 2. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 2. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})", "case (4 s t ta u)"], ["proof (state)\nthis:\n  s @ t setinterleaves ((ta, u), insert tick (ev ` A))\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         s = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n         (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n         (t \\<in> D Q \\<longrightarrow> u \\<notin> T P))\n  ta \\<in> D P\n  u \\<in> T Q\n\ngoal (2 subgoals):\n 1. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 2. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})", "from 4(3)"], ["proof (chain)\npicking this:\n  ta \\<in> D P", "have a1: \"ta \\<in> T P\""], ["proof (prove)\nusing this:\n  ta \\<in> D P\n\ngoal (1 subgoal):\n 1. ta \\<in> T P", "by (simp add: D_T)"], ["proof (state)\nthis:\n  ta \\<in> T P\n\ngoal (2 subgoals):\n 1. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})\n 2. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})", "then"], ["proof (chain)\npicking this:\n  ta \\<in> T P", "show ?case"], ["proof (prove)\nusing this:\n  ta \\<in> T P\n\ngoal (1 subgoal):\n 1. \\<exists>t u X.\n       (t, X) \\<in> F P \\<and>\n       (\\<exists>Y.\n           (u, Y) \\<in> F Q \\<and>\n           s setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           tick \\<notin> X \\<and>\n           tick \\<notin> Y \\<and>\n           (X \\<union> Y) \\<inter> ev ` A = {} \\<and> X \\<inter> Y = {})", "using \"4\"(1) \"4\"(4) pt3"], ["proof (prove)\nusing this:\n  ta \\<in> T P\n  s @ t setinterleaves ((ta, u), insert tick (ev ` A))\n  u \\<in> T Q\n  \\<lbrakk>?ta \\<in> T ?P; ?u \\<in> T ?Q;\n   ?s @ ?t setinterleaves ((?ta, ?u), insert tick (ev ` ?A))\\<rbrakk>\n  \\<Longrightarrow> \\<exists>t u X.\n                       (t, X) \\<in> F ?P \\<and>\n                       (\\<exists>Y.\n                           (u, Y) \\<in> F ?Q \\<and>\n                           ?s setinterleaves ((t, u), insert tick\n                 (ev ` ?A)) \\<and>\n                           tick \\<notin> X \\<and>\n                           tick \\<notin> Y \\<and>\n                           (X \\<union> Y) \\<inter> ev ` ?A = {} \\<and>\n                           X \\<inter> Y = {})\n\ngoal (1 subgoal):\n 1. \\<exists>t u X.\n       (t, X) \\<in> F P \\<and>\n       (\\<exists>Y.\n           (u, Y) \\<in> F Q \\<and>\n           s setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           tick \\<notin> X \\<and>\n           tick \\<notin> Y \\<and>\n           (X \\<union> Y) \\<inter> ev ` A = {} \\<and> X \\<inter> Y = {})", "by blast"], ["proof (state)\nthis:\n  \\<exists>t u X.\n     (t, X) \\<in> F P \\<and>\n     (\\<exists>Y.\n         (u, Y) \\<in> F Q \\<and>\n         s setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n         tick \\<notin> X \\<and>\n         tick \\<notin> Y \\<and>\n         (X \\<union> Y) \\<inter> ev ` A = {} \\<and> X \\<inter> Y = {})\n\ngoal (1 subgoal):\n 1. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})", "case (5 s t ta u)"], ["proof (state)\nthis:\n  s @ t setinterleaves ((ta, u), insert tick (ev ` A))\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         s = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n         (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n         (t \\<in> D Q \\<longrightarrow> u \\<notin> T P))\n  ta \\<in> D Q\n  u \\<in> T P\n\ngoal (1 subgoal):\n 1. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})", "from 5(3)"], ["proof (chain)\npicking this:\n  ta \\<in> D Q", "have a1: \"ta \\<in> T Q\""], ["proof (prove)\nusing this:\n  ta \\<in> D Q\n\ngoal (1 subgoal):\n 1. ta \\<in> T Q", "by (simp add: D_T)"], ["proof (state)\nthis:\n  ta \\<in> T Q\n\ngoal (1 subgoal):\n 1. \\<And>s t ta u.\n       \\<lbrakk>s @ t setinterleaves ((ta, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                tick \\<notin> X \\<and>\n                                tick \\<notin> Y \\<and>\n                                (X \\<union> Y) \\<inter> ev ` A = {} \\<and>\n                                X \\<inter> Y = {})", "then"], ["proof (chain)\npicking this:\n  ta \\<in> T Q", "show ?case"], ["proof (prove)\nusing this:\n  ta \\<in> T Q\n\ngoal (1 subgoal):\n 1. \\<exists>t u X.\n       (t, X) \\<in> F P \\<and>\n       (\\<exists>Y.\n           (u, Y) \\<in> F Q \\<and>\n           s setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           tick \\<notin> X \\<and>\n           tick \\<notin> Y \\<and>\n           (X \\<union> Y) \\<inter> ev ` A = {} \\<and> X \\<inter> Y = {})", "using \"5\"(1) \"5\"(4) Sync.sym pt3"], ["proof (prove)\nusing this:\n  ta \\<in> T Q\n  s @ t setinterleaves ((ta, u), insert tick (ev ` A))\n  u \\<in> T P\n  setinterleaving (?s, ?X, ?t) = setinterleaving (?t, ?X, ?s)\n  \\<lbrakk>?ta \\<in> T ?P; ?u \\<in> T ?Q;\n   ?s @ ?t setinterleaves ((?ta, ?u), insert tick (ev ` ?A))\\<rbrakk>\n  \\<Longrightarrow> \\<exists>t u X.\n                       (t, X) \\<in> F ?P \\<and>\n                       (\\<exists>Y.\n                           (u, Y) \\<in> F ?Q \\<and>\n                           ?s setinterleaves ((t, u), insert tick\n                 (ev ` ?A)) \\<and>\n                           tick \\<notin> X \\<and>\n                           tick \\<notin> Y \\<and>\n                           (X \\<union> Y) \\<inter> ev ` ?A = {} \\<and>\n                           X \\<inter> Y = {})\n\ngoal (1 subgoal):\n 1. \\<exists>t u X.\n       (t, X) \\<in> F P \\<and>\n       (\\<exists>Y.\n           (u, Y) \\<in> F Q \\<and>\n           s setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           tick \\<notin> X \\<and>\n           tick \\<notin> Y \\<and>\n           (X \\<union> Y) \\<inter> ev ` A = {} \\<and> X \\<inter> Y = {})", "by blast"], ["proof (state)\nthis:\n  \\<exists>t u X.\n     (t, X) \\<in> F P \\<and>\n     (\\<exists>Y.\n         (u, Y) \\<in> F Q \\<and>\n         s setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n         tick \\<notin> X \\<and>\n         tick \\<notin> Y \\<and>\n         (X \\<union> Y) \\<inter> ev ` A = {} \\<and> X \\<inter> Y = {})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>s t.\n     (s @ t, {})\n     \\<in> {(s, R).\n            \\<exists>t u X Y.\n               (t, X) \\<in> F P \\<and>\n               (u, Y) \\<in> F Q \\<and>\n               s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n               R =\n               (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n               X \\<inter> Y} \\<union>\n           {(s, R).\n            \\<exists>t u r v.\n               front_tickFree v \\<and>\n               (tickFree r \\<or> v = []) \\<and>\n               s = r @ v \\<and>\n               r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n               (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n     (s, {})\n     \\<in> {(s, R).\n            \\<exists>t u X Y.\n               (t, X) \\<in> F P \\<and>\n               (u, Y) \\<in> F Q \\<and>\n               s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n               R =\n               (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n               X \\<inter> Y} \\<union>\n           {(s, R).\n            \\<exists>t u r v.\n               front_tickFree v \\<and>\n               (tickFree r \\<or> v = []) \\<and>\n               s = r @ v \\<and>\n               r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n               (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                t \\<in> D Q \\<and> u \\<in> T P)}\n\ngoal (6 subgoals):\n 1. \\<forall>s X Y.\n       (s, Y)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<and>\n       X \\<subseteq> Y \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 2. \\<forall>s X Y.\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<and>\n       (\\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (s @ [c], {})\n           \\<notin> {(s, R).\n                     \\<exists>t u X Y.\n                        (t, X) \\<in> F P \\<and>\n                        (u, Y) \\<in> F Q \\<and>\n                        s setinterleaves ((t, u), ev ` A \\<union>\n            {tick}) \\<and>\n                        R =\n                        (X \\<union> Y) \\<inter>\n                        (ev ` A \\<union> {tick}) \\<union>\n                        X \\<inter> Y} \\<union>\n                    {(s, R).\n                     \\<exists>t u r v.\n                        front_tickFree v \\<and>\n                        (tickFree r \\<or> v = []) \\<and>\n                        s = r @ v \\<and>\n                        r setinterleaves ((t, u), ev ` A \\<union>\n            {tick}) \\<and>\n                        (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                         t \\<in> D Q \\<and> u \\<in> T P)}) \\<longrightarrow>\n       (s, X \\<union> Y)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 3. \\<forall>s X.\n       (s @ [tick], {})\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       (s, X - {tick})\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 4. \\<forall>s t.\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)} \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t\n       \\<in> {s. \\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    s = r @ v \\<and>\n                    r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                    (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                     t \\<in> D Q \\<and> u \\<in> T P)}\n 5. \\<forall>s X.\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 6. \\<forall>s.\n       s @ [tick]\n       \\<in> {s. \\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    s = r @ v \\<and>\n                    r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                    (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                     t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)}", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<forall>s X Y.\n       (s, Y)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<and>\n       X \\<subseteq> Y \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 2. \\<forall>s X Y.\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<and>\n       (\\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (s @ [c], {})\n           \\<notin> {(s, R).\n                     \\<exists>t u X Y.\n                        (t, X) \\<in> F P \\<and>\n                        (u, Y) \\<in> F Q \\<and>\n                        s setinterleaves ((t, u), ev ` A \\<union>\n            {tick}) \\<and>\n                        R =\n                        (X \\<union> Y) \\<inter>\n                        (ev ` A \\<union> {tick}) \\<union>\n                        X \\<inter> Y} \\<union>\n                    {(s, R).\n                     \\<exists>t u r v.\n                        front_tickFree v \\<and>\n                        (tickFree r \\<or> v = []) \\<and>\n                        s = r @ v \\<and>\n                        r setinterleaves ((t, u), ev ` A \\<union>\n            {tick}) \\<and>\n                        (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                         t \\<in> D Q \\<and> u \\<in> T P)}) \\<longrightarrow>\n       (s, X \\<union> Y)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 3. \\<forall>s X.\n       (s @ [tick], {})\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       (s, X - {tick})\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 4. \\<forall>s t.\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)} \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t\n       \\<in> {s. \\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    s = r @ v \\<and>\n                    r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                    (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                     t \\<in> D Q \\<and> u \\<in> T P)}\n 5. \\<forall>s X.\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 6. \\<forall>s.\n       s @ [tick]\n       \\<in> {s. \\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    s = r @ v \\<and>\n                    r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                    (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                     t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)}", "show \"\\<forall>s X Y. (s, Y) \\<in> ?f \\<and> X \\<subseteq> Y \\<longrightarrow> (s, X) \\<in> ?f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s X Y.\n       (s, Y)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<and>\n       X \\<subseteq> Y \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s X t u Xa Ya.\n       \\<lbrakk>X \\<subseteq> (Xa \\<union> Ya) \\<inter>\n                              insert tick (ev ` A) \\<union>\n                              Xa \\<inter> Ya;\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        (t, Xa) \\<in> F P; (u, Ya) \\<in> F Q;\n        s setinterleaves ((t, u), insert tick (ev ` A))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u Xa.\n                            (t, Xa) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                X =\n                                (Xa \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Y)", "proof(goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s X t u Xa Ya.\n       \\<lbrakk>X \\<subseteq> (Xa \\<union> Ya) \\<inter>\n                              insert tick (ev ` A) \\<union>\n                              Xa \\<inter> Ya;\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        (t, Xa) \\<in> F P; (u, Ya) \\<in> F Q;\n        s setinterleaves ((t, u), insert tick (ev ` A))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u Xa.\n                            (t, Xa) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                X =\n                                (Xa \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Y)", "case (1 s X t u Xa Ya)"], ["proof (state)\nthis:\n  X \\<subseteq> (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n                Xa \\<inter> Ya\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         s = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n         (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n         (t \\<in> D Q \\<longrightarrow> u \\<notin> T P))\n  (t, Xa) \\<in> F P\n  (u, Ya) \\<in> F Q\n  s setinterleaves ((t, u), insert tick (ev ` A))\n\ngoal (1 subgoal):\n 1. \\<And>s X t u Xa Ya.\n       \\<lbrakk>X \\<subseteq> (Xa \\<union> Ya) \\<inter>\n                              insert tick (ev ` A) \\<union>\n                              Xa \\<inter> Ya;\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        (t, Xa) \\<in> F P; (u, Ya) \\<in> F Q;\n        s setinterleaves ((t, u), insert tick (ev ` A))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u Xa.\n                            (t, Xa) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                X =\n                                (Xa \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Y)", "have aa: \"X \\<subseteq> ((Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union> Xa \\<inter> Ya )\\<Longrightarrow>\\<exists>x1 y1. x1\\<subseteq>Xa \\<and> y1\\<subseteq>Ya \\<and> \n    X=((x1 \\<union> y1) \\<inter> insert tick (ev ` A) \\<union> x1 \\<inter> y1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<subseteq> (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n                  Xa \\<inter> Ya \\<Longrightarrow>\n    \\<exists>x1 y1.\n       x1 \\<subseteq> Xa \\<and>\n       y1 \\<subseteq> Ya \\<and>\n       X =\n       (x1 \\<union> y1) \\<inter> insert tick (ev ` A) \\<union>\n       x1 \\<inter> y1", "apply(simp add: Set.subset_iff_psubset_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<subset> (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n                Xa \\<inter> Ya \\<or>\n    X =\n    (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n    Xa \\<inter> Ya \\<Longrightarrow>\n    \\<exists>x1.\n       (x1 \\<subset> Xa \\<or> x1 = Xa) \\<and>\n       (\\<exists>y1.\n           (y1 \\<subset> Ya \\<or> y1 = Ya) \\<and>\n           X =\n           (x1 \\<union> y1) \\<inter> insert tick (ev ` A) \\<union>\n           x1 \\<inter> y1)", "apply(erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. X \\<subset> (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n                Xa \\<inter> Ya \\<Longrightarrow>\n    \\<exists>x1.\n       (x1 \\<subset> Xa \\<or> x1 = Xa) \\<and>\n       (\\<exists>y1.\n           (y1 \\<subset> Ya \\<or> y1 = Ya) \\<and>\n           X =\n           (x1 \\<union> y1) \\<inter> insert tick (ev ` A) \\<union>\n           x1 \\<inter> y1)\n 2. X =\n    (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n    Xa \\<inter> Ya \\<Longrightarrow>\n    \\<exists>x1.\n       (x1 \\<subset> Xa \\<or> x1 = Xa) \\<and>\n       (\\<exists>y1.\n           (y1 \\<subset> Ya \\<or> y1 = Ya) \\<and>\n           X =\n           (x1 \\<union> y1) \\<inter> insert tick (ev ` A) \\<union>\n           x1 \\<inter> y1)", "defer"], ["proof (prove)\ngoal (2 subgoals):\n 1. X =\n    (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n    Xa \\<inter> Ya \\<Longrightarrow>\n    \\<exists>x1.\n       (x1 \\<subset> Xa \\<or> x1 = Xa) \\<and>\n       (\\<exists>y1.\n           (y1 \\<subset> Ya \\<or> y1 = Ya) \\<and>\n           X =\n           (x1 \\<union> y1) \\<inter> insert tick (ev ` A) \\<union>\n           x1 \\<inter> y1)\n 2. X \\<subset> (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n                Xa \\<inter> Ya \\<Longrightarrow>\n    \\<exists>x1.\n       (x1 \\<subset> Xa \\<or> x1 = Xa) \\<and>\n       (\\<exists>y1.\n           (y1 \\<subset> Ya \\<or> y1 = Ya) \\<and>\n           X =\n           (x1 \\<union> y1) \\<inter> insert tick (ev ` A) \\<union>\n           x1 \\<inter> y1)", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<subset> (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n                Xa \\<inter> Ya \\<Longrightarrow>\n    \\<exists>x1.\n       (x1 \\<subset> Xa \\<or> x1 = Xa) \\<and>\n       (\\<exists>y1.\n           (y1 \\<subset> Ya \\<or> y1 = Ya) \\<and>\n           X =\n           (x1 \\<union> y1) \\<inter> insert tick (ev ` A) \\<union>\n           x1 \\<inter> y1)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. X \\<subset> (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n                Xa \\<inter> Ya \\<Longrightarrow>\n    \\<exists>x1.\n       (x1 \\<subset> Xa \\<or> x1 = Xa) \\<and>\n       (\\<exists>y1.\n           (y1 \\<subset> Ya \\<or> y1 = Ya) \\<and>\n           X =\n           (x1 \\<union> y1) \\<inter> insert tick (ev ` A) \\<union>\n           x1 \\<inter> y1)", "assume A: \"X \\<subset> (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union> Xa \\<inter> Ya\""], ["proof (state)\nthis:\n  X \\<subset> (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n              Xa \\<inter> Ya\n\ngoal (1 subgoal):\n 1. X \\<subset> (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n                Xa \\<inter> Ya \\<Longrightarrow>\n    \\<exists>x1.\n       (x1 \\<subset> Xa \\<or> x1 = Xa) \\<and>\n       (\\<exists>y1.\n           (y1 \\<subset> Ya \\<or> y1 = Ya) \\<and>\n           X =\n           (x1 \\<union> y1) \\<inter> insert tick (ev ` A) \\<union>\n           x1 \\<inter> y1)", "from A"], ["proof (chain)\npicking this:\n  X \\<subset> (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n              Xa \\<inter> Ya", "obtain X1 where B: \"X1=((Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union> Xa \\<inter> Ya)-X\""], ["proof (prove)\nusing this:\n  X \\<subset> (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n              Xa \\<inter> Ya\n\ngoal (1 subgoal):\n 1. (\\<And>X1.\n        X1 =\n        (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n        Xa \\<inter> Ya -\n        X \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  X1 =\n  (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union> Xa \\<inter> Ya - X\n\ngoal (1 subgoal):\n 1. X \\<subset> (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n                Xa \\<inter> Ya \\<Longrightarrow>\n    \\<exists>x1.\n       (x1 \\<subset> Xa \\<or> x1 = Xa) \\<and>\n       (\\<exists>y1.\n           (y1 \\<subset> Ya \\<or> y1 = Ya) \\<and>\n           X =\n           (x1 \\<union> y1) \\<inter> insert tick (ev ` A) \\<union>\n           x1 \\<inter> y1)", "from A"], ["proof (chain)\npicking this:\n  X \\<subset> (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n              Xa \\<inter> Ya", "obtain x where C: \"x=Xa-X1\""], ["proof (prove)\nusing this:\n  X \\<subset> (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n              Xa \\<inter> Ya\n\ngoal (1 subgoal):\n 1. (\\<And>x. x = Xa - X1 \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  x = Xa - X1\n\ngoal (1 subgoal):\n 1. X \\<subset> (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n                Xa \\<inter> Ya \\<Longrightarrow>\n    \\<exists>x1.\n       (x1 \\<subset> Xa \\<or> x1 = Xa) \\<and>\n       (\\<exists>y1.\n           (y1 \\<subset> Ya \\<or> y1 = Ya) \\<and>\n           X =\n           (x1 \\<union> y1) \\<inter> insert tick (ev ` A) \\<union>\n           x1 \\<inter> y1)", "from A"], ["proof (chain)\npicking this:\n  X \\<subset> (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n              Xa \\<inter> Ya", "obtain y where D: \"y=Ya-X1\""], ["proof (prove)\nusing this:\n  X \\<subset> (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n              Xa \\<inter> Ya\n\ngoal (1 subgoal):\n 1. (\\<And>y. y = Ya - X1 \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  y = Ya - X1\n\ngoal (1 subgoal):\n 1. X \\<subset> (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n                Xa \\<inter> Ya \\<Longrightarrow>\n    \\<exists>x1.\n       (x1 \\<subset> Xa \\<or> x1 = Xa) \\<and>\n       (\\<exists>y1.\n           (y1 \\<subset> Ya \\<or> y1 = Ya) \\<and>\n           X =\n           (x1 \\<union> y1) \\<inter> insert tick (ev ` A) \\<union>\n           x1 \\<inter> y1)", "from A B C D"], ["proof (chain)\npicking this:\n  X \\<subset> (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n              Xa \\<inter> Ya\n  X1 =\n  (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union> Xa \\<inter> Ya - X\n  x = Xa - X1\n  y = Ya - X1", "have E: \"X = (x \\<union> y) \\<inter> insert tick (ev ` A) \\<union> x \\<inter> y\""], ["proof (prove)\nusing this:\n  X \\<subset> (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n              Xa \\<inter> Ya\n  X1 =\n  (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union> Xa \\<inter> Ya - X\n  x = Xa - X1\n  y = Ya - X1\n\ngoal (1 subgoal):\n 1. X = (x \\<union> y) \\<inter> insert tick (ev ` A) \\<union> x \\<inter> y", "by blast"], ["proof (state)\nthis:\n  X = (x \\<union> y) \\<inter> insert tick (ev ` A) \\<union> x \\<inter> y\n\ngoal (1 subgoal):\n 1. X \\<subset> (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n                Xa \\<inter> Ya \\<Longrightarrow>\n    \\<exists>x1.\n       (x1 \\<subset> Xa \\<or> x1 = Xa) \\<and>\n       (\\<exists>y1.\n           (y1 \\<subset> Ya \\<or> y1 = Ya) \\<and>\n           X =\n           (x1 \\<union> y1) \\<inter> insert tick (ev ` A) \\<union>\n           x1 \\<inter> y1)", "thus \" \\<exists>x1. (x1 \\<subset> Xa \\<or> x1 = Xa) \\<and> (\\<exists>y1. (y1 \\<subset> Ya \\<or> y1 = Ya) \\<and> X = (x1 \\<union> y1) \\<inter> \n      insert tick (ev ` A) \\<union> x1 \\<inter> y1)\""], ["proof (prove)\nusing this:\n  X = (x \\<union> y) \\<inter> insert tick (ev ` A) \\<union> x \\<inter> y\n\ngoal (1 subgoal):\n 1. \\<exists>x1.\n       (x1 \\<subset> Xa \\<or> x1 = Xa) \\<and>\n       (\\<exists>y1.\n           (y1 \\<subset> Ya \\<or> y1 = Ya) \\<and>\n           X =\n           (x1 \\<union> y1) \\<inter> insert tick (ev ` A) \\<union>\n           x1 \\<inter> y1)", "using A B C D E"], ["proof (prove)\nusing this:\n  X = (x \\<union> y) \\<inter> insert tick (ev ` A) \\<union> x \\<inter> y\n  X \\<subset> (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n              Xa \\<inter> Ya\n  X1 =\n  (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union> Xa \\<inter> Ya - X\n  x = Xa - X1\n  y = Ya - X1\n  X = (x \\<union> y) \\<inter> insert tick (ev ` A) \\<union> x \\<inter> y\n\ngoal (1 subgoal):\n 1. \\<exists>x1.\n       (x1 \\<subset> Xa \\<or> x1 = Xa) \\<and>\n       (\\<exists>y1.\n           (y1 \\<subset> Ya \\<or> y1 = Ya) \\<and>\n           X =\n           (x1 \\<union> y1) \\<inter> insert tick (ev ` A) \\<union>\n           x1 \\<inter> y1)", "by (metis Un_Diff_Int inf.strict_order_iff inf_sup_absorb)"], ["proof (state)\nthis:\n  \\<exists>x1.\n     (x1 \\<subset> Xa \\<or> x1 = Xa) \\<and>\n     (\\<exists>y1.\n         (y1 \\<subset> Ya \\<or> y1 = Ya) \\<and>\n         X =\n         (x1 \\<union> y1) \\<inter> insert tick (ev ` A) \\<union>\n         x1 \\<inter> y1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  X \\<subseteq> (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n                Xa \\<inter> Ya \\<Longrightarrow>\n  \\<exists>x1 y1.\n     x1 \\<subseteq> Xa \\<and>\n     y1 \\<subseteq> Ya \\<and>\n     X =\n     (x1 \\<union> y1) \\<inter> insert tick (ev ` A) \\<union> x1 \\<inter> y1\n\ngoal (1 subgoal):\n 1. \\<And>s X t u Xa Ya.\n       \\<lbrakk>X \\<subseteq> (Xa \\<union> Ya) \\<inter>\n                              insert tick (ev ` A) \\<union>\n                              Xa \\<inter> Ya;\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        (t, Xa) \\<in> F P; (u, Ya) \\<in> F Q;\n        s setinterleaves ((t, u), insert tick (ev ` A))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u Xa.\n                            (t, Xa) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                X =\n                                (Xa \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Y)", "then"], ["proof (chain)\npicking this:\n  X \\<subseteq> (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n                Xa \\<inter> Ya \\<Longrightarrow>\n  \\<exists>x1 y1.\n     x1 \\<subseteq> Xa \\<and>\n     y1 \\<subseteq> Ya \\<and>\n     X =\n     (x1 \\<union> y1) \\<inter> insert tick (ev ` A) \\<union> x1 \\<inter> y1", "show ?case"], ["proof (prove)\nusing this:\n  X \\<subseteq> (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n                Xa \\<inter> Ya \\<Longrightarrow>\n  \\<exists>x1 y1.\n     x1 \\<subseteq> Xa \\<and>\n     y1 \\<subseteq> Ya \\<and>\n     X =\n     (x1 \\<union> y1) \\<inter> insert tick (ev ` A) \\<union> x1 \\<inter> y1\n\ngoal (1 subgoal):\n 1. \\<exists>t u Xa.\n       (t, Xa) \\<in> F P \\<and>\n       (\\<exists>Y.\n           (u, Y) \\<in> F Q \\<and>\n           s setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           X =\n           (Xa \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n           Xa \\<inter> Y)", "using 1(1,2,3,4,5)"], ["proof (prove)\nusing this:\n  X \\<subseteq> (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n                Xa \\<inter> Ya \\<Longrightarrow>\n  \\<exists>x1 y1.\n     x1 \\<subseteq> Xa \\<and>\n     y1 \\<subseteq> Ya \\<and>\n     X =\n     (x1 \\<union> y1) \\<inter> insert tick (ev ` A) \\<union> x1 \\<inter> y1\n  X \\<subseteq> (Xa \\<union> Ya) \\<inter> insert tick (ev ` A) \\<union>\n                Xa \\<inter> Ya\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         s = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n         (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n         (t \\<in> D Q \\<longrightarrow> u \\<notin> T P))\n  (t, Xa) \\<in> F P\n  (u, Ya) \\<in> F Q\n  s setinterleaves ((t, u), insert tick (ev ` A))\n\ngoal (1 subgoal):\n 1. \\<exists>t u Xa.\n       (t, Xa) \\<in> F P \\<and>\n       (\\<exists>Y.\n           (u, Y) \\<in> F Q \\<and>\n           s setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           X =\n           (Xa \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n           Xa \\<inter> Y)", "by (meson process_charn)"], ["proof (state)\nthis:\n  \\<exists>t u Xa.\n     (t, Xa) \\<in> F P \\<and>\n     (\\<exists>Y.\n         (u, Y) \\<in> F Q \\<and>\n         s setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n         X =\n         (Xa \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n         Xa \\<inter> Y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>s X Y.\n     (s, Y)\n     \\<in> {(s, R).\n            \\<exists>t u X Y.\n               (t, X) \\<in> F P \\<and>\n               (u, Y) \\<in> F Q \\<and>\n               s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n               R =\n               (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n               X \\<inter> Y} \\<union>\n           {(s, R).\n            \\<exists>t u r v.\n               front_tickFree v \\<and>\n               (tickFree r \\<or> v = []) \\<and>\n               s = r @ v \\<and>\n               r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n               (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                t \\<in> D Q \\<and> u \\<in> T P)} \\<and>\n     X \\<subseteq> Y \\<longrightarrow>\n     (s, X)\n     \\<in> {(s, R).\n            \\<exists>t u X Y.\n               (t, X) \\<in> F P \\<and>\n               (u, Y) \\<in> F Q \\<and>\n               s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n               R =\n               (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n               X \\<inter> Y} \\<union>\n           {(s, R).\n            \\<exists>t u r v.\n               front_tickFree v \\<and>\n               (tickFree r \\<or> v = []) \\<and>\n               s = r @ v \\<and>\n               r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n               (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                t \\<in> D Q \\<and> u \\<in> T P)}\n\ngoal (5 subgoals):\n 1. \\<forall>s X Y.\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<and>\n       (\\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (s @ [c], {})\n           \\<notin> {(s, R).\n                     \\<exists>t u X Y.\n                        (t, X) \\<in> F P \\<and>\n                        (u, Y) \\<in> F Q \\<and>\n                        s setinterleaves ((t, u), ev ` A \\<union>\n            {tick}) \\<and>\n                        R =\n                        (X \\<union> Y) \\<inter>\n                        (ev ` A \\<union> {tick}) \\<union>\n                        X \\<inter> Y} \\<union>\n                    {(s, R).\n                     \\<exists>t u r v.\n                        front_tickFree v \\<and>\n                        (tickFree r \\<or> v = []) \\<and>\n                        s = r @ v \\<and>\n                        r setinterleaves ((t, u), ev ` A \\<union>\n            {tick}) \\<and>\n                        (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                         t \\<in> D Q \\<and> u \\<in> T P)}) \\<longrightarrow>\n       (s, X \\<union> Y)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 2. \\<forall>s X.\n       (s @ [tick], {})\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       (s, X - {tick})\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 3. \\<forall>s t.\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)} \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t\n       \\<in> {s. \\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    s = r @ v \\<and>\n                    r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                    (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                     t \\<in> D Q \\<and> u \\<in> T P)}\n 4. \\<forall>s X.\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 5. \\<forall>s.\n       s @ [tick]\n       \\<in> {s. \\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    s = r @ v \\<and>\n                    r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                    (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                     t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)}", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<forall>s X Y.\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<and>\n       (\\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (s @ [c], {})\n           \\<notin> {(s, R).\n                     \\<exists>t u X Y.\n                        (t, X) \\<in> F P \\<and>\n                        (u, Y) \\<in> F Q \\<and>\n                        s setinterleaves ((t, u), ev ` A \\<union>\n            {tick}) \\<and>\n                        R =\n                        (X \\<union> Y) \\<inter>\n                        (ev ` A \\<union> {tick}) \\<union>\n                        X \\<inter> Y} \\<union>\n                    {(s, R).\n                     \\<exists>t u r v.\n                        front_tickFree v \\<and>\n                        (tickFree r \\<or> v = []) \\<and>\n                        s = r @ v \\<and>\n                        r setinterleaves ((t, u), ev ` A \\<union>\n            {tick}) \\<and>\n                        (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                         t \\<in> D Q \\<and> u \\<in> T P)}) \\<longrightarrow>\n       (s, X \\<union> Y)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 2. \\<forall>s X.\n       (s @ [tick], {})\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       (s, X - {tick})\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 3. \\<forall>s t.\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)} \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t\n       \\<in> {s. \\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    s = r @ v \\<and>\n                    r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                    (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                     t \\<in> D Q \\<and> u \\<in> T P)}\n 4. \\<forall>s X.\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 5. \\<forall>s.\n       s @ [tick]\n       \\<in> {s. \\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    s = r @ v \\<and>\n                    r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                    (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                     t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)}", "let ?f1 = \"{(s,R).\\<exists> t u X Y. (t,X) \\<in> F P \\<and> (u,Y) \\<in> F Q \\<and> (s setinterleaves \n  ((t,u),(ev`A) \\<union> {tick}))\\<and> R = (X \\<union> Y) \\<inter> ((ev`A) \\<union> {tick}) \\<union> X \\<inter> Y}\""], ["proof (state)\ngoal (5 subgoals):\n 1. \\<forall>s X Y.\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<and>\n       (\\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (s @ [c], {})\n           \\<notin> {(s, R).\n                     \\<exists>t u X Y.\n                        (t, X) \\<in> F P \\<and>\n                        (u, Y) \\<in> F Q \\<and>\n                        s setinterleaves ((t, u), ev ` A \\<union>\n            {tick}) \\<and>\n                        R =\n                        (X \\<union> Y) \\<inter>\n                        (ev ` A \\<union> {tick}) \\<union>\n                        X \\<inter> Y} \\<union>\n                    {(s, R).\n                     \\<exists>t u r v.\n                        front_tickFree v \\<and>\n                        (tickFree r \\<or> v = []) \\<and>\n                        s = r @ v \\<and>\n                        r setinterleaves ((t, u), ev ` A \\<union>\n            {tick}) \\<and>\n                        (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                         t \\<in> D Q \\<and> u \\<in> T P)}) \\<longrightarrow>\n       (s, X \\<union> Y)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 2. \\<forall>s X.\n       (s @ [tick], {})\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       (s, X - {tick})\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 3. \\<forall>s t.\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)} \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t\n       \\<in> {s. \\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    s = r @ v \\<and>\n                    r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                    (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                     t \\<in> D Q \\<and> u \\<in> T P)}\n 4. \\<forall>s X.\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 5. \\<forall>s.\n       s @ [tick]\n       \\<in> {s. \\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    s = r @ v \\<and>\n                    r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                    (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                     t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)}", "have is_processT5_SYNC3: \"\\<And>sa X Y.(sa, X) \\<in>?f1 \\<Longrightarrow>(\\<forall>c. c\\<in>Y\\<longrightarrow>(sa@[c],{})\\<notin>?f)\\<Longrightarrow>(sa, X\\<union>Y) \\<in> ?f1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>sa X Y.\n       \\<lbrakk>(sa, X)\n                \\<in> {(s, R).\n                       \\<exists>t u X Y.\n                          (t, X) \\<in> F P \\<and>\n                          (u, Y) \\<in> F Q \\<and>\n                          s setinterleaves ((t, u), ev ` A \\<union>\n              {tick}) \\<and>\n                          R =\n                          (X \\<union> Y) \\<inter>\n                          (ev ` A \\<union> {tick}) \\<union>\n                          X \\<inter> Y};\n        \\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (sa @ [c], {})\n           \\<notin> {(s, R).\n                     \\<exists>t u X Y.\n                        (t, X) \\<in> F P \\<and>\n                        (u, Y) \\<in> F Q \\<and>\n                        s setinterleaves ((t, u), ev ` A \\<union>\n            {tick}) \\<and>\n                        R =\n                        (X \\<union> Y) \\<inter>\n                        (ev ` A \\<union> {tick}) \\<union>\n                        X \\<inter> Y} \\<union>\n                    {(s, R).\n                     \\<exists>t u r v.\n                        front_tickFree v \\<and>\n                        (tickFree r \\<or> v = []) \\<and>\n                        s = r @ v \\<and>\n                        r setinterleaves ((t, u), ev ` A \\<union>\n            {tick}) \\<and>\n                        (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                         t \\<in> D Q \\<and> u \\<in> T P)}\\<rbrakk>\n       \\<Longrightarrow> (sa, X \\<union> Y)\n                         \\<in> {(s, R).\n                                \\<exists>t u X Y.\n                                   (t, X) \\<in> F P \\<and>\n                                   (u, Y) \\<in> F Q \\<and>\n                                   s setinterleaves ((t, u), ev ` A \\<union>\n                       {tick}) \\<and>\n                                   R =\n                                   (X \\<union> Y) \\<inter>\n                                   (ev ` A \\<union> {tick}) \\<union>\n                                   X \\<inter> Y}", "apply(clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>sa Y t u Xa Ya.\n       \\<lbrakk>\\<forall>c.\n                   c \\<in> Y \\<longrightarrow>\n                   (\\<forall>t u X.\n                       (t, X) \\<in> F P \\<longrightarrow>\n                       (\\<forall>Y.\n                           (X \\<union> Y) \\<inter> ev ` A =\n                           {} \\<longrightarrow>\n                           sa @\n                           [c] setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<longrightarrow>\n                           (u, Y) \\<in> F Q \\<longrightarrow>\n                           tick \\<in> X \\<or>\n                           tick \\<in> Y \\<or>\n                           X \\<inter> Y \\<noteq> {})) \\<and>\n                   (\\<forall>t u r.\n                       r setinterleaves ((t, u), insert tick\n            (ev ` A)) \\<longrightarrow>\n                       (\\<forall>v.\n                           sa @ [c] = r @ v \\<longrightarrow>\n                           front_tickFree v \\<longrightarrow>\n                           \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n                           (t \\<in> D P \\<longrightarrow>\n                            u \\<notin> T Q) \\<and>\n                           (t \\<in> D Q \\<longrightarrow> u \\<notin> T P)));\n        (t, Xa) \\<in> F P; (u, Ya) \\<in> F Q;\n        sa setinterleaves ((t, u), insert tick (ev ` A))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Yb.\n                                (u, Yb) \\<in> F Q \\<and>\n                                sa setinterleaves ((t, u), insert tick\n                      (ev ` A)) \\<and>\n                                (Xa \\<union> Ya) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Ya \\<union>\n                                Y =\n                                (X \\<union> Yb) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Yb)", "apply(rule is_processT5_SYNC2[simplified])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>sa Y t u Xa Ya.\n       \\<lbrakk>\\<forall>c.\n                   c \\<in> Y \\<longrightarrow>\n                   (\\<forall>t u X.\n                       (t, X) \\<in> F P \\<longrightarrow>\n                       (\\<forall>Y.\n                           (X \\<union> Y) \\<inter> ev ` A =\n                           {} \\<longrightarrow>\n                           sa @\n                           [c] setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<longrightarrow>\n                           (u, Y) \\<in> F Q \\<longrightarrow>\n                           tick \\<in> X \\<or>\n                           tick \\<in> Y \\<or>\n                           X \\<inter> Y \\<noteq> {})) \\<and>\n                   (\\<forall>t u r.\n                       r setinterleaves ((t, u), insert tick\n            (ev ` A)) \\<longrightarrow>\n                       (\\<forall>v.\n                           sa @ [c] = r @ v \\<longrightarrow>\n                           front_tickFree v \\<longrightarrow>\n                           \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n                           (t \\<in> D P \\<longrightarrow>\n                            u \\<notin> T Q) \\<and>\n                           (t \\<in> D Q \\<longrightarrow> u \\<notin> T P)));\n        (t, Xa) \\<in> F P; (u, Ya) \\<in> F Q;\n        sa setinterleaves ((t, u), insert tick (ev ` A))\\<rbrakk>\n       \\<Longrightarrow> (?t47 sa Y t u Xa Ya, Xa) \\<in> F P \\<and>\n                         (?u47 sa Y t u Xa Ya, Ya) \\<in> F Q \\<and>\n                         sa setinterleaves ((?t47 sa Y t u Xa\n        Ya, ?u47 sa Y t u Xa Ya), insert tick (ev ` A))\n 2. \\<And>sa Y t u Xa Ya.\n       \\<lbrakk>\\<forall>c.\n                   c \\<in> Y \\<longrightarrow>\n                   (\\<forall>t u X.\n                       (t, X) \\<in> F P \\<longrightarrow>\n                       (\\<forall>Y.\n                           (X \\<union> Y) \\<inter> ev ` A =\n                           {} \\<longrightarrow>\n                           sa @\n                           [c] setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<longrightarrow>\n                           (u, Y) \\<in> F Q \\<longrightarrow>\n                           tick \\<in> X \\<or>\n                           tick \\<in> Y \\<or>\n                           X \\<inter> Y \\<noteq> {})) \\<and>\n                   (\\<forall>t u r.\n                       r setinterleaves ((t, u), insert tick\n            (ev ` A)) \\<longrightarrow>\n                       (\\<forall>v.\n                           sa @ [c] = r @ v \\<longrightarrow>\n                           front_tickFree v \\<longrightarrow>\n                           \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n                           (t \\<in> D P \\<longrightarrow>\n                            u \\<notin> T Q) \\<and>\n                           (t \\<in> D Q \\<longrightarrow> u \\<notin> T P)));\n        (t, Xa) \\<in> F P; (u, Ya) \\<in> F Q;\n        sa setinterleaves ((t, u), insert tick (ev ` A))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c.\n                            c \\<in> Y \\<longrightarrow>\n                            (\\<forall>t1 u1.\n                                sa @\n                                [c] setinterleaves ((t1, u1), insert tick\n                         (ev ` A)) \\<longrightarrow>\n                                ((t1, {}) \\<in> F P \\<longrightarrow>\n                                 (u1, {}) \\<notin> F Q) \\<and>\n                                ((t1, {}) \\<in> F Q \\<longrightarrow>\n                                 (u1, {}) \\<notin> F P))", "apply(auto simp:is_processT5)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>sa Y t u Xa Ya c t1 u1.\n       \\<lbrakk>\\<forall>c.\n                   c \\<in> Y \\<longrightarrow>\n                   (\\<forall>t u X.\n                       (t, X) \\<in> F P \\<longrightarrow>\n                       (\\<forall>Y.\n                           (X \\<union> Y) \\<inter> ev ` A =\n                           {} \\<longrightarrow>\n                           sa @\n                           [c] setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<longrightarrow>\n                           (u, Y) \\<in> F Q \\<longrightarrow>\n                           tick \\<in> X \\<or>\n                           tick \\<in> Y \\<or>\n                           X \\<inter> Y \\<noteq> {})) \\<and>\n                   (\\<forall>t u r.\n                       r setinterleaves ((t, u), insert tick\n            (ev ` A)) \\<longrightarrow>\n                       (\\<forall>v.\n                           sa @ [c] = r @ v \\<longrightarrow>\n                           front_tickFree v \\<longrightarrow>\n                           \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n                           (t \\<in> D P \\<longrightarrow>\n                            u \\<notin> T Q) \\<and>\n                           (t \\<in> D Q \\<longrightarrow> u \\<notin> T P)));\n        (t, Xa) \\<in> F P; (u, Ya) \\<in> F Q;\n        sa setinterleaves ((t, u), insert tick (ev ` A)); c \\<in> Y;\n        sa @ [c] setinterleaves ((t1, u1), insert tick (ev ` A));\n        (t1, {}) \\<in> F P; (u1, {}) \\<in> F Q\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>sa Y t u Xa Ya c t1 u1.\n       \\<lbrakk>\\<forall>c.\n                   c \\<in> Y \\<longrightarrow>\n                   (\\<forall>t u X.\n                       (t, X) \\<in> F P \\<longrightarrow>\n                       (\\<forall>Y.\n                           (X \\<union> Y) \\<inter> ev ` A =\n                           {} \\<longrightarrow>\n                           sa @\n                           [c] setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<longrightarrow>\n                           (u, Y) \\<in> F Q \\<longrightarrow>\n                           tick \\<in> X \\<or>\n                           tick \\<in> Y \\<or>\n                           X \\<inter> Y \\<noteq> {})) \\<and>\n                   (\\<forall>t u r.\n                       r setinterleaves ((t, u), insert tick\n            (ev ` A)) \\<longrightarrow>\n                       (\\<forall>v.\n                           sa @ [c] = r @ v \\<longrightarrow>\n                           front_tickFree v \\<longrightarrow>\n                           \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n                           (t \\<in> D P \\<longrightarrow>\n                            u \\<notin> T Q) \\<and>\n                           (t \\<in> D Q \\<longrightarrow> u \\<notin> T P)));\n        (t, Xa) \\<in> F P; (u, Ya) \\<in> F Q;\n        sa setinterleaves ((t, u), insert tick (ev ` A)); c \\<in> Y;\n        sa @ [c] setinterleaves ((t1, u1), insert tick (ev ` A));\n        (t1, {}) \\<in> F Q; (u1, {}) \\<in> F P\\<rbrakk>\n       \\<Longrightarrow> False", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>sa Y t u Xa Ya c t1 u1.\n       \\<lbrakk>\\<forall>c.\n                   c \\<in> Y \\<longrightarrow>\n                   (\\<forall>t u X.\n                       (t, X) \\<in> F P \\<longrightarrow>\n                       (\\<forall>Y.\n                           (X \\<union> Y) \\<inter> ev ` A =\n                           {} \\<longrightarrow>\n                           sa @\n                           [c] setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<longrightarrow>\n                           (u, Y) \\<in> F Q \\<longrightarrow>\n                           tick \\<in> X \\<or>\n                           tick \\<in> Y \\<or>\n                           X \\<inter> Y \\<noteq> {})) \\<and>\n                   (\\<forall>t u r.\n                       r setinterleaves ((t, u), insert tick\n            (ev ` A)) \\<longrightarrow>\n                       (\\<forall>v.\n                           sa @ [c] = r @ v \\<longrightarrow>\n                           front_tickFree v \\<longrightarrow>\n                           \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n                           (t \\<in> D P \\<longrightarrow>\n                            u \\<notin> T Q) \\<and>\n                           (t \\<in> D Q \\<longrightarrow> u \\<notin> T P)));\n        (t, Xa) \\<in> F P; (u, Ya) \\<in> F Q;\n        sa setinterleaves ((t, u), insert tick (ev ` A)); c \\<in> Y;\n        sa @ [c] setinterleaves ((t1, u1), insert tick (ev ` A));\n        (t1, {}) \\<in> F Q; (u1, {}) \\<in> F P\\<rbrakk>\n       \\<Longrightarrow> False", "by (metis Sync.sym Un_empty_right inf_sup_absorb inf_sup_aci(5) insert_absorb insert_not_empty)"], ["proof (state)\nthis:\n  \\<lbrakk>(?sa, ?X)\n           \\<in> {(s, R).\n                  \\<exists>t u X Y.\n                     (t, X) \\<in> F P \\<and>\n                     (u, Y) \\<in> F Q \\<and>\n                     s setinterleaves ((t, u), ev ` A \\<union>\n         {tick}) \\<and>\n                     R =\n                     (X \\<union> Y) \\<inter>\n                     (ev ` A \\<union> {tick}) \\<union>\n                     X \\<inter> Y};\n   \\<forall>c.\n      c \\<in> ?Y \\<longrightarrow>\n      (?sa @ [c], {})\n      \\<notin> {(s, R).\n                \\<exists>t u X Y.\n                   (t, X) \\<in> F P \\<and>\n                   (u, Y) \\<in> F Q \\<and>\n                   s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                   R =\n                   (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                   X \\<inter> Y} \\<union>\n               {(s, R).\n                \\<exists>t u r v.\n                   front_tickFree v \\<and>\n                   (tickFree r \\<or> v = []) \\<and>\n                   s = r @ v \\<and>\n                   r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                   (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                    t \\<in> D Q \\<and> u \\<in> T P)}\\<rbrakk>\n  \\<Longrightarrow> (?sa, ?X \\<union> ?Y)\n                    \\<in> {(s, R).\n                           \\<exists>t u X Y.\n                              (t, X) \\<in> F P \\<and>\n                              (u, Y) \\<in> F Q \\<and>\n                              s setinterleaves ((t, u), ev ` A \\<union>\n                  {tick}) \\<and>\n                              R =\n                              (X \\<union> Y) \\<inter>\n                              (ev ` A \\<union> {tick}) \\<union>\n                              X \\<inter> Y}\n\ngoal (5 subgoals):\n 1. \\<forall>s X Y.\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<and>\n       (\\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (s @ [c], {})\n           \\<notin> {(s, R).\n                     \\<exists>t u X Y.\n                        (t, X) \\<in> F P \\<and>\n                        (u, Y) \\<in> F Q \\<and>\n                        s setinterleaves ((t, u), ev ` A \\<union>\n            {tick}) \\<and>\n                        R =\n                        (X \\<union> Y) \\<inter>\n                        (ev ` A \\<union> {tick}) \\<union>\n                        X \\<inter> Y} \\<union>\n                    {(s, R).\n                     \\<exists>t u r v.\n                        front_tickFree v \\<and>\n                        (tickFree r \\<or> v = []) \\<and>\n                        s = r @ v \\<and>\n                        r setinterleaves ((t, u), ev ` A \\<union>\n            {tick}) \\<and>\n                        (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                         t \\<in> D Q \\<and> u \\<in> T P)}) \\<longrightarrow>\n       (s, X \\<union> Y)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 2. \\<forall>s X.\n       (s @ [tick], {})\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       (s, X - {tick})\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 3. \\<forall>s t.\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)} \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t\n       \\<in> {s. \\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    s = r @ v \\<and>\n                    r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                    (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                     t \\<in> D Q \\<and> u \\<in> T P)}\n 4. \\<forall>s X.\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 5. \\<forall>s.\n       s @ [tick]\n       \\<in> {s. \\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    s = r @ v \\<and>\n                    r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                    (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                     t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)}", "show \"\\<forall>s X Y. (s, X) \\<in> ?f \\<and> (\\<forall>c. c \\<in> Y \\<longrightarrow> (s @ [c], {}) \\<notin> ?f) \\<longrightarrow> (s, X \\<union> Y) \\<in> ?f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s X Y.\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<and>\n       (\\<forall>c.\n           c \\<in> Y \\<longrightarrow>\n           (s @ [c], {})\n           \\<notin> {(s, R).\n                     \\<exists>t u X Y.\n                        (t, X) \\<in> F P \\<and>\n                        (u, Y) \\<in> F Q \\<and>\n                        s setinterleaves ((t, u), ev ` A \\<union>\n            {tick}) \\<and>\n                        R =\n                        (X \\<union> Y) \\<inter>\n                        (ev ` A \\<union> {tick}) \\<union>\n                        X \\<inter> Y} \\<union>\n                    {(s, R).\n                     \\<exists>t u r v.\n                        front_tickFree v \\<and>\n                        (tickFree r \\<or> v = []) \\<and>\n                        s = r @ v \\<and>\n                        r setinterleaves ((t, u), ev ` A \\<union>\n            {tick}) \\<and>\n                        (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                         t \\<in> D Q \\<and> u \\<in> T P)}) \\<longrightarrow>\n       (s, X \\<union> Y)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}", "apply(intro allI impI, elim conjE UnE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s X Y.\n       \\<lbrakk>\\<forall>c.\n                   c \\<in> Y \\<longrightarrow>\n                   (s @ [c], {})\n                   \\<notin> {(s, R).\n                             \\<exists>t u X Y.\n                                (t, X) \\<in> F P \\<and>\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), ev ` A \\<union>\n                    {tick}) \\<and>\n                                R =\n                                (X \\<union> Y) \\<inter>\n                                (ev ` A \\<union> {tick}) \\<union>\n                                X \\<inter> Y} \\<union>\n                            {(s, R).\n                             \\<exists>t u r v.\n                                front_tickFree v \\<and>\n                                (tickFree r \\<or> v = []) \\<and>\n                                s = r @ v \\<and>\n                                r setinterleaves ((t, u), ev ` A \\<union>\n                    {tick}) \\<and>\n                                (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                                 t \\<in> D Q \\<and> u \\<in> T P)};\n        (s, X)\n        \\<in> {(s, R).\n               \\<exists>t u X Y.\n                  (t, X) \\<in> F P \\<and>\n                  (u, Y) \\<in> F Q \\<and>\n                  s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                  R =\n                  (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                  X \\<inter> Y}\\<rbrakk>\n       \\<Longrightarrow> (s, X \\<union> Y)\n                         \\<in> {(s, R).\n                                \\<exists>t u X Y.\n                                   (t, X) \\<in> F P \\<and>\n                                   (u, Y) \\<in> F Q \\<and>\n                                   s setinterleaves ((t, u), ev ` A \\<union>\n                       {tick}) \\<and>\n                                   R =\n                                   (X \\<union> Y) \\<inter>\n                                   (ev ` A \\<union> {tick}) \\<union>\n                                   X \\<inter> Y} \\<union>\n                               {(s, R).\n                                \\<exists>t u r v.\n                                   front_tickFree v \\<and>\n                                   (tickFree r \\<or> v = []) \\<and>\n                                   s = r @ v \\<and>\n                                   r setinterleaves ((t, u), ev ` A \\<union>\n                       {tick}) \\<and>\n                                   (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                                    t \\<in> D Q \\<and> u \\<in> T P)}\n 2. \\<And>s X Y.\n       \\<lbrakk>\\<forall>c.\n                   c \\<in> Y \\<longrightarrow>\n                   (s @ [c], {})\n                   \\<notin> {(s, R).\n                             \\<exists>t u X Y.\n                                (t, X) \\<in> F P \\<and>\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), ev ` A \\<union>\n                    {tick}) \\<and>\n                                R =\n                                (X \\<union> Y) \\<inter>\n                                (ev ` A \\<union> {tick}) \\<union>\n                                X \\<inter> Y} \\<union>\n                            {(s, R).\n                             \\<exists>t u r v.\n                                front_tickFree v \\<and>\n                                (tickFree r \\<or> v = []) \\<and>\n                                s = r @ v \\<and>\n                                r setinterleaves ((t, u), ev ` A \\<union>\n                    {tick}) \\<and>\n                                (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                                 t \\<in> D Q \\<and> u \\<in> T P)};\n        (s, X)\n        \\<in> {(s, R).\n               \\<exists>t u r v.\n                  front_tickFree v \\<and>\n                  (tickFree r \\<or> v = []) \\<and>\n                  s = r @ v \\<and>\n                  r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                  (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                   t \\<in> D Q \\<and> u \\<in> T P)}\\<rbrakk>\n       \\<Longrightarrow> (s, X \\<union> Y)\n                         \\<in> {(s, R).\n                                \\<exists>t u X Y.\n                                   (t, X) \\<in> F P \\<and>\n                                   (u, Y) \\<in> F Q \\<and>\n                                   s setinterleaves ((t, u), ev ` A \\<union>\n                       {tick}) \\<and>\n                                   R =\n                                   (X \\<union> Y) \\<inter>\n                                   (ev ` A \\<union> {tick}) \\<union>\n                                   X \\<inter> Y} \\<union>\n                               {(s, R).\n                                \\<exists>t u r v.\n                                   front_tickFree v \\<and>\n                                   (tickFree r \\<or> v = []) \\<and>\n                                   s = r @ v \\<and>\n                                   r setinterleaves ((t, u), ev ` A \\<union>\n                       {tick}) \\<and>\n                                   (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                                    t \\<in> D Q \\<and> u \\<in> T P)}", "apply(rule rev_subsetD)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s X Y.\n       \\<lbrakk>\\<forall>c.\n                   c \\<in> Y \\<longrightarrow>\n                   (s @ [c], {})\n                   \\<notin> {(s, R).\n                             \\<exists>t u X Y.\n                                (t, X) \\<in> F P \\<and>\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), ev ` A \\<union>\n                    {tick}) \\<and>\n                                R =\n                                (X \\<union> Y) \\<inter>\n                                (ev ` A \\<union> {tick}) \\<union>\n                                X \\<inter> Y} \\<union>\n                            {(s, R).\n                             \\<exists>t u r v.\n                                front_tickFree v \\<and>\n                                (tickFree r \\<or> v = []) \\<and>\n                                s = r @ v \\<and>\n                                r setinterleaves ((t, u), ev ` A \\<union>\n                    {tick}) \\<and>\n                                (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                                 t \\<in> D Q \\<and> u \\<in> T P)};\n        (s, X)\n        \\<in> {(s, R).\n               \\<exists>t u X Y.\n                  (t, X) \\<in> F P \\<and>\n                  (u, Y) \\<in> F Q \\<and>\n                  s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                  R =\n                  (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                  X \\<inter> Y}\\<rbrakk>\n       \\<Longrightarrow> (s, X \\<union> Y) \\<in> ?A6 s X Y\n 2. \\<And>s X Y.\n       \\<lbrakk>\\<forall>c.\n                   c \\<in> Y \\<longrightarrow>\n                   (s @ [c], {})\n                   \\<notin> {(s, R).\n                             \\<exists>t u X Y.\n                                (t, X) \\<in> F P \\<and>\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), ev ` A \\<union>\n                    {tick}) \\<and>\n                                R =\n                                (X \\<union> Y) \\<inter>\n                                (ev ` A \\<union> {tick}) \\<union>\n                                X \\<inter> Y} \\<union>\n                            {(s, R).\n                             \\<exists>t u r v.\n                                front_tickFree v \\<and>\n                                (tickFree r \\<or> v = []) \\<and>\n                                s = r @ v \\<and>\n                                r setinterleaves ((t, u), ev ` A \\<union>\n                    {tick}) \\<and>\n                                (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                                 t \\<in> D Q \\<and> u \\<in> T P)};\n        (s, X)\n        \\<in> {(s, R).\n               \\<exists>t u X Y.\n                  (t, X) \\<in> F P \\<and>\n                  (u, Y) \\<in> F Q \\<and>\n                  s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                  R =\n                  (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                  X \\<inter> Y}\\<rbrakk>\n       \\<Longrightarrow> ?A6 s X Y\n                         \\<subseteq> {(s, R).\n\\<exists>t u X Y.\n   (t, X) \\<in> F P \\<and>\n   (u, Y) \\<in> F Q \\<and>\n   s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n   R =\n   (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n   X \\<inter> Y} \\<union>\n                                     {(s, R).\n\\<exists>t u r v.\n   front_tickFree v \\<and>\n   (tickFree r \\<or> v = []) \\<and>\n   s = r @ v \\<and>\n   r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n   (t \\<in> D P \\<and> u \\<in> T Q \\<or> t \\<in> D Q \\<and> u \\<in> T P)}\n 3. \\<And>s X Y.\n       \\<lbrakk>\\<forall>c.\n                   c \\<in> Y \\<longrightarrow>\n                   (s @ [c], {})\n                   \\<notin> {(s, R).\n                             \\<exists>t u X Y.\n                                (t, X) \\<in> F P \\<and>\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), ev ` A \\<union>\n                    {tick}) \\<and>\n                                R =\n                                (X \\<union> Y) \\<inter>\n                                (ev ` A \\<union> {tick}) \\<union>\n                                X \\<inter> Y} \\<union>\n                            {(s, R).\n                             \\<exists>t u r v.\n                                front_tickFree v \\<and>\n                                (tickFree r \\<or> v = []) \\<and>\n                                s = r @ v \\<and>\n                                r setinterleaves ((t, u), ev ` A \\<union>\n                    {tick}) \\<and>\n                                (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                                 t \\<in> D Q \\<and> u \\<in> T P)};\n        (s, X)\n        \\<in> {(s, R).\n               \\<exists>t u r v.\n                  front_tickFree v \\<and>\n                  (tickFree r \\<or> v = []) \\<and>\n                  s = r @ v \\<and>\n                  r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                  (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                   t \\<in> D Q \\<and> u \\<in> T P)}\\<rbrakk>\n       \\<Longrightarrow> (s, X \\<union> Y)\n                         \\<in> {(s, R).\n                                \\<exists>t u X Y.\n                                   (t, X) \\<in> F P \\<and>\n                                   (u, Y) \\<in> F Q \\<and>\n                                   s setinterleaves ((t, u), ev ` A \\<union>\n                       {tick}) \\<and>\n                                   R =\n                                   (X \\<union> Y) \\<inter>\n                                   (ev ` A \\<union> {tick}) \\<union>\n                                   X \\<inter> Y} \\<union>\n                               {(s, R).\n                                \\<exists>t u r v.\n                                   front_tickFree v \\<and>\n                                   (tickFree r \\<or> v = []) \\<and>\n                                   s = r @ v \\<and>\n                                   r setinterleaves ((t, u), ev ` A \\<union>\n                       {tick}) \\<and>\n                                   (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                                    t \\<in> D Q \\<and> u \\<in> T P)}", "apply(rule is_processT5_SYNC3)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s X Y.\n       \\<lbrakk>\\<forall>c.\n                   c \\<in> Y \\<longrightarrow>\n                   (s @ [c], {})\n                   \\<notin> {(s, R).\n                             \\<exists>t u X Y.\n                                (t, X) \\<in> F P \\<and>\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), ev ` A \\<union>\n                    {tick}) \\<and>\n                                R =\n                                (X \\<union> Y) \\<inter>\n                                (ev ` A \\<union> {tick}) \\<union>\n                                X \\<inter> Y} \\<union>\n                            {(s, R).\n                             \\<exists>t u r v.\n                                front_tickFree v \\<and>\n                                (tickFree r \\<or> v = []) \\<and>\n                                s = r @ v \\<and>\n                                r setinterleaves ((t, u), ev ` A \\<union>\n                    {tick}) \\<and>\n                                (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                                 t \\<in> D Q \\<and> u \\<in> T P)};\n        (s, X)\n        \\<in> {(s, R).\n               \\<exists>t u X Y.\n                  (t, X) \\<in> F P \\<and>\n                  (u, Y) \\<in> F Q \\<and>\n                  s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                  R =\n                  (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                  X \\<inter> Y}\\<rbrakk>\n       \\<Longrightarrow> (s, X)\n                         \\<in> {(s, R).\n                                \\<exists>t u X Y.\n                                   (t, X) \\<in> F P \\<and>\n                                   (u, Y) \\<in> F Q \\<and>\n                                   s setinterleaves ((t, u), ev ` A \\<union>\n                       {tick}) \\<and>\n                                   R =\n                                   (X \\<union> Y) \\<inter>\n                                   (ev ` A \\<union> {tick}) \\<union>\n                                   X \\<inter> Y}\n 2. \\<And>s X Y.\n       \\<lbrakk>\\<forall>c.\n                   c \\<in> Y \\<longrightarrow>\n                   (s @ [c], {})\n                   \\<notin> {(s, R).\n                             \\<exists>t u X Y.\n                                (t, X) \\<in> F P \\<and>\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), ev ` A \\<union>\n                    {tick}) \\<and>\n                                R =\n                                (X \\<union> Y) \\<inter>\n                                (ev ` A \\<union> {tick}) \\<union>\n                                X \\<inter> Y} \\<union>\n                            {(s, R).\n                             \\<exists>t u r v.\n                                front_tickFree v \\<and>\n                                (tickFree r \\<or> v = []) \\<and>\n                                s = r @ v \\<and>\n                                r setinterleaves ((t, u), ev ` A \\<union>\n                    {tick}) \\<and>\n                                (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                                 t \\<in> D Q \\<and> u \\<in> T P)};\n        (s, X)\n        \\<in> {(s, R).\n               \\<exists>t u X Y.\n                  (t, X) \\<in> F P \\<and>\n                  (u, Y) \\<in> F Q \\<and>\n                  s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                  R =\n                  (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                  X \\<inter> Y}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>c.\n                            c \\<in> Y \\<longrightarrow>\n                            (s @ [c], {})\n                            \\<notin> {(s, R).\n\\<exists>t u X Y.\n   (t, X) \\<in> F P \\<and>\n   (u, Y) \\<in> F Q \\<and>\n   s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n   R =\n   (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n   X \\<inter> Y} \\<union>\n                                     {(s, R).\n\\<exists>t u r v.\n   front_tickFree v \\<and>\n   (tickFree r \\<or> v = []) \\<and>\n   s = r @ v \\<and>\n   r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n   (t \\<in> D P \\<and> u \\<in> T Q \\<or> t \\<in> D Q \\<and> u \\<in> T P)}\n 3. \\<And>s X Y.\n       \\<lbrakk>\\<forall>c.\n                   c \\<in> Y \\<longrightarrow>\n                   (s @ [c], {})\n                   \\<notin> {(s, R).\n                             \\<exists>t u X Y.\n                                (t, X) \\<in> F P \\<and>\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), ev ` A \\<union>\n                    {tick}) \\<and>\n                                R =\n                                (X \\<union> Y) \\<inter>\n                                (ev ` A \\<union> {tick}) \\<union>\n                                X \\<inter> Y} \\<union>\n                            {(s, R).\n                             \\<exists>t u r v.\n                                front_tickFree v \\<and>\n                                (tickFree r \\<or> v = []) \\<and>\n                                s = r @ v \\<and>\n                                r setinterleaves ((t, u), ev ` A \\<union>\n                    {tick}) \\<and>\n                                (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                                 t \\<in> D Q \\<and> u \\<in> T P)};\n        (s, X)\n        \\<in> {(s, R).\n               \\<exists>t u X Y.\n                  (t, X) \\<in> F P \\<and>\n                  (u, Y) \\<in> F Q \\<and>\n                  s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                  R =\n                  (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                  X \\<inter> Y}\\<rbrakk>\n       \\<Longrightarrow> {(s, R).\n                          \\<exists>t u X Y.\n                             (t, X) \\<in> F P \\<and>\n                             (u, Y) \\<in> F Q \\<and>\n                             s setinterleaves ((t, u), ev ` A \\<union>\n                 {tick}) \\<and>\n                             R =\n                             (X \\<union> Y) \\<inter>\n                             (ev ` A \\<union> {tick}) \\<union>\n                             X \\<inter> Y}\n                         \\<subseteq> {(s, R).\n\\<exists>t u X Y.\n   (t, X) \\<in> F P \\<and>\n   (u, Y) \\<in> F Q \\<and>\n   s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n   R =\n   (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n   X \\<inter> Y} \\<union>\n                                     {(s, R).\n\\<exists>t u r v.\n   front_tickFree v \\<and>\n   (tickFree r \\<or> v = []) \\<and>\n   s = r @ v \\<and>\n   r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n   (t \\<in> D P \\<and> u \\<in> T Q \\<or> t \\<in> D Q \\<and> u \\<in> T P)}\n 4. \\<And>s X Y.\n       \\<lbrakk>\\<forall>c.\n                   c \\<in> Y \\<longrightarrow>\n                   (s @ [c], {})\n                   \\<notin> {(s, R).\n                             \\<exists>t u X Y.\n                                (t, X) \\<in> F P \\<and>\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), ev ` A \\<union>\n                    {tick}) \\<and>\n                                R =\n                                (X \\<union> Y) \\<inter>\n                                (ev ` A \\<union> {tick}) \\<union>\n                                X \\<inter> Y} \\<union>\n                            {(s, R).\n                             \\<exists>t u r v.\n                                front_tickFree v \\<and>\n                                (tickFree r \\<or> v = []) \\<and>\n                                s = r @ v \\<and>\n                                r setinterleaves ((t, u), ev ` A \\<union>\n                    {tick}) \\<and>\n                                (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                                 t \\<in> D Q \\<and> u \\<in> T P)};\n        (s, X)\n        \\<in> {(s, R).\n               \\<exists>t u r v.\n                  front_tickFree v \\<and>\n                  (tickFree r \\<or> v = []) \\<and>\n                  s = r @ v \\<and>\n                  r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                  (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                   t \\<in> D Q \\<and> u \\<in> T P)}\\<rbrakk>\n       \\<Longrightarrow> (s, X \\<union> Y)\n                         \\<in> {(s, R).\n                                \\<exists>t u X Y.\n                                   (t, X) \\<in> F P \\<and>\n                                   (u, Y) \\<in> F Q \\<and>\n                                   s setinterleaves ((t, u), ev ` A \\<union>\n                       {tick}) \\<and>\n                                   R =\n                                   (X \\<union> Y) \\<inter>\n                                   (ev ` A \\<union> {tick}) \\<union>\n                                   X \\<inter> Y} \\<union>\n                               {(s, R).\n                                \\<exists>t u r v.\n                                   front_tickFree v \\<and>\n                                   (tickFree r \\<or> v = []) \\<and>\n                                   s = r @ v \\<and>\n                                   r setinterleaves ((t, u), ev ` A \\<union>\n                       {tick}) \\<and>\n                                   (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                                    t \\<in> D Q \\<and> u \\<in> T P)}", "by(auto)"], ["proof (state)\nthis:\n  \\<forall>s X Y.\n     (s, X)\n     \\<in> {(s, R).\n            \\<exists>t u X Y.\n               (t, X) \\<in> F P \\<and>\n               (u, Y) \\<in> F Q \\<and>\n               s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n               R =\n               (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n               X \\<inter> Y} \\<union>\n           {(s, R).\n            \\<exists>t u r v.\n               front_tickFree v \\<and>\n               (tickFree r \\<or> v = []) \\<and>\n               s = r @ v \\<and>\n               r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n               (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                t \\<in> D Q \\<and> u \\<in> T P)} \\<and>\n     (\\<forall>c.\n         c \\<in> Y \\<longrightarrow>\n         (s @ [c], {})\n         \\<notin> {(s, R).\n                   \\<exists>t u X Y.\n                      (t, X) \\<in> F P \\<and>\n                      (u, Y) \\<in> F Q \\<and>\n                      s setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      R =\n                      (X \\<union> Y) \\<inter>\n                      (ev ` A \\<union> {tick}) \\<union>\n                      X \\<inter> Y} \\<union>\n                  {(s, R).\n                   \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)}) \\<longrightarrow>\n     (s, X \\<union> Y)\n     \\<in> {(s, R).\n            \\<exists>t u X Y.\n               (t, X) \\<in> F P \\<and>\n               (u, Y) \\<in> F Q \\<and>\n               s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n               R =\n               (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n               X \\<inter> Y} \\<union>\n           {(s, R).\n            \\<exists>t u r v.\n               front_tickFree v \\<and>\n               (tickFree r \\<or> v = []) \\<and>\n               s = r @ v \\<and>\n               r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n               (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                t \\<in> D Q \\<and> u \\<in> T P)}\n\ngoal (4 subgoals):\n 1. \\<forall>s X.\n       (s @ [tick], {})\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       (s, X - {tick})\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 2. \\<forall>s t.\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)} \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t\n       \\<in> {s. \\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    s = r @ v \\<and>\n                    r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                    (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                     t \\<in> D Q \\<and> u \\<in> T P)}\n 3. \\<forall>s X.\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 4. \\<forall>s.\n       s @ [tick]\n       \\<in> {s. \\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    s = r @ v \\<and>\n                    r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                    (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                     t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)}", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<forall>s X.\n       (s @ [tick], {})\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       (s, X - {tick})\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 2. \\<forall>s t.\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)} \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t\n       \\<in> {s. \\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    s = r @ v \\<and>\n                    r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                    (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                     t \\<in> D Q \\<and> u \\<in> T P)}\n 3. \\<forall>s X.\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 4. \\<forall>s.\n       s @ [tick]\n       \\<in> {s. \\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    s = r @ v \\<and>\n                    r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                    (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                     t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)}", "show \"\\<forall>s X. (s @ [tick], {}) \\<in> ?f \\<longrightarrow> (s, X - {tick}) \\<in> ?f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s X.\n       (s @ [tick], {})\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       (s, X - {tick})\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}", "apply auto"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>s X t u Xa Y.\n       \\<lbrakk>(t, Xa) \\<in> F P; (u, Y) \\<in> F Q;\n        s @ [tick] setinterleaves ((t, u), insert tick (ev ` A));\n        tick \\<notin> Xa; tick \\<notin> Y;\n        (Xa \\<union> Y) \\<inter> ev ` A = {}; Xa \\<inter> Y = {};\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u Xa.\n                            (t, Xa) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                X - {tick} =\n                                (Xa \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Y)\n 2. \\<And>s X t u r v.\n       \\<lbrakk>front_tickFree v; s @ [tick] = r @ v;\n        r setinterleaves ((t, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; t \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u Xa.\n                            (t, Xa) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                X - {tick} =\n                                (Xa \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Y)\n 3. \\<And>s X t u r v.\n       \\<lbrakk>front_tickFree v; s @ [tick] = r @ v;\n        r setinterleaves ((t, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; t \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u Xa.\n                            (t, Xa) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                X - {tick} =\n                                (Xa \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Y)\n 4. \\<And>s X t u.\n       \\<lbrakk>s @ [tick] setinterleaves ((t, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        t \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u Xa.\n                            (t, Xa) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                X - {tick} =\n                                (Xa \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Y)\n 5. \\<And>s X t u.\n       \\<lbrakk>s @ [tick] setinterleaves ((t, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        t \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u Xa.\n                            (t, Xa) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                X - {tick} =\n                                (Xa \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Y)", "apply(drule F_T)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>s X t u Xa Y.\n       \\<lbrakk>(u, Y) \\<in> F Q;\n        s @ [tick] setinterleaves ((t, u), insert tick (ev ` A));\n        tick \\<notin> Xa; tick \\<notin> Y;\n        (Xa \\<union> Y) \\<inter> ev ` A = {}; Xa \\<inter> Y = {};\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        t \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u Xa.\n                            (t, Xa) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                X - {tick} =\n                                (Xa \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Y)\n 2. \\<And>s X t u r v.\n       \\<lbrakk>front_tickFree v; s @ [tick] = r @ v;\n        r setinterleaves ((t, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; t \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u Xa.\n                            (t, Xa) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                X - {tick} =\n                                (Xa \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Y)\n 3. \\<And>s X t u r v.\n       \\<lbrakk>front_tickFree v; s @ [tick] = r @ v;\n        r setinterleaves ((t, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; t \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u Xa.\n                            (t, Xa) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                X - {tick} =\n                                (Xa \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Y)\n 4. \\<And>s X t u.\n       \\<lbrakk>s @ [tick] setinterleaves ((t, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        t \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u Xa.\n                            (t, Xa) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                X - {tick} =\n                                (Xa \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Y)\n 5. \\<And>s X t u.\n       \\<lbrakk>s @ [tick] setinterleaves ((t, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        t \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u Xa.\n                            (t, Xa) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                X - {tick} =\n                                (Xa \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Y)", "apply(drule F_T)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>s X t u Xa Y.\n       \\<lbrakk>s @ [tick] setinterleaves ((t, u), insert tick (ev ` A));\n        tick \\<notin> Xa; tick \\<notin> Y;\n        (Xa \\<union> Y) \\<inter> ev ` A = {}; Xa \\<inter> Y = {};\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        t \\<in> T P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u Xa.\n                            (t, Xa) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                X - {tick} =\n                                (Xa \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Y)\n 2. \\<And>s X t u r v.\n       \\<lbrakk>front_tickFree v; s @ [tick] = r @ v;\n        r setinterleaves ((t, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; t \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u Xa.\n                            (t, Xa) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                X - {tick} =\n                                (Xa \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Y)\n 3. \\<And>s X t u r v.\n       \\<lbrakk>front_tickFree v; s @ [tick] = r @ v;\n        r setinterleaves ((t, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; t \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u Xa.\n                            (t, Xa) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                X - {tick} =\n                                (Xa \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Y)\n 4. \\<And>s X t u.\n       \\<lbrakk>s @ [tick] setinterleaves ((t, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        t \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u Xa.\n                            (t, Xa) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                X - {tick} =\n                                (Xa \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Y)\n 5. \\<And>s X t u.\n       \\<lbrakk>s @ [tick] setinterleaves ((t, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        t \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u Xa.\n                            (t, Xa) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                X - {tick} =\n                                (Xa \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Y)", "using syncWithTick_imp_NTF1"], ["proof (prove)\nusing this:\n  \\<lbrakk>?s @ [tick] setinterleaves ((?t, ?u), insert tick (ev ` ?A));\n   ?t \\<in> T ?P; ?u \\<in> T ?Q\\<rbrakk>\n  \\<Longrightarrow> \\<exists>t u Xa Y.\n                       (t, Xa) \\<in> F ?P \\<and>\n                       (u, Y) \\<in> F ?Q \\<and>\n                       ?s setinterleaves ((t, u), insert tick\n             (ev ` ?A)) \\<and>\n                       ?X - {tick} =\n                       (Xa \\<union> Y) \\<inter>\n                       insert tick (ev ` ?A) \\<union>\n                       Xa \\<inter> Y\n\ngoal (5 subgoals):\n 1. \\<And>s X t u Xa Y.\n       \\<lbrakk>s @ [tick] setinterleaves ((t, u), insert tick (ev ` A));\n        tick \\<notin> Xa; tick \\<notin> Y;\n        (Xa \\<union> Y) \\<inter> ev ` A = {}; Xa \\<inter> Y = {};\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        t \\<in> T P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u Xa.\n                            (t, Xa) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                X - {tick} =\n                                (Xa \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Y)\n 2. \\<And>s X t u r v.\n       \\<lbrakk>front_tickFree v; s @ [tick] = r @ v;\n        r setinterleaves ((t, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; t \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u Xa.\n                            (t, Xa) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                X - {tick} =\n                                (Xa \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Y)\n 3. \\<And>s X t u r v.\n       \\<lbrakk>front_tickFree v; s @ [tick] = r @ v;\n        r setinterleaves ((t, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; t \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u Xa.\n                            (t, Xa) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                X - {tick} =\n                                (Xa \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Y)\n 4. \\<And>s X t u.\n       \\<lbrakk>s @ [tick] setinterleaves ((t, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        t \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u Xa.\n                            (t, Xa) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                X - {tick} =\n                                (Xa \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Y)\n 5. \\<And>s X t u.\n       \\<lbrakk>s @ [tick] setinterleaves ((t, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        t \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u Xa.\n                            (t, Xa) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                X - {tick} =\n                                (Xa \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Y)", "apply fastforce"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s X t u r v.\n       \\<lbrakk>front_tickFree v; s @ [tick] = r @ v;\n        r setinterleaves ((t, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; t \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u Xa.\n                            (t, Xa) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                X - {tick} =\n                                (Xa \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Y)\n 2. \\<And>s X t u r v.\n       \\<lbrakk>front_tickFree v; s @ [tick] = r @ v;\n        r setinterleaves ((t, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; t \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u Xa.\n                            (t, Xa) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                X - {tick} =\n                                (Xa \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Y)\n 3. \\<And>s X t u.\n       \\<lbrakk>s @ [tick] setinterleaves ((t, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        t \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u Xa.\n                            (t, Xa) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                X - {tick} =\n                                (Xa \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Y)\n 4. \\<And>s X t u.\n       \\<lbrakk>s @ [tick] setinterleaves ((t, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        t \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u Xa.\n                            (t, Xa) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                X - {tick} =\n                                (Xa \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Y)", "apply(metis append_assoc append_same_eq front_tickFree_dw_closed nonTickFree_n_frontTickFree \n       non_tickFree_tick tickFree_append)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s X t u r v.\n       \\<lbrakk>front_tickFree v; s @ [tick] = r @ v;\n        r setinterleaves ((t, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        tickFree r; t \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u Xa.\n                            (t, Xa) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                X - {tick} =\n                                (Xa \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Y)\n 2. \\<And>s X t u.\n       \\<lbrakk>s @ [tick] setinterleaves ((t, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        t \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u Xa.\n                            (t, Xa) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                X - {tick} =\n                                (Xa \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Y)\n 3. \\<And>s X t u.\n       \\<lbrakk>s @ [tick] setinterleaves ((t, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        t \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u Xa.\n                            (t, Xa) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                X - {tick} =\n                                (Xa \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Y)", "apply(metis butlast_append butlast_snoc front_tickFree_charn non_tickFree_tick tickFree_append \n      tickFree_implies_front_tickFree)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s X t u.\n       \\<lbrakk>s @ [tick] setinterleaves ((t, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        t \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u Xa.\n                            (t, Xa) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                X - {tick} =\n                                (Xa \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Y)\n 2. \\<And>s X t u.\n       \\<lbrakk>s @ [tick] setinterleaves ((t, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        t \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u Xa.\n                            (t, Xa) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                X - {tick} =\n                                (Xa \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Y)", "apply (metis NT_ND append_Nil2 front_tickFree_Nil is_processT3_ST is_processT9_S_swap \n     syncWithTick_imp_NTF)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s X t u.\n       \\<lbrakk>s @ [tick] setinterleaves ((t, u), insert tick (ev ` A));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n               (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        t \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u Xa.\n                            (t, Xa) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                X - {tick} =\n                                (Xa \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Y)", "by (metis NT_ND append_Nil2 front_tickFree_Nil is_processT3_ST is_processT9_S_swap \n    syncWithTick_imp_NTF)"], ["proof (state)\nthis:\n  \\<forall>s X.\n     (s @ [tick], {})\n     \\<in> {(s, R).\n            \\<exists>t u X Y.\n               (t, X) \\<in> F P \\<and>\n               (u, Y) \\<in> F Q \\<and>\n               s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n               R =\n               (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n               X \\<inter> Y} \\<union>\n           {(s, R).\n            \\<exists>t u r v.\n               front_tickFree v \\<and>\n               (tickFree r \\<or> v = []) \\<and>\n               s = r @ v \\<and>\n               r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n               (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n     (s, X - {tick})\n     \\<in> {(s, R).\n            \\<exists>t u X Y.\n               (t, X) \\<in> F P \\<and>\n               (u, Y) \\<in> F Q \\<and>\n               s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n               R =\n               (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n               X \\<inter> Y} \\<union>\n           {(s, R).\n            \\<exists>t u r v.\n               front_tickFree v \\<and>\n               (tickFree r \\<or> v = []) \\<and>\n               s = r @ v \\<and>\n               r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n               (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                t \\<in> D Q \\<and> u \\<in> T P)}\n\ngoal (3 subgoals):\n 1. \\<forall>s t.\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)} \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t\n       \\<in> {s. \\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    s = r @ v \\<and>\n                    r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                    (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                     t \\<in> D Q \\<and> u \\<in> T P)}\n 2. \\<forall>s X.\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 3. \\<forall>s.\n       s @ [tick]\n       \\<in> {s. \\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    s = r @ v \\<and>\n                    r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                    (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                     t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)}", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<forall>s t.\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)} \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t\n       \\<in> {s. \\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    s = r @ v \\<and>\n                    r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                    (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                     t \\<in> D Q \\<and> u \\<in> T P)}\n 2. \\<forall>s X.\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 3. \\<forall>s.\n       s @ [tick]\n       \\<in> {s. \\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    s = r @ v \\<and>\n                    r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                    (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                     t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)}", "show \"\\<forall>s t. s \\<in> ?d \\<and> tickFree s \\<and> front_tickFree t \\<longrightarrow> s @ t \\<in> ?d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s t.\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)} \\<and>\n       tickFree s \\<and> front_tickFree t \\<longrightarrow>\n       s @ t\n       \\<in> {s. \\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    s = r @ v \\<and>\n                    r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                    (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                     t \\<in> D Q \\<and> u \\<in> T P)}", "apply auto"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t ta u r v.\n       \\<lbrakk>tickFree v; front_tickFree t; front_tickFree v;\n        r setinterleaves ((ta, u), insert tick (ev ` A)); tickFree r;\n        ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta u ra va.\n                            front_tickFree va \\<and>\n                            (tickFree ra \\<or> va = []) \\<and>\n                            r @ v @ t = ra @ va \\<and>\n                            ra setinterleaves ((ta, u), insert tick\n                   (ev ` A)) \\<and>\n                            (ta \\<in> D P \\<and> u \\<in> T Q \\<or>\n                             ta \\<in> D Q \\<and> u \\<in> T P)\n 2. \\<And>t ta u r v.\n       \\<lbrakk>tickFree v; front_tickFree t; front_tickFree v;\n        r setinterleaves ((ta, u), insert tick (ev ` A)); tickFree r;\n        ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta u ra va.\n                            front_tickFree va \\<and>\n                            (tickFree ra \\<or> va = []) \\<and>\n                            r @ v @ t = ra @ va \\<and>\n                            ra setinterleaves ((ta, u), insert tick\n                   (ev ` A)) \\<and>\n                            (ta \\<in> D P \\<and> u \\<in> T Q \\<or>\n                             ta \\<in> D Q \\<and> u \\<in> T P)\n 3. \\<And>t ta u r.\n       \\<lbrakk>tickFree r; front_tickFree t;\n        r setinterleaves ((ta, u), insert tick (ev ` A)); ta \\<in> D P;\n        u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta u ra v.\n                            front_tickFree v \\<and>\n                            (tickFree ra \\<or> v = []) \\<and>\n                            r @ t = ra @ v \\<and>\n                            ra setinterleaves ((ta, u), insert tick\n                   (ev ` A)) \\<and>\n                            (ta \\<in> D P \\<and> u \\<in> T Q \\<or>\n                             ta \\<in> D Q \\<and> u \\<in> T P)\n 4. \\<And>t ta u r.\n       \\<lbrakk>tickFree r; front_tickFree t;\n        r setinterleaves ((ta, u), insert tick (ev ` A)); ta \\<in> D Q;\n        u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta u ra v.\n                            front_tickFree v \\<and>\n                            (tickFree ra \\<or> v = []) \\<and>\n                            r @ t = ra @ v \\<and>\n                            ra setinterleaves ((ta, u), insert tick\n                   (ev ` A)) \\<and>\n                            (ta \\<in> D P \\<and> u \\<in> T Q \\<or>\n                             ta \\<in> D Q \\<and> u \\<in> T P)", "using front_tickFree_append"], ["proof (prove)\nusing this:\n  \\<lbrakk>tickFree ?s; front_tickFree ?t\\<rbrakk>\n  \\<Longrightarrow> front_tickFree (?s @ ?t)\n\ngoal (4 subgoals):\n 1. \\<And>t ta u r v.\n       \\<lbrakk>tickFree v; front_tickFree t; front_tickFree v;\n        r setinterleaves ((ta, u), insert tick (ev ` A)); tickFree r;\n        ta \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta u ra va.\n                            front_tickFree va \\<and>\n                            (tickFree ra \\<or> va = []) \\<and>\n                            r @ v @ t = ra @ va \\<and>\n                            ra setinterleaves ((ta, u), insert tick\n                   (ev ` A)) \\<and>\n                            (ta \\<in> D P \\<and> u \\<in> T Q \\<or>\n                             ta \\<in> D Q \\<and> u \\<in> T P)\n 2. \\<And>t ta u r v.\n       \\<lbrakk>tickFree v; front_tickFree t; front_tickFree v;\n        r setinterleaves ((ta, u), insert tick (ev ` A)); tickFree r;\n        ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta u ra va.\n                            front_tickFree va \\<and>\n                            (tickFree ra \\<or> va = []) \\<and>\n                            r @ v @ t = ra @ va \\<and>\n                            ra setinterleaves ((ta, u), insert tick\n                   (ev ` A)) \\<and>\n                            (ta \\<in> D P \\<and> u \\<in> T Q \\<or>\n                             ta \\<in> D Q \\<and> u \\<in> T P)\n 3. \\<And>t ta u r.\n       \\<lbrakk>tickFree r; front_tickFree t;\n        r setinterleaves ((ta, u), insert tick (ev ` A)); ta \\<in> D P;\n        u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta u ra v.\n                            front_tickFree v \\<and>\n                            (tickFree ra \\<or> v = []) \\<and>\n                            r @ t = ra @ v \\<and>\n                            ra setinterleaves ((ta, u), insert tick\n                   (ev ` A)) \\<and>\n                            (ta \\<in> D P \\<and> u \\<in> T Q \\<or>\n                             ta \\<in> D Q \\<and> u \\<in> T P)\n 4. \\<And>t ta u r.\n       \\<lbrakk>tickFree r; front_tickFree t;\n        r setinterleaves ((ta, u), insert tick (ev ` A)); ta \\<in> D Q;\n        u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta u ra v.\n                            front_tickFree v \\<and>\n                            (tickFree ra \\<or> v = []) \\<and>\n                            r @ t = ra @ v \\<and>\n                            ra setinterleaves ((ta, u), insert tick\n                   (ev ` A)) \\<and>\n                            (ta \\<in> D P \\<and> u \\<in> T Q \\<or>\n                             ta \\<in> D Q \\<and> u \\<in> T P)", "apply blast"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t ta u r v.\n       \\<lbrakk>tickFree v; front_tickFree t; front_tickFree v;\n        r setinterleaves ((ta, u), insert tick (ev ` A)); tickFree r;\n        ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta u ra va.\n                            front_tickFree va \\<and>\n                            (tickFree ra \\<or> va = []) \\<and>\n                            r @ v @ t = ra @ va \\<and>\n                            ra setinterleaves ((ta, u), insert tick\n                   (ev ` A)) \\<and>\n                            (ta \\<in> D P \\<and> u \\<in> T Q \\<or>\n                             ta \\<in> D Q \\<and> u \\<in> T P)\n 2. \\<And>t ta u r.\n       \\<lbrakk>tickFree r; front_tickFree t;\n        r setinterleaves ((ta, u), insert tick (ev ` A)); ta \\<in> D P;\n        u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta u ra v.\n                            front_tickFree v \\<and>\n                            (tickFree ra \\<or> v = []) \\<and>\n                            r @ t = ra @ v \\<and>\n                            ra setinterleaves ((ta, u), insert tick\n                   (ev ` A)) \\<and>\n                            (ta \\<in> D P \\<and> u \\<in> T Q \\<or>\n                             ta \\<in> D Q \\<and> u \\<in> T P)\n 3. \\<And>t ta u r.\n       \\<lbrakk>tickFree r; front_tickFree t;\n        r setinterleaves ((ta, u), insert tick (ev ` A)); ta \\<in> D Q;\n        u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta u ra v.\n                            front_tickFree v \\<and>\n                            (tickFree ra \\<or> v = []) \\<and>\n                            r @ t = ra @ v \\<and>\n                            ra setinterleaves ((ta, u), insert tick\n                   (ev ` A)) \\<and>\n                            (ta \\<in> D P \\<and> u \\<in> T Q \\<or>\n                             ta \\<in> D Q \\<and> u \\<in> T P)", "using front_tickFree_append"], ["proof (prove)\nusing this:\n  \\<lbrakk>tickFree ?s; front_tickFree ?t\\<rbrakk>\n  \\<Longrightarrow> front_tickFree (?s @ ?t)\n\ngoal (3 subgoals):\n 1. \\<And>t ta u r v.\n       \\<lbrakk>tickFree v; front_tickFree t; front_tickFree v;\n        r setinterleaves ((ta, u), insert tick (ev ` A)); tickFree r;\n        ta \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta u ra va.\n                            front_tickFree va \\<and>\n                            (tickFree ra \\<or> va = []) \\<and>\n                            r @ v @ t = ra @ va \\<and>\n                            ra setinterleaves ((ta, u), insert tick\n                   (ev ` A)) \\<and>\n                            (ta \\<in> D P \\<and> u \\<in> T Q \\<or>\n                             ta \\<in> D Q \\<and> u \\<in> T P)\n 2. \\<And>t ta u r.\n       \\<lbrakk>tickFree r; front_tickFree t;\n        r setinterleaves ((ta, u), insert tick (ev ` A)); ta \\<in> D P;\n        u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta u ra v.\n                            front_tickFree v \\<and>\n                            (tickFree ra \\<or> v = []) \\<and>\n                            r @ t = ra @ v \\<and>\n                            ra setinterleaves ((ta, u), insert tick\n                   (ev ` A)) \\<and>\n                            (ta \\<in> D P \\<and> u \\<in> T Q \\<or>\n                             ta \\<in> D Q \\<and> u \\<in> T P)\n 3. \\<And>t ta u r.\n       \\<lbrakk>tickFree r; front_tickFree t;\n        r setinterleaves ((ta, u), insert tick (ev ` A)); ta \\<in> D Q;\n        u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta u ra v.\n                            front_tickFree v \\<and>\n                            (tickFree ra \\<or> v = []) \\<and>\n                            r @ t = ra @ v \\<and>\n                            ra setinterleaves ((ta, u), insert tick\n                   (ev ` A)) \\<and>\n                            (ta \\<in> D P \\<and> u \\<in> T Q \\<or>\n                             ta \\<in> D Q \\<and> u \\<in> T P)", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t ta u r.\n       \\<lbrakk>tickFree r; front_tickFree t;\n        r setinterleaves ((ta, u), insert tick (ev ` A)); ta \\<in> D P;\n        u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta u ra v.\n                            front_tickFree v \\<and>\n                            (tickFree ra \\<or> v = []) \\<and>\n                            r @ t = ra @ v \\<and>\n                            ra setinterleaves ((ta, u), insert tick\n                   (ev ` A)) \\<and>\n                            (ta \\<in> D P \\<and> u \\<in> T Q \\<or>\n                             ta \\<in> D Q \\<and> u \\<in> T P)\n 2. \\<And>t ta u r.\n       \\<lbrakk>tickFree r; front_tickFree t;\n        r setinterleaves ((ta, u), insert tick (ev ` A)); ta \\<in> D Q;\n        u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta u ra v.\n                            front_tickFree v \\<and>\n                            (tickFree ra \\<or> v = []) \\<and>\n                            r @ t = ra @ v \\<and>\n                            ra setinterleaves ((ta, u), insert tick\n                   (ev ` A)) \\<and>\n                            (ta \\<in> D P \\<and> u \\<in> T Q \\<or>\n                             ta \\<in> D Q \\<and> u \\<in> T P)", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t ta u r.\n       \\<lbrakk>tickFree r; front_tickFree t;\n        r setinterleaves ((ta, u), insert tick (ev ` A)); ta \\<in> D Q;\n        u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ta u ra v.\n                            front_tickFree v \\<and>\n                            (tickFree ra \\<or> v = []) \\<and>\n                            r @ t = ra @ v \\<and>\n                            ra setinterleaves ((ta, u), insert tick\n                   (ev ` A)) \\<and>\n                            (ta \\<in> D P \\<and> u \\<in> T Q \\<or>\n                             ta \\<in> D Q \\<and> u \\<in> T P)", "by blast"], ["proof (state)\nthis:\n  \\<forall>s t.\n     s \\<in> {s. \\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    s = r @ v \\<and>\n                    r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                    (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                     t \\<in> D Q \\<and> u \\<in> T P)} \\<and>\n     tickFree s \\<and> front_tickFree t \\<longrightarrow>\n     s @ t\n     \\<in> {s. \\<exists>t u r v.\n                  front_tickFree v \\<and>\n                  (tickFree r \\<or> v = []) \\<and>\n                  s = r @ v \\<and>\n                  r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                  (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                   t \\<in> D Q \\<and> u \\<in> T P)}\n\ngoal (2 subgoals):\n 1. \\<forall>s X.\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 2. \\<forall>s.\n       s @ [tick]\n       \\<in> {s. \\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    s = r @ v \\<and>\n                    r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                    (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                     t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)}", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>s X.\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}\n 2. \\<forall>s.\n       s @ [tick]\n       \\<in> {s. \\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    s = r @ v \\<and>\n                    r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                    (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                     t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)}", "show \"\\<forall>s X. s \\<in> ?d \\<longrightarrow>  (s, X) \\<in> ?f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s X.\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       (s, X)\n       \\<in> {(s, R).\n              \\<exists>t u X Y.\n                 (t, X) \\<in> F P \\<and>\n                 (u, Y) \\<in> F Q \\<and>\n                 s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 R =\n                 (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n                 X \\<inter> Y} \\<union>\n             {(s, R).\n              \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}", "by blast"], ["proof (state)\nthis:\n  \\<forall>s X.\n     s \\<in> {s. \\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    s = r @ v \\<and>\n                    r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                    (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                     t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n     (s, X)\n     \\<in> {(s, R).\n            \\<exists>t u X Y.\n               (t, X) \\<in> F P \\<and>\n               (u, Y) \\<in> F Q \\<and>\n               s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n               R =\n               (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n               X \\<inter> Y} \\<union>\n           {(s, R).\n            \\<exists>t u r v.\n               front_tickFree v \\<and>\n               (tickFree r \\<or> v = []) \\<and>\n               s = r @ v \\<and>\n               r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n               (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                t \\<in> D Q \\<and> u \\<in> T P)}\n\ngoal (1 subgoal):\n 1. \\<forall>s.\n       s @ [tick]\n       \\<in> {s. \\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    s = r @ v \\<and>\n                    r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                    (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                     t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>s.\n       s @ [tick]\n       \\<in> {s. \\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    s = r @ v \\<and>\n                    r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                    (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                     t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)}", "show \"\\<forall>s. s @ [tick] \\<in> ?d \\<longrightarrow> s \\<in> ?d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s.\n       s @ [tick]\n       \\<in> {s. \\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    s = r @ v \\<and>\n                    r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                    (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                     t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n       s \\<in> {s. \\<exists>t u r v.\n                      front_tickFree v \\<and>\n                      (tickFree r \\<or> v = []) \\<and>\n                      s = r @ v \\<and>\n                      r setinterleaves ((t, u), ev ` A \\<union>\n          {tick}) \\<and>\n                      (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                       t \\<in> D Q \\<and> u \\<in> T P)}", "apply auto"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s t u r v.\n       \\<lbrakk>front_tickFree v; s @ [tick] = r @ v;\n        r setinterleaves ((t, u), insert tick (ev ` A)); tickFree r;\n        t \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u r v.\n                            front_tickFree v \\<and>\n                            (tickFree r \\<or> v = []) \\<and>\n                            s = r @ v \\<and>\n                            r setinterleaves ((t, u), insert tick\n                 (ev ` A)) \\<and>\n                            (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                             t \\<in> D Q \\<and> u \\<in> T P)\n 2. \\<And>s t u r v.\n       \\<lbrakk>front_tickFree v; s @ [tick] = r @ v;\n        r setinterleaves ((t, u), insert tick (ev ` A)); tickFree r;\n        t \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u r v.\n                            front_tickFree v \\<and>\n                            (tickFree r \\<or> v = []) \\<and>\n                            s = r @ v \\<and>\n                            r setinterleaves ((t, u), insert tick\n                 (ev ` A)) \\<and>\n                            (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                             t \\<in> D Q \\<and> u \\<in> T P)\n 3. \\<And>s t u.\n       \\<lbrakk>s @ [tick] setinterleaves ((t, u), insert tick (ev ` A));\n        t \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u r v.\n                            front_tickFree v \\<and>\n                            (tickFree r \\<or> v = []) \\<and>\n                            s = r @ v \\<and>\n                            r setinterleaves ((t, u), insert tick\n                 (ev ` A)) \\<and>\n                            (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                             t \\<in> D Q \\<and> u \\<in> T P)\n 4. \\<And>s t u.\n       \\<lbrakk>s @ [tick] setinterleaves ((t, u), insert tick (ev ` A));\n        t \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u r v.\n                            front_tickFree v \\<and>\n                            (tickFree r \\<or> v = []) \\<and>\n                            s = r @ v \\<and>\n                            r setinterleaves ((t, u), insert tick\n                 (ev ` A)) \\<and>\n                            (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                             t \\<in> D Q \\<and> u \\<in> T P)", "apply (metis butlast_append butlast_snoc front_tickFree_charn non_tickFree_tick \n       tickFree_append tickFree_implies_front_tickFree)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s t u r v.\n       \\<lbrakk>front_tickFree v; s @ [tick] = r @ v;\n        r setinterleaves ((t, u), insert tick (ev ` A)); tickFree r;\n        t \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u r v.\n                            front_tickFree v \\<and>\n                            (tickFree r \\<or> v = []) \\<and>\n                            s = r @ v \\<and>\n                            r setinterleaves ((t, u), insert tick\n                 (ev ` A)) \\<and>\n                            (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                             t \\<in> D Q \\<and> u \\<in> T P)\n 2. \\<And>s t u.\n       \\<lbrakk>s @ [tick] setinterleaves ((t, u), insert tick (ev ` A));\n        t \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u r v.\n                            front_tickFree v \\<and>\n                            (tickFree r \\<or> v = []) \\<and>\n                            s = r @ v \\<and>\n                            r setinterleaves ((t, u), insert tick\n                 (ev ` A)) \\<and>\n                            (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                             t \\<in> D Q \\<and> u \\<in> T P)\n 3. \\<And>s t u.\n       \\<lbrakk>s @ [tick] setinterleaves ((t, u), insert tick (ev ` A));\n        t \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u r v.\n                            front_tickFree v \\<and>\n                            (tickFree r \\<or> v = []) \\<and>\n                            s = r @ v \\<and>\n                            r setinterleaves ((t, u), insert tick\n                 (ev ` A)) \\<and>\n                            (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                             t \\<in> D Q \\<and> u \\<in> T P)", "apply (metis butlast_append butlast_snoc front_tickFree_charn non_tickFree_tick \n      tickFree_append tickFree_implies_front_tickFree)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t u.\n       \\<lbrakk>s @ [tick] setinterleaves ((t, u), insert tick (ev ` A));\n        t \\<in> D P; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u r v.\n                            front_tickFree v \\<and>\n                            (tickFree r \\<or> v = []) \\<and>\n                            s = r @ v \\<and>\n                            r setinterleaves ((t, u), insert tick\n                 (ev ` A)) \\<and>\n                            (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                             t \\<in> D Q \\<and> u \\<in> T P)\n 2. \\<And>s t u.\n       \\<lbrakk>s @ [tick] setinterleaves ((t, u), insert tick (ev ` A));\n        t \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u r v.\n                            front_tickFree v \\<and>\n                            (tickFree r \\<or> v = []) \\<and>\n                            s = r @ v \\<and>\n                            r setinterleaves ((t, u), insert tick\n                 (ev ` A)) \\<and>\n                            (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                             t \\<in> D Q \\<and> u \\<in> T P)", "apply (metis D_T append.right_neutral front_tickFree_Nil is_processT3_ST is_processT9 \n     syncWithTick_imp_NTF)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s t u.\n       \\<lbrakk>s @ [tick] setinterleaves ((t, u), insert tick (ev ` A));\n        t \\<in> D Q; u \\<in> T P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u r v.\n                            front_tickFree v \\<and>\n                            (tickFree r \\<or> v = []) \\<and>\n                            s = r @ v \\<and>\n                            r setinterleaves ((t, u), insert tick\n                 (ev ` A)) \\<and>\n                            (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                             t \\<in> D Q \\<and> u \\<in> T P)", "by (metis D_T append.right_neutral front_tickFree_Nil is_processT3_ST is_processT9 \n    syncWithTick_imp_NTF)"], ["proof (state)\nthis:\n  \\<forall>s.\n     s @ [tick]\n     \\<in> {s. \\<exists>t u r v.\n                  front_tickFree v \\<and>\n                  (tickFree r \\<or> v = []) \\<and>\n                  s = r @ v \\<and>\n                  r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                  (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                   t \\<in> D Q \\<and> u \\<in> T P)} \\<longrightarrow>\n     s \\<in> {s. \\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    s = r @ v \\<and>\n                    r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                    (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                     t \\<in> D Q \\<and> u \\<in> T P)}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas  Rep_Abs_Sync[simp] = Abs_process_inverse[simplified, OF sync_maintains_is_process]"], ["", "subsection\\<open>Projections\\<close>"], ["", "lemma\n  F_sync    : \"F(P \\<lbrakk> A \\<rbrakk> Q) = \n                   {(s,R).\\<exists> t u X Y. (t,X) \\<in> F P \\<and> \n                                       (u,Y) \\<in> F Q \\<and> \n                                       s setinterleaves ((t,u),(ev`A) \\<union> {tick}) \\<and> \n                                       R = (X \\<union> Y) \\<inter> ((ev`A) \\<union> {tick}) \\<union> X \\<inter> Y} \\<union> \n                   {(s,R).\\<exists> t u r v. front_tickFree v \\<and> \n                                       (tickFree r \\<or> v=[]) \\<and> \n                                       s = r@v \\<and> \n                                       r setinterleaves ((t,u),(ev`A)\\<union>{tick}) \\<and> \n                                       (t \\<in> D P \\<and> u \\<in> T Q \\<or> t \\<in> D Q \\<and> u \\<in> T P)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F (P \\<lbrakk>A\\<rbrakk> Q) =\n    {(s, R).\n     \\<exists>t u X Y.\n        (t, X) \\<in> F P \\<and>\n        (u, Y) \\<in> F Q \\<and>\n        s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n        R =\n        (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n        X \\<inter> Y} \\<union>\n    {(s, R).\n     \\<exists>t u r v.\n        front_tickFree v \\<and>\n        (tickFree r \\<or> v = []) \\<and>\n        s = r @ v \\<and>\n        r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n        (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n         t \\<in> D Q \\<and> u \\<in> T P)}", "unfolding sync_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. F (Abs_process\n        ({(s, R).\n          \\<exists>t u X Y.\n             (t, X) \\<in> F P \\<and>\n             (u, Y) \\<in> F Q \\<and>\n             s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n             R =\n             (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n             X \\<inter> Y} \\<union>\n         {(s, R).\n          \\<exists>t u r v.\n             front_tickFree v \\<and>\n             (tickFree r \\<or> v = []) \\<and>\n             s = r @ v \\<and>\n             r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n             (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n              t \\<in> D Q \\<and> u \\<in> T P)},\n         {s. \\<exists>t u r v.\n                front_tickFree v \\<and>\n                (tickFree r \\<or> v = []) \\<and>\n                s = r @ v \\<and>\n                r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                 t \\<in> D Q \\<and> u \\<in> T P)})) =\n    {(s, R).\n     \\<exists>t u X Y.\n        (t, X) \\<in> F P \\<and>\n        (u, Y) \\<in> F Q \\<and>\n        s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n        R =\n        (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n        X \\<inter> Y} \\<union>\n    {(s, R).\n     \\<exists>t u r v.\n        front_tickFree v \\<and>\n        (tickFree r \\<or> v = []) \\<and>\n        s = r @ v \\<and>\n        r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n        (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n         t \\<in> D Q \\<and> u \\<in> T P)}", "apply(subst F_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. FAILURES\n     (Rep_process\n       (Abs_process\n         ({(s, R).\n           \\<exists>t u X Y.\n              (t, X) \\<in> F P \\<and>\n              (u, Y) \\<in> F Q \\<and>\n              s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n              R =\n              (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n              X \\<inter> Y} \\<union>\n          {(s, R).\n           \\<exists>t u r v.\n              front_tickFree v \\<and>\n              (tickFree r \\<or> v = []) \\<and>\n              s = r @ v \\<and>\n              r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n              (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n               t \\<in> D Q \\<and> u \\<in> T P)},\n          {s. \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}))) =\n    {(s, R).\n     \\<exists>t u X Y.\n        (t, X) \\<in> F P \\<and>\n        (u, Y) \\<in> F Q \\<and>\n        s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n        R =\n        (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n        X \\<inter> Y} \\<union>\n    {(s, R).\n     \\<exists>t u r v.\n        front_tickFree v \\<and>\n        (tickFree r \\<or> v = []) \\<and>\n        s = r @ v \\<and>\n        r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n        (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n         t \\<in> D Q \\<and> u \\<in> T P)}", "apply(simp only: Rep_Abs_Sync)"], ["proof (prove)\ngoal (1 subgoal):\n 1. FAILURES\n     ({(s, R).\n       \\<exists>t u X Y.\n          (t, X) \\<in> F P \\<and>\n          (u, Y) \\<in> F Q \\<and>\n          s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n          R =\n          (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n          X \\<inter> Y} \\<union>\n      {(s, R).\n       \\<exists>t u r v.\n          front_tickFree v \\<and>\n          (tickFree r \\<or> v = []) \\<and>\n          s = r @ v \\<and>\n          r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n          (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n           t \\<in> D Q \\<and> u \\<in> T P)},\n      {s. \\<exists>t u r v.\n             front_tickFree v \\<and>\n             (tickFree r \\<or> v = []) \\<and>\n             s = r @ v \\<and>\n             r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n             (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n              t \\<in> D Q \\<and> u \\<in> T P)}) =\n    {(s, R).\n     \\<exists>t u X Y.\n        (t, X) \\<in> F P \\<and>\n        (u, Y) \\<in> F Q \\<and>\n        s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n        R =\n        (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n        X \\<inter> Y} \\<union>\n    {(s, R).\n     \\<exists>t u r v.\n        front_tickFree v \\<and>\n        (tickFree r \\<or> v = []) \\<and>\n        s = r @ v \\<and>\n        r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n        (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n         t \\<in> D Q \\<and> u \\<in> T P)}", "by(auto simp: FAILURES_def)"], ["", "lemma\n  D_sync    : \"D(P \\<lbrakk> A \\<rbrakk> Q) = \n                   {s.    \\<exists> t u r v. front_tickFree v \\<and> (tickFree r \\<or> v=[]) \\<and> \n                            s = r@v \\<and> r setinterleaves ((t,u),(ev`A) \\<union> {tick}) \\<and> \n                            (t \\<in> D P \\<and> u \\<in> T Q \\<or> t \\<in> D Q \\<and> u \\<in> T P)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D (P \\<lbrakk>A\\<rbrakk> Q) =\n    {s. \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           s = r @ v \\<and>\n           r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n           (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n            t \\<in> D Q \\<and> u \\<in> T P)}", "unfolding sync_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. D (Abs_process\n        ({(s, R).\n          \\<exists>t u X Y.\n             (t, X) \\<in> F P \\<and>\n             (u, Y) \\<in> F Q \\<and>\n             s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n             R =\n             (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n             X \\<inter> Y} \\<union>\n         {(s, R).\n          \\<exists>t u r v.\n             front_tickFree v \\<and>\n             (tickFree r \\<or> v = []) \\<and>\n             s = r @ v \\<and>\n             r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n             (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n              t \\<in> D Q \\<and> u \\<in> T P)},\n         {s. \\<exists>t u r v.\n                front_tickFree v \\<and>\n                (tickFree r \\<or> v = []) \\<and>\n                s = r @ v \\<and>\n                r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                 t \\<in> D Q \\<and> u \\<in> T P)})) =\n    {s. \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           s = r @ v \\<and>\n           r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n           (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n            t \\<in> D Q \\<and> u \\<in> T P)}", "apply(subst D_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. DIVERGENCES\n     (Rep_process\n       (Abs_process\n         ({(s, R).\n           \\<exists>t u X Y.\n              (t, X) \\<in> F P \\<and>\n              (u, Y) \\<in> F Q \\<and>\n              s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n              R =\n              (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n              X \\<inter> Y} \\<union>\n          {(s, R).\n           \\<exists>t u r v.\n              front_tickFree v \\<and>\n              (tickFree r \\<or> v = []) \\<and>\n              s = r @ v \\<and>\n              r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n              (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n               t \\<in> D Q \\<and> u \\<in> T P)},\n          {s. \\<exists>t u r v.\n                 front_tickFree v \\<and>\n                 (tickFree r \\<or> v = []) \\<and>\n                 s = r @ v \\<and>\n                 r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                 (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                  t \\<in> D Q \\<and> u \\<in> T P)}))) =\n    {s. \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           s = r @ v \\<and>\n           r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n           (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n            t \\<in> D Q \\<and> u \\<in> T P)}", "apply(simp only: Rep_Abs_Sync)"], ["proof (prove)\ngoal (1 subgoal):\n 1. DIVERGENCES\n     ({(s, R).\n       \\<exists>t u X Y.\n          (t, X) \\<in> F P \\<and>\n          (u, Y) \\<in> F Q \\<and>\n          s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n          R =\n          (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n          X \\<inter> Y} \\<union>\n      {(s, R).\n       \\<exists>t u r v.\n          front_tickFree v \\<and>\n          (tickFree r \\<or> v = []) \\<and>\n          s = r @ v \\<and>\n          r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n          (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n           t \\<in> D Q \\<and> u \\<in> T P)},\n      {s. \\<exists>t u r v.\n             front_tickFree v \\<and>\n             (tickFree r \\<or> v = []) \\<and>\n             s = r @ v \\<and>\n             r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n             (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n              t \\<in> D Q \\<and> u \\<in> T P)}) =\n    {s. \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           s = r @ v \\<and>\n           r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n           (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n            t \\<in> D Q \\<and> u \\<in> T P)}", "by(simp add: DIVERGENCES_def)"], ["", "lemma\n  T_sync    : \"T(P \\<lbrakk> A \\<rbrakk> Q) = \n                   {s.    \\<exists> t u. t \\<in> T P \\<and> u \\<in> T Q \\<and> \n                                 s setinterleaves ((t,u),(ev`A) \\<union> {tick})}\\<union>\n {s.    \\<exists> t u r v. front_tickFree v \\<and> (tickFree r \\<or> v=[]) \\<and> \n                            s = r@v \\<and> r setinterleaves ((t,u),(ev`A) \\<union> {tick}) \\<and> \n                            (t \\<in> D P \\<and> u \\<in> T Q \\<or> t \\<in> D Q \\<and> u \\<in> T P)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T (P \\<lbrakk>A\\<rbrakk> Q) =\n    {s. \\<exists>t u.\n           t \\<in> T P \\<and>\n           u \\<in> T Q \\<and>\n           s setinterleaves ((t, u), ev ` A \\<union> {tick})} \\<union>\n    {s. \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           s = r @ v \\<and>\n           r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n           (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n            t \\<in> D Q \\<and> u \\<in> T P)}", "unfolding sync_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. T (Abs_process\n        ({(s, R).\n          \\<exists>t u X Y.\n             (t, X) \\<in> F P \\<and>\n             (u, Y) \\<in> F Q \\<and>\n             s setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n             R =\n             (X \\<union> Y) \\<inter> (ev ` A \\<union> {tick}) \\<union>\n             X \\<inter> Y} \\<union>\n         {(s, R).\n          \\<exists>t u r v.\n             front_tickFree v \\<and>\n             (tickFree r \\<or> v = []) \\<and>\n             s = r @ v \\<and>\n             r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n             (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n              t \\<in> D Q \\<and> u \\<in> T P)},\n         {s. \\<exists>t u r v.\n                front_tickFree v \\<and>\n                (tickFree r \\<or> v = []) \\<and>\n                s = r @ v \\<and>\n                r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n                (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n                 t \\<in> D Q \\<and> u \\<in> T P)})) =\n    {s. \\<exists>t u.\n           t \\<in> T P \\<and>\n           u \\<in> T Q \\<and>\n           s setinterleaves ((t, u), ev ` A \\<union> {tick})} \\<union>\n    {s. \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           s = r @ v \\<and>\n           r setinterleaves ((t, u), ev ` A \\<union> {tick}) \\<and>\n           (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n            t \\<in> D Q \\<and> u \\<in> T P)}", "apply(subst T_def, simp only: Rep_Abs_Sync, simp add:TRACES_def FAILURES_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. {tr.\n     (\\<exists>b t u X.\n         (t, X) \\<in> F P \\<and>\n         (\\<exists>Y.\n             (u, Y) \\<in> F Q \\<and>\n             tr setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n             b =\n             (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n             X \\<inter> Y)) \\<or>\n     (\\<exists>t u r v.\n         front_tickFree v \\<and>\n         (tickFree r \\<or> v = []) \\<and>\n         tr = r @ v \\<and>\n         r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n         (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n          t \\<in> D Q \\<and> u \\<in> T P))} =\n    {s. \\<exists>t.\n           t \\<in> T P \\<and>\n           (\\<exists>u.\n               u \\<in> T Q \\<and>\n               s setinterleaves ((t, u), insert tick (ev ` A)))} \\<union>\n    {s. \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           s = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D P \\<and> u \\<in> T Q \\<or>\n            t \\<in> D Q \\<and> u \\<in> T P)}", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x t u X Y.\n       \\<lbrakk>\\<forall>t u r.\n                   r setinterleaves ((t, u), insert tick\n        (ev ` A)) \\<longrightarrow>\n                   (\\<forall>v.\n                       x = r @ v \\<longrightarrow>\n                       front_tickFree v \\<longrightarrow>\n                       \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n                       (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n                       (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        (t, X) \\<in> F P; (u, Y) \\<in> F Q;\n        x setinterleaves ((t, u), insert tick (ev ` A))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            t \\<in> T P \\<and>\n                            (\\<exists>u.\n                                u \\<in> T Q \\<and>\n                                x setinterleaves ((t, u), insert tick\n                     (ev ` A)))\n 2. \\<And>x t u.\n       \\<lbrakk>\\<forall>t u r.\n                   r setinterleaves ((t, u), insert tick\n        (ev ` A)) \\<longrightarrow>\n                   (\\<forall>v.\n                       x = r @ v \\<longrightarrow>\n                       front_tickFree v \\<longrightarrow>\n                       \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n                       (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n                       (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        t \\<in> T P; u \\<in> T Q;\n        x setinterleaves ((t, u), insert tick (ev ` A))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                x setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                b =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)", "apply (meson F_T)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x t u.\n       \\<lbrakk>\\<forall>t u r.\n                   r setinterleaves ((t, u), insert tick\n        (ev ` A)) \\<longrightarrow>\n                   (\\<forall>v.\n                       x = r @ v \\<longrightarrow>\n                       front_tickFree v \\<longrightarrow>\n                       \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n                       (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n                       (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        t \\<in> T P; u \\<in> T Q;\n        x setinterleaves ((t, u), insert tick (ev ` A))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                x setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                b =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)", "using T_F"], ["proof (prove)\nusing this:\n  ?s \\<in> T ?P \\<Longrightarrow> (?s, {}) \\<in> F ?P\n\ngoal (1 subgoal):\n 1. \\<And>x t u.\n       \\<lbrakk>\\<forall>t u r.\n                   r setinterleaves ((t, u), insert tick\n        (ev ` A)) \\<longrightarrow>\n                   (\\<forall>v.\n                       x = r @ v \\<longrightarrow>\n                       front_tickFree v \\<longrightarrow>\n                       \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n                       (t \\<in> D P \\<longrightarrow> u \\<notin> T Q) \\<and>\n                       (t \\<in> D Q \\<longrightarrow> u \\<notin> T P));\n        t \\<in> T P; u \\<in> T Q;\n        x setinterleaves ((t, u), insert tick (ev ` A))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F Q \\<and>\n                                x setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                b =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)", "by blast"], ["", "subsection\\<open>Syntax for Interleave and Parallel Operator \\<close>"], ["", "abbreviation Inter_syntax  (\"(_|||_)\" [14,15] 14)\n  where \"P ||| Q == (P \\<lbrakk> {} \\<rbrakk> Q)\""], ["", "abbreviation Par_syntax  (\"(_||_)\" [14,15] 14)\n  where \"P || Q == (P \\<lbrakk> UNIV \\<rbrakk> Q)\""], ["", "subsection\\<open> Continuity Rule \\<close>"], ["", "lemma mono_Sync_D1:  \n\"P \\<sqsubseteq> Q \\<Longrightarrow> D (Q \\<lbrakk> A \\<rbrakk> S) \\<subseteq> D (P \\<lbrakk> A \\<rbrakk> S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<sqsubseteq> Q \\<Longrightarrow>\n    D (Q \\<lbrakk>A\\<rbrakk> S) \\<subseteq> D (P \\<lbrakk>A\\<rbrakk> S)", "apply(auto simp: D_sync)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t u r v.\n       \\<lbrakk>P \\<sqsubseteq> Q; front_tickFree v;\n        r setinterleaves ((t, u), insert tick (ev ` A)); tickFree r;\n        t \\<in> D Q; u \\<in> T S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u ra va.\n                            front_tickFree va \\<and>\n                            (tickFree ra \\<or> va = []) \\<and>\n                            r @ v = ra @ va \\<and>\n                            ra setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                            (t \\<in> D P \\<and> u \\<in> T S \\<or>\n                             t \\<in> D S \\<and> u \\<in> T P)\n 2. \\<And>t u r v.\n       \\<lbrakk>P \\<sqsubseteq> Q; front_tickFree v;\n        r setinterleaves ((t, u), insert tick (ev ` A)); tickFree r;\n        t \\<in> D S; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u ra va.\n                            front_tickFree va \\<and>\n                            (tickFree ra \\<or> va = []) \\<and>\n                            r @ v = ra @ va \\<and>\n                            ra setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                            (t \\<in> D P \\<and> u \\<in> T S \\<or>\n                             t \\<in> D S \\<and> u \\<in> T P)\n 3. \\<And>t u r.\n       \\<lbrakk>P \\<sqsubseteq> Q;\n        r setinterleaves ((t, u), insert tick (ev ` A)); t \\<in> D Q;\n        u \\<in> T S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u ra v.\n                            front_tickFree v \\<and>\n                            (tickFree ra \\<or> v = []) \\<and>\n                            r = ra @ v \\<and>\n                            ra setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                            (t \\<in> D P \\<and> u \\<in> T S \\<or>\n                             t \\<in> D S \\<and> u \\<in> T P)\n 4. \\<And>t u r.\n       \\<lbrakk>P \\<sqsubseteq> Q;\n        r setinterleaves ((t, u), insert tick (ev ` A)); t \\<in> D S;\n        u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u ra v.\n                            front_tickFree v \\<and>\n                            (tickFree ra \\<or> v = []) \\<and>\n                            r = ra @ v \\<and>\n                            ra setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                            (t \\<in> D P \\<and> u \\<in> T S \\<or>\n                             t \\<in> D S \\<and> u \\<in> T P)", "using le_approx1"], ["proof (prove)\nusing this:\n  ?P \\<sqsubseteq> ?Q \\<Longrightarrow> D ?Q \\<subseteq> D ?P\n\ngoal (4 subgoals):\n 1. \\<And>t u r v.\n       \\<lbrakk>P \\<sqsubseteq> Q; front_tickFree v;\n        r setinterleaves ((t, u), insert tick (ev ` A)); tickFree r;\n        t \\<in> D Q; u \\<in> T S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u ra va.\n                            front_tickFree va \\<and>\n                            (tickFree ra \\<or> va = []) \\<and>\n                            r @ v = ra @ va \\<and>\n                            ra setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                            (t \\<in> D P \\<and> u \\<in> T S \\<or>\n                             t \\<in> D S \\<and> u \\<in> T P)\n 2. \\<And>t u r v.\n       \\<lbrakk>P \\<sqsubseteq> Q; front_tickFree v;\n        r setinterleaves ((t, u), insert tick (ev ` A)); tickFree r;\n        t \\<in> D S; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u ra va.\n                            front_tickFree va \\<and>\n                            (tickFree ra \\<or> va = []) \\<and>\n                            r @ v = ra @ va \\<and>\n                            ra setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                            (t \\<in> D P \\<and> u \\<in> T S \\<or>\n                             t \\<in> D S \\<and> u \\<in> T P)\n 3. \\<And>t u r.\n       \\<lbrakk>P \\<sqsubseteq> Q;\n        r setinterleaves ((t, u), insert tick (ev ` A)); t \\<in> D Q;\n        u \\<in> T S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u ra v.\n                            front_tickFree v \\<and>\n                            (tickFree ra \\<or> v = []) \\<and>\n                            r = ra @ v \\<and>\n                            ra setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                            (t \\<in> D P \\<and> u \\<in> T S \\<or>\n                             t \\<in> D S \\<and> u \\<in> T P)\n 4. \\<And>t u r.\n       \\<lbrakk>P \\<sqsubseteq> Q;\n        r setinterleaves ((t, u), insert tick (ev ` A)); t \\<in> D S;\n        u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u ra v.\n                            front_tickFree v \\<and>\n                            (tickFree ra \\<or> v = []) \\<and>\n                            r = ra @ v \\<and>\n                            ra setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                            (t \\<in> D P \\<and> u \\<in> T S \\<or>\n                             t \\<in> D S \\<and> u \\<in> T P)", "apply blast"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t u r v.\n       \\<lbrakk>P \\<sqsubseteq> Q; front_tickFree v;\n        r setinterleaves ((t, u), insert tick (ev ` A)); tickFree r;\n        t \\<in> D S; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u ra va.\n                            front_tickFree va \\<and>\n                            (tickFree ra \\<or> va = []) \\<and>\n                            r @ v = ra @ va \\<and>\n                            ra setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                            (t \\<in> D P \\<and> u \\<in> T S \\<or>\n                             t \\<in> D S \\<and> u \\<in> T P)\n 2. \\<And>t u r.\n       \\<lbrakk>P \\<sqsubseteq> Q;\n        r setinterleaves ((t, u), insert tick (ev ` A)); t \\<in> D Q;\n        u \\<in> T S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u ra v.\n                            front_tickFree v \\<and>\n                            (tickFree ra \\<or> v = []) \\<and>\n                            r = ra @ v \\<and>\n                            ra setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                            (t \\<in> D P \\<and> u \\<in> T S \\<or>\n                             t \\<in> D S \\<and> u \\<in> T P)\n 3. \\<And>t u r.\n       \\<lbrakk>P \\<sqsubseteq> Q;\n        r setinterleaves ((t, u), insert tick (ev ` A)); t \\<in> D S;\n        u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u ra v.\n                            front_tickFree v \\<and>\n                            (tickFree ra \\<or> v = []) \\<and>\n                            r = ra @ v \\<and>\n                            ra setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                            (t \\<in> D P \\<and> u \\<in> T S \\<or>\n                             t \\<in> D S \\<and> u \\<in> T P)", "using le_approx_lemma_T"], ["proof (prove)\nusing this:\n  ?P \\<sqsubseteq> ?Q \\<Longrightarrow> T ?Q \\<subseteq> T ?P\n\ngoal (3 subgoals):\n 1. \\<And>t u r v.\n       \\<lbrakk>P \\<sqsubseteq> Q; front_tickFree v;\n        r setinterleaves ((t, u), insert tick (ev ` A)); tickFree r;\n        t \\<in> D S; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u ra va.\n                            front_tickFree va \\<and>\n                            (tickFree ra \\<or> va = []) \\<and>\n                            r @ v = ra @ va \\<and>\n                            ra setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                            (t \\<in> D P \\<and> u \\<in> T S \\<or>\n                             t \\<in> D S \\<and> u \\<in> T P)\n 2. \\<And>t u r.\n       \\<lbrakk>P \\<sqsubseteq> Q;\n        r setinterleaves ((t, u), insert tick (ev ` A)); t \\<in> D Q;\n        u \\<in> T S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u ra v.\n                            front_tickFree v \\<and>\n                            (tickFree ra \\<or> v = []) \\<and>\n                            r = ra @ v \\<and>\n                            ra setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                            (t \\<in> D P \\<and> u \\<in> T S \\<or>\n                             t \\<in> D S \\<and> u \\<in> T P)\n 3. \\<And>t u r.\n       \\<lbrakk>P \\<sqsubseteq> Q;\n        r setinterleaves ((t, u), insert tick (ev ` A)); t \\<in> D S;\n        u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u ra v.\n                            front_tickFree v \\<and>\n                            (tickFree ra \\<or> v = []) \\<and>\n                            r = ra @ v \\<and>\n                            ra setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                            (t \\<in> D P \\<and> u \\<in> T S \\<or>\n                             t \\<in> D S \\<and> u \\<in> T P)", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t u r.\n       \\<lbrakk>P \\<sqsubseteq> Q;\n        r setinterleaves ((t, u), insert tick (ev ` A)); t \\<in> D Q;\n        u \\<in> T S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u ra v.\n                            front_tickFree v \\<and>\n                            (tickFree ra \\<or> v = []) \\<and>\n                            r = ra @ v \\<and>\n                            ra setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                            (t \\<in> D P \\<and> u \\<in> T S \\<or>\n                             t \\<in> D S \\<and> u \\<in> T P)\n 2. \\<And>t u r.\n       \\<lbrakk>P \\<sqsubseteq> Q;\n        r setinterleaves ((t, u), insert tick (ev ` A)); t \\<in> D S;\n        u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u ra v.\n                            front_tickFree v \\<and>\n                            (tickFree ra \\<or> v = []) \\<and>\n                            r = ra @ v \\<and>\n                            ra setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                            (t \\<in> D P \\<and> u \\<in> T S \\<or>\n                             t \\<in> D S \\<and> u \\<in> T P)", "apply (metis append_Nil2 le_approx1 subsetCE tickFree_Nil tickFree_implies_front_tickFree)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t u r.\n       \\<lbrakk>P \\<sqsubseteq> Q;\n        r setinterleaves ((t, u), insert tick (ev ` A)); t \\<in> D S;\n        u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u ra v.\n                            front_tickFree v \\<and>\n                            (tickFree ra \\<or> v = []) \\<and>\n                            r = ra @ v \\<and>\n                            ra setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                            (t \\<in> D P \\<and> u \\<in> T S \\<or>\n                             t \\<in> D S \\<and> u \\<in> T P)", "by (metis append_Nil2 le_approx_lemma_T subsetCE tickFree_Nil tickFree_implies_front_tickFree)"], ["", "lemma mono_Sync_D2:\n\"P \\<sqsubseteq> Q\\<Longrightarrow>(\\<forall> s. s \\<notin> D (P  \\<lbrakk> A \\<rbrakk>  S) \\<longrightarrow> Ra (P  \\<lbrakk> A \\<rbrakk>  S) s = Ra (Q  \\<lbrakk> A \\<rbrakk>  S) s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<sqsubseteq> Q \\<Longrightarrow>\n    \\<forall>s.\n       s \\<notin> D (P \\<lbrakk>A\\<rbrakk> S) \\<longrightarrow>\n       Ra (P \\<lbrakk>A\\<rbrakk> S) s = Ra (Q \\<lbrakk>A\\<rbrakk> S) s", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s x.\n       \\<lbrakk>P \\<sqsubseteq> Q; s \\<notin> D (P \\<lbrakk>A\\<rbrakk> S);\n        x \\<in> Ra (P \\<lbrakk>A\\<rbrakk> S) s\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Ra (Q \\<lbrakk>A\\<rbrakk> S) s\n 2. \\<And>s x.\n       \\<lbrakk>P \\<sqsubseteq> Q; s \\<notin> D (P \\<lbrakk>A\\<rbrakk> S);\n        x \\<in> Ra (Q \\<lbrakk>A\\<rbrakk> S) s\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Ra (P \\<lbrakk>A\\<rbrakk> S) s", "apply(simp add: Ra_def D_sync F_sync)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s x.\n       \\<lbrakk>P \\<sqsubseteq> Q;\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow> u \\<notin> T P));\n        (\\<exists>t u X.\n            (t, X) \\<in> F P \\<and>\n            (\\<exists>Y.\n                (u, Y) \\<in> F S \\<and>\n                s setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n                x =\n                (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n                X \\<inter> Y)) \\<or>\n        (\\<exists>t u r v.\n            front_tickFree v \\<and>\n            (tickFree r \\<or> v = []) \\<and>\n            s = r @ v \\<and>\n            r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n            (t \\<in> D P \\<and> u \\<in> T S \\<or>\n             t \\<in> D S \\<and> u \\<in> T P))\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>t u X.\n                             (t, X) \\<in> F Q \\<and>\n                             (\\<exists>Y.\n                                 (u, Y) \\<in> F S \\<and>\n                                 s setinterleaves ((t, u), insert tick\n                      (ev ` A)) \\<and>\n                                 x =\n                                 (X \\<union> Y) \\<inter>\n                                 insert tick (ev ` A) \\<union>\n                                 X \\<inter> Y)) \\<or>\n                         (\\<exists>t u r v.\n                             front_tickFree v \\<and>\n                             (tickFree r \\<or> v = []) \\<and>\n                             s = r @ v \\<and>\n                             r setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                             (t \\<in> D Q \\<and> u \\<in> T S \\<or>\n                              t \\<in> D S \\<and> u \\<in> T Q))\n 2. \\<And>s x.\n       \\<lbrakk>P \\<sqsubseteq> Q; s \\<notin> D (P \\<lbrakk>A\\<rbrakk> S);\n        x \\<in> Ra (Q \\<lbrakk>A\\<rbrakk> S) s\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Ra (P \\<lbrakk>A\\<rbrakk> S) s", "apply (metis (no_types, lifting) F_T append_Nil2 front_tickFree_Nil le_approx2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s x.\n       \\<lbrakk>P \\<sqsubseteq> Q; s \\<notin> D (P \\<lbrakk>A\\<rbrakk> S);\n        x \\<in> Ra (Q \\<lbrakk>A\\<rbrakk> S) s\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Ra (P \\<lbrakk>A\\<rbrakk> S) s", "apply(simp add: Ra_def D_sync F_sync)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s x.\n       \\<lbrakk>P \\<sqsubseteq> Q;\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow> u \\<notin> T P));\n        (\\<exists>t u X.\n            (t, X) \\<in> F Q \\<and>\n            (\\<exists>Y.\n                (u, Y) \\<in> F S \\<and>\n                s setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n                x =\n                (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n                X \\<inter> Y)) \\<or>\n        (\\<exists>t u r v.\n            front_tickFree v \\<and>\n            (tickFree r \\<or> v = []) \\<and>\n            s = r @ v \\<and>\n            r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n            (t \\<in> D Q \\<and> u \\<in> T S \\<or>\n             t \\<in> D S \\<and> u \\<in> T Q))\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>t u X.\n                             (t, X) \\<in> F P \\<and>\n                             (\\<exists>Y.\n                                 (u, Y) \\<in> F S \\<and>\n                                 s setinterleaves ((t, u), insert tick\n                      (ev ` A)) \\<and>\n                                 x =\n                                 (X \\<union> Y) \\<inter>\n                                 insert tick (ev ` A) \\<union>\n                                 X \\<inter> Y)) \\<or>\n                         (\\<exists>t u r v.\n                             front_tickFree v \\<and>\n                             (tickFree r \\<or> v = []) \\<and>\n                             s = r @ v \\<and>\n                             r setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                             (t \\<in> D P \\<and> u \\<in> T S \\<or>\n                              t \\<in> D S \\<and> u \\<in> T P))", "apply(insert le_approx_lemma_F[of P Q] le_approx_lemma_T[of P Q] le_approx1[of P Q] \n  le_approx2T[of P Q], auto)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>s t u X Y.\n       \\<lbrakk>P \\<sqsubseteq> Q;\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               s = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow> u \\<notin> T P));\n        F Q \\<subseteq> F P; T Q \\<subseteq> T P; D Q \\<subseteq> D P;\n        \\<And>s.\n           s \\<notin> D P \\<Longrightarrow> (s \\<in> T Q) = (s \\<in> T P);\n        (t, X) \\<in> F Q; (u, Y) \\<in> F S;\n        s setinterleaves ((t, u), insert tick (ev ` A))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u Xa.\n                            (t, Xa) \\<in> F P \\<and>\n                            (\\<exists>Ya.\n                                (u, Ya) \\<in> F S \\<and>\n                                s setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y =\n                                (Xa \\<union> Ya) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Ya)\n 2. \\<And>x t u r v.\n       \\<lbrakk>P \\<sqsubseteq> Q;\n        \\<forall>t u ra.\n           ra setinterleaves ((t, u), insert tick\n (ev ` A)) \\<longrightarrow>\n           (\\<forall>va.\n               r @ v = ra @ va \\<longrightarrow>\n               front_tickFree va \\<longrightarrow>\n               \\<not> tickFree ra \\<and> va \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow> u \\<notin> T P));\n        F Q \\<subseteq> F P; T Q \\<subseteq> T P; D Q \\<subseteq> D P;\n        \\<And>s.\n           s \\<notin> D P \\<Longrightarrow> (s \\<in> T Q) = (s \\<in> T P);\n        front_tickFree v; r setinterleaves ((t, u), insert tick (ev ` A));\n        tickFree r; t \\<in> D Q; u \\<in> T S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                r @\n                                v setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                x =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)\n 3. \\<And>x t u r v.\n       \\<lbrakk>P \\<sqsubseteq> Q;\n        \\<forall>t u ra.\n           ra setinterleaves ((t, u), insert tick\n (ev ` A)) \\<longrightarrow>\n           (\\<forall>va.\n               r @ v = ra @ va \\<longrightarrow>\n               front_tickFree va \\<longrightarrow>\n               \\<not> tickFree ra \\<and> va \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow> u \\<notin> T P));\n        F Q \\<subseteq> F P; T Q \\<subseteq> T P; D Q \\<subseteq> D P;\n        \\<And>s.\n           s \\<notin> D P \\<Longrightarrow> (s \\<in> T Q) = (s \\<in> T P);\n        front_tickFree v; r setinterleaves ((t, u), insert tick (ev ` A));\n        tickFree r; t \\<in> D S; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                r @\n                                v setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                x =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)\n 4. \\<And>x t u r.\n       \\<lbrakk>P \\<sqsubseteq> Q;\n        \\<forall>t u ra.\n           ra setinterleaves ((t, u), insert tick\n (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               r = ra @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree ra \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow> u \\<notin> T P));\n        F Q \\<subseteq> F P; T Q \\<subseteq> T P; D Q \\<subseteq> D P;\n        \\<And>s.\n           s \\<notin> D P \\<Longrightarrow> (s \\<in> T Q) = (s \\<in> T P);\n        r setinterleaves ((t, u), insert tick (ev ` A)); t \\<in> D Q;\n        u \\<in> T S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                r setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                x =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)\n 5. \\<And>x t u r.\n       \\<lbrakk>P \\<sqsubseteq> Q;\n        \\<forall>t u ra.\n           ra setinterleaves ((t, u), insert tick\n (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               r = ra @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree ra \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow> u \\<notin> T P));\n        F Q \\<subseteq> F P; T Q \\<subseteq> T P; D Q \\<subseteq> D P;\n        \\<And>s.\n           s \\<notin> D P \\<Longrightarrow> (s \\<in> T Q) = (s \\<in> T P);\n        r setinterleaves ((t, u), insert tick (ev ` A)); t \\<in> D S;\n        u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                r setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                x =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)", "apply blast"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x t u r v.\n       \\<lbrakk>P \\<sqsubseteq> Q;\n        \\<forall>t u ra.\n           ra setinterleaves ((t, u), insert tick\n (ev ` A)) \\<longrightarrow>\n           (\\<forall>va.\n               r @ v = ra @ va \\<longrightarrow>\n               front_tickFree va \\<longrightarrow>\n               \\<not> tickFree ra \\<and> va \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow> u \\<notin> T P));\n        F Q \\<subseteq> F P; T Q \\<subseteq> T P; D Q \\<subseteq> D P;\n        \\<And>s.\n           s \\<notin> D P \\<Longrightarrow> (s \\<in> T Q) = (s \\<in> T P);\n        front_tickFree v; r setinterleaves ((t, u), insert tick (ev ` A));\n        tickFree r; t \\<in> D Q; u \\<in> T S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                r @\n                                v setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                x =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)\n 2. \\<And>x t u r v.\n       \\<lbrakk>P \\<sqsubseteq> Q;\n        \\<forall>t u ra.\n           ra setinterleaves ((t, u), insert tick\n (ev ` A)) \\<longrightarrow>\n           (\\<forall>va.\n               r @ v = ra @ va \\<longrightarrow>\n               front_tickFree va \\<longrightarrow>\n               \\<not> tickFree ra \\<and> va \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow> u \\<notin> T P));\n        F Q \\<subseteq> F P; T Q \\<subseteq> T P; D Q \\<subseteq> D P;\n        \\<And>s.\n           s \\<notin> D P \\<Longrightarrow> (s \\<in> T Q) = (s \\<in> T P);\n        front_tickFree v; r setinterleaves ((t, u), insert tick (ev ` A));\n        tickFree r; t \\<in> D S; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                r @\n                                v setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                x =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)\n 3. \\<And>x t u r.\n       \\<lbrakk>P \\<sqsubseteq> Q;\n        \\<forall>t u ra.\n           ra setinterleaves ((t, u), insert tick\n (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               r = ra @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree ra \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow> u \\<notin> T P));\n        F Q \\<subseteq> F P; T Q \\<subseteq> T P; D Q \\<subseteq> D P;\n        \\<And>s.\n           s \\<notin> D P \\<Longrightarrow> (s \\<in> T Q) = (s \\<in> T P);\n        r setinterleaves ((t, u), insert tick (ev ` A)); t \\<in> D Q;\n        u \\<in> T S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                r setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                x =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)\n 4. \\<And>x t u r.\n       \\<lbrakk>P \\<sqsubseteq> Q;\n        \\<forall>t u ra.\n           ra setinterleaves ((t, u), insert tick\n (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               r = ra @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree ra \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow> u \\<notin> T P));\n        F Q \\<subseteq> F P; T Q \\<subseteq> T P; D Q \\<subseteq> D P;\n        \\<And>s.\n           s \\<notin> D P \\<Longrightarrow> (s \\<in> T Q) = (s \\<in> T P);\n        r setinterleaves ((t, u), insert tick (ev ` A)); t \\<in> D S;\n        u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                r setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                x =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)", "apply blast"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x t u r v.\n       \\<lbrakk>P \\<sqsubseteq> Q;\n        \\<forall>t u ra.\n           ra setinterleaves ((t, u), insert tick\n (ev ` A)) \\<longrightarrow>\n           (\\<forall>va.\n               r @ v = ra @ va \\<longrightarrow>\n               front_tickFree va \\<longrightarrow>\n               \\<not> tickFree ra \\<and> va \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow> u \\<notin> T P));\n        F Q \\<subseteq> F P; T Q \\<subseteq> T P; D Q \\<subseteq> D P;\n        \\<And>s.\n           s \\<notin> D P \\<Longrightarrow> (s \\<in> T Q) = (s \\<in> T P);\n        front_tickFree v; r setinterleaves ((t, u), insert tick (ev ` A));\n        tickFree r; t \\<in> D S; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                r @\n                                v setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                x =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)\n 2. \\<And>x t u r.\n       \\<lbrakk>P \\<sqsubseteq> Q;\n        \\<forall>t u ra.\n           ra setinterleaves ((t, u), insert tick\n (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               r = ra @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree ra \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow> u \\<notin> T P));\n        F Q \\<subseteq> F P; T Q \\<subseteq> T P; D Q \\<subseteq> D P;\n        \\<And>s.\n           s \\<notin> D P \\<Longrightarrow> (s \\<in> T Q) = (s \\<in> T P);\n        r setinterleaves ((t, u), insert tick (ev ` A)); t \\<in> D Q;\n        u \\<in> T S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                r setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                x =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)\n 3. \\<And>x t u r.\n       \\<lbrakk>P \\<sqsubseteq> Q;\n        \\<forall>t u ra.\n           ra setinterleaves ((t, u), insert tick\n (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               r = ra @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree ra \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow> u \\<notin> T P));\n        F Q \\<subseteq> F P; T Q \\<subseteq> T P; D Q \\<subseteq> D P;\n        \\<And>s.\n           s \\<notin> D P \\<Longrightarrow> (s \\<in> T Q) = (s \\<in> T P);\n        r setinterleaves ((t, u), insert tick (ev ` A)); t \\<in> D S;\n        u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                r setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                x =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x t u r.\n       \\<lbrakk>P \\<sqsubseteq> Q;\n        \\<forall>t u ra.\n           ra setinterleaves ((t, u), insert tick\n (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               r = ra @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree ra \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow> u \\<notin> T P));\n        F Q \\<subseteq> F P; T Q \\<subseteq> T P; D Q \\<subseteq> D P;\n        \\<And>s.\n           s \\<notin> D P \\<Longrightarrow> (s \\<in> T Q) = (s \\<in> T P);\n        r setinterleaves ((t, u), insert tick (ev ` A)); t \\<in> D Q;\n        u \\<in> T S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                r setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                x =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)\n 2. \\<And>x t u r.\n       \\<lbrakk>P \\<sqsubseteq> Q;\n        \\<forall>t u ra.\n           ra setinterleaves ((t, u), insert tick\n (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               r = ra @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree ra \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow> u \\<notin> T P));\n        F Q \\<subseteq> F P; T Q \\<subseteq> T P; D Q \\<subseteq> D P;\n        \\<And>s.\n           s \\<notin> D P \\<Longrightarrow> (s \\<in> T Q) = (s \\<in> T P);\n        r setinterleaves ((t, u), insert tick (ev ` A)); t \\<in> D S;\n        u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                r setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                x =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)", "using front_tickFree_Nil"], ["proof (prove)\nusing this:\n  front_tickFree []\n\ngoal (2 subgoals):\n 1. \\<And>x t u r.\n       \\<lbrakk>P \\<sqsubseteq> Q;\n        \\<forall>t u ra.\n           ra setinterleaves ((t, u), insert tick\n (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               r = ra @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree ra \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow> u \\<notin> T P));\n        F Q \\<subseteq> F P; T Q \\<subseteq> T P; D Q \\<subseteq> D P;\n        \\<And>s.\n           s \\<notin> D P \\<Longrightarrow> (s \\<in> T Q) = (s \\<in> T P);\n        r setinterleaves ((t, u), insert tick (ev ` A)); t \\<in> D Q;\n        u \\<in> T S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                r setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                x =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)\n 2. \\<And>x t u r.\n       \\<lbrakk>P \\<sqsubseteq> Q;\n        \\<forall>t u ra.\n           ra setinterleaves ((t, u), insert tick\n (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               r = ra @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree ra \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow> u \\<notin> T P));\n        F Q \\<subseteq> F P; T Q \\<subseteq> T P; D Q \\<subseteq> D P;\n        \\<And>s.\n           s \\<notin> D P \\<Longrightarrow> (s \\<in> T Q) = (s \\<in> T P);\n        r setinterleaves ((t, u), insert tick (ev ` A)); t \\<in> D S;\n        u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                r setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                x =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x t u r.\n       \\<lbrakk>P \\<sqsubseteq> Q;\n        \\<forall>t u ra.\n           ra setinterleaves ((t, u), insert tick\n (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               r = ra @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree ra \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow> u \\<notin> T P));\n        F Q \\<subseteq> F P; T Q \\<subseteq> T P; D Q \\<subseteq> D P;\n        \\<And>s.\n           s \\<notin> D P \\<Longrightarrow> (s \\<in> T Q) = (s \\<in> T P);\n        r setinterleaves ((t, u), insert tick (ev ` A)); t \\<in> D S;\n        u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                r setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                x =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)", "using front_tickFree_Nil"], ["proof (prove)\nusing this:\n  front_tickFree []\n\ngoal (1 subgoal):\n 1. \\<And>x t u r.\n       \\<lbrakk>P \\<sqsubseteq> Q;\n        \\<forall>t u ra.\n           ra setinterleaves ((t, u), insert tick\n (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               r = ra @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree ra \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D P \\<longrightarrow> u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow> u \\<notin> T P));\n        F Q \\<subseteq> F P; T Q \\<subseteq> T P; D Q \\<subseteq> D P;\n        \\<And>s.\n           s \\<notin> D P \\<Longrightarrow> (s \\<in> T Q) = (s \\<in> T P);\n        r setinterleaves ((t, u), insert tick (ev ` A)); t \\<in> D S;\n        u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F P \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                r setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                x =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)", "by blast"], ["", "lemma interPrefixEmpty: \"s setinterleaves ((t,[]),A)\\<and>t1<t\\<Longrightarrow>\\<exists>s1<s. s1 setinterleaves ((t1, []), A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s setinterleaves ((t, []), A) \\<and> t1 < t \\<Longrightarrow>\n    \\<exists>s1<s. s1 setinterleaves ((t1, []), A)", "by (metis (no_types, lifting) Sync.sym emptyLeftProperty le_list_def nil_le2 \n  order.strict_implies_order synPrefix1)"], ["", "lemma interPrefix:\"\\<exists>u1 s1. s setinterleaves((t,u),A)\\<and>t1<t\\<longrightarrow>u1\\<le>u\\<and>s1<s\\<and>s1 setinterleaves((t1,u1),A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>u1 s1.\n       s setinterleaves ((t, u), A) \\<and> t1 < t \\<longrightarrow>\n       u1 \\<le> u \\<and> s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "proof (induction \"length t + length u\" arbitrary:s t u t1 rule:nat_less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t u s t1.\n       \\<forall>m<length t + length u.\n          \\<forall>x xa.\n             m = length x + length xa \\<longrightarrow>\n             (\\<forall>xb xc.\n                 \\<exists>u1 s1.\n                    xb setinterleaves ((x, xa), A) \\<and>\n                    xc < x \\<longrightarrow>\n                    u1 \\<le> xa \\<and>\n                    s1 < xb \\<and>\n                    s1 setinterleaves ((xc, u1), A)) \\<Longrightarrow>\n       \\<exists>u1 s1.\n          s setinterleaves ((t, u), A) \\<and> t1 < t \\<longrightarrow>\n          u1 \\<le> u \\<and> s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "case 1"], ["proof (state)\nthis:\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb xc.\n            \\<exists>u1 s1.\n               xb setinterleaves ((x, xa), A) \\<and>\n               xc < x \\<longrightarrow>\n               u1 \\<le> xa \\<and>\n               s1 < xb \\<and> s1 setinterleaves ((xc, u1), A))\n\ngoal (1 subgoal):\n 1. \\<And>t u s t1.\n       \\<forall>m<length t + length u.\n          \\<forall>x xa.\n             m = length x + length xa \\<longrightarrow>\n             (\\<forall>xb xc.\n                 \\<exists>u1 s1.\n                    xb setinterleaves ((x, xa), A) \\<and>\n                    xc < x \\<longrightarrow>\n                    u1 \\<le> xa \\<and>\n                    s1 < xb \\<and>\n                    s1 setinterleaves ((xc, u1), A)) \\<Longrightarrow>\n       \\<exists>u1 s1.\n          s setinterleaves ((t, u), A) \\<and> t1 < t \\<longrightarrow>\n          u1 \\<le> u \\<and> s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "then"], ["proof (chain)\npicking this:\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb xc.\n            \\<exists>u1 s1.\n               xb setinterleaves ((x, xa), A) \\<and>\n               xc < x \\<longrightarrow>\n               u1 \\<le> xa \\<and>\n               s1 < xb \\<and> s1 setinterleaves ((xc, u1), A))", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb xc.\n            \\<exists>u1 s1.\n               xb setinterleaves ((x, xa), A) \\<and>\n               xc < x \\<longrightarrow>\n               u1 \\<le> xa \\<and>\n               s1 < xb \\<and> s1 setinterleaves ((xc, u1), A))\n\ngoal (1 subgoal):\n 1. \\<exists>u1 s1.\n       s setinterleaves ((t, u), A) \\<and> t1 < t \\<longrightarrow>\n       u1 \\<le> u \\<and> s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "apply(cases t)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>u1 s1.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          xc < x \\<longrightarrow>\n                          u1 \\<le> xa \\<and>\n                          s1 < xb \\<and> s1 setinterleaves ((xc, u1), A));\n     t = []\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1 s1.\n                         s setinterleaves ((t, u), A) \\<and>\n                         t1 < t \\<longrightarrow>\n                         u1 \\<le> u \\<and>\n                         s1 < s \\<and> s1 setinterleaves ((t1, u1), A)\n 2. \\<And>a list.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb xc.\n                          \\<exists>u1 s1.\n                             xb setinterleaves ((x, xa), A) \\<and>\n                             xc < x \\<longrightarrow>\n                             u1 \\<le> xa \\<and>\n                             s1 < xb \\<and>\n                             s1 setinterleaves ((xc, u1), A));\n        t = a # list\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u1 s1.\n                            s setinterleaves ((t, u), A) \\<and>\n                            t1 < t \\<longrightarrow>\n                            u1 \\<le> u \\<and>\n                            s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "apply auto[1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb xc.\n                          \\<exists>u1 s1.\n                             xb setinterleaves ((x, xa), A) \\<and>\n                             xc < x \\<longrightarrow>\n                             u1 \\<le> xa \\<and>\n                             s1 < xb \\<and>\n                             s1 setinterleaves ((xc, u1), A));\n        t = a # list\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u1 s1.\n                            s setinterleaves ((t, u), A) \\<and>\n                            t1 < t \\<longrightarrow>\n                            u1 \\<le> u \\<and>\n                            s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "apply(cases u)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a list.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb xc.\n                          \\<exists>u1 s1.\n                             xb setinterleaves ((x, xa), A) \\<and>\n                             xc < x \\<longrightarrow>\n                             u1 \\<le> xa \\<and>\n                             s1 < xb \\<and>\n                             s1 setinterleaves ((xc, u1), A));\n        t = a # list; u = []\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u1 s1.\n                            s setinterleaves ((t, u), A) \\<and>\n                            t1 < t \\<longrightarrow>\n                            u1 \\<le> u \\<and>\n                            s1 < s \\<and> s1 setinterleaves ((t1, u1), A)\n 2. \\<And>a list aa lista.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb xc.\n                          \\<exists>u1 s1.\n                             xb setinterleaves ((x, xa), A) \\<and>\n                             xc < x \\<longrightarrow>\n                             u1 \\<le> xa \\<and>\n                             s1 < xb \\<and>\n                             s1 setinterleaves ((xc, u1), A));\n        t = a # list; u = aa # lista\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u1 s1.\n                            s setinterleaves ((t, u), A) \\<and>\n                            t1 < t \\<longrightarrow>\n                            u1 \\<le> u \\<and>\n                            s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "apply (meson interPrefixEmpty nil_le2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list aa lista.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb xc.\n                          \\<exists>u1 s1.\n                             xb setinterleaves ((x, xa), A) \\<and>\n                             xc < x \\<longrightarrow>\n                             u1 \\<le> xa \\<and>\n                             s1 < xb \\<and>\n                             s1 setinterleaves ((xc, u1), A));\n        t = a # list; u = aa # lista\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u1 s1.\n                            s setinterleaves ((t, u), A) \\<and>\n                            t1 < t \\<longrightarrow>\n                            u1 \\<le> u \\<and>\n                            s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list aa lista.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb xc.\n                          \\<exists>u1 s1.\n                             xb setinterleaves ((x, xa), A) \\<and>\n                             xc < x \\<longrightarrow>\n                             u1 \\<le> xa \\<and>\n                             s1 < xb \\<and>\n                             s1 setinterleaves ((xc, u1), A));\n        t = a # list; u = aa # lista\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u1 s1.\n                            s setinterleaves ((t, u), A) \\<and>\n                            t1 < t \\<longrightarrow>\n                            u1 \\<le> u \\<and>\n                            s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "fix a list aa lista"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list aa lista.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb xc.\n                          \\<exists>u1 s1.\n                             xb setinterleaves ((x, xa), A) \\<and>\n                             xc < x \\<longrightarrow>\n                             u1 \\<le> xa \\<and>\n                             s1 < xb \\<and>\n                             s1 setinterleaves ((xc, u1), A));\n        t = a # list; u = aa # lista\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u1 s1.\n                            s setinterleaves ((t, u), A) \\<and>\n                            t1 < t \\<longrightarrow>\n                            u1 \\<le> u \\<and>\n                            s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "assume a: \" \\<forall>m<length t + length u.  \\<forall>x xa. m = length x + length xa \\<longrightarrow> (\\<forall>xb xc. \\<exists>u1 s1. \n    xb setinterleaves((x, xa),A)\\<and>xc < x \\<longrightarrow> u1 \\<le> xa \\<and> s1 < xb \\<and> s1 setinterleaves ((xc, u1), A))\"\n    and b: \"t = a # list\"\n    and c: \"u = aa # lista\""], ["proof (state)\nthis:\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb xc.\n            \\<exists>u1 s1.\n               xb setinterleaves ((x, xa), A) \\<and>\n               xc < x \\<longrightarrow>\n               u1 \\<le> xa \\<and>\n               s1 < xb \\<and> s1 setinterleaves ((xc, u1), A))\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<And>a list aa lista.\n       \\<lbrakk>\\<forall>m<length t + length u.\n                   \\<forall>x xa.\n                      m = length x + length xa \\<longrightarrow>\n                      (\\<forall>xb xc.\n                          \\<exists>u1 s1.\n                             xb setinterleaves ((x, xa), A) \\<and>\n                             xc < x \\<longrightarrow>\n                             u1 \\<le> xa \\<and>\n                             s1 < xb \\<and>\n                             s1 setinterleaves ((xc, u1), A));\n        t = a # list; u = aa # lista\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u1 s1.\n                            s setinterleaves ((t, u), A) \\<and>\n                            t1 < t \\<longrightarrow>\n                            u1 \\<le> u \\<and>\n                            s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "thus \"\\<exists>u1 s1. s setinterleaves((t, u),A)\\<and>t1<t\\<longrightarrow>u1 \\<le>u\\<and>s1<s\\<and>s1 setinterleaves ((t1, u1), A)\""], ["proof (prove)\nusing this:\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb xc.\n            \\<exists>u1 s1.\n               xb setinterleaves ((x, xa), A) \\<and>\n               xc < x \\<longrightarrow>\n               u1 \\<le> xa \\<and>\n               s1 < xb \\<and> s1 setinterleaves ((xc, u1), A))\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<exists>u1 s1.\n       s setinterleaves ((t, u), A) \\<and> t1 < t \\<longrightarrow>\n       u1 \\<le> u \\<and> s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>u1 s1.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          xc < x \\<longrightarrow>\n                          u1 \\<le> xa \\<and>\n                          s1 < xb \\<and> s1 setinterleaves ((xc, u1), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1 s1.\n                         s setinterleaves ((t, u), A) \\<and>\n                         t1 < t \\<longrightarrow>\n                         u1 \\<le> u \\<and>\n                         s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "from b c"], ["proof (chain)\npicking this:\n  t = a # list\n  u = aa # lista", "have th0pre: \"a=aa\\<and>aa\\<in> A\\<Longrightarrow>s setinterleaves ((t, u), A) \\<Longrightarrow>\n      (tl s) setinterleaves ((list,lista), A)\""], ["proof (prove)\nusing this:\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = aa \\<and> aa \\<in> A; s setinterleaves ((t, u), A)\\<rbrakk>\n    \\<Longrightarrow> tl s setinterleaves ((list, lista), A)", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>a = aa \\<and> aa \\<in> A; s setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s setinterleaves ((list, lista), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>u1 s1.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          xc < x \\<longrightarrow>\n                          u1 \\<le> xa \\<and>\n                          s1 < xb \\<and> s1 setinterleaves ((xc, u1), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1 s1.\n                         s setinterleaves ((t, u), A) \\<and>\n                         t1 < t \\<longrightarrow>\n                         u1 \\<le> u \\<and>\n                         s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "from a"], ["proof (chain)\npicking this:\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb xc.\n            \\<exists>u1 s1.\n               xb setinterleaves ((x, xa), A) \\<and>\n               xc < x \\<longrightarrow>\n               u1 \\<le> xa \\<and>\n               s1 < xb \\<and> s1 setinterleaves ((xc, u1), A))", "obtain yu ys  where th0pre1: \"a=aa\\<and>aa\\<in> A\\<and>s setinterleaves ((t, u), A)\\<and> t1 < a # list\\<and>\n      length t1>0\\<Longrightarrow>yu\\<le>lista\\<and>ys<tl s\\<and>ys setinterleaves ((tl t1, yu), A)\""], ["proof (prove)\nusing this:\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb xc.\n            \\<exists>u1 s1.\n               xb setinterleaves ((x, xa), A) \\<and>\n               xc < x \\<longrightarrow>\n               u1 \\<le> xa \\<and>\n               s1 < xb \\<and> s1 setinterleaves ((xc, u1), A))\n\ngoal (1 subgoal):\n 1. (\\<And>yu ys.\n        (a = aa \\<and>\n         aa \\<in> A \\<and>\n         s setinterleaves ((t, u), A) \\<and>\n         t1 < a # list \\<and> 0 < length t1 \\<Longrightarrow>\n         yu \\<le> lista \\<and>\n         ys < tl s \\<and>\n         ys setinterleaves ((tl t1, yu), A)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "apply (simp add: le_list_def less_list_def append_eq_Cons_conv)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>yu ys.\n                (a = aa \\<and>\n                 aa \\<in> A \\<and>\n                 s setinterleaves ((t, u), A) \\<and>\n                 (\\<exists>r.\n                     t1 = [] \\<and> r = a # list \\<or>\n                     (\\<exists>ys'.\n                         t1 = a # ys' \\<and> ys' @ r = list)) \\<and>\n                 t1 \\<noteq> a # list \\<and>\n                 t1 \\<noteq> [] \\<Longrightarrow>\n                 (\\<exists>r. yu @ r = lista) \\<and>\n                 (\\<exists>r. ys @ r = tl s) \\<and>\n                 ys \\<noteq> tl s \\<and>\n                 ys setinterleaves ((tl t1, yu), A)) \\<Longrightarrow>\n                thesis;\n     \\<forall>m<length t + length u.\n        \\<forall>x xa.\n           m = length x + length xa \\<longrightarrow>\n           (\\<forall>xb xc.\n               xb setinterleaves ((x, xa), A) \\<and>\n               (\\<exists>r. xc @ r = x) \\<and>\n               xc \\<noteq> x \\<longrightarrow>\n               (\\<exists>u1.\n                   (\\<exists>r. u1 @ r = xa) \\<and>\n                   (\\<exists>s1.\n                       (\\<exists>r. s1 @ r = xb) \\<and>\n                       s1 \\<noteq> xb \\<and>\n                       s1 setinterleaves ((xc, u1), A))))\\<rbrakk>\n    \\<Longrightarrow> thesis", "by (metis add_less_mono b c length_Cons lessI list.sel(3) th0pre)"], ["proof (state)\nthis:\n  a = aa \\<and>\n  aa \\<in> A \\<and>\n  s setinterleaves ((t, u), A) \\<and>\n  t1 < a # list \\<and> 0 < length t1 \\<Longrightarrow>\n  yu \\<le> lista \\<and> ys < tl s \\<and> ys setinterleaves ((tl t1, yu), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>u1 s1.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          xc < x \\<longrightarrow>\n                          u1 \\<le> xa \\<and>\n                          s1 < xb \\<and> s1 setinterleaves ((xc, u1), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1 s1.\n                         s setinterleaves ((t, u), A) \\<and>\n                         t1 < t \\<longrightarrow>\n                         u1 \\<le> u \\<and>\n                         s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "from th0pre th0pre1  b c"], ["proof (chain)\npicking this:\n  \\<lbrakk>a = aa \\<and> aa \\<in> A; s setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s setinterleaves ((list, lista), A)\n  a = aa \\<and>\n  aa \\<in> A \\<and>\n  s setinterleaves ((t, u), A) \\<and>\n  t1 < a # list \\<and> 0 < length t1 \\<Longrightarrow>\n  yu \\<le> lista \\<and> ys < tl s \\<and> ys setinterleaves ((tl t1, yu), A)\n  t = a # list\n  u = aa # lista", "have th0pre2: \"a=aa\\<and>aa\\<in>A\\<Longrightarrow>s setinterleaves ((a # list, u), A)\\<and> \n      t1<a#list\\<and>length t1>0\\<Longrightarrow>(a#ys)setinterleaves((a#tl t1, a#yu), A)\\<and>a#ys<s\\<and>a#yu\\<le>u\\<and>t1=a#tl t1\""], ["proof (prove)\nusing this:\n  \\<lbrakk>a = aa \\<and> aa \\<in> A; s setinterleaves ((t, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s setinterleaves ((list, lista), A)\n  a = aa \\<and>\n  aa \\<in> A \\<and>\n  s setinterleaves ((t, u), A) \\<and>\n  t1 < a # list \\<and> 0 < length t1 \\<Longrightarrow>\n  yu \\<le> lista \\<and> ys < tl s \\<and> ys setinterleaves ((tl t1, yu), A)\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = aa \\<and> aa \\<in> A;\n     s setinterleaves ((a # list, u), A) \\<and>\n     t1 < a # list \\<and> 0 < length t1\\<rbrakk>\n    \\<Longrightarrow> a # ys setinterleaves ((a # tl t1, a # yu), A) \\<and>\n                      a # ys < s \\<and> a # yu \\<le> u \\<and> t1 = a # tl t1", "apply (simp add: le_list_def less_list_def  Cons_eq_append_conv)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a = aa \\<and> aa \\<in> A;\n     (\\<exists>u.\n         s = aa # u \\<and> u setinterleaves ((list, lista), A)) \\<and>\n     (\\<exists>r. t1 @ r = aa # list) \\<and>\n     t1 \\<noteq> aa # list \\<and> t1 \\<noteq> [];\n     tl s setinterleaves ((list, lista), A);\n     (\\<exists>r. yu @ r = lista) \\<and>\n     (\\<exists>r. ys @ r = tl s) \\<and>\n     ys \\<noteq> tl s \\<and> ys setinterleaves ((tl t1, yu), A);\n     t = aa # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>r. aa # ys @ r = s) \\<and>\n                      aa # ys \\<noteq> s \\<and> t1 = aa # tl t1", "by (metis append_Cons list.exhaust_sel list.inject list.sel(3))"], ["proof (state)\nthis:\n  \\<lbrakk>a = aa \\<and> aa \\<in> A;\n   s setinterleaves ((a # list, u), A) \\<and>\n   t1 < a # list \\<and> 0 < length t1\\<rbrakk>\n  \\<Longrightarrow> a # ys setinterleaves ((a # tl t1, a # yu), A) \\<and>\n                    a # ys < s \\<and> a # yu \\<le> u \\<and> t1 = a # tl t1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>u1 s1.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          xc < x \\<longrightarrow>\n                          u1 \\<le> xa \\<and>\n                          s1 < xb \\<and> s1 setinterleaves ((xc, u1), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1 s1.\n                         s setinterleaves ((t, u), A) \\<and>\n                         t1 < t \\<longrightarrow>\n                         u1 \\<le> u \\<and>\n                         s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "have th0pre3: \"a=aa\\<and>aa\\<in>A\\<Longrightarrow>s setinterleaves ((a # list, u), A)\\<and>t1 < a # list\\<and>length t1=0\\<Longrightarrow>\n      []<s\\<and>[]\\<le>u\\<and> [] setinterleaves ((t1, []), A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a = aa \\<and> aa \\<in> A;\n     s setinterleaves ((a # list, u), A) \\<and>\n     t1 < a # list \\<and> length t1 = 0\\<rbrakk>\n    \\<Longrightarrow> [] < s \\<and>\n                      [] \\<le> u \\<and> [] setinterleaves ((t1, []), A)", "apply (simp add: le_list_def less_list_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a = aa \\<and> aa \\<in> A;\n     s setinterleaves ((aa # list, u), A) \\<and>\n     (\\<exists>r. t1 @ r = aa # list) \\<and>\n     t1 \\<noteq> aa # list \\<and> t1 = []\\<rbrakk>\n    \\<Longrightarrow> [] \\<noteq> s", "using c"], ["proof (prove)\nusing this:\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = aa \\<and> aa \\<in> A;\n     s setinterleaves ((aa # list, u), A) \\<and>\n     (\\<exists>r. t1 @ r = aa # list) \\<and>\n     t1 \\<noteq> aa # list \\<and> t1 = []\\<rbrakk>\n    \\<Longrightarrow> [] \\<noteq> s", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>a = aa \\<and> aa \\<in> A;\n   s setinterleaves ((a # list, u), A) \\<and>\n   t1 < a # list \\<and> length t1 = 0\\<rbrakk>\n  \\<Longrightarrow> [] < s \\<and>\n                    [] \\<le> u \\<and> [] setinterleaves ((t1, []), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>u1 s1.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          xc < x \\<longrightarrow>\n                          u1 \\<le> xa \\<and>\n                          s1 < xb \\<and> s1 setinterleaves ((xc, u1), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1 s1.\n                         s setinterleaves ((t, u), A) \\<and>\n                         t1 < t \\<longrightarrow>\n                         u1 \\<le> u \\<and>\n                         s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "from  th0pre2 th0pre3 c"], ["proof (chain)\npicking this:\n  \\<lbrakk>a = aa \\<and> aa \\<in> A;\n   s setinterleaves ((a # list, u), A) \\<and>\n   t1 < a # list \\<and> 0 < length t1\\<rbrakk>\n  \\<Longrightarrow> a # ys setinterleaves ((a # tl t1, a # yu), A) \\<and>\n                    a # ys < s \\<and> a # yu \\<le> u \\<and> t1 = a # tl t1\n  \\<lbrakk>a = aa \\<and> aa \\<in> A;\n   s setinterleaves ((a # list, u), A) \\<and>\n   t1 < a # list \\<and> length t1 = 0\\<rbrakk>\n  \\<Longrightarrow> [] < s \\<and>\n                    [] \\<le> u \\<and> [] setinterleaves ((t1, []), A)\n  u = aa # lista", "have th0 : \"a=aa\\<and>aa\\<in>A\\<Longrightarrow>s setinterleaves ((a # list, u), A)\\<and> \n      t1 < a # list\\<Longrightarrow>\\<exists>u1\\<le>u. \\<exists>s1<s. s1 setinterleaves ((t1, u1), A)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>a = aa \\<and> aa \\<in> A;\n   s setinterleaves ((a # list, u), A) \\<and>\n   t1 < a # list \\<and> 0 < length t1\\<rbrakk>\n  \\<Longrightarrow> a # ys setinterleaves ((a # tl t1, a # yu), A) \\<and>\n                    a # ys < s \\<and> a # yu \\<le> u \\<and> t1 = a # tl t1\n  \\<lbrakk>a = aa \\<and> aa \\<in> A;\n   s setinterleaves ((a # list, u), A) \\<and>\n   t1 < a # list \\<and> length t1 = 0\\<rbrakk>\n  \\<Longrightarrow> [] < s \\<and>\n                    [] \\<le> u \\<and> [] setinterleaves ((t1, []), A)\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = aa \\<and> aa \\<in> A;\n     s setinterleaves ((a # list, u), A) \\<and> t1 < a # list\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1\\<le>u.\n                         \\<exists>s1<s. s1 setinterleaves ((t1, u1), A)", "by fastforce"], ["proof (state)\nthis:\n  \\<lbrakk>a = aa \\<and> aa \\<in> A;\n   s setinterleaves ((a # list, u), A) \\<and> t1 < a # list\\<rbrakk>\n  \\<Longrightarrow> \\<exists>u1\\<le>u.\n                       \\<exists>s1<s. s1 setinterleaves ((t1, u1), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>u1 s1.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          xc < x \\<longrightarrow>\n                          u1 \\<le> xa \\<and>\n                          s1 < xb \\<and> s1 setinterleaves ((xc, u1), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1 s1.\n                         s setinterleaves ((t, u), A) \\<and>\n                         t1 < t \\<longrightarrow>\n                         u1 \\<le> u \\<and>\n                         s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "from b c"], ["proof (chain)\npicking this:\n  t = a # list\n  u = aa # lista", "have th1pre: \"a\\<notin>A\\<and>aa\\<in> A\\<Longrightarrow>s setinterleaves ((a # list, u), A) \\<Longrightarrow>\n      (tl s) setinterleaves ((list,aa#lista), A)\""], ["proof (prove)\nusing this:\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n     s setinterleaves ((a # list, u), A)\\<rbrakk>\n    \\<Longrightarrow> tl s setinterleaves ((list, aa # lista), A)", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n   s setinterleaves ((a # list, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s setinterleaves ((list, aa # lista), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>u1 s1.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          xc < x \\<longrightarrow>\n                          u1 \\<le> xa \\<and>\n                          s1 < xb \\<and> s1 setinterleaves ((xc, u1), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1 s1.\n                         s setinterleaves ((t, u), A) \\<and>\n                         t1 < t \\<longrightarrow>\n                         u1 \\<le> u \\<and>\n                         s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "from a"], ["proof (chain)\npicking this:\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb xc.\n            \\<exists>u1 s1.\n               xb setinterleaves ((x, xa), A) \\<and>\n               xc < x \\<longrightarrow>\n               u1 \\<le> xa \\<and>\n               s1 < xb \\<and> s1 setinterleaves ((xc, u1), A))", "obtain yu1 ys1  where th1pre1: \"a\\<notin>A\\<and>aa\\<in> A\\<and>s setinterleaves ((a # list, u), A)\\<and> \n      t1 < a # list\\<and>length t1>0\\<Longrightarrow>yu1\\<le>u\\<and>ys1<tl s\\<and>ys1 setinterleaves ((tl t1, yu1), A)\""], ["proof (prove)\nusing this:\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb xc.\n            \\<exists>u1 s1.\n               xb setinterleaves ((x, xa), A) \\<and>\n               xc < x \\<longrightarrow>\n               u1 \\<le> xa \\<and>\n               s1 < xb \\<and> s1 setinterleaves ((xc, u1), A))\n\ngoal (1 subgoal):\n 1. (\\<And>yu1 ys1.\n        (a \\<notin> A \\<and>\n         aa \\<in> A \\<and>\n         s setinterleaves ((a # list, u), A) \\<and>\n         t1 < a # list \\<and> 0 < length t1 \\<Longrightarrow>\n         yu1 \\<le> u \\<and>\n         ys1 < tl s \\<and>\n         ys1 setinterleaves ((tl t1, yu1), A)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "apply (simp add: le_list_def less_list_def append_eq_Cons_conv)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>yu1 ys1.\n                (a \\<notin> A \\<and>\n                 aa \\<in> A \\<and>\n                 s setinterleaves ((a # list, u), A) \\<and>\n                 (\\<exists>r.\n                     t1 = [] \\<and> r = a # list \\<or>\n                     (\\<exists>ys'.\n                         t1 = a # ys' \\<and> ys' @ r = list)) \\<and>\n                 t1 \\<noteq> a # list \\<and>\n                 t1 \\<noteq> [] \\<Longrightarrow>\n                 (\\<exists>r. yu1 @ r = u) \\<and>\n                 (\\<exists>r. ys1 @ r = tl s) \\<and>\n                 ys1 \\<noteq> tl s \\<and>\n                 ys1 setinterleaves ((tl t1, yu1), A)) \\<Longrightarrow>\n                thesis;\n     \\<forall>m<length t + length u.\n        \\<forall>x xa.\n           m = length x + length xa \\<longrightarrow>\n           (\\<forall>xb xc.\n               xb setinterleaves ((x, xa), A) \\<and>\n               (\\<exists>r. xc @ r = x) \\<and>\n               xc \\<noteq> x \\<longrightarrow>\n               (\\<exists>u1.\n                   (\\<exists>r. u1 @ r = xa) \\<and>\n                   (\\<exists>s1.\n                       (\\<exists>r. s1 @ r = xb) \\<and>\n                       s1 \\<noteq> xb \\<and>\n                       s1 setinterleaves ((xc, u1), A))))\\<rbrakk>\n    \\<Longrightarrow> thesis", "by (metis add_Suc b c length_Cons lessI list.sel(3) th1pre)"], ["proof (state)\nthis:\n  a \\<notin> A \\<and>\n  aa \\<in> A \\<and>\n  s setinterleaves ((a # list, u), A) \\<and>\n  t1 < a # list \\<and> 0 < length t1 \\<Longrightarrow>\n  yu1 \\<le> u \\<and> ys1 < tl s \\<and> ys1 setinterleaves ((tl t1, yu1), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>u1 s1.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          xc < x \\<longrightarrow>\n                          u1 \\<le> xa \\<and>\n                          s1 < xb \\<and> s1 setinterleaves ((xc, u1), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1 s1.\n                         s setinterleaves ((t, u), A) \\<and>\n                         t1 < t \\<longrightarrow>\n                         u1 \\<le> u \\<and>\n                         s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "from th1pre1"], ["proof (chain)\npicking this:\n  a \\<notin> A \\<and>\n  aa \\<in> A \\<and>\n  s setinterleaves ((a # list, u), A) \\<and>\n  t1 < a # list \\<and> 0 < length t1 \\<Longrightarrow>\n  yu1 \\<le> u \\<and> ys1 < tl s \\<and> ys1 setinterleaves ((tl t1, yu1), A)", "have th1pre2: \"a\\<notin>A\\<and>aa\\<in> A \\<and> ys1 setinterleaves ((tl t1, yu1), A)\\<Longrightarrow>\n      (a#ys1) setinterleaves ((a#tl t1, yu1), A)\""], ["proof (prove)\nusing this:\n  a \\<notin> A \\<and>\n  aa \\<in> A \\<and>\n  s setinterleaves ((a # list, u), A) \\<and>\n  t1 < a # list \\<and> 0 < length t1 \\<Longrightarrow>\n  yu1 \\<le> u \\<and> ys1 < tl s \\<and> ys1 setinterleaves ((tl t1, yu1), A)\n\ngoal (1 subgoal):\n 1. a \\<notin> A \\<and>\n    aa \\<in> A \\<and> ys1 setinterleaves ((tl t1, yu1), A) \\<Longrightarrow>\n    a # ys1 setinterleaves ((a # tl t1, yu1), A)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<notin> A \\<and>\n             aa \\<in> A \\<and> ys1 setinterleaves ((tl t1, yu1), A);\n     s setinterleaves ((a # list, u), A) \\<and>\n     t1 < a # list \\<and> t1 \\<noteq> [] \\<Longrightarrow>\n     yu1 \\<le> u \\<and> ys1 < tl s\\<rbrakk>\n    \\<Longrightarrow> a # ys1 setinterleaves ((a # tl t1, yu1), A)", "by (metis (mono_tags, lifting) addNonSync doubleReverse rev.simps(2) rev_rev_ident)"], ["proof (state)\nthis:\n  a \\<notin> A \\<and>\n  aa \\<in> A \\<and> ys1 setinterleaves ((tl t1, yu1), A) \\<Longrightarrow>\n  a # ys1 setinterleaves ((a # tl t1, yu1), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>u1 s1.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          xc < x \\<longrightarrow>\n                          u1 \\<le> xa \\<and>\n                          s1 < xb \\<and> s1 setinterleaves ((xc, u1), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1 s1.\n                         s setinterleaves ((t, u), A) \\<and>\n                         t1 < t \\<longrightarrow>\n                         u1 \\<le> u \\<and>\n                         s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "from th1pre th1pre1  b c"], ["proof (chain)\npicking this:\n  \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n   s setinterleaves ((a # list, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s setinterleaves ((list, aa # lista), A)\n  a \\<notin> A \\<and>\n  aa \\<in> A \\<and>\n  s setinterleaves ((a # list, u), A) \\<and>\n  t1 < a # list \\<and> 0 < length t1 \\<Longrightarrow>\n  yu1 \\<le> u \\<and> ys1 < tl s \\<and> ys1 setinterleaves ((tl t1, yu1), A)\n  t = a # list\n  u = aa # lista", "have th1pre3: \"a\\<notin>A\\<and>aa\\<in> A\\<Longrightarrow>s setinterleaves ((a # list, u), A)\\<and> \n      t1<a#list\\<and>length t1>0\\<Longrightarrow>(a#ys1) setinterleaves ((a#tl t1, yu1), A)\\<and>a#ys1<s\\<and>yu1\\<le>u\\<and>t1=a#tl t1\""], ["proof (prove)\nusing this:\n  \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n   s setinterleaves ((a # list, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s setinterleaves ((list, aa # lista), A)\n  a \\<notin> A \\<and>\n  aa \\<in> A \\<and>\n  s setinterleaves ((a # list, u), A) \\<and>\n  t1 < a # list \\<and> 0 < length t1 \\<Longrightarrow>\n  yu1 \\<le> u \\<and> ys1 < tl s \\<and> ys1 setinterleaves ((tl t1, yu1), A)\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n     s setinterleaves ((a # list, u), A) \\<and>\n     t1 < a # list \\<and> 0 < length t1\\<rbrakk>\n    \\<Longrightarrow> a # ys1 setinterleaves ((a # tl t1, yu1), A) \\<and>\n                      a # ys1 < s \\<and> yu1 \\<le> u \\<and> t1 = a # tl t1", "apply (simp add: le_list_def less_list_def )"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n     (\\<exists>u.\n         s = a # u \\<and> u setinterleaves ((list, aa # lista), A)) \\<and>\n     (\\<exists>r. t1 @ r = a # list) \\<and>\n     t1 \\<noteq> a # list \\<and> t1 \\<noteq> [];\n     tl s setinterleaves ((list, aa # lista), A);\n     (\\<exists>r. yu1 @ r = aa # lista) \\<and>\n     (\\<exists>r. ys1 @ r = tl s) \\<and>\n     ys1 \\<noteq> tl s \\<and> ys1 setinterleaves ((tl t1, yu1), A);\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> a # ys1 setinterleaves ((a # tl t1, yu1), A) \\<and>\n                      (\\<exists>r. a # ys1 @ r = s) \\<and>\n                      a # ys1 \\<noteq> s \\<and> t1 = a # tl t1", "by (metis append_Cons list.exhaust_sel list.inject list.sel(3) th1pre2)"], ["proof (state)\nthis:\n  \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n   s setinterleaves ((a # list, u), A) \\<and>\n   t1 < a # list \\<and> 0 < length t1\\<rbrakk>\n  \\<Longrightarrow> a # ys1 setinterleaves ((a # tl t1, yu1), A) \\<and>\n                    a # ys1 < s \\<and> yu1 \\<le> u \\<and> t1 = a # tl t1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>u1 s1.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          xc < x \\<longrightarrow>\n                          u1 \\<le> xa \\<and>\n                          s1 < xb \\<and> s1 setinterleaves ((xc, u1), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1 s1.\n                         s setinterleaves ((t, u), A) \\<and>\n                         t1 < t \\<longrightarrow>\n                         u1 \\<le> u \\<and>\n                         s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "have th1preEmpty: \"a\\<notin>A\\<and>aa\\<in> A\\<Longrightarrow>s setinterleaves ((a # list, u), A)\\<and>t1 < a # list\\<and>length t1=0\n      \\<Longrightarrow>[]<s\\<and>[]\\<le>u\\<and> [] setinterleaves ((t1, []), A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n     s setinterleaves ((a # list, u), A) \\<and>\n     t1 < a # list \\<and> length t1 = 0\\<rbrakk>\n    \\<Longrightarrow> [] < s \\<and>\n                      [] \\<le> u \\<and> [] setinterleaves ((t1, []), A)", "apply (simp add: le_list_def less_list_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n     s setinterleaves ((a # list, u), A) \\<and>\n     (\\<exists>r. t1 @ r = a # list) \\<and>\n     t1 \\<noteq> a # list \\<and> t1 = []\\<rbrakk>\n    \\<Longrightarrow> [] \\<noteq> s", "using c"], ["proof (prove)\nusing this:\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n     s setinterleaves ((a # list, u), A) \\<and>\n     (\\<exists>r. t1 @ r = a # list) \\<and>\n     t1 \\<noteq> a # list \\<and> t1 = []\\<rbrakk>\n    \\<Longrightarrow> [] \\<noteq> s", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n   s setinterleaves ((a # list, u), A) \\<and>\n   t1 < a # list \\<and> length t1 = 0\\<rbrakk>\n  \\<Longrightarrow> [] < s \\<and>\n                    [] \\<le> u \\<and> [] setinterleaves ((t1, []), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>u1 s1.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          xc < x \\<longrightarrow>\n                          u1 \\<le> xa \\<and>\n                          s1 < xb \\<and> s1 setinterleaves ((xc, u1), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1 s1.\n                         s setinterleaves ((t, u), A) \\<and>\n                         t1 < t \\<longrightarrow>\n                         u1 \\<le> u \\<and>\n                         s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "from c"], ["proof (chain)\npicking this:\n  u = aa # lista", "have th1: \"a\\<notin>A\\<and>aa\\<in> A\\<Longrightarrow>s setinterleaves ((a # list, u), A)\\<and>t1 < a # list\\<Longrightarrow>\n      \\<exists>u1\\<le>u. \\<exists>s1<s. s1 setinterleaves ((t1, u1), A)\""], ["proof (prove)\nusing this:\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n     s setinterleaves ((a # list, u), A) \\<and> t1 < a # list\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1\\<le>u.\n                         \\<exists>s1<s. s1 setinterleaves ((t1, u1), A)", "using th1pre3 th1preEmpty"], ["proof (prove)\nusing this:\n  u = aa # lista\n  \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n   s setinterleaves ((a # list, u), A) \\<and>\n   t1 < a # list \\<and> 0 < length t1\\<rbrakk>\n  \\<Longrightarrow> a # ys1 setinterleaves ((a # tl t1, yu1), A) \\<and>\n                    a # ys1 < s \\<and> yu1 \\<le> u \\<and> t1 = a # tl t1\n  \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n   s setinterleaves ((a # list, u), A) \\<and>\n   t1 < a # list \\<and> length t1 = 0\\<rbrakk>\n  \\<Longrightarrow> [] < s \\<and>\n                    [] \\<le> u \\<and> [] setinterleaves ((t1, []), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n     s setinterleaves ((a # list, u), A) \\<and> t1 < a # list\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1\\<le>u.\n                         \\<exists>s1<s. s1 setinterleaves ((t1, u1), A)", "by fastforce"], ["proof (state)\nthis:\n  \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n   s setinterleaves ((a # list, u), A) \\<and> t1 < a # list\\<rbrakk>\n  \\<Longrightarrow> \\<exists>u1\\<le>u.\n                       \\<exists>s1<s. s1 setinterleaves ((t1, u1), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>u1 s1.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          xc < x \\<longrightarrow>\n                          u1 \\<le> xa \\<and>\n                          s1 < xb \\<and> s1 setinterleaves ((xc, u1), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1 s1.\n                         s setinterleaves ((t, u), A) \\<and>\n                         t1 < t \\<longrightarrow>\n                         u1 \\<le> u \\<and>\n                         s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "from b c"], ["proof (chain)\npicking this:\n  t = a # list\n  u = aa # lista", "have th2pre: \"aa\\<notin>A\\<and>a\\<in> A\\<Longrightarrow>s setinterleaves ((a # list, u), A) \\<Longrightarrow>\n      (tl s) setinterleaves ((a#list,lista), A)\""], ["proof (prove)\nusing this:\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n     s setinterleaves ((a # list, u), A)\\<rbrakk>\n    \\<Longrightarrow> tl s setinterleaves ((a # list, lista), A)", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n   s setinterleaves ((a # list, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s setinterleaves ((a # list, lista), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>u1 s1.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          xc < x \\<longrightarrow>\n                          u1 \\<le> xa \\<and>\n                          s1 < xb \\<and> s1 setinterleaves ((xc, u1), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1 s1.\n                         s setinterleaves ((t, u), A) \\<and>\n                         t1 < t \\<longrightarrow>\n                         u1 \\<le> u \\<and>\n                         s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "from a  th2pre"], ["proof (chain)\npicking this:\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb xc.\n            \\<exists>u1 s1.\n               xb setinterleaves ((x, xa), A) \\<and>\n               xc < x \\<longrightarrow>\n               u1 \\<le> xa \\<and>\n               s1 < xb \\<and> s1 setinterleaves ((xc, u1), A))\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n   s setinterleaves ((a # list, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s setinterleaves ((a # list, lista), A)", "obtain yu2 ys2  where th2pre1: \"aa\\<notin>A\\<and>a\\<in> A\\<and>s setinterleaves ((a # list, u), A)\\<and> \n      t1 < a # list\\<and>length t1>0\\<Longrightarrow>yu2\\<le>lista\\<and>ys2<tl s\\<and>ys2 setinterleaves ((t1, yu2), A)\""], ["proof (prove)\nusing this:\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb xc.\n            \\<exists>u1 s1.\n               xb setinterleaves ((x, xa), A) \\<and>\n               xc < x \\<longrightarrow>\n               u1 \\<le> xa \\<and>\n               s1 < xb \\<and> s1 setinterleaves ((xc, u1), A))\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n   s setinterleaves ((a # list, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s setinterleaves ((a # list, lista), A)\n\ngoal (1 subgoal):\n 1. (\\<And>yu2 ys2.\n        (aa \\<notin> A \\<and>\n         a \\<in> A \\<and>\n         s setinterleaves ((a # list, u), A) \\<and>\n         t1 < a # list \\<and> 0 < length t1 \\<Longrightarrow>\n         yu2 \\<le> lista \\<and>\n         ys2 < tl s \\<and>\n         ys2 setinterleaves ((t1, yu2), A)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "apply (simp add: le_list_def less_list_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>yu2 ys2.\n                (aa \\<notin> A \\<and>\n                 a \\<in> A \\<and>\n                 s setinterleaves ((a # list, u), A) \\<and>\n                 (\\<exists>r. t1 @ r = a # list) \\<and>\n                 t1 \\<noteq> a # list \\<and>\n                 t1 \\<noteq> [] \\<Longrightarrow>\n                 (\\<exists>r. yu2 @ r = lista) \\<and>\n                 (\\<exists>r. ys2 @ r = tl s) \\<and>\n                 ys2 \\<noteq> tl s \\<and>\n                 ys2 setinterleaves ((t1, yu2), A)) \\<Longrightarrow>\n                thesis;\n     \\<forall>m<length t + length u.\n        \\<forall>x xa.\n           m = length x + length xa \\<longrightarrow>\n           (\\<forall>xb xc.\n               xb setinterleaves ((x, xa), A) \\<and>\n               (\\<exists>r. xc @ r = x) \\<and>\n               xc \\<noteq> x \\<longrightarrow>\n               (\\<exists>u1.\n                   (\\<exists>r. u1 @ r = xa) \\<and>\n                   (\\<exists>s1.\n                       (\\<exists>r. s1 @ r = xb) \\<and>\n                       s1 \\<noteq> xb \\<and>\n                       s1 setinterleaves ((xc, u1), A))));\n     \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n      s setinterleaves ((a # list, u), A)\\<rbrakk>\n     \\<Longrightarrow> tl s setinterleaves ((a # list, lista), A)\\<rbrakk>\n    \\<Longrightarrow> thesis", "by (metis add_Suc_right b c length_Cons lessI)"], ["proof (state)\nthis:\n  aa \\<notin> A \\<and>\n  a \\<in> A \\<and>\n  s setinterleaves ((a # list, u), A) \\<and>\n  t1 < a # list \\<and> 0 < length t1 \\<Longrightarrow>\n  yu2 \\<le> lista \\<and> ys2 < tl s \\<and> ys2 setinterleaves ((t1, yu2), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>u1 s1.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          xc < x \\<longrightarrow>\n                          u1 \\<le> xa \\<and>\n                          s1 < xb \\<and> s1 setinterleaves ((xc, u1), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1 s1.\n                         s setinterleaves ((t, u), A) \\<and>\n                         t1 < t \\<longrightarrow>\n                         u1 \\<le> u \\<and>\n                         s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "from th2pre1"], ["proof (chain)\npicking this:\n  aa \\<notin> A \\<and>\n  a \\<in> A \\<and>\n  s setinterleaves ((a # list, u), A) \\<and>\n  t1 < a # list \\<and> 0 < length t1 \\<Longrightarrow>\n  yu2 \\<le> lista \\<and> ys2 < tl s \\<and> ys2 setinterleaves ((t1, yu2), A)", "have th2pre2: \"aa\\<notin>A\\<and>a\\<in> A \\<and> ys2 setinterleaves ((t1, yu2), A)\\<Longrightarrow>\n      (aa#ys2) setinterleaves ((t1, aa#yu2), A)\""], ["proof (prove)\nusing this:\n  aa \\<notin> A \\<and>\n  a \\<in> A \\<and>\n  s setinterleaves ((a # list, u), A) \\<and>\n  t1 < a # list \\<and> 0 < length t1 \\<Longrightarrow>\n  yu2 \\<le> lista \\<and> ys2 < tl s \\<and> ys2 setinterleaves ((t1, yu2), A)\n\ngoal (1 subgoal):\n 1. aa \\<notin> A \\<and>\n    a \\<in> A \\<and> ys2 setinterleaves ((t1, yu2), A) \\<Longrightarrow>\n    aa # ys2 setinterleaves ((t1, aa # yu2), A)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>aa \\<notin> A \\<and>\n             a \\<in> A \\<and> ys2 setinterleaves ((t1, yu2), A);\n     s setinterleaves ((a # list, u), A) \\<and>\n     t1 < a # list \\<and> t1 \\<noteq> [] \\<Longrightarrow>\n     yu2 \\<le> lista \\<and> ys2 < tl s\\<rbrakk>\n    \\<Longrightarrow> aa # ys2 setinterleaves ((t1, aa # yu2), A)", "by (metis (mono_tags, lifting) addNonSync doubleReverse rev.simps(2) rev_rev_ident)"], ["proof (state)\nthis:\n  aa \\<notin> A \\<and>\n  a \\<in> A \\<and> ys2 setinterleaves ((t1, yu2), A) \\<Longrightarrow>\n  aa # ys2 setinterleaves ((t1, aa # yu2), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>u1 s1.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          xc < x \\<longrightarrow>\n                          u1 \\<le> xa \\<and>\n                          s1 < xb \\<and> s1 setinterleaves ((xc, u1), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1 s1.\n                         s setinterleaves ((t, u), A) \\<and>\n                         t1 < t \\<longrightarrow>\n                         u1 \\<le> u \\<and>\n                         s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "from th2pre th2pre1  b c"], ["proof (chain)\npicking this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n   s setinterleaves ((a # list, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s setinterleaves ((a # list, lista), A)\n  aa \\<notin> A \\<and>\n  a \\<in> A \\<and>\n  s setinterleaves ((a # list, u), A) \\<and>\n  t1 < a # list \\<and> 0 < length t1 \\<Longrightarrow>\n  yu2 \\<le> lista \\<and> ys2 < tl s \\<and> ys2 setinterleaves ((t1, yu2), A)\n  t = a # list\n  u = aa # lista", "have th2pre3: \"aa\\<notin>A\\<and>a\\<in> A \\<Longrightarrow>s setinterleaves ((a # list, u), A)\\<and> \n      t1 < a # list\\<and>length t1>0\\<Longrightarrow>(aa#ys2) setinterleaves ((t1, aa#yu2), A)\\<and>aa#ys2<s\\<and>aa#yu2\\<le>u\""], ["proof (prove)\nusing this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n   s setinterleaves ((a # list, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s setinterleaves ((a # list, lista), A)\n  aa \\<notin> A \\<and>\n  a \\<in> A \\<and>\n  s setinterleaves ((a # list, u), A) \\<and>\n  t1 < a # list \\<and> 0 < length t1 \\<Longrightarrow>\n  yu2 \\<le> lista \\<and> ys2 < tl s \\<and> ys2 setinterleaves ((t1, yu2), A)\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n     s setinterleaves ((a # list, u), A) \\<and>\n     t1 < a # list \\<and> 0 < length t1\\<rbrakk>\n    \\<Longrightarrow> aa # ys2 setinterleaves ((t1, aa # yu2), A) \\<and>\n                      aa # ys2 < s \\<and> aa # yu2 \\<le> u", "apply (simp add: le_list_def less_list_def )"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n     (\\<exists>u.\n         s = aa # u \\<and> u setinterleaves ((a # list, lista), A)) \\<and>\n     (\\<exists>r. t1 @ r = a # list) \\<and>\n     t1 \\<noteq> a # list \\<and> t1 \\<noteq> [];\n     tl s setinterleaves ((a # list, lista), A);\n     (\\<exists>r. yu2 @ r = lista) \\<and>\n     (\\<exists>r. ys2 @ r = tl s) \\<and>\n     ys2 \\<noteq> tl s \\<and> ys2 setinterleaves ((t1, yu2), A);\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> aa # ys2 setinterleaves ((t1, aa # yu2), A) \\<and>\n                      (\\<exists>r. aa # ys2 @ r = s) \\<and>\n                      aa # ys2 \\<noteq> s", "using th2pre2"], ["proof (prove)\nusing this:\n  aa \\<notin> A \\<and>\n  a \\<in> A \\<and> ys2 setinterleaves ((t1, yu2), A) \\<Longrightarrow>\n  aa # ys2 setinterleaves ((t1, aa # yu2), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n     (\\<exists>u.\n         s = aa # u \\<and> u setinterleaves ((a # list, lista), A)) \\<and>\n     (\\<exists>r. t1 @ r = a # list) \\<and>\n     t1 \\<noteq> a # list \\<and> t1 \\<noteq> [];\n     tl s setinterleaves ((a # list, lista), A);\n     (\\<exists>r. yu2 @ r = lista) \\<and>\n     (\\<exists>r. ys2 @ r = tl s) \\<and>\n     ys2 \\<noteq> tl s \\<and> ys2 setinterleaves ((t1, yu2), A);\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> aa # ys2 setinterleaves ((t1, aa # yu2), A) \\<and>\n                      (\\<exists>r. aa # ys2 @ r = s) \\<and>\n                      aa # ys2 \\<noteq> s", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n   s setinterleaves ((a # list, u), A) \\<and>\n   t1 < a # list \\<and> 0 < length t1\\<rbrakk>\n  \\<Longrightarrow> aa # ys2 setinterleaves ((t1, aa # yu2), A) \\<and>\n                    aa # ys2 < s \\<and> aa # yu2 \\<le> u\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>u1 s1.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          xc < x \\<longrightarrow>\n                          u1 \\<le> xa \\<and>\n                          s1 < xb \\<and> s1 setinterleaves ((xc, u1), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1 s1.\n                         s setinterleaves ((t, u), A) \\<and>\n                         t1 < t \\<longrightarrow>\n                         u1 \\<le> u \\<and>\n                         s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "have th2preEmpty: \"aa\\<notin>A\\<and>a\\<in> A\\<Longrightarrow>s setinterleaves ((a # list, u), A)\\<and>t1 < a # list\\<and>length t1=0\n      \\<Longrightarrow>[]<s\\<and>[]\\<le>u\\<and> [] setinterleaves ((t1, []), A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n     s setinterleaves ((a # list, u), A) \\<and>\n     t1 < a # list \\<and> length t1 = 0\\<rbrakk>\n    \\<Longrightarrow> [] < s \\<and>\n                      [] \\<le> u \\<and> [] setinterleaves ((t1, []), A)", "apply (simp add: le_list_def less_list_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n     s setinterleaves ((a # list, u), A) \\<and>\n     (\\<exists>r. t1 @ r = a # list) \\<and>\n     t1 \\<noteq> a # list \\<and> t1 = []\\<rbrakk>\n    \\<Longrightarrow> [] \\<noteq> s", "using c"], ["proof (prove)\nusing this:\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n     s setinterleaves ((a # list, u), A) \\<and>\n     (\\<exists>r. t1 @ r = a # list) \\<and>\n     t1 \\<noteq> a # list \\<and> t1 = []\\<rbrakk>\n    \\<Longrightarrow> [] \\<noteq> s", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n   s setinterleaves ((a # list, u), A) \\<and>\n   t1 < a # list \\<and> length t1 = 0\\<rbrakk>\n  \\<Longrightarrow> [] < s \\<and>\n                    [] \\<le> u \\<and> [] setinterleaves ((t1, []), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>u1 s1.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          xc < x \\<longrightarrow>\n                          u1 \\<le> xa \\<and>\n                          s1 < xb \\<and> s1 setinterleaves ((xc, u1), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1 s1.\n                         s setinterleaves ((t, u), A) \\<and>\n                         t1 < t \\<longrightarrow>\n                         u1 \\<le> u \\<and>\n                         s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "from th2pre3 b c"], ["proof (chain)\npicking this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n   s setinterleaves ((a # list, u), A) \\<and>\n   t1 < a # list \\<and> 0 < length t1\\<rbrakk>\n  \\<Longrightarrow> aa # ys2 setinterleaves ((t1, aa # yu2), A) \\<and>\n                    aa # ys2 < s \\<and> aa # yu2 \\<le> u\n  t = a # list\n  u = aa # lista", "have th2: \"aa\\<notin>A\\<and>a\\<in> A\\<Longrightarrow>s setinterleaves ((a # list, u), A)\\<and>t1 < a # list\\<Longrightarrow>\n      \\<exists>u1\\<le>u. \\<exists>s1<s. s1 setinterleaves ((t1, u1), A)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n   s setinterleaves ((a # list, u), A) \\<and>\n   t1 < a # list \\<and> 0 < length t1\\<rbrakk>\n  \\<Longrightarrow> aa # ys2 setinterleaves ((t1, aa # yu2), A) \\<and>\n                    aa # ys2 < s \\<and> aa # yu2 \\<le> u\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n     s setinterleaves ((a # list, u), A) \\<and> t1 < a # list\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1\\<le>u.\n                         \\<exists>s1<s. s1 setinterleaves ((t1, u1), A)", "using th2preEmpty"], ["proof (prove)\nusing this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n   s setinterleaves ((a # list, u), A) \\<and>\n   t1 < a # list \\<and> 0 < length t1\\<rbrakk>\n  \\<Longrightarrow> aa # ys2 setinterleaves ((t1, aa # yu2), A) \\<and>\n                    aa # ys2 < s \\<and> aa # yu2 \\<le> u\n  t = a # list\n  u = aa # lista\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n   s setinterleaves ((a # list, u), A) \\<and>\n   t1 < a # list \\<and> length t1 = 0\\<rbrakk>\n  \\<Longrightarrow> [] < s \\<and>\n                    [] \\<le> u \\<and> [] setinterleaves ((t1, []), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n     s setinterleaves ((a # list, u), A) \\<and> t1 < a # list\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1\\<le>u.\n                         \\<exists>s1<s. s1 setinterleaves ((t1, u1), A)", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n   s setinterleaves ((a # list, u), A) \\<and> t1 < a # list\\<rbrakk>\n  \\<Longrightarrow> \\<exists>u1\\<le>u.\n                       \\<exists>s1<s. s1 setinterleaves ((t1, u1), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>u1 s1.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          xc < x \\<longrightarrow>\n                          u1 \\<le> xa \\<and>\n                          s1 < xb \\<and> s1 setinterleaves ((xc, u1), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1 s1.\n                         s setinterleaves ((t, u), A) \\<and>\n                         t1 < t \\<longrightarrow>\n                         u1 \\<le> u \\<and>\n                         s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "from b c"], ["proof (chain)\npicking this:\n  t = a # list\n  u = aa # lista", "have th3pre: \"aa\\<notin>A\\<and>a\\<notin> A\\<Longrightarrow>s setinterleaves ((a # list, u), A) \\<Longrightarrow>\n      (tl s) setinterleaves ((a#list,lista), A)\\<and>hd s=aa\\<or>(tl s) setinterleaves ((list,u), A)\\<and>hd s=a\""], ["proof (prove)\nusing this:\n  t = a # list\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n     s setinterleaves ((a # list, u), A)\\<rbrakk>\n    \\<Longrightarrow> tl s setinterleaves ((a # list, lista), A) \\<and>\n                      hd s = aa \\<or>\n                      tl s setinterleaves ((list, u), A) \\<and> hd s = a", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   s setinterleaves ((a # list, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s setinterleaves ((a # list, lista), A) \\<and>\n                    hd s = aa \\<or>\n                    tl s setinterleaves ((list, u), A) \\<and> hd s = a\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>u1 s1.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          xc < x \\<longrightarrow>\n                          u1 \\<le> xa \\<and>\n                          s1 < xb \\<and> s1 setinterleaves ((xc, u1), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1 s1.\n                         s setinterleaves ((t, u), A) \\<and>\n                         t1 < t \\<longrightarrow>\n                         u1 \\<le> u \\<and>\n                         s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "from a c b th3pre"], ["proof (chain)\npicking this:\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb xc.\n            \\<exists>u1 s1.\n               xb setinterleaves ((x, xa), A) \\<and>\n               xc < x \\<longrightarrow>\n               u1 \\<le> xa \\<and>\n               s1 < xb \\<and> s1 setinterleaves ((xc, u1), A))\n  u = aa # lista\n  t = a # list\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   s setinterleaves ((a # list, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s setinterleaves ((a # list, lista), A) \\<and>\n                    hd s = aa \\<or>\n                    tl s setinterleaves ((list, u), A) \\<and> hd s = a", "obtain yu3 ys3  where th3pre1: \"(aa\\<notin>A\\<and>a\\<notin> A\\<and>s setinterleaves \n      ((a # list, u), A)\\<and> t1 < a # list\\<and>length t1>0\\<and>(tl s) setinterleaves ((a#list,lista), A)\\<longrightarrow>\n      yu3\\<le>lista\\<and>ys3<tl s\\<and>ys3 setinterleaves((t1,yu3),A))\""], ["proof (prove)\nusing this:\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb xc.\n            \\<exists>u1 s1.\n               xb setinterleaves ((x, xa), A) \\<and>\n               xc < x \\<longrightarrow>\n               u1 \\<le> xa \\<and>\n               s1 < xb \\<and> s1 setinterleaves ((xc, u1), A))\n  u = aa # lista\n  t = a # list\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   s setinterleaves ((a # list, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s setinterleaves ((a # list, lista), A) \\<and>\n                    hd s = aa \\<or>\n                    tl s setinterleaves ((list, u), A) \\<and> hd s = a\n\ngoal (1 subgoal):\n 1. (\\<And>yu3 ys3.\n        aa \\<notin> A \\<and>\n        a \\<notin> A \\<and>\n        s setinterleaves ((a # list, u), A) \\<and>\n        t1 < a # list \\<and>\n        0 < length t1 \\<and>\n        tl s setinterleaves ((a # list, lista), A) \\<longrightarrow>\n        yu3 \\<le> lista \\<and>\n        ys3 < tl s \\<and>\n        ys3 setinterleaves ((t1, yu3), A) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "apply(simp add:le_list_def less_list_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>yu3 ys3.\n                aa \\<notin> A \\<and>\n                a \\<notin> A \\<and>\n                s \\<in> (if a \\<in> A\n                         then if aa \\<in> A\n                              then if a = aa\n                                   then {a # u |u.\n   u setinterleaves ((list, lista), A)}\n                                   else {}\n                              else {aa # u |u.\n                                    u setinterleaves ((a # list, lista), A)}\n                         else if aa \\<notin> A\n                              then {a # u |u.\n                                    u setinterleaves ((list, aa #\n                       lista), A)} \\<union>\n                                   {aa # u |u.\n                                    u setinterleaves ((a # list, lista), A)}\n                              else {a # u |u.\n                                    u setinterleaves ((list, aa #\n                       lista), A)}) \\<and>\n                (\\<exists>r. t1 @ r = a # list) \\<and>\n                t1 \\<noteq> a # list \\<and>\n                t1 \\<noteq> [] \\<and>\n                tl s setinterleaves ((a # list, lista), A) \\<longrightarrow>\n                (\\<exists>r. yu3 @ r = lista) \\<and>\n                (\\<exists>r. ys3 @ r = tl s) \\<and>\n                ys3 \\<noteq> tl s \\<and>\n                ys3 setinterleaves ((t1, yu3), A) \\<Longrightarrow>\n                thesis;\n     \\<forall>m<Suc (Suc (length list + length lista)).\n        \\<forall>x xa.\n           m = length x + length xa \\<longrightarrow>\n           (\\<forall>xb xc.\n               xb setinterleaves ((x, xa), A) \\<and>\n               (\\<exists>r. xc @ r = x) \\<and>\n               xc \\<noteq> x \\<longrightarrow>\n               (\\<exists>u1.\n                   (\\<exists>r. u1 @ r = xa) \\<and>\n                   (\\<exists>s1.\n                       (\\<exists>r. s1 @ r = xb) \\<and>\n                       s1 \\<noteq> xb \\<and>\n                       s1 setinterleaves ((xc, u1), A))));\n     u = aa # lista; t = a # list;\n     \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n      (\\<exists>u.\n          s = a # u \\<and> u setinterleaves ((list, aa # lista), A)) \\<or>\n      (\\<exists>u.\n          s = aa # u \\<and>\n          u setinterleaves ((a # list, lista), A))\\<rbrakk>\n     \\<Longrightarrow> tl s setinterleaves ((a # list, lista), A) \\<and>\n                       hd s = aa \\<or>\n                       tl s setinterleaves ((list, aa # lista), A) \\<and>\n                       hd s = a\\<rbrakk>\n    \\<Longrightarrow> thesis", "by (metis (no_types, lifting) add_Suc length_Cons lessI)"], ["proof (state)\nthis:\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  s setinterleaves ((a # list, u), A) \\<and>\n  t1 < a # list \\<and>\n  0 < length t1 \\<and>\n  tl s setinterleaves ((a # list, lista), A) \\<longrightarrow>\n  yu3 \\<le> lista \\<and> ys3 < tl s \\<and> ys3 setinterleaves ((t1, yu3), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>u1 s1.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          xc < x \\<longrightarrow>\n                          u1 \\<le> xa \\<and>\n                          s1 < xb \\<and> s1 setinterleaves ((xc, u1), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1 s1.\n                         s setinterleaves ((t, u), A) \\<and>\n                         t1 < t \\<longrightarrow>\n                         u1 \\<le> u \\<and>\n                         s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "have adsmallPrefix: \"t1<a # list\\<and>length t1>0\\<Longrightarrow>tl t1<list\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t1 < a # list \\<and> 0 < length t1 \\<Longrightarrow> tl t1 < list", "using less_tail"], ["proof (prove)\nusing this:\n  \\<lbrakk>?s \\<noteq> []; ?s < ?t\\<rbrakk> \\<Longrightarrow> tl ?s < tl ?t\n\ngoal (1 subgoal):\n 1. t1 < a # list \\<and> 0 < length t1 \\<Longrightarrow> tl t1 < list", "by fastforce"], ["proof (state)\nthis:\n  t1 < a # list \\<and> 0 < length t1 \\<Longrightarrow> tl t1 < list\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>u1 s1.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          xc < x \\<longrightarrow>\n                          u1 \\<le> xa \\<and>\n                          s1 < xb \\<and> s1 setinterleaves ((xc, u1), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1 s1.\n                         s setinterleaves ((t, u), A) \\<and>\n                         t1 < t \\<longrightarrow>\n                         u1 \\<le> u \\<and>\n                         s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "from a b c th3pre adsmallPrefix"], ["proof (chain)\npicking this:\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb xc.\n            \\<exists>u1 s1.\n               xb setinterleaves ((x, xa), A) \\<and>\n               xc < x \\<longrightarrow>\n               u1 \\<le> xa \\<and>\n               s1 < xb \\<and> s1 setinterleaves ((xc, u1), A))\n  t = a # list\n  u = aa # lista\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   s setinterleaves ((a # list, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s setinterleaves ((a # list, lista), A) \\<and>\n                    hd s = aa \\<or>\n                    tl s setinterleaves ((list, u), A) \\<and> hd s = a\n  t1 < a # list \\<and> 0 < length t1 \\<Longrightarrow> tl t1 < list", "obtain yu30 ys30   where th3pre12: \"(aa\\<notin>A\\<and>a\\<notin> A\\<Longrightarrow>\n      (tl s) setinterleaves ((list,u), A)\\<and>hd s=a\\<and>tl t1< list\\<longrightarrow>yu30\\<le>u\\<and>ys30<tl s\\<and>\n      ys30 setinterleaves ((tl t1, yu30), A))\""], ["proof (prove)\nusing this:\n  \\<forall>m<length t + length u.\n     \\<forall>x xa.\n        m = length x + length xa \\<longrightarrow>\n        (\\<forall>xb xc.\n            \\<exists>u1 s1.\n               xb setinterleaves ((x, xa), A) \\<and>\n               xc < x \\<longrightarrow>\n               u1 \\<le> xa \\<and>\n               s1 < xb \\<and> s1 setinterleaves ((xc, u1), A))\n  t = a # list\n  u = aa # lista\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   s setinterleaves ((a # list, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s setinterleaves ((a # list, lista), A) \\<and>\n                    hd s = aa \\<or>\n                    tl s setinterleaves ((list, u), A) \\<and> hd s = a\n  t1 < a # list \\<and> 0 < length t1 \\<Longrightarrow> tl t1 < list\n\ngoal (1 subgoal):\n 1. (\\<And>yu30 ys30.\n        (aa \\<notin> A \\<and> a \\<notin> A \\<Longrightarrow>\n         tl s setinterleaves ((list, u), A) \\<and>\n         hd s = a \\<and> tl t1 < list \\<longrightarrow>\n         yu30 \\<le> u \\<and>\n         ys30 < tl s \\<and>\n         ys30 setinterleaves ((tl t1, yu30), A)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "apply (simp add: le_list_def less_list_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>yu30 ys30.\n                (aa \\<notin> A \\<and> a \\<notin> A \\<Longrightarrow>\n                 tl s setinterleaves ((list, aa # lista), A) \\<and>\n                 hd s = a \\<and>\n                 (\\<exists>r. tl t1 @ r = list) \\<and>\n                 tl t1 \\<noteq> list \\<longrightarrow>\n                 (\\<exists>r. yu30 @ r = aa # lista) \\<and>\n                 (\\<exists>r. ys30 @ r = tl s) \\<and>\n                 ys30 \\<noteq> tl s \\<and>\n                 ys30 setinterleaves ((tl t1, yu30), A)) \\<Longrightarrow>\n                thesis;\n     \\<forall>m<Suc (Suc (length list + length lista)).\n        \\<forall>x xa.\n           m = length x + length xa \\<longrightarrow>\n           (\\<forall>xb xc.\n               xb setinterleaves ((x, xa), A) \\<and>\n               (\\<exists>r. xc @ r = x) \\<and>\n               xc \\<noteq> x \\<longrightarrow>\n               (\\<exists>u1.\n                   (\\<exists>r. u1 @ r = xa) \\<and>\n                   (\\<exists>s1.\n                       (\\<exists>r. s1 @ r = xb) \\<and>\n                       s1 \\<noteq> xb \\<and>\n                       s1 setinterleaves ((xc, u1), A))));\n     t = a # list; u = aa # lista;\n     \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n      (\\<exists>u.\n          s = a # u \\<and> u setinterleaves ((list, aa # lista), A)) \\<or>\n      (\\<exists>u.\n          s = aa # u \\<and>\n          u setinterleaves ((a # list, lista), A))\\<rbrakk>\n     \\<Longrightarrow> tl s setinterleaves ((a # list, lista), A) \\<and>\n                       hd s = aa \\<or>\n                       tl s setinterleaves ((list, aa # lista), A) \\<and>\n                       hd s = a;\n     (\\<exists>r. t1 @ r = a # list) \\<and>\n     t1 \\<noteq> a # list \\<and> t1 \\<noteq> [] \\<Longrightarrow>\n     (\\<exists>r. tl t1 @ r = list) \\<and> tl t1 \\<noteq> list\\<rbrakk>\n    \\<Longrightarrow> thesis", "by (metis (no_types, lifting) add_Suc_right length_Cons lessI)"], ["proof (state)\nthis:\n  aa \\<notin> A \\<and> a \\<notin> A \\<Longrightarrow>\n  tl s setinterleaves ((list, u), A) \\<and>\n  hd s = a \\<and> tl t1 < list \\<longrightarrow>\n  yu30 \\<le> u \\<and>\n  ys30 < tl s \\<and> ys30 setinterleaves ((tl t1, yu30), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>u1 s1.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          xc < x \\<longrightarrow>\n                          u1 \\<le> xa \\<and>\n                          s1 < xb \\<and> s1 setinterleaves ((xc, u1), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1 s1.\n                         s setinterleaves ((t, u), A) \\<and>\n                         t1 < t \\<longrightarrow>\n                         u1 \\<le> u \\<and>\n                         s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "have th3pre1more1: \"yu3\\<le>lista \\<Longrightarrow>aa#yu3\\<le>u \""], ["proof (prove)\ngoal (1 subgoal):\n 1. yu3 \\<le> lista \\<Longrightarrow> aa # yu3 \\<le> u", "using c"], ["proof (prove)\nusing this:\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. yu3 \\<le> lista \\<Longrightarrow> aa # yu3 \\<le> u", "by (metis le_less less_cons)"], ["proof (state)\nthis:\n  yu3 \\<le> lista \\<Longrightarrow> aa # yu3 \\<le> u\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>u1 s1.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          xc < x \\<longrightarrow>\n                          u1 \\<le> xa \\<and>\n                          s1 < xb \\<and> s1 setinterleaves ((xc, u1), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1 s1.\n                         s setinterleaves ((t, u), A) \\<and>\n                         t1 < t \\<longrightarrow>\n                         u1 \\<le> u \\<and>\n                         s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "have th3pre1more2: \"aa\\<notin>A\\<and>a\\<notin> A\\<and>s setinterleaves ((a # list, aa#lista), A) \\<and>\n      (tl s) setinterleaves ((a#list,lista), A)\\<and>hd s=aa\\<and>ys3<tl s \\<Longrightarrow>aa#ys3<s \""], ["proof (prove)\ngoal (1 subgoal):\n 1. aa \\<notin> A \\<and>\n    a \\<notin> A \\<and>\n    s setinterleaves ((a # list, aa # lista), A) \\<and>\n    tl s setinterleaves ((a # list, lista), A) \\<and>\n    hd s = aa \\<and> ys3 < tl s \\<Longrightarrow>\n    aa # ys3 < s", "using c"], ["proof (prove)\nusing this:\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. aa \\<notin> A \\<and>\n    a \\<notin> A \\<and>\n    s setinterleaves ((a # list, aa # lista), A) \\<and>\n    tl s setinterleaves ((a # list, lista), A) \\<and>\n    hd s = aa \\<and> ys3 < tl s \\<Longrightarrow>\n    aa # ys3 < s", "by (metis less_cons list.exhaust_sel list.sel(2) nil_less)"], ["proof (state)\nthis:\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  s setinterleaves ((a # list, aa # lista), A) \\<and>\n  tl s setinterleaves ((a # list, lista), A) \\<and>\n  hd s = aa \\<and> ys3 < tl s \\<Longrightarrow>\n  aa # ys3 < s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>u1 s1.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          xc < x \\<longrightarrow>\n                          u1 \\<le> xa \\<and>\n                          s1 < xb \\<and> s1 setinterleaves ((xc, u1), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1 s1.\n                         s setinterleaves ((t, u), A) \\<and>\n                         t1 < t \\<longrightarrow>\n                         u1 \\<le> u \\<and>\n                         s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "have  th3pre1more21: \"aa \\<notin> A \\<and>a \\<notin> A \\<and> ys3<tl s\\<and>ys3 setinterleaves ((t1, yu3), A) \\<and> \n      hd s = aa \\<longrightarrow>(aa # ys3) setinterleaves ((t1, aa # yu3), A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. aa \\<notin> A \\<and>\n    a \\<notin> A \\<and>\n    ys3 < tl s \\<and>\n    ys3 setinterleaves ((t1, yu3), A) \\<and> hd s = aa \\<longrightarrow>\n    aa # ys3 setinterleaves ((t1, aa # yu3), A)", "by (metis (mono_tags, lifting) addNonSync doubleReverse rev.simps(2) rev_rev_ident)"], ["proof (state)\nthis:\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  ys3 < tl s \\<and>\n  ys3 setinterleaves ((t1, yu3), A) \\<and> hd s = aa \\<longrightarrow>\n  aa # ys3 setinterleaves ((t1, aa # yu3), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>u1 s1.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          xc < x \\<longrightarrow>\n                          u1 \\<le> xa \\<and>\n                          s1 < xb \\<and> s1 setinterleaves ((xc, u1), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1 s1.\n                         s setinterleaves ((t, u), A) \\<and>\n                         t1 < t \\<longrightarrow>\n                         u1 \\<le> u \\<and>\n                         s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "from th3pre1more1 th3pre1more2 th3pre1more21 th3pre1"], ["proof (chain)\npicking this:\n  yu3 \\<le> lista \\<Longrightarrow> aa # yu3 \\<le> u\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  s setinterleaves ((a # list, aa # lista), A) \\<and>\n  tl s setinterleaves ((a # list, lista), A) \\<and>\n  hd s = aa \\<and> ys3 < tl s \\<Longrightarrow>\n  aa # ys3 < s\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  ys3 < tl s \\<and>\n  ys3 setinterleaves ((t1, yu3), A) \\<and> hd s = aa \\<longrightarrow>\n  aa # ys3 setinterleaves ((t1, aa # yu3), A)\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  s setinterleaves ((a # list, u), A) \\<and>\n  t1 < a # list \\<and>\n  0 < length t1 \\<and>\n  tl s setinterleaves ((a # list, lista), A) \\<longrightarrow>\n  yu3 \\<le> lista \\<and> ys3 < tl s \\<and> ys3 setinterleaves ((t1, yu3), A)", "have th3pre1more3: \"(aa\\<notin>A\\<and>a\\<notin> A\\<and>\n      s setinterleaves ((a # list, u), A)\\<and> t1 < a # list\\<and>length t1>0\\<and>(tl s) setinterleaves \n      ((a#list,lista), A)\\<and>hd s=aa\\<longrightarrow>aa#yu3\\<le>u\\<and>aa#ys3<s\\<and>(aa#ys3) setinterleaves ((t1, aa#yu3), A))\""], ["proof (prove)\nusing this:\n  yu3 \\<le> lista \\<Longrightarrow> aa # yu3 \\<le> u\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  s setinterleaves ((a # list, aa # lista), A) \\<and>\n  tl s setinterleaves ((a # list, lista), A) \\<and>\n  hd s = aa \\<and> ys3 < tl s \\<Longrightarrow>\n  aa # ys3 < s\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  ys3 < tl s \\<and>\n  ys3 setinterleaves ((t1, yu3), A) \\<and> hd s = aa \\<longrightarrow>\n  aa # ys3 setinterleaves ((t1, aa # yu3), A)\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  s setinterleaves ((a # list, u), A) \\<and>\n  t1 < a # list \\<and>\n  0 < length t1 \\<and>\n  tl s setinterleaves ((a # list, lista), A) \\<longrightarrow>\n  yu3 \\<le> lista \\<and> ys3 < tl s \\<and> ys3 setinterleaves ((t1, yu3), A)\n\ngoal (1 subgoal):\n 1. aa \\<notin> A \\<and>\n    a \\<notin> A \\<and>\n    s setinterleaves ((a # list, u), A) \\<and>\n    t1 < a # list \\<and>\n    0 < length t1 \\<and>\n    tl s setinterleaves ((a # list, lista), A) \\<and>\n    hd s = aa \\<longrightarrow>\n    aa # yu3 \\<le> u \\<and>\n    aa # ys3 < s \\<and> aa # ys3 setinterleaves ((t1, aa # yu3), A)", "using c"], ["proof (prove)\nusing this:\n  yu3 \\<le> lista \\<Longrightarrow> aa # yu3 \\<le> u\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  s setinterleaves ((a # list, aa # lista), A) \\<and>\n  tl s setinterleaves ((a # list, lista), A) \\<and>\n  hd s = aa \\<and> ys3 < tl s \\<Longrightarrow>\n  aa # ys3 < s\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  ys3 < tl s \\<and>\n  ys3 setinterleaves ((t1, yu3), A) \\<and> hd s = aa \\<longrightarrow>\n  aa # ys3 setinterleaves ((t1, aa # yu3), A)\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  s setinterleaves ((a # list, u), A) \\<and>\n  t1 < a # list \\<and>\n  0 < length t1 \\<and>\n  tl s setinterleaves ((a # list, lista), A) \\<longrightarrow>\n  yu3 \\<le> lista \\<and> ys3 < tl s \\<and> ys3 setinterleaves ((t1, yu3), A)\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. aa \\<notin> A \\<and>\n    a \\<notin> A \\<and>\n    s setinterleaves ((a # list, u), A) \\<and>\n    t1 < a # list \\<and>\n    0 < length t1 \\<and>\n    tl s setinterleaves ((a # list, lista), A) \\<and>\n    hd s = aa \\<longrightarrow>\n    aa # yu3 \\<le> u \\<and>\n    aa # ys3 < s \\<and> aa # ys3 setinterleaves ((t1, aa # yu3), A)", "by blast"], ["proof (state)\nthis:\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  s setinterleaves ((a # list, u), A) \\<and>\n  t1 < a # list \\<and>\n  0 < length t1 \\<and>\n  tl s setinterleaves ((a # list, lista), A) \\<and>\n  hd s = aa \\<longrightarrow>\n  aa # yu3 \\<le> u \\<and>\n  aa # ys3 < s \\<and> aa # ys3 setinterleaves ((t1, aa # yu3), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>u1 s1.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          xc < x \\<longrightarrow>\n                          u1 \\<le> xa \\<and>\n                          s1 < xb \\<and> s1 setinterleaves ((xc, u1), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1 s1.\n                         s setinterleaves ((t, u), A) \\<and>\n                         t1 < t \\<longrightarrow>\n                         u1 \\<le> u \\<and>\n                         s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "have th3pre1more32: \"aa\\<notin>A\\<and>a\\<notin> A\\<and>s setinterleaves ((a # list, aa#lista), A) \\<and>\n      (tl s) setinterleaves ((list,aa#lista), A)\\<and>hd s=a\\<and>ys30<tl s \\<Longrightarrow>a#ys30<s \""], ["proof (prove)\ngoal (1 subgoal):\n 1. aa \\<notin> A \\<and>\n    a \\<notin> A \\<and>\n    s setinterleaves ((a # list, aa # lista), A) \\<and>\n    tl s setinterleaves ((list, aa # lista), A) \\<and>\n    hd s = a \\<and> ys30 < tl s \\<Longrightarrow>\n    a # ys30 < s", "using c"], ["proof (prove)\nusing this:\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. aa \\<notin> A \\<and>\n    a \\<notin> A \\<and>\n    s setinterleaves ((a # list, aa # lista), A) \\<and>\n    tl s setinterleaves ((list, aa # lista), A) \\<and>\n    hd s = a \\<and> ys30 < tl s \\<Longrightarrow>\n    a # ys30 < s", "by (metis less_cons list.exhaust_sel list.sel(2) nil_less)"], ["proof (state)\nthis:\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  s setinterleaves ((a # list, aa # lista), A) \\<and>\n  tl s setinterleaves ((list, aa # lista), A) \\<and>\n  hd s = a \\<and> ys30 < tl s \\<Longrightarrow>\n  a # ys30 < s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>u1 s1.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          xc < x \\<longrightarrow>\n                          u1 \\<le> xa \\<and>\n                          s1 < xb \\<and> s1 setinterleaves ((xc, u1), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1 s1.\n                         s setinterleaves ((t, u), A) \\<and>\n                         t1 < t \\<longrightarrow>\n                         u1 \\<le> u \\<and>\n                         s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "have  th3pre1more213: \"aa \\<notin> A \\<and>a \\<notin> A \\<and> ys30<tl s\\<and>ys30 setinterleaves ((tl t1, yu30), A) \\<and> \n      hd s = a \\<and>t1<a#list\\<longrightarrow>(a # ys30) setinterleaves ((a#tl t1, yu30), A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. aa \\<notin> A \\<and>\n    a \\<notin> A \\<and>\n    ys30 < tl s \\<and>\n    ys30 setinterleaves ((tl t1, yu30), A) \\<and>\n    hd s = a \\<and> t1 < a # list \\<longrightarrow>\n    a # ys30 setinterleaves ((a # tl t1, yu30), A)", "by (metis (mono_tags, lifting) addNonSync doubleReverse rev.simps(2) rev_rev_ident)"], ["proof (state)\nthis:\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  ys30 < tl s \\<and>\n  ys30 setinterleaves ((tl t1, yu30), A) \\<and>\n  hd s = a \\<and> t1 < a # list \\<longrightarrow>\n  a # ys30 setinterleaves ((a # tl t1, yu30), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>u1 s1.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          xc < x \\<longrightarrow>\n                          u1 \\<le> xa \\<and>\n                          s1 < xb \\<and> s1 setinterleaves ((xc, u1), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1 s1.\n                         s setinterleaves ((t, u), A) \\<and>\n                         t1 < t \\<longrightarrow>\n                         u1 \\<le> u \\<and>\n                         s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "from  th3pre1more32 th3pre12 th3pre1more213"], ["proof (chain)\npicking this:\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  s setinterleaves ((a # list, aa # lista), A) \\<and>\n  tl s setinterleaves ((list, aa # lista), A) \\<and>\n  hd s = a \\<and> ys30 < tl s \\<Longrightarrow>\n  a # ys30 < s\n  aa \\<notin> A \\<and> a \\<notin> A \\<Longrightarrow>\n  tl s setinterleaves ((list, u), A) \\<and>\n  hd s = a \\<and> tl t1 < list \\<longrightarrow>\n  yu30 \\<le> u \\<and>\n  ys30 < tl s \\<and> ys30 setinterleaves ((tl t1, yu30), A)\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  ys30 < tl s \\<and>\n  ys30 setinterleaves ((tl t1, yu30), A) \\<and>\n  hd s = a \\<and> t1 < a # list \\<longrightarrow>\n  a # ys30 setinterleaves ((a # tl t1, yu30), A)", "have th3pre1more33: \"(aa\\<notin>A\\<and>a\\<notin> A\\<and>s setinterleaves \n      ((a # list, u), A)\\<and> t1 < a # list\\<and>length t1>0\\<and>(tl s) setinterleaves ((list,aa#lista), A)\\<and>\n      hd s=a\\<longrightarrow>yu30\\<le>u\\<and>a#ys30<s\\<and>(a#ys30) setinterleaves ((t1, yu30), A))\""], ["proof (prove)\nusing this:\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  s setinterleaves ((a # list, aa # lista), A) \\<and>\n  tl s setinterleaves ((list, aa # lista), A) \\<and>\n  hd s = a \\<and> ys30 < tl s \\<Longrightarrow>\n  a # ys30 < s\n  aa \\<notin> A \\<and> a \\<notin> A \\<Longrightarrow>\n  tl s setinterleaves ((list, u), A) \\<and>\n  hd s = a \\<and> tl t1 < list \\<longrightarrow>\n  yu30 \\<le> u \\<and>\n  ys30 < tl s \\<and> ys30 setinterleaves ((tl t1, yu30), A)\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  ys30 < tl s \\<and>\n  ys30 setinterleaves ((tl t1, yu30), A) \\<and>\n  hd s = a \\<and> t1 < a # list \\<longrightarrow>\n  a # ys30 setinterleaves ((a # tl t1, yu30), A)\n\ngoal (1 subgoal):\n 1. aa \\<notin> A \\<and>\n    a \\<notin> A \\<and>\n    s setinterleaves ((a # list, u), A) \\<and>\n    t1 < a # list \\<and>\n    0 < length t1 \\<and>\n    tl s setinterleaves ((list, aa # lista), A) \\<and>\n    hd s = a \\<longrightarrow>\n    yu30 \\<le> u \\<and>\n    a # ys30 < s \\<and> a # ys30 setinterleaves ((t1, yu30), A)", "by (metis adsmallPrefix c hd_append2 le_list_def length_greater_0_conv list.exhaust_sel \n        list.sel(1) order.strict_implies_order)"], ["proof (state)\nthis:\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  s setinterleaves ((a # list, u), A) \\<and>\n  t1 < a # list \\<and>\n  0 < length t1 \\<and>\n  tl s setinterleaves ((list, aa # lista), A) \\<and>\n  hd s = a \\<longrightarrow>\n  yu30 \\<le> u \\<and>\n  a # ys30 < s \\<and> a # ys30 setinterleaves ((t1, yu30), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>u1 s1.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          xc < x \\<longrightarrow>\n                          u1 \\<le> xa \\<and>\n                          s1 < xb \\<and> s1 setinterleaves ((xc, u1), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1 s1.\n                         s setinterleaves ((t, u), A) \\<and>\n                         t1 < t \\<longrightarrow>\n                         u1 \\<le> u \\<and>\n                         s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "from th3pre1more3 th3pre1more33 b c th3pre"], ["proof (chain)\npicking this:\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  s setinterleaves ((a # list, u), A) \\<and>\n  t1 < a # list \\<and>\n  0 < length t1 \\<and>\n  tl s setinterleaves ((a # list, lista), A) \\<and>\n  hd s = aa \\<longrightarrow>\n  aa # yu3 \\<le> u \\<and>\n  aa # ys3 < s \\<and> aa # ys3 setinterleaves ((t1, aa # yu3), A)\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  s setinterleaves ((a # list, u), A) \\<and>\n  t1 < a # list \\<and>\n  0 < length t1 \\<and>\n  tl s setinterleaves ((list, aa # lista), A) \\<and>\n  hd s = a \\<longrightarrow>\n  yu30 \\<le> u \\<and>\n  a # ys30 < s \\<and> a # ys30 setinterleaves ((t1, yu30), A)\n  t = a # list\n  u = aa # lista\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   s setinterleaves ((a # list, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s setinterleaves ((a # list, lista), A) \\<and>\n                    hd s = aa \\<or>\n                    tl s setinterleaves ((list, u), A) \\<and> hd s = a", "have th3NoEmpty: \"aa\\<notin>A\\<and>a\\<notin> A\\<Longrightarrow>s setinterleaves \n      ((a # list, u), A)\\<and>t1 < a # list\\<and>length t1>0\\<Longrightarrow>\\<exists>u1\\<le>u. \\<exists>s1<s. s1 setinterleaves ((t1, u1), A)\""], ["proof (prove)\nusing this:\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  s setinterleaves ((a # list, u), A) \\<and>\n  t1 < a # list \\<and>\n  0 < length t1 \\<and>\n  tl s setinterleaves ((a # list, lista), A) \\<and>\n  hd s = aa \\<longrightarrow>\n  aa # yu3 \\<le> u \\<and>\n  aa # ys3 < s \\<and> aa # ys3 setinterleaves ((t1, aa # yu3), A)\n  aa \\<notin> A \\<and>\n  a \\<notin> A \\<and>\n  s setinterleaves ((a # list, u), A) \\<and>\n  t1 < a # list \\<and>\n  0 < length t1 \\<and>\n  tl s setinterleaves ((list, aa # lista), A) \\<and>\n  hd s = a \\<longrightarrow>\n  yu30 \\<le> u \\<and>\n  a # ys30 < s \\<and> a # ys30 setinterleaves ((t1, yu30), A)\n  t = a # list\n  u = aa # lista\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   s setinterleaves ((a # list, u), A)\\<rbrakk>\n  \\<Longrightarrow> tl s setinterleaves ((a # list, lista), A) \\<and>\n                    hd s = aa \\<or>\n                    tl s setinterleaves ((list, u), A) \\<and> hd s = a\n\ngoal (1 subgoal):\n 1. \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n     s setinterleaves ((a # list, u), A) \\<and>\n     t1 < a # list \\<and> 0 < length t1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1\\<le>u.\n                         \\<exists>s1<s. s1 setinterleaves ((t1, u1), A)", "apply (simp add: le_list_def less_list_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n     ((\\<exists>u.\n          s = a # u \\<and> u setinterleaves ((list, aa # lista), A)) \\<or>\n      (\\<exists>u.\n          s = aa # u \\<and> u setinterleaves ((a # list, lista), A))) \\<and>\n     (\\<exists>r. t1 @ r = a # list) \\<and>\n     t1 \\<noteq> a # list \\<and> t1 \\<noteq> [];\n     tl s setinterleaves ((a # list, lista), A) \\<and>\n     hd s = aa \\<longrightarrow>\n     (\\<exists>r. yu3 @ r = lista) \\<and>\n     (\\<exists>r. aa # ys3 @ r = s) \\<and>\n     aa # ys3 \\<noteq> s \\<and> aa # ys3 setinterleaves ((t1, aa # yu3), A);\n     tl s setinterleaves ((list, aa # lista), A) \\<and>\n     hd s = a \\<longrightarrow>\n     (\\<exists>r. yu30 @ r = aa # lista) \\<and>\n     (\\<exists>r. a # ys30 @ r = s) \\<and>\n     a # ys30 \\<noteq> s \\<and> a # ys30 setinterleaves ((t1, yu30), A);\n     t = a # list; u = aa # lista;\n     tl s setinterleaves ((a # list, lista), A) \\<and> hd s = aa \\<or>\n     tl s setinterleaves ((list, aa # lista), A) \\<and> hd s = a\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1.\n                         (\\<exists>r. u1 @ r = aa # lista) \\<and>\n                         (\\<exists>s1.\n                             (\\<exists>r. s1 @ r = s) \\<and>\n                             s1 \\<noteq> s \\<and>\n                             s1 setinterleaves ((t1, u1), A))", "by (metis append.simps(2))"], ["proof (state)\nthis:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   s setinterleaves ((a # list, u), A) \\<and>\n   t1 < a # list \\<and> 0 < length t1\\<rbrakk>\n  \\<Longrightarrow> \\<exists>u1\\<le>u.\n                       \\<exists>s1<s. s1 setinterleaves ((t1, u1), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>u1 s1.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          xc < x \\<longrightarrow>\n                          u1 \\<le> xa \\<and>\n                          s1 < xb \\<and> s1 setinterleaves ((xc, u1), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1 s1.\n                         s setinterleaves ((t, u), A) \\<and>\n                         t1 < t \\<longrightarrow>\n                         u1 \\<le> u \\<and>\n                         s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "have th3preEmpty: \"aa\\<notin>A\\<and>a\\<notin> A\\<Longrightarrow>s setinterleaves ((a # list, u), A)\\<and>t1 < a # list\\<and>length t1=0\n      \\<Longrightarrow>[]<s\\<and>[]\\<le>u\\<and> [] setinterleaves ((t1, []), A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n     s setinterleaves ((a # list, u), A) \\<and>\n     t1 < a # list \\<and> length t1 = 0\\<rbrakk>\n    \\<Longrightarrow> [] < s \\<and>\n                      [] \\<le> u \\<and> [] setinterleaves ((t1, []), A)", "apply (simp add: le_list_def less_list_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n     s setinterleaves ((a # list, u), A) \\<and>\n     (\\<exists>r. t1 @ r = a # list) \\<and>\n     t1 \\<noteq> a # list \\<and> t1 = []\\<rbrakk>\n    \\<Longrightarrow> [] \\<noteq> s", "using c"], ["proof (prove)\nusing this:\n  u = aa # lista\n\ngoal (1 subgoal):\n 1. \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n     s setinterleaves ((a # list, u), A) \\<and>\n     (\\<exists>r. t1 @ r = a # list) \\<and>\n     t1 \\<noteq> a # list \\<and> t1 = []\\<rbrakk>\n    \\<Longrightarrow> [] \\<noteq> s", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   s setinterleaves ((a # list, u), A) \\<and>\n   t1 < a # list \\<and> length t1 = 0\\<rbrakk>\n  \\<Longrightarrow> [] < s \\<and>\n                    [] \\<le> u \\<and> [] setinterleaves ((t1, []), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>u1 s1.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          xc < x \\<longrightarrow>\n                          u1 \\<le> xa \\<and>\n                          s1 < xb \\<and> s1 setinterleaves ((xc, u1), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1 s1.\n                         s setinterleaves ((t, u), A) \\<and>\n                         t1 < t \\<longrightarrow>\n                         u1 \\<le> u \\<and>\n                         s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "from th3NoEmpty th3preEmpty"], ["proof (chain)\npicking this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   s setinterleaves ((a # list, u), A) \\<and>\n   t1 < a # list \\<and> 0 < length t1\\<rbrakk>\n  \\<Longrightarrow> \\<exists>u1\\<le>u.\n                       \\<exists>s1<s. s1 setinterleaves ((t1, u1), A)\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   s setinterleaves ((a # list, u), A) \\<and>\n   t1 < a # list \\<and> length t1 = 0\\<rbrakk>\n  \\<Longrightarrow> [] < s \\<and>\n                    [] \\<le> u \\<and> [] setinterleaves ((t1, []), A)", "have th3: \"aa\\<notin>A\\<and>a\\<notin> A\\<Longrightarrow>s setinterleaves ((a # list, u), A)\\<and>t1 < \n      a # list\\<Longrightarrow>\\<exists>u1\\<le>u. \\<exists>s1<s. s1 setinterleaves ((t1, u1), A)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   s setinterleaves ((a # list, u), A) \\<and>\n   t1 < a # list \\<and> 0 < length t1\\<rbrakk>\n  \\<Longrightarrow> \\<exists>u1\\<le>u.\n                       \\<exists>s1<s. s1 setinterleaves ((t1, u1), A)\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   s setinterleaves ((a # list, u), A) \\<and>\n   t1 < a # list \\<and> length t1 = 0\\<rbrakk>\n  \\<Longrightarrow> [] < s \\<and>\n                    [] \\<le> u \\<and> [] setinterleaves ((t1, []), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n     s setinterleaves ((a # list, u), A) \\<and> t1 < a # list\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1\\<le>u.\n                         \\<exists>s1<s. s1 setinterleaves ((t1, u1), A)", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   s setinterleaves ((a # list, u), A) \\<and> t1 < a # list\\<rbrakk>\n  \\<Longrightarrow> \\<exists>u1\\<le>u.\n                       \\<exists>s1<s. s1 setinterleaves ((t1, u1), A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<length t + length u.\n                \\<forall>x xa.\n                   m = length x + length xa \\<longrightarrow>\n                   (\\<forall>xb xc.\n                       \\<exists>u1 s1.\n                          xb setinterleaves ((x, xa), A) \\<and>\n                          xc < x \\<longrightarrow>\n                          u1 \\<le> xa \\<and>\n                          s1 < xb \\<and> s1 setinterleaves ((xc, u1), A));\n     t = a # list; u = aa # lista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u1 s1.\n                         s setinterleaves ((t, u), A) \\<and>\n                         t1 < t \\<longrightarrow>\n                         u1 \\<le> u \\<and>\n                         s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "show?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>u1 s1.\n       s setinterleaves ((t, u), A) \\<and> t1 < t \\<longrightarrow>\n       u1 \\<le> u \\<and> s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "using b c th0 th1 th2 th3"], ["proof (prove)\nusing this:\n  t = a # list\n  u = aa # lista\n  \\<lbrakk>a = aa \\<and> aa \\<in> A;\n   s setinterleaves ((a # list, u), A) \\<and> t1 < a # list\\<rbrakk>\n  \\<Longrightarrow> \\<exists>u1\\<le>u.\n                       \\<exists>s1<s. s1 setinterleaves ((t1, u1), A)\n  \\<lbrakk>a \\<notin> A \\<and> aa \\<in> A;\n   s setinterleaves ((a # list, u), A) \\<and> t1 < a # list\\<rbrakk>\n  \\<Longrightarrow> \\<exists>u1\\<le>u.\n                       \\<exists>s1<s. s1 setinterleaves ((t1, u1), A)\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<in> A;\n   s setinterleaves ((a # list, u), A) \\<and> t1 < a # list\\<rbrakk>\n  \\<Longrightarrow> \\<exists>u1\\<le>u.\n                       \\<exists>s1<s. s1 setinterleaves ((t1, u1), A)\n  \\<lbrakk>aa \\<notin> A \\<and> a \\<notin> A;\n   s setinterleaves ((a # list, u), A) \\<and> t1 < a # list\\<rbrakk>\n  \\<Longrightarrow> \\<exists>u1\\<le>u.\n                       \\<exists>s1<s. s1 setinterleaves ((t1, u1), A)\n\ngoal (1 subgoal):\n 1. \\<exists>u1 s1.\n       s setinterleaves ((t, u), A) \\<and> t1 < t \\<longrightarrow>\n       u1 \\<le> u \\<and> s1 < s \\<and> s1 setinterleaves ((t1, u1), A)", "by auto"], ["proof (state)\nthis:\n  \\<exists>u1 s1.\n     s setinterleaves ((t, u), A) \\<and> t1 < t \\<longrightarrow>\n     u1 \\<le> u \\<and> s1 < s \\<and> s1 setinterleaves ((t1, u1), A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>u1 s1.\n     s setinterleaves ((t, u), A) \\<and> t1 < t \\<longrightarrow>\n     u1 \\<le> u \\<and> s1 < s \\<and> s1 setinterleaves ((t1, u1), A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>u1 s1.\n     s setinterleaves ((t, u), A) \\<and> t1 < t \\<longrightarrow>\n     u1 \\<le> u \\<and> s1 < s \\<and> s1 setinterleaves ((t1, u1), A)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mono_sync2a:\"r\\<in>min_elems(D (P \\<lbrakk>A\\<rbrakk> S))\\<Longrightarrow>\\<exists>t u. r setinterleaves ((t, u),insert tick (ev ` A))\\<and>\n(t \\<in> min_elems(D P) \\<and> u \\<in> T S \\<or> t \\<in> min_elems(D S) \\<and> u \\<in> T P\\<and> u \\<in> (T P-(D P-min_elems(D P))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S)) \\<Longrightarrow>\n    \\<exists>t u.\n       r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n       (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n        t \\<in> min_elems (D S) \\<and>\n        u \\<in> T P \\<and> u \\<in> T P - (D P - min_elems (D P)))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S)) \\<Longrightarrow>\n    \\<exists>t u.\n       r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n       (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n        t \\<in> min_elems (D S) \\<and>\n        u \\<in> T P \\<and> u \\<in> T P - (D P - min_elems (D P)))", "fix r"], ["proof (state)\ngoal (1 subgoal):\n 1. r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S)) \\<Longrightarrow>\n    \\<exists>t u.\n       r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n       (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n        t \\<in> min_elems (D S) \\<and>\n        u \\<in> T P \\<and> u \\<in> T P - (D P - min_elems (D P)))", "assume A: \"r \\<in> min_elems(D (P  \\<lbrakk>A\\<rbrakk> S))\""], ["proof (state)\nthis:\n  r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\n\ngoal (1 subgoal):\n 1. r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S)) \\<Longrightarrow>\n    \\<exists>t u.\n       r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n       (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n        t \\<in> min_elems (D S) \\<and>\n        u \\<in> T P \\<and> u \\<in> T P - (D P - min_elems (D P)))", "thus \"\\<exists>t u. r setinterleaves ((t, u), insert tick (ev ` A))\\<and>(t \\<in> min_elems(D P) \\<and> u \\<in> \n  T S \\<or> t \\<in> min_elems(D S) \\<and> u \\<in> T P\\<and> u \\<in> (T P-(D P-min_elems(D P))))\""], ["proof (prove)\nusing this:\n  r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\n\ngoal (1 subgoal):\n 1. \\<exists>t u.\n       r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n       (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n        t \\<in> min_elems (D S) \\<and>\n        u \\<in> T P \\<and> u \\<in> T P - (D P - min_elems (D P)))", "proof(cases \"\\<forall>t u r1. r1\\<le>r\\<and> r1 setinterleaves((t, u),insert tick (ev ` A))\\<longrightarrow>(t \\<notin> min_elems(D P)) \n  \\<and> (t \\<notin> min_elems(D S))\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<forall>t u r1.\n        r1 \\<le> r \\<and>\n        r1 setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        t \\<notin> min_elems (D P) \\<and>\n        t \\<notin> min_elems (D S)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n                          t \\<in> min_elems (D S) \\<and>\n                          u \\<in> T P \\<and>\n                          u \\<in> T P - (D P - min_elems (D P)))\n 2. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n                          t \\<in> min_elems (D S) \\<and>\n                          u \\<in> T P \\<and>\n                          u \\<in> T P - (D P - min_elems (D P)))", "case True"], ["proof (state)\nthis:\n  \\<forall>t u r1.\n     r1 \\<le> r \\<and>\n     r1 setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     t \\<notin> min_elems (D P) \\<and> t \\<notin> min_elems (D S)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<forall>t u r1.\n        r1 \\<le> r \\<and>\n        r1 setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        t \\<notin> min_elems (D P) \\<and>\n        t \\<notin> min_elems (D S)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n                          t \\<in> min_elems (D S) \\<and>\n                          u \\<in> T P \\<and>\n                          u \\<in> T P - (D P - min_elems (D P)))\n 2. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n                          t \\<in> min_elems (D S) \\<and>\n                          u \\<in> T P \\<and>\n                          u \\<in> T P - (D P - min_elems (D P)))", "from A"], ["proof (chain)\npicking this:\n  r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))", "have AA: \"r\\<in> D (P  \\<lbrakk>A\\<rbrakk> S)\""], ["proof (prove)\nusing this:\n  r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\n\ngoal (1 subgoal):\n 1. r \\<in> D (P \\<lbrakk>A\\<rbrakk> S)", "using elem_min_elems"], ["proof (prove)\nusing this:\n  r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\n  ?c \\<in> min_elems ?B \\<Longrightarrow> ?c \\<in> ?B\n\ngoal (1 subgoal):\n 1. r \\<in> D (P \\<lbrakk>A\\<rbrakk> S)", "by blast"], ["proof (state)\nthis:\n  r \\<in> D (P \\<lbrakk>A\\<rbrakk> S)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<forall>t u r1.\n        r1 \\<le> r \\<and>\n        r1 setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        t \\<notin> min_elems (D P) \\<and>\n        t \\<notin> min_elems (D S)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n                          t \\<in> min_elems (D S) \\<and>\n                          u \\<in> T P \\<and>\n                          u \\<in> T P - (D P - min_elems (D P)))\n 2. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n                          t \\<in> min_elems (D S) \\<and>\n                          u \\<in> T P \\<and>\n                          u \\<in> T P - (D P - min_elems (D P)))", "from AA"], ["proof (chain)\npicking this:\n  r \\<in> D (P \\<lbrakk>A\\<rbrakk> S)", "obtain t1 u1 where A1: \"\\<exists>r1\\<le>r. r1 setinterleaves ((t1, u1), insert tick (ev ` A))\\<and>\n    (t1\\<in>D P\\<or>t1\\<in>D S)\""], ["proof (prove)\nusing this:\n  r \\<in> D (P \\<lbrakk>A\\<rbrakk> S)\n\ngoal (1 subgoal):\n 1. (\\<And>t1 u1.\n        \\<exists>r1\\<le>r.\n           r1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n           (t1 \\<in> D P \\<or> t1 \\<in> D S) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "apply(simp add: D_sync)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>t1 u1.\n                \\<exists>r1\\<le>r.\n                   r1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n                   (t1 \\<in> D P \\<or> t1 \\<in> D S) \\<Longrightarrow>\n                thesis;\n     \\<exists>t u r v.\n        front_tickFree v \\<and>\n        (tickFree r \\<or> v = []) \\<and>\n        r = r @ v \\<and>\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n        (t \\<in> D P \\<and> u \\<in> T S \\<or>\n         t \\<in> D S \\<and> u \\<in> T P)\\<rbrakk>\n    \\<Longrightarrow> thesis", "using le_list_def"], ["proof (prove)\nusing this:\n  (?s \\<le> ?t) = (\\<exists>r. ?s @ r = ?t)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>t1 u1.\n                \\<exists>r1\\<le>r.\n                   r1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n                   (t1 \\<in> D P \\<or> t1 \\<in> D S) \\<Longrightarrow>\n                thesis;\n     \\<exists>t u r v.\n        front_tickFree v \\<and>\n        (tickFree r \\<or> v = []) \\<and>\n        r = r @ v \\<and>\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n        (t \\<in> D P \\<and> u \\<in> T S \\<or>\n         t \\<in> D S \\<and> u \\<in> T P)\\<rbrakk>\n    \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  \\<exists>r1\\<le>r.\n     r1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n     (t1 \\<in> D P \\<or> t1 \\<in> D S)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<forall>t u r1.\n        r1 \\<le> r \\<and>\n        r1 setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        t \\<notin> min_elems (D P) \\<and>\n        t \\<notin> min_elems (D S)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n                          t \\<in> min_elems (D S) \\<and>\n                          u \\<in> T P \\<and>\n                          u \\<in> T P - (D P - min_elems (D P)))\n 2. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n                          t \\<in> min_elems (D S) \\<and>\n                          u \\<in> T P \\<and>\n                          u \\<in> T P - (D P - min_elems (D P)))", "from True A1"], ["proof (chain)\npicking this:\n  \\<forall>t u r1.\n     r1 \\<le> r \\<and>\n     r1 setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     t \\<notin> min_elems (D P) \\<and> t \\<notin> min_elems (D S)\n  \\<exists>r1\\<le>r.\n     r1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n     (t1 \\<in> D P \\<or> t1 \\<in> D S)", "have A2: \"(t1 \\<notin> min_elems(D P)) \\<and> (t1 \\<notin> min_elems(D S))\""], ["proof (prove)\nusing this:\n  \\<forall>t u r1.\n     r1 \\<le> r \\<and>\n     r1 setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     t \\<notin> min_elems (D P) \\<and> t \\<notin> min_elems (D S)\n  \\<exists>r1\\<le>r.\n     r1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n     (t1 \\<in> D P \\<or> t1 \\<in> D S)\n\ngoal (1 subgoal):\n 1. t1 \\<notin> min_elems (D P) \\<and> t1 \\<notin> min_elems (D S)", "by blast"], ["proof (state)\nthis:\n  t1 \\<notin> min_elems (D P) \\<and> t1 \\<notin> min_elems (D S)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<forall>t u r1.\n        r1 \\<le> r \\<and>\n        r1 setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        t \\<notin> min_elems (D P) \\<and>\n        t \\<notin> min_elems (D S)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n                          t \\<in> min_elems (D S) \\<and>\n                          u \\<in> T P \\<and>\n                          u \\<in> T P - (D P - min_elems (D P)))\n 2. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n                          t \\<in> min_elems (D S) \\<and>\n                          u \\<in> T P \\<and>\n                          u \\<in> T P - (D P - min_elems (D P)))", "from A1 A2 min_elems5"], ["proof (chain)\npicking this:\n  \\<exists>r1\\<le>r.\n     r1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n     (t1 \\<in> D P \\<or> t1 \\<in> D S)\n  t1 \\<notin> min_elems (D P) \\<and> t1 \\<notin> min_elems (D S)\n  ?x \\<in> ?A \\<Longrightarrow> \\<exists>s\\<le>?x. s \\<in> min_elems ?A", "obtain tm1 tm2 where tmA: \"(t1\\<in>D P\\<longrightarrow>(tm1\\<le>t1\\<and>tm1\\<in> min_elems(D P)))\\<and>\n    (t1\\<in>D S\\<longrightarrow>(tm2\\<le>t1\\<and>tm2\\<in> min_elems(D S)))\""], ["proof (prove)\nusing this:\n  \\<exists>r1\\<le>r.\n     r1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n     (t1 \\<in> D P \\<or> t1 \\<in> D S)\n  t1 \\<notin> min_elems (D P) \\<and> t1 \\<notin> min_elems (D S)\n  ?x \\<in> ?A \\<Longrightarrow> \\<exists>s\\<le>?x. s \\<in> min_elems ?A\n\ngoal (1 subgoal):\n 1. (\\<And>tm1 tm2.\n        (t1 \\<in> D P \\<longrightarrow>\n         tm1 \\<le> t1 \\<and> tm1 \\<in> min_elems (D P)) \\<and>\n        (t1 \\<in> D S \\<longrightarrow>\n         tm2 \\<le> t1 \\<and> tm2 \\<in> min_elems (D S)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (t1 \\<in> D P \\<longrightarrow>\n   tm1 \\<le> t1 \\<and> tm1 \\<in> min_elems (D P)) \\<and>\n  (t1 \\<in> D S \\<longrightarrow>\n   tm2 \\<le> t1 \\<and> tm2 \\<in> min_elems (D S))\n\ngoal (2 subgoals):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<forall>t u r1.\n        r1 \\<le> r \\<and>\n        r1 setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        t \\<notin> min_elems (D P) \\<and>\n        t \\<notin> min_elems (D S)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n                          t \\<in> min_elems (D S) \\<and>\n                          u \\<in> T P \\<and>\n                          u \\<in> T P - (D P - min_elems (D P)))\n 2. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n                          t \\<in> min_elems (D S) \\<and>\n                          u \\<in> T P \\<and>\n                          u \\<in> T P - (D P - min_elems (D P)))", "from A2 tmA"], ["proof (chain)\npicking this:\n  t1 \\<notin> min_elems (D P) \\<and> t1 \\<notin> min_elems (D S)\n  (t1 \\<in> D P \\<longrightarrow>\n   tm1 \\<le> t1 \\<and> tm1 \\<in> min_elems (D P)) \\<and>\n  (t1 \\<in> D S \\<longrightarrow>\n   tm2 \\<le> t1 \\<and> tm2 \\<in> min_elems (D S))", "have AB1: \"(t1\\<in>D P\\<longrightarrow>tm1<t1)\\<and>(t1\\<in>D S\\<longrightarrow>tm2<t1)\""], ["proof (prove)\nusing this:\n  t1 \\<notin> min_elems (D P) \\<and> t1 \\<notin> min_elems (D S)\n  (t1 \\<in> D P \\<longrightarrow>\n   tm1 \\<le> t1 \\<and> tm1 \\<in> min_elems (D P)) \\<and>\n  (t1 \\<in> D S \\<longrightarrow>\n   tm2 \\<le> t1 \\<and> tm2 \\<in> min_elems (D S))\n\ngoal (1 subgoal):\n 1. (t1 \\<in> D P \\<longrightarrow> tm1 < t1) \\<and>\n    (t1 \\<in> D S \\<longrightarrow> tm2 < t1)", "by (metis A1 order.not_eq_order_implies_strict)"], ["proof (state)\nthis:\n  (t1 \\<in> D P \\<longrightarrow> tm1 < t1) \\<and>\n  (t1 \\<in> D S \\<longrightarrow> tm2 < t1)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<forall>t u r1.\n        r1 \\<le> r \\<and>\n        r1 setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        t \\<notin> min_elems (D P) \\<and>\n        t \\<notin> min_elems (D S)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n                          t \\<in> min_elems (D S) \\<and>\n                          u \\<in> T P \\<and>\n                          u \\<in> T P - (D P - min_elems (D P)))\n 2. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n                          t \\<in> min_elems (D S) \\<and>\n                          u \\<in> T P \\<and>\n                          u \\<in> T P - (D P - min_elems (D P)))", "from A1 AB1"], ["proof (chain)\npicking this:\n  \\<exists>r1\\<le>r.\n     r1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n     (t1 \\<in> D P \\<or> t1 \\<in> D S)\n  (t1 \\<in> D P \\<longrightarrow> tm1 < t1) \\<and>\n  (t1 \\<in> D S \\<longrightarrow> tm2 < t1)", "obtain um1 rm1 um2 rm2 where AB2: \" (t1\\<in>D P\\<longrightarrow>um1\\<le>u1 \\<and> rm1 setinterleaves \n    ((tm1, um1),insert tick (ev ` A)))\\<and>(t1\\<in>D S\\<longrightarrow>um2\\<le>u1 \\<and> rm2 setinterleaves \n    ((tm2, um2), insert tick (ev ` A)))\""], ["proof (prove)\nusing this:\n  \\<exists>r1\\<le>r.\n     r1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n     (t1 \\<in> D P \\<or> t1 \\<in> D S)\n  (t1 \\<in> D P \\<longrightarrow> tm1 < t1) \\<and>\n  (t1 \\<in> D S \\<longrightarrow> tm2 < t1)\n\ngoal (1 subgoal):\n 1. (\\<And>um1 rm1 um2 rm2.\n        (t1 \\<in> D P \\<longrightarrow>\n         um1 \\<le> u1 \\<and>\n         rm1 setinterleaves ((tm1, um1), insert tick (ev ` A))) \\<and>\n        (t1 \\<in> D S \\<longrightarrow>\n         um2 \\<le> u1 \\<and>\n         rm2 setinterleaves ((tm2, um2), insert tick\n    (ev ` A))) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (meson interPrefix)"], ["proof (state)\nthis:\n  (t1 \\<in> D P \\<longrightarrow>\n   um1 \\<le> u1 \\<and>\n   rm1 setinterleaves ((tm1, um1), insert tick (ev ` A))) \\<and>\n  (t1 \\<in> D S \\<longrightarrow>\n   um2 \\<le> u1 \\<and>\n   rm2 setinterleaves ((tm2, um2), insert tick (ev ` A)))\n\ngoal (2 subgoals):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<forall>t u r1.\n        r1 \\<le> r \\<and>\n        r1 setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        t \\<notin> min_elems (D P) \\<and>\n        t \\<notin> min_elems (D S)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n                          t \\<in> min_elems (D S) \\<and>\n                          u \\<in> T P \\<and>\n                          u \\<in> T P - (D P - min_elems (D P)))\n 2. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n                          t \\<in> min_elems (D S) \\<and>\n                          u \\<in> T P \\<and>\n                          u \\<in> T P - (D P - min_elems (D P)))", "from A1 A2 True tmA AB1"], ["proof (chain)\npicking this:\n  \\<exists>r1\\<le>r.\n     r1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n     (t1 \\<in> D P \\<or> t1 \\<in> D S)\n  t1 \\<notin> min_elems (D P) \\<and> t1 \\<notin> min_elems (D S)\n  \\<forall>t u r1.\n     r1 \\<le> r \\<and>\n     r1 setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     t \\<notin> min_elems (D P) \\<and> t \\<notin> min_elems (D S)\n  (t1 \\<in> D P \\<longrightarrow>\n   tm1 \\<le> t1 \\<and> tm1 \\<in> min_elems (D P)) \\<and>\n  (t1 \\<in> D S \\<longrightarrow>\n   tm2 \\<le> t1 \\<and> tm2 \\<in> min_elems (D S))\n  (t1 \\<in> D P \\<longrightarrow> tm1 < t1) \\<and>\n  (t1 \\<in> D S \\<longrightarrow> tm2 < t1)", "have A3: \"(t1\\<in>D P\\<longrightarrow>rm1<r\\<and>rm1\\<in>D(P\\<lbrakk>A\\<rbrakk>S))\\<and>(t1\\<in>D S\\<longrightarrow>rm2<r\\<and>rm2\\<in> D(P\\<lbrakk>A\\<rbrakk>S))\""], ["proof (prove)\nusing this:\n  \\<exists>r1\\<le>r.\n     r1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n     (t1 \\<in> D P \\<or> t1 \\<in> D S)\n  t1 \\<notin> min_elems (D P) \\<and> t1 \\<notin> min_elems (D S)\n  \\<forall>t u r1.\n     r1 \\<le> r \\<and>\n     r1 setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     t \\<notin> min_elems (D P) \\<and> t \\<notin> min_elems (D S)\n  (t1 \\<in> D P \\<longrightarrow>\n   tm1 \\<le> t1 \\<and> tm1 \\<in> min_elems (D P)) \\<and>\n  (t1 \\<in> D S \\<longrightarrow>\n   tm2 \\<le> t1 \\<and> tm2 \\<in> min_elems (D S))\n  (t1 \\<in> D P \\<longrightarrow> tm1 < t1) \\<and>\n  (t1 \\<in> D S \\<longrightarrow> tm2 < t1)\n\ngoal (1 subgoal):\n 1. (t1 \\<in> D P \\<longrightarrow>\n     rm1 < r \\<and> rm1 \\<in> D (P \\<lbrakk>A\\<rbrakk> S)) \\<and>\n    (t1 \\<in> D S \\<longrightarrow>\n     rm2 < r \\<and> rm2 \\<in> D (P \\<lbrakk>A\\<rbrakk> S))", "by (meson dual_order.strict_implies_order interPrefix order_trans)"], ["proof (state)\nthis:\n  (t1 \\<in> D P \\<longrightarrow>\n   rm1 < r \\<and> rm1 \\<in> D (P \\<lbrakk>A\\<rbrakk> S)) \\<and>\n  (t1 \\<in> D S \\<longrightarrow>\n   rm2 < r \\<and> rm2 \\<in> D (P \\<lbrakk>A\\<rbrakk> S))\n\ngoal (2 subgoals):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<forall>t u r1.\n        r1 \\<le> r \\<and>\n        r1 setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        t \\<notin> min_elems (D P) \\<and>\n        t \\<notin> min_elems (D S)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n                          t \\<in> min_elems (D S) \\<and>\n                          u \\<in> T P \\<and>\n                          u \\<in> T P - (D P - min_elems (D P)))\n 2. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n                          t \\<in> min_elems (D S) \\<and>\n                          u \\<in> T P \\<and>\n                          u \\<in> T P - (D P - min_elems (D P)))", "from A3 AA"], ["proof (chain)\npicking this:\n  (t1 \\<in> D P \\<longrightarrow>\n   rm1 < r \\<and> rm1 \\<in> D (P \\<lbrakk>A\\<rbrakk> S)) \\<and>\n  (t1 \\<in> D S \\<longrightarrow>\n   rm2 < r \\<and> rm2 \\<in> D (P \\<lbrakk>A\\<rbrakk> S))\n  r \\<in> D (P \\<lbrakk>A\\<rbrakk> S)", "have ATrue: \"r \\<notin> min_elems(D (P  \\<lbrakk>A\\<rbrakk> S))\""], ["proof (prove)\nusing this:\n  (t1 \\<in> D P \\<longrightarrow>\n   rm1 < r \\<and> rm1 \\<in> D (P \\<lbrakk>A\\<rbrakk> S)) \\<and>\n  (t1 \\<in> D S \\<longrightarrow>\n   rm2 < r \\<and> rm2 \\<in> D (P \\<lbrakk>A\\<rbrakk> S))\n  r \\<in> D (P \\<lbrakk>A\\<rbrakk> S)\n\ngoal (1 subgoal):\n 1. r \\<notin> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))", "using min_elems_def"], ["proof (prove)\nusing this:\n  (t1 \\<in> D P \\<longrightarrow>\n   rm1 < r \\<and> rm1 \\<in> D (P \\<lbrakk>A\\<rbrakk> S)) \\<and>\n  (t1 \\<in> D S \\<longrightarrow>\n   rm2 < r \\<and> rm2 \\<in> D (P \\<lbrakk>A\\<rbrakk> S))\n  r \\<in> D (P \\<lbrakk>A\\<rbrakk> S)\n  min_elems ?X =\n  {s \\<in> ?X. \\<forall>t. t \\<in> ?X \\<longrightarrow> \\<not> t < s}\n\ngoal (1 subgoal):\n 1. r \\<notin> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))", "using A1"], ["proof (prove)\nusing this:\n  (t1 \\<in> D P \\<longrightarrow>\n   rm1 < r \\<and> rm1 \\<in> D (P \\<lbrakk>A\\<rbrakk> S)) \\<and>\n  (t1 \\<in> D S \\<longrightarrow>\n   rm2 < r \\<and> rm2 \\<in> D (P \\<lbrakk>A\\<rbrakk> S))\n  r \\<in> D (P \\<lbrakk>A\\<rbrakk> S)\n  min_elems ?X =\n  {s \\<in> ?X. \\<forall>t. t \\<in> ?X \\<longrightarrow> \\<not> t < s}\n  \\<exists>r1\\<le>r.\n     r1 setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n     (t1 \\<in> D P \\<or> t1 \\<in> D S)\n\ngoal (1 subgoal):\n 1. r \\<notin> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))", "by blast"], ["proof (state)\nthis:\n  r \\<notin> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\n\ngoal (2 subgoals):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<forall>t u r1.\n        r1 \\<le> r \\<and>\n        r1 setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        t \\<notin> min_elems (D P) \\<and>\n        t \\<notin> min_elems (D S)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n                          t \\<in> min_elems (D S) \\<and>\n                          u \\<in> T P \\<and>\n                          u \\<in> T P - (D P - min_elems (D P)))\n 2. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n                          t \\<in> min_elems (D S) \\<and>\n                          u \\<in> T P \\<and>\n                          u \\<in> T P - (D P - min_elems (D P)))", "with A ATrue"], ["proof (chain)\npicking this:\n  r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\n  r \\<notin> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\n  r \\<notin> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))", "show ?thesis"], ["proof (prove)\nusing this:\n  r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\n  r \\<notin> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\n  r \\<notin> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\n\ngoal (1 subgoal):\n 1. \\<exists>t u.\n       r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n       (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n        t \\<in> min_elems (D S) \\<and>\n        u \\<in> T P \\<and> u \\<in> T P - (D P - min_elems (D P)))", "by blast"], ["proof (state)\nthis:\n  \\<exists>t u.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n     (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n      t \\<in> min_elems (D S) \\<and>\n      u \\<in> T P \\<and> u \\<in> T P - (D P - min_elems (D P)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n                          t \\<in> min_elems (D S) \\<and>\n                          u \\<in> T P \\<and>\n                          u \\<in> T P - (D P - min_elems (D P)))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n                          t \\<in> min_elems (D S) \\<and>\n                          u \\<in> T P \\<and>\n                          u \\<in> T P - (D P - min_elems (D P)))", "case False"], ["proof (state)\nthis:\n  \\<not> (\\<forall>t u r1.\n             r1 \\<le> r \\<and>\n             r1 setinterleaves ((t, u), insert tick\n   (ev ` A)) \\<longrightarrow>\n             t \\<notin> min_elems (D P) \\<and> t \\<notin> min_elems (D S))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n                          t \\<in> min_elems (D S) \\<and>\n                          u \\<in> T P \\<and>\n                          u \\<in> T P - (D P - min_elems (D P)))", "from A"], ["proof (chain)\npicking this:\n  r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))", "have dsync: \"r\\<in>D (P \\<lbrakk>A\\<rbrakk> S)\""], ["proof (prove)\nusing this:\n  r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\n\ngoal (1 subgoal):\n 1. r \\<in> D (P \\<lbrakk>A\\<rbrakk> S)", "by (simp add: local.A elem_min_elems)"], ["proof (state)\nthis:\n  r \\<in> D (P \\<lbrakk>A\\<rbrakk> S)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n                          t \\<in> min_elems (D S) \\<and>\n                          u \\<in> T P \\<and>\n                          u \\<in> T P - (D P - min_elems (D P)))", "from dsync"], ["proof (chain)\npicking this:\n  r \\<in> D (P \\<lbrakk>A\\<rbrakk> S)", "obtain r1 t2 u2 where C: \"r1\\<le>r\\<and> r1 setinterleaves ((t2, u2), insert tick (ev ` A))\\<and>\n    ((t2 \\<in> D P\\<and>u2\\<in>T S)\\<or>(t2\\<in>D S\\<and>u2\\<in> T P))\""], ["proof (prove)\nusing this:\n  r \\<in> D (P \\<lbrakk>A\\<rbrakk> S)\n\ngoal (1 subgoal):\n 1. (\\<And>r1 t2 u2.\n        r1 \\<le> r \\<and>\n        r1 setinterleaves ((t2, u2), insert tick (ev ` A)) \\<and>\n        (t2 \\<in> D P \\<and> u2 \\<in> T S \\<or>\n         t2 \\<in> D S \\<and> u2 \\<in> T P) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "apply(simp add: D_sync)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>r1 t2 u2.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t2, u2), insert tick (ev ` A)) \\<and>\n                (t2 \\<in> D P \\<and> u2 \\<in> T S \\<or>\n                 t2 \\<in> D S \\<and> u2 \\<in> T P) \\<Longrightarrow>\n                thesis;\n     \\<exists>t u r v.\n        front_tickFree v \\<and>\n        (tickFree r \\<or> v = []) \\<and>\n        r = r @ v \\<and>\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n        (t \\<in> D P \\<and> u \\<in> T S \\<or>\n         t \\<in> D S \\<and> u \\<in> T P)\\<rbrakk>\n    \\<Longrightarrow> thesis", "using le_list_def"], ["proof (prove)\nusing this:\n  (?s \\<le> ?t) = (\\<exists>r. ?s @ r = ?t)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>r1 t2 u2.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t2, u2), insert tick (ev ` A)) \\<and>\n                (t2 \\<in> D P \\<and> u2 \\<in> T S \\<or>\n                 t2 \\<in> D S \\<and> u2 \\<in> T P) \\<Longrightarrow>\n                thesis;\n     \\<exists>t u r v.\n        front_tickFree v \\<and>\n        (tickFree r \\<or> v = []) \\<and>\n        r = r @ v \\<and>\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n        (t \\<in> D P \\<and> u \\<in> T S \\<or>\n         t \\<in> D S \\<and> u \\<in> T P)\\<rbrakk>\n    \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  r1 \\<le> r \\<and>\n  r1 setinterleaves ((t2, u2), insert tick (ev ` A)) \\<and>\n  (t2 \\<in> D P \\<and> u2 \\<in> T S \\<or> t2 \\<in> D S \\<and> u2 \\<in> T P)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n                          t \\<in> min_elems (D S) \\<and>\n                          u \\<in> T P \\<and>\n                          u \\<in> T P - (D P - min_elems (D P)))", "from C"], ["proof (chain)\npicking this:\n  r1 \\<le> r \\<and>\n  r1 setinterleaves ((t2, u2), insert tick (ev ` A)) \\<and>\n  (t2 \\<in> D P \\<and> u2 \\<in> T S \\<or> t2 \\<in> D S \\<and> u2 \\<in> T P)", "have r1D: \"r1\\<in>D (P \\<lbrakk>A\\<rbrakk> S)\""], ["proof (prove)\nusing this:\n  r1 \\<le> r \\<and>\n  r1 setinterleaves ((t2, u2), insert tick (ev ` A)) \\<and>\n  (t2 \\<in> D P \\<and> u2 \\<in> T S \\<or> t2 \\<in> D S \\<and> u2 \\<in> T P)\n\ngoal (1 subgoal):\n 1. r1 \\<in> D (P \\<lbrakk>A\\<rbrakk> S)", "apply(simp add: D_sync)"], ["proof (prove)\ngoal (1 subgoal):\n 1. r1 \\<le> r \\<and>\n    r1 setinterleaves ((t2, u2), insert tick (ev ` A)) \\<and>\n    (t2 \\<in> D P \\<and> u2 \\<in> T S \\<or>\n     t2 \\<in> D S \\<and> u2 \\<in> T P) \\<Longrightarrow>\n    \\<exists>t u r v.\n       front_tickFree v \\<and>\n       (tickFree r \\<or> v = []) \\<and>\n       r1 = r @ v \\<and>\n       r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n       (t \\<in> D P \\<and> u \\<in> T S \\<or> t \\<in> D S \\<and> u \\<in> T P)", "using front_tickFree_Nil"], ["proof (prove)\nusing this:\n  front_tickFree []\n\ngoal (1 subgoal):\n 1. r1 \\<le> r \\<and>\n    r1 setinterleaves ((t2, u2), insert tick (ev ` A)) \\<and>\n    (t2 \\<in> D P \\<and> u2 \\<in> T S \\<or>\n     t2 \\<in> D S \\<and> u2 \\<in> T P) \\<Longrightarrow>\n    \\<exists>t u r v.\n       front_tickFree v \\<and>\n       (tickFree r \\<or> v = []) \\<and>\n       r1 = r @ v \\<and>\n       r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n       (t \\<in> D P \\<and> u \\<in> T S \\<or> t \\<in> D S \\<and> u \\<in> T P)", "by blast"], ["proof (state)\nthis:\n  r1 \\<in> D (P \\<lbrakk>A\\<rbrakk> S)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n                          t \\<in> min_elems (D S) \\<and>\n                          u \\<in> T P \\<and>\n                          u \\<in> T P - (D P - min_elems (D P)))", "from A C r1D"], ["proof (chain)\npicking this:\n  r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\n  r1 \\<le> r \\<and>\n  r1 setinterleaves ((t2, u2), insert tick (ev ` A)) \\<and>\n  (t2 \\<in> D P \\<and> u2 \\<in> T S \\<or> t2 \\<in> D S \\<and> u2 \\<in> T P)\n  r1 \\<in> D (P \\<lbrakk>A\\<rbrakk> S)", "have eq: \"r1=r\""], ["proof (prove)\nusing this:\n  r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\n  r1 \\<le> r \\<and>\n  r1 setinterleaves ((t2, u2), insert tick (ev ` A)) \\<and>\n  (t2 \\<in> D P \\<and> u2 \\<in> T S \\<or> t2 \\<in> D S \\<and> u2 \\<in> T P)\n  r1 \\<in> D (P \\<lbrakk>A\\<rbrakk> S)\n\ngoal (1 subgoal):\n 1. r1 = r", "apply(simp add: min_elems_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> D (P \\<lbrakk>A\\<rbrakk> S) \\<and>\n             (\\<forall>t.\n                 t \\<in> D (P \\<lbrakk>A\\<rbrakk> S) \\<longrightarrow>\n                 \\<not> t < r);\n     r1 \\<le> r \\<and>\n     r1 setinterleaves ((t2, u2), insert tick (ev ` A)) \\<and>\n     (t2 \\<in> D P \\<and> u2 \\<in> T S \\<or>\n      t2 \\<in> D S \\<and> u2 \\<in> T P);\n     r1 \\<in> D (P \\<lbrakk>A\\<rbrakk> S)\\<rbrakk>\n    \\<Longrightarrow> r1 = r", "using le_neq_trans"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<le> ?b; ?a \\<noteq> ?b\\<rbrakk> \\<Longrightarrow> ?a < ?b\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> D (P \\<lbrakk>A\\<rbrakk> S) \\<and>\n             (\\<forall>t.\n                 t \\<in> D (P \\<lbrakk>A\\<rbrakk> S) \\<longrightarrow>\n                 \\<not> t < r);\n     r1 \\<le> r \\<and>\n     r1 setinterleaves ((t2, u2), insert tick (ev ` A)) \\<and>\n     (t2 \\<in> D P \\<and> u2 \\<in> T S \\<or>\n      t2 \\<in> D S \\<and> u2 \\<in> T P);\n     r1 \\<in> D (P \\<lbrakk>A\\<rbrakk> S)\\<rbrakk>\n    \\<Longrightarrow> r1 = r", "by blast"], ["proof (state)\nthis:\n  r1 = r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n                          t \\<in> min_elems (D S) \\<and>\n                          u \\<in> T P \\<and>\n                          u \\<in> T P - (D P - min_elems (D P)))", "from A False"], ["proof (chain)\npicking this:\n  r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\n  \\<not> (\\<forall>t u r1.\n             r1 \\<le> r \\<and>\n             r1 setinterleaves ((t, u), insert tick\n   (ev ` A)) \\<longrightarrow>\n             t \\<notin> min_elems (D P) \\<and> t \\<notin> min_elems (D S))", "have minAa: \"(t2 \\<in> D P\\<and>u2\\<in>T S)\\<longrightarrow>(t2 \\<in> min_elems(D P))\""], ["proof (prove)\nusing this:\n  r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\n  \\<not> (\\<forall>t u r1.\n             r1 \\<le> r \\<and>\n             r1 setinterleaves ((t, u), insert tick\n   (ev ` A)) \\<longrightarrow>\n             t \\<notin> min_elems (D P) \\<and> t \\<notin> min_elems (D S))\n\ngoal (1 subgoal):\n 1. t2 \\<in> D P \\<and> u2 \\<in> T S \\<longrightarrow>\n    t2 \\<in> min_elems (D P)", "proof(cases \"t2 \\<in> D P \\<and>u2\\<in>T S\\<and> t2 \\<notin> min_elems(D P)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     t2 \\<in> D P \\<and>\n     u2 \\<in> T S \\<and> t2 \\<notin> min_elems (D P)\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D P \\<and> u2 \\<in> T S \\<longrightarrow>\n                      t2 \\<in> min_elems (D P)\n 2. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     \\<not> (t2 \\<in> D P \\<and>\n             u2 \\<in> T S \\<and> t2 \\<notin> min_elems (D P))\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D P \\<and> u2 \\<in> T S \\<longrightarrow>\n                      t2 \\<in> min_elems (D P)", "case True"], ["proof (state)\nthis:\n  t2 \\<in> D P \\<and> u2 \\<in> T S \\<and> t2 \\<notin> min_elems (D P)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     t2 \\<in> D P \\<and>\n     u2 \\<in> T S \\<and> t2 \\<notin> min_elems (D P)\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D P \\<and> u2 \\<in> T S \\<longrightarrow>\n                      t2 \\<in> min_elems (D P)\n 2. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     \\<not> (t2 \\<in> D P \\<and>\n             u2 \\<in> T S \\<and> t2 \\<notin> min_elems (D P))\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D P \\<and> u2 \\<in> T S \\<longrightarrow>\n                      t2 \\<in> min_elems (D P)", "from True"], ["proof (chain)\npicking this:\n  t2 \\<in> D P \\<and> u2 \\<in> T S \\<and> t2 \\<notin> min_elems (D P)", "obtain t3 where inA: \"t3<t2\\<and>t3\\<in>min_elems(D P)\""], ["proof (prove)\nusing this:\n  t2 \\<in> D P \\<and> u2 \\<in> T S \\<and> t2 \\<notin> min_elems (D P)\n\ngoal (1 subgoal):\n 1. (\\<And>t3.\n        t3 < t2 \\<and> t3 \\<in> min_elems (D P) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis le_imp_less_or_eq min_elems5)"], ["proof (state)\nthis:\n  t3 < t2 \\<and> t3 \\<in> min_elems (D P)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     t2 \\<in> D P \\<and>\n     u2 \\<in> T S \\<and> t2 \\<notin> min_elems (D P)\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D P \\<and> u2 \\<in> T S \\<longrightarrow>\n                      t2 \\<in> min_elems (D P)\n 2. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     \\<not> (t2 \\<in> D P \\<and>\n             u2 \\<in> T S \\<and> t2 \\<notin> min_elems (D P))\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D P \\<and> u2 \\<in> T S \\<longrightarrow>\n                      t2 \\<in> min_elems (D P)", "from inA"], ["proof (chain)\npicking this:\n  t3 < t2 \\<and> t3 \\<in> min_elems (D P)", "obtain r3 u3 where inA1:\"u3\\<le>u2\\<and>r3 setinterleaves((t3,u3),insert tick(ev ` A))\\<and>r3<r\""], ["proof (prove)\nusing this:\n  t3 < t2 \\<and> t3 \\<in> min_elems (D P)\n\ngoal (1 subgoal):\n 1. (\\<And>u3 r3.\n        u3 \\<le> u2 \\<and>\n        r3 setinterleaves ((t3, u3), insert tick (ev ` A)) \\<and>\n        r3 < r \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using C eq interPrefix"], ["proof (prove)\nusing this:\n  t3 < t2 \\<and> t3 \\<in> min_elems (D P)\n  r1 \\<le> r \\<and>\n  r1 setinterleaves ((t2, u2), insert tick (ev ` A)) \\<and>\n  (t2 \\<in> D P \\<and> u2 \\<in> T S \\<or> t2 \\<in> D S \\<and> u2 \\<in> T P)\n  r1 = r\n  \\<exists>u1 s1.\n     ?s setinterleaves ((?t, ?u), ?A) \\<and> ?t1.0 < ?t \\<longrightarrow>\n     u1 \\<le> ?u \\<and> s1 < ?s \\<and> s1 setinterleaves ((?t1.0, u1), ?A)\n\ngoal (1 subgoal):\n 1. (\\<And>u3 r3.\n        u3 \\<le> u2 \\<and>\n        r3 setinterleaves ((t3, u3), insert tick (ev ` A)) \\<and>\n        r3 < r \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  u3 \\<le> u2 \\<and>\n  r3 setinterleaves ((t3, u3), insert tick (ev ` A)) \\<and> r3 < r\n\ngoal (2 subgoals):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     t2 \\<in> D P \\<and>\n     u2 \\<in> T S \\<and> t2 \\<notin> min_elems (D P)\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D P \\<and> u2 \\<in> T S \\<longrightarrow>\n                      t2 \\<in> min_elems (D P)\n 2. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     \\<not> (t2 \\<in> D P \\<and>\n             u2 \\<in> T S \\<and> t2 \\<notin> min_elems (D P))\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D P \\<and> u2 \\<in> T S \\<longrightarrow>\n                      t2 \\<in> min_elems (D P)", "from inA1"], ["proof (chain)\npicking this:\n  u3 \\<le> u2 \\<and>\n  r3 setinterleaves ((t3, u3), insert tick (ev ` A)) \\<and> r3 < r", "have inA3: \"u3\\<in>T S\""], ["proof (prove)\nusing this:\n  u3 \\<le> u2 \\<and>\n  r3 setinterleaves ((t3, u3), insert tick (ev ` A)) \\<and> r3 < r\n\ngoal (1 subgoal):\n 1. u3 \\<in> T S", "using True is_processT3_ST_pref"], ["proof (prove)\nusing this:\n  u3 \\<le> u2 \\<and>\n  r3 setinterleaves ((t3, u3), insert tick (ev ` A)) \\<and> r3 < r\n  t2 \\<in> D P \\<and> u2 \\<in> T S \\<and> t2 \\<notin> min_elems (D P)\n  \\<lbrakk>?t \\<in> T ?P; ?s \\<le> ?t\\<rbrakk>\n  \\<Longrightarrow> ?s \\<in> T ?P\n\ngoal (1 subgoal):\n 1. u3 \\<in> T S", "by blast"], ["proof (state)\nthis:\n  u3 \\<in> T S\n\ngoal (2 subgoals):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     t2 \\<in> D P \\<and>\n     u2 \\<in> T S \\<and> t2 \\<notin> min_elems (D P)\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D P \\<and> u2 \\<in> T S \\<longrightarrow>\n                      t2 \\<in> min_elems (D P)\n 2. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     \\<not> (t2 \\<in> D P \\<and>\n             u2 \\<in> T S \\<and> t2 \\<notin> min_elems (D P))\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D P \\<and> u2 \\<in> T S \\<longrightarrow>\n                      t2 \\<in> min_elems (D P)", "from inA1"], ["proof (chain)\npicking this:\n  u3 \\<le> u2 \\<and>\n  r3 setinterleaves ((t3, u3), insert tick (ev ` A)) \\<and> r3 < r", "have inA2: \"r3\\<in>D (P \\<lbrakk>A\\<rbrakk> S)\""], ["proof (prove)\nusing this:\n  u3 \\<le> u2 \\<and>\n  r3 setinterleaves ((t3, u3), insert tick (ev ` A)) \\<and> r3 < r\n\ngoal (1 subgoal):\n 1. r3 \\<in> D (P \\<lbrakk>A\\<rbrakk> S)", "apply (simp add: D_sync)"], ["proof (prove)\ngoal (1 subgoal):\n 1. u3 \\<le> u2 \\<and>\n    r3 setinterleaves ((t3, u3), insert tick (ev ` A)) \\<and>\n    r3 < r \\<Longrightarrow>\n    \\<exists>t u r v.\n       front_tickFree v \\<and>\n       (tickFree r \\<or> v = []) \\<and>\n       r3 = r @ v \\<and>\n       r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n       (t \\<in> D P \\<and> u \\<in> T S \\<or> t \\<in> D S \\<and> u \\<in> T P)", "using elem_min_elems front_tickFree_Nil inA inA3"], ["proof (prove)\nusing this:\n  ?c \\<in> min_elems ?B \\<Longrightarrow> ?c \\<in> ?B\n  front_tickFree []\n  t3 < t2 \\<and> t3 \\<in> min_elems (D P)\n  u3 \\<in> T S\n\ngoal (1 subgoal):\n 1. u3 \\<le> u2 \\<and>\n    r3 setinterleaves ((t3, u3), insert tick (ev ` A)) \\<and>\n    r3 < r \\<Longrightarrow>\n    \\<exists>t u r v.\n       front_tickFree v \\<and>\n       (tickFree r \\<or> v = []) \\<and>\n       r3 = r @ v \\<and>\n       r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n       (t \\<in> D P \\<and> u \\<in> T S \\<or> t \\<in> D S \\<and> u \\<in> T P)", "by blast"], ["proof (state)\nthis:\n  r3 \\<in> D (P \\<lbrakk>A\\<rbrakk> S)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     t2 \\<in> D P \\<and>\n     u2 \\<in> T S \\<and> t2 \\<notin> min_elems (D P)\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D P \\<and> u2 \\<in> T S \\<longrightarrow>\n                      t2 \\<in> min_elems (D P)\n 2. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     \\<not> (t2 \\<in> D P \\<and>\n             u2 \\<in> T S \\<and> t2 \\<notin> min_elems (D P))\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D P \\<and> u2 \\<in> T S \\<longrightarrow>\n                      t2 \\<in> min_elems (D P)", "with A eq inA1"], ["proof (chain)\npicking this:\n  r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\n  r1 = r\n  u3 \\<le> u2 \\<and>\n  r3 setinterleaves ((t3, u3), insert tick (ev ` A)) \\<and> r3 < r\n  r3 \\<in> D (P \\<lbrakk>A\\<rbrakk> S)", "show ?thesis"], ["proof (prove)\nusing this:\n  r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\n  r1 = r\n  u3 \\<le> u2 \\<and>\n  r3 setinterleaves ((t3, u3), insert tick (ev ` A)) \\<and> r3 < r\n  r3 \\<in> D (P \\<lbrakk>A\\<rbrakk> S)\n\ngoal (1 subgoal):\n 1. t2 \\<in> D P \\<and> u2 \\<in> T S \\<longrightarrow>\n    t2 \\<in> min_elems (D P)", "by(simp add: min_elems_def)"], ["proof (state)\nthis:\n  t2 \\<in> D P \\<and> u2 \\<in> T S \\<longrightarrow>\n  t2 \\<in> min_elems (D P)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     \\<not> (t2 \\<in> D P \\<and>\n             u2 \\<in> T S \\<and> t2 \\<notin> min_elems (D P))\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D P \\<and> u2 \\<in> T S \\<longrightarrow>\n                      t2 \\<in> min_elems (D P)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     \\<not> (t2 \\<in> D P \\<and>\n             u2 \\<in> T S \\<and> t2 \\<notin> min_elems (D P))\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D P \\<and> u2 \\<in> T S \\<longrightarrow>\n                      t2 \\<in> min_elems (D P)", "case False"], ["proof (state)\nthis:\n  \\<not> (t2 \\<in> D P \\<and>\n          u2 \\<in> T S \\<and> t2 \\<notin> min_elems (D P))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     \\<not> (t2 \\<in> D P \\<and>\n             u2 \\<in> T S \\<and> t2 \\<notin> min_elems (D P))\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D P \\<and> u2 \\<in> T S \\<longrightarrow>\n                      t2 \\<in> min_elems (D P)", "then"], ["proof (chain)\npicking this:\n  \\<not> (t2 \\<in> D P \\<and>\n          u2 \\<in> T S \\<and> t2 \\<notin> min_elems (D P))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> (t2 \\<in> D P \\<and>\n          u2 \\<in> T S \\<and> t2 \\<notin> min_elems (D P))\n\ngoal (1 subgoal):\n 1. t2 \\<in> D P \\<and> u2 \\<in> T S \\<longrightarrow>\n    t2 \\<in> min_elems (D P)", "by blast"], ["proof (state)\nthis:\n  t2 \\<in> D P \\<and> u2 \\<in> T S \\<longrightarrow>\n  t2 \\<in> min_elems (D P)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  t2 \\<in> D P \\<and> u2 \\<in> T S \\<longrightarrow>\n  t2 \\<in> min_elems (D P)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n                          t \\<in> min_elems (D S) \\<and>\n                          u \\<in> T P \\<and>\n                          u \\<in> T P - (D P - min_elems (D P)))", "from A False"], ["proof (chain)\npicking this:\n  r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\n  \\<not> (\\<forall>t u r1.\n             r1 \\<le> r \\<and>\n             r1 setinterleaves ((t, u), insert tick\n   (ev ` A)) \\<longrightarrow>\n             t \\<notin> min_elems (D P) \\<and> t \\<notin> min_elems (D S))", "have minAb1: \"(t2 \\<in> D S\\<and>u2\\<in> T P)\\<longrightarrow>(t2 \\<in> min_elems(D S))\""], ["proof (prove)\nusing this:\n  r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\n  \\<not> (\\<forall>t u r1.\n             r1 \\<le> r \\<and>\n             r1 setinterleaves ((t, u), insert tick\n   (ev ` A)) \\<longrightarrow>\n             t \\<notin> min_elems (D P) \\<and> t \\<notin> min_elems (D S))\n\ngoal (1 subgoal):\n 1. t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n    t2 \\<in> min_elems (D S)", "proof(cases \"t2 \\<in> D S \\<and>u2\\<in>T P\\<and> t2 \\<notin> min_elems(D S)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     t2 \\<in> D S \\<and>\n     u2 \\<in> T P \\<and> t2 \\<notin> min_elems (D S)\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n                      t2 \\<in> min_elems (D S)\n 2. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     \\<not> (t2 \\<in> D S \\<and>\n             u2 \\<in> T P \\<and> t2 \\<notin> min_elems (D S))\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n                      t2 \\<in> min_elems (D S)", "case True"], ["proof (state)\nthis:\n  t2 \\<in> D S \\<and> u2 \\<in> T P \\<and> t2 \\<notin> min_elems (D S)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     t2 \\<in> D S \\<and>\n     u2 \\<in> T P \\<and> t2 \\<notin> min_elems (D S)\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n                      t2 \\<in> min_elems (D S)\n 2. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     \\<not> (t2 \\<in> D S \\<and>\n             u2 \\<in> T P \\<and> t2 \\<notin> min_elems (D S))\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n                      t2 \\<in> min_elems (D S)", "from True"], ["proof (chain)\npicking this:\n  t2 \\<in> D S \\<and> u2 \\<in> T P \\<and> t2 \\<notin> min_elems (D S)", "obtain t3 r3 u3 where inA: \"t3<t2\\<and>t3\\<in>min_elems(D S)\" \n      and inA1: \"u3\\<le>u2\\<and>r3 setinterleaves ((t3, u3), insert tick (ev ` A))\\<and>r3<r\""], ["proof (prove)\nusing this:\n  t2 \\<in> D S \\<and> u2 \\<in> T P \\<and> t2 \\<notin> min_elems (D S)\n\ngoal (1 subgoal):\n 1. (\\<And>t3 u3 r3.\n        \\<lbrakk>t3 < t2 \\<and> t3 \\<in> min_elems (D S);\n         u3 \\<le> u2 \\<and>\n         r3 setinterleaves ((t3, u3), insert tick (ev ` A)) \\<and>\n         r3 < r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis C eq interPrefix le_less min_elems5)"], ["proof (state)\nthis:\n  t3 < t2 \\<and> t3 \\<in> min_elems (D S)\n  u3 \\<le> u2 \\<and>\n  r3 setinterleaves ((t3, u3), insert tick (ev ` A)) \\<and> r3 < r\n\ngoal (2 subgoals):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     t2 \\<in> D S \\<and>\n     u2 \\<in> T P \\<and> t2 \\<notin> min_elems (D S)\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n                      t2 \\<in> min_elems (D S)\n 2. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     \\<not> (t2 \\<in> D S \\<and>\n             u2 \\<in> T P \\<and> t2 \\<notin> min_elems (D S))\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n                      t2 \\<in> min_elems (D S)", "from inA1"], ["proof (chain)\npicking this:\n  u3 \\<le> u2 \\<and>\n  r3 setinterleaves ((t3, u3), insert tick (ev ` A)) \\<and> r3 < r", "have inA3: \"u3\\<in>T P\""], ["proof (prove)\nusing this:\n  u3 \\<le> u2 \\<and>\n  r3 setinterleaves ((t3, u3), insert tick (ev ` A)) \\<and> r3 < r\n\ngoal (1 subgoal):\n 1. u3 \\<in> T P", "using True is_processT3_ST_pref"], ["proof (prove)\nusing this:\n  u3 \\<le> u2 \\<and>\n  r3 setinterleaves ((t3, u3), insert tick (ev ` A)) \\<and> r3 < r\n  t2 \\<in> D S \\<and> u2 \\<in> T P \\<and> t2 \\<notin> min_elems (D S)\n  \\<lbrakk>?t \\<in> T ?P; ?s \\<le> ?t\\<rbrakk>\n  \\<Longrightarrow> ?s \\<in> T ?P\n\ngoal (1 subgoal):\n 1. u3 \\<in> T P", "by blast"], ["proof (state)\nthis:\n  u3 \\<in> T P\n\ngoal (2 subgoals):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     t2 \\<in> D S \\<and>\n     u2 \\<in> T P \\<and> t2 \\<notin> min_elems (D S)\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n                      t2 \\<in> min_elems (D S)\n 2. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     \\<not> (t2 \\<in> D S \\<and>\n             u2 \\<in> T P \\<and> t2 \\<notin> min_elems (D S))\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n                      t2 \\<in> min_elems (D S)", "from inA1"], ["proof (chain)\npicking this:\n  u3 \\<le> u2 \\<and>\n  r3 setinterleaves ((t3, u3), insert tick (ev ` A)) \\<and> r3 < r", "have inA2: \"r3\\<in>D (P \\<lbrakk>A\\<rbrakk> S)\""], ["proof (prove)\nusing this:\n  u3 \\<le> u2 \\<and>\n  r3 setinterleaves ((t3, u3), insert tick (ev ` A)) \\<and> r3 < r\n\ngoal (1 subgoal):\n 1. r3 \\<in> D (P \\<lbrakk>A\\<rbrakk> S)", "apply (simp add: D_sync)"], ["proof (prove)\ngoal (1 subgoal):\n 1. u3 \\<le> u2 \\<and>\n    r3 setinterleaves ((t3, u3), insert tick (ev ` A)) \\<and>\n    r3 < r \\<Longrightarrow>\n    \\<exists>t u r v.\n       front_tickFree v \\<and>\n       (tickFree r \\<or> v = []) \\<and>\n       r3 = r @ v \\<and>\n       r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n       (t \\<in> D P \\<and> u \\<in> T S \\<or> t \\<in> D S \\<and> u \\<in> T P)", "using elem_min_elems front_tickFree_Nil inA inA3"], ["proof (prove)\nusing this:\n  ?c \\<in> min_elems ?B \\<Longrightarrow> ?c \\<in> ?B\n  front_tickFree []\n  t3 < t2 \\<and> t3 \\<in> min_elems (D S)\n  u3 \\<in> T P\n\ngoal (1 subgoal):\n 1. u3 \\<le> u2 \\<and>\n    r3 setinterleaves ((t3, u3), insert tick (ev ` A)) \\<and>\n    r3 < r \\<Longrightarrow>\n    \\<exists>t u r v.\n       front_tickFree v \\<and>\n       (tickFree r \\<or> v = []) \\<and>\n       r3 = r @ v \\<and>\n       r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n       (t \\<in> D P \\<and> u \\<in> T S \\<or> t \\<in> D S \\<and> u \\<in> T P)", "by blast"], ["proof (state)\nthis:\n  r3 \\<in> D (P \\<lbrakk>A\\<rbrakk> S)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     t2 \\<in> D S \\<and>\n     u2 \\<in> T P \\<and> t2 \\<notin> min_elems (D S)\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n                      t2 \\<in> min_elems (D S)\n 2. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     \\<not> (t2 \\<in> D S \\<and>\n             u2 \\<in> T P \\<and> t2 \\<notin> min_elems (D S))\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n                      t2 \\<in> min_elems (D S)", "with A eq inA1"], ["proof (chain)\npicking this:\n  r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\n  r1 = r\n  u3 \\<le> u2 \\<and>\n  r3 setinterleaves ((t3, u3), insert tick (ev ` A)) \\<and> r3 < r\n  r3 \\<in> D (P \\<lbrakk>A\\<rbrakk> S)", "show ?thesis"], ["proof (prove)\nusing this:\n  r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\n  r1 = r\n  u3 \\<le> u2 \\<and>\n  r3 setinterleaves ((t3, u3), insert tick (ev ` A)) \\<and> r3 < r\n  r3 \\<in> D (P \\<lbrakk>A\\<rbrakk> S)\n\ngoal (1 subgoal):\n 1. t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n    t2 \\<in> min_elems (D S)", "by(simp add: min_elems_def)"], ["proof (state)\nthis:\n  t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n  t2 \\<in> min_elems (D S)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     \\<not> (t2 \\<in> D S \\<and>\n             u2 \\<in> T P \\<and> t2 \\<notin> min_elems (D S))\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n                      t2 \\<in> min_elems (D S)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     \\<not> (t2 \\<in> D S \\<and>\n             u2 \\<in> T P \\<and> t2 \\<notin> min_elems (D S))\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n                      t2 \\<in> min_elems (D S)", "case False"], ["proof (state)\nthis:\n  \\<not> (t2 \\<in> D S \\<and>\n          u2 \\<in> T P \\<and> t2 \\<notin> min_elems (D S))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     \\<not> (t2 \\<in> D S \\<and>\n             u2 \\<in> T P \\<and> t2 \\<notin> min_elems (D S))\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n                      t2 \\<in> min_elems (D S)", "then"], ["proof (chain)\npicking this:\n  \\<not> (t2 \\<in> D S \\<and>\n          u2 \\<in> T P \\<and> t2 \\<notin> min_elems (D S))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> (t2 \\<in> D S \\<and>\n          u2 \\<in> T P \\<and> t2 \\<notin> min_elems (D S))\n\ngoal (1 subgoal):\n 1. t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n    t2 \\<in> min_elems (D S)", "by blast"], ["proof (state)\nthis:\n  t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n  t2 \\<in> min_elems (D S)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n  t2 \\<in> min_elems (D S)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n                          t \\<in> min_elems (D S) \\<and>\n                          u \\<in> T P \\<and>\n                          u \\<in> T P - (D P - min_elems (D P)))", "from A False"], ["proof (chain)\npicking this:\n  r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\n  \\<not> (\\<forall>t u r1.\n             r1 \\<le> r \\<and>\n             r1 setinterleaves ((t, u), insert tick\n   (ev ` A)) \\<longrightarrow>\n             t \\<notin> min_elems (D P) \\<and> t \\<notin> min_elems (D S))", "have minAb2: \"(t2 \\<in> D S\\<and>u2\\<in> T P)\\<longrightarrow>(u2 \\<in> (T P-(D P-min_elems(D P))))\""], ["proof (prove)\nusing this:\n  r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\n  \\<not> (\\<forall>t u r1.\n             r1 \\<le> r \\<and>\n             r1 setinterleaves ((t, u), insert tick\n   (ev ` A)) \\<longrightarrow>\n             t \\<notin> min_elems (D P) \\<and> t \\<notin> min_elems (D S))\n\ngoal (1 subgoal):\n 1. t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n    u2 \\<in> T P - (D P - min_elems (D P))", "proof(cases \"t2 \\<in> D S \\<and>u2\\<in>T P\\<and> u2 \\<in>(D P-min_elems(D P))\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     t2 \\<in> D S \\<and>\n     u2 \\<in> T P \\<and> u2 \\<in> D P - min_elems (D P)\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n                      u2 \\<in> T P - (D P - min_elems (D P))\n 2. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     \\<not> (t2 \\<in> D S \\<and>\n             u2 \\<in> T P \\<and> u2 \\<in> D P - min_elems (D P))\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n                      u2 \\<in> T P - (D P - min_elems (D P))", "case True"], ["proof (state)\nthis:\n  t2 \\<in> D S \\<and> u2 \\<in> T P \\<and> u2 \\<in> D P - min_elems (D P)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     t2 \\<in> D S \\<and>\n     u2 \\<in> T P \\<and> u2 \\<in> D P - min_elems (D P)\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n                      u2 \\<in> T P - (D P - min_elems (D P))\n 2. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     \\<not> (t2 \\<in> D S \\<and>\n             u2 \\<in> T P \\<and> u2 \\<in> D P - min_elems (D P))\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n                      u2 \\<in> T P - (D P - min_elems (D P))", "from True"], ["proof (chain)\npicking this:\n  t2 \\<in> D S \\<and> u2 \\<in> T P \\<and> u2 \\<in> D P - min_elems (D P)", "have inAAA: \"u2\\<in>D P\\<and>u2\\<notin>min_elems(D P)\""], ["proof (prove)\nusing this:\n  t2 \\<in> D S \\<and> u2 \\<in> T P \\<and> u2 \\<in> D P - min_elems (D P)\n\ngoal (1 subgoal):\n 1. u2 \\<in> D P \\<and> u2 \\<notin> min_elems (D P)", "by blast"], ["proof (state)\nthis:\n  u2 \\<in> D P \\<and> u2 \\<notin> min_elems (D P)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     t2 \\<in> D S \\<and>\n     u2 \\<in> T P \\<and> u2 \\<in> D P - min_elems (D P)\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n                      u2 \\<in> T P - (D P - min_elems (D P))\n 2. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     \\<not> (t2 \\<in> D S \\<and>\n             u2 \\<in> T P \\<and> u2 \\<in> D P - min_elems (D P))\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n                      u2 \\<in> T P - (D P - min_elems (D P))", "from inAAA"], ["proof (chain)\npicking this:\n  u2 \\<in> D P \\<and> u2 \\<notin> min_elems (D P)", "obtain u3  where inA: \"u3<u2\\<and>u3\\<in>min_elems(D P)\""], ["proof (prove)\nusing this:\n  u2 \\<in> D P \\<and> u2 \\<notin> min_elems (D P)\n\ngoal (1 subgoal):\n 1. (\\<And>u3.\n        u3 < u2 \\<and> u3 \\<in> min_elems (D P) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis le_neq_trans min_elems5)"], ["proof (state)\nthis:\n  u3 < u2 \\<and> u3 \\<in> min_elems (D P)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     t2 \\<in> D S \\<and>\n     u2 \\<in> T P \\<and> u2 \\<in> D P - min_elems (D P)\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n                      u2 \\<in> T P - (D P - min_elems (D P))\n 2. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     \\<not> (t2 \\<in> D S \\<and>\n             u2 \\<in> T P \\<and> u2 \\<in> D P - min_elems (D P))\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n                      u2 \\<in> T P - (D P - min_elems (D P))", "from inA"], ["proof (chain)\npicking this:\n  u3 < u2 \\<and> u3 \\<in> min_elems (D P)", "obtain t3 r3 where inA1: \"t3\\<le>t2\\<and>r3 setinterleaves((t3,u3),insert tick(ev ` A))\\<and>r3<r\""], ["proof (prove)\nusing this:\n  u3 < u2 \\<and> u3 \\<in> min_elems (D P)\n\ngoal (1 subgoal):\n 1. (\\<And>t3 r3.\n        t3 \\<le> t2 \\<and>\n        r3 setinterleaves ((t3, u3), insert tick (ev ` A)) \\<and>\n        r3 < r \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using C Sync.sym eq interPrefix"], ["proof (prove)\nusing this:\n  u3 < u2 \\<and> u3 \\<in> min_elems (D P)\n  r1 \\<le> r \\<and>\n  r1 setinterleaves ((t2, u2), insert tick (ev ` A)) \\<and>\n  (t2 \\<in> D P \\<and> u2 \\<in> T S \\<or> t2 \\<in> D S \\<and> u2 \\<in> T P)\n  setinterleaving (?s, ?X, ?t) = setinterleaving (?t, ?X, ?s)\n  r1 = r\n  \\<exists>u1 s1.\n     ?s setinterleaves ((?t, ?u), ?A) \\<and> ?t1.0 < ?t \\<longrightarrow>\n     u1 \\<le> ?u \\<and> s1 < ?s \\<and> s1 setinterleaves ((?t1.0, u1), ?A)\n\ngoal (1 subgoal):\n 1. (\\<And>t3 r3.\n        t3 \\<le> t2 \\<and>\n        r3 setinterleaves ((t3, u3), insert tick (ev ` A)) \\<and>\n        r3 < r \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  t3 \\<le> t2 \\<and>\n  r3 setinterleaves ((t3, u3), insert tick (ev ` A)) \\<and> r3 < r\n\ngoal (2 subgoals):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     t2 \\<in> D S \\<and>\n     u2 \\<in> T P \\<and> u2 \\<in> D P - min_elems (D P)\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n                      u2 \\<in> T P - (D P - min_elems (D P))\n 2. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     \\<not> (t2 \\<in> D S \\<and>\n             u2 \\<in> T P \\<and> u2 \\<in> D P - min_elems (D P))\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n                      u2 \\<in> T P - (D P - min_elems (D P))", "from inA1"], ["proof (chain)\npicking this:\n  t3 \\<le> t2 \\<and>\n  r3 setinterleaves ((t3, u3), insert tick (ev ` A)) \\<and> r3 < r", "have inA3: \"u3\\<in>D P\\<and>t3\\<in>T S\""], ["proof (prove)\nusing this:\n  t3 \\<le> t2 \\<and>\n  r3 setinterleaves ((t3, u3), insert tick (ev ` A)) \\<and> r3 < r\n\ngoal (1 subgoal):\n 1. u3 \\<in> D P \\<and> t3 \\<in> T S", "using D_T True elem_min_elems inA is_processT3_ST_pref"], ["proof (prove)\nusing this:\n  t3 \\<le> t2 \\<and>\n  r3 setinterleaves ((t3, u3), insert tick (ev ` A)) \\<and> r3 < r\n  ?s \\<in> D ?P \\<Longrightarrow> ?s \\<in> T ?P\n  t2 \\<in> D S \\<and> u2 \\<in> T P \\<and> u2 \\<in> D P - min_elems (D P)\n  ?c \\<in> min_elems ?B \\<Longrightarrow> ?c \\<in> ?B\n  u3 < u2 \\<and> u3 \\<in> min_elems (D P)\n  \\<lbrakk>?t \\<in> T ?P; ?s \\<le> ?t\\<rbrakk>\n  \\<Longrightarrow> ?s \\<in> T ?P\n\ngoal (1 subgoal):\n 1. u3 \\<in> D P \\<and> t3 \\<in> T S", "by blast"], ["proof (state)\nthis:\n  u3 \\<in> D P \\<and> t3 \\<in> T S\n\ngoal (2 subgoals):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     t2 \\<in> D S \\<and>\n     u2 \\<in> T P \\<and> u2 \\<in> D P - min_elems (D P)\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n                      u2 \\<in> T P - (D P - min_elems (D P))\n 2. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     \\<not> (t2 \\<in> D S \\<and>\n             u2 \\<in> T P \\<and> u2 \\<in> D P - min_elems (D P))\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n                      u2 \\<in> T P - (D P - min_elems (D P))", "from inA1"], ["proof (chain)\npicking this:\n  t3 \\<le> t2 \\<and>\n  r3 setinterleaves ((t3, u3), insert tick (ev ` A)) \\<and> r3 < r", "have inA2: \"r3\\<in>D (P \\<lbrakk>A\\<rbrakk> S)\""], ["proof (prove)\nusing this:\n  t3 \\<le> t2 \\<and>\n  r3 setinterleaves ((t3, u3), insert tick (ev ` A)) \\<and> r3 < r\n\ngoal (1 subgoal):\n 1. r3 \\<in> D (P \\<lbrakk>A\\<rbrakk> S)", "apply (simp add: D_sync)"], ["proof (prove)\ngoal (1 subgoal):\n 1. t3 \\<le> t2 \\<and>\n    r3 setinterleaves ((t3, u3), insert tick (ev ` A)) \\<and>\n    r3 < r \\<Longrightarrow>\n    \\<exists>t u r v.\n       front_tickFree v \\<and>\n       (tickFree r \\<or> v = []) \\<and>\n       r3 = r @ v \\<and>\n       r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n       (t \\<in> D P \\<and> u \\<in> T S \\<or> t \\<in> D S \\<and> u \\<in> T P)", "using Sync.sym front_tickFree_Nil inA3"], ["proof (prove)\nusing this:\n  setinterleaving (?s, ?X, ?t) = setinterleaving (?t, ?X, ?s)\n  front_tickFree []\n  u3 \\<in> D P \\<and> t3 \\<in> T S\n\ngoal (1 subgoal):\n 1. t3 \\<le> t2 \\<and>\n    r3 setinterleaves ((t3, u3), insert tick (ev ` A)) \\<and>\n    r3 < r \\<Longrightarrow>\n    \\<exists>t u r v.\n       front_tickFree v \\<and>\n       (tickFree r \\<or> v = []) \\<and>\n       r3 = r @ v \\<and>\n       r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n       (t \\<in> D P \\<and> u \\<in> T S \\<or> t \\<in> D S \\<and> u \\<in> T P)", "by blast"], ["proof (state)\nthis:\n  r3 \\<in> D (P \\<lbrakk>A\\<rbrakk> S)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     t2 \\<in> D S \\<and>\n     u2 \\<in> T P \\<and> u2 \\<in> D P - min_elems (D P)\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n                      u2 \\<in> T P - (D P - min_elems (D P))\n 2. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     \\<not> (t2 \\<in> D S \\<and>\n             u2 \\<in> T P \\<and> u2 \\<in> D P - min_elems (D P))\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n                      u2 \\<in> T P - (D P - min_elems (D P))", "with A inA1 inA2"], ["proof (chain)\npicking this:\n  r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\n  t3 \\<le> t2 \\<and>\n  r3 setinterleaves ((t3, u3), insert tick (ev ` A)) \\<and> r3 < r\n  r3 \\<in> D (P \\<lbrakk>A\\<rbrakk> S)\n  r3 \\<in> D (P \\<lbrakk>A\\<rbrakk> S)", "show ?thesis"], ["proof (prove)\nusing this:\n  r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\n  t3 \\<le> t2 \\<and>\n  r3 setinterleaves ((t3, u3), insert tick (ev ` A)) \\<and> r3 < r\n  r3 \\<in> D (P \\<lbrakk>A\\<rbrakk> S)\n  r3 \\<in> D (P \\<lbrakk>A\\<rbrakk> S)\n\ngoal (1 subgoal):\n 1. t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n    u2 \\<in> T P - (D P - min_elems (D P))", "by(simp add: min_elems_def)"], ["proof (state)\nthis:\n  t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n  u2 \\<in> T P - (D P - min_elems (D P))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     \\<not> (t2 \\<in> D S \\<and>\n             u2 \\<in> T P \\<and> u2 \\<in> D P - min_elems (D P))\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n                      u2 \\<in> T P - (D P - min_elems (D P))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     \\<not> (t2 \\<in> D S \\<and>\n             u2 \\<in> T P \\<and> u2 \\<in> D P - min_elems (D P))\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n                      u2 \\<in> T P - (D P - min_elems (D P))", "case False"], ["proof (state)\nthis:\n  \\<not> (t2 \\<in> D S \\<and>\n          u2 \\<in> T P \\<and> u2 \\<in> D P - min_elems (D P))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S));\n     \\<not> (t2 \\<in> D S \\<and>\n             u2 \\<in> T P \\<and> u2 \\<in> D P - min_elems (D P))\\<rbrakk>\n    \\<Longrightarrow> t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n                      u2 \\<in> T P - (D P - min_elems (D P))", "then"], ["proof (chain)\npicking this:\n  \\<not> (t2 \\<in> D S \\<and>\n          u2 \\<in> T P \\<and> u2 \\<in> D P - min_elems (D P))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> (t2 \\<in> D S \\<and>\n          u2 \\<in> T P \\<and> u2 \\<in> D P - min_elems (D P))\n\ngoal (1 subgoal):\n 1. t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n    u2 \\<in> T P - (D P - min_elems (D P))", "by blast"], ["proof (state)\nthis:\n  t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n  u2 \\<in> T P - (D P - min_elems (D P))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n  u2 \\<in> T P - (D P - min_elems (D P))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S));\n     \\<not> (\\<forall>t u r1.\n                r1 \\<le> r \\<and>\n                r1 setinterleaves ((t, u), insert tick\n      (ev ` A)) \\<longrightarrow>\n                t \\<notin> min_elems (D P) \\<and>\n                t \\<notin> min_elems (D S))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u.\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n                          t \\<in> min_elems (D S) \\<and>\n                          u \\<in> T P \\<and>\n                          u \\<in> T P - (D P - min_elems (D P)))", "with A C"], ["proof (chain)\npicking this:\n  r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\n  r1 \\<le> r \\<and>\n  r1 setinterleaves ((t2, u2), insert tick (ev ` A)) \\<and>\n  (t2 \\<in> D P \\<and> u2 \\<in> T S \\<or> t2 \\<in> D S \\<and> u2 \\<in> T P)\n  t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n  u2 \\<in> T P - (D P - min_elems (D P))", "show ?thesis"], ["proof (prove)\nusing this:\n  r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\n  r1 \\<le> r \\<and>\n  r1 setinterleaves ((t2, u2), insert tick (ev ` A)) \\<and>\n  (t2 \\<in> D P \\<and> u2 \\<in> T S \\<or> t2 \\<in> D S \\<and> u2 \\<in> T P)\n  t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n  u2 \\<in> T P - (D P - min_elems (D P))\n\ngoal (1 subgoal):\n 1. \\<exists>t u.\n       r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n       (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n        t \\<in> min_elems (D S) \\<and>\n        u \\<in> T P \\<and> u \\<in> T P - (D P - min_elems (D P)))", "using eq minAa minAb1"], ["proof (prove)\nusing this:\n  r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\n  r1 \\<le> r \\<and>\n  r1 setinterleaves ((t2, u2), insert tick (ev ` A)) \\<and>\n  (t2 \\<in> D P \\<and> u2 \\<in> T S \\<or> t2 \\<in> D S \\<and> u2 \\<in> T P)\n  t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n  u2 \\<in> T P - (D P - min_elems (D P))\n  r1 = r\n  t2 \\<in> D P \\<and> u2 \\<in> T S \\<longrightarrow>\n  t2 \\<in> min_elems (D P)\n  t2 \\<in> D S \\<and> u2 \\<in> T P \\<longrightarrow>\n  t2 \\<in> min_elems (D S)\n\ngoal (1 subgoal):\n 1. \\<exists>t u.\n       r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n       (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n        t \\<in> min_elems (D S) \\<and>\n        u \\<in> T P \\<and> u \\<in> T P - (D P - min_elems (D P)))", "by blast"], ["proof (state)\nthis:\n  \\<exists>t u.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n     (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n      t \\<in> min_elems (D S) \\<and>\n      u \\<in> T P \\<and> u \\<in> T P - (D P - min_elems (D P)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>t u.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n     (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n      t \\<in> min_elems (D S) \\<and>\n      u \\<in> T P \\<and> u \\<in> T P - (D P - min_elems (D P)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mono_Sync_D3: \n  assumes ordered: \"P \\<sqsubseteq> Q\" \n  shows \"min_elems (D (P  \\<lbrakk>A\\<rbrakk> S)) \\<subseteq> T (Q  \\<lbrakk>A\\<rbrakk> S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\n    \\<subseteq> T (Q \\<lbrakk>A\\<rbrakk> S)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\n    \\<subseteq> T (Q \\<lbrakk>A\\<rbrakk> S)", "have mono_sync2b:\"P \\<sqsubseteq> Q \\<Longrightarrow>\\<forall>r. r \\<in> min_elems(D (P  \\<lbrakk>A\\<rbrakk> S))\\<longrightarrow>r\\<in> T (Q  \\<lbrakk>A\\<rbrakk> S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<sqsubseteq> Q \\<Longrightarrow>\n    \\<forall>r.\n       r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S)) \\<longrightarrow>\n       r \\<in> T (Q \\<lbrakk>A\\<rbrakk> S)", "apply(frule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<sqsubseteq> Q;\n     ?P \\<longrightarrow> P \\<sqsubseteq> Q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>r.\n                         r \\<in> min_elems\n                                  (D (P \\<lbrakk>A\\<rbrakk>\n   S)) \\<longrightarrow>\n                         r \\<in> T (Q \\<lbrakk>A\\<rbrakk> S)", "apply(auto simp: mono_sync2a)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r.\n       \\<lbrakk>P \\<sqsubseteq> Q;\n        r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\\<rbrakk>\n       \\<Longrightarrow> r \\<in> T (Q \\<lbrakk>A\\<rbrakk> S)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r.\n       \\<lbrakk>P \\<sqsubseteq> Q;\n        r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\\<rbrakk>\n       \\<Longrightarrow> r \\<in> T (Q \\<lbrakk>A\\<rbrakk> S)", "fix r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r.\n       \\<lbrakk>P \\<sqsubseteq> Q;\n        r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\\<rbrakk>\n       \\<Longrightarrow> r \\<in> T (Q \\<lbrakk>A\\<rbrakk> S)", "assume A: \"P \\<sqsubseteq> Q\"\n    and B: \"r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\""], ["proof (state)\nthis:\n  P \\<sqsubseteq> Q\n  r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       \\<lbrakk>P \\<sqsubseteq> Q;\n        r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\\<rbrakk>\n       \\<Longrightarrow> r \\<in> T (Q \\<lbrakk>A\\<rbrakk> S)", "from B"], ["proof (chain)\npicking this:\n  r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))", "obtain t u where E: \"r setinterleaves ((t, u), insert tick (ev ` A))\\<and>(t \\<in> min_elems(D P) \n    \\<and> u \\<in> T S \\<or> t \\<in> min_elems(D S) \\<and> u \\<in> (T P-(D P-min_elems(D P))))\""], ["proof (prove)\nusing this:\n  r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\n\ngoal (1 subgoal):\n 1. (\\<And>t u.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n        (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n         t \\<in> min_elems (D S) \\<and>\n         u \\<in> T P - (D P - min_elems (D P))) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using mono_sync2a"], ["proof (prove)\nusing this:\n  r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\n  ?r \\<in> min_elems (D (?P \\<lbrakk>?A\\<rbrakk> ?S)) \\<Longrightarrow>\n  \\<exists>t u.\n     ?r setinterleaves ((t, u), insert tick (ev ` ?A)) \\<and>\n     (t \\<in> min_elems (D ?P) \\<and> u \\<in> T ?S \\<or>\n      t \\<in> min_elems (D ?S) \\<and>\n      u \\<in> T ?P \\<and> u \\<in> T ?P - (D ?P - min_elems (D ?P)))\n\ngoal (1 subgoal):\n 1. (\\<And>t u.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n        (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n         t \\<in> min_elems (D S) \\<and>\n         u \\<in> T P - (D P - min_elems (D P))) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n  (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n   t \\<in> min_elems (D S) \\<and> u \\<in> T P - (D P - min_elems (D P)))\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       \\<lbrakk>P \\<sqsubseteq> Q;\n        r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\\<rbrakk>\n       \\<Longrightarrow> r \\<in> T (Q \\<lbrakk>A\\<rbrakk> S)", "from E"], ["proof (chain)\npicking this:\n  r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n  (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n   t \\<in> min_elems (D S) \\<and> u \\<in> T P - (D P - min_elems (D P)))", "have F:\"(t\\<in>T Q\\<and>u\\<in>T S) \\<or> (t\\<in> T S\\<and>u\\<in>T Q)\""], ["proof (prove)\nusing this:\n  r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n  (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n   t \\<in> min_elems (D S) \\<and> u \\<in> T P - (D P - min_elems (D P)))\n\ngoal (1 subgoal):\n 1. t \\<in> T Q \\<and> u \\<in> T S \\<or> t \\<in> T S \\<and> u \\<in> T Q", "using le_approx2T le_approx3 ordered"], ["proof (prove)\nusing this:\n  r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n  (t \\<in> min_elems (D P) \\<and> u \\<in> T S \\<or>\n   t \\<in> min_elems (D S) \\<and> u \\<in> T P - (D P - min_elems (D P)))\n  \\<lbrakk>?P \\<sqsubseteq> ?Q; ?s \\<notin> D ?P\\<rbrakk>\n  \\<Longrightarrow> (?s \\<in> T ?Q) = (?s \\<in> T ?P)\n  ?P \\<sqsubseteq> ?Q \\<Longrightarrow> min_elems (D ?P) \\<subseteq> T ?Q\n  P \\<sqsubseteq> Q\n\ngoal (1 subgoal):\n 1. t \\<in> T Q \\<and> u \\<in> T S \\<or> t \\<in> T S \\<and> u \\<in> T Q", "by blast"], ["proof (state)\nthis:\n  t \\<in> T Q \\<and> u \\<in> T S \\<or> t \\<in> T S \\<and> u \\<in> T Q\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       \\<lbrakk>P \\<sqsubseteq> Q;\n        r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\\<rbrakk>\n       \\<Longrightarrow> r \\<in> T (Q \\<lbrakk>A\\<rbrakk> S)", "thus \"r \\<in> T (Q \\<lbrakk>A\\<rbrakk> S)\""], ["proof (prove)\nusing this:\n  t \\<in> T Q \\<and> u \\<in> T S \\<or> t \\<in> T S \\<and> u \\<in> T Q\n\ngoal (1 subgoal):\n 1. r \\<in> T (Q \\<lbrakk>A\\<rbrakk> S)", "by (metis (no_types, lifting) E Sync.sym T_sync UnCI Un_commute insert_is_Un mem_Collect_eq)"], ["proof (state)\nthis:\n  r \\<in> T (Q \\<lbrakk>A\\<rbrakk> S)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<sqsubseteq> Q \\<Longrightarrow>\n  \\<forall>r.\n     r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S)) \\<longrightarrow>\n     r \\<in> T (Q \\<lbrakk>A\\<rbrakk> S)\n\ngoal (1 subgoal):\n 1. min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\n    \\<subseteq> T (Q \\<lbrakk>A\\<rbrakk> S)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\n    \\<subseteq> T (Q \\<lbrakk>A\\<rbrakk> S)", "apply(insert ordered)"], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<sqsubseteq> Q \\<Longrightarrow>\n    min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\n    \\<subseteq> T (Q \\<lbrakk>A\\<rbrakk> S)", "apply(frule mono_sync2b)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<sqsubseteq> Q;\n     \\<forall>r.\n        r \\<in> min_elems (D (P \\<lbrakk>A\\<rbrakk> S)) \\<longrightarrow>\n        r \\<in> T (Q \\<lbrakk>A\\<rbrakk> S)\\<rbrakk>\n    \\<Longrightarrow> min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\n                      \\<subseteq> T (Q \\<lbrakk>A\\<rbrakk> S)", "by blast"], ["proof (state)\nthis:\n  min_elems (D (P \\<lbrakk>A\\<rbrakk> S))\n  \\<subseteq> T (Q \\<lbrakk>A\\<rbrakk> S)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mono_D_syn: \"D (S \\<lbrakk> A \\<rbrakk> Q) = D (Q \\<lbrakk> A \\<rbrakk> S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D (S \\<lbrakk>A\\<rbrakk> Q) = D (Q \\<lbrakk>A\\<rbrakk> S)", "by(auto simp: D_sync)"], ["", "lemma mono_T_syn: \"T (S \\<lbrakk> A \\<rbrakk> Q) = T (Q \\<lbrakk> A \\<rbrakk> S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T (S \\<lbrakk>A\\<rbrakk> Q) = T (Q \\<lbrakk>A\\<rbrakk> S)", "apply(auto simp: T_sync)"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>x t u.\n       \\<lbrakk>\\<forall>t u r.\n                   r setinterleaves ((t, u), insert tick\n        (ev ` A)) \\<longrightarrow>\n                   (\\<forall>v.\n                       x = r @ v \\<longrightarrow>\n                       front_tickFree v \\<longrightarrow>\n                       \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n                       (t \\<in> D Q \\<longrightarrow> u \\<notin> T S) \\<and>\n                       (t \\<in> D S \\<longrightarrow> u \\<notin> T Q));\n        t \\<in> T S; u \\<in> T Q;\n        x setinterleaves ((t, u), insert tick (ev ` A))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            t \\<in> T Q \\<and>\n                            (\\<exists>u.\n                                u \\<in> T S \\<and>\n                                x setinterleaves ((t, u), insert tick\n                     (ev ` A)))\n 2. \\<And>t u r v.\n       \\<lbrakk>\\<forall>t u ra.\n                   ra setinterleaves ((t, u), insert tick\n         (ev ` A)) \\<longrightarrow>\n                   (\\<forall>va.\n                       r @ v = ra @ va \\<longrightarrow>\n                       front_tickFree va \\<longrightarrow>\n                       \\<not> tickFree ra \\<and> va \\<noteq> [] \\<or>\n                       (t \\<in> D Q \\<longrightarrow> u \\<notin> T S) \\<and>\n                       (t \\<in> D S \\<longrightarrow> u \\<notin> T Q));\n        front_tickFree v; r setinterleaves ((t, u), insert tick (ev ` A));\n        tickFree r; t \\<in> D S; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            t \\<in> T Q \\<and>\n                            (\\<exists>u.\n                                u \\<in> T S \\<and>\n                                r @\n                                v setinterleaves ((t, u), insert tick\n                     (ev ` A)))\n 3. \\<And>t u r v.\n       \\<lbrakk>\\<forall>t u ra.\n                   ra setinterleaves ((t, u), insert tick\n         (ev ` A)) \\<longrightarrow>\n                   (\\<forall>va.\n                       r @ v = ra @ va \\<longrightarrow>\n                       front_tickFree va \\<longrightarrow>\n                       \\<not> tickFree ra \\<and> va \\<noteq> [] \\<or>\n                       (t \\<in> D Q \\<longrightarrow> u \\<notin> T S) \\<and>\n                       (t \\<in> D S \\<longrightarrow> u \\<notin> T Q));\n        front_tickFree v; r setinterleaves ((t, u), insert tick (ev ` A));\n        tickFree r; t \\<in> D Q; u \\<in> T S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            t \\<in> T Q \\<and>\n                            (\\<exists>u.\n                                u \\<in> T S \\<and>\n                                r @\n                                v setinterleaves ((t, u), insert tick\n                     (ev ` A)))\n 4. \\<And>t u r.\n       \\<lbrakk>\\<forall>t u ra.\n                   ra setinterleaves ((t, u), insert tick\n         (ev ` A)) \\<longrightarrow>\n                   (\\<forall>v.\n                       r = ra @ v \\<longrightarrow>\n                       front_tickFree v \\<longrightarrow>\n                       \\<not> tickFree ra \\<and> v \\<noteq> [] \\<or>\n                       (t \\<in> D Q \\<longrightarrow> u \\<notin> T S) \\<and>\n                       (t \\<in> D S \\<longrightarrow> u \\<notin> T Q));\n        r setinterleaves ((t, u), insert tick (ev ` A)); t \\<in> D S;\n        u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            t \\<in> T Q \\<and>\n                            (\\<exists>u.\n                                u \\<in> T S \\<and>\n                                r setinterleaves ((t, u), insert tick\n                     (ev ` A)))\n 5. \\<And>t u r.\n       \\<lbrakk>\\<forall>t u ra.\n                   ra setinterleaves ((t, u), insert tick\n         (ev ` A)) \\<longrightarrow>\n                   (\\<forall>v.\n                       r = ra @ v \\<longrightarrow>\n                       front_tickFree v \\<longrightarrow>\n                       \\<not> tickFree ra \\<and> v \\<noteq> [] \\<or>\n                       (t \\<in> D Q \\<longrightarrow> u \\<notin> T S) \\<and>\n                       (t \\<in> D S \\<longrightarrow> u \\<notin> T Q));\n        r setinterleaves ((t, u), insert tick (ev ` A)); t \\<in> D Q;\n        u \\<in> T S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            t \\<in> T Q \\<and>\n                            (\\<exists>u.\n                                u \\<in> T S \\<and>\n                                r setinterleaves ((t, u), insert tick\n                     (ev ` A)))\n 6. \\<And>x t u.\n       \\<lbrakk>\\<forall>t u r.\n                   r setinterleaves ((t, u), insert tick\n        (ev ` A)) \\<longrightarrow>\n                   (\\<forall>v.\n                       x = r @ v \\<longrightarrow>\n                       front_tickFree v \\<longrightarrow>\n                       \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n                       (t \\<in> D S \\<longrightarrow> u \\<notin> T Q) \\<and>\n                       (t \\<in> D Q \\<longrightarrow> u \\<notin> T S));\n        t \\<in> T Q; u \\<in> T S;\n        x setinterleaves ((t, u), insert tick (ev ` A))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            t \\<in> T S \\<and>\n                            (\\<exists>u.\n                                u \\<in> T Q \\<and>\n                                x setinterleaves ((t, u), insert tick\n                     (ev ` A)))\n 7. \\<And>t u r v.\n       \\<lbrakk>\\<forall>t u ra.\n                   ra setinterleaves ((t, u), insert tick\n         (ev ` A)) \\<longrightarrow>\n                   (\\<forall>va.\n                       r @ v = ra @ va \\<longrightarrow>\n                       front_tickFree va \\<longrightarrow>\n                       \\<not> tickFree ra \\<and> va \\<noteq> [] \\<or>\n                       (t \\<in> D S \\<longrightarrow> u \\<notin> T Q) \\<and>\n                       (t \\<in> D Q \\<longrightarrow> u \\<notin> T S));\n        front_tickFree v; r setinterleaves ((t, u), insert tick (ev ` A));\n        tickFree r; t \\<in> D Q; u \\<in> T S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            t \\<in> T S \\<and>\n                            (\\<exists>u.\n                                u \\<in> T Q \\<and>\n                                r @\n                                v setinterleaves ((t, u), insert tick\n                     (ev ` A)))\n 8. \\<And>t u r v.\n       \\<lbrakk>\\<forall>t u ra.\n                   ra setinterleaves ((t, u), insert tick\n         (ev ` A)) \\<longrightarrow>\n                   (\\<forall>va.\n                       r @ v = ra @ va \\<longrightarrow>\n                       front_tickFree va \\<longrightarrow>\n                       \\<not> tickFree ra \\<and> va \\<noteq> [] \\<or>\n                       (t \\<in> D S \\<longrightarrow> u \\<notin> T Q) \\<and>\n                       (t \\<in> D Q \\<longrightarrow> u \\<notin> T S));\n        front_tickFree v; r setinterleaves ((t, u), insert tick (ev ` A));\n        tickFree r; t \\<in> D S; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            t \\<in> T S \\<and>\n                            (\\<exists>u.\n                                u \\<in> T Q \\<and>\n                                r @\n                                v setinterleaves ((t, u), insert tick\n                     (ev ` A)))\n 9. \\<And>t u r.\n       \\<lbrakk>\\<forall>t u ra.\n                   ra setinterleaves ((t, u), insert tick\n         (ev ` A)) \\<longrightarrow>\n                   (\\<forall>v.\n                       r = ra @ v \\<longrightarrow>\n                       front_tickFree v \\<longrightarrow>\n                       \\<not> tickFree ra \\<and> v \\<noteq> [] \\<or>\n                       (t \\<in> D S \\<longrightarrow> u \\<notin> T Q) \\<and>\n                       (t \\<in> D Q \\<longrightarrow> u \\<notin> T S));\n        r setinterleaves ((t, u), insert tick (ev ` A)); t \\<in> D Q;\n        u \\<in> T S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            t \\<in> T S \\<and>\n                            (\\<exists>u.\n                                u \\<in> T Q \\<and>\n                                r setinterleaves ((t, u), insert tick\n                     (ev ` A)))\n 10. \\<And>t u r.\n        \\<lbrakk>\\<forall>t u ra.\n                    ra setinterleaves ((t, u), insert tick\n          (ev ` A)) \\<longrightarrow>\n                    (\\<forall>v.\n                        r = ra @ v \\<longrightarrow>\n                        front_tickFree v \\<longrightarrow>\n                        \\<not> tickFree ra \\<and> v \\<noteq> [] \\<or>\n                        (t \\<in> D S \\<longrightarrow>\n                         u \\<notin> T Q) \\<and>\n                        (t \\<in> D Q \\<longrightarrow> u \\<notin> T S));\n         r setinterleaves ((t, u), insert tick (ev ` A)); t \\<in> D S;\n         u \\<in> T Q\\<rbrakk>\n        \\<Longrightarrow> \\<exists>t.\n                             t \\<in> T S \\<and>\n                             (\\<exists>u.\n                                 u \\<in> T Q \\<and>\n                                 r setinterleaves ((t, u), insert tick\n                      (ev ` A)))", "using Sync.sym"], ["proof (prove)\nusing this:\n  setinterleaving (?s, ?X, ?t) = setinterleaving (?t, ?X, ?s)\n\ngoal (10 subgoals):\n 1. \\<And>x t u.\n       \\<lbrakk>\\<forall>t u r.\n                   r setinterleaves ((t, u), insert tick\n        (ev ` A)) \\<longrightarrow>\n                   (\\<forall>v.\n                       x = r @ v \\<longrightarrow>\n                       front_tickFree v \\<longrightarrow>\n                       \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n                       (t \\<in> D Q \\<longrightarrow> u \\<notin> T S) \\<and>\n                       (t \\<in> D S \\<longrightarrow> u \\<notin> T Q));\n        t \\<in> T S; u \\<in> T Q;\n        x setinterleaves ((t, u), insert tick (ev ` A))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            t \\<in> T Q \\<and>\n                            (\\<exists>u.\n                                u \\<in> T S \\<and>\n                                x setinterleaves ((t, u), insert tick\n                     (ev ` A)))\n 2. \\<And>t u r v.\n       \\<lbrakk>\\<forall>t u ra.\n                   ra setinterleaves ((t, u), insert tick\n         (ev ` A)) \\<longrightarrow>\n                   (\\<forall>va.\n                       r @ v = ra @ va \\<longrightarrow>\n                       front_tickFree va \\<longrightarrow>\n                       \\<not> tickFree ra \\<and> va \\<noteq> [] \\<or>\n                       (t \\<in> D Q \\<longrightarrow> u \\<notin> T S) \\<and>\n                       (t \\<in> D S \\<longrightarrow> u \\<notin> T Q));\n        front_tickFree v; r setinterleaves ((t, u), insert tick (ev ` A));\n        tickFree r; t \\<in> D S; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            t \\<in> T Q \\<and>\n                            (\\<exists>u.\n                                u \\<in> T S \\<and>\n                                r @\n                                v setinterleaves ((t, u), insert tick\n                     (ev ` A)))\n 3. \\<And>t u r v.\n       \\<lbrakk>\\<forall>t u ra.\n                   ra setinterleaves ((t, u), insert tick\n         (ev ` A)) \\<longrightarrow>\n                   (\\<forall>va.\n                       r @ v = ra @ va \\<longrightarrow>\n                       front_tickFree va \\<longrightarrow>\n                       \\<not> tickFree ra \\<and> va \\<noteq> [] \\<or>\n                       (t \\<in> D Q \\<longrightarrow> u \\<notin> T S) \\<and>\n                       (t \\<in> D S \\<longrightarrow> u \\<notin> T Q));\n        front_tickFree v; r setinterleaves ((t, u), insert tick (ev ` A));\n        tickFree r; t \\<in> D Q; u \\<in> T S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            t \\<in> T Q \\<and>\n                            (\\<exists>u.\n                                u \\<in> T S \\<and>\n                                r @\n                                v setinterleaves ((t, u), insert tick\n                     (ev ` A)))\n 4. \\<And>t u r.\n       \\<lbrakk>\\<forall>t u ra.\n                   ra setinterleaves ((t, u), insert tick\n         (ev ` A)) \\<longrightarrow>\n                   (\\<forall>v.\n                       r = ra @ v \\<longrightarrow>\n                       front_tickFree v \\<longrightarrow>\n                       \\<not> tickFree ra \\<and> v \\<noteq> [] \\<or>\n                       (t \\<in> D Q \\<longrightarrow> u \\<notin> T S) \\<and>\n                       (t \\<in> D S \\<longrightarrow> u \\<notin> T Q));\n        r setinterleaves ((t, u), insert tick (ev ` A)); t \\<in> D S;\n        u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            t \\<in> T Q \\<and>\n                            (\\<exists>u.\n                                u \\<in> T S \\<and>\n                                r setinterleaves ((t, u), insert tick\n                     (ev ` A)))\n 5. \\<And>t u r.\n       \\<lbrakk>\\<forall>t u ra.\n                   ra setinterleaves ((t, u), insert tick\n         (ev ` A)) \\<longrightarrow>\n                   (\\<forall>v.\n                       r = ra @ v \\<longrightarrow>\n                       front_tickFree v \\<longrightarrow>\n                       \\<not> tickFree ra \\<and> v \\<noteq> [] \\<or>\n                       (t \\<in> D Q \\<longrightarrow> u \\<notin> T S) \\<and>\n                       (t \\<in> D S \\<longrightarrow> u \\<notin> T Q));\n        r setinterleaves ((t, u), insert tick (ev ` A)); t \\<in> D Q;\n        u \\<in> T S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            t \\<in> T Q \\<and>\n                            (\\<exists>u.\n                                u \\<in> T S \\<and>\n                                r setinterleaves ((t, u), insert tick\n                     (ev ` A)))\n 6. \\<And>x t u.\n       \\<lbrakk>\\<forall>t u r.\n                   r setinterleaves ((t, u), insert tick\n        (ev ` A)) \\<longrightarrow>\n                   (\\<forall>v.\n                       x = r @ v \\<longrightarrow>\n                       front_tickFree v \\<longrightarrow>\n                       \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n                       (t \\<in> D S \\<longrightarrow> u \\<notin> T Q) \\<and>\n                       (t \\<in> D Q \\<longrightarrow> u \\<notin> T S));\n        t \\<in> T Q; u \\<in> T S;\n        x setinterleaves ((t, u), insert tick (ev ` A))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            t \\<in> T S \\<and>\n                            (\\<exists>u.\n                                u \\<in> T Q \\<and>\n                                x setinterleaves ((t, u), insert tick\n                     (ev ` A)))\n 7. \\<And>t u r v.\n       \\<lbrakk>\\<forall>t u ra.\n                   ra setinterleaves ((t, u), insert tick\n         (ev ` A)) \\<longrightarrow>\n                   (\\<forall>va.\n                       r @ v = ra @ va \\<longrightarrow>\n                       front_tickFree va \\<longrightarrow>\n                       \\<not> tickFree ra \\<and> va \\<noteq> [] \\<or>\n                       (t \\<in> D S \\<longrightarrow> u \\<notin> T Q) \\<and>\n                       (t \\<in> D Q \\<longrightarrow> u \\<notin> T S));\n        front_tickFree v; r setinterleaves ((t, u), insert tick (ev ` A));\n        tickFree r; t \\<in> D Q; u \\<in> T S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            t \\<in> T S \\<and>\n                            (\\<exists>u.\n                                u \\<in> T Q \\<and>\n                                r @\n                                v setinterleaves ((t, u), insert tick\n                     (ev ` A)))\n 8. \\<And>t u r v.\n       \\<lbrakk>\\<forall>t u ra.\n                   ra setinterleaves ((t, u), insert tick\n         (ev ` A)) \\<longrightarrow>\n                   (\\<forall>va.\n                       r @ v = ra @ va \\<longrightarrow>\n                       front_tickFree va \\<longrightarrow>\n                       \\<not> tickFree ra \\<and> va \\<noteq> [] \\<or>\n                       (t \\<in> D S \\<longrightarrow> u \\<notin> T Q) \\<and>\n                       (t \\<in> D Q \\<longrightarrow> u \\<notin> T S));\n        front_tickFree v; r setinterleaves ((t, u), insert tick (ev ` A));\n        tickFree r; t \\<in> D S; u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            t \\<in> T S \\<and>\n                            (\\<exists>u.\n                                u \\<in> T Q \\<and>\n                                r @\n                                v setinterleaves ((t, u), insert tick\n                     (ev ` A)))\n 9. \\<And>t u r.\n       \\<lbrakk>\\<forall>t u ra.\n                   ra setinterleaves ((t, u), insert tick\n         (ev ` A)) \\<longrightarrow>\n                   (\\<forall>v.\n                       r = ra @ v \\<longrightarrow>\n                       front_tickFree v \\<longrightarrow>\n                       \\<not> tickFree ra \\<and> v \\<noteq> [] \\<or>\n                       (t \\<in> D S \\<longrightarrow> u \\<notin> T Q) \\<and>\n                       (t \\<in> D Q \\<longrightarrow> u \\<notin> T S));\n        r setinterleaves ((t, u), insert tick (ev ` A)); t \\<in> D Q;\n        u \\<in> T S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            t \\<in> T S \\<and>\n                            (\\<exists>u.\n                                u \\<in> T Q \\<and>\n                                r setinterleaves ((t, u), insert tick\n                     (ev ` A)))\n 10. \\<And>t u r.\n        \\<lbrakk>\\<forall>t u ra.\n                    ra setinterleaves ((t, u), insert tick\n          (ev ` A)) \\<longrightarrow>\n                    (\\<forall>v.\n                        r = ra @ v \\<longrightarrow>\n                        front_tickFree v \\<longrightarrow>\n                        \\<not> tickFree ra \\<and> v \\<noteq> [] \\<or>\n                        (t \\<in> D S \\<longrightarrow>\n                         u \\<notin> T Q) \\<and>\n                        (t \\<in> D Q \\<longrightarrow> u \\<notin> T S));\n         r setinterleaves ((t, u), insert tick (ev ` A)); t \\<in> D S;\n         u \\<in> T Q\\<rbrakk>\n        \\<Longrightarrow> \\<exists>t.\n                             t \\<in> T S \\<and>\n                             (\\<exists>u.\n                                 u \\<in> T Q \\<and>\n                                 r setinterleaves ((t, u), insert tick\n                      (ev ` A)))", "by fastforce+"], ["", "lemma mono_F_syn: \"F (S \\<lbrakk> A \\<rbrakk> Q)  = F (Q \\<lbrakk> A \\<rbrakk> S) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. F (S \\<lbrakk>A\\<rbrakk> Q) = F (Q \\<lbrakk>A\\<rbrakk> S)", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> F (S \\<lbrakk>A\\<rbrakk> Q) \\<Longrightarrow>\n       (a, b) \\<in> F (Q \\<lbrakk>A\\<rbrakk> S)\n 2. \\<And>a b.\n       (a, b) \\<in> F (Q \\<lbrakk>A\\<rbrakk> S) \\<Longrightarrow>\n       (a, b) \\<in> F (S \\<lbrakk>A\\<rbrakk> Q)", "apply (simp add: F_sync)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (\\<exists>t u X.\n           (t, X) \\<in> F S \\<and>\n           (\\<exists>Y.\n               (u, Y) \\<in> F Q \\<and>\n               a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n               b =\n               (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n               X \\<inter> Y)) \\<or>\n       (\\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           a = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D S \\<and> u \\<in> T Q \\<or>\n            t \\<in> D Q \\<and> u \\<in> T S)) \\<Longrightarrow>\n       (\\<exists>t u X.\n           (t, X) \\<in> F Q \\<and>\n           (\\<exists>Y.\n               (u, Y) \\<in> F S \\<and>\n               a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n               b =\n               (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n               X \\<inter> Y)) \\<or>\n       (\\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           a = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D Q \\<and> u \\<in> T S \\<or>\n            t \\<in> D S \\<and> u \\<in> T Q))\n 2. \\<And>a b.\n       (a, b) \\<in> F (Q \\<lbrakk>A\\<rbrakk> S) \\<Longrightarrow>\n       (a, b) \\<in> F (S \\<lbrakk>A\\<rbrakk> Q)", "using Sync.sym"], ["proof (prove)\nusing this:\n  setinterleaving (?s, ?X, ?t) = setinterleaving (?t, ?X, ?s)\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (\\<exists>t u X.\n           (t, X) \\<in> F S \\<and>\n           (\\<exists>Y.\n               (u, Y) \\<in> F Q \\<and>\n               a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n               b =\n               (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n               X \\<inter> Y)) \\<or>\n       (\\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           a = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D S \\<and> u \\<in> T Q \\<or>\n            t \\<in> D Q \\<and> u \\<in> T S)) \\<Longrightarrow>\n       (\\<exists>t u X.\n           (t, X) \\<in> F Q \\<and>\n           (\\<exists>Y.\n               (u, Y) \\<in> F S \\<and>\n               a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n               b =\n               (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n               X \\<inter> Y)) \\<or>\n       (\\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           a = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D Q \\<and> u \\<in> T S \\<or>\n            t \\<in> D S \\<and> u \\<in> T Q))\n 2. \\<And>a b.\n       (a, b) \\<in> F (Q \\<lbrakk>A\\<rbrakk> S) \\<Longrightarrow>\n       (a, b) \\<in> F (S \\<lbrakk>A\\<rbrakk> Q)", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (a, b) \\<in> F (Q \\<lbrakk>A\\<rbrakk> S) \\<Longrightarrow>\n       (a, b) \\<in> F (S \\<lbrakk>A\\<rbrakk> Q)", "apply (simp add: F_sync)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (\\<exists>t u X.\n           (t, X) \\<in> F Q \\<and>\n           (\\<exists>Y.\n               (u, Y) \\<in> F S \\<and>\n               a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n               b =\n               (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n               X \\<inter> Y)) \\<or>\n       (\\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           a = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D Q \\<and> u \\<in> T S \\<or>\n            t \\<in> D S \\<and> u \\<in> T Q)) \\<Longrightarrow>\n       (\\<exists>t u X.\n           (t, X) \\<in> F S \\<and>\n           (\\<exists>Y.\n               (u, Y) \\<in> F Q \\<and>\n               a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n               b =\n               (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n               X \\<inter> Y)) \\<or>\n       (\\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           a = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D S \\<and> u \\<in> T Q \\<or>\n            t \\<in> D Q \\<and> u \\<in> T S))", "using Sync.sym"], ["proof (prove)\nusing this:\n  setinterleaving (?s, ?X, ?t) = setinterleaving (?t, ?X, ?s)\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (\\<exists>t u X.\n           (t, X) \\<in> F Q \\<and>\n           (\\<exists>Y.\n               (u, Y) \\<in> F S \\<and>\n               a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n               b =\n               (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n               X \\<inter> Y)) \\<or>\n       (\\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           a = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D Q \\<and> u \\<in> T S \\<or>\n            t \\<in> D S \\<and> u \\<in> T Q)) \\<Longrightarrow>\n       (\\<exists>t u X.\n           (t, X) \\<in> F S \\<and>\n           (\\<exists>Y.\n               (u, Y) \\<in> F Q \\<and>\n               a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n               b =\n               (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n               X \\<inter> Y)) \\<or>\n       (\\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           a = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D S \\<and> u \\<in> T Q \\<or>\n            t \\<in> D Q \\<and> u \\<in> T S))", "by blast"], ["", "lemma mono_Ra_syn: \"Ra (S \\<lbrakk> A \\<rbrakk> Q) s = Ra (Q \\<lbrakk> A \\<rbrakk> S) s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ra (S \\<lbrakk>A\\<rbrakk> Q) s = Ra (Q \\<lbrakk>A\\<rbrakk> S) s", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> Ra (S \\<lbrakk>A\\<rbrakk> Q) s \\<Longrightarrow>\n       x \\<in> Ra (Q \\<lbrakk>A\\<rbrakk> S) s\n 2. \\<And>x.\n       x \\<in> Ra (Q \\<lbrakk>A\\<rbrakk> S) s \\<Longrightarrow>\n       x \\<in> Ra (S \\<lbrakk>A\\<rbrakk> Q) s", "apply (auto simp: Ra_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       (s, x) \\<in> F (S \\<lbrakk>A\\<rbrakk> Q) \\<Longrightarrow>\n       (s, x) \\<in> F (Q \\<lbrakk>A\\<rbrakk> S)\n 2. \\<And>x.\n       (s, x) \\<in> F (Q \\<lbrakk>A\\<rbrakk> S) \\<Longrightarrow>\n       (s, x) \\<in> F (S \\<lbrakk>A\\<rbrakk> Q)", "by (auto simp: mono_F_syn)"], ["", "lemma mono_Sync[simp]     : \"P \\<sqsubseteq> Q \\<Longrightarrow> (P \\<lbrakk> A \\<rbrakk> S) \\<sqsubseteq> (Q \\<lbrakk> A \\<rbrakk> S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<sqsubseteq> Q \\<Longrightarrow>\n    (P \\<lbrakk>A\\<rbrakk> S) \\<sqsubseteq> (Q \\<lbrakk>A\\<rbrakk> S)", "by(auto simp: le_approx_def mono_Sync_D1 mono_Sync_D2 mono_Sync_D3)"], ["", "lemma mono_Sync_sym [simp]    : \"P \\<sqsubseteq> Q \\<Longrightarrow> (S \\<lbrakk> A \\<rbrakk> P) \\<sqsubseteq> (S \\<lbrakk> A \\<rbrakk> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<sqsubseteq> Q \\<Longrightarrow>\n    (S \\<lbrakk>A\\<rbrakk> P) \\<sqsubseteq> (S \\<lbrakk>A\\<rbrakk> Q)", "by (metis Process_eq_spec mono_D_syn mono_F_syn mono_Sync)"], ["", "lemma chain_Sync1: \"chain Y \\<Longrightarrow> chain (\\<lambda>i. Y i  \\<lbrakk> A \\<rbrakk> S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chain Y \\<Longrightarrow> chain (\\<lambda>i. Y i \\<lbrakk>A\\<rbrakk> S)", "by(simp add: chain_def)"], ["", "lemma chain_Sync2: \"chain Y \\<Longrightarrow> chain (\\<lambda>i. S  \\<lbrakk> A \\<rbrakk> Y i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chain Y \\<Longrightarrow> chain (\\<lambda>i. S \\<lbrakk>A\\<rbrakk> Y i)", "by(simp add: chain_def)"], ["", "lemma empty_setinterleaving : \"[] setinterleaves ((t, u), A) \\<Longrightarrow> t = []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [] setinterleaves ((t, u), A) \\<Longrightarrow> t = []", "by (cases t, cases u, auto, cases u, simp_all split:if_splits)"], ["", "lemma inters_fin_fund: \"finite{(t, u). s setinterleaves ((t, u), A)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {(t, u). s setinterleaves ((t, u), A)}", "proof (induction \"length s\" arbitrary:s rule:nat_less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<forall>m<length s.\n          \\<forall>x.\n             m = length x \\<longrightarrow>\n             finite {(t, u). x setinterleaves ((t, u), A)} \\<Longrightarrow>\n       finite {(t, u). s setinterleaves ((t, u), A)}", "case 1"], ["proof (state)\nthis:\n  \\<forall>m<length s.\n     \\<forall>x.\n        m = length x \\<longrightarrow>\n        finite {(t, u). x setinterleaves ((t, u), A)}\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<forall>m<length s.\n          \\<forall>x.\n             m = length x \\<longrightarrow>\n             finite {(t, u). x setinterleaves ((t, u), A)} \\<Longrightarrow>\n       finite {(t, u). s setinterleaves ((t, u), A)}", "have A:\"{(t, u). s setinterleaves((t, u), A)} \\<subseteq> {([],[])} \\<union> {(t, u). s setinterleaves ((t, u), A) \n  \\<and> (\\<exists> a list. t = a#list  \\<and> a \\<notin> A) \\<and> u = []} \\<union> {(t, u). s setinterleaves ((t, u), A) \\<and> \n  (\\<exists> a list. u = a#list \\<and> a \\<notin> A) \\<and> t = []} \\<union> {(t, u). s setinterleaves ((t, u), A) \\<and> \n  (\\<exists> a list aa lista. u = a#list \\<and> t = aa#lista)}\" (is \"?A \\<subseteq> {([],[])} \\<union> ?B \\<union> ?C \\<union> ?D\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. {(t, u). s setinterleaves ((t, u), A)}\n    \\<subseteq> {([], [])} \\<union>\n                {(t, u).\n                 s setinterleaves ((t, u), A) \\<and>\n                 (\\<exists>a list. t = a # list \\<and> a \\<notin> A) \\<and>\n                 u = []} \\<union>\n                {(t, u).\n                 s setinterleaves ((t, u), A) \\<and>\n                 (\\<exists>a list. u = a # list \\<and> a \\<notin> A) \\<and>\n                 t = []} \\<union>\n                {(t, u).\n                 s setinterleaves ((t, u), A) \\<and>\n                 (\\<exists>a list aa lista.\n                     u = a # list \\<and> t = aa # lista)}", "apply (rule subsetI, safe)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>(a, b) \\<notin> {}; s setinterleaves ((a, b), A);\n        a \\<noteq> [];\n        \\<nexists>aa list aaa lista. b = aa # list \\<and> a = aaa # lista;\n        \\<nexists>a list. b = a # list \\<and> a \\<notin> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>aa list.\n                            a = aa # list \\<and> aa \\<notin> A\n 2. \\<And>a b.\n       \\<lbrakk>(a, b) \\<notin> {}; s setinterleaves ((a, b), A);\n        a \\<noteq> [];\n        \\<nexists>aa list aaa lista. b = aa # list \\<and> a = aaa # lista;\n        \\<nexists>a list. b = a # list \\<and> a \\<notin> A\\<rbrakk>\n       \\<Longrightarrow> b = []\n 3. \\<And>a b.\n       \\<lbrakk>(a, b) \\<notin> {}; s setinterleaves ((a, b), A);\n        a \\<noteq> [];\n        \\<nexists>aa list aaa lista. b = aa # list \\<and> a = aaa # lista;\n        a \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> \\<exists>aa list.\n                            a = aa # list \\<and> aa \\<notin> A\n 4. \\<And>a b.\n       \\<lbrakk>(a, b) \\<notin> {}; s setinterleaves ((a, b), A);\n        a \\<noteq> [];\n        \\<nexists>aa list aaa lista. b = aa # list \\<and> a = aaa # lista;\n        a \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> b = []\n 5. \\<And>a b.\n       \\<lbrakk>(a, b) \\<notin> {}; s setinterleaves ((a, b), A);\n        b \\<noteq> [];\n        \\<nexists>aa list aaa lista. b = aa # list \\<and> a = aaa # lista;\n        \\<nexists>a list. b = a # list \\<and> a \\<notin> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>aa list.\n                            a = aa # list \\<and> aa \\<notin> A\n 6. \\<And>a b.\n       \\<lbrakk>(a, b) \\<notin> {}; s setinterleaves ((a, b), A);\n        b \\<noteq> [];\n        \\<nexists>aa list aaa lista. b = aa # list \\<and> a = aaa # lista;\n        \\<nexists>a list. b = a # list \\<and> a \\<notin> A\\<rbrakk>\n       \\<Longrightarrow> b = []\n 7. \\<And>a b.\n       \\<lbrakk>(a, b) \\<notin> {}; s setinterleaves ((a, b), A);\n        b \\<noteq> [];\n        \\<nexists>aa list aaa lista. b = aa # list \\<and> a = aaa # lista;\n        a \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> \\<exists>aa list.\n                            a = aa # list \\<and> aa \\<notin> A\n 8. \\<And>a b.\n       \\<lbrakk>(a, b) \\<notin> {}; s setinterleaves ((a, b), A);\n        b \\<noteq> [];\n        \\<nexists>aa list aaa lista. b = aa # list \\<and> a = aaa # lista;\n        a \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> b = []", "apply(simp_all add: neq_Nil_conv)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>s setinterleaves ((a, b), A); \\<exists>y ys. a = y # ys;\n        \\<forall>a list. b \\<noteq> a # list\\<rbrakk>\n       \\<Longrightarrow> \\<exists>aa.\n                            (\\<exists>list. a = aa # list) \\<and>\n                            aa \\<notin> A\n 2. \\<And>a b.\n       \\<lbrakk>s setinterleaves ((a, b), A); \\<exists>y ys. a = y # ys;\n        \\<forall>a list. b \\<noteq> a # list\\<rbrakk>\n       \\<Longrightarrow> b = []\n 3. \\<And>a b.\n       \\<lbrakk>s setinterleaves ((a, b), A);\n        (\\<forall>a list. b \\<noteq> a # list) \\<or>\n        (\\<forall>aa lista. a \\<noteq> aa # lista);\n        \\<exists>y ys. a = y # ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>aa.\n                            (\\<exists>list. a = aa # list) \\<and>\n                            aa \\<notin> A\n 4. \\<And>a b.\n       \\<lbrakk>s setinterleaves ((a, b), A);\n        (\\<forall>a list. b \\<noteq> a # list) \\<or>\n        (\\<forall>aa lista. a \\<noteq> aa # lista);\n        \\<exists>y ys. a = y # ys\\<rbrakk>\n       \\<Longrightarrow> b = []\n 5. \\<And>a b.\n       \\<lbrakk>s setinterleaves ((a, b), A); \\<exists>y ys. b = y # ys;\n        \\<forall>aa lista. a \\<noteq> aa # lista;\n        \\<forall>a.\n           (\\<forall>list. b \\<noteq> a # list) \\<or> a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>a b.\n       \\<lbrakk>s setinterleaves ((a, b), A); \\<exists>y ys. b = y # ys;\n        \\<forall>aa lista. a \\<noteq> aa # lista;\n        \\<forall>a.\n           (\\<forall>list. b \\<noteq> a # list) \\<or> a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> b = []", "apply (metis Sync.si_empty2 Sync.sym empty_iff list.exhaust_sel)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>s setinterleaves ((a, b), A); \\<exists>y ys. a = y # ys;\n        \\<forall>a list. b \\<noteq> a # list\\<rbrakk>\n       \\<Longrightarrow> b = []\n 2. \\<And>a b.\n       \\<lbrakk>s setinterleaves ((a, b), A);\n        (\\<forall>a list. b \\<noteq> a # list) \\<or>\n        (\\<forall>aa lista. a \\<noteq> aa # lista);\n        \\<exists>y ys. a = y # ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>aa.\n                            (\\<exists>list. a = aa # list) \\<and>\n                            aa \\<notin> A\n 3. \\<And>a b.\n       \\<lbrakk>s setinterleaves ((a, b), A);\n        (\\<forall>a list. b \\<noteq> a # list) \\<or>\n        (\\<forall>aa lista. a \\<noteq> aa # lista);\n        \\<exists>y ys. a = y # ys\\<rbrakk>\n       \\<Longrightarrow> b = []\n 4. \\<And>a b.\n       \\<lbrakk>s setinterleaves ((a, b), A); \\<exists>y ys. b = y # ys;\n        \\<forall>aa lista. a \\<noteq> aa # lista;\n        \\<forall>a.\n           (\\<forall>list. b \\<noteq> a # list) \\<or> a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>a b.\n       \\<lbrakk>s setinterleaves ((a, b), A); \\<exists>y ys. b = y # ys;\n        \\<forall>aa lista. a \\<noteq> aa # lista;\n        \\<forall>a.\n           (\\<forall>list. b \\<noteq> a # list) \\<or> a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> b = []", "using list.exhaust_sel"], ["proof (prove)\nusing this:\n  \\<lbrakk>?list = [] \\<Longrightarrow> ?P;\n   ?list = hd ?list # tl ?list \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (5 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>s setinterleaves ((a, b), A); \\<exists>y ys. a = y # ys;\n        \\<forall>a list. b \\<noteq> a # list\\<rbrakk>\n       \\<Longrightarrow> b = []\n 2. \\<And>a b.\n       \\<lbrakk>s setinterleaves ((a, b), A);\n        (\\<forall>a list. b \\<noteq> a # list) \\<or>\n        (\\<forall>aa lista. a \\<noteq> aa # lista);\n        \\<exists>y ys. a = y # ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>aa.\n                            (\\<exists>list. a = aa # list) \\<and>\n                            aa \\<notin> A\n 3. \\<And>a b.\n       \\<lbrakk>s setinterleaves ((a, b), A);\n        (\\<forall>a list. b \\<noteq> a # list) \\<or>\n        (\\<forall>aa lista. a \\<noteq> aa # lista);\n        \\<exists>y ys. a = y # ys\\<rbrakk>\n       \\<Longrightarrow> b = []\n 4. \\<And>a b.\n       \\<lbrakk>s setinterleaves ((a, b), A); \\<exists>y ys. b = y # ys;\n        \\<forall>aa lista. a \\<noteq> aa # lista;\n        \\<forall>a.\n           (\\<forall>list. b \\<noteq> a # list) \\<or> a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>a b.\n       \\<lbrakk>s setinterleaves ((a, b), A); \\<exists>y ys. b = y # ys;\n        \\<forall>aa lista. a \\<noteq> aa # lista;\n        \\<forall>a.\n           (\\<forall>list. b \\<noteq> a # list) \\<or> a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> b = []", "apply blast"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>s setinterleaves ((a, b), A);\n        (\\<forall>a list. b \\<noteq> a # list) \\<or>\n        (\\<forall>aa lista. a \\<noteq> aa # lista);\n        \\<exists>y ys. a = y # ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>aa.\n                            (\\<exists>list. a = aa # list) \\<and>\n                            aa \\<notin> A\n 2. \\<And>a b.\n       \\<lbrakk>s setinterleaves ((a, b), A);\n        (\\<forall>a list. b \\<noteq> a # list) \\<or>\n        (\\<forall>aa lista. a \\<noteq> aa # lista);\n        \\<exists>y ys. a = y # ys\\<rbrakk>\n       \\<Longrightarrow> b = []\n 3. \\<And>a b.\n       \\<lbrakk>s setinterleaves ((a, b), A); \\<exists>y ys. b = y # ys;\n        \\<forall>aa lista. a \\<noteq> aa # lista;\n        \\<forall>a.\n           (\\<forall>list. b \\<noteq> a # list) \\<or> a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>a b.\n       \\<lbrakk>s setinterleaves ((a, b), A); \\<exists>y ys. b = y # ys;\n        \\<forall>aa lista. a \\<noteq> aa # lista;\n        \\<forall>a.\n           (\\<forall>list. b \\<noteq> a # list) \\<or> a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> b = []", "apply (metis Sync.sym emptyLeftNonSync list.exhaust_sel list.set_intros(1))"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>s setinterleaves ((a, b), A);\n        (\\<forall>a list. b \\<noteq> a # list) \\<or>\n        (\\<forall>aa lista. a \\<noteq> aa # lista);\n        \\<exists>y ys. a = y # ys\\<rbrakk>\n       \\<Longrightarrow> b = []\n 2. \\<And>a b.\n       \\<lbrakk>s setinterleaves ((a, b), A); \\<exists>y ys. b = y # ys;\n        \\<forall>aa lista. a \\<noteq> aa # lista;\n        \\<forall>a.\n           (\\<forall>list. b \\<noteq> a # list) \\<or> a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>a b.\n       \\<lbrakk>s setinterleaves ((a, b), A); \\<exists>y ys. b = y # ys;\n        \\<forall>aa lista. a \\<noteq> aa # lista;\n        \\<forall>a.\n           (\\<forall>list. b \\<noteq> a # list) \\<or> a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> b = []", "using list.exhaust_sel"], ["proof (prove)\nusing this:\n  \\<lbrakk>?list = [] \\<Longrightarrow> ?P;\n   ?list = hd ?list # tl ?list \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>s setinterleaves ((a, b), A);\n        (\\<forall>a list. b \\<noteq> a # list) \\<or>\n        (\\<forall>aa lista. a \\<noteq> aa # lista);\n        \\<exists>y ys. a = y # ys\\<rbrakk>\n       \\<Longrightarrow> b = []\n 2. \\<And>a b.\n       \\<lbrakk>s setinterleaves ((a, b), A); \\<exists>y ys. b = y # ys;\n        \\<forall>aa lista. a \\<noteq> aa # lista;\n        \\<forall>a.\n           (\\<forall>list. b \\<noteq> a # list) \\<or> a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>a b.\n       \\<lbrakk>s setinterleaves ((a, b), A); \\<exists>y ys. b = y # ys;\n        \\<forall>aa lista. a \\<noteq> aa # lista;\n        \\<forall>a.\n           (\\<forall>list. b \\<noteq> a # list) \\<or> a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> b = []", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>s setinterleaves ((a, b), A); \\<exists>y ys. b = y # ys;\n        \\<forall>aa lista. a \\<noteq> aa # lista;\n        \\<forall>a.\n           (\\<forall>list. b \\<noteq> a # list) \\<or> a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>a b.\n       \\<lbrakk>s setinterleaves ((a, b), A); \\<exists>y ys. b = y # ys;\n        \\<forall>aa lista. a \\<noteq> aa # lista;\n        \\<forall>a.\n           (\\<forall>list. b \\<noteq> a # list) \\<or> a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> b = []", "apply (metis emptyLeftNonSync list.exhaust_sel list.set_intros(1))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>s setinterleaves ((a, b), A); \\<exists>y ys. b = y # ys;\n        \\<forall>aa lista. a \\<noteq> aa # lista;\n        \\<forall>a.\n           (\\<forall>list. b \\<noteq> a # list) \\<or> a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> b = []", "by (metis Sync.si_empty2 Sync.sym empty_iff list.exhaust_sel)"], ["proof (state)\nthis:\n  {(t, u). s setinterleaves ((t, u), A)}\n  \\<subseteq> {([], [])} \\<union>\n              {(t, u).\n               s setinterleaves ((t, u), A) \\<and>\n               (\\<exists>a list. t = a # list \\<and> a \\<notin> A) \\<and>\n               u = []} \\<union>\n              {(t, u).\n               s setinterleaves ((t, u), A) \\<and>\n               (\\<exists>a list. u = a # list \\<and> a \\<notin> A) \\<and>\n               t = []} \\<union>\n              {(t, u).\n               s setinterleaves ((t, u), A) \\<and>\n               (\\<exists>a list aa lista.\n                   u = a # list \\<and> t = aa # lista)}\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<forall>m<length s.\n          \\<forall>x.\n             m = length x \\<longrightarrow>\n             finite {(t, u). x setinterleaves ((t, u), A)} \\<Longrightarrow>\n       finite {(t, u). s setinterleaves ((t, u), A)}", "have a1:\"?B \\<subseteq> { ((hd s#list), [])| list. (tl s) setinterleaves ((list, []), A) \\<and> (hd s) \\<notin> A}\" \n  (is \"?B  \\<subseteq> ?B1\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. {(t, u).\n     s setinterleaves ((t, u), A) \\<and>\n     (\\<exists>a list. t = a # list \\<and> a \\<notin> A) \\<and> u = []}\n    \\<subseteq> {(hd s # list, []) |list.\n                 tl s setinterleaves ((list, []), A) \\<and> hd s \\<notin> A}", "by auto"], ["proof (state)\nthis:\n  {(t, u).\n   s setinterleaves ((t, u), A) \\<and>\n   (\\<exists>a list. t = a # list \\<and> a \\<notin> A) \\<and> u = []}\n  \\<subseteq> {(hd s # list, []) |list.\n               tl s setinterleaves ((list, []), A) \\<and> hd s \\<notin> A}\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<forall>m<length s.\n          \\<forall>x.\n             m = length x \\<longrightarrow>\n             finite {(t, u). x setinterleaves ((t, u), A)} \\<Longrightarrow>\n       finite {(t, u). s setinterleaves ((t, u), A)}", "define f where a2:\"f = (\\<lambda>a (t, (u::'a event list)). ((a::'a event)#t, ([]::'a event list)))\""], ["proof (state)\nthis:\n  f = (\\<lambda>a (t, u). (a # t, []))\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<forall>m<length s.\n          \\<forall>x.\n             m = length x \\<longrightarrow>\n             finite {(t, u). x setinterleaves ((t, u), A)} \\<Longrightarrow>\n       finite {(t, u). s setinterleaves ((t, u), A)}", "have a3:\"?B1 \\<subseteq> {(hd s # list, []) |list. tl s setinterleaves ((list, []), A)} \" (is \"?B1  \\<subseteq> ?B2\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. {(hd s # list, []) |list.\n     tl s setinterleaves ((list, []), A) \\<and> hd s \\<notin> A}\n    \\<subseteq> {(hd s # list, []) |list.\n                 tl s setinterleaves ((list, []), A)}", "by blast"], ["proof (state)\nthis:\n  {(hd s # list, []) |list.\n   tl s setinterleaves ((list, []), A) \\<and> hd s \\<notin> A}\n  \\<subseteq> {(hd s # list, []) |list. tl s setinterleaves ((list, []), A)}\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<forall>m<length s.\n          \\<forall>x.\n             m = length x \\<longrightarrow>\n             finite {(t, u). x setinterleaves ((t, u), A)} \\<Longrightarrow>\n       finite {(t, u). s setinterleaves ((t, u), A)}", "from a1 a3"], ["proof (chain)\npicking this:\n  {(t, u).\n   s setinterleaves ((t, u), A) \\<and>\n   (\\<exists>a list. t = a # list \\<and> a \\<notin> A) \\<and> u = []}\n  \\<subseteq> {(hd s # list, []) |list.\n               tl s setinterleaves ((list, []), A) \\<and> hd s \\<notin> A}\n  {(hd s # list, []) |list.\n   tl s setinterleaves ((list, []), A) \\<and> hd s \\<notin> A}\n  \\<subseteq> {(hd s # list, []) |list. tl s setinterleaves ((list, []), A)}", "have a13:\"?B \\<subseteq> ?B2\""], ["proof (prove)\nusing this:\n  {(t, u).\n   s setinterleaves ((t, u), A) \\<and>\n   (\\<exists>a list. t = a # list \\<and> a \\<notin> A) \\<and> u = []}\n  \\<subseteq> {(hd s # list, []) |list.\n               tl s setinterleaves ((list, []), A) \\<and> hd s \\<notin> A}\n  {(hd s # list, []) |list.\n   tl s setinterleaves ((list, []), A) \\<and> hd s \\<notin> A}\n  \\<subseteq> {(hd s # list, []) |list. tl s setinterleaves ((list, []), A)}\n\ngoal (1 subgoal):\n 1. {(t, u).\n     s setinterleaves ((t, u), A) \\<and>\n     (\\<exists>a list. t = a # list \\<and> a \\<notin> A) \\<and> u = []}\n    \\<subseteq> {(hd s # list, []) |list.\n                 tl s setinterleaves ((list, []), A)}", "by simp"], ["proof (state)\nthis:\n  {(t, u).\n   s setinterleaves ((t, u), A) \\<and>\n   (\\<exists>a list. t = a # list \\<and> a \\<notin> A) \\<and> u = []}\n  \\<subseteq> {(hd s # list, []) |list. tl s setinterleaves ((list, []), A)}\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<forall>m<length s.\n          \\<forall>x.\n             m = length x \\<longrightarrow>\n             finite {(t, u). x setinterleaves ((t, u), A)} \\<Longrightarrow>\n       finite {(t, u). s setinterleaves ((t, u), A)}", "have AA: \"finite ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     {(t, u).\n      s setinterleaves ((t, u), A) \\<and>\n      (\\<exists>a list. t = a # list \\<and> a \\<notin> A) \\<and> u = []}", "proof (cases s)"], ["proof (state)\ngoal (2 subgoals):\n 1. s = [] \\<Longrightarrow>\n    finite\n     {(t, u).\n      s setinterleaves ((t, u), A) \\<and>\n      (\\<exists>a list. t = a # list \\<and> a \\<notin> A) \\<and> u = []}\n 2. \\<And>a list.\n       s = a # list \\<Longrightarrow>\n       finite\n        {(t, u).\n         s setinterleaves ((t, u), A) \\<and>\n         (\\<exists>a list. t = a # list \\<and> a \\<notin> A) \\<and> u = []}", "case Nil"], ["proof (state)\nthis:\n  s = []\n\ngoal (2 subgoals):\n 1. s = [] \\<Longrightarrow>\n    finite\n     {(t, u).\n      s setinterleaves ((t, u), A) \\<and>\n      (\\<exists>a list. t = a # list \\<and> a \\<notin> A) \\<and> u = []}\n 2. \\<And>a list.\n       s = a # list \\<Longrightarrow>\n       finite\n        {(t, u).\n         s setinterleaves ((t, u), A) \\<and>\n         (\\<exists>a list. t = a # list \\<and> a \\<notin> A) \\<and> u = []}", "then"], ["proof (chain)\npicking this:\n  s = []", "show ?thesis"], ["proof (prove)\nusing this:\n  s = []\n\ngoal (1 subgoal):\n 1. finite\n     {(t, u).\n      s setinterleaves ((t, u), A) \\<and>\n      (\\<exists>a list. t = a # list \\<and> a \\<notin> A) \\<and> u = []}", "using not_finite_existsD"], ["proof (prove)\nusing this:\n  s = []\n  infinite {a. ?P a} \\<Longrightarrow> \\<exists>a. ?P a\n\ngoal (1 subgoal):\n 1. finite\n     {(t, u).\n      s setinterleaves ((t, u), A) \\<and>\n      (\\<exists>a list. t = a # list \\<and> a \\<notin> A) \\<and> u = []}", "by fastforce"], ["proof (state)\nthis:\n  finite\n   {(t, u).\n    s setinterleaves ((t, u), A) \\<and>\n    (\\<exists>a list. t = a # list \\<and> a \\<notin> A) \\<and> u = []}\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       s = a # list \\<Longrightarrow>\n       finite\n        {(t, u).\n         s setinterleaves ((t, u), A) \\<and>\n         (\\<exists>a list. t = a # list \\<and> a \\<notin> A) \\<and> u = []}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       s = a # list \\<Longrightarrow>\n       finite\n        {(t, u).\n         s setinterleaves ((t, u), A) \\<and>\n         (\\<exists>a list. t = a # list \\<and> a \\<notin> A) \\<and> u = []}", "case (Cons a list)"], ["proof (state)\nthis:\n  s = a # list\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       s = a # list \\<Longrightarrow>\n       finite\n        {(t, u).\n         s setinterleaves ((t, u), A) \\<and>\n         (\\<exists>a list. t = a # list \\<and> a \\<notin> A) \\<and> u = []}", "hence aa:\"finite{(t,u).(tl s) setinterleaves((t, u), A)}\""], ["proof (prove)\nusing this:\n  s = a # list\n\ngoal (1 subgoal):\n 1. finite {(t, u). tl s setinterleaves ((t, u), A)}", "using 1[THEN spec, of \"length (tl s)\"]"], ["proof (prove)\nusing this:\n  s = a # list\n  length (tl s) < length s \\<longrightarrow>\n  (\\<forall>x.\n      length (tl s) = length x \\<longrightarrow>\n      finite {(t, u). x setinterleaves ((t, u), A)})\n\ngoal (1 subgoal):\n 1. finite {(t, u). tl s setinterleaves ((t, u), A)}", "by (simp)"], ["proof (state)\nthis:\n  finite {(t, u). tl s setinterleaves ((t, u), A)}\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       s = a # list \\<Longrightarrow>\n       finite\n        {(t, u).\n         s setinterleaves ((t, u), A) \\<and>\n         (\\<exists>a list. t = a # list \\<and> a \\<notin> A) \\<and> u = []}", "have \"{(hd s#list, [])|list. tl s setinterleaves((list,[]),A)}\\<subseteq>(\\<lambda>(t, u).f(hd s)(t, u)) `{(t, u). \n    tl s setinterleaves ((t, u), A)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {(hd s # list, []) |list. tl s setinterleaves ((list, []), A)}\n    \\<subseteq> (\\<lambda>(t, u). f (hd s) (t, u)) `\n                {(t, u). tl s setinterleaves ((t, u), A)}", "using a2"], ["proof (prove)\nusing this:\n  f = (\\<lambda>a (t, u). (a # t, []))\n\ngoal (1 subgoal):\n 1. {(hd s # list, []) |list. tl s setinterleaves ((list, []), A)}\n    \\<subseteq> (\\<lambda>(t, u). f (hd s) (t, u)) `\n                {(t, u). tl s setinterleaves ((t, u), A)}", "by auto"], ["proof (state)\nthis:\n  {(hd s # list, []) |list. tl s setinterleaves ((list, []), A)}\n  \\<subseteq> (\\<lambda>(t, u). f (hd s) (t, u)) `\n              {(t, u). tl s setinterleaves ((t, u), A)}\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       s = a # list \\<Longrightarrow>\n       finite\n        {(t, u).\n         s setinterleaves ((t, u), A) \\<and>\n         (\\<exists>a list. t = a # list \\<and> a \\<notin> A) \\<and> u = []}", "hence \"finite ?B2\""], ["proof (prove)\nusing this:\n  {(hd s # list, []) |list. tl s setinterleaves ((list, []), A)}\n  \\<subseteq> (\\<lambda>(t, u). f (hd s) (t, u)) `\n              {(t, u). tl s setinterleaves ((t, u), A)}\n\ngoal (1 subgoal):\n 1. finite {(hd s # list, []) |list. tl s setinterleaves ((list, []), A)}", "using finite_imageI [of \"{(t, u). (tl s) setinterleaves ((t, u), A)}\" \n    \"\\<lambda>(t, u). f (hd s) (t, u)\", OF aa]"], ["proof (prove)\nusing this:\n  {(hd s # list, []) |list. tl s setinterleaves ((list, []), A)}\n  \\<subseteq> (\\<lambda>(t, u). f (hd s) (t, u)) `\n              {(t, u). tl s setinterleaves ((t, u), A)}\n  finite\n   ((\\<lambda>(t, u). f (hd s) (t, u)) `\n    {(t, u). tl s setinterleaves ((t, u), A)})\n\ngoal (1 subgoal):\n 1. finite {(hd s # list, []) |list. tl s setinterleaves ((list, []), A)}", "using rev_finite_subset"], ["proof (prove)\nusing this:\n  {(hd s # list, []) |list. tl s setinterleaves ((list, []), A)}\n  \\<subseteq> (\\<lambda>(t, u). f (hd s) (t, u)) `\n              {(t, u). tl s setinterleaves ((t, u), A)}\n  finite\n   ((\\<lambda>(t, u). f (hd s) (t, u)) `\n    {(t, u). tl s setinterleaves ((t, u), A)})\n  \\<lbrakk>finite ?B; ?A \\<subseteq> ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. finite {(hd s # list, []) |list. tl s setinterleaves ((list, []), A)}", "by auto"], ["proof (state)\nthis:\n  finite {(hd s # list, []) |list. tl s setinterleaves ((list, []), A)}\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       s = a # list \\<Longrightarrow>\n       finite\n        {(t, u).\n         s setinterleaves ((t, u), A) \\<and>\n         (\\<exists>a list. t = a # list \\<and> a \\<notin> A) \\<and> u = []}", "then"], ["proof (chain)\npicking this:\n  finite {(hd s # list, []) |list. tl s setinterleaves ((list, []), A)}", "show ?thesis"], ["proof (prove)\nusing this:\n  finite {(hd s # list, []) |list. tl s setinterleaves ((list, []), A)}\n\ngoal (1 subgoal):\n 1. finite\n     {(t, u).\n      s setinterleaves ((t, u), A) \\<and>\n      (\\<exists>a list. t = a # list \\<and> a \\<notin> A) \\<and> u = []}", "using a13"], ["proof (prove)\nusing this:\n  finite {(hd s # list, []) |list. tl s setinterleaves ((list, []), A)}\n  {(t, u).\n   s setinterleaves ((t, u), A) \\<and>\n   (\\<exists>a list. t = a # list \\<and> a \\<notin> A) \\<and> u = []}\n  \\<subseteq> {(hd s # list, []) |list. tl s setinterleaves ((list, []), A)}\n\ngoal (1 subgoal):\n 1. finite\n     {(t, u).\n      s setinterleaves ((t, u), A) \\<and>\n      (\\<exists>a list. t = a # list \\<and> a \\<notin> A) \\<and> u = []}", "by (meson rev_finite_subset)"], ["proof (state)\nthis:\n  finite\n   {(t, u).\n    s setinterleaves ((t, u), A) \\<and>\n    (\\<exists>a list. t = a # list \\<and> a \\<notin> A) \\<and> u = []}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite\n   {(t, u).\n    s setinterleaves ((t, u), A) \\<and>\n    (\\<exists>a list. t = a # list \\<and> a \\<notin> A) \\<and> u = []}\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<forall>m<length s.\n          \\<forall>x.\n             m = length x \\<longrightarrow>\n             finite {(t, u). x setinterleaves ((t, u), A)} \\<Longrightarrow>\n       finite {(t, u). s setinterleaves ((t, u), A)}", "have a1:\"?C \\<subseteq> { ([],(hd s#list))| list. (tl s) setinterleaves (([],list), A) \\<and> (hd s) \\<notin> A}\" \n  (is \"?C  \\<subseteq> ?C1\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. {(t, u).\n     s setinterleaves ((t, u), A) \\<and>\n     (\\<exists>a list. u = a # list \\<and> a \\<notin> A) \\<and> t = []}\n    \\<subseteq> {([], hd s # list) |list.\n                 tl s setinterleaves (([], list), A) \\<and> hd s \\<notin> A}", "by auto"], ["proof (state)\nthis:\n  {(t, u).\n   s setinterleaves ((t, u), A) \\<and>\n   (\\<exists>a list. u = a # list \\<and> a \\<notin> A) \\<and> t = []}\n  \\<subseteq> {([], hd s # list) |list.\n               tl s setinterleaves (([], list), A) \\<and> hd s \\<notin> A}\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<forall>m<length s.\n          \\<forall>x.\n             m = length x \\<longrightarrow>\n             finite {(t, u). x setinterleaves ((t, u), A)} \\<Longrightarrow>\n       finite {(t, u). s setinterleaves ((t, u), A)}", "define f where a2:\"f = (\\<lambda>a ((t::'a event list), u). (([]::'a event list), (a::'a event)#u))\""], ["proof (state)\nthis:\n  f = (\\<lambda>a (t, u). ([], a # u))\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<forall>m<length s.\n          \\<forall>x.\n             m = length x \\<longrightarrow>\n             finite {(t, u). x setinterleaves ((t, u), A)} \\<Longrightarrow>\n       finite {(t, u). s setinterleaves ((t, u), A)}", "have a3:\"?C1 \\<subseteq> {([],hd s # list) |list. tl s setinterleaves (([],list), A)} \" (is \"?C1  \\<subseteq> ?C2\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. {([], hd s # list) |list.\n     tl s setinterleaves (([], list), A) \\<and> hd s \\<notin> A}\n    \\<subseteq> {([], hd s # list) |list.\n                 tl s setinterleaves (([], list), A)}", "by blast"], ["proof (state)\nthis:\n  {([], hd s # list) |list.\n   tl s setinterleaves (([], list), A) \\<and> hd s \\<notin> A}\n  \\<subseteq> {([], hd s # list) |list. tl s setinterleaves (([], list), A)}\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<forall>m<length s.\n          \\<forall>x.\n             m = length x \\<longrightarrow>\n             finite {(t, u). x setinterleaves ((t, u), A)} \\<Longrightarrow>\n       finite {(t, u). s setinterleaves ((t, u), A)}", "from a1 a3"], ["proof (chain)\npicking this:\n  {(t, u).\n   s setinterleaves ((t, u), A) \\<and>\n   (\\<exists>a list. u = a # list \\<and> a \\<notin> A) \\<and> t = []}\n  \\<subseteq> {([], hd s # list) |list.\n               tl s setinterleaves (([], list), A) \\<and> hd s \\<notin> A}\n  {([], hd s # list) |list.\n   tl s setinterleaves (([], list), A) \\<and> hd s \\<notin> A}\n  \\<subseteq> {([], hd s # list) |list. tl s setinterleaves (([], list), A)}", "have a13:\"?C \\<subseteq> ?C2\""], ["proof (prove)\nusing this:\n  {(t, u).\n   s setinterleaves ((t, u), A) \\<and>\n   (\\<exists>a list. u = a # list \\<and> a \\<notin> A) \\<and> t = []}\n  \\<subseteq> {([], hd s # list) |list.\n               tl s setinterleaves (([], list), A) \\<and> hd s \\<notin> A}\n  {([], hd s # list) |list.\n   tl s setinterleaves (([], list), A) \\<and> hd s \\<notin> A}\n  \\<subseteq> {([], hd s # list) |list. tl s setinterleaves (([], list), A)}\n\ngoal (1 subgoal):\n 1. {(t, u).\n     s setinterleaves ((t, u), A) \\<and>\n     (\\<exists>a list. u = a # list \\<and> a \\<notin> A) \\<and> t = []}\n    \\<subseteq> {([], hd s # list) |list.\n                 tl s setinterleaves (([], list), A)}", "by simp"], ["proof (state)\nthis:\n  {(t, u).\n   s setinterleaves ((t, u), A) \\<and>\n   (\\<exists>a list. u = a # list \\<and> a \\<notin> A) \\<and> t = []}\n  \\<subseteq> {([], hd s # list) |list. tl s setinterleaves (([], list), A)}\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<forall>m<length s.\n          \\<forall>x.\n             m = length x \\<longrightarrow>\n             finite {(t, u). x setinterleaves ((t, u), A)} \\<Longrightarrow>\n       finite {(t, u). s setinterleaves ((t, u), A)}", "have AAA:\"finite ?C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     {(t, u).\n      s setinterleaves ((t, u), A) \\<and>\n      (\\<exists>a list. u = a # list \\<and> a \\<notin> A) \\<and> t = []}", "proof (cases s)"], ["proof (state)\ngoal (2 subgoals):\n 1. s = [] \\<Longrightarrow>\n    finite\n     {(t, u).\n      s setinterleaves ((t, u), A) \\<and>\n      (\\<exists>a list. u = a # list \\<and> a \\<notin> A) \\<and> t = []}\n 2. \\<And>a list.\n       s = a # list \\<Longrightarrow>\n       finite\n        {(t, u).\n         s setinterleaves ((t, u), A) \\<and>\n         (\\<exists>a list. u = a # list \\<and> a \\<notin> A) \\<and> t = []}", "case Nil"], ["proof (state)\nthis:\n  s = []\n\ngoal (2 subgoals):\n 1. s = [] \\<Longrightarrow>\n    finite\n     {(t, u).\n      s setinterleaves ((t, u), A) \\<and>\n      (\\<exists>a list. u = a # list \\<and> a \\<notin> A) \\<and> t = []}\n 2. \\<And>a list.\n       s = a # list \\<Longrightarrow>\n       finite\n        {(t, u).\n         s setinterleaves ((t, u), A) \\<and>\n         (\\<exists>a list. u = a # list \\<and> a \\<notin> A) \\<and> t = []}", "then"], ["proof (chain)\npicking this:\n  s = []", "show ?thesis"], ["proof (prove)\nusing this:\n  s = []\n\ngoal (1 subgoal):\n 1. finite\n     {(t, u).\n      s setinterleaves ((t, u), A) \\<and>\n      (\\<exists>a list. u = a # list \\<and> a \\<notin> A) \\<and> t = []}", "using not_finite_existsD"], ["proof (prove)\nusing this:\n  s = []\n  infinite {a. ?P a} \\<Longrightarrow> \\<exists>a. ?P a\n\ngoal (1 subgoal):\n 1. finite\n     {(t, u).\n      s setinterleaves ((t, u), A) \\<and>\n      (\\<exists>a list. u = a # list \\<and> a \\<notin> A) \\<and> t = []}", "by fastforce"], ["proof (state)\nthis:\n  finite\n   {(t, u).\n    s setinterleaves ((t, u), A) \\<and>\n    (\\<exists>a list. u = a # list \\<and> a \\<notin> A) \\<and> t = []}\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       s = a # list \\<Longrightarrow>\n       finite\n        {(t, u).\n         s setinterleaves ((t, u), A) \\<and>\n         (\\<exists>a list. u = a # list \\<and> a \\<notin> A) \\<and> t = []}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       s = a # list \\<Longrightarrow>\n       finite\n        {(t, u).\n         s setinterleaves ((t, u), A) \\<and>\n         (\\<exists>a list. u = a # list \\<and> a \\<notin> A) \\<and> t = []}", "case (Cons a list)"], ["proof (state)\nthis:\n  s = a # list\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       s = a # list \\<Longrightarrow>\n       finite\n        {(t, u).\n         s setinterleaves ((t, u), A) \\<and>\n         (\\<exists>a list. u = a # list \\<and> a \\<notin> A) \\<and> t = []}", "hence aa:\"finite {(t,u).(tl s)setinterleaves((t, u), A)}\""], ["proof (prove)\nusing this:\n  s = a # list\n\ngoal (1 subgoal):\n 1. finite {(t, u). tl s setinterleaves ((t, u), A)}", "using 1[THEN spec, of \"length (tl s)\"]"], ["proof (prove)\nusing this:\n  s = a # list\n  length (tl s) < length s \\<longrightarrow>\n  (\\<forall>x.\n      length (tl s) = length x \\<longrightarrow>\n      finite {(t, u). x setinterleaves ((t, u), A)})\n\ngoal (1 subgoal):\n 1. finite {(t, u). tl s setinterleaves ((t, u), A)}", "by (simp)"], ["proof (state)\nthis:\n  finite {(t, u). tl s setinterleaves ((t, u), A)}\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       s = a # list \\<Longrightarrow>\n       finite\n        {(t, u).\n         s setinterleaves ((t, u), A) \\<and>\n         (\\<exists>a list. u = a # list \\<and> a \\<notin> A) \\<and> t = []}", "have \"{([], hd s # list) |list. tl s setinterleaves (([], list), A)} \\<subseteq> (\\<lambda>(t, u). \n    f (hd s) (t, u)) ` {(t, u). tl s setinterleaves ((t, u), A)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {([], hd s # list) |list. tl s setinterleaves (([], list), A)}\n    \\<subseteq> (\\<lambda>(t, u). f (hd s) (t, u)) `\n                {(t, u). tl s setinterleaves ((t, u), A)}", "using a2"], ["proof (prove)\nusing this:\n  f = (\\<lambda>a (t, u). ([], a # u))\n\ngoal (1 subgoal):\n 1. {([], hd s # list) |list. tl s setinterleaves (([], list), A)}\n    \\<subseteq> (\\<lambda>(t, u). f (hd s) (t, u)) `\n                {(t, u). tl s setinterleaves ((t, u), A)}", "by auto"], ["proof (state)\nthis:\n  {([], hd s # list) |list. tl s setinterleaves (([], list), A)}\n  \\<subseteq> (\\<lambda>(t, u). f (hd s) (t, u)) `\n              {(t, u). tl s setinterleaves ((t, u), A)}\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       s = a # list \\<Longrightarrow>\n       finite\n        {(t, u).\n         s setinterleaves ((t, u), A) \\<and>\n         (\\<exists>a list. u = a # list \\<and> a \\<notin> A) \\<and> t = []}", "hence \"finite ?C2\""], ["proof (prove)\nusing this:\n  {([], hd s # list) |list. tl s setinterleaves (([], list), A)}\n  \\<subseteq> (\\<lambda>(t, u). f (hd s) (t, u)) `\n              {(t, u). tl s setinterleaves ((t, u), A)}\n\ngoal (1 subgoal):\n 1. finite {([], hd s # list) |list. tl s setinterleaves (([], list), A)}", "using finite_imageI [of \"{(t, u). (tl s) setinterleaves ((t, u), A)}\" \n    \"\\<lambda>(t, u). f (hd s) (t, u)\", OF aa]"], ["proof (prove)\nusing this:\n  {([], hd s # list) |list. tl s setinterleaves (([], list), A)}\n  \\<subseteq> (\\<lambda>(t, u). f (hd s) (t, u)) `\n              {(t, u). tl s setinterleaves ((t, u), A)}\n  finite\n   ((\\<lambda>(t, u). f (hd s) (t, u)) `\n    {(t, u). tl s setinterleaves ((t, u), A)})\n\ngoal (1 subgoal):\n 1. finite {([], hd s # list) |list. tl s setinterleaves (([], list), A)}", "using rev_finite_subset"], ["proof (prove)\nusing this:\n  {([], hd s # list) |list. tl s setinterleaves (([], list), A)}\n  \\<subseteq> (\\<lambda>(t, u). f (hd s) (t, u)) `\n              {(t, u). tl s setinterleaves ((t, u), A)}\n  finite\n   ((\\<lambda>(t, u). f (hd s) (t, u)) `\n    {(t, u). tl s setinterleaves ((t, u), A)})\n  \\<lbrakk>finite ?B; ?A \\<subseteq> ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. finite {([], hd s # list) |list. tl s setinterleaves (([], list), A)}", "by auto"], ["proof (state)\nthis:\n  finite {([], hd s # list) |list. tl s setinterleaves (([], list), A)}\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       s = a # list \\<Longrightarrow>\n       finite\n        {(t, u).\n         s setinterleaves ((t, u), A) \\<and>\n         (\\<exists>a list. u = a # list \\<and> a \\<notin> A) \\<and> t = []}", "then"], ["proof (chain)\npicking this:\n  finite {([], hd s # list) |list. tl s setinterleaves (([], list), A)}", "show ?thesis"], ["proof (prove)\nusing this:\n  finite {([], hd s # list) |list. tl s setinterleaves (([], list), A)}\n\ngoal (1 subgoal):\n 1. finite\n     {(t, u).\n      s setinterleaves ((t, u), A) \\<and>\n      (\\<exists>a list. u = a # list \\<and> a \\<notin> A) \\<and> t = []}", "using a13"], ["proof (prove)\nusing this:\n  finite {([], hd s # list) |list. tl s setinterleaves (([], list), A)}\n  {(t, u).\n   s setinterleaves ((t, u), A) \\<and>\n   (\\<exists>a list. u = a # list \\<and> a \\<notin> A) \\<and> t = []}\n  \\<subseteq> {([], hd s # list) |list. tl s setinterleaves (([], list), A)}\n\ngoal (1 subgoal):\n 1. finite\n     {(t, u).\n      s setinterleaves ((t, u), A) \\<and>\n      (\\<exists>a list. u = a # list \\<and> a \\<notin> A) \\<and> t = []}", "by (meson rev_finite_subset)"], ["proof (state)\nthis:\n  finite\n   {(t, u).\n    s setinterleaves ((t, u), A) \\<and>\n    (\\<exists>a list. u = a # list \\<and> a \\<notin> A) \\<and> t = []}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite\n   {(t, u).\n    s setinterleaves ((t, u), A) \\<and>\n    (\\<exists>a list. u = a # list \\<and> a \\<notin> A) \\<and> t = []}\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<forall>m<length s.\n          \\<forall>x.\n             m = length x \\<longrightarrow>\n             finite {(t, u). x setinterleaves ((t, u), A)} \\<Longrightarrow>\n       finite {(t, u). s setinterleaves ((t, u), A)}", "have dd0:\"?D \\<subseteq> {(a#l, aa#la)|a aa l la. s setinterleaves ((a#l, aa#la), A)}\" (is \"?D \\<subseteq> ?D1\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. {(t, u).\n     s setinterleaves ((t, u), A) \\<and>\n     (\\<exists>a list aa lista. u = a # list \\<and> t = aa # lista)}\n    \\<subseteq> {(a # l, aa # la) |a aa l la.\n                 s setinterleaves ((a # l, aa # la), A)}", "apply (rule subsetI, auto, simp split:if_splits)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>aa aaa list lista.\n       \\<lbrakk>aa \\<in> A; aaa = aa;\n        \\<exists>u.\n           s = aa # u \\<and> u setinterleaves ((lista, list), A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a aaa l la.\n                            (a = aaa \\<longrightarrow>\n                             (aaa \\<notin> A \\<longrightarrow>\n                              aa = aaa \\<and>\n                              lista = l \\<and>\n                              aa = aaa \\<and>\n                              list = la \\<and>\n                              ((\\<exists>u.\n                                   s = aaa # u \\<and>\n                                   u setinterleaves ((l, aaa #\n                   la), A)) \\<or>\n                               (\\<exists>u.\n                                   s = aaa # u \\<and>\n                                   u setinterleaves ((aaa #\n                l, la), A)))) \\<and>\n                             (aaa \\<in> A \\<longrightarrow>\n                              aa = aaa \\<and>\n                              lista = l \\<and>\n                              aa = aaa \\<and>\n                              list = la \\<and>\n                              (\\<exists>u.\n                                  s = aaa # u \\<and>\n                                  u setinterleaves ((l, la), A)))) \\<and>\n                            (a \\<noteq> aaa \\<longrightarrow>\n                             (aaa \\<notin> A \\<longrightarrow>\n                              (a \\<in> A \\<longrightarrow>\n                               aa = a \\<and>\n                               lista = l \\<and>\n                               aa = aaa \\<and>\n                               list = la \\<and>\n                               (\\<exists>u.\n                                   s = aaa # u \\<and>\n                                   u setinterleaves ((a #\n                l, la), A))) \\<and>\n                              (a \\<notin> A \\<longrightarrow>\n                               aa = a \\<and>\n                               lista = l \\<and>\n                               aa = aaa \\<and>\n                               list = la \\<and>\n                               ((\\<exists>u.\n                                    s = a # u \\<and>\n                                    u setinterleaves ((l, aaa #\n                    la), A)) \\<or>\n                                (\\<exists>u.\n                                    s = aaa # u \\<and>\n                                    u setinterleaves ((a #\n                 l, la), A))))) \\<and>\n                             (aaa \\<in> A \\<longrightarrow>\n                              a \\<notin> A \\<and>\n                              (a \\<notin> A \\<longrightarrow>\n                               aa = a \\<and>\n                               lista = l \\<and>\n                               aa = aaa \\<and>\n                               list = la \\<and>\n                               (\\<exists>u.\n                                   s = a # u \\<and>\n                                   u setinterleaves ((l, aaa # la), A)))))\n 2. \\<And>aa aaa list lista.\n       \\<lbrakk>aaa \\<in> A; aa \\<notin> A;\n        \\<exists>u.\n           s = aa # u \\<and>\n           u setinterleaves ((aaa # lista, list), A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a aab l la.\n                            (a = aab \\<longrightarrow>\n                             (aab \\<notin> A \\<longrightarrow>\n                              aaa = aab \\<and>\n                              lista = l \\<and>\n                              aa = aab \\<and>\n                              list = la \\<and>\n                              ((\\<exists>u.\n                                   s = aab # u \\<and>\n                                   u setinterleaves ((l, aab #\n                   la), A)) \\<or>\n                               (\\<exists>u.\n                                   s = aab # u \\<and>\n                                   u setinterleaves ((aab #\n                l, la), A)))) \\<and>\n                             (aab \\<in> A \\<longrightarrow>\n                              aaa = aab \\<and>\n                              lista = l \\<and>\n                              aa = aab \\<and>\n                              list = la \\<and>\n                              (\\<exists>u.\n                                  s = aab # u \\<and>\n                                  u setinterleaves ((l, la), A)))) \\<and>\n                            (a \\<noteq> aab \\<longrightarrow>\n                             (aab \\<notin> A \\<longrightarrow>\n                              (a \\<in> A \\<longrightarrow>\n                               aaa = a \\<and>\n                               lista = l \\<and>\n                               aa = aab \\<and>\n                               list = la \\<and>\n                               (\\<exists>u.\n                                   s = aab # u \\<and>\n                                   u setinterleaves ((a #\n                l, la), A))) \\<and>\n                              (a \\<notin> A \\<longrightarrow>\n                               aaa = a \\<and>\n                               lista = l \\<and>\n                               aa = aab \\<and>\n                               list = la \\<and>\n                               ((\\<exists>u.\n                                    s = a # u \\<and>\n                                    u setinterleaves ((l, aab #\n                    la), A)) \\<or>\n                                (\\<exists>u.\n                                    s = aab # u \\<and>\n                                    u setinterleaves ((a #\n                 l, la), A))))) \\<and>\n                             (aab \\<in> A \\<longrightarrow>\n                              a \\<notin> A \\<and>\n                              (a \\<notin> A \\<longrightarrow>\n                               aaa = a \\<and>\n                               lista = l \\<and>\n                               aa = aab \\<and>\n                               list = la \\<and>\n                               (\\<exists>u.\n                                   s = a # u \\<and>\n                                   u setinterleaves ((l, aab # la), A)))))\n 3. \\<And>aa aaa list lista.\n       \\<lbrakk>aaa \\<notin> A; aa \\<notin> A;\n        (\\<exists>u.\n            s = aaa # u \\<and>\n            u setinterleaves ((lista, aa # list), A)) \\<or>\n        (\\<exists>u.\n            s = aa # u \\<and>\n            u setinterleaves ((aaa # lista, list), A))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a aab l la.\n                            (a = aab \\<longrightarrow>\n                             (aab \\<notin> A \\<longrightarrow>\n                              aaa = aab \\<and>\n                              lista = l \\<and>\n                              aa = aab \\<and>\n                              list = la \\<and>\n                              ((\\<exists>u.\n                                   s = aab # u \\<and>\n                                   u setinterleaves ((l, aab #\n                   la), A)) \\<or>\n                               (\\<exists>u.\n                                   s = aab # u \\<and>\n                                   u setinterleaves ((aab #\n                l, la), A)))) \\<and>\n                             (aab \\<in> A \\<longrightarrow>\n                              aaa = aab \\<and>\n                              lista = l \\<and>\n                              aa = aab \\<and>\n                              list = la \\<and>\n                              (\\<exists>u.\n                                  s = aab # u \\<and>\n                                  u setinterleaves ((l, la), A)))) \\<and>\n                            (a \\<noteq> aab \\<longrightarrow>\n                             (aab \\<notin> A \\<longrightarrow>\n                              (a \\<in> A \\<longrightarrow>\n                               aaa = a \\<and>\n                               lista = l \\<and>\n                               aa = aab \\<and>\n                               list = la \\<and>\n                               (\\<exists>u.\n                                   s = aab # u \\<and>\n                                   u setinterleaves ((a #\n                l, la), A))) \\<and>\n                              (a \\<notin> A \\<longrightarrow>\n                               aaa = a \\<and>\n                               lista = l \\<and>\n                               aa = aab \\<and>\n                               list = la \\<and>\n                               ((\\<exists>u.\n                                    s = a # u \\<and>\n                                    u setinterleaves ((l, aab #\n                    la), A)) \\<or>\n                                (\\<exists>u.\n                                    s = aab # u \\<and>\n                                    u setinterleaves ((a #\n                 l, la), A))))) \\<and>\n                             (aab \\<in> A \\<longrightarrow>\n                              a \\<notin> A \\<and>\n                              (a \\<notin> A \\<longrightarrow>\n                               aaa = a \\<and>\n                               lista = l \\<and>\n                               aa = aab \\<and>\n                               list = la \\<and>\n                               (\\<exists>u.\n                                   s = a # u \\<and>\n                                   u setinterleaves ((l, aab # la), A)))))\n 4. \\<And>aa aaa list lista.\n       \\<lbrakk>aaa \\<notin> A; aa \\<in> A;\n        \\<exists>u.\n           s = aaa # u \\<and>\n           u setinterleaves ((lista, aa # list), A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a aab l la.\n                            (a = aab \\<longrightarrow>\n                             (aab \\<notin> A \\<longrightarrow>\n                              aaa = aab \\<and>\n                              lista = l \\<and>\n                              aa = aab \\<and>\n                              list = la \\<and>\n                              ((\\<exists>u.\n                                   s = aab # u \\<and>\n                                   u setinterleaves ((l, aab #\n                   la), A)) \\<or>\n                               (\\<exists>u.\n                                   s = aab # u \\<and>\n                                   u setinterleaves ((aab #\n                l, la), A)))) \\<and>\n                             (aab \\<in> A \\<longrightarrow>\n                              aaa = aab \\<and>\n                              lista = l \\<and>\n                              aa = aab \\<and>\n                              list = la \\<and>\n                              (\\<exists>u.\n                                  s = aab # u \\<and>\n                                  u setinterleaves ((l, la), A)))) \\<and>\n                            (a \\<noteq> aab \\<longrightarrow>\n                             (aab \\<notin> A \\<longrightarrow>\n                              (a \\<in> A \\<longrightarrow>\n                               aaa = a \\<and>\n                               lista = l \\<and>\n                               aa = aab \\<and>\n                               list = la \\<and>\n                               (\\<exists>u.\n                                   s = aab # u \\<and>\n                                   u setinterleaves ((a #\n                l, la), A))) \\<and>\n                              (a \\<notin> A \\<longrightarrow>\n                               aaa = a \\<and>\n                               lista = l \\<and>\n                               aa = aab \\<and>\n                               list = la \\<and>\n                               ((\\<exists>u.\n                                    s = a # u \\<and>\n                                    u setinterleaves ((l, aab #\n                    la), A)) \\<or>\n                                (\\<exists>u.\n                                    s = aab # u \\<and>\n                                    u setinterleaves ((a #\n                 l, la), A))))) \\<and>\n                             (aab \\<in> A \\<longrightarrow>\n                              a \\<notin> A \\<and>\n                              (a \\<notin> A \\<longrightarrow>\n                               aaa = a \\<and>\n                               lista = l \\<and>\n                               aa = aab \\<and>\n                               list = la \\<and>\n                               (\\<exists>u.\n                                   s = a # u \\<and>\n                                   u setinterleaves ((l, aab # la), A)))))", "by (blast, blast, metis, blast)"], ["proof (state)\nthis:\n  {(t, u).\n   s setinterleaves ((t, u), A) \\<and>\n   (\\<exists>a list aa lista. u = a # list \\<and> t = aa # lista)}\n  \\<subseteq> {(a # l, aa # la) |a aa l la.\n               s setinterleaves ((a # l, aa # la), A)}\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<forall>m<length s.\n          \\<forall>x.\n             m = length x \\<longrightarrow>\n             finite {(t, u). x setinterleaves ((t, u), A)} \\<Longrightarrow>\n       finite {(t, u). s setinterleaves ((t, u), A)}", "have AAAA:\"finite ?D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     {(t, u).\n      s setinterleaves ((t, u), A) \\<and>\n      (\\<exists>a list aa lista. u = a # list \\<and> t = aa # lista)}", "proof (cases s)"], ["proof (state)\ngoal (2 subgoals):\n 1. s = [] \\<Longrightarrow>\n    finite\n     {(t, u).\n      s setinterleaves ((t, u), A) \\<and>\n      (\\<exists>a list aa lista. u = a # list \\<and> t = aa # lista)}\n 2. \\<And>a list.\n       s = a # list \\<Longrightarrow>\n       finite\n        {(t, u).\n         s setinterleaves ((t, u), A) \\<and>\n         (\\<exists>a list aa lista. u = a # list \\<and> t = aa # lista)}", "case Nil"], ["proof (state)\nthis:\n  s = []\n\ngoal (2 subgoals):\n 1. s = [] \\<Longrightarrow>\n    finite\n     {(t, u).\n      s setinterleaves ((t, u), A) \\<and>\n      (\\<exists>a list aa lista. u = a # list \\<and> t = aa # lista)}\n 2. \\<And>a list.\n       s = a # list \\<Longrightarrow>\n       finite\n        {(t, u).\n         s setinterleaves ((t, u), A) \\<and>\n         (\\<exists>a list aa lista. u = a # list \\<and> t = aa # lista)}", "hence \"?D \\<subseteq> {([],[])}\""], ["proof (prove)\nusing this:\n  s = []\n\ngoal (1 subgoal):\n 1. {(t, u).\n     s setinterleaves ((t, u), A) \\<and>\n     (\\<exists>a list aa lista. u = a # list \\<and> t = aa # lista)}\n    \\<subseteq> {([], [])}", "using empty_setinterleaving"], ["proof (prove)\nusing this:\n  s = []\n  [] setinterleaves ((?t, ?u), ?A) \\<Longrightarrow> ?t = []\n\ngoal (1 subgoal):\n 1. {(t, u).\n     s setinterleaves ((t, u), A) \\<and>\n     (\\<exists>a list aa lista. u = a # list \\<and> t = aa # lista)}\n    \\<subseteq> {([], [])}", "by auto"], ["proof (state)\nthis:\n  {(t, u).\n   s setinterleaves ((t, u), A) \\<and>\n   (\\<exists>a list aa lista. u = a # list \\<and> t = aa # lista)}\n  \\<subseteq> {([], [])}\n\ngoal (2 subgoals):\n 1. s = [] \\<Longrightarrow>\n    finite\n     {(t, u).\n      s setinterleaves ((t, u), A) \\<and>\n      (\\<exists>a list aa lista. u = a # list \\<and> t = aa # lista)}\n 2. \\<And>a list.\n       s = a # list \\<Longrightarrow>\n       finite\n        {(t, u).\n         s setinterleaves ((t, u), A) \\<and>\n         (\\<exists>a list aa lista. u = a # list \\<and> t = aa # lista)}", "then"], ["proof (chain)\npicking this:\n  {(t, u).\n   s setinterleaves ((t, u), A) \\<and>\n   (\\<exists>a list aa lista. u = a # list \\<and> t = aa # lista)}\n  \\<subseteq> {([], [])}", "show ?thesis"], ["proof (prove)\nusing this:\n  {(t, u).\n   s setinterleaves ((t, u), A) \\<and>\n   (\\<exists>a list aa lista. u = a # list \\<and> t = aa # lista)}\n  \\<subseteq> {([], [])}\n\ngoal (1 subgoal):\n 1. finite\n     {(t, u).\n      s setinterleaves ((t, u), A) \\<and>\n      (\\<exists>a list aa lista. u = a # list \\<and> t = aa # lista)}", "using infinite_super"], ["proof (prove)\nusing this:\n  {(t, u).\n   s setinterleaves ((t, u), A) \\<and>\n   (\\<exists>a list aa lista. u = a # list \\<and> t = aa # lista)}\n  \\<subseteq> {([], [])}\n  \\<lbrakk>?S \\<subseteq> ?T; infinite ?S\\<rbrakk>\n  \\<Longrightarrow> infinite ?T\n\ngoal (1 subgoal):\n 1. finite\n     {(t, u).\n      s setinterleaves ((t, u), A) \\<and>\n      (\\<exists>a list aa lista. u = a # list \\<and> t = aa # lista)}", "by auto"], ["proof (state)\nthis:\n  finite\n   {(t, u).\n    s setinterleaves ((t, u), A) \\<and>\n    (\\<exists>a list aa lista. u = a # list \\<and> t = aa # lista)}\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       s = a # list \\<Longrightarrow>\n       finite\n        {(t, u).\n         s setinterleaves ((t, u), A) \\<and>\n         (\\<exists>a list aa lista. u = a # list \\<and> t = aa # lista)}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       s = a # list \\<Longrightarrow>\n       finite\n        {(t, u).\n         s setinterleaves ((t, u), A) \\<and>\n         (\\<exists>a list aa lista. u = a # list \\<and> t = aa # lista)}", "case (Cons a list)"], ["proof (state)\nthis:\n  s = a # list\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       s = a # list \\<Longrightarrow>\n       finite\n        {(t, u).\n         s setinterleaves ((t, u), A) \\<and>\n         (\\<exists>a list aa lista. u = a # list \\<and> t = aa # lista)}", "hence dd1:\"?D1 \\<subseteq> {(a#l, u)| l u. list setinterleaves ((l, u), A)} \n                \\<union> {(t, a#la)| t la. list setinterleaves ((t, la), A)} \n                \\<union> {(a#l, a#la)|l la. list setinterleaves ((l, la), A)}\"(is \"?D1 \\<subseteq> ?D2 \\<union> ?D3 \\<union> ?D4\")"], ["proof (prove)\nusing this:\n  s = a # list\n\ngoal (1 subgoal):\n 1. {(a # l, aa # la) |a aa l la. s setinterleaves ((a # l, aa # la), A)}\n    \\<subseteq> {(a # l, u) |l u. list setinterleaves ((l, u), A)} \\<union>\n                {(t, a # la) |t la.\n                 list setinterleaves ((t, la), A)} \\<union>\n                {(a # l, a # la) |l la. list setinterleaves ((l, la), A)}", "by (rule_tac subsetI, auto split:if_splits)"], ["proof (state)\nthis:\n  {(a # l, aa # la) |a aa l la. s setinterleaves ((a # l, aa # la), A)}\n  \\<subseteq> {(a # l, u) |l u. list setinterleaves ((l, u), A)} \\<union>\n              {(t, a # la) |t la. list setinterleaves ((t, la), A)} \\<union>\n              {(a # l, a # la) |l la. list setinterleaves ((l, la), A)}\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       s = a # list \\<Longrightarrow>\n       finite\n        {(t, u).\n         s setinterleaves ((t, u), A) \\<and>\n         (\\<exists>a list aa lista. u = a # list \\<and> t = aa # lista)}", "with Cons"], ["proof (chain)\npicking this:\n  s = a # list\n  {(a # l, aa # la) |a aa l la. s setinterleaves ((a # l, aa # la), A)}\n  \\<subseteq> {(a # l, u) |l u. list setinterleaves ((l, u), A)} \\<union>\n              {(t, a # la) |t la. list setinterleaves ((t, la), A)} \\<union>\n              {(a # l, a # la) |l la. list setinterleaves ((l, la), A)}", "have aa:\"finite {(t,u). list setinterleaves ((t, u), A)}\""], ["proof (prove)\nusing this:\n  s = a # list\n  {(a # l, aa # la) |a aa l la. s setinterleaves ((a # l, aa # la), A)}\n  \\<subseteq> {(a # l, u) |l u. list setinterleaves ((l, u), A)} \\<union>\n              {(t, a # la) |t la. list setinterleaves ((t, la), A)} \\<union>\n              {(a # l, a # la) |l la. list setinterleaves ((l, la), A)}\n\ngoal (1 subgoal):\n 1. finite {(t, u). list setinterleaves ((t, u), A)}", "using 1[THEN spec, of \"length list\"]"], ["proof (prove)\nusing this:\n  s = a # list\n  {(a # l, aa # la) |a aa l la. s setinterleaves ((a # l, aa # la), A)}\n  \\<subseteq> {(a # l, u) |l u. list setinterleaves ((l, u), A)} \\<union>\n              {(t, a # la) |t la. list setinterleaves ((t, la), A)} \\<union>\n              {(a # l, a # la) |l la. list setinterleaves ((l, la), A)}\n  length list < length s \\<longrightarrow>\n  (\\<forall>x.\n      length list = length x \\<longrightarrow>\n      finite {(t, u). x setinterleaves ((t, u), A)})\n\ngoal (1 subgoal):\n 1. finite {(t, u). list setinterleaves ((t, u), A)}", "by (simp)"], ["proof (state)\nthis:\n  finite {(t, u). list setinterleaves ((t, u), A)}\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       s = a # list \\<Longrightarrow>\n       finite\n        {(t, u).\n         s setinterleaves ((t, u), A) \\<and>\n         (\\<exists>a list aa lista. u = a # list \\<and> t = aa # lista)}", "define f where a2:\"f = (\\<lambda> (t, (u::'a event list)). ((a::'a event)# t, u))\""], ["proof (state)\nthis:\n  f = (\\<lambda>(t, u). (a # t, u))\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       s = a # list \\<Longrightarrow>\n       finite\n        {(t, u).\n         s setinterleaves ((t, u), A) \\<and>\n         (\\<exists>a list aa lista. u = a # list \\<and> t = aa # lista)}", "with Cons"], ["proof (chain)\npicking this:\n  s = a # list\n  f = (\\<lambda>(t, u). (a # t, u))", "have \"?D2 \\<subseteq> (f ` {(t, u). list setinterleaves ((t, u), A)})\""], ["proof (prove)\nusing this:\n  s = a # list\n  f = (\\<lambda>(t, u). (a # t, u))\n\ngoal (1 subgoal):\n 1. {(a # l, u) |l u. list setinterleaves ((l, u), A)}\n    \\<subseteq> f ` {(t, u). list setinterleaves ((t, u), A)}", "using a2"], ["proof (prove)\nusing this:\n  s = a # list\n  f = (\\<lambda>(t, u). (a # t, u))\n  f = (\\<lambda>(t, u). (a # t, u))\n\ngoal (1 subgoal):\n 1. {(a # l, u) |l u. list setinterleaves ((l, u), A)}\n    \\<subseteq> f ` {(t, u). list setinterleaves ((t, u), A)}", "by auto"], ["proof (state)\nthis:\n  {(a # l, u) |l u. list setinterleaves ((l, u), A)}\n  \\<subseteq> f ` {(t, u). list setinterleaves ((t, u), A)}\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       s = a # list \\<Longrightarrow>\n       finite\n        {(t, u).\n         s setinterleaves ((t, u), A) \\<and>\n         (\\<exists>a list aa lista. u = a # list \\<and> t = aa # lista)}", "hence dd2:\"finite ?D2\""], ["proof (prove)\nusing this:\n  {(a # l, u) |l u. list setinterleaves ((l, u), A)}\n  \\<subseteq> f ` {(t, u). list setinterleaves ((t, u), A)}\n\ngoal (1 subgoal):\n 1. finite {(a # l, u) |l u. list setinterleaves ((l, u), A)}", "using finite_imageI [of \"{(t, u). list setinterleaves ((t, u), A)}\" f, OF aa]"], ["proof (prove)\nusing this:\n  {(a # l, u) |l u. list setinterleaves ((l, u), A)}\n  \\<subseteq> f ` {(t, u). list setinterleaves ((t, u), A)}\n  finite (f ` {(t, u). list setinterleaves ((t, u), A)})\n\ngoal (1 subgoal):\n 1. finite {(a # l, u) |l u. list setinterleaves ((l, u), A)}", "by (meson rev_finite_subset)"], ["proof (state)\nthis:\n  finite {(a # l, u) |l u. list setinterleaves ((l, u), A)}\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       s = a # list \\<Longrightarrow>\n       finite\n        {(t, u).\n         s setinterleaves ((t, u), A) \\<and>\n         (\\<exists>a list aa lista. u = a # list \\<and> t = aa # lista)}", "define f where a2:\"f = (\\<lambda> ((t::'a event list),u). (t,(a::'a event)#u))\""], ["proof (state)\nthis:\n  f = (\\<lambda>(t, u). (t, a # u))\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       s = a # list \\<Longrightarrow>\n       finite\n        {(t, u).\n         s setinterleaves ((t, u), A) \\<and>\n         (\\<exists>a list aa lista. u = a # list \\<and> t = aa # lista)}", "with Cons"], ["proof (chain)\npicking this:\n  s = a # list\n  f = (\\<lambda>(t, u). (t, a # u))", "have \"?D3 \\<subseteq> (f ` {(t, u). list setinterleaves ((t, u), A)})\""], ["proof (prove)\nusing this:\n  s = a # list\n  f = (\\<lambda>(t, u). (t, a # u))\n\ngoal (1 subgoal):\n 1. {(t, a # la) |t la. list setinterleaves ((t, la), A)}\n    \\<subseteq> f ` {(t, u). list setinterleaves ((t, u), A)}", "using a2"], ["proof (prove)\nusing this:\n  s = a # list\n  f = (\\<lambda>(t, u). (t, a # u))\n  f = (\\<lambda>(t, u). (t, a # u))\n\ngoal (1 subgoal):\n 1. {(t, a # la) |t la. list setinterleaves ((t, la), A)}\n    \\<subseteq> f ` {(t, u). list setinterleaves ((t, u), A)}", "by auto"], ["proof (state)\nthis:\n  {(t, a # la) |t la. list setinterleaves ((t, la), A)}\n  \\<subseteq> f ` {(t, u). list setinterleaves ((t, u), A)}\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       s = a # list \\<Longrightarrow>\n       finite\n        {(t, u).\n         s setinterleaves ((t, u), A) \\<and>\n         (\\<exists>a list aa lista. u = a # list \\<and> t = aa # lista)}", "hence dd3:\"finite ?D3\""], ["proof (prove)\nusing this:\n  {(t, a # la) |t la. list setinterleaves ((t, la), A)}\n  \\<subseteq> f ` {(t, u). list setinterleaves ((t, u), A)}\n\ngoal (1 subgoal):\n 1. finite {(t, a # la) |t la. list setinterleaves ((t, la), A)}", "using finite_imageI [of \"{(t, u). list setinterleaves ((t, u), A)}\" f, OF aa]"], ["proof (prove)\nusing this:\n  {(t, a # la) |t la. list setinterleaves ((t, la), A)}\n  \\<subseteq> f ` {(t, u). list setinterleaves ((t, u), A)}\n  finite (f ` {(t, u). list setinterleaves ((t, u), A)})\n\ngoal (1 subgoal):\n 1. finite {(t, a # la) |t la. list setinterleaves ((t, la), A)}", "by (meson rev_finite_subset)"], ["proof (state)\nthis:\n  finite {(t, a # la) |t la. list setinterleaves ((t, la), A)}\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       s = a # list \\<Longrightarrow>\n       finite\n        {(t, u).\n         s setinterleaves ((t, u), A) \\<and>\n         (\\<exists>a list aa lista. u = a # list \\<and> t = aa # lista)}", "define f where a2:\"f = (\\<lambda> (t,u). ((a::'a event)#t,(a::'a event)#u))\""], ["proof (state)\nthis:\n  f = (\\<lambda>(t, u). (a # t, a # u))\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       s = a # list \\<Longrightarrow>\n       finite\n        {(t, u).\n         s setinterleaves ((t, u), A) \\<and>\n         (\\<exists>a list aa lista. u = a # list \\<and> t = aa # lista)}", "with Cons"], ["proof (chain)\npicking this:\n  s = a # list\n  f = (\\<lambda>(t, u). (a # t, a # u))", "have \"?D4 \\<subseteq> (f ` {(t, u). list setinterleaves ((t, u), A)})\""], ["proof (prove)\nusing this:\n  s = a # list\n  f = (\\<lambda>(t, u). (a # t, a # u))\n\ngoal (1 subgoal):\n 1. {(a # l, a # la) |l la. list setinterleaves ((l, la), A)}\n    \\<subseteq> f ` {(t, u). list setinterleaves ((t, u), A)}", "using a2"], ["proof (prove)\nusing this:\n  s = a # list\n  f = (\\<lambda>(t, u). (a # t, a # u))\n  f = (\\<lambda>(t, u). (a # t, a # u))\n\ngoal (1 subgoal):\n 1. {(a # l, a # la) |l la. list setinterleaves ((l, la), A)}\n    \\<subseteq> f ` {(t, u). list setinterleaves ((t, u), A)}", "by auto"], ["proof (state)\nthis:\n  {(a # l, a # la) |l la. list setinterleaves ((l, la), A)}\n  \\<subseteq> f ` {(t, u). list setinterleaves ((t, u), A)}\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       s = a # list \\<Longrightarrow>\n       finite\n        {(t, u).\n         s setinterleaves ((t, u), A) \\<and>\n         (\\<exists>a list aa lista. u = a # list \\<and> t = aa # lista)}", "hence dd4:\"finite ?D4\""], ["proof (prove)\nusing this:\n  {(a # l, a # la) |l la. list setinterleaves ((l, la), A)}\n  \\<subseteq> f ` {(t, u). list setinterleaves ((t, u), A)}\n\ngoal (1 subgoal):\n 1. finite {(a # l, a # la) |l la. list setinterleaves ((l, la), A)}", "using finite_imageI [of \"{(t, u). list setinterleaves ((t, u), A)}\" f, OF aa]"], ["proof (prove)\nusing this:\n  {(a # l, a # la) |l la. list setinterleaves ((l, la), A)}\n  \\<subseteq> f ` {(t, u). list setinterleaves ((t, u), A)}\n  finite (f ` {(t, u). list setinterleaves ((t, u), A)})\n\ngoal (1 subgoal):\n 1. finite {(a # l, a # la) |l la. list setinterleaves ((l, la), A)}", "by (meson rev_finite_subset)"], ["proof (state)\nthis:\n  finite {(a # l, a # la) |l la. list setinterleaves ((l, la), A)}\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       s = a # list \\<Longrightarrow>\n       finite\n        {(t, u).\n         s setinterleaves ((t, u), A) \\<and>\n         (\\<exists>a list aa lista. u = a # list \\<and> t = aa # lista)}", "with dd0 dd1 dd2 dd3 dd4"], ["proof (chain)\npicking this:\n  {(t, u).\n   s setinterleaves ((t, u), A) \\<and>\n   (\\<exists>a list aa lista. u = a # list \\<and> t = aa # lista)}\n  \\<subseteq> {(a # l, aa # la) |a aa l la.\n               s setinterleaves ((a # l, aa # la), A)}\n  {(a # l, aa # la) |a aa l la. s setinterleaves ((a # l, aa # la), A)}\n  \\<subseteq> {(a # l, u) |l u. list setinterleaves ((l, u), A)} \\<union>\n              {(t, a # la) |t la. list setinterleaves ((t, la), A)} \\<union>\n              {(a # l, a # la) |l la. list setinterleaves ((l, la), A)}\n  finite {(a # l, u) |l u. list setinterleaves ((l, u), A)}\n  finite {(t, a # la) |t la. list setinterleaves ((t, la), A)}\n  finite {(a # l, a # la) |l la. list setinterleaves ((l, la), A)}\n  finite {(a # l, a # la) |l la. list setinterleaves ((l, la), A)}", "show ?thesis"], ["proof (prove)\nusing this:\n  {(t, u).\n   s setinterleaves ((t, u), A) \\<and>\n   (\\<exists>a list aa lista. u = a # list \\<and> t = aa # lista)}\n  \\<subseteq> {(a # l, aa # la) |a aa l la.\n               s setinterleaves ((a # l, aa # la), A)}\n  {(a # l, aa # la) |a aa l la. s setinterleaves ((a # l, aa # la), A)}\n  \\<subseteq> {(a # l, u) |l u. list setinterleaves ((l, u), A)} \\<union>\n              {(t, a # la) |t la. list setinterleaves ((t, la), A)} \\<union>\n              {(a # l, a # la) |l la. list setinterleaves ((l, la), A)}\n  finite {(a # l, u) |l u. list setinterleaves ((l, u), A)}\n  finite {(t, a # la) |t la. list setinterleaves ((t, la), A)}\n  finite {(a # l, a # la) |l la. list setinterleaves ((l, la), A)}\n  finite {(a # l, a # la) |l la. list setinterleaves ((l, la), A)}\n\ngoal (1 subgoal):\n 1. finite\n     {(t, u).\n      s setinterleaves ((t, u), A) \\<and>\n      (\\<exists>a list aa lista. u = a # list \\<and> t = aa # lista)}", "by (simp add: finite_subset)"], ["proof (state)\nthis:\n  finite\n   {(t, u).\n    s setinterleaves ((t, u), A) \\<and>\n    (\\<exists>a list aa lista. u = a # list \\<and> t = aa # lista)}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite\n   {(t, u).\n    s setinterleaves ((t, u), A) \\<and>\n    (\\<exists>a list aa lista. u = a # list \\<and> t = aa # lista)}\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<forall>m<length s.\n          \\<forall>x.\n             m = length x \\<longrightarrow>\n             finite {(t, u). x setinterleaves ((t, u), A)} \\<Longrightarrow>\n       finite {(t, u). s setinterleaves ((t, u), A)}", "from A AA AAA AAAA"], ["proof (chain)\npicking this:\n  {(t, u). s setinterleaves ((t, u), A)}\n  \\<subseteq> {([], [])} \\<union>\n              {(t, u).\n               s setinterleaves ((t, u), A) \\<and>\n               (\\<exists>a list. t = a # list \\<and> a \\<notin> A) \\<and>\n               u = []} \\<union>\n              {(t, u).\n               s setinterleaves ((t, u), A) \\<and>\n               (\\<exists>a list. u = a # list \\<and> a \\<notin> A) \\<and>\n               t = []} \\<union>\n              {(t, u).\n               s setinterleaves ((t, u), A) \\<and>\n               (\\<exists>a list aa lista.\n                   u = a # list \\<and> t = aa # lista)}\n  finite\n   {(t, u).\n    s setinterleaves ((t, u), A) \\<and>\n    (\\<exists>a list. t = a # list \\<and> a \\<notin> A) \\<and> u = []}\n  finite\n   {(t, u).\n    s setinterleaves ((t, u), A) \\<and>\n    (\\<exists>a list. u = a # list \\<and> a \\<notin> A) \\<and> t = []}\n  finite\n   {(t, u).\n    s setinterleaves ((t, u), A) \\<and>\n    (\\<exists>a list aa lista. u = a # list \\<and> t = aa # lista)}", "show ?case"], ["proof (prove)\nusing this:\n  {(t, u). s setinterleaves ((t, u), A)}\n  \\<subseteq> {([], [])} \\<union>\n              {(t, u).\n               s setinterleaves ((t, u), A) \\<and>\n               (\\<exists>a list. t = a # list \\<and> a \\<notin> A) \\<and>\n               u = []} \\<union>\n              {(t, u).\n               s setinterleaves ((t, u), A) \\<and>\n               (\\<exists>a list. u = a # list \\<and> a \\<notin> A) \\<and>\n               t = []} \\<union>\n              {(t, u).\n               s setinterleaves ((t, u), A) \\<and>\n               (\\<exists>a list aa lista.\n                   u = a # list \\<and> t = aa # lista)}\n  finite\n   {(t, u).\n    s setinterleaves ((t, u), A) \\<and>\n    (\\<exists>a list. t = a # list \\<and> a \\<notin> A) \\<and> u = []}\n  finite\n   {(t, u).\n    s setinterleaves ((t, u), A) \\<and>\n    (\\<exists>a list. u = a # list \\<and> a \\<notin> A) \\<and> t = []}\n  finite\n   {(t, u).\n    s setinterleaves ((t, u), A) \\<and>\n    (\\<exists>a list aa lista. u = a # list \\<and> t = aa # lista)}\n\ngoal (1 subgoal):\n 1. finite {(t, u). s setinterleaves ((t, u), A)}", "by (simp add: finite_subset)"], ["proof (state)\nthis:\n  finite {(t, u). s setinterleaves ((t, u), A)}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inters_fin: \"finite{(t, u, r). r setinterleaves ((t, u), insert tick (ev ` A))\\<and> \n(\\<exists>v. x = r @ v \\<and> front_tickFree v \\<and> (tickFree r \\<or> v = []))}\" (is \"finite ?A\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     {(t, u, r).\n      r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n      (\\<exists>v.\n          x = r @ v \\<and>\n          front_tickFree v \\<and> (tickFree r \\<or> v = []))}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite\n     {(t, u, r).\n      r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n      (\\<exists>v.\n          x = r @ v \\<and>\n          front_tickFree v \\<and> (tickFree r \\<or> v = []))}", "have a:\"?A\\<subseteq>(\\<Union>r \\<in> {r. r \\<le> x}. {a. \\<exists>t u. a=(t,u,r)\\<and>r setinterleaves((t,u),insert tick(ev ` A))})\" \n  (is \"?A \\<subseteq> (\\<Union>r \\<in> {r. r \\<le> x}. ?P r)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. {(t, u, r).\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n     (\\<exists>v.\n         x = r @ v \\<and>\n         front_tickFree v \\<and> (tickFree r \\<or> v = []))}\n    \\<subseteq> (\\<Union>r\\<in>{r. r \\<le> x}.\n                    {(t, u, r) |t u.\n                     r setinterleaves ((t, u), insert tick (ev ` A))})", "using le_list_def"], ["proof (prove)\nusing this:\n  (?s \\<le> ?t) = (\\<exists>r. ?s @ r = ?t)\n\ngoal (1 subgoal):\n 1. {(t, u, r).\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n     (\\<exists>v.\n         x = r @ v \\<and>\n         front_tickFree v \\<and> (tickFree r \\<or> v = []))}\n    \\<subseteq> (\\<Union>r\\<in>{r. r \\<le> x}.\n                    {(t, u, r) |t u.\n                     r setinterleaves ((t, u), insert tick (ev ` A))})", "by fastforce"], ["proof (state)\nthis:\n  {(t, u, r).\n   r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n   (\\<exists>v.\n       x = r @ v \\<and> front_tickFree v \\<and> (tickFree r \\<or> v = []))}\n  \\<subseteq> (\\<Union>r\\<in>{r. r \\<le> x}.\n                  {(t, u, r) |t u.\n                   r setinterleaves ((t, u), insert tick (ev ` A))})\n\ngoal (1 subgoal):\n 1. finite\n     {(t, u, r).\n      r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n      (\\<exists>v.\n          x = r @ v \\<and>\n          front_tickFree v \\<and> (tickFree r \\<or> v = []))}", "have b:\"\\<forall>(r::'a event list). finite (?P r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>r.\n       finite\n        {(t, u, r) |t u. r setinterleaves ((t, u), insert tick (ev ` A))}", "proof(rule allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r.\n       finite\n        {(t, u, r) |t u. r setinterleaves ((t, u), insert tick (ev ` A))}", "fix r::\"'a event list\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r.\n       finite\n        {(t, u, r) |t u. r setinterleaves ((t, u), insert tick (ev ` A))}", "define f where \"f= (\\<lambda>((t::'a event list), (u::'a event list)). (t,u,r))\""], ["proof (state)\nthis:\n  f = (\\<lambda>(t, u). (t, u, r))\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       finite\n        {(t, u, r) |t u. r setinterleaves ((t, u), insert tick (ev ` A))}", "hence \"?P r \\<subseteq> (f ` {(t, u). r setinterleaves ((t, u), insert tick (ev ` A) )})\""], ["proof (prove)\nusing this:\n  f = (\\<lambda>(t, u). (t, u, r))\n\ngoal (1 subgoal):\n 1. {(t, u, r) |t u. r setinterleaves ((t, u), insert tick (ev ` A))}\n    \\<subseteq> f `\n                {(t, u). r setinterleaves ((t, u), insert tick (ev ` A))}", "by auto"], ["proof (state)\nthis:\n  {(t, u, r) |t u. r setinterleaves ((t, u), insert tick (ev ` A))}\n  \\<subseteq> f ` {(t, u). r setinterleaves ((t, u), insert tick (ev ` A))}\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       finite\n        {(t, u, r) |t u. r setinterleaves ((t, u), insert tick (ev ` A))}", "then"], ["proof (chain)\npicking this:\n  {(t, u, r) |t u. r setinterleaves ((t, u), insert tick (ev ` A))}\n  \\<subseteq> f ` {(t, u). r setinterleaves ((t, u), insert tick (ev ` A))}", "show \"finite (?P r)\""], ["proof (prove)\nusing this:\n  {(t, u, r) |t u. r setinterleaves ((t, u), insert tick (ev ` A))}\n  \\<subseteq> f ` {(t, u). r setinterleaves ((t, u), insert tick (ev ` A))}\n\ngoal (1 subgoal):\n 1. finite {(t, u, r) |t u. r setinterleaves ((t, u), insert tick (ev ` A))}", "using inters_fin_fund[of r \"insert tick (ev ` A)\"] finite_imageI[of \"{(t, u). r setinterleaves \n      ((t, u), insert tick (ev ` A))}\" f]"], ["proof (prove)\nusing this:\n  {(t, u, r) |t u. r setinterleaves ((t, u), insert tick (ev ` A))}\n  \\<subseteq> f ` {(t, u). r setinterleaves ((t, u), insert tick (ev ` A))}\n  finite {(t, u). r setinterleaves ((t, u), insert tick (ev ` A))}\n  finite\n   {(t, u).\n    r setinterleaves ((t, u), insert tick (ev ` A))} \\<Longrightarrow>\n  finite (f ` {(t, u). r setinterleaves ((t, u), insert tick (ev ` A))})\n\ngoal (1 subgoal):\n 1. finite {(t, u, r) |t u. r setinterleaves ((t, u), insert tick (ev ` A))}", "by (meson rev_finite_subset)"], ["proof (state)\nthis:\n  finite {(t, u, r) |t u. r setinterleaves ((t, u), insert tick (ev ` A))}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>r.\n     finite\n      {(t, u, r) |t u. r setinterleaves ((t, u), insert tick (ev ` A))}\n\ngoal (1 subgoal):\n 1. finite\n     {(t, u, r).\n      r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n      (\\<exists>v.\n          x = r @ v \\<and>\n          front_tickFree v \\<and> (tickFree r \\<or> v = []))}", "have \"{t. \\<exists>t2. x = t @ t2} = {r. \\<exists>ra. r @ ra = x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {t. \\<exists>t2. x = t @ t2} = {r. \\<exists>ra. r @ ra = x}", "by blast"], ["proof (state)\nthis:\n  {t. \\<exists>t2. x = t @ t2} = {r. \\<exists>ra. r @ ra = x}\n\ngoal (1 subgoal):\n 1. finite\n     {(t, u, r).\n      r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n      (\\<exists>v.\n          x = r @ v \\<and>\n          front_tickFree v \\<and> (tickFree r \\<or> v = []))}", "hence \"finite {r. r \\<le> x}\""], ["proof (prove)\nusing this:\n  {t. \\<exists>t2. x = t @ t2} = {r. \\<exists>ra. r @ ra = x}\n\ngoal (1 subgoal):\n 1. finite {r. r \\<le> x}", "using prefixes_fin[of x, simplified Let_def, THEN conjunct1]"], ["proof (prove)\nusing this:\n  {t. \\<exists>t2. x = t @ t2} = {r. \\<exists>ra. r @ ra = x}\n  finite {t. \\<exists>t2. x = t @ t2}\n\ngoal (1 subgoal):\n 1. finite {r. r \\<le> x}", "by (auto simp add:le_list_def)"], ["proof (state)\nthis:\n  finite {r. r \\<le> x}\n\ngoal (1 subgoal):\n 1. finite\n     {(t, u, r).\n      r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n      (\\<exists>v.\n          x = r @ v \\<and>\n          front_tickFree v \\<and> (tickFree r \\<or> v = []))}", "with a b"], ["proof (chain)\npicking this:\n  {(t, u, r).\n   r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n   (\\<exists>v.\n       x = r @ v \\<and> front_tickFree v \\<and> (tickFree r \\<or> v = []))}\n  \\<subseteq> (\\<Union>r\\<in>{r. r \\<le> x}.\n                  {(t, u, r) |t u.\n                   r setinterleaves ((t, u), insert tick (ev ` A))})\n  \\<forall>r.\n     finite\n      {(t, u, r) |t u. r setinterleaves ((t, u), insert tick (ev ` A))}\n  finite {r. r \\<le> x}", "show ?thesis"], ["proof (prove)\nusing this:\n  {(t, u, r).\n   r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n   (\\<exists>v.\n       x = r @ v \\<and> front_tickFree v \\<and> (tickFree r \\<or> v = []))}\n  \\<subseteq> (\\<Union>r\\<in>{r. r \\<le> x}.\n                  {(t, u, r) |t u.\n                   r setinterleaves ((t, u), insert tick (ev ` A))})\n  \\<forall>r.\n     finite\n      {(t, u, r) |t u. r setinterleaves ((t, u), insert tick (ev ` A))}\n  finite {r. r \\<le> x}\n\ngoal (1 subgoal):\n 1. finite\n     {(t, u, r).\n      r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n      (\\<exists>v.\n          x = r @ v \\<and>\n          front_tickFree v \\<and> (tickFree r \\<or> v = []))}", "by (meson finite_UN_I infinite_super)"], ["proof (state)\nthis:\n  finite\n   {(t, u, r).\n    r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n    (\\<exists>v.\n        x = r @ v \\<and> front_tickFree v \\<and> (tickFree r \\<or> v = []))}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma limproc_Sync_D: \"chain Y\\<Longrightarrow>D(lim_proc(range Y)\\<lbrakk> A \\<rbrakk> S)=D(lim_proc(range(\\<lambda>i. Y i \\<lbrakk> A \\<rbrakk> S)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chain Y \\<Longrightarrow>\n    D (lim_proc (range Y) \\<lbrakk>A\\<rbrakk> S) =\n    D (lim_proc (range (\\<lambda>i. Y i \\<lbrakk>A\\<rbrakk> S)))", "apply(auto simp:Process_eq_spec  F_sync D_sync T_sync F_LUB D_LUB T_LUB chain_Sync1)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>xa t u r v.\n       \\<lbrakk>chain Y; front_tickFree v;\n        r setinterleaves ((t, u), insert tick (ev ` A)); tickFree r;\n        \\<forall>x. t \\<in> D (Y x); u \\<in> T S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u ra va.\n                            front_tickFree va \\<and>\n                            (tickFree ra \\<or> va = []) \\<and>\n                            r @ v = ra @ va \\<and>\n                            ra setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                            (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n                             t \\<in> D S \\<and> u \\<in> T (Y xa))\n 2. \\<And>xa t u r v.\n       \\<lbrakk>chain Y; front_tickFree v;\n        r setinterleaves ((t, u), insert tick (ev ` A)); tickFree r;\n        t \\<in> D S; \\<forall>x. u \\<in> T (Y x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u ra va.\n                            front_tickFree va \\<and>\n                            (tickFree ra \\<or> va = []) \\<and>\n                            r @ v = ra @ va \\<and>\n                            ra setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                            (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n                             t \\<in> D S \\<and> u \\<in> T (Y xa))\n 3. \\<And>xa t u r.\n       \\<lbrakk>chain Y; r setinterleaves ((t, u), insert tick (ev ` A));\n        \\<forall>x. t \\<in> D (Y x); u \\<in> T S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u ra v.\n                            front_tickFree v \\<and>\n                            (tickFree ra \\<or> v = []) \\<and>\n                            r = ra @ v \\<and>\n                            ra setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                            (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n                             t \\<in> D S \\<and> u \\<in> T (Y xa))\n 4. \\<And>xa t u r.\n       \\<lbrakk>chain Y; r setinterleaves ((t, u), insert tick (ev ` A));\n        t \\<in> D S; \\<forall>x. u \\<in> T (Y x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u ra v.\n                            front_tickFree v \\<and>\n                            (tickFree ra \\<or> v = []) \\<and>\n                            r = ra @ v \\<and>\n                            ra setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                            (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n                             t \\<in> D S \\<and> u \\<in> T (Y xa))\n 5. \\<And>x.\n       \\<lbrakk>chain Y;\n        \\<forall>xa.\n           \\<exists>t u r v.\n              front_tickFree v \\<and>\n              (tickFree r \\<or> v = []) \\<and>\n              x = r @ v \\<and>\n              r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n              (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n               t \\<in> D S \\<and> u \\<in> T (Y xa))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u r v.\n                            front_tickFree v \\<and>\n                            (tickFree r \\<or> v = []) \\<and>\n                            x = r @ v \\<and>\n                            r setinterleaves ((t, u), insert tick\n                 (ev ` A)) \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                             u \\<in> T S \\<or>\n                             t \\<in> D S \\<and>\n                             (\\<forall>x. u \\<in> T (Y x)))", "apply blast"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>xa t u r v.\n       \\<lbrakk>chain Y; front_tickFree v;\n        r setinterleaves ((t, u), insert tick (ev ` A)); tickFree r;\n        t \\<in> D S; \\<forall>x. u \\<in> T (Y x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u ra va.\n                            front_tickFree va \\<and>\n                            (tickFree ra \\<or> va = []) \\<and>\n                            r @ v = ra @ va \\<and>\n                            ra setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                            (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n                             t \\<in> D S \\<and> u \\<in> T (Y xa))\n 2. \\<And>xa t u r.\n       \\<lbrakk>chain Y; r setinterleaves ((t, u), insert tick (ev ` A));\n        \\<forall>x. t \\<in> D (Y x); u \\<in> T S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u ra v.\n                            front_tickFree v \\<and>\n                            (tickFree ra \\<or> v = []) \\<and>\n                            r = ra @ v \\<and>\n                            ra setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                            (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n                             t \\<in> D S \\<and> u \\<in> T (Y xa))\n 3. \\<And>xa t u r.\n       \\<lbrakk>chain Y; r setinterleaves ((t, u), insert tick (ev ` A));\n        t \\<in> D S; \\<forall>x. u \\<in> T (Y x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u ra v.\n                            front_tickFree v \\<and>\n                            (tickFree ra \\<or> v = []) \\<and>\n                            r = ra @ v \\<and>\n                            ra setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                            (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n                             t \\<in> D S \\<and> u \\<in> T (Y xa))\n 4. \\<And>x.\n       \\<lbrakk>chain Y;\n        \\<forall>xa.\n           \\<exists>t u r v.\n              front_tickFree v \\<and>\n              (tickFree r \\<or> v = []) \\<and>\n              x = r @ v \\<and>\n              r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n              (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n               t \\<in> D S \\<and> u \\<in> T (Y xa))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u r v.\n                            front_tickFree v \\<and>\n                            (tickFree r \\<or> v = []) \\<and>\n                            x = r @ v \\<and>\n                            r setinterleaves ((t, u), insert tick\n                 (ev ` A)) \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                             u \\<in> T S \\<or>\n                             t \\<in> D S \\<and>\n                             (\\<forall>x. u \\<in> T (Y x)))", "apply blast"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa t u r.\n       \\<lbrakk>chain Y; r setinterleaves ((t, u), insert tick (ev ` A));\n        \\<forall>x. t \\<in> D (Y x); u \\<in> T S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u ra v.\n                            front_tickFree v \\<and>\n                            (tickFree ra \\<or> v = []) \\<and>\n                            r = ra @ v \\<and>\n                            ra setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                            (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n                             t \\<in> D S \\<and> u \\<in> T (Y xa))\n 2. \\<And>xa t u r.\n       \\<lbrakk>chain Y; r setinterleaves ((t, u), insert tick (ev ` A));\n        t \\<in> D S; \\<forall>x. u \\<in> T (Y x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u ra v.\n                            front_tickFree v \\<and>\n                            (tickFree ra \\<or> v = []) \\<and>\n                            r = ra @ v \\<and>\n                            ra setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                            (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n                             t \\<in> D S \\<and> u \\<in> T (Y xa))\n 3. \\<And>x.\n       \\<lbrakk>chain Y;\n        \\<forall>xa.\n           \\<exists>t u r v.\n              front_tickFree v \\<and>\n              (tickFree r \\<or> v = []) \\<and>\n              x = r @ v \\<and>\n              r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n              (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n               t \\<in> D S \\<and> u \\<in> T (Y xa))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u r v.\n                            front_tickFree v \\<and>\n                            (tickFree r \\<or> v = []) \\<and>\n                            x = r @ v \\<and>\n                            r setinterleaves ((t, u), insert tick\n                 (ev ` A)) \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                             u \\<in> T S \\<or>\n                             t \\<in> D S \\<and>\n                             (\\<forall>x. u \\<in> T (Y x)))", "using front_tickFree_Nil"], ["proof (prove)\nusing this:\n  front_tickFree []\n\ngoal (3 subgoals):\n 1. \\<And>xa t u r.\n       \\<lbrakk>chain Y; r setinterleaves ((t, u), insert tick (ev ` A));\n        \\<forall>x. t \\<in> D (Y x); u \\<in> T S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u ra v.\n                            front_tickFree v \\<and>\n                            (tickFree ra \\<or> v = []) \\<and>\n                            r = ra @ v \\<and>\n                            ra setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                            (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n                             t \\<in> D S \\<and> u \\<in> T (Y xa))\n 2. \\<And>xa t u r.\n       \\<lbrakk>chain Y; r setinterleaves ((t, u), insert tick (ev ` A));\n        t \\<in> D S; \\<forall>x. u \\<in> T (Y x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u ra v.\n                            front_tickFree v \\<and>\n                            (tickFree ra \\<or> v = []) \\<and>\n                            r = ra @ v \\<and>\n                            ra setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                            (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n                             t \\<in> D S \\<and> u \\<in> T (Y xa))\n 3. \\<And>x.\n       \\<lbrakk>chain Y;\n        \\<forall>xa.\n           \\<exists>t u r v.\n              front_tickFree v \\<and>\n              (tickFree r \\<or> v = []) \\<and>\n              x = r @ v \\<and>\n              r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n              (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n               t \\<in> D S \\<and> u \\<in> T (Y xa))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u r v.\n                            front_tickFree v \\<and>\n                            (tickFree r \\<or> v = []) \\<and>\n                            x = r @ v \\<and>\n                            r setinterleaves ((t, u), insert tick\n                 (ev ` A)) \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                             u \\<in> T S \\<or>\n                             t \\<in> D S \\<and>\n                             (\\<forall>x. u \\<in> T (Y x)))", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa t u r.\n       \\<lbrakk>chain Y; r setinterleaves ((t, u), insert tick (ev ` A));\n        t \\<in> D S; \\<forall>x. u \\<in> T (Y x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u ra v.\n                            front_tickFree v \\<and>\n                            (tickFree ra \\<or> v = []) \\<and>\n                            r = ra @ v \\<and>\n                            ra setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                            (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n                             t \\<in> D S \\<and> u \\<in> T (Y xa))\n 2. \\<And>x.\n       \\<lbrakk>chain Y;\n        \\<forall>xa.\n           \\<exists>t u r v.\n              front_tickFree v \\<and>\n              (tickFree r \\<or> v = []) \\<and>\n              x = r @ v \\<and>\n              r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n              (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n               t \\<in> D S \\<and> u \\<in> T (Y xa))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u r v.\n                            front_tickFree v \\<and>\n                            (tickFree r \\<or> v = []) \\<and>\n                            x = r @ v \\<and>\n                            r setinterleaves ((t, u), insert tick\n                 (ev ` A)) \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                             u \\<in> T S \\<or>\n                             t \\<in> D S \\<and>\n                             (\\<forall>x. u \\<in> T (Y x)))", "using front_tickFree_Nil"], ["proof (prove)\nusing this:\n  front_tickFree []\n\ngoal (2 subgoals):\n 1. \\<And>xa t u r.\n       \\<lbrakk>chain Y; r setinterleaves ((t, u), insert tick (ev ` A));\n        t \\<in> D S; \\<forall>x. u \\<in> T (Y x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u ra v.\n                            front_tickFree v \\<and>\n                            (tickFree ra \\<or> v = []) \\<and>\n                            r = ra @ v \\<and>\n                            ra setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                            (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n                             t \\<in> D S \\<and> u \\<in> T (Y xa))\n 2. \\<And>x.\n       \\<lbrakk>chain Y;\n        \\<forall>xa.\n           \\<exists>t u r v.\n              front_tickFree v \\<and>\n              (tickFree r \\<or> v = []) \\<and>\n              x = r @ v \\<and>\n              r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n              (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n               t \\<in> D S \\<and> u \\<in> T (Y xa))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u r v.\n                            front_tickFree v \\<and>\n                            (tickFree r \\<or> v = []) \\<and>\n                            x = r @ v \\<and>\n                            r setinterleaves ((t, u), insert tick\n                 (ev ` A)) \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                             u \\<in> T S \\<or>\n                             t \\<in> D S \\<and>\n                             (\\<forall>x. u \\<in> T (Y x)))", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>chain Y;\n        \\<forall>xa.\n           \\<exists>t u r v.\n              front_tickFree v \\<and>\n              (tickFree r \\<or> v = []) \\<and>\n              x = r @ v \\<and>\n              r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n              (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n               t \\<in> D S \\<and> u \\<in> T (Y xa))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u r v.\n                            front_tickFree v \\<and>\n                            (tickFree r \\<or> v = []) \\<and>\n                            x = r @ v \\<and>\n                            r setinterleaves ((t, u), insert tick\n                 (ev ` A)) \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                             u \\<in> T S \\<or>\n                             t \\<in> D S \\<and>\n                             (\\<forall>x. u \\<in> T (Y x)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>chain Y;\n        \\<forall>xa.\n           \\<exists>t u r v.\n              front_tickFree v \\<and>\n              (tickFree r \\<or> v = []) \\<and>\n              x = r @ v \\<and>\n              r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n              (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n               t \\<in> D S \\<and> u \\<in> T (Y xa))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u r v.\n                            front_tickFree v \\<and>\n                            (tickFree r \\<or> v = []) \\<and>\n                            x = r @ v \\<and>\n                            r setinterleaves ((t, u), insert tick\n                 (ev ` A)) \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                             u \\<in> T S \\<or>\n                             t \\<in> D S \\<and>\n                             (\\<forall>x. u \\<in> T (Y x)))", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>chain Y;\n        \\<forall>xa.\n           \\<exists>t u r v.\n              front_tickFree v \\<and>\n              (tickFree r \\<or> v = []) \\<and>\n              x = r @ v \\<and>\n              r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n              (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n               t \\<in> D S \\<and> u \\<in> T (Y xa))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u r v.\n                            front_tickFree v \\<and>\n                            (tickFree r \\<or> v = []) \\<and>\n                            x = r @ v \\<and>\n                            r setinterleaves ((t, u), insert tick\n                 (ev ` A)) \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                             u \\<in> T S \\<or>\n                             t \\<in> D S \\<and>\n                             (\\<forall>x. u \\<in> T (Y x)))", "assume A: \"chain Y\"\n    and B: \" \\<forall>xa. \\<exists>t u r v. front_tickFree v \\<and> (tickFree r \\<or> v = []) \\<and> x = r @ v \\<and> r setinterleaves \n    ((t, u), insert tick (ev ` A)) \\<and> (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or> t \\<in> D S \\<and> u \\<in> T (Y xa))\""], ["proof (state)\nthis:\n  chain Y\n  \\<forall>xa.\n     \\<exists>t u r v.\n        front_tickFree v \\<and>\n        (tickFree r \\<or> v = []) \\<and>\n        x = r @ v \\<and>\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n        (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n         t \\<in> D S \\<and> u \\<in> T (Y xa))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>chain Y;\n        \\<forall>xa.\n           \\<exists>t u r v.\n              front_tickFree v \\<and>\n              (tickFree r \\<or> v = []) \\<and>\n              x = r @ v \\<and>\n              r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n              (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n               t \\<in> D S \\<and> u \\<in> T (Y xa))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u r v.\n                            front_tickFree v \\<and>\n                            (tickFree r \\<or> v = []) \\<and>\n                            x = r @ v \\<and>\n                            r setinterleaves ((t, u), insert tick\n                 (ev ` A)) \\<and>\n                            ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                             u \\<in> T S \\<or>\n                             t \\<in> D S \\<and>\n                             (\\<forall>x. u \\<in> T (Y x)))", "thus \"\\<exists>t u r v. front_tickFree v \\<and> (tickFree r \\<or> v = []) \\<and> x = r @ v \\<and> r setinterleaves \n    ((t, u), insert tick (ev ` A)) \\<and> ((\\<forall>x. t \\<in> D (Y x)) \\<and> u \\<in> T S \\<or> t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))\""], ["proof (prove)\nusing this:\n  chain Y\n  \\<forall>xa.\n     \\<exists>t u r v.\n        front_tickFree v \\<and>\n        (tickFree r \\<or> v = []) \\<and>\n        x = r @ v \\<and>\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n        (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n         t \\<in> D S \\<and> u \\<in> T (Y xa))\n\ngoal (1 subgoal):\n 1. \\<exists>t u r v.\n       front_tickFree v \\<and>\n       (tickFree r \\<or> v = []) \\<and>\n       x = r @ v \\<and>\n       r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n       ((\\<forall>x. t \\<in> D (Y x)) \\<and> u \\<in> T S \\<or>\n        t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))", "proof(cases \"\\<forall>t u r. r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n            (r\\<le>x \\<longrightarrow> ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and> (t \\<in> D S \\<longrightarrow> (\\<exists>x. u \\<notin> T (Y x))))\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>chain Y;\n     \\<forall>xa.\n        \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           x = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n            t \\<in> D S \\<and> u \\<in> T (Y xa));\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        r \\<le> x \\<longrightarrow>\n        ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n        (t \\<in> D S \\<longrightarrow>\n         (\\<exists>x. u \\<notin> T (Y x)))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u r v.\n                         front_tickFree v \\<and>\n                         (tickFree r \\<or> v = []) \\<and>\n                         x = r @ v \\<and>\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                          u \\<in> T S \\<or>\n                          t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))\n 2. \\<lbrakk>chain Y;\n     \\<forall>xa.\n        \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           x = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n            t \\<in> D S \\<and> u \\<in> T (Y xa));\n     \\<not> (\\<forall>t u r.\n                r setinterleaves ((t, u), insert tick\n     (ev ` A)) \\<longrightarrow>\n                r \\<le> x \\<longrightarrow>\n                ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                 u \\<notin> T S) \\<and>\n                (t \\<in> D S \\<longrightarrow>\n                 (\\<exists>x. u \\<notin> T (Y x))))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u r v.\n                         front_tickFree v \\<and>\n                         (tickFree r \\<or> v = []) \\<and>\n                         x = r @ v \\<and>\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                          u \\<in> T S \\<or>\n                          t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))", "case True"], ["proof (state)\nthis:\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     r \\<le> x \\<longrightarrow>\n     ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n     (t \\<in> D S \\<longrightarrow> (\\<exists>x. u \\<notin> T (Y x)))\n\ngoal (2 subgoals):\n 1. \\<lbrakk>chain Y;\n     \\<forall>xa.\n        \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           x = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n            t \\<in> D S \\<and> u \\<in> T (Y xa));\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        r \\<le> x \\<longrightarrow>\n        ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n        (t \\<in> D S \\<longrightarrow>\n         (\\<exists>x. u \\<notin> T (Y x)))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u r v.\n                         front_tickFree v \\<and>\n                         (tickFree r \\<or> v = []) \\<and>\n                         x = r @ v \\<and>\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                          u \\<in> T S \\<or>\n                          t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))\n 2. \\<lbrakk>chain Y;\n     \\<forall>xa.\n        \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           x = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n            t \\<in> D S \\<and> u \\<in> T (Y xa));\n     \\<not> (\\<forall>t u r.\n                r setinterleaves ((t, u), insert tick\n     (ev ` A)) \\<longrightarrow>\n                r \\<le> x \\<longrightarrow>\n                ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                 u \\<notin> T S) \\<and>\n                (t \\<in> D S \\<longrightarrow>\n                 (\\<exists>x. u \\<notin> T (Y x))))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u r v.\n                         front_tickFree v \\<and>\n                         (tickFree r \\<or> v = []) \\<and>\n                         x = r @ v \\<and>\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                          u \\<in> T S \\<or>\n                          t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))", "from A"], ["proof (chain)\npicking this:\n  chain Y", "obtain tryunion where Ctryy: \"tryunion={(t, u, r). r setinterleaves \n      ((t, u), insert tick (ev ` A))\\<and>(\\<exists>v.(x = r @ v \\<and> front_tickFree v \\<and> (tickFree r \\<or> v = [])))}\""], ["proof (prove)\nusing this:\n  chain Y\n\ngoal (1 subgoal):\n 1. (\\<And>tryunion.\n        tryunion =\n        {(t, u, r).\n         r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n         (\\<exists>v.\n             x = r @ v \\<and>\n             front_tickFree v \\<and>\n             (tickFree r \\<or> v = []))} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by simp"], ["proof (state)\nthis:\n  tryunion =\n  {(t, u, r).\n   r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n   (\\<exists>v.\n       x = r @ v \\<and> front_tickFree v \\<and> (tickFree r \\<or> v = []))}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>chain Y;\n     \\<forall>xa.\n        \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           x = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n            t \\<in> D S \\<and> u \\<in> T (Y xa));\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        r \\<le> x \\<longrightarrow>\n        ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n        (t \\<in> D S \\<longrightarrow>\n         (\\<exists>x. u \\<notin> T (Y x)))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u r v.\n                         front_tickFree v \\<and>\n                         (tickFree r \\<or> v = []) \\<and>\n                         x = r @ v \\<and>\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                          u \\<in> T S \\<or>\n                          t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))\n 2. \\<lbrakk>chain Y;\n     \\<forall>xa.\n        \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           x = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n            t \\<in> D S \\<and> u \\<in> T (Y xa));\n     \\<not> (\\<forall>t u r.\n                r setinterleaves ((t, u), insert tick\n     (ev ` A)) \\<longrightarrow>\n                r \\<le> x \\<longrightarrow>\n                ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                 u \\<notin> T S) \\<and>\n                (t \\<in> D S \\<longrightarrow>\n                 (\\<exists>x. u \\<notin> T (Y x))))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u r v.\n                         front_tickFree v \\<and>\n                         (tickFree r \\<or> v = []) \\<and>\n                         x = r @ v \\<and>\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                          u \\<in> T S \\<or>\n                          t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))", "from Ctryy inters_fin"], ["proof (chain)\npicking this:\n  tryunion =\n  {(t, u, r).\n   r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n   (\\<exists>v.\n       x = r @ v \\<and> front_tickFree v \\<and> (tickFree r \\<or> v = []))}\n  finite\n   {(t, u, r).\n    r setinterleaves ((t, u), insert tick (ev ` ?A)) \\<and>\n    (\\<exists>v.\n        ?x = r @ v \\<and>\n        front_tickFree v \\<and> (tickFree r \\<or> v = []))}", "have tolfin: \"finite tryunion\""], ["proof (prove)\nusing this:\n  tryunion =\n  {(t, u, r).\n   r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n   (\\<exists>v.\n       x = r @ v \\<and> front_tickFree v \\<and> (tickFree r \\<or> v = []))}\n  finite\n   {(t, u, r).\n    r setinterleaves ((t, u), insert tick (ev ` ?A)) \\<and>\n    (\\<exists>v.\n        ?x = r @ v \\<and>\n        front_tickFree v \\<and> (tickFree r \\<or> v = []))}\n\ngoal (1 subgoal):\n 1. finite tryunion", "by auto"], ["proof (state)\nthis:\n  finite tryunion\n\ngoal (2 subgoals):\n 1. \\<lbrakk>chain Y;\n     \\<forall>xa.\n        \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           x = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n            t \\<in> D S \\<and> u \\<in> T (Y xa));\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        r \\<le> x \\<longrightarrow>\n        ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n        (t \\<in> D S \\<longrightarrow>\n         (\\<exists>x. u \\<notin> T (Y x)))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u r v.\n                         front_tickFree v \\<and>\n                         (tickFree r \\<or> v = []) \\<and>\n                         x = r @ v \\<and>\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                          u \\<in> T S \\<or>\n                          t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))\n 2. \\<lbrakk>chain Y;\n     \\<forall>xa.\n        \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           x = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n            t \\<in> D S \\<and> u \\<in> T (Y xa));\n     \\<not> (\\<forall>t u r.\n                r setinterleaves ((t, u), insert tick\n     (ev ` A)) \\<longrightarrow>\n                r \\<le> x \\<longrightarrow>\n                ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                 u \\<notin> T S) \\<and>\n                (t \\<in> D S \\<longrightarrow>\n                 (\\<exists>x. u \\<notin> T (Y x))))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u r v.\n                         front_tickFree v \\<and>\n                         (tickFree r \\<or> v = []) \\<and>\n                         x = r @ v \\<and>\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                          u \\<in> T S \\<or>\n                          t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))", "obtain tryunion1 where Ctryy1: \"tryunion1={n. \\<exists>(t,u, r)\\<in>tryunion.(t \\<in> D (Y n) \\<and> u\\<in>T S \\<or> t \\<in> \n      D S \\<and> u \\<in> T (Y n))}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>tryunion1.\n        tryunion1 =\n        {n. \\<exists>(t, u, r)\\<in>tryunion.\n               t \\<in> D (Y n) \\<and> u \\<in> T S \\<or>\n               t \\<in> D S \\<and> u \\<in> T (Y n)} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by simp"], ["proof (state)\nthis:\n  tryunion1 =\n  {n. \\<exists>(t, u, r)\\<in>tryunion.\n         t \\<in> D (Y n) \\<and> u \\<in> T S \\<or>\n         t \\<in> D S \\<and> u \\<in> T (Y n)}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>chain Y;\n     \\<forall>xa.\n        \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           x = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n            t \\<in> D S \\<and> u \\<in> T (Y xa));\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        r \\<le> x \\<longrightarrow>\n        ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n        (t \\<in> D S \\<longrightarrow>\n         (\\<exists>x. u \\<notin> T (Y x)))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u r v.\n                         front_tickFree v \\<and>\n                         (tickFree r \\<or> v = []) \\<and>\n                         x = r @ v \\<and>\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                          u \\<in> T S \\<or>\n                          t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))\n 2. \\<lbrakk>chain Y;\n     \\<forall>xa.\n        \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           x = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n            t \\<in> D S \\<and> u \\<in> T (Y xa));\n     \\<not> (\\<forall>t u r.\n                r setinterleaves ((t, u), insert tick\n     (ev ` A)) \\<longrightarrow>\n                r \\<le> x \\<longrightarrow>\n                ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                 u \\<notin> T S) \\<and>\n                (t \\<in> D S \\<longrightarrow>\n                 (\\<exists>x. u \\<notin> T (Y x))))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u r v.\n                         front_tickFree v \\<and>\n                         (tickFree r \\<or> v = []) \\<and>\n                         x = r @ v \\<and>\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                          u \\<in> T S \\<or>\n                          t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))", "from B Ctryy1 Ctryy"], ["proof (chain)\npicking this:\n  \\<forall>xa.\n     \\<exists>t u r v.\n        front_tickFree v \\<and>\n        (tickFree r \\<or> v = []) \\<and>\n        x = r @ v \\<and>\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n        (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n         t \\<in> D S \\<and> u \\<in> T (Y xa))\n  tryunion1 =\n  {n. \\<exists>(t, u, r)\\<in>tryunion.\n         t \\<in> D (Y n) \\<and> u \\<in> T S \\<or>\n         t \\<in> D S \\<and> u \\<in> T (Y n)}\n  tryunion =\n  {(t, u, r).\n   r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n   (\\<exists>v.\n       x = r @ v \\<and> front_tickFree v \\<and> (tickFree r \\<or> v = []))}", "have Ctryy3: \"\\<forall>n. n\\<in>tryunion1\""], ["proof (prove)\nusing this:\n  \\<forall>xa.\n     \\<exists>t u r v.\n        front_tickFree v \\<and>\n        (tickFree r \\<or> v = []) \\<and>\n        x = r @ v \\<and>\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n        (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n         t \\<in> D S \\<and> u \\<in> T (Y xa))\n  tryunion1 =\n  {n. \\<exists>(t, u, r)\\<in>tryunion.\n         t \\<in> D (Y n) \\<and> u \\<in> T S \\<or>\n         t \\<in> D S \\<and> u \\<in> T (Y n)}\n  tryunion =\n  {(t, u, r).\n   r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n   (\\<exists>v.\n       x = r @ v \\<and> front_tickFree v \\<and> (tickFree r \\<or> v = []))}\n\ngoal (1 subgoal):\n 1. \\<forall>n. n \\<in> tryunion1", "by blast"], ["proof (state)\nthis:\n  \\<forall>n. n \\<in> tryunion1\n\ngoal (2 subgoals):\n 1. \\<lbrakk>chain Y;\n     \\<forall>xa.\n        \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           x = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n            t \\<in> D S \\<and> u \\<in> T (Y xa));\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        r \\<le> x \\<longrightarrow>\n        ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n        (t \\<in> D S \\<longrightarrow>\n         (\\<exists>x. u \\<notin> T (Y x)))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u r v.\n                         front_tickFree v \\<and>\n                         (tickFree r \\<or> v = []) \\<and>\n                         x = r @ v \\<and>\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                          u \\<in> T S \\<or>\n                          t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))\n 2. \\<lbrakk>chain Y;\n     \\<forall>xa.\n        \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           x = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n            t \\<in> D S \\<and> u \\<in> T (Y xa));\n     \\<not> (\\<forall>t u r.\n                r setinterleaves ((t, u), insert tick\n     (ev ` A)) \\<longrightarrow>\n                r \\<le> x \\<longrightarrow>\n                ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                 u \\<notin> T S) \\<and>\n                (t \\<in> D S \\<longrightarrow>\n                 (\\<exists>x. u \\<notin> T (Y x))))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u r v.\n                         front_tickFree v \\<and>\n                         (tickFree r \\<or> v = []) \\<and>\n                         x = r @ v \\<and>\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                          u \\<in> T S \\<or>\n                          t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))", "from Ctryy3"], ["proof (chain)\npicking this:\n  \\<forall>n. n \\<in> tryunion1", "have Ctryy2: \"infinite tryunion1\""], ["proof (prove)\nusing this:\n  \\<forall>n. n \\<in> tryunion1\n\ngoal (1 subgoal):\n 1. infinite tryunion1", "using finite_nat_set_iff_bounded"], ["proof (prove)\nusing this:\n  \\<forall>n. n \\<in> tryunion1\n  finite ?N = (\\<exists>m. \\<forall>n\\<in>?N. n < m)\n\ngoal (1 subgoal):\n 1. infinite tryunion1", "by auto"], ["proof (state)\nthis:\n  infinite tryunion1\n\ngoal (2 subgoals):\n 1. \\<lbrakk>chain Y;\n     \\<forall>xa.\n        \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           x = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n            t \\<in> D S \\<and> u \\<in> T (Y xa));\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        r \\<le> x \\<longrightarrow>\n        ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n        (t \\<in> D S \\<longrightarrow>\n         (\\<exists>x. u \\<notin> T (Y x)))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u r v.\n                         front_tickFree v \\<and>\n                         (tickFree r \\<or> v = []) \\<and>\n                         x = r @ v \\<and>\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                          u \\<in> T S \\<or>\n                          t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))\n 2. \\<lbrakk>chain Y;\n     \\<forall>xa.\n        \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           x = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n            t \\<in> D S \\<and> u \\<in> T (Y xa));\n     \\<not> (\\<forall>t u r.\n                r setinterleaves ((t, u), insert tick\n     (ev ` A)) \\<longrightarrow>\n                r \\<le> x \\<longrightarrow>\n                ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                 u \\<notin> T S) \\<and>\n                (t \\<in> D S \\<longrightarrow>\n                 (\\<exists>x. u \\<notin> T (Y x))))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u r v.\n                         front_tickFree v \\<and>\n                         (tickFree r \\<or> v = []) \\<and>\n                         x = r @ v \\<and>\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                          u \\<in> T S \\<or>\n                          t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))", "from Ctryy2 Ctryy1 tolfin"], ["proof (chain)\npicking this:\n  infinite tryunion1\n  tryunion1 =\n  {n. \\<exists>(t, u, r)\\<in>tryunion.\n         t \\<in> D (Y n) \\<and> u \\<in> T S \\<or>\n         t \\<in> D S \\<and> u \\<in> T (Y n)}\n  finite tryunion", "obtain  r2 t2 u2 where Ee: \"(t2,u2, r2)\\<in>tryunion \\<and>  \n      infinite {n. (t2 \\<in> D (Y n) \\<and> u2 \\<in> T S \\<or> t2 \\<in> D S \\<and> u2 \\<in> T (Y n))}\""], ["proof (prove)\nusing this:\n  infinite tryunion1\n  tryunion1 =\n  {n. \\<exists>(t, u, r)\\<in>tryunion.\n         t \\<in> D (Y n) \\<and> u \\<in> T S \\<or>\n         t \\<in> D S \\<and> u \\<in> T (Y n)}\n  finite tryunion\n\ngoal (1 subgoal):\n 1. (\\<And>t2 u2 r2.\n        (t2, u2, r2) \\<in> tryunion \\<and>\n        infinite\n         {n. t2 \\<in> D (Y n) \\<and> u2 \\<in> T S \\<or>\n             t2 \\<in> D S \\<and> u2 \\<in> T (Y n)} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (t2, u2, r2) \\<in> tryunion \\<and>\n  infinite\n   {n. t2 \\<in> D (Y n) \\<and> u2 \\<in> T S \\<or>\n       t2 \\<in> D S \\<and> u2 \\<in> T (Y n)}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>chain Y;\n     \\<forall>xa.\n        \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           x = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n            t \\<in> D S \\<and> u \\<in> T (Y xa));\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        r \\<le> x \\<longrightarrow>\n        ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n        (t \\<in> D S \\<longrightarrow>\n         (\\<exists>x. u \\<notin> T (Y x)))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u r v.\n                         front_tickFree v \\<and>\n                         (tickFree r \\<or> v = []) \\<and>\n                         x = r @ v \\<and>\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                          u \\<in> T S \\<or>\n                          t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))\n 2. \\<lbrakk>chain Y;\n     \\<forall>xa.\n        \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           x = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n            t \\<in> D S \\<and> u \\<in> T (Y xa));\n     \\<not> (\\<forall>t u r.\n                r setinterleaves ((t, u), insert tick\n     (ev ` A)) \\<longrightarrow>\n                r \\<le> x \\<longrightarrow>\n                ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                 u \\<notin> T S) \\<and>\n                (t \\<in> D S \\<longrightarrow>\n                 (\\<exists>x. u \\<notin> T (Y x))))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u r v.\n                         front_tickFree v \\<and>\n                         (tickFree r \\<or> v = []) \\<and>\n                         x = r @ v \\<and>\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                          u \\<in> T S \\<or>\n                          t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))", "from True Ee  Ctryy"], ["proof (chain)\npicking this:\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     r \\<le> x \\<longrightarrow>\n     ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n     (t \\<in> D S \\<longrightarrow> (\\<exists>x. u \\<notin> T (Y x)))\n  (t2, u2, r2) \\<in> tryunion \\<and>\n  infinite\n   {n. t2 \\<in> D (Y n) \\<and> u2 \\<in> T S \\<or>\n       t2 \\<in> D S \\<and> u2 \\<in> T (Y n)}\n  tryunion =\n  {(t, u, r).\n   r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n   (\\<exists>v.\n       x = r @ v \\<and> front_tickFree v \\<and> (tickFree r \\<or> v = []))}", "obtain x1 x2 where Ee1: \"((t2 \\<notin> D (Y x1)) \\<or> u2 \\<notin> T S) \\<and> (t2 \\<in> D S \\<longrightarrow> \n      (u2 \\<notin> T (Y x2)))\""], ["proof (prove)\nusing this:\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     r \\<le> x \\<longrightarrow>\n     ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n     (t \\<in> D S \\<longrightarrow> (\\<exists>x. u \\<notin> T (Y x)))\n  (t2, u2, r2) \\<in> tryunion \\<and>\n  infinite\n   {n. t2 \\<in> D (Y n) \\<and> u2 \\<in> T S \\<or>\n       t2 \\<in> D S \\<and> u2 \\<in> T (Y n)}\n  tryunion =\n  {(t, u, r).\n   r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n   (\\<exists>v.\n       x = r @ v \\<and> front_tickFree v \\<and> (tickFree r \\<or> v = []))}\n\ngoal (1 subgoal):\n 1. (\\<And>x1 x2.\n        (t2 \\<notin> D (Y x1) \\<or> u2 \\<notin> T S) \\<and>\n        (t2 \\<in> D S \\<longrightarrow>\n         u2 \\<notin> T (Y x2)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "apply (simp add: le_list_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x1 x2.\n                (t2 \\<in> D (Y x1) \\<longrightarrow> u2 \\<notin> T S) \\<and>\n                (t2 \\<in> D S \\<longrightarrow>\n                 u2 \\<notin> T (Y x2)) \\<Longrightarrow>\n                thesis;\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        (\\<exists>ra. r @ ra = x) \\<longrightarrow>\n        ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n        (t \\<in> D S \\<longrightarrow> (\\<exists>x. u \\<notin> T (Y x)));\n     r2 setinterleaves ((t2, u2), insert tick (ev ` A)) \\<and>\n     (\\<exists>v.\n         x = r2 @ v \\<and>\n         front_tickFree v \\<and> (tickFree r2 \\<or> v = [])) \\<and>\n     (finite {n. t2 \\<in> D (Y n) \\<and> u2 \\<in> T S} \\<longrightarrow>\n      infinite {n. t2 \\<in> D S \\<and> u2 \\<in> T (Y n)});\n     tryunion =\n     {(t, u, r).\n      r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n      (\\<exists>v.\n          x = r @ v \\<and>\n          front_tickFree v \\<and> (tickFree r \\<or> v = []))}\\<rbrakk>\n    \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  (t2 \\<notin> D (Y x1) \\<or> u2 \\<notin> T S) \\<and>\n  (t2 \\<in> D S \\<longrightarrow> u2 \\<notin> T (Y x2))\n\ngoal (2 subgoals):\n 1. \\<lbrakk>chain Y;\n     \\<forall>xa.\n        \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           x = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n            t \\<in> D S \\<and> u \\<in> T (Y xa));\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        r \\<le> x \\<longrightarrow>\n        ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n        (t \\<in> D S \\<longrightarrow>\n         (\\<exists>x. u \\<notin> T (Y x)))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u r v.\n                         front_tickFree v \\<and>\n                         (tickFree r \\<or> v = []) \\<and>\n                         x = r @ v \\<and>\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                          u \\<in> T S \\<or>\n                          t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))\n 2. \\<lbrakk>chain Y;\n     \\<forall>xa.\n        \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           x = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n            t \\<in> D S \\<and> u \\<in> T (Y xa));\n     \\<not> (\\<forall>t u r.\n                r setinterleaves ((t, u), insert tick\n     (ev ` A)) \\<longrightarrow>\n                r \\<le> x \\<longrightarrow>\n                ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                 u \\<notin> T S) \\<and>\n                (t \\<in> D S \\<longrightarrow>\n                 (\\<exists>x. u \\<notin> T (Y x))))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u r v.\n                         front_tickFree v \\<and>\n                         (tickFree r \\<or> v = []) \\<and>\n                         x = r @ v \\<and>\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                          u \\<in> T S \\<or>\n                          t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))", "from Ee Ee1 Ctryy"], ["proof (chain)\npicking this:\n  (t2, u2, r2) \\<in> tryunion \\<and>\n  infinite\n   {n. t2 \\<in> D (Y n) \\<and> u2 \\<in> T S \\<or>\n       t2 \\<in> D S \\<and> u2 \\<in> T (Y n)}\n  (t2 \\<notin> D (Y x1) \\<or> u2 \\<notin> T S) \\<and>\n  (t2 \\<in> D S \\<longrightarrow> u2 \\<notin> T (Y x2))\n  tryunion =\n  {(t, u, r).\n   r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n   (\\<exists>v.\n       x = r @ v \\<and> front_tickFree v \\<and> (tickFree r \\<or> v = []))}", "obtain x3 where Ee2: \"(x1\\<le>x3) \\<and> (x2\\<le>x3) \\<and> (t2 \\<in> D (Y x3) \\<and> u2 \\<in> T S \\<or> \n      t2 \\<in> D S \\<and> u2 \\<in> T (Y x3))\""], ["proof (prove)\nusing this:\n  (t2, u2, r2) \\<in> tryunion \\<and>\n  infinite\n   {n. t2 \\<in> D (Y n) \\<and> u2 \\<in> T S \\<or>\n       t2 \\<in> D S \\<and> u2 \\<in> T (Y n)}\n  (t2 \\<notin> D (Y x1) \\<or> u2 \\<notin> T S) \\<and>\n  (t2 \\<in> D S \\<longrightarrow> u2 \\<notin> T (Y x2))\n  tryunion =\n  {(t, u, r).\n   r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n   (\\<exists>v.\n       x = r @ v \\<and> front_tickFree v \\<and> (tickFree r \\<or> v = []))}\n\ngoal (1 subgoal):\n 1. (\\<And>x3.\n        x1 \\<le> x3 \\<and>\n        x2 \\<le> x3 \\<and>\n        (t2 \\<in> D (Y x3) \\<and> u2 \\<in> T S \\<or>\n         t2 \\<in> D S \\<and> u2 \\<in> T (Y x3)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "apply(simp add: infinite_nat_iff_unbounded_le)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x3.\n                x1 \\<le> x3 \\<and>\n                x2 \\<le> x3 \\<and>\n                (t2 \\<in> D (Y x3) \\<and> u2 \\<in> T S \\<or>\n                 t2 \\<in> D S \\<and> u2 \\<in> T (Y x3)) \\<Longrightarrow>\n                thesis;\n     r2 setinterleaves ((t2, u2), insert tick (ev ` A)) \\<and>\n     (\\<exists>v.\n         x = r2 @ v \\<and>\n         front_tickFree v \\<and> (tickFree r2 \\<or> v = [])) \\<and>\n     ((\\<forall>m.\n          \\<exists>n\\<ge>m. t2 \\<in> D (Y n) \\<and> u2 \\<in> T S) \\<or>\n      (\\<forall>m. \\<exists>n\\<ge>m. t2 \\<in> D S \\<and> u2 \\<in> T (Y n)));\n     (t2 \\<in> D (Y x1) \\<longrightarrow> u2 \\<notin> T S) \\<and>\n     (t2 \\<in> D S \\<longrightarrow> u2 \\<notin> T (Y x2));\n     tryunion =\n     {(t, u, r).\n      r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n      (\\<exists>v.\n          x = r @ v \\<and>\n          front_tickFree v \\<and> (tickFree r \\<or> v = []))}\\<rbrakk>\n    \\<Longrightarrow> thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x3.\n                x1 \\<le> x3 \\<and>\n                x2 \\<le> x3 \\<and>\n                (t2 \\<in> D (Y x3) \\<and> u2 \\<in> T S \\<or>\n                 t2 \\<in> D S \\<and> u2 \\<in> T (Y x3)) \\<Longrightarrow>\n                thesis;\n     r2 setinterleaves ((t2, u2), insert tick (ev ` A)) \\<and>\n     (\\<exists>v.\n         x = r2 @ v \\<and>\n         front_tickFree v \\<and> (tickFree r2 \\<or> v = [])) \\<and>\n     ((\\<forall>m.\n          \\<exists>n\\<ge>m. t2 \\<in> D (Y n) \\<and> u2 \\<in> T S) \\<or>\n      (\\<forall>m. \\<exists>n\\<ge>m. t2 \\<in> D S \\<and> u2 \\<in> T (Y n)));\n     (t2 \\<in> D (Y x1) \\<longrightarrow> u2 \\<notin> T S) \\<and>\n     (t2 \\<in> D S \\<longrightarrow> u2 \\<notin> T (Y x2));\n     tryunion =\n     {(t, u, r).\n      r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n      (\\<exists>v.\n          x = r @ v \\<and>\n          front_tickFree v \\<and> (tickFree r \\<or> v = []))}\\<rbrakk>\n    \\<Longrightarrow> thesis", "assume a1: \"r2 setinterleaves ((t2, u2), insert tick (ev ` A)) \\<and> (\\<exists>v. x = r2 @ v \\<and> \n        front_tickFree v \\<and> (tickFree r2 \\<or> v = [])) \\<and> ((\\<forall>m. \\<exists>n\\<ge>m. t2 \\<in> D (Y n) \\<and> u2 \\<in> T S) \\<or> \n        (\\<forall>m. \\<exists>n\\<ge>m. t2 \\<in> D S \\<and> u2 \\<in> T (Y n)))\""], ["proof (state)\nthis:\n  r2 setinterleaves ((t2, u2), insert tick (ev ` A)) \\<and>\n  (\\<exists>v.\n      x = r2 @ v \\<and>\n      front_tickFree v \\<and> (tickFree r2 \\<or> v = [])) \\<and>\n  ((\\<forall>m.\n       \\<exists>n\\<ge>m. t2 \\<in> D (Y n) \\<and> u2 \\<in> T S) \\<or>\n   (\\<forall>m. \\<exists>n\\<ge>m. t2 \\<in> D S \\<and> u2 \\<in> T (Y n)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x3.\n                x1 \\<le> x3 \\<and>\n                x2 \\<le> x3 \\<and>\n                (t2 \\<in> D (Y x3) \\<and> u2 \\<in> T S \\<or>\n                 t2 \\<in> D S \\<and> u2 \\<in> T (Y x3)) \\<Longrightarrow>\n                thesis;\n     r2 setinterleaves ((t2, u2), insert tick (ev ` A)) \\<and>\n     (\\<exists>v.\n         x = r2 @ v \\<and>\n         front_tickFree v \\<and> (tickFree r2 \\<or> v = [])) \\<and>\n     ((\\<forall>m.\n          \\<exists>n\\<ge>m. t2 \\<in> D (Y n) \\<and> u2 \\<in> T S) \\<or>\n      (\\<forall>m. \\<exists>n\\<ge>m. t2 \\<in> D S \\<and> u2 \\<in> T (Y n)));\n     (t2 \\<in> D (Y x1) \\<longrightarrow> u2 \\<notin> T S) \\<and>\n     (t2 \\<in> D S \\<longrightarrow> u2 \\<notin> T (Y x2));\n     tryunion =\n     {(t, u, r).\n      r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n      (\\<exists>v.\n          x = r @ v \\<and>\n          front_tickFree v \\<and> (tickFree r \\<or> v = []))}\\<rbrakk>\n    \\<Longrightarrow> thesis", "assume a2: \"\\<And>x3. x1 \\<le> x3 \\<and> x2 \\<le> x3\\<and>(t2 \\<in> D (Y x3) \\<and> u2 \\<in> T S \\<or> t2 \\<in> D S \\<and> u2 \\<in> T (Y x3)) \n        \\<Longrightarrow> thesis\""], ["proof (state)\nthis:\n  x1 \\<le> ?x3.0 \\<and>\n  x2 \\<le> ?x3.0 \\<and>\n  (t2 \\<in> D (Y ?x3.0) \\<and> u2 \\<in> T S \\<or>\n   t2 \\<in> D S \\<and> u2 \\<in> T (Y ?x3.0)) \\<Longrightarrow>\n  thesis\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x3.\n                x1 \\<le> x3 \\<and>\n                x2 \\<le> x3 \\<and>\n                (t2 \\<in> D (Y x3) \\<and> u2 \\<in> T S \\<or>\n                 t2 \\<in> D S \\<and> u2 \\<in> T (Y x3)) \\<Longrightarrow>\n                thesis;\n     r2 setinterleaves ((t2, u2), insert tick (ev ` A)) \\<and>\n     (\\<exists>v.\n         x = r2 @ v \\<and>\n         front_tickFree v \\<and> (tickFree r2 \\<or> v = [])) \\<and>\n     ((\\<forall>m.\n          \\<exists>n\\<ge>m. t2 \\<in> D (Y n) \\<and> u2 \\<in> T S) \\<or>\n      (\\<forall>m. \\<exists>n\\<ge>m. t2 \\<in> D S \\<and> u2 \\<in> T (Y n)));\n     (t2 \\<in> D (Y x1) \\<longrightarrow> u2 \\<notin> T S) \\<and>\n     (t2 \\<in> D S \\<longrightarrow> u2 \\<notin> T (Y x2));\n     tryunion =\n     {(t, u, r).\n      r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n      (\\<exists>v.\n          x = r @ v \\<and>\n          front_tickFree v \\<and> (tickFree r \\<or> v = []))}\\<rbrakk>\n    \\<Longrightarrow> thesis", "obtain nn :: \"nat \\<Rightarrow> nat\" where f3: \"\\<forall>x0. (\\<exists>v1\\<ge>x0. t2 \\<in> D S \\<and> u2 \\<in> T (Y v1)) = \n        (x0 \\<le> nn x0 \\<and> t2 \\<in> D S \\<and> u2 \\<in> T (Y (nn x0)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>nn.\n        \\<forall>x0.\n           (\\<exists>v1\\<ge>x0. t2 \\<in> D S \\<and> u2 \\<in> T (Y v1)) =\n           (x0 \\<le> nn x0 \\<and>\n            t2 \\<in> D S \\<and> u2 \\<in> T (Y (nn x0))) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by moura"], ["proof (state)\nthis:\n  \\<forall>x0.\n     (\\<exists>v1\\<ge>x0. t2 \\<in> D S \\<and> u2 \\<in> T (Y v1)) =\n     (x0 \\<le> nn x0 \\<and> t2 \\<in> D S \\<and> u2 \\<in> T (Y (nn x0)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x3.\n                x1 \\<le> x3 \\<and>\n                x2 \\<le> x3 \\<and>\n                (t2 \\<in> D (Y x3) \\<and> u2 \\<in> T S \\<or>\n                 t2 \\<in> D S \\<and> u2 \\<in> T (Y x3)) \\<Longrightarrow>\n                thesis;\n     r2 setinterleaves ((t2, u2), insert tick (ev ` A)) \\<and>\n     (\\<exists>v.\n         x = r2 @ v \\<and>\n         front_tickFree v \\<and> (tickFree r2 \\<or> v = [])) \\<and>\n     ((\\<forall>m.\n          \\<exists>n\\<ge>m. t2 \\<in> D (Y n) \\<and> u2 \\<in> T S) \\<or>\n      (\\<forall>m. \\<exists>n\\<ge>m. t2 \\<in> D S \\<and> u2 \\<in> T (Y n)));\n     (t2 \\<in> D (Y x1) \\<longrightarrow> u2 \\<notin> T S) \\<and>\n     (t2 \\<in> D S \\<longrightarrow> u2 \\<notin> T (Y x2));\n     tryunion =\n     {(t, u, r).\n      r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n      (\\<exists>v.\n          x = r @ v \\<and>\n          front_tickFree v \\<and> (tickFree r \\<or> v = []))}\\<rbrakk>\n    \\<Longrightarrow> thesis", "obtain nna :: \"nat \\<Rightarrow> nat\" where \"\\<forall>x0. (\\<exists>v1\\<ge>x0. t2 \\<in> D (Y v1) \\<and> u2 \\<in> T S) = \n        (x0 \\<le> nna x0 \\<and> t2 \\<in> D (Y (nna x0)) \\<and> u2 \\<in> T S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>nna.\n        \\<forall>x0.\n           (\\<exists>v1\\<ge>x0. t2 \\<in> D (Y v1) \\<and> u2 \\<in> T S) =\n           (x0 \\<le> nna x0 \\<and>\n            t2 \\<in> D (Y (nna x0)) \\<and> u2 \\<in> T S) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by moura"], ["proof (state)\nthis:\n  \\<forall>x0.\n     (\\<exists>v1\\<ge>x0. t2 \\<in> D (Y v1) \\<and> u2 \\<in> T S) =\n     (x0 \\<le> nna x0 \\<and> t2 \\<in> D (Y (nna x0)) \\<and> u2 \\<in> T S)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x3.\n                x1 \\<le> x3 \\<and>\n                x2 \\<le> x3 \\<and>\n                (t2 \\<in> D (Y x3) \\<and> u2 \\<in> T S \\<or>\n                 t2 \\<in> D S \\<and> u2 \\<in> T (Y x3)) \\<Longrightarrow>\n                thesis;\n     r2 setinterleaves ((t2, u2), insert tick (ev ` A)) \\<and>\n     (\\<exists>v.\n         x = r2 @ v \\<and>\n         front_tickFree v \\<and> (tickFree r2 \\<or> v = [])) \\<and>\n     ((\\<forall>m.\n          \\<exists>n\\<ge>m. t2 \\<in> D (Y n) \\<and> u2 \\<in> T S) \\<or>\n      (\\<forall>m. \\<exists>n\\<ge>m. t2 \\<in> D S \\<and> u2 \\<in> T (Y n)));\n     (t2 \\<in> D (Y x1) \\<longrightarrow> u2 \\<notin> T S) \\<and>\n     (t2 \\<in> D S \\<longrightarrow> u2 \\<notin> T (Y x2));\n     tryunion =\n     {(t, u, r).\n      r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n      (\\<exists>v.\n          x = r @ v \\<and>\n          front_tickFree v \\<and> (tickFree r \\<or> v = []))}\\<rbrakk>\n    \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  \\<forall>x0.\n     (\\<exists>v1\\<ge>x0. t2 \\<in> D (Y v1) \\<and> u2 \\<in> T S) =\n     (x0 \\<le> nna x0 \\<and> t2 \\<in> D (Y (nna x0)) \\<and> u2 \\<in> T S)", "have f4: \"(\\<forall>n. n \\<le> nna n \\<and> t2 \\<in> D (Y (nna n)) \\<and> u2 \\<in> T S) \\<or> (\\<forall>n. n \\<le> nn n \\<and> t2 \\<in> D S \n        \\<and> u2 \\<in> T (Y (nn n)))\""], ["proof (prove)\nusing this:\n  \\<forall>x0.\n     (\\<exists>v1\\<ge>x0. t2 \\<in> D (Y v1) \\<and> u2 \\<in> T S) =\n     (x0 \\<le> nna x0 \\<and> t2 \\<in> D (Y (nna x0)) \\<and> u2 \\<in> T S)\n\ngoal (1 subgoal):\n 1. (\\<forall>n.\n        n \\<le> nna n \\<and>\n        t2 \\<in> D (Y (nna n)) \\<and> u2 \\<in> T S) \\<or>\n    (\\<forall>n.\n        n \\<le> nn n \\<and> t2 \\<in> D S \\<and> u2 \\<in> T (Y (nn n)))", "using f3 a1"], ["proof (prove)\nusing this:\n  \\<forall>x0.\n     (\\<exists>v1\\<ge>x0. t2 \\<in> D (Y v1) \\<and> u2 \\<in> T S) =\n     (x0 \\<le> nna x0 \\<and> t2 \\<in> D (Y (nna x0)) \\<and> u2 \\<in> T S)\n  \\<forall>x0.\n     (\\<exists>v1\\<ge>x0. t2 \\<in> D S \\<and> u2 \\<in> T (Y v1)) =\n     (x0 \\<le> nn x0 \\<and> t2 \\<in> D S \\<and> u2 \\<in> T (Y (nn x0)))\n  r2 setinterleaves ((t2, u2), insert tick (ev ` A)) \\<and>\n  (\\<exists>v.\n      x = r2 @ v \\<and>\n      front_tickFree v \\<and> (tickFree r2 \\<or> v = [])) \\<and>\n  ((\\<forall>m.\n       \\<exists>n\\<ge>m. t2 \\<in> D (Y n) \\<and> u2 \\<in> T S) \\<or>\n   (\\<forall>m. \\<exists>n\\<ge>m. t2 \\<in> D S \\<and> u2 \\<in> T (Y n)))\n\ngoal (1 subgoal):\n 1. (\\<forall>n.\n        n \\<le> nna n \\<and>\n        t2 \\<in> D (Y (nna n)) \\<and> u2 \\<in> T S) \\<or>\n    (\\<forall>n.\n        n \\<le> nn n \\<and> t2 \\<in> D S \\<and> u2 \\<in> T (Y (nn n)))", "by presburger"], ["proof (state)\nthis:\n  (\\<forall>n.\n      n \\<le> nna n \\<and> t2 \\<in> D (Y (nna n)) \\<and> u2 \\<in> T S) \\<or>\n  (\\<forall>n.\n      n \\<le> nn n \\<and> t2 \\<in> D S \\<and> u2 \\<in> T (Y (nn n)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x3.\n                x1 \\<le> x3 \\<and>\n                x2 \\<le> x3 \\<and>\n                (t2 \\<in> D (Y x3) \\<and> u2 \\<in> T S \\<or>\n                 t2 \\<in> D S \\<and> u2 \\<in> T (Y x3)) \\<Longrightarrow>\n                thesis;\n     r2 setinterleaves ((t2, u2), insert tick (ev ` A)) \\<and>\n     (\\<exists>v.\n         x = r2 @ v \\<and>\n         front_tickFree v \\<and> (tickFree r2 \\<or> v = [])) \\<and>\n     ((\\<forall>m.\n          \\<exists>n\\<ge>m. t2 \\<in> D (Y n) \\<and> u2 \\<in> T S) \\<or>\n      (\\<forall>m. \\<exists>n\\<ge>m. t2 \\<in> D S \\<and> u2 \\<in> T (Y n)));\n     (t2 \\<in> D (Y x1) \\<longrightarrow> u2 \\<notin> T S) \\<and>\n     (t2 \\<in> D S \\<longrightarrow> u2 \\<notin> T (Y x2));\n     tryunion =\n     {(t, u, r).\n      r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n      (\\<exists>v.\n          x = r @ v \\<and>\n          front_tickFree v \\<and> (tickFree r \\<or> v = []))}\\<rbrakk>\n    \\<Longrightarrow> thesis", "have \"(\\<exists>n. \\<not> n \\<le> nn n \\<or> t2 \\<notin> D S \\<or> u2 \\<notin> T (Y (nn n))) \\<or> (\\<exists>n\\<ge>x1. x2 \\<le> n \\<and> (t2 \\<in> D (Y n) \\<and> \n        u2 \\<in> T S \\<or> t2 \\<in> D S \\<and> u2 \\<in> T (Y n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>n.\n        \\<not> n \\<le> nn n \\<or>\n        t2 \\<notin> D S \\<or> u2 \\<notin> T (Y (nn n))) \\<or>\n    (\\<exists>n\\<ge>x1.\n        x2 \\<le> n \\<and>\n        (t2 \\<in> D (Y n) \\<and> u2 \\<in> T S \\<or>\n         t2 \\<in> D S \\<and> u2 \\<in> T (Y n)))", "by (metis le_cases order.trans)"], ["proof (state)\nthis:\n  (\\<exists>n.\n      \\<not> n \\<le> nn n \\<or>\n      t2 \\<notin> D S \\<or> u2 \\<notin> T (Y (nn n))) \\<or>\n  (\\<exists>n\\<ge>x1.\n      x2 \\<le> n \\<and>\n      (t2 \\<in> D (Y n) \\<and> u2 \\<in> T S \\<or>\n       t2 \\<in> D S \\<and> u2 \\<in> T (Y n)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x3.\n                x1 \\<le> x3 \\<and>\n                x2 \\<le> x3 \\<and>\n                (t2 \\<in> D (Y x3) \\<and> u2 \\<in> T S \\<or>\n                 t2 \\<in> D S \\<and> u2 \\<in> T (Y x3)) \\<Longrightarrow>\n                thesis;\n     r2 setinterleaves ((t2, u2), insert tick (ev ` A)) \\<and>\n     (\\<exists>v.\n         x = r2 @ v \\<and>\n         front_tickFree v \\<and> (tickFree r2 \\<or> v = [])) \\<and>\n     ((\\<forall>m.\n          \\<exists>n\\<ge>m. t2 \\<in> D (Y n) \\<and> u2 \\<in> T S) \\<or>\n      (\\<forall>m. \\<exists>n\\<ge>m. t2 \\<in> D S \\<and> u2 \\<in> T (Y n)));\n     (t2 \\<in> D (Y x1) \\<longrightarrow> u2 \\<notin> T S) \\<and>\n     (t2 \\<in> D S \\<longrightarrow> u2 \\<notin> T (Y x2));\n     tryunion =\n     {(t, u, r).\n      r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n      (\\<exists>v.\n          x = r @ v \\<and>\n          front_tickFree v \\<and> (tickFree r \\<or> v = []))}\\<rbrakk>\n    \\<Longrightarrow> thesis", "moreover"], ["proof (state)\nthis:\n  (\\<exists>n.\n      \\<not> n \\<le> nn n \\<or>\n      t2 \\<notin> D S \\<or> u2 \\<notin> T (Y (nn n))) \\<or>\n  (\\<exists>n\\<ge>x1.\n      x2 \\<le> n \\<and>\n      (t2 \\<in> D (Y n) \\<and> u2 \\<in> T S \\<or>\n       t2 \\<in> D S \\<and> u2 \\<in> T (Y n)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x3.\n                x1 \\<le> x3 \\<and>\n                x2 \\<le> x3 \\<and>\n                (t2 \\<in> D (Y x3) \\<and> u2 \\<in> T S \\<or>\n                 t2 \\<in> D S \\<and> u2 \\<in> T (Y x3)) \\<Longrightarrow>\n                thesis;\n     r2 setinterleaves ((t2, u2), insert tick (ev ` A)) \\<and>\n     (\\<exists>v.\n         x = r2 @ v \\<and>\n         front_tickFree v \\<and> (tickFree r2 \\<or> v = [])) \\<and>\n     ((\\<forall>m.\n          \\<exists>n\\<ge>m. t2 \\<in> D (Y n) \\<and> u2 \\<in> T S) \\<or>\n      (\\<forall>m. \\<exists>n\\<ge>m. t2 \\<in> D S \\<and> u2 \\<in> T (Y n)));\n     (t2 \\<in> D (Y x1) \\<longrightarrow> u2 \\<notin> T S) \\<and>\n     (t2 \\<in> D S \\<longrightarrow> u2 \\<notin> T (Y x2));\n     tryunion =\n     {(t, u, r).\n      r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n      (\\<exists>v.\n          x = r @ v \\<and>\n          front_tickFree v \\<and> (tickFree r \\<or> v = []))}\\<rbrakk>\n    \\<Longrightarrow> thesis", "{"], ["proof (state)\nthis:\n  (\\<exists>n.\n      \\<not> n \\<le> nn n \\<or>\n      t2 \\<notin> D S \\<or> u2 \\<notin> T (Y (nn n))) \\<or>\n  (\\<exists>n\\<ge>x1.\n      x2 \\<le> n \\<and>\n      (t2 \\<in> D (Y n) \\<and> u2 \\<in> T S \\<or>\n       t2 \\<in> D S \\<and> u2 \\<in> T (Y n)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x3.\n                x1 \\<le> x3 \\<and>\n                x2 \\<le> x3 \\<and>\n                (t2 \\<in> D (Y x3) \\<and> u2 \\<in> T S \\<or>\n                 t2 \\<in> D S \\<and> u2 \\<in> T (Y x3)) \\<Longrightarrow>\n                thesis;\n     r2 setinterleaves ((t2, u2), insert tick (ev ` A)) \\<and>\n     (\\<exists>v.\n         x = r2 @ v \\<and>\n         front_tickFree v \\<and> (tickFree r2 \\<or> v = [])) \\<and>\n     ((\\<forall>m.\n          \\<exists>n\\<ge>m. t2 \\<in> D (Y n) \\<and> u2 \\<in> T S) \\<or>\n      (\\<forall>m. \\<exists>n\\<ge>m. t2 \\<in> D S \\<and> u2 \\<in> T (Y n)));\n     (t2 \\<in> D (Y x1) \\<longrightarrow> u2 \\<notin> T S) \\<and>\n     (t2 \\<in> D S \\<longrightarrow> u2 \\<notin> T (Y x2));\n     tryunion =\n     {(t, u, r).\n      r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n      (\\<exists>v.\n          x = r @ v \\<and>\n          front_tickFree v \\<and> (tickFree r \\<or> v = []))}\\<rbrakk>\n    \\<Longrightarrow> thesis", "assume \"\\<exists>n. \\<not> n \\<le> nn n \\<or> t2 \\<notin> D S \\<or> u2 \\<notin> T (Y (nn n))\""], ["proof (state)\nthis:\n  \\<exists>n.\n     \\<not> n \\<le> nn n \\<or>\n     t2 \\<notin> D S \\<or> u2 \\<notin> T (Y (nn n))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x3.\n                x1 \\<le> x3 \\<and>\n                x2 \\<le> x3 \\<and>\n                (t2 \\<in> D (Y x3) \\<and> u2 \\<in> T S \\<or>\n                 t2 \\<in> D S \\<and> u2 \\<in> T (Y x3)) \\<Longrightarrow>\n                thesis;\n     r2 setinterleaves ((t2, u2), insert tick (ev ` A)) \\<and>\n     (\\<exists>v.\n         x = r2 @ v \\<and>\n         front_tickFree v \\<and> (tickFree r2 \\<or> v = [])) \\<and>\n     ((\\<forall>m.\n          \\<exists>n\\<ge>m. t2 \\<in> D (Y n) \\<and> u2 \\<in> T S) \\<or>\n      (\\<forall>m. \\<exists>n\\<ge>m. t2 \\<in> D S \\<and> u2 \\<in> T (Y n)));\n     (t2 \\<in> D (Y x1) \\<longrightarrow> u2 \\<notin> T S) \\<and>\n     (t2 \\<in> D S \\<longrightarrow> u2 \\<notin> T (Y x2));\n     tryunion =\n     {(t, u, r).\n      r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n      (\\<exists>v.\n          x = r @ v \\<and>\n          front_tickFree v \\<and> (tickFree r \\<or> v = []))}\\<rbrakk>\n    \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  \\<exists>n.\n     \\<not> n \\<le> nn n \\<or>\n     t2 \\<notin> D S \\<or> u2 \\<notin> T (Y (nn n))", "have \"\\<forall>n. n \\<le> nna n \\<and> t2 \\<in> D (Y (nna n)) \\<and> u2 \\<in> T S\""], ["proof (prove)\nusing this:\n  \\<exists>n.\n     \\<not> n \\<le> nn n \\<or>\n     t2 \\<notin> D S \\<or> u2 \\<notin> T (Y (nn n))\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       n \\<le> nna n \\<and> t2 \\<in> D (Y (nna n)) \\<and> u2 \\<in> T S", "using f4"], ["proof (prove)\nusing this:\n  \\<exists>n.\n     \\<not> n \\<le> nn n \\<or>\n     t2 \\<notin> D S \\<or> u2 \\<notin> T (Y (nn n))\n  (\\<forall>n.\n      n \\<le> nna n \\<and> t2 \\<in> D (Y (nna n)) \\<and> u2 \\<in> T S) \\<or>\n  (\\<forall>n.\n      n \\<le> nn n \\<and> t2 \\<in> D S \\<and> u2 \\<in> T (Y (nn n)))\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       n \\<le> nna n \\<and> t2 \\<in> D (Y (nna n)) \\<and> u2 \\<in> T S", "by blast"], ["proof (state)\nthis:\n  \\<forall>n.\n     n \\<le> nna n \\<and> t2 \\<in> D (Y (nna n)) \\<and> u2 \\<in> T S\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x3.\n                x1 \\<le> x3 \\<and>\n                x2 \\<le> x3 \\<and>\n                (t2 \\<in> D (Y x3) \\<and> u2 \\<in> T S \\<or>\n                 t2 \\<in> D S \\<and> u2 \\<in> T (Y x3)) \\<Longrightarrow>\n                thesis;\n     r2 setinterleaves ((t2, u2), insert tick (ev ` A)) \\<and>\n     (\\<exists>v.\n         x = r2 @ v \\<and>\n         front_tickFree v \\<and> (tickFree r2 \\<or> v = [])) \\<and>\n     ((\\<forall>m.\n          \\<exists>n\\<ge>m. t2 \\<in> D (Y n) \\<and> u2 \\<in> T S) \\<or>\n      (\\<forall>m. \\<exists>n\\<ge>m. t2 \\<in> D S \\<and> u2 \\<in> T (Y n)));\n     (t2 \\<in> D (Y x1) \\<longrightarrow> u2 \\<notin> T S) \\<and>\n     (t2 \\<in> D S \\<longrightarrow> u2 \\<notin> T (Y x2));\n     tryunion =\n     {(t, u, r).\n      r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n      (\\<exists>v.\n          x = r @ v \\<and>\n          front_tickFree v \\<and> (tickFree r \\<or> v = []))}\\<rbrakk>\n    \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  \\<forall>n.\n     n \\<le> nna n \\<and> t2 \\<in> D (Y (nna n)) \\<and> u2 \\<in> T S", "have \"\\<exists>n\\<ge>x1. x2 \\<le> n \\<and> (t2 \\<in> D (Y n) \\<and> u2 \\<in> T S \\<or> t2 \\<in> D S \\<and> u2 \\<in> T (Y n))\""], ["proof (prove)\nusing this:\n  \\<forall>n.\n     n \\<le> nna n \\<and> t2 \\<in> D (Y (nna n)) \\<and> u2 \\<in> T S\n\ngoal (1 subgoal):\n 1. \\<exists>n\\<ge>x1.\n       x2 \\<le> n \\<and>\n       (t2 \\<in> D (Y n) \\<and> u2 \\<in> T S \\<or>\n        t2 \\<in> D S \\<and> u2 \\<in> T (Y n))", "by (metis (no_types) le_cases order.trans)"], ["proof (state)\nthis:\n  \\<exists>n\\<ge>x1.\n     x2 \\<le> n \\<and>\n     (t2 \\<in> D (Y n) \\<and> u2 \\<in> T S \\<or>\n      t2 \\<in> D S \\<and> u2 \\<in> T (Y n))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x3.\n                x1 \\<le> x3 \\<and>\n                x2 \\<le> x3 \\<and>\n                (t2 \\<in> D (Y x3) \\<and> u2 \\<in> T S \\<or>\n                 t2 \\<in> D S \\<and> u2 \\<in> T (Y x3)) \\<Longrightarrow>\n                thesis;\n     r2 setinterleaves ((t2, u2), insert tick (ev ` A)) \\<and>\n     (\\<exists>v.\n         x = r2 @ v \\<and>\n         front_tickFree v \\<and> (tickFree r2 \\<or> v = [])) \\<and>\n     ((\\<forall>m.\n          \\<exists>n\\<ge>m. t2 \\<in> D (Y n) \\<and> u2 \\<in> T S) \\<or>\n      (\\<forall>m. \\<exists>n\\<ge>m. t2 \\<in> D S \\<and> u2 \\<in> T (Y n)));\n     (t2 \\<in> D (Y x1) \\<longrightarrow> u2 \\<notin> T S) \\<and>\n     (t2 \\<in> D S \\<longrightarrow> u2 \\<notin> T (Y x2));\n     tryunion =\n     {(t, u, r).\n      r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n      (\\<exists>v.\n          x = r @ v \\<and>\n          front_tickFree v \\<and> (tickFree r \\<or> v = []))}\\<rbrakk>\n    \\<Longrightarrow> thesis", "}"], ["proof (state)\nthis:\n  \\<exists>n.\n     \\<not> n \\<le> nn n \\<or>\n     t2 \\<notin> D S \\<or> u2 \\<notin> T (Y (nn n)) \\<Longrightarrow>\n  \\<exists>n\\<ge>x1.\n     x2 \\<le> n \\<and>\n     (t2 \\<in> D (Y n) \\<and> u2 \\<in> T S \\<or>\n      t2 \\<in> D S \\<and> u2 \\<in> T (Y n))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x3.\n                x1 \\<le> x3 \\<and>\n                x2 \\<le> x3 \\<and>\n                (t2 \\<in> D (Y x3) \\<and> u2 \\<in> T S \\<or>\n                 t2 \\<in> D S \\<and> u2 \\<in> T (Y x3)) \\<Longrightarrow>\n                thesis;\n     r2 setinterleaves ((t2, u2), insert tick (ev ` A)) \\<and>\n     (\\<exists>v.\n         x = r2 @ v \\<and>\n         front_tickFree v \\<and> (tickFree r2 \\<or> v = [])) \\<and>\n     ((\\<forall>m.\n          \\<exists>n\\<ge>m. t2 \\<in> D (Y n) \\<and> u2 \\<in> T S) \\<or>\n      (\\<forall>m. \\<exists>n\\<ge>m. t2 \\<in> D S \\<and> u2 \\<in> T (Y n)));\n     (t2 \\<in> D (Y x1) \\<longrightarrow> u2 \\<notin> T S) \\<and>\n     (t2 \\<in> D S \\<longrightarrow> u2 \\<notin> T (Y x2));\n     tryunion =\n     {(t, u, r).\n      r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n      (\\<exists>v.\n          x = r @ v \\<and>\n          front_tickFree v \\<and> (tickFree r \\<or> v = []))}\\<rbrakk>\n    \\<Longrightarrow> thesis", "ultimately"], ["proof (chain)\npicking this:\n  (\\<exists>n.\n      \\<not> n \\<le> nn n \\<or>\n      t2 \\<notin> D S \\<or> u2 \\<notin> T (Y (nn n))) \\<or>\n  (\\<exists>n\\<ge>x1.\n      x2 \\<le> n \\<and>\n      (t2 \\<in> D (Y n) \\<and> u2 \\<in> T S \\<or>\n       t2 \\<in> D S \\<and> u2 \\<in> T (Y n)))\n  \\<exists>n.\n     \\<not> n \\<le> nn n \\<or>\n     t2 \\<notin> D S \\<or> u2 \\<notin> T (Y (nn n)) \\<Longrightarrow>\n  \\<exists>n\\<ge>x1.\n     x2 \\<le> n \\<and>\n     (t2 \\<in> D (Y n) \\<and> u2 \\<in> T S \\<or>\n      t2 \\<in> D S \\<and> u2 \\<in> T (Y n))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<exists>n.\n      \\<not> n \\<le> nn n \\<or>\n      t2 \\<notin> D S \\<or> u2 \\<notin> T (Y (nn n))) \\<or>\n  (\\<exists>n\\<ge>x1.\n      x2 \\<le> n \\<and>\n      (t2 \\<in> D (Y n) \\<and> u2 \\<in> T S \\<or>\n       t2 \\<in> D S \\<and> u2 \\<in> T (Y n)))\n  \\<exists>n.\n     \\<not> n \\<le> nn n \\<or>\n     t2 \\<notin> D S \\<or> u2 \\<notin> T (Y (nn n)) \\<Longrightarrow>\n  \\<exists>n\\<ge>x1.\n     x2 \\<le> n \\<and>\n     (t2 \\<in> D (Y n) \\<and> u2 \\<in> T S \\<or>\n      t2 \\<in> D S \\<and> u2 \\<in> T (Y n))\n\ngoal (1 subgoal):\n 1. thesis", "using a2"], ["proof (prove)\nusing this:\n  (\\<exists>n.\n      \\<not> n \\<le> nn n \\<or>\n      t2 \\<notin> D S \\<or> u2 \\<notin> T (Y (nn n))) \\<or>\n  (\\<exists>n\\<ge>x1.\n      x2 \\<le> n \\<and>\n      (t2 \\<in> D (Y n) \\<and> u2 \\<in> T S \\<or>\n       t2 \\<in> D S \\<and> u2 \\<in> T (Y n)))\n  \\<exists>n.\n     \\<not> n \\<le> nn n \\<or>\n     t2 \\<notin> D S \\<or> u2 \\<notin> T (Y (nn n)) \\<Longrightarrow>\n  \\<exists>n\\<ge>x1.\n     x2 \\<le> n \\<and>\n     (t2 \\<in> D (Y n) \\<and> u2 \\<in> T S \\<or>\n      t2 \\<in> D S \\<and> u2 \\<in> T (Y n))\n  x1 \\<le> ?x3.0 \\<and>\n  x2 \\<le> ?x3.0 \\<and>\n  (t2 \\<in> D (Y ?x3.0) \\<and> u2 \\<in> T S \\<or>\n   t2 \\<in> D S \\<and> u2 \\<in> T (Y ?x3.0)) \\<Longrightarrow>\n  thesis\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x1 \\<le> x3 \\<and>\n  x2 \\<le> x3 \\<and>\n  (t2 \\<in> D (Y x3) \\<and> u2 \\<in> T S \\<or>\n   t2 \\<in> D S \\<and> u2 \\<in> T (Y x3))\n\ngoal (2 subgoals):\n 1. \\<lbrakk>chain Y;\n     \\<forall>xa.\n        \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           x = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n            t \\<in> D S \\<and> u \\<in> T (Y xa));\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        r \\<le> x \\<longrightarrow>\n        ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n        (t \\<in> D S \\<longrightarrow>\n         (\\<exists>x. u \\<notin> T (Y x)))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u r v.\n                         front_tickFree v \\<and>\n                         (tickFree r \\<or> v = []) \\<and>\n                         x = r @ v \\<and>\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                          u \\<in> T S \\<or>\n                          t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))\n 2. \\<lbrakk>chain Y;\n     \\<forall>xa.\n        \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           x = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n            t \\<in> D S \\<and> u \\<in> T (Y xa));\n     \\<not> (\\<forall>t u r.\n                r setinterleaves ((t, u), insert tick\n     (ev ` A)) \\<longrightarrow>\n                r \\<le> x \\<longrightarrow>\n                ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                 u \\<notin> T S) \\<and>\n                (t \\<in> D S \\<longrightarrow>\n                 (\\<exists>x. u \\<notin> T (Y x))))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u r v.\n                         front_tickFree v \\<and>\n                         (tickFree r \\<or> v = []) \\<and>\n                         x = r @ v \\<and>\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                          u \\<in> T S \\<or>\n                          t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))", "from A"], ["proof (chain)\npicking this:\n  chain Y", "have Abb1: \"\\<forall>n1 n2. n1\\<le>n2 \\<longrightarrow> Y n1 \\<sqsubseteq> Y n2\""], ["proof (prove)\nusing this:\n  chain Y\n\ngoal (1 subgoal):\n 1. \\<forall>n1 n2. n1 \\<le> n2 \\<longrightarrow> Y n1 \\<sqsubseteq> Y n2", "by (simp add: po_class.chain_mono)"], ["proof (state)\nthis:\n  \\<forall>n1 n2. n1 \\<le> n2 \\<longrightarrow> Y n1 \\<sqsubseteq> Y n2\n\ngoal (2 subgoals):\n 1. \\<lbrakk>chain Y;\n     \\<forall>xa.\n        \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           x = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n            t \\<in> D S \\<and> u \\<in> T (Y xa));\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        r \\<le> x \\<longrightarrow>\n        ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n        (t \\<in> D S \\<longrightarrow>\n         (\\<exists>x. u \\<notin> T (Y x)))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u r v.\n                         front_tickFree v \\<and>\n                         (tickFree r \\<or> v = []) \\<and>\n                         x = r @ v \\<and>\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                          u \\<in> T S \\<or>\n                          t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))\n 2. \\<lbrakk>chain Y;\n     \\<forall>xa.\n        \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           x = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n            t \\<in> D S \\<and> u \\<in> T (Y xa));\n     \\<not> (\\<forall>t u r.\n                r setinterleaves ((t, u), insert tick\n     (ev ` A)) \\<longrightarrow>\n                r \\<le> x \\<longrightarrow>\n                ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                 u \\<notin> T S) \\<and>\n                (t \\<in> D S \\<longrightarrow>\n                 (\\<exists>x. u \\<notin> T (Y x))))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u r v.\n                         front_tickFree v \\<and>\n                         (tickFree r \\<or> v = []) \\<and>\n                         x = r @ v \\<and>\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                          u \\<in> T S \\<or>\n                          t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))", "from A Abb1"], ["proof (chain)\npicking this:\n  chain Y\n  \\<forall>n1 n2. n1 \\<le> n2 \\<longrightarrow> Y n1 \\<sqsubseteq> Y n2", "have Abb2: \"\\<forall>n1 n2. n1>n2\\<and>t \\<notin> D (Y n2)\\<longrightarrow>t \\<notin> D (Y n1)\""], ["proof (prove)\nusing this:\n  chain Y\n  \\<forall>n1 n2. n1 \\<le> n2 \\<longrightarrow> Y n1 \\<sqsubseteq> Y n2\n\ngoal (1 subgoal):\n 1. \\<forall>n1 n2.\n       n2 < n1 \\<and> t \\<notin> D (Y n2) \\<longrightarrow>\n       t \\<notin> D (Y n1)", "using le_approx1 less_imp_le_nat"], ["proof (prove)\nusing this:\n  chain Y\n  \\<forall>n1 n2. n1 \\<le> n2 \\<longrightarrow> Y n1 \\<sqsubseteq> Y n2\n  ?P \\<sqsubseteq> ?Q \\<Longrightarrow> D ?Q \\<subseteq> D ?P\n  ?m < ?n \\<Longrightarrow> ?m \\<le> ?n\n\ngoal (1 subgoal):\n 1. \\<forall>n1 n2.\n       n2 < n1 \\<and> t \\<notin> D (Y n2) \\<longrightarrow>\n       t \\<notin> D (Y n1)", "by blast"], ["proof (state)\nthis:\n  \\<forall>n1 n2.\n     n2 < n1 \\<and> t \\<notin> D (Y n2) \\<longrightarrow>\n     t \\<notin> D (Y n1)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>chain Y;\n     \\<forall>xa.\n        \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           x = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n            t \\<in> D S \\<and> u \\<in> T (Y xa));\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        r \\<le> x \\<longrightarrow>\n        ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n        (t \\<in> D S \\<longrightarrow>\n         (\\<exists>x. u \\<notin> T (Y x)))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u r v.\n                         front_tickFree v \\<and>\n                         (tickFree r \\<or> v = []) \\<and>\n                         x = r @ v \\<and>\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                          u \\<in> T S \\<or>\n                          t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))\n 2. \\<lbrakk>chain Y;\n     \\<forall>xa.\n        \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           x = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n            t \\<in> D S \\<and> u \\<in> T (Y xa));\n     \\<not> (\\<forall>t u r.\n                r setinterleaves ((t, u), insert tick\n     (ev ` A)) \\<longrightarrow>\n                r \\<le> x \\<longrightarrow>\n                ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                 u \\<notin> T S) \\<and>\n                (t \\<in> D S \\<longrightarrow>\n                 (\\<exists>x. u \\<notin> T (Y x))))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u r v.\n                         front_tickFree v \\<and>\n                         (tickFree r \\<or> v = []) \\<and>\n                         x = r @ v \\<and>\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                          u \\<in> T S \\<or>\n                          t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))", "from A Abb1"], ["proof (chain)\npicking this:\n  chain Y\n  \\<forall>n1 n2. n1 \\<le> n2 \\<longrightarrow> Y n1 \\<sqsubseteq> Y n2", "have Abb3: \"\\<forall>n1 n2. n1>n2\\<and>t \\<notin> T (Y n2)\\<longrightarrow>t \\<notin> T (Y n1)\""], ["proof (prove)\nusing this:\n  chain Y\n  \\<forall>n1 n2. n1 \\<le> n2 \\<longrightarrow> Y n1 \\<sqsubseteq> Y n2\n\ngoal (1 subgoal):\n 1. \\<forall>n1 n2.\n       n2 < n1 \\<and> t \\<notin> T (Y n2) \\<longrightarrow>\n       t \\<notin> T (Y n1)", "by (meson NT_ND le_approx2T less_imp_le_nat)"], ["proof (state)\nthis:\n  \\<forall>n1 n2.\n     n2 < n1 \\<and> t \\<notin> T (Y n2) \\<longrightarrow>\n     t \\<notin> T (Y n1)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>chain Y;\n     \\<forall>xa.\n        \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           x = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n            t \\<in> D S \\<and> u \\<in> T (Y xa));\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        r \\<le> x \\<longrightarrow>\n        ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n        (t \\<in> D S \\<longrightarrow>\n         (\\<exists>x. u \\<notin> T (Y x)))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u r v.\n                         front_tickFree v \\<and>\n                         (tickFree r \\<or> v = []) \\<and>\n                         x = r @ v \\<and>\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                          u \\<in> T S \\<or>\n                          t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))\n 2. \\<lbrakk>chain Y;\n     \\<forall>xa.\n        \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           x = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n            t \\<in> D S \\<and> u \\<in> T (Y xa));\n     \\<not> (\\<forall>t u r.\n                r setinterleaves ((t, u), insert tick\n     (ev ` A)) \\<longrightarrow>\n                r \\<le> x \\<longrightarrow>\n                ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                 u \\<notin> T S) \\<and>\n                (t \\<in> D S \\<longrightarrow>\n                 (\\<exists>x. u \\<notin> T (Y x))))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u r v.\n                         front_tickFree v \\<and>\n                         (tickFree r \\<or> v = []) \\<and>\n                         x = r @ v \\<and>\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                          u \\<in> T S \\<or>\n                          t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))", "from Abb2 Ee2"], ["proof (chain)\npicking this:\n  \\<forall>n1 n2.\n     n2 < n1 \\<and> t \\<notin> D (Y n2) \\<longrightarrow>\n     t \\<notin> D (Y n1)\n  x1 \\<le> x3 \\<and>\n  x2 \\<le> x3 \\<and>\n  (t2 \\<in> D (Y x3) \\<and> u2 \\<in> T S \\<or>\n   t2 \\<in> D S \\<and> u2 \\<in> T (Y x3))", "have Ab1: \"t2 \\<notin> D (Y x1)\\<longrightarrow>t2 \\<notin> D (Y x3)\""], ["proof (prove)\nusing this:\n  \\<forall>n1 n2.\n     n2 < n1 \\<and> t \\<notin> D (Y n2) \\<longrightarrow>\n     t \\<notin> D (Y n1)\n  x1 \\<le> x3 \\<and>\n  x2 \\<le> x3 \\<and>\n  (t2 \\<in> D (Y x3) \\<and> u2 \\<in> T S \\<or>\n   t2 \\<in> D S \\<and> u2 \\<in> T (Y x3))\n\ngoal (1 subgoal):\n 1. t2 \\<notin> D (Y x1) \\<longrightarrow> t2 \\<notin> D (Y x3)", "by (meson Abb1 le_approx1 less_imp_le_nat subsetCE)"], ["proof (state)\nthis:\n  t2 \\<notin> D (Y x1) \\<longrightarrow> t2 \\<notin> D (Y x3)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>chain Y;\n     \\<forall>xa.\n        \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           x = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n            t \\<in> D S \\<and> u \\<in> T (Y xa));\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        r \\<le> x \\<longrightarrow>\n        ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n        (t \\<in> D S \\<longrightarrow>\n         (\\<exists>x. u \\<notin> T (Y x)))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u r v.\n                         front_tickFree v \\<and>\n                         (tickFree r \\<or> v = []) \\<and>\n                         x = r @ v \\<and>\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                          u \\<in> T S \\<or>\n                          t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))\n 2. \\<lbrakk>chain Y;\n     \\<forall>xa.\n        \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           x = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n            t \\<in> D S \\<and> u \\<in> T (Y xa));\n     \\<not> (\\<forall>t u r.\n                r setinterleaves ((t, u), insert tick\n     (ev ` A)) \\<longrightarrow>\n                r \\<le> x \\<longrightarrow>\n                ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                 u \\<notin> T S) \\<and>\n                (t \\<in> D S \\<longrightarrow>\n                 (\\<exists>x. u \\<notin> T (Y x))))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u r v.\n                         front_tickFree v \\<and>\n                         (tickFree r \\<or> v = []) \\<and>\n                         x = r @ v \\<and>\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                          u \\<in> T S \\<or>\n                          t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))", "from Abb3"], ["proof (chain)\npicking this:\n  \\<forall>n1 n2.\n     n2 < n1 \\<and> t \\<notin> T (Y n2) \\<longrightarrow>\n     t \\<notin> T (Y n1)", "have Ab2: \"u2 \\<notin> T (Y x2)\\<longrightarrow>u2 \\<notin> T (Y x3)\""], ["proof (prove)\nusing this:\n  \\<forall>n1 n2.\n     n2 < n1 \\<and> t \\<notin> T (Y n2) \\<longrightarrow>\n     t \\<notin> T (Y n1)\n\ngoal (1 subgoal):\n 1. u2 \\<notin> T (Y x2) \\<longrightarrow> u2 \\<notin> T (Y x3)", "by (meson Abb1 Ee2 NT_ND le_approx2T less_imp_le_nat)"], ["proof (state)\nthis:\n  u2 \\<notin> T (Y x2) \\<longrightarrow> u2 \\<notin> T (Y x3)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>chain Y;\n     \\<forall>xa.\n        \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           x = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n            t \\<in> D S \\<and> u \\<in> T (Y xa));\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        r \\<le> x \\<longrightarrow>\n        ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n        (t \\<in> D S \\<longrightarrow>\n         (\\<exists>x. u \\<notin> T (Y x)))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u r v.\n                         front_tickFree v \\<and>\n                         (tickFree r \\<or> v = []) \\<and>\n                         x = r @ v \\<and>\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                          u \\<in> T S \\<or>\n                          t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))\n 2. \\<lbrakk>chain Y;\n     \\<forall>xa.\n        \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           x = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n            t \\<in> D S \\<and> u \\<in> T (Y xa));\n     \\<not> (\\<forall>t u r.\n                r setinterleaves ((t, u), insert tick\n     (ev ` A)) \\<longrightarrow>\n                r \\<le> x \\<longrightarrow>\n                ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                 u \\<notin> T S) \\<and>\n                (t \\<in> D S \\<longrightarrow>\n                 (\\<exists>x. u \\<notin> T (Y x))))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u r v.\n                         front_tickFree v \\<and>\n                         (tickFree r \\<or> v = []) \\<and>\n                         x = r @ v \\<and>\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                          u \\<in> T S \\<or>\n                          t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))", "from True Ee Ee1  Ee2 Ab1 Ab2"], ["proof (chain)\npicking this:\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     r \\<le> x \\<longrightarrow>\n     ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n     (t \\<in> D S \\<longrightarrow> (\\<exists>x. u \\<notin> T (Y x)))\n  (t2, u2, r2) \\<in> tryunion \\<and>\n  infinite\n   {n. t2 \\<in> D (Y n) \\<and> u2 \\<in> T S \\<or>\n       t2 \\<in> D S \\<and> u2 \\<in> T (Y n)}\n  (t2 \\<notin> D (Y x1) \\<or> u2 \\<notin> T S) \\<and>\n  (t2 \\<in> D S \\<longrightarrow> u2 \\<notin> T (Y x2))\n  x1 \\<le> x3 \\<and>\n  x2 \\<le> x3 \\<and>\n  (t2 \\<in> D (Y x3) \\<and> u2 \\<in> T S \\<or>\n   t2 \\<in> D S \\<and> u2 \\<in> T (Y x3))\n  t2 \\<notin> D (Y x1) \\<longrightarrow> t2 \\<notin> D (Y x3)\n  u2 \\<notin> T (Y x2) \\<longrightarrow> u2 \\<notin> T (Y x3)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     r \\<le> x \\<longrightarrow>\n     ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n     (t \\<in> D S \\<longrightarrow> (\\<exists>x. u \\<notin> T (Y x)))\n  (t2, u2, r2) \\<in> tryunion \\<and>\n  infinite\n   {n. t2 \\<in> D (Y n) \\<and> u2 \\<in> T S \\<or>\n       t2 \\<in> D S \\<and> u2 \\<in> T (Y n)}\n  (t2 \\<notin> D (Y x1) \\<or> u2 \\<notin> T S) \\<and>\n  (t2 \\<in> D S \\<longrightarrow> u2 \\<notin> T (Y x2))\n  x1 \\<le> x3 \\<and>\n  x2 \\<le> x3 \\<and>\n  (t2 \\<in> D (Y x3) \\<and> u2 \\<in> T S \\<or>\n   t2 \\<in> D S \\<and> u2 \\<in> T (Y x3))\n  t2 \\<notin> D (Y x1) \\<longrightarrow> t2 \\<notin> D (Y x3)\n  u2 \\<notin> T (Y x2) \\<longrightarrow> u2 \\<notin> T (Y x3)\n\ngoal (1 subgoal):\n 1. \\<exists>t u r v.\n       front_tickFree v \\<and>\n       (tickFree r \\<or> v = []) \\<and>\n       x = r @ v \\<and>\n       r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n       ((\\<forall>x. t \\<in> D (Y x)) \\<and> u \\<in> T S \\<or>\n        t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))", "by blast"], ["proof (state)\nthis:\n  \\<exists>t u r v.\n     front_tickFree v \\<and>\n     (tickFree r \\<or> v = []) \\<and>\n     x = r @ v \\<and>\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n     ((\\<forall>x. t \\<in> D (Y x)) \\<and> u \\<in> T S \\<or>\n      t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>chain Y;\n     \\<forall>xa.\n        \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           x = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n            t \\<in> D S \\<and> u \\<in> T (Y xa));\n     \\<not> (\\<forall>t u r.\n                r setinterleaves ((t, u), insert tick\n     (ev ` A)) \\<longrightarrow>\n                r \\<le> x \\<longrightarrow>\n                ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                 u \\<notin> T S) \\<and>\n                (t \\<in> D S \\<longrightarrow>\n                 (\\<exists>x. u \\<notin> T (Y x))))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u r v.\n                         front_tickFree v \\<and>\n                         (tickFree r \\<or> v = []) \\<and>\n                         x = r @ v \\<and>\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                          u \\<in> T S \\<or>\n                          t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>chain Y;\n     \\<forall>xa.\n        \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           x = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n            t \\<in> D S \\<and> u \\<in> T (Y xa));\n     \\<not> (\\<forall>t u r.\n                r setinterleaves ((t, u), insert tick\n     (ev ` A)) \\<longrightarrow>\n                r \\<le> x \\<longrightarrow>\n                ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                 u \\<notin> T S) \\<and>\n                (t \\<in> D S \\<longrightarrow>\n                 (\\<exists>x. u \\<notin> T (Y x))))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u r v.\n                         front_tickFree v \\<and>\n                         (tickFree r \\<or> v = []) \\<and>\n                         x = r @ v \\<and>\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                          u \\<in> T S \\<or>\n                          t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))", "case False"], ["proof (state)\nthis:\n  \\<not> (\\<forall>t u r.\n             r setinterleaves ((t, u), insert tick\n  (ev ` A)) \\<longrightarrow>\n             r \\<le> x \\<longrightarrow>\n             ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n             (t \\<in> D S \\<longrightarrow>\n              (\\<exists>x. u \\<notin> T (Y x))))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>chain Y;\n     \\<forall>xa.\n        \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           x = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n            t \\<in> D S \\<and> u \\<in> T (Y xa));\n     \\<not> (\\<forall>t u r.\n                r setinterleaves ((t, u), insert tick\n     (ev ` A)) \\<longrightarrow>\n                r \\<le> x \\<longrightarrow>\n                ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                 u \\<notin> T S) \\<and>\n                (t \\<in> D S \\<longrightarrow>\n                 (\\<exists>x. u \\<notin> T (Y x))))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u r v.\n                         front_tickFree v \\<and>\n                         (tickFree r \\<or> v = []) \\<and>\n                         x = r @ v \\<and>\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                          u \\<in> T S \\<or>\n                          t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))", "from A B False"], ["proof (chain)\npicking this:\n  chain Y\n  \\<forall>xa.\n     \\<exists>t u r v.\n        front_tickFree v \\<and>\n        (tickFree r \\<or> v = []) \\<and>\n        x = r @ v \\<and>\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n        (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n         t \\<in> D S \\<and> u \\<in> T (Y xa))\n  \\<not> (\\<forall>t u r.\n             r setinterleaves ((t, u), insert tick\n  (ev ` A)) \\<longrightarrow>\n             r \\<le> x \\<longrightarrow>\n             ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n             (t \\<in> D S \\<longrightarrow>\n              (\\<exists>x. u \\<notin> T (Y x))))", "obtain t u r where Bb1: \"r setinterleaves ((t, u), insert tick (ev ` A)) \\<and> \n      r \\<le> x \\<and> ((\\<forall>x. t \\<in> D (Y x)) \\<and> u \\<in> T S \\<or> t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))\""], ["proof (prove)\nusing this:\n  chain Y\n  \\<forall>xa.\n     \\<exists>t u r v.\n        front_tickFree v \\<and>\n        (tickFree r \\<or> v = []) \\<and>\n        x = r @ v \\<and>\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n        (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n         t \\<in> D S \\<and> u \\<in> T (Y xa))\n  \\<not> (\\<forall>t u r.\n             r setinterleaves ((t, u), insert tick\n  (ev ` A)) \\<longrightarrow>\n             r \\<le> x \\<longrightarrow>\n             ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n             (t \\<in> D S \\<longrightarrow>\n              (\\<exists>x. u \\<notin> T (Y x))))\n\ngoal (1 subgoal):\n 1. (\\<And>r t u.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n        r \\<le> x \\<and>\n        ((\\<forall>x. t \\<in> D (Y x)) \\<and> u \\<in> T S \\<or>\n         t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x))) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n  r \\<le> x \\<and>\n  ((\\<forall>x. t \\<in> D (Y x)) \\<and> u \\<in> T S \\<or>\n   t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>chain Y;\n     \\<forall>xa.\n        \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           x = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n            t \\<in> D S \\<and> u \\<in> T (Y xa));\n     \\<not> (\\<forall>t u r.\n                r setinterleaves ((t, u), insert tick\n     (ev ` A)) \\<longrightarrow>\n                r \\<le> x \\<longrightarrow>\n                ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                 u \\<notin> T S) \\<and>\n                (t \\<in> D S \\<longrightarrow>\n                 (\\<exists>x. u \\<notin> T (Y x))))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u r v.\n                         front_tickFree v \\<and>\n                         (tickFree r \\<or> v = []) \\<and>\n                         x = r @ v \\<and>\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                          u \\<in> T S \\<or>\n                          t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))", "from B"], ["proof (chain)\npicking this:\n  \\<forall>xa.\n     \\<exists>t u r v.\n        front_tickFree v \\<and>\n        (tickFree r \\<or> v = []) \\<and>\n        x = r @ v \\<and>\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n        (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n         t \\<in> D S \\<and> u \\<in> T (Y xa))", "have Bb21: \"front_tickFree x\""], ["proof (prove)\nusing this:\n  \\<forall>xa.\n     \\<exists>t u r v.\n        front_tickFree v \\<and>\n        (tickFree r \\<or> v = []) \\<and>\n        x = r @ v \\<and>\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n        (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n         t \\<in> D S \\<and> u \\<in> T (Y xa))\n\ngoal (1 subgoal):\n 1. front_tickFree x", "by (metis D_imp_front_tickFree append_Nil2 front_tickFree_append ftf_syn is_processT2_TR)"], ["proof (state)\nthis:\n  front_tickFree x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>chain Y;\n     \\<forall>xa.\n        \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           x = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n            t \\<in> D S \\<and> u \\<in> T (Y xa));\n     \\<not> (\\<forall>t u r.\n                r setinterleaves ((t, u), insert tick\n     (ev ` A)) \\<longrightarrow>\n                r \\<le> x \\<longrightarrow>\n                ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                 u \\<notin> T S) \\<and>\n                (t \\<in> D S \\<longrightarrow>\n                 (\\<exists>x. u \\<notin> T (Y x))))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u r v.\n                         front_tickFree v \\<and>\n                         (tickFree r \\<or> v = []) \\<and>\n                         x = r @ v \\<and>\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                          u \\<in> T S \\<or>\n                          t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))", "from B Bb1"], ["proof (chain)\npicking this:\n  \\<forall>xa.\n     \\<exists>t u r v.\n        front_tickFree v \\<and>\n        (tickFree r \\<or> v = []) \\<and>\n        x = r @ v \\<and>\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n        (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n         t \\<in> D S \\<and> u \\<in> T (Y xa))\n  r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n  r \\<le> x \\<and>\n  ((\\<forall>x. t \\<in> D (Y x)) \\<and> u \\<in> T S \\<or>\n   t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))", "have Bb2: \"\\<exists>v. front_tickFree v \\<and> (tickFree r \\<or> v = [])\\<and> x = r @ v\""], ["proof (prove)\nusing this:\n  \\<forall>xa.\n     \\<exists>t u r v.\n        front_tickFree v \\<and>\n        (tickFree r \\<or> v = []) \\<and>\n        x = r @ v \\<and>\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n        (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n         t \\<in> D S \\<and> u \\<in> T (Y xa))\n  r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n  r \\<le> x \\<and>\n  ((\\<forall>x. t \\<in> D (Y x)) \\<and> u \\<in> T S \\<or>\n   t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))\n\ngoal (1 subgoal):\n 1. \\<exists>v.\n       front_tickFree v \\<and> (tickFree r \\<or> v = []) \\<and> x = r @ v", "by (metis Bb21 front_tickFree_Nil front_tickFree_mono le_list_def)"], ["proof (state)\nthis:\n  \\<exists>v.\n     front_tickFree v \\<and> (tickFree r \\<or> v = []) \\<and> x = r @ v\n\ngoal (1 subgoal):\n 1. \\<lbrakk>chain Y;\n     \\<forall>xa.\n        \\<exists>t u r v.\n           front_tickFree v \\<and>\n           (tickFree r \\<or> v = []) \\<and>\n           x = r @ v \\<and>\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           (t \\<in> D (Y xa) \\<and> u \\<in> T S \\<or>\n            t \\<in> D S \\<and> u \\<in> T (Y xa));\n     \\<not> (\\<forall>t u r.\n                r setinterleaves ((t, u), insert tick\n     (ev ` A)) \\<longrightarrow>\n                r \\<le> x \\<longrightarrow>\n                ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                 u \\<notin> T S) \\<and>\n                (t \\<in> D S \\<longrightarrow>\n                 (\\<exists>x. u \\<notin> T (Y x))))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u r v.\n                         front_tickFree v \\<and>\n                         (tickFree r \\<or> v = []) \\<and>\n                         x = r @ v \\<and>\n                         r setinterleaves ((t, u), insert tick\n              (ev ` A)) \\<and>\n                         ((\\<forall>x. t \\<in> D (Y x)) \\<and>\n                          u \\<in> T S \\<or>\n                          t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))", "then"], ["proof (chain)\npicking this:\n  \\<exists>v.\n     front_tickFree v \\<and> (tickFree r \\<or> v = []) \\<and> x = r @ v", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>v.\n     front_tickFree v \\<and> (tickFree r \\<or> v = []) \\<and> x = r @ v\n\ngoal (1 subgoal):\n 1. \\<exists>t u r v.\n       front_tickFree v \\<and>\n       (tickFree r \\<or> v = []) \\<and>\n       x = r @ v \\<and>\n       r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n       ((\\<forall>x. t \\<in> D (Y x)) \\<and> u \\<in> T S \\<or>\n        t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))", "using Bb1"], ["proof (prove)\nusing this:\n  \\<exists>v.\n     front_tickFree v \\<and> (tickFree r \\<or> v = []) \\<and> x = r @ v\n  r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n  r \\<le> x \\<and>\n  ((\\<forall>x. t \\<in> D (Y x)) \\<and> u \\<in> T S \\<or>\n   t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))\n\ngoal (1 subgoal):\n 1. \\<exists>t u r v.\n       front_tickFree v \\<and>\n       (tickFree r \\<or> v = []) \\<and>\n       x = r @ v \\<and>\n       r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n       ((\\<forall>x. t \\<in> D (Y x)) \\<and> u \\<in> T S \\<or>\n        t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))", "by blast"], ["proof (state)\nthis:\n  \\<exists>t u r v.\n     front_tickFree v \\<and>\n     (tickFree r \\<or> v = []) \\<and>\n     x = r @ v \\<and>\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n     ((\\<forall>x. t \\<in> D (Y x)) \\<and> u \\<in> T S \\<or>\n      t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>t u r v.\n     front_tickFree v \\<and>\n     (tickFree r \\<or> v = []) \\<and>\n     x = r @ v \\<and>\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n     ((\\<forall>x. t \\<in> D (Y x)) \\<and> u \\<in> T S \\<or>\n      t \\<in> D S \\<and> (\\<forall>x. u \\<in> T (Y x)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma limproc_Sync_F_annex1: \" chain Y\\<Longrightarrow>\\<forall>n. (a, b) \\<in> F (Y n \\<lbrakk>A\\<rbrakk> S) \\<Longrightarrow> \\<exists>x. a \\<notin> D (Y x \\<lbrakk>A\\<rbrakk> S) \\<Longrightarrow>\n\\<exists>t u X. (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and> (\\<exists>Y. (u, Y) \\<in> F S \\<and> a setinterleaves((t, u),insert tick (ev ` A))\n\\<and> b = (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union> X \\<inter> Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>chain Y;\n     \\<forall>n. (a, b) \\<in> F (Y n \\<lbrakk>A\\<rbrakk> S);\n     \\<exists>x. a \\<notin> D (Y x \\<lbrakk>A\\<rbrakk> S)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u X.\n                         (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n                         (\\<exists>Y.\n                             (u, Y) \\<in> F S \\<and>\n                             a setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                             b =\n                             (X \\<union> Y) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             X \\<inter> Y)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>chain Y;\n     \\<forall>n. (a, b) \\<in> F (Y n \\<lbrakk>A\\<rbrakk> S);\n     \\<exists>x. a \\<notin> D (Y x \\<lbrakk>A\\<rbrakk> S)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u X.\n                         (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n                         (\\<exists>Y.\n                             (u, Y) \\<in> F S \\<and>\n                             a setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                             b =\n                             (X \\<union> Y) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             X \\<inter> Y)", "fix a b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>chain Y;\n     \\<forall>n. (a, b) \\<in> F (Y n \\<lbrakk>A\\<rbrakk> S);\n     \\<exists>x. a \\<notin> D (Y x \\<lbrakk>A\\<rbrakk> S)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u X.\n                         (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n                         (\\<exists>Y.\n                             (u, Y) \\<in> F S \\<and>\n                             a setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                             b =\n                             (X \\<union> Y) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             X \\<inter> Y)", "assume A: \"chain Y\""], ["proof (state)\nthis:\n  chain Y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>chain Y;\n     \\<forall>n. (a, b) \\<in> F (Y n \\<lbrakk>A\\<rbrakk> S);\n     \\<exists>x. a \\<notin> D (Y x \\<lbrakk>A\\<rbrakk> S)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u X.\n                         (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n                         (\\<exists>Y.\n                             (u, Y) \\<in> F S \\<and>\n                             a setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                             b =\n                             (X \\<union> Y) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             X \\<inter> Y)", "assume B: \"\\<forall>n. (a, b) \\<in> F (Y n \\<lbrakk>A\\<rbrakk> S)\""], ["proof (state)\nthis:\n  \\<forall>n. (a, b) \\<in> F (Y n \\<lbrakk>A\\<rbrakk> S)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>chain Y;\n     \\<forall>n. (a, b) \\<in> F (Y n \\<lbrakk>A\\<rbrakk> S);\n     \\<exists>x. a \\<notin> D (Y x \\<lbrakk>A\\<rbrakk> S)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u X.\n                         (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n                         (\\<exists>Y.\n                             (u, Y) \\<in> F S \\<and>\n                             a setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                             b =\n                             (X \\<union> Y) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             X \\<inter> Y)", "assume C: \"\\<exists>x. a \\<notin> D (Y x \\<lbrakk>A\\<rbrakk> S)\""], ["proof (state)\nthis:\n  \\<exists>x. a \\<notin> D (Y x \\<lbrakk>A\\<rbrakk> S)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>chain Y;\n     \\<forall>n. (a, b) \\<in> F (Y n \\<lbrakk>A\\<rbrakk> S);\n     \\<exists>x. a \\<notin> D (Y x \\<lbrakk>A\\<rbrakk> S)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u X.\n                         (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n                         (\\<exists>Y.\n                             (u, Y) \\<in> F S \\<and>\n                             a setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                             b =\n                             (X \\<union> Y) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             X \\<inter> Y)", "thus \"\\<exists>t u X. (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n        (\\<exists>Y. (u, Y) \\<in> F S \\<and> a setinterleaves ((t, u), insert tick (ev ` A)) \\<and> b = (X \\<union> Y) \\<inter> \n        insert tick (ev ` A) \\<union> X \\<inter> Y)\""], ["proof (prove)\nusing this:\n  \\<exists>x. a \\<notin> D (Y x \\<lbrakk>A\\<rbrakk> S)\n\ngoal (1 subgoal):\n 1. \\<exists>t u X.\n       (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n       (\\<exists>Y.\n           (u, Y) \\<in> F S \\<and>\n           a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           b =\n           (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n           X \\<inter> Y)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>x. a \\<notin> D (Y x \\<lbrakk>A\\<rbrakk> S) \\<Longrightarrow>\n    \\<exists>t u X.\n       (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n       (\\<exists>Y.\n           (u, Y) \\<in> F S \\<and>\n           a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           b =\n           (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n           X \\<inter> Y)", "from B C"], ["proof (chain)\npicking this:\n  \\<forall>n. (a, b) \\<in> F (Y n \\<lbrakk>A\\<rbrakk> S)\n  \\<exists>x. a \\<notin> D (Y x \\<lbrakk>A\\<rbrakk> S)", "obtain x1 where D: \"a \\<notin> D (Y x1 \\<lbrakk>A\\<rbrakk> S)\""], ["proof (prove)\nusing this:\n  \\<forall>n. (a, b) \\<in> F (Y n \\<lbrakk>A\\<rbrakk> S)\n  \\<exists>x. a \\<notin> D (Y x \\<lbrakk>A\\<rbrakk> S)\n\ngoal (1 subgoal):\n 1. (\\<And>x1.\n        a \\<notin> D (Y x1 \\<lbrakk>A\\<rbrakk> S) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  a \\<notin> D (Y x1 \\<lbrakk>A\\<rbrakk> S)\n\ngoal (1 subgoal):\n 1. \\<exists>x. a \\<notin> D (Y x \\<lbrakk>A\\<rbrakk> S) \\<Longrightarrow>\n    \\<exists>t u X.\n       (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n       (\\<exists>Y.\n           (u, Y) \\<in> F S \\<and>\n           a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           b =\n           (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n           X \\<inter> Y)", "from B D"], ["proof (chain)\npicking this:\n  \\<forall>n. (a, b) \\<in> F (Y n \\<lbrakk>A\\<rbrakk> S)\n  a \\<notin> D (Y x1 \\<lbrakk>A\\<rbrakk> S)", "obtain t1 u1 X1 Y1 where E: \"a setinterleaves ((t1, u1), insert tick (ev ` A))\\<and>\n    (t1, X1)\\<in>F (Y x1)\\<and>(u1, Y1)\\<in>F S\\<and>b = (X1 \\<union> Y1) \\<inter> insert tick (ev ` A) \\<union> X1 \\<inter> Y1\""], ["proof (prove)\nusing this:\n  \\<forall>n. (a, b) \\<in> F (Y n \\<lbrakk>A\\<rbrakk> S)\n  a \\<notin> D (Y x1 \\<lbrakk>A\\<rbrakk> S)\n\ngoal (1 subgoal):\n 1. (\\<And>t1 u1 X1 Y1.\n        a setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n        (t1, X1) \\<in> F (Y x1) \\<and>\n        (u1, Y1) \\<in> F S \\<and>\n        b =\n        (X1 \\<union> Y1) \\<inter> insert tick (ev ` A) \\<union>\n        X1 \\<inter> Y1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "apply(auto simp: D_sync F_sync)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>t1 u1 X1 Y1.\n                a setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n                (t1, X1) \\<in> F (Y x1) \\<and>\n                (u1, Y1) \\<in> F S \\<and>\n                b =\n                (X1 \\<union> Y1) \\<inter> insert tick (ev ` A) \\<union>\n                X1 \\<inter> Y1 \\<Longrightarrow>\n                thesis;\n     \\<forall>n.\n        (\\<exists>t u X.\n            (t, X) \\<in> F (Y n) \\<and>\n            (\\<exists>Y.\n                (u, Y) \\<in> F S \\<and>\n                a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n                b =\n                (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n                X \\<inter> Y)) \\<or>\n        (\\<exists>t u r v.\n            front_tickFree v \\<and>\n            (tickFree r \\<or> v = []) \\<and>\n            a = r @ v \\<and>\n            r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n            (t \\<in> D (Y n) \\<and> u \\<in> T S \\<or>\n             t \\<in> D S \\<and> u \\<in> T (Y n)));\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        (\\<forall>v.\n            a = r @ v \\<longrightarrow>\n            front_tickFree v \\<longrightarrow>\n            \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n            (t \\<in> D (Y x1) \\<longrightarrow> u \\<notin> T S) \\<and>\n            (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x1)))\\<rbrakk>\n    \\<Longrightarrow> thesis", "by fastforce"], ["proof (state)\nthis:\n  a setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n  (t1, X1) \\<in> F (Y x1) \\<and>\n  (u1, Y1) \\<in> F S \\<and>\n  b = (X1 \\<union> Y1) \\<inter> insert tick (ev ` A) \\<union> X1 \\<inter> Y1\n\ngoal (1 subgoal):\n 1. \\<exists>x. a \\<notin> D (Y x \\<lbrakk>A\\<rbrakk> S) \\<Longrightarrow>\n    \\<exists>t u X.\n       (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n       (\\<exists>Y.\n           (u, Y) \\<in> F S \\<and>\n           a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           b =\n           (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n           X \\<inter> Y)", "from B D E"], ["proof (chain)\npicking this:\n  \\<forall>n. (a, b) \\<in> F (Y n \\<lbrakk>A\\<rbrakk> S)\n  a \\<notin> D (Y x1 \\<lbrakk>A\\<rbrakk> S)\n  a setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n  (t1, X1) \\<in> F (Y x1) \\<and>\n  (u1, Y1) \\<in> F S \\<and>\n  b = (X1 \\<union> Y1) \\<inter> insert tick (ev ` A) \\<union> X1 \\<inter> Y1", "have F: \"t1 \\<notin> D (Y x1) \\<and> t1\\<in>T(Y x1)\""], ["proof (prove)\nusing this:\n  \\<forall>n. (a, b) \\<in> F (Y n \\<lbrakk>A\\<rbrakk> S)\n  a \\<notin> D (Y x1 \\<lbrakk>A\\<rbrakk> S)\n  a setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n  (t1, X1) \\<in> F (Y x1) \\<and>\n  (u1, Y1) \\<in> F S \\<and>\n  b = (X1 \\<union> Y1) \\<inter> insert tick (ev ` A) \\<union> X1 \\<inter> Y1\n\ngoal (1 subgoal):\n 1. t1 \\<notin> D (Y x1) \\<and> t1 \\<in> T (Y x1)", "apply(auto simp: D_sync)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>n.\n                (a, (X1 \\<union> Y1) \\<inter> insert tick (ev ` A) \\<union>\n                    X1 \\<inter> Y1)\n                \\<in> F (Y n \\<lbrakk>A\\<rbrakk> S);\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        (\\<forall>v.\n            a = r @ v \\<longrightarrow>\n            front_tickFree v \\<longrightarrow>\n            \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n            (t \\<in> D (Y x1) \\<longrightarrow> u \\<notin> T S) \\<and>\n            (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x1)));\n     a setinterleaves ((t1, u1), insert tick (ev ` A));\n     (t1, X1) \\<in> F (Y x1); (u1, Y1) \\<in> F S;\n     b =\n     (X1 \\<union> Y1) \\<inter> insert tick (ev ` A) \\<union> X1 \\<inter> Y1;\n     t1 \\<in> D (Y x1)\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>\\<forall>n.\n                (a, (X1 \\<union> Y1) \\<inter> insert tick (ev ` A) \\<union>\n                    X1 \\<inter> Y1)\n                \\<in> F (Y n \\<lbrakk>A\\<rbrakk> S);\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        (\\<forall>v.\n            a = r @ v \\<longrightarrow>\n            front_tickFree v \\<longrightarrow>\n            \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n            (t \\<in> D (Y x1) \\<longrightarrow> u \\<notin> T S) \\<and>\n            (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x1)));\n     a setinterleaves ((t1, u1), insert tick (ev ` A));\n     (t1, X1) \\<in> F (Y x1); (u1, Y1) \\<in> F S;\n     b =\n     (X1 \\<union> Y1) \\<inter> insert tick (ev ` A) \\<union>\n     X1 \\<inter> Y1\\<rbrakk>\n    \\<Longrightarrow> t1 \\<in> T (Y x1)", "using F_T front_tickFree_Nil"], ["proof (prove)\nusing this:\n  (?s, ?X) \\<in> F ?P \\<Longrightarrow> ?s \\<in> T ?P\n  front_tickFree []\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>n.\n                (a, (X1 \\<union> Y1) \\<inter> insert tick (ev ` A) \\<union>\n                    X1 \\<inter> Y1)\n                \\<in> F (Y n \\<lbrakk>A\\<rbrakk> S);\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        (\\<forall>v.\n            a = r @ v \\<longrightarrow>\n            front_tickFree v \\<longrightarrow>\n            \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n            (t \\<in> D (Y x1) \\<longrightarrow> u \\<notin> T S) \\<and>\n            (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x1)));\n     a setinterleaves ((t1, u1), insert tick (ev ` A));\n     (t1, X1) \\<in> F (Y x1); (u1, Y1) \\<in> F S;\n     b =\n     (X1 \\<union> Y1) \\<inter> insert tick (ev ` A) \\<union> X1 \\<inter> Y1;\n     t1 \\<in> D (Y x1)\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>\\<forall>n.\n                (a, (X1 \\<union> Y1) \\<inter> insert tick (ev ` A) \\<union>\n                    X1 \\<inter> Y1)\n                \\<in> F (Y n \\<lbrakk>A\\<rbrakk> S);\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        (\\<forall>v.\n            a = r @ v \\<longrightarrow>\n            front_tickFree v \\<longrightarrow>\n            \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n            (t \\<in> D (Y x1) \\<longrightarrow> u \\<notin> T S) \\<and>\n            (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x1)));\n     a setinterleaves ((t1, u1), insert tick (ev ` A));\n     (t1, X1) \\<in> F (Y x1); (u1, Y1) \\<in> F S;\n     b =\n     (X1 \\<union> Y1) \\<inter> insert tick (ev ` A) \\<union>\n     X1 \\<inter> Y1\\<rbrakk>\n    \\<Longrightarrow> t1 \\<in> T (Y x1)", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>n.\n                (a, (X1 \\<union> Y1) \\<inter> insert tick (ev ` A) \\<union>\n                    X1 \\<inter> Y1)\n                \\<in> F (Y n \\<lbrakk>A\\<rbrakk> S);\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        (\\<forall>v.\n            a = r @ v \\<longrightarrow>\n            front_tickFree v \\<longrightarrow>\n            \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n            (t \\<in> D (Y x1) \\<longrightarrow> u \\<notin> T S) \\<and>\n            (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x1)));\n     a setinterleaves ((t1, u1), insert tick (ev ` A));\n     (t1, X1) \\<in> F (Y x1); (u1, Y1) \\<in> F S;\n     b =\n     (X1 \\<union> Y1) \\<inter> insert tick (ev ` A) \\<union>\n     X1 \\<inter> Y1\\<rbrakk>\n    \\<Longrightarrow> t1 \\<in> T (Y x1)", "by (simp add: F_T)"], ["proof (state)\nthis:\n  t1 \\<notin> D (Y x1) \\<and> t1 \\<in> T (Y x1)\n\ngoal (1 subgoal):\n 1. \\<exists>x. a \\<notin> D (Y x \\<lbrakk>A\\<rbrakk> S) \\<Longrightarrow>\n    \\<exists>t u X.\n       (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n       (\\<exists>Y.\n           (u, Y) \\<in> F S \\<and>\n           a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           b =\n           (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n           X \\<inter> Y)", "from F"], ["proof (chain)\npicking this:\n  t1 \\<notin> D (Y x1) \\<and> t1 \\<in> T (Y x1)", "have ee: \"\\<forall>i. (t1, X1) \\<in> F (Y i)\\<and>(u1, Y1)\\<in> F S\\<and> a setinterleaves \n    ((t1, u1), insert tick (ev ` A))\\<and> b = (X1 \\<union> Y1) \\<inter> insert tick (ev ` A) \\<union> X1 \\<inter> Y1\""], ["proof (prove)\nusing this:\n  t1 \\<notin> D (Y x1) \\<and> t1 \\<in> T (Y x1)\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       (t1, X1) \\<in> F (Y i) \\<and>\n       (u1, Y1) \\<in> F S \\<and>\n       a setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n       b =\n       (X1 \\<union> Y1) \\<inter> insert tick (ev ` A) \\<union>\n       X1 \\<inter> Y1", "using E chain_lemma is_processT8_S le_approx2 local.A"], ["proof (prove)\nusing this:\n  t1 \\<notin> D (Y x1) \\<and> t1 \\<in> T (Y x1)\n  a setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n  (t1, X1) \\<in> F (Y x1) \\<and>\n  (u1, Y1) \\<in> F S \\<and>\n  b = (X1 \\<union> Y1) \\<inter> insert tick (ev ` A) \\<union> X1 \\<inter> Y1\n  chain ?S \\<Longrightarrow>\n  ?S ?i \\<sqsubseteq> ?S ?k \\<or> ?S ?k \\<sqsubseteq> ?S ?i\n  ?s \\<in> D ?P \\<Longrightarrow> (?s, ?X) \\<in> F ?P\n  \\<lbrakk>?P \\<sqsubseteq> ?Q; ?s \\<notin> D ?P\\<rbrakk>\n  \\<Longrightarrow> ((?s, ?X) \\<in> F ?Q) = ((?s, ?X) \\<in> F ?P)\n  chain Y\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       (t1, X1) \\<in> F (Y i) \\<and>\n       (u1, Y1) \\<in> F S \\<and>\n       a setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n       b =\n       (X1 \\<union> Y1) \\<inter> insert tick (ev ` A) \\<union>\n       X1 \\<inter> Y1", "by metis"], ["proof (state)\nthis:\n  \\<forall>i.\n     (t1, X1) \\<in> F (Y i) \\<and>\n     (u1, Y1) \\<in> F S \\<and>\n     a setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n     b =\n     (X1 \\<union> Y1) \\<inter> insert tick (ev ` A) \\<union> X1 \\<inter> Y1\n\ngoal (1 subgoal):\n 1. \\<exists>x. a \\<notin> D (Y x \\<lbrakk>A\\<rbrakk> S) \\<Longrightarrow>\n    \\<exists>t u X.\n       (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n       (\\<exists>Y.\n           (u, Y) \\<in> F S \\<and>\n           a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           b =\n           (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n           X \\<inter> Y)", "with A B C D E F ee"], ["proof (chain)\npicking this:\n  chain Y\n  \\<forall>n. (a, b) \\<in> F (Y n \\<lbrakk>A\\<rbrakk> S)\n  \\<exists>x. a \\<notin> D (Y x \\<lbrakk>A\\<rbrakk> S)\n  a \\<notin> D (Y x1 \\<lbrakk>A\\<rbrakk> S)\n  a setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n  (t1, X1) \\<in> F (Y x1) \\<and>\n  (u1, Y1) \\<in> F S \\<and>\n  b = (X1 \\<union> Y1) \\<inter> insert tick (ev ` A) \\<union> X1 \\<inter> Y1\n  t1 \\<notin> D (Y x1) \\<and> t1 \\<in> T (Y x1)\n  \\<forall>i.\n     (t1, X1) \\<in> F (Y i) \\<and>\n     (u1, Y1) \\<in> F S \\<and>\n     a setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n     b =\n     (X1 \\<union> Y1) \\<inter> insert tick (ev ` A) \\<union> X1 \\<inter> Y1\n  \\<forall>i.\n     (t1, X1) \\<in> F (Y i) \\<and>\n     (u1, Y1) \\<in> F S \\<and>\n     a setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n     b =\n     (X1 \\<union> Y1) \\<inter> insert tick (ev ` A) \\<union> X1 \\<inter> Y1", "show?thesis"], ["proof (prove)\nusing this:\n  chain Y\n  \\<forall>n. (a, b) \\<in> F (Y n \\<lbrakk>A\\<rbrakk> S)\n  \\<exists>x. a \\<notin> D (Y x \\<lbrakk>A\\<rbrakk> S)\n  a \\<notin> D (Y x1 \\<lbrakk>A\\<rbrakk> S)\n  a setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n  (t1, X1) \\<in> F (Y x1) \\<and>\n  (u1, Y1) \\<in> F S \\<and>\n  b = (X1 \\<union> Y1) \\<inter> insert tick (ev ` A) \\<union> X1 \\<inter> Y1\n  t1 \\<notin> D (Y x1) \\<and> t1 \\<in> T (Y x1)\n  \\<forall>i.\n     (t1, X1) \\<in> F (Y i) \\<and>\n     (u1, Y1) \\<in> F S \\<and>\n     a setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n     b =\n     (X1 \\<union> Y1) \\<inter> insert tick (ev ` A) \\<union> X1 \\<inter> Y1\n  \\<forall>i.\n     (t1, X1) \\<in> F (Y i) \\<and>\n     (u1, Y1) \\<in> F S \\<and>\n     a setinterleaves ((t1, u1), insert tick (ev ` A)) \\<and>\n     b =\n     (X1 \\<union> Y1) \\<inter> insert tick (ev ` A) \\<union> X1 \\<inter> Y1\n\ngoal (1 subgoal):\n 1. \\<exists>t u X.\n       (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n       (\\<exists>Y.\n           (u, Y) \\<in> F S \\<and>\n           a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           b =\n           (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n           X \\<inter> Y)", "by blast"], ["proof (state)\nthis:\n  \\<exists>t u X.\n     (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n     (\\<exists>Y.\n         (u, Y) \\<in> F S \\<and>\n         a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n         b =\n         (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union> X \\<inter> Y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>t u X.\n     (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n     (\\<exists>Y.\n         (u, Y) \\<in> F S \\<and>\n         a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n         b =\n         (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union> X \\<inter> Y)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma limproc_Sync_F_annex2: \"chain Y\\<Longrightarrow>\\<forall>t u r. r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n(\\<forall>v. a = r @ v \\<longrightarrow> front_tickFree v \\<longrightarrow>\\<not> tickFree r \\<and> v \\<noteq> [] \\<or> ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and> \n(t \\<in> D S \\<longrightarrow> (\\<exists>x. u \\<notin> T (Y x))))\\<Longrightarrow>\\<exists>x. a \\<notin> D(Y x \\<lbrakk> A \\<rbrakk> S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>chain Y;\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        (\\<forall>v.\n            a = r @ v \\<longrightarrow>\n            front_tickFree v \\<longrightarrow>\n            \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n            ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n            (t \\<in> D S \\<longrightarrow>\n             (\\<exists>x. u \\<notin> T (Y x))))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x. a \\<notin> D (Y x \\<lbrakk>A\\<rbrakk> S)", "apply(auto simp: D_sync)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>chain Y;\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        (\\<forall>v.\n            a = r @ v \\<longrightarrow>\n            front_tickFree v \\<longrightarrow>\n            \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n            ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n            (t \\<in> D S \\<longrightarrow>\n             (\\<exists>x. u \\<notin> T (Y x))))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x.\n                         \\<forall>t u r.\n                            r setinterleaves ((t, u), insert tick\n                 (ev ` A)) \\<longrightarrow>\n                            (\\<forall>v.\n                                a = r @ v \\<longrightarrow>\n                                front_tickFree v \\<longrightarrow>\n                                \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n                                (t \\<in> D (Y x) \\<longrightarrow>\n                                 u \\<notin> T S) \\<and>\n                                (t \\<in> D S \\<longrightarrow>\n                                 u \\<notin> T (Y x)))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>chain Y;\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        (\\<forall>v.\n            a = r @ v \\<longrightarrow>\n            front_tickFree v \\<longrightarrow>\n            \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n            ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n            (t \\<in> D S \\<longrightarrow>\n             (\\<exists>x. u \\<notin> T (Y x))))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x.\n                         \\<forall>t u r.\n                            r setinterleaves ((t, u), insert tick\n                 (ev ` A)) \\<longrightarrow>\n                            (\\<forall>v.\n                                a = r @ v \\<longrightarrow>\n                                front_tickFree v \\<longrightarrow>\n                                \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n                                (t \\<in> D (Y x) \\<longrightarrow>\n                                 u \\<notin> T S) \\<and>\n                                (t \\<in> D S \\<longrightarrow>\n                                 u \\<notin> T (Y x)))", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>chain Y;\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        (\\<forall>v.\n            a = r @ v \\<longrightarrow>\n            front_tickFree v \\<longrightarrow>\n            \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n            ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n            (t \\<in> D S \\<longrightarrow>\n             (\\<exists>x. u \\<notin> T (Y x))))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x.\n                         \\<forall>t u r.\n                            r setinterleaves ((t, u), insert tick\n                 (ev ` A)) \\<longrightarrow>\n                            (\\<forall>v.\n                                a = r @ v \\<longrightarrow>\n                                front_tickFree v \\<longrightarrow>\n                                \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n                                (t \\<in> D (Y x) \\<longrightarrow>\n                                 u \\<notin> T S) \\<and>\n                                (t \\<in> D S \\<longrightarrow>\n                                 u \\<notin> T (Y x)))", "assume A: \"\\<forall>t u r. r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow> (\\<forall>v. a = r @ v \\<longrightarrow>\n  front_tickFree v \\<longrightarrow> \\<not> tickFree r \\<and> v \\<noteq> [] \\<or> ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and> (t \\<in> D S \\<longrightarrow> \n  (\\<exists>x. u \\<notin> T (Y x))))\""], ["proof (state)\nthis:\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         a = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n         ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n         (t \\<in> D S \\<longrightarrow> (\\<exists>x. u \\<notin> T (Y x))))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>chain Y;\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        (\\<forall>v.\n            a = r @ v \\<longrightarrow>\n            front_tickFree v \\<longrightarrow>\n            \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n            ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n            (t \\<in> D S \\<longrightarrow>\n             (\\<exists>x. u \\<notin> T (Y x))))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x.\n                         \\<forall>t u r.\n                            r setinterleaves ((t, u), insert tick\n                 (ev ` A)) \\<longrightarrow>\n                            (\\<forall>v.\n                                a = r @ v \\<longrightarrow>\n                                front_tickFree v \\<longrightarrow>\n                                \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n                                (t \\<in> D (Y x) \\<longrightarrow>\n                                 u \\<notin> T S) \\<and>\n                                (t \\<in> D S \\<longrightarrow>\n                                 u \\<notin> T (Y x)))", "assume B: \"chain Y\""], ["proof (state)\nthis:\n  chain Y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>chain Y;\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        (\\<forall>v.\n            a = r @ v \\<longrightarrow>\n            front_tickFree v \\<longrightarrow>\n            \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n            ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n            (t \\<in> D S \\<longrightarrow>\n             (\\<exists>x. u \\<notin> T (Y x))))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x.\n                         \\<forall>t u r.\n                            r setinterleaves ((t, u), insert tick\n                 (ev ` A)) \\<longrightarrow>\n                            (\\<forall>v.\n                                a = r @ v \\<longrightarrow>\n                                front_tickFree v \\<longrightarrow>\n                                \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n                                (t \\<in> D (Y x) \\<longrightarrow>\n                                 u \\<notin> T S) \\<and>\n                                (t \\<in> D S \\<longrightarrow>\n                                 u \\<notin> T (Y x)))", "thus \"\\<exists>x. \\<forall>t u r. r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>(\\<forall>v. a = r @ v \\<longrightarrow> \n  front_tickFree v\\<longrightarrow>\\<not> tickFree r\\<and>v\\<noteq>[] \\<or> (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and> (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)))\""], ["proof (prove)\nusing this:\n  chain Y\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>t u r.\n          r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n          (\\<forall>v.\n              a = r @ v \\<longrightarrow>\n              front_tickFree v \\<longrightarrow>\n              \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n              (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n              (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. chain Y \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>t u r.\n          r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n          (\\<forall>v.\n              a = r @ v \\<longrightarrow>\n              front_tickFree v \\<longrightarrow>\n              \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n              (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n              (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)))", "from B"], ["proof (chain)\npicking this:\n  chain Y", "have D: \"((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and> (t \\<in> D S \\<longrightarrow> (\\<exists>x. u \\<notin> T (Y x)))\\<Longrightarrow> \n    (\\<exists>x. ((t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and> (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x))))\""], ["proof (prove)\nusing this:\n  chain Y\n\ngoal (1 subgoal):\n 1. ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n    (t \\<in> D S \\<longrightarrow>\n     (\\<exists>x. u \\<notin> T (Y x))) \\<Longrightarrow>\n    \\<exists>x.\n       (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n       (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x))", "by (meson D_T chain_lemma le_approx1 le_approx2T subsetCE)"], ["proof (state)\nthis:\n  ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n  (t \\<in> D S \\<longrightarrow>\n   (\\<exists>x. u \\<notin> T (Y x))) \\<Longrightarrow>\n  \\<exists>x.\n     (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n     (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x))\n\ngoal (1 subgoal):\n 1. chain Y \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>t u r.\n          r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n          (\\<forall>v.\n              a = r @ v \\<longrightarrow>\n              front_tickFree v \\<longrightarrow>\n              \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n              (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n              (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)))", "from A"], ["proof (chain)\npicking this:\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         a = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n         ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n         (t \\<in> D S \\<longrightarrow> (\\<exists>x. u \\<notin> T (Y x))))", "obtain tryunion where Ctryy: \"tryunion={(t, u, r). r setinterleaves \n    ((t, u), insert tick (ev ` A))\\<and>(\\<exists>v. a = r @ v \\<and> front_tickFree v \\<and> (tickFree r \\<or> v = []))}\""], ["proof (prove)\nusing this:\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         a = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n         ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n         (t \\<in> D S \\<longrightarrow> (\\<exists>x. u \\<notin> T (Y x))))\n\ngoal (1 subgoal):\n 1. (\\<And>tryunion.\n        tryunion =\n        {(t, u, r).\n         r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n         (\\<exists>v.\n             a = r @ v \\<and>\n             front_tickFree v \\<and>\n             (tickFree r \\<or> v = []))} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by simp"], ["proof (state)\nthis:\n  tryunion =\n  {(t, u, r).\n   r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n   (\\<exists>v.\n       a = r @ v \\<and> front_tickFree v \\<and> (tickFree r \\<or> v = []))}\n\ngoal (1 subgoal):\n 1. chain Y \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>t u r.\n          r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n          (\\<forall>v.\n              a = r @ v \\<longrightarrow>\n              front_tickFree v \\<longrightarrow>\n              \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n              (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n              (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)))", "from Ctryy"], ["proof (chain)\npicking this:\n  tryunion =\n  {(t, u, r).\n   r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n   (\\<exists>v.\n       a = r @ v \\<and> front_tickFree v \\<and> (tickFree r \\<or> v = []))}", "have tolfin: \"finite tryunion\""], ["proof (prove)\nusing this:\n  tryunion =\n  {(t, u, r).\n   r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n   (\\<exists>v.\n       a = r @ v \\<and> front_tickFree v \\<and> (tickFree r \\<or> v = []))}\n\ngoal (1 subgoal):\n 1. finite tryunion", "using inters_fin"], ["proof (prove)\nusing this:\n  tryunion =\n  {(t, u, r).\n   r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n   (\\<exists>v.\n       a = r @ v \\<and> front_tickFree v \\<and> (tickFree r \\<or> v = []))}\n  finite\n   {(t, u, r).\n    r setinterleaves ((t, u), insert tick (ev ` ?A)) \\<and>\n    (\\<exists>v.\n        ?x = r @ v \\<and>\n        front_tickFree v \\<and> (tickFree r \\<or> v = []))}\n\ngoal (1 subgoal):\n 1. finite tryunion", "by auto"], ["proof (state)\nthis:\n  finite tryunion\n\ngoal (1 subgoal):\n 1. chain Y \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>t u r.\n          r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n          (\\<forall>v.\n              a = r @ v \\<longrightarrow>\n              front_tickFree v \\<longrightarrow>\n              \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n              (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n              (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)))", "from B"], ["proof (chain)\npicking this:\n  chain Y", "have Abb1: \"\\<forall>n1 n2. n1\\<le>n2 \\<longrightarrow> Y n1 \\<sqsubseteq> Y n2\""], ["proof (prove)\nusing this:\n  chain Y\n\ngoal (1 subgoal):\n 1. \\<forall>n1 n2. n1 \\<le> n2 \\<longrightarrow> Y n1 \\<sqsubseteq> Y n2", "by (simp add: po_class.chain_mono)"], ["proof (state)\nthis:\n  \\<forall>n1 n2. n1 \\<le> n2 \\<longrightarrow> Y n1 \\<sqsubseteq> Y n2\n\ngoal (1 subgoal):\n 1. chain Y \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>t u r.\n          r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n          (\\<forall>v.\n              a = r @ v \\<longrightarrow>\n              front_tickFree v \\<longrightarrow>\n              \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n              (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n              (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)))", "from A Abb1"], ["proof (chain)\npicking this:\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         a = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n         ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n         (t \\<in> D S \\<longrightarrow> (\\<exists>x. u \\<notin> T (Y x))))\n  \\<forall>n1 n2. n1 \\<le> n2 \\<longrightarrow> Y n1 \\<sqsubseteq> Y n2", "have Abb2: \"\\<forall>n1 n2 t. n1>n2\\<and>t \\<notin> D (Y n2)\\<longrightarrow>t \\<notin> D (Y n1)\""], ["proof (prove)\nusing this:\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         a = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n         ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n         (t \\<in> D S \\<longrightarrow> (\\<exists>x. u \\<notin> T (Y x))))\n  \\<forall>n1 n2. n1 \\<le> n2 \\<longrightarrow> Y n1 \\<sqsubseteq> Y n2\n\ngoal (1 subgoal):\n 1. \\<forall>n1 n2 t.\n       n2 < n1 \\<and> t \\<notin> D (Y n2) \\<longrightarrow>\n       t \\<notin> D (Y n1)", "using le_approx1 less_imp_le_nat"], ["proof (prove)\nusing this:\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         a = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n         ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n         (t \\<in> D S \\<longrightarrow> (\\<exists>x. u \\<notin> T (Y x))))\n  \\<forall>n1 n2. n1 \\<le> n2 \\<longrightarrow> Y n1 \\<sqsubseteq> Y n2\n  ?P \\<sqsubseteq> ?Q \\<Longrightarrow> D ?Q \\<subseteq> D ?P\n  ?m < ?n \\<Longrightarrow> ?m \\<le> ?n\n\ngoal (1 subgoal):\n 1. \\<forall>n1 n2 t.\n       n2 < n1 \\<and> t \\<notin> D (Y n2) \\<longrightarrow>\n       t \\<notin> D (Y n1)", "by blast"], ["proof (state)\nthis:\n  \\<forall>n1 n2 t.\n     n2 < n1 \\<and> t \\<notin> D (Y n2) \\<longrightarrow>\n     t \\<notin> D (Y n1)\n\ngoal (1 subgoal):\n 1. chain Y \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>t u r.\n          r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n          (\\<forall>v.\n              a = r @ v \\<longrightarrow>\n              front_tickFree v \\<longrightarrow>\n              \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n              (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n              (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)))", "from A Abb1"], ["proof (chain)\npicking this:\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         a = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n         ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n         (t \\<in> D S \\<longrightarrow> (\\<exists>x. u \\<notin> T (Y x))))\n  \\<forall>n1 n2. n1 \\<le> n2 \\<longrightarrow> Y n1 \\<sqsubseteq> Y n2", "have Abb3: \"\\<forall>n1 n2 t. n1>n2\\<and>t \\<notin> T (Y n2)\\<longrightarrow>t \\<notin> T (Y n1)\""], ["proof (prove)\nusing this:\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         a = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n         ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n         (t \\<in> D S \\<longrightarrow> (\\<exists>x. u \\<notin> T (Y x))))\n  \\<forall>n1 n2. n1 \\<le> n2 \\<longrightarrow> Y n1 \\<sqsubseteq> Y n2\n\ngoal (1 subgoal):\n 1. \\<forall>n1 n2 t.\n       n2 < n1 \\<and> t \\<notin> T (Y n2) \\<longrightarrow>\n       t \\<notin> T (Y n1)", "by (meson NT_ND le_approx2T less_imp_le_nat)"], ["proof (state)\nthis:\n  \\<forall>n1 n2 t.\n     n2 < n1 \\<and> t \\<notin> T (Y n2) \\<longrightarrow>\n     t \\<notin> T (Y n1)\n\ngoal (1 subgoal):\n 1. chain Y \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>t u r.\n          r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n          (\\<forall>v.\n              a = r @ v \\<longrightarrow>\n              front_tickFree v \\<longrightarrow>\n              \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n              (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n              (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)))", "from Abb2 Abb3"], ["proof (chain)\npicking this:\n  \\<forall>n1 n2 t.\n     n2 < n1 \\<and> t \\<notin> D (Y n2) \\<longrightarrow>\n     t \\<notin> D (Y n1)\n  \\<forall>n1 n2 t.\n     n2 < n1 \\<and> t \\<notin> T (Y n2) \\<longrightarrow>\n     t \\<notin> T (Y n1)", "have oneIndexPre: \"\\<forall>t u. ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and> (t \\<in> D S \\<longrightarrow> \n    (\\<exists>x. u \\<notin> T (Y x)))\\<longrightarrow>(\\<exists>x. (t \\<notin> D (Y x) \\<or> u \\<notin> T S) \\<and> (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)))\""], ["proof (prove)\nusing this:\n  \\<forall>n1 n2 t.\n     n2 < n1 \\<and> t \\<notin> D (Y n2) \\<longrightarrow>\n     t \\<notin> D (Y n1)\n  \\<forall>n1 n2 t.\n     n2 < n1 \\<and> t \\<notin> T (Y n2) \\<longrightarrow>\n     t \\<notin> T (Y n1)\n\ngoal (1 subgoal):\n 1. \\<forall>t u.\n       ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n       (t \\<in> D S \\<longrightarrow>\n        (\\<exists>x. u \\<notin> T (Y x))) \\<longrightarrow>\n       (\\<exists>x.\n           (t \\<notin> D (Y x) \\<or> u \\<notin> T S) \\<and>\n           (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)))", "by (meson B D_T ND_F_dir2' chain_lemma le_approx1 subsetCE)"], ["proof (state)\nthis:\n  \\<forall>t u.\n     ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n     (t \\<in> D S \\<longrightarrow>\n      (\\<exists>x. u \\<notin> T (Y x))) \\<longrightarrow>\n     (\\<exists>x.\n         (t \\<notin> D (Y x) \\<or> u \\<notin> T S) \\<and>\n         (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)))\n\ngoal (1 subgoal):\n 1. chain Y \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>t u r.\n          r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n          (\\<forall>v.\n              a = r @ v \\<longrightarrow>\n              front_tickFree v \\<longrightarrow>\n              \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n              (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n              (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)))", "from A B oneIndexPre Abb2 Abb3"], ["proof (chain)\npicking this:\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         a = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n         ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n         (t \\<in> D S \\<longrightarrow> (\\<exists>x. u \\<notin> T (Y x))))\n  chain Y\n  \\<forall>t u.\n     ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n     (t \\<in> D S \\<longrightarrow>\n      (\\<exists>x. u \\<notin> T (Y x))) \\<longrightarrow>\n     (\\<exists>x.\n         (t \\<notin> D (Y x) \\<or> u \\<notin> T S) \\<and>\n         (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)))\n  \\<forall>n1 n2 t.\n     n2 < n1 \\<and> t \\<notin> D (Y n2) \\<longrightarrow>\n     t \\<notin> D (Y n1)\n  \\<forall>n1 n2 t.\n     n2 < n1 \\<and> t \\<notin> T (Y n2) \\<longrightarrow>\n     t \\<notin> T (Y n1)", "have oneIndex: \"\\<forall>t u r. r setinterleaves \n    ((t, u), insert tick (ev ` A)) \\<longrightarrow> (\\<forall>v. a = r @ v \\<longrightarrow>front_tickFree v \\<longrightarrow> \\<not> tickFree r\\<and>v\\<noteq>[] \\<or>\n    ( \\<exists>x.( (( t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and> (t \\<in> D S \\<longrightarrow> (u \\<notin> T (Y x))))))\""], ["proof (prove)\nusing this:\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         a = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n         ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n         (t \\<in> D S \\<longrightarrow> (\\<exists>x. u \\<notin> T (Y x))))\n  chain Y\n  \\<forall>t u.\n     ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n     (t \\<in> D S \\<longrightarrow>\n      (\\<exists>x. u \\<notin> T (Y x))) \\<longrightarrow>\n     (\\<exists>x.\n         (t \\<notin> D (Y x) \\<or> u \\<notin> T S) \\<and>\n         (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)))\n  \\<forall>n1 n2 t.\n     n2 < n1 \\<and> t \\<notin> D (Y n2) \\<longrightarrow>\n     t \\<notin> D (Y n1)\n  \\<forall>n1 n2 t.\n     n2 < n1 \\<and> t \\<notin> T (Y n2) \\<longrightarrow>\n     t \\<notin> T (Y n1)\n\ngoal (1 subgoal):\n 1. \\<forall>t u r.\n       r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n       (\\<forall>v.\n           a = r @ v \\<longrightarrow>\n           front_tickFree v \\<longrightarrow>\n           \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n           (\\<exists>x.\n               (t \\<notin> D (Y x) \\<or> u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x))))", "by blast"], ["proof (state)\nthis:\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         a = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n         (\\<exists>x.\n             (t \\<notin> D (Y x) \\<or> u \\<notin> T S) \\<and>\n             (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x))))\n\ngoal (1 subgoal):\n 1. chain Y \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>t u r.\n          r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n          (\\<forall>v.\n              a = r @ v \\<longrightarrow>\n              front_tickFree v \\<longrightarrow>\n              \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n              (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n              (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)))", "define proUnion1 where finiUnion: \"proUnion1={n. \\<exists>(t,u, r)\\<in>tryunion.(((t \\<in> D (Y n) \\<longrightarrow> u \\<notin> T S) \n    \\<and>(t \\<in> D S \\<longrightarrow> u\\<notin>T (Y n)))\\<and> (\\<forall>m. ( (t \\<in> D (Y m)\\<longrightarrow>u \\<notin> T S)\\<and>(t \\<in> D S\\<longrightarrow>u \\<notin> T (Y m)))\\<longrightarrow>n\\<le>m))}\""], ["proof (state)\nthis:\n  proUnion1 =\n  {n. \\<exists>(t, u, r)\\<in>tryunion.\n         ((t \\<in> D (Y n) \\<longrightarrow> u \\<notin> T S) \\<and>\n          (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y n))) \\<and>\n         (\\<forall>m.\n             (t \\<in> D (Y m) \\<longrightarrow> u \\<notin> T S) \\<and>\n             (t \\<in> D S \\<longrightarrow>\n              u \\<notin> T (Y m)) \\<longrightarrow>\n             n \\<le> m)}\n\ngoal (1 subgoal):\n 1. chain Y \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>t u r.\n          r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n          (\\<forall>v.\n              a = r @ v \\<longrightarrow>\n              front_tickFree v \\<longrightarrow>\n              \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n              (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n              (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)))", "from B"], ["proof (chain)\npicking this:\n  chain Y", "have finiSet1: \"\\<And>r t u. (t,u, r) \\<in> tryunion \\<Longrightarrow> finite {n1.(((t \\<in> D (Y n1)\\<longrightarrow>u \\<notin> T S)\\<and> \n    (t\\<in>D S\\<longrightarrow>u\\<notin>T(Y n1)))\\<and>(\\<forall>m1. ((t \\<in> D (Y m1)\\<longrightarrow>u \\<notin> T S)\\<and>(t \\<in> D S \\<longrightarrow> u \\<notin> T (Y m1)))\\<longrightarrow>n1\\<le>m1))}\""], ["proof (prove)\nusing this:\n  chain Y\n\ngoal (1 subgoal):\n 1. \\<And>r t u.\n       (t, u, r) \\<in> tryunion \\<Longrightarrow>\n       finite\n        {n1.\n         ((t \\<in> D (Y n1) \\<longrightarrow> u \\<notin> T S) \\<and>\n          (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y n1))) \\<and>\n         (\\<forall>m1.\n             (t \\<in> D (Y m1) \\<longrightarrow> u \\<notin> T S) \\<and>\n             (t \\<in> D S \\<longrightarrow>\n              u \\<notin> T (Y m1)) \\<longrightarrow>\n             n1 \\<le> m1)}", "by (metis (no_types, lifting) infinite_nat_iff_unbounded mem_Collect_eq not_less)"], ["proof (state)\nthis:\n  (?t, ?u, ?r) \\<in> tryunion \\<Longrightarrow>\n  finite\n   {n1.\n    ((?t \\<in> D (Y n1) \\<longrightarrow> ?u \\<notin> T S) \\<and>\n     (?t \\<in> D S \\<longrightarrow> ?u \\<notin> T (Y n1))) \\<and>\n    (\\<forall>m1.\n        (?t \\<in> D (Y m1) \\<longrightarrow> ?u \\<notin> T S) \\<and>\n        (?t \\<in> D S \\<longrightarrow>\n         ?u \\<notin> T (Y m1)) \\<longrightarrow>\n        n1 \\<le> m1)}\n\ngoal (1 subgoal):\n 1. chain Y \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>t u r.\n          r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n          (\\<forall>v.\n              a = r @ v \\<longrightarrow>\n              front_tickFree v \\<longrightarrow>\n              \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n              (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n              (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)))", "from B tolfin finiUnion oneIndex finiSet1"], ["proof (chain)\npicking this:\n  chain Y\n  finite tryunion\n  proUnion1 =\n  {n. \\<exists>(t, u, r)\\<in>tryunion.\n         ((t \\<in> D (Y n) \\<longrightarrow> u \\<notin> T S) \\<and>\n          (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y n))) \\<and>\n         (\\<forall>m.\n             (t \\<in> D (Y m) \\<longrightarrow> u \\<notin> T S) \\<and>\n             (t \\<in> D S \\<longrightarrow>\n              u \\<notin> T (Y m)) \\<longrightarrow>\n             n \\<le> m)}\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         a = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n         (\\<exists>x.\n             (t \\<notin> D (Y x) \\<or> u \\<notin> T S) \\<and>\n             (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x))))\n  (?t, ?u, ?r) \\<in> tryunion \\<Longrightarrow>\n  finite\n   {n1.\n    ((?t \\<in> D (Y n1) \\<longrightarrow> ?u \\<notin> T S) \\<and>\n     (?t \\<in> D S \\<longrightarrow> ?u \\<notin> T (Y n1))) \\<and>\n    (\\<forall>m1.\n        (?t \\<in> D (Y m1) \\<longrightarrow> ?u \\<notin> T S) \\<and>\n        (?t \\<in> D S \\<longrightarrow>\n         ?u \\<notin> T (Y m1)) \\<longrightarrow>\n        n1 \\<le> m1)}", "have finiSet: \"finite proUnion1\""], ["proof (prove)\nusing this:\n  chain Y\n  finite tryunion\n  proUnion1 =\n  {n. \\<exists>(t, u, r)\\<in>tryunion.\n         ((t \\<in> D (Y n) \\<longrightarrow> u \\<notin> T S) \\<and>\n          (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y n))) \\<and>\n         (\\<forall>m.\n             (t \\<in> D (Y m) \\<longrightarrow> u \\<notin> T S) \\<and>\n             (t \\<in> D S \\<longrightarrow>\n              u \\<notin> T (Y m)) \\<longrightarrow>\n             n \\<le> m)}\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         a = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n         (\\<exists>x.\n             (t \\<notin> D (Y x) \\<or> u \\<notin> T S) \\<and>\n             (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x))))\n  (?t, ?u, ?r) \\<in> tryunion \\<Longrightarrow>\n  finite\n   {n1.\n    ((?t \\<in> D (Y n1) \\<longrightarrow> ?u \\<notin> T S) \\<and>\n     (?t \\<in> D S \\<longrightarrow> ?u \\<notin> T (Y n1))) \\<and>\n    (\\<forall>m1.\n        (?t \\<in> D (Y m1) \\<longrightarrow> ?u \\<notin> T S) \\<and>\n        (?t \\<in> D S \\<longrightarrow>\n         ?u \\<notin> T (Y m1)) \\<longrightarrow>\n        n1 \\<le> m1)}\n\ngoal (1 subgoal):\n 1. finite proUnion1", "by auto"], ["proof (state)\nthis:\n  finite proUnion1\n\ngoal (1 subgoal):\n 1. chain Y \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>t u r.\n          r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n          (\\<forall>v.\n              a = r @ v \\<longrightarrow>\n              front_tickFree v \\<longrightarrow>\n              \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n              (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n              (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)))", "from finiSet"], ["proof (chain)\npicking this:\n  finite proUnion1", "obtain proMax where ann: \"proMax=Max(proUnion1)\""], ["proof (prove)\nusing this:\n  finite proUnion1\n\ngoal (1 subgoal):\n 1. (\\<And>proMax.\n        proMax = Max proUnion1 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  proMax = Max proUnion1\n\ngoal (1 subgoal):\n 1. chain Y \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>t u r.\n          r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n          (\\<forall>v.\n              a = r @ v \\<longrightarrow>\n              front_tickFree v \\<longrightarrow>\n              \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n              (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n              (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)))", "from ann Abb2"], ["proof (chain)\npicking this:\n  proMax = Max proUnion1\n  \\<forall>n1 n2 t.\n     n2 < n1 \\<and> t \\<notin> D (Y n2) \\<longrightarrow>\n     t \\<notin> D (Y n1)", "have ann1: \"\\<forall>num\\<in>proUnion1. \\<forall>t. t \\<notin> D (Y num)\\<longrightarrow>t \\<notin> D (Y proMax)\""], ["proof (prove)\nusing this:\n  proMax = Max proUnion1\n  \\<forall>n1 n2 t.\n     n2 < n1 \\<and> t \\<notin> D (Y n2) \\<longrightarrow>\n     t \\<notin> D (Y n1)\n\ngoal (1 subgoal):\n 1. \\<forall>num\\<in>proUnion1.\n       \\<forall>t.\n          t \\<notin> D (Y num) \\<longrightarrow> t \\<notin> D (Y proMax)", "by (meson Abb1 Max_ge finiSet le_approx1 subsetCE)"], ["proof (state)\nthis:\n  \\<forall>num\\<in>proUnion1.\n     \\<forall>t.\n        t \\<notin> D (Y num) \\<longrightarrow> t \\<notin> D (Y proMax)\n\ngoal (1 subgoal):\n 1. chain Y \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>t u r.\n          r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n          (\\<forall>v.\n              a = r @ v \\<longrightarrow>\n              front_tickFree v \\<longrightarrow>\n              \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n              (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n              (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)))", "from ann Abb3"], ["proof (chain)\npicking this:\n  proMax = Max proUnion1\n  \\<forall>n1 n2 t.\n     n2 < n1 \\<and> t \\<notin> T (Y n2) \\<longrightarrow>\n     t \\<notin> T (Y n1)", "have ann2: \"\\<forall>num\\<in>proUnion1.  \\<forall>t. t \\<notin> T (Y num)\\<longrightarrow>t \\<notin> T (Y proMax)\""], ["proof (prove)\nusing this:\n  proMax = Max proUnion1\n  \\<forall>n1 n2 t.\n     n2 < n1 \\<and> t \\<notin> T (Y n2) \\<longrightarrow>\n     t \\<notin> T (Y n1)\n\ngoal (1 subgoal):\n 1. \\<forall>num\\<in>proUnion1.\n       \\<forall>t.\n          t \\<notin> T (Y num) \\<longrightarrow> t \\<notin> T (Y proMax)", "by (meson Abb1 D_T Max_ge finiSet le_approx2T)"], ["proof (state)\nthis:\n  \\<forall>num\\<in>proUnion1.\n     \\<forall>t.\n        t \\<notin> T (Y num) \\<longrightarrow> t \\<notin> T (Y proMax)\n\ngoal (1 subgoal):\n 1. chain Y \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>t u r.\n          r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n          (\\<forall>v.\n              a = r @ v \\<longrightarrow>\n              front_tickFree v \\<longrightarrow>\n              \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n              (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n              (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)))", "from finiUnion"], ["proof (chain)\npicking this:\n  proUnion1 =\n  {n. \\<exists>(t, u, r)\\<in>tryunion.\n         ((t \\<in> D (Y n) \\<longrightarrow> u \\<notin> T S) \\<and>\n          (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y n))) \\<and>\n         (\\<forall>m.\n             (t \\<in> D (Y m) \\<longrightarrow> u \\<notin> T S) \\<and>\n             (t \\<in> D S \\<longrightarrow>\n              u \\<notin> T (Y m)) \\<longrightarrow>\n             n \\<le> m)}", "have ann3: \"\\<forall>num\\<in>proUnion1. \\<exists>r t u. r setinterleaves((t, u),insert tick (ev ` A)) \n   \\<longrightarrow> (\\<forall>v. a = r @ v \\<longrightarrow>front_tickFree v \\<longrightarrow> \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>(( ((t\\<notin>D(Y num))\\<or>u \\<notin> T S) \\<and> \n   (t \\<in> D S \\<longrightarrow> (u \\<notin> T (Y num))))))\""], ["proof (prove)\nusing this:\n  proUnion1 =\n  {n. \\<exists>(t, u, r)\\<in>tryunion.\n         ((t \\<in> D (Y n) \\<longrightarrow> u \\<notin> T S) \\<and>\n          (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y n))) \\<and>\n         (\\<forall>m.\n             (t \\<in> D (Y m) \\<longrightarrow> u \\<notin> T S) \\<and>\n             (t \\<in> D S \\<longrightarrow>\n              u \\<notin> T (Y m)) \\<longrightarrow>\n             n \\<le> m)}\n\ngoal (1 subgoal):\n 1. \\<forall>num\\<in>proUnion1.\n       \\<exists>r t u.\n          r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n          (\\<forall>v.\n              a = r @ v \\<longrightarrow>\n              front_tickFree v \\<longrightarrow>\n              \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n              (t \\<notin> D (Y num) \\<or> u \\<notin> T S) \\<and>\n              (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y num)))", "by auto"], ["proof (state)\nthis:\n  \\<forall>num\\<in>proUnion1.\n     \\<exists>r t u.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        (\\<forall>v.\n            a = r @ v \\<longrightarrow>\n            front_tickFree v \\<longrightarrow>\n            \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n            (t \\<notin> D (Y num) \\<or> u \\<notin> T S) \\<and>\n            (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y num)))\n\ngoal (1 subgoal):\n 1. chain Y \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>t u r.\n          r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n          (\\<forall>v.\n              a = r @ v \\<longrightarrow>\n              front_tickFree v \\<longrightarrow>\n              \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n              (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n              (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)))", "obtain proUnion2 where ann0: \" proUnion2 ={(t, u, r).\\<exists>n. (t, u, r)\\<in>tryunion\\<and>\n   ((t \\<in> D (Y n)\\<longrightarrow>u \\<notin> T S) \\<and> (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y n)))}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>proUnion2.\n        proUnion2 =\n        {(t, u, r).\n         \\<exists>n.\n            (t, u, r) \\<in> tryunion \\<and>\n            (t \\<in> D (Y n) \\<longrightarrow> u \\<notin> T S) \\<and>\n            (t \\<in> D S \\<longrightarrow>\n             u \\<notin> T (Y n))} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  proUnion2 =\n  {(t, u, r).\n   \\<exists>n.\n      (t, u, r) \\<in> tryunion \\<and>\n      (t \\<in> D (Y n) \\<longrightarrow> u \\<notin> T S) \\<and>\n      (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y n))}\n\ngoal (1 subgoal):\n 1. chain Y \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>t u r.\n          r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n          (\\<forall>v.\n              a = r @ v \\<longrightarrow>\n              front_tickFree v \\<longrightarrow>\n              \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n              (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n              (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)))", "from ann0 Ctryy finiUnion"], ["proof (chain)\npicking this:\n  proUnion2 =\n  {(t, u, r).\n   \\<exists>n.\n      (t, u, r) \\<in> tryunion \\<and>\n      (t \\<in> D (Y n) \\<longrightarrow> u \\<notin> T S) \\<and>\n      (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y n))}\n  tryunion =\n  {(t, u, r).\n   r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n   (\\<exists>v.\n       a = r @ v \\<and> front_tickFree v \\<and> (tickFree r \\<or> v = []))}\n  proUnion1 =\n  {n. \\<exists>(t, u, r)\\<in>tryunion.\n         ((t \\<in> D (Y n) \\<longrightarrow> u \\<notin> T S) \\<and>\n          (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y n))) \\<and>\n         (\\<forall>m.\n             (t \\<in> D (Y m) \\<longrightarrow> u \\<notin> T S) \\<and>\n             (t \\<in> D S \\<longrightarrow>\n              u \\<notin> T (Y m)) \\<longrightarrow>\n             n \\<le> m)}", "have ann1: \"\\<And>t u r.  (t, u, r)\\<in> proUnion2\\<Longrightarrow>\\<exists>num. num\\<in>proUnion1\\<and>\n   ((t \\<in> D (Y num) \\<longrightarrow> u \\<notin> T S) \\<and> (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y num)))\""], ["proof (prove)\nusing this:\n  proUnion2 =\n  {(t, u, r).\n   \\<exists>n.\n      (t, u, r) \\<in> tryunion \\<and>\n      (t \\<in> D (Y n) \\<longrightarrow> u \\<notin> T S) \\<and>\n      (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y n))}\n  tryunion =\n  {(t, u, r).\n   r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n   (\\<exists>v.\n       a = r @ v \\<and> front_tickFree v \\<and> (tickFree r \\<or> v = []))}\n  proUnion1 =\n  {n. \\<exists>(t, u, r)\\<in>tryunion.\n         ((t \\<in> D (Y n) \\<longrightarrow> u \\<notin> T S) \\<and>\n          (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y n))) \\<and>\n         (\\<forall>m.\n             (t \\<in> D (Y m) \\<longrightarrow> u \\<notin> T S) \\<and>\n             (t \\<in> D S \\<longrightarrow>\n              u \\<notin> T (Y m)) \\<longrightarrow>\n             n \\<le> m)}\n\ngoal (1 subgoal):\n 1. \\<And>t u r.\n       (t, u, r) \\<in> proUnion2 \\<Longrightarrow>\n       \\<exists>num.\n          num \\<in> proUnion1 \\<and>\n          (t \\<in> D (Y num) \\<longrightarrow> u \\<notin> T S) \\<and>\n          (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y num))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t u r.\n       \\<lbrakk>(t, u, r) \\<in> proUnion2;\n        proUnion2 =\n        {(t, u, r).\n         \\<exists>n.\n            (t, u, r) \\<in> tryunion \\<and>\n            (t \\<in> D (Y n) \\<longrightarrow> u \\<notin> T S) \\<and>\n            (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y n))};\n        tryunion =\n        {(t, u, r).\n         r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n         (\\<exists>v.\n             a = r @ v \\<and>\n             front_tickFree v \\<and> (tickFree r \\<or> v = []))};\n        proUnion1 =\n        {n. \\<exists>(t, u, r)\\<in>tryunion.\n               ((t \\<in> D (Y n) \\<longrightarrow> u \\<notin> T S) \\<and>\n                (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y n))) \\<and>\n               (\\<forall>m.\n                   (t \\<in> D (Y m) \\<longrightarrow> u \\<notin> T S) \\<and>\n                   (t \\<in> D S \\<longrightarrow>\n                    u \\<notin> T (Y m)) \\<longrightarrow>\n                   n \\<le> m)}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>num.\n                            num \\<in> proUnion1 \\<and>\n                            (t \\<in> D (Y num) \\<longrightarrow>\n                             u \\<notin> T S) \\<and>\n                            (t \\<in> D S \\<longrightarrow>\n                             u \\<notin> T (Y num))", "fix t u r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t u r.\n       \\<lbrakk>(t, u, r) \\<in> proUnion2;\n        proUnion2 =\n        {(t, u, r).\n         \\<exists>n.\n            (t, u, r) \\<in> tryunion \\<and>\n            (t \\<in> D (Y n) \\<longrightarrow> u \\<notin> T S) \\<and>\n            (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y n))};\n        tryunion =\n        {(t, u, r).\n         r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n         (\\<exists>v.\n             a = r @ v \\<and>\n             front_tickFree v \\<and> (tickFree r \\<or> v = []))};\n        proUnion1 =\n        {n. \\<exists>(t, u, r)\\<in>tryunion.\n               ((t \\<in> D (Y n) \\<longrightarrow> u \\<notin> T S) \\<and>\n                (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y n))) \\<and>\n               (\\<forall>m.\n                   (t \\<in> D (Y m) \\<longrightarrow> u \\<notin> T S) \\<and>\n                   (t \\<in> D S \\<longrightarrow>\n                    u \\<notin> T (Y m)) \\<longrightarrow>\n                   n \\<le> m)}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>num.\n                            num \\<in> proUnion1 \\<and>\n                            (t \\<in> D (Y num) \\<longrightarrow>\n                             u \\<notin> T S) \\<and>\n                            (t \\<in> D S \\<longrightarrow>\n                             u \\<notin> T (Y num))", "assume a:  \"(t, u, r)\\<in> proUnion2\""], ["proof (state)\nthis:\n  (t, u, r) \\<in> proUnion2\n\ngoal (1 subgoal):\n 1. \\<And>t u r.\n       \\<lbrakk>(t, u, r) \\<in> proUnion2;\n        proUnion2 =\n        {(t, u, r).\n         \\<exists>n.\n            (t, u, r) \\<in> tryunion \\<and>\n            (t \\<in> D (Y n) \\<longrightarrow> u \\<notin> T S) \\<and>\n            (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y n))};\n        tryunion =\n        {(t, u, r).\n         r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n         (\\<exists>v.\n             a = r @ v \\<and>\n             front_tickFree v \\<and> (tickFree r \\<or> v = []))};\n        proUnion1 =\n        {n. \\<exists>(t, u, r)\\<in>tryunion.\n               ((t \\<in> D (Y n) \\<longrightarrow> u \\<notin> T S) \\<and>\n                (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y n))) \\<and>\n               (\\<forall>m.\n                   (t \\<in> D (Y m) \\<longrightarrow> u \\<notin> T S) \\<and>\n                   (t \\<in> D S \\<longrightarrow>\n                    u \\<notin> T (Y m)) \\<longrightarrow>\n                   n \\<le> m)}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>num.\n                            num \\<in> proUnion1 \\<and>\n                            (t \\<in> D (Y num) \\<longrightarrow>\n                             u \\<notin> T S) \\<and>\n                            (t \\<in> D S \\<longrightarrow>\n                             u \\<notin> T (Y num))", "define P where PP:\"P = (\\<lambda>num. ((t \\<in> D (Y num) \\<longrightarrow> u \\<notin> T S) \\<and> (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y num))))\""], ["proof (state)\nthis:\n  P =\n  (\\<lambda>num.\n      (t \\<in> D (Y num) \\<longrightarrow> u \\<notin> T S) \\<and>\n      (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y num)))\n\ngoal (1 subgoal):\n 1. \\<And>t u r.\n       \\<lbrakk>(t, u, r) \\<in> proUnion2;\n        proUnion2 =\n        {(t, u, r).\n         \\<exists>n.\n            (t, u, r) \\<in> tryunion \\<and>\n            (t \\<in> D (Y n) \\<longrightarrow> u \\<notin> T S) \\<and>\n            (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y n))};\n        tryunion =\n        {(t, u, r).\n         r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n         (\\<exists>v.\n             a = r @ v \\<and>\n             front_tickFree v \\<and> (tickFree r \\<or> v = []))};\n        proUnion1 =\n        {n. \\<exists>(t, u, r)\\<in>tryunion.\n               ((t \\<in> D (Y n) \\<longrightarrow> u \\<notin> T S) \\<and>\n                (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y n))) \\<and>\n               (\\<forall>m.\n                   (t \\<in> D (Y m) \\<longrightarrow> u \\<notin> T S) \\<and>\n                   (t \\<in> D S \\<longrightarrow>\n                    u \\<notin> T (Y m)) \\<longrightarrow>\n                   n \\<le> m)}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>num.\n                            num \\<in> proUnion1 \\<and>\n                            (t \\<in> D (Y num) \\<longrightarrow>\n                             u \\<notin> T S) \\<and>\n                            (t \\<in> D S \\<longrightarrow>\n                             u \\<notin> T (Y num))", "thus \"\\<exists>num. num\\<in>proUnion1\\<and> P num\""], ["proof (prove)\nusing this:\n  P =\n  (\\<lambda>num.\n      (t \\<in> D (Y num) \\<longrightarrow> u \\<notin> T S) \\<and>\n      (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y num)))\n\ngoal (1 subgoal):\n 1. \\<exists>num. num \\<in> proUnion1 \\<and> P num", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. P =\n    (\\<lambda>num.\n        (t \\<in> D (Y num) \\<longrightarrow> u \\<notin> T S) \\<and>\n        (t \\<in> D S \\<longrightarrow>\n         u \\<notin> T (Y num))) \\<Longrightarrow>\n    \\<exists>num. num \\<in> proUnion1 \\<and> P num", "from finiUnion"], ["proof (chain)\npicking this:\n  proUnion1 =\n  {n. \\<exists>(t, u, r)\\<in>tryunion.\n         ((t \\<in> D (Y n) \\<longrightarrow> u \\<notin> T S) \\<and>\n          (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y n))) \\<and>\n         (\\<forall>m.\n             (t \\<in> D (Y m) \\<longrightarrow> u \\<notin> T S) \\<and>\n             (t \\<in> D S \\<longrightarrow>\n              u \\<notin> T (Y m)) \\<longrightarrow>\n             n \\<le> m)}", "obtain minIndexRB where ann1preB: \"minIndexRB={n. (P n)}\""], ["proof (prove)\nusing this:\n  proUnion1 =\n  {n. \\<exists>(t, u, r)\\<in>tryunion.\n         ((t \\<in> D (Y n) \\<longrightarrow> u \\<notin> T S) \\<and>\n          (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y n))) \\<and>\n         (\\<forall>m.\n             (t \\<in> D (Y m) \\<longrightarrow> u \\<notin> T S) \\<and>\n             (t \\<in> D S \\<longrightarrow>\n              u \\<notin> T (Y m)) \\<longrightarrow>\n             n \\<le> m)}\n\ngoal (1 subgoal):\n 1. (\\<And>minIndexRB.\n        minIndexRB = {n. P n} \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  minIndexRB = {n. P n}\n\ngoal (1 subgoal):\n 1. P =\n    (\\<lambda>num.\n        (t \\<in> D (Y num) \\<longrightarrow> u \\<notin> T S) \\<and>\n        (t \\<in> D S \\<longrightarrow>\n         u \\<notin> T (Y num))) \\<Longrightarrow>\n    \\<exists>num. num \\<in> proUnion1 \\<and> P num", "from B ann1preB"], ["proof (chain)\npicking this:\n  chain Y\n  minIndexRB = {n. P n}", "obtain minmin where ab: \"(minmin::nat) = Inf (minIndexRB)\""], ["proof (prove)\nusing this:\n  chain Y\n  minIndexRB = {n. P n}\n\ngoal (1 subgoal):\n 1. (\\<And>minmin.\n        minmin = Inf minIndexRB \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  minmin = Inf minIndexRB\n\ngoal (1 subgoal):\n 1. P =\n    (\\<lambda>num.\n        (t \\<in> D (Y num) \\<longrightarrow> u \\<notin> T S) \\<and>\n        (t \\<in> D S \\<longrightarrow>\n         u \\<notin> T (Y num))) \\<Longrightarrow>\n    \\<exists>num. num \\<in> proUnion1 \\<and> P num", "from ann0 ann1preB PP"], ["proof (chain)\npicking this:\n  proUnion2 =\n  {(t, u, r).\n   \\<exists>n.\n      (t, u, r) \\<in> tryunion \\<and>\n      (t \\<in> D (Y n) \\<longrightarrow> u \\<notin> T S) \\<and>\n      (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y n))}\n  minIndexRB = {n. P n}\n  P =\n  (\\<lambda>num.\n      (t \\<in> D (Y num) \\<longrightarrow> u \\<notin> T S) \\<and>\n      (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y num)))", "have ann1preNoEmpty1: \"minIndexRB \\<noteq> {}\""], ["proof (prove)\nusing this:\n  proUnion2 =\n  {(t, u, r).\n   \\<exists>n.\n      (t, u, r) \\<in> tryunion \\<and>\n      (t \\<in> D (Y n) \\<longrightarrow> u \\<notin> T S) \\<and>\n      (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y n))}\n  minIndexRB = {n. P n}\n  P =\n  (\\<lambda>num.\n      (t \\<in> D (Y num) \\<longrightarrow> u \\<notin> T S) \\<and>\n      (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y num)))\n\ngoal (1 subgoal):\n 1. minIndexRB \\<noteq> {}", "using a"], ["proof (prove)\nusing this:\n  proUnion2 =\n  {(t, u, r).\n   \\<exists>n.\n      (t, u, r) \\<in> tryunion \\<and>\n      (t \\<in> D (Y n) \\<longrightarrow> u \\<notin> T S) \\<and>\n      (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y n))}\n  minIndexRB = {n. P n}\n  P =\n  (\\<lambda>num.\n      (t \\<in> D (Y num) \\<longrightarrow> u \\<notin> T S) \\<and>\n      (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y num)))\n  (t, u, r) \\<in> proUnion2\n\ngoal (1 subgoal):\n 1. minIndexRB \\<noteq> {}", "by blast"], ["proof (state)\nthis:\n  minIndexRB \\<noteq> {}\n\ngoal (1 subgoal):\n 1. P =\n    (\\<lambda>num.\n        (t \\<in> D (Y num) \\<longrightarrow> u \\<notin> T S) \\<and>\n        (t \\<in> D S \\<longrightarrow>\n         u \\<notin> T (Y num))) \\<Longrightarrow>\n    \\<exists>num. num \\<in> proUnion1 \\<and> P num", "from ab ann1preNoEmpty1"], ["proof (chain)\npicking this:\n  minmin = Inf minIndexRB\n  minIndexRB \\<noteq> {}", "have ann1pre0:\"minmin \\<in> minIndexRB\""], ["proof (prove)\nusing this:\n  minmin = Inf minIndexRB\n  minIndexRB \\<noteq> {}\n\ngoal (1 subgoal):\n 1. minmin \\<in> minIndexRB", "using Inf_nat_def wellorder_Least_lemma(1)"], ["proof (prove)\nusing this:\n  minmin = Inf minIndexRB\n  minIndexRB \\<noteq> {}\n  Inf ?X = (LEAST n. n \\<in> ?X)\n  ?P ?k \\<Longrightarrow> ?P (LEAST x. ?P x)\n\ngoal (1 subgoal):\n 1. minmin \\<in> minIndexRB", "by force"], ["proof (state)\nthis:\n  minmin \\<in> minIndexRB\n\ngoal (1 subgoal):\n 1. P =\n    (\\<lambda>num.\n        (t \\<in> D (Y num) \\<longrightarrow> u \\<notin> T S) \\<and>\n        (t \\<in> D S \\<longrightarrow>\n         u \\<notin> T (Y num))) \\<Longrightarrow>\n    \\<exists>num. num \\<in> proUnion1 \\<and> P num", "have \"minmin\\<in> {n. \\<exists>t u r. (t,u,r)\\<in>tryunion \\<and> ((t \\<in> D (Y n) \\<longrightarrow> u \\<notin> T S) \\<and> (t \\<in> D S \\<longrightarrow> \n       u \\<notin> T (Y n))) \\<and> (\\<forall>m. (t \\<in> D (Y m) \\<longrightarrow> u \\<notin> T S) \\<and> (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y m)) \\<longrightarrow> n \\<le> m)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. minmin\n    \\<in> {n. \\<exists>t u r.\n                 (t, u, r) \\<in> tryunion \\<and>\n                 ((t \\<in> D (Y n) \\<longrightarrow> u \\<notin> T S) \\<and>\n                  (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y n))) \\<and>\n                 (\\<forall>m.\n                     (t \\<in> D (Y m) \\<longrightarrow>\n                      u \\<notin> T S) \\<and>\n                     (t \\<in> D S \\<longrightarrow>\n                      u \\<notin> T (Y m)) \\<longrightarrow>\n                     n \\<le> m)}", "apply(rule CollectI,rule_tac x=t in exI,rule_tac x=u in exI,rule_tac x=r in exI,intro conjI)"], ["proof (prove)\ngoal (4 subgoals):\n 1. (t, u, r) \\<in> tryunion\n 2. t \\<in> D (Y minmin) \\<longrightarrow> u \\<notin> T S\n 3. t \\<in> D S \\<longrightarrow> u \\<notin> T (Y minmin)\n 4. \\<forall>m.\n       (t \\<in> D (Y m) \\<longrightarrow> u \\<notin> T S) \\<and>\n       (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y m)) \\<longrightarrow>\n       minmin \\<le> m", "using a ann0"], ["proof (prove)\nusing this:\n  (t, u, r) \\<in> proUnion2\n  proUnion2 =\n  {(t, u, r).\n   \\<exists>n.\n      (t, u, r) \\<in> tryunion \\<and>\n      (t \\<in> D (Y n) \\<longrightarrow> u \\<notin> T S) \\<and>\n      (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y n))}\n\ngoal (4 subgoals):\n 1. (t, u, r) \\<in> tryunion\n 2. t \\<in> D (Y minmin) \\<longrightarrow> u \\<notin> T S\n 3. t \\<in> D S \\<longrightarrow> u \\<notin> T (Y minmin)\n 4. \\<forall>m.\n       (t \\<in> D (Y m) \\<longrightarrow> u \\<notin> T S) \\<and>\n       (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y m)) \\<longrightarrow>\n       minmin \\<le> m", "apply blast"], ["proof (prove)\ngoal (3 subgoals):\n 1. t \\<in> D (Y minmin) \\<longrightarrow> u \\<notin> T S\n 2. t \\<in> D S \\<longrightarrow> u \\<notin> T (Y minmin)\n 3. \\<forall>m.\n       (t \\<in> D (Y m) \\<longrightarrow> u \\<notin> T S) \\<and>\n       (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y m)) \\<longrightarrow>\n       minmin \\<le> m", "using PP ann1pre0 ann1preB"], ["proof (prove)\nusing this:\n  P =\n  (\\<lambda>num.\n      (t \\<in> D (Y num) \\<longrightarrow> u \\<notin> T S) \\<and>\n      (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y num)))\n  minmin \\<in> minIndexRB\n  minIndexRB = {n. P n}\n\ngoal (3 subgoals):\n 1. t \\<in> D (Y minmin) \\<longrightarrow> u \\<notin> T S\n 2. t \\<in> D S \\<longrightarrow> u \\<notin> T (Y minmin)\n 3. \\<forall>m.\n       (t \\<in> D (Y m) \\<longrightarrow> u \\<notin> T S) \\<and>\n       (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y m)) \\<longrightarrow>\n       minmin \\<le> m", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. t \\<in> D S \\<longrightarrow> u \\<notin> T (Y minmin)\n 2. \\<forall>m.\n       (t \\<in> D (Y m) \\<longrightarrow> u \\<notin> T S) \\<and>\n       (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y m)) \\<longrightarrow>\n       minmin \\<le> m", "using PP ann1pre0 ann1preB"], ["proof (prove)\nusing this:\n  P =\n  (\\<lambda>num.\n      (t \\<in> D (Y num) \\<longrightarrow> u \\<notin> T S) \\<and>\n      (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y num)))\n  minmin \\<in> minIndexRB\n  minIndexRB = {n. P n}\n\ngoal (2 subgoals):\n 1. t \\<in> D S \\<longrightarrow> u \\<notin> T (Y minmin)\n 2. \\<forall>m.\n       (t \\<in> D (Y m) \\<longrightarrow> u \\<notin> T S) \\<and>\n       (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y m)) \\<longrightarrow>\n       minmin \\<le> m", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m.\n       (t \\<in> D (Y m) \\<longrightarrow> u \\<notin> T S) \\<and>\n       (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y m)) \\<longrightarrow>\n       minmin \\<le> m", "by (simp add: Inf_nat_def PP ab ann1preB wellorder_Least_lemma(2))"], ["proof (state)\nthis:\n  minmin\n  \\<in> {n. \\<exists>t u r.\n               (t, u, r) \\<in> tryunion \\<and>\n               ((t \\<in> D (Y n) \\<longrightarrow> u \\<notin> T S) \\<and>\n                (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y n))) \\<and>\n               (\\<forall>m.\n                   (t \\<in> D (Y m) \\<longrightarrow> u \\<notin> T S) \\<and>\n                   (t \\<in> D S \\<longrightarrow>\n                    u \\<notin> T (Y m)) \\<longrightarrow>\n                   n \\<le> m)}\n\ngoal (1 subgoal):\n 1. P =\n    (\\<lambda>num.\n        (t \\<in> D (Y num) \\<longrightarrow> u \\<notin> T S) \\<and>\n        (t \\<in> D S \\<longrightarrow>\n         u \\<notin> T (Y num))) \\<Longrightarrow>\n    \\<exists>num. num \\<in> proUnion1 \\<and> P num", "then"], ["proof (chain)\npicking this:\n  minmin\n  \\<in> {n. \\<exists>t u r.\n               (t, u, r) \\<in> tryunion \\<and>\n               ((t \\<in> D (Y n) \\<longrightarrow> u \\<notin> T S) \\<and>\n                (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y n))) \\<and>\n               (\\<forall>m.\n                   (t \\<in> D (Y m) \\<longrightarrow> u \\<notin> T S) \\<and>\n                   (t \\<in> D S \\<longrightarrow>\n                    u \\<notin> T (Y m)) \\<longrightarrow>\n                   n \\<le> m)}", "show ?thesis"], ["proof (prove)\nusing this:\n  minmin\n  \\<in> {n. \\<exists>t u r.\n               (t, u, r) \\<in> tryunion \\<and>\n               ((t \\<in> D (Y n) \\<longrightarrow> u \\<notin> T S) \\<and>\n                (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y n))) \\<and>\n               (\\<forall>m.\n                   (t \\<in> D (Y m) \\<longrightarrow> u \\<notin> T S) \\<and>\n                   (t \\<in> D S \\<longrightarrow>\n                    u \\<notin> T (Y m)) \\<longrightarrow>\n                   n \\<le> m)}\n\ngoal (1 subgoal):\n 1. \\<exists>num. num \\<in> proUnion1 \\<and> P num", "using ann1pre0 ann1preB finiUnion"], ["proof (prove)\nusing this:\n  minmin\n  \\<in> {n. \\<exists>t u r.\n               (t, u, r) \\<in> tryunion \\<and>\n               ((t \\<in> D (Y n) \\<longrightarrow> u \\<notin> T S) \\<and>\n                (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y n))) \\<and>\n               (\\<forall>m.\n                   (t \\<in> D (Y m) \\<longrightarrow> u \\<notin> T S) \\<and>\n                   (t \\<in> D S \\<longrightarrow>\n                    u \\<notin> T (Y m)) \\<longrightarrow>\n                   n \\<le> m)}\n  minmin \\<in> minIndexRB\n  minIndexRB = {n. P n}\n  proUnion1 =\n  {n. \\<exists>(t, u, r)\\<in>tryunion.\n         ((t \\<in> D (Y n) \\<longrightarrow> u \\<notin> T S) \\<and>\n          (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y n))) \\<and>\n         (\\<forall>m.\n             (t \\<in> D (Y m) \\<longrightarrow> u \\<notin> T S) \\<and>\n             (t \\<in> D S \\<longrightarrow>\n              u \\<notin> T (Y m)) \\<longrightarrow>\n             n \\<le> m)}\n\ngoal (1 subgoal):\n 1. \\<exists>num. num \\<in> proUnion1 \\<and> P num", "by blast"], ["proof (state)\nthis:\n  \\<exists>num. num \\<in> proUnion1 \\<and> P num\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>num. num \\<in> proUnion1 \\<and> P num\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (?t, ?u, ?r) \\<in> proUnion2 \\<Longrightarrow>\n  \\<exists>num.\n     num \\<in> proUnion1 \\<and>\n     (?t \\<in> D (Y num) \\<longrightarrow> ?u \\<notin> T S) \\<and>\n     (?t \\<in> D S \\<longrightarrow> ?u \\<notin> T (Y num))\n\ngoal (1 subgoal):\n 1. chain Y \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>t u r.\n          r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n          (\\<forall>v.\n              a = r @ v \\<longrightarrow>\n              front_tickFree v \\<longrightarrow>\n              \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n              (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n              (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)))", "from ann1"], ["proof (chain)\npicking this:\n  (?t, ?u, ?r) \\<in> proUnion2 \\<Longrightarrow>\n  \\<exists>num.\n     num \\<in> proUnion1 \\<and>\n     (?t \\<in> D (Y num) \\<longrightarrow> ?u \\<notin> T S) \\<and>\n     (?t \\<in> D S \\<longrightarrow> ?u \\<notin> T (Y num))", "have ann12: \"\\<forall>t u r.\\<exists>num.(t, u, r)\\<in> proUnion2\\<longrightarrow> num\\<in>proUnion1\\<and>\n   ((t \\<in> D (Y num) \\<longrightarrow> u \\<notin> T S) \\<and> (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y num)))\""], ["proof (prove)\nusing this:\n  (?t, ?u, ?r) \\<in> proUnion2 \\<Longrightarrow>\n  \\<exists>num.\n     num \\<in> proUnion1 \\<and>\n     (?t \\<in> D (Y num) \\<longrightarrow> ?u \\<notin> T S) \\<and>\n     (?t \\<in> D S \\<longrightarrow> ?u \\<notin> T (Y num))\n\ngoal (1 subgoal):\n 1. \\<forall>t u r.\n       \\<exists>num.\n          (t, u, r) \\<in> proUnion2 \\<longrightarrow>\n          num \\<in> proUnion1 \\<and>\n          (t \\<in> D (Y num) \\<longrightarrow> u \\<notin> T S) \\<and>\n          (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y num))", "by auto"], ["proof (state)\nthis:\n  \\<forall>t u r.\n     \\<exists>num.\n        (t, u, r) \\<in> proUnion2 \\<longrightarrow>\n        num \\<in> proUnion1 \\<and>\n        (t \\<in> D (Y num) \\<longrightarrow> u \\<notin> T S) \\<and>\n        (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y num))\n\ngoal (1 subgoal):\n 1. chain Y \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>t u r.\n          r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n          (\\<forall>v.\n              a = r @ v \\<longrightarrow>\n              front_tickFree v \\<longrightarrow>\n              \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n              (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n              (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)))", "from ann0 Ctryy"], ["proof (chain)\npicking this:\n  proUnion2 =\n  {(t, u, r).\n   \\<exists>n.\n      (t, u, r) \\<in> tryunion \\<and>\n      (t \\<in> D (Y n) \\<longrightarrow> u \\<notin> T S) \\<and>\n      (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y n))}\n  tryunion =\n  {(t, u, r).\n   r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n   (\\<exists>v.\n       a = r @ v \\<and> front_tickFree v \\<and> (tickFree r \\<or> v = []))}", "have ann2: \"\\<forall>t u r. (t, u, r) \\<in> proUnion2\\<longrightarrow>(r setinterleaves \n   ((t, u), insert tick (ev ` A)) \\<and>(\\<exists>v. a = r @ v \\<and> front_tickFree v \\<and> (tickFree r \\<or> v = [])) \\<and> \n   (\\<exists>nu1. (t \\<in> D (Y nu1) \\<longrightarrow> u \\<notin> T S) \\<and> (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y nu1))))\""], ["proof (prove)\nusing this:\n  proUnion2 =\n  {(t, u, r).\n   \\<exists>n.\n      (t, u, r) \\<in> tryunion \\<and>\n      (t \\<in> D (Y n) \\<longrightarrow> u \\<notin> T S) \\<and>\n      (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y n))}\n  tryunion =\n  {(t, u, r).\n   r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n   (\\<exists>v.\n       a = r @ v \\<and> front_tickFree v \\<and> (tickFree r \\<or> v = []))}\n\ngoal (1 subgoal):\n 1. \\<forall>t u r.\n       (t, u, r) \\<in> proUnion2 \\<longrightarrow>\n       r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n       (\\<exists>v.\n           a = r @ v \\<and>\n           front_tickFree v \\<and> (tickFree r \\<or> v = [])) \\<and>\n       (\\<exists>nu1.\n           (t \\<in> D (Y nu1) \\<longrightarrow> u \\<notin> T S) \\<and>\n           (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y nu1)))", "by simp"], ["proof (state)\nthis:\n  \\<forall>t u r.\n     (t, u, r) \\<in> proUnion2 \\<longrightarrow>\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n     (\\<exists>v.\n         a = r @ v \\<and>\n         front_tickFree v \\<and> (tickFree r \\<or> v = [])) \\<and>\n     (\\<exists>nu1.\n         (t \\<in> D (Y nu1) \\<longrightarrow> u \\<notin> T S) \\<and>\n         (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y nu1)))\n\ngoal (1 subgoal):\n 1. chain Y \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>t u r.\n          r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n          (\\<forall>v.\n              a = r @ v \\<longrightarrow>\n              front_tickFree v \\<longrightarrow>\n              \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n              (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n              (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)))", "have ann15: \" \\<forall>t u r. (r setinterleaves ((t, u), insert tick (ev ` A)) \\<and> (\\<exists>v. a = r @ v \\<and> \n   front_tickFree v \\<and> (tickFree r \\<or> v = [])) \\<and> (\\<exists>nu1. (t \\<in> D (Y nu1) \\<longrightarrow> u \\<notin> T S) \\<and> (t \\<in> D S \\<longrightarrow> \n   u \\<notin> T (Y nu1))))\\<longrightarrow>(t, u, r) \\<in> proUnion2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>t u r.\n       r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n       (\\<exists>v.\n           a = r @ v \\<and>\n           front_tickFree v \\<and> (tickFree r \\<or> v = [])) \\<and>\n       (\\<exists>nu1.\n           (t \\<in> D (Y nu1) \\<longrightarrow> u \\<notin> T S) \\<and>\n           (t \\<in> D S \\<longrightarrow>\n            u \\<notin> T (Y nu1))) \\<longrightarrow>\n       (t, u, r) \\<in> proUnion2", "using Ctryy ann0"], ["proof (prove)\nusing this:\n  tryunion =\n  {(t, u, r).\n   r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n   (\\<exists>v.\n       a = r @ v \\<and> front_tickFree v \\<and> (tickFree r \\<or> v = []))}\n  proUnion2 =\n  {(t, u, r).\n   \\<exists>n.\n      (t, u, r) \\<in> tryunion \\<and>\n      (t \\<in> D (Y n) \\<longrightarrow> u \\<notin> T S) \\<and>\n      (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y n))}\n\ngoal (1 subgoal):\n 1. \\<forall>t u r.\n       r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n       (\\<exists>v.\n           a = r @ v \\<and>\n           front_tickFree v \\<and> (tickFree r \\<or> v = [])) \\<and>\n       (\\<exists>nu1.\n           (t \\<in> D (Y nu1) \\<longrightarrow> u \\<notin> T S) \\<and>\n           (t \\<in> D S \\<longrightarrow>\n            u \\<notin> T (Y nu1))) \\<longrightarrow>\n       (t, u, r) \\<in> proUnion2", "by blast"], ["proof (state)\nthis:\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n     (\\<exists>v.\n         a = r @ v \\<and>\n         front_tickFree v \\<and> (tickFree r \\<or> v = [])) \\<and>\n     (\\<exists>nu1.\n         (t \\<in> D (Y nu1) \\<longrightarrow> u \\<notin> T S) \\<and>\n         (t \\<in> D S \\<longrightarrow>\n          u \\<notin> T (Y nu1))) \\<longrightarrow>\n     (t, u, r) \\<in> proUnion2\n\ngoal (1 subgoal):\n 1. chain Y \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>t u r.\n          r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n          (\\<forall>v.\n              a = r @ v \\<longrightarrow>\n              front_tickFree v \\<longrightarrow>\n              \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n              (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n              (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)))", "from  ann12 ann15"], ["proof (chain)\npicking this:\n  \\<forall>t u r.\n     \\<exists>num.\n        (t, u, r) \\<in> proUnion2 \\<longrightarrow>\n        num \\<in> proUnion1 \\<and>\n        (t \\<in> D (Y num) \\<longrightarrow> u \\<notin> T S) \\<and>\n        (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y num))\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n     (\\<exists>v.\n         a = r @ v \\<and>\n         front_tickFree v \\<and> (tickFree r \\<or> v = [])) \\<and>\n     (\\<exists>nu1.\n         (t \\<in> D (Y nu1) \\<longrightarrow> u \\<notin> T S) \\<and>\n         (t \\<in> D S \\<longrightarrow>\n          u \\<notin> T (Y nu1))) \\<longrightarrow>\n     (t, u, r) \\<in> proUnion2", "have ann01: \"\\<forall>t u r. ((r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n   (\\<exists>v. a = r @ v \\<and> front_tickFree v \\<and> (tickFree r \\<or> v = [])) \\<and> (\\<exists>nu1. (t \\<in> D (Y nu1)\\<longrightarrow>u \\<notin> T S)\\<and> \n   (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y nu1))))\\<longrightarrow>(\\<exists>num\\<in>proUnion1. ((t \\<in> D (Y num) \\<longrightarrow> u \\<notin> T S) \\<and> (t \\<in> D S \\<longrightarrow> \n   u \\<notin> T (Y num)))))\""], ["proof (prove)\nusing this:\n  \\<forall>t u r.\n     \\<exists>num.\n        (t, u, r) \\<in> proUnion2 \\<longrightarrow>\n        num \\<in> proUnion1 \\<and>\n        (t \\<in> D (Y num) \\<longrightarrow> u \\<notin> T S) \\<and>\n        (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y num))\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n     (\\<exists>v.\n         a = r @ v \\<and>\n         front_tickFree v \\<and> (tickFree r \\<or> v = [])) \\<and>\n     (\\<exists>nu1.\n         (t \\<in> D (Y nu1) \\<longrightarrow> u \\<notin> T S) \\<and>\n         (t \\<in> D S \\<longrightarrow>\n          u \\<notin> T (Y nu1))) \\<longrightarrow>\n     (t, u, r) \\<in> proUnion2\n\ngoal (1 subgoal):\n 1. \\<forall>t u r.\n       r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n       (\\<exists>v.\n           a = r @ v \\<and>\n           front_tickFree v \\<and> (tickFree r \\<or> v = [])) \\<and>\n       (\\<exists>nu1.\n           (t \\<in> D (Y nu1) \\<longrightarrow> u \\<notin> T S) \\<and>\n           (t \\<in> D S \\<longrightarrow>\n            u \\<notin> T (Y nu1))) \\<longrightarrow>\n       (\\<exists>num\\<in>proUnion1.\n           (t \\<in> D (Y num) \\<longrightarrow> u \\<notin> T S) \\<and>\n           (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y num)))", "by blast"], ["proof (state)\nthis:\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n     (\\<exists>v.\n         a = r @ v \\<and>\n         front_tickFree v \\<and> (tickFree r \\<or> v = [])) \\<and>\n     (\\<exists>nu1.\n         (t \\<in> D (Y nu1) \\<longrightarrow> u \\<notin> T S) \\<and>\n         (t \\<in> D S \\<longrightarrow>\n          u \\<notin> T (Y nu1))) \\<longrightarrow>\n     (\\<exists>num\\<in>proUnion1.\n         (t \\<in> D (Y num) \\<longrightarrow> u \\<notin> T S) \\<and>\n         (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y num)))\n\ngoal (1 subgoal):\n 1. chain Y \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>t u r.\n          r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n          (\\<forall>v.\n              a = r @ v \\<longrightarrow>\n              front_tickFree v \\<longrightarrow>\n              \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n              (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n              (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)))", "from ann01"], ["proof (chain)\npicking this:\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n     (\\<exists>v.\n         a = r @ v \\<and>\n         front_tickFree v \\<and> (tickFree r \\<or> v = [])) \\<and>\n     (\\<exists>nu1.\n         (t \\<in> D (Y nu1) \\<longrightarrow> u \\<notin> T S) \\<and>\n         (t \\<in> D S \\<longrightarrow>\n          u \\<notin> T (Y nu1))) \\<longrightarrow>\n     (\\<exists>num\\<in>proUnion1.\n         (t \\<in> D (Y num) \\<longrightarrow> u \\<notin> T S) \\<and>\n         (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y num)))", "have annhelp: \" \\<forall>t u r. r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n   (\\<forall>v. a = r @ v \\<longrightarrow> front_tickFree v \\<longrightarrow>(tickFree r \\<or> v = [])\\<longrightarrow>( \\<exists>num\\<in>proUnion1.((t \\<in> D (Y num) \n   \\<longrightarrow> u \\<notin> T S) \\<and> (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y num)))))\""], ["proof (prove)\nusing this:\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n     (\\<exists>v.\n         a = r @ v \\<and>\n         front_tickFree v \\<and> (tickFree r \\<or> v = [])) \\<and>\n     (\\<exists>nu1.\n         (t \\<in> D (Y nu1) \\<longrightarrow> u \\<notin> T S) \\<and>\n         (t \\<in> D S \\<longrightarrow>\n          u \\<notin> T (Y nu1))) \\<longrightarrow>\n     (\\<exists>num\\<in>proUnion1.\n         (t \\<in> D (Y num) \\<longrightarrow> u \\<notin> T S) \\<and>\n         (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y num)))\n\ngoal (1 subgoal):\n 1. \\<forall>t u r.\n       r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n       (\\<forall>v.\n           a = r @ v \\<longrightarrow>\n           front_tickFree v \\<longrightarrow>\n           tickFree r \\<or> v = [] \\<longrightarrow>\n           (\\<exists>num\\<in>proUnion1.\n               (t \\<in> D (Y num) \\<longrightarrow> u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y num))))", "by (metis oneIndex)"], ["proof (state)\nthis:\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         a = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         tickFree r \\<or> v = [] \\<longrightarrow>\n         (\\<exists>num\\<in>proUnion1.\n             (t \\<in> D (Y num) \\<longrightarrow> u \\<notin> T S) \\<and>\n             (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y num))))\n\ngoal (1 subgoal):\n 1. chain Y \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>t u r.\n          r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n          (\\<forall>v.\n              a = r @ v \\<longrightarrow>\n              front_tickFree v \\<longrightarrow>\n              \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n              (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n              (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)))", "from Abb1 Abb2"], ["proof (chain)\npicking this:\n  \\<forall>n1 n2. n1 \\<le> n2 \\<longrightarrow> Y n1 \\<sqsubseteq> Y n2\n  \\<forall>n1 n2 t.\n     n2 < n1 \\<and> t \\<notin> D (Y n2) \\<longrightarrow>\n     t \\<notin> D (Y n1)", "have annHelp2: \"\\<forall>nn t u. (nn\\<in>proUnion1\\<and>((t \\<in> D (Y nn)\\<longrightarrow>u \\<notin> T S) \\<and> (t \\<in> D S \\<longrightarrow> \n   u \\<notin> T (Y nn)))) \\<longrightarrow>((t \\<in> D (Y proMax) \\<longrightarrow> u \\<notin> T S) \\<and> (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y proMax)))\""], ["proof (prove)\nusing this:\n  \\<forall>n1 n2. n1 \\<le> n2 \\<longrightarrow> Y n1 \\<sqsubseteq> Y n2\n  \\<forall>n1 n2 t.\n     n2 < n1 \\<and> t \\<notin> D (Y n2) \\<longrightarrow>\n     t \\<notin> D (Y n1)\n\ngoal (1 subgoal):\n 1. \\<forall>nn t u.\n       nn \\<in> proUnion1 \\<and>\n       (t \\<in> D (Y nn) \\<longrightarrow> u \\<notin> T S) \\<and>\n       (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y nn)) \\<longrightarrow>\n       (t \\<in> D (Y proMax) \\<longrightarrow> u \\<notin> T S) \\<and>\n       (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y proMax))", "by (metis Abb3 Max_ge ann finiSet le_neq_trans)"], ["proof (state)\nthis:\n  \\<forall>nn t u.\n     nn \\<in> proUnion1 \\<and>\n     (t \\<in> D (Y nn) \\<longrightarrow> u \\<notin> T S) \\<and>\n     (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y nn)) \\<longrightarrow>\n     (t \\<in> D (Y proMax) \\<longrightarrow> u \\<notin> T S) \\<and>\n     (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y proMax))\n\ngoal (1 subgoal):\n 1. chain Y \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>t u r.\n          r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n          (\\<forall>v.\n              a = r @ v \\<longrightarrow>\n              front_tickFree v \\<longrightarrow>\n              \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n              (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n              (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)))", "from  annHelp2 annhelp"], ["proof (chain)\npicking this:\n  \\<forall>nn t u.\n     nn \\<in> proUnion1 \\<and>\n     (t \\<in> D (Y nn) \\<longrightarrow> u \\<notin> T S) \\<and>\n     (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y nn)) \\<longrightarrow>\n     (t \\<in> D (Y proMax) \\<longrightarrow> u \\<notin> T S) \\<and>\n     (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y proMax))\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         a = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         tickFree r \\<or> v = [] \\<longrightarrow>\n         (\\<exists>num\\<in>proUnion1.\n             (t \\<in> D (Y num) \\<longrightarrow> u \\<notin> T S) \\<and>\n             (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y num))))", "have annHelp1: \" \\<forall>t u r. r setinterleaves ((t, u), insert tick (ev ` A)) \n   \\<longrightarrow>(\\<forall>v. a = r @ v \\<longrightarrow> front_tickFree v\\<longrightarrow>(tickFree r \\<or> v = [])\\<longrightarrow>(t \\<in> D (Y proMax)\\<longrightarrow>u \\<notin> T S) \\<and> \n   (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y proMax)))\""], ["proof (prove)\nusing this:\n  \\<forall>nn t u.\n     nn \\<in> proUnion1 \\<and>\n     (t \\<in> D (Y nn) \\<longrightarrow> u \\<notin> T S) \\<and>\n     (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y nn)) \\<longrightarrow>\n     (t \\<in> D (Y proMax) \\<longrightarrow> u \\<notin> T S) \\<and>\n     (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y proMax))\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         a = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         tickFree r \\<or> v = [] \\<longrightarrow>\n         (\\<exists>num\\<in>proUnion1.\n             (t \\<in> D (Y num) \\<longrightarrow> u \\<notin> T S) \\<and>\n             (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y num))))\n\ngoal (1 subgoal):\n 1. \\<forall>t u r.\n       r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n       (\\<forall>v.\n           a = r @ v \\<longrightarrow>\n           front_tickFree v \\<longrightarrow>\n           tickFree r \\<or> v = [] \\<longrightarrow>\n           (t \\<in> D (Y proMax) \\<longrightarrow> u \\<notin> T S) \\<and>\n           (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y proMax)))", "by blast"], ["proof (state)\nthis:\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         a = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         tickFree r \\<or> v = [] \\<longrightarrow>\n         (t \\<in> D (Y proMax) \\<longrightarrow> u \\<notin> T S) \\<and>\n         (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y proMax)))\n\ngoal (1 subgoal):\n 1. chain Y \\<Longrightarrow>\n    \\<exists>x.\n       \\<forall>t u r.\n          r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n          (\\<forall>v.\n              a = r @ v \\<longrightarrow>\n              front_tickFree v \\<longrightarrow>\n              \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n              (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n              (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)))", "with A B"], ["proof (chain)\npicking this:\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         a = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n         ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n         (t \\<in> D S \\<longrightarrow> (\\<exists>x. u \\<notin> T (Y x))))\n  chain Y\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         a = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         tickFree r \\<or> v = [] \\<longrightarrow>\n         (t \\<in> D (Y proMax) \\<longrightarrow> u \\<notin> T S) \\<and>\n         (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y proMax)))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         a = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n         ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n         (t \\<in> D S \\<longrightarrow> (\\<exists>x. u \\<notin> T (Y x))))\n  chain Y\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         a = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         tickFree r \\<or> v = [] \\<longrightarrow>\n         (t \\<in> D (Y proMax) \\<longrightarrow> u \\<notin> T S) \\<and>\n         (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y proMax)))\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>t u r.\n          r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n          (\\<forall>v.\n              a = r @ v \\<longrightarrow>\n              front_tickFree v \\<longrightarrow>\n              \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n              (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n              (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)))", "by blast"], ["proof (state)\nthis:\n  \\<exists>x.\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        (\\<forall>v.\n            a = r @ v \\<longrightarrow>\n            front_tickFree v \\<longrightarrow>\n            \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n            (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n            (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>x.\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        (\\<forall>v.\n            a = r @ v \\<longrightarrow>\n            front_tickFree v \\<longrightarrow>\n            \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n            (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n            (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma limproc_Sync_F: \"chain Y\\<Longrightarrow>F(lim_proc (range Y)\\<lbrakk> A \\<rbrakk>S)=F(lim_proc (range (\\<lambda>i. Y i \\<lbrakk> A \\<rbrakk> S)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chain Y \\<Longrightarrow>\n    F (lim_proc (range Y) \\<lbrakk>A\\<rbrakk> S) =\n    F (lim_proc (range (\\<lambda>i. Y i \\<lbrakk>A\\<rbrakk> S)))", "apply(auto simp add: Process_eq_spec D_sync F_sync F_LUB D_LUB T_LUB chain_Sync1)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>a x t u X Ya.\n       \\<lbrakk>chain Y;\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               a = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)));\n        \\<forall>x. (t, X) \\<in> F (Y x); (u, Ya) \\<in> F S;\n        a setinterleaves ((t, u), insert tick (ev ` A))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u Xa.\n                            (t, Xa) \\<in> F (Y x) \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                a setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                (X \\<union> Ya) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Ya =\n                                (Xa \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                Xa \\<inter> Y)\n 2. \\<And>b x t u r v.\n       \\<lbrakk>chain Y;\n        \\<forall>t u ra.\n           ra setinterleaves ((t, u), insert tick\n (ev ` A)) \\<longrightarrow>\n           (\\<forall>va.\n               r @ v = ra @ va \\<longrightarrow>\n               front_tickFree va \\<longrightarrow>\n               \\<not> tickFree ra \\<and> va \\<noteq> [] \\<or>\n               (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)));\n        front_tickFree v; r setinterleaves ((t, u), insert tick (ev ` A));\n        tickFree r; \\<forall>x. t \\<in> D (Y x); u \\<in> T S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F (Y x) \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                r @\n                                v setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                b =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)\n 3. \\<And>b x t u r v.\n       \\<lbrakk>chain Y;\n        \\<forall>t u ra.\n           ra setinterleaves ((t, u), insert tick\n (ev ` A)) \\<longrightarrow>\n           (\\<forall>va.\n               r @ v = ra @ va \\<longrightarrow>\n               front_tickFree va \\<longrightarrow>\n               \\<not> tickFree ra \\<and> va \\<noteq> [] \\<or>\n               (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)));\n        front_tickFree v; r setinterleaves ((t, u), insert tick (ev ` A));\n        tickFree r; t \\<in> D S; \\<forall>x. u \\<in> T (Y x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F (Y x) \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                r @\n                                v setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                b =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)\n 4. \\<And>b x t u r.\n       \\<lbrakk>chain Y;\n        \\<forall>t u ra.\n           ra setinterleaves ((t, u), insert tick\n (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               r = ra @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree ra \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)));\n        r setinterleaves ((t, u), insert tick (ev ` A));\n        \\<forall>x. t \\<in> D (Y x); u \\<in> T S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F (Y x) \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                r setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                b =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)\n 5. \\<And>b x t u r.\n       \\<lbrakk>chain Y;\n        \\<forall>t u ra.\n           ra setinterleaves ((t, u), insert tick\n (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               r = ra @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree ra \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)));\n        r setinterleaves ((t, u), insert tick (ev ` A)); t \\<in> D S;\n        \\<forall>x. u \\<in> T (Y x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F (Y x) \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                r setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                b =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)\n 6. \\<And>a b.\n       \\<lbrakk>chain Y;\n        \\<forall>x.\n           (\\<exists>t u X.\n               (t, X) \\<in> F (Y x) \\<and>\n               (\\<exists>Y.\n                   (u, Y) \\<in> F S \\<and>\n                   a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n                   b =\n                   (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n                   X \\<inter> Y)) \\<or>\n           (\\<exists>t u r v.\n               front_tickFree v \\<and>\n               (tickFree r \\<or> v = []) \\<and>\n               a = r @ v \\<and>\n               r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n               (t \\<in> D (Y x) \\<and> u \\<in> T S \\<or>\n                t \\<in> D S \\<and> u \\<in> T (Y x)));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               a = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow>\n                (\\<exists>x. u \\<notin> T (Y x))))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                a setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                b =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)", "apply blast"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>b x t u r v.\n       \\<lbrakk>chain Y;\n        \\<forall>t u ra.\n           ra setinterleaves ((t, u), insert tick\n (ev ` A)) \\<longrightarrow>\n           (\\<forall>va.\n               r @ v = ra @ va \\<longrightarrow>\n               front_tickFree va \\<longrightarrow>\n               \\<not> tickFree ra \\<and> va \\<noteq> [] \\<or>\n               (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)));\n        front_tickFree v; r setinterleaves ((t, u), insert tick (ev ` A));\n        tickFree r; \\<forall>x. t \\<in> D (Y x); u \\<in> T S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F (Y x) \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                r @\n                                v setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                b =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)\n 2. \\<And>b x t u r v.\n       \\<lbrakk>chain Y;\n        \\<forall>t u ra.\n           ra setinterleaves ((t, u), insert tick\n (ev ` A)) \\<longrightarrow>\n           (\\<forall>va.\n               r @ v = ra @ va \\<longrightarrow>\n               front_tickFree va \\<longrightarrow>\n               \\<not> tickFree ra \\<and> va \\<noteq> [] \\<or>\n               (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)));\n        front_tickFree v; r setinterleaves ((t, u), insert tick (ev ` A));\n        tickFree r; t \\<in> D S; \\<forall>x. u \\<in> T (Y x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F (Y x) \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                r @\n                                v setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                b =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)\n 3. \\<And>b x t u r.\n       \\<lbrakk>chain Y;\n        \\<forall>t u ra.\n           ra setinterleaves ((t, u), insert tick\n (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               r = ra @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree ra \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)));\n        r setinterleaves ((t, u), insert tick (ev ` A));\n        \\<forall>x. t \\<in> D (Y x); u \\<in> T S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F (Y x) \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                r setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                b =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)\n 4. \\<And>b x t u r.\n       \\<lbrakk>chain Y;\n        \\<forall>t u ra.\n           ra setinterleaves ((t, u), insert tick\n (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               r = ra @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree ra \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)));\n        r setinterleaves ((t, u), insert tick (ev ` A)); t \\<in> D S;\n        \\<forall>x. u \\<in> T (Y x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F (Y x) \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                r setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                b =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)\n 5. \\<And>a b.\n       \\<lbrakk>chain Y;\n        \\<forall>x.\n           (\\<exists>t u X.\n               (t, X) \\<in> F (Y x) \\<and>\n               (\\<exists>Y.\n                   (u, Y) \\<in> F S \\<and>\n                   a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n                   b =\n                   (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n                   X \\<inter> Y)) \\<or>\n           (\\<exists>t u r v.\n               front_tickFree v \\<and>\n               (tickFree r \\<or> v = []) \\<and>\n               a = r @ v \\<and>\n               r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n               (t \\<in> D (Y x) \\<and> u \\<in> T S \\<or>\n                t \\<in> D S \\<and> u \\<in> T (Y x)));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               a = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow>\n                (\\<exists>x. u \\<notin> T (Y x))))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                a setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                b =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)", "apply blast"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>b x t u r v.\n       \\<lbrakk>chain Y;\n        \\<forall>t u ra.\n           ra setinterleaves ((t, u), insert tick\n (ev ` A)) \\<longrightarrow>\n           (\\<forall>va.\n               r @ v = ra @ va \\<longrightarrow>\n               front_tickFree va \\<longrightarrow>\n               \\<not> tickFree ra \\<and> va \\<noteq> [] \\<or>\n               (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)));\n        front_tickFree v; r setinterleaves ((t, u), insert tick (ev ` A));\n        tickFree r; t \\<in> D S; \\<forall>x. u \\<in> T (Y x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F (Y x) \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                r @\n                                v setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                b =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)\n 2. \\<And>b x t u r.\n       \\<lbrakk>chain Y;\n        \\<forall>t u ra.\n           ra setinterleaves ((t, u), insert tick\n (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               r = ra @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree ra \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)));\n        r setinterleaves ((t, u), insert tick (ev ` A));\n        \\<forall>x. t \\<in> D (Y x); u \\<in> T S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F (Y x) \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                r setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                b =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)\n 3. \\<And>b x t u r.\n       \\<lbrakk>chain Y;\n        \\<forall>t u ra.\n           ra setinterleaves ((t, u), insert tick\n (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               r = ra @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree ra \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)));\n        r setinterleaves ((t, u), insert tick (ev ` A)); t \\<in> D S;\n        \\<forall>x. u \\<in> T (Y x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F (Y x) \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                r setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                b =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)\n 4. \\<And>a b.\n       \\<lbrakk>chain Y;\n        \\<forall>x.\n           (\\<exists>t u X.\n               (t, X) \\<in> F (Y x) \\<and>\n               (\\<exists>Y.\n                   (u, Y) \\<in> F S \\<and>\n                   a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n                   b =\n                   (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n                   X \\<inter> Y)) \\<or>\n           (\\<exists>t u r v.\n               front_tickFree v \\<and>\n               (tickFree r \\<or> v = []) \\<and>\n               a = r @ v \\<and>\n               r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n               (t \\<in> D (Y x) \\<and> u \\<in> T S \\<or>\n                t \\<in> D S \\<and> u \\<in> T (Y x)));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               a = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow>\n                (\\<exists>x. u \\<notin> T (Y x))))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                a setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                b =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)", "apply blast"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>b x t u r.\n       \\<lbrakk>chain Y;\n        \\<forall>t u ra.\n           ra setinterleaves ((t, u), insert tick\n (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               r = ra @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree ra \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)));\n        r setinterleaves ((t, u), insert tick (ev ` A));\n        \\<forall>x. t \\<in> D (Y x); u \\<in> T S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F (Y x) \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                r setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                b =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)\n 2. \\<And>b x t u r.\n       \\<lbrakk>chain Y;\n        \\<forall>t u ra.\n           ra setinterleaves ((t, u), insert tick\n (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               r = ra @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree ra \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)));\n        r setinterleaves ((t, u), insert tick (ev ` A)); t \\<in> D S;\n        \\<forall>x. u \\<in> T (Y x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F (Y x) \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                r setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                b =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)\n 3. \\<And>a b.\n       \\<lbrakk>chain Y;\n        \\<forall>x.\n           (\\<exists>t u X.\n               (t, X) \\<in> F (Y x) \\<and>\n               (\\<exists>Y.\n                   (u, Y) \\<in> F S \\<and>\n                   a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n                   b =\n                   (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n                   X \\<inter> Y)) \\<or>\n           (\\<exists>t u r v.\n               front_tickFree v \\<and>\n               (tickFree r \\<or> v = []) \\<and>\n               a = r @ v \\<and>\n               r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n               (t \\<in> D (Y x) \\<and> u \\<in> T S \\<or>\n                t \\<in> D S \\<and> u \\<in> T (Y x)));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               a = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow>\n                (\\<exists>x. u \\<notin> T (Y x))))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                a setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                b =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)", "using front_tickFree_Nil"], ["proof (prove)\nusing this:\n  front_tickFree []\n\ngoal (3 subgoals):\n 1. \\<And>b x t u r.\n       \\<lbrakk>chain Y;\n        \\<forall>t u ra.\n           ra setinterleaves ((t, u), insert tick\n (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               r = ra @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree ra \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)));\n        r setinterleaves ((t, u), insert tick (ev ` A));\n        \\<forall>x. t \\<in> D (Y x); u \\<in> T S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F (Y x) \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                r setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                b =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)\n 2. \\<And>b x t u r.\n       \\<lbrakk>chain Y;\n        \\<forall>t u ra.\n           ra setinterleaves ((t, u), insert tick\n (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               r = ra @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree ra \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)));\n        r setinterleaves ((t, u), insert tick (ev ` A)); t \\<in> D S;\n        \\<forall>x. u \\<in> T (Y x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F (Y x) \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                r setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                b =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)\n 3. \\<And>a b.\n       \\<lbrakk>chain Y;\n        \\<forall>x.\n           (\\<exists>t u X.\n               (t, X) \\<in> F (Y x) \\<and>\n               (\\<exists>Y.\n                   (u, Y) \\<in> F S \\<and>\n                   a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n                   b =\n                   (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n                   X \\<inter> Y)) \\<or>\n           (\\<exists>t u r v.\n               front_tickFree v \\<and>\n               (tickFree r \\<or> v = []) \\<and>\n               a = r @ v \\<and>\n               r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n               (t \\<in> D (Y x) \\<and> u \\<in> T S \\<or>\n                t \\<in> D S \\<and> u \\<in> T (Y x)));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               a = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow>\n                (\\<exists>x. u \\<notin> T (Y x))))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                a setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                b =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>b x t u r.\n       \\<lbrakk>chain Y;\n        \\<forall>t u ra.\n           ra setinterleaves ((t, u), insert tick\n (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               r = ra @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree ra \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)));\n        r setinterleaves ((t, u), insert tick (ev ` A)); t \\<in> D S;\n        \\<forall>x. u \\<in> T (Y x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F (Y x) \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                r setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                b =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)\n 2. \\<And>a b.\n       \\<lbrakk>chain Y;\n        \\<forall>x.\n           (\\<exists>t u X.\n               (t, X) \\<in> F (Y x) \\<and>\n               (\\<exists>Y.\n                   (u, Y) \\<in> F S \\<and>\n                   a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n                   b =\n                   (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n                   X \\<inter> Y)) \\<or>\n           (\\<exists>t u r v.\n               front_tickFree v \\<and>\n               (tickFree r \\<or> v = []) \\<and>\n               a = r @ v \\<and>\n               r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n               (t \\<in> D (Y x) \\<and> u \\<in> T S \\<or>\n                t \\<in> D S \\<and> u \\<in> T (Y x)));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               a = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow>\n                (\\<exists>x. u \\<notin> T (Y x))))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                a setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                b =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)", "using front_tickFree_Nil"], ["proof (prove)\nusing this:\n  front_tickFree []\n\ngoal (2 subgoals):\n 1. \\<And>b x t u r.\n       \\<lbrakk>chain Y;\n        \\<forall>t u ra.\n           ra setinterleaves ((t, u), insert tick\n (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               r = ra @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree ra \\<and> v \\<noteq> [] \\<or>\n               (t \\<in> D (Y x) \\<longrightarrow> u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow> u \\<notin> T (Y x)));\n        r setinterleaves ((t, u), insert tick (ev ` A)); t \\<in> D S;\n        \\<forall>x. u \\<in> T (Y x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (t, X) \\<in> F (Y x) \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                r setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                b =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)\n 2. \\<And>a b.\n       \\<lbrakk>chain Y;\n        \\<forall>x.\n           (\\<exists>t u X.\n               (t, X) \\<in> F (Y x) \\<and>\n               (\\<exists>Y.\n                   (u, Y) \\<in> F S \\<and>\n                   a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n                   b =\n                   (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n                   X \\<inter> Y)) \\<or>\n           (\\<exists>t u r v.\n               front_tickFree v \\<and>\n               (tickFree r \\<or> v = []) \\<and>\n               a = r @ v \\<and>\n               r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n               (t \\<in> D (Y x) \\<and> u \\<in> T S \\<or>\n                t \\<in> D S \\<and> u \\<in> T (Y x)));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               a = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow>\n                (\\<exists>x. u \\<notin> T (Y x))))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                a setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                b =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>chain Y;\n        \\<forall>x.\n           (\\<exists>t u X.\n               (t, X) \\<in> F (Y x) \\<and>\n               (\\<exists>Y.\n                   (u, Y) \\<in> F S \\<and>\n                   a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n                   b =\n                   (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n                   X \\<inter> Y)) \\<or>\n           (\\<exists>t u r v.\n               front_tickFree v \\<and>\n               (tickFree r \\<or> v = []) \\<and>\n               a = r @ v \\<and>\n               r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n               (t \\<in> D (Y x) \\<and> u \\<in> T S \\<or>\n                t \\<in> D S \\<and> u \\<in> T (Y x)));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               a = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow>\n                (\\<exists>x. u \\<notin> T (Y x))))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                a setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                b =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>chain Y;\n        \\<forall>x.\n           (\\<exists>t u X.\n               (t, X) \\<in> F (Y x) \\<and>\n               (\\<exists>Y.\n                   (u, Y) \\<in> F S \\<and>\n                   a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n                   b =\n                   (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n                   X \\<inter> Y)) \\<or>\n           (\\<exists>t u r v.\n               front_tickFree v \\<and>\n               (tickFree r \\<or> v = []) \\<and>\n               a = r @ v \\<and>\n               r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n               (t \\<in> D (Y x) \\<and> u \\<in> T S \\<or>\n                t \\<in> D S \\<and> u \\<in> T (Y x)));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               a = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow>\n                (\\<exists>x. u \\<notin> T (Y x))))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                a setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                b =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)", "fix a b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>chain Y;\n        \\<forall>x.\n           (\\<exists>t u X.\n               (t, X) \\<in> F (Y x) \\<and>\n               (\\<exists>Y.\n                   (u, Y) \\<in> F S \\<and>\n                   a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n                   b =\n                   (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n                   X \\<inter> Y)) \\<or>\n           (\\<exists>t u r v.\n               front_tickFree v \\<and>\n               (tickFree r \\<or> v = []) \\<and>\n               a = r @ v \\<and>\n               r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n               (t \\<in> D (Y x) \\<and> u \\<in> T S \\<or>\n                t \\<in> D S \\<and> u \\<in> T (Y x)));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               a = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow>\n                (\\<exists>x. u \\<notin> T (Y x))))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                a setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                b =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)", "assume A1: \" \\<forall>x. (\\<exists>t u X. (t, X) \\<in> F (Y x) \\<and> (\\<exists>Y. (u, Y) \\<in> F S \\<and> a setinterleaves \n    ((t, u), insert tick (ev ` A)) \\<and> b = (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union> X \\<inter> Y))\\<or>\n    (\\<exists>t u r v. front_tickFree v \\<and> (tickFree r \\<or> v = []) \\<and> a = r @ v \\<and> r setinterleaves \n    ((t, u), insert tick (ev ` A)) \\<and> (t \\<in> D (Y x) \\<and> u \\<in> T S \\<or> t \\<in> D S \\<and> u \\<in> T (Y x)))\"\n    and B: \" \\<forall>t u r. r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow> (\\<forall>v. a = r @ v \\<longrightarrow> \n    front_tickFree v \\<longrightarrow>\\<not> tickFree r \\<and> v \\<noteq> [] \\<or> ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and> (t \\<in> D S \\<longrightarrow> \n    (\\<exists>x. u \\<notin> T (Y x))))\"\n    and C: \"chain Y\""], ["proof (state)\nthis:\n  \\<forall>x.\n     (\\<exists>t u X.\n         (t, X) \\<in> F (Y x) \\<and>\n         (\\<exists>Y.\n             (u, Y) \\<in> F S \\<and>\n             a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n             b =\n             (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n             X \\<inter> Y)) \\<or>\n     (\\<exists>t u r v.\n         front_tickFree v \\<and>\n         (tickFree r \\<or> v = []) \\<and>\n         a = r @ v \\<and>\n         r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n         (t \\<in> D (Y x) \\<and> u \\<in> T S \\<or>\n          t \\<in> D S \\<and> u \\<in> T (Y x)))\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         a = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n         ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n         (t \\<in> D S \\<longrightarrow> (\\<exists>x. u \\<notin> T (Y x))))\n  chain Y\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>chain Y;\n        \\<forall>x.\n           (\\<exists>t u X.\n               (t, X) \\<in> F (Y x) \\<and>\n               (\\<exists>Y.\n                   (u, Y) \\<in> F S \\<and>\n                   a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n                   b =\n                   (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n                   X \\<inter> Y)) \\<or>\n           (\\<exists>t u r v.\n               front_tickFree v \\<and>\n               (tickFree r \\<or> v = []) \\<and>\n               a = r @ v \\<and>\n               r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n               (t \\<in> D (Y x) \\<and> u \\<in> T S \\<or>\n                t \\<in> D S \\<and> u \\<in> T (Y x)));\n        \\<forall>t u r.\n           r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n           (\\<forall>v.\n               a = r @ v \\<longrightarrow>\n               front_tickFree v \\<longrightarrow>\n               \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n               ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                u \\<notin> T S) \\<and>\n               (t \\<in> D S \\<longrightarrow>\n                (\\<exists>x. u \\<notin> T (Y x))))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t u X.\n                            (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n                            (\\<exists>Y.\n                                (u, Y) \\<in> F S \\<and>\n                                a setinterleaves ((t, u), insert tick\n                     (ev ` A)) \\<and>\n                                b =\n                                (X \\<union> Y) \\<inter>\n                                insert tick (ev ` A) \\<union>\n                                X \\<inter> Y)", "thus  \"\\<exists>t u X. (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>(\\<exists>Y. (u, Y) \\<in> F S \\<and> a setinterleaves \n    ((t, u), insert tick (ev ` A)) \\<and> b = (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union> X \\<inter> Y)\""], ["proof (prove)\nusing this:\n  \\<forall>x.\n     (\\<exists>t u X.\n         (t, X) \\<in> F (Y x) \\<and>\n         (\\<exists>Y.\n             (u, Y) \\<in> F S \\<and>\n             a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n             b =\n             (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n             X \\<inter> Y)) \\<or>\n     (\\<exists>t u r v.\n         front_tickFree v \\<and>\n         (tickFree r \\<or> v = []) \\<and>\n         a = r @ v \\<and>\n         r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n         (t \\<in> D (Y x) \\<and> u \\<in> T S \\<or>\n          t \\<in> D S \\<and> u \\<in> T (Y x)))\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         a = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n         ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n         (t \\<in> D S \\<longrightarrow> (\\<exists>x. u \\<notin> T (Y x))))\n  chain Y\n\ngoal (1 subgoal):\n 1. \\<exists>t u X.\n       (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n       (\\<exists>Y.\n           (u, Y) \\<in> F S \\<and>\n           a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           b =\n           (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n           X \\<inter> Y)", "proof (cases \"\\<exists>m. a \\<notin> D (Y m \\<lbrakk> A \\<rbrakk> S)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>x.\n                (\\<exists>t u X.\n                    (t, X) \\<in> F (Y x) \\<and>\n                    (\\<exists>Y.\n                        (u, Y) \\<in> F S \\<and>\n                        a setinterleaves ((t, u), insert tick\n             (ev ` A)) \\<and>\n                        b =\n                        (X \\<union> Y) \\<inter>\n                        insert tick (ev ` A) \\<union>\n                        X \\<inter> Y)) \\<or>\n                (\\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    a = r @ v \\<and>\n                    r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n                    (t \\<in> D (Y x) \\<and> u \\<in> T S \\<or>\n                     t \\<in> D S \\<and> u \\<in> T (Y x)));\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        (\\<forall>v.\n            a = r @ v \\<longrightarrow>\n            front_tickFree v \\<longrightarrow>\n            \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n            ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n            (t \\<in> D S \\<longrightarrow>\n             (\\<exists>x. u \\<notin> T (Y x))));\n     chain Y; \\<exists>m. a \\<notin> D (Y m \\<lbrakk>A\\<rbrakk> S)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u X.\n                         (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n                         (\\<exists>Y.\n                             (u, Y) \\<in> F S \\<and>\n                             a setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                             b =\n                             (X \\<union> Y) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             X \\<inter> Y)\n 2. \\<lbrakk>\\<forall>x.\n                (\\<exists>t u X.\n                    (t, X) \\<in> F (Y x) \\<and>\n                    (\\<exists>Y.\n                        (u, Y) \\<in> F S \\<and>\n                        a setinterleaves ((t, u), insert tick\n             (ev ` A)) \\<and>\n                        b =\n                        (X \\<union> Y) \\<inter>\n                        insert tick (ev ` A) \\<union>\n                        X \\<inter> Y)) \\<or>\n                (\\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    a = r @ v \\<and>\n                    r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n                    (t \\<in> D (Y x) \\<and> u \\<in> T S \\<or>\n                     t \\<in> D S \\<and> u \\<in> T (Y x)));\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        (\\<forall>v.\n            a = r @ v \\<longrightarrow>\n            front_tickFree v \\<longrightarrow>\n            \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n            ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n            (t \\<in> D S \\<longrightarrow>\n             (\\<exists>x. u \\<notin> T (Y x))));\n     chain Y; \\<nexists>m. a \\<notin> D (Y m \\<lbrakk>A\\<rbrakk> S)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u X.\n                         (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n                         (\\<exists>Y.\n                             (u, Y) \\<in> F S \\<and>\n                             a setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                             b =\n                             (X \\<union> Y) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             X \\<inter> Y)", "case True"], ["proof (state)\nthis:\n  \\<exists>m. a \\<notin> D (Y m \\<lbrakk>A\\<rbrakk> S)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>x.\n                (\\<exists>t u X.\n                    (t, X) \\<in> F (Y x) \\<and>\n                    (\\<exists>Y.\n                        (u, Y) \\<in> F S \\<and>\n                        a setinterleaves ((t, u), insert tick\n             (ev ` A)) \\<and>\n                        b =\n                        (X \\<union> Y) \\<inter>\n                        insert tick (ev ` A) \\<union>\n                        X \\<inter> Y)) \\<or>\n                (\\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    a = r @ v \\<and>\n                    r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n                    (t \\<in> D (Y x) \\<and> u \\<in> T S \\<or>\n                     t \\<in> D S \\<and> u \\<in> T (Y x)));\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        (\\<forall>v.\n            a = r @ v \\<longrightarrow>\n            front_tickFree v \\<longrightarrow>\n            \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n            ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n            (t \\<in> D S \\<longrightarrow>\n             (\\<exists>x. u \\<notin> T (Y x))));\n     chain Y; \\<exists>m. a \\<notin> D (Y m \\<lbrakk>A\\<rbrakk> S)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u X.\n                         (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n                         (\\<exists>Y.\n                             (u, Y) \\<in> F S \\<and>\n                             a setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                             b =\n                             (X \\<union> Y) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             X \\<inter> Y)\n 2. \\<lbrakk>\\<forall>x.\n                (\\<exists>t u X.\n                    (t, X) \\<in> F (Y x) \\<and>\n                    (\\<exists>Y.\n                        (u, Y) \\<in> F S \\<and>\n                        a setinterleaves ((t, u), insert tick\n             (ev ` A)) \\<and>\n                        b =\n                        (X \\<union> Y) \\<inter>\n                        insert tick (ev ` A) \\<union>\n                        X \\<inter> Y)) \\<or>\n                (\\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    a = r @ v \\<and>\n                    r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n                    (t \\<in> D (Y x) \\<and> u \\<in> T S \\<or>\n                     t \\<in> D S \\<and> u \\<in> T (Y x)));\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        (\\<forall>v.\n            a = r @ v \\<longrightarrow>\n            front_tickFree v \\<longrightarrow>\n            \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n            ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n            (t \\<in> D S \\<longrightarrow>\n             (\\<exists>x. u \\<notin> T (Y x))));\n     chain Y; \\<nexists>m. a \\<notin> D (Y m \\<lbrakk>A\\<rbrakk> S)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u X.\n                         (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n                         (\\<exists>Y.\n                             (u, Y) \\<in> F S \\<and>\n                             a setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                             b =\n                             (X \\<union> Y) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             X \\<inter> Y)", "then"], ["proof (chain)\npicking this:\n  \\<exists>m. a \\<notin> D (Y m \\<lbrakk>A\\<rbrakk> S)", "obtain m where \"a \\<notin> D(Y m \\<lbrakk> A \\<rbrakk> S)\""], ["proof (prove)\nusing this:\n  \\<exists>m. a \\<notin> D (Y m \\<lbrakk>A\\<rbrakk> S)\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        a \\<notin> D (Y m \\<lbrakk>A\\<rbrakk> S) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  a \\<notin> D (Y m \\<lbrakk>A\\<rbrakk> S)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>x.\n                (\\<exists>t u X.\n                    (t, X) \\<in> F (Y x) \\<and>\n                    (\\<exists>Y.\n                        (u, Y) \\<in> F S \\<and>\n                        a setinterleaves ((t, u), insert tick\n             (ev ` A)) \\<and>\n                        b =\n                        (X \\<union> Y) \\<inter>\n                        insert tick (ev ` A) \\<union>\n                        X \\<inter> Y)) \\<or>\n                (\\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    a = r @ v \\<and>\n                    r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n                    (t \\<in> D (Y x) \\<and> u \\<in> T S \\<or>\n                     t \\<in> D S \\<and> u \\<in> T (Y x)));\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        (\\<forall>v.\n            a = r @ v \\<longrightarrow>\n            front_tickFree v \\<longrightarrow>\n            \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n            ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n            (t \\<in> D S \\<longrightarrow>\n             (\\<exists>x. u \\<notin> T (Y x))));\n     chain Y; \\<exists>m. a \\<notin> D (Y m \\<lbrakk>A\\<rbrakk> S)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u X.\n                         (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n                         (\\<exists>Y.\n                             (u, Y) \\<in> F S \\<and>\n                             a setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                             b =\n                             (X \\<union> Y) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             X \\<inter> Y)\n 2. \\<lbrakk>\\<forall>x.\n                (\\<exists>t u X.\n                    (t, X) \\<in> F (Y x) \\<and>\n                    (\\<exists>Y.\n                        (u, Y) \\<in> F S \\<and>\n                        a setinterleaves ((t, u), insert tick\n             (ev ` A)) \\<and>\n                        b =\n                        (X \\<union> Y) \\<inter>\n                        insert tick (ev ` A) \\<union>\n                        X \\<inter> Y)) \\<or>\n                (\\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    a = r @ v \\<and>\n                    r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n                    (t \\<in> D (Y x) \\<and> u \\<in> T S \\<or>\n                     t \\<in> D S \\<and> u \\<in> T (Y x)));\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        (\\<forall>v.\n            a = r @ v \\<longrightarrow>\n            front_tickFree v \\<longrightarrow>\n            \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n            ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n            (t \\<in> D S \\<longrightarrow>\n             (\\<exists>x. u \\<notin> T (Y x))));\n     chain Y; \\<nexists>m. a \\<notin> D (Y m \\<lbrakk>A\\<rbrakk> S)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u X.\n                         (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n                         (\\<exists>Y.\n                             (u, Y) \\<in> F S \\<and>\n                             a setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                             b =\n                             (X \\<union> Y) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             X \\<inter> Y)", "with A1"], ["proof (chain)\npicking this:\n  \\<forall>x.\n     (\\<exists>t u X.\n         (t, X) \\<in> F (Y x) \\<and>\n         (\\<exists>Y.\n             (u, Y) \\<in> F S \\<and>\n             a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n             b =\n             (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n             X \\<inter> Y)) \\<or>\n     (\\<exists>t u r v.\n         front_tickFree v \\<and>\n         (tickFree r \\<or> v = []) \\<and>\n         a = r @ v \\<and>\n         r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n         (t \\<in> D (Y x) \\<and> u \\<in> T S \\<or>\n          t \\<in> D S \\<and> u \\<in> T (Y x)))\n  a \\<notin> D (Y m \\<lbrakk>A\\<rbrakk> S)", "have D: \"\\<forall>n. (a, b)\\<in> F (Y n \\<lbrakk> A \\<rbrakk> S)\""], ["proof (prove)\nusing this:\n  \\<forall>x.\n     (\\<exists>t u X.\n         (t, X) \\<in> F (Y x) \\<and>\n         (\\<exists>Y.\n             (u, Y) \\<in> F S \\<and>\n             a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n             b =\n             (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n             X \\<inter> Y)) \\<or>\n     (\\<exists>t u r v.\n         front_tickFree v \\<and>\n         (tickFree r \\<or> v = []) \\<and>\n         a = r @ v \\<and>\n         r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n         (t \\<in> D (Y x) \\<and> u \\<in> T S \\<or>\n          t \\<in> D S \\<and> u \\<in> T (Y x)))\n  a \\<notin> D (Y m \\<lbrakk>A\\<rbrakk> S)\n\ngoal (1 subgoal):\n 1. \\<forall>n. (a, b) \\<in> F (Y n \\<lbrakk>A\\<rbrakk> S)", "by (auto simp: F_sync)"], ["proof (state)\nthis:\n  \\<forall>n. (a, b) \\<in> F (Y n \\<lbrakk>A\\<rbrakk> S)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>x.\n                (\\<exists>t u X.\n                    (t, X) \\<in> F (Y x) \\<and>\n                    (\\<exists>Y.\n                        (u, Y) \\<in> F S \\<and>\n                        a setinterleaves ((t, u), insert tick\n             (ev ` A)) \\<and>\n                        b =\n                        (X \\<union> Y) \\<inter>\n                        insert tick (ev ` A) \\<union>\n                        X \\<inter> Y)) \\<or>\n                (\\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    a = r @ v \\<and>\n                    r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n                    (t \\<in> D (Y x) \\<and> u \\<in> T S \\<or>\n                     t \\<in> D S \\<and> u \\<in> T (Y x)));\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        (\\<forall>v.\n            a = r @ v \\<longrightarrow>\n            front_tickFree v \\<longrightarrow>\n            \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n            ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n            (t \\<in> D S \\<longrightarrow>\n             (\\<exists>x. u \\<notin> T (Y x))));\n     chain Y; \\<exists>m. a \\<notin> D (Y m \\<lbrakk>A\\<rbrakk> S)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u X.\n                         (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n                         (\\<exists>Y.\n                             (u, Y) \\<in> F S \\<and>\n                             a setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                             b =\n                             (X \\<union> Y) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             X \\<inter> Y)\n 2. \\<lbrakk>\\<forall>x.\n                (\\<exists>t u X.\n                    (t, X) \\<in> F (Y x) \\<and>\n                    (\\<exists>Y.\n                        (u, Y) \\<in> F S \\<and>\n                        a setinterleaves ((t, u), insert tick\n             (ev ` A)) \\<and>\n                        b =\n                        (X \\<union> Y) \\<inter>\n                        insert tick (ev ` A) \\<union>\n                        X \\<inter> Y)) \\<or>\n                (\\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    a = r @ v \\<and>\n                    r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n                    (t \\<in> D (Y x) \\<and> u \\<in> T S \\<or>\n                     t \\<in> D S \\<and> u \\<in> T (Y x)));\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        (\\<forall>v.\n            a = r @ v \\<longrightarrow>\n            front_tickFree v \\<longrightarrow>\n            \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n            ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n            (t \\<in> D S \\<longrightarrow>\n             (\\<exists>x. u \\<notin> T (Y x))));\n     chain Y; \\<nexists>m. a \\<notin> D (Y m \\<lbrakk>A\\<rbrakk> S)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u X.\n                         (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n                         (\\<exists>Y.\n                             (u, Y) \\<in> F S \\<and>\n                             a setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                             b =\n                             (X \\<union> Y) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             X \\<inter> Y)", "with A1 B C"], ["proof (chain)\npicking this:\n  \\<forall>x.\n     (\\<exists>t u X.\n         (t, X) \\<in> F (Y x) \\<and>\n         (\\<exists>Y.\n             (u, Y) \\<in> F S \\<and>\n             a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n             b =\n             (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n             X \\<inter> Y)) \\<or>\n     (\\<exists>t u r v.\n         front_tickFree v \\<and>\n         (tickFree r \\<or> v = []) \\<and>\n         a = r @ v \\<and>\n         r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n         (t \\<in> D (Y x) \\<and> u \\<in> T S \\<or>\n          t \\<in> D S \\<and> u \\<in> T (Y x)))\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         a = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n         ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n         (t \\<in> D S \\<longrightarrow> (\\<exists>x. u \\<notin> T (Y x))))\n  chain Y\n  \\<forall>n. (a, b) \\<in> F (Y n \\<lbrakk>A\\<rbrakk> S)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>x.\n     (\\<exists>t u X.\n         (t, X) \\<in> F (Y x) \\<and>\n         (\\<exists>Y.\n             (u, Y) \\<in> F S \\<and>\n             a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n             b =\n             (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n             X \\<inter> Y)) \\<or>\n     (\\<exists>t u r v.\n         front_tickFree v \\<and>\n         (tickFree r \\<or> v = []) \\<and>\n         a = r @ v \\<and>\n         r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n         (t \\<in> D (Y x) \\<and> u \\<in> T S \\<or>\n          t \\<in> D S \\<and> u \\<in> T (Y x)))\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         a = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n         ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n         (t \\<in> D S \\<longrightarrow> (\\<exists>x. u \\<notin> T (Y x))))\n  chain Y\n  \\<forall>n. (a, b) \\<in> F (Y n \\<lbrakk>A\\<rbrakk> S)\n\ngoal (1 subgoal):\n 1. \\<exists>t u X.\n       (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n       (\\<exists>Y.\n           (u, Y) \\<in> F S \\<and>\n           a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           b =\n           (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n           X \\<inter> Y)", "apply(erule_tac x=m in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>t u r.\n                r setinterleaves ((t, u), insert tick\n     (ev ` A)) \\<longrightarrow>\n                (\\<forall>v.\n                    a = r @ v \\<longrightarrow>\n                    front_tickFree v \\<longrightarrow>\n                    \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n                    ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                     u \\<notin> T S) \\<and>\n                    (t \\<in> D S \\<longrightarrow>\n                     (\\<exists>x. u \\<notin> T (Y x))));\n     chain Y; \\<forall>n. (a, b) \\<in> F (Y n \\<lbrakk>A\\<rbrakk> S);\n     (\\<exists>t u X.\n         (t, X) \\<in> F (Y m) \\<and>\n         (\\<exists>Y.\n             (u, Y) \\<in> F S \\<and>\n             a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n             b =\n             (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n             X \\<inter> Y)) \\<or>\n     (\\<exists>t u r v.\n         front_tickFree v \\<and>\n         (tickFree r \\<or> v = []) \\<and>\n         a = r @ v \\<and>\n         r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n         (t \\<in> D (Y m) \\<and> u \\<in> T S \\<or>\n          t \\<in> D S \\<and> u \\<in> T (Y m)))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u X.\n                         (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n                         (\\<exists>Y.\n                             (u, Y) \\<in> F S \\<and>\n                             a setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                             b =\n                             (X \\<union> Y) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             X \\<inter> Y)", "apply(frule limproc_Sync_F_annex2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>t u r.\n                r setinterleaves ((t, u), insert tick\n     (ev ` A)) \\<longrightarrow>\n                (\\<forall>v.\n                    a = r @ v \\<longrightarrow>\n                    front_tickFree v \\<longrightarrow>\n                    \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n                    ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                     u \\<notin> T S) \\<and>\n                    (t \\<in> D S \\<longrightarrow>\n                     (\\<exists>x. u \\<notin> T (Y x))));\n     chain Y; \\<forall>n. (a, b) \\<in> F (Y n \\<lbrakk>A\\<rbrakk> S);\n     (\\<exists>t u X.\n         (t, X) \\<in> F (Y m) \\<and>\n         (\\<exists>Y.\n             (u, Y) \\<in> F S \\<and>\n             a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n             b =\n             (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n             X \\<inter> Y)) \\<or>\n     (\\<exists>t u r v.\n         front_tickFree v \\<and>\n         (tickFree r \\<or> v = []) \\<and>\n         a = r @ v \\<and>\n         r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n         (t \\<in> D (Y m) \\<and> u \\<in> T S \\<or>\n          t \\<in> D S \\<and> u \\<in> T (Y m)))\\<rbrakk>\n    \\<Longrightarrow> \\<forall>t u r.\n                         r setinterleaves ((t, u), insert tick\n              (ev ` ?A5)) \\<longrightarrow>\n                         (\\<forall>v.\n                             ?a5 = r @ v \\<longrightarrow>\n                             front_tickFree v \\<longrightarrow>\n                             \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n                             ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                              u \\<notin> T ?S5) \\<and>\n                             (t \\<in> D ?S5 \\<longrightarrow>\n                              (\\<exists>x. u \\<notin> T (Y x))))\n 2. \\<lbrakk>\\<forall>t u r.\n                r setinterleaves ((t, u), insert tick\n     (ev ` A)) \\<longrightarrow>\n                (\\<forall>v.\n                    a = r @ v \\<longrightarrow>\n                    front_tickFree v \\<longrightarrow>\n                    \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n                    ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                     u \\<notin> T S) \\<and>\n                    (t \\<in> D S \\<longrightarrow>\n                     (\\<exists>x. u \\<notin> T (Y x))));\n     chain Y; \\<forall>n. (a, b) \\<in> F (Y n \\<lbrakk>A\\<rbrakk> S);\n     (\\<exists>t u X.\n         (t, X) \\<in> F (Y m) \\<and>\n         (\\<exists>Y.\n             (u, Y) \\<in> F S \\<and>\n             a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n             b =\n             (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n             X \\<inter> Y)) \\<or>\n     (\\<exists>t u r v.\n         front_tickFree v \\<and>\n         (tickFree r \\<or> v = []) \\<and>\n         a = r @ v \\<and>\n         r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n         (t \\<in> D (Y m) \\<and> u \\<in> T S \\<or>\n          t \\<in> D S \\<and> u \\<in> T (Y m)));\n     \\<exists>x. ?a5 \\<notin> D (Y x \\<lbrakk>?A5\\<rbrakk> ?S5)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u X.\n                         (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n                         (\\<exists>Y.\n                             (u, Y) \\<in> F S \\<and>\n                             a setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                             b =\n                             (X \\<union> Y) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             X \\<inter> Y)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>t u r.\n                r setinterleaves ((t, u), insert tick\n     (ev ` A)) \\<longrightarrow>\n                (\\<forall>v.\n                    a = r @ v \\<longrightarrow>\n                    front_tickFree v \\<longrightarrow>\n                    \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n                    ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                     u \\<notin> T S) \\<and>\n                    (t \\<in> D S \\<longrightarrow>\n                     (\\<exists>x. u \\<notin> T (Y x))));\n     chain Y; \\<forall>n. (a, b) \\<in> F (Y n \\<lbrakk>A\\<rbrakk> S);\n     (\\<exists>t u X.\n         (t, X) \\<in> F (Y m) \\<and>\n         (\\<exists>Y.\n             (u, Y) \\<in> F S \\<and>\n             a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n             b =\n             (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n             X \\<inter> Y)) \\<or>\n     (\\<exists>t u r v.\n         front_tickFree v \\<and>\n         (tickFree r \\<or> v = []) \\<and>\n         a = r @ v \\<and>\n         r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n         (t \\<in> D (Y m) \\<and> u \\<in> T S \\<or>\n          t \\<in> D S \\<and> u \\<in> T (Y m)));\n     \\<exists>x. a \\<notin> D (Y x \\<lbrakk>A\\<rbrakk> S)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u X.\n                         (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n                         (\\<exists>Y.\n                             (u, Y) \\<in> F S \\<and>\n                             a setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                             b =\n                             (X \\<union> Y) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             X \\<inter> Y)", "by(simp add: limproc_Sync_F_annex1)"], ["proof (state)\nthis:\n  \\<exists>t u X.\n     (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n     (\\<exists>Y.\n         (u, Y) \\<in> F S \\<and>\n         a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n         b =\n         (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union> X \\<inter> Y)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x.\n                (\\<exists>t u X.\n                    (t, X) \\<in> F (Y x) \\<and>\n                    (\\<exists>Y.\n                        (u, Y) \\<in> F S \\<and>\n                        a setinterleaves ((t, u), insert tick\n             (ev ` A)) \\<and>\n                        b =\n                        (X \\<union> Y) \\<inter>\n                        insert tick (ev ` A) \\<union>\n                        X \\<inter> Y)) \\<or>\n                (\\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    a = r @ v \\<and>\n                    r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n                    (t \\<in> D (Y x) \\<and> u \\<in> T S \\<or>\n                     t \\<in> D S \\<and> u \\<in> T (Y x)));\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        (\\<forall>v.\n            a = r @ v \\<longrightarrow>\n            front_tickFree v \\<longrightarrow>\n            \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n            ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n            (t \\<in> D S \\<longrightarrow>\n             (\\<exists>x. u \\<notin> T (Y x))));\n     chain Y; \\<nexists>m. a \\<notin> D (Y m \\<lbrakk>A\\<rbrakk> S)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u X.\n                         (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n                         (\\<exists>Y.\n                             (u, Y) \\<in> F S \\<and>\n                             a setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                             b =\n                             (X \\<union> Y) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             X \\<inter> Y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x.\n                (\\<exists>t u X.\n                    (t, X) \\<in> F (Y x) \\<and>\n                    (\\<exists>Y.\n                        (u, Y) \\<in> F S \\<and>\n                        a setinterleaves ((t, u), insert tick\n             (ev ` A)) \\<and>\n                        b =\n                        (X \\<union> Y) \\<inter>\n                        insert tick (ev ` A) \\<union>\n                        X \\<inter> Y)) \\<or>\n                (\\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    a = r @ v \\<and>\n                    r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n                    (t \\<in> D (Y x) \\<and> u \\<in> T S \\<or>\n                     t \\<in> D S \\<and> u \\<in> T (Y x)));\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        (\\<forall>v.\n            a = r @ v \\<longrightarrow>\n            front_tickFree v \\<longrightarrow>\n            \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n            ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n            (t \\<in> D S \\<longrightarrow>\n             (\\<exists>x. u \\<notin> T (Y x))));\n     chain Y; \\<nexists>m. a \\<notin> D (Y m \\<lbrakk>A\\<rbrakk> S)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u X.\n                         (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n                         (\\<exists>Y.\n                             (u, Y) \\<in> F S \\<and>\n                             a setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                             b =\n                             (X \\<union> Y) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             X \\<inter> Y)", "case False"], ["proof (state)\nthis:\n  \\<nexists>m. a \\<notin> D (Y m \\<lbrakk>A\\<rbrakk> S)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x.\n                (\\<exists>t u X.\n                    (t, X) \\<in> F (Y x) \\<and>\n                    (\\<exists>Y.\n                        (u, Y) \\<in> F S \\<and>\n                        a setinterleaves ((t, u), insert tick\n             (ev ` A)) \\<and>\n                        b =\n                        (X \\<union> Y) \\<inter>\n                        insert tick (ev ` A) \\<union>\n                        X \\<inter> Y)) \\<or>\n                (\\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    a = r @ v \\<and>\n                    r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n                    (t \\<in> D (Y x) \\<and> u \\<in> T S \\<or>\n                     t \\<in> D S \\<and> u \\<in> T (Y x)));\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        (\\<forall>v.\n            a = r @ v \\<longrightarrow>\n            front_tickFree v \\<longrightarrow>\n            \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n            ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n            (t \\<in> D S \\<longrightarrow>\n             (\\<exists>x. u \\<notin> T (Y x))));\n     chain Y; \\<nexists>m. a \\<notin> D (Y m \\<lbrakk>A\\<rbrakk> S)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u X.\n                         (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n                         (\\<exists>Y.\n                             (u, Y) \\<in> F S \\<and>\n                             a setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                             b =\n                             (X \\<union> Y) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             X \\<inter> Y)", "with False"], ["proof (chain)\npicking this:\n  \\<nexists>m. a \\<notin> D (Y m \\<lbrakk>A\\<rbrakk> S)\n  \\<nexists>m. a \\<notin> D (Y m \\<lbrakk>A\\<rbrakk> S)", "have E: \"\\<forall>n.  a \\<in> D (Y n \\<lbrakk> A \\<rbrakk> S)\""], ["proof (prove)\nusing this:\n  \\<nexists>m. a \\<notin> D (Y m \\<lbrakk>A\\<rbrakk> S)\n  \\<nexists>m. a \\<notin> D (Y m \\<lbrakk>A\\<rbrakk> S)\n\ngoal (1 subgoal):\n 1. \\<forall>n. a \\<in> D (Y n \\<lbrakk>A\\<rbrakk> S)", "by blast"], ["proof (state)\nthis:\n  \\<forall>n. a \\<in> D (Y n \\<lbrakk>A\\<rbrakk> S)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x.\n                (\\<exists>t u X.\n                    (t, X) \\<in> F (Y x) \\<and>\n                    (\\<exists>Y.\n                        (u, Y) \\<in> F S \\<and>\n                        a setinterleaves ((t, u), insert tick\n             (ev ` A)) \\<and>\n                        b =\n                        (X \\<union> Y) \\<inter>\n                        insert tick (ev ` A) \\<union>\n                        X \\<inter> Y)) \\<or>\n                (\\<exists>t u r v.\n                    front_tickFree v \\<and>\n                    (tickFree r \\<or> v = []) \\<and>\n                    a = r @ v \\<and>\n                    r setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n                    (t \\<in> D (Y x) \\<and> u \\<in> T S \\<or>\n                     t \\<in> D S \\<and> u \\<in> T (Y x)));\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        (\\<forall>v.\n            a = r @ v \\<longrightarrow>\n            front_tickFree v \\<longrightarrow>\n            \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n            ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n            (t \\<in> D S \\<longrightarrow>\n             (\\<exists>x. u \\<notin> T (Y x))));\n     chain Y; \\<nexists>m. a \\<notin> D (Y m \\<lbrakk>A\\<rbrakk> S)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u X.\n                         (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n                         (\\<exists>Y.\n                             (u, Y) \\<in> F S \\<and>\n                             a setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                             b =\n                             (X \\<union> Y) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             X \\<inter> Y)", "with C E B"], ["proof (chain)\npicking this:\n  chain Y\n  \\<forall>n. a \\<in> D (Y n \\<lbrakk>A\\<rbrakk> S)\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         a = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n         ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n         (t \\<in> D S \\<longrightarrow> (\\<exists>x. u \\<notin> T (Y x))))\n  \\<forall>n. a \\<in> D (Y n \\<lbrakk>A\\<rbrakk> S)", "show ?thesis"], ["proof (prove)\nusing this:\n  chain Y\n  \\<forall>n. a \\<in> D (Y n \\<lbrakk>A\\<rbrakk> S)\n  \\<forall>t u r.\n     r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n     (\\<forall>v.\n         a = r @ v \\<longrightarrow>\n         front_tickFree v \\<longrightarrow>\n         \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n         ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n         (t \\<in> D S \\<longrightarrow> (\\<exists>x. u \\<notin> T (Y x))))\n  \\<forall>n. a \\<in> D (Y n \\<lbrakk>A\\<rbrakk> S)\n\ngoal (1 subgoal):\n 1. \\<exists>t u X.\n       (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n       (\\<exists>Y.\n           (u, Y) \\<in> F S \\<and>\n           a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n           b =\n           (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union>\n           X \\<inter> Y)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>chain Y;\n     \\<forall>t u r.\n        r setinterleaves ((t, u), insert tick (ev ` A)) \\<longrightarrow>\n        (\\<forall>v.\n            a = r @ v \\<longrightarrow>\n            front_tickFree v \\<longrightarrow>\n            \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n            ((\\<exists>x. t \\<notin> D (Y x)) \\<or> u \\<notin> T S) \\<and>\n            (t \\<in> D S \\<longrightarrow>\n             (\\<exists>x. u \\<notin> T (Y x))));\n     \\<forall>n. a \\<in> D (Y n \\<lbrakk>A\\<rbrakk> S)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u X.\n                         (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n                         (\\<exists>Y.\n                             (u, Y) \\<in> F S \\<and>\n                             a setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                             b =\n                             (X \\<union> Y) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             X \\<inter> Y)", "apply(drule limproc_Sync_F_annex2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>t u r.\n                r setinterleaves ((t, u), insert tick\n     (ev ` A)) \\<longrightarrow>\n                (\\<forall>v.\n                    a = r @ v \\<longrightarrow>\n                    front_tickFree v \\<longrightarrow>\n                    \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n                    ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                     u \\<notin> T S) \\<and>\n                    (t \\<in> D S \\<longrightarrow>\n                     (\\<exists>x. u \\<notin> T (Y x))));\n     \\<forall>n. a \\<in> D (Y n \\<lbrakk>A\\<rbrakk> S)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>t u r.\n                         r setinterleaves ((t, u), insert tick\n              (ev ` ?A10)) \\<longrightarrow>\n                         (\\<forall>v.\n                             ?a10 = r @ v \\<longrightarrow>\n                             front_tickFree v \\<longrightarrow>\n                             \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n                             ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                              u \\<notin> T ?S10) \\<and>\n                             (t \\<in> D ?S10 \\<longrightarrow>\n                              (\\<exists>x. u \\<notin> T (Y x))))\n 2. \\<lbrakk>\\<forall>t u r.\n                r setinterleaves ((t, u), insert tick\n     (ev ` A)) \\<longrightarrow>\n                (\\<forall>v.\n                    a = r @ v \\<longrightarrow>\n                    front_tickFree v \\<longrightarrow>\n                    \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n                    ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                     u \\<notin> T S) \\<and>\n                    (t \\<in> D S \\<longrightarrow>\n                     (\\<exists>x. u \\<notin> T (Y x))));\n     \\<forall>n. a \\<in> D (Y n \\<lbrakk>A\\<rbrakk> S);\n     \\<exists>x. ?a10 \\<notin> D (Y x \\<lbrakk>?A10\\<rbrakk> ?S10)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u X.\n                         (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n                         (\\<exists>Y.\n                             (u, Y) \\<in> F S \\<and>\n                             a setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                             b =\n                             (X \\<union> Y) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             X \\<inter> Y)", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>t u r.\n                r setinterleaves ((t, u), insert tick\n     (ev ` A)) \\<longrightarrow>\n                (\\<forall>v.\n                    a = r @ v \\<longrightarrow>\n                    front_tickFree v \\<longrightarrow>\n                    \\<not> tickFree r \\<and> v \\<noteq> [] \\<or>\n                    ((\\<exists>x. t \\<notin> D (Y x)) \\<or>\n                     u \\<notin> T S) \\<and>\n                    (t \\<in> D S \\<longrightarrow>\n                     (\\<exists>x. u \\<notin> T (Y x))));\n     \\<forall>n. a \\<in> D (Y n \\<lbrakk>A\\<rbrakk> S);\n     \\<exists>x. a \\<notin> D (Y x \\<lbrakk>A\\<rbrakk> S)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t u X.\n                         (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n                         (\\<exists>Y.\n                             (u, Y) \\<in> F S \\<and>\n                             a setinterleaves ((t, u), insert tick\n                  (ev ` A)) \\<and>\n                             b =\n                             (X \\<union> Y) \\<inter>\n                             insert tick (ev ` A) \\<union>\n                             X \\<inter> Y)", "by fast"], ["proof (state)\nthis:\n  \\<exists>t u X.\n     (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n     (\\<exists>Y.\n         (u, Y) \\<in> F S \\<and>\n         a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n         b =\n         (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union> X \\<inter> Y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>t u X.\n     (\\<forall>x. (t, X) \\<in> F (Y x)) \\<and>\n     (\\<exists>Y.\n         (u, Y) \\<in> F S \\<and>\n         a setinterleaves ((t, u), insert tick (ev ` A)) \\<and>\n         b =\n         (X \\<union> Y) \\<inter> insert tick (ev ` A) \\<union> X \\<inter> Y)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cont_left_sync : \"chain Y \\<Longrightarrow> ((\\<Squnion> i. Y i) \\<lbrakk> A \\<rbrakk> S) = (\\<Squnion> i. (Y i \\<lbrakk> A \\<rbrakk> S))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chain Y \\<Longrightarrow>\n    ((\\<Squnion>i. Y i) \\<lbrakk>A\\<rbrakk> S) =\n    (\\<Squnion>i. Y i \\<lbrakk>A\\<rbrakk> S)", "by(simp add: Process_eq_spec chain_Sync1 limproc_Sync_D limproc_Sync_F limproc_is_thelub)"], ["", "lemma cont_right_sync : \"chain Y \\<Longrightarrow> (S \\<lbrakk> A \\<rbrakk> (\\<Squnion> i. Y i)) = (\\<Squnion> i. (S \\<lbrakk> A \\<rbrakk> Y i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chain Y \\<Longrightarrow>\n    (S \\<lbrakk>A\\<rbrakk> (\\<Squnion>i. Y i)) =\n    (\\<Squnion>i. S \\<lbrakk>A\\<rbrakk> Y i)", "by (metis (no_types, lifting) Process_eq_spec cont_left_sync lub_eq mono_D_syn mono_F_syn)"], ["", "lemma Sync_cont[simp]: \nassumes f:\"cont f\" \nand     g:\"cont g\"\nshows     \"cont (\\<lambda>x. (f x) \\<lbrakk>A\\<rbrakk> (g x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cont (\\<lambda>x. f x \\<lbrakk>A\\<rbrakk> g x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cont (\\<lambda>x. f x \\<lbrakk>A\\<rbrakk> g x)", "have A : \"\\<And>x. cont g \\<Longrightarrow> cont (\\<lambda>y. y \\<lbrakk>A\\<rbrakk> (g x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       cont g \\<Longrightarrow> cont (\\<lambda>y. y \\<lbrakk>A\\<rbrakk> g x)", "apply (rule contI2, rule monofunI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>cont g; xa \\<sqsubseteq> y\\<rbrakk>\n       \\<Longrightarrow> (xa \\<lbrakk>A\\<rbrakk> g x) \\<sqsubseteq>\n                         (y \\<lbrakk>A\\<rbrakk> g x)\n 2. \\<And>x Y.\n       \\<lbrakk>cont g; chain Y;\n        chain (\\<lambda>i. Y i \\<lbrakk>A\\<rbrakk> g x)\\<rbrakk>\n       \\<Longrightarrow> ((\\<Squnion>i. Y i) \\<lbrakk>A\\<rbrakk>\n                             g x) \\<sqsubseteq>\n                         (\\<Squnion>i. Y i \\<lbrakk>A\\<rbrakk> g x)", "apply(auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x Y.\n       \\<lbrakk>cont g; chain Y;\n        chain (\\<lambda>i. Y i \\<lbrakk>A\\<rbrakk> g x)\\<rbrakk>\n       \\<Longrightarrow> ((\\<Squnion>i. Y i) \\<lbrakk>A\\<rbrakk>\n                             g x) \\<sqsubseteq>\n                         (\\<Squnion>i. Y i \\<lbrakk>A\\<rbrakk> g x)", "by (simp add: cont_left_sync)"], ["proof (state)\nthis:\n  cont g \\<Longrightarrow> cont (\\<lambda>y. y \\<lbrakk>A\\<rbrakk> g ?x)\n\ngoal (1 subgoal):\n 1. cont (\\<lambda>x. f x \\<lbrakk>A\\<rbrakk> g x)", "have B : \"\\<And>y. cont g \\<Longrightarrow> cont (\\<lambda>x. y \\<lbrakk>A\\<rbrakk> g x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       cont g \\<Longrightarrow> cont (\\<lambda>x. y \\<lbrakk>A\\<rbrakk> g x)", "apply(rule_tac c=\"(\\<lambda> x. y  \\<lbrakk>A\\<rbrakk> x)\" in cont_compose)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y. cont g \\<Longrightarrow> cont (sync y A)\n 2. \\<And>y. cont g \\<Longrightarrow> cont g", "apply(rule contI2, rule monofunI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y x ya.\n       \\<lbrakk>cont g; x \\<sqsubseteq> ya\\<rbrakk>\n       \\<Longrightarrow> (y \\<lbrakk>A\\<rbrakk> x) \\<sqsubseteq>\n                         (y \\<lbrakk>A\\<rbrakk> ya)\n 2. \\<And>y Y.\n       \\<lbrakk>cont g; chain Y;\n        chain (\\<lambda>i. y \\<lbrakk>A\\<rbrakk> Y i)\\<rbrakk>\n       \\<Longrightarrow> (y \\<lbrakk>A\\<rbrakk>\n                             (\\<Squnion>i. Y i)) \\<sqsubseteq>\n                         (\\<Squnion>i. y \\<lbrakk>A\\<rbrakk> Y i)\n 3. \\<And>y. cont g \\<Longrightarrow> cont g", "apply (simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y Y.\n       \\<lbrakk>cont g; chain Y;\n        chain (\\<lambda>i. y \\<lbrakk>A\\<rbrakk> Y i)\\<rbrakk>\n       \\<Longrightarrow> (y \\<lbrakk>A\\<rbrakk>\n                             (\\<Squnion>i. Y i)) \\<sqsubseteq>\n                         (\\<Squnion>i. y \\<lbrakk>A\\<rbrakk> Y i)\n 2. \\<And>y. cont g \\<Longrightarrow> cont g", "apply (simp add: cont_right_sync)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y. cont g \\<Longrightarrow> cont g", "by simp"], ["proof (state)\nthis:\n  cont g \\<Longrightarrow> cont (\\<lambda>x. ?y \\<lbrakk>A\\<rbrakk> g x)\n\ngoal (1 subgoal):\n 1. cont (\\<lambda>x. f x \\<lbrakk>A\\<rbrakk> g x)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. cont (\\<lambda>x. f x \\<lbrakk>A\\<rbrakk> g x)", "using f g"], ["proof (prove)\nusing this:\n  cont f\n  cont g\n\ngoal (1 subgoal):\n 1. cont (\\<lambda>x. f x \\<lbrakk>A\\<rbrakk> g x)", "apply(rule_tac  f=\"(\\<lambda>x. (\\<lambda> f. f  \\<lbrakk>A\\<rbrakk> g x))\" in cont_apply)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>cont f; cont g\\<rbrakk> \\<Longrightarrow> cont f\n 2. \\<And>x.\n       \\<lbrakk>cont f; cont g\\<rbrakk>\n       \\<Longrightarrow> cont (\\<lambda>y. y \\<lbrakk>A\\<rbrakk> g x)\n 3. \\<And>y.\n       \\<lbrakk>cont f; cont g\\<rbrakk>\n       \\<Longrightarrow> cont (\\<lambda>x. y \\<lbrakk>A\\<rbrakk> g x)", "by(auto intro:contI2 simp:A B)"], ["proof (state)\nthis:\n  cont (\\<lambda>x. f x \\<lbrakk>A\\<rbrakk> g x)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}