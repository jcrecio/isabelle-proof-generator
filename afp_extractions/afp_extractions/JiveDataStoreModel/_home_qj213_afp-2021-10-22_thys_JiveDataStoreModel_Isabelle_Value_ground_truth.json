{"file_name": "/home/qj213/afp-2021-10-22/thys/JiveDataStoreModel/Isabelle/Value.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/JiveDataStoreModel", "problem_names": ["lemma isBoolV_simps [simp]:\n\"isBoolV (boolV b)       = True\" \n\"isBoolV (intgV i)       = False\"\n\"isBoolV (shortV s)      = False\"\n\"isBoolV (byteV by)       = False\"\n\"isBoolV (objV C a)      = False\"\n\"isBoolV (arrV T a)      = False\"\n\"isBoolV (nullV)         = False\"", "lemma isIntgV_simps [simp]:\n\"isIntgV (boolV b)       = False\" \n\"isIntgV (intgV i)       = True\"\n\"isIntgV (shortV s)       = False\"\n\"isIntgV (byteV by)       = False\"\n\"isIntgV (objV C a)      = False\"\n\"isIntgV (arrV T a)      = False\"\n\"isIntgV (nullV)         = False\"", "lemma isShortV_simps [simp]:\n\"isShortV (boolV b)     = False\" \n\"isShortV (intgV i)     = False\"\n\"isShortV (shortV s)    = True\"\n\"isShortV (byteV by)     = False\"\n\"isShortV (objV C a)    = False\"\n\"isShortV (arrV T a)    = False\"\n\"isShortV (nullV)       = False\"", "lemma isByteV_simps [simp]:\n\"isByteV (boolV b)      = False\" \n\"isByteV (intgV i)      = False\"\n\"isByteV (shortV s)     = False\"\n\"isByteV (byteV by)      = True\"\n\"isByteV (objV C a)     = False\"\n\"isByteV (arrV T a)     = False\"\n\"isByteV (nullV)        = False\"", "lemma isRefV_simps [simp]:\n\"isRefV (boolV b)       = False\" \n\"isRefV (intgV i)       = False\"\n\"isRefV (shortV s)      = False\"\n\"isRefV (byteV by)      = False\"\n\"isRefV (objV C a)      = True\"\n\"isRefV (arrV T a)      = True\"\n\"isRefV (nullV)         = True\"", "lemma isObjV_simps [simp]:\n\"isObjV (boolV b)  = False\" \n\"isObjV (intgV i)  = False\"\n\"isObjV (shortV s)  = False\"\n\"isObjV (byteV by)  = False\"\n\"isObjV (objV c a) = True\" \n\"isObjV (arrV T a) = False\"\n\"isObjV nullV      = False\"", "lemma isArrV_simps [simp]:\n\"isArrV (boolV b)  = False\" \n\"isArrV (intgV i)  = False\"\n\"isArrV (shortV s)  = False\"\n\"isArrV (byteV by)  = False\"\n\"isArrV (objV c a) = False\" \n\"isArrV (arrV T a) = True\"\n\"isArrV nullV      = False\"", "lemma isNullV_simps [simp]:\n\"isNullV (boolV b)   = False\" \n\"isNullV (intgV i)   = False\"\n\"isNullV (shortV s)   = False\"\n\"isNullV (byteV by)   = False\"\n\"isNullV (objV c a) = False\" \n\"isNullV (arrV T a) = False\"\n\"isNullV nullV      = True\"", "lemma aI_simps [simp]:\n\"aI (intgV i) = i\"", "lemma aB_simps [simp]:\n\"aB (boolV b) = b\"", "lemma aSh_simps [simp]:\n\"aSh (shortV sh) = sh\"", "lemma aBy_simps [simp]:\n\"aBy (byteV by) = by\"", "lemma tid_simps [simp]:\n\"tid (objV C a) = C\"", "lemma oid_simps [simp]:\n\"oid (objV C a) = a\"", "lemma jt_simps [simp]:\n\"jt (arrV T a) = at2jt T\"", "lemma aid_simps [simp]:\n\"aid (arrV T a) = a\"", "lemma typeof_simps [simp]:\n\"(\\<tau> (boolV b)) = BoolT\"\n\"(\\<tau> (intgV i)) = IntgT\"\n\"(\\<tau> (shortV sh)) = ShortT\"\n\"(\\<tau> (byteV by)) = ByteT\"\n\"(\\<tau> (objV c a)) = CClassT c\"\n\"(\\<tau> (arrV t a)) = ArrT t\"\n\"(\\<tau> (nullV))   = NullT\"", "lemma init_simps [simp]:\n\"init BoolT          = boolV False\"\n\"init IntgT          = intgV 0\"\n\"init ShortT         = shortV 0\"\n\"init ByteT          = byteV 0\"\n\"init NullT          = nullV\"\n\"init (ArrT T)       = nullV\"\n\"init (CClassT c)     = nullV\"\n\"init (AClassT a)     = nullV\"\n\"init (InterfaceT i) = nullV\"", "lemma typeof_init_widen [simp,intro]: \"typeof (init T) \\<le> T\""], "translations": [["", "lemma isBoolV_simps [simp]:\n\"isBoolV (boolV b)       = True\" \n\"isBoolV (intgV i)       = False\"\n\"isBoolV (shortV s)      = False\"\n\"isBoolV (byteV by)       = False\"\n\"isBoolV (objV C a)      = False\"\n\"isBoolV (arrV T a)      = False\"\n\"isBoolV (nullV)         = False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (isBoolV (boolV b) = True &&&\n     isBoolV (intgV i) = False &&& isBoolV (shortV s) = False) &&&\n    (isBoolV (byteV by) = False &&& isBoolV (objV C a) = False) &&&\n    isBoolV (arrV T a) = False &&& isBoolV nullV = False", "by (simp_all add: isBoolV_def)"], ["", "definition isIntgV  :: \"Value \\<Rightarrow> bool\" where\n\"isIntgV v = (case v of\n               boolV b  \\<Rightarrow> False \n             | intgV i  \\<Rightarrow> True\n             | shortV s \\<Rightarrow> False\n             | byteV by  \\<Rightarrow> False\n             | objV C a \\<Rightarrow> False\n             | arrV T a \\<Rightarrow> False\n             | nullV    \\<Rightarrow> False)\""], ["", "lemma isIntgV_simps [simp]:\n\"isIntgV (boolV b)       = False\" \n\"isIntgV (intgV i)       = True\"\n\"isIntgV (shortV s)       = False\"\n\"isIntgV (byteV by)       = False\"\n\"isIntgV (objV C a)      = False\"\n\"isIntgV (arrV T a)      = False\"\n\"isIntgV (nullV)         = False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (isIntgV (boolV b) = False &&&\n     isIntgV (intgV i) = True &&& isIntgV (shortV s) = False) &&&\n    (isIntgV (byteV by) = False &&& isIntgV (objV C a) = False) &&&\n    isIntgV (arrV T a) = False &&& isIntgV nullV = False", "by (simp_all add: isIntgV_def)"], ["", "definition isShortV :: \"Value \\<Rightarrow> bool\" where\n\"isShortV v = (case v of\n               boolV b  \\<Rightarrow> False \n             | intgV i  \\<Rightarrow> False\n             | shortV s \\<Rightarrow> True\n             | byteV by  \\<Rightarrow> False\n             | objV C a \\<Rightarrow> False\n             | arrV T a \\<Rightarrow> False\n             | nullV    \\<Rightarrow> False)\""], ["", "lemma isShortV_simps [simp]:\n\"isShortV (boolV b)     = False\" \n\"isShortV (intgV i)     = False\"\n\"isShortV (shortV s)    = True\"\n\"isShortV (byteV by)     = False\"\n\"isShortV (objV C a)    = False\"\n\"isShortV (arrV T a)    = False\"\n\"isShortV (nullV)       = False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (isShortV (boolV b) = False &&&\n     isShortV (intgV i) = False &&& isShortV (shortV s) = True) &&&\n    (isShortV (byteV by) = False &&& isShortV (objV C a) = False) &&&\n    isShortV (arrV T a) = False &&& isShortV nullV = False", "by (simp_all add: isShortV_def)"], ["", "definition isByteV :: \"Value \\<Rightarrow> bool\" where\n\"isByteV v = (case v of\n               boolV b  \\<Rightarrow> False \n             | intgV i  \\<Rightarrow> False\n             | shortV s \\<Rightarrow> False\n             | byteV by  \\<Rightarrow> True\n             | objV C a \\<Rightarrow> False\n             | arrV T a \\<Rightarrow> False\n             | nullV    \\<Rightarrow> False)\""], ["", "lemma isByteV_simps [simp]:\n\"isByteV (boolV b)      = False\" \n\"isByteV (intgV i)      = False\"\n\"isByteV (shortV s)     = False\"\n\"isByteV (byteV by)      = True\"\n\"isByteV (objV C a)     = False\"\n\"isByteV (arrV T a)     = False\"\n\"isByteV (nullV)        = False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (isByteV (boolV b) = False &&&\n     isByteV (intgV i) = False &&& isByteV (shortV s) = False) &&&\n    (isByteV (byteV by) = True &&& isByteV (objV C a) = False) &&&\n    isByteV (arrV T a) = False &&& isByteV nullV = False", "by (simp_all add: isByteV_def)"], ["", "definition isRefV :: \"Value \\<Rightarrow> bool\" where\n\"isRefV v = (case v of\n               boolV b  \\<Rightarrow> False \n             | intgV i  \\<Rightarrow> False\n             | shortV s \\<Rightarrow> False\n             | byteV by \\<Rightarrow> False\n             | objV C a  \\<Rightarrow> True\n             | arrV T a  \\<Rightarrow> True\n             | nullV     \\<Rightarrow> True)\""], ["", "lemma isRefV_simps [simp]:\n\"isRefV (boolV b)       = False\" \n\"isRefV (intgV i)       = False\"\n\"isRefV (shortV s)      = False\"\n\"isRefV (byteV by)      = False\"\n\"isRefV (objV C a)      = True\"\n\"isRefV (arrV T a)      = True\"\n\"isRefV (nullV)         = True\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (isRefV (boolV b) = False &&&\n     isRefV (intgV i) = False &&& isRefV (shortV s) = False) &&&\n    (isRefV (byteV by) = False &&& isRefV (objV C a) = True) &&&\n    isRefV (arrV T a) = True &&& isRefV nullV = True", "by (simp_all add: isRefV_def)"], ["", "definition isObjV :: \"Value \\<Rightarrow> bool\" where\n\"isObjV v = (case v of\n               boolV b  \\<Rightarrow> False \n             | intgV i  \\<Rightarrow> False\n             | shortV s  \\<Rightarrow> False\n             | byteV by  \\<Rightarrow> False\n             | objV C a \\<Rightarrow> True\n             | arrV T a \\<Rightarrow> False\n             | nullV    \\<Rightarrow> False)\""], ["", "lemma isObjV_simps [simp]:\n\"isObjV (boolV b)  = False\" \n\"isObjV (intgV i)  = False\"\n\"isObjV (shortV s)  = False\"\n\"isObjV (byteV by)  = False\"\n\"isObjV (objV c a) = True\" \n\"isObjV (arrV T a) = False\"\n\"isObjV nullV      = False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (isObjV (boolV b) = False &&&\n     isObjV (intgV i) = False &&& isObjV (shortV s) = False) &&&\n    (isObjV (byteV by) = False &&& isObjV (objV c a) = True) &&&\n    isObjV (arrV T a) = False &&& isObjV nullV = False", "by (simp_all add: isObjV_def)"], ["", "definition isArrV :: \"Value \\<Rightarrow> bool\" where\n\"isArrV v = (case v of\n               boolV b  \\<Rightarrow> False \n             | intgV i  \\<Rightarrow> False\n             | shortV s  \\<Rightarrow> False\n             | byteV by  \\<Rightarrow> False\n             | objV C a \\<Rightarrow> False\n             | arrV T a \\<Rightarrow> True\n             | nullV    \\<Rightarrow> False)\""], ["", "lemma isArrV_simps [simp]:\n\"isArrV (boolV b)  = False\" \n\"isArrV (intgV i)  = False\"\n\"isArrV (shortV s)  = False\"\n\"isArrV (byteV by)  = False\"\n\"isArrV (objV c a) = False\" \n\"isArrV (arrV T a) = True\"\n\"isArrV nullV      = False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (isArrV (boolV b) = False &&&\n     isArrV (intgV i) = False &&& isArrV (shortV s) = False) &&&\n    (isArrV (byteV by) = False &&& isArrV (objV c a) = False) &&&\n    isArrV (arrV T a) = True &&& isArrV nullV = False", "by (simp_all add: isArrV_def)"], ["", "definition isNullV  :: \"Value \\<Rightarrow> bool\" where\n\"isNullV v = (case v of\n               boolV b  \\<Rightarrow> False \n             | intgV i  \\<Rightarrow> False\n             | shortV s  \\<Rightarrow> False\n             | byteV by  \\<Rightarrow> False\n             | objV C a \\<Rightarrow> False\n             | arrV T a \\<Rightarrow> False\n             | nullV    \\<Rightarrow> True)\""], ["", "lemma isNullV_simps [simp]:\n\"isNullV (boolV b)   = False\" \n\"isNullV (intgV i)   = False\"\n\"isNullV (shortV s)   = False\"\n\"isNullV (byteV by)   = False\"\n\"isNullV (objV c a) = False\" \n\"isNullV (arrV T a) = False\"\n\"isNullV nullV      = True\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (isNullV (boolV b) = False &&&\n     isNullV (intgV i) = False &&& isNullV (shortV s) = False) &&&\n    (isNullV (byteV by) = False &&& isNullV (objV c a) = False) &&&\n    isNullV (arrV T a) = False &&& isNullV nullV = True", "by (simp_all add: isNullV_def)"], ["", "subsection \\<open>Selector Functions\\<close>"], ["", "definition aI :: \"Value \\<Rightarrow> JavaInt\" where\n\"aI v = (case v of  \n            boolV  b   \\<Rightarrow> undefined\n          | intgV  i   \\<Rightarrow> i\n          | shortV sh  \\<Rightarrow> undefined\n          | byteV  by  \\<Rightarrow> undefined\n          | objV   C a \\<Rightarrow> undefined\n          | arrV  T a  \\<Rightarrow> undefined\n          | nullV      \\<Rightarrow> undefined)\""], ["", "lemma aI_simps [simp]:\n\"aI (intgV i) = i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. aI (intgV i) = i", "by (simp add: aI_def)"], ["", "definition aB :: \"Value \\<Rightarrow> JavaBoolean\" where\n\"aB v = (case v of  \n            boolV  b   \\<Rightarrow> b\n          | intgV  i   \\<Rightarrow> undefined\n          | shortV sh  \\<Rightarrow> undefined\n          | byteV  by  \\<Rightarrow> undefined\n          | objV   C a \\<Rightarrow> undefined\n          | arrV  T a  \\<Rightarrow> undefined\n          | nullV      \\<Rightarrow> undefined)\""], ["", "lemma aB_simps [simp]:\n\"aB (boolV b) = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. aB (boolV b) = b", "by (simp add: aB_def)"], ["", "definition aSh :: \"Value \\<Rightarrow> JavaShort\" where\n\"aSh v = (case v of  \n            boolV  b   \\<Rightarrow> undefined\n          | intgV  i   \\<Rightarrow> undefined\n          | shortV sh  \\<Rightarrow> sh\n          | byteV  by  \\<Rightarrow> undefined\n          | objV   C a \\<Rightarrow> undefined\n          | arrV  T a  \\<Rightarrow> undefined\n          | nullV      \\<Rightarrow> undefined)\""], ["", "lemma aSh_simps [simp]:\n\"aSh (shortV sh) = sh\""], ["proof (prove)\ngoal (1 subgoal):\n 1. aSh (shortV sh) = sh", "by (simp add: aSh_def)"], ["", "definition aBy :: \"Value \\<Rightarrow> JavaByte\" where\n\"aBy v = (case v of  \n            boolV  b   \\<Rightarrow> undefined\n          | intgV  i   \\<Rightarrow> undefined\n          | shortV s   \\<Rightarrow> undefined\n          | byteV  by  \\<Rightarrow> by\n          | objV   C a \\<Rightarrow> undefined\n          | arrV  T a  \\<Rightarrow> undefined\n          | nullV      \\<Rightarrow> undefined)\""], ["", "lemma aBy_simps [simp]:\n\"aBy (byteV by) = by\""], ["proof (prove)\ngoal (1 subgoal):\n 1. aBy (byteV by) = by", "by (simp add: aBy_def)"], ["", "definition tid :: \"Value \\<Rightarrow> CTypeId\" where\n\"tid v = (case v of\n            boolV  b   \\<Rightarrow> undefined\n          | intgV  i   \\<Rightarrow> undefined\n          | shortV s   \\<Rightarrow> undefined\n          | byteV  by  \\<Rightarrow> undefined\n          | objV   C a \\<Rightarrow> C\n          | arrV  T a  \\<Rightarrow> undefined\n          | nullV      \\<Rightarrow> undefined)\""], ["", "lemma tid_simps [simp]:\n\"tid (objV C a) = C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tid (objV C a) = C", "by (simp add: tid_def)"], ["", "definition oid :: \"Value \\<Rightarrow> ObjectId\" where\n\"oid v = (case v of\n            boolV  b   \\<Rightarrow> undefined\n          | intgV  i   \\<Rightarrow> undefined\n          | shortV s   \\<Rightarrow> undefined\n          | byteV  by  \\<Rightarrow> undefined\n          | objV   C a \\<Rightarrow> a\n          | arrV  T a  \\<Rightarrow> undefined\n          | nullV      \\<Rightarrow> undefined)\""], ["", "lemma oid_simps [simp]:\n\"oid (objV C a) = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. oid (objV C a) = a", "by (simp add: oid_def)"], ["", "definition jt :: \"Value \\<Rightarrow> Javatype\" where\n\"jt v = (case v of\n            boolV  b   \\<Rightarrow> undefined\n          | intgV  i   \\<Rightarrow> undefined\n          | shortV s   \\<Rightarrow> undefined\n          | byteV  by  \\<Rightarrow> undefined\n          | objV   C a \\<Rightarrow> undefined\n          | arrV  T a  \\<Rightarrow> at2jt T\n          | nullV      \\<Rightarrow> undefined)\""], ["", "lemma jt_simps [simp]:\n\"jt (arrV T a) = at2jt T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. jt (arrV T a) = at2jt T", "by (simp add: jt_def)"], ["", "definition aid :: \"Value \\<Rightarrow> ObjectId\" where\n\"aid v = (case v of\n            boolV  b   \\<Rightarrow> undefined\n          | intgV  i   \\<Rightarrow> undefined\n          | shortV s   \\<Rightarrow> undefined\n          | byteV  by  \\<Rightarrow> undefined\n          | objV   C a \\<Rightarrow> undefined\n          | arrV  T a  \\<Rightarrow> a\n          | nullV      \\<Rightarrow> undefined)\""], ["", "lemma aid_simps [simp]:\n\"aid (arrV T a) = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. aid (arrV T a) = a", "by (simp add: aid_def)"], ["", "subsection\\<open>Determining the Type of a Value\\<close>"], ["", "text \\<open>To determine the type of a value, we define the function\n\\<open>typeof\\<close>. This function is\noften written as $\\tau$ in theoretical texts, therefore we add\nthe appropriate syntax support.\\<close>"], ["", "definition typeof :: \"Value \\<Rightarrow> Javatype\" where\n\"typeof v = (case v of\n               boolV b  \\<Rightarrow> BoolT \n             | intgV i  \\<Rightarrow> IntgT\n             | shortV sh  \\<Rightarrow> ShortT\n             | byteV by  \\<Rightarrow> ByteT\n             | objV C a \\<Rightarrow> CClassT C\n             | arrV T a \\<Rightarrow> ArrT T\n             | nullV    \\<Rightarrow> NullT)\""], ["", "abbreviation tau_syntax :: \"Value \\<Rightarrow> Javatype\" (\"\\<tau> _\")\n  where \"\\<tau> v == typeof v\""], ["", "lemma typeof_simps [simp]:\n\"(\\<tau> (boolV b)) = BoolT\"\n\"(\\<tau> (intgV i)) = IntgT\"\n\"(\\<tau> (shortV sh)) = ShortT\"\n\"(\\<tau> (byteV by)) = ByteT\"\n\"(\\<tau> (objV c a)) = CClassT c\"\n\"(\\<tau> (arrV t a)) = ArrT t\"\n\"(\\<tau> (nullV))   = NullT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<tau> boolV b = BoolT &&&\n     \\<tau> intgV i = IntgT &&& \\<tau> shortV sh = ShortT) &&&\n    (\\<tau> byteV by = ByteT &&& \\<tau> objV c a = CClassT c) &&&\n    \\<tau> arrV t a = ArrT t &&& \\<tau> nullV = NullT", "by (simp_all add: typeof_def)"], ["", "subsection \\<open>Default Initialization Values for Types\\<close>"], ["", "text \\<open>The function \\<open>init\\<close> yields the default initialization values for each \ntype. For boolean, the\ndefault value is False, for the integral types, it is 0, and for the reference\ntypes, it is nullV.\n\\<close>"], ["", "definition init :: \"Javatype \\<Rightarrow> Value\" where\n\"init T = (case T of\n             BoolT        \\<Rightarrow> boolV  False\n           | IntgT        \\<Rightarrow> intgV  0\n           | ShortT        \\<Rightarrow> shortV 0\n           | ByteT        \\<Rightarrow> byteV  0\n           | NullT        \\<Rightarrow> nullV\n           | ArrT T       \\<Rightarrow> nullV\n           | CClassT C     \\<Rightarrow> nullV\n           | AClassT C     \\<Rightarrow> nullV\n           | InterfaceT I \\<Rightarrow> nullV)\""], ["", "lemma init_simps [simp]:\n\"init BoolT          = boolV False\"\n\"init IntgT          = intgV 0\"\n\"init ShortT         = shortV 0\"\n\"init ByteT          = byteV 0\"\n\"init NullT          = nullV\"\n\"init (ArrT T)       = nullV\"\n\"init (CClassT c)     = nullV\"\n\"init (AClassT a)     = nullV\"\n\"init (InterfaceT i) = nullV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((init BoolT = boolV False &&& init IntgT = intgV 0) &&&\n     init ShortT = shortV 0 &&& init ByteT = byteV 0) &&&\n    (init NullT = nullV &&& init (ArrT T) = nullV) &&&\n    init (CClassT c) = nullV &&&\n    init (AClassT a) = nullV &&& init (InterfaceT i) = nullV", "by (simp_all add: init_def)"], ["", "lemma typeof_init_widen [simp,intro]: \"typeof (init T) \\<le> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> init T \\<le> T", "proof (cases T)"], ["proof (state)\ngoal (9 subgoals):\n 1. T = BoolT \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. T = IntgT \\<Longrightarrow> \\<tau> init T \\<le> T\n 3. T = ShortT \\<Longrightarrow> \\<tau> init T \\<le> T\n 4. T = ByteT \\<Longrightarrow> \\<tau> init T \\<le> T\n 5. T = NullT \\<Longrightarrow> \\<tau> init T \\<le> T\n 6. \\<And>x6. T = ArrT x6 \\<Longrightarrow> \\<tau> init T \\<le> T\n 7. \\<And>x7. T = CClassT x7 \\<Longrightarrow> \\<tau> init T \\<le> T\n 8. \\<And>x8. T = AClassT x8 \\<Longrightarrow> \\<tau> init T \\<le> T\n 9. \\<And>x9. T = InterfaceT x9 \\<Longrightarrow> \\<tau> init T \\<le> T", "assume c: \"T = BoolT\""], ["proof (state)\nthis:\n  T = BoolT\n\ngoal (9 subgoals):\n 1. T = BoolT \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. T = IntgT \\<Longrightarrow> \\<tau> init T \\<le> T\n 3. T = ShortT \\<Longrightarrow> \\<tau> init T \\<le> T\n 4. T = ByteT \\<Longrightarrow> \\<tau> init T \\<le> T\n 5. T = NullT \\<Longrightarrow> \\<tau> init T \\<le> T\n 6. \\<And>x6. T = ArrT x6 \\<Longrightarrow> \\<tau> init T \\<le> T\n 7. \\<And>x7. T = CClassT x7 \\<Longrightarrow> \\<tau> init T \\<le> T\n 8. \\<And>x8. T = AClassT x8 \\<Longrightarrow> \\<tau> init T \\<le> T\n 9. \\<And>x9. T = InterfaceT x9 \\<Longrightarrow> \\<tau> init T \\<le> T", "show \"(\\<tau> (init T)) \\<le> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> init T \\<le> T", "using c"], ["proof (prove)\nusing this:\n  T = BoolT\n\ngoal (1 subgoal):\n 1. \\<tau> init T \\<le> T", "by simp"], ["proof (state)\nthis:\n  \\<tau> init T \\<le> T\n\ngoal (8 subgoals):\n 1. T = IntgT \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. T = ShortT \\<Longrightarrow> \\<tau> init T \\<le> T\n 3. T = ByteT \\<Longrightarrow> \\<tau> init T \\<le> T\n 4. T = NullT \\<Longrightarrow> \\<tau> init T \\<le> T\n 5. \\<And>x6. T = ArrT x6 \\<Longrightarrow> \\<tau> init T \\<le> T\n 6. \\<And>x7. T = CClassT x7 \\<Longrightarrow> \\<tau> init T \\<le> T\n 7. \\<And>x8. T = AClassT x8 \\<Longrightarrow> \\<tau> init T \\<le> T\n 8. \\<And>x9. T = InterfaceT x9 \\<Longrightarrow> \\<tau> init T \\<le> T", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. T = IntgT \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. T = ShortT \\<Longrightarrow> \\<tau> init T \\<le> T\n 3. T = ByteT \\<Longrightarrow> \\<tau> init T \\<le> T\n 4. T = NullT \\<Longrightarrow> \\<tau> init T \\<le> T\n 5. \\<And>x6. T = ArrT x6 \\<Longrightarrow> \\<tau> init T \\<le> T\n 6. \\<And>x7. T = CClassT x7 \\<Longrightarrow> \\<tau> init T \\<le> T\n 7. \\<And>x8. T = AClassT x8 \\<Longrightarrow> \\<tau> init T \\<le> T\n 8. \\<And>x9. T = InterfaceT x9 \\<Longrightarrow> \\<tau> init T \\<le> T", "assume c: \"T = IntgT\""], ["proof (state)\nthis:\n  T = IntgT\n\ngoal (8 subgoals):\n 1. T = IntgT \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. T = ShortT \\<Longrightarrow> \\<tau> init T \\<le> T\n 3. T = ByteT \\<Longrightarrow> \\<tau> init T \\<le> T\n 4. T = NullT \\<Longrightarrow> \\<tau> init T \\<le> T\n 5. \\<And>x6. T = ArrT x6 \\<Longrightarrow> \\<tau> init T \\<le> T\n 6. \\<And>x7. T = CClassT x7 \\<Longrightarrow> \\<tau> init T \\<le> T\n 7. \\<And>x8. T = AClassT x8 \\<Longrightarrow> \\<tau> init T \\<le> T\n 8. \\<And>x9. T = InterfaceT x9 \\<Longrightarrow> \\<tau> init T \\<le> T", "show \"(\\<tau> (init T)) \\<le> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> init T \\<le> T", "using c"], ["proof (prove)\nusing this:\n  T = IntgT\n\ngoal (1 subgoal):\n 1. \\<tau> init T \\<le> T", "by simp"], ["proof (state)\nthis:\n  \\<tau> init T \\<le> T\n\ngoal (7 subgoals):\n 1. T = ShortT \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. T = ByteT \\<Longrightarrow> \\<tau> init T \\<le> T\n 3. T = NullT \\<Longrightarrow> \\<tau> init T \\<le> T\n 4. \\<And>x6. T = ArrT x6 \\<Longrightarrow> \\<tau> init T \\<le> T\n 5. \\<And>x7. T = CClassT x7 \\<Longrightarrow> \\<tau> init T \\<le> T\n 6. \\<And>x8. T = AClassT x8 \\<Longrightarrow> \\<tau> init T \\<le> T\n 7. \\<And>x9. T = InterfaceT x9 \\<Longrightarrow> \\<tau> init T \\<le> T", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. T = ShortT \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. T = ByteT \\<Longrightarrow> \\<tau> init T \\<le> T\n 3. T = NullT \\<Longrightarrow> \\<tau> init T \\<le> T\n 4. \\<And>x6. T = ArrT x6 \\<Longrightarrow> \\<tau> init T \\<le> T\n 5. \\<And>x7. T = CClassT x7 \\<Longrightarrow> \\<tau> init T \\<le> T\n 6. \\<And>x8. T = AClassT x8 \\<Longrightarrow> \\<tau> init T \\<le> T\n 7. \\<And>x9. T = InterfaceT x9 \\<Longrightarrow> \\<tau> init T \\<le> T", "assume c: \"T = ShortT\""], ["proof (state)\nthis:\n  T = ShortT\n\ngoal (7 subgoals):\n 1. T = ShortT \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. T = ByteT \\<Longrightarrow> \\<tau> init T \\<le> T\n 3. T = NullT \\<Longrightarrow> \\<tau> init T \\<le> T\n 4. \\<And>x6. T = ArrT x6 \\<Longrightarrow> \\<tau> init T \\<le> T\n 5. \\<And>x7. T = CClassT x7 \\<Longrightarrow> \\<tau> init T \\<le> T\n 6. \\<And>x8. T = AClassT x8 \\<Longrightarrow> \\<tau> init T \\<le> T\n 7. \\<And>x9. T = InterfaceT x9 \\<Longrightarrow> \\<tau> init T \\<le> T", "show \"(\\<tau> (init T)) \\<le> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> init T \\<le> T", "using c"], ["proof (prove)\nusing this:\n  T = ShortT\n\ngoal (1 subgoal):\n 1. \\<tau> init T \\<le> T", "by simp"], ["proof (state)\nthis:\n  \\<tau> init T \\<le> T\n\ngoal (6 subgoals):\n 1. T = ByteT \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. T = NullT \\<Longrightarrow> \\<tau> init T \\<le> T\n 3. \\<And>x6. T = ArrT x6 \\<Longrightarrow> \\<tau> init T \\<le> T\n 4. \\<And>x7. T = CClassT x7 \\<Longrightarrow> \\<tau> init T \\<le> T\n 5. \\<And>x8. T = AClassT x8 \\<Longrightarrow> \\<tau> init T \\<le> T\n 6. \\<And>x9. T = InterfaceT x9 \\<Longrightarrow> \\<tau> init T \\<le> T", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. T = ByteT \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. T = NullT \\<Longrightarrow> \\<tau> init T \\<le> T\n 3. \\<And>x6. T = ArrT x6 \\<Longrightarrow> \\<tau> init T \\<le> T\n 4. \\<And>x7. T = CClassT x7 \\<Longrightarrow> \\<tau> init T \\<le> T\n 5. \\<And>x8. T = AClassT x8 \\<Longrightarrow> \\<tau> init T \\<le> T\n 6. \\<And>x9. T = InterfaceT x9 \\<Longrightarrow> \\<tau> init T \\<le> T", "assume c: \"T = ByteT\""], ["proof (state)\nthis:\n  T = ByteT\n\ngoal (6 subgoals):\n 1. T = ByteT \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. T = NullT \\<Longrightarrow> \\<tau> init T \\<le> T\n 3. \\<And>x6. T = ArrT x6 \\<Longrightarrow> \\<tau> init T \\<le> T\n 4. \\<And>x7. T = CClassT x7 \\<Longrightarrow> \\<tau> init T \\<le> T\n 5. \\<And>x8. T = AClassT x8 \\<Longrightarrow> \\<tau> init T \\<le> T\n 6. \\<And>x9. T = InterfaceT x9 \\<Longrightarrow> \\<tau> init T \\<le> T", "show \"(\\<tau> (init T)) \\<le> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> init T \\<le> T", "using c"], ["proof (prove)\nusing this:\n  T = ByteT\n\ngoal (1 subgoal):\n 1. \\<tau> init T \\<le> T", "by simp"], ["proof (state)\nthis:\n  \\<tau> init T \\<le> T\n\ngoal (5 subgoals):\n 1. T = NullT \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. \\<And>x6. T = ArrT x6 \\<Longrightarrow> \\<tau> init T \\<le> T\n 3. \\<And>x7. T = CClassT x7 \\<Longrightarrow> \\<tau> init T \\<le> T\n 4. \\<And>x8. T = AClassT x8 \\<Longrightarrow> \\<tau> init T \\<le> T\n 5. \\<And>x9. T = InterfaceT x9 \\<Longrightarrow> \\<tau> init T \\<le> T", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. T = NullT \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. \\<And>x6. T = ArrT x6 \\<Longrightarrow> \\<tau> init T \\<le> T\n 3. \\<And>x7. T = CClassT x7 \\<Longrightarrow> \\<tau> init T \\<le> T\n 4. \\<And>x8. T = AClassT x8 \\<Longrightarrow> \\<tau> init T \\<le> T\n 5. \\<And>x9. T = InterfaceT x9 \\<Longrightarrow> \\<tau> init T \\<le> T", "assume c: \"T = NullT\""], ["proof (state)\nthis:\n  T = NullT\n\ngoal (5 subgoals):\n 1. T = NullT \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. \\<And>x6. T = ArrT x6 \\<Longrightarrow> \\<tau> init T \\<le> T\n 3. \\<And>x7. T = CClassT x7 \\<Longrightarrow> \\<tau> init T \\<le> T\n 4. \\<And>x8. T = AClassT x8 \\<Longrightarrow> \\<tau> init T \\<le> T\n 5. \\<And>x9. T = InterfaceT x9 \\<Longrightarrow> \\<tau> init T \\<le> T", "show \"(\\<tau> (init T)) \\<le> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> init T \\<le> T", "using c"], ["proof (prove)\nusing this:\n  T = NullT\n\ngoal (1 subgoal):\n 1. \\<tau> init T \\<le> T", "by simp"], ["proof (state)\nthis:\n  \\<tau> init T \\<le> T\n\ngoal (4 subgoals):\n 1. \\<And>x6. T = ArrT x6 \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. \\<And>x7. T = CClassT x7 \\<Longrightarrow> \\<tau> init T \\<le> T\n 3. \\<And>x8. T = AClassT x8 \\<Longrightarrow> \\<tau> init T \\<le> T\n 4. \\<And>x9. T = InterfaceT x9 \\<Longrightarrow> \\<tau> init T \\<le> T", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x6. T = ArrT x6 \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. \\<And>x7. T = CClassT x7 \\<Longrightarrow> \\<tau> init T \\<le> T\n 3. \\<And>x8. T = AClassT x8 \\<Longrightarrow> \\<tau> init T \\<le> T\n 4. \\<And>x9. T = InterfaceT x9 \\<Longrightarrow> \\<tau> init T \\<le> T", "fix x"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x6. T = ArrT x6 \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. \\<And>x7. T = CClassT x7 \\<Longrightarrow> \\<tau> init T \\<le> T\n 3. \\<And>x8. T = AClassT x8 \\<Longrightarrow> \\<tau> init T \\<le> T\n 4. \\<And>x9. T = InterfaceT x9 \\<Longrightarrow> \\<tau> init T \\<le> T", "assume c: \"T = CClassT x\""], ["proof (state)\nthis:\n  T = CClassT x\n\ngoal (4 subgoals):\n 1. \\<And>x6. T = ArrT x6 \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. \\<And>x7. T = CClassT x7 \\<Longrightarrow> \\<tau> init T \\<le> T\n 3. \\<And>x8. T = AClassT x8 \\<Longrightarrow> \\<tau> init T \\<le> T\n 4. \\<And>x9. T = InterfaceT x9 \\<Longrightarrow> \\<tau> init T \\<le> T", "show \"(\\<tau> (init T)) \\<le> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> init T \\<le> T", "using c"], ["proof (prove)\nusing this:\n  T = CClassT x\n\ngoal (1 subgoal):\n 1. \\<tau> init T \\<le> T", "by (cases x, simp_all)"], ["proof (state)\nthis:\n  \\<tau> init T \\<le> T\n\ngoal (3 subgoals):\n 1. \\<And>x6. T = ArrT x6 \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. \\<And>x8. T = AClassT x8 \\<Longrightarrow> \\<tau> init T \\<le> T\n 3. \\<And>x9. T = InterfaceT x9 \\<Longrightarrow> \\<tau> init T \\<le> T", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x6. T = ArrT x6 \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. \\<And>x8. T = AClassT x8 \\<Longrightarrow> \\<tau> init T \\<le> T\n 3. \\<And>x9. T = InterfaceT x9 \\<Longrightarrow> \\<tau> init T \\<le> T", "fix x"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x6. T = ArrT x6 \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. \\<And>x8. T = AClassT x8 \\<Longrightarrow> \\<tau> init T \\<le> T\n 3. \\<And>x9. T = InterfaceT x9 \\<Longrightarrow> \\<tau> init T \\<le> T", "assume c: \"T = AClassT x\""], ["proof (state)\nthis:\n  T = AClassT x\n\ngoal (3 subgoals):\n 1. \\<And>x6. T = ArrT x6 \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. \\<And>x8. T = AClassT x8 \\<Longrightarrow> \\<tau> init T \\<le> T\n 3. \\<And>x9. T = InterfaceT x9 \\<Longrightarrow> \\<tau> init T \\<le> T", "show \"(\\<tau> (init T)) \\<le> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> init T \\<le> T", "using c"], ["proof (prove)\nusing this:\n  T = AClassT x\n\ngoal (1 subgoal):\n 1. \\<tau> init T \\<le> T", "by (cases x, simp_all)"], ["proof (state)\nthis:\n  \\<tau> init T \\<le> T\n\ngoal (2 subgoals):\n 1. \\<And>x6. T = ArrT x6 \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. \\<And>x9. T = InterfaceT x9 \\<Longrightarrow> \\<tau> init T \\<le> T", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x6. T = ArrT x6 \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. \\<And>x9. T = InterfaceT x9 \\<Longrightarrow> \\<tau> init T \\<le> T", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x6. T = ArrT x6 \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. \\<And>x9. T = InterfaceT x9 \\<Longrightarrow> \\<tau> init T \\<le> T", "assume c: \"T = InterfaceT x\""], ["proof (state)\nthis:\n  T = InterfaceT x\n\ngoal (2 subgoals):\n 1. \\<And>x6. T = ArrT x6 \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. \\<And>x9. T = InterfaceT x9 \\<Longrightarrow> \\<tau> init T \\<le> T", "show \"(\\<tau> (init T)) \\<le> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> init T \\<le> T", "using c"], ["proof (prove)\nusing this:\n  T = InterfaceT x\n\ngoal (1 subgoal):\n 1. \\<tau> init T \\<le> T", "by (cases x, simp_all)"], ["proof (state)\nthis:\n  \\<tau> init T \\<le> T\n\ngoal (1 subgoal):\n 1. \\<And>x6. T = ArrT x6 \\<Longrightarrow> \\<tau> init T \\<le> T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x6. T = ArrT x6 \\<Longrightarrow> \\<tau> init T \\<le> T", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x6. T = ArrT x6 \\<Longrightarrow> \\<tau> init T \\<le> T", "assume c: \"T = ArrT x\""], ["proof (state)\nthis:\n  T = ArrT x\n\ngoal (1 subgoal):\n 1. \\<And>x6. T = ArrT x6 \\<Longrightarrow> \\<tau> init T \\<le> T", "show \"(\\<tau> (init T)) \\<le> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> init T \\<le> T", "using c"], ["proof (prove)\nusing this:\n  T = ArrT x\n\ngoal (1 subgoal):\n 1. \\<tau> init T \\<le> T", "proof (cases x)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<lbrakk>T = ArrT x; x = BoolAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. \\<lbrakk>T = ArrT x; x = IntgAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 3. \\<lbrakk>T = ArrT x; x = ShortAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 4. \\<lbrakk>T = ArrT x; x = ByteAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 5. \\<And>x5.\n       \\<lbrakk>T = ArrT x; x = CClassAT x5\\<rbrakk>\n       \\<Longrightarrow> \\<tau> init T \\<le> T\n 6. \\<And>x6.\n       \\<lbrakk>T = ArrT x; x = AClassAT x6\\<rbrakk>\n       \\<Longrightarrow> \\<tau> init T \\<le> T\n 7. \\<And>x7.\n       \\<lbrakk>T = ArrT x; x = InterfaceAT x7\\<rbrakk>\n       \\<Longrightarrow> \\<tau> init T \\<le> T", "fix y"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<lbrakk>T = ArrT x; x = BoolAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. \\<lbrakk>T = ArrT x; x = IntgAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 3. \\<lbrakk>T = ArrT x; x = ShortAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 4. \\<lbrakk>T = ArrT x; x = ByteAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 5. \\<And>x5.\n       \\<lbrakk>T = ArrT x; x = CClassAT x5\\<rbrakk>\n       \\<Longrightarrow> \\<tau> init T \\<le> T\n 6. \\<And>x6.\n       \\<lbrakk>T = ArrT x; x = AClassAT x6\\<rbrakk>\n       \\<Longrightarrow> \\<tau> init T \\<le> T\n 7. \\<And>x7.\n       \\<lbrakk>T = ArrT x; x = InterfaceAT x7\\<rbrakk>\n       \\<Longrightarrow> \\<tau> init T \\<le> T", "assume c2: \"x = CClassAT y\""], ["proof (state)\nthis:\n  x = CClassAT y\n\ngoal (7 subgoals):\n 1. \\<lbrakk>T = ArrT x; x = BoolAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. \\<lbrakk>T = ArrT x; x = IntgAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 3. \\<lbrakk>T = ArrT x; x = ShortAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 4. \\<lbrakk>T = ArrT x; x = ByteAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 5. \\<And>x5.\n       \\<lbrakk>T = ArrT x; x = CClassAT x5\\<rbrakk>\n       \\<Longrightarrow> \\<tau> init T \\<le> T\n 6. \\<And>x6.\n       \\<lbrakk>T = ArrT x; x = AClassAT x6\\<rbrakk>\n       \\<Longrightarrow> \\<tau> init T \\<le> T\n 7. \\<And>x7.\n       \\<lbrakk>T = ArrT x; x = InterfaceAT x7\\<rbrakk>\n       \\<Longrightarrow> \\<tau> init T \\<le> T", "show \"(\\<tau> (init T)) \\<le> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> init T \\<le> T", "using c c2"], ["proof (prove)\nusing this:\n  T = ArrT x\n  x = CClassAT y\n\ngoal (1 subgoal):\n 1. \\<tau> init T \\<le> T", "by (cases y, simp_all)"], ["proof (state)\nthis:\n  \\<tau> init T \\<le> T\n\ngoal (6 subgoals):\n 1. \\<lbrakk>T = ArrT x; x = BoolAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. \\<lbrakk>T = ArrT x; x = IntgAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 3. \\<lbrakk>T = ArrT x; x = ShortAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 4. \\<lbrakk>T = ArrT x; x = ByteAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 5. \\<And>x6.\n       \\<lbrakk>T = ArrT x; x = AClassAT x6\\<rbrakk>\n       \\<Longrightarrow> \\<tau> init T \\<le> T\n 6. \\<And>x7.\n       \\<lbrakk>T = ArrT x; x = InterfaceAT x7\\<rbrakk>\n       \\<Longrightarrow> \\<tau> init T \\<le> T", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<lbrakk>T = ArrT x; x = BoolAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. \\<lbrakk>T = ArrT x; x = IntgAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 3. \\<lbrakk>T = ArrT x; x = ShortAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 4. \\<lbrakk>T = ArrT x; x = ByteAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 5. \\<And>x6.\n       \\<lbrakk>T = ArrT x; x = AClassAT x6\\<rbrakk>\n       \\<Longrightarrow> \\<tau> init T \\<le> T\n 6. \\<And>x7.\n       \\<lbrakk>T = ArrT x; x = InterfaceAT x7\\<rbrakk>\n       \\<Longrightarrow> \\<tau> init T \\<le> T", "fix y"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<lbrakk>T = ArrT x; x = BoolAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. \\<lbrakk>T = ArrT x; x = IntgAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 3. \\<lbrakk>T = ArrT x; x = ShortAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 4. \\<lbrakk>T = ArrT x; x = ByteAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 5. \\<And>x6.\n       \\<lbrakk>T = ArrT x; x = AClassAT x6\\<rbrakk>\n       \\<Longrightarrow> \\<tau> init T \\<le> T\n 6. \\<And>x7.\n       \\<lbrakk>T = ArrT x; x = InterfaceAT x7\\<rbrakk>\n       \\<Longrightarrow> \\<tau> init T \\<le> T", "assume c2: \"x = AClassAT y\""], ["proof (state)\nthis:\n  x = AClassAT y\n\ngoal (6 subgoals):\n 1. \\<lbrakk>T = ArrT x; x = BoolAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. \\<lbrakk>T = ArrT x; x = IntgAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 3. \\<lbrakk>T = ArrT x; x = ShortAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 4. \\<lbrakk>T = ArrT x; x = ByteAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 5. \\<And>x6.\n       \\<lbrakk>T = ArrT x; x = AClassAT x6\\<rbrakk>\n       \\<Longrightarrow> \\<tau> init T \\<le> T\n 6. \\<And>x7.\n       \\<lbrakk>T = ArrT x; x = InterfaceAT x7\\<rbrakk>\n       \\<Longrightarrow> \\<tau> init T \\<le> T", "show \"(\\<tau> (init T)) \\<le> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> init T \\<le> T", "using c c2"], ["proof (prove)\nusing this:\n  T = ArrT x\n  x = AClassAT y\n\ngoal (1 subgoal):\n 1. \\<tau> init T \\<le> T", "by (cases y, simp_all)"], ["proof (state)\nthis:\n  \\<tau> init T \\<le> T\n\ngoal (5 subgoals):\n 1. \\<lbrakk>T = ArrT x; x = BoolAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. \\<lbrakk>T = ArrT x; x = IntgAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 3. \\<lbrakk>T = ArrT x; x = ShortAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 4. \\<lbrakk>T = ArrT x; x = ByteAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 5. \\<And>x7.\n       \\<lbrakk>T = ArrT x; x = InterfaceAT x7\\<rbrakk>\n       \\<Longrightarrow> \\<tau> init T \\<le> T", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<lbrakk>T = ArrT x; x = BoolAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. \\<lbrakk>T = ArrT x; x = IntgAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 3. \\<lbrakk>T = ArrT x; x = ShortAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 4. \\<lbrakk>T = ArrT x; x = ByteAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 5. \\<And>x7.\n       \\<lbrakk>T = ArrT x; x = InterfaceAT x7\\<rbrakk>\n       \\<Longrightarrow> \\<tau> init T \\<le> T", "fix y"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<lbrakk>T = ArrT x; x = BoolAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. \\<lbrakk>T = ArrT x; x = IntgAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 3. \\<lbrakk>T = ArrT x; x = ShortAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 4. \\<lbrakk>T = ArrT x; x = ByteAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 5. \\<And>x7.\n       \\<lbrakk>T = ArrT x; x = InterfaceAT x7\\<rbrakk>\n       \\<Longrightarrow> \\<tau> init T \\<le> T", "assume c2: \"x = InterfaceAT y\""], ["proof (state)\nthis:\n  x = InterfaceAT y\n\ngoal (5 subgoals):\n 1. \\<lbrakk>T = ArrT x; x = BoolAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. \\<lbrakk>T = ArrT x; x = IntgAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 3. \\<lbrakk>T = ArrT x; x = ShortAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 4. \\<lbrakk>T = ArrT x; x = ByteAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 5. \\<And>x7.\n       \\<lbrakk>T = ArrT x; x = InterfaceAT x7\\<rbrakk>\n       \\<Longrightarrow> \\<tau> init T \\<le> T", "show \"(\\<tau> (init T)) \\<le> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> init T \\<le> T", "using c c2"], ["proof (prove)\nusing this:\n  T = ArrT x\n  x = InterfaceAT y\n\ngoal (1 subgoal):\n 1. \\<tau> init T \\<le> T", "by (cases y, simp_all)"], ["proof (state)\nthis:\n  \\<tau> init T \\<le> T\n\ngoal (4 subgoals):\n 1. \\<lbrakk>T = ArrT x; x = BoolAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. \\<lbrakk>T = ArrT x; x = IntgAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 3. \\<lbrakk>T = ArrT x; x = ShortAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 4. \\<lbrakk>T = ArrT x; x = ByteAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<lbrakk>T = ArrT x; x = BoolAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. \\<lbrakk>T = ArrT x; x = IntgAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 3. \\<lbrakk>T = ArrT x; x = ShortAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 4. \\<lbrakk>T = ArrT x; x = ByteAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T", "assume c2: \"x = BoolAT\""], ["proof (state)\nthis:\n  x = BoolAT\n\ngoal (4 subgoals):\n 1. \\<lbrakk>T = ArrT x; x = BoolAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. \\<lbrakk>T = ArrT x; x = IntgAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 3. \\<lbrakk>T = ArrT x; x = ShortAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 4. \\<lbrakk>T = ArrT x; x = ByteAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T", "show \"(\\<tau> (init T)) \\<le> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> init T \\<le> T", "using c c2"], ["proof (prove)\nusing this:\n  T = ArrT x\n  x = BoolAT\n\ngoal (1 subgoal):\n 1. \\<tau> init T \\<le> T", "by simp"], ["proof (state)\nthis:\n  \\<tau> init T \\<le> T\n\ngoal (3 subgoals):\n 1. \\<lbrakk>T = ArrT x; x = IntgAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. \\<lbrakk>T = ArrT x; x = ShortAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 3. \\<lbrakk>T = ArrT x; x = ByteAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>T = ArrT x; x = IntgAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. \\<lbrakk>T = ArrT x; x = ShortAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 3. \\<lbrakk>T = ArrT x; x = ByteAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T", "assume c2: \"x = IntgAT\""], ["proof (state)\nthis:\n  x = IntgAT\n\ngoal (3 subgoals):\n 1. \\<lbrakk>T = ArrT x; x = IntgAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. \\<lbrakk>T = ArrT x; x = ShortAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 3. \\<lbrakk>T = ArrT x; x = ByteAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T", "show \"(\\<tau> (init T)) \\<le> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> init T \\<le> T", "using c c2"], ["proof (prove)\nusing this:\n  T = ArrT x\n  x = IntgAT\n\ngoal (1 subgoal):\n 1. \\<tau> init T \\<le> T", "by simp"], ["proof (state)\nthis:\n  \\<tau> init T \\<le> T\n\ngoal (2 subgoals):\n 1. \\<lbrakk>T = ArrT x; x = ShortAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. \\<lbrakk>T = ArrT x; x = ByteAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>T = ArrT x; x = ShortAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. \\<lbrakk>T = ArrT x; x = ByteAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T", "assume c2: \"x = ShortAT\""], ["proof (state)\nthis:\n  x = ShortAT\n\ngoal (2 subgoals):\n 1. \\<lbrakk>T = ArrT x; x = ShortAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T\n 2. \\<lbrakk>T = ArrT x; x = ByteAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T", "show \"(\\<tau> (init T)) \\<le> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> init T \\<le> T", "using c c2"], ["proof (prove)\nusing this:\n  T = ArrT x\n  x = ShortAT\n\ngoal (1 subgoal):\n 1. \\<tau> init T \\<le> T", "by simp"], ["proof (state)\nthis:\n  \\<tau> init T \\<le> T\n\ngoal (1 subgoal):\n 1. \\<lbrakk>T = ArrT x; x = ByteAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>T = ArrT x; x = ByteAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T", "assume c2: \"x = ByteAT\""], ["proof (state)\nthis:\n  x = ByteAT\n\ngoal (1 subgoal):\n 1. \\<lbrakk>T = ArrT x; x = ByteAT\\<rbrakk>\n    \\<Longrightarrow> \\<tau> init T \\<le> T", "show \"(\\<tau> (init T)) \\<le> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> init T \\<le> T", "using c c2"], ["proof (prove)\nusing this:\n  T = ArrT x\n  x = ByteAT\n\ngoal (1 subgoal):\n 1. \\<tau> init T \\<le> T", "by simp"], ["proof (state)\nthis:\n  \\<tau> init T \\<le> T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<tau> init T \\<le> T\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}