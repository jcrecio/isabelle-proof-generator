{"file_name": "/home/qj213/afp-2021-10-22/thys/CSP_RefTK/Properties.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CSP_RefTK", "problem_names": ["lemma deadlock_free_implies_div_free: \"deadlock_free P \\<Longrightarrow> D P = {}\"", "lemma deadlock_free_implies_non_terminating: \"deadlock_free (P::'a process) \\<Longrightarrow> \\<forall>s\\<in>T P. tickFree s\"", "lemma deadlock_free_v2_is_right: \n  \"deadlock_free_v2 (P::'a process) \\<longleftrightarrow> (\\<forall>s\\<in>T P. tickFree s \\<longrightarrow> (s, UNIV::'a event set) \\<notin> F P)\"", "lemma deadlock_free_v2_implies_div_free: \"deadlock_free_v2 P \\<Longrightarrow> D P = {}\"", "lemma all_events_refusal: \n                        \"(s, {tick} \\<union> ev ` (events_of P)) \\<in> F P \\<Longrightarrow> (s, UNIV::'a event set) \\<in> F P\"", "lemma deadlock_free_is_deadlock_free_v2:\n  \"deadlock_free P \\<Longrightarrow> deadlock_free_v2 P\"", "lemma non_terminating_is_right: \"non_terminating (P::'a process) \\<longleftrightarrow> (\\<forall>s\\<in>T P. tickFree s)\"", "lemma nonterminating_implies_div_free: \"non_terminating P \\<Longrightarrow> D P = {}\"", "lemma non_terminating_implies_F: \"non_terminating P \\<Longrightarrow> CHAOS UNIV \\<sqsubseteq>\\<^sub>F P\"", "lemma div_free_divergence_refine:\n  \"D P = {} \\<longleftrightarrow> CHAOS\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV \\<sqsubseteq>\\<^sub>D P\" \n  \"D P = {} \\<longleftrightarrow> CHAOS UNIV \\<sqsubseteq>\\<^sub>D P\" \n  \"D P = {} \\<longleftrightarrow> RUN UNIV \\<sqsubseteq>\\<^sub>D P\" \n  \"D P = {} \\<longleftrightarrow> DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV \\<sqsubseteq>\\<^sub>D P\" \n  \"D P = {} \\<longleftrightarrow> DF UNIV \\<sqsubseteq>\\<^sub>D P\"", "lemma div_free_is_lifelock_free_v2: \"lifelock_free_v2 P \\<longleftrightarrow> D P = {}\"", "lemma lifelock_free_is_lifelock_free_v2: \"lifelock_free P \\<Longrightarrow> lifelock_free_v2 P\"", "lemma non_terminating_seq: \"non_terminating P \\<Longrightarrow> (P `;` Q) = P\"", "lemma non_terminating_inter: \"non_terminating P \\<Longrightarrow> lifelock_free_v2 Q \\<Longrightarrow> non_terminating (P \\<lbrakk>C\\<rbrakk> Q)\""], "translations": [["", "lemma deadlock_free_implies_div_free: \"deadlock_free P \\<Longrightarrow> D P = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. deadlock_free P \\<Longrightarrow> D P = {}", "by (simp add: deadlock_free_def div_free_DF failure_divergence_refine_def le_ref_def)"], ["", "lemma deadlock_free_implies_non_terminating: \"deadlock_free (P::'a process) \\<Longrightarrow> \\<forall>s\\<in>T P. tickFree s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. deadlock_free P \\<Longrightarrow> \\<forall>s\\<in>T P. tickFree s", "unfolding deadlock_free_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. DF UNIV \\<sqsubseteq>\\<^sub>F\\<^sub>D P \\<Longrightarrow>\n    \\<forall>s\\<in>T P. tickFree s", "apply(drule FD_F, drule le_F_T)"], ["proof (prove)\ngoal (1 subgoal):\n 1. DF UNIV \\<sqsubseteq>\\<^sub>T P \\<Longrightarrow>\n    \\<forall>s\\<in>T P. tickFree s", "unfolding trace_refine_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. T P \\<subseteq> T (DF UNIV) \\<Longrightarrow>\n    \\<forall>s\\<in>T P. tickFree s", "using DF_all_tickfree_traces1[of \"(UNIV::'a set)\"] tickFree_def"], ["proof (prove)\nusing this:\n  T (DF UNIV) = {s. set s \\<subseteq> range ev}\n  tickFree ?s = (tick \\<notin> set ?s)\n\ngoal (1 subgoal):\n 1. T P \\<subseteq> T (DF UNIV) \\<Longrightarrow>\n    \\<forall>s\\<in>T P. tickFree s", "by fastforce"], ["", "definition deadlock_free_v2 :: \"'a process \\<Rightarrow> bool\"\n  where   \"deadlock_free_v2 P \\<equiv> DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV \\<sqsubseteq>\\<^sub>F P\""], ["", "lemma deadlock_free_v2_is_right: \n  \"deadlock_free_v2 (P::'a process) \\<longleftrightarrow> (\\<forall>s\\<in>T P. tickFree s \\<longrightarrow> (s, UNIV::'a event set) \\<notin> F P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. deadlock_free_v2 P =\n    (\\<forall>s\\<in>T P.\n        tickFree s \\<longrightarrow> (s, UNIV) \\<notin> F P)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. deadlock_free_v2 P \\<Longrightarrow>\n    \\<forall>s\\<in>T P. tickFree s \\<longrightarrow> (s, UNIV) \\<notin> F P\n 2. \\<forall>s\\<in>T P.\n       tickFree s \\<longrightarrow> (s, UNIV) \\<notin> F P \\<Longrightarrow>\n    deadlock_free_v2 P", "assume a:\"deadlock_free_v2 P\""], ["proof (state)\nthis:\n  deadlock_free_v2 P\n\ngoal (2 subgoals):\n 1. deadlock_free_v2 P \\<Longrightarrow>\n    \\<forall>s\\<in>T P. tickFree s \\<longrightarrow> (s, UNIV) \\<notin> F P\n 2. \\<forall>s\\<in>T P.\n       tickFree s \\<longrightarrow> (s, UNIV) \\<notin> F P \\<Longrightarrow>\n    deadlock_free_v2 P", "have \"tickFree s \\<longrightarrow> (s, UNIV) \\<notin> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)\" for s::\"'a event list\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tickFree s \\<longrightarrow>\n    (s, UNIV) \\<notin> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)", "proof(induct s)"], ["proof (state)\ngoal (2 subgoals):\n 1. tickFree [] \\<longrightarrow>\n    ([], UNIV) \\<notin> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)\n 2. \\<And>a s.\n       tickFree s \\<longrightarrow>\n       (s, UNIV)\n       \\<notin> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P\n                    UNIV) \\<Longrightarrow>\n       tickFree (a # s) \\<longrightarrow>\n       (a # s, UNIV) \\<notin> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)", "case Nil"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. tickFree [] \\<longrightarrow>\n    ([], UNIV) \\<notin> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)\n 2. \\<And>a s.\n       tickFree s \\<longrightarrow>\n       (s, UNIV)\n       \\<notin> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P\n                    UNIV) \\<Longrightarrow>\n       tickFree (a # s) \\<longrightarrow>\n       (a # s, UNIV) \\<notin> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. tickFree [] \\<longrightarrow>\n    ([], UNIV) \\<notin> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)", "by (subst DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P_unfold, simp add:F_mndet write0_def F_Mprefix F_ndet F_SKIP)"], ["proof (state)\nthis:\n  tickFree [] \\<longrightarrow>\n  ([], UNIV) \\<notin> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)\n\ngoal (1 subgoal):\n 1. \\<And>a s.\n       tickFree s \\<longrightarrow>\n       (s, UNIV)\n       \\<notin> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P\n                    UNIV) \\<Longrightarrow>\n       tickFree (a # s) \\<longrightarrow>\n       (a # s, UNIV) \\<notin> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a s.\n       tickFree s \\<longrightarrow>\n       (s, UNIV)\n       \\<notin> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P\n                    UNIV) \\<Longrightarrow>\n       tickFree (a # s) \\<longrightarrow>\n       (a # s, UNIV) \\<notin> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)", "case (Cons a s)"], ["proof (state)\nthis:\n  tickFree s \\<longrightarrow>\n  (s, UNIV) \\<notin> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)\n\ngoal (1 subgoal):\n 1. \\<And>a s.\n       tickFree s \\<longrightarrow>\n       (s, UNIV)\n       \\<notin> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P\n                    UNIV) \\<Longrightarrow>\n       tickFree (a # s) \\<longrightarrow>\n       (a # s, UNIV) \\<notin> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)", "then"], ["proof (chain)\npicking this:\n  tickFree s \\<longrightarrow>\n  (s, UNIV) \\<notin> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)", "show ?case"], ["proof (prove)\nusing this:\n  tickFree s \\<longrightarrow>\n  (s, UNIV) \\<notin> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)\n\ngoal (1 subgoal):\n 1. tickFree (a # s) \\<longrightarrow>\n    (a # s, UNIV) \\<notin> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)", "by (subst DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P_unfold, simp add:F_mndet write0_def F_Mprefix F_ndet F_SKIP)"], ["proof (state)\nthis:\n  tickFree (a # s) \\<longrightarrow>\n  (a # s, UNIV) \\<notin> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  tickFree ?s \\<longrightarrow>\n  (?s, UNIV) \\<notin> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)\n\ngoal (2 subgoals):\n 1. deadlock_free_v2 P \\<Longrightarrow>\n    \\<forall>s\\<in>T P. tickFree s \\<longrightarrow> (s, UNIV) \\<notin> F P\n 2. \\<forall>s\\<in>T P.\n       tickFree s \\<longrightarrow> (s, UNIV) \\<notin> F P \\<Longrightarrow>\n    deadlock_free_v2 P", "with a"], ["proof (chain)\npicking this:\n  deadlock_free_v2 P\n  tickFree ?s \\<longrightarrow>\n  (?s, UNIV) \\<notin> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)", "show \"\\<forall>s\\<in>T P. tickFree s \\<longrightarrow> (s, UNIV) \\<notin> F P\""], ["proof (prove)\nusing this:\n  deadlock_free_v2 P\n  tickFree ?s \\<longrightarrow>\n  (?s, UNIV) \\<notin> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)\n\ngoal (1 subgoal):\n 1. \\<forall>s\\<in>T P. tickFree s \\<longrightarrow> (s, UNIV) \\<notin> F P", "using deadlock_free_v2_def failure_refine_def"], ["proof (prove)\nusing this:\n  deadlock_free_v2 P\n  tickFree ?s \\<longrightarrow>\n  (?s, UNIV) \\<notin> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)\n  deadlock_free_v2 ?P \\<equiv>\n  DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV \\<sqsubseteq>\\<^sub>F ?P\n  ?P \\<sqsubseteq>\\<^sub>F ?Q \\<equiv> F ?Q \\<subseteq> F ?P\n\ngoal (1 subgoal):\n 1. \\<forall>s\\<in>T P. tickFree s \\<longrightarrow> (s, UNIV) \\<notin> F P", "by blast"], ["proof (state)\nthis:\n  \\<forall>s\\<in>T P. tickFree s \\<longrightarrow> (s, UNIV) \\<notin> F P\n\ngoal (1 subgoal):\n 1. \\<forall>s\\<in>T P.\n       tickFree s \\<longrightarrow> (s, UNIV) \\<notin> F P \\<Longrightarrow>\n    deadlock_free_v2 P", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>s\\<in>T P.\n       tickFree s \\<longrightarrow> (s, UNIV) \\<notin> F P \\<Longrightarrow>\n    deadlock_free_v2 P", "assume as1:\"\\<forall>s\\<in>T P. tickFree s \\<longrightarrow> (s, UNIV) \\<notin> F P\""], ["proof (state)\nthis:\n  \\<forall>s\\<in>T P. tickFree s \\<longrightarrow> (s, UNIV) \\<notin> F P\n\ngoal (1 subgoal):\n 1. \\<forall>s\\<in>T P.\n       tickFree s \\<longrightarrow> (s, UNIV) \\<notin> F P \\<Longrightarrow>\n    deadlock_free_v2 P", "have as2:\"front_tickFree s \\<Longrightarrow> (\\<exists>aa \\<in> UNIV. ev aa \\<notin> b) \\<Longrightarrow> (s, b) \\<in> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P (UNIV::'a set))\" \n       for s b"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>front_tickFree s;\n     \\<exists>aa\\<in>UNIV. ev aa \\<notin> b\\<rbrakk>\n    \\<Longrightarrow> (s, b)\n                      \\<in> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)", "proof(induct s)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>front_tickFree [];\n     \\<exists>aa\\<in>UNIV. ev aa \\<notin> b\\<rbrakk>\n    \\<Longrightarrow> ([], b)\n                      \\<in> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)\n 2. \\<And>a s.\n       \\<lbrakk>\\<lbrakk>front_tickFree s;\n                 \\<exists>aa\\<in>UNIV. ev aa \\<notin> b\\<rbrakk>\n                \\<Longrightarrow> (s, b)\n                                  \\<in> F\n   (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV);\n        front_tickFree (a # s);\n        \\<exists>aa\\<in>UNIV. ev aa \\<notin> b\\<rbrakk>\n       \\<Longrightarrow> (a # s, b)\n                         \\<in> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)", "case Nil"], ["proof (state)\nthis:\n  front_tickFree []\n  \\<exists>aa\\<in>UNIV. ev aa \\<notin> b\n\ngoal (2 subgoals):\n 1. \\<lbrakk>front_tickFree [];\n     \\<exists>aa\\<in>UNIV. ev aa \\<notin> b\\<rbrakk>\n    \\<Longrightarrow> ([], b)\n                      \\<in> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)\n 2. \\<And>a s.\n       \\<lbrakk>\\<lbrakk>front_tickFree s;\n                 \\<exists>aa\\<in>UNIV. ev aa \\<notin> b\\<rbrakk>\n                \\<Longrightarrow> (s, b)\n                                  \\<in> F\n   (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV);\n        front_tickFree (a # s);\n        \\<exists>aa\\<in>UNIV. ev aa \\<notin> b\\<rbrakk>\n       \\<Longrightarrow> (a # s, b)\n                         \\<in> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)", "then"], ["proof (chain)\npicking this:\n  front_tickFree []\n  \\<exists>aa\\<in>UNIV. ev aa \\<notin> b", "show ?case"], ["proof (prove)\nusing this:\n  front_tickFree []\n  \\<exists>aa\\<in>UNIV. ev aa \\<notin> b\n\ngoal (1 subgoal):\n 1. ([], b) \\<in> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)", "by (subst DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P_unfold, auto simp add:F_mndet write0_def F_Mprefix F_ndet F_SKIP)"], ["proof (state)\nthis:\n  ([], b) \\<in> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)\n\ngoal (1 subgoal):\n 1. \\<And>a s.\n       \\<lbrakk>\\<lbrakk>front_tickFree s;\n                 \\<exists>aa\\<in>UNIV. ev aa \\<notin> b\\<rbrakk>\n                \\<Longrightarrow> (s, b)\n                                  \\<in> F\n   (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV);\n        front_tickFree (a # s);\n        \\<exists>aa\\<in>UNIV. ev aa \\<notin> b\\<rbrakk>\n       \\<Longrightarrow> (a # s, b)\n                         \\<in> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a s.\n       \\<lbrakk>\\<lbrakk>front_tickFree s;\n                 \\<exists>aa\\<in>UNIV. ev aa \\<notin> b\\<rbrakk>\n                \\<Longrightarrow> (s, b)\n                                  \\<in> F\n   (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV);\n        front_tickFree (a # s);\n        \\<exists>aa\\<in>UNIV. ev aa \\<notin> b\\<rbrakk>\n       \\<Longrightarrow> (a # s, b)\n                         \\<in> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)", "case (Cons hda tla)"], ["proof (state)\nthis:\n  \\<lbrakk>front_tickFree tla;\n   \\<exists>aa\\<in>UNIV. ev aa \\<notin> b\\<rbrakk>\n  \\<Longrightarrow> (tla, b)\n                    \\<in> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)\n  front_tickFree (hda # tla)\n  \\<exists>aa\\<in>UNIV. ev aa \\<notin> b\n\ngoal (1 subgoal):\n 1. \\<And>a s.\n       \\<lbrakk>\\<lbrakk>front_tickFree s;\n                 \\<exists>aa\\<in>UNIV. ev aa \\<notin> b\\<rbrakk>\n                \\<Longrightarrow> (s, b)\n                                  \\<in> F\n   (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV);\n        front_tickFree (a # s);\n        \\<exists>aa\\<in>UNIV. ev aa \\<notin> b\\<rbrakk>\n       \\<Longrightarrow> (a # s, b)\n                         \\<in> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>front_tickFree tla;\n   \\<exists>aa\\<in>UNIV. ev aa \\<notin> b\\<rbrakk>\n  \\<Longrightarrow> (tla, b)\n                    \\<in> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)\n  front_tickFree (hda # tla)\n  \\<exists>aa\\<in>UNIV. ev aa \\<notin> b", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>front_tickFree tla;\n   \\<exists>aa\\<in>UNIV. ev aa \\<notin> b\\<rbrakk>\n  \\<Longrightarrow> (tla, b)\n                    \\<in> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)\n  front_tickFree (hda # tla)\n  \\<exists>aa\\<in>UNIV. ev aa \\<notin> b\n\ngoal (1 subgoal):\n 1. (hda # tla, b) \\<in> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)", "proof(simp add:DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P_def fix_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>front_tickFree tla \\<Longrightarrow>\n             (tla, b)\n             \\<in> F (\\<Squnion>i.\n                         iterate i\\<cdot>\n                         (\\<Lambda> x.\n                             (\\<sqinter>xa\\<in>UNIV \\<rightarrow>  x) |-|\n                             SKIP)\\<cdot>\n                         \\<bottom>);\n     front_tickFree (hda # tla); \\<exists>aa. ev aa \\<notin> b\\<rbrakk>\n    \\<Longrightarrow> (hda # tla, b)\n                      \\<in> F (\\<Squnion>i.\n                                  iterate i\\<cdot>\n                                  (\\<Lambda> x.\n(\\<sqinter>xa\\<in>UNIV \\<rightarrow>  x) |-| SKIP)\\<cdot>\n                                  \\<bottom>)", "define Y where \"Y \\<equiv> \\<lambda>i. iterate i\\<cdot>(\\<Lambda> x. (\\<sqinter>xa\\<in>(UNIV::'a set) \\<rightarrow>  x) \\<sqinter> SKIP)\\<cdot>\\<bottom>\""], ["proof (state)\nthis:\n  Y \\<equiv>\n  \\<lambda>i.\n     iterate i\\<cdot>\n     (\\<Lambda> x. (\\<sqinter>xa\\<in>UNIV \\<rightarrow>  x) |-| SKIP)\\<cdot>\n     \\<bottom>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>front_tickFree tla \\<Longrightarrow>\n             (tla, b)\n             \\<in> F (\\<Squnion>i.\n                         iterate i\\<cdot>\n                         (\\<Lambda> x.\n                             (\\<sqinter>xa\\<in>UNIV \\<rightarrow>  x) |-|\n                             SKIP)\\<cdot>\n                         \\<bottom>);\n     front_tickFree (hda # tla); \\<exists>aa. ev aa \\<notin> b\\<rbrakk>\n    \\<Longrightarrow> (hda # tla, b)\n                      \\<in> F (\\<Squnion>i.\n                                  iterate i\\<cdot>\n                                  (\\<Lambda> x.\n(\\<sqinter>xa\\<in>UNIV \\<rightarrow>  x) |-| SKIP)\\<cdot>\n                                  \\<bottom>)", "assume a:\"front_tickFree (hda # tla)\" and b:\"front_tickFree tla \\<Longrightarrow> (tla, b) \\<in> F (\\<Squnion>i. Y i)\"\n             and c:\"\\<exists>aa. ev aa \\<notin> b\""], ["proof (state)\nthis:\n  front_tickFree (hda # tla)\n  front_tickFree tla \\<Longrightarrow> (tla, b) \\<in> F (\\<Squnion>i. Y i)\n  \\<exists>aa. ev aa \\<notin> b\n\ngoal (1 subgoal):\n 1. \\<lbrakk>front_tickFree tla \\<Longrightarrow>\n             (tla, b)\n             \\<in> F (\\<Squnion>i.\n                         iterate i\\<cdot>\n                         (\\<Lambda> x.\n                             (\\<sqinter>xa\\<in>UNIV \\<rightarrow>  x) |-|\n                             SKIP)\\<cdot>\n                         \\<bottom>);\n     front_tickFree (hda # tla); \\<exists>aa. ev aa \\<notin> b\\<rbrakk>\n    \\<Longrightarrow> (hda # tla, b)\n                      \\<in> F (\\<Squnion>i.\n                                  iterate i\\<cdot>\n                                  (\\<Lambda> x.\n(\\<sqinter>xa\\<in>UNIV \\<rightarrow>  x) |-| SKIP)\\<cdot>\n                                  \\<bottom>)", "from Y_def"], ["proof (chain)\npicking this:\n  Y \\<equiv>\n  \\<lambda>i.\n     iterate i\\<cdot>\n     (\\<Lambda> x. (\\<sqinter>xa\\<in>UNIV \\<rightarrow>  x) |-| SKIP)\\<cdot>\n     \\<bottom>", "have cc:\"chain Y\""], ["proof (prove)\nusing this:\n  Y \\<equiv>\n  \\<lambda>i.\n     iterate i\\<cdot>\n     (\\<Lambda> x. (\\<sqinter>xa\\<in>UNIV \\<rightarrow>  x) |-| SKIP)\\<cdot>\n     \\<bottom>\n\ngoal (1 subgoal):\n 1. chain Y", "by simp"], ["proof (state)\nthis:\n  chain Y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>front_tickFree tla \\<Longrightarrow>\n             (tla, b)\n             \\<in> F (\\<Squnion>i.\n                         iterate i\\<cdot>\n                         (\\<Lambda> x.\n                             (\\<sqinter>xa\\<in>UNIV \\<rightarrow>  x) |-|\n                             SKIP)\\<cdot>\n                         \\<bottom>);\n     front_tickFree (hda # tla); \\<exists>aa. ev aa \\<notin> b\\<rbrakk>\n    \\<Longrightarrow> (hda # tla, b)\n                      \\<in> F (\\<Squnion>i.\n                                  iterate i\\<cdot>\n                                  (\\<Lambda> x.\n(\\<sqinter>xa\\<in>UNIV \\<rightarrow>  x) |-| SKIP)\\<cdot>\n                                  \\<bottom>)", "from b"], ["proof (chain)\npicking this:\n  front_tickFree tla \\<Longrightarrow> (tla, b) \\<in> F (\\<Squnion>i. Y i)", "have d:\"front_tickFree tla \\<Longrightarrow> \\<exists>aa\\<in>UNIV. ev aa \\<notin> b \\<Longrightarrow>(tla, b) \\<in> F (Y i)\" for i"], ["proof (prove)\nusing this:\n  front_tickFree tla \\<Longrightarrow> (tla, b) \\<in> F (\\<Squnion>i. Y i)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>front_tickFree tla;\n     \\<exists>aa\\<in>UNIV. ev aa \\<notin> b\\<rbrakk>\n    \\<Longrightarrow> (tla, b) \\<in> F (Y i)", "using F_LUB[OF cc] limproc_is_thelub[OF cc]"], ["proof (prove)\nusing this:\n  front_tickFree tla \\<Longrightarrow> (tla, b) \\<in> F (\\<Squnion>i. Y i)\n  F (lim_proc (range Y)) = \\<Inter> (F ` range Y)\n  Lub Y = lim_proc (range Y)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>front_tickFree tla;\n     \\<exists>aa\\<in>UNIV. ev aa \\<notin> b\\<rbrakk>\n    \\<Longrightarrow> (tla, b) \\<in> F (Y i)", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>front_tickFree tla;\n   \\<exists>aa\\<in>UNIV. ev aa \\<notin> b\\<rbrakk>\n  \\<Longrightarrow> (tla, b) \\<in> F (Y ?i)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>front_tickFree tla \\<Longrightarrow>\n             (tla, b)\n             \\<in> F (\\<Squnion>i.\n                         iterate i\\<cdot>\n                         (\\<Lambda> x.\n                             (\\<sqinter>xa\\<in>UNIV \\<rightarrow>  x) |-|\n                             SKIP)\\<cdot>\n                         \\<bottom>);\n     front_tickFree (hda # tla); \\<exists>aa. ev aa \\<notin> b\\<rbrakk>\n    \\<Longrightarrow> (hda # tla, b)\n                      \\<in> F (\\<Squnion>i.\n                                  iterate i\\<cdot>\n                                  (\\<Lambda> x.\n(\\<sqinter>xa\\<in>UNIV \\<rightarrow>  x) |-| SKIP)\\<cdot>\n                                  \\<bottom>)", "from Y_def"], ["proof (chain)\npicking this:\n  Y \\<equiv>\n  \\<lambda>i.\n     iterate i\\<cdot>\n     (\\<Lambda> x. (\\<sqinter>xa\\<in>UNIV \\<rightarrow>  x) |-| SKIP)\\<cdot>\n     \\<bottom>", "have e:\"F(mndet UNIV (\\<lambda>x. Y i) \\<sqinter> SKIP) \\<subseteq> F (Y (Suc i))\" for i"], ["proof (prove)\nusing this:\n  Y \\<equiv>\n  \\<lambda>i.\n     iterate i\\<cdot>\n     (\\<Lambda> x. (\\<sqinter>xa\\<in>UNIV \\<rightarrow>  x) |-| SKIP)\\<cdot>\n     \\<bottom>\n\ngoal (1 subgoal):\n 1. F ((\\<sqinter>x\\<in>UNIV \\<rightarrow>  Y i) |-| SKIP)\n    \\<subseteq> F (Y (Suc i))", "by(simp)"], ["proof (state)\nthis:\n  F ((\\<sqinter>x\\<in>UNIV \\<rightarrow>  Y ?i) |-| SKIP)\n  \\<subseteq> F (Y (Suc ?i))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>front_tickFree tla \\<Longrightarrow>\n             (tla, b)\n             \\<in> F (\\<Squnion>i.\n                         iterate i\\<cdot>\n                         (\\<Lambda> x.\n                             (\\<sqinter>xa\\<in>UNIV \\<rightarrow>  x) |-|\n                             SKIP)\\<cdot>\n                         \\<bottom>);\n     front_tickFree (hda # tla); \\<exists>aa. ev aa \\<notin> b\\<rbrakk>\n    \\<Longrightarrow> (hda # tla, b)\n                      \\<in> F (\\<Squnion>i.\n                                  iterate i\\<cdot>\n                                  (\\<Lambda> x.\n(\\<sqinter>xa\\<in>UNIV \\<rightarrow>  x) |-| SKIP)\\<cdot>\n                                  \\<bottom>)", "from a"], ["proof (chain)\npicking this:\n  front_tickFree (hda # tla)", "have f:\"tla \\<noteq> [] \\<Longrightarrow> hda \\<noteq> tick\" \"front_tickFree tla\""], ["proof (prove)\nusing this:\n  front_tickFree (hda # tla)\n\ngoal (1 subgoal):\n 1. (tla \\<noteq> [] \\<Longrightarrow> hda \\<noteq> tick) &&&\n    front_tickFree tla", "apply (metis butlast.simps(2) butlast_snoc front_tickFree_charn \n                      list.distinct(1) tickFree_Cons)"], ["proof (prove)\ngoal (1 subgoal):\n 1. front_tickFree tla", "by (metis a append_Cons append_Nil front_tickFree_Nil front_tickFree_mono)"], ["proof (state)\nthis:\n  tla \\<noteq> [] \\<Longrightarrow> hda \\<noteq> tick\n  front_tickFree tla\n\ngoal (1 subgoal):\n 1. \\<lbrakk>front_tickFree tla \\<Longrightarrow>\n             (tla, b)\n             \\<in> F (\\<Squnion>i.\n                         iterate i\\<cdot>\n                         (\\<Lambda> x.\n                             (\\<sqinter>xa\\<in>UNIV \\<rightarrow>  x) |-|\n                             SKIP)\\<cdot>\n                         \\<bottom>);\n     front_tickFree (hda # tla); \\<exists>aa. ev aa \\<notin> b\\<rbrakk>\n    \\<Longrightarrow> (hda # tla, b)\n                      \\<in> F (\\<Squnion>i.\n                                  iterate i\\<cdot>\n                                  (\\<Lambda> x.\n(\\<sqinter>xa\\<in>UNIV \\<rightarrow>  x) |-| SKIP)\\<cdot>\n                                  \\<bottom>)", "have g:\"(hda#tla, b) \\<in> F (Y (Suc i))\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. (hda # tla, b) \\<in> F (Y (Suc i))", "using f c e[of i] d[of i]"], ["proof (prove)\nusing this:\n  tla \\<noteq> [] \\<Longrightarrow> hda \\<noteq> tick\n  front_tickFree tla\n  \\<exists>aa. ev aa \\<notin> b\n  F ((\\<sqinter>x\\<in>UNIV \\<rightarrow>  Y i) |-| SKIP)\n  \\<subseteq> F (Y (Suc i))\n  \\<lbrakk>front_tickFree tla;\n   \\<exists>aa\\<in>UNIV. ev aa \\<notin> b\\<rbrakk>\n  \\<Longrightarrow> (tla, b) \\<in> F (Y i)\n\ngoal (1 subgoal):\n 1. (hda # tla, b) \\<in> F (Y (Suc i))", "by (auto simp: F_mndet write0_def F_Mprefix Y_def F_ndet F_SKIP) (metis event.exhaust)+"], ["proof (state)\nthis:\n  (hda # tla, b) \\<in> F (Y (Suc ?i))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>front_tickFree tla \\<Longrightarrow>\n             (tla, b)\n             \\<in> F (\\<Squnion>i.\n                         iterate i\\<cdot>\n                         (\\<Lambda> x.\n                             (\\<sqinter>xa\\<in>UNIV \\<rightarrow>  x) |-|\n                             SKIP)\\<cdot>\n                         \\<bottom>);\n     front_tickFree (hda # tla); \\<exists>aa. ev aa \\<notin> b\\<rbrakk>\n    \\<Longrightarrow> (hda # tla, b)\n                      \\<in> F (\\<Squnion>i.\n                                  iterate i\\<cdot>\n                                  (\\<Lambda> x.\n(\\<sqinter>xa\\<in>UNIV \\<rightarrow>  x) |-| SKIP)\\<cdot>\n                                  \\<bottom>)", "have h:\"(hda#tla, b) \\<in> F (Y 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (hda # tla, b) \\<in> F (Y 0)", "using NF_ND cc g po_class.chainE proc_ord2a"], ["proof (prove)\nusing this:\n  (?s, ?X) \\<notin> F ?P \\<Longrightarrow> ?s \\<notin> D ?P\n  chain Y\n  (hda # tla, b) \\<in> F (Y (Suc ?i))\n  chain ?Y \\<Longrightarrow> ?Y ?i \\<sqsubseteq> ?Y (Suc ?i)\n  \\<lbrakk>?P \\<sqsubseteq> ?Q; ?s \\<notin> D ?P\\<rbrakk>\n  \\<Longrightarrow> ((?s, ?X) \\<in> F ?P) = ((?s, ?X) \\<in> F ?Q)\n\ngoal (1 subgoal):\n 1. (hda # tla, b) \\<in> F (Y 0)", "by blast"], ["proof (state)\nthis:\n  (hda # tla, b) \\<in> F (Y 0)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>front_tickFree tla \\<Longrightarrow>\n             (tla, b)\n             \\<in> F (\\<Squnion>i.\n                         iterate i\\<cdot>\n                         (\\<Lambda> x.\n                             (\\<sqinter>xa\\<in>UNIV \\<rightarrow>  x) |-|\n                             SKIP)\\<cdot>\n                         \\<bottom>);\n     front_tickFree (hda # tla); \\<exists>aa. ev aa \\<notin> b\\<rbrakk>\n    \\<Longrightarrow> (hda # tla, b)\n                      \\<in> F (\\<Squnion>i.\n                                  iterate i\\<cdot>\n                                  (\\<Lambda> x.\n(\\<sqinter>xa\\<in>UNIV \\<rightarrow>  x) |-| SKIP)\\<cdot>\n                                  \\<bottom>)", "from a b c"], ["proof (chain)\npicking this:\n  front_tickFree (hda # tla)\n  front_tickFree tla \\<Longrightarrow> (tla, b) \\<in> F (\\<Squnion>i. Y i)\n  \\<exists>aa. ev aa \\<notin> b", "show \"(hda#tla, b) \\<in> F (\\<Squnion>i. Y i)\""], ["proof (prove)\nusing this:\n  front_tickFree (hda # tla)\n  front_tickFree tla \\<Longrightarrow> (tla, b) \\<in> F (\\<Squnion>i. Y i)\n  \\<exists>aa. ev aa \\<notin> b\n\ngoal (1 subgoal):\n 1. (hda # tla, b) \\<in> F (\\<Squnion>i. Y i)", "using F_LUB[OF cc] is_ub_thelub[OF cc]"], ["proof (prove)\nusing this:\n  front_tickFree (hda # tla)\n  front_tickFree tla \\<Longrightarrow> (tla, b) \\<in> F (\\<Squnion>i. Y i)\n  \\<exists>aa. ev aa \\<notin> b\n  F (lim_proc (range Y)) = \\<Inter> (F ` range Y)\n  Y ?x \\<sqsubseteq> (\\<Squnion>i. Y i)\n\ngoal (1 subgoal):\n 1. (hda # tla, b) \\<in> F (\\<Squnion>i. Y i)", "by (metis D_LUB_2 cc g limproc_is_thelub po_class.chainE proc_ord2a process_charn)"], ["proof (state)\nthis:\n  (hda # tla, b) \\<in> F (\\<Squnion>i. Y i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (hda # tla, b) \\<in> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>front_tickFree ?s;\n   \\<exists>aa\\<in>UNIV. ev aa \\<notin> ?b\\<rbrakk>\n  \\<Longrightarrow> (?s, ?b)\n                    \\<in> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)\n\ngoal (1 subgoal):\n 1. \\<forall>s\\<in>T P.\n       tickFree s \\<longrightarrow> (s, UNIV) \\<notin> F P \\<Longrightarrow>\n    deadlock_free_v2 P", "show \"deadlock_free_v2 P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. deadlock_free_v2 P", "proof(auto simp add:deadlock_free_v2_def failure_refine_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (a, b) \\<in> F P \\<Longrightarrow>\n       (a, b) \\<in> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)", "fix s b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (a, b) \\<in> F P \\<Longrightarrow>\n       (a, b) \\<in> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)", "assume as3:\"(s, b) \\<in> F P\""], ["proof (state)\nthis:\n  (s, b) \\<in> F P\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (a, b) \\<in> F P \\<Longrightarrow>\n       (a, b) \\<in> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)", "hence a1:\"s \\<in> T P\" \"front_tickFree s\""], ["proof (prove)\nusing this:\n  (s, b) \\<in> F P\n\ngoal (1 subgoal):\n 1. s \\<in> T P &&& front_tickFree s", "using F_T"], ["proof (prove)\nusing this:\n  (s, b) \\<in> F P\n  (?s, ?X) \\<in> F ?P \\<Longrightarrow> ?s \\<in> T ?P\n\ngoal (1 subgoal):\n 1. s \\<in> T P &&& front_tickFree s", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. front_tickFree s", "using as3 is_processT2"], ["proof (prove)\nusing this:\n  (s, b) \\<in> F P\n  \\<forall>s X. (s, X) \\<in> F ?P \\<longrightarrow> front_tickFree s\n\ngoal (1 subgoal):\n 1. front_tickFree s", "by blast"], ["proof (state)\nthis:\n  s \\<in> T P\n  front_tickFree s\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (a, b) \\<in> F P \\<Longrightarrow>\n       (a, b) \\<in> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)", "show \"(s, b) \\<in> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s, b) \\<in> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)", "proof(cases \"tickFree s\")"], ["proof (state)\ngoal (2 subgoals):\n 1. tickFree s \\<Longrightarrow>\n    (s, b) \\<in> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)\n 2. \\<not> tickFree s \\<Longrightarrow>\n    (s, b) \\<in> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)", "case FT_True:True"], ["proof (state)\nthis:\n  tickFree s\n\ngoal (2 subgoals):\n 1. tickFree s \\<Longrightarrow>\n    (s, b) \\<in> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)\n 2. \\<not> tickFree s \\<Longrightarrow>\n    (s, b) \\<in> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)", "hence a2:\"(s, UNIV) \\<notin> F P\""], ["proof (prove)\nusing this:\n  tickFree s\n\ngoal (1 subgoal):\n 1. (s, UNIV) \\<notin> F P", "using a1 as1"], ["proof (prove)\nusing this:\n  tickFree s\n  s \\<in> T P\n  front_tickFree s\n  \\<forall>s\\<in>T P. tickFree s \\<longrightarrow> (s, UNIV) \\<notin> F P\n\ngoal (1 subgoal):\n 1. (s, UNIV) \\<notin> F P", "by blast"], ["proof (state)\nthis:\n  (s, UNIV) \\<notin> F P\n\ngoal (2 subgoals):\n 1. tickFree s \\<Longrightarrow>\n    (s, b) \\<in> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)\n 2. \\<not> tickFree s \\<Longrightarrow>\n    (s, b) \\<in> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)", "then"], ["proof (chain)\npicking this:\n  (s, UNIV) \\<notin> F P", "show ?thesis"], ["proof (prove)\nusing this:\n  (s, UNIV) \\<notin> F P\n\ngoal (1 subgoal):\n 1. (s, b) \\<in> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)", "by (metis FT_True UNIV_I UNIV_eq_I a1(2) as2 as3 emptyE event.exhaust \n                  is_processT6_S1 tickFree_implies_front_tickFree_single)"], ["proof (state)\nthis:\n  (s, b) \\<in> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)\n\ngoal (1 subgoal):\n 1. \\<not> tickFree s \\<Longrightarrow>\n    (s, b) \\<in> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> tickFree s \\<Longrightarrow>\n    (s, b) \\<in> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)", "case FT_False: False"], ["proof (state)\nthis:\n  \\<not> tickFree s\n\ngoal (1 subgoal):\n 1. \\<not> tickFree s \\<Longrightarrow>\n    (s, b) \\<in> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)", "then"], ["proof (chain)\npicking this:\n  \\<not> tickFree s", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> tickFree s\n\ngoal (1 subgoal):\n 1. (s, b) \\<in> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)", "by (meson T_F_spec UNIV_witness a1(2) append_single_T_imp_tickFree \n                  as2 emptyE is_processT5_S7)"], ["proof (state)\nthis:\n  (s, b) \\<in> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (s, b) \\<in> F (DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  deadlock_free_v2 P\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma deadlock_free_v2_implies_div_free: \"deadlock_free_v2 P \\<Longrightarrow> D P = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. deadlock_free_v2 P \\<Longrightarrow> D P = {}", "by (metis F_T append_single_T_imp_tickFree deadlock_free_v2_is_right ex_in_conv \n            nonTickFree_n_frontTickFree process_charn)"], ["", "corollary deadlock_free_v2_FD: \"deadlock_free_v2 P = DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV \\<sqsubseteq>\\<^sub>F\\<^sub>D P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. deadlock_free_v2 P =\n    DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV \\<sqsubseteq>\\<^sub>F\\<^sub>D P", "unfolding deadlock_free_v2_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV \\<sqsubseteq>\\<^sub>F P =\n    DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV \\<sqsubseteq>\\<^sub>F\\<^sub>D P", "using deadlock_free_v2_implies_div_free FD_F F_D_FD deadlock_free_v2_def divergence_refine_def"], ["proof (prove)\nusing this:\n  deadlock_free_v2 ?P \\<Longrightarrow> D ?P = {}\n  ?P \\<sqsubseteq>\\<^sub>F\\<^sub>D ?Q \\<Longrightarrow>\n  ?P \\<sqsubseteq>\\<^sub>F ?Q\n  \\<lbrakk>?P \\<sqsubseteq>\\<^sub>F ?Q; ?P \\<sqsubseteq>\\<^sub>D ?Q\\<rbrakk>\n  \\<Longrightarrow> ?P \\<sqsubseteq>\\<^sub>F\\<^sub>D ?Q\n  deadlock_free_v2 ?P \\<equiv>\n  DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV \\<sqsubseteq>\\<^sub>F ?P\n  ?P \\<sqsubseteq>\\<^sub>D ?Q \\<equiv> D ?Q \\<subseteq> D ?P\n\ngoal (1 subgoal):\n 1. DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV \\<sqsubseteq>\\<^sub>F P =\n    DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV \\<sqsubseteq>\\<^sub>F\\<^sub>D P", "by fastforce"], ["", "lemma all_events_refusal: \n                        \"(s, {tick} \\<union> ev ` (events_of P)) \\<in> F P \\<Longrightarrow> (s, UNIV::'a event set) \\<in> F P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s, {tick} \\<union> ev ` events_of P) \\<in> F P \\<Longrightarrow>\n    (s, UNIV) \\<in> F P", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (s, {tick} \\<union> ev ` events_of P) \\<in> F P \\<Longrightarrow>\n    (s, UNIV) \\<in> F P", "assume a1:\"(s, {tick} \\<union> ev ` events_of P) \\<in> F P\""], ["proof (state)\nthis:\n  (s, {tick} \\<union> ev ` events_of P) \\<in> F P\n\ngoal (1 subgoal):\n 1. (s, {tick} \\<union> ev ` events_of P) \\<in> F P \\<Longrightarrow>\n    (s, UNIV) \\<in> F P", "{"], ["proof (state)\nthis:\n  (s, {tick} \\<union> ev ` events_of P) \\<in> F P\n\ngoal (1 subgoal):\n 1. (s, {tick} \\<union> ev ` events_of P) \\<in> F P \\<Longrightarrow>\n    (s, UNIV) \\<in> F P", "assume \"(s, UNIV) \\<notin> F P\""], ["proof (state)\nthis:\n  (s, UNIV) \\<notin> F P\n\ngoal (1 subgoal):\n 1. (s, {tick} \\<union> ev ` events_of P) \\<in> F P \\<Longrightarrow>\n    (s, UNIV) \\<in> F P", "then"], ["proof (chain)\npicking this:\n  (s, UNIV) \\<notin> F P", "obtain c where \"c \\<notin> {tick} \\<union> ev ` events_of P \\<and> s @ [c] \\<in> T P\""], ["proof (prove)\nusing this:\n  (s, UNIV) \\<notin> F P\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        c \\<notin> {tick} \\<union> ev ` events_of P \\<and>\n        s @ [c] \\<in> T P \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using is_processT5_S1[of s \"{tick} \\<union> ev ` events_of P\" P \n            \"UNIV - ({tick} \\<union> ev ` events_of P)\", simplified] F_T a1"], ["proof (prove)\nusing this:\n  (s, UNIV) \\<notin> F P\n  \\<lbrakk>(s, insert tick (ev ` events_of P)) \\<in> F P;\n   (s, UNIV) \\<notin> F P\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c.\n                       c \\<noteq> tick \\<and>\n                       c \\<notin> ev ` events_of P \\<and>\n                       (s @ [c], {}) \\<in> F P\n  (?s, ?X) \\<in> F ?P \\<Longrightarrow> ?s \\<in> T ?P\n  (s, {tick} \\<union> ev ` events_of P) \\<in> F P\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        c \\<notin> {tick} \\<union> ev ` events_of P \\<and>\n        s @ [c] \\<in> T P \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  c \\<notin> {tick} \\<union> ev ` events_of P \\<and> s @ [c] \\<in> T P\n\ngoal (1 subgoal):\n 1. (s, {tick} \\<union> ev ` events_of P) \\<in> F P \\<Longrightarrow>\n    (s, UNIV) \\<in> F P", "hence False"], ["proof (prove)\nusing this:\n  c \\<notin> {tick} \\<union> ev ` events_of P \\<and> s @ [c] \\<in> T P\n\ngoal (1 subgoal):\n 1. False", "by (simp add:events_of_def, cases c) fastforce+"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. (s, {tick} \\<union> ev ` events_of P) \\<in> F P \\<Longrightarrow>\n    (s, UNIV) \\<in> F P", "}"], ["proof (state)\nthis:\n  (s, UNIV) \\<notin> F P \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. (s, {tick} \\<union> ev ` events_of P) \\<in> F P \\<Longrightarrow>\n    (s, UNIV) \\<in> F P", "with a1"], ["proof (chain)\npicking this:\n  (s, {tick} \\<union> ev ` events_of P) \\<in> F P\n  (s, UNIV) \\<notin> F P \\<Longrightarrow> False", "show \"(s, UNIV) \\<in> F P\""], ["proof (prove)\nusing this:\n  (s, {tick} \\<union> ev ` events_of P) \\<in> F P\n  (s, UNIV) \\<notin> F P \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. (s, UNIV) \\<in> F P", "by blast"], ["proof (state)\nthis:\n  (s, UNIV) \\<in> F P\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary deadlock_free_v2_is_right_wrt_events:\n  \"deadlock_free_v2 (P::'a process) \\<longleftrightarrow> \n                                  (\\<forall>s\\<in>T P. tickFree s \\<longrightarrow> (s, {tick} \\<union> ev ` (events_of P)) \\<notin> F P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. deadlock_free_v2 P =\n    (\\<forall>s\\<in>T P.\n        tickFree s \\<longrightarrow>\n        (s, {tick} \\<union> ev ` events_of P) \\<notin> F P)", "unfolding deadlock_free_v2_is_right"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>s\\<in>T P.\n        tickFree s \\<longrightarrow> (s, UNIV) \\<notin> F P) =\n    (\\<forall>s\\<in>T P.\n        tickFree s \\<longrightarrow>\n        (s, {tick} \\<union> ev ` events_of P) \\<notin> F P)", "using all_events_refusal"], ["proof (prove)\nusing this:\n  (?s, {tick} \\<union> ev ` events_of ?P) \\<in> F ?P \\<Longrightarrow>\n  (?s, UNIV) \\<in> F ?P\n\ngoal (1 subgoal):\n 1. (\\<forall>s\\<in>T P.\n        tickFree s \\<longrightarrow> (s, UNIV) \\<notin> F P) =\n    (\\<forall>s\\<in>T P.\n        tickFree s \\<longrightarrow>\n        (s, {tick} \\<union> ev ` events_of P) \\<notin> F P)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>\\<And>s P.\n                   (s, insert tick (ev ` events_of P))\n                   \\<in> F P \\<Longrightarrow>\n                   (s, UNIV) \\<in> F P;\n        \\<forall>s\\<in>T P.\n           tickFree s \\<longrightarrow>\n           (s, insert tick (ev ` events_of P)) \\<notin> F P;\n        s \\<in> T P; tickFree s; (s, UNIV) \\<in> F P\\<rbrakk>\n       \\<Longrightarrow> False", "using is_processT4"], ["proof (prove)\nusing this:\n  \\<forall>s X Y.\n     (s, Y) \\<in> F ?P \\<and> X \\<subseteq> Y \\<longrightarrow>\n     (s, X) \\<in> F ?P\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>\\<And>s P.\n                   (s, insert tick (ev ` events_of P))\n                   \\<in> F P \\<Longrightarrow>\n                   (s, UNIV) \\<in> F P;\n        \\<forall>s\\<in>T P.\n           tickFree s \\<longrightarrow>\n           (s, insert tick (ev ` events_of P)) \\<notin> F P;\n        s \\<in> T P; tickFree s; (s, UNIV) \\<in> F P\\<rbrakk>\n       \\<Longrightarrow> False", "by blast"], ["", "lemma deadlock_free_is_deadlock_free_v2:\n  \"deadlock_free P \\<Longrightarrow> deadlock_free_v2 P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. deadlock_free P \\<Longrightarrow> deadlock_free_v2 P", "using DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P_DF_refine_FD deadlock_free_def deadlock_free_v2_FD trans_FD"], ["proof (prove)\nusing this:\n  DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P ?A \\<sqsubseteq>\\<^sub>F\\<^sub>D DF ?A\n  deadlock_free ?P \\<equiv> DF UNIV \\<sqsubseteq>\\<^sub>F\\<^sub>D ?P\n  deadlock_free_v2 ?P =\n  DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV \\<sqsubseteq>\\<^sub>F\\<^sub>D ?P\n  \\<lbrakk>?P \\<sqsubseteq>\\<^sub>F\\<^sub>D ?Q;\n   ?Q \\<sqsubseteq>\\<^sub>F\\<^sub>D ?S\\<rbrakk>\n  \\<Longrightarrow> ?P \\<sqsubseteq>\\<^sub>F\\<^sub>D ?S\n\ngoal (1 subgoal):\n 1. deadlock_free P \\<Longrightarrow> deadlock_free_v2 P", "by blast"], ["", "section \\<open>Non-terminating Runs\\<close>"], ["", "definition non_terminating  :: \"'a process \\<Rightarrow> bool\"\n  where   \"non_terminating P \\<equiv> RUN UNIV \\<sqsubseteq>\\<^sub>T P\""], ["", "corollary non_terminating_refine_DF: \"non_terminating P = DF UNIV \\<sqsubseteq>\\<^sub>T P\"\n  and non_terminating_refine_CHAOS: \"non_terminating P = CHAOS UNIV \\<sqsubseteq>\\<^sub>T P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. non_terminating P = DF UNIV \\<sqsubseteq>\\<^sub>T P &&&\n    non_terminating P = CHAOS UNIV \\<sqsubseteq>\\<^sub>T P", "by (simp_all add: DF_all_tickfree_traces1 RUN_all_tickfree_traces1 CHAOS_all_tickfree_traces1 \n                    non_terminating_def trace_refine_def)"], ["", "lemma non_terminating_is_right: \"non_terminating (P::'a process) \\<longleftrightarrow> (\\<forall>s\\<in>T P. tickFree s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. non_terminating P = (\\<forall>s\\<in>T P. tickFree s)", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. non_terminating P \\<Longrightarrow> \\<forall>s\\<in>T P. tickFree s\n 2. \\<forall>s\\<in>T P. tickFree s \\<Longrightarrow> non_terminating P", "by (auto simp add:non_terminating_def trace_refine_def tickFree_def RUN_all_tickfree_traces1)[1]\n     (auto simp add:non_terminating_def trace_refine_def RUN_all_tickfree_traces2)"], ["", "lemma nonterminating_implies_div_free: \"non_terminating P \\<Longrightarrow> D P = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. non_terminating P \\<Longrightarrow> D P = {}", "unfolding non_terminating_is_right"], ["proof (prove)\ngoal (1 subgoal):\n 1. Ball (T P) tickFree \\<Longrightarrow> D P = {}", "by (metis NT_ND equals0I front_tickFree_charn process_charn tickFree_Cons tickFree_append)"], ["", "lemma non_terminating_implies_F: \"non_terminating P \\<Longrightarrow> CHAOS UNIV \\<sqsubseteq>\\<^sub>F P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. non_terminating P \\<Longrightarrow> CHAOS UNIV \\<sqsubseteq>\\<^sub>F P", "apply(auto simp add: non_terminating_is_right failure_refine_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>\\<forall>x\\<in>T P. tickFree x; (a, b) \\<in> F P\\<rbrakk>\n       \\<Longrightarrow> (a, b) \\<in> F (CHAOS UNIV)", "using CHAOS_has_all_tickFree_failures F_T"], ["proof (prove)\nusing this:\n  \\<lbrakk>tickFree ?a; {x. ev x \\<in> set ?a} \\<subseteq> ?A\\<rbrakk>\n  \\<Longrightarrow> (?a, ?b) \\<in> F (CHAOS ?A)\n  (?s, ?X) \\<in> F ?P \\<Longrightarrow> ?s \\<in> T ?P\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>\\<forall>x\\<in>T P. tickFree x; (a, b) \\<in> F P\\<rbrakk>\n       \\<Longrightarrow> (a, b) \\<in> F (CHAOS UNIV)", "by blast"], ["", "corollary non_terminating_F: \"non_terminating P = CHAOS UNIV \\<sqsubseteq>\\<^sub>F P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. non_terminating P = CHAOS UNIV \\<sqsubseteq>\\<^sub>F P", "by (auto simp add:non_terminating_implies_F non_terminating_refine_CHAOS le_F_T)"], ["", "corollary non_terminating_FD: \"non_terminating P = CHAOS UNIV \\<sqsubseteq>\\<^sub>F\\<^sub>D P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. non_terminating P = CHAOS UNIV \\<sqsubseteq>\\<^sub>F\\<^sub>D P", "unfolding non_terminating_F"], ["proof (prove)\ngoal (1 subgoal):\n 1. CHAOS UNIV \\<sqsubseteq>\\<^sub>F P =\n    CHAOS UNIV \\<sqsubseteq>\\<^sub>F\\<^sub>D P", "using div_free_CHAOS nonterminating_implies_div_free FD_F F_D_FD divergence_refine_def \n        non_terminating_F"], ["proof (prove)\nusing this:\n  D (CHAOS ?A) = {}\n  non_terminating ?P \\<Longrightarrow> D ?P = {}\n  ?P \\<sqsubseteq>\\<^sub>F\\<^sub>D ?Q \\<Longrightarrow>\n  ?P \\<sqsubseteq>\\<^sub>F ?Q\n  \\<lbrakk>?P \\<sqsubseteq>\\<^sub>F ?Q; ?P \\<sqsubseteq>\\<^sub>D ?Q\\<rbrakk>\n  \\<Longrightarrow> ?P \\<sqsubseteq>\\<^sub>F\\<^sub>D ?Q\n  ?P \\<sqsubseteq>\\<^sub>D ?Q \\<equiv> D ?Q \\<subseteq> D ?P\n  non_terminating ?P = CHAOS UNIV \\<sqsubseteq>\\<^sub>F ?P\n\ngoal (1 subgoal):\n 1. CHAOS UNIV \\<sqsubseteq>\\<^sub>F P =\n    CHAOS UNIV \\<sqsubseteq>\\<^sub>F\\<^sub>D P", "by fastforce"], ["", "section \\<open>Lifelock Freeness\\<close>"], ["", "thm lifelock_free_def"], ["", "corollary lifelock_free_is_non_terminating: \"lifelock_free P = non_terminating P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lifelock_free P = non_terminating P", "unfolding lifelock_free_def non_terminating_FD"], ["proof (prove)\ngoal (1 subgoal):\n 1. CHAOS UNIV \\<sqsubseteq>\\<^sub>F\\<^sub>D P =\n    CHAOS UNIV \\<sqsubseteq>\\<^sub>F\\<^sub>D P", "by rule"], ["", "lemma div_free_divergence_refine:\n  \"D P = {} \\<longleftrightarrow> CHAOS\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV \\<sqsubseteq>\\<^sub>D P\" \n  \"D P = {} \\<longleftrightarrow> CHAOS UNIV \\<sqsubseteq>\\<^sub>D P\" \n  \"D P = {} \\<longleftrightarrow> RUN UNIV \\<sqsubseteq>\\<^sub>D P\" \n  \"D P = {} \\<longleftrightarrow> DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV \\<sqsubseteq>\\<^sub>D P\" \n  \"D P = {} \\<longleftrightarrow> DF UNIV \\<sqsubseteq>\\<^sub>D P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((D P = {}) =\n     CHAOS\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV \\<sqsubseteq>\\<^sub>D P &&&\n     (D P = {}) = CHAOS UNIV \\<sqsubseteq>\\<^sub>D P) &&&\n    (D P = {}) = RUN UNIV \\<sqsubseteq>\\<^sub>D P &&&\n    (D P = {}) =\n    DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV \\<sqsubseteq>\\<^sub>D P &&&\n    (D P = {}) = DF UNIV \\<sqsubseteq>\\<^sub>D P", "by (simp_all add: div_free_CHAOS\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P div_free_CHAOS div_free_RUN div_free_DF div_free_DF\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P \n                    divergence_refine_def)"], ["", "definition lifelock_free_v2 :: \"'a process \\<Rightarrow> bool\"\n  where   \"lifelock_free_v2 P \\<equiv> CHAOS\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV \\<sqsubseteq>\\<^sub>F\\<^sub>D P\""], ["", "lemma div_free_is_lifelock_free_v2: \"lifelock_free_v2 P \\<longleftrightarrow> D P = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lifelock_free_v2 P = (D P = {})", "using CHAOS\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P_has_all_failures_Un FD_D F_D_FD div_free_divergence_refine(1) lifelock_free_v2_def"], ["proof (prove)\nusing this:\n  CHAOS\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV \\<sqsubseteq>\\<^sub>F ?P\n  ?P \\<sqsubseteq>\\<^sub>F\\<^sub>D ?Q \\<Longrightarrow>\n  ?P \\<sqsubseteq>\\<^sub>D ?Q\n  \\<lbrakk>?P \\<sqsubseteq>\\<^sub>F ?Q; ?P \\<sqsubseteq>\\<^sub>D ?Q\\<rbrakk>\n  \\<Longrightarrow> ?P \\<sqsubseteq>\\<^sub>F\\<^sub>D ?Q\n  (D ?P = {}) =\n  CHAOS\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV \\<sqsubseteq>\\<^sub>D ?P\n  lifelock_free_v2 ?P \\<equiv>\n  CHAOS\\<^sub>S\\<^sub>K\\<^sub>I\\<^sub>P UNIV \\<sqsubseteq>\\<^sub>F\\<^sub>D\n  ?P\n\ngoal (1 subgoal):\n 1. lifelock_free_v2 P = (D P = {})", "by blast"], ["", "lemma lifelock_free_is_lifelock_free_v2: \"lifelock_free P \\<Longrightarrow> lifelock_free_v2 P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lifelock_free P \\<Longrightarrow> lifelock_free_v2 P", "by (simp add: FD_D div_free_divergence_refine(2) div_free_is_lifelock_free_v2 lifelock_free_def)"], ["", "corollary deadlock_free_v2_is_lifelock_free_v2: \"deadlock_free_v2 P \\<Longrightarrow> lifelock_free_v2 P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. deadlock_free_v2 P \\<Longrightarrow> lifelock_free_v2 P", "by (simp add: deadlock_free_v2_implies_div_free div_free_is_lifelock_free_v2)"], ["", "section \\<open>New laws\\<close>"], ["", "lemma non_terminating_seq: \"non_terminating P \\<Longrightarrow> (P `;` Q) = P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. non_terminating P \\<Longrightarrow> (P `;` Q) = P", "apply(auto simp add: non_terminating_is_right Process_eq_spec D_seq F_seq F_T is_processT7)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>\\<forall>x\\<in>T P. tickFree x;\n        (a, insert tick b) \\<in> F P\\<rbrakk>\n       \\<Longrightarrow> (a, b) \\<in> F P\n 2. \\<And>b t1 t2.\n       \\<lbrakk>\\<forall>x\\<in>T P. tickFree x; t1 \\<in> D P; tickFree t1;\n        front_tickFree t2\\<rbrakk>\n       \\<Longrightarrow> (t1 @ t2, b) \\<in> F P\n 3. \\<And>a b.\n       \\<lbrakk>\\<forall>x\\<in>T P. tickFree x; (a, b) \\<in> F P;\n        \\<forall>t1.\n           t1 @ [tick] \\<in> T P \\<longrightarrow>\n           (\\<forall>t2. a = t1 @ t2 \\<longrightarrow> t2 \\<notin> D Q);\n        \\<forall>t1.\n           tickFree t1 \\<longrightarrow>\n           t1 \\<in> D P \\<longrightarrow>\n           (\\<forall>t2.\n               a = t1 @ t2 \\<longrightarrow> \\<not> front_tickFree t2);\n        \\<forall>t1.\n           t1 @ [tick] \\<in> T P \\<longrightarrow>\n           (\\<forall>t2.\n               a = t1 @ t2 \\<longrightarrow> (t2, b) \\<notin> F Q)\\<rbrakk>\n       \\<Longrightarrow> (a, insert tick b) \\<in> F P\n 4. \\<And>x.\n       \\<lbrakk>\\<forall>s\\<in>T P. tickFree s; x \\<in> D P;\n        \\<forall>t1.\n           t1 @ [tick] \\<in> T P \\<longrightarrow>\n           (\\<forall>t2.\n               x = t1 @ t2 \\<longrightarrow> t2 \\<notin> D Q)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t1 t2.\n                            x = t1 @ t2 \\<and>\n                            t1 \\<in> D P \\<and>\n                            tickFree t1 \\<and> front_tickFree t2", "using process_charn"], ["proof (prove)\nusing this:\n  ([], {}) \\<in> F ?P \\<and>\n  (\\<forall>s X.\n      (s, X) \\<in> F ?P \\<longrightarrow> front_tickFree s) \\<and>\n  (\\<forall>s t. (s @ t, {}) \\<notin> F ?P \\<or> (s, {}) \\<in> F ?P) \\<and>\n  (\\<forall>s X Y.\n      (s, Y) \\<notin> F ?P \\<or>\n      \\<not> X \\<subseteq> Y \\<or> (s, X) \\<in> F ?P) \\<and>\n  (\\<forall>s X Y.\n      (s, X) \\<in> F ?P \\<and>\n      (\\<forall>c.\n          c \\<in> Y \\<longrightarrow>\n          (s @ [c], {}) \\<notin> F ?P) \\<longrightarrow>\n      (s, X \\<union> Y) \\<in> F ?P) \\<and>\n  (\\<forall>s X.\n      (s @ [tick], {}) \\<in> F ?P \\<longrightarrow>\n      (s, X - {tick}) \\<in> F ?P) \\<and>\n  (\\<forall>s t.\n      s \\<notin> D ?P \\<or>\n      \\<not> tickFree s \\<or>\n      \\<not> front_tickFree t \\<or> s @ t \\<in> D ?P) \\<and>\n  (\\<forall>s X. s \\<notin> D ?P \\<or> (s, X) \\<in> F ?P) \\<and>\n  (\\<forall>s. s @ [tick] \\<notin> D ?P \\<or> s \\<in> D ?P)\n\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>\\<forall>x\\<in>T P. tickFree x;\n        (a, insert tick b) \\<in> F P\\<rbrakk>\n       \\<Longrightarrow> (a, b) \\<in> F P\n 2. \\<And>b t1 t2.\n       \\<lbrakk>\\<forall>x\\<in>T P. tickFree x; t1 \\<in> D P; tickFree t1;\n        front_tickFree t2\\<rbrakk>\n       \\<Longrightarrow> (t1 @ t2, b) \\<in> F P\n 3. \\<And>a b.\n       \\<lbrakk>\\<forall>x\\<in>T P. tickFree x; (a, b) \\<in> F P;\n        \\<forall>t1.\n           t1 @ [tick] \\<in> T P \\<longrightarrow>\n           (\\<forall>t2. a = t1 @ t2 \\<longrightarrow> t2 \\<notin> D Q);\n        \\<forall>t1.\n           tickFree t1 \\<longrightarrow>\n           t1 \\<in> D P \\<longrightarrow>\n           (\\<forall>t2.\n               a = t1 @ t2 \\<longrightarrow> \\<not> front_tickFree t2);\n        \\<forall>t1.\n           t1 @ [tick] \\<in> T P \\<longrightarrow>\n           (\\<forall>t2.\n               a = t1 @ t2 \\<longrightarrow> (t2, b) \\<notin> F Q)\\<rbrakk>\n       \\<Longrightarrow> (a, insert tick b) \\<in> F P\n 4. \\<And>x.\n       \\<lbrakk>\\<forall>s\\<in>T P. tickFree s; x \\<in> D P;\n        \\<forall>t1.\n           t1 @ [tick] \\<in> T P \\<longrightarrow>\n           (\\<forall>t2.\n               x = t1 @ t2 \\<longrightarrow> t2 \\<notin> D Q)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t1 t2.\n                            x = t1 @ t2 \\<and>\n                            t1 \\<in> D P \\<and>\n                            tickFree t1 \\<and> front_tickFree t2", "apply blast"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>b t1 t2.\n       \\<lbrakk>\\<forall>x\\<in>T P. tickFree x; t1 \\<in> D P; tickFree t1;\n        front_tickFree t2\\<rbrakk>\n       \\<Longrightarrow> (t1 @ t2, b) \\<in> F P\n 2. \\<And>a b.\n       \\<lbrakk>\\<forall>x\\<in>T P. tickFree x; (a, b) \\<in> F P;\n        \\<forall>t1.\n           t1 @ [tick] \\<in> T P \\<longrightarrow>\n           (\\<forall>t2. a = t1 @ t2 \\<longrightarrow> t2 \\<notin> D Q);\n        \\<forall>t1.\n           tickFree t1 \\<longrightarrow>\n           t1 \\<in> D P \\<longrightarrow>\n           (\\<forall>t2.\n               a = t1 @ t2 \\<longrightarrow> \\<not> front_tickFree t2);\n        \\<forall>t1.\n           t1 @ [tick] \\<in> T P \\<longrightarrow>\n           (\\<forall>t2.\n               a = t1 @ t2 \\<longrightarrow> (t2, b) \\<notin> F Q)\\<rbrakk>\n       \\<Longrightarrow> (a, insert tick b) \\<in> F P\n 3. \\<And>x.\n       \\<lbrakk>\\<forall>s\\<in>T P. tickFree s; x \\<in> D P;\n        \\<forall>t1.\n           t1 @ [tick] \\<in> T P \\<longrightarrow>\n           (\\<forall>t2.\n               x = t1 @ t2 \\<longrightarrow> t2 \\<notin> D Q)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t1 t2.\n                            x = t1 @ t2 \\<and>\n                            t1 \\<in> D P \\<and>\n                            tickFree t1 \\<and> front_tickFree t2", "using process_charn"], ["proof (prove)\nusing this:\n  ([], {}) \\<in> F ?P \\<and>\n  (\\<forall>s X.\n      (s, X) \\<in> F ?P \\<longrightarrow> front_tickFree s) \\<and>\n  (\\<forall>s t. (s @ t, {}) \\<notin> F ?P \\<or> (s, {}) \\<in> F ?P) \\<and>\n  (\\<forall>s X Y.\n      (s, Y) \\<notin> F ?P \\<or>\n      \\<not> X \\<subseteq> Y \\<or> (s, X) \\<in> F ?P) \\<and>\n  (\\<forall>s X Y.\n      (s, X) \\<in> F ?P \\<and>\n      (\\<forall>c.\n          c \\<in> Y \\<longrightarrow>\n          (s @ [c], {}) \\<notin> F ?P) \\<longrightarrow>\n      (s, X \\<union> Y) \\<in> F ?P) \\<and>\n  (\\<forall>s X.\n      (s @ [tick], {}) \\<in> F ?P \\<longrightarrow>\n      (s, X - {tick}) \\<in> F ?P) \\<and>\n  (\\<forall>s t.\n      s \\<notin> D ?P \\<or>\n      \\<not> tickFree s \\<or>\n      \\<not> front_tickFree t \\<or> s @ t \\<in> D ?P) \\<and>\n  (\\<forall>s X. s \\<notin> D ?P \\<or> (s, X) \\<in> F ?P) \\<and>\n  (\\<forall>s. s @ [tick] \\<notin> D ?P \\<or> s \\<in> D ?P)\n\ngoal (3 subgoals):\n 1. \\<And>b t1 t2.\n       \\<lbrakk>\\<forall>x\\<in>T P. tickFree x; t1 \\<in> D P; tickFree t1;\n        front_tickFree t2\\<rbrakk>\n       \\<Longrightarrow> (t1 @ t2, b) \\<in> F P\n 2. \\<And>a b.\n       \\<lbrakk>\\<forall>x\\<in>T P. tickFree x; (a, b) \\<in> F P;\n        \\<forall>t1.\n           t1 @ [tick] \\<in> T P \\<longrightarrow>\n           (\\<forall>t2. a = t1 @ t2 \\<longrightarrow> t2 \\<notin> D Q);\n        \\<forall>t1.\n           tickFree t1 \\<longrightarrow>\n           t1 \\<in> D P \\<longrightarrow>\n           (\\<forall>t2.\n               a = t1 @ t2 \\<longrightarrow> \\<not> front_tickFree t2);\n        \\<forall>t1.\n           t1 @ [tick] \\<in> T P \\<longrightarrow>\n           (\\<forall>t2.\n               a = t1 @ t2 \\<longrightarrow> (t2, b) \\<notin> F Q)\\<rbrakk>\n       \\<Longrightarrow> (a, insert tick b) \\<in> F P\n 3. \\<And>x.\n       \\<lbrakk>\\<forall>s\\<in>T P. tickFree s; x \\<in> D P;\n        \\<forall>t1.\n           t1 @ [tick] \\<in> T P \\<longrightarrow>\n           (\\<forall>t2.\n               x = t1 @ t2 \\<longrightarrow> t2 \\<notin> D Q)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t1 t2.\n                            x = t1 @ t2 \\<and>\n                            t1 \\<in> D P \\<and>\n                            tickFree t1 \\<and> front_tickFree t2", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>\\<forall>x\\<in>T P. tickFree x; (a, b) \\<in> F P;\n        \\<forall>t1.\n           t1 @ [tick] \\<in> T P \\<longrightarrow>\n           (\\<forall>t2. a = t1 @ t2 \\<longrightarrow> t2 \\<notin> D Q);\n        \\<forall>t1.\n           tickFree t1 \\<longrightarrow>\n           t1 \\<in> D P \\<longrightarrow>\n           (\\<forall>t2.\n               a = t1 @ t2 \\<longrightarrow> \\<not> front_tickFree t2);\n        \\<forall>t1.\n           t1 @ [tick] \\<in> T P \\<longrightarrow>\n           (\\<forall>t2.\n               a = t1 @ t2 \\<longrightarrow> (t2, b) \\<notin> F Q)\\<rbrakk>\n       \\<Longrightarrow> (a, insert tick b) \\<in> F P\n 2. \\<And>x.\n       \\<lbrakk>\\<forall>s\\<in>T P. tickFree s; x \\<in> D P;\n        \\<forall>t1.\n           t1 @ [tick] \\<in> T P \\<longrightarrow>\n           (\\<forall>t2.\n               x = t1 @ t2 \\<longrightarrow> t2 \\<notin> D Q)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t1 t2.\n                            x = t1 @ t2 \\<and>\n                            t1 \\<in> D P \\<and>\n                            tickFree t1 \\<and> front_tickFree t2", "using F_T is_processT5_S2a"], ["proof (prove)\nusing this:\n  (?s, ?X) \\<in> F ?P \\<Longrightarrow> ?s \\<in> T ?P\n  \\<lbrakk>(?s, ?X) \\<in> F ?P;\n   (?s, ?X \\<union> {?c}) \\<notin> F ?P\\<rbrakk>\n  \\<Longrightarrow> (?s @ [?c], {}) \\<in> F ?P\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>\\<forall>x\\<in>T P. tickFree x; (a, b) \\<in> F P;\n        \\<forall>t1.\n           t1 @ [tick] \\<in> T P \\<longrightarrow>\n           (\\<forall>t2. a = t1 @ t2 \\<longrightarrow> t2 \\<notin> D Q);\n        \\<forall>t1.\n           tickFree t1 \\<longrightarrow>\n           t1 \\<in> D P \\<longrightarrow>\n           (\\<forall>t2.\n               a = t1 @ t2 \\<longrightarrow> \\<not> front_tickFree t2);\n        \\<forall>t1.\n           t1 @ [tick] \\<in> T P \\<longrightarrow>\n           (\\<forall>t2.\n               a = t1 @ t2 \\<longrightarrow> (t2, b) \\<notin> F Q)\\<rbrakk>\n       \\<Longrightarrow> (a, insert tick b) \\<in> F P\n 2. \\<And>x.\n       \\<lbrakk>\\<forall>s\\<in>T P. tickFree s; x \\<in> D P;\n        \\<forall>t1.\n           t1 @ [tick] \\<in> T P \\<longrightarrow>\n           (\\<forall>t2.\n               x = t1 @ t2 \\<longrightarrow> t2 \\<notin> D Q)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t1 t2.\n                            x = t1 @ t2 \\<and>\n                            t1 \\<in> D P \\<and>\n                            tickFree t1 \\<and> front_tickFree t2", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>s\\<in>T P. tickFree s; x \\<in> D P;\n        \\<forall>t1.\n           t1 @ [tick] \\<in> T P \\<longrightarrow>\n           (\\<forall>t2.\n               x = t1 @ t2 \\<longrightarrow> t2 \\<notin> D Q)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t1 t2.\n                            x = t1 @ t2 \\<and>\n                            t1 \\<in> D P \\<and>\n                            tickFree t1 \\<and> front_tickFree t2", "using D_T front_tickFree_Nil"], ["proof (prove)\nusing this:\n  ?s \\<in> D ?P \\<Longrightarrow> ?s \\<in> T ?P\n  front_tickFree []\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>s\\<in>T P. tickFree s; x \\<in> D P;\n        \\<forall>t1.\n           t1 @ [tick] \\<in> T P \\<longrightarrow>\n           (\\<forall>t2.\n               x = t1 @ t2 \\<longrightarrow> t2 \\<notin> D Q)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t1 t2.\n                            x = t1 @ t2 \\<and>\n                            t1 \\<in> D P \\<and>\n                            tickFree t1 \\<and> front_tickFree t2", "by blast"], ["", "lemma non_terminating_inter: \"non_terminating P \\<Longrightarrow> lifelock_free_v2 Q \\<Longrightarrow> non_terminating (P \\<lbrakk>C\\<rbrakk> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>non_terminating P; lifelock_free_v2 Q\\<rbrakk>\n    \\<Longrightarrow> non_terminating (P \\<lbrakk>C\\<rbrakk> Q)", "apply(auto simp add: non_terminating_is_right div_free_is_lifelock_free_v2 T_sync)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s t u.\n       \\<lbrakk>\\<forall>s\\<in>T P. tickFree s; D Q = {}; t \\<in> T P;\n        u \\<in> T Q;\n        s setinterleaves ((t, u), insert tick (ev ` C))\\<rbrakk>\n       \\<Longrightarrow> tickFree s\n 2. \\<And>t u r v.\n       \\<lbrakk>\\<forall>x\\<in>T P. tickFree x; D Q = {}; front_tickFree v;\n        r setinterleaves ((t, u), insert tick (ev ` C)); t \\<in> D P;\n        u \\<in> T Q; tickFree r\\<rbrakk>\n       \\<Longrightarrow> tickFree v\n 3. \\<And>t u r.\n       \\<lbrakk>\\<forall>x\\<in>T P. tickFree x; D Q = {};\n        r setinterleaves ((t, u), insert tick (ev ` C)); t \\<in> D P;\n        u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> tickFree r", "apply (metis equals0D ftf_syn1 ftf_syn21 insertI1 tickFree_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t u r v.\n       \\<lbrakk>\\<forall>x\\<in>T P. tickFree x; D Q = {}; front_tickFree v;\n        r setinterleaves ((t, u), insert tick (ev ` C)); t \\<in> D P;\n        u \\<in> T Q; tickFree r\\<rbrakk>\n       \\<Longrightarrow> tickFree v\n 2. \\<And>t u r.\n       \\<lbrakk>\\<forall>x\\<in>T P. tickFree x; D Q = {};\n        r setinterleaves ((t, u), insert tick (ev ` C)); t \\<in> D P;\n        u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> tickFree r", "apply (meson NT_ND is_processT7_S tickFree_append)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t u r.\n       \\<lbrakk>\\<forall>x\\<in>T P. tickFree x; D Q = {};\n        r setinterleaves ((t, u), insert tick (ev ` C)); t \\<in> D P;\n        u \\<in> T Q\\<rbrakk>\n       \\<Longrightarrow> tickFree r", "by (metis D_T empty_iff ftf_syn1 ftf_syn21 insertI1 tickFree_def)"], ["", "end"]]}