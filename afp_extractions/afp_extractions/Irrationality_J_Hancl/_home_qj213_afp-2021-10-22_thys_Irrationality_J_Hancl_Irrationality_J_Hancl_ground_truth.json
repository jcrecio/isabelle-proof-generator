{"file_name": "/home/qj213/afp-2021-10-22/thys/Irrationality_J_Hancl/Irrationality_J_Hancl.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Irrationality_J_Hancl", "problem_names": ["lemma filterlim_sequentially_iff:\n  \"filterlim f F1 sequentially \\<longleftrightarrow> filterlim (\\<lambda>x. f (x+k)) F1 sequentially\"", "lemma filterlim_realpow_sequentially_at_top:\n  \"(x::real) > 1 \\<Longrightarrow> filterlim (power x) at_top sequentially\"", "lemma filterlim_at_top_powr_real:\n  fixes g::\"'b \\<Rightarrow> real\"\n  assumes \"filterlim f at_top F\" \"(g \\<longlongrightarrow> g') F\" \"g'>1\"\n  shows \"LIM x F. g x powr f x :> at_top\"", "lemma powrfinitesum:\n  fixes a::real and s::nat assumes  \"s \\<le> n\"\n  shows \" (\\<Prod>j=s..(n::nat).(a powr (2^j)))  = a powr (\\<Sum>j=s..(n::nat).(2^j)) \"", "lemma summable_ratio_test_tendsto:\n  fixes f :: \"nat \\<Rightarrow> 'a::banach\"\n  assumes \"c < 1\" and \"\\<forall>n. f n\\<noteq>0\" and \"(\\<lambda>n. norm (f (Suc n)) / norm (f n)) \\<longlonglongrightarrow> c\"\n  shows \"summable f\"", "lemma summable_ln_plus:\n  fixes f::\"nat \\<Rightarrow> real\" \n  assumes \"summable f\" \"\\<forall>n. f n>0\"\n  shows \"summable (\\<lambda>n. ln (1+f n))\"", "lemma suminf_real_offset_le:\n  fixes f :: \"nat \\<Rightarrow> real\"\n  assumes f: \"\\<And>i. 0 \\<le> f i\" and \"summable f\"\n  shows \"(\\<Sum>i. f (i + k)) \\<le> suminf f\"", "lemma factt:\n  fixes s n ::nat assumes \"s \\<le> n\" \n  shows \" (\\<Sum>i=s..n. 2^i) < (2^(n+1) :: real) \"", "lemma showpre7:\n  fixes a b ::\"nat\\<Rightarrow>int \" and q p::int\n  assumes \"q>0\" and \"p>0\"and a: \"\\<forall>n. a n>0\" and \"\\<forall>n. b n>0\" and \n    assumerational:\"(\\<lambda> n. b (n+1) / a (n+1) )  sums (p/q)\"\n  shows \"q*((\\<Prod>j=1..n. of_int( a j)))*(suminf (\\<lambda>(j::nat). (b (j+n+1)/ a (j+n+1 )))) \n        = ((\\<Prod>j=1..n. of_int( a j)))*(p -q* (\\<Sum>j=1..n. b j / a j))       \"", "lemma show7:\n  fixes d::\"nat\\<Rightarrow>real\" and a b::\"nat\\<Rightarrow>int \" and q p::int\n  assumes \"q \\<ge>1\" and \"p \\<ge> 1\" and a: \"\\<forall>n. a n \\<ge> 1\" and \"\\<forall>n. b n \\<ge> 1\"\n    and assumerational:\"(\\<lambda> n. b (n+1) / a (n+1) ) sums (p/q)\"\n  shows \"q*((\\<Prod>j=1..n. of_int( a j)))*( suminf (\\<lambda> (j::nat). (b (j+n+1)/ a (j+n+1 )))) \\<ge> 1 \"\n    (is \"?L \\<ge> _\")", "lemma show8:\n  fixes d ::\"nat\\<Rightarrow>real \" and a :: \"nat\\<Rightarrow>int\" and s k::nat \n  assumes \"A > 1\" and d: \"\\<forall>n. d n> 1\"  and a:\"\\<forall>n. a n>0\" and \"s>0\"\n    and \"convergent_prod d\"\n    and assu2: \"\\<forall>n \\<ge> s. A / of_int (a n) powr (1 / of_int (2^n)) > (\\<Prod>j. d (n + j))\"\n  shows \"\\<forall>n\\<ge>s. (\\<Prod>j. d (j+n)) < A / (MAX j\\<in>{s..n}. of_int (a j) powr (1 / of_int (2 ^ j)))\"", "lemma auxiliary1_9:\n  fixes d ::\"nat\\<Rightarrow>real\" and a::\"nat\\<Rightarrow>int \" and s m::nat \n  assumes d: \"\\<forall>n. d n> 1\"  and a: \"\\<forall>n. a n>0\" and \"s>0\" and \"n \\<ge> m\" and \" m \\<ge> s\"\n    and auxifalse_assu: \"\\<forall>n\\<ge>m. (of_int (a (n+1))) powr(1 /of_int (2^(n+1))) <\n              (d (n+1))* (Max ((\\<lambda> (j::nat). (of_int (a j)) powr(1 /of_int (2^j))) ` {s..n} ))\"\n  shows \"(of_int (a (n+1))) powr(1 /of_int (2^(n+1))) <\n    (\\<Prod>j=(m+1)..(n+1). d j) * (Max ((\\<lambda> (j::nat). (of_int (a j)) powr(1 /of_int (2^j))) ` {s..m}))\"", "lemma show9:\n  fixes d ::\"nat\\<Rightarrow>real \" and a :: \"nat\\<Rightarrow>int \" and s ::nat and A::real\n  assumes   \"A > 1\" and  d: \"\\<forall>n. d n> 1\"  and a: \"\\<forall>n. a n>0\" and \"s>0\"  \n    and assu1: \"(( \\<lambda> n. (of_int (a n)) powr(1 /of_int (2^n)))\\<longlongrightarrow> A) sequentially \"\n    and \"convergent_prod d\"\n    and 8: \"\\<forall>n\\<ge>s. prodinf (\\<lambda>j. d( n+j)) \n                  < A/(Max ((\\<lambda>(j::nat). (of_int (a j)) powr(1 /of_int (2^j))) ` {s..n})) \"\n  shows \"\\<forall>m \\<ge>s. \\<exists>n\\<ge>m.  ( (of_int (a (n+1))) powr(1 /of_int (2^(n+1))) \\<ge>\n          (d (n+1))* (Max ( ( \\<lambda> (j::nat). (of_int (a j)) powr(1 /of_int (2^j))) ` {s..n} )))\"", "lemma show10:\n  fixes d ::\"nat\\<Rightarrow>real \" and  a ::\"nat\\<Rightarrow>int \" and s::nat\n  assumes d [rule_format]: \"\\<forall>n. d n> 1\" \n    and a [rule_format]: \"\\<forall>n. a n>0\"  and \" s>0\"\n    and 9: \"\\<forall>m \\<ge>s. \\<exists>n\\<ge>m. a (n+1) powr(1 / of_int (2^(n+1))) \\<ge>\n          d (n+1) * (Max ((\\<lambda>j. (of_int (a j)) powr(1 /of_int (2^j))) ` {s..n} ))\"\n  shows \"\\<forall>m\\<ge>s. \\<exists>n\\<ge>m. d (n+1) powr(2^(n+1)) * (\\<Prod>j=1..n. of_int( a j)) * \n            (1 / (\\<Prod>j=1..s-1. of_int( a j))) \\<le> a (n+1)\"", "lemma lasttoshow:\n  fixes d ::\"nat\\<Rightarrow>real \" and a b ::\"nat\\<Rightarrow>int \" and q::int and s::nat\n  assumes d: \"\\<forall>n. d n> 1\"\n     and a:\"\\<forall>n. a n>0\" and \"s>0\" and \"q>0\"  \n    and \"A > 1\" and b:\"\\<forall>n. b n>0\" and 9:\n    \"\\<forall>m\\<ge>s. \\<exists>n\\<ge>m. ((of_int (a (n+1))) powr(1 /of_int (2^(n+1))) \\<ge>\n          (d (n+1))* (Max ((\\<lambda>(j::nat). (of_int (a j)) powr(1 /of_int (2^j))) ` {s..n} )))\"\n    and assu3: \"filterlim( \\<lambda> n. (d n)^(2^n)/ b n) at_top sequentially \"\n    and 5: \"\\<forall>\\<^sub>F n in sequentially. (\\<Sum>j. (b (n + j)) /  (a (n + j))) \\<le> 2 * b n / a n\"\n  shows \"\\<exists>n. q*((\\<Prod>j=1..n. real_of_int(a j))) * suminf (\\<lambda>(j::nat). (b (j+n+1)/ a (j+n+1)))<1\"", "lemma \n  fixes d ::\"nat\\<Rightarrow>real \" and  a b ::\"nat\\<Rightarrow>int \" and A::real\n  assumes \"A > 1\" and d: \"\\<forall>n. d n> 1\" and a: \"\\<forall>n. a n>0\" and b:\"\\<forall>n. b n>0\" \n    and assu1: \"(( \\<lambda> n. (of_int (a n)) powr(1 /of_int (2^n)))\\<longlongrightarrow> A) sequentially \"\n    and assu3: \"filterlim ( \\<lambda> n. (d n)^(2^n)/ b n) at_top sequentially\"\n    and \"convergent_prod d\"\n  shows issummable: \"summable (\\<lambda>j. b j / a j)\"\n    and show5: \"\\<forall>\\<^sub>F n in sequentially. (\\<Sum>j. (b (n + j)) / (a (n + j))) \\<le> 2 * b n / a n\"", "theorem Hancl3:\n  fixes d ::\"nat\\<Rightarrow>real\" and  a b :: \"nat\\<Rightarrow>int\"\n  assumes \"A > 1\" and d: \"\\<forall>n. d n > 1\" and a: \"\\<forall>n. a n>0\" and b: \"\\<forall>n. b n > 0\" and \"s>0\"\n    and assu1: \"(\\<lambda>n. (a n) powr(1 / of_int(2^n))) \\<longlonglongrightarrow> A\"\n    and assu2: \"\\<forall>n \\<ge> s. A / (a n) powr (1 / of_int(2^n)) > (\\<Prod>j. d (n+j))\"\n    and assu3: \"LIM n sequentially. d n ^ 2 ^ n / b n :> at_top\"\n    and \"convergent_prod d\" \n  shows \"(\\<Sum>n. b n / a n) \\<notin> \\<rat>\""], "translations": [["", "lemma filterlim_sequentially_iff:\n  \"filterlim f F1 sequentially \\<longleftrightarrow> filterlim (\\<lambda>x. f (x+k)) F1 sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filterlim f F1 sequentially = (LIM x sequentially. f (x + k) :> F1)", "unfolding filterlim_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>P.\n        eventually P F1 \\<longrightarrow>\n        (\\<forall>\\<^sub>F x in sequentially. P (f x))) =\n    (\\<forall>P.\n        eventually P F1 \\<longrightarrow>\n        (\\<forall>\\<^sub>F x in sequentially. P (f (x + k))))", "by (metis eventually_at_top_linorder eventually_sequentially_seg)"], ["", "lemma filterlim_realpow_sequentially_at_top:\n  \"(x::real) > 1 \\<Longrightarrow> filterlim (power x) at_top sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < x \\<Longrightarrow> filterlim ((^) x) at_top sequentially", "apply (rule LIMSEQ_divide_realpow_zero[THEN filterlim_inverse_at_top,of _ 1,simplified])"], ["proof (prove)\ngoal (2 subgoals):\n 1. 1 < x \\<Longrightarrow> 1 < x\n 2. 1 < x \\<Longrightarrow> \\<forall>\\<^sub>F xa in sequentially. 0 < x ^ xa", "by auto"], ["", "lemma filterlim_at_top_powr_real:\n  fixes g::\"'b \\<Rightarrow> real\"\n  assumes \"filterlim f at_top F\" \"(g \\<longlongrightarrow> g') F\" \"g'>1\"\n  shows \"LIM x F. g x powr f x :> at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LIM x F. g x powr f x :> at_top", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. LIM x F. g x powr f x :> at_top", "have \"LIM x F. ((g' + 1) / 2) powr f x :> at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LIM x F. ((g' + 1) / 2) powr f x :> at_top", "proof (subst filterlim_at_top_gt[of _ _ 1],rule+)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Z.\n       1 < Z \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in F. Z \\<le> ((g' + 1) / 2) powr f x", "fix Z::real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Z.\n       1 < Z \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in F. Z \\<le> ((g' + 1) / 2) powr f x", "assume \"Z > 1\""], ["proof (state)\nthis:\n  1 < Z\n\ngoal (1 subgoal):\n 1. \\<And>Z.\n       1 < Z \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in F. Z \\<le> ((g' + 1) / 2) powr f x", "have \"\\<forall>\\<^sub>F x in F. ln Z / ln ((g' + 1) / 2) \\<le> f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in F. ln Z / ln ((g' + 1) / 2) \\<le> f x", "using assms(1) filterlim_at_top"], ["proof (prove)\nusing this:\n  filterlim f at_top F\n  filterlim ?f at_top ?F =\n  (\\<forall>Z. \\<forall>\\<^sub>F x in ?F. Z \\<le> ?f x)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in F. ln Z / ln ((g' + 1) / 2) \\<le> f x", "by blast"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in F. ln Z / ln ((g' + 1) / 2) \\<le> f x\n\ngoal (1 subgoal):\n 1. \\<And>Z.\n       1 < Z \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in F. Z \\<le> ((g' + 1) / 2) powr f x", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in F. ln Z / ln ((g' + 1) / 2) \\<le> f x", "have \"\\<forall>\\<^sub>F x in F. ln Z \\<le> ln (((g' + 1) / 2) powr f x)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in F. ln Z / ln ((g' + 1) / 2) \\<le> f x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in F. ln Z \\<le> ln (((g' + 1) / 2) powr f x)", "proof (eventually_elim)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       ln Z / ln ((g' + 1) / 2) \\<le> f x \\<Longrightarrow>\n       ln Z \\<le> ln (((g' + 1) / 2) powr f x)", "case (elim x)"], ["proof (state)\nthis:\n  ln Z / ln ((g' + 1) / 2) \\<le> f x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       ln Z / ln ((g' + 1) / 2) \\<le> f x \\<Longrightarrow>\n       ln Z \\<le> ln (((g' + 1) / 2) powr f x)", "then"], ["proof (chain)\npicking this:\n  ln Z / ln ((g' + 1) / 2) \\<le> f x", "show ?case"], ["proof (prove)\nusing this:\n  ln Z / ln ((g' + 1) / 2) \\<le> f x\n\ngoal (1 subgoal):\n 1. ln Z \\<le> ln (((g' + 1) / 2) powr f x)", "using \\<open>g'>1\\<close>"], ["proof (prove)\nusing this:\n  ln Z / ln ((g' + 1) / 2) \\<le> f x\n  1 < g'\n\ngoal (1 subgoal):\n 1. ln Z \\<le> ln (((g' + 1) / 2) powr f x)", "by (auto simp:ln_powr divide_simps)"], ["proof (state)\nthis:\n  ln Z \\<le> ln (((g' + 1) / 2) powr f x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in F. ln Z \\<le> ln (((g' + 1) / 2) powr f x)\n\ngoal (1 subgoal):\n 1. \\<And>Z.\n       1 < Z \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in F. Z \\<le> ((g' + 1) / 2) powr f x", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in F. ln Z \\<le> ln (((g' + 1) / 2) powr f x)", "show \"\\<forall>\\<^sub>F x in F. Z \\<le> ((g' + 1) / 2) powr f x\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in F. ln Z \\<le> ln (((g' + 1) / 2) powr f x)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in F. Z \\<le> ((g' + 1) / 2) powr f x", "proof (eventually_elim)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       ln Z \\<le> ln (((g' + 1) / 2) powr f x) \\<Longrightarrow>\n       Z \\<le> ((g' + 1) / 2) powr f x", "case (elim x)"], ["proof (state)\nthis:\n  ln Z \\<le> ln (((g' + 1) / 2) powr f x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       ln Z \\<le> ln (((g' + 1) / 2) powr f x) \\<Longrightarrow>\n       Z \\<le> ((g' + 1) / 2) powr f x", "then"], ["proof (chain)\npicking this:\n  ln Z \\<le> ln (((g' + 1) / 2) powr f x)", "show ?case"], ["proof (prove)\nusing this:\n  ln Z \\<le> ln (((g' + 1) / 2) powr f x)\n\ngoal (1 subgoal):\n 1. Z \\<le> ((g' + 1) / 2) powr f x", "using \\<open>1 < Z\\<close> \\<open>g'>1\\<close>"], ["proof (prove)\nusing this:\n  ln Z \\<le> ln (((g' + 1) / 2) powr f x)\n  1 < Z\n  1 < g'\n\ngoal (1 subgoal):\n 1. Z \\<le> ((g' + 1) / 2) powr f x", "by auto"], ["proof (state)\nthis:\n  Z \\<le> ((g' + 1) / 2) powr f x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in F. Z \\<le> ((g' + 1) / 2) powr f x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  LIM x F. ((g' + 1) / 2) powr f x :> at_top\n\ngoal (1 subgoal):\n 1. LIM x F. g x powr f x :> at_top", "moreover"], ["proof (state)\nthis:\n  LIM x F. ((g' + 1) / 2) powr f x :> at_top\n\ngoal (1 subgoal):\n 1. LIM x F. g x powr f x :> at_top", "have \"\\<forall>\\<^sub>F x in F. ((g'+1)/2) powr f x \\<le> g x powr f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in F. ((g' + 1) / 2) powr f x \\<le> g x powr f x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in F. ((g' + 1) / 2) powr f x \\<le> g x powr f x", "have \"\\<forall>\\<^sub>F x in F. g x > (g'+1)/2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in F. (g' + 1) / 2 < g x", "apply (rule order_tendstoD[OF assms(2)])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (g' + 1) / 2 < g'", "using \\<open>g'>1\\<close>"], ["proof (prove)\nusing this:\n  1 < g'\n\ngoal (1 subgoal):\n 1. (g' + 1) / 2 < g'", "by auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in F. (g' + 1) / 2 < g x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in F. ((g' + 1) / 2) powr f x \\<le> g x powr f x", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in F. (g' + 1) / 2 < g x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in F. ((g' + 1) / 2) powr f x \\<le> g x powr f x", "have \"\\<forall>\\<^sub>F x in F. f x>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in F. 0 < f x", "using assms(1) filterlim_at_top_dense"], ["proof (prove)\nusing this:\n  filterlim f at_top F\n  filterlim ?f at_top ?F = (\\<forall>Z. \\<forall>\\<^sub>F x in ?F. Z < ?f x)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in F. 0 < f x", "by blast"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in F. 0 < f x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in F. ((g' + 1) / 2) powr f x \\<le> g x powr f x", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in F. (g' + 1) / 2 < g x\n  \\<forall>\\<^sub>F x in F. 0 < f x", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in F. (g' + 1) / 2 < g x\n  \\<forall>\\<^sub>F x in F. 0 < f x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in F. ((g' + 1) / 2) powr f x \\<le> g x powr f x", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>(g' + 1) / 2 < g x; 0 < f x\\<rbrakk>\n       \\<Longrightarrow> ((g' + 1) / 2) powr f x \\<le> g x powr f x", "case (elim x)"], ["proof (state)\nthis:\n  (g' + 1) / 2 < g x\n  0 < f x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>(g' + 1) / 2 < g x; 0 < f x\\<rbrakk>\n       \\<Longrightarrow> ((g' + 1) / 2) powr f x \\<le> g x powr f x", "then"], ["proof (chain)\npicking this:\n  (g' + 1) / 2 < g x\n  0 < f x", "show ?case"], ["proof (prove)\nusing this:\n  (g' + 1) / 2 < g x\n  0 < f x\n\ngoal (1 subgoal):\n 1. ((g' + 1) / 2) powr f x \\<le> g x powr f x", "using \\<open>g'>1\\<close>"], ["proof (prove)\nusing this:\n  (g' + 1) / 2 < g x\n  0 < f x\n  1 < g'\n\ngoal (1 subgoal):\n 1. ((g' + 1) / 2) powr f x \\<le> g x powr f x", "by (auto intro!: powr_mono2)"], ["proof (state)\nthis:\n  ((g' + 1) / 2) powr f x \\<le> g x powr f x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in F. ((g' + 1) / 2) powr f x \\<le> g x powr f x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in F. ((g' + 1) / 2) powr f x \\<le> g x powr f x\n\ngoal (1 subgoal):\n 1. LIM x F. g x powr f x :> at_top", "ultimately"], ["proof (chain)\npicking this:\n  LIM x F. ((g' + 1) / 2) powr f x :> at_top\n  \\<forall>\\<^sub>F x in F. ((g' + 1) / 2) powr f x \\<le> g x powr f x", "show ?thesis"], ["proof (prove)\nusing this:\n  LIM x F. ((g' + 1) / 2) powr f x :> at_top\n  \\<forall>\\<^sub>F x in F. ((g' + 1) / 2) powr f x \\<le> g x powr f x\n\ngoal (1 subgoal):\n 1. LIM x F. g x powr f x :> at_top", "using filterlim_at_top_mono"], ["proof (prove)\nusing this:\n  LIM x F. ((g' + 1) / 2) powr f x :> at_top\n  \\<forall>\\<^sub>F x in F. ((g' + 1) / 2) powr f x \\<le> g x powr f x\n  \\<lbrakk>filterlim ?f at_top ?F;\n   \\<forall>\\<^sub>F x in ?F. ?f x \\<le> ?g x\\<rbrakk>\n  \\<Longrightarrow> filterlim ?g at_top ?F\n\ngoal (1 subgoal):\n 1. LIM x F. g x powr f x :> at_top", "by fast"], ["proof (state)\nthis:\n  LIM x F. g x powr f x :> at_top\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma powrfinitesum:\n  fixes a::real and s::nat assumes  \"s \\<le> n\"\n  shows \" (\\<Prod>j=s..(n::nat).(a powr (2^j)))  = a powr (\\<Sum>j=s..(n::nat).(2^j)) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>j = s..n. a powr 2 ^ j) = a powr sum ((^) 2) {s..n}", "using \\<open>s \\<le> n\\<close>"], ["proof (prove)\nusing this:\n  s \\<le> n\n\ngoal (1 subgoal):\n 1. (\\<Prod>j = s..n. a powr 2 ^ j) = a powr sum ((^) 2) {s..n}", "proof(induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. s \\<le> 0 \\<Longrightarrow>\n    (\\<Prod>j = s..0. a powr 2 ^ j) = a powr sum ((^) 2) {s..0}\n 2. \\<And>n.\n       \\<lbrakk>s \\<le> n \\<Longrightarrow>\n                (\\<Prod>j = s..n. a powr 2 ^ j) = a powr sum ((^) 2) {s..n};\n        s \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> (\\<Prod>j = s..Suc n. a powr 2 ^ j) =\n                         a powr sum ((^) 2) {s..Suc n}", "case 0"], ["proof (state)\nthis:\n  s \\<le> 0\n\ngoal (2 subgoals):\n 1. s \\<le> 0 \\<Longrightarrow>\n    (\\<Prod>j = s..0. a powr 2 ^ j) = a powr sum ((^) 2) {s..0}\n 2. \\<And>n.\n       \\<lbrakk>s \\<le> n \\<Longrightarrow>\n                (\\<Prod>j = s..n. a powr 2 ^ j) = a powr sum ((^) 2) {s..n};\n        s \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> (\\<Prod>j = s..Suc n. a powr 2 ^ j) =\n                         a powr sum ((^) 2) {s..Suc n}", "then"], ["proof (chain)\npicking this:\n  s \\<le> 0", "show ?case"], ["proof (prove)\nusing this:\n  s \\<le> 0\n\ngoal (1 subgoal):\n 1. (\\<Prod>j = s..0. a powr 2 ^ j) = a powr sum ((^) 2) {s..0}", "by auto"], ["proof (state)\nthis:\n  (\\<Prod>j = s..0. a powr 2 ^ j) = a powr sum ((^) 2) {s..0}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>s \\<le> n \\<Longrightarrow>\n                (\\<Prod>j = s..n. a powr 2 ^ j) = a powr sum ((^) 2) {s..n};\n        s \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> (\\<Prod>j = s..Suc n. a powr 2 ^ j) =\n                         a powr sum ((^) 2) {s..Suc n}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>s \\<le> n \\<Longrightarrow>\n                (\\<Prod>j = s..n. a powr 2 ^ j) = a powr sum ((^) 2) {s..n};\n        s \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> (\\<Prod>j = s..Suc n. a powr 2 ^ j) =\n                         a powr sum ((^) 2) {s..Suc n}", "case (Suc n)"], ["proof (state)\nthis:\n  s \\<le> n \\<Longrightarrow>\n  (\\<Prod>j = s..n. a powr 2 ^ j) = a powr sum ((^) 2) {s..n}\n  s \\<le> Suc n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>s \\<le> n \\<Longrightarrow>\n                (\\<Prod>j = s..n. a powr 2 ^ j) = a powr sum ((^) 2) {s..n};\n        s \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> (\\<Prod>j = s..Suc n. a powr 2 ^ j) =\n                         a powr sum ((^) 2) {s..Suc n}", "have ?case when \"s\\<le>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>j = s..Suc n. a powr 2 ^ j) = a powr sum ((^) 2) {s..Suc n}", "using Suc.hyps"], ["proof (prove)\nusing this:\n  s \\<le> n \\<Longrightarrow>\n  (\\<Prod>j = s..n. a powr 2 ^ j) = a powr sum ((^) 2) {s..n}\n\ngoal (1 subgoal):\n 1. (\\<Prod>j = s..Suc n. a powr 2 ^ j) = a powr sum ((^) 2) {s..Suc n}", "by (metis Suc.prems add.commute linorder_not_le powr_add prod.nat_ivl_Suc' sum.cl_ivl_Suc that)"], ["proof (state)\nthis:\n  s \\<le> n \\<Longrightarrow>\n  (\\<Prod>j = s..Suc n. a powr 2 ^ j) = a powr sum ((^) 2) {s..Suc n}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>s \\<le> n \\<Longrightarrow>\n                (\\<Prod>j = s..n. a powr 2 ^ j) = a powr sum ((^) 2) {s..n};\n        s \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> (\\<Prod>j = s..Suc n. a powr 2 ^ j) =\n                         a powr sum ((^) 2) {s..Suc n}", "moreover"], ["proof (state)\nthis:\n  s \\<le> n \\<Longrightarrow>\n  (\\<Prod>j = s..Suc n. a powr 2 ^ j) = a powr sum ((^) 2) {s..Suc n}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>s \\<le> n \\<Longrightarrow>\n                (\\<Prod>j = s..n. a powr 2 ^ j) = a powr sum ((^) 2) {s..n};\n        s \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> (\\<Prod>j = s..Suc n. a powr 2 ^ j) =\n                         a powr sum ((^) 2) {s..Suc n}", "have ?case when \"s=Suc n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>j = s..Suc n. a powr 2 ^ j) = a powr sum ((^) 2) {s..Suc n}", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Prod>j = s..Suc n. a powr 2 ^ j) = a powr sum ((^) 2) {s..Suc n}", "have \"(\\<Prod>j = s..Suc n. a powr 2 ^ j) =(a powr 2 ^(Suc n))  \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>j = s..Suc n. a powr 2 ^ j) = a powr 2 ^ Suc n", "using \\<open>s=Suc n\\<close>"], ["proof (prove)\nusing this:\n  s = Suc n\n\ngoal (1 subgoal):\n 1. (\\<Prod>j = s..Suc n. a powr 2 ^ j) = a powr 2 ^ Suc n", "by simp"], ["proof (state)\nthis:\n  (\\<Prod>j = s..Suc n. a powr 2 ^ j) = a powr 2 ^ Suc n\n\ngoal (1 subgoal):\n 1. (\\<Prod>j = s..Suc n. a powr 2 ^ j) = a powr sum ((^) 2) {s..Suc n}", "also"], ["proof (state)\nthis:\n  (\\<Prod>j = s..Suc n. a powr 2 ^ j) = a powr 2 ^ Suc n\n\ngoal (1 subgoal):\n 1. (\\<Prod>j = s..Suc n. a powr 2 ^ j) = a powr sum ((^) 2) {s..Suc n}", "have \"a powr 2 ^ Suc n = a powr sum (power 2) {s..Suc n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a powr 2 ^ Suc n = a powr sum ((^) 2) {s..Suc n}", "using that"], ["proof (prove)\nusing this:\n  s = Suc n\n\ngoal (1 subgoal):\n 1. a powr 2 ^ Suc n = a powr sum ((^) 2) {s..Suc n}", "by auto"], ["proof (state)\nthis:\n  a powr 2 ^ Suc n = a powr sum ((^) 2) {s..Suc n}\n\ngoal (1 subgoal):\n 1. (\\<Prod>j = s..Suc n. a powr 2 ^ j) = a powr sum ((^) 2) {s..Suc n}", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Prod>j = s..Suc n. a powr 2 ^ j) = a powr 2 ^ Suc n\n  a powr 2 ^ Suc n = a powr sum ((^) 2) {s..Suc n}", "show \"(\\<Prod>j = s..Suc n. a powr 2 ^ j) = a powr sum (power 2) {s..Suc n}\""], ["proof (prove)\nusing this:\n  (\\<Prod>j = s..Suc n. a powr 2 ^ j) = a powr 2 ^ Suc n\n  a powr 2 ^ Suc n = a powr sum ((^) 2) {s..Suc n}\n\ngoal (1 subgoal):\n 1. (\\<Prod>j = s..Suc n. a powr 2 ^ j) = a powr sum ((^) 2) {s..Suc n}", "using \\<open>s\\<le>Suc n\\<close>"], ["proof (prove)\nusing this:\n  (\\<Prod>j = s..Suc n. a powr 2 ^ j) = a powr 2 ^ Suc n\n  a powr 2 ^ Suc n = a powr sum ((^) 2) {s..Suc n}\n  s \\<le> Suc n\n\ngoal (1 subgoal):\n 1. (\\<Prod>j = s..Suc n. a powr 2 ^ j) = a powr sum ((^) 2) {s..Suc n}", "by linarith"], ["proof (state)\nthis:\n  (\\<Prod>j = s..Suc n. a powr 2 ^ j) = a powr sum ((^) 2) {s..Suc n}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  s = Suc n \\<Longrightarrow>\n  (\\<Prod>j = s..Suc n. a powr 2 ^ j) = a powr sum ((^) 2) {s..Suc n}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>s \\<le> n \\<Longrightarrow>\n                (\\<Prod>j = s..n. a powr 2 ^ j) = a powr sum ((^) 2) {s..n};\n        s \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> (\\<Prod>j = s..Suc n. a powr 2 ^ j) =\n                         a powr sum ((^) 2) {s..Suc n}", "ultimately"], ["proof (chain)\npicking this:\n  s \\<le> n \\<Longrightarrow>\n  (\\<Prod>j = s..Suc n. a powr 2 ^ j) = a powr sum ((^) 2) {s..Suc n}\n  s = Suc n \\<Longrightarrow>\n  (\\<Prod>j = s..Suc n. a powr 2 ^ j) = a powr sum ((^) 2) {s..Suc n}", "show ?case"], ["proof (prove)\nusing this:\n  s \\<le> n \\<Longrightarrow>\n  (\\<Prod>j = s..Suc n. a powr 2 ^ j) = a powr sum ((^) 2) {s..Suc n}\n  s = Suc n \\<Longrightarrow>\n  (\\<Prod>j = s..Suc n. a powr 2 ^ j) = a powr sum ((^) 2) {s..Suc n}\n\ngoal (1 subgoal):\n 1. (\\<Prod>j = s..Suc n. a powr 2 ^ j) = a powr sum ((^) 2) {s..Suc n}", "using \\<open>s\\<le>Suc n\\<close>"], ["proof (prove)\nusing this:\n  s \\<le> n \\<Longrightarrow>\n  (\\<Prod>j = s..Suc n. a powr 2 ^ j) = a powr sum ((^) 2) {s..Suc n}\n  s = Suc n \\<Longrightarrow>\n  (\\<Prod>j = s..Suc n. a powr 2 ^ j) = a powr sum ((^) 2) {s..Suc n}\n  s \\<le> Suc n\n\ngoal (1 subgoal):\n 1. (\\<Prod>j = s..Suc n. a powr 2 ^ j) = a powr sum ((^) 2) {s..Suc n}", "by linarith"], ["proof (state)\nthis:\n  (\\<Prod>j = s..Suc n. a powr 2 ^ j) = a powr sum ((^) 2) {s..Suc n}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma summable_ratio_test_tendsto:\n  fixes f :: \"nat \\<Rightarrow> 'a::banach\"\n  assumes \"c < 1\" and \"\\<forall>n. f n\\<noteq>0\" and \"(\\<lambda>n. norm (f (Suc n)) / norm (f n)) \\<longlonglongrightarrow> c\"\n  shows \"summable f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. summable f", "obtain N where N_dist:\"\\<forall>n\\<ge>N. dist (norm (f (Suc n)) / norm (f n)) c < (1-c)/2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<forall>n\\<ge>N.\n           dist (norm (f (Suc n)) / norm (f n)) c\n           < (1 - c) / 2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  c < 1\n  \\<forall>n. f n \\<noteq> (0::'a)\n  (\\<lambda>n. norm (f (Suc n)) / norm (f n)) \\<longlonglongrightarrow> c\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<forall>n\\<ge>N.\n           dist (norm (f (Suc n)) / norm (f n)) c\n           < (1 - c) / 2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding tendsto_iff eventually_sequentially"], ["proof (prove)\nusing this:\n  c < 1\n  \\<forall>n. f n \\<noteq> (0::'a)\n  \\<forall>e>0.\n     \\<exists>N.\n        \\<forall>n\\<ge>N. dist (norm (f (Suc n)) / norm (f n)) c < e\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<forall>n\\<ge>N.\n           dist (norm (f (Suc n)) / norm (f n)) c\n           < (1 - c) / 2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (meson diff_gt_0_iff_gt zero_less_divide_iff zero_less_numeral)"], ["proof (state)\nthis:\n  \\<forall>n\\<ge>N. dist (norm (f (Suc n)) / norm (f n)) c < (1 - c) / 2\n\ngoal (1 subgoal):\n 1. summable f", "have \"norm (f (Suc n)) / norm (f n) \\<le> (1+c)/2\" when \"n\\<ge>N\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (f (Suc n)) / norm (f n) \\<le> (1 + c) / 2", "using N_dist[rule_format,OF that] \\<open>c<1\\<close>"], ["proof (prove)\nusing this:\n  dist (norm (f (Suc n)) / norm (f n)) c < (1 - c) / 2\n  c < 1\n\ngoal (1 subgoal):\n 1. norm (f (Suc n)) / norm (f n) \\<le> (1 + c) / 2", "apply (auto simp add:field_simps dist_norm)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>c + 2 * \\<bar>norm (f (Suc n)) / norm (f n) - c\\<bar> < 1;\n     c < 1\\<rbrakk>\n    \\<Longrightarrow> 2 * norm (f (Suc n)) / norm (f n) \\<le> 1 + c", "by argo"], ["proof (state)\nthis:\n  N \\<le> ?n \\<Longrightarrow>\n  norm (f (Suc ?n)) / norm (f ?n) \\<le> (1 + c) / 2\n\ngoal (1 subgoal):\n 1. summable f", "then"], ["proof (chain)\npicking this:\n  N \\<le> ?n \\<Longrightarrow>\n  norm (f (Suc ?n)) / norm (f ?n) \\<le> (1 + c) / 2", "have \"norm (f (Suc n))  \\<le> (1+c)/2 * norm (f n)\" when \"n\\<ge>N\" for n"], ["proof (prove)\nusing this:\n  N \\<le> ?n \\<Longrightarrow>\n  norm (f (Suc ?n)) / norm (f ?n) \\<le> (1 + c) / 2\n\ngoal (1 subgoal):\n 1. norm (f (Suc n)) \\<le> (1 + c) / 2 * norm (f n)", "using that assms(2)[rule_format, of n]"], ["proof (prove)\nusing this:\n  N \\<le> ?n \\<Longrightarrow>\n  norm (f (Suc ?n)) / norm (f ?n) \\<le> (1 + c) / 2\n  N \\<le> n\n  f n \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. norm (f (Suc n)) \\<le> (1 + c) / 2 * norm (f n)", "by (auto simp add:divide_simps)"], ["proof (state)\nthis:\n  N \\<le> ?n \\<Longrightarrow>\n  norm (f (Suc ?n)) \\<le> (1 + c) / 2 * norm (f ?n)\n\ngoal (1 subgoal):\n 1. summable f", "moreover"], ["proof (state)\nthis:\n  N \\<le> ?n \\<Longrightarrow>\n  norm (f (Suc ?n)) \\<le> (1 + c) / 2 * norm (f ?n)\n\ngoal (1 subgoal):\n 1. summable f", "have \"(1+c)/2 < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + c) / 2 < 1", "using \\<open>c<1\\<close>"], ["proof (prove)\nusing this:\n  c < 1\n\ngoal (1 subgoal):\n 1. (1 + c) / 2 < 1", "by auto"], ["proof (state)\nthis:\n  (1 + c) / 2 < 1\n\ngoal (1 subgoal):\n 1. summable f", "ultimately"], ["proof (chain)\npicking this:\n  N \\<le> ?n \\<Longrightarrow>\n  norm (f (Suc ?n)) \\<le> (1 + c) / 2 * norm (f ?n)\n  (1 + c) / 2 < 1", "show ?thesis"], ["proof (prove)\nusing this:\n  N \\<le> ?n \\<Longrightarrow>\n  norm (f (Suc ?n)) \\<le> (1 + c) / 2 * norm (f ?n)\n  (1 + c) / 2 < 1\n\ngoal (1 subgoal):\n 1. summable f", "using summable_ratio_test[of _ N f]"], ["proof (prove)\nusing this:\n  N \\<le> ?n \\<Longrightarrow>\n  norm (f (Suc ?n)) \\<le> (1 + c) / 2 * norm (f ?n)\n  (1 + c) / 2 < 1\n  \\<lbrakk>?c < 1;\n   \\<And>n.\n      N \\<le> n \\<Longrightarrow>\n      norm (f (Suc n)) \\<le> ?c * norm (f n)\\<rbrakk>\n  \\<Longrightarrow> summable f\n\ngoal (1 subgoal):\n 1. summable f", "by blast"], ["proof (state)\nthis:\n  summable f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma summable_ln_plus:\n  fixes f::\"nat \\<Rightarrow> real\" \n  assumes \"summable f\" \"\\<forall>n. f n>0\"\n  shows \"summable (\\<lambda>n. ln (1+f n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. ln (1 + f n))", "proof (rule summable_comparison_test_ev[OF _ assms(1)])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. norm (ln (1 + f n)) \\<le> f n", "have \"ln (1 + f n) > 0\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < ln (1 + f n)", "by (simp add: assms(2) ln_gt_zero)"], ["proof (state)\nthis:\n  0 < ln (1 + f ?n)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. norm (ln (1 + f n)) \\<le> f n", "moreover"], ["proof (state)\nthis:\n  0 < ln (1 + f ?n)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. norm (ln (1 + f n)) \\<le> f n", "have \"ln (1 + f n) \\<le> f n\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (1 + f n) \\<le> f n", "apply (rule ln_add_one_self_le_self2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. - 1 < f n", "using assms(2)[rule_format,of n]"], ["proof (prove)\nusing this:\n  0 < f n\n\ngoal (1 subgoal):\n 1. - 1 < f n", "by auto"], ["proof (state)\nthis:\n  ln (1 + f ?n) \\<le> f ?n\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. norm (ln (1 + f n)) \\<le> f n", "ultimately"], ["proof (chain)\npicking this:\n  0 < ln (1 + f ?n)\n  ln (1 + f ?n) \\<le> f ?n", "show \"\\<forall>\\<^sub>F n in sequentially. norm (ln (1 + f n)) \\<le> f n\""], ["proof (prove)\nusing this:\n  0 < ln (1 + f ?n)\n  ln (1 + f ?n) \\<le> f ?n\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. norm (ln (1 + f n)) \\<le> f n", "by (auto intro!: eventuallyI simp add:less_imp_le)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially. norm (ln (1 + f n)) \\<le> f n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma suminf_real_offset_le:\n  fixes f :: \"nat \\<Rightarrow> real\"\n  assumes f: \"\\<And>i. 0 \\<le> f i\" and \"summable f\"\n  shows \"(\\<Sum>i. f (i + k)) \\<le> suminf f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i. f (i + k)) \\<le> suminf f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>i. f (i + k)) \\<le> suminf f", "have \"(\\<lambda>n. \\<Sum>i<n. f (i + k)) \\<longlonglongrightarrow> (\\<Sum>i. f (i + k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. \\<Sum>i<n. f (i + k))\n    \\<longlonglongrightarrow> (\\<Sum>i. f (i + k))", "using summable_sums[OF \\<open>summable f\\<close>]"], ["proof (prove)\nusing this:\n  f sums suminf f\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. \\<Sum>i<n. f (i + k))\n    \\<longlonglongrightarrow> (\\<Sum>i. f (i + k))", "by (simp add: assms(2) summable_LIMSEQ summable_ignore_initial_segment)"], ["proof (state)\nthis:\n  (\\<lambda>n. \\<Sum>i<n. f (i + k))\n  \\<longlonglongrightarrow> (\\<Sum>i. f (i + k))\n\ngoal (1 subgoal):\n 1. (\\<Sum>i. f (i + k)) \\<le> suminf f", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>n. \\<Sum>i<n. f (i + k))\n  \\<longlonglongrightarrow> (\\<Sum>i. f (i + k))\n\ngoal (1 subgoal):\n 1. (\\<Sum>i. f (i + k)) \\<le> suminf f", "have \"(\\<lambda>n. \\<Sum>i<n. f i) \\<longlonglongrightarrow> (\\<Sum>i. f i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. sum f {..<n}) \\<longlonglongrightarrow> (\\<Sum>i. f i)", "using summable_sums[OF \\<open>summable f\\<close>]"], ["proof (prove)\nusing this:\n  f sums suminf f\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. sum f {..<n}) \\<longlonglongrightarrow> (\\<Sum>i. f i)", "by (simp add: sums_def atLeast0LessThan f)"], ["proof (state)\nthis:\n  (\\<lambda>n. sum f {..<n}) \\<longlonglongrightarrow> (\\<Sum>i. f i)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i. f (i + k)) \\<le> suminf f", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n. sum f {..<n}) \\<longlonglongrightarrow> (\\<Sum>i. f i)", "have \"(\\<lambda>n. \\<Sum>i<n + k. f i) \\<longlonglongrightarrow> (\\<Sum>i. f i)\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. sum f {..<n}) \\<longlonglongrightarrow> (\\<Sum>i. f i)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. sum f {..<n + k}) \\<longlonglongrightarrow> (\\<Sum>i. f i)", "by (rule LIMSEQ_ignore_initial_segment)"], ["proof (state)\nthis:\n  (\\<lambda>n. sum f {..<n + k}) \\<longlonglongrightarrow> (\\<Sum>i. f i)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i. f (i + k)) \\<le> suminf f", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>n. \\<Sum>i<n. f (i + k))\n  \\<longlonglongrightarrow> (\\<Sum>i. f (i + k))\n  (\\<lambda>n. sum f {..<n + k}) \\<longlonglongrightarrow> (\\<Sum>i. f i)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>n. \\<Sum>i<n. f (i + k))\n  \\<longlonglongrightarrow> (\\<Sum>i. f (i + k))\n  (\\<lambda>n. sum f {..<n + k}) \\<longlonglongrightarrow> (\\<Sum>i. f i)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i. f (i + k)) \\<le> suminf f", "proof (rule LIMSEQ_le, safe intro!: exI[of _ k])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>(\\<lambda>n. \\<Sum>i<n. f (i + k))\n                \\<longlonglongrightarrow> (\\<Sum>i. f (i + k));\n        (\\<lambda>n. sum f {..<n + k})\n        \\<longlonglongrightarrow> (\\<Sum>i. f i);\n        k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i<n. f (i + k)) \\<le> sum f {..<n + k}", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>(\\<lambda>n. \\<Sum>i<n. f (i + k))\n                \\<longlonglongrightarrow> (\\<Sum>i. f (i + k));\n        (\\<lambda>n. sum f {..<n + k})\n        \\<longlonglongrightarrow> (\\<Sum>i. f i);\n        k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i<n. f (i + k)) \\<le> sum f {..<n + k}", "assume \"k \\<le> n\""], ["proof (state)\nthis:\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>(\\<lambda>n. \\<Sum>i<n. f (i + k))\n                \\<longlonglongrightarrow> (\\<Sum>i. f (i + k));\n        (\\<lambda>n. sum f {..<n + k})\n        \\<longlonglongrightarrow> (\\<Sum>i. f i);\n        k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i<n. f (i + k)) \\<le> sum f {..<n + k}", "have \"(\\<Sum>i<n. f (i + k)) = (\\<Sum>i<n. (f \\<circ> (\\<lambda>i. i + k)) i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<n. f (i + k)) = sum (f \\<circ> (\\<lambda>i. i + k)) {..<n}", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>i<n. f (i + k)) = sum (f \\<circ> (\\<lambda>i. i + k)) {..<n}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>(\\<lambda>n. \\<Sum>i<n. f (i + k))\n                \\<longlonglongrightarrow> (\\<Sum>i. f (i + k));\n        (\\<lambda>n. sum f {..<n + k})\n        \\<longlonglongrightarrow> (\\<Sum>i. f i);\n        k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i<n. f (i + k)) \\<le> sum f {..<n + k}", "also"], ["proof (state)\nthis:\n  (\\<Sum>i<n. f (i + k)) = sum (f \\<circ> (\\<lambda>i. i + k)) {..<n}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>(\\<lambda>n. \\<Sum>i<n. f (i + k))\n                \\<longlonglongrightarrow> (\\<Sum>i. f (i + k));\n        (\\<lambda>n. sum f {..<n + k})\n        \\<longlonglongrightarrow> (\\<Sum>i. f i);\n        k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i<n. f (i + k)) \\<le> sum f {..<n + k}", "have \"\\<dots> = (\\<Sum>i\\<in>(\\<lambda>i. i + k) ` {..<n}. f i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (f \\<circ> (\\<lambda>i. i + k)) {..<n} =\n    sum f ((\\<lambda>i. i + k) ` {..<n})", "by (subst sum.reindex) auto"], ["proof (state)\nthis:\n  sum (f \\<circ> (\\<lambda>i. i + k)) {..<n} =\n  sum f ((\\<lambda>i. i + k) ` {..<n})\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>(\\<lambda>n. \\<Sum>i<n. f (i + k))\n                \\<longlonglongrightarrow> (\\<Sum>i. f (i + k));\n        (\\<lambda>n. sum f {..<n + k})\n        \\<longlonglongrightarrow> (\\<Sum>i. f i);\n        k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i<n. f (i + k)) \\<le> sum f {..<n + k}", "also"], ["proof (state)\nthis:\n  sum (f \\<circ> (\\<lambda>i. i + k)) {..<n} =\n  sum f ((\\<lambda>i. i + k) ` {..<n})\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>(\\<lambda>n. \\<Sum>i<n. f (i + k))\n                \\<longlonglongrightarrow> (\\<Sum>i. f (i + k));\n        (\\<lambda>n. sum f {..<n + k})\n        \\<longlonglongrightarrow> (\\<Sum>i. f i);\n        k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i<n. f (i + k)) \\<le> sum f {..<n + k}", "have \"\\<dots> \\<le> sum f {..<n + k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f ((\\<lambda>i. i + k) ` {..<n}) \\<le> sum f {..<n + k}", "by (intro sum_mono2) (auto simp: f)"], ["proof (state)\nthis:\n  sum f ((\\<lambda>i. i + k) ` {..<n}) \\<le> sum f {..<n + k}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>(\\<lambda>n. \\<Sum>i<n. f (i + k))\n                \\<longlonglongrightarrow> (\\<Sum>i. f (i + k));\n        (\\<lambda>n. sum f {..<n + k})\n        \\<longlonglongrightarrow> (\\<Sum>i. f i);\n        k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i<n. f (i + k)) \\<le> sum f {..<n + k}", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>i<n. f (i + k)) \\<le> sum f {..<n + k}", "show \"(\\<Sum>i<n. f (i + k)) \\<le> sum f {..<n + k}\""], ["proof (prove)\nusing this:\n  (\\<Sum>i<n. f (i + k)) \\<le> sum f {..<n + k}\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<n. f (i + k)) \\<le> sum f {..<n + k}", "."], ["proof (state)\nthis:\n  (\\<Sum>i<n. f (i + k)) \\<le> sum f {..<n + k}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>i. f (i + k)) \\<le> suminf f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma factt:\n  fixes s n ::nat assumes \"s \\<le> n\" \n  shows \" (\\<Sum>i=s..n. 2^i) < (2^(n+1) :: real) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum ((^) 2) {s..n} < 2 ^ (n + 1)", "using assms"], ["proof (prove)\nusing this:\n  s \\<le> n\n\ngoal (1 subgoal):\n 1. sum ((^) 2) {s..n} < 2 ^ (n + 1)", "proof (induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. s \\<le> 0 \\<Longrightarrow> sum ((^) 2) {s..0} < 2 ^ (0 + 1)\n 2. \\<And>n.\n       \\<lbrakk>s \\<le> n \\<Longrightarrow>\n                sum ((^) 2) {s..n} < 2 ^ (n + 1);\n        s \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> sum ((^) 2) {s..Suc n} < 2 ^ (Suc n + 1)", "case 0"], ["proof (state)\nthis:\n  s \\<le> 0\n\ngoal (2 subgoals):\n 1. s \\<le> 0 \\<Longrightarrow> sum ((^) 2) {s..0} < 2 ^ (0 + 1)\n 2. \\<And>n.\n       \\<lbrakk>s \\<le> n \\<Longrightarrow>\n                sum ((^) 2) {s..n} < 2 ^ (n + 1);\n        s \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> sum ((^) 2) {s..Suc n} < 2 ^ (Suc n + 1)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum ((^) 2) {s..0} < 2 ^ (0 + 1)", "by  auto"], ["proof (state)\nthis:\n  sum ((^) 2) {s..0} < 2 ^ (0 + 1)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>s \\<le> n \\<Longrightarrow>\n                sum ((^) 2) {s..n} < 2 ^ (n + 1);\n        s \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> sum ((^) 2) {s..Suc n} < 2 ^ (Suc n + 1)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>s \\<le> n \\<Longrightarrow>\n                sum ((^) 2) {s..n} < 2 ^ (n + 1);\n        s \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> sum ((^) 2) {s..Suc n} < 2 ^ (Suc n + 1)", "case (Suc n)"], ["proof (state)\nthis:\n  s \\<le> n \\<Longrightarrow> sum ((^) 2) {s..n} < 2 ^ (n + 1)\n  s \\<le> Suc n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>s \\<le> n \\<Longrightarrow>\n                sum ((^) 2) {s..n} < 2 ^ (n + 1);\n        s \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> sum ((^) 2) {s..Suc n} < 2 ^ (Suc n + 1)", "have ?case when  \"s=n+1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum ((^) 2) {s..Suc n} < 2 ^ (Suc n + 1)", "using that"], ["proof (prove)\nusing this:\n  s = n + 1\n\ngoal (1 subgoal):\n 1. sum ((^) 2) {s..Suc n} < 2 ^ (Suc n + 1)", "by auto"], ["proof (state)\nthis:\n  s = n + 1 \\<Longrightarrow> sum ((^) 2) {s..Suc n} < 2 ^ (Suc n + 1)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>s \\<le> n \\<Longrightarrow>\n                sum ((^) 2) {s..n} < 2 ^ (n + 1);\n        s \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> sum ((^) 2) {s..Suc n} < 2 ^ (Suc n + 1)", "moreover"], ["proof (state)\nthis:\n  s = n + 1 \\<Longrightarrow> sum ((^) 2) {s..Suc n} < 2 ^ (Suc n + 1)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>s \\<le> n \\<Longrightarrow>\n                sum ((^) 2) {s..n} < 2 ^ (n + 1);\n        s \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> sum ((^) 2) {s..Suc n} < 2 ^ (Suc n + 1)", "have ?case when  \"s \\<noteq> n+1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum ((^) 2) {s..Suc n} < 2 ^ (Suc n + 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum ((^) 2) {s..Suc n} < 2 ^ (Suc n + 1)", "have\"(\\<Sum>i=s..(n+1). 2^i ) = (\\<Sum>i=s..n. 2^i ) + (2::real)^(n+1) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum ((^) 2) {s..n + 1} = sum ((^) 2) {s..n} + 2 ^ (n + 1)", "using sum.cl_ivl_Suc \\<open>s \\<le> Suc n \\<close>"], ["proof (prove)\nusing this:\n  sum ?g {?m..Suc ?n} =\n  (if Suc ?n < ?m then 0::?'a else sum ?g {?m..?n} + ?g (Suc ?n))\n  s \\<le> Suc n\n\ngoal (1 subgoal):\n 1. sum ((^) 2) {s..n + 1} = sum ((^) 2) {s..n} + 2 ^ (n + 1)", "by (auto simp add:add.commute)"], ["proof (state)\nthis:\n  sum ((^) 2) {s..n + 1} = sum ((^) 2) {s..n} + 2 ^ (n + 1)\n\ngoal (1 subgoal):\n 1. sum ((^) 2) {s..Suc n} < 2 ^ (Suc n + 1)", "also"], ["proof (state)\nthis:\n  sum ((^) 2) {s..n + 1} = sum ((^) 2) {s..n} + 2 ^ (n + 1)\n\ngoal (1 subgoal):\n 1. sum ((^) 2) {s..Suc n} < 2 ^ (Suc n + 1)", "have \"... < (2) ^ (n +1) + (2)^(n+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum ((^) 2) {s..n} + 2 ^ (n + 1) < 2 ^ (n + 1) + 2 ^ (n + 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum ((^) 2) {s..n} + 2 ^ (n + 1) < 2 ^ (n + 1) + 2 ^ (n + 1)", "have \"s \\<le>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<le> n", "using that  \\<open>s \\<le> Suc n \\<close>"], ["proof (prove)\nusing this:\n  s \\<noteq> n + 1\n  s \\<le> Suc n\n\ngoal (1 subgoal):\n 1. s \\<le> n", "by auto"], ["proof (state)\nthis:\n  s \\<le> n\n\ngoal (1 subgoal):\n 1. sum ((^) 2) {s..n} + 2 ^ (n + 1) < 2 ^ (n + 1) + 2 ^ (n + 1)", "then"], ["proof (chain)\npicking this:\n  s \\<le> n", "show ?thesis"], ["proof (prove)\nusing this:\n  s \\<le> n\n\ngoal (1 subgoal):\n 1. sum ((^) 2) {s..n} + 2 ^ (n + 1) < 2 ^ (n + 1) + 2 ^ (n + 1)", "using Suc.hyps \\<open>s \\<le> n\\<close>"], ["proof (prove)\nusing this:\n  s \\<le> n\n  s \\<le> n \\<Longrightarrow> sum ((^) 2) {s..n} < 2 ^ (n + 1)\n  s \\<le> n\n\ngoal (1 subgoal):\n 1. sum ((^) 2) {s..n} + 2 ^ (n + 1) < 2 ^ (n + 1) + 2 ^ (n + 1)", "by linarith"], ["proof (state)\nthis:\n  sum ((^) 2) {s..n} + 2 ^ (n + 1) < 2 ^ (n + 1) + 2 ^ (n + 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sum ((^) 2) {s..n} + 2 ^ (n + 1) < 2 ^ (n + 1) + 2 ^ (n + 1)\n\ngoal (1 subgoal):\n 1. sum ((^) 2) {s..Suc n} < 2 ^ (Suc n + 1)", "also"], ["proof (state)\nthis:\n  sum ((^) 2) {s..n} + 2 ^ (n + 1) < 2 ^ (n + 1) + 2 ^ (n + 1)\n\ngoal (1 subgoal):\n 1. sum ((^) 2) {s..Suc n} < 2 ^ (Suc n + 1)", "have \"... = 2^(n+2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (n + 1) + 2 ^ (n + 1) = 2 ^ (n + 2)", "by simp"], ["proof (state)\nthis:\n  2 ^ (n + 1) + 2 ^ (n + 1) = 2 ^ (n + 2)\n\ngoal (1 subgoal):\n 1. sum ((^) 2) {s..Suc n} < 2 ^ (Suc n + 1)", "finally"], ["proof (chain)\npicking this:\n  sum ((^) 2) {s..n + 1} < 2 ^ (n + 2)", "show \"(\\<Sum>i=s..(Suc n). 2^i )< (2::real)^(Suc n+1)\""], ["proof (prove)\nusing this:\n  sum ((^) 2) {s..n + 1} < 2 ^ (n + 2)\n\ngoal (1 subgoal):\n 1. sum ((^) 2) {s..Suc n} < 2 ^ (Suc n + 1)", "by auto"], ["proof (state)\nthis:\n  sum ((^) 2) {s..Suc n} < 2 ^ (Suc n + 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  s \\<noteq> n + 1 \\<Longrightarrow>\n  sum ((^) 2) {s..Suc n} < 2 ^ (Suc n + 1)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>s \\<le> n \\<Longrightarrow>\n                sum ((^) 2) {s..n} < 2 ^ (n + 1);\n        s \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> sum ((^) 2) {s..Suc n} < 2 ^ (Suc n + 1)", "ultimately"], ["proof (chain)\npicking this:\n  s = n + 1 \\<Longrightarrow> sum ((^) 2) {s..Suc n} < 2 ^ (Suc n + 1)\n  s \\<noteq> n + 1 \\<Longrightarrow>\n  sum ((^) 2) {s..Suc n} < 2 ^ (Suc n + 1)", "show ?case"], ["proof (prove)\nusing this:\n  s = n + 1 \\<Longrightarrow> sum ((^) 2) {s..Suc n} < 2 ^ (Suc n + 1)\n  s \\<noteq> n + 1 \\<Longrightarrow>\n  sum ((^) 2) {s..Suc n} < 2 ^ (Suc n + 1)\n\ngoal (1 subgoal):\n 1. sum ((^) 2) {s..Suc n} < 2 ^ (Suc n + 1)", "by blast"], ["proof (state)\nthis:\n  sum ((^) 2) {s..Suc n} < 2 ^ (Suc n + 1)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Auxiliary lemmas and the main proof\\<close>"], ["", "lemma showpre7:\n  fixes a b ::\"nat\\<Rightarrow>int \" and q p::int\n  assumes \"q>0\" and \"p>0\"and a: \"\\<forall>n. a n>0\" and \"\\<forall>n. b n>0\" and \n    assumerational:\"(\\<lambda> n. b (n+1) / a (n+1) )  sums (p/q)\"\n  shows \"q*((\\<Prod>j=1..n. of_int( a j)))*(suminf (\\<lambda>(j::nat). (b (j+n+1)/ a (j+n+1 )))) \n        = ((\\<Prod>j=1..n. of_int( a j)))*(p -q* (\\<Sum>j=1..n. b j / a j))       \""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n    (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1))) =\n    (\\<Prod>j = 1..n. real_of_int (a j)) *\n    (real_of_int p -\n     real_of_int q *\n     (\\<Sum>j = 1..n. real_of_int (b j) / real_of_int (a j)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n    (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1))) =\n    (\\<Prod>j = 1..n. real_of_int (a j)) *\n    (real_of_int p -\n     real_of_int q *\n     (\\<Sum>j = 1..n. real_of_int (b j) / real_of_int (a j)))", "define aa where \"aa=(\\<Prod>j = 1..n. real_of_int (a j))\""], ["proof (state)\nthis:\n  aa = (\\<Prod>j = 1..n. real_of_int (a j))\n\ngoal (1 subgoal):\n 1. real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n    (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1))) =\n    (\\<Prod>j = 1..n. real_of_int (a j)) *\n    (real_of_int p -\n     real_of_int q *\n     (\\<Sum>j = 1..n. real_of_int (b j) / real_of_int (a j)))", "define ff where \"ff=(\\<lambda>i. real_of_int (b (i+1)) / real_of_int (a (i+1)))\""], ["proof (state)\nthis:\n  ff = (\\<lambda>i. real_of_int (b (i + 1)) / real_of_int (a (i + 1)))\n\ngoal (1 subgoal):\n 1. real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n    (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1))) =\n    (\\<Prod>j = 1..n. real_of_int (a j)) *\n    (real_of_int p -\n     real_of_int q *\n     (\\<Sum>j = 1..n. real_of_int (b j) / real_of_int (a j)))", "have \"(\\<Sum>j. ff (j+n)) =  (\\<Sum>n. ff n) - sum ff {..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j. ff (j + n)) = (\\<Sum>n. ff n) - sum ff {..<n}", "apply (rule suminf_minus_initial_segment)"], ["proof (prove)\ngoal (1 subgoal):\n 1. summable ff", "using assumerational"], ["proof (prove)\nusing this:\n  (\\<lambda>n. real_of_int (b (n + 1)) / real_of_int (a (n + 1))) sums\n  (real_of_int p / real_of_int q)\n\ngoal (1 subgoal):\n 1. summable ff", "unfolding ff_def"], ["proof (prove)\nusing this:\n  (\\<lambda>n. real_of_int (b (n + 1)) / real_of_int (a (n + 1))) sums\n  (real_of_int p / real_of_int q)\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. real_of_int (b (n + 1)) / real_of_int (a (n + 1)))", "by (simp add: sums_summable)"], ["proof (state)\nthis:\n  (\\<Sum>j. ff (j + n)) = (\\<Sum>n. ff n) - sum ff {..<n}\n\ngoal (1 subgoal):\n 1. real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n    (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1))) =\n    (\\<Prod>j = 1..n. real_of_int (a j)) *\n    (real_of_int p -\n     real_of_int q *\n     (\\<Sum>j = 1..n. real_of_int (b j) / real_of_int (a j)))", "also"], ["proof (state)\nthis:\n  (\\<Sum>j. ff (j + n)) = (\\<Sum>n. ff n) - sum ff {..<n}\n\ngoal (1 subgoal):\n 1. real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n    (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1))) =\n    (\\<Prod>j = 1..n. real_of_int (a j)) *\n    (real_of_int p -\n     real_of_int q *\n     (\\<Sum>j = 1..n. real_of_int (b j) / real_of_int (a j)))", "have \"... = p/q - sum ff {..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n. ff n) - sum ff {..<n} =\n    real_of_int p / real_of_int q - sum ff {..<n}", "using assumerational"], ["proof (prove)\nusing this:\n  (\\<lambda>n. real_of_int (b (n + 1)) / real_of_int (a (n + 1))) sums\n  (real_of_int p / real_of_int q)\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. ff n) - sum ff {..<n} =\n    real_of_int p / real_of_int q - sum ff {..<n}", "unfolding ff_def"], ["proof (prove)\nusing this:\n  (\\<lambda>n. real_of_int (b (n + 1)) / real_of_int (a (n + 1))) sums\n  (real_of_int p / real_of_int q)\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. real_of_int (b (n + 1)) / real_of_int (a (n + 1))) -\n    (\\<Sum>i<n. real_of_int (b (i + 1)) / real_of_int (a (i + 1))) =\n    real_of_int p / real_of_int q -\n    (\\<Sum>i<n. real_of_int (b (i + 1)) / real_of_int (a (i + 1)))", "by (simp add: sums_iff)"], ["proof (state)\nthis:\n  (\\<Sum>n. ff n) - sum ff {..<n} =\n  real_of_int p / real_of_int q - sum ff {..<n}\n\ngoal (1 subgoal):\n 1. real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n    (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1))) =\n    (\\<Prod>j = 1..n. real_of_int (a j)) *\n    (real_of_int p -\n     real_of_int q *\n     (\\<Sum>j = 1..n. real_of_int (b j) / real_of_int (a j)))", "also"], ["proof (state)\nthis:\n  (\\<Sum>n. ff n) - sum ff {..<n} =\n  real_of_int p / real_of_int q - sum ff {..<n}\n\ngoal (1 subgoal):\n 1. real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n    (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1))) =\n    (\\<Prod>j = 1..n. real_of_int (a j)) *\n    (real_of_int p -\n     real_of_int q *\n     (\\<Sum>j = 1..n. real_of_int (b j) / real_of_int (a j)))", "have \"... = p/q - (\\<Sum>j=1..n. ff (j-1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int p / real_of_int q - sum ff {..<n} =\n    real_of_int p / real_of_int q - (\\<Sum>j = 1..n. ff (j - 1))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. real_of_int p / real_of_int q - sum ff {..<n} =\n    real_of_int p / real_of_int q - (\\<Sum>j = 1..n. ff (j - 1))", "have \"sum ff {..<n} = (\\<Sum>j=1..n. ff (j-1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum ff {..<n} = (\\<Sum>j = 1..n. ff (j - 1))", "apply (subst sum_bounds_lt_plus1[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum ff {..<n} = (\\<Sum>k<n. ff (Suc k - 1))", "by simp"], ["proof (state)\nthis:\n  sum ff {..<n} = (\\<Sum>j = 1..n. ff (j - 1))\n\ngoal (1 subgoal):\n 1. real_of_int p / real_of_int q - sum ff {..<n} =\n    real_of_int p / real_of_int q - (\\<Sum>j = 1..n. ff (j - 1))", "then"], ["proof (chain)\npicking this:\n  sum ff {..<n} = (\\<Sum>j = 1..n. ff (j - 1))", "show ?thesis"], ["proof (prove)\nusing this:\n  sum ff {..<n} = (\\<Sum>j = 1..n. ff (j - 1))\n\ngoal (1 subgoal):\n 1. real_of_int p / real_of_int q - sum ff {..<n} =\n    real_of_int p / real_of_int q - (\\<Sum>j = 1..n. ff (j - 1))", "unfolding ff_def"], ["proof (prove)\nusing this:\n  (\\<Sum>i<n. real_of_int (b (i + 1)) / real_of_int (a (i + 1))) =\n  (\\<Sum>j = 1..n.\n      real_of_int (b (j - 1 + 1)) / real_of_int (a (j - 1 + 1)))\n\ngoal (1 subgoal):\n 1. real_of_int p / real_of_int q -\n    (\\<Sum>i<n. real_of_int (b (i + 1)) / real_of_int (a (i + 1))) =\n    real_of_int p / real_of_int q -\n    (\\<Sum>j = 1..n.\n        real_of_int (b (j - 1 + 1)) / real_of_int (a (j - 1 + 1)))", "by auto"], ["proof (state)\nthis:\n  real_of_int p / real_of_int q - sum ff {..<n} =\n  real_of_int p / real_of_int q - (\\<Sum>j = 1..n. ff (j - 1))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  real_of_int p / real_of_int q - sum ff {..<n} =\n  real_of_int p / real_of_int q - (\\<Sum>j = 1..n. ff (j - 1))\n\ngoal (1 subgoal):\n 1. real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n    (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1))) =\n    (\\<Prod>j = 1..n. real_of_int (a j)) *\n    (real_of_int p -\n     real_of_int q *\n     (\\<Sum>j = 1..n. real_of_int (b j) / real_of_int (a j)))", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>j. ff (j + n)) =\n  real_of_int p / real_of_int q - (\\<Sum>j = 1..n. ff (j - 1))", "have \"(\\<Sum>j. ff (j + n)) = p / q - (\\<Sum>j = 1..n. ff (j - 1))\""], ["proof (prove)\nusing this:\n  (\\<Sum>j. ff (j + n)) =\n  real_of_int p / real_of_int q - (\\<Sum>j = 1..n. ff (j - 1))\n\ngoal (1 subgoal):\n 1. (\\<Sum>j. ff (j + n)) =\n    real_of_int p / real_of_int q - (\\<Sum>j = 1..n. ff (j - 1))", "."], ["proof (state)\nthis:\n  (\\<Sum>j. ff (j + n)) =\n  real_of_int p / real_of_int q - (\\<Sum>j = 1..n. ff (j - 1))\n\ngoal (1 subgoal):\n 1. real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n    (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1))) =\n    (\\<Prod>j = 1..n. real_of_int (a j)) *\n    (real_of_int p -\n     real_of_int q *\n     (\\<Sum>j = 1..n. real_of_int (b j) / real_of_int (a j)))", "then"], ["proof (chain)\npicking this:\n  (\\<Sum>j. ff (j + n)) =\n  real_of_int p / real_of_int q - (\\<Sum>j = 1..n. ff (j - 1))", "have \"q*(\\<Sum>j. ff (j + n)) = p - q*(\\<Sum>j = 1..n. ff (j - 1))\""], ["proof (prove)\nusing this:\n  (\\<Sum>j. ff (j + n)) =\n  real_of_int p / real_of_int q - (\\<Sum>j = 1..n. ff (j - 1))\n\ngoal (1 subgoal):\n 1. real_of_int q * (\\<Sum>j. ff (j + n)) =\n    real_of_int p - real_of_int q * (\\<Sum>j = 1..n. ff (j - 1))", "using \\<open>q>0\\<close>"], ["proof (prove)\nusing this:\n  (\\<Sum>j. ff (j + n)) =\n  real_of_int p / real_of_int q - (\\<Sum>j = 1..n. ff (j - 1))\n  0 < q\n\ngoal (1 subgoal):\n 1. real_of_int q * (\\<Sum>j. ff (j + n)) =\n    real_of_int p - real_of_int q * (\\<Sum>j = 1..n. ff (j - 1))", "by (auto simp add:field_simps)"], ["proof (state)\nthis:\n  real_of_int q * (\\<Sum>j. ff (j + n)) =\n  real_of_int p - real_of_int q * (\\<Sum>j = 1..n. ff (j - 1))\n\ngoal (1 subgoal):\n 1. real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n    (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1))) =\n    (\\<Prod>j = 1..n. real_of_int (a j)) *\n    (real_of_int p -\n     real_of_int q *\n     (\\<Sum>j = 1..n. real_of_int (b j) / real_of_int (a j)))", "then"], ["proof (chain)\npicking this:\n  real_of_int q * (\\<Sum>j. ff (j + n)) =\n  real_of_int p - real_of_int q * (\\<Sum>j = 1..n. ff (j - 1))", "have \"aa*q*(\\<Sum>j. ff (j + n)) = aa*(p - q*(\\<Sum>j = 1..n. ff (j - 1)))\""], ["proof (prove)\nusing this:\n  real_of_int q * (\\<Sum>j. ff (j + n)) =\n  real_of_int p - real_of_int q * (\\<Sum>j = 1..n. ff (j - 1))\n\ngoal (1 subgoal):\n 1. aa * real_of_int q * (\\<Sum>j. ff (j + n)) =\n    aa * (real_of_int p - real_of_int q * (\\<Sum>j = 1..n. ff (j - 1)))", "by auto"], ["proof (state)\nthis:\n  aa * real_of_int q * (\\<Sum>j. ff (j + n)) =\n  aa * (real_of_int p - real_of_int q * (\\<Sum>j = 1..n. ff (j - 1)))\n\ngoal (1 subgoal):\n 1. real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n    (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1))) =\n    (\\<Prod>j = 1..n. real_of_int (a j)) *\n    (real_of_int p -\n     real_of_int q *\n     (\\<Sum>j = 1..n. real_of_int (b j) / real_of_int (a j)))", "then"], ["proof (chain)\npicking this:\n  aa * real_of_int q * (\\<Sum>j. ff (j + n)) =\n  aa * (real_of_int p - real_of_int q * (\\<Sum>j = 1..n. ff (j - 1)))", "show ?thesis"], ["proof (prove)\nusing this:\n  aa * real_of_int q * (\\<Sum>j. ff (j + n)) =\n  aa * (real_of_int p - real_of_int q * (\\<Sum>j = 1..n. ff (j - 1)))\n\ngoal (1 subgoal):\n 1. real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n    (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1))) =\n    (\\<Prod>j = 1..n. real_of_int (a j)) *\n    (real_of_int p -\n     real_of_int q *\n     (\\<Sum>j = 1..n. real_of_int (b j) / real_of_int (a j)))", "unfolding aa_def ff_def"], ["proof (prove)\nusing this:\n  (\\<Prod>j = 1..n. real_of_int (a j)) * real_of_int q *\n  (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1))) =\n  (\\<Prod>j = 1..n. real_of_int (a j)) *\n  (real_of_int p -\n   real_of_int q *\n   (\\<Sum>j = 1..n.\n       real_of_int (b (j - 1 + 1)) / real_of_int (a (j - 1 + 1))))\n\ngoal (1 subgoal):\n 1. real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n    (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1))) =\n    (\\<Prod>j = 1..n. real_of_int (a j)) *\n    (real_of_int p -\n     real_of_int q *\n     (\\<Sum>j = 1..n. real_of_int (b j) / real_of_int (a j)))", "by auto"], ["proof (state)\nthis:\n  real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n  (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1))) =\n  (\\<Prod>j = 1..n. real_of_int (a j)) *\n  (real_of_int p -\n   real_of_int q * (\\<Sum>j = 1..n. real_of_int (b j) / real_of_int (a j)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma show7:\n  fixes d::\"nat\\<Rightarrow>real\" and a b::\"nat\\<Rightarrow>int \" and q p::int\n  assumes \"q \\<ge>1\" and \"p \\<ge> 1\" and a: \"\\<forall>n. a n \\<ge> 1\" and \"\\<forall>n. b n \\<ge> 1\"\n    and assumerational:\"(\\<lambda> n. b (n+1) / a (n+1) ) sums (p/q)\"\n  shows \"q*((\\<Prod>j=1..n. of_int( a j)))*( suminf (\\<lambda> (j::nat). (b (j+n+1)/ a (j+n+1 )))) \\<ge> 1 \"\n    (is \"?L \\<ge> _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n            (\\<Sum>j.\n                real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 \\<le> real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n            (\\<Sum>j.\n                real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))", "define LL where \"LL=?L\""], ["proof (state)\nthis:\n  LL =\n  real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n  (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n\ngoal (1 subgoal):\n 1. 1 \\<le> real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n            (\\<Sum>j.\n                real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))", "define aa where \"aa=(\\<Prod>j = 1..n. real_of_int (a j))\""], ["proof (state)\nthis:\n  aa = (\\<Prod>j = 1..n. real_of_int (a j))\n\ngoal (1 subgoal):\n 1. 1 \\<le> real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n            (\\<Sum>j.\n                real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))", "define ff where \"ff=(\\<lambda>i. real_of_int (b (i+1)) / real_of_int (a (i+1)))\""], ["proof (state)\nthis:\n  ff = (\\<lambda>i. real_of_int (b (i + 1)) / real_of_int (a (i + 1)))\n\ngoal (1 subgoal):\n 1. 1 \\<le> real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n            (\\<Sum>j.\n                real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))", "have \"?L > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n        (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n        (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))", "have \"aa > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < aa", "unfolding aa_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < (\\<Prod>j = 1..n. real_of_int (a j))", "using a"], ["proof (prove)\nusing this:\n  \\<forall>n. 1 \\<le> a n\n\ngoal (1 subgoal):\n 1. 0 < (\\<Prod>j = 1..n. real_of_int (a j))", "by (induction n) (simp_all add: int_one_le_iff_zero_less prod_pos)"], ["proof (state)\nthis:\n  0 < aa\n\ngoal (1 subgoal):\n 1. 0 < real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n        (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))", "moreover"], ["proof (state)\nthis:\n  0 < aa\n\ngoal (1 subgoal):\n 1. 0 < real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n        (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))", "have \"(\\<Sum>j. ff (j + n)) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < (\\<Sum>j. ff (j + n))", "proof (rule suminf_pos)"], ["proof (state)\ngoal (2 subgoals):\n 1. summable (\\<lambda>j. ff (j + n))\n 2. \\<And>na. 0 < ff (na + n)", "have \"summable ff\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable ff", "unfolding ff_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. summable (\\<lambda>i. real_of_int (b (i + 1)) / real_of_int (a (i + 1)))", "using assumerational"], ["proof (prove)\nusing this:\n  (\\<lambda>n. real_of_int (b (n + 1)) / real_of_int (a (n + 1))) sums\n  (real_of_int p / real_of_int q)\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>i. real_of_int (b (i + 1)) / real_of_int (a (i + 1)))", "using summable_def"], ["proof (prove)\nusing this:\n  (\\<lambda>n. real_of_int (b (n + 1)) / real_of_int (a (n + 1))) sums\n  (real_of_int p / real_of_int q)\n  summable ?f = (\\<exists>s. ?f sums s)\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>i. real_of_int (b (i + 1)) / real_of_int (a (i + 1)))", "by blast"], ["proof (state)\nthis:\n  summable ff\n\ngoal (2 subgoals):\n 1. summable (\\<lambda>j. ff (j + n))\n 2. \\<And>na. 0 < ff (na + n)", "then"], ["proof (chain)\npicking this:\n  summable ff", "show \" summable (\\<lambda>j. ff (j + n))\""], ["proof (prove)\nusing this:\n  summable ff\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>j. ff (j + n))", "using summable_iff_shift[of ff n]"], ["proof (prove)\nusing this:\n  summable ff\n  summable (\\<lambda>na. ff (na + n)) = summable ff\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>j. ff (j + n))", "by auto"], ["proof (state)\nthis:\n  summable (\\<lambda>j. ff (j + n))\n\ngoal (1 subgoal):\n 1. \\<And>na. 0 < ff (na + n)", "show \"\\<And>i. 0 < ff (i + n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. 0 < ff (i + n)", "unfolding ff_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. 0 < real_of_int (b (i + n + 1)) / real_of_int (a (i + n + 1))", "using a assms(4) int_one_le_iff_zero_less"], ["proof (prove)\nusing this:\n  \\<forall>n. 1 \\<le> a n\n  \\<forall>n. 1 \\<le> b n\n  (1 \\<le> ?z) = (0 < ?z)\n\ngoal (1 subgoal):\n 1. \\<And>i. 0 < real_of_int (b (i + n + 1)) / real_of_int (a (i + n + 1))", "by auto"], ["proof (state)\nthis:\n  0 < ff (?i + n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < (\\<Sum>j. ff (j + n))\n\ngoal (1 subgoal):\n 1. 0 < real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n        (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))", "ultimately"], ["proof (chain)\npicking this:\n  0 < aa\n  0 < (\\<Sum>j. ff (j + n))", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < aa\n  0 < (\\<Sum>j. ff (j + n))\n\ngoal (1 subgoal):\n 1. 0 < real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n        (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))", "unfolding aa_def ff_def"], ["proof (prove)\nusing this:\n  0 < (\\<Prod>j = 1..n. real_of_int (a j))\n  0 < (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n\ngoal (1 subgoal):\n 1. 0 < real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n        (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))", "using \\<open>q\\<ge>1\\<close>"], ["proof (prove)\nusing this:\n  0 < (\\<Prod>j = 1..n. real_of_int (a j))\n  0 < (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n  1 \\<le> q\n\ngoal (1 subgoal):\n 1. 0 < real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n        (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))", "by auto"], ["proof (state)\nthis:\n  0 < real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n      (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n      (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n\ngoal (1 subgoal):\n 1. 1 \\<le> real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n            (\\<Sum>j.\n                real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))", "moreover"], ["proof (state)\nthis:\n  0 < real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n      (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n\ngoal (1 subgoal):\n 1. 1 \\<le> real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n            (\\<Sum>j.\n                real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))", "have \"?L \\<in> \\<int>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n    (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n    \\<in> \\<int>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n    (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n    \\<in> \\<int>", "have \"?L = aa *(p -q* ( \\<Sum>j=1..n. b j / a j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n    (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1))) =\n    aa *\n    (real_of_int p -\n     real_of_int q *\n     (\\<Sum>j = 1..n. real_of_int (b j) / real_of_int (a j)))", "unfolding aa_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n    (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1))) =\n    (\\<Prod>j = 1..n. real_of_int (a j)) *\n    (real_of_int p -\n     real_of_int q *\n     (\\<Sum>j = 1..n. real_of_int (b j) / real_of_int (a j)))", "using a assms assumerational int_one_le_iff_zero_less showpre7"], ["proof (prove)\nusing this:\n  \\<forall>n. 1 \\<le> a n\n  1 \\<le> q\n  1 \\<le> p\n  \\<forall>n. 1 \\<le> a n\n  \\<forall>n. 1 \\<le> b n\n  (\\<lambda>n. real_of_int (b (n + 1)) / real_of_int (a (n + 1))) sums\n  (real_of_int p / real_of_int q)\n  (\\<lambda>n. real_of_int (b (n + 1)) / real_of_int (a (n + 1))) sums\n  (real_of_int p / real_of_int q)\n  (1 \\<le> ?z) = (0 < ?z)\n  \\<lbrakk>0 < ?q; 0 < ?p; \\<forall>n. 0 < ?a n; \\<forall>n. 0 < ?b n;\n   (\\<lambda>n. real_of_int (?b (n + 1)) / real_of_int (?a (n + 1))) sums\n   (real_of_int ?p / real_of_int ?q)\\<rbrakk>\n  \\<Longrightarrow> real_of_int (?q * (\\<Prod>j = 1..?n. of_int (?a j))) *\n                    (\\<Sum>j.\n                        real_of_int (?b (j + ?n + 1)) /\n                        real_of_int (?a (j + ?n + 1))) =\n                    (\\<Prod>j = 1..?n. real_of_int (?a j)) *\n                    (real_of_int ?p -\n                     real_of_int ?q *\n                     (\\<Sum>j = 1..?n.\n                         real_of_int (?b j) / real_of_int (?a j)))\n\ngoal (1 subgoal):\n 1. real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n    (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1))) =\n    (\\<Prod>j = 1..n. real_of_int (a j)) *\n    (real_of_int p -\n     real_of_int q *\n     (\\<Sum>j = 1..n. real_of_int (b j) / real_of_int (a j)))", "by force"], ["proof (state)\nthis:\n  real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n  (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1))) =\n  aa *\n  (real_of_int p -\n   real_of_int q * (\\<Sum>j = 1..n. real_of_int (b j) / real_of_int (a j)))\n\ngoal (1 subgoal):\n 1. real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n    (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n    \\<in> \\<int>", "also"], ["proof (state)\nthis:\n  real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n  (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1))) =\n  aa *\n  (real_of_int p -\n   real_of_int q * (\\<Sum>j = 1..n. real_of_int (b j) / real_of_int (a j)))\n\ngoal (1 subgoal):\n 1. real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n    (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n    \\<in> \\<int>", "have \"... = aa * p - q * (\\<Sum>j=1..n. aa * b j / a j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. aa *\n    (real_of_int p -\n     real_of_int q *\n     (\\<Sum>j = 1..n. real_of_int (b j) / real_of_int (a j))) =\n    aa * real_of_int p -\n    real_of_int q *\n    (\\<Sum>j = 1..n. aa * real_of_int (b j) / real_of_int (a j))", "by (auto simp add:algebra_simps sum_distrib_left)"], ["proof (state)\nthis:\n  aa *\n  (real_of_int p -\n   real_of_int q *\n   (\\<Sum>j = 1..n. real_of_int (b j) / real_of_int (a j))) =\n  aa * real_of_int p -\n  real_of_int q *\n  (\\<Sum>j = 1..n. aa * real_of_int (b j) / real_of_int (a j))\n\ngoal (1 subgoal):\n 1. real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n    (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n    \\<in> \\<int>", "also"], ["proof (state)\nthis:\n  aa *\n  (real_of_int p -\n   real_of_int q *\n   (\\<Sum>j = 1..n. real_of_int (b j) / real_of_int (a j))) =\n  aa * real_of_int p -\n  real_of_int q *\n  (\\<Sum>j = 1..n. aa * real_of_int (b j) / real_of_int (a j))\n\ngoal (1 subgoal):\n 1. real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n    (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n    \\<in> \\<int>", "have \"... = prod a {1..n} * p - q * (\\<Sum>j = 1..n. b j * prod a ({1..n} - {j}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. aa * real_of_int p -\n    real_of_int q *\n    (\\<Sum>j = 1..n. aa * real_of_int (b j) / real_of_int (a j)) =\n    real_of_int\n     (prod a {1..n} * p - q * (\\<Sum>j = 1..n. b j * prod a ({1..n} - {j})))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. aa * real_of_int p -\n    real_of_int q *\n    (\\<Sum>j = 1..n. aa * real_of_int (b j) / real_of_int (a j)) =\n    real_of_int\n     (prod a {1..n} * p - q * (\\<Sum>j = 1..n. b j * prod a ({1..n} - {j})))", "have \"(\\<Sum>j=1..n. aa * b j / a j) = (\\<Sum>j=1..n. b j * prod a ({1..n} - {j}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j = 1..n. aa * real_of_int (b j) / real_of_int (a j)) =\n    real_of_int (\\<Sum>j = 1..n. b j * prod a ({1..n} - {j}))", "unfolding of_int_sum"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j = 1..n. aa * real_of_int (b j) / real_of_int (a j)) =\n    (\\<Sum>x = 1..n. real_of_int (b x * prod a ({1..n} - {x})))", "proof (rule sum.cong)"], ["proof (state)\ngoal (2 subgoals):\n 1. {1..n} = {1..n}\n 2. \\<And>x.\n       x \\<in> {1..n} \\<Longrightarrow>\n       aa * real_of_int (b x) / real_of_int (a x) =\n       real_of_int (b x * prod a ({1..n} - {x}))", "fix j"], ["proof (state)\ngoal (2 subgoals):\n 1. {1..n} = {1..n}\n 2. \\<And>x.\n       x \\<in> {1..n} \\<Longrightarrow>\n       aa * real_of_int (b x) / real_of_int (a x) =\n       real_of_int (b x * prod a ({1..n} - {x}))", "assume \"j \\<in> {1..n}\""], ["proof (state)\nthis:\n  j \\<in> {1..n}\n\ngoal (2 subgoals):\n 1. {1..n} = {1..n}\n 2. \\<And>x.\n       x \\<in> {1..n} \\<Longrightarrow>\n       aa * real_of_int (b x) / real_of_int (a x) =\n       real_of_int (b x * prod a ({1..n} - {x}))", "then"], ["proof (chain)\npicking this:\n  j \\<in> {1..n}", "have \"(\\<Prod>i = 1..n. real_of_int (a i)) = a j * (\\<Prod>i\\<in>{1..n} - {j}. real_of_int (a i))\""], ["proof (prove)\nusing this:\n  j \\<in> {1..n}\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 1..n. real_of_int (a i)) =\n    real_of_int (a j) * (\\<Prod>i\\<in>{1..n} - {j}. real_of_int (a i))", "by (meson finite_atLeastAtMost prod.remove)"], ["proof (state)\nthis:\n  (\\<Prod>i = 1..n. real_of_int (a i)) =\n  real_of_int (a j) * (\\<Prod>i\\<in>{1..n} - {j}. real_of_int (a i))\n\ngoal (2 subgoals):\n 1. {1..n} = {1..n}\n 2. \\<And>x.\n       x \\<in> {1..n} \\<Longrightarrow>\n       aa * real_of_int (b x) / real_of_int (a x) =\n       real_of_int (b x * prod a ({1..n} - {x}))", "then"], ["proof (chain)\npicking this:\n  (\\<Prod>i = 1..n. real_of_int (a i)) =\n  real_of_int (a j) * (\\<Prod>i\\<in>{1..n} - {j}. real_of_int (a i))", "have \"aa / real_of_int (a j) = prod a ({1..n} - {j})\""], ["proof (prove)\nusing this:\n  (\\<Prod>i = 1..n. real_of_int (a i)) =\n  real_of_int (a j) * (\\<Prod>i\\<in>{1..n} - {j}. real_of_int (a i))\n\ngoal (1 subgoal):\n 1. aa / real_of_int (a j) = real_of_int (prod a ({1..n} - {j}))", "unfolding aa_def"], ["proof (prove)\nusing this:\n  (\\<Prod>i = 1..n. real_of_int (a i)) =\n  real_of_int (a j) * (\\<Prod>i\\<in>{1..n} - {j}. real_of_int (a i))\n\ngoal (1 subgoal):\n 1. (\\<Prod>j = 1..n. real_of_int (a j)) / real_of_int (a j) =\n    real_of_int (prod a ({1..n} - {j}))", "using a[rule_format,of j]"], ["proof (prove)\nusing this:\n  (\\<Prod>i = 1..n. real_of_int (a i)) =\n  real_of_int (a j) * (\\<Prod>i\\<in>{1..n} - {j}. real_of_int (a i))\n  1 \\<le> a j\n\ngoal (1 subgoal):\n 1. (\\<Prod>j = 1..n. real_of_int (a j)) / real_of_int (a j) =\n    real_of_int (prod a ({1..n} - {j}))", "by (auto simp add:field_simps)"], ["proof (state)\nthis:\n  aa / real_of_int (a j) = real_of_int (prod a ({1..n} - {j}))\n\ngoal (2 subgoals):\n 1. {1..n} = {1..n}\n 2. \\<And>x.\n       x \\<in> {1..n} \\<Longrightarrow>\n       aa * real_of_int (b x) / real_of_int (a x) =\n       real_of_int (b x * prod a ({1..n} - {x}))", "then"], ["proof (chain)\npicking this:\n  aa / real_of_int (a j) = real_of_int (prod a ({1..n} - {j}))", "show \"aa * b j / a j = b j * prod a ({1..n} - {j})\""], ["proof (prove)\nusing this:\n  aa / real_of_int (a j) = real_of_int (prod a ({1..n} - {j}))\n\ngoal (1 subgoal):\n 1. aa * real_of_int (b j) / real_of_int (a j) =\n    real_of_int (b j * prod a ({1..n} - {j}))", "by (metis mult.commute of_int_mult times_divide_eq_right)"], ["proof (state)\nthis:\n  aa * real_of_int (b j) / real_of_int (a j) =\n  real_of_int (b j * prod a ({1..n} - {j}))\n\ngoal (1 subgoal):\n 1. {1..n} = {1..n}", "qed simp"], ["proof (state)\nthis:\n  (\\<Sum>j = 1..n. aa * real_of_int (b j) / real_of_int (a j)) =\n  real_of_int (\\<Sum>j = 1..n. b j * prod a ({1..n} - {j}))\n\ngoal (1 subgoal):\n 1. aa * real_of_int p -\n    real_of_int q *\n    (\\<Sum>j = 1..n. aa * real_of_int (b j) / real_of_int (a j)) =\n    real_of_int\n     (prod a {1..n} * p - q * (\\<Sum>j = 1..n. b j * prod a ({1..n} - {j})))", "moreover"], ["proof (state)\nthis:\n  (\\<Sum>j = 1..n. aa * real_of_int (b j) / real_of_int (a j)) =\n  real_of_int (\\<Sum>j = 1..n. b j * prod a ({1..n} - {j}))\n\ngoal (1 subgoal):\n 1. aa * real_of_int p -\n    real_of_int q *\n    (\\<Sum>j = 1..n. aa * real_of_int (b j) / real_of_int (a j)) =\n    real_of_int\n     (prod a {1..n} * p - q * (\\<Sum>j = 1..n. b j * prod a ({1..n} - {j})))", "have \"aa * p = (\\<Prod>j = 1..n.  (a j)) *  p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. aa * real_of_int p = real_of_int (prod a {1..n} * p)", "unfolding aa_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>j = 1..n. real_of_int (a j)) * real_of_int p =\n    real_of_int (prod a {1..n} * p)", "by auto"], ["proof (state)\nthis:\n  aa * real_of_int p = real_of_int (prod a {1..n} * p)\n\ngoal (1 subgoal):\n 1. aa * real_of_int p -\n    real_of_int q *\n    (\\<Sum>j = 1..n. aa * real_of_int (b j) / real_of_int (a j)) =\n    real_of_int\n     (prod a {1..n} * p - q * (\\<Sum>j = 1..n. b j * prod a ({1..n} - {j})))", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Sum>j = 1..n. aa * real_of_int (b j) / real_of_int (a j)) =\n  real_of_int (\\<Sum>j = 1..n. b j * prod a ({1..n} - {j}))\n  aa * real_of_int p = real_of_int (prod a {1..n} * p)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>j = 1..n. aa * real_of_int (b j) / real_of_int (a j)) =\n  real_of_int (\\<Sum>j = 1..n. b j * prod a ({1..n} - {j}))\n  aa * real_of_int p = real_of_int (prod a {1..n} * p)\n\ngoal (1 subgoal):\n 1. aa * real_of_int p -\n    real_of_int q *\n    (\\<Sum>j = 1..n. aa * real_of_int (b j) / real_of_int (a j)) =\n    real_of_int\n     (prod a {1..n} * p - q * (\\<Sum>j = 1..n. b j * prod a ({1..n} - {j})))", "by force"], ["proof (state)\nthis:\n  aa * real_of_int p -\n  real_of_int q *\n  (\\<Sum>j = 1..n. aa * real_of_int (b j) / real_of_int (a j)) =\n  real_of_int\n   (prod a {1..n} * p - q * (\\<Sum>j = 1..n. b j * prod a ({1..n} - {j})))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  aa * real_of_int p -\n  real_of_int q *\n  (\\<Sum>j = 1..n. aa * real_of_int (b j) / real_of_int (a j)) =\n  real_of_int\n   (prod a {1..n} * p - q * (\\<Sum>j = 1..n. b j * prod a ({1..n} - {j})))\n\ngoal (1 subgoal):\n 1. real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n    (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n    \\<in> \\<int>", "also"], ["proof (state)\nthis:\n  aa * real_of_int p -\n  real_of_int q *\n  (\\<Sum>j = 1..n. aa * real_of_int (b j) / real_of_int (a j)) =\n  real_of_int\n   (prod a {1..n} * p - q * (\\<Sum>j = 1..n. b j * prod a ({1..n} - {j})))\n\ngoal (1 subgoal):\n 1. real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n    (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n    \\<in> \\<int>", "have \"... \\<in> \\<int>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int\n     (prod a {1..n} * p - q * (\\<Sum>j = 1..n. b j * prod a ({1..n} - {j})))\n    \\<in> \\<int>", "using Ints_of_int"], ["proof (prove)\nusing this:\n  of_int ?z \\<in> \\<int>\n\ngoal (1 subgoal):\n 1. real_of_int\n     (prod a {1..n} * p - q * (\\<Sum>j = 1..n. b j * prod a ({1..n} - {j})))\n    \\<in> \\<int>", "by blast"], ["proof (state)\nthis:\n  real_of_int\n   (prod a {1..n} * p - q * (\\<Sum>j = 1..n. b j * prod a ({1..n} - {j})))\n  \\<in> \\<int>\n\ngoal (1 subgoal):\n 1. real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n    (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n    \\<in> \\<int>", "finally"], ["proof (chain)\npicking this:\n  real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n  (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n  \\<in> \\<int>", "show ?thesis"], ["proof (prove)\nusing this:\n  real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n  (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n  \\<in> \\<int>\n\ngoal (1 subgoal):\n 1. real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n    (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n    \\<in> \\<int>", "."], ["proof (state)\nthis:\n  real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n  (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n  \\<in> \\<int>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n  (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n  \\<in> \\<int>\n\ngoal (1 subgoal):\n 1. 1 \\<le> real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n            (\\<Sum>j.\n                real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))", "ultimately"], ["proof (chain)\npicking this:\n  0 < real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n      (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n  real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n  (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n  \\<in> \\<int>", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n      (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n  real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n  (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n  \\<in> \\<int>\n\ngoal (1 subgoal):\n 1. 1 \\<le> real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n            (\\<Sum>j.\n                real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))", "apply (fold LL_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < LL; LL \\<in> \\<int>\\<rbrakk> \\<Longrightarrow> 1 \\<le> LL", "by (metis Ints_cases int_one_le_iff_zero_less not_less of_int_0_less_iff of_int_less_1_iff)"], ["proof (state)\nthis:\n  1 \\<le> real_of_int (q * (\\<Prod>j = 1..n. of_int (a j))) *\n          (\\<Sum>j.\n              real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma show8:\n  fixes d ::\"nat\\<Rightarrow>real \" and a :: \"nat\\<Rightarrow>int\" and s k::nat \n  assumes \"A > 1\" and d: \"\\<forall>n. d n> 1\"  and a:\"\\<forall>n. a n>0\" and \"s>0\"\n    and \"convergent_prod d\"\n    and assu2: \"\\<forall>n \\<ge> s. A / of_int (a n) powr (1 / of_int (2^n)) > (\\<Prod>j. d (n + j))\"\n  shows \"\\<forall>n\\<ge>s. (\\<Prod>j. d (j+n)) < A / (MAX j\\<in>{s..n}. of_int (a j) powr (1 / of_int (2 ^ j)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n\\<ge>s.\n       (\\<Prod>j. d (j + n))\n       < A /\n         (MAX j\\<in>{s..n}.\n             real_of_int (a j) powr (1 / real_of_int (2 ^ j)))", "proof (intro strip)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       s \\<le> n \\<Longrightarrow>\n       (\\<Prod>j. d (j + n))\n       < A /\n         (MAX j\\<in>{s..n}.\n             real_of_int (a j) powr (1 / real_of_int (2 ^ j)))", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       s \\<le> n \\<Longrightarrow>\n       (\\<Prod>j. d (j + n))\n       < A /\n         (MAX j\\<in>{s..n}.\n             real_of_int (a j) powr (1 / real_of_int (2 ^ j)))", "assume \"s \\<le> n\""], ["proof (state)\nthis:\n  s \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       s \\<le> n \\<Longrightarrow>\n       (\\<Prod>j. d (j + n))\n       < A /\n         (MAX j\\<in>{s..n}.\n             real_of_int (a j) powr (1 / real_of_int (2 ^ j)))", "define sp where \"sp \\<equiv> (\\<lambda>n. \\<Prod>j. d (j+n))\""], ["proof (state)\nthis:\n  sp \\<equiv> \\<lambda>n. \\<Prod>j. d (j + n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       s \\<le> n \\<Longrightarrow>\n       (\\<Prod>j. d (j + n))\n       < A /\n         (MAX j\\<in>{s..n}.\n             real_of_int (a j) powr (1 / real_of_int (2 ^ j)))", "define ff where \"ff \\<equiv> (\\<lambda>(j::nat). (real_of_int (a j)) powr(1 /of_int (2^j)))\""], ["proof (state)\nthis:\n  ff \\<equiv> \\<lambda>j. real_of_int (a j) powr (1 / real_of_int (2 ^ j))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       s \\<le> n \\<Longrightarrow>\n       (\\<Prod>j. d (j + n))\n       < A /\n         (MAX j\\<in>{s..n}.\n             real_of_int (a j) powr (1 / real_of_int (2 ^ j)))", "have \"sp i \\<ge> sp n\" when \"i\\<le>n\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. sp n \\<le> sp i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sp n \\<le> sp i", "have \"(\\<Prod>j. d (j + i)) = (\\<Prod>ia. d (ia + (n - i) + i)) * (\\<Prod>ia<n - i. d (ia + i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>j. d (j + i)) =\n    (\\<Prod>ia. d (ia + (n - i) + i)) * (\\<Prod>ia<n - i. d (ia + i))", "proof (rule prodinf_split_initial_segment)"], ["proof (state)\ngoal (2 subgoals):\n 1. convergent_prod (\\<lambda>j. d (j + i))\n 2. \\<And>ia. ia < n - i \\<Longrightarrow> d (ia + i) \\<noteq> 0", "show \"convergent_prod (\\<lambda>j. d (j + i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. convergent_prod (\\<lambda>j. d (j + i))", "using \\<open>convergent_prod d\\<close> convergent_prod_iff_shift[of d i]"], ["proof (prove)\nusing this:\n  convergent_prod d\n  convergent_prod (\\<lambda>ia. d (ia + i)) = convergent_prod d\n\ngoal (1 subgoal):\n 1. convergent_prod (\\<lambda>j. d (j + i))", "by simp"], ["proof (state)\nthis:\n  convergent_prod (\\<lambda>j. d (j + i))\n\ngoal (1 subgoal):\n 1. \\<And>ia. ia < n - i \\<Longrightarrow> d (ia + i) \\<noteq> 0", "show \"\\<And>j. j < n - i \\<Longrightarrow> d (j + i) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>j. j < n - i \\<Longrightarrow> d (j + i) \\<noteq> 0", "by (metis d not_one_less_zero)"], ["proof (state)\nthis:\n  ?j < n - i \\<Longrightarrow> d (?j + i) \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Prod>j. d (j + i)) =\n  (\\<Prod>ia. d (ia + (n - i) + i)) * (\\<Prod>ia<n - i. d (ia + i))\n\ngoal (1 subgoal):\n 1. sp n \\<le> sp i", "then"], ["proof (chain)\npicking this:\n  (\\<Prod>j. d (j + i)) =\n  (\\<Prod>ia. d (ia + (n - i) + i)) * (\\<Prod>ia<n - i. d (ia + i))", "have \"sp i = sp n * (\\<Prod>j<n - i. d (i + j))\""], ["proof (prove)\nusing this:\n  (\\<Prod>j. d (j + i)) =\n  (\\<Prod>ia. d (ia + (n - i) + i)) * (\\<Prod>ia<n - i. d (ia + i))\n\ngoal (1 subgoal):\n 1. sp i = sp n * (\\<Prod>j<n - i. d (i + j))", "unfolding sp_def"], ["proof (prove)\nusing this:\n  (\\<Prod>j. d (j + i)) =\n  (\\<Prod>ia. d (ia + (n - i) + i)) * (\\<Prod>ia<n - i. d (ia + i))\n\ngoal (1 subgoal):\n 1. (\\<Prod>j. d (j + i)) =\n    (\\<Prod>j. d (j + n)) * (\\<Prod>j<n - i. d (i + j))", "using \\<open>n\\<ge>i\\<close>"], ["proof (prove)\nusing this:\n  (\\<Prod>j. d (j + i)) =\n  (\\<Prod>ia. d (ia + (n - i) + i)) * (\\<Prod>ia<n - i. d (ia + i))\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. (\\<Prod>j. d (j + i)) =\n    (\\<Prod>j. d (j + n)) * (\\<Prod>j<n - i. d (i + j))", "by (auto simp:algebra_simps)"], ["proof (state)\nthis:\n  sp i = sp n * (\\<Prod>j<n - i. d (i + j))\n\ngoal (1 subgoal):\n 1. sp n \\<le> sp i", "moreover"], ["proof (state)\nthis:\n  sp i = sp n * (\\<Prod>j<n - i. d (i + j))\n\ngoal (1 subgoal):\n 1. sp n \\<le> sp i", "have \"sp i>1\" \"sp n>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < sp i &&& 1 < sp n", "unfolding sp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < (\\<Prod>j. d (j + i)) &&& 1 < (\\<Prod>j. d (j + n))", "using convergent_prod_iff_shift \\<open>convergent_prod d\\<close> d"], ["proof (prove)\nusing this:\n  convergent_prod (\\<lambda>i. ?f (i + ?n)) = convergent_prod ?f\n  convergent_prod d\n  \\<forall>n. 1 < d n\n\ngoal (1 subgoal):\n 1. 1 < (\\<Prod>j. d (j + i)) &&& 1 < (\\<Prod>j. d (j + n))", "by (auto intro!:less_1_prodinf)"], ["proof (state)\nthis:\n  1 < sp i\n  1 < sp n\n\ngoal (1 subgoal):\n 1. sp n \\<le> sp i", "moreover"], ["proof (state)\nthis:\n  1 < sp i\n  1 < sp n\n\ngoal (1 subgoal):\n 1. sp n \\<le> sp i", "have \"(\\<Prod>j<n - i. d (i + j)) \\<ge> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> (\\<Prod>j<n - i. d (i + j))", "using d less_imp_le"], ["proof (prove)\nusing this:\n  \\<forall>n. 1 < d n\n  ?x < ?y \\<Longrightarrow> ?x \\<le> ?y\n\ngoal (1 subgoal):\n 1. 1 \\<le> (\\<Prod>j<n - i. d (i + j))", "by (auto intro: prod_ge_1)"], ["proof (state)\nthis:\n  1 \\<le> (\\<Prod>j<n - i. d (i + j))\n\ngoal (1 subgoal):\n 1. sp n \\<le> sp i", "ultimately"], ["proof (chain)\npicking this:\n  sp i = sp n * (\\<Prod>j<n - i. d (i + j))\n  1 < sp i\n  1 < sp n\n  1 \\<le> (\\<Prod>j<n - i. d (i + j))", "show ?thesis"], ["proof (prove)\nusing this:\n  sp i = sp n * (\\<Prod>j<n - i. d (i + j))\n  1 < sp i\n  1 < sp n\n  1 \\<le> (\\<Prod>j<n - i. d (i + j))\n\ngoal (1 subgoal):\n 1. sp n \\<le> sp i", "by auto"], ["proof (state)\nthis:\n  sp n \\<le> sp i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?i \\<le> n \\<Longrightarrow> sp n \\<le> sp ?i\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       s \\<le> n \\<Longrightarrow>\n       (\\<Prod>j. d (j + n))\n       < A /\n         (MAX j\\<in>{s..n}.\n             real_of_int (a j) powr (1 / real_of_int (2 ^ j)))", "moreover"], ["proof (state)\nthis:\n  ?i \\<le> n \\<Longrightarrow> sp n \\<le> sp ?i\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       s \\<le> n \\<Longrightarrow>\n       (\\<Prod>j. d (j + n))\n       < A /\n         (MAX j\\<in>{s..n}.\n             real_of_int (a j) powr (1 / real_of_int (2 ^ j)))", "have \"\\<forall>j\\<ge>s. A / ff j > sp j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>j\\<ge>s. sp j < A / ff j", "unfolding ff_def sp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>j\\<ge>s.\n       (\\<Prod>ja. d (ja + j))\n       < A / real_of_int (a j) powr (1 / real_of_int (2 ^ j))", "using assu2"], ["proof (prove)\nusing this:\n  \\<forall>n\\<ge>s.\n     (\\<Prod>j. d (n + j))\n     < A / real_of_int (a n) powr (1 / real_of_int (2 ^ n))\n\ngoal (1 subgoal):\n 1. \\<forall>j\\<ge>s.\n       (\\<Prod>ja. d (ja + j))\n       < A / real_of_int (a j) powr (1 / real_of_int (2 ^ j))", "by (auto simp:algebra_simps)"], ["proof (state)\nthis:\n  \\<forall>j\\<ge>s. sp j < A / ff j\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       s \\<le> n \\<Longrightarrow>\n       (\\<Prod>j. d (j + n))\n       < A /\n         (MAX j\\<in>{s..n}.\n             real_of_int (a j) powr (1 / real_of_int (2 ^ j)))", "ultimately"], ["proof (chain)\npicking this:\n  ?i \\<le> n \\<Longrightarrow> sp n \\<le> sp ?i\n  \\<forall>j\\<ge>s. sp j < A / ff j", "have \"\\<forall>j. s\\<le>j \\<and> j\\<le>n \\<longrightarrow> A / ff j > sp n\""], ["proof (prove)\nusing this:\n  ?i \\<le> n \\<Longrightarrow> sp n \\<le> sp ?i\n  \\<forall>j\\<ge>s. sp j < A / ff j\n\ngoal (1 subgoal):\n 1. \\<forall>j. s \\<le> j \\<and> j \\<le> n \\<longrightarrow> sp n < A / ff j", "by force"], ["proof (state)\nthis:\n  \\<forall>j. s \\<le> j \\<and> j \\<le> n \\<longrightarrow> sp n < A / ff j\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       s \\<le> n \\<Longrightarrow>\n       (\\<Prod>j. d (j + n))\n       < A /\n         (MAX j\\<in>{s..n}.\n             real_of_int (a j) powr (1 / real_of_int (2 ^ j)))", "then"], ["proof (chain)\npicking this:\n  \\<forall>j. s \\<le> j \\<and> j \\<le> n \\<longrightarrow> sp n < A / ff j", "show \"sp n< A / Max (ff ` {s..n})\""], ["proof (prove)\nusing this:\n  \\<forall>j. s \\<le> j \\<and> j \\<le> n \\<longrightarrow> sp n < A / ff j\n\ngoal (1 subgoal):\n 1. sp n < A / Max (ff ` {s..n})", "by (metis (mono_tags, hide_lams) Max_in \\<open>n\\<ge>s\\<close> atLeastAtMost_iff empty_iff \n        finite_atLeastAtMost finite_imageI imageE image_is_empty order_refl)"], ["proof (state)\nthis:\n  sp n < A / Max (ff ` {s..n})\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma auxiliary1_9:\n  fixes d ::\"nat\\<Rightarrow>real\" and a::\"nat\\<Rightarrow>int \" and s m::nat \n  assumes d: \"\\<forall>n. d n> 1\"  and a: \"\\<forall>n. a n>0\" and \"s>0\" and \"n \\<ge> m\" and \" m \\<ge> s\"\n    and auxifalse_assu: \"\\<forall>n\\<ge>m. (of_int (a (n+1))) powr(1 /of_int (2^(n+1))) <\n              (d (n+1))* (Max ((\\<lambda> (j::nat). (of_int (a j)) powr(1 /of_int (2^j))) ` {s..n} ))\"\n  shows \"(of_int (a (n+1))) powr(1 /of_int (2^(n+1))) <\n    (\\<Prod>j=(m+1)..(n+1). d j) * (Max ((\\<lambda> (j::nat). (of_int (a j)) powr(1 /of_int (2^j))) ` {s..m}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))\n    < prod d {m + 1..n + 1} *\n      (MAX j\\<in>{s..m}. real_of_int (a j) powr (1 / real_of_int (2 ^ j)))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))\n    < prod d {m + 1..n + 1} *\n      (MAX j\\<in>{s..m}. real_of_int (a j) powr (1 / real_of_int (2 ^ j)))", "define ff where \"ff \\<equiv> \\<lambda>j. real_of_int (a j) powr (1 / of_int (2^j))\""], ["proof (state)\nthis:\n  ff \\<equiv> \\<lambda>j. real_of_int (a j) powr (1 / real_of_int (2 ^ j))\n\ngoal (1 subgoal):\n 1. real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))\n    < prod d {m + 1..n + 1} *\n      (MAX j\\<in>{s..m}. real_of_int (a j) powr (1 / real_of_int (2 ^ j)))", "have [simp]:\"ff j > 0\" for j"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < ff j", "unfolding ff_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < real_of_int (a j) powr (1 / real_of_int (2 ^ j))", "by (metis a less_numeral_extra(3) of_int_0_less_iff powr_gt_zero)"], ["proof (state)\nthis:\n  0 < ff ?j\n\ngoal (1 subgoal):\n 1. real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))\n    < prod d {m + 1..n + 1} *\n      (MAX j\\<in>{s..m}. real_of_int (a j) powr (1 / real_of_int (2 ^ j)))", "have ff_asm:\"ff (n+1) < d (n+1) * Max (ff ` {s..n})\" when \"n\\<ge>m\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. ff (n + 1) < d (n + 1) * Max (ff ` {s..n})", "using auxifalse_assu that"], ["proof (prove)\nusing this:\n  \\<forall>n\\<ge>m.\n     real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))\n     < d (n + 1) *\n       (MAX j\\<in>{s..n}. real_of_int (a j) powr (1 / real_of_int (2 ^ j)))\n  m \\<le> n\n\ngoal (1 subgoal):\n 1. ff (n + 1) < d (n + 1) * Max (ff ` {s..n})", "unfolding ff_def"], ["proof (prove)\nusing this:\n  \\<forall>n\\<ge>m.\n     real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))\n     < d (n + 1) *\n       (MAX j\\<in>{s..n}. real_of_int (a j) powr (1 / real_of_int (2 ^ j)))\n  m \\<le> n\n\ngoal (1 subgoal):\n 1. real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))\n    < d (n + 1) *\n      (MAX j\\<in>{s..n}. real_of_int (a j) powr (1 / real_of_int (2 ^ j)))", "by simp"], ["proof (state)\nthis:\n  m \\<le> ?n \\<Longrightarrow> ff (?n + 1) < d (?n + 1) * Max (ff ` {s..?n})\n\ngoal (1 subgoal):\n 1. real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))\n    < prod d {m + 1..n + 1} *\n      (MAX j\\<in>{s..m}. real_of_int (a j) powr (1 / real_of_int (2 ^ j)))", "from \\<open>n\\<ge>m\\<close>"], ["proof (chain)\npicking this:\n  m \\<le> n", "have Q: \"(Max( ff ` {s..n} )) \\<le> (\\<Prod>j=(m+1)..n. d j)* (Max (ff ` {s..m}))\""], ["proof (prove)\nusing this:\n  m \\<le> n\n\ngoal (1 subgoal):\n 1. Max (ff ` {s..n}) \\<le> prod d {m + 1..n} * Max (ff ` {s..m})", "proof(induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. m \\<le> 0 \\<Longrightarrow>\n    Max (ff ` {s..0}) \\<le> prod d {m + 1..0} * Max (ff ` {s..m})\n 2. \\<And>n.\n       \\<lbrakk>m \\<le> n \\<Longrightarrow>\n                Max (ff ` {s..n})\n                \\<le> prod d {m + 1..n} * Max (ff ` {s..m});\n        m \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Max (ff ` {s..Suc n})\n                         \\<le> prod d {m + 1..Suc n} * Max (ff ` {s..m})", "case 0"], ["proof (state)\nthis:\n  m \\<le> 0\n\ngoal (2 subgoals):\n 1. m \\<le> 0 \\<Longrightarrow>\n    Max (ff ` {s..0}) \\<le> prod d {m + 1..0} * Max (ff ` {s..m})\n 2. \\<And>n.\n       \\<lbrakk>m \\<le> n \\<Longrightarrow>\n                Max (ff ` {s..n})\n                \\<le> prod d {m + 1..n} * Max (ff ` {s..m});\n        m \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Max (ff ` {s..Suc n})\n                         \\<le> prod d {m + 1..Suc n} * Max (ff ` {s..m})", "then"], ["proof (chain)\npicking this:\n  m \\<le> 0", "show ?case"], ["proof (prove)\nusing this:\n  m \\<le> 0\n\ngoal (1 subgoal):\n 1. Max (ff ` {s..0}) \\<le> prod d {m + 1..0} * Max (ff ` {s..m})", "using \\<open>m\\<ge>s\\<close>"], ["proof (prove)\nusing this:\n  m \\<le> 0\n  s \\<le> m\n\ngoal (1 subgoal):\n 1. Max (ff ` {s..0}) \\<le> prod d {m + 1..0} * Max (ff ` {s..m})", "by simp"], ["proof (state)\nthis:\n  Max (ff ` {s..0}) \\<le> prod d {m + 1..0} * Max (ff ` {s..m})\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>m \\<le> n \\<Longrightarrow>\n                Max (ff ` {s..n})\n                \\<le> prod d {m + 1..n} * Max (ff ` {s..m});\n        m \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Max (ff ` {s..Suc n})\n                         \\<le> prod d {m + 1..Suc n} * Max (ff ` {s..m})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>m \\<le> n \\<Longrightarrow>\n                Max (ff ` {s..n})\n                \\<le> prod d {m + 1..n} * Max (ff ` {s..m});\n        m \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Max (ff ` {s..Suc n})\n                         \\<le> prod d {m + 1..Suc n} * Max (ff ` {s..m})", "case (Suc n)"], ["proof (state)\nthis:\n  m \\<le> n \\<Longrightarrow>\n  Max (ff ` {s..n}) \\<le> prod d {m + 1..n} * Max (ff ` {s..m})\n  m \\<le> Suc n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>m \\<le> n \\<Longrightarrow>\n                Max (ff ` {s..n})\n                \\<le> prod d {m + 1..n} * Max (ff ` {s..m});\n        m \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Max (ff ` {s..Suc n})\n                         \\<le> prod d {m + 1..Suc n} * Max (ff ` {s..m})", "have ?case when \"m=Suc n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max (ff ` {s..Suc n}) \\<le> prod d {m + 1..Suc n} * Max (ff ` {s..m})", "using that"], ["proof (prove)\nusing this:\n  m = Suc n\n\ngoal (1 subgoal):\n 1. Max (ff ` {s..Suc n}) \\<le> prod d {m + 1..Suc n} * Max (ff ` {s..m})", "by auto"], ["proof (state)\nthis:\n  m = Suc n \\<Longrightarrow>\n  Max (ff ` {s..Suc n}) \\<le> prod d {m + 1..Suc n} * Max (ff ` {s..m})\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>m \\<le> n \\<Longrightarrow>\n                Max (ff ` {s..n})\n                \\<le> prod d {m + 1..n} * Max (ff ` {s..m});\n        m \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Max (ff ` {s..Suc n})\n                         \\<le> prod d {m + 1..Suc n} * Max (ff ` {s..m})", "moreover"], ["proof (state)\nthis:\n  m = Suc n \\<Longrightarrow>\n  Max (ff ` {s..Suc n}) \\<le> prod d {m + 1..Suc n} * Max (ff ` {s..m})\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>m \\<le> n \\<Longrightarrow>\n                Max (ff ` {s..n})\n                \\<le> prod d {m + 1..n} * Max (ff ` {s..m});\n        m \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Max (ff ` {s..Suc n})\n                         \\<le> prod d {m + 1..Suc n} * Max (ff ` {s..m})", "have ?case when \"m\\<noteq>Suc n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max (ff ` {s..Suc n}) \\<le> prod d {m + 1..Suc n} * Max (ff ` {s..m})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Max (ff ` {s..Suc n}) \\<le> prod d {m + 1..Suc n} * Max (ff ` {s..m})", "have \"m \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<le> n", "using that Suc(2)"], ["proof (prove)\nusing this:\n  m \\<noteq> Suc n\n  m \\<le> Suc n\n\ngoal (1 subgoal):\n 1. m \\<le> n", "by simp"], ["proof (state)\nthis:\n  m \\<le> n\n\ngoal (1 subgoal):\n 1. Max (ff ` {s..Suc n}) \\<le> prod d {m + 1..Suc n} * Max (ff ` {s..m})", "then"], ["proof (chain)\npicking this:\n  m \\<le> n", "have IH: \"Max (ff ` {s..n}) \\<le> prod d {m + 1..n} * Max (ff ` {s..m})\""], ["proof (prove)\nusing this:\n  m \\<le> n\n\ngoal (1 subgoal):\n 1. Max (ff ` {s..n}) \\<le> prod d {m + 1..n} * Max (ff ` {s..m})", "using Suc(1)"], ["proof (prove)\nusing this:\n  m \\<le> n\n  m \\<le> n \\<Longrightarrow>\n  Max (ff ` {s..n}) \\<le> prod d {m + 1..n} * Max (ff ` {s..m})\n\ngoal (1 subgoal):\n 1. Max (ff ` {s..n}) \\<le> prod d {m + 1..n} * Max (ff ` {s..m})", "by linarith"], ["proof (state)\nthis:\n  Max (ff ` {s..n}) \\<le> prod d {m + 1..n} * Max (ff ` {s..m})\n\ngoal (1 subgoal):\n 1. Max (ff ` {s..Suc n}) \\<le> prod d {m + 1..Suc n} * Max (ff ` {s..m})", "have \"Max (ff ` {s..Suc n}) = Max (ff ` {s..n} \\<union> {ff (Suc n)})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max (ff ` {s..Suc n}) = Max (ff ` {s..n} \\<union> {ff (Suc n)})", "using Suc.prems assms(5) atLeastAtMostSuc_conv"], ["proof (prove)\nusing this:\n  m \\<le> Suc n\n  s \\<le> m\n  ?m \\<le> Suc ?n \\<Longrightarrow> {?m..Suc ?n} = insert (Suc ?n) {?m..?n}\n\ngoal (1 subgoal):\n 1. Max (ff ` {s..Suc n}) = Max (ff ` {s..n} \\<union> {ff (Suc n)})", "by auto"], ["proof (state)\nthis:\n  Max (ff ` {s..Suc n}) = Max (ff ` {s..n} \\<union> {ff (Suc n)})\n\ngoal (1 subgoal):\n 1. Max (ff ` {s..Suc n}) \\<le> prod d {m + 1..Suc n} * Max (ff ` {s..m})", "also"], ["proof (state)\nthis:\n  Max (ff ` {s..Suc n}) = Max (ff ` {s..n} \\<union> {ff (Suc n)})\n\ngoal (1 subgoal):\n 1. Max (ff ` {s..Suc n}) \\<le> prod d {m + 1..Suc n} * Max (ff ` {s..m})", "have \"... = max (Max (ff ` {s..n})) (ff (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max (ff ` {s..n} \\<union> {ff (Suc n)}) =\n    max (Max (ff ` {s..n})) (ff (Suc n))", "using Suc.prems assms(5) max_def sup_assoc that"], ["proof (prove)\nusing this:\n  m \\<le> Suc n\n  s \\<le> m\n  max ?a ?b = (if ?a \\<le> ?b then ?b else ?a)\n  sup (sup ?x ?y) ?z = sup ?x (sup ?y ?z)\n  m \\<noteq> Suc n\n\ngoal (1 subgoal):\n 1. Max (ff ` {s..n} \\<union> {ff (Suc n)}) =\n    max (Max (ff ` {s..n})) (ff (Suc n))", "by auto"], ["proof (state)\nthis:\n  Max (ff ` {s..n} \\<union> {ff (Suc n)}) =\n  max (Max (ff ` {s..n})) (ff (Suc n))\n\ngoal (1 subgoal):\n 1. Max (ff ` {s..Suc n}) \\<le> prod d {m + 1..Suc n} * Max (ff ` {s..m})", "also"], ["proof (state)\nthis:\n  Max (ff ` {s..n} \\<union> {ff (Suc n)}) =\n  max (Max (ff ` {s..n})) (ff (Suc n))\n\ngoal (1 subgoal):\n 1. Max (ff ` {s..Suc n}) \\<le> prod d {m + 1..Suc n} * Max (ff ` {s..m})", "have \"... \\<le> max (Max (ff ` {s..n})) (d (n+1) * Max (ff ` {s..n}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max (Max (ff ` {s..n})) (ff (Suc n))\n    \\<le> max (Max (ff ` {s..n})) (d (n + 1) * Max (ff ` {s..n}))", "using \\<open>m \\<le> n\\<close> ff_asm"], ["proof (prove)\nusing this:\n  m \\<le> n\n  m \\<le> ?n \\<Longrightarrow> ff (?n + 1) < d (?n + 1) * Max (ff ` {s..?n})\n\ngoal (1 subgoal):\n 1. max (Max (ff ` {s..n})) (ff (Suc n))\n    \\<le> max (Max (ff ` {s..n})) (d (n + 1) * Max (ff ` {s..n}))", "by fastforce"], ["proof (state)\nthis:\n  max (Max (ff ` {s..n})) (ff (Suc n))\n  \\<le> max (Max (ff ` {s..n})) (d (n + 1) * Max (ff ` {s..n}))\n\ngoal (1 subgoal):\n 1. Max (ff ` {s..Suc n}) \\<le> prod d {m + 1..Suc n} * Max (ff ` {s..m})", "also"], ["proof (state)\nthis:\n  max (Max (ff ` {s..n})) (ff (Suc n))\n  \\<le> max (Max (ff ` {s..n})) (d (n + 1) * Max (ff ` {s..n}))\n\ngoal (1 subgoal):\n 1. Max (ff ` {s..Suc n}) \\<le> prod d {m + 1..Suc n} * Max (ff ` {s..m})", "have \"... \\<le> Max (ff ` {s..n}) * max 1 (d (n+1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max (Max (ff ` {s..n})) (d (n + 1) * Max (ff ` {s..n}))\n    \\<le> Max (ff ` {s..n}) * max 1 (d (n + 1))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. max (Max (ff ` {s..n})) (d (n + 1) * Max (ff ` {s..n}))\n    \\<le> Max (ff ` {s..n}) * max 1 (d (n + 1))", "have \"Max (ff ` {s..n}) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> Max (ff ` {s..n})", "by (metis (mono_tags, hide_lams) Max_in \\<open>\\<And>j. 0 < ff j\\<close> \\<open>m \\<le> n\\<close> assms(5) \n              atLeastAtMost_iff empty_iff finite_atLeastAtMost finite_imageI imageE \n              image_is_empty less_eq_real_def)"], ["proof (state)\nthis:\n  0 \\<le> Max (ff ` {s..n})\n\ngoal (1 subgoal):\n 1. max (Max (ff ` {s..n})) (d (n + 1) * Max (ff ` {s..n}))\n    \\<le> Max (ff ` {s..n}) * max 1 (d (n + 1))", "then"], ["proof (chain)\npicking this:\n  0 \\<le> Max (ff ` {s..n})", "show ?thesis"], ["proof (prove)\nusing this:\n  0 \\<le> Max (ff ` {s..n})\n\ngoal (1 subgoal):\n 1. max (Max (ff ` {s..n})) (d (n + 1) * Max (ff ` {s..n}))\n    \\<le> Max (ff ` {s..n}) * max 1 (d (n + 1))", "using max_mult_distrib_right"], ["proof (prove)\nusing this:\n  0 \\<le> Max (ff ` {s..n})\n  max ?x ?y * ?p =\n  (if (0::?'a) \\<le> ?p then max (?x * ?p) (?y * ?p)\n   else min (?x * ?p) (?y * ?p))\n\ngoal (1 subgoal):\n 1. max (Max (ff ` {s..n})) (d (n + 1) * Max (ff ` {s..n}))\n    \\<le> Max (ff ` {s..n}) * max 1 (d (n + 1))", "by (simp add: max_mult_distrib_right mult.commute)"], ["proof (state)\nthis:\n  max (Max (ff ` {s..n})) (d (n + 1) * Max (ff ` {s..n}))\n  \\<le> Max (ff ` {s..n}) * max 1 (d (n + 1))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  max (Max (ff ` {s..n})) (d (n + 1) * Max (ff ` {s..n}))\n  \\<le> Max (ff ` {s..n}) * max 1 (d (n + 1))\n\ngoal (1 subgoal):\n 1. Max (ff ` {s..Suc n}) \\<le> prod d {m + 1..Suc n} * Max (ff ` {s..m})", "also"], ["proof (state)\nthis:\n  max (Max (ff ` {s..n})) (d (n + 1) * Max (ff ` {s..n}))\n  \\<le> Max (ff ` {s..n}) * max 1 (d (n + 1))\n\ngoal (1 subgoal):\n 1. Max (ff ` {s..Suc n}) \\<le> prod d {m + 1..Suc n} * Max (ff ` {s..m})", "have \"... = Max (ff ` {s..n}) * d (n+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max (ff ` {s..n}) * max 1 (d (n + 1)) = Max (ff ` {s..n}) * d (n + 1)", "by (metis d max.commute max.strict_order_iff)"], ["proof (state)\nthis:\n  Max (ff ` {s..n}) * max 1 (d (n + 1)) = Max (ff ` {s..n}) * d (n + 1)\n\ngoal (1 subgoal):\n 1. Max (ff ` {s..Suc n}) \\<le> prod d {m + 1..Suc n} * Max (ff ` {s..m})", "also"], ["proof (state)\nthis:\n  Max (ff ` {s..n}) * max 1 (d (n + 1)) = Max (ff ` {s..n}) * d (n + 1)\n\ngoal (1 subgoal):\n 1. Max (ff ` {s..Suc n}) \\<le> prod d {m + 1..Suc n} * Max (ff ` {s..m})", "have \"... \\<le>  prod d {m + 1..n} * Max (ff ` {s..m}) * d (n+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max (ff ` {s..n}) * d (n + 1)\n    \\<le> prod d {m + 1..n} * Max (ff ` {s..m}) * d (n + 1)", "using IH d[rule_format, of \"n+1\"]"], ["proof (prove)\nusing this:\n  Max (ff ` {s..n}) \\<le> prod d {m + 1..n} * Max (ff ` {s..m})\n  1 < d (n + 1)\n\ngoal (1 subgoal):\n 1. Max (ff ` {s..n}) * d (n + 1)\n    \\<le> prod d {m + 1..n} * Max (ff ` {s..m}) * d (n + 1)", "by auto"], ["proof (state)\nthis:\n  Max (ff ` {s..n}) * d (n + 1)\n  \\<le> prod d {m + 1..n} * Max (ff ` {s..m}) * d (n + 1)\n\ngoal (1 subgoal):\n 1. Max (ff ` {s..Suc n}) \\<le> prod d {m + 1..Suc n} * Max (ff ` {s..m})", "also"], ["proof (state)\nthis:\n  Max (ff ` {s..n}) * d (n + 1)\n  \\<le> prod d {m + 1..n} * Max (ff ` {s..m}) * d (n + 1)\n\ngoal (1 subgoal):\n 1. Max (ff ` {s..Suc n}) \\<le> prod d {m + 1..Suc n} * Max (ff ` {s..m})", "have \"... = prod d {m + 1..n+1} * Max (ff ` {s..m})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prod d {m + 1..n} * Max (ff ` {s..m}) * d (n + 1) =\n    prod d {m + 1..n + 1} * Max (ff ` {s..m})", "using \\<open>n\\<ge>m\\<close>"], ["proof (prove)\nusing this:\n  m \\<le> n\n\ngoal (1 subgoal):\n 1. prod d {m + 1..n} * Max (ff ` {s..m}) * d (n + 1) =\n    prod d {m + 1..n + 1} * Max (ff ` {s..m})", "by (simp add:prod.nat_ivl_Suc' algebra_simps)"], ["proof (state)\nthis:\n  prod d {m + 1..n} * Max (ff ` {s..m}) * d (n + 1) =\n  prod d {m + 1..n + 1} * Max (ff ` {s..m})\n\ngoal (1 subgoal):\n 1. Max (ff ` {s..Suc n}) \\<le> prod d {m + 1..Suc n} * Max (ff ` {s..m})", "finally"], ["proof (chain)\npicking this:\n  Max (ff ` {s..Suc n}) \\<le> prod d {m + 1..n + 1} * Max (ff ` {s..m})", "show ?case"], ["proof (prove)\nusing this:\n  Max (ff ` {s..Suc n}) \\<le> prod d {m + 1..n + 1} * Max (ff ` {s..m})\n\ngoal (1 subgoal):\n 1. Max (ff ` {s..Suc n}) \\<le> prod d {m + 1..Suc n} * Max (ff ` {s..m})", "by simp"], ["proof (state)\nthis:\n  Max (ff ` {s..Suc n}) \\<le> prod d {m + 1..Suc n} * Max (ff ` {s..m})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  m \\<noteq> Suc n \\<Longrightarrow>\n  Max (ff ` {s..Suc n}) \\<le> prod d {m + 1..Suc n} * Max (ff ` {s..m})\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>m \\<le> n \\<Longrightarrow>\n                Max (ff ` {s..n})\n                \\<le> prod d {m + 1..n} * Max (ff ` {s..m});\n        m \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Max (ff ` {s..Suc n})\n                         \\<le> prod d {m + 1..Suc n} * Max (ff ` {s..m})", "ultimately"], ["proof (chain)\npicking this:\n  m = Suc n \\<Longrightarrow>\n  Max (ff ` {s..Suc n}) \\<le> prod d {m + 1..Suc n} * Max (ff ` {s..m})\n  m \\<noteq> Suc n \\<Longrightarrow>\n  Max (ff ` {s..Suc n}) \\<le> prod d {m + 1..Suc n} * Max (ff ` {s..m})", "show ?case"], ["proof (prove)\nusing this:\n  m = Suc n \\<Longrightarrow>\n  Max (ff ` {s..Suc n}) \\<le> prod d {m + 1..Suc n} * Max (ff ` {s..m})\n  m \\<noteq> Suc n \\<Longrightarrow>\n  Max (ff ` {s..Suc n}) \\<le> prod d {m + 1..Suc n} * Max (ff ` {s..m})\n\ngoal (1 subgoal):\n 1. Max (ff ` {s..Suc n}) \\<le> prod d {m + 1..Suc n} * Max (ff ` {s..m})", "by blast"], ["proof (state)\nthis:\n  Max (ff ` {s..Suc n}) \\<le> prod d {m + 1..Suc n} * Max (ff ` {s..m})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Max (ff ` {s..n}) \\<le> prod d {m + 1..n} * Max (ff ` {s..m})\n\ngoal (1 subgoal):\n 1. real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))\n    < prod d {m + 1..n + 1} *\n      (MAX j\\<in>{s..m}. real_of_int (a j) powr (1 / real_of_int (2 ^ j)))", "then"], ["proof (chain)\npicking this:\n  Max (ff ` {s..n}) \\<le> prod d {m + 1..n} * Max (ff ` {s..m})", "have \"d (n+1) * Max (ff ` {s..n} ) \\<le> (\\<Prod>j=(m+1)..(n+1). d j)* (Max (ff ` {s..m}))\""], ["proof (prove)\nusing this:\n  Max (ff ` {s..n}) \\<le> prod d {m + 1..n} * Max (ff ` {s..m})\n\ngoal (1 subgoal):\n 1. d (n + 1) * Max (ff ` {s..n})\n    \\<le> prod d {m + 1..n + 1} * Max (ff ` {s..m})", "using \\<open>m\\<le>n\\<close> d[rule_format,of \"Suc n\"]"], ["proof (prove)\nusing this:\n  Max (ff ` {s..n}) \\<le> prod d {m + 1..n} * Max (ff ` {s..m})\n  m \\<le> n\n  1 < d (Suc n)\n\ngoal (1 subgoal):\n 1. d (n + 1) * Max (ff ` {s..n})\n    \\<le> prod d {m + 1..n + 1} * Max (ff ` {s..m})", "by (simp add:prod.nat_ivl_Suc')"], ["proof (state)\nthis:\n  d (n + 1) * Max (ff ` {s..n})\n  \\<le> prod d {m + 1..n + 1} * Max (ff ` {s..m})\n\ngoal (1 subgoal):\n 1. real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))\n    < prod d {m + 1..n + 1} *\n      (MAX j\\<in>{s..m}. real_of_int (a j) powr (1 / real_of_int (2 ^ j)))", "then"], ["proof (chain)\npicking this:\n  d (n + 1) * Max (ff ` {s..n})\n  \\<le> prod d {m + 1..n + 1} * Max (ff ` {s..m})", "show ?thesis"], ["proof (prove)\nusing this:\n  d (n + 1) * Max (ff ` {s..n})\n  \\<le> prod d {m + 1..n + 1} * Max (ff ` {s..m})\n\ngoal (1 subgoal):\n 1. real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))\n    < prod d {m + 1..n + 1} *\n      (MAX j\\<in>{s..m}. real_of_int (a j) powr (1 / real_of_int (2 ^ j)))", "using ff_asm[of n] \\<open>s\\<le>m\\<close> \\<open>m\\<le>n\\<close>"], ["proof (prove)\nusing this:\n  d (n + 1) * Max (ff ` {s..n})\n  \\<le> prod d {m + 1..n + 1} * Max (ff ` {s..m})\n  m \\<le> n \\<Longrightarrow> ff (n + 1) < d (n + 1) * Max (ff ` {s..n})\n  s \\<le> m\n  m \\<le> n\n\ngoal (1 subgoal):\n 1. real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))\n    < prod d {m + 1..n + 1} *\n      (MAX j\\<in>{s..m}. real_of_int (a j) powr (1 / real_of_int (2 ^ j)))", "unfolding ff_def"], ["proof (prove)\nusing this:\n  d (n + 1) *\n  (MAX j\\<in>{s..n}. real_of_int (a j) powr (1 / real_of_int (2 ^ j)))\n  \\<le> prod d {m + 1..n + 1} *\n        (MAX j\\<in>{s..m}. real_of_int (a j) powr (1 / real_of_int (2 ^ j)))\n  m \\<le> n \\<Longrightarrow>\n  real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))\n  < d (n + 1) *\n    (MAX j\\<in>{s..n}. real_of_int (a j) powr (1 / real_of_int (2 ^ j)))\n  s \\<le> m\n  m \\<le> n\n\ngoal (1 subgoal):\n 1. real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))\n    < prod d {m + 1..n + 1} *\n      (MAX j\\<in>{s..m}. real_of_int (a j) powr (1 / real_of_int (2 ^ j)))", "by auto"], ["proof (state)\nthis:\n  real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))\n  < prod d {m + 1..n + 1} *\n    (MAX j\\<in>{s..m}. real_of_int (a j) powr (1 / real_of_int (2 ^ j)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma show9:\n  fixes d ::\"nat\\<Rightarrow>real \" and a :: \"nat\\<Rightarrow>int \" and s ::nat and A::real\n  assumes   \"A > 1\" and  d: \"\\<forall>n. d n> 1\"  and a: \"\\<forall>n. a n>0\" and \"s>0\"  \n    and assu1: \"(( \\<lambda> n. (of_int (a n)) powr(1 /of_int (2^n)))\\<longlongrightarrow> A) sequentially \"\n    and \"convergent_prod d\"\n    and 8: \"\\<forall>n\\<ge>s. prodinf (\\<lambda>j. d( n+j)) \n                  < A/(Max ((\\<lambda>(j::nat). (of_int (a j)) powr(1 /of_int (2^j))) ` {s..n})) \"\n  shows \"\\<forall>m \\<ge>s. \\<exists>n\\<ge>m.  ( (of_int (a (n+1))) powr(1 /of_int (2^(n+1))) \\<ge>\n          (d (n+1))* (Max ( ( \\<lambda> (j::nat). (of_int (a j)) powr(1 /of_int (2^j))) ` {s..n} )))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m\\<ge>s.\n       \\<exists>n\\<ge>m.\n          d (n + 1) *\n          (MAX j\\<in>{s..n}.\n              real_of_int (a j) powr (1 / real_of_int (2 ^ j)))\n          \\<le> real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>m\\<ge>s.\n               \\<exists>n\\<ge>m.\n                  d (n + 1) *\n                  (MAX j\\<in>{s..n}.\n                      real_of_int (a j) powr (1 / real_of_int (2 ^ j)))\n                  \\<le> real_of_int (a (n + 1)) powr\n                        (1 / real_of_int (2 ^ (n + 1)))) \\<Longrightarrow>\n    False", "define ff where \"ff \\<equiv> (\\<lambda>j. real_of_int (a j) powr (1 / of_int (2^j)))\""], ["proof (state)\nthis:\n  ff \\<equiv> \\<lambda>j. real_of_int (a j) powr (1 / real_of_int (2 ^ j))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>m\\<ge>s.\n               \\<exists>n\\<ge>m.\n                  d (n + 1) *\n                  (MAX j\\<in>{s..n}.\n                      real_of_int (a j) powr (1 / real_of_int (2 ^ j)))\n                  \\<le> real_of_int (a (n + 1)) powr\n                        (1 / real_of_int (2 ^ (n + 1)))) \\<Longrightarrow>\n    False", "assume assumptioncontra: \" \\<not> (\\<forall>m \\<ge>s. \\<exists>n\\<ge>m. ff(n+1) \\<ge> d(n+1) * Max (ff  ` {s..n}))\""], ["proof (state)\nthis:\n  \\<not> (\\<forall>m\\<ge>s.\n             \\<exists>n\\<ge>m.\n                d (n + 1) * Max (ff ` {s..n}) \\<le> ff (n + 1))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>m\\<ge>s.\n               \\<exists>n\\<ge>m.\n                  d (n + 1) *\n                  (MAX j\\<in>{s..n}.\n                      real_of_int (a j) powr (1 / real_of_int (2 ^ j)))\n                  \\<le> real_of_int (a (n + 1)) powr\n                        (1 / real_of_int (2 ^ (n + 1)))) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>m\\<ge>s.\n             \\<exists>n\\<ge>m.\n                d (n + 1) * Max (ff ` {s..n}) \\<le> ff (n + 1))", "obtain t where \"t\\<ge>s\" and\n    ttt: \"\\<forall>n\\<ge>t. ff (n+1) < d (n+1) * Max (ff ` {s..n})\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>m\\<ge>s.\n             \\<exists>n\\<ge>m.\n                d (n + 1) * Max (ff ` {s..n}) \\<le> ff (n + 1))\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>s \\<le> t;\n         \\<forall>n\\<ge>t.\n            ff (n + 1) < d (n + 1) * Max (ff ` {s..n})\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  s \\<le> t\n  \\<forall>n\\<ge>t. ff (n + 1) < d (n + 1) * Max (ff ` {s..n})\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>m\\<ge>s.\n               \\<exists>n\\<ge>m.\n                  d (n + 1) *\n                  (MAX j\\<in>{s..n}.\n                      real_of_int (a j) powr (1 / real_of_int (2 ^ j)))\n                  \\<le> real_of_int (a (n + 1)) powr\n                        (1 / real_of_int (2 ^ (n + 1)))) \\<Longrightarrow>\n    False", "define B where \"B \\<equiv> \\<Prod>j. d (t + 1 + j)\""], ["proof (state)\nthis:\n  B \\<equiv> \\<Prod>j. d (t + 1 + j)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>m\\<ge>s.\n               \\<exists>n\\<ge>m.\n                  d (n + 1) *\n                  (MAX j\\<in>{s..n}.\n                      real_of_int (a j) powr (1 / real_of_int (2 ^ j)))\n                  \\<le> real_of_int (a (n + 1)) powr\n                        (1 / real_of_int (2 ^ (n + 1)))) \\<Longrightarrow>\n    False", "have \"B>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < B", "unfolding B_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < (\\<Prod>j. d (t + 1 + j))", "proof (rule less_0_prodinf)"], ["proof (state)\ngoal (2 subgoals):\n 1. convergent_prod (\\<lambda>j. d (t + 1 + j))\n 2. \\<And>i. 0 < d (t + 1 + i)", "show \"convergent_prod (\\<lambda>j. d (t + 1 + j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. convergent_prod (\\<lambda>j. d (t + 1 + j))", "using convergent_prod_iff_shift[of d \"t+1\"] \\<open>convergent_prod d\\<close>"], ["proof (prove)\nusing this:\n  convergent_prod (\\<lambda>i. d (i + (t + 1))) = convergent_prod d\n  convergent_prod d\n\ngoal (1 subgoal):\n 1. convergent_prod (\\<lambda>j. d (t + 1 + j))", "by (auto simp: algebra_simps)"], ["proof (state)\nthis:\n  convergent_prod (\\<lambda>j. d (t + 1 + j))\n\ngoal (1 subgoal):\n 1. \\<And>i. 0 < d (t + 1 + i)", "show \"\\<And>i. 0 < d (t + 1 + i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. 0 < d (t + 1 + i)", "using d le_less_trans zero_le_one"], ["proof (prove)\nusing this:\n  \\<forall>n. 1 < d n\n  \\<lbrakk>?x \\<le> ?y; ?y < ?z\\<rbrakk> \\<Longrightarrow> ?x < ?z\n  (0::?'a) \\<le> (1::?'a)\n\ngoal (1 subgoal):\n 1. \\<And>i. 0 < d (t + 1 + i)", "by blast"], ["proof (state)\nthis:\n  0 < d (t + 1 + ?i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < B\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>m\\<ge>s.\n               \\<exists>n\\<ge>m.\n                  d (n + 1) *\n                  (MAX j\\<in>{s..n}.\n                      real_of_int (a j) powr (1 / real_of_int (2 ^ j)))\n                  \\<le> real_of_int (a (n + 1)) powr\n                        (1 / real_of_int (2 ^ (n + 1)))) \\<Longrightarrow>\n    False", "have \"A \\<le> B * Max ( ff ` {s..t})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<le> B * Max (ff ` {s..t})", "proof (rule tendsto_le[of sequentially \"\\<lambda>n. (\\<Prod>j=(t+1)..(n+1). d j) * Max ( ff ` {s..t})\" _ \n        \"\\<lambda>n. ff (n+1)\"])"], ["proof (state)\ngoal (4 subgoals):\n 1. sequentially \\<noteq> bot\n 2. (\\<lambda>n. prod d {t + 1..n + 1} * Max (ff ` {s..t}))\n    \\<longlonglongrightarrow> B * Max (ff ` {s..t})\n 3. (\\<lambda>n. ff (n + 1)) \\<longlonglongrightarrow> A\n 4. \\<forall>\\<^sub>F x in sequentially.\n       ff (x + 1) \\<le> prod d {t + 1..x + 1} * Max (ff ` {s..t})", "show \"(\\<lambda>n. ff (n + 1)) \\<longlonglongrightarrow> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. ff (n + 1)) \\<longlonglongrightarrow> A", "using assu1[folded ff_def] LIMSEQ_ignore_initial_segment"], ["proof (prove)\nusing this:\n  ff \\<longlonglongrightarrow> A\n  ?f \\<longlonglongrightarrow> ?a \\<Longrightarrow>\n  (\\<lambda>n. ?f (n + ?k)) \\<longlonglongrightarrow> ?a\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. ff (n + 1)) \\<longlonglongrightarrow> A", "by blast"], ["proof (state)\nthis:\n  (\\<lambda>n. ff (n + 1)) \\<longlonglongrightarrow> A\n\ngoal (3 subgoals):\n 1. sequentially \\<noteq> bot\n 2. (\\<lambda>n. prod d {t + 1..n + 1} * Max (ff ` {s..t}))\n    \\<longlonglongrightarrow> B * Max (ff ` {s..t})\n 3. \\<forall>\\<^sub>F x in sequentially.\n       ff (x + 1) \\<le> prod d {t + 1..x + 1} * Max (ff ` {s..t})", "have \"(\\<lambda>n. prod d {t + 1..n + 1}) \\<longlonglongrightarrow> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. prod d {t + 1..n + 1}) \\<longlonglongrightarrow> B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>n. prod d {t + 1..n + 1}) \\<longlonglongrightarrow> B", "have \"convergent_prod (\\<lambda>j. d (t + 1 + j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. convergent_prod (\\<lambda>j. d (t + 1 + j))", "using \\<open>convergent_prod d\\<close> convergent_prod_iff_shift[of d \"t+1\"]"], ["proof (prove)\nusing this:\n  convergent_prod d\n  convergent_prod (\\<lambda>i. d (i + (t + 1))) = convergent_prod d\n\ngoal (1 subgoal):\n 1. convergent_prod (\\<lambda>j. d (t + 1 + j))", "by (simp add:algebra_simps)"], ["proof (state)\nthis:\n  convergent_prod (\\<lambda>j. d (t + 1 + j))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. prod d {t + 1..n + 1}) \\<longlonglongrightarrow> B", "then"], ["proof (chain)\npicking this:\n  convergent_prod (\\<lambda>j. d (t + 1 + j))", "have \"(\\<lambda>n. \\<Prod>i\\<le>n. d (t + 1 + i)) \\<longlonglongrightarrow> B\""], ["proof (prove)\nusing this:\n  convergent_prod (\\<lambda>j. d (t + 1 + j))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. \\<Prod>i\\<le>n. d (t + 1 + i)) \\<longlonglongrightarrow> B", "using B_def convergent_prod_LIMSEQ"], ["proof (prove)\nusing this:\n  convergent_prod (\\<lambda>j. d (t + 1 + j))\n  B \\<equiv> \\<Prod>j. d (t + 1 + j)\n  convergent_prod ?f \\<Longrightarrow>\n  (\\<lambda>n. prod ?f {..n}) \\<longlonglongrightarrow> prodinf ?f\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. \\<Prod>i\\<le>n. d (t + 1 + i)) \\<longlonglongrightarrow> B", "by blast"], ["proof (state)\nthis:\n  (\\<lambda>n. \\<Prod>i\\<le>n. d (t + 1 + i)) \\<longlonglongrightarrow> B\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. prod d {t + 1..n + 1}) \\<longlonglongrightarrow> B", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n. \\<Prod>i\\<le>n. d (t + 1 + i)) \\<longlonglongrightarrow> B", "have \"(\\<lambda>n. \\<Prod>i\\<in>{0..n}. d (i+(t + 1))) \\<longlonglongrightarrow> B\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. \\<Prod>i\\<le>n. d (t + 1 + i)) \\<longlonglongrightarrow> B\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. \\<Prod>i = 0..n. d (i + (t + 1)))\n    \\<longlonglongrightarrow> B", "using atLeast0AtMost"], ["proof (prove)\nusing this:\n  (\\<lambda>n. \\<Prod>i\\<le>n. d (t + 1 + i)) \\<longlonglongrightarrow> B\n  {0..?n} = {..?n}\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. \\<Prod>i = 0..n. d (i + (t + 1)))\n    \\<longlonglongrightarrow> B", "by (auto simp:algebra_simps)"], ["proof (state)\nthis:\n  (\\<lambda>n. \\<Prod>i = 0..n. d (i + (t + 1))) \\<longlonglongrightarrow> B\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. prod d {t + 1..n + 1}) \\<longlonglongrightarrow> B", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n. \\<Prod>i = 0..n. d (i + (t + 1))) \\<longlonglongrightarrow> B", "have \"(\\<lambda>n. prod d {(t + 1)..n + (t + 1)}) \\<longlonglongrightarrow> B\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. \\<Prod>i = 0..n. d (i + (t + 1))) \\<longlonglongrightarrow> B\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. prod d {t + 1..n + (t + 1)}) \\<longlonglongrightarrow> B", "apply (subst (asm) prod.shift_bounds_cl_nat_ivl[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. prod d {0 + (t + 1)..n + (t + 1)})\n    \\<longlonglongrightarrow> B \\<Longrightarrow>\n    (\\<lambda>n. prod d {t + 1..n + (t + 1)}) \\<longlonglongrightarrow> B", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>n. prod d {t + 1..n + (t + 1)}) \\<longlonglongrightarrow> B\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. prod d {t + 1..n + 1}) \\<longlonglongrightarrow> B", "from seq_offset_neg[OF this,of \"t\"]"], ["proof (chain)\npicking this:\n  (\\<lambda>i. prod d {t + 1..i - t + (t + 1)}) \\<longlonglongrightarrow> B", "show \"(\\<lambda>n. prod d {t + 1..n+1}) \\<longlonglongrightarrow> B\""], ["proof (prove)\nusing this:\n  (\\<lambda>i. prod d {t + 1..i - t + (t + 1)}) \\<longlonglongrightarrow> B\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. prod d {t + 1..n + 1}) \\<longlonglongrightarrow> B", "apply (elim Lim_transform)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. prod d {t + 1..x + 1} - prod d {t + 1..x - t + (t + 1)})\n    \\<longlonglongrightarrow> 0", "apply (rule LIMSEQ_I)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<exists>no.\n          \\<forall>n\\<ge>no.\n             norm\n              (prod d {t + 1..n + 1} - prod d {t + 1..n - t + (t + 1)} - 0)\n             < r", "apply (rule exI[where x=\"t+1\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<forall>n\\<ge>t + 1.\n          norm (prod d {t + 1..n + 1} - prod d {t + 1..n - t + (t + 1)} - 0)\n          < r", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>n. prod d {t + 1..n + 1}) \\<longlonglongrightarrow> B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>n. prod d {t + 1..n + 1}) \\<longlonglongrightarrow> B\n\ngoal (3 subgoals):\n 1. sequentially \\<noteq> bot\n 2. (\\<lambda>n. prod d {t + 1..n + 1} * Max (ff ` {s..t}))\n    \\<longlonglongrightarrow> B * Max (ff ` {s..t})\n 3. \\<forall>\\<^sub>F x in sequentially.\n       ff (x + 1) \\<le> prod d {t + 1..x + 1} * Max (ff ` {s..t})", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n. prod d {t + 1..n + 1}) \\<longlonglongrightarrow> B", "show \"(\\<lambda>n. prod d {t + 1..n + 1} * Max (ff ` {s..t})) \\<longlonglongrightarrow> B * Max (ff ` {s..t})\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. prod d {t + 1..n + 1}) \\<longlonglongrightarrow> B\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. prod d {t + 1..n + 1} * Max (ff ` {s..t}))\n    \\<longlonglongrightarrow> B * Max (ff ` {s..t})", "by (auto intro:tendsto_eq_intros)"], ["proof (state)\nthis:\n  (\\<lambda>n. prod d {t + 1..n + 1} * Max (ff ` {s..t}))\n  \\<longlonglongrightarrow> B * Max (ff ` {s..t})\n\ngoal (2 subgoals):\n 1. sequentially \\<noteq> bot\n 2. \\<forall>\\<^sub>F x in sequentially.\n       ff (x + 1) \\<le> prod d {t + 1..x + 1} * Max (ff ` {s..t})", "have \"\\<forall>\\<^sub>F n in sequentially. (ff (n+1)) < (\\<Prod>j=(t+1)..(n+1). d j) * (Max ( ff ` {s..t}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       ff (n + 1) < prod d {t + 1..n + 1} * Max (ff ` {s..t})", "unfolding eventually_sequentially ff_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>N.\n       \\<forall>n\\<ge>N.\n          real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))\n          < prod d {t + 1..n + 1} *\n            (MAX j\\<in>{s..t}.\n                real_of_int (a j) powr (1 / real_of_int (2 ^ j)))", "using auxiliary1_9[OF d a \\<open>s>0\\<close> _ \\<open>t\\<ge>s\\<close> ttt[unfolded ff_def]]"], ["proof (prove)\nusing this:\n  t \\<le> ?n \\<Longrightarrow>\n  real_of_int (a (?n + 1)) powr (1 / real_of_int (2 ^ (?n + 1)))\n  < prod d {t + 1..?n + 1} *\n    (MAX j\\<in>{s..t}. real_of_int (a j) powr (1 / real_of_int (2 ^ j)))\n\ngoal (1 subgoal):\n 1. \\<exists>N.\n       \\<forall>n\\<ge>N.\n          real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))\n          < prod d {t + 1..n + 1} *\n            (MAX j\\<in>{s..t}.\n                real_of_int (a j) powr (1 / real_of_int (2 ^ j)))", "by blast"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     ff (n + 1) < prod d {t + 1..n + 1} * Max (ff ` {s..t})\n\ngoal (2 subgoals):\n 1. sequentially \\<noteq> bot\n 2. \\<forall>\\<^sub>F x in sequentially.\n       ff (x + 1) \\<le> prod d {t + 1..x + 1} * Max (ff ` {s..t})", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F n in sequentially.\n     ff (n + 1) < prod d {t + 1..n + 1} * Max (ff ` {s..t})", "show \"\\<forall>\\<^sub>F n in sequentially. (ff (n+1)) \\<le> (\\<Prod>j=(t+1)..(n+1). d j) * (Max ( ff ` {s..t}))\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially.\n     ff (n + 1) < prod d {t + 1..n + 1} * Max (ff ` {s..t})\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       ff (n + 1) \\<le> prod d {t + 1..n + 1} * Max (ff ` {s..t})", "by (eventually_elim,simp)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     ff (n + 1) \\<le> prod d {t + 1..n + 1} * Max (ff ` {s..t})\n\ngoal (1 subgoal):\n 1. sequentially \\<noteq> bot", "qed simp"], ["proof (state)\nthis:\n  A \\<le> B * Max (ff ` {s..t})\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>m\\<ge>s.\n               \\<exists>n\\<ge>m.\n                  d (n + 1) *\n                  (MAX j\\<in>{s..n}.\n                      real_of_int (a j) powr (1 / real_of_int (2 ^ j)))\n                  \\<le> real_of_int (a (n + 1)) powr\n                        (1 / real_of_int (2 ^ (n + 1)))) \\<Longrightarrow>\n    False", "also"], ["proof (state)\nthis:\n  A \\<le> B * Max (ff ` {s..t})\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>m\\<ge>s.\n               \\<exists>n\\<ge>m.\n                  d (n + 1) *\n                  (MAX j\\<in>{s..n}.\n                      real_of_int (a j) powr (1 / real_of_int (2 ^ j)))\n                  \\<le> real_of_int (a (n + 1)) powr\n                        (1 / real_of_int (2 ^ (n + 1)))) \\<Longrightarrow>\n    False", "have \"... \\<le> B * Max ( ff ` {s..t+1})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B * Max (ff ` {s..t}) \\<le> B * Max (ff ` {s..t + 1})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. B * Max (ff ` {s..t}) \\<le> B * Max (ff ` {s..t + 1})", "have \"Max (ff ` {s..t}) \\<le> Max (ff ` {s..t + 1})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max (ff ` {s..t}) \\<le> Max (ff ` {s..t + 1})", "using \\<open>t\\<ge>s\\<close>"], ["proof (prove)\nusing this:\n  s \\<le> t\n\ngoal (1 subgoal):\n 1. Max (ff ` {s..t}) \\<le> Max (ff ` {s..t + 1})", "by (auto intro: Max_mono)"], ["proof (state)\nthis:\n  Max (ff ` {s..t}) \\<le> Max (ff ` {s..t + 1})\n\ngoal (1 subgoal):\n 1. B * Max (ff ` {s..t}) \\<le> B * Max (ff ` {s..t + 1})", "then"], ["proof (chain)\npicking this:\n  Max (ff ` {s..t}) \\<le> Max (ff ` {s..t + 1})", "show ?thesis"], ["proof (prove)\nusing this:\n  Max (ff ` {s..t}) \\<le> Max (ff ` {s..t + 1})\n\ngoal (1 subgoal):\n 1. B * Max (ff ` {s..t}) \\<le> B * Max (ff ` {s..t + 1})", "using \\<open>B>0\\<close>"], ["proof (prove)\nusing this:\n  Max (ff ` {s..t}) \\<le> Max (ff ` {s..t + 1})\n  0 < B\n\ngoal (1 subgoal):\n 1. B * Max (ff ` {s..t}) \\<le> B * Max (ff ` {s..t + 1})", "by auto"], ["proof (state)\nthis:\n  B * Max (ff ` {s..t}) \\<le> B * Max (ff ` {s..t + 1})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  B * Max (ff ` {s..t}) \\<le> B * Max (ff ` {s..t + 1})\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>m\\<ge>s.\n               \\<exists>n\\<ge>m.\n                  d (n + 1) *\n                  (MAX j\\<in>{s..n}.\n                      real_of_int (a j) powr (1 / real_of_int (2 ^ j)))\n                  \\<le> real_of_int (a (n + 1)) powr\n                        (1 / real_of_int (2 ^ (n + 1)))) \\<Longrightarrow>\n    False", "finally"], ["proof (chain)\npicking this:\n  A \\<le> B * Max (ff ` {s..t + 1})", "have \"A \\<le> B * Max (ff ` {s..t + 1})\""], ["proof (prove)\nusing this:\n  A \\<le> B * Max (ff ` {s..t + 1})\n\ngoal (1 subgoal):\n 1. A \\<le> B * Max (ff ` {s..t + 1})", "unfolding B_def"], ["proof (prove)\nusing this:\n  A \\<le> (\\<Prod>j. d (t + 1 + j)) * Max (ff ` {s..t + 1})\n\ngoal (1 subgoal):\n 1. A \\<le> (\\<Prod>j. d (t + 1 + j)) * Max (ff ` {s..t + 1})", "."], ["proof (state)\nthis:\n  A \\<le> B * Max (ff ` {s..t + 1})\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>m\\<ge>s.\n               \\<exists>n\\<ge>m.\n                  d (n + 1) *\n                  (MAX j\\<in>{s..n}.\n                      real_of_int (a j) powr (1 / real_of_int (2 ^ j)))\n                  \\<le> real_of_int (a (n + 1)) powr\n                        (1 / real_of_int (2 ^ (n + 1)))) \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  A \\<le> B * Max (ff ` {s..t + 1})\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>m\\<ge>s.\n               \\<exists>n\\<ge>m.\n                  d (n + 1) *\n                  (MAX j\\<in>{s..n}.\n                      real_of_int (a j) powr (1 / real_of_int (2 ^ j)))\n                  \\<le> real_of_int (a (n + 1)) powr\n                        (1 / real_of_int (2 ^ (n + 1)))) \\<Longrightarrow>\n    False", "have \"B < A / Max (ff ` {s..t + 1})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B < A / Max (ff ` {s..t + 1})", "using 8[rule_format, of \"t+1\",folded ff_def B_def] \\<open>s\\<le>t\\<close>"], ["proof (prove)\nusing this:\n  s \\<le> t + 1 \\<Longrightarrow> B < A / Max (ff ` {s..t + 1})\n  s \\<le> t\n\ngoal (1 subgoal):\n 1. B < A / Max (ff ` {s..t + 1})", "by auto"], ["proof (state)\nthis:\n  B < A / Max (ff ` {s..t + 1})\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>m\\<ge>s.\n               \\<exists>n\\<ge>m.\n                  d (n + 1) *\n                  (MAX j\\<in>{s..n}.\n                      real_of_int (a j) powr (1 / real_of_int (2 ^ j)))\n                  \\<le> real_of_int (a (n + 1)) powr\n                        (1 / real_of_int (2 ^ (n + 1)))) \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  B < A / Max (ff ` {s..t + 1})\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>m\\<ge>s.\n               \\<exists>n\\<ge>m.\n                  d (n + 1) *\n                  (MAX j\\<in>{s..n}.\n                      real_of_int (a j) powr (1 / real_of_int (2 ^ j)))\n                  \\<le> real_of_int (a (n + 1)) powr\n                        (1 / real_of_int (2 ^ (n + 1)))) \\<Longrightarrow>\n    False", "have \"Max (ff ` {s..t+1})>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < Max (ff ` {s..t + 1})", "using \\<open>A \\<le> B * Max (ff ` {s..t + 1})\\<close> \\<open>B>0\\<close> \\<open>A>1\\<close> zero_less_mult_pos [of B \"Max (ff ` {s..Suc t})\"]"], ["proof (prove)\nusing this:\n  A \\<le> B * Max (ff ` {s..t + 1})\n  0 < B\n  1 < A\n  \\<lbrakk>0 < B * Max (ff ` {s..Suc t}); 0 < B\\<rbrakk>\n  \\<Longrightarrow> 0 < Max (ff ` {s..Suc t})\n\ngoal (1 subgoal):\n 1. 0 < Max (ff ` {s..t + 1})", "by fastforce"], ["proof (state)\nthis:\n  0 < Max (ff ` {s..t + 1})\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>m\\<ge>s.\n               \\<exists>n\\<ge>m.\n                  d (n + 1) *\n                  (MAX j\\<in>{s..n}.\n                      real_of_int (a j) powr (1 / real_of_int (2 ^ j)))\n                  \\<le> real_of_int (a (n + 1)) powr\n                        (1 / real_of_int (2 ^ (n + 1)))) \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  A \\<le> B * Max (ff ` {s..t + 1})\n  B < A / Max (ff ` {s..t + 1})\n  0 < Max (ff ` {s..t + 1})", "show False"], ["proof (prove)\nusing this:\n  A \\<le> B * Max (ff ` {s..t + 1})\n  B < A / Max (ff ` {s..t + 1})\n  0 < Max (ff ` {s..t + 1})\n\ngoal (1 subgoal):\n 1. False", "by (auto simp add:field_simps)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma show10:\n  fixes d ::\"nat\\<Rightarrow>real \" and  a ::\"nat\\<Rightarrow>int \" and s::nat\n  assumes d [rule_format]: \"\\<forall>n. d n> 1\" \n    and a [rule_format]: \"\\<forall>n. a n>0\"  and \" s>0\"\n    and 9: \"\\<forall>m \\<ge>s. \\<exists>n\\<ge>m. a (n+1) powr(1 / of_int (2^(n+1))) \\<ge>\n          d (n+1) * (Max ((\\<lambda>j. (of_int (a j)) powr(1 /of_int (2^j))) ` {s..n} ))\"\n  shows \"\\<forall>m\\<ge>s. \\<exists>n\\<ge>m. d (n+1) powr(2^(n+1)) * (\\<Prod>j=1..n. of_int( a j)) * \n            (1 / (\\<Prod>j=1..s-1. of_int( a j))) \\<le> a (n+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m\\<ge>s.\n       \\<exists>n\\<ge>m.\n          d (n + 1) powr 2 ^ (n + 1) *\n          (\\<Prod>j = 1..n. real_of_int (a j)) *\n          (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j)))\n          \\<le> real_of_int (a (n + 1))", "proof (intro strip)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       s \\<le> m \\<Longrightarrow>\n       \\<exists>n\\<ge>m.\n          d (n + 1) powr 2 ^ (n + 1) *\n          (\\<Prod>j = 1..n. real_of_int (a j)) *\n          (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j)))\n          \\<le> real_of_int (a (n + 1))", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       s \\<le> m \\<Longrightarrow>\n       \\<exists>n\\<ge>m.\n          d (n + 1) powr 2 ^ (n + 1) *\n          (\\<Prod>j = 1..n. real_of_int (a j)) *\n          (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j)))\n          \\<le> real_of_int (a (n + 1))", "assume \"s \\<le> m\""], ["proof (state)\nthis:\n  s \\<le> m\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       s \\<le> m \\<Longrightarrow>\n       \\<exists>n\\<ge>m.\n          d (n + 1) powr 2 ^ (n + 1) *\n          (\\<Prod>j = 1..n. real_of_int (a j)) *\n          (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j)))\n          \\<le> real_of_int (a (n + 1))", "from 9[rule_format,OF this]"], ["proof (chain)\npicking this:\n  \\<exists>n\\<ge>m.\n     d (n + 1) *\n     (MAX j\\<in>{s..n}. real_of_int (a j) powr (1 / real_of_int (2 ^ j)))\n     \\<le> real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))", "obtain n where \"n\\<ge>m\" and asm_9:\"( (of_int (a (n+1))) powr(1 /of_int (2^(n+1))) \\<ge>\n          (d (n+1))* (Max ( ( \\<lambda> (j::nat). (of_int (a j)) powr(1 /of_int (2^j))) ` {s..n} )))\""], ["proof (prove)\nusing this:\n  \\<exists>n\\<ge>m.\n     d (n + 1) *\n     (MAX j\\<in>{s..n}. real_of_int (a j) powr (1 / real_of_int (2 ^ j)))\n     \\<le> real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>m \\<le> n;\n         d (n + 1) *\n         (MAX j\\<in>{s..n}.\n             real_of_int (a j) powr (1 / real_of_int (2 ^ j)))\n         \\<le> real_of_int (a (n + 1)) powr\n               (1 / real_of_int (2 ^ (n + 1)))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  m \\<le> n\n  d (n + 1) *\n  (MAX j\\<in>{s..n}. real_of_int (a j) powr (1 / real_of_int (2 ^ j)))\n  \\<le> real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       s \\<le> m \\<Longrightarrow>\n       \\<exists>n\\<ge>m.\n          d (n + 1) powr 2 ^ (n + 1) *\n          (\\<Prod>j = 1..n. real_of_int (a j)) *\n          (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j)))\n          \\<le> real_of_int (a (n + 1))", "with \\<open>s\\<le>m\\<close>"], ["proof (chain)\npicking this:\n  s \\<le> m\n  m \\<le> n\n  d (n + 1) *\n  (MAX j\\<in>{s..n}. real_of_int (a j) powr (1 / real_of_int (2 ^ j)))\n  \\<le> real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))", "have \"s\\<le>n\""], ["proof (prove)\nusing this:\n  s \\<le> m\n  m \\<le> n\n  d (n + 1) *\n  (MAX j\\<in>{s..n}. real_of_int (a j) powr (1 / real_of_int (2 ^ j)))\n  \\<le> real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))\n\ngoal (1 subgoal):\n 1. s \\<le> n", "by auto"], ["proof (state)\nthis:\n  s \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       s \\<le> m \\<Longrightarrow>\n       \\<exists>n\\<ge>m.\n          d (n + 1) powr 2 ^ (n + 1) *\n          (\\<Prod>j = 1..n. real_of_int (a j)) *\n          (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j)))\n          \\<le> real_of_int (a (n + 1))", "define M where \"M \\<equiv> \\<lambda>s. MAX j\\<in>{s..n}. a j powr (1 / real_of_int (2 ^ j))\""], ["proof (state)\nthis:\n  M \\<equiv>\n  \\<lambda>s.\n     MAX j\\<in>{s..n}. real_of_int (a j) powr (1 / real_of_int (2 ^ j))\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       s \\<le> m \\<Longrightarrow>\n       \\<exists>n\\<ge>m.\n          d (n + 1) powr 2 ^ (n + 1) *\n          (\\<Prod>j = 1..n. real_of_int (a j)) *\n          (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j)))\n          \\<le> real_of_int (a (n + 1))", "have prod: \"(\\<Prod>j=1..n. real_of_int (a j)) * (1 / (\\<Prod>j=1..s-1. of_int(a j)))\n            = (\\<Prod>j=s..n. of_int( a j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>j = 1..n. real_of_int (a j)) *\n    (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j))) =\n    (\\<Prod>j = s..n. real_of_int (a j))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Prod>j = 1..n. real_of_int (a j)) *\n    (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j))) =\n    (\\<Prod>j = s..n. real_of_int (a j))", "define f where \"f= (\\<lambda>j. real_of_int( a j))\""], ["proof (state)\nthis:\n  f = (\\<lambda>j. real_of_int (a j))\n\ngoal (1 subgoal):\n 1. (\\<Prod>j = 1..n. real_of_int (a j)) *\n    (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j))) =\n    (\\<Prod>j = s..n. real_of_int (a j))", "have \"{Suc 0..n}= {Suc 0..s - Suc 0} \\<union> {s..n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {Suc 0..n} = {Suc 0..s - Suc 0} \\<union> {s..n}", "using \\<open>n\\<ge>s\\<close>  \\<open>s >0\\<close>"], ["proof (prove)\nusing this:\n  s \\<le> n\n  0 < s\n\ngoal (1 subgoal):\n 1. {Suc 0..n} = {Suc 0..s - Suc 0} \\<union> {s..n}", "by auto"], ["proof (state)\nthis:\n  {Suc 0..n} = {Suc 0..s - Suc 0} \\<union> {s..n}\n\ngoal (1 subgoal):\n 1. (\\<Prod>j = 1..n. real_of_int (a j)) *\n    (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j))) =\n    (\\<Prod>j = s..n. real_of_int (a j))", "then"], ["proof (chain)\npicking this:\n  {Suc 0..n} = {Suc 0..s - Suc 0} \\<union> {s..n}", "have \"(\\<Prod>j=1..n. f j) = (\\<Prod>j=1..s-1. f j) * (\\<Prod>j=s..n. f j)\""], ["proof (prove)\nusing this:\n  {Suc 0..n} = {Suc 0..s - Suc 0} \\<union> {s..n}\n\ngoal (1 subgoal):\n 1. prod f {1..n} = prod f {1..s - 1} * prod f {s..n}", "apply (subst prod.union_disjoint[symmetric])"], ["proof (prove)\ngoal (4 subgoals):\n 1. {Suc 0..n} = {Suc 0..s - Suc 0} \\<union> {s..n} \\<Longrightarrow>\n    finite {1..s - 1}\n 2. {Suc 0..n} = {Suc 0..s - Suc 0} \\<union> {s..n} \\<Longrightarrow>\n    finite {s..n}\n 3. {Suc 0..n} = {Suc 0..s - Suc 0} \\<union> {s..n} \\<Longrightarrow>\n    {1..s - 1} \\<inter> {s..n} = {}\n 4. {Suc 0..n} = {Suc 0..s - Suc 0} \\<union> {s..n} \\<Longrightarrow>\n    prod f {1..n} = prod f ({1..s - 1} \\<union> {s..n})", "by auto"], ["proof (state)\nthis:\n  prod f {1..n} = prod f {1..s - 1} * prod f {s..n}\n\ngoal (1 subgoal):\n 1. (\\<Prod>j = 1..n. real_of_int (a j)) *\n    (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j))) =\n    (\\<Prod>j = s..n. real_of_int (a j))", "moreover"], ["proof (state)\nthis:\n  prod f {1..n} = prod f {1..s - 1} * prod f {s..n}\n\ngoal (1 subgoal):\n 1. (\\<Prod>j = 1..n. real_of_int (a j)) *\n    (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j))) =\n    (\\<Prod>j = s..n. real_of_int (a j))", "have \"(\\<Prod>j=1..s-1. f j) > 0 \""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < prod f {1..s - 1}", "by (metis a f_def of_int_0_less_iff prod_pos)"], ["proof (state)\nthis:\n  0 < prod f {1..s - 1}\n\ngoal (1 subgoal):\n 1. (\\<Prod>j = 1..n. real_of_int (a j)) *\n    (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j))) =\n    (\\<Prod>j = s..n. real_of_int (a j))", "then"], ["proof (chain)\npicking this:\n  0 < prod f {1..s - 1}", "have \"(\\<Prod>j=1..s-1. f j) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  0 < prod f {1..s - 1}\n\ngoal (1 subgoal):\n 1. prod f {1..s - 1} \\<noteq> 0", "by argo"], ["proof (state)\nthis:\n  prod f {1..s - 1} \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<Prod>j = 1..n. real_of_int (a j)) *\n    (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j))) =\n    (\\<Prod>j = s..n. real_of_int (a j))", "ultimately"], ["proof (chain)\npicking this:\n  prod f {1..n} = prod f {1..s - 1} * prod f {s..n}\n  prod f {1..s - 1} \\<noteq> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  prod f {1..n} = prod f {1..s - 1} * prod f {s..n}\n  prod f {1..s - 1} \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<Prod>j = 1..n. real_of_int (a j)) *\n    (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j))) =\n    (\\<Prod>j = s..n. real_of_int (a j))", "unfolding f_def"], ["proof (prove)\nusing this:\n  (\\<Prod>j = 1..n. real_of_int (a j)) =\n  (\\<Prod>j = 1..s - 1. real_of_int (a j)) *\n  (\\<Prod>j = s..n. real_of_int (a j))\n  (\\<Prod>j = 1..s - 1. real_of_int (a j)) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<Prod>j = 1..n. real_of_int (a j)) *\n    (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j))) =\n    (\\<Prod>j = s..n. real_of_int (a j))", "by auto"], ["proof (state)\nthis:\n  (\\<Prod>j = 1..n. real_of_int (a j)) *\n  (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j))) =\n  (\\<Prod>j = s..n. real_of_int (a j))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Prod>j = 1..n. real_of_int (a j)) *\n  (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j))) =\n  (\\<Prod>j = s..n. real_of_int (a j))\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       s \\<le> m \\<Longrightarrow>\n       \\<exists>n\\<ge>m.\n          d (n + 1) powr 2 ^ (n + 1) *\n          (\\<Prod>j = 1..n. real_of_int (a j)) *\n          (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j)))\n          \\<le> real_of_int (a (n + 1))", "then"], ["proof (chain)\npicking this:\n  (\\<Prod>j = 1..n. real_of_int (a j)) *\n  (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j))) =\n  (\\<Prod>j = s..n. real_of_int (a j))", "have \"d (n+1) powr 2 ^ (n+1) * (\\<Prod>j = 1..n. of_int (a j)) * (1 / (\\<Prod>j = 1..s - 1. of_int (a j))) =\n             d (n+1) powr 2 ^ (n+1) * (\\<Prod>j = s..n. of_int (a j))\""], ["proof (prove)\nusing this:\n  (\\<Prod>j = 1..n. real_of_int (a j)) *\n  (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j))) =\n  (\\<Prod>j = s..n. real_of_int (a j))\n\ngoal (1 subgoal):\n 1. d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n    (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j))) =\n    d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = s..n. real_of_int (a j))", "by (metis mult.assoc prod)"], ["proof (state)\nthis:\n  d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n  (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j))) =\n  d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = s..n. real_of_int (a j))\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       s \\<le> m \\<Longrightarrow>\n       \\<exists>n\\<ge>m.\n          d (n + 1) powr 2 ^ (n + 1) *\n          (\\<Prod>j = 1..n. real_of_int (a j)) *\n          (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j)))\n          \\<le> real_of_int (a (n + 1))", "also"], ["proof (state)\nthis:\n  d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n  (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j))) =\n  d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = s..n. real_of_int (a j))\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       s \\<le> m \\<Longrightarrow>\n       \\<exists>n\\<ge>m.\n          d (n + 1) powr 2 ^ (n + 1) *\n          (\\<Prod>j = 1..n. real_of_int (a j)) *\n          (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j)))\n          \\<le> real_of_int (a (n + 1))", "have\n    \"... \\<le> ((d (n+1))powr(2^(n+1) ) * (\\<Prod>i=s..n. M s powr(2^i)) )\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = s..n. real_of_int (a j))\n    \\<le> d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>i = s..n. M s powr 2 ^ i)", "proof (rule mult_left_mono)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<Prod>j = s..n. real_of_int (a j))\n    \\<le> (\\<Prod>i = s..n. M s powr 2 ^ i)\n 2. 0 \\<le> d (n + 1) powr 2 ^ (n + 1)", "show \"0 \\<le> (d (n + 1)) powr 2 ^ (n + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> d (n + 1) powr 2 ^ (n + 1)", "by auto"], ["proof (state)\nthis:\n  0 \\<le> d (n + 1) powr 2 ^ (n + 1)\n\ngoal (1 subgoal):\n 1. (\\<Prod>j = s..n. real_of_int (a j))\n    \\<le> (\\<Prod>i = s..n. M s powr 2 ^ i)", "show \"(\\<Prod>j = s..n. real_of_int (a j)) \\<le> (\\<Prod>i = s..n. M s powr 2 ^ i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>j = s..n. real_of_int (a j))\n    \\<le> (\\<Prod>i = s..n. M s powr 2 ^ i)", "proof (intro prod_mono conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i. i \\<in> {s..n} \\<Longrightarrow> 0 \\<le> real_of_int (a i)\n 2. \\<And>i.\n       i \\<in> {s..n} \\<Longrightarrow>\n       real_of_int (a i) \\<le> M s powr 2 ^ i", "fix i"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i. i \\<in> {s..n} \\<Longrightarrow> 0 \\<le> real_of_int (a i)\n 2. \\<And>i.\n       i \\<in> {s..n} \\<Longrightarrow>\n       real_of_int (a i) \\<le> M s powr 2 ^ i", "assume i: \"i \\<in> {s..n}\""], ["proof (state)\nthis:\n  i \\<in> {s..n}\n\ngoal (2 subgoals):\n 1. \\<And>i. i \\<in> {s..n} \\<Longrightarrow> 0 \\<le> real_of_int (a i)\n 2. \\<And>i.\n       i \\<in> {s..n} \\<Longrightarrow>\n       real_of_int (a i) \\<le> M s powr 2 ^ i", "have \"a i = (a i powr (1 / real_of_int (2 ^ i))) powr 2 ^ i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int (a i) =\n    (real_of_int (a i) powr (1 / real_of_int (2 ^ i))) powr 2 ^ i", "unfolding powr_powr"], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int (a i) =\n    real_of_int (a i) powr (1 / real_of_int (2 ^ i) * 2 ^ i)", "by (simp add: a less_eq_real_def)"], ["proof (state)\nthis:\n  real_of_int (a i) =\n  (real_of_int (a i) powr (1 / real_of_int (2 ^ i))) powr 2 ^ i\n\ngoal (2 subgoals):\n 1. \\<And>i. i \\<in> {s..n} \\<Longrightarrow> 0 \\<le> real_of_int (a i)\n 2. \\<And>i.\n       i \\<in> {s..n} \\<Longrightarrow>\n       real_of_int (a i) \\<le> M s powr 2 ^ i", "also"], ["proof (state)\nthis:\n  real_of_int (a i) =\n  (real_of_int (a i) powr (1 / real_of_int (2 ^ i))) powr 2 ^ i\n\ngoal (2 subgoals):\n 1. \\<And>i. i \\<in> {s..n} \\<Longrightarrow> 0 \\<le> real_of_int (a i)\n 2. \\<And>i.\n       i \\<in> {s..n} \\<Longrightarrow>\n       real_of_int (a i) \\<le> M s powr 2 ^ i", "have  \"\\<dots> \\<le> M s powr(2^i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (real_of_int (a i) powr (1 / real_of_int (2 ^ i))) powr 2 ^ i\n    \\<le> M s powr 2 ^ i", "unfolding M_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (real_of_int (a i) powr (1 / real_of_int (2 ^ i))) powr 2 ^ i\n    \\<le> (MAX j\\<in>{s..n}.\n              real_of_int (a j) powr (1 / real_of_int (2 ^ j))) powr\n          2 ^ i", "using i"], ["proof (prove)\nusing this:\n  i \\<in> {s..n}\n\ngoal (1 subgoal):\n 1. (real_of_int (a i) powr (1 / real_of_int (2 ^ i))) powr 2 ^ i\n    \\<le> (MAX j\\<in>{s..n}.\n              real_of_int (a j) powr (1 / real_of_int (2 ^ j))) powr\n          2 ^ i", "by (force intro: powr_mono2)"], ["proof (state)\nthis:\n  (real_of_int (a i) powr (1 / real_of_int (2 ^ i))) powr 2 ^ i\n  \\<le> M s powr 2 ^ i\n\ngoal (2 subgoals):\n 1. \\<And>i. i \\<in> {s..n} \\<Longrightarrow> 0 \\<le> real_of_int (a i)\n 2. \\<And>i.\n       i \\<in> {s..n} \\<Longrightarrow>\n       real_of_int (a i) \\<le> M s powr 2 ^ i", "finally"], ["proof (chain)\npicking this:\n  real_of_int (a i) \\<le> M s powr 2 ^ i", "show \"a i \\<le> M s powr 2 ^ i\""], ["proof (prove)\nusing this:\n  real_of_int (a i) \\<le> M s powr 2 ^ i\n\ngoal (1 subgoal):\n 1. real_of_int (a i) \\<le> M s powr 2 ^ i", "."], ["proof (state)\nthis:\n  real_of_int (a i) \\<le> M s powr 2 ^ i\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> {s..n} \\<Longrightarrow> 0 \\<le> real_of_int (a i)", "show \"\\<And>i. i \\<in> {s..n} \\<Longrightarrow> 0 \\<le> real_of_int (a i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> {s..n} \\<Longrightarrow> 0 \\<le> real_of_int (a i)", "by (meson a less_imp_le of_int_0_le_iff)"], ["proof (state)\nthis:\n  ?i \\<in> {s..n} \\<Longrightarrow> 0 \\<le> real_of_int (a ?i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Prod>j = s..n. real_of_int (a j))\n  \\<le> (\\<Prod>i = s..n. M s powr 2 ^ i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = s..n. real_of_int (a j))\n  \\<le> d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>i = s..n. M s powr 2 ^ i)\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       s \\<le> m \\<Longrightarrow>\n       \\<exists>n\\<ge>m.\n          d (n + 1) powr 2 ^ (n + 1) *\n          (\\<Prod>j = 1..n. real_of_int (a j)) *\n          (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j)))\n          \\<le> real_of_int (a (n + 1))", "also"], ["proof (state)\nthis:\n  d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = s..n. real_of_int (a j))\n  \\<le> d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>i = s..n. M s powr 2 ^ i)\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       s \\<le> m \\<Longrightarrow>\n       \\<exists>n\\<ge>m.\n          d (n + 1) powr 2 ^ (n + 1) *\n          (\\<Prod>j = 1..n. real_of_int (a j)) *\n          (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j)))\n          \\<le> real_of_int (a (n + 1))", "have \"... = d(n+1) powr (2^(n+1)) * M s powr (\\<Sum>i=s..n. 2^i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>i = s..n. M s powr 2 ^ i) =\n    d (n + 1) powr 2 ^ (n + 1) * M s powr sum ((^) 2) {s..n}", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>i = s..n. M s powr 2 ^ i) =\n    d (n + 1) powr 2 ^ (n + 1) * M s powr sum ((^) 2) {s..n}", "have  \"d (n+1) powr (2^(n+1)) \\<ge> 1  \""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> d (n + 1) powr 2 ^ (n + 1)", "by (metis Transcendental.log_one d le_powr_iff zero_le_numeral zero_le_power zero_less_one)"], ["proof (state)\nthis:\n  1 \\<le> d (n + 1) powr 2 ^ (n + 1)\n\ngoal (1 subgoal):\n 1. d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>i = s..n. M s powr 2 ^ i) =\n    d (n + 1) powr 2 ^ (n + 1) * M s powr sum ((^) 2) {s..n}", "moreover"], ["proof (state)\nthis:\n  1 \\<le> d (n + 1) powr 2 ^ (n + 1)\n\ngoal (1 subgoal):\n 1. d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>i = s..n. M s powr 2 ^ i) =\n    d (n + 1) powr 2 ^ (n + 1) * M s powr sum ((^) 2) {s..n}", "have \"(\\<Prod>i=s..n. M s powr(2^i)) = M s powr (\\<Sum>i=s..n. 2^i ) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>i = s..n. M s powr 2 ^ i) = M s powr sum ((^) 2) {s..n}", "using \\<open>s\\<le>n\\<close> powrfinitesum"], ["proof (prove)\nusing this:\n  s \\<le> n\n  ?s \\<le> ?n \\<Longrightarrow>\n  (\\<Prod>j = ?s..?n. ?a powr 2 ^ j) = ?a powr sum ((^) 2) {?s..?n}\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = s..n. M s powr 2 ^ i) = M s powr sum ((^) 2) {s..n}", "by auto"], ["proof (state)\nthis:\n  (\\<Prod>i = s..n. M s powr 2 ^ i) = M s powr sum ((^) 2) {s..n}\n\ngoal (1 subgoal):\n 1. d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>i = s..n. M s powr 2 ^ i) =\n    d (n + 1) powr 2 ^ (n + 1) * M s powr sum ((^) 2) {s..n}", "ultimately"], ["proof (chain)\npicking this:\n  1 \\<le> d (n + 1) powr 2 ^ (n + 1)\n  (\\<Prod>i = s..n. M s powr 2 ^ i) = M s powr sum ((^) 2) {s..n}", "show ?thesis"], ["proof (prove)\nusing this:\n  1 \\<le> d (n + 1) powr 2 ^ (n + 1)\n  (\\<Prod>i = s..n. M s powr 2 ^ i) = M s powr sum ((^) 2) {s..n}\n\ngoal (1 subgoal):\n 1. d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>i = s..n. M s powr 2 ^ i) =\n    d (n + 1) powr 2 ^ (n + 1) * M s powr sum ((^) 2) {s..n}", "by auto"], ["proof (state)\nthis:\n  d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>i = s..n. M s powr 2 ^ i) =\n  d (n + 1) powr 2 ^ (n + 1) * M s powr sum ((^) 2) {s..n}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>i = s..n. M s powr 2 ^ i) =\n  d (n + 1) powr 2 ^ (n + 1) * M s powr sum ((^) 2) {s..n}\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       s \\<le> m \\<Longrightarrow>\n       \\<exists>n\\<ge>m.\n          d (n + 1) powr 2 ^ (n + 1) *\n          (\\<Prod>j = 1..n. real_of_int (a j)) *\n          (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j)))\n          \\<le> real_of_int (a (n + 1))", "also"], ["proof (state)\nthis:\n  d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>i = s..n. M s powr 2 ^ i) =\n  d (n + 1) powr 2 ^ (n + 1) * M s powr sum ((^) 2) {s..n}\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       s \\<le> m \\<Longrightarrow>\n       \\<exists>n\\<ge>m.\n          d (n + 1) powr 2 ^ (n + 1) *\n          (\\<Prod>j = 1..n. real_of_int (a j)) *\n          (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j)))\n          \\<le> real_of_int (a (n + 1))", "have \"... \\<le> d (n + 1) powr 2 ^ (n + 1) * M s powr(2^(n+1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (n + 1) powr 2 ^ (n + 1) * M s powr sum ((^) 2) {s..n}\n    \\<le> d (n + 1) powr 2 ^ (n + 1) * M s powr 2 ^ (n + 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. d (n + 1) powr 2 ^ (n + 1) * M s powr sum ((^) 2) {s..n}\n    \\<le> d (n + 1) powr 2 ^ (n + 1) * M s powr 2 ^ (n + 1)", "have \"sum (power 2) {s..n} < (2::real) ^ (n + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum ((^) 2) {s..n} < 2 ^ (n + 1)", "using factt \\<open>s\\<le>n\\<close>"], ["proof (prove)\nusing this:\n  ?s \\<le> ?n \\<Longrightarrow> sum ((^) 2) {?s..?n} < 2 ^ (?n + 1)\n  s \\<le> n\n\ngoal (1 subgoal):\n 1. sum ((^) 2) {s..n} < 2 ^ (n + 1)", "by auto"], ["proof (state)\nthis:\n  sum ((^) 2) {s..n} < 2 ^ (n + 1)\n\ngoal (1 subgoal):\n 1. d (n + 1) powr 2 ^ (n + 1) * M s powr sum ((^) 2) {s..n}\n    \\<le> d (n + 1) powr 2 ^ (n + 1) * M s powr 2 ^ (n + 1)", "moreover"], ["proof (state)\nthis:\n  sum ((^) 2) {s..n} < 2 ^ (n + 1)\n\ngoal (1 subgoal):\n 1. d (n + 1) powr 2 ^ (n + 1) * M s powr sum ((^) 2) {s..n}\n    \\<le> d (n + 1) powr 2 ^ (n + 1) * M s powr 2 ^ (n + 1)", "have \"1 \\<le> M s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> M s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 \\<le> M s", "define S where \"S=(\\<lambda>(j::nat). ( of_int( a j) powr(1 /real_of_int (2^j)) )) ` {s..n  }\""], ["proof (state)\nthis:\n  S =\n  (\\<lambda>j. real_of_int (a j) powr (1 / real_of_int (2 ^ j))) ` {s..n}\n\ngoal (1 subgoal):\n 1. 1 \\<le> M s", "have \"finite S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite S", "unfolding S_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     ((\\<lambda>j. real_of_int (a j) powr (1 / real_of_int (2 ^ j))) `\n      {s..n})", "by auto"], ["proof (state)\nthis:\n  finite S\n\ngoal (1 subgoal):\n 1. 1 \\<le> M s", "moreover"], ["proof (state)\nthis:\n  finite S\n\ngoal (1 subgoal):\n 1. 1 \\<le> M s", "have \"S\\<noteq>{}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<noteq> {}", "unfolding S_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>j. real_of_int (a j) powr (1 / real_of_int (2 ^ j))) `\n    {s..n} \\<noteq>\n    {}", "using \\<open>s\\<le>n\\<close>"], ["proof (prove)\nusing this:\n  s \\<le> n\n\ngoal (1 subgoal):\n 1. (\\<lambda>j. real_of_int (a j) powr (1 / real_of_int (2 ^ j))) `\n    {s..n} \\<noteq>\n    {}", "by auto"], ["proof (state)\nthis:\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. 1 \\<le> M s", "moreover"], ["proof (state)\nthis:\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. 1 \\<le> M s", "have \"\\<exists>x\\<in>S. x\\<ge>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>S. 1 \\<le> x", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>S. 1 \\<le> x", "have \"a s powr (1 / (2^s)) \\<ge> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> real_of_int (a s) powr (1 / 2 ^ s)", "proof (rule ge_one_powr_ge_zero)"], ["proof (state)\ngoal (2 subgoals):\n 1. 1 \\<le> real_of_int (a s)\n 2. 0 \\<le> 1 / 2 ^ s", "show \"1 \\<le> real_of_int (a s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> real_of_int (a s)", "by (simp add: a int_one_le_iff_zero_less)"], ["proof (state)\nthis:\n  1 \\<le> real_of_int (a s)\n\ngoal (1 subgoal):\n 1. 0 \\<le> 1 / 2 ^ s", "qed auto"], ["proof (state)\nthis:\n  1 \\<le> real_of_int (a s) powr (1 / 2 ^ s)\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>S. 1 \\<le> x", "moreover"], ["proof (state)\nthis:\n  1 \\<le> real_of_int (a s) powr (1 / 2 ^ s)\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>S. 1 \\<le> x", "have \"of_int( a s) powr(1 /real_of_int (2^s)) \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int (a s) powr (1 / real_of_int (2 ^ s)) \\<in> S", "unfolding S_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int (a s) powr (1 / real_of_int (2 ^ s))\n    \\<in> (\\<lambda>j. real_of_int (a j) powr (1 / real_of_int (2 ^ j))) `\n          {s..n}", "using \\<open>s\\<le>n\\<close>"], ["proof (prove)\nusing this:\n  s \\<le> n\n\ngoal (1 subgoal):\n 1. real_of_int (a s) powr (1 / real_of_int (2 ^ s))\n    \\<in> (\\<lambda>j. real_of_int (a j) powr (1 / real_of_int (2 ^ j))) `\n          {s..n}", "by auto"], ["proof (state)\nthis:\n  real_of_int (a s) powr (1 / real_of_int (2 ^ s)) \\<in> S\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>S. 1 \\<le> x", "ultimately"], ["proof (chain)\npicking this:\n  1 \\<le> real_of_int (a s) powr (1 / 2 ^ s)\n  real_of_int (a s) powr (1 / real_of_int (2 ^ s)) \\<in> S", "show ?thesis"], ["proof (prove)\nusing this:\n  1 \\<le> real_of_int (a s) powr (1 / 2 ^ s)\n  real_of_int (a s) powr (1 / real_of_int (2 ^ s)) \\<in> S\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>S. 1 \\<le> x", "by auto"], ["proof (state)\nthis:\n  \\<exists>x\\<in>S. 1 \\<le> x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>x\\<in>S. 1 \\<le> x\n\ngoal (1 subgoal):\n 1. 1 \\<le> M s", "ultimately"], ["proof (chain)\npicking this:\n  finite S\n  S \\<noteq> {}\n  \\<exists>x\\<in>S. 1 \\<le> x", "show ?thesis"], ["proof (prove)\nusing this:\n  finite S\n  S \\<noteq> {}\n  \\<exists>x\\<in>S. 1 \\<le> x\n\ngoal (1 subgoal):\n 1. 1 \\<le> M s", "using Max_ge_iff[of S 1]"], ["proof (prove)\nusing this:\n  finite S\n  S \\<noteq> {}\n  \\<exists>x\\<in>S. 1 \\<le> x\n  \\<lbrakk>finite S; S \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> (1 \\<le> Max S) = (\\<exists>a\\<in>S. 1 \\<le> a)\n\ngoal (1 subgoal):\n 1. 1 \\<le> M s", "unfolding S_def M_def"], ["proof (prove)\nusing this:\n  finite\n   ((\\<lambda>j. real_of_int (a j) powr (1 / real_of_int (2 ^ j))) ` {s..n})\n  (\\<lambda>j. real_of_int (a j) powr (1 / real_of_int (2 ^ j))) `\n  {s..n} \\<noteq>\n  {}\n  \\<exists>x\\<in>(\\<lambda>j.\n                     real_of_int (a j) powr (1 / real_of_int (2 ^ j))) `\n                 {s..n}.\n     1 \\<le> x\n  \\<lbrakk>finite\n            ((\\<lambda>j.\n                 real_of_int (a j) powr (1 / real_of_int (2 ^ j))) `\n             {s..n});\n   (\\<lambda>j. real_of_int (a j) powr (1 / real_of_int (2 ^ j))) `\n   {s..n} \\<noteq>\n   {}\\<rbrakk>\n  \\<Longrightarrow> (1 \\<le> (MAX j\\<in>{s..n}.\n                                 real_of_int (a j) powr\n                                 (1 / real_of_int (2 ^ j)))) =\n                    (\\<exists>a\\<in>(\\<lambda>j.\n  real_of_int (a j) powr (1 / real_of_int (2 ^ j))) `\n                                    {s..n}.\n                        1 \\<le> a)\n\ngoal (1 subgoal):\n 1. 1 \\<le> (MAX j\\<in>{s..n}.\n                real_of_int (a j) powr (1 / real_of_int (2 ^ j)))", "by blast"], ["proof (state)\nthis:\n  1 \\<le> M s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  1 \\<le> M s\n\ngoal (1 subgoal):\n 1. d (n + 1) powr 2 ^ (n + 1) * M s powr sum ((^) 2) {s..n}\n    \\<le> d (n + 1) powr 2 ^ (n + 1) * M s powr 2 ^ (n + 1)", "moreover"], ["proof (state)\nthis:\n  1 \\<le> M s\n\ngoal (1 subgoal):\n 1. d (n + 1) powr 2 ^ (n + 1) * M s powr sum ((^) 2) {s..n}\n    \\<le> d (n + 1) powr 2 ^ (n + 1) * M s powr 2 ^ (n + 1)", "have \"0 \\<le> (d (n + 1)) powr 2 ^ (n + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> d (n + 1) powr 2 ^ (n + 1)", "by auto"], ["proof (state)\nthis:\n  0 \\<le> d (n + 1) powr 2 ^ (n + 1)\n\ngoal (1 subgoal):\n 1. d (n + 1) powr 2 ^ (n + 1) * M s powr sum ((^) 2) {s..n}\n    \\<le> d (n + 1) powr 2 ^ (n + 1) * M s powr 2 ^ (n + 1)", "ultimately"], ["proof (chain)\npicking this:\n  sum ((^) 2) {s..n} < 2 ^ (n + 1)\n  1 \\<le> M s\n  0 \\<le> d (n + 1) powr 2 ^ (n + 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  sum ((^) 2) {s..n} < 2 ^ (n + 1)\n  1 \\<le> M s\n  0 \\<le> d (n + 1) powr 2 ^ (n + 1)\n\ngoal (1 subgoal):\n 1. d (n + 1) powr 2 ^ (n + 1) * M s powr sum ((^) 2) {s..n}\n    \\<le> d (n + 1) powr 2 ^ (n + 1) * M s powr 2 ^ (n + 1)", "by (simp add: mult_left_mono powr_mono M_def)"], ["proof (state)\nthis:\n  d (n + 1) powr 2 ^ (n + 1) * M s powr sum ((^) 2) {s..n}\n  \\<le> d (n + 1) powr 2 ^ (n + 1) * M s powr 2 ^ (n + 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  d (n + 1) powr 2 ^ (n + 1) * M s powr sum ((^) 2) {s..n}\n  \\<le> d (n + 1) powr 2 ^ (n + 1) * M s powr 2 ^ (n + 1)\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       s \\<le> m \\<Longrightarrow>\n       \\<exists>n\\<ge>m.\n          d (n + 1) powr 2 ^ (n + 1) *\n          (\\<Prod>j = 1..n. real_of_int (a j)) *\n          (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j)))\n          \\<le> real_of_int (a (n + 1))", "also"], ["proof (state)\nthis:\n  d (n + 1) powr 2 ^ (n + 1) * M s powr sum ((^) 2) {s..n}\n  \\<le> d (n + 1) powr 2 ^ (n + 1) * M s powr 2 ^ (n + 1)\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       s \\<le> m \\<Longrightarrow>\n       \\<exists>n\\<ge>m.\n          d (n + 1) powr 2 ^ (n + 1) *\n          (\\<Prod>j = 1..n. real_of_int (a j)) *\n          (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j)))\n          \\<le> real_of_int (a (n + 1))", "have \"... =  (d (n+1) * M s) powr(2^(n+1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (n + 1) powr 2 ^ (n + 1) * M s powr 2 ^ (n + 1) =\n    (d (n + 1) * M s) powr 2 ^ (n + 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. d (n + 1) powr 2 ^ (n + 1) * M s powr 2 ^ (n + 1) =\n    (d (n + 1) * M s) powr 2 ^ (n + 1)", "have \"d (n + 1) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> d (n + 1)", "using d[of \"n+1\"]"], ["proof (prove)\nusing this:\n  1 < d (n + 1)\n\ngoal (1 subgoal):\n 1. 0 \\<le> d (n + 1)", "by argo"], ["proof (state)\nthis:\n  0 \\<le> d (n + 1)\n\ngoal (1 subgoal):\n 1. d (n + 1) powr 2 ^ (n + 1) * M s powr 2 ^ (n + 1) =\n    (d (n + 1) * M s) powr 2 ^ (n + 1)", "moreover"], ["proof (state)\nthis:\n  0 \\<le> d (n + 1)\n\ngoal (1 subgoal):\n 1. d (n + 1) powr 2 ^ (n + 1) * M s powr 2 ^ (n + 1) =\n    (d (n + 1) * M s) powr 2 ^ (n + 1)", "have \"M s \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> M s", "using \\<open>s\\<le>n\\<close>"], ["proof (prove)\nusing this:\n  s \\<le> n\n\ngoal (1 subgoal):\n 1. 0 \\<le> M s", "by (auto simp: M_def Max_ge_iff)"], ["proof (state)\nthis:\n  0 \\<le> M s\n\ngoal (1 subgoal):\n 1. d (n + 1) powr 2 ^ (n + 1) * M s powr 2 ^ (n + 1) =\n    (d (n + 1) * M s) powr 2 ^ (n + 1)", "ultimately"], ["proof (chain)\npicking this:\n  0 \\<le> d (n + 1)\n  0 \\<le> M s", "show ?thesis"], ["proof (prove)\nusing this:\n  0 \\<le> d (n + 1)\n  0 \\<le> M s\n\ngoal (1 subgoal):\n 1. d (n + 1) powr 2 ^ (n + 1) * M s powr 2 ^ (n + 1) =\n    (d (n + 1) * M s) powr 2 ^ (n + 1)", "unfolding M_def"], ["proof (prove)\nusing this:\n  0 \\<le> d (n + 1)\n  0 \\<le> (MAX j\\<in>{s..n}.\n              real_of_int (a j) powr (1 / real_of_int (2 ^ j)))\n\ngoal (1 subgoal):\n 1. d (n + 1) powr 2 ^ (n + 1) *\n    (MAX j\\<in>{s..n}.\n        real_of_int (a j) powr (1 / real_of_int (2 ^ j))) powr\n    2 ^ (n + 1) =\n    (d (n + 1) *\n     (MAX j\\<in>{s..n}.\n         real_of_int (a j) powr (1 / real_of_int (2 ^ j)))) powr\n    2 ^ (n + 1)", "using powr_mult"], ["proof (prove)\nusing this:\n  0 \\<le> d (n + 1)\n  0 \\<le> (MAX j\\<in>{s..n}.\n              real_of_int (a j) powr (1 / real_of_int (2 ^ j)))\n  \\<lbrakk>0 \\<le> ?x; 0 \\<le> ?y\\<rbrakk>\n  \\<Longrightarrow> (?x * ?y) powr ?a = ?x powr ?a * ?y powr ?a\n\ngoal (1 subgoal):\n 1. d (n + 1) powr 2 ^ (n + 1) *\n    (MAX j\\<in>{s..n}.\n        real_of_int (a j) powr (1 / real_of_int (2 ^ j))) powr\n    2 ^ (n + 1) =\n    (d (n + 1) *\n     (MAX j\\<in>{s..n}.\n         real_of_int (a j) powr (1 / real_of_int (2 ^ j)))) powr\n    2 ^ (n + 1)", "by auto"], ["proof (state)\nthis:\n  d (n + 1) powr 2 ^ (n + 1) * M s powr 2 ^ (n + 1) =\n  (d (n + 1) * M s) powr 2 ^ (n + 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  d (n + 1) powr 2 ^ (n + 1) * M s powr 2 ^ (n + 1) =\n  (d (n + 1) * M s) powr 2 ^ (n + 1)\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       s \\<le> m \\<Longrightarrow>\n       \\<exists>n\\<ge>m.\n          d (n + 1) powr 2 ^ (n + 1) *\n          (\\<Prod>j = 1..n. real_of_int (a j)) *\n          (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j)))\n          \\<le> real_of_int (a (n + 1))", "also"], ["proof (state)\nthis:\n  d (n + 1) powr 2 ^ (n + 1) * M s powr 2 ^ (n + 1) =\n  (d (n + 1) * M s) powr 2 ^ (n + 1)\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       s \\<le> m \\<Longrightarrow>\n       \\<exists>n\\<ge>m.\n          d (n + 1) powr 2 ^ (n + 1) *\n          (\\<Prod>j = 1..n. real_of_int (a j)) *\n          (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j)))\n          \\<le> real_of_int (a (n + 1))", "have \"... \\<le> (real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))) powr 2 ^ (n + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (d (n + 1) * M s) powr 2 ^ (n + 1)\n    \\<le> (real_of_int (a (n + 1)) powr\n           (1 / real_of_int (2 ^ (n + 1)))) powr\n          2 ^ (n + 1)", "proof (rule powr_mono2)"], ["proof (state)\ngoal (3 subgoals):\n 1. 0 \\<le> 2 ^ (n + 1)\n 2. 0 \\<le> d (n + 1) * M s\n 3. d (n + 1) * M s\n    \\<le> real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))", "have \"M s \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> M s", "using \\<open>s\\<le>n\\<close>"], ["proof (prove)\nusing this:\n  s \\<le> n\n\ngoal (1 subgoal):\n 1. 0 \\<le> M s", "by (auto simp: M_def Max_ge_iff)"], ["proof (state)\nthis:\n  0 \\<le> M s\n\ngoal (3 subgoals):\n 1. 0 \\<le> 2 ^ (n + 1)\n 2. 0 \\<le> d (n + 1) * M s\n 3. d (n + 1) * M s\n    \\<le> real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))", "moreover"], ["proof (state)\nthis:\n  0 \\<le> M s\n\ngoal (3 subgoals):\n 1. 0 \\<le> 2 ^ (n + 1)\n 2. 0 \\<le> d (n + 1) * M s\n 3. d (n + 1) * M s\n    \\<le> real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))", "have \"d (n + 1) \\<ge>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> d (n + 1)", "using d[of \"n+1\"]"], ["proof (prove)\nusing this:\n  1 < d (n + 1)\n\ngoal (1 subgoal):\n 1. 0 \\<le> d (n + 1)", "by argo"], ["proof (state)\nthis:\n  0 \\<le> d (n + 1)\n\ngoal (3 subgoals):\n 1. 0 \\<le> 2 ^ (n + 1)\n 2. 0 \\<le> d (n + 1) * M s\n 3. d (n + 1) * M s\n    \\<le> real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))", "ultimately"], ["proof (chain)\npicking this:\n  0 \\<le> M s\n  0 \\<le> d (n + 1)", "show \"0 \\<le> (d (n + 1)) * M s\""], ["proof (prove)\nusing this:\n  0 \\<le> M s\n  0 \\<le> d (n + 1)\n\ngoal (1 subgoal):\n 1. 0 \\<le> d (n + 1) * M s", "by auto"], ["proof (state)\nthis:\n  0 \\<le> d (n + 1) * M s\n\ngoal (2 subgoals):\n 1. 0 \\<le> 2 ^ (n + 1)\n 2. d (n + 1) * M s\n    \\<le> real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))", "show \"(d (n + 1)) * M s \\<le> real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (n + 1) * M s\n    \\<le> real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))", "using M_def asm_9"], ["proof (prove)\nusing this:\n  M \\<equiv>\n  \\<lambda>s.\n     MAX j\\<in>{s..n}. real_of_int (a j) powr (1 / real_of_int (2 ^ j))\n  d (n + 1) *\n  (MAX j\\<in>{s..n}. real_of_int (a j) powr (1 / real_of_int (2 ^ j)))\n  \\<le> real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))\n\ngoal (1 subgoal):\n 1. d (n + 1) * M s\n    \\<le> real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))", "by presburger"], ["proof (state)\nthis:\n  d (n + 1) * M s\n  \\<le> real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))\n\ngoal (1 subgoal):\n 1. 0 \\<le> 2 ^ (n + 1)", "qed simp"], ["proof (state)\nthis:\n  (d (n + 1) * M s) powr 2 ^ (n + 1)\n  \\<le> (real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))) powr\n        2 ^ (n + 1)\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       s \\<le> m \\<Longrightarrow>\n       \\<exists>n\\<ge>m.\n          d (n + 1) powr 2 ^ (n + 1) *\n          (\\<Prod>j = 1..n. real_of_int (a j)) *\n          (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j)))\n          \\<le> real_of_int (a (n + 1))", "also"], ["proof (state)\nthis:\n  (d (n + 1) * M s) powr 2 ^ (n + 1)\n  \\<le> (real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))) powr\n        2 ^ (n + 1)\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       s \\<le> m \\<Longrightarrow>\n       \\<exists>n\\<ge>m.\n          d (n + 1) powr 2 ^ (n + 1) *\n          (\\<Prod>j = 1..n. real_of_int (a j)) *\n          (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j)))\n          \\<le> real_of_int (a (n + 1))", "have \"... =  (of_int (a (n+1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))) powr\n    2 ^ (n + 1) =\n    real_of_int (a (n + 1))", "by (simp add: a less_eq_real_def pos_add_strict powr_powr)"], ["proof (state)\nthis:\n  (real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))) powr\n  2 ^ (n + 1) =\n  real_of_int (a (n + 1))\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       s \\<le> m \\<Longrightarrow>\n       \\<exists>n\\<ge>m.\n          d (n + 1) powr 2 ^ (n + 1) *\n          (\\<Prod>j = 1..n. real_of_int (a j)) *\n          (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j)))\n          \\<le> real_of_int (a (n + 1))", "finally"], ["proof (chain)\npicking this:\n  d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n  (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j)))\n  \\<le> real_of_int (a (n + 1))", "show \"\\<exists>n\\<ge>m. d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n                (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j)))\n                \\<le> real_of_int (a (n + 1))\""], ["proof (prove)\nusing this:\n  d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n  (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j)))\n  \\<le> real_of_int (a (n + 1))\n\ngoal (1 subgoal):\n 1. \\<exists>n\\<ge>m.\n       d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n       (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j)))\n       \\<le> real_of_int (a (n + 1))", "using \\<open>n\\<ge>m\\<close> \\<open>m\\<ge>s\\<close>"], ["proof (prove)\nusing this:\n  d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n  (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j)))\n  \\<le> real_of_int (a (n + 1))\n  m \\<le> n\n  s \\<le> m\n\ngoal (1 subgoal):\n 1. \\<exists>n\\<ge>m.\n       d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n       (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j)))\n       \\<le> real_of_int (a (n + 1))", "by force"], ["proof (state)\nthis:\n  \\<exists>n\\<ge>m.\n     d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n     (1 / (\\<Prod>j = 1..s - 1. real_of_int (a j)))\n     \\<le> real_of_int (a (n + 1))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lasttoshow:\n  fixes d ::\"nat\\<Rightarrow>real \" and a b ::\"nat\\<Rightarrow>int \" and q::int and s::nat\n  assumes d: \"\\<forall>n. d n> 1\"\n     and a:\"\\<forall>n. a n>0\" and \"s>0\" and \"q>0\"  \n    and \"A > 1\" and b:\"\\<forall>n. b n>0\" and 9:\n    \"\\<forall>m\\<ge>s. \\<exists>n\\<ge>m. ((of_int (a (n+1))) powr(1 /of_int (2^(n+1))) \\<ge>\n          (d (n+1))* (Max ((\\<lambda>(j::nat). (of_int (a j)) powr(1 /of_int (2^j))) ` {s..n} )))\"\n    and assu3: \"filterlim( \\<lambda> n. (d n)^(2^n)/ b n) at_top sequentially \"\n    and 5: \"\\<forall>\\<^sub>F n in sequentially. (\\<Sum>j. (b (n + j)) /  (a (n + j))) \\<le> 2 * b n / a n\"\n  shows \"\\<exists>n. q*((\\<Prod>j=1..n. real_of_int(a j))) * suminf (\\<lambda>(j::nat). (b (j+n+1)/ a (j+n+1)))<1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n.\n       real_of_int q * (\\<Prod>j = 1..n. real_of_int (a j)) *\n       (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n       < 1", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>n.\n       real_of_int q * (\\<Prod>j = 1..n. real_of_int (a j)) *\n       (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n       < 1", "define as where \"as=(\\<Prod>j = 1..s - 1. real_of_int (a j))\""], ["proof (state)\nthis:\n  as = (\\<Prod>j = 1..s - 1. real_of_int (a j))\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       real_of_int q * (\\<Prod>j = 1..n. real_of_int (a j)) *\n       (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n       < 1", "obtain n where \"n\\<ge>s\" and n_def1:\"real_of_int q * as * 2 \n      * real_of_int (b (n + 1)) / d (n + 1) powr 2 ^ (n + 1) < 1\"\n    and n_def2:\"d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = 1..n. real_of_int (a j)) * (1 / as) \n          \\<le> real_of_int (a (n + 1))\"\n    and n_def3:\"(\\<Sum>j. (b (n+1 + j)) /  (a (n+1 + j))) \\<le> 2 * b (n+1) / a (n+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>s \\<le> n;\n         real_of_int q * as * 2 * real_of_int (b (n + 1)) /\n         d (n + 1) powr 2 ^ (n + 1)\n         < 1;\n         d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n         (1 / as)\n         \\<le> real_of_int (a (n + 1));\n         (\\<Sum>j.\n             real_of_int (b (n + 1 + j)) / real_of_int (a (n + 1 + j)))\n         \\<le> real_of_int (2 * b (n + 1)) /\n               real_of_int (a (n + 1))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>s \\<le> n;\n         real_of_int q * as * 2 * real_of_int (b (n + 1)) /\n         d (n + 1) powr 2 ^ (n + 1)\n         < 1;\n         d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n         (1 / as)\n         \\<le> real_of_int (a (n + 1));\n         (\\<Sum>j.\n             real_of_int (b (n + 1 + j)) / real_of_int (a (n + 1 + j)))\n         \\<le> real_of_int (2 * b (n + 1)) /\n               real_of_int (a (n + 1))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have *:\"(\\<lambda>n. real_of_int (b n) / d n ^ 2 ^ n) \\<longlonglongrightarrow> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. real_of_int (b n) / d n ^ 2 ^ n)\n    \\<longlonglongrightarrow> 0", "using tendsto_inverse_0_at_top[OF assu3]"], ["proof (prove)\nusing this:\n  (\\<lambda>x. inverse (d x ^ 2 ^ x / real_of_int (b x)))\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. real_of_int (b n) / d n ^ 2 ^ n)\n    \\<longlonglongrightarrow> 0", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>n. real_of_int (b n) / d n ^ 2 ^ n) \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>s \\<le> n;\n         real_of_int q * as * 2 * real_of_int (b (n + 1)) /\n         d (n + 1) powr 2 ^ (n + 1)\n         < 1;\n         d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n         (1 / as)\n         \\<le> real_of_int (a (n + 1));\n         (\\<Sum>j.\n             real_of_int (b (n + 1 + j)) / real_of_int (a (n + 1 + j)))\n         \\<le> real_of_int (2 * b (n + 1)) /\n               real_of_int (a (n + 1))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n. real_of_int (b n) / d n ^ 2 ^ n) \\<longlonglongrightarrow> 0", "have \"(\\<lambda>n. real_of_int (b n) / d n powr 2 ^ n) \\<longlonglongrightarrow> 0\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. real_of_int (b n) / d n ^ 2 ^ n) \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. real_of_int (b n) / d n powr 2 ^ n)\n    \\<longlonglongrightarrow> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>n. real_of_int (b n) / d n ^ 2 ^ n)\n    \\<longlonglongrightarrow> 0 \\<Longrightarrow>\n    (\\<lambda>n. real_of_int (b n) / d n powr 2 ^ n)\n    \\<longlonglongrightarrow> 0", "have \"d n ^ 2 ^ n = d n powr (of_nat (2 ^ n))\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. d n ^ 2 ^ n = d n powr real (2 ^ n)", "by (metis d le_less_trans powr_realpow zero_le_one)"], ["proof (state)\nthis:\n  d ?n ^ 2 ^ ?n = d ?n powr real (2 ^ ?n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. real_of_int (b n) / d n ^ 2 ^ n)\n    \\<longlonglongrightarrow> 0 \\<Longrightarrow>\n    (\\<lambda>n. real_of_int (b n) / d n powr 2 ^ n)\n    \\<longlonglongrightarrow> 0", "then"], ["proof (chain)\npicking this:\n  d ?n ^ 2 ^ ?n = d ?n powr real (2 ^ ?n)", "show ?thesis"], ["proof (prove)\nusing this:\n  d ?n ^ 2 ^ ?n = d ?n powr real (2 ^ ?n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. real_of_int (b n) / d n powr 2 ^ n)\n    \\<longlonglongrightarrow> 0", "using *"], ["proof (prove)\nusing this:\n  d ?n ^ 2 ^ ?n = d ?n powr real (2 ^ ?n)\n  (\\<lambda>n. real_of_int (b n) / d n ^ 2 ^ n) \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. real_of_int (b n) / d n powr 2 ^ n)\n    \\<longlonglongrightarrow> 0", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>n. real_of_int (b n) / d n powr 2 ^ n)\n  \\<longlonglongrightarrow> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>n. real_of_int (b n) / d n powr 2 ^ n)\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>s \\<le> n;\n         real_of_int q * as * 2 * real_of_int (b (n + 1)) /\n         d (n + 1) powr 2 ^ (n + 1)\n         < 1;\n         d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n         (1 / as)\n         \\<le> real_of_int (a (n + 1));\n         (\\<Sum>j.\n             real_of_int (b (n + 1 + j)) / real_of_int (a (n + 1 + j)))\n         \\<le> real_of_int (2 * b (n + 1)) /\n               real_of_int (a (n + 1))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from tendsto_mult_right_zero[OF this,of \"q * as * 2\"]"], ["proof (chain)\npicking this:\n  (\\<lambda>x.\n      real_of_int q * as * 2 * (real_of_int (b x) / d x powr 2 ^ x))\n  \\<longlonglongrightarrow> 0", "have \"(\\<lambda>n. q * as * 2 * b n / d n powr 2 ^ n) \\<longlonglongrightarrow> 0\""], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      real_of_int q * as * 2 * (real_of_int (b x) / d x powr 2 ^ x))\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        real_of_int q * as * 2 * real_of_int (b n) / d n powr 2 ^ n)\n    \\<longlonglongrightarrow> 0", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>n. real_of_int q * as * 2 * real_of_int (b n) / d n powr 2 ^ n)\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>s \\<le> n;\n         real_of_int q * as * 2 * real_of_int (b (n + 1)) /\n         d (n + 1) powr 2 ^ (n + 1)\n         < 1;\n         d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n         (1 / as)\n         \\<le> real_of_int (a (n + 1));\n         (\\<Sum>j.\n             real_of_int (b (n + 1 + j)) / real_of_int (a (n + 1 + j)))\n         \\<le> real_of_int (2 * b (n + 1)) /\n               real_of_int (a (n + 1))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n. real_of_int q * as * 2 * real_of_int (b n) / d n powr 2 ^ n)\n  \\<longlonglongrightarrow> 0", "have \"\\<forall>\\<^sub>F n in sequentially. q * as * 2 * b n / d n powr 2 ^ n < 1\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. real_of_int q * as * 2 * real_of_int (b n) / d n powr 2 ^ n)\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       real_of_int q * as * 2 * real_of_int (b n) / d n powr 2 ^ n < 1", "by (elim order_tendstoD) simp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     real_of_int q * as * 2 * real_of_int (b n) / d n powr 2 ^ n < 1\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>s \\<le> n;\n         real_of_int q * as * 2 * real_of_int (b (n + 1)) /\n         d (n + 1) powr 2 ^ (n + 1)\n         < 1;\n         d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n         (1 / as)\n         \\<le> real_of_int (a (n + 1));\n         (\\<Sum>j.\n             real_of_int (b (n + 1 + j)) / real_of_int (a (n + 1 + j)))\n         \\<le> real_of_int (2 * b (n + 1)) /\n               real_of_int (a (n + 1))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F n in sequentially.\n     real_of_int q * as * 2 * real_of_int (b n) / d n powr 2 ^ n < 1", "have \"\\<forall>\\<^sub>F n in sequentially. q * as * 2 * b n / d n powr 2 ^ n < 1 \n                  \\<and> (\\<Sum>j. (b (n + j)) /  (a (n + j))) \\<le> 2 * b n / a n\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially.\n     real_of_int q * as * 2 * real_of_int (b n) / d n powr 2 ^ n < 1\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       real_of_int q * as * 2 * real_of_int (b n) / d n powr 2 ^ n\n       < 1 \\<and>\n       (\\<Sum>j. real_of_int (b (n + j)) / real_of_int (a (n + j)))\n       \\<le> real_of_int (2 * b n) / real_of_int (a n)", "using 5"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially.\n     real_of_int q * as * 2 * real_of_int (b n) / d n powr 2 ^ n < 1\n  \\<forall>\\<^sub>F n in sequentially.\n     (\\<Sum>j. real_of_int (b (n + j)) / real_of_int (a (n + j)))\n     \\<le> real_of_int (2 * b n) / real_of_int (a n)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       real_of_int q * as * 2 * real_of_int (b n) / d n powr 2 ^ n\n       < 1 \\<and>\n       (\\<Sum>j. real_of_int (b (n + j)) / real_of_int (a (n + j)))\n       \\<le> real_of_int (2 * b n) / real_of_int (a n)", "by eventually_elim auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     real_of_int q * as * 2 * real_of_int (b n) / d n powr 2 ^ n < 1 \\<and>\n     (\\<Sum>j. real_of_int (b (n + j)) / real_of_int (a (n + j)))\n     \\<le> real_of_int (2 * b n) / real_of_int (a n)\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>s \\<le> n;\n         real_of_int q * as * 2 * real_of_int (b (n + 1)) /\n         d (n + 1) powr 2 ^ (n + 1)\n         < 1;\n         d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n         (1 / as)\n         \\<le> real_of_int (a (n + 1));\n         (\\<Sum>j.\n             real_of_int (b (n + 1 + j)) / real_of_int (a (n + 1 + j)))\n         \\<le> real_of_int (2 * b (n + 1)) /\n               real_of_int (a (n + 1))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F n in sequentially.\n     real_of_int q * as * 2 * real_of_int (b n) / d n powr 2 ^ n < 1 \\<and>\n     (\\<Sum>j. real_of_int (b (n + j)) / real_of_int (a (n + j)))\n     \\<le> real_of_int (2 * b n) / real_of_int (a n)", "obtain N where N_def:\"\\<forall>n\\<ge>N. q * as * 2 * b n / d n powr 2 ^ n < 1 \n            \\<and> (\\<Sum>j. (b (n + j)) /  (a (n + j))) \\<le> 2 * b n / a n\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially.\n     real_of_int q * as * 2 * real_of_int (b n) / d n powr 2 ^ n < 1 \\<and>\n     (\\<Sum>j. real_of_int (b (n + j)) / real_of_int (a (n + j)))\n     \\<le> real_of_int (2 * b n) / real_of_int (a n)\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<forall>n\\<ge>N.\n           real_of_int q * as * 2 * real_of_int (b n) / d n powr 2 ^ n\n           < 1 \\<and>\n           (\\<Sum>j. real_of_int (b (n + j)) / real_of_int (a (n + j)))\n           \\<le> real_of_int (2 * b n) / real_of_int (a n) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding eventually_sequentially"], ["proof (prove)\nusing this:\n  \\<exists>N.\n     \\<forall>n\\<ge>N.\n        real_of_int q * as * 2 * real_of_int (b n) / d n powr 2 ^ n\n        < 1 \\<and>\n        (\\<Sum>j. real_of_int (b (n + j)) / real_of_int (a (n + j)))\n        \\<le> real_of_int (2 * b n) / real_of_int (a n)\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<forall>n\\<ge>N.\n           real_of_int q * as * 2 * real_of_int (b n) / d n powr 2 ^ n\n           < 1 \\<and>\n           (\\<Sum>j. real_of_int (b (n + j)) / real_of_int (a (n + j)))\n           \\<le> real_of_int (2 * b n) / real_of_int (a n) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<forall>n\\<ge>N.\n     real_of_int q * as * 2 * real_of_int (b n) / d n powr 2 ^ n < 1 \\<and>\n     (\\<Sum>j. real_of_int (b (n + j)) / real_of_int (a (n + j)))\n     \\<le> real_of_int (2 * b n) / real_of_int (a n)\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>s \\<le> n;\n         real_of_int q * as * 2 * real_of_int (b (n + 1)) /\n         d (n + 1) powr 2 ^ (n + 1)\n         < 1;\n         d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n         (1 / as)\n         \\<le> real_of_int (a (n + 1));\n         (\\<Sum>j.\n             real_of_int (b (n + 1 + j)) / real_of_int (a (n + 1 + j)))\n         \\<le> real_of_int (2 * b (n + 1)) /\n               real_of_int (a (n + 1))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain n where \"n\\<ge>s\" and \"n\\<ge>N\" and n_def:\"d (n + 1) powr 2 ^ (n + 1) \n                * (\\<Prod>j = 1..n. of_int (a j)) * (1 / as) \\<le> real_of_int (a (n + 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>s \\<le> n; N \\<le> n;\n         d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n         (1 / as)\n         \\<le> real_of_int (a (n + 1))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using show10[OF d a \\<open>s>0\\<close> 9,folded as_def,rule_format,of \"max s N\"]"], ["proof (prove)\nusing this:\n  s \\<le> max s N \\<Longrightarrow>\n  \\<exists>n\\<ge>max s N.\n     d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n     (1 / as)\n     \\<le> real_of_int (a (n + 1))\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>s \\<le> n; N \\<le> n;\n         d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n         (1 / as)\n         \\<le> real_of_int (a (n + 1))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s \\<le> n\n  N \\<le> n\n  d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n  (1 / as)\n  \\<le> real_of_int (a (n + 1))\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>s \\<le> n;\n         real_of_int q * as * 2 * real_of_int (b (n + 1)) /\n         d (n + 1) powr 2 ^ (n + 1)\n         < 1;\n         d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n         (1 / as)\n         \\<le> real_of_int (a (n + 1));\n         (\\<Sum>j.\n             real_of_int (b (n + 1 + j)) / real_of_int (a (n + 1 + j)))\n         \\<le> real_of_int (2 * b (n + 1)) /\n               real_of_int (a (n + 1))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with N_def[rule_format, of \"n+1\"] that[of n]"], ["proof (chain)\npicking this:\n  N \\<le> n + 1 \\<Longrightarrow>\n  real_of_int q * as * 2 * real_of_int (b (n + 1)) /\n  d (n + 1) powr 2 ^ (n + 1)\n  < 1 \\<and>\n  (\\<Sum>j. real_of_int (b (n + 1 + j)) / real_of_int (a (n + 1 + j)))\n  \\<le> real_of_int (2 * b (n + 1)) / real_of_int (a (n + 1))\n  \\<lbrakk>s \\<le> n;\n   real_of_int q * as * 2 * real_of_int (b (n + 1)) /\n   d (n + 1) powr 2 ^ (n + 1)\n   < 1;\n   d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n   (1 / as)\n   \\<le> real_of_int (a (n + 1));\n   (\\<Sum>j. real_of_int (b (n + 1 + j)) / real_of_int (a (n + 1 + j)))\n   \\<le> real_of_int (2 * b (n + 1)) / real_of_int (a (n + 1))\\<rbrakk>\n  \\<Longrightarrow> thesis\n  s \\<le> n\n  N \\<le> n\n  d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n  (1 / as)\n  \\<le> real_of_int (a (n + 1))", "show ?thesis"], ["proof (prove)\nusing this:\n  N \\<le> n + 1 \\<Longrightarrow>\n  real_of_int q * as * 2 * real_of_int (b (n + 1)) /\n  d (n + 1) powr 2 ^ (n + 1)\n  < 1 \\<and>\n  (\\<Sum>j. real_of_int (b (n + 1 + j)) / real_of_int (a (n + 1 + j)))\n  \\<le> real_of_int (2 * b (n + 1)) / real_of_int (a (n + 1))\n  \\<lbrakk>s \\<le> n;\n   real_of_int q * as * 2 * real_of_int (b (n + 1)) /\n   d (n + 1) powr 2 ^ (n + 1)\n   < 1;\n   d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n   (1 / as)\n   \\<le> real_of_int (a (n + 1));\n   (\\<Sum>j. real_of_int (b (n + 1 + j)) / real_of_int (a (n + 1 + j)))\n   \\<le> real_of_int (2 * b (n + 1)) / real_of_int (a (n + 1))\\<rbrakk>\n  \\<Longrightarrow> thesis\n  s \\<le> n\n  N \\<le> n\n  d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n  (1 / as)\n  \\<le> real_of_int (a (n + 1))\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  s \\<le> n\n  real_of_int q * as * 2 * real_of_int (b (n + 1)) /\n  d (n + 1) powr 2 ^ (n + 1)\n  < 1\n  d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n  (1 / as)\n  \\<le> real_of_int (a (n + 1))\n  (\\<Sum>j. real_of_int (b (n + 1 + j)) / real_of_int (a (n + 1 + j)))\n  \\<le> real_of_int (2 * b (n + 1)) / real_of_int (a (n + 1))\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       real_of_int q * (\\<Prod>j = 1..n. real_of_int (a j)) *\n       (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n       < 1", "define pa where \"pa \\<equiv> (\\<Prod>j = 1..n. real_of_int (a j))\""], ["proof (state)\nthis:\n  pa \\<equiv> \\<Prod>j = 1..n. real_of_int (a j)\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       real_of_int q * (\\<Prod>j = 1..n. real_of_int (a j)) *\n       (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n       < 1", "define dn where \"dn \\<equiv> d (n + 1) powr 2 ^ (n + 1)\""], ["proof (state)\nthis:\n  dn \\<equiv> d (n + 1) powr 2 ^ (n + 1)\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       real_of_int q * (\\<Prod>j = 1..n. real_of_int (a j)) *\n       (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n       < 1", "have [simp]:\"dn >0\" \"as > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < dn &&& 0 < as", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < dn", "unfolding dn_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < d (n + 1) powr 2 ^ (n + 1)", "by (metis d not_le numeral_One powr_gt_zero zero_le_numeral)"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < as", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < as", "unfolding as_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < (\\<Prod>j = 1..s - 1. real_of_int (a j))", "by (simp add: a prod_pos)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  0 < dn\n  0 < as\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       real_of_int q * (\\<Prod>j = 1..n. real_of_int (a j)) *\n       (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n       < 1", "have [simp]:\"pa>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < pa", "unfolding pa_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < (\\<Prod>j = 1..n. real_of_int (a j))", "using a"], ["proof (prove)\nusing this:\n  \\<forall>n. 0 < a n\n\ngoal (1 subgoal):\n 1. 0 < (\\<Prod>j = 1..n. real_of_int (a j))", "by (simp add: prod_pos)"], ["proof (state)\nthis:\n  0 < pa\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       real_of_int q * (\\<Prod>j = 1..n. real_of_int (a j)) *\n       (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n       < 1", "have K: \"q* (\\<Prod>j=1..n. real_of_int (a j)) * suminf (\\<lambda> (j::nat). (b (j+n+1)/ a (j+n+1)))\n              \\<le>q* (\\<Prod>j=1..n. real_of_int (a j)) *2* (b (n+1))/(a( n+1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int q * (\\<Prod>j = 1..n. real_of_int (a j)) *\n    (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n    \\<le> real_of_int q * (\\<Prod>j = 1..n. real_of_int (a j)) * 2 *\n          real_of_int (b (n + 1)) /\n          real_of_int (a (n + 1))", "apply (fold pa_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int q * pa *\n    (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n    \\<le> real_of_int q * pa * 2 * real_of_int (b (n + 1)) /\n          real_of_int (a (n + 1))", "using mult_left_mono[OF n_def3,of \"real_of_int q * pa\"] \n      \\<open>n\\<ge>s\\<close> \\<open>pa>0\\<close> \\<open>q>0\\<close>"], ["proof (prove)\nusing this:\n  0 \\<le> real_of_int q * pa \\<Longrightarrow>\n  real_of_int q * pa *\n  (\\<Sum>j. real_of_int (b (n + 1 + j)) / real_of_int (a (n + 1 + j)))\n  \\<le> real_of_int q * pa *\n        (real_of_int (2 * b (n + 1)) / real_of_int (a (n + 1)))\n  s \\<le> n\n  0 < pa\n  0 < q\n\ngoal (1 subgoal):\n 1. real_of_int q * pa *\n    (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n    \\<le> real_of_int q * pa * 2 * real_of_int (b (n + 1)) /\n          real_of_int (a (n + 1))", "by (auto simp add:algebra_simps)"], ["proof (state)\nthis:\n  real_of_int q * (\\<Prod>j = 1..n. real_of_int (a j)) *\n  (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n  \\<le> real_of_int q * (\\<Prod>j = 1..n. real_of_int (a j)) * 2 *\n        real_of_int (b (n + 1)) /\n        real_of_int (a (n + 1))\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       real_of_int q * (\\<Prod>j = 1..n. real_of_int (a j)) *\n       (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n       < 1", "also"], ["proof (state)\nthis:\n  real_of_int q * (\\<Prod>j = 1..n. real_of_int (a j)) *\n  (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n  \\<le> real_of_int q * (\\<Prod>j = 1..n. real_of_int (a j)) * 2 *\n        real_of_int (b (n + 1)) /\n        real_of_int (a (n + 1))\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       real_of_int q * (\\<Prod>j = 1..n. real_of_int (a j)) *\n       (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n       < 1", "have KK:\"... \\<le> 2*q* (\\<Prod>j=1..n. real_of_int (a j)) * (b(n+1))*\n      ((\\<Prod>j=1..s-1. real_of_int( a j))/((d (n+1))powr(2^(n+1)) * (\\<Prod>j=1..n. real_of_int ( a j))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int q * (\\<Prod>j = 1..n. real_of_int (a j)) * 2 *\n    real_of_int (b (n + 1)) /\n    real_of_int (a (n + 1))\n    \\<le> real_of_int (2 * q) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n          real_of_int (b (n + 1)) *\n          ((\\<Prod>j = 1..s - 1. real_of_int (a j)) /\n           (d (n + 1) powr 2 ^ (n + 1) *\n            (\\<Prod>j = 1..n. real_of_int (a j))))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. real_of_int q * (\\<Prod>j = 1..n. real_of_int (a j)) * 2 *\n    real_of_int (b (n + 1)) /\n    real_of_int (a (n + 1))\n    \\<le> real_of_int (2 * q) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n          real_of_int (b (n + 1)) *\n          ((\\<Prod>j = 1..s - 1. real_of_int (a j)) /\n           (d (n + 1) powr 2 ^ (n + 1) *\n            (\\<Prod>j = 1..n. real_of_int (a j))))", "have \" dn * pa * (1 / as) \\<le> real_of_int (a (n + 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dn * pa * (1 / as) \\<le> real_of_int (a (n + 1))", "using n_def2"], ["proof (prove)\nusing this:\n  d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n  (1 / as)\n  \\<le> real_of_int (a (n + 1))\n\ngoal (1 subgoal):\n 1. dn * pa * (1 / as) \\<le> real_of_int (a (n + 1))", "unfolding dn_def pa_def"], ["proof (prove)\nusing this:\n  d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n  (1 / as)\n  \\<le> real_of_int (a (n + 1))\n\ngoal (1 subgoal):\n 1. d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n    (1 / as)\n    \\<le> real_of_int (a (n + 1))", "."], ["proof (state)\nthis:\n  dn * pa * (1 / as) \\<le> real_of_int (a (n + 1))\n\ngoal (1 subgoal):\n 1. real_of_int q * (\\<Prod>j = 1..n. real_of_int (a j)) * 2 *\n    real_of_int (b (n + 1)) /\n    real_of_int (a (n + 1))\n    \\<le> real_of_int (2 * q) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n          real_of_int (b (n + 1)) *\n          ((\\<Prod>j = 1..s - 1. real_of_int (a j)) /\n           (d (n + 1) powr 2 ^ (n + 1) *\n            (\\<Prod>j = 1..n. real_of_int (a j))))", "then"], ["proof (chain)\npicking this:\n  dn * pa * (1 / as) \\<le> real_of_int (a (n + 1))", "show ?thesis"], ["proof (prove)\nusing this:\n  dn * pa * (1 / as) \\<le> real_of_int (a (n + 1))\n\ngoal (1 subgoal):\n 1. real_of_int q * (\\<Prod>j = 1..n. real_of_int (a j)) * 2 *\n    real_of_int (b (n + 1)) /\n    real_of_int (a (n + 1))\n    \\<le> real_of_int (2 * q) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n          real_of_int (b (n + 1)) *\n          ((\\<Prod>j = 1..s - 1. real_of_int (a j)) /\n           (d (n + 1) powr 2 ^ (n + 1) *\n            (\\<Prod>j = 1..n. real_of_int (a j))))", "apply (fold pa_def dn_def as_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. dn * pa * (1 / as) \\<le> real_of_int (a (n + 1)) \\<Longrightarrow>\n    real_of_int q * pa * 2 * real_of_int (b (n + 1)) /\n    real_of_int (a (n + 1))\n    \\<le> real_of_int (2 * q) * pa * real_of_int (b (n + 1)) *\n          (as / (dn * pa))", "using \\<open>pa>0\\<close> \\<open>q>0\\<close> a[rule_format, of \"Suc n\"] b[rule_format, of \"Suc n\"]"], ["proof (prove)\nusing this:\n  0 < pa\n  0 < q\n  0 < a (Suc n)\n  0 < b (Suc n)\n\ngoal (1 subgoal):\n 1. dn * pa * (1 / as) \\<le> real_of_int (a (n + 1)) \\<Longrightarrow>\n    real_of_int q * pa * 2 * real_of_int (b (n + 1)) /\n    real_of_int (a (n + 1))\n    \\<le> real_of_int (2 * q) * pa * real_of_int (b (n + 1)) *\n          (as / (dn * pa))", "by (auto simp add: field_simps)"], ["proof (state)\nthis:\n  real_of_int q * (\\<Prod>j = 1..n. real_of_int (a j)) * 2 *\n  real_of_int (b (n + 1)) /\n  real_of_int (a (n + 1))\n  \\<le> real_of_int (2 * q) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n        real_of_int (b (n + 1)) *\n        ((\\<Prod>j = 1..s - 1. real_of_int (a j)) /\n         (d (n + 1) powr 2 ^ (n + 1) *\n          (\\<Prod>j = 1..n. real_of_int (a j))))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  real_of_int q * (\\<Prod>j = 1..n. real_of_int (a j)) * 2 *\n  real_of_int (b (n + 1)) /\n  real_of_int (a (n + 1))\n  \\<le> real_of_int (2 * q) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n        real_of_int (b (n + 1)) *\n        ((\\<Prod>j = 1..s - 1. real_of_int (a j)) /\n         (d (n + 1) powr 2 ^ (n + 1) *\n          (\\<Prod>j = 1..n. real_of_int (a j))))\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       real_of_int q * (\\<Prod>j = 1..n. real_of_int (a j)) *\n       (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n       < 1", "also"], ["proof (state)\nthis:\n  real_of_int q * (\\<Prod>j = 1..n. real_of_int (a j)) * 2 *\n  real_of_int (b (n + 1)) /\n  real_of_int (a (n + 1))\n  \\<le> real_of_int (2 * q) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n        real_of_int (b (n + 1)) *\n        ((\\<Prod>j = 1..s - 1. real_of_int (a j)) /\n         (d (n + 1) powr 2 ^ (n + 1) *\n          (\\<Prod>j = 1..n. real_of_int (a j))))\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       real_of_int q * (\\<Prod>j = 1..n. real_of_int (a j)) *\n       (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n       < 1", "have KKK: \"... = q * (\\<Prod>j=1..(s-1). real_of_int(a j)) * 2 * b (n+1) / d (n+1) powr 2^(n+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int (2 * q) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n    real_of_int (b (n + 1)) *\n    ((\\<Prod>j = 1..s - 1. real_of_int (a j)) /\n     (d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = 1..n. real_of_int (a j)))) =\n    real_of_int q * (\\<Prod>j = 1..s - 1. real_of_int (a j)) * 2 *\n    real_of_int (b (n + 1)) /\n    d (n + 1) powr 2 ^ (n + 1)", "apply (fold as_def pa_def dn_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int (2 * q) * pa * real_of_int (b (n + 1)) * (as / (dn * pa)) =\n    real_of_int q * as * 2 * real_of_int (b (n + 1)) / dn", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. pa = 0 \\<longrightarrow>\n    q = 0 \\<or> as = 0 \\<or> b (Suc n) = 0 \\<or> dn = 0", "using \\<open>0 < pa\\<close>"], ["proof (prove)\nusing this:\n  0 < pa\n\ngoal (1 subgoal):\n 1. pa = 0 \\<longrightarrow>\n    q = 0 \\<or> as = 0 \\<or> b (Suc n) = 0 \\<or> dn = 0", "by blast"], ["proof (state)\nthis:\n  real_of_int (2 * q) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n  real_of_int (b (n + 1)) *\n  ((\\<Prod>j = 1..s - 1. real_of_int (a j)) /\n   (d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = 1..n. real_of_int (a j)))) =\n  real_of_int q * (\\<Prod>j = 1..s - 1. real_of_int (a j)) * 2 *\n  real_of_int (b (n + 1)) /\n  d (n + 1) powr 2 ^ (n + 1)\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       real_of_int q * (\\<Prod>j = 1..n. real_of_int (a j)) *\n       (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n       < 1", "also"], ["proof (state)\nthis:\n  real_of_int (2 * q) * (\\<Prod>j = 1..n. real_of_int (a j)) *\n  real_of_int (b (n + 1)) *\n  ((\\<Prod>j = 1..s - 1. real_of_int (a j)) /\n   (d (n + 1) powr 2 ^ (n + 1) * (\\<Prod>j = 1..n. real_of_int (a j)))) =\n  real_of_int q * (\\<Prod>j = 1..s - 1. real_of_int (a j)) * 2 *\n  real_of_int (b (n + 1)) /\n  d (n + 1) powr 2 ^ (n + 1)\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       real_of_int q * (\\<Prod>j = 1..n. real_of_int (a j)) *\n       (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n       < 1", "have KKKK: \"... < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int q * (\\<Prod>j = 1..s - 1. real_of_int (a j)) * 2 *\n    real_of_int (b (n + 1)) /\n    d (n + 1) powr 2 ^ (n + 1)\n    < 1", "using n_def1"], ["proof (prove)\nusing this:\n  real_of_int q * as * 2 * real_of_int (b (n + 1)) /\n  d (n + 1) powr 2 ^ (n + 1)\n  < 1\n\ngoal (1 subgoal):\n 1. real_of_int q * (\\<Prod>j = 1..s - 1. real_of_int (a j)) * 2 *\n    real_of_int (b (n + 1)) /\n    d (n + 1) powr 2 ^ (n + 1)\n    < 1", "unfolding as_def"], ["proof (prove)\nusing this:\n  real_of_int q * (\\<Prod>j = 1..s - 1. real_of_int (a j)) * 2 *\n  real_of_int (b (n + 1)) /\n  d (n + 1) powr 2 ^ (n + 1)\n  < 1\n\ngoal (1 subgoal):\n 1. real_of_int q * (\\<Prod>j = 1..s - 1. real_of_int (a j)) * 2 *\n    real_of_int (b (n + 1)) /\n    d (n + 1) powr 2 ^ (n + 1)\n    < 1", "by simp"], ["proof (state)\nthis:\n  real_of_int q * (\\<Prod>j = 1..s - 1. real_of_int (a j)) * 2 *\n  real_of_int (b (n + 1)) /\n  d (n + 1) powr 2 ^ (n + 1)\n  < 1\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       real_of_int q * (\\<Prod>j = 1..n. real_of_int (a j)) *\n       (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n       < 1", "finally"], ["proof (chain)\npicking this:\n  real_of_int q * (\\<Prod>j = 1..n. real_of_int (a j)) *\n  (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n  < 1", "show ?thesis"], ["proof (prove)\nusing this:\n  real_of_int q * (\\<Prod>j = 1..n. real_of_int (a j)) *\n  (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n  < 1\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       real_of_int q * (\\<Prod>j = 1..n. real_of_int (a j)) *\n       (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n       < 1", "by auto"], ["proof (state)\nthis:\n  \\<exists>n.\n     real_of_int q * (\\<Prod>j = 1..n. real_of_int (a j)) *\n     (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n     < 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma \n  fixes d ::\"nat\\<Rightarrow>real \" and  a b ::\"nat\\<Rightarrow>int \" and A::real\n  assumes \"A > 1\" and d: \"\\<forall>n. d n> 1\" and a: \"\\<forall>n. a n>0\" and b:\"\\<forall>n. b n>0\" \n    and assu1: \"(( \\<lambda> n. (of_int (a n)) powr(1 /of_int (2^n)))\\<longlongrightarrow> A) sequentially \"\n    and assu3: \"filterlim ( \\<lambda> n. (d n)^(2^n)/ b n) at_top sequentially\"\n    and \"convergent_prod d\"\n  shows issummable: \"summable (\\<lambda>j. b j / a j)\"\n    and show5: \"\\<forall>\\<^sub>F n in sequentially. (\\<Sum>j. (b (n + j)) / (a (n + j))) \\<le> 2 * b n / a n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable (\\<lambda>j. real_of_int (b j) / real_of_int (a j)) &&&\n    \\<forall>\\<^sub>F n in sequentially.\n       (\\<Sum>j. real_of_int (b (n + j)) / real_of_int (a (n + j)))\n       \\<le> real_of_int (2 * b n) / real_of_int (a n)", "proof-"], ["proof (state)\ngoal (2 subgoals):\n 1. summable (\\<lambda>j. real_of_int (b j) / real_of_int (a j))\n 2. \\<forall>\\<^sub>F n in sequentially.\n       (\\<Sum>j. real_of_int (b (n + j)) / real_of_int (a (n + j)))\n       \\<le> real_of_int (2 * b n) / real_of_int (a n)", "define c where \"c = (\\<lambda>j. b j / a j)\""], ["proof (state)\nthis:\n  c = (\\<lambda>j. real_of_int (b j) / real_of_int (a j))\n\ngoal (2 subgoals):\n 1. summable (\\<lambda>j. real_of_int (b j) / real_of_int (a j))\n 2. \\<forall>\\<^sub>F n in sequentially.\n       (\\<Sum>j. real_of_int (b (n + j)) / real_of_int (a (n + j)))\n       \\<le> real_of_int (2 * b n) / real_of_int (a n)", "have c_pos:\"c j>0\" for j"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < c j", "using a b"], ["proof (prove)\nusing this:\n  \\<forall>n. 0 < a n\n  \\<forall>n. 0 < b n\n\ngoal (1 subgoal):\n 1. 0 < c j", "unfolding c_def"], ["proof (prove)\nusing this:\n  \\<forall>n. 0 < a n\n  \\<forall>n. 0 < b n\n\ngoal (1 subgoal):\n 1. 0 < real_of_int (b j) / real_of_int (a j)", "by simp"], ["proof (state)\nthis:\n  0 < c ?j\n\ngoal (2 subgoals):\n 1. summable (\\<lambda>j. real_of_int (b j) / real_of_int (a j))\n 2. \\<forall>\\<^sub>F n in sequentially.\n       (\\<Sum>j. real_of_int (b (n + j)) / real_of_int (a (n + j)))\n       \\<le> real_of_int (2 * b n) / real_of_int (a n)", "have c_ratio_tendsto:\"(\\<lambda>n. c (n+1) / c n ) \\<longlonglongrightarrow> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. c (n + 1) / c n) \\<longlonglongrightarrow> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>n. c (n + 1) / c n) \\<longlonglongrightarrow> 0", "define nn where \"nn \\<equiv> (\\<lambda>n. (2::int) ^ (Suc n))\""], ["proof (state)\nthis:\n  nn \\<equiv> \\<lambda>n. 2 ^ Suc n\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. c (n + 1) / c n) \\<longlonglongrightarrow> 0", "define ff where \"ff \\<equiv> (\\<lambda>n. (a n / a (Suc n)) powr(1 /nn n)*(d(Suc n)))\""], ["proof (state)\nthis:\n  ff \\<equiv>\n  \\<lambda>n.\n     (real_of_int (a n) / real_of_int (a (Suc n))) powr\n     (1 / real_of_int (nn n)) *\n     d (Suc n)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. c (n + 1) / c n) \\<longlonglongrightarrow> 0", "have nn_pos:\"nn n>0\" and ff_pos:\"ff n>0\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < nn n &&& 0 < ff n", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < nn n", "unfolding nn_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < 2 ^ Suc n", "by simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < ff n", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < ff n", "unfolding ff_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < (real_of_int (a n) / real_of_int (a (Suc n))) powr\n        (1 / real_of_int (nn n)) *\n        d (Suc n)", "using d[rule_format, of \"Suc n\"] a[rule_format, of n] a[rule_format, of \"Suc n\"]"], ["proof (prove)\nusing this:\n  1 < d (Suc n)\n  0 < a n\n  0 < a (Suc n)\n\ngoal (1 subgoal):\n 1. 0 < (real_of_int (a n) / real_of_int (a (Suc n))) powr\n        (1 / real_of_int (nn n)) *\n        d (Suc n)", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  0 < nn ?n\n  0 < ff ?n\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. c (n + 1) / c n) \\<longlonglongrightarrow> 0", "have ff_tendsto:\"ff \\<longlonglongrightarrow> 1 / sqrt A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ff \\<longlonglongrightarrow> 1 / sqrt A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ff \\<longlonglongrightarrow> 1 / sqrt A", "have \"(of_int (a n)) powr(1 / (nn n)) = sqrt(of_int (a n) powr(1 /of_int (2^n)))\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int (a n) powr (1 / real_of_int (nn n)) =\n    sqrt (real_of_int (a n) powr (1 / real_of_int (2 ^ n)))", "unfolding nn_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int (a n) powr (1 / real_of_int (2 ^ Suc n)) =\n    sqrt (real_of_int (a n) powr (1 / real_of_int (2 ^ n)))", "using a"], ["proof (prove)\nusing this:\n  \\<forall>n. 0 < a n\n\ngoal (1 subgoal):\n 1. real_of_int (a n) powr (1 / real_of_int (2 ^ Suc n)) =\n    sqrt (real_of_int (a n) powr (1 / real_of_int (2 ^ n)))", "by (simp add: powr_half_sqrt [symmetric] powr_powr ac_simps)"], ["proof (state)\nthis:\n  real_of_int (a ?n) powr (1 / real_of_int (nn ?n)) =\n  sqrt (real_of_int (a ?n) powr (1 / real_of_int (2 ^ ?n)))\n\ngoal (1 subgoal):\n 1. ff \\<longlonglongrightarrow> 1 / sqrt A", "moreover"], ["proof (state)\nthis:\n  real_of_int (a ?n) powr (1 / real_of_int (nn ?n)) =\n  sqrt (real_of_int (a ?n) powr (1 / real_of_int (2 ^ ?n)))\n\ngoal (1 subgoal):\n 1. ff \\<longlonglongrightarrow> 1 / sqrt A", "have \"(( \\<lambda> n. sqrt(of_int (a n) powr(1 /of_int (2^n))))\\<longlongrightarrow> sqrt A) sequentially \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. sqrt (real_of_int (a n) powr (1 / real_of_int (2 ^ n))))\n    \\<longlonglongrightarrow> sqrt A", "using assu1 tendsto_real_sqrt"], ["proof (prove)\nusing this:\n  (\\<lambda>n. real_of_int (a n) powr (1 / real_of_int (2 ^ n)))\n  \\<longlonglongrightarrow> A\n  (?f \\<longlongrightarrow> ?x) ?F \\<Longrightarrow>\n  ((\\<lambda>x. sqrt (?f x)) \\<longlongrightarrow> sqrt ?x) ?F\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. sqrt (real_of_int (a n) powr (1 / real_of_int (2 ^ n))))\n    \\<longlonglongrightarrow> sqrt A", "by blast"], ["proof (state)\nthis:\n  (\\<lambda>n. sqrt (real_of_int (a n) powr (1 / real_of_int (2 ^ n))))\n  \\<longlonglongrightarrow> sqrt A\n\ngoal (1 subgoal):\n 1. ff \\<longlonglongrightarrow> 1 / sqrt A", "ultimately"], ["proof (chain)\npicking this:\n  real_of_int (a ?n) powr (1 / real_of_int (nn ?n)) =\n  sqrt (real_of_int (a ?n) powr (1 / real_of_int (2 ^ ?n)))\n  (\\<lambda>n. sqrt (real_of_int (a n) powr (1 / real_of_int (2 ^ n))))\n  \\<longlonglongrightarrow> sqrt A", "have \"(( \\<lambda> n. (of_int (a n)) powr(1 /of_int (nn n)))\\<longlongrightarrow> sqrt A) sequentially \""], ["proof (prove)\nusing this:\n  real_of_int (a ?n) powr (1 / real_of_int (nn ?n)) =\n  sqrt (real_of_int (a ?n) powr (1 / real_of_int (2 ^ ?n)))\n  (\\<lambda>n. sqrt (real_of_int (a n) powr (1 / real_of_int (2 ^ n))))\n  \\<longlonglongrightarrow> sqrt A\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. real_of_int (a n) powr (1 / real_of_int (nn n)))\n    \\<longlonglongrightarrow> sqrt A", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>n. real_of_int (a n) powr (1 / real_of_int (nn n)))\n  \\<longlonglongrightarrow> sqrt A\n\ngoal (1 subgoal):\n 1. ff \\<longlonglongrightarrow> 1 / sqrt A", "from tendsto_divide[OF this assu1[THEN LIMSEQ_ignore_initial_segment[where k=1]]]"], ["proof (chain)\npicking this:\n  A \\<noteq> 0 \\<Longrightarrow>\n  (\\<lambda>x.\n      real_of_int (a x) powr (1 / real_of_int (nn x)) /\n      real_of_int (a (x + 1)) powr (1 / real_of_int (2 ^ (x + 1))))\n  \\<longlonglongrightarrow> sqrt A / A", "have \"(\\<lambda>n. (a n / a (Suc n)) powr(1 /nn n)) \\<longlonglongrightarrow> 1/sqrt A\""], ["proof (prove)\nusing this:\n  A \\<noteq> 0 \\<Longrightarrow>\n  (\\<lambda>x.\n      real_of_int (a x) powr (1 / real_of_int (nn x)) /\n      real_of_int (a (x + 1)) powr (1 / real_of_int (2 ^ (x + 1))))\n  \\<longlonglongrightarrow> sqrt A / A\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        (real_of_int (a n) / real_of_int (a (Suc n))) powr\n        (1 / real_of_int (nn n)))\n    \\<longlonglongrightarrow> 1 / sqrt A", "using \\<open>A>1\\<close> a"], ["proof (prove)\nusing this:\n  A \\<noteq> 0 \\<Longrightarrow>\n  (\\<lambda>x.\n      real_of_int (a x) powr (1 / real_of_int (nn x)) /\n      real_of_int (a (x + 1)) powr (1 / real_of_int (2 ^ (x + 1))))\n  \\<longlonglongrightarrow> sqrt A / A\n  1 < A\n  \\<forall>n. 0 < a n\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        (real_of_int (a n) / real_of_int (a (Suc n))) powr\n        (1 / real_of_int (nn n)))\n    \\<longlonglongrightarrow> 1 / sqrt A", "unfolding nn_def"], ["proof (prove)\nusing this:\n  A \\<noteq> 0 \\<Longrightarrow>\n  (\\<lambda>x.\n      real_of_int (a x) powr (1 / real_of_int (2 ^ Suc x)) /\n      real_of_int (a (x + 1)) powr (1 / real_of_int (2 ^ (x + 1))))\n  \\<longlonglongrightarrow> sqrt A / A\n  1 < A\n  \\<forall>n. 0 < a n\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        (real_of_int (a n) / real_of_int (a (Suc n))) powr\n        (1 / real_of_int (2 ^ Suc n)))\n    \\<longlonglongrightarrow> 1 / sqrt A", "by (auto simp add:powr_divide less_imp_le inverse_eq_divide sqrt_divide_self_eq)"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      (real_of_int (a n) / real_of_int (a (Suc n))) powr\n      (1 / real_of_int (nn n)))\n  \\<longlonglongrightarrow> 1 / sqrt A\n\ngoal (1 subgoal):\n 1. ff \\<longlonglongrightarrow> 1 / sqrt A", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      (real_of_int (a n) / real_of_int (a (Suc n))) powr\n      (1 / real_of_int (nn n)))\n  \\<longlonglongrightarrow> 1 / sqrt A\n\ngoal (1 subgoal):\n 1. ff \\<longlonglongrightarrow> 1 / sqrt A", "have \"(\\<lambda>n. d (Suc n))\\<longlonglongrightarrow> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. d (Suc n)) \\<longlonglongrightarrow> 1", "apply (rule convergent_prod_imp_LIMSEQ)"], ["proof (prove)\ngoal (1 subgoal):\n 1. convergent_prod (\\<lambda>n. d (Suc n))", "using convergent_prod_iff_shift[of d 1] \\<open>convergent_prod d\\<close>"], ["proof (prove)\nusing this:\n  convergent_prod (\\<lambda>i. d (i + 1)) = convergent_prod d\n  convergent_prod d\n\ngoal (1 subgoal):\n 1. convergent_prod (\\<lambda>n. d (Suc n))", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>n. d (Suc n)) \\<longlonglongrightarrow> 1\n\ngoal (1 subgoal):\n 1. ff \\<longlonglongrightarrow> 1 / sqrt A", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>n.\n      (real_of_int (a n) / real_of_int (a (Suc n))) powr\n      (1 / real_of_int (nn n)))\n  \\<longlonglongrightarrow> 1 / sqrt A\n  (\\<lambda>n. d (Suc n)) \\<longlonglongrightarrow> 1", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      (real_of_int (a n) / real_of_int (a (Suc n))) powr\n      (1 / real_of_int (nn n)))\n  \\<longlonglongrightarrow> 1 / sqrt A\n  (\\<lambda>n. d (Suc n)) \\<longlonglongrightarrow> 1\n\ngoal (1 subgoal):\n 1. ff \\<longlonglongrightarrow> 1 / sqrt A", "unfolding ff_def"], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      (real_of_int (a n) / real_of_int (a (Suc n))) powr\n      (1 / real_of_int (nn n)))\n  \\<longlonglongrightarrow> 1 / sqrt A\n  (\\<lambda>n. d (Suc n)) \\<longlonglongrightarrow> 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        (real_of_int (a n) / real_of_int (a (Suc n))) powr\n        (1 / real_of_int (nn n)) *\n        d (Suc n))\n    \\<longlonglongrightarrow> 1 / sqrt A", "by (auto intro:tendsto_eq_intros)"], ["proof (state)\nthis:\n  ff \\<longlonglongrightarrow> 1 / sqrt A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ff \\<longlonglongrightarrow> 1 / sqrt A\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. c (n + 1) / c n) \\<longlonglongrightarrow> 0", "have \"(\\<lambda>n. (ff n) powr nn n) \\<longlonglongrightarrow> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. ff n powr real_of_int (nn n)) \\<longlonglongrightarrow> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>n. ff n powr real_of_int (nn n)) \\<longlonglongrightarrow> 0", "define aa where \"aa=(1+1/sqrt A) / 2\""], ["proof (state)\nthis:\n  aa = (1 + 1 / sqrt A) / 2\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. ff n powr real_of_int (nn n)) \\<longlonglongrightarrow> 0", "have \"eventually (\\<lambda>n. ff n<aa) sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. ff n < aa", "apply (rule order_tendstoD[OF ff_tendsto])"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / sqrt A < aa", "unfolding aa_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / sqrt A < (1 + 1 / sqrt A) / 2", "using \\<open>A>1\\<close>"], ["proof (prove)\nusing this:\n  1 < A\n\ngoal (1 subgoal):\n 1. 1 / sqrt A < (1 + 1 / sqrt A) / 2", "by (auto simp add:field_simps)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially. ff n < aa\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. ff n powr real_of_int (nn n)) \\<longlonglongrightarrow> 0", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially. ff n < aa\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. ff n powr real_of_int (nn n)) \\<longlonglongrightarrow> 0", "have \"(\\<lambda>n. aa powr nn n) \\<longlonglongrightarrow> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. aa powr real_of_int (nn n)) \\<longlonglongrightarrow> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>n. aa powr real_of_int (nn n)) \\<longlonglongrightarrow> 0", "have \"(\\<lambda>y. aa ^ (nat \\<circ> nn) y) \\<longlonglongrightarrow> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>y. aa ^ (nat \\<circ> nn) y) \\<longlonglongrightarrow> 0", "apply (rule tendsto_power_zero)"], ["proof (prove)\ngoal (2 subgoals):\n 1. filterlim (nat \\<circ> nn) sequentially sequentially\n 2. norm aa < 1", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. filterlim (nat \\<circ> nn) sequentially sequentially", "unfolding nn_def comp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. LIM y sequentially. nat (2 ^ Suc y) :> sequentially", "apply (rule filterlim_subseq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. strict_mono (\\<lambda>y. nat (2 ^ Suc y))", "by (auto intro:strict_monoI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm aa < 1", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm aa < 1", "unfolding aa_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm ((1 + 1 / sqrt A) / 2) < 1", "using \\<open>A>1\\<close>"], ["proof (prove)\nusing this:\n  1 < A\n\ngoal (1 subgoal):\n 1. norm ((1 + 1 / sqrt A) / 2) < 1", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (\\<lambda>y. aa ^ (nat \\<circ> nn) y) \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. aa powr real_of_int (nn n)) \\<longlonglongrightarrow> 0", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>y. aa ^ (nat \\<circ> nn) y) \\<longlonglongrightarrow> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>y. aa ^ (nat \\<circ> nn) y) \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. aa powr real_of_int (nn n)) \\<longlonglongrightarrow> 0", "proof (elim filterlim_mono_eventually)"], ["proof (state)\ngoal (3 subgoals):\n 1. nhds 0 \\<le> nhds 0\n 2. sequentially \\<le> sequentially\n 3. \\<forall>\\<^sub>F x in sequentially.\n       aa ^ (nat \\<circ> nn) x = aa powr real_of_int (nn x)", "have \"aa>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < aa", "unfolding aa_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < (1 + 1 / sqrt A) / 2", "using \\<open>A>1\\<close>"], ["proof (prove)\nusing this:\n  1 < A\n\ngoal (1 subgoal):\n 1. 0 < (1 + 1 / sqrt A) / 2", "by  (auto simp add:field_simps pos_add_strict)"], ["proof (state)\nthis:\n  0 < aa\n\ngoal (3 subgoals):\n 1. nhds 0 \\<le> nhds 0\n 2. sequentially \\<le> sequentially\n 3. \\<forall>\\<^sub>F x in sequentially.\n       aa ^ (nat \\<circ> nn) x = aa powr real_of_int (nn x)", "then"], ["proof (chain)\npicking this:\n  0 < aa", "show \" \\<forall>\\<^sub>F x in sequentially. aa ^ (nat \\<circ> nn) x = aa powr real_of_int (nn x)\""], ["proof (prove)\nusing this:\n  0 < aa\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in sequentially.\n       aa ^ (nat \\<circ> nn) x = aa powr real_of_int (nn x)", "by (auto simp: powr_int order.strict_implies_order[OF nn_pos])"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in sequentially.\n     aa ^ (nat \\<circ> nn) x = aa powr real_of_int (nn x)\n\ngoal (2 subgoals):\n 1. nhds 0 \\<le> nhds 0\n 2. sequentially \\<le> sequentially", "qed auto"], ["proof (state)\nthis:\n  (\\<lambda>n. aa powr real_of_int (nn n)) \\<longlonglongrightarrow> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>n. aa powr real_of_int (nn n)) \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. ff n powr real_of_int (nn n)) \\<longlonglongrightarrow> 0", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F n in sequentially. ff n < aa\n  (\\<lambda>n. aa powr real_of_int (nn n)) \\<longlonglongrightarrow> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially. ff n < aa\n  (\\<lambda>n. aa powr real_of_int (nn n)) \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. ff n powr real_of_int (nn n)) \\<longlonglongrightarrow> 0", "apply (elim metric_tendsto_imp_tendsto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. ff n < aa \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in sequentially.\n       dist (ff x powr real_of_int (nn x)) 0\n       \\<le> dist (aa powr real_of_int (nn x)) 0", "apply (auto intro!:powr_mono2 elim!:eventually_mono)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x. ff x < aa \\<Longrightarrow> 0 \\<le> nn x\n 2. \\<And>x. ff x < aa \\<Longrightarrow> 0 \\<le> ff x", "using nn_pos ff_pos"], ["proof (prove)\nusing this:\n  0 < nn ?n\n  0 < ff ?n\n\ngoal (2 subgoals):\n 1. \\<And>x. ff x < aa \\<Longrightarrow> 0 \\<le> nn x\n 2. \\<And>x. ff x < aa \\<Longrightarrow> 0 \\<le> ff x", "by (meson le_cases not_le)+"], ["proof (state)\nthis:\n  (\\<lambda>n. ff n powr real_of_int (nn n)) \\<longlonglongrightarrow> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>n. ff n powr real_of_int (nn n)) \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. c (n + 1) / c n) \\<longlonglongrightarrow> 0", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n. ff n powr real_of_int (nn n)) \\<longlonglongrightarrow> 0", "have \"(\\<lambda>n. (d (Suc n))^(nat (nn n)) * (a n / a (Suc n))) \\<longlonglongrightarrow> 0\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. ff n powr real_of_int (nn n)) \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        d (Suc n) ^ nat (nn n) *\n        (real_of_int (a n) / real_of_int (a (Suc n))))\n    \\<longlonglongrightarrow> 0", "proof (elim filterlim_mono_eventually)"], ["proof (state)\ngoal (3 subgoals):\n 1. nhds 0 \\<le> nhds 0\n 2. sequentially \\<le> sequentially\n 3. \\<forall>\\<^sub>F x in sequentially.\n       ff x powr real_of_int (nn x) =\n       d (Suc x) ^ nat (nn x) *\n       (real_of_int (a x) / real_of_int (a (Suc x)))", "show \"\\<forall>\\<^sub>F x in sequentially. ff x powr  (nn x) = d (Suc x) ^ nat (nn x) * (a x / a (Suc x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in sequentially.\n       ff x powr real_of_int (nn x) =\n       d (Suc x) ^ nat (nn x) *\n       (real_of_int (a x) / real_of_int (a (Suc x)))", "apply (rule eventuallyI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       ff x powr real_of_int (nn x) =\n       d (Suc x) ^ nat (nn x) *\n       (real_of_int (a x) / real_of_int (a (Suc x)))", "subgoal for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. ff x powr real_of_int (nn x) =\n    d (Suc x) ^ nat (nn x) * (real_of_int (a x) / real_of_int (a (Suc x)))", "unfolding ff_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((real_of_int (a x) / real_of_int (a (Suc x))) powr\n     (1 / real_of_int (nn x)) *\n     d (Suc x)) powr\n    real_of_int (nn x) =\n    d (Suc x) ^ nat (nn x) * (real_of_int (a x) / real_of_int (a (Suc x)))", "using a[rule_format,of x] a[rule_format,of \"Suc x\"] d[rule_format,of \"Suc x\"] nn_pos[of x]"], ["proof (prove)\nusing this:\n  0 < a x\n  0 < a (Suc x)\n  1 < d (Suc x)\n  0 < nn x\n\ngoal (1 subgoal):\n 1. ((real_of_int (a x) / real_of_int (a (Suc x))) powr\n     (1 / real_of_int (nn x)) *\n     d (Suc x)) powr\n    real_of_int (nn x) =\n    d (Suc x) ^ nat (nn x) * (real_of_int (a x) / real_of_int (a (Suc x)))", "apply (auto simp add:field_simps powr_divide powr_powr powr_mult )"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < a x; 0 < a (Suc x); 1 < d (Suc x); 0 < nn x\\<rbrakk>\n    \\<Longrightarrow> d (Suc x) powr real_of_int (nn x) =\n                      d (Suc x) ^ nat (nn x)", "by (simp add: powr_int)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in sequentially.\n     ff x powr real_of_int (nn x) =\n     d (Suc x) ^ nat (nn x) * (real_of_int (a x) / real_of_int (a (Suc x)))\n\ngoal (2 subgoals):\n 1. nhds 0 \\<le> nhds 0\n 2. sequentially \\<le> sequentially", "qed auto"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      d (Suc n) ^ nat (nn n) *\n      (real_of_int (a n) / real_of_int (a (Suc n))))\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. c (n + 1) / c n) \\<longlonglongrightarrow> 0", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      d (Suc n) ^ nat (nn n) *\n      (real_of_int (a n) / real_of_int (a (Suc n))))\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. c (n + 1) / c n) \\<longlonglongrightarrow> 0", "have \"(\\<lambda>n. b (Suc n) / (d (Suc n))^(nat (nn n))) \\<longlonglongrightarrow> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. real_of_int (b (Suc n)) / d (Suc n) ^ nat (nn n))\n    \\<longlonglongrightarrow> 0", "using tendsto_inverse_0_at_top[OF assu3,THEN LIMSEQ_ignore_initial_segment[where k=1]]"], ["proof (prove)\nusing this:\n  (\\<lambda>n. inverse (d (n + 1) ^ 2 ^ (n + 1) / real_of_int (b (n + 1))))\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. real_of_int (b (Suc n)) / d (Suc n) ^ nat (nn n))\n    \\<longlonglongrightarrow> 0", "unfolding nn_def"], ["proof (prove)\nusing this:\n  (\\<lambda>n. inverse (d (n + 1) ^ 2 ^ (n + 1) / real_of_int (b (n + 1))))\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. real_of_int (b (Suc n)) / d (Suc n) ^ nat (2 ^ Suc n))\n    \\<longlonglongrightarrow> 0", "by (auto simp add:field_simps nat_mult_distrib nat_power_eq)"], ["proof (state)\nthis:\n  (\\<lambda>n. real_of_int (b (Suc n)) / d (Suc n) ^ nat (nn n))\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. c (n + 1) / c n) \\<longlonglongrightarrow> 0", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>n.\n      d (Suc n) ^ nat (nn n) *\n      (real_of_int (a n) / real_of_int (a (Suc n))))\n  \\<longlonglongrightarrow> 0\n  (\\<lambda>n. real_of_int (b (Suc n)) / d (Suc n) ^ nat (nn n))\n  \\<longlonglongrightarrow> 0", "have \"(\\<lambda>n. b (Suc n) * (a n / a (Suc n))) \\<longlonglongrightarrow> 0\""], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      d (Suc n) ^ nat (nn n) *\n      (real_of_int (a n) / real_of_int (a (Suc n))))\n  \\<longlonglongrightarrow> 0\n  (\\<lambda>n. real_of_int (b (Suc n)) / d (Suc n) ^ nat (nn n))\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        real_of_int (b (Suc n)) *\n        (real_of_int (a n) / real_of_int (a (Suc n))))\n    \\<longlonglongrightarrow> 0", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<lambda>n.\n                 d (Suc n) ^ nat (nn n) *\n                 (real_of_int (a n) / real_of_int (a (Suc n))))\n             \\<longlonglongrightarrow> 0;\n     (\\<lambda>n. real_of_int (b (Suc n)) / d (Suc n) ^ nat (nn n))\n     \\<longlonglongrightarrow> 0\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>n.\n                          real_of_int (b (Suc n)) *\n                          (real_of_int (a n) / real_of_int (a (Suc n))))\n                      \\<longlonglongrightarrow> 0", "subgoal premises asm"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        real_of_int (b (Suc n)) *\n        (real_of_int (a n) / real_of_int (a (Suc n))))\n    \\<longlonglongrightarrow> 0", "using tendsto_mult[OF asm,simplified]"], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      if d (Suc x) = 0 \\<and> 0 < nn x then 0\n      else real_of_int (a x) * real_of_int (b (Suc x)) /\n           real_of_int (a (Suc x)))\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        real_of_int (b (Suc n)) *\n        (real_of_int (a n) / real_of_int (a (Suc n))))\n    \\<longlonglongrightarrow> 0", "apply (elim filterlim_mono_eventually)"], ["proof (prove)\ngoal (3 subgoals):\n 1. nhds 0 \\<le> nhds 0\n 2. sequentially \\<le> sequentially\n 3. \\<forall>\\<^sub>F x in sequentially.\n       (if d (Suc x) = 0 \\<and> 0 < nn x then 0\n        else real_of_int (a x) * real_of_int (b (Suc x)) /\n             real_of_int (a (Suc x))) =\n       real_of_int (b (Suc x)) *\n       (real_of_int (a x) / real_of_int (a (Suc x)))", "using d"], ["proof (prove)\nusing this:\n  \\<forall>n. 1 < d n\n\ngoal (3 subgoals):\n 1. nhds 0 \\<le> nhds 0\n 2. sequentially \\<le> sequentially\n 3. \\<forall>\\<^sub>F x in sequentially.\n       (if d (Suc x) = 0 \\<and> 0 < nn x then 0\n        else real_of_int (a x) * real_of_int (b (Suc x)) /\n             real_of_int (a (Suc x))) =\n       real_of_int (b (Suc x)) *\n       (real_of_int (a x) / real_of_int (a (Suc x)))", "by (auto simp add:algebra_simps,metis (mono_tags, lifting) always_eventually \n            not_one_less_zero)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      real_of_int (b (Suc n)) *\n      (real_of_int (a n) / real_of_int (a (Suc n))))\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. c (n + 1) / c n) \\<longlonglongrightarrow> 0", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n.\n      real_of_int (b (Suc n)) *\n      (real_of_int (a n) / real_of_int (a (Suc n))))\n  \\<longlonglongrightarrow> 0", "have \"(\\<lambda>n. (b (Suc n) / b n) * (a n / a (Suc n))) \\<longlonglongrightarrow> 0\""], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      real_of_int (b (Suc n)) *\n      (real_of_int (a n) / real_of_int (a (Suc n))))\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        real_of_int (b (Suc n)) / real_of_int (b n) *\n        (real_of_int (a n) / real_of_int (a (Suc n))))\n    \\<longlonglongrightarrow> 0", "apply (elim Lim_transform_bound[rotated])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       norm\n        (real_of_int (b (Suc n)) / real_of_int (b n) *\n         (real_of_int (a n) / real_of_int (a (Suc n))))\n       \\<le> norm\n              (real_of_int (b (Suc n)) *\n               (real_of_int (a n) / real_of_int (a (Suc n))))", "apply (rule eventuallyI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       norm\n        (real_of_int (b (Suc x)) / real_of_int (b x) *\n         (real_of_int (a x) / real_of_int (a (Suc x))))\n       \\<le> norm\n              (real_of_int (b (Suc x)) *\n               (real_of_int (a x) / real_of_int (a (Suc x))))", "subgoal for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm\n     (real_of_int (b (Suc x)) / real_of_int (b x) *\n      (real_of_int (a x) / real_of_int (a (Suc x))))\n    \\<le> norm\n           (real_of_int (b (Suc x)) *\n            (real_of_int (a x) / real_of_int (a (Suc x))))", "using a[rule_format, of x] a[rule_format, of \"Suc x\"] \n          b[rule_format, of x] b[rule_format, of \"Suc x\"]"], ["proof (prove)\nusing this:\n  0 < a x\n  0 < a (Suc x)\n  0 < b x\n  0 < b (Suc x)\n\ngoal (1 subgoal):\n 1. norm\n     (real_of_int (b (Suc x)) / real_of_int (b x) *\n      (real_of_int (a x) / real_of_int (a (Suc x))))\n    \\<le> norm\n           (real_of_int (b (Suc x)) *\n            (real_of_int (a x) / real_of_int (a (Suc x))))", "by (auto simp add:field_simps)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      real_of_int (b (Suc n)) / real_of_int (b n) *\n      (real_of_int (a n) / real_of_int (a (Suc n))))\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. c (n + 1) / c n) \\<longlonglongrightarrow> 0", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n.\n      real_of_int (b (Suc n)) / real_of_int (b n) *\n      (real_of_int (a n) / real_of_int (a (Suc n))))\n  \\<longlonglongrightarrow> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      real_of_int (b (Suc n)) / real_of_int (b n) *\n      (real_of_int (a n) / real_of_int (a (Suc n))))\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. c (n + 1) / c n) \\<longlonglongrightarrow> 0", "unfolding c_def"], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      real_of_int (b (Suc n)) / real_of_int (b n) *\n      (real_of_int (a n) / real_of_int (a (Suc n))))\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        real_of_int (b (n + 1)) / real_of_int (a (n + 1)) /\n        (real_of_int (b n) / real_of_int (a n)))\n    \\<longlonglongrightarrow> 0", "by (auto simp add:algebra_simps)"], ["proof (state)\nthis:\n  (\\<lambda>n. c (n + 1) / c n) \\<longlonglongrightarrow> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>n. c (n + 1) / c n) \\<longlonglongrightarrow> 0\n\ngoal (2 subgoals):\n 1. summable (\\<lambda>j. real_of_int (b j) / real_of_int (a j))\n 2. \\<forall>\\<^sub>F n in sequentially.\n       (\\<Sum>j. real_of_int (b (n + j)) / real_of_int (a (n + j)))\n       \\<le> real_of_int (2 * b n) / real_of_int (a n)", "from c_ratio_tendsto"], ["proof (chain)\npicking this:\n  (\\<lambda>n. c (n + 1) / c n) \\<longlonglongrightarrow> 0", "have \"(\\<lambda>n. norm (b (Suc n) / a (Suc n)) / norm (b n / a n)) \\<longlonglongrightarrow> 0\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. c (n + 1) / c n) \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        norm (real_of_int (b (Suc n)) / real_of_int (a (Suc n))) /\n        norm (real_of_int (b n) / real_of_int (a n)))\n    \\<longlonglongrightarrow> 0", "unfolding c_def"], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      real_of_int (b (n + 1)) / real_of_int (a (n + 1)) /\n      (real_of_int (b n) / real_of_int (a n)))\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        norm (real_of_int (b (Suc n)) / real_of_int (a (Suc n))) /\n        norm (real_of_int (b n) / real_of_int (a n)))\n    \\<longlonglongrightarrow> 0", "using a b"], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      real_of_int (b (n + 1)) / real_of_int (a (n + 1)) /\n      (real_of_int (b n) / real_of_int (a n)))\n  \\<longlonglongrightarrow> 0\n  \\<forall>n. 0 < a n\n  \\<forall>n. 0 < b n\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        norm (real_of_int (b (Suc n)) / real_of_int (a (Suc n))) /\n        norm (real_of_int (b n) / real_of_int (a n)))\n    \\<longlonglongrightarrow> 0", "by (force simp add:divide_simps abs_of_pos intro: Lim_transform_eventually)"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      norm (real_of_int (b (Suc n)) / real_of_int (a (Suc n))) /\n      norm (real_of_int (b n) / real_of_int (a n)))\n  \\<longlonglongrightarrow> 0\n\ngoal (2 subgoals):\n 1. summable (\\<lambda>j. real_of_int (b j) / real_of_int (a j))\n 2. \\<forall>\\<^sub>F n in sequentially.\n       (\\<Sum>j. real_of_int (b (n + j)) / real_of_int (a (n + j)))\n       \\<le> real_of_int (2 * b n) / real_of_int (a n)", "from summable_ratio_test_tendsto[OF _ _ this] a b"], ["proof (chain)\npicking this:\n  \\<lbrakk>0 < 1;\n   \\<forall>n. real_of_int (b n) / real_of_int (a n) \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> summable\n                     (\\<lambda>n. real_of_int (b n) / real_of_int (a n))\n  \\<forall>n. 0 < a n\n  \\<forall>n. 0 < b n", "show \"summable c\""], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < 1;\n   \\<forall>n. real_of_int (b n) / real_of_int (a n) \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> summable\n                     (\\<lambda>n. real_of_int (b n) / real_of_int (a n))\n  \\<forall>n. 0 < a n\n  \\<forall>n. 0 < b n\n\ngoal (1 subgoal):\n 1. summable c", "unfolding c_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < 1;\n   \\<forall>n. real_of_int (b n) / real_of_int (a n) \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> summable\n                     (\\<lambda>n. real_of_int (b n) / real_of_int (a n))\n  \\<forall>n. 0 < a n\n  \\<forall>n. 0 < b n\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>j. real_of_int (b j) / real_of_int (a j))", "by (metis c_def c_pos less_irrefl zero_less_one)"], ["proof (state)\nthis:\n  summable c\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       (\\<Sum>j. real_of_int (b (n + j)) / real_of_int (a (n + j)))\n       \\<le> real_of_int (2 * b n) / real_of_int (a n)", "have \"\\<forall>\\<^sub>F n in sequentially. (\\<Sum>j. c (n + j)) \\<le> 2 * c n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. (\\<Sum>j. c (n + j)) \\<le> 2 * c n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. (\\<Sum>j. c (n + j)) \\<le> 2 * c n", "obtain N where N_ratio:\"\\<forall>n\\<ge>N. c (n + 1) / c n < 1 / 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<forall>n\\<ge>N. c (n + 1) / c n < 1 / 2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<forall>n\\<ge>N. c (n + 1) / c n < 1 / 2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have \"eventually (\\<lambda>n. c (n+1) / c n < 1/2) sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. c (n + 1) / c n < 1 / 2", "using c_ratio_tendsto[unfolded tendsto_iff,rule_format, of \"1/2\",simplified]"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in sequentially.\n     \\<bar>c (Suc x)\\<bar> * 2 / \\<bar>c x\\<bar> < 1\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. c (n + 1) / c n < 1 / 2", "apply eventually_elim"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<bar>c (Suc n)\\<bar> * 2 / \\<bar>c n\\<bar> < 1 \\<Longrightarrow>\n       c (n + 1) / c n < 1 / 2", "subgoal for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>c (Suc n)\\<bar> * 2 / \\<bar>c n\\<bar> < 1 \\<Longrightarrow>\n    c (n + 1) / c n < 1 / 2", "using c_pos[of n] c_pos[of \"Suc n\"]"], ["proof (prove)\nusing this:\n  0 < c n\n  0 < c (Suc n)\n\ngoal (1 subgoal):\n 1. \\<bar>c (Suc n)\\<bar> * 2 / \\<bar>c n\\<bar> < 1 \\<Longrightarrow>\n    c (n + 1) / c n < 1 / 2", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially. c (n + 1) / c n < 1 / 2\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<forall>n\\<ge>N. c (n + 1) / c n < 1 / 2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F n in sequentially. c (n + 1) / c n < 1 / 2", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially. c (n + 1) / c n < 1 / 2\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially. c (n + 1) / c n < 1 / 2\n  \\<forall>n\\<ge>?N. c (n + 1) / c n < 1 / 2 \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "unfolding eventually_sequentially"], ["proof (prove)\nusing this:\n  \\<exists>N. \\<forall>n\\<ge>N. c (n + 1) / c n < 1 / 2\n  \\<forall>n\\<ge>?N. c (n + 1) / c n < 1 / 2 \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n\\<ge>N. c (n + 1) / c n < 1 / 2\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. (\\<Sum>j. c (n + j)) \\<le> 2 * c n", "have \"(\\<Sum>j. c (j + n)) \\<le> 2 * c n\" when \"n\\<ge>N\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j. c (j + n)) \\<le> 2 * c n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>j. c (j + n)) \\<le> 2 * c n", "have \"(\\<Sum>j<m. c (j + n)) \\<le> 2*c n * (1 - 1 / 2^(m+1))\" for m"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j<m. c (j + n)) \\<le> 2 * c n * (1 - 1 / 2 ^ (m + 1))", "proof (induct m)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<Sum>j<0. c (j + n)) \\<le> 2 * c n * (1 - 1 / 2 ^ (0 + 1))\n 2. \\<And>m.\n       (\\<Sum>j<m. c (j + n))\n       \\<le> 2 * c n * (1 - 1 / 2 ^ (m + 1)) \\<Longrightarrow>\n       (\\<Sum>j<Suc m. c (j + n)) \\<le> 2 * c n * (1 - 1 / 2 ^ (Suc m + 1))", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. (\\<Sum>j<0. c (j + n)) \\<le> 2 * c n * (1 - 1 / 2 ^ (0 + 1))\n 2. \\<And>m.\n       (\\<Sum>j<m. c (j + n))\n       \\<le> 2 * c n * (1 - 1 / 2 ^ (m + 1)) \\<Longrightarrow>\n       (\\<Sum>j<Suc m. c (j + n)) \\<le> 2 * c n * (1 - 1 / 2 ^ (Suc m + 1))", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j<0. c (j + n)) \\<le> 2 * c n * (1 - 1 / 2 ^ (0 + 1))", "using c_pos[of n]"], ["proof (prove)\nusing this:\n  0 < c n\n\ngoal (1 subgoal):\n 1. (\\<Sum>j<0. c (j + n)) \\<le> 2 * c n * (1 - 1 / 2 ^ (0 + 1))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>j<0. c (j + n)) \\<le> 2 * c n * (1 - 1 / 2 ^ (0 + 1))\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       (\\<Sum>j<m. c (j + n))\n       \\<le> 2 * c n * (1 - 1 / 2 ^ (m + 1)) \\<Longrightarrow>\n       (\\<Sum>j<Suc m. c (j + n)) \\<le> 2 * c n * (1 - 1 / 2 ^ (Suc m + 1))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       (\\<Sum>j<m. c (j + n))\n       \\<le> 2 * c n * (1 - 1 / 2 ^ (m + 1)) \\<Longrightarrow>\n       (\\<Sum>j<Suc m. c (j + n)) \\<le> 2 * c n * (1 - 1 / 2 ^ (Suc m + 1))", "case (Suc m)"], ["proof (state)\nthis:\n  (\\<Sum>j<m. c (j + n)) \\<le> 2 * c n * (1 - 1 / 2 ^ (m + 1))\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       (\\<Sum>j<m. c (j + n))\n       \\<le> 2 * c n * (1 - 1 / 2 ^ (m + 1)) \\<Longrightarrow>\n       (\\<Sum>j<Suc m. c (j + n)) \\<le> 2 * c n * (1 - 1 / 2 ^ (Suc m + 1))", "have \"(\\<Sum>j<Suc m. c (j + n)) = c n + (\\<Sum>i<m. c (Suc i + n)) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j<Suc m. c (j + n)) = c n + (\\<Sum>i<m. c (Suc i + n))", "unfolding sum.lessThan_Suc_shift"], ["proof (prove)\ngoal (1 subgoal):\n 1. c (0 + n) + (\\<Sum>i<m. c (Suc i + n)) =\n    c n + (\\<Sum>i<m. c (Suc i + n))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>j<Suc m. c (j + n)) = c n + (\\<Sum>i<m. c (Suc i + n))\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       (\\<Sum>j<m. c (j + n))\n       \\<le> 2 * c n * (1 - 1 / 2 ^ (m + 1)) \\<Longrightarrow>\n       (\\<Sum>j<Suc m. c (j + n)) \\<le> 2 * c n * (1 - 1 / 2 ^ (Suc m + 1))", "also"], ["proof (state)\nthis:\n  (\\<Sum>j<Suc m. c (j + n)) = c n + (\\<Sum>i<m. c (Suc i + n))\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       (\\<Sum>j<m. c (j + n))\n       \\<le> 2 * c n * (1 - 1 / 2 ^ (m + 1)) \\<Longrightarrow>\n       (\\<Sum>j<Suc m. c (j + n)) \\<le> 2 * c n * (1 - 1 / 2 ^ (Suc m + 1))", "have \"... \\<le> c n + (\\<Sum>i<m. c (i + n) / 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c n + (\\<Sum>i<m. c (Suc i + n)) \\<le> c n + (\\<Sum>i<m. c (i + n) / 2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c n + (\\<Sum>i<m. c (Suc i + n)) \\<le> c n + (\\<Sum>i<m. c (i + n) / 2)", "have \"c (Suc i + n) \\<le> c (i + n) / 2\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. c (Suc i + n) \\<le> c (i + n) / 2", "using N_ratio[rule_format,of \"i+n\"] \\<open>n\\<ge>N\\<close> c_pos[of \"i+n\"]"], ["proof (prove)\nusing this:\n  N \\<le> i + n \\<Longrightarrow> c (i + n + 1) / c (i + n) < 1 / 2\n  N \\<le> n\n  0 < c (i + n)\n\ngoal (1 subgoal):\n 1. c (Suc i + n) \\<le> c (i + n) / 2", "by simp"], ["proof (state)\nthis:\n  c (Suc ?i + n) \\<le> c (?i + n) / 2\n\ngoal (1 subgoal):\n 1. c n + (\\<Sum>i<m. c (Suc i + n)) \\<le> c n + (\\<Sum>i<m. c (i + n) / 2)", "then"], ["proof (chain)\npicking this:\n  c (Suc ?i + n) \\<le> c (?i + n) / 2", "show ?thesis"], ["proof (prove)\nusing this:\n  c (Suc ?i + n) \\<le> c (?i + n) / 2\n\ngoal (1 subgoal):\n 1. c n + (\\<Sum>i<m. c (Suc i + n)) \\<le> c n + (\\<Sum>i<m. c (i + n) / 2)", "by (auto intro:sum_mono)"], ["proof (state)\nthis:\n  c n + (\\<Sum>i<m. c (Suc i + n)) \\<le> c n + (\\<Sum>i<m. c (i + n) / 2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c n + (\\<Sum>i<m. c (Suc i + n)) \\<le> c n + (\\<Sum>i<m. c (i + n) / 2)\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       (\\<Sum>j<m. c (j + n))\n       \\<le> 2 * c n * (1 - 1 / 2 ^ (m + 1)) \\<Longrightarrow>\n       (\\<Sum>j<Suc m. c (j + n)) \\<le> 2 * c n * (1 - 1 / 2 ^ (Suc m + 1))", "also"], ["proof (state)\nthis:\n  c n + (\\<Sum>i<m. c (Suc i + n)) \\<le> c n + (\\<Sum>i<m. c (i + n) / 2)\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       (\\<Sum>j<m. c (j + n))\n       \\<le> 2 * c n * (1 - 1 / 2 ^ (m + 1)) \\<Longrightarrow>\n       (\\<Sum>j<Suc m. c (j + n)) \\<le> 2 * c n * (1 - 1 / 2 ^ (Suc m + 1))", "have \"... = c n + (\\<Sum>i<m. c (i + n)) / 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c n + (\\<Sum>i<m. c (i + n) / 2) = c n + (\\<Sum>i<m. c (i + n)) / 2", "unfolding sum_divide_distrib"], ["proof (prove)\ngoal (1 subgoal):\n 1. c n + (\\<Sum>i<m. c (i + n) / 2) = c n + (\\<Sum>na<m. c (na + n) / 2)", "by simp"], ["proof (state)\nthis:\n  c n + (\\<Sum>i<m. c (i + n) / 2) = c n + (\\<Sum>i<m. c (i + n)) / 2\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       (\\<Sum>j<m. c (j + n))\n       \\<le> 2 * c n * (1 - 1 / 2 ^ (m + 1)) \\<Longrightarrow>\n       (\\<Sum>j<Suc m. c (j + n)) \\<le> 2 * c n * (1 - 1 / 2 ^ (Suc m + 1))", "also"], ["proof (state)\nthis:\n  c n + (\\<Sum>i<m. c (i + n) / 2) = c n + (\\<Sum>i<m. c (i + n)) / 2\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       (\\<Sum>j<m. c (j + n))\n       \\<le> 2 * c n * (1 - 1 / 2 ^ (m + 1)) \\<Longrightarrow>\n       (\\<Sum>j<Suc m. c (j + n)) \\<le> 2 * c n * (1 - 1 / 2 ^ (Suc m + 1))", "have \"... \\<le> c n + c n * (1 - 1 / 2 ^ (m + 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c n + (\\<Sum>i<m. c (i + n)) / 2 \\<le> c n + c n * (1 - 1 / 2 ^ (m + 1))", "using Suc"], ["proof (prove)\nusing this:\n  (\\<Sum>j<m. c (j + n)) \\<le> 2 * c n * (1 - 1 / 2 ^ (m + 1))\n\ngoal (1 subgoal):\n 1. c n + (\\<Sum>i<m. c (i + n)) / 2 \\<le> c n + c n * (1 - 1 / 2 ^ (m + 1))", "by auto"], ["proof (state)\nthis:\n  c n + (\\<Sum>i<m. c (i + n)) / 2 \\<le> c n + c n * (1 - 1 / 2 ^ (m + 1))\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       (\\<Sum>j<m. c (j + n))\n       \\<le> 2 * c n * (1 - 1 / 2 ^ (m + 1)) \\<Longrightarrow>\n       (\\<Sum>j<Suc m. c (j + n)) \\<le> 2 * c n * (1 - 1 / 2 ^ (Suc m + 1))", "also"], ["proof (state)\nthis:\n  c n + (\\<Sum>i<m. c (i + n)) / 2 \\<le> c n + c n * (1 - 1 / 2 ^ (m + 1))\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       (\\<Sum>j<m. c (j + n))\n       \\<le> 2 * c n * (1 - 1 / 2 ^ (m + 1)) \\<Longrightarrow>\n       (\\<Sum>j<Suc m. c (j + n)) \\<le> 2 * c n * (1 - 1 / 2 ^ (Suc m + 1))", "have \"... = 2 * c n * (1 - 1 / 2 ^ (Suc m + 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c n + c n * (1 - 1 / 2 ^ (m + 1)) = 2 * c n * (1 - 1 / 2 ^ (Suc m + 1))", "by (auto simp add:field_simps)"], ["proof (state)\nthis:\n  c n + c n * (1 - 1 / 2 ^ (m + 1)) = 2 * c n * (1 - 1 / 2 ^ (Suc m + 1))\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       (\\<Sum>j<m. c (j + n))\n       \\<le> 2 * c n * (1 - 1 / 2 ^ (m + 1)) \\<Longrightarrow>\n       (\\<Sum>j<Suc m. c (j + n)) \\<le> 2 * c n * (1 - 1 / 2 ^ (Suc m + 1))", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>j<Suc m. c (j + n)) \\<le> 2 * c n * (1 - 1 / 2 ^ (Suc m + 1))", "show ?case"], ["proof (prove)\nusing this:\n  (\\<Sum>j<Suc m. c (j + n)) \\<le> 2 * c n * (1 - 1 / 2 ^ (Suc m + 1))\n\ngoal (1 subgoal):\n 1. (\\<Sum>j<Suc m. c (j + n)) \\<le> 2 * c n * (1 - 1 / 2 ^ (Suc m + 1))", "."], ["proof (state)\nthis:\n  (\\<Sum>j<Suc m. c (j + n)) \\<le> 2 * c n * (1 - 1 / 2 ^ (Suc m + 1))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>j<?m. c (j + n)) \\<le> 2 * c n * (1 - 1 / 2 ^ (?m + 1))\n\ngoal (1 subgoal):\n 1. (\\<Sum>j. c (j + n)) \\<le> 2 * c n", "then"], ["proof (chain)\npicking this:\n  (\\<Sum>j<?m. c (j + n)) \\<le> 2 * c n * (1 - 1 / 2 ^ (?m + 1))", "have \"(\\<Sum>j<m. c (j + n)) \\<le> 2*c n\" for m"], ["proof (prove)\nusing this:\n  (\\<Sum>j<?m. c (j + n)) \\<le> 2 * c n * (1 - 1 / 2 ^ (?m + 1))\n\ngoal (1 subgoal):\n 1. (\\<Sum>j<m. c (j + n)) \\<le> 2 * c n", "using c_pos[of n]"], ["proof (prove)\nusing this:\n  (\\<Sum>j<?m. c (j + n)) \\<le> 2 * c n * (1 - 1 / 2 ^ (?m + 1))\n  0 < c n\n\ngoal (1 subgoal):\n 1. (\\<Sum>j<m. c (j + n)) \\<le> 2 * c n", "by (smt divide_le_eq_1_pos divide_pos_pos nonzero_mult_div_cancel_left zero_less_power)"], ["proof (state)\nthis:\n  (\\<Sum>j<?m. c (j + n)) \\<le> 2 * c n\n\ngoal (1 subgoal):\n 1. (\\<Sum>j. c (j + n)) \\<le> 2 * c n", "moreover"], ["proof (state)\nthis:\n  (\\<Sum>j<?m. c (j + n)) \\<le> 2 * c n\n\ngoal (1 subgoal):\n 1. (\\<Sum>j. c (j + n)) \\<le> 2 * c n", "have \"summable (\\<lambda>j. c (j + n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable (\\<lambda>j. c (j + n))", "using \\<open>summable c\\<close>"], ["proof (prove)\nusing this:\n  summable c\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>j. c (j + n))", "by (simp add: summable_iff_shift)"], ["proof (state)\nthis:\n  summable (\\<lambda>j. c (j + n))\n\ngoal (1 subgoal):\n 1. (\\<Sum>j. c (j + n)) \\<le> 2 * c n", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Sum>j<?m. c (j + n)) \\<le> 2 * c n\n  summable (\\<lambda>j. c (j + n))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>j<?m. c (j + n)) \\<le> 2 * c n\n  summable (\\<lambda>j. c (j + n))\n\ngoal (1 subgoal):\n 1. (\\<Sum>j. c (j + n)) \\<le> 2 * c n", "using suminf_le_const[of \"\\<lambda>j. c (j+n)\" \"2*c n\"]"], ["proof (prove)\nusing this:\n  (\\<Sum>j<?m. c (j + n)) \\<le> 2 * c n\n  summable (\\<lambda>j. c (j + n))\n  \\<lbrakk>summable (\\<lambda>j. c (j + n));\n   \\<And>na. (\\<Sum>j<na. c (j + n)) \\<le> 2 * c n\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>j. c (j + n)) \\<le> 2 * c n\n\ngoal (1 subgoal):\n 1. (\\<Sum>j. c (j + n)) \\<le> 2 * c n", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>j. c (j + n)) \\<le> 2 * c n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  N \\<le> ?n \\<Longrightarrow> (\\<Sum>j. c (j + ?n)) \\<le> 2 * c ?n\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. (\\<Sum>j. c (n + j)) \\<le> 2 * c n", "then"], ["proof (chain)\npicking this:\n  N \\<le> ?n \\<Longrightarrow> (\\<Sum>j. c (j + ?n)) \\<le> 2 * c ?n", "show ?thesis"], ["proof (prove)\nusing this:\n  N \\<le> ?n \\<Longrightarrow> (\\<Sum>j. c (j + ?n)) \\<le> 2 * c ?n\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. (\\<Sum>j. c (n + j)) \\<le> 2 * c n", "unfolding eventually_sequentially"], ["proof (prove)\nusing this:\n  N \\<le> ?n \\<Longrightarrow> (\\<Sum>j. c (j + ?n)) \\<le> 2 * c ?n\n\ngoal (1 subgoal):\n 1. \\<exists>N. \\<forall>n\\<ge>N. (\\<Sum>j. c (n + j)) \\<le> 2 * c n", "by (auto simp add:algebra_simps)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially. (\\<Sum>j. c (n + j)) \\<le> 2 * c n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially. (\\<Sum>j. c (n + j)) \\<le> 2 * c n\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       (\\<Sum>j. real_of_int (b (n + j)) / real_of_int (a (n + j)))\n       \\<le> real_of_int (2 * b n) / real_of_int (a n)", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F n in sequentially. (\\<Sum>j. c (n + j)) \\<le> 2 * c n", "show \"\\<forall>\\<^sub>F n in sequentially. (\\<Sum>j. (b (n + j)) /  (a (n + j))) \\<le> 2 * b n / a n\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially. (\\<Sum>j. c (n + j)) \\<le> 2 * c n\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       (\\<Sum>j. real_of_int (b (n + j)) / real_of_int (a (n + j)))\n       \\<le> real_of_int (2 * b n) / real_of_int (a n)", "unfolding c_def"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially.\n     (\\<Sum>j. real_of_int (b (n + j)) / real_of_int (a (n + j)))\n     \\<le> 2 * (real_of_int (b n) / real_of_int (a n))\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       (\\<Sum>j. real_of_int (b (n + j)) / real_of_int (a (n + j)))\n       \\<le> real_of_int (2 * b n) / real_of_int (a n)", "by simp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     (\\<Sum>j. real_of_int (b (n + j)) / real_of_int (a (n + j)))\n     \\<le> real_of_int (2 * b n) / real_of_int (a n)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem Hancl3:\n  fixes d ::\"nat\\<Rightarrow>real\" and  a b :: \"nat\\<Rightarrow>int\"\n  assumes \"A > 1\" and d: \"\\<forall>n. d n > 1\" and a: \"\\<forall>n. a n>0\" and b: \"\\<forall>n. b n > 0\" and \"s>0\"\n    and assu1: \"(\\<lambda>n. (a n) powr(1 / of_int(2^n))) \\<longlonglongrightarrow> A\"\n    and assu2: \"\\<forall>n \\<ge> s. A / (a n) powr (1 / of_int(2^n)) > (\\<Prod>j. d (n+j))\"\n    and assu3: \"LIM n sequentially. d n ^ 2 ^ n / b n :> at_top\"\n    and \"convergent_prod d\" \n  shows \"(\\<Sum>n. b n / a n) \\<notin> \\<rat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n. real_of_int (b n) / real_of_int (a n)) \\<notin> \\<rat>", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<Sum>n. real_of_int (b n) / real_of_int (a n))\n           \\<notin> \\<rat> \\<Longrightarrow>\n    False", "assume asm: \"\\<not> ((\\<Sum>n. b n / a n) \\<notin> \\<rat>)\""], ["proof (state)\nthis:\n  \\<not> (\\<Sum>n. real_of_int (b n) / real_of_int (a n)) \\<notin> \\<rat>\n\ngoal (1 subgoal):\n 1. \\<not> (\\<Sum>n. real_of_int (b n) / real_of_int (a n))\n           \\<notin> \\<rat> \\<Longrightarrow>\n    False", "have ab_sum: \"summable (\\<lambda>j. b j / a j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable (\\<lambda>j. real_of_int (b j) / real_of_int (a j))", "using issummable[OF \\<open>A>1\\<close> d a b assu1 assu3 \\<open>convergent_prod d\\<close>]"], ["proof (prove)\nusing this:\n  summable (\\<lambda>j. real_of_int (b j) / real_of_int (a j))\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>j. real_of_int (b j) / real_of_int (a j))", "."], ["proof (state)\nthis:\n  summable (\\<lambda>j. real_of_int (b j) / real_of_int (a j))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<Sum>n. real_of_int (b n) / real_of_int (a n))\n           \\<notin> \\<rat> \\<Longrightarrow>\n    False", "obtain p q ::int where \"q>0\" and pq_def: \"(\\<lambda>n. b (n+1) / a (n+1)) sums (p/q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>q p.\n        \\<lbrakk>0 < q;\n         (\\<lambda>n.\n             real_of_int (b (n + 1)) / real_of_int (a (n + 1))) sums\n         (real_of_int p / real_of_int q)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>q p.\n        \\<lbrakk>0 < q;\n         (\\<lambda>n.\n             real_of_int (b (n + 1)) / real_of_int (a (n + 1))) sums\n         (real_of_int p / real_of_int q)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from asm"], ["proof (chain)\npicking this:\n  \\<not> (\\<Sum>n. real_of_int (b n) / real_of_int (a n)) \\<notin> \\<rat>", "have \"(\\<Sum>n. b n / a n) \\<in> \\<rat>\""], ["proof (prove)\nusing this:\n  \\<not> (\\<Sum>n. real_of_int (b n) / real_of_int (a n)) \\<notin> \\<rat>\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. real_of_int (b n) / real_of_int (a n)) \\<in> \\<rat>", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>n. real_of_int (b n) / real_of_int (a n)) \\<in> \\<rat>\n\ngoal (1 subgoal):\n 1. (\\<And>q p.\n        \\<lbrakk>0 < q;\n         (\\<lambda>n.\n             real_of_int (b (n + 1)) / real_of_int (a (n + 1))) sums\n         (real_of_int p / real_of_int q)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  (\\<Sum>n. real_of_int (b n) / real_of_int (a n)) \\<in> \\<rat>", "have \"(\\<Sum>n. b (n+1) / a (n+1)) \\<in> \\<rat>\""], ["proof (prove)\nusing this:\n  (\\<Sum>n. real_of_int (b n) / real_of_int (a n)) \\<in> \\<rat>\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. real_of_int (b (n + 1)) / real_of_int (a (n + 1)))\n    \\<in> \\<rat>", "apply (subst suminf_minus_initial_segment[OF ab_sum,of 1])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n. real_of_int (b n) / real_of_int (a n))\n    \\<in> \\<rat> \\<Longrightarrow>\n    (\\<Sum>n. real_of_int (b n) / real_of_int (a n)) -\n    (\\<Sum>i<1. real_of_int (b i) / real_of_int (a i))\n    \\<in> \\<rat>", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>n. real_of_int (b (n + 1)) / real_of_int (a (n + 1))) \\<in> \\<rat>\n\ngoal (1 subgoal):\n 1. (\\<And>q p.\n        \\<lbrakk>0 < q;\n         (\\<lambda>n.\n             real_of_int (b (n + 1)) / real_of_int (a (n + 1))) sums\n         (real_of_int p / real_of_int q)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  (\\<Sum>n. real_of_int (b (n + 1)) / real_of_int (a (n + 1))) \\<in> \\<rat>", "obtain p' q' ::int where \"q'\\<noteq>0\" and pq_def: \"(\\<lambda> n. b (n+1) / a (n+1) ) sums (p'/q')\""], ["proof (prove)\nusing this:\n  (\\<Sum>n. real_of_int (b (n + 1)) / real_of_int (a (n + 1))) \\<in> \\<rat>\n\ngoal (1 subgoal):\n 1. (\\<And>q' p'.\n        \\<lbrakk>q' \\<noteq> 0;\n         (\\<lambda>n.\n             real_of_int (b (n + 1)) / real_of_int (a (n + 1))) sums\n         (real_of_int p' / real_of_int q')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding Rats_eq_int_div_int"], ["proof (prove)\nusing this:\n  (\\<Sum>n. real_of_int (b (n + 1)) / real_of_int (a (n + 1)))\n  \\<in> {real_of_int i / real_of_int j |i j. j \\<noteq> 0}\n\ngoal (1 subgoal):\n 1. (\\<And>q' p'.\n        \\<lbrakk>q' \\<noteq> 0;\n         (\\<lambda>n.\n             real_of_int (b (n + 1)) / real_of_int (a (n + 1))) sums\n         (real_of_int p' / real_of_int q')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using summable_ignore_initial_segment[OF ab_sum,of 1,THEN summable_sums]"], ["proof (prove)\nusing this:\n  (\\<Sum>n. real_of_int (b (n + 1)) / real_of_int (a (n + 1)))\n  \\<in> {real_of_int i / real_of_int j |i j. j \\<noteq> 0}\n  (\\<lambda>n. real_of_int (b (n + 1)) / real_of_int (a (n + 1))) sums\n  (\\<Sum>n. real_of_int (b (n + 1)) / real_of_int (a (n + 1)))\n\ngoal (1 subgoal):\n 1. (\\<And>q' p'.\n        \\<lbrakk>q' \\<noteq> 0;\n         (\\<lambda>n.\n             real_of_int (b (n + 1)) / real_of_int (a (n + 1))) sums\n         (real_of_int p' / real_of_int q')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  q' \\<noteq> 0\n  (\\<lambda>n. real_of_int (b (n + 1)) / real_of_int (a (n + 1))) sums\n  (real_of_int p' / real_of_int q')\n\ngoal (1 subgoal):\n 1. (\\<And>q p.\n        \\<lbrakk>0 < q;\n         (\\<lambda>n.\n             real_of_int (b (n + 1)) / real_of_int (a (n + 1))) sums\n         (real_of_int p / real_of_int q)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define p q where \"p \\<equiv> (if q'<0 then -p' else p')\" and \"q \\<equiv> (if q'<0 then -q' else q')\""], ["proof (state)\nthis:\n  p \\<equiv> if q' < 0 then - p' else p'\n  q \\<equiv> if q' < 0 then - q' else q'\n\ngoal (1 subgoal):\n 1. (\\<And>q p.\n        \\<lbrakk>0 < q;\n         (\\<lambda>n.\n             real_of_int (b (n + 1)) / real_of_int (a (n + 1))) sums\n         (real_of_int p / real_of_int q)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"p'/q' = p/q\" \"q>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int p' / real_of_int q' = real_of_int p / real_of_int q &&&\n    0 < q", "using \\<open>q'\\<noteq>0\\<close>"], ["proof (prove)\nusing this:\n  q' \\<noteq> 0\n\ngoal (1 subgoal):\n 1. real_of_int p' / real_of_int q' = real_of_int p / real_of_int q &&&\n    0 < q", "unfolding p_def q_def"], ["proof (prove)\nusing this:\n  q' \\<noteq> 0\n\ngoal (1 subgoal):\n 1. real_of_int p' / real_of_int q' =\n    real_of_int (if q' < 0 then - p' else p') /\n    real_of_int (if q' < 0 then - q' else q') &&&\n    0 < (if q' < 0 then - q' else q')", "by auto"], ["proof (state)\nthis:\n  real_of_int p' / real_of_int q' = real_of_int p / real_of_int q\n  0 < q\n\ngoal (1 subgoal):\n 1. (\\<And>q p.\n        \\<lbrakk>0 < q;\n         (\\<lambda>n.\n             real_of_int (b (n + 1)) / real_of_int (a (n + 1))) sums\n         (real_of_int p / real_of_int q)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  real_of_int p' / real_of_int q' = real_of_int p / real_of_int q\n  0 < q", "show ?thesis"], ["proof (prove)\nusing this:\n  real_of_int p' / real_of_int q' = real_of_int p / real_of_int q\n  0 < q\n\ngoal (1 subgoal):\n 1. thesis", "using that[of q p] pq_def"], ["proof (prove)\nusing this:\n  real_of_int p' / real_of_int q' = real_of_int p / real_of_int q\n  0 < q\n  \\<lbrakk>0 < q;\n   (\\<lambda>n. real_of_int (b (n + 1)) / real_of_int (a (n + 1))) sums\n   (real_of_int p / real_of_int q)\\<rbrakk>\n  \\<Longrightarrow> thesis\n  (\\<lambda>n. real_of_int (b (n + 1)) / real_of_int (a (n + 1))) sums\n  (real_of_int p' / real_of_int q')\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < q\n  (\\<lambda>n. real_of_int (b (n + 1)) / real_of_int (a (n + 1))) sums\n  (real_of_int p / real_of_int q)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<Sum>n. real_of_int (b n) / real_of_int (a n))\n           \\<notin> \\<rat> \\<Longrightarrow>\n    False", "define ALPHA where \n    \"ALPHA = (\\<lambda>n. of_int q * (\\<Prod>j=1..n. of_int(a j)) * (\\<Sum>j. (b (j+n+1)/a (j+n+1))))\""], ["proof (state)\nthis:\n  ALPHA =\n  (\\<lambda>n.\n      real_of_int q * (\\<Prod>j = 1..n. real_of_int (a j)) *\n      (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1))))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<Sum>n. real_of_int (b n) / real_of_int (a n))\n           \\<notin> \\<rat> \\<Longrightarrow>\n    False", "have \"ALPHA n \\<ge> 1\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> ALPHA n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 \\<le> ALPHA n", "have \"(\\<Sum>n. b (n+1) / a (n+1)) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < (\\<Sum>n. real_of_int (b (n + 1)) / real_of_int (a (n + 1)))", "proof (rule suminf_pos)"], ["proof (state)\ngoal (2 subgoals):\n 1. summable (\\<lambda>n. real_of_int (b (n + 1)) / real_of_int (a (n + 1)))\n 2. \\<And>n. 0 < real_of_int (b (n + 1)) / real_of_int (a (n + 1))", "show \"summable (\\<lambda>n. b (n + 1) / real_of_int (a (n + 1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. real_of_int (b (n + 1)) / real_of_int (a (n + 1)))", "using summable_ignore_initial_segment[OF ab_sum,of 1]"], ["proof (prove)\nusing this:\n  summable (\\<lambda>n. real_of_int (b (n + 1)) / real_of_int (a (n + 1)))\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. real_of_int (b (n + 1)) / real_of_int (a (n + 1)))", "by auto"], ["proof (state)\nthis:\n  summable (\\<lambda>n. real_of_int (b (n + 1)) / real_of_int (a (n + 1)))\n\ngoal (1 subgoal):\n 1. \\<And>n. 0 < real_of_int (b (n + 1)) / real_of_int (a (n + 1))", "show \"\\<And>n. 0 < b (n + 1) / a (n + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n. 0 < real_of_int (b (n + 1)) / real_of_int (a (n + 1))", "using a b"], ["proof (prove)\nusing this:\n  \\<forall>n. 0 < a n\n  \\<forall>n. 0 < b n\n\ngoal (1 subgoal):\n 1. \\<And>n. 0 < real_of_int (b (n + 1)) / real_of_int (a (n + 1))", "by simp"], ["proof (state)\nthis:\n  0 < real_of_int (b (?n + 1)) / real_of_int (a (?n + 1))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < (\\<Sum>n. real_of_int (b (n + 1)) / real_of_int (a (n + 1)))\n\ngoal (1 subgoal):\n 1. 1 \\<le> ALPHA n", "then"], ["proof (chain)\npicking this:\n  0 < (\\<Sum>n. real_of_int (b (n + 1)) / real_of_int (a (n + 1)))", "have \"p/q > 0\""], ["proof (prove)\nusing this:\n  0 < (\\<Sum>n. real_of_int (b (n + 1)) / real_of_int (a (n + 1)))\n\ngoal (1 subgoal):\n 1. 0 < real_of_int p / real_of_int q", "using pq_def sums_unique"], ["proof (prove)\nusing this:\n  0 < (\\<Sum>n. real_of_int (b (n + 1)) / real_of_int (a (n + 1)))\n  (\\<lambda>n. real_of_int (b (n + 1)) / real_of_int (a (n + 1))) sums\n  (real_of_int p / real_of_int q)\n  ?f sums ?s \\<Longrightarrow> ?s = suminf ?f\n\ngoal (1 subgoal):\n 1. 0 < real_of_int p / real_of_int q", "by force"], ["proof (state)\nthis:\n  0 < real_of_int p / real_of_int q\n\ngoal (1 subgoal):\n 1. 1 \\<le> ALPHA n", "then"], ["proof (chain)\npicking this:\n  0 < real_of_int p / real_of_int q", "have \"q\\<ge>1\" \"p\\<ge>1\""], ["proof (prove)\nusing this:\n  0 < real_of_int p / real_of_int q\n\ngoal (1 subgoal):\n 1. 1 \\<le> q &&& 1 \\<le> p", "using \\<open>q>0\\<close>"], ["proof (prove)\nusing this:\n  0 < real_of_int p / real_of_int q\n  0 < q\n\ngoal (1 subgoal):\n 1. 1 \\<le> q &&& 1 \\<le> p", "by (auto simp add:divide_simps)"], ["proof (state)\nthis:\n  1 \\<le> q\n  1 \\<le> p\n\ngoal (1 subgoal):\n 1. 1 \\<le> ALPHA n", "moreover"], ["proof (state)\nthis:\n  1 \\<le> q\n  1 \\<le> p\n\ngoal (1 subgoal):\n 1. 1 \\<le> ALPHA n", "have \"\\<forall>n. 1 \\<le> a n\" \"\\<forall>n. 1 \\<le> b n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n. 1 \\<le> a n &&& \\<forall>n. 1 \\<le> b n", "using a b"], ["proof (prove)\nusing this:\n  \\<forall>n. 0 < a n\n  \\<forall>n. 0 < b n\n\ngoal (1 subgoal):\n 1. \\<forall>n. 1 \\<le> a n &&& \\<forall>n. 1 \\<le> b n", "by (auto simp add: int_one_le_iff_zero_less)"], ["proof (state)\nthis:\n  \\<forall>n. 1 \\<le> a n\n  \\<forall>n. 1 \\<le> b n\n\ngoal (1 subgoal):\n 1. 1 \\<le> ALPHA n", "ultimately"], ["proof (chain)\npicking this:\n  1 \\<le> q\n  1 \\<le> p\n  \\<forall>n. 1 \\<le> a n\n  \\<forall>n. 1 \\<le> b n", "show ?thesis"], ["proof (prove)\nusing this:\n  1 \\<le> q\n  1 \\<le> p\n  \\<forall>n. 1 \\<le> a n\n  \\<forall>n. 1 \\<le> b n\n\ngoal (1 subgoal):\n 1. 1 \\<le> ALPHA n", "unfolding ALPHA_def"], ["proof (prove)\nusing this:\n  1 \\<le> q\n  1 \\<le> p\n  \\<forall>n. 1 \\<le> a n\n  \\<forall>n. 1 \\<le> b n\n\ngoal (1 subgoal):\n 1. 1 \\<le> real_of_int q * (\\<Prod>j = 1..n. real_of_int (a j)) *\n            (\\<Sum>j.\n                real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))", "using show7[OF _ _ _ _ pq_def]"], ["proof (prove)\nusing this:\n  1 \\<le> q\n  1 \\<le> p\n  \\<forall>n. 1 \\<le> a n\n  \\<forall>n. 1 \\<le> b n\n  \\<lbrakk>1 \\<le> q; 1 \\<le> p; \\<forall>n. 1 \\<le> a n;\n   \\<forall>n. 1 \\<le> b n\\<rbrakk>\n  \\<Longrightarrow> 1 \\<le> real_of_int\n                             (q * (\\<Prod>j = 1..?n. of_int (a j))) *\n                            (\\<Sum>j.\n                                real_of_int (b (j + ?n + 1)) /\n                                real_of_int (a (j + ?n + 1)))\n\ngoal (1 subgoal):\n 1. 1 \\<le> real_of_int q * (\\<Prod>j = 1..n. real_of_int (a j)) *\n            (\\<Sum>j.\n                real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))", "by auto"], ["proof (state)\nthis:\n  1 \\<le> ALPHA n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  1 \\<le> ALPHA ?n\n\ngoal (1 subgoal):\n 1. \\<not> (\\<Sum>n. real_of_int (b n) / real_of_int (a n))\n           \\<notin> \\<rat> \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  1 \\<le> ALPHA ?n\n\ngoal (1 subgoal):\n 1. \\<not> (\\<Sum>n. real_of_int (b n) / real_of_int (a n))\n           \\<notin> \\<rat> \\<Longrightarrow>\n    False", "have \"\\<exists>n. ALPHA n < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n. ALPHA n < 1", "unfolding ALPHA_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n.\n       real_of_int q * (\\<Prod>j = 1..n. real_of_int (a j)) *\n       (\\<Sum>j. real_of_int (b (j + n + 1)) / real_of_int (a (j + n + 1)))\n       < 1", "proof (rule lasttoshow[OF d a \\<open>s>0\\<close> \\<open>q>0\\<close> \\<open>A>1\\<close> b _ assu3])"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>m\\<ge>s.\n       \\<exists>n\\<ge>m.\n          d (n + 1) *\n          (MAX j\\<in>{s..n}.\n              real_of_int (a j) powr (1 / real_of_int (2 ^ j)))\n          \\<le> real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))\n 2. \\<forall>\\<^sub>F n in sequentially.\n       (\\<Sum>j. real_of_int (b (n + j)) / real_of_int (a (n + j)))\n       \\<le> real_of_int (2 * b n) / real_of_int (a n)", "show \"\\<forall>\\<^sub>F n in sequentially. (\\<Sum>j. b (n+j) / a (n+j)) \\<le> (2 * b n) / a n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       (\\<Sum>j. real_of_int (b (n + j)) / real_of_int (a (n + j)))\n       \\<le> real_of_int (2 * b n) / real_of_int (a n)", "using show5[OF \\<open>A>1\\<close> d a b assu1 assu3 \\<open>convergent_prod d\\<close>]"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially.\n     (\\<Sum>j. real_of_int (b (n + j)) / real_of_int (a (n + j)))\n     \\<le> real_of_int (2 * b n) / real_of_int (a n)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       (\\<Sum>j. real_of_int (b (n + j)) / real_of_int (a (n + j)))\n       \\<le> real_of_int (2 * b n) / real_of_int (a n)", "by simp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     (\\<Sum>j. real_of_int (b (n + j)) / real_of_int (a (n + j)))\n     \\<le> real_of_int (2 * b n) / real_of_int (a n)\n\ngoal (1 subgoal):\n 1. \\<forall>m\\<ge>s.\n       \\<exists>n\\<ge>m.\n          d (n + 1) *\n          (MAX j\\<in>{s..n}.\n              real_of_int (a j) powr (1 / real_of_int (2 ^ j)))\n          \\<le> real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))", "show \"\\<forall>m\\<ge>s. \\<exists>n\\<ge>m. d (n+1) * (MAX j\\<in>{s..n}. a j powr (1 / of_int (2 ^ j)))\n                    \\<le> a (n+1) powr (1 / of_int (2 ^ (n+1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m\\<ge>s.\n       \\<exists>n\\<ge>m.\n          d (n + 1) *\n          (MAX j\\<in>{s..n}.\n              real_of_int (a j) powr (1 / real_of_int (2 ^ j)))\n          \\<le> real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))", "apply (rule show9[OF \\<open>A>1\\<close> d a \\<open>s>0\\<close> assu1 \\<open>convergent_prod d\\<close>])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n\\<ge>s.\n       (\\<Prod>j. d (n + j))\n       < A /\n         (MAX j\\<in>{s..n}.\n             real_of_int (a j) powr (1 / real_of_int (2 ^ j)))", "using show8[OF \\<open>A>1\\<close> d a \\<open>s>0\\<close> \\<open>convergent_prod d\\<close> assu2]"], ["proof (prove)\nusing this:\n  \\<forall>n\\<ge>s.\n     (\\<Prod>j. d (j + n))\n     < A /\n       (MAX j\\<in>{s..n}. real_of_int (a j) powr (1 / real_of_int (2 ^ j)))\n\ngoal (1 subgoal):\n 1. \\<forall>n\\<ge>s.\n       (\\<Prod>j. d (n + j))\n       < A /\n         (MAX j\\<in>{s..n}.\n             real_of_int (a j) powr (1 / real_of_int (2 ^ j)))", "by (simp add:algebra_simps)"], ["proof (state)\nthis:\n  \\<forall>m\\<ge>s.\n     \\<exists>n\\<ge>m.\n        d (n + 1) *\n        (MAX j\\<in>{s..n}. real_of_int (a j) powr (1 / real_of_int (2 ^ j)))\n        \\<le> real_of_int (a (n + 1)) powr (1 / real_of_int (2 ^ (n + 1)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>n. ALPHA n < 1\n\ngoal (1 subgoal):\n 1. \\<not> (\\<Sum>n. real_of_int (b n) / real_of_int (a n))\n           \\<notin> \\<rat> \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  1 \\<le> ALPHA ?n\n  \\<exists>n. ALPHA n < 1", "show False"], ["proof (prove)\nusing this:\n  1 \\<le> ALPHA ?n\n  \\<exists>n. ALPHA n < 1\n\ngoal (1 subgoal):\n 1. False", "using not_le"], ["proof (prove)\nusing this:\n  1 \\<le> ALPHA ?n\n  \\<exists>n. ALPHA n < 1\n  (\\<not> ?x \\<le> ?y) = (?y < ?x)\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary Hancl3corollary:\n  fixes A::real and  a b :: \"nat\\<Rightarrow>int\"\n  assumes \"A > 1\" and a: \"\\<forall>n. a n>0\" and b: \"\\<forall>n. b n>0\"\n    and assu1: \"(\\<lambda>n. (a n) powr(1 / of_int(2^n))) \\<longlonglongrightarrow> A\"\n    and asscor2: \"\\<forall>n \\<ge> 6. a n powr(1 / of_int (2^n)) * (1 + 4*(2/3)^n) \\<le> A\n                        \\<and> b n \\<le> 2 powr (4/3)^(n-1)\"\n  shows \"(\\<Sum>n. b n / a n) \\<notin> \\<rat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n. real_of_int (b n) / real_of_int (a n)) \\<notin> \\<rat>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>n. real_of_int (b n) / real_of_int (a n)) \\<notin> \\<rat>", "define d::\"nat\\<Rightarrow>real\" where \"d= (\\<lambda> n. 1+(2/3)^(n+1))\""], ["proof (state)\nthis:\n  d = (\\<lambda>n. 1 + (2 / 3) ^ (n + 1))\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. real_of_int (b n) / real_of_int (a n)) \\<notin> \\<rat>", "have dgt1:\"\\<forall>n. 1 < d n \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n. 1 < d n", "unfolding d_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n. 1 < 1 + (2 / 3) ^ (n + 1)", "by auto"], ["proof (state)\nthis:\n  \\<forall>n. 1 < d n\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. real_of_int (b n) / real_of_int (a n)) \\<notin> \\<rat>", "moreover"], ["proof (state)\nthis:\n  \\<forall>n. 1 < d n\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. real_of_int (b n) / real_of_int (a n)) \\<notin> \\<rat>", "have \"convergent_prod d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. convergent_prod d", "unfolding d_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. convergent_prod (\\<lambda>n. 1 + (2 / 3) ^ (n + 1))", "by (simp add: abs_convergent_prod_imp_convergent_prod summable_imp_abs_convergent_prod)"], ["proof (state)\nthis:\n  convergent_prod d\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. real_of_int (b n) / real_of_int (a n)) \\<notin> \\<rat>", "moreover"], ["proof (state)\nthis:\n  convergent_prod d\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. real_of_int (b n) / real_of_int (a n)) \\<notin> \\<rat>", "have \"\\<forall>n\\<ge>6. (\\<Prod>j. d (n+j)) < A / a n powr (1 / of_int (2 ^ n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n\\<ge>6.\n       (\\<Prod>j. d (n + j))\n       < A / real_of_int (a n) powr (1 / real_of_int (2 ^ n))", "proof (intro strip)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       6 \\<le> n \\<Longrightarrow>\n       (\\<Prod>j. d (n + j))\n       < A / real_of_int (a n) powr (1 / real_of_int (2 ^ n))", "fix n::nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       6 \\<le> n \\<Longrightarrow>\n       (\\<Prod>j. d (n + j))\n       < A / real_of_int (a n) powr (1 / real_of_int (2 ^ n))", "assume \"6 \\<le> n\""], ["proof (state)\nthis:\n  6 \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       6 \\<le> n \\<Longrightarrow>\n       (\\<Prod>j. d (n + j))\n       < A / real_of_int (a n) powr (1 / real_of_int (2 ^ n))", "have d_sum:\"summable (\\<lambda>j. ln (d j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable (\\<lambda>j. ln (d j))", "unfolding d_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. summable (\\<lambda>j. ln (1 + (2 / 3) ^ (j + 1)))", "by (auto intro: summable_ln_plus)"], ["proof (state)\nthis:\n  summable (\\<lambda>j. ln (d j))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       6 \\<le> n \\<Longrightarrow>\n       (\\<Prod>j. d (n + j))\n       < A / real_of_int (a n) powr (1 / real_of_int (2 ^ n))", "have \"(\\<Sum>j. ln (d (n + j))) < ln (1+4 * (2/3) ^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j. ln (d (n + j))) < ln (1 + 4 * (2 / 3) ^ n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>j. ln (d (n + j))) < ln (1 + 4 * (2 / 3) ^ n)", "define c::real where \"c = (2/3) ^ n\""], ["proof (state)\nthis:\n  c = (2 / 3) ^ n\n\ngoal (1 subgoal):\n 1. (\\<Sum>j. ln (d (n + j))) < ln (1 + 4 * (2 / 3) ^ n)", "have \"0<c\" \"c<1/8\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < c &&& c < 1 / 8", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < c\n 2. c < 1 / 8", "have \"c = (2/3)^6 * (2/3) ^ (n-6)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c = (2 / 3) ^ 6 * (2 / 3) ^ (n - 6)", "unfolding c_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (2 / 3) ^ n = (2 / 3) ^ 6 * (2 / 3) ^ (n - 6)", "using \\<open>n\\<ge>6\\<close>"], ["proof (prove)\nusing this:\n  6 \\<le> n\n\ngoal (1 subgoal):\n 1. (2 / 3) ^ n = (2 / 3) ^ 6 * (2 / 3) ^ (n - 6)", "by (metis le_add_diff_inverse power_add)"], ["proof (state)\nthis:\n  c = (2 / 3) ^ 6 * (2 / 3) ^ (n - 6)\n\ngoal (2 subgoals):\n 1. 0 < c\n 2. c < 1 / 8", "also"], ["proof (state)\nthis:\n  c = (2 / 3) ^ 6 * (2 / 3) ^ (n - 6)\n\ngoal (2 subgoals):\n 1. 0 < c\n 2. c < 1 / 8", "have \"... \\<le> (2/3)^6\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (2 / 3) ^ 6 * (2 / 3) ^ (n - 6) \\<le> (2 / 3) ^ 6", "by (auto intro:power_le_one)"], ["proof (state)\nthis:\n  (2 / 3) ^ 6 * (2 / 3) ^ (n - 6) \\<le> (2 / 3) ^ 6\n\ngoal (2 subgoals):\n 1. 0 < c\n 2. c < 1 / 8", "also"], ["proof (state)\nthis:\n  (2 / 3) ^ 6 * (2 / 3) ^ (n - 6) \\<le> (2 / 3) ^ 6\n\ngoal (2 subgoals):\n 1. 0 < c\n 2. c < 1 / 8", "have \"... < 1/8\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (2 / 3) ^ 6 < 1 / 8", "by (auto simp add:field_simps)"], ["proof (state)\nthis:\n  (2 / 3) ^ 6 < 1 / 8\n\ngoal (2 subgoals):\n 1. 0 < c\n 2. c < 1 / 8", "finally"], ["proof (chain)\npicking this:\n  c < 1 / 8", "show \"c < 1/8\""], ["proof (prove)\nusing this:\n  c < 1 / 8\n\ngoal (1 subgoal):\n 1. c < 1 / 8", "."], ["proof (state)\nthis:\n  c < 1 / 8\n\ngoal (1 subgoal):\n 1. 0 < c", "qed (simp add:c_def)"], ["proof (state)\nthis:\n  0 < c\n  c < 1 / 8\n\ngoal (1 subgoal):\n 1. (\\<Sum>j. ln (d (n + j))) < ln (1 + 4 * (2 / 3) ^ n)", "have \"(\\<Sum>j. ln (d (n + j))) \\<le> (\\<Sum>j. (2/3) ^ (n + j + 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j. ln (d (n + j))) \\<le> (\\<Sum>j. (2 / 3) ^ (n + j + 1))", "proof (rule suminf_le)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>na. ln (d (n + na)) \\<le> (2 / 3) ^ (n + na + 1)\n 2. summable (\\<lambda>j. ln (d (n + j)))\n 3. summable (\\<lambda>j. (2 / 3) ^ (n + j + 1))", "show \"\\<And>j. ln (d (n + j)) \\<le> (2/3) ^ (n + j + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>j. ln (d (n + j)) \\<le> (2 / 3) ^ (n + j + 1)", "unfolding d_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>j. ln (1 + (2 / 3) ^ (n + j + 1)) \\<le> (2 / 3) ^ (n + j + 1)", "by (metis divide_pos_pos less_eq_real_def ln_add_one_self_le_self zero_less_numeral zero_less_power)"], ["proof (state)\nthis:\n  ln (d (n + ?j)) \\<le> (2 / 3) ^ (n + ?j + 1)\n\ngoal (2 subgoals):\n 1. summable (\\<lambda>j. ln (d (n + j)))\n 2. summable (\\<lambda>j. (2 / 3) ^ (n + j + 1))", "show \"summable (\\<lambda>j. ln (d (n + j)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable (\\<lambda>j. ln (d (n + j)))", "using summable_ignore_initial_segment[OF d_sum]"], ["proof (prove)\nusing this:\n  summable (\\<lambda>n. ln (d (n + ?k)))\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>j. ln (d (n + j)))", "by (force simp add: algebra_simps)"], ["proof (state)\nthis:\n  summable (\\<lambda>j. ln (d (n + j)))\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>j. (2 / 3) ^ (n + j + 1))", "show \"summable (\\<lambda>j. (2 / 3::real) ^ (n + j + 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable (\\<lambda>j. (2 / 3) ^ (n + j + 1))", "using summable_geometric[THEN summable_ignore_initial_segment,of \"2/3\" \"n+1\"]"], ["proof (prove)\nusing this:\n  norm ((2::?'a2) / (3::?'a2)) < 1 \\<Longrightarrow>\n  summable (\\<lambda>na. ((2::?'a2) / (3::?'a2)) ^ (na + (n + 1)))\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>j. (2 / 3) ^ (n + j + 1))", "by (auto simp add:algebra_simps)"], ["proof (state)\nthis:\n  summable (\\<lambda>j. (2 / 3) ^ (n + j + 1))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>j. ln (d (n + j))) \\<le> (\\<Sum>j. (2 / 3) ^ (n + j + 1))\n\ngoal (1 subgoal):\n 1. (\\<Sum>j. ln (d (n + j))) < ln (1 + 4 * (2 / 3) ^ n)", "also"], ["proof (state)\nthis:\n  (\\<Sum>j. ln (d (n + j))) \\<le> (\\<Sum>j. (2 / 3) ^ (n + j + 1))\n\ngoal (1 subgoal):\n 1. (\\<Sum>j. ln (d (n + j))) < ln (1 + 4 * (2 / 3) ^ n)", "have \"... = (\\<Sum>j. (2/3)^(n+1)*(2/3) ^ j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j. (2 / 3) ^ (n + j + 1)) =\n    (\\<Sum>j. (2 / 3) ^ (n + 1) * (2 / 3) ^ j)", "by (auto simp add:algebra_simps power_add)"], ["proof (state)\nthis:\n  (\\<Sum>j. (2 / 3) ^ (n + j + 1)) =\n  (\\<Sum>j. (2 / 3) ^ (n + 1) * (2 / 3) ^ j)\n\ngoal (1 subgoal):\n 1. (\\<Sum>j. ln (d (n + j))) < ln (1 + 4 * (2 / 3) ^ n)", "also"], ["proof (state)\nthis:\n  (\\<Sum>j. (2 / 3) ^ (n + j + 1)) =\n  (\\<Sum>j. (2 / 3) ^ (n + 1) * (2 / 3) ^ j)\n\ngoal (1 subgoal):\n 1. (\\<Sum>j. ln (d (n + j))) < ln (1 + 4 * (2 / 3) ^ n)", "have \"... = (2/3)^(n+1) * (\\<Sum>j. (2/3) ^ j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j. (2 / 3) ^ (n + 1) * (2 / 3) ^ j) =\n    (2 / 3) ^ (n + 1) * (\\<Sum>j. (2 / 3) ^ j)", "by (force intro!: summable_geometric suminf_mult)"], ["proof (state)\nthis:\n  (\\<Sum>j. (2 / 3) ^ (n + 1) * (2 / 3) ^ j) =\n  (2 / 3) ^ (n + 1) * (\\<Sum>j. (2 / 3) ^ j)\n\ngoal (1 subgoal):\n 1. (\\<Sum>j. ln (d (n + j))) < ln (1 + 4 * (2 / 3) ^ n)", "also"], ["proof (state)\nthis:\n  (\\<Sum>j. (2 / 3) ^ (n + 1) * (2 / 3) ^ j) =\n  (2 / 3) ^ (n + 1) * (\\<Sum>j. (2 / 3) ^ j)\n\ngoal (1 subgoal):\n 1. (\\<Sum>j. ln (d (n + j))) < ln (1 + 4 * (2 / 3) ^ n)", "have \"... = 2 * c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (2 / 3) ^ (n + 1) * (\\<Sum>j. (2 / 3) ^ j) = 2 * c", "unfolding c_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (2 / 3) ^ (n + 1) * (\\<Sum>j. (2 / 3) ^ j) = 2 * (2 / 3) ^ n", "by (simp add: suminf_geometric)"], ["proof (state)\nthis:\n  (2 / 3) ^ (n + 1) * (\\<Sum>j. (2 / 3) ^ j) = 2 * c\n\ngoal (1 subgoal):\n 1. (\\<Sum>j. ln (d (n + j))) < ln (1 + 4 * (2 / 3) ^ n)", "also"], ["proof (state)\nthis:\n  (2 / 3) ^ (n + 1) * (\\<Sum>j. (2 / 3) ^ j) = 2 * c\n\ngoal (1 subgoal):\n 1. (\\<Sum>j. ln (d (n + j))) < ln (1 + 4 * (2 / 3) ^ n)", "have \"... <  4 * c - (4 * c)\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * c < 4 * c - (4 * c)\\<^sup>2", "using \\<open>0<c\\<close> \\<open>c<1/8\\<close>"], ["proof (prove)\nusing this:\n  0 < c\n  c < 1 / 8\n\ngoal (1 subgoal):\n 1. 2 * c < 4 * c - (4 * c)\\<^sup>2", "by (sos \"((((A<0 * A<1) * R<1) + ((A<=0 * R<1) * (R<1/16 * [1]^2))))\")"], ["proof (state)\nthis:\n  2 * c < 4 * c - (4 * c)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (\\<Sum>j. ln (d (n + j))) < ln (1 + 4 * (2 / 3) ^ n)", "also"], ["proof (state)\nthis:\n  2 * c < 4 * c - (4 * c)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (\\<Sum>j. ln (d (n + j))) < ln (1 + 4 * (2 / 3) ^ n)", "have \"... \\<le> ln (1 + 4 * c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 4 * c - (4 * c)\\<^sup>2 \\<le> ln (1 + 4 * c)", "apply (rule ln_one_plus_pos_lower_bound)"], ["proof (prove)\ngoal (2 subgoals):\n 1. 0 \\<le> 4 * c\n 2. 4 * c \\<le> 1", "using \\<open>0<c\\<close> \\<open>c<1/8\\<close>"], ["proof (prove)\nusing this:\n  0 < c\n  c < 1 / 8\n\ngoal (2 subgoals):\n 1. 0 \\<le> 4 * c\n 2. 4 * c \\<le> 1", "by auto"], ["proof (state)\nthis:\n  4 * c - (4 * c)\\<^sup>2 \\<le> ln (1 + 4 * c)\n\ngoal (1 subgoal):\n 1. (\\<Sum>j. ln (d (n + j))) < ln (1 + 4 * (2 / 3) ^ n)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>j. ln (d (n + j))) < ln (1 + 4 * c)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>j. ln (d (n + j))) < ln (1 + 4 * c)\n\ngoal (1 subgoal):\n 1. (\\<Sum>j. ln (d (n + j))) < ln (1 + 4 * (2 / 3) ^ n)", "unfolding c_def"], ["proof (prove)\nusing this:\n  (\\<Sum>j. ln (d (n + j))) < ln (1 + 4 * (2 / 3) ^ n)\n\ngoal (1 subgoal):\n 1. (\\<Sum>j. ln (d (n + j))) < ln (1 + 4 * (2 / 3) ^ n)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>j. ln (d (n + j))) < ln (1 + 4 * (2 / 3) ^ n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>j. ln (d (n + j))) < ln (1 + 4 * (2 / 3) ^ n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       6 \\<le> n \\<Longrightarrow>\n       (\\<Prod>j. d (n + j))\n       < A / real_of_int (a n) powr (1 / real_of_int (2 ^ n))", "then"], ["proof (chain)\npicking this:\n  (\\<Sum>j. ln (d (n + j))) < ln (1 + 4 * (2 / 3) ^ n)", "have \"exp (\\<Sum>j. ln (d (n + j))) < 1 + 4 * (2/3) ^ n\""], ["proof (prove)\nusing this:\n  (\\<Sum>j. ln (d (n + j))) < ln (1 + 4 * (2 / 3) ^ n)\n\ngoal (1 subgoal):\n 1. exp (\\<Sum>j. ln (d (n + j))) < 1 + 4 * (2 / 3) ^ n", "by (smt (z3) divide_pos_pos ln_exp ln_ge_iff zero_less_power)"], ["proof (state)\nthis:\n  exp (\\<Sum>j. ln (d (n + j))) < 1 + 4 * (2 / 3) ^ n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       6 \\<le> n \\<Longrightarrow>\n       (\\<Prod>j. d (n + j))\n       < A / real_of_int (a n) powr (1 / real_of_int (2 ^ n))", "moreover"], ["proof (state)\nthis:\n  exp (\\<Sum>j. ln (d (n + j))) < 1 + 4 * (2 / 3) ^ n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       6 \\<le> n \\<Longrightarrow>\n       (\\<Prod>j. d (n + j))\n       < A / real_of_int (a n) powr (1 / real_of_int (2 ^ n))", "have \"exp (\\<Sum>j. ln (d (n + j))) = (\\<Prod>j. d (n + j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (\\<Sum>j. ln (d (n + j))) = (\\<Prod>j. d (n + j))", "proof (subst exp_suminf_prodinf_real [symmetric])"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>na. 0 \\<le> ln (d (n + na))\n 2. abs_convergent_prod (\\<lambda>na. exp (ln (d (n + na))))\n 3. (\\<Prod>i. exp (ln (d (n + i)))) = (\\<Prod>j. d (n + j))", "show \"\\<And>k. 0 \\<le> ln (d (n + k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k. 0 \\<le> ln (d (n + k))", "using dgt1"], ["proof (prove)\nusing this:\n  \\<forall>n. 1 < d n\n\ngoal (1 subgoal):\n 1. \\<And>k. 0 \\<le> ln (d (n + k))", "by (simp add: less_imp_le)"], ["proof (state)\nthis:\n  0 \\<le> ln (d (n + ?k))\n\ngoal (2 subgoals):\n 1. abs_convergent_prod (\\<lambda>na. exp (ln (d (n + na))))\n 2. (\\<Prod>i. exp (ln (d (n + i)))) = (\\<Prod>j. d (n + j))", "show \"abs_convergent_prod (\\<lambda>na. exp (ln (d (n + na))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. abs_convergent_prod (\\<lambda>na. exp (ln (d (n + na))))", "proof (subst exp_ln)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>na. 0 < d (n + na)\n 2. abs_convergent_prod (\\<lambda>na. d (n + na))", "show \"\\<And>j. 0 < d (n + j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>j. 0 < d (n + j)", "using dgt1 le_less_trans zero_le_one"], ["proof (prove)\nusing this:\n  \\<forall>n. 1 < d n\n  \\<lbrakk>?x \\<le> ?y; ?y < ?z\\<rbrakk> \\<Longrightarrow> ?x < ?z\n  (0::?'a) \\<le> (1::?'a)\n\ngoal (1 subgoal):\n 1. \\<And>j. 0 < d (n + j)", "by blast"], ["proof (state)\nthis:\n  0 < d (n + ?j)\n\ngoal (1 subgoal):\n 1. abs_convergent_prod (\\<lambda>na. d (n + na))", "show \"abs_convergent_prod (\\<lambda>j. d (n + j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. abs_convergent_prod (\\<lambda>j. d (n + j))", "unfolding abs_convergent_prod_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. convergent_prod (\\<lambda>i. 1 + norm (d (n + i) - 1))", "using \\<open>convergent_prod d\\<close>"], ["proof (prove)\nusing this:\n  convergent_prod d\n\ngoal (1 subgoal):\n 1. convergent_prod (\\<lambda>i. 1 + norm (d (n + i) - 1))", "by (simp add: dgt1 convergent_prod_iff_shift less_imp_le algebra_simps)"], ["proof (state)\nthis:\n  abs_convergent_prod (\\<lambda>j. d (n + j))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  abs_convergent_prod (\\<lambda>na. exp (ln (d (n + na))))\n\ngoal (1 subgoal):\n 1. (\\<Prod>i. exp (ln (d (n + i)))) = (\\<Prod>j. d (n + j))", "show \"(\\<Prod>j. exp (ln (d (n + j)))) = (\\<Prod>j. d (n + j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>j. exp (ln (d (n + j)))) = (\\<Prod>j. d (n + j))", "by (meson dgt1 exp_ln not_less not_one_less_zero order_trans)"], ["proof (state)\nthis:\n  (\\<Prod>j. exp (ln (d (n + j)))) = (\\<Prod>j. d (n + j))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  exp (\\<Sum>j. ln (d (n + j))) = (\\<Prod>j. d (n + j))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       6 \\<le> n \\<Longrightarrow>\n       (\\<Prod>j. d (n + j))\n       < A / real_of_int (a n) powr (1 / real_of_int (2 ^ n))", "ultimately"], ["proof (chain)\npicking this:\n  exp (\\<Sum>j. ln (d (n + j))) < 1 + 4 * (2 / 3) ^ n\n  exp (\\<Sum>j. ln (d (n + j))) = (\\<Prod>j. d (n + j))", "have \"(\\<Prod>j. d (n + j))  < 1 + 4 * (2/3) ^ n\""], ["proof (prove)\nusing this:\n  exp (\\<Sum>j. ln (d (n + j))) < 1 + 4 * (2 / 3) ^ n\n  exp (\\<Sum>j. ln (d (n + j))) = (\\<Prod>j. d (n + j))\n\ngoal (1 subgoal):\n 1. (\\<Prod>j. d (n + j)) < 1 + 4 * (2 / 3) ^ n", "by simp"], ["proof (state)\nthis:\n  (\\<Prod>j. d (n + j)) < 1 + 4 * (2 / 3) ^ n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       6 \\<le> n \\<Longrightarrow>\n       (\\<Prod>j. d (n + j))\n       < A / real_of_int (a n) powr (1 / real_of_int (2 ^ n))", "also"], ["proof (state)\nthis:\n  (\\<Prod>j. d (n + j)) < 1 + 4 * (2 / 3) ^ n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       6 \\<le> n \\<Longrightarrow>\n       (\\<Prod>j. d (n + j))\n       < A / real_of_int (a n) powr (1 / real_of_int (2 ^ n))", "have \"... \\<le> A / (a n) powr (1 / of_int (2 ^ n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 + 4 * (2 / 3) ^ n\n    \\<le> A / real_of_int (a n) powr (1 / real_of_int (2 ^ n))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 + 4 * (2 / 3) ^ n\n    \\<le> A / real_of_int (a n) powr (1 / real_of_int (2 ^ n))", "have \"a n powr (1 / real_of_int (2 ^ n)) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < real_of_int (a n) powr (1 / real_of_int (2 ^ n))", "using a[rule_format,of n]"], ["proof (prove)\nusing this:\n  0 < a n\n\ngoal (1 subgoal):\n 1. 0 < real_of_int (a n) powr (1 / real_of_int (2 ^ n))", "by auto"], ["proof (state)\nthis:\n  0 < real_of_int (a n) powr (1 / real_of_int (2 ^ n))\n\ngoal (1 subgoal):\n 1. 1 + 4 * (2 / 3) ^ n\n    \\<le> A / real_of_int (a n) powr (1 / real_of_int (2 ^ n))", "then"], ["proof (chain)\npicking this:\n  0 < real_of_int (a n) powr (1 / real_of_int (2 ^ n))", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < real_of_int (a n) powr (1 / real_of_int (2 ^ n))\n\ngoal (1 subgoal):\n 1. 1 + 4 * (2 / 3) ^ n\n    \\<le> A / real_of_int (a n) powr (1 / real_of_int (2 ^ n))", "using asscor2[rule_format,OF \\<open>6\\<le>n\\<close>]"], ["proof (prove)\nusing this:\n  0 < real_of_int (a n) powr (1 / real_of_int (2 ^ n))\n  real_of_int (a n) powr (1 / real_of_int (2 ^ n)) * (1 + 4 * (2 / 3) ^ n)\n  \\<le> A \\<and>\n  real_of_int (b n) \\<le> 2 powr (4 / 3) ^ (n - 1)\n\ngoal (1 subgoal):\n 1. 1 + 4 * (2 / 3) ^ n\n    \\<le> A / real_of_int (a n) powr (1 / real_of_int (2 ^ n))", "by (auto simp add:field_simps)"], ["proof (state)\nthis:\n  1 + 4 * (2 / 3) ^ n\n  \\<le> A / real_of_int (a n) powr (1 / real_of_int (2 ^ n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  1 + 4 * (2 / 3) ^ n\n  \\<le> A / real_of_int (a n) powr (1 / real_of_int (2 ^ n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       6 \\<le> n \\<Longrightarrow>\n       (\\<Prod>j. d (n + j))\n       < A / real_of_int (a n) powr (1 / real_of_int (2 ^ n))", "finally"], ["proof (chain)\npicking this:\n  (\\<Prod>j. d (n + j))\n  < A / real_of_int (a n) powr (1 / real_of_int (2 ^ n))", "show \"(\\<Prod>j. d (n + j)) < A / real_of_int (a n) powr (1 / of_int (2 ^ n))\""], ["proof (prove)\nusing this:\n  (\\<Prod>j. d (n + j))\n  < A / real_of_int (a n) powr (1 / real_of_int (2 ^ n))\n\ngoal (1 subgoal):\n 1. (\\<Prod>j. d (n + j))\n    < A / real_of_int (a n) powr (1 / real_of_int (2 ^ n))", "."], ["proof (state)\nthis:\n  (\\<Prod>j. d (n + j))\n  < A / real_of_int (a n) powr (1 / real_of_int (2 ^ n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n\\<ge>6.\n     (\\<Prod>j. d (n + j))\n     < A / real_of_int (a n) powr (1 / real_of_int (2 ^ n))\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. real_of_int (b n) / real_of_int (a n)) \\<notin> \\<rat>", "moreover"], ["proof (state)\nthis:\n  \\<forall>n\\<ge>6.\n     (\\<Prod>j. d (n + j))\n     < A / real_of_int (a n) powr (1 / real_of_int (2 ^ n))\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. real_of_int (b n) / real_of_int (a n)) \\<notin> \\<rat>", "have \"LIM n sequentially. d n ^ 2 ^ n / real_of_int (b n) :> at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LIM n sequentially. d n ^ 2 ^ n / real_of_int (b n) :> at_top", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. LIM n sequentially. d n ^ 2 ^ n / real_of_int (b n) :> at_top", "have \"LIM n sequentially. d n ^ 2 ^ n / 2 powr((4/3)^(n-1)) :> at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LIM n sequentially. d n ^ 2 ^ n / 2 powr (4 / 3) ^ (n - 1) :> at_top", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. LIM n sequentially. d n ^ 2 ^ n / 2 powr (4 / 3) ^ (n - 1) :> at_top", "define n1 where \"n1 \\<equiv> (\\<lambda>n. (2::real) * (3/2)^(n-1))\""], ["proof (state)\nthis:\n  n1 \\<equiv> \\<lambda>n. 2 * (3 / 2) ^ (n - 1)\n\ngoal (1 subgoal):\n 1. LIM n sequentially. d n ^ 2 ^ n / 2 powr (4 / 3) ^ (n - 1) :> at_top", "define n2 where \"n2 \\<equiv> (\\<lambda>n. ((4::real)/3)^(n-1))\""], ["proof (state)\nthis:\n  n2 \\<equiv> \\<lambda>n. (4 / 3) ^ (n - 1)\n\ngoal (1 subgoal):\n 1. LIM n sequentially. d n ^ 2 ^ n / 2 powr (4 / 3) ^ (n - 1) :> at_top", "have \"LIM n sequentially. (((1+(8/9)/(n1 n)) powr (n1 n))/2) powr (n2 n) :> at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LIM n sequentially.\n       ((1 + 8 / 9 / n1 n) powr n1 n / 2) powr n2 n :> at_top", "proof (rule filterlim_at_top_powr_real[where g'=\"exp (8/9) / 2\"])"], ["proof (state)\ngoal (3 subgoals):\n 1. filterlim n2 at_top sequentially\n 2. (\\<lambda>x. (1 + 8 / 9 / n1 x) powr n1 x / 2)\n    \\<longlonglongrightarrow> exp (8 / 9) / 2\n 3. 1 < exp (8 / 9) / 2", "define e1 where \"e1 = exp (8/9) / (2::real)\""], ["proof (state)\nthis:\n  e1 = exp (8 / 9) / 2\n\ngoal (3 subgoals):\n 1. filterlim n2 at_top sequentially\n 2. (\\<lambda>x. (1 + 8 / 9 / n1 x) powr n1 x / 2)\n    \\<longlonglongrightarrow> exp (8 / 9) / 2\n 3. 1 < exp (8 / 9) / 2", "show \"e1>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < e1", "unfolding e1_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < exp (8 / 9) / 2", "by (approximation 4)"], ["proof (state)\nthis:\n  1 < e1\n\ngoal (2 subgoals):\n 1. filterlim n2 at_top sequentially\n 2. (\\<lambda>x. (1 + 8 / 9 / n1 x) powr n1 x / 2)\n    \\<longlonglongrightarrow> exp (8 / 9) / 2", "show \"(\\<lambda>n. ((1+(8/9)/(n1 n)) powr (n1 n))/2) \\<longlonglongrightarrow> e1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. (1 + 8 / 9 / n1 n) powr n1 n / 2)\n    \\<longlonglongrightarrow> e1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>n. (1 + 8 / 9 / n1 n) powr n1 n / 2)\n    \\<longlonglongrightarrow> e1", "have \"(\\<lambda>n. (1+(8/9)/(n1 n)) powr (n1 n)) \\<longlonglongrightarrow> exp (8/9)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. (1 + 8 / 9 / n1 n) powr n1 n)\n    \\<longlonglongrightarrow> exp (8 / 9)", "apply (rule filterlim_compose[OF tendsto_exp_limit_at_top])"], ["proof (prove)\ngoal (1 subgoal):\n 1. filterlim n1 at_top sequentially", "unfolding n1_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. LIM x sequentially. 2 * (3 / 2) ^ (x - 1) :> at_top", "by (auto intro!: filterlim_tendsto_pos_mult_at_top \n                filterlim_realpow_sequentially_at_top\n                simp:filterlim_sequentially_iff[of \"\\<lambda>x. (3 / 2) ^ (x - Suc 0)\" _ 1])"], ["proof (state)\nthis:\n  (\\<lambda>n. (1 + 8 / 9 / n1 n) powr n1 n)\n  \\<longlonglongrightarrow> exp (8 / 9)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. (1 + 8 / 9 / n1 n) powr n1 n / 2)\n    \\<longlonglongrightarrow> e1", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n. (1 + 8 / 9 / n1 n) powr n1 n)\n  \\<longlonglongrightarrow> exp (8 / 9)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>n. (1 + 8 / 9 / n1 n) powr n1 n)\n  \\<longlonglongrightarrow> exp (8 / 9)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. (1 + 8 / 9 / n1 n) powr n1 n / 2)\n    \\<longlonglongrightarrow> e1", "unfolding e1_def"], ["proof (prove)\nusing this:\n  (\\<lambda>n. (1 + 8 / 9 / n1 n) powr n1 n)\n  \\<longlonglongrightarrow> exp (8 / 9)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. (1 + 8 / 9 / n1 n) powr n1 n / 2)\n    \\<longlonglongrightarrow> exp (8 / 9) / 2", "by (intro tendsto_intros,auto)"], ["proof (state)\nthis:\n  (\\<lambda>n. (1 + 8 / 9 / n1 n) powr n1 n / 2)\n  \\<longlonglongrightarrow> e1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>n. (1 + 8 / 9 / n1 n) powr n1 n / 2)\n  \\<longlonglongrightarrow> e1\n\ngoal (1 subgoal):\n 1. filterlim n2 at_top sequentially", "show \"filterlim n2 at_top sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filterlim n2 at_top sequentially", "unfolding n2_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. LIM n sequentially. (4 / 3) ^ (n - 1) :> at_top", "apply (subst filterlim_sequentially_iff[of \"\\<lambda>n. (4 / 3) ^ (n - 1)\" _ 1])"], ["proof (prove)\ngoal (1 subgoal):\n 1. LIM x sequentially. (4 / 3) ^ (x + 1 - 1) :> at_top", "by (auto intro:filterlim_realpow_sequentially_at_top)"], ["proof (state)\nthis:\n  filterlim n2 at_top sequentially\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  LIM n sequentially. ((1 + 8 / 9 / n1 n) powr n1 n / 2) powr n2 n :> at_top\n\ngoal (1 subgoal):\n 1. LIM n sequentially. d n ^ 2 ^ n / 2 powr (4 / 3) ^ (n - 1) :> at_top", "moreover"], ["proof (state)\nthis:\n  LIM n sequentially. ((1 + 8 / 9 / n1 n) powr n1 n / 2) powr n2 n :> at_top\n\ngoal (1 subgoal):\n 1. LIM n sequentially. d n ^ 2 ^ n / 2 powr (4 / 3) ^ (n - 1) :> at_top", "have \"\\<forall>\\<^sub>F n in sequentially. (((1+(8/9)/(n1 n)) powr (n1 n))/2) powr (n2 n)\n        = d n ^ 2 ^ n / 2 powr((4/3)^(n-1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       ((1 + 8 / 9 / n1 n) powr n1 n / 2) powr n2 n =\n       d n ^ 2 ^ n / 2 powr (4 / 3) ^ (n - 1)", "proof (rule eventually_sequentiallyI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       ?c \\<le> x \\<Longrightarrow>\n       ((1 + 8 / 9 / n1 x) powr n1 x / 2) powr n2 x =\n       d x ^ 2 ^ x / 2 powr (4 / 3) ^ (x - 1)", "fix k::nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       ?c \\<le> x \\<Longrightarrow>\n       ((1 + 8 / 9 / n1 x) powr n1 x / 2) powr n2 x =\n       d x ^ 2 ^ x / 2 powr (4 / 3) ^ (x - 1)", "assume \"k \\<ge> 1\""], ["proof (state)\nthis:\n  1 \\<le> k\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       ?c \\<le> x \\<Longrightarrow>\n       ((1 + 8 / 9 / n1 x) powr n1 x / 2) powr n2 x =\n       d x ^ 2 ^ x / 2 powr (4 / 3) ^ (x - 1)", "have \"((1 + 8 / 9 / n1 k) powr n1 k / 2) powr n2 k \n            = (((1 + 8 / 9 / n1 k) powr n1 k) powr n2 k) / 2 powr (4 / 3) ^ (k - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((1 + 8 / 9 / n1 k) powr n1 k / 2) powr n2 k =\n    ((1 + 8 / 9 / n1 k) powr n1 k) powr n2 k / 2 powr (4 / 3) ^ (k - 1)", "by (simp add: n1_def n2_def powr_divide)"], ["proof (state)\nthis:\n  ((1 + 8 / 9 / n1 k) powr n1 k / 2) powr n2 k =\n  ((1 + 8 / 9 / n1 k) powr n1 k) powr n2 k / 2 powr (4 / 3) ^ (k - 1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       ?c \\<le> x \\<Longrightarrow>\n       ((1 + 8 / 9 / n1 x) powr n1 x / 2) powr n2 x =\n       d x ^ 2 ^ x / 2 powr (4 / 3) ^ (x - 1)", "also"], ["proof (state)\nthis:\n  ((1 + 8 / 9 / n1 k) powr n1 k / 2) powr n2 k =\n  ((1 + 8 / 9 / n1 k) powr n1 k) powr n2 k / 2 powr (4 / 3) ^ (k - 1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       ?c \\<le> x \\<Longrightarrow>\n       ((1 + 8 / 9 / n1 x) powr n1 x / 2) powr n2 x =\n       d x ^ 2 ^ x / 2 powr (4 / 3) ^ (x - 1)", "have \"... = (1 + 8 / 9 / n1 k) powr (n1 k * n2 k) / 2 powr (4 / 3) ^ (k - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((1 + 8 / 9 / n1 k) powr n1 k) powr n2 k / 2 powr (4 / 3) ^ (k - 1) =\n    (1 + 8 / 9 / n1 k) powr (n1 k * n2 k) / 2 powr (4 / 3) ^ (k - 1)", "by (simp add: powr_powr)"], ["proof (state)\nthis:\n  ((1 + 8 / 9 / n1 k) powr n1 k) powr n2 k / 2 powr (4 / 3) ^ (k - 1) =\n  (1 + 8 / 9 / n1 k) powr (n1 k * n2 k) / 2 powr (4 / 3) ^ (k - 1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       ?c \\<le> x \\<Longrightarrow>\n       ((1 + 8 / 9 / n1 x) powr n1 x / 2) powr n2 x =\n       d x ^ 2 ^ x / 2 powr (4 / 3) ^ (x - 1)", "also"], ["proof (state)\nthis:\n  ((1 + 8 / 9 / n1 k) powr n1 k) powr n2 k / 2 powr (4 / 3) ^ (k - 1) =\n  (1 + 8 / 9 / n1 k) powr (n1 k * n2 k) / 2 powr (4 / 3) ^ (k - 1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       ?c \\<le> x \\<Longrightarrow>\n       ((1 + 8 / 9 / n1 x) powr n1 x / 2) powr n2 x =\n       d x ^ 2 ^ x / 2 powr (4 / 3) ^ (x - 1)", "have \"... = (1 + 8 / 9 / n1 k) powr (2 ^ k) / 2 powr (4 / 3) ^ (k - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + 8 / 9 / n1 k) powr (n1 k * n2 k) / 2 powr (4 / 3) ^ (k - 1) =\n    (1 + 8 / 9 / n1 k) powr 2 ^ k / 2 powr (4 / 3) ^ (k - 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (1 + 8 / 9 / n1 k) powr (n1 k * n2 k) / 2 powr (4 / 3) ^ (k - 1) =\n    (1 + 8 / 9 / n1 k) powr 2 ^ k / 2 powr (4 / 3) ^ (k - 1)", "have \"n1 k * n2 k = 2 ^ k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n1 k * n2 k = 2 ^ k", "unfolding n1_def n2_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * (3 / 2) ^ (k - 1) * (4 / 3) ^ (k - 1) = 2 ^ k", "using \\<open>k\\<ge>1\\<close>"], ["proof (prove)\nusing this:\n  1 \\<le> k\n\ngoal (1 subgoal):\n 1. 2 * (3 / 2) ^ (k - 1) * (4 / 3) ^ (k - 1) = 2 ^ k", "by (simp add: mult_ac flip:power_mult_distrib power_Suc)"], ["proof (state)\nthis:\n  n1 k * n2 k = 2 ^ k\n\ngoal (1 subgoal):\n 1. (1 + 8 / 9 / n1 k) powr (n1 k * n2 k) / 2 powr (4 / 3) ^ (k - 1) =\n    (1 + 8 / 9 / n1 k) powr 2 ^ k / 2 powr (4 / 3) ^ (k - 1)", "then"], ["proof (chain)\npicking this:\n  n1 k * n2 k = 2 ^ k", "show ?thesis"], ["proof (prove)\nusing this:\n  n1 k * n2 k = 2 ^ k\n\ngoal (1 subgoal):\n 1. (1 + 8 / 9 / n1 k) powr (n1 k * n2 k) / 2 powr (4 / 3) ^ (k - 1) =\n    (1 + 8 / 9 / n1 k) powr 2 ^ k / 2 powr (4 / 3) ^ (k - 1)", "by simp"], ["proof (state)\nthis:\n  (1 + 8 / 9 / n1 k) powr (n1 k * n2 k) / 2 powr (4 / 3) ^ (k - 1) =\n  (1 + 8 / 9 / n1 k) powr 2 ^ k / 2 powr (4 / 3) ^ (k - 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (1 + 8 / 9 / n1 k) powr (n1 k * n2 k) / 2 powr (4 / 3) ^ (k - 1) =\n  (1 + 8 / 9 / n1 k) powr 2 ^ k / 2 powr (4 / 3) ^ (k - 1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       ?c \\<le> x \\<Longrightarrow>\n       ((1 + 8 / 9 / n1 x) powr n1 x / 2) powr n2 x =\n       d x ^ 2 ^ x / 2 powr (4 / 3) ^ (x - 1)", "also"], ["proof (state)\nthis:\n  (1 + 8 / 9 / n1 k) powr (n1 k * n2 k) / 2 powr (4 / 3) ^ (k - 1) =\n  (1 + 8 / 9 / n1 k) powr 2 ^ k / 2 powr (4 / 3) ^ (k - 1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       ?c \\<le> x \\<Longrightarrow>\n       ((1 + 8 / 9 / n1 x) powr n1 x / 2) powr n2 x =\n       d x ^ 2 ^ x / 2 powr (4 / 3) ^ (x - 1)", "have \"... = (1 + 8 / 9 / n1 k) ^ (2 ^ k) / 2 powr (4 / 3) ^ (k - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + 8 / 9 / n1 k) powr 2 ^ k / 2 powr (4 / 3) ^ (k - 1) =\n    (1 + 8 / 9 / n1 k) ^ 2 ^ k / 2 powr (4 / 3) ^ (k - 1)", "unfolding n1_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + 8 / 9 / (2 * (3 / 2) ^ (k - 1))) powr 2 ^ k /\n    2 powr (4 / 3) ^ (k - 1) =\n    (1 + 8 / 9 / (2 * (3 / 2) ^ (k - 1))) ^ 2 ^ k / 2 powr (4 / 3) ^ (k - 1)", "by (smt (verit, best) powr_realpow divide_pos_pos numeral_plus_numeral numeral_plus_one of_nat_numeral of_nat_power semiring_norm(2) zero_less_power)"], ["proof (state)\nthis:\n  (1 + 8 / 9 / n1 k) powr 2 ^ k / 2 powr (4 / 3) ^ (k - 1) =\n  (1 + 8 / 9 / n1 k) ^ 2 ^ k / 2 powr (4 / 3) ^ (k - 1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       ?c \\<le> x \\<Longrightarrow>\n       ((1 + 8 / 9 / n1 x) powr n1 x / 2) powr n2 x =\n       d x ^ 2 ^ x / 2 powr (4 / 3) ^ (x - 1)", "also"], ["proof (state)\nthis:\n  (1 + 8 / 9 / n1 k) powr 2 ^ k / 2 powr (4 / 3) ^ (k - 1) =\n  (1 + 8 / 9 / n1 k) ^ 2 ^ k / 2 powr (4 / 3) ^ (k - 1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       ?c \\<le> x \\<Longrightarrow>\n       ((1 + 8 / 9 / n1 x) powr n1 x / 2) powr n2 x =\n       d x ^ 2 ^ x / 2 powr (4 / 3) ^ (x - 1)", "have \"... = d k ^ 2 ^ k / 2 powr (4 / 3) ^ (k - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + 8 / 9 / n1 k) ^ 2 ^ k / 2 powr (4 / 3) ^ (k - 1) =\n    d k ^ 2 ^ k / 2 powr (4 / 3) ^ (k - 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (1 + 8 / 9 / n1 k) ^ 2 ^ k / 2 powr (4 / 3) ^ (k - 1) =\n    d k ^ 2 ^ k / 2 powr (4 / 3) ^ (k - 1)", "have **: \"8 / 9 / n1 k = (2/3) ^ (k+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 8 / 9 / n1 k = (2 / 3) ^ (k + 1)", "unfolding n1_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 8 / 9 / (2 * (3 / 2) ^ (k - 1)) = (2 / 3) ^ (k + 1)", "using \\<open>k\\<ge>1\\<close>"], ["proof (prove)\nusing this:\n  1 \\<le> k\n\ngoal (1 subgoal):\n 1. 8 / 9 / (2 * (3 / 2) ^ (k - 1)) = (2 / 3) ^ (k + 1)", "by (simp add: divide_simps split: nat_diff_split)"], ["proof (state)\nthis:\n  8 / 9 / n1 k = (2 / 3) ^ (k + 1)\n\ngoal (1 subgoal):\n 1. (1 + 8 / 9 / n1 k) ^ 2 ^ k / 2 powr (4 / 3) ^ (k - 1) =\n    d k ^ 2 ^ k / 2 powr (4 / 3) ^ (k - 1)", "then"], ["proof (chain)\npicking this:\n  8 / 9 / n1 k = (2 / 3) ^ (k + 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  8 / 9 / n1 k = (2 / 3) ^ (k + 1)\n\ngoal (1 subgoal):\n 1. (1 + 8 / 9 / n1 k) ^ 2 ^ k / 2 powr (4 / 3) ^ (k - 1) =\n    d k ^ 2 ^ k / 2 powr (4 / 3) ^ (k - 1)", "unfolding d_def"], ["proof (prove)\nusing this:\n  8 / 9 / n1 k = (2 / 3) ^ (k + 1)\n\ngoal (1 subgoal):\n 1. (1 + 8 / 9 / n1 k) ^ 2 ^ k / 2 powr (4 / 3) ^ (k - 1) =\n    (1 + (2 / 3) ^ (k + 1)) ^ 2 ^ k / 2 powr (4 / 3) ^ (k - 1)", "by presburger"], ["proof (state)\nthis:\n  (1 + 8 / 9 / n1 k) ^ 2 ^ k / 2 powr (4 / 3) ^ (k - 1) =\n  d k ^ 2 ^ k / 2 powr (4 / 3) ^ (k - 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (1 + 8 / 9 / n1 k) ^ 2 ^ k / 2 powr (4 / 3) ^ (k - 1) =\n  d k ^ 2 ^ k / 2 powr (4 / 3) ^ (k - 1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       ?c \\<le> x \\<Longrightarrow>\n       ((1 + 8 / 9 / n1 x) powr n1 x / 2) powr n2 x =\n       d x ^ 2 ^ x / 2 powr (4 / 3) ^ (x - 1)", "finally"], ["proof (chain)\npicking this:\n  ((1 + 8 / 9 / n1 k) powr n1 k / 2) powr n2 k =\n  d k ^ 2 ^ k / 2 powr (4 / 3) ^ (k - 1)", "show \"((1 + 8 / 9 / n1 k) powr n1 k / 2) powr n2 k \n                    = d k ^ 2 ^ k / 2 powr (4 / 3) ^ (k - 1)\""], ["proof (prove)\nusing this:\n  ((1 + 8 / 9 / n1 k) powr n1 k / 2) powr n2 k =\n  d k ^ 2 ^ k / 2 powr (4 / 3) ^ (k - 1)\n\ngoal (1 subgoal):\n 1. ((1 + 8 / 9 / n1 k) powr n1 k / 2) powr n2 k =\n    d k ^ 2 ^ k / 2 powr (4 / 3) ^ (k - 1)", "."], ["proof (state)\nthis:\n  ((1 + 8 / 9 / n1 k) powr n1 k / 2) powr n2 k =\n  d k ^ 2 ^ k / 2 powr (4 / 3) ^ (k - 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     ((1 + 8 / 9 / n1 n) powr n1 n / 2) powr n2 n =\n     d n ^ 2 ^ n / 2 powr (4 / 3) ^ (n - 1)\n\ngoal (1 subgoal):\n 1. LIM n sequentially. d n ^ 2 ^ n / 2 powr (4 / 3) ^ (n - 1) :> at_top", "ultimately"], ["proof (chain)\npicking this:\n  LIM n sequentially. ((1 + 8 / 9 / n1 n) powr n1 n / 2) powr n2 n :> at_top\n  \\<forall>\\<^sub>F n in sequentially.\n     ((1 + 8 / 9 / n1 n) powr n1 n / 2) powr n2 n =\n     d n ^ 2 ^ n / 2 powr (4 / 3) ^ (n - 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  LIM n sequentially. ((1 + 8 / 9 / n1 n) powr n1 n / 2) powr n2 n :> at_top\n  \\<forall>\\<^sub>F n in sequentially.\n     ((1 + 8 / 9 / n1 n) powr n1 n / 2) powr n2 n =\n     d n ^ 2 ^ n / 2 powr (4 / 3) ^ (n - 1)\n\ngoal (1 subgoal):\n 1. LIM n sequentially. d n ^ 2 ^ n / 2 powr (4 / 3) ^ (n - 1) :> at_top", "using filterlim_cong"], ["proof (prove)\nusing this:\n  LIM n sequentially. ((1 + 8 / 9 / n1 n) powr n1 n / 2) powr n2 n :> at_top\n  \\<forall>\\<^sub>F n in sequentially.\n     ((1 + 8 / 9 / n1 n) powr n1 n / 2) powr n2 n =\n     d n ^ 2 ^ n / 2 powr (4 / 3) ^ (n - 1)\n  \\<lbrakk>?F1.0 = ?F1'; ?F2.0 = ?F2';\n   \\<forall>\\<^sub>F x in ?F2.0. ?f x = ?g x\\<rbrakk>\n  \\<Longrightarrow> filterlim ?f ?F1.0 ?F2.0 = filterlim ?g ?F1' ?F2'\n\ngoal (1 subgoal):\n 1. LIM n sequentially. d n ^ 2 ^ n / 2 powr (4 / 3) ^ (n - 1) :> at_top", "by fast"], ["proof (state)\nthis:\n  LIM n sequentially. d n ^ 2 ^ n / 2 powr (4 / 3) ^ (n - 1) :> at_top\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  LIM n sequentially. d n ^ 2 ^ n / 2 powr (4 / 3) ^ (n - 1) :> at_top\n\ngoal (1 subgoal):\n 1. LIM n sequentially. d n ^ 2 ^ n / real_of_int (b n) :> at_top", "moreover"], ["proof (state)\nthis:\n  LIM n sequentially. d n ^ 2 ^ n / 2 powr (4 / 3) ^ (n - 1) :> at_top\n\ngoal (1 subgoal):\n 1. LIM n sequentially. d n ^ 2 ^ n / real_of_int (b n) :> at_top", "have \"\\<forall>\\<^sub>F n in sequentially. d n ^ 2 ^ n / 2 powr((4/3)^(n-1)) \n        \\<le> d n ^ 2 ^ n / real_of_int (b n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       d n ^ 2 ^ n / 2 powr (4 / 3) ^ (n - 1)\n       \\<le> d n ^ 2 ^ n / real_of_int (b n)", "using eventually_sequentiallyI[of 6]"], ["proof (prove)\nusing this:\n  (\\<And>x. 6 \\<le> x \\<Longrightarrow> ?P x) \\<Longrightarrow>\n  eventually ?P sequentially\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       d n ^ 2 ^ n / 2 powr (4 / 3) ^ (n - 1)\n       \\<le> d n ^ 2 ^ n / real_of_int (b n)", "by (smt (verit, best) asscor2 b dgt1 frac_le of_int_0_less_iff zero_le_power)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     d n ^ 2 ^ n / 2 powr (4 / 3) ^ (n - 1)\n     \\<le> d n ^ 2 ^ n / real_of_int (b n)\n\ngoal (1 subgoal):\n 1. LIM n sequentially. d n ^ 2 ^ n / real_of_int (b n) :> at_top", "ultimately"], ["proof (chain)\npicking this:\n  LIM n sequentially. d n ^ 2 ^ n / 2 powr (4 / 3) ^ (n - 1) :> at_top\n  \\<forall>\\<^sub>F n in sequentially.\n     d n ^ 2 ^ n / 2 powr (4 / 3) ^ (n - 1)\n     \\<le> d n ^ 2 ^ n / real_of_int (b n)", "show ?thesis"], ["proof (prove)\nusing this:\n  LIM n sequentially. d n ^ 2 ^ n / 2 powr (4 / 3) ^ (n - 1) :> at_top\n  \\<forall>\\<^sub>F n in sequentially.\n     d n ^ 2 ^ n / 2 powr (4 / 3) ^ (n - 1)\n     \\<le> d n ^ 2 ^ n / real_of_int (b n)\n\ngoal (1 subgoal):\n 1. LIM n sequentially. d n ^ 2 ^ n / real_of_int (b n) :> at_top", "by (auto elim: filterlim_at_top_mono)"], ["proof (state)\nthis:\n  LIM n sequentially. d n ^ 2 ^ n / real_of_int (b n) :> at_top\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  LIM n sequentially. d n ^ 2 ^ n / real_of_int (b n) :> at_top\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. real_of_int (b n) / real_of_int (a n)) \\<notin> \\<rat>", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>n. 1 < d n\n  convergent_prod d\n  \\<forall>n\\<ge>6.\n     (\\<Prod>j. d (n + j))\n     < A / real_of_int (a n) powr (1 / real_of_int (2 ^ n))\n  LIM n sequentially. d n ^ 2 ^ n / real_of_int (b n) :> at_top", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>n. 1 < d n\n  convergent_prod d\n  \\<forall>n\\<ge>6.\n     (\\<Prod>j. d (n + j))\n     < A / real_of_int (a n) powr (1 / real_of_int (2 ^ n))\n  LIM n sequentially. d n ^ 2 ^ n / real_of_int (b n) :> at_top\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. real_of_int (b n) / real_of_int (a n)) \\<notin> \\<rat>", "using Hancl3[OF \\<open>A>1\\<close> _ a b _ assu1,of d 6]"], ["proof (prove)\nusing this:\n  \\<forall>n. 1 < d n\n  convergent_prod d\n  \\<forall>n\\<ge>6.\n     (\\<Prod>j. d (n + j))\n     < A / real_of_int (a n) powr (1 / real_of_int (2 ^ n))\n  LIM n sequentially. d n ^ 2 ^ n / real_of_int (b n) :> at_top\n  \\<lbrakk>\\<forall>n. 1 < d n; 0 < 6;\n   \\<forall>n\\<ge>6.\n      (\\<Prod>j. d (n + j))\n      < A / real_of_int (a n) powr (1 / real_of_int (2 ^ n));\n   LIM n sequentially. d n ^ 2 ^ n / real_of_int (b n) :> at_top;\n   convergent_prod d\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>n. real_of_int (b n) / real_of_int (a n))\n                    \\<notin> \\<rat>\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. real_of_int (b n) / real_of_int (a n)) \\<notin> \\<rat>", "by force"], ["proof (state)\nthis:\n  (\\<Sum>n. real_of_int (b n) / real_of_int (a n)) \\<notin> \\<rat>\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}