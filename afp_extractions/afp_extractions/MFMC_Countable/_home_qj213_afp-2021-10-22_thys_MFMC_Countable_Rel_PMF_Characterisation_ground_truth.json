{"file_name": "/home/qj213/afp-2021-10-22/thys/MFMC_Countable/Rel_PMF_Characterisation.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/MFMC_Countable", "problem_names": ["lemma rel_pmf_code [code]:\n  \"rel_pmf R p q \\<longleftrightarrow>\n   (let B = set_pmf q in\n    \\<forall>A\\<in>Pow (set_pmf p). measure_pmf.prob p A \\<le> measure_pmf.prob q (snd ` Set.filter (case_prod R) (A \\<times> B)))\""], "translations": [["", "lemma rel_pmf_code [code]:\n  \"rel_pmf R p q \\<longleftrightarrow>\n   (let B = set_pmf q in\n    \\<forall>A\\<in>Pow (set_pmf p). measure_pmf.prob p A \\<le> measure_pmf.prob q (snd ` Set.filter (case_prod R) (A \\<times> B)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_pmf R p q =\n    (let B = set_pmf q\n     in \\<forall>A\\<in>Pow (set_pmf p).\n           measure_pmf.prob p A\n           \\<le> measure_pmf.prob q\n                  (snd `\n                   Set.filter (\\<lambda>(x, y). R x y) (A \\<times> B)))", "unfolding Let_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_pmf R p q =\n    (\\<forall>A\\<in>Pow (set_pmf p).\n        measure_pmf.prob p A\n        \\<le> measure_pmf.prob q\n               (snd `\n                Set.filter (\\<lambda>(x, y). R x y) (A \\<times> set_pmf q)))", "proof(intro iffI strip)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>rel_pmf R p q; A \\<in> Pow (set_pmf p)\\<rbrakk>\n       \\<Longrightarrow> measure_pmf.prob p A\n                         \\<le> measure_pmf.prob q\n                                (snd `\n                                 Set.filter (\\<lambda>(x, y). R x y)\n                                  (A \\<times> set_pmf q))\n 2. \\<forall>A\\<in>Pow (set_pmf p).\n       measure_pmf.prob p A\n       \\<le> measure_pmf.prob q\n              (snd `\n               Set.filter (\\<lambda>(x, y). R x y)\n                (A \\<times> set_pmf q)) \\<Longrightarrow>\n    rel_pmf R p q", "have eq: \"snd ` Set.filter (case_prod R) (A \\<times> set_pmf q) = {y. \\<exists>x\\<in>A. R x y} \\<inter> set_pmf q\" for A"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd ` Set.filter (\\<lambda>(x, y). R x y) (A \\<times> set_pmf q) =\n    {y. \\<exists>x\\<in>A. R x y} \\<inter> set_pmf q", "by(auto intro: rev_image_eqI simp add: Set.filter_def)"], ["proof (state)\nthis:\n  snd ` Set.filter (\\<lambda>(x, y). R x y) (?A \\<times> set_pmf q) =\n  {y. \\<exists>x\\<in>?A. R x y} \\<inter> set_pmf q\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>rel_pmf R p q; A \\<in> Pow (set_pmf p)\\<rbrakk>\n       \\<Longrightarrow> measure_pmf.prob p A\n                         \\<le> measure_pmf.prob q\n                                (snd `\n                                 Set.filter (\\<lambda>(x, y). R x y)\n                                  (A \\<times> set_pmf q))\n 2. \\<forall>A\\<in>Pow (set_pmf p).\n       measure_pmf.prob p A\n       \\<le> measure_pmf.prob q\n              (snd `\n               Set.filter (\\<lambda>(x, y). R x y)\n                (A \\<times> set_pmf q)) \\<Longrightarrow>\n    rel_pmf R p q", "show \"measure_pmf.prob p A \\<le> measure_pmf.prob q (snd ` Set.filter (case_prod R) (A \\<times> set_pmf q))\"\n    if \"rel_pmf R p q\" and \"A \\<in> Pow (set_pmf p)\" for A"], ["proof (prove)\ngoal (1 subgoal):\n 1. measure_pmf.prob p A\n    \\<le> measure_pmf.prob q\n           (snd `\n            Set.filter (\\<lambda>(x, y). R x y) (A \\<times> set_pmf q))", "using that"], ["proof (prove)\nusing this:\n  rel_pmf R p q\n  A \\<in> Pow (set_pmf p)\n\ngoal (1 subgoal):\n 1. measure_pmf.prob p A\n    \\<le> measure_pmf.prob q\n           (snd `\n            Set.filter (\\<lambda>(x, y). R x y) (A \\<times> set_pmf q))", "by(auto dest: rel_pmf_measureD simp add: eq measure_Int_set_pmf)"], ["proof (state)\nthis:\n  \\<lbrakk>rel_pmf R p q; ?A \\<in> Pow (set_pmf p)\\<rbrakk>\n  \\<Longrightarrow> measure_pmf.prob p ?A\n                    \\<le> measure_pmf.prob q\n                           (snd `\n                            Set.filter (\\<lambda>(x, y). R x y)\n                             (?A \\<times> set_pmf q))\n\ngoal (1 subgoal):\n 1. \\<forall>A\\<in>Pow (set_pmf p).\n       measure_pmf.prob p A\n       \\<le> measure_pmf.prob q\n              (snd `\n               Set.filter (\\<lambda>(x, y). R x y)\n                (A \\<times> set_pmf q)) \\<Longrightarrow>\n    rel_pmf R p q", "show \"rel_pmf R p q\" if \"\\<forall>A\\<in>Pow (set_pmf p). measure_pmf.prob p A \\<le> measure_pmf.prob q (snd ` Set.filter (case_prod R) (A \\<times> set_pmf q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_pmf R p q", "using that"], ["proof (prove)\nusing this:\n  \\<forall>A\\<in>Pow (set_pmf p).\n     measure_pmf.prob p A\n     \\<le> measure_pmf.prob q\n            (snd `\n             Set.filter (\\<lambda>(x, y). R x y) (A \\<times> set_pmf q))\n\ngoal (1 subgoal):\n 1. rel_pmf R p q", "by(intro rel_pmf_measureI')(auto intro: ord_le_eq_trans arg_cong2[where f=measure] simp add: eq)"], ["proof (state)\nthis:\n  \\<forall>A\\<in>Pow (set_pmf p).\n     measure_pmf.prob p A\n     \\<le> measure_pmf.prob q\n            (snd `\n             Set.filter (\\<lambda>(x, y). R x y)\n              (A \\<times> set_pmf q)) \\<Longrightarrow>\n  rel_pmf R p q\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}