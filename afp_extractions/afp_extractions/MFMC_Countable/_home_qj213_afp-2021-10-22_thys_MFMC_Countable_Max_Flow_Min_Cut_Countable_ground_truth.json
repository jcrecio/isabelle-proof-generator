{"file_name": "/home/qj213/afp-2021-10-22/thys/MFMC_Countable/Max_Flow_Min_Cut_Countable.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/MFMC_Countable", "problem_names": ["theorem max_flow_min_cut_countable:\n  fixes \\<Delta> (structure)\n  assumes countable_E [simp]: \"countable \\<^bold>E\"\n  and source_neq_sink [simp]: \"source \\<Delta> \\<noteq> sink \\<Delta>\"\n  and capacity_outside: \"\\<forall>e. e \\<notin> \\<^bold>E \\<longrightarrow> capacity \\<Delta> e = 0\"\n  and capacity_finite [simp]: \"\\<forall>e. capacity \\<Delta> e \\<noteq> \\<top>\"\n  shows \"\\<exists>f S. flow \\<Delta> f \\<and> cut \\<Delta> S \\<and> orthogonal \\<Delta> f S\""], "translations": [["", "theorem max_flow_min_cut_countable:\n  fixes \\<Delta> (structure)\n  assumes countable_E [simp]: \"countable \\<^bold>E\"\n  and source_neq_sink [simp]: \"source \\<Delta> \\<noteq> sink \\<Delta>\"\n  and capacity_outside: \"\\<forall>e. e \\<notin> \\<^bold>E \\<longrightarrow> capacity \\<Delta> e = 0\"\n  and capacity_finite [simp]: \"\\<forall>e. capacity \\<Delta> e \\<noteq> \\<top>\"\n  shows \"\\<exists>f S. flow \\<Delta> f \\<and> cut \\<Delta> S \\<and> orthogonal \\<Delta> f S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f S.\n       flow \\<Delta> f \\<and>\n       MFMC_Network.cut \\<Delta> S \\<and> orthogonal \\<Delta> f S", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>f S.\n       flow \\<Delta> f \\<and>\n       MFMC_Network.cut \\<Delta> S \\<and> orthogonal \\<Delta> f S", "interpret countable_network \\<Delta>"], ["proof (prove)\ngoal (1 subgoal):\n 1. countable_network \\<Delta>", "using assms"], ["proof (prove)\nusing this:\n  countable \\<^bold>E\n  source \\<Delta> \\<noteq> sink \\<Delta>\n  \\<forall>e. e \\<notin> \\<^bold>E \\<longrightarrow> capacity \\<Delta> e = 0\n  \\<forall>e. capacity \\<Delta> e \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. countable_network \\<Delta>", "by(unfold_locales) auto"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>f S.\n       flow \\<Delta> f \\<and>\n       MFMC_Network.cut \\<Delta> S \\<and> orthogonal \\<Delta> f S", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f S.\n       flow \\<Delta> f \\<and>\n       MFMC_Network.cut \\<Delta> S \\<and> orthogonal \\<Delta> f S", "by(rule max_flow_min_cut)"], ["proof (state)\nthis:\n  \\<exists>f S.\n     flow \\<Delta> f \\<and>\n     MFMC_Network.cut \\<Delta> S \\<and> orthogonal \\<Delta> f S\n\ngoal:\nNo subgoals!", "qed"], ["", "hide_const (open) A B weight"], ["", "end"]]}