{"file_name": "/home/qj213/afp-2021-10-22/thys/Card_Number_Partitions/Card_Number_Partitions.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Card_Number_Partitions", "problem_names": ["lemma Partition_less:\n  assumes \"m < k\"\n  shows \"Partition m k = 0\"", "lemma Partition_sum_Partition_diff:\n  assumes \"k \\<le> m\"\n  shows \"Partition m k = (\\<Sum>i\\<le>k. Partition (m - k) i)\"", "lemma Partition_parts1:\n  \"Partition (Suc m) (Suc 0) = 1\"", "lemma Partition_diag:\n  \"Partition (Suc m) (Suc m) = 1\"", "lemma Partition_diag1:\n  \"Partition (Suc (Suc m)) (Suc m) = 1\"", "lemma Partition_parts2:\n  shows \"Partition m 2 = m div 2\"", "lemma set_rewrite1:\n  \"{p. p partitions Suc m \\<and> sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}\n    = (\\<lambda>p. p(1 := p 1 + 1)) ` {p. p partitions m \\<and> sum p {..m} = k}\" (is \"?S = ?T\")", "lemma set_rewrite2:\n  \"{p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}\n    = (\\<lambda>p. (\\<lambda>i. p (i - 1))) ` {p. p partitions (m - k) \\<and> sum p {..m - k} = k}\"\n  (is \"?S = ?T\")", "theorem card_partitions_k_parts:\n  \"card {p. p partitions n \\<and> (\\<Sum>i\\<le>n. p i) = k} = Partition n k\"", "theorem card_partitions:\n  \"card {p. p partitions n} = (\\<Sum>k\\<le>n. Partition n k)\"", "lemma card_partitions_atmost_k_parts:\n  \"card {p. p partitions n \\<and> sum p {..n} \\<le> k} = Partition (n + k) k\"", "lemma bij_betw_multiset_number_partition_with_size:\n  \"bij_betw count {N. number_partition n N \\<and> size N = k} {p. p partitions n \\<and> sum p {..n} = k}\"", "lemma bij_betw_multiset_number_partition_with_atmost_size:\n  \"bij_betw count {N. number_partition n N \\<and> size N \\<le> k} {p. p partitions n \\<and> sum p {..n} \\<le> k}\"", "theorem card_number_partitions_with_atmost_k_parts:\n  shows \"card {N. number_partition n N \\<and> size N \\<le> x} = Partition (n + x) x\"", "theorem card_partitions_with_k_parts:\n  \"card {N. number_partition n N \\<and> size N = k} = Partition n k\"", "lemma number_partition1_eq_replicate_mset:\n  \"{N. (\\<forall>n. n\\<in># N \\<longrightarrow> n = 1) \\<and> number_partition n N} = {replicate_mset n 1}\"", "lemma card_number_partitions_with_only_parts_1_eq_1:\n  assumes \"n \\<le> x\"\n  shows \"card {N. (\\<forall>n. n\\<in># N \\<longrightarrow> n = 1) \\<and> number_partition n N \\<and> size N \\<le> x} = 1\" (is \"card ?N = _\")", "lemma card_number_partitions_with_only_parts_1_eq_0:\n  assumes \"x < n\"\n  shows \"card {N. (\\<forall>n. n\\<in># N \\<longrightarrow> n = 1) \\<and> number_partition n N \\<and> size N \\<le> x} = 0\" (is \"card ?N = _\")"], "translations": [["", "lemma Partition_less:\n  assumes \"m < k\"\n  shows \"Partition m k = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Partition m k = 0", "using assms"], ["proof (prove)\nusing this:\n  m < k\n\ngoal (1 subgoal):\n 1. Partition m k = 0", "by (induct m k rule: Partition.induct) auto"], ["", "lemma Partition_sum_Partition_diff:\n  assumes \"k \\<le> m\"\n  shows \"Partition m k = (\\<Sum>i\\<le>k. Partition (m - k) i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Partition m k = sum (Partition (m - k)) {..k}", "using assms"], ["proof (prove)\nusing this:\n  k \\<le> m\n\ngoal (1 subgoal):\n 1. Partition m k = sum (Partition (m - k)) {..k}", "by (induct m k rule: Partition.induct) auto"], ["", "lemma Partition_parts1:\n  \"Partition (Suc m) (Suc 0) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Partition (Suc m) (Suc 0) = 1", "by (induct m) auto"], ["", "lemma Partition_diag:\n  \"Partition (Suc m) (Suc m) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Partition (Suc m) (Suc m) = 1", "by (induct m) auto"], ["", "lemma Partition_diag1:\n  \"Partition (Suc (Suc m)) (Suc m) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Partition (Suc (Suc m)) (Suc m) = 1", "by (induct m) auto"], ["", "lemma Partition_parts2:\n  shows \"Partition m 2 = m div 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Partition m 2 = m div 2", "proof (induct m rule: nat_less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<forall>m<n. Partition m 2 = m div 2 \\<Longrightarrow>\n       Partition n 2 = n div 2", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<forall>m<n. Partition m 2 = m div 2 \\<Longrightarrow>\n       Partition n 2 = n div 2", "assume hypothesis: \"\\<forall>n<m. Partition n 2 = n div 2\""], ["proof (state)\nthis:\n  \\<forall>n<m. Partition n 2 = n div 2\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<forall>m<n. Partition m 2 = m div 2 \\<Longrightarrow>\n       Partition n 2 = n div 2", "have \"(m = 0 \\<or> m = 1) \\<or> m \\<ge> 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (m = 0 \\<or> m = 1) \\<or> 2 \\<le> m", "by auto"], ["proof (state)\nthis:\n  (m = 0 \\<or> m = 1) \\<or> 2 \\<le> m\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<forall>m<n. Partition m 2 = m div 2 \\<Longrightarrow>\n       Partition n 2 = n div 2", "from this"], ["proof (chain)\npicking this:\n  (m = 0 \\<or> m = 1) \\<or> 2 \\<le> m", "show \"Partition m 2 = m div 2\""], ["proof (prove)\nusing this:\n  (m = 0 \\<or> m = 1) \\<or> 2 \\<le> m\n\ngoal (1 subgoal):\n 1. Partition m 2 = m div 2", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. m = 0 \\<or> m = 1 \\<Longrightarrow> Partition m 2 = m div 2\n 2. 2 \\<le> m \\<Longrightarrow> Partition m 2 = m div 2", "assume \"m = 0 \\<or> m = 1\""], ["proof (state)\nthis:\n  m = 0 \\<or> m = 1\n\ngoal (2 subgoals):\n 1. m = 0 \\<or> m = 1 \\<Longrightarrow> Partition m 2 = m div 2\n 2. 2 \\<le> m \\<Longrightarrow> Partition m 2 = m div 2", "from this"], ["proof (chain)\npicking this:\n  m = 0 \\<or> m = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  m = 0 \\<or> m = 1\n\ngoal (1 subgoal):\n 1. Partition m 2 = m div 2", "by (auto simp add: numerals(2))"], ["proof (state)\nthis:\n  Partition m 2 = m div 2\n\ngoal (1 subgoal):\n 1. 2 \\<le> m \\<Longrightarrow> Partition m 2 = m div 2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. 2 \\<le> m \\<Longrightarrow> Partition m 2 = m div 2", "assume \"2 \\<le> m\""], ["proof (state)\nthis:\n  2 \\<le> m\n\ngoal (1 subgoal):\n 1. 2 \\<le> m \\<Longrightarrow> Partition m 2 = m div 2", "from this"], ["proof (chain)\npicking this:\n  2 \\<le> m", "obtain m' where m': \"m = Suc (Suc m')\""], ["proof (prove)\nusing this:\n  2 \\<le> m\n\ngoal (1 subgoal):\n 1. (\\<And>m'. m = Suc (Suc m') \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis add_2_eq_Suc le_Suc_ex)"], ["proof (state)\nthis:\n  m = Suc (Suc m')\n\ngoal (1 subgoal):\n 1. 2 \\<le> m \\<Longrightarrow> Partition m 2 = m div 2", "from hypothesis this"], ["proof (chain)\npicking this:\n  \\<forall>n<m. Partition n 2 = n div 2\n  m = Suc (Suc m')", "have \"Partition m' 2 = m' div 2\""], ["proof (prove)\nusing this:\n  \\<forall>n<m. Partition n 2 = n div 2\n  m = Suc (Suc m')\n\ngoal (1 subgoal):\n 1. Partition m' 2 = m' div 2", "by simp"], ["proof (state)\nthis:\n  Partition m' 2 = m' div 2\n\ngoal (1 subgoal):\n 1. 2 \\<le> m \\<Longrightarrow> Partition m 2 = m div 2", "from this m'"], ["proof (chain)\npicking this:\n  Partition m' 2 = m' div 2\n  m = Suc (Suc m')", "show ?thesis"], ["proof (prove)\nusing this:\n  Partition m' 2 = m' div 2\n  m = Suc (Suc m')\n\ngoal (1 subgoal):\n 1. Partition m 2 = m div 2", "using Partition_parts1 Partition.simps(4)[of \"Suc m'\" \"Suc 0\"] div2_Suc_Suc"], ["proof (prove)\nusing this:\n  Partition m' 2 = m' div 2\n  m = Suc (Suc m')\n  Partition (Suc ?m) (Suc 0) = 1\n  Partition (Suc (Suc m')) (Suc (Suc 0)) =\n  Partition (Suc m') (Suc 0) + Partition (Suc m' - Suc 0) (Suc (Suc 0))\n  Suc (Suc ?m) div 2 = Suc (?m div 2)\n\ngoal (1 subgoal):\n 1. Partition m 2 = m div 2", "by (simp add: numerals(2) del: Partition.simps)"], ["proof (state)\nthis:\n  Partition m 2 = m div 2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Partition m 2 = m div 2\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Cardinality of Number Partitions\\<close>"], ["", "lemma set_rewrite1:\n  \"{p. p partitions Suc m \\<and> sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}\n    = (\\<lambda>p. p(1 := p 1 + 1)) ` {p. p partitions m \\<and> sum p {..m} = k}\" (is \"?S = ?T\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. {p. p partitions Suc m \\<and>\n        sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0} =\n    (\\<lambda>p. p(1 := p 1 + 1)) `\n    {p. p partitions m \\<and> sum p {..m} = k}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. {p. p partitions Suc m \\<and>\n        sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}\n    \\<subseteq> (\\<lambda>p. p(1 := p 1 + 1)) `\n                {p. p partitions m \\<and> sum p {..m} = k}\n 2. (\\<lambda>p. p(1 := p 1 + 1)) `\n    {p. p partitions m \\<and> sum p {..m} = k}\n    \\<subseteq> {p. p partitions Suc m \\<and>\n                    sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}", "{"], ["proof (state)\ngoal (2 subgoals):\n 1. {p. p partitions Suc m \\<and>\n        sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}\n    \\<subseteq> (\\<lambda>p. p(1 := p 1 + 1)) `\n                {p. p partitions m \\<and> sum p {..m} = k}\n 2. (\\<lambda>p. p(1 := p 1 + 1)) `\n    {p. p partitions m \\<and> sum p {..m} = k}\n    \\<subseteq> {p. p partitions Suc m \\<and>\n                    sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}", "fix p"], ["proof (state)\ngoal (2 subgoals):\n 1. {p. p partitions Suc m \\<and>\n        sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}\n    \\<subseteq> (\\<lambda>p. p(1 := p 1 + 1)) `\n                {p. p partitions m \\<and> sum p {..m} = k}\n 2. (\\<lambda>p. p(1 := p 1 + 1)) `\n    {p. p partitions m \\<and> sum p {..m} = k}\n    \\<subseteq> {p. p partitions Suc m \\<and>\n                    sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}", "assume assms: \"p partitions Suc m\" \"sum p {..Suc m} = Suc k\" \"0 < p 1\""], ["proof (state)\nthis:\n  p partitions Suc m\n  sum p {..Suc m} = Suc k\n  0 < p 1\n\ngoal (2 subgoals):\n 1. {p. p partitions Suc m \\<and>\n        sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}\n    \\<subseteq> (\\<lambda>p. p(1 := p 1 + 1)) `\n                {p. p partitions m \\<and> sum p {..m} = k}\n 2. (\\<lambda>p. p(1 := p 1 + 1)) `\n    {p. p partitions m \\<and> sum p {..m} = k}\n    \\<subseteq> {p. p partitions Suc m \\<and>\n                    sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}", "have \"p(1 := p 1 - 1) partitions m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p(1 := p 1 - 1) partitions m", "using assms"], ["proof (prove)\nusing this:\n  p partitions Suc m\n  sum p {..Suc m} = Suc k\n  0 < p 1\n\ngoal (1 subgoal):\n 1. p(1 := p 1 - 1) partitions m", "by (metis partitions_remove1 diff_Suc_1)"], ["proof (state)\nthis:\n  p(1 := p 1 - 1) partitions m\n\ngoal (2 subgoals):\n 1. {p. p partitions Suc m \\<and>\n        sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}\n    \\<subseteq> (\\<lambda>p. p(1 := p 1 + 1)) `\n                {p. p partitions m \\<and> sum p {..m} = k}\n 2. (\\<lambda>p. p(1 := p 1 + 1)) `\n    {p. p partitions m \\<and> sum p {..m} = k}\n    \\<subseteq> {p. p partitions Suc m \\<and>\n                    sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}", "moreover"], ["proof (state)\nthis:\n  p(1 := p 1 - 1) partitions m\n\ngoal (2 subgoals):\n 1. {p. p partitions Suc m \\<and>\n        sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}\n    \\<subseteq> (\\<lambda>p. p(1 := p 1 + 1)) `\n                {p. p partitions m \\<and> sum p {..m} = k}\n 2. (\\<lambda>p. p(1 := p 1 + 1)) `\n    {p. p partitions m \\<and> sum p {..m} = k}\n    \\<subseteq> {p. p partitions Suc m \\<and>\n                    sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}", "have \"(\\<Sum>i\\<le>m. (p(1 := p 1 - 1)) i) = k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (p(1 := p 1 - 1)) {..m} = k", "using assms"], ["proof (prove)\nusing this:\n  p partitions Suc m\n  sum p {..Suc m} = Suc k\n  0 < p 1\n\ngoal (1 subgoal):\n 1. sum (p(1 := p 1 - 1)) {..m} = k", "by (metis count_remove1 diff_Suc_1)"], ["proof (state)\nthis:\n  sum (p(1 := p 1 - 1)) {..m} = k\n\ngoal (2 subgoals):\n 1. {p. p partitions Suc m \\<and>\n        sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}\n    \\<subseteq> (\\<lambda>p. p(1 := p 1 + 1)) `\n                {p. p partitions m \\<and> sum p {..m} = k}\n 2. (\\<lambda>p. p(1 := p 1 + 1)) `\n    {p. p partitions m \\<and> sum p {..m} = k}\n    \\<subseteq> {p. p partitions Suc m \\<and>\n                    sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}", "ultimately"], ["proof (chain)\npicking this:\n  p(1 := p 1 - 1) partitions m\n  sum (p(1 := p 1 - 1)) {..m} = k", "have \"p(1 := p 1 - 1) \\<in> {p. p partitions m \\<and> sum p {..m} = k}\""], ["proof (prove)\nusing this:\n  p(1 := p 1 - 1) partitions m\n  sum (p(1 := p 1 - 1)) {..m} = k\n\ngoal (1 subgoal):\n 1. p(1 := p 1 - 1) \\<in> {p. p partitions m \\<and> sum p {..m} = k}", "by simp"], ["proof (state)\nthis:\n  p(1 := p 1 - 1) \\<in> {p. p partitions m \\<and> sum p {..m} = k}\n\ngoal (2 subgoals):\n 1. {p. p partitions Suc m \\<and>\n        sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}\n    \\<subseteq> (\\<lambda>p. p(1 := p 1 + 1)) `\n                {p. p partitions m \\<and> sum p {..m} = k}\n 2. (\\<lambda>p. p(1 := p 1 + 1)) `\n    {p. p partitions m \\<and> sum p {..m} = k}\n    \\<subseteq> {p. p partitions Suc m \\<and>\n                    sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}", "moreover"], ["proof (state)\nthis:\n  p(1 := p 1 - 1) \\<in> {p. p partitions m \\<and> sum p {..m} = k}\n\ngoal (2 subgoals):\n 1. {p. p partitions Suc m \\<and>\n        sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}\n    \\<subseteq> (\\<lambda>p. p(1 := p 1 + 1)) `\n                {p. p partitions m \\<and> sum p {..m} = k}\n 2. (\\<lambda>p. p(1 := p 1 + 1)) `\n    {p. p partitions m \\<and> sum p {..m} = k}\n    \\<subseteq> {p. p partitions Suc m \\<and>\n                    sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}", "have \"p = p(1 := p 1 - 1, 1 := (p(1 := p 1 - 1)) 1 + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p = p(1 := p 1 - 1, 1 := (p(1 := p 1 - 1)) 1 + 1)", "using \\<open>0 < p 1\\<close>"], ["proof (prove)\nusing this:\n  0 < p 1\n\ngoal (1 subgoal):\n 1. p = p(1 := p 1 - 1, 1 := (p(1 := p 1 - 1)) 1 + 1)", "by auto"], ["proof (state)\nthis:\n  p = p(1 := p 1 - 1, 1 := (p(1 := p 1 - 1)) 1 + 1)\n\ngoal (2 subgoals):\n 1. {p. p partitions Suc m \\<and>\n        sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}\n    \\<subseteq> (\\<lambda>p. p(1 := p 1 + 1)) `\n                {p. p partitions m \\<and> sum p {..m} = k}\n 2. (\\<lambda>p. p(1 := p 1 + 1)) `\n    {p. p partitions m \\<and> sum p {..m} = k}\n    \\<subseteq> {p. p partitions Suc m \\<and>\n                    sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}", "ultimately"], ["proof (chain)\npicking this:\n  p(1 := p 1 - 1) \\<in> {p. p partitions m \\<and> sum p {..m} = k}\n  p = p(1 := p 1 - 1, 1 := (p(1 := p 1 - 1)) 1 + 1)", "have \"p \\<in> (\\<lambda>p. p(1 := p 1 + 1)) ` {p. p partitions m \\<and> sum p {..m} = k}\""], ["proof (prove)\nusing this:\n  p(1 := p 1 - 1) \\<in> {p. p partitions m \\<and> sum p {..m} = k}\n  p = p(1 := p 1 - 1, 1 := (p(1 := p 1 - 1)) 1 + 1)\n\ngoal (1 subgoal):\n 1. p \\<in> (\\<lambda>p. p(1 := p 1 + 1)) `\n            {p. p partitions m \\<and> sum p {..m} = k}", "by blast"], ["proof (state)\nthis:\n  p \\<in> (\\<lambda>p. p(1 := p 1 + 1)) `\n          {p. p partitions m \\<and> sum p {..m} = k}\n\ngoal (2 subgoals):\n 1. {p. p partitions Suc m \\<and>\n        sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}\n    \\<subseteq> (\\<lambda>p. p(1 := p 1 + 1)) `\n                {p. p partitions m \\<and> sum p {..m} = k}\n 2. (\\<lambda>p. p(1 := p 1 + 1)) `\n    {p. p partitions m \\<and> sum p {..m} = k}\n    \\<subseteq> {p. p partitions Suc m \\<and>\n                    sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?p2 partitions Suc m; sum ?p2 {..Suc m} = Suc k;\n   0 < ?p2 1\\<rbrakk>\n  \\<Longrightarrow> ?p2\n                    \\<in> (\\<lambda>p. p(1 := p 1 + 1)) `\n                          {p. p partitions m \\<and> sum p {..m} = k}\n\ngoal (2 subgoals):\n 1. {p. p partitions Suc m \\<and>\n        sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}\n    \\<subseteq> (\\<lambda>p. p(1 := p 1 + 1)) `\n                {p. p partitions m \\<and> sum p {..m} = k}\n 2. (\\<lambda>p. p(1 := p 1 + 1)) `\n    {p. p partitions m \\<and> sum p {..m} = k}\n    \\<subseteq> {p. p partitions Suc m \\<and>\n                    sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}", "from this"], ["proof (chain)\npicking this:\n  \\<lbrakk>?p2 partitions Suc m; sum ?p2 {..Suc m} = Suc k;\n   0 < ?p2 1\\<rbrakk>\n  \\<Longrightarrow> ?p2\n                    \\<in> (\\<lambda>p. p(1 := p 1 + 1)) `\n                          {p. p partitions m \\<and> sum p {..m} = k}", "show \"?S \\<subseteq> ?T\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?p2 partitions Suc m; sum ?p2 {..Suc m} = Suc k;\n   0 < ?p2 1\\<rbrakk>\n  \\<Longrightarrow> ?p2\n                    \\<in> (\\<lambda>p. p(1 := p 1 + 1)) `\n                          {p. p partitions m \\<and> sum p {..m} = k}\n\ngoal (1 subgoal):\n 1. {p. p partitions Suc m \\<and>\n        sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}\n    \\<subseteq> (\\<lambda>p. p(1 := p 1 + 1)) `\n                {p. p partitions m \\<and> sum p {..m} = k}", "by blast"], ["proof (state)\nthis:\n  {p. p partitions Suc m \\<and>\n      sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}\n  \\<subseteq> (\\<lambda>p. p(1 := p 1 + 1)) `\n              {p. p partitions m \\<and> sum p {..m} = k}\n\ngoal (1 subgoal):\n 1. (\\<lambda>p. p(1 := p 1 + 1)) `\n    {p. p partitions m \\<and> sum p {..m} = k}\n    \\<subseteq> {p. p partitions Suc m \\<and>\n                    sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>p. p(1 := p 1 + 1)) `\n    {p. p partitions m \\<and> sum p {..m} = k}\n    \\<subseteq> {p. p partitions Suc m \\<and>\n                    sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>p. p(1 := p 1 + 1)) `\n    {p. p partitions m \\<and> sum p {..m} = k}\n    \\<subseteq> {p. p partitions Suc m \\<and>\n                    sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}", "fix p"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>p. p(1 := p 1 + 1)) `\n    {p. p partitions m \\<and> sum p {..m} = k}\n    \\<subseteq> {p. p partitions Suc m \\<and>\n                    sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}", "assume assms: \"p partitions m\" \"sum p {..m} = k\""], ["proof (state)\nthis:\n  p partitions m\n  sum p {..m} = k\n\ngoal (1 subgoal):\n 1. (\\<lambda>p. p(1 := p 1 + 1)) `\n    {p. p partitions m \\<and> sum p {..m} = k}\n    \\<subseteq> {p. p partitions Suc m \\<and>\n                    sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}", "have \"(p(1 := p 1 + 1)) partitions Suc m\" (is ?g1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. p(1 := p 1 + 1) partitions Suc m", "using assms"], ["proof (prove)\nusing this:\n  p partitions m\n  sum p {..m} = k\n\ngoal (1 subgoal):\n 1. p(1 := p 1 + 1) partitions Suc m", "by (metis partitions_insert1 Suc_eq_plus1 zero_less_one)"], ["proof (state)\nthis:\n  p(1 := p 1 + 1) partitions Suc m\n\ngoal (1 subgoal):\n 1. (\\<lambda>p. p(1 := p 1 + 1)) `\n    {p. p partitions m \\<and> sum p {..m} = k}\n    \\<subseteq> {p. p partitions Suc m \\<and>\n                    sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}", "moreover"], ["proof (state)\nthis:\n  p(1 := p 1 + 1) partitions Suc m\n\ngoal (1 subgoal):\n 1. (\\<lambda>p. p(1 := p 1 + 1)) `\n    {p. p partitions m \\<and> sum p {..m} = k}\n    \\<subseteq> {p. p partitions Suc m \\<and>\n                    sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}", "have \"sum (p(1 := p 1 + 1)) {..Suc m} = Suc k\" (is ?g2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (p(1 := p 1 + 1)) {..Suc m} = Suc k", "using assms"], ["proof (prove)\nusing this:\n  p partitions m\n  sum p {..m} = k\n\ngoal (1 subgoal):\n 1. sum (p(1 := p 1 + 1)) {..Suc m} = Suc k", "by (metis count_insert1 Suc_eq_plus1)"], ["proof (state)\nthis:\n  sum (p(1 := p 1 + 1)) {..Suc m} = Suc k\n\ngoal (1 subgoal):\n 1. (\\<lambda>p. p(1 := p 1 + 1)) `\n    {p. p partitions m \\<and> sum p {..m} = k}\n    \\<subseteq> {p. p partitions Suc m \\<and>\n                    sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}", "moreover"], ["proof (state)\nthis:\n  sum (p(1 := p 1 + 1)) {..Suc m} = Suc k\n\ngoal (1 subgoal):\n 1. (\\<lambda>p. p(1 := p 1 + 1)) `\n    {p. p partitions m \\<and> sum p {..m} = k}\n    \\<subseteq> {p. p partitions Suc m \\<and>\n                    sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}", "have \"(p(1 := p 1 + 1)) 1 \\<noteq> 0\" (is ?g3)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (p(1 := p 1 + 1)) 1 \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  (p(1 := p 1 + 1)) 1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>p. p(1 := p 1 + 1)) `\n    {p. p partitions m \\<and> sum p {..m} = k}\n    \\<subseteq> {p. p partitions Suc m \\<and>\n                    sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}", "ultimately"], ["proof (chain)\npicking this:\n  p(1 := p 1 + 1) partitions Suc m\n  sum (p(1 := p 1 + 1)) {..Suc m} = Suc k\n  (p(1 := p 1 + 1)) 1 \\<noteq> 0", "have \"?g1 \\<and> ?g2 \\<and> ?g3\""], ["proof (prove)\nusing this:\n  p(1 := p 1 + 1) partitions Suc m\n  sum (p(1 := p 1 + 1)) {..Suc m} = Suc k\n  (p(1 := p 1 + 1)) 1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. p(1 := p 1 + 1) partitions Suc m \\<and>\n    sum (p(1 := p 1 + 1)) {..Suc m} = Suc k \\<and>\n    (p(1 := p 1 + 1)) 1 \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  p(1 := p 1 + 1) partitions Suc m \\<and>\n  sum (p(1 := p 1 + 1)) {..Suc m} = Suc k \\<and>\n  (p(1 := p 1 + 1)) 1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>p. p(1 := p 1 + 1)) `\n    {p. p partitions m \\<and> sum p {..m} = k}\n    \\<subseteq> {p. p partitions Suc m \\<and>\n                    sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?p2 partitions m; sum ?p2 {..m} = k\\<rbrakk>\n  \\<Longrightarrow> ?p2(1 := ?p2 1 + 1) partitions Suc m \\<and>\n                    sum (?p2(1 := ?p2 1 + 1)) {..Suc m} = Suc k \\<and>\n                    (?p2(1 := ?p2 1 + 1)) 1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>p. p(1 := p 1 + 1)) `\n    {p. p partitions m \\<and> sum p {..m} = k}\n    \\<subseteq> {p. p partitions Suc m \\<and>\n                    sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}", "from this"], ["proof (chain)\npicking this:\n  \\<lbrakk>?p2 partitions m; sum ?p2 {..m} = k\\<rbrakk>\n  \\<Longrightarrow> ?p2(1 := ?p2 1 + 1) partitions Suc m \\<and>\n                    sum (?p2(1 := ?p2 1 + 1)) {..Suc m} = Suc k \\<and>\n                    (?p2(1 := ?p2 1 + 1)) 1 \\<noteq> 0", "show \"?T \\<subseteq> ?S\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?p2 partitions m; sum ?p2 {..m} = k\\<rbrakk>\n  \\<Longrightarrow> ?p2(1 := ?p2 1 + 1) partitions Suc m \\<and>\n                    sum (?p2(1 := ?p2 1 + 1)) {..Suc m} = Suc k \\<and>\n                    (?p2(1 := ?p2 1 + 1)) 1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>p. p(1 := p 1 + 1)) `\n    {p. p partitions m \\<and> sum p {..m} = k}\n    \\<subseteq> {p. p partitions Suc m \\<and>\n                    sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>p. p(1 := p 1 + 1)) ` {p. p partitions m \\<and> sum p {..m} = k}\n  \\<subseteq> {p. p partitions Suc m \\<and>\n                  sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma set_rewrite2:\n  \"{p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}\n    = (\\<lambda>p. (\\<lambda>i. p (i - 1))) ` {p. p partitions (m - k) \\<and> sum p {..m - k} = k}\"\n  (is \"?S = ?T\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0} =\n    (\\<lambda>p i. p (i - 1)) `\n    {p. p partitions m - k \\<and> sum p {..m - k} = k}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}\n    \\<subseteq> (\\<lambda>p i. p (i - 1)) `\n                {p. p partitions m - k \\<and> sum p {..m - k} = k}\n 2. (\\<lambda>p i. p (i - 1)) `\n    {p. p partitions m - k \\<and> sum p {..m - k} = k}\n    \\<subseteq> {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}", "{"], ["proof (state)\ngoal (2 subgoals):\n 1. {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}\n    \\<subseteq> (\\<lambda>p i. p (i - 1)) `\n                {p. p partitions m - k \\<and> sum p {..m - k} = k}\n 2. (\\<lambda>p i. p (i - 1)) `\n    {p. p partitions m - k \\<and> sum p {..m - k} = k}\n    \\<subseteq> {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}", "fix p"], ["proof (state)\ngoal (2 subgoals):\n 1. {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}\n    \\<subseteq> (\\<lambda>p i. p (i - 1)) `\n                {p. p partitions m - k \\<and> sum p {..m - k} = k}\n 2. (\\<lambda>p i. p (i - 1)) `\n    {p. p partitions m - k \\<and> sum p {..m - k} = k}\n    \\<subseteq> {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}", "assume assms: \"p partitions m\" \"sum p {..m} = k\" \"p 1 = 0\""], ["proof (state)\nthis:\n  p partitions m\n  sum p {..m} = k\n  p 1 = 0\n\ngoal (2 subgoals):\n 1. {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}\n    \\<subseteq> (\\<lambda>p i. p (i - 1)) `\n                {p. p partitions m - k \\<and> sum p {..m - k} = k}\n 2. (\\<lambda>p i. p (i - 1)) `\n    {p. p partitions m - k \\<and> sum p {..m - k} = k}\n    \\<subseteq> {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}", "have \"(\\<lambda>i. p (i + 1)) partitions m - k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>i. p (i + 1)) partitions m - k", "using assms partitions_decrease1"], ["proof (prove)\nusing this:\n  p partitions m\n  sum p {..m} = k\n  p 1 = 0\n  \\<lbrakk>?p partitions ?m; sum ?p {..?m} = ?k; ?p 1 = 0\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>i. ?p (i + 1)) partitions ?m - ?k\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. p (i + 1)) partitions m - k", "by blast"], ["proof (state)\nthis:\n  (\\<lambda>i. p (i + 1)) partitions m - k\n\ngoal (2 subgoals):\n 1. {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}\n    \\<subseteq> (\\<lambda>p i. p (i - 1)) `\n                {p. p partitions m - k \\<and> sum p {..m - k} = k}\n 2. (\\<lambda>p i. p (i - 1)) `\n    {p. p partitions m - k \\<and> sum p {..m - k} = k}\n    \\<subseteq> {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>i. p (i + 1)) partitions m - k\n\ngoal (2 subgoals):\n 1. {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}\n    \\<subseteq> (\\<lambda>p i. p (i - 1)) `\n                {p. p partitions m - k \\<and> sum p {..m - k} = k}\n 2. (\\<lambda>p i. p (i - 1)) `\n    {p. p partitions m - k \\<and> sum p {..m - k} = k}\n    \\<subseteq> {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}", "from assms"], ["proof (chain)\npicking this:\n  p partitions m\n  sum p {..m} = k\n  p 1 = 0", "have \"sum (\\<lambda>i. p (i + 1)) {..m - k} = k\""], ["proof (prove)\nusing this:\n  p partitions m\n  sum p {..m} = k\n  p 1 = 0\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<le>m - k. p (i + 1)) = k", "using assms count_decrease1"], ["proof (prove)\nusing this:\n  p partitions m\n  sum p {..m} = k\n  p 1 = 0\n  p partitions m\n  sum p {..m} = k\n  p 1 = 0\n  \\<lbrakk>?p partitions ?m; sum ?p {..?m} = ?k; ?p 1 = 0\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>i\\<le>?m - ?k. ?p (i + 1)) = ?k\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<le>m - k. p (i + 1)) = k", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>i\\<le>m - k. p (i + 1)) = k\n\ngoal (2 subgoals):\n 1. {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}\n    \\<subseteq> (\\<lambda>p i. p (i - 1)) `\n                {p. p partitions m - k \\<and> sum p {..m - k} = k}\n 2. (\\<lambda>p i. p (i - 1)) `\n    {p. p partitions m - k \\<and> sum p {..m - k} = k}\n    \\<subseteq> {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>i. p (i + 1)) partitions m - k\n  (\\<Sum>i\\<le>m - k. p (i + 1)) = k", "have \"(\\<lambda>i. p (i + 1)) \\<in> {p. p partitions m - k \\<and> sum p {..m - k} = k}\""], ["proof (prove)\nusing this:\n  (\\<lambda>i. p (i + 1)) partitions m - k\n  (\\<Sum>i\\<le>m - k. p (i + 1)) = k\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. p (i + 1))\n    \\<in> {p. p partitions m - k \\<and> sum p {..m - k} = k}", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>i. p (i + 1))\n  \\<in> {p. p partitions m - k \\<and> sum p {..m - k} = k}\n\ngoal (2 subgoals):\n 1. {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}\n    \\<subseteq> (\\<lambda>p i. p (i - 1)) `\n                {p. p partitions m - k \\<and> sum p {..m - k} = k}\n 2. (\\<lambda>p i. p (i - 1)) `\n    {p. p partitions m - k \\<and> sum p {..m - k} = k}\n    \\<subseteq> {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>i. p (i + 1))\n  \\<in> {p. p partitions m - k \\<and> sum p {..m - k} = k}\n\ngoal (2 subgoals):\n 1. {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}\n    \\<subseteq> (\\<lambda>p i. p (i - 1)) `\n                {p. p partitions m - k \\<and> sum p {..m - k} = k}\n 2. (\\<lambda>p i. p (i - 1)) `\n    {p. p partitions m - k \\<and> sum p {..m - k} = k}\n    \\<subseteq> {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}", "have \"p = (\\<lambda>i. p ((i - 1) + 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p = (\\<lambda>i. p (i - 1 + 1))", "proof (rule ext)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. p i = p (i - 1 + 1)", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. p i = p (i - 1 + 1)", "show \"p i = p (i - 1 + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p i = p (i - 1 + 1)", "using assms"], ["proof (prove)\nusing this:\n  p partitions m\n  sum p {..m} = k\n  p 1 = 0\n\ngoal (1 subgoal):\n 1. p i = p (i - 1 + 1)", "by (cases i) (auto elim!: partitionsE)"], ["proof (state)\nthis:\n  p i = p (i - 1 + 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p = (\\<lambda>i. p (i - 1 + 1))\n\ngoal (2 subgoals):\n 1. {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}\n    \\<subseteq> (\\<lambda>p i. p (i - 1)) `\n                {p. p partitions m - k \\<and> sum p {..m - k} = k}\n 2. (\\<lambda>p i. p (i - 1)) `\n    {p. p partitions m - k \\<and> sum p {..m - k} = k}\n    \\<subseteq> {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>i. p (i + 1))\n  \\<in> {p. p partitions m - k \\<and> sum p {..m - k} = k}\n  p = (\\<lambda>i. p (i - 1 + 1))", "have \"p \\<in> (\\<lambda>p. (\\<lambda>i. p (i - 1))) ` {p. p partitions m - k \\<and> sum p {..m - k} = k}\""], ["proof (prove)\nusing this:\n  (\\<lambda>i. p (i + 1))\n  \\<in> {p. p partitions m - k \\<and> sum p {..m - k} = k}\n  p = (\\<lambda>i. p (i - 1 + 1))\n\ngoal (1 subgoal):\n 1. p \\<in> (\\<lambda>p i. p (i - 1)) `\n            {p. p partitions m - k \\<and> sum p {..m - k} = k}", "by auto"], ["proof (state)\nthis:\n  p \\<in> (\\<lambda>p i. p (i - 1)) `\n          {p. p partitions m - k \\<and> sum p {..m - k} = k}\n\ngoal (2 subgoals):\n 1. {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}\n    \\<subseteq> (\\<lambda>p i. p (i - 1)) `\n                {p. p partitions m - k \\<and> sum p {..m - k} = k}\n 2. (\\<lambda>p i. p (i - 1)) `\n    {p. p partitions m - k \\<and> sum p {..m - k} = k}\n    \\<subseteq> {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?p2 partitions m; sum ?p2 {..m} = k; ?p2 1 = 0\\<rbrakk>\n  \\<Longrightarrow> ?p2\n                    \\<in> (\\<lambda>p i. p (i - 1)) `\n                          {p. p partitions m - k \\<and> sum p {..m - k} = k}\n\ngoal (2 subgoals):\n 1. {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}\n    \\<subseteq> (\\<lambda>p i. p (i - 1)) `\n                {p. p partitions m - k \\<and> sum p {..m - k} = k}\n 2. (\\<lambda>p i. p (i - 1)) `\n    {p. p partitions m - k \\<and> sum p {..m - k} = k}\n    \\<subseteq> {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}", "from this"], ["proof (chain)\npicking this:\n  \\<lbrakk>?p2 partitions m; sum ?p2 {..m} = k; ?p2 1 = 0\\<rbrakk>\n  \\<Longrightarrow> ?p2\n                    \\<in> (\\<lambda>p i. p (i - 1)) `\n                          {p. p partitions m - k \\<and> sum p {..m - k} = k}", "show \"?S \\<subseteq> ?T\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?p2 partitions m; sum ?p2 {..m} = k; ?p2 1 = 0\\<rbrakk>\n  \\<Longrightarrow> ?p2\n                    \\<in> (\\<lambda>p i. p (i - 1)) `\n                          {p. p partitions m - k \\<and> sum p {..m - k} = k}\n\ngoal (1 subgoal):\n 1. {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}\n    \\<subseteq> (\\<lambda>p i. p (i - 1)) `\n                {p. p partitions m - k \\<and> sum p {..m - k} = k}", "by auto"], ["proof (state)\nthis:\n  {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}\n  \\<subseteq> (\\<lambda>p i. p (i - 1)) `\n              {p. p partitions m - k \\<and> sum p {..m - k} = k}\n\ngoal (1 subgoal):\n 1. (\\<lambda>p i. p (i - 1)) `\n    {p. p partitions m - k \\<and> sum p {..m - k} = k}\n    \\<subseteq> {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>p i. p (i - 1)) `\n    {p. p partitions m - k \\<and> sum p {..m - k} = k}\n    \\<subseteq> {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>p i. p (i - 1)) `\n    {p. p partitions m - k \\<and> sum p {..m - k} = k}\n    \\<subseteq> {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}", "fix p"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>p i. p (i - 1)) `\n    {p. p partitions m - k \\<and> sum p {..m - k} = k}\n    \\<subseteq> {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}", "assume assms: \"p partitions m - k\" \"sum p {..m - k} = k\""], ["proof (state)\nthis:\n  p partitions m - k\n  sum p {..m - k} = k\n\ngoal (1 subgoal):\n 1. (\\<lambda>p i. p (i - 1)) `\n    {p. p partitions m - k \\<and> sum p {..m - k} = k}\n    \\<subseteq> {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}", "from assms"], ["proof (chain)\npicking this:\n  p partitions m - k\n  sum p {..m - k} = k", "have \"(\\<lambda>i. p (i - 1)) partitions m\" (is ?g1)"], ["proof (prove)\nusing this:\n  p partitions m - k\n  sum p {..m - k} = k\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. p (i - 1)) partitions m", "using partitions_increase1"], ["proof (prove)\nusing this:\n  p partitions m - k\n  sum p {..m - k} = k\n  \\<lbrakk>?p partitions ?m - ?k; sum ?p {..?m - ?k} = ?k\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>i. ?p (i - 1)) partitions ?m\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. p (i - 1)) partitions m", "by blast"], ["proof (state)\nthis:\n  (\\<lambda>i. p (i - 1)) partitions m\n\ngoal (1 subgoal):\n 1. (\\<lambda>p i. p (i - 1)) `\n    {p. p partitions m - k \\<and> sum p {..m - k} = k}\n    \\<subseteq> {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>i. p (i - 1)) partitions m\n\ngoal (1 subgoal):\n 1. (\\<lambda>p i. p (i - 1)) `\n    {p. p partitions m - k \\<and> sum p {..m - k} = k}\n    \\<subseteq> {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}", "from assms"], ["proof (chain)\npicking this:\n  p partitions m - k\n  sum p {..m - k} = k", "have \"(\\<Sum>i\\<le>m. p (i - 1)) = k\" (is ?g2)"], ["proof (prove)\nusing this:\n  p partitions m - k\n  sum p {..m - k} = k\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<le>m. p (i - 1)) = k", "using count_increase1"], ["proof (prove)\nusing this:\n  p partitions m - k\n  sum p {..m - k} = k\n  \\<lbrakk>?p partitions ?m - ?k; sum ?p {..?m - ?k} = ?k\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>i\\<le>?m. ?p (i - 1)) = ?k\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<le>m. p (i - 1)) = k", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>i\\<le>m. p (i - 1)) = k\n\ngoal (1 subgoal):\n 1. (\\<lambda>p i. p (i - 1)) `\n    {p. p partitions m - k \\<and> sum p {..m - k} = k}\n    \\<subseteq> {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}", "moreover"], ["proof (state)\nthis:\n  (\\<Sum>i\\<le>m. p (i - 1)) = k\n\ngoal (1 subgoal):\n 1. (\\<lambda>p i. p (i - 1)) `\n    {p. p partitions m - k \\<and> sum p {..m - k} = k}\n    \\<subseteq> {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}", "from assms"], ["proof (chain)\npicking this:\n  p partitions m - k\n  sum p {..m - k} = k", "have \"p 0 = 0\" (is ?g3)"], ["proof (prove)\nusing this:\n  p partitions m - k\n  sum p {..m - k} = k\n\ngoal (1 subgoal):\n 1. p 0 = 0", "by (auto elim!: partitionsE)"], ["proof (state)\nthis:\n  p 0 = 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>p i. p (i - 1)) `\n    {p. p partitions m - k \\<and> sum p {..m - k} = k}\n    \\<subseteq> {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>i. p (i - 1)) partitions m\n  (\\<Sum>i\\<le>m. p (i - 1)) = k\n  p 0 = 0", "have \"?g1 \\<and> ?g2 \\<and> ?g3\""], ["proof (prove)\nusing this:\n  (\\<lambda>i. p (i - 1)) partitions m\n  (\\<Sum>i\\<le>m. p (i - 1)) = k\n  p 0 = 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. p (i - 1)) partitions m \\<and>\n    (\\<Sum>i\\<le>m. p (i - 1)) = k \\<and> p 0 = 0", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>i. p (i - 1)) partitions m \\<and>\n  (\\<Sum>i\\<le>m. p (i - 1)) = k \\<and> p 0 = 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>p i. p (i - 1)) `\n    {p. p partitions m - k \\<and> sum p {..m - k} = k}\n    \\<subseteq> {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?p2 partitions m - k; sum ?p2 {..m - k} = k\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>i. ?p2 (i - 1)) partitions m \\<and>\n                    (\\<Sum>i\\<le>m. ?p2 (i - 1)) = k \\<and> ?p2 0 = 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>p i. p (i - 1)) `\n    {p. p partitions m - k \\<and> sum p {..m - k} = k}\n    \\<subseteq> {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}", "from this"], ["proof (chain)\npicking this:\n  \\<lbrakk>?p2 partitions m - k; sum ?p2 {..m - k} = k\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>i. ?p2 (i - 1)) partitions m \\<and>\n                    (\\<Sum>i\\<le>m. ?p2 (i - 1)) = k \\<and> ?p2 0 = 0", "show \"?T \\<subseteq> ?S\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?p2 partitions m - k; sum ?p2 {..m - k} = k\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>i. ?p2 (i - 1)) partitions m \\<and>\n                    (\\<Sum>i\\<le>m. ?p2 (i - 1)) = k \\<and> ?p2 0 = 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>p i. p (i - 1)) `\n    {p. p partitions m - k \\<and> sum p {..m - k} = k}\n    \\<subseteq> {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>p i. p (i - 1)) `\n  {p. p partitions m - k \\<and> sum p {..m - k} = k}\n  \\<subseteq> {p. p partitions m \\<and> sum p {..m} = k \\<and> p 1 = 0}\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem card_partitions_k_parts:\n  \"card {p. p partitions n \\<and> (\\<Sum>i\\<le>n. p i) = k} = Partition n k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {p. p partitions n \\<and> sum p {..n} = k} = Partition n k", "proof (induct n k rule: Partition.induct)"], ["proof (state)\ngoal (4 subgoals):\n 1. card {p. p partitions 0 \\<and> sum p {..0} = 0} = Partition 0 0\n 2. \\<And>k.\n       card {p. p partitions 0 \\<and> sum p {..0} = Suc k} =\n       Partition 0 (Suc k)\n 3. \\<And>m.\n       card {p. p partitions Suc m \\<and> sum p {..Suc m} = 0} =\n       Partition (Suc m) 0\n 4. \\<And>m k.\n       \\<lbrakk>card {p. p partitions m \\<and> sum p {..m} = k} =\n                Partition m k;\n        card {p. p partitions m - k \\<and> sum p {..m - k} = Suc k} =\n        Partition (m - k) (Suc k)\\<rbrakk>\n       \\<Longrightarrow> card\n                          {p. p partitions Suc m \\<and>\n                              sum p {..Suc m} = Suc k} =\n                         Partition (Suc m) (Suc k)", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (4 subgoals):\n 1. card {p. p partitions 0 \\<and> sum p {..0} = 0} = Partition 0 0\n 2. \\<And>k.\n       card {p. p partitions 0 \\<and> sum p {..0} = Suc k} =\n       Partition 0 (Suc k)\n 3. \\<And>m.\n       card {p. p partitions Suc m \\<and> sum p {..Suc m} = 0} =\n       Partition (Suc m) 0\n 4. \\<And>m k.\n       \\<lbrakk>card {p. p partitions m \\<and> sum p {..m} = k} =\n                Partition m k;\n        card {p. p partitions m - k \\<and> sum p {..m - k} = Suc k} =\n        Partition (m - k) (Suc k)\\<rbrakk>\n       \\<Longrightarrow> card\n                          {p. p partitions Suc m \\<and>\n                              sum p {..Suc m} = Suc k} =\n                         Partition (Suc m) (Suc k)", "have eq: \"{p. p = (\\<lambda>x. 0) \\<and> p 0 = 0} = {(\\<lambda>x. 0)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {p. p = (\\<lambda>x. 0::'b) \\<and> p (0::'a) = (0::'b)} =\n    {\\<lambda>x. 0::'b}", "by auto"], ["proof (state)\nthis:\n  {p. p = (\\<lambda>x. 0::?'b1) \\<and> p (0::?'a1) = (0::?'b1)} =\n  {\\<lambda>x. 0::?'b1}\n\ngoal (4 subgoals):\n 1. card {p. p partitions 0 \\<and> sum p {..0} = 0} = Partition 0 0\n 2. \\<And>k.\n       card {p. p partitions 0 \\<and> sum p {..0} = Suc k} =\n       Partition 0 (Suc k)\n 3. \\<And>m.\n       card {p. p partitions Suc m \\<and> sum p {..Suc m} = 0} =\n       Partition (Suc m) 0\n 4. \\<And>m k.\n       \\<lbrakk>card {p. p partitions m \\<and> sum p {..m} = k} =\n                Partition m k;\n        card {p. p partitions m - k \\<and> sum p {..m - k} = Suc k} =\n        Partition (m - k) (Suc k)\\<rbrakk>\n       \\<Longrightarrow> card\n                          {p. p partitions Suc m \\<and>\n                              sum p {..Suc m} = Suc k} =\n                         Partition (Suc m) (Suc k)", "show \"card {p. p partitions 0 \\<and> sum p {..0} = 0} = Partition 0 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {p. p partitions 0 \\<and> sum p {..0} = 0} = Partition 0 0", "by (simp add: partitions_zero eq)"], ["proof (state)\nthis:\n  card {p. p partitions 0 \\<and> sum p {..0} = 0} = Partition 0 0\n\ngoal (3 subgoals):\n 1. \\<And>k.\n       card {p. p partitions 0 \\<and> sum p {..0} = Suc k} =\n       Partition 0 (Suc k)\n 2. \\<And>m.\n       card {p. p partitions Suc m \\<and> sum p {..Suc m} = 0} =\n       Partition (Suc m) 0\n 3. \\<And>m k.\n       \\<lbrakk>card {p. p partitions m \\<and> sum p {..m} = k} =\n                Partition m k;\n        card {p. p partitions m - k \\<and> sum p {..m - k} = Suc k} =\n        Partition (m - k) (Suc k)\\<rbrakk>\n       \\<Longrightarrow> card\n                          {p. p partitions Suc m \\<and>\n                              sum p {..Suc m} = Suc k} =\n                         Partition (Suc m) (Suc k)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>k.\n       card {p. p partitions 0 \\<and> sum p {..0} = Suc k} =\n       Partition 0 (Suc k)\n 2. \\<And>m.\n       card {p. p partitions Suc m \\<and> sum p {..Suc m} = 0} =\n       Partition (Suc m) 0\n 3. \\<And>m k.\n       \\<lbrakk>card {p. p partitions m \\<and> sum p {..m} = k} =\n                Partition m k;\n        card {p. p partitions m - k \\<and> sum p {..m - k} = Suc k} =\n        Partition (m - k) (Suc k)\\<rbrakk>\n       \\<Longrightarrow> card\n                          {p. p partitions Suc m \\<and>\n                              sum p {..Suc m} = Suc k} =\n                         Partition (Suc m) (Suc k)", "case (2 k)"], ["proof (state)\nthis:\n  \n\ngoal (3 subgoals):\n 1. \\<And>k.\n       card {p. p partitions 0 \\<and> sum p {..0} = Suc k} =\n       Partition 0 (Suc k)\n 2. \\<And>m.\n       card {p. p partitions Suc m \\<and> sum p {..Suc m} = 0} =\n       Partition (Suc m) 0\n 3. \\<And>m k.\n       \\<lbrakk>card {p. p partitions m \\<and> sum p {..m} = k} =\n                Partition m k;\n        card {p. p partitions m - k \\<and> sum p {..m - k} = Suc k} =\n        Partition (m - k) (Suc k)\\<rbrakk>\n       \\<Longrightarrow> card\n                          {p. p partitions Suc m \\<and>\n                              sum p {..Suc m} = Suc k} =\n                         Partition (Suc m) (Suc k)", "have eq: \"{p. p = (\\<lambda>x. 0) \\<and> p 0 = Suc k} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {p. p = (\\<lambda>x. 0) \\<and> p (0::'a) = Suc k} = {}", "by auto"], ["proof (state)\nthis:\n  {p. p = (\\<lambda>x. 0) \\<and> p (0::?'a1) = Suc k} = {}\n\ngoal (3 subgoals):\n 1. \\<And>k.\n       card {p. p partitions 0 \\<and> sum p {..0} = Suc k} =\n       Partition 0 (Suc k)\n 2. \\<And>m.\n       card {p. p partitions Suc m \\<and> sum p {..Suc m} = 0} =\n       Partition (Suc m) 0\n 3. \\<And>m k.\n       \\<lbrakk>card {p. p partitions m \\<and> sum p {..m} = k} =\n                Partition m k;\n        card {p. p partitions m - k \\<and> sum p {..m - k} = Suc k} =\n        Partition (m - k) (Suc k)\\<rbrakk>\n       \\<Longrightarrow> card\n                          {p. p partitions Suc m \\<and>\n                              sum p {..Suc m} = Suc k} =\n                         Partition (Suc m) (Suc k)", "show \"card {p. p partitions 0 \\<and> sum p {..0} = Suc k} = Partition 0 (Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {p. p partitions 0 \\<and> sum p {..0} = Suc k} =\n    Partition 0 (Suc k)", "by (simp add: partitions_zero eq)"], ["proof (state)\nthis:\n  card {p. p partitions 0 \\<and> sum p {..0} = Suc k} = Partition 0 (Suc k)\n\ngoal (2 subgoals):\n 1. \\<And>m.\n       card {p. p partitions Suc m \\<and> sum p {..Suc m} = 0} =\n       Partition (Suc m) 0\n 2. \\<And>m k.\n       \\<lbrakk>card {p. p partitions m \\<and> sum p {..m} = k} =\n                Partition m k;\n        card {p. p partitions m - k \\<and> sum p {..m - k} = Suc k} =\n        Partition (m - k) (Suc k)\\<rbrakk>\n       \\<Longrightarrow> card\n                          {p. p partitions Suc m \\<and>\n                              sum p {..Suc m} = Suc k} =\n                         Partition (Suc m) (Suc k)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>m.\n       card {p. p partitions Suc m \\<and> sum p {..Suc m} = 0} =\n       Partition (Suc m) 0\n 2. \\<And>m k.\n       \\<lbrakk>card {p. p partitions m \\<and> sum p {..m} = k} =\n                Partition m k;\n        card {p. p partitions m - k \\<and> sum p {..m - k} = Suc k} =\n        Partition (m - k) (Suc k)\\<rbrakk>\n       \\<Longrightarrow> card\n                          {p. p partitions Suc m \\<and>\n                              sum p {..Suc m} = Suc k} =\n                         Partition (Suc m) (Suc k)", "case (3 m)"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>m.\n       card {p. p partitions Suc m \\<and> sum p {..Suc m} = 0} =\n       Partition (Suc m) 0\n 2. \\<And>m k.\n       \\<lbrakk>card {p. p partitions m \\<and> sum p {..m} = k} =\n                Partition m k;\n        card {p. p partitions m - k \\<and> sum p {..m - k} = Suc k} =\n        Partition (m - k) (Suc k)\\<rbrakk>\n       \\<Longrightarrow> card\n                          {p. p partitions Suc m \\<and>\n                              sum p {..Suc m} = Suc k} =\n                         Partition (Suc m) (Suc k)", "have eq: \"{p. p partitions Suc m \\<and> sum p {..Suc m} = 0} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {p. p partitions Suc m \\<and> sum p {..Suc m} = 0} = {}", "by (fastforce elim!: partitionsE simp add: le_Suc_eq)"], ["proof (state)\nthis:\n  {p. p partitions Suc m \\<and> sum p {..Suc m} = 0} = {}\n\ngoal (2 subgoals):\n 1. \\<And>m.\n       card {p. p partitions Suc m \\<and> sum p {..Suc m} = 0} =\n       Partition (Suc m) 0\n 2. \\<And>m k.\n       \\<lbrakk>card {p. p partitions m \\<and> sum p {..m} = k} =\n                Partition m k;\n        card {p. p partitions m - k \\<and> sum p {..m - k} = Suc k} =\n        Partition (m - k) (Suc k)\\<rbrakk>\n       \\<Longrightarrow> card\n                          {p. p partitions Suc m \\<and>\n                              sum p {..Suc m} = Suc k} =\n                         Partition (Suc m) (Suc k)", "from this"], ["proof (chain)\npicking this:\n  {p. p partitions Suc m \\<and> sum p {..Suc m} = 0} = {}", "show \"card {p. p partitions Suc m \\<and> sum p {..Suc m} = 0} = Partition (Suc m) 0\""], ["proof (prove)\nusing this:\n  {p. p partitions Suc m \\<and> sum p {..Suc m} = 0} = {}\n\ngoal (1 subgoal):\n 1. card {p. p partitions Suc m \\<and> sum p {..Suc m} = 0} =\n    Partition (Suc m) 0", "by (simp only: Partition.simps card.empty)"], ["proof (state)\nthis:\n  card {p. p partitions Suc m \\<and> sum p {..Suc m} = 0} =\n  Partition (Suc m) 0\n\ngoal (1 subgoal):\n 1. \\<And>m k.\n       \\<lbrakk>card {p. p partitions m \\<and> sum p {..m} = k} =\n                Partition m k;\n        card {p. p partitions m - k \\<and> sum p {..m - k} = Suc k} =\n        Partition (m - k) (Suc k)\\<rbrakk>\n       \\<Longrightarrow> card\n                          {p. p partitions Suc m \\<and>\n                              sum p {..Suc m} = Suc k} =\n                         Partition (Suc m) (Suc k)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m k.\n       \\<lbrakk>card {p. p partitions m \\<and> sum p {..m} = k} =\n                Partition m k;\n        card {p. p partitions m - k \\<and> sum p {..m - k} = Suc k} =\n        Partition (m - k) (Suc k)\\<rbrakk>\n       \\<Longrightarrow> card\n                          {p. p partitions Suc m \\<and>\n                              sum p {..Suc m} = Suc k} =\n                         Partition (Suc m) (Suc k)", "case (4 m k)"], ["proof (state)\nthis:\n  card {p. p partitions m \\<and> sum p {..m} = k} = Partition m k\n  card {p. p partitions m - k \\<and> sum p {..m - k} = Suc k} =\n  Partition (m - k) (Suc k)\n\ngoal (1 subgoal):\n 1. \\<And>m k.\n       \\<lbrakk>card {p. p partitions m \\<and> sum p {..m} = k} =\n                Partition m k;\n        card {p. p partitions m - k \\<and> sum p {..m - k} = Suc k} =\n        Partition (m - k) (Suc k)\\<rbrakk>\n       \\<Longrightarrow> card\n                          {p. p partitions Suc m \\<and>\n                              sum p {..Suc m} = Suc k} =\n                         Partition (Suc m) (Suc k)", "let ?set1 = \"{p. p partitions Suc m \\<and> sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m k.\n       \\<lbrakk>card {p. p partitions m \\<and> sum p {..m} = k} =\n                Partition m k;\n        card {p. p partitions m - k \\<and> sum p {..m - k} = Suc k} =\n        Partition (m - k) (Suc k)\\<rbrakk>\n       \\<Longrightarrow> card\n                          {p. p partitions Suc m \\<and>\n                              sum p {..Suc m} = Suc k} =\n                         Partition (Suc m) (Suc k)", "let ?set2 = \"{p. p partitions Suc m \\<and> sum p {..Suc m} = Suc k \\<and> p 1 = 0}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m k.\n       \\<lbrakk>card {p. p partitions m \\<and> sum p {..m} = k} =\n                Partition m k;\n        card {p. p partitions m - k \\<and> sum p {..m - k} = Suc k} =\n        Partition (m - k) (Suc k)\\<rbrakk>\n       \\<Longrightarrow> card\n                          {p. p partitions Suc m \\<and>\n                              sum p {..Suc m} = Suc k} =\n                         Partition (Suc m) (Suc k)", "have \"finite {p. p partitions Suc m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {p. p partitions Suc m}", "by (simp add: finite_partitions)"], ["proof (state)\nthis:\n  finite {p. p partitions Suc m}\n\ngoal (1 subgoal):\n 1. \\<And>m k.\n       \\<lbrakk>card {p. p partitions m \\<and> sum p {..m} = k} =\n                Partition m k;\n        card {p. p partitions m - k \\<and> sum p {..m - k} = Suc k} =\n        Partition (m - k) (Suc k)\\<rbrakk>\n       \\<Longrightarrow> card\n                          {p. p partitions Suc m \\<and>\n                              sum p {..Suc m} = Suc k} =\n                         Partition (Suc m) (Suc k)", "from this"], ["proof (chain)\npicking this:\n  finite {p. p partitions Suc m}", "have finite_sets: \"finite ?set1\" \"finite ?set2\""], ["proof (prove)\nusing this:\n  finite {p. p partitions Suc m}\n\ngoal (1 subgoal):\n 1. finite\n     {p. p partitions Suc m \\<and>\n         sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0} &&&\n    finite\n     {p. p partitions Suc m \\<and> sum p {..Suc m} = Suc k \\<and> p 1 = 0}", "by simp+"], ["proof (state)\nthis:\n  finite\n   {p. p partitions Suc m \\<and>\n       sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}\n  finite\n   {p. p partitions Suc m \\<and> sum p {..Suc m} = Suc k \\<and> p 1 = 0}\n\ngoal (1 subgoal):\n 1. \\<And>m k.\n       \\<lbrakk>card {p. p partitions m \\<and> sum p {..m} = k} =\n                Partition m k;\n        card {p. p partitions m - k \\<and> sum p {..m - k} = Suc k} =\n        Partition (m - k) (Suc k)\\<rbrakk>\n       \\<Longrightarrow> card\n                          {p. p partitions Suc m \\<and>\n                              sum p {..Suc m} = Suc k} =\n                         Partition (Suc m) (Suc k)", "have set_eq: \"{p. p partitions Suc m \\<and> sum p {..Suc m} = Suc k} = ?set1 \\<union> ?set2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {p. p partitions Suc m \\<and> sum p {..Suc m} = Suc k} =\n    {p. p partitions Suc m \\<and>\n        sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0} \\<union>\n    {p. p partitions Suc m \\<and> sum p {..Suc m} = Suc k \\<and> p 1 = 0}", "by auto"], ["proof (state)\nthis:\n  {p. p partitions Suc m \\<and> sum p {..Suc m} = Suc k} =\n  {p. p partitions Suc m \\<and>\n      sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0} \\<union>\n  {p. p partitions Suc m \\<and> sum p {..Suc m} = Suc k \\<and> p 1 = 0}\n\ngoal (1 subgoal):\n 1. \\<And>m k.\n       \\<lbrakk>card {p. p partitions m \\<and> sum p {..m} = k} =\n                Partition m k;\n        card {p. p partitions m - k \\<and> sum p {..m - k} = Suc k} =\n        Partition (m - k) (Suc k)\\<rbrakk>\n       \\<Longrightarrow> card\n                          {p. p partitions Suc m \\<and>\n                              sum p {..Suc m} = Suc k} =\n                         Partition (Suc m) (Suc k)", "have disjoint: \"?set1 \\<inter> ?set2 = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {p. p partitions Suc m \\<and>\n        sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0} \\<inter>\n    {p. p partitions Suc m \\<and> sum p {..Suc m} = Suc k \\<and> p 1 = 0} =\n    {}", "by auto"], ["proof (state)\nthis:\n  {p. p partitions Suc m \\<and>\n      sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0} \\<inter>\n  {p. p partitions Suc m \\<and> sum p {..Suc m} = Suc k \\<and> p 1 = 0} =\n  {}\n\ngoal (1 subgoal):\n 1. \\<And>m k.\n       \\<lbrakk>card {p. p partitions m \\<and> sum p {..m} = k} =\n                Partition m k;\n        card {p. p partitions m - k \\<and> sum p {..m - k} = Suc k} =\n        Partition (m - k) (Suc k)\\<rbrakk>\n       \\<Longrightarrow> card\n                          {p. p partitions Suc m \\<and>\n                              sum p {..Suc m} = Suc k} =\n                         Partition (Suc m) (Suc k)", "have inj1: \"inj_on (\\<lambda>p. p(1 := p 1 + 1)) {p. p partitions m \\<and> sum p {..m} = k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>p. p(1 := p 1 + 1))\n     {p. p partitions m \\<and> sum p {..m} = k}", "by (auto intro!: inj_onI) (metis diff_Suc_1 fun_upd_idem_iff fun_upd_upd)"], ["proof (state)\nthis:\n  inj_on (\\<lambda>p. p(1 := p 1 + 1))\n   {p. p partitions m \\<and> sum p {..m} = k}\n\ngoal (1 subgoal):\n 1. \\<And>m k.\n       \\<lbrakk>card {p. p partitions m \\<and> sum p {..m} = k} =\n                Partition m k;\n        card {p. p partitions m - k \\<and> sum p {..m - k} = Suc k} =\n        Partition (m - k) (Suc k)\\<rbrakk>\n       \\<Longrightarrow> card\n                          {p. p partitions Suc m \\<and>\n                              sum p {..Suc m} = Suc k} =\n                         Partition (Suc m) (Suc k)", "have inj2: \"inj_on (\\<lambda>p i. p (i - 1)) {p. p partitions m - k \\<and> sum p {..m - k} = Suc k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>p i. p (i - 1))\n     {p. p partitions m - k \\<and> sum p {..m - k} = Suc k}", "by (auto intro!: inj_onI simp add: fun_eq_iff) (metis add_diff_cancel_right')"], ["proof (state)\nthis:\n  inj_on (\\<lambda>p i. p (i - 1))\n   {p. p partitions m - k \\<and> sum p {..m - k} = Suc k}\n\ngoal (1 subgoal):\n 1. \\<And>m k.\n       \\<lbrakk>card {p. p partitions m \\<and> sum p {..m} = k} =\n                Partition m k;\n        card {p. p partitions m - k \\<and> sum p {..m - k} = Suc k} =\n        Partition (m - k) (Suc k)\\<rbrakk>\n       \\<Longrightarrow> card\n                          {p. p partitions Suc m \\<and>\n                              sum p {..Suc m} = Suc k} =\n                         Partition (Suc m) (Suc k)", "have card1: \"card ?set1 = Partition m k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     {p. p partitions Suc m \\<and>\n         sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0} =\n    Partition m k", "using inj1 4(1)"], ["proof (prove)\nusing this:\n  inj_on (\\<lambda>p. p(1 := p 1 + 1))\n   {p. p partitions m \\<and> sum p {..m} = k}\n  card {p. p partitions m \\<and> sum p {..m} = k} = Partition m k\n\ngoal (1 subgoal):\n 1. card\n     {p. p partitions Suc m \\<and>\n         sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0} =\n    Partition m k", "by (simp only: set_rewrite1 card_image)"], ["proof (state)\nthis:\n  card\n   {p. p partitions Suc m \\<and>\n       sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0} =\n  Partition m k\n\ngoal (1 subgoal):\n 1. \\<And>m k.\n       \\<lbrakk>card {p. p partitions m \\<and> sum p {..m} = k} =\n                Partition m k;\n        card {p. p partitions m - k \\<and> sum p {..m - k} = Suc k} =\n        Partition (m - k) (Suc k)\\<rbrakk>\n       \\<Longrightarrow> card\n                          {p. p partitions Suc m \\<and>\n                              sum p {..Suc m} = Suc k} =\n                         Partition (Suc m) (Suc k)", "have card2: \"card ?set2 = Partition (m - k) (Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     {p. p partitions Suc m \\<and> sum p {..Suc m} = Suc k \\<and> p 1 = 0} =\n    Partition (m - k) (Suc k)", "using inj2 4(2)"], ["proof (prove)\nusing this:\n  inj_on (\\<lambda>p i. p (i - 1))\n   {p. p partitions m - k \\<and> sum p {..m - k} = Suc k}\n  card {p. p partitions m - k \\<and> sum p {..m - k} = Suc k} =\n  Partition (m - k) (Suc k)\n\ngoal (1 subgoal):\n 1. card\n     {p. p partitions Suc m \\<and> sum p {..Suc m} = Suc k \\<and> p 1 = 0} =\n    Partition (m - k) (Suc k)", "by (simp only: set_rewrite2 card_image diff_Suc_Suc)"], ["proof (state)\nthis:\n  card\n   {p. p partitions Suc m \\<and> sum p {..Suc m} = Suc k \\<and> p 1 = 0} =\n  Partition (m - k) (Suc k)\n\ngoal (1 subgoal):\n 1. \\<And>m k.\n       \\<lbrakk>card {p. p partitions m \\<and> sum p {..m} = k} =\n                Partition m k;\n        card {p. p partitions m - k \\<and> sum p {..m - k} = Suc k} =\n        Partition (m - k) (Suc k)\\<rbrakk>\n       \\<Longrightarrow> card\n                          {p. p partitions Suc m \\<and>\n                              sum p {..Suc m} = Suc k} =\n                         Partition (Suc m) (Suc k)", "have \"card {p. p partitions Suc m \\<and> sum p {..Suc m} = Suc k} = Partition m k + Partition (m - k) (Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {p. p partitions Suc m \\<and> sum p {..Suc m} = Suc k} =\n    Partition m k + Partition (m - k) (Suc k)", "using finite_sets disjoint"], ["proof (prove)\nusing this:\n  finite\n   {p. p partitions Suc m \\<and>\n       sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0}\n  finite\n   {p. p partitions Suc m \\<and> sum p {..Suc m} = Suc k \\<and> p 1 = 0}\n  {p. p partitions Suc m \\<and>\n      sum p {..Suc m} = Suc k \\<and> p 1 \\<noteq> 0} \\<inter>\n  {p. p partitions Suc m \\<and> sum p {..Suc m} = Suc k \\<and> p 1 = 0} =\n  {}\n\ngoal (1 subgoal):\n 1. card {p. p partitions Suc m \\<and> sum p {..Suc m} = Suc k} =\n    Partition m k + Partition (m - k) (Suc k)", "by (simp only: set_eq card_Un_disjoint card1 card2)"], ["proof (state)\nthis:\n  card {p. p partitions Suc m \\<and> sum p {..Suc m} = Suc k} =\n  Partition m k + Partition (m - k) (Suc k)\n\ngoal (1 subgoal):\n 1. \\<And>m k.\n       \\<lbrakk>card {p. p partitions m \\<and> sum p {..m} = k} =\n                Partition m k;\n        card {p. p partitions m - k \\<and> sum p {..m - k} = Suc k} =\n        Partition (m - k) (Suc k)\\<rbrakk>\n       \\<Longrightarrow> card\n                          {p. p partitions Suc m \\<and>\n                              sum p {..Suc m} = Suc k} =\n                         Partition (Suc m) (Suc k)", "from this"], ["proof (chain)\npicking this:\n  card {p. p partitions Suc m \\<and> sum p {..Suc m} = Suc k} =\n  Partition m k + Partition (m - k) (Suc k)", "show \"card {p. p partitions Suc m \\<and> sum p {..Suc m} = Suc k} = Partition (Suc m) (Suc k)\""], ["proof (prove)\nusing this:\n  card {p. p partitions Suc m \\<and> sum p {..Suc m} = Suc k} =\n  Partition m k + Partition (m - k) (Suc k)\n\ngoal (1 subgoal):\n 1. card {p. p partitions Suc m \\<and> sum p {..Suc m} = Suc k} =\n    Partition (Suc m) (Suc k)", "by auto"], ["proof (state)\nthis:\n  card {p. p partitions Suc m \\<and> sum p {..Suc m} = Suc k} =\n  Partition (Suc m) (Suc k)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem card_partitions:\n  \"card {p. p partitions n} = (\\<Sum>k\\<le>n. Partition n k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {p. p partitions n} = sum (Partition n) {..n}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card {p. p partitions n} = sum (Partition n) {..n}", "have seteq: \"{p. p partitions n} = \\<Union>((\\<lambda>k. {p. p partitions n \\<and> (\\<Sum>i\\<le>n. p i) = k}) ` {..n})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {p. p partitions n} =\n    (\\<Union>k\\<le>n. {p. p partitions n \\<and> sum p {..n} = k})", "by (auto intro: partitions_parts_bounded)"], ["proof (state)\nthis:\n  {p. p partitions n} =\n  (\\<Union>k\\<le>n. {p. p partitions n \\<and> sum p {..n} = k})\n\ngoal (1 subgoal):\n 1. card {p. p partitions n} = sum (Partition n) {..n}", "have finite: \"\\<And>k. finite {p. p partitions n \\<and> sum p {..n} = k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k. finite {p. p partitions n \\<and> sum p {..n} = k}", "by (simp add: finite_partitions)"], ["proof (state)\nthis:\n  finite {p. p partitions n \\<and> sum p {..n} = ?k}\n\ngoal (1 subgoal):\n 1. card {p. p partitions n} = sum (Partition n) {..n}", "have \"card {p. p partitions n} = card (\\<Union>((\\<lambda>k. {p. p partitions n \\<and> (\\<Sum>i\\<le>n. p i) = k}) ` {..n}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {p. p partitions n} =\n    card (\\<Union>k\\<le>n. {p. p partitions n \\<and> sum p {..n} = k})", "using finite"], ["proof (prove)\nusing this:\n  finite {p. p partitions n \\<and> sum p {..n} = ?k}\n\ngoal (1 subgoal):\n 1. card {p. p partitions n} =\n    card (\\<Union>k\\<le>n. {p. p partitions n \\<and> sum p {..n} = k})", "by (simp add: seteq)"], ["proof (state)\nthis:\n  card {p. p partitions n} =\n  card (\\<Union>k\\<le>n. {p. p partitions n \\<and> sum p {..n} = k})\n\ngoal (1 subgoal):\n 1. card {p. p partitions n} = sum (Partition n) {..n}", "also"], ["proof (state)\nthis:\n  card {p. p partitions n} =\n  card (\\<Union>k\\<le>n. {p. p partitions n \\<and> sum p {..n} = k})\n\ngoal (1 subgoal):\n 1. card {p. p partitions n} = sum (Partition n) {..n}", "have \"... = (\\<Sum>x\\<le>n. card {p. p partitions n \\<and> sum p {..n} = x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (\\<Union>k\\<le>n. {p. p partitions n \\<and> sum p {..n} = k}) =\n    (\\<Sum>x\\<le>n. card {p. p partitions n \\<and> sum p {..n} = x})", "using finite"], ["proof (prove)\nusing this:\n  finite {p. p partitions n \\<and> sum p {..n} = ?k}\n\ngoal (1 subgoal):\n 1. card (\\<Union>k\\<le>n. {p. p partitions n \\<and> sum p {..n} = k}) =\n    (\\<Sum>x\\<le>n. card {p. p partitions n \\<and> sum p {..n} = x})", "by (subst card_UN_disjoint) auto"], ["proof (state)\nthis:\n  card (\\<Union>k\\<le>n. {p. p partitions n \\<and> sum p {..n} = k}) =\n  (\\<Sum>x\\<le>n. card {p. p partitions n \\<and> sum p {..n} = x})\n\ngoal (1 subgoal):\n 1. card {p. p partitions n} = sum (Partition n) {..n}", "also"], ["proof (state)\nthis:\n  card (\\<Union>k\\<le>n. {p. p partitions n \\<and> sum p {..n} = k}) =\n  (\\<Sum>x\\<le>n. card {p. p partitions n \\<and> sum p {..n} = x})\n\ngoal (1 subgoal):\n 1. card {p. p partitions n} = sum (Partition n) {..n}", "have \"... = (\\<Sum>k\\<le>n. Partition n k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<le>n. card {p. p partitions n \\<and> sum p {..n} = x}) =\n    sum (Partition n) {..n}", "by (simp add: card_partitions_k_parts)"], ["proof (state)\nthis:\n  (\\<Sum>x\\<le>n. card {p. p partitions n \\<and> sum p {..n} = x}) =\n  sum (Partition n) {..n}\n\ngoal (1 subgoal):\n 1. card {p. p partitions n} = sum (Partition n) {..n}", "finally"], ["proof (chain)\npicking this:\n  card {p. p partitions n} = sum (Partition n) {..n}", "show ?thesis"], ["proof (prove)\nusing this:\n  card {p. p partitions n} = sum (Partition n) {..n}\n\ngoal (1 subgoal):\n 1. card {p. p partitions n} = sum (Partition n) {..n}", "."], ["proof (state)\nthis:\n  card {p. p partitions n} = sum (Partition n) {..n}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma card_partitions_atmost_k_parts:\n  \"card {p. p partitions n \\<and> sum p {..n} \\<le> k} = Partition (n + k) k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {p. p partitions n \\<and> sum p {..n} \\<le> k} =\n    Partition (n + k) k", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card {p. p partitions n \\<and> sum p {..n} \\<le> k} =\n    Partition (n + k) k", "have \"card {p. p partitions n \\<and> sum p {..n} \\<le> k} =\n    card (\\<Union>((\\<lambda>k'. {p. p partitions n \\<and> sum p {..n} = k'}) ` {..k}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {p. p partitions n \\<and> sum p {..n} \\<le> k} =\n    card (\\<Union>k'\\<le>k. {p. p partitions n \\<and> sum p {..n} = k'})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card {p. p partitions n \\<and> sum p {..n} \\<le> k} =\n    card (\\<Union>k'\\<le>k. {p. p partitions n \\<and> sum p {..n} = k'})", "have \"{p. p partitions n \\<and> sum p {..n} \\<le> k} =\n      (\\<Union>k'\\<le>k. {p. p partitions n \\<and> sum p {..n} = k'})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {p. p partitions n \\<and> sum p {..n} \\<le> k} =\n    (\\<Union>k'\\<le>k. {p. p partitions n \\<and> sum p {..n} = k'})", "by auto"], ["proof (state)\nthis:\n  {p. p partitions n \\<and> sum p {..n} \\<le> k} =\n  (\\<Union>k'\\<le>k. {p. p partitions n \\<and> sum p {..n} = k'})\n\ngoal (1 subgoal):\n 1. card {p. p partitions n \\<and> sum p {..n} \\<le> k} =\n    card (\\<Union>k'\\<le>k. {p. p partitions n \\<and> sum p {..n} = k'})", "from this"], ["proof (chain)\npicking this:\n  {p. p partitions n \\<and> sum p {..n} \\<le> k} =\n  (\\<Union>k'\\<le>k. {p. p partitions n \\<and> sum p {..n} = k'})", "show ?thesis"], ["proof (prove)\nusing this:\n  {p. p partitions n \\<and> sum p {..n} \\<le> k} =\n  (\\<Union>k'\\<le>k. {p. p partitions n \\<and> sum p {..n} = k'})\n\ngoal (1 subgoal):\n 1. card {p. p partitions n \\<and> sum p {..n} \\<le> k} =\n    card (\\<Union>k'\\<le>k. {p. p partitions n \\<and> sum p {..n} = k'})", "by simp"], ["proof (state)\nthis:\n  card {p. p partitions n \\<and> sum p {..n} \\<le> k} =\n  card (\\<Union>k'\\<le>k. {p. p partitions n \\<and> sum p {..n} = k'})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card {p. p partitions n \\<and> sum p {..n} \\<le> k} =\n  card (\\<Union>k'\\<le>k. {p. p partitions n \\<and> sum p {..n} = k'})\n\ngoal (1 subgoal):\n 1. card {p. p partitions n \\<and> sum p {..n} \\<le> k} =\n    Partition (n + k) k", "also"], ["proof (state)\nthis:\n  card {p. p partitions n \\<and> sum p {..n} \\<le> k} =\n  card (\\<Union>k'\\<le>k. {p. p partitions n \\<and> sum p {..n} = k'})\n\ngoal (1 subgoal):\n 1. card {p. p partitions n \\<and> sum p {..n} \\<le> k} =\n    Partition (n + k) k", "have \"card (\\<Union>((\\<lambda>k'. {p. p partitions n \\<and> sum p {..n} = k'}) ` {..k})) =\n    sum (\\<lambda>k'. card {p. p partitions n \\<and> sum p {..n} = k'}) {..k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (\\<Union>k'\\<le>k. {p. p partitions n \\<and> sum p {..n} = k'}) =\n    (\\<Sum>k'\\<le>k. card {p. p partitions n \\<and> sum p {..n} = k'})", "using finite_partitions_k_parts"], ["proof (prove)\nusing this:\n  finite {p. p partitions ?n \\<and> sum p {..?n} = ?k}\n\ngoal (1 subgoal):\n 1. card (\\<Union>k'\\<le>k. {p. p partitions n \\<and> sum p {..n} = k'}) =\n    (\\<Sum>k'\\<le>k. card {p. p partitions n \\<and> sum p {..n} = k'})", "by (subst card_UN_disjoint) auto"], ["proof (state)\nthis:\n  card (\\<Union>k'\\<le>k. {p. p partitions n \\<and> sum p {..n} = k'}) =\n  (\\<Sum>k'\\<le>k. card {p. p partitions n \\<and> sum p {..n} = k'})\n\ngoal (1 subgoal):\n 1. card {p. p partitions n \\<and> sum p {..n} \\<le> k} =\n    Partition (n + k) k", "also"], ["proof (state)\nthis:\n  card (\\<Union>k'\\<le>k. {p. p partitions n \\<and> sum p {..n} = k'}) =\n  (\\<Sum>k'\\<le>k. card {p. p partitions n \\<and> sum p {..n} = k'})\n\ngoal (1 subgoal):\n 1. card {p. p partitions n \\<and> sum p {..n} \\<le> k} =\n    Partition (n + k) k", "have \"\\<dots> = sum (\\<lambda>k'. Partition n k') {..k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k'\\<le>k. card {p. p partitions n \\<and> sum p {..n} = k'}) =\n    sum (Partition n) {..k}", "using card_partitions_k_parts"], ["proof (prove)\nusing this:\n  card {p. p partitions ?n \\<and> sum p {..?n} = ?k} = Partition ?n ?k\n\ngoal (1 subgoal):\n 1. (\\<Sum>k'\\<le>k. card {p. p partitions n \\<and> sum p {..n} = k'}) =\n    sum (Partition n) {..k}", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k'\\<le>k. card {p. p partitions n \\<and> sum p {..n} = k'}) =\n  sum (Partition n) {..k}\n\ngoal (1 subgoal):\n 1. card {p. p partitions n \\<and> sum p {..n} \\<le> k} =\n    Partition (n + k) k", "also"], ["proof (state)\nthis:\n  (\\<Sum>k'\\<le>k. card {p. p partitions n \\<and> sum p {..n} = k'}) =\n  sum (Partition n) {..k}\n\ngoal (1 subgoal):\n 1. card {p. p partitions n \\<and> sum p {..n} \\<le> k} =\n    Partition (n + k) k", "have \"\\<dots> = Partition (n + k) k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (Partition n) {..k} = Partition (n + k) k", "using Partition_sum_Partition_diff"], ["proof (prove)\nusing this:\n  ?k \\<le> ?m \\<Longrightarrow>\n  Partition ?m ?k = sum (Partition (?m - ?k)) {..?k}\n\ngoal (1 subgoal):\n 1. sum (Partition n) {..k} = Partition (n + k) k", "by simp"], ["proof (state)\nthis:\n  sum (Partition n) {..k} = Partition (n + k) k\n\ngoal (1 subgoal):\n 1. card {p. p partitions n \\<and> sum p {..n} \\<le> k} =\n    Partition (n + k) k", "finally"], ["proof (chain)\npicking this:\n  card {p. p partitions n \\<and> sum p {..n} \\<le> k} = Partition (n + k) k", "show ?thesis"], ["proof (prove)\nusing this:\n  card {p. p partitions n \\<and> sum p {..n} \\<le> k} = Partition (n + k) k\n\ngoal (1 subgoal):\n 1. card {p. p partitions n \\<and> sum p {..n} \\<le> k} =\n    Partition (n + k) k", "."], ["proof (state)\nthis:\n  card {p. p partitions n \\<and> sum p {..n} \\<le> k} = Partition (n + k) k\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Cardinality of Number Partitions as Multisets of Natural Numbers\\<close>"], ["", "lemma bij_betw_multiset_number_partition_with_size:\n  \"bij_betw count {N. number_partition n N \\<and> size N = k} {p. p partitions n \\<and> sum p {..n} = k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw count {N. number_partition n N \\<and> size N = k}\n     {p. p partitions n \\<and> sum p {..n} = k}", "proof (rule bij_betw_byWitness[where f'=\"Abs_multiset\"])"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<forall>a\\<in>{N. number_partition n N \\<and> size N = k}.\n       Abs_multiset (count a) = a\n 2. \\<forall>a'\\<in>{p. p partitions n \\<and> sum p {..n} = k}.\n       count (Abs_multiset a') = a'\n 3. count ` {N. number_partition n N \\<and> size N = k}\n    \\<subseteq> {p. p partitions n \\<and> sum p {..n} = k}\n 4. Abs_multiset ` {p. p partitions n \\<and> sum p {..n} = k}\n    \\<subseteq> {N. number_partition n N \\<and> size N = k}", "show \"\\<forall>N\\<in>{N. number_partition n N \\<and> size N = k}. Abs_multiset (count N) = N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>N\\<in>{N. number_partition n N \\<and> size N = k}.\n       Abs_multiset (count N) = N", "using count_inverse"], ["proof (prove)\nusing this:\n  Abs_multiset (count ?x) = ?x\n\ngoal (1 subgoal):\n 1. \\<forall>N\\<in>{N. number_partition n N \\<and> size N = k}.\n       Abs_multiset (count N) = N", "by blast"], ["proof (state)\nthis:\n  \\<forall>N\\<in>{N. number_partition n N \\<and> size N = k}.\n     Abs_multiset (count N) = N\n\ngoal (3 subgoals):\n 1. \\<forall>a'\\<in>{p. p partitions n \\<and> sum p {..n} = k}.\n       count (Abs_multiset a') = a'\n 2. count ` {N. number_partition n N \\<and> size N = k}\n    \\<subseteq> {p. p partitions n \\<and> sum p {..n} = k}\n 3. Abs_multiset ` {p. p partitions n \\<and> sum p {..n} = k}\n    \\<subseteq> {N. number_partition n N \\<and> size N = k}", "show \"\\<forall>p\\<in>{p. p partitions n \\<and> sum p {..n} = k}. count (Abs_multiset p) = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>p\\<in>{p. p partitions n \\<and> sum p {..n} = k}.\n       count (Abs_multiset p) = p", "by (auto simp add: multiset_def partitions_imp_finite_elements)"], ["proof (state)\nthis:\n  \\<forall>p\\<in>{p. p partitions n \\<and> sum p {..n} = k}.\n     count (Abs_multiset p) = p\n\ngoal (2 subgoals):\n 1. count ` {N. number_partition n N \\<and> size N = k}\n    \\<subseteq> {p. p partitions n \\<and> sum p {..n} = k}\n 2. Abs_multiset ` {p. p partitions n \\<and> sum p {..n} = k}\n    \\<subseteq> {N. number_partition n N \\<and> size N = k}", "show \"count ` {N. number_partition n N \\<and> size N = k} \\<subseteq> {p. p partitions n \\<and> sum p {..n} = k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. count ` {N. number_partition n N \\<and> size N = k}\n    \\<subseteq> {p. p partitions n \\<and> sum p {..n} = k}", "by (auto simp add: count_partitions_iff size_nat_multiset_eq)"], ["proof (state)\nthis:\n  count ` {N. number_partition n N \\<and> size N = k}\n  \\<subseteq> {p. p partitions n \\<and> sum p {..n} = k}\n\ngoal (1 subgoal):\n 1. Abs_multiset ` {p. p partitions n \\<and> sum p {..n} = k}\n    \\<subseteq> {N. number_partition n N \\<and> size N = k}", "show \"Abs_multiset ` {p. p partitions n \\<and> sum p {..n} = k} \\<subseteq> {N. number_partition n N \\<and> size N = k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_multiset ` {p. p partitions n \\<and> sum p {..n} = k}\n    \\<subseteq> {N. number_partition n N \\<and> size N = k}", "using partitions_iff_Abs_multiset size_nat_multiset_eq partitions_imp_multiset"], ["proof (prove)\nusing this:\n  (?p partitions ?n) =\n  (finite {x. 0 < ?p x} \\<and> number_partition ?n (Abs_multiset ?p))\n  number_partition ?n ?N \\<Longrightarrow> size ?N = sum (count ?N) {..?n}\n  ?p partitions ?n \\<Longrightarrow> ?p \\<in> multiset\n\ngoal (1 subgoal):\n 1. Abs_multiset ` {p. p partitions n \\<and> sum p {..n} = k}\n    \\<subseteq> {N. number_partition n N \\<and> size N = k}", "by fastforce"], ["proof (state)\nthis:\n  Abs_multiset ` {p. p partitions n \\<and> sum p {..n} = k}\n  \\<subseteq> {N. number_partition n N \\<and> size N = k}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bij_betw_multiset_number_partition_with_atmost_size:\n  \"bij_betw count {N. number_partition n N \\<and> size N \\<le> k} {p. p partitions n \\<and> sum p {..n} \\<le> k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw count {N. number_partition n N \\<and> size N \\<le> k}\n     {p. p partitions n \\<and> sum p {..n} \\<le> k}", "proof (rule bij_betw_byWitness[where f'=\"Abs_multiset\"])"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<forall>a\\<in>{N. number_partition n N \\<and> size N \\<le> k}.\n       Abs_multiset (count a) = a\n 2. \\<forall>a'\\<in>{p. p partitions n \\<and> sum p {..n} \\<le> k}.\n       count (Abs_multiset a') = a'\n 3. count ` {N. number_partition n N \\<and> size N \\<le> k}\n    \\<subseteq> {p. p partitions n \\<and> sum p {..n} \\<le> k}\n 4. Abs_multiset ` {p. p partitions n \\<and> sum p {..n} \\<le> k}\n    \\<subseteq> {N. number_partition n N \\<and> size N \\<le> k}", "show \"\\<forall>N\\<in>{N. number_partition n N \\<and> size N \\<le> k}. Abs_multiset (count N) = N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>N\\<in>{N. number_partition n N \\<and> size N \\<le> k}.\n       Abs_multiset (count N) = N", "using count_inverse"], ["proof (prove)\nusing this:\n  Abs_multiset (count ?x) = ?x\n\ngoal (1 subgoal):\n 1. \\<forall>N\\<in>{N. number_partition n N \\<and> size N \\<le> k}.\n       Abs_multiset (count N) = N", "by blast"], ["proof (state)\nthis:\n  \\<forall>N\\<in>{N. number_partition n N \\<and> size N \\<le> k}.\n     Abs_multiset (count N) = N\n\ngoal (3 subgoals):\n 1. \\<forall>a'\\<in>{p. p partitions n \\<and> sum p {..n} \\<le> k}.\n       count (Abs_multiset a') = a'\n 2. count ` {N. number_partition n N \\<and> size N \\<le> k}\n    \\<subseteq> {p. p partitions n \\<and> sum p {..n} \\<le> k}\n 3. Abs_multiset ` {p. p partitions n \\<and> sum p {..n} \\<le> k}\n    \\<subseteq> {N. number_partition n N \\<and> size N \\<le> k}", "show \"\\<forall>p\\<in>{p. p partitions n \\<and> sum p {..n} \\<le> k}. count (Abs_multiset p) = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>p\\<in>{p. p partitions n \\<and> sum p {..n} \\<le> k}.\n       count (Abs_multiset p) = p", "by (auto simp add: multiset_def partitions_imp_finite_elements)"], ["proof (state)\nthis:\n  \\<forall>p\\<in>{p. p partitions n \\<and> sum p {..n} \\<le> k}.\n     count (Abs_multiset p) = p\n\ngoal (2 subgoals):\n 1. count ` {N. number_partition n N \\<and> size N \\<le> k}\n    \\<subseteq> {p. p partitions n \\<and> sum p {..n} \\<le> k}\n 2. Abs_multiset ` {p. p partitions n \\<and> sum p {..n} \\<le> k}\n    \\<subseteq> {N. number_partition n N \\<and> size N \\<le> k}", "show \"count ` {N. number_partition n N \\<and> size N \\<le> k} \\<subseteq> {p. p partitions n \\<and> sum p {..n} \\<le> k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. count ` {N. number_partition n N \\<and> size N \\<le> k}\n    \\<subseteq> {p. p partitions n \\<and> sum p {..n} \\<le> k}", "by (auto simp add: count_partitions_iff size_nat_multiset_eq)"], ["proof (state)\nthis:\n  count ` {N. number_partition n N \\<and> size N \\<le> k}\n  \\<subseteq> {p. p partitions n \\<and> sum p {..n} \\<le> k}\n\ngoal (1 subgoal):\n 1. Abs_multiset ` {p. p partitions n \\<and> sum p {..n} \\<le> k}\n    \\<subseteq> {N. number_partition n N \\<and> size N \\<le> k}", "show \"Abs_multiset ` {p. p partitions n \\<and> sum p {..n} \\<le> k} \\<subseteq> {N. number_partition n N\\<and> size N \\<le> k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_multiset ` {p. p partitions n \\<and> sum p {..n} \\<le> k}\n    \\<subseteq> {N. number_partition n N \\<and> size N \\<le> k}", "using partitions_iff_Abs_multiset size_nat_multiset_eq partitions_imp_multiset"], ["proof (prove)\nusing this:\n  (?p partitions ?n) =\n  (finite {x. 0 < ?p x} \\<and> number_partition ?n (Abs_multiset ?p))\n  number_partition ?n ?N \\<Longrightarrow> size ?N = sum (count ?N) {..?n}\n  ?p partitions ?n \\<Longrightarrow> ?p \\<in> multiset\n\ngoal (1 subgoal):\n 1. Abs_multiset ` {p. p partitions n \\<and> sum p {..n} \\<le> k}\n    \\<subseteq> {N. number_partition n N \\<and> size N \\<le> k}", "by fastforce"], ["proof (state)\nthis:\n  Abs_multiset ` {p. p partitions n \\<and> sum p {..n} \\<le> k}\n  \\<subseteq> {N. number_partition n N \\<and> size N \\<le> k}\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem card_number_partitions_with_atmost_k_parts:\n  shows \"card {N. number_partition n N \\<and> size N \\<le> x} = Partition (n + x) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {N. number_partition n N \\<and> size N \\<le> x} =\n    Partition (n + x) x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card {N. number_partition n N \\<and> size N \\<le> x} =\n    Partition (n + x) x", "have \"bij_betw count {N. number_partition n N \\<and> size N \\<le> x} {p. p partitions n \\<and> sum p {..n} \\<le> x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw count {N. number_partition n N \\<and> size N \\<le> x}\n     {p. p partitions n \\<and> sum p {..n} \\<le> x}", "by (rule bij_betw_multiset_number_partition_with_atmost_size)"], ["proof (state)\nthis:\n  bij_betw count {N. number_partition n N \\<and> size N \\<le> x}\n   {p. p partitions n \\<and> sum p {..n} \\<le> x}\n\ngoal (1 subgoal):\n 1. card {N. number_partition n N \\<and> size N \\<le> x} =\n    Partition (n + x) x", "from this"], ["proof (chain)\npicking this:\n  bij_betw count {N. number_partition n N \\<and> size N \\<le> x}\n   {p. p partitions n \\<and> sum p {..n} \\<le> x}", "have \"card {N. number_partition n N \\<and> size N \\<le> x} = card {p. p partitions n \\<and> sum p {..n} \\<le> x}\""], ["proof (prove)\nusing this:\n  bij_betw count {N. number_partition n N \\<and> size N \\<le> x}\n   {p. p partitions n \\<and> sum p {..n} \\<le> x}\n\ngoal (1 subgoal):\n 1. card {N. number_partition n N \\<and> size N \\<le> x} =\n    card {p. p partitions n \\<and> sum p {..n} \\<le> x}", "by (rule bij_betw_same_card)"], ["proof (state)\nthis:\n  card {N. number_partition n N \\<and> size N \\<le> x} =\n  card {p. p partitions n \\<and> sum p {..n} \\<le> x}\n\ngoal (1 subgoal):\n 1. card {N. number_partition n N \\<and> size N \\<le> x} =\n    Partition (n + x) x", "also"], ["proof (state)\nthis:\n  card {N. number_partition n N \\<and> size N \\<le> x} =\n  card {p. p partitions n \\<and> sum p {..n} \\<le> x}\n\ngoal (1 subgoal):\n 1. card {N. number_partition n N \\<and> size N \\<le> x} =\n    Partition (n + x) x", "have \"card {p. p partitions n \\<and> sum p {..n} \\<le> x} = Partition (n + x) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {p. p partitions n \\<and> sum p {..n} \\<le> x} =\n    Partition (n + x) x", "by (rule card_partitions_atmost_k_parts)"], ["proof (state)\nthis:\n  card {p. p partitions n \\<and> sum p {..n} \\<le> x} = Partition (n + x) x\n\ngoal (1 subgoal):\n 1. card {N. number_partition n N \\<and> size N \\<le> x} =\n    Partition (n + x) x", "finally"], ["proof (chain)\npicking this:\n  card {N. number_partition n N \\<and> size N \\<le> x} = Partition (n + x) x", "show ?thesis"], ["proof (prove)\nusing this:\n  card {N. number_partition n N \\<and> size N \\<le> x} = Partition (n + x) x\n\ngoal (1 subgoal):\n 1. card {N. number_partition n N \\<and> size N \\<le> x} =\n    Partition (n + x) x", "."], ["proof (state)\nthis:\n  card {N. number_partition n N \\<and> size N \\<le> x} = Partition (n + x) x\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem card_partitions_with_k_parts:\n  \"card {N. number_partition n N \\<and> size N = k} = Partition n k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {N. number_partition n N \\<and> size N = k} = Partition n k", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card {N. number_partition n N \\<and> size N = k} = Partition n k", "have \"bij_betw count {N. number_partition n N \\<and> size N = k} {p. p partitions n \\<and> sum p {..n} = k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw count {N. number_partition n N \\<and> size N = k}\n     {p. p partitions n \\<and> sum p {..n} = k}", "by (rule bij_betw_multiset_number_partition_with_size)"], ["proof (state)\nthis:\n  bij_betw count {N. number_partition n N \\<and> size N = k}\n   {p. p partitions n \\<and> sum p {..n} = k}\n\ngoal (1 subgoal):\n 1. card {N. number_partition n N \\<and> size N = k} = Partition n k", "from this"], ["proof (chain)\npicking this:\n  bij_betw count {N. number_partition n N \\<and> size N = k}\n   {p. p partitions n \\<and> sum p {..n} = k}", "have \"card {N. number_partition n N \\<and> size N = k} = card {p. p partitions n \\<and> sum p {..n} = k}\""], ["proof (prove)\nusing this:\n  bij_betw count {N. number_partition n N \\<and> size N = k}\n   {p. p partitions n \\<and> sum p {..n} = k}\n\ngoal (1 subgoal):\n 1. card {N. number_partition n N \\<and> size N = k} =\n    card {p. p partitions n \\<and> sum p {..n} = k}", "by (rule bij_betw_same_card)"], ["proof (state)\nthis:\n  card {N. number_partition n N \\<and> size N = k} =\n  card {p. p partitions n \\<and> sum p {..n} = k}\n\ngoal (1 subgoal):\n 1. card {N. number_partition n N \\<and> size N = k} = Partition n k", "also"], ["proof (state)\nthis:\n  card {N. number_partition n N \\<and> size N = k} =\n  card {p. p partitions n \\<and> sum p {..n} = k}\n\ngoal (1 subgoal):\n 1. card {N. number_partition n N \\<and> size N = k} = Partition n k", "have \"\\<dots> = Partition n k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {p. p partitions n \\<and> sum p {..n} = k} = Partition n k", "by (rule card_partitions_k_parts)"], ["proof (state)\nthis:\n  card {p. p partitions n \\<and> sum p {..n} = k} = Partition n k\n\ngoal (1 subgoal):\n 1. card {N. number_partition n N \\<and> size N = k} = Partition n k", "finally"], ["proof (chain)\npicking this:\n  card {N. number_partition n N \\<and> size N = k} = Partition n k", "show ?thesis"], ["proof (prove)\nusing this:\n  card {N. number_partition n N \\<and> size N = k} = Partition n k\n\ngoal (1 subgoal):\n 1. card {N. number_partition n N \\<and> size N = k} = Partition n k", "."], ["proof (state)\nthis:\n  card {N. number_partition n N \\<and> size N = k} = Partition n k\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Cardinality of Number Partitions with only 1-parts\\<close>"], ["", "lemma number_partition1_eq_replicate_mset:\n  \"{N. (\\<forall>n. n\\<in># N \\<longrightarrow> n = 1) \\<and> number_partition n N} = {replicate_mset n 1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n        number_partition n N} =\n    {replicate_mset n 1}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n        number_partition n N}\n    \\<subseteq> {replicate_mset n 1}\n 2. {replicate_mset n 1}\n    \\<subseteq> {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                    number_partition n N}", "show \"{N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and> number_partition n N} \\<subseteq> {replicate_mset n 1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n        number_partition n N}\n    \\<subseteq> {replicate_mset n 1}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                   number_partition n N} \\<Longrightarrow>\n       x \\<in> {replicate_mset n 1}", "fix N"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                   number_partition n N} \\<Longrightarrow>\n       x \\<in> {replicate_mset n 1}", "assume N: \"N \\<in> {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and> number_partition n N}\""], ["proof (state)\nthis:\n  N \\<in> {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n              number_partition n N}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                   number_partition n N} \\<Longrightarrow>\n       x \\<in> {replicate_mset n 1}", "have \"N = replicate_mset n 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N = replicate_mset n 1", "proof (rule multiset_eqI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. count N x = count (replicate_mset n 1) x", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. count N x = count (replicate_mset n 1) x", "have \"count N 1 = sum_mset N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. count N 1 = \\<Sum>\\<^sub># N", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> count N 1 = \\<Sum>\\<^sub># N\n 2. \\<not> ?P \\<Longrightarrow> count N 1 = \\<Sum>\\<^sub># N", "assume \"N = {#}\""], ["proof (state)\nthis:\n  N = {#}\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> count N 1 = \\<Sum>\\<^sub># N\n 2. \\<not> ?P \\<Longrightarrow> count N 1 = \\<Sum>\\<^sub># N", "from this"], ["proof (chain)\npicking this:\n  N = {#}", "show ?thesis"], ["proof (prove)\nusing this:\n  N = {#}\n\ngoal (1 subgoal):\n 1. count N 1 = \\<Sum>\\<^sub># N", "by auto"], ["proof (state)\nthis:\n  count N 1 = \\<Sum>\\<^sub># N\n\ngoal (1 subgoal):\n 1. N \\<noteq> {#} \\<Longrightarrow> count N 1 = \\<Sum>\\<^sub># N", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. N \\<noteq> {#} \\<Longrightarrow> count N 1 = \\<Sum>\\<^sub># N", "assume \"N \\<noteq> {#}\""], ["proof (state)\nthis:\n  N \\<noteq> {#}\n\ngoal (1 subgoal):\n 1. N \\<noteq> {#} \\<Longrightarrow> count N 1 = \\<Sum>\\<^sub># N", "from this N"], ["proof (chain)\npicking this:\n  N \\<noteq> {#}\n  N \\<in> {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n              number_partition n N}", "have \"1 \\<in># N\""], ["proof (prove)\nusing this:\n  N \\<noteq> {#}\n  N \\<in> {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n              number_partition n N}\n\ngoal (1 subgoal):\n 1. 1 \\<in># N", "by blast"], ["proof (state)\nthis:\n  1 \\<in># N\n\ngoal (1 subgoal):\n 1. N \\<noteq> {#} \\<Longrightarrow> count N 1 = \\<Sum>\\<^sub># N", "from this N"], ["proof (chain)\npicking this:\n  1 \\<in># N\n  N \\<in> {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n              number_partition n N}", "show ?thesis"], ["proof (prove)\nusing this:\n  1 \\<in># N\n  N \\<in> {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n              number_partition n N}\n\ngoal (1 subgoal):\n 1. count N 1 = \\<Sum>\\<^sub># N", "by (auto simp add: sum_mset_sum_count sum.remove[where x=\"1\"] simp del: One_nat_def)"], ["proof (state)\nthis:\n  count N 1 = \\<Sum>\\<^sub># N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  count N 1 = \\<Sum>\\<^sub># N\n\ngoal (1 subgoal):\n 1. \\<And>x. count N x = count (replicate_mset n 1) x", "from N this"], ["proof (chain)\npicking this:\n  N \\<in> {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n              number_partition n N}\n  count N 1 = \\<Sum>\\<^sub># N", "show \"count N i = count (replicate_mset n 1) i\""], ["proof (prove)\nusing this:\n  N \\<in> {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n              number_partition n N}\n  count N 1 = \\<Sum>\\<^sub># N\n\ngoal (1 subgoal):\n 1. count N i = count (replicate_mset n 1) i", "unfolding number_partition_def"], ["proof (prove)\nusing this:\n  N \\<in> {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n              \\<Sum>\\<^sub># N = n \\<and> 0 \\<notin># N}\n  count N 1 = \\<Sum>\\<^sub># N\n\ngoal (1 subgoal):\n 1. count N i = count (replicate_mset n 1) i", "by (auto intro: count_inI)"], ["proof (state)\nthis:\n  count N i = count (replicate_mset n 1) i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  N = replicate_mset n 1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                   number_partition n N} \\<Longrightarrow>\n       x \\<in> {replicate_mset n 1}", "from this"], ["proof (chain)\npicking this:\n  N = replicate_mset n 1", "show \"N \\<in> {replicate_mset n 1}\""], ["proof (prove)\nusing this:\n  N = replicate_mset n 1\n\ngoal (1 subgoal):\n 1. N \\<in> {replicate_mset n 1}", "by simp"], ["proof (state)\nthis:\n  N \\<in> {replicate_mset n 1}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n      number_partition n N}\n  \\<subseteq> {replicate_mset n 1}\n\ngoal (1 subgoal):\n 1. {replicate_mset n 1}\n    \\<subseteq> {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                    number_partition n N}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. {replicate_mset n 1}\n    \\<subseteq> {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                    number_partition n N}", "show \"{replicate_mset n 1} \\<subseteq> {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and> number_partition n N}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {replicate_mset n 1}\n    \\<subseteq> {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                    number_partition n N}", "unfolding number_partition_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {replicate_mset n 1}\n    \\<subseteq> {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                    \\<Sum>\\<^sub># N = n \\<and> 0 \\<notin># N}", "by auto"], ["proof (state)\nthis:\n  {replicate_mset n 1}\n  \\<subseteq> {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                  number_partition n N}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma card_number_partitions_with_only_parts_1_eq_1:\n  assumes \"n \\<le> x\"\n  shows \"card {N. (\\<forall>n. n\\<in># N \\<longrightarrow> n = 1) \\<and> number_partition n N \\<and> size N \\<le> x} = 1\" (is \"card ?N = _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n         number_partition n N \\<and> size N \\<le> x} =\n    1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card\n     {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n         number_partition n N \\<and> size N \\<le> x} =\n    1", "have \"\\<forall>N \\<in> {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and> number_partition n N}. size N = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>N\\<in>{N. (\\<forall>n.\n                           n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                       number_partition n N}.\n       size N = n", "unfolding number_partition1_eq_replicate_mset"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>N\\<in>{replicate_mset n 1}. size N = n", "by simp"], ["proof (state)\nthis:\n  \\<forall>N\\<in>{N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                     number_partition n N}.\n     size N = n\n\ngoal (1 subgoal):\n 1. card\n     {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n         number_partition n N \\<and> size N \\<le> x} =\n    1", "from this number_partition1_eq_replicate_mset \\<open>n \\<le> x\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>N\\<in>{N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                     number_partition n N}.\n     size N = n\n  {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n      number_partition ?n N} =\n  {replicate_mset ?n 1}\n  n \\<le> x", "have \"?N = {replicate_mset n 1}\""], ["proof (prove)\nusing this:\n  \\<forall>N\\<in>{N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                     number_partition n N}.\n     size N = n\n  {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n      number_partition ?n N} =\n  {replicate_mset ?n 1}\n  n \\<le> x\n\ngoal (1 subgoal):\n 1. {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n        number_partition n N \\<and> size N \\<le> x} =\n    {replicate_mset n 1}", "by auto"], ["proof (state)\nthis:\n  {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n      number_partition n N \\<and> size N \\<le> x} =\n  {replicate_mset n 1}\n\ngoal (1 subgoal):\n 1. card\n     {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n         number_partition n N \\<and> size N \\<le> x} =\n    1", "from this"], ["proof (chain)\npicking this:\n  {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n      number_partition n N \\<and> size N \\<le> x} =\n  {replicate_mset n 1}", "show ?thesis"], ["proof (prove)\nusing this:\n  {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n      number_partition n N \\<and> size N \\<le> x} =\n  {replicate_mset n 1}\n\ngoal (1 subgoal):\n 1. card\n     {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n         number_partition n N \\<and> size N \\<le> x} =\n    1", "by simp"], ["proof (state)\nthis:\n  card\n   {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n       number_partition n N \\<and> size N \\<le> x} =\n  1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma card_number_partitions_with_only_parts_1_eq_0:\n  assumes \"x < n\"\n  shows \"card {N. (\\<forall>n. n\\<in># N \\<longrightarrow> n = 1) \\<and> number_partition n N \\<and> size N \\<le> x} = 0\" (is \"card ?N = _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n         number_partition n N \\<and> size N \\<le> x} =\n    0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card\n     {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n         number_partition n N \\<and> size N \\<le> x} =\n    0", "have \"\\<forall>N \\<in> {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and> number_partition n N}. size N = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>N\\<in>{N. (\\<forall>n.\n                           n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                       number_partition n N}.\n       size N = n", "unfolding number_partition1_eq_replicate_mset"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>N\\<in>{replicate_mset n 1}. size N = n", "by simp"], ["proof (state)\nthis:\n  \\<forall>N\\<in>{N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                     number_partition n N}.\n     size N = n\n\ngoal (1 subgoal):\n 1. card\n     {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n         number_partition n N \\<and> size N \\<le> x} =\n    0", "from this number_partition1_eq_replicate_mset\\<open>x < n\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>N\\<in>{N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                     number_partition n N}.\n     size N = n\n  {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n      number_partition ?n N} =\n  {replicate_mset ?n 1}\n  x < n", "have \"?N = {}\""], ["proof (prove)\nusing this:\n  \\<forall>N\\<in>{N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n                     number_partition n N}.\n     size N = n\n  {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n      number_partition ?n N} =\n  {replicate_mset ?n 1}\n  x < n\n\ngoal (1 subgoal):\n 1. {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n        number_partition n N \\<and> size N \\<le> x} =\n    {}", "by auto"], ["proof (state)\nthis:\n  {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n      number_partition n N \\<and> size N \\<le> x} =\n  {}\n\ngoal (1 subgoal):\n 1. card\n     {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n         number_partition n N \\<and> size N \\<le> x} =\n    0", "from this"], ["proof (chain)\npicking this:\n  {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n      number_partition n N \\<and> size N \\<le> x} =\n  {}", "show ?thesis"], ["proof (prove)\nusing this:\n  {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n      number_partition n N \\<and> size N \\<le> x} =\n  {}\n\ngoal (1 subgoal):\n 1. card\n     {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n         number_partition n N \\<and> size N \\<le> x} =\n    0", "by (simp only: card.empty)"], ["proof (state)\nthis:\n  card\n   {N. (\\<forall>n. n \\<in># N \\<longrightarrow> n = 1) \\<and>\n       number_partition n N \\<and> size N \\<le> x} =\n  0\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}