{"file_name": "/home/qj213/afp-2021-10-22/thys/Vickrey_Clarke_Groves/UniformTieBreaking.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Vickrey_Clarke_Groves", "problem_names": ["lemma randomElLemma:\n   assumes \"set list \\<noteq> {}\"\n   shows \"randomEl list random \\<in> set list\"", "lemma subsetAllocation: \n  assumes \"a \\<in> allocationsUniverse\" \"c \\<subseteq> a\" \n  shows \"c \\<in> allocationsUniverse\"", "lemma lm001: \n  assumes \"a \\<in> allocationsUniverse\" \n  shows \"a outside X \\<in> allocationsUniverse\"", "lemma lm006: \n  assumes \"G \\<noteq> {}\" \n  shows \"{G} \\<in> all_partitions G\"", "lemma lm007: \n  assumes \"n \\<in> N\" \n  shows \"{(G,n)} \\<in> totalRels {G} N\"", "lemma lm008: \n  assumes \"n\\<in>N\" \n  shows \"{(G,n)} \\<in> injections {G} N\"", "lemma lm012: \n  \"allAllocations N {} \\<subseteq> {{}}\"", "lemma lm013: \n  assumes \"a \\<in> allAllocations N G\" \"finite G\" \n  shows \"finite (Range a)\"", "lemma lm014: \n  assumes \"a \\<in> allAllocations N G\" \"finite G\" \n  shows \"\\<forall> y \\<in> Range a. finite y\"", "lemma lm016: \n  \"summedBidVectorRel bids N G = \n   {(pair, sum (%g. bids (fst pair, g)) (finestpart (snd pair)))|\n    pair. pair \\<in> N \\<times> (Pow G-{{}})}\"", "lemma lm019: \n  \"(summedBid bids) ` ((N \\<times> (Pow G - {{}})) \\<inter> a) = \n   {(pair, sum (%g. bids (fst pair, g)) (finestpart (snd pair))) | \n    pair. pair \\<in> (N \\<times> (Pow G - {{}})) \\<inter> a}\"", "lemma summedBidInjective: \n  \"inj_on (summedBid bids) UNIV\"", "lemma lm022: \n  \"sum snd (summedBidVectorRel bids N G) = \n   sum (snd \\<circ> (summedBid bids)) (N \\<times> (Pow G - {{}}))\"", "lemma lm025: \n  assumes \"finite  (finestpart (snd pair))\" \n  shows \"card (omega pair) = card (finestpart (snd pair))\"", "lemma lm027: \n  assumes \"{} \\<notin> Range f\" \"runiq f\"\n  shows \"is_non_overlapping (omega ` f)\"", "lemma lm028: \n  assumes \"{} \\<notin> Range X\" \n  shows \"inj_on omega X\"", "lemma lm029: \n  assumes \"{} \\<notin> Range a\" \"\\<forall>X \\<in> omega ` a. finite X\" \n          \"is_non_overlapping (omega ` a)\"\n  shows \"card (pseudoAllocation a) = sum (card \\<circ> omega) a\" \n  (is \"?L = ?R\")", "lemma lm030: \n  \"card (omega pair)= card (snd pair)\"", "lemma lm037: \n  \"pseudoAllocation {} = {}\"", "lemma lm041: \n  assumes \"a \\<in> allAllocations N G\" \"aa \\<in> allAllocations N G\" \"finite G\" \n  shows  \"(card (pseudoAllocation aa \\<inter> (pseudoAllocation a)) = card (pseudoAllocation a)) = \n          (pseudoAllocation a = pseudoAllocation aa)\"", "lemma lm042: \n  \"omega pair = {fst pair} \\<times> {{y}| y. y \\<in> snd pair}\"", "lemma lm043: \n  \"omega pair = {(fst pair, {y})| y. y \\<in>  snd pair}\"", "lemma lm044: \n  \"pseudoAllocation a = \\<Union> {{(fst pair, {y})| y. y \\<in> snd pair}| pair. pair \\<in> a}\"", "lemma lm045: \n  \"\\<Union> {{(fst pair, {y})| y. y \\<in> snd pair}| pair. pair \\<in> a} = \n   {(fst pair, {y})| y pair. y \\<in> snd pair & pair \\<in> a}\"", "lemma lm047: \n  assumes \"runiq a\" \n  shows \"{(fst pair, Y)| Y pair. Y \\<in> finestpart (snd pair) & pair \\<in> a} = \n         {(x, Y)| Y x. Y \\<in> finestpart (a,,x) & x \\<in> Domain a}\"\n         (is \"?L=?R\")", "lemma lm051: \n  \"pseudoAllocation a = {(fst pair, {y})| y pair. y \\<in> snd pair & pair \\<in> a}\"", "lemma lm052: \n  \"{(fst pair, {y})| y pair. y \\<in> snd pair & pair \\<in> a} = \n   {(x, {y})| x y. y \\<in> \\<Union> (a``{x}) & x \\<in> Domain a}\"", "lemma lm053: \n  \"pseudoAllocation a = {(x, {y})| x y. y \\<in> \\<Union> (a``{x}) & x \\<in> Domain a}\"\n  (is \"?L=?R\")", "lemma lm054: \n  \"runiq (summedBidVectorRel bids N G)\"", "lemma summedBidVectorCharacterization: \n  \"N \\<times> (Pow G - {{}}) = Domain (summedBidVectorRel bids N G)\"", "lemma lm065: \n  assumes \"finite (snd pair)\" \n  shows \"finite (omega pair)\"", "lemma lm069: \n  assumes \"a \\<in> allAllocations N G\" \"finite G\" \n  shows \"sum (sum bids) (omega` a) = sum bids (\\<Union> (omega ` a))\"", "lemma lm071: \n  \"Domain (pseudoAllocation a) \\<subseteq> Domain a\"", "lemma lm074: \n  assumes \"runiq a\" \"{} \\<notin> Range a\" \n  shows \"a = pseudoAllocationInv (pseudoAllocation a)\"", "lemma lm076: \n  \"inj_on (pseudoAllocationInv \\<circ> pseudoAllocation) (runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}})))\"", "lemma lm078: \n  \"injectionsUniverse \\<subseteq> runiqs\"", "lemma lm079: \n  \"partitionValuedUniverse \\<subseteq> Pow (UNIV \\<times> (UNIV - {{}}))\"", "lemma lm083: \n  assumes \"card N > 0\" \"distinct G\" \n  shows \"winningAllocationsRel N (set G) bids \\<subseteq> set (allAllocationsAlg N G)\"", "lemma lm085: \n  \"X = (%x. x \\<in> X) -`{True}\"", "lemma lm087: \n  assumes \"P -` {True} \\<inter> set l \\<noteq> {}\" \n  shows \"takeAll P l \\<noteq> []\"", "lemma lm091: \n  assumes \"finite G\" \"a \\<in> allAllocations N G\" \"aa \\<in> allAllocations N G\"\n  shows \"real(sum(maxbid a N G)(pseudoAllocation a)) - \n            sum(maxbid a N G)(pseudoAllocation aa) = \n         real (card G) - \n            card (pseudoAllocation aa \\<inter> (pseudoAllocation a))\"", "lemma lm092: \n  \"summedBidVectorRel bids N G = graph (N \\<times> (Pow G-{{}})) (summedBidSecond bids)\"", "lemma lm093: \n  assumes \"x\\<in>X\" \n  shows \"toFunction (graph X f) x = f x\"", "lemma lm095: \n  \"summedBidSecond (real \\<circ> ((bids:: _ => nat))) pair = real (summedBidSecond bids pair)\"", "lemma lm096: \n  assumes \"pair \\<in> N \\<times> (Pow G-{{}})\" \n  shows  \"summedBidVector (real\\<circ>(bids:: _ => nat)) N G pair = \n          real (summedBidVector bids N G pair)\"", "lemma lm103: \n  assumes \"N \\<noteq> {}\" \"finite N\" \"distinct G\" \"set G \\<noteq> {}\"\n          \"aa \\<in> (allAllocations N (set G))-{chosenAllocation N G bids random}\" \n  shows \"sum (resolvingBid N G bids random) aa < \n         sum (resolvingBid N G bids random) (chosenAllocation N G bids random)\"", "theorem winningAllocationUniqueness: \n  assumes \"N \\<noteq> {}\" \"distinct G\" \"set G \\<noteq> {}\" \"finite N\"\n  shows \"terminatingAuctionRel N G (bids) random = {chosenAllocation N G bids random}\""], "translations": [["", "lemma randomElLemma:\n   assumes \"set list \\<noteq> {}\"\n   shows \"randomEl list random \\<in> set list\""], ["proof (prove)\ngoal (1 subgoal):\n 1. randomEl list random \\<in> set list", "using assms"], ["proof (prove)\nusing this:\n  set list \\<noteq> {}\n\ngoal (1 subgoal):\n 1. randomEl list random \\<in> set list", "by (simp add: randomEl_def)"], ["", "(* The chosen allocation takes the random-th element of all possible winning allocations. This is\n   done by taking the element given by randomEl list random defined above. *)"], ["", "abbreviation \"chosenAllocation N G bids random == \n   randomEl (takeAll (%x. x\\<in>(winningAllocationsRel N (set G) bids)) \n                     (allAllocationsAlg N G)) \n            random\""], ["", "(* find the bid vector in random values that returns the chosen winning allocation *)"], ["", "abbreviation \"resolvingBid N G bids random == \n  tiebids (chosenAllocation N G bids random) N (set G)\""], ["", "subsection \\<open>Termination theorem for the uniform tie-breaking scheme\\<close>"], ["", "corollary winningAllocationPossible: \n  \"winningAllocationsRel N G b \\<subseteq> allAllocations N G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. winningAllocationRel N G (\\<subseteq>) b (allAllocations N G)", "using injectionsFromEmptyAreEmpty mem_Collect_eq subsetI"], ["proof (prove)\nusing this:\n  set (injections_alg [] ?Z) = {{}}\n  (?a \\<in> Collect ?P) = ?P ?a\n  (\\<And>x. x \\<in> ?A \\<Longrightarrow> x \\<in> ?B) \\<Longrightarrow>\n  ?A \\<subseteq> ?B\n\ngoal (1 subgoal):\n 1. winningAllocationRel N G (\\<subseteq>) b (allAllocations N G)", "by auto"], ["", "lemma subsetAllocation: \n  assumes \"a \\<in> allocationsUniverse\" \"c \\<subseteq> a\" \n  shows \"c \\<in> allocationsUniverse\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<in> allocationsUniverse", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c \\<in> allocationsUniverse", "have \"c=a-(a-c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c = a - (a - c)", "using assms(2)"], ["proof (prove)\nusing this:\n  c \\<subseteq> a\n\ngoal (1 subgoal):\n 1. c = a - (a - c)", "by blast"], ["proof (state)\nthis:\n  c = a - (a - c)\n\ngoal (1 subgoal):\n 1. c \\<in> allocationsUniverse", "thus ?thesis"], ["proof (prove)\nusing this:\n  c = a - (a - c)\n\ngoal (1 subgoal):\n 1. c \\<in> allocationsUniverse", "using assms(1) reducedAllocation"], ["proof (prove)\nusing this:\n  c = a - (a - c)\n  a \\<in> allocationsUniverse\n  ?a \\<in> allocationsUniverse \\<Longrightarrow>\n  ?a - ?b \\<in> allocationsUniverse\n\ngoal (1 subgoal):\n 1. c \\<in> allocationsUniverse", "by (metis (no_types))"], ["proof (state)\nthis:\n  c \\<in> allocationsUniverse\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lm001: \n  assumes \"a \\<in> allocationsUniverse\" \n  shows \"a outside X \\<in> allocationsUniverse\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Outside' X a \\<in> allocationsUniverse", "using assms reducedAllocation Outside_def"], ["proof (prove)\nusing this:\n  a \\<in> allocationsUniverse\n  ?a \\<in> allocationsUniverse \\<Longrightarrow>\n  ?a - ?b \\<in> allocationsUniverse\n  Outside' ?X ?R = ?R - ?X \\<times> Range ?R\n\ngoal (1 subgoal):\n 1. Outside' X a \\<in> allocationsUniverse", "by (metis (no_types))"], ["", "corollary lm002: \n  \"{x}\\<times>({X}-{{}}) \\<in> allocationsUniverse\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x} \\<times> ({X} - {{}}) \\<in> allocationsUniverse", "using allocationUniverseProperty pairDifference"], ["proof (prove)\nusing this:\n  {(?x, ?X)} - {(?x, {})} \\<in> allocationsUniverse\n  {(?x, ?X)} - {(?x, ?Y)} = {?x} \\<times> ({?X} - {?Y})\n\ngoal (1 subgoal):\n 1. {x} \\<times> ({X} - {{}}) \\<in> allocationsUniverse", "by metis"], ["", "(* TPTP? *)"], ["", "corollary lm003: \n  \"{(x,{y})} \\<in> allocationsUniverse\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {(x, {y})} \\<in> allocationsUniverse", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {(x, {y})} \\<in> allocationsUniverse", "have \"\\<And>x1. {} - {x1::'a \\<times> 'b set} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1. {} - {x1} = {}", "by simp"], ["proof (state)\nthis:\n  {} - {?x1.0} = {}\n\ngoal (1 subgoal):\n 1. {(x, {y})} \\<in> allocationsUniverse", "thus \"{(x, {y})} \\<in> allocationsUniverse\""], ["proof (prove)\nusing this:\n  {} - {?x1.0} = {}\n\ngoal (1 subgoal):\n 1. {(x, {y})} \\<in> allocationsUniverse", "by (metis (no_types) allocationUniverseProperty empty_iff insert_Diff_if insert_iff prod.inject)"], ["proof (state)\nthis:\n  {(x, {y})} \\<in> allocationsUniverse\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary lm004: \n  \"allocationsUniverse \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. allocationsUniverse \\<noteq> {}", "using lm003"], ["proof (prove)\nusing this:\n  {(?x, {?y})} \\<in> allocationsUniverse\n\ngoal (1 subgoal):\n 1. allocationsUniverse \\<noteq> {}", "by fast"], ["", "corollary lm005:\n  \"{} \\<in> allocationsUniverse\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<in> allocationsUniverse", "using subsetAllocation lm003"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<in> allocationsUniverse; ?c \\<subseteq> ?a\\<rbrakk>\n  \\<Longrightarrow> ?c \\<in> allocationsUniverse\n  {(?x, {?y})} \\<in> allocationsUniverse\n\ngoal (1 subgoal):\n 1. {} \\<in> allocationsUniverse", "by (metis (lifting, mono_tags) empty_subsetI)"], ["", "lemma lm006: \n  assumes \"G \\<noteq> {}\" \n  shows \"{G} \\<in> all_partitions G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {G} \\<in> all_partitions G", "using all_partitions_def is_partition_of_def is_non_overlapping_def assms"], ["proof (prove)\nusing this:\n  all_partitions ?A = {P. P partitions ?A}\n  ?P partitions ?A = is_partition_of' ?P ?A\n  is_non_overlapping ?P =\n  (\\<forall>X\\<in>?P.\n      \\<forall>Y\\<in>?P. (X \\<inter> Y \\<noteq> {}) = (X = Y))\n  G \\<noteq> {}\n\ngoal (1 subgoal):\n 1. {G} \\<in> all_partitions G", "by force"], ["", "lemma lm007: \n  assumes \"n \\<in> N\" \n  shows \"{(G,n)} \\<in> totalRels {G} N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {(G, n)} \\<in> totalRels {G} N", "using assms"], ["proof (prove)\nusing this:\n  n \\<in> N\n\ngoal (1 subgoal):\n 1. {(G, n)} \\<in> totalRels {G} N", "by force"], ["", "lemma lm008: \n  assumes \"n\\<in>N\" \n  shows \"{(G,n)} \\<in> injections {G} N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {(G, n)} \\<in> injections {G} N", "using assms injections_def singlePairInInjectionsUniverse"], ["proof (prove)\nusing this:\n  n \\<in> N\n  injections ?X ?Y =\n  {R. Domain R = ?X \\<and>\n      Range R \\<subseteq> ?Y \\<and> runiq R \\<and> runiq (R\\<inverse>)}\n  {(?x, ?X)} \\<in> injectionsUniverse\n\ngoal (1 subgoal):\n 1. {(G, n)} \\<in> injections {G} N", "by fastforce"], ["", "corollary lm009: \n  assumes \" G\\<noteq>{}\" \"n\\<in>N\" \n  shows \"{(G,n)} \\<in> possible_allocations_rel G N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {(G, n)} \\<in> possible_allocations_rel G N", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {(G, n)} \\<in> possible_allocations_rel G N", "have \"{(G,n)} \\<in> injections {G} N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {(G, n)} \\<in> injections {G} N", "using assms lm008"], ["proof (prove)\nusing this:\n  G \\<noteq> {}\n  n \\<in> N\n  ?n \\<in> ?N \\<Longrightarrow> {(?G, ?n)} \\<in> injections {?G} ?N\n\ngoal (1 subgoal):\n 1. {(G, n)} \\<in> injections {G} N", "by fast"], ["proof (state)\nthis:\n  {(G, n)} \\<in> injections {G} N\n\ngoal (1 subgoal):\n 1. {(G, n)} \\<in> possible_allocations_rel G N", "moreover"], ["proof (state)\nthis:\n  {(G, n)} \\<in> injections {G} N\n\ngoal (1 subgoal):\n 1. {(G, n)} \\<in> possible_allocations_rel G N", "have \"{G} \\<in> all_partitions G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {G} \\<in> all_partitions G", "using assms lm006"], ["proof (prove)\nusing this:\n  G \\<noteq> {}\n  n \\<in> N\n  ?G \\<noteq> {} \\<Longrightarrow> {?G} \\<in> all_partitions ?G\n\ngoal (1 subgoal):\n 1. {G} \\<in> all_partitions G", "by metis"], ["proof (state)\nthis:\n  {G} \\<in> all_partitions G\n\ngoal (1 subgoal):\n 1. {(G, n)} \\<in> possible_allocations_rel G N", "ultimately"], ["proof (chain)\npicking this:\n  {(G, n)} \\<in> injections {G} N\n  {G} \\<in> all_partitions G", "show ?thesis"], ["proof (prove)\nusing this:\n  {(G, n)} \\<in> injections {G} N\n  {G} \\<in> all_partitions G\n\ngoal (1 subgoal):\n 1. {(G, n)} \\<in> possible_allocations_rel G N", "by auto"], ["proof (state)\nthis:\n  {(G, n)} \\<in> possible_allocations_rel G N\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary lm010: \n  assumes \"N \\<noteq> {}\" \"G\\<noteq>{}\" \n  shows \"allAllocations N G \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. allAllocations N G \\<noteq> {}", "using assms lm009"], ["proof (prove)\nusing this:\n  N \\<noteq> {}\n  G \\<noteq> {}\n  \\<lbrakk>?G \\<noteq> {}; ?n \\<in> ?N\\<rbrakk>\n  \\<Longrightarrow> {(?G, ?n)} \\<in> possible_allocations_rel ?G ?N\n\ngoal (1 subgoal):\n 1. allAllocations N G \\<noteq> {}", "by (metis (hide_lams, no_types) equals0I image_insert insert_absorb insert_not_empty)"], ["", "corollary lm011: \n  assumes \"N \\<noteq> {}\" \"finite N\" \"G \\<noteq> {}\" \"finite G\" \n  shows \"winningAllocationsRel N G bids \\<noteq> {} & finite (winningAllocationsRel N G bids)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. winningAllocationRel N G (\\<noteq>) bids {} \\<and>\n    winningAllocationRel N G finite bids", "using assms lm010 allAllocationsFinite argmax_non_empty_iff"], ["proof (prove)\nusing this:\n  N \\<noteq> {}\n  finite N\n  G \\<noteq> {}\n  finite G\n  \\<lbrakk>?N \\<noteq> {}; ?G \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> allAllocations ?N ?G \\<noteq> {}\n  \\<lbrakk>finite ?N; finite ?G\\<rbrakk>\n  \\<Longrightarrow> finite (allAllocations ?N ?G)\n  \\<lbrakk>finite ?X; ?X \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> argmax ?f ?X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. winningAllocationRel N G (\\<noteq>) bids {} \\<and>\n    winningAllocationRel N G finite bids", "by (metis winningAllocationPossible rev_finite_subset)"], ["", "lemma lm012: \n  \"allAllocations N {} \\<subseteq> {{}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. allAllocations N {} \\<subseteq> {{}}", "using emptyset_part_emptyset3 rangeEmpty characterizationallAllocations\n        mem_Collect_eq subsetI vimage_def"], ["proof (prove)\nusing this:\n  all_partitions {} = {{}}\n  Range -` {{}} = {{}}\n  (?a \\<in> allAllocations ?N ?G) =\n  (?a \\<in> injections (Domain ?a) (Range ?a) \\<and>\n   Range ?a \\<in> all_partitions ?G \\<and> Domain ?a \\<subseteq> ?N)\n  (?a \\<in> Collect ?P) = ?P ?a\n  (\\<And>x. x \\<in> ?A \\<Longrightarrow> x \\<in> ?B) \\<Longrightarrow>\n  ?A \\<subseteq> ?B\n  ?f -` ?B \\<equiv> {x. ?f x \\<in> ?B}\n\ngoal (1 subgoal):\n 1. allAllocations N {} \\<subseteq> {{}}", "by metis"], ["", "lemma lm013: \n  assumes \"a \\<in> allAllocations N G\" \"finite G\" \n  shows \"finite (Range a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (Range a)", "using assms elementOfPartitionOfFiniteSetIsFinite"], ["proof (prove)\nusing this:\n  a \\<in> allAllocations N G\n  finite G\n  \\<lbrakk>finite ?X; ?XX \\<in> all_partitions ?X\\<rbrakk>\n  \\<Longrightarrow> finite ?XX\n\ngoal (1 subgoal):\n 1. finite (Range a)", "by (metis allocationReverseInjective)"], ["", "corollary allocationFinite: \n  assumes \"a \\<in> allAllocations N G\" \"finite G\" \n  shows \"finite a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite a", "using assms finite_converse Range_converse imageE allocationProperty finiteDomainImpliesFinite lm013"], ["proof (prove)\nusing this:\n  a \\<in> allAllocations N G\n  finite G\n  finite (?r\\<inverse>) = finite ?r\n  Range (?r\\<inverse>) = Domain ?r\n  \\<lbrakk>?b \\<in> ?f ` ?A;\n   \\<And>x.\n      \\<lbrakk>?b = ?f x; x \\<in> ?A\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  (?a \\<in> possible_allocations_rel ?G ?N) =\n  (runiq ?a \\<and>\n   runiq (?a\\<inverse>) \\<and>\n   Domain ?a partitions ?G \\<and> Range ?a \\<subseteq> ?N)\n  runiq ?f \\<Longrightarrow> finite (Domain ?f) = finite ?f\n  \\<lbrakk>?a \\<in> allAllocations ?N ?G; finite ?G\\<rbrakk>\n  \\<Longrightarrow> finite (Range ?a)\n\ngoal (1 subgoal):\n 1. finite a", "by (metis (erased, lifting))"], ["", "lemma lm014: \n  assumes \"a \\<in> allAllocations N G\" \"finite G\" \n  shows \"\\<forall> y \\<in> Range a. finite y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>Range a. finite y", "using assms is_partition_of_def allocationInverseRangeDomainProperty"], ["proof (prove)\nusing this:\n  a \\<in> allAllocations N G\n  finite G\n  ?P partitions ?A = is_partition_of' ?P ?A\n  ?a \\<in> allAllocations ?N ?G \\<Longrightarrow>\n  ?a\\<inverse> \\<in> injections (Range ?a) ?N \\<and>\n  Range ?a partitions ?G \\<and> Domain ?a \\<subseteq> ?N\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>Range a. finite y", "by (metis Union_upper rev_finite_subset)"], ["", "(* Note that allocations are strict, that is, all goods are allocated to the bidders at this point. Later we will have the seller as participant 0 getting all goods not allocated *)"], ["", "corollary lm015: \n  assumes \"a \\<in> allAllocations N G\" \"finite G\" \n  shows \"card G = sum card (Range a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card G = sum card (Range a)", "using assms cardSumCommute lm013 allocationInverseRangeDomainProperty"], ["proof (prove)\nusing this:\n  a \\<in> allAllocations N G\n  finite G\n  \\<lbrakk>?XX partitions ?X; finite ?X; finite ?XX\\<rbrakk>\n  \\<Longrightarrow> card (\\<Union> ?XX) = sum card ?XX\n  \\<lbrakk>?a \\<in> allAllocations ?N ?G; finite ?G\\<rbrakk>\n  \\<Longrightarrow> finite (Range ?a)\n  ?a \\<in> allAllocations ?N ?G \\<Longrightarrow>\n  ?a\\<inverse> \\<in> injections (Range ?a) ?N \\<and>\n  Range ?a partitions ?G \\<and> Domain ?a \\<subseteq> ?N\n\ngoal (1 subgoal):\n 1. card G = sum card (Range a)", "by (metis is_partition_of_def)"], ["", "subsection \\<open>Results on summed bid vectors\\<close>"], ["", "lemma lm016: \n  \"summedBidVectorRel bids N G = \n   {(pair, sum (%g. bids (fst pair, g)) (finestpart (snd pair)))|\n    pair. pair \\<in> N \\<times> (Pow G-{{}})}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summedBidVectorRel bids N G =\n    {summedBid bids pair |pair. pair \\<in> N \\<times> (Pow G - {{}})}", "by blast"], ["", "(* Note that || stands for restriction, here to an allocation a *)"], ["", "corollary lm017: \n  \"{(pair, sum (%g. bids (fst pair, g)) (finestpart (snd pair))) |\n    pair. pair \\<in> (N \\<times> (Pow G-{{}})) } || a = \n   {(pair, sum (%g. bids (fst pair, g)) (finestpart (snd pair))) |\n    pair. pair \\<in> (N \\<times> (Pow G-{{}}))   \\<inter>  a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {summedBid bids pair |pair. pair \\<in> N \\<times> (Pow G - {{}})} || a =\n    {summedBid bids pair |pair.\n     pair \\<in> N \\<times> (Pow G - {{}}) \\<inter> a}", "by (metis restrictionVsIntersection)"], ["", "corollary lm018: \n  \"(summedBidVectorRel bids N G) || a = \n   {(pair, sum (%g. bids (fst pair, g)) (finestpart (snd pair))) |\n    pair. pair \\<in> (N \\<times> (Pow G - {{}})) \\<inter> a}\"\n   (is \"?L = ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. summedBidVectorRel bids N G || a =\n    {summedBid bids pair |pair.\n     pair \\<in> N \\<times> (Pow G - {{}}) \\<inter> a}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. summedBidVectorRel bids N G || a =\n    {summedBid bids pair |pair.\n     pair \\<in> N \\<times> (Pow G - {{}}) \\<inter> a}", "let ?l = summedBidVectorRel"], ["proof (state)\ngoal (1 subgoal):\n 1. summedBidVectorRel bids N G || a =\n    {summedBid bids pair |pair.\n     pair \\<in> N \\<times> (Pow G - {{}}) \\<inter> a}", "let ?M = \"{(pair, sum (%g. bids (fst pair, g)) (finestpart (snd pair))) |\n             pair. pair \\<in> N \\<times> (Pow G-{{}})}\""], ["proof (state)\ngoal (1 subgoal):\n 1. summedBidVectorRel bids N G || a =\n    {summedBid bids pair |pair.\n     pair \\<in> N \\<times> (Pow G - {{}}) \\<inter> a}", "have \"?l bids N G = ?M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summedBidVectorRel bids N G =\n    {summedBid bids pair |pair. pair \\<in> N \\<times> (Pow G - {{}})}", "by (rule lm016)"], ["proof (state)\nthis:\n  summedBidVectorRel bids N G =\n  {summedBid bids pair |pair. pair \\<in> N \\<times> (Pow G - {{}})}\n\ngoal (1 subgoal):\n 1. summedBidVectorRel bids N G || a =\n    {summedBid bids pair |pair.\n     pair \\<in> N \\<times> (Pow G - {{}}) \\<inter> a}", "then"], ["proof (chain)\npicking this:\n  summedBidVectorRel bids N G =\n  {summedBid bids pair |pair. pair \\<in> N \\<times> (Pow G - {{}})}", "have \"?L = (?M || a)\""], ["proof (prove)\nusing this:\n  summedBidVectorRel bids N G =\n  {summedBid bids pair |pair. pair \\<in> N \\<times> (Pow G - {{}})}\n\ngoal (1 subgoal):\n 1. summedBidVectorRel bids N G || a =\n    {summedBid bids pair |pair. pair \\<in> N \\<times> (Pow G - {{}})} || a", "by presburger"], ["proof (state)\nthis:\n  summedBidVectorRel bids N G || a =\n  {summedBid bids pair |pair. pair \\<in> N \\<times> (Pow G - {{}})} || a\n\ngoal (1 subgoal):\n 1. summedBidVectorRel bids N G || a =\n    {summedBid bids pair |pair.\n     pair \\<in> N \\<times> (Pow G - {{}}) \\<inter> a}", "moreover"], ["proof (state)\nthis:\n  summedBidVectorRel bids N G || a =\n  {summedBid bids pair |pair. pair \\<in> N \\<times> (Pow G - {{}})} || a\n\ngoal (1 subgoal):\n 1. summedBidVectorRel bids N G || a =\n    {summedBid bids pair |pair.\n     pair \\<in> N \\<times> (Pow G - {{}}) \\<inter> a}", "have \"... = ?R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {summedBid bids pair |pair. pair \\<in> N \\<times> (Pow G - {{}})} || a =\n    {summedBid bids pair |pair.\n     pair \\<in> N \\<times> (Pow G - {{}}) \\<inter> a}", "by (rule lm017)"], ["proof (state)\nthis:\n  {summedBid bids pair |pair. pair \\<in> N \\<times> (Pow G - {{}})} || a =\n  {summedBid bids pair |pair.\n   pair \\<in> N \\<times> (Pow G - {{}}) \\<inter> a}\n\ngoal (1 subgoal):\n 1. summedBidVectorRel bids N G || a =\n    {summedBid bids pair |pair.\n     pair \\<in> N \\<times> (Pow G - {{}}) \\<inter> a}", "ultimately"], ["proof (chain)\npicking this:\n  summedBidVectorRel bids N G || a =\n  {summedBid bids pair |pair. pair \\<in> N \\<times> (Pow G - {{}})} || a\n  {summedBid bids pair |pair. pair \\<in> N \\<times> (Pow G - {{}})} || a =\n  {summedBid bids pair |pair.\n   pair \\<in> N \\<times> (Pow G - {{}}) \\<inter> a}", "show ?thesis"], ["proof (prove)\nusing this:\n  summedBidVectorRel bids N G || a =\n  {summedBid bids pair |pair. pair \\<in> N \\<times> (Pow G - {{}})} || a\n  {summedBid bids pair |pair. pair \\<in> N \\<times> (Pow G - {{}})} || a =\n  {summedBid bids pair |pair.\n   pair \\<in> N \\<times> (Pow G - {{}}) \\<inter> a}\n\ngoal (1 subgoal):\n 1. summedBidVectorRel bids N G || a =\n    {summedBid bids pair |pair.\n     pair \\<in> N \\<times> (Pow G - {{}}) \\<inter> a}", "by simp"], ["proof (state)\nthis:\n  summedBidVectorRel bids N G || a =\n  {summedBid bids pair |pair.\n   pair \\<in> N \\<times> (Pow G - {{}}) \\<inter> a}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lm019: \n  \"(summedBid bids) ` ((N \\<times> (Pow G - {{}})) \\<inter> a) = \n   {(pair, sum (%g. bids (fst pair, g)) (finestpart (snd pair))) | \n    pair. pair \\<in> (N \\<times> (Pow G - {{}})) \\<inter> a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a) =\n    {summedBid bids pair |pair.\n     pair \\<in> N \\<times> (Pow G - {{}}) \\<inter> a}", "by blast"], ["", "corollary lm020: \n  \"(summedBidVectorRel bids N G) || a = (summedBid bids) ` ((N \\<times> (Pow G - {{}})) \\<inter> a)\"\n  (is \"?L=?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. summedBidVectorRel bids N G || a =\n    summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. summedBidVectorRel bids N G || a =\n    summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a)", "let ?l=summedBidVectorRel"], ["proof (state)\ngoal (1 subgoal):\n 1. summedBidVectorRel bids N G || a =\n    summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a)", "let ?p=summedBid"], ["proof (state)\ngoal (1 subgoal):\n 1. summedBidVectorRel bids N G || a =\n    summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a)", "let ?M=\"{(pair, sum (%g. bids (fst pair, g)) (finestpart (snd pair))) |\n           pair. pair \\<in> (N \\<times> (Pow G - {{}})) \\<inter> a}\""], ["proof (state)\ngoal (1 subgoal):\n 1. summedBidVectorRel bids N G || a =\n    summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a)", "have \"?L = ?M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summedBidVectorRel bids N G || a =\n    {summedBid bids pair |pair.\n     pair \\<in> N \\<times> (Pow G - {{}}) \\<inter> a}", "by (rule lm018)"], ["proof (state)\nthis:\n  summedBidVectorRel bids N G || a =\n  {summedBid bids pair |pair.\n   pair \\<in> N \\<times> (Pow G - {{}}) \\<inter> a}\n\ngoal (1 subgoal):\n 1. summedBidVectorRel bids N G || a =\n    summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a)", "moreover"], ["proof (state)\nthis:\n  summedBidVectorRel bids N G || a =\n  {summedBid bids pair |pair.\n   pair \\<in> N \\<times> (Pow G - {{}}) \\<inter> a}\n\ngoal (1 subgoal):\n 1. summedBidVectorRel bids N G || a =\n    summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a)", "have \"... = ?R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {summedBid bids pair |pair.\n     pair \\<in> N \\<times> (Pow G - {{}}) \\<inter> a} =\n    summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a)", "using lm019"], ["proof (prove)\nusing this:\n  summedBid ?bids ` (?N \\<times> (Pow ?G - {{}}) \\<inter> ?a) =\n  {summedBid ?bids pair |pair.\n   pair \\<in> ?N \\<times> (Pow ?G - {{}}) \\<inter> ?a}\n\ngoal (1 subgoal):\n 1. {summedBid bids pair |pair.\n     pair \\<in> N \\<times> (Pow G - {{}}) \\<inter> a} =\n    summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a)", "by blast"], ["proof (state)\nthis:\n  {summedBid bids pair |pair.\n   pair \\<in> N \\<times> (Pow G - {{}}) \\<inter> a} =\n  summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a)\n\ngoal (1 subgoal):\n 1. summedBidVectorRel bids N G || a =\n    summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a)", "ultimately"], ["proof (chain)\npicking this:\n  summedBidVectorRel bids N G || a =\n  {summedBid bids pair |pair.\n   pair \\<in> N \\<times> (Pow G - {{}}) \\<inter> a}\n  {summedBid bids pair |pair.\n   pair \\<in> N \\<times> (Pow G - {{}}) \\<inter> a} =\n  summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a)", "show ?thesis"], ["proof (prove)\nusing this:\n  summedBidVectorRel bids N G || a =\n  {summedBid bids pair |pair.\n   pair \\<in> N \\<times> (Pow G - {{}}) \\<inter> a}\n  {summedBid bids pair |pair.\n   pair \\<in> N \\<times> (Pow G - {{}}) \\<inter> a} =\n  summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a)\n\ngoal (1 subgoal):\n 1. summedBidVectorRel bids N G || a =\n    summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a)", "by simp"], ["proof (state)\nthis:\n  summedBidVectorRel bids N G || a =\n  summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a)\n\ngoal:\nNo subgoals!", "qed"], ["", "(* the function made by (summedBid bids) is always injective, that is, also with domain UNIV *)"], ["", "lemma summedBidInjective: \n  \"inj_on (summedBid bids) UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj (summedBid bids)", "using fst_conv inj_on_inverseI"], ["proof (prove)\nusing this:\n  fst (?x1.0, ?x2.0) = ?x1.0\n  (\\<And>x. x \\<in> ?A \\<Longrightarrow> ?g (?f x) = x) \\<Longrightarrow>\n  inj_on ?f ?A\n\ngoal (1 subgoal):\n 1. inj (summedBid bids)", "by (metis (lifting))"], ["", "(* restrict above to any set X *)"], ["", "corollary lm021: \n  \"inj_on (summedBid bids) X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (summedBid bids) X", "using fst_conv inj_on_inverseI"], ["proof (prove)\nusing this:\n  fst (?x1.0, ?x2.0) = ?x1.0\n  (\\<And>x. x \\<in> ?A \\<Longrightarrow> ?g (?f x) = x) \\<Longrightarrow>\n  inj_on ?f ?A\n\ngoal (1 subgoal):\n 1. inj_on (summedBid bids) X", "by (metis (lifting))"], ["", "(* relationship between different formalizations of summedBid *)"], ["", "lemma lm022: \n  \"sum snd (summedBidVectorRel bids N G) = \n   sum (snd \\<circ> (summedBid bids)) (N \\<times> (Pow G - {{}}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum snd (summedBidVectorRel bids N G) =\n    sum (snd \\<circ> summedBid bids) (N \\<times> (Pow G - {{}}))", "using lm021 sum.reindex"], ["proof (prove)\nusing this:\n  inj_on (summedBid ?bids) ?X\n  inj_on ?h ?A \\<Longrightarrow> sum ?g (?h ` ?A) = sum (?g \\<circ> ?h) ?A\n\ngoal (1 subgoal):\n 1. sum snd (summedBidVectorRel bids N G) =\n    sum (snd \\<circ> summedBid bids) (N \\<times> (Pow G - {{}}))", "by blast"], ["", "(* remember: omega of (1,{11,12,13}) is {(1,{11}), (1,{12}), (1,{13})} *)"], ["", "corollary lm023: \n  \"snd (summedBid bids pair) = sum bids (omega pair)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (summedBid bids pair) = sum bids (omega pair)", "using sumCurry"], ["proof (prove)\nusing this:\n  sum (curry ?f ?x) ?Y = sum ?f ({?x} \\<times> ?Y)\n\ngoal (1 subgoal):\n 1. snd (summedBid bids pair) = sum bids (omega pair)", "by force"], ["", "(* restatement of the above *)"], ["", "corollary lm024: \n  \"snd \\<circ> summedBid bids = (sum bids) \\<circ> omega\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd \\<circ> summedBid bids = sum bids \\<circ> omega", "using lm023"], ["proof (prove)\nusing this:\n  snd (summedBid ?bids ?pair) = sum ?bids (omega ?pair)\n\ngoal (1 subgoal):\n 1. snd \\<circ> summedBid bids = sum bids \\<circ> omega", "by fastforce"], ["", "lemma lm025: \n  assumes \"finite  (finestpart (snd pair))\" \n  shows \"card (omega pair) = card (finestpart (snd pair))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (omega pair) = card (finestpart (snd pair))", "using assms"], ["proof (prove)\nusing this:\n  finite (finestpart (snd pair))\n\ngoal (1 subgoal):\n 1. card (omega pair) = card (finestpart (snd pair))", "by force"], ["", "corollary lm026:\n  assumes \"finite (snd pair)\" \n  shows \"card (omega pair) = card (snd pair)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (omega pair) = card (snd pair)", "using assms cardFinestpart card_cartesian_product_singleton"], ["proof (prove)\nusing this:\n  finite (snd pair)\n  card (finestpart ?X) = card ?X\n  card ({?x} \\<times> ?A) = card ?A\n\ngoal (1 subgoal):\n 1. card (omega pair) = card (snd pair)", "by metis"], ["", "lemma lm027: \n  assumes \"{} \\<notin> Range f\" \"runiq f\"\n  shows \"is_non_overlapping (omega ` f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_non_overlapping (omega ` f)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. is_non_overlapping (omega ` f)", "let ?X=\"omega ` f\""], ["proof (state)\ngoal (1 subgoal):\n 1. is_non_overlapping (omega ` f)", "let ?p=finestpart"], ["proof (state)\ngoal (1 subgoal):\n 1. is_non_overlapping (omega ` f)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. is_non_overlapping (omega ` f)", "fix y1 y2"], ["proof (state)\ngoal (1 subgoal):\n 1. is_non_overlapping (omega ` f)", "assume \"y1 \\<in> ?X \\<and> y2 \\<in> ?X\""], ["proof (state)\nthis:\n  y1 \\<in> omega ` f \\<and> y2 \\<in> omega ` f\n\ngoal (1 subgoal):\n 1. is_non_overlapping (omega ` f)", "then"], ["proof (chain)\npicking this:\n  y1 \\<in> omega ` f \\<and> y2 \\<in> omega ` f", "obtain pair1 pair2 where \n      \"y1 = omega pair1 & y2 = omega pair2 & pair1 \\<in> f & pair2 \\<in> f\""], ["proof (prove)\nusing this:\n  y1 \\<in> omega ` f \\<and> y2 \\<in> omega ` f\n\ngoal (1 subgoal):\n 1. (\\<And>pair1 pair2.\n        y1 = omega pair1 \\<and>\n        y2 = omega pair2 \\<and>\n        pair1 \\<in> f \\<and> pair2 \\<in> f \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  y1 = omega pair1 \\<and>\n  y2 = omega pair2 \\<and> pair1 \\<in> f \\<and> pair2 \\<in> f\n\ngoal (1 subgoal):\n 1. is_non_overlapping (omega ` f)", "then"], ["proof (chain)\npicking this:\n  y1 = omega pair1 \\<and>\n  y2 = omega pair2 \\<and> pair1 \\<in> f \\<and> pair2 \\<in> f", "moreover"], ["proof (chain)\npicking this:\n  y1 = omega pair1 \\<and>\n  y2 = omega pair2 \\<and> pair1 \\<in> f \\<and> pair2 \\<in> f", "have \"snd pair1 \\<noteq> {} & snd pair1 \\<noteq> {}\""], ["proof (prove)\nusing this:\n  y1 = omega pair1 \\<and>\n  y2 = omega pair2 \\<and> pair1 \\<in> f \\<and> pair2 \\<in> f\n\ngoal (1 subgoal):\n 1. snd pair1 \\<noteq> {} \\<and> snd pair1 \\<noteq> {}", "using assms"], ["proof (prove)\nusing this:\n  y1 = omega pair1 \\<and>\n  y2 = omega pair2 \\<and> pair1 \\<in> f \\<and> pair2 \\<in> f\n  {} \\<notin> Range f\n  runiq f\n\ngoal (1 subgoal):\n 1. snd pair1 \\<noteq> {} \\<and> snd pair1 \\<noteq> {}", "by (metis rev_image_eqI snd_eq_Range)"], ["proof (state)\nthis:\n  snd pair1 \\<noteq> {} \\<and> snd pair1 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. is_non_overlapping (omega ` f)", "ultimately"], ["proof (chain)\npicking this:\n  y1 = omega pair1 \\<and>\n  y2 = omega pair2 \\<and> pair1 \\<in> f \\<and> pair2 \\<in> f\n  snd pair1 \\<noteq> {} \\<and> snd pair1 \\<noteq> {}", "moreover"], ["proof (chain)\npicking this:\n  y1 = omega pair1 \\<and>\n  y2 = omega pair2 \\<and> pair1 \\<in> f \\<and> pair2 \\<in> f\n  snd pair1 \\<noteq> {} \\<and> snd pair1 \\<noteq> {}", "have \"fst pair1 = fst pair2 \\<longleftrightarrow> pair1 = pair2\""], ["proof (prove)\nusing this:\n  y1 = omega pair1 \\<and>\n  y2 = omega pair2 \\<and> pair1 \\<in> f \\<and> pair2 \\<in> f\n  snd pair1 \\<noteq> {} \\<and> snd pair1 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (fst pair1 = fst pair2) = (pair1 = pair2)", "using assms runiq_basic surjective_pairing"], ["proof (prove)\nusing this:\n  y1 = omega pair1 \\<and>\n  y2 = omega pair2 \\<and> pair1 \\<in> f \\<and> pair2 \\<in> f\n  snd pair1 \\<noteq> {} \\<and> snd pair1 \\<noteq> {}\n  {} \\<notin> Range f\n  runiq f\n  runiq ?R =\n  (\\<forall>x y y'.\n      (x, y) \\<in> ?R \\<and> (x, y') \\<in> ?R \\<longrightarrow> y = y')\n  ?t = (fst ?t, snd ?t)\n\ngoal (1 subgoal):\n 1. (fst pair1 = fst pair2) = (pair1 = pair2)", "by metis"], ["proof (state)\nthis:\n  (fst pair1 = fst pair2) = (pair1 = pair2)\n\ngoal (1 subgoal):\n 1. is_non_overlapping (omega ` f)", "ultimately"], ["proof (chain)\npicking this:\n  y1 = omega pair1 \\<and>\n  y2 = omega pair2 \\<and> pair1 \\<in> f \\<and> pair2 \\<in> f\n  snd pair1 \\<noteq> {} \\<and> snd pair1 \\<noteq> {}\n  (fst pair1 = fst pair2) = (pair1 = pair2)", "moreover"], ["proof (chain)\npicking this:\n  y1 = omega pair1 \\<and>\n  y2 = omega pair2 \\<and> pair1 \\<in> f \\<and> pair2 \\<in> f\n  snd pair1 \\<noteq> {} \\<and> snd pair1 \\<noteq> {}\n  (fst pair1 = fst pair2) = (pair1 = pair2)", "have \"y1 \\<inter> y2 \\<noteq> {} \\<longrightarrow> y1 = y2\""], ["proof (prove)\nusing this:\n  y1 = omega pair1 \\<and>\n  y2 = omega pair2 \\<and> pair1 \\<in> f \\<and> pair2 \\<in> f\n  snd pair1 \\<noteq> {} \\<and> snd pair1 \\<noteq> {}\n  (fst pair1 = fst pair2) = (pair1 = pair2)\n\ngoal (1 subgoal):\n 1. y1 \\<inter> y2 \\<noteq> {} \\<longrightarrow> y1 = y2", "using assms"], ["proof (prove)\nusing this:\n  y1 = omega pair1 \\<and>\n  y2 = omega pair2 \\<and> pair1 \\<in> f \\<and> pair2 \\<in> f\n  snd pair1 \\<noteq> {} \\<and> snd pair1 \\<noteq> {}\n  (fst pair1 = fst pair2) = (pair1 = pair2)\n  {} \\<notin> Range f\n  runiq f\n\ngoal (1 subgoal):\n 1. y1 \\<inter> y2 \\<noteq> {} \\<longrightarrow> y1 = y2", "by fast"], ["proof (state)\nthis:\n  y1 \\<inter> y2 \\<noteq> {} \\<longrightarrow> y1 = y2\n\ngoal (1 subgoal):\n 1. is_non_overlapping (omega ` f)", "ultimately"], ["proof (chain)\npicking this:\n  y1 = omega pair1 \\<and>\n  y2 = omega pair2 \\<and> pair1 \\<in> f \\<and> pair2 \\<in> f\n  snd pair1 \\<noteq> {} \\<and> snd pair1 \\<noteq> {}\n  (fst pair1 = fst pair2) = (pair1 = pair2)\n  y1 \\<inter> y2 \\<noteq> {} \\<longrightarrow> y1 = y2", "have \"y1 = y2 \\<longleftrightarrow> y1 \\<inter> y2 \\<noteq> {}\""], ["proof (prove)\nusing this:\n  y1 = omega pair1 \\<and>\n  y2 = omega pair2 \\<and> pair1 \\<in> f \\<and> pair2 \\<in> f\n  snd pair1 \\<noteq> {} \\<and> snd pair1 \\<noteq> {}\n  (fst pair1 = fst pair2) = (pair1 = pair2)\n  y1 \\<inter> y2 \\<noteq> {} \\<longrightarrow> y1 = y2\n\ngoal (1 subgoal):\n 1. (y1 = y2) = (y1 \\<inter> y2 \\<noteq> {})", "using assms notEmptyFinestpart"], ["proof (prove)\nusing this:\n  y1 = omega pair1 \\<and>\n  y2 = omega pair2 \\<and> pair1 \\<in> f \\<and> pair2 \\<in> f\n  snd pair1 \\<noteq> {} \\<and> snd pair1 \\<noteq> {}\n  (fst pair1 = fst pair2) = (pair1 = pair2)\n  y1 \\<inter> y2 \\<noteq> {} \\<longrightarrow> y1 = y2\n  {} \\<notin> Range f\n  runiq f\n  ?X \\<noteq> {} \\<Longrightarrow> finestpart ?X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (y1 = y2) = (y1 \\<inter> y2 \\<noteq> {})", "by (metis Int_absorb Times_empty insert_not_empty)"], ["proof (state)\nthis:\n  (y1 = y2) = (y1 \\<inter> y2 \\<noteq> {})\n\ngoal (1 subgoal):\n 1. is_non_overlapping (omega ` f)", "}"], ["proof (state)\nthis:\n  ?y1.3 \\<in> omega ` f \\<and> ?y2.3 \\<in> omega ` f \\<Longrightarrow>\n  (?y1.3 = ?y2.3) = (?y1.3 \\<inter> ?y2.3 \\<noteq> {})\n\ngoal (1 subgoal):\n 1. is_non_overlapping (omega ` f)", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?y1.3 \\<in> omega ` f \\<and> ?y2.3 \\<in> omega ` f \\<Longrightarrow>\n  (?y1.3 = ?y2.3) = (?y1.3 \\<inter> ?y2.3 \\<noteq> {})\n\ngoal (1 subgoal):\n 1. is_non_overlapping (omega ` f)", "using is_non_overlapping_def"], ["proof (prove)\nusing this:\n  ?y1.3 \\<in> omega ` f \\<and> ?y2.3 \\<in> omega ` f \\<Longrightarrow>\n  (?y1.3 = ?y2.3) = (?y1.3 \\<inter> ?y2.3 \\<noteq> {})\n  is_non_overlapping ?P =\n  (\\<forall>X\\<in>?P.\n      \\<forall>Y\\<in>?P. (X \\<inter> Y \\<noteq> {}) = (X = Y))\n\ngoal (1 subgoal):\n 1. is_non_overlapping (omega ` f)", "by (metis (lifting, no_types) inf_commute inf_sup_aci(1))"], ["proof (state)\nthis:\n  is_non_overlapping (omega ` f)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lm028: \n  assumes \"{} \\<notin> Range X\" \n  shows \"inj_on omega X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on omega X", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. inj_on omega X", "let ?p=finestpart"], ["proof (state)\ngoal (1 subgoal):\n 1. inj_on omega X", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. inj_on omega X", "fix pair1 pair2"], ["proof (state)\ngoal (1 subgoal):\n 1. inj_on omega X", "assume \"pair1 \\<in> X & pair2 \\<in> X\""], ["proof (state)\nthis:\n  pair1 \\<in> X \\<and> pair2 \\<in> X\n\ngoal (1 subgoal):\n 1. inj_on omega X", "then"], ["proof (chain)\npicking this:\n  pair1 \\<in> X \\<and> pair2 \\<in> X", "have \"snd pair1 \\<noteq> {} & snd pair2 \\<noteq> {}\""], ["proof (prove)\nusing this:\n  pair1 \\<in> X \\<and> pair2 \\<in> X\n\ngoal (1 subgoal):\n 1. snd pair1 \\<noteq> {} \\<and> snd pair2 \\<noteq> {}", "using assms"], ["proof (prove)\nusing this:\n  pair1 \\<in> X \\<and> pair2 \\<in> X\n  {} \\<notin> Range X\n\ngoal (1 subgoal):\n 1. snd pair1 \\<noteq> {} \\<and> snd pair2 \\<noteq> {}", "by (metis Range.intros surjective_pairing)"], ["proof (state)\nthis:\n  snd pair1 \\<noteq> {} \\<and> snd pair2 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. inj_on omega X", "moreover"], ["proof (state)\nthis:\n  snd pair1 \\<noteq> {} \\<and> snd pair2 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. inj_on omega X", "assume \"omega pair1 = omega pair2\""], ["proof (state)\nthis:\n  omega pair1 = omega pair2\n\ngoal (1 subgoal):\n 1. inj_on omega X", "then"], ["proof (chain)\npicking this:\n  omega pair1 = omega pair2", "moreover"], ["proof (chain)\npicking this:\n  omega pair1 = omega pair2", "have \"?p (snd pair1) = ?p (snd pair2)\""], ["proof (prove)\nusing this:\n  omega pair1 = omega pair2\n\ngoal (1 subgoal):\n 1. finestpart (snd pair1) = finestpart (snd pair2)", "by blast"], ["proof (state)\nthis:\n  finestpart (snd pair1) = finestpart (snd pair2)\n\ngoal (1 subgoal):\n 1. inj_on omega X", "then"], ["proof (chain)\npicking this:\n  finestpart (snd pair1) = finestpart (snd pair2)", "moreover"], ["proof (chain)\npicking this:\n  finestpart (snd pair1) = finestpart (snd pair2)", "have \"snd pair1 = snd pair2\""], ["proof (prove)\nusing this:\n  finestpart (snd pair1) = finestpart (snd pair2)\n\ngoal (1 subgoal):\n 1. snd pair1 = snd pair2", "by (metis finestPart nonEqualitySetOfSets)"], ["proof (state)\nthis:\n  snd pair1 = snd pair2\n\ngoal (1 subgoal):\n 1. inj_on omega X", "ultimately"], ["proof (chain)\npicking this:\n  snd pair1 \\<noteq> {} \\<and> snd pair2 \\<noteq> {}\n  omega pair1 = omega pair2\n  finestpart (snd pair1) = finestpart (snd pair2)\n  snd pair1 = snd pair2", "moreover"], ["proof (chain)\npicking this:\n  snd pair1 \\<noteq> {} \\<and> snd pair2 \\<noteq> {}\n  omega pair1 = omega pair2\n  finestpart (snd pair1) = finestpart (snd pair2)\n  snd pair1 = snd pair2", "have \"{fst pair1} = {fst pair2}\""], ["proof (prove)\nusing this:\n  snd pair1 \\<noteq> {} \\<and> snd pair2 \\<noteq> {}\n  omega pair1 = omega pair2\n  finestpart (snd pair1) = finestpart (snd pair2)\n  snd pair1 = snd pair2\n\ngoal (1 subgoal):\n 1. {fst pair1} = {fst pair2}", "using notEmptyFinestpart"], ["proof (prove)\nusing this:\n  snd pair1 \\<noteq> {} \\<and> snd pair2 \\<noteq> {}\n  omega pair1 = omega pair2\n  finestpart (snd pair1) = finestpart (snd pair2)\n  snd pair1 = snd pair2\n  ?X \\<noteq> {} \\<Longrightarrow> finestpart ?X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. {fst pair1} = {fst pair2}", "by (metis fst_image_times)"], ["proof (state)\nthis:\n  {fst pair1} = {fst pair2}\n\ngoal (1 subgoal):\n 1. inj_on omega X", "ultimately"], ["proof (chain)\npicking this:\n  snd pair1 \\<noteq> {} \\<and> snd pair2 \\<noteq> {}\n  omega pair1 = omega pair2\n  finestpart (snd pair1) = finestpart (snd pair2)\n  snd pair1 = snd pair2\n  {fst pair1} = {fst pair2}", "have \"pair1 = pair2\""], ["proof (prove)\nusing this:\n  snd pair1 \\<noteq> {} \\<and> snd pair2 \\<noteq> {}\n  omega pair1 = omega pair2\n  finestpart (snd pair1) = finestpart (snd pair2)\n  snd pair1 = snd pair2\n  {fst pair1} = {fst pair2}\n\ngoal (1 subgoal):\n 1. pair1 = pair2", "by (metis prod_eqI singleton_inject)"], ["proof (state)\nthis:\n  pair1 = pair2\n\ngoal (1 subgoal):\n 1. inj_on omega X", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?pair1.3 \\<in> X \\<and> ?pair2.3 \\<in> X;\n   omega ?pair1.3 = omega ?pair2.3\\<rbrakk>\n  \\<Longrightarrow> ?pair1.3 = ?pair2.3\n\ngoal (1 subgoal):\n 1. inj_on omega X", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?pair1.3 \\<in> X \\<and> ?pair2.3 \\<in> X;\n   omega ?pair1.3 = omega ?pair2.3\\<rbrakk>\n  \\<Longrightarrow> ?pair1.3 = ?pair2.3\n\ngoal (1 subgoal):\n 1. inj_on omega X", "by (metis (lifting, no_types) inj_onI)"], ["proof (state)\nthis:\n  inj_on omega X\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lm029: \n  assumes \"{} \\<notin> Range a\" \"\\<forall>X \\<in> omega ` a. finite X\" \n          \"is_non_overlapping (omega ` a)\"\n  shows \"card (pseudoAllocation a) = sum (card \\<circ> omega) a\" \n  (is \"?L = ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = sum (card \\<circ> omega) a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = sum (card \\<circ> omega) a", "have \"?L = sum card (omega ` a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = sum card (omega ` a)", "unfolding pseudoAllocation_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. card (\\<Union> (omega ` a)) = sum card (omega ` a)", "using assms"], ["proof (prove)\nusing this:\n  {} \\<notin> Range a\n  \\<forall>X\\<in>omega ` a. finite X\n  is_non_overlapping (omega ` a)\n\ngoal (1 subgoal):\n 1. card (\\<Union> (omega ` a)) = sum card (omega ` a)", "by (simp add: cardinalityPreservation)"], ["proof (state)\nthis:\n  card (pseudoAllocation a) = sum card (omega ` a)\n\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = sum (card \\<circ> omega) a", "moreover"], ["proof (state)\nthis:\n  card (pseudoAllocation a) = sum card (omega ` a)\n\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = sum (card \\<circ> omega) a", "have \"... = ?R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum card (omega ` a) = sum (card \\<circ> omega) a", "using assms(1) lm028 sum.reindex"], ["proof (prove)\nusing this:\n  {} \\<notin> Range a\n  {} \\<notin> Range ?X \\<Longrightarrow> inj_on omega ?X\n  inj_on ?h ?A \\<Longrightarrow> sum ?g (?h ` ?A) = sum (?g \\<circ> ?h) ?A\n\ngoal (1 subgoal):\n 1. sum card (omega ` a) = sum (card \\<circ> omega) a", "by blast"], ["proof (state)\nthis:\n  sum card (omega ` a) = sum (card \\<circ> omega) a\n\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = sum (card \\<circ> omega) a", "ultimately"], ["proof (chain)\npicking this:\n  card (pseudoAllocation a) = sum card (omega ` a)\n  sum card (omega ` a) = sum (card \\<circ> omega) a", "show ?thesis"], ["proof (prove)\nusing this:\n  card (pseudoAllocation a) = sum card (omega ` a)\n  sum card (omega ` a) = sum (card \\<circ> omega) a\n\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = sum (card \\<circ> omega) a", "by simp"], ["proof (state)\nthis:\n  card (pseudoAllocation a) = sum (card \\<circ> omega) a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lm030: \n  \"card (omega pair)= card (snd pair)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (omega pair) = card (snd pair)", "using cardFinestpart card_cartesian_product_singleton"], ["proof (prove)\nusing this:\n  card (finestpart ?X) = card ?X\n  card ({?x} \\<times> ?A) = card ?A\n\ngoal (1 subgoal):\n 1. card (omega pair) = card (snd pair)", "by metis"], ["", "corollary lm031: \n  \"card \\<circ> omega = card \\<circ> snd\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card \\<circ> omega = card \\<circ> snd", "using lm030"], ["proof (prove)\nusing this:\n  card (omega ?pair) = card (snd ?pair)\n\ngoal (1 subgoal):\n 1. card \\<circ> omega = card \\<circ> snd", "by fastforce"], ["", "(* set image of omega on a set of pair is called pseudoAllocation *)"], ["", "corollary lm032: \n  assumes \"{} \\<notin> Range a\" \"\\<forall> pair \\<in> a. finite (snd pair)\" \"finite a\" \"runiq a\" \n  shows \"card (pseudoAllocation a) = sum (card \\<circ> snd) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = sum (card \\<circ> snd) a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = sum (card \\<circ> snd) a", "let ?P=pseudoAllocation"], ["proof (state)\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = sum (card \\<circ> snd) a", "let ?c=card"], ["proof (state)\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = sum (card \\<circ> snd) a", "have \"\\<forall> pair \\<in> a. finite (omega pair)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>pair\\<in>a. finite (omega pair)", "using finiteFinestpart assms"], ["proof (prove)\nusing this:\n  finite (finestpart ?X) = finite ?X\n  {} \\<notin> Range a\n  \\<forall>pair\\<in>a. finite (snd pair)\n  finite a\n  runiq a\n\ngoal (1 subgoal):\n 1. \\<forall>pair\\<in>a. finite (omega pair)", "by blast"], ["proof (state)\nthis:\n  \\<forall>pair\\<in>a. finite (omega pair)\n\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = sum (card \\<circ> snd) a", "moreover"], ["proof (state)\nthis:\n  \\<forall>pair\\<in>a. finite (omega pair)\n\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = sum (card \\<circ> snd) a", "have \"is_non_overlapping (omega ` a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_non_overlapping (omega ` a)", "using assms lm027"], ["proof (prove)\nusing this:\n  {} \\<notin> Range a\n  \\<forall>pair\\<in>a. finite (snd pair)\n  finite a\n  runiq a\n  \\<lbrakk>{} \\<notin> Range ?f; runiq ?f\\<rbrakk>\n  \\<Longrightarrow> is_non_overlapping (omega ` ?f)\n\ngoal (1 subgoal):\n 1. is_non_overlapping (omega ` a)", "by force"], ["proof (state)\nthis:\n  is_non_overlapping (omega ` a)\n\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = sum (card \\<circ> snd) a", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>pair\\<in>a. finite (omega pair)\n  is_non_overlapping (omega ` a)", "have \"?c (?P a) = sum (?c \\<circ> omega) a\""], ["proof (prove)\nusing this:\n  \\<forall>pair\\<in>a. finite (omega pair)\n  is_non_overlapping (omega ` a)\n\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = sum (card \\<circ> omega) a", "using assms lm029"], ["proof (prove)\nusing this:\n  \\<forall>pair\\<in>a. finite (omega pair)\n  is_non_overlapping (omega ` a)\n  {} \\<notin> Range a\n  \\<forall>pair\\<in>a. finite (snd pair)\n  finite a\n  runiq a\n  \\<lbrakk>{} \\<notin> Range ?a; \\<forall>X\\<in>omega ` ?a. finite X;\n   is_non_overlapping (omega ` ?a)\\<rbrakk>\n  \\<Longrightarrow> card (pseudoAllocation ?a) = sum (card \\<circ> omega) ?a\n\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = sum (card \\<circ> omega) a", "by force"], ["proof (state)\nthis:\n  card (pseudoAllocation a) = sum (card \\<circ> omega) a\n\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = sum (card \\<circ> snd) a", "moreover"], ["proof (state)\nthis:\n  card (pseudoAllocation a) = sum (card \\<circ> omega) a\n\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = sum (card \\<circ> snd) a", "have \"... = sum (?c \\<circ> snd) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (card \\<circ> omega) a = sum (card \\<circ> snd) a", "using lm031"], ["proof (prove)\nusing this:\n  card \\<circ> omega = card \\<circ> snd\n\ngoal (1 subgoal):\n 1. sum (card \\<circ> omega) a = sum (card \\<circ> snd) a", "by metis"], ["proof (state)\nthis:\n  sum (card \\<circ> omega) a = sum (card \\<circ> snd) a\n\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = sum (card \\<circ> snd) a", "ultimately"], ["proof (chain)\npicking this:\n  card (pseudoAllocation a) = sum (card \\<circ> omega) a\n  sum (card \\<circ> omega) a = sum (card \\<circ> snd) a", "show ?thesis"], ["proof (prove)\nusing this:\n  card (pseudoAllocation a) = sum (card \\<circ> omega) a\n  sum (card \\<circ> omega) a = sum (card \\<circ> snd) a\n\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = sum (card \\<circ> snd) a", "by simp"], ["proof (state)\nthis:\n  card (pseudoAllocation a) = sum (card \\<circ> snd) a\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary lm033: \n  assumes \"runiq (a^-1)\" \"runiq a\" \"finite a\" \"{} \\<notin> Range a\" \"\\<forall> pair \\<in> a. finite (snd pair)\" \n  shows \"card (pseudoAllocation a) = sum card (Range a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = sum card (Range a)", "using assms sumPairsInverse lm032"], ["proof (prove)\nusing this:\n  runiq (a\\<inverse>)\n  runiq a\n  finite a\n  {} \\<notin> Range a\n  \\<forall>pair\\<in>a. finite (snd pair)\n  runiq (?P\\<inverse>) \\<Longrightarrow>\n  sum (?f \\<circ> snd) ?P = sum ?f (Range ?P)\n  \\<lbrakk>{} \\<notin> Range ?a; \\<forall>pair\\<in>?a. finite (snd pair);\n   finite ?a; runiq ?a\\<rbrakk>\n  \\<Longrightarrow> card (pseudoAllocation ?a) = sum (card \\<circ> snd) ?a\n\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = sum card (Range a)", "by force"], ["", "corollary lm034: \n  assumes \"a \\<in> allAllocations N G\" \"finite G\" \n  shows \"card (pseudoAllocation a) = card G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = card G", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = card G", "have \"{} \\<notin> Range a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<notin> Range a", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> allAllocations N G\n  finite G\n\ngoal (1 subgoal):\n 1. {} \\<notin> Range a", "by (metis emptyNotInRange)"], ["proof (state)\nthis:\n  {} \\<notin> Range a\n\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = card G", "moreover"], ["proof (state)\nthis:\n  {} \\<notin> Range a\n\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = card G", "have \"\\<forall> pair \\<in> a. finite (snd pair)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>pair\\<in>a. finite (snd pair)", "using assms lm014 finitePairSecondRange"], ["proof (prove)\nusing this:\n  a \\<in> allAllocations N G\n  finite G\n  \\<lbrakk>?a \\<in> allAllocations ?N ?G; finite ?G\\<rbrakk>\n  \\<Longrightarrow> \\<forall>y\\<in>Range ?a. finite y\n  (\\<forall>pair\\<in>?R. finite (snd pair)) =\n  (\\<forall>y\\<in>Range ?R. finite y)\n\ngoal (1 subgoal):\n 1. \\<forall>pair\\<in>a. finite (snd pair)", "by metis"], ["proof (state)\nthis:\n  \\<forall>pair\\<in>a. finite (snd pair)\n\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = card G", "moreover"], ["proof (state)\nthis:\n  \\<forall>pair\\<in>a. finite (snd pair)\n\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = card G", "have \"finite a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite a", "using assms allocationFinite"], ["proof (prove)\nusing this:\n  a \\<in> allAllocations N G\n  finite G\n  \\<lbrakk>?a \\<in> allAllocations ?N ?G; finite ?G\\<rbrakk>\n  \\<Longrightarrow> finite ?a\n\ngoal (1 subgoal):\n 1. finite a", "by blast"], ["proof (state)\nthis:\n  finite a\n\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = card G", "moreover"], ["proof (state)\nthis:\n  finite a\n\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = card G", "have \"runiq a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. runiq a", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> allAllocations N G\n  finite G\n\ngoal (1 subgoal):\n 1. runiq a", "by (metis (lifting) Int_lower1 in_mono allocationInjectionsUnivervseProperty mem_Collect_eq)"], ["proof (state)\nthis:\n  runiq a\n\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = card G", "moreover"], ["proof (state)\nthis:\n  runiq a\n\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = card G", "have \"runiq (a^-1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. runiq (a\\<inverse>)", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> allAllocations N G\n  finite G\n\ngoal (1 subgoal):\n 1. runiq (a\\<inverse>)", "by (metis (mono_tags) injections_def characterizationallAllocations mem_Collect_eq)"], ["proof (state)\nthis:\n  runiq (a\\<inverse>)\n\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = card G", "ultimately"], ["proof (chain)\npicking this:\n  {} \\<notin> Range a\n  \\<forall>pair\\<in>a. finite (snd pair)\n  finite a\n  runiq a\n  runiq (a\\<inverse>)", "have \"card (pseudoAllocation a) = sum card (Range a)\""], ["proof (prove)\nusing this:\n  {} \\<notin> Range a\n  \\<forall>pair\\<in>a. finite (snd pair)\n  finite a\n  runiq a\n  runiq (a\\<inverse>)\n\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = sum card (Range a)", "using lm033"], ["proof (prove)\nusing this:\n  {} \\<notin> Range a\n  \\<forall>pair\\<in>a. finite (snd pair)\n  finite a\n  runiq a\n  runiq (a\\<inverse>)\n  \\<lbrakk>runiq (?a\\<inverse>); runiq ?a; finite ?a; {} \\<notin> Range ?a;\n   \\<forall>pair\\<in>?a. finite (snd pair)\\<rbrakk>\n  \\<Longrightarrow> card (pseudoAllocation ?a) = sum card (Range ?a)\n\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = sum card (Range a)", "by fast"], ["proof (state)\nthis:\n  card (pseudoAllocation a) = sum card (Range a)\n\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = card G", "moreover"], ["proof (state)\nthis:\n  card (pseudoAllocation a) = sum card (Range a)\n\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = card G", "have \"... = card G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum card (Range a) = card G", "using assms lm015"], ["proof (prove)\nusing this:\n  a \\<in> allAllocations N G\n  finite G\n  \\<lbrakk>?a \\<in> allAllocations ?N ?G; finite ?G\\<rbrakk>\n  \\<Longrightarrow> card ?G = sum card (Range ?a)\n\ngoal (1 subgoal):\n 1. sum card (Range a) = card G", "by metis"], ["proof (state)\nthis:\n  sum card (Range a) = card G\n\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = card G", "ultimately"], ["proof (chain)\npicking this:\n  card (pseudoAllocation a) = sum card (Range a)\n  sum card (Range a) = card G", "show ?thesis"], ["proof (prove)\nusing this:\n  card (pseudoAllocation a) = sum card (Range a)\n  sum card (Range a) = card G\n\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = card G", "by simp"], ["proof (state)\nthis:\n  card (pseudoAllocation a) = card G\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary lm035: \n  assumes \"pseudoAllocation aa \\<subseteq> pseudoAllocation a \\<union> (N \\<times> (finestpart G))\" \n          \"finite (pseudoAllocation aa)\"\n  shows \"sum (toFunction (bidMaximizedBy a N G)) (pseudoAllocation a) - \n            (sum (toFunction (bidMaximizedBy a N G)) (pseudoAllocation aa)) = \n         card (pseudoAllocation a) - \n            card (pseudoAllocation aa \\<inter> (pseudoAllocation a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation a) -\n    sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation aa) =\n    card (pseudoAllocation a) -\n    card (pseudoAllocation aa \\<inter> pseudoAllocation a)", "using assms subsetCardinality"], ["proof (prove)\nusing this:\n  pseudoAllocation aa\n  \\<subseteq> pseudoAllocation a \\<union> N \\<times> finestpart G\n  finite (pseudoAllocation aa)\n  \\<lbrakk>?Z \\<subseteq> ?X \\<union> ?Y; finite ?Z\\<rbrakk>\n  \\<Longrightarrow> sum (?X <| ?Y) ?X - sum (?X <| ?Y) ?Z =\n                    card ?X - card (?Z \\<inter> ?X)\n\ngoal (1 subgoal):\n 1. sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation a) -\n    sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation aa) =\n    card (pseudoAllocation a) -\n    card (pseudoAllocation aa \\<inter> pseudoAllocation a)", "by blast"], ["", "corollary lm036: \n  assumes \"pseudoAllocation aa \\<subseteq> pseudoAllocation a \\<union> (N \\<times> (finestpart G))\" \n          \"finite (pseudoAllocation aa)\"\n  shows \"int (sum (maxbid a N G) (pseudoAllocation a)) - \n           int (sum (maxbid a N G) (pseudoAllocation aa)) = \n         int (card (pseudoAllocation a)) - \n           int (card (pseudoAllocation aa \\<inter> (pseudoAllocation a)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. int (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n          (pseudoAllocation a)) -\n    int (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n          (pseudoAllocation aa)) =\n    int (card (pseudoAllocation a)) -\n    int (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "using differenceSumVsCardinality assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?Z \\<subseteq> ?X \\<union> ?Y; finite ?Z\\<rbrakk>\n  \\<Longrightarrow> int (sum (?X <| ?Y) ?X) - int (sum (?X <| ?Y) ?Z) =\n                    int (card ?X) - int (card (?Z \\<inter> ?X))\n  pseudoAllocation aa\n  \\<subseteq> pseudoAllocation a \\<union> N \\<times> finestpart G\n  finite (pseudoAllocation aa)\n\ngoal (1 subgoal):\n 1. int (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n          (pseudoAllocation a)) -\n    int (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n          (pseudoAllocation aa)) =\n    int (card (pseudoAllocation a)) -\n    int (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "by blast"], ["", "lemma lm037: \n  \"pseudoAllocation {} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudoAllocation {} = {}", "unfolding pseudoAllocation_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (omega ` {}) = {}", "by simp"], ["", "corollary lm038: \n  assumes \"a \\<in> allAllocations N {}\" \n  shows \"(pseudoAllocation a) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudoAllocation a = {}", "unfolding pseudoAllocation_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (omega ` a) = {}", "using assms lm012"], ["proof (prove)\nusing this:\n  a \\<in> allAllocations N {}\n  allAllocations ?N {} \\<subseteq> {{}}\n\ngoal (1 subgoal):\n 1. \\<Union> (omega ` a) = {}", "by blast"], ["", "corollary lm039: \n  assumes \"a \\<in> allAllocations N G\" \"finite G\" \"G \\<noteq> {}\"\n  shows \"finite (pseudoAllocation a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (pseudoAllocation a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (pseudoAllocation a)", "have \"card (pseudoAllocation a) = card G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = card G", "using assms(1,2) lm034"], ["proof (prove)\nusing this:\n  a \\<in> allAllocations N G\n  finite G\n  \\<lbrakk>?a \\<in> allAllocations ?N ?G; finite ?G\\<rbrakk>\n  \\<Longrightarrow> card (pseudoAllocation ?a) = card ?G\n\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = card G", "by blast"], ["proof (state)\nthis:\n  card (pseudoAllocation a) = card G\n\ngoal (1 subgoal):\n 1. finite (pseudoAllocation a)", "thus \"finite (pseudoAllocation a)\""], ["proof (prove)\nusing this:\n  card (pseudoAllocation a) = card G\n\ngoal (1 subgoal):\n 1. finite (pseudoAllocation a)", "using assms(2,3)"], ["proof (prove)\nusing this:\n  card (pseudoAllocation a) = card G\n  finite G\n  G \\<noteq> {}\n\ngoal (1 subgoal):\n 1. finite (pseudoAllocation a)", "by fastforce"], ["proof (state)\nthis:\n  finite (pseudoAllocation a)\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary lm040: \n  assumes \"a \\<in> allAllocations N G\" \"finite G\" \n  shows \"finite (pseudoAllocation a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (pseudoAllocation a)", "using assms finite.emptyI lm039 lm038"], ["proof (prove)\nusing this:\n  a \\<in> allAllocations N G\n  finite G\n  finite {}\n  \\<lbrakk>?a \\<in> allAllocations ?N ?G; finite ?G; ?G \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> finite (pseudoAllocation ?a)\n  ?a \\<in> allAllocations ?N {} \\<Longrightarrow> pseudoAllocation ?a = {}\n\ngoal (1 subgoal):\n 1. finite (pseudoAllocation a)", "by (metis (no_types))"], ["", "lemma lm041: \n  assumes \"a \\<in> allAllocations N G\" \"aa \\<in> allAllocations N G\" \"finite G\" \n  shows  \"(card (pseudoAllocation aa \\<inter> (pseudoAllocation a)) = card (pseudoAllocation a)) = \n          (pseudoAllocation a = pseudoAllocation aa)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (card (pseudoAllocation aa \\<inter> pseudoAllocation a) =\n     card (pseudoAllocation a)) =\n    (pseudoAllocation a = pseudoAllocation aa)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (card (pseudoAllocation aa \\<inter> pseudoAllocation a) =\n     card (pseudoAllocation a)) =\n    (pseudoAllocation a = pseudoAllocation aa)", "let ?P=pseudoAllocation"], ["proof (state)\ngoal (1 subgoal):\n 1. (card (pseudoAllocation aa \\<inter> pseudoAllocation a) =\n     card (pseudoAllocation a)) =\n    (pseudoAllocation a = pseudoAllocation aa)", "let ?c=card"], ["proof (state)\ngoal (1 subgoal):\n 1. (card (pseudoAllocation aa \\<inter> pseudoAllocation a) =\n     card (pseudoAllocation a)) =\n    (pseudoAllocation a = pseudoAllocation aa)", "let ?A=\"?P a\""], ["proof (state)\ngoal (1 subgoal):\n 1. (card (pseudoAllocation aa \\<inter> pseudoAllocation a) =\n     card (pseudoAllocation a)) =\n    (pseudoAllocation a = pseudoAllocation aa)", "let ?AA=\"?P aa\""], ["proof (state)\ngoal (1 subgoal):\n 1. (card (pseudoAllocation aa \\<inter> pseudoAllocation a) =\n     card (pseudoAllocation a)) =\n    (pseudoAllocation a = pseudoAllocation aa)", "have \"?c ?A=?c G & ?c ?AA=?c G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = card G \\<and>\n    card (pseudoAllocation aa) = card G", "using assms lm034"], ["proof (prove)\nusing this:\n  a \\<in> allAllocations N G\n  aa \\<in> allAllocations N G\n  finite G\n  \\<lbrakk>?a \\<in> allAllocations ?N ?G; finite ?G\\<rbrakk>\n  \\<Longrightarrow> card (pseudoAllocation ?a) = card ?G\n\ngoal (1 subgoal):\n 1. card (pseudoAllocation a) = card G \\<and>\n    card (pseudoAllocation aa) = card G", "by (metis (lifting, mono_tags))"], ["proof (state)\nthis:\n  card (pseudoAllocation a) = card G \\<and>\n  card (pseudoAllocation aa) = card G\n\ngoal (1 subgoal):\n 1. (card (pseudoAllocation aa \\<inter> pseudoAllocation a) =\n     card (pseudoAllocation a)) =\n    (pseudoAllocation a = pseudoAllocation aa)", "moreover"], ["proof (state)\nthis:\n  card (pseudoAllocation a) = card G \\<and>\n  card (pseudoAllocation aa) = card G\n\ngoal (1 subgoal):\n 1. (card (pseudoAllocation aa \\<inter> pseudoAllocation a) =\n     card (pseudoAllocation a)) =\n    (pseudoAllocation a = pseudoAllocation aa)", "have \"finite ?A & finite ?AA\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (pseudoAllocation a) \\<and> finite (pseudoAllocation aa)", "using assms lm040"], ["proof (prove)\nusing this:\n  a \\<in> allAllocations N G\n  aa \\<in> allAllocations N G\n  finite G\n  \\<lbrakk>?a \\<in> allAllocations ?N ?G; finite ?G\\<rbrakk>\n  \\<Longrightarrow> finite (pseudoAllocation ?a)\n\ngoal (1 subgoal):\n 1. finite (pseudoAllocation a) \\<and> finite (pseudoAllocation aa)", "by blast"], ["proof (state)\nthis:\n  finite (pseudoAllocation a) \\<and> finite (pseudoAllocation aa)\n\ngoal (1 subgoal):\n 1. (card (pseudoAllocation aa \\<inter> pseudoAllocation a) =\n     card (pseudoAllocation a)) =\n    (pseudoAllocation a = pseudoAllocation aa)", "ultimately"], ["proof (chain)\npicking this:\n  card (pseudoAllocation a) = card G \\<and>\n  card (pseudoAllocation aa) = card G\n  finite (pseudoAllocation a) \\<and> finite (pseudoAllocation aa)", "show ?thesis"], ["proof (prove)\nusing this:\n  card (pseudoAllocation a) = card G \\<and>\n  card (pseudoAllocation aa) = card G\n  finite (pseudoAllocation a) \\<and> finite (pseudoAllocation aa)\n\ngoal (1 subgoal):\n 1. (card (pseudoAllocation aa \\<inter> pseudoAllocation a) =\n     card (pseudoAllocation a)) =\n    (pseudoAllocation a = pseudoAllocation aa)", "using assms cardinalityIntersectionEquality"], ["proof (prove)\nusing this:\n  card (pseudoAllocation a) = card G \\<and>\n  card (pseudoAllocation aa) = card G\n  finite (pseudoAllocation a) \\<and> finite (pseudoAllocation aa)\n  a \\<in> allAllocations N G\n  aa \\<in> allAllocations N G\n  finite G\n  \\<lbrakk>finite ?X; finite ?Y; card ?X = card ?Y\\<rbrakk>\n  \\<Longrightarrow> (card (?X \\<inter> ?Y) = card ?X) = (?X = ?Y)\n\ngoal (1 subgoal):\n 1. (card (pseudoAllocation aa \\<inter> pseudoAllocation a) =\n     card (pseudoAllocation a)) =\n    (pseudoAllocation a = pseudoAllocation aa)", "by (metis(no_types,lifting))"], ["proof (state)\nthis:\n  (card (pseudoAllocation aa \\<inter> pseudoAllocation a) =\n   card (pseudoAllocation a)) =\n  (pseudoAllocation a = pseudoAllocation aa)\n\ngoal:\nNo subgoals!", "qed"], ["", "(* alternative definition for omega *)"], ["", "lemma lm042: \n  \"omega pair = {fst pair} \\<times> {{y}| y. y \\<in> snd pair}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. omega pair = {fst pair} \\<times> {{y} |y. y \\<in> snd pair}", "using finestpart_def finestPart"], ["proof (prove)\nusing this:\n  finestpart ?X = (\\<lambda>x. {x}) ` ?X\n  finestpart ?X = {{x} |x. x \\<in> ?X}\n\ngoal (1 subgoal):\n 1. omega pair = {fst pair} \\<times> {{y} |y. y \\<in> snd pair}", "by auto"], ["", "(* variant of above *)"], ["", "lemma lm043: \n  \"omega pair = {(fst pair, {y})| y. y \\<in>  snd pair}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. omega pair = {(fst pair, {y}) |y. y \\<in> snd pair}", "using lm042 setOfPairs"], ["proof (prove)\nusing this:\n  omega ?pair = {fst ?pair} \\<times> {{y} |y. y \\<in> snd ?pair}\n  {(fst ?pair, {y}) |y. y \\<in> snd ?pair} =\n  {fst ?pair} \\<times> {{y} |y. y \\<in> snd ?pair}\n\ngoal (1 subgoal):\n 1. omega pair = {(fst pair, {y}) |y. y \\<in> snd pair}", "by metis"], ["", "lemma lm044: \n  \"pseudoAllocation a = \\<Union> {{(fst pair, {y})| y. y \\<in> snd pair}| pair. pair \\<in> a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudoAllocation a =\n    \\<Union> {{(fst pair, {y}) |y. y \\<in> snd pair} |pair. pair \\<in> a}", "unfolding pseudoAllocation_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (omega ` a) =\n    \\<Union> {{(fst pair, {y}) |y. y \\<in> snd pair} |pair. pair \\<in> a}", "using lm043"], ["proof (prove)\nusing this:\n  omega ?pair = {(fst ?pair, {y}) |y. y \\<in> snd ?pair}\n\ngoal (1 subgoal):\n 1. \\<Union> (omega ` a) =\n    \\<Union> {{(fst pair, {y}) |y. y \\<in> snd pair} |pair. pair \\<in> a}", "by blast"], ["", "lemma lm045: \n  \"\\<Union> {{(fst pair, {y})| y. y \\<in> snd pair}| pair. pair \\<in> a} = \n   {(fst pair, {y})| y pair. y \\<in> snd pair & pair \\<in> a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> {{(fst pair, {y}) |y. y \\<in> snd pair} |pair. pair \\<in> a} =\n    {(fst pair, {y}) |y pair. y \\<in> snd pair \\<and> pair \\<in> a}", "by blast"], ["", "corollary lm046: \n  \"pseudoAllocation a = {(fst pair, Y)| Y pair. Y \\<in> finestpart (snd pair) & pair \\<in> a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudoAllocation a =\n    {(fst pair, Y) |Y pair.\n     Y \\<in> finestpart (snd pair) \\<and> pair \\<in> a}", "unfolding pseudoAllocation_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (omega ` a) =\n    {(fst pair, Y) |Y pair.\n     Y \\<in> finestpart (snd pair) \\<and> pair \\<in> a}", "using setOfPairsEquality"], ["proof (prove)\nusing this:\n  {(fst pair, {y}) |y pair. y \\<in> snd pair \\<and> pair \\<in> ?X} =\n  {(fst pair, Y) |Y pair.\n   Y \\<in> finestpart (snd pair) \\<and> pair \\<in> ?X}\n\ngoal (1 subgoal):\n 1. \\<Union> (omega ` a) =\n    {(fst pair, Y) |Y pair.\n     Y \\<in> finestpart (snd pair) \\<and> pair \\<in> a}", "by fastforce"], ["", "lemma lm047: \n  assumes \"runiq a\" \n  shows \"{(fst pair, Y)| Y pair. Y \\<in> finestpart (snd pair) & pair \\<in> a} = \n         {(x, Y)| Y x. Y \\<in> finestpart (a,,x) & x \\<in> Domain a}\"\n         (is \"?L=?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. {(fst pair, Y) |Y pair.\n     Y \\<in> finestpart (snd pair) \\<and> pair \\<in> a} =\n    {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a}", "using assms Domain.DomainI fst_conv functionOnFirstEqualsSecond runiq_wrt_ex1 surjective_pairing"], ["proof (prove)\nusing this:\n  runiq a\n  (?a, ?b) \\<in> ?r \\<Longrightarrow> ?a \\<in> Domain ?r\n  fst (?x1.0, ?x2.0) = ?x1.0\n  \\<lbrakk>runiq ?R; ?z \\<in> ?R\\<rbrakk>\n  \\<Longrightarrow> ?R ,, fst ?z = snd ?z\n  runiq ?R = (\\<forall>a\\<in>Domain ?R. \\<exists>!b. (a, b) \\<in> ?R)\n  ?t = (fst ?t, snd ?t)\n\ngoal (1 subgoal):\n 1. {(fst pair, Y) |Y pair.\n     Y \\<in> finestpart (snd pair) \\<and> pair \\<in> a} =\n    {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a}", "by (metis(hide_lams,no_types))"], ["", "corollary lm048: \n  assumes \"runiq a\" \n  shows \"pseudoAllocation a = {(x, Y)| Y x. Y \\<in> finestpart (a,,x) & x \\<in> Domain a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudoAllocation a =\n    {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a}", "unfolding pseudoAllocation_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (omega ` a) =\n    {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a}", "using assms lm047 lm046"], ["proof (prove)\nusing this:\n  runiq a\n  runiq ?a \\<Longrightarrow>\n  {(fst pair, Y) |Y pair.\n   Y \\<in> finestpart (snd pair) \\<and> pair \\<in> ?a} =\n  {(x, Y) |Y x. Y \\<in> finestpart (?a ,, x) \\<and> x \\<in> Domain ?a}\n  pseudoAllocation ?a =\n  {(fst pair, Y) |Y pair.\n   Y \\<in> finestpart (snd pair) \\<and> pair \\<in> ?a}\n\ngoal (1 subgoal):\n 1. \\<Union> (omega ` a) =\n    {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a}", "by fastforce"], ["", "corollary lm049: \n  \"Range (pseudoAllocation a) = \\<Union> (finestpart ` (Range a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Range (pseudoAllocation a) = \\<Union> (finestpart ` Range a)", "unfolding pseudoAllocation_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Range (\\<Union> (omega ` a)) = \\<Union> (finestpart ` Range a)", "using lm046 rangeSetOfPairs unionFinestPart"], ["proof (prove)\nusing this:\n  pseudoAllocation ?a =\n  {(fst pair, Y) |Y pair.\n   Y \\<in> finestpart (snd pair) \\<and> pair \\<in> ?a}\n  Range\n   {(fst pair, Y) |Y pair.\n    Y \\<in> finestpart (snd pair) \\<and> pair \\<in> ?X} =\n  {Y. \\<exists>x. Y \\<in> finestpart x \\<and> x \\<in> Range ?X}\n  {Y |Y. \\<exists>x. Y \\<in> finestpart x \\<and> x \\<in> ?X} =\n  \\<Union> (finestpart ` ?X)\n\ngoal (1 subgoal):\n 1. Range (\\<Union> (omega ` a)) = \\<Union> (finestpart ` Range a)", "by fastforce"], ["", "corollary lm050: \n  \"Range (pseudoAllocation a) = finestpart (\\<Union> (Range a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Range (pseudoAllocation a) = finestpart (\\<Union> (Range a))", "using commuteUnionFinestpart lm049"], ["proof (prove)\nusing this:\n  \\<Union> (finestpart ` ?XX) = finestpart (\\<Union> ?XX)\n  Range (pseudoAllocation ?a) = \\<Union> (finestpart ` Range ?a)\n\ngoal (1 subgoal):\n 1. Range (pseudoAllocation a) = finestpart (\\<Union> (Range a))", "by metis"], ["", "lemma lm051: \n  \"pseudoAllocation a = {(fst pair, {y})| y pair. y \\<in> snd pair & pair \\<in> a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudoAllocation a =\n    {(fst pair, {y}) |y pair. y \\<in> snd pair \\<and> pair \\<in> a}", "using lm044 lm045"], ["proof (prove)\nusing this:\n  pseudoAllocation ?a =\n  \\<Union> {{(fst pair, {y}) |y. y \\<in> snd pair} |pair. pair \\<in> ?a}\n  \\<Union> {{(fst pair, {y}) |y. y \\<in> snd pair} |pair. pair \\<in> ?a} =\n  {(fst pair, {y}) |y pair. y \\<in> snd pair \\<and> pair \\<in> ?a}\n\ngoal (1 subgoal):\n 1. pseudoAllocation a =\n    {(fst pair, {y}) |y pair. y \\<in> snd pair \\<and> pair \\<in> a}", "by (metis (no_types))"], ["", "lemma lm052: \n  \"{(fst pair, {y})| y pair. y \\<in> snd pair & pair \\<in> a} = \n   {(x, {y})| x y. y \\<in> \\<Union> (a``{x}) & x \\<in> Domain a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {(fst pair, {y}) |y pair. y \\<in> snd pair \\<and> pair \\<in> a} =\n    {(x, {y}) |x y. y \\<in> a ,,, x \\<and> x \\<in> Domain a}", "by auto"], ["", "lemma lm053: \n  \"pseudoAllocation a = {(x, {y})| x y. y \\<in> \\<Union> (a``{x}) & x \\<in> Domain a}\"\n  (is \"?L=?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudoAllocation a =\n    {(x, {y}) |x y. y \\<in> a ,,, x \\<and> x \\<in> Domain a}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pseudoAllocation a =\n    {(x, {y}) |x y. y \\<in> a ,,, x \\<and> x \\<in> Domain a}", "have \"?L={(fst pair, {y})| y pair. y \\<in> snd pair & pair \\<in> a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudoAllocation a =\n    {(fst pair, {y}) |y pair. y \\<in> snd pair \\<and> pair \\<in> a}", "by (rule lm051)"], ["proof (state)\nthis:\n  pseudoAllocation a =\n  {(fst pair, {y}) |y pair. y \\<in> snd pair \\<and> pair \\<in> a}\n\ngoal (1 subgoal):\n 1. pseudoAllocation a =\n    {(x, {y}) |x y. y \\<in> a ,,, x \\<and> x \\<in> Domain a}", "moreover"], ["proof (state)\nthis:\n  pseudoAllocation a =\n  {(fst pair, {y}) |y pair. y \\<in> snd pair \\<and> pair \\<in> a}\n\ngoal (1 subgoal):\n 1. pseudoAllocation a =\n    {(x, {y}) |x y. y \\<in> a ,,, x \\<and> x \\<in> Domain a}", "have \"... = ?R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {(fst pair, {y}) |y pair. y \\<in> snd pair \\<and> pair \\<in> a} =\n    {(x, {y}) |x y. y \\<in> a ,,, x \\<and> x \\<in> Domain a}", "by (rule lm052)"], ["proof (state)\nthis:\n  {(fst pair, {y}) |y pair. y \\<in> snd pair \\<and> pair \\<in> a} =\n  {(x, {y}) |x y. y \\<in> a ,,, x \\<and> x \\<in> Domain a}\n\ngoal (1 subgoal):\n 1. pseudoAllocation a =\n    {(x, {y}) |x y. y \\<in> a ,,, x \\<and> x \\<in> Domain a}", "ultimately"], ["proof (chain)\npicking this:\n  pseudoAllocation a =\n  {(fst pair, {y}) |y pair. y \\<in> snd pair \\<and> pair \\<in> a}\n  {(fst pair, {y}) |y pair. y \\<in> snd pair \\<and> pair \\<in> a} =\n  {(x, {y}) |x y. y \\<in> a ,,, x \\<and> x \\<in> Domain a}", "show ?thesis"], ["proof (prove)\nusing this:\n  pseudoAllocation a =\n  {(fst pair, {y}) |y pair. y \\<in> snd pair \\<and> pair \\<in> a}\n  {(fst pair, {y}) |y pair. y \\<in> snd pair \\<and> pair \\<in> a} =\n  {(x, {y}) |x y. y \\<in> a ,,, x \\<and> x \\<in> Domain a}\n\ngoal (1 subgoal):\n 1. pseudoAllocation a =\n    {(x, {y}) |x y. y \\<in> a ,,, x \\<and> x \\<in> Domain a}", "by simp"], ["proof (state)\nthis:\n  pseudoAllocation a =\n  {(x, {y}) |x y. y \\<in> a ,,, x \\<and> x \\<in> Domain a}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lm054: \n  \"runiq (summedBidVectorRel bids N G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. runiq (summedBidVectorRel bids N G)", "using graph_def image_Collect_mem domainOfGraph"], ["proof (prove)\nusing this:\n  graph ?X ?f = {(x, ?f x) |x. x \\<in> ?X}\n  {?f x |x. x \\<in> ?S} = ?f ` ?S\n  runiq (graph ?X ?f) \\<and> Domain (graph ?X ?f) = ?X\n\ngoal (1 subgoal):\n 1. runiq (summedBidVectorRel bids N G)", "by (metis(no_types))"], ["", "corollary lm055: \n  \"runiq (summedBidVectorRel bids N G || a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. runiq (summedBidVectorRel bids N G || a)", "unfolding restrict_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. runiq\n     (a \\<times> Range (summedBidVectorRel bids N G) \\<inter>\n      summedBidVectorRel bids N G)", "using lm054 subrel_runiq Int_commute"], ["proof (prove)\nusing this:\n  runiq (summedBidVectorRel ?bids ?N ?G)\n  \\<lbrakk>runiq ?Q; ?P \\<subseteq> ?Q\\<rbrakk> \\<Longrightarrow> runiq ?P\n  ?A \\<inter> ?B = ?B \\<inter> ?A\n\ngoal (1 subgoal):\n 1. runiq\n     (a \\<times> Range (summedBidVectorRel bids N G) \\<inter>\n      summedBidVectorRel bids N G)", "by blast"], ["", "lemma summedBidVectorCharacterization: \n  \"N \\<times> (Pow G - {{}}) = Domain (summedBidVectorRel bids N G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N \\<times> (Pow G - {{}}) = Domain (summedBidVectorRel bids N G)", "by blast"], ["", "corollary lm056: \n  assumes \"a \\<in> allAllocations N G\" \n  shows \"a \\<subseteq> Domain (summedBidVectorRel bids N G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<subseteq> Domain (summedBidVectorRel bids N G)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<subseteq> Domain (summedBidVectorRel bids N G)", "let ?p=allAllocations"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<subseteq> Domain (summedBidVectorRel bids N G)", "let ?L=summedBidVectorRel"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<subseteq> Domain (summedBidVectorRel bids N G)", "have \"a \\<subseteq> N \\<times> (Pow G - {{}})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<subseteq> N \\<times> (Pow G - {{}})", "using assms allocationPowerset"], ["proof (prove)\nusing this:\n  a \\<in> allAllocations N G\n  ?a \\<in> allAllocations ?N ?G \\<Longrightarrow>\n  ?a \\<subseteq> ?N \\<times> (Pow ?G - {{}})\n\ngoal (1 subgoal):\n 1. a \\<subseteq> N \\<times> (Pow G - {{}})", "by (metis(no_types))"], ["proof (state)\nthis:\n  a \\<subseteq> N \\<times> (Pow G - {{}})\n\ngoal (1 subgoal):\n 1. a \\<subseteq> Domain (summedBidVectorRel bids N G)", "moreover"], ["proof (state)\nthis:\n  a \\<subseteq> N \\<times> (Pow G - {{}})\n\ngoal (1 subgoal):\n 1. a \\<subseteq> Domain (summedBidVectorRel bids N G)", "have \"N \\<times> (Pow G - {{}}) = Domain (?L bids N G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N \\<times> (Pow G - {{}}) = Domain (summedBidVectorRel bids N G)", "using summedBidVectorCharacterization"], ["proof (prove)\nusing this:\n  ?N \\<times> (Pow ?G - {{}}) = Domain (summedBidVectorRel ?bids ?N ?G)\n\ngoal (1 subgoal):\n 1. N \\<times> (Pow G - {{}}) = Domain (summedBidVectorRel bids N G)", "by blast"], ["proof (state)\nthis:\n  N \\<times> (Pow G - {{}}) = Domain (summedBidVectorRel bids N G)\n\ngoal (1 subgoal):\n 1. a \\<subseteq> Domain (summedBidVectorRel bids N G)", "ultimately"], ["proof (chain)\npicking this:\n  a \\<subseteq> N \\<times> (Pow G - {{}})\n  N \\<times> (Pow G - {{}}) = Domain (summedBidVectorRel bids N G)", "show ?thesis"], ["proof (prove)\nusing this:\n  a \\<subseteq> N \\<times> (Pow G - {{}})\n  N \\<times> (Pow G - {{}}) = Domain (summedBidVectorRel bids N G)\n\ngoal (1 subgoal):\n 1. a \\<subseteq> Domain (summedBidVectorRel bids N G)", "by blast"], ["proof (state)\nthis:\n  a \\<subseteq> Domain (summedBidVectorRel bids N G)\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary lm057: \n  \"sum (summedBidVector bids N G) (a \\<inter> (Domain (summedBidVectorRel bids N G))) = \n   sum snd ((summedBidVectorRel bids N G) || a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G)\n     (a \\<inter> Domain (summedBidVectorRel bids N G)) =\n    sum snd (summedBidVectorRel bids N G || a)", "using sumRestrictedToDomainInvariant lm055"], ["proof (prove)\nusing this:\n  runiq (?f || ?X) \\<Longrightarrow>\n  sum (toFunction ?f) (?X \\<inter> Domain ?f) = sum snd (?f || ?X)\n  runiq (summedBidVectorRel ?bids ?N ?G || ?a)\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G)\n     (a \\<inter> Domain (summedBidVectorRel bids N G)) =\n    sum snd (summedBidVectorRel bids N G || a)", "by fast"], ["", "corollary lm058: \n  assumes \"a \\<in> allAllocations N G\" \n  shows \"sum (summedBidVector bids N G) a = sum snd ((summedBidVectorRel bids N G) || a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a =\n    sum snd (summedBidVectorRel bids N G || a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a =\n    sum snd (summedBidVectorRel bids N G || a)", "let ?l=summedBidVector"], ["proof (state)\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a =\n    sum snd (summedBidVectorRel bids N G || a)", "let ?L=summedBidVectorRel"], ["proof (state)\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a =\n    sum snd (summedBidVectorRel bids N G || a)", "have \"a \\<subseteq> Domain (?L bids N G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<subseteq> Domain (summedBidVectorRel bids N G)", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> allAllocations N G\n\ngoal (1 subgoal):\n 1. a \\<subseteq> Domain (summedBidVectorRel bids N G)", "by (rule lm056)"], ["proof (state)\nthis:\n  a \\<subseteq> Domain (summedBidVectorRel bids N G)\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a =\n    sum snd (summedBidVectorRel bids N G || a)", "then"], ["proof (chain)\npicking this:\n  a \\<subseteq> Domain (summedBidVectorRel bids N G)", "have \"a = a \\<inter> Domain (?L bids N G)\""], ["proof (prove)\nusing this:\n  a \\<subseteq> Domain (summedBidVectorRel bids N G)\n\ngoal (1 subgoal):\n 1. a = a \\<inter> Domain (summedBidVectorRel bids N G)", "by blast"], ["proof (state)\nthis:\n  a = a \\<inter> Domain (summedBidVectorRel bids N G)\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a =\n    sum snd (summedBidVectorRel bids N G || a)", "then"], ["proof (chain)\npicking this:\n  a = a \\<inter> Domain (summedBidVectorRel bids N G)", "have \"sum (?l bids N G) a = sum (?l bids N G) (a \\<inter> Domain (?L bids N G))\""], ["proof (prove)\nusing this:\n  a = a \\<inter> Domain (summedBidVectorRel bids N G)\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a =\n    sum (summedBidVector bids N G)\n     (a \\<inter> Domain (summedBidVectorRel bids N G))", "by presburger"], ["proof (state)\nthis:\n  sum (summedBidVector bids N G) a =\n  sum (summedBidVector bids N G)\n   (a \\<inter> Domain (summedBidVectorRel bids N G))\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a =\n    sum snd (summedBidVectorRel bids N G || a)", "thus ?thesis"], ["proof (prove)\nusing this:\n  sum (summedBidVector bids N G) a =\n  sum (summedBidVector bids N G)\n   (a \\<inter> Domain (summedBidVectorRel bids N G))\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a =\n    sum snd (summedBidVectorRel bids N G || a)", "using lm057"], ["proof (prove)\nusing this:\n  sum (summedBidVector bids N G) a =\n  sum (summedBidVector bids N G)\n   (a \\<inter> Domain (summedBidVectorRel bids N G))\n  sum (summedBidVector ?bids ?N ?G)\n   (?a \\<inter> Domain (summedBidVectorRel ?bids ?N ?G)) =\n  sum snd (summedBidVectorRel ?bids ?N ?G || ?a)\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a =\n    sum snd (summedBidVectorRel bids N G || a)", "by auto"], ["proof (state)\nthis:\n  sum (summedBidVector bids N G) a =\n  sum snd (summedBidVectorRel bids N G || a)\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary lm059: \n  assumes \"a \\<in> allAllocations N G\" \n  shows \"sum (summedBidVector bids N G) a = \n         sum snd ((summedBid bids) ` ((N \\<times> (Pow G - {{}})) \\<inter> a))\"\n        (is \"?X=?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a =\n    sum snd (summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a =\n    sum snd (summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a))", "let ?p = summedBid"], ["proof (state)\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a =\n    sum snd (summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a))", "let ?L = summedBidVectorRel"], ["proof (state)\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a =\n    sum snd (summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a))", "let ?l = summedBidVector"], ["proof (state)\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a =\n    sum snd (summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a))", "let ?A = \"N \\<times> (Pow G - {{}})\""], ["proof (state)\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a =\n    sum snd (summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a))", "let ?inner2 = \"(?p bids)`(?A \\<inter> a)\""], ["proof (state)\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a =\n    sum snd (summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a))", "let ?inner1 = \"(?L bids N G)||a\""], ["proof (state)\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a =\n    sum snd (summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a))", "have \"?R = sum snd ?inner1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum snd (summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a)) =\n    sum snd (summedBidVectorRel bids N G || a)", "using assms lm020"], ["proof (prove)\nusing this:\n  a \\<in> allAllocations N G\n  summedBidVectorRel ?bids ?N ?G || ?a =\n  summedBid ?bids ` (?N \\<times> (Pow ?G - {{}}) \\<inter> ?a)\n\ngoal (1 subgoal):\n 1. sum snd (summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a)) =\n    sum snd (summedBidVectorRel bids N G || a)", "by (metis (no_types))"], ["proof (state)\nthis:\n  sum snd (summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a)) =\n  sum snd (summedBidVectorRel bids N G || a)\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a =\n    sum snd (summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a))", "moreover"], ["proof (state)\nthis:\n  sum snd (summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a)) =\n  sum snd (summedBidVectorRel bids N G || a)\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a =\n    sum snd (summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a))", "have \"sum (?l bids N G) a = sum snd ?inner1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a =\n    sum snd (summedBidVectorRel bids N G || a)", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> allAllocations N G\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a =\n    sum snd (summedBidVectorRel bids N G || a)", "by (rule lm058)"], ["proof (state)\nthis:\n  sum (summedBidVector bids N G) a =\n  sum snd (summedBidVectorRel bids N G || a)\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a =\n    sum snd (summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a))", "ultimately"], ["proof (chain)\npicking this:\n  sum snd (summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a)) =\n  sum snd (summedBidVectorRel bids N G || a)\n  sum (summedBidVector bids N G) a =\n  sum snd (summedBidVectorRel bids N G || a)", "show ?thesis"], ["proof (prove)\nusing this:\n  sum snd (summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a)) =\n  sum snd (summedBidVectorRel bids N G || a)\n  sum (summedBidVector bids N G) a =\n  sum snd (summedBidVectorRel bids N G || a)\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a =\n    sum snd (summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a))", "by simp"], ["proof (state)\nthis:\n  sum (summedBidVector bids N G) a =\n  sum snd (summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a))\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary lm060: \n  assumes \"a \\<in> allAllocations N G\" \n  shows \"sum (summedBidVector bids N G) a = sum snd ((summedBid bids) ` a)\" \n  (is \"?L=?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum snd (summedBid bids ` a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum snd (summedBid bids ` a)", "let ?p=summedBid"], ["proof (state)\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum snd (summedBid bids ` a)", "let ?l=summedBidVector"], ["proof (state)\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum snd (summedBid bids ` a)", "have \"?L = sum snd ((?p bids)`((N \\<times> (Pow G - {{}}))\\<inter> a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a =\n    sum snd (summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a))", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> allAllocations N G\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a =\n    sum snd (summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a))", "by (rule lm059)"], ["proof (state)\nthis:\n  sum (summedBidVector bids N G) a =\n  sum snd (summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a))\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum snd (summedBid bids ` a)", "moreover"], ["proof (state)\nthis:\n  sum (summedBidVector bids N G) a =\n  sum snd (summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a))\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum snd (summedBid bids ` a)", "have \"... = ?R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum snd (summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a)) =\n    sum snd (summedBid bids ` a)", "using assms allocationPowerset Int_absorb1"], ["proof (prove)\nusing this:\n  a \\<in> allAllocations N G\n  ?a \\<in> allAllocations ?N ?G \\<Longrightarrow>\n  ?a \\<subseteq> ?N \\<times> (Pow ?G - {{}})\n  ?B \\<subseteq> ?A \\<Longrightarrow> ?A \\<inter> ?B = ?B\n\ngoal (1 subgoal):\n 1. sum snd (summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a)) =\n    sum snd (summedBid bids ` a)", "by (metis (no_types))"], ["proof (state)\nthis:\n  sum snd (summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a)) =\n  sum snd (summedBid bids ` a)\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum snd (summedBid bids ` a)", "ultimately"], ["proof (chain)\npicking this:\n  sum (summedBidVector bids N G) a =\n  sum snd (summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a))\n  sum snd (summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a)) =\n  sum snd (summedBid bids ` a)", "show ?thesis"], ["proof (prove)\nusing this:\n  sum (summedBidVector bids N G) a =\n  sum snd (summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a))\n  sum snd (summedBid bids ` (N \\<times> (Pow G - {{}}) \\<inter> a)) =\n  sum snd (summedBid bids ` a)\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum snd (summedBid bids ` a)", "by simp"], ["proof (state)\nthis:\n  sum (summedBidVector bids N G) a = sum snd (summedBid bids ` a)\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary lm061: \n  \"sum snd ((summedBid bids) ` a) = sum (snd \\<circ> (summedBid bids)) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum snd (summedBid bids ` a) = sum (snd \\<circ> summedBid bids) a", "using sum.reindex lm021"], ["proof (prove)\nusing this:\n  inj_on ?h ?A \\<Longrightarrow> sum ?g (?h ` ?A) = sum (?g \\<circ> ?h) ?A\n  inj_on (summedBid ?bids) ?X\n\ngoal (1 subgoal):\n 1. sum snd (summedBid bids ` a) = sum (snd \\<circ> summedBid bids) a", "by blast"], ["", "corollary lm062: \n  assumes \"a \\<in> allAllocations N G\" \n  shows \"sum (summedBidVector bids N G) a = sum (snd \\<circ> (summedBid bids)) a\" \n  (is \"?L=?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum (snd \\<circ> summedBid bids) a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum (snd \\<circ> summedBid bids) a", "let ?p = summedBid"], ["proof (state)\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum (snd \\<circ> summedBid bids) a", "let ?l = summedBidVector"], ["proof (state)\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum (snd \\<circ> summedBid bids) a", "have \"?L = sum snd ((?p bids)` a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum snd (summedBid bids ` a)", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> allAllocations N G\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum snd (summedBid bids ` a)", "by (rule lm060)"], ["proof (state)\nthis:\n  sum (summedBidVector bids N G) a = sum snd (summedBid bids ` a)\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum (snd \\<circ> summedBid bids) a", "moreover"], ["proof (state)\nthis:\n  sum (summedBidVector bids N G) a = sum snd (summedBid bids ` a)\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum (snd \\<circ> summedBid bids) a", "have \"... = ?R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum snd (summedBid bids ` a) = sum (snd \\<circ> summedBid bids) a", "using assms lm061"], ["proof (prove)\nusing this:\n  a \\<in> allAllocations N G\n  sum snd (summedBid ?bids ` ?a) = sum (snd \\<circ> summedBid ?bids) ?a\n\ngoal (1 subgoal):\n 1. sum snd (summedBid bids ` a) = sum (snd \\<circ> summedBid bids) a", "by blast"], ["proof (state)\nthis:\n  sum snd (summedBid bids ` a) = sum (snd \\<circ> summedBid bids) a\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum (snd \\<circ> summedBid bids) a", "ultimately"], ["proof (chain)\npicking this:\n  sum (summedBidVector bids N G) a = sum snd (summedBid bids ` a)\n  sum snd (summedBid bids ` a) = sum (snd \\<circ> summedBid bids) a", "show ?thesis"], ["proof (prove)\nusing this:\n  sum (summedBidVector bids N G) a = sum snd (summedBid bids ` a)\n  sum snd (summedBid bids ` a) = sum (snd \\<circ> summedBid bids) a\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum (snd \\<circ> summedBid bids) a", "by simp"], ["proof (state)\nthis:\n  sum (summedBidVector bids N G) a = sum (snd \\<circ> summedBid bids) a\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary lm063: \n  assumes \"a \\<in> allAllocations N G\" \n  shows \"sum (summedBidVector bids N G) a = sum ((sum bids) \\<circ> omega) a\" \n  (is \"?L=?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum (sum bids \\<circ> omega) a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum (sum bids \\<circ> omega) a", "let ?inner1 = \"snd \\<circ> (summedBid bids)\""], ["proof (state)\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum (sum bids \\<circ> omega) a", "let ?inner2=\"(sum bids) \\<circ> omega\""], ["proof (state)\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum (sum bids \\<circ> omega) a", "let ?M=\"sum ?inner1 a\""], ["proof (state)\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum (sum bids \\<circ> omega) a", "have \"?L = ?M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum (snd \\<circ> summedBid bids) a", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> allAllocations N G\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum (snd \\<circ> summedBid bids) a", "by (rule lm062)"], ["proof (state)\nthis:\n  sum (summedBidVector bids N G) a = sum (snd \\<circ> summedBid bids) a\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum (sum bids \\<circ> omega) a", "moreover"], ["proof (state)\nthis:\n  sum (summedBidVector bids N G) a = sum (snd \\<circ> summedBid bids) a\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum (sum bids \\<circ> omega) a", "have \"?inner1 = ?inner2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd \\<circ> summedBid bids = sum bids \\<circ> omega", "using lm023 assms"], ["proof (prove)\nusing this:\n  snd (summedBid ?bids ?pair) = sum ?bids (omega ?pair)\n  a \\<in> allAllocations N G\n\ngoal (1 subgoal):\n 1. snd \\<circ> summedBid bids = sum bids \\<circ> omega", "by fastforce"], ["proof (state)\nthis:\n  snd \\<circ> summedBid bids = sum bids \\<circ> omega\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum (sum bids \\<circ> omega) a", "ultimately"], ["proof (chain)\npicking this:\n  sum (summedBidVector bids N G) a = sum (snd \\<circ> summedBid bids) a\n  snd \\<circ> summedBid bids = sum bids \\<circ> omega", "show \"?L = ?R\""], ["proof (prove)\nusing this:\n  sum (summedBidVector bids N G) a = sum (snd \\<circ> summedBid bids) a\n  snd \\<circ> summedBid bids = sum bids \\<circ> omega\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum (sum bids \\<circ> omega) a", "using assms"], ["proof (prove)\nusing this:\n  sum (summedBidVector bids N G) a = sum (snd \\<circ> summedBid bids) a\n  snd \\<circ> summedBid bids = sum bids \\<circ> omega\n  a \\<in> allAllocations N G\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum (sum bids \\<circ> omega) a", "by metis"], ["proof (state)\nthis:\n  sum (summedBidVector bids N G) a = sum (sum bids \\<circ> omega) a\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary lm064: \n  assumes \"a \\<in> allAllocations N G\" \n  shows \"sum (summedBidVector bids N G) a = sum (sum bids) (omega` a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum (sum bids) (omega ` a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum (sum bids) (omega ` a)", "have \"{} \\<notin> Range a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<notin> Range a", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> allAllocations N G\n\ngoal (1 subgoal):\n 1. {} \\<notin> Range a", "by (metis emptyNotInRange)"], ["proof (state)\nthis:\n  {} \\<notin> Range a\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum (sum bids) (omega ` a)", "then"], ["proof (chain)\npicking this:\n  {} \\<notin> Range a", "have \"inj_on omega a\""], ["proof (prove)\nusing this:\n  {} \\<notin> Range a\n\ngoal (1 subgoal):\n 1. inj_on omega a", "using lm028"], ["proof (prove)\nusing this:\n  {} \\<notin> Range a\n  {} \\<notin> Range ?X \\<Longrightarrow> inj_on omega ?X\n\ngoal (1 subgoal):\n 1. inj_on omega a", "by blast"], ["proof (state)\nthis:\n  inj_on omega a\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum (sum bids) (omega ` a)", "then"], ["proof (chain)\npicking this:\n  inj_on omega a", "have \"sum (sum bids) (omega ` a) = sum ((sum bids) \\<circ> omega) a\""], ["proof (prove)\nusing this:\n  inj_on omega a\n\ngoal (1 subgoal):\n 1. sum (sum bids) (omega ` a) = sum (sum bids \\<circ> omega) a", "by (rule sum.reindex)"], ["proof (state)\nthis:\n  sum (sum bids) (omega ` a) = sum (sum bids \\<circ> omega) a\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum (sum bids) (omega ` a)", "moreover"], ["proof (state)\nthis:\n  sum (sum bids) (omega ` a) = sum (sum bids \\<circ> omega) a\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum (sum bids) (omega ` a)", "have \"sum (summedBidVector bids N G) a = sum ((sum bids) \\<circ> omega) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum (sum bids \\<circ> omega) a", "using assms lm063"], ["proof (prove)\nusing this:\n  a \\<in> allAllocations N G\n  ?a \\<in> allAllocations ?N ?G \\<Longrightarrow>\n  sum (summedBidVector ?bids ?N ?G) ?a = sum (sum ?bids \\<circ> omega) ?a\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum (sum bids \\<circ> omega) a", "by (rule Extraction.exE_realizer)"], ["proof (state)\nthis:\n  sum (summedBidVector bids N G) a = sum (sum bids \\<circ> omega) a\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum (sum bids) (omega ` a)", "ultimately"], ["proof (chain)\npicking this:\n  sum (sum bids) (omega ` a) = sum (sum bids \\<circ> omega) a\n  sum (summedBidVector bids N G) a = sum (sum bids \\<circ> omega) a", "show ?thesis"], ["proof (prove)\nusing this:\n  sum (sum bids) (omega ` a) = sum (sum bids \\<circ> omega) a\n  sum (summedBidVector bids N G) a = sum (sum bids \\<circ> omega) a\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum (sum bids) (omega ` a)", "by presburger"], ["proof (state)\nthis:\n  sum (summedBidVector bids N G) a = sum (sum bids) (omega ` a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lm065: \n  assumes \"finite (snd pair)\" \n  shows \"finite (omega pair)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (omega pair)", "using assms finite.emptyI finite.insertI finite_SigmaI finiteFinestpart"], ["proof (prove)\nusing this:\n  finite (snd pair)\n  finite {}\n  finite ?A \\<Longrightarrow> finite (insert ?a ?A)\n  \\<lbrakk>finite ?A;\n   \\<And>a. a \\<in> ?A \\<Longrightarrow> finite (?B a)\\<rbrakk>\n  \\<Longrightarrow> finite (Sigma ?A ?B)\n  finite (finestpart ?X) = finite ?X\n\ngoal (1 subgoal):\n 1. finite (omega pair)", "by (metis(no_types))"], ["", "corollary lm066: \n  assumes \"\\<forall>y\\<in>(Range a). finite y\" \n  shows \"\\<forall>y\\<in>(omega ` a). finite y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>omega ` a. finite y", "using assms lm065 imageE finitePairSecondRange"], ["proof (prove)\nusing this:\n  \\<forall>y\\<in>Range a. finite y\n  finite (snd ?pair) \\<Longrightarrow> finite (omega ?pair)\n  \\<lbrakk>?b \\<in> ?f ` ?A;\n   \\<And>x.\n      \\<lbrakk>?b = ?f x; x \\<in> ?A\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  (\\<forall>pair\\<in>?R. finite (snd pair)) =\n  (\\<forall>y\\<in>Range ?R. finite y)\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>omega ` a. finite y", "by fast"], ["", "corollary lm067: \n  assumes \"a \\<in> allAllocations N G\" \"finite G\" \n  shows \"\\<forall>x\\<in>(omega ` a). finite x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>omega ` a. finite x", "using assms lm066 lm014"], ["proof (prove)\nusing this:\n  a \\<in> allAllocations N G\n  finite G\n  \\<forall>y\\<in>Range ?a. finite y \\<Longrightarrow>\n  \\<forall>y\\<in>omega ` ?a. finite y\n  \\<lbrakk>?a \\<in> allAllocations ?N ?G; finite ?G\\<rbrakk>\n  \\<Longrightarrow> \\<forall>y\\<in>Range ?a. finite y\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>omega ` a. finite x", "by (metis(no_types))"], ["", "corollary lm068: \n  assumes \"a \\<in> allAllocations N G\" \n  shows \"is_non_overlapping (omega ` a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_non_overlapping (omega ` a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. is_non_overlapping (omega ` a)", "have \"runiq a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. runiq a", "by (metis (no_types) assms image_iff allocationRightUniqueRangeDomain)"], ["proof (state)\nthis:\n  runiq a\n\ngoal (1 subgoal):\n 1. is_non_overlapping (omega ` a)", "moreover"], ["proof (state)\nthis:\n  runiq a\n\ngoal (1 subgoal):\n 1. is_non_overlapping (omega ` a)", "have \"{} \\<notin> Range a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<notin> Range a", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> allAllocations N G\n\ngoal (1 subgoal):\n 1. {} \\<notin> Range a", "by (metis emptyNotInRange)"], ["proof (state)\nthis:\n  {} \\<notin> Range a\n\ngoal (1 subgoal):\n 1. is_non_overlapping (omega ` a)", "ultimately"], ["proof (chain)\npicking this:\n  runiq a\n  {} \\<notin> Range a", "show ?thesis"], ["proof (prove)\nusing this:\n  runiq a\n  {} \\<notin> Range a\n\ngoal (1 subgoal):\n 1. is_non_overlapping (omega ` a)", "using lm027"], ["proof (prove)\nusing this:\n  runiq a\n  {} \\<notin> Range a\n  \\<lbrakk>{} \\<notin> Range ?f; runiq ?f\\<rbrakk>\n  \\<Longrightarrow> is_non_overlapping (omega ` ?f)\n\ngoal (1 subgoal):\n 1. is_non_overlapping (omega ` a)", "by blast"], ["proof (state)\nthis:\n  is_non_overlapping (omega ` a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lm069: \n  assumes \"a \\<in> allAllocations N G\" \"finite G\" \n  shows \"sum (sum bids) (omega` a) = sum bids (\\<Union> (omega ` a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (sum bids) (omega ` a) = sum bids (\\<Union> (omega ` a))", "using assms sumUnionDisjoint2 lm068 lm067"], ["proof (prove)\nusing this:\n  a \\<in> allAllocations N G\n  finite G\n  \\<lbrakk>\\<forall>x\\<in>?X. finite x; is_non_overlapping ?X\\<rbrakk>\n  \\<Longrightarrow> sum ?f (\\<Union> ?X) = sum (sum ?f) ?X\n  ?a \\<in> allAllocations ?N ?G \\<Longrightarrow>\n  is_non_overlapping (omega ` ?a)\n  \\<lbrakk>?a \\<in> allAllocations ?N ?G; finite ?G\\<rbrakk>\n  \\<Longrightarrow> \\<forall>x\\<in>omega ` ?a. finite x\n\ngoal (1 subgoal):\n 1. sum (sum bids) (omega ` a) = sum bids (\\<Union> (omega ` a))", "by (metis (lifting, mono_tags))"], ["", "corollary lm070: \n  assumes \"a \\<in> allAllocations N G\" \"finite G\" \n  shows \"sum (summedBidVector bids N G) a = sum bids (pseudoAllocation a)\" \n  (is \"?L = ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum bids (pseudoAllocation a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum bids (pseudoAllocation a)", "have \"?L = sum (sum bids) (omega `a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum (sum bids) (omega ` a)", "using assms lm064"], ["proof (prove)\nusing this:\n  a \\<in> allAllocations N G\n  finite G\n  ?a \\<in> allAllocations ?N ?G \\<Longrightarrow>\n  sum (summedBidVector ?bids ?N ?G) ?a = sum (sum ?bids) (omega ` ?a)\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum (sum bids) (omega ` a)", "by blast"], ["proof (state)\nthis:\n  sum (summedBidVector bids N G) a = sum (sum bids) (omega ` a)\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum bids (pseudoAllocation a)", "moreover"], ["proof (state)\nthis:\n  sum (summedBidVector bids N G) a = sum (sum bids) (omega ` a)\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum bids (pseudoAllocation a)", "have \"... = sum bids (\\<Union> (omega ` a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (sum bids) (omega ` a) = sum bids (\\<Union> (omega ` a))", "using assms lm069"], ["proof (prove)\nusing this:\n  a \\<in> allAllocations N G\n  finite G\n  \\<lbrakk>?a \\<in> allAllocations ?N ?G; finite ?G\\<rbrakk>\n  \\<Longrightarrow> sum (sum ?bids) (omega ` ?a) =\n                    sum ?bids (\\<Union> (omega ` ?a))\n\ngoal (1 subgoal):\n 1. sum (sum bids) (omega ` a) = sum bids (\\<Union> (omega ` a))", "by blast"], ["proof (state)\nthis:\n  sum (sum bids) (omega ` a) = sum bids (\\<Union> (omega ` a))\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum bids (pseudoAllocation a)", "ultimately"], ["proof (chain)\npicking this:\n  sum (summedBidVector bids N G) a = sum (sum bids) (omega ` a)\n  sum (sum bids) (omega ` a) = sum bids (\\<Union> (omega ` a))", "show ?thesis"], ["proof (prove)\nusing this:\n  sum (summedBidVector bids N G) a = sum (sum bids) (omega ` a)\n  sum (sum bids) (omega ` a) = sum bids (\\<Union> (omega ` a))\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum bids (pseudoAllocation a)", "unfolding pseudoAllocation_def"], ["proof (prove)\nusing this:\n  sum (summedBidVector bids N G) a = sum (sum bids) (omega ` a)\n  sum (sum bids) (omega ` a) = sum bids (\\<Union> (omega ` a))\n\ngoal (1 subgoal):\n 1. sum (summedBidVector bids N G) a = sum bids (\\<Union> (omega ` a))", "by presburger"], ["proof (state)\nthis:\n  sum (summedBidVector bids N G) a = sum bids (pseudoAllocation a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lm071: \n  \"Domain (pseudoAllocation a) \\<subseteq> Domain a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Domain (pseudoAllocation a) \\<subseteq> Domain a", "unfolding pseudoAllocation_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Domain (\\<Union> (omega ` a)) \\<subseteq> Domain a", "by fastforce"], ["", "corollary lm072: \n  assumes \"a \\<in> allAllocations N G\" \n  shows \"Domain (pseudoAllocation a) \\<subseteq> N   &   Range (pseudoAllocation a) = finestpart G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Domain (pseudoAllocation a) \\<subseteq> N \\<and>\n    Range (pseudoAllocation a) = finestpart G", "using assms lm071 allocationInverseRangeDomainProperty lm050 is_partition_of_def subset_trans"], ["proof (prove)\nusing this:\n  a \\<in> allAllocations N G\n  Domain (pseudoAllocation ?a) \\<subseteq> Domain ?a\n  ?a \\<in> allAllocations ?N ?G \\<Longrightarrow>\n  ?a\\<inverse> \\<in> injections (Range ?a) ?N \\<and>\n  Range ?a partitions ?G \\<and> Domain ?a \\<subseteq> ?N\n  Range (pseudoAllocation ?a) = finestpart (\\<Union> (Range ?a))\n  ?P partitions ?A = is_partition_of' ?P ?A\n  \\<lbrakk>?A \\<subseteq> ?B; ?B \\<subseteq> ?C\\<rbrakk>\n  \\<Longrightarrow> ?A \\<subseteq> ?C\n\ngoal (1 subgoal):\n 1. Domain (pseudoAllocation a) \\<subseteq> N \\<and>\n    Range (pseudoAllocation a) = finestpart G", "by (metis(no_types))"], ["", "corollary lm073: \n  assumes \"a \\<in> allAllocations N G\" \n  shows \"pseudoAllocation a \\<subseteq> N \\<times> finestpart G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudoAllocation a \\<subseteq> N \\<times> finestpart G", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pseudoAllocation a \\<subseteq> N \\<times> finestpart G", "let ?p = pseudoAllocation"], ["proof (state)\ngoal (1 subgoal):\n 1. pseudoAllocation a \\<subseteq> N \\<times> finestpart G", "let ?aa = \"?p a\""], ["proof (state)\ngoal (1 subgoal):\n 1. pseudoAllocation a \\<subseteq> N \\<times> finestpart G", "let ?d = Domain"], ["proof (state)\ngoal (1 subgoal):\n 1. pseudoAllocation a \\<subseteq> N \\<times> finestpart G", "let ?r = Range"], ["proof (state)\ngoal (1 subgoal):\n 1. pseudoAllocation a \\<subseteq> N \\<times> finestpart G", "have \"?d ?aa \\<subseteq> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Domain (pseudoAllocation a) \\<subseteq> N", "using assms lm072"], ["proof (prove)\nusing this:\n  a \\<in> allAllocations N G\n  ?a \\<in> allAllocations ?N ?G \\<Longrightarrow>\n  Domain (pseudoAllocation ?a) \\<subseteq> ?N \\<and>\n  Range (pseudoAllocation ?a) = finestpart ?G\n\ngoal (1 subgoal):\n 1. Domain (pseudoAllocation a) \\<subseteq> N", "by (metis (lifting, mono_tags))"], ["proof (state)\nthis:\n  Domain (pseudoAllocation a) \\<subseteq> N\n\ngoal (1 subgoal):\n 1. pseudoAllocation a \\<subseteq> N \\<times> finestpart G", "moreover"], ["proof (state)\nthis:\n  Domain (pseudoAllocation a) \\<subseteq> N\n\ngoal (1 subgoal):\n 1. pseudoAllocation a \\<subseteq> N \\<times> finestpart G", "have \"?r ?aa \\<subseteq> finestpart G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Range (pseudoAllocation a) \\<subseteq> finestpart G", "using assms lm072"], ["proof (prove)\nusing this:\n  a \\<in> allAllocations N G\n  ?a \\<in> allAllocations ?N ?G \\<Longrightarrow>\n  Domain (pseudoAllocation ?a) \\<subseteq> ?N \\<and>\n  Range (pseudoAllocation ?a) = finestpart ?G\n\ngoal (1 subgoal):\n 1. Range (pseudoAllocation a) \\<subseteq> finestpart G", "by (metis (lifting, mono_tags) equalityE)"], ["proof (state)\nthis:\n  Range (pseudoAllocation a) \\<subseteq> finestpart G\n\ngoal (1 subgoal):\n 1. pseudoAllocation a \\<subseteq> N \\<times> finestpart G", "ultimately"], ["proof (chain)\npicking this:\n  Domain (pseudoAllocation a) \\<subseteq> N\n  Range (pseudoAllocation a) \\<subseteq> finestpart G", "have \"?d ?aa \\<times> (?r ?aa) \\<subseteq> N \\<times> finestpart G\""], ["proof (prove)\nusing this:\n  Domain (pseudoAllocation a) \\<subseteq> N\n  Range (pseudoAllocation a) \\<subseteq> finestpart G\n\ngoal (1 subgoal):\n 1. Domain (pseudoAllocation a) \\<times> Range (pseudoAllocation a)\n    \\<subseteq> N \\<times> finestpart G", "by auto"], ["proof (state)\nthis:\n  Domain (pseudoAllocation a) \\<times> Range (pseudoAllocation a)\n  \\<subseteq> N \\<times> finestpart G\n\ngoal (1 subgoal):\n 1. pseudoAllocation a \\<subseteq> N \\<times> finestpart G", "then"], ["proof (chain)\npicking this:\n  Domain (pseudoAllocation a) \\<times> Range (pseudoAllocation a)\n  \\<subseteq> N \\<times> finestpart G", "show \"?aa \\<subseteq> N \\<times> finestpart G\""], ["proof (prove)\nusing this:\n  Domain (pseudoAllocation a) \\<times> Range (pseudoAllocation a)\n  \\<subseteq> N \\<times> finestpart G\n\ngoal (1 subgoal):\n 1. pseudoAllocation a \\<subseteq> N \\<times> finestpart G", "by auto"], ["proof (state)\nthis:\n  pseudoAllocation a \\<subseteq> N \\<times> finestpart G\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>From Pseudo-allocations to allocations\\<close>"], ["", "(* pseudoAllocationInv inverts pseudoAllocation *)"], ["", "abbreviation \"pseudoAllocationInv pseudo == {(x, \\<Union> (pseudo `` {x}))| x. x \\<in> Domain pseudo}\""], ["", "lemma lm074: \n  assumes \"runiq a\" \"{} \\<notin> Range a\" \n  shows \"a = pseudoAllocationInv (pseudoAllocation a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a =\n    {(x, pseudoAllocation a ,,, x) |x. x \\<in> Domain (pseudoAllocation a)}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a =\n    {(x, pseudoAllocation a ,,, x) |x. x \\<in> Domain (pseudoAllocation a)}", "let ?p=\"{(x, Y)| Y x. Y \\<in> finestpart (a,,x) & x \\<in> Domain a}\""], ["proof (state)\ngoal (1 subgoal):\n 1. a =\n    {(x, pseudoAllocation a ,,, x) |x. x \\<in> Domain (pseudoAllocation a)}", "let ?a=\"{(x, \\<Union> (?p `` {x}))| x. x \\<in> Domain ?p}\""], ["proof (state)\ngoal (1 subgoal):\n 1. a =\n    {(x, pseudoAllocation a ,,, x) |x. x \\<in> Domain (pseudoAllocation a)}", "have \"\\<forall>x \\<in> Domain a. a,,x \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>Domain a. a ,, x \\<noteq> {}", "by (metis assms eval_runiq_in_Range)"], ["proof (state)\nthis:\n  \\<forall>x\\<in>Domain a. a ,, x \\<noteq> {}\n\ngoal (1 subgoal):\n 1. a =\n    {(x, pseudoAllocation a ,,, x) |x. x \\<in> Domain (pseudoAllocation a)}", "then"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>Domain a. a ,, x \\<noteq> {}", "have \"\\<forall>x \\<in> Domain a. finestpart (a,,x) \\<noteq> {}\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>Domain a. a ,, x \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>Domain a. finestpart (a ,, x) \\<noteq> {}", "by (metis notEmptyFinestpart)"], ["proof (state)\nthis:\n  \\<forall>x\\<in>Domain a. finestpart (a ,, x) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. a =\n    {(x, pseudoAllocation a ,,, x) |x. x \\<in> Domain (pseudoAllocation a)}", "then"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>Domain a. finestpart (a ,, x) \\<noteq> {}", "have \"Domain a \\<subseteq> Domain ?p\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>Domain a. finestpart (a ,, x) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. Domain a\n    \\<subseteq> Domain\n                 {(x, Y) |Y x.\n                  Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a}", "by force"], ["proof (state)\nthis:\n  Domain a\n  \\<subseteq> Domain\n               {(x, Y) |Y x.\n                Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a}\n\ngoal (1 subgoal):\n 1. a =\n    {(x, pseudoAllocation a ,,, x) |x. x \\<in> Domain (pseudoAllocation a)}", "moreover"], ["proof (state)\nthis:\n  Domain a\n  \\<subseteq> Domain\n               {(x, Y) |Y x.\n                Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a}\n\ngoal (1 subgoal):\n 1. a =\n    {(x, pseudoAllocation a ,,, x) |x. x \\<in> Domain (pseudoAllocation a)}", "have \"Domain a \\<supseteq> Domain ?p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Domain\n     {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a}\n    \\<subseteq> Domain a", "by fast"], ["proof (state)\nthis:\n  Domain {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a}\n  \\<subseteq> Domain a\n\ngoal (1 subgoal):\n 1. a =\n    {(x, pseudoAllocation a ,,, x) |x. x \\<in> Domain (pseudoAllocation a)}", "ultimately"], ["proof (chain)\npicking this:\n  Domain a\n  \\<subseteq> Domain\n               {(x, Y) |Y x.\n                Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a}\n  Domain {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a}\n  \\<subseteq> Domain a", "have \n  1: \"Domain a = Domain ?p\""], ["proof (prove)\nusing this:\n  Domain a\n  \\<subseteq> Domain\n               {(x, Y) |Y x.\n                Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a}\n  Domain {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a}\n  \\<subseteq> Domain a\n\ngoal (1 subgoal):\n 1. Domain a =\n    Domain\n     {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a}", "by fast"], ["proof (state)\nthis:\n  Domain a =\n  Domain {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a}\n\ngoal (1 subgoal):\n 1. a =\n    {(x, pseudoAllocation a ,,, x) |x. x \\<in> Domain (pseudoAllocation a)}", "{"], ["proof (state)\nthis:\n  Domain a =\n  Domain {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a}\n\ngoal (1 subgoal):\n 1. a =\n    {(x, pseudoAllocation a ,,, x) |x. x \\<in> Domain (pseudoAllocation a)}", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. a =\n    {(x, pseudoAllocation a ,,, x) |x. x \\<in> Domain (pseudoAllocation a)}", "assume \"z \\<in> ?a\""], ["proof (state)\nthis:\n  z \\<in> {(x, {(x, Y) |Y x.\n                Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n               x) |\n           x. x \\<in> Domain\n                       {(x, Y) |Y x.\n                        Y \\<in> finestpart (a ,, x) \\<and>\n                        x \\<in> Domain a}}\n\ngoal (1 subgoal):\n 1. a =\n    {(x, pseudoAllocation a ,,, x) |x. x \\<in> Domain (pseudoAllocation a)}", "then"], ["proof (chain)\npicking this:\n  z \\<in> {(x, {(x, Y) |Y x.\n                Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n               x) |\n           x. x \\<in> Domain\n                       {(x, Y) |Y x.\n                        Y \\<in> finestpart (a ,, x) \\<and>\n                        x \\<in> Domain a}}", "obtain x where \n    \"x \\<in> Domain ?p & z=(x , \\<Union> (?p `` {x}))\""], ["proof (prove)\nusing this:\n  z \\<in> {(x, {(x, Y) |Y x.\n                Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n               x) |\n           x. x \\<in> Domain\n                       {(x, Y) |Y x.\n                        Y \\<in> finestpart (a ,, x) \\<and>\n                        x \\<in> Domain a}}\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        x \\<in> Domain\n                 {(x, Y) |Y x.\n                  Y \\<in> finestpart (a ,, x) \\<and>\n                  x \\<in> Domain a} \\<and>\n        z =\n        (x, {(x, Y) |Y x.\n             Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n            x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x \\<in> Domain\n           {(x, Y) |Y x.\n            Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} \\<and>\n  z =\n  (x, {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n      x)\n\ngoal (1 subgoal):\n 1. a =\n    {(x, pseudoAllocation a ,,, x) |x. x \\<in> Domain (pseudoAllocation a)}", "then"], ["proof (chain)\npicking this:\n  x \\<in> Domain\n           {(x, Y) |Y x.\n            Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} \\<and>\n  z =\n  (x, {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n      x)", "have \"x \\<in> Domain a & z=(x , \\<Union> (?p `` {x}))\""], ["proof (prove)\nusing this:\n  x \\<in> Domain\n           {(x, Y) |Y x.\n            Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} \\<and>\n  z =\n  (x, {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n      x)\n\ngoal (1 subgoal):\n 1. x \\<in> Domain a \\<and>\n    z =\n    (x, {(x, Y) |Y x.\n         Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n        x)", "by fast"], ["proof (state)\nthis:\n  x \\<in> Domain a \\<and>\n  z =\n  (x, {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n      x)\n\ngoal (1 subgoal):\n 1. a =\n    {(x, pseudoAllocation a ,,, x) |x. x \\<in> Domain (pseudoAllocation a)}", "then"], ["proof (chain)\npicking this:\n  x \\<in> Domain a \\<and>\n  z =\n  (x, {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n      x)", "moreover"], ["proof (chain)\npicking this:\n  x \\<in> Domain a \\<and>\n  z =\n  (x, {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n      x)", "have \"?p``{x} = finestpart (a,,x)\""], ["proof (prove)\nusing this:\n  x \\<in> Domain a \\<and>\n  z =\n  (x, {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n      x)\n\ngoal (1 subgoal):\n 1. {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ``\n    {x} =\n    finestpart (a ,, x)", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> Domain a \\<and>\n  z =\n  (x, {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n      x)\n  runiq a\n  {} \\<notin> Range a\n\ngoal (1 subgoal):\n 1. {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ``\n    {x} =\n    finestpart (a ,, x)", "by fastforce"], ["proof (state)\nthis:\n  {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ``\n  {x} =\n  finestpart (a ,, x)\n\ngoal (1 subgoal):\n 1. a =\n    {(x, pseudoAllocation a ,,, x) |x. x \\<in> Domain (pseudoAllocation a)}", "moreover"], ["proof (state)\nthis:\n  {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ``\n  {x} =\n  finestpart (a ,, x)\n\ngoal (1 subgoal):\n 1. a =\n    {(x, pseudoAllocation a ,,, x) |x. x \\<in> Domain (pseudoAllocation a)}", "have \"\\<Union> (finestpart (a,,x))= a,,x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (finestpart (a ,, x)) = a ,, x", "by (metis finestPartUnion)"], ["proof (state)\nthis:\n  \\<Union> (finestpart (a ,, x)) = a ,, x\n\ngoal (1 subgoal):\n 1. a =\n    {(x, pseudoAllocation a ,,, x) |x. x \\<in> Domain (pseudoAllocation a)}", "ultimately"], ["proof (chain)\npicking this:\n  x \\<in> Domain a \\<and>\n  z =\n  (x, {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n      x)\n  {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ``\n  {x} =\n  finestpart (a ,, x)\n  \\<Union> (finestpart (a ,, x)) = a ,, x", "have \"z \\<in> a\""], ["proof (prove)\nusing this:\n  x \\<in> Domain a \\<and>\n  z =\n  (x, {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n      x)\n  {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ``\n  {x} =\n  finestpart (a ,, x)\n  \\<Union> (finestpart (a ,, x)) = a ,, x\n\ngoal (1 subgoal):\n 1. z \\<in> a", "by (metis assms(1) eval_runiq_rel)"], ["proof (state)\nthis:\n  z \\<in> a\n\ngoal (1 subgoal):\n 1. a =\n    {(x, pseudoAllocation a ,,, x) |x. x \\<in> Domain (pseudoAllocation a)}", "}"], ["proof (state)\nthis:\n  ?z2\n  \\<in> {(x, {(x, Y) |Y x.\n              Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n             x) |\n         x. x \\<in> Domain\n                     {(x, Y) |Y x.\n                      Y \\<in> finestpart (a ,, x) \\<and>\n                      x \\<in> Domain a}} \\<Longrightarrow>\n  ?z2 \\<in> a\n\ngoal (1 subgoal):\n 1. a =\n    {(x, pseudoAllocation a ,,, x) |x. x \\<in> Domain (pseudoAllocation a)}", "then"], ["proof (chain)\npicking this:\n  ?z2\n  \\<in> {(x, {(x, Y) |Y x.\n              Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n             x) |\n         x. x \\<in> Domain\n                     {(x, Y) |Y x.\n                      Y \\<in> finestpart (a ,, x) \\<and>\n                      x \\<in> Domain a}} \\<Longrightarrow>\n  ?z2 \\<in> a", "have\n  2: \"?a \\<subseteq> a\""], ["proof (prove)\nusing this:\n  ?z2\n  \\<in> {(x, {(x, Y) |Y x.\n              Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n             x) |\n         x. x \\<in> Domain\n                     {(x, Y) |Y x.\n                      Y \\<in> finestpart (a ,, x) \\<and>\n                      x \\<in> Domain a}} \\<Longrightarrow>\n  ?z2 \\<in> a\n\ngoal (1 subgoal):\n 1. {(x, {(x, Y) |Y x.\n          Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n         x) |\n     x. x \\<in> Domain\n                 {(x, Y) |Y x.\n                  Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a}}\n    \\<subseteq> a", "by fast"], ["proof (state)\nthis:\n  {(x, {(x, Y) |Y x.\n        Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n       x) |\n   x. x \\<in> Domain\n               {(x, Y) |Y x.\n                Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a}}\n  \\<subseteq> a\n\ngoal (1 subgoal):\n 1. a =\n    {(x, pseudoAllocation a ,,, x) |x. x \\<in> Domain (pseudoAllocation a)}", "{"], ["proof (state)\nthis:\n  {(x, {(x, Y) |Y x.\n        Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n       x) |\n   x. x \\<in> Domain\n               {(x, Y) |Y x.\n                Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a}}\n  \\<subseteq> a\n\ngoal (1 subgoal):\n 1. a =\n    {(x, pseudoAllocation a ,,, x) |x. x \\<in> Domain (pseudoAllocation a)}", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. a =\n    {(x, pseudoAllocation a ,,, x) |x. x \\<in> Domain (pseudoAllocation a)}", "assume 0: \"z \\<in> a\""], ["proof (state)\nthis:\n  z \\<in> a\n\ngoal (1 subgoal):\n 1. a =\n    {(x, pseudoAllocation a ,,, x) |x. x \\<in> Domain (pseudoAllocation a)}", "let ?x=\"fst z\""], ["proof (state)\ngoal (1 subgoal):\n 1. a =\n    {(x, pseudoAllocation a ,,, x) |x. x \\<in> Domain (pseudoAllocation a)}", "let ?Y=\"a,,?x\""], ["proof (state)\ngoal (1 subgoal):\n 1. a =\n    {(x, pseudoAllocation a ,,, x) |x. x \\<in> Domain (pseudoAllocation a)}", "let ?YY=\"finestpart ?Y\""], ["proof (state)\ngoal (1 subgoal):\n 1. a =\n    {(x, pseudoAllocation a ,,, x) |x. x \\<in> Domain (pseudoAllocation a)}", "have \"z \\<in> a & ?x \\<in> Domain a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> a \\<and> fst z \\<in> Domain a", "using 0"], ["proof (prove)\nusing this:\n  z \\<in> a\n\ngoal (1 subgoal):\n 1. z \\<in> a \\<and> fst z \\<in> Domain a", "by (metis fst_eq_Domain rev_image_eqI)"], ["proof (state)\nthis:\n  z \\<in> a \\<and> fst z \\<in> Domain a\n\ngoal (1 subgoal):\n 1. a =\n    {(x, pseudoAllocation a ,,, x) |x. x \\<in> Domain (pseudoAllocation a)}", "then"], ["proof (chain)\npicking this:\n  z \\<in> a \\<and> fst z \\<in> Domain a", "have \n    3: \"z \\<in> a & ?x \\<in> Domain ?p\""], ["proof (prove)\nusing this:\n  z \\<in> a \\<and> fst z \\<in> Domain a\n\ngoal (1 subgoal):\n 1. z \\<in> a \\<and>\n    fst z\n    \\<in> Domain\n           {(x, Y) |Y x.\n            Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a}", "using 1"], ["proof (prove)\nusing this:\n  z \\<in> a \\<and> fst z \\<in> Domain a\n  Domain a =\n  Domain {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a}\n\ngoal (1 subgoal):\n 1. z \\<in> a \\<and>\n    fst z\n    \\<in> Domain\n           {(x, Y) |Y x.\n            Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a}", "by presburger"], ["proof (state)\nthis:\n  z \\<in> a \\<and>\n  fst z\n  \\<in> Domain\n         {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a}\n\ngoal (1 subgoal):\n 1. a =\n    {(x, pseudoAllocation a ,,, x) |x. x \\<in> Domain (pseudoAllocation a)}", "then"], ["proof (chain)\npicking this:\n  z \\<in> a \\<and>\n  fst z\n  \\<in> Domain\n         {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a}", "have \"?p `` {?x} = ?YY\""], ["proof (prove)\nusing this:\n  z \\<in> a \\<and>\n  fst z\n  \\<in> Domain\n         {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a}\n\ngoal (1 subgoal):\n 1. {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ``\n    {fst z} =\n    finestpart (a ,, fst z)", "by fastforce"], ["proof (state)\nthis:\n  {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ``\n  {fst z} =\n  finestpart (a ,, fst z)\n\ngoal (1 subgoal):\n 1. a =\n    {(x, pseudoAllocation a ,,, x) |x. x \\<in> Domain (pseudoAllocation a)}", "then"], ["proof (chain)\npicking this:\n  {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ``\n  {fst z} =\n  finestpart (a ,, fst z)", "have \"\\<Union> (?p `` {?x}) = ?Y\""], ["proof (prove)\nusing this:\n  {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ``\n  {fst z} =\n  finestpart (a ,, fst z)\n\ngoal (1 subgoal):\n 1. {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n    fst z =\n    a ,, fst z", "by (metis finestPartUnion)"], ["proof (state)\nthis:\n  {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n  fst z =\n  a ,, fst z\n\ngoal (1 subgoal):\n 1. a =\n    {(x, pseudoAllocation a ,,, x) |x. x \\<in> Domain (pseudoAllocation a)}", "moreover"], ["proof (state)\nthis:\n  {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n  fst z =\n  a ,, fst z\n\ngoal (1 subgoal):\n 1. a =\n    {(x, pseudoAllocation a ,,, x) |x. x \\<in> Domain (pseudoAllocation a)}", "have \"z = (?x, ?Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z = (fst z, a ,, fst z)", "using assms"], ["proof (prove)\nusing this:\n  runiq a\n  {} \\<notin> Range a\n\ngoal (1 subgoal):\n 1. z = (fst z, a ,, fst z)", "by (metis \"0\" functionOnFirstEqualsSecond\n                                                           surjective_pairing)"], ["proof (state)\nthis:\n  z = (fst z, a ,, fst z)\n\ngoal (1 subgoal):\n 1. a =\n    {(x, pseudoAllocation a ,,, x) |x. x \\<in> Domain (pseudoAllocation a)}", "ultimately"], ["proof (chain)\npicking this:\n  {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n  fst z =\n  a ,, fst z\n  z = (fst z, a ,, fst z)", "have \"z \\<in> ?a\""], ["proof (prove)\nusing this:\n  {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n  fst z =\n  a ,, fst z\n  z = (fst z, a ,, fst z)\n\ngoal (1 subgoal):\n 1. z \\<in> {(x, {(x, Y) |Y x.\n                  Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n                 x) |\n             x. x \\<in> Domain\n                         {(x, Y) |Y x.\n                          Y \\<in> finestpart (a ,, x) \\<and>\n                          x \\<in> Domain a}}", "using 3"], ["proof (prove)\nusing this:\n  {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n  fst z =\n  a ,, fst z\n  z = (fst z, a ,, fst z)\n  z \\<in> a \\<and>\n  fst z\n  \\<in> Domain\n         {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a}\n\ngoal (1 subgoal):\n 1. z \\<in> {(x, {(x, Y) |Y x.\n                  Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n                 x) |\n             x. x \\<in> Domain\n                         {(x, Y) |Y x.\n                          Y \\<in> finestpart (a ,, x) \\<and>\n                          x \\<in> Domain a}}", "by (metis (lifting, mono_tags) mem_Collect_eq)"], ["proof (state)\nthis:\n  z \\<in> {(x, {(x, Y) |Y x.\n                Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n               x) |\n           x. x \\<in> Domain\n                       {(x, Y) |Y x.\n                        Y \\<in> finestpart (a ,, x) \\<and>\n                        x \\<in> Domain a}}\n\ngoal (1 subgoal):\n 1. a =\n    {(x, pseudoAllocation a ,,, x) |x. x \\<in> Domain (pseudoAllocation a)}", "}"], ["proof (state)\nthis:\n  ?z2 \\<in> a \\<Longrightarrow>\n  ?z2\n  \\<in> {(x, {(x, Y) |Y x.\n              Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n             x) |\n         x. x \\<in> Domain\n                     {(x, Y) |Y x.\n                      Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a}}\n\ngoal (1 subgoal):\n 1. a =\n    {(x, pseudoAllocation a ,,, x) |x. x \\<in> Domain (pseudoAllocation a)}", "then"], ["proof (chain)\npicking this:\n  ?z2 \\<in> a \\<Longrightarrow>\n  ?z2\n  \\<in> {(x, {(x, Y) |Y x.\n              Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n             x) |\n         x. x \\<in> Domain\n                     {(x, Y) |Y x.\n                      Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a}}", "have \"a = ?a\""], ["proof (prove)\nusing this:\n  ?z2 \\<in> a \\<Longrightarrow>\n  ?z2\n  \\<in> {(x, {(x, Y) |Y x.\n              Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n             x) |\n         x. x \\<in> Domain\n                     {(x, Y) |Y x.\n                      Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a}}\n\ngoal (1 subgoal):\n 1. a =\n    {(x, {(x, Y) |Y x.\n          Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n         x) |\n     x. x \\<in> Domain\n                 {(x, Y) |Y x.\n                  Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a}}", "using 2"], ["proof (prove)\nusing this:\n  ?z2 \\<in> a \\<Longrightarrow>\n  ?z2\n  \\<in> {(x, {(x, Y) |Y x.\n              Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n             x) |\n         x. x \\<in> Domain\n                     {(x, Y) |Y x.\n                      Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a}}\n  {(x, {(x, Y) |Y x.\n        Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n       x) |\n   x. x \\<in> Domain\n               {(x, Y) |Y x.\n                Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a}}\n  \\<subseteq> a\n\ngoal (1 subgoal):\n 1. a =\n    {(x, {(x, Y) |Y x.\n          Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n         x) |\n     x. x \\<in> Domain\n                 {(x, Y) |Y x.\n                  Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a}}", "by blast"], ["proof (state)\nthis:\n  a =\n  {(x, {(x, Y) |Y x.\n        Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n       x) |\n   x. x \\<in> Domain\n               {(x, Y) |Y x.\n                Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a}}\n\ngoal (1 subgoal):\n 1. a =\n    {(x, pseudoAllocation a ,,, x) |x. x \\<in> Domain (pseudoAllocation a)}", "moreover"], ["proof (state)\nthis:\n  a =\n  {(x, {(x, Y) |Y x.\n        Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n       x) |\n   x. x \\<in> Domain\n               {(x, Y) |Y x.\n                Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a}}\n\ngoal (1 subgoal):\n 1. a =\n    {(x, pseudoAllocation a ,,, x) |x. x \\<in> Domain (pseudoAllocation a)}", "have \"?p = pseudoAllocation a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} =\n    pseudoAllocation a", "using lm048 assms"], ["proof (prove)\nusing this:\n  runiq ?a \\<Longrightarrow>\n  pseudoAllocation ?a =\n  {(x, Y) |Y x. Y \\<in> finestpart (?a ,, x) \\<and> x \\<in> Domain ?a}\n  runiq a\n  {} \\<notin> Range a\n\ngoal (1 subgoal):\n 1. {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} =\n    pseudoAllocation a", "by (metis (lifting, mono_tags))"], ["proof (state)\nthis:\n  {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} =\n  pseudoAllocation a\n\ngoal (1 subgoal):\n 1. a =\n    {(x, pseudoAllocation a ,,, x) |x. x \\<in> Domain (pseudoAllocation a)}", "ultimately"], ["proof (chain)\npicking this:\n  a =\n  {(x, {(x, Y) |Y x.\n        Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n       x) |\n   x. x \\<in> Domain\n               {(x, Y) |Y x.\n                Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a}}\n  {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} =\n  pseudoAllocation a", "show ?thesis"], ["proof (prove)\nusing this:\n  a =\n  {(x, {(x, Y) |Y x.\n        Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} ,,,\n       x) |\n   x. x \\<in> Domain\n               {(x, Y) |Y x.\n                Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a}}\n  {(x, Y) |Y x. Y \\<in> finestpart (a ,, x) \\<and> x \\<in> Domain a} =\n  pseudoAllocation a\n\ngoal (1 subgoal):\n 1. a =\n    {(x, pseudoAllocation a ,,, x) |x. x \\<in> Domain (pseudoAllocation a)}", "by auto"], ["proof (state)\nthis:\n  a =\n  {(x, pseudoAllocation a ,,, x) |x. x \\<in> Domain (pseudoAllocation a)}\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary lm075: \n  assumes \"a \\<in> runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}}))\" \n  shows \"(pseudoAllocationInv \\<circ> pseudoAllocation) a = id a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>pseudo.\n         {(x, pseudo ,,, x) |x. x \\<in> Domain pseudo}) \\<circ>\n     pseudoAllocation)\n     a =\n    id a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ((\\<lambda>pseudo.\n         {(x, pseudo ,,, x) |x. x \\<in> Domain pseudo}) \\<circ>\n     pseudoAllocation)\n     a =\n    id a", "have \"runiq a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. runiq a", "using runiqs_def assms"], ["proof (prove)\nusing this:\n  runiqs = {f. runiq f}\n  a \\<in> runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}}))\n\ngoal (1 subgoal):\n 1. runiq a", "by fast"], ["proof (state)\nthis:\n  runiq a\n\ngoal (1 subgoal):\n 1. ((\\<lambda>pseudo.\n         {(x, pseudo ,,, x) |x. x \\<in> Domain pseudo}) \\<circ>\n     pseudoAllocation)\n     a =\n    id a", "moreover"], ["proof (state)\nthis:\n  runiq a\n\ngoal (1 subgoal):\n 1. ((\\<lambda>pseudo.\n         {(x, pseudo ,,, x) |x. x \\<in> Domain pseudo}) \\<circ>\n     pseudoAllocation)\n     a =\n    id a", "have \"{} \\<notin> Range a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<notin> Range a", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}}))\n\ngoal (1 subgoal):\n 1. {} \\<notin> Range a", "by blast"], ["proof (state)\nthis:\n  {} \\<notin> Range a\n\ngoal (1 subgoal):\n 1. ((\\<lambda>pseudo.\n         {(x, pseudo ,,, x) |x. x \\<in> Domain pseudo}) \\<circ>\n     pseudoAllocation)\n     a =\n    id a", "ultimately"], ["proof (chain)\npicking this:\n  runiq a\n  {} \\<notin> Range a", "show ?thesis"], ["proof (prove)\nusing this:\n  runiq a\n  {} \\<notin> Range a\n\ngoal (1 subgoal):\n 1. ((\\<lambda>pseudo.\n         {(x, pseudo ,,, x) |x. x \\<in> Domain pseudo}) \\<circ>\n     pseudoAllocation)\n     a =\n    id a", "using lm074"], ["proof (prove)\nusing this:\n  runiq a\n  {} \\<notin> Range a\n  \\<lbrakk>runiq ?a; {} \\<notin> Range ?a\\<rbrakk>\n  \\<Longrightarrow> ?a =\n                    {(x, pseudoAllocation ?a ,,, x) |x.\n                     x \\<in> Domain (pseudoAllocation ?a)}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>pseudo.\n         {(x, pseudo ,,, x) |x. x \\<in> Domain pseudo}) \\<circ>\n     pseudoAllocation)\n     a =\n    id a", "by fastforce"], ["proof (state)\nthis:\n  ((\\<lambda>pseudo. {(x, pseudo ,,, x) |x. x \\<in> Domain pseudo}) \\<circ>\n   pseudoAllocation)\n   a =\n  id a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lm076: \n  \"inj_on (pseudoAllocationInv \\<circ> pseudoAllocation) (runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}})))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on\n     ((\\<lambda>pseudo.\n          {(x, pseudo ,,, x) |x. x \\<in> Domain pseudo}) \\<circ>\n      pseudoAllocation)\n     (runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}})))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. inj_on\n     ((\\<lambda>pseudo.\n          {(x, pseudo ,,, x) |x. x \\<in> Domain pseudo}) \\<circ>\n      pseudoAllocation)\n     (runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}})))", "let ?ne=\"Pow (UNIV \\<times> (UNIV - {{}}))\""], ["proof (state)\ngoal (1 subgoal):\n 1. inj_on\n     ((\\<lambda>pseudo.\n          {(x, pseudo ,,, x) |x. x \\<in> Domain pseudo}) \\<circ>\n      pseudoAllocation)\n     (runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}})))", "let ?X=\"runiqs \\<inter> ?ne\""], ["proof (state)\ngoal (1 subgoal):\n 1. inj_on\n     ((\\<lambda>pseudo.\n          {(x, pseudo ,,, x) |x. x \\<in> Domain pseudo}) \\<circ>\n      pseudoAllocation)\n     (runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}})))", "let ?f=\"pseudoAllocationInv \\<circ> pseudoAllocation\""], ["proof (state)\ngoal (1 subgoal):\n 1. inj_on\n     ((\\<lambda>pseudo.\n          {(x, pseudo ,,, x) |x. x \\<in> Domain pseudo}) \\<circ>\n      pseudoAllocation)\n     (runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}})))", "have \"\\<forall>a1 \\<in> ?X. \\<forall> a2 \\<in> ?X. ?f a1 = ?f a2 \\<longrightarrow> id a1 = id a2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a1\\<in>runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}})).\n       \\<forall>a2\\<in>runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}})).\n          ((\\<lambda>pseudo.\n               {(x, pseudo ,,, x) |x. x \\<in> Domain pseudo}) \\<circ>\n           pseudoAllocation)\n           a1 =\n          ((\\<lambda>pseudo.\n               {(x, pseudo ,,, x) |x. x \\<in> Domain pseudo}) \\<circ>\n           pseudoAllocation)\n           a2 \\<longrightarrow>\n          id a1 = id a2", "using lm075"], ["proof (prove)\nusing this:\n  ?a \\<in> runiqs \\<inter>\n           Pow (UNIV \\<times> (UNIV - {{}})) \\<Longrightarrow>\n  ((\\<lambda>pseudo. {(x, pseudo ,,, x) |x. x \\<in> Domain pseudo}) \\<circ>\n   pseudoAllocation)\n   ?a =\n  id ?a\n\ngoal (1 subgoal):\n 1. \\<forall>a1\\<in>runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}})).\n       \\<forall>a2\\<in>runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}})).\n          ((\\<lambda>pseudo.\n               {(x, pseudo ,,, x) |x. x \\<in> Domain pseudo}) \\<circ>\n           pseudoAllocation)\n           a1 =\n          ((\\<lambda>pseudo.\n               {(x, pseudo ,,, x) |x. x \\<in> Domain pseudo}) \\<circ>\n           pseudoAllocation)\n           a2 \\<longrightarrow>\n          id a1 = id a2", "by blast"], ["proof (state)\nthis:\n  \\<forall>a1\\<in>runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}})).\n     \\<forall>a2\\<in>runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}})).\n        ((\\<lambda>pseudo.\n             {(x, pseudo ,,, x) |x. x \\<in> Domain pseudo}) \\<circ>\n         pseudoAllocation)\n         a1 =\n        ((\\<lambda>pseudo.\n             {(x, pseudo ,,, x) |x. x \\<in> Domain pseudo}) \\<circ>\n         pseudoAllocation)\n         a2 \\<longrightarrow>\n        id a1 = id a2\n\ngoal (1 subgoal):\n 1. inj_on\n     ((\\<lambda>pseudo.\n          {(x, pseudo ,,, x) |x. x \\<in> Domain pseudo}) \\<circ>\n      pseudoAllocation)\n     (runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}})))", "then"], ["proof (chain)\npicking this:\n  \\<forall>a1\\<in>runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}})).\n     \\<forall>a2\\<in>runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}})).\n        ((\\<lambda>pseudo.\n             {(x, pseudo ,,, x) |x. x \\<in> Domain pseudo}) \\<circ>\n         pseudoAllocation)\n         a1 =\n        ((\\<lambda>pseudo.\n             {(x, pseudo ,,, x) |x. x \\<in> Domain pseudo}) \\<circ>\n         pseudoAllocation)\n         a2 \\<longrightarrow>\n        id a1 = id a2", "have \"\\<forall>a1 \\<in> ?X. \\<forall> a2 \\<in> ?X. ?f a1 = ?f a2 \\<longrightarrow> a1 = a2\""], ["proof (prove)\nusing this:\n  \\<forall>a1\\<in>runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}})).\n     \\<forall>a2\\<in>runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}})).\n        ((\\<lambda>pseudo.\n             {(x, pseudo ,,, x) |x. x \\<in> Domain pseudo}) \\<circ>\n         pseudoAllocation)\n         a1 =\n        ((\\<lambda>pseudo.\n             {(x, pseudo ,,, x) |x. x \\<in> Domain pseudo}) \\<circ>\n         pseudoAllocation)\n         a2 \\<longrightarrow>\n        id a1 = id a2\n\ngoal (1 subgoal):\n 1. \\<forall>a1\\<in>runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}})).\n       \\<forall>a2\\<in>runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}})).\n          ((\\<lambda>pseudo.\n               {(x, pseudo ,,, x) |x. x \\<in> Domain pseudo}) \\<circ>\n           pseudoAllocation)\n           a1 =\n          ((\\<lambda>pseudo.\n               {(x, pseudo ,,, x) |x. x \\<in> Domain pseudo}) \\<circ>\n           pseudoAllocation)\n           a2 \\<longrightarrow>\n          a1 = a2", "by auto"], ["proof (state)\nthis:\n  \\<forall>a1\\<in>runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}})).\n     \\<forall>a2\\<in>runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}})).\n        ((\\<lambda>pseudo.\n             {(x, pseudo ,,, x) |x. x \\<in> Domain pseudo}) \\<circ>\n         pseudoAllocation)\n         a1 =\n        ((\\<lambda>pseudo.\n             {(x, pseudo ,,, x) |x. x \\<in> Domain pseudo}) \\<circ>\n         pseudoAllocation)\n         a2 \\<longrightarrow>\n        a1 = a2\n\ngoal (1 subgoal):\n 1. inj_on\n     ((\\<lambda>pseudo.\n          {(x, pseudo ,,, x) |x. x \\<in> Domain pseudo}) \\<circ>\n      pseudoAllocation)\n     (runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}})))", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>a1\\<in>runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}})).\n     \\<forall>a2\\<in>runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}})).\n        ((\\<lambda>pseudo.\n             {(x, pseudo ,,, x) |x. x \\<in> Domain pseudo}) \\<circ>\n         pseudoAllocation)\n         a1 =\n        ((\\<lambda>pseudo.\n             {(x, pseudo ,,, x) |x. x \\<in> Domain pseudo}) \\<circ>\n         pseudoAllocation)\n         a2 \\<longrightarrow>\n        a1 = a2\n\ngoal (1 subgoal):\n 1. inj_on\n     ((\\<lambda>pseudo.\n          {(x, pseudo ,,, x) |x. x \\<in> Domain pseudo}) \\<circ>\n      pseudoAllocation)\n     (runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}})))", "unfolding inj_on_def"], ["proof (prove)\nusing this:\n  \\<forall>a1\\<in>runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}})).\n     \\<forall>a2\\<in>runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}})).\n        ((\\<lambda>pseudo.\n             {(x, pseudo ,,, x) |x. x \\<in> Domain pseudo}) \\<circ>\n         pseudoAllocation)\n         a1 =\n        ((\\<lambda>pseudo.\n             {(x, pseudo ,,, x) |x. x \\<in> Domain pseudo}) \\<circ>\n         pseudoAllocation)\n         a2 \\<longrightarrow>\n        a1 = a2\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}})).\n       \\<forall>y\\<in>runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}})).\n          ((\\<lambda>pseudo.\n               {(x, pseudo ,,, x) |x. x \\<in> Domain pseudo}) \\<circ>\n           pseudoAllocation)\n           x =\n          ((\\<lambda>pseudo.\n               {(x, pseudo ,,, x) |x. x \\<in> Domain pseudo}) \\<circ>\n           pseudoAllocation)\n           y \\<longrightarrow>\n          x = y", "by blast"], ["proof (state)\nthis:\n  inj_on\n   ((\\<lambda>pseudo. {(x, pseudo ,,, x) |x. x \\<in> Domain pseudo}) \\<circ>\n    pseudoAllocation)\n   (runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}})))\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary lm077: \n  \"inj_on pseudoAllocation (runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}})))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on pseudoAllocation\n     (runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}})))", "using lm076 inj_on_imageI2"], ["proof (prove)\nusing this:\n  inj_on\n   ((\\<lambda>pseudo. {(x, pseudo ,,, x) |x. x \\<in> Domain pseudo}) \\<circ>\n    pseudoAllocation)\n   (runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}})))\n  inj_on (?f' \\<circ> ?f) ?A \\<Longrightarrow> inj_on ?f ?A\n\ngoal (1 subgoal):\n 1. inj_on pseudoAllocation\n     (runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}})))", "by blast"], ["", "lemma lm078: \n  \"injectionsUniverse \\<subseteq> runiqs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. injectionsUniverse \\<subseteq> runiqs", "using runiqs_def Collect_conj_eq Int_lower1"], ["proof (prove)\nusing this:\n  runiqs = {f. runiq f}\n  {x. ?P x \\<and> ?Q x} = {x. ?P x} \\<inter> {x. ?Q x}\n  ?A \\<inter> ?B \\<subseteq> ?A\n\ngoal (1 subgoal):\n 1. injectionsUniverse \\<subseteq> runiqs", "by metis"], ["", "lemma lm079: \n  \"partitionValuedUniverse \\<subseteq> Pow (UNIV \\<times> (UNIV - {{}}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. partitionValuedUniverse \\<subseteq> Pow (UNIV \\<times> (UNIV - {{}}))", "using is_non_overlapping_def"], ["proof (prove)\nusing this:\n  is_non_overlapping ?P =\n  (\\<forall>X\\<in>?P.\n      \\<forall>Y\\<in>?P. (X \\<inter> Y \\<noteq> {}) = (X = Y))\n\ngoal (1 subgoal):\n 1. partitionValuedUniverse \\<subseteq> Pow (UNIV \\<times> (UNIV - {{}}))", "by force"], ["", "corollary lm080: \n  \"allocationsUniverse \\<subseteq> runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. allocationsUniverse\n    \\<subseteq> runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}}))", "using lm078 lm079"], ["proof (prove)\nusing this:\n  injectionsUniverse \\<subseteq> runiqs\n  partitionValuedUniverse \\<subseteq> Pow (UNIV \\<times> (UNIV - {{}}))\n\ngoal (1 subgoal):\n 1. allocationsUniverse\n    \\<subseteq> runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}}))", "by auto"], ["", "corollary lm081: \n  \"inj_on pseudoAllocation allocationsUniverse\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on pseudoAllocation allocationsUniverse", "using lm077 lm080 subset_inj_on"], ["proof (prove)\nusing this:\n  inj_on pseudoAllocation\n   (runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}})))\n  allocationsUniverse\n  \\<subseteq> runiqs \\<inter> Pow (UNIV \\<times> (UNIV - {{}}))\n  \\<lbrakk>inj_on ?f ?B; ?A \\<subseteq> ?B\\<rbrakk>\n  \\<Longrightarrow> inj_on ?f ?A\n\ngoal (1 subgoal):\n 1. inj_on pseudoAllocation allocationsUniverse", "by blast"], ["", "corollary lm082: \n  \"inj_on pseudoAllocation (allAllocations N G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on pseudoAllocation (allAllocations N G)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. inj_on pseudoAllocation (allAllocations N G)", "have \"allAllocations N G \\<subseteq> allocationsUniverse\""], ["proof (prove)\ngoal (1 subgoal):\n 1. allAllocations N G \\<subseteq> allocationsUniverse", "by (metis (no_types) allAllocationsUniverse)"], ["proof (state)\nthis:\n  allAllocations N G \\<subseteq> allocationsUniverse\n\ngoal (1 subgoal):\n 1. inj_on pseudoAllocation (allAllocations N G)", "thus \"inj_on pseudoAllocation (allAllocations N G)\""], ["proof (prove)\nusing this:\n  allAllocations N G \\<subseteq> allocationsUniverse\n\ngoal (1 subgoal):\n 1. inj_on pseudoAllocation (allAllocations N G)", "using lm081 subset_inj_on"], ["proof (prove)\nusing this:\n  allAllocations N G \\<subseteq> allocationsUniverse\n  inj_on pseudoAllocation allocationsUniverse\n  \\<lbrakk>inj_on ?f ?B; ?A \\<subseteq> ?B\\<rbrakk>\n  \\<Longrightarrow> inj_on ?f ?A\n\ngoal (1 subgoal):\n 1. inj_on pseudoAllocation (allAllocations N G)", "by blast"], ["proof (state)\nthis:\n  inj_on pseudoAllocation (allAllocations N G)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lm083: \n  assumes \"card N > 0\" \"distinct G\" \n  shows \"winningAllocationsRel N (set G) bids \\<subseteq> set (allAllocationsAlg N G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G) (\\<subseteq>) bids\n     (set (allAllocationsAlg N G))", "using assms winningAllocationPossible allAllocationsBridgingLemma"], ["proof (prove)\nusing this:\n  0 < card N\n  distinct G\n  winningAllocationRel ?N ?G (\\<subseteq>) ?b (allAllocations ?N ?G)\n  \\<lbrakk>0 < card ?N; distinct ?G\\<rbrakk>\n  \\<Longrightarrow> allAllocations ?N (set ?G) =\n                    set (allAllocationsAlg ?N ?G)\n\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G) (\\<subseteq>) bids\n     (set (allAllocationsAlg N G))", "by (metis(no_types))"], ["", "corollary lm084: \n  assumes \"N \\<noteq> {}\" \"finite N\" \"distinct G\" \"set G \\<noteq> {}\" \n  shows \"winningAllocationsRel N (set G) bids \\<inter> set (allAllocationsAlg N G) \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G) (\\<inter>) bids\n     (set (allAllocationsAlg N G)) \\<noteq>\n    {}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G) (\\<inter>) bids\n     (set (allAllocationsAlg N G)) \\<noteq>\n    {}", "let ?w = winningAllocationsRel"], ["proof (state)\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G) (\\<inter>) bids\n     (set (allAllocationsAlg N G)) \\<noteq>\n    {}", "let ?a = allAllocationsAlg"], ["proof (state)\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G) (\\<inter>) bids\n     (set (allAllocationsAlg N G)) \\<noteq>\n    {}", "let ?G = \"set G\""], ["proof (state)\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G) (\\<inter>) bids\n     (set (allAllocationsAlg N G)) \\<noteq>\n    {}", "have \"card N > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < card N", "using assms"], ["proof (prove)\nusing this:\n  N \\<noteq> {}\n  finite N\n  distinct G\n  set G \\<noteq> {}\n\ngoal (1 subgoal):\n 1. 0 < card N", "by (metis card_gt_0_iff)"], ["proof (state)\nthis:\n  0 < card N\n\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G) (\\<inter>) bids\n     (set (allAllocationsAlg N G)) \\<noteq>\n    {}", "then"], ["proof (chain)\npicking this:\n  0 < card N", "have \"?w N ?G bids \\<subseteq> set (?a N G)\""], ["proof (prove)\nusing this:\n  0 < card N\n\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G) (\\<subseteq>) bids\n     (set (allAllocationsAlg N G))", "using lm083"], ["proof (prove)\nusing this:\n  0 < card N\n  \\<lbrakk>0 < card ?N; distinct ?G\\<rbrakk>\n  \\<Longrightarrow> winningAllocationRel ?N (set ?G) (\\<subseteq>) ?bids\n                     (set (allAllocationsAlg ?N ?G))\n\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G) (\\<subseteq>) bids\n     (set (allAllocationsAlg N G))", "by (metis assms(3))"], ["proof (state)\nthis:\n  winningAllocationRel N (set G) (\\<subseteq>) bids\n   (set (allAllocationsAlg N G))\n\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G) (\\<inter>) bids\n     (set (allAllocationsAlg N G)) \\<noteq>\n    {}", "then"], ["proof (chain)\npicking this:\n  winningAllocationRel N (set G) (\\<subseteq>) bids\n   (set (allAllocationsAlg N G))", "show ?thesis"], ["proof (prove)\nusing this:\n  winningAllocationRel N (set G) (\\<subseteq>) bids\n   (set (allAllocationsAlg N G))\n\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G) (\\<inter>) bids\n     (set (allAllocationsAlg N G)) \\<noteq>\n    {}", "using assms lm011"], ["proof (prove)\nusing this:\n  winningAllocationRel N (set G) (\\<subseteq>) bids\n   (set (allAllocationsAlg N G))\n  N \\<noteq> {}\n  finite N\n  distinct G\n  set G \\<noteq> {}\n  \\<lbrakk>?N \\<noteq> {}; finite ?N; ?G \\<noteq> {}; finite ?G\\<rbrakk>\n  \\<Longrightarrow> winningAllocationRel ?N ?G (\\<noteq>) ?bids {} \\<and>\n                    winningAllocationRel ?N ?G finite ?bids\n\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G) (\\<inter>) bids\n     (set (allAllocationsAlg N G)) \\<noteq>\n    {}", "by (metis List.finite_set le_iff_inf)"], ["proof (state)\nthis:\n  winningAllocationRel N (set G) (\\<inter>) bids\n   (set (allAllocationsAlg N G)) \\<noteq>\n  {}\n\ngoal:\nNo subgoals!", "qed"], ["", "(* -` is the reverse image *)"], ["", "lemma lm085: \n  \"X = (%x. x \\<in> X) -`{True}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X = (\\<lambda>x. x \\<in> X) -` {True}", "by blast"], ["", "corollary lm086: \n  assumes  \"N \\<noteq> {}\" \"finite N\" \"distinct G\" \"set G \\<noteq> {}\" \n  shows \"(%x. x\\<in>winningAllocationsRel N (set G) bids)-`{True} \\<inter> \n         set (allAllocationsAlg N G) \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids) -`\n    {True} \\<inter>\n    set (allAllocationsAlg N G) \\<noteq>\n    {}", "using assms lm084 lm085"], ["proof (prove)\nusing this:\n  N \\<noteq> {}\n  finite N\n  distinct G\n  set G \\<noteq> {}\n  \\<lbrakk>?N \\<noteq> {}; finite ?N; distinct ?G;\n   set ?G \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> winningAllocationRel ?N (set ?G) (\\<inter>) ?bids\n                     (set (allAllocationsAlg ?N ?G)) \\<noteq>\n                    {}\n  ?X = (\\<lambda>x. x \\<in> ?X) -` {True}\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids) -`\n    {True} \\<inter>\n    set (allAllocationsAlg N G) \\<noteq>\n    {}", "by metis"], ["", "lemma lm087: \n  assumes \"P -` {True} \\<inter> set l \\<noteq> {}\" \n  shows \"takeAll P l \\<noteq> []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. takeAll P l \\<noteq> []", "using assms nonEmptyListFiltered filterpositions2_def"], ["proof (prove)\nusing this:\n  P -` {True} \\<inter> set l \\<noteq> {}\n  ?P -` {True} \\<inter> set ?l \\<noteq> {} \\<Longrightarrow>\n  concat\n   (map (\\<lambda>n. if ?P (?l ! n) then [n] else [])\n     [0..<length ?l]) \\<noteq>\n  []\n  filterpositions2 ?P ?l =\n  concat (map (\\<lambda>n. if ?P (?l ! n) then [n] else []) [0..<length ?l])\n\ngoal (1 subgoal):\n 1. takeAll P l \\<noteq> []", "by (metis Nil_is_map_conv)"], ["", "corollary lm088: \n  assumes \"N \\<noteq> {}\" \"finite N\" \"distinct G\" \"set G \\<noteq> {}\" \n  shows \"takeAll (%x. x \\<in> winningAllocationsRel N (set G) bids) (allAllocationsAlg N G) \\<noteq> []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n     (allAllocationsAlg N G) \\<noteq>\n    []", "using assms lm087 lm086"], ["proof (prove)\nusing this:\n  N \\<noteq> {}\n  finite N\n  distinct G\n  set G \\<noteq> {}\n  ?P -` {True} \\<inter> set ?l \\<noteq> {} \\<Longrightarrow>\n  takeAll ?P ?l \\<noteq> []\n  \\<lbrakk>?N \\<noteq> {}; finite ?N; distinct ?G;\n   set ?G \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>x.\n                        winningAllocationRel ?N (set ?G) ((\\<in>) x)\n                         ?bids) -`\n                    {True} \\<inter>\n                    set (allAllocationsAlg ?N ?G) \\<noteq>\n                    {}\n\ngoal (1 subgoal):\n 1. takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n     (allAllocationsAlg N G) \\<noteq>\n    []", "by metis"], ["", "corollary lm089: \n  assumes \"N \\<noteq> {}\" \"finite N\" \"distinct G\" \"set G \\<noteq> {}\" \n  shows \"perm2 (takeAll (%x. x \\<in> winningAllocationsRel N (set G) bids) \n                        (allAllocationsAlg N G)) \n               n \\<noteq> []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perm2\n     (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n       (allAllocationsAlg N G))\n     n \\<noteq>\n    []", "using assms permutationNotEmpty lm088"], ["proof (prove)\nusing this:\n  N \\<noteq> {}\n  finite N\n  distinct G\n  set G \\<noteq> {}\n  ?l \\<noteq> [] \\<Longrightarrow> perm2 ?l ?n \\<noteq> []\n  \\<lbrakk>?N \\<noteq> {}; finite ?N; distinct ?G;\n   set ?G \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> takeAll\n                     (\\<lambda>x.\n                         winningAllocationRel ?N (set ?G) ((\\<in>) x) ?bids)\n                     (allAllocationsAlg ?N ?G) \\<noteq>\n                    []\n\ngoal (1 subgoal):\n 1. perm2\n     (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n       (allAllocationsAlg N G))\n     n \\<noteq>\n    []", "by metis"], ["", "(* The chosen allocation is in the set of possible winning allocations *)"], ["", "corollary lm090: \n  assumes \"N \\<noteq> {}\" \"finite N\" \"distinct G\" \"set G \\<noteq> {}\" \n  shows \"chosenAllocation N G bids random \\<in> winningAllocationsRel N (set G) bids\""], ["proof (prove)\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G)\n     ((\\<in>)\n       (randomEl\n         (takeAll\n           (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n           (allAllocationsAlg N G))\n         random))\n     bids", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G)\n     ((\\<in>)\n       (randomEl\n         (takeAll\n           (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n           (allAllocationsAlg N G))\n         random))\n     bids", "have \"\\<And>x\\<^sub>1 b_x x. set x\\<^sub>1 = {} \n        \\<or> (randomEl x\\<^sub>1 b_x::('a \\<times> 'b set) set) \\<in> x \n        \\<or> \\<not> set x\\<^sub>1 \\<subseteq> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x\\<^sub>1 b_x x.\n       set x\\<^sub>1 = {} \\<or>\n       randomEl x\\<^sub>1 b_x \\<in> x \\<or>\n       \\<not> set x\\<^sub>1 \\<subseteq> x", "by (metis (no_types) randomElLemma subsetCE)"], ["proof (state)\nthis:\n  set ?x\\<^sub>1 = {} \\<or>\n  randomEl ?x\\<^sub>1 ?b_x \\<in> ?x \\<or>\n  \\<not> set ?x\\<^sub>1 \\<subseteq> ?x\n\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G)\n     ((\\<in>)\n       (randomEl\n         (takeAll\n           (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n           (allAllocationsAlg N G))\n         random))\n     bids", "thus \"winningAllocationRel N (set G) \n          ((\\<in>) (randomEl (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n                (allAllocationsAlg N G)) random)) bids\""], ["proof (prove)\nusing this:\n  set ?x\\<^sub>1 = {} \\<or>\n  randomEl ?x\\<^sub>1 ?b_x \\<in> ?x \\<or>\n  \\<not> set ?x\\<^sub>1 \\<subseteq> ?x\n\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G)\n     ((\\<in>)\n       (randomEl\n         (takeAll\n           (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n           (allAllocationsAlg N G))\n         random))\n     bids", "by (metis lm088 assms(1) assms(2) assms(3) assms(4) takeAllSubset set_empty)"], ["proof (state)\nthis:\n  winningAllocationRel N (set G)\n   ((\\<in>)\n     (randomEl\n       (takeAll\n         (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n         (allAllocationsAlg N G))\n       random))\n   bids\n\ngoal:\nNo subgoals!", "qed"], ["", "(* The following lemma proves a property of maxbid, which in the following will be proved to maximize the revenue. a and aa are allocations. *)"], ["", "lemma lm091: \n  assumes \"finite G\" \"a \\<in> allAllocations N G\" \"aa \\<in> allAllocations N G\"\n  shows \"real(sum(maxbid a N G)(pseudoAllocation a)) - \n            sum(maxbid a N G)(pseudoAllocation aa) = \n         real (card G) - \n            card (pseudoAllocation aa \\<inter> (pseudoAllocation a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation a)) -\n    real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation aa)) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation a)) -\n    real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation aa)) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "let ?p = pseudoAllocation"], ["proof (state)\ngoal (1 subgoal):\n 1. real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation a)) -\n    real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation aa)) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "let ?f = finestpart"], ["proof (state)\ngoal (1 subgoal):\n 1. real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation a)) -\n    real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation aa)) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "let ?m = maxbid"], ["proof (state)\ngoal (1 subgoal):\n 1. real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation a)) -\n    real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation aa)) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "let ?B = \"?m a N G\""], ["proof (state)\ngoal (1 subgoal):\n 1. real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation a)) -\n    real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation aa)) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "have \"?p aa \\<subseteq> N \\<times> ?f G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudoAllocation aa \\<subseteq> N \\<times> finestpart G", "using assms lm073"], ["proof (prove)\nusing this:\n  finite G\n  a \\<in> allAllocations N G\n  aa \\<in> allAllocations N G\n  ?a \\<in> allAllocations ?N ?G \\<Longrightarrow>\n  pseudoAllocation ?a \\<subseteq> ?N \\<times> finestpart ?G\n\ngoal (1 subgoal):\n 1. pseudoAllocation aa \\<subseteq> N \\<times> finestpart G", "by (metis (lifting, mono_tags))"], ["proof (state)\nthis:\n  pseudoAllocation aa \\<subseteq> N \\<times> finestpart G\n\ngoal (1 subgoal):\n 1. real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation a)) -\n    real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation aa)) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "then"], ["proof (chain)\npicking this:\n  pseudoAllocation aa \\<subseteq> N \\<times> finestpart G", "have \"?p aa \\<subseteq> ?p a \\<union> (N \\<times> ?f G)\""], ["proof (prove)\nusing this:\n  pseudoAllocation aa \\<subseteq> N \\<times> finestpart G\n\ngoal (1 subgoal):\n 1. pseudoAllocation aa\n    \\<subseteq> pseudoAllocation a \\<union> N \\<times> finestpart G", "by auto"], ["proof (state)\nthis:\n  pseudoAllocation aa\n  \\<subseteq> pseudoAllocation a \\<union> N \\<times> finestpart G\n\ngoal (1 subgoal):\n 1. real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation a)) -\n    real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation aa)) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "moreover"], ["proof (state)\nthis:\n  pseudoAllocation aa\n  \\<subseteq> pseudoAllocation a \\<union> N \\<times> finestpart G\n\ngoal (1 subgoal):\n 1. real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation a)) -\n    real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation aa)) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "have \"finite (?p aa)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (pseudoAllocation aa)", "using assms lm034 lm040"], ["proof (prove)\nusing this:\n  finite G\n  a \\<in> allAllocations N G\n  aa \\<in> allAllocations N G\n  \\<lbrakk>?a \\<in> allAllocations ?N ?G; finite ?G\\<rbrakk>\n  \\<Longrightarrow> card (pseudoAllocation ?a) = card ?G\n  \\<lbrakk>?a \\<in> allAllocations ?N ?G; finite ?G\\<rbrakk>\n  \\<Longrightarrow> finite (pseudoAllocation ?a)\n\ngoal (1 subgoal):\n 1. finite (pseudoAllocation aa)", "by blast"], ["proof (state)\nthis:\n  finite (pseudoAllocation aa)\n\ngoal (1 subgoal):\n 1. real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation a)) -\n    real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation aa)) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "ultimately"], ["proof (chain)\npicking this:\n  pseudoAllocation aa\n  \\<subseteq> pseudoAllocation a \\<union> N \\<times> finestpart G\n  finite (pseudoAllocation aa)", "have \"real(sum ?B (?p a)) - sum ?B (?p aa) = \n                   real(card (?p a))-card(?p aa \\<inter> (?p a))\""], ["proof (prove)\nusing this:\n  pseudoAllocation aa\n  \\<subseteq> pseudoAllocation a \\<union> N \\<times> finestpart G\n  finite (pseudoAllocation aa)\n\ngoal (1 subgoal):\n 1. real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation a)) -\n    real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation aa)) =\n    real (card (pseudoAllocation a)) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "using differenceSumVsCardinalityReal"], ["proof (prove)\nusing this:\n  pseudoAllocation aa\n  \\<subseteq> pseudoAllocation a \\<union> N \\<times> finestpart G\n  finite (pseudoAllocation aa)\n  \\<lbrakk>?Z \\<subseteq> ?X \\<union> ?Y; finite ?Z\\<rbrakk>\n  \\<Longrightarrow> real (sum (?X <| ?Y) ?X) - real (sum (?X <| ?Y) ?Z) =\n                    real (card ?X) - real (card (?Z \\<inter> ?X))\n\ngoal (1 subgoal):\n 1. real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation a)) -\n    real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation aa)) =\n    real (card (pseudoAllocation a)) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "by fast"], ["proof (state)\nthis:\n  real\n   (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation a)) -\n  real\n   (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation aa)) =\n  real (card (pseudoAllocation a)) -\n  real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))\n\ngoal (1 subgoal):\n 1. real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation a)) -\n    real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation aa)) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "moreover"], ["proof (state)\nthis:\n  real\n   (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation a)) -\n  real\n   (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation aa)) =\n  real (card (pseudoAllocation a)) -\n  real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))\n\ngoal (1 subgoal):\n 1. real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation a)) -\n    real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation aa)) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "have \"... = real (card G) - card (?p aa \\<inter> (?p a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (card (pseudoAllocation a)) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a)) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "using assms lm034"], ["proof (prove)\nusing this:\n  finite G\n  a \\<in> allAllocations N G\n  aa \\<in> allAllocations N G\n  \\<lbrakk>?a \\<in> allAllocations ?N ?G; finite ?G\\<rbrakk>\n  \\<Longrightarrow> card (pseudoAllocation ?a) = card ?G\n\ngoal (1 subgoal):\n 1. real (card (pseudoAllocation a)) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a)) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "by (metis (lifting, mono_tags))"], ["proof (state)\nthis:\n  real (card (pseudoAllocation a)) -\n  real (card (pseudoAllocation aa \\<inter> pseudoAllocation a)) =\n  real (card G) -\n  real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))\n\ngoal (1 subgoal):\n 1. real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation a)) -\n    real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation aa)) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "ultimately"], ["proof (chain)\npicking this:\n  real\n   (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation a)) -\n  real\n   (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation aa)) =\n  real (card (pseudoAllocation a)) -\n  real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))\n  real (card (pseudoAllocation a)) -\n  real (card (pseudoAllocation aa \\<inter> pseudoAllocation a)) =\n  real (card G) -\n  real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "show ?thesis"], ["proof (prove)\nusing this:\n  real\n   (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation a)) -\n  real\n   (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation aa)) =\n  real (card (pseudoAllocation a)) -\n  real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))\n  real (card (pseudoAllocation a)) -\n  real (card (pseudoAllocation aa \\<inter> pseudoAllocation a)) =\n  real (card G) -\n  real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))\n\ngoal (1 subgoal):\n 1. real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation a)) -\n    real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation aa)) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "by simp"], ["proof (state)\nthis:\n  real\n   (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation a)) -\n  real\n   (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation aa)) =\n  real (card G) -\n  real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lm092: \n  \"summedBidVectorRel bids N G = graph (N \\<times> (Pow G-{{}})) (summedBidSecond bids)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summedBidVectorRel bids N G =\n    graph (N \\<times> (Pow G - {{}})) (summedBidSecond bids)", "unfolding graph_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. summedBidVectorRel bids N G =\n    {summedBid bids x |x. x \\<in> N \\<times> (Pow G - {{}})}", "using lm016"], ["proof (prove)\nusing this:\n  summedBidVectorRel ?bids ?N ?G =\n  {summedBid ?bids pair |pair. pair \\<in> ?N \\<times> (Pow ?G - {{}})}\n\ngoal (1 subgoal):\n 1. summedBidVectorRel bids N G =\n    {summedBid bids x |x. x \\<in> N \\<times> (Pow G - {{}})}", "by blast"], ["", "lemma lm093: \n  assumes \"x\\<in>X\" \n  shows \"toFunction (graph X f) x = f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. toFunction (graph X f) x = f x", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. toFunction (graph X f) x = f x", "by (metis graphEqImage toFunction_def)"], ["", "corollary lm094: \n  assumes \"pair \\<in> N \\<times> (Pow G-{{}})\" \n  shows \"summedBidVector bids N G pair = summedBidSecond bids pair\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summedBidVector bids N G pair = summedBidSecond bids pair", "using assms lm093 lm092"], ["proof (prove)\nusing this:\n  pair \\<in> N \\<times> (Pow G - {{}})\n  ?x \\<in> ?X \\<Longrightarrow> toFunction (graph ?X ?f) ?x = ?f ?x\n  summedBidVectorRel ?bids ?N ?G =\n  graph (?N \\<times> (Pow ?G - {{}})) (summedBidSecond ?bids)\n\ngoal (1 subgoal):\n 1. summedBidVector bids N G pair = summedBidSecond bids pair", "by (metis(mono_tags))"], ["", "(* type conversion to real commutes *)"], ["", "lemma lm095: \n  \"summedBidSecond (real \\<circ> ((bids:: _ => nat))) pair = real (summedBidSecond bids pair)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summedBidSecond (real \\<circ> bids) pair =\n    real (summedBidSecond bids pair)", "by simp"], ["", "lemma lm096: \n  assumes \"pair \\<in> N \\<times> (Pow G-{{}})\" \n  shows  \"summedBidVector (real\\<circ>(bids:: _ => nat)) N G pair = \n          real (summedBidVector bids N G pair)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summedBidVector (real \\<circ> bids) N G pair =\n    real (summedBidVector bids N G pair)", "using assms lm094 lm095"], ["proof (prove)\nusing this:\n  pair \\<in> N \\<times> (Pow G - {{}})\n  ?pair \\<in> ?N \\<times> (Pow ?G - {{}}) \\<Longrightarrow>\n  summedBidVector ?bids ?N ?G ?pair = summedBidSecond ?bids ?pair\n  summedBidSecond (real \\<circ> ?bids) ?pair =\n  real (summedBidSecond ?bids ?pair)\n\ngoal (1 subgoal):\n 1. summedBidVector (real \\<circ> bids) N G pair =\n    real (summedBidVector bids N G pair)", "by (metis(no_types))"], ["", "(* TPTP?*)"], ["", "corollary lm097: \n  assumes \"X \\<subseteq> N \\<times> (Pow G - {{}})\" \n  shows \"\\<forall>pair \\<in> X. summedBidVector (real \\<circ> (bids::_=>nat)) N G pair =\n         (real \\<circ> (summedBidVector bids N G)) pair\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>pair\\<in>X.\n       summedBidVector (real \\<circ> bids) N G pair =\n       (real \\<circ> summedBidVector bids N G) pair", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>pair\\<in>X.\n       summedBidVector (real \\<circ> bids) N G pair =\n       (real \\<circ> summedBidVector bids N G) pair", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>pair\\<in>X.\n       summedBidVector (real \\<circ> bids) N G pair =\n       (real \\<circ> summedBidVector bids N G) pair", "fix esk48\\<^sub>0 :: \"'a \\<times> 'b set\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>pair\\<in>X.\n       summedBidVector (real \\<circ> bids) N G pair =\n       (real \\<circ> summedBidVector bids N G) pair", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>pair\\<in>X.\n       summedBidVector (real \\<circ> bids) N G pair =\n       (real \\<circ> summedBidVector bids N G) pair", "assume \"esk48\\<^sub>0 \\<in> N \\<times> (Pow G - {{}})\""], ["proof (state)\nthis:\n  esk48\\<^sub>0 \\<in> N \\<times> (Pow G - {{}})\n\ngoal (1 subgoal):\n 1. \\<forall>pair\\<in>X.\n       summedBidVector (real \\<circ> bids) N G pair =\n       (real \\<circ> summedBidVector bids N G) pair", "hence \"summedBidVector (real \\<circ> bids) N G esk48\\<^sub>0 = real (summedBidVector bids N G esk48\\<^sub>0)\""], ["proof (prove)\nusing this:\n  esk48\\<^sub>0 \\<in> N \\<times> (Pow G - {{}})\n\ngoal (1 subgoal):\n 1. summedBidVector (real \\<circ> bids) N G esk48\\<^sub>0 =\n    real (summedBidVector bids N G esk48\\<^sub>0)", "using lm096"], ["proof (prove)\nusing this:\n  esk48\\<^sub>0 \\<in> N \\<times> (Pow G - {{}})\n  ?pair \\<in> ?N \\<times> (Pow ?G - {{}}) \\<Longrightarrow>\n  summedBidVector (real \\<circ> ?bids) ?N ?G ?pair =\n  real (summedBidVector ?bids ?N ?G ?pair)\n\ngoal (1 subgoal):\n 1. summedBidVector (real \\<circ> bids) N G esk48\\<^sub>0 =\n    real (summedBidVector bids N G esk48\\<^sub>0)", "by blast"], ["proof (state)\nthis:\n  summedBidVector (real \\<circ> bids) N G esk48\\<^sub>0 =\n  real (summedBidVector bids N G esk48\\<^sub>0)\n\ngoal (1 subgoal):\n 1. \\<forall>pair\\<in>X.\n       summedBidVector (real \\<circ> bids) N G pair =\n       (real \\<circ> summedBidVector bids N G) pair", "hence \"esk48\\<^sub>0 \\<notin> X \\<or> summedBidVector (real \\<circ> bids) N G esk48\\<^sub>0 = (real \\<circ> summedBidVector bids N G) esk48\\<^sub>0\""], ["proof (prove)\nusing this:\n  summedBidVector (real \\<circ> bids) N G esk48\\<^sub>0 =\n  real (summedBidVector bids N G esk48\\<^sub>0)\n\ngoal (1 subgoal):\n 1. esk48\\<^sub>0 \\<notin> X \\<or>\n    summedBidVector (real \\<circ> bids) N G esk48\\<^sub>0 =\n    (real \\<circ> summedBidVector bids N G) esk48\\<^sub>0", "by simp"], ["proof (state)\nthis:\n  esk48\\<^sub>0 \\<notin> X \\<or>\n  summedBidVector (real \\<circ> bids) N G esk48\\<^sub>0 =\n  (real \\<circ> summedBidVector bids N G) esk48\\<^sub>0\n\ngoal (1 subgoal):\n 1. \\<forall>pair\\<in>X.\n       summedBidVector (real \\<circ> bids) N G pair =\n       (real \\<circ> summedBidVector bids N G) pair", "}"], ["proof (state)\nthis:\n  esk48\\<^sub>0 \\<in> N \\<times> (Pow G - {{}}) \\<Longrightarrow>\n  esk48\\<^sub>0 \\<notin> X \\<or>\n  summedBidVector (real \\<circ> bids) N G esk48\\<^sub>0 =\n  (real \\<circ> summedBidVector bids N G) esk48\\<^sub>0\n\ngoal (1 subgoal):\n 1. \\<forall>pair\\<in>X.\n       summedBidVector (real \\<circ> bids) N G pair =\n       (real \\<circ> summedBidVector bids N G) pair", "hence \"esk48\\<^sub>0 \\<notin> X \\<or> summedBidVector (real \\<circ> bids) N G esk48\\<^sub>0 = (real \\<circ> summedBidVector bids N G) esk48\\<^sub>0\""], ["proof (prove)\nusing this:\n  esk48\\<^sub>0 \\<in> N \\<times> (Pow G - {{}}) \\<Longrightarrow>\n  esk48\\<^sub>0 \\<notin> X \\<or>\n  summedBidVector (real \\<circ> bids) N G esk48\\<^sub>0 =\n  (real \\<circ> summedBidVector bids N G) esk48\\<^sub>0\n\ngoal (1 subgoal):\n 1. esk48\\<^sub>0 \\<notin> X \\<or>\n    summedBidVector (real \\<circ> bids) N G esk48\\<^sub>0 =\n    (real \\<circ> summedBidVector bids N G) esk48\\<^sub>0", "using assms"], ["proof (prove)\nusing this:\n  esk48\\<^sub>0 \\<in> N \\<times> (Pow G - {{}}) \\<Longrightarrow>\n  esk48\\<^sub>0 \\<notin> X \\<or>\n  summedBidVector (real \\<circ> bids) N G esk48\\<^sub>0 =\n  (real \\<circ> summedBidVector bids N G) esk48\\<^sub>0\n  X \\<subseteq> N \\<times> (Pow G - {{}})\n\ngoal (1 subgoal):\n 1. esk48\\<^sub>0 \\<notin> X \\<or>\n    summedBidVector (real \\<circ> bids) N G esk48\\<^sub>0 =\n    (real \\<circ> summedBidVector bids N G) esk48\\<^sub>0", "by blast"], ["proof (state)\nthis:\n  esk48\\<^sub>0 \\<notin> X \\<or>\n  summedBidVector (real \\<circ> bids) N G esk48\\<^sub>0 =\n  (real \\<circ> summedBidVector bids N G) esk48\\<^sub>0\n\ngoal (1 subgoal):\n 1. \\<forall>pair\\<in>X.\n       summedBidVector (real \\<circ> bids) N G pair =\n       (real \\<circ> summedBidVector bids N G) pair", "}"], ["proof (state)\nthis:\n  ?esk48\\<^sub>02 \\<notin> X \\<or>\n  summedBidVector (real \\<circ> bids) N G ?esk48\\<^sub>02 =\n  (real \\<circ> summedBidVector bids N G) ?esk48\\<^sub>02\n\ngoal (1 subgoal):\n 1. \\<forall>pair\\<in>X.\n       summedBidVector (real \\<circ> bids) N G pair =\n       (real \\<circ> summedBidVector bids N G) pair", "thus \"\\<forall>pair\\<in>X. summedBidVector (real \\<circ> bids) N G pair = (real \\<circ> summedBidVector bids N G) pair\""], ["proof (prove)\nusing this:\n  ?esk48\\<^sub>02 \\<notin> X \\<or>\n  summedBidVector (real \\<circ> bids) N G ?esk48\\<^sub>02 =\n  (real \\<circ> summedBidVector bids N G) ?esk48\\<^sub>02\n\ngoal (1 subgoal):\n 1. \\<forall>pair\\<in>X.\n       summedBidVector (real \\<circ> bids) N G pair =\n       (real \\<circ> summedBidVector bids N G) pair", "by blast"], ["proof (state)\nthis:\n  \\<forall>pair\\<in>X.\n     summedBidVector (real \\<circ> bids) N G pair =\n     (real \\<circ> summedBidVector bids N G) pair\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary lm098: \n  assumes \"aa \\<subseteq> N \\<times> (Pow G-{{}})\" \n  shows \"sum ((summedBidVector (real \\<circ> (bids::_=>nat)) N G)) aa = \n         real (sum ((summedBidVector bids N G)) aa)\" \n  (is \"?L=?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (summedBidVector (real \\<circ> bids) N G) aa =\n    real (sum (summedBidVector bids N G) aa)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum (summedBidVector (real \\<circ> bids) N G) aa =\n    real (sum (summedBidVector bids N G) aa)", "have \"\\<forall> pair \\<in> aa. summedBidVector (real \\<circ> bids) N G pair = \n                     (real \\<circ> (summedBidVector bids N G)) pair\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>pair\\<in>aa.\n       summedBidVector (real \\<circ> bids) N G pair =\n       (real \\<circ> summedBidVector bids N G) pair", "using assms"], ["proof (prove)\nusing this:\n  aa \\<subseteq> N \\<times> (Pow G - {{}})\n\ngoal (1 subgoal):\n 1. \\<forall>pair\\<in>aa.\n       summedBidVector (real \\<circ> bids) N G pair =\n       (real \\<circ> summedBidVector bids N G) pair", "by (rule lm097)"], ["proof (state)\nthis:\n  \\<forall>pair\\<in>aa.\n     summedBidVector (real \\<circ> bids) N G pair =\n     (real \\<circ> summedBidVector bids N G) pair\n\ngoal (1 subgoal):\n 1. sum (summedBidVector (real \\<circ> bids) N G) aa =\n    real (sum (summedBidVector bids N G) aa)", "then"], ["proof (chain)\npicking this:\n  \\<forall>pair\\<in>aa.\n     summedBidVector (real \\<circ> bids) N G pair =\n     (real \\<circ> summedBidVector bids N G) pair", "have \"?L = sum (real\\<circ>(summedBidVector bids N G)) aa\""], ["proof (prove)\nusing this:\n  \\<forall>pair\\<in>aa.\n     summedBidVector (real \\<circ> bids) N G pair =\n     (real \\<circ> summedBidVector bids N G) pair\n\ngoal (1 subgoal):\n 1. sum (summedBidVector (real \\<circ> bids) N G) aa =\n    sum (real \\<circ> summedBidVector bids N G) aa", "using sum.cong"], ["proof (prove)\nusing this:\n  \\<forall>pair\\<in>aa.\n     summedBidVector (real \\<circ> bids) N G pair =\n     (real \\<circ> summedBidVector bids N G) pair\n  \\<lbrakk>?A = ?B;\n   \\<And>x. x \\<in> ?B \\<Longrightarrow> ?g x = ?h x\\<rbrakk>\n  \\<Longrightarrow> sum ?g ?A = sum ?h ?B\n\ngoal (1 subgoal):\n 1. sum (summedBidVector (real \\<circ> bids) N G) aa =\n    sum (real \\<circ> summedBidVector bids N G) aa", "by force"], ["proof (state)\nthis:\n  sum (summedBidVector (real \\<circ> bids) N G) aa =\n  sum (real \\<circ> summedBidVector bids N G) aa\n\ngoal (1 subgoal):\n 1. sum (summedBidVector (real \\<circ> bids) N G) aa =\n    real (sum (summedBidVector bids N G) aa)", "then"], ["proof (chain)\npicking this:\n  sum (summedBidVector (real \\<circ> bids) N G) aa =\n  sum (real \\<circ> summedBidVector bids N G) aa", "show ?thesis"], ["proof (prove)\nusing this:\n  sum (summedBidVector (real \\<circ> bids) N G) aa =\n  sum (real \\<circ> summedBidVector bids N G) aa\n\ngoal (1 subgoal):\n 1. sum (summedBidVector (real \\<circ> bids) N G) aa =\n    real (sum (summedBidVector bids N G) aa)", "by simp"], ["proof (state)\nthis:\n  sum (summedBidVector (real \\<circ> bids) N G) aa =\n  real (sum (summedBidVector bids N G) aa)\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary lm099: \n  assumes \"aa \\<in> allAllocations N G\" \n  shows \"sum ((summedBidVector (real \\<circ> (bids::_=>nat)) N G)) aa = \n         real (sum ((summedBidVector bids N G)) aa)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (summedBidVector (real \\<circ> bids) N G) aa =\n    real (sum (summedBidVector bids N G) aa)", "using assms lm098 allocationPowerset"], ["proof (prove)\nusing this:\n  aa \\<in> allAllocations N G\n  ?aa \\<subseteq> ?N \\<times> (Pow ?G - {{}}) \\<Longrightarrow>\n  sum (summedBidVector (real \\<circ> ?bids) ?N ?G) ?aa =\n  real (sum (summedBidVector ?bids ?N ?G) ?aa)\n  ?a \\<in> allAllocations ?N ?G \\<Longrightarrow>\n  ?a \\<subseteq> ?N \\<times> (Pow ?G - {{}})\n\ngoal (1 subgoal):\n 1. sum (summedBidVector (real \\<circ> bids) N G) aa =\n    real (sum (summedBidVector bids N G) aa)", "by (metis(lifting,mono_tags))"], ["", "corollary lm100: \n  assumes \"finite G\" \"a \\<in> allAllocations N G\" \"aa \\<in> allAllocations N G\"\n  shows \"real (sum (tiebids a N G) a) - sum (tiebids a N G) aa = \n         real (card G) - card (pseudoAllocation aa \\<inter> (pseudoAllocation a))\" \n  (is \"?L=?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       a) -\n    real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       aa) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       a) -\n    real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       aa) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "let ?l=summedBidVector"], ["proof (state)\ngoal (1 subgoal):\n 1. real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       a) -\n    real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       aa) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "let ?m=maxbid"], ["proof (state)\ngoal (1 subgoal):\n 1. real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       a) -\n    real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       aa) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "let ?s=sum"], ["proof (state)\ngoal (1 subgoal):\n 1. real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       a) -\n    real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       aa) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "let ?p=pseudoAllocation"], ["proof (state)\ngoal (1 subgoal):\n 1. real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       a) -\n    real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       aa) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "let ?bb=\"?m a N G\""], ["proof (state)\ngoal (1 subgoal):\n 1. real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       a) -\n    real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       aa) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "let ?b=\"real \\<circ> (?m a N G)\""], ["proof (state)\ngoal (1 subgoal):\n 1. real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       a) -\n    real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       aa) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "have \"real (?s ?bb (?p a)) - (?s ?bb (?p aa)) = ?R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation a)) -\n    real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation aa)) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "using assms lm091"], ["proof (prove)\nusing this:\n  finite G\n  a \\<in> allAllocations N G\n  aa \\<in> allAllocations N G\n  \\<lbrakk>finite ?G; ?a \\<in> allAllocations ?N ?G;\n   ?aa \\<in> allAllocations ?N ?G\\<rbrakk>\n  \\<Longrightarrow> real\n                     (sum (pseudoAllocation ?a <|\n                           (?N \\<times> finestpart ?G))\n                       (pseudoAllocation ?a)) -\n                    real\n                     (sum (pseudoAllocation ?a <|\n                           (?N \\<times> finestpart ?G))\n                       (pseudoAllocation ?aa)) =\n                    real (card ?G) -\n                    real\n                     (card\n                       (pseudoAllocation ?aa \\<inter> pseudoAllocation ?a))\n\ngoal (1 subgoal):\n 1. real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation a)) -\n    real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation aa)) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "by blast"], ["proof (state)\nthis:\n  real\n   (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation a)) -\n  real\n   (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation aa)) =\n  real (card G) -\n  real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))\n\ngoal (1 subgoal):\n 1. real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       a) -\n    real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       aa) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "then"], ["proof (chain)\npicking this:\n  real\n   (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation a)) -\n  real\n   (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation aa)) =\n  real (card G) -\n  real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "have \n  1: \"?R = real (?s ?bb (?p a)) - (?s ?bb (?p aa))\""], ["proof (prove)\nusing this:\n  real\n   (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation a)) -\n  real\n   (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation aa)) =\n  real (card G) -\n  real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))\n\ngoal (1 subgoal):\n 1. real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a)) =\n    real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation a)) -\n    real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation aa))", "by simp"], ["proof (state)\nthis:\n  real (card G) -\n  real (card (pseudoAllocation aa \\<inter> pseudoAllocation a)) =\n  real\n   (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation a)) -\n  real\n   (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation aa))\n\ngoal (1 subgoal):\n 1. real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       a) -\n    real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       aa) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "have \" ?s (?l ?b N G) aa = ?s ?b (?p aa)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     aa =\n    sum (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation aa)", "using assms lm070"], ["proof (prove)\nusing this:\n  finite G\n  a \\<in> allAllocations N G\n  aa \\<in> allAllocations N G\n  \\<lbrakk>?a \\<in> allAllocations ?N ?G; finite ?G\\<rbrakk>\n  \\<Longrightarrow> sum (summedBidVector ?bids ?N ?G) ?a =\n                    sum ?bids (pseudoAllocation ?a)\n\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     aa =\n    sum (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation aa)", "by blast"], ["proof (state)\nthis:\n  sum (summedBidVector\n        (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G)) N G)\n   aa =\n  sum (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G))\n   (pseudoAllocation aa)\n\ngoal (1 subgoal):\n 1. real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       a) -\n    real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       aa) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "moreover"], ["proof (state)\nthis:\n  sum (summedBidVector\n        (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G)) N G)\n   aa =\n  sum (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G))\n   (pseudoAllocation aa)\n\ngoal (1 subgoal):\n 1. real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       a) -\n    real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       aa) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "have \n  \"... = ?s ?bb (?p aa)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation aa) =\n    real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation aa))", "by fastforce"], ["proof (state)\nthis:\n  sum (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G))\n   (pseudoAllocation aa) =\n  real\n   (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation aa))\n\ngoal (1 subgoal):\n 1. real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       a) -\n    real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       aa) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "moreover"], ["proof (state)\nthis:\n  sum (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G))\n   (pseudoAllocation aa) =\n  real\n   (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation aa))\n\ngoal (1 subgoal):\n 1. real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       a) -\n    real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       aa) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "have \"(?s (?l ?b N G) aa) = real (?s (?l ?bb N G) aa)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     aa =\n    real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       aa)", "using assms(3)"], ["proof (prove)\nusing this:\n  aa \\<in> allAllocations N G\n\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     aa =\n    real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       aa)", "by (rule lm099)"], ["proof (state)\nthis:\n  sum (summedBidVector\n        (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G)) N G)\n   aa =\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     aa)\n\ngoal (1 subgoal):\n 1. real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       a) -\n    real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       aa) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "ultimately"], ["proof (chain)\npicking this:\n  sum (summedBidVector\n        (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G)) N G)\n   aa =\n  sum (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G))\n   (pseudoAllocation aa)\n  sum (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G))\n   (pseudoAllocation aa) =\n  real\n   (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation aa))\n  sum (summedBidVector\n        (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G)) N G)\n   aa =\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     aa)", "have \n  2: \"?R = real (?s ?bb (?p a)) - (?s (?l ?bb N G) aa)\""], ["proof (prove)\nusing this:\n  sum (summedBidVector\n        (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G)) N G)\n   aa =\n  sum (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G))\n   (pseudoAllocation aa)\n  sum (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G))\n   (pseudoAllocation aa) =\n  real\n   (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation aa))\n  sum (summedBidVector\n        (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G)) N G)\n   aa =\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     aa)\n\ngoal (1 subgoal):\n 1. real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a)) =\n    real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation a)) -\n    real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       aa)", "by (metis 1)"], ["proof (state)\nthis:\n  real (card G) -\n  real (card (pseudoAllocation aa \\<inter> pseudoAllocation a)) =\n  real\n   (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation a)) -\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     aa)\n\ngoal (1 subgoal):\n 1. real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       a) -\n    real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       aa) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "have \"?s (?l ?b N G) a=(?s ?b (?p a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     a =\n    sum (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation a)", "using assms lm070"], ["proof (prove)\nusing this:\n  finite G\n  a \\<in> allAllocations N G\n  aa \\<in> allAllocations N G\n  \\<lbrakk>?a \\<in> allAllocations ?N ?G; finite ?G\\<rbrakk>\n  \\<Longrightarrow> sum (summedBidVector ?bids ?N ?G) ?a =\n                    sum ?bids (pseudoAllocation ?a)\n\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     a =\n    sum (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation a)", "by blast"], ["proof (state)\nthis:\n  sum (summedBidVector\n        (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G)) N G)\n   a =\n  sum (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G))\n   (pseudoAllocation a)\n\ngoal (1 subgoal):\n 1. real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       a) -\n    real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       aa) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "moreover"], ["proof (state)\nthis:\n  sum (summedBidVector\n        (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G)) N G)\n   a =\n  sum (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G))\n   (pseudoAllocation a)\n\ngoal (1 subgoal):\n 1. real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       a) -\n    real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       aa) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "have \"... = ?s ?bb (?p a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation a) =\n    real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation a))", "by force"], ["proof (state)\nthis:\n  sum (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G))\n   (pseudoAllocation a) =\n  real\n   (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation a))\n\ngoal (1 subgoal):\n 1. real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       a) -\n    real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       aa) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "moreover"], ["proof (state)\nthis:\n  sum (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G))\n   (pseudoAllocation a) =\n  real\n   (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation a))\n\ngoal (1 subgoal):\n 1. real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       a) -\n    real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       aa) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "have \"... = real (?s ?bb (?p a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation a)) =\n    real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation a))", "by fast"], ["proof (state)\nthis:\n  real\n   (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation a)) =\n  real\n   (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation a))\n\ngoal (1 subgoal):\n 1. real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       a) -\n    real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       aa) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "moreover"], ["proof (state)\nthis:\n  real\n   (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation a)) =\n  real\n   (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation a))\n\ngoal (1 subgoal):\n 1. real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       a) -\n    real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       aa) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "have \"?s (?l ?b N G) a = real (?s (?l ?bb N G) a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     a =\n    real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       a)", "using assms(2)"], ["proof (prove)\nusing this:\n  a \\<in> allAllocations N G\n\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     a =\n    real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       a)", "by (rule lm099)"], ["proof (state)\nthis:\n  sum (summedBidVector\n        (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G)) N G)\n   a =\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     a)\n\ngoal (1 subgoal):\n 1. real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       a) -\n    real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       aa) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "ultimately"], ["proof (chain)\npicking this:\n  sum (summedBidVector\n        (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G)) N G)\n   a =\n  sum (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G))\n   (pseudoAllocation a)\n  sum (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G))\n   (pseudoAllocation a) =\n  real\n   (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation a))\n  real\n   (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation a)) =\n  real\n   (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation a))\n  sum (summedBidVector\n        (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G)) N G)\n   a =\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     a)", "have \"?s (?l ?bb N G) a = real (?s ?bb (?p a))\""], ["proof (prove)\nusing this:\n  sum (summedBidVector\n        (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G)) N G)\n   a =\n  sum (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G))\n   (pseudoAllocation a)\n  sum (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G))\n   (pseudoAllocation a) =\n  real\n   (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation a))\n  real\n   (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation a)) =\n  real\n   (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation a))\n  sum (summedBidVector\n        (real \\<circ> pseudoAllocation a <| (N \\<times> finestpart G)) N G)\n   a =\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     a)\n\ngoal (1 subgoal):\n 1. real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       a) =\n    real\n     (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n       (pseudoAllocation a))", "by simp"], ["proof (state)\nthis:\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     a) =\n  real\n   (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation a))\n\ngoal (1 subgoal):\n 1. real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       a) -\n    real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       aa) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "thus ?thesis"], ["proof (prove)\nusing this:\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     a) =\n  real\n   (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation a))\n\ngoal (1 subgoal):\n 1. real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       a) -\n    real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       aa) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "using 2"], ["proof (prove)\nusing this:\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     a) =\n  real\n   (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation a))\n  real (card G) -\n  real (card (pseudoAllocation aa \\<inter> pseudoAllocation a)) =\n  real\n   (sum (pseudoAllocation a <| (N \\<times> finestpart G))\n     (pseudoAllocation a)) -\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     aa)\n\ngoal (1 subgoal):\n 1. real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       a) -\n    real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       aa) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "by simp"], ["proof (state)\nthis:\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     a) -\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     aa) =\n  real (card G) -\n  real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary lm101: \n  assumes \"finite G\" \"a \\<in> allAllocations N G\" \"aa \\<in> allAllocations N G\"\n          \"x = real (sum (tiebids a N G) a) - sum (tiebids a N G) aa\" \n  shows \"x <= card G & \n         x \\<ge> 0 & \n        (x=0 \\<longleftrightarrow> a = aa) & \n        (aa \\<noteq> a \\<longrightarrow> sum (tiebids a N G) aa < sum (tiebids a N G) a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> real (card G) \\<and>\n    0 \\<le> x \\<and>\n    (x = 0) = (a = aa) \\<and>\n    (aa \\<noteq> a \\<longrightarrow>\n     sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n           N G)\n      aa\n     < sum (summedBidVector\n             (pseudoAllocation a <| (N \\<times> finestpart G)) N G)\n        a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<le> real (card G) \\<and>\n    0 \\<le> x \\<and>\n    (x = 0) = (a = aa) \\<and>\n    (aa \\<noteq> a \\<longrightarrow>\n     sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n           N G)\n      aa\n     < sum (summedBidVector\n             (pseudoAllocation a <| (N \\<times> finestpart G)) N G)\n        a)", "let ?p = pseudoAllocation"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<le> real (card G) \\<and>\n    0 \\<le> x \\<and>\n    (x = 0) = (a = aa) \\<and>\n    (aa \\<noteq> a \\<longrightarrow>\n     sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n           N G)\n      aa\n     < sum (summedBidVector\n             (pseudoAllocation a <| (N \\<times> finestpart G)) N G)\n        a)", "have \"real (card G) >= real (card G) - card (?p aa \\<inter> (?p a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))\n    \\<le> real (card G)", "by force"], ["proof (state)\nthis:\n  real (card G) -\n  real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))\n  \\<le> real (card G)\n\ngoal (1 subgoal):\n 1. x \\<le> real (card G) \\<and>\n    0 \\<le> x \\<and>\n    (x = 0) = (a = aa) \\<and>\n    (aa \\<noteq> a \\<longrightarrow>\n     sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n           N G)\n      aa\n     < sum (summedBidVector\n             (pseudoAllocation a <| (N \\<times> finestpart G)) N G)\n        a)", "moreover"], ["proof (state)\nthis:\n  real (card G) -\n  real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))\n  \\<le> real (card G)\n\ngoal (1 subgoal):\n 1. x \\<le> real (card G) \\<and>\n    0 \\<le> x \\<and>\n    (x = 0) = (a = aa) \\<and>\n    (aa \\<noteq> a \\<longrightarrow>\n     sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n           N G)\n      aa\n     < sum (summedBidVector\n             (pseudoAllocation a <| (N \\<times> finestpart G)) N G)\n        a)", "have \"real (sum (tiebids a N G) a) - sum (tiebids a N G) aa = \n                 real (card G) - card (pseudoAllocation aa \\<inter> (pseudoAllocation a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       a) -\n    real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       aa) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "using assms lm100"], ["proof (prove)\nusing this:\n  finite G\n  a \\<in> allAllocations N G\n  aa \\<in> allAllocations N G\n  x =\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     a) -\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     aa)\n  \\<lbrakk>finite ?G; ?a \\<in> allAllocations ?N ?G;\n   ?aa \\<in> allAllocations ?N ?G\\<rbrakk>\n  \\<Longrightarrow> real\n                     (sum (summedBidVector\n                            (pseudoAllocation ?a <|\n                             (?N \\<times> finestpart ?G))\n                            ?N ?G)\n                       ?a) -\n                    real\n                     (sum (summedBidVector\n                            (pseudoAllocation ?a <|\n                             (?N \\<times> finestpart ?G))\n                            ?N ?G)\n                       ?aa) =\n                    real (card ?G) -\n                    real\n                     (card\n                       (pseudoAllocation ?aa \\<inter> pseudoAllocation ?a))\n\ngoal (1 subgoal):\n 1. real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       a) -\n    real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       aa) =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "by blast"], ["proof (state)\nthis:\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     a) -\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     aa) =\n  real (card G) -\n  real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))\n\ngoal (1 subgoal):\n 1. x \\<le> real (card G) \\<and>\n    0 \\<le> x \\<and>\n    (x = 0) = (a = aa) \\<and>\n    (aa \\<noteq> a \\<longrightarrow>\n     sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n           N G)\n      aa\n     < sum (summedBidVector\n             (pseudoAllocation a <| (N \\<times> finestpart G)) N G)\n        a)", "ultimately"], ["proof (chain)\npicking this:\n  real (card G) -\n  real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))\n  \\<le> real (card G)\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     a) -\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     aa) =\n  real (card G) -\n  real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "have\n  1: \"x=real(card G)-card(pseudoAllocation aa\\<inter>(pseudoAllocation a))\""], ["proof (prove)\nusing this:\n  real (card G) -\n  real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))\n  \\<le> real (card G)\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     a) -\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     aa) =\n  real (card G) -\n  real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))\n\ngoal (1 subgoal):\n 1. x =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "using assms"], ["proof (prove)\nusing this:\n  real (card G) -\n  real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))\n  \\<le> real (card G)\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     a) -\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     aa) =\n  real (card G) -\n  real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))\n  finite G\n  a \\<in> allAllocations N G\n  aa \\<in> allAllocations N G\n  x =\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     a) -\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     aa)\n\ngoal (1 subgoal):\n 1. x =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "by force"], ["proof (state)\nthis:\n  x =\n  real (card G) -\n  real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))\n\ngoal (1 subgoal):\n 1. x \\<le> real (card G) \\<and>\n    0 \\<le> x \\<and>\n    (x = 0) = (a = aa) \\<and>\n    (aa \\<noteq> a \\<longrightarrow>\n     sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n           N G)\n      aa\n     < sum (summedBidVector\n             (pseudoAllocation a <| (N \\<times> finestpart G)) N G)\n        a)", "then"], ["proof (chain)\npicking this:\n  x =\n  real (card G) -\n  real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "have\n  2: \"x \\<le> real (card G)\""], ["proof (prove)\nusing this:\n  x =\n  real (card G) -\n  real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))\n\ngoal (1 subgoal):\n 1. x \\<le> real (card G)", "using assms"], ["proof (prove)\nusing this:\n  x =\n  real (card G) -\n  real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))\n  finite G\n  a \\<in> allAllocations N G\n  aa \\<in> allAllocations N G\n  x =\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     a) -\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     aa)\n\ngoal (1 subgoal):\n 1. x \\<le> real (card G)", "by linarith"], ["proof (state)\nthis:\n  x \\<le> real (card G)\n\ngoal (1 subgoal):\n 1. x \\<le> real (card G) \\<and>\n    0 \\<le> x \\<and>\n    (x = 0) = (a = aa) \\<and>\n    (aa \\<noteq> a \\<longrightarrow>\n     sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n           N G)\n      aa\n     < sum (summedBidVector\n             (pseudoAllocation a <| (N \\<times> finestpart G)) N G)\n        a)", "have \n  3: \"card (?p aa) = card G & card (?p a) = card G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (pseudoAllocation aa) = card G \\<and>\n    card (pseudoAllocation a) = card G", "using assms lm034"], ["proof (prove)\nusing this:\n  finite G\n  a \\<in> allAllocations N G\n  aa \\<in> allAllocations N G\n  x =\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     a) -\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     aa)\n  \\<lbrakk>?a \\<in> allAllocations ?N ?G; finite ?G\\<rbrakk>\n  \\<Longrightarrow> card (pseudoAllocation ?a) = card ?G\n\ngoal (1 subgoal):\n 1. card (pseudoAllocation aa) = card G \\<and>\n    card (pseudoAllocation a) = card G", "by blast"], ["proof (state)\nthis:\n  card (pseudoAllocation aa) = card G \\<and>\n  card (pseudoAllocation a) = card G\n\ngoal (1 subgoal):\n 1. x \\<le> real (card G) \\<and>\n    0 \\<le> x \\<and>\n    (x = 0) = (a = aa) \\<and>\n    (aa \\<noteq> a \\<longrightarrow>\n     sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n           N G)\n      aa\n     < sum (summedBidVector\n             (pseudoAllocation a <| (N \\<times> finestpart G)) N G)\n        a)", "moreover"], ["proof (state)\nthis:\n  card (pseudoAllocation aa) = card G \\<and>\n  card (pseudoAllocation a) = card G\n\ngoal (1 subgoal):\n 1. x \\<le> real (card G) \\<and>\n    0 \\<le> x \\<and>\n    (x = 0) = (a = aa) \\<and>\n    (aa \\<noteq> a \\<longrightarrow>\n     sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n           N G)\n      aa\n     < sum (summedBidVector\n             (pseudoAllocation a <| (N \\<times> finestpart G)) N G)\n        a)", "have \"finite (?p aa) & finite (?p a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (pseudoAllocation aa) \\<and> finite (pseudoAllocation a)", "using assms lm040"], ["proof (prove)\nusing this:\n  finite G\n  a \\<in> allAllocations N G\n  aa \\<in> allAllocations N G\n  x =\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     a) -\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     aa)\n  \\<lbrakk>?a \\<in> allAllocations ?N ?G; finite ?G\\<rbrakk>\n  \\<Longrightarrow> finite (pseudoAllocation ?a)\n\ngoal (1 subgoal):\n 1. finite (pseudoAllocation aa) \\<and> finite (pseudoAllocation a)", "by blast"], ["proof (state)\nthis:\n  finite (pseudoAllocation aa) \\<and> finite (pseudoAllocation a)\n\ngoal (1 subgoal):\n 1. x \\<le> real (card G) \\<and>\n    0 \\<le> x \\<and>\n    (x = 0) = (a = aa) \\<and>\n    (aa \\<noteq> a \\<longrightarrow>\n     sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n           N G)\n      aa\n     < sum (summedBidVector\n             (pseudoAllocation a <| (N \\<times> finestpart G)) N G)\n        a)", "ultimately"], ["proof (chain)\npicking this:\n  card (pseudoAllocation aa) = card G \\<and>\n  card (pseudoAllocation a) = card G\n  finite (pseudoAllocation aa) \\<and> finite (pseudoAllocation a)", "have \"card (?p aa \\<inter> ?p a) \\<le> card G\""], ["proof (prove)\nusing this:\n  card (pseudoAllocation aa) = card G \\<and>\n  card (pseudoAllocation a) = card G\n  finite (pseudoAllocation aa) \\<and> finite (pseudoAllocation a)\n\ngoal (1 subgoal):\n 1. card (pseudoAllocation aa \\<inter> pseudoAllocation a) \\<le> card G", "using Int_lower2 card_mono"], ["proof (prove)\nusing this:\n  card (pseudoAllocation aa) = card G \\<and>\n  card (pseudoAllocation a) = card G\n  finite (pseudoAllocation aa) \\<and> finite (pseudoAllocation a)\n  ?A \\<inter> ?B \\<subseteq> ?B\n  \\<lbrakk>finite ?B; ?A \\<subseteq> ?B\\<rbrakk>\n  \\<Longrightarrow> card ?A \\<le> card ?B\n\ngoal (1 subgoal):\n 1. card (pseudoAllocation aa \\<inter> pseudoAllocation a) \\<le> card G", "by fastforce"], ["proof (state)\nthis:\n  card (pseudoAllocation aa \\<inter> pseudoAllocation a) \\<le> card G\n\ngoal (1 subgoal):\n 1. x \\<le> real (card G) \\<and>\n    0 \\<le> x \\<and>\n    (x = 0) = (a = aa) \\<and>\n    (aa \\<noteq> a \\<longrightarrow>\n     sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n           N G)\n      aa\n     < sum (summedBidVector\n             (pseudoAllocation a <| (N \\<times> finestpart G)) N G)\n        a)", "then"], ["proof (chain)\npicking this:\n  card (pseudoAllocation aa \\<inter> pseudoAllocation a) \\<le> card G", "have \n  4: \"x \\<ge> 0\""], ["proof (prove)\nusing this:\n  card (pseudoAllocation aa \\<inter> pseudoAllocation a) \\<le> card G\n\ngoal (1 subgoal):\n 1. 0 \\<le> x", "using assms lm100 1"], ["proof (prove)\nusing this:\n  card (pseudoAllocation aa \\<inter> pseudoAllocation a) \\<le> card G\n  finite G\n  a \\<in> allAllocations N G\n  aa \\<in> allAllocations N G\n  x =\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     a) -\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     aa)\n  \\<lbrakk>finite ?G; ?a \\<in> allAllocations ?N ?G;\n   ?aa \\<in> allAllocations ?N ?G\\<rbrakk>\n  \\<Longrightarrow> real\n                     (sum (summedBidVector\n                            (pseudoAllocation ?a <|\n                             (?N \\<times> finestpart ?G))\n                            ?N ?G)\n                       ?a) -\n                    real\n                     (sum (summedBidVector\n                            (pseudoAllocation ?a <|\n                             (?N \\<times> finestpart ?G))\n                            ?N ?G)\n                       ?aa) =\n                    real (card ?G) -\n                    real\n                     (card\n                       (pseudoAllocation ?aa \\<inter> pseudoAllocation ?a))\n  x =\n  real (card G) -\n  real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))\n\ngoal (1 subgoal):\n 1. 0 \\<le> x", "by linarith"], ["proof (state)\nthis:\n  0 \\<le> x\n\ngoal (1 subgoal):\n 1. x \\<le> real (card G) \\<and>\n    0 \\<le> x \\<and>\n    (x = 0) = (a = aa) \\<and>\n    (aa \\<noteq> a \\<longrightarrow>\n     sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n           N G)\n      aa\n     < sum (summedBidVector\n             (pseudoAllocation a <| (N \\<times> finestpart G)) N G)\n        a)", "have \"card (?p aa \\<inter> (?p a)) = card G \\<longleftrightarrow> (?p aa = ?p a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (card (pseudoAllocation aa \\<inter> pseudoAllocation a) = card G) =\n    (pseudoAllocation aa = pseudoAllocation a)", "using 3 lm041 4 assms"], ["proof (prove)\nusing this:\n  card (pseudoAllocation aa) = card G \\<and>\n  card (pseudoAllocation a) = card G\n  \\<lbrakk>?a \\<in> allAllocations ?N ?G; ?aa \\<in> allAllocations ?N ?G;\n   finite ?G\\<rbrakk>\n  \\<Longrightarrow> (card\n                      (pseudoAllocation ?aa \\<inter> pseudoAllocation ?a) =\n                     card (pseudoAllocation ?a)) =\n                    (pseudoAllocation ?a = pseudoAllocation ?aa)\n  0 \\<le> x\n  finite G\n  a \\<in> allAllocations N G\n  aa \\<in> allAllocations N G\n  x =\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     a) -\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     aa)\n\ngoal (1 subgoal):\n 1. (card (pseudoAllocation aa \\<inter> pseudoAllocation a) = card G) =\n    (pseudoAllocation aa = pseudoAllocation a)", "by (metis (lifting, mono_tags))"], ["proof (state)\nthis:\n  (card (pseudoAllocation aa \\<inter> pseudoAllocation a) = card G) =\n  (pseudoAllocation aa = pseudoAllocation a)\n\ngoal (1 subgoal):\n 1. x \\<le> real (card G) \\<and>\n    0 \\<le> x \\<and>\n    (x = 0) = (a = aa) \\<and>\n    (aa \\<noteq> a \\<longrightarrow>\n     sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n           N G)\n      aa\n     < sum (summedBidVector\n             (pseudoAllocation a <| (N \\<times> finestpart G)) N G)\n        a)", "moreover"], ["proof (state)\nthis:\n  (card (pseudoAllocation aa \\<inter> pseudoAllocation a) = card G) =\n  (pseudoAllocation aa = pseudoAllocation a)\n\ngoal (1 subgoal):\n 1. x \\<le> real (card G) \\<and>\n    0 \\<le> x \\<and>\n    (x = 0) = (a = aa) \\<and>\n    (aa \\<noteq> a \\<longrightarrow>\n     sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n           N G)\n      aa\n     < sum (summedBidVector\n             (pseudoAllocation a <| (N \\<times> finestpart G)) N G)\n        a)", "have \"?p aa = ?p a \\<longrightarrow> a = aa\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pseudoAllocation aa = pseudoAllocation a \\<longrightarrow> a = aa", "using assms lm082 inj_on_def"], ["proof (prove)\nusing this:\n  finite G\n  a \\<in> allAllocations N G\n  aa \\<in> allAllocations N G\n  x =\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     a) -\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     aa)\n  inj_on pseudoAllocation (allAllocations ?N ?G)\n  inj_on ?f ?A =\n  (\\<forall>x\\<in>?A.\n      \\<forall>y\\<in>?A. ?f x = ?f y \\<longrightarrow> x = y)\n\ngoal (1 subgoal):\n 1. pseudoAllocation aa = pseudoAllocation a \\<longrightarrow> a = aa", "by (metis (lifting, mono_tags))"], ["proof (state)\nthis:\n  pseudoAllocation aa = pseudoAllocation a \\<longrightarrow> a = aa\n\ngoal (1 subgoal):\n 1. x \\<le> real (card G) \\<and>\n    0 \\<le> x \\<and>\n    (x = 0) = (a = aa) \\<and>\n    (aa \\<noteq> a \\<longrightarrow>\n     sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n           N G)\n      aa\n     < sum (summedBidVector\n             (pseudoAllocation a <| (N \\<times> finestpart G)) N G)\n        a)", "ultimately"], ["proof (chain)\npicking this:\n  (card (pseudoAllocation aa \\<inter> pseudoAllocation a) = card G) =\n  (pseudoAllocation aa = pseudoAllocation a)\n  pseudoAllocation aa = pseudoAllocation a \\<longrightarrow> a = aa", "have \"card (?p aa \\<inter> (?p a)) = card G \\<longleftrightarrow> (a=aa)\""], ["proof (prove)\nusing this:\n  (card (pseudoAllocation aa \\<inter> pseudoAllocation a) = card G) =\n  (pseudoAllocation aa = pseudoAllocation a)\n  pseudoAllocation aa = pseudoAllocation a \\<longrightarrow> a = aa\n\ngoal (1 subgoal):\n 1. (card (pseudoAllocation aa \\<inter> pseudoAllocation a) = card G) =\n    (a = aa)", "by blast"], ["proof (state)\nthis:\n  (card (pseudoAllocation aa \\<inter> pseudoAllocation a) = card G) =\n  (a = aa)\n\ngoal (1 subgoal):\n 1. x \\<le> real (card G) \\<and>\n    0 \\<le> x \\<and>\n    (x = 0) = (a = aa) \\<and>\n    (aa \\<noteq> a \\<longrightarrow>\n     sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n           N G)\n      aa\n     < sum (summedBidVector\n             (pseudoAllocation a <| (N \\<times> finestpart G)) N G)\n        a)", "moreover"], ["proof (state)\nthis:\n  (card (pseudoAllocation aa \\<inter> pseudoAllocation a) = card G) =\n  (a = aa)\n\ngoal (1 subgoal):\n 1. x \\<le> real (card G) \\<and>\n    0 \\<le> x \\<and>\n    (x = 0) = (a = aa) \\<and>\n    (aa \\<noteq> a \\<longrightarrow>\n     sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n           N G)\n      aa\n     < sum (summedBidVector\n             (pseudoAllocation a <| (N \\<times> finestpart G)) N G)\n        a)", "have \"x = real (card G) - card (?p aa \\<inter> (?p a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "using assms lm100"], ["proof (prove)\nusing this:\n  finite G\n  a \\<in> allAllocations N G\n  aa \\<in> allAllocations N G\n  x =\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     a) -\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     aa)\n  \\<lbrakk>finite ?G; ?a \\<in> allAllocations ?N ?G;\n   ?aa \\<in> allAllocations ?N ?G\\<rbrakk>\n  \\<Longrightarrow> real\n                     (sum (summedBidVector\n                            (pseudoAllocation ?a <|\n                             (?N \\<times> finestpart ?G))\n                            ?N ?G)\n                       ?a) -\n                    real\n                     (sum (summedBidVector\n                            (pseudoAllocation ?a <|\n                             (?N \\<times> finestpart ?G))\n                            ?N ?G)\n                       ?aa) =\n                    real (card ?G) -\n                    real\n                     (card\n                       (pseudoAllocation ?aa \\<inter> pseudoAllocation ?a))\n\ngoal (1 subgoal):\n 1. x =\n    real (card G) -\n    real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "by blast"], ["proof (state)\nthis:\n  x =\n  real (card G) -\n  real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))\n\ngoal (1 subgoal):\n 1. x \\<le> real (card G) \\<and>\n    0 \\<le> x \\<and>\n    (x = 0) = (a = aa) \\<and>\n    (aa \\<noteq> a \\<longrightarrow>\n     sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n           N G)\n      aa\n     < sum (summedBidVector\n             (pseudoAllocation a <| (N \\<times> finestpart G)) N G)\n        a)", "ultimately"], ["proof (chain)\npicking this:\n  (card (pseudoAllocation aa \\<inter> pseudoAllocation a) = card G) =\n  (a = aa)\n  x =\n  real (card G) -\n  real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))", "have \n  5: \"x = 0 \\<longleftrightarrow> (a=aa)\""], ["proof (prove)\nusing this:\n  (card (pseudoAllocation aa \\<inter> pseudoAllocation a) = card G) =\n  (a = aa)\n  x =\n  real (card G) -\n  real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))\n\ngoal (1 subgoal):\n 1. (x = 0) = (a = aa)", "by linarith"], ["proof (state)\nthis:\n  (x = 0) = (a = aa)\n\ngoal (1 subgoal):\n 1. x \\<le> real (card G) \\<and>\n    0 \\<le> x \\<and>\n    (x = 0) = (a = aa) \\<and>\n    (aa \\<noteq> a \\<longrightarrow>\n     sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n           N G)\n      aa\n     < sum (summedBidVector\n             (pseudoAllocation a <| (N \\<times> finestpart G)) N G)\n        a)", "then"], ["proof (chain)\npicking this:\n  (x = 0) = (a = aa)", "have \n  \"aa \\<noteq> a \\<longrightarrow> sum (tiebids a N G) aa < real (sum (tiebids a N G) a)\""], ["proof (prove)\nusing this:\n  (x = 0) = (a = aa)\n\ngoal (1 subgoal):\n 1. aa \\<noteq> a \\<longrightarrow>\n    real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       aa)\n    < real\n       (sum (summedBidVector\n              (pseudoAllocation a <| (N \\<times> finestpart G)) N G)\n         a)", "using 1 4 assms"], ["proof (prove)\nusing this:\n  (x = 0) = (a = aa)\n  x =\n  real (card G) -\n  real (card (pseudoAllocation aa \\<inter> pseudoAllocation a))\n  0 \\<le> x\n  finite G\n  a \\<in> allAllocations N G\n  aa \\<in> allAllocations N G\n  x =\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     a) -\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     aa)\n\ngoal (1 subgoal):\n 1. aa \\<noteq> a \\<longrightarrow>\n    real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       aa)\n    < real\n       (sum (summedBidVector\n              (pseudoAllocation a <| (N \\<times> finestpart G)) N G)\n         a)", "by auto"], ["proof (state)\nthis:\n  aa \\<noteq> a \\<longrightarrow>\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     aa)\n  < real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       a)\n\ngoal (1 subgoal):\n 1. x \\<le> real (card G) \\<and>\n    0 \\<le> x \\<and>\n    (x = 0) = (a = aa) \\<and>\n    (aa \\<noteq> a \\<longrightarrow>\n     sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n           N G)\n      aa\n     < sum (summedBidVector\n             (pseudoAllocation a <| (N \\<times> finestpart G)) N G)\n        a)", "thus ?thesis"], ["proof (prove)\nusing this:\n  aa \\<noteq> a \\<longrightarrow>\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     aa)\n  < real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       a)\n\ngoal (1 subgoal):\n 1. x \\<le> real (card G) \\<and>\n    0 \\<le> x \\<and>\n    (x = 0) = (a = aa) \\<and>\n    (aa \\<noteq> a \\<longrightarrow>\n     sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n           N G)\n      aa\n     < sum (summedBidVector\n             (pseudoAllocation a <| (N \\<times> finestpart G)) N G)\n        a)", "using 2 4 5"], ["proof (prove)\nusing this:\n  aa \\<noteq> a \\<longrightarrow>\n  real\n   (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     aa)\n  < real\n     (sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       a)\n  x \\<le> real (card G)\n  0 \\<le> x\n  (x = 0) = (a = aa)\n\ngoal (1 subgoal):\n 1. x \\<le> real (card G) \\<and>\n    0 \\<le> x \\<and>\n    (x = 0) = (a = aa) \\<and>\n    (aa \\<noteq> a \\<longrightarrow>\n     sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n           N G)\n      aa\n     < sum (summedBidVector\n             (pseudoAllocation a <| (N \\<times> finestpart G)) N G)\n        a)", "unfolding of_nat_less_iff"], ["proof (prove)\nusing this:\n  aa \\<noteq> a \\<longrightarrow>\n  sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n        G)\n   aa\n  < sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     a\n  x \\<le> real (card G)\n  0 \\<le> x\n  (x = 0) = (a = aa)\n\ngoal (1 subgoal):\n 1. x \\<le> real (card G) \\<and>\n    0 \\<le> x \\<and>\n    (x = 0) = (a = aa) \\<and>\n    (aa \\<noteq> a \\<longrightarrow>\n     sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n           N G)\n      aa\n     < sum (summedBidVector\n             (pseudoAllocation a <| (N \\<times> finestpart G)) N G)\n        a)", "by force"], ["proof (state)\nthis:\n  x \\<le> real (card G) \\<and>\n  0 \\<le> x \\<and>\n  (x = 0) = (a = aa) \\<and>\n  (aa \\<noteq> a \\<longrightarrow>\n   sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n         G)\n    aa\n   < sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n           N G)\n      a)\n\ngoal:\nNo subgoals!", "qed"], ["", "(* If for an arbitrary allocation a we compute tiebids for it then the corresponding revenue is strictly maximal. *)"], ["", "corollary lm102: \n  assumes \"finite G\" \"a \\<in> allAllocations N G\" \n          \"aa \\<in> allAllocations N G\" \"aa \\<noteq> a\" \n  shows \"sum (tiebids a N G) aa < sum (tiebids a N G) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     aa\n    < sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       a", "using assms lm101"], ["proof (prove)\nusing this:\n  finite G\n  a \\<in> allAllocations N G\n  aa \\<in> allAllocations N G\n  aa \\<noteq> a\n  \\<lbrakk>finite ?G; ?a \\<in> allAllocations ?N ?G;\n   ?aa \\<in> allAllocations ?N ?G;\n   ?x =\n   real\n    (sum (summedBidVector\n           (pseudoAllocation ?a <| (?N \\<times> finestpart ?G)) ?N ?G)\n      ?a) -\n   real\n    (sum (summedBidVector\n           (pseudoAllocation ?a <| (?N \\<times> finestpart ?G)) ?N ?G)\n      ?aa)\\<rbrakk>\n  \\<Longrightarrow> ?x \\<le> real (card ?G) \\<and>\n                    0 \\<le> ?x \\<and>\n                    (?x = 0) = (?a = ?aa) \\<and>\n                    (?aa \\<noteq> ?a \\<longrightarrow>\n                     sum (summedBidVector\n                           (pseudoAllocation ?a <|\n                            (?N \\<times> finestpart ?G))\n                           ?N ?G)\n                      ?aa\n                     < sum (summedBidVector\n                             (pseudoAllocation ?a <|\n                              (?N \\<times> finestpart ?G))\n                             ?N ?G)\n                        ?a)\n\ngoal (1 subgoal):\n 1. sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G)) N\n          G)\n     aa\n    < sum (summedBidVector (pseudoAllocation a <| (N \\<times> finestpart G))\n            N G)\n       a", "by blast"], ["", "lemma lm103: \n  assumes \"N \\<noteq> {}\" \"finite N\" \"distinct G\" \"set G \\<noteq> {}\"\n          \"aa \\<in> (allAllocations N (set G))-{chosenAllocation N G bids random}\" \n  shows \"sum (resolvingBid N G bids random) aa < \n         sum (resolvingBid N G bids random) (chosenAllocation N G bids random)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel N (set G) ((\\<in>) x) bids)\n                (allAllocationsAlg N G))\n              random) <|\n           (N \\<times> finestpart (set G)))\n          N (set G))\n     aa\n    < sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel N (set G) ((\\<in>) x) bids)\n                  (allAllocationsAlg N G))\n                random) <|\n             (N \\<times> finestpart (set G)))\n            N (set G))\n       (randomEl\n         (takeAll\n           (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n           (allAllocationsAlg N G))\n         random)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel N (set G) ((\\<in>) x) bids)\n                (allAllocationsAlg N G))\n              random) <|\n           (N \\<times> finestpart (set G)))\n          N (set G))\n     aa\n    < sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel N (set G) ((\\<in>) x) bids)\n                  (allAllocationsAlg N G))\n                random) <|\n             (N \\<times> finestpart (set G)))\n            N (set G))\n       (randomEl\n         (takeAll\n           (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n           (allAllocationsAlg N G))\n         random)", "let ?a=\"chosenAllocation N G bids random\""], ["proof (state)\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel N (set G) ((\\<in>) x) bids)\n                (allAllocationsAlg N G))\n              random) <|\n           (N \\<times> finestpart (set G)))\n          N (set G))\n     aa\n    < sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel N (set G) ((\\<in>) x) bids)\n                  (allAllocationsAlg N G))\n                random) <|\n             (N \\<times> finestpart (set G)))\n            N (set G))\n       (randomEl\n         (takeAll\n           (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n           (allAllocationsAlg N G))\n         random)", "let ?p=allAllocations"], ["proof (state)\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel N (set G) ((\\<in>) x) bids)\n                (allAllocationsAlg N G))\n              random) <|\n           (N \\<times> finestpart (set G)))\n          N (set G))\n     aa\n    < sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel N (set G) ((\\<in>) x) bids)\n                  (allAllocationsAlg N G))\n                random) <|\n             (N \\<times> finestpart (set G)))\n            N (set G))\n       (randomEl\n         (takeAll\n           (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n           (allAllocationsAlg N G))\n         random)", "let ?G=\"set G\""], ["proof (state)\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel N (set G) ((\\<in>) x) bids)\n                (allAllocationsAlg N G))\n              random) <|\n           (N \\<times> finestpart (set G)))\n          N (set G))\n     aa\n    < sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel N (set G) ((\\<in>) x) bids)\n                  (allAllocationsAlg N G))\n                random) <|\n             (N \\<times> finestpart (set G)))\n            N (set G))\n       (randomEl\n         (takeAll\n           (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n           (allAllocationsAlg N G))\n         random)", "have \"?a \\<in> winningAllocationsRel N (set G) bids\""], ["proof (prove)\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G)\n     ((\\<in>)\n       (randomEl\n         (takeAll\n           (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n           (allAllocationsAlg N G))\n         random))\n     bids", "using assms lm090"], ["proof (prove)\nusing this:\n  N \\<noteq> {}\n  finite N\n  distinct G\n  set G \\<noteq> {}\n  aa \\<in> allAllocations N (set G) -\n           {randomEl\n             (takeAll\n               (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n               (allAllocationsAlg N G))\n             random}\n  \\<lbrakk>?N \\<noteq> {}; finite ?N; distinct ?G;\n   set ?G \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> winningAllocationRel ?N (set ?G)\n                     ((\\<in>)\n                       (randomEl\n                         (takeAll\n                           (\\<lambda>x.\n                               winningAllocationRel ?N (set ?G) ((\\<in>) x)\n                                ?bids)\n                           (allAllocationsAlg ?N ?G))\n                         ?random))\n                     ?bids\n\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G)\n     ((\\<in>)\n       (randomEl\n         (takeAll\n           (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n           (allAllocationsAlg N G))\n         random))\n     bids", "by blast"], ["proof (state)\nthis:\n  winningAllocationRel N (set G)\n   ((\\<in>)\n     (randomEl\n       (takeAll\n         (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n         (allAllocationsAlg N G))\n       random))\n   bids\n\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel N (set G) ((\\<in>) x) bids)\n                (allAllocationsAlg N G))\n              random) <|\n           (N \\<times> finestpart (set G)))\n          N (set G))\n     aa\n    < sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel N (set G) ((\\<in>) x) bids)\n                  (allAllocationsAlg N G))\n                random) <|\n             (N \\<times> finestpart (set G)))\n            N (set G))\n       (randomEl\n         (takeAll\n           (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n           (allAllocationsAlg N G))\n         random)", "moreover"], ["proof (state)\nthis:\n  winningAllocationRel N (set G)\n   ((\\<in>)\n     (randomEl\n       (takeAll\n         (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n         (allAllocationsAlg N G))\n       random))\n   bids\n\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel N (set G) ((\\<in>) x) bids)\n                (allAllocationsAlg N G))\n              random) <|\n           (N \\<times> finestpart (set G)))\n          N (set G))\n     aa\n    < sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel N (set G) ((\\<in>) x) bids)\n                  (allAllocationsAlg N G))\n                random) <|\n             (N \\<times> finestpart (set G)))\n            N (set G))\n       (randomEl\n         (takeAll\n           (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n           (allAllocationsAlg N G))\n         random)", "have \"winningAllocationsRel N (set G) bids \\<subseteq> ?p N ?G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G) (\\<subseteq>) bids\n     (allAllocations N (set G))", "using assms winningAllocationPossible"], ["proof (prove)\nusing this:\n  N \\<noteq> {}\n  finite N\n  distinct G\n  set G \\<noteq> {}\n  aa \\<in> allAllocations N (set G) -\n           {randomEl\n             (takeAll\n               (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n               (allAllocationsAlg N G))\n             random}\n  winningAllocationRel ?N ?G (\\<subseteq>) ?b (allAllocations ?N ?G)\n\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G) (\\<subseteq>) bids\n     (allAllocations N (set G))", "by metis"], ["proof (state)\nthis:\n  winningAllocationRel N (set G) (\\<subseteq>) bids\n   (allAllocations N (set G))\n\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel N (set G) ((\\<in>) x) bids)\n                (allAllocationsAlg N G))\n              random) <|\n           (N \\<times> finestpart (set G)))\n          N (set G))\n     aa\n    < sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel N (set G) ((\\<in>) x) bids)\n                  (allAllocationsAlg N G))\n                random) <|\n             (N \\<times> finestpart (set G)))\n            N (set G))\n       (randomEl\n         (takeAll\n           (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n           (allAllocationsAlg N G))\n         random)", "ultimately"], ["proof (chain)\npicking this:\n  winningAllocationRel N (set G)\n   ((\\<in>)\n     (randomEl\n       (takeAll\n         (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n         (allAllocationsAlg N G))\n       random))\n   bids\n  winningAllocationRel N (set G) (\\<subseteq>) bids\n   (allAllocations N (set G))", "have \"?a \\<in> ?p N ?G\""], ["proof (prove)\nusing this:\n  winningAllocationRel N (set G)\n   ((\\<in>)\n     (randomEl\n       (takeAll\n         (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n         (allAllocationsAlg N G))\n       random))\n   bids\n  winningAllocationRel N (set G) (\\<subseteq>) bids\n   (allAllocations N (set G))\n\ngoal (1 subgoal):\n 1. randomEl\n     (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n       (allAllocationsAlg N G))\n     random\n    \\<in> allAllocations N (set G)", "using lm090 assms winningAllocationPossible rev_subsetD"], ["proof (prove)\nusing this:\n  winningAllocationRel N (set G)\n   ((\\<in>)\n     (randomEl\n       (takeAll\n         (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n         (allAllocationsAlg N G))\n       random))\n   bids\n  winningAllocationRel N (set G) (\\<subseteq>) bids\n   (allAllocations N (set G))\n  \\<lbrakk>?N \\<noteq> {}; finite ?N; distinct ?G;\n   set ?G \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> winningAllocationRel ?N (set ?G)\n                     ((\\<in>)\n                       (randomEl\n                         (takeAll\n                           (\\<lambda>x.\n                               winningAllocationRel ?N (set ?G) ((\\<in>) x)\n                                ?bids)\n                           (allAllocationsAlg ?N ?G))\n                         ?random))\n                     ?bids\n  N \\<noteq> {}\n  finite N\n  distinct G\n  set G \\<noteq> {}\n  aa \\<in> allAllocations N (set G) -\n           {randomEl\n             (takeAll\n               (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n               (allAllocationsAlg N G))\n             random}\n  winningAllocationRel ?N ?G (\\<subseteq>) ?b (allAllocations ?N ?G)\n  \\<lbrakk>?c \\<in> ?A; ?A \\<subseteq> ?B\\<rbrakk>\n  \\<Longrightarrow> ?c \\<in> ?B\n\ngoal (1 subgoal):\n 1. randomEl\n     (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n       (allAllocationsAlg N G))\n     random\n    \\<in> allAllocations N (set G)", "by blast"], ["proof (state)\nthis:\n  randomEl\n   (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n     (allAllocationsAlg N G))\n   random\n  \\<in> allAllocations N (set G)\n\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel N (set G) ((\\<in>) x) bids)\n                (allAllocationsAlg N G))\n              random) <|\n           (N \\<times> finestpart (set G)))\n          N (set G))\n     aa\n    < sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel N (set G) ((\\<in>) x) bids)\n                  (allAllocationsAlg N G))\n                random) <|\n             (N \\<times> finestpart (set G)))\n            N (set G))\n       (randomEl\n         (takeAll\n           (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n           (allAllocationsAlg N G))\n         random)", "then"], ["proof (chain)\npicking this:\n  randomEl\n   (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n     (allAllocationsAlg N G))\n   random\n  \\<in> allAllocations N (set G)", "show ?thesis"], ["proof (prove)\nusing this:\n  randomEl\n   (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n     (allAllocationsAlg N G))\n   random\n  \\<in> allAllocations N (set G)\n\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel N (set G) ((\\<in>) x) bids)\n                (allAllocationsAlg N G))\n              random) <|\n           (N \\<times> finestpart (set G)))\n          N (set G))\n     aa\n    < sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel N (set G) ((\\<in>) x) bids)\n                  (allAllocationsAlg N G))\n                random) <|\n             (N \\<times> finestpart (set G)))\n            N (set G))\n       (randomEl\n         (takeAll\n           (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n           (allAllocationsAlg N G))\n         random)", "using assms lm102"], ["proof (prove)\nusing this:\n  randomEl\n   (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n     (allAllocationsAlg N G))\n   random\n  \\<in> allAllocations N (set G)\n  N \\<noteq> {}\n  finite N\n  distinct G\n  set G \\<noteq> {}\n  aa \\<in> allAllocations N (set G) -\n           {randomEl\n             (takeAll\n               (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n               (allAllocationsAlg N G))\n             random}\n  \\<lbrakk>finite ?G; ?a \\<in> allAllocations ?N ?G;\n   ?aa \\<in> allAllocations ?N ?G; ?aa \\<noteq> ?a\\<rbrakk>\n  \\<Longrightarrow> sum (summedBidVector\n                          (pseudoAllocation ?a <|\n                           (?N \\<times> finestpart ?G))\n                          ?N ?G)\n                     ?aa\n                    < sum (summedBidVector\n                            (pseudoAllocation ?a <|\n                             (?N \\<times> finestpart ?G))\n                            ?N ?G)\n                       ?a\n\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel N (set G) ((\\<in>) x) bids)\n                (allAllocationsAlg N G))\n              random) <|\n           (N \\<times> finestpart (set G)))\n          N (set G))\n     aa\n    < sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel N (set G) ((\\<in>) x) bids)\n                  (allAllocationsAlg N G))\n                random) <|\n             (N \\<times> finestpart (set G)))\n            N (set G))\n       (randomEl\n         (takeAll\n           (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n           (allAllocationsAlg N G))\n         random)", "by blast"], ["proof (state)\nthis:\n  sum (summedBidVector\n        (pseudoAllocation\n          (randomEl\n            (takeAll\n              (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n              (allAllocationsAlg N G))\n            random) <|\n         (N \\<times> finestpart (set G)))\n        N (set G))\n   aa\n  < sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel N (set G) ((\\<in>) x) bids)\n                (allAllocationsAlg N G))\n              random) <|\n           (N \\<times> finestpart (set G)))\n          N (set G))\n     (randomEl\n       (takeAll\n         (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n         (allAllocationsAlg N G))\n       random)\n\ngoal:\nNo subgoals!", "qed"], ["", "(* putting together the two rounds in the auction, first using the bids, then the random values. *)"], ["", "abbreviation \"terminatingAuctionRel N G bids random == \n              argmax (sum (resolvingBid N G bids random)) \n                     (argmax (sum bids) (allAllocations N (set G)))\""], ["", "text\\<open>Termination theorem: it assures that the number of winning allocations is exactly one\\<close>"], ["", "theorem winningAllocationUniqueness: \n  assumes \"N \\<noteq> {}\" \"distinct G\" \"set G \\<noteq> {}\" \"finite N\"\n  shows \"terminatingAuctionRel N G (bids) random = {chosenAllocation N G bids random}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G)\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel N (set G) ((\\<in>) x) bids)\n                    (allAllocationsAlg N G))\n                  random) <|\n               (N \\<times> finestpart (set G)))\n              N (set G))))\n     bids =\n    {randomEl\n      (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n        (allAllocationsAlg N G))\n      random}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G)\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel N (set G) ((\\<in>) x) bids)\n                    (allAllocationsAlg N G))\n                  random) <|\n               (N \\<times> finestpart (set G)))\n              N (set G))))\n     bids =\n    {randomEl\n      (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n        (allAllocationsAlg N G))\n      random}", "let ?p = allAllocations"], ["proof (state)\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G)\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel N (set G) ((\\<in>) x) bids)\n                    (allAllocationsAlg N G))\n                  random) <|\n               (N \\<times> finestpart (set G)))\n              N (set G))))\n     bids =\n    {randomEl\n      (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n        (allAllocationsAlg N G))\n      random}", "let ?G = \"set G\""], ["proof (state)\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G)\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel N (set G) ((\\<in>) x) bids)\n                    (allAllocationsAlg N G))\n                  random) <|\n               (N \\<times> finestpart (set G)))\n              N (set G))))\n     bids =\n    {randomEl\n      (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n        (allAllocationsAlg N G))\n      random}", "let ?X = \"argmax (sum bids) (?p N ?G)\""], ["proof (state)\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G)\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel N (set G) ((\\<in>) x) bids)\n                    (allAllocationsAlg N G))\n                  random) <|\n               (N \\<times> finestpart (set G)))\n              N (set G))))\n     bids =\n    {randomEl\n      (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n        (allAllocationsAlg N G))\n      random}", "let ?a = \"chosenAllocation N G bids random\""], ["proof (state)\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G)\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel N (set G) ((\\<in>) x) bids)\n                    (allAllocationsAlg N G))\n                  random) <|\n               (N \\<times> finestpart (set G)))\n              N (set G))))\n     bids =\n    {randomEl\n      (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n        (allAllocationsAlg N G))\n      random}", "let ?b = \"resolvingBid N G bids random\""], ["proof (state)\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G)\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel N (set G) ((\\<in>) x) bids)\n                    (allAllocationsAlg N G))\n                  random) <|\n               (N \\<times> finestpart (set G)))\n              N (set G))))\n     bids =\n    {randomEl\n      (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n        (allAllocationsAlg N G))\n      random}", "let ?f = \"sum ?b\""], ["proof (state)\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G)\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel N (set G) ((\\<in>) x) bids)\n                    (allAllocationsAlg N G))\n                  random) <|\n               (N \\<times> finestpart (set G)))\n              N (set G))))\n     bids =\n    {randomEl\n      (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n        (allAllocationsAlg N G))\n      random}", "let ?t=terminatingAuctionRel"], ["proof (state)\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G)\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel N (set G) ((\\<in>) x) bids)\n                    (allAllocationsAlg N G))\n                  random) <|\n               (N \\<times> finestpart (set G)))\n              N (set G))))\n     bids =\n    {randomEl\n      (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n        (allAllocationsAlg N G))\n      random}", "have \"\\<forall>aa \\<in> (allAllocations N ?G)-{?a}. ?f aa < ?f ?a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>aa\\<in>allAllocations N (set G) -\n                    {randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel N (set G) ((\\<in>) x) bids)\n                        (allAllocationsAlg N G))\n                      random}.\n       sum (summedBidVector\n             (pseudoAllocation\n               (randomEl\n                 (takeAll\n                   (\\<lambda>x.\n                       winningAllocationRel N (set G) ((\\<in>) x) bids)\n                   (allAllocationsAlg N G))\n                 random) <|\n              (N \\<times> finestpart (set G)))\n             N (set G))\n        aa\n       < sum (summedBidVector\n               (pseudoAllocation\n                 (randomEl\n                   (takeAll\n                     (\\<lambda>x.\n                         winningAllocationRel N (set G) ((\\<in>) x) bids)\n                     (allAllocationsAlg N G))\n                   random) <|\n                (N \\<times> finestpart (set G)))\n               N (set G))\n          (randomEl\n            (takeAll\n              (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n              (allAllocationsAlg N G))\n            random)", "using assms lm103"], ["proof (prove)\nusing this:\n  N \\<noteq> {}\n  distinct G\n  set G \\<noteq> {}\n  finite N\n  \\<lbrakk>?N \\<noteq> {}; finite ?N; distinct ?G; set ?G \\<noteq> {};\n   ?aa\n   \\<in> allAllocations ?N (set ?G) -\n         {randomEl\n           (takeAll\n             (\\<lambda>x.\n                 winningAllocationRel ?N (set ?G) ((\\<in>) x) ?bids)\n             (allAllocationsAlg ?N ?G))\n           ?random}\\<rbrakk>\n  \\<Longrightarrow> sum (summedBidVector\n                          (pseudoAllocation\n                            (randomEl\n                              (takeAll\n                                (\\<lambda>x.\n                                    winningAllocationRel ?N (set ?G)\n                                     ((\\<in>) x) ?bids)\n                                (allAllocationsAlg ?N ?G))\n                              ?random) <|\n                           (?N \\<times> finestpart (set ?G)))\n                          ?N (set ?G))\n                     ?aa\n                    < sum (summedBidVector\n                            (pseudoAllocation\n                              (randomEl\n                                (takeAll\n                                  (\\<lambda>x.\nwinningAllocationRel ?N (set ?G) ((\\<in>) x) ?bids)\n                                  (allAllocationsAlg ?N ?G))\n                                ?random) <|\n                             (?N \\<times> finestpart (set ?G)))\n                            ?N (set ?G))\n                       (randomEl\n                         (takeAll\n                           (\\<lambda>x.\n                               winningAllocationRel ?N (set ?G) ((\\<in>) x)\n                                ?bids)\n                           (allAllocationsAlg ?N ?G))\n                         ?random)\n\ngoal (1 subgoal):\n 1. \\<forall>aa\\<in>allAllocations N (set G) -\n                    {randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel N (set G) ((\\<in>) x) bids)\n                        (allAllocationsAlg N G))\n                      random}.\n       sum (summedBidVector\n             (pseudoAllocation\n               (randomEl\n                 (takeAll\n                   (\\<lambda>x.\n                       winningAllocationRel N (set G) ((\\<in>) x) bids)\n                   (allAllocationsAlg N G))\n                 random) <|\n              (N \\<times> finestpart (set G)))\n             N (set G))\n        aa\n       < sum (summedBidVector\n               (pseudoAllocation\n                 (randomEl\n                   (takeAll\n                     (\\<lambda>x.\n                         winningAllocationRel N (set G) ((\\<in>) x) bids)\n                     (allAllocationsAlg N G))\n                   random) <|\n                (N \\<times> finestpart (set G)))\n               N (set G))\n          (randomEl\n            (takeAll\n              (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n              (allAllocationsAlg N G))\n            random)", "by blast"], ["proof (state)\nthis:\n  \\<forall>aa\\<in>allAllocations N (set G) -\n                  {randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel N (set G) ((\\<in>) x) bids)\n                      (allAllocationsAlg N G))\n                    random}.\n     sum (summedBidVector\n           (pseudoAllocation\n             (randomEl\n               (takeAll\n                 (\\<lambda>x.\n                     winningAllocationRel N (set G) ((\\<in>) x) bids)\n                 (allAllocationsAlg N G))\n               random) <|\n            (N \\<times> finestpart (set G)))\n           N (set G))\n      aa\n     < sum (summedBidVector\n             (pseudoAllocation\n               (randomEl\n                 (takeAll\n                   (\\<lambda>x.\n                       winningAllocationRel N (set G) ((\\<in>) x) bids)\n                   (allAllocationsAlg N G))\n                 random) <|\n              (N \\<times> finestpart (set G)))\n             N (set G))\n        (randomEl\n          (takeAll\n            (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n            (allAllocationsAlg N G))\n          random)\n\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G)\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel N (set G) ((\\<in>) x) bids)\n                    (allAllocationsAlg N G))\n                  random) <|\n               (N \\<times> finestpart (set G)))\n              N (set G))))\n     bids =\n    {randomEl\n      (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n        (allAllocationsAlg N G))\n      random}", "then"], ["proof (chain)\npicking this:\n  \\<forall>aa\\<in>allAllocations N (set G) -\n                  {randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel N (set G) ((\\<in>) x) bids)\n                      (allAllocationsAlg N G))\n                    random}.\n     sum (summedBidVector\n           (pseudoAllocation\n             (randomEl\n               (takeAll\n                 (\\<lambda>x.\n                     winningAllocationRel N (set G) ((\\<in>) x) bids)\n                 (allAllocationsAlg N G))\n               random) <|\n            (N \\<times> finestpart (set G)))\n           N (set G))\n      aa\n     < sum (summedBidVector\n             (pseudoAllocation\n               (randomEl\n                 (takeAll\n                   (\\<lambda>x.\n                       winningAllocationRel N (set G) ((\\<in>) x) bids)\n                   (allAllocationsAlg N G))\n                 random) <|\n              (N \\<times> finestpart (set G)))\n             N (set G))\n        (randomEl\n          (takeAll\n            (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n            (allAllocationsAlg N G))\n          random)", "have \"\\<forall>aa \\<in> ?X-{?a}. ?f aa < ?f ?a\""], ["proof (prove)\nusing this:\n  \\<forall>aa\\<in>allAllocations N (set G) -\n                  {randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel N (set G) ((\\<in>) x) bids)\n                      (allAllocationsAlg N G))\n                    random}.\n     sum (summedBidVector\n           (pseudoAllocation\n             (randomEl\n               (takeAll\n                 (\\<lambda>x.\n                     winningAllocationRel N (set G) ((\\<in>) x) bids)\n                 (allAllocationsAlg N G))\n               random) <|\n            (N \\<times> finestpart (set G)))\n           N (set G))\n      aa\n     < sum (summedBidVector\n             (pseudoAllocation\n               (randomEl\n                 (takeAll\n                   (\\<lambda>x.\n                       winningAllocationRel N (set G) ((\\<in>) x) bids)\n                   (allAllocationsAlg N G))\n                 random) <|\n              (N \\<times> finestpart (set G)))\n             N (set G))\n        (randomEl\n          (takeAll\n            (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n            (allAllocationsAlg N G))\n          random)\n\ngoal (1 subgoal):\n 1. \\<forall>aa\\<in>winningAllocationRel N (set G) (-) bids\n                     {randomEl\n                       (takeAll\n                         (\\<lambda>x.\n                             winningAllocationRel N (set G) ((\\<in>) x)\n                              bids)\n                         (allAllocationsAlg N G))\n                       random}.\n       sum (summedBidVector\n             (pseudoAllocation\n               (randomEl\n                 (takeAll\n                   (\\<lambda>x.\n                       winningAllocationRel N (set G) ((\\<in>) x) bids)\n                   (allAllocationsAlg N G))\n                 random) <|\n              (N \\<times> finestpart (set G)))\n             N (set G))\n        aa\n       < sum (summedBidVector\n               (pseudoAllocation\n                 (randomEl\n                   (takeAll\n                     (\\<lambda>x.\n                         winningAllocationRel N (set G) ((\\<in>) x) bids)\n                     (allAllocationsAlg N G))\n                   random) <|\n                (N \\<times> finestpart (set G)))\n               N (set G))\n          (randomEl\n            (takeAll\n              (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n              (allAllocationsAlg N G))\n            random)", "using assms lm103"], ["proof (prove)\nusing this:\n  \\<forall>aa\\<in>allAllocations N (set G) -\n                  {randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel N (set G) ((\\<in>) x) bids)\n                      (allAllocationsAlg N G))\n                    random}.\n     sum (summedBidVector\n           (pseudoAllocation\n             (randomEl\n               (takeAll\n                 (\\<lambda>x.\n                     winningAllocationRel N (set G) ((\\<in>) x) bids)\n                 (allAllocationsAlg N G))\n               random) <|\n            (N \\<times> finestpart (set G)))\n           N (set G))\n      aa\n     < sum (summedBidVector\n             (pseudoAllocation\n               (randomEl\n                 (takeAll\n                   (\\<lambda>x.\n                       winningAllocationRel N (set G) ((\\<in>) x) bids)\n                   (allAllocationsAlg N G))\n                 random) <|\n              (N \\<times> finestpart (set G)))\n             N (set G))\n        (randomEl\n          (takeAll\n            (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n            (allAllocationsAlg N G))\n          random)\n  N \\<noteq> {}\n  distinct G\n  set G \\<noteq> {}\n  finite N\n  \\<lbrakk>?N \\<noteq> {}; finite ?N; distinct ?G; set ?G \\<noteq> {};\n   ?aa\n   \\<in> allAllocations ?N (set ?G) -\n         {randomEl\n           (takeAll\n             (\\<lambda>x.\n                 winningAllocationRel ?N (set ?G) ((\\<in>) x) ?bids)\n             (allAllocationsAlg ?N ?G))\n           ?random}\\<rbrakk>\n  \\<Longrightarrow> sum (summedBidVector\n                          (pseudoAllocation\n                            (randomEl\n                              (takeAll\n                                (\\<lambda>x.\n                                    winningAllocationRel ?N (set ?G)\n                                     ((\\<in>) x) ?bids)\n                                (allAllocationsAlg ?N ?G))\n                              ?random) <|\n                           (?N \\<times> finestpart (set ?G)))\n                          ?N (set ?G))\n                     ?aa\n                    < sum (summedBidVector\n                            (pseudoAllocation\n                              (randomEl\n                                (takeAll\n                                  (\\<lambda>x.\nwinningAllocationRel ?N (set ?G) ((\\<in>) x) ?bids)\n                                  (allAllocationsAlg ?N ?G))\n                                ?random) <|\n                             (?N \\<times> finestpart (set ?G)))\n                            ?N (set ?G))\n                       (randomEl\n                         (takeAll\n                           (\\<lambda>x.\n                               winningAllocationRel ?N (set ?G) ((\\<in>) x)\n                                ?bids)\n                           (allAllocationsAlg ?N ?G))\n                         ?random)\n\ngoal (1 subgoal):\n 1. \\<forall>aa\\<in>winningAllocationRel N (set G) (-) bids\n                     {randomEl\n                       (takeAll\n                         (\\<lambda>x.\n                             winningAllocationRel N (set G) ((\\<in>) x)\n                              bids)\n                         (allAllocationsAlg N G))\n                       random}.\n       sum (summedBidVector\n             (pseudoAllocation\n               (randomEl\n                 (takeAll\n                   (\\<lambda>x.\n                       winningAllocationRel N (set G) ((\\<in>) x) bids)\n                   (allAllocationsAlg N G))\n                 random) <|\n              (N \\<times> finestpart (set G)))\n             N (set G))\n        aa\n       < sum (summedBidVector\n               (pseudoAllocation\n                 (randomEl\n                   (takeAll\n                     (\\<lambda>x.\n                         winningAllocationRel N (set G) ((\\<in>) x) bids)\n                     (allAllocationsAlg N G))\n                   random) <|\n                (N \\<times> finestpart (set G)))\n               N (set G))\n          (randomEl\n            (takeAll\n              (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n              (allAllocationsAlg N G))\n            random)", "by auto"], ["proof (state)\nthis:\n  \\<forall>aa\\<in>winningAllocationRel N (set G) (-) bids\n                   {randomEl\n                     (takeAll\n                       (\\<lambda>x.\n                           winningAllocationRel N (set G) ((\\<in>) x) bids)\n                       (allAllocationsAlg N G))\n                     random}.\n     sum (summedBidVector\n           (pseudoAllocation\n             (randomEl\n               (takeAll\n                 (\\<lambda>x.\n                     winningAllocationRel N (set G) ((\\<in>) x) bids)\n                 (allAllocationsAlg N G))\n               random) <|\n            (N \\<times> finestpart (set G)))\n           N (set G))\n      aa\n     < sum (summedBidVector\n             (pseudoAllocation\n               (randomEl\n                 (takeAll\n                   (\\<lambda>x.\n                       winningAllocationRel N (set G) ((\\<in>) x) bids)\n                   (allAllocationsAlg N G))\n                 random) <|\n              (N \\<times> finestpart (set G)))\n             N (set G))\n        (randomEl\n          (takeAll\n            (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n            (allAllocationsAlg N G))\n          random)\n\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G)\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel N (set G) ((\\<in>) x) bids)\n                    (allAllocationsAlg N G))\n                  random) <|\n               (N \\<times> finestpart (set G)))\n              N (set G))))\n     bids =\n    {randomEl\n      (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n        (allAllocationsAlg N G))\n      random}", "moreover"], ["proof (state)\nthis:\n  \\<forall>aa\\<in>winningAllocationRel N (set G) (-) bids\n                   {randomEl\n                     (takeAll\n                       (\\<lambda>x.\n                           winningAllocationRel N (set G) ((\\<in>) x) bids)\n                       (allAllocationsAlg N G))\n                     random}.\n     sum (summedBidVector\n           (pseudoAllocation\n             (randomEl\n               (takeAll\n                 (\\<lambda>x.\n                     winningAllocationRel N (set G) ((\\<in>) x) bids)\n                 (allAllocationsAlg N G))\n               random) <|\n            (N \\<times> finestpart (set G)))\n           N (set G))\n      aa\n     < sum (summedBidVector\n             (pseudoAllocation\n               (randomEl\n                 (takeAll\n                   (\\<lambda>x.\n                       winningAllocationRel N (set G) ((\\<in>) x) bids)\n                   (allAllocationsAlg N G))\n                 random) <|\n              (N \\<times> finestpart (set G)))\n             N (set G))\n        (randomEl\n          (takeAll\n            (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n            (allAllocationsAlg N G))\n          random)\n\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G)\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel N (set G) ((\\<in>) x) bids)\n                    (allAllocationsAlg N G))\n                  random) <|\n               (N \\<times> finestpart (set G)))\n              N (set G))))\n     bids =\n    {randomEl\n      (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n        (allAllocationsAlg N G))\n      random}", "have \"finite N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite N", "using assms"], ["proof (prove)\nusing this:\n  N \\<noteq> {}\n  distinct G\n  set G \\<noteq> {}\n  finite N\n\ngoal (1 subgoal):\n 1. finite N", "by simp"], ["proof (state)\nthis:\n  finite N\n\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G)\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel N (set G) ((\\<in>) x) bids)\n                    (allAllocationsAlg N G))\n                  random) <|\n               (N \\<times> finestpart (set G)))\n              N (set G))))\n     bids =\n    {randomEl\n      (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n        (allAllocationsAlg N G))\n      random}", "then"], ["proof (chain)\npicking this:\n  finite N", "have \"finite (?p N ?G)\""], ["proof (prove)\nusing this:\n  finite N\n\ngoal (1 subgoal):\n 1. finite (allAllocations N (set G))", "using assms allAllocationsFinite"], ["proof (prove)\nusing this:\n  finite N\n  N \\<noteq> {}\n  distinct G\n  set G \\<noteq> {}\n  finite N\n  \\<lbrakk>finite ?N; finite ?G\\<rbrakk>\n  \\<Longrightarrow> finite (allAllocations ?N ?G)\n\ngoal (1 subgoal):\n 1. finite (allAllocations N (set G))", "by (metis List.finite_set)"], ["proof (state)\nthis:\n  finite (allAllocations N (set G))\n\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G)\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel N (set G) ((\\<in>) x) bids)\n                    (allAllocationsAlg N G))\n                  random) <|\n               (N \\<times> finestpart (set G)))\n              N (set G))))\n     bids =\n    {randomEl\n      (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n        (allAllocationsAlg N G))\n      random}", "then"], ["proof (chain)\npicking this:\n  finite (allAllocations N (set G))", "have \"finite ?X\""], ["proof (prove)\nusing this:\n  finite (allAllocations N (set G))\n\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G) finite bids", "using assms"], ["proof (prove)\nusing this:\n  finite (allAllocations N (set G))\n  N \\<noteq> {}\n  distinct G\n  set G \\<noteq> {}\n  finite N\n\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G) finite bids", "by (metis finite_subset winningAllocationPossible)"], ["proof (state)\nthis:\n  winningAllocationRel N (set G) finite bids\n\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G)\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel N (set G) ((\\<in>) x) bids)\n                    (allAllocationsAlg N G))\n                  random) <|\n               (N \\<times> finestpart (set G)))\n              N (set G))))\n     bids =\n    {randomEl\n      (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n        (allAllocationsAlg N G))\n      random}", "moreover"], ["proof (state)\nthis:\n  winningAllocationRel N (set G) finite bids\n\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G)\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel N (set G) ((\\<in>) x) bids)\n                    (allAllocationsAlg N G))\n                  random) <|\n               (N \\<times> finestpart (set G)))\n              N (set G))))\n     bids =\n    {randomEl\n      (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n        (allAllocationsAlg N G))\n      random}", "have \"?a \\<in> ?X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G)\n     ((\\<in>)\n       (randomEl\n         (takeAll\n           (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n           (allAllocationsAlg N G))\n         random))\n     bids", "using lm090 assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?N \\<noteq> {}; finite ?N; distinct ?G;\n   set ?G \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> winningAllocationRel ?N (set ?G)\n                     ((\\<in>)\n                       (randomEl\n                         (takeAll\n                           (\\<lambda>x.\n                               winningAllocationRel ?N (set ?G) ((\\<in>) x)\n                                ?bids)\n                           (allAllocationsAlg ?N ?G))\n                         ?random))\n                     ?bids\n  N \\<noteq> {}\n  distinct G\n  set G \\<noteq> {}\n  finite N\n\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G)\n     ((\\<in>)\n       (randomEl\n         (takeAll\n           (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n           (allAllocationsAlg N G))\n         random))\n     bids", "by blast"], ["proof (state)\nthis:\n  winningAllocationRel N (set G)\n   ((\\<in>)\n     (randomEl\n       (takeAll\n         (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n         (allAllocationsAlg N G))\n       random))\n   bids\n\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G)\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel N (set G) ((\\<in>) x) bids)\n                    (allAllocationsAlg N G))\n                  random) <|\n               (N \\<times> finestpart (set G)))\n              N (set G))))\n     bids =\n    {randomEl\n      (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n        (allAllocationsAlg N G))\n      random}", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>aa\\<in>winningAllocationRel N (set G) (-) bids\n                   {randomEl\n                     (takeAll\n                       (\\<lambda>x.\n                           winningAllocationRel N (set G) ((\\<in>) x) bids)\n                       (allAllocationsAlg N G))\n                     random}.\n     sum (summedBidVector\n           (pseudoAllocation\n             (randomEl\n               (takeAll\n                 (\\<lambda>x.\n                     winningAllocationRel N (set G) ((\\<in>) x) bids)\n                 (allAllocationsAlg N G))\n               random) <|\n            (N \\<times> finestpart (set G)))\n           N (set G))\n      aa\n     < sum (summedBidVector\n             (pseudoAllocation\n               (randomEl\n                 (takeAll\n                   (\\<lambda>x.\n                       winningAllocationRel N (set G) ((\\<in>) x) bids)\n                   (allAllocationsAlg N G))\n                 random) <|\n              (N \\<times> finestpart (set G)))\n             N (set G))\n        (randomEl\n          (takeAll\n            (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n            (allAllocationsAlg N G))\n          random)\n  winningAllocationRel N (set G) finite bids\n  winningAllocationRel N (set G)\n   ((\\<in>)\n     (randomEl\n       (takeAll\n         (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n         (allAllocationsAlg N G))\n       random))\n   bids", "have \"finite ?X & ?a \\<in> ?X & (\\<forall>aa \\<in> ?X-{?a}. ?f aa < ?f ?a)\""], ["proof (prove)\nusing this:\n  \\<forall>aa\\<in>winningAllocationRel N (set G) (-) bids\n                   {randomEl\n                     (takeAll\n                       (\\<lambda>x.\n                           winningAllocationRel N (set G) ((\\<in>) x) bids)\n                       (allAllocationsAlg N G))\n                     random}.\n     sum (summedBidVector\n           (pseudoAllocation\n             (randomEl\n               (takeAll\n                 (\\<lambda>x.\n                     winningAllocationRel N (set G) ((\\<in>) x) bids)\n                 (allAllocationsAlg N G))\n               random) <|\n            (N \\<times> finestpart (set G)))\n           N (set G))\n      aa\n     < sum (summedBidVector\n             (pseudoAllocation\n               (randomEl\n                 (takeAll\n                   (\\<lambda>x.\n                       winningAllocationRel N (set G) ((\\<in>) x) bids)\n                   (allAllocationsAlg N G))\n                 random) <|\n              (N \\<times> finestpart (set G)))\n             N (set G))\n        (randomEl\n          (takeAll\n            (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n            (allAllocationsAlg N G))\n          random)\n  winningAllocationRel N (set G) finite bids\n  winningAllocationRel N (set G)\n   ((\\<in>)\n     (randomEl\n       (takeAll\n         (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n         (allAllocationsAlg N G))\n       random))\n   bids\n\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G) finite bids \\<and>\n    winningAllocationRel N (set G)\n     ((\\<in>)\n       (randomEl\n         (takeAll\n           (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n           (allAllocationsAlg N G))\n         random))\n     bids \\<and>\n    (\\<forall>aa\\<in>winningAllocationRel N (set G) (-) bids\n                      {randomEl\n                        (takeAll\n                          (\\<lambda>x.\n                              winningAllocationRel N (set G) ((\\<in>) x)\n                               bids)\n                          (allAllocationsAlg N G))\n                        random}.\n        sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel N (set G) ((\\<in>) x) bids)\n                    (allAllocationsAlg N G))\n                  random) <|\n               (N \\<times> finestpart (set G)))\n              N (set G))\n         aa\n        < sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel N (set G) ((\\<in>) x) bids)\n                      (allAllocationsAlg N G))\n                    random) <|\n                 (N \\<times> finestpart (set G)))\n                N (set G))\n           (randomEl\n             (takeAll\n               (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n               (allAllocationsAlg N G))\n             random))", "by force"], ["proof (state)\nthis:\n  winningAllocationRel N (set G) finite bids \\<and>\n  winningAllocationRel N (set G)\n   ((\\<in>)\n     (randomEl\n       (takeAll\n         (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n         (allAllocationsAlg N G))\n       random))\n   bids \\<and>\n  (\\<forall>aa\\<in>winningAllocationRel N (set G) (-) bids\n                    {randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel N (set G) ((\\<in>) x) bids)\n                        (allAllocationsAlg N G))\n                      random}.\n      sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel N (set G) ((\\<in>) x) bids)\n                  (allAllocationsAlg N G))\n                random) <|\n             (N \\<times> finestpart (set G)))\n            N (set G))\n       aa\n      < sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel N (set G) ((\\<in>) x) bids)\n                    (allAllocationsAlg N G))\n                  random) <|\n               (N \\<times> finestpart (set G)))\n              N (set G))\n         (randomEl\n           (takeAll\n             (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n             (allAllocationsAlg N G))\n           random))\n\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G)\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel N (set G) ((\\<in>) x) bids)\n                    (allAllocationsAlg N G))\n                  random) <|\n               (N \\<times> finestpart (set G)))\n              N (set G))))\n     bids =\n    {randomEl\n      (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n        (allAllocationsAlg N G))\n      random}", "moreover"], ["proof (state)\nthis:\n  winningAllocationRel N (set G) finite bids \\<and>\n  winningAllocationRel N (set G)\n   ((\\<in>)\n     (randomEl\n       (takeAll\n         (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n         (allAllocationsAlg N G))\n       random))\n   bids \\<and>\n  (\\<forall>aa\\<in>winningAllocationRel N (set G) (-) bids\n                    {randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel N (set G) ((\\<in>) x) bids)\n                        (allAllocationsAlg N G))\n                      random}.\n      sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel N (set G) ((\\<in>) x) bids)\n                  (allAllocationsAlg N G))\n                random) <|\n             (N \\<times> finestpart (set G)))\n            N (set G))\n       aa\n      < sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel N (set G) ((\\<in>) x) bids)\n                    (allAllocationsAlg N G))\n                  random) <|\n               (N \\<times> finestpart (set G)))\n              N (set G))\n         (randomEl\n           (takeAll\n             (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n             (allAllocationsAlg N G))\n           random))\n\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G)\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel N (set G) ((\\<in>) x) bids)\n                    (allAllocationsAlg N G))\n                  random) <|\n               (N \\<times> finestpart (set G)))\n              N (set G))))\n     bids =\n    {randomEl\n      (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n        (allAllocationsAlg N G))\n      random}", "have \"(finite ?X & ?a \\<in> ?X & (\\<forall>aa \\<in> ?X-{?a}. ?f aa < ?f ?a)) \\<longrightarrow> argmax ?f ?X = {?a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G) finite bids \\<and>\n    winningAllocationRel N (set G)\n     ((\\<in>)\n       (randomEl\n         (takeAll\n           (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n           (allAllocationsAlg N G))\n         random))\n     bids \\<and>\n    (\\<forall>aa\\<in>winningAllocationRel N (set G) (-) bids\n                      {randomEl\n                        (takeAll\n                          (\\<lambda>x.\n                              winningAllocationRel N (set G) ((\\<in>) x)\n                               bids)\n                          (allAllocationsAlg N G))\n                        random}.\n        sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel N (set G) ((\\<in>) x) bids)\n                    (allAllocationsAlg N G))\n                  random) <|\n               (N \\<times> finestpart (set G)))\n              N (set G))\n         aa\n        < sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel N (set G) ((\\<in>) x) bids)\n                      (allAllocationsAlg N G))\n                    random) <|\n                 (N \\<times> finestpart (set G)))\n                N (set G))\n           (randomEl\n             (takeAll\n               (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n               (allAllocationsAlg N G))\n             random)) \\<longrightarrow>\n    winningAllocationRel N (set G)\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel N (set G) ((\\<in>) x) bids)\n                    (allAllocationsAlg N G))\n                  random) <|\n               (N \\<times> finestpart (set G)))\n              N (set G))))\n     bids =\n    {randomEl\n      (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n        (allAllocationsAlg N G))\n      random}", "by (rule argmaxProperty)"], ["proof (state)\nthis:\n  winningAllocationRel N (set G) finite bids \\<and>\n  winningAllocationRel N (set G)\n   ((\\<in>)\n     (randomEl\n       (takeAll\n         (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n         (allAllocationsAlg N G))\n       random))\n   bids \\<and>\n  (\\<forall>aa\\<in>winningAllocationRel N (set G) (-) bids\n                    {randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel N (set G) ((\\<in>) x) bids)\n                        (allAllocationsAlg N G))\n                      random}.\n      sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel N (set G) ((\\<in>) x) bids)\n                  (allAllocationsAlg N G))\n                random) <|\n             (N \\<times> finestpart (set G)))\n            N (set G))\n       aa\n      < sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel N (set G) ((\\<in>) x) bids)\n                    (allAllocationsAlg N G))\n                  random) <|\n               (N \\<times> finestpart (set G)))\n              N (set G))\n         (randomEl\n           (takeAll\n             (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n             (allAllocationsAlg N G))\n           random)) \\<longrightarrow>\n  winningAllocationRel N (set G)\n   (argmax\n     (sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel N (set G) ((\\<in>) x) bids)\n                  (allAllocationsAlg N G))\n                random) <|\n             (N \\<times> finestpart (set G)))\n            N (set G))))\n   bids =\n  {randomEl\n    (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n      (allAllocationsAlg N G))\n    random}\n\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G)\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel N (set G) ((\\<in>) x) bids)\n                    (allAllocationsAlg N G))\n                  random) <|\n               (N \\<times> finestpart (set G)))\n              N (set G))))\n     bids =\n    {randomEl\n      (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n        (allAllocationsAlg N G))\n      random}", "ultimately"], ["proof (chain)\npicking this:\n  winningAllocationRel N (set G) finite bids \\<and>\n  winningAllocationRel N (set G)\n   ((\\<in>)\n     (randomEl\n       (takeAll\n         (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n         (allAllocationsAlg N G))\n       random))\n   bids \\<and>\n  (\\<forall>aa\\<in>winningAllocationRel N (set G) (-) bids\n                    {randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel N (set G) ((\\<in>) x) bids)\n                        (allAllocationsAlg N G))\n                      random}.\n      sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel N (set G) ((\\<in>) x) bids)\n                  (allAllocationsAlg N G))\n                random) <|\n             (N \\<times> finestpart (set G)))\n            N (set G))\n       aa\n      < sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel N (set G) ((\\<in>) x) bids)\n                    (allAllocationsAlg N G))\n                  random) <|\n               (N \\<times> finestpart (set G)))\n              N (set G))\n         (randomEl\n           (takeAll\n             (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n             (allAllocationsAlg N G))\n           random))\n  winningAllocationRel N (set G) finite bids \\<and>\n  winningAllocationRel N (set G)\n   ((\\<in>)\n     (randomEl\n       (takeAll\n         (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n         (allAllocationsAlg N G))\n       random))\n   bids \\<and>\n  (\\<forall>aa\\<in>winningAllocationRel N (set G) (-) bids\n                    {randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel N (set G) ((\\<in>) x) bids)\n                        (allAllocationsAlg N G))\n                      random}.\n      sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel N (set G) ((\\<in>) x) bids)\n                  (allAllocationsAlg N G))\n                random) <|\n             (N \\<times> finestpart (set G)))\n            N (set G))\n       aa\n      < sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel N (set G) ((\\<in>) x) bids)\n                    (allAllocationsAlg N G))\n                  random) <|\n               (N \\<times> finestpart (set G)))\n              N (set G))\n         (randomEl\n           (takeAll\n             (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n             (allAllocationsAlg N G))\n           random)) \\<longrightarrow>\n  winningAllocationRel N (set G)\n   (argmax\n     (sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel N (set G) ((\\<in>) x) bids)\n                  (allAllocationsAlg N G))\n                random) <|\n             (N \\<times> finestpart (set G)))\n            N (set G))))\n   bids =\n  {randomEl\n    (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n      (allAllocationsAlg N G))\n    random}", "have \"{?a} = argmax ?f ?X\""], ["proof (prove)\nusing this:\n  winningAllocationRel N (set G) finite bids \\<and>\n  winningAllocationRel N (set G)\n   ((\\<in>)\n     (randomEl\n       (takeAll\n         (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n         (allAllocationsAlg N G))\n       random))\n   bids \\<and>\n  (\\<forall>aa\\<in>winningAllocationRel N (set G) (-) bids\n                    {randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel N (set G) ((\\<in>) x) bids)\n                        (allAllocationsAlg N G))\n                      random}.\n      sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel N (set G) ((\\<in>) x) bids)\n                  (allAllocationsAlg N G))\n                random) <|\n             (N \\<times> finestpart (set G)))\n            N (set G))\n       aa\n      < sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel N (set G) ((\\<in>) x) bids)\n                    (allAllocationsAlg N G))\n                  random) <|\n               (N \\<times> finestpart (set G)))\n              N (set G))\n         (randomEl\n           (takeAll\n             (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n             (allAllocationsAlg N G))\n           random))\n  winningAllocationRel N (set G) finite bids \\<and>\n  winningAllocationRel N (set G)\n   ((\\<in>)\n     (randomEl\n       (takeAll\n         (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n         (allAllocationsAlg N G))\n       random))\n   bids \\<and>\n  (\\<forall>aa\\<in>winningAllocationRel N (set G) (-) bids\n                    {randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel N (set G) ((\\<in>) x) bids)\n                        (allAllocationsAlg N G))\n                      random}.\n      sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel N (set G) ((\\<in>) x) bids)\n                  (allAllocationsAlg N G))\n                random) <|\n             (N \\<times> finestpart (set G)))\n            N (set G))\n       aa\n      < sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel N (set G) ((\\<in>) x) bids)\n                    (allAllocationsAlg N G))\n                  random) <|\n               (N \\<times> finestpart (set G)))\n              N (set G))\n         (randomEl\n           (takeAll\n             (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n             (allAllocationsAlg N G))\n           random)) \\<longrightarrow>\n  winningAllocationRel N (set G)\n   (argmax\n     (sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel N (set G) ((\\<in>) x) bids)\n                  (allAllocationsAlg N G))\n                random) <|\n             (N \\<times> finestpart (set G)))\n            N (set G))))\n   bids =\n  {randomEl\n    (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n      (allAllocationsAlg N G))\n    random}\n\ngoal (1 subgoal):\n 1. {randomEl\n      (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n        (allAllocationsAlg N G))\n      random} =\n    winningAllocationRel N (set G)\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel N (set G) ((\\<in>) x) bids)\n                    (allAllocationsAlg N G))\n                  random) <|\n               (N \\<times> finestpart (set G)))\n              N (set G))))\n     bids", "using injectionsFromEmptyIsEmpty"], ["proof (prove)\nusing this:\n  winningAllocationRel N (set G) finite bids \\<and>\n  winningAllocationRel N (set G)\n   ((\\<in>)\n     (randomEl\n       (takeAll\n         (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n         (allAllocationsAlg N G))\n       random))\n   bids \\<and>\n  (\\<forall>aa\\<in>winningAllocationRel N (set G) (-) bids\n                    {randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel N (set G) ((\\<in>) x) bids)\n                        (allAllocationsAlg N G))\n                      random}.\n      sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel N (set G) ((\\<in>) x) bids)\n                  (allAllocationsAlg N G))\n                random) <|\n             (N \\<times> finestpart (set G)))\n            N (set G))\n       aa\n      < sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel N (set G) ((\\<in>) x) bids)\n                    (allAllocationsAlg N G))\n                  random) <|\n               (N \\<times> finestpart (set G)))\n              N (set G))\n         (randomEl\n           (takeAll\n             (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n             (allAllocationsAlg N G))\n           random))\n  winningAllocationRel N (set G) finite bids \\<and>\n  winningAllocationRel N (set G)\n   ((\\<in>)\n     (randomEl\n       (takeAll\n         (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n         (allAllocationsAlg N G))\n       random))\n   bids \\<and>\n  (\\<forall>aa\\<in>winningAllocationRel N (set G) (-) bids\n                    {randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel N (set G) ((\\<in>) x) bids)\n                        (allAllocationsAlg N G))\n                      random}.\n      sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel N (set G) ((\\<in>) x) bids)\n                  (allAllocationsAlg N G))\n                random) <|\n             (N \\<times> finestpart (set G)))\n            N (set G))\n       aa\n      < sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel N (set G) ((\\<in>) x) bids)\n                    (allAllocationsAlg N G))\n                  random) <|\n               (N \\<times> finestpart (set G)))\n              N (set G))\n         (randomEl\n           (takeAll\n             (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n             (allAllocationsAlg N G))\n           random)) \\<longrightarrow>\n  winningAllocationRel N (set G)\n   (argmax\n     (sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel N (set G) ((\\<in>) x) bids)\n                  (allAllocationsAlg N G))\n                random) <|\n             (N \\<times> finestpart (set G)))\n            N (set G))))\n   bids =\n  {randomEl\n    (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n      (allAllocationsAlg N G))\n    random}\n  injectionsAlg [] ?Y = [{}]\n\ngoal (1 subgoal):\n 1. {randomEl\n      (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n        (allAllocationsAlg N G))\n      random} =\n    winningAllocationRel N (set G)\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel N (set G) ((\\<in>) x) bids)\n                    (allAllocationsAlg N G))\n                  random) <|\n               (N \\<times> finestpart (set G)))\n              N (set G))))\n     bids", "by presburger"], ["proof (state)\nthis:\n  {randomEl\n    (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n      (allAllocationsAlg N G))\n    random} =\n  winningAllocationRel N (set G)\n   (argmax\n     (sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel N (set G) ((\\<in>) x) bids)\n                  (allAllocationsAlg N G))\n                random) <|\n             (N \\<times> finestpart (set G)))\n            N (set G))))\n   bids\n\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G)\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel N (set G) ((\\<in>) x) bids)\n                    (allAllocationsAlg N G))\n                  random) <|\n               (N \\<times> finestpart (set G)))\n              N (set G))))\n     bids =\n    {randomEl\n      (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n        (allAllocationsAlg N G))\n      random}", "moreover"], ["proof (state)\nthis:\n  {randomEl\n    (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n      (allAllocationsAlg N G))\n    random} =\n  winningAllocationRel N (set G)\n   (argmax\n     (sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel N (set G) ((\\<in>) x) bids)\n                  (allAllocationsAlg N G))\n                random) <|\n             (N \\<times> finestpart (set G)))\n            N (set G))))\n   bids\n\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G)\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel N (set G) ((\\<in>) x) bids)\n                    (allAllocationsAlg N G))\n                  random) <|\n               (N \\<times> finestpart (set G)))\n              N (set G))))\n     bids =\n    {randomEl\n      (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n        (allAllocationsAlg N G))\n      random}", "have \"... = ?t N G bids random\""], ["proof (prove)\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G)\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel N (set G) ((\\<in>) x) bids)\n                    (allAllocationsAlg N G))\n                  random) <|\n               (N \\<times> finestpart (set G)))\n              N (set G))))\n     bids =\n    winningAllocationRel N (set G)\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel N (set G) ((\\<in>) x) bids)\n                    (allAllocationsAlg N G))\n                  random) <|\n               (N \\<times> finestpart (set G)))\n              N (set G))))\n     bids", "by simp"], ["proof (state)\nthis:\n  winningAllocationRel N (set G)\n   (argmax\n     (sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel N (set G) ((\\<in>) x) bids)\n                  (allAllocationsAlg N G))\n                random) <|\n             (N \\<times> finestpart (set G)))\n            N (set G))))\n   bids =\n  winningAllocationRel N (set G)\n   (argmax\n     (sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel N (set G) ((\\<in>) x) bids)\n                  (allAllocationsAlg N G))\n                random) <|\n             (N \\<times> finestpart (set G)))\n            N (set G))))\n   bids\n\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G)\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel N (set G) ((\\<in>) x) bids)\n                    (allAllocationsAlg N G))\n                  random) <|\n               (N \\<times> finestpart (set G)))\n              N (set G))))\n     bids =\n    {randomEl\n      (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n        (allAllocationsAlg N G))\n      random}", "ultimately"], ["proof (chain)\npicking this:\n  {randomEl\n    (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n      (allAllocationsAlg N G))\n    random} =\n  winningAllocationRel N (set G)\n   (argmax\n     (sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel N (set G) ((\\<in>) x) bids)\n                  (allAllocationsAlg N G))\n                random) <|\n             (N \\<times> finestpart (set G)))\n            N (set G))))\n   bids\n  winningAllocationRel N (set G)\n   (argmax\n     (sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel N (set G) ((\\<in>) x) bids)\n                  (allAllocationsAlg N G))\n                random) <|\n             (N \\<times> finestpart (set G)))\n            N (set G))))\n   bids =\n  winningAllocationRel N (set G)\n   (argmax\n     (sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel N (set G) ((\\<in>) x) bids)\n                  (allAllocationsAlg N G))\n                random) <|\n             (N \\<times> finestpart (set G)))\n            N (set G))))\n   bids", "show ?thesis"], ["proof (prove)\nusing this:\n  {randomEl\n    (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n      (allAllocationsAlg N G))\n    random} =\n  winningAllocationRel N (set G)\n   (argmax\n     (sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel N (set G) ((\\<in>) x) bids)\n                  (allAllocationsAlg N G))\n                random) <|\n             (N \\<times> finestpart (set G)))\n            N (set G))))\n   bids\n  winningAllocationRel N (set G)\n   (argmax\n     (sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel N (set G) ((\\<in>) x) bids)\n                  (allAllocationsAlg N G))\n                random) <|\n             (N \\<times> finestpart (set G)))\n            N (set G))))\n   bids =\n  winningAllocationRel N (set G)\n   (argmax\n     (sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel N (set G) ((\\<in>) x) bids)\n                  (allAllocationsAlg N G))\n                random) <|\n             (N \\<times> finestpart (set G)))\n            N (set G))))\n   bids\n\ngoal (1 subgoal):\n 1. winningAllocationRel N (set G)\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel N (set G) ((\\<in>) x) bids)\n                    (allAllocationsAlg N G))\n                  random) <|\n               (N \\<times> finestpart (set G)))\n              N (set G))))\n     bids =\n    {randomEl\n      (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n        (allAllocationsAlg N G))\n      random}", "by simp"], ["proof (state)\nthis:\n  winningAllocationRel N (set G)\n   (argmax\n     (sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel N (set G) ((\\<in>) x) bids)\n                  (allAllocationsAlg N G))\n                random) <|\n             (N \\<times> finestpart (set G)))\n            N (set G))))\n   bids =\n  {randomEl\n    (takeAll (\\<lambda>x. winningAllocationRel N (set G) ((\\<in>) x) bids)\n      (allAllocationsAlg N G))\n    random}\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The computable variant of Else is defined next as Elsee.\\<close>"], ["", "definition \"toFunctionWithFallbackAlg R fallback == \n            (% x. if (x \\<in> Domain R) then (R,,x) else fallback)\""], ["", "notation toFunctionWithFallbackAlg (infix \"Elsee\" 75)"], ["", "end"]]}