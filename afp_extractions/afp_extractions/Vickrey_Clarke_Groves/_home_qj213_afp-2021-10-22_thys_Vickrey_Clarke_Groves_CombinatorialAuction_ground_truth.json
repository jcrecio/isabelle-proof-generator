{"file_name": "/home/qj213/afp-2021-10-22/thys/Vickrey_Clarke_Groves/CombinatorialAuction.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Vickrey_Clarke_Groves", "problem_names": ["lemma allAllocationsEquivalence: \n  \"allAllocations N \\<Omega> = allAllocations' N \\<Omega> & allAllocations N \\<Omega> = allAllocations'' N \\<Omega>\"", "lemma allAllocationsVarCharacterization: \n  \"(a \\<in> allAllocations'' N \\<Omega>) = (a \\<in> allocationsUniverse& Domain a \\<subseteq> N & \\<Union>(Range a) = \\<Omega>)\"", "lemma soldAllocationsEquivalence: \n  \"soldAllocations N \\<Omega> = soldAllocations' N \\<Omega> & \n   soldAllocations' N \\<Omega> = soldAllocations'' N \\<Omega>\"", "lemma allocationSellerMonotonicity: \n  \"soldAllocations (N-{seller}) \\<Omega> \\<subseteq> soldAllocations N \\<Omega>\"", "lemma allocationsUniverseCharacterization: \n  \"(a \\<in> allocationsUniverse) = (a \\<in> allAllocations'' (Domain a) (\\<Union>(Range a)))\"", "lemma allocationMonotonicity: \n  assumes \"N1 \\<subseteq> N2\" \n  shows \"allAllocations'' N1 \\<Omega> \\<subseteq> allAllocations'' N2 \\<Omega>\"", "lemma allocationWithOneParticipant: \n  assumes \"a \\<in> allAllocations'' N \\<Omega>\" \n  shows \"Domain (a -- x) \\<subseteq> N-{x}\"", "lemma soldAllocationIsAllocation: \n  assumes \"a \\<in> soldAllocations N \\<Omega>\" \n  shows \"a \\<in> allocationsUniverse\"", "lemma soldAllocationIsAllocationVariant: \n  assumes \"a \\<in> soldAllocations N \\<Omega>\" \n  shows \"a \\<in> allAllocations'' (Domain a) (\\<Union>(Range a))\"", "lemma onlyGoodsAreSold: \n  assumes \"a \\<in> soldAllocations'' N \\<Omega>\" \n  shows \"\\<Union> (Range a) \\<subseteq> \\<Omega>\"", "lemma soldAllocationIsRestricted: \n  \"a \\<in> soldAllocations'' N \\<Omega> = \n   (\\<exists>aa. aa -- (seller) = a  \\<and>  aa \\<in> allAllocations'' (N \\<union> {seller}) \\<Omega>)\"", "lemma restrictionConservation:\n  \"(R +* ({x}\\<times>Y)) -- x = R -- x\"", "lemma allocatedToBuyerMeansSold: \n  assumes \"a \\<in> allocationsUniverse\" \"Domain a \\<subseteq> N-{seller}\" \"\\<Union> (Range a) \\<subseteq> \\<Omega>\" \n  shows \"a \\<in> soldAllocations'' N \\<Omega>\"", "lemma allocationCharacterization: \n  \"a \\<in> allAllocations N \\<Omega>  =  \n   (a \\<in> injectionsUniverse & Domain a \\<subseteq> N & Range a \\<in> all_partitions \\<Omega>)\"", "lemma lm01: \n  assumes \"a \\<in> soldAllocations'' N \\<Omega>\" \n  shows \"Domain a \\<subseteq> N-{seller} & a \\<in> allocationsUniverse\"", "lemma lm05: \n  assumes \"a \\<in> soldAllocations''' N \\<Omega>\" \n  shows \"a -- n \\<in> soldAllocations''' (N-{n}) \\<Omega>\"", "lemma allAllocationsEquivalenceExtended: \n  \"soldAllocations =  soldAllocations' & \n   soldAllocations' = soldAllocations'' &\n   soldAllocations'' = soldAllocations'''\"", "lemma lm06: \n  assumes \"card ((argmax\\<circ>sum) (randomBids N \\<Omega> b r) \n                                 ((argmax\\<circ>sum) b (allAllocations (N\\<union>{seller}) (set \\<Omega>)))) = 1\" \n  shows \"vcga N \\<Omega> b r = \n         (the_elem ((argmax\\<circ>sum) (randomBids N \\<Omega> b r) \n                                    ((argmax\\<circ>sum) b (allAllocations ({seller}\\<union>N) (set \\<Omega>))))) \n          -- seller\"", "lemma lm08: \n  assumes \"distinct \\<Omega>\" \"set \\<Omega> \\<noteq> {}\" \"finite N\" \n  shows \"card ((argmax\\<circ>sum) (randomBids N \\<Omega> bids random)\n                               ((argmax\\<circ>sum) bids (allAllocations (N\\<union>{seller}) (set \\<Omega>)))) = 1\"\n  (is \"card ?l=_\")", "lemma vcgaEquivalence: \n  assumes \"distinct \\<Omega>\" \"set \\<Omega> \\<noteq> {}\" \"finite N\" \n  shows \"vcga N \\<Omega> b r = vcga' N \\<Omega> b r\"", "theorem vcgaDefiniteness: \n  assumes \"distinct \\<Omega>\" \"set \\<Omega> \\<noteq> {}\" \"finite N\" \n  shows \"card (vcgas N \\<Omega> b r) = 1\"", "lemma vcgaDefinitenessVariant: \n  assumes \"distinct \\<Omega>\" \"set \\<Omega> \\<noteq> {}\" \"finite N\" \n  shows  \"card (argmax (sum (randomBids N \\<Omega> b r)) \n                       (maximalStrictAllocations N (set \\<Omega>) b)) =\n          1\"\n  (is \"card ?L=_\")", "theorem winningAllocationIsMaximal:\n  assumes \"distinct \\<Omega>\" \"set \\<Omega> \\<noteq> {}\" \"finite N\" \n  shows \"the_elem (argmax (sum (randomBids N \\<Omega> b r)) \n                          (maximalStrictAllocations N (set \\<Omega>) b)) \\<in>\n         (maximalStrictAllocations N (set \\<Omega>) b)\" \n  (is \"the_elem ?X \\<in> ?R\")", "lemma maximalAllactionWithoutSeller: \n  \"(Outside' {seller})`(maximalStrictAllocations N \\<Omega> b) \\<subseteq> soldAllocations N \\<Omega>\"", "lemma onlyGoodsAreAllocatedAuxiliary: \n  assumes \"distinct \\<Omega>\" \"set \\<Omega> \\<noteq> {}\" \"finite N\" \n  shows \"vcga' N \\<Omega> b r \\<in> soldAllocations N (set \\<Omega>)\" \n  (is \"?a \\<in> ?A\")", "theorem onlyGoodsAreAllocated: \n  assumes \"distinct \\<Omega>\" \"set \\<Omega> \\<noteq> {}\" \"finite N\" \n  shows \"vcga N \\<Omega> b r \\<in> soldAllocations N (set \\<Omega>)\" \n  (is \"_\\<in>?r\")", "lemma vcgaIsMaximalAux1: \n  assumes \"distinct \\<Omega>\" \"set \\<Omega> \\<noteq> {}\" \"finite N\" \n  shows \"\\<exists>a. ((a \\<in> (maximalStrictAllocations N (set \\<Omega>) b))  \\<and>  (vcga' N \\<Omega> b r = a -- seller)  &\n                (a \\<in> argmax (sum b) (allAllocations ({seller}\\<union>N) (set \\<Omega>))))\"", "lemma vcgaIsMaximalAux2: \n  assumes \"distinct \\<Omega>\" \"set \\<Omega> \\<noteq> {}\" \"finite N\" \n  \"\\<forall>a \\<in> allAllocations ({seller}\\<union>N) (set \\<Omega>). \\<forall> X \\<in> Range a. b (seller, X)=0\"\n  (is \"\\<forall>a\\<in>?X. _\") \n  shows \"sum b (vcga' N \\<Omega> b r) = Max{sum b a| a. a \\<in> soldAllocations N (set \\<Omega>)}\"", "theorem vcgaIsMaximal: \n  assumes \"distinct \\<Omega>\" \"set \\<Omega> \\<noteq> {}\" \"finite N\" \"\\<forall> X. b (seller, X) = 0\" \n  shows \"sum b (vcga' N \\<Omega> b r) = Max{sum b a| a. a \\<in> soldAllocations N (set \\<Omega>)}\"", "theorem vcgpDefiniteness: \n  assumes \"distinct \\<Omega>\" \"set \\<Omega> \\<noteq> {}\" \"finite N\" \n  shows \"\\<exists>! y. vcgp N \\<Omega> b r n = y\"", "lemma soldAllocationsFinite: \n  assumes \"finite N\" \"finite \\<Omega>\" \n  shows \"finite (soldAllocations N \\<Omega>)\"", "theorem NonnegPrices: \n  assumes \"distinct \\<Omega>\" \"set \\<Omega> \\<noteq> {}\" \"finite N\" \n  shows \"vcgp N \\<Omega> b r n >= (0::price)\"", "lemma allocationDisjointAuxiliary: \n  assumes \"a \\<in> allocationsUniverse\" and \"n1 \\<in> Domain a\" and \"n2 \\<in> Domain a\" and \"n1 \\<noteq> n2\" \n  shows \"a,,n1 \\<inter> a,,n2 = {}\"", "lemma allocationDisjoint: \n  assumes \"a \\<in> allocationsUniverse\" and \"n1 \\<in> Domain a\" and \"n2 \\<in> Domain a\" and \"n1 \\<noteq> n2\" \n  shows \"a,,,n1 \\<inter> a,,,n2 = {}\"", "theorem PairwiseDisjointAllocations:\n  assumes \"distinct \\<Omega>\" \"set \\<Omega> \\<noteq> {}\" \"finite N\"  \"n1 \\<noteq> n2\" \n  shows \"(vcga' N \\<Omega> b r),,,n1 \\<inter> (vcga' N \\<Omega> b r),,,n2 = {}\"", "theorem OnlyGoodsAllocated: \n  assumes \"distinct \\<Omega>\" \"set \\<Omega> \\<noteq> {}\" \"finite N\" \"g \\<in> (vcga N \\<Omega> b r),,,n\" \n  shows \"g \\<in> set \\<Omega>\"", "lemma functionCompletion: \n  assumes \"x \\<in> Domain f\" \n  shows \"toFunction f x = (f Elsee 0) x\"", "lemma lm09: \n  assumes \"fst pair \\<in> N\" \"snd pair \\<in> Pow \\<Omega> - {{}}\" \n  shows \"sum (%g. (toFunction (bidMaximizedBy a N \\<Omega>))  (fst pair, g)) \n                (finestpart (snd pair)) =\n         sum (%g. ((bidMaximizedBy a N \\<Omega>) Elsee 0) (fst pair, g)) \n                (finestpart (snd pair))\"", "lemma summedBidVectorEquivalence: \n  assumes \"x \\<in> (N \\<times> (Pow \\<Omega> - {{}}))\" \n  shows \"summedBidVector (maxbid a N \\<Omega>) N \\<Omega> x = summedBidVectorAlg (maxbidAlg a N \\<Omega>) N \\<Omega> x\"\n  (is \"?f1 ?g1 N \\<Omega> x = ?f2 ?g2 N \\<Omega> x\")", "lemma resolvingBidEquivalence: \n  assumes \"x \\<in> (N \\<times> (Pow (set \\<Omega>) - {{}}))\"  \"card N > 0\" \"distinct \\<Omega>\"\n  shows \"resolvingBid' N \\<Omega> b r x = resolvingBidAlg N \\<Omega> b r x\"", "lemma sumResolvingBidEquivalence:\n  assumes \"card N > 0\" \"distinct \\<Omega>\" \"a \\<subseteq> (N \\<times> (Pow (set \\<Omega>) - {{}}))\" \n  shows \"sum (resolvingBid' N \\<Omega> b r) a = sum (resolvingBidAlg N \\<Omega> b r) a\" \n  (is \"?L=?R\")", "lemma resolvingBidBridgingLemma: \n  assumes \"card N > 0\" \"distinct \\<Omega>\" \"a \\<subseteq> (N \\<times> (Pow (set \\<Omega>) - {{}}))\" \n  shows \"sum (resolvingBid N \\<Omega> b r) a = sum (resolvingBidAlg N \\<Omega> b r) a\" \n  (is \"?L=?R\")", "lemma allAllocationsInPowerset: \n  \"allAllocations N \\<Omega> \\<subseteq> Pow (N \\<times> (Pow \\<Omega> - {{}}))\"", "theorem maximalAllocationBridgingTheorem:\n  assumes \"finite N\" \"distinct \\<Omega>\" \n  shows \"maximalStrictAllocations N (set \\<Omega>) b = maximalStrictAllocationsAlg N \\<Omega> b\"", "theorem vcgaAlgDefinedness:\n  assumes \"distinct \\<Omega>\" \"set \\<Omega> \\<noteq> {}\" \"finite N\" \n  shows \"card (argmax (sum (randomBidsAlg N \\<Omega> b r)) (maximalStrictAllocationsAlg N \\<Omega> b)) = 1\""], "translations": [["", "lemma allAllocationsEquivalence: \n  \"allAllocations N \\<Omega> = allAllocations' N \\<Omega> & allAllocations N \\<Omega> = allAllocations'' N \\<Omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. allAllocations N \\<Omega> = allAllocations' N \\<Omega> \\<and>\n    allAllocations N \\<Omega> = allAllocations'' N \\<Omega>", "using allocationInjectionsUnivervseProperty allAllocationsIntersection"], ["proof (prove)\nusing this:\n  allAllocations ?N ?G = allAllocations' ?N ?G\n  allAllocations ?N ?G = allAllocations'' ?N ?G\n\ngoal (1 subgoal):\n 1. allAllocations N \\<Omega> = allAllocations' N \\<Omega> \\<and>\n    allAllocations N \\<Omega> = allAllocations'' N \\<Omega>", "by metis"], ["", "lemma allAllocationsVarCharacterization: \n  \"(a \\<in> allAllocations'' N \\<Omega>) = (a \\<in> allocationsUniverse& Domain a \\<subseteq> N & \\<Union>(Range a) = \\<Omega>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<in> allAllocations'' N \\<Omega>) =\n    (a \\<in> allocationsUniverse \\<and>\n     Domain a \\<subseteq> N \\<and> \\<Union> (Range a) = \\<Omega>)", "by force"], ["", "(* remove the seller from the set of all allocations *)"], ["", "abbreviation \"soldAllocations N \\<Omega> == (Outside' {seller}) ` (allAllocations (N \\<union> {seller}) \\<Omega>)\""], ["", "(* soldAllocations' and soldAllocations'' are variants of soldAllocations reflecting the different\n   formulations of allAllocations. soldAllocations''' is yet another variant. These variants are\n   used since for different proofs different variants are easier to use. *)"], ["", "abbreviation \"soldAllocations' N \\<Omega> == (Outside' {seller}) ` (allAllocations' (N \\<union> {seller}) \\<Omega>)\""], ["", "abbreviation \"soldAllocations'' N \\<Omega> == (Outside' {seller}) ` (allAllocations'' (N \\<union> {seller}) \\<Omega>)\""], ["", "abbreviation \"soldAllocations''' N \\<Omega> == \n  allocationsUniverse \\<inter> {aa. Domain aa\\<subseteq>N-{seller} & \\<Union>(Range aa)\\<subseteq>\\<Omega>}\""], ["", "lemma soldAllocationsEquivalence: \n  \"soldAllocations N \\<Omega> = soldAllocations' N \\<Omega> & \n   soldAllocations' N \\<Omega> = soldAllocations'' N \\<Omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. soldAllocations N \\<Omega> = soldAllocations' N \\<Omega> \\<and>\n    soldAllocations' N \\<Omega> = soldAllocations'' N \\<Omega>", "using allAllocationsEquivalence"], ["proof (prove)\nusing this:\n  allAllocations ?N ?\\<Omega> = allAllocations' ?N ?\\<Omega> \\<and>\n  allAllocations ?N ?\\<Omega> = allAllocations'' ?N ?\\<Omega>\n\ngoal (1 subgoal):\n 1. soldAllocations N \\<Omega> = soldAllocations' N \\<Omega> \\<and>\n    soldAllocations' N \\<Omega> = soldAllocations'' N \\<Omega>", "by metis"], ["", "corollary soldAllocationsEquivalenceVariant: \n  \"soldAllocations = soldAllocations'  & \n   soldAllocations' = soldAllocations'' & \n   soldAllocations = soldAllocations''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. soldAllocations = soldAllocations' \\<and>\n    soldAllocations' = soldAllocations'' \\<and>\n    soldAllocations = soldAllocations''", "using soldAllocationsEquivalence"], ["proof (prove)\nusing this:\n  soldAllocations ?N ?\\<Omega> = soldAllocations' ?N ?\\<Omega> \\<and>\n  soldAllocations' ?N ?\\<Omega> = soldAllocations'' ?N ?\\<Omega>\n\ngoal (1 subgoal):\n 1. soldAllocations = soldAllocations' \\<and>\n    soldAllocations' = soldAllocations'' \\<and>\n    soldAllocations = soldAllocations''", "by metis"], ["", "lemma allocationSellerMonotonicity: \n  \"soldAllocations (N-{seller}) \\<Omega> \\<subseteq> soldAllocations N \\<Omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. soldAllocations (N - {seller}) \\<Omega>\n    \\<subseteq> soldAllocations N \\<Omega>", "using Outside_def"], ["proof (prove)\nusing this:\n  Outside' ?X ?R = ?R - ?X \\<times> Range ?R\n\ngoal (1 subgoal):\n 1. soldAllocations (N - {seller}) \\<Omega>\n    \\<subseteq> soldAllocations N \\<Omega>", "by simp"], ["", "lemma allocationsUniverseCharacterization: \n  \"(a \\<in> allocationsUniverse) = (a \\<in> allAllocations'' (Domain a) (\\<Union>(Range a)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<in> allocationsUniverse) =\n    (a \\<in> allAllocations'' (Domain a) (\\<Union> (Range a)))", "by blast"], ["", "lemma allocationMonotonicity: \n  assumes \"N1 \\<subseteq> N2\" \n  shows \"allAllocations'' N1 \\<Omega> \\<subseteq> allAllocations'' N2 \\<Omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. allAllocations'' N1 \\<Omega> \\<subseteq> allAllocations'' N2 \\<Omega>", "using assms"], ["proof (prove)\nusing this:\n  N1 \\<subseteq> N2\n\ngoal (1 subgoal):\n 1. allAllocations'' N1 \\<Omega> \\<subseteq> allAllocations'' N2 \\<Omega>", "by auto"], ["", "lemma allocationWithOneParticipant: \n  assumes \"a \\<in> allAllocations'' N \\<Omega>\" \n  shows \"Domain (a -- x) \\<subseteq> N-{x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Domain (Outside' {x} a) \\<subseteq> N - {x}", "using assms Outside_def"], ["proof (prove)\nusing this:\n  a \\<in> allAllocations'' N \\<Omega>\n  Outside' ?X ?R = ?R - ?X \\<times> Range ?R\n\ngoal (1 subgoal):\n 1. Domain (Outside' {x} a) \\<subseteq> N - {x}", "by fastforce"], ["", "lemma soldAllocationIsAllocation: \n  assumes \"a \\<in> soldAllocations N \\<Omega>\" \n  shows \"a \\<in> allocationsUniverse\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> allocationsUniverse", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<in> allocationsUniverse", "obtain aa where \"a  =aa -- seller & aa \\<in> allAllocations (N\\<union>{seller}) \\<Omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>aa.\n        a = Outside' {seller} aa \\<and>\n        aa \\<in> allAllocations (N \\<union> {seller})\n                  \\<Omega> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> soldAllocations N \\<Omega>\n\ngoal (1 subgoal):\n 1. (\\<And>aa.\n        a = Outside' {seller} aa \\<and>\n        aa \\<in> allAllocations (N \\<union> {seller})\n                  \\<Omega> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  a = Outside' {seller} aa \\<and>\n  aa \\<in> allAllocations (N \\<union> {seller}) \\<Omega>\n\ngoal (1 subgoal):\n 1. a \\<in> allocationsUniverse", "then"], ["proof (chain)\npicking this:\n  a = Outside' {seller} aa \\<and>\n  aa \\<in> allAllocations (N \\<union> {seller}) \\<Omega>", "have \"a \\<subseteq> aa & aa \\<in> allocationsUniverse\""], ["proof (prove)\nusing this:\n  a = Outside' {seller} aa \\<and>\n  aa \\<in> allAllocations (N \\<union> {seller}) \\<Omega>\n\ngoal (1 subgoal):\n 1. a \\<subseteq> aa \\<and> aa \\<in> allocationsUniverse", "unfolding Outside_def"], ["proof (prove)\nusing this:\n  a = aa - {seller} \\<times> Range aa \\<and>\n  aa \\<in> allAllocations (N \\<union> {seller}) \\<Omega>\n\ngoal (1 subgoal):\n 1. a \\<subseteq> aa \\<and> aa \\<in> allocationsUniverse", "using allAllocationsIntersectionSubset"], ["proof (prove)\nusing this:\n  a = aa - {seller} \\<times> Range aa \\<and>\n  aa \\<in> allAllocations (N \\<union> {seller}) \\<Omega>\n  allAllocations ?N ?G \\<subseteq> allAllocations'' ?N ?G\n\ngoal (1 subgoal):\n 1. a \\<subseteq> aa \\<and> aa \\<in> allocationsUniverse", "by blast"], ["proof (state)\nthis:\n  a \\<subseteq> aa \\<and> aa \\<in> allocationsUniverse\n\ngoal (1 subgoal):\n 1. a \\<in> allocationsUniverse", "then"], ["proof (chain)\npicking this:\n  a \\<subseteq> aa \\<and> aa \\<in> allocationsUniverse", "show ?thesis"], ["proof (prove)\nusing this:\n  a \\<subseteq> aa \\<and> aa \\<in> allocationsUniverse\n\ngoal (1 subgoal):\n 1. a \\<in> allocationsUniverse", "using subsetAllocation"], ["proof (prove)\nusing this:\n  a \\<subseteq> aa \\<and> aa \\<in> allocationsUniverse\n  \\<lbrakk>?a \\<in> allocationsUniverse; ?c \\<subseteq> ?a\\<rbrakk>\n  \\<Longrightarrow> ?c \\<in> allocationsUniverse\n\ngoal (1 subgoal):\n 1. a \\<in> allocationsUniverse", "by blast"], ["proof (state)\nthis:\n  a \\<in> allocationsUniverse\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma soldAllocationIsAllocationVariant: \n  assumes \"a \\<in> soldAllocations N \\<Omega>\" \n  shows \"a \\<in> allAllocations'' (Domain a) (\\<Union>(Range a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> allAllocations'' (Domain a) (\\<Union> (Range a))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<in> allAllocations'' (Domain a) (\\<Union> (Range a))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> allAllocations'' (Domain a) (\\<Union> (Range a))", "using assms soldAllocationIsAllocation"], ["proof (prove)\nusing this:\n  a \\<in> soldAllocations N \\<Omega>\n  ?a \\<in> soldAllocations ?N ?\\<Omega> \\<Longrightarrow>\n  ?a \\<in> allocationsUniverse\n\ngoal (1 subgoal):\n 1. a \\<in> allAllocations'' (Domain a) (\\<Union> (Range a))", "by auto blast+"], ["proof (state)\nthis:\n  a \\<in> allAllocations'' (Domain a) (\\<Union> (Range a))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma onlyGoodsAreSold: \n  assumes \"a \\<in> soldAllocations'' N \\<Omega>\" \n  shows \"\\<Union> (Range a) \\<subseteq> \\<Omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (Range a) \\<subseteq> \\<Omega>", "using assms Outside_def"], ["proof (prove)\nusing this:\n  a \\<in> soldAllocations'' N \\<Omega>\n  Outside' ?X ?R = ?R - ?X \\<times> Range ?R\n\ngoal (1 subgoal):\n 1. \\<Union> (Range a) \\<subseteq> \\<Omega>", "by blast"], ["", "lemma soldAllocationIsRestricted: \n  \"a \\<in> soldAllocations'' N \\<Omega> = \n   (\\<exists>aa. aa -- (seller) = a  \\<and>  aa \\<in> allAllocations'' (N \\<union> {seller}) \\<Omega>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<in> soldAllocations'' N \\<Omega>) =\n    (\\<exists>aa.\n        Outside' {seller} aa = a \\<and>\n        aa \\<in> allAllocations'' (N \\<union> {seller}) \\<Omega>)", "by blast"], ["", "(* Note that +* enlarges the function by one additional pair *)"], ["", "lemma restrictionConservation:\n  \"(R +* ({x}\\<times>Y)) -- x = R -- x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Outside' {x} (R +< {x} \\<times> Y) = Outside' {x} R", "unfolding Outside_def paste_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. R - Domain ({x} \\<times> Y) \\<times> Range R \\<union> {x} \\<times> Y -\n    {x} \\<times>\n    Range\n     (R - Domain ({x} \\<times> Y) \\<times> Range R \\<union>\n      {x} \\<times> Y) =\n    R - {x} \\<times> Range R", "by blast"], ["", "lemma allocatedToBuyerMeansSold: \n  assumes \"a \\<in> allocationsUniverse\" \"Domain a \\<subseteq> N-{seller}\" \"\\<Union> (Range a) \\<subseteq> \\<Omega>\" \n  shows \"a \\<in> soldAllocations'' N \\<Omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> soldAllocations'' N \\<Omega>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<in> soldAllocations'' N \\<Omega>", "let ?i = \"seller\""], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<in> soldAllocations'' N \\<Omega>", "let ?Y = \"{\\<Omega>-\\<Union> (Range a)}-{{}}\""], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<in> soldAllocations'' N \\<Omega>", "let ?b = \"{?i}\\<times>?Y\""], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<in> soldAllocations'' N \\<Omega>", "let ?aa = \"a\\<union>?b\""], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<in> soldAllocations'' N \\<Omega>", "let ?aa' = \"a +* ?b\""], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<in> soldAllocations'' N \\<Omega>", "have\n  1: \"a \\<in> allocationsUniverse\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> allocationsUniverse", "using assms(1)"], ["proof (prove)\nusing this:\n  a \\<in> allocationsUniverse\n\ngoal (1 subgoal):\n 1. a \\<in> allocationsUniverse", "by fast"], ["proof (state)\nthis:\n  a \\<in> allocationsUniverse\n\ngoal (1 subgoal):\n 1. a \\<in> soldAllocations'' N \\<Omega>", "have \"?b \\<subseteq> {(?i,\\<Omega>-\\<Union>(Range a))} - {(?i, {})}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})\n    \\<subseteq> {(seller, \\<Omega> - \\<Union> (Range a))} - {(seller, {})}", "by fastforce"], ["proof (state)\nthis:\n  {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})\n  \\<subseteq> {(seller, \\<Omega> - \\<Union> (Range a))} - {(seller, {})}\n\ngoal (1 subgoal):\n 1. a \\<in> soldAllocations'' N \\<Omega>", "then"], ["proof (chain)\npicking this:\n  {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})\n  \\<subseteq> {(seller, \\<Omega> - \\<Union> (Range a))} - {(seller, {})}", "have \n  2: \"?b \\<in> allocationsUniverse\""], ["proof (prove)\nusing this:\n  {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})\n  \\<subseteq> {(seller, \\<Omega> - \\<Union> (Range a))} - {(seller, {})}\n\ngoal (1 subgoal):\n 1. {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})\n    \\<in> allocationsUniverse", "using allocationUniverseProperty subsetAllocation"], ["proof (prove)\nusing this:\n  {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})\n  \\<subseteq> {(seller, \\<Omega> - \\<Union> (Range a))} - {(seller, {})}\n  {(?x, ?X)} - {(?x, {})} \\<in> allocationsUniverse\n  \\<lbrakk>?a \\<in> allocationsUniverse; ?c \\<subseteq> ?a\\<rbrakk>\n  \\<Longrightarrow> ?c \\<in> allocationsUniverse\n\ngoal (1 subgoal):\n 1. {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})\n    \\<in> allocationsUniverse", "by (metis(no_types))"], ["proof (state)\nthis:\n  {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})\n  \\<in> allocationsUniverse\n\ngoal (1 subgoal):\n 1. a \\<in> soldAllocations'' N \\<Omega>", "have \n  3: \"\\<Union> (Range a) \\<inter> \\<Union> (Range ?b) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (Range a) \\<inter>\n    \\<Union>\n     (Range ({seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}}))) =\n    {}", "by blast"], ["proof (state)\nthis:\n  \\<Union> (Range a) \\<inter>\n  \\<Union>\n   (Range ({seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}}))) =\n  {}\n\ngoal (1 subgoal):\n 1. a \\<in> soldAllocations'' N \\<Omega>", "have \n  4: \"Domain a \\<inter> Domain ?b ={}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Domain a \\<inter>\n    Domain ({seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})) =\n    {}", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> allocationsUniverse\n  Domain a \\<subseteq> N - {seller}\n  \\<Union> (Range a) \\<subseteq> \\<Omega>\n\ngoal (1 subgoal):\n 1. Domain a \\<inter>\n    Domain ({seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})) =\n    {}", "by fast"], ["proof (state)\nthis:\n  Domain a \\<inter>\n  Domain ({seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})) =\n  {}\n\ngoal (1 subgoal):\n 1. a \\<in> soldAllocations'' N \\<Omega>", "have \"?aa \\<in> allocationsUniverse\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<union> {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})\n    \\<in> allocationsUniverse", "using 1 2 3 4"], ["proof (prove)\nusing this:\n  a \\<in> allocationsUniverse\n  {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})\n  \\<in> allocationsUniverse\n  \\<Union> (Range a) \\<inter>\n  \\<Union>\n   (Range ({seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}}))) =\n  {}\n  Domain a \\<inter>\n  Domain ({seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})) =\n  {}\n\ngoal (1 subgoal):\n 1. a \\<union> {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})\n    \\<in> allocationsUniverse", "by (rule allocationUnion)"], ["proof (state)\nthis:\n  a \\<union> {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})\n  \\<in> allocationsUniverse\n\ngoal (1 subgoal):\n 1. a \\<in> soldAllocations'' N \\<Omega>", "then"], ["proof (chain)\npicking this:\n  a \\<union> {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})\n  \\<in> allocationsUniverse", "have \"?aa \\<in> allAllocations'' (Domain ?aa) (\\<Union> (Range ?aa))\""], ["proof (prove)\nusing this:\n  a \\<union> {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})\n  \\<in> allocationsUniverse\n\ngoal (1 subgoal):\n 1. a \\<union> {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})\n    \\<in> allAllocations''\n           (Domain\n             (a \\<union>\n              {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})))\n           (\\<Union>\n             (Range\n               (a \\<union>\n                {seller} \\<times>\n                ({\\<Omega> - \\<Union> (Range a)} - {{}}))))", "unfolding allocationsUniverseCharacterization"], ["proof (prove)\nusing this:\n  a \\<union> {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})\n  \\<in> allAllocations''\n         (Domain\n           (a \\<union>\n            {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})))\n         (\\<Union>\n           (Range\n             (a \\<union>\n              {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}}))))\n\ngoal (1 subgoal):\n 1. a \\<union> {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})\n    \\<in> allAllocations''\n           (Domain\n             (a \\<union>\n              {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})))\n           (\\<Union>\n             (Range\n               (a \\<union>\n                {seller} \\<times>\n                ({\\<Omega> - \\<Union> (Range a)} - {{}}))))", "by metis"], ["proof (state)\nthis:\n  a \\<union> {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})\n  \\<in> allAllocations''\n         (Domain\n           (a \\<union>\n            {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})))\n         (\\<Union>\n           (Range\n             (a \\<union>\n              {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}}))))\n\ngoal (1 subgoal):\n 1. a \\<in> soldAllocations'' N \\<Omega>", "then"], ["proof (chain)\npicking this:\n  a \\<union> {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})\n  \\<in> allAllocations''\n         (Domain\n           (a \\<union>\n            {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})))\n         (\\<Union>\n           (Range\n             (a \\<union>\n              {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}}))))", "have \"?aa \\<in> allAllocations'' (N\\<union>{?i}) (\\<Union> (Range ?aa))\""], ["proof (prove)\nusing this:\n  a \\<union> {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})\n  \\<in> allAllocations''\n         (Domain\n           (a \\<union>\n            {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})))\n         (\\<Union>\n           (Range\n             (a \\<union>\n              {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}}))))\n\ngoal (1 subgoal):\n 1. a \\<union> {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})\n    \\<in> allAllocations'' (N \\<union> {seller})\n           (\\<Union>\n             (Range\n               (a \\<union>\n                {seller} \\<times>\n                ({\\<Omega> - \\<Union> (Range a)} - {{}}))))", "using allocationMonotonicity assms paste_def"], ["proof (prove)\nusing this:\n  a \\<union> {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})\n  \\<in> allAllocations''\n         (Domain\n           (a \\<union>\n            {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})))\n         (\\<Union>\n           (Range\n             (a \\<union>\n              {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}}))))\n  ?N1.0 \\<subseteq> ?N2.0 \\<Longrightarrow>\n  allAllocations'' ?N1.0 ?\\<Omega>\n  \\<subseteq> allAllocations'' ?N2.0 ?\\<Omega>\n  a \\<in> allocationsUniverse\n  Domain a \\<subseteq> N - {seller}\n  \\<Union> (Range a) \\<subseteq> \\<Omega>\n  ?P +< ?Q = Outside' (Domain ?Q) ?P \\<union> ?Q\n\ngoal (1 subgoal):\n 1. a \\<union> {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})\n    \\<in> allAllocations'' (N \\<union> {seller})\n           (\\<Union>\n             (Range\n               (a \\<union>\n                {seller} \\<times>\n                ({\\<Omega> - \\<Union> (Range a)} - {{}}))))", "by auto"], ["proof (state)\nthis:\n  a \\<union> {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})\n  \\<in> allAllocations'' (N \\<union> {seller})\n         (\\<Union>\n           (Range\n             (a \\<union>\n              {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}}))))\n\ngoal (1 subgoal):\n 1. a \\<in> soldAllocations'' N \\<Omega>", "moreover"], ["proof (state)\nthis:\n  a \\<union> {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})\n  \\<in> allAllocations'' (N \\<union> {seller})\n         (\\<Union>\n           (Range\n             (a \\<union>\n              {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}}))))\n\ngoal (1 subgoal):\n 1. a \\<in> soldAllocations'' N \\<Omega>", "have \"Range ?aa = Range a \\<union> ?Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Range\n     (a \\<union>\n      {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})) =\n    Range a \\<union> ({\\<Omega> - \\<Union> (Range a)} - {{}})", "by blast"], ["proof (state)\nthis:\n  Range\n   (a \\<union> {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})) =\n  Range a \\<union> ({\\<Omega> - \\<Union> (Range a)} - {{}})\n\ngoal (1 subgoal):\n 1. a \\<in> soldAllocations'' N \\<Omega>", "then"], ["proof (chain)\npicking this:\n  Range\n   (a \\<union> {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})) =\n  Range a \\<union> ({\\<Omega> - \\<Union> (Range a)} - {{}})", "moreover"], ["proof (chain)\npicking this:\n  Range\n   (a \\<union> {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})) =\n  Range a \\<union> ({\\<Omega> - \\<Union> (Range a)} - {{}})", "have \"\\<Union> (Range ?aa) = \\<Omega>\""], ["proof (prove)\nusing this:\n  Range\n   (a \\<union> {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})) =\n  Range a \\<union> ({\\<Omega> - \\<Union> (Range a)} - {{}})\n\ngoal (1 subgoal):\n 1. \\<Union>\n     (Range\n       (a \\<union>\n        {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}}))) =\n    \\<Omega>", "using Un_Diff_cancel Un_Diff_cancel2 Union_Un_distrib Union_empty Union_insert"], ["proof (prove)\nusing this:\n  Range\n   (a \\<union> {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})) =\n  Range a \\<union> ({\\<Omega> - \\<Union> (Range a)} - {{}})\n  ?A \\<union> (?B - ?A) = ?A \\<union> ?B\n  ?B - ?A \\<union> ?A = ?B \\<union> ?A\n  \\<Union> (?A \\<union> ?B) = \\<Union> ?A \\<union> \\<Union> ?B\n  \\<Union> {} = {}\n  \\<Union> (insert ?a ?B) = ?a \\<union> \\<Union> ?B\n\ngoal (1 subgoal):\n 1. \\<Union>\n     (Range\n       (a \\<union>\n        {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}}))) =\n    \\<Omega>", "by (metis (lifting, no_types) assms(3) cSup_singleton subset_Un_eq)"], ["proof (state)\nthis:\n  \\<Union>\n   (Range\n     (a \\<union>\n      {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}}))) =\n  \\<Omega>\n\ngoal (1 subgoal):\n 1. a \\<in> soldAllocations'' N \\<Omega>", "moreover"], ["proof (state)\nthis:\n  \\<Union>\n   (Range\n     (a \\<union>\n      {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}}))) =\n  \\<Omega>\n\ngoal (1 subgoal):\n 1. a \\<in> soldAllocations'' N \\<Omega>", "have \"?aa' = ?aa\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a +< {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}}) =\n    a \\<union> {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})", "using 4"], ["proof (prove)\nusing this:\n  Domain a \\<inter>\n  Domain ({seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})) =\n  {}\n\ngoal (1 subgoal):\n 1. a +< {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}}) =\n    a \\<union> {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})", "by (rule paste_disj_domains)"], ["proof (state)\nthis:\n  a +< {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}}) =\n  a \\<union> {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})\n\ngoal (1 subgoal):\n 1. a \\<in> soldAllocations'' N \\<Omega>", "ultimately"], ["proof (chain)\npicking this:\n  a \\<union> {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})\n  \\<in> allAllocations'' (N \\<union> {seller})\n         (\\<Union>\n           (Range\n             (a \\<union>\n              {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}}))))\n  Range\n   (a \\<union> {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})) =\n  Range a \\<union> ({\\<Omega> - \\<Union> (Range a)} - {{}})\n  \\<Union>\n   (Range\n     (a \\<union>\n      {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}}))) =\n  \\<Omega>\n  a +< {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}}) =\n  a \\<union> {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})", "have \"?aa' \\<in> allAllocations'' (N\\<union>{?i}) \\<Omega>\""], ["proof (prove)\nusing this:\n  a \\<union> {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})\n  \\<in> allAllocations'' (N \\<union> {seller})\n         (\\<Union>\n           (Range\n             (a \\<union>\n              {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}}))))\n  Range\n   (a \\<union> {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})) =\n  Range a \\<union> ({\\<Omega> - \\<Union> (Range a)} - {{}})\n  \\<Union>\n   (Range\n     (a \\<union>\n      {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}}))) =\n  \\<Omega>\n  a +< {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}}) =\n  a \\<union> {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})\n\ngoal (1 subgoal):\n 1. a +< {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})\n    \\<in> allAllocations'' (N \\<union> {seller}) \\<Omega>", "by simp"], ["proof (state)\nthis:\n  a +< {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})\n  \\<in> allAllocations'' (N \\<union> {seller}) \\<Omega>\n\ngoal (1 subgoal):\n 1. a \\<in> soldAllocations'' N \\<Omega>", "moreover"], ["proof (state)\nthis:\n  a +< {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})\n  \\<in> allAllocations'' (N \\<union> {seller}) \\<Omega>\n\ngoal (1 subgoal):\n 1. a \\<in> soldAllocations'' N \\<Omega>", "have \"Domain ?b \\<subseteq> {?i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Domain ({seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}}))\n    \\<subseteq> {seller}", "by fast"], ["proof (state)\nthis:\n  Domain ({seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}}))\n  \\<subseteq> {seller}\n\ngoal (1 subgoal):\n 1. a \\<in> soldAllocations'' N \\<Omega>", "have \"?aa' -- ?i = a -- ?i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (a +< {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})) =\n    Outside' {seller} a", "by (rule restrictionConservation)"], ["proof (state)\nthis:\n  Outside' {seller}\n   (a +< {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})) =\n  Outside' {seller} a\n\ngoal (1 subgoal):\n 1. a \\<in> soldAllocations'' N \\<Omega>", "moreover"], ["proof (state)\nthis:\n  Outside' {seller}\n   (a +< {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})) =\n  Outside' {seller} a\n\ngoal (1 subgoal):\n 1. a \\<in> soldAllocations'' N \\<Omega>", "have \"... = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Outside' {seller} a = a", "using Outside_def assms(2)"], ["proof (prove)\nusing this:\n  Outside' ?X ?R = ?R - ?X \\<times> Range ?R\n  Domain a \\<subseteq> N - {seller}\n\ngoal (1 subgoal):\n 1. Outside' {seller} a = a", "by auto"], ["proof (state)\nthis:\n  Outside' {seller} a = a\n\ngoal (1 subgoal):\n 1. a \\<in> soldAllocations'' N \\<Omega>", "ultimately"], ["proof (chain)\npicking this:\n  a +< {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})\n  \\<in> allAllocations'' (N \\<union> {seller}) \\<Omega>\n  Outside' {seller}\n   (a +< {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})) =\n  Outside' {seller} a\n  Outside' {seller} a = a", "show ?thesis"], ["proof (prove)\nusing this:\n  a +< {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})\n  \\<in> allAllocations'' (N \\<union> {seller}) \\<Omega>\n  Outside' {seller}\n   (a +< {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})) =\n  Outside' {seller} a\n  Outside' {seller} a = a\n\ngoal (1 subgoal):\n 1. a \\<in> soldAllocations'' N \\<Omega>", "using soldAllocationIsRestricted"], ["proof (prove)\nusing this:\n  a +< {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})\n  \\<in> allAllocations'' (N \\<union> {seller}) \\<Omega>\n  Outside' {seller}\n   (a +< {seller} \\<times> ({\\<Omega> - \\<Union> (Range a)} - {{}})) =\n  Outside' {seller} a\n  Outside' {seller} a = a\n  (?a \\<in> soldAllocations'' ?N ?\\<Omega>) =\n  (\\<exists>aa.\n      Outside' {seller} aa = ?a \\<and>\n      aa \\<in> allAllocations'' (?N \\<union> {seller}) ?\\<Omega>)\n\ngoal (1 subgoal):\n 1. a \\<in> soldAllocations'' N \\<Omega>", "by auto"], ["proof (state)\nthis:\n  a \\<in> soldAllocations'' N \\<Omega>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma allocationCharacterization: \n  \"a \\<in> allAllocations N \\<Omega>  =  \n   (a \\<in> injectionsUniverse & Domain a \\<subseteq> N & Range a \\<in> all_partitions \\<Omega>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<in> allAllocations N \\<Omega>) =\n    (a \\<in> injectionsUniverse \\<and>\n     Domain a \\<subseteq> N \\<and> Range a \\<in> all_partitions \\<Omega>)", "by (metis (full_types) posssibleAllocationsRelCharacterization)"], ["", "(* The lemmas lm01, lm02, lm03, and lm04 are used in order to prove\n   lemma soldAllocationVariantEquivalence   *)"], ["", "lemma lm01: \n  assumes \"a \\<in> soldAllocations'' N \\<Omega>\" \n  shows \"Domain a \\<subseteq> N-{seller} & a \\<in> allocationsUniverse\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Domain a \\<subseteq> N - {seller} \\<and> a \\<in> allocationsUniverse", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Domain a \\<subseteq> N - {seller} \\<and> a \\<in> allocationsUniverse", "let ?i = \"seller\""], ["proof (state)\ngoal (1 subgoal):\n 1. Domain a \\<subseteq> N - {seller} \\<and> a \\<in> allocationsUniverse", "obtain aa where\n  0: \"a = aa -- ?i & aa \\<in> allAllocations'' (N \\<union> {?i}) \\<Omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>aa.\n        a = Outside' {seller} aa \\<and>\n        aa \\<in> allAllocations'' (N \\<union> {seller})\n                  \\<Omega> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms(1) soldAllocationIsRestricted"], ["proof (prove)\nusing this:\n  a \\<in> soldAllocations'' N \\<Omega>\n  (?a \\<in> soldAllocations'' ?N ?\\<Omega>) =\n  (\\<exists>aa.\n      Outside' {seller} aa = ?a \\<and>\n      aa \\<in> allAllocations'' (?N \\<union> {seller}) ?\\<Omega>)\n\ngoal (1 subgoal):\n 1. (\\<And>aa.\n        a = Outside' {seller} aa \\<and>\n        aa \\<in> allAllocations'' (N \\<union> {seller})\n                  \\<Omega> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  a = Outside' {seller} aa \\<and>\n  aa \\<in> allAllocations'' (N \\<union> {seller}) \\<Omega>\n\ngoal (1 subgoal):\n 1. Domain a \\<subseteq> N - {seller} \\<and> a \\<in> allocationsUniverse", "then"], ["proof (chain)\npicking this:\n  a = Outside' {seller} aa \\<and>\n  aa \\<in> allAllocations'' (N \\<union> {seller}) \\<Omega>", "have \"Domain aa \\<subseteq> N \\<union> {?i}\""], ["proof (prove)\nusing this:\n  a = Outside' {seller} aa \\<and>\n  aa \\<in> allAllocations'' (N \\<union> {seller}) \\<Omega>\n\ngoal (1 subgoal):\n 1. Domain aa \\<subseteq> N \\<union> {seller}", "using allocationCharacterization"], ["proof (prove)\nusing this:\n  a = Outside' {seller} aa \\<and>\n  aa \\<in> allAllocations'' (N \\<union> {seller}) \\<Omega>\n  (?a \\<in> allAllocations ?N ?\\<Omega>) =\n  (?a \\<in> injectionsUniverse \\<and>\n   Domain ?a \\<subseteq> ?N \\<and> Range ?a \\<in> all_partitions ?\\<Omega>)\n\ngoal (1 subgoal):\n 1. Domain aa \\<subseteq> N \\<union> {seller}", "by blast"], ["proof (state)\nthis:\n  Domain aa \\<subseteq> N \\<union> {seller}\n\ngoal (1 subgoal):\n 1. Domain a \\<subseteq> N - {seller} \\<and> a \\<in> allocationsUniverse", "then"], ["proof (chain)\npicking this:\n  Domain aa \\<subseteq> N \\<union> {seller}", "have \"Domain a \\<subseteq> N - {?i}\""], ["proof (prove)\nusing this:\n  Domain aa \\<subseteq> N \\<union> {seller}\n\ngoal (1 subgoal):\n 1. Domain a \\<subseteq> N - {seller}", "using 0 Outside_def"], ["proof (prove)\nusing this:\n  Domain aa \\<subseteq> N \\<union> {seller}\n  a = Outside' {seller} aa \\<and>\n  aa \\<in> allAllocations'' (N \\<union> {seller}) \\<Omega>\n  Outside' ?X ?R = ?R - ?X \\<times> Range ?R\n\ngoal (1 subgoal):\n 1. Domain a \\<subseteq> N - {seller}", "by blast"], ["proof (state)\nthis:\n  Domain a \\<subseteq> N - {seller}\n\ngoal (1 subgoal):\n 1. Domain a \\<subseteq> N - {seller} \\<and> a \\<in> allocationsUniverse", "moreover"], ["proof (state)\nthis:\n  Domain a \\<subseteq> N - {seller}\n\ngoal (1 subgoal):\n 1. Domain a \\<subseteq> N - {seller} \\<and> a \\<in> allocationsUniverse", "have \"a \\<in> soldAllocations N \\<Omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> soldAllocations N \\<Omega>", "using assms soldAllocationsEquivalenceVariant"], ["proof (prove)\nusing this:\n  a \\<in> soldAllocations'' N \\<Omega>\n  soldAllocations = soldAllocations' \\<and>\n  soldAllocations' = soldAllocations'' \\<and>\n  soldAllocations = soldAllocations''\n\ngoal (1 subgoal):\n 1. a \\<in> soldAllocations N \\<Omega>", "by metis"], ["proof (state)\nthis:\n  a \\<in> soldAllocations N \\<Omega>\n\ngoal (1 subgoal):\n 1. Domain a \\<subseteq> N - {seller} \\<and> a \\<in> allocationsUniverse", "then"], ["proof (chain)\npicking this:\n  a \\<in> soldAllocations N \\<Omega>", "moreover"], ["proof (chain)\npicking this:\n  a \\<in> soldAllocations N \\<Omega>", "have \"a \\<in> allocationsUniverse\""], ["proof (prove)\nusing this:\n  a \\<in> soldAllocations N \\<Omega>\n\ngoal (1 subgoal):\n 1. a \\<in> allocationsUniverse", "using soldAllocationIsAllocation"], ["proof (prove)\nusing this:\n  a \\<in> soldAllocations N \\<Omega>\n  ?a \\<in> soldAllocations ?N ?\\<Omega> \\<Longrightarrow>\n  ?a \\<in> allocationsUniverse\n\ngoal (1 subgoal):\n 1. a \\<in> allocationsUniverse", "by blast"], ["proof (state)\nthis:\n  a \\<in> allocationsUniverse\n\ngoal (1 subgoal):\n 1. Domain a \\<subseteq> N - {seller} \\<and> a \\<in> allocationsUniverse", "ultimately"], ["proof (chain)\npicking this:\n  Domain a \\<subseteq> N - {seller}\n  a \\<in> soldAllocations N \\<Omega>\n  a \\<in> allocationsUniverse", "show ?thesis"], ["proof (prove)\nusing this:\n  Domain a \\<subseteq> N - {seller}\n  a \\<in> soldAllocations N \\<Omega>\n  a \\<in> allocationsUniverse\n\ngoal (1 subgoal):\n 1. Domain a \\<subseteq> N - {seller} \\<and> a \\<in> allocationsUniverse", "by blast"], ["proof (state)\nthis:\n  Domain a \\<subseteq> N - {seller} \\<and> a \\<in> allocationsUniverse\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary lm02: \n  assumes \"a \\<in> soldAllocations'' N \\<Omega>\" \n  shows \"a \\<in> allocationsUniverse & Domain a \\<subseteq> N-{seller} & \\<Union> (Range a) \\<subseteq> \\<Omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> allocationsUniverse \\<and>\n    Domain a \\<subseteq> N - {seller} \\<and>\n    \\<Union> (Range a) \\<subseteq> \\<Omega>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<in> allocationsUniverse \\<and>\n    Domain a \\<subseteq> N - {seller} \\<and>\n    \\<Union> (Range a) \\<subseteq> \\<Omega>", "have \"a \\<in> allocationsUniverse\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> allocationsUniverse", "using assms lm01 [of a]"], ["proof (prove)\nusing this:\n  a \\<in> soldAllocations'' N \\<Omega>\n  a \\<in> soldAllocations'' ?N ?\\<Omega> \\<Longrightarrow>\n  Domain a \\<subseteq> ?N - {seller} \\<and> a \\<in> allocationsUniverse\n\ngoal (1 subgoal):\n 1. a \\<in> allocationsUniverse", "by blast"], ["proof (state)\nthis:\n  a \\<in> allocationsUniverse\n\ngoal (1 subgoal):\n 1. a \\<in> allocationsUniverse \\<and>\n    Domain a \\<subseteq> N - {seller} \\<and>\n    \\<Union> (Range a) \\<subseteq> \\<Omega>", "moreover"], ["proof (state)\nthis:\n  a \\<in> allocationsUniverse\n\ngoal (1 subgoal):\n 1. a \\<in> allocationsUniverse \\<and>\n    Domain a \\<subseteq> N - {seller} \\<and>\n    \\<Union> (Range a) \\<subseteq> \\<Omega>", "have \"Domain a \\<subseteq> N-{seller}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Domain a \\<subseteq> N - {seller}", "using assms lm01"], ["proof (prove)\nusing this:\n  a \\<in> soldAllocations'' N \\<Omega>\n  ?a \\<in> soldAllocations'' ?N ?\\<Omega> \\<Longrightarrow>\n  Domain ?a \\<subseteq> ?N - {seller} \\<and> ?a \\<in> allocationsUniverse\n\ngoal (1 subgoal):\n 1. Domain a \\<subseteq> N - {seller}", "by blast"], ["proof (state)\nthis:\n  Domain a \\<subseteq> N - {seller}\n\ngoal (1 subgoal):\n 1. a \\<in> allocationsUniverse \\<and>\n    Domain a \\<subseteq> N - {seller} \\<and>\n    \\<Union> (Range a) \\<subseteq> \\<Omega>", "moreover"], ["proof (state)\nthis:\n  Domain a \\<subseteq> N - {seller}\n\ngoal (1 subgoal):\n 1. a \\<in> allocationsUniverse \\<and>\n    Domain a \\<subseteq> N - {seller} \\<and>\n    \\<Union> (Range a) \\<subseteq> \\<Omega>", "have \"\\<Union> (Range a) \\<subseteq> \\<Omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (Range a) \\<subseteq> \\<Omega>", "using assms onlyGoodsAreSold"], ["proof (prove)\nusing this:\n  a \\<in> soldAllocations'' N \\<Omega>\n  ?a \\<in> soldAllocations'' ?N ?\\<Omega> \\<Longrightarrow>\n  \\<Union> (Range ?a) \\<subseteq> ?\\<Omega>\n\ngoal (1 subgoal):\n 1. \\<Union> (Range a) \\<subseteq> \\<Omega>", "by blast"], ["proof (state)\nthis:\n  \\<Union> (Range a) \\<subseteq> \\<Omega>\n\ngoal (1 subgoal):\n 1. a \\<in> allocationsUniverse \\<and>\n    Domain a \\<subseteq> N - {seller} \\<and>\n    \\<Union> (Range a) \\<subseteq> \\<Omega>", "ultimately"], ["proof (chain)\npicking this:\n  a \\<in> allocationsUniverse\n  Domain a \\<subseteq> N - {seller}\n  \\<Union> (Range a) \\<subseteq> \\<Omega>", "show ?thesis"], ["proof (prove)\nusing this:\n  a \\<in> allocationsUniverse\n  Domain a \\<subseteq> N - {seller}\n  \\<Union> (Range a) \\<subseteq> \\<Omega>\n\ngoal (1 subgoal):\n 1. a \\<in> allocationsUniverse \\<and>\n    Domain a \\<subseteq> N - {seller} \\<and>\n    \\<Union> (Range a) \\<subseteq> \\<Omega>", "by blast"], ["proof (state)\nthis:\n  a \\<in> allocationsUniverse \\<and>\n  Domain a \\<subseteq> N - {seller} \\<and>\n  \\<Union> (Range a) \\<subseteq> \\<Omega>\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary lm03:\n  \"(a \\<in> soldAllocations'' N \\<Omega>) =\n   (a \\<in> allocationsUniverse & a \\<in> {aa. Domain aa \\<subseteq> N-{seller} & \\<Union> (Range aa) \\<subseteq> \\<Omega>})\" \n  (is \"?L = ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<in> soldAllocations'' N \\<Omega>) =\n    (a \\<in> allocationsUniverse \\<and>\n     a \\<in> {aa.\n              Domain aa \\<subseteq> N - {seller} \\<and>\n              \\<Union> (Range aa) \\<subseteq> \\<Omega>})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (a \\<in> soldAllocations'' N \\<Omega>) =\n    (a \\<in> allocationsUniverse \\<and>\n     a \\<in> {aa.\n              Domain aa \\<subseteq> N - {seller} \\<and>\n              \\<Union> (Range aa) \\<subseteq> \\<Omega>})", "have \"(a\\<in>soldAllocations'' N \\<Omega>) =\n        (a\\<in>allocationsUniverse& Domain a \\<subseteq> N-{seller} & \\<Union> (Range a) \\<subseteq> \\<Omega>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<in> soldAllocations'' N \\<Omega>) =\n    (a \\<in> allocationsUniverse \\<and>\n     Domain a \\<subseteq> N - {seller} \\<and>\n     \\<Union> (Range a) \\<subseteq> \\<Omega>)", "using lm02 allocatedToBuyerMeansSold"], ["proof (prove)\nusing this:\n  ?a \\<in> soldAllocations'' ?N ?\\<Omega> \\<Longrightarrow>\n  ?a \\<in> allocationsUniverse \\<and>\n  Domain ?a \\<subseteq> ?N - {seller} \\<and>\n  \\<Union> (Range ?a) \\<subseteq> ?\\<Omega>\n  \\<lbrakk>?a \\<in> allocationsUniverse;\n   Domain ?a \\<subseteq> ?N - {seller};\n   \\<Union> (Range ?a) \\<subseteq> ?\\<Omega>\\<rbrakk>\n  \\<Longrightarrow> ?a \\<in> soldAllocations'' ?N ?\\<Omega>\n\ngoal (1 subgoal):\n 1. (a \\<in> soldAllocations'' N \\<Omega>) =\n    (a \\<in> allocationsUniverse \\<and>\n     Domain a \\<subseteq> N - {seller} \\<and>\n     \\<Union> (Range a) \\<subseteq> \\<Omega>)", "by (metis (mono_tags))"], ["proof (state)\nthis:\n  (a \\<in> soldAllocations'' N \\<Omega>) =\n  (a \\<in> allocationsUniverse \\<and>\n   Domain a \\<subseteq> N - {seller} \\<and>\n   \\<Union> (Range a) \\<subseteq> \\<Omega>)\n\ngoal (1 subgoal):\n 1. (a \\<in> soldAllocations'' N \\<Omega>) =\n    (a \\<in> allocationsUniverse \\<and>\n     a \\<in> {aa.\n              Domain aa \\<subseteq> N - {seller} \\<and>\n              \\<Union> (Range aa) \\<subseteq> \\<Omega>})", "then"], ["proof (chain)\npicking this:\n  (a \\<in> soldAllocations'' N \\<Omega>) =\n  (a \\<in> allocationsUniverse \\<and>\n   Domain a \\<subseteq> N - {seller} \\<and>\n   \\<Union> (Range a) \\<subseteq> \\<Omega>)", "have \"?L = (a\\<in>allocationsUniverse& Domain a \\<subseteq> N-{seller} & \\<Union> (Range a) \\<subseteq> \\<Omega>)\""], ["proof (prove)\nusing this:\n  (a \\<in> soldAllocations'' N \\<Omega>) =\n  (a \\<in> allocationsUniverse \\<and>\n   Domain a \\<subseteq> N - {seller} \\<and>\n   \\<Union> (Range a) \\<subseteq> \\<Omega>)\n\ngoal (1 subgoal):\n 1. (a \\<in> soldAllocations'' N \\<Omega>) =\n    (a \\<in> allocationsUniverse \\<and>\n     Domain a \\<subseteq> N - {seller} \\<and>\n     \\<Union> (Range a) \\<subseteq> \\<Omega>)", "by fast"], ["proof (state)\nthis:\n  (a \\<in> soldAllocations'' N \\<Omega>) =\n  (a \\<in> allocationsUniverse \\<and>\n   Domain a \\<subseteq> N - {seller} \\<and>\n   \\<Union> (Range a) \\<subseteq> \\<Omega>)\n\ngoal (1 subgoal):\n 1. (a \\<in> soldAllocations'' N \\<Omega>) =\n    (a \\<in> allocationsUniverse \\<and>\n     a \\<in> {aa.\n              Domain aa \\<subseteq> N - {seller} \\<and>\n              \\<Union> (Range aa) \\<subseteq> \\<Omega>})", "moreover"], ["proof (state)\nthis:\n  (a \\<in> soldAllocations'' N \\<Omega>) =\n  (a \\<in> allocationsUniverse \\<and>\n   Domain a \\<subseteq> N - {seller} \\<and>\n   \\<Union> (Range a) \\<subseteq> \\<Omega>)\n\ngoal (1 subgoal):\n 1. (a \\<in> soldAllocations'' N \\<Omega>) =\n    (a \\<in> allocationsUniverse \\<and>\n     a \\<in> {aa.\n              Domain aa \\<subseteq> N - {seller} \\<and>\n              \\<Union> (Range aa) \\<subseteq> \\<Omega>})", "have \"... = ?R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<in> allocationsUniverse \\<and>\n     Domain a \\<subseteq> N - {seller} \\<and>\n     \\<Union> (Range a) \\<subseteq> \\<Omega>) =\n    (a \\<in> allocationsUniverse \\<and>\n     a \\<in> {aa.\n              Domain aa \\<subseteq> N - {seller} \\<and>\n              \\<Union> (Range aa) \\<subseteq> \\<Omega>})", "using mem_Collect_eq"], ["proof (prove)\nusing this:\n  (?a \\<in> Collect ?P) = ?P ?a\n\ngoal (1 subgoal):\n 1. (a \\<in> allocationsUniverse \\<and>\n     Domain a \\<subseteq> N - {seller} \\<and>\n     \\<Union> (Range a) \\<subseteq> \\<Omega>) =\n    (a \\<in> allocationsUniverse \\<and>\n     a \\<in> {aa.\n              Domain aa \\<subseteq> N - {seller} \\<and>\n              \\<Union> (Range aa) \\<subseteq> \\<Omega>})", "by (metis (lifting, no_types))"], ["proof (state)\nthis:\n  (a \\<in> allocationsUniverse \\<and>\n   Domain a \\<subseteq> N - {seller} \\<and>\n   \\<Union> (Range a) \\<subseteq> \\<Omega>) =\n  (a \\<in> allocationsUniverse \\<and>\n   a \\<in> {aa.\n            Domain aa \\<subseteq> N - {seller} \\<and>\n            \\<Union> (Range aa) \\<subseteq> \\<Omega>})\n\ngoal (1 subgoal):\n 1. (a \\<in> soldAllocations'' N \\<Omega>) =\n    (a \\<in> allocationsUniverse \\<and>\n     a \\<in> {aa.\n              Domain aa \\<subseteq> N - {seller} \\<and>\n              \\<Union> (Range aa) \\<subseteq> \\<Omega>})", "ultimately"], ["proof (chain)\npicking this:\n  (a \\<in> soldAllocations'' N \\<Omega>) =\n  (a \\<in> allocationsUniverse \\<and>\n   Domain a \\<subseteq> N - {seller} \\<and>\n   \\<Union> (Range a) \\<subseteq> \\<Omega>)\n  (a \\<in> allocationsUniverse \\<and>\n   Domain a \\<subseteq> N - {seller} \\<and>\n   \\<Union> (Range a) \\<subseteq> \\<Omega>) =\n  (a \\<in> allocationsUniverse \\<and>\n   a \\<in> {aa.\n            Domain aa \\<subseteq> N - {seller} \\<and>\n            \\<Union> (Range aa) \\<subseteq> \\<Omega>})", "show ?thesis"], ["proof (prove)\nusing this:\n  (a \\<in> soldAllocations'' N \\<Omega>) =\n  (a \\<in> allocationsUniverse \\<and>\n   Domain a \\<subseteq> N - {seller} \\<and>\n   \\<Union> (Range a) \\<subseteq> \\<Omega>)\n  (a \\<in> allocationsUniverse \\<and>\n   Domain a \\<subseteq> N - {seller} \\<and>\n   \\<Union> (Range a) \\<subseteq> \\<Omega>) =\n  (a \\<in> allocationsUniverse \\<and>\n   a \\<in> {aa.\n            Domain aa \\<subseteq> N - {seller} \\<and>\n            \\<Union> (Range aa) \\<subseteq> \\<Omega>})\n\ngoal (1 subgoal):\n 1. (a \\<in> soldAllocations'' N \\<Omega>) =\n    (a \\<in> allocationsUniverse \\<and>\n     a \\<in> {aa.\n              Domain aa \\<subseteq> N - {seller} \\<and>\n              \\<Union> (Range aa) \\<subseteq> \\<Omega>})", "by auto"], ["proof (state)\nthis:\n  (a \\<in> soldAllocations'' N \\<Omega>) =\n  (a \\<in> allocationsUniverse \\<and>\n   a \\<in> {aa.\n            Domain aa \\<subseteq> N - {seller} \\<and>\n            \\<Union> (Range aa) \\<subseteq> \\<Omega>})\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary lm04: \n  \"a \\<in> soldAllocations'' N \\<Omega> =\n   (a\\<in> (allocationsUniverse \\<inter> {aa. Domain aa \\<subseteq> N-{seller} & \\<Union> (Range aa) \\<subseteq> \\<Omega>}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<in> soldAllocations'' N \\<Omega>) =\n    (a \\<in> soldAllocations''' N \\<Omega>)", "using lm03"], ["proof (prove)\nusing this:\n  (?a \\<in> soldAllocations'' ?N ?\\<Omega>) =\n  (?a \\<in> allocationsUniverse \\<and>\n   ?a \\<in> {aa.\n             Domain aa \\<subseteq> ?N - {seller} \\<and>\n             \\<Union> (Range aa) \\<subseteq> ?\\<Omega>})\n\ngoal (1 subgoal):\n 1. (a \\<in> soldAllocations'' N \\<Omega>) =\n    (a \\<in> soldAllocations''' N \\<Omega>)", "by (metis (mono_tags) Int_iff)"], ["", "corollary soldAllocationVariantEquivalence: \n  \"soldAllocations'' N \\<Omega> = soldAllocations''' N \\<Omega>\" \n  (is \"?L=?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. soldAllocations'' N \\<Omega> = soldAllocations''' N \\<Omega>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. soldAllocations'' N \\<Omega> = soldAllocations''' N \\<Omega>", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. soldAllocations'' N \\<Omega> = soldAllocations''' N \\<Omega>", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. soldAllocations'' N \\<Omega> = soldAllocations''' N \\<Omega>", "have \"a \\<in> ?L = (a \\<in> ?R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<in> soldAllocations'' N \\<Omega>) =\n    (a \\<in> soldAllocations''' N \\<Omega>)", "by (rule lm04)"], ["proof (state)\nthis:\n  (a \\<in> soldAllocations'' N \\<Omega>) =\n  (a \\<in> soldAllocations''' N \\<Omega>)\n\ngoal (1 subgoal):\n 1. soldAllocations'' N \\<Omega> = soldAllocations''' N \\<Omega>", "}"], ["proof (state)\nthis:\n  (?a2 \\<in> soldAllocations'' N \\<Omega>) =\n  (?a2 \\<in> soldAllocations''' N \\<Omega>)\n\ngoal (1 subgoal):\n 1. soldAllocations'' N \\<Omega> = soldAllocations''' N \\<Omega>", "thus ?thesis"], ["proof (prove)\nusing this:\n  (?a2 \\<in> soldAllocations'' N \\<Omega>) =\n  (?a2 \\<in> soldAllocations''' N \\<Omega>)\n\ngoal (1 subgoal):\n 1. soldAllocations'' N \\<Omega> = soldAllocations''' N \\<Omega>", "by blast"], ["proof (state)\nthis:\n  soldAllocations'' N \\<Omega> = soldAllocations''' N \\<Omega>\n\ngoal:\nNo subgoals!", "qed"], ["", "(* We use lm05 in order to show a variant for soldAllocations without ''' *)"], ["", "lemma lm05: \n  assumes \"a \\<in> soldAllocations''' N \\<Omega>\" \n  shows \"a -- n \\<in> soldAllocations''' (N-{n}) \\<Omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Outside' {n} a \\<in> soldAllocations''' (N - {n}) \\<Omega>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Outside' {n} a \\<in> soldAllocations''' (N - {n}) \\<Omega>", "let ?bb = seller"], ["proof (state)\ngoal (1 subgoal):\n 1. Outside' {n} a \\<in> soldAllocations''' (N - {n}) \\<Omega>", "let ?d = Domain"], ["proof (state)\ngoal (1 subgoal):\n 1. Outside' {n} a \\<in> soldAllocations''' (N - {n}) \\<Omega>", "let ?r = Range"], ["proof (state)\ngoal (1 subgoal):\n 1. Outside' {n} a \\<in> soldAllocations''' (N - {n}) \\<Omega>", "let ?X1 = \"{aa. ?d aa \\<subseteq> N-{n}-{?bb} & \\<Union>(?r aa)\\<subseteq>\\<Omega>}\""], ["proof (state)\ngoal (1 subgoal):\n 1. Outside' {n} a \\<in> soldAllocations''' (N - {n}) \\<Omega>", "let ?X2 = \"{aa. ?d aa \\<subseteq> N-{?bb} & \\<Union>(?r aa) \\<subseteq> \\<Omega>}\""], ["proof (state)\ngoal (1 subgoal):\n 1. Outside' {n} a \\<in> soldAllocations''' (N - {n}) \\<Omega>", "have \"a\\<in>?X2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> {aa.\n             Domain aa \\<subseteq> N - {seller} \\<and>\n             \\<Union> (Range aa) \\<subseteq> \\<Omega>}", "using assms(1)"], ["proof (prove)\nusing this:\n  a \\<in> soldAllocations''' N \\<Omega>\n\ngoal (1 subgoal):\n 1. a \\<in> {aa.\n             Domain aa \\<subseteq> N - {seller} \\<and>\n             \\<Union> (Range aa) \\<subseteq> \\<Omega>}", "by fast"], ["proof (state)\nthis:\n  a \\<in> {aa.\n           Domain aa \\<subseteq> N - {seller} \\<and>\n           \\<Union> (Range aa) \\<subseteq> \\<Omega>}\n\ngoal (1 subgoal):\n 1. Outside' {n} a \\<in> soldAllocations''' (N - {n}) \\<Omega>", "then"], ["proof (chain)\npicking this:\n  a \\<in> {aa.\n           Domain aa \\<subseteq> N - {seller} \\<and>\n           \\<Union> (Range aa) \\<subseteq> \\<Omega>}", "have \n  0: \"?d a \\<subseteq> N-{?bb} & \\<Union>(?r a) \\<subseteq> \\<Omega>\""], ["proof (prove)\nusing this:\n  a \\<in> {aa.\n           Domain aa \\<subseteq> N - {seller} \\<and>\n           \\<Union> (Range aa) \\<subseteq> \\<Omega>}\n\ngoal (1 subgoal):\n 1. Domain a \\<subseteq> N - {seller} \\<and>\n    \\<Union> (Range a) \\<subseteq> \\<Omega>", "by blast"], ["proof (state)\nthis:\n  Domain a \\<subseteq> N - {seller} \\<and>\n  \\<Union> (Range a) \\<subseteq> \\<Omega>\n\ngoal (1 subgoal):\n 1. Outside' {n} a \\<in> soldAllocations''' (N - {n}) \\<Omega>", "then"], ["proof (chain)\npicking this:\n  Domain a \\<subseteq> N - {seller} \\<and>\n  \\<Union> (Range a) \\<subseteq> \\<Omega>", "have \"?d (a--n) \\<subseteq> N-{?bb}-{n}\""], ["proof (prove)\nusing this:\n  Domain a \\<subseteq> N - {seller} \\<and>\n  \\<Union> (Range a) \\<subseteq> \\<Omega>\n\ngoal (1 subgoal):\n 1. Domain (Outside' {n} a) \\<subseteq> N - {seller} - {n}", "using outside_reduces_domain"], ["proof (prove)\nusing this:\n  Domain a \\<subseteq> N - {seller} \\<and>\n  \\<Union> (Range a) \\<subseteq> \\<Omega>\n  Domain (Outside' ?X ?P) = Domain ?P - ?X\n\ngoal (1 subgoal):\n 1. Domain (Outside' {n} a) \\<subseteq> N - {seller} - {n}", "by (metis Diff_mono subset_refl)"], ["proof (state)\nthis:\n  Domain (Outside' {n} a) \\<subseteq> N - {seller} - {n}\n\ngoal (1 subgoal):\n 1. Outside' {n} a \\<in> soldAllocations''' (N - {n}) \\<Omega>", "moreover"], ["proof (state)\nthis:\n  Domain (Outside' {n} a) \\<subseteq> N - {seller} - {n}\n\ngoal (1 subgoal):\n 1. Outside' {n} a \\<in> soldAllocations''' (N - {n}) \\<Omega>", "have \"... = N-{n}-{?bb}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N - {seller} - {n} = N - {n} - {seller}", "by fastforce"], ["proof (state)\nthis:\n  N - {seller} - {n} = N - {n} - {seller}\n\ngoal (1 subgoal):\n 1. Outside' {n} a \\<in> soldAllocations''' (N - {n}) \\<Omega>", "ultimately"], ["proof (chain)\npicking this:\n  Domain (Outside' {n} a) \\<subseteq> N - {seller} - {n}\n  N - {seller} - {n} = N - {n} - {seller}", "have \"?d (a--n) \\<subseteq> N-{n}-{?bb}\""], ["proof (prove)\nusing this:\n  Domain (Outside' {n} a) \\<subseteq> N - {seller} - {n}\n  N - {seller} - {n} = N - {n} - {seller}\n\ngoal (1 subgoal):\n 1. Domain (Outside' {n} a) \\<subseteq> N - {n} - {seller}", "by blast"], ["proof (state)\nthis:\n  Domain (Outside' {n} a) \\<subseteq> N - {n} - {seller}\n\ngoal (1 subgoal):\n 1. Outside' {n} a \\<in> soldAllocations''' (N - {n}) \\<Omega>", "moreover"], ["proof (state)\nthis:\n  Domain (Outside' {n} a) \\<subseteq> N - {n} - {seller}\n\ngoal (1 subgoal):\n 1. Outside' {n} a \\<in> soldAllocations''' (N - {n}) \\<Omega>", "have \"\\<Union> (?r (a--n)) \\<subseteq> \\<Omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (Range (Outside' {n} a)) \\<subseteq> \\<Omega>", "unfolding Outside_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (Range (a - {n} \\<times> Range a)) \\<subseteq> \\<Omega>", "using 0"], ["proof (prove)\nusing this:\n  Domain a \\<subseteq> N - {seller} \\<and>\n  \\<Union> (Range a) \\<subseteq> \\<Omega>\n\ngoal (1 subgoal):\n 1. \\<Union> (Range (a - {n} \\<times> Range a)) \\<subseteq> \\<Omega>", "by blast"], ["proof (state)\nthis:\n  \\<Union> (Range (Outside' {n} a)) \\<subseteq> \\<Omega>\n\ngoal (1 subgoal):\n 1. Outside' {n} a \\<in> soldAllocations''' (N - {n}) \\<Omega>", "ultimately"], ["proof (chain)\npicking this:\n  Domain (Outside' {n} a) \\<subseteq> N - {n} - {seller}\n  \\<Union> (Range (Outside' {n} a)) \\<subseteq> \\<Omega>", "have \"a -- n \\<in> ?X1\""], ["proof (prove)\nusing this:\n  Domain (Outside' {n} a) \\<subseteq> N - {n} - {seller}\n  \\<Union> (Range (Outside' {n} a)) \\<subseteq> \\<Omega>\n\ngoal (1 subgoal):\n 1. Outside' {n} a\n    \\<in> {aa.\n           Domain aa \\<subseteq> N - {n} - {seller} \\<and>\n           \\<Union> (Range aa) \\<subseteq> \\<Omega>}", "by fast"], ["proof (state)\nthis:\n  Outside' {n} a\n  \\<in> {aa.\n         Domain aa \\<subseteq> N - {n} - {seller} \\<and>\n         \\<Union> (Range aa) \\<subseteq> \\<Omega>}\n\ngoal (1 subgoal):\n 1. Outside' {n} a \\<in> soldAllocations''' (N - {n}) \\<Omega>", "moreover"], ["proof (state)\nthis:\n  Outside' {n} a\n  \\<in> {aa.\n         Domain aa \\<subseteq> N - {n} - {seller} \\<and>\n         \\<Union> (Range aa) \\<subseteq> \\<Omega>}\n\ngoal (1 subgoal):\n 1. Outside' {n} a \\<in> soldAllocations''' (N - {n}) \\<Omega>", "have \"a--n \\<in> allocationsUniverse\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Outside' {n} a \\<in> allocationsUniverse", "using assms(1) Int_iff allocationsUniverseOutside"], ["proof (prove)\nusing this:\n  a \\<in> soldAllocations''' N \\<Omega>\n  (?c \\<in> ?A \\<inter> ?B) = (?c \\<in> ?A \\<and> ?c \\<in> ?B)\n  ?a \\<in> allocationsUniverse \\<Longrightarrow>\n  Outside' ?X ?a \\<in> allocationsUniverse\n\ngoal (1 subgoal):\n 1. Outside' {n} a \\<in> allocationsUniverse", "by (metis(lifting,mono_tags))"], ["proof (state)\nthis:\n  Outside' {n} a \\<in> allocationsUniverse\n\ngoal (1 subgoal):\n 1. Outside' {n} a \\<in> soldAllocations''' (N - {n}) \\<Omega>", "ultimately"], ["proof (chain)\npicking this:\n  Outside' {n} a\n  \\<in> {aa.\n         Domain aa \\<subseteq> N - {n} - {seller} \\<and>\n         \\<Union> (Range aa) \\<subseteq> \\<Omega>}\n  Outside' {n} a \\<in> allocationsUniverse", "show ?thesis"], ["proof (prove)\nusing this:\n  Outside' {n} a\n  \\<in> {aa.\n         Domain aa \\<subseteq> N - {n} - {seller} \\<and>\n         \\<Union> (Range aa) \\<subseteq> \\<Omega>}\n  Outside' {n} a \\<in> allocationsUniverse\n\ngoal (1 subgoal):\n 1. Outside' {n} a \\<in> soldAllocations''' (N - {n}) \\<Omega>", "by blast"], ["proof (state)\nthis:\n  Outside' {n} a \\<in> soldAllocations''' (N - {n}) \\<Omega>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma allAllocationsEquivalenceExtended: \n  \"soldAllocations =  soldAllocations' & \n   soldAllocations' = soldAllocations'' &\n   soldAllocations'' = soldAllocations'''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. soldAllocations = soldAllocations' \\<and>\n    soldAllocations' = soldAllocations'' \\<and>\n    soldAllocations'' = soldAllocations'''", "using soldAllocationVariantEquivalence soldAllocationsEquivalenceVariant"], ["proof (prove)\nusing this:\n  soldAllocations'' ?N ?\\<Omega> = soldAllocations''' ?N ?\\<Omega>\n  soldAllocations = soldAllocations' \\<and>\n  soldAllocations' = soldAllocations'' \\<and>\n  soldAllocations = soldAllocations''\n\ngoal (1 subgoal):\n 1. soldAllocations = soldAllocations' \\<and>\n    soldAllocations' = soldAllocations'' \\<and>\n    soldAllocations'' = soldAllocations'''", "by metis"], ["", "(* The following corollary shows that an allocation is invariant to subtracting a single bidder.   \n   This is used a fundamental step to prove the non-negativity of price in VCG. *)"], ["", "corollary soldAllocationRestriction: \n  assumes \"a \\<in> soldAllocations N \\<Omega>\" \n  shows \"a -- n \\<in> soldAllocations (N-{n}) \\<Omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Outside' {n} a \\<in> soldAllocations (N - {n}) \\<Omega>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Outside' {n} a \\<in> soldAllocations (N - {n}) \\<Omega>", "let ?A' = soldAllocations'''"], ["proof (state)\ngoal (1 subgoal):\n 1. Outside' {n} a \\<in> soldAllocations (N - {n}) \\<Omega>", "have \"a \\<in> ?A' N \\<Omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> soldAllocations''' N \\<Omega>", "using assms allAllocationsEquivalenceExtended"], ["proof (prove)\nusing this:\n  a \\<in> soldAllocations N \\<Omega>\n  soldAllocations = soldAllocations' \\<and>\n  soldAllocations' = soldAllocations'' \\<and>\n  soldAllocations'' = soldAllocations'''\n\ngoal (1 subgoal):\n 1. a \\<in> soldAllocations''' N \\<Omega>", "by metis"], ["proof (state)\nthis:\n  a \\<in> soldAllocations''' N \\<Omega>\n\ngoal (1 subgoal):\n 1. Outside' {n} a \\<in> soldAllocations (N - {n}) \\<Omega>", "then"], ["proof (chain)\npicking this:\n  a \\<in> soldAllocations''' N \\<Omega>", "have \"a -- n \\<in> ?A' (N-{n}) \\<Omega>\""], ["proof (prove)\nusing this:\n  a \\<in> soldAllocations''' N \\<Omega>\n\ngoal (1 subgoal):\n 1. Outside' {n} a \\<in> soldAllocations''' (N - {n}) \\<Omega>", "by (rule lm05)"], ["proof (state)\nthis:\n  Outside' {n} a \\<in> soldAllocations''' (N - {n}) \\<Omega>\n\ngoal (1 subgoal):\n 1. Outside' {n} a \\<in> soldAllocations (N - {n}) \\<Omega>", "thus ?thesis"], ["proof (prove)\nusing this:\n  Outside' {n} a \\<in> soldAllocations''' (N - {n}) \\<Omega>\n\ngoal (1 subgoal):\n 1. Outside' {n} a \\<in> soldAllocations (N - {n}) \\<Omega>", "using allAllocationsEquivalenceExtended"], ["proof (prove)\nusing this:\n  Outside' {n} a \\<in> soldAllocations''' (N - {n}) \\<Omega>\n  soldAllocations = soldAllocations' \\<and>\n  soldAllocations' = soldAllocations'' \\<and>\n  soldAllocations'' = soldAllocations'''\n\ngoal (1 subgoal):\n 1. Outside' {n} a \\<in> soldAllocations (N - {n}) \\<Omega>", "by metis"], ["proof (state)\nthis:\n  Outside' {n} a \\<in> soldAllocations (N - {n}) \\<Omega>\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary allocationGoodsMonotonicity: \n  assumes \"\\<Omega>1 \\<subseteq> \\<Omega>2\" \n  shows \"soldAllocations''' N \\<Omega>1 \\<subseteq> soldAllocations''' N \\<Omega>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. soldAllocations''' N \\<Omega>1\n    \\<subseteq> soldAllocations''' N \\<Omega>2", "using assms"], ["proof (prove)\nusing this:\n  \\<Omega>1 \\<subseteq> \\<Omega>2\n\ngoal (1 subgoal):\n 1. soldAllocations''' N \\<Omega>1\n    \\<subseteq> soldAllocations''' N \\<Omega>2", "by blast"], ["", "corollary allocationGoodsMonotonicityVariant: \n  assumes \"\\<Omega>1 \\<subseteq> \\<Omega>2\" \n  shows \"soldAllocations'' N \\<Omega>1 \\<subseteq> soldAllocations'' N \\<Omega>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. soldAllocations'' N \\<Omega>1 \\<subseteq> soldAllocations'' N \\<Omega>2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. soldAllocations'' N \\<Omega>1 \\<subseteq> soldAllocations'' N \\<Omega>2", "have \"soldAllocations'' N \\<Omega>1 = soldAllocations''' N \\<Omega>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. soldAllocations'' N \\<Omega>1 = soldAllocations''' N \\<Omega>1", "by (rule soldAllocationVariantEquivalence)"], ["proof (state)\nthis:\n  soldAllocations'' N \\<Omega>1 = soldAllocations''' N \\<Omega>1\n\ngoal (1 subgoal):\n 1. soldAllocations'' N \\<Omega>1 \\<subseteq> soldAllocations'' N \\<Omega>2", "moreover"], ["proof (state)\nthis:\n  soldAllocations'' N \\<Omega>1 = soldAllocations''' N \\<Omega>1\n\ngoal (1 subgoal):\n 1. soldAllocations'' N \\<Omega>1 \\<subseteq> soldAllocations'' N \\<Omega>2", "have \"... \\<subseteq> soldAllocations''' N \\<Omega>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. soldAllocations''' N \\<Omega>1\n    \\<subseteq> soldAllocations''' N \\<Omega>2", "using assms(1)"], ["proof (prove)\nusing this:\n  \\<Omega>1 \\<subseteq> \\<Omega>2\n\ngoal (1 subgoal):\n 1. soldAllocations''' N \\<Omega>1\n    \\<subseteq> soldAllocations''' N \\<Omega>2", "by (rule allocationGoodsMonotonicity)"], ["proof (state)\nthis:\n  soldAllocations''' N \\<Omega>1 \\<subseteq> soldAllocations''' N \\<Omega>2\n\ngoal (1 subgoal):\n 1. soldAllocations'' N \\<Omega>1 \\<subseteq> soldAllocations'' N \\<Omega>2", "moreover"], ["proof (state)\nthis:\n  soldAllocations''' N \\<Omega>1 \\<subseteq> soldAllocations''' N \\<Omega>2\n\ngoal (1 subgoal):\n 1. soldAllocations'' N \\<Omega>1 \\<subseteq> soldAllocations'' N \\<Omega>2", "have \"... = soldAllocations'' N \\<Omega>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. soldAllocations''' N \\<Omega>2 = soldAllocations'' N \\<Omega>2", "using soldAllocationVariantEquivalence"], ["proof (prove)\nusing this:\n  soldAllocations'' ?N ?\\<Omega> = soldAllocations''' ?N ?\\<Omega>\n\ngoal (1 subgoal):\n 1. soldAllocations''' N \\<Omega>2 = soldAllocations'' N \\<Omega>2", "by metis"], ["proof (state)\nthis:\n  soldAllocations''' N \\<Omega>2 = soldAllocations'' N \\<Omega>2\n\ngoal (1 subgoal):\n 1. soldAllocations'' N \\<Omega>1 \\<subseteq> soldAllocations'' N \\<Omega>2", "ultimately"], ["proof (chain)\npicking this:\n  soldAllocations'' N \\<Omega>1 = soldAllocations''' N \\<Omega>1\n  soldAllocations''' N \\<Omega>1 \\<subseteq> soldAllocations''' N \\<Omega>2\n  soldAllocations''' N \\<Omega>2 = soldAllocations'' N \\<Omega>2", "show ?thesis"], ["proof (prove)\nusing this:\n  soldAllocations'' N \\<Omega>1 = soldAllocations''' N \\<Omega>1\n  soldAllocations''' N \\<Omega>1 \\<subseteq> soldAllocations''' N \\<Omega>2\n  soldAllocations''' N \\<Omega>2 = soldAllocations'' N \\<Omega>2\n\ngoal (1 subgoal):\n 1. soldAllocations'' N \\<Omega>1 \\<subseteq> soldAllocations'' N \\<Omega>2", "by auto"], ["proof (state)\nthis:\n  soldAllocations'' N \\<Omega>1 \\<subseteq> soldAllocations'' N \\<Omega>2\n\ngoal:\nNo subgoals!", "qed"], ["", "(* maximalStrictAllocationsAlg are the allocations maximizing the revenue. They also include the\n   unallocated goods assigned to the seller (bidder 0).*)"], ["", "abbreviation \"maximalStrictAllocations N \\<Omega> b == argmax (sum b) (allAllocations ({seller}\\<union>N) \\<Omega>)\""], ["", "(* randomBids builds up a bid vector from a random number so that bidding with this bid vector\n   resolves any ties. Details are defined in UniformTieBreaking.thy *)"], ["", "abbreviation \"randomBids N \\<Omega> b random == resolvingBid (N\\<union>{seller}) \\<Omega> b random\""], ["", "(* vcgas gives the one-element set with the winning allocation after tie breaking.\n   (argmax\\<circ>sum) b ... determines the set of all maximal allocations.\n   (argmax\\<circ>sum) (randomBids ...) restricts that by tie-breaking to a singleton.\n   Outside' {seller} removes the seller from the only allocation in the singleton.   *)"], ["", "abbreviation \"vcgas N \\<Omega> b r  == \n  Outside' {seller} `((argmax\\<circ>sum) (randomBids N \\<Omega> b r)\n                                      ((argmax\\<circ>sum) b (allAllocations (N \\<union> {seller}) (set \\<Omega>))))\""], ["", "(* Takes the element out of the one elemnt set (vcgas ...) *)"], ["", "abbreviation \"vcga N \\<Omega> b r == the_elem (vcgas N \\<Omega> b r)\""], ["", "(* alternative definition of vcga *)"], ["", "abbreviation \"vcga' N \\<Omega> b r == \n  (the_elem (argmax (sum (randomBids N \\<Omega> b r)) \n                    (maximalStrictAllocations N (set \\<Omega>) b)))\n  -- seller\""], ["", "(* The following three auxiliary lemmas, lm06, lm07, and lm08 are used to prove lemma\n   vcgaEquivalence as well as in the theorem that cardinality of vcgas is one.*)"], ["", "lemma lm06: \n  assumes \"card ((argmax\\<circ>sum) (randomBids N \\<Omega> b r) \n                                 ((argmax\\<circ>sum) b (allAllocations (N\\<union>{seller}) (set \\<Omega>)))) = 1\" \n  shows \"vcga N \\<Omega> b r = \n         (the_elem ((argmax\\<circ>sum) (randomBids N \\<Omega> b r) \n                                    ((argmax\\<circ>sum) b (allAllocations ({seller}\\<union>N) (set \\<Omega>))))) \n          -- seller\""], ["proof (prove)\ngoal (1 subgoal):\n 1. the_elem\n     (Outside' {seller} `\n      (argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) b)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             r) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) b\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n    Outside' {seller}\n     (the_elem\n       ((argmax \\<circ> sum)\n         (summedBidVector\n           (pseudoAllocation\n             (randomEl\n               (takeAll\n                 (\\<lambda>x.\n                     winningAllocationRel (N \\<union> {seller})\n                      (set \\<Omega>) ((\\<in>) x) b)\n                 (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n               r) <|\n            ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n           (N \\<union> {seller}) (set \\<Omega>))\n         ((argmax \\<circ> sum) b\n           (allAllocations ({seller} \\<union> N) (set \\<Omega>)))))", "using assms cardOneTheElem"], ["proof (prove)\nusing this:\n  card\n   ((argmax \\<circ> sum)\n     (summedBidVector\n       (pseudoAllocation\n         (randomEl\n           (takeAll\n             (\\<lambda>x.\n                 winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                  ((\\<in>) x) b)\n             (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n           r) <|\n        ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n       (N \\<union> {seller}) (set \\<Omega>))\n     ((argmax \\<circ> sum) b\n       (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n  1\n  card ?A = 1 \\<Longrightarrow> the_elem (?f ` ?A) = ?f (the_elem ?A)\n\ngoal (1 subgoal):\n 1. the_elem\n     (Outside' {seller} `\n      (argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) b)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             r) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) b\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n    Outside' {seller}\n     (the_elem\n       ((argmax \\<circ> sum)\n         (summedBidVector\n           (pseudoAllocation\n             (randomEl\n               (takeAll\n                 (\\<lambda>x.\n                     winningAllocationRel (N \\<union> {seller})\n                      (set \\<Omega>) ((\\<in>) x) b)\n                 (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n               r) <|\n            ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n           (N \\<union> {seller}) (set \\<Omega>))\n         ((argmax \\<circ> sum) b\n           (allAllocations ({seller} \\<union> N) (set \\<Omega>)))))", "by auto"], ["", "corollary lm07: \n  assumes \"card ((argmax\\<circ>sum) (randomBids N \\<Omega> b r) \n                                 ((argmax\\<circ>sum) b (allAllocations (N\\<union>{seller}) (set \\<Omega>)))) = 1\"\n  shows \"vcga N \\<Omega> b r = vcga' N \\<Omega> b r\" \n  (is \"?l = ?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. the_elem\n     (Outside' {seller} `\n      (argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) b)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             r) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) b\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n    Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. the_elem\n     (Outside' {seller} `\n      (argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) b)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             r) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) b\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n    Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))", "have \"?l = (the_elem ((argmax\\<circ>sum) (randomBids N \\<Omega> b r) \n                                        ((argmax\\<circ>sum) b (allAllocations ({seller}\\<union>N) (set \\<Omega>)))))\n              -- seller\""], ["proof (prove)\ngoal (1 subgoal):\n 1. the_elem\n     (Outside' {seller} `\n      (argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) b)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             r) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) b\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n    Outside' {seller}\n     (the_elem\n       ((argmax \\<circ> sum)\n         (summedBidVector\n           (pseudoAllocation\n             (randomEl\n               (takeAll\n                 (\\<lambda>x.\n                     winningAllocationRel (N \\<union> {seller})\n                      (set \\<Omega>) ((\\<in>) x) b)\n                 (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n               r) <|\n            ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n           (N \\<union> {seller}) (set \\<Omega>))\n         ((argmax \\<circ> sum) b\n           (allAllocations ({seller} \\<union> N) (set \\<Omega>)))))", "using assms"], ["proof (prove)\nusing this:\n  card\n   ((argmax \\<circ> sum)\n     (summedBidVector\n       (pseudoAllocation\n         (randomEl\n           (takeAll\n             (\\<lambda>x.\n                 winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                  ((\\<in>) x) b)\n             (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n           r) <|\n        ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n       (N \\<union> {seller}) (set \\<Omega>))\n     ((argmax \\<circ> sum) b\n       (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n  1\n\ngoal (1 subgoal):\n 1. the_elem\n     (Outside' {seller} `\n      (argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) b)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             r) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) b\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n    Outside' {seller}\n     (the_elem\n       ((argmax \\<circ> sum)\n         (summedBidVector\n           (pseudoAllocation\n             (randomEl\n               (takeAll\n                 (\\<lambda>x.\n                     winningAllocationRel (N \\<union> {seller})\n                      (set \\<Omega>) ((\\<in>) x) b)\n                 (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n               r) <|\n            ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n           (N \\<union> {seller}) (set \\<Omega>))\n         ((argmax \\<circ> sum) b\n           (allAllocations ({seller} \\<union> N) (set \\<Omega>)))))", "by (rule lm06)"], ["proof (state)\nthis:\n  the_elem\n   (Outside' {seller} `\n    (argmax \\<circ> sum)\n     (summedBidVector\n       (pseudoAllocation\n         (randomEl\n           (takeAll\n             (\\<lambda>x.\n                 winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                  ((\\<in>) x) b)\n             (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n           r) <|\n        ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n       (N \\<union> {seller}) (set \\<Omega>))\n     ((argmax \\<circ> sum) b\n       (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n  Outside' {seller}\n   (the_elem\n     ((argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) b)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             r) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) b\n         (allAllocations ({seller} \\<union> N) (set \\<Omega>)))))\n\ngoal (1 subgoal):\n 1. the_elem\n     (Outside' {seller} `\n      (argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) b)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             r) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) b\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n    Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))", "moreover"], ["proof (state)\nthis:\n  the_elem\n   (Outside' {seller} `\n    (argmax \\<circ> sum)\n     (summedBidVector\n       (pseudoAllocation\n         (randomEl\n           (takeAll\n             (\\<lambda>x.\n                 winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                  ((\\<in>) x) b)\n             (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n           r) <|\n        ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n       (N \\<union> {seller}) (set \\<Omega>))\n     ((argmax \\<circ> sum) b\n       (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n  Outside' {seller}\n   (the_elem\n     ((argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) b)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             r) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) b\n         (allAllocations ({seller} \\<union> N) (set \\<Omega>)))))\n\ngoal (1 subgoal):\n 1. the_elem\n     (Outside' {seller} `\n      (argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) b)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             r) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) b\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n    Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))", "have \"... = ?r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       ((argmax \\<circ> sum)\n         (summedBidVector\n           (pseudoAllocation\n             (randomEl\n               (takeAll\n                 (\\<lambda>x.\n                     winningAllocationRel (N \\<union> {seller})\n                      (set \\<Omega>) ((\\<in>) x) b)\n                 (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n               r) <|\n            ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n           (N \\<union> {seller}) (set \\<Omega>))\n         ((argmax \\<circ> sum) b\n           (allAllocations ({seller} \\<union> N) (set \\<Omega>))))) =\n    Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))", "by force"], ["proof (state)\nthis:\n  Outside' {seller}\n   (the_elem\n     ((argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) b)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             r) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) b\n         (allAllocations ({seller} \\<union> N) (set \\<Omega>))))) =\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b)))\n\ngoal (1 subgoal):\n 1. the_elem\n     (Outside' {seller} `\n      (argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) b)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             r) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) b\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n    Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))", "ultimately"], ["proof (chain)\npicking this:\n  the_elem\n   (Outside' {seller} `\n    (argmax \\<circ> sum)\n     (summedBidVector\n       (pseudoAllocation\n         (randomEl\n           (takeAll\n             (\\<lambda>x.\n                 winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                  ((\\<in>) x) b)\n             (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n           r) <|\n        ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n       (N \\<union> {seller}) (set \\<Omega>))\n     ((argmax \\<circ> sum) b\n       (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n  Outside' {seller}\n   (the_elem\n     ((argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) b)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             r) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) b\n         (allAllocations ({seller} \\<union> N) (set \\<Omega>)))))\n  Outside' {seller}\n   (the_elem\n     ((argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) b)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             r) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) b\n         (allAllocations ({seller} \\<union> N) (set \\<Omega>))))) =\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b)))", "show ?thesis"], ["proof (prove)\nusing this:\n  the_elem\n   (Outside' {seller} `\n    (argmax \\<circ> sum)\n     (summedBidVector\n       (pseudoAllocation\n         (randomEl\n           (takeAll\n             (\\<lambda>x.\n                 winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                  ((\\<in>) x) b)\n             (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n           r) <|\n        ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n       (N \\<union> {seller}) (set \\<Omega>))\n     ((argmax \\<circ> sum) b\n       (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n  Outside' {seller}\n   (the_elem\n     ((argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) b)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             r) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) b\n         (allAllocations ({seller} \\<union> N) (set \\<Omega>)))))\n  Outside' {seller}\n   (the_elem\n     ((argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) b)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             r) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) b\n         (allAllocations ({seller} \\<union> N) (set \\<Omega>))))) =\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b)))\n\ngoal (1 subgoal):\n 1. the_elem\n     (Outside' {seller} `\n      (argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) b)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             r) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) b\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n    Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))", "by blast"], ["proof (state)\nthis:\n  the_elem\n   (Outside' {seller} `\n    (argmax \\<circ> sum)\n     (summedBidVector\n       (pseudoAllocation\n         (randomEl\n           (takeAll\n             (\\<lambda>x.\n                 winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                  ((\\<in>) x) b)\n             (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n           r) <|\n        ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n       (N \\<union> {seller}) (set \\<Omega>))\n     ((argmax \\<circ> sum) b\n       (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lm08: \n  assumes \"distinct \\<Omega>\" \"set \\<Omega> \\<noteq> {}\" \"finite N\" \n  shows \"card ((argmax\\<circ>sum) (randomBids N \\<Omega> bids random)\n                               ((argmax\\<circ>sum) bids (allAllocations (N\\<union>{seller}) (set \\<Omega>)))) = 1\"\n  (is \"card ?l=_\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     ((argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) bids)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             random) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) bids\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n    1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card\n     ((argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) bids)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             random) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) bids\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n    1", "let ?N = \"N\\<union>{seller}\""], ["proof (state)\ngoal (1 subgoal):\n 1. card\n     ((argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) bids)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             random) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) bids\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n    1", "let ?b' = \"randomBids N \\<Omega> bids random\""], ["proof (state)\ngoal (1 subgoal):\n 1. card\n     ((argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) bids)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             random) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) bids\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n    1", "let ?s = sum"], ["proof (state)\ngoal (1 subgoal):\n 1. card\n     ((argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) bids)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             random) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) bids\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n    1", "let ?a = argmax"], ["proof (state)\ngoal (1 subgoal):\n 1. card\n     ((argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) bids)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             random) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) bids\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n    1", "let ?f = \"?a \\<circ> ?s\""], ["proof (state)\ngoal (1 subgoal):\n 1. card\n     ((argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) bids)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             random) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) bids\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n    1", "have \n  1: \"?N\\<noteq>{}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N \\<union> {seller} \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  N \\<union> {seller} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. card\n     ((argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) bids)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             random) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) bids\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n    1", "have \n  2: \"finite ?N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (N \\<union> {seller})", "using assms(3)"], ["proof (prove)\nusing this:\n  finite N\n\ngoal (1 subgoal):\n 1. finite (N \\<union> {seller})", "by simp"], ["proof (state)\nthis:\n  finite (N \\<union> {seller})\n\ngoal (1 subgoal):\n 1. card\n     ((argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) bids)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             random) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) bids\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n    1", "have \"?a (?s ?b') (?a (?s bids) (allAllocations ?N (set \\<Omega>))) =\n        {chosenAllocation ?N \\<Omega> bids random}\" (is \"?L=?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) bids)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  random) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>))))\n     bids =\n    {randomEl\n      (takeAll\n        (\\<lambda>x.\n            winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n             ((\\<in>) x) bids)\n        (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n      random}", "using 1 assms(1) assms(2) 2"], ["proof (prove)\nusing this:\n  N \\<union> {seller} \\<noteq> {}\n  distinct \\<Omega>\n  set \\<Omega> \\<noteq> {}\n  finite (N \\<union> {seller})\n\ngoal (1 subgoal):\n 1. winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) bids)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  random) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>))))\n     bids =\n    {randomEl\n      (takeAll\n        (\\<lambda>x.\n            winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n             ((\\<in>) x) bids)\n        (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n      random}", "by (rule winningAllocationUniqueness)"], ["proof (state)\nthis:\n  winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n   (argmax\n     (sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel (N \\<union> {seller})\n                       (set \\<Omega>) ((\\<in>) x) bids)\n                  (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                random) <|\n             ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n            (N \\<union> {seller}) (set \\<Omega>))))\n   bids =\n  {randomEl\n    (takeAll\n      (\\<lambda>x.\n          winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n           ((\\<in>) x) bids)\n      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n    random}\n\ngoal (1 subgoal):\n 1. card\n     ((argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) bids)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             random) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) bids\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n    1", "moreover"], ["proof (state)\nthis:\n  winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n   (argmax\n     (sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel (N \\<union> {seller})\n                       (set \\<Omega>) ((\\<in>) x) bids)\n                  (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                random) <|\n             ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n            (N \\<union> {seller}) (set \\<Omega>))))\n   bids =\n  {randomEl\n    (takeAll\n      (\\<lambda>x.\n          winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n           ((\\<in>) x) bids)\n      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n    random}\n\ngoal (1 subgoal):\n 1. card\n     ((argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) bids)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             random) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) bids\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n    1", "have \"?L= ?f ?b' (?f bids (allAllocations ?N (set \\<Omega>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) bids)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  random) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>))))\n     bids =\n    (argmax \\<circ> sum)\n     (summedBidVector\n       (pseudoAllocation\n         (randomEl\n           (takeAll\n             (\\<lambda>x.\n                 winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                  ((\\<in>) x) bids)\n             (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n           random) <|\n        ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n       (N \\<union> {seller}) (set \\<Omega>))\n     ((argmax \\<circ> sum) bids\n       (allAllocations (N \\<union> {seller}) (set \\<Omega>)))", "by auto"], ["proof (state)\nthis:\n  winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n   (argmax\n     (sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel (N \\<union> {seller})\n                       (set \\<Omega>) ((\\<in>) x) bids)\n                  (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                random) <|\n             ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n            (N \\<union> {seller}) (set \\<Omega>))))\n   bids =\n  (argmax \\<circ> sum)\n   (summedBidVector\n     (pseudoAllocation\n       (randomEl\n         (takeAll\n           (\\<lambda>x.\n               winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                ((\\<in>) x) bids)\n           (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n         random) <|\n      ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n     (N \\<union> {seller}) (set \\<Omega>))\n   ((argmax \\<circ> sum) bids\n     (allAllocations (N \\<union> {seller}) (set \\<Omega>)))\n\ngoal (1 subgoal):\n 1. card\n     ((argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) bids)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             random) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) bids\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n    1", "ultimately"], ["proof (chain)\npicking this:\n  winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n   (argmax\n     (sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel (N \\<union> {seller})\n                       (set \\<Omega>) ((\\<in>) x) bids)\n                  (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                random) <|\n             ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n            (N \\<union> {seller}) (set \\<Omega>))))\n   bids =\n  {randomEl\n    (takeAll\n      (\\<lambda>x.\n          winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n           ((\\<in>) x) bids)\n      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n    random}\n  winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n   (argmax\n     (sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel (N \\<union> {seller})\n                       (set \\<Omega>) ((\\<in>) x) bids)\n                  (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                random) <|\n             ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n            (N \\<union> {seller}) (set \\<Omega>))))\n   bids =\n  (argmax \\<circ> sum)\n   (summedBidVector\n     (pseudoAllocation\n       (randomEl\n         (takeAll\n           (\\<lambda>x.\n               winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                ((\\<in>) x) bids)\n           (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n         random) <|\n      ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n     (N \\<union> {seller}) (set \\<Omega>))\n   ((argmax \\<circ> sum) bids\n     (allAllocations (N \\<union> {seller}) (set \\<Omega>)))", "have \"?l = {chosenAllocation ?N \\<Omega> bids random}\""], ["proof (prove)\nusing this:\n  winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n   (argmax\n     (sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel (N \\<union> {seller})\n                       (set \\<Omega>) ((\\<in>) x) bids)\n                  (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                random) <|\n             ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n            (N \\<union> {seller}) (set \\<Omega>))))\n   bids =\n  {randomEl\n    (takeAll\n      (\\<lambda>x.\n          winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n           ((\\<in>) x) bids)\n      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n    random}\n  winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n   (argmax\n     (sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel (N \\<union> {seller})\n                       (set \\<Omega>) ((\\<in>) x) bids)\n                  (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                random) <|\n             ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n            (N \\<union> {seller}) (set \\<Omega>))))\n   bids =\n  (argmax \\<circ> sum)\n   (summedBidVector\n     (pseudoAllocation\n       (randomEl\n         (takeAll\n           (\\<lambda>x.\n               winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                ((\\<in>) x) bids)\n           (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n         random) <|\n      ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n     (N \\<union> {seller}) (set \\<Omega>))\n   ((argmax \\<circ> sum) bids\n     (allAllocations (N \\<union> {seller}) (set \\<Omega>)))\n\ngoal (1 subgoal):\n 1. (argmax \\<circ> sum)\n     (summedBidVector\n       (pseudoAllocation\n         (randomEl\n           (takeAll\n             (\\<lambda>x.\n                 winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                  ((\\<in>) x) bids)\n             (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n           random) <|\n        ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n       (N \\<union> {seller}) (set \\<Omega>))\n     ((argmax \\<circ> sum) bids\n       (allAllocations (N \\<union> {seller}) (set \\<Omega>))) =\n    {randomEl\n      (takeAll\n        (\\<lambda>x.\n            winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n             ((\\<in>) x) bids)\n        (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n      random}", "by simp"], ["proof (state)\nthis:\n  (argmax \\<circ> sum)\n   (summedBidVector\n     (pseudoAllocation\n       (randomEl\n         (takeAll\n           (\\<lambda>x.\n               winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                ((\\<in>) x) bids)\n           (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n         random) <|\n      ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n     (N \\<union> {seller}) (set \\<Omega>))\n   ((argmax \\<circ> sum) bids\n     (allAllocations (N \\<union> {seller}) (set \\<Omega>))) =\n  {randomEl\n    (takeAll\n      (\\<lambda>x.\n          winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n           ((\\<in>) x) bids)\n      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n    random}\n\ngoal (1 subgoal):\n 1. card\n     ((argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) bids)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             random) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) bids\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n    1", "moreover"], ["proof (state)\nthis:\n  (argmax \\<circ> sum)\n   (summedBidVector\n     (pseudoAllocation\n       (randomEl\n         (takeAll\n           (\\<lambda>x.\n               winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                ((\\<in>) x) bids)\n           (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n         random) <|\n      ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n     (N \\<union> {seller}) (set \\<Omega>))\n   ((argmax \\<circ> sum) bids\n     (allAllocations (N \\<union> {seller}) (set \\<Omega>))) =\n  {randomEl\n    (takeAll\n      (\\<lambda>x.\n          winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n           ((\\<in>) x) bids)\n      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n    random}\n\ngoal (1 subgoal):\n 1. card\n     ((argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) bids)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             random) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) bids\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n    1", "have \"card ...=1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     {randomEl\n       (takeAll\n         (\\<lambda>x.\n             winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n              ((\\<in>) x) bids)\n         (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n       random} =\n    1", "by simp"], ["proof (state)\nthis:\n  card\n   {randomEl\n     (takeAll\n       (\\<lambda>x.\n           winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n            ((\\<in>) x) bids)\n       (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n     random} =\n  1\n\ngoal (1 subgoal):\n 1. card\n     ((argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) bids)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             random) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) bids\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n    1", "ultimately"], ["proof (chain)\npicking this:\n  (argmax \\<circ> sum)\n   (summedBidVector\n     (pseudoAllocation\n       (randomEl\n         (takeAll\n           (\\<lambda>x.\n               winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                ((\\<in>) x) bids)\n           (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n         random) <|\n      ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n     (N \\<union> {seller}) (set \\<Omega>))\n   ((argmax \\<circ> sum) bids\n     (allAllocations (N \\<union> {seller}) (set \\<Omega>))) =\n  {randomEl\n    (takeAll\n      (\\<lambda>x.\n          winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n           ((\\<in>) x) bids)\n      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n    random}\n  card\n   {randomEl\n     (takeAll\n       (\\<lambda>x.\n           winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n            ((\\<in>) x) bids)\n       (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n     random} =\n  1", "show ?thesis"], ["proof (prove)\nusing this:\n  (argmax \\<circ> sum)\n   (summedBidVector\n     (pseudoAllocation\n       (randomEl\n         (takeAll\n           (\\<lambda>x.\n               winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                ((\\<in>) x) bids)\n           (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n         random) <|\n      ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n     (N \\<union> {seller}) (set \\<Omega>))\n   ((argmax \\<circ> sum) bids\n     (allAllocations (N \\<union> {seller}) (set \\<Omega>))) =\n  {randomEl\n    (takeAll\n      (\\<lambda>x.\n          winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n           ((\\<in>) x) bids)\n      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n    random}\n  card\n   {randomEl\n     (takeAll\n       (\\<lambda>x.\n           winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n            ((\\<in>) x) bids)\n       (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n     random} =\n  1\n\ngoal (1 subgoal):\n 1. card\n     ((argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) bids)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             random) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) bids\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n    1", "by simp"], ["proof (state)\nthis:\n  card\n   ((argmax \\<circ> sum)\n     (summedBidVector\n       (pseudoAllocation\n         (randomEl\n           (takeAll\n             (\\<lambda>x.\n                 winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                  ((\\<in>) x) bids)\n             (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n           random) <|\n        ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n       (N \\<union> {seller}) (set \\<Omega>))\n     ((argmax \\<circ> sum) bids\n       (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n  1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vcgaEquivalence: \n  assumes \"distinct \\<Omega>\" \"set \\<Omega> \\<noteq> {}\" \"finite N\" \n  shows \"vcga N \\<Omega> b r = vcga' N \\<Omega> b r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. the_elem\n     (Outside' {seller} `\n      (argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) b)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             r) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) b\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n    Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))", "using assms lm07 lm08"], ["proof (prove)\nusing this:\n  distinct \\<Omega>\n  set \\<Omega> \\<noteq> {}\n  finite N\n  card\n   ((argmax \\<circ> sum)\n     (summedBidVector\n       (pseudoAllocation\n         (randomEl\n           (takeAll\n             (\\<lambda>x.\n                 winningAllocationRel (?N \\<union> {seller}) (set ?\\<Omega>)\n                  ((\\<in>) x) ?b)\n             (allAllocationsAlg (?N \\<union> {seller}) ?\\<Omega>))\n           ?r) <|\n        ((?N \\<union> {seller}) \\<times> finestpart (set ?\\<Omega>)))\n       (?N \\<union> {seller}) (set ?\\<Omega>))\n     ((argmax \\<circ> sum) ?b\n       (allAllocations (?N \\<union> {seller}) (set ?\\<Omega>)))) =\n  1 \\<Longrightarrow>\n  the_elem\n   (Outside' {seller} `\n    (argmax \\<circ> sum)\n     (summedBidVector\n       (pseudoAllocation\n         (randomEl\n           (takeAll\n             (\\<lambda>x.\n                 winningAllocationRel (?N \\<union> {seller}) (set ?\\<Omega>)\n                  ((\\<in>) x) ?b)\n             (allAllocationsAlg (?N \\<union> {seller}) ?\\<Omega>))\n           ?r) <|\n        ((?N \\<union> {seller}) \\<times> finestpart (set ?\\<Omega>)))\n       (?N \\<union> {seller}) (set ?\\<Omega>))\n     ((argmax \\<circ> sum) ?b\n       (allAllocations (?N \\<union> {seller}) (set ?\\<Omega>)))) =\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (?N \\<union> {seller})\n                         (set ?\\<Omega>) ((\\<in>) x) ?b)\n                    (allAllocationsAlg (?N \\<union> {seller}) ?\\<Omega>))\n                  ?r) <|\n               ((?N \\<union> {seller}) \\<times> finestpart (set ?\\<Omega>)))\n              (?N \\<union> {seller}) (set ?\\<Omega>)))\n       (maximalStrictAllocations ?N (set ?\\<Omega>) ?b)))\n  \\<lbrakk>distinct ?\\<Omega>; set ?\\<Omega> \\<noteq> {}; finite ?N\\<rbrakk>\n  \\<Longrightarrow> card\n                     ((argmax \\<circ> sum)\n                       (summedBidVector\n                         (pseudoAllocation\n                           (randomEl\n                             (takeAll\n                               (\\<lambda>x.\n                                   winningAllocationRel\n                                    (?N \\<union> {seller}) (set ?\\<Omega>)\n                                    ((\\<in>) x) ?bids)\n                               (allAllocationsAlg (?N \\<union> {seller})\n                                 ?\\<Omega>))\n                             ?random) <|\n                          ((?N \\<union> {seller}) \\<times>\n                           finestpart (set ?\\<Omega>)))\n                         (?N \\<union> {seller}) (set ?\\<Omega>))\n                       ((argmax \\<circ> sum) ?bids\n                         (allAllocations (?N \\<union> {seller})\n                           (set ?\\<Omega>)))) =\n                    1\n\ngoal (1 subgoal):\n 1. the_elem\n     (Outside' {seller} `\n      (argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) b)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             r) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) b\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n    Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))", "by blast"], ["", "(* After showing that the cardinality of vcgas is 1, we know that the_elem to determine vcga\n   will return a definite value. *)"], ["", "theorem vcgaDefiniteness: \n  assumes \"distinct \\<Omega>\" \"set \\<Omega> \\<noteq> {}\" \"finite N\" \n  shows \"card (vcgas N \\<Omega> b r) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     (Outside' {seller} `\n      (argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) b)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             r) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) b\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n    1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card\n     (Outside' {seller} `\n      (argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) b)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             r) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) b\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n    1", "have \"card ((argmax\\<circ>sum) (randomBids N \\<Omega> b r) \n                              ((argmax\\<circ>sum) b (allAllocations (N\\<union>{seller}) (set \\<Omega>)))) =\n        1\" \n  (is \"card ?X = _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     ((argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) b)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             r) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) b\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n    1", "using assms lm08"], ["proof (prove)\nusing this:\n  distinct \\<Omega>\n  set \\<Omega> \\<noteq> {}\n  finite N\n  \\<lbrakk>distinct ?\\<Omega>; set ?\\<Omega> \\<noteq> {}; finite ?N\\<rbrakk>\n  \\<Longrightarrow> card\n                     ((argmax \\<circ> sum)\n                       (summedBidVector\n                         (pseudoAllocation\n                           (randomEl\n                             (takeAll\n                               (\\<lambda>x.\n                                   winningAllocationRel\n                                    (?N \\<union> {seller}) (set ?\\<Omega>)\n                                    ((\\<in>) x) ?bids)\n                               (allAllocationsAlg (?N \\<union> {seller})\n                                 ?\\<Omega>))\n                             ?random) <|\n                          ((?N \\<union> {seller}) \\<times>\n                           finestpart (set ?\\<Omega>)))\n                         (?N \\<union> {seller}) (set ?\\<Omega>))\n                       ((argmax \\<circ> sum) ?bids\n                         (allAllocations (?N \\<union> {seller})\n                           (set ?\\<Omega>)))) =\n                    1\n\ngoal (1 subgoal):\n 1. card\n     ((argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) b)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             r) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) b\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n    1", "by blast"], ["proof (state)\nthis:\n  card\n   ((argmax \\<circ> sum)\n     (summedBidVector\n       (pseudoAllocation\n         (randomEl\n           (takeAll\n             (\\<lambda>x.\n                 winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                  ((\\<in>) x) b)\n             (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n           r) <|\n        ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n       (N \\<union> {seller}) (set \\<Omega>))\n     ((argmax \\<circ> sum) b\n       (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n  1\n\ngoal (1 subgoal):\n 1. card\n     (Outside' {seller} `\n      (argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) b)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             r) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) b\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n    1", "moreover"], ["proof (state)\nthis:\n  card\n   ((argmax \\<circ> sum)\n     (summedBidVector\n       (pseudoAllocation\n         (randomEl\n           (takeAll\n             (\\<lambda>x.\n                 winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                  ((\\<in>) x) b)\n             (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n           r) <|\n        ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n       (N \\<union> {seller}) (set \\<Omega>))\n     ((argmax \\<circ> sum) b\n       (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n  1\n\ngoal (1 subgoal):\n 1. card\n     (Outside' {seller} `\n      (argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) b)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             r) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) b\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n    1", "have \"(Outside'{seller}) ` ?X = vcgas N \\<Omega> b r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Outside' {seller} `\n    (argmax \\<circ> sum)\n     (summedBidVector\n       (pseudoAllocation\n         (randomEl\n           (takeAll\n             (\\<lambda>x.\n                 winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                  ((\\<in>) x) b)\n             (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n           r) <|\n        ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n       (N \\<union> {seller}) (set \\<Omega>))\n     ((argmax \\<circ> sum) b\n       (allAllocations (N \\<union> {seller}) (set \\<Omega>))) =\n    Outside' {seller} `\n    (argmax \\<circ> sum)\n     (summedBidVector\n       (pseudoAllocation\n         (randomEl\n           (takeAll\n             (\\<lambda>x.\n                 winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                  ((\\<in>) x) b)\n             (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n           r) <|\n        ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n       (N \\<union> {seller}) (set \\<Omega>))\n     ((argmax \\<circ> sum) b\n       (allAllocations (N \\<union> {seller}) (set \\<Omega>)))", "by blast"], ["proof (state)\nthis:\n  Outside' {seller} `\n  (argmax \\<circ> sum)\n   (summedBidVector\n     (pseudoAllocation\n       (randomEl\n         (takeAll\n           (\\<lambda>x.\n               winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                ((\\<in>) x) b)\n           (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n         r) <|\n      ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n     (N \\<union> {seller}) (set \\<Omega>))\n   ((argmax \\<circ> sum) b\n     (allAllocations (N \\<union> {seller}) (set \\<Omega>))) =\n  Outside' {seller} `\n  (argmax \\<circ> sum)\n   (summedBidVector\n     (pseudoAllocation\n       (randomEl\n         (takeAll\n           (\\<lambda>x.\n               winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                ((\\<in>) x) b)\n           (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n         r) <|\n      ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n     (N \\<union> {seller}) (set \\<Omega>))\n   ((argmax \\<circ> sum) b\n     (allAllocations (N \\<union> {seller}) (set \\<Omega>)))\n\ngoal (1 subgoal):\n 1. card\n     (Outside' {seller} `\n      (argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) b)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             r) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) b\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n    1", "ultimately"], ["proof (chain)\npicking this:\n  card\n   ((argmax \\<circ> sum)\n     (summedBidVector\n       (pseudoAllocation\n         (randomEl\n           (takeAll\n             (\\<lambda>x.\n                 winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                  ((\\<in>) x) b)\n             (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n           r) <|\n        ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n       (N \\<union> {seller}) (set \\<Omega>))\n     ((argmax \\<circ> sum) b\n       (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n  1\n  Outside' {seller} `\n  (argmax \\<circ> sum)\n   (summedBidVector\n     (pseudoAllocation\n       (randomEl\n         (takeAll\n           (\\<lambda>x.\n               winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                ((\\<in>) x) b)\n           (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n         r) <|\n      ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n     (N \\<union> {seller}) (set \\<Omega>))\n   ((argmax \\<circ> sum) b\n     (allAllocations (N \\<union> {seller}) (set \\<Omega>))) =\n  Outside' {seller} `\n  (argmax \\<circ> sum)\n   (summedBidVector\n     (pseudoAllocation\n       (randomEl\n         (takeAll\n           (\\<lambda>x.\n               winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                ((\\<in>) x) b)\n           (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n         r) <|\n      ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n     (N \\<union> {seller}) (set \\<Omega>))\n   ((argmax \\<circ> sum) b\n     (allAllocations (N \\<union> {seller}) (set \\<Omega>)))", "show ?thesis"], ["proof (prove)\nusing this:\n  card\n   ((argmax \\<circ> sum)\n     (summedBidVector\n       (pseudoAllocation\n         (randomEl\n           (takeAll\n             (\\<lambda>x.\n                 winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                  ((\\<in>) x) b)\n             (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n           r) <|\n        ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n       (N \\<union> {seller}) (set \\<Omega>))\n     ((argmax \\<circ> sum) b\n       (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n  1\n  Outside' {seller} `\n  (argmax \\<circ> sum)\n   (summedBidVector\n     (pseudoAllocation\n       (randomEl\n         (takeAll\n           (\\<lambda>x.\n               winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                ((\\<in>) x) b)\n           (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n         r) <|\n      ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n     (N \\<union> {seller}) (set \\<Omega>))\n   ((argmax \\<circ> sum) b\n     (allAllocations (N \\<union> {seller}) (set \\<Omega>))) =\n  Outside' {seller} `\n  (argmax \\<circ> sum)\n   (summedBidVector\n     (pseudoAllocation\n       (randomEl\n         (takeAll\n           (\\<lambda>x.\n               winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                ((\\<in>) x) b)\n           (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n         r) <|\n      ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n     (N \\<union> {seller}) (set \\<Omega>))\n   ((argmax \\<circ> sum) b\n     (allAllocations (N \\<union> {seller}) (set \\<Omega>)))\n\ngoal (1 subgoal):\n 1. card\n     (Outside' {seller} `\n      (argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) b)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             r) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) b\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n    1", "using cardOneImageCardOne"], ["proof (prove)\nusing this:\n  card\n   ((argmax \\<circ> sum)\n     (summedBidVector\n       (pseudoAllocation\n         (randomEl\n           (takeAll\n             (\\<lambda>x.\n                 winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                  ((\\<in>) x) b)\n             (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n           r) <|\n        ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n       (N \\<union> {seller}) (set \\<Omega>))\n     ((argmax \\<circ> sum) b\n       (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n  1\n  Outside' {seller} `\n  (argmax \\<circ> sum)\n   (summedBidVector\n     (pseudoAllocation\n       (randomEl\n         (takeAll\n           (\\<lambda>x.\n               winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                ((\\<in>) x) b)\n           (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n         r) <|\n      ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n     (N \\<union> {seller}) (set \\<Omega>))\n   ((argmax \\<circ> sum) b\n     (allAllocations (N \\<union> {seller}) (set \\<Omega>))) =\n  Outside' {seller} `\n  (argmax \\<circ> sum)\n   (summedBidVector\n     (pseudoAllocation\n       (randomEl\n         (takeAll\n           (\\<lambda>x.\n               winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                ((\\<in>) x) b)\n           (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n         r) <|\n      ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n     (N \\<union> {seller}) (set \\<Omega>))\n   ((argmax \\<circ> sum) b\n     (allAllocations (N \\<union> {seller}) (set \\<Omega>)))\n  card ?A = 1 \\<Longrightarrow> card (?f ` ?A) = 1\n\ngoal (1 subgoal):\n 1. card\n     (Outside' {seller} `\n      (argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) b)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             r) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) b\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n    1", "by blast"], ["proof (state)\nthis:\n  card\n   (Outside' {seller} `\n    (argmax \\<circ> sum)\n     (summedBidVector\n       (pseudoAllocation\n         (randomEl\n           (takeAll\n             (\\<lambda>x.\n                 winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                  ((\\<in>) x) b)\n             (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n           r) <|\n        ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n       (N \\<union> {seller}) (set \\<Omega>))\n     ((argmax \\<circ> sum) b\n       (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) =\n  1\n\ngoal:\nNo subgoals!", "qed"], ["", "(* The following lemma is a variant of the vcgaDefiniteness theorem. *)"], ["", "lemma vcgaDefinitenessVariant: \n  assumes \"distinct \\<Omega>\" \"set \\<Omega> \\<noteq> {}\" \"finite N\" \n  shows  \"card (argmax (sum (randomBids N \\<Omega> b r)) \n                       (maximalStrictAllocations N (set \\<Omega>) b)) =\n          1\"\n  (is \"card ?L=_\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b)) =\n    1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b)) =\n    1", "let ?n = \"{seller}\""], ["proof (state)\ngoal (1 subgoal):\n 1. card\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b)) =\n    1", "have \n  1: \"(?n \\<union> N)\\<noteq>{}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {seller} \\<union> N \\<noteq> {}", "by simp"], ["proof (state)\nthis:\n  {seller} \\<union> N \\<noteq> {}\n\ngoal (1 subgoal):\n 1. card\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b)) =\n    1", "have \n  2: \"finite (?n\\<union>N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite ({seller} \\<union> N)", "using assms(3)"], ["proof (prove)\nusing this:\n  finite N\n\ngoal (1 subgoal):\n 1. finite ({seller} \\<union> N)", "by fast"], ["proof (state)\nthis:\n  finite ({seller} \\<union> N)\n\ngoal (1 subgoal):\n 1. card\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b)) =\n    1", "have \"terminatingAuctionRel (?n\\<union>N) \\<Omega> b r = {chosenAllocation (?n\\<union>N) \\<Omega> b r}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. argmax\n     (sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      x \\<in> maximalStrictAllocations N (set \\<Omega>) b)\n                  (allAllocationsAlg ({seller} \\<union> N) \\<Omega>))\n                r) <|\n             (({seller} \\<union> N) \\<times> finestpart (set \\<Omega>)))\n            ({seller} \\<union> N) (set \\<Omega>)))\n     (maximalStrictAllocations N (set \\<Omega>) b) =\n    {randomEl\n      (takeAll\n        (\\<lambda>x. x \\<in> maximalStrictAllocations N (set \\<Omega>) b)\n        (allAllocationsAlg ({seller} \\<union> N) \\<Omega>))\n      r}", "using 1 assms(1) assms(2) 2"], ["proof (prove)\nusing this:\n  {seller} \\<union> N \\<noteq> {}\n  distinct \\<Omega>\n  set \\<Omega> \\<noteq> {}\n  finite ({seller} \\<union> N)\n\ngoal (1 subgoal):\n 1. argmax\n     (sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      x \\<in> maximalStrictAllocations N (set \\<Omega>) b)\n                  (allAllocationsAlg ({seller} \\<union> N) \\<Omega>))\n                r) <|\n             (({seller} \\<union> N) \\<times> finestpart (set \\<Omega>)))\n            ({seller} \\<union> N) (set \\<Omega>)))\n     (maximalStrictAllocations N (set \\<Omega>) b) =\n    {randomEl\n      (takeAll\n        (\\<lambda>x. x \\<in> maximalStrictAllocations N (set \\<Omega>) b)\n        (allAllocationsAlg ({seller} \\<union> N) \\<Omega>))\n      r}", "by (rule winningAllocationUniqueness)"], ["proof (state)\nthis:\n  argmax\n   (sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    x \\<in> maximalStrictAllocations N (set \\<Omega>) b)\n                (allAllocationsAlg ({seller} \\<union> N) \\<Omega>))\n              r) <|\n           (({seller} \\<union> N) \\<times> finestpart (set \\<Omega>)))\n          ({seller} \\<union> N) (set \\<Omega>)))\n   (maximalStrictAllocations N (set \\<Omega>) b) =\n  {randomEl\n    (takeAll\n      (\\<lambda>x. x \\<in> maximalStrictAllocations N (set \\<Omega>) b)\n      (allAllocationsAlg ({seller} \\<union> N) \\<Omega>))\n    r}\n\ngoal (1 subgoal):\n 1. card\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b)) =\n    1", "moreover"], ["proof (state)\nthis:\n  argmax\n   (sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    x \\<in> maximalStrictAllocations N (set \\<Omega>) b)\n                (allAllocationsAlg ({seller} \\<union> N) \\<Omega>))\n              r) <|\n           (({seller} \\<union> N) \\<times> finestpart (set \\<Omega>)))\n          ({seller} \\<union> N) (set \\<Omega>)))\n   (maximalStrictAllocations N (set \\<Omega>) b) =\n  {randomEl\n    (takeAll\n      (\\<lambda>x. x \\<in> maximalStrictAllocations N (set \\<Omega>) b)\n      (allAllocationsAlg ({seller} \\<union> N) \\<Omega>))\n    r}\n\ngoal (1 subgoal):\n 1. card\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b)) =\n    1", "have \"?L = terminatingAuctionRel (?n\\<union>N) \\<Omega> b r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. argmax\n     (sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel (N \\<union> {seller})\n                       (set \\<Omega>) ((\\<in>) x) b)\n                  (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                r) <|\n             ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n            (N \\<union> {seller}) (set \\<Omega>)))\n     (maximalStrictAllocations N (set \\<Omega>) b) =\n    argmax\n     (sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      x \\<in> maximalStrictAllocations N (set \\<Omega>) b)\n                  (allAllocationsAlg ({seller} \\<union> N) \\<Omega>))\n                r) <|\n             (({seller} \\<union> N) \\<times> finestpart (set \\<Omega>)))\n            ({seller} \\<union> N) (set \\<Omega>)))\n     (maximalStrictAllocations N (set \\<Omega>) b)", "by auto"], ["proof (state)\nthis:\n  argmax\n   (sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel (N \\<union> {seller})\n                     (set \\<Omega>) ((\\<in>) x) b)\n                (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n              r) <|\n           ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n          (N \\<union> {seller}) (set \\<Omega>)))\n   (maximalStrictAllocations N (set \\<Omega>) b) =\n  argmax\n   (sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    x \\<in> maximalStrictAllocations N (set \\<Omega>) b)\n                (allAllocationsAlg ({seller} \\<union> N) \\<Omega>))\n              r) <|\n           (({seller} \\<union> N) \\<times> finestpart (set \\<Omega>)))\n          ({seller} \\<union> N) (set \\<Omega>)))\n   (maximalStrictAllocations N (set \\<Omega>) b)\n\ngoal (1 subgoal):\n 1. card\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b)) =\n    1", "ultimately"], ["proof (chain)\npicking this:\n  argmax\n   (sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    x \\<in> maximalStrictAllocations N (set \\<Omega>) b)\n                (allAllocationsAlg ({seller} \\<union> N) \\<Omega>))\n              r) <|\n           (({seller} \\<union> N) \\<times> finestpart (set \\<Omega>)))\n          ({seller} \\<union> N) (set \\<Omega>)))\n   (maximalStrictAllocations N (set \\<Omega>) b) =\n  {randomEl\n    (takeAll\n      (\\<lambda>x. x \\<in> maximalStrictAllocations N (set \\<Omega>) b)\n      (allAllocationsAlg ({seller} \\<union> N) \\<Omega>))\n    r}\n  argmax\n   (sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel (N \\<union> {seller})\n                     (set \\<Omega>) ((\\<in>) x) b)\n                (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n              r) <|\n           ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n          (N \\<union> {seller}) (set \\<Omega>)))\n   (maximalStrictAllocations N (set \\<Omega>) b) =\n  argmax\n   (sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    x \\<in> maximalStrictAllocations N (set \\<Omega>) b)\n                (allAllocationsAlg ({seller} \\<union> N) \\<Omega>))\n              r) <|\n           (({seller} \\<union> N) \\<times> finestpart (set \\<Omega>)))\n          ({seller} \\<union> N) (set \\<Omega>)))\n   (maximalStrictAllocations N (set \\<Omega>) b)", "show ?thesis"], ["proof (prove)\nusing this:\n  argmax\n   (sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    x \\<in> maximalStrictAllocations N (set \\<Omega>) b)\n                (allAllocationsAlg ({seller} \\<union> N) \\<Omega>))\n              r) <|\n           (({seller} \\<union> N) \\<times> finestpart (set \\<Omega>)))\n          ({seller} \\<union> N) (set \\<Omega>)))\n   (maximalStrictAllocations N (set \\<Omega>) b) =\n  {randomEl\n    (takeAll\n      (\\<lambda>x. x \\<in> maximalStrictAllocations N (set \\<Omega>) b)\n      (allAllocationsAlg ({seller} \\<union> N) \\<Omega>))\n    r}\n  argmax\n   (sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel (N \\<union> {seller})\n                     (set \\<Omega>) ((\\<in>) x) b)\n                (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n              r) <|\n           ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n          (N \\<union> {seller}) (set \\<Omega>)))\n   (maximalStrictAllocations N (set \\<Omega>) b) =\n  argmax\n   (sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    x \\<in> maximalStrictAllocations N (set \\<Omega>) b)\n                (allAllocationsAlg ({seller} \\<union> N) \\<Omega>))\n              r) <|\n           (({seller} \\<union> N) \\<times> finestpart (set \\<Omega>)))\n          ({seller} \\<union> N) (set \\<Omega>)))\n   (maximalStrictAllocations N (set \\<Omega>) b)\n\ngoal (1 subgoal):\n 1. card\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b)) =\n    1", "by auto"], ["proof (state)\nthis:\n  card\n   (argmax\n     (sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel (N \\<union> {seller})\n                       (set \\<Omega>) ((\\<in>) x) b)\n                  (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                r) <|\n             ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n            (N \\<union> {seller}) (set \\<Omega>)))\n     (maximalStrictAllocations N (set \\<Omega>) b)) =\n  1\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem winningAllocationIsMaximal:\n  assumes \"distinct \\<Omega>\" \"set \\<Omega> \\<noteq> {}\" \"finite N\" \n  shows \"the_elem (argmax (sum (randomBids N \\<Omega> b r)) \n                          (maximalStrictAllocations N (set \\<Omega>) b)) \\<in>\n         (maximalStrictAllocations N (set \\<Omega>) b)\" \n  (is \"the_elem ?X \\<in> ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b))\n    \\<in> maximalStrictAllocations N (set \\<Omega>) b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b))\n    \\<in> maximalStrictAllocations N (set \\<Omega>) b", "have \"card ?X=1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b)) =\n    1", "using assms"], ["proof (prove)\nusing this:\n  distinct \\<Omega>\n  set \\<Omega> \\<noteq> {}\n  finite N\n\ngoal (1 subgoal):\n 1. card\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b)) =\n    1", "by (rule vcgaDefinitenessVariant)"], ["proof (state)\nthis:\n  card\n   (argmax\n     (sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel (N \\<union> {seller})\n                       (set \\<Omega>) ((\\<in>) x) b)\n                  (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                r) <|\n             ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n            (N \\<union> {seller}) (set \\<Omega>)))\n     (maximalStrictAllocations N (set \\<Omega>) b)) =\n  1\n\ngoal (1 subgoal):\n 1. the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b))\n    \\<in> maximalStrictAllocations N (set \\<Omega>) b", "moreover"], ["proof (state)\nthis:\n  card\n   (argmax\n     (sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel (N \\<union> {seller})\n                       (set \\<Omega>) ((\\<in>) x) b)\n                  (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                r) <|\n             ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n            (N \\<union> {seller}) (set \\<Omega>)))\n     (maximalStrictAllocations N (set \\<Omega>) b)) =\n  1\n\ngoal (1 subgoal):\n 1. the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b))\n    \\<in> maximalStrictAllocations N (set \\<Omega>) b", "have \"?X \\<subseteq> ?R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. argmax\n     (sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel (N \\<union> {seller})\n                       (set \\<Omega>) ((\\<in>) x) b)\n                  (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                r) <|\n             ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n            (N \\<union> {seller}) (set \\<Omega>)))\n     (maximalStrictAllocations N (set \\<Omega>) b)\n    \\<subseteq> maximalStrictAllocations N (set \\<Omega>) b", "by auto"], ["proof (state)\nthis:\n  argmax\n   (sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel (N \\<union> {seller})\n                     (set \\<Omega>) ((\\<in>) x) b)\n                (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n              r) <|\n           ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n          (N \\<union> {seller}) (set \\<Omega>)))\n   (maximalStrictAllocations N (set \\<Omega>) b)\n  \\<subseteq> maximalStrictAllocations N (set \\<Omega>) b\n\ngoal (1 subgoal):\n 1. the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b))\n    \\<in> maximalStrictAllocations N (set \\<Omega>) b", "ultimately"], ["proof (chain)\npicking this:\n  card\n   (argmax\n     (sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel (N \\<union> {seller})\n                       (set \\<Omega>) ((\\<in>) x) b)\n                  (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                r) <|\n             ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n            (N \\<union> {seller}) (set \\<Omega>)))\n     (maximalStrictAllocations N (set \\<Omega>) b)) =\n  1\n  argmax\n   (sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel (N \\<union> {seller})\n                     (set \\<Omega>) ((\\<in>) x) b)\n                (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n              r) <|\n           ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n          (N \\<union> {seller}) (set \\<Omega>)))\n   (maximalStrictAllocations N (set \\<Omega>) b)\n  \\<subseteq> maximalStrictAllocations N (set \\<Omega>) b", "show ?thesis"], ["proof (prove)\nusing this:\n  card\n   (argmax\n     (sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel (N \\<union> {seller})\n                       (set \\<Omega>) ((\\<in>) x) b)\n                  (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                r) <|\n             ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n            (N \\<union> {seller}) (set \\<Omega>)))\n     (maximalStrictAllocations N (set \\<Omega>) b)) =\n  1\n  argmax\n   (sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel (N \\<union> {seller})\n                     (set \\<Omega>) ((\\<in>) x) b)\n                (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n              r) <|\n           ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n          (N \\<union> {seller}) (set \\<Omega>)))\n   (maximalStrictAllocations N (set \\<Omega>) b)\n  \\<subseteq> maximalStrictAllocations N (set \\<Omega>) b\n\ngoal (1 subgoal):\n 1. the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b))\n    \\<in> maximalStrictAllocations N (set \\<Omega>) b", "using cardinalityOneTheElem"], ["proof (prove)\nusing this:\n  card\n   (argmax\n     (sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel (N \\<union> {seller})\n                       (set \\<Omega>) ((\\<in>) x) b)\n                  (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                r) <|\n             ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n            (N \\<union> {seller}) (set \\<Omega>)))\n     (maximalStrictAllocations N (set \\<Omega>) b)) =\n  1\n  argmax\n   (sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel (N \\<union> {seller})\n                     (set \\<Omega>) ((\\<in>) x) b)\n                (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n              r) <|\n           ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n          (N \\<union> {seller}) (set \\<Omega>)))\n   (maximalStrictAllocations N (set \\<Omega>) b)\n  \\<subseteq> maximalStrictAllocations N (set \\<Omega>) b\n  \\<lbrakk>card ?X = 1; ?X \\<subseteq> ?Y\\<rbrakk>\n  \\<Longrightarrow> the_elem ?X \\<in> ?Y\n\ngoal (1 subgoal):\n 1. the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b))\n    \\<in> maximalStrictAllocations N (set \\<Omega>) b", "by blast"], ["proof (state)\nthis:\n  the_elem\n   (argmax\n     (sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel (N \\<union> {seller})\n                       (set \\<Omega>) ((\\<in>) x) b)\n                  (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                r) <|\n             ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n            (N \\<union> {seller}) (set \\<Omega>)))\n     (maximalStrictAllocations N (set \\<Omega>) b))\n  \\<in> maximalStrictAllocations N (set \\<Omega>) b\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary winningAllocationIsMaximalWithoutSeller: \n  assumes \"distinct \\<Omega>\" \"set \\<Omega> \\<noteq> {}\" \"finite N\" \n  shows \"vcga' N \\<Omega> b r \\<in> (Outside' {seller})`(maximalStrictAllocations N (set \\<Omega>) b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))\n    \\<in> Outside' {seller} ` maximalStrictAllocations N (set \\<Omega>) b", "using assms winningAllocationIsMaximal"], ["proof (prove)\nusing this:\n  distinct \\<Omega>\n  set \\<Omega> \\<noteq> {}\n  finite N\n  \\<lbrakk>distinct ?\\<Omega>; set ?\\<Omega> \\<noteq> {}; finite ?N\\<rbrakk>\n  \\<Longrightarrow> the_elem\n                     (argmax\n                       (sum (summedBidVector\n                              (pseudoAllocation\n                                (randomEl\n                                  (takeAll\n                                    (\\<lambda>x.\n  winningAllocationRel (?N \\<union> {seller}) (set ?\\<Omega>) ((\\<in>) x)\n   ?b)\n                                    (allAllocationsAlg\n(?N \\<union> {seller}) ?\\<Omega>))\n                                  ?r) <|\n                               ((?N \\<union> {seller}) \\<times>\n                                finestpart (set ?\\<Omega>)))\n                              (?N \\<union> {seller}) (set ?\\<Omega>)))\n                       (maximalStrictAllocations ?N (set ?\\<Omega>) ?b))\n                    \\<in> maximalStrictAllocations ?N (set ?\\<Omega>) ?b\n\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))\n    \\<in> Outside' {seller} ` maximalStrictAllocations N (set \\<Omega>) b", "by blast"], ["", "lemma maximalAllactionWithoutSeller: \n  \"(Outside' {seller})`(maximalStrictAllocations N \\<Omega> b) \\<subseteq> soldAllocations N \\<Omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Outside' {seller} ` maximalStrictAllocations N \\<Omega> b\n    \\<subseteq> soldAllocations N \\<Omega>", "using Outside_def"], ["proof (prove)\nusing this:\n  Outside' ?X ?R = ?R - ?X \\<times> Range ?R\n\ngoal (1 subgoal):\n 1. Outside' {seller} ` maximalStrictAllocations N \\<Omega> b\n    \\<subseteq> soldAllocations N \\<Omega>", "by force"], ["", "lemma onlyGoodsAreAllocatedAuxiliary: \n  assumes \"distinct \\<Omega>\" \"set \\<Omega> \\<noteq> {}\" \"finite N\" \n  shows \"vcga' N \\<Omega> b r \\<in> soldAllocations N (set \\<Omega>)\" \n  (is \"?a \\<in> ?A\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))\n    \\<in> soldAllocations N (set \\<Omega>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))\n    \\<in> soldAllocations N (set \\<Omega>)", "have \"?a \\<in> (Outside' {seller})`(maximalStrictAllocations N (set \\<Omega>) b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))\n    \\<in> Outside' {seller} ` maximalStrictAllocations N (set \\<Omega>) b", "using assms"], ["proof (prove)\nusing this:\n  distinct \\<Omega>\n  set \\<Omega> \\<noteq> {}\n  finite N\n\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))\n    \\<in> Outside' {seller} ` maximalStrictAllocations N (set \\<Omega>) b", "by (rule winningAllocationIsMaximalWithoutSeller)"], ["proof (state)\nthis:\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b)))\n  \\<in> Outside' {seller} ` maximalStrictAllocations N (set \\<Omega>) b\n\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))\n    \\<in> soldAllocations N (set \\<Omega>)", "thus ?thesis"], ["proof (prove)\nusing this:\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b)))\n  \\<in> Outside' {seller} ` maximalStrictAllocations N (set \\<Omega>) b\n\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))\n    \\<in> soldAllocations N (set \\<Omega>)", "using maximalAllactionWithoutSeller"], ["proof (prove)\nusing this:\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b)))\n  \\<in> Outside' {seller} ` maximalStrictAllocations N (set \\<Omega>) b\n  Outside' {seller} ` maximalStrictAllocations ?N ?\\<Omega> ?b\n  \\<subseteq> soldAllocations ?N ?\\<Omega>\n\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))\n    \\<in> soldAllocations N (set \\<Omega>)", "by fastforce"], ["proof (state)\nthis:\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b)))\n  \\<in> soldAllocations N (set \\<Omega>)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem onlyGoodsAreAllocated: \n  assumes \"distinct \\<Omega>\" \"set \\<Omega> \\<noteq> {}\" \"finite N\" \n  shows \"vcga N \\<Omega> b r \\<in> soldAllocations N (set \\<Omega>)\" \n  (is \"_\\<in>?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. the_elem\n     (Outside' {seller} `\n      (argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) b)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             r) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) b\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>))))\n    \\<in> soldAllocations N (set \\<Omega>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. the_elem\n     (Outside' {seller} `\n      (argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) b)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             r) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) b\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>))))\n    \\<in> soldAllocations N (set \\<Omega>)", "have \"vcga' N \\<Omega> b r \\<in> ?r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))\n    \\<in> soldAllocations N (set \\<Omega>)", "using assms"], ["proof (prove)\nusing this:\n  distinct \\<Omega>\n  set \\<Omega> \\<noteq> {}\n  finite N\n\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))\n    \\<in> soldAllocations N (set \\<Omega>)", "by (rule onlyGoodsAreAllocatedAuxiliary)"], ["proof (state)\nthis:\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b)))\n  \\<in> soldAllocations N (set \\<Omega>)\n\ngoal (1 subgoal):\n 1. the_elem\n     (Outside' {seller} `\n      (argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) b)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             r) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) b\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>))))\n    \\<in> soldAllocations N (set \\<Omega>)", "then"], ["proof (chain)\npicking this:\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b)))\n  \\<in> soldAllocations N (set \\<Omega>)", "show ?thesis"], ["proof (prove)\nusing this:\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b)))\n  \\<in> soldAllocations N (set \\<Omega>)\n\ngoal (1 subgoal):\n 1. the_elem\n     (Outside' {seller} `\n      (argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) b)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             r) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) b\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>))))\n    \\<in> soldAllocations N (set \\<Omega>)", "using assms vcgaEquivalence"], ["proof (prove)\nusing this:\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b)))\n  \\<in> soldAllocations N (set \\<Omega>)\n  distinct \\<Omega>\n  set \\<Omega> \\<noteq> {}\n  finite N\n  \\<lbrakk>distinct ?\\<Omega>; set ?\\<Omega> \\<noteq> {}; finite ?N\\<rbrakk>\n  \\<Longrightarrow> the_elem\n                     (Outside' {seller} `\n                      (argmax \\<circ> sum)\n                       (summedBidVector\n                         (pseudoAllocation\n                           (randomEl\n                             (takeAll\n                               (\\<lambda>x.\n                                   winningAllocationRel\n                                    (?N \\<union> {seller}) (set ?\\<Omega>)\n                                    ((\\<in>) x) ?b)\n                               (allAllocationsAlg (?N \\<union> {seller})\n                                 ?\\<Omega>))\n                             ?r) <|\n                          ((?N \\<union> {seller}) \\<times>\n                           finestpart (set ?\\<Omega>)))\n                         (?N \\<union> {seller}) (set ?\\<Omega>))\n                       ((argmax \\<circ> sum) ?b\n                         (allAllocations (?N \\<union> {seller})\n                           (set ?\\<Omega>)))) =\n                    Outside' {seller}\n                     (the_elem\n                       (argmax\n                         (sum (summedBidVector\n                                (pseudoAllocation\n                                  (randomEl\n                                    (takeAll\n(\\<lambda>x.\n    winningAllocationRel (?N \\<union> {seller}) (set ?\\<Omega>) ((\\<in>) x)\n     ?b)\n(allAllocationsAlg (?N \\<union> {seller}) ?\\<Omega>))\n                                    ?r) <|\n                                 ((?N \\<union> {seller}) \\<times>\n                                  finestpart (set ?\\<Omega>)))\n                                (?N \\<union> {seller}) (set ?\\<Omega>)))\n                         (maximalStrictAllocations ?N (set ?\\<Omega>) ?b)))\n\ngoal (1 subgoal):\n 1. the_elem\n     (Outside' {seller} `\n      (argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) b)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             r) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) b\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>))))\n    \\<in> soldAllocations N (set \\<Omega>)", "by blast"], ["proof (state)\nthis:\n  the_elem\n   (Outside' {seller} `\n    (argmax \\<circ> sum)\n     (summedBidVector\n       (pseudoAllocation\n         (randomEl\n           (takeAll\n             (\\<lambda>x.\n                 winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                  ((\\<in>) x) b)\n             (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n           r) <|\n        ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n       (N \\<union> {seller}) (set \\<Omega>))\n     ((argmax \\<circ> sum) b\n       (allAllocations (N \\<union> {seller}) (set \\<Omega>))))\n  \\<in> soldAllocations N (set \\<Omega>)\n\ngoal:\nNo subgoals!", "qed"], ["", "(* Let b be a bid vector such that the seller's bid for each possible set of goods is 0 then \n   the revenue does not depend on the presence of the seller. *)"], ["", "corollary neutralSeller: \n  assumes \"\\<forall>X. X \\<in> Range a \\<longrightarrow>b (seller, X)=0\" \"finite a\" \n  shows \"sum b a = sum b (a--seller)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum b a = sum b (Outside' {seller} a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum b a = sum b (Outside' {seller} a)", "let ?n = seller"], ["proof (state)\ngoal (1 subgoal):\n 1. sum b a = sum b (Outside' {seller} a)", "have \"finite (a||{?n})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (a || {seller})", "using assms restrict_def"], ["proof (prove)\nusing this:\n  \\<forall>X. X \\<in> Range a \\<longrightarrow> b (seller, X) = (0::'b)\n  finite a\n  ?R || ?X = ?X \\<times> Range ?R \\<inter> ?R\n\ngoal (1 subgoal):\n 1. finite (a || {seller})", "by (metis finite_Int)"], ["proof (state)\nthis:\n  finite (a || {seller})\n\ngoal (1 subgoal):\n 1. sum b a = sum b (Outside' {seller} a)", "moreover"], ["proof (state)\nthis:\n  finite (a || {seller})\n\ngoal (1 subgoal):\n 1. sum b a = sum b (Outside' {seller} a)", "have \"\\<forall>z \\<in> a||{?n}. b z=0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>z\\<in>a || {seller}. b z = (0::'b)", "using assms restrict_def"], ["proof (prove)\nusing this:\n  \\<forall>X. X \\<in> Range a \\<longrightarrow> b (seller, X) = (0::'b)\n  finite a\n  ?R || ?X = ?X \\<times> Range ?R \\<inter> ?R\n\ngoal (1 subgoal):\n 1. \\<forall>z\\<in>a || {seller}. b z = (0::'b)", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>z\\<in>a || {seller}. b z = (0::'b)\n\ngoal (1 subgoal):\n 1. sum b a = sum b (Outside' {seller} a)", "ultimately"], ["proof (chain)\npicking this:\n  finite (a || {seller})\n  \\<forall>z\\<in>a || {seller}. b z = (0::'b)", "have \"sum b (a||{?n}) = 0\""], ["proof (prove)\nusing this:\n  finite (a || {seller})\n  \\<forall>z\\<in>a || {seller}. b z = (0::'b)\n\ngoal (1 subgoal):\n 1. sum b (a || {seller}) = (0::'b)", "using assms"], ["proof (prove)\nusing this:\n  finite (a || {seller})\n  \\<forall>z\\<in>a || {seller}. b z = (0::'b)\n  \\<forall>X. X \\<in> Range a \\<longrightarrow> b (seller, X) = (0::'b)\n  finite a\n\ngoal (1 subgoal):\n 1. sum b (a || {seller}) = (0::'b)", "by (metis sum.neutral)"], ["proof (state)\nthis:\n  sum b (a || {seller}) = (0::'b)\n\ngoal (1 subgoal):\n 1. sum b a = sum b (Outside' {seller} a)", "thus ?thesis"], ["proof (prove)\nusing this:\n  sum b (a || {seller}) = (0::'b)\n\ngoal (1 subgoal):\n 1. sum b a = sum b (Outside' {seller} a)", "using sumOutside assms(2)"], ["proof (prove)\nusing this:\n  sum b (a || {seller}) = (0::'b)\n  finite ?g \\<Longrightarrow>\n  sum ?f ?g = sum ?f (Outside' ?X ?g) + sum ?f (?g || ?X)\n  finite a\n\ngoal (1 subgoal):\n 1. sum b a = sum b (Outside' {seller} a)", "by (metis add.comm_neutral)"], ["proof (state)\nthis:\n  sum b a = sum b (Outside' {seller} a)\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary neutralSellerVariant: \n  assumes \"\\<forall>a\\<in>A. finite a & (\\<forall> X. X\\<in>Range a \\<longrightarrow> b (seller, X)=0)\"\n  shows \"{sum b a| a. a\\<in>A} = {sum b (a -- seller)| a. a\\<in>A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {sum b a |a. a \\<in> A} = {sum b (Outside' {seller} a) |a. a \\<in> A}", "using assms neutralSeller"], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>A.\n     finite a \\<and>\n     (\\<forall>X. X \\<in> Range a \\<longrightarrow> b (seller, X) = (0::'b))\n  \\<lbrakk>\\<forall>X.\n              X \\<in> Range ?a \\<longrightarrow> ?b (seller, X) = (0::?'b);\n   finite ?a\\<rbrakk>\n  \\<Longrightarrow> sum ?b ?a = sum ?b (Outside' {seller} ?a)\n\ngoal (1 subgoal):\n 1. {sum b a |a. a \\<in> A} = {sum b (Outside' {seller} a) |a. a \\<in> A}", "by (metis (lifting, no_types))"], ["", "lemma vcgaIsMaximalAux1: \n  assumes \"distinct \\<Omega>\" \"set \\<Omega> \\<noteq> {}\" \"finite N\" \n  shows \"\\<exists>a. ((a \\<in> (maximalStrictAllocations N (set \\<Omega>) b))  \\<and>  (vcga' N \\<Omega> b r = a -- seller)  &\n                (a \\<in> argmax (sum b) (allAllocations ({seller}\\<union>N) (set \\<Omega>))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a.\n       a \\<in> maximalStrictAllocations N (set \\<Omega>) b \\<and>\n       Outside' {seller}\n        (the_elem\n          (argmax\n            (sum (summedBidVector\n                   (pseudoAllocation\n                     (randomEl\n                       (takeAll\n                         (\\<lambda>x.\n                             winningAllocationRel (N \\<union> {seller})\n                              (set \\<Omega>) ((\\<in>) x) b)\n                         (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                       r) <|\n                    ((N \\<union> {seller}) \\<times>\n                     finestpart (set \\<Omega>)))\n                   (N \\<union> {seller}) (set \\<Omega>)))\n            (maximalStrictAllocations N (set \\<Omega>) b))) =\n       Outside' {seller} a \\<and>\n       a \\<in> maximalStrictAllocations N (set \\<Omega>) b", "using assms winningAllocationIsMaximalWithoutSeller"], ["proof (prove)\nusing this:\n  distinct \\<Omega>\n  set \\<Omega> \\<noteq> {}\n  finite N\n  \\<lbrakk>distinct ?\\<Omega>; set ?\\<Omega> \\<noteq> {}; finite ?N\\<rbrakk>\n  \\<Longrightarrow> Outside' {seller}\n                     (the_elem\n                       (argmax\n                         (sum (summedBidVector\n                                (pseudoAllocation\n                                  (randomEl\n                                    (takeAll\n(\\<lambda>x.\n    winningAllocationRel (?N \\<union> {seller}) (set ?\\<Omega>) ((\\<in>) x)\n     ?b)\n(allAllocationsAlg (?N \\<union> {seller}) ?\\<Omega>))\n                                    ?r) <|\n                                 ((?N \\<union> {seller}) \\<times>\n                                  finestpart (set ?\\<Omega>)))\n                                (?N \\<union> {seller}) (set ?\\<Omega>)))\n                         (maximalStrictAllocations ?N (set ?\\<Omega>) ?b)))\n                    \\<in> Outside' {seller} `\n                          maximalStrictAllocations ?N (set ?\\<Omega>) ?b\n\ngoal (1 subgoal):\n 1. \\<exists>a.\n       a \\<in> maximalStrictAllocations N (set \\<Omega>) b \\<and>\n       Outside' {seller}\n        (the_elem\n          (argmax\n            (sum (summedBidVector\n                   (pseudoAllocation\n                     (randomEl\n                       (takeAll\n                         (\\<lambda>x.\n                             winningAllocationRel (N \\<union> {seller})\n                              (set \\<Omega>) ((\\<in>) x) b)\n                         (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                       r) <|\n                    ((N \\<union> {seller}) \\<times>\n                     finestpart (set \\<Omega>)))\n                   (N \\<union> {seller}) (set \\<Omega>)))\n            (maximalStrictAllocations N (set \\<Omega>) b))) =\n       Outside' {seller} a \\<and>\n       a \\<in> maximalStrictAllocations N (set \\<Omega>) b", "by fast"], ["", "lemma vcgaIsMaximalAux2: \n  assumes \"distinct \\<Omega>\" \"set \\<Omega> \\<noteq> {}\" \"finite N\" \n  \"\\<forall>a \\<in> allAllocations ({seller}\\<union>N) (set \\<Omega>). \\<forall> X \\<in> Range a. b (seller, X)=0\"\n  (is \"\\<forall>a\\<in>?X. _\") \n  shows \"sum b (vcga' N \\<Omega> b r) = Max{sum b a| a. a \\<in> soldAllocations N (set \\<Omega>)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum b\n     (Outside' {seller}\n       (the_elem\n         (argmax\n           (sum (summedBidVector\n                  (pseudoAllocation\n                    (randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel (N \\<union> {seller})\n                             (set \\<Omega>) ((\\<in>) x) b)\n                        (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                      r) <|\n                   ((N \\<union> {seller}) \\<times>\n                    finestpart (set \\<Omega>)))\n                  (N \\<union> {seller}) (set \\<Omega>)))\n           (maximalStrictAllocations N (set \\<Omega>) b)))) =\n    Max {sum b a |a. a \\<in> soldAllocations N (set \\<Omega>)}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum b\n     (Outside' {seller}\n       (the_elem\n         (argmax\n           (sum (summedBidVector\n                  (pseudoAllocation\n                    (randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel (N \\<union> {seller})\n                             (set \\<Omega>) ((\\<in>) x) b)\n                        (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                      r) <|\n                   ((N \\<union> {seller}) \\<times>\n                    finestpart (set \\<Omega>)))\n                  (N \\<union> {seller}) (set \\<Omega>)))\n           (maximalStrictAllocations N (set \\<Omega>) b)))) =\n    Max {sum b a |a. a \\<in> soldAllocations N (set \\<Omega>)}", "let ?n = seller"], ["proof (state)\ngoal (1 subgoal):\n 1. sum b\n     (Outside' {seller}\n       (the_elem\n         (argmax\n           (sum (summedBidVector\n                  (pseudoAllocation\n                    (randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel (N \\<union> {seller})\n                             (set \\<Omega>) ((\\<in>) x) b)\n                        (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                      r) <|\n                   ((N \\<union> {seller}) \\<times>\n                    finestpart (set \\<Omega>)))\n                  (N \\<union> {seller}) (set \\<Omega>)))\n           (maximalStrictAllocations N (set \\<Omega>) b)))) =\n    Max {sum b a |a. a \\<in> soldAllocations N (set \\<Omega>)}", "let ?s = sum"], ["proof (state)\ngoal (1 subgoal):\n 1. sum b\n     (Outside' {seller}\n       (the_elem\n         (argmax\n           (sum (summedBidVector\n                  (pseudoAllocation\n                    (randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel (N \\<union> {seller})\n                             (set \\<Omega>) ((\\<in>) x) b)\n                        (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                      r) <|\n                   ((N \\<union> {seller}) \\<times>\n                    finestpart (set \\<Omega>)))\n                  (N \\<union> {seller}) (set \\<Omega>)))\n           (maximalStrictAllocations N (set \\<Omega>) b)))) =\n    Max {sum b a |a. a \\<in> soldAllocations N (set \\<Omega>)}", "let ?a = \"vcga' N \\<Omega> b r\""], ["proof (state)\ngoal (1 subgoal):\n 1. sum b\n     (Outside' {seller}\n       (the_elem\n         (argmax\n           (sum (summedBidVector\n                  (pseudoAllocation\n                    (randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel (N \\<union> {seller})\n                             (set \\<Omega>) ((\\<in>) x) b)\n                        (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                      r) <|\n                   ((N \\<union> {seller}) \\<times>\n                    finestpart (set \\<Omega>)))\n                  (N \\<union> {seller}) (set \\<Omega>)))\n           (maximalStrictAllocations N (set \\<Omega>) b)))) =\n    Max {sum b a |a. a \\<in> soldAllocations N (set \\<Omega>)}", "obtain a where \n  0: \"a \\<in> maximalStrictAllocations N (set \\<Omega>) b & \n      ?a = a--?n & \n      (a \\<in> argmax (sum b) (allAllocations({seller}\\<union>N)(set \\<Omega>)))\"\n  (is \"_ & ?a=_ & a\\<in>?Z\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a.\n        a \\<in> maximalStrictAllocations N (set \\<Omega>) b \\<and>\n        Outside' {seller}\n         (the_elem\n           (argmax\n             (sum (summedBidVector\n                    (pseudoAllocation\n                      (randomEl\n                        (takeAll\n                          (\\<lambda>x.\n                              winningAllocationRel (N \\<union> {seller})\n                               (set \\<Omega>) ((\\<in>) x) b)\n                          (allAllocationsAlg (N \\<union> {seller})\n                            \\<Omega>))\n                        r) <|\n                     ((N \\<union> {seller}) \\<times>\n                      finestpart (set \\<Omega>)))\n                    (N \\<union> {seller}) (set \\<Omega>)))\n             (maximalStrictAllocations N (set \\<Omega>) b))) =\n        Outside' {seller} a \\<and>\n        a \\<in> maximalStrictAllocations N (set \\<Omega>)\n                 b \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms(1,2,3) vcgaIsMaximalAux1"], ["proof (prove)\nusing this:\n  distinct \\<Omega>\n  set \\<Omega> \\<noteq> {}\n  finite N\n  \\<lbrakk>distinct ?\\<Omega>; set ?\\<Omega> \\<noteq> {}; finite ?N\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a.\n                       a \\<in> maximalStrictAllocations ?N (set ?\\<Omega>)\n                                ?b \\<and>\n                       Outside' {seller}\n                        (the_elem\n                          (argmax\n                            (sum (summedBidVector\n                                   (pseudoAllocation\n                                     (randomEl\n (takeAll\n   (\\<lambda>x.\n       winningAllocationRel (?N \\<union> {seller}) (set ?\\<Omega>)\n        ((\\<in>) x) ?b)\n   (allAllocationsAlg (?N \\<union> {seller}) ?\\<Omega>))\n ?r) <|\n                                    ((?N \\<union> {seller}) \\<times>\n                                     finestpart (set ?\\<Omega>)))\n                                   (?N \\<union> {seller}) (set ?\\<Omega>)))\n                            (maximalStrictAllocations ?N (set ?\\<Omega>)\n                              ?b))) =\n                       Outside' {seller} a \\<and>\n                       a \\<in> maximalStrictAllocations ?N (set ?\\<Omega>)\n                                ?b\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        a \\<in> maximalStrictAllocations N (set \\<Omega>) b \\<and>\n        Outside' {seller}\n         (the_elem\n           (argmax\n             (sum (summedBidVector\n                    (pseudoAllocation\n                      (randomEl\n                        (takeAll\n                          (\\<lambda>x.\n                              winningAllocationRel (N \\<union> {seller})\n                               (set \\<Omega>) ((\\<in>) x) b)\n                          (allAllocationsAlg (N \\<union> {seller})\n                            \\<Omega>))\n                        r) <|\n                     ((N \\<union> {seller}) \\<times>\n                      finestpart (set \\<Omega>)))\n                    (N \\<union> {seller}) (set \\<Omega>)))\n             (maximalStrictAllocations N (set \\<Omega>) b))) =\n        Outside' {seller} a \\<and>\n        a \\<in> maximalStrictAllocations N (set \\<Omega>)\n                 b \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  a \\<in> maximalStrictAllocations N (set \\<Omega>) b \\<and>\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b))) =\n  Outside' {seller} a \\<and>\n  a \\<in> maximalStrictAllocations N (set \\<Omega>) b\n\ngoal (1 subgoal):\n 1. sum b\n     (Outside' {seller}\n       (the_elem\n         (argmax\n           (sum (summedBidVector\n                  (pseudoAllocation\n                    (randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel (N \\<union> {seller})\n                             (set \\<Omega>) ((\\<in>) x) b)\n                        (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                      r) <|\n                   ((N \\<union> {seller}) \\<times>\n                    finestpart (set \\<Omega>)))\n                  (N \\<union> {seller}) (set \\<Omega>)))\n           (maximalStrictAllocations N (set \\<Omega>) b)))) =\n    Max {sum b a |a. a \\<in> soldAllocations N (set \\<Omega>)}", "have \n  1: \"\\<forall>a \\<in> ?X. finite a & (\\<forall> X. X\\<in>Range a \\<longrightarrow> b (?n, X)=0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>allAllocations ({seller} \\<union> N) (set \\<Omega>).\n       finite a \\<and>\n       (\\<forall>X.\n           X \\<in> Range a \\<longrightarrow> b (seller, X) = (0::'b))", "using assms(4) List.finite_set allocationFinite"], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>allAllocations ({seller} \\<union> N) (set \\<Omega>).\n     \\<forall>X\\<in>Range a. b (seller, X) = (0::'b)\n  finite (set ?xs)\n  \\<lbrakk>?a \\<in> allAllocations ?N ?G; finite ?G\\<rbrakk>\n  \\<Longrightarrow> finite ?a\n\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>allAllocations ({seller} \\<union> N) (set \\<Omega>).\n       finite a \\<and>\n       (\\<forall>X.\n           X \\<in> Range a \\<longrightarrow> b (seller, X) = (0::'b))", "by metis"], ["proof (state)\nthis:\n  \\<forall>a\\<in>allAllocations ({seller} \\<union> N) (set \\<Omega>).\n     finite a \\<and>\n     (\\<forall>X. X \\<in> Range a \\<longrightarrow> b (seller, X) = (0::'b))\n\ngoal (1 subgoal):\n 1. sum b\n     (Outside' {seller}\n       (the_elem\n         (argmax\n           (sum (summedBidVector\n                  (pseudoAllocation\n                    (randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel (N \\<union> {seller})\n                             (set \\<Omega>) ((\\<in>) x) b)\n                        (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                      r) <|\n                   ((N \\<union> {seller}) \\<times>\n                    finestpart (set \\<Omega>)))\n                  (N \\<union> {seller}) (set \\<Omega>)))\n           (maximalStrictAllocations N (set \\<Omega>) b)))) =\n    Max {sum b a |a. a \\<in> soldAllocations N (set \\<Omega>)}", "have \n  2: \"a \\<in> ?X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>)", "using 0"], ["proof (prove)\nusing this:\n  a \\<in> maximalStrictAllocations N (set \\<Omega>) b \\<and>\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b))) =\n  Outside' {seller} a \\<and>\n  a \\<in> maximalStrictAllocations N (set \\<Omega>) b\n\ngoal (1 subgoal):\n 1. a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>)", "by auto"], ["proof (state)\nthis:\n  a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>)\n\ngoal (1 subgoal):\n 1. sum b\n     (Outside' {seller}\n       (the_elem\n         (argmax\n           (sum (summedBidVector\n                  (pseudoAllocation\n                    (randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel (N \\<union> {seller})\n                             (set \\<Omega>) ((\\<in>) x) b)\n                        (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                      r) <|\n                   ((N \\<union> {seller}) \\<times>\n                    finestpart (set \\<Omega>)))\n                  (N \\<union> {seller}) (set \\<Omega>)))\n           (maximalStrictAllocations N (set \\<Omega>) b)))) =\n    Max {sum b a |a. a \\<in> soldAllocations N (set \\<Omega>)}", "have \"a \\<in> ?Z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> maximalStrictAllocations N (set \\<Omega>) b", "using 0"], ["proof (prove)\nusing this:\n  a \\<in> maximalStrictAllocations N (set \\<Omega>) b \\<and>\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b))) =\n  Outside' {seller} a \\<and>\n  a \\<in> maximalStrictAllocations N (set \\<Omega>) b\n\ngoal (1 subgoal):\n 1. a \\<in> maximalStrictAllocations N (set \\<Omega>) b", "by fast"], ["proof (state)\nthis:\n  a \\<in> maximalStrictAllocations N (set \\<Omega>) b\n\ngoal (1 subgoal):\n 1. sum b\n     (Outside' {seller}\n       (the_elem\n         (argmax\n           (sum (summedBidVector\n                  (pseudoAllocation\n                    (randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel (N \\<union> {seller})\n                             (set \\<Omega>) ((\\<in>) x) b)\n                        (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                      r) <|\n                   ((N \\<union> {seller}) \\<times>\n                    finestpart (set \\<Omega>)))\n                  (N \\<union> {seller}) (set \\<Omega>)))\n           (maximalStrictAllocations N (set \\<Omega>) b)))) =\n    Max {sum b a |a. a \\<in> soldAllocations N (set \\<Omega>)}", "then"], ["proof (chain)\npicking this:\n  a \\<in> maximalStrictAllocations N (set \\<Omega>) b", "have \"a \\<in> ?X\\<inter>{x. ?s b x = Max (?s b ` ?X)}\""], ["proof (prove)\nusing this:\n  a \\<in> maximalStrictAllocations N (set \\<Omega>) b\n\ngoal (1 subgoal):\n 1. a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>) \\<inter>\n            {x. sum b x =\n                Max (sum b `\n                     allAllocations ({seller} \\<union> N) (set \\<Omega>))}", "using injectionsUnionCommute"], ["proof (prove)\nusing this:\n  a \\<in> maximalStrictAllocations N (set \\<Omega>) b\n  ?x \\<notin> ?X \\<Longrightarrow>\n  (\\<Union>f\\<in>injections ?X ?Y.\n      {f \\<union> {(?x, y)} |y. y \\<in> ?Y - Range f}) =\n  injections ({?x} \\<union> ?X) ?Y\n\ngoal (1 subgoal):\n 1. a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>) \\<inter>\n            {x. sum b x =\n                Max (sum b `\n                     allAllocations ({seller} \\<union> N) (set \\<Omega>))}", "by simp"], ["proof (state)\nthis:\n  a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>) \\<inter>\n          {x. sum b x =\n              Max (sum b `\n                   allAllocations ({seller} \\<union> N) (set \\<Omega>))}\n\ngoal (1 subgoal):\n 1. sum b\n     (Outside' {seller}\n       (the_elem\n         (argmax\n           (sum (summedBidVector\n                  (pseudoAllocation\n                    (randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel (N \\<union> {seller})\n                             (set \\<Omega>) ((\\<in>) x) b)\n                        (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                      r) <|\n                   ((N \\<union> {seller}) \\<times>\n                    finestpart (set \\<Omega>)))\n                  (N \\<union> {seller}) (set \\<Omega>)))\n           (maximalStrictAllocations N (set \\<Omega>) b)))) =\n    Max {sum b a |a. a \\<in> soldAllocations N (set \\<Omega>)}", "then"], ["proof (chain)\npicking this:\n  a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>) \\<inter>\n          {x. sum b x =\n              Max (sum b `\n                   allAllocations ({seller} \\<union> N) (set \\<Omega>))}", "have \"a \\<in> {x. ?s b x = Max (?s b ` ?X)}\""], ["proof (prove)\nusing this:\n  a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>) \\<inter>\n          {x. sum b x =\n              Max (sum b `\n                   allAllocations ({seller} \\<union> N) (set \\<Omega>))}\n\ngoal (1 subgoal):\n 1. a \\<in> {x. sum b x =\n                Max (sum b `\n                     allAllocations ({seller} \\<union> N) (set \\<Omega>))}", "using injectionsUnionCommute"], ["proof (prove)\nusing this:\n  a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>) \\<inter>\n          {x. sum b x =\n              Max (sum b `\n                   allAllocations ({seller} \\<union> N) (set \\<Omega>))}\n  ?x \\<notin> ?X \\<Longrightarrow>\n  (\\<Union>f\\<in>injections ?X ?Y.\n      {f \\<union> {(?x, y)} |y. y \\<in> ?Y - Range f}) =\n  injections ({?x} \\<union> ?X) ?Y\n\ngoal (1 subgoal):\n 1. a \\<in> {x. sum b x =\n                Max (sum b `\n                     allAllocations ({seller} \\<union> N) (set \\<Omega>))}", "by simp"], ["proof (state)\nthis:\n  a \\<in> {x. sum b x =\n              Max (sum b `\n                   allAllocations ({seller} \\<union> N) (set \\<Omega>))}\n\ngoal (1 subgoal):\n 1. sum b\n     (Outside' {seller}\n       (the_elem\n         (argmax\n           (sum (summedBidVector\n                  (pseudoAllocation\n                    (randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel (N \\<union> {seller})\n                             (set \\<Omega>) ((\\<in>) x) b)\n                        (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                      r) <|\n                   ((N \\<union> {seller}) \\<times>\n                    finestpart (set \\<Omega>)))\n                  (N \\<union> {seller}) (set \\<Omega>)))\n           (maximalStrictAllocations N (set \\<Omega>) b)))) =\n    Max {sum b a |a. a \\<in> soldAllocations N (set \\<Omega>)}", "moreover"], ["proof (state)\nthis:\n  a \\<in> {x. sum b x =\n              Max (sum b `\n                   allAllocations ({seller} \\<union> N) (set \\<Omega>))}\n\ngoal (1 subgoal):\n 1. sum b\n     (Outside' {seller}\n       (the_elem\n         (argmax\n           (sum (summedBidVector\n                  (pseudoAllocation\n                    (randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel (N \\<union> {seller})\n                             (set \\<Omega>) ((\\<in>) x) b)\n                        (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                      r) <|\n                   ((N \\<union> {seller}) \\<times>\n                    finestpart (set \\<Omega>)))\n                  (N \\<union> {seller}) (set \\<Omega>)))\n           (maximalStrictAllocations N (set \\<Omega>) b)))) =\n    Max {sum b a |a. a \\<in> soldAllocations N (set \\<Omega>)}", "have \"?s b ` ?X = {?s b a| a. a\\<in>?X}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum b ` allAllocations ({seller} \\<union> N) (set \\<Omega>) =\n    {sum b a |a.\n     a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>)}", "by blast"], ["proof (state)\nthis:\n  sum b ` allAllocations ({seller} \\<union> N) (set \\<Omega>) =\n  {sum b a |a. a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>)}\n\ngoal (1 subgoal):\n 1. sum b\n     (Outside' {seller}\n       (the_elem\n         (argmax\n           (sum (summedBidVector\n                  (pseudoAllocation\n                    (randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel (N \\<union> {seller})\n                             (set \\<Omega>) ((\\<in>) x) b)\n                        (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                      r) <|\n                   ((N \\<union> {seller}) \\<times>\n                    finestpart (set \\<Omega>)))\n                  (N \\<union> {seller}) (set \\<Omega>)))\n           (maximalStrictAllocations N (set \\<Omega>) b)))) =\n    Max {sum b a |a. a \\<in> soldAllocations N (set \\<Omega>)}", "ultimately"], ["proof (chain)\npicking this:\n  a \\<in> {x. sum b x =\n              Max (sum b `\n                   allAllocations ({seller} \\<union> N) (set \\<Omega>))}\n  sum b ` allAllocations ({seller} \\<union> N) (set \\<Omega>) =\n  {sum b a |a. a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>)}", "have \"?s b a = Max {?s b a| a. a\\<in>?X}\""], ["proof (prove)\nusing this:\n  a \\<in> {x. sum b x =\n              Max (sum b `\n                   allAllocations ({seller} \\<union> N) (set \\<Omega>))}\n  sum b ` allAllocations ({seller} \\<union> N) (set \\<Omega>) =\n  {sum b a |a. a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>)}\n\ngoal (1 subgoal):\n 1. sum b a =\n    Max {sum b a |a.\n         a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>)}", "by auto"], ["proof (state)\nthis:\n  sum b a =\n  Max {sum b a |a.\n       a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>)}\n\ngoal (1 subgoal):\n 1. sum b\n     (Outside' {seller}\n       (the_elem\n         (argmax\n           (sum (summedBidVector\n                  (pseudoAllocation\n                    (randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel (N \\<union> {seller})\n                             (set \\<Omega>) ((\\<in>) x) b)\n                        (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                      r) <|\n                   ((N \\<union> {seller}) \\<times>\n                    finestpart (set \\<Omega>)))\n                  (N \\<union> {seller}) (set \\<Omega>)))\n           (maximalStrictAllocations N (set \\<Omega>) b)))) =\n    Max {sum b a |a. a \\<in> soldAllocations N (set \\<Omega>)}", "moreover"], ["proof (state)\nthis:\n  sum b a =\n  Max {sum b a |a.\n       a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>)}\n\ngoal (1 subgoal):\n 1. sum b\n     (Outside' {seller}\n       (the_elem\n         (argmax\n           (sum (summedBidVector\n                  (pseudoAllocation\n                    (randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel (N \\<union> {seller})\n                             (set \\<Omega>) ((\\<in>) x) b)\n                        (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                      r) <|\n                   ((N \\<union> {seller}) \\<times>\n                    finestpart (set \\<Omega>)))\n                  (N \\<union> {seller}) (set \\<Omega>)))\n           (maximalStrictAllocations N (set \\<Omega>) b)))) =\n    Max {sum b a |a. a \\<in> soldAllocations N (set \\<Omega>)}", "have \"{?s b a| a. a\\<in>?X} = {?s b (a--?n)| a. a\\<in>?X}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {sum b a |a.\n     a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>)} =\n    {sum b (Outside' {seller} a) |a.\n     a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>)}", "using 1"], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>allAllocations ({seller} \\<union> N) (set \\<Omega>).\n     finite a \\<and>\n     (\\<forall>X. X \\<in> Range a \\<longrightarrow> b (seller, X) = (0::'b))\n\ngoal (1 subgoal):\n 1. {sum b a |a.\n     a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>)} =\n    {sum b (Outside' {seller} a) |a.\n     a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>)}", "by (rule neutralSellerVariant)"], ["proof (state)\nthis:\n  {sum b a |a.\n   a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>)} =\n  {sum b (Outside' {seller} a) |a.\n   a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>)}\n\ngoal (1 subgoal):\n 1. sum b\n     (Outside' {seller}\n       (the_elem\n         (argmax\n           (sum (summedBidVector\n                  (pseudoAllocation\n                    (randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel (N \\<union> {seller})\n                             (set \\<Omega>) ((\\<in>) x) b)\n                        (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                      r) <|\n                   ((N \\<union> {seller}) \\<times>\n                    finestpart (set \\<Omega>)))\n                  (N \\<union> {seller}) (set \\<Omega>)))\n           (maximalStrictAllocations N (set \\<Omega>) b)))) =\n    Max {sum b a |a. a \\<in> soldAllocations N (set \\<Omega>)}", "moreover"], ["proof (state)\nthis:\n  {sum b a |a.\n   a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>)} =\n  {sum b (Outside' {seller} a) |a.\n   a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>)}\n\ngoal (1 subgoal):\n 1. sum b\n     (Outside' {seller}\n       (the_elem\n         (argmax\n           (sum (summedBidVector\n                  (pseudoAllocation\n                    (randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel (N \\<union> {seller})\n                             (set \\<Omega>) ((\\<in>) x) b)\n                        (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                      r) <|\n                   ((N \\<union> {seller}) \\<times>\n                    finestpart (set \\<Omega>)))\n                  (N \\<union> {seller}) (set \\<Omega>)))\n           (maximalStrictAllocations N (set \\<Omega>) b)))) =\n    Max {sum b a |a. a \\<in> soldAllocations N (set \\<Omega>)}", "have \"... = {?s b a| a. a \\<in> Outside' {?n}`?X}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {sum b (Outside' {seller} a) |a.\n     a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>)} =\n    {sum b a |a.\n     a \\<in> Outside' {seller} `\n             allAllocations ({seller} \\<union> N) (set \\<Omega>)}", "by blast"], ["proof (state)\nthis:\n  {sum b (Outside' {seller} a) |a.\n   a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>)} =\n  {sum b a |a.\n   a \\<in> Outside' {seller} `\n           allAllocations ({seller} \\<union> N) (set \\<Omega>)}\n\ngoal (1 subgoal):\n 1. sum b\n     (Outside' {seller}\n       (the_elem\n         (argmax\n           (sum (summedBidVector\n                  (pseudoAllocation\n                    (randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel (N \\<union> {seller})\n                             (set \\<Omega>) ((\\<in>) x) b)\n                        (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                      r) <|\n                   ((N \\<union> {seller}) \\<times>\n                    finestpart (set \\<Omega>)))\n                  (N \\<union> {seller}) (set \\<Omega>)))\n           (maximalStrictAllocations N (set \\<Omega>) b)))) =\n    Max {sum b a |a. a \\<in> soldAllocations N (set \\<Omega>)}", "moreover"], ["proof (state)\nthis:\n  {sum b (Outside' {seller} a) |a.\n   a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>)} =\n  {sum b a |a.\n   a \\<in> Outside' {seller} `\n           allAllocations ({seller} \\<union> N) (set \\<Omega>)}\n\ngoal (1 subgoal):\n 1. sum b\n     (Outside' {seller}\n       (the_elem\n         (argmax\n           (sum (summedBidVector\n                  (pseudoAllocation\n                    (randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel (N \\<union> {seller})\n                             (set \\<Omega>) ((\\<in>) x) b)\n                        (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                      r) <|\n                   ((N \\<union> {seller}) \\<times>\n                    finestpart (set \\<Omega>)))\n                  (N \\<union> {seller}) (set \\<Omega>)))\n           (maximalStrictAllocations N (set \\<Omega>) b)))) =\n    Max {sum b a |a. a \\<in> soldAllocations N (set \\<Omega>)}", "have \"... = {?s b a| a. a \\<in> soldAllocations N (set \\<Omega>)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {sum b a |a.\n     a \\<in> Outside' {seller} `\n             allAllocations ({seller} \\<union> N) (set \\<Omega>)} =\n    {sum b a |a. a \\<in> soldAllocations N (set \\<Omega>)}", "by simp"], ["proof (state)\nthis:\n  {sum b a |a.\n   a \\<in> Outside' {seller} `\n           allAllocations ({seller} \\<union> N) (set \\<Omega>)} =\n  {sum b a |a. a \\<in> soldAllocations N (set \\<Omega>)}\n\ngoal (1 subgoal):\n 1. sum b\n     (Outside' {seller}\n       (the_elem\n         (argmax\n           (sum (summedBidVector\n                  (pseudoAllocation\n                    (randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel (N \\<union> {seller})\n                             (set \\<Omega>) ((\\<in>) x) b)\n                        (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                      r) <|\n                   ((N \\<union> {seller}) \\<times>\n                    finestpart (set \\<Omega>)))\n                  (N \\<union> {seller}) (set \\<Omega>)))\n           (maximalStrictAllocations N (set \\<Omega>) b)))) =\n    Max {sum b a |a. a \\<in> soldAllocations N (set \\<Omega>)}", "ultimately"], ["proof (chain)\npicking this:\n  sum b a =\n  Max {sum b a |a.\n       a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>)}\n  {sum b a |a.\n   a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>)} =\n  {sum b (Outside' {seller} a) |a.\n   a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>)}\n  {sum b (Outside' {seller} a) |a.\n   a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>)} =\n  {sum b a |a.\n   a \\<in> Outside' {seller} `\n           allAllocations ({seller} \\<union> N) (set \\<Omega>)}\n  {sum b a |a.\n   a \\<in> Outside' {seller} `\n           allAllocations ({seller} \\<union> N) (set \\<Omega>)} =\n  {sum b a |a. a \\<in> soldAllocations N (set \\<Omega>)}", "have \"Max {?s b a| a. a \\<in> soldAllocations N (set \\<Omega>)} = ?s b a\""], ["proof (prove)\nusing this:\n  sum b a =\n  Max {sum b a |a.\n       a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>)}\n  {sum b a |a.\n   a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>)} =\n  {sum b (Outside' {seller} a) |a.\n   a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>)}\n  {sum b (Outside' {seller} a) |a.\n   a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>)} =\n  {sum b a |a.\n   a \\<in> Outside' {seller} `\n           allAllocations ({seller} \\<union> N) (set \\<Omega>)}\n  {sum b a |a.\n   a \\<in> Outside' {seller} `\n           allAllocations ({seller} \\<union> N) (set \\<Omega>)} =\n  {sum b a |a. a \\<in> soldAllocations N (set \\<Omega>)}\n\ngoal (1 subgoal):\n 1. Max {sum b a |a. a \\<in> soldAllocations N (set \\<Omega>)} = sum b a", "by simp"], ["proof (state)\nthis:\n  Max {sum b a |a. a \\<in> soldAllocations N (set \\<Omega>)} = sum b a\n\ngoal (1 subgoal):\n 1. sum b\n     (Outside' {seller}\n       (the_elem\n         (argmax\n           (sum (summedBidVector\n                  (pseudoAllocation\n                    (randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel (N \\<union> {seller})\n                             (set \\<Omega>) ((\\<in>) x) b)\n                        (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                      r) <|\n                   ((N \\<union> {seller}) \\<times>\n                    finestpart (set \\<Omega>)))\n                  (N \\<union> {seller}) (set \\<Omega>)))\n           (maximalStrictAllocations N (set \\<Omega>) b)))) =\n    Max {sum b a |a. a \\<in> soldAllocations N (set \\<Omega>)}", "moreover"], ["proof (state)\nthis:\n  Max {sum b a |a. a \\<in> soldAllocations N (set \\<Omega>)} = sum b a\n\ngoal (1 subgoal):\n 1. sum b\n     (Outside' {seller}\n       (the_elem\n         (argmax\n           (sum (summedBidVector\n                  (pseudoAllocation\n                    (randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel (N \\<union> {seller})\n                             (set \\<Omega>) ((\\<in>) x) b)\n                        (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                      r) <|\n                   ((N \\<union> {seller}) \\<times>\n                    finestpart (set \\<Omega>)))\n                  (N \\<union> {seller}) (set \\<Omega>)))\n           (maximalStrictAllocations N (set \\<Omega>) b)))) =\n    Max {sum b a |a. a \\<in> soldAllocations N (set \\<Omega>)}", "have \"... = ?s b (a--?n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum b a = sum b (Outside' {seller} a)", "using 1 2 neutralSeller"], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>allAllocations ({seller} \\<union> N) (set \\<Omega>).\n     finite a \\<and>\n     (\\<forall>X. X \\<in> Range a \\<longrightarrow> b (seller, X) = (0::'b))\n  a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>)\n  \\<lbrakk>\\<forall>X.\n              X \\<in> Range ?a \\<longrightarrow> ?b (seller, X) = (0::?'b);\n   finite ?a\\<rbrakk>\n  \\<Longrightarrow> sum ?b ?a = sum ?b (Outside' {seller} ?a)\n\ngoal (1 subgoal):\n 1. sum b a = sum b (Outside' {seller} a)", "by (metis (lifting, no_types))"], ["proof (state)\nthis:\n  sum b a = sum b (Outside' {seller} a)\n\ngoal (1 subgoal):\n 1. sum b\n     (Outside' {seller}\n       (the_elem\n         (argmax\n           (sum (summedBidVector\n                  (pseudoAllocation\n                    (randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel (N \\<union> {seller})\n                             (set \\<Omega>) ((\\<in>) x) b)\n                        (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                      r) <|\n                   ((N \\<union> {seller}) \\<times>\n                    finestpart (set \\<Omega>)))\n                  (N \\<union> {seller}) (set \\<Omega>)))\n           (maximalStrictAllocations N (set \\<Omega>) b)))) =\n    Max {sum b a |a. a \\<in> soldAllocations N (set \\<Omega>)}", "ultimately"], ["proof (chain)\npicking this:\n  Max {sum b a |a. a \\<in> soldAllocations N (set \\<Omega>)} = sum b a\n  sum b a = sum b (Outside' {seller} a)", "show \"?s b ?a=Max{?s b a| a. a \\<in> soldAllocations N (set \\<Omega>)}\""], ["proof (prove)\nusing this:\n  Max {sum b a |a. a \\<in> soldAllocations N (set \\<Omega>)} = sum b a\n  sum b a = sum b (Outside' {seller} a)\n\ngoal (1 subgoal):\n 1. sum b\n     (Outside' {seller}\n       (the_elem\n         (argmax\n           (sum (summedBidVector\n                  (pseudoAllocation\n                    (randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel (N \\<union> {seller})\n                             (set \\<Omega>) ((\\<in>) x) b)\n                        (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                      r) <|\n                   ((N \\<union> {seller}) \\<times>\n                    finestpart (set \\<Omega>)))\n                  (N \\<union> {seller}) (set \\<Omega>)))\n           (maximalStrictAllocations N (set \\<Omega>) b)))) =\n    Max {sum b a |a. a \\<in> soldAllocations N (set \\<Omega>)}", "using 0"], ["proof (prove)\nusing this:\n  Max {sum b a |a. a \\<in> soldAllocations N (set \\<Omega>)} = sum b a\n  sum b a = sum b (Outside' {seller} a)\n  a \\<in> maximalStrictAllocations N (set \\<Omega>) b \\<and>\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b))) =\n  Outside' {seller} a \\<and>\n  a \\<in> maximalStrictAllocations N (set \\<Omega>) b\n\ngoal (1 subgoal):\n 1. sum b\n     (Outside' {seller}\n       (the_elem\n         (argmax\n           (sum (summedBidVector\n                  (pseudoAllocation\n                    (randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel (N \\<union> {seller})\n                             (set \\<Omega>) ((\\<in>) x) b)\n                        (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                      r) <|\n                   ((N \\<union> {seller}) \\<times>\n                    finestpart (set \\<Omega>)))\n                  (N \\<union> {seller}) (set \\<Omega>)))\n           (maximalStrictAllocations N (set \\<Omega>) b)))) =\n    Max {sum b a |a. a \\<in> soldAllocations N (set \\<Omega>)}", "by simp"], ["proof (state)\nthis:\n  sum b\n   (Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))) =\n  Max {sum b a |a. a \\<in> soldAllocations N (set \\<Omega>)}\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Adequacy theorem: The allocation satisfies the standard pen-and-paper specification \nof a VCG auction. See, for example, \\cite[\\S~1.2]{cramton}.\\<close>"], ["", "theorem vcgaIsMaximal: \n  assumes \"distinct \\<Omega>\" \"set \\<Omega> \\<noteq> {}\" \"finite N\" \"\\<forall> X. b (seller, X) = 0\" \n  shows \"sum b (vcga' N \\<Omega> b r) = Max{sum b a| a. a \\<in> soldAllocations N (set \\<Omega>)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum b\n     (Outside' {seller}\n       (the_elem\n         (argmax\n           (sum (summedBidVector\n                  (pseudoAllocation\n                    (randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel (N \\<union> {seller})\n                             (set \\<Omega>) ((\\<in>) x) b)\n                        (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                      r) <|\n                   ((N \\<union> {seller}) \\<times>\n                    finestpart (set \\<Omega>)))\n                  (N \\<union> {seller}) (set \\<Omega>)))\n           (maximalStrictAllocations N (set \\<Omega>) b)))) =\n    Max {sum b a |a. a \\<in> soldAllocations N (set \\<Omega>)}", "using assms vcgaIsMaximalAux2"], ["proof (prove)\nusing this:\n  distinct \\<Omega>\n  set \\<Omega> \\<noteq> {}\n  finite N\n  \\<forall>X. b (seller, X) = (0::'b)\n  \\<lbrakk>distinct ?\\<Omega>; set ?\\<Omega> \\<noteq> {}; finite ?N;\n   \\<forall>a\\<in>allAllocations ({seller} \\<union> ?N) (set ?\\<Omega>).\n      \\<forall>X\\<in>Range a. ?b (seller, X) = (0::?'b)\\<rbrakk>\n  \\<Longrightarrow> sum ?b\n                     (Outside' {seller}\n                       (the_elem\n                         (argmax\n                           (sum (summedBidVector\n                                  (pseudoAllocation\n                                    (randomEl\n(takeAll\n  (\\<lambda>x.\n      winningAllocationRel (?N \\<union> {seller}) (set ?\\<Omega>)\n       ((\\<in>) x) ?b)\n  (allAllocationsAlg (?N \\<union> {seller}) ?\\<Omega>))\n?r) <|\n                                   ((?N \\<union> {seller}) \\<times>\n                                    finestpart (set ?\\<Omega>)))\n                                  (?N \\<union> {seller}) (set ?\\<Omega>)))\n                           (maximalStrictAllocations ?N (set ?\\<Omega>)\n                             ?b)))) =\n                    Max {sum ?b a |a.\n                         a \\<in> soldAllocations ?N (set ?\\<Omega>)}\n\ngoal (1 subgoal):\n 1. sum b\n     (Outside' {seller}\n       (the_elem\n         (argmax\n           (sum (summedBidVector\n                  (pseudoAllocation\n                    (randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel (N \\<union> {seller})\n                             (set \\<Omega>) ((\\<in>) x) b)\n                        (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                      r) <|\n                   ((N \\<union> {seller}) \\<times>\n                    finestpart (set \\<Omega>)))\n                  (N \\<union> {seller}) (set \\<Omega>)))\n           (maximalStrictAllocations N (set \\<Omega>) b)))) =\n    Max {sum b a |a. a \\<in> soldAllocations N (set \\<Omega>)}", "by blast"], ["", "corollary vcgaIsAllocationAllocatingGoodsOnly: \n  assumes \"distinct \\<Omega>\" \"set \\<Omega> \\<noteq> {}\" \"finite N\" \n  shows \"vcga' N \\<Omega> b r \\<in> allocationsUniverse & \\<Union> (Range (vcga' N \\<Omega> b r)) \\<subseteq> set \\<Omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))\n    \\<in> allocationsUniverse \\<and>\n    \\<Union>\n     (Range\n       (Outside' {seller}\n         (the_elem\n           (argmax\n             (sum (summedBidVector\n                    (pseudoAllocation\n                      (randomEl\n                        (takeAll\n                          (\\<lambda>x.\n                              winningAllocationRel (N \\<union> {seller})\n                               (set \\<Omega>) ((\\<in>) x) b)\n                          (allAllocationsAlg (N \\<union> {seller})\n                            \\<Omega>))\n                        r) <|\n                     ((N \\<union> {seller}) \\<times>\n                      finestpart (set \\<Omega>)))\n                    (N \\<union> {seller}) (set \\<Omega>)))\n             (maximalStrictAllocations N (set \\<Omega>) b)))))\n    \\<subseteq> set \\<Omega>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))\n    \\<in> allocationsUniverse \\<and>\n    \\<Union>\n     (Range\n       (Outside' {seller}\n         (the_elem\n           (argmax\n             (sum (summedBidVector\n                    (pseudoAllocation\n                      (randomEl\n                        (takeAll\n                          (\\<lambda>x.\n                              winningAllocationRel (N \\<union> {seller})\n                               (set \\<Omega>) ((\\<in>) x) b)\n                          (allAllocationsAlg (N \\<union> {seller})\n                            \\<Omega>))\n                        r) <|\n                     ((N \\<union> {seller}) \\<times>\n                      finestpart (set \\<Omega>)))\n                    (N \\<union> {seller}) (set \\<Omega>)))\n             (maximalStrictAllocations N (set \\<Omega>) b)))))\n    \\<subseteq> set \\<Omega>", "let ?a = \"vcga' N \\<Omega> b r\""], ["proof (state)\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))\n    \\<in> allocationsUniverse \\<and>\n    \\<Union>\n     (Range\n       (Outside' {seller}\n         (the_elem\n           (argmax\n             (sum (summedBidVector\n                    (pseudoAllocation\n                      (randomEl\n                        (takeAll\n                          (\\<lambda>x.\n                              winningAllocationRel (N \\<union> {seller})\n                               (set \\<Omega>) ((\\<in>) x) b)\n                          (allAllocationsAlg (N \\<union> {seller})\n                            \\<Omega>))\n                        r) <|\n                     ((N \\<union> {seller}) \\<times>\n                      finestpart (set \\<Omega>)))\n                    (N \\<union> {seller}) (set \\<Omega>)))\n             (maximalStrictAllocations N (set \\<Omega>) b)))))\n    \\<subseteq> set \\<Omega>", "let ?n = seller"], ["proof (state)\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))\n    \\<in> allocationsUniverse \\<and>\n    \\<Union>\n     (Range\n       (Outside' {seller}\n         (the_elem\n           (argmax\n             (sum (summedBidVector\n                    (pseudoAllocation\n                      (randomEl\n                        (takeAll\n                          (\\<lambda>x.\n                              winningAllocationRel (N \\<union> {seller})\n                               (set \\<Omega>) ((\\<in>) x) b)\n                          (allAllocationsAlg (N \\<union> {seller})\n                            \\<Omega>))\n                        r) <|\n                     ((N \\<union> {seller}) \\<times>\n                      finestpart (set \\<Omega>)))\n                    (N \\<union> {seller}) (set \\<Omega>)))\n             (maximalStrictAllocations N (set \\<Omega>) b)))))\n    \\<subseteq> set \\<Omega>", "obtain a where \n  0: \"?a = a -- seller & a \\<in> maximalStrictAllocations N (set \\<Omega>) b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a.\n        Outside' {seller}\n         (the_elem\n           (argmax\n             (sum (summedBidVector\n                    (pseudoAllocation\n                      (randomEl\n                        (takeAll\n                          (\\<lambda>x.\n                              winningAllocationRel (N \\<union> {seller})\n                               (set \\<Omega>) ((\\<in>) x) b)\n                          (allAllocationsAlg (N \\<union> {seller})\n                            \\<Omega>))\n                        r) <|\n                     ((N \\<union> {seller}) \\<times>\n                      finestpart (set \\<Omega>)))\n                    (N \\<union> {seller}) (set \\<Omega>)))\n             (maximalStrictAllocations N (set \\<Omega>) b))) =\n        Outside' {seller} a \\<and>\n        a \\<in> maximalStrictAllocations N (set \\<Omega>)\n                 b \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms winningAllocationIsMaximalWithoutSeller"], ["proof (prove)\nusing this:\n  distinct \\<Omega>\n  set \\<Omega> \\<noteq> {}\n  finite N\n  \\<lbrakk>distinct ?\\<Omega>; set ?\\<Omega> \\<noteq> {}; finite ?N\\<rbrakk>\n  \\<Longrightarrow> Outside' {seller}\n                     (the_elem\n                       (argmax\n                         (sum (summedBidVector\n                                (pseudoAllocation\n                                  (randomEl\n                                    (takeAll\n(\\<lambda>x.\n    winningAllocationRel (?N \\<union> {seller}) (set ?\\<Omega>) ((\\<in>) x)\n     ?b)\n(allAllocationsAlg (?N \\<union> {seller}) ?\\<Omega>))\n                                    ?r) <|\n                                 ((?N \\<union> {seller}) \\<times>\n                                  finestpart (set ?\\<Omega>)))\n                                (?N \\<union> {seller}) (set ?\\<Omega>)))\n                         (maximalStrictAllocations ?N (set ?\\<Omega>) ?b)))\n                    \\<in> Outside' {seller} `\n                          maximalStrictAllocations ?N (set ?\\<Omega>) ?b\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        Outside' {seller}\n         (the_elem\n           (argmax\n             (sum (summedBidVector\n                    (pseudoAllocation\n                      (randomEl\n                        (takeAll\n                          (\\<lambda>x.\n                              winningAllocationRel (N \\<union> {seller})\n                               (set \\<Omega>) ((\\<in>) x) b)\n                          (allAllocationsAlg (N \\<union> {seller})\n                            \\<Omega>))\n                        r) <|\n                     ((N \\<union> {seller}) \\<times>\n                      finestpart (set \\<Omega>)))\n                    (N \\<union> {seller}) (set \\<Omega>)))\n             (maximalStrictAllocations N (set \\<Omega>) b))) =\n        Outside' {seller} a \\<and>\n        a \\<in> maximalStrictAllocations N (set \\<Omega>)\n                 b \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b))) =\n  Outside' {seller} a \\<and>\n  a \\<in> maximalStrictAllocations N (set \\<Omega>) b\n\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))\n    \\<in> allocationsUniverse \\<and>\n    \\<Union>\n     (Range\n       (Outside' {seller}\n         (the_elem\n           (argmax\n             (sum (summedBidVector\n                    (pseudoAllocation\n                      (randomEl\n                        (takeAll\n                          (\\<lambda>x.\n                              winningAllocationRel (N \\<union> {seller})\n                               (set \\<Omega>) ((\\<in>) x) b)\n                          (allAllocationsAlg (N \\<union> {seller})\n                            \\<Omega>))\n                        r) <|\n                     ((N \\<union> {seller}) \\<times>\n                      finestpart (set \\<Omega>)))\n                    (N \\<union> {seller}) (set \\<Omega>)))\n             (maximalStrictAllocations N (set \\<Omega>) b)))))\n    \\<subseteq> set \\<Omega>", "then"], ["proof (chain)\npicking this:\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b))) =\n  Outside' {seller} a \\<and>\n  a \\<in> maximalStrictAllocations N (set \\<Omega>) b", "moreover"], ["proof (chain)\npicking this:\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b))) =\n  Outside' {seller} a \\<and>\n  a \\<in> maximalStrictAllocations N (set \\<Omega>) b", "have \n  1: \"a \\<in> allAllocations ({?n}\\<union>N) (set \\<Omega>)\""], ["proof (prove)\nusing this:\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b))) =\n  Outside' {seller} a \\<and>\n  a \\<in> maximalStrictAllocations N (set \\<Omega>) b\n\ngoal (1 subgoal):\n 1. a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>)", "by auto"], ["proof (state)\nthis:\n  a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>)\n\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))\n    \\<in> allocationsUniverse \\<and>\n    \\<Union>\n     (Range\n       (Outside' {seller}\n         (the_elem\n           (argmax\n             (sum (summedBidVector\n                    (pseudoAllocation\n                      (randomEl\n                        (takeAll\n                          (\\<lambda>x.\n                              winningAllocationRel (N \\<union> {seller})\n                               (set \\<Omega>) ((\\<in>) x) b)\n                          (allAllocationsAlg (N \\<union> {seller})\n                            \\<Omega>))\n                        r) <|\n                     ((N \\<union> {seller}) \\<times>\n                      finestpart (set \\<Omega>)))\n                    (N \\<union> {seller}) (set \\<Omega>)))\n             (maximalStrictAllocations N (set \\<Omega>) b)))))\n    \\<subseteq> set \\<Omega>", "moreover"], ["proof (state)\nthis:\n  a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>)\n\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))\n    \\<in> allocationsUniverse \\<and>\n    \\<Union>\n     (Range\n       (Outside' {seller}\n         (the_elem\n           (argmax\n             (sum (summedBidVector\n                    (pseudoAllocation\n                      (randomEl\n                        (takeAll\n                          (\\<lambda>x.\n                              winningAllocationRel (N \\<union> {seller})\n                               (set \\<Omega>) ((\\<in>) x) b)\n                          (allAllocationsAlg (N \\<union> {seller})\n                            \\<Omega>))\n                        r) <|\n                     ((N \\<union> {seller}) \\<times>\n                      finestpart (set \\<Omega>)))\n                    (N \\<union> {seller}) (set \\<Omega>)))\n             (maximalStrictAllocations N (set \\<Omega>) b)))))\n    \\<subseteq> set \\<Omega>", "have \"maximalStrictAllocations N (set \\<Omega>) b \\<subseteq> allocationsUniverse\""], ["proof (prove)\ngoal (1 subgoal):\n 1. maximalStrictAllocations N (set \\<Omega>) b\n    \\<subseteq> allocationsUniverse", "by (metis (lifting, mono_tags) winningAllocationPossible \n                                    allAllocationsUniverse subset_trans)"], ["proof (state)\nthis:\n  maximalStrictAllocations N (set \\<Omega>) b\n  \\<subseteq> allocationsUniverse\n\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))\n    \\<in> allocationsUniverse \\<and>\n    \\<Union>\n     (Range\n       (Outside' {seller}\n         (the_elem\n           (argmax\n             (sum (summedBidVector\n                    (pseudoAllocation\n                      (randomEl\n                        (takeAll\n                          (\\<lambda>x.\n                              winningAllocationRel (N \\<union> {seller})\n                               (set \\<Omega>) ((\\<in>) x) b)\n                          (allAllocationsAlg (N \\<union> {seller})\n                            \\<Omega>))\n                        r) <|\n                     ((N \\<union> {seller}) \\<times>\n                      finestpart (set \\<Omega>)))\n                    (N \\<union> {seller}) (set \\<Omega>)))\n             (maximalStrictAllocations N (set \\<Omega>) b)))))\n    \\<subseteq> set \\<Omega>", "ultimately"], ["proof (chain)\npicking this:\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b))) =\n  Outside' {seller} a \\<and>\n  a \\<in> maximalStrictAllocations N (set \\<Omega>) b\n  a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>)\n  maximalStrictAllocations N (set \\<Omega>) b\n  \\<subseteq> allocationsUniverse", "moreover"], ["proof (chain)\npicking this:\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b))) =\n  Outside' {seller} a \\<and>\n  a \\<in> maximalStrictAllocations N (set \\<Omega>) b\n  a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>)\n  maximalStrictAllocations N (set \\<Omega>) b\n  \\<subseteq> allocationsUniverse", "have \"?a = a -- seller  &  a \\<in> allocationsUniverse\""], ["proof (prove)\nusing this:\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b))) =\n  Outside' {seller} a \\<and>\n  a \\<in> maximalStrictAllocations N (set \\<Omega>) b\n  a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>)\n  maximalStrictAllocations N (set \\<Omega>) b\n  \\<subseteq> allocationsUniverse\n\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b))) =\n    Outside' {seller} a \\<and>\n    a \\<in> allocationsUniverse", "by blast"], ["proof (state)\nthis:\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b))) =\n  Outside' {seller} a \\<and>\n  a \\<in> allocationsUniverse\n\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))\n    \\<in> allocationsUniverse \\<and>\n    \\<Union>\n     (Range\n       (Outside' {seller}\n         (the_elem\n           (argmax\n             (sum (summedBidVector\n                    (pseudoAllocation\n                      (randomEl\n                        (takeAll\n                          (\\<lambda>x.\n                              winningAllocationRel (N \\<union> {seller})\n                               (set \\<Omega>) ((\\<in>) x) b)\n                          (allAllocationsAlg (N \\<union> {seller})\n                            \\<Omega>))\n                        r) <|\n                     ((N \\<union> {seller}) \\<times>\n                      finestpart (set \\<Omega>)))\n                    (N \\<union> {seller}) (set \\<Omega>)))\n             (maximalStrictAllocations N (set \\<Omega>) b)))))\n    \\<subseteq> set \\<Omega>", "then"], ["proof (chain)\npicking this:\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b))) =\n  Outside' {seller} a \\<and>\n  a \\<in> allocationsUniverse", "have \"?a \\<in> allocationsUniverse\""], ["proof (prove)\nusing this:\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b))) =\n  Outside' {seller} a \\<and>\n  a \\<in> allocationsUniverse\n\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))\n    \\<in> allocationsUniverse", "using allocationsUniverseOutside"], ["proof (prove)\nusing this:\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b))) =\n  Outside' {seller} a \\<and>\n  a \\<in> allocationsUniverse\n  ?a \\<in> allocationsUniverse \\<Longrightarrow>\n  Outside' ?X ?a \\<in> allocationsUniverse\n\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))\n    \\<in> allocationsUniverse", "by auto"], ["proof (state)\nthis:\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b)))\n  \\<in> allocationsUniverse\n\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))\n    \\<in> allocationsUniverse \\<and>\n    \\<Union>\n     (Range\n       (Outside' {seller}\n         (the_elem\n           (argmax\n             (sum (summedBidVector\n                    (pseudoAllocation\n                      (randomEl\n                        (takeAll\n                          (\\<lambda>x.\n                              winningAllocationRel (N \\<union> {seller})\n                               (set \\<Omega>) ((\\<in>) x) b)\n                          (allAllocationsAlg (N \\<union> {seller})\n                            \\<Omega>))\n                        r) <|\n                     ((N \\<union> {seller}) \\<times>\n                      finestpart (set \\<Omega>)))\n                    (N \\<union> {seller}) (set \\<Omega>)))\n             (maximalStrictAllocations N (set \\<Omega>) b)))))\n    \\<subseteq> set \\<Omega>", "moreover"], ["proof (state)\nthis:\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b)))\n  \\<in> allocationsUniverse\n\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))\n    \\<in> allocationsUniverse \\<and>\n    \\<Union>\n     (Range\n       (Outside' {seller}\n         (the_elem\n           (argmax\n             (sum (summedBidVector\n                    (pseudoAllocation\n                      (randomEl\n                        (takeAll\n                          (\\<lambda>x.\n                              winningAllocationRel (N \\<union> {seller})\n                               (set \\<Omega>) ((\\<in>) x) b)\n                          (allAllocationsAlg (N \\<union> {seller})\n                            \\<Omega>))\n                        r) <|\n                     ((N \\<union> {seller}) \\<times>\n                      finestpart (set \\<Omega>)))\n                    (N \\<union> {seller}) (set \\<Omega>)))\n             (maximalStrictAllocations N (set \\<Omega>) b)))))\n    \\<subseteq> set \\<Omega>", "have \"\\<Union> (Range a) = set \\<Omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (Range a) = set \\<Omega>", "using allAllocationsIntersectionSetEquals 1"], ["proof (prove)\nusing this:\n  (?a \\<in> allAllocations ?N ?G) =\n  (?a \\<in> allocationsUniverse \\<and>\n   Domain ?a \\<subseteq> ?N \\<and> \\<Union> (Range ?a) = ?G)\n  a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>)\n\ngoal (1 subgoal):\n 1. \\<Union> (Range a) = set \\<Omega>", "by metis"], ["proof (state)\nthis:\n  \\<Union> (Range a) = set \\<Omega>\n\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))\n    \\<in> allocationsUniverse \\<and>\n    \\<Union>\n     (Range\n       (Outside' {seller}\n         (the_elem\n           (argmax\n             (sum (summedBidVector\n                    (pseudoAllocation\n                      (randomEl\n                        (takeAll\n                          (\\<lambda>x.\n                              winningAllocationRel (N \\<union> {seller})\n                               (set \\<Omega>) ((\\<in>) x) b)\n                          (allAllocationsAlg (N \\<union> {seller})\n                            \\<Omega>))\n                        r) <|\n                     ((N \\<union> {seller}) \\<times>\n                      finestpart (set \\<Omega>)))\n                    (N \\<union> {seller}) (set \\<Omega>)))\n             (maximalStrictAllocations N (set \\<Omega>) b)))))\n    \\<subseteq> set \\<Omega>", "then"], ["proof (chain)\npicking this:\n  \\<Union> (Range a) = set \\<Omega>", "moreover"], ["proof (chain)\npicking this:\n  \\<Union> (Range a) = set \\<Omega>", "have \"\\<Union> (Range ?a) \\<subseteq> set \\<Omega>\""], ["proof (prove)\nusing this:\n  \\<Union> (Range a) = set \\<Omega>\n\ngoal (1 subgoal):\n 1. \\<Union>\n     (Range\n       (Outside' {seller}\n         (the_elem\n           (argmax\n             (sum (summedBidVector\n                    (pseudoAllocation\n                      (randomEl\n                        (takeAll\n                          (\\<lambda>x.\n                              winningAllocationRel (N \\<union> {seller})\n                               (set \\<Omega>) ((\\<in>) x) b)\n                          (allAllocationsAlg (N \\<union> {seller})\n                            \\<Omega>))\n                        r) <|\n                     ((N \\<union> {seller}) \\<times>\n                      finestpart (set \\<Omega>)))\n                    (N \\<union> {seller}) (set \\<Omega>)))\n             (maximalStrictAllocations N (set \\<Omega>) b)))))\n    \\<subseteq> set \\<Omega>", "using Outside_def 0"], ["proof (prove)\nusing this:\n  \\<Union> (Range a) = set \\<Omega>\n  Outside' ?X ?R = ?R - ?X \\<times> Range ?R\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b))) =\n  Outside' {seller} a \\<and>\n  a \\<in> maximalStrictAllocations N (set \\<Omega>) b\n\ngoal (1 subgoal):\n 1. \\<Union>\n     (Range\n       (Outside' {seller}\n         (the_elem\n           (argmax\n             (sum (summedBidVector\n                    (pseudoAllocation\n                      (randomEl\n                        (takeAll\n                          (\\<lambda>x.\n                              winningAllocationRel (N \\<union> {seller})\n                               (set \\<Omega>) ((\\<in>) x) b)\n                          (allAllocationsAlg (N \\<union> {seller})\n                            \\<Omega>))\n                        r) <|\n                     ((N \\<union> {seller}) \\<times>\n                      finestpart (set \\<Omega>)))\n                    (N \\<union> {seller}) (set \\<Omega>)))\n             (maximalStrictAllocations N (set \\<Omega>) b)))))\n    \\<subseteq> set \\<Omega>", "by fast"], ["proof (state)\nthis:\n  \\<Union>\n   (Range\n     (Outside' {seller}\n       (the_elem\n         (argmax\n           (sum (summedBidVector\n                  (pseudoAllocation\n                    (randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel (N \\<union> {seller})\n                             (set \\<Omega>) ((\\<in>) x) b)\n                        (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                      r) <|\n                   ((N \\<union> {seller}) \\<times>\n                    finestpart (set \\<Omega>)))\n                  (N \\<union> {seller}) (set \\<Omega>)))\n           (maximalStrictAllocations N (set \\<Omega>) b)))))\n  \\<subseteq> set \\<Omega>\n\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))\n    \\<in> allocationsUniverse \\<and>\n    \\<Union>\n     (Range\n       (Outside' {seller}\n         (the_elem\n           (argmax\n             (sum (summedBidVector\n                    (pseudoAllocation\n                      (randomEl\n                        (takeAll\n                          (\\<lambda>x.\n                              winningAllocationRel (N \\<union> {seller})\n                               (set \\<Omega>) ((\\<in>) x) b)\n                          (allAllocationsAlg (N \\<union> {seller})\n                            \\<Omega>))\n                        r) <|\n                     ((N \\<union> {seller}) \\<times>\n                      finestpart (set \\<Omega>)))\n                    (N \\<union> {seller}) (set \\<Omega>)))\n             (maximalStrictAllocations N (set \\<Omega>) b)))))\n    \\<subseteq> set \\<Omega>", "ultimately"], ["proof (chain)\npicking this:\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b))) =\n  Outside' {seller} a \\<and>\n  a \\<in> maximalStrictAllocations N (set \\<Omega>) b\n  a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>)\n  maximalStrictAllocations N (set \\<Omega>) b\n  \\<subseteq> allocationsUniverse\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b)))\n  \\<in> allocationsUniverse\n  \\<Union> (Range a) = set \\<Omega>\n  \\<Union>\n   (Range\n     (Outside' {seller}\n       (the_elem\n         (argmax\n           (sum (summedBidVector\n                  (pseudoAllocation\n                    (randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel (N \\<union> {seller})\n                             (set \\<Omega>) ((\\<in>) x) b)\n                        (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                      r) <|\n                   ((N \\<union> {seller}) \\<times>\n                    finestpart (set \\<Omega>)))\n                  (N \\<union> {seller}) (set \\<Omega>)))\n           (maximalStrictAllocations N (set \\<Omega>) b)))))\n  \\<subseteq> set \\<Omega>", "show ?thesis"], ["proof (prove)\nusing this:\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b))) =\n  Outside' {seller} a \\<and>\n  a \\<in> maximalStrictAllocations N (set \\<Omega>) b\n  a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>)\n  maximalStrictAllocations N (set \\<Omega>) b\n  \\<subseteq> allocationsUniverse\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b)))\n  \\<in> allocationsUniverse\n  \\<Union> (Range a) = set \\<Omega>\n  \\<Union>\n   (Range\n     (Outside' {seller}\n       (the_elem\n         (argmax\n           (sum (summedBidVector\n                  (pseudoAllocation\n                    (randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel (N \\<union> {seller})\n                             (set \\<Omega>) ((\\<in>) x) b)\n                        (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                      r) <|\n                   ((N \\<union> {seller}) \\<times>\n                    finestpart (set \\<Omega>)))\n                  (N \\<union> {seller}) (set \\<Omega>)))\n           (maximalStrictAllocations N (set \\<Omega>) b)))))\n  \\<subseteq> set \\<Omega>\n\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))\n    \\<in> allocationsUniverse \\<and>\n    \\<Union>\n     (Range\n       (Outside' {seller}\n         (the_elem\n           (argmax\n             (sum (summedBidVector\n                    (pseudoAllocation\n                      (randomEl\n                        (takeAll\n                          (\\<lambda>x.\n                              winningAllocationRel (N \\<union> {seller})\n                               (set \\<Omega>) ((\\<in>) x) b)\n                          (allAllocationsAlg (N \\<union> {seller})\n                            \\<Omega>))\n                        r) <|\n                     ((N \\<union> {seller}) \\<times>\n                      finestpart (set \\<Omega>)))\n                    (N \\<union> {seller}) (set \\<Omega>)))\n             (maximalStrictAllocations N (set \\<Omega>) b)))))\n    \\<subseteq> set \\<Omega>", "using allocationsUniverseOutside Outside_def"], ["proof (prove)\nusing this:\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b))) =\n  Outside' {seller} a \\<and>\n  a \\<in> maximalStrictAllocations N (set \\<Omega>) b\n  a \\<in> allAllocations ({seller} \\<union> N) (set \\<Omega>)\n  maximalStrictAllocations N (set \\<Omega>) b\n  \\<subseteq> allocationsUniverse\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b)))\n  \\<in> allocationsUniverse\n  \\<Union> (Range a) = set \\<Omega>\n  \\<Union>\n   (Range\n     (Outside' {seller}\n       (the_elem\n         (argmax\n           (sum (summedBidVector\n                  (pseudoAllocation\n                    (randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel (N \\<union> {seller})\n                             (set \\<Omega>) ((\\<in>) x) b)\n                        (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                      r) <|\n                   ((N \\<union> {seller}) \\<times>\n                    finestpart (set \\<Omega>)))\n                  (N \\<union> {seller}) (set \\<Omega>)))\n           (maximalStrictAllocations N (set \\<Omega>) b)))))\n  \\<subseteq> set \\<Omega>\n  ?a \\<in> allocationsUniverse \\<Longrightarrow>\n  Outside' ?X ?a \\<in> allocationsUniverse\n  Outside' ?X ?R = ?R - ?X \\<times> Range ?R\n\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))\n    \\<in> allocationsUniverse \\<and>\n    \\<Union>\n     (Range\n       (Outside' {seller}\n         (the_elem\n           (argmax\n             (sum (summedBidVector\n                    (pseudoAllocation\n                      (randomEl\n                        (takeAll\n                          (\\<lambda>x.\n                              winningAllocationRel (N \\<union> {seller})\n                               (set \\<Omega>) ((\\<in>) x) b)\n                          (allAllocationsAlg (N \\<union> {seller})\n                            \\<Omega>))\n                        r) <|\n                     ((N \\<union> {seller}) \\<times>\n                      finestpart (set \\<Omega>)))\n                    (N \\<union> {seller}) (set \\<Omega>)))\n             (maximalStrictAllocations N (set \\<Omega>) b)))))\n    \\<subseteq> set \\<Omega>", "by blast"], ["proof (state)\nthis:\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b)))\n  \\<in> allocationsUniverse \\<and>\n  \\<Union>\n   (Range\n     (Outside' {seller}\n       (the_elem\n         (argmax\n           (sum (summedBidVector\n                  (pseudoAllocation\n                    (randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel (N \\<union> {seller})\n                             (set \\<Omega>) ((\\<in>) x) b)\n                        (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                      r) <|\n                   ((N \\<union> {seller}) \\<times>\n                    finestpart (set \\<Omega>)))\n                  (N \\<union> {seller}) (set \\<Omega>)))\n           (maximalStrictAllocations N (set \\<Omega>) b)))))\n  \\<subseteq> set \\<Omega>\n\ngoal:\nNo subgoals!", "qed"], ["", "(* The price a participant n has to pay is the revenue achieved if n had not participated minus\n   the value of the goods allocated not to n. *)"], ["", "abbreviation \"vcgp N \\<Omega> b r n ==\n   Max (sum b ` (soldAllocations (N-{n}) (set \\<Omega>))) \n    -  (sum b (vcga N \\<Omega> b r -- n))\""], ["", "(* Since vcga is well-defined the following theorem is trivial. *)"], ["", "theorem vcgpDefiniteness: \n  assumes \"distinct \\<Omega>\" \"set \\<Omega> \\<noteq> {}\" \"finite N\" \n  shows \"\\<exists>! y. vcgp N \\<Omega> b r n = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!y.\n       Max (sum b ` soldAllocations (N - {n}) (set \\<Omega>)) -\n       sum b\n        (Outside' {n}\n          (the_elem\n            (Outside' {seller} `\n             (argmax \\<circ> sum)\n              (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>))\n              ((argmax \\<circ> sum) b\n                (allAllocations (N \\<union> {seller}) (set \\<Omega>)))))) =\n       y", "using assms vcgaDefiniteness"], ["proof (prove)\nusing this:\n  distinct \\<Omega>\n  set \\<Omega> \\<noteq> {}\n  finite N\n  \\<lbrakk>distinct ?\\<Omega>; set ?\\<Omega> \\<noteq> {}; finite ?N\\<rbrakk>\n  \\<Longrightarrow> card\n                     (Outside' {seller} `\n                      (argmax \\<circ> sum)\n                       (summedBidVector\n                         (pseudoAllocation\n                           (randomEl\n                             (takeAll\n                               (\\<lambda>x.\n                                   winningAllocationRel\n                                    (?N \\<union> {seller}) (set ?\\<Omega>)\n                                    ((\\<in>) x) ?b)\n                               (allAllocationsAlg (?N \\<union> {seller})\n                                 ?\\<Omega>))\n                             ?r) <|\n                          ((?N \\<union> {seller}) \\<times>\n                           finestpart (set ?\\<Omega>)))\n                         (?N \\<union> {seller}) (set ?\\<Omega>))\n                       ((argmax \\<circ> sum) ?b\n                         (allAllocations (?N \\<union> {seller})\n                           (set ?\\<Omega>)))) =\n                    1\n\ngoal (1 subgoal):\n 1. \\<exists>!y.\n       Max (sum b ` soldAllocations (N - {n}) (set \\<Omega>)) -\n       sum b\n        (Outside' {n}\n          (the_elem\n            (Outside' {seller} `\n             (argmax \\<circ> sum)\n              (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>))\n              ((argmax \\<circ> sum) b\n                (allAllocations (N \\<union> {seller}) (set \\<Omega>)))))) =\n       y", "by simp"], ["", "lemma soldAllocationsFinite: \n  assumes \"finite N\" \"finite \\<Omega>\" \n  shows \"finite (soldAllocations N \\<Omega>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (soldAllocations N \\<Omega>)", "using assms allAllocationsFinite finite.emptyI finite.insertI finite_UnI finite_imageI"], ["proof (prove)\nusing this:\n  finite N\n  finite \\<Omega>\n  \\<lbrakk>finite ?N; finite ?G\\<rbrakk>\n  \\<Longrightarrow> finite (allAllocations ?N ?G)\n  finite {}\n  finite ?A \\<Longrightarrow> finite (insert ?a ?A)\n  \\<lbrakk>finite ?F; finite ?G\\<rbrakk>\n  \\<Longrightarrow> finite (?F \\<union> ?G)\n  finite ?F \\<Longrightarrow> finite (?h ` ?F)\n\ngoal (1 subgoal):\n 1. finite (soldAllocations N \\<Omega>)", "by metis"], ["", "text\\<open>The price paid by any participant is non-negative.\\<close>"], ["", "theorem NonnegPrices: \n  assumes \"distinct \\<Omega>\" \"set \\<Omega> \\<noteq> {}\" \"finite N\" \n  shows \"vcgp N \\<Omega> b r n >= (0::price)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> Max (sum b ` soldAllocations (N - {n}) (set \\<Omega>)) -\n            sum b\n             (Outside' {n}\n               (the_elem\n                 (Outside' {seller} `\n                  (argmax \\<circ> sum)\n                   (summedBidVector\n                     (pseudoAllocation\n                       (randomEl\n                         (takeAll\n                           (\\<lambda>x.\n                               winningAllocationRel (N \\<union> {seller})\n                                (set \\<Omega>) ((\\<in>) x) b)\n                           (allAllocationsAlg (N \\<union> {seller})\n                             \\<Omega>))\n                         r) <|\n                      ((N \\<union> {seller}) \\<times>\n                       finestpart (set \\<Omega>)))\n                     (N \\<union> {seller}) (set \\<Omega>))\n                   ((argmax \\<circ> sum) b\n                     (allAllocations (N \\<union> {seller})\n                       (set \\<Omega>))))))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 \\<le> Max (sum b ` soldAllocations (N - {n}) (set \\<Omega>)) -\n            sum b\n             (Outside' {n}\n               (the_elem\n                 (Outside' {seller} `\n                  (argmax \\<circ> sum)\n                   (summedBidVector\n                     (pseudoAllocation\n                       (randomEl\n                         (takeAll\n                           (\\<lambda>x.\n                               winningAllocationRel (N \\<union> {seller})\n                                (set \\<Omega>) ((\\<in>) x) b)\n                           (allAllocationsAlg (N \\<union> {seller})\n                             \\<Omega>))\n                         r) <|\n                      ((N \\<union> {seller}) \\<times>\n                       finestpart (set \\<Omega>)))\n                     (N \\<union> {seller}) (set \\<Omega>))\n                   ((argmax \\<circ> sum) b\n                     (allAllocations (N \\<union> {seller})\n                       (set \\<Omega>))))))", "let ?a = \"vcga N \\<Omega> b r\""], ["proof (state)\ngoal (1 subgoal):\n 1. 0 \\<le> Max (sum b ` soldAllocations (N - {n}) (set \\<Omega>)) -\n            sum b\n             (Outside' {n}\n               (the_elem\n                 (Outside' {seller} `\n                  (argmax \\<circ> sum)\n                   (summedBidVector\n                     (pseudoAllocation\n                       (randomEl\n                         (takeAll\n                           (\\<lambda>x.\n                               winningAllocationRel (N \\<union> {seller})\n                                (set \\<Omega>) ((\\<in>) x) b)\n                           (allAllocationsAlg (N \\<union> {seller})\n                             \\<Omega>))\n                         r) <|\n                      ((N \\<union> {seller}) \\<times>\n                       finestpart (set \\<Omega>)))\n                     (N \\<union> {seller}) (set \\<Omega>))\n                   ((argmax \\<circ> sum) b\n                     (allAllocations (N \\<union> {seller})\n                       (set \\<Omega>))))))", "let ?A = soldAllocations"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 \\<le> Max (sum b ` soldAllocations (N - {n}) (set \\<Omega>)) -\n            sum b\n             (Outside' {n}\n               (the_elem\n                 (Outside' {seller} `\n                  (argmax \\<circ> sum)\n                   (summedBidVector\n                     (pseudoAllocation\n                       (randomEl\n                         (takeAll\n                           (\\<lambda>x.\n                               winningAllocationRel (N \\<union> {seller})\n                                (set \\<Omega>) ((\\<in>) x) b)\n                           (allAllocationsAlg (N \\<union> {seller})\n                             \\<Omega>))\n                         r) <|\n                      ((N \\<union> {seller}) \\<times>\n                       finestpart (set \\<Omega>)))\n                     (N \\<union> {seller}) (set \\<Omega>))\n                   ((argmax \\<circ> sum) b\n                     (allAllocations (N \\<union> {seller})\n                       (set \\<Omega>))))))", "let ?f = \"sum b\""], ["proof (state)\ngoal (1 subgoal):\n 1. 0 \\<le> Max (sum b ` soldAllocations (N - {n}) (set \\<Omega>)) -\n            sum b\n             (Outside' {n}\n               (the_elem\n                 (Outside' {seller} `\n                  (argmax \\<circ> sum)\n                   (summedBidVector\n                     (pseudoAllocation\n                       (randomEl\n                         (takeAll\n                           (\\<lambda>x.\n                               winningAllocationRel (N \\<union> {seller})\n                                (set \\<Omega>) ((\\<in>) x) b)\n                           (allAllocationsAlg (N \\<union> {seller})\n                             \\<Omega>))\n                         r) <|\n                      ((N \\<union> {seller}) \\<times>\n                       finestpart (set \\<Omega>)))\n                     (N \\<union> {seller}) (set \\<Omega>))\n                   ((argmax \\<circ> sum) b\n                     (allAllocations (N \\<union> {seller})\n                       (set \\<Omega>))))))", "have \"?a \\<in> ?A N (set \\<Omega>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. the_elem\n     (Outside' {seller} `\n      (argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) b)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             r) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) b\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>))))\n    \\<in> soldAllocations N (set \\<Omega>)", "using assms"], ["proof (prove)\nusing this:\n  distinct \\<Omega>\n  set \\<Omega> \\<noteq> {}\n  finite N\n\ngoal (1 subgoal):\n 1. the_elem\n     (Outside' {seller} `\n      (argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) b)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             r) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) b\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>))))\n    \\<in> soldAllocations N (set \\<Omega>)", "by (rule onlyGoodsAreAllocated)"], ["proof (state)\nthis:\n  the_elem\n   (Outside' {seller} `\n    (argmax \\<circ> sum)\n     (summedBidVector\n       (pseudoAllocation\n         (randomEl\n           (takeAll\n             (\\<lambda>x.\n                 winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                  ((\\<in>) x) b)\n             (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n           r) <|\n        ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n       (N \\<union> {seller}) (set \\<Omega>))\n     ((argmax \\<circ> sum) b\n       (allAllocations (N \\<union> {seller}) (set \\<Omega>))))\n  \\<in> soldAllocations N (set \\<Omega>)\n\ngoal (1 subgoal):\n 1. 0 \\<le> Max (sum b ` soldAllocations (N - {n}) (set \\<Omega>)) -\n            sum b\n             (Outside' {n}\n               (the_elem\n                 (Outside' {seller} `\n                  (argmax \\<circ> sum)\n                   (summedBidVector\n                     (pseudoAllocation\n                       (randomEl\n                         (takeAll\n                           (\\<lambda>x.\n                               winningAllocationRel (N \\<union> {seller})\n                                (set \\<Omega>) ((\\<in>) x) b)\n                           (allAllocationsAlg (N \\<union> {seller})\n                             \\<Omega>))\n                         r) <|\n                      ((N \\<union> {seller}) \\<times>\n                       finestpart (set \\<Omega>)))\n                     (N \\<union> {seller}) (set \\<Omega>))\n                   ((argmax \\<circ> sum) b\n                     (allAllocations (N \\<union> {seller})\n                       (set \\<Omega>))))))", "then"], ["proof (chain)\npicking this:\n  the_elem\n   (Outside' {seller} `\n    (argmax \\<circ> sum)\n     (summedBidVector\n       (pseudoAllocation\n         (randomEl\n           (takeAll\n             (\\<lambda>x.\n                 winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                  ((\\<in>) x) b)\n             (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n           r) <|\n        ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n       (N \\<union> {seller}) (set \\<Omega>))\n     ((argmax \\<circ> sum) b\n       (allAllocations (N \\<union> {seller}) (set \\<Omega>))))\n  \\<in> soldAllocations N (set \\<Omega>)", "have \"?a -- n \\<in> ?A (N-{n}) (set \\<Omega>)\""], ["proof (prove)\nusing this:\n  the_elem\n   (Outside' {seller} `\n    (argmax \\<circ> sum)\n     (summedBidVector\n       (pseudoAllocation\n         (randomEl\n           (takeAll\n             (\\<lambda>x.\n                 winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                  ((\\<in>) x) b)\n             (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n           r) <|\n        ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n       (N \\<union> {seller}) (set \\<Omega>))\n     ((argmax \\<circ> sum) b\n       (allAllocations (N \\<union> {seller}) (set \\<Omega>))))\n  \\<in> soldAllocations N (set \\<Omega>)\n\ngoal (1 subgoal):\n 1. Outside' {n}\n     (the_elem\n       (Outside' {seller} `\n        (argmax \\<circ> sum)\n         (summedBidVector\n           (pseudoAllocation\n             (randomEl\n               (takeAll\n                 (\\<lambda>x.\n                     winningAllocationRel (N \\<union> {seller})\n                      (set \\<Omega>) ((\\<in>) x) b)\n                 (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n               r) <|\n            ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n           (N \\<union> {seller}) (set \\<Omega>))\n         ((argmax \\<circ> sum) b\n           (allAllocations (N \\<union> {seller}) (set \\<Omega>)))))\n    \\<in> soldAllocations (N - {n}) (set \\<Omega>)", "by (rule soldAllocationRestriction)"], ["proof (state)\nthis:\n  Outside' {n}\n   (the_elem\n     (Outside' {seller} `\n      (argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) b)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             r) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) b\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))))\n  \\<in> soldAllocations (N - {n}) (set \\<Omega>)\n\ngoal (1 subgoal):\n 1. 0 \\<le> Max (sum b ` soldAllocations (N - {n}) (set \\<Omega>)) -\n            sum b\n             (Outside' {n}\n               (the_elem\n                 (Outside' {seller} `\n                  (argmax \\<circ> sum)\n                   (summedBidVector\n                     (pseudoAllocation\n                       (randomEl\n                         (takeAll\n                           (\\<lambda>x.\n                               winningAllocationRel (N \\<union> {seller})\n                                (set \\<Omega>) ((\\<in>) x) b)\n                           (allAllocationsAlg (N \\<union> {seller})\n                             \\<Omega>))\n                         r) <|\n                      ((N \\<union> {seller}) \\<times>\n                       finestpart (set \\<Omega>)))\n                     (N \\<union> {seller}) (set \\<Omega>))\n                   ((argmax \\<circ> sum) b\n                     (allAllocations (N \\<union> {seller})\n                       (set \\<Omega>))))))", "moreover"], ["proof (state)\nthis:\n  Outside' {n}\n   (the_elem\n     (Outside' {seller} `\n      (argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) b)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             r) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) b\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))))\n  \\<in> soldAllocations (N - {n}) (set \\<Omega>)\n\ngoal (1 subgoal):\n 1. 0 \\<le> Max (sum b ` soldAllocations (N - {n}) (set \\<Omega>)) -\n            sum b\n             (Outside' {n}\n               (the_elem\n                 (Outside' {seller} `\n                  (argmax \\<circ> sum)\n                   (summedBidVector\n                     (pseudoAllocation\n                       (randomEl\n                         (takeAll\n                           (\\<lambda>x.\n                               winningAllocationRel (N \\<union> {seller})\n                                (set \\<Omega>) ((\\<in>) x) b)\n                           (allAllocationsAlg (N \\<union> {seller})\n                             \\<Omega>))\n                         r) <|\n                      ((N \\<union> {seller}) \\<times>\n                       finestpart (set \\<Omega>)))\n                     (N \\<union> {seller}) (set \\<Omega>))\n                   ((argmax \\<circ> sum) b\n                     (allAllocations (N \\<union> {seller})\n                       (set \\<Omega>))))))", "have \"finite (?A (N-{n}) (set \\<Omega>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (soldAllocations (N - {n}) (set \\<Omega>))", "using assms(3) soldAllocationsFinite finite_set finite_Diff"], ["proof (prove)\nusing this:\n  finite N\n  \\<lbrakk>finite ?N; finite ?\\<Omega>\\<rbrakk>\n  \\<Longrightarrow> finite (soldAllocations ?N ?\\<Omega>)\n  finite (set ?xs)\n  finite ?A \\<Longrightarrow> finite (?A - ?B)\n\ngoal (1 subgoal):\n 1. finite (soldAllocations (N - {n}) (set \\<Omega>))", "by blast"], ["proof (state)\nthis:\n  finite (soldAllocations (N - {n}) (set \\<Omega>))\n\ngoal (1 subgoal):\n 1. 0 \\<le> Max (sum b ` soldAllocations (N - {n}) (set \\<Omega>)) -\n            sum b\n             (Outside' {n}\n               (the_elem\n                 (Outside' {seller} `\n                  (argmax \\<circ> sum)\n                   (summedBidVector\n                     (pseudoAllocation\n                       (randomEl\n                         (takeAll\n                           (\\<lambda>x.\n                               winningAllocationRel (N \\<union> {seller})\n                                (set \\<Omega>) ((\\<in>) x) b)\n                           (allAllocationsAlg (N \\<union> {seller})\n                             \\<Omega>))\n                         r) <|\n                      ((N \\<union> {seller}) \\<times>\n                       finestpart (set \\<Omega>)))\n                     (N \\<union> {seller}) (set \\<Omega>))\n                   ((argmax \\<circ> sum) b\n                     (allAllocations (N \\<union> {seller})\n                       (set \\<Omega>))))))", "ultimately"], ["proof (chain)\npicking this:\n  Outside' {n}\n   (the_elem\n     (Outside' {seller} `\n      (argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) b)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             r) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) b\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))))\n  \\<in> soldAllocations (N - {n}) (set \\<Omega>)\n  finite (soldAllocations (N - {n}) (set \\<Omega>))", "have \"Max (?f`(?A (N-{n}) (set \\<Omega>))) \\<ge> ?f (?a -- n)\" \n  (is \"?L >= ?R\")"], ["proof (prove)\nusing this:\n  Outside' {n}\n   (the_elem\n     (Outside' {seller} `\n      (argmax \\<circ> sum)\n       (summedBidVector\n         (pseudoAllocation\n           (randomEl\n             (takeAll\n               (\\<lambda>x.\n                   winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                    ((\\<in>) x) b)\n               (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n             r) <|\n          ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n         (N \\<union> {seller}) (set \\<Omega>))\n       ((argmax \\<circ> sum) b\n         (allAllocations (N \\<union> {seller}) (set \\<Omega>)))))\n  \\<in> soldAllocations (N - {n}) (set \\<Omega>)\n  finite (soldAllocations (N - {n}) (set \\<Omega>))\n\ngoal (1 subgoal):\n 1. sum b\n     (Outside' {n}\n       (the_elem\n         (Outside' {seller} `\n          (argmax \\<circ> sum)\n           (summedBidVector\n             (pseudoAllocation\n               (randomEl\n                 (takeAll\n                   (\\<lambda>x.\n                       winningAllocationRel (N \\<union> {seller})\n                        (set \\<Omega>) ((\\<in>) x) b)\n                   (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                 r) <|\n              ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n             (N \\<union> {seller}) (set \\<Omega>))\n           ((argmax \\<circ> sum) b\n             (allAllocations (N \\<union> {seller}) (set \\<Omega>))))))\n    \\<le> Max (sum b ` soldAllocations (N - {n}) (set \\<Omega>))", "by (rule maxLemma)"], ["proof (state)\nthis:\n  sum b\n   (Outside' {n}\n     (the_elem\n       (Outside' {seller} `\n        (argmax \\<circ> sum)\n         (summedBidVector\n           (pseudoAllocation\n             (randomEl\n               (takeAll\n                 (\\<lambda>x.\n                     winningAllocationRel (N \\<union> {seller})\n                      (set \\<Omega>) ((\\<in>) x) b)\n                 (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n               r) <|\n            ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n           (N \\<union> {seller}) (set \\<Omega>))\n         ((argmax \\<circ> sum) b\n           (allAllocations (N \\<union> {seller}) (set \\<Omega>))))))\n  \\<le> Max (sum b ` soldAllocations (N - {n}) (set \\<Omega>))\n\ngoal (1 subgoal):\n 1. 0 \\<le> Max (sum b ` soldAllocations (N - {n}) (set \\<Omega>)) -\n            sum b\n             (Outside' {n}\n               (the_elem\n                 (Outside' {seller} `\n                  (argmax \\<circ> sum)\n                   (summedBidVector\n                     (pseudoAllocation\n                       (randomEl\n                         (takeAll\n                           (\\<lambda>x.\n                               winningAllocationRel (N \\<union> {seller})\n                                (set \\<Omega>) ((\\<in>) x) b)\n                           (allAllocationsAlg (N \\<union> {seller})\n                             \\<Omega>))\n                         r) <|\n                      ((N \\<union> {seller}) \\<times>\n                       finestpart (set \\<Omega>)))\n                     (N \\<union> {seller}) (set \\<Omega>))\n                   ((argmax \\<circ> sum) b\n                     (allAllocations (N \\<union> {seller})\n                       (set \\<Omega>))))))", "then"], ["proof (chain)\npicking this:\n  sum b\n   (Outside' {n}\n     (the_elem\n       (Outside' {seller} `\n        (argmax \\<circ> sum)\n         (summedBidVector\n           (pseudoAllocation\n             (randomEl\n               (takeAll\n                 (\\<lambda>x.\n                     winningAllocationRel (N \\<union> {seller})\n                      (set \\<Omega>) ((\\<in>) x) b)\n                 (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n               r) <|\n            ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n           (N \\<union> {seller}) (set \\<Omega>))\n         ((argmax \\<circ> sum) b\n           (allAllocations (N \\<union> {seller}) (set \\<Omega>))))))\n  \\<le> Max (sum b ` soldAllocations (N - {n}) (set \\<Omega>))", "show \"?L - ?R >=0\""], ["proof (prove)\nusing this:\n  sum b\n   (Outside' {n}\n     (the_elem\n       (Outside' {seller} `\n        (argmax \\<circ> sum)\n         (summedBidVector\n           (pseudoAllocation\n             (randomEl\n               (takeAll\n                 (\\<lambda>x.\n                     winningAllocationRel (N \\<union> {seller})\n                      (set \\<Omega>) ((\\<in>) x) b)\n                 (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n               r) <|\n            ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n           (N \\<union> {seller}) (set \\<Omega>))\n         ((argmax \\<circ> sum) b\n           (allAllocations (N \\<union> {seller}) (set \\<Omega>))))))\n  \\<le> Max (sum b ` soldAllocations (N - {n}) (set \\<Omega>))\n\ngoal (1 subgoal):\n 1. 0 \\<le> Max (sum b ` soldAllocations (N - {n}) (set \\<Omega>)) -\n            sum b\n             (Outside' {n}\n               (the_elem\n                 (Outside' {seller} `\n                  (argmax \\<circ> sum)\n                   (summedBidVector\n                     (pseudoAllocation\n                       (randomEl\n                         (takeAll\n                           (\\<lambda>x.\n                               winningAllocationRel (N \\<union> {seller})\n                                (set \\<Omega>) ((\\<in>) x) b)\n                           (allAllocationsAlg (N \\<union> {seller})\n                             \\<Omega>))\n                         r) <|\n                      ((N \\<union> {seller}) \\<times>\n                       finestpart (set \\<Omega>)))\n                     (N \\<union> {seller}) (set \\<Omega>))\n                   ((argmax \\<circ> sum) b\n                     (allAllocations (N \\<union> {seller})\n                       (set \\<Omega>))))))", "by linarith"], ["proof (state)\nthis:\n  0 \\<le> Max (sum b ` soldAllocations (N - {n}) (set \\<Omega>)) -\n          sum b\n           (Outside' {n}\n             (the_elem\n               (Outside' {seller} `\n                (argmax \\<circ> sum)\n                 (summedBidVector\n                   (pseudoAllocation\n                     (randomEl\n                       (takeAll\n                         (\\<lambda>x.\n                             winningAllocationRel (N \\<union> {seller})\n                              (set \\<Omega>) ((\\<in>) x) b)\n                         (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                       r) <|\n                    ((N \\<union> {seller}) \\<times>\n                     finestpart (set \\<Omega>)))\n                   (N \\<union> {seller}) (set \\<Omega>))\n                 ((argmax \\<circ> sum) b\n                   (allAllocations (N \\<union> {seller}) (set \\<Omega>))))))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma allocationDisjointAuxiliary: \n  assumes \"a \\<in> allocationsUniverse\" and \"n1 \\<in> Domain a\" and \"n2 \\<in> Domain a\" and \"n1 \\<noteq> n2\" \n  shows \"a,,n1 \\<inter> a,,n2 = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a ,, n1 \\<inter> a ,, n2 = {}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a ,, n1 \\<inter> a ,, n2 = {}", "have \"Range a \\<in> partitionsUniverse\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Range a \\<in> partitionsUniverse", "using assms nonOverlapping"], ["proof (prove)\nusing this:\n  a \\<in> allocationsUniverse\n  n1 \\<in> Domain a\n  n2 \\<in> Domain a\n  n1 \\<noteq> n2\n  ?R \\<in> partitionValuedUniverse \\<Longrightarrow>\n  is_non_overlapping (Range ?R)\n\ngoal (1 subgoal):\n 1. Range a \\<in> partitionsUniverse", "by blast"], ["proof (state)\nthis:\n  Range a \\<in> partitionsUniverse\n\ngoal (1 subgoal):\n 1. a ,, n1 \\<inter> a ,, n2 = {}", "moreover"], ["proof (state)\nthis:\n  Range a \\<in> partitionsUniverse\n\ngoal (1 subgoal):\n 1. a ,, n1 \\<inter> a ,, n2 = {}", "have \"a \\<in> injectionsUniverse & a \\<in> partitionValuedUniverse\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> injectionsUniverse \\<and> a \\<in> partitionValuedUniverse", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> allocationsUniverse\n  n1 \\<in> Domain a\n  n2 \\<in> Domain a\n  n1 \\<noteq> n2\n\ngoal (1 subgoal):\n 1. a \\<in> injectionsUniverse \\<and> a \\<in> partitionValuedUniverse", "by (metis (lifting, no_types) IntD1 IntD2)"], ["proof (state)\nthis:\n  a \\<in> injectionsUniverse \\<and> a \\<in> partitionValuedUniverse\n\ngoal (1 subgoal):\n 1. a ,, n1 \\<inter> a ,, n2 = {}", "ultimately"], ["proof (chain)\npicking this:\n  Range a \\<in> partitionsUniverse\n  a \\<in> injectionsUniverse \\<and> a \\<in> partitionValuedUniverse", "moreover"], ["proof (chain)\npicking this:\n  Range a \\<in> partitionsUniverse\n  a \\<in> injectionsUniverse \\<and> a \\<in> partitionValuedUniverse", "have \"a,,n1 \\<in> Range a\""], ["proof (prove)\nusing this:\n  Range a \\<in> partitionsUniverse\n  a \\<in> injectionsUniverse \\<and> a \\<in> partitionValuedUniverse\n\ngoal (1 subgoal):\n 1. a ,, n1 \\<in> Range a", "using assms"], ["proof (prove)\nusing this:\n  Range a \\<in> partitionsUniverse\n  a \\<in> injectionsUniverse \\<and> a \\<in> partitionValuedUniverse\n  a \\<in> allocationsUniverse\n  n1 \\<in> Domain a\n  n2 \\<in> Domain a\n  n1 \\<noteq> n2\n\ngoal (1 subgoal):\n 1. a ,, n1 \\<in> Range a", "by (metis (mono_tags) eval_runiq_in_Range mem_Collect_eq)"], ["proof (state)\nthis:\n  a ,, n1 \\<in> Range a\n\ngoal (1 subgoal):\n 1. a ,, n1 \\<inter> a ,, n2 = {}", "ultimately"], ["proof (chain)\npicking this:\n  Range a \\<in> partitionsUniverse\n  a \\<in> injectionsUniverse \\<and> a \\<in> partitionValuedUniverse\n  a ,, n1 \\<in> Range a", "moreover"], ["proof (chain)\npicking this:\n  Range a \\<in> partitionsUniverse\n  a \\<in> injectionsUniverse \\<and> a \\<in> partitionValuedUniverse\n  a ,, n1 \\<in> Range a", "have \"a,,n1 \\<noteq> a,,n2\""], ["proof (prove)\nusing this:\n  Range a \\<in> partitionsUniverse\n  a \\<in> injectionsUniverse \\<and> a \\<in> partitionValuedUniverse\n  a ,, n1 \\<in> Range a\n\ngoal (1 subgoal):\n 1. a ,, n1 \\<noteq> a ,, n2", "using assms converse.intros eval_runiq_rel mem_Collect_eq runiq_basic"], ["proof (prove)\nusing this:\n  Range a \\<in> partitionsUniverse\n  a \\<in> injectionsUniverse \\<and> a \\<in> partitionValuedUniverse\n  a ,, n1 \\<in> Range a\n  a \\<in> allocationsUniverse\n  n1 \\<in> Domain a\n  n2 \\<in> Domain a\n  n1 \\<noteq> n2\n  (?a, ?b) \\<in> ?r \\<Longrightarrow> (?b, ?a) \\<in> ?r\\<inverse>\n  \\<lbrakk>?x \\<in> Domain ?R; runiq ?R\\<rbrakk>\n  \\<Longrightarrow> (?x, ?R ,, ?x) \\<in> ?R\n  (?a \\<in> Collect ?P) = ?P ?a\n  runiq ?R =\n  (\\<forall>x y y'.\n      (x, y) \\<in> ?R \\<and> (x, y') \\<in> ?R \\<longrightarrow> y = y')\n\ngoal (1 subgoal):\n 1. a ,, n1 \\<noteq> a ,, n2", "by (metis (lifting, no_types))"], ["proof (state)\nthis:\n  a ,, n1 \\<noteq> a ,, n2\n\ngoal (1 subgoal):\n 1. a ,, n1 \\<inter> a ,, n2 = {}", "ultimately"], ["proof (chain)\npicking this:\n  Range a \\<in> partitionsUniverse\n  a \\<in> injectionsUniverse \\<and> a \\<in> partitionValuedUniverse\n  a ,, n1 \\<in> Range a\n  a ,, n1 \\<noteq> a ,, n2", "show ?thesis"], ["proof (prove)\nusing this:\n  Range a \\<in> partitionsUniverse\n  a \\<in> injectionsUniverse \\<and> a \\<in> partitionValuedUniverse\n  a ,, n1 \\<in> Range a\n  a ,, n1 \\<noteq> a ,, n2\n\ngoal (1 subgoal):\n 1. a ,, n1 \\<inter> a ,, n2 = {}", "using is_non_overlapping_def"], ["proof (prove)\nusing this:\n  Range a \\<in> partitionsUniverse\n  a \\<in> injectionsUniverse \\<and> a \\<in> partitionValuedUniverse\n  a ,, n1 \\<in> Range a\n  a ,, n1 \\<noteq> a ,, n2\n  is_non_overlapping ?P =\n  (\\<forall>X\\<in>?P.\n      \\<forall>Y\\<in>?P. (X \\<inter> Y \\<noteq> {}) = (X = Y))\n\ngoal (1 subgoal):\n 1. a ,, n1 \\<inter> a ,, n2 = {}", "by (metis (lifting, no_types) assms(3) eval_runiq_in_Range mem_Collect_eq)"], ["proof (state)\nthis:\n  a ,, n1 \\<inter> a ,, n2 = {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma allocationDisjoint: \n  assumes \"a \\<in> allocationsUniverse\" and \"n1 \\<in> Domain a\" and \"n2 \\<in> Domain a\" and \"n1 \\<noteq> n2\" \n  shows \"a,,,n1 \\<inter> a,,,n2 = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a ,,, n1 \\<inter> a ,,, n2 = {}", "using assms allocationDisjointAuxiliary imageEquivalence"], ["proof (prove)\nusing this:\n  a \\<in> allocationsUniverse\n  n1 \\<in> Domain a\n  n2 \\<in> Domain a\n  n1 \\<noteq> n2\n  \\<lbrakk>?a \\<in> allocationsUniverse; ?n1.0 \\<in> Domain ?a;\n   ?n2.0 \\<in> Domain ?a; ?n1.0 \\<noteq> ?n2.0\\<rbrakk>\n  \\<Longrightarrow> ?a ,, ?n1.0 \\<inter> ?a ,, ?n2.0 = {}\n  \\<lbrakk>runiq ?f; ?x \\<in> Domain ?f\\<rbrakk>\n  \\<Longrightarrow> ?f ,, ?x = ?f ,,, ?x\n\ngoal (1 subgoal):\n 1. a ,,, n1 \\<inter> a ,,, n2 = {}", "by fastforce"], ["", "text\\<open>No good is assigned twice.\\<close>"], ["", "(* We assume implicitely that n1, n2 are participants, \\<Omega> a goods list and N the participant set\n   with \"n1 \\<in> Domain (vcga' N \\<Omega> b r)\" \"n2 \\<in> Domain (vcga' N \\<Omega> b r)\". However,\n   formally these assumptions are not needed for the theorem. *)"], ["", "theorem PairwiseDisjointAllocations:\n  assumes \"distinct \\<Omega>\" \"set \\<Omega> \\<noteq> {}\" \"finite N\"  \"n1 \\<noteq> n2\" \n  shows \"(vcga' N \\<Omega> b r),,,n1 \\<inter> (vcga' N \\<Omega> b r),,,n2 = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b))) ,,,\n    n1 \\<inter>\n    Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b))) ,,,\n    n2 =\n    {}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b))) ,,,\n    n1 \\<inter>\n    Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b))) ,,,\n    n2 =\n    {}", "have \"vcga' N \\<Omega> b r \\<in> allocationsUniverse\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))\n    \\<in> allocationsUniverse", "using vcgaIsAllocationAllocatingGoodsOnly assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>distinct ?\\<Omega>; set ?\\<Omega> \\<noteq> {}; finite ?N\\<rbrakk>\n  \\<Longrightarrow> Outside' {seller}\n                     (the_elem\n                       (argmax\n                         (sum (summedBidVector\n                                (pseudoAllocation\n                                  (randomEl\n                                    (takeAll\n(\\<lambda>x.\n    winningAllocationRel (?N \\<union> {seller}) (set ?\\<Omega>) ((\\<in>) x)\n     ?b)\n(allAllocationsAlg (?N \\<union> {seller}) ?\\<Omega>))\n                                    ?r) <|\n                                 ((?N \\<union> {seller}) \\<times>\n                                  finestpart (set ?\\<Omega>)))\n                                (?N \\<union> {seller}) (set ?\\<Omega>)))\n                         (maximalStrictAllocations ?N (set ?\\<Omega>) ?b)))\n                    \\<in> allocationsUniverse \\<and>\n                    \\<Union>\n                     (Range\n                       (Outside' {seller}\n                         (the_elem\n                           (argmax\n                             (sum (summedBidVector\n                                    (pseudoAllocation\n(randomEl\n  (takeAll\n    (\\<lambda>x.\n        winningAllocationRel (?N \\<union> {seller}) (set ?\\<Omega>)\n         ((\\<in>) x) ?b)\n    (allAllocationsAlg (?N \\<union> {seller}) ?\\<Omega>))\n  ?r) <|\n                                     ((?N \\<union> {seller}) \\<times>\nfinestpart (set ?\\<Omega>)))\n                                    (?N \\<union> {seller}) (set ?\\<Omega>)))\n                             (maximalStrictAllocations ?N (set ?\\<Omega>)\n                               ?b)))))\n                    \\<subseteq> set ?\\<Omega>\n  distinct \\<Omega>\n  set \\<Omega> \\<noteq> {}\n  finite N\n  n1 \\<noteq> n2\n\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))\n    \\<in> allocationsUniverse", "by blast"], ["proof (state)\nthis:\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b)))\n  \\<in> allocationsUniverse\n\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b))) ,,,\n    n1 \\<inter>\n    Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b))) ,,,\n    n2 =\n    {}", "then"], ["proof (chain)\npicking this:\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b)))\n  \\<in> allocationsUniverse", "show ?thesis"], ["proof (prove)\nusing this:\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b)))\n  \\<in> allocationsUniverse\n\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b))) ,,,\n    n1 \\<inter>\n    Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b))) ,,,\n    n2 =\n    {}", "using allocationDisjoint assms"], ["proof (prove)\nusing this:\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b)))\n  \\<in> allocationsUniverse\n  \\<lbrakk>?a \\<in> allocationsUniverse; ?n1.0 \\<in> Domain ?a;\n   ?n2.0 \\<in> Domain ?a; ?n1.0 \\<noteq> ?n2.0\\<rbrakk>\n  \\<Longrightarrow> ?a ,,, ?n1.0 \\<inter> ?a ,,, ?n2.0 = {}\n  distinct \\<Omega>\n  set \\<Omega> \\<noteq> {}\n  finite N\n  n1 \\<noteq> n2\n\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b))) ,,,\n    n1 \\<inter>\n    Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b))) ,,,\n    n2 =\n    {}", "by fast"], ["proof (state)\nthis:\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b))) ,,,\n  n1 \\<inter>\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b))) ,,,\n  n2 =\n  {}\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Nothing outside the set of goods is allocated.\\<close>"], ["", "theorem OnlyGoodsAllocated: \n  assumes \"distinct \\<Omega>\" \"set \\<Omega> \\<noteq> {}\" \"finite N\" \"g \\<in> (vcga N \\<Omega> b r),,,n\" \n  shows \"g \\<in> set \\<Omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<in> set \\<Omega>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. g \\<in> set \\<Omega>", "let ?a = \"vcga' N \\<Omega> b r\""], ["proof (state)\ngoal (1 subgoal):\n 1. g \\<in> set \\<Omega>", "have \"?a \\<in> allocationsUniverse\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))\n    \\<in> allocationsUniverse", "using assms(1,2,3) vcgaIsAllocationAllocatingGoodsOnly"], ["proof (prove)\nusing this:\n  distinct \\<Omega>\n  set \\<Omega> \\<noteq> {}\n  finite N\n  \\<lbrakk>distinct ?\\<Omega>; set ?\\<Omega> \\<noteq> {}; finite ?N\\<rbrakk>\n  \\<Longrightarrow> Outside' {seller}\n                     (the_elem\n                       (argmax\n                         (sum (summedBidVector\n                                (pseudoAllocation\n                                  (randomEl\n                                    (takeAll\n(\\<lambda>x.\n    winningAllocationRel (?N \\<union> {seller}) (set ?\\<Omega>) ((\\<in>) x)\n     ?b)\n(allAllocationsAlg (?N \\<union> {seller}) ?\\<Omega>))\n                                    ?r) <|\n                                 ((?N \\<union> {seller}) \\<times>\n                                  finestpart (set ?\\<Omega>)))\n                                (?N \\<union> {seller}) (set ?\\<Omega>)))\n                         (maximalStrictAllocations ?N (set ?\\<Omega>) ?b)))\n                    \\<in> allocationsUniverse \\<and>\n                    \\<Union>\n                     (Range\n                       (Outside' {seller}\n                         (the_elem\n                           (argmax\n                             (sum (summedBidVector\n                                    (pseudoAllocation\n(randomEl\n  (takeAll\n    (\\<lambda>x.\n        winningAllocationRel (?N \\<union> {seller}) (set ?\\<Omega>)\n         ((\\<in>) x) ?b)\n    (allAllocationsAlg (?N \\<union> {seller}) ?\\<Omega>))\n  ?r) <|\n                                     ((?N \\<union> {seller}) \\<times>\nfinestpart (set ?\\<Omega>)))\n                                    (?N \\<union> {seller}) (set ?\\<Omega>)))\n                             (maximalStrictAllocations ?N (set ?\\<Omega>)\n                               ?b)))))\n                    \\<subseteq> set ?\\<Omega>\n\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b)))\n    \\<in> allocationsUniverse", "by blast"], ["proof (state)\nthis:\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b)))\n  \\<in> allocationsUniverse\n\ngoal (1 subgoal):\n 1. g \\<in> set \\<Omega>", "then"], ["proof (chain)\npicking this:\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b)))\n  \\<in> allocationsUniverse", "have 1: \"runiq ?a\""], ["proof (prove)\nusing this:\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b)))\n  \\<in> allocationsUniverse\n\ngoal (1 subgoal):\n 1. runiq\n     (Outside' {seller}\n       (the_elem\n         (argmax\n           (sum (summedBidVector\n                  (pseudoAllocation\n                    (randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel (N \\<union> {seller})\n                             (set \\<Omega>) ((\\<in>) x) b)\n                        (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                      r) <|\n                   ((N \\<union> {seller}) \\<times>\n                    finestpart (set \\<Omega>)))\n                  (N \\<union> {seller}) (set \\<Omega>)))\n           (maximalStrictAllocations N (set \\<Omega>) b))))", "using assms(1,2,3)"], ["proof (prove)\nusing this:\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b)))\n  \\<in> allocationsUniverse\n  distinct \\<Omega>\n  set \\<Omega> \\<noteq> {}\n  finite N\n\ngoal (1 subgoal):\n 1. runiq\n     (Outside' {seller}\n       (the_elem\n         (argmax\n           (sum (summedBidVector\n                  (pseudoAllocation\n                    (randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel (N \\<union> {seller})\n                             (set \\<Omega>) ((\\<in>) x) b)\n                        (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                      r) <|\n                   ((N \\<union> {seller}) \\<times>\n                    finestpart (set \\<Omega>)))\n                  (N \\<union> {seller}) (set \\<Omega>)))\n           (maximalStrictAllocations N (set \\<Omega>) b))))", "by blast"], ["proof (state)\nthis:\n  runiq\n   (Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b))))\n\ngoal (1 subgoal):\n 1. g \\<in> set \\<Omega>", "have 2: \"n \\<in> Domain ?a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<in> Domain\n             (Outside' {seller}\n               (the_elem\n                 (argmax\n                   (sum (summedBidVector\n                          (pseudoAllocation\n                            (randomEl\n                              (takeAll\n                                (\\<lambda>x.\n                                    winningAllocationRel\n                                     (N \\<union> {seller}) (set \\<Omega>)\n                                     ((\\<in>) x) b)\n                                (allAllocationsAlg (N \\<union> {seller})\n                                  \\<Omega>))\n                              r) <|\n                           ((N \\<union> {seller}) \\<times>\n                            finestpart (set \\<Omega>)))\n                          (N \\<union> {seller}) (set \\<Omega>)))\n                   (maximalStrictAllocations N (set \\<Omega>) b))))", "using assms vcgaEquivalence"], ["proof (prove)\nusing this:\n  distinct \\<Omega>\n  set \\<Omega> \\<noteq> {}\n  finite N\n  g \\<in> the_elem\n           (Outside' {seller} `\n            (argmax \\<circ> sum)\n             (summedBidVector\n               (pseudoAllocation\n                 (randomEl\n                   (takeAll\n                     (\\<lambda>x.\n                         winningAllocationRel (N \\<union> {seller})\n                          (set \\<Omega>) ((\\<in>) x) b)\n                     (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                   r) <|\n                ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n               (N \\<union> {seller}) (set \\<Omega>))\n             ((argmax \\<circ> sum) b\n               (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) ,,,\n          n\n  \\<lbrakk>distinct ?\\<Omega>; set ?\\<Omega> \\<noteq> {}; finite ?N\\<rbrakk>\n  \\<Longrightarrow> the_elem\n                     (Outside' {seller} `\n                      (argmax \\<circ> sum)\n                       (summedBidVector\n                         (pseudoAllocation\n                           (randomEl\n                             (takeAll\n                               (\\<lambda>x.\n                                   winningAllocationRel\n                                    (?N \\<union> {seller}) (set ?\\<Omega>)\n                                    ((\\<in>) x) ?b)\n                               (allAllocationsAlg (?N \\<union> {seller})\n                                 ?\\<Omega>))\n                             ?r) <|\n                          ((?N \\<union> {seller}) \\<times>\n                           finestpart (set ?\\<Omega>)))\n                         (?N \\<union> {seller}) (set ?\\<Omega>))\n                       ((argmax \\<circ> sum) ?b\n                         (allAllocations (?N \\<union> {seller})\n                           (set ?\\<Omega>)))) =\n                    Outside' {seller}\n                     (the_elem\n                       (argmax\n                         (sum (summedBidVector\n                                (pseudoAllocation\n                                  (randomEl\n                                    (takeAll\n(\\<lambda>x.\n    winningAllocationRel (?N \\<union> {seller}) (set ?\\<Omega>) ((\\<in>) x)\n     ?b)\n(allAllocationsAlg (?N \\<union> {seller}) ?\\<Omega>))\n                                    ?r) <|\n                                 ((?N \\<union> {seller}) \\<times>\n                                  finestpart (set ?\\<Omega>)))\n                                (?N \\<union> {seller}) (set ?\\<Omega>)))\n                         (maximalStrictAllocations ?N (set ?\\<Omega>) ?b)))\n\ngoal (1 subgoal):\n 1. n \\<in> Domain\n             (Outside' {seller}\n               (the_elem\n                 (argmax\n                   (sum (summedBidVector\n                          (pseudoAllocation\n                            (randomEl\n                              (takeAll\n                                (\\<lambda>x.\n                                    winningAllocationRel\n                                     (N \\<union> {seller}) (set \\<Omega>)\n                                     ((\\<in>) x) b)\n                                (allAllocationsAlg (N \\<union> {seller})\n                                  \\<Omega>))\n                              r) <|\n                           ((N \\<union> {seller}) \\<times>\n                            finestpart (set \\<Omega>)))\n                          (N \\<union> {seller}) (set \\<Omega>)))\n                   (maximalStrictAllocations N (set \\<Omega>) b))))", "by fast"], ["proof (state)\nthis:\n  n \\<in> Domain\n           (Outside' {seller}\n             (the_elem\n               (argmax\n                 (sum (summedBidVector\n                        (pseudoAllocation\n                          (randomEl\n                            (takeAll\n                              (\\<lambda>x.\n                                  winningAllocationRel (N \\<union> {seller})\n                                   (set \\<Omega>) ((\\<in>) x) b)\n                              (allAllocationsAlg (N \\<union> {seller})\n                                \\<Omega>))\n                            r) <|\n                         ((N \\<union> {seller}) \\<times>\n                          finestpart (set \\<Omega>)))\n                        (N \\<union> {seller}) (set \\<Omega>)))\n                 (maximalStrictAllocations N (set \\<Omega>) b))))\n\ngoal (1 subgoal):\n 1. g \\<in> set \\<Omega>", "with 1"], ["proof (chain)\npicking this:\n  runiq\n   (Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b))))\n  n \\<in> Domain\n           (Outside' {seller}\n             (the_elem\n               (argmax\n                 (sum (summedBidVector\n                        (pseudoAllocation\n                          (randomEl\n                            (takeAll\n                              (\\<lambda>x.\n                                  winningAllocationRel (N \\<union> {seller})\n                                   (set \\<Omega>) ((\\<in>) x) b)\n                              (allAllocationsAlg (N \\<union> {seller})\n                                \\<Omega>))\n                            r) <|\n                         ((N \\<union> {seller}) \\<times>\n                          finestpart (set \\<Omega>)))\n                        (N \\<union> {seller}) (set \\<Omega>)))\n                 (maximalStrictAllocations N (set \\<Omega>) b))))", "have \"?a,,n \\<in> Range ?a\""], ["proof (prove)\nusing this:\n  runiq\n   (Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b))))\n  n \\<in> Domain\n           (Outside' {seller}\n             (the_elem\n               (argmax\n                 (sum (summedBidVector\n                        (pseudoAllocation\n                          (randomEl\n                            (takeAll\n                              (\\<lambda>x.\n                                  winningAllocationRel (N \\<union> {seller})\n                                   (set \\<Omega>) ((\\<in>) x) b)\n                              (allAllocationsAlg (N \\<union> {seller})\n                                \\<Omega>))\n                            r) <|\n                         ((N \\<union> {seller}) \\<times>\n                          finestpart (set \\<Omega>)))\n                        (N \\<union> {seller}) (set \\<Omega>)))\n                 (maximalStrictAllocations N (set \\<Omega>) b))))\n\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b))) ,,\n    n\n    \\<in> Range\n           (Outside' {seller}\n             (the_elem\n               (argmax\n                 (sum (summedBidVector\n                        (pseudoAllocation\n                          (randomEl\n                            (takeAll\n                              (\\<lambda>x.\n                                  winningAllocationRel (N \\<union> {seller})\n                                   (set \\<Omega>) ((\\<in>) x) b)\n                              (allAllocationsAlg (N \\<union> {seller})\n                                \\<Omega>))\n                            r) <|\n                         ((N \\<union> {seller}) \\<times>\n                          finestpart (set \\<Omega>)))\n                        (N \\<union> {seller}) (set \\<Omega>)))\n                 (maximalStrictAllocations N (set \\<Omega>) b))))", "using eval_runiq_in_Range"], ["proof (prove)\nusing this:\n  runiq\n   (Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b))))\n  n \\<in> Domain\n           (Outside' {seller}\n             (the_elem\n               (argmax\n                 (sum (summedBidVector\n                        (pseudoAllocation\n                          (randomEl\n                            (takeAll\n                              (\\<lambda>x.\n                                  winningAllocationRel (N \\<union> {seller})\n                                   (set \\<Omega>) ((\\<in>) x) b)\n                              (allAllocationsAlg (N \\<union> {seller})\n                                \\<Omega>))\n                            r) <|\n                         ((N \\<union> {seller}) \\<times>\n                          finestpart (set \\<Omega>)))\n                        (N \\<union> {seller}) (set \\<Omega>)))\n                 (maximalStrictAllocations N (set \\<Omega>) b))))\n  \\<lbrakk>runiq ?R; ?a \\<in> Domain ?R\\<rbrakk>\n  \\<Longrightarrow> ?R ,, ?a \\<in> Range ?R\n\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b))) ,,\n    n\n    \\<in> Range\n           (Outside' {seller}\n             (the_elem\n               (argmax\n                 (sum (summedBidVector\n                        (pseudoAllocation\n                          (randomEl\n                            (takeAll\n                              (\\<lambda>x.\n                                  winningAllocationRel (N \\<union> {seller})\n                                   (set \\<Omega>) ((\\<in>) x) b)\n                              (allAllocationsAlg (N \\<union> {seller})\n                                \\<Omega>))\n                            r) <|\n                         ((N \\<union> {seller}) \\<times>\n                          finestpart (set \\<Omega>)))\n                        (N \\<union> {seller}) (set \\<Omega>)))\n                 (maximalStrictAllocations N (set \\<Omega>) b))))", "by fast"], ["proof (state)\nthis:\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b))) ,,\n  n\n  \\<in> Range\n         (Outside' {seller}\n           (the_elem\n             (argmax\n               (sum (summedBidVector\n                      (pseudoAllocation\n                        (randomEl\n                          (takeAll\n                            (\\<lambda>x.\n                                winningAllocationRel (N \\<union> {seller})\n                                 (set \\<Omega>) ((\\<in>) x) b)\n                            (allAllocationsAlg (N \\<union> {seller})\n                              \\<Omega>))\n                          r) <|\n                       ((N \\<union> {seller}) \\<times>\n                        finestpart (set \\<Omega>)))\n                      (N \\<union> {seller}) (set \\<Omega>)))\n               (maximalStrictAllocations N (set \\<Omega>) b))))\n\ngoal (1 subgoal):\n 1. g \\<in> set \\<Omega>", "with 1 2"], ["proof (chain)\npicking this:\n  runiq\n   (Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b))))\n  n \\<in> Domain\n           (Outside' {seller}\n             (the_elem\n               (argmax\n                 (sum (summedBidVector\n                        (pseudoAllocation\n                          (randomEl\n                            (takeAll\n                              (\\<lambda>x.\n                                  winningAllocationRel (N \\<union> {seller})\n                                   (set \\<Omega>) ((\\<in>) x) b)\n                              (allAllocationsAlg (N \\<union> {seller})\n                                \\<Omega>))\n                            r) <|\n                         ((N \\<union> {seller}) \\<times>\n                          finestpart (set \\<Omega>)))\n                        (N \\<union> {seller}) (set \\<Omega>)))\n                 (maximalStrictAllocations N (set \\<Omega>) b))))\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b))) ,,\n  n\n  \\<in> Range\n         (Outside' {seller}\n           (the_elem\n             (argmax\n               (sum (summedBidVector\n                      (pseudoAllocation\n                        (randomEl\n                          (takeAll\n                            (\\<lambda>x.\n                                winningAllocationRel (N \\<union> {seller})\n                                 (set \\<Omega>) ((\\<in>) x) b)\n                            (allAllocationsAlg (N \\<union> {seller})\n                              \\<Omega>))\n                          r) <|\n                       ((N \\<union> {seller}) \\<times>\n                        finestpart (set \\<Omega>)))\n                      (N \\<union> {seller}) (set \\<Omega>)))\n               (maximalStrictAllocations N (set \\<Omega>) b))))", "have \"?a,,,n \\<in> Range ?a\""], ["proof (prove)\nusing this:\n  runiq\n   (Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b))))\n  n \\<in> Domain\n           (Outside' {seller}\n             (the_elem\n               (argmax\n                 (sum (summedBidVector\n                        (pseudoAllocation\n                          (randomEl\n                            (takeAll\n                              (\\<lambda>x.\n                                  winningAllocationRel (N \\<union> {seller})\n                                   (set \\<Omega>) ((\\<in>) x) b)\n                              (allAllocationsAlg (N \\<union> {seller})\n                                \\<Omega>))\n                            r) <|\n                         ((N \\<union> {seller}) \\<times>\n                          finestpart (set \\<Omega>)))\n                        (N \\<union> {seller}) (set \\<Omega>)))\n                 (maximalStrictAllocations N (set \\<Omega>) b))))\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b))) ,,\n  n\n  \\<in> Range\n         (Outside' {seller}\n           (the_elem\n             (argmax\n               (sum (summedBidVector\n                      (pseudoAllocation\n                        (randomEl\n                          (takeAll\n                            (\\<lambda>x.\n                                winningAllocationRel (N \\<union> {seller})\n                                 (set \\<Omega>) ((\\<in>) x) b)\n                            (allAllocationsAlg (N \\<union> {seller})\n                              \\<Omega>))\n                          r) <|\n                       ((N \\<union> {seller}) \\<times>\n                        finestpart (set \\<Omega>)))\n                      (N \\<union> {seller}) (set \\<Omega>)))\n               (maximalStrictAllocations N (set \\<Omega>) b))))\n\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b))) ,,,\n    n\n    \\<in> Range\n           (Outside' {seller}\n             (the_elem\n               (argmax\n                 (sum (summedBidVector\n                        (pseudoAllocation\n                          (randomEl\n                            (takeAll\n                              (\\<lambda>x.\n                                  winningAllocationRel (N \\<union> {seller})\n                                   (set \\<Omega>) ((\\<in>) x) b)\n                              (allAllocationsAlg (N \\<union> {seller})\n                                \\<Omega>))\n                            r) <|\n                         ((N \\<union> {seller}) \\<times>\n                          finestpart (set \\<Omega>)))\n                        (N \\<union> {seller}) (set \\<Omega>)))\n                 (maximalStrictAllocations N (set \\<Omega>) b))))", "using imageEquivalence"], ["proof (prove)\nusing this:\n  runiq\n   (Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b))))\n  n \\<in> Domain\n           (Outside' {seller}\n             (the_elem\n               (argmax\n                 (sum (summedBidVector\n                        (pseudoAllocation\n                          (randomEl\n                            (takeAll\n                              (\\<lambda>x.\n                                  winningAllocationRel (N \\<union> {seller})\n                                   (set \\<Omega>) ((\\<in>) x) b)\n                              (allAllocationsAlg (N \\<union> {seller})\n                                \\<Omega>))\n                            r) <|\n                         ((N \\<union> {seller}) \\<times>\n                          finestpart (set \\<Omega>)))\n                        (N \\<union> {seller}) (set \\<Omega>)))\n                 (maximalStrictAllocations N (set \\<Omega>) b))))\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b))) ,,\n  n\n  \\<in> Range\n         (Outside' {seller}\n           (the_elem\n             (argmax\n               (sum (summedBidVector\n                      (pseudoAllocation\n                        (randomEl\n                          (takeAll\n                            (\\<lambda>x.\n                                winningAllocationRel (N \\<union> {seller})\n                                 (set \\<Omega>) ((\\<in>) x) b)\n                            (allAllocationsAlg (N \\<union> {seller})\n                              \\<Omega>))\n                          r) <|\n                       ((N \\<union> {seller}) \\<times>\n                        finestpart (set \\<Omega>)))\n                      (N \\<union> {seller}) (set \\<Omega>)))\n               (maximalStrictAllocations N (set \\<Omega>) b))))\n  \\<lbrakk>runiq ?f; ?x \\<in> Domain ?f\\<rbrakk>\n  \\<Longrightarrow> ?f ,, ?x = ?f ,,, ?x\n\ngoal (1 subgoal):\n 1. Outside' {seller}\n     (the_elem\n       (argmax\n         (sum (summedBidVector\n                (pseudoAllocation\n                  (randomEl\n                    (takeAll\n                      (\\<lambda>x.\n                          winningAllocationRel (N \\<union> {seller})\n                           (set \\<Omega>) ((\\<in>) x) b)\n                      (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                    r) <|\n                 ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n                (N \\<union> {seller}) (set \\<Omega>)))\n         (maximalStrictAllocations N (set \\<Omega>) b))) ,,,\n    n\n    \\<in> Range\n           (Outside' {seller}\n             (the_elem\n               (argmax\n                 (sum (summedBidVector\n                        (pseudoAllocation\n                          (randomEl\n                            (takeAll\n                              (\\<lambda>x.\n                                  winningAllocationRel (N \\<union> {seller})\n                                   (set \\<Omega>) ((\\<in>) x) b)\n                              (allAllocationsAlg (N \\<union> {seller})\n                                \\<Omega>))\n                            r) <|\n                         ((N \\<union> {seller}) \\<times>\n                          finestpart (set \\<Omega>)))\n                        (N \\<union> {seller}) (set \\<Omega>)))\n                 (maximalStrictAllocations N (set \\<Omega>) b))))", "by fastforce"], ["proof (state)\nthis:\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b))) ,,,\n  n\n  \\<in> Range\n         (Outside' {seller}\n           (the_elem\n             (argmax\n               (sum (summedBidVector\n                      (pseudoAllocation\n                        (randomEl\n                          (takeAll\n                            (\\<lambda>x.\n                                winningAllocationRel (N \\<union> {seller})\n                                 (set \\<Omega>) ((\\<in>) x) b)\n                            (allAllocationsAlg (N \\<union> {seller})\n                              \\<Omega>))\n                          r) <|\n                       ((N \\<union> {seller}) \\<times>\n                        finestpart (set \\<Omega>)))\n                      (N \\<union> {seller}) (set \\<Omega>)))\n               (maximalStrictAllocations N (set \\<Omega>) b))))\n\ngoal (1 subgoal):\n 1. g \\<in> set \\<Omega>", "then"], ["proof (chain)\npicking this:\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b))) ,,,\n  n\n  \\<in> Range\n         (Outside' {seller}\n           (the_elem\n             (argmax\n               (sum (summedBidVector\n                      (pseudoAllocation\n                        (randomEl\n                          (takeAll\n                            (\\<lambda>x.\n                                winningAllocationRel (N \\<union> {seller})\n                                 (set \\<Omega>) ((\\<in>) x) b)\n                            (allAllocationsAlg (N \\<union> {seller})\n                              \\<Omega>))\n                          r) <|\n                       ((N \\<union> {seller}) \\<times>\n                        finestpart (set \\<Omega>)))\n                      (N \\<union> {seller}) (set \\<Omega>)))\n               (maximalStrictAllocations N (set \\<Omega>) b))))", "have \"g \\<in> \\<Union> (Range ?a)\""], ["proof (prove)\nusing this:\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b))) ,,,\n  n\n  \\<in> Range\n         (Outside' {seller}\n           (the_elem\n             (argmax\n               (sum (summedBidVector\n                      (pseudoAllocation\n                        (randomEl\n                          (takeAll\n                            (\\<lambda>x.\n                                winningAllocationRel (N \\<union> {seller})\n                                 (set \\<Omega>) ((\\<in>) x) b)\n                            (allAllocationsAlg (N \\<union> {seller})\n                              \\<Omega>))\n                          r) <|\n                       ((N \\<union> {seller}) \\<times>\n                        finestpart (set \\<Omega>)))\n                      (N \\<union> {seller}) (set \\<Omega>)))\n               (maximalStrictAllocations N (set \\<Omega>) b))))\n\ngoal (1 subgoal):\n 1. g \\<in> \\<Union>\n             (Range\n               (Outside' {seller}\n                 (the_elem\n                   (argmax\n                     (sum (summedBidVector\n                            (pseudoAllocation\n                              (randomEl\n                                (takeAll\n                                  (\\<lambda>x.\nwinningAllocationRel (N \\<union> {seller}) (set \\<Omega>) ((\\<in>) x) b)\n                                  (allAllocationsAlg (N \\<union> {seller})\n                                    \\<Omega>))\n                                r) <|\n                             ((N \\<union> {seller}) \\<times>\n                              finestpart (set \\<Omega>)))\n                            (N \\<union> {seller}) (set \\<Omega>)))\n                     (maximalStrictAllocations N (set \\<Omega>) b)))))", "using assms vcgaEquivalence"], ["proof (prove)\nusing this:\n  Outside' {seller}\n   (the_elem\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b))) ,,,\n  n\n  \\<in> Range\n         (Outside' {seller}\n           (the_elem\n             (argmax\n               (sum (summedBidVector\n                      (pseudoAllocation\n                        (randomEl\n                          (takeAll\n                            (\\<lambda>x.\n                                winningAllocationRel (N \\<union> {seller})\n                                 (set \\<Omega>) ((\\<in>) x) b)\n                            (allAllocationsAlg (N \\<union> {seller})\n                              \\<Omega>))\n                          r) <|\n                       ((N \\<union> {seller}) \\<times>\n                        finestpart (set \\<Omega>)))\n                      (N \\<union> {seller}) (set \\<Omega>)))\n               (maximalStrictAllocations N (set \\<Omega>) b))))\n  distinct \\<Omega>\n  set \\<Omega> \\<noteq> {}\n  finite N\n  g \\<in> the_elem\n           (Outside' {seller} `\n            (argmax \\<circ> sum)\n             (summedBidVector\n               (pseudoAllocation\n                 (randomEl\n                   (takeAll\n                     (\\<lambda>x.\n                         winningAllocationRel (N \\<union> {seller})\n                          (set \\<Omega>) ((\\<in>) x) b)\n                     (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                   r) <|\n                ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n               (N \\<union> {seller}) (set \\<Omega>))\n             ((argmax \\<circ> sum) b\n               (allAllocations (N \\<union> {seller}) (set \\<Omega>)))) ,,,\n          n\n  \\<lbrakk>distinct ?\\<Omega>; set ?\\<Omega> \\<noteq> {}; finite ?N\\<rbrakk>\n  \\<Longrightarrow> the_elem\n                     (Outside' {seller} `\n                      (argmax \\<circ> sum)\n                       (summedBidVector\n                         (pseudoAllocation\n                           (randomEl\n                             (takeAll\n                               (\\<lambda>x.\n                                   winningAllocationRel\n                                    (?N \\<union> {seller}) (set ?\\<Omega>)\n                                    ((\\<in>) x) ?b)\n                               (allAllocationsAlg (?N \\<union> {seller})\n                                 ?\\<Omega>))\n                             ?r) <|\n                          ((?N \\<union> {seller}) \\<times>\n                           finestpart (set ?\\<Omega>)))\n                         (?N \\<union> {seller}) (set ?\\<Omega>))\n                       ((argmax \\<circ> sum) ?b\n                         (allAllocations (?N \\<union> {seller})\n                           (set ?\\<Omega>)))) =\n                    Outside' {seller}\n                     (the_elem\n                       (argmax\n                         (sum (summedBidVector\n                                (pseudoAllocation\n                                  (randomEl\n                                    (takeAll\n(\\<lambda>x.\n    winningAllocationRel (?N \\<union> {seller}) (set ?\\<Omega>) ((\\<in>) x)\n     ?b)\n(allAllocationsAlg (?N \\<union> {seller}) ?\\<Omega>))\n                                    ?r) <|\n                                 ((?N \\<union> {seller}) \\<times>\n                                  finestpart (set ?\\<Omega>)))\n                                (?N \\<union> {seller}) (set ?\\<Omega>)))\n                         (maximalStrictAllocations ?N (set ?\\<Omega>) ?b)))\n\ngoal (1 subgoal):\n 1. g \\<in> \\<Union>\n             (Range\n               (Outside' {seller}\n                 (the_elem\n                   (argmax\n                     (sum (summedBidVector\n                            (pseudoAllocation\n                              (randomEl\n                                (takeAll\n                                  (\\<lambda>x.\nwinningAllocationRel (N \\<union> {seller}) (set \\<Omega>) ((\\<in>) x) b)\n                                  (allAllocationsAlg (N \\<union> {seller})\n                                    \\<Omega>))\n                                r) <|\n                             ((N \\<union> {seller}) \\<times>\n                              finestpart (set \\<Omega>)))\n                            (N \\<union> {seller}) (set \\<Omega>)))\n                     (maximalStrictAllocations N (set \\<Omega>) b)))))", "by blast"], ["proof (state)\nthis:\n  g \\<in> \\<Union>\n           (Range\n             (Outside' {seller}\n               (the_elem\n                 (argmax\n                   (sum (summedBidVector\n                          (pseudoAllocation\n                            (randomEl\n                              (takeAll\n                                (\\<lambda>x.\n                                    winningAllocationRel\n                                     (N \\<union> {seller}) (set \\<Omega>)\n                                     ((\\<in>) x) b)\n                                (allAllocationsAlg (N \\<union> {seller})\n                                  \\<Omega>))\n                              r) <|\n                           ((N \\<union> {seller}) \\<times>\n                            finestpart (set \\<Omega>)))\n                          (N \\<union> {seller}) (set \\<Omega>)))\n                   (maximalStrictAllocations N (set \\<Omega>) b)))))\n\ngoal (1 subgoal):\n 1. g \\<in> set \\<Omega>", "moreover"], ["proof (state)\nthis:\n  g \\<in> \\<Union>\n           (Range\n             (Outside' {seller}\n               (the_elem\n                 (argmax\n                   (sum (summedBidVector\n                          (pseudoAllocation\n                            (randomEl\n                              (takeAll\n                                (\\<lambda>x.\n                                    winningAllocationRel\n                                     (N \\<union> {seller}) (set \\<Omega>)\n                                     ((\\<in>) x) b)\n                                (allAllocationsAlg (N \\<union> {seller})\n                                  \\<Omega>))\n                              r) <|\n                           ((N \\<union> {seller}) \\<times>\n                            finestpart (set \\<Omega>)))\n                          (N \\<union> {seller}) (set \\<Omega>)))\n                   (maximalStrictAllocations N (set \\<Omega>) b)))))\n\ngoal (1 subgoal):\n 1. g \\<in> set \\<Omega>", "have \"\\<Union> (Range ?a) \\<subseteq> set \\<Omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union>\n     (Range\n       (Outside' {seller}\n         (the_elem\n           (argmax\n             (sum (summedBidVector\n                    (pseudoAllocation\n                      (randomEl\n                        (takeAll\n                          (\\<lambda>x.\n                              winningAllocationRel (N \\<union> {seller})\n                               (set \\<Omega>) ((\\<in>) x) b)\n                          (allAllocationsAlg (N \\<union> {seller})\n                            \\<Omega>))\n                        r) <|\n                     ((N \\<union> {seller}) \\<times>\n                      finestpart (set \\<Omega>)))\n                    (N \\<union> {seller}) (set \\<Omega>)))\n             (maximalStrictAllocations N (set \\<Omega>) b)))))\n    \\<subseteq> set \\<Omega>", "using assms(1,2,3) vcgaIsAllocationAllocatingGoodsOnly"], ["proof (prove)\nusing this:\n  distinct \\<Omega>\n  set \\<Omega> \\<noteq> {}\n  finite N\n  \\<lbrakk>distinct ?\\<Omega>; set ?\\<Omega> \\<noteq> {}; finite ?N\\<rbrakk>\n  \\<Longrightarrow> Outside' {seller}\n                     (the_elem\n                       (argmax\n                         (sum (summedBidVector\n                                (pseudoAllocation\n                                  (randomEl\n                                    (takeAll\n(\\<lambda>x.\n    winningAllocationRel (?N \\<union> {seller}) (set ?\\<Omega>) ((\\<in>) x)\n     ?b)\n(allAllocationsAlg (?N \\<union> {seller}) ?\\<Omega>))\n                                    ?r) <|\n                                 ((?N \\<union> {seller}) \\<times>\n                                  finestpart (set ?\\<Omega>)))\n                                (?N \\<union> {seller}) (set ?\\<Omega>)))\n                         (maximalStrictAllocations ?N (set ?\\<Omega>) ?b)))\n                    \\<in> allocationsUniverse \\<and>\n                    \\<Union>\n                     (Range\n                       (Outside' {seller}\n                         (the_elem\n                           (argmax\n                             (sum (summedBidVector\n                                    (pseudoAllocation\n(randomEl\n  (takeAll\n    (\\<lambda>x.\n        winningAllocationRel (?N \\<union> {seller}) (set ?\\<Omega>)\n         ((\\<in>) x) ?b)\n    (allAllocationsAlg (?N \\<union> {seller}) ?\\<Omega>))\n  ?r) <|\n                                     ((?N \\<union> {seller}) \\<times>\nfinestpart (set ?\\<Omega>)))\n                                    (?N \\<union> {seller}) (set ?\\<Omega>)))\n                             (maximalStrictAllocations ?N (set ?\\<Omega>)\n                               ?b)))))\n                    \\<subseteq> set ?\\<Omega>\n\ngoal (1 subgoal):\n 1. \\<Union>\n     (Range\n       (Outside' {seller}\n         (the_elem\n           (argmax\n             (sum (summedBidVector\n                    (pseudoAllocation\n                      (randomEl\n                        (takeAll\n                          (\\<lambda>x.\n                              winningAllocationRel (N \\<union> {seller})\n                               (set \\<Omega>) ((\\<in>) x) b)\n                          (allAllocationsAlg (N \\<union> {seller})\n                            \\<Omega>))\n                        r) <|\n                     ((N \\<union> {seller}) \\<times>\n                      finestpart (set \\<Omega>)))\n                    (N \\<union> {seller}) (set \\<Omega>)))\n             (maximalStrictAllocations N (set \\<Omega>) b)))))\n    \\<subseteq> set \\<Omega>", "by fast"], ["proof (state)\nthis:\n  \\<Union>\n   (Range\n     (Outside' {seller}\n       (the_elem\n         (argmax\n           (sum (summedBidVector\n                  (pseudoAllocation\n                    (randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel (N \\<union> {seller})\n                             (set \\<Omega>) ((\\<in>) x) b)\n                        (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                      r) <|\n                   ((N \\<union> {seller}) \\<times>\n                    finestpart (set \\<Omega>)))\n                  (N \\<union> {seller}) (set \\<Omega>)))\n           (maximalStrictAllocations N (set \\<Omega>) b)))))\n  \\<subseteq> set \\<Omega>\n\ngoal (1 subgoal):\n 1. g \\<in> set \\<Omega>", "ultimately"], ["proof (chain)\npicking this:\n  g \\<in> \\<Union>\n           (Range\n             (Outside' {seller}\n               (the_elem\n                 (argmax\n                   (sum (summedBidVector\n                          (pseudoAllocation\n                            (randomEl\n                              (takeAll\n                                (\\<lambda>x.\n                                    winningAllocationRel\n                                     (N \\<union> {seller}) (set \\<Omega>)\n                                     ((\\<in>) x) b)\n                                (allAllocationsAlg (N \\<union> {seller})\n                                  \\<Omega>))\n                              r) <|\n                           ((N \\<union> {seller}) \\<times>\n                            finestpart (set \\<Omega>)))\n                          (N \\<union> {seller}) (set \\<Omega>)))\n                   (maximalStrictAllocations N (set \\<Omega>) b)))))\n  \\<Union>\n   (Range\n     (Outside' {seller}\n       (the_elem\n         (argmax\n           (sum (summedBidVector\n                  (pseudoAllocation\n                    (randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel (N \\<union> {seller})\n                             (set \\<Omega>) ((\\<in>) x) b)\n                        (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                      r) <|\n                   ((N \\<union> {seller}) \\<times>\n                    finestpart (set \\<Omega>)))\n                  (N \\<union> {seller}) (set \\<Omega>)))\n           (maximalStrictAllocations N (set \\<Omega>) b)))))\n  \\<subseteq> set \\<Omega>", "show ?thesis"], ["proof (prove)\nusing this:\n  g \\<in> \\<Union>\n           (Range\n             (Outside' {seller}\n               (the_elem\n                 (argmax\n                   (sum (summedBidVector\n                          (pseudoAllocation\n                            (randomEl\n                              (takeAll\n                                (\\<lambda>x.\n                                    winningAllocationRel\n                                     (N \\<union> {seller}) (set \\<Omega>)\n                                     ((\\<in>) x) b)\n                                (allAllocationsAlg (N \\<union> {seller})\n                                  \\<Omega>))\n                              r) <|\n                           ((N \\<union> {seller}) \\<times>\n                            finestpart (set \\<Omega>)))\n                          (N \\<union> {seller}) (set \\<Omega>)))\n                   (maximalStrictAllocations N (set \\<Omega>) b)))))\n  \\<Union>\n   (Range\n     (Outside' {seller}\n       (the_elem\n         (argmax\n           (sum (summedBidVector\n                  (pseudoAllocation\n                    (randomEl\n                      (takeAll\n                        (\\<lambda>x.\n                            winningAllocationRel (N \\<union> {seller})\n                             (set \\<Omega>) ((\\<in>) x) b)\n                        (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                      r) <|\n                   ((N \\<union> {seller}) \\<times>\n                    finestpart (set \\<Omega>)))\n                  (N \\<union> {seller}) (set \\<Omega>)))\n           (maximalStrictAllocations N (set \\<Omega>) b)))))\n  \\<subseteq> set \\<Omega>\n\ngoal (1 subgoal):\n 1. g \\<in> set \\<Omega>", "by blast"], ["proof (state)\nthis:\n  g \\<in> set \\<Omega>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Computable versions of the VCG formalization\\<close>"], ["", "(*  The computable versions are used to extract code.\n   Furthermore we prove the equivalence with their classical counterparts. This computes the set of all maximal allocations including the seller. *)"], ["", "abbreviation \"maximalStrictAllocationsAlg N \\<Omega> b ==\n  argmax (sum b) (set (allAllocationsAlg ({seller}\\<union>N) \\<Omega>))\""], ["", "(* This computes the maximal allocation after tie breaking. *)"], ["", "definition \"chosenAllocationAlg N \\<Omega> b (r::integer) == \n  (randomEl (takeAll (%x. x\\<in> (argmax \\<circ> sum) b (set (allAllocationsAlg N \\<Omega>))) \n                    (allAllocationsAlg N \\<Omega>)) \n            r)\""], ["", "(* This is the computable version of maxbid in UniformTieBreaking.thy. It takes an allocation, \n   the bidders and the goods and computes a bid such for each good a bidder bids 1 if they get\n   that good in allocation a, else they bid 0.*)"], ["", "definition \"maxbidAlg a N \\<Omega> == (bidMaximizedBy a N \\<Omega>) Elsee 0\""], ["", "(* This is the completed version of summedBidVectorRel by returning 0 if \n   summedBidVectorRel is not defined. *)"], ["", "definition \"summedBidVectorAlg bids N \\<Omega> == (summedBidVectorRel bids N \\<Omega>) Elsee 0\""], ["", "(* Computable version of tiebids. If computes a bid vector that when the VCG algorithm runs \n   on it yields the singleton {a}. *)"], ["", "definition \"tiebidsAlg a N \\<Omega> == summedBidVectorAlg (maxbidAlg a N \\<Omega>) N \\<Omega>\""], ["", "(* Computable version of resolvingBid, that is, is computes the bid vector in random values \n   that returns the chosen winning allocation *)"], ["", "definition \"resolvingBidAlg N \\<Omega> bids random == \n  tiebidsAlg (chosenAllocationAlg N \\<Omega> bids random) N (set \\<Omega>)\""], ["", "(* The same as above, but adding the seller who receives all unallocated goods. *)"], ["", "definition \"randomBidsAlg N \\<Omega> b random == resolvingBidAlg (N\\<union>{seller}) \\<Omega> b random\""], ["", "(* Computable allocation without those participants who do not receive anything. *)"], ["", "definition \"vcgaAlgWithoutLosers N \\<Omega> b r == \n  (the_elem (argmax (sum (randomBidsAlg N \\<Omega> b r)) \n                    (maximalStrictAllocationsAlg N \\<Omega> b))) \n  -- seller\""], ["", "(* Adding losers to an arbitrary allocation *)"], ["", "abbreviation \"addLosers participantset allocation == (participantset \\<times> {{}}) +* allocation\""], ["", "(* Computable version of vcga. It computes the winning allocation incl. losers. *)"], ["", "definition \"vcgaAlg N \\<Omega> b r = addLosers N (vcgaAlgWithoutLosers N \\<Omega> b r)\""], ["", "(* Computable version of soldAllocations *)"], ["", "abbreviation \"soldAllocationsAlg N \\<Omega> == \n  (Outside' {seller}) ` set (allAllocationsAlg (N \\<union> {seller}) \\<Omega>)\""], ["", "(* Computable version of vcgp, which computes the prices each participant has to pay. Note that\n   losers do not pay anything, hence vcgaAlgWithoutLosers is here equivalent to vcgaAlg. \n   The price a participant n has to pay is the revenue achieved if n had not participated minus\n   the value of the goods allocated not to n.*)"], ["", "definition \"vcgpAlg N \\<Omega> b r n (winningAllocation::allocation) =\n  Max (sum b ` (soldAllocationsAlg (N-{n}) \\<Omega>)) - \n  (sum b (winningAllocation -- n))\""], ["", "lemma functionCompletion: \n  assumes \"x \\<in> Domain f\" \n  shows \"toFunction f x = (f Elsee 0) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. toFunction f x = (f Elsee (0::'b)) x", "unfolding toFunctionWithFallbackAlg_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. toFunction f x = (if x \\<in> Domain f then f ,, x else (0::'b))", "by (metis assms toFunction_def)"], ["", "(* This technical lemma shows the equivalence of Elsee and toFunction inside a sum expression\n   under certain assumptions. It is used for the proof of the bridging theorem that\n   the two versions of the definition of maximalStrictAllocations are equivalent.*)"], ["", "lemma lm09: \n  assumes \"fst pair \\<in> N\" \"snd pair \\<in> Pow \\<Omega> - {{}}\" \n  shows \"sum (%g. (toFunction (bidMaximizedBy a N \\<Omega>))  (fst pair, g)) \n                (finestpart (snd pair)) =\n         sum (%g. ((bidMaximizedBy a N \\<Omega>) Elsee 0) (fst pair, g)) \n                (finestpart (snd pair))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summedBidSecond (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     pair =\n    summedBidSecond (bidMaximizedBy a N \\<Omega> Elsee 0) pair", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. summedBidSecond (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     pair =\n    summedBidSecond (bidMaximizedBy a N \\<Omega> Elsee 0) pair", "let ?f1 = \"%g.(toFunction (bidMaximizedBy a N \\<Omega>))(fst pair, g)\""], ["proof (state)\ngoal (1 subgoal):\n 1. summedBidSecond (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     pair =\n    summedBidSecond (bidMaximizedBy a N \\<Omega> Elsee 0) pair", "let ?f2 = \"%g.((bidMaximizedBy a N \\<Omega>) Elsee 0)(fst pair, g)\""], ["proof (state)\ngoal (1 subgoal):\n 1. summedBidSecond (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     pair =\n    summedBidSecond (bidMaximizedBy a N \\<Omega> Elsee 0) pair", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. summedBidSecond (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     pair =\n    summedBidSecond (bidMaximizedBy a N \\<Omega> Elsee 0) pair", "fix g"], ["proof (state)\ngoal (1 subgoal):\n 1. summedBidSecond (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     pair =\n    summedBidSecond (bidMaximizedBy a N \\<Omega> Elsee 0) pair", "assume \"g \\<in> finestpart (snd pair)\""], ["proof (state)\nthis:\n  g \\<in> finestpart (snd pair)\n\ngoal (1 subgoal):\n 1. summedBidSecond (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     pair =\n    summedBidSecond (bidMaximizedBy a N \\<Omega> Elsee 0) pair", "then"], ["proof (chain)\npicking this:\n  g \\<in> finestpart (snd pair)", "have \n    0: \"g \\<in> finestpart \\<Omega>\""], ["proof (prove)\nusing this:\n  g \\<in> finestpart (snd pair)\n\ngoal (1 subgoal):\n 1. g \\<in> finestpart \\<Omega>", "using assms finestpartSubset"], ["proof (prove)\nusing this:\n  g \\<in> finestpart (snd pair)\n  fst pair \\<in> N\n  snd pair \\<in> Pow \\<Omega> - {{}}\n  ?X \\<subseteq> ?Y \\<Longrightarrow>\n  finestpart ?X \\<subseteq> finestpart ?Y\n\ngoal (1 subgoal):\n 1. g \\<in> finestpart \\<Omega>", "by (metis Diff_iff Pow_iff in_mono)"], ["proof (state)\nthis:\n  g \\<in> finestpart \\<Omega>\n\ngoal (1 subgoal):\n 1. summedBidSecond (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     pair =\n    summedBidSecond (bidMaximizedBy a N \\<Omega> Elsee 0) pair", "have \"?f1 g = ?f2 g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) (fst pair, g) =\n    (bidMaximizedBy a N \\<Omega> Elsee 0) (fst pair, g)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) (fst pair, g) =\n    (bidMaximizedBy a N \\<Omega> Elsee 0) (fst pair, g)", "have \"\\<And>x\\<^sub>1 x\\<^sub>2. (x\\<^sub>1, g) \\<in> x\\<^sub>2 \\<times> finestpart \\<Omega> \\<or> x\\<^sub>1 \\<notin> x\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x\\<^sub>1 x\\<^sub>2.\n       (x\\<^sub>1, g) \\<in> x\\<^sub>2 \\<times> finestpart \\<Omega> \\<or>\n       x\\<^sub>1 \\<notin> x\\<^sub>2", "by (metis 0 mem_Sigma_iff)"], ["proof (state)\nthis:\n  (?x\\<^sub>1, g) \\<in> ?x\\<^sub>2 \\<times> finestpart \\<Omega> \\<or>\n  ?x\\<^sub>1 \\<notin> ?x\\<^sub>2\n\ngoal (1 subgoal):\n 1. (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) (fst pair, g) =\n    (bidMaximizedBy a N \\<Omega> Elsee 0) (fst pair, g)", "then"], ["proof (chain)\npicking this:\n  (?x\\<^sub>1, g) \\<in> ?x\\<^sub>2 \\<times> finestpart \\<Omega> \\<or>\n  ?x\\<^sub>1 \\<notin> ?x\\<^sub>2", "have \"(pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) (fst pair, g) = \n                 maxbidAlg a N \\<Omega> (fst pair, g)\""], ["proof (prove)\nusing this:\n  (?x\\<^sub>1, g) \\<in> ?x\\<^sub>2 \\<times> finestpart \\<Omega> \\<or>\n  ?x\\<^sub>1 \\<notin> ?x\\<^sub>2\n\ngoal (1 subgoal):\n 1. (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) (fst pair, g) =\n    maxbidAlg a N \\<Omega> (fst pair, g)", "unfolding toFunctionWithFallbackAlg_def maxbidAlg_def"], ["proof (prove)\nusing this:\n  (?x\\<^sub>1, g) \\<in> ?x\\<^sub>2 \\<times> finestpart \\<Omega> \\<or>\n  ?x\\<^sub>1 \\<notin> ?x\\<^sub>2\n\ngoal (1 subgoal):\n 1. (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) (fst pair, g) =\n    (if (fst pair, g) \\<in> Domain (bidMaximizedBy a N \\<Omega>)\n     then bidMaximizedBy a N \\<Omega> ,, (fst pair, g) else 0)", "by (metis (no_types) domainCharacteristicFunction UnCI assms(1) toFunction_def)"], ["proof (state)\nthis:\n  (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) (fst pair, g) =\n  maxbidAlg a N \\<Omega> (fst pair, g)\n\ngoal (1 subgoal):\n 1. (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) (fst pair, g) =\n    (bidMaximizedBy a N \\<Omega> Elsee 0) (fst pair, g)", "thus ?thesis"], ["proof (prove)\nusing this:\n  (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) (fst pair, g) =\n  maxbidAlg a N \\<Omega> (fst pair, g)\n\ngoal (1 subgoal):\n 1. (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) (fst pair, g) =\n    (bidMaximizedBy a N \\<Omega> Elsee 0) (fst pair, g)", "unfolding maxbidAlg_def"], ["proof (prove)\nusing this:\n  (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) (fst pair, g) =\n  (bidMaximizedBy a N \\<Omega> Elsee 0) (fst pair, g)\n\ngoal (1 subgoal):\n 1. (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) (fst pair, g) =\n    (bidMaximizedBy a N \\<Omega> Elsee 0) (fst pair, g)", "by blast"], ["proof (state)\nthis:\n  (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) (fst pair, g) =\n  (bidMaximizedBy a N \\<Omega> Elsee 0) (fst pair, g)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) (fst pair, g) =\n  (bidMaximizedBy a N \\<Omega> Elsee 0) (fst pair, g)\n\ngoal (1 subgoal):\n 1. summedBidSecond (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     pair =\n    summedBidSecond (bidMaximizedBy a N \\<Omega> Elsee 0) pair", "}"], ["proof (state)\nthis:\n  ?g2 \\<in> finestpart (snd pair) \\<Longrightarrow>\n  (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) (fst pair, ?g2) =\n  (bidMaximizedBy a N \\<Omega> Elsee 0) (fst pair, ?g2)\n\ngoal (1 subgoal):\n 1. summedBidSecond (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     pair =\n    summedBidSecond (bidMaximizedBy a N \\<Omega> Elsee 0) pair", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?g2 \\<in> finestpart (snd pair) \\<Longrightarrow>\n  (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) (fst pair, ?g2) =\n  (bidMaximizedBy a N \\<Omega> Elsee 0) (fst pair, ?g2)\n\ngoal (1 subgoal):\n 1. summedBidSecond (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     pair =\n    summedBidSecond (bidMaximizedBy a N \\<Omega> Elsee 0) pair", "using sum.cong"], ["proof (prove)\nusing this:\n  ?g2 \\<in> finestpart (snd pair) \\<Longrightarrow>\n  (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) (fst pair, ?g2) =\n  (bidMaximizedBy a N \\<Omega> Elsee 0) (fst pair, ?g2)\n  \\<lbrakk>?A = ?B;\n   \\<And>x. x \\<in> ?B \\<Longrightarrow> ?g x = ?h x\\<rbrakk>\n  \\<Longrightarrow> sum ?g ?A = sum ?h ?B\n\ngoal (1 subgoal):\n 1. summedBidSecond (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     pair =\n    summedBidSecond (bidMaximizedBy a N \\<Omega> Elsee 0) pair", "by simp"], ["proof (state)\nthis:\n  summedBidSecond (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n   pair =\n  summedBidSecond (bidMaximizedBy a N \\<Omega> Elsee 0) pair\n\ngoal:\nNo subgoals!", "qed"], ["", "(* lm10, lm11, lm12, l13 are variants of lm09 *)"], ["", "corollary lm10: \n  assumes \"pair \\<in> N \\<times> (Pow \\<Omega> - {{}})\" \n  shows  \"summedBid (toFunction (bidMaximizedBy a N \\<Omega>)) pair = \n          summedBid ((bidMaximizedBy a N \\<Omega>) Elsee 0) pair\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summedBid (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     pair =\n    summedBid (bidMaximizedBy a N \\<Omega> Elsee 0) pair", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. summedBid (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     pair =\n    summedBid (bidMaximizedBy a N \\<Omega> Elsee 0) pair", "have \"fst pair \\<in> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst pair \\<in> N", "using assms"], ["proof (prove)\nusing this:\n  pair \\<in> N \\<times> (Pow \\<Omega> - {{}})\n\ngoal (1 subgoal):\n 1. fst pair \\<in> N", "by force"], ["proof (state)\nthis:\n  fst pair \\<in> N\n\ngoal (1 subgoal):\n 1. summedBid (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     pair =\n    summedBid (bidMaximizedBy a N \\<Omega> Elsee 0) pair", "moreover"], ["proof (state)\nthis:\n  fst pair \\<in> N\n\ngoal (1 subgoal):\n 1. summedBid (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     pair =\n    summedBid (bidMaximizedBy a N \\<Omega> Elsee 0) pair", "have \"snd pair \\<in> Pow \\<Omega> - {{}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd pair \\<in> Pow \\<Omega> - {{}}", "using assms(1)"], ["proof (prove)\nusing this:\n  pair \\<in> N \\<times> (Pow \\<Omega> - {{}})\n\ngoal (1 subgoal):\n 1. snd pair \\<in> Pow \\<Omega> - {{}}", "by force"], ["proof (state)\nthis:\n  snd pair \\<in> Pow \\<Omega> - {{}}\n\ngoal (1 subgoal):\n 1. summedBid (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     pair =\n    summedBid (bidMaximizedBy a N \\<Omega> Elsee 0) pair", "ultimately"], ["proof (chain)\npicking this:\n  fst pair \\<in> N\n  snd pair \\<in> Pow \\<Omega> - {{}}", "show ?thesis"], ["proof (prove)\nusing this:\n  fst pair \\<in> N\n  snd pair \\<in> Pow \\<Omega> - {{}}\n\ngoal (1 subgoal):\n 1. summedBid (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     pair =\n    summedBid (bidMaximizedBy a N \\<Omega> Elsee 0) pair", "using lm09"], ["proof (prove)\nusing this:\n  fst pair \\<in> N\n  snd pair \\<in> Pow \\<Omega> - {{}}\n  \\<lbrakk>fst ?pair \\<in> ?N; snd ?pair \\<in> Pow ?\\<Omega> - {{}}\\<rbrakk>\n  \\<Longrightarrow> summedBidSecond\n                     (pseudoAllocation ?a <|\n                      (?N \\<times> finestpart ?\\<Omega>))\n                     ?pair =\n                    summedBidSecond (bidMaximizedBy ?a ?N ?\\<Omega> Elsee 0)\n                     ?pair\n\ngoal (1 subgoal):\n 1. summedBid (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     pair =\n    summedBid (bidMaximizedBy a N \\<Omega> Elsee 0) pair", "by blast"], ["proof (state)\nthis:\n  summedBid (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) pair =\n  summedBid (bidMaximizedBy a N \\<Omega> Elsee 0) pair\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary lm11: \n  \"\\<forall> pair \\<in> N \\<times> (Pow \\<Omega> - {{}}).  \n   summedBid (toFunction (bidMaximizedBy a N \\<Omega>)) pair = \n   summedBid ((bidMaximizedBy a N \\<Omega>) Elsee 0) pair\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>pair\\<in>N \\<times> (Pow \\<Omega> - {{}}).\n       summedBid (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n        pair =\n       summedBid (bidMaximizedBy a N \\<Omega> Elsee 0) pair", "using lm10"], ["proof (prove)\nusing this:\n  ?pair \\<in> ?N \\<times> (Pow ?\\<Omega> - {{}}) \\<Longrightarrow>\n  summedBid (pseudoAllocation ?a <| (?N \\<times> finestpart ?\\<Omega>))\n   ?pair =\n  summedBid (bidMaximizedBy ?a ?N ?\\<Omega> Elsee 0) ?pair\n\ngoal (1 subgoal):\n 1. \\<forall>pair\\<in>N \\<times> (Pow \\<Omega> - {{}}).\n       summedBid (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n        pair =\n       summedBid (bidMaximizedBy a N \\<Omega> Elsee 0) pair", "by blast"], ["", "corollary lm12: \n  \"(summedBid (toFunction (bidMaximizedBy a N \\<Omega>))) ` (N \\<times> (Pow \\<Omega> - {{}}))=\n   (summedBid ((bidMaximizedBy a N \\<Omega>) Elsee 0)) ` (N \\<times> (Pow \\<Omega> - {{}}))\" \n  (is \"?f1 ` ?Z = ?f2 ` ?Z\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. summedBidVectorRel\n     (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N \\<Omega> =\n    summedBidVectorRel (bidMaximizedBy a N \\<Omega> Elsee 0) N \\<Omega>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. summedBidVectorRel\n     (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N \\<Omega> =\n    summedBidVectorRel (bidMaximizedBy a N \\<Omega> Elsee 0) N \\<Omega>", "have \"\\<forall> z \\<in> ?Z. ?f1 z = ?f2 z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>z\\<in>N \\<times> (Pow \\<Omega> - {{}}).\n       summedBid (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n        z =\n       summedBid (bidMaximizedBy a N \\<Omega> Elsee 0) z", "by (rule lm11)"], ["proof (state)\nthis:\n  \\<forall>z\\<in>N \\<times> (Pow \\<Omega> - {{}}).\n     summedBid (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) z =\n     summedBid (bidMaximizedBy a N \\<Omega> Elsee 0) z\n\ngoal (1 subgoal):\n 1. summedBidVectorRel\n     (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N \\<Omega> =\n    summedBidVectorRel (bidMaximizedBy a N \\<Omega> Elsee 0) N \\<Omega>", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>z\\<in>N \\<times> (Pow \\<Omega> - {{}}).\n     summedBid (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) z =\n     summedBid (bidMaximizedBy a N \\<Omega> Elsee 0) z\n\ngoal (1 subgoal):\n 1. summedBidVectorRel\n     (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N \\<Omega> =\n    summedBidVectorRel (bidMaximizedBy a N \\<Omega> Elsee 0) N \\<Omega>", "by (rule functionEquivalenceOnSets)"], ["proof (state)\nthis:\n  summedBidVectorRel\n   (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N \\<Omega> =\n  summedBidVectorRel (bidMaximizedBy a N \\<Omega> Elsee 0) N \\<Omega>\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary lm13: \n  \"summedBidVectorRel (toFunction (bidMaximizedBy a N \\<Omega>)) N \\<Omega> =\n   summedBidVectorRel ((bidMaximizedBy a N \\<Omega>) Elsee 0) N \\<Omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summedBidVectorRel\n     (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N \\<Omega> =\n    summedBidVectorRel (bidMaximizedBy a N \\<Omega> Elsee 0) N \\<Omega>", "using lm12"], ["proof (prove)\nusing this:\n  summedBidVectorRel\n   (pseudoAllocation ?a <| (?N \\<times> finestpart ?\\<Omega>)) ?N\n   ?\\<Omega> =\n  summedBidVectorRel (bidMaximizedBy ?a ?N ?\\<Omega> Elsee 0) ?N ?\\<Omega>\n\ngoal (1 subgoal):\n 1. summedBidVectorRel\n     (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N \\<Omega> =\n    summedBidVectorRel (bidMaximizedBy a N \\<Omega> Elsee 0) N \\<Omega>", "by metis"], ["", "corollary maxbidEquivalence: \n  \"summedBidVectorRel (maxbid a N \\<Omega>) N \\<Omega> = \n   summedBidVectorRel (maxbidAlg a N \\<Omega>) N \\<Omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summedBidVectorRel\n     (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N \\<Omega> =\n    summedBidVectorRel (maxbidAlg a N \\<Omega>) N \\<Omega>", "unfolding maxbidAlg_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. summedBidVectorRel\n     (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N \\<Omega> =\n    summedBidVectorRel (bidMaximizedBy a N \\<Omega> Elsee 0) N \\<Omega>", "using lm13"], ["proof (prove)\nusing this:\n  summedBidVectorRel\n   (pseudoAllocation ?a <| (?N \\<times> finestpart ?\\<Omega>)) ?N\n   ?\\<Omega> =\n  summedBidVectorRel (bidMaximizedBy ?a ?N ?\\<Omega> Elsee 0) ?N ?\\<Omega>\n\ngoal (1 subgoal):\n 1. summedBidVectorRel\n     (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N \\<Omega> =\n    summedBidVectorRel (bidMaximizedBy a N \\<Omega> Elsee 0) N \\<Omega>", "by metis"], ["", "lemma summedBidVectorEquivalence: \n  assumes \"x \\<in> (N \\<times> (Pow \\<Omega> - {{}}))\" \n  shows \"summedBidVector (maxbid a N \\<Omega>) N \\<Omega> x = summedBidVectorAlg (maxbidAlg a N \\<Omega>) N \\<Omega> x\"\n  (is \"?f1 ?g1 N \\<Omega> x = ?f2 ?g2 N \\<Omega> x\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     N \\<Omega> x =\n    summedBidVectorAlg (maxbidAlg a N \\<Omega>) N \\<Omega> x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     N \\<Omega> x =\n    summedBidVectorAlg (maxbidAlg a N \\<Omega>) N \\<Omega> x", "let ?h1 = \"maxbid a N \\<Omega>\""], ["proof (state)\ngoal (1 subgoal):\n 1. summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     N \\<Omega> x =\n    summedBidVectorAlg (maxbidAlg a N \\<Omega>) N \\<Omega> x", "let ?h2 = \"maxbidAlg a N \\<Omega>\""], ["proof (state)\ngoal (1 subgoal):\n 1. summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     N \\<Omega> x =\n    summedBidVectorAlg (maxbidAlg a N \\<Omega>) N \\<Omega> x", "have \"summedBidVectorRel ?h1 N \\<Omega> = summedBidVectorRel ?h2 N \\<Omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summedBidVectorRel\n     (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N \\<Omega> =\n    summedBidVectorRel (maxbidAlg a N \\<Omega>) N \\<Omega>", "using maxbidEquivalence"], ["proof (prove)\nusing this:\n  summedBidVectorRel\n   (pseudoAllocation ?a <| (?N \\<times> finestpart ?\\<Omega>)) ?N\n   ?\\<Omega> =\n  summedBidVectorRel (maxbidAlg ?a ?N ?\\<Omega>) ?N ?\\<Omega>\n\ngoal (1 subgoal):\n 1. summedBidVectorRel\n     (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N \\<Omega> =\n    summedBidVectorRel (maxbidAlg a N \\<Omega>) N \\<Omega>", "by metis"], ["proof (state)\nthis:\n  summedBidVectorRel\n   (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N \\<Omega> =\n  summedBidVectorRel (maxbidAlg a N \\<Omega>) N \\<Omega>\n\ngoal (1 subgoal):\n 1. summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     N \\<Omega> x =\n    summedBidVectorAlg (maxbidAlg a N \\<Omega>) N \\<Omega> x", "moreover"], ["proof (state)\nthis:\n  summedBidVectorRel\n   (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N \\<Omega> =\n  summedBidVectorRel (maxbidAlg a N \\<Omega>) N \\<Omega>\n\ngoal (1 subgoal):\n 1. summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     N \\<Omega> x =\n    summedBidVectorAlg (maxbidAlg a N \\<Omega>) N \\<Omega> x", "have \"summedBidVectorAlg ?h2 N \\<Omega> = (summedBidVectorRel ?h2 N \\<Omega>) Elsee 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summedBidVectorAlg (maxbidAlg a N \\<Omega>) N \\<Omega> =\n    summedBidVectorRel (maxbidAlg a N \\<Omega>) N \\<Omega> Elsee 0", "unfolding summedBidVectorAlg_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. summedBidVectorRel (maxbidAlg a N \\<Omega>) N \\<Omega> Elsee 0 =\n    summedBidVectorRel (maxbidAlg a N \\<Omega>) N \\<Omega> Elsee 0", "by fast"], ["proof (state)\nthis:\n  summedBidVectorAlg (maxbidAlg a N \\<Omega>) N \\<Omega> =\n  summedBidVectorRel (maxbidAlg a N \\<Omega>) N \\<Omega> Elsee 0\n\ngoal (1 subgoal):\n 1. summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     N \\<Omega> x =\n    summedBidVectorAlg (maxbidAlg a N \\<Omega>) N \\<Omega> x", "ultimately"], ["proof (chain)\npicking this:\n  summedBidVectorRel\n   (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N \\<Omega> =\n  summedBidVectorRel (maxbidAlg a N \\<Omega>) N \\<Omega>\n  summedBidVectorAlg (maxbidAlg a N \\<Omega>) N \\<Omega> =\n  summedBidVectorRel (maxbidAlg a N \\<Omega>) N \\<Omega> Elsee 0", "have \" summedBidVectorAlg ?h2 N \\<Omega>=summedBidVectorRel ?h1 N \\<Omega> Elsee 0\""], ["proof (prove)\nusing this:\n  summedBidVectorRel\n   (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N \\<Omega> =\n  summedBidVectorRel (maxbidAlg a N \\<Omega>) N \\<Omega>\n  summedBidVectorAlg (maxbidAlg a N \\<Omega>) N \\<Omega> =\n  summedBidVectorRel (maxbidAlg a N \\<Omega>) N \\<Omega> Elsee 0\n\ngoal (1 subgoal):\n 1. summedBidVectorAlg (maxbidAlg a N \\<Omega>) N \\<Omega> =\n    summedBidVectorRel\n     (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N\n     \\<Omega> Elsee\n    0", "by simp"], ["proof (state)\nthis:\n  summedBidVectorAlg (maxbidAlg a N \\<Omega>) N \\<Omega> =\n  summedBidVectorRel\n   (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N \\<Omega> Elsee\n  0\n\ngoal (1 subgoal):\n 1. summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     N \\<Omega> x =\n    summedBidVectorAlg (maxbidAlg a N \\<Omega>) N \\<Omega> x", "moreover"], ["proof (state)\nthis:\n  summedBidVectorAlg (maxbidAlg a N \\<Omega>) N \\<Omega> =\n  summedBidVectorRel\n   (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N \\<Omega> Elsee\n  0\n\ngoal (1 subgoal):\n 1. summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     N \\<Omega> x =\n    summedBidVectorAlg (maxbidAlg a N \\<Omega>) N \\<Omega> x", "have \"... x = (toFunction (summedBidVectorRel ?h1 N \\<Omega>)) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (summedBidVectorRel\n      (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N\n      \\<Omega> Elsee\n     0)\n     x =\n    summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     N \\<Omega> x", "using assms functionCompletion summedBidVectorCharacterization"], ["proof (prove)\nusing this:\n  x \\<in> N \\<times> (Pow \\<Omega> - {{}})\n  ?x \\<in> Domain ?f \\<Longrightarrow>\n  toFunction ?f ?x = (?f Elsee (0::?'b)) ?x\n  ?N \\<times> (Pow ?G - {{}}) = Domain (summedBidVectorRel ?bids ?N ?G)\n\ngoal (1 subgoal):\n 1. (summedBidVectorRel\n      (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N\n      \\<Omega> Elsee\n     0)\n     x =\n    summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     N \\<Omega> x", "by (metis (mono_tags))"], ["proof (state)\nthis:\n  (summedBidVectorRel\n    (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N\n    \\<Omega> Elsee\n   0)\n   x =\n  summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N\n   \\<Omega> x\n\ngoal (1 subgoal):\n 1. summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     N \\<Omega> x =\n    summedBidVectorAlg (maxbidAlg a N \\<Omega>) N \\<Omega> x", "ultimately"], ["proof (chain)\npicking this:\n  summedBidVectorAlg (maxbidAlg a N \\<Omega>) N \\<Omega> =\n  summedBidVectorRel\n   (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N \\<Omega> Elsee\n  0\n  (summedBidVectorRel\n    (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N\n    \\<Omega> Elsee\n   0)\n   x =\n  summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N\n   \\<Omega> x", "have \"summedBidVectorAlg ?h2 N \\<Omega> x = (toFunction (summedBidVectorRel ?h1 N \\<Omega>)) x\""], ["proof (prove)\nusing this:\n  summedBidVectorAlg (maxbidAlg a N \\<Omega>) N \\<Omega> =\n  summedBidVectorRel\n   (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N \\<Omega> Elsee\n  0\n  (summedBidVectorRel\n    (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N\n    \\<Omega> Elsee\n   0)\n   x =\n  summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N\n   \\<Omega> x\n\ngoal (1 subgoal):\n 1. summedBidVectorAlg (maxbidAlg a N \\<Omega>) N \\<Omega> x =\n    summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     N \\<Omega> x", "by (metis (lifting, no_types))"], ["proof (state)\nthis:\n  summedBidVectorAlg (maxbidAlg a N \\<Omega>) N \\<Omega> x =\n  summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N\n   \\<Omega> x\n\ngoal (1 subgoal):\n 1. summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     N \\<Omega> x =\n    summedBidVectorAlg (maxbidAlg a N \\<Omega>) N \\<Omega> x", "thus ?thesis"], ["proof (prove)\nusing this:\n  summedBidVectorAlg (maxbidAlg a N \\<Omega>) N \\<Omega> x =\n  summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N\n   \\<Omega> x\n\ngoal (1 subgoal):\n 1. summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     N \\<Omega> x =\n    summedBidVectorAlg (maxbidAlg a N \\<Omega>) N \\<Omega> x", "by simp"], ["proof (state)\nthis:\n  summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N\n   \\<Omega> x =\n  summedBidVectorAlg (maxbidAlg a N \\<Omega>) N \\<Omega> x\n\ngoal:\nNo subgoals!", "qed"], ["", "(* TPTP ? *)"], ["", "corollary chosenAllocationEquivalence: \n  assumes \"card N > 0\" and \"distinct \\<Omega>\"\n  shows  \"chosenAllocation N \\<Omega> b r = chosenAllocationAlg N \\<Omega> b r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. randomEl\n     (takeAll\n       (\\<lambda>x. winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n       (allAllocationsAlg N \\<Omega>))\n     r =\n    chosenAllocationAlg N \\<Omega> b r", "using assms allAllocationsBridgingLemma"], ["proof (prove)\nusing this:\n  0 < card N\n  distinct \\<Omega>\n  \\<lbrakk>0 < card ?N; distinct ?G\\<rbrakk>\n  \\<Longrightarrow> allAllocations ?N (set ?G) =\n                    set (allAllocationsAlg ?N ?G)\n\ngoal (1 subgoal):\n 1. randomEl\n     (takeAll\n       (\\<lambda>x. winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n       (allAllocationsAlg N \\<Omega>))\n     r =\n    chosenAllocationAlg N \\<Omega> b r", "by (metis (no_types) chosenAllocationAlg_def comp_apply)"], ["", "corollary tiebidsBridgingLemma: \n  assumes \"x \\<in> (N \\<times> (Pow \\<Omega> - {{}}))\" \n  shows \"tiebids a N \\<Omega> x = tiebidsAlg a N \\<Omega> x\" \n  (is \"?L=_\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     N \\<Omega> x =\n    tiebidsAlg a N \\<Omega> x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     N \\<Omega> x =\n    tiebidsAlg a N \\<Omega> x", "have \"?L = summedBidVector (maxbid a N \\<Omega>) N \\<Omega> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     N \\<Omega> x =\n    summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     N \\<Omega> x", "by fast"], ["proof (state)\nthis:\n  summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N\n   \\<Omega> x =\n  summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N\n   \\<Omega> x\n\ngoal (1 subgoal):\n 1. summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     N \\<Omega> x =\n    tiebidsAlg a N \\<Omega> x", "moreover"], ["proof (state)\nthis:\n  summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N\n   \\<Omega> x =\n  summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N\n   \\<Omega> x\n\ngoal (1 subgoal):\n 1. summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     N \\<Omega> x =\n    tiebidsAlg a N \\<Omega> x", "have \"...= summedBidVectorAlg (maxbidAlg a N \\<Omega>) N \\<Omega> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     N \\<Omega> x =\n    summedBidVectorAlg (maxbidAlg a N \\<Omega>) N \\<Omega> x", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> N \\<times> (Pow \\<Omega> - {{}})\n\ngoal (1 subgoal):\n 1. summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     N \\<Omega> x =\n    summedBidVectorAlg (maxbidAlg a N \\<Omega>) N \\<Omega> x", "by (rule summedBidVectorEquivalence)"], ["proof (state)\nthis:\n  summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N\n   \\<Omega> x =\n  summedBidVectorAlg (maxbidAlg a N \\<Omega>) N \\<Omega> x\n\ngoal (1 subgoal):\n 1. summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     N \\<Omega> x =\n    tiebidsAlg a N \\<Omega> x", "ultimately"], ["proof (chain)\npicking this:\n  summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N\n   \\<Omega> x =\n  summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N\n   \\<Omega> x\n  summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N\n   \\<Omega> x =\n  summedBidVectorAlg (maxbidAlg a N \\<Omega>) N \\<Omega> x", "show ?thesis"], ["proof (prove)\nusing this:\n  summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N\n   \\<Omega> x =\n  summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N\n   \\<Omega> x\n  summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N\n   \\<Omega> x =\n  summedBidVectorAlg (maxbidAlg a N \\<Omega>) N \\<Omega> x\n\ngoal (1 subgoal):\n 1. summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     N \\<Omega> x =\n    tiebidsAlg a N \\<Omega> x", "unfolding tiebidsAlg_def"], ["proof (prove)\nusing this:\n  summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N\n   \\<Omega> x =\n  summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N\n   \\<Omega> x\n  summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N\n   \\<Omega> x =\n  summedBidVectorAlg (maxbidAlg a N \\<Omega>) N \\<Omega> x\n\ngoal (1 subgoal):\n 1. summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>))\n     N \\<Omega> x =\n    summedBidVectorAlg (maxbidAlg a N \\<Omega>) N \\<Omega> x", "by fast"], ["proof (state)\nthis:\n  summedBidVector (pseudoAllocation a <| (N \\<times> finestpart \\<Omega>)) N\n   \\<Omega> x =\n  tiebidsAlg a N \\<Omega> x\n\ngoal:\nNo subgoals!", "qed"], ["", "definition \"tiebids'=tiebids\""], ["", "corollary tiebidsBridgingLemma': \n  assumes \"x \\<in> (N \\<times> (Pow \\<Omega> - {{}}))\" \n  shows \"tiebids' a N \\<Omega> x = tiebidsAlg a N \\<Omega> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tiebids' a N \\<Omega> x = tiebidsAlg a N \\<Omega> x", "using assms tiebidsBridgingLemma tiebids'_def"], ["proof (prove)\nusing this:\n  x \\<in> N \\<times> (Pow \\<Omega> - {{}})\n  ?x \\<in> ?N \\<times> (Pow ?\\<Omega> - {{}}) \\<Longrightarrow>\n  summedBidVector\n   (pseudoAllocation ?a <| (?N \\<times> finestpart ?\\<Omega>)) ?N ?\\<Omega>\n   ?x =\n  tiebidsAlg ?a ?N ?\\<Omega> ?x\n  tiebids' =\n  (\\<lambda>allocation N G.\n      summedBidVector\n       (pseudoAllocation allocation <| (N \\<times> finestpart G)) N G)\n\ngoal (1 subgoal):\n 1. tiebids' a N \\<Omega> x = tiebidsAlg a N \\<Omega> x", "by metis"], ["", "abbreviation \"resolvingBid' N G bids random == \n  tiebids' (chosenAllocation N G bids random) N (set G)\""], ["", "lemma resolvingBidEquivalence: \n  assumes \"x \\<in> (N \\<times> (Pow (set \\<Omega>) - {{}}))\"  \"card N > 0\" \"distinct \\<Omega>\"\n  shows \"resolvingBid' N \\<Omega> b r x = resolvingBidAlg N \\<Omega> b r x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tiebids'\n     (randomEl\n       (takeAll\n         (\\<lambda>x. winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n         (allAllocationsAlg N \\<Omega>))\n       r)\n     N (set \\<Omega>) x =\n    resolvingBidAlg N \\<Omega> b r x", "using assms chosenAllocationEquivalence tiebidsBridgingLemma' resolvingBidAlg_def"], ["proof (prove)\nusing this:\n  x \\<in> N \\<times> (Pow (set \\<Omega>) - {{}})\n  0 < card N\n  distinct \\<Omega>\n  \\<lbrakk>0 < card ?N; distinct ?\\<Omega>\\<rbrakk>\n  \\<Longrightarrow> randomEl\n                     (takeAll\n                       (\\<lambda>x.\n                           winningAllocationRel ?N (set ?\\<Omega>)\n                            ((\\<in>) x) ?b)\n                       (allAllocationsAlg ?N ?\\<Omega>))\n                     ?r =\n                    chosenAllocationAlg ?N ?\\<Omega> ?b ?r\n  ?x \\<in> ?N \\<times> (Pow ?\\<Omega> - {{}}) \\<Longrightarrow>\n  tiebids' ?a ?N ?\\<Omega> ?x = tiebidsAlg ?a ?N ?\\<Omega> ?x\n  resolvingBidAlg ?N ?\\<Omega> ?bids ?random \\<equiv>\n  tiebidsAlg (chosenAllocationAlg ?N ?\\<Omega> ?bids ?random) ?N\n   (set ?\\<Omega>)\n\ngoal (1 subgoal):\n 1. tiebids'\n     (randomEl\n       (takeAll\n         (\\<lambda>x. winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n         (allAllocationsAlg N \\<Omega>))\n       r)\n     N (set \\<Omega>) x =\n    resolvingBidAlg N \\<Omega> b r x", "by metis"], ["", "lemma sumResolvingBidEquivalence:\n  assumes \"card N > 0\" \"distinct \\<Omega>\" \"a \\<subseteq> (N \\<times> (Pow (set \\<Omega>) - {{}}))\" \n  shows \"sum (resolvingBid' N \\<Omega> b r) a = sum (resolvingBidAlg N \\<Omega> b r) a\" \n  (is \"?L=?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (tiebids'\n          (randomEl\n            (takeAll\n              (\\<lambda>x.\n                  winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n              (allAllocationsAlg N \\<Omega>))\n            r)\n          N (set \\<Omega>))\n     a =\n    sum (resolvingBidAlg N \\<Omega> b r) a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum (tiebids'\n          (randomEl\n            (takeAll\n              (\\<lambda>x.\n                  winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n              (allAllocationsAlg N \\<Omega>))\n            r)\n          N (set \\<Omega>))\n     a =\n    sum (resolvingBidAlg N \\<Omega> b r) a", "have \"\\<forall>x\\<in>a. resolvingBid' N \\<Omega> b r x = resolvingBidAlg N \\<Omega> b r x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>a.\n       tiebids'\n        (randomEl\n          (takeAll\n            (\\<lambda>x.\n                winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n            (allAllocationsAlg N \\<Omega>))\n          r)\n        N (set \\<Omega>) x =\n       resolvingBidAlg N \\<Omega> b r x", "using assms resolvingBidEquivalence"], ["proof (prove)\nusing this:\n  0 < card N\n  distinct \\<Omega>\n  a \\<subseteq> N \\<times> (Pow (set \\<Omega>) - {{}})\n  \\<lbrakk>?x \\<in> ?N \\<times> (Pow (set ?\\<Omega>) - {{}}); 0 < card ?N;\n   distinct ?\\<Omega>\\<rbrakk>\n  \\<Longrightarrow> tiebids'\n                     (randomEl\n                       (takeAll\n                         (\\<lambda>x.\n                             winningAllocationRel ?N (set ?\\<Omega>)\n                              ((\\<in>) x) ?b)\n                         (allAllocationsAlg ?N ?\\<Omega>))\n                       ?r)\n                     ?N (set ?\\<Omega>) ?x =\n                    resolvingBidAlg ?N ?\\<Omega> ?b ?r ?x\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>a.\n       tiebids'\n        (randomEl\n          (takeAll\n            (\\<lambda>x.\n                winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n            (allAllocationsAlg N \\<Omega>))\n          r)\n        N (set \\<Omega>) x =\n       resolvingBidAlg N \\<Omega> b r x", "by blast"], ["proof (state)\nthis:\n  \\<forall>x\\<in>a.\n     tiebids'\n      (randomEl\n        (takeAll\n          (\\<lambda>x. winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n          (allAllocationsAlg N \\<Omega>))\n        r)\n      N (set \\<Omega>) x =\n     resolvingBidAlg N \\<Omega> b r x\n\ngoal (1 subgoal):\n 1. sum (tiebids'\n          (randomEl\n            (takeAll\n              (\\<lambda>x.\n                  winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n              (allAllocationsAlg N \\<Omega>))\n            r)\n          N (set \\<Omega>))\n     a =\n    sum (resolvingBidAlg N \\<Omega> b r) a", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>a.\n     tiebids'\n      (randomEl\n        (takeAll\n          (\\<lambda>x. winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n          (allAllocationsAlg N \\<Omega>))\n        r)\n      N (set \\<Omega>) x =\n     resolvingBidAlg N \\<Omega> b r x\n\ngoal (1 subgoal):\n 1. sum (tiebids'\n          (randomEl\n            (takeAll\n              (\\<lambda>x.\n                  winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n              (allAllocationsAlg N \\<Omega>))\n            r)\n          N (set \\<Omega>))\n     a =\n    sum (resolvingBidAlg N \\<Omega> b r) a", "using sum.cong"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>a.\n     tiebids'\n      (randomEl\n        (takeAll\n          (\\<lambda>x. winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n          (allAllocationsAlg N \\<Omega>))\n        r)\n      N (set \\<Omega>) x =\n     resolvingBidAlg N \\<Omega> b r x\n  \\<lbrakk>?A = ?B;\n   \\<And>x. x \\<in> ?B \\<Longrightarrow> ?g x = ?h x\\<rbrakk>\n  \\<Longrightarrow> sum ?g ?A = sum ?h ?B\n\ngoal (1 subgoal):\n 1. sum (tiebids'\n          (randomEl\n            (takeAll\n              (\\<lambda>x.\n                  winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n              (allAllocationsAlg N \\<Omega>))\n            r)\n          N (set \\<Omega>))\n     a =\n    sum (resolvingBidAlg N \\<Omega> b r) a", "by force"], ["proof (state)\nthis:\n  sum (tiebids'\n        (randomEl\n          (takeAll\n            (\\<lambda>x.\n                winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n            (allAllocationsAlg N \\<Omega>))\n          r)\n        N (set \\<Omega>))\n   a =\n  sum (resolvingBidAlg N \\<Omega> b r) a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma resolvingBidBridgingLemma: \n  assumes \"card N > 0\" \"distinct \\<Omega>\" \"a \\<subseteq> (N \\<times> (Pow (set \\<Omega>) - {{}}))\" \n  shows \"sum (resolvingBid N \\<Omega> b r) a = sum (resolvingBidAlg N \\<Omega> b r) a\" \n  (is \"?L=?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n                (allAllocationsAlg N \\<Omega>))\n              r) <|\n           (N \\<times> finestpart (set \\<Omega>)))\n          N (set \\<Omega>))\n     a =\n    sum (resolvingBidAlg N \\<Omega> b r) a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n                (allAllocationsAlg N \\<Omega>))\n              r) <|\n           (N \\<times> finestpart (set \\<Omega>)))\n          N (set \\<Omega>))\n     a =\n    sum (resolvingBidAlg N \\<Omega> b r) a", "have \"?L=sum (resolvingBid' N \\<Omega> b r) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n                (allAllocationsAlg N \\<Omega>))\n              r) <|\n           (N \\<times> finestpart (set \\<Omega>)))\n          N (set \\<Omega>))\n     a =\n    sum (tiebids'\n          (randomEl\n            (takeAll\n              (\\<lambda>x.\n                  winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n              (allAllocationsAlg N \\<Omega>))\n            r)\n          N (set \\<Omega>))\n     a", "unfolding tiebids'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n                (allAllocationsAlg N \\<Omega>))\n              r) <|\n           (N \\<times> finestpart (set \\<Omega>)))\n          N (set \\<Omega>))\n     a =\n    sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n                (allAllocationsAlg N \\<Omega>))\n              r) <|\n           (N \\<times> finestpart (set \\<Omega>)))\n          N (set \\<Omega>))\n     a", "by fast"], ["proof (state)\nthis:\n  sum (summedBidVector\n        (pseudoAllocation\n          (randomEl\n            (takeAll\n              (\\<lambda>x.\n                  winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n              (allAllocationsAlg N \\<Omega>))\n            r) <|\n         (N \\<times> finestpart (set \\<Omega>)))\n        N (set \\<Omega>))\n   a =\n  sum (tiebids'\n        (randomEl\n          (takeAll\n            (\\<lambda>x.\n                winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n            (allAllocationsAlg N \\<Omega>))\n          r)\n        N (set \\<Omega>))\n   a\n\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n                (allAllocationsAlg N \\<Omega>))\n              r) <|\n           (N \\<times> finestpart (set \\<Omega>)))\n          N (set \\<Omega>))\n     a =\n    sum (resolvingBidAlg N \\<Omega> b r) a", "moreover"], ["proof (state)\nthis:\n  sum (summedBidVector\n        (pseudoAllocation\n          (randomEl\n            (takeAll\n              (\\<lambda>x.\n                  winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n              (allAllocationsAlg N \\<Omega>))\n            r) <|\n         (N \\<times> finestpart (set \\<Omega>)))\n        N (set \\<Omega>))\n   a =\n  sum (tiebids'\n        (randomEl\n          (takeAll\n            (\\<lambda>x.\n                winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n            (allAllocationsAlg N \\<Omega>))\n          r)\n        N (set \\<Omega>))\n   a\n\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n                (allAllocationsAlg N \\<Omega>))\n              r) <|\n           (N \\<times> finestpart (set \\<Omega>)))\n          N (set \\<Omega>))\n     a =\n    sum (resolvingBidAlg N \\<Omega> b r) a", "have \"...=?R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (tiebids'\n          (randomEl\n            (takeAll\n              (\\<lambda>x.\n                  winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n              (allAllocationsAlg N \\<Omega>))\n            r)\n          N (set \\<Omega>))\n     a =\n    sum (resolvingBidAlg N \\<Omega> b r) a", "using assms"], ["proof (prove)\nusing this:\n  0 < card N\n  distinct \\<Omega>\n  a \\<subseteq> N \\<times> (Pow (set \\<Omega>) - {{}})\n\ngoal (1 subgoal):\n 1. sum (tiebids'\n          (randomEl\n            (takeAll\n              (\\<lambda>x.\n                  winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n              (allAllocationsAlg N \\<Omega>))\n            r)\n          N (set \\<Omega>))\n     a =\n    sum (resolvingBidAlg N \\<Omega> b r) a", "by (rule sumResolvingBidEquivalence)"], ["proof (state)\nthis:\n  sum (tiebids'\n        (randomEl\n          (takeAll\n            (\\<lambda>x.\n                winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n            (allAllocationsAlg N \\<Omega>))\n          r)\n        N (set \\<Omega>))\n   a =\n  sum (resolvingBidAlg N \\<Omega> b r) a\n\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n                (allAllocationsAlg N \\<Omega>))\n              r) <|\n           (N \\<times> finestpart (set \\<Omega>)))\n          N (set \\<Omega>))\n     a =\n    sum (resolvingBidAlg N \\<Omega> b r) a", "ultimately"], ["proof (chain)\npicking this:\n  sum (summedBidVector\n        (pseudoAllocation\n          (randomEl\n            (takeAll\n              (\\<lambda>x.\n                  winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n              (allAllocationsAlg N \\<Omega>))\n            r) <|\n         (N \\<times> finestpart (set \\<Omega>)))\n        N (set \\<Omega>))\n   a =\n  sum (tiebids'\n        (randomEl\n          (takeAll\n            (\\<lambda>x.\n                winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n            (allAllocationsAlg N \\<Omega>))\n          r)\n        N (set \\<Omega>))\n   a\n  sum (tiebids'\n        (randomEl\n          (takeAll\n            (\\<lambda>x.\n                winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n            (allAllocationsAlg N \\<Omega>))\n          r)\n        N (set \\<Omega>))\n   a =\n  sum (resolvingBidAlg N \\<Omega> b r) a", "show ?thesis"], ["proof (prove)\nusing this:\n  sum (summedBidVector\n        (pseudoAllocation\n          (randomEl\n            (takeAll\n              (\\<lambda>x.\n                  winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n              (allAllocationsAlg N \\<Omega>))\n            r) <|\n         (N \\<times> finestpart (set \\<Omega>)))\n        N (set \\<Omega>))\n   a =\n  sum (tiebids'\n        (randomEl\n          (takeAll\n            (\\<lambda>x.\n                winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n            (allAllocationsAlg N \\<Omega>))\n          r)\n        N (set \\<Omega>))\n   a\n  sum (tiebids'\n        (randomEl\n          (takeAll\n            (\\<lambda>x.\n                winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n            (allAllocationsAlg N \\<Omega>))\n          r)\n        N (set \\<Omega>))\n   a =\n  sum (resolvingBidAlg N \\<Omega> b r) a\n\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n                (allAllocationsAlg N \\<Omega>))\n              r) <|\n           (N \\<times> finestpart (set \\<Omega>)))\n          N (set \\<Omega>))\n     a =\n    sum (resolvingBidAlg N \\<Omega> b r) a", "by simp"], ["proof (state)\nthis:\n  sum (summedBidVector\n        (pseudoAllocation\n          (randomEl\n            (takeAll\n              (\\<lambda>x.\n                  winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n              (allAllocationsAlg N \\<Omega>))\n            r) <|\n         (N \\<times> finestpart (set \\<Omega>)))\n        N (set \\<Omega>))\n   a =\n  sum (resolvingBidAlg N \\<Omega> b r) a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma allAllocationsInPowerset: \n  \"allAllocations N \\<Omega> \\<subseteq> Pow (N \\<times> (Pow \\<Omega> - {{}}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. allAllocations N \\<Omega>\n    \\<subseteq> Pow (N \\<times> (Pow \\<Omega> - {{}}))", "by (metis PowI allocationPowerset subsetI)"], ["", "corollary resolvingBidBridgingLemmaVariant1: \n  assumes \"card N > 0\" \"distinct \\<Omega>\" \"a \\<in> allAllocations N (set \\<Omega>)\" \n  shows \"sum (resolvingBid N \\<Omega> b r) a = sum (resolvingBidAlg N \\<Omega> b r) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n                (allAllocationsAlg N \\<Omega>))\n              r) <|\n           (N \\<times> finestpart (set \\<Omega>)))\n          N (set \\<Omega>))\n     a =\n    sum (resolvingBidAlg N \\<Omega> b r) a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n                (allAllocationsAlg N \\<Omega>))\n              r) <|\n           (N \\<times> finestpart (set \\<Omega>)))\n          N (set \\<Omega>))\n     a =\n    sum (resolvingBidAlg N \\<Omega> b r) a", "have \"a \\<subseteq> N \\<times> (Pow (set \\<Omega>) - {{}})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<subseteq> N \\<times> (Pow (set \\<Omega>) - {{}})", "using assms(3) allAllocationsInPowerset"], ["proof (prove)\nusing this:\n  a \\<in> allAllocations N (set \\<Omega>)\n  allAllocations ?N ?\\<Omega>\n  \\<subseteq> Pow (?N \\<times> (Pow ?\\<Omega> - {{}}))\n\ngoal (1 subgoal):\n 1. a \\<subseteq> N \\<times> (Pow (set \\<Omega>) - {{}})", "by blast"], ["proof (state)\nthis:\n  a \\<subseteq> N \\<times> (Pow (set \\<Omega>) - {{}})\n\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n                (allAllocationsAlg N \\<Omega>))\n              r) <|\n           (N \\<times> finestpart (set \\<Omega>)))\n          N (set \\<Omega>))\n     a =\n    sum (resolvingBidAlg N \\<Omega> b r) a", "thus ?thesis"], ["proof (prove)\nusing this:\n  a \\<subseteq> N \\<times> (Pow (set \\<Omega>) - {{}})\n\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n                (allAllocationsAlg N \\<Omega>))\n              r) <|\n           (N \\<times> finestpart (set \\<Omega>)))\n          N (set \\<Omega>))\n     a =\n    sum (resolvingBidAlg N \\<Omega> b r) a", "using assms(1,2) resolvingBidBridgingLemma"], ["proof (prove)\nusing this:\n  a \\<subseteq> N \\<times> (Pow (set \\<Omega>) - {{}})\n  0 < card N\n  distinct \\<Omega>\n  \\<lbrakk>0 < card ?N; distinct ?\\<Omega>;\n   ?a \\<subseteq> ?N \\<times> (Pow (set ?\\<Omega>) - {{}})\\<rbrakk>\n  \\<Longrightarrow> sum (summedBidVector\n                          (pseudoAllocation\n                            (randomEl\n                              (takeAll\n                                (\\<lambda>x.\n                                    winningAllocationRel ?N (set ?\\<Omega>)\n                                     ((\\<in>) x) ?b)\n                                (allAllocationsAlg ?N ?\\<Omega>))\n                              ?r) <|\n                           (?N \\<times> finestpart (set ?\\<Omega>)))\n                          ?N (set ?\\<Omega>))\n                     ?a =\n                    sum (resolvingBidAlg ?N ?\\<Omega> ?b ?r) ?a\n\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n                (allAllocationsAlg N \\<Omega>))\n              r) <|\n           (N \\<times> finestpart (set \\<Omega>)))\n          N (set \\<Omega>))\n     a =\n    sum (resolvingBidAlg N \\<Omega> b r) a", "by blast"], ["proof (state)\nthis:\n  sum (summedBidVector\n        (pseudoAllocation\n          (randomEl\n            (takeAll\n              (\\<lambda>x.\n                  winningAllocationRel N (set \\<Omega>) ((\\<in>) x) b)\n              (allAllocationsAlg N \\<Omega>))\n            r) <|\n         (N \\<times> finestpart (set \\<Omega>)))\n        N (set \\<Omega>))\n   a =\n  sum (resolvingBidAlg N \\<Omega> b r) a\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary resolvingBidBridgingLemmaVariant2: \n  assumes \"finite N\" \"distinct \\<Omega>\" \"a \\<in> maximalStrictAllocations N (set \\<Omega>) b\" \n  shows \"sum (randomBids N \\<Omega> b r) a = sum (randomBidsAlg N \\<Omega> b r) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel (N \\<union> {seller})\n                     (set \\<Omega>) ((\\<in>) x) b)\n                (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n              r) <|\n           ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n          (N \\<union> {seller}) (set \\<Omega>))\n     a =\n    sum (randomBidsAlg N \\<Omega> b r) a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel (N \\<union> {seller})\n                     (set \\<Omega>) ((\\<in>) x) b)\n                (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n              r) <|\n           ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n          (N \\<union> {seller}) (set \\<Omega>))\n     a =\n    sum (randomBidsAlg N \\<Omega> b r) a", "have \"card (N\\<union>{seller}) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < card (N \\<union> {seller})", "using assms(1) sup_eq_bot_iff insert_not_empty"], ["proof (prove)\nusing this:\n  finite N\n  (sup ?x ?y = bot) = (?x = bot \\<and> ?y = bot)\n  insert ?a ?A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. 0 < card (N \\<union> {seller})", "by (metis card_gt_0_iff finite.emptyI finite.insertI finite_UnI)"], ["proof (state)\nthis:\n  0 < card (N \\<union> {seller})\n\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel (N \\<union> {seller})\n                     (set \\<Omega>) ((\\<in>) x) b)\n                (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n              r) <|\n           ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n          (N \\<union> {seller}) (set \\<Omega>))\n     a =\n    sum (randomBidsAlg N \\<Omega> b r) a", "moreover"], ["proof (state)\nthis:\n  0 < card (N \\<union> {seller})\n\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel (N \\<union> {seller})\n                     (set \\<Omega>) ((\\<in>) x) b)\n                (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n              r) <|\n           ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n          (N \\<union> {seller}) (set \\<Omega>))\n     a =\n    sum (randomBidsAlg N \\<Omega> b r) a", "have \"distinct \\<Omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct \\<Omega>", "using assms(2)"], ["proof (prove)\nusing this:\n  distinct \\<Omega>\n\ngoal (1 subgoal):\n 1. distinct \\<Omega>", "by simp"], ["proof (state)\nthis:\n  distinct \\<Omega>\n\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel (N \\<union> {seller})\n                     (set \\<Omega>) ((\\<in>) x) b)\n                (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n              r) <|\n           ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n          (N \\<union> {seller}) (set \\<Omega>))\n     a =\n    sum (randomBidsAlg N \\<Omega> b r) a", "moreover"], ["proof (state)\nthis:\n  distinct \\<Omega>\n\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel (N \\<union> {seller})\n                     (set \\<Omega>) ((\\<in>) x) b)\n                (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n              r) <|\n           ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n          (N \\<union> {seller}) (set \\<Omega>))\n     a =\n    sum (randomBidsAlg N \\<Omega> b r) a", "have \"a \\<in> allAllocations (N\\<union>{seller}) (set \\<Omega>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> allAllocations (N \\<union> {seller}) (set \\<Omega>)", "using assms(3)"], ["proof (prove)\nusing this:\n  a \\<in> maximalStrictAllocations N (set \\<Omega>) b\n\ngoal (1 subgoal):\n 1. a \\<in> allAllocations (N \\<union> {seller}) (set \\<Omega>)", "by fastforce"], ["proof (state)\nthis:\n  a \\<in> allAllocations (N \\<union> {seller}) (set \\<Omega>)\n\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel (N \\<union> {seller})\n                     (set \\<Omega>) ((\\<in>) x) b)\n                (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n              r) <|\n           ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n          (N \\<union> {seller}) (set \\<Omega>))\n     a =\n    sum (randomBidsAlg N \\<Omega> b r) a", "ultimately"], ["proof (chain)\npicking this:\n  0 < card (N \\<union> {seller})\n  distinct \\<Omega>\n  a \\<in> allAllocations (N \\<union> {seller}) (set \\<Omega>)", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < card (N \\<union> {seller})\n  distinct \\<Omega>\n  a \\<in> allAllocations (N \\<union> {seller}) (set \\<Omega>)\n\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel (N \\<union> {seller})\n                     (set \\<Omega>) ((\\<in>) x) b)\n                (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n              r) <|\n           ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n          (N \\<union> {seller}) (set \\<Omega>))\n     a =\n    sum (randomBidsAlg N \\<Omega> b r) a", "unfolding randomBidsAlg_def"], ["proof (prove)\nusing this:\n  0 < card (N \\<union> {seller})\n  distinct \\<Omega>\n  a \\<in> allAllocations (N \\<union> {seller}) (set \\<Omega>)\n\ngoal (1 subgoal):\n 1. sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel (N \\<union> {seller})\n                     (set \\<Omega>) ((\\<in>) x) b)\n                (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n              r) <|\n           ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n          (N \\<union> {seller}) (set \\<Omega>))\n     a =\n    sum (resolvingBidAlg (N \\<union> {seller}) \\<Omega> b r) a", "by (rule resolvingBidBridgingLemmaVariant1)"], ["proof (state)\nthis:\n  sum (summedBidVector\n        (pseudoAllocation\n          (randomEl\n            (takeAll\n              (\\<lambda>x.\n                  winningAllocationRel (N \\<union> {seller}) (set \\<Omega>)\n                   ((\\<in>) x) b)\n              (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n            r) <|\n         ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n        (N \\<union> {seller}) (set \\<Omega>))\n   a =\n  sum (randomBidsAlg N \\<Omega> b r) a\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary tiebreakingGivesSingleton: \n  assumes \"distinct \\<Omega>\" \"set \\<Omega> \\<noteq> {}\" \"finite N\" \n  shows \"card (argmax (sum (randomBidsAlg N \\<Omega> b r)) \n                      (maximalStrictAllocations N (set \\<Omega>) b)) = \n         1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     (argmax (sum (randomBidsAlg N \\<Omega> b r))\n       (maximalStrictAllocations N (set \\<Omega>) b)) =\n    1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card\n     (argmax (sum (randomBidsAlg N \\<Omega> b r))\n       (maximalStrictAllocations N (set \\<Omega>) b)) =\n    1", "have \"\\<forall> a \\<in> maximalStrictAllocations N (set \\<Omega>) b. \n        sum (randomBids N \\<Omega> b r) a = sum (randomBidsAlg N \\<Omega> b r) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>maximalStrictAllocations N (set \\<Omega>) b.\n       sum (summedBidVector\n             (pseudoAllocation\n               (randomEl\n                 (takeAll\n                   (\\<lambda>x.\n                       winningAllocationRel (N \\<union> {seller})\n                        (set \\<Omega>) ((\\<in>) x) b)\n                   (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                 r) <|\n              ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n             (N \\<union> {seller}) (set \\<Omega>))\n        a =\n       sum (randomBidsAlg N \\<Omega> b r) a", "using assms(3,1) resolvingBidBridgingLemmaVariant2"], ["proof (prove)\nusing this:\n  finite N\n  distinct \\<Omega>\n  \\<lbrakk>finite ?N; distinct ?\\<Omega>;\n   ?a \\<in> maximalStrictAllocations ?N (set ?\\<Omega>) ?b\\<rbrakk>\n  \\<Longrightarrow> sum (summedBidVector\n                          (pseudoAllocation\n                            (randomEl\n                              (takeAll\n                                (\\<lambda>x.\n                                    winningAllocationRel\n                                     (?N \\<union> {seller}) (set ?\\<Omega>)\n                                     ((\\<in>) x) ?b)\n                                (allAllocationsAlg (?N \\<union> {seller})\n                                  ?\\<Omega>))\n                              ?r) <|\n                           ((?N \\<union> {seller}) \\<times>\n                            finestpart (set ?\\<Omega>)))\n                          (?N \\<union> {seller}) (set ?\\<Omega>))\n                     ?a =\n                    sum (randomBidsAlg ?N ?\\<Omega> ?b ?r) ?a\n\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>maximalStrictAllocations N (set \\<Omega>) b.\n       sum (summedBidVector\n             (pseudoAllocation\n               (randomEl\n                 (takeAll\n                   (\\<lambda>x.\n                       winningAllocationRel (N \\<union> {seller})\n                        (set \\<Omega>) ((\\<in>) x) b)\n                   (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                 r) <|\n              ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n             (N \\<union> {seller}) (set \\<Omega>))\n        a =\n       sum (randomBidsAlg N \\<Omega> b r) a", "by blast"], ["proof (state)\nthis:\n  \\<forall>a\\<in>maximalStrictAllocations N (set \\<Omega>) b.\n     sum (summedBidVector\n           (pseudoAllocation\n             (randomEl\n               (takeAll\n                 (\\<lambda>x.\n                     winningAllocationRel (N \\<union> {seller})\n                      (set \\<Omega>) ((\\<in>) x) b)\n                 (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n               r) <|\n            ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n           (N \\<union> {seller}) (set \\<Omega>))\n      a =\n     sum (randomBidsAlg N \\<Omega> b r) a\n\ngoal (1 subgoal):\n 1. card\n     (argmax (sum (randomBidsAlg N \\<Omega> b r))\n       (maximalStrictAllocations N (set \\<Omega>) b)) =\n    1", "then"], ["proof (chain)\npicking this:\n  \\<forall>a\\<in>maximalStrictAllocations N (set \\<Omega>) b.\n     sum (summedBidVector\n           (pseudoAllocation\n             (randomEl\n               (takeAll\n                 (\\<lambda>x.\n                     winningAllocationRel (N \\<union> {seller})\n                      (set \\<Omega>) ((\\<in>) x) b)\n                 (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n               r) <|\n            ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n           (N \\<union> {seller}) (set \\<Omega>))\n      a =\n     sum (randomBidsAlg N \\<Omega> b r) a", "have \"argmax (sum (randomBidsAlg N \\<Omega> b r)) (maximalStrictAllocations N (set \\<Omega>) b) =\n             argmax (sum (randomBids N \\<Omega> b r)) (maximalStrictAllocations N (set \\<Omega>) b)\""], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>maximalStrictAllocations N (set \\<Omega>) b.\n     sum (summedBidVector\n           (pseudoAllocation\n             (randomEl\n               (takeAll\n                 (\\<lambda>x.\n                     winningAllocationRel (N \\<union> {seller})\n                      (set \\<Omega>) ((\\<in>) x) b)\n                 (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n               r) <|\n            ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n           (N \\<union> {seller}) (set \\<Omega>))\n      a =\n     sum (randomBidsAlg N \\<Omega> b r) a\n\ngoal (1 subgoal):\n 1. argmax (sum (randomBidsAlg N \\<Omega> b r))\n     (maximalStrictAllocations N (set \\<Omega>) b) =\n    argmax\n     (sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel (N \\<union> {seller})\n                       (set \\<Omega>) ((\\<in>) x) b)\n                  (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                r) <|\n             ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n            (N \\<union> {seller}) (set \\<Omega>)))\n     (maximalStrictAllocations N (set \\<Omega>) b)", "using argmaxEquivalence"], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>maximalStrictAllocations N (set \\<Omega>) b.\n     sum (summedBidVector\n           (pseudoAllocation\n             (randomEl\n               (takeAll\n                 (\\<lambda>x.\n                     winningAllocationRel (N \\<union> {seller})\n                      (set \\<Omega>) ((\\<in>) x) b)\n                 (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n               r) <|\n            ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n           (N \\<union> {seller}) (set \\<Omega>))\n      a =\n     sum (randomBidsAlg N \\<Omega> b r) a\n  \\<forall>x\\<in>?X. ?f x = ?g x \\<Longrightarrow>\n  argmax ?f ?X = argmax ?g ?X\n\ngoal (1 subgoal):\n 1. argmax (sum (randomBidsAlg N \\<Omega> b r))\n     (maximalStrictAllocations N (set \\<Omega>) b) =\n    argmax\n     (sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel (N \\<union> {seller})\n                       (set \\<Omega>) ((\\<in>) x) b)\n                  (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                r) <|\n             ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n            (N \\<union> {seller}) (set \\<Omega>)))\n     (maximalStrictAllocations N (set \\<Omega>) b)", "by blast"], ["proof (state)\nthis:\n  argmax (sum (randomBidsAlg N \\<Omega> b r))\n   (maximalStrictAllocations N (set \\<Omega>) b) =\n  argmax\n   (sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel (N \\<union> {seller})\n                     (set \\<Omega>) ((\\<in>) x) b)\n                (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n              r) <|\n           ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n          (N \\<union> {seller}) (set \\<Omega>)))\n   (maximalStrictAllocations N (set \\<Omega>) b)\n\ngoal (1 subgoal):\n 1. card\n     (argmax (sum (randomBidsAlg N \\<Omega> b r))\n       (maximalStrictAllocations N (set \\<Omega>) b)) =\n    1", "moreover"], ["proof (state)\nthis:\n  argmax (sum (randomBidsAlg N \\<Omega> b r))\n   (maximalStrictAllocations N (set \\<Omega>) b) =\n  argmax\n   (sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel (N \\<union> {seller})\n                     (set \\<Omega>) ((\\<in>) x) b)\n                (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n              r) <|\n           ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n          (N \\<union> {seller}) (set \\<Omega>)))\n   (maximalStrictAllocations N (set \\<Omega>) b)\n\ngoal (1 subgoal):\n 1. card\n     (argmax (sum (randomBidsAlg N \\<Omega> b r))\n       (maximalStrictAllocations N (set \\<Omega>) b)) =\n    1", "have \"card ... = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b)) =\n    1", "using assms"], ["proof (prove)\nusing this:\n  distinct \\<Omega>\n  set \\<Omega> \\<noteq> {}\n  finite N\n\ngoal (1 subgoal):\n 1. card\n     (argmax\n       (sum (summedBidVector\n              (pseudoAllocation\n                (randomEl\n                  (takeAll\n                    (\\<lambda>x.\n                        winningAllocationRel (N \\<union> {seller})\n                         (set \\<Omega>) ((\\<in>) x) b)\n                    (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                  r) <|\n               ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n              (N \\<union> {seller}) (set \\<Omega>)))\n       (maximalStrictAllocations N (set \\<Omega>) b)) =\n    1", "by (rule vcgaDefinitenessVariant)"], ["proof (state)\nthis:\n  card\n   (argmax\n     (sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel (N \\<union> {seller})\n                       (set \\<Omega>) ((\\<in>) x) b)\n                  (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                r) <|\n             ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n            (N \\<union> {seller}) (set \\<Omega>)))\n     (maximalStrictAllocations N (set \\<Omega>) b)) =\n  1\n\ngoal (1 subgoal):\n 1. card\n     (argmax (sum (randomBidsAlg N \\<Omega> b r))\n       (maximalStrictAllocations N (set \\<Omega>) b)) =\n    1", "ultimately"], ["proof (chain)\npicking this:\n  argmax (sum (randomBidsAlg N \\<Omega> b r))\n   (maximalStrictAllocations N (set \\<Omega>) b) =\n  argmax\n   (sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel (N \\<union> {seller})\n                     (set \\<Omega>) ((\\<in>) x) b)\n                (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n              r) <|\n           ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n          (N \\<union> {seller}) (set \\<Omega>)))\n   (maximalStrictAllocations N (set \\<Omega>) b)\n  card\n   (argmax\n     (sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel (N \\<union> {seller})\n                       (set \\<Omega>) ((\\<in>) x) b)\n                  (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                r) <|\n             ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n            (N \\<union> {seller}) (set \\<Omega>)))\n     (maximalStrictAllocations N (set \\<Omega>) b)) =\n  1", "show ?thesis"], ["proof (prove)\nusing this:\n  argmax (sum (randomBidsAlg N \\<Omega> b r))\n   (maximalStrictAllocations N (set \\<Omega>) b) =\n  argmax\n   (sum (summedBidVector\n          (pseudoAllocation\n            (randomEl\n              (takeAll\n                (\\<lambda>x.\n                    winningAllocationRel (N \\<union> {seller})\n                     (set \\<Omega>) ((\\<in>) x) b)\n                (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n              r) <|\n           ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n          (N \\<union> {seller}) (set \\<Omega>)))\n   (maximalStrictAllocations N (set \\<Omega>) b)\n  card\n   (argmax\n     (sum (summedBidVector\n            (pseudoAllocation\n              (randomEl\n                (takeAll\n                  (\\<lambda>x.\n                      winningAllocationRel (N \\<union> {seller})\n                       (set \\<Omega>) ((\\<in>) x) b)\n                  (allAllocationsAlg (N \\<union> {seller}) \\<Omega>))\n                r) <|\n             ((N \\<union> {seller}) \\<times> finestpart (set \\<Omega>)))\n            (N \\<union> {seller}) (set \\<Omega>)))\n     (maximalStrictAllocations N (set \\<Omega>) b)) =\n  1\n\ngoal (1 subgoal):\n 1. card\n     (argmax (sum (randomBidsAlg N \\<Omega> b r))\n       (maximalStrictAllocations N (set \\<Omega>) b)) =\n    1", "by simp"], ["proof (state)\nthis:\n  card\n   (argmax (sum (randomBidsAlg N \\<Omega> b r))\n     (maximalStrictAllocations N (set \\<Omega>) b)) =\n  1\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem maximalAllocationBridgingTheorem:\n  assumes \"finite N\" \"distinct \\<Omega>\" \n  shows \"maximalStrictAllocations N (set \\<Omega>) b = maximalStrictAllocationsAlg N \\<Omega> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. maximalStrictAllocations N (set \\<Omega>) b =\n    maximalStrictAllocationsAlg N \\<Omega> b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. maximalStrictAllocations N (set \\<Omega>) b =\n    maximalStrictAllocationsAlg N \\<Omega> b", "let ?N = \"{seller} \\<union> N\""], ["proof (state)\ngoal (1 subgoal):\n 1. maximalStrictAllocations N (set \\<Omega>) b =\n    maximalStrictAllocationsAlg N \\<Omega> b", "have \"card ?N>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < card ({seller} \\<union> N)", "using assms(1)"], ["proof (prove)\nusing this:\n  finite N\n\ngoal (1 subgoal):\n 1. 0 < card ({seller} \\<union> N)", "by (metis (full_types) card_gt_0_iff finite_insert insert_is_Un insert_not_empty)"], ["proof (state)\nthis:\n  0 < card ({seller} \\<union> N)\n\ngoal (1 subgoal):\n 1. maximalStrictAllocations N (set \\<Omega>) b =\n    maximalStrictAllocationsAlg N \\<Omega> b", "thus ?thesis"], ["proof (prove)\nusing this:\n  0 < card ({seller} \\<union> N)\n\ngoal (1 subgoal):\n 1. maximalStrictAllocations N (set \\<Omega>) b =\n    maximalStrictAllocationsAlg N \\<Omega> b", "using assms(2) allAllocationsBridgingLemma"], ["proof (prove)\nusing this:\n  0 < card ({seller} \\<union> N)\n  distinct \\<Omega>\n  \\<lbrakk>0 < card ?N; distinct ?G\\<rbrakk>\n  \\<Longrightarrow> allAllocations ?N (set ?G) =\n                    set (allAllocationsAlg ?N ?G)\n\ngoal (1 subgoal):\n 1. maximalStrictAllocations N (set \\<Omega>) b =\n    maximalStrictAllocationsAlg N \\<Omega> b", "by metis"], ["proof (state)\nthis:\n  maximalStrictAllocations N (set \\<Omega>) b =\n  maximalStrictAllocationsAlg N \\<Omega> b\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem vcgaAlgDefinedness:\n  assumes \"distinct \\<Omega>\" \"set \\<Omega> \\<noteq> {}\" \"finite N\" \n  shows \"card (argmax (sum (randomBidsAlg N \\<Omega> b r)) (maximalStrictAllocationsAlg N \\<Omega> b)) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     (argmax (sum (randomBidsAlg N \\<Omega> b r))\n       (maximalStrictAllocationsAlg N \\<Omega> b)) =\n    1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card\n     (argmax (sum (randomBidsAlg N \\<Omega> b r))\n       (maximalStrictAllocationsAlg N \\<Omega> b)) =\n    1", "have \"card (argmax (sum (randomBidsAlg N \\<Omega> b r)) (maximalStrictAllocations N (set \\<Omega>) b)) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     (argmax (sum (randomBidsAlg N \\<Omega> b r))\n       (maximalStrictAllocations N (set \\<Omega>) b)) =\n    1", "using assms"], ["proof (prove)\nusing this:\n  distinct \\<Omega>\n  set \\<Omega> \\<noteq> {}\n  finite N\n\ngoal (1 subgoal):\n 1. card\n     (argmax (sum (randomBidsAlg N \\<Omega> b r))\n       (maximalStrictAllocations N (set \\<Omega>) b)) =\n    1", "by (rule tiebreakingGivesSingleton)"], ["proof (state)\nthis:\n  card\n   (argmax (sum (randomBidsAlg N \\<Omega> b r))\n     (maximalStrictAllocations N (set \\<Omega>) b)) =\n  1\n\ngoal (1 subgoal):\n 1. card\n     (argmax (sum (randomBidsAlg N \\<Omega> b r))\n       (maximalStrictAllocationsAlg N \\<Omega> b)) =\n    1", "moreover"], ["proof (state)\nthis:\n  card\n   (argmax (sum (randomBidsAlg N \\<Omega> b r))\n     (maximalStrictAllocations N (set \\<Omega>) b)) =\n  1\n\ngoal (1 subgoal):\n 1. card\n     (argmax (sum (randomBidsAlg N \\<Omega> b r))\n       (maximalStrictAllocationsAlg N \\<Omega> b)) =\n    1", "have \"maximalStrictAllocations N (set \\<Omega>) b = maximalStrictAllocationsAlg N \\<Omega> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. maximalStrictAllocations N (set \\<Omega>) b =\n    maximalStrictAllocationsAlg N \\<Omega> b", "using assms(3,1)"], ["proof (prove)\nusing this:\n  finite N\n  distinct \\<Omega>\n\ngoal (1 subgoal):\n 1. maximalStrictAllocations N (set \\<Omega>) b =\n    maximalStrictAllocationsAlg N \\<Omega> b", "by (rule maximalAllocationBridgingTheorem)"], ["proof (state)\nthis:\n  maximalStrictAllocations N (set \\<Omega>) b =\n  maximalStrictAllocationsAlg N \\<Omega> b\n\ngoal (1 subgoal):\n 1. card\n     (argmax (sum (randomBidsAlg N \\<Omega> b r))\n       (maximalStrictAllocationsAlg N \\<Omega> b)) =\n    1", "ultimately"], ["proof (chain)\npicking this:\n  card\n   (argmax (sum (randomBidsAlg N \\<Omega> b r))\n     (maximalStrictAllocations N (set \\<Omega>) b)) =\n  1\n  maximalStrictAllocations N (set \\<Omega>) b =\n  maximalStrictAllocationsAlg N \\<Omega> b", "show ?thesis"], ["proof (prove)\nusing this:\n  card\n   (argmax (sum (randomBidsAlg N \\<Omega> b r))\n     (maximalStrictAllocations N (set \\<Omega>) b)) =\n  1\n  maximalStrictAllocations N (set \\<Omega>) b =\n  maximalStrictAllocationsAlg N \\<Omega> b\n\ngoal (1 subgoal):\n 1. card\n     (argmax (sum (randomBidsAlg N \\<Omega> b r))\n       (maximalStrictAllocationsAlg N \\<Omega> b)) =\n    1", "by metis"], ["proof (state)\nthis:\n  card\n   (argmax (sum (randomBidsAlg N \\<Omega> b r))\n     (maximalStrictAllocationsAlg N \\<Omega> b)) =\n  1\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}