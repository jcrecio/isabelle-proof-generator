{"file_name": "/home/qj213/afp-2021-10-22/thys/Vickrey_Clarke_Groves/SetUtils.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Vickrey_Clarke_Groves", "problem_names": ["lemma equalitySubsetI: \"(\\<And>x . x \\<in> A \\<Longrightarrow> x \\<in> B) \\<Longrightarrow> (\\<And>x . x \\<in> B \\<Longrightarrow> x \\<in> A) \\<Longrightarrow> A = B\"", "lemma trivial_empty: \"trivial {}\"", "lemma trivial_singleton: \"trivial {x}\"", "lemma singleton_sub_trivial_uniq:\n      fixes   x X\n      assumes \"{x} \\<subseteq> X\" and \"trivial X\"\n      shows   \"x = the_elem X\"", "lemma trivial_subset: fixes X Y assumes \"trivial Y\" assumes \"X \\<subseteq> Y\" \n                      shows \"trivial X\"", "lemma trivial_imp_no_distinct:\n  assumes triv: \"trivial X\" and x: \"x \\<in> X\" and y: \"y \\<in> X\"\n  shows   \"x = y\"", "lemma image_Collect_mem: \"{ f x | x . x \\<in> S } = f ` S\"", "lemma Union_member: \"(\\<exists> S \\<in> F . x \\<in> S) \\<longleftrightarrow> x \\<in> \\<Union> F\"", "lemma trivial_subset_non_empty: assumes \"trivial t\" \"t \\<inter> X \\<noteq> {}\" \n            shows   \"t \\<subseteq> X\"", "lemma trivial_implies_finite: assumes \"trivial X\" \n            shows   \"finite X\"", "lemma lm01: assumes \"trivial (A \\<times> B)\" \n              shows   \"(finite (A\\<times>B) & card A * (card B) \\<le> 1)\"", "lemma lm02: assumes \"finite X\" \n            shows   \"trivial X=(card X \\<le> 1)\"", "lemma lm03: shows \"trivial {x}\"", "lemma lm04: assumes \"trivial X\" \"{x} \\<subseteq> X\" \n            shows   \"{x} = X\"", "lemma lm05: assumes \"\\<not> trivial X\" \"trivial T\" \n            shows   \"X - T  \\<noteq>  {}\"", "lemma lm06: assumes \"(finite (A \\<times> B)  &  card A * (card B) \\<le> 1)\" \n              shows   \"trivial (A \\<times> B)\"", "lemma lm07: \"trivial (A \\<times> B) = (finite (A \\<times> B) & card A * (card B) \\<le> 1)\"", "lemma trivial_empty_or_singleton: \"trivial X = (X = {} \\<or> X = {the_elem X})\"", "lemma trivial_cartesian: assumes \"trivial X\" \"trivial Y\" \n            shows   \"trivial (X \\<times> Y)\"", "lemma trivial_same: \"trivial X = (\\<forall>x1 \\<in> X. \\<forall>x2 \\<in> X. x1 = x2)\"", "lemma lm08: assumes \"(Pow X \\<subseteq> {{},X})\" \n              shows  \"trivial X\"", "lemma lm09: assumes \"trivial X\" \n              shows \"(Pow X \\<subseteq> {{},X})\"", "lemma lm10: \"trivial X = (Pow X \\<subseteq> {{},X})\"", "lemma lm11: \"({x} \\<times> UNIV) \\<inter> P = {x} \\<times> (P `` {x})\"", "lemma lm12: \"(x,y) \\<in> P = (y \\<in> P``{x})\"", "lemma lm13: assumes \"inj_on f A\" \"inj_on f B\" \n             shows   \"inj_on f (A \\<union> B)  =  (f`(A-B) \\<inter> (f`(B-A)) = {})\"", "lemma injection_union: assumes \"inj_on f A\" \"inj_on f B\" \"(f`A) \\<inter> (f`B) = {}\" \n              shows \"inj_on f (A \\<union> B)\"", "lemma lm14: \"(Pow X = {X}) = (X={})\""], "translations": [["", "lemma equalitySubsetI: \"(\\<And>x . x \\<in> A \\<Longrightarrow> x \\<in> B) \\<Longrightarrow> (\\<And>x . x \\<in> B \\<Longrightarrow> x \\<in> A) \\<Longrightarrow> A = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x. x \\<in> A \\<Longrightarrow> x \\<in> B;\n     \\<And>x. x \\<in> B \\<Longrightarrow> x \\<in> A\\<rbrakk>\n    \\<Longrightarrow> A = B", "by blast"], ["", "subsection \\<open>Trivial sets\\<close>"], ["", "text \\<open>A trivial set (i.e. singleton or empty), as in Mizar\\<close>"], ["", "definition trivial where \"trivial x = (x \\<subseteq> {the_elem x})\""], ["", "text \\<open>The empty set is trivial.\\<close>"], ["", "lemma trivial_empty: \"trivial {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trivial {}", "unfolding trivial_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<subseteq> {the_elem {}}", "by (rule empty_subsetI)"], ["", "text \\<open>A singleton set is trivial.\\<close>"], ["", "lemma trivial_singleton: \"trivial {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trivial {x}", "unfolding trivial_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x} \\<subseteq> {the_elem {x}}", "by simp"], ["", "text \\<open>If a trivial set has a singleton subset, the latter is unique.\\<close>"], ["", "lemma singleton_sub_trivial_uniq:\n      fixes   x X\n      assumes \"{x} \\<subseteq> X\" and \"trivial X\"\n      shows   \"x = the_elem X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = the_elem X", "(* CL: The following takes 16 ms in Isabelle2013-1-RC1:\n   by (metis assms(1) assms(2) insert_not_empty insert_subset subset_empty subset_insert trivial_def trivial_imp_no_distinct) *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x = the_elem X", "using assms"], ["proof (prove)\nusing this:\n  {x} \\<subseteq> X\n  trivial X\n\ngoal (1 subgoal):\n 1. x = the_elem X", "unfolding trivial_def"], ["proof (prove)\nusing this:\n  {x} \\<subseteq> X\n  X \\<subseteq> {the_elem X}\n\ngoal (1 subgoal):\n 1. x = the_elem X", "by fast"], ["", "text \\<open>Any subset of a trivial set is trivial.\\<close>"], ["", "lemma trivial_subset: fixes X Y assumes \"trivial Y\" assumes \"X \\<subseteq> Y\" \n                      shows \"trivial X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trivial X", "(* CL: The following takes 36 ms in Isabelle2013-1-RC1:\n   by (metis assms(1) assms(2) equals0D no_distinct_imp_trivial subsetI subset_antisym subset_singletonD trivial_cases) *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. trivial X", "using assms"], ["proof (prove)\nusing this:\n  trivial Y\n  X \\<subseteq> Y\n\ngoal (1 subgoal):\n 1. trivial X", "unfolding trivial_def"], ["proof (prove)\nusing this:\n  Y \\<subseteq> {the_elem Y}\n  X \\<subseteq> Y\n\ngoal (1 subgoal):\n 1. X \\<subseteq> {the_elem X}", "by (metis (full_types) subset_empty subset_insertI2 subset_singletonD)"], ["", "text \\<open>There are no two different elements in a trivial set.\\<close>"], ["", "lemma trivial_imp_no_distinct:\n  assumes triv: \"trivial X\" and x: \"x \\<in> X\" and y: \"y \\<in> X\"\n  shows   \"x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = y", "(* CL: The following takes 17 ms in Isabelle2013-1-RC1: *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x = y", "using assms"], ["proof (prove)\nusing this:\n  trivial X\n  x \\<in> X\n  y \\<in> X\n\ngoal (1 subgoal):\n 1. x = y", "by (metis empty_subsetI insert_subset singleton_sub_trivial_uniq)"], ["", "subsection \\<open>The image of a set under a function\\<close>"], ["", "text \\<open>an equivalent notation for the image of a set, using set comprehension\\<close>"], ["", "lemma image_Collect_mem: \"{ f x | x . x \\<in> S } = f ` S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {f x |x. x \\<in> S} = f ` S", "by auto"], ["", "subsection \\<open>Big Union\\<close>"], ["", "text \\<open>An element is in the union of a family of sets if it is in one of the family's member sets.\\<close>"], ["", "lemma Union_member: \"(\\<exists> S \\<in> F . x \\<in> S) \\<longleftrightarrow> x \\<in> \\<Union> F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>S\\<in>F. x \\<in> S) = (x \\<in> \\<Union> F)", "by blast"], ["", "subsection \\<open>Miscellaneous\\<close>"], ["", "lemma trivial_subset_non_empty: assumes \"trivial t\" \"t \\<inter> X \\<noteq> {}\" \n            shows   \"t \\<subseteq> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<subseteq> X", "using trivial_def assms in_mono"], ["proof (prove)\nusing this:\n  trivial ?x = (?x \\<subseteq> {the_elem ?x})\n  trivial t\n  t \\<inter> X \\<noteq> {}\n  ?A \\<subseteq> ?B \\<Longrightarrow>\n  ?x \\<in> ?A \\<longrightarrow> ?x \\<in> ?B\n\ngoal (1 subgoal):\n 1. t \\<subseteq> X", "by fast"], ["", "lemma trivial_implies_finite: assumes \"trivial X\" \n            shows   \"finite X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite X", "using assms"], ["proof (prove)\nusing this:\n  trivial X\n\ngoal (1 subgoal):\n 1. finite X", "by (metis finite.simps subset_singletonD trivial_def)"], ["", "(* finite.simps trivial_cases by metis *)"], ["", "lemma lm01: assumes \"trivial (A \\<times> B)\" \n              shows   \"(finite (A\\<times>B) & card A * (card B) \\<le> 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (A \\<times> B) \\<and> card A * card B \\<le> 1", "using trivial_def assms One_nat_def card_cartesian_product card.empty card_insert_disjoint\n            empty_iff finite.emptyI le0 trivial_implies_finite order_refl subset_singletonD"], ["proof (prove)\nusing this:\n  trivial ?x = (?x \\<subseteq> {the_elem ?x})\n  trivial (A \\<times> B)\n  1 = Suc 0\n  card (?A \\<times> ?B) = card ?A * card ?B\n  card {} = 0\n  \\<lbrakk>finite ?A; ?x \\<notin> ?A\\<rbrakk>\n  \\<Longrightarrow> card (insert ?x ?A) = Suc (card ?A)\n  (?c \\<in> {}) = False\n  finite {}\n  0 \\<le> ?n\n  trivial ?X \\<Longrightarrow> finite ?X\n  ?x \\<le> ?x\n  ?A \\<subseteq> {?x} \\<Longrightarrow> ?A = {} \\<or> ?A = {?x}\n\ngoal (1 subgoal):\n 1. finite (A \\<times> B) \\<and> card A * card B \\<le> 1", "by (metis(no_types))"], ["", "lemma lm02: assumes \"finite X\" \n            shows   \"trivial X=(card X \\<le> 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trivial X = (card X \\<le> 1)", "using assms One_nat_def card.empty card_insert_if card_mono card_seteq empty_iff \n            empty_subsetI finite.cases finite.emptyI finite_insert insert_mono \n            trivial_def trivial_singleton"], ["proof (prove)\nusing this:\n  finite X\n  1 = Suc 0\n  card {} = 0\n  finite ?A \\<Longrightarrow>\n  card (insert ?x ?A) = (if ?x \\<in> ?A then card ?A else Suc (card ?A))\n  \\<lbrakk>finite ?B; ?A \\<subseteq> ?B\\<rbrakk>\n  \\<Longrightarrow> card ?A \\<le> card ?B\n  \\<lbrakk>finite ?B; ?A \\<subseteq> ?B; card ?B \\<le> card ?A\\<rbrakk>\n  \\<Longrightarrow> ?A = ?B\n  (?c \\<in> {}) = False\n  {} \\<subseteq> ?A\n  \\<lbrakk>finite ?a; ?a = {} \\<Longrightarrow> ?P;\n   \\<And>A a.\n      \\<lbrakk>?a = insert a A; finite A\\<rbrakk>\n      \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n  finite {}\n  finite (insert ?a ?A) = finite ?A\n  ?C \\<subseteq> ?D \\<Longrightarrow> insert ?a ?C \\<subseteq> insert ?a ?D\n  trivial ?x = (?x \\<subseteq> {the_elem ?x})\n  trivial {?x}\n\ngoal (1 subgoal):\n 1. trivial X = (card X \\<le> 1)", "by (metis(no_types))"], ["", "lemma lm03: shows \"trivial {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trivial {x}", "by (metis order_refl the_elem_eq trivial_def)"], ["", "lemma lm04: assumes \"trivial X\" \"{x} \\<subseteq> X\" \n            shows   \"{x} = X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x} = X", "using singleton_sub_trivial_uniq assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>{?x} \\<subseteq> ?X; trivial ?X\\<rbrakk>\n  \\<Longrightarrow> ?x = the_elem ?X\n  trivial X\n  {x} \\<subseteq> X\n\ngoal (1 subgoal):\n 1. {x} = X", "by (metis subset_antisym trivial_def)"], ["", "lemma lm05: assumes \"\\<not> trivial X\" \"trivial T\" \n            shows   \"X - T  \\<noteq>  {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X - T \\<noteq> {}", "using assms"], ["proof (prove)\nusing this:\n  \\<not> trivial X\n  trivial T\n\ngoal (1 subgoal):\n 1. X - T \\<noteq> {}", "by (metis Diff_iff empty_iff subsetI trivial_subset)"], ["", "lemma lm06: assumes \"(finite (A \\<times> B)  &  card A * (card B) \\<le> 1)\" \n              shows   \"trivial (A \\<times> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trivial (A \\<times> B)", "unfolding trivial_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<times> B \\<subseteq> {the_elem (A \\<times> B)}", "using trivial_def assms"], ["proof (prove)\nusing this:\n  trivial ?x = (?x \\<subseteq> {the_elem ?x})\n  finite (A \\<times> B) \\<and> card A * card B \\<le> 1\n\ngoal (1 subgoal):\n 1. A \\<times> B \\<subseteq> {the_elem (A \\<times> B)}", "by (metis card_cartesian_product lm02)"], ["", "lemma lm07: \"trivial (A \\<times> B) = (finite (A \\<times> B) & card A * (card B) \\<le> 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trivial (A \\<times> B) =\n    (finite (A \\<times> B) \\<and> card A * card B \\<le> 1)", "using lm01 lm06"], ["proof (prove)\nusing this:\n  trivial (?A \\<times> ?B) \\<Longrightarrow>\n  finite (?A \\<times> ?B) \\<and> card ?A * card ?B \\<le> 1\n  finite (?A \\<times> ?B) \\<and> card ?A * card ?B \\<le> 1 \\<Longrightarrow>\n  trivial (?A \\<times> ?B)\n\ngoal (1 subgoal):\n 1. trivial (A \\<times> B) =\n    (finite (A \\<times> B) \\<and> card A * card B \\<le> 1)", "by blast"], ["", "lemma trivial_empty_or_singleton: \"trivial X = (X = {} \\<or> X = {the_elem X})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trivial X = (X = {} \\<or> X = {the_elem X})", "by (metis subset_singletonD trivial_def trivial_empty trivial_singleton)"], ["", "lemma trivial_cartesian: assumes \"trivial X\" \"trivial Y\" \n            shows   \"trivial (X \\<times> Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trivial (X \\<times> Y)", "using assms lm07 One_nat_def Sigma_empty1 Sigma_empty2 card.empty card_insert_if\n            finite_SigmaI trivial_implies_finite nat_1_eq_mult_iff order_refl subset_singletonD trivial_def trivial_empty"], ["proof (prove)\nusing this:\n  trivial X\n  trivial Y\n  trivial (?A \\<times> ?B) =\n  (finite (?A \\<times> ?B) \\<and> card ?A * card ?B \\<le> 1)\n  1 = Suc 0\n  Sigma {} ?B = {}\n  ?A \\<times> {} = {}\n  card {} = 0\n  finite ?A \\<Longrightarrow>\n  card (insert ?x ?A) = (if ?x \\<in> ?A then card ?A else Suc (card ?A))\n  \\<lbrakk>finite ?A;\n   \\<And>a. a \\<in> ?A \\<Longrightarrow> finite (?B a)\\<rbrakk>\n  \\<Longrightarrow> finite (Sigma ?A ?B)\n  trivial ?X \\<Longrightarrow> finite ?X\n  (1 = ?m * ?n) = (?m = 1 \\<and> ?n = 1)\n  ?x \\<le> ?x\n  ?A \\<subseteq> {?x} \\<Longrightarrow> ?A = {} \\<or> ?A = {?x}\n  trivial ?x = (?x \\<subseteq> {the_elem ?x})\n  trivial {}\n\ngoal (1 subgoal):\n 1. trivial (X \\<times> Y)", "by (metis (full_types))"], ["", "lemma trivial_same: \"trivial X = (\\<forall>x1 \\<in> X. \\<forall>x2 \\<in> X. x1 = x2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trivial X = (\\<forall>x1\\<in>X. \\<forall>x2\\<in>X. x1 = x2)", "using trivial_def trivial_imp_no_distinct ex_in_conv insertCI subsetI subset_singletonD\n            trivial_singleton"], ["proof (prove)\nusing this:\n  trivial ?x = (?x \\<subseteq> {the_elem ?x})\n  \\<lbrakk>trivial ?X; ?x \\<in> ?X; ?y \\<in> ?X\\<rbrakk>\n  \\<Longrightarrow> ?x = ?y\n  (\\<exists>x. x \\<in> ?A) = (?A \\<noteq> {})\n  (?a \\<notin> ?B \\<Longrightarrow> ?a = ?b) \\<Longrightarrow>\n  ?a \\<in> insert ?b ?B\n  (\\<And>x. x \\<in> ?A \\<Longrightarrow> x \\<in> ?B) \\<Longrightarrow>\n  ?A \\<subseteq> ?B\n  ?A \\<subseteq> {?x} \\<Longrightarrow> ?A = {} \\<or> ?A = {?x}\n  trivial {?x}\n\ngoal (1 subgoal):\n 1. trivial X = (\\<forall>x1\\<in>X. \\<forall>x2\\<in>X. x1 = x2)", "by (metis (no_types, hide_lams))"], ["", "lemma lm08: assumes \"(Pow X \\<subseteq> {{},X})\" \n              shows  \"trivial X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trivial X", "unfolding trivial_same"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x1\\<in>X. Ball X ((=) x1)", "using assms"], ["proof (prove)\nusing this:\n  Pow X \\<subseteq> {{}, X}\n\ngoal (1 subgoal):\n 1. \\<forall>x1\\<in>X. Ball X ((=) x1)", "by auto"], ["", "lemma lm09: assumes \"trivial X\" \n              shows \"(Pow X \\<subseteq> {{},X})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Pow X \\<subseteq> {{}, X}", "using assms trivial_same"], ["proof (prove)\nusing this:\n  trivial X\n  trivial ?X = (\\<forall>x1\\<in>?X. \\<forall>x2\\<in>?X. x1 = x2)\n\ngoal (1 subgoal):\n 1. Pow X \\<subseteq> {{}, X}", "by fast"], ["", "lemma lm10: \"trivial X = (Pow X \\<subseteq> {{},X})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trivial X = (Pow X \\<subseteq> {{}, X})", "using lm08 lm09"], ["proof (prove)\nusing this:\n  Pow ?X \\<subseteq> {{}, ?X} \\<Longrightarrow> trivial ?X\n  trivial ?X \\<Longrightarrow> Pow ?X \\<subseteq> {{}, ?X}\n\ngoal (1 subgoal):\n 1. trivial X = (Pow X \\<subseteq> {{}, X})", "by metis"], ["", "lemma lm11: \"({x} \\<times> UNIV) \\<inter> P = {x} \\<times> (P `` {x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x} \\<times> UNIV \\<inter> P = {x} \\<times> P `` {x}", "by fast"], ["", "lemma lm12: \"(x,y) \\<in> P = (y \\<in> P``{x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x, y) \\<in> P) = (y \\<in> P `` {x})", "by simp"], ["", "lemma lm13: assumes \"inj_on f A\" \"inj_on f B\" \n             shows   \"inj_on f (A \\<union> B)  =  (f`(A-B) \\<inter> (f`(B-A)) = {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on f (A \\<union> B) = (f ` (A - B) \\<inter> f ` (B - A) = {})", "using assms inj_on_Un"], ["proof (prove)\nusing this:\n  inj_on f A\n  inj_on f B\n  inj_on ?f (?A \\<union> ?B) =\n  (inj_on ?f ?A \\<and>\n   inj_on ?f ?B \\<and> ?f ` (?A - ?B) \\<inter> ?f ` (?B - ?A) = {})\n\ngoal (1 subgoal):\n 1. inj_on f (A \\<union> B) = (f ` (A - B) \\<inter> f ` (B - A) = {})", "by (metis)"], ["", "lemma injection_union: assumes \"inj_on f A\" \"inj_on f B\" \"(f`A) \\<inter> (f`B) = {}\" \n              shows \"inj_on f (A \\<union> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on f (A \\<union> B)", "using assms lm13"], ["proof (prove)\nusing this:\n  inj_on f A\n  inj_on f B\n  f ` A \\<inter> f ` B = {}\n  \\<lbrakk>inj_on ?f ?A; inj_on ?f ?B\\<rbrakk>\n  \\<Longrightarrow> inj_on ?f (?A \\<union> ?B) =\n                    (?f ` (?A - ?B) \\<inter> ?f ` (?B - ?A) = {})\n\ngoal (1 subgoal):\n 1. inj_on f (A \\<union> B)", "by fast"], ["", "lemma lm14: \"(Pow X = {X}) = (X={})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Pow X = {X}) = (X = {})", "by auto"], ["", "end"]]}