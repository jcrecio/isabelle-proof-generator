{"file_name": "/home/qj213/afp-2021-10-22/thys/Launchbury/C.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Launchbury", "problem_names": ["lemma below_C: \"x \\<sqsubseteq> C\\<cdot>x\"", "lemma C_Cinf[simp]: \"C\\<cdot>C\\<^sup>\\<infinity> = C\\<^sup>\\<infinity>\"", "lemma C_below_C[simp]: \"(C\\<^bsup>i\\<^esup> \\<sqsubseteq> C\\<^bsup>j\\<^esup>) \\<longleftrightarrow> i \\<le> j\"", "lemma below_Cinf[simp]: \"r \\<sqsubseteq> C\\<^sup>\\<infinity>\"", "lemma C_eq_Cinf[simp]: \"C\\<^bsup>i\\<^esup> \\<noteq> C\\<^sup>\\<infinity>\"", "lemma Cinf_eq_C[simp]: \"C\\<^sup>\\<infinity> = C \\<cdot> r \\<longleftrightarrow> C\\<^sup>\\<infinity> = r\"", "lemma C_eq_C[simp]: \"(C\\<^bsup>i\\<^esup> = C\\<^bsup>j\\<^esup>) \\<longleftrightarrow> i = j\"", "lemma case_of_C_below: \"(case r of C\\<cdot>y \\<Rightarrow> x) \\<sqsubseteq> x\"", "lemma C_case_below: \"C_case \\<cdot> f \\<sqsubseteq> f\"", "lemma C_case_bot[simp]: \"C_case \\<cdot> \\<bottom> = \\<bottom>\"", "lemma C_case_cong:\n  assumes \"\\<And> r'. r = C\\<cdot>r' \\<Longrightarrow> f\\<cdot>r' = g\\<cdot>r'\"\n  shows \"C_case\\<cdot>f\\<cdot>r = C_case\\<cdot>g\\<cdot>r\"", "lemma C_cases:\n  obtains n where \"r = C\\<^bsup>n\\<^esup>\" | \"r = C\\<^sup>\\<infinity>\"", "lemma C_case_Cinf[simp]: \"C_case \\<cdot> f \\<cdot> C\\<^sup>\\<infinity> = f \\<cdot> C\\<^sup>\\<infinity>\""], "translations": [["", "lemma below_C: \"x \\<sqsubseteq> C\\<cdot>x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sqsubseteq> C\\<cdot>x", "by (induct x) auto"], ["", "definition Cinf (\"C\\<^sup>\\<infinity>\") where \"C\\<^sup>\\<infinity> = fix\\<cdot>C\""], ["", "lemma C_Cinf[simp]: \"C\\<cdot>C\\<^sup>\\<infinity> = C\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C\\<cdot>C\\<^sup>\\<infinity> = C\\<^sup>\\<infinity>", "unfolding Cinf_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. C\\<cdot>(fix\\<cdot>C) = fix\\<cdot>C", "by (rule fix_eq[symmetric])"], ["", "abbreviation Cpow (\"C\\<^bsup>_\\<^esup>\") where \"C\\<^bsup>n\\<^esup> \\<equiv> iterate n\\<cdot>C\\<cdot>\\<bottom>\""], ["", "lemma C_below_C[simp]: \"(C\\<^bsup>i\\<^esup> \\<sqsubseteq> C\\<^bsup>j\\<^esup>) \\<longleftrightarrow> i \\<le> j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (C\\<^bsup>i\\<^esup> \\<sqsubseteq> C\\<^bsup>j\\<^esup>) = (i \\<le> j)", "apply (induction i arbitrary: j)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>j.\n       (C\\<^bsup>0\\<^esup> \\<sqsubseteq> C\\<^bsup>j\\<^esup>) = (0 \\<le> j)\n 2. \\<And>i j.\n       (\\<And>j.\n           (C\\<^bsup>i\\<^esup> \\<sqsubseteq> C\\<^bsup>j\\<^esup>) =\n           (i \\<le> j)) \\<Longrightarrow>\n       (C\\<^bsup>Suc i\\<^esup> \\<sqsubseteq> C\\<^bsup>j\\<^esup>) =\n       (Suc i \\<le> j)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       (\\<And>j.\n           (C\\<^bsup>i\\<^esup> \\<sqsubseteq> C\\<^bsup>j\\<^esup>) =\n           (i \\<le> j)) \\<Longrightarrow>\n       (C\\<^bsup>Suc i\\<^esup> \\<sqsubseteq> C\\<^bsup>j\\<^esup>) =\n       (Suc i \\<le> j)", "apply (case_tac j, auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma below_Cinf[simp]: \"r \\<sqsubseteq> C\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<sqsubseteq> C\\<^sup>\\<infinity>", "apply (induct r)"], ["proof (prove)\ngoal (3 subgoals):\n 1. adm (\\<lambda>a. a \\<sqsubseteq> C\\<^sup>\\<infinity>)\n 2. \\<bottom> \\<sqsubseteq> C\\<^sup>\\<infinity>\n 3. \\<And>r.\n       r \\<sqsubseteq> C\\<^sup>\\<infinity> \\<Longrightarrow>\n       C\\<cdot>r \\<sqsubseteq> C\\<^sup>\\<infinity>", "apply simp_all[2]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<sqsubseteq> C\\<^sup>\\<infinity> \\<Longrightarrow>\n       C\\<cdot>r \\<sqsubseteq> C\\<^sup>\\<infinity>", "apply (metis (full_types) C_Cinf monofun_cfun_arg)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma C_eq_Cinf[simp]: \"C\\<^bsup>i\\<^esup> \\<noteq> C\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C\\<^bsup>i\\<^esup> \\<noteq> C\\<^sup>\\<infinity>", "by (metis C_below_C Suc_n_not_le_n below_Cinf)"], ["", "lemma Cinf_eq_C[simp]: \"C\\<^sup>\\<infinity> = C \\<cdot> r \\<longleftrightarrow> C\\<^sup>\\<infinity> = r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (C\\<^sup>\\<infinity> = C\\<cdot>r) = (C\\<^sup>\\<infinity> = r)", "by (metis C.injects C_Cinf)"], ["", "lemma C_eq_C[simp]: \"(C\\<^bsup>i\\<^esup> = C\\<^bsup>j\\<^esup>) \\<longleftrightarrow> i = j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (C\\<^bsup>i\\<^esup> = C\\<^bsup>j\\<^esup>) = (i = j)", "by (metis C_below_C le_antisym le_refl)"], ["", "lemma case_of_C_below: \"(case r of C\\<cdot>y \\<Rightarrow> x) \\<sqsubseteq> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (case r of C\\<cdot>y \\<Rightarrow> x) \\<sqsubseteq> x", "by (cases r) auto"], ["", "lemma C_case_below: \"C_case \\<cdot> f \\<sqsubseteq> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C_case\\<cdot>f \\<sqsubseteq> f", "by (metis cfun_belowI C.case_rews(2) below_C monofun_cfun_arg)"], ["", "lemma C_case_bot[simp]: \"C_case \\<cdot> \\<bottom> = \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C_case\\<cdot>\\<bottom> = \\<bottom>", "apply (subst eq_bottom_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. C_case\\<cdot>\\<bottom> \\<sqsubseteq> \\<bottom>", "apply (rule C_case_below)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma C_case_cong:\n  assumes \"\\<And> r'. r = C\\<cdot>r' \\<Longrightarrow> f\\<cdot>r' = g\\<cdot>r'\"\n  shows \"C_case\\<cdot>f\\<cdot>r = C_case\\<cdot>g\\<cdot>r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C_case\\<cdot>f\\<cdot>r = C_case\\<cdot>g\\<cdot>r", "using assms"], ["proof (prove)\nusing this:\n  r = C\\<cdot>?r' \\<Longrightarrow> f\\<cdot>?r' = g\\<cdot>?r'\n\ngoal (1 subgoal):\n 1. C_case\\<cdot>f\\<cdot>r = C_case\\<cdot>g\\<cdot>r", "by (cases r) auto"], ["", "lemma C_cases:\n  obtains n where \"r = C\\<^bsup>n\\<^esup>\" | \"r = C\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n. r = C\\<^bsup>n\\<^esup> \\<Longrightarrow> thesis;\n     r = C\\<^sup>\\<infinity> \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n. r = C\\<^bsup>n\\<^esup> \\<Longrightarrow> thesis;\n     r = C\\<^sup>\\<infinity> \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n. r = C\\<^bsup>n\\<^esup> \\<Longrightarrow> thesis;\n     r = C\\<^sup>\\<infinity> \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n. r = C\\<^bsup>n\\<^esup> \\<Longrightarrow> thesis;\n     r = C\\<^sup>\\<infinity> \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "have \"\\<exists> n. C_take m \\<cdot> r = C\\<^bsup>n\\<^esup> \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n. C_take m\\<cdot>r = C\\<^bsup>n\\<^esup>", "proof (rule C.finite_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>n. \\<bottom> = C\\<^bsup>n\\<^esup>\n 2. \\<And>Ca.\n       \\<exists>n. Ca = C\\<^bsup>n\\<^esup> \\<Longrightarrow>\n       \\<exists>n. C\\<cdot>Ca = C\\<^bsup>n\\<^esup>", "have \"\\<bottom> = C\\<^bsup>0\\<^esup>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bottom> = C\\<^bsup>0\\<^esup>", "by simp"], ["proof (state)\nthis:\n  \\<bottom> = C\\<^bsup>0\\<^esup>\n\ngoal (2 subgoals):\n 1. \\<exists>n. \\<bottom> = C\\<^bsup>n\\<^esup>\n 2. \\<And>Ca.\n       \\<exists>n. Ca = C\\<^bsup>n\\<^esup> \\<Longrightarrow>\n       \\<exists>n. C\\<cdot>Ca = C\\<^bsup>n\\<^esup>", "thus \"\\<exists>n. \\<bottom> = C\\<^bsup>n\\<^esup>\""], ["proof (prove)\nusing this:\n  \\<bottom> = C\\<^bsup>0\\<^esup>\n\ngoal (1 subgoal):\n 1. \\<exists>n. \\<bottom> = C\\<^bsup>n\\<^esup>", ".."], ["proof (state)\nthis:\n  \\<exists>n. \\<bottom> = C\\<^bsup>n\\<^esup>\n\ngoal (1 subgoal):\n 1. \\<And>Ca.\n       \\<exists>n. Ca = C\\<^bsup>n\\<^esup> \\<Longrightarrow>\n       \\<exists>n. C\\<cdot>Ca = C\\<^bsup>n\\<^esup>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Ca.\n       \\<exists>n. Ca = C\\<^bsup>n\\<^esup> \\<Longrightarrow>\n       \\<exists>n. C\\<cdot>Ca = C\\<^bsup>n\\<^esup>", "fix r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Ca.\n       \\<exists>n. Ca = C\\<^bsup>n\\<^esup> \\<Longrightarrow>\n       \\<exists>n. C\\<cdot>Ca = C\\<^bsup>n\\<^esup>", "show \"\\<exists>n. r = C\\<^bsup>n\\<^esup> \\<Longrightarrow> \\<exists>n. C\\<cdot>r = C\\<^bsup>n\\<^esup>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n. r = C\\<^bsup>n\\<^esup> \\<Longrightarrow>\n    \\<exists>n. C\\<cdot>r = C\\<^bsup>n\\<^esup>", "by (auto simp del: iterate_Suc simp add: iterate_Suc[symmetric])"], ["proof (state)\nthis:\n  \\<exists>n. r = C\\<^bsup>n\\<^esup> \\<Longrightarrow>\n  \\<exists>n. C\\<cdot>r = C\\<^bsup>n\\<^esup>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>n. C_take m\\<cdot>r = C\\<^bsup>n\\<^esup>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n. r = C\\<^bsup>n\\<^esup> \\<Longrightarrow> thesis;\n     r = C\\<^sup>\\<infinity> \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "}"], ["proof (state)\nthis:\n  \\<exists>n. C_take ?m2\\<cdot>r = C\\<^bsup>n\\<^esup>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n. r = C\\<^bsup>n\\<^esup> \\<Longrightarrow> thesis;\n     r = C\\<^sup>\\<infinity> \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  \\<exists>n. C_take ?m2\\<cdot>r = C\\<^bsup>n\\<^esup>", "obtain f where take: \"\\<And> m. C_take m \\<cdot> r = C\\<^bsup>f m\\<^esup>\""], ["proof (prove)\nusing this:\n  \\<exists>n. C_take ?m2\\<cdot>r = C\\<^bsup>n\\<^esup>\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        (\\<And>m. C_take m\\<cdot>r = C\\<^bsup>f m\\<^esup>) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  C_take ?m\\<cdot>r = C\\<^bsup>f ?m\\<^esup>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n. r = C\\<^bsup>n\\<^esup> \\<Longrightarrow> thesis;\n     r = C\\<^sup>\\<infinity> \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "have \"chain (\\<lambda> m. C\\<^bsup>f m\\<^esup>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chain (\\<lambda>m. C\\<^bsup>f m\\<^esup>)", "using ch2ch_Rep_cfunL[OF C.chain_take, where x=r, unfolded take]"], ["proof (prove)\nusing this:\n  chain (\\<lambda>i. C\\<^bsup>f i\\<^esup>)\n\ngoal (1 subgoal):\n 1. chain (\\<lambda>m. C\\<^bsup>f m\\<^esup>)", "."], ["proof (state)\nthis:\n  chain (\\<lambda>m. C\\<^bsup>f m\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n. r = C\\<^bsup>n\\<^esup> \\<Longrightarrow> thesis;\n     r = C\\<^sup>\\<infinity> \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "hence \"mono f\""], ["proof (prove)\nusing this:\n  chain (\\<lambda>m. C\\<^bsup>f m\\<^esup>)\n\ngoal (1 subgoal):\n 1. mono f", "by (auto simp add: mono_iff_le_Suc chain_def elim!:chainE)"], ["proof (state)\nthis:\n  mono f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n. r = C\\<^bsup>n\\<^esup> \\<Longrightarrow> thesis;\n     r = C\\<^sup>\\<infinity> \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "have r: \"r = (\\<Squnion> m. C\\<^bsup>f m\\<^esup>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r = (\\<Squnion>m. C\\<^bsup>f m\\<^esup>)", "by (metis (lifting) take C.reach lub_eq)"], ["proof (state)\nthis:\n  r = (\\<Squnion>m. C\\<^bsup>f m\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n. r = C\\<^bsup>n\\<^esup> \\<Longrightarrow> thesis;\n     r = C\\<^sup>\\<infinity> \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "from \\<open>mono f\\<close>"], ["proof (chain)\npicking this:\n  mono f", "show thesis"], ["proof (prove)\nusing this:\n  mono f\n\ngoal (1 subgoal):\n 1. thesis", "proof(rule nat_mono_characterization)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>n.\n       (\\<And>m. n \\<le> m \\<Longrightarrow> f n = f m) \\<Longrightarrow>\n       thesis\n 2. (\\<And>m. \\<exists>n. m \\<le> f n) \\<Longrightarrow> thesis", "fix n"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>n.\n       (\\<And>m. n \\<le> m \\<Longrightarrow> f n = f m) \\<Longrightarrow>\n       thesis\n 2. (\\<And>m. \\<exists>n. m \\<le> f n) \\<Longrightarrow> thesis", "assume n: \"\\<And> m. n \\<le> m ==> f n = f m\""], ["proof (state)\nthis:\n  n \\<le> ?m \\<Longrightarrow> f n = f ?m\n\ngoal (2 subgoals):\n 1. \\<And>n.\n       (\\<And>m. n \\<le> m \\<Longrightarrow> f n = f m) \\<Longrightarrow>\n       thesis\n 2. (\\<And>m. \\<exists>n. m \\<le> f n) \\<Longrightarrow> thesis", "have \"max_in_chain n (\\<lambda> m. C\\<^bsup>f m\\<^esup>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max_in_chain n (\\<lambda>m. C\\<^bsup>f m\\<^esup>)", "apply (rule max_in_chainI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>j.\n       n \\<le> j \\<Longrightarrow>\n       C\\<^bsup>f n\\<^esup> = C\\<^bsup>f j\\<^esup>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>j. n \\<le> j \\<Longrightarrow> f n = f j", "apply (erule n)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  max_in_chain n (\\<lambda>m. C\\<^bsup>f m\\<^esup>)\n\ngoal (2 subgoals):\n 1. \\<And>n.\n       (\\<And>m. n \\<le> m \\<Longrightarrow> f n = f m) \\<Longrightarrow>\n       thesis\n 2. (\\<And>m. \\<exists>n. m \\<le> f n) \\<Longrightarrow> thesis", "hence \"(\\<Squnion> m. C\\<^bsup>f m\\<^esup>) = C\\<^bsup>f n\\<^esup>\""], ["proof (prove)\nusing this:\n  max_in_chain n (\\<lambda>m. C\\<^bsup>f m\\<^esup>)\n\ngoal (1 subgoal):\n 1. (\\<Squnion>m. C\\<^bsup>f m\\<^esup>) = C\\<^bsup>f n\\<^esup>", "unfolding  maxinch_is_thelub[OF \\<open>chain _\\<close>]"], ["proof (prove)\nusing this:\n  (\\<Squnion>i. C\\<^bsup>f i\\<^esup>) = C\\<^bsup>f n\\<^esup>\n\ngoal (1 subgoal):\n 1. (\\<Squnion>m. C\\<^bsup>f m\\<^esup>) = C\\<^bsup>f n\\<^esup>", "."], ["proof (state)\nthis:\n  (\\<Squnion>m. C\\<^bsup>f m\\<^esup>) = C\\<^bsup>f n\\<^esup>\n\ngoal (2 subgoals):\n 1. \\<And>n.\n       (\\<And>m. n \\<le> m \\<Longrightarrow> f n = f m) \\<Longrightarrow>\n       thesis\n 2. (\\<And>m. \\<exists>n. m \\<le> f n) \\<Longrightarrow> thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<Squnion>m. C\\<^bsup>f m\\<^esup>) = C\\<^bsup>f n\\<^esup>\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  (\\<Squnion>m. C\\<^bsup>f m\\<^esup>) = C\\<^bsup>f n\\<^esup>\n  r = C\\<^bsup>?n\\<^esup> \\<Longrightarrow> thesis\n  r = C\\<^sup>\\<infinity> \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "unfolding r"], ["proof (prove)\nusing this:\n  (\\<Squnion>m. C\\<^bsup>f m\\<^esup>) = C\\<^bsup>f n\\<^esup>\n  (\\<Squnion>m. C\\<^bsup>f m\\<^esup>) =\n  C\\<^bsup>?n\\<^esup> \\<Longrightarrow>\n  thesis\n  (\\<Squnion>m. C\\<^bsup>f m\\<^esup>) =\n  C\\<^sup>\\<infinity> \\<Longrightarrow>\n  thesis\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. (\\<And>m. \\<exists>n. m \\<le> f n) \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>m. \\<exists>n. m \\<le> f n) \\<Longrightarrow> thesis", "assume \"\\<And>m. \\<exists>n. m \\<le> f n\""], ["proof (state)\nthis:\n  \\<exists>n. ?m \\<le> f n\n\ngoal (1 subgoal):\n 1. (\\<And>m. \\<exists>n. m \\<le> f n) \\<Longrightarrow> thesis", "hence \"\\<And> n. C\\<^bsup>n\\<^esup> \\<sqsubseteq> r\""], ["proof (prove)\nusing this:\n  \\<exists>n. ?m \\<le> f n\n\ngoal (1 subgoal):\n 1. \\<And>n. C\\<^bsup>n\\<^esup> \\<sqsubseteq> r", "unfolding r"], ["proof (prove)\nusing this:\n  \\<exists>n. ?m \\<le> f n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       C\\<^bsup>n\\<^esup> \\<sqsubseteq> (\\<Squnion>m. C\\<^bsup>f m\\<^esup>)", "by (fastforce intro: below_lub[OF \\<open>chain _\\<close>])"], ["proof (state)\nthis:\n  C\\<^bsup>?n\\<^esup> \\<sqsubseteq> r\n\ngoal (1 subgoal):\n 1. (\\<And>m. \\<exists>n. m \\<le> f n) \\<Longrightarrow> thesis", "hence \"(\\<Squnion> n. C\\<^bsup>n\\<^esup>) \\<sqsubseteq> r\""], ["proof (prove)\nusing this:\n  C\\<^bsup>?n\\<^esup> \\<sqsubseteq> r\n\ngoal (1 subgoal):\n 1. (\\<Squnion>n. C\\<^bsup>n\\<^esup>) \\<sqsubseteq> r", "by (rule lub_below[OF chain_iterate])"], ["proof (state)\nthis:\n  (\\<Squnion>n. C\\<^bsup>n\\<^esup>) \\<sqsubseteq> r\n\ngoal (1 subgoal):\n 1. (\\<And>m. \\<exists>n. m \\<le> f n) \\<Longrightarrow> thesis", "hence \"C\\<^sup>\\<infinity> \\<sqsubseteq> r\""], ["proof (prove)\nusing this:\n  (\\<Squnion>n. C\\<^bsup>n\\<^esup>) \\<sqsubseteq> r\n\ngoal (1 subgoal):\n 1. C\\<^sup>\\<infinity> \\<sqsubseteq> r", "unfolding Cinf_def fix_def2"], ["proof (prove)\nusing this:\n  (\\<Squnion>n. C\\<^bsup>n\\<^esup>) \\<sqsubseteq> r\n\ngoal (1 subgoal):\n 1. (\\<Squnion>i. C\\<^bsup>i\\<^esup>) \\<sqsubseteq> r", "."], ["proof (state)\nthis:\n  C\\<^sup>\\<infinity> \\<sqsubseteq> r\n\ngoal (1 subgoal):\n 1. (\\<And>m. \\<exists>n. m \\<le> f n) \\<Longrightarrow> thesis", "hence \"C\\<^sup>\\<infinity> = r\""], ["proof (prove)\nusing this:\n  C\\<^sup>\\<infinity> \\<sqsubseteq> r\n\ngoal (1 subgoal):\n 1. C\\<^sup>\\<infinity> = r", "using below_Cinf"], ["proof (prove)\nusing this:\n  C\\<^sup>\\<infinity> \\<sqsubseteq> r\n  ?r \\<sqsubseteq> C\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. C\\<^sup>\\<infinity> = r", "by (metis below_antisym)"], ["proof (state)\nthis:\n  C\\<^sup>\\<infinity> = r\n\ngoal (1 subgoal):\n 1. (\\<And>m. \\<exists>n. m \\<le> f n) \\<Longrightarrow> thesis", "thus thesis"], ["proof (prove)\nusing this:\n  C\\<^sup>\\<infinity> = r\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  C\\<^sup>\\<infinity> = r\n  r = C\\<^bsup>?n\\<^esup> \\<Longrightarrow> thesis\n  r = C\\<^sup>\\<infinity> \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma C_case_Cinf[simp]: \"C_case \\<cdot> f \\<cdot> C\\<^sup>\\<infinity> = f \\<cdot> C\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C_case\\<cdot>f\\<cdot>C\\<^sup>\\<infinity> = f\\<cdot>C\\<^sup>\\<infinity>", "unfolding Cinf_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. C_case\\<cdot>f\\<cdot>(fix\\<cdot>C) = f\\<cdot>(fix\\<cdot>C)", "by (subst fix_eq) simp"], ["", "end"]]}