{"file_name": "/home/qj213/afp-2021-10-22/thys/Launchbury/C-restr.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Launchbury", "problem_names": ["lemma finite_resources_suffice:\n  assumes \"f\\<cdot>C\\<^sup>\\<infinity> \\<noteq> \\<bottom>\"\n  obtains n where \"f\\<cdot>C\\<^bsup>n\\<^esup> \\<noteq> \\<bottom>\"", "lemma more_resources_suffice:\n  assumes \"f\\<cdot>r \\<noteq> \\<bottom>\" and \"r \\<sqsubseteq> r'\"\n  shows \"f\\<cdot>r' \\<noteq> \\<bottom>\"", "lemma infinite_resources_suffice:\n  shows \"f\\<cdot>r \\<noteq> \\<bottom> \\<Longrightarrow> f\\<cdot>C\\<^sup>\\<infinity> \\<noteq> \\<bottom>\"", "lemma demand_suffices:\n  assumes \"f\\<cdot>C\\<^sup>\\<infinity> \\<noteq> \\<bottom>\"\n  shows \"f\\<cdot>(demand f) \\<noteq> \\<bottom>\"", "lemma not_bot_demand:\n  \"f\\<cdot>r \\<noteq> \\<bottom> \\<longleftrightarrow> demand f \\<noteq> C\\<^sup>\\<infinity> \\<and> demand f \\<sqsubseteq> r\"", "lemma infinity_bot_demand:\n  \"f\\<cdot>C\\<^sup>\\<infinity> = \\<bottom> \\<longleftrightarrow> demand f = C\\<^sup>\\<infinity>\"", "lemma demand_suffices':\n  assumes \"demand f = C\\<^bsup>n\\<^esup>\"\n  shows \"f\\<cdot>(demand f) \\<noteq> \\<bottom>\"", "lemma demand_Suc_Least:\n  assumes [simp]: \"f\\<cdot>\\<bottom> = \\<bottom>\"\n  assumes \"demand f \\<noteq> C\\<^sup>\\<infinity>\"\n  shows \"demand f = C\\<^bsup>(Suc (LEAST n. f\\<cdot>C\\<^bsup>Suc n\\<^esup> \\<noteq> \\<bottom>))\\<^esup>\"", "lemma demand_C_case[simp]: \"demand (C_case\\<cdot>f) = C \\<cdot> (demand f)\"", "lemma demand_contravariant:\n  assumes \"f \\<sqsubseteq> g\"\n  shows \"demand g \\<sqsubseteq> demand f\"", "lemma [simp]: \"\\<bottom>|\\<^bsub>r\\<^esub> = \\<bottom>\"", "lemma [simp]: \"f\\<cdot>\\<bottom> = \\<bottom> \\<Longrightarrow> f|\\<^bsub>\\<bottom>\\<^esub> = \\<bottom>\"", "lemma C_restr_C_restr[simp]: \"(v|\\<^bsub>r'\\<^esub>)|\\<^bsub>r\\<^esub> = v|\\<^bsub>(r' \\<sqinter> r)\\<^esub>\"", "lemma C_restr_eqD:\n  assumes \"f|\\<^bsub>r\\<^esub> = g|\\<^bsub>r\\<^esub>\"\n  assumes \"r' \\<sqsubseteq> r\"\n  shows \"f\\<cdot>r' = g\\<cdot>r'\"", "lemma C_restr_eq_lower:\n  assumes \"f|\\<^bsub>r\\<^esub> = g|\\<^bsub>r\\<^esub>\"\n  assumes \"r' \\<sqsubseteq> r\"\n  shows \"f|\\<^bsub>r'\\<^esub> = g|\\<^bsub>r'\\<^esub>\"", "lemma C_restr_below[intro, simp]:\n  \"x|\\<^bsub>r\\<^esub> \\<sqsubseteq> x\"", "lemma C_restr_below_cong:\n  \"(\\<And> r'. r' \\<sqsubseteq> r \\<Longrightarrow> f \\<cdot> r' \\<sqsubseteq> g \\<cdot> r') \\<Longrightarrow> f|\\<^bsub>r\\<^esub> \\<sqsubseteq> g|\\<^bsub>r\\<^esub>\"", "lemma C_restr_cong:\n  \"(\\<And> r'. r' \\<sqsubseteq> r \\<Longrightarrow> f \\<cdot> r' = g \\<cdot> r') \\<Longrightarrow> f|\\<^bsub>r\\<^esub> = g|\\<^bsub>r\\<^esub>\"", "lemma C_restr_C_cong:\n  \"(\\<And> r'. r' \\<sqsubseteq> r \\<Longrightarrow> f \\<cdot> (C\\<cdot>r') = g \\<cdot> (C\\<cdot>r')) \\<Longrightarrow> f\\<cdot>\\<bottom>=g\\<cdot>\\<bottom> \\<Longrightarrow> f|\\<^bsub>C\\<cdot>r\\<^esub> = g|\\<^bsub>C\\<cdot>r\\<^esub>\"", "lemma C_restr_C_case[simp]:\n  \"(C_case\\<cdot>f)|\\<^bsub>C\\<cdot>r\\<^esub> = C_case\\<cdot>(f|\\<^bsub>r\\<^esub>)\"", "lemma C_restr_bot_demand:\n  assumes \"C\\<cdot>r \\<sqsubseteq> demand f\"\n  shows \"f|\\<^bsub>r\\<^esub> = \\<bottom>\"", "lemma env_C_restr_upd[simp]: \"(\\<rho>(x := v))|\\<^sup>\\<circ>\\<^bsub>r\\<^esub> = (\\<rho>|\\<^sup>\\<circ>\\<^bsub>r\\<^esub>)(x := v|\\<^bsub>r\\<^esub>)\"", "lemma env_C_restr_lookup[simp]: \"(\\<rho>|\\<^sup>\\<circ>\\<^bsub>r\\<^esub>) v = \\<rho> v|\\<^bsub>r\\<^esub>\"", "lemma env_C_restr_bot[simp]: \" \\<bottom>|\\<^sup>\\<circ>\\<^bsub>r\\<^esub> = \\<bottom>\"", "lemma env_C_restr_restr_below[intro]: \"\\<rho>|\\<^sup>\\<circ>\\<^bsub>r\\<^esub> \\<sqsubseteq> \\<rho>\"", "lemma env_C_restr_env_C_restr[simp]: \"(v|\\<^sup>\\<circ>\\<^bsub>r'\\<^esub>)|\\<^sup>\\<circ>\\<^bsub>r\\<^esub> = v|\\<^sup>\\<circ>\\<^bsub>(r' \\<sqinter> r)\\<^esub>\"", "lemma env_C_restr_cong:\n  \"(\\<And> x r'. r' \\<sqsubseteq> r \\<Longrightarrow> f x \\<cdot> r' = g x \\<cdot> r') \\<Longrightarrow> f|\\<^sup>\\<circ>\\<^bsub>r\\<^esub> = g|\\<^sup>\\<circ>\\<^bsub>r\\<^esub>\""], "translations": [["", "lemma finite_resources_suffice:\n  assumes \"f\\<cdot>C\\<^sup>\\<infinity> \\<noteq> \\<bottom>\"\n  obtains n where \"f\\<cdot>C\\<^bsup>n\\<^esup> \\<noteq> \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n.\n        f\\<cdot>C\\<^bsup>n\\<^esup> \\<noteq> \\<bottom> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>n.\n        f\\<cdot>C\\<^bsup>n\\<^esup> \\<noteq> \\<bottom> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>n.\n        f\\<cdot>C\\<^bsup>n\\<^esup> \\<noteq> \\<bottom> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "assume \"\\<forall>n. f\\<cdot>(C\\<^bsup>n\\<^esup>) = \\<bottom>\""], ["proof (state)\nthis:\n  \\<forall>n. f\\<cdot>C\\<^bsup>n\\<^esup> = \\<bottom>\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        f\\<cdot>C\\<^bsup>n\\<^esup> \\<noteq> \\<bottom> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "hence \"f\\<cdot>C\\<^sup>\\<infinity> \\<sqsubseteq> \\<bottom>\""], ["proof (prove)\nusing this:\n  \\<forall>n. f\\<cdot>C\\<^bsup>n\\<^esup> = \\<bottom>\n\ngoal (1 subgoal):\n 1. f\\<cdot>C\\<^sup>\\<infinity> \\<sqsubseteq> \\<bottom>", "by (auto intro: lub_below[OF ch2ch_Rep_cfunR[OF chain_iterate]]\n             simp add: Cinf_def fix_def2 contlub_cfun_arg[OF chain_iterate])"], ["proof (state)\nthis:\n  f\\<cdot>C\\<^sup>\\<infinity> \\<sqsubseteq> \\<bottom>\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        f\\<cdot>C\\<^bsup>n\\<^esup> \\<noteq> \\<bottom> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "with assms"], ["proof (chain)\npicking this:\n  f\\<cdot>C\\<^sup>\\<infinity> \\<noteq> \\<bottom>\n  f\\<cdot>C\\<^sup>\\<infinity> \\<sqsubseteq> \\<bottom>", "have False"], ["proof (prove)\nusing this:\n  f\\<cdot>C\\<^sup>\\<infinity> \\<noteq> \\<bottom>\n  f\\<cdot>C\\<^sup>\\<infinity> \\<sqsubseteq> \\<bottom>\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        f\\<cdot>C\\<^bsup>n\\<^esup> \\<noteq> \\<bottom> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "}"], ["proof (state)\nthis:\n  \\<forall>n. f\\<cdot>C\\<^bsup>n\\<^esup> = \\<bottom> \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        f\\<cdot>C\\<^bsup>n\\<^esup> \\<noteq> \\<bottom> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>n. f\\<cdot>C\\<^bsup>n\\<^esup> = \\<bottom> \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  \\<forall>n. f\\<cdot>C\\<^bsup>n\\<^esup> = \\<bottom> \\<Longrightarrow> False\n  f\\<cdot>C\\<^bsup>?n\\<^esup> \\<noteq> \\<bottom> \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\nBecause of monotonicity, a non-bottom value can always be obtained with more resources.\n\\<close>"], ["", "lemma more_resources_suffice:\n  assumes \"f\\<cdot>r \\<noteq> \\<bottom>\" and \"r \\<sqsubseteq> r'\"\n  shows \"f\\<cdot>r' \\<noteq> \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f\\<cdot>r' \\<noteq> \\<bottom>", "using assms(1) monofun_cfun_arg[OF assms(2), where  f = f]"], ["proof (prove)\nusing this:\n  f\\<cdot>r \\<noteq> \\<bottom>\n  f\\<cdot>r \\<sqsubseteq> f\\<cdot>r'\n\ngoal (1 subgoal):\n 1. f\\<cdot>r' \\<noteq> \\<bottom>", "by auto"], ["", "lemma infinite_resources_suffice:\n  shows \"f\\<cdot>r \\<noteq> \\<bottom> \\<Longrightarrow> f\\<cdot>C\\<^sup>\\<infinity> \\<noteq> \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f\\<cdot>r \\<noteq> \\<bottom> \\<Longrightarrow>\n    f\\<cdot>C\\<^sup>\\<infinity> \\<noteq> \\<bottom>", "by (erule more_resources_suffice[OF _ below_Cinf])"], ["", "lemma demand_suffices:\n  assumes \"f\\<cdot>C\\<^sup>\\<infinity> \\<noteq> \\<bottom>\"\n  shows \"f\\<cdot>(demand f) \\<noteq> \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f\\<cdot>(demand f) \\<noteq> \\<bottom>", "apply (simp add: assms demand_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. f\\<cdot>\n    C\\<^bsup>LEAST n.\n                f\\<cdot>C\\<^bsup>n\\<^esup> \\<noteq>\n                \\<bottom>\\<^esup> \\<noteq>\n    \\<bottom>", "apply (rule finite_resources_suffice[OF assms])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       f\\<cdot>C\\<^bsup>n\\<^esup> \\<noteq> \\<bottom> \\<Longrightarrow>\n       f\\<cdot>\n       C\\<^bsup>LEAST n.\n                   f\\<cdot>C\\<^bsup>n\\<^esup> \\<noteq>\n                   \\<bottom>\\<^esup> \\<noteq>\n       \\<bottom>", "apply (rule LeastI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       f\\<cdot>C\\<^bsup>n\\<^esup> \\<noteq> \\<bottom> \\<Longrightarrow>\n       f\\<cdot>C\\<^bsup>?k4 n\\<^esup> \\<noteq> \\<bottom>", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma not_bot_demand:\n  \"f\\<cdot>r \\<noteq> \\<bottom> \\<longleftrightarrow> demand f \\<noteq> C\\<^sup>\\<infinity> \\<and> demand f \\<sqsubseteq> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f\\<cdot>r \\<noteq> \\<bottom>) =\n    (demand f \\<noteq> C\\<^sup>\\<infinity> \\<and> demand f \\<sqsubseteq> r)", "proof(intro iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. f\\<cdot>r \\<noteq> \\<bottom> \\<Longrightarrow>\n    demand f \\<noteq> C\\<^sup>\\<infinity> \\<and> demand f \\<sqsubseteq> r\n 2. demand f \\<noteq> C\\<^sup>\\<infinity> \\<and>\n    demand f \\<sqsubseteq> r \\<Longrightarrow>\n    f\\<cdot>r \\<noteq> \\<bottom>", "assume \"f\\<cdot>r \\<noteq> \\<bottom>\""], ["proof (state)\nthis:\n  f\\<cdot>r \\<noteq> \\<bottom>\n\ngoal (2 subgoals):\n 1. f\\<cdot>r \\<noteq> \\<bottom> \\<Longrightarrow>\n    demand f \\<noteq> C\\<^sup>\\<infinity> \\<and> demand f \\<sqsubseteq> r\n 2. demand f \\<noteq> C\\<^sup>\\<infinity> \\<and>\n    demand f \\<sqsubseteq> r \\<Longrightarrow>\n    f\\<cdot>r \\<noteq> \\<bottom>", "thus \"demand f \\<noteq> C\\<^sup>\\<infinity> \\<and> demand f \\<sqsubseteq> r\""], ["proof (prove)\nusing this:\n  f\\<cdot>r \\<noteq> \\<bottom>\n\ngoal (1 subgoal):\n 1. demand f \\<noteq> C\\<^sup>\\<infinity> \\<and> demand f \\<sqsubseteq> r", "apply (cases r rule:C_cases)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n.\n       \\<lbrakk>f\\<cdot>r \\<noteq> \\<bottom>;\n        r = C\\<^bsup>n\\<^esup>\\<rbrakk>\n       \\<Longrightarrow> demand f \\<noteq> C\\<^sup>\\<infinity> \\<and>\n                         demand f \\<sqsubseteq> r\n 2. \\<lbrakk>f\\<cdot>r \\<noteq> \\<bottom>; r = C\\<^sup>\\<infinity>\\<rbrakk>\n    \\<Longrightarrow> demand f \\<noteq> C\\<^sup>\\<infinity> \\<and>\n                      demand f \\<sqsubseteq> r", "apply (auto intro: Least_le simp add: demand_def dest: infinite_resources_suffice)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  demand f \\<noteq> C\\<^sup>\\<infinity> \\<and> demand f \\<sqsubseteq> r\n\ngoal (1 subgoal):\n 1. demand f \\<noteq> C\\<^sup>\\<infinity> \\<and>\n    demand f \\<sqsubseteq> r \\<Longrightarrow>\n    f\\<cdot>r \\<noteq> \\<bottom>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. demand f \\<noteq> C\\<^sup>\\<infinity> \\<and>\n    demand f \\<sqsubseteq> r \\<Longrightarrow>\n    f\\<cdot>r \\<noteq> \\<bottom>", "assume *: \"demand f \\<noteq> C\\<^sup>\\<infinity>  \\<and> demand f \\<sqsubseteq> r\""], ["proof (state)\nthis:\n  demand f \\<noteq> C\\<^sup>\\<infinity> \\<and> demand f \\<sqsubseteq> r\n\ngoal (1 subgoal):\n 1. demand f \\<noteq> C\\<^sup>\\<infinity> \\<and>\n    demand f \\<sqsubseteq> r \\<Longrightarrow>\n    f\\<cdot>r \\<noteq> \\<bottom>", "then"], ["proof (chain)\npicking this:\n  demand f \\<noteq> C\\<^sup>\\<infinity> \\<and> demand f \\<sqsubseteq> r", "have \"f\\<cdot>C\\<^sup>\\<infinity> \\<noteq> \\<bottom>\""], ["proof (prove)\nusing this:\n  demand f \\<noteq> C\\<^sup>\\<infinity> \\<and> demand f \\<sqsubseteq> r\n\ngoal (1 subgoal):\n 1. f\\<cdot>C\\<^sup>\\<infinity> \\<noteq> \\<bottom>", "by (auto intro: Least_le simp add: demand_def dest: infinite_resources_suffice)"], ["proof (state)\nthis:\n  f\\<cdot>C\\<^sup>\\<infinity> \\<noteq> \\<bottom>\n\ngoal (1 subgoal):\n 1. demand f \\<noteq> C\\<^sup>\\<infinity> \\<and>\n    demand f \\<sqsubseteq> r \\<Longrightarrow>\n    f\\<cdot>r \\<noteq> \\<bottom>", "hence \"f\\<cdot>(demand f) \\<noteq> \\<bottom>\""], ["proof (prove)\nusing this:\n  f\\<cdot>C\\<^sup>\\<infinity> \\<noteq> \\<bottom>\n\ngoal (1 subgoal):\n 1. f\\<cdot>(demand f) \\<noteq> \\<bottom>", "by (rule demand_suffices)"], ["proof (state)\nthis:\n  f\\<cdot>(demand f) \\<noteq> \\<bottom>\n\ngoal (1 subgoal):\n 1. demand f \\<noteq> C\\<^sup>\\<infinity> \\<and>\n    demand f \\<sqsubseteq> r \\<Longrightarrow>\n    f\\<cdot>r \\<noteq> \\<bottom>", "moreover"], ["proof (state)\nthis:\n  f\\<cdot>(demand f) \\<noteq> \\<bottom>\n\ngoal (1 subgoal):\n 1. demand f \\<noteq> C\\<^sup>\\<infinity> \\<and>\n    demand f \\<sqsubseteq> r \\<Longrightarrow>\n    f\\<cdot>r \\<noteq> \\<bottom>", "from *"], ["proof (chain)\npicking this:\n  demand f \\<noteq> C\\<^sup>\\<infinity> \\<and> demand f \\<sqsubseteq> r", "have \"demand f \\<sqsubseteq> r\""], ["proof (prove)\nusing this:\n  demand f \\<noteq> C\\<^sup>\\<infinity> \\<and> demand f \\<sqsubseteq> r\n\ngoal (1 subgoal):\n 1. demand f \\<sqsubseteq> r", ".."], ["proof (state)\nthis:\n  demand f \\<sqsubseteq> r\n\ngoal (1 subgoal):\n 1. demand f \\<noteq> C\\<^sup>\\<infinity> \\<and>\n    demand f \\<sqsubseteq> r \\<Longrightarrow>\n    f\\<cdot>r \\<noteq> \\<bottom>", "ultimately"], ["proof (chain)\npicking this:\n  f\\<cdot>(demand f) \\<noteq> \\<bottom>\n  demand f \\<sqsubseteq> r", "show \"f\\<cdot>r \\<noteq> \\<bottom>\""], ["proof (prove)\nusing this:\n  f\\<cdot>(demand f) \\<noteq> \\<bottom>\n  demand f \\<sqsubseteq> r\n\ngoal (1 subgoal):\n 1. f\\<cdot>r \\<noteq> \\<bottom>", "by (rule more_resources_suffice)"], ["proof (state)\nthis:\n  f\\<cdot>r \\<noteq> \\<bottom>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma infinity_bot_demand:\n  \"f\\<cdot>C\\<^sup>\\<infinity> = \\<bottom> \\<longleftrightarrow> demand f = C\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f\\<cdot>C\\<^sup>\\<infinity> = \\<bottom>) =\n    (demand f = C\\<^sup>\\<infinity>)", "by (metis below_Cinf not_bot_demand)"], ["", "lemma demand_suffices':\n  assumes \"demand f = C\\<^bsup>n\\<^esup>\"\n  shows \"f\\<cdot>(demand f) \\<noteq> \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f\\<cdot>(demand f) \\<noteq> \\<bottom>", "by (metis C_eq_Cinf assms demand_suffices infinity_bot_demand)"], ["", "lemma demand_Suc_Least:\n  assumes [simp]: \"f\\<cdot>\\<bottom> = \\<bottom>\"\n  assumes \"demand f \\<noteq> C\\<^sup>\\<infinity>\"\n  shows \"demand f = C\\<^bsup>(Suc (LEAST n. f\\<cdot>C\\<^bsup>Suc n\\<^esup> \\<noteq> \\<bottom>))\\<^esup>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. demand f =\n    C\\<^bsup>Suc (LEAST n.\n                     f\\<cdot>C\\<^bsup>Suc n\\<^esup> \\<noteq>\n                     \\<bottom>)\\<^esup>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. demand f =\n    C\\<^bsup>Suc (LEAST n.\n                     f\\<cdot>C\\<^bsup>Suc n\\<^esup> \\<noteq>\n                     \\<bottom>)\\<^esup>", "from assms"], ["proof (chain)\npicking this:\n  f\\<cdot>\\<bottom> = \\<bottom>\n  demand f \\<noteq> C\\<^sup>\\<infinity>", "have \"demand f = C\\<^bsup>(LEAST n. f\\<cdot>C\\<^bsup>n\\<^esup> \\<noteq> \\<bottom>)\\<^esup>\""], ["proof (prove)\nusing this:\n  f\\<cdot>\\<bottom> = \\<bottom>\n  demand f \\<noteq> C\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. demand f =\n    C\\<^bsup>LEAST n. f\\<cdot>C\\<^bsup>n\\<^esup> \\<noteq> \\<bottom>\\<^esup>", "by (auto simp add: demand_def)"], ["proof (state)\nthis:\n  demand f =\n  C\\<^bsup>LEAST n. f\\<cdot>C\\<^bsup>n\\<^esup> \\<noteq> \\<bottom>\\<^esup>\n\ngoal (1 subgoal):\n 1. demand f =\n    C\\<^bsup>Suc (LEAST n.\n                     f\\<cdot>C\\<^bsup>Suc n\\<^esup> \\<noteq>\n                     \\<bottom>)\\<^esup>", "also"], ["proof (state)\nthis:\n  demand f =\n  C\\<^bsup>LEAST n. f\\<cdot>C\\<^bsup>n\\<^esup> \\<noteq> \\<bottom>\\<^esup>\n\ngoal (1 subgoal):\n 1. demand f =\n    C\\<^bsup>Suc (LEAST n.\n                     f\\<cdot>C\\<^bsup>Suc n\\<^esup> \\<noteq>\n                     \\<bottom>)\\<^esup>", "then"], ["proof (chain)\npicking this:\n  demand f =\n  C\\<^bsup>LEAST n. f\\<cdot>C\\<^bsup>n\\<^esup> \\<noteq> \\<bottom>\\<^esup>", "obtain n where \"f\\<cdot>C\\<^bsup>n\\<^esup> \\<noteq> \\<bottom>\""], ["proof (prove)\nusing this:\n  demand f =\n  C\\<^bsup>LEAST n. f\\<cdot>C\\<^bsup>n\\<^esup> \\<noteq> \\<bottom>\\<^esup>\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        f\\<cdot>C\\<^bsup>n\\<^esup> \\<noteq> \\<bottom> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis  demand_suffices')"], ["proof (state)\nthis:\n  f\\<cdot>C\\<^bsup>n\\<^esup> \\<noteq> \\<bottom>\n\ngoal (1 subgoal):\n 1. demand f =\n    C\\<^bsup>Suc (LEAST n.\n                     f\\<cdot>C\\<^bsup>Suc n\\<^esup> \\<noteq>\n                     \\<bottom>)\\<^esup>", "hence \"(LEAST n. f\\<cdot>C\\<^bsup>n\\<^esup> \\<noteq> \\<bottom>) = Suc (LEAST n. f\\<cdot>C\\<^bsup>Suc n\\<^esup> \\<noteq> \\<bottom>)\""], ["proof (prove)\nusing this:\n  f\\<cdot>C\\<^bsup>n\\<^esup> \\<noteq> \\<bottom>\n\ngoal (1 subgoal):\n 1. (LEAST n. f\\<cdot>C\\<^bsup>n\\<^esup> \\<noteq> \\<bottom>) =\n    Suc (LEAST n. f\\<cdot>C\\<^bsup>Suc n\\<^esup> \\<noteq> \\<bottom>)", "apply (rule Least_Suc)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> f\\<cdot>C\\<^bsup>0\\<^esup> \\<noteq> \\<bottom>", "by simp"], ["proof (state)\nthis:\n  (LEAST n. f\\<cdot>C\\<^bsup>n\\<^esup> \\<noteq> \\<bottom>) =\n  Suc (LEAST n. f\\<cdot>C\\<^bsup>Suc n\\<^esup> \\<noteq> \\<bottom>)\n\ngoal (1 subgoal):\n 1. demand f =\n    C\\<^bsup>Suc (LEAST n.\n                     f\\<cdot>C\\<^bsup>Suc n\\<^esup> \\<noteq>\n                     \\<bottom>)\\<^esup>", "finally"], ["proof (chain)\npicking this:\n  demand f =\n  C\\<^bsup>Suc (LEAST n.\n                   f\\<cdot>C\\<^bsup>Suc n\\<^esup> \\<noteq>\n                   \\<bottom>)\\<^esup>", "show ?thesis"], ["proof (prove)\nusing this:\n  demand f =\n  C\\<^bsup>Suc (LEAST n.\n                   f\\<cdot>C\\<^bsup>Suc n\\<^esup> \\<noteq>\n                   \\<bottom>)\\<^esup>\n\ngoal (1 subgoal):\n 1. demand f =\n    C\\<^bsup>Suc (LEAST n.\n                     f\\<cdot>C\\<^bsup>Suc n\\<^esup> \\<noteq>\n                     \\<bottom>)\\<^esup>", "."], ["proof (state)\nthis:\n  demand f =\n  C\\<^bsup>Suc (LEAST n.\n                   f\\<cdot>C\\<^bsup>Suc n\\<^esup> \\<noteq>\n                   \\<bottom>)\\<^esup>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma demand_C_case[simp]: \"demand (C_case\\<cdot>f) = C \\<cdot> (demand f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. demand (C_case\\<cdot>f) = C\\<cdot>(demand f)", "proof(cases \"demand (C_case\\<cdot>f) = C\\<^sup>\\<infinity>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. demand (C_case\\<cdot>f) = C\\<^sup>\\<infinity> \\<Longrightarrow>\n    demand (C_case\\<cdot>f) = C\\<cdot>(demand f)\n 2. demand (C_case\\<cdot>f) \\<noteq> C\\<^sup>\\<infinity> \\<Longrightarrow>\n    demand (C_case\\<cdot>f) = C\\<cdot>(demand f)", "case True"], ["proof (state)\nthis:\n  demand (C_case\\<cdot>f) = C\\<^sup>\\<infinity>\n\ngoal (2 subgoals):\n 1. demand (C_case\\<cdot>f) = C\\<^sup>\\<infinity> \\<Longrightarrow>\n    demand (C_case\\<cdot>f) = C\\<cdot>(demand f)\n 2. demand (C_case\\<cdot>f) \\<noteq> C\\<^sup>\\<infinity> \\<Longrightarrow>\n    demand (C_case\\<cdot>f) = C\\<cdot>(demand f)", "then"], ["proof (chain)\npicking this:\n  demand (C_case\\<cdot>f) = C\\<^sup>\\<infinity>", "have \"C_case\\<cdot>f\\<cdot>C\\<^sup>\\<infinity> = \\<bottom>\""], ["proof (prove)\nusing this:\n  demand (C_case\\<cdot>f) = C\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. C_case\\<cdot>f\\<cdot>C\\<^sup>\\<infinity> = \\<bottom>", "by (metis infinity_bot_demand)"], ["proof (state)\nthis:\n  C_case\\<cdot>f\\<cdot>C\\<^sup>\\<infinity> = \\<bottom>\n\ngoal (2 subgoals):\n 1. demand (C_case\\<cdot>f) = C\\<^sup>\\<infinity> \\<Longrightarrow>\n    demand (C_case\\<cdot>f) = C\\<cdot>(demand f)\n 2. demand (C_case\\<cdot>f) \\<noteq> C\\<^sup>\\<infinity> \\<Longrightarrow>\n    demand (C_case\\<cdot>f) = C\\<cdot>(demand f)", "with True"], ["proof (chain)\npicking this:\n  demand (C_case\\<cdot>f) = C\\<^sup>\\<infinity>\n  C_case\\<cdot>f\\<cdot>C\\<^sup>\\<infinity> = \\<bottom>", "show ?thesis"], ["proof (prove)\nusing this:\n  demand (C_case\\<cdot>f) = C\\<^sup>\\<infinity>\n  C_case\\<cdot>f\\<cdot>C\\<^sup>\\<infinity> = \\<bottom>\n\ngoal (1 subgoal):\n 1. demand (C_case\\<cdot>f) = C\\<cdot>(demand f)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>demand (C_case\\<cdot>f) = C\\<^sup>\\<infinity>;\n     f\\<cdot>C\\<^sup>\\<infinity> = \\<bottom>\\<rbrakk>\n    \\<Longrightarrow> C\\<^sup>\\<infinity> = demand f", "by (metis infinity_bot_demand)"], ["proof (state)\nthis:\n  demand (C_case\\<cdot>f) = C\\<cdot>(demand f)\n\ngoal (1 subgoal):\n 1. demand (C_case\\<cdot>f) \\<noteq> C\\<^sup>\\<infinity> \\<Longrightarrow>\n    demand (C_case\\<cdot>f) = C\\<cdot>(demand f)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. demand (C_case\\<cdot>f) \\<noteq> C\\<^sup>\\<infinity> \\<Longrightarrow>\n    demand (C_case\\<cdot>f) = C\\<cdot>(demand f)", "case False"], ["proof (state)\nthis:\n  demand (C_case\\<cdot>f) \\<noteq> C\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. demand (C_case\\<cdot>f) \\<noteq> C\\<^sup>\\<infinity> \\<Longrightarrow>\n    demand (C_case\\<cdot>f) = C\\<cdot>(demand f)", "hence \"demand (C_case\\<cdot>f) = C\\<^bsup>Suc (LEAST n. (C_case\\<cdot>f)\\<cdot>C\\<^bsup>Suc n\\<^esup> \\<noteq> \\<bottom>)\\<^esup>\""], ["proof (prove)\nusing this:\n  demand (C_case\\<cdot>f) \\<noteq> C\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. demand (C_case\\<cdot>f) =\n    C\\<^bsup>Suc (LEAST n.\n                     C_case\\<cdot>f\\<cdot>C\\<^bsup>Suc n\\<^esup> \\<noteq>\n                     \\<bottom>)\\<^esup>", "by (rule demand_Suc_Least[OF C.case_rews(1)])"], ["proof (state)\nthis:\n  demand (C_case\\<cdot>f) =\n  C\\<^bsup>Suc (LEAST n.\n                   C_case\\<cdot>f\\<cdot>C\\<^bsup>Suc n\\<^esup> \\<noteq>\n                   \\<bottom>)\\<^esup>\n\ngoal (1 subgoal):\n 1. demand (C_case\\<cdot>f) \\<noteq> C\\<^sup>\\<infinity> \\<Longrightarrow>\n    demand (C_case\\<cdot>f) = C\\<cdot>(demand f)", "also"], ["proof (state)\nthis:\n  demand (C_case\\<cdot>f) =\n  C\\<^bsup>Suc (LEAST n.\n                   C_case\\<cdot>f\\<cdot>C\\<^bsup>Suc n\\<^esup> \\<noteq>\n                   \\<bottom>)\\<^esup>\n\ngoal (1 subgoal):\n 1. demand (C_case\\<cdot>f) \\<noteq> C\\<^sup>\\<infinity> \\<Longrightarrow>\n    demand (C_case\\<cdot>f) = C\\<cdot>(demand f)", "have \"\\<dots> = C\\<cdot>C\\<^bsup>LEAST n. f\\<cdot>C\\<^bsup>n\\<^esup> \\<noteq> \\<bottom>\\<^esup>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C\\<^bsup>Suc (LEAST n.\n                     C_case\\<cdot>f\\<cdot>C\\<^bsup>Suc n\\<^esup> \\<noteq>\n                     \\<bottom>)\\<^esup> =\n    C\\<cdot>\n    C\\<^bsup>LEAST n. f\\<cdot>C\\<^bsup>n\\<^esup> \\<noteq> \\<bottom>\\<^esup>", "by simp"], ["proof (state)\nthis:\n  C\\<^bsup>Suc (LEAST n.\n                   C_case\\<cdot>f\\<cdot>C\\<^bsup>Suc n\\<^esup> \\<noteq>\n                   \\<bottom>)\\<^esup> =\n  C\\<cdot>\n  C\\<^bsup>LEAST n. f\\<cdot>C\\<^bsup>n\\<^esup> \\<noteq> \\<bottom>\\<^esup>\n\ngoal (1 subgoal):\n 1. demand (C_case\\<cdot>f) \\<noteq> C\\<^sup>\\<infinity> \\<Longrightarrow>\n    demand (C_case\\<cdot>f) = C\\<cdot>(demand f)", "also"], ["proof (state)\nthis:\n  C\\<^bsup>Suc (LEAST n.\n                   C_case\\<cdot>f\\<cdot>C\\<^bsup>Suc n\\<^esup> \\<noteq>\n                   \\<bottom>)\\<^esup> =\n  C\\<cdot>\n  C\\<^bsup>LEAST n. f\\<cdot>C\\<^bsup>n\\<^esup> \\<noteq> \\<bottom>\\<^esup>\n\ngoal (1 subgoal):\n 1. demand (C_case\\<cdot>f) \\<noteq> C\\<^sup>\\<infinity> \\<Longrightarrow>\n    demand (C_case\\<cdot>f) = C\\<cdot>(demand f)", "have \"\\<dots> = C\\<cdot>(demand  f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C\\<cdot>\n    C\\<^bsup>LEAST n.\n                f\\<cdot>C\\<^bsup>n\\<^esup> \\<noteq> \\<bottom>\\<^esup> =\n    C\\<cdot>(demand f)", "using False"], ["proof (prove)\nusing this:\n  demand (C_case\\<cdot>f) \\<noteq> C\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. C\\<cdot>\n    C\\<^bsup>LEAST n.\n                f\\<cdot>C\\<^bsup>n\\<^esup> \\<noteq> \\<bottom>\\<^esup> =\n    C\\<cdot>(demand f)", "unfolding demand_def"], ["proof (prove)\nusing this:\n  (if C_case\\<cdot>f\\<cdot>C\\<^sup>\\<infinity> \\<noteq> \\<bottom>\n   then C\\<^bsup>LEAST n.\n                    C_case\\<cdot>f\\<cdot>C\\<^bsup>n\\<^esup> \\<noteq>\n                    \\<bottom>\\<^esup>\n   else C\\<^sup>\\<infinity>) \\<noteq>\n  C\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. C\\<cdot>\n    C\\<^bsup>LEAST n.\n                f\\<cdot>C\\<^bsup>n\\<^esup> \\<noteq> \\<bottom>\\<^esup> =\n    C\\<cdot>\n    (if f\\<cdot>C\\<^sup>\\<infinity> \\<noteq> \\<bottom>\n     then C\\<^bsup>LEAST n.\n                      f\\<cdot>C\\<^bsup>n\\<^esup> \\<noteq> \\<bottom>\\<^esup>\n     else C\\<^sup>\\<infinity>)", "by auto"], ["proof (state)\nthis:\n  C\\<cdot>\n  C\\<^bsup>LEAST n. f\\<cdot>C\\<^bsup>n\\<^esup> \\<noteq> \\<bottom>\\<^esup> =\n  C\\<cdot>(demand f)\n\ngoal (1 subgoal):\n 1. demand (C_case\\<cdot>f) \\<noteq> C\\<^sup>\\<infinity> \\<Longrightarrow>\n    demand (C_case\\<cdot>f) = C\\<cdot>(demand f)", "finally"], ["proof (chain)\npicking this:\n  demand (C_case\\<cdot>f) = C\\<cdot>(demand f)", "show ?thesis"], ["proof (prove)\nusing this:\n  demand (C_case\\<cdot>f) = C\\<cdot>(demand f)\n\ngoal (1 subgoal):\n 1. demand (C_case\\<cdot>f) = C\\<cdot>(demand f)", "."], ["proof (state)\nthis:\n  demand (C_case\\<cdot>f) = C\\<cdot>(demand f)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma demand_contravariant:\n  assumes \"f \\<sqsubseteq> g\"\n  shows \"demand g \\<sqsubseteq> demand f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. demand g \\<sqsubseteq> demand f", "proof(cases \"demand f\" rule:C_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>n.\n       demand f = C\\<^bsup>n\\<^esup> \\<Longrightarrow>\n       demand g \\<sqsubseteq> demand f\n 2. demand f = C\\<^sup>\\<infinity> \\<Longrightarrow>\n    demand g \\<sqsubseteq> demand f", "fix n"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>n.\n       demand f = C\\<^bsup>n\\<^esup> \\<Longrightarrow>\n       demand g \\<sqsubseteq> demand f\n 2. demand f = C\\<^sup>\\<infinity> \\<Longrightarrow>\n    demand g \\<sqsubseteq> demand f", "assume \"demand f = C\\<^bsup>n\\<^esup>\""], ["proof (state)\nthis:\n  demand f = C\\<^bsup>n\\<^esup>\n\ngoal (2 subgoals):\n 1. \\<And>n.\n       demand f = C\\<^bsup>n\\<^esup> \\<Longrightarrow>\n       demand g \\<sqsubseteq> demand f\n 2. demand f = C\\<^sup>\\<infinity> \\<Longrightarrow>\n    demand g \\<sqsubseteq> demand f", "hence \"f\\<cdot>(demand f) \\<noteq> \\<bottom>\""], ["proof (prove)\nusing this:\n  demand f = C\\<^bsup>n\\<^esup>\n\ngoal (1 subgoal):\n 1. f\\<cdot>(demand f) \\<noteq> \\<bottom>", "by (metis demand_suffices')"], ["proof (state)\nthis:\n  f\\<cdot>(demand f) \\<noteq> \\<bottom>\n\ngoal (2 subgoals):\n 1. \\<And>n.\n       demand f = C\\<^bsup>n\\<^esup> \\<Longrightarrow>\n       demand g \\<sqsubseteq> demand f\n 2. demand f = C\\<^sup>\\<infinity> \\<Longrightarrow>\n    demand g \\<sqsubseteq> demand f", "also"], ["proof (state)\nthis:\n  f\\<cdot>(demand f) \\<noteq> \\<bottom>\n\ngoal (2 subgoals):\n 1. \\<And>n.\n       demand f = C\\<^bsup>n\\<^esup> \\<Longrightarrow>\n       demand g \\<sqsubseteq> demand f\n 2. demand f = C\\<^sup>\\<infinity> \\<Longrightarrow>\n    demand g \\<sqsubseteq> demand f", "note monofun_cfun_fun[OF assms]"], ["proof (state)\nthis:\n  f\\<cdot>?x \\<sqsubseteq> g\\<cdot>?x\n\ngoal (2 subgoals):\n 1. \\<And>n.\n       demand f = C\\<^bsup>n\\<^esup> \\<Longrightarrow>\n       demand g \\<sqsubseteq> demand f\n 2. demand f = C\\<^sup>\\<infinity> \\<Longrightarrow>\n    demand g \\<sqsubseteq> demand f", "finally"], ["proof (chain)\npicking this:\n  cont (\\<lambda>a. a) \\<Longrightarrow>\n  g\\<cdot>(demand f) \\<noteq> \\<bottom>", "have \"g\\<cdot>(demand f) \\<noteq> \\<bottom>\""], ["proof (prove)\nusing this:\n  cont (\\<lambda>a. a) \\<Longrightarrow>\n  g\\<cdot>(demand f) \\<noteq> \\<bottom>\n\ngoal (1 subgoal):\n 1. g\\<cdot>(demand f) \\<noteq> \\<bottom>", "by this (intro cont2cont)"], ["proof (state)\nthis:\n  g\\<cdot>(demand f) \\<noteq> \\<bottom>\n\ngoal (2 subgoals):\n 1. \\<And>n.\n       demand f = C\\<^bsup>n\\<^esup> \\<Longrightarrow>\n       demand g \\<sqsubseteq> demand f\n 2. demand f = C\\<^sup>\\<infinity> \\<Longrightarrow>\n    demand g \\<sqsubseteq> demand f", "thus \"demand g \\<sqsubseteq> demand f\""], ["proof (prove)\nusing this:\n  g\\<cdot>(demand f) \\<noteq> \\<bottom>\n\ngoal (1 subgoal):\n 1. demand g \\<sqsubseteq> demand f", "unfolding not_bot_demand"], ["proof (prove)\nusing this:\n  demand g \\<noteq> C\\<^sup>\\<infinity> \\<and>\n  demand g \\<sqsubseteq> demand f\n\ngoal (1 subgoal):\n 1. demand g \\<sqsubseteq> demand f", "by auto"], ["proof (state)\nthis:\n  demand g \\<sqsubseteq> demand f\n\ngoal (1 subgoal):\n 1. demand f = C\\<^sup>\\<infinity> \\<Longrightarrow>\n    demand g \\<sqsubseteq> demand f", "qed auto"], ["", "subsubsection \\<open>Restricting functions with domain C\\<close>"], ["", "fixrec C_restr :: \"C \\<rightarrow> (C \\<rightarrow> 'a::pcpo) \\<rightarrow> (C \\<rightarrow> 'a)\"\n  where \"C_restr\\<cdot>r\\<cdot>f\\<cdot>r' = (f\\<cdot>(r \\<sqinter> r'))\""], ["", "abbreviation C_restr_syn :: \"(C \\<rightarrow> 'a::pcpo) \\<Rightarrow> C \\<Rightarrow> (C \\<rightarrow> 'a)\" ( \"_|\\<^bsub>_\\<^esub>\" [111,110] 110)\n  where \"f|\\<^bsub>r\\<^esub> \\<equiv> C_restr\\<cdot>r\\<cdot>f\""], ["", "lemma [simp]: \"\\<bottom>|\\<^bsub>r\\<^esub> = \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bottom>|\\<^bsub>r\\<^esub> = \\<bottom>", "by fixrec_simp"], ["", "lemma [simp]: \"f\\<cdot>\\<bottom> = \\<bottom> \\<Longrightarrow> f|\\<^bsub>\\<bottom>\\<^esub> = \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f\\<cdot>\\<bottom> = \\<bottom> \\<Longrightarrow>\n    f|\\<^bsub>\\<bottom>\\<^esub> = \\<bottom>", "by fixrec_simp"], ["", "lemma C_restr_C_restr[simp]: \"(v|\\<^bsub>r'\\<^esub>)|\\<^bsub>r\\<^esub> = v|\\<^bsub>(r' \\<sqinter> r)\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (v|\\<^bsub>r'\\<^esub>)|\\<^bsub>r\\<^esub> =\n    v|\\<^bsub>(r' \\<sqinter> r)\\<^esub>", "by (rule cfun_eqI) simp"], ["", "lemma C_restr_eqD:\n  assumes \"f|\\<^bsub>r\\<^esub> = g|\\<^bsub>r\\<^esub>\"\n  assumes \"r' \\<sqsubseteq> r\"\n  shows \"f\\<cdot>r' = g\\<cdot>r'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f\\<cdot>r' = g\\<cdot>r'", "by (metis C_restr.simps assms below_refl is_meetI)"], ["", "lemma C_restr_eq_lower:\n  assumes \"f|\\<^bsub>r\\<^esub> = g|\\<^bsub>r\\<^esub>\"\n  assumes \"r' \\<sqsubseteq> r\"\n  shows \"f|\\<^bsub>r'\\<^esub> = g|\\<^bsub>r'\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f|\\<^bsub>r'\\<^esub> = g|\\<^bsub>r'\\<^esub>", "by (metis C_restr_C_restr assms below_refl is_meetI)"], ["", "lemma C_restr_below[intro, simp]:\n  \"x|\\<^bsub>r\\<^esub> \\<sqsubseteq> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x|\\<^bsub>r\\<^esub> \\<sqsubseteq> x", "apply (rule cfun_belowI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa. (x|\\<^bsub>r\\<^esub>)\\<cdot>xa \\<sqsubseteq> x\\<cdot>xa", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa. x\\<cdot>(r \\<sqinter> xa) \\<sqsubseteq> x\\<cdot>xa", "by (metis below_refl meet_below2 monofun_cfun_arg)"], ["", "lemma C_restr_below_cong:\n  \"(\\<And> r'. r' \\<sqsubseteq> r \\<Longrightarrow> f \\<cdot> r' \\<sqsubseteq> g \\<cdot> r') \\<Longrightarrow> f|\\<^bsub>r\\<^esub> \\<sqsubseteq> g|\\<^bsub>r\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r'.\n        r' \\<sqsubseteq> r \\<Longrightarrow>\n        f\\<cdot>r' \\<sqsubseteq> g\\<cdot>r') \\<Longrightarrow>\n    f|\\<^bsub>r\\<^esub> \\<sqsubseteq> g|\\<^bsub>r\\<^esub>", "apply (rule cfun_belowI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>r'.\n           r' \\<sqsubseteq> r \\<Longrightarrow>\n           f\\<cdot>r' \\<sqsubseteq> g\\<cdot>r') \\<Longrightarrow>\n       (f|\\<^bsub>r\\<^esub>)\\<cdot>x \\<sqsubseteq>\n       (g|\\<^bsub>r\\<^esub>)\\<cdot>x", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>r'.\n           r' \\<sqsubseteq> r \\<Longrightarrow>\n           f\\<cdot>r' \\<sqsubseteq> g\\<cdot>r') \\<Longrightarrow>\n       f\\<cdot>(r \\<sqinter> x) \\<sqsubseteq> g\\<cdot>(r \\<sqinter> x)", "by (metis below_refl meet_below1)"], ["", "lemma C_restr_cong:\n  \"(\\<And> r'. r' \\<sqsubseteq> r \\<Longrightarrow> f \\<cdot> r' = g \\<cdot> r') \\<Longrightarrow> f|\\<^bsub>r\\<^esub> = g|\\<^bsub>r\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r'.\n        r' \\<sqsubseteq> r \\<Longrightarrow>\n        f\\<cdot>r' = g\\<cdot>r') \\<Longrightarrow>\n    f|\\<^bsub>r\\<^esub> = g|\\<^bsub>r\\<^esub>", "apply (intro below_antisym C_restr_below_cong )"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>r'.\n       \\<lbrakk>\\<And>r'.\n                   r' \\<sqsubseteq> r \\<Longrightarrow>\n                   f\\<cdot>r' = g\\<cdot>r';\n        r' \\<sqsubseteq> r\\<rbrakk>\n       \\<Longrightarrow> f\\<cdot>r' \\<sqsubseteq> g\\<cdot>r'\n 2. \\<And>r'.\n       \\<lbrakk>\\<And>r'.\n                   r' \\<sqsubseteq> r \\<Longrightarrow>\n                   f\\<cdot>r' = g\\<cdot>r';\n        r' \\<sqsubseteq> r\\<rbrakk>\n       \\<Longrightarrow> g\\<cdot>r' \\<sqsubseteq> f\\<cdot>r'", "by (metis below_refl)+"], ["", "lemma C_restr_C_cong:\n  \"(\\<And> r'. r' \\<sqsubseteq> r \\<Longrightarrow> f \\<cdot> (C\\<cdot>r') = g \\<cdot> (C\\<cdot>r')) \\<Longrightarrow> f\\<cdot>\\<bottom>=g\\<cdot>\\<bottom> \\<Longrightarrow> f|\\<^bsub>C\\<cdot>r\\<^esub> = g|\\<^bsub>C\\<cdot>r\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>r'.\n                r' \\<sqsubseteq> r \\<Longrightarrow>\n                f\\<cdot>(C\\<cdot>r') = g\\<cdot>(C\\<cdot>r');\n     f\\<cdot>\\<bottom> = g\\<cdot>\\<bottom>\\<rbrakk>\n    \\<Longrightarrow> f|\\<^bsub>C\\<cdot>r\\<^esub> =\n                      g|\\<^bsub>C\\<cdot>r\\<^esub>", "apply (rule C_restr_cong)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r'.\n       \\<lbrakk>\\<And>r'.\n                   r' \\<sqsubseteq> r \\<Longrightarrow>\n                   f\\<cdot>(C\\<cdot>r') = g\\<cdot>(C\\<cdot>r');\n        f\\<cdot>\\<bottom> = g\\<cdot>\\<bottom>;\n        r' \\<sqsubseteq> C\\<cdot>r\\<rbrakk>\n       \\<Longrightarrow> f\\<cdot>r' = g\\<cdot>r'", "by (case_tac r', auto)"], ["", "lemma C_restr_C_case[simp]:\n  \"(C_case\\<cdot>f)|\\<^bsub>C\\<cdot>r\\<^esub> = C_case\\<cdot>(f|\\<^bsub>r\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C_case\\<cdot>f|\\<^bsub>C\\<cdot>r\\<^esub> =\n    C_case\\<cdot>(f|\\<^bsub>r\\<^esub>)", "apply (rule cfun_eqI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (C_case\\<cdot>f|\\<^bsub>C\\<cdot>r\\<^esub>)\\<cdot>x =\n       C_case\\<cdot>(f|\\<^bsub>r\\<^esub>)\\<cdot>x", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       C_case\\<cdot>f\\<cdot>(C\\<cdot>r \\<sqinter> x) =\n       C_case\\<cdot>(f|\\<^bsub>r\\<^esub>)\\<cdot>x", "apply (case_tac x)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x = \\<bottom> \\<Longrightarrow>\n       C_case\\<cdot>f\\<cdot>(C\\<cdot>r \\<sqinter> x) =\n       C_case\\<cdot>(f|\\<^bsub>r\\<^esub>)\\<cdot>x\n 2. \\<And>x Ca.\n       x = C\\<cdot>Ca \\<Longrightarrow>\n       C_case\\<cdot>f\\<cdot>(C\\<cdot>r \\<sqinter> x) =\n       C_case\\<cdot>(f|\\<^bsub>r\\<^esub>)\\<cdot>x", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x Ca.\n       x = C\\<cdot>Ca \\<Longrightarrow>\n       C_case\\<cdot>f\\<cdot>(C\\<cdot>r \\<sqinter> x) =\n       C_case\\<cdot>(f|\\<^bsub>r\\<^esub>)\\<cdot>x", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma C_restr_bot_demand:\n  assumes \"C\\<cdot>r \\<sqsubseteq> demand f\"\n  shows \"f|\\<^bsub>r\\<^esub> = \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f|\\<^bsub>r\\<^esub> = \\<bottom>", "proof(rule cfun_eqI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. (f|\\<^bsub>r\\<^esub>)\\<cdot>x = \\<bottom>\\<cdot>x", "fix r'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. (f|\\<^bsub>r\\<^esub>)\\<cdot>x = \\<bottom>\\<cdot>x", "have \"f\\<cdot>(r \\<sqinter> r') = \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f\\<cdot>(r \\<sqinter> r') = \\<bottom>", "proof(rule classical)"], ["proof (state)\ngoal (1 subgoal):\n 1. f\\<cdot>(r \\<sqinter> r') \\<noteq> \\<bottom> \\<Longrightarrow>\n    f\\<cdot>(r \\<sqinter> r') = \\<bottom>", "have \"r \\<sqsubseteq> C \\<cdot> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<sqsubseteq> C\\<cdot>r", "by (rule below_C)"], ["proof (state)\nthis:\n  r \\<sqsubseteq> C\\<cdot>r\n\ngoal (1 subgoal):\n 1. f\\<cdot>(r \\<sqinter> r') \\<noteq> \\<bottom> \\<Longrightarrow>\n    f\\<cdot>(r \\<sqinter> r') = \\<bottom>", "also"], ["proof (state)\nthis:\n  r \\<sqsubseteq> C\\<cdot>r\n\ngoal (1 subgoal):\n 1. f\\<cdot>(r \\<sqinter> r') \\<noteq> \\<bottom> \\<Longrightarrow>\n    f\\<cdot>(r \\<sqinter> r') = \\<bottom>", "note assms"], ["proof (state)\nthis:\n  C\\<cdot>r \\<sqsubseteq> demand f\n\ngoal (1 subgoal):\n 1. f\\<cdot>(r \\<sqinter> r') \\<noteq> \\<bottom> \\<Longrightarrow>\n    f\\<cdot>(r \\<sqinter> r') = \\<bottom>", "also"], ["proof (state)\nthis:\n  C\\<cdot>r \\<sqsubseteq> demand f\n\ngoal (1 subgoal):\n 1. f\\<cdot>(r \\<sqinter> r') \\<noteq> \\<bottom> \\<Longrightarrow>\n    f\\<cdot>(r \\<sqinter> r') = \\<bottom>", "assume *: \"f\\<cdot>(r \\<sqinter> r') \\<noteq> \\<bottom>\""], ["proof (state)\nthis:\n  f\\<cdot>(r \\<sqinter> r') \\<noteq> \\<bottom>\n\ngoal (1 subgoal):\n 1. f\\<cdot>(r \\<sqinter> r') \\<noteq> \\<bottom> \\<Longrightarrow>\n    f\\<cdot>(r \\<sqinter> r') = \\<bottom>", "hence \"demand f \\<sqsubseteq> (r \\<sqinter> r')\""], ["proof (prove)\nusing this:\n  f\\<cdot>(r \\<sqinter> r') \\<noteq> \\<bottom>\n\ngoal (1 subgoal):\n 1. demand f \\<sqsubseteq> r \\<sqinter> r'", "unfolding not_bot_demand"], ["proof (prove)\nusing this:\n  demand f \\<noteq> C\\<^sup>\\<infinity> \\<and>\n  demand f \\<sqsubseteq> r \\<sqinter> r'\n\ngoal (1 subgoal):\n 1. demand f \\<sqsubseteq> r \\<sqinter> r'", "by auto"], ["proof (state)\nthis:\n  demand f \\<sqsubseteq> r \\<sqinter> r'\n\ngoal (1 subgoal):\n 1. f\\<cdot>(r \\<sqinter> r') \\<noteq> \\<bottom> \\<Longrightarrow>\n    f\\<cdot>(r \\<sqinter> r') = \\<bottom>", "hence \"demand f \\<sqsubseteq> r\""], ["proof (prove)\nusing this:\n  demand f \\<sqsubseteq> r \\<sqinter> r'\n\ngoal (1 subgoal):\n 1. demand f \\<sqsubseteq> r", "by (metis below_refl meet_below1 below_trans)"], ["proof (state)\nthis:\n  demand f \\<sqsubseteq> r\n\ngoal (1 subgoal):\n 1. f\\<cdot>(r \\<sqinter> r') \\<noteq> \\<bottom> \\<Longrightarrow>\n    f\\<cdot>(r \\<sqinter> r') = \\<bottom>", "finally (below_antisym)"], ["proof (chain)\npicking this:\n  cont (\\<lambda>a. a) \\<Longrightarrow> r = demand f", "have \"r = demand f\""], ["proof (prove)\nusing this:\n  cont (\\<lambda>a. a) \\<Longrightarrow> r = demand f\n\ngoal (1 subgoal):\n 1. r = demand f", "by this (intro cont2cont)"], ["proof (state)\nthis:\n  r = demand f\n\ngoal (1 subgoal):\n 1. f\\<cdot>(r \\<sqinter> r') \\<noteq> \\<bottom> \\<Longrightarrow>\n    f\\<cdot>(r \\<sqinter> r') = \\<bottom>", "with assms"], ["proof (chain)\npicking this:\n  C\\<cdot>r \\<sqsubseteq> demand f\n  r = demand f", "have \"demand f = C\\<^sup>\\<infinity>\""], ["proof (prove)\nusing this:\n  C\\<cdot>r \\<sqsubseteq> demand f\n  r = demand f\n\ngoal (1 subgoal):\n 1. demand f = C\\<^sup>\\<infinity>", "by (cases \"demand f\" rule:C_cases) (auto simp add: iterate_Suc[symmetric] simp del: iterate_Suc)"], ["proof (state)\nthis:\n  demand f = C\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. f\\<cdot>(r \\<sqinter> r') \\<noteq> \\<bottom> \\<Longrightarrow>\n    f\\<cdot>(r \\<sqinter> r') = \\<bottom>", "thus \"f\\<cdot>(r \\<sqinter> r') = \\<bottom>\""], ["proof (prove)\nusing this:\n  demand f = C\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. f\\<cdot>(r \\<sqinter> r') = \\<bottom>", "by (metis not_bot_demand)"], ["proof (state)\nthis:\n  f\\<cdot>(r \\<sqinter> r') = \\<bottom>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f\\<cdot>(r \\<sqinter> r') = \\<bottom>\n\ngoal (1 subgoal):\n 1. \\<And>x. (f|\\<^bsub>r\\<^esub>)\\<cdot>x = \\<bottom>\\<cdot>x", "thus \"(f|\\<^bsub>r\\<^esub>)\\<cdot>r' = \\<bottom>\\<cdot>r'\""], ["proof (prove)\nusing this:\n  f\\<cdot>(r \\<sqinter> r') = \\<bottom>\n\ngoal (1 subgoal):\n 1. (f|\\<^bsub>r\\<^esub>)\\<cdot>r' = \\<bottom>\\<cdot>r'", "by simp"], ["proof (state)\nthis:\n  (f|\\<^bsub>r\\<^esub>)\\<cdot>r' = \\<bottom>\\<cdot>r'\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Restricting maps of C-ranged functions\\<close>"], ["", "definition env_C_restr :: \"C \\<rightarrow> ('var::type \\<Rightarrow> (C \\<rightarrow> 'a::pcpo)) \\<rightarrow> ('var \\<Rightarrow> (C \\<rightarrow> 'a))\" where\n  \"env_C_restr = (\\<Lambda> r f.  cfun_comp\\<cdot>(C_restr\\<cdot>r)\\<cdot>f)\""], ["", "abbreviation env_C_restr_syn :: \"('var::type \\<Rightarrow> (C \\<rightarrow> 'a::pcpo)) \\<Rightarrow> C \\<Rightarrow>  ('var \\<Rightarrow> (C \\<rightarrow> 'a))\" ( \"_|\\<^sup>\\<circ>\\<^bsub>_\\<^esub>\" [111,110] 110)\n  where \"f|\\<^sup>\\<circ>\\<^bsub>r\\<^esub> \\<equiv> env_C_restr\\<cdot>r\\<cdot>f\""], ["", "lemma env_C_restr_upd[simp]: \"(\\<rho>(x := v))|\\<^sup>\\<circ>\\<^bsub>r\\<^esub> = (\\<rho>|\\<^sup>\\<circ>\\<^bsub>r\\<^esub>)(x := v|\\<^bsub>r\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rho>(x := v)|\\<^sup>\\<circ>\\<^bsub>r\\<^esub> =\n    (\\<rho>|\\<^sup>\\<circ>\\<^bsub>r\\<^esub>)(x := v|\\<^bsub>r\\<^esub>)", "unfolding env_C_restr_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Lambda> r.\n        Abs_cfun (Rep_cfun (cfun_comp\\<cdot>(C_restr\\<cdot>r))))\\<cdot>\n    r\\<cdot>\n    (\\<rho>(x := v)) =\n    ((\\<Lambda> r.\n         Abs_cfun (Rep_cfun (cfun_comp\\<cdot>(C_restr\\<cdot>r))))\\<cdot>\n     r\\<cdot>\n     \\<rho>)\n    (x := v|\\<^bsub>r\\<^esub>)", "by simp"], ["", "lemma env_C_restr_lookup[simp]: \"(\\<rho>|\\<^sup>\\<circ>\\<^bsub>r\\<^esub>) v = \\<rho> v|\\<^bsub>r\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<rho>|\\<^sup>\\<circ>\\<^bsub>r\\<^esub>) v = \\<rho> v|\\<^bsub>r\\<^esub>", "unfolding env_C_restr_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<Lambda> r.\n         Abs_cfun (Rep_cfun (cfun_comp\\<cdot>(C_restr\\<cdot>r))))\\<cdot>\n     r\\<cdot>\n     \\<rho>)\n     v =\n    \\<rho> v|\\<^bsub>r\\<^esub>", "by simp"], ["", "lemma env_C_restr_bot[simp]: \" \\<bottom>|\\<^sup>\\<circ>\\<^bsub>r\\<^esub> = \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bottom>|\\<^sup>\\<circ>\\<^bsub>r\\<^esub> = \\<bottom>", "unfolding env_C_restr_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Lambda> r.\n        Abs_cfun (Rep_cfun (cfun_comp\\<cdot>(C_restr\\<cdot>r))))\\<cdot>\n    r\\<cdot>\n    \\<bottom> =\n    \\<bottom>", "by auto"], ["", "lemma env_C_restr_restr_below[intro]: \"\\<rho>|\\<^sup>\\<circ>\\<^bsub>r\\<^esub> \\<sqsubseteq> \\<rho>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rho>|\\<^sup>\\<circ>\\<^bsub>r\\<^esub> \\<sqsubseteq> \\<rho>", "by (auto intro: fun_belowI)"], ["", "lemma env_C_restr_env_C_restr[simp]: \"(v|\\<^sup>\\<circ>\\<^bsub>r'\\<^esub>)|\\<^sup>\\<circ>\\<^bsub>r\\<^esub> = v|\\<^sup>\\<circ>\\<^bsub>(r' \\<sqinter> r)\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (v|\\<^sup>\\<circ>\\<^bsub>r'\\<^esub>)|\\<^sup>\\<circ>\\<^bsub>r\\<^esub> =\n    v|\\<^sup>\\<circ>\\<^bsub>(r' \\<sqinter> r)\\<^esub>", "unfolding env_C_restr_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Lambda> r.\n        Abs_cfun (Rep_cfun (cfun_comp\\<cdot>(C_restr\\<cdot>r))))\\<cdot>\n    r\\<cdot>\n    ((\\<Lambda> r.\n         Abs_cfun (Rep_cfun (cfun_comp\\<cdot>(C_restr\\<cdot>r))))\\<cdot>\n     r'\\<cdot>\n     v) =\n    (\\<Lambda> r.\n        Abs_cfun (Rep_cfun (cfun_comp\\<cdot>(C_restr\\<cdot>r))))\\<cdot>\n    (r' \\<sqinter> r)\\<cdot>\n    v", "by auto"], ["", "lemma env_C_restr_cong:\n  \"(\\<And> x r'. r' \\<sqsubseteq> r \\<Longrightarrow> f x \\<cdot> r' = g x \\<cdot> r') \\<Longrightarrow> f|\\<^sup>\\<circ>\\<^bsub>r\\<^esub> = g|\\<^sup>\\<circ>\\<^bsub>r\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x r'.\n        r' \\<sqsubseteq> r \\<Longrightarrow>\n        f x\\<cdot>r' = g x\\<cdot>r') \\<Longrightarrow>\n    f|\\<^sup>\\<circ>\\<^bsub>r\\<^esub> = g|\\<^sup>\\<circ>\\<^bsub>r\\<^esub>", "unfolding env_C_restr_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x r'.\n        r' \\<sqsubseteq> r \\<Longrightarrow>\n        f x\\<cdot>r' = g x\\<cdot>r') \\<Longrightarrow>\n    (\\<Lambda> r.\n        Abs_cfun (Rep_cfun (cfun_comp\\<cdot>(C_restr\\<cdot>r))))\\<cdot>\n    r\\<cdot>\n    f =\n    (\\<Lambda> r.\n        Abs_cfun (Rep_cfun (cfun_comp\\<cdot>(C_restr\\<cdot>r))))\\<cdot>\n    r\\<cdot>\n    g", "by (rule ext) (auto intro: C_restr_cong)"], ["", "end"]]}