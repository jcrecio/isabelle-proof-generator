{"file_name": "/home/qj213/afp-2021-10-22/thys/Launchbury/C-Meet.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Launchbury", "problem_names": ["lemma[simp]: \"C_meet\\<cdot>\\<bottom>\\<cdot>y = \\<bottom>\" \"C_meet\\<cdot>x\\<cdot>\\<bottom> = \\<bottom>\"", "lemma C_meet_is_meet: \"(z \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) = (z \\<sqsubseteq> x \\<and> z \\<sqsubseteq> y)\"", "lemma [simp]: \"C\\<cdot>r \\<sqinter> r = r\"", "lemma [simp]: \"r \\<sqinter> C\\<cdot>r = r\"", "lemma [simp]: \"C\\<cdot>r \\<sqinter> C\\<cdot>r' = C\\<cdot>(r \\<sqinter> r')\""], "translations": [["", "lemma[simp]: \"C_meet\\<cdot>\\<bottom>\\<cdot>y = \\<bottom>\" \"C_meet\\<cdot>x\\<cdot>\\<bottom> = \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C_meet\\<cdot>\\<bottom>\\<cdot>y = \\<bottom> &&&\n    C_meet\\<cdot>x\\<cdot>\\<bottom> = \\<bottom>", "by (fixrec_simp, cases x, fixrec_simp+)"], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(C, Finite_Meet_cpo_class)", "apply standard"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<exists>l.\n          l \\<sqsubseteq> x \\<and>\n          l \\<sqsubseteq> y \\<and>\n          (\\<forall>z.\n              z \\<sqsubseteq> x \\<longrightarrow>\n              z \\<sqsubseteq> y \\<longrightarrow> z \\<sqsubseteq> l)", "proof(intro exI conjI strip)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x y. ?l3 x y \\<sqsubseteq> x\n 2. \\<And>x y. ?l3 x y \\<sqsubseteq> y\n 3. \\<And>x y z.\n       \\<lbrakk>z \\<sqsubseteq> x; z \\<sqsubseteq> y\\<rbrakk>\n       \\<Longrightarrow> z \\<sqsubseteq> ?l3 x y", "fix x y"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x y. ?l3 x y \\<sqsubseteq> x\n 2. \\<And>x y. ?l3 x y \\<sqsubseteq> y\n 3. \\<And>x y z.\n       \\<lbrakk>z \\<sqsubseteq> x; z \\<sqsubseteq> y\\<rbrakk>\n       \\<Longrightarrow> z \\<sqsubseteq> ?l3 x y", "{"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x y. ?l3 x y \\<sqsubseteq> x\n 2. \\<And>x y. ?l3 x y \\<sqsubseteq> y\n 3. \\<And>x y z.\n       \\<lbrakk>z \\<sqsubseteq> x; z \\<sqsubseteq> y\\<rbrakk>\n       \\<Longrightarrow> z \\<sqsubseteq> ?l3 x y", "fix t"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x y. ?l3 x y \\<sqsubseteq> x\n 2. \\<And>x y. ?l3 x y \\<sqsubseteq> y\n 3. \\<And>x y z.\n       \\<lbrakk>z \\<sqsubseteq> x; z \\<sqsubseteq> y\\<rbrakk>\n       \\<Longrightarrow> z \\<sqsubseteq> ?l3 x y", "have \"(t \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) = (t \\<sqsubseteq> x \\<and> t \\<sqsubseteq> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n    (t \\<sqsubseteq> x \\<and> t \\<sqsubseteq> y)", "proof (induct t rule:C.take_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. adm (\\<lambda>a.\n            (a \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n            (a \\<sqsubseteq> x \\<and> a \\<sqsubseteq> y))\n 2. \\<And>n.\n       (C_take n\\<cdot>t \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n       (C_take n\\<cdot>t \\<sqsubseteq> x \\<and>\n        C_take n\\<cdot>t \\<sqsubseteq> y)", "fix n"], ["proof (state)\ngoal (2 subgoals):\n 1. adm (\\<lambda>a.\n            (a \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n            (a \\<sqsubseteq> x \\<and> a \\<sqsubseteq> y))\n 2. \\<And>n.\n       (C_take n\\<cdot>t \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n       (C_take n\\<cdot>t \\<sqsubseteq> x \\<and>\n        C_take n\\<cdot>t \\<sqsubseteq> y)", "show \"(C_take n\\<cdot>t \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) = (C_take n\\<cdot>t \\<sqsubseteq> x \\<and> C_take n\\<cdot>t \\<sqsubseteq> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (C_take n\\<cdot>t \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n    (C_take n\\<cdot>t \\<sqsubseteq> x \\<and>\n     C_take n\\<cdot>t \\<sqsubseteq> y)", "proof (induct n arbitrary: t x y rule:nat_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t x y.\n       (C_take 0\\<cdot>t \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n       (C_take 0\\<cdot>t \\<sqsubseteq> x \\<and>\n        C_take 0\\<cdot>t \\<sqsubseteq> y)\n 2. \\<And>n t x y.\n       (\\<And>t x y.\n           (C_take n\\<cdot>t \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n           (C_take n\\<cdot>t \\<sqsubseteq> x \\<and>\n            C_take n\\<cdot>t \\<sqsubseteq> y)) \\<Longrightarrow>\n       (C_take (Suc n)\\<cdot>t \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n       (C_take (Suc n)\\<cdot>t \\<sqsubseteq> x \\<and>\n        C_take (Suc n)\\<cdot>t \\<sqsubseteq> y)", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>t x y.\n       (C_take 0\\<cdot>t \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n       (C_take 0\\<cdot>t \\<sqsubseteq> x \\<and>\n        C_take 0\\<cdot>t \\<sqsubseteq> y)\n 2. \\<And>n t x y.\n       (\\<And>t x y.\n           (C_take n\\<cdot>t \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n           (C_take n\\<cdot>t \\<sqsubseteq> x \\<and>\n            C_take n\\<cdot>t \\<sqsubseteq> y)) \\<Longrightarrow>\n       (C_take (Suc n)\\<cdot>t \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n       (C_take (Suc n)\\<cdot>t \\<sqsubseteq> x \\<and>\n        C_take (Suc n)\\<cdot>t \\<sqsubseteq> y)", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (C_take 0\\<cdot>t \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n    (C_take 0\\<cdot>t \\<sqsubseteq> x \\<and>\n     C_take 0\\<cdot>t \\<sqsubseteq> y)", "by auto"], ["proof (state)\nthis:\n  (C_take 0\\<cdot>t \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n  (C_take 0\\<cdot>t \\<sqsubseteq> x \\<and> C_take 0\\<cdot>t \\<sqsubseteq> y)\n\ngoal (1 subgoal):\n 1. \\<And>n t x y.\n       (\\<And>t x y.\n           (C_take n\\<cdot>t \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n           (C_take n\\<cdot>t \\<sqsubseteq> x \\<and>\n            C_take n\\<cdot>t \\<sqsubseteq> y)) \\<Longrightarrow>\n       (C_take (Suc n)\\<cdot>t \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n       (C_take (Suc n)\\<cdot>t \\<sqsubseteq> x \\<and>\n        C_take (Suc n)\\<cdot>t \\<sqsubseteq> y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n t x y.\n       (\\<And>t x y.\n           (C_take n\\<cdot>t \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n           (C_take n\\<cdot>t \\<sqsubseteq> x \\<and>\n            C_take n\\<cdot>t \\<sqsubseteq> y)) \\<Longrightarrow>\n       (C_take (Suc n)\\<cdot>t \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n       (C_take (Suc n)\\<cdot>t \\<sqsubseteq> x \\<and>\n        C_take (Suc n)\\<cdot>t \\<sqsubseteq> y)", "case (Suc n t x y)"], ["proof (state)\nthis:\n  (C_take n\\<cdot>?t \\<sqsubseteq> C_meet\\<cdot>?x\\<cdot>?y) =\n  (C_take n\\<cdot>?t \\<sqsubseteq> ?x \\<and>\n   C_take n\\<cdot>?t \\<sqsubseteq> ?y)\n\ngoal (1 subgoal):\n 1. \\<And>n t x y.\n       (\\<And>t x y.\n           (C_take n\\<cdot>t \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n           (C_take n\\<cdot>t \\<sqsubseteq> x \\<and>\n            C_take n\\<cdot>t \\<sqsubseteq> y)) \\<Longrightarrow>\n       (C_take (Suc n)\\<cdot>t \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n       (C_take (Suc n)\\<cdot>t \\<sqsubseteq> x \\<and>\n        C_take (Suc n)\\<cdot>t \\<sqsubseteq> y)", "with C.nchotomy[of t] C.nchotomy[of x] C.nchotomy[of y]"], ["proof (chain)\npicking this:\n  t = \\<bottom> \\<or> (\\<exists>Ca. t = C\\<cdot>Ca)\n  x = \\<bottom> \\<or> (\\<exists>Ca. x = C\\<cdot>Ca)\n  y = \\<bottom> \\<or> (\\<exists>Ca. y = C\\<cdot>Ca)\n  (C_take n\\<cdot>?t \\<sqsubseteq> C_meet\\<cdot>?x\\<cdot>?y) =\n  (C_take n\\<cdot>?t \\<sqsubseteq> ?x \\<and>\n   C_take n\\<cdot>?t \\<sqsubseteq> ?y)", "show ?case"], ["proof (prove)\nusing this:\n  t = \\<bottom> \\<or> (\\<exists>Ca. t = C\\<cdot>Ca)\n  x = \\<bottom> \\<or> (\\<exists>Ca. x = C\\<cdot>Ca)\n  y = \\<bottom> \\<or> (\\<exists>Ca. y = C\\<cdot>Ca)\n  (C_take n\\<cdot>?t \\<sqsubseteq> C_meet\\<cdot>?x\\<cdot>?y) =\n  (C_take n\\<cdot>?t \\<sqsubseteq> ?x \\<and>\n   C_take n\\<cdot>?t \\<sqsubseteq> ?y)\n\ngoal (1 subgoal):\n 1. (C_take (Suc n)\\<cdot>t \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n    (C_take (Suc n)\\<cdot>t \\<sqsubseteq> x \\<and>\n     C_take (Suc n)\\<cdot>t \\<sqsubseteq> y)", "by fastforce"], ["proof (state)\nthis:\n  (C_take (Suc n)\\<cdot>t \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n  (C_take (Suc n)\\<cdot>t \\<sqsubseteq> x \\<and>\n   C_take (Suc n)\\<cdot>t \\<sqsubseteq> y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (C_take n\\<cdot>t \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n  (C_take n\\<cdot>t \\<sqsubseteq> x \\<and> C_take n\\<cdot>t \\<sqsubseteq> y)\n\ngoal (1 subgoal):\n 1. adm (\\<lambda>a.\n            (a \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n            (a \\<sqsubseteq> x \\<and> a \\<sqsubseteq> y))", "qed auto"], ["proof (state)\nthis:\n  (t \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n  (t \\<sqsubseteq> x \\<and> t \\<sqsubseteq> y)\n\ngoal (3 subgoals):\n 1. \\<And>x y. ?l3 x y \\<sqsubseteq> x\n 2. \\<And>x y. ?l3 x y \\<sqsubseteq> y\n 3. \\<And>x y z.\n       \\<lbrakk>z \\<sqsubseteq> x; z \\<sqsubseteq> y\\<rbrakk>\n       \\<Longrightarrow> z \\<sqsubseteq> ?l3 x y", "}"], ["proof (state)\nthis:\n  (?t2 \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n  (?t2 \\<sqsubseteq> x \\<and> ?t2 \\<sqsubseteq> y)\n\ngoal (3 subgoals):\n 1. \\<And>x y. ?l3 x y \\<sqsubseteq> x\n 2. \\<And>x y. ?l3 x y \\<sqsubseteq> y\n 3. \\<And>x y z.\n       \\<lbrakk>z \\<sqsubseteq> x; z \\<sqsubseteq> y\\<rbrakk>\n       \\<Longrightarrow> z \\<sqsubseteq> ?l3 x y", "note * = this"], ["proof (state)\nthis:\n  (?t2 \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n  (?t2 \\<sqsubseteq> x \\<and> ?t2 \\<sqsubseteq> y)\n\ngoal (3 subgoals):\n 1. \\<And>x y. ?l3 x y \\<sqsubseteq> x\n 2. \\<And>x y. ?l3 x y \\<sqsubseteq> y\n 3. \\<And>x y z.\n       \\<lbrakk>z \\<sqsubseteq> x; z \\<sqsubseteq> y\\<rbrakk>\n       \\<Longrightarrow> z \\<sqsubseteq> ?l3 x y", "show \"C_meet\\<cdot>x\\<cdot>y \\<sqsubseteq> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C_meet\\<cdot>x\\<cdot>y \\<sqsubseteq> x", "using *"], ["proof (prove)\nusing this:\n  (?t2 \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n  (?t2 \\<sqsubseteq> x \\<and> ?t2 \\<sqsubseteq> y)\n\ngoal (1 subgoal):\n 1. C_meet\\<cdot>x\\<cdot>y \\<sqsubseteq> x", "by auto"], ["proof (state)\nthis:\n  C_meet\\<cdot>x\\<cdot>y \\<sqsubseteq> x\n\ngoal (2 subgoals):\n 1. \\<And>x y. C_meet\\<cdot>x\\<cdot>(?y12 x y) \\<sqsubseteq> y\n 2. \\<And>x y z.\n       \\<lbrakk>z \\<sqsubseteq> x; z \\<sqsubseteq> y\\<rbrakk>\n       \\<Longrightarrow> z \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>(?y12 x y)", "show \"C_meet\\<cdot>x\\<cdot>y \\<sqsubseteq> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C_meet\\<cdot>x\\<cdot>y \\<sqsubseteq> y", "using *"], ["proof (prove)\nusing this:\n  (?t2 \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n  (?t2 \\<sqsubseteq> x \\<and> ?t2 \\<sqsubseteq> y)\n\ngoal (1 subgoal):\n 1. C_meet\\<cdot>x\\<cdot>y \\<sqsubseteq> y", "by auto"], ["proof (state)\nthis:\n  C_meet\\<cdot>x\\<cdot>y \\<sqsubseteq> y\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>z \\<sqsubseteq> x; z \\<sqsubseteq> y\\<rbrakk>\n       \\<Longrightarrow> z \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>z \\<sqsubseteq> x; z \\<sqsubseteq> y\\<rbrakk>\n       \\<Longrightarrow> z \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y", "assume \"z \\<sqsubseteq> x\" and \"z \\<sqsubseteq> y\""], ["proof (state)\nthis:\n  z \\<sqsubseteq> x\n  z \\<sqsubseteq> y\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>z \\<sqsubseteq> x; z \\<sqsubseteq> y\\<rbrakk>\n       \\<Longrightarrow> z \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y", "thus \"z \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y\""], ["proof (prove)\nusing this:\n  z \\<sqsubseteq> x\n  z \\<sqsubseteq> y\n\ngoal (1 subgoal):\n 1. z \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y", "using *"], ["proof (prove)\nusing this:\n  z \\<sqsubseteq> x\n  z \\<sqsubseteq> y\n  (?t2 \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n  (?t2 \\<sqsubseteq> x \\<and> ?t2 \\<sqsubseteq> y)\n\ngoal (1 subgoal):\n 1. z \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y", "by auto"], ["proof (state)\nthis:\n  z \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "lemma C_meet_is_meet: \"(z \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) = (z \\<sqsubseteq> x \\<and> z \\<sqsubseteq> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (z \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n    (z \\<sqsubseteq> x \\<and> z \\<sqsubseteq> y)", "proof (induct z rule:C.take_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. adm (\\<lambda>a.\n            (a \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n            (a \\<sqsubseteq> x \\<and> a \\<sqsubseteq> y))\n 2. \\<And>n.\n       (C_take n\\<cdot>z \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n       (C_take n\\<cdot>z \\<sqsubseteq> x \\<and>\n        C_take n\\<cdot>z \\<sqsubseteq> y)", "fix n"], ["proof (state)\ngoal (2 subgoals):\n 1. adm (\\<lambda>a.\n            (a \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n            (a \\<sqsubseteq> x \\<and> a \\<sqsubseteq> y))\n 2. \\<And>n.\n       (C_take n\\<cdot>z \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n       (C_take n\\<cdot>z \\<sqsubseteq> x \\<and>\n        C_take n\\<cdot>z \\<sqsubseteq> y)", "show \"(C_take n\\<cdot>z \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) = (C_take n\\<cdot>z \\<sqsubseteq> x \\<and> C_take n\\<cdot>z \\<sqsubseteq> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (C_take n\\<cdot>z \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n    (C_take n\\<cdot>z \\<sqsubseteq> x \\<and>\n     C_take n\\<cdot>z \\<sqsubseteq> y)", "proof (induct n arbitrary: z x y rule:nat_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>z x y.\n       (C_take 0\\<cdot>z \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n       (C_take 0\\<cdot>z \\<sqsubseteq> x \\<and>\n        C_take 0\\<cdot>z \\<sqsubseteq> y)\n 2. \\<And>n z x y.\n       (\\<And>z x y.\n           (C_take n\\<cdot>z \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n           (C_take n\\<cdot>z \\<sqsubseteq> x \\<and>\n            C_take n\\<cdot>z \\<sqsubseteq> y)) \\<Longrightarrow>\n       (C_take (Suc n)\\<cdot>z \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n       (C_take (Suc n)\\<cdot>z \\<sqsubseteq> x \\<and>\n        C_take (Suc n)\\<cdot>z \\<sqsubseteq> y)", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>z x y.\n       (C_take 0\\<cdot>z \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n       (C_take 0\\<cdot>z \\<sqsubseteq> x \\<and>\n        C_take 0\\<cdot>z \\<sqsubseteq> y)\n 2. \\<And>n z x y.\n       (\\<And>z x y.\n           (C_take n\\<cdot>z \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n           (C_take n\\<cdot>z \\<sqsubseteq> x \\<and>\n            C_take n\\<cdot>z \\<sqsubseteq> y)) \\<Longrightarrow>\n       (C_take (Suc n)\\<cdot>z \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n       (C_take (Suc n)\\<cdot>z \\<sqsubseteq> x \\<and>\n        C_take (Suc n)\\<cdot>z \\<sqsubseteq> y)", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (C_take 0\\<cdot>z \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n    (C_take 0\\<cdot>z \\<sqsubseteq> x \\<and>\n     C_take 0\\<cdot>z \\<sqsubseteq> y)", "by auto"], ["proof (state)\nthis:\n  (C_take 0\\<cdot>z \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n  (C_take 0\\<cdot>z \\<sqsubseteq> x \\<and> C_take 0\\<cdot>z \\<sqsubseteq> y)\n\ngoal (1 subgoal):\n 1. \\<And>n z x y.\n       (\\<And>z x y.\n           (C_take n\\<cdot>z \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n           (C_take n\\<cdot>z \\<sqsubseteq> x \\<and>\n            C_take n\\<cdot>z \\<sqsubseteq> y)) \\<Longrightarrow>\n       (C_take (Suc n)\\<cdot>z \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n       (C_take (Suc n)\\<cdot>z \\<sqsubseteq> x \\<and>\n        C_take (Suc n)\\<cdot>z \\<sqsubseteq> y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n z x y.\n       (\\<And>z x y.\n           (C_take n\\<cdot>z \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n           (C_take n\\<cdot>z \\<sqsubseteq> x \\<and>\n            C_take n\\<cdot>z \\<sqsubseteq> y)) \\<Longrightarrow>\n       (C_take (Suc n)\\<cdot>z \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n       (C_take (Suc n)\\<cdot>z \\<sqsubseteq> x \\<and>\n        C_take (Suc n)\\<cdot>z \\<sqsubseteq> y)", "case (Suc n z x y)"], ["proof (state)\nthis:\n  (C_take n\\<cdot>?z \\<sqsubseteq> C_meet\\<cdot>?x\\<cdot>?y) =\n  (C_take n\\<cdot>?z \\<sqsubseteq> ?x \\<and>\n   C_take n\\<cdot>?z \\<sqsubseteq> ?y)\n\ngoal (1 subgoal):\n 1. \\<And>n z x y.\n       (\\<And>z x y.\n           (C_take n\\<cdot>z \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n           (C_take n\\<cdot>z \\<sqsubseteq> x \\<and>\n            C_take n\\<cdot>z \\<sqsubseteq> y)) \\<Longrightarrow>\n       (C_take (Suc n)\\<cdot>z \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n       (C_take (Suc n)\\<cdot>z \\<sqsubseteq> x \\<and>\n        C_take (Suc n)\\<cdot>z \\<sqsubseteq> y)", "thus ?case"], ["proof (prove)\nusing this:\n  (C_take n\\<cdot>?z \\<sqsubseteq> C_meet\\<cdot>?x\\<cdot>?y) =\n  (C_take n\\<cdot>?z \\<sqsubseteq> ?x \\<and>\n   C_take n\\<cdot>?z \\<sqsubseteq> ?y)\n\ngoal (1 subgoal):\n 1. (C_take (Suc n)\\<cdot>z \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n    (C_take (Suc n)\\<cdot>z \\<sqsubseteq> x \\<and>\n     C_take (Suc n)\\<cdot>z \\<sqsubseteq> y)", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z x y.\n        (C_take n\\<cdot>z \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n        (C_take n\\<cdot>z \\<sqsubseteq> x \\<and>\n         C_take n\\<cdot>z \\<sqsubseteq> y)) \\<Longrightarrow>\n    (C_take (Suc n)\\<cdot>z \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n    (C_take (Suc n)\\<cdot>z \\<sqsubseteq> x \\<and>\n     C_take (Suc n)\\<cdot>z \\<sqsubseteq> y)", "apply (cases z, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Ca.\n       \\<lbrakk>\\<And>z x y.\n                   (C_take n\\<cdot>z \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n                   (C_take n\\<cdot>z \\<sqsubseteq> x \\<and>\n                    C_take n\\<cdot>z \\<sqsubseteq> y);\n        z = C\\<cdot>Ca\\<rbrakk>\n       \\<Longrightarrow> (C_take (Suc n)\\<cdot>z \\<sqsubseteq>\n                          C_meet\\<cdot>x\\<cdot>y) =\n                         (C_take (Suc n)\\<cdot>z \\<sqsubseteq> x \\<and>\n                          C_take (Suc n)\\<cdot>z \\<sqsubseteq> y)", "apply (cases x, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Ca Caa.\n       \\<lbrakk>\\<And>z x y.\n                   (C_take n\\<cdot>z \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n                   (C_take n\\<cdot>z \\<sqsubseteq> x \\<and>\n                    C_take n\\<cdot>z \\<sqsubseteq> y);\n        z = C\\<cdot>Ca; x = C\\<cdot>Caa\\<rbrakk>\n       \\<Longrightarrow> (C_take (Suc n)\\<cdot>z \\<sqsubseteq>\n                          C_meet\\<cdot>x\\<cdot>y) =\n                         (C_take (Suc n)\\<cdot>z \\<sqsubseteq> x \\<and>\n                          C_take (Suc n)\\<cdot>z \\<sqsubseteq> y)", "apply (cases y, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Ca Caa Cb.\n       \\<lbrakk>\\<And>z x y.\n                   (C_take n\\<cdot>z \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n                   (C_take n\\<cdot>z \\<sqsubseteq> x \\<and>\n                    C_take n\\<cdot>z \\<sqsubseteq> y);\n        z = C\\<cdot>Ca; x = C\\<cdot>Caa; y = C\\<cdot>Cb\\<rbrakk>\n       \\<Longrightarrow> (C_take (Suc n)\\<cdot>z \\<sqsubseteq>\n                          C_meet\\<cdot>x\\<cdot>y) =\n                         (C_take (Suc n)\\<cdot>z \\<sqsubseteq> x \\<and>\n                          C_take (Suc n)\\<cdot>z \\<sqsubseteq> y)", "apply (fastforce simp add: cfun_below_iff)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (C_take (Suc n)\\<cdot>z \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n  (C_take (Suc n)\\<cdot>z \\<sqsubseteq> x \\<and>\n   C_take (Suc n)\\<cdot>z \\<sqsubseteq> y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (C_take n\\<cdot>z \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n  (C_take n\\<cdot>z \\<sqsubseteq> x \\<and> C_take n\\<cdot>z \\<sqsubseteq> y)\n\ngoal (1 subgoal):\n 1. adm (\\<lambda>a.\n            (a \\<sqsubseteq> C_meet\\<cdot>x\\<cdot>y) =\n            (a \\<sqsubseteq> x \\<and> a \\<sqsubseteq> y))", "qed auto"], ["", "instance C :: cont_binary_meet"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(C, cont_binary_meet_class)", "proof (standard, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Y y.\n       chain Y \\<Longrightarrow>\n       (\\<Squnion>i. Y i) \\<sqinter> y = (\\<Squnion>i. Y i \\<sqinter> y)", "have [simp]:\"\\<And> x y. x \\<sqinter> y = C_meet\\<cdot>x\\<cdot>y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y. x \\<sqinter> y = C_meet\\<cdot>x\\<cdot>y", "using C_meet_is_meet"], ["proof (prove)\nusing this:\n  (?z \\<sqsubseteq> C_meet\\<cdot>?x\\<cdot>?y) =\n  (?z \\<sqsubseteq> ?x \\<and> ?z \\<sqsubseteq> ?y)\n\ngoal (1 subgoal):\n 1. \\<And>x y. x \\<sqinter> y = C_meet\\<cdot>x\\<cdot>y", "by (blast intro: is_meetI)"], ["proof (state)\nthis:\n  ?x \\<sqinter> ?y = C_meet\\<cdot>?x\\<cdot>?y\n\ngoal (1 subgoal):\n 1. \\<And>Y y.\n       chain Y \\<Longrightarrow>\n       (\\<Squnion>i. Y i) \\<sqinter> y = (\\<Squnion>i. Y i \\<sqinter> y)", "case 1"], ["proof (state)\nthis:\n  chain Y_\n\ngoal (1 subgoal):\n 1. \\<And>Y y.\n       chain Y \\<Longrightarrow>\n       (\\<Squnion>i. Y i) \\<sqinter> y = (\\<Squnion>i. Y i \\<sqinter> y)", "thus ?case"], ["proof (prove)\nusing this:\n  chain Y_\n\ngoal (1 subgoal):\n 1. (\\<Squnion>i. Y_ i) \\<sqinter> y_ = (\\<Squnion>i. Y_ i \\<sqinter> y_)", "by (simp add: ch2ch_Rep_cfunR contlub_cfun_arg contlub_cfun_fun)"], ["proof (state)\nthis:\n  (\\<Squnion>i. Y_ i) \\<sqinter> y_ = (\\<Squnion>i. Y_ i \\<sqinter> y_)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma [simp]: \"C\\<cdot>r \\<sqinter> r = r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C\\<cdot>r \\<sqinter> r = r", "by (auto intro: is_meetI simp add: below_C)"], ["", "lemma [simp]: \"r \\<sqinter> C\\<cdot>r = r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<sqinter> C\\<cdot>r = r", "by (auto intro: is_meetI simp add: below_C)"], ["", "lemma [simp]: \"C\\<cdot>r \\<sqinter> C\\<cdot>r' = C\\<cdot>(r \\<sqinter> r')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C\\<cdot>r \\<sqinter> C\\<cdot>r' = C\\<cdot>(r \\<sqinter> r')", "apply (rule is_meetI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. C\\<cdot>(r \\<sqinter> r') \\<sqsubseteq> C\\<cdot>r\n 2. C\\<cdot>(r \\<sqinter> r') \\<sqsubseteq> C\\<cdot>r'\n 3. \\<And>a.\n       \\<lbrakk>a \\<sqsubseteq> C\\<cdot>r;\n        a \\<sqsubseteq> C\\<cdot>r'\\<rbrakk>\n       \\<Longrightarrow> a \\<sqsubseteq> C\\<cdot>(r \\<sqinter> r')", "apply (metis below_refl meet_below1 monofun_cfun_arg)"], ["proof (prove)\ngoal (2 subgoals):\n 1. C\\<cdot>(r \\<sqinter> r') \\<sqsubseteq> C\\<cdot>r'\n 2. \\<And>a.\n       \\<lbrakk>a \\<sqsubseteq> C\\<cdot>r;\n        a \\<sqsubseteq> C\\<cdot>r'\\<rbrakk>\n       \\<Longrightarrow> a \\<sqsubseteq> C\\<cdot>(r \\<sqinter> r')", "apply (metis below_refl meet_below2 monofun_cfun_arg)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>a \\<sqsubseteq> C\\<cdot>r;\n        a \\<sqsubseteq> C\\<cdot>r'\\<rbrakk>\n       \\<Longrightarrow> a \\<sqsubseteq> C\\<cdot>(r \\<sqinter> r')", "apply (case_tac a)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>a \\<sqsubseteq> C\\<cdot>r; a \\<sqsubseteq> C\\<cdot>r';\n        a = \\<bottom>\\<rbrakk>\n       \\<Longrightarrow> a \\<sqsubseteq> C\\<cdot>(r \\<sqinter> r')\n 2. \\<And>a Ca.\n       \\<lbrakk>a \\<sqsubseteq> C\\<cdot>r; a \\<sqsubseteq> C\\<cdot>r';\n        a = C\\<cdot>Ca\\<rbrakk>\n       \\<Longrightarrow> a \\<sqsubseteq> C\\<cdot>(r \\<sqinter> r')", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>C.\n       \\<lbrakk>C \\<sqsubseteq> r; C \\<sqsubseteq> r'\\<rbrakk>\n       \\<Longrightarrow> C \\<sqsubseteq> r \\<sqinter> r'", "by (metis meet_above_iff)"], ["", "end"]]}