{"file_name": "/home/qj213/afp-2021-10-22/thys/Launchbury/Mono-Nat-Fun.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Launchbury", "problem_names": ["lemma nat_mono_characterization:\n  fixes f :: \"nat \\<Rightarrow> nat\"\n  assumes \"mono f\"\n  obtains n where \"\\<And>m . n \\<le> m \\<Longrightarrow> f n = f m\" | \"\\<And> m . \\<exists> n . m \\<le> f n\""], "translations": [["", "lemma nat_mono_characterization:\n  fixes f :: \"nat \\<Rightarrow> nat\"\n  assumes \"mono f\"\n  obtains n where \"\\<And>m . n \\<le> m \\<Longrightarrow> f n = f m\" | \"\\<And> m . \\<exists> n . m \\<le> f n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n.\n                (\\<And>m.\n                    n \\<le> m \\<Longrightarrow> f n = f m) \\<Longrightarrow>\n                thesis;\n     (\\<And>m. \\<exists>n. m \\<le> f n) \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "proof (cases \"finite (range f)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>n.\n                (\\<And>m.\n                    n \\<le> m \\<Longrightarrow> f n = f m) \\<Longrightarrow>\n                thesis;\n     (\\<And>m. \\<exists>n. m \\<le> f n) \\<Longrightarrow> thesis;\n     finite (range f)\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>n.\n                (\\<And>m.\n                    n \\<le> m \\<Longrightarrow> f n = f m) \\<Longrightarrow>\n                thesis;\n     (\\<And>m. \\<exists>n. m \\<le> f n) \\<Longrightarrow> thesis;\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> thesis", "case True"], ["proof (state)\nthis:\n  finite (range f)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>n.\n                (\\<And>m.\n                    n \\<le> m \\<Longrightarrow> f n = f m) \\<Longrightarrow>\n                thesis;\n     (\\<And>m. \\<exists>n. m \\<le> f n) \\<Longrightarrow> thesis;\n     finite (range f)\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>n.\n                (\\<And>m.\n                    n \\<le> m \\<Longrightarrow> f n = f m) \\<Longrightarrow>\n                thesis;\n     (\\<And>m. \\<exists>n. m \\<le> f n) \\<Longrightarrow> thesis;\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> thesis", "from Max_in[OF True]"], ["proof (chain)\npicking this:\n  range f \\<noteq> {} \\<Longrightarrow> Max (range f) \\<in> range f", "obtain n where Max: \"f n = Max (range f)\""], ["proof (prove)\nusing this:\n  range f \\<noteq> {} \\<Longrightarrow> Max (range f) \\<in> range f\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        f n = Max (range f) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  f n = Max (range f)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>n.\n                (\\<And>m.\n                    n \\<le> m \\<Longrightarrow> f n = f m) \\<Longrightarrow>\n                thesis;\n     (\\<And>m. \\<exists>n. m \\<le> f n) \\<Longrightarrow> thesis;\n     finite (range f)\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>n.\n                (\\<And>m.\n                    n \\<le> m \\<Longrightarrow> f n = f m) \\<Longrightarrow>\n                thesis;\n     (\\<And>m. \\<exists>n. m \\<le> f n) \\<Longrightarrow> thesis;\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> thesis", "show thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof(rule that(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m. ?n \\<le> m \\<Longrightarrow> f ?n = f m", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m. ?n \\<le> m \\<Longrightarrow> f ?n = f m", "assume \"n \\<le> m\""], ["proof (state)\nthis:\n  n \\<le> m\n\ngoal (1 subgoal):\n 1. \\<And>m. ?n \\<le> m \\<Longrightarrow> f ?n = f m", "hence \"f n \\<le> f m\""], ["proof (prove)\nusing this:\n  n \\<le> m\n\ngoal (1 subgoal):\n 1. f n \\<le> f m", "using \\<open>mono f\\<close>"], ["proof (prove)\nusing this:\n  n \\<le> m\n  mono f\n\ngoal (1 subgoal):\n 1. f n \\<le> f m", "by (metis monoD)"], ["proof (state)\nthis:\n  f n \\<le> f m\n\ngoal (1 subgoal):\n 1. \\<And>m. ?n \\<le> m \\<Longrightarrow> f ?n = f m", "also"], ["proof (state)\nthis:\n  f n \\<le> f m\n\ngoal (1 subgoal):\n 1. \\<And>m. ?n \\<le> m \\<Longrightarrow> f ?n = f m", "have \"f m \\<le> f n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f m \\<le> f n", "unfolding Max"], ["proof (prove)\ngoal (1 subgoal):\n 1. f m \\<le> Max (range f)", "by (rule Max_ge[OF True rangeI])"], ["proof (state)\nthis:\n  f m \\<le> f n\n\ngoal (1 subgoal):\n 1. \\<And>m. ?n \\<le> m \\<Longrightarrow> f ?n = f m", "finally"], ["proof (chain)\npicking this:\n  f n = f m", "show \"f n = f m\""], ["proof (prove)\nusing this:\n  f n = f m\n\ngoal (1 subgoal):\n 1. f n = f m", "."], ["proof (state)\nthis:\n  f n = f m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n.\n                (\\<And>m.\n                    n \\<le> m \\<Longrightarrow> f n = f m) \\<Longrightarrow>\n                thesis;\n     (\\<And>m. \\<exists>n. m \\<le> f n) \\<Longrightarrow> thesis;\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n.\n                (\\<And>m.\n                    n \\<le> m \\<Longrightarrow> f n = f m) \\<Longrightarrow>\n                thesis;\n     (\\<And>m. \\<exists>n. m \\<le> f n) \\<Longrightarrow> thesis;\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> thesis", "case False"], ["proof (state)\nthis:\n  infinite (range f)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>n.\n                (\\<And>m.\n                    n \\<le> m \\<Longrightarrow> f n = f m) \\<Longrightarrow>\n                thesis;\n     (\\<And>m. \\<exists>n. m \\<le> f n) \\<Longrightarrow> thesis;\n     infinite (range f)\\<rbrakk>\n    \\<Longrightarrow> thesis", "thus thesis"], ["proof (prove)\nusing this:\n  infinite (range f)\n\ngoal (1 subgoal):\n 1. thesis", "by (fastforce intro: that(2) simp add: infinite_nat_iff_unbounded_le)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}