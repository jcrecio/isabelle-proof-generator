{"file_name": "/home/qj213/afp-2021-10-22/thys/Launchbury/Env-HOLCF.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Launchbury", "problem_names": ["lemma  override_on_belowI:\n  assumes \"\\<And> a. a \\<in> S \\<Longrightarrow> y a \\<sqsubseteq> z a\"\n  and \"\\<And> a. a \\<notin> S \\<Longrightarrow> x a \\<sqsubseteq> z a\"\n  shows  \"x ++\\<^bsub>S\\<^esub> y \\<sqsubseteq> z\"", "lemma override_on_cont1: \"cont (\\<lambda> x. x ++\\<^bsub>S\\<^esub> m)\"", "lemma override_on_cont2: \"cont (\\<lambda> x. m ++\\<^bsub>S\\<^esub> x)\"", "lemma override_on_cont2cont[simp, cont2cont]:\n  assumes \"cont f\"\n  assumes \"cont g\"\n  shows \"cont (\\<lambda> x. f x ++\\<^bsub>S\\<^esub> g x)\"", "lemma override_on_mono:\n  assumes \"x1 \\<sqsubseteq> (x2 :: 'a::type \\<Rightarrow> 'b::cpo)\"\n  assumes \"y1 \\<sqsubseteq> y2\"\n  shows \"x1 ++\\<^bsub>S\\<^esub> y1 \\<sqsubseteq> x2 ++\\<^bsub>S\\<^esub> y2\"", "lemma fun_upd_below_env_deleteI:\n  assumes \"env_delete x \\<rho> \\<sqsubseteq> env_delete x \\<rho>'\" \n  assumes \"y \\<sqsubseteq> \\<rho>' x\"\n  shows  \"\\<rho>(x := y) \\<sqsubseteq> \\<rho>'\"", "lemma fun_upd_belowI2:\n  assumes \"\\<And> z . z \\<noteq> x \\<Longrightarrow> \\<rho> z \\<sqsubseteq> \\<rho>' z\" \n  assumes \"\\<rho> x \\<sqsubseteq> y\"\n  shows  \"\\<rho> \\<sqsubseteq> \\<rho>'(x := y)\"", "lemma env_restr_belowI:\n  assumes  \"\\<And> x. x \\<in> S \\<Longrightarrow> (m1 f|` S) x \\<sqsubseteq> (m2 f|` S) x\"\n  shows \"m1 f|` S \\<sqsubseteq> m2 f|` S\"", "lemma env_restr_belowI2:\n  assumes  \"\\<And> x. x \\<in> S \\<Longrightarrow> m1 x \\<sqsubseteq> m2 x\"\n  shows \"m1 f|` S \\<sqsubseteq> m2\"", "lemma env_restr_below_itself:\n  shows \"m f|` S \\<sqsubseteq> m\"", "lemma env_restr_cont:  \"cont (env_restr S)\"", "lemma env_restr_belowD:\n  assumes \"m1 f|` S \\<sqsubseteq> m2 f|` S\"\n  assumes \"x \\<in> S\"\n  shows \"m1 x \\<sqsubseteq> m2 x\"", "lemma env_restr_eqD:\n  assumes \"m1 f|` S = m2 f|` S\"\n  assumes \"x \\<in> S\"\n  shows \"m1 x = m2  x\"", "lemma env_restr_below_subset:\n  assumes \"S \\<subseteq> S'\"\n  and \"m1 f|` S' \\<sqsubseteq> m2 f|` S'\"\n  shows \"m1 f|` S \\<sqsubseteq> m2 f|` S\"", "lemma  override_on_below_restrI:\n  assumes \" x f|` (-S) \\<sqsubseteq> z f|` (-S)\"\n  and \"y f|` S \\<sqsubseteq> z f|` S\"\n  shows  \"x ++\\<^bsub>S\\<^esub> y \\<sqsubseteq> z\"", "lemma  fmap_below_add_restrI:\n  assumes \"x f|` (-S) \\<sqsubseteq> y f|` (-S)\"\n  and     \"x f|` S \\<sqsubseteq> z f|` S\"\n  shows  \"x \\<sqsubseteq> y ++\\<^bsub>S\\<^esub> z\"", "lemmas env_restr_cont2cont[simp,cont2cont] = cont_compose[OF env_restr_cont]", "lemma env_delete_cont:  \"cont (env_delete x)\"", "lemmas env_delete_cont2cont[simp,cont2cont] = cont_compose[OF env_delete_cont]"], "translations": [["", "lemma  override_on_belowI:\n  assumes \"\\<And> a. a \\<in> S \\<Longrightarrow> y a \\<sqsubseteq> z a\"\n  and \"\\<And> a. a \\<notin> S \\<Longrightarrow> x a \\<sqsubseteq> z a\"\n  shows  \"x ++\\<^bsub>S\\<^esub> y \\<sqsubseteq> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ++\\<^bsub>S\\<^esub> y \\<sqsubseteq> z", "using assms"], ["proof (prove)\nusing this:\n  ?a \\<in> S \\<Longrightarrow> y ?a \\<sqsubseteq> z ?a\n  ?a \\<notin> S \\<Longrightarrow> x ?a \\<sqsubseteq> z ?a\n\ngoal (1 subgoal):\n 1. x ++\\<^bsub>S\\<^esub> y \\<sqsubseteq> z", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a. a \\<in> S \\<Longrightarrow> y a \\<sqsubseteq> z a;\n     \\<And>a. a \\<notin> S \\<Longrightarrow> x a \\<sqsubseteq> z a\\<rbrakk>\n    \\<Longrightarrow> x ++\\<^bsub>S\\<^esub> y \\<sqsubseteq> z", "apply (rule fun_belowI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>\\<And>a. a \\<in> S \\<Longrightarrow> y a \\<sqsubseteq> z a;\n        \\<And>a.\n           a \\<notin> S \\<Longrightarrow> x a \\<sqsubseteq> z a\\<rbrakk>\n       \\<Longrightarrow> (x ++\\<^bsub>S\\<^esub> y) xa \\<sqsubseteq> z xa", "apply (case_tac \"xa \\<in> S\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>\\<And>a. a \\<in> S \\<Longrightarrow> y a \\<sqsubseteq> z a;\n        \\<And>a. a \\<notin> S \\<Longrightarrow> x a \\<sqsubseteq> z a;\n        xa \\<in> S\\<rbrakk>\n       \\<Longrightarrow> (x ++\\<^bsub>S\\<^esub> y) xa \\<sqsubseteq> z xa\n 2. \\<And>xa.\n       \\<lbrakk>\\<And>a. a \\<in> S \\<Longrightarrow> y a \\<sqsubseteq> z a;\n        \\<And>a. a \\<notin> S \\<Longrightarrow> x a \\<sqsubseteq> z a;\n        xa \\<notin> S\\<rbrakk>\n       \\<Longrightarrow> (x ++\\<^bsub>S\\<^esub> y) xa \\<sqsubseteq> z xa", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma override_on_cont1: \"cont (\\<lambda> x. x ++\\<^bsub>S\\<^esub> m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cont (\\<lambda>x. x ++\\<^bsub>S\\<^esub> m)", "by (rule cont2cont_lambda) (auto simp add: override_on_def)"], ["", "lemma override_on_cont2: \"cont (\\<lambda> x. m ++\\<^bsub>S\\<^esub> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cont (override_on_syn m S)", "by (rule cont2cont_lambda) (auto simp add: override_on_def)"], ["", "lemma override_on_cont2cont[simp, cont2cont]:\n  assumes \"cont f\"\n  assumes \"cont g\"\n  shows \"cont (\\<lambda> x. f x ++\\<^bsub>S\\<^esub> g x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cont (\\<lambda>x. f x ++\\<^bsub>S\\<^esub> g x)", "by (rule cont_apply[OF assms(1) override_on_cont1 cont_compose[OF override_on_cont2 assms(2)]])"], ["", "lemma override_on_mono:\n  assumes \"x1 \\<sqsubseteq> (x2 :: 'a::type \\<Rightarrow> 'b::cpo)\"\n  assumes \"y1 \\<sqsubseteq> y2\"\n  shows \"x1 ++\\<^bsub>S\\<^esub> y1 \\<sqsubseteq> x2 ++\\<^bsub>S\\<^esub> y2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x1 ++\\<^bsub>S\\<^esub> y1 \\<sqsubseteq> x2 ++\\<^bsub>S\\<^esub> y2", "by (rule below_trans[OF cont2monofunE[OF override_on_cont1 assms(1)] cont2monofunE[OF override_on_cont2 assms(2)]])"], ["", "lemma fun_upd_below_env_deleteI:\n  assumes \"env_delete x \\<rho> \\<sqsubseteq> env_delete x \\<rho>'\" \n  assumes \"y \\<sqsubseteq> \\<rho>' x\"\n  shows  \"\\<rho>(x := y) \\<sqsubseteq> \\<rho>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rho>(x := y) \\<sqsubseteq> \\<rho>'", "using assms"], ["proof (prove)\nusing this:\n  env_delete x \\<rho> \\<sqsubseteq> env_delete x \\<rho>'\n  y \\<sqsubseteq> \\<rho>' x\n\ngoal (1 subgoal):\n 1. \\<rho>(x := y) \\<sqsubseteq> \\<rho>'", "apply (auto intro!: fun_upd_belowI   simp add: env_delete_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<lbrakk>\\<rho>(x := \\<bottom>) \\<sqsubseteq> \\<rho>'\n                (x := \\<bottom>);\n        y \\<sqsubseteq> \\<rho>' x; z \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<rho> z \\<sqsubseteq> \\<rho>' z", "by (metis fun_belowD fun_upd_other)"], ["", "lemma fun_upd_belowI2:\n  assumes \"\\<And> z . z \\<noteq> x \\<Longrightarrow> \\<rho> z \\<sqsubseteq> \\<rho>' z\" \n  assumes \"\\<rho> x \\<sqsubseteq> y\"\n  shows  \"\\<rho> \\<sqsubseteq> \\<rho>'(x := y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rho> \\<sqsubseteq> \\<rho>'(x := y)", "apply (rule fun_belowI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa. \\<rho> xa \\<sqsubseteq> (\\<rho>'(x := y)) xa", "using assms"], ["proof (prove)\nusing this:\n  ?z \\<noteq> x \\<Longrightarrow> \\<rho> ?z \\<sqsubseteq> \\<rho>' ?z\n  \\<rho> x \\<sqsubseteq> y\n\ngoal (1 subgoal):\n 1. \\<And>xa. \\<rho> xa \\<sqsubseteq> (\\<rho>'(x := y)) xa", "by auto"], ["", "lemma env_restr_belowI:\n  assumes  \"\\<And> x. x \\<in> S \\<Longrightarrow> (m1 f|` S) x \\<sqsubseteq> (m2 f|` S) x\"\n  shows \"m1 f|` S \\<sqsubseteq> m2 f|` S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m1 f|` S \\<sqsubseteq> m2 f|` S", "apply (rule fun_belowI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. (m1 f|` S) x \\<sqsubseteq> (m2 f|` S) x", "by (metis assms below_bottom_iff lookup_env_restr_not_there)"], ["", "lemma env_restr_belowI2:\n  assumes  \"\\<And> x. x \\<in> S \\<Longrightarrow> m1 x \\<sqsubseteq> m2 x\"\n  shows \"m1 f|` S \\<sqsubseteq> m2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m1 f|` S \\<sqsubseteq> m2", "by (rule fun_belowI)\n     (simp add: assms env_restr_def)"], ["", "lemma env_restr_below_itself:\n  shows \"m f|` S \\<sqsubseteq> m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m f|` S \\<sqsubseteq> m", "apply (rule fun_belowI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. (m f|` S) x \\<sqsubseteq> m x", "apply (case_tac \"x \\<in> S\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> S \\<Longrightarrow> (m f|` S) x \\<sqsubseteq> m x\n 2. \\<And>x. x \\<notin> S \\<Longrightarrow> (m f|` S) x \\<sqsubseteq> m x", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma env_restr_cont:  \"cont (env_restr S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cont (env_restr S)", "apply (rule cont2cont_lambda)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y. cont (\\<lambda>x. (x f|` S) y)", "apply (case_tac \"y \\<in> S\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y. y \\<in> S \\<Longrightarrow> cont (\\<lambda>x. (x f|` S) y)\n 2. \\<And>y. y \\<notin> S \\<Longrightarrow> cont (\\<lambda>x. (x f|` S) y)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma env_restr_belowD:\n  assumes \"m1 f|` S \\<sqsubseteq> m2 f|` S\"\n  assumes \"x \\<in> S\"\n  shows \"m1 x \\<sqsubseteq> m2 x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m1 x \\<sqsubseteq> m2 x", "using fun_belowD[OF assms(1), where x = x] assms(2)"], ["proof (prove)\nusing this:\n  (m1 f|` S) x \\<sqsubseteq> (m2 f|` S) x\n  x \\<in> S\n\ngoal (1 subgoal):\n 1. m1 x \\<sqsubseteq> m2 x", "by simp"], ["", "lemma env_restr_eqD:\n  assumes \"m1 f|` S = m2 f|` S\"\n  assumes \"x \\<in> S\"\n  shows \"m1 x = m2  x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m1 x = m2 x", "by (metis assms(1) assms(2) lookup_env_restr)"], ["", "lemma env_restr_below_subset:\n  assumes \"S \\<subseteq> S'\"\n  and \"m1 f|` S' \\<sqsubseteq> m2 f|` S'\"\n  shows \"m1 f|` S \\<sqsubseteq> m2 f|` S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m1 f|` S \\<sqsubseteq> m2 f|` S", "using assms"], ["proof (prove)\nusing this:\n  S \\<subseteq> S'\n  m1 f|` S' \\<sqsubseteq> m2 f|` S'\n\ngoal (1 subgoal):\n 1. m1 f|` S \\<sqsubseteq> m2 f|` S", "by (auto intro!: env_restr_belowI dest: env_restr_belowD)"], ["", "lemma  override_on_below_restrI:\n  assumes \" x f|` (-S) \\<sqsubseteq> z f|` (-S)\"\n  and \"y f|` S \\<sqsubseteq> z f|` S\"\n  shows  \"x ++\\<^bsub>S\\<^esub> y \\<sqsubseteq> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ++\\<^bsub>S\\<^esub> y \\<sqsubseteq> z", "using assms"], ["proof (prove)\nusing this:\n  x f|` (- S) \\<sqsubseteq> z f|` (- S)\n  y f|` S \\<sqsubseteq> z f|` S\n\ngoal (1 subgoal):\n 1. x ++\\<^bsub>S\\<^esub> y \\<sqsubseteq> z", "by (auto intro: override_on_belowI dest:env_restr_belowD)"], ["", "lemma  fmap_below_add_restrI:\n  assumes \"x f|` (-S) \\<sqsubseteq> y f|` (-S)\"\n  and     \"x f|` S \\<sqsubseteq> z f|` S\"\n  shows  \"x \\<sqsubseteq> y ++\\<^bsub>S\\<^esub> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sqsubseteq> y ++\\<^bsub>S\\<^esub> z", "using assms"], ["proof (prove)\nusing this:\n  x f|` (- S) \\<sqsubseteq> y f|` (- S)\n  x f|` S \\<sqsubseteq> z f|` S\n\ngoal (1 subgoal):\n 1. x \\<sqsubseteq> y ++\\<^bsub>S\\<^esub> z", "by (auto intro!: fun_belowI dest:env_restr_belowD simp add: lookup_override_on_eq)"], ["", "lemmas env_restr_cont2cont[simp,cont2cont] = cont_compose[OF env_restr_cont]"], ["", "lemma env_delete_cont:  \"cont (env_delete x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cont (env_delete x)", "apply (rule cont2cont_lambda)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y. cont (\\<lambda>xa. env_delete x xa y)", "apply (case_tac \"y = x\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y. y = x \\<Longrightarrow> cont (\\<lambda>xa. env_delete x xa y)\n 2. \\<And>y.\n       y \\<noteq> x \\<Longrightarrow> cont (\\<lambda>xa. env_delete x xa y)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemmas env_delete_cont2cont[simp,cont2cont] = cont_compose[OF env_delete_cont]"], ["", "end"]]}