{"file_name": "/home/qj213/afp-2021-10-22/thys/Launchbury/Value.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Launchbury", "problem_names": ["lemma [simp]:\n  \"\\<bottom> \\<down>Fn x = \\<bottom>\"\n  \"(B\\<cdot>b) \\<down>Fn x = \\<bottom>\"", "lemma [simp]:\n  \"B_project\\<cdot>(B\\<cdot>(Discr b))\\<cdot>v\\<^sub>1\\<cdot>v\\<^sub>2 = (if b then v\\<^sub>1 else v\\<^sub>2)\"\n  \"B_project\\<cdot>\\<bottom>\\<cdot>v\\<^sub>1\\<cdot>v\\<^sub>2 = \\<bottom>\"\n  \"B_project\\<cdot>(Fn\\<cdot>f)\\<cdot>v\\<^sub>1\\<cdot>v\\<^sub>2 = \\<bottom>\"", "lemma Value_chainE[consumes 1, case_names bot B Fn]:\n  assumes \"chain Y\"\n  obtains \"Y = (\\<lambda> _ . \\<bottom>)\" |\n          n b where \"Y = (\\<lambda> m. (if m < n then \\<bottom> else B\\<cdot>b))\" |\n          n Y' where \"Y = (\\<lambda> m. (if m < n then \\<bottom> else Fn\\<cdot>(Y' (m-n))))\" \"chain Y'\""], "translations": [["", "lemma [simp]:\n  \"\\<bottom> \\<down>Fn x = \\<bottom>\"\n  \"(B\\<cdot>b) \\<down>Fn x = \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bottom> \\<down>Fn x = \\<bottom> &&& B\\<cdot>b \\<down>Fn x = \\<bottom>", "by (fixrec_simp)+"], ["", "fixrec B_project :: \"Value \\<rightarrow> Value \\<rightarrow> Value \\<rightarrow> Value\" where\n  \"B_project\\<cdot>(B\\<cdot>db)\\<cdot>v\\<^sub>1\\<cdot>v\\<^sub>2 = (if undiscr db then v\\<^sub>1 else v\\<^sub>2)\""], ["", "lemma [simp]:\n  \"B_project\\<cdot>(B\\<cdot>(Discr b))\\<cdot>v\\<^sub>1\\<cdot>v\\<^sub>2 = (if b then v\\<^sub>1 else v\\<^sub>2)\"\n  \"B_project\\<cdot>\\<bottom>\\<cdot>v\\<^sub>1\\<cdot>v\\<^sub>2 = \\<bottom>\"\n  \"B_project\\<cdot>(Fn\\<cdot>f)\\<cdot>v\\<^sub>1\\<cdot>v\\<^sub>2 = \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B_project\\<cdot>(B\\<cdot>(Discr b))\\<cdot>v\\<^sub>1\\<cdot>v\\<^sub>2 =\n    (if b then v\\<^sub>1 else v\\<^sub>2) &&&\n    B_project\\<cdot>\\<bottom>\\<cdot>v\\<^sub>1\\<cdot>v\\<^sub>2 =\n    \\<bottom> &&&\n    B_project\\<cdot>(Fn\\<cdot>f)\\<cdot>v\\<^sub>1\\<cdot>v\\<^sub>2 = \\<bottom>", "by fixrec_simp+"], ["", "text \\<open>\nA chain in the domain @{typ Value} is either always bottom, or eventually @{term \"Fn\"} of another\nchain\n\\<close>"], ["", "lemma Value_chainE[consumes 1, case_names bot B Fn]:\n  assumes \"chain Y\"\n  obtains \"Y = (\\<lambda> _ . \\<bottom>)\" |\n          n b where \"Y = (\\<lambda> m. (if m < n then \\<bottom> else B\\<cdot>b))\" |\n          n Y' where \"Y = (\\<lambda> m. (if m < n then \\<bottom> else Fn\\<cdot>(Y' (m-n))))\" \"chain Y'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Y = (\\<lambda>_. \\<bottom>) \\<Longrightarrow> thesis;\n     \\<And>n b.\n        Y =\n        (\\<lambda>m.\n            if m < n then \\<bottom> else B\\<cdot>b) \\<Longrightarrow>\n        thesis;\n     \\<And>n Y'.\n        \\<lbrakk>Y =\n                 (\\<lambda>m.\n                     if m < n then \\<bottom> else Fn\\<cdot>(Y' (m - n)));\n         chain Y'\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "proof(cases \"Y = (\\<lambda> _ . \\<bottom>)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>Y = (\\<lambda>_. \\<bottom>) \\<Longrightarrow> thesis;\n     \\<And>n b.\n        Y =\n        (\\<lambda>m.\n            if m < n then \\<bottom> else B\\<cdot>b) \\<Longrightarrow>\n        thesis;\n     \\<And>n Y'.\n        \\<lbrakk>Y =\n                 (\\<lambda>m.\n                     if m < n then \\<bottom> else Fn\\<cdot>(Y' (m - n)));\n         chain Y'\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     Y = (\\<lambda>_. \\<bottom>)\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>Y = (\\<lambda>_. \\<bottom>) \\<Longrightarrow> thesis;\n     \\<And>n b.\n        Y =\n        (\\<lambda>m.\n            if m < n then \\<bottom> else B\\<cdot>b) \\<Longrightarrow>\n        thesis;\n     \\<And>n Y'.\n        \\<lbrakk>Y =\n                 (\\<lambda>m.\n                     if m < n then \\<bottom> else Fn\\<cdot>(Y' (m - n)));\n         chain Y'\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     Y \\<noteq> (\\<lambda>_. \\<bottom>)\\<rbrakk>\n    \\<Longrightarrow> thesis", "case True"], ["proof (state)\nthis:\n  Y = (\\<lambda>_. \\<bottom>)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Y = (\\<lambda>_. \\<bottom>) \\<Longrightarrow> thesis;\n     \\<And>n b.\n        Y =\n        (\\<lambda>m.\n            if m < n then \\<bottom> else B\\<cdot>b) \\<Longrightarrow>\n        thesis;\n     \\<And>n Y'.\n        \\<lbrakk>Y =\n                 (\\<lambda>m.\n                     if m < n then \\<bottom> else Fn\\<cdot>(Y' (m - n)));\n         chain Y'\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     Y = (\\<lambda>_. \\<bottom>)\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>Y = (\\<lambda>_. \\<bottom>) \\<Longrightarrow> thesis;\n     \\<And>n b.\n        Y =\n        (\\<lambda>m.\n            if m < n then \\<bottom> else B\\<cdot>b) \\<Longrightarrow>\n        thesis;\n     \\<And>n Y'.\n        \\<lbrakk>Y =\n                 (\\<lambda>m.\n                     if m < n then \\<bottom> else Fn\\<cdot>(Y' (m - n)));\n         chain Y'\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     Y \\<noteq> (\\<lambda>_. \\<bottom>)\\<rbrakk>\n    \\<Longrightarrow> thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  Y = (\\<lambda>_. \\<bottom>)\n\ngoal (1 subgoal):\n 1. thesis", "by (rule that(1))"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Y = (\\<lambda>_. \\<bottom>) \\<Longrightarrow> thesis;\n     \\<And>n b.\n        Y =\n        (\\<lambda>m.\n            if m < n then \\<bottom> else B\\<cdot>b) \\<Longrightarrow>\n        thesis;\n     \\<And>n Y'.\n        \\<lbrakk>Y =\n                 (\\<lambda>m.\n                     if m < n then \\<bottom> else Fn\\<cdot>(Y' (m - n)));\n         chain Y'\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     Y \\<noteq> (\\<lambda>_. \\<bottom>)\\<rbrakk>\n    \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>Y = (\\<lambda>_. \\<bottom>) \\<Longrightarrow> thesis;\n     \\<And>n b.\n        Y =\n        (\\<lambda>m.\n            if m < n then \\<bottom> else B\\<cdot>b) \\<Longrightarrow>\n        thesis;\n     \\<And>n Y'.\n        \\<lbrakk>Y =\n                 (\\<lambda>m.\n                     if m < n then \\<bottom> else Fn\\<cdot>(Y' (m - n)));\n         chain Y'\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     Y \\<noteq> (\\<lambda>_. \\<bottom>)\\<rbrakk>\n    \\<Longrightarrow> thesis", "case False"], ["proof (state)\nthis:\n  Y \\<noteq> (\\<lambda>_. \\<bottom>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Y = (\\<lambda>_. \\<bottom>) \\<Longrightarrow> thesis;\n     \\<And>n b.\n        Y =\n        (\\<lambda>m.\n            if m < n then \\<bottom> else B\\<cdot>b) \\<Longrightarrow>\n        thesis;\n     \\<And>n Y'.\n        \\<lbrakk>Y =\n                 (\\<lambda>m.\n                     if m < n then \\<bottom> else Fn\\<cdot>(Y' (m - n)));\n         chain Y'\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     Y \\<noteq> (\\<lambda>_. \\<bottom>)\\<rbrakk>\n    \\<Longrightarrow> thesis", "hence \"\\<exists> i. Y i \\<noteq> \\<bottom>\""], ["proof (prove)\nusing this:\n  Y \\<noteq> (\\<lambda>_. \\<bottom>)\n\ngoal (1 subgoal):\n 1. \\<exists>i. Y i \\<noteq> \\<bottom>", "by auto"], ["proof (state)\nthis:\n  \\<exists>i. Y i \\<noteq> \\<bottom>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Y = (\\<lambda>_. \\<bottom>) \\<Longrightarrow> thesis;\n     \\<And>n b.\n        Y =\n        (\\<lambda>m.\n            if m < n then \\<bottom> else B\\<cdot>b) \\<Longrightarrow>\n        thesis;\n     \\<And>n Y'.\n        \\<lbrakk>Y =\n                 (\\<lambda>m.\n                     if m < n then \\<bottom> else Fn\\<cdot>(Y' (m - n)));\n         chain Y'\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     Y \\<noteq> (\\<lambda>_. \\<bottom>)\\<rbrakk>\n    \\<Longrightarrow> thesis", "hence \"\\<exists> n. Y n \\<noteq> \\<bottom> \\<and> (\\<forall>m. Y m \\<noteq> \\<bottom> \\<longrightarrow> m \\<ge> n)\""], ["proof (prove)\nusing this:\n  \\<exists>i. Y i \\<noteq> \\<bottom>\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       Y n \\<noteq> \\<bottom> \\<and>\n       (\\<forall>m. Y m \\<noteq> \\<bottom> \\<longrightarrow> n \\<le> m)", "by (rule exE)(rule ex_has_least_nat)"], ["proof (state)\nthis:\n  \\<exists>n.\n     Y n \\<noteq> \\<bottom> \\<and>\n     (\\<forall>m. Y m \\<noteq> \\<bottom> \\<longrightarrow> n \\<le> m)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Y = (\\<lambda>_. \\<bottom>) \\<Longrightarrow> thesis;\n     \\<And>n b.\n        Y =\n        (\\<lambda>m.\n            if m < n then \\<bottom> else B\\<cdot>b) \\<Longrightarrow>\n        thesis;\n     \\<And>n Y'.\n        \\<lbrakk>Y =\n                 (\\<lambda>m.\n                     if m < n then \\<bottom> else Fn\\<cdot>(Y' (m - n)));\n         chain Y'\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     Y \\<noteq> (\\<lambda>_. \\<bottom>)\\<rbrakk>\n    \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  \\<exists>n.\n     Y n \\<noteq> \\<bottom> \\<and>\n     (\\<forall>m. Y m \\<noteq> \\<bottom> \\<longrightarrow> n \\<le> m)", "obtain n where \"Y n \\<noteq> \\<bottom>\" and \"\\<forall>m. m < n \\<longrightarrow> Y m = \\<bottom>\""], ["proof (prove)\nusing this:\n  \\<exists>n.\n     Y n \\<noteq> \\<bottom> \\<and>\n     (\\<forall>m. Y m \\<noteq> \\<bottom> \\<longrightarrow> n \\<le> m)\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>Y n \\<noteq> \\<bottom>;\n         \\<forall>m<n. Y m = \\<bottom>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  Y n \\<noteq> \\<bottom>\n  \\<forall>m<n. Y m = \\<bottom>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Y = (\\<lambda>_. \\<bottom>) \\<Longrightarrow> thesis;\n     \\<And>n b.\n        Y =\n        (\\<lambda>m.\n            if m < n then \\<bottom> else B\\<cdot>b) \\<Longrightarrow>\n        thesis;\n     \\<And>n Y'.\n        \\<lbrakk>Y =\n                 (\\<lambda>m.\n                     if m < n then \\<bottom> else Fn\\<cdot>(Y' (m - n)));\n         chain Y'\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     Y \\<noteq> (\\<lambda>_. \\<bottom>)\\<rbrakk>\n    \\<Longrightarrow> thesis", "hence \"(\\<exists> f. Y n = Fn\\<cdot>f) \\<or> (\\<exists> b. Y n = B\\<cdot>b)\""], ["proof (prove)\nusing this:\n  Y n \\<noteq> \\<bottom>\n  \\<forall>m<n. Y m = \\<bottom>\n\ngoal (1 subgoal):\n 1. (\\<exists>f. Y n = Fn\\<cdot>f) \\<or> (\\<exists>b. Y n = B\\<cdot>b)", "by (metis Value.exhaust)"], ["proof (state)\nthis:\n  (\\<exists>f. Y n = Fn\\<cdot>f) \\<or> (\\<exists>b. Y n = B\\<cdot>b)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Y = (\\<lambda>_. \\<bottom>) \\<Longrightarrow> thesis;\n     \\<And>n b.\n        Y =\n        (\\<lambda>m.\n            if m < n then \\<bottom> else B\\<cdot>b) \\<Longrightarrow>\n        thesis;\n     \\<And>n Y'.\n        \\<lbrakk>Y =\n                 (\\<lambda>m.\n                     if m < n then \\<bottom> else Fn\\<cdot>(Y' (m - n)));\n         chain Y'\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     Y \\<noteq> (\\<lambda>_. \\<bottom>)\\<rbrakk>\n    \\<Longrightarrow> thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<exists>f. Y n = Fn\\<cdot>f) \\<or> (\\<exists>b. Y n = B\\<cdot>b)\n\ngoal (1 subgoal):\n 1. thesis", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>f. Y n = Fn\\<cdot>f \\<Longrightarrow> thesis\n 2. \\<exists>b. Y n = B\\<cdot>b \\<Longrightarrow> thesis", "assume \"(\\<exists> f. Y n = Fn\\<cdot>f)\""], ["proof (state)\nthis:\n  \\<exists>f. Y n = Fn\\<cdot>f\n\ngoal (2 subgoals):\n 1. \\<exists>f. Y n = Fn\\<cdot>f \\<Longrightarrow> thesis\n 2. \\<exists>b. Y n = B\\<cdot>b \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  \\<exists>f. Y n = Fn\\<cdot>f", "obtain f where \"Y n = Fn \\<cdot> f\""], ["proof (prove)\nusing this:\n  \\<exists>f. Y n = Fn\\<cdot>f\n\ngoal (1 subgoal):\n 1. (\\<And>f. Y n = Fn\\<cdot>f \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Y n = Fn\\<cdot>f\n\ngoal (2 subgoals):\n 1. \\<exists>f. Y n = Fn\\<cdot>f \\<Longrightarrow> thesis\n 2. \\<exists>b. Y n = B\\<cdot>b \\<Longrightarrow> thesis", "{"], ["proof (state)\nthis:\n  Y n = Fn\\<cdot>f\n\ngoal (2 subgoals):\n 1. \\<exists>f. Y n = Fn\\<cdot>f \\<Longrightarrow> thesis\n 2. \\<exists>b. Y n = B\\<cdot>b \\<Longrightarrow> thesis", "fix i"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>f. Y n = Fn\\<cdot>f \\<Longrightarrow> thesis\n 2. \\<exists>b. Y n = B\\<cdot>b \\<Longrightarrow> thesis", "from \\<open>chain Y\\<close>"], ["proof (chain)\npicking this:\n  chain Y", "have \"Y n \\<sqsubseteq> Y (i+n)\""], ["proof (prove)\nusing this:\n  chain Y\n\ngoal (1 subgoal):\n 1. Y n \\<sqsubseteq> Y (i + n)", "by (metis chain_mono le_add2)"], ["proof (state)\nthis:\n  Y n \\<sqsubseteq> Y (i + n)\n\ngoal (2 subgoals):\n 1. \\<exists>f. Y n = Fn\\<cdot>f \\<Longrightarrow> thesis\n 2. \\<exists>b. Y n = B\\<cdot>b \\<Longrightarrow> thesis", "with \\<open>Y n = _\\<close>"], ["proof (chain)\npicking this:\n  Y n = Fn\\<cdot>f\n  Y n \\<sqsubseteq> Y (i + n)", "have \"\\<exists> g. (Y (i+n) = Fn \\<cdot> g)\""], ["proof (prove)\nusing this:\n  Y n = Fn\\<cdot>f\n  Y n \\<sqsubseteq> Y (i + n)\n\ngoal (1 subgoal):\n 1. \\<exists>g. Y (i + n) = Fn\\<cdot>g", "by (metis Value.dist_les(1) Value.exhaust below_bottom_iff)"], ["proof (state)\nthis:\n  \\<exists>g. Y (i + n) = Fn\\<cdot>g\n\ngoal (2 subgoals):\n 1. \\<exists>f. Y n = Fn\\<cdot>f \\<Longrightarrow> thesis\n 2. \\<exists>b. Y n = B\\<cdot>b \\<Longrightarrow> thesis", "}"], ["proof (state)\nthis:\n  \\<exists>g. Y (?i2 + n) = Fn\\<cdot>g\n\ngoal (2 subgoals):\n 1. \\<exists>f. Y n = Fn\\<cdot>f \\<Longrightarrow> thesis\n 2. \\<exists>b. Y n = B\\<cdot>b \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  \\<exists>g. Y (?i2 + n) = Fn\\<cdot>g", "obtain Y' where Y': \"\\<And> i. Y (i + n) = Fn \\<cdot> (Y' i)\""], ["proof (prove)\nusing this:\n  \\<exists>g. Y (?i2 + n) = Fn\\<cdot>g\n\ngoal (1 subgoal):\n 1. (\\<And>Y'.\n        (\\<And>i. Y (i + n) = Fn\\<cdot>(Y' i)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  Y (?i + n) = Fn\\<cdot>(Y' ?i)\n\ngoal (2 subgoals):\n 1. \\<exists>f. Y n = Fn\\<cdot>f \\<Longrightarrow> thesis\n 2. \\<exists>b. Y n = B\\<cdot>b \\<Longrightarrow> thesis", "have \"Y = (\\<lambda>m. if m < n then \\<bottom> else Fn\\<cdot>(Y' (m - n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Y = (\\<lambda>m. if m < n then \\<bottom> else Fn\\<cdot>(Y' (m - n)))", "using \\<open>\\<forall>m. _\\<close> Y'"], ["proof (prove)\nusing this:\n  \\<forall>m<n. Y m = \\<bottom>\n  Y (?i + n) = Fn\\<cdot>(Y' ?i)\n\ngoal (1 subgoal):\n 1. Y = (\\<lambda>m. if m < n then \\<bottom> else Fn\\<cdot>(Y' (m - n)))", "by (metis add_diff_inverse add.commute)"], ["proof (state)\nthis:\n  Y = (\\<lambda>m. if m < n then \\<bottom> else Fn\\<cdot>(Y' (m - n)))\n\ngoal (2 subgoals):\n 1. \\<exists>f. Y n = Fn\\<cdot>f \\<Longrightarrow> thesis\n 2. \\<exists>b. Y n = B\\<cdot>b \\<Longrightarrow> thesis", "moreover"], ["proof (state)\nthis:\n  Y = (\\<lambda>m. if m < n then \\<bottom> else Fn\\<cdot>(Y' (m - n)))\n\ngoal (2 subgoals):\n 1. \\<exists>f. Y n = Fn\\<cdot>f \\<Longrightarrow> thesis\n 2. \\<exists>b. Y n = B\\<cdot>b \\<Longrightarrow> thesis", "have\"chain Y'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chain Y'", "using \\<open>chain Y\\<close>"], ["proof (prove)\nusing this:\n  chain Y\n\ngoal (1 subgoal):\n 1. chain Y'", "by (auto intro!:chainI elim: chainE  simp add: Value.inverts[symmetric] Y'[symmetric] simp del: Value.inverts)"], ["proof (state)\nthis:\n  chain Y'\n\ngoal (2 subgoals):\n 1. \\<exists>f. Y n = Fn\\<cdot>f \\<Longrightarrow> thesis\n 2. \\<exists>b. Y n = B\\<cdot>b \\<Longrightarrow> thesis", "ultimately"], ["proof (chain)\npicking this:\n  Y = (\\<lambda>m. if m < n then \\<bottom> else Fn\\<cdot>(Y' (m - n)))\n  chain Y'", "show ?thesis"], ["proof (prove)\nusing this:\n  Y = (\\<lambda>m. if m < n then \\<bottom> else Fn\\<cdot>(Y' (m - n)))\n  chain Y'\n\ngoal (1 subgoal):\n 1. thesis", "by (rule that(3))"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<exists>b. Y n = B\\<cdot>b \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>b. Y n = B\\<cdot>b \\<Longrightarrow> thesis", "assume \"(\\<exists> b. Y n = B\\<cdot>b)\""], ["proof (state)\nthis:\n  \\<exists>b. Y n = B\\<cdot>b\n\ngoal (1 subgoal):\n 1. \\<exists>b. Y n = B\\<cdot>b \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  \\<exists>b. Y n = B\\<cdot>b", "obtain b where \"Y n = B\\<cdot>b\""], ["proof (prove)\nusing this:\n  \\<exists>b. Y n = B\\<cdot>b\n\ngoal (1 subgoal):\n 1. (\\<And>b. Y n = B\\<cdot>b \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Y n = B\\<cdot>b\n\ngoal (1 subgoal):\n 1. \\<exists>b. Y n = B\\<cdot>b \\<Longrightarrow> thesis", "{"], ["proof (state)\nthis:\n  Y n = B\\<cdot>b\n\ngoal (1 subgoal):\n 1. \\<exists>b. Y n = B\\<cdot>b \\<Longrightarrow> thesis", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>b. Y n = B\\<cdot>b \\<Longrightarrow> thesis", "from \\<open>chain Y\\<close>"], ["proof (chain)\npicking this:\n  chain Y", "have \"Y n \\<sqsubseteq> Y (i+n)\""], ["proof (prove)\nusing this:\n  chain Y\n\ngoal (1 subgoal):\n 1. Y n \\<sqsubseteq> Y (i + n)", "by (metis chain_mono le_add2)"], ["proof (state)\nthis:\n  Y n \\<sqsubseteq> Y (i + n)\n\ngoal (1 subgoal):\n 1. \\<exists>b. Y n = B\\<cdot>b \\<Longrightarrow> thesis", "with \\<open>Y n = _\\<close>"], ["proof (chain)\npicking this:\n  Y n = B\\<cdot>b\n  Y n \\<sqsubseteq> Y (i + n)", "have \"Y (i+n) = B\\<cdot>b\""], ["proof (prove)\nusing this:\n  Y n = B\\<cdot>b\n  Y n \\<sqsubseteq> Y (i + n)\n\ngoal (1 subgoal):\n 1. Y (i + n) = B\\<cdot>b", "by (metis Value.dist_les(2) Value.exhaust Value.inverts(2) below_bottom_iff discrete_cpo)"], ["proof (state)\nthis:\n  Y (i + n) = B\\<cdot>b\n\ngoal (1 subgoal):\n 1. \\<exists>b. Y n = B\\<cdot>b \\<Longrightarrow> thesis", "}"], ["proof (state)\nthis:\n  Y (?i2 + n) = B\\<cdot>b\n\ngoal (1 subgoal):\n 1. \\<exists>b. Y n = B\\<cdot>b \\<Longrightarrow> thesis", "hence  Y': \"\\<And> i. Y (i + n) = B\\<cdot>b\""], ["proof (prove)\nusing this:\n  Y (?i2 + n) = B\\<cdot>b\n\ngoal (1 subgoal):\n 1. \\<And>i. Y (i + n) = B\\<cdot>b", "by metis"], ["proof (state)\nthis:\n  Y (?i + n) = B\\<cdot>b\n\ngoal (1 subgoal):\n 1. \\<exists>b. Y n = B\\<cdot>b \\<Longrightarrow> thesis", "have \"Y = (\\<lambda>m. if m < n then \\<bottom> else B\\<cdot>b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Y = (\\<lambda>m. if m < n then \\<bottom> else B\\<cdot>b)", "using \\<open>\\<forall>m. _\\<close> Y'"], ["proof (prove)\nusing this:\n  \\<forall>m<n. Y m = \\<bottom>\n  Y (?i + n) = B\\<cdot>b\n\ngoal (1 subgoal):\n 1. Y = (\\<lambda>m. if m < n then \\<bottom> else B\\<cdot>b)", "by (metis add_diff_inverse add.commute)"], ["proof (state)\nthis:\n  Y = (\\<lambda>m. if m < n then \\<bottom> else B\\<cdot>b)\n\ngoal (1 subgoal):\n 1. \\<exists>b. Y n = B\\<cdot>b \\<Longrightarrow> thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  Y = (\\<lambda>m. if m < n then \\<bottom> else B\\<cdot>b)\n\ngoal (1 subgoal):\n 1. thesis", "by (rule that(2))"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}