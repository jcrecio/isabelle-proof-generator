{"file_name": "/home/qj213/afp-2021-10-22/thys/Launchbury/HeapSemantics.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Launchbury", "problem_names": ["lemma HSem_def': \"\\<lbrace>\\<Gamma>\\<rbrace>\\<rho> = (\\<mu> \\<rho>'. \\<rho> ++\\<^bsub>domA \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk>\\<Gamma>\\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)\"", "lemma HSem_ind:\n  assumes \"adm P\"\n  assumes \"P \\<bottom>\"\n  assumes step: \"\\<And> \\<rho>'. P \\<rho>' \\<Longrightarrow>  P (\\<rho> ++\\<^bsub>domA \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk>\\<Gamma>\\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)\"\n  shows \"P (\\<lbrace>\\<Gamma>\\<rbrace>\\<rho>)\"", "lemma HSem_below:\n  assumes rho: \"\\<And>x. x \\<notin> domA h \\<Longrightarrow> \\<rho> x \\<sqsubseteq> r x\"\n  assumes h: \"\\<And>x. x \\<in> domA h \\<Longrightarrow> \\<lbrakk>the (map_of h x)\\<rbrakk>\\<^bsub>r\\<^esub> \\<sqsubseteq> r x\"\n  shows \"\\<lbrace>h\\<rbrace>\\<rho> \\<sqsubseteq> r\"", "lemma HSem_bot_below:\n  assumes h: \"\\<And>x. x \\<in> domA h \\<Longrightarrow> \\<lbrakk>the (map_of h x)\\<rbrakk>\\<^bsub>r\\<^esub> \\<sqsubseteq> r x\"\n  shows \"\\<lbrace>h\\<rbrace>\\<bottom> \\<sqsubseteq> r\"", "lemma HSem_bot_ind:\n  assumes \"adm P\"\n  assumes \"P \\<bottom>\"\n  assumes step: \"\\<And> \\<rho>'. P \\<rho>' \\<Longrightarrow> P (\\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)\"\n  shows \"P (\\<lbrace>\\<Gamma>\\<rbrace>\\<bottom>)\"", "lemma parallel_HSem_ind:\n  assumes \"adm (\\<lambda>\\<rho>'. P (fst \\<rho>') (snd \\<rho>'))\"\n  assumes \"P \\<bottom> \\<bottom>\"\n  assumes step: \"\\<And>y z. P y z \\<Longrightarrow>\n    P (\\<rho>\\<^sub>1 ++\\<^bsub>domA \\<Gamma>\\<^sub>1\\<^esub> \\<^bold>\\<lbrakk>\\<Gamma>\\<^sub>1\\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>) (\\<rho>\\<^sub>2 ++\\<^bsub>domA \\<Gamma>\\<^sub>2\\<^esub> \\<^bold>\\<lbrakk>\\<Gamma>\\<^sub>2\\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>)\"\n  shows \"P (\\<lbrace>\\<Gamma>\\<^sub>1\\<rbrace>\\<rho>\\<^sub>1) (\\<lbrace>\\<Gamma>\\<^sub>2\\<rbrace>\\<rho>\\<^sub>2)\"", "lemma HSem_eq:\n  shows \"\\<lbrace>\\<Gamma>\\<rbrace>\\<rho> = \\<rho> ++\\<^bsub>domA \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk>\\<Gamma>\\<^bold>\\<rbrakk>\\<^bsub>\\<lbrace>\\<Gamma>\\<rbrace>\\<rho>\\<^esub>\"", "lemma HSem_bot_eq:\n  shows \"\\<lbrace>\\<Gamma>\\<rbrace>\\<bottom> = \\<^bold>\\<lbrakk>\\<Gamma>\\<^bold>\\<rbrakk>\\<^bsub>\\<lbrace>\\<Gamma>\\<rbrace>\\<bottom>\\<^esub>\"", "lemma lookup_HSem_other:\n  assumes \"y \\<notin> domA h\"\n  shows \"(\\<lbrace>h\\<rbrace>\\<rho>) y = \\<rho> y\"", "lemma lookup_HSem_heap:\n  assumes \"y \\<in> domA h\"\n  shows \"(\\<lbrace>h\\<rbrace>\\<rho>) y = \\<lbrakk> the (map_of h y) \\<rbrakk>\\<^bsub>\\<lbrace>h\\<rbrace>\\<rho>\\<^esub>\"", "lemma HSem_edom_subset:  \"edom (\\<lbrace>\\<Gamma>\\<rbrace>\\<rho>) \\<subseteq> edom \\<rho> \\<union> domA \\<Gamma>\"", "lemma (in -) env_restr_override_onI:\"-S2 \\<subseteq> S \\<Longrightarrow> env_restr S \\<rho>1 ++\\<^bsub>S2\\<^esub> \\<rho>2 = \\<rho>1 ++\\<^bsub>S2\\<^esub> \\<rho>2\"", "lemma HSem_restr:\n  \"\\<lbrace>h\\<rbrace>(\\<rho> f|` (- domA h)) = \\<lbrace>h\\<rbrace>\\<rho>\"", "lemma HSem_restr_cong:\n  assumes \"\\<rho> f|` (- domA h) = \\<rho>' f|` (- domA h)\"\n  shows \"\\<lbrace>h\\<rbrace>\\<rho> = \\<lbrace>h\\<rbrace>\\<rho>'\"", "lemma HSem_restr_cong_below:\n  assumes \"\\<rho> f|` (- domA h) \\<sqsubseteq> \\<rho>' f|` (- domA h)\"\n  shows \"\\<lbrace>h\\<rbrace>\\<rho> \\<sqsubseteq> \\<lbrace>h\\<rbrace>\\<rho>'\"", "lemma HSem_reorder:\n  assumes \"map_of \\<Gamma> = map_of \\<Delta>\"\n  shows \"\\<lbrace>\\<Gamma>\\<rbrace>\\<rho> = \\<lbrace>\\<Delta>\\<rbrace>\\<rho>\"", "lemma HSem_reorder_head:\n  assumes \"x \\<noteq> y\"\n  shows \"\\<lbrace>(x,e1)#(y,e2)#\\<Gamma>\\<rbrace>\\<rho> = \\<lbrace>(y,e2)#(x,e1)#\\<Gamma>\\<rbrace>\\<rho>\"", "lemma HSem_reorder_head_append:\n  assumes \"x \\<notin> domA \\<Gamma>\"\n  shows \"\\<lbrace>(x,e)#\\<Gamma>@\\<Delta>\\<rbrace>\\<rho> = \\<lbrace>\\<Gamma> @ ((x,e)#\\<Delta>)\\<rbrace>\\<rho>\"", "lemma env_restr_HSem:\n  assumes \"domA \\<Gamma> \\<inter> S = {}\"\n  shows \"(\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>) f|` S = \\<rho> f|` S\"", "lemma env_restr_HSem_noop:\n  assumes \"domA \\<Gamma> \\<inter> edom \\<rho> = {}\"\n  shows \"(\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>) f|` edom \\<rho> = \\<rho>\"", "lemma HSem_Nil[simp]: \"\\<lbrace>[]\\<rbrace>\\<rho> = \\<rho>\"", "lemma HSem_subst_exp:\n  assumes \"\\<And>\\<rho>'. \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>'\\<^esub> = \\<lbrakk> e' \\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>\"\n  shows \"\\<lbrace>(x, e) # \\<Gamma>\\<rbrace>\\<rho> = \\<lbrace>(x, e') # \\<Gamma>\\<rbrace>\\<rho>\"", "lemma HSem_subst_expr_below:\n  assumes below: \"\\<lbrakk> e1 \\<rbrakk>\\<^bsub>\\<lbrace>(x, e2) # \\<Gamma>\\<rbrace>\\<rho>\\<^esub> \\<sqsubseteq> \\<lbrakk> e2 \\<rbrakk>\\<^bsub>\\<lbrace>(x, e2) # \\<Gamma>\\<rbrace>\\<rho>\\<^esub>\"\n  shows \"\\<lbrace>(x, e1) # \\<Gamma>\\<rbrace>\\<rho> \\<sqsubseteq> \\<lbrace>(x, e2) # \\<Gamma>\\<rbrace>\\<rho>\"", "lemma HSem_subst_expr:\n  assumes below1: \"\\<lbrakk> e1 \\<rbrakk>\\<^bsub>\\<lbrace>(x, e2) # \\<Gamma>\\<rbrace>\\<rho>\\<^esub> \\<sqsubseteq> \\<lbrakk> e2 \\<rbrakk>\\<^bsub>\\<lbrace>(x, e2) # \\<Gamma>\\<rbrace>\\<rho>\\<^esub>\"\n  assumes below2: \"\\<lbrakk> e2 \\<rbrakk>\\<^bsub>\\<lbrace>(x, e1) # \\<Gamma>\\<rbrace>\\<rho>\\<^esub> \\<sqsubseteq> \\<lbrakk> e1 \\<rbrakk>\\<^bsub>\\<lbrace>(x, e1) # \\<Gamma>\\<rbrace>\\<rho>\\<^esub>\"\n  shows \"\\<lbrace>(x, e1) # \\<Gamma>\\<rbrace>\\<rho> = \\<lbrace>(x, e2) # \\<Gamma>\\<rbrace>\\<rho>\"", "lemma HSem_redo:\n  shows \"\\<lbrace>\\<Gamma>\\<rbrace>(\\<lbrace>\\<Gamma> @ \\<Delta>\\<rbrace>\\<rho>) f|` (edom \\<rho> \\<union> domA \\<Delta>) = \\<lbrace>\\<Gamma> @ \\<Delta>\\<rbrace>\\<rho>\" (is \"?LHS = ?RHS\")", "lemma iterative_HSem:\n  assumes \"x \\<notin> domA \\<Gamma>\"\n  shows \"\\<lbrace>(x,e) # \\<Gamma>\\<rbrace>\\<rho> = (\\<mu> \\<rho>'. (\\<rho> ++\\<^bsub>domA \\<Gamma>\\<^esub> (\\<lbrace>\\<Gamma>\\<rbrace>\\<rho>'))( x := \\<lbrakk>e\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>))\"", "lemma iterative_HSem':\n  assumes \"x \\<notin> domA \\<Gamma>\"\n  shows \"(\\<mu> \\<rho>'. (\\<rho> ++\\<^bsub>domA \\<Gamma>\\<^esub> (\\<lbrace>\\<Gamma>\\<rbrace>\\<rho>'))( x := \\<lbrakk>e\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>))\n       = (\\<mu> \\<rho>'. (\\<rho> ++\\<^bsub>domA \\<Gamma>\\<^esub> (\\<lbrace>\\<Gamma>\\<rbrace>\\<rho>'))( x := \\<lbrakk>e\\<rbrakk>\\<^bsub>\\<lbrace>\\<Gamma>\\<rbrace>\\<rho>'\\<^esub>))\"", "lemma HSem_ignores_fresh_restr':\n  assumes \"fv \\<Gamma> \\<subseteq> S\"\n  assumes \"\\<And> x \\<rho>. x \\<in> domA \\<Gamma> \\<Longrightarrow> \\<lbrakk> the (map_of \\<Gamma> x) \\<rbrakk>\\<^bsub>\\<rho>\\<^esub> = \\<lbrakk> the (map_of \\<Gamma> x) \\<rbrakk>\\<^bsub>\\<rho> f|` (fv (the (map_of \\<Gamma> x)))\\<^esub>\"\n  shows \"(\\<lbrace>\\<Gamma>\\<rbrace>\\<rho>) f|` S = \\<lbrace>\\<Gamma>\\<rbrace>\\<rho> f|` S\"", "lemma ESem_fresh_cong:\n  assumes \"\\<rho> f|` (fv e) = \\<rho>' f|` (fv e)\"\n  shows \"\\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>\\<^esub> = \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>\"", "lemma ESem_fresh_cong_subset:\n  assumes \"fv e \\<subseteq> S\"\n  assumes \"\\<rho> f|` S = \\<rho>' f|` S\"\n  shows \"\\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>\\<^esub> = \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>\"", "lemma ESem_fresh_cong_below:\n  assumes \"\\<rho> f|` (fv e) \\<sqsubseteq> \\<rho>' f|` (fv e)\"\n  shows \"\\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>\\<^esub> \\<sqsubseteq> \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>\"", "lemma ESem_fresh_cong_below_subset:\n  assumes \"fv e \\<subseteq> S\"\n  assumes \"\\<rho> f|` S \\<sqsubseteq> \\<rho>' f|` S\"\n  shows \"\\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>\\<^esub> \\<sqsubseteq> \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>\"", "lemma ESem_ignores_fresh_restr:\n  assumes \"atom ` S \\<sharp>* e\"\n  shows \"\\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>\\<^esub> = \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho> f|` (- S)\\<^esub>\"", "lemma ESem_ignores_fresh_restr':\n  assumes \"atom ` (edom \\<rho> - S) \\<sharp>* e\"\n  shows \"\\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>\\<^esub> = \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho> f|` S\\<^esub>\"", "lemma HSem_ignores_fresh_restr'':\n  assumes \"fv \\<Gamma> \\<subseteq> S\"\n  shows \"(\\<lbrace>\\<Gamma>\\<rbrace>\\<rho>) f|` S = \\<lbrace>\\<Gamma>\\<rbrace>\\<rho> f|` S\"", "lemma HSem_ignores_fresh_restr:\n  assumes \"atom ` S \\<sharp>* \\<Gamma>\"\n  shows \"(\\<lbrace>\\<Gamma>\\<rbrace>\\<rho>) f|` (- S) = \\<lbrace>\\<Gamma>\\<rbrace>\\<rho> f|` (- S)\"", "lemma HSem_fresh_cong_below:\n  assumes \"\\<rho> f|` ((S \\<union> fv \\<Gamma>) - domA \\<Gamma>) \\<sqsubseteq> \\<rho>' f|` ((S \\<union> fv \\<Gamma>) - domA \\<Gamma>)\"\n  shows \"(\\<lbrace>\\<Gamma>\\<rbrace>\\<rho>) f|` S \\<sqsubseteq> (\\<lbrace>\\<Gamma>\\<rbrace>\\<rho>') f|` S\"", "lemma HSem_fresh_cong:\n  assumes \"\\<rho> f|` ((S \\<union> fv \\<Gamma>) - domA \\<Gamma>) = \\<rho>' f|` ((S \\<union> fv \\<Gamma>) - domA \\<Gamma>)\"\n  shows \"(\\<lbrace>\\<Gamma>\\<rbrace>\\<rho>) f|` S = (\\<lbrace>\\<Gamma>\\<rbrace>\\<rho>') f|` S\"", "lemma HSem_add_fresh':\n  assumes fresh: \"atom x \\<sharp> \\<Gamma>\"\n  assumes \"x \\<notin> edom \\<rho>\"\n  assumes step: \"\\<And>e \\<rho>'. e \\<in> snd ` set \\<Gamma> \\<Longrightarrow> \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>'\\<^esub> = \\<lbrakk> e \\<rbrakk>\\<^bsub>env_delete x \\<rho>'\\<^esub>\"\n  shows  \"env_delete x (\\<lbrace>(x, e) # \\<Gamma>\\<rbrace>\\<rho>) = \\<lbrace>\\<Gamma>\\<rbrace>\\<rho>\"", "lemma HSem_add_fresh:\n  assumes \"atom x \\<sharp> \\<Gamma>\"\n  assumes \"x \\<notin> edom \\<rho>\"\n  shows  \"env_delete x (\\<lbrace>(x, e) # \\<Gamma>\\<rbrace>\\<rho>) = \\<lbrace>\\<Gamma>\\<rbrace>\\<rho>\"", "lemma HSem_subset_below:\n  assumes fresh: \"atom ` domA \\<Gamma> \\<sharp>* \\<Delta>\" \n  shows \"\\<lbrace>\\<Delta>\\<rbrace>(\\<rho> f|` (- domA \\<Gamma>)) \\<sqsubseteq> (\\<lbrace>\\<Delta>@\\<Gamma>\\<rbrace>\\<rho>)  f|` (- domA \\<Gamma>)\"", "lemma HSem_merge:\n  assumes fresh: \"atom ` domA \\<Gamma> \\<sharp>* \\<Delta>\"\n  shows \"\\<lbrace>\\<Gamma>\\<rbrace>\\<lbrace>\\<Delta>\\<rbrace>\\<rho> = \\<lbrace>\\<Gamma>@\\<Delta>\\<rbrace>\\<rho>\"", "lemma parallel_HSem_ind_different_ESem:\n  assumes \"adm (\\<lambda>\\<rho>'. P (fst \\<rho>') (snd \\<rho>'))\"\n  assumes \"P \\<bottom> \\<bottom>\"\n  assumes \"\\<And>y z. P y z \\<Longrightarrow> P (\\<rho> ++\\<^bsub>domA h\\<^esub> evalHeap h (\\<lambda>e. ESem1 e \\<cdot> y)) (\\<rho>2 ++\\<^bsub>domA h2\\<^esub> evalHeap h2 (\\<lambda>e. ESem2 e \\<cdot> z))\"\n  shows \"P (has_ESem.HSem ESem1 h\\<cdot>\\<rho>) (has_ESem.HSem ESem2 h2\\<cdot>\\<rho>2)\"", "lemma HSem_cong[fundef_cong]:\n  \"\\<lbrakk> (\\<And> e. e \\<in> snd ` set heap2 \\<Longrightarrow> ESem1 e = ESem2 e); heap1 = heap2  \\<rbrakk>\n      \\<Longrightarrow> has_ESem.HSem ESem1 heap1 = has_ESem.HSem ESem2 heap2\"", "lemma HSem_eqvt[eqvt]:\n  \"\\<pi> \\<bullet> has_ESem.HSem ESem \\<Gamma> = has_ESem.HSem (\\<pi> \\<bullet> ESem) (\\<pi> \\<bullet> \\<Gamma>)\""], "translations": [["", "lemma HSem_def': \"\\<lbrace>\\<Gamma>\\<rbrace>\\<rho> = (\\<mu> \\<rho>'. \\<rho> ++\\<^bsub>domA \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk>\\<Gamma>\\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace> \\<Gamma> \\<rbrace>\\<rho> =\n    (\\<mu> x.\n        \\<rho> ++\\<^bsub>domA\n                          \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>x\\<^esub>)", "unfolding HSem_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Lambda> \\<rho>.\n        \\<mu> x.\n           \\<rho> ++\\<^bsub>domA\n                             \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>x\\<^esub>)\\<cdot>\n    \\<rho> =\n    (\\<mu> x.\n        \\<rho> ++\\<^bsub>domA\n                          \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>x\\<^esub>)", "by simp"], ["", "subsubsection \\<open>Induction and other lemmas about @{term HSem}\\<close>"], ["", "lemma HSem_ind:\n  assumes \"adm P\"\n  assumes \"P \\<bottom>\"\n  assumes step: \"\\<And> \\<rho>'. P \\<rho>' \\<Longrightarrow>  P (\\<rho> ++\\<^bsub>domA \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk>\\<Gamma>\\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)\"\n  shows \"P (\\<lbrace>\\<Gamma>\\<rbrace>\\<rho>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>)", "unfolding HSem_def'"], ["proof (prove)\ngoal (1 subgoal):\n 1. P (\\<mu> x.\n          \\<rho> ++\\<^bsub>domA\n                            \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>x\\<^esub>)", "apply (rule fix_ind[OF assms(1), OF assms(2)])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       P x \\<Longrightarrow>\n       P ((\\<Lambda> x.\n              \\<rho> ++\\<^bsub>domA\n                                \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>x\\<^esub>)\\<cdot>\n          x)", "using step"], ["proof (prove)\nusing this:\n  P ?\\<rho>'1 \\<Longrightarrow>\n  P (\\<rho> ++\\<^bsub>domA\n                       \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>?\\<rho>'1\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       P x \\<Longrightarrow>\n       P ((\\<Lambda> x.\n              \\<rho> ++\\<^bsub>domA\n                                \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>x\\<^esub>)\\<cdot>\n          x)", "by simp"], ["", "lemma HSem_below:\n  assumes rho: \"\\<And>x. x \\<notin> domA h \\<Longrightarrow> \\<rho> x \\<sqsubseteq> r x\"\n  assumes h: \"\\<And>x. x \\<in> domA h \\<Longrightarrow> \\<lbrakk>the (map_of h x)\\<rbrakk>\\<^bsub>r\\<^esub> \\<sqsubseteq> r x\"\n  shows \"\\<lbrace>h\\<rbrace>\\<rho> \\<sqsubseteq> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace> h \\<rbrace>\\<rho> \\<sqsubseteq> r", "proof (rule HSem_ind, goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. adm (\\<lambda>a. a \\<sqsubseteq> r)\n 2. \\<bottom> \\<sqsubseteq> r\n 3. \\<And>\\<rho>'.\n       \\<rho>' \\<sqsubseteq> r \\<Longrightarrow>\n       \\<rho> ++\\<^bsub>domA\n                         h\\<^esub> \\<^bold>\\<lbrakk> h \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub> \\<sqsubseteq>\n       r", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (3 subgoals):\n 1. adm (\\<lambda>a. a \\<sqsubseteq> r)\n 2. \\<bottom> \\<sqsubseteq> r\n 3. \\<And>\\<rho>'.\n       \\<rho>' \\<sqsubseteq> r \\<Longrightarrow>\n       \\<rho> ++\\<^bsub>domA\n                         h\\<^esub> \\<^bold>\\<lbrakk> h \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub> \\<sqsubseteq>\n       r", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. adm (\\<lambda>a. a \\<sqsubseteq> r)", "by (auto)"], ["proof (state)\nthis:\n  adm (\\<lambda>a. a \\<sqsubseteq> r)\n\ngoal (2 subgoals):\n 1. \\<bottom> \\<sqsubseteq> r\n 2. \\<And>\\<rho>'.\n       \\<rho>' \\<sqsubseteq> r \\<Longrightarrow>\n       \\<rho> ++\\<^bsub>domA\n                         h\\<^esub> \\<^bold>\\<lbrakk> h \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub> \\<sqsubseteq>\n       r", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<bottom> \\<sqsubseteq> r\n 2. \\<And>\\<rho>'.\n       \\<rho>' \\<sqsubseteq> r \\<Longrightarrow>\n       \\<rho> ++\\<^bsub>domA\n                         h\\<^esub> \\<^bold>\\<lbrakk> h \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub> \\<sqsubseteq>\n       r", "case 2"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<bottom> \\<sqsubseteq> r\n 2. \\<And>\\<rho>'.\n       \\<rho>' \\<sqsubseteq> r \\<Longrightarrow>\n       \\<rho> ++\\<^bsub>domA\n                         h\\<^esub> \\<^bold>\\<lbrakk> h \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub> \\<sqsubseteq>\n       r", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bottom> \\<sqsubseteq> r", "by (rule minimal)"], ["proof (state)\nthis:\n  \\<bottom> \\<sqsubseteq> r\n\ngoal (1 subgoal):\n 1. \\<And>\\<rho>'.\n       \\<rho>' \\<sqsubseteq> r \\<Longrightarrow>\n       \\<rho> ++\\<^bsub>domA\n                         h\\<^esub> \\<^bold>\\<lbrakk> h \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub> \\<sqsubseteq>\n       r", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<rho>'.\n       \\<rho>' \\<sqsubseteq> r \\<Longrightarrow>\n       \\<rho> ++\\<^bsub>domA\n                         h\\<^esub> \\<^bold>\\<lbrakk> h \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub> \\<sqsubseteq>\n       r", "case (3 \\<rho>')"], ["proof (state)\nthis:\n  \\<rho>' \\<sqsubseteq> r\n\ngoal (1 subgoal):\n 1. \\<And>\\<rho>'.\n       \\<rho>' \\<sqsubseteq> r \\<Longrightarrow>\n       \\<rho> ++\\<^bsub>domA\n                         h\\<^esub> \\<^bold>\\<lbrakk> h \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub> \\<sqsubseteq>\n       r", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rho> ++\\<^bsub>domA\n                      h\\<^esub> \\<^bold>\\<lbrakk> h \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub> \\<sqsubseteq>\n    r", "by (rule override_on_belowI)\n       (auto simp add: lookupEvalHeap  below_trans[OF monofun_cfun_arg[OF \\<open>\\<rho>' \\<sqsubseteq> r\\<close>] h] rho)"], ["proof (state)\nthis:\n  \\<rho> ++\\<^bsub>domA\n                    h\\<^esub> \\<^bold>\\<lbrakk> h \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub> \\<sqsubseteq>\n  r\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HSem_bot_below:\n  assumes h: \"\\<And>x. x \\<in> domA h \\<Longrightarrow> \\<lbrakk>the (map_of h x)\\<rbrakk>\\<^bsub>r\\<^esub> \\<sqsubseteq> r x\"\n  shows \"\\<lbrace>h\\<rbrace>\\<bottom> \\<sqsubseteq> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace> h \\<rbrace>\\<bottom> \\<sqsubseteq> r", "using assms"], ["proof (prove)\nusing this:\n  ?x1 \\<in> domA h \\<Longrightarrow>\n  \\<lbrakk> the (map_of h ?x1) \\<rbrakk>\\<^bsub>r\\<^esub> \\<sqsubseteq>\n  r ?x1\n\ngoal (1 subgoal):\n 1. \\<lbrace> h \\<rbrace>\\<bottom> \\<sqsubseteq> r", "by (metis HSem_below fun_belowD minimal)"], ["", "lemma HSem_bot_ind:\n  assumes \"adm P\"\n  assumes \"P \\<bottom>\"\n  assumes step: \"\\<And> \\<rho>'. P \\<rho>' \\<Longrightarrow> P (\\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)\"\n  shows \"P (\\<lbrace>\\<Gamma>\\<rbrace>\\<bottom>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (\\<lbrace> \\<Gamma> \\<rbrace>\\<bottom>)", "apply (rule HSem_ind[OF assms(1,2)])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<rho>'.\n       P \\<rho>' \\<Longrightarrow>\n       P (\\<bottom> ++\\<^bsub>domA\n                               \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)", "apply (drule assms(3))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<rho>'.\n       P (\\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>) \\<Longrightarrow>\n       P (\\<bottom> ++\\<^bsub>domA\n                               \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma parallel_HSem_ind:\n  assumes \"adm (\\<lambda>\\<rho>'. P (fst \\<rho>') (snd \\<rho>'))\"\n  assumes \"P \\<bottom> \\<bottom>\"\n  assumes step: \"\\<And>y z. P y z \\<Longrightarrow>\n    P (\\<rho>\\<^sub>1 ++\\<^bsub>domA \\<Gamma>\\<^sub>1\\<^esub> \\<^bold>\\<lbrakk>\\<Gamma>\\<^sub>1\\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>) (\\<rho>\\<^sub>2 ++\\<^bsub>domA \\<Gamma>\\<^sub>2\\<^esub> \\<^bold>\\<lbrakk>\\<Gamma>\\<^sub>2\\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>)\"\n  shows \"P (\\<lbrace>\\<Gamma>\\<^sub>1\\<rbrace>\\<rho>\\<^sub>1) (\\<lbrace>\\<Gamma>\\<^sub>2\\<rbrace>\\<rho>\\<^sub>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (\\<lbrace> \\<Gamma>\\<^sub>1 \\<rbrace>\\<rho>\\<^sub>1)\n     (\\<lbrace> \\<Gamma>\\<^sub>2 \\<rbrace>\\<rho>\\<^sub>2)", "unfolding HSem_def'"], ["proof (prove)\ngoal (1 subgoal):\n 1. P (\\<mu> x.\n          \\<rho>\\<^sub>1 ++\\<^bsub>domA\n                                    \\<Gamma>\\<^sub>1\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma>\\<^sub>1 \\<^bold>\\<rbrakk>\\<^bsub>x\\<^esub>)\n     (\\<mu> x.\n         \\<rho>\\<^sub>2 ++\\<^bsub>domA\n                                   \\<Gamma>\\<^sub>2\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma>\\<^sub>2 \\<^bold>\\<rbrakk>\\<^bsub>x\\<^esub>)", "apply (rule parallel_fix_ind[OF assms(1), OF assms(2)])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       P x y \\<Longrightarrow>\n       P ((\\<Lambda> x.\n              \\<rho>\\<^sub>1 ++\\<^bsub>domA\n  \\<Gamma>\\<^sub>1\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma>\\<^sub>1 \\<^bold>\\<rbrakk>\\<^bsub>x\\<^esub>)\\<cdot>\n          x)\n        ((\\<Lambda> x.\n             \\<rho>\\<^sub>2 ++\\<^bsub>domA\n \\<Gamma>\\<^sub>2\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma>\\<^sub>2 \\<^bold>\\<rbrakk>\\<^bsub>x\\<^esub>)\\<cdot>\n         y)", "using step"], ["proof (prove)\nusing this:\n  P ?y1 ?z1 \\<Longrightarrow>\n  P (\\<rho>\\<^sub>1 ++\\<^bsub>domA\n                               \\<Gamma>\\<^sub>1\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma>\\<^sub>1 \\<^bold>\\<rbrakk>\\<^bsub>?y1\\<^esub>)\n   (\\<rho>\\<^sub>2 ++\\<^bsub>domA\n                              \\<Gamma>\\<^sub>2\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma>\\<^sub>2 \\<^bold>\\<rbrakk>\\<^bsub>?z1\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       P x y \\<Longrightarrow>\n       P ((\\<Lambda> x.\n              \\<rho>\\<^sub>1 ++\\<^bsub>domA\n  \\<Gamma>\\<^sub>1\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma>\\<^sub>1 \\<^bold>\\<rbrakk>\\<^bsub>x\\<^esub>)\\<cdot>\n          x)\n        ((\\<Lambda> x.\n             \\<rho>\\<^sub>2 ++\\<^bsub>domA\n \\<Gamma>\\<^sub>2\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma>\\<^sub>2 \\<^bold>\\<rbrakk>\\<^bsub>x\\<^esub>)\\<cdot>\n         y)", "by simp"], ["", "lemma HSem_eq:\n  shows \"\\<lbrace>\\<Gamma>\\<rbrace>\\<rho> = \\<rho> ++\\<^bsub>domA \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk>\\<Gamma>\\<^bold>\\<rbrakk>\\<^bsub>\\<lbrace>\\<Gamma>\\<rbrace>\\<rho>\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace> \\<Gamma> \\<rbrace>\\<rho> =\n    \\<rho> ++\\<^bsub>domA\n                      \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>\\<^esub>", "unfolding HSem_def'"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<mu> x.\n        \\<rho> ++\\<^bsub>domA\n                          \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>x\\<^esub>) =\n    \\<rho> ++\\<^bsub>domA\n                      \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<mu> x.\n                  \\<rho> ++\\<^bsub>domA\n                                    \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>x\\<^esub>\\<^esub>", "by (subst fix_eq) simp"], ["", "lemma HSem_bot_eq:\n  shows \"\\<lbrace>\\<Gamma>\\<rbrace>\\<bottom> = \\<^bold>\\<lbrakk>\\<Gamma>\\<^bold>\\<rbrakk>\\<^bsub>\\<lbrace>\\<Gamma>\\<rbrace>\\<bottom>\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace> \\<Gamma> \\<rbrace>\\<bottom> =\n    \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>\\<bottom>\\<^esub>", "by (subst HSem_eq) simp"], ["", "lemma lookup_HSem_other:\n  assumes \"y \\<notin> domA h\"\n  shows \"(\\<lbrace>h\\<rbrace>\\<rho>) y = \\<rho> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrace> h \\<rbrace>\\<rho>) y = \\<rho> y", "apply (subst HSem_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<rho> ++\\<^bsub>domA\n                       h\\<^esub> \\<^bold>\\<lbrakk> h \\<^bold>\\<rbrakk>\\<^bsub>\\<lbrace> h \\<rbrace>\\<rho>\\<^esub>)\n     y =\n    \\<rho> y", "using assms"], ["proof (prove)\nusing this:\n  y \\<notin> domA h\n\ngoal (1 subgoal):\n 1. (\\<rho> ++\\<^bsub>domA\n                       h\\<^esub> \\<^bold>\\<lbrakk> h \\<^bold>\\<rbrakk>\\<^bsub>\\<lbrace> h \\<rbrace>\\<rho>\\<^esub>)\n     y =\n    \\<rho> y", "by simp"], ["", "lemma lookup_HSem_heap:\n  assumes \"y \\<in> domA h\"\n  shows \"(\\<lbrace>h\\<rbrace>\\<rho>) y = \\<lbrakk> the (map_of h y) \\<rbrakk>\\<^bsub>\\<lbrace>h\\<rbrace>\\<rho>\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrace> h \\<rbrace>\\<rho>) y =\n    \\<lbrakk> the (map_of h\n                    y) \\<rbrakk>\\<^bsub>\\<lbrace> h \\<rbrace>\\<rho>\\<^esub>", "apply (subst HSem_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<rho> ++\\<^bsub>domA\n                       h\\<^esub> \\<^bold>\\<lbrakk> h \\<^bold>\\<rbrakk>\\<^bsub>\\<lbrace> h \\<rbrace>\\<rho>\\<^esub>)\n     y =\n    \\<lbrakk> the (map_of h\n                    y) \\<rbrakk>\\<^bsub>\\<lbrace> h \\<rbrace>\\<rho>\\<^esub>", "using assms"], ["proof (prove)\nusing this:\n  y \\<in> domA h\n\ngoal (1 subgoal):\n 1. (\\<rho> ++\\<^bsub>domA\n                       h\\<^esub> \\<^bold>\\<lbrakk> h \\<^bold>\\<rbrakk>\\<^bsub>\\<lbrace> h \\<rbrace>\\<rho>\\<^esub>)\n     y =\n    \\<lbrakk> the (map_of h\n                    y) \\<rbrakk>\\<^bsub>\\<lbrace> h \\<rbrace>\\<rho>\\<^esub>", "by (simp add: lookupEvalHeap)"], ["", "lemma HSem_edom_subset:  \"edom (\\<lbrace>\\<Gamma>\\<rbrace>\\<rho>) \\<subseteq> edom \\<rho> \\<union> domA \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. edom (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>)\n    \\<subseteq> edom \\<rho> \\<union> domA \\<Gamma>", "apply rule"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> edom (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>) \\<Longrightarrow>\n       x \\<in> edom \\<rho> \\<union> domA \\<Gamma>", "unfolding edomIff"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>) x \\<noteq>\n       \\<bottom> \\<Longrightarrow>\n       x \\<in> edom \\<rho> \\<union> domA \\<Gamma>", "apply (case_tac \"x \\<in> domA \\<Gamma>\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>(\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>) x \\<noteq> \\<bottom>;\n        x \\<in> domA \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> x \\<in> edom \\<rho> \\<union> domA \\<Gamma>\n 2. \\<And>x.\n       \\<lbrakk>(\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>) x \\<noteq> \\<bottom>;\n        x \\<notin> domA \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> x \\<in> edom \\<rho> \\<union> domA \\<Gamma>", "apply (auto simp add: lookup_HSem_other)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in -) env_restr_override_onI:\"-S2 \\<subseteq> S \\<Longrightarrow> env_restr S \\<rho>1 ++\\<^bsub>S2\\<^esub> \\<rho>2 = \\<rho>1 ++\\<^bsub>S2\\<^esub> \\<rho>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - S2 \\<subseteq> S \\<Longrightarrow>\n    \\<rho>1 f|` S ++\\<^bsub>S2\\<^esub> \\<rho>2 =\n    \\<rho>1 ++\\<^bsub>S2\\<^esub> \\<rho>2", "by (rule ext) (auto simp add: lookup_override_on_eq )"], ["", "lemma HSem_restr:\n  \"\\<lbrace>h\\<rbrace>(\\<rho> f|` (- domA h)) = \\<lbrace>h\\<rbrace>\\<rho>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace> h \\<rbrace>\\<rho> f|` (- domA h) = \\<lbrace> h \\<rbrace>\\<rho>", "apply (rule parallel_HSem_ind)"], ["proof (prove)\ngoal (3 subgoals):\n 1. adm (\\<lambda>\\<rho>'. fst \\<rho>' = snd \\<rho>')\n 2. \\<bottom> = \\<bottom>\n 3. \\<And>y z.\n       y = z \\<Longrightarrow>\n       \\<rho> f|`\n       (- domA\n           h) ++\\<^bsub>domA\n                         h\\<^esub> \\<^bold>\\<lbrakk> h \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub> =\n       \\<rho> ++\\<^bsub>domA\n                         h\\<^esub> \\<^bold>\\<lbrakk> h \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<bottom> = \\<bottom>\n 2. \\<And>y z.\n       y = z \\<Longrightarrow>\n       \\<rho> f|`\n       (- domA\n           h) ++\\<^bsub>domA\n                         h\\<^esub> \\<^bold>\\<lbrakk> h \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub> =\n       \\<rho> ++\\<^bsub>domA\n                         h\\<^esub> \\<^bold>\\<lbrakk> h \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>", "apply auto[1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y z.\n       y = z \\<Longrightarrow>\n       \\<rho> f|`\n       (- domA\n           h) ++\\<^bsub>domA\n                         h\\<^esub> \\<^bold>\\<lbrakk> h \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub> =\n       \\<rho> ++\\<^bsub>domA\n                         h\\<^esub> \\<^bold>\\<lbrakk> h \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>", "apply (subst env_restr_override_onI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y z. y = z \\<Longrightarrow> - domA h \\<subseteq> - domA h\n 2. \\<And>y z.\n       y = z \\<Longrightarrow>\n       \\<rho> ++\\<^bsub>domA\n                         h\\<^esub> \\<^bold>\\<lbrakk> h \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub> =\n       \\<rho> ++\\<^bsub>domA\n                         h\\<^esub> \\<^bold>\\<lbrakk> h \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>", "apply simp_all"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma HSem_restr_cong:\n  assumes \"\\<rho> f|` (- domA h) = \\<rho>' f|` (- domA h)\"\n  shows \"\\<lbrace>h\\<rbrace>\\<rho> = \\<lbrace>h\\<rbrace>\\<rho>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace> h \\<rbrace>\\<rho> = \\<lbrace> h \\<rbrace>\\<rho>'", "apply (subst (1 2) HSem_restr[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace> h \\<rbrace>\\<rho> f|` (- domA h) =\n    \\<lbrace> h \\<rbrace>\\<rho>' f|` (- domA h)", "by (simp add: assms)"], ["", "lemma HSem_restr_cong_below:\n  assumes \"\\<rho> f|` (- domA h) \\<sqsubseteq> \\<rho>' f|` (- domA h)\"\n  shows \"\\<lbrace>h\\<rbrace>\\<rho> \\<sqsubseteq> \\<lbrace>h\\<rbrace>\\<rho>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace> h \\<rbrace>\\<rho> \\<sqsubseteq> \\<lbrace> h \\<rbrace>\\<rho>'", "by (subst (1 2) HSem_restr[symmetric]) (rule monofun_cfun_arg[OF assms])"], ["", "lemma HSem_reorder:\n  assumes \"map_of \\<Gamma> = map_of \\<Delta>\"\n  shows \"\\<lbrace>\\<Gamma>\\<rbrace>\\<rho> = \\<lbrace>\\<Delta>\\<rbrace>\\<rho>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace> \\<Gamma> \\<rbrace>\\<rho> = \\<lbrace> \\<Delta> \\<rbrace>\\<rho>", "by (simp add: HSem_def' evalHeap_reorder[OF assms] assms dom_map_of_conv_domA[symmetric])"], ["", "lemma HSem_reorder_head:\n  assumes \"x \\<noteq> y\"\n  shows \"\\<lbrace>(x,e1)#(y,e2)#\\<Gamma>\\<rbrace>\\<rho> = \\<lbrace>(y,e2)#(x,e1)#\\<Gamma>\\<rbrace>\\<rho>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace> (x, e1) # (y, e2) # \\<Gamma> \\<rbrace>\\<rho> =\n    \\<lbrace> (y, e2) # (x, e1) # \\<Gamma> \\<rbrace>\\<rho>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrace> (x, e1) # (y, e2) # \\<Gamma> \\<rbrace>\\<rho> =\n    \\<lbrace> (y, e2) # (x, e1) # \\<Gamma> \\<rbrace>\\<rho>", "have \"set ((x,e1)#(y,e2)#\\<Gamma>) = set ((y,e2)#(x,e1)#\\<Gamma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set ((x, e1) # (y, e2) # \\<Gamma>) = set ((y, e2) # (x, e1) # \\<Gamma>)", "by auto"], ["proof (state)\nthis:\n  set ((x, e1) # (y, e2) # \\<Gamma>) = set ((y, e2) # (x, e1) # \\<Gamma>)\n\ngoal (1 subgoal):\n 1. \\<lbrace> (x, e1) # (y, e2) # \\<Gamma> \\<rbrace>\\<rho> =\n    \\<lbrace> (y, e2) # (x, e1) # \\<Gamma> \\<rbrace>\\<rho>", "thus ?thesis"], ["proof (prove)\nusing this:\n  set ((x, e1) # (y, e2) # \\<Gamma>) = set ((y, e2) # (x, e1) # \\<Gamma>)\n\ngoal (1 subgoal):\n 1. \\<lbrace> (x, e1) # (y, e2) # \\<Gamma> \\<rbrace>\\<rho> =\n    \\<lbrace> (y, e2) # (x, e1) # \\<Gamma> \\<rbrace>\\<rho>", "unfolding HSem_def evalHeap_reorder_head[OF assms]"], ["proof (prove)\nusing this:\n  set ((x, e1) # (y, e2) # \\<Gamma>) = set ((y, e2) # (x, e1) # \\<Gamma>)\n\ngoal (1 subgoal):\n 1. (\\<Lambda> \\<rho>.\n        \\<mu> xa.\n           \\<rho> ++\\<^bsub>domA\n                             ((x, e1) #\n                              (y, e2) #\n                              \\<Gamma>)\\<^esub> \\<^bold>\\<lbrakk> (y, e2) #\n                            (x, e1) #\n                            \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>xa\\<^esub>)\\<cdot>\n    \\<rho> =\n    (\\<Lambda> \\<rho>.\n        \\<mu> xa.\n           \\<rho> ++\\<^bsub>domA\n                             ((y, e2) #\n                              (x, e1) #\n                              \\<Gamma>)\\<^esub> \\<^bold>\\<lbrakk> (y, e2) #\n                            (x, e1) #\n                            \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>xa\\<^esub>)\\<cdot>\n    \\<rho>", "by (simp add: domA_def)"], ["proof (state)\nthis:\n  \\<lbrace> (x, e1) # (y, e2) # \\<Gamma> \\<rbrace>\\<rho> =\n  \\<lbrace> (y, e2) # (x, e1) # \\<Gamma> \\<rbrace>\\<rho>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HSem_reorder_head_append:\n  assumes \"x \\<notin> domA \\<Gamma>\"\n  shows \"\\<lbrace>(x,e)#\\<Gamma>@\\<Delta>\\<rbrace>\\<rho> = \\<lbrace>\\<Gamma> @ ((x,e)#\\<Delta>)\\<rbrace>\\<rho>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace> (x, e) # \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho> =\n    \\<lbrace> \\<Gamma> @ (x, e) # \\<Delta> \\<rbrace>\\<rho>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrace> (x, e) # \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho> =\n    \\<lbrace> \\<Gamma> @ (x, e) # \\<Delta> \\<rbrace>\\<rho>", "have \"set ((x,e)#\\<Gamma>@\\<Delta>) = set (\\<Gamma> @ ((x,e)#\\<Delta>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set ((x, e) # \\<Gamma> @ \\<Delta>) = set (\\<Gamma> @ (x, e) # \\<Delta>)", "by auto"], ["proof (state)\nthis:\n  set ((x, e) # \\<Gamma> @ \\<Delta>) = set (\\<Gamma> @ (x, e) # \\<Delta>)\n\ngoal (1 subgoal):\n 1. \\<lbrace> (x, e) # \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho> =\n    \\<lbrace> \\<Gamma> @ (x, e) # \\<Delta> \\<rbrace>\\<rho>", "thus ?thesis"], ["proof (prove)\nusing this:\n  set ((x, e) # \\<Gamma> @ \\<Delta>) = set (\\<Gamma> @ (x, e) # \\<Delta>)\n\ngoal (1 subgoal):\n 1. \\<lbrace> (x, e) # \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho> =\n    \\<lbrace> \\<Gamma> @ (x, e) # \\<Delta> \\<rbrace>\\<rho>", "unfolding HSem_def  evalHeap_reorder_head_append[OF assms]"], ["proof (prove)\nusing this:\n  set ((x, e) # \\<Gamma> @ \\<Delta>) = set (\\<Gamma> @ (x, e) # \\<Delta>)\n\ngoal (1 subgoal):\n 1. (\\<Lambda> \\<rho>.\n        \\<mu> xa.\n           \\<rho> ++\\<^bsub>domA\n                             ((x, e) #\n                              \\<Gamma> @\n                              \\<Delta>)\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> @\n                            (x, e) #\n                            \\<Delta> \\<^bold>\\<rbrakk>\\<^bsub>xa\\<^esub>)\\<cdot>\n    \\<rho> =\n    (\\<Lambda> \\<rho>.\n        \\<mu> xa.\n           \\<rho> ++\\<^bsub>domA\n                             (\\<Gamma> @\n                              (x, e) #\n                              \\<Delta>)\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> @\n                            (x, e) #\n                            \\<Delta> \\<^bold>\\<rbrakk>\\<^bsub>xa\\<^esub>)\\<cdot>\n    \\<rho>", "by simp"], ["proof (state)\nthis:\n  \\<lbrace> (x, e) # \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho> =\n  \\<lbrace> \\<Gamma> @ (x, e) # \\<Delta> \\<rbrace>\\<rho>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma env_restr_HSem:\n  assumes \"domA \\<Gamma> \\<inter> S = {}\"\n  shows \"(\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>) f|` S = \\<rho> f|` S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>) f|` S = \\<rho> f|` S", "proof (rule env_restr_eqI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> S \\<Longrightarrow>\n       (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>) x = \\<rho> x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> S \\<Longrightarrow>\n       (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>) x = \\<rho> x", "assume \"x \\<in> S\""], ["proof (state)\nthis:\n  x \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> S \\<Longrightarrow>\n       (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>) x = \\<rho> x", "hence \"x \\<notin> domA \\<Gamma>\""], ["proof (prove)\nusing this:\n  x \\<in> S\n\ngoal (1 subgoal):\n 1. x \\<notin> domA \\<Gamma>", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> S\n  domA \\<Gamma> \\<inter> S = {}\n\ngoal (1 subgoal):\n 1. x \\<notin> domA \\<Gamma>", "by auto"], ["proof (state)\nthis:\n  x \\<notin> domA \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> S \\<Longrightarrow>\n       (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>) x = \\<rho> x", "thus \"(\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>) x = \\<rho> x\""], ["proof (prove)\nusing this:\n  x \\<notin> domA \\<Gamma>\n\ngoal (1 subgoal):\n 1. (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>) x = \\<rho> x", "by (rule lookup_HSem_other)"], ["proof (state)\nthis:\n  (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>) x = \\<rho> x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma env_restr_HSem_noop:\n  assumes \"domA \\<Gamma> \\<inter> edom \\<rho> = {}\"\n  shows \"(\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>) f|` edom \\<rho> = \\<rho>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>) f|` edom \\<rho> = \\<rho>", "by (simp add: env_restr_HSem[OF assms] env_restr_useless)"], ["", "lemma HSem_Nil[simp]: \"\\<lbrace>[]\\<rbrace>\\<rho> = \\<rho>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace> [] \\<rbrace>\\<rho> = \\<rho>", "by (subst HSem_eq, simp)"], ["", "subsubsection \\<open>Substitution\\<close>"], ["", "lemma HSem_subst_exp:\n  assumes \"\\<And>\\<rho>'. \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>'\\<^esub> = \\<lbrakk> e' \\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>\"\n  shows \"\\<lbrace>(x, e) # \\<Gamma>\\<rbrace>\\<rho> = \\<lbrace>(x, e') # \\<Gamma>\\<rbrace>\\<rho>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace> (x, e) # \\<Gamma> \\<rbrace>\\<rho> =\n    \\<lbrace> (x, e') # \\<Gamma> \\<rbrace>\\<rho>", "by (rule parallel_HSem_ind) (auto simp add: assms evalHeap_subst_exp)"], ["", "lemma HSem_subst_expr_below:\n  assumes below: \"\\<lbrakk> e1 \\<rbrakk>\\<^bsub>\\<lbrace>(x, e2) # \\<Gamma>\\<rbrace>\\<rho>\\<^esub> \\<sqsubseteq> \\<lbrakk> e2 \\<rbrakk>\\<^bsub>\\<lbrace>(x, e2) # \\<Gamma>\\<rbrace>\\<rho>\\<^esub>\"\n  shows \"\\<lbrace>(x, e1) # \\<Gamma>\\<rbrace>\\<rho> \\<sqsubseteq> \\<lbrace>(x, e2) # \\<Gamma>\\<rbrace>\\<rho>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace> (x, e1) # \\<Gamma> \\<rbrace>\\<rho> \\<sqsubseteq>\n    \\<lbrace> (x, e2) # \\<Gamma> \\<rbrace>\\<rho>", "by (rule HSem_below) (auto simp add: lookup_HSem_heap below lookup_HSem_other)"], ["", "lemma HSem_subst_expr:\n  assumes below1: \"\\<lbrakk> e1 \\<rbrakk>\\<^bsub>\\<lbrace>(x, e2) # \\<Gamma>\\<rbrace>\\<rho>\\<^esub> \\<sqsubseteq> \\<lbrakk> e2 \\<rbrakk>\\<^bsub>\\<lbrace>(x, e2) # \\<Gamma>\\<rbrace>\\<rho>\\<^esub>\"\n  assumes below2: \"\\<lbrakk> e2 \\<rbrakk>\\<^bsub>\\<lbrace>(x, e1) # \\<Gamma>\\<rbrace>\\<rho>\\<^esub> \\<sqsubseteq> \\<lbrakk> e1 \\<rbrakk>\\<^bsub>\\<lbrace>(x, e1) # \\<Gamma>\\<rbrace>\\<rho>\\<^esub>\"\n  shows \"\\<lbrace>(x, e1) # \\<Gamma>\\<rbrace>\\<rho> = \\<lbrace>(x, e2) # \\<Gamma>\\<rbrace>\\<rho>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace> (x, e1) # \\<Gamma> \\<rbrace>\\<rho> =\n    \\<lbrace> (x, e2) # \\<Gamma> \\<rbrace>\\<rho>", "by (metis assms HSem_subst_expr_below below_antisym)"], ["", "subsubsection \\<open>Re-calculating the semantics of the heap is idempotent\\<close>"], ["", "lemma HSem_redo:\n  shows \"\\<lbrace>\\<Gamma>\\<rbrace>(\\<lbrace>\\<Gamma> @ \\<Delta>\\<rbrace>\\<rho>) f|` (edom \\<rho> \\<union> domA \\<Delta>) = \\<lbrace>\\<Gamma> @ \\<Delta>\\<rbrace>\\<rho>\" (is \"?LHS = ?RHS\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n     \\<Delta> \\<rbrace>\\<rho>) f|`\n                                (edom \\<rho> \\<union> domA \\<Delta>) =\n    \\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>", "proof (rule below_antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n     \\<Delta> \\<rbrace>\\<rho>) f|`\n                                (edom \\<rho> \\<union>\n                                 domA \\<Delta>) \\<sqsubseteq>\n    \\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>\n 2. \\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho> \\<sqsubseteq>\n    \\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n     \\<Delta> \\<rbrace>\\<rho>) f|`\n                                (edom \\<rho> \\<union> domA \\<Delta>)", "show \"?LHS \\<sqsubseteq> ?RHS\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n     \\<Delta> \\<rbrace>\\<rho>) f|`\n                                (edom \\<rho> \\<union>\n                                 domA \\<Delta>) \\<sqsubseteq>\n    \\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>", "by (rule HSem_below)\n     (auto simp add: lookup_HSem_heap fun_belowD[OF env_restr_below_itself])"], ["proof (state)\nthis:\n  \\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n   \\<Delta> \\<rbrace>\\<rho>) f|`\n                              (edom \\<rho> \\<union>\n                               domA \\<Delta>) \\<sqsubseteq>\n  \\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>\n\ngoal (1 subgoal):\n 1. \\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho> \\<sqsubseteq>\n    \\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n     \\<Delta> \\<rbrace>\\<rho>) f|`\n                                (edom \\<rho> \\<union> domA \\<Delta>)", "show \"?RHS \\<sqsubseteq> ?LHS\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho> \\<sqsubseteq>\n    \\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n     \\<Delta> \\<rbrace>\\<rho>) f|`\n                                (edom \\<rho> \\<union> domA \\<Delta>)", "proof(rule HSem_below, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<notin> domA (\\<Gamma> @ \\<Delta>) \\<Longrightarrow>\n       \\<rho> x \\<sqsubseteq>\n       (\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n         \\<Delta> \\<rbrace>\\<rho>) f|`\n                                    (edom \\<rho> \\<union> domA \\<Delta>))\n        x\n 2. \\<And>x.\n       x \\<in> domA (\\<Gamma> @ \\<Delta>) \\<Longrightarrow>\n       \\<lbrakk> the (map_of (\\<Gamma> @ \\<Delta>)\n                       x) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n      \\<Delta> \\<rbrace>\\<rho>) f|`\n                                 (edom \\<rho> \\<union>\n                                  domA \\<Delta>)\\<^esub> \\<sqsubseteq>\n       (\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n         \\<Delta> \\<rbrace>\\<rho>) f|`\n                                    (edom \\<rho> \\<union> domA \\<Delta>))\n        x", "case (1 x)"], ["proof (state)\nthis:\n  x \\<notin> domA (\\<Gamma> @ \\<Delta>)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<notin> domA (\\<Gamma> @ \\<Delta>) \\<Longrightarrow>\n       \\<rho> x \\<sqsubseteq>\n       (\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n         \\<Delta> \\<rbrace>\\<rho>) f|`\n                                    (edom \\<rho> \\<union> domA \\<Delta>))\n        x\n 2. \\<And>x.\n       x \\<in> domA (\\<Gamma> @ \\<Delta>) \\<Longrightarrow>\n       \\<lbrakk> the (map_of (\\<Gamma> @ \\<Delta>)\n                       x) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n      \\<Delta> \\<rbrace>\\<rho>) f|`\n                                 (edom \\<rho> \\<union>\n                                  domA \\<Delta>)\\<^esub> \\<sqsubseteq>\n       (\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n         \\<Delta> \\<rbrace>\\<rho>) f|`\n                                    (edom \\<rho> \\<union> domA \\<Delta>))\n        x", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<notin> domA (\\<Gamma> @ \\<Delta>)\n\ngoal (1 subgoal):\n 1. \\<rho> x \\<sqsubseteq>\n    (\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n      \\<Delta> \\<rbrace>\\<rho>) f|`\n                                 (edom \\<rho> \\<union> domA \\<Delta>))\n     x", "by (cases \"x \\<notin> edom \\<rho>\") (auto simp add: lookup_HSem_other dest:lookup_not_edom)"], ["proof (state)\nthis:\n  \\<rho> x \\<sqsubseteq>\n  (\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n    \\<Delta> \\<rbrace>\\<rho>) f|`\n                               (edom \\<rho> \\<union> domA \\<Delta>))\n   x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> domA (\\<Gamma> @ \\<Delta>) \\<Longrightarrow>\n       \\<lbrakk> the (map_of (\\<Gamma> @ \\<Delta>)\n                       x) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n      \\<Delta> \\<rbrace>\\<rho>) f|`\n                                 (edom \\<rho> \\<union>\n                                  domA \\<Delta>)\\<^esub> \\<sqsubseteq>\n       (\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n         \\<Delta> \\<rbrace>\\<rho>) f|`\n                                    (edom \\<rho> \\<union> domA \\<Delta>))\n        x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> domA (\\<Gamma> @ \\<Delta>) \\<Longrightarrow>\n       \\<lbrakk> the (map_of (\\<Gamma> @ \\<Delta>)\n                       x) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n      \\<Delta> \\<rbrace>\\<rho>) f|`\n                                 (edom \\<rho> \\<union>\n                                  domA \\<Delta>)\\<^esub> \\<sqsubseteq>\n       (\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n         \\<Delta> \\<rbrace>\\<rho>) f|`\n                                    (edom \\<rho> \\<union> domA \\<Delta>))\n        x", "case prems: (2 x)"], ["proof (state)\nthis:\n  x \\<in> domA (\\<Gamma> @ \\<Delta>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> domA (\\<Gamma> @ \\<Delta>) \\<Longrightarrow>\n       \\<lbrakk> the (map_of (\\<Gamma> @ \\<Delta>)\n                       x) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n      \\<Delta> \\<rbrace>\\<rho>) f|`\n                                 (edom \\<rho> \\<union>\n                                  domA \\<Delta>)\\<^esub> \\<sqsubseteq>\n       (\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n         \\<Delta> \\<rbrace>\\<rho>) f|`\n                                    (edom \\<rho> \\<union> domA \\<Delta>))\n        x", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<in> domA (\\<Gamma> @ \\<Delta>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk> the (map_of (\\<Gamma> @ \\<Delta>)\n                    x) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n   \\<Delta> \\<rbrace>\\<rho>) f|`\n                              (edom \\<rho> \\<union>\n                               domA \\<Delta>)\\<^esub> \\<sqsubseteq>\n    (\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n      \\<Delta> \\<rbrace>\\<rho>) f|`\n                                 (edom \\<rho> \\<union> domA \\<Delta>))\n     x", "proof(cases \"x \\<in> domA \\<Gamma>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<in> domA (\\<Gamma> @ \\<Delta>);\n     x \\<in> domA \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> \\<lbrakk> the (map_of (\\<Gamma> @ \\<Delta>)\nx) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n                     \\<Delta> \\<rbrace>\\<rho>) f|`\n          (edom \\<rho> \\<union> domA \\<Delta>)\\<^esub> \\<sqsubseteq>\n                      (\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n                        \\<Delta> \\<rbrace>\\<rho>) f|`\n             (edom \\<rho> \\<union> domA \\<Delta>))\n                       x\n 2. \\<lbrakk>x \\<in> domA (\\<Gamma> @ \\<Delta>);\n     x \\<notin> domA \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> \\<lbrakk> the (map_of (\\<Gamma> @ \\<Delta>)\nx) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n                     \\<Delta> \\<rbrace>\\<rho>) f|`\n          (edom \\<rho> \\<union> domA \\<Delta>)\\<^esub> \\<sqsubseteq>\n                      (\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n                        \\<Delta> \\<rbrace>\\<rho>) f|`\n             (edom \\<rho> \\<union> domA \\<Delta>))\n                       x", "case True"], ["proof (state)\nthis:\n  x \\<in> domA \\<Gamma>\n\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<in> domA (\\<Gamma> @ \\<Delta>);\n     x \\<in> domA \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> \\<lbrakk> the (map_of (\\<Gamma> @ \\<Delta>)\nx) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n                     \\<Delta> \\<rbrace>\\<rho>) f|`\n          (edom \\<rho> \\<union> domA \\<Delta>)\\<^esub> \\<sqsubseteq>\n                      (\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n                        \\<Delta> \\<rbrace>\\<rho>) f|`\n             (edom \\<rho> \\<union> domA \\<Delta>))\n                       x\n 2. \\<lbrakk>x \\<in> domA (\\<Gamma> @ \\<Delta>);\n     x \\<notin> domA \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> \\<lbrakk> the (map_of (\\<Gamma> @ \\<Delta>)\nx) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n                     \\<Delta> \\<rbrace>\\<rho>) f|`\n          (edom \\<rho> \\<union> domA \\<Delta>)\\<^esub> \\<sqsubseteq>\n                      (\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n                        \\<Delta> \\<rbrace>\\<rho>) f|`\n             (edom \\<rho> \\<union> domA \\<Delta>))\n                       x", "thus ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> domA \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<lbrakk> the (map_of (\\<Gamma> @ \\<Delta>)\n                    x) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n   \\<Delta> \\<rbrace>\\<rho>) f|`\n                              (edom \\<rho> \\<union>\n                               domA \\<Delta>)\\<^esub> \\<sqsubseteq>\n    (\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n      \\<Delta> \\<rbrace>\\<rho>) f|`\n                                 (edom \\<rho> \\<union> domA \\<Delta>))\n     x", "by (auto simp add: lookup_HSem_heap)"], ["proof (state)\nthis:\n  \\<lbrakk> the (map_of (\\<Gamma> @ \\<Delta>)\n                  x) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n \\<Delta> \\<rbrace>\\<rho>) f|`\n                            (edom \\<rho> \\<union>\n                             domA \\<Delta>)\\<^esub> \\<sqsubseteq>\n  (\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n    \\<Delta> \\<rbrace>\\<rho>) f|`\n                               (edom \\<rho> \\<union> domA \\<Delta>))\n   x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> domA (\\<Gamma> @ \\<Delta>);\n     x \\<notin> domA \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> \\<lbrakk> the (map_of (\\<Gamma> @ \\<Delta>)\nx) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n                     \\<Delta> \\<rbrace>\\<rho>) f|`\n          (edom \\<rho> \\<union> domA \\<Delta>)\\<^esub> \\<sqsubseteq>\n                      (\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n                        \\<Delta> \\<rbrace>\\<rho>) f|`\n             (edom \\<rho> \\<union> domA \\<Delta>))\n                       x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> domA (\\<Gamma> @ \\<Delta>);\n     x \\<notin> domA \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> \\<lbrakk> the (map_of (\\<Gamma> @ \\<Delta>)\nx) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n                     \\<Delta> \\<rbrace>\\<rho>) f|`\n          (edom \\<rho> \\<union> domA \\<Delta>)\\<^esub> \\<sqsubseteq>\n                      (\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n                        \\<Delta> \\<rbrace>\\<rho>) f|`\n             (edom \\<rho> \\<union> domA \\<Delta>))\n                       x", "case False"], ["proof (state)\nthis:\n  x \\<notin> domA \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> domA (\\<Gamma> @ \\<Delta>);\n     x \\<notin> domA \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> \\<lbrakk> the (map_of (\\<Gamma> @ \\<Delta>)\nx) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n                     \\<Delta> \\<rbrace>\\<rho>) f|`\n          (edom \\<rho> \\<union> domA \\<Delta>)\\<^esub> \\<sqsubseteq>\n                      (\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n                        \\<Delta> \\<rbrace>\\<rho>) f|`\n             (edom \\<rho> \\<union> domA \\<Delta>))\n                       x", "hence delta: \"x \\<in> domA \\<Delta>\""], ["proof (prove)\nusing this:\n  x \\<notin> domA \\<Gamma>\n\ngoal (1 subgoal):\n 1. x \\<in> domA \\<Delta>", "using prems"], ["proof (prove)\nusing this:\n  x \\<notin> domA \\<Gamma>\n  x \\<in> domA (\\<Gamma> @ \\<Delta>)\n\ngoal (1 subgoal):\n 1. x \\<in> domA \\<Delta>", "by auto"], ["proof (state)\nthis:\n  x \\<in> domA \\<Delta>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> domA (\\<Gamma> @ \\<Delta>);\n     x \\<notin> domA \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> \\<lbrakk> the (map_of (\\<Gamma> @ \\<Delta>)\nx) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n                     \\<Delta> \\<rbrace>\\<rho>) f|`\n          (edom \\<rho> \\<union> domA \\<Delta>)\\<^esub> \\<sqsubseteq>\n                      (\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n                        \\<Delta> \\<rbrace>\\<rho>) f|`\n             (edom \\<rho> \\<union> domA \\<Delta>))\n                       x", "with False \\<open>?LHS \\<sqsubseteq> ?RHS\\<close>"], ["proof (chain)\npicking this:\n  x \\<notin> domA \\<Gamma>\n  \\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n   \\<Delta> \\<rbrace>\\<rho>) f|`\n                              (edom \\<rho> \\<union>\n                               domA \\<Delta>) \\<sqsubseteq>\n  \\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>\n  x \\<in> domA \\<Delta>", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<notin> domA \\<Gamma>\n  \\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n   \\<Delta> \\<rbrace>\\<rho>) f|`\n                              (edom \\<rho> \\<union>\n                               domA \\<Delta>) \\<sqsubseteq>\n  \\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>\n  x \\<in> domA \\<Delta>\n\ngoal (1 subgoal):\n 1. \\<lbrakk> the (map_of (\\<Gamma> @ \\<Delta>)\n                    x) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n   \\<Delta> \\<rbrace>\\<rho>) f|`\n                              (edom \\<rho> \\<union>\n                               domA \\<Delta>)\\<^esub> \\<sqsubseteq>\n    (\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n      \\<Delta> \\<rbrace>\\<rho>) f|`\n                                 (edom \\<rho> \\<union> domA \\<Delta>))\n     x", "by (auto simp add: lookup_HSem_other lookup_HSem_heap monofun_cfun_arg)"], ["proof (state)\nthis:\n  \\<lbrakk> the (map_of (\\<Gamma> @ \\<Delta>)\n                  x) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n \\<Delta> \\<rbrace>\\<rho>) f|`\n                            (edom \\<rho> \\<union>\n                             domA \\<Delta>)\\<^esub> \\<sqsubseteq>\n  (\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n    \\<Delta> \\<rbrace>\\<rho>) f|`\n                               (edom \\<rho> \\<union> domA \\<Delta>))\n   x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk> the (map_of (\\<Gamma> @ \\<Delta>)\n                  x) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n \\<Delta> \\<rbrace>\\<rho>) f|`\n                            (edom \\<rho> \\<union>\n                             domA \\<Delta>)\\<^esub> \\<sqsubseteq>\n  (\\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n    \\<Delta> \\<rbrace>\\<rho>) f|`\n                               (edom \\<rho> \\<union> domA \\<Delta>))\n   x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho> \\<sqsubseteq>\n  \\<lbrace> \\<Gamma> \\<rbrace>(\\<lbrace> \\<Gamma> @\n   \\<Delta> \\<rbrace>\\<rho>) f|`\n                              (edom \\<rho> \\<union> domA \\<Delta>)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Iterative definition of the heap semantics\\<close>"], ["", "lemma iterative_HSem:\n  assumes \"x \\<notin> domA \\<Gamma>\"\n  shows \"\\<lbrace>(x,e) # \\<Gamma>\\<rbrace>\\<rho> = (\\<mu> \\<rho>'. (\\<rho> ++\\<^bsub>domA \\<Gamma>\\<^esub> (\\<lbrace>\\<Gamma>\\<rbrace>\\<rho>'))( x := \\<lbrakk>e\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace> (x, e) # \\<Gamma> \\<rbrace>\\<rho> =\n    (\\<mu> xa.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n        (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>xa\\<^esub>))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrace> (x, e) # \\<Gamma> \\<rbrace>\\<rho> =\n    (\\<mu> xa.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n        (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>xa\\<^esub>))", "from assms"], ["proof (chain)\npicking this:\n  x \\<notin> domA \\<Gamma>", "interpret iterative\n    where e1 =  \"\\<Lambda> \\<rho>'. \\<^bold>\\<lbrakk>\\<Gamma>\\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>\"\n    and e2 = \"\\<Lambda> \\<rho>'. \\<lbrakk>e\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>\"\n    and S = \"domA \\<Gamma>\"\n    and x = x"], ["proof (prove)\nusing this:\n  x \\<notin> domA \\<Gamma>\n\ngoal (1 subgoal):\n 1. iterative (domA \\<Gamma>) x", "by unfold_locales"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrace> (x, e) # \\<Gamma> \\<rbrace>\\<rho> =\n    (\\<mu> xa.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n        (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>xa\\<^esub>))", "have \"\\<lbrace>(x,e) # \\<Gamma>\\<rbrace>\\<rho> = fix \\<cdot> L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace> (x, e) # \\<Gamma> \\<rbrace>\\<rho> =\n    (\\<mu> \\<rho>'.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<Lambda> \\<rho>'.\n          \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)\\<cdot>\n      \\<rho>')\n        (x := Abs_cfun (ESem_syn e)\\<cdot>\\<rho>'))", "by (simp add: HSem_def' override_on_upd ne)"], ["proof (state)\nthis:\n  \\<lbrace> (x, e) # \\<Gamma> \\<rbrace>\\<rho> =\n  (\\<mu> \\<rho>'.\n      (\\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> (\\<Lambda> \\<rho>'.\n        \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)\\<cdot>\n    \\<rho>')\n      (x := Abs_cfun (ESem_syn e)\\<cdot>\\<rho>'))\n\ngoal (1 subgoal):\n 1. \\<lbrace> (x, e) # \\<Gamma> \\<rbrace>\\<rho> =\n    (\\<mu> xa.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n        (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>xa\\<^esub>))", "also"], ["proof (state)\nthis:\n  \\<lbrace> (x, e) # \\<Gamma> \\<rbrace>\\<rho> =\n  (\\<mu> \\<rho>'.\n      (\\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> (\\<Lambda> \\<rho>'.\n        \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)\\<cdot>\n    \\<rho>')\n      (x := Abs_cfun (ESem_syn e)\\<cdot>\\<rho>'))\n\ngoal (1 subgoal):\n 1. \\<lbrace> (x, e) # \\<Gamma> \\<rbrace>\\<rho> =\n    (\\<mu> xa.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n        (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>xa\\<^esub>))", "have \"\\<dots> = fix \\<cdot> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<mu> \\<rho>'.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<Lambda> \\<rho>'.\n          \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)\\<cdot>\n      \\<rho>')\n        (x := Abs_cfun (ESem_syn e)\\<cdot>\\<rho>')) =\n    (\\<mu> \\<rho>'.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<mu> \\<rho>''.\n          \\<rho>' ++\\<^bsub>domA\n                             \\<Gamma>\\<^esub> (\\<Lambda> \\<rho>'.\n            \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)\\<cdot>\n        \\<rho>''))\n        (x := Abs_cfun (ESem_syn e)\\<cdot>\\<rho>'))", "by (rule iterative_override_on)"], ["proof (state)\nthis:\n  (\\<mu> \\<rho>'.\n      (\\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> (\\<Lambda> \\<rho>'.\n        \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)\\<cdot>\n    \\<rho>')\n      (x := Abs_cfun (ESem_syn e)\\<cdot>\\<rho>')) =\n  (\\<mu> \\<rho>'.\n      (\\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> (\\<mu> \\<rho>''.\n        \\<rho>' ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<Lambda> \\<rho>'.\n          \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)\\<cdot>\n      \\<rho>''))\n      (x := Abs_cfun (ESem_syn e)\\<cdot>\\<rho>'))\n\ngoal (1 subgoal):\n 1. \\<lbrace> (x, e) # \\<Gamma> \\<rbrace>\\<rho> =\n    (\\<mu> xa.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n        (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>xa\\<^esub>))", "also"], ["proof (state)\nthis:\n  (\\<mu> \\<rho>'.\n      (\\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> (\\<Lambda> \\<rho>'.\n        \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)\\<cdot>\n    \\<rho>')\n      (x := Abs_cfun (ESem_syn e)\\<cdot>\\<rho>')) =\n  (\\<mu> \\<rho>'.\n      (\\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> (\\<mu> \\<rho>''.\n        \\<rho>' ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<Lambda> \\<rho>'.\n          \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)\\<cdot>\n      \\<rho>''))\n      (x := Abs_cfun (ESem_syn e)\\<cdot>\\<rho>'))\n\ngoal (1 subgoal):\n 1. \\<lbrace> (x, e) # \\<Gamma> \\<rbrace>\\<rho> =\n    (\\<mu> xa.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n        (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>xa\\<^esub>))", "have \"\\<dots> = (\\<mu> \\<rho>'. (\\<rho> ++\\<^bsub>domA \\<Gamma>\\<^esub> (\\<lbrace>\\<Gamma>\\<rbrace>\\<rho>'))( x := \\<lbrakk>e\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<mu> \\<rho>'.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<mu> \\<rho>''.\n          \\<rho>' ++\\<^bsub>domA\n                             \\<Gamma>\\<^esub> (\\<Lambda> \\<rho>'.\n            \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)\\<cdot>\n        \\<rho>''))\n        (x := Abs_cfun (ESem_syn e)\\<cdot>\\<rho>')) =\n    (\\<mu> xa.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n        (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>xa\\<^esub>))", "by (simp add: HSem_def')"], ["proof (state)\nthis:\n  (\\<mu> \\<rho>'.\n      (\\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> (\\<mu> \\<rho>''.\n        \\<rho>' ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<Lambda> \\<rho>'.\n          \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)\\<cdot>\n      \\<rho>''))\n      (x := Abs_cfun (ESem_syn e)\\<cdot>\\<rho>')) =\n  (\\<mu> xa.\n      (\\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n      (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>xa\\<^esub>))\n\ngoal (1 subgoal):\n 1. \\<lbrace> (x, e) # \\<Gamma> \\<rbrace>\\<rho> =\n    (\\<mu> xa.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n        (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>xa\\<^esub>))", "finally"], ["proof (chain)\npicking this:\n  \\<lbrace> (x, e) # \\<Gamma> \\<rbrace>\\<rho> =\n  (\\<mu> xa.\n      (\\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n      (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>xa\\<^esub>))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrace> (x, e) # \\<Gamma> \\<rbrace>\\<rho> =\n  (\\<mu> xa.\n      (\\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n      (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>xa\\<^esub>))\n\ngoal (1 subgoal):\n 1. \\<lbrace> (x, e) # \\<Gamma> \\<rbrace>\\<rho> =\n    (\\<mu> xa.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n        (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>xa\\<^esub>))", "."], ["proof (state)\nthis:\n  \\<lbrace> (x, e) # \\<Gamma> \\<rbrace>\\<rho> =\n  (\\<mu> xa.\n      (\\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n      (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>xa\\<^esub>))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma iterative_HSem':\n  assumes \"x \\<notin> domA \\<Gamma>\"\n  shows \"(\\<mu> \\<rho>'. (\\<rho> ++\\<^bsub>domA \\<Gamma>\\<^esub> (\\<lbrace>\\<Gamma>\\<rbrace>\\<rho>'))( x := \\<lbrakk>e\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>))\n       = (\\<mu> \\<rho>'. (\\<rho> ++\\<^bsub>domA \\<Gamma>\\<^esub> (\\<lbrace>\\<Gamma>\\<rbrace>\\<rho>'))( x := \\<lbrakk>e\\<rbrakk>\\<^bsub>\\<lbrace>\\<Gamma>\\<rbrace>\\<rho>'\\<^esub>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<mu> xa.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n        (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>xa\\<^esub>)) =\n    (\\<mu> xa.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n        (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>xa\\<^esub>))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<mu> xa.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n        (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>xa\\<^esub>)) =\n    (\\<mu> xa.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n        (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>xa\\<^esub>))", "from assms"], ["proof (chain)\npicking this:\n  x \\<notin> domA \\<Gamma>", "interpret iterative\n    where e1 =  \"\\<Lambda> \\<rho>'. \\<^bold>\\<lbrakk>\\<Gamma>\\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>\"\n    and e2 = \"\\<Lambda> \\<rho>'. \\<lbrakk>e\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>\"\n    and S = \"domA \\<Gamma>\"\n    and x = x"], ["proof (prove)\nusing this:\n  x \\<notin> domA \\<Gamma>\n\ngoal (1 subgoal):\n 1. iterative (domA \\<Gamma>) x", "by unfold_locales"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<mu> xa.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n        (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>xa\\<^esub>)) =\n    (\\<mu> xa.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n        (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>xa\\<^esub>))", "have \"(\\<mu> \\<rho>'. (\\<rho> ++\\<^bsub>domA \\<Gamma>\\<^esub> (\\<lbrace>\\<Gamma>\\<rbrace>\\<rho>'))( x := \\<lbrakk>e\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)) = fix \\<cdot> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<mu> xa.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n        (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>xa\\<^esub>)) =\n    (\\<mu> \\<rho>'.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<mu> \\<rho>''.\n          \\<rho>' ++\\<^bsub>domA\n                             \\<Gamma>\\<^esub> (\\<Lambda> \\<rho>'.\n            \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)\\<cdot>\n        \\<rho>''))\n        (x := Abs_cfun (ESem_syn e)\\<cdot>\\<rho>'))", "by (simp add: HSem_def')"], ["proof (state)\nthis:\n  (\\<mu> xa.\n      (\\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n      (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>xa\\<^esub>)) =\n  (\\<mu> \\<rho>'.\n      (\\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> (\\<mu> \\<rho>''.\n        \\<rho>' ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<Lambda> \\<rho>'.\n          \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)\\<cdot>\n      \\<rho>''))\n      (x := Abs_cfun (ESem_syn e)\\<cdot>\\<rho>'))\n\ngoal (1 subgoal):\n 1. (\\<mu> xa.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n        (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>xa\\<^esub>)) =\n    (\\<mu> xa.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n        (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>xa\\<^esub>))", "also"], ["proof (state)\nthis:\n  (\\<mu> xa.\n      (\\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n      (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>xa\\<^esub>)) =\n  (\\<mu> \\<rho>'.\n      (\\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> (\\<mu> \\<rho>''.\n        \\<rho>' ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<Lambda> \\<rho>'.\n          \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)\\<cdot>\n      \\<rho>''))\n      (x := Abs_cfun (ESem_syn e)\\<cdot>\\<rho>'))\n\ngoal (1 subgoal):\n 1. (\\<mu> xa.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n        (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>xa\\<^esub>)) =\n    (\\<mu> xa.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n        (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>xa\\<^esub>))", "have \"\\<dots> = fix \\<cdot> L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<mu> \\<rho>'.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<mu> \\<rho>''.\n          \\<rho>' ++\\<^bsub>domA\n                             \\<Gamma>\\<^esub> (\\<Lambda> \\<rho>'.\n            \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)\\<cdot>\n        \\<rho>''))\n        (x := Abs_cfun (ESem_syn e)\\<cdot>\\<rho>')) =\n    (\\<mu> \\<rho>'.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<Lambda> \\<rho>'.\n          \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)\\<cdot>\n      \\<rho>')\n        (x := Abs_cfun (ESem_syn e)\\<cdot>\\<rho>'))", "by (rule iterative_override_on[symmetric])"], ["proof (state)\nthis:\n  (\\<mu> \\<rho>'.\n      (\\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> (\\<mu> \\<rho>''.\n        \\<rho>' ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<Lambda> \\<rho>'.\n          \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)\\<cdot>\n      \\<rho>''))\n      (x := Abs_cfun (ESem_syn e)\\<cdot>\\<rho>')) =\n  (\\<mu> \\<rho>'.\n      (\\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> (\\<Lambda> \\<rho>'.\n        \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)\\<cdot>\n    \\<rho>')\n      (x := Abs_cfun (ESem_syn e)\\<cdot>\\<rho>'))\n\ngoal (1 subgoal):\n 1. (\\<mu> xa.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n        (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>xa\\<^esub>)) =\n    (\\<mu> xa.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n        (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>xa\\<^esub>))", "also"], ["proof (state)\nthis:\n  (\\<mu> \\<rho>'.\n      (\\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> (\\<mu> \\<rho>''.\n        \\<rho>' ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<Lambda> \\<rho>'.\n          \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)\\<cdot>\n      \\<rho>''))\n      (x := Abs_cfun (ESem_syn e)\\<cdot>\\<rho>')) =\n  (\\<mu> \\<rho>'.\n      (\\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> (\\<Lambda> \\<rho>'.\n        \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)\\<cdot>\n    \\<rho>')\n      (x := Abs_cfun (ESem_syn e)\\<cdot>\\<rho>'))\n\ngoal (1 subgoal):\n 1. (\\<mu> xa.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n        (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>xa\\<^esub>)) =\n    (\\<mu> xa.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n        (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>xa\\<^esub>))", "have \"\\<dots> = fix \\<cdot> R'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<mu> \\<rho>'.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<Lambda> \\<rho>'.\n          \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)\\<cdot>\n      \\<rho>')\n        (x := Abs_cfun (ESem_syn e)\\<cdot>\\<rho>')) =\n    (\\<mu> \\<rho>'.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<mu> \\<rho>''.\n          \\<rho>' ++\\<^bsub>domA\n                             \\<Gamma>\\<^esub> (\\<Lambda> \\<rho>'.\n            \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)\\<cdot>\n        \\<rho>''))\n        (x := Abs_cfun (ESem_syn e)\\<cdot>\n              (\\<mu> \\<rho>''.\n                  \\<rho>' ++\\<^bsub>domA\n                                     \\<Gamma>\\<^esub> (\\<Lambda> \\<rho>'.\n                    \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)\\<cdot>\n                \\<rho>'')))", "by (rule iterative_override_on')"], ["proof (state)\nthis:\n  (\\<mu> \\<rho>'.\n      (\\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> (\\<Lambda> \\<rho>'.\n        \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)\\<cdot>\n    \\<rho>')\n      (x := Abs_cfun (ESem_syn e)\\<cdot>\\<rho>')) =\n  (\\<mu> \\<rho>'.\n      (\\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> (\\<mu> \\<rho>''.\n        \\<rho>' ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<Lambda> \\<rho>'.\n          \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)\\<cdot>\n      \\<rho>''))\n      (x := Abs_cfun (ESem_syn e)\\<cdot>\n            (\\<mu> \\<rho>''.\n                \\<rho>' ++\\<^bsub>domA\n                                   \\<Gamma>\\<^esub> (\\<Lambda> \\<rho>'.\n                  \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)\\<cdot>\n              \\<rho>'')))\n\ngoal (1 subgoal):\n 1. (\\<mu> xa.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n        (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>xa\\<^esub>)) =\n    (\\<mu> xa.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n        (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>xa\\<^esub>))", "also"], ["proof (state)\nthis:\n  (\\<mu> \\<rho>'.\n      (\\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> (\\<Lambda> \\<rho>'.\n        \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)\\<cdot>\n    \\<rho>')\n      (x := Abs_cfun (ESem_syn e)\\<cdot>\\<rho>')) =\n  (\\<mu> \\<rho>'.\n      (\\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> (\\<mu> \\<rho>''.\n        \\<rho>' ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<Lambda> \\<rho>'.\n          \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)\\<cdot>\n      \\<rho>''))\n      (x := Abs_cfun (ESem_syn e)\\<cdot>\n            (\\<mu> \\<rho>''.\n                \\<rho>' ++\\<^bsub>domA\n                                   \\<Gamma>\\<^esub> (\\<Lambda> \\<rho>'.\n                  \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)\\<cdot>\n              \\<rho>'')))\n\ngoal (1 subgoal):\n 1. (\\<mu> xa.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n        (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>xa\\<^esub>)) =\n    (\\<mu> xa.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n        (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>xa\\<^esub>))", "have \"\\<dots> = (\\<mu> \\<rho>'. (\\<rho> ++\\<^bsub>domA \\<Gamma>\\<^esub> (\\<lbrace>\\<Gamma>\\<rbrace>\\<rho>'))( x := \\<lbrakk>e\\<rbrakk>\\<^bsub>\\<lbrace>\\<Gamma>\\<rbrace>\\<rho>'\\<^esub>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<mu> \\<rho>'.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<mu> \\<rho>''.\n          \\<rho>' ++\\<^bsub>domA\n                             \\<Gamma>\\<^esub> (\\<Lambda> \\<rho>'.\n            \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)\\<cdot>\n        \\<rho>''))\n        (x := Abs_cfun (ESem_syn e)\\<cdot>\n              (\\<mu> \\<rho>''.\n                  \\<rho>' ++\\<^bsub>domA\n                                     \\<Gamma>\\<^esub> (\\<Lambda> \\<rho>'.\n                    \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)\\<cdot>\n                \\<rho>''))) =\n    (\\<mu> xa.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n        (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>xa\\<^esub>))", "by (simp add: HSem_def')"], ["proof (state)\nthis:\n  (\\<mu> \\<rho>'.\n      (\\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> (\\<mu> \\<rho>''.\n        \\<rho>' ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<Lambda> \\<rho>'.\n          \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)\\<cdot>\n      \\<rho>''))\n      (x := Abs_cfun (ESem_syn e)\\<cdot>\n            (\\<mu> \\<rho>''.\n                \\<rho>' ++\\<^bsub>domA\n                                   \\<Gamma>\\<^esub> (\\<Lambda> \\<rho>'.\n                  \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>)\\<cdot>\n              \\<rho>''))) =\n  (\\<mu> xa.\n      (\\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n      (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>xa\\<^esub>))\n\ngoal (1 subgoal):\n 1. (\\<mu> xa.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n        (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>xa\\<^esub>)) =\n    (\\<mu> xa.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n        (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>xa\\<^esub>))", "finally"], ["proof (chain)\npicking this:\n  (\\<mu> xa.\n      (\\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n      (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>xa\\<^esub>)) =\n  (\\<mu> xa.\n      (\\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n      (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>xa\\<^esub>))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<mu> xa.\n      (\\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n      (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>xa\\<^esub>)) =\n  (\\<mu> xa.\n      (\\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n      (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>xa\\<^esub>))\n\ngoal (1 subgoal):\n 1. (\\<mu> xa.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n        (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>xa\\<^esub>)) =\n    (\\<mu> xa.\n        (\\<rho> ++\\<^bsub>domA\n                           \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n        (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>xa\\<^esub>))", "."], ["proof (state)\nthis:\n  (\\<mu> xa.\n      (\\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n      (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>xa\\<^esub>)) =\n  (\\<mu> xa.\n      (\\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> (\\<lbrace> \\<Gamma> \\<rbrace>xa))\n      (x := \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>xa\\<^esub>))\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Fresh variables on the heap are irrelevant\\<close>"], ["", "lemma HSem_ignores_fresh_restr':\n  assumes \"fv \\<Gamma> \\<subseteq> S\"\n  assumes \"\\<And> x \\<rho>. x \\<in> domA \\<Gamma> \\<Longrightarrow> \\<lbrakk> the (map_of \\<Gamma> x) \\<rbrakk>\\<^bsub>\\<rho>\\<^esub> = \\<lbrakk> the (map_of \\<Gamma> x) \\<rbrakk>\\<^bsub>\\<rho> f|` (fv (the (map_of \\<Gamma> x)))\\<^esub>\"\n  shows \"(\\<lbrace>\\<Gamma>\\<rbrace>\\<rho>) f|` S = \\<lbrace>\\<Gamma>\\<rbrace>\\<rho> f|` S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>) f|` S =\n    \\<lbrace> \\<Gamma> \\<rbrace>\\<rho> f|` S", "proof(induction rule: parallel_HSem_ind[case_names adm base step])"], ["proof (state)\ngoal (3 subgoals):\n 1. adm (\\<lambda>\\<rho>'. fst \\<rho>' f|` S = snd \\<rho>')\n 2. \\<bottom> f|` S = \\<bottom>\n 3. \\<And>y z.\n       y f|` S = z \\<Longrightarrow>\n       (\\<rho> ++\\<^bsub>domA\n                          \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>) f|`\n       S =\n       \\<rho> f|`\n       S ++\\<^bsub>domA\n                    \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>", "case adm"], ["proof (state)\nthis:\n  \n\ngoal (3 subgoals):\n 1. adm (\\<lambda>\\<rho>'. fst \\<rho>' f|` S = snd \\<rho>')\n 2. \\<bottom> f|` S = \\<bottom>\n 3. \\<And>y z.\n       y f|` S = z \\<Longrightarrow>\n       (\\<rho> ++\\<^bsub>domA\n                          \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>) f|`\n       S =\n       \\<rho> f|`\n       S ++\\<^bsub>domA\n                    \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. adm (\\<lambda>\\<rho>'. fst \\<rho>' f|` S = snd \\<rho>')", "by simp"], ["proof (state)\nthis:\n  adm (\\<lambda>\\<rho>'. fst \\<rho>' f|` S = snd \\<rho>')\n\ngoal (2 subgoals):\n 1. \\<bottom> f|` S = \\<bottom>\n 2. \\<And>y z.\n       y f|` S = z \\<Longrightarrow>\n       (\\<rho> ++\\<^bsub>domA\n                          \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>) f|`\n       S =\n       \\<rho> f|`\n       S ++\\<^bsub>domA\n                    \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<bottom> f|` S = \\<bottom>\n 2. \\<And>y z.\n       y f|` S = z \\<Longrightarrow>\n       (\\<rho> ++\\<^bsub>domA\n                          \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>) f|`\n       S =\n       \\<rho> f|`\n       S ++\\<^bsub>domA\n                    \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>", "case base"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<bottom> f|` S = \\<bottom>\n 2. \\<And>y z.\n       y f|` S = z \\<Longrightarrow>\n       (\\<rho> ++\\<^bsub>domA\n                          \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>) f|`\n       S =\n       \\<rho> f|`\n       S ++\\<^bsub>domA\n                    \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bottom> f|` S = \\<bottom>", "by simp"], ["proof (state)\nthis:\n  \\<bottom> f|` S = \\<bottom>\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       y f|` S = z \\<Longrightarrow>\n       (\\<rho> ++\\<^bsub>domA\n                          \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>) f|`\n       S =\n       \\<rho> f|`\n       S ++\\<^bsub>domA\n                    \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z.\n       y f|` S = z \\<Longrightarrow>\n       (\\<rho> ++\\<^bsub>domA\n                          \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>) f|`\n       S =\n       \\<rho> f|`\n       S ++\\<^bsub>domA\n                    \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>", "case (step y z)"], ["proof (state)\nthis:\n  y f|` S = z\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       y f|` S = z \\<Longrightarrow>\n       (\\<rho> ++\\<^bsub>domA\n                          \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>) f|`\n       S =\n       \\<rho> f|`\n       S ++\\<^bsub>domA\n                    \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>", "have \"\\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub> = \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub> =\n    \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>", "proof(rule evalHeap_cong')"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> domA \\<Gamma> \\<Longrightarrow>\n       \\<lbrakk> the (map_of \\<Gamma> x) \\<rbrakk>\\<^bsub>y\\<^esub> =\n       \\<lbrakk> the (map_of \\<Gamma> x) \\<rbrakk>\\<^bsub>z\\<^esub>", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> domA \\<Gamma> \\<Longrightarrow>\n       \\<lbrakk> the (map_of \\<Gamma> x) \\<rbrakk>\\<^bsub>y\\<^esub> =\n       \\<lbrakk> the (map_of \\<Gamma> x) \\<rbrakk>\\<^bsub>z\\<^esub>", "assume \"x \\<in> domA \\<Gamma>\""], ["proof (state)\nthis:\n  x \\<in> domA \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> domA \\<Gamma> \\<Longrightarrow>\n       \\<lbrakk> the (map_of \\<Gamma> x) \\<rbrakk>\\<^bsub>y\\<^esub> =\n       \\<lbrakk> the (map_of \\<Gamma> x) \\<rbrakk>\\<^bsub>z\\<^esub>", "hence \"fv (the (map_of \\<Gamma> x)) \\<subseteq> fv \\<Gamma>\""], ["proof (prove)\nusing this:\n  x \\<in> domA \\<Gamma>\n\ngoal (1 subgoal):\n 1. fv (the (map_of \\<Gamma> x)) \\<subseteq> fv \\<Gamma>", "by (rule map_of_fv_subset)"], ["proof (state)\nthis:\n  fv (the (map_of \\<Gamma> x)) \\<subseteq> fv \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> domA \\<Gamma> \\<Longrightarrow>\n       \\<lbrakk> the (map_of \\<Gamma> x) \\<rbrakk>\\<^bsub>y\\<^esub> =\n       \\<lbrakk> the (map_of \\<Gamma> x) \\<rbrakk>\\<^bsub>z\\<^esub>", "with assms(1)"], ["proof (chain)\npicking this:\n  fv \\<Gamma> \\<subseteq> S\n  fv (the (map_of \\<Gamma> x)) \\<subseteq> fv \\<Gamma>", "have \"fv (the (map_of \\<Gamma> x)) \\<inter> S = fv (the (map_of \\<Gamma> x))\""], ["proof (prove)\nusing this:\n  fv \\<Gamma> \\<subseteq> S\n  fv (the (map_of \\<Gamma> x)) \\<subseteq> fv \\<Gamma>\n\ngoal (1 subgoal):\n 1. fv (the (map_of \\<Gamma> x)) \\<inter> S = fv (the (map_of \\<Gamma> x))", "by auto"], ["proof (state)\nthis:\n  fv (the (map_of \\<Gamma> x)) \\<inter> S = fv (the (map_of \\<Gamma> x))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> domA \\<Gamma> \\<Longrightarrow>\n       \\<lbrakk> the (map_of \\<Gamma> x) \\<rbrakk>\\<^bsub>y\\<^esub> =\n       \\<lbrakk> the (map_of \\<Gamma> x) \\<rbrakk>\\<^bsub>z\\<^esub>", "with step"], ["proof (chain)\npicking this:\n  y f|` S = z\n  fv (the (map_of \\<Gamma> x)) \\<inter> S = fv (the (map_of \\<Gamma> x))", "have \"y f|` fv (the (map_of \\<Gamma> x)) = z f|` fv (the (map_of \\<Gamma> x))\""], ["proof (prove)\nusing this:\n  y f|` S = z\n  fv (the (map_of \\<Gamma> x)) \\<inter> S = fv (the (map_of \\<Gamma> x))\n\ngoal (1 subgoal):\n 1. y f|` fv (the (map_of \\<Gamma> x)) = z f|` fv (the (map_of \\<Gamma> x))", "by auto"], ["proof (state)\nthis:\n  y f|` fv (the (map_of \\<Gamma> x)) = z f|` fv (the (map_of \\<Gamma> x))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> domA \\<Gamma> \\<Longrightarrow>\n       \\<lbrakk> the (map_of \\<Gamma> x) \\<rbrakk>\\<^bsub>y\\<^esub> =\n       \\<lbrakk> the (map_of \\<Gamma> x) \\<rbrakk>\\<^bsub>z\\<^esub>", "with \\<open>x \\<in> domA \\<Gamma>\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> domA \\<Gamma>\n  y f|` fv (the (map_of \\<Gamma> x)) = z f|` fv (the (map_of \\<Gamma> x))", "show \"\\<lbrakk> the (map_of \\<Gamma> x) \\<rbrakk>\\<^bsub>y\\<^esub> = \\<lbrakk> the (map_of \\<Gamma> x) \\<rbrakk>\\<^bsub>z\\<^esub>\""], ["proof (prove)\nusing this:\n  x \\<in> domA \\<Gamma>\n  y f|` fv (the (map_of \\<Gamma> x)) = z f|` fv (the (map_of \\<Gamma> x))\n\ngoal (1 subgoal):\n 1. \\<lbrakk> the (map_of \\<Gamma> x) \\<rbrakk>\\<^bsub>y\\<^esub> =\n    \\<lbrakk> the (map_of \\<Gamma> x) \\<rbrakk>\\<^bsub>z\\<^esub>", "by (subst (1 2) assms(2)[OF \\<open>x \\<in> domA \\<Gamma>\\<close>]) simp"], ["proof (state)\nthis:\n  \\<lbrakk> the (map_of \\<Gamma> x) \\<rbrakk>\\<^bsub>y\\<^esub> =\n  \\<lbrakk> the (map_of \\<Gamma> x) \\<rbrakk>\\<^bsub>z\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub> =\n  \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       y f|` S = z \\<Longrightarrow>\n       (\\<rho> ++\\<^bsub>domA\n                          \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>) f|`\n       S =\n       \\<rho> f|`\n       S ++\\<^bsub>domA\n                    \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>", "moreover"], ["proof (state)\nthis:\n  \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub> =\n  \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       y f|` S = z \\<Longrightarrow>\n       (\\<rho> ++\\<^bsub>domA\n                          \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>) f|`\n       S =\n       \\<rho> f|`\n       S ++\\<^bsub>domA\n                    \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>", "have \"domA \\<Gamma> \\<subseteq> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. domA \\<Gamma> \\<subseteq> S", "using domA_fv_subset assms(1)"], ["proof (prove)\nusing this:\n  domA ?\\<Gamma> \\<subseteq> fv ?\\<Gamma>\n  fv \\<Gamma> \\<subseteq> S\n\ngoal (1 subgoal):\n 1. domA \\<Gamma> \\<subseteq> S", "by auto"], ["proof (state)\nthis:\n  domA \\<Gamma> \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       y f|` S = z \\<Longrightarrow>\n       (\\<rho> ++\\<^bsub>domA\n                          \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>) f|`\n       S =\n       \\<rho> f|`\n       S ++\\<^bsub>domA\n                    \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>", "ultimately"], ["proof (chain)\npicking this:\n  \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub> =\n  \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>\n  domA \\<Gamma> \\<subseteq> S", "show ?case"], ["proof (prove)\nusing this:\n  \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub> =\n  \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>\n  domA \\<Gamma> \\<subseteq> S\n\ngoal (1 subgoal):\n 1. (\\<rho> ++\\<^bsub>domA\n                       \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>) f|`\n    S =\n    \\<rho> f|`\n    S ++\\<^bsub>domA\n                 \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>", "by (simp add: env_restr_add env_restr_evalHeap_noop)"], ["proof (state)\nthis:\n  (\\<rho> ++\\<^bsub>domA\n                     \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>) f|`\n  S =\n  \\<rho> f|`\n  S ++\\<^bsub>domA\n               \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsubsection \\<open>Freshness\\<close>"], ["", "context has_ignore_fresh_ESem begin"], ["", "lemma ESem_fresh_cong:\n  assumes \"\\<rho> f|` (fv e) = \\<rho>' f|` (fv e)\"\n  shows \"\\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>\\<^esub> = \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>\\<^esub> =\n    \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>", "by (metis assms ESem_considers_fv)"], ["", "lemma ESem_fresh_cong_subset:\n  assumes \"fv e \\<subseteq> S\"\n  assumes \"\\<rho> f|` S = \\<rho>' f|` S\"\n  shows \"\\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>\\<^esub> = \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>\\<^esub> =\n    \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>", "by (rule ESem_fresh_cong[OF  env_restr_eq_subset[OF assms]])"], ["", "lemma ESem_fresh_cong_below:\n  assumes \"\\<rho> f|` (fv e) \\<sqsubseteq> \\<rho>' f|` (fv e)\"\n  shows \"\\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>\\<^esub> \\<sqsubseteq> \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>\\<^esub> \\<sqsubseteq>\n    \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>", "by (metis assms ESem_considers_fv monofun_cfun_arg)"], ["", "lemma ESem_fresh_cong_below_subset:\n  assumes \"fv e \\<subseteq> S\"\n  assumes \"\\<rho> f|` S \\<sqsubseteq> \\<rho>' f|` S\"\n  shows \"\\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>\\<^esub> \\<sqsubseteq> \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>\\<^esub> \\<sqsubseteq>\n    \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>'\\<^esub>", "by (rule ESem_fresh_cong_below[OF  env_restr_below_subset[OF assms]])"], ["", "lemma ESem_ignores_fresh_restr:\n  assumes \"atom ` S \\<sharp>* e\"\n  shows \"\\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>\\<^esub> = \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho> f|` (- S)\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>\\<^esub> =\n    \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho> f|` (- S)\\<^esub>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>\\<^esub> =\n    \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho> f|` (- S)\\<^esub>", "have \"fv e \\<inter> - S = fv e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fv e \\<inter> - S = fv e", "using assms"], ["proof (prove)\nusing this:\n  atom ` S \\<sharp>* e\n\ngoal (1 subgoal):\n 1. fv e \\<inter> - S = fv e", "by (auto simp add: fresh_def fresh_star_def fv_supp)"], ["proof (state)\nthis:\n  fv e \\<inter> - S = fv e\n\ngoal (1 subgoal):\n 1. \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>\\<^esub> =\n    \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho> f|` (- S)\\<^esub>", "thus ?thesis"], ["proof (prove)\nusing this:\n  fv e \\<inter> - S = fv e\n\ngoal (1 subgoal):\n 1. \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>\\<^esub> =\n    \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho> f|` (- S)\\<^esub>", "by (subst (1 2) ESem_considers_fv) simp"], ["proof (state)\nthis:\n  \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>\\<^esub> =\n  \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho> f|` (- S)\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ESem_ignores_fresh_restr':\n  assumes \"atom ` (edom \\<rho> - S) \\<sharp>* e\"\n  shows \"\\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>\\<^esub> = \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho> f|` S\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>\\<^esub> =\n    \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho> f|` S\\<^esub>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>\\<^esub> =\n    \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho> f|` S\\<^esub>", "have \"\\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>\\<^esub> =  \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho> f|` (- (edom \\<rho> - S))\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>\\<^esub> =\n    \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho> f|` (- (edom \\<rho> - S))\\<^esub>", "by (rule ESem_ignores_fresh_restr[OF assms])"], ["proof (state)\nthis:\n  \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>\\<^esub> =\n  \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho> f|` (- (edom \\<rho> - S))\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>\\<^esub> =\n    \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho> f|` S\\<^esub>", "also"], ["proof (state)\nthis:\n  \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>\\<^esub> =\n  \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho> f|` (- (edom \\<rho> - S))\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>\\<^esub> =\n    \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho> f|` S\\<^esub>", "have \"\\<rho> f|` (- (edom \\<rho> - S)) = \\<rho> f|` S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rho> f|` (- (edom \\<rho> - S)) = \\<rho> f|` S", "by (rule ext) (auto simp add: lookup_env_restr_eq dest: lookup_not_edom)"], ["proof (state)\nthis:\n  \\<rho> f|` (- (edom \\<rho> - S)) = \\<rho> f|` S\n\ngoal (1 subgoal):\n 1. \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>\\<^esub> =\n    \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho> f|` S\\<^esub>", "finally"], ["proof (chain)\npicking this:\n  \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>\\<^esub> =\n  \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho> f|` S\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>\\<^esub> =\n  \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho> f|` S\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>\\<^esub> =\n    \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho> f|` S\\<^esub>", "."], ["proof (state)\nthis:\n  \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>\\<^esub> =\n  \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho> f|` S\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HSem_ignores_fresh_restr'':\n  assumes \"fv \\<Gamma> \\<subseteq> S\"\n  shows \"(\\<lbrace>\\<Gamma>\\<rbrace>\\<rho>) f|` S = \\<lbrace>\\<Gamma>\\<rbrace>\\<rho> f|` S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>) f|` S =\n    \\<lbrace> \\<Gamma> \\<rbrace>\\<rho> f|` S", "by (rule HSem_ignores_fresh_restr'[OF assms(1) ESem_considers_fv])"], ["", "lemma HSem_ignores_fresh_restr:\n  assumes \"atom ` S \\<sharp>* \\<Gamma>\"\n  shows \"(\\<lbrace>\\<Gamma>\\<rbrace>\\<rho>) f|` (- S) = \\<lbrace>\\<Gamma>\\<rbrace>\\<rho> f|` (- S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>) f|` (- S) =\n    \\<lbrace> \\<Gamma> \\<rbrace>\\<rho> f|` (- S)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>) f|` (- S) =\n    \\<lbrace> \\<Gamma> \\<rbrace>\\<rho> f|` (- S)", "from assms"], ["proof (chain)\npicking this:\n  atom ` S \\<sharp>* \\<Gamma>", "have \"fv \\<Gamma> \\<subseteq> - S\""], ["proof (prove)\nusing this:\n  atom ` S \\<sharp>* \\<Gamma>\n\ngoal (1 subgoal):\n 1. fv \\<Gamma> \\<subseteq> - S", "by (auto simp add: fv_def fresh_star_def fresh_def)"], ["proof (state)\nthis:\n  fv \\<Gamma> \\<subseteq> - S\n\ngoal (1 subgoal):\n 1. (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>) f|` (- S) =\n    \\<lbrace> \\<Gamma> \\<rbrace>\\<rho> f|` (- S)", "thus ?thesis"], ["proof (prove)\nusing this:\n  fv \\<Gamma> \\<subseteq> - S\n\ngoal (1 subgoal):\n 1. (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>) f|` (- S) =\n    \\<lbrace> \\<Gamma> \\<rbrace>\\<rho> f|` (- S)", "by (rule HSem_ignores_fresh_restr'')"], ["proof (state)\nthis:\n  (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>) f|` (- S) =\n  \\<lbrace> \\<Gamma> \\<rbrace>\\<rho> f|` (- S)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HSem_fresh_cong_below:\n  assumes \"\\<rho> f|` ((S \\<union> fv \\<Gamma>) - domA \\<Gamma>) \\<sqsubseteq> \\<rho>' f|` ((S \\<union> fv \\<Gamma>) - domA \\<Gamma>)\"\n  shows \"(\\<lbrace>\\<Gamma>\\<rbrace>\\<rho>) f|` S \\<sqsubseteq> (\\<lbrace>\\<Gamma>\\<rbrace>\\<rho>') f|` S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>) f|` S \\<sqsubseteq>\n    (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>') f|` S", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>) f|` S \\<sqsubseteq>\n    (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>') f|` S", "from assms"], ["proof (chain)\npicking this:\n  \\<rho> f|` (S \\<union> fv \\<Gamma> - domA \\<Gamma>) \\<sqsubseteq>\n  \\<rho>' f|` (S \\<union> fv \\<Gamma> - domA \\<Gamma>)", "have \"\\<lbrace>\\<Gamma>\\<rbrace>(\\<rho> f|` (S \\<union> fv \\<Gamma>)) \\<sqsubseteq> \\<lbrace>\\<Gamma>\\<rbrace>(\\<rho>' f|` (S \\<union> fv \\<Gamma>))\""], ["proof (prove)\nusing this:\n  \\<rho> f|` (S \\<union> fv \\<Gamma> - domA \\<Gamma>) \\<sqsubseteq>\n  \\<rho>' f|` (S \\<union> fv \\<Gamma> - domA \\<Gamma>)\n\ngoal (1 subgoal):\n 1. \\<lbrace> \\<Gamma> \\<rbrace>\\<rho> f|`\n                                (S \\<union> fv \\<Gamma>) \\<sqsubseteq>\n    \\<lbrace> \\<Gamma> \\<rbrace>\\<rho>' f|` (S \\<union> fv \\<Gamma>)", "by (auto intro: HSem_restr_cong_below simp add: Diff_eq inf_commute)"], ["proof (state)\nthis:\n  \\<lbrace> \\<Gamma> \\<rbrace>\\<rho> f|`\n                              (S \\<union> fv \\<Gamma>) \\<sqsubseteq>\n  \\<lbrace> \\<Gamma> \\<rbrace>\\<rho>' f|` (S \\<union> fv \\<Gamma>)\n\ngoal (1 subgoal):\n 1. (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>) f|` S \\<sqsubseteq>\n    (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>') f|` S", "hence \"(\\<lbrace>\\<Gamma>\\<rbrace>\\<rho>) f|` (S \\<union> fv \\<Gamma>) \\<sqsubseteq> (\\<lbrace>\\<Gamma>\\<rbrace>\\<rho>') f|` (S \\<union> fv \\<Gamma>)\""], ["proof (prove)\nusing this:\n  \\<lbrace> \\<Gamma> \\<rbrace>\\<rho> f|`\n                              (S \\<union> fv \\<Gamma>) \\<sqsubseteq>\n  \\<lbrace> \\<Gamma> \\<rbrace>\\<rho>' f|` (S \\<union> fv \\<Gamma>)\n\ngoal (1 subgoal):\n 1. (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>) f|`\n    (S \\<union> fv \\<Gamma>) \\<sqsubseteq>\n    (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>') f|` (S \\<union> fv \\<Gamma>)", "by (subst (1 2) HSem_ignores_fresh_restr'') simp_all"], ["proof (state)\nthis:\n  (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>) f|`\n  (S \\<union> fv \\<Gamma>) \\<sqsubseteq>\n  (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>') f|` (S \\<union> fv \\<Gamma>)\n\ngoal (1 subgoal):\n 1. (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>) f|` S \\<sqsubseteq>\n    (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>') f|` S", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>) f|`\n  (S \\<union> fv \\<Gamma>) \\<sqsubseteq>\n  (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>') f|` (S \\<union> fv \\<Gamma>)\n\ngoal (1 subgoal):\n 1. (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>) f|` S \\<sqsubseteq>\n    (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>') f|` S", "by (rule env_restr_below_subset[OF Un_upper1])"], ["proof (state)\nthis:\n  (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>) f|` S \\<sqsubseteq>\n  (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>') f|` S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HSem_fresh_cong:\n  assumes \"\\<rho> f|` ((S \\<union> fv \\<Gamma>) - domA \\<Gamma>) = \\<rho>' f|` ((S \\<union> fv \\<Gamma>) - domA \\<Gamma>)\"\n  shows \"(\\<lbrace>\\<Gamma>\\<rbrace>\\<rho>) f|` S = (\\<lbrace>\\<Gamma>\\<rbrace>\\<rho>') f|` S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>) f|` S =\n    (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>') f|` S", "apply (rule below_antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>) f|` S \\<sqsubseteq>\n    (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>') f|` S\n 2. (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>') f|` S \\<sqsubseteq>\n    (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>) f|` S", "apply (rule HSem_fresh_cong_below[OF eq_imp_below[OF assms]])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>') f|` S \\<sqsubseteq>\n    (\\<lbrace> \\<Gamma> \\<rbrace>\\<rho>) f|` S", "apply (rule HSem_fresh_cong_below[OF eq_imp_below[OF assms[symmetric]]])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsubsection \\<open>Adding a fresh variable to a heap does not affect its semantics\\<close>"], ["", "lemma HSem_add_fresh':\n  assumes fresh: \"atom x \\<sharp> \\<Gamma>\"\n  assumes \"x \\<notin> edom \\<rho>\"\n  assumes step: \"\\<And>e \\<rho>'. e \\<in> snd ` set \\<Gamma> \\<Longrightarrow> \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>'\\<^esub> = \\<lbrakk> e \\<rbrakk>\\<^bsub>env_delete x \\<rho>'\\<^esub>\"\n  shows  \"env_delete x (\\<lbrace>(x, e) # \\<Gamma>\\<rbrace>\\<rho>) = \\<lbrace>\\<Gamma>\\<rbrace>\\<rho>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. env_delete x (\\<lbrace> (x, e) # \\<Gamma> \\<rbrace>\\<rho>) =\n    \\<lbrace> \\<Gamma> \\<rbrace>\\<rho>", "proof (rule parallel_HSem_ind, goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. adm (\\<lambda>\\<rho>'. env_delete x (fst \\<rho>') = snd \\<rho>')\n 2. env_delete x \\<bottom> = \\<bottom>\n 3. \\<And>y z.\n       env_delete x y = z \\<Longrightarrow>\n       env_delete x\n        (\\<rho> ++\\<^bsub>domA\n                           ((x, e) #\n                            \\<Gamma>)\\<^esub> \\<^bold>\\<lbrakk> (x, e) #\n                          \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>) =\n       \\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (3 subgoals):\n 1. adm (\\<lambda>\\<rho>'. env_delete x (fst \\<rho>') = snd \\<rho>')\n 2. env_delete x \\<bottom> = \\<bottom>\n 3. \\<And>y z.\n       env_delete x y = z \\<Longrightarrow>\n       env_delete x\n        (\\<rho> ++\\<^bsub>domA\n                           ((x, e) #\n                            \\<Gamma>)\\<^esub> \\<^bold>\\<lbrakk> (x, e) #\n                          \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>) =\n       \\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. adm (\\<lambda>\\<rho>'. env_delete x (fst \\<rho>') = snd \\<rho>')", "by simp"], ["proof (state)\nthis:\n  adm (\\<lambda>\\<rho>'. env_delete x (fst \\<rho>') = snd \\<rho>')\n\ngoal (2 subgoals):\n 1. env_delete x \\<bottom> = \\<bottom>\n 2. \\<And>y z.\n       env_delete x y = z \\<Longrightarrow>\n       env_delete x\n        (\\<rho> ++\\<^bsub>domA\n                           ((x, e) #\n                            \\<Gamma>)\\<^esub> \\<^bold>\\<lbrakk> (x, e) #\n                          \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>) =\n       \\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. env_delete x \\<bottom> = \\<bottom>\n 2. \\<And>y z.\n       env_delete x y = z \\<Longrightarrow>\n       env_delete x\n        (\\<rho> ++\\<^bsub>domA\n                           ((x, e) #\n                            \\<Gamma>)\\<^esub> \\<^bold>\\<lbrakk> (x, e) #\n                          \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>) =\n       \\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>", "case 2"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. env_delete x \\<bottom> = \\<bottom>\n 2. \\<And>y z.\n       env_delete x y = z \\<Longrightarrow>\n       env_delete x\n        (\\<rho> ++\\<^bsub>domA\n                           ((x, e) #\n                            \\<Gamma>)\\<^esub> \\<^bold>\\<lbrakk> (x, e) #\n                          \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>) =\n       \\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. env_delete x \\<bottom> = \\<bottom>", "by auto"], ["proof (state)\nthis:\n  env_delete x \\<bottom> = \\<bottom>\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       env_delete x y = z \\<Longrightarrow>\n       env_delete x\n        (\\<rho> ++\\<^bsub>domA\n                           ((x, e) #\n                            \\<Gamma>)\\<^esub> \\<^bold>\\<lbrakk> (x, e) #\n                          \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>) =\n       \\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z.\n       env_delete x y = z \\<Longrightarrow>\n       env_delete x\n        (\\<rho> ++\\<^bsub>domA\n                           ((x, e) #\n                            \\<Gamma>)\\<^esub> \\<^bold>\\<lbrakk> (x, e) #\n                          \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>) =\n       \\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>", "case prems: (3 y z)"], ["proof (state)\nthis:\n  env_delete x y = z\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       env_delete x y = z \\<Longrightarrow>\n       env_delete x\n        (\\<rho> ++\\<^bsub>domA\n                           ((x, e) #\n                            \\<Gamma>)\\<^esub> \\<^bold>\\<lbrakk> (x, e) #\n                          \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>) =\n       \\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>", "have \"env_delete x \\<rho> = \\<rho>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. env_delete x \\<rho> = \\<rho>", "using \\<open>x \\<notin> edom \\<rho>\\<close>"], ["proof (prove)\nusing this:\n  x \\<notin> edom \\<rho>\n\ngoal (1 subgoal):\n 1. env_delete x \\<rho> = \\<rho>", "by (rule env_delete_noop)"], ["proof (state)\nthis:\n  env_delete x \\<rho> = \\<rho>\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       env_delete x y = z \\<Longrightarrow>\n       env_delete x\n        (\\<rho> ++\\<^bsub>domA\n                           ((x, e) #\n                            \\<Gamma>)\\<^esub> \\<^bold>\\<lbrakk> (x, e) #\n                          \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>) =\n       \\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>", "moreover"], ["proof (state)\nthis:\n  env_delete x \\<rho> = \\<rho>\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       env_delete x y = z \\<Longrightarrow>\n       env_delete x\n        (\\<rho> ++\\<^bsub>domA\n                           ((x, e) #\n                            \\<Gamma>)\\<^esub> \\<^bold>\\<lbrakk> (x, e) #\n                          \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>) =\n       \\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>", "from fresh"], ["proof (chain)\npicking this:\n  atom x \\<sharp> \\<Gamma>", "have \"x \\<notin> domA \\<Gamma>\""], ["proof (prove)\nusing this:\n  atom x \\<sharp> \\<Gamma>\n\ngoal (1 subgoal):\n 1. x \\<notin> domA \\<Gamma>", "by (metis domA_not_fresh)"], ["proof (state)\nthis:\n  x \\<notin> domA \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       env_delete x y = z \\<Longrightarrow>\n       env_delete x\n        (\\<rho> ++\\<^bsub>domA\n                           ((x, e) #\n                            \\<Gamma>)\\<^esub> \\<^bold>\\<lbrakk> (x, e) #\n                          \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>) =\n       \\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>", "hence \"env_delete x (\\<^bold>\\<lbrakk> (x, e) # \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>) = \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>\""], ["proof (prove)\nusing this:\n  x \\<notin> domA \\<Gamma>\n\ngoal (1 subgoal):\n 1. env_delete x\n     (\\<^bold>\\<lbrakk> (x, e) #\n                        \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>) =\n    \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>", "by (auto intro: env_delete_noop dest:  subsetD[OF edom_evalHeap_subset])"], ["proof (state)\nthis:\n  env_delete x\n   (\\<^bold>\\<lbrakk> (x, e) #\n                      \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>) =\n  \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       env_delete x y = z \\<Longrightarrow>\n       env_delete x\n        (\\<rho> ++\\<^bsub>domA\n                           ((x, e) #\n                            \\<Gamma>)\\<^esub> \\<^bold>\\<lbrakk> (x, e) #\n                          \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>) =\n       \\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>", "moreover"], ["proof (state)\nthis:\n  env_delete x\n   (\\<^bold>\\<lbrakk> (x, e) #\n                      \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>) =\n  \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       env_delete x y = z \\<Longrightarrow>\n       env_delete x\n        (\\<rho> ++\\<^bsub>domA\n                           ((x, e) #\n                            \\<Gamma>)\\<^esub> \\<^bold>\\<lbrakk> (x, e) #\n                          \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>) =\n       \\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>", "have \"\\<dots> = \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub> =\n    \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>", "apply (rule evalHeap_cong[OF refl])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e.\n       e \\<in> snd ` set \\<Gamma> \\<Longrightarrow>\n       \\<lbrakk> e \\<rbrakk>\\<^bsub>y\\<^esub> =\n       \\<lbrakk> e \\<rbrakk>\\<^bsub>z\\<^esub>", "apply (subst (1) step, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e.\n       e \\<in> snd ` set \\<Gamma> \\<Longrightarrow>\n       \\<lbrakk> e \\<rbrakk>\\<^bsub>env_delete x y\\<^esub> =\n       \\<lbrakk> e \\<rbrakk>\\<^bsub>z\\<^esub>", "using prems(1)"], ["proof (prove)\nusing this:\n  env_delete x y = z\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       e \\<in> snd ` set \\<Gamma> \\<Longrightarrow>\n       \\<lbrakk> e \\<rbrakk>\\<^bsub>env_delete x y\\<^esub> =\n       \\<lbrakk> e \\<rbrakk>\\<^bsub>z\\<^esub>", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub> =\n  \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       env_delete x y = z \\<Longrightarrow>\n       env_delete x\n        (\\<rho> ++\\<^bsub>domA\n                           ((x, e) #\n                            \\<Gamma>)\\<^esub> \\<^bold>\\<lbrakk> (x, e) #\n                          \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>) =\n       \\<rho> ++\\<^bsub>domA\n                         \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>", "ultimately"], ["proof (chain)\npicking this:\n  env_delete x \\<rho> = \\<rho>\n  env_delete x\n   (\\<^bold>\\<lbrakk> (x, e) #\n                      \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>) =\n  \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>\n  \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub> =\n  \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>", "show ?case"], ["proof (prove)\nusing this:\n  env_delete x \\<rho> = \\<rho>\n  env_delete x\n   (\\<^bold>\\<lbrakk> (x, e) #\n                      \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>) =\n  \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>\n  \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub> =\n  \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>\n\ngoal (1 subgoal):\n 1. env_delete x\n     (\\<rho> ++\\<^bsub>domA\n                        ((x, e) #\n                         \\<Gamma>)\\<^esub> \\<^bold>\\<lbrakk> (x, e) #\n                       \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>) =\n    \\<rho> ++\\<^bsub>domA\n                      \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>", "using \\<open>x \\<notin> domA \\<Gamma>\\<close>"], ["proof (prove)\nusing this:\n  env_delete x \\<rho> = \\<rho>\n  env_delete x\n   (\\<^bold>\\<lbrakk> (x, e) #\n                      \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>) =\n  \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>\n  \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub> =\n  \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>\n  x \\<notin> domA \\<Gamma>\n\ngoal (1 subgoal):\n 1. env_delete x\n     (\\<rho> ++\\<^bsub>domA\n                        ((x, e) #\n                         \\<Gamma>)\\<^esub> \\<^bold>\\<lbrakk> (x, e) #\n                       \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>) =\n    \\<rho> ++\\<^bsub>domA\n                      \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>", "by (simp add: env_delete_add)"], ["proof (state)\nthis:\n  env_delete x\n   (\\<rho> ++\\<^bsub>domA\n                      ((x, e) #\n                       \\<Gamma>)\\<^esub> \\<^bold>\\<lbrakk> (x, e) #\n                     \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>y\\<^esub>) =\n  \\<rho> ++\\<^bsub>domA\n                    \\<Gamma>\\<^esub> \\<^bold>\\<lbrakk> \\<Gamma> \\<^bold>\\<rbrakk>\\<^bsub>z\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HSem_add_fresh:\n  assumes \"atom x \\<sharp> \\<Gamma>\"\n  assumes \"x \\<notin> edom \\<rho>\"\n  shows  \"env_delete x (\\<lbrace>(x, e) # \\<Gamma>\\<rbrace>\\<rho>) = \\<lbrace>\\<Gamma>\\<rbrace>\\<rho>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. env_delete x (\\<lbrace> (x, e) # \\<Gamma> \\<rbrace>\\<rho>) =\n    \\<lbrace> \\<Gamma> \\<rbrace>\\<rho>", "proof(rule HSem_add_fresh'[OF assms], goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e \\<rho>'.\n       e \\<in> snd ` set \\<Gamma> \\<Longrightarrow>\n       \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>'\\<^esub> =\n       \\<lbrakk> e \\<rbrakk>\\<^bsub>env_delete x \\<rho>'\\<^esub>", "case (1 e \\<rho>')"], ["proof (state)\nthis:\n  e \\<in> snd ` set \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>e \\<rho>'.\n       e \\<in> snd ` set \\<Gamma> \\<Longrightarrow>\n       \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>'\\<^esub> =\n       \\<lbrakk> e \\<rbrakk>\\<^bsub>env_delete x \\<rho>'\\<^esub>", "assume \"e \\<in> snd ` set \\<Gamma>\""], ["proof (state)\nthis:\n  e \\<in> snd ` set \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>e \\<rho>'.\n       e \\<in> snd ` set \\<Gamma> \\<Longrightarrow>\n       \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>'\\<^esub> =\n       \\<lbrakk> e \\<rbrakk>\\<^bsub>env_delete x \\<rho>'\\<^esub>", "hence \"atom x \\<sharp> e\""], ["proof (prove)\nusing this:\n  e \\<in> snd ` set \\<Gamma>\n\ngoal (1 subgoal):\n 1. atom x \\<sharp> e", "by (metis assms(1) fresh_heap_expr')"], ["proof (state)\nthis:\n  atom x \\<sharp> e\n\ngoal (1 subgoal):\n 1. \\<And>e \\<rho>'.\n       e \\<in> snd ` set \\<Gamma> \\<Longrightarrow>\n       \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>'\\<^esub> =\n       \\<lbrakk> e \\<rbrakk>\\<^bsub>env_delete x \\<rho>'\\<^esub>", "hence \"x \\<notin> fv e\""], ["proof (prove)\nusing this:\n  atom x \\<sharp> e\n\ngoal (1 subgoal):\n 1. x \\<notin> fv e", "by (simp add: fv_def fresh_def)"], ["proof (state)\nthis:\n  x \\<notin> fv e\n\ngoal (1 subgoal):\n 1. \\<And>e \\<rho>'.\n       e \\<in> snd ` set \\<Gamma> \\<Longrightarrow>\n       \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>'\\<^esub> =\n       \\<lbrakk> e \\<rbrakk>\\<^bsub>env_delete x \\<rho>'\\<^esub>", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<notin> fv e\n\ngoal (1 subgoal):\n 1. \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>'\\<^esub> =\n    \\<lbrakk> e \\<rbrakk>\\<^bsub>env_delete x \\<rho>'\\<^esub>", "by (rule ESem_fresh_cong[OF env_restr_env_delete_other[symmetric]])"], ["proof (state)\nthis:\n  \\<lbrakk> e \\<rbrakk>\\<^bsub>\\<rho>'\\<^esub> =\n  \\<lbrakk> e \\<rbrakk>\\<^bsub>env_delete x \\<rho>'\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Mutual recursion with fresh variables\\<close>"], ["", "lemma HSem_subset_below:\n  assumes fresh: \"atom ` domA \\<Gamma> \\<sharp>* \\<Delta>\" \n  shows \"\\<lbrace>\\<Delta>\\<rbrace>(\\<rho> f|` (- domA \\<Gamma>)) \\<sqsubseteq> (\\<lbrace>\\<Delta>@\\<Gamma>\\<rbrace>\\<rho>)  f|` (- domA \\<Gamma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace> \\<Delta> \\<rbrace>\\<rho> f|` (- domA \\<Gamma>) \\<sqsubseteq>\n    (\\<lbrace> \\<Delta> @ \\<Gamma> \\<rbrace>\\<rho>) f|` (- domA \\<Gamma>)", "proof(rule HSem_below)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<notin> domA \\<Delta> \\<Longrightarrow>\n       (\\<rho> f|` (- domA \\<Gamma>)) x \\<sqsubseteq>\n       ((\\<lbrace> \\<Delta> @ \\<Gamma> \\<rbrace>\\<rho>) f|`\n        (- domA \\<Gamma>))\n        x\n 2. \\<And>x.\n       x \\<in> domA \\<Delta> \\<Longrightarrow>\n       \\<lbrakk> the (map_of \\<Delta>\n                       x) \\<rbrakk>\\<^bsub>(\\<lbrace> \\<Delta> @\n                \\<Gamma> \\<rbrace>\\<rho>) f|`\n     (- domA \\<Gamma>)\\<^esub> \\<sqsubseteq>\n       ((\\<lbrace> \\<Delta> @ \\<Gamma> \\<rbrace>\\<rho>) f|`\n        (- domA \\<Gamma>))\n        x", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<notin> domA \\<Delta> \\<Longrightarrow>\n       (\\<rho> f|` (- domA \\<Gamma>)) x \\<sqsubseteq>\n       ((\\<lbrace> \\<Delta> @ \\<Gamma> \\<rbrace>\\<rho>) f|`\n        (- domA \\<Gamma>))\n        x\n 2. \\<And>x.\n       x \\<in> domA \\<Delta> \\<Longrightarrow>\n       \\<lbrakk> the (map_of \\<Delta>\n                       x) \\<rbrakk>\\<^bsub>(\\<lbrace> \\<Delta> @\n                \\<Gamma> \\<rbrace>\\<rho>) f|`\n     (- domA \\<Gamma>)\\<^esub> \\<sqsubseteq>\n       ((\\<lbrace> \\<Delta> @ \\<Gamma> \\<rbrace>\\<rho>) f|`\n        (- domA \\<Gamma>))\n        x", "assume [simp]: \"x \\<in> domA \\<Delta>\""], ["proof (state)\nthis:\n  x \\<in> domA \\<Delta>\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<notin> domA \\<Delta> \\<Longrightarrow>\n       (\\<rho> f|` (- domA \\<Gamma>)) x \\<sqsubseteq>\n       ((\\<lbrace> \\<Delta> @ \\<Gamma> \\<rbrace>\\<rho>) f|`\n        (- domA \\<Gamma>))\n        x\n 2. \\<And>x.\n       x \\<in> domA \\<Delta> \\<Longrightarrow>\n       \\<lbrakk> the (map_of \\<Delta>\n                       x) \\<rbrakk>\\<^bsub>(\\<lbrace> \\<Delta> @\n                \\<Gamma> \\<rbrace>\\<rho>) f|`\n     (- domA \\<Gamma>)\\<^esub> \\<sqsubseteq>\n       ((\\<lbrace> \\<Delta> @ \\<Gamma> \\<rbrace>\\<rho>) f|`\n        (- domA \\<Gamma>))\n        x", "with assms"], ["proof (chain)\npicking this:\n  atom ` domA \\<Gamma> \\<sharp>* \\<Delta>\n  x \\<in> domA \\<Delta>", "have *: \"atom ` domA \\<Gamma> \\<sharp>* the (map_of \\<Delta> x)\""], ["proof (prove)\nusing this:\n  atom ` domA \\<Gamma> \\<sharp>* \\<Delta>\n  x \\<in> domA \\<Delta>\n\ngoal (1 subgoal):\n 1. atom ` domA \\<Gamma> \\<sharp>* the (map_of \\<Delta> x)", "by (metis fresh_star_map_of)"], ["proof (state)\nthis:\n  atom ` domA \\<Gamma> \\<sharp>* the (map_of \\<Delta> x)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<notin> domA \\<Delta> \\<Longrightarrow>\n       (\\<rho> f|` (- domA \\<Gamma>)) x \\<sqsubseteq>\n       ((\\<lbrace> \\<Delta> @ \\<Gamma> \\<rbrace>\\<rho>) f|`\n        (- domA \\<Gamma>))\n        x\n 2. \\<And>x.\n       x \\<in> domA \\<Delta> \\<Longrightarrow>\n       \\<lbrakk> the (map_of \\<Delta>\n                       x) \\<rbrakk>\\<^bsub>(\\<lbrace> \\<Delta> @\n                \\<Gamma> \\<rbrace>\\<rho>) f|`\n     (- domA \\<Gamma>)\\<^esub> \\<sqsubseteq>\n       ((\\<lbrace> \\<Delta> @ \\<Gamma> \\<rbrace>\\<rho>) f|`\n        (- domA \\<Gamma>))\n        x", "hence [simp]: \"x \\<notin> domA \\<Gamma>\""], ["proof (prove)\nusing this:\n  atom ` domA \\<Gamma> \\<sharp>* the (map_of \\<Delta> x)\n\ngoal (1 subgoal):\n 1. x \\<notin> domA \\<Gamma>", "using fresh \\<open>x \\<in> domA \\<Delta>\\<close>"], ["proof (prove)\nusing this:\n  atom ` domA \\<Gamma> \\<sharp>* the (map_of \\<Delta> x)\n  atom ` domA \\<Gamma> \\<sharp>* \\<Delta>\n  x \\<in> domA \\<Delta>\n\ngoal (1 subgoal):\n 1. x \\<notin> domA \\<Gamma>", "by (metis fresh_star_def domA_not_fresh image_eqI)"], ["proof (state)\nthis:\n  x \\<notin> domA \\<Gamma>\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<notin> domA \\<Delta> \\<Longrightarrow>\n       (\\<rho> f|` (- domA \\<Gamma>)) x \\<sqsubseteq>\n       ((\\<lbrace> \\<Delta> @ \\<Gamma> \\<rbrace>\\<rho>) f|`\n        (- domA \\<Gamma>))\n        x\n 2. \\<And>x.\n       x \\<in> domA \\<Delta> \\<Longrightarrow>\n       \\<lbrakk> the (map_of \\<Delta>\n                       x) \\<rbrakk>\\<^bsub>(\\<lbrace> \\<Delta> @\n                \\<Gamma> \\<rbrace>\\<rho>) f|`\n     (- domA \\<Gamma>)\\<^esub> \\<sqsubseteq>\n       ((\\<lbrace> \\<Delta> @ \\<Gamma> \\<rbrace>\\<rho>) f|`\n        (- domA \\<Gamma>))\n        x", "show \"\\<lbrakk> the (map_of \\<Delta> x) \\<rbrakk>\\<^bsub>(\\<lbrace>\\<Delta> @ \\<Gamma>\\<rbrace>\\<rho>) f|` (- domA \\<Gamma>)\\<^esub> \\<sqsubseteq> ((\\<lbrace>\\<Delta> @ \\<Gamma>\\<rbrace>\\<rho>) f|` (- domA \\<Gamma>)) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk> the (map_of \\<Delta>\n                    x) \\<rbrakk>\\<^bsub>(\\<lbrace> \\<Delta> @\n             \\<Gamma> \\<rbrace>\\<rho>) f|`\n  (- domA \\<Gamma>)\\<^esub> \\<sqsubseteq>\n    ((\\<lbrace> \\<Delta> @ \\<Gamma> \\<rbrace>\\<rho>) f|` (- domA \\<Gamma>))\n     x", "by (simp add: lookup_HSem_heap ESem_ignores_fresh_restr[OF *, symmetric])"], ["proof (state)\nthis:\n  \\<lbrakk> the (map_of \\<Delta>\n                  x) \\<rbrakk>\\<^bsub>(\\<lbrace> \\<Delta> @\n           \\<Gamma> \\<rbrace>\\<rho>) f|`\n(- domA \\<Gamma>)\\<^esub> \\<sqsubseteq>\n  ((\\<lbrace> \\<Delta> @ \\<Gamma> \\<rbrace>\\<rho>) f|` (- domA \\<Gamma>)) x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<notin> domA \\<Delta> \\<Longrightarrow>\n       (\\<rho> f|` (- domA \\<Gamma>)) x \\<sqsubseteq>\n       ((\\<lbrace> \\<Delta> @ \\<Gamma> \\<rbrace>\\<rho>) f|`\n        (- domA \\<Gamma>))\n        x", "qed (simp add: lookup_HSem_other lookup_env_restr_eq)"], ["", "text \\<open>In the following lemma we show that the semantics of fresh variables can be be calculated\ntogether with the presently bound variables, or separately.\\<close>"], ["", "lemma HSem_merge:\n  assumes fresh: \"atom ` domA \\<Gamma> \\<sharp>* \\<Delta>\"\n  shows \"\\<lbrace>\\<Gamma>\\<rbrace>\\<lbrace>\\<Delta>\\<rbrace>\\<rho> = \\<lbrace>\\<Gamma>@\\<Delta>\\<rbrace>\\<rho>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace> \\<Gamma> \\<rbrace>\\<lbrace> \\<Delta> \\<rbrace>\\<rho> =\n    \\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>", "proof(rule below_antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrace> \\<Gamma> \\<rbrace>\\<lbrace> \\<Delta> \\<rbrace>\\<rho> \\<sqsubseteq>\n    \\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>\n 2. \\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho> \\<sqsubseteq>\n    \\<lbrace> \\<Gamma> \\<rbrace>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>", "have map_of_eq: \"map_of (\\<Delta> @ \\<Gamma>) = map_of (\\<Gamma> @ \\<Delta>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_of (\\<Delta> @ \\<Gamma>) = map_of (\\<Gamma> @ \\<Delta>)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. map_of (\\<Delta> @ \\<Gamma>) x = map_of (\\<Gamma> @ \\<Delta>) x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. map_of (\\<Delta> @ \\<Gamma>) x = map_of (\\<Gamma> @ \\<Delta>) x", "show \"map_of (\\<Delta> @ \\<Gamma>) x = map_of (\\<Gamma> @ \\<Delta>) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_of (\\<Delta> @ \\<Gamma>) x = map_of (\\<Gamma> @ \\<Delta>) x", "proof (cases \"x \\<in> domA \\<Gamma>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> domA \\<Gamma> \\<Longrightarrow>\n    map_of (\\<Delta> @ \\<Gamma>) x = map_of (\\<Gamma> @ \\<Delta>) x\n 2. x \\<notin> domA \\<Gamma> \\<Longrightarrow>\n    map_of (\\<Delta> @ \\<Gamma>) x = map_of (\\<Gamma> @ \\<Delta>) x", "case True"], ["proof (state)\nthis:\n  x \\<in> domA \\<Gamma>\n\ngoal (2 subgoals):\n 1. x \\<in> domA \\<Gamma> \\<Longrightarrow>\n    map_of (\\<Delta> @ \\<Gamma>) x = map_of (\\<Gamma> @ \\<Delta>) x\n 2. x \\<notin> domA \\<Gamma> \\<Longrightarrow>\n    map_of (\\<Delta> @ \\<Gamma>) x = map_of (\\<Gamma> @ \\<Delta>) x", "hence \"x \\<notin> domA \\<Delta>\""], ["proof (prove)\nusing this:\n  x \\<in> domA \\<Gamma>\n\ngoal (1 subgoal):\n 1. x \\<notin> domA \\<Delta>", "by (metis fresh_distinct fresh IntI equals0D)"], ["proof (state)\nthis:\n  x \\<notin> domA \\<Delta>\n\ngoal (2 subgoals):\n 1. x \\<in> domA \\<Gamma> \\<Longrightarrow>\n    map_of (\\<Delta> @ \\<Gamma>) x = map_of (\\<Gamma> @ \\<Delta>) x\n 2. x \\<notin> domA \\<Gamma> \\<Longrightarrow>\n    map_of (\\<Delta> @ \\<Gamma>) x = map_of (\\<Gamma> @ \\<Delta>) x", "thus \"map_of (\\<Delta> @ \\<Gamma>) x = map_of (\\<Gamma> @ \\<Delta>) x\""], ["proof (prove)\nusing this:\n  x \\<notin> domA \\<Delta>\n\ngoal (1 subgoal):\n 1. map_of (\\<Delta> @ \\<Gamma>) x = map_of (\\<Gamma> @ \\<Delta>) x", "by (simp add: map_add_dom_app_simps dom_map_of_conv_domA)"], ["proof (state)\nthis:\n  map_of (\\<Delta> @ \\<Gamma>) x = map_of (\\<Gamma> @ \\<Delta>) x\n\ngoal (1 subgoal):\n 1. x \\<notin> domA \\<Gamma> \\<Longrightarrow>\n    map_of (\\<Delta> @ \\<Gamma>) x = map_of (\\<Gamma> @ \\<Delta>) x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<notin> domA \\<Gamma> \\<Longrightarrow>\n    map_of (\\<Delta> @ \\<Gamma>) x = map_of (\\<Gamma> @ \\<Delta>) x", "case False"], ["proof (state)\nthis:\n  x \\<notin> domA \\<Gamma>\n\ngoal (1 subgoal):\n 1. x \\<notin> domA \\<Gamma> \\<Longrightarrow>\n    map_of (\\<Delta> @ \\<Gamma>) x = map_of (\\<Gamma> @ \\<Delta>) x", "thus \"map_of (\\<Delta> @ \\<Gamma>) x = map_of (\\<Gamma> @ \\<Delta>) x\""], ["proof (prove)\nusing this:\n  x \\<notin> domA \\<Gamma>\n\ngoal (1 subgoal):\n 1. map_of (\\<Delta> @ \\<Gamma>) x = map_of (\\<Gamma> @ \\<Delta>) x", "by (simp add: map_add_dom_app_simps dom_map_of_conv_domA)"], ["proof (state)\nthis:\n  map_of (\\<Delta> @ \\<Gamma>) x = map_of (\\<Gamma> @ \\<Delta>) x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  map_of (\\<Delta> @ \\<Gamma>) x = map_of (\\<Gamma> @ \\<Delta>) x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  map_of (\\<Delta> @ \\<Gamma>) = map_of (\\<Gamma> @ \\<Delta>)\n\ngoal (2 subgoals):\n 1. \\<lbrace> \\<Gamma> \\<rbrace>\\<lbrace> \\<Delta> \\<rbrace>\\<rho> \\<sqsubseteq>\n    \\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>\n 2. \\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho> \\<sqsubseteq>\n    \\<lbrace> \\<Gamma> \\<rbrace>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>", "show \"\\<lbrace>\\<Gamma>\\<rbrace>\\<lbrace>\\<Delta>\\<rbrace>\\<rho> \\<sqsubseteq> \\<lbrace>\\<Gamma>@\\<Delta>\\<rbrace>\\<rho>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace> \\<Gamma> \\<rbrace>\\<lbrace> \\<Delta> \\<rbrace>\\<rho> \\<sqsubseteq>\n    \\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>", "proof(rule HSem_below)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<notin> domA \\<Gamma> \\<Longrightarrow>\n       (\\<lbrace> \\<Delta> \\<rbrace>\\<rho>) x \\<sqsubseteq>\n       (\\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>) x\n 2. \\<And>x.\n       x \\<in> domA \\<Gamma> \\<Longrightarrow>\n       \\<lbrakk> the (map_of \\<Gamma>\n                       x) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> @\n               \\<Delta> \\<rbrace>\\<rho>\\<^esub> \\<sqsubseteq>\n       (\\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>) x", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<notin> domA \\<Gamma> \\<Longrightarrow>\n       (\\<lbrace> \\<Delta> \\<rbrace>\\<rho>) x \\<sqsubseteq>\n       (\\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>) x\n 2. \\<And>x.\n       x \\<in> domA \\<Gamma> \\<Longrightarrow>\n       \\<lbrakk> the (map_of \\<Gamma>\n                       x) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> @\n               \\<Delta> \\<rbrace>\\<rho>\\<^esub> \\<sqsubseteq>\n       (\\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>) x", "assume [simp]:\"x \\<notin> domA \\<Gamma>\""], ["proof (state)\nthis:\n  x \\<notin> domA \\<Gamma>\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<notin> domA \\<Gamma> \\<Longrightarrow>\n       (\\<lbrace> \\<Delta> \\<rbrace>\\<rho>) x \\<sqsubseteq>\n       (\\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>) x\n 2. \\<And>x.\n       x \\<in> domA \\<Gamma> \\<Longrightarrow>\n       \\<lbrakk> the (map_of \\<Gamma>\n                       x) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> @\n               \\<Delta> \\<rbrace>\\<rho>\\<^esub> \\<sqsubseteq>\n       (\\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>) x", "have \"(\\<lbrace>\\<Delta>\\<rbrace>\\<rho>) x = ((\\<lbrace>\\<Delta>\\<rbrace>\\<rho>) f|` (- domA \\<Gamma>)) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrace> \\<Delta> \\<rbrace>\\<rho>) x =\n    ((\\<lbrace> \\<Delta> \\<rbrace>\\<rho>) f|` (- domA \\<Gamma>)) x", "by simp"], ["proof (state)\nthis:\n  (\\<lbrace> \\<Delta> \\<rbrace>\\<rho>) x =\n  ((\\<lbrace> \\<Delta> \\<rbrace>\\<rho>) f|` (- domA \\<Gamma>)) x\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<notin> domA \\<Gamma> \\<Longrightarrow>\n       (\\<lbrace> \\<Delta> \\<rbrace>\\<rho>) x \\<sqsubseteq>\n       (\\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>) x\n 2. \\<And>x.\n       x \\<in> domA \\<Gamma> \\<Longrightarrow>\n       \\<lbrakk> the (map_of \\<Gamma>\n                       x) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> @\n               \\<Delta> \\<rbrace>\\<rho>\\<^esub> \\<sqsubseteq>\n       (\\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>) x", "also"], ["proof (state)\nthis:\n  (\\<lbrace> \\<Delta> \\<rbrace>\\<rho>) x =\n  ((\\<lbrace> \\<Delta> \\<rbrace>\\<rho>) f|` (- domA \\<Gamma>)) x\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<notin> domA \\<Gamma> \\<Longrightarrow>\n       (\\<lbrace> \\<Delta> \\<rbrace>\\<rho>) x \\<sqsubseteq>\n       (\\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>) x\n 2. \\<And>x.\n       x \\<in> domA \\<Gamma> \\<Longrightarrow>\n       \\<lbrakk> the (map_of \\<Gamma>\n                       x) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> @\n               \\<Delta> \\<rbrace>\\<rho>\\<^esub> \\<sqsubseteq>\n       (\\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>) x", "have \"\\<dots> = (\\<lbrace>\\<Delta>\\<rbrace>(\\<rho> f|` (- domA \\<Gamma>))) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lbrace> \\<Delta> \\<rbrace>\\<rho>) f|` (- domA \\<Gamma>)) x =\n    (\\<lbrace> \\<Delta> \\<rbrace>\\<rho> f|` (- domA \\<Gamma>)) x", "by (rule arg_cong[OF HSem_ignores_fresh_restr[OF fresh]])"], ["proof (state)\nthis:\n  ((\\<lbrace> \\<Delta> \\<rbrace>\\<rho>) f|` (- domA \\<Gamma>)) x =\n  (\\<lbrace> \\<Delta> \\<rbrace>\\<rho> f|` (- domA \\<Gamma>)) x\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<notin> domA \\<Gamma> \\<Longrightarrow>\n       (\\<lbrace> \\<Delta> \\<rbrace>\\<rho>) x \\<sqsubseteq>\n       (\\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>) x\n 2. \\<And>x.\n       x \\<in> domA \\<Gamma> \\<Longrightarrow>\n       \\<lbrakk> the (map_of \\<Gamma>\n                       x) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> @\n               \\<Delta> \\<rbrace>\\<rho>\\<^esub> \\<sqsubseteq>\n       (\\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>) x", "also"], ["proof (state)\nthis:\n  ((\\<lbrace> \\<Delta> \\<rbrace>\\<rho>) f|` (- domA \\<Gamma>)) x =\n  (\\<lbrace> \\<Delta> \\<rbrace>\\<rho> f|` (- domA \\<Gamma>)) x\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<notin> domA \\<Gamma> \\<Longrightarrow>\n       (\\<lbrace> \\<Delta> \\<rbrace>\\<rho>) x \\<sqsubseteq>\n       (\\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>) x\n 2. \\<And>x.\n       x \\<in> domA \\<Gamma> \\<Longrightarrow>\n       \\<lbrakk> the (map_of \\<Gamma>\n                       x) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> @\n               \\<Delta> \\<rbrace>\\<rho>\\<^esub> \\<sqsubseteq>\n       (\\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>) x", "have \"\\<dots> \\<sqsubseteq> ((\\<lbrace>\\<Delta>@\\<Gamma>\\<rbrace>\\<rho>)  f|` (- domA \\<Gamma>)) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrace> \\<Delta> \\<rbrace>\\<rho> f|` (- domA \\<Gamma>))\n     x \\<sqsubseteq>\n    ((\\<lbrace> \\<Delta> @ \\<Gamma> \\<rbrace>\\<rho>) f|` (- domA \\<Gamma>))\n     x", "by (rule fun_belowD[OF HSem_subset_below[OF fresh]] )"], ["proof (state)\nthis:\n  (\\<lbrace> \\<Delta> \\<rbrace>\\<rho> f|` (- domA \\<Gamma>)) x \\<sqsubseteq>\n  ((\\<lbrace> \\<Delta> @ \\<Gamma> \\<rbrace>\\<rho>) f|` (- domA \\<Gamma>)) x\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<notin> domA \\<Gamma> \\<Longrightarrow>\n       (\\<lbrace> \\<Delta> \\<rbrace>\\<rho>) x \\<sqsubseteq>\n       (\\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>) x\n 2. \\<And>x.\n       x \\<in> domA \\<Gamma> \\<Longrightarrow>\n       \\<lbrakk> the (map_of \\<Gamma>\n                       x) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> @\n               \\<Delta> \\<rbrace>\\<rho>\\<^esub> \\<sqsubseteq>\n       (\\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>) x", "also"], ["proof (state)\nthis:\n  (\\<lbrace> \\<Delta> \\<rbrace>\\<rho> f|` (- domA \\<Gamma>)) x \\<sqsubseteq>\n  ((\\<lbrace> \\<Delta> @ \\<Gamma> \\<rbrace>\\<rho>) f|` (- domA \\<Gamma>)) x\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<notin> domA \\<Gamma> \\<Longrightarrow>\n       (\\<lbrace> \\<Delta> \\<rbrace>\\<rho>) x \\<sqsubseteq>\n       (\\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>) x\n 2. \\<And>x.\n       x \\<in> domA \\<Gamma> \\<Longrightarrow>\n       \\<lbrakk> the (map_of \\<Gamma>\n                       x) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> @\n               \\<Delta> \\<rbrace>\\<rho>\\<^esub> \\<sqsubseteq>\n       (\\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>) x", "have \"\\<dots> = (\\<lbrace>\\<Delta>@\\<Gamma>\\<rbrace>\\<rho>) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lbrace> \\<Delta> @ \\<Gamma> \\<rbrace>\\<rho>) f|` (- domA \\<Gamma>))\n     x =\n    (\\<lbrace> \\<Delta> @ \\<Gamma> \\<rbrace>\\<rho>) x", "by simp"], ["proof (state)\nthis:\n  ((\\<lbrace> \\<Delta> @ \\<Gamma> \\<rbrace>\\<rho>) f|` (- domA \\<Gamma>))\n   x =\n  (\\<lbrace> \\<Delta> @ \\<Gamma> \\<rbrace>\\<rho>) x\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<notin> domA \\<Gamma> \\<Longrightarrow>\n       (\\<lbrace> \\<Delta> \\<rbrace>\\<rho>) x \\<sqsubseteq>\n       (\\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>) x\n 2. \\<And>x.\n       x \\<in> domA \\<Gamma> \\<Longrightarrow>\n       \\<lbrakk> the (map_of \\<Gamma>\n                       x) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> @\n               \\<Delta> \\<rbrace>\\<rho>\\<^esub> \\<sqsubseteq>\n       (\\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>) x", "also"], ["proof (state)\nthis:\n  ((\\<lbrace> \\<Delta> @ \\<Gamma> \\<rbrace>\\<rho>) f|` (- domA \\<Gamma>))\n   x =\n  (\\<lbrace> \\<Delta> @ \\<Gamma> \\<rbrace>\\<rho>) x\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<notin> domA \\<Gamma> \\<Longrightarrow>\n       (\\<lbrace> \\<Delta> \\<rbrace>\\<rho>) x \\<sqsubseteq>\n       (\\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>) x\n 2. \\<And>x.\n       x \\<in> domA \\<Gamma> \\<Longrightarrow>\n       \\<lbrakk> the (map_of \\<Gamma>\n                       x) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> @\n               \\<Delta> \\<rbrace>\\<rho>\\<^esub> \\<sqsubseteq>\n       (\\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>) x", "have \"\\<dots> = (\\<lbrace>\\<Gamma> @ \\<Delta>\\<rbrace>\\<rho>) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrace> \\<Delta> @ \\<Gamma> \\<rbrace>\\<rho>) x =\n    (\\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>) x", "by (rule arg_cong[OF HSem_reorder[OF map_of_eq]])"], ["proof (state)\nthis:\n  (\\<lbrace> \\<Delta> @ \\<Gamma> \\<rbrace>\\<rho>) x =\n  (\\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>) x\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<notin> domA \\<Gamma> \\<Longrightarrow>\n       (\\<lbrace> \\<Delta> \\<rbrace>\\<rho>) x \\<sqsubseteq>\n       (\\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>) x\n 2. \\<And>x.\n       x \\<in> domA \\<Gamma> \\<Longrightarrow>\n       \\<lbrakk> the (map_of \\<Gamma>\n                       x) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> @\n               \\<Delta> \\<rbrace>\\<rho>\\<^esub> \\<sqsubseteq>\n       (\\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>) x", "finally"], ["proof (chain)\npicking this:\n  (\\<lbrace> \\<Delta> \\<rbrace>\\<rho>) x \\<sqsubseteq>\n  (\\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>) x", "show \"(\\<lbrace>\\<Delta>\\<rbrace>\\<rho>) x \\<sqsubseteq> (\\<lbrace>\\<Gamma> @ \\<Delta>\\<rbrace>\\<rho>) x\""], ["proof (prove)\nusing this:\n  (\\<lbrace> \\<Delta> \\<rbrace>\\<rho>) x \\<sqsubseteq>\n  (\\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>) x\n\ngoal (1 subgoal):\n 1. (\\<lbrace> \\<Delta> \\<rbrace>\\<rho>) x \\<sqsubseteq>\n    (\\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>) x", "."], ["proof (state)\nthis:\n  (\\<lbrace> \\<Delta> \\<rbrace>\\<rho>) x \\<sqsubseteq>\n  (\\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>) x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> domA \\<Gamma> \\<Longrightarrow>\n       \\<lbrakk> the (map_of \\<Gamma>\n                       x) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> @\n               \\<Delta> \\<rbrace>\\<rho>\\<^esub> \\<sqsubseteq>\n       (\\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>) x", "qed (auto simp add: lookup_HSem_heap lookup_env_restr_eq)"], ["proof (state)\nthis:\n  \\<lbrace> \\<Gamma> \\<rbrace>\\<lbrace> \\<Delta> \\<rbrace>\\<rho> \\<sqsubseteq>\n  \\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho>\n\ngoal (1 subgoal):\n 1. \\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho> \\<sqsubseteq>\n    \\<lbrace> \\<Gamma> \\<rbrace>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>", "have *: \"\\<And> x. x \\<in> domA \\<Delta> \\<Longrightarrow> x \\<notin> domA \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> domA \\<Delta> \\<Longrightarrow> x \\<notin> domA \\<Gamma>", "using fresh"], ["proof (prove)\nusing this:\n  atom ` domA \\<Gamma> \\<sharp>* \\<Delta>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> domA \\<Delta> \\<Longrightarrow> x \\<notin> domA \\<Gamma>", "by (auto simp add: fresh_Pair fresh_star_def domA_not_fresh)"], ["proof (state)\nthis:\n  ?x1 \\<in> domA \\<Delta> \\<Longrightarrow> ?x1 \\<notin> domA \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho> \\<sqsubseteq>\n    \\<lbrace> \\<Gamma> \\<rbrace>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>", "have foo: \"edom \\<rho> \\<union> domA \\<Delta> \\<union> domA \\<Gamma> - (edom \\<rho> \\<union> domA \\<Delta> \\<union> domA \\<Gamma>) \\<inter> - domA \\<Gamma> = domA \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. edom \\<rho> \\<union> domA \\<Delta> \\<union> domA \\<Gamma> -\n    (edom \\<rho> \\<union> domA \\<Delta> \\<union> domA \\<Gamma>) \\<inter>\n    - domA \\<Gamma> =\n    domA \\<Gamma>", "by auto"], ["proof (state)\nthis:\n  edom \\<rho> \\<union> domA \\<Delta> \\<union> domA \\<Gamma> -\n  (edom \\<rho> \\<union> domA \\<Delta> \\<union> domA \\<Gamma>) \\<inter>\n  - domA \\<Gamma> =\n  domA \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho> \\<sqsubseteq>\n    \\<lbrace> \\<Gamma> \\<rbrace>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>", "have foo2:\"(edom \\<rho> \\<union> domA \\<Delta> - (edom \\<rho> \\<union> domA \\<Delta>) \\<inter> - domA \\<Gamma>) \\<subseteq> domA \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. edom \\<rho> \\<union> domA \\<Delta> -\n    (edom \\<rho> \\<union> domA \\<Delta>) \\<inter> - domA \\<Gamma>\n    \\<subseteq> domA \\<Gamma>", "by auto"], ["proof (state)\nthis:\n  edom \\<rho> \\<union> domA \\<Delta> -\n  (edom \\<rho> \\<union> domA \\<Delta>) \\<inter> - domA \\<Gamma>\n  \\<subseteq> domA \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho> \\<sqsubseteq>\n    \\<lbrace> \\<Gamma> \\<rbrace>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>", "{"], ["proof (state)\nthis:\n  edom \\<rho> \\<union> domA \\<Delta> -\n  (edom \\<rho> \\<union> domA \\<Delta>) \\<inter> - domA \\<Gamma>\n  \\<subseteq> domA \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho> \\<sqsubseteq>\n    \\<lbrace> \\<Gamma> \\<rbrace>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho> \\<sqsubseteq>\n    \\<lbrace> \\<Gamma> \\<rbrace>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>", "assume \"x \\<in> domA \\<Delta>\""], ["proof (state)\nthis:\n  x \\<in> domA \\<Delta>\n\ngoal (1 subgoal):\n 1. \\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho> \\<sqsubseteq>\n    \\<lbrace> \\<Gamma> \\<rbrace>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>", "hence *: \"atom ` domA \\<Gamma> \\<sharp>* the (map_of \\<Delta> x)\""], ["proof (prove)\nusing this:\n  x \\<in> domA \\<Delta>\n\ngoal (1 subgoal):\n 1. atom ` domA \\<Gamma> \\<sharp>* the (map_of \\<Delta> x)", "by (rule  fresh_star_map_of[OF _ fresh])"], ["proof (state)\nthis:\n  atom ` domA \\<Gamma> \\<sharp>* the (map_of \\<Delta> x)\n\ngoal (1 subgoal):\n 1. \\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho> \\<sqsubseteq>\n    \\<lbrace> \\<Gamma> \\<rbrace>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>", "have \"\\<lbrakk> the (map_of \\<Delta> x) \\<rbrakk>\\<^bsub>\\<lbrace>\\<Gamma>\\<rbrace>\\<lbrace>\\<Delta>\\<rbrace>\\<rho>\\<^esub> = \\<lbrakk> the (map_of \\<Delta> x) \\<rbrakk>\\<^bsub>(\\<lbrace>\\<Gamma>\\<rbrace>\\<lbrace>\\<Delta>\\<rbrace>\\<rho>) f|` (- domA \\<Gamma>)\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk> the (map_of \\<Delta>\n                    x) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>\\<^esub> =\n    \\<lbrakk> the (map_of \\<Delta>\n                    x) \\<rbrakk>\\<^bsub>(\\<lbrace> \\<Gamma> \\<rbrace>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>) f|`\n  (- domA \\<Gamma>)\\<^esub>", "by (rule ESem_ignores_fresh_restr[OF *])"], ["proof (state)\nthis:\n  \\<lbrakk> the (map_of \\<Delta>\n                  x) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>\\<^esub> =\n  \\<lbrakk> the (map_of \\<Delta>\n                  x) \\<rbrakk>\\<^bsub>(\\<lbrace> \\<Gamma> \\<rbrace>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>) f|`\n(- domA \\<Gamma>)\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho> \\<sqsubseteq>\n    \\<lbrace> \\<Gamma> \\<rbrace>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>", "also"], ["proof (state)\nthis:\n  \\<lbrakk> the (map_of \\<Delta>\n                  x) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>\\<^esub> =\n  \\<lbrakk> the (map_of \\<Delta>\n                  x) \\<rbrakk>\\<^bsub>(\\<lbrace> \\<Gamma> \\<rbrace>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>) f|`\n(- domA \\<Gamma>)\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho> \\<sqsubseteq>\n    \\<lbrace> \\<Gamma> \\<rbrace>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>", "have \"(\\<lbrace>\\<Gamma>\\<rbrace>\\<lbrace>\\<Delta>\\<rbrace>\\<rho>) f|` (- domA \\<Gamma>) = (\\<lbrace>\\<Delta>\\<rbrace>\\<rho>) f|` (- domA \\<Gamma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrace> \\<Gamma> \\<rbrace>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>) f|`\n    (- domA \\<Gamma>) =\n    (\\<lbrace> \\<Delta> \\<rbrace>\\<rho>) f|` (- domA \\<Gamma>)", "by (simp add: env_restr_HSem)"], ["proof (state)\nthis:\n  (\\<lbrace> \\<Gamma> \\<rbrace>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>) f|`\n  (- domA \\<Gamma>) =\n  (\\<lbrace> \\<Delta> \\<rbrace>\\<rho>) f|` (- domA \\<Gamma>)\n\ngoal (1 subgoal):\n 1. \\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho> \\<sqsubseteq>\n    \\<lbrace> \\<Gamma> \\<rbrace>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>", "also"], ["proof (state)\nthis:\n  (\\<lbrace> \\<Gamma> \\<rbrace>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>) f|`\n  (- domA \\<Gamma>) =\n  (\\<lbrace> \\<Delta> \\<rbrace>\\<rho>) f|` (- domA \\<Gamma>)\n\ngoal (1 subgoal):\n 1. \\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho> \\<sqsubseteq>\n    \\<lbrace> \\<Gamma> \\<rbrace>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>", "have \"\\<lbrakk> the (map_of \\<Delta> x) \\<rbrakk>\\<^bsub>\\<dots>\\<^esub> = \\<lbrakk> the (map_of \\<Delta> x) \\<rbrakk>\\<^bsub>\\<lbrace>\\<Delta>\\<rbrace>\\<rho>\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk> the (map_of \\<Delta>\n                    x) \\<rbrakk>\\<^bsub>(\\<lbrace> \\<Delta> \\<rbrace>\\<rho>) f|`\n  (- domA \\<Gamma>)\\<^esub> =\n    \\<lbrakk> the (map_of \\<Delta>\n                    x) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>\\<^esub>", "by (rule ESem_ignores_fresh_restr[symmetric, OF *])"], ["proof (state)\nthis:\n  \\<lbrakk> the (map_of \\<Delta>\n                  x) \\<rbrakk>\\<^bsub>(\\<lbrace> \\<Delta> \\<rbrace>\\<rho>) f|`\n(- domA \\<Gamma>)\\<^esub> =\n  \\<lbrakk> the (map_of \\<Delta>\n                  x) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho> \\<sqsubseteq>\n    \\<lbrace> \\<Gamma> \\<rbrace>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>", "finally"], ["proof (chain)\npicking this:\n  \\<lbrakk> the (map_of \\<Delta>\n                  x) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>\\<^esub> =\n  \\<lbrakk> the (map_of \\<Delta>\n                  x) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>\\<^esub>", "have \"\\<lbrakk> the (map_of \\<Delta> x) \\<rbrakk>\\<^bsub>\\<lbrace>\\<Gamma>\\<rbrace>\\<lbrace>\\<Delta>\\<rbrace>\\<rho>\\<^esub> = \\<lbrakk> the (map_of \\<Delta> x) \\<rbrakk>\\<^bsub>\\<lbrace>\\<Delta>\\<rbrace>\\<rho>\\<^esub>\""], ["proof (prove)\nusing this:\n  \\<lbrakk> the (map_of \\<Delta>\n                  x) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>\\<^esub> =\n  \\<lbrakk> the (map_of \\<Delta>\n                  x) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrakk> the (map_of \\<Delta>\n                    x) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>\\<^esub> =\n    \\<lbrakk> the (map_of \\<Delta>\n                    x) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>\\<^esub>", "."], ["proof (state)\nthis:\n  \\<lbrakk> the (map_of \\<Delta>\n                  x) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>\\<^esub> =\n  \\<lbrakk> the (map_of \\<Delta>\n                  x) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho> \\<sqsubseteq>\n    \\<lbrace> \\<Gamma> \\<rbrace>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>", "}"], ["proof (state)\nthis:\n  ?x3 \\<in> domA \\<Delta> \\<Longrightarrow>\n  \\<lbrakk> the (map_of \\<Delta>\n                  ?x3) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>\\<^esub> =\n  \\<lbrakk> the (map_of \\<Delta>\n                  ?x3) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho> \\<sqsubseteq>\n    \\<lbrace> \\<Gamma> \\<rbrace>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>", "thus \"\\<lbrace>\\<Gamma>@\\<Delta>\\<rbrace>\\<rho> \\<sqsubseteq> \\<lbrace>\\<Gamma>\\<rbrace>\\<lbrace>\\<Delta>\\<rbrace>\\<rho>\""], ["proof (prove)\nusing this:\n  ?x3 \\<in> domA \\<Delta> \\<Longrightarrow>\n  \\<lbrakk> the (map_of \\<Delta>\n                  ?x3) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Gamma> \\<rbrace>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>\\<^esub> =\n  \\<lbrakk> the (map_of \\<Delta>\n                  ?x3) \\<rbrakk>\\<^bsub>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho> \\<sqsubseteq>\n    \\<lbrace> \\<Gamma> \\<rbrace>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>", "by -(rule HSem_below, auto simp add: lookup_HSem_other lookup_HSem_heap *)"], ["proof (state)\nthis:\n  \\<lbrace> \\<Gamma> @ \\<Delta> \\<rbrace>\\<rho> \\<sqsubseteq>\n  \\<lbrace> \\<Gamma> \\<rbrace>\\<lbrace> \\<Delta> \\<rbrace>\\<rho>\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsubsection \\<open>Parallel induction\\<close>"], ["", "lemma parallel_HSem_ind_different_ESem:\n  assumes \"adm (\\<lambda>\\<rho>'. P (fst \\<rho>') (snd \\<rho>'))\"\n  assumes \"P \\<bottom> \\<bottom>\"\n  assumes \"\\<And>y z. P y z \\<Longrightarrow> P (\\<rho> ++\\<^bsub>domA h\\<^esub> evalHeap h (\\<lambda>e. ESem1 e \\<cdot> y)) (\\<rho>2 ++\\<^bsub>domA h2\\<^esub> evalHeap h2 (\\<lambda>e. ESem2 e \\<cdot> z))\"\n  shows \"P (has_ESem.HSem ESem1 h\\<cdot>\\<rho>) (has_ESem.HSem ESem2 h2\\<cdot>\\<rho>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (has_ESem.HSem ESem1 h\\<cdot>\\<rho>)\n     (has_ESem.HSem ESem2 h2\\<cdot>\\<rho>2)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. P (has_ESem.HSem ESem1 h\\<cdot>\\<rho>)\n     (has_ESem.HSem ESem2 h2\\<cdot>\\<rho>2)", "interpret HSem1: has_ESem ESem1"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["proof (state)\ngoal (1 subgoal):\n 1. P (HSem1.HSem_syn h \\<rho>) (has_ESem.HSem ESem2 h2\\<cdot>\\<rho>2)", "interpret HSem2: has_ESem ESem2"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["proof (state)\ngoal (1 subgoal):\n 1. P (HSem1.HSem_syn h \\<rho>) (HSem2.HSem_syn h2 \\<rho>2)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. P (HSem1.HSem_syn h \\<rho>) (HSem2.HSem_syn h2 \\<rho>2)", "unfolding HSem1.HSem_def' HSem2.HSem_def'"], ["proof (prove)\ngoal (1 subgoal):\n 1. P (\\<mu> x. \\<rho> ++\\<^bsub>domA h\\<^esub> HSem1.EvalHeapSem_syn h x)\n     (\\<mu> x. \\<rho>2 ++\\<^bsub>domA h2\\<^esub> HSem2.EvalHeapSem_syn h2 x)", "apply (rule parallel_fix_ind[OF assms(1)])"], ["proof (prove)\ngoal (2 subgoals):\n 1. P \\<bottom> \\<bottom>\n 2. \\<And>x y.\n       P x y \\<Longrightarrow>\n       P ((\\<Lambda> x.\n              \\<rho> ++\\<^bsub>domA\n                                h\\<^esub> HSem1.EvalHeapSem_syn h x)\\<cdot>\n          x)\n        ((\\<Lambda> x.\n             \\<rho>2 ++\\<^bsub>domA\n                                h2\\<^esub> HSem2.EvalHeapSem_syn h2\n      x)\\<cdot>\n         y)", "apply (rule assms(2))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       P x y \\<Longrightarrow>\n       P ((\\<Lambda> x.\n              \\<rho> ++\\<^bsub>domA\n                                h\\<^esub> HSem1.EvalHeapSem_syn h x)\\<cdot>\n          x)\n        ((\\<Lambda> x.\n             \\<rho>2 ++\\<^bsub>domA\n                                h2\\<^esub> HSem2.EvalHeapSem_syn h2\n      x)\\<cdot>\n         y)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       P x y \\<Longrightarrow>\n       P (\\<rho> ++\\<^bsub>domA h\\<^esub> HSem1.EvalHeapSem_syn h x)\n        (\\<rho>2 ++\\<^bsub>domA h2\\<^esub> HSem2.EvalHeapSem_syn h2 y)", "apply (erule assms(3))"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  P (HSem1.HSem_syn h \\<rho>) (HSem2.HSem_syn h2 \\<rho>2)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Congruence rule\\<close>"], ["", "lemma HSem_cong[fundef_cong]:\n  \"\\<lbrakk> (\\<And> e. e \\<in> snd ` set heap2 \\<Longrightarrow> ESem1 e = ESem2 e); heap1 = heap2  \\<rbrakk>\n      \\<Longrightarrow> has_ESem.HSem ESem1 heap1 = has_ESem.HSem ESem2 heap2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>e.\n                e \\<in> snd ` set heap2 \\<Longrightarrow> ESem1 e = ESem2 e;\n     heap1 = heap2\\<rbrakk>\n    \\<Longrightarrow> has_ESem.HSem ESem1 heap1 = has_ESem.HSem ESem2 heap2", "unfolding has_ESem.HSem_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>e.\n                e \\<in> snd ` set heap2 \\<Longrightarrow> ESem1 e = ESem2 e;\n     heap1 = heap2\\<rbrakk>\n    \\<Longrightarrow> (\\<Lambda> \\<rho>.\n                          \\<mu> x.\n                             \\<rho> ++\\<^bsub>domA\n         heap1\\<^esub> evalHeap heap1 (\\<lambda>e. ESem1 e\\<cdot>x)) =\n                      (\\<Lambda> \\<rho>.\n                          \\<mu> x.\n                             \\<rho> ++\\<^bsub>domA\n         heap2\\<^esub> evalHeap heap2 (\\<lambda>e. ESem2 e\\<cdot>x))", "by (auto cong:evalHeap_cong)"], ["", "subsubsection \\<open>Equivariance of the heap semantics\\<close>"], ["", "lemma HSem_eqvt[eqvt]:\n  \"\\<pi> \\<bullet> has_ESem.HSem ESem \\<Gamma> = has_ESem.HSem (\\<pi> \\<bullet> ESem) (\\<pi> \\<bullet> \\<Gamma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> \\<bullet> has_ESem.HSem ESem \\<Gamma> =\n    has_ESem.HSem (\\<pi> \\<bullet> ESem) (\\<pi> \\<bullet> \\<Gamma>)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<pi> \\<bullet> has_ESem.HSem ESem \\<Gamma> =\n    has_ESem.HSem (\\<pi> \\<bullet> ESem) (\\<pi> \\<bullet> \\<Gamma>)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> \\<bullet> has_ESem.HSem ESem \\<Gamma> =\n    has_ESem.HSem (\\<pi> \\<bullet> ESem) (\\<pi> \\<bullet> \\<Gamma>)", "unfolding has_ESem.HSem_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> \\<bullet> (\\<Lambda> \\<rho>.\n                        \\<mu> x.\n                           \\<rho> ++\\<^bsub>domA\n       \\<Gamma>\\<^esub> evalHeap \\<Gamma> (\\<lambda>e. ESem e\\<cdot>x)) =\n    (\\<Lambda> \\<rho>.\n        \\<mu> x.\n           \\<rho> ++\\<^bsub>domA\n                             (\\<pi> \\<bullet> \\<Gamma>)\\<^esub> evalHeap\n                           (\\<pi> \\<bullet> \\<Gamma>)\n                           (\\<lambda>e. (\\<pi> \\<bullet> ESem) e\\<cdot>x))", "apply (subst permute_Lam, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_cfun\n     (\\<pi> \\<bullet> (\\<lambda>\\<rho>.\n                          \\<mu> x.\n                             \\<rho> ++\\<^bsub>domA\n         \\<Gamma>\\<^esub> evalHeap \\<Gamma> (\\<lambda>e. ESem e\\<cdot>x))) =\n    (\\<Lambda> \\<rho>.\n        \\<mu> x.\n           \\<rho> ++\\<^bsub>domA\n                             (\\<pi> \\<bullet> \\<Gamma>)\\<^esub> evalHeap\n                           (\\<pi> \\<bullet> \\<Gamma>)\n                           (\\<lambda>e. (\\<pi> \\<bullet> ESem) e\\<cdot>x))", "apply (subst eqvt_lambda)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Lambda> x.\n        \\<pi> \\<bullet> (\\<mu> xa.\n                            unpermute \\<pi>\n                             x ++\\<^bsub>domA\n    \\<Gamma>\\<^esub> evalHeap \\<Gamma> (\\<lambda>e. ESem e\\<cdot>xa))) =\n    (\\<Lambda> \\<rho>.\n        \\<mu> x.\n           \\<rho> ++\\<^bsub>domA\n                             (\\<pi> \\<bullet> \\<Gamma>)\\<^esub> evalHeap\n                           (\\<pi> \\<bullet> \\<Gamma>)\n                           (\\<lambda>e. (\\<pi> \\<bullet> ESem) e\\<cdot>x))", "apply (simp add: Cfun_app_eqvt permute_Lam)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<pi> \\<bullet> has_ESem.HSem ESem \\<Gamma> =\n  has_ESem.HSem (\\<pi> \\<bullet> ESem) (\\<pi> \\<bullet> \\<Gamma>)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}