{"file_name": "/home/qj213/afp-2021-10-22/thys/Isabelle_Marries_Dirac/Quantum.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Isabelle_Marries_Dirac", "problem_names": ["lemma cpx_length_of_vec_of_list [simp]:\n  \"\\<parallel>vec_of_list l\\<parallel> = sqrt(\\<Sum>i<length l. (cmod (l ! i))\\<^sup>2)\"", "lemma norm_vec_index_unit_vec_is_0 [simp]:\n  assumes \"j < n\" and \"j \\<noteq> i\"\n  shows \"cmod ((unit_vec n i) $ j) = 0\"", "lemma norm_vec_index_unit_vec_is_1 [simp]:\n  assumes \"j < n\" and \"j = i\"\n  shows \"cmod ((unit_vec n i) $ j) = 1\"", "lemma unit_cpx_vec_length [simp]:\n  assumes \"i < n\"\n  shows \"\\<parallel>unit_vec n i\\<parallel> = 1\"", "lemma smult_vec_length [simp]:\n  assumes \"x \\<ge> 0\"\n  shows \"\\<parallel>complex_of_real(x) \\<cdot>\\<^sub>v v\\<parallel> = x * \\<parallel>v\\<parallel>\"", "lemma unit_vec_of_right_length_is_state [simp]:\n  assumes \"i < 2^n\"\n  shows \"unit_vec (2^n) i \\<in> {v| n v::complex vec. dim_vec v = 2^n \\<and> \\<parallel>v\\<parallel> = 1}\"", "lemma (in state) state_to_state_qbit [simp]:\n  shows \"col v 0 \\<in> state_qbit n\"", "lemma dim_row_of_dagger [simp]:\n  \"dim_row (M\\<^sup>\\<dagger>) = dim_col M\"", "lemma dim_col_of_dagger [simp]:\n  \"dim_col (M\\<^sup>\\<dagger>) = dim_row M\"", "lemma col_of_dagger [simp]:\n  assumes \"j < dim_row M\"\n  shows \"col (M\\<^sup>\\<dagger>) j = vec (dim_col M) (\\<lambda>i. cnj (M $$ (j,i)))\"", "lemma row_of_dagger [simp]:\n  assumes \"i < dim_col M\"\n  shows \"row (M\\<^sup>\\<dagger>) i = vec (dim_row M) (\\<lambda>j. cnj (M $$ (j,i)))\"", "lemma dagger_of_dagger_is_id:\n  fixes M :: \"complex Matrix.mat\"\n  shows \"(M\\<^sup>\\<dagger>)\\<^sup>\\<dagger> = M\"", "lemma dagger_of_sqr_is_sqr [simp]:\n  \"square_mat ((M::cpx_sqr_mat)\\<^sup>\\<dagger>)\"", "lemma dagger_of_id_is_id [simp]:\n  \"(1\\<^sub>m n)\\<^sup>\\<dagger> = 1\\<^sub>m n\"", "lemma id_is_unitary [simp]:\n  \"unitary (1\\<^sub>m n)\"", "lemma mat_unitary_mat [intro]:\n  assumes \"unitary M\"\n  shows \"inverts_mat M (M\\<^sup>\\<dagger>)\"", "lemma unitary_mat_mat [intro]:\n  assumes \"unitary M\"\n  shows \"inverts_mat (M\\<^sup>\\<dagger>) M\"", "lemma (in gate) gate_is_inv:\n  \"invertible_mat A\"", "lemma col_tranpose [simp]:\n  assumes \"dim_row M = n\" and \"i < n\"\n  shows \"col (M\\<^sup>t) i = row M i\"", "lemma row_transpose [simp]:\n  assumes \"dim_col M = n\" and \"i < n\"\n  shows \"row (M\\<^sup>t) i = col M i\"", "lemma cpx_mat_cnj_id [simp]:\n  \"(1\\<^sub>m n)\\<^sup>\\<star> = 1\\<^sub>m n\"", "lemma cpx_mat_cnj_cnj [simp]:\n  \"(M\\<^sup>\\<star>)\\<^sup>\\<star> = M\"", "lemma dim_row_of_cjn_prod [simp]: \n  \"dim_row ((M\\<^sup>\\<star>) * (N\\<^sup>\\<star>)) = dim_row M\"", "lemma dim_col_of_cjn_prod [simp]: \n  \"dim_col ((M\\<^sup>\\<star>) * (N\\<^sup>\\<star>)) = dim_col N\"", "lemma cpx_mat_cnj_prod:\n  assumes \"dim_col M = dim_row N\"\n  shows \"(M * N)\\<^sup>\\<star> = (M\\<^sup>\\<star>) * (N\\<^sup>\\<star>)\"", "lemma transpose_of_prod:\n  fixes M N::\"complex Matrix.mat\"\n  assumes \"dim_col M = dim_row N\"\n  shows \"(M * N)\\<^sup>t = N\\<^sup>t * (M\\<^sup>t)\"", "lemma transpose_cnj_is_dagger [simp]:\n  \"(M\\<^sup>t)\\<^sup>\\<star> = (M\\<^sup>\\<dagger>)\"", "lemma cnj_transpose_is_dagger [simp]:\n  \"(M\\<^sup>\\<star>)\\<^sup>t = (M\\<^sup>\\<dagger>)\"", "lemma dagger_of_transpose_is_cnj [simp]:\n  \"(M\\<^sup>t)\\<^sup>\\<dagger> = (M\\<^sup>\\<star>)\"", "lemma dagger_of_prod:\n  fixes M N::\"complex Matrix.mat\"\n  assumes \"dim_col M = dim_row N\"\n  shows \"(M * N)\\<^sup>\\<dagger> = N\\<^sup>\\<dagger> * (M\\<^sup>\\<dagger>)\"", "lemma prod_of_gate_is_gate: \n  assumes \"gate n G1\" and \"gate n G2\"\n  shows \"gate n (G1 * G2)\"", "lemma left_inv_of_unitary_transpose [simp]:\n  assumes \"unitary U\"\n  shows \"(U\\<^sup>t)\\<^sup>\\<dagger> * (U\\<^sup>t) =  1\\<^sub>m(dim_row U)\"", "lemma right_inv_of_unitary_transpose [simp]:\n  assumes \"unitary U\"\n  shows \"U\\<^sup>t * ((U\\<^sup>t)\\<^sup>\\<dagger>) = 1\\<^sub>m(dim_col U)\"", "lemma transpose_of_unitary_is_unitary [simp]:\n  assumes \"unitary U\"\n  shows \"unitary (U\\<^sup>t)\"", "lemma ket_vec_index [simp]:\n  assumes \"i < dim_vec v\"\n  shows \"|v\\<rangle> $$ (i,0) = v $ i\"", "lemma ket_vec_col [simp]:\n  \"col |v\\<rangle> 0 = v\"", "lemma smult_ket_vec [simp]:\n  \"|x \\<cdot>\\<^sub>v v\\<rangle> = x \\<cdot>\\<^sub>m |v\\<rangle>\"", "lemma smult_vec_length_bis [simp]:\n  assumes \"x \\<ge> 0\"\n  shows \"\\<parallel>col (complex_of_real(x) \\<cdot>\\<^sub>m |v\\<rangle>) 0\\<parallel> = x * \\<parallel>v\\<parallel>\"", "lemma row_bra_vec [simp]:\n  \"row (bra_vec v) 0 = vec (dim_vec v) (\\<lambda>i. cnj(v $ i))\"", "lemma bra_bra_vec [simp]:\n  \"bra (ket_vec v) = bra_vec v\"", "lemma row_bra [simp]:\n  fixes v::\"complex vec\"\n  shows \"row \\<langle>v| 0 = vec (dim_vec v) (\\<lambda>i. cnj (v $ i))\"", "lemma inner_prod_with_row_bra_vec [simp]:\n  assumes \"dim_vec u = dim_vec v\"\n  shows \"\\<langle>u|v\\<rangle> = row (bra_vec u) 0 \\<bullet> v\"", "lemma inner_prod_with_row_bra_vec_col_ket_vec [simp]:\n  assumes \"dim_vec u = dim_vec v\"\n  shows \"\\<langle>u|v\\<rangle> = (row \\<langle>u| 0) \\<bullet> (col |v\\<rangle> 0)\"", "lemma inner_prod_with_times_mat [simp]:\n  assumes \"dim_vec u = dim_vec v\"\n  shows \"\\<langle>u|v\\<rangle> = (\\<langle>u| * |v\\<rangle>) $$ (0,0)\"", "lemma orthogonal_unit_vec [simp]:\n  assumes \"i < n\" and \"j < n\" and \"i \\<noteq> j\"\n  shows \"\\<langle>unit_vec n i|unit_vec n j\\<rangle> = 0\"", "lemma vec_index_is_linear [simp]:\n  assumes \"dim_vec u = dim_vec v\" and \"j < dim_vec u\"\n  shows \"(k \\<cdot>\\<^sub>v u + l \\<cdot>\\<^sub>v v) $ j = k * (u $ j) + l * (v $ j)\"", "lemma inner_prod_is_linear [simp]:\n  fixes u::\"complex vec\" and v::\"nat \\<Rightarrow> complex vec\" and l::\"nat \\<Rightarrow> complex\"\n  assumes \"\\<forall>i\\<in>{0, 1}. dim_vec u = dim_vec (v i)\"\n  shows \"\\<langle>u|l 0 \\<cdot>\\<^sub>v v 0 + l 1 \\<cdot>\\<^sub>v v 1\\<rangle> = (\\<Sum>i\\<le>1. l i * \\<langle>u|v i\\<rangle>)\"", "lemma inner_prod_cnj:\n  assumes \"dim_vec u = dim_vec v\"\n  shows \"\\<langle>v|u\\<rangle> = cnj (\\<langle>u|v\\<rangle>)\"", "lemma inner_prod_with_itself_Im [simp]:\n  \"Im (\\<langle>u|u\\<rangle>) = 0\"", "lemma inner_prod_with_itself_real [simp]:\n  \"\\<langle>u|u\\<rangle> \\<in> \\<real>\"", "lemma inner_prod_with_itself_eq0 [simp]:\n  assumes \"u = 0\\<^sub>v (dim_vec u)\"\n  shows \"\\<langle>u|u\\<rangle> = 0\"", "lemma inner_prod_with_itself_Re:\n  \"Re (\\<langle>u|u\\<rangle>) \\<ge> 0\"", "lemma inner_prod_with_itself_nonneg_reals:\n  fixes u::\"complex vec\"\n  shows \"\\<langle>u|u\\<rangle> \\<in> nonneg_Reals\"", "lemma inner_prod_with_itself_Re_non0:\n  assumes \"u \\<noteq> 0\\<^sub>v (dim_vec u)\"\n  shows \"Re (\\<langle>u|u\\<rangle>) > 0\"", "lemma inner_prod_with_itself_nonneg_reals_non0:\n  assumes \"u \\<noteq> 0\\<^sub>v (dim_vec u)\"\n  shows \"\\<langle>u|u\\<rangle> \\<noteq> 0\"", "lemma cpx_vec_length_inner_prod [simp]:\n  \"\\<parallel>v\\<parallel>\\<^sup>2 = \\<langle>v|v\\<rangle>\"", "lemma inner_prod_csqrt [simp]:\n  \"csqrt \\<langle>v|v\\<rangle> = \\<parallel>v\\<parallel>\"", "lemma dagger_of_ket_is_bra:\n  fixes v:: \"complex vec\"\n  shows \"( |v\\<rangle> )\\<^sup>\\<dagger> = \\<langle>v|\"", "lemma bra_mat_on_vec:\n  fixes v::\"complex vec\" and A::\"complex mat\"\n  assumes \"dim_col A = dim_vec v\"\n  shows \"\\<langle>A * v| = \\<langle>v| * (A\\<^sup>\\<dagger>)\"", "lemma mat_on_ket:\n  fixes v:: \"complex vec\" and A:: \"complex mat\"\n  assumes \"dim_col A = dim_vec v\"\n  shows \"A * |v\\<rangle> = |col (A * v) 0\\<rangle>\"", "lemma dagger_of_mat_on_ket:\n  fixes v:: \"complex vec\" and A :: \"complex mat\"\n  assumes \"dim_col A = dim_vec v\"\n  shows \"(A * |v\\<rangle> )\\<^sup>\\<dagger> = \\<langle>v| * (A\\<^sup>\\<dagger>)\"", "lemma col_fst_is_col [simp]:\n  \"col_fst M = col M 0\"", "lemma unit_vec_to_col:\n  assumes \"dim_col A = n\" and \"i < n\"\n  shows \"col A i = A * |unit_vec n i\\<rangle>\"", "lemma mult_ket_vec_is_ket_vec_of_mult:\n  fixes A::\"complex mat\" and v::\"complex vec\"\n  assumes \"dim_col A = dim_vec v\"\n  shows \"|A * |v\\<rangle> \\<rangle> = A * |v\\<rangle>\"", "lemma unitary_is_sq_length_preserving [simp]:\n  assumes \"unitary U\" and \"dim_vec v = dim_col U\"\n  shows \"\\<parallel>U * |v\\<rangle>\\<parallel>\\<^sup>2 = \\<parallel>v\\<parallel>\\<^sup>2\"", "lemma col_ket_vec [simp]:\n  assumes \"dim_col M = 1\"\n  shows \"|col M 0\\<rangle> = M\"", "lemma state_col_ket_vec:\n  assumes \"state 1 v\"\n  shows \"state 1 |col v 0\\<rangle>\"", "lemma col_ket_vec_index [simp]:\n  assumes \"i < dim_row v\"\n  shows \"|col v 0\\<rangle> $$ (i,0) = v $$ (i,0)\"", "lemma col_index_of_mat_col [simp]:\n  assumes \"dim_col v = 1\" and \"i < dim_row v\"\n  shows \"col v 0 $ i = v $$ (i,0)\"", "lemma unitary_is_sq_length_preserving_bis [simp]:\n  assumes \"unitary U\" and \"dim_row v = dim_col U\" and \"dim_col v = 1\"\n  shows \"\\<parallel>col (U * v) 0\\<parallel>\\<^sup>2 = \\<parallel>col v 0\\<parallel>\\<^sup>2\"", "lemma unitary_is_length_preserving_bis [simp]:\n  fixes U::\"complex mat\" and v::\"complex mat\"\n  assumes \"unitary U\" and \"dim_row v = dim_col U\" and \"dim_col v = 1\"\n  shows \"\\<parallel>col (U * v) 0\\<parallel> = \\<parallel>col v 0\\<parallel>\"", "lemma unitary_is_length_preserving [simp]:\n  fixes U:: \"complex mat\" and v:: \"complex vec\"\n  assumes \"unitary U\" and \"dim_vec v = dim_col U\"\n  shows \"\\<parallel>U * |v\\<rangle>\\<parallel> = \\<parallel>v\\<parallel>\"", "lemma inverts_mat_sym:\n  fixes A B:: \"complex mat\"\n  assumes \"inverts_mat A B\" and \"dim_row B = dim_col A\" and \"square_mat B\"\n  shows \"inverts_mat B A\"", "lemma sum_of_unit_vec_length:\n  fixes i j n:: nat and c:: complex\n  assumes \"i < n\" and \"j < n\" and \"i \\<noteq> j\"\n  shows \"\\<parallel>unit_vec n i + c \\<cdot>\\<^sub>v unit_vec n j\\<parallel>\\<^sup>2 = 1 + cnj(c) * c\"", "lemma sum_of_unit_vec_to_col:\n  assumes \"dim_col A = n\" and \"i < n\" and \"j < n\"\n  shows \"col A i + c \\<cdot>\\<^sub>v col A j = A * |unit_vec n i + c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>\"", "lemma inner_prod_is_sesquilinear:\n  fixes u1 u2 v1 v2:: \"complex vec\" and c1 c2 c3 c4:: complex and n:: nat\n  assumes \"dim_vec u1 = n\" and \"dim_vec u2 = n\" and \"dim_vec v1 = n\" and \"dim_vec v2 = n\"\n  shows \"\\<langle>c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2|c3 \\<cdot>\\<^sub>v v1 + c4 \\<cdot>\\<^sub>v v2\\<rangle> = cnj (c1) * c3 * \\<langle>u1|v1\\<rangle> + cnj (c2) * c3 * \\<langle>u2|v1\\<rangle> + \n                                                 cnj (c1) * c4 * \\<langle>u1|v2\\<rangle> + cnj (c2) * c4 * \\<langle>u2|v2\\<rangle>\"", "lemma length_preserving_is_unitary:\n  fixes U:: \"complex mat\"\n  assumes \"square_mat U\" and \"\\<forall>v::complex vec. dim_vec v = dim_col U \\<longrightarrow> \\<parallel>U * |v\\<rangle>\\<parallel> = \\<parallel>v\\<parallel>\"\n  shows \"unitary U\"", "lemma inner_prod_with_unitary_mat [simp]:\n  assumes \"unitary U\" and \"dim_vec u = dim_col U\" and \"dim_vec v = dim_col U\"\n  shows \"\\<langle>U * |u\\<rangle>|U * |v\\<rangle>\\<rangle> = \\<langle>u|v\\<rangle>\"", "lemma unitary_unit_col [simp]:\n  assumes \"unitary U\" and \"dim_col U = n\" and \"i < n\"\n  shows \"\\<parallel>col U i\\<parallel> = 1\"", "lemma unitary_unit_row [simp]:\n  assumes \"unitary U\" and \"dim_row U = n\" and \"i < n\"\n  shows \"\\<parallel>row U i\\<parallel> = 1\"", "lemma orthogonal_col_of_unitary [simp]:\n  assumes \"unitary U\" and \"dim_col U = n\" and \"i < n\" and \"j < n\" and \"i \\<noteq> j\"\n  shows \"\\<langle>col U i|col U j\\<rangle> = 0\"", "lemma orthogonal_row_of_unitary [simp]:\n  fixes U::\"complex mat\"\n  assumes \"unitary U\" and \"dim_row U = n\" and \"i < n\" and \"j < n\" and \"i \\<noteq> j\"\n  shows \"\\<langle>row U i|row U j\\<rangle> = 0\"", "lemma gate_on_state_is_state [intro, simp]:\n  assumes a1:\"gate n A\" and a2:\"state n v\"\n  shows \"state n (A * v)\"", "lemma id_is_gate [simp]:\n  \"gate n (Id n)\"", "lemma dagger_of_X [simp]:\n  \"X\\<^sup>\\<dagger> = X\"", "lemma X_inv [simp]:\n  \"X * X = 1\\<^sub>m 2\"", "lemma X_is_gate [simp]:\n  \"gate 1 X\"", "lemma dagger_of_Y [simp]:\n  \"Y\\<^sup>\\<dagger> = Y\"", "lemma Y_inv [simp]:\n  \"Y * Y = 1\\<^sub>m 2\"", "lemma Y_is_gate [simp]:\n  \"gate 1 Y\"", "lemma dagger_of_Z [simp]:\n  \"Z\\<^sup>\\<dagger> = Z\"", "lemma Z_inv [simp]:\n  \"Z * Z = 1\\<^sub>m 2\"", "lemma Z_is_gate [simp]:\n  \"gate 1 Z\"", "lemma H_without_scalar_prod:\n  \"H = mat 2 2 (\\<lambda>(i,j). if i\\<noteq>j then 1/sqrt(2) else (if i=0 then 1/sqrt(2) else -(1/sqrt(2))))\"", "lemma dagger_of_H [simp]:\n  \"H\\<^sup>\\<dagger> = H\"", "lemma H_inv [simp]:\n  \"H * H = 1\\<^sub>m 2\"", "lemma H_is_gate [simp]:\n  \"gate 1 H\"", "lemma H_values:\n  fixes i j:: nat\n  assumes \"i < dim_row H\" and \"j < dim_col H\" and \"i \\<noteq> 1 \\<or> j \\<noteq> 1\" \n  shows \"H $$ (i,j) = 1/sqrt 2\"", "lemma H_values_right_bottom:\n  fixes i j:: nat\n  assumes \"i = 1 \\<and> j = 1\"\n  shows \"H $$ (i,j) = - 1/sqrt 2\"", "lemma dagger_of_CNOT [simp]:\n  \"CNOT\\<^sup>\\<dagger> = CNOT\"", "lemma CNOT_inv [simp]:\n  \"CNOT * CNOT = 1\\<^sub>m 4\"", "lemma CNOT_is_gate [simp]:\n  \"gate 2 CNOT\"", "lemma HXH_is_Z [simp]:\n  \"H * X * H = Z\"", "lemma HYH_is_minusY [simp]:\n  \"H * Y * H = - Y\"", "lemma HZH_is_X [simp]:\n  shows \"H * Z * H = X\"", "lemma\n  shows bell00_is_state [simp]:\"state 2 |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>\" and bell01_is_state [simp]:\"state 2 |\\<beta>\\<^sub>0\\<^sub>1\\<rangle>\" and \n    bell10_is_state [simp]:\"state 2 |\\<beta>\\<^sub>1\\<^sub>0\\<rangle>\" and bell11_is_state [simp]:\"state 2 |\\<beta>\\<^sub>1\\<^sub>1\\<rangle>\"", "lemma bell00_index [simp]:\n  shows \"|\\<beta>\\<^sub>0\\<^sub>0\\<rangle> $$ (0,0) = 1/sqrt 2\" and \"|\\<beta>\\<^sub>0\\<^sub>0\\<rangle> $$ (1,0) = 0\" and \"|\\<beta>\\<^sub>0\\<^sub>0\\<rangle> $$ (2,0) = 0\" and \n    \"|\\<beta>\\<^sub>0\\<^sub>0\\<rangle> $$ (3,0) = 1/sqrt 2\"", "lemma bell01_index [simp]:\n  shows \"|\\<beta>\\<^sub>0\\<^sub>1\\<rangle> $$ (0,0) = 0\" and \"|\\<beta>\\<^sub>0\\<^sub>1\\<rangle> $$ (1,0) = 1/sqrt 2\" and \"|\\<beta>\\<^sub>0\\<^sub>1\\<rangle> $$ (2,0) = 1/sqrt 2\" and \n    \"|\\<beta>\\<^sub>0\\<^sub>1\\<rangle> $$ (3,0) = 0\"", "lemma bell10_index [simp]:\n  shows \"|\\<beta>\\<^sub>1\\<^sub>0\\<rangle> $$ (0,0) = 1/sqrt 2\" and \"|\\<beta>\\<^sub>1\\<^sub>0\\<rangle> $$ (1,0) = 0\" and \"|\\<beta>\\<^sub>1\\<^sub>0\\<rangle> $$ (2,0) = 0\" and \n    \"|\\<beta>\\<^sub>1\\<^sub>0\\<rangle> $$ (3,0) = - 1/sqrt 2\"", "lemma bell_11_index [simp]:\n  shows \"|\\<beta>\\<^sub>1\\<^sub>1\\<rangle> $$ (0,0) = 0\" and \"|\\<beta>\\<^sub>1\\<^sub>1\\<rangle> $$ (1,0) = 1/sqrt 2\" and \"|\\<beta>\\<^sub>1\\<^sub>1\\<rangle> $$ (2,0) = - 1/sqrt 2\" and \n    \"|\\<beta>\\<^sub>1\\<^sub>1\\<rangle> $$ (3,0) = 0\"", "lemma bitwise_inner_prod_fst_el_0: \n  assumes \"i < 2^n \\<or> j < 2^n\" \n  shows \"(i \\<cdot>\\<^bsub>Suc n\\<^esub> j) = (i mod 2^n) \\<cdot>\\<^bsub>n\\<^esub> (j mod 2^n)\"", "lemma bitwise_inner_prod_fst_el_is_1:\n  fixes n i j:: nat\n  assumes \"i \\<ge> 2^n \\<and> j \\<ge> 2^n\" and \"i < 2^(n+1) \\<and> j < 2^(n+1)\"\n  shows \"(i \\<cdot>\\<^bsub>(n+1)\\<^esub> j) = 1 + ((i mod 2^n) \\<cdot>\\<^bsub>n\\<^esub> (j mod 2^n))\"", "lemma bitwise_inner_prod_with_zero:\n  assumes \"m < 2^n\"\n  shows \"(0 \\<cdot>\\<^bsub>n\\<^esub>  m) = 0\""], "translations": [["", "lemma cpx_length_of_vec_of_list [simp]:\n  \"\\<parallel>vec_of_list l\\<parallel> = sqrt(\\<Sum>i<length l. (cmod (l ! i))\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>vec_of_list l\\<parallel> =\n    sqrt (\\<Sum>i<length l. (cmod (l ! i))\\<^sup>2)", "by (auto simp: cpx_vec_length_def vec_of_list_def vec_of_list_index)\n    (metis (no_types, lifting) dim_vec_of_list sum.cong vec_of_list.abs_eq vec_of_list_index)"], ["", "lemma norm_vec_index_unit_vec_is_0 [simp]:\n  assumes \"j < n\" and \"j \\<noteq> i\"\n  shows \"cmod ((unit_vec n i) $ j) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (unit_vec n i $ j) = 0", "using assms"], ["proof (prove)\nusing this:\n  j < n\n  j \\<noteq> i\n\ngoal (1 subgoal):\n 1. cmod (unit_vec n i $ j) = 0", "by (simp add: unit_vec_def)"], ["", "lemma norm_vec_index_unit_vec_is_1 [simp]:\n  assumes \"j < n\" and \"j = i\"\n  shows \"cmod ((unit_vec n i) $ j) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (unit_vec n i $ j) = 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cmod (unit_vec n i $ j) = 1", "have f:\"(unit_vec n i) $ j = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unit_vec n i $ j = (1::'a)", "using assms"], ["proof (prove)\nusing this:\n  j < n\n  j = i\n\ngoal (1 subgoal):\n 1. unit_vec n i $ j = (1::'a)", "by simp"], ["proof (state)\nthis:\n  unit_vec n i $ j = (1::?'a1)\n\ngoal (1 subgoal):\n 1. cmod (unit_vec n i $ j) = 1", "thus ?thesis"], ["proof (prove)\nusing this:\n  unit_vec n i $ j = (1::?'a1)\n\ngoal (1 subgoal):\n 1. cmod (unit_vec n i $ j) = 1", "by (simp add: f cmod_def)"], ["proof (state)\nthis:\n  cmod (unit_vec n i $ j) = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma unit_cpx_vec_length [simp]:\n  assumes \"i < n\"\n  shows \"\\<parallel>unit_vec n i\\<parallel> = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>unit_vec n i\\<parallel> = 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<parallel>unit_vec n i\\<parallel> = 1", "have \"(\\<Sum>j<n. (cmod((unit_vec n i) $ j))\\<^sup>2) = (\\<Sum>j<n. if j = i then 1 else 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j<n. (cmod (unit_vec n i $ j))\\<^sup>2) =\n    (\\<Sum>j<n. if j = i then 1 else 0)", "using norm_vec_index_unit_vec_is_0 norm_vec_index_unit_vec_is_1"], ["proof (prove)\nusing this:\n  \\<lbrakk>?j < ?n; ?j \\<noteq> ?i\\<rbrakk>\n  \\<Longrightarrow> cmod (unit_vec ?n ?i $ ?j) = 0\n  \\<lbrakk>?j < ?n; ?j = ?i\\<rbrakk>\n  \\<Longrightarrow> cmod (unit_vec ?n ?i $ ?j) = 1\n\ngoal (1 subgoal):\n 1. (\\<Sum>j<n. (cmod (unit_vec n i $ j))\\<^sup>2) =\n    (\\<Sum>j<n. if j = i then 1 else 0)", "by (smt lessThan_iff one_power2 sum.cong zero_power2)"], ["proof (state)\nthis:\n  (\\<Sum>j<n. (cmod (unit_vec n i $ j))\\<^sup>2) =\n  (\\<Sum>j<n. if j = i then 1 else 0)\n\ngoal (1 subgoal):\n 1. \\<parallel>unit_vec n i\\<parallel> = 1", "also"], ["proof (state)\nthis:\n  (\\<Sum>j<n. (cmod (unit_vec n i $ j))\\<^sup>2) =\n  (\\<Sum>j<n. if j = i then 1 else 0)\n\ngoal (1 subgoal):\n 1. \\<parallel>unit_vec n i\\<parallel> = 1", "have \"\\<dots> = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j<n. if j = i then 1 else 0) = 1", "using assms"], ["proof (prove)\nusing this:\n  i < n\n\ngoal (1 subgoal):\n 1. (\\<Sum>j<n. if j = i then 1 else 0) = 1", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>j<n. if j = i then 1 else 0) = 1\n\ngoal (1 subgoal):\n 1. \\<parallel>unit_vec n i\\<parallel> = 1", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>j<n. (cmod (unit_vec n i $ j))\\<^sup>2) = 1", "have \"sqrt (\\<Sum>j<n. (cmod((unit_vec n i) $ j))\\<^sup>2) = 1\""], ["proof (prove)\nusing this:\n  (\\<Sum>j<n. (cmod (unit_vec n i $ j))\\<^sup>2) = 1\n\ngoal (1 subgoal):\n 1. sqrt (\\<Sum>j<n. (cmod (unit_vec n i $ j))\\<^sup>2) = 1", "by simp"], ["proof (state)\nthis:\n  sqrt (\\<Sum>j<n. (cmod (unit_vec n i $ j))\\<^sup>2) = 1\n\ngoal (1 subgoal):\n 1. \\<parallel>unit_vec n i\\<parallel> = 1", "thus ?thesis"], ["proof (prove)\nusing this:\n  sqrt (\\<Sum>j<n. (cmod (unit_vec n i $ j))\\<^sup>2) = 1\n\ngoal (1 subgoal):\n 1. \\<parallel>unit_vec n i\\<parallel> = 1", "using cpx_vec_length_def"], ["proof (prove)\nusing this:\n  sqrt (\\<Sum>j<n. (cmod (unit_vec n i $ j))\\<^sup>2) = 1\n  \\<parallel>?v\\<parallel> \\<equiv>\n  sqrt (\\<Sum>i<dim_vec ?v. (cmod (?v $ i))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<parallel>unit_vec n i\\<parallel> = 1", "by simp"], ["proof (state)\nthis:\n  \\<parallel>unit_vec n i\\<parallel> = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smult_vec_length [simp]:\n  assumes \"x \\<ge> 0\"\n  shows \"\\<parallel>complex_of_real(x) \\<cdot>\\<^sub>v v\\<parallel> = x * \\<parallel>v\\<parallel>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>complex_of_real x \\<cdot>\\<^sub>v v\\<parallel> =\n    x * \\<parallel>v\\<parallel>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<parallel>complex_of_real x \\<cdot>\\<^sub>v v\\<parallel> =\n    x * \\<parallel>v\\<parallel>", "have \"(\\<lambda>i::nat.(cmod (complex_of_real x * v $ i))\\<^sup>2) = (\\<lambda>i::nat. (cmod (v $ i))\\<^sup>2 * x\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>i. (cmod (complex_of_real x * v $ i))\\<^sup>2) =\n    (\\<lambda>i. (cmod (v $ i))\\<^sup>2 * x\\<^sup>2)", "by (auto simp: norm_mult power_mult_distrib)"], ["proof (state)\nthis:\n  (\\<lambda>i. (cmod (complex_of_real x * v $ i))\\<^sup>2) =\n  (\\<lambda>i. (cmod (v $ i))\\<^sup>2 * x\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<parallel>complex_of_real x \\<cdot>\\<^sub>v v\\<parallel> =\n    x * \\<parallel>v\\<parallel>", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>i. (cmod (complex_of_real x * v $ i))\\<^sup>2) =\n  (\\<lambda>i. (cmod (v $ i))\\<^sup>2 * x\\<^sup>2)", "have \"(\\<Sum>i<dim_vec v. (cmod (complex_of_real x * v $ i))\\<^sup>2) = \n             (\\<Sum>i<dim_vec v. (cmod (v $ i))\\<^sup>2 * x\\<^sup>2)\""], ["proof (prove)\nusing this:\n  (\\<lambda>i. (cmod (complex_of_real x * v $ i))\\<^sup>2) =\n  (\\<lambda>i. (cmod (v $ i))\\<^sup>2 * x\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<dim_vec v. (cmod (complex_of_real x * v $ i))\\<^sup>2) =\n    (\\<Sum>i<dim_vec v. (cmod (v $ i))\\<^sup>2 * x\\<^sup>2)", "by meson"], ["proof (state)\nthis:\n  (\\<Sum>i<dim_vec v. (cmod (complex_of_real x * v $ i))\\<^sup>2) =\n  (\\<Sum>i<dim_vec v. (cmod (v $ i))\\<^sup>2 * x\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<parallel>complex_of_real x \\<cdot>\\<^sub>v v\\<parallel> =\n    x * \\<parallel>v\\<parallel>", "moreover"], ["proof (state)\nthis:\n  (\\<Sum>i<dim_vec v. (cmod (complex_of_real x * v $ i))\\<^sup>2) =\n  (\\<Sum>i<dim_vec v. (cmod (v $ i))\\<^sup>2 * x\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<parallel>complex_of_real x \\<cdot>\\<^sub>v v\\<parallel> =\n    x * \\<parallel>v\\<parallel>", "have \"(\\<Sum>i<dim_vec v. (cmod (v $ i))\\<^sup>2 * x\\<^sup>2) = x\\<^sup>2 * (\\<Sum>i<dim_vec v. (cmod (v $ i))\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<dim_vec v. (cmod (v $ i))\\<^sup>2 * x\\<^sup>2) =\n    x\\<^sup>2 * (\\<Sum>i<dim_vec v. (cmod (v $ i))\\<^sup>2)", "by (metis (no_types) mult.commute sum_distrib_right)"], ["proof (state)\nthis:\n  (\\<Sum>i<dim_vec v. (cmod (v $ i))\\<^sup>2 * x\\<^sup>2) =\n  x\\<^sup>2 * (\\<Sum>i<dim_vec v. (cmod (v $ i))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<parallel>complex_of_real x \\<cdot>\\<^sub>v v\\<parallel> =\n    x * \\<parallel>v\\<parallel>", "moreover"], ["proof (state)\nthis:\n  (\\<Sum>i<dim_vec v. (cmod (v $ i))\\<^sup>2 * x\\<^sup>2) =\n  x\\<^sup>2 * (\\<Sum>i<dim_vec v. (cmod (v $ i))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<parallel>complex_of_real x \\<cdot>\\<^sub>v v\\<parallel> =\n    x * \\<parallel>v\\<parallel>", "have \"sqrt(x\\<^sup>2 * (\\<Sum>i<dim_vec v. (cmod (v $ i))\\<^sup>2)) = \n                 sqrt(x\\<^sup>2) * sqrt (\\<Sum>i<dim_vec v. (cmod (v $ i))\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (x\\<^sup>2 * (\\<Sum>i<dim_vec v. (cmod (v $ i))\\<^sup>2)) =\n    sqrt (x\\<^sup>2) * sqrt (\\<Sum>i<dim_vec v. (cmod (v $ i))\\<^sup>2)", "using real_sqrt_mult"], ["proof (prove)\nusing this:\n  sqrt (?x * ?y) = sqrt ?x * sqrt ?y\n\ngoal (1 subgoal):\n 1. sqrt (x\\<^sup>2 * (\\<Sum>i<dim_vec v. (cmod (v $ i))\\<^sup>2)) =\n    sqrt (x\\<^sup>2) * sqrt (\\<Sum>i<dim_vec v. (cmod (v $ i))\\<^sup>2)", "by blast"], ["proof (state)\nthis:\n  sqrt (x\\<^sup>2 * (\\<Sum>i<dim_vec v. (cmod (v $ i))\\<^sup>2)) =\n  sqrt (x\\<^sup>2) * sqrt (\\<Sum>i<dim_vec v. (cmod (v $ i))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<parallel>complex_of_real x \\<cdot>\\<^sub>v v\\<parallel> =\n    x * \\<parallel>v\\<parallel>", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Sum>i<dim_vec v. (cmod (complex_of_real x * v $ i))\\<^sup>2) =\n  (\\<Sum>i<dim_vec v. (cmod (v $ i))\\<^sup>2 * x\\<^sup>2)\n  (\\<Sum>i<dim_vec v. (cmod (v $ i))\\<^sup>2 * x\\<^sup>2) =\n  x\\<^sup>2 * (\\<Sum>i<dim_vec v. (cmod (v $ i))\\<^sup>2)\n  sqrt (x\\<^sup>2 * (\\<Sum>i<dim_vec v. (cmod (v $ i))\\<^sup>2)) =\n  sqrt (x\\<^sup>2) * sqrt (\\<Sum>i<dim_vec v. (cmod (v $ i))\\<^sup>2)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>i<dim_vec v. (cmod (complex_of_real x * v $ i))\\<^sup>2) =\n  (\\<Sum>i<dim_vec v. (cmod (v $ i))\\<^sup>2 * x\\<^sup>2)\n  (\\<Sum>i<dim_vec v. (cmod (v $ i))\\<^sup>2 * x\\<^sup>2) =\n  x\\<^sup>2 * (\\<Sum>i<dim_vec v. (cmod (v $ i))\\<^sup>2)\n  sqrt (x\\<^sup>2 * (\\<Sum>i<dim_vec v. (cmod (v $ i))\\<^sup>2)) =\n  sqrt (x\\<^sup>2) * sqrt (\\<Sum>i<dim_vec v. (cmod (v $ i))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<parallel>complex_of_real x \\<cdot>\\<^sub>v v\\<parallel> =\n    x * \\<parallel>v\\<parallel>", "by(simp add: cpx_vec_length_def assms)"], ["proof (state)\nthis:\n  \\<parallel>complex_of_real x \\<cdot>\\<^sub>v v\\<parallel> =\n  x * \\<parallel>v\\<parallel>\n\ngoal:\nNo subgoals!", "qed"], ["", "locale state =\n  fixes n:: nat and v:: \"complex mat\"\n  assumes is_column [simp]: \"dim_col v = 1\"\n    and dim_row [simp]: \"dim_row v = 2^n\"\n    and is_normal [simp]: \"\\<parallel>col v 0\\<parallel> = 1\""], ["", "text\\<open> \nBelow the natural number n codes for the dimension of the complex vector space whose elements of norm\n1 we call states. \n\\<close>"], ["", "lemma unit_vec_of_right_length_is_state [simp]:\n  assumes \"i < 2^n\"\n  shows \"unit_vec (2^n) i \\<in> {v| n v::complex vec. dim_vec v = 2^n \\<and> \\<parallel>v\\<parallel> = 1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unit_vec (2 ^ n) i\n    \\<in> {uu_.\n           \\<exists>n v.\n              uu_ = v \\<and>\n              dim_vec v = 2 ^ n \\<and> \\<parallel>v\\<parallel> = 1}", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. unit_vec (2 ^ n) i\n    \\<in> {uu_.\n           \\<exists>n v.\n              uu_ = v \\<and>\n              dim_vec v = 2 ^ n \\<and> \\<parallel>v\\<parallel> = 1}", "have \"dim_vec (unit_vec (2^n) i) = 2^n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_vec (unit_vec (2 ^ n) i) = 2 ^ n", "by simp"], ["proof (state)\nthis:\n  dim_vec (unit_vec (2 ^ n) i) = 2 ^ n\n\ngoal (1 subgoal):\n 1. unit_vec (2 ^ n) i\n    \\<in> {uu_.\n           \\<exists>n v.\n              uu_ = v \\<and>\n              dim_vec v = 2 ^ n \\<and> \\<parallel>v\\<parallel> = 1}", "moreover"], ["proof (state)\nthis:\n  dim_vec (unit_vec (2 ^ n) i) = 2 ^ n\n\ngoal (1 subgoal):\n 1. unit_vec (2 ^ n) i\n    \\<in> {uu_.\n           \\<exists>n v.\n              uu_ = v \\<and>\n              dim_vec v = 2 ^ n \\<and> \\<parallel>v\\<parallel> = 1}", "have \"\\<parallel>unit_vec (2^n) i\\<parallel> = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>unit_vec (2 ^ n) i\\<parallel> = 1", "using assms"], ["proof (prove)\nusing this:\n  i < 2 ^ n\n\ngoal (1 subgoal):\n 1. \\<parallel>unit_vec (2 ^ n) i\\<parallel> = 1", "by simp"], ["proof (state)\nthis:\n  \\<parallel>unit_vec (2 ^ n) i\\<parallel> = 1\n\ngoal (1 subgoal):\n 1. unit_vec (2 ^ n) i\n    \\<in> {uu_.\n           \\<exists>n v.\n              uu_ = v \\<and>\n              dim_vec v = 2 ^ n \\<and> \\<parallel>v\\<parallel> = 1}", "ultimately"], ["proof (chain)\npicking this:\n  dim_vec (unit_vec (2 ^ n) i) = 2 ^ n\n  \\<parallel>unit_vec (2 ^ n) i\\<parallel> = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  dim_vec (unit_vec (2 ^ n) i) = 2 ^ n\n  \\<parallel>unit_vec (2 ^ n) i\\<parallel> = 1\n\ngoal (1 subgoal):\n 1. unit_vec (2 ^ n) i\n    \\<in> {uu_.\n           \\<exists>n v.\n              uu_ = v \\<and>\n              dim_vec v = 2 ^ n \\<and> \\<parallel>v\\<parallel> = 1}", "by simp"], ["proof (state)\nthis:\n  unit_vec (2 ^ n) i\n  \\<in> {uu_.\n         \\<exists>n v.\n            uu_ = v \\<and>\n            dim_vec v = 2 ^ n \\<and> \\<parallel>v\\<parallel> = 1}\n\ngoal:\nNo subgoals!", "qed"], ["", "definition state_qbit :: \"nat \\<Rightarrow> complex vec set\" where\n\"state_qbit n \\<equiv> {v| v:: complex vec. dim_vec v = 2^n \\<and> \\<parallel>v\\<parallel> = 1}\""], ["", "lemma (in state) state_to_state_qbit [simp]:\n  shows \"col v 0 \\<in> state_qbit n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col v 0 \\<in> state_qbit n", "using state_def state_qbit_def"], ["proof (prove)\nusing this:\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>col ?v 0\\<parallel> = 1\n  state_qbit ?n \\<equiv>\n  {v |v. dim_vec v = 2 ^ ?n \\<and> \\<parallel>v\\<parallel> = 1}\n\ngoal (1 subgoal):\n 1. col v 0 \\<in> state_qbit n", "by simp"], ["", "subsection \"The Hermitian Conjugation\""], ["", "text \\<open>The Hermitian conjugate of a complex matrix is the complex conjugate of its transpose. \\<close>"], ["", "definition dagger :: \"complex mat \\<Rightarrow> complex mat\" (\"_\\<^sup>\\<dagger>\") where\n  \"M\\<^sup>\\<dagger> \\<equiv> mat (dim_col M) (dim_row M) (\\<lambda>(i,j). cnj(M $$ (j,i)))\""], ["", "text \\<open>We introduce the type of complex square matrices.\\<close>"], ["", "typedef cpx_sqr_mat = \"{M | M::complex mat. square_mat M}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. x \\<in> {M |M. square_mat M}", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>x. x \\<in> {M |M. square_mat M}", "have \"square_mat (1\\<^sub>m n)\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. square_mat (1\\<^sub>m n)", "using one_mat_def"], ["proof (prove)\nusing this:\n  1\\<^sub>m ?n \\<equiv>\n  mat ?n ?n (\\<lambda>(i, j). if i = j then 1::?'a else (0::?'a))\n\ngoal (1 subgoal):\n 1. square_mat (1\\<^sub>m n)", "by simp"], ["proof (state)\nthis:\n  square_mat (1\\<^sub>m ?n1)\n\ngoal (1 subgoal):\n 1. \\<exists>x. x \\<in> {M |M. square_mat M}", "thus ?thesis"], ["proof (prove)\nusing this:\n  square_mat (1\\<^sub>m ?n1)\n\ngoal (1 subgoal):\n 1. \\<exists>x. x \\<in> {M |M. square_mat M}", "by blast"], ["proof (state)\nthis:\n  \\<exists>x. x \\<in> {M |M. square_mat M}\n\ngoal:\nNo subgoals!", "qed"], ["", "definition cpx_sqr_mat_to_cpx_mat :: \"cpx_sqr_mat => complex mat\" where\n\"cpx_sqr_mat_to_cpx_mat M \\<equiv> Rep_cpx_sqr_mat M\""], ["", "text \\<open>\nWe introduce a coercion from the type of complex square matrices to the type of complex \nmatrices.\n\\<close>"], ["", "declare [[coercion cpx_sqr_mat_to_cpx_mat]]"], ["", "lemma dim_row_of_dagger [simp]:\n  \"dim_row (M\\<^sup>\\<dagger>) = dim_col M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row M\\<^sup>\\<dagger> = dim_col M", "using dagger_def"], ["proof (prove)\nusing this:\n  ?M\\<^sup>\\<dagger> \\<equiv>\n  mat (dim_col ?M) (dim_row ?M) (\\<lambda>(i, j). cnj (?M $$ (j, i)))\n\ngoal (1 subgoal):\n 1. dim_row M\\<^sup>\\<dagger> = dim_col M", "by simp"], ["", "lemma dim_col_of_dagger [simp]:\n  \"dim_col (M\\<^sup>\\<dagger>) = dim_row M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col M\\<^sup>\\<dagger> = dim_row M", "using dagger_def"], ["proof (prove)\nusing this:\n  ?M\\<^sup>\\<dagger> \\<equiv>\n  mat (dim_col ?M) (dim_row ?M) (\\<lambda>(i, j). cnj (?M $$ (j, i)))\n\ngoal (1 subgoal):\n 1. dim_col M\\<^sup>\\<dagger> = dim_row M", "by simp"], ["", "lemma col_of_dagger [simp]:\n  assumes \"j < dim_row M\"\n  shows \"col (M\\<^sup>\\<dagger>) j = vec (dim_col M) (\\<lambda>i. cnj (M $$ (j,i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col M\\<^sup>\\<dagger> j =\n    vec (dim_col M) (\\<lambda>i. cnj (M $$ (j, i)))", "using assms col_def dagger_def"], ["proof (prove)\nusing this:\n  j < dim_row M\n  col ?A ?j = vec (dim_row ?A) (\\<lambda>i. ?A $$ (i, ?j))\n  ?M\\<^sup>\\<dagger> \\<equiv>\n  mat (dim_col ?M) (dim_row ?M) (\\<lambda>(i, j). cnj (?M $$ (j, i)))\n\ngoal (1 subgoal):\n 1. col M\\<^sup>\\<dagger> j =\n    vec (dim_col M) (\\<lambda>i. cnj (M $$ (j, i)))", "by simp"], ["", "lemma row_of_dagger [simp]:\n  assumes \"i < dim_col M\"\n  shows \"row (M\\<^sup>\\<dagger>) i = vec (dim_row M) (\\<lambda>j. cnj (M $$ (j,i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. row M\\<^sup>\\<dagger> i =\n    vec (dim_row M) (\\<lambda>j. cnj (M $$ (j, i)))", "using assms row_def dagger_def"], ["proof (prove)\nusing this:\n  i < dim_col M\n  row ?A ?i = vec (dim_col ?A) (\\<lambda>j. ?A $$ (?i, j))\n  ?M\\<^sup>\\<dagger> \\<equiv>\n  mat (dim_col ?M) (dim_row ?M) (\\<lambda>(i, j). cnj (?M $$ (j, i)))\n\ngoal (1 subgoal):\n 1. row M\\<^sup>\\<dagger> i =\n    vec (dim_row M) (\\<lambda>j. cnj (M $$ (j, i)))", "by simp"], ["", "lemma dagger_of_dagger_is_id:\n  fixes M :: \"complex Matrix.mat\"\n  shows \"(M\\<^sup>\\<dagger>)\\<^sup>\\<dagger> = M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M\\<^sup>\\<dagger>\\<^sup>\\<dagger> = M", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M; j < dim_col M\\<rbrakk>\n       \\<Longrightarrow> M\\<^sup>\\<dagger>\\<^sup>\\<dagger> $$ (i, j) =\n                         M $$ (i, j)\n 2. dim_row M\\<^sup>\\<dagger>\\<^sup>\\<dagger> = dim_row M\n 3. dim_col M\\<^sup>\\<dagger>\\<^sup>\\<dagger> = dim_col M", "show \"dim_row ((M\\<^sup>\\<dagger>)\\<^sup>\\<dagger>) = dim_row M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row M\\<^sup>\\<dagger>\\<^sup>\\<dagger> = dim_row M", "by simp"], ["proof (state)\nthis:\n  dim_row M\\<^sup>\\<dagger>\\<^sup>\\<dagger> = dim_row M\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M; j < dim_col M\\<rbrakk>\n       \\<Longrightarrow> M\\<^sup>\\<dagger>\\<^sup>\\<dagger> $$ (i, j) =\n                         M $$ (i, j)\n 2. dim_col M\\<^sup>\\<dagger>\\<^sup>\\<dagger> = dim_col M", "show \"dim_col ((M\\<^sup>\\<dagger>)\\<^sup>\\<dagger>) = dim_col M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col M\\<^sup>\\<dagger>\\<^sup>\\<dagger> = dim_col M", "by simp"], ["proof (state)\nthis:\n  dim_col M\\<^sup>\\<dagger>\\<^sup>\\<dagger> = dim_col M\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M; j < dim_col M\\<rbrakk>\n       \\<Longrightarrow> M\\<^sup>\\<dagger>\\<^sup>\\<dagger> $$ (i, j) =\n                         M $$ (i, j)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M; j < dim_col M\\<rbrakk>\n       \\<Longrightarrow> M\\<^sup>\\<dagger>\\<^sup>\\<dagger> $$ (i, j) =\n                         M $$ (i, j)", "assume a0:\"i < dim_row M\" and a1:\"j < dim_col M\""], ["proof (state)\nthis:\n  i < dim_row M\n  j < dim_col M\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M; j < dim_col M\\<rbrakk>\n       \\<Longrightarrow> M\\<^sup>\\<dagger>\\<^sup>\\<dagger> $$ (i, j) =\n                         M $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i < dim_row M\n  j < dim_col M", "show \"(M\\<^sup>\\<dagger>)\\<^sup>\\<dagger> $$ (i,j) = M $$ (i,j)\""], ["proof (prove)\nusing this:\n  i < dim_row M\n  j < dim_col M\n\ngoal (1 subgoal):\n 1. M\\<^sup>\\<dagger>\\<^sup>\\<dagger> $$ (i, j) = M $$ (i, j)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>i < dim_row M; j < dim_col M\\<rbrakk>\n    \\<Longrightarrow> M\\<^sup>\\<dagger>\\<^sup>\\<dagger> $$ (i, j) =\n                      M $$ (i, j)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. M\\<^sup>\\<dagger>\\<^sup>\\<dagger> $$ (i, j) = M $$ (i, j)", "using dagger_def a0 a1"], ["proof (prove)\nusing this:\n  ?M\\<^sup>\\<dagger> \\<equiv>\n  mat (dim_col ?M) (dim_row ?M) (\\<lambda>(i, j). cnj (?M $$ (j, i)))\n  i < dim_row M\n  j < dim_col M\n\ngoal (1 subgoal):\n 1. M\\<^sup>\\<dagger>\\<^sup>\\<dagger> $$ (i, j) = M $$ (i, j)", "by auto"], ["proof (state)\nthis:\n  M\\<^sup>\\<dagger>\\<^sup>\\<dagger> $$ (i, j) = M $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  M\\<^sup>\\<dagger>\\<^sup>\\<dagger> $$ (i, j) = M $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dagger_of_sqr_is_sqr [simp]:\n  \"square_mat ((M::cpx_sqr_mat)\\<^sup>\\<dagger>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. square_mat cpx_sqr_mat_to_cpx_mat M\\<^sup>\\<dagger>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. square_mat cpx_sqr_mat_to_cpx_mat M\\<^sup>\\<dagger>", "have \"square_mat M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. square_mat (cpx_sqr_mat_to_cpx_mat M)", "using cpx_sqr_mat_to_cpx_mat_def Rep_cpx_sqr_mat"], ["proof (prove)\nusing this:\n  cpx_sqr_mat_to_cpx_mat ?M \\<equiv> Rep_cpx_sqr_mat ?M\n  Rep_cpx_sqr_mat ?x \\<in> {M |M. square_mat M}\n\ngoal (1 subgoal):\n 1. square_mat (cpx_sqr_mat_to_cpx_mat M)", "by simp"], ["proof (state)\nthis:\n  square_mat (cpx_sqr_mat_to_cpx_mat M)\n\ngoal (1 subgoal):\n 1. square_mat cpx_sqr_mat_to_cpx_mat M\\<^sup>\\<dagger>", "then"], ["proof (chain)\npicking this:\n  square_mat (cpx_sqr_mat_to_cpx_mat M)", "have \"dim_row M = dim_col M\""], ["proof (prove)\nusing this:\n  square_mat (cpx_sqr_mat_to_cpx_mat M)\n\ngoal (1 subgoal):\n 1. dim_row (cpx_sqr_mat_to_cpx_mat M) = dim_col (cpx_sqr_mat_to_cpx_mat M)", "by simp"], ["proof (state)\nthis:\n  dim_row (cpx_sqr_mat_to_cpx_mat M) = dim_col (cpx_sqr_mat_to_cpx_mat M)\n\ngoal (1 subgoal):\n 1. square_mat cpx_sqr_mat_to_cpx_mat M\\<^sup>\\<dagger>", "then"], ["proof (chain)\npicking this:\n  dim_row (cpx_sqr_mat_to_cpx_mat M) = dim_col (cpx_sqr_mat_to_cpx_mat M)", "have \"dim_col (M\\<^sup>\\<dagger>) = dim_row (M\\<^sup>\\<dagger>)\""], ["proof (prove)\nusing this:\n  dim_row (cpx_sqr_mat_to_cpx_mat M) = dim_col (cpx_sqr_mat_to_cpx_mat M)\n\ngoal (1 subgoal):\n 1. dim_col cpx_sqr_mat_to_cpx_mat M\\<^sup>\\<dagger> =\n    dim_row cpx_sqr_mat_to_cpx_mat M\\<^sup>\\<dagger>", "by simp"], ["proof (state)\nthis:\n  dim_col cpx_sqr_mat_to_cpx_mat M\\<^sup>\\<dagger> =\n  dim_row cpx_sqr_mat_to_cpx_mat M\\<^sup>\\<dagger>\n\ngoal (1 subgoal):\n 1. square_mat cpx_sqr_mat_to_cpx_mat M\\<^sup>\\<dagger>", "thus \"square_mat (M\\<^sup>\\<dagger>)\""], ["proof (prove)\nusing this:\n  dim_col cpx_sqr_mat_to_cpx_mat M\\<^sup>\\<dagger> =\n  dim_row cpx_sqr_mat_to_cpx_mat M\\<^sup>\\<dagger>\n\ngoal (1 subgoal):\n 1. square_mat cpx_sqr_mat_to_cpx_mat M\\<^sup>\\<dagger>", "by simp"], ["proof (state)\nthis:\n  square_mat cpx_sqr_mat_to_cpx_mat M\\<^sup>\\<dagger>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dagger_of_id_is_id [simp]:\n  \"(1\\<^sub>m n)\\<^sup>\\<dagger> = 1\\<^sub>m n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1\\<^sub>m n\\<^sup>\\<dagger> = 1\\<^sub>m n", "using dagger_def one_mat_def"], ["proof (prove)\nusing this:\n  ?M\\<^sup>\\<dagger> \\<equiv>\n  mat (dim_col ?M) (dim_row ?M) (\\<lambda>(i, j). cnj (?M $$ (j, i)))\n  1\\<^sub>m ?n \\<equiv>\n  mat ?n ?n (\\<lambda>(i, j). if i = j then 1::?'a else (0::?'a))\n\ngoal (1 subgoal):\n 1. 1\\<^sub>m n\\<^sup>\\<dagger> = 1\\<^sub>m n", "by auto"], ["", "subsection \"Unitary Matrices and Quantum Gates\""], ["", "definition unitary :: \"complex mat \\<Rightarrow> bool\" where\n\"unitary M \\<equiv> (M\\<^sup>\\<dagger>) * M = 1\\<^sub>m (dim_col M) \\<and> M * (M\\<^sup>\\<dagger>) = 1\\<^sub>m (dim_row M)\""], ["", "lemma id_is_unitary [simp]:\n  \"unitary (1\\<^sub>m n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unitary (1\\<^sub>m n)", "by (simp add: unitary_def)"], ["", "locale gate =\n  fixes n:: nat and A:: \"complex mat\"\n  assumes dim_row [simp]: \"dim_row A = 2^n\"\n    and square_mat [simp]: \"square_mat A\"\n    and unitary [simp]: \"unitary A\""], ["", "text \\<open>\nWe prove that a quantum gate is invertible and its inverse is given by its Hermitian conjugate.\n\\<close>"], ["", "lemma mat_unitary_mat [intro]:\n  assumes \"unitary M\"\n  shows \"inverts_mat M (M\\<^sup>\\<dagger>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inverts_mat M M\\<^sup>\\<dagger>", "using assms"], ["proof (prove)\nusing this:\n  unitary M\n\ngoal (1 subgoal):\n 1. inverts_mat M M\\<^sup>\\<dagger>", "by (simp add: unitary_def inverts_mat_def)"], ["", "lemma unitary_mat_mat [intro]:\n  assumes \"unitary M\"\n  shows \"inverts_mat (M\\<^sup>\\<dagger>) M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inverts_mat M\\<^sup>\\<dagger> M", "using assms"], ["proof (prove)\nusing this:\n  unitary M\n\ngoal (1 subgoal):\n 1. inverts_mat M\\<^sup>\\<dagger> M", "by (simp add: unitary_def inverts_mat_def)"], ["", "lemma (in gate) gate_is_inv:\n  \"invertible_mat A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible_mat A", "using square_mat unitary invertible_mat_def"], ["proof (prove)\nusing this:\n  square_mat A\n  unitary A\n  invertible_mat ?A \\<equiv>\n  square_mat ?A \\<and>\n  (\\<exists>B. inverts_mat ?A B \\<and> inverts_mat B ?A)\n\ngoal (1 subgoal):\n 1. invertible_mat A", "by blast"], ["", "subsection \"Relations Between Complex Conjugation, Hermitian Conjugation, Transposition and Unitarity\""], ["", "notation transpose_mat (\"(_\\<^sup>t)\")"], ["", "lemma col_tranpose [simp]:\n  assumes \"dim_row M = n\" and \"i < n\"\n  shows \"col (M\\<^sup>t) i = row M i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col M\\<^sup>t i = row M i", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ia.\n       ia < dim_vec (row M i) \\<Longrightarrow>\n       col M\\<^sup>t i $ ia = row M i $ ia\n 2. dim_vec (col M\\<^sup>t i) = dim_vec (row M i)", "show \"dim_vec (col (M\\<^sup>t) i) = dim_vec (row M i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_vec (col M\\<^sup>t i) = dim_vec (row M i)", "by (simp add: row_def col_def transpose_mat_def)"], ["proof (state)\nthis:\n  dim_vec (col M\\<^sup>t i) = dim_vec (row M i)\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec (row M i) \\<Longrightarrow>\n       col M\\<^sup>t i $ ia = row M i $ ia", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec (row M i) \\<Longrightarrow>\n       col M\\<^sup>t i $ ia = row M i $ ia", "show \"\\<And>j. j < dim_vec (row M i) \\<Longrightarrow> col M\\<^sup>t i $ j = row M i $ j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>j.\n       j < dim_vec (row M i) \\<Longrightarrow>\n       col M\\<^sup>t i $ j = row M i $ j", "using assms"], ["proof (prove)\nusing this:\n  dim_row M = n\n  i < n\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j < dim_vec (row M i) \\<Longrightarrow>\n       col M\\<^sup>t i $ j = row M i $ j", "by (simp add: transpose_mat_def)"], ["proof (state)\nthis:\n  ?j < dim_vec (row M i) \\<Longrightarrow>\n  col M\\<^sup>t i $ ?j = row M i $ ?j\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma row_transpose [simp]:\n  assumes \"dim_col M = n\" and \"i < n\"\n  shows \"row (M\\<^sup>t) i = col M i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. row M\\<^sup>t i = col M i", "using assms"], ["proof (prove)\nusing this:\n  dim_col M = n\n  i < n\n\ngoal (1 subgoal):\n 1. row M\\<^sup>t i = col M i", "by simp"], ["", "definition cpx_mat_cnj :: \"complex mat \\<Rightarrow> complex mat\" (\"(_\\<^sup>\\<star>)\") where\n\"cpx_mat_cnj M \\<equiv> mat (dim_row M) (dim_col M) (\\<lambda>(i,j). cnj (M $$ (i,j)))\""], ["", "lemma cpx_mat_cnj_id [simp]:\n  \"(1\\<^sub>m n)\\<^sup>\\<star> = 1\\<^sub>m n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1\\<^sub>m n\\<^sup>\\<star> = 1\\<^sub>m n", "by (auto simp: cpx_mat_cnj_def)"], ["", "lemma cpx_mat_cnj_cnj [simp]:\n  \"(M\\<^sup>\\<star>)\\<^sup>\\<star> = M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M\\<^sup>\\<star>\\<^sup>\\<star> = M", "by (auto simp: cpx_mat_cnj_def)"], ["", "lemma dim_row_of_cjn_prod [simp]: \n  \"dim_row ((M\\<^sup>\\<star>) * (N\\<^sup>\\<star>)) = dim_row M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row (M\\<^sup>\\<star> * N\\<^sup>\\<star>) = dim_row M", "by (simp add: cpx_mat_cnj_def)"], ["", "lemma dim_col_of_cjn_prod [simp]: \n  \"dim_col ((M\\<^sup>\\<star>) * (N\\<^sup>\\<star>)) = dim_col N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col (M\\<^sup>\\<star> * N\\<^sup>\\<star>) = dim_col N", "by (simp add: cpx_mat_cnj_def)"], ["", "lemma cpx_mat_cnj_prod:\n  assumes \"dim_col M = dim_row N\"\n  shows \"(M * N)\\<^sup>\\<star> = (M\\<^sup>\\<star>) * (N\\<^sup>\\<star>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M * N\\<^sup>\\<star> = M\\<^sup>\\<star> * N\\<^sup>\\<star>", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (M\\<^sup>\\<star> * N\\<^sup>\\<star>);\n        j < dim_col (M\\<^sup>\\<star> * N\\<^sup>\\<star>)\\<rbrakk>\n       \\<Longrightarrow> M * N\\<^sup>\\<star> $$ (i, j) =\n                         (M\\<^sup>\\<star> * N\\<^sup>\\<star>) $$ (i, j)\n 2. dim_row M * N\\<^sup>\\<star> =\n    dim_row (M\\<^sup>\\<star> * N\\<^sup>\\<star>)\n 3. dim_col M * N\\<^sup>\\<star> =\n    dim_col (M\\<^sup>\\<star> * N\\<^sup>\\<star>)", "show \"dim_row (M * N)\\<^sup>\\<star> = dim_row ((M\\<^sup>\\<star>) * (N\\<^sup>\\<star>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row M * N\\<^sup>\\<star> =\n    dim_row (M\\<^sup>\\<star> * N\\<^sup>\\<star>)", "by (simp add: cpx_mat_cnj_def)"], ["proof (state)\nthis:\n  dim_row M * N\\<^sup>\\<star> = dim_row (M\\<^sup>\\<star> * N\\<^sup>\\<star>)\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (M\\<^sup>\\<star> * N\\<^sup>\\<star>);\n        j < dim_col (M\\<^sup>\\<star> * N\\<^sup>\\<star>)\\<rbrakk>\n       \\<Longrightarrow> M * N\\<^sup>\\<star> $$ (i, j) =\n                         (M\\<^sup>\\<star> * N\\<^sup>\\<star>) $$ (i, j)\n 2. dim_col M * N\\<^sup>\\<star> =\n    dim_col (M\\<^sup>\\<star> * N\\<^sup>\\<star>)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (M\\<^sup>\\<star> * N\\<^sup>\\<star>);\n        j < dim_col (M\\<^sup>\\<star> * N\\<^sup>\\<star>)\\<rbrakk>\n       \\<Longrightarrow> M * N\\<^sup>\\<star> $$ (i, j) =\n                         (M\\<^sup>\\<star> * N\\<^sup>\\<star>) $$ (i, j)\n 2. dim_col M * N\\<^sup>\\<star> =\n    dim_col (M\\<^sup>\\<star> * N\\<^sup>\\<star>)", "show \"dim_col ((M * N)\\<^sup>\\<star>) = dim_col ((M\\<^sup>\\<star>) * (N\\<^sup>\\<star>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col M * N\\<^sup>\\<star> =\n    dim_col (M\\<^sup>\\<star> * N\\<^sup>\\<star>)", "by (simp add: cpx_mat_cnj_def)"], ["proof (state)\nthis:\n  dim_col M * N\\<^sup>\\<star> = dim_col (M\\<^sup>\\<star> * N\\<^sup>\\<star>)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (M\\<^sup>\\<star> * N\\<^sup>\\<star>);\n        j < dim_col (M\\<^sup>\\<star> * N\\<^sup>\\<star>)\\<rbrakk>\n       \\<Longrightarrow> M * N\\<^sup>\\<star> $$ (i, j) =\n                         (M\\<^sup>\\<star> * N\\<^sup>\\<star>) $$ (i, j)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (M\\<^sup>\\<star> * N\\<^sup>\\<star>);\n        j < dim_col (M\\<^sup>\\<star> * N\\<^sup>\\<star>)\\<rbrakk>\n       \\<Longrightarrow> M * N\\<^sup>\\<star> $$ (i, j) =\n                         (M\\<^sup>\\<star> * N\\<^sup>\\<star>) $$ (i, j)", "fix i j::nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (M\\<^sup>\\<star> * N\\<^sup>\\<star>);\n        j < dim_col (M\\<^sup>\\<star> * N\\<^sup>\\<star>)\\<rbrakk>\n       \\<Longrightarrow> M * N\\<^sup>\\<star> $$ (i, j) =\n                         (M\\<^sup>\\<star> * N\\<^sup>\\<star>) $$ (i, j)", "assume a1:\"i < dim_row ((M\\<^sup>\\<star>) * (N\\<^sup>\\<star>))\" and a2:\"j < dim_col ((M\\<^sup>\\<star>) * (N\\<^sup>\\<star>))\""], ["proof (state)\nthis:\n  i < dim_row (M\\<^sup>\\<star> * N\\<^sup>\\<star>)\n  j < dim_col (M\\<^sup>\\<star> * N\\<^sup>\\<star>)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (M\\<^sup>\\<star> * N\\<^sup>\\<star>);\n        j < dim_col (M\\<^sup>\\<star> * N\\<^sup>\\<star>)\\<rbrakk>\n       \\<Longrightarrow> M * N\\<^sup>\\<star> $$ (i, j) =\n                         (M\\<^sup>\\<star> * N\\<^sup>\\<star>) $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i < dim_row (M\\<^sup>\\<star> * N\\<^sup>\\<star>)\n  j < dim_col (M\\<^sup>\\<star> * N\\<^sup>\\<star>)", "have \"(M * N)\\<^sup>\\<star> $$ (i,j) = cnj (\\<Sum>k<(dim_row N). M $$ (i,k) * N $$ (k,j))\""], ["proof (prove)\nusing this:\n  i < dim_row (M\\<^sup>\\<star> * N\\<^sup>\\<star>)\n  j < dim_col (M\\<^sup>\\<star> * N\\<^sup>\\<star>)\n\ngoal (1 subgoal):\n 1. M * N\\<^sup>\\<star> $$ (i, j) =\n    cnj (\\<Sum>k<dim_row N. M $$ (i, k) * N $$ (k, j))", "using assms cpx_mat_cnj_def index_mat times_mat_def scalar_prod_def row_def col_def \ndim_row_of_cjn_prod dim_col_of_cjn_prod"], ["proof (prove)\nusing this:\n  i < dim_row (M\\<^sup>\\<star> * N\\<^sup>\\<star>)\n  j < dim_col (M\\<^sup>\\<star> * N\\<^sup>\\<star>)\n  dim_col M = dim_row N\n  ?M\\<^sup>\\<star> \\<equiv>\n  mat (dim_row ?M) (dim_col ?M) (\\<lambda>(i, j). cnj (?M $$ (i, j)))\n  \\<lbrakk>?i < ?nr; ?j < ?nc\\<rbrakk>\n  \\<Longrightarrow> mat ?nr ?nc ?f $$ (?i, ?j) = ?f (?i, ?j)\n  \\<lbrakk>?i < ?nr; ?j < ?nc\\<rbrakk>\n  \\<Longrightarrow> mat\\<^sub>r ?nr ?nc ?g $$ (?i, ?j) = ?g ?i $ ?j\n  ?A * ?B \\<equiv>\n  mat (dim_row ?A) (dim_col ?B)\n   (\\<lambda>(i, j). row ?A i \\<bullet> col ?B j)\n  ?v \\<bullet> ?w \\<equiv> \\<Sum>i = 0..<dim_vec ?w. ?v $ i * ?w $ i\n  row ?A ?i = vec (dim_col ?A) (\\<lambda>j. ?A $$ (?i, j))\n  col ?A ?j = vec (dim_row ?A) (\\<lambda>i. ?A $$ (i, ?j))\n  dim_row (?M\\<^sup>\\<star> * ?N\\<^sup>\\<star>) = dim_row ?M\n  dim_col (?M\\<^sup>\\<star> * ?N\\<^sup>\\<star>) = dim_col ?N\n\ngoal (1 subgoal):\n 1. M * N\\<^sup>\\<star> $$ (i, j) =\n    cnj (\\<Sum>k<dim_row N. M $$ (i, k) * N $$ (k, j))", "by (smt case_prod_conv dim_col index_mult_mat(2) index_mult_mat(3) index_vec lessThan_atLeast0 \n        lessThan_iff sum.cong)"], ["proof (state)\nthis:\n  M * N\\<^sup>\\<star> $$ (i, j) =\n  cnj (\\<Sum>k<dim_row N. M $$ (i, k) * N $$ (k, j))\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (M\\<^sup>\\<star> * N\\<^sup>\\<star>);\n        j < dim_col (M\\<^sup>\\<star> * N\\<^sup>\\<star>)\\<rbrakk>\n       \\<Longrightarrow> M * N\\<^sup>\\<star> $$ (i, j) =\n                         (M\\<^sup>\\<star> * N\\<^sup>\\<star>) $$ (i, j)", "also"], ["proof (state)\nthis:\n  M * N\\<^sup>\\<star> $$ (i, j) =\n  cnj (\\<Sum>k<dim_row N. M $$ (i, k) * N $$ (k, j))\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (M\\<^sup>\\<star> * N\\<^sup>\\<star>);\n        j < dim_col (M\\<^sup>\\<star> * N\\<^sup>\\<star>)\\<rbrakk>\n       \\<Longrightarrow> M * N\\<^sup>\\<star> $$ (i, j) =\n                         (M\\<^sup>\\<star> * N\\<^sup>\\<star>) $$ (i, j)", "have \"\\<dots> = (\\<Sum>k<(dim_row N). cnj(M $$ (i,k)) * cnj(N $$ (k,j)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnj (\\<Sum>k<dim_row N. M $$ (i, k) * N $$ (k, j)) =\n    (\\<Sum>k<dim_row N. cnj (M $$ (i, k)) * cnj (N $$ (k, j)))", "by simp"], ["proof (state)\nthis:\n  cnj (\\<Sum>k<dim_row N. M $$ (i, k) * N $$ (k, j)) =\n  (\\<Sum>k<dim_row N. cnj (M $$ (i, k)) * cnj (N $$ (k, j)))\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (M\\<^sup>\\<star> * N\\<^sup>\\<star>);\n        j < dim_col (M\\<^sup>\\<star> * N\\<^sup>\\<star>)\\<rbrakk>\n       \\<Longrightarrow> M * N\\<^sup>\\<star> $$ (i, j) =\n                         (M\\<^sup>\\<star> * N\\<^sup>\\<star>) $$ (i, j)", "also"], ["proof (state)\nthis:\n  cnj (\\<Sum>k<dim_row N. M $$ (i, k) * N $$ (k, j)) =\n  (\\<Sum>k<dim_row N. cnj (M $$ (i, k)) * cnj (N $$ (k, j)))\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (M\\<^sup>\\<star> * N\\<^sup>\\<star>);\n        j < dim_col (M\\<^sup>\\<star> * N\\<^sup>\\<star>)\\<rbrakk>\n       \\<Longrightarrow> M * N\\<^sup>\\<star> $$ (i, j) =\n                         (M\\<^sup>\\<star> * N\\<^sup>\\<star>) $$ (i, j)", "have \"((M\\<^sup>\\<star>) * (N\\<^sup>\\<star>)) $$ (i,j) = \n    (\\<Sum>k<(dim_row N). cnj(M $$ (i,k)) * cnj(N $$ (k,j)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (M\\<^sup>\\<star> * N\\<^sup>\\<star>) $$ (i, j) =\n    (\\<Sum>k<dim_row N. cnj (M $$ (i, k)) * cnj (N $$ (k, j)))", "using assms a1 a2 cpx_mat_cnj_def index_mat times_mat_def scalar_prod_def row_def col_def"], ["proof (prove)\nusing this:\n  dim_col M = dim_row N\n  i < dim_row (M\\<^sup>\\<star> * N\\<^sup>\\<star>)\n  j < dim_col (M\\<^sup>\\<star> * N\\<^sup>\\<star>)\n  ?M\\<^sup>\\<star> \\<equiv>\n  mat (dim_row ?M) (dim_col ?M) (\\<lambda>(i, j). cnj (?M $$ (i, j)))\n  \\<lbrakk>?i < ?nr; ?j < ?nc\\<rbrakk>\n  \\<Longrightarrow> mat ?nr ?nc ?f $$ (?i, ?j) = ?f (?i, ?j)\n  \\<lbrakk>?i < ?nr; ?j < ?nc\\<rbrakk>\n  \\<Longrightarrow> mat\\<^sub>r ?nr ?nc ?g $$ (?i, ?j) = ?g ?i $ ?j\n  ?A * ?B \\<equiv>\n  mat (dim_row ?A) (dim_col ?B)\n   (\\<lambda>(i, j). row ?A i \\<bullet> col ?B j)\n  ?v \\<bullet> ?w \\<equiv> \\<Sum>i = 0..<dim_vec ?w. ?v $ i * ?w $ i\n  row ?A ?i = vec (dim_col ?A) (\\<lambda>j. ?A $$ (?i, j))\n  col ?A ?j = vec (dim_row ?A) (\\<lambda>i. ?A $$ (i, ?j))\n\ngoal (1 subgoal):\n 1. (M\\<^sup>\\<star> * N\\<^sup>\\<star>) $$ (i, j) =\n    (\\<Sum>k<dim_row N. cnj (M $$ (i, k)) * cnj (N $$ (k, j)))", "by (smt case_prod_conv dim_col dim_col_mat(1) dim_row_mat(1) index_vec lessThan_atLeast0 \n        lessThan_iff sum.cong)"], ["proof (state)\nthis:\n  (M\\<^sup>\\<star> * N\\<^sup>\\<star>) $$ (i, j) =\n  (\\<Sum>k<dim_row N. cnj (M $$ (i, k)) * cnj (N $$ (k, j)))\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (M\\<^sup>\\<star> * N\\<^sup>\\<star>);\n        j < dim_col (M\\<^sup>\\<star> * N\\<^sup>\\<star>)\\<rbrakk>\n       \\<Longrightarrow> M * N\\<^sup>\\<star> $$ (i, j) =\n                         (M\\<^sup>\\<star> * N\\<^sup>\\<star>) $$ (i, j)", "finally"], ["proof (chain)\npicking this:\n  (M\\<^sup>\\<star> * N\\<^sup>\\<star>) $$ (i, j) =\n  M * N\\<^sup>\\<star> $$ (i, j)", "show \"(M * N)\\<^sup>\\<star> $$ (i, j) = ((M\\<^sup>\\<star>) * (N\\<^sup>\\<star>)) $$ (i, j)\""], ["proof (prove)\nusing this:\n  (M\\<^sup>\\<star> * N\\<^sup>\\<star>) $$ (i, j) =\n  M * N\\<^sup>\\<star> $$ (i, j)\n\ngoal (1 subgoal):\n 1. M * N\\<^sup>\\<star> $$ (i, j) =\n    (M\\<^sup>\\<star> * N\\<^sup>\\<star>) $$ (i, j)", "by simp"], ["proof (state)\nthis:\n  M * N\\<^sup>\\<star> $$ (i, j) =\n  (M\\<^sup>\\<star> * N\\<^sup>\\<star>) $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma transpose_of_prod:\n  fixes M N::\"complex Matrix.mat\"\n  assumes \"dim_col M = dim_row N\"\n  shows \"(M * N)\\<^sup>t = N\\<^sup>t * (M\\<^sup>t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M * N\\<^sup>t = N\\<^sup>t * M\\<^sup>t", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (N\\<^sup>t * M\\<^sup>t);\n        j < dim_col (N\\<^sup>t * M\\<^sup>t)\\<rbrakk>\n       \\<Longrightarrow> M * N\\<^sup>t $$ (i, j) =\n                         (N\\<^sup>t * M\\<^sup>t) $$ (i, j)\n 2. dim_row M * N\\<^sup>t = dim_row (N\\<^sup>t * M\\<^sup>t)\n 3. dim_col M * N\\<^sup>t = dim_col (N\\<^sup>t * M\\<^sup>t)", "fix i j::nat"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (N\\<^sup>t * M\\<^sup>t);\n        j < dim_col (N\\<^sup>t * M\\<^sup>t)\\<rbrakk>\n       \\<Longrightarrow> M * N\\<^sup>t $$ (i, j) =\n                         (N\\<^sup>t * M\\<^sup>t) $$ (i, j)\n 2. dim_row M * N\\<^sup>t = dim_row (N\\<^sup>t * M\\<^sup>t)\n 3. dim_col M * N\\<^sup>t = dim_col (N\\<^sup>t * M\\<^sup>t)", "assume a0: \"i < dim_row (N\\<^sup>t * (M\\<^sup>t))\" and a1: \"j < dim_col (N\\<^sup>t * (M\\<^sup>t))\""], ["proof (state)\nthis:\n  i < dim_row (N\\<^sup>t * M\\<^sup>t)\n  j < dim_col (N\\<^sup>t * M\\<^sup>t)\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (N\\<^sup>t * M\\<^sup>t);\n        j < dim_col (N\\<^sup>t * M\\<^sup>t)\\<rbrakk>\n       \\<Longrightarrow> M * N\\<^sup>t $$ (i, j) =\n                         (N\\<^sup>t * M\\<^sup>t) $$ (i, j)\n 2. dim_row M * N\\<^sup>t = dim_row (N\\<^sup>t * M\\<^sup>t)\n 3. dim_col M * N\\<^sup>t = dim_col (N\\<^sup>t * M\\<^sup>t)", "then"], ["proof (chain)\npicking this:\n  i < dim_row (N\\<^sup>t * M\\<^sup>t)\n  j < dim_col (N\\<^sup>t * M\\<^sup>t)", "have \"(M * N)\\<^sup>t $$ (i,j) = (M * N) $$ (j,i)\""], ["proof (prove)\nusing this:\n  i < dim_row (N\\<^sup>t * M\\<^sup>t)\n  j < dim_col (N\\<^sup>t * M\\<^sup>t)\n\ngoal (1 subgoal):\n 1. M * N\\<^sup>t $$ (i, j) = (M * N) $$ (j, i)", "by auto"], ["proof (state)\nthis:\n  M * N\\<^sup>t $$ (i, j) = (M * N) $$ (j, i)\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (N\\<^sup>t * M\\<^sup>t);\n        j < dim_col (N\\<^sup>t * M\\<^sup>t)\\<rbrakk>\n       \\<Longrightarrow> M * N\\<^sup>t $$ (i, j) =\n                         (N\\<^sup>t * M\\<^sup>t) $$ (i, j)\n 2. dim_row M * N\\<^sup>t = dim_row (N\\<^sup>t * M\\<^sup>t)\n 3. dim_col M * N\\<^sup>t = dim_col (N\\<^sup>t * M\\<^sup>t)", "also"], ["proof (state)\nthis:\n  M * N\\<^sup>t $$ (i, j) = (M * N) $$ (j, i)\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (N\\<^sup>t * M\\<^sup>t);\n        j < dim_col (N\\<^sup>t * M\\<^sup>t)\\<rbrakk>\n       \\<Longrightarrow> M * N\\<^sup>t $$ (i, j) =\n                         (N\\<^sup>t * M\\<^sup>t) $$ (i, j)\n 2. dim_row M * N\\<^sup>t = dim_row (N\\<^sup>t * M\\<^sup>t)\n 3. dim_col M * N\\<^sup>t = dim_col (N\\<^sup>t * M\\<^sup>t)", "have \"... = (\\<Sum>k<dim_row M\\<^sup>t.  M $$ (j,k) * N $$ (k,i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (M * N) $$ (j, i) =\n    (\\<Sum>k<dim_row M\\<^sup>t. M $$ (j, k) * N $$ (k, i))", "using assms a0 a1"], ["proof (prove)\nusing this:\n  dim_col M = dim_row N\n  i < dim_row (N\\<^sup>t * M\\<^sup>t)\n  j < dim_col (N\\<^sup>t * M\\<^sup>t)\n\ngoal (1 subgoal):\n 1. (M * N) $$ (j, i) =\n    (\\<Sum>k<dim_row M\\<^sup>t. M $$ (j, k) * N $$ (k, i))", "by auto"], ["proof (state)\nthis:\n  (M * N) $$ (j, i) = (\\<Sum>k<dim_row M\\<^sup>t. M $$ (j, k) * N $$ (k, i))\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (N\\<^sup>t * M\\<^sup>t);\n        j < dim_col (N\\<^sup>t * M\\<^sup>t)\\<rbrakk>\n       \\<Longrightarrow> M * N\\<^sup>t $$ (i, j) =\n                         (N\\<^sup>t * M\\<^sup>t) $$ (i, j)\n 2. dim_row M * N\\<^sup>t = dim_row (N\\<^sup>t * M\\<^sup>t)\n 3. dim_col M * N\\<^sup>t = dim_col (N\\<^sup>t * M\\<^sup>t)", "also"], ["proof (state)\nthis:\n  (M * N) $$ (j, i) = (\\<Sum>k<dim_row M\\<^sup>t. M $$ (j, k) * N $$ (k, i))\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (N\\<^sup>t * M\\<^sup>t);\n        j < dim_col (N\\<^sup>t * M\\<^sup>t)\\<rbrakk>\n       \\<Longrightarrow> M * N\\<^sup>t $$ (i, j) =\n                         (N\\<^sup>t * M\\<^sup>t) $$ (i, j)\n 2. dim_row M * N\\<^sup>t = dim_row (N\\<^sup>t * M\\<^sup>t)\n 3. dim_col M * N\\<^sup>t = dim_col (N\\<^sup>t * M\\<^sup>t)", "have \"... = (\\<Sum>k<dim_row M\\<^sup>t. N $$ (k,i) * M $$ (j,k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k<dim_row M\\<^sup>t. M $$ (j, k) * N $$ (k, i)) =\n    (\\<Sum>k<dim_row M\\<^sup>t. N $$ (k, i) * M $$ (j, k))", "by (simp add: semiring_normalization_rules(7))"], ["proof (state)\nthis:\n  (\\<Sum>k<dim_row M\\<^sup>t. M $$ (j, k) * N $$ (k, i)) =\n  (\\<Sum>k<dim_row M\\<^sup>t. N $$ (k, i) * M $$ (j, k))\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (N\\<^sup>t * M\\<^sup>t);\n        j < dim_col (N\\<^sup>t * M\\<^sup>t)\\<rbrakk>\n       \\<Longrightarrow> M * N\\<^sup>t $$ (i, j) =\n                         (N\\<^sup>t * M\\<^sup>t) $$ (i, j)\n 2. dim_row M * N\\<^sup>t = dim_row (N\\<^sup>t * M\\<^sup>t)\n 3. dim_col M * N\\<^sup>t = dim_col (N\\<^sup>t * M\\<^sup>t)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k<dim_row M\\<^sup>t. M $$ (j, k) * N $$ (k, i)) =\n  (\\<Sum>k<dim_row M\\<^sup>t. N $$ (k, i) * M $$ (j, k))\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (N\\<^sup>t * M\\<^sup>t);\n        j < dim_col (N\\<^sup>t * M\\<^sup>t)\\<rbrakk>\n       \\<Longrightarrow> M * N\\<^sup>t $$ (i, j) =\n                         (N\\<^sup>t * M\\<^sup>t) $$ (i, j)\n 2. dim_row M * N\\<^sup>t = dim_row (N\\<^sup>t * M\\<^sup>t)\n 3. dim_col M * N\\<^sup>t = dim_col (N\\<^sup>t * M\\<^sup>t)", "have \"... = (\\<Sum>k<dim_row M\\<^sup>t. ((N\\<^sup>t) $$ (i,k)) * (M\\<^sup>t) $$ (k,j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k<dim_row M\\<^sup>t. N $$ (k, i) * M $$ (j, k)) =\n    (\\<Sum>k<dim_row M\\<^sup>t. N\\<^sup>t $$ (i, k) * M\\<^sup>t $$ (k, j))", "using assms a0 a1"], ["proof (prove)\nusing this:\n  dim_col M = dim_row N\n  i < dim_row (N\\<^sup>t * M\\<^sup>t)\n  j < dim_col (N\\<^sup>t * M\\<^sup>t)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k<dim_row M\\<^sup>t. N $$ (k, i) * M $$ (j, k)) =\n    (\\<Sum>k<dim_row M\\<^sup>t. N\\<^sup>t $$ (i, k) * M\\<^sup>t $$ (k, j))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k<dim_row M\\<^sup>t. N $$ (k, i) * M $$ (j, k)) =\n  (\\<Sum>k<dim_row M\\<^sup>t. N\\<^sup>t $$ (i, k) * M\\<^sup>t $$ (k, j))\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (N\\<^sup>t * M\\<^sup>t);\n        j < dim_col (N\\<^sup>t * M\\<^sup>t)\\<rbrakk>\n       \\<Longrightarrow> M * N\\<^sup>t $$ (i, j) =\n                         (N\\<^sup>t * M\\<^sup>t) $$ (i, j)\n 2. dim_row M * N\\<^sup>t = dim_row (N\\<^sup>t * M\\<^sup>t)\n 3. dim_col M * N\\<^sup>t = dim_col (N\\<^sup>t * M\\<^sup>t)", "finally"], ["proof (chain)\npicking this:\n  M * N\\<^sup>t $$ (i, j) =\n  (\\<Sum>k<dim_row M\\<^sup>t. N\\<^sup>t $$ (i, k) * M\\<^sup>t $$ (k, j))", "show \"((M * N)\\<^sup>t) $$ (i,j) = (N\\<^sup>t * (M\\<^sup>t)) $$ (i,j)\""], ["proof (prove)\nusing this:\n  M * N\\<^sup>t $$ (i, j) =\n  (\\<Sum>k<dim_row M\\<^sup>t. N\\<^sup>t $$ (i, k) * M\\<^sup>t $$ (k, j))\n\ngoal (1 subgoal):\n 1. M * N\\<^sup>t $$ (i, j) = (N\\<^sup>t * M\\<^sup>t) $$ (i, j)", "using assms a0 a1"], ["proof (prove)\nusing this:\n  M * N\\<^sup>t $$ (i, j) =\n  (\\<Sum>k<dim_row M\\<^sup>t. N\\<^sup>t $$ (i, k) * M\\<^sup>t $$ (k, j))\n  dim_col M = dim_row N\n  i < dim_row (N\\<^sup>t * M\\<^sup>t)\n  j < dim_col (N\\<^sup>t * M\\<^sup>t)\n\ngoal (1 subgoal):\n 1. M * N\\<^sup>t $$ (i, j) = (N\\<^sup>t * M\\<^sup>t) $$ (i, j)", "by auto"], ["proof (state)\nthis:\n  M * N\\<^sup>t $$ (i, j) = (N\\<^sup>t * M\\<^sup>t) $$ (i, j)\n\ngoal (2 subgoals):\n 1. dim_row M * N\\<^sup>t = dim_row (N\\<^sup>t * M\\<^sup>t)\n 2. dim_col M * N\\<^sup>t = dim_col (N\\<^sup>t * M\\<^sup>t)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. dim_row M * N\\<^sup>t = dim_row (N\\<^sup>t * M\\<^sup>t)\n 2. dim_col M * N\\<^sup>t = dim_col (N\\<^sup>t * M\\<^sup>t)", "show \"dim_row ((M * N)\\<^sup>t) = dim_row (N\\<^sup>t * (M\\<^sup>t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row M * N\\<^sup>t = dim_row (N\\<^sup>t * M\\<^sup>t)", "by auto"], ["proof (state)\nthis:\n  dim_row M * N\\<^sup>t = dim_row (N\\<^sup>t * M\\<^sup>t)\n\ngoal (1 subgoal):\n 1. dim_col M * N\\<^sup>t = dim_col (N\\<^sup>t * M\\<^sup>t)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. dim_col M * N\\<^sup>t = dim_col (N\\<^sup>t * M\\<^sup>t)", "show \"dim_col ((M * N)\\<^sup>t) = dim_col (N\\<^sup>t * (M\\<^sup>t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col M * N\\<^sup>t = dim_col (N\\<^sup>t * M\\<^sup>t)", "by auto"], ["proof (state)\nthis:\n  dim_col M * N\\<^sup>t = dim_col (N\\<^sup>t * M\\<^sup>t)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma transpose_cnj_is_dagger [simp]:\n  \"(M\\<^sup>t)\\<^sup>\\<star> = (M\\<^sup>\\<dagger>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M\\<^sup>t\\<^sup>\\<star> = M\\<^sup>\\<dagger>", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M\\<^sup>\\<dagger>;\n        j < dim_col M\\<^sup>\\<dagger>\\<rbrakk>\n       \\<Longrightarrow> M\\<^sup>t\\<^sup>\\<star> $$ (i, j) =\n                         M\\<^sup>\\<dagger> $$ (i, j)\n 2. dim_row M\\<^sup>t\\<^sup>\\<star> = dim_row M\\<^sup>\\<dagger>\n 3. dim_col M\\<^sup>t\\<^sup>\\<star> = dim_col M\\<^sup>\\<dagger>", "show f1:\"dim_row ((M\\<^sup>t)\\<^sup>\\<star>) = dim_row (M\\<^sup>\\<dagger>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row M\\<^sup>t\\<^sup>\\<star> = dim_row M\\<^sup>\\<dagger>", "by (simp add: cpx_mat_cnj_def transpose_mat_def dagger_def)"], ["proof (state)\nthis:\n  dim_row M\\<^sup>t\\<^sup>\\<star> = dim_row M\\<^sup>\\<dagger>\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M\\<^sup>\\<dagger>;\n        j < dim_col M\\<^sup>\\<dagger>\\<rbrakk>\n       \\<Longrightarrow> M\\<^sup>t\\<^sup>\\<star> $$ (i, j) =\n                         M\\<^sup>\\<dagger> $$ (i, j)\n 2. dim_col M\\<^sup>t\\<^sup>\\<star> = dim_col M\\<^sup>\\<dagger>", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M\\<^sup>\\<dagger>;\n        j < dim_col M\\<^sup>\\<dagger>\\<rbrakk>\n       \\<Longrightarrow> M\\<^sup>t\\<^sup>\\<star> $$ (i, j) =\n                         M\\<^sup>\\<dagger> $$ (i, j)\n 2. dim_col M\\<^sup>t\\<^sup>\\<star> = dim_col M\\<^sup>\\<dagger>", "show f2:\"dim_col ((M\\<^sup>t)\\<^sup>\\<star>) = dim_col (M\\<^sup>\\<dagger>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col M\\<^sup>t\\<^sup>\\<star> = dim_col M\\<^sup>\\<dagger>", "by (simp add: cpx_mat_cnj_def transpose_mat_def dagger_def)"], ["proof (state)\nthis:\n  dim_col M\\<^sup>t\\<^sup>\\<star> = dim_col M\\<^sup>\\<dagger>\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M\\<^sup>\\<dagger>;\n        j < dim_col M\\<^sup>\\<dagger>\\<rbrakk>\n       \\<Longrightarrow> M\\<^sup>t\\<^sup>\\<star> $$ (i, j) =\n                         M\\<^sup>\\<dagger> $$ (i, j)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M\\<^sup>\\<dagger>;\n        j < dim_col M\\<^sup>\\<dagger>\\<rbrakk>\n       \\<Longrightarrow> M\\<^sup>t\\<^sup>\\<star> $$ (i, j) =\n                         M\\<^sup>\\<dagger> $$ (i, j)", "fix i j::nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M\\<^sup>\\<dagger>;\n        j < dim_col M\\<^sup>\\<dagger>\\<rbrakk>\n       \\<Longrightarrow> M\\<^sup>t\\<^sup>\\<star> $$ (i, j) =\n                         M\\<^sup>\\<dagger> $$ (i, j)", "assume \"i < dim_row M\\<^sup>\\<dagger>\" and \"j < dim_col M\\<^sup>\\<dagger>\""], ["proof (state)\nthis:\n  i < dim_row M\\<^sup>\\<dagger>\n  j < dim_col M\\<^sup>\\<dagger>\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M\\<^sup>\\<dagger>;\n        j < dim_col M\\<^sup>\\<dagger>\\<rbrakk>\n       \\<Longrightarrow> M\\<^sup>t\\<^sup>\\<star> $$ (i, j) =\n                         M\\<^sup>\\<dagger> $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i < dim_row M\\<^sup>\\<dagger>\n  j < dim_col M\\<^sup>\\<dagger>", "show \"M\\<^sup>t\\<^sup>\\<star> $$ (i, j) = M\\<^sup>\\<dagger> $$ (i, j)\""], ["proof (prove)\nusing this:\n  i < dim_row M\\<^sup>\\<dagger>\n  j < dim_col M\\<^sup>\\<dagger>\n\ngoal (1 subgoal):\n 1. M\\<^sup>t\\<^sup>\\<star> $$ (i, j) = M\\<^sup>\\<dagger> $$ (i, j)", "by (simp add: cpx_mat_cnj_def transpose_mat_def dagger_def)"], ["proof (state)\nthis:\n  M\\<^sup>t\\<^sup>\\<star> $$ (i, j) = M\\<^sup>\\<dagger> $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cnj_transpose_is_dagger [simp]:\n  \"(M\\<^sup>\\<star>)\\<^sup>t = (M\\<^sup>\\<dagger>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M\\<^sup>\\<star>\\<^sup>t = M\\<^sup>\\<dagger>", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M\\<^sup>\\<dagger>;\n        j < dim_col M\\<^sup>\\<dagger>\\<rbrakk>\n       \\<Longrightarrow> M\\<^sup>\\<star>\\<^sup>t $$ (i, j) =\n                         M\\<^sup>\\<dagger> $$ (i, j)\n 2. dim_row M\\<^sup>\\<star>\\<^sup>t = dim_row M\\<^sup>\\<dagger>\n 3. dim_col M\\<^sup>\\<star>\\<^sup>t = dim_col M\\<^sup>\\<dagger>", "show \"dim_row ((M\\<^sup>\\<star>)\\<^sup>t) = dim_row (M\\<^sup>\\<dagger>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row M\\<^sup>\\<star>\\<^sup>t = dim_row M\\<^sup>\\<dagger>", "by (simp add: transpose_mat_def cpx_mat_cnj_def dagger_def)"], ["proof (state)\nthis:\n  dim_row M\\<^sup>\\<star>\\<^sup>t = dim_row M\\<^sup>\\<dagger>\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M\\<^sup>\\<dagger>;\n        j < dim_col M\\<^sup>\\<dagger>\\<rbrakk>\n       \\<Longrightarrow> M\\<^sup>\\<star>\\<^sup>t $$ (i, j) =\n                         M\\<^sup>\\<dagger> $$ (i, j)\n 2. dim_col M\\<^sup>\\<star>\\<^sup>t = dim_col M\\<^sup>\\<dagger>", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M\\<^sup>\\<dagger>;\n        j < dim_col M\\<^sup>\\<dagger>\\<rbrakk>\n       \\<Longrightarrow> M\\<^sup>\\<star>\\<^sup>t $$ (i, j) =\n                         M\\<^sup>\\<dagger> $$ (i, j)\n 2. dim_col M\\<^sup>\\<star>\\<^sup>t = dim_col M\\<^sup>\\<dagger>", "show \"dim_col ((M\\<^sup>\\<star>)\\<^sup>t) = dim_col (M\\<^sup>\\<dagger>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col M\\<^sup>\\<star>\\<^sup>t = dim_col M\\<^sup>\\<dagger>", "by (simp add: transpose_mat_def cpx_mat_cnj_def dagger_def)"], ["proof (state)\nthis:\n  dim_col M\\<^sup>\\<star>\\<^sup>t = dim_col M\\<^sup>\\<dagger>\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M\\<^sup>\\<dagger>;\n        j < dim_col M\\<^sup>\\<dagger>\\<rbrakk>\n       \\<Longrightarrow> M\\<^sup>\\<star>\\<^sup>t $$ (i, j) =\n                         M\\<^sup>\\<dagger> $$ (i, j)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M\\<^sup>\\<dagger>;\n        j < dim_col M\\<^sup>\\<dagger>\\<rbrakk>\n       \\<Longrightarrow> M\\<^sup>\\<star>\\<^sup>t $$ (i, j) =\n                         M\\<^sup>\\<dagger> $$ (i, j)", "fix i j::nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M\\<^sup>\\<dagger>;\n        j < dim_col M\\<^sup>\\<dagger>\\<rbrakk>\n       \\<Longrightarrow> M\\<^sup>\\<star>\\<^sup>t $$ (i, j) =\n                         M\\<^sup>\\<dagger> $$ (i, j)", "assume \"i < dim_row M\\<^sup>\\<dagger>\" and \"j < dim_col M\\<^sup>\\<dagger>\""], ["proof (state)\nthis:\n  i < dim_row M\\<^sup>\\<dagger>\n  j < dim_col M\\<^sup>\\<dagger>\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M\\<^sup>\\<dagger>;\n        j < dim_col M\\<^sup>\\<dagger>\\<rbrakk>\n       \\<Longrightarrow> M\\<^sup>\\<star>\\<^sup>t $$ (i, j) =\n                         M\\<^sup>\\<dagger> $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i < dim_row M\\<^sup>\\<dagger>\n  j < dim_col M\\<^sup>\\<dagger>", "show \"M\\<^sup>\\<star>\\<^sup>t $$ (i, j) = M\\<^sup>\\<dagger> $$ (i, j)\""], ["proof (prove)\nusing this:\n  i < dim_row M\\<^sup>\\<dagger>\n  j < dim_col M\\<^sup>\\<dagger>\n\ngoal (1 subgoal):\n 1. M\\<^sup>\\<star>\\<^sup>t $$ (i, j) = M\\<^sup>\\<dagger> $$ (i, j)", "by (simp add: transpose_mat_def cpx_mat_cnj_def dagger_def)"], ["proof (state)\nthis:\n  M\\<^sup>\\<star>\\<^sup>t $$ (i, j) = M\\<^sup>\\<dagger> $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dagger_of_transpose_is_cnj [simp]:\n  \"(M\\<^sup>t)\\<^sup>\\<dagger> = (M\\<^sup>\\<star>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M\\<^sup>t\\<^sup>\\<dagger> = M\\<^sup>\\<star>", "by (metis transpose_transpose transpose_cnj_is_dagger)"], ["", "lemma dagger_of_prod:\n  fixes M N::\"complex Matrix.mat\"\n  assumes \"dim_col M = dim_row N\"\n  shows \"(M * N)\\<^sup>\\<dagger> = N\\<^sup>\\<dagger> * (M\\<^sup>\\<dagger>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M * N\\<^sup>\\<dagger> = N\\<^sup>\\<dagger> * M\\<^sup>\\<dagger>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. M * N\\<^sup>\\<dagger> = N\\<^sup>\\<dagger> * M\\<^sup>\\<dagger>", "have \"(M * N)\\<^sup>\\<dagger> = ((M * N)\\<^sup>\\<star>)\\<^sup>t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M * N\\<^sup>\\<dagger> = M * N\\<^sup>\\<star>\\<^sup>t", "by auto"], ["proof (state)\nthis:\n  M * N\\<^sup>\\<dagger> = M * N\\<^sup>\\<star>\\<^sup>t\n\ngoal (1 subgoal):\n 1. M * N\\<^sup>\\<dagger> = N\\<^sup>\\<dagger> * M\\<^sup>\\<dagger>", "also"], ["proof (state)\nthis:\n  M * N\\<^sup>\\<dagger> = M * N\\<^sup>\\<star>\\<^sup>t\n\ngoal (1 subgoal):\n 1. M * N\\<^sup>\\<dagger> = N\\<^sup>\\<dagger> * M\\<^sup>\\<dagger>", "have \"... = ((M\\<^sup>\\<star>) * (N\\<^sup>\\<star>))\\<^sup>t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M * N\\<^sup>\\<star>\\<^sup>t = M\\<^sup>\\<star> * N\\<^sup>\\<star>\\<^sup>t", "using assms cpx_mat_cnj_prod"], ["proof (prove)\nusing this:\n  dim_col M = dim_row N\n  dim_col ?M = dim_row ?N \\<Longrightarrow>\n  ?M * ?N\\<^sup>\\<star> = ?M\\<^sup>\\<star> * ?N\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. M * N\\<^sup>\\<star>\\<^sup>t = M\\<^sup>\\<star> * N\\<^sup>\\<star>\\<^sup>t", "by auto"], ["proof (state)\nthis:\n  M * N\\<^sup>\\<star>\\<^sup>t = M\\<^sup>\\<star> * N\\<^sup>\\<star>\\<^sup>t\n\ngoal (1 subgoal):\n 1. M * N\\<^sup>\\<dagger> = N\\<^sup>\\<dagger> * M\\<^sup>\\<dagger>", "also"], ["proof (state)\nthis:\n  M * N\\<^sup>\\<star>\\<^sup>t = M\\<^sup>\\<star> * N\\<^sup>\\<star>\\<^sup>t\n\ngoal (1 subgoal):\n 1. M * N\\<^sup>\\<dagger> = N\\<^sup>\\<dagger> * M\\<^sup>\\<dagger>", "have \"... = (N\\<^sup>\\<star>)\\<^sup>t * ((M\\<^sup>\\<star>)\\<^sup>t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M\\<^sup>\\<star> * N\\<^sup>\\<star>\\<^sup>t =\n    N\\<^sup>\\<star>\\<^sup>t * M\\<^sup>\\<star>\\<^sup>t", "using assms transpose_of_prod"], ["proof (prove)\nusing this:\n  dim_col M = dim_row N\n  dim_col ?M = dim_row ?N \\<Longrightarrow>\n  ?M * ?N\\<^sup>t = ?N\\<^sup>t * ?M\\<^sup>t\n\ngoal (1 subgoal):\n 1. M\\<^sup>\\<star> * N\\<^sup>\\<star>\\<^sup>t =\n    N\\<^sup>\\<star>\\<^sup>t * M\\<^sup>\\<star>\\<^sup>t", "by (metis cnj_transpose_is_dagger dim_col_of_dagger dim_row_of_dagger index_transpose_mat(2) index_transpose_mat(3))"], ["proof (state)\nthis:\n  M\\<^sup>\\<star> * N\\<^sup>\\<star>\\<^sup>t =\n  N\\<^sup>\\<star>\\<^sup>t * M\\<^sup>\\<star>\\<^sup>t\n\ngoal (1 subgoal):\n 1. M * N\\<^sup>\\<dagger> = N\\<^sup>\\<dagger> * M\\<^sup>\\<dagger>", "finally"], ["proof (chain)\npicking this:\n  M * N\\<^sup>\\<dagger> = N\\<^sup>\\<star>\\<^sup>t * M\\<^sup>\\<star>\\<^sup>t", "show \"(M * N)\\<^sup>\\<dagger> = N\\<^sup>\\<dagger> * (M\\<^sup>\\<dagger>)\""], ["proof (prove)\nusing this:\n  M * N\\<^sup>\\<dagger> = N\\<^sup>\\<star>\\<^sup>t * M\\<^sup>\\<star>\\<^sup>t\n\ngoal (1 subgoal):\n 1. M * N\\<^sup>\\<dagger> = N\\<^sup>\\<dagger> * M\\<^sup>\\<dagger>", "by auto"], ["proof (state)\nthis:\n  M * N\\<^sup>\\<dagger> = N\\<^sup>\\<dagger> * M\\<^sup>\\<dagger>\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The product of two quantum gates is a quantum gate.\\<close>"], ["", "lemma prod_of_gate_is_gate: \n  assumes \"gate n G1\" and \"gate n G2\"\n  shows \"gate n (G1 * G2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gate n (G1 * G2)", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. dim_row (G1 * G2) = 2 ^ n\n 2. square_mat (G1 * G2)\n 3. unitary (G1 * G2)", "show \"dim_row (G1 * G2) = 2^n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row (G1 * G2) = 2 ^ n", "using assms"], ["proof (prove)\nusing this:\n  gate n G1\n  gate n G2\n\ngoal (1 subgoal):\n 1. dim_row (G1 * G2) = 2 ^ n", "by (simp add: gate_def)"], ["proof (state)\nthis:\n  dim_row (G1 * G2) = 2 ^ n\n\ngoal (2 subgoals):\n 1. square_mat (G1 * G2)\n 2. unitary (G1 * G2)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. square_mat (G1 * G2)\n 2. unitary (G1 * G2)", "show \"square_mat (G1 * G2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. square_mat (G1 * G2)", "using assms gate.dim_row gate.square_mat"], ["proof (prove)\nusing this:\n  gate n G1\n  gate n G2\n  gate ?n ?A \\<Longrightarrow> dim_row ?A = 2 ^ ?n\n  gate ?n ?A \\<Longrightarrow> square_mat ?A\n\ngoal (1 subgoal):\n 1. square_mat (G1 * G2)", "by simp"], ["proof (state)\nthis:\n  square_mat (G1 * G2)\n\ngoal (1 subgoal):\n 1. unitary (G1 * G2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. unitary (G1 * G2)", "show \"unitary (G1 * G2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unitary (G1 * G2)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. unitary (G1 * G2)", "have \"((G1 * G2)\\<^sup>\\<dagger>) * (G1 * G2) = 1\\<^sub>m (dim_col (G1 * G2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G1 * G2\\<^sup>\\<dagger> * (G1 * G2) = 1\\<^sub>m (dim_col (G1 * G2))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. G1 * G2\\<^sup>\\<dagger> * (G1 * G2) = 1\\<^sub>m (dim_col (G1 * G2))", "have f0: \"G1 \\<in> carrier_mat (2^n) (2^n) \\<and> G2 \\<in> carrier_mat (2^n) (2^n)\n              \\<and> G1\\<^sup>\\<dagger> \\<in> carrier_mat (2^n) (2^n) \\<and> G2\\<^sup>\\<dagger> \\<in> carrier_mat (2^n) (2^n)\n              \\<and> G1 * G2 \\<in> carrier_mat (2^n) (2^n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G1 \\<in> carrier_mat (2 ^ n) (2 ^ n) \\<and>\n    G2 \\<in> carrier_mat (2 ^ n) (2 ^ n) \\<and>\n    G1\\<^sup>\\<dagger> \\<in> carrier_mat (2 ^ n) (2 ^ n) \\<and>\n    G2\\<^sup>\\<dagger> \\<in> carrier_mat (2 ^ n) (2 ^ n) \\<and>\n    G1 * G2 \\<in> carrier_mat (2 ^ n) (2 ^ n)", "using assms gate.dim_row gate.square_mat"], ["proof (prove)\nusing this:\n  gate n G1\n  gate n G2\n  gate ?n ?A \\<Longrightarrow> dim_row ?A = 2 ^ ?n\n  gate ?n ?A \\<Longrightarrow> square_mat ?A\n\ngoal (1 subgoal):\n 1. G1 \\<in> carrier_mat (2 ^ n) (2 ^ n) \\<and>\n    G2 \\<in> carrier_mat (2 ^ n) (2 ^ n) \\<and>\n    G1\\<^sup>\\<dagger> \\<in> carrier_mat (2 ^ n) (2 ^ n) \\<and>\n    G2\\<^sup>\\<dagger> \\<in> carrier_mat (2 ^ n) (2 ^ n) \\<and>\n    G1 * G2 \\<in> carrier_mat (2 ^ n) (2 ^ n)", "by auto"], ["proof (state)\nthis:\n  G1 \\<in> carrier_mat (2 ^ n) (2 ^ n) \\<and>\n  G2 \\<in> carrier_mat (2 ^ n) (2 ^ n) \\<and>\n  G1\\<^sup>\\<dagger> \\<in> carrier_mat (2 ^ n) (2 ^ n) \\<and>\n  G2\\<^sup>\\<dagger> \\<in> carrier_mat (2 ^ n) (2 ^ n) \\<and>\n  G1 * G2 \\<in> carrier_mat (2 ^ n) (2 ^ n)\n\ngoal (1 subgoal):\n 1. G1 * G2\\<^sup>\\<dagger> * (G1 * G2) = 1\\<^sub>m (dim_col (G1 * G2))", "have \"((G1 * G2)\\<^sup>\\<dagger>) * (G1 * G2) = ((G2\\<^sup>\\<dagger>) * (G1\\<^sup>\\<dagger>)) * (G1 * G2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G1 * G2\\<^sup>\\<dagger> * (G1 * G2) =\n    G2\\<^sup>\\<dagger> * G1\\<^sup>\\<dagger> * (G1 * G2)", "using assms dagger_of_prod gate.dim_row gate.square_mat"], ["proof (prove)\nusing this:\n  gate n G1\n  gate n G2\n  dim_col ?M = dim_row ?N \\<Longrightarrow>\n  ?M * ?N\\<^sup>\\<dagger> = ?N\\<^sup>\\<dagger> * ?M\\<^sup>\\<dagger>\n  gate ?n ?A \\<Longrightarrow> dim_row ?A = 2 ^ ?n\n  gate ?n ?A \\<Longrightarrow> square_mat ?A\n\ngoal (1 subgoal):\n 1. G1 * G2\\<^sup>\\<dagger> * (G1 * G2) =\n    G2\\<^sup>\\<dagger> * G1\\<^sup>\\<dagger> * (G1 * G2)", "by simp"], ["proof (state)\nthis:\n  G1 * G2\\<^sup>\\<dagger> * (G1 * G2) =\n  G2\\<^sup>\\<dagger> * G1\\<^sup>\\<dagger> * (G1 * G2)\n\ngoal (1 subgoal):\n 1. G1 * G2\\<^sup>\\<dagger> * (G1 * G2) = 1\\<^sub>m (dim_col (G1 * G2))", "also"], ["proof (state)\nthis:\n  G1 * G2\\<^sup>\\<dagger> * (G1 * G2) =\n  G2\\<^sup>\\<dagger> * G1\\<^sup>\\<dagger> * (G1 * G2)\n\ngoal (1 subgoal):\n 1. G1 * G2\\<^sup>\\<dagger> * (G1 * G2) = 1\\<^sub>m (dim_col (G1 * G2))", "have \"... = (G2\\<^sup>\\<dagger>) * ((G1\\<^sup>\\<dagger>) * (G1 * G2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G2\\<^sup>\\<dagger> * G1\\<^sup>\\<dagger> * (G1 * G2) =\n    G2\\<^sup>\\<dagger> * (G1\\<^sup>\\<dagger> * (G1 * G2))", "using assms f0"], ["proof (prove)\nusing this:\n  gate n G1\n  gate n G2\n  G1 \\<in> carrier_mat (2 ^ n) (2 ^ n) \\<and>\n  G2 \\<in> carrier_mat (2 ^ n) (2 ^ n) \\<and>\n  G1\\<^sup>\\<dagger> \\<in> carrier_mat (2 ^ n) (2 ^ n) \\<and>\n  G2\\<^sup>\\<dagger> \\<in> carrier_mat (2 ^ n) (2 ^ n) \\<and>\n  G1 * G2 \\<in> carrier_mat (2 ^ n) (2 ^ n)\n\ngoal (1 subgoal):\n 1. G2\\<^sup>\\<dagger> * G1\\<^sup>\\<dagger> * (G1 * G2) =\n    G2\\<^sup>\\<dagger> * (G1\\<^sup>\\<dagger> * (G1 * G2))", "by auto"], ["proof (state)\nthis:\n  G2\\<^sup>\\<dagger> * G1\\<^sup>\\<dagger> * (G1 * G2) =\n  G2\\<^sup>\\<dagger> * (G1\\<^sup>\\<dagger> * (G1 * G2))\n\ngoal (1 subgoal):\n 1. G1 * G2\\<^sup>\\<dagger> * (G1 * G2) = 1\\<^sub>m (dim_col (G1 * G2))", "also"], ["proof (state)\nthis:\n  G2\\<^sup>\\<dagger> * G1\\<^sup>\\<dagger> * (G1 * G2) =\n  G2\\<^sup>\\<dagger> * (G1\\<^sup>\\<dagger> * (G1 * G2))\n\ngoal (1 subgoal):\n 1. G1 * G2\\<^sup>\\<dagger> * (G1 * G2) = 1\\<^sub>m (dim_col (G1 * G2))", "have \"... = (G2\\<^sup>\\<dagger>) * (((G1\\<^sup>\\<dagger>) * G1) * G2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G2\\<^sup>\\<dagger> * (G1\\<^sup>\\<dagger> * (G1 * G2)) =\n    G2\\<^sup>\\<dagger> * (G1\\<^sup>\\<dagger> * G1 * G2)", "using assms f0 f0"], ["proof (prove)\nusing this:\n  gate n G1\n  gate n G2\n  G1 \\<in> carrier_mat (2 ^ n) (2 ^ n) \\<and>\n  G2 \\<in> carrier_mat (2 ^ n) (2 ^ n) \\<and>\n  G1\\<^sup>\\<dagger> \\<in> carrier_mat (2 ^ n) (2 ^ n) \\<and>\n  G2\\<^sup>\\<dagger> \\<in> carrier_mat (2 ^ n) (2 ^ n) \\<and>\n  G1 * G2 \\<in> carrier_mat (2 ^ n) (2 ^ n)\n  G1 \\<in> carrier_mat (2 ^ n) (2 ^ n) \\<and>\n  G2 \\<in> carrier_mat (2 ^ n) (2 ^ n) \\<and>\n  G1\\<^sup>\\<dagger> \\<in> carrier_mat (2 ^ n) (2 ^ n) \\<and>\n  G2\\<^sup>\\<dagger> \\<in> carrier_mat (2 ^ n) (2 ^ n) \\<and>\n  G1 * G2 \\<in> carrier_mat (2 ^ n) (2 ^ n)\n\ngoal (1 subgoal):\n 1. G2\\<^sup>\\<dagger> * (G1\\<^sup>\\<dagger> * (G1 * G2)) =\n    G2\\<^sup>\\<dagger> * (G1\\<^sup>\\<dagger> * G1 * G2)", "by auto"], ["proof (state)\nthis:\n  G2\\<^sup>\\<dagger> * (G1\\<^sup>\\<dagger> * (G1 * G2)) =\n  G2\\<^sup>\\<dagger> * (G1\\<^sup>\\<dagger> * G1 * G2)\n\ngoal (1 subgoal):\n 1. G1 * G2\\<^sup>\\<dagger> * (G1 * G2) = 1\\<^sub>m (dim_col (G1 * G2))", "also"], ["proof (state)\nthis:\n  G2\\<^sup>\\<dagger> * (G1\\<^sup>\\<dagger> * (G1 * G2)) =\n  G2\\<^sup>\\<dagger> * (G1\\<^sup>\\<dagger> * G1 * G2)\n\ngoal (1 subgoal):\n 1. G1 * G2\\<^sup>\\<dagger> * (G1 * G2) = 1\\<^sub>m (dim_col (G1 * G2))", "have \"... = (G2\\<^sup>\\<dagger>) * ((1\\<^sub>m (dim_col G1)) * G2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G2\\<^sup>\\<dagger> * (G1\\<^sup>\\<dagger> * G1 * G2) =\n    G2\\<^sup>\\<dagger> * (1\\<^sub>m (dim_col G1) * G2)", "using gate.unitary[of n G1] assms unitary_def[of G1]"], ["proof (prove)\nusing this:\n  gate n G1 \\<Longrightarrow> unitary G1\n  gate n G1\n  gate n G2\n  unitary G1 \\<equiv>\n  G1\\<^sup>\\<dagger> * G1 = 1\\<^sub>m (dim_col G1) \\<and>\n  G1 * G1\\<^sup>\\<dagger> = 1\\<^sub>m (dim_row G1)\n\ngoal (1 subgoal):\n 1. G2\\<^sup>\\<dagger> * (G1\\<^sup>\\<dagger> * G1 * G2) =\n    G2\\<^sup>\\<dagger> * (1\\<^sub>m (dim_col G1) * G2)", "by simp"], ["proof (state)\nthis:\n  G2\\<^sup>\\<dagger> * (G1\\<^sup>\\<dagger> * G1 * G2) =\n  G2\\<^sup>\\<dagger> * (1\\<^sub>m (dim_col G1) * G2)\n\ngoal (1 subgoal):\n 1. G1 * G2\\<^sup>\\<dagger> * (G1 * G2) = 1\\<^sub>m (dim_col (G1 * G2))", "also"], ["proof (state)\nthis:\n  G2\\<^sup>\\<dagger> * (G1\\<^sup>\\<dagger> * G1 * G2) =\n  G2\\<^sup>\\<dagger> * (1\\<^sub>m (dim_col G1) * G2)\n\ngoal (1 subgoal):\n 1. G1 * G2\\<^sup>\\<dagger> * (G1 * G2) = 1\\<^sub>m (dim_col (G1 * G2))", "have \"... = (G2\\<^sup>\\<dagger>) * ((1\\<^sub>m (dim_col G2)) * G2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G2\\<^sup>\\<dagger> * (1\\<^sub>m (dim_col G1) * G2) =\n    G2\\<^sup>\\<dagger> * (1\\<^sub>m (dim_col G2) * G2)", "using assms f0"], ["proof (prove)\nusing this:\n  gate n G1\n  gate n G2\n  G1 \\<in> carrier_mat (2 ^ n) (2 ^ n) \\<and>\n  G2 \\<in> carrier_mat (2 ^ n) (2 ^ n) \\<and>\n  G1\\<^sup>\\<dagger> \\<in> carrier_mat (2 ^ n) (2 ^ n) \\<and>\n  G2\\<^sup>\\<dagger> \\<in> carrier_mat (2 ^ n) (2 ^ n) \\<and>\n  G1 * G2 \\<in> carrier_mat (2 ^ n) (2 ^ n)\n\ngoal (1 subgoal):\n 1. G2\\<^sup>\\<dagger> * (1\\<^sub>m (dim_col G1) * G2) =\n    G2\\<^sup>\\<dagger> * (1\\<^sub>m (dim_col G2) * G2)", "by (metis carrier_matD(2))"], ["proof (state)\nthis:\n  G2\\<^sup>\\<dagger> * (1\\<^sub>m (dim_col G1) * G2) =\n  G2\\<^sup>\\<dagger> * (1\\<^sub>m (dim_col G2) * G2)\n\ngoal (1 subgoal):\n 1. G1 * G2\\<^sup>\\<dagger> * (G1 * G2) = 1\\<^sub>m (dim_col (G1 * G2))", "also"], ["proof (state)\nthis:\n  G2\\<^sup>\\<dagger> * (1\\<^sub>m (dim_col G1) * G2) =\n  G2\\<^sup>\\<dagger> * (1\\<^sub>m (dim_col G2) * G2)\n\ngoal (1 subgoal):\n 1. G1 * G2\\<^sup>\\<dagger> * (G1 * G2) = 1\\<^sub>m (dim_col (G1 * G2))", "have \"... = (G2\\<^sup>\\<dagger>) * G2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G2\\<^sup>\\<dagger> * (1\\<^sub>m (dim_col G2) * G2) =\n    G2\\<^sup>\\<dagger> * G2", "using f0"], ["proof (prove)\nusing this:\n  G1 \\<in> carrier_mat (2 ^ n) (2 ^ n) \\<and>\n  G2 \\<in> carrier_mat (2 ^ n) (2 ^ n) \\<and>\n  G1\\<^sup>\\<dagger> \\<in> carrier_mat (2 ^ n) (2 ^ n) \\<and>\n  G2\\<^sup>\\<dagger> \\<in> carrier_mat (2 ^ n) (2 ^ n) \\<and>\n  G1 * G2 \\<in> carrier_mat (2 ^ n) (2 ^ n)\n\ngoal (1 subgoal):\n 1. G2\\<^sup>\\<dagger> * (1\\<^sub>m (dim_col G2) * G2) =\n    G2\\<^sup>\\<dagger> * G2", "by (metis carrier_matD(2) left_mult_one_mat)"], ["proof (state)\nthis:\n  G2\\<^sup>\\<dagger> * (1\\<^sub>m (dim_col G2) * G2) =\n  G2\\<^sup>\\<dagger> * G2\n\ngoal (1 subgoal):\n 1. G1 * G2\\<^sup>\\<dagger> * (G1 * G2) = 1\\<^sub>m (dim_col (G1 * G2))", "finally"], ["proof (chain)\npicking this:\n  G1 * G2\\<^sup>\\<dagger> * (G1 * G2) = G2\\<^sup>\\<dagger> * G2", "show \"((G1 * G2)\\<^sup>\\<dagger>) * (G1 * G2) = 1\\<^sub>m (dim_col (G1 * G2))\""], ["proof (prove)\nusing this:\n  G1 * G2\\<^sup>\\<dagger> * (G1 * G2) = G2\\<^sup>\\<dagger> * G2\n\ngoal (1 subgoal):\n 1. G1 * G2\\<^sup>\\<dagger> * (G1 * G2) = 1\\<^sub>m (dim_col (G1 * G2))", "using assms gate.unitary unitary_def"], ["proof (prove)\nusing this:\n  G1 * G2\\<^sup>\\<dagger> * (G1 * G2) = G2\\<^sup>\\<dagger> * G2\n  gate n G1\n  gate n G2\n  gate ?n ?A \\<Longrightarrow> unitary ?A\n  unitary ?M \\<equiv>\n  ?M\\<^sup>\\<dagger> * ?M = 1\\<^sub>m (dim_col ?M) \\<and>\n  ?M * ?M\\<^sup>\\<dagger> = 1\\<^sub>m (dim_row ?M)\n\ngoal (1 subgoal):\n 1. G1 * G2\\<^sup>\\<dagger> * (G1 * G2) = 1\\<^sub>m (dim_col (G1 * G2))", "by simp"], ["proof (state)\nthis:\n  G1 * G2\\<^sup>\\<dagger> * (G1 * G2) = 1\\<^sub>m (dim_col (G1 * G2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  G1 * G2\\<^sup>\\<dagger> * (G1 * G2) = 1\\<^sub>m (dim_col (G1 * G2))\n\ngoal (1 subgoal):\n 1. unitary (G1 * G2)", "moreover"], ["proof (state)\nthis:\n  G1 * G2\\<^sup>\\<dagger> * (G1 * G2) = 1\\<^sub>m (dim_col (G1 * G2))\n\ngoal (1 subgoal):\n 1. unitary (G1 * G2)", "have \"(G1 * G2) * ((G1 * G2)\\<^sup>\\<dagger>) = 1\\<^sub>m (dim_row (G1 * G2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G1 * G2 * G1 * G2\\<^sup>\\<dagger> = 1\\<^sub>m (dim_row (G1 * G2))", "using assms calculation"], ["proof (prove)\nusing this:\n  gate n G1\n  gate n G2\n  G1 * G2\\<^sup>\\<dagger> * (G1 * G2) = 1\\<^sub>m (dim_col (G1 * G2))\n\ngoal (1 subgoal):\n 1. G1 * G2 * G1 * G2\\<^sup>\\<dagger> = 1\\<^sub>m (dim_row (G1 * G2))", "by (smt carrier_matI dim_col_of_dagger dim_row_of_dagger gate.dim_row gate.square_mat index_mult_mat(2) index_mult_mat(3) \n          mat_mult_left_right_inverse square_mat.elims(2))"], ["proof (state)\nthis:\n  G1 * G2 * G1 * G2\\<^sup>\\<dagger> = 1\\<^sub>m (dim_row (G1 * G2))\n\ngoal (1 subgoal):\n 1. unitary (G1 * G2)", "ultimately"], ["proof (chain)\npicking this:\n  G1 * G2\\<^sup>\\<dagger> * (G1 * G2) = 1\\<^sub>m (dim_col (G1 * G2))\n  G1 * G2 * G1 * G2\\<^sup>\\<dagger> = 1\\<^sub>m (dim_row (G1 * G2))", "show ?thesis"], ["proof (prove)\nusing this:\n  G1 * G2\\<^sup>\\<dagger> * (G1 * G2) = 1\\<^sub>m (dim_col (G1 * G2))\n  G1 * G2 * G1 * G2\\<^sup>\\<dagger> = 1\\<^sub>m (dim_row (G1 * G2))\n\ngoal (1 subgoal):\n 1. unitary (G1 * G2)", "using unitary_def"], ["proof (prove)\nusing this:\n  G1 * G2\\<^sup>\\<dagger> * (G1 * G2) = 1\\<^sub>m (dim_col (G1 * G2))\n  G1 * G2 * G1 * G2\\<^sup>\\<dagger> = 1\\<^sub>m (dim_row (G1 * G2))\n  unitary ?M \\<equiv>\n  ?M\\<^sup>\\<dagger> * ?M = 1\\<^sub>m (dim_col ?M) \\<and>\n  ?M * ?M\\<^sup>\\<dagger> = 1\\<^sub>m (dim_row ?M)\n\ngoal (1 subgoal):\n 1. unitary (G1 * G2)", "by simp"], ["proof (state)\nthis:\n  unitary (G1 * G2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  unitary (G1 * G2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma left_inv_of_unitary_transpose [simp]:\n  assumes \"unitary U\"\n  shows \"(U\\<^sup>t)\\<^sup>\\<dagger> * (U\\<^sup>t) =  1\\<^sub>m(dim_row U)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U\\<^sup>t\\<^sup>\\<dagger> * U\\<^sup>t = 1\\<^sub>m (dim_row U)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. U\\<^sup>t\\<^sup>\\<dagger> * U\\<^sup>t = 1\\<^sub>m (dim_row U)", "have \"dim_col U = dim_row ((U\\<^sup>t)\\<^sup>\\<star>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col U = dim_row U\\<^sup>t\\<^sup>\\<star>", "by simp"], ["proof (state)\nthis:\n  dim_col U = dim_row U\\<^sup>t\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. U\\<^sup>t\\<^sup>\\<dagger> * U\\<^sup>t = 1\\<^sub>m (dim_row U)", "then"], ["proof (chain)\npicking this:\n  dim_col U = dim_row U\\<^sup>t\\<^sup>\\<star>", "have \"(U * ((U\\<^sup>t)\\<^sup>\\<star>))\\<^sup>\\<star> = (U\\<^sup>\\<star>) * (U\\<^sup>t)\""], ["proof (prove)\nusing this:\n  dim_col U = dim_row U\\<^sup>t\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. U * U\\<^sup>t\\<^sup>\\<star>\\<^sup>\\<star> = U\\<^sup>\\<star> * U\\<^sup>t", "using cpx_mat_cnj_prod cpx_mat_cnj_cnj"], ["proof (prove)\nusing this:\n  dim_col U = dim_row U\\<^sup>t\\<^sup>\\<star>\n  dim_col ?M = dim_row ?N \\<Longrightarrow>\n  ?M * ?N\\<^sup>\\<star> = ?M\\<^sup>\\<star> * ?N\\<^sup>\\<star>\n  ?M\\<^sup>\\<star>\\<^sup>\\<star> = ?M\n\ngoal (1 subgoal):\n 1. U * U\\<^sup>t\\<^sup>\\<star>\\<^sup>\\<star> = U\\<^sup>\\<star> * U\\<^sup>t", "by presburger"], ["proof (state)\nthis:\n  U * U\\<^sup>t\\<^sup>\\<star>\\<^sup>\\<star> = U\\<^sup>\\<star> * U\\<^sup>t\n\ngoal (1 subgoal):\n 1. U\\<^sup>t\\<^sup>\\<dagger> * U\\<^sup>t = 1\\<^sub>m (dim_row U)", "also"], ["proof (state)\nthis:\n  U * U\\<^sup>t\\<^sup>\\<star>\\<^sup>\\<star> = U\\<^sup>\\<star> * U\\<^sup>t\n\ngoal (1 subgoal):\n 1. U\\<^sup>t\\<^sup>\\<dagger> * U\\<^sup>t = 1\\<^sub>m (dim_row U)", "have \"\\<dots> = (U\\<^sup>t)\\<^sup>\\<dagger> * (U\\<^sup>t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U\\<^sup>\\<star> * U\\<^sup>t = U\\<^sup>t\\<^sup>\\<dagger> * U\\<^sup>t", "by simp"], ["proof (state)\nthis:\n  U\\<^sup>\\<star> * U\\<^sup>t = U\\<^sup>t\\<^sup>\\<dagger> * U\\<^sup>t\n\ngoal (1 subgoal):\n 1. U\\<^sup>t\\<^sup>\\<dagger> * U\\<^sup>t = 1\\<^sub>m (dim_row U)", "finally"], ["proof (chain)\npicking this:\n  U * U\\<^sup>t\\<^sup>\\<star>\\<^sup>\\<star> =\n  U\\<^sup>t\\<^sup>\\<dagger> * U\\<^sup>t", "show ?thesis"], ["proof (prove)\nusing this:\n  U * U\\<^sup>t\\<^sup>\\<star>\\<^sup>\\<star> =\n  U\\<^sup>t\\<^sup>\\<dagger> * U\\<^sup>t\n\ngoal (1 subgoal):\n 1. U\\<^sup>t\\<^sup>\\<dagger> * U\\<^sup>t = 1\\<^sub>m (dim_row U)", "using assms"], ["proof (prove)\nusing this:\n  U * U\\<^sup>t\\<^sup>\\<star>\\<^sup>\\<star> =\n  U\\<^sup>t\\<^sup>\\<dagger> * U\\<^sup>t\n  unitary U\n\ngoal (1 subgoal):\n 1. U\\<^sup>t\\<^sup>\\<dagger> * U\\<^sup>t = 1\\<^sub>m (dim_row U)", "by (metis transpose_cnj_is_dagger cpx_mat_cnj_id unitary_def)"], ["proof (state)\nthis:\n  U\\<^sup>t\\<^sup>\\<dagger> * U\\<^sup>t = 1\\<^sub>m (dim_row U)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma right_inv_of_unitary_transpose [simp]:\n  assumes \"unitary U\"\n  shows \"U\\<^sup>t * ((U\\<^sup>t)\\<^sup>\\<dagger>) = 1\\<^sub>m(dim_col U)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U\\<^sup>t * U\\<^sup>t\\<^sup>\\<dagger> = 1\\<^sub>m (dim_col U)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. U\\<^sup>t * U\\<^sup>t\\<^sup>\\<dagger> = 1\\<^sub>m (dim_col U)", "have \"dim_col ((U\\<^sup>t)\\<^sup>\\<star>) = dim_row U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col U\\<^sup>t\\<^sup>\\<star> = dim_row U", "by simp"], ["proof (state)\nthis:\n  dim_col U\\<^sup>t\\<^sup>\\<star> = dim_row U\n\ngoal (1 subgoal):\n 1. U\\<^sup>t * U\\<^sup>t\\<^sup>\\<dagger> = 1\\<^sub>m (dim_col U)", "then"], ["proof (chain)\npicking this:\n  dim_col U\\<^sup>t\\<^sup>\\<star> = dim_row U", "have \"U\\<^sup>t * ((U\\<^sup>t)\\<^sup>\\<dagger>) = (((U\\<^sup>t)\\<^sup>\\<star> * U)\\<^sup>\\<star>)\""], ["proof (prove)\nusing this:\n  dim_col U\\<^sup>t\\<^sup>\\<star> = dim_row U\n\ngoal (1 subgoal):\n 1. U\\<^sup>t * U\\<^sup>t\\<^sup>\\<dagger> =\n    U\\<^sup>t\\<^sup>\\<star> * U\\<^sup>\\<star>", "using cpx_mat_cnj_cnj cpx_mat_cnj_prod dagger_of_transpose_is_cnj"], ["proof (prove)\nusing this:\n  dim_col U\\<^sup>t\\<^sup>\\<star> = dim_row U\n  ?M\\<^sup>\\<star>\\<^sup>\\<star> = ?M\n  dim_col ?M = dim_row ?N \\<Longrightarrow>\n  ?M * ?N\\<^sup>\\<star> = ?M\\<^sup>\\<star> * ?N\\<^sup>\\<star>\n  ?M\\<^sup>t\\<^sup>\\<dagger> = ?M\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. U\\<^sup>t * U\\<^sup>t\\<^sup>\\<dagger> =\n    U\\<^sup>t\\<^sup>\\<star> * U\\<^sup>\\<star>", "by presburger"], ["proof (state)\nthis:\n  U\\<^sup>t * U\\<^sup>t\\<^sup>\\<dagger> =\n  U\\<^sup>t\\<^sup>\\<star> * U\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. U\\<^sup>t * U\\<^sup>t\\<^sup>\\<dagger> = 1\\<^sub>m (dim_col U)", "also"], ["proof (state)\nthis:\n  U\\<^sup>t * U\\<^sup>t\\<^sup>\\<dagger> =\n  U\\<^sup>t\\<^sup>\\<star> * U\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. U\\<^sup>t * U\\<^sup>t\\<^sup>\\<dagger> = 1\\<^sub>m (dim_col U)", "have \"\\<dots> = (U\\<^sup>\\<dagger> * U)\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U\\<^sup>t\\<^sup>\\<star> * U\\<^sup>\\<star> =\n    U\\<^sup>\\<dagger> * U\\<^sup>\\<star>", "by simp"], ["proof (state)\nthis:\n  U\\<^sup>t\\<^sup>\\<star> * U\\<^sup>\\<star> =\n  U\\<^sup>\\<dagger> * U\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. U\\<^sup>t * U\\<^sup>t\\<^sup>\\<dagger> = 1\\<^sub>m (dim_col U)", "finally"], ["proof (chain)\npicking this:\n  U\\<^sup>t * U\\<^sup>t\\<^sup>\\<dagger> =\n  U\\<^sup>\\<dagger> * U\\<^sup>\\<star>", "show ?thesis"], ["proof (prove)\nusing this:\n  U\\<^sup>t * U\\<^sup>t\\<^sup>\\<dagger> =\n  U\\<^sup>\\<dagger> * U\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. U\\<^sup>t * U\\<^sup>t\\<^sup>\\<dagger> = 1\\<^sub>m (dim_col U)", "using assms"], ["proof (prove)\nusing this:\n  U\\<^sup>t * U\\<^sup>t\\<^sup>\\<dagger> =\n  U\\<^sup>\\<dagger> * U\\<^sup>\\<star>\n  unitary U\n\ngoal (1 subgoal):\n 1. U\\<^sup>t * U\\<^sup>t\\<^sup>\\<dagger> = 1\\<^sub>m (dim_col U)", "by (metis cpx_mat_cnj_id unitary_def)"], ["proof (state)\nthis:\n  U\\<^sup>t * U\\<^sup>t\\<^sup>\\<dagger> = 1\\<^sub>m (dim_col U)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma transpose_of_unitary_is_unitary [simp]:\n  assumes \"unitary U\"\n  shows \"unitary (U\\<^sup>t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unitary U\\<^sup>t", "using unitary_def assms left_inv_of_unitary_transpose right_inv_of_unitary_transpose"], ["proof (prove)\nusing this:\n  unitary ?M \\<equiv>\n  ?M\\<^sup>\\<dagger> * ?M = 1\\<^sub>m (dim_col ?M) \\<and>\n  ?M * ?M\\<^sup>\\<dagger> = 1\\<^sub>m (dim_row ?M)\n  unitary U\n  unitary ?U \\<Longrightarrow>\n  ?U\\<^sup>t\\<^sup>\\<dagger> * ?U\\<^sup>t = 1\\<^sub>m (dim_row ?U)\n  unitary ?U \\<Longrightarrow>\n  ?U\\<^sup>t * ?U\\<^sup>t\\<^sup>\\<dagger> = 1\\<^sub>m (dim_col ?U)\n\ngoal (1 subgoal):\n 1. unitary U\\<^sup>t", "by simp"], ["", "subsection \"The Inner Product\""], ["", "text \\<open>We introduce a coercion between complex vectors and (column) complex matrices.\\<close>"], ["", "definition ket_vec :: \"complex vec \\<Rightarrow> complex mat\" (\"|_\\<rangle>\") where\n\"|v\\<rangle> \\<equiv> mat (dim_vec v) 1 (\\<lambda>(i,j). v $ i)\""], ["", "lemma ket_vec_index [simp]:\n  assumes \"i < dim_vec v\"\n  shows \"|v\\<rangle> $$ (i,0) = v $ i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |v\\<rangle> $$ (i, 0) = v $ i", "using assms ket_vec_def"], ["proof (prove)\nusing this:\n  i < dim_vec v\n  |?v\\<rangle> \\<equiv> mat (dim_vec ?v) 1 (\\<lambda>(i, j). ?v $ i)\n\ngoal (1 subgoal):\n 1. |v\\<rangle> $$ (i, 0) = v $ i", "by simp"], ["", "lemma ket_vec_col [simp]:\n  \"col |v\\<rangle> 0 = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col |v\\<rangle> 0 = v", "by (auto simp: col_def ket_vec_def)"], ["", "lemma smult_ket_vec [simp]:\n  \"|x \\<cdot>\\<^sub>v v\\<rangle> = x \\<cdot>\\<^sub>m |v\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |x \\<cdot>\\<^sub>v v\\<rangle> = x \\<cdot>\\<^sub>m |v\\<rangle>", "by (auto simp: ket_vec_def)"], ["", "lemma smult_vec_length_bis [simp]:\n  assumes \"x \\<ge> 0\"\n  shows \"\\<parallel>col (complex_of_real(x) \\<cdot>\\<^sub>m |v\\<rangle>) 0\\<parallel> = x * \\<parallel>v\\<parallel>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>col (complex_of_real x \\<cdot>\\<^sub>m |v\\<rangle>)\n                0\\<parallel> =\n    x * \\<parallel>v\\<parallel>", "using assms smult_ket_vec smult_vec_length ket_vec_col"], ["proof (prove)\nusing this:\n  0 \\<le> x\n  |?x \\<cdot>\\<^sub>v ?v\\<rangle> = ?x \\<cdot>\\<^sub>m |?v\\<rangle>\n  0 \\<le> ?x \\<Longrightarrow>\n  \\<parallel>complex_of_real ?x \\<cdot>\\<^sub>v ?v\\<parallel> =\n  ?x * \\<parallel>?v\\<parallel>\n  col |?v\\<rangle> 0 = ?v\n\ngoal (1 subgoal):\n 1. \\<parallel>col (complex_of_real x \\<cdot>\\<^sub>m |v\\<rangle>)\n                0\\<parallel> =\n    x * \\<parallel>v\\<parallel>", "by metis"], ["", "declare [[coercion ket_vec]]"], ["", "definition row_vec :: \"complex vec \\<Rightarrow> complex mat\" where\n\"row_vec v \\<equiv> mat 1 (dim_vec v) (\\<lambda>(i,j). v $ j)\""], ["", "definition bra_vec :: \"complex vec \\<Rightarrow> complex mat\" where\n\"bra_vec v \\<equiv> (row_vec v)\\<^sup>\\<star>\""], ["", "lemma row_bra_vec [simp]:\n  \"row (bra_vec v) 0 = vec (dim_vec v) (\\<lambda>i. cnj(v $ i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. row (bra_vec v) 0 = vec (dim_vec v) (\\<lambda>i. cnj (v $ i))", "by (auto simp: row_def bra_vec_def cpx_mat_cnj_def row_vec_def)"], ["", "text \\<open>We introduce a definition called @{term \"bra\"} to see a vector as a column matrix.\\<close>"], ["", "definition bra :: \"complex mat \\<Rightarrow> complex mat\" (\"\\<langle>_|\") where\n\"\\<langle>v| \\<equiv> mat 1 (dim_row v) (\\<lambda>(i,j). cnj(v $$ (j,i)))\""], ["", "text \\<open>The relation between @{term \"bra\"}, @{term \"bra_vec\"} and @{term \"ket_vec\"} is given as follows.\\<close>"], ["", "lemma bra_bra_vec [simp]:\n  \"bra (ket_vec v) = bra_vec v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>|v\\<rangle>| = bra_vec v", "by (auto simp: bra_def ket_vec_def bra_vec_def cpx_mat_cnj_def row_vec_def)"], ["", "lemma row_bra [simp]:\n  fixes v::\"complex vec\"\n  shows \"row \\<langle>v| 0 = vec (dim_vec v) (\\<lambda>i. cnj (v $ i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. row \\<langle>|v\\<rangle>| 0 = vec (dim_vec v) (\\<lambda>i. cnj (v $ i))", "by simp"], ["", "text \\<open>We introduce the inner product of two complex vectors in @{text \"\\<complex>\\<^sup>n\"}.\\<close>"], ["", "definition inner_prod :: \"complex vec \\<Rightarrow> complex vec \\<Rightarrow> complex\" (\"\\<langle>_|_\\<rangle>\") where\n\"inner_prod u v \\<equiv> \\<Sum> i \\<in> {0..< dim_vec v}. cnj(u $ i) * (v $ i)\""], ["", "lemma inner_prod_with_row_bra_vec [simp]:\n  assumes \"dim_vec u = dim_vec v\"\n  shows \"\\<langle>u|v\\<rangle> = row (bra_vec u) 0 \\<bullet> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>u|v\\<rangle> = row (bra_vec u) 0 \\<bullet> v", "using assms inner_prod_def scalar_prod_def row_bra_vec index_vec"], ["proof (prove)\nusing this:\n  dim_vec u = dim_vec v\n  \\<langle>?u|?v\\<rangle> \\<equiv>\n  \\<Sum>i = 0..<dim_vec ?v. cnj (?u $ i) * ?v $ i\n  ?v \\<bullet> ?w \\<equiv> \\<Sum>i = 0..<dim_vec ?w. ?v $ i * ?w $ i\n  row (bra_vec ?v) 0 = vec (dim_vec ?v) (\\<lambda>i. cnj (?v $ i))\n  ?i < ?n \\<Longrightarrow> vec ?n ?f $ ?i = ?f ?i\n\ngoal (1 subgoal):\n 1. \\<langle>u|v\\<rangle> = row (bra_vec u) 0 \\<bullet> v", "by (smt lessThan_atLeast0 lessThan_iff sum.cong)"], ["", "lemma inner_prod_with_row_bra_vec_col_ket_vec [simp]:\n  assumes \"dim_vec u = dim_vec v\"\n  shows \"\\<langle>u|v\\<rangle> = (row \\<langle>u| 0) \\<bullet> (col |v\\<rangle> 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>u|v\\<rangle> =\n    row \\<langle>|u\\<rangle>| 0 \\<bullet> col |v\\<rangle> 0", "using assms"], ["proof (prove)\nusing this:\n  dim_vec u = dim_vec v\n\ngoal (1 subgoal):\n 1. \\<langle>u|v\\<rangle> =\n    row \\<langle>|u\\<rangle>| 0 \\<bullet> col |v\\<rangle> 0", "by (simp add: inner_prod_def scalar_prod_def)"], ["", "lemma inner_prod_with_times_mat [simp]:\n  assumes \"dim_vec u = dim_vec v\"\n  shows \"\\<langle>u|v\\<rangle> = (\\<langle>u| * |v\\<rangle>) $$ (0,0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>u|v\\<rangle> = (\\<langle>|u\\<rangle>| * |v\\<rangle>) $$ (0, 0)", "using assms inner_prod_with_row_bra_vec_col_ket_vec"], ["proof (prove)\nusing this:\n  dim_vec u = dim_vec v\n  dim_vec ?u = dim_vec ?v \\<Longrightarrow>\n  \\<langle>?u|?v\\<rangle> =\n  row \\<langle>|?u\\<rangle>| 0 \\<bullet> col |?v\\<rangle> 0\n\ngoal (1 subgoal):\n 1. \\<langle>u|v\\<rangle> = (\\<langle>|u\\<rangle>| * |v\\<rangle>) $$ (0, 0)", "by (simp add: inner_prod_def times_mat_def ket_vec_def bra_def)"], ["", "lemma orthogonal_unit_vec [simp]:\n  assumes \"i < n\" and \"j < n\" and \"i \\<noteq> j\"\n  shows \"\\<langle>unit_vec n i|unit_vec n j\\<rangle> = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>unit_vec n i|unit_vec n j\\<rangle> = 0", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<langle>unit_vec n i|unit_vec n j\\<rangle> = 0", "have \"\\<langle>unit_vec n i|unit_vec n j\\<rangle> = unit_vec n i \\<bullet> unit_vec n j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>unit_vec n i|unit_vec n j\\<rangle> =\n    unit_vec n i \\<bullet> unit_vec n j", "using assms unit_vec_def inner_prod_def scalar_prod_def"], ["proof (prove)\nusing this:\n  i < n\n  j < n\n  i \\<noteq> j\n  unit_vec ?n ?i = vec ?n (\\<lambda>j. if j = ?i then 1::?'a else (0::?'a))\n  \\<langle>?u|?v\\<rangle> \\<equiv>\n  \\<Sum>i = 0..<dim_vec ?v. cnj (?u $ i) * ?v $ i\n  ?v \\<bullet> ?w \\<equiv> \\<Sum>i = 0..<dim_vec ?w. ?v $ i * ?w $ i\n\ngoal (1 subgoal):\n 1. \\<langle>unit_vec n i|unit_vec n j\\<rangle> =\n    unit_vec n i \\<bullet> unit_vec n j", "by (smt complex_cnj_zero index_unit_vec(3) index_vec inner_prod_with_row_bra_vec row_bra_vec \n        scalar_prod_right_unit)"], ["proof (state)\nthis:\n  \\<langle>unit_vec n i|unit_vec n j\\<rangle> =\n  unit_vec n i \\<bullet> unit_vec n j\n\ngoal (1 subgoal):\n 1. \\<langle>unit_vec n i|unit_vec n j\\<rangle> = 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>unit_vec n i|unit_vec n j\\<rangle> =\n  unit_vec n i \\<bullet> unit_vec n j\n\ngoal (1 subgoal):\n 1. \\<langle>unit_vec n i|unit_vec n j\\<rangle> = 0", "using assms scalar_prod_def unit_vec_def"], ["proof (prove)\nusing this:\n  \\<langle>unit_vec n i|unit_vec n j\\<rangle> =\n  unit_vec n i \\<bullet> unit_vec n j\n  i < n\n  j < n\n  i \\<noteq> j\n  ?v \\<bullet> ?w \\<equiv> \\<Sum>i = 0..<dim_vec ?w. ?v $ i * ?w $ i\n  unit_vec ?n ?i = vec ?n (\\<lambda>j. if j = ?i then 1::?'a else (0::?'a))\n\ngoal (1 subgoal):\n 1. \\<langle>unit_vec n i|unit_vec n j\\<rangle> = 0", "by simp"], ["proof (state)\nthis:\n  \\<langle>unit_vec n i|unit_vec n j\\<rangle> = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>We prove that our inner product is linear in its second argument.\\<close>"], ["", "lemma vec_index_is_linear [simp]:\n  assumes \"dim_vec u = dim_vec v\" and \"j < dim_vec u\"\n  shows \"(k \\<cdot>\\<^sub>v u + l \\<cdot>\\<^sub>v v) $ j = k * (u $ j) + l * (v $ j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (k \\<cdot>\\<^sub>v u + l \\<cdot>\\<^sub>v v) $ j = k * u $ j + l * v $ j", "using assms vec_index_def smult_vec_def plus_vec_def"], ["proof (prove)\nusing this:\n  dim_vec u = dim_vec v\n  j < dim_vec u\n  ($) \\<equiv> map_fun Rep_vec id snd\n  ?a \\<cdot>\\<^sub>v ?v \\<equiv> vec (dim_vec ?v) (\\<lambda>i. ?a * ?v $ i)\n  ?v\\<^sub>1 + ?v\\<^sub>2 \\<equiv>\n  vec (dim_vec ?v\\<^sub>2) (\\<lambda>i. ?v\\<^sub>1 $ i + ?v\\<^sub>2 $ i)\n\ngoal (1 subgoal):\n 1. (k \\<cdot>\\<^sub>v u + l \\<cdot>\\<^sub>v v) $ j = k * u $ j + l * v $ j", "by simp"], ["", "lemma inner_prod_is_linear [simp]:\n  fixes u::\"complex vec\" and v::\"nat \\<Rightarrow> complex vec\" and l::\"nat \\<Rightarrow> complex\"\n  assumes \"\\<forall>i\\<in>{0, 1}. dim_vec u = dim_vec (v i)\"\n  shows \"\\<langle>u|l 0 \\<cdot>\\<^sub>v v 0 + l 1 \\<cdot>\\<^sub>v v 1\\<rangle> = (\\<Sum>i\\<le>1. l i * \\<langle>u|v i\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>u|l 0 \\<cdot>\\<^sub>v v 0 + l 1 \\<cdot>\\<^sub>v v 1\\<rangle> =\n    (\\<Sum>i\\<le>1. l i * \\<langle>u|v i\\<rangle>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<langle>u|l 0 \\<cdot>\\<^sub>v v 0 + l 1 \\<cdot>\\<^sub>v v 1\\<rangle> =\n    (\\<Sum>i\\<le>1. l i * \\<langle>u|v i\\<rangle>)", "have f1:\"dim_vec (l 0 \\<cdot>\\<^sub>v v 0 + l 1 \\<cdot>\\<^sub>v v 1) = dim_vec u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_vec (l 0 \\<cdot>\\<^sub>v v 0 + l 1 \\<cdot>\\<^sub>v v 1) = dim_vec u", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>{0, 1}. dim_vec u = dim_vec (v i)\n\ngoal (1 subgoal):\n 1. dim_vec (l 0 \\<cdot>\\<^sub>v v 0 + l 1 \\<cdot>\\<^sub>v v 1) = dim_vec u", "by simp"], ["proof (state)\nthis:\n  dim_vec (l 0 \\<cdot>\\<^sub>v v 0 + l 1 \\<cdot>\\<^sub>v v 1) = dim_vec u\n\ngoal (1 subgoal):\n 1. \\<langle>u|l 0 \\<cdot>\\<^sub>v v 0 + l 1 \\<cdot>\\<^sub>v v 1\\<rangle> =\n    (\\<Sum>i\\<le>1. l i * \\<langle>u|v i\\<rangle>)", "then"], ["proof (chain)\npicking this:\n  dim_vec (l 0 \\<cdot>\\<^sub>v v 0 + l 1 \\<cdot>\\<^sub>v v 1) = dim_vec u", "have \"\\<langle>u|l 0 \\<cdot>\\<^sub>v v 0 + l 1 \\<cdot>\\<^sub>v v 1\\<rangle> = (\\<Sum>i\\<in>{0 ..< dim_vec u}. cnj (u $ i) * ((l 0 \\<cdot>\\<^sub>v v 0 + l 1 \\<cdot>\\<^sub>v v 1) $ i))\""], ["proof (prove)\nusing this:\n  dim_vec (l 0 \\<cdot>\\<^sub>v v 0 + l 1 \\<cdot>\\<^sub>v v 1) = dim_vec u\n\ngoal (1 subgoal):\n 1. \\<langle>u|l 0 \\<cdot>\\<^sub>v v 0 + l 1 \\<cdot>\\<^sub>v v 1\\<rangle> =\n    (\\<Sum>i = 0..<dim_vec u.\n        cnj (u $ i) *\n        (l 0 \\<cdot>\\<^sub>v v 0 + l 1 \\<cdot>\\<^sub>v v 1) $ i)", "by (simp add: inner_prod_def)"], ["proof (state)\nthis:\n  \\<langle>u|l 0 \\<cdot>\\<^sub>v v 0 + l 1 \\<cdot>\\<^sub>v v 1\\<rangle> =\n  (\\<Sum>i = 0..<dim_vec u.\n      cnj (u $ i) * (l 0 \\<cdot>\\<^sub>v v 0 + l 1 \\<cdot>\\<^sub>v v 1) $ i)\n\ngoal (1 subgoal):\n 1. \\<langle>u|l 0 \\<cdot>\\<^sub>v v 0 + l 1 \\<cdot>\\<^sub>v v 1\\<rangle> =\n    (\\<Sum>i\\<le>1. l i * \\<langle>u|v i\\<rangle>)", "also"], ["proof (state)\nthis:\n  \\<langle>u|l 0 \\<cdot>\\<^sub>v v 0 + l 1 \\<cdot>\\<^sub>v v 1\\<rangle> =\n  (\\<Sum>i = 0..<dim_vec u.\n      cnj (u $ i) * (l 0 \\<cdot>\\<^sub>v v 0 + l 1 \\<cdot>\\<^sub>v v 1) $ i)\n\ngoal (1 subgoal):\n 1. \\<langle>u|l 0 \\<cdot>\\<^sub>v v 0 + l 1 \\<cdot>\\<^sub>v v 1\\<rangle> =\n    (\\<Sum>i\\<le>1. l i * \\<langle>u|v i\\<rangle>)", "have \"\\<dots> = (\\<Sum>i\\<in>{0 ..< dim_vec u}. cnj (u $ i) * (l 0 * v 0 $ i + l 1 * v 1 $ i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<dim_vec u.\n        cnj (u $ i) *\n        (l 0 \\<cdot>\\<^sub>v v 0 + l 1 \\<cdot>\\<^sub>v v 1) $ i) =\n    (\\<Sum>i = 0..<dim_vec u. cnj (u $ i) * (l 0 * v 0 $ i + l 1 * v 1 $ i))", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>{0, 1}. dim_vec u = dim_vec (v i)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<dim_vec u.\n        cnj (u $ i) *\n        (l 0 \\<cdot>\\<^sub>v v 0 + l 1 \\<cdot>\\<^sub>v v 1) $ i) =\n    (\\<Sum>i = 0..<dim_vec u. cnj (u $ i) * (l 0 * v 0 $ i + l 1 * v 1 $ i))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<dim_vec u.\n      cnj (u $ i) *\n      (l 0 \\<cdot>\\<^sub>v v 0 + l 1 \\<cdot>\\<^sub>v v 1) $ i) =\n  (\\<Sum>i = 0..<dim_vec u. cnj (u $ i) * (l 0 * v 0 $ i + l 1 * v 1 $ i))\n\ngoal (1 subgoal):\n 1. \\<langle>u|l 0 \\<cdot>\\<^sub>v v 0 + l 1 \\<cdot>\\<^sub>v v 1\\<rangle> =\n    (\\<Sum>i\\<le>1. l i * \\<langle>u|v i\\<rangle>)", "also"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<dim_vec u.\n      cnj (u $ i) *\n      (l 0 \\<cdot>\\<^sub>v v 0 + l 1 \\<cdot>\\<^sub>v v 1) $ i) =\n  (\\<Sum>i = 0..<dim_vec u. cnj (u $ i) * (l 0 * v 0 $ i + l 1 * v 1 $ i))\n\ngoal (1 subgoal):\n 1. \\<langle>u|l 0 \\<cdot>\\<^sub>v v 0 + l 1 \\<cdot>\\<^sub>v v 1\\<rangle> =\n    (\\<Sum>i\\<le>1. l i * \\<langle>u|v i\\<rangle>)", "have \"\\<dots> = l 0 * (\\<Sum>i\\<in>{0 ..< dim_vec u}. cnj(u $ i) * (v 0 $ i)) + l 1 * (\\<Sum>i\\<in>{0 ..< dim_vec u}. cnj(u $ i) * (v 1 $ i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<dim_vec u.\n        cnj (u $ i) * (l 0 * v 0 $ i + l 1 * v 1 $ i)) =\n    l 0 * (\\<Sum>i = 0..<dim_vec u. cnj (u $ i) * v 0 $ i) +\n    l 1 * (\\<Sum>i = 0..<dim_vec u. cnj (u $ i) * v 1 $ i)", "by (auto simp: algebra_simps)\n      (simp add: sum.distrib sum_distrib_left)"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<dim_vec u. cnj (u $ i) * (l 0 * v 0 $ i + l 1 * v 1 $ i)) =\n  l 0 * (\\<Sum>i = 0..<dim_vec u. cnj (u $ i) * v 0 $ i) +\n  l 1 * (\\<Sum>i = 0..<dim_vec u. cnj (u $ i) * v 1 $ i)\n\ngoal (1 subgoal):\n 1. \\<langle>u|l 0 \\<cdot>\\<^sub>v v 0 + l 1 \\<cdot>\\<^sub>v v 1\\<rangle> =\n    (\\<Sum>i\\<le>1. l i * \\<langle>u|v i\\<rangle>)", "also"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<dim_vec u. cnj (u $ i) * (l 0 * v 0 $ i + l 1 * v 1 $ i)) =\n  l 0 * (\\<Sum>i = 0..<dim_vec u. cnj (u $ i) * v 0 $ i) +\n  l 1 * (\\<Sum>i = 0..<dim_vec u. cnj (u $ i) * v 1 $ i)\n\ngoal (1 subgoal):\n 1. \\<langle>u|l 0 \\<cdot>\\<^sub>v v 0 + l 1 \\<cdot>\\<^sub>v v 1\\<rangle> =\n    (\\<Sum>i\\<le>1. l i * \\<langle>u|v i\\<rangle>)", "have \"\\<dots> = l 0 * \\<langle>u|v 0\\<rangle> + l 1 * \\<langle>u|v 1\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l 0 * (\\<Sum>i = 0..<dim_vec u. cnj (u $ i) * v 0 $ i) +\n    l 1 * (\\<Sum>i = 0..<dim_vec u. cnj (u $ i) * v 1 $ i) =\n    l 0 * \\<langle>u|v 0\\<rangle> + l 1 * \\<langle>u|v 1\\<rangle>", "using assms inner_prod_def"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>{0, 1}. dim_vec u = dim_vec (v i)\n  \\<langle>?u|?v\\<rangle> \\<equiv>\n  \\<Sum>i = 0..<dim_vec ?v. cnj (?u $ i) * ?v $ i\n\ngoal (1 subgoal):\n 1. l 0 * (\\<Sum>i = 0..<dim_vec u. cnj (u $ i) * v 0 $ i) +\n    l 1 * (\\<Sum>i = 0..<dim_vec u. cnj (u $ i) * v 1 $ i) =\n    l 0 * \\<langle>u|v 0\\<rangle> + l 1 * \\<langle>u|v 1\\<rangle>", "by auto"], ["proof (state)\nthis:\n  l 0 * (\\<Sum>i = 0..<dim_vec u. cnj (u $ i) * v 0 $ i) +\n  l 1 * (\\<Sum>i = 0..<dim_vec u. cnj (u $ i) * v 1 $ i) =\n  l 0 * \\<langle>u|v 0\\<rangle> + l 1 * \\<langle>u|v 1\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>u|l 0 \\<cdot>\\<^sub>v v 0 + l 1 \\<cdot>\\<^sub>v v 1\\<rangle> =\n    (\\<Sum>i\\<le>1. l i * \\<langle>u|v i\\<rangle>)", "finally"], ["proof (chain)\npicking this:\n  \\<langle>u|l 0 \\<cdot>\\<^sub>v v 0 + l 1 \\<cdot>\\<^sub>v v 1\\<rangle> =\n  l 0 * \\<langle>u|v 0\\<rangle> + l 1 * \\<langle>u|v 1\\<rangle>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>u|l 0 \\<cdot>\\<^sub>v v 0 + l 1 \\<cdot>\\<^sub>v v 1\\<rangle> =\n  l 0 * \\<langle>u|v 0\\<rangle> + l 1 * \\<langle>u|v 1\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>u|l 0 \\<cdot>\\<^sub>v v 0 + l 1 \\<cdot>\\<^sub>v v 1\\<rangle> =\n    (\\<Sum>i\\<le>1. l i * \\<langle>u|v i\\<rangle>)", "by simp"], ["proof (state)\nthis:\n  \\<langle>u|l 0 \\<cdot>\\<^sub>v v 0 + l 1 \\<cdot>\\<^sub>v v 1\\<rangle> =\n  (\\<Sum>i\\<le>1. l i * \\<langle>u|v i\\<rangle>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inner_prod_cnj:\n  assumes \"dim_vec u = dim_vec v\"\n  shows \"\\<langle>v|u\\<rangle> = cnj (\\<langle>u|v\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>v|u\\<rangle> = cnj \\<langle>u|v\\<rangle>", "by (simp add: assms inner_prod_def algebra_simps)"], ["", "lemma inner_prod_with_itself_Im [simp]:\n  \"Im (\\<langle>u|u\\<rangle>) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Im \\<langle>u|u\\<rangle> = 0", "using inner_prod_cnj"], ["proof (prove)\nusing this:\n  dim_vec ?u = dim_vec ?v \\<Longrightarrow>\n  \\<langle>?v|?u\\<rangle> = cnj \\<langle>?u|?v\\<rangle>\n\ngoal (1 subgoal):\n 1. Im \\<langle>u|u\\<rangle> = 0", "by (metis Reals_cnj_iff complex_is_Real_iff)"], ["", "lemma inner_prod_with_itself_real [simp]:\n  \"\\<langle>u|u\\<rangle> \\<in> \\<real>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>u|u\\<rangle> \\<in> \\<real>", "using inner_prod_with_itself_Im"], ["proof (prove)\nusing this:\n  Im \\<langle>?u|?u\\<rangle> = 0\n\ngoal (1 subgoal):\n 1. \\<langle>u|u\\<rangle> \\<in> \\<real>", "by (simp add: complex_is_Real_iff)"], ["", "lemma inner_prod_with_itself_eq0 [simp]:\n  assumes \"u = 0\\<^sub>v (dim_vec u)\"\n  shows \"\\<langle>u|u\\<rangle> = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>u|u\\<rangle> = 0", "using assms inner_prod_def zero_vec_def"], ["proof (prove)\nusing this:\n  u = 0\\<^sub>v (dim_vec u)\n  \\<langle>?u|?v\\<rangle> \\<equiv>\n  \\<Sum>i = 0..<dim_vec ?v. cnj (?u $ i) * ?v $ i\n  0\\<^sub>v ?n \\<equiv> vec ?n (\\<lambda>i. 0::?'a)\n\ngoal (1 subgoal):\n 1. \\<langle>u|u\\<rangle> = 0", "by (smt atLeastLessThan_iff complex_cnj_zero index_zero_vec(1) mult_zero_left sum.neutral)"], ["", "lemma inner_prod_with_itself_Re:\n  \"Re (\\<langle>u|u\\<rangle>) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> Re \\<langle>u|u\\<rangle>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 \\<le> Re \\<langle>u|u\\<rangle>", "have \"Re (\\<langle>u|u\\<rangle>) = (\\<Sum>i<dim_vec u. Re (cnj(u $ i) * (u $ i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re \\<langle>u|u\\<rangle> = (\\<Sum>i<dim_vec u. Re (cnj (u $ i) * u $ i))", "by (simp add: inner_prod_def lessThan_atLeast0)"], ["proof (state)\nthis:\n  Re \\<langle>u|u\\<rangle> = (\\<Sum>i<dim_vec u. Re (cnj (u $ i) * u $ i))\n\ngoal (1 subgoal):\n 1. 0 \\<le> Re \\<langle>u|u\\<rangle>", "moreover"], ["proof (state)\nthis:\n  Re \\<langle>u|u\\<rangle> = (\\<Sum>i<dim_vec u. Re (cnj (u $ i) * u $ i))\n\ngoal (1 subgoal):\n 1. 0 \\<le> Re \\<langle>u|u\\<rangle>", "have \"\\<dots> = (\\<Sum>i<dim_vec u. (Re (u $ i))\\<^sup>2 + (Im (u $ i))\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<dim_vec u. Re (cnj (u $ i) * u $ i)) =\n    (\\<Sum>i<dim_vec u. (Re (u $ i))\\<^sup>2 + (Im (u $ i))\\<^sup>2)", "using complex_mult_cnj"], ["proof (prove)\nusing this:\n  ?z * cnj ?z = complex_of_real ((Re ?z)\\<^sup>2 + (Im ?z)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<dim_vec u. Re (cnj (u $ i) * u $ i)) =\n    (\\<Sum>i<dim_vec u. (Re (u $ i))\\<^sup>2 + (Im (u $ i))\\<^sup>2)", "by (metis (no_types, lifting) Re_complex_of_real semiring_normalization_rules(7))"], ["proof (state)\nthis:\n  (\\<Sum>i<dim_vec u. Re (cnj (u $ i) * u $ i)) =\n  (\\<Sum>i<dim_vec u. (Re (u $ i))\\<^sup>2 + (Im (u $ i))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. 0 \\<le> Re \\<langle>u|u\\<rangle>", "ultimately"], ["proof (chain)\npicking this:\n  Re \\<langle>u|u\\<rangle> = (\\<Sum>i<dim_vec u. Re (cnj (u $ i) * u $ i))\n  (\\<Sum>i<dim_vec u. Re (cnj (u $ i) * u $ i)) =\n  (\\<Sum>i<dim_vec u. (Re (u $ i))\\<^sup>2 + (Im (u $ i))\\<^sup>2)", "show \"Re (\\<langle>u|u\\<rangle>) \\<ge> 0\""], ["proof (prove)\nusing this:\n  Re \\<langle>u|u\\<rangle> = (\\<Sum>i<dim_vec u. Re (cnj (u $ i) * u $ i))\n  (\\<Sum>i<dim_vec u. Re (cnj (u $ i) * u $ i)) =\n  (\\<Sum>i<dim_vec u. (Re (u $ i))\\<^sup>2 + (Im (u $ i))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. 0 \\<le> Re \\<langle>u|u\\<rangle>", "by (simp add: sum_nonneg)"], ["proof (state)\nthis:\n  0 \\<le> Re \\<langle>u|u\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inner_prod_with_itself_nonneg_reals:\n  fixes u::\"complex vec\"\n  shows \"\\<langle>u|u\\<rangle> \\<in> nonneg_Reals\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>u|u\\<rangle> \\<in> \\<real>\\<^sub>\\<ge>\\<^sub>0", "using inner_prod_with_itself_real inner_prod_with_itself_Re complex_nonneg_Reals_iff \ninner_prod_with_itself_Im"], ["proof (prove)\nusing this:\n  \\<langle>?u|?u\\<rangle> \\<in> \\<real>\n  0 \\<le> Re \\<langle>?u|?u\\<rangle>\n  (?z \\<in> \\<real>\\<^sub>\\<ge>\\<^sub>0) = (0 \\<le> Re ?z \\<and> Im ?z = 0)\n  Im \\<langle>?u|?u\\<rangle> = 0\n\ngoal (1 subgoal):\n 1. \\<langle>u|u\\<rangle> \\<in> \\<real>\\<^sub>\\<ge>\\<^sub>0", "by auto"], ["", "lemma inner_prod_with_itself_Re_non0:\n  assumes \"u \\<noteq> 0\\<^sub>v (dim_vec u)\"\n  shows \"Re (\\<langle>u|u\\<rangle>) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < Re \\<langle>u|u\\<rangle>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < Re \\<langle>u|u\\<rangle>", "obtain i where a1:\"i < dim_vec u\" and \"u $ i \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i < dim_vec u; u $ i \\<noteq> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms zero_vec_def"], ["proof (prove)\nusing this:\n  u \\<noteq> 0\\<^sub>v (dim_vec u)\n  0\\<^sub>v ?n \\<equiv> vec ?n (\\<lambda>i. 0::?'a)\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i < dim_vec u; u $ i \\<noteq> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis dim_vec eq_vecI index_zero_vec(1))"], ["proof (state)\nthis:\n  i < dim_vec u\n  u $ i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < Re \\<langle>u|u\\<rangle>", "then"], ["proof (chain)\npicking this:\n  i < dim_vec u\n  u $ i \\<noteq> 0", "have f1:\"Re (cnj (u $ i) * (u $ i)) > 0\""], ["proof (prove)\nusing this:\n  i < dim_vec u\n  u $ i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < Re (cnj (u $ i) * u $ i)", "by (metis Re_complex_of_real complex_mult_cnj complex_neq_0 mult.commute)"], ["proof (state)\nthis:\n  0 < Re (cnj (u $ i) * u $ i)\n\ngoal (1 subgoal):\n 1. 0 < Re \\<langle>u|u\\<rangle>", "moreover"], ["proof (state)\nthis:\n  0 < Re (cnj (u $ i) * u $ i)\n\ngoal (1 subgoal):\n 1. 0 < Re \\<langle>u|u\\<rangle>", "have f2:\"Re (\\<langle>u|u\\<rangle>) = (\\<Sum>i<dim_vec u. Re (cnj(u $ i) * (u $ i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re \\<langle>u|u\\<rangle> = (\\<Sum>i<dim_vec u. Re (cnj (u $ i) * u $ i))", "using inner_prod_def"], ["proof (prove)\nusing this:\n  \\<langle>?u|?v\\<rangle> \\<equiv>\n  \\<Sum>i = 0..<dim_vec ?v. cnj (?u $ i) * ?v $ i\n\ngoal (1 subgoal):\n 1. Re \\<langle>u|u\\<rangle> = (\\<Sum>i<dim_vec u. Re (cnj (u $ i) * u $ i))", "by (simp add: lessThan_atLeast0)"], ["proof (state)\nthis:\n  Re \\<langle>u|u\\<rangle> = (\\<Sum>i<dim_vec u. Re (cnj (u $ i) * u $ i))\n\ngoal (1 subgoal):\n 1. 0 < Re \\<langle>u|u\\<rangle>", "moreover"], ["proof (state)\nthis:\n  Re \\<langle>u|u\\<rangle> = (\\<Sum>i<dim_vec u. Re (cnj (u $ i) * u $ i))\n\ngoal (1 subgoal):\n 1. 0 < Re \\<langle>u|u\\<rangle>", "have f3:\"\\<forall>i<dim_vec u. Re (cnj(u $ i) * (u $ i)) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i<dim_vec u. 0 \\<le> Re (cnj (u $ i) * u $ i)", "using complex_mult_cnj"], ["proof (prove)\nusing this:\n  ?z * cnj ?z = complex_of_real ((Re ?z)\\<^sup>2 + (Im ?z)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<forall>i<dim_vec u. 0 \\<le> Re (cnj (u $ i) * u $ i)", "by simp"], ["proof (state)\nthis:\n  \\<forall>i<dim_vec u. 0 \\<le> Re (cnj (u $ i) * u $ i)\n\ngoal (1 subgoal):\n 1. 0 < Re \\<langle>u|u\\<rangle>", "ultimately"], ["proof (chain)\npicking this:\n  0 < Re (cnj (u $ i) * u $ i)\n  Re \\<langle>u|u\\<rangle> = (\\<Sum>i<dim_vec u. Re (cnj (u $ i) * u $ i))\n  \\<forall>i<dim_vec u. 0 \\<le> Re (cnj (u $ i) * u $ i)", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < Re (cnj (u $ i) * u $ i)\n  Re \\<langle>u|u\\<rangle> = (\\<Sum>i<dim_vec u. Re (cnj (u $ i) * u $ i))\n  \\<forall>i<dim_vec u. 0 \\<le> Re (cnj (u $ i) * u $ i)\n\ngoal (1 subgoal):\n 1. 0 < Re \\<langle>u|u\\<rangle>", "using a1 inner_prod_def lessThan_iff"], ["proof (prove)\nusing this:\n  0 < Re (cnj (u $ i) * u $ i)\n  Re \\<langle>u|u\\<rangle> = (\\<Sum>i<dim_vec u. Re (cnj (u $ i) * u $ i))\n  \\<forall>i<dim_vec u. 0 \\<le> Re (cnj (u $ i) * u $ i)\n  i < dim_vec u\n  \\<langle>?u|?v\\<rangle> \\<equiv>\n  \\<Sum>i = 0..<dim_vec ?v. cnj (?u $ i) * ?v $ i\n  (?i \\<in> {..<?k}) = (?i < ?k)\n\ngoal (1 subgoal):\n 1. 0 < Re \\<langle>u|u\\<rangle>", "by (metis (no_types, lifting) finite_lessThan sum_pos2)"], ["proof (state)\nthis:\n  0 < Re \\<langle>u|u\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inner_prod_with_itself_nonneg_reals_non0:\n  assumes \"u \\<noteq> 0\\<^sub>v (dim_vec u)\"\n  shows \"\\<langle>u|u\\<rangle> \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>u|u\\<rangle> \\<noteq> 0", "using assms inner_prod_with_itself_Re_non0"], ["proof (prove)\nusing this:\n  u \\<noteq> 0\\<^sub>v (dim_vec u)\n  ?u \\<noteq> 0\\<^sub>v (dim_vec ?u) \\<Longrightarrow>\n  0 < Re \\<langle>?u|?u\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>u|u\\<rangle> \\<noteq> 0", "by fastforce"], ["", "lemma cpx_vec_length_inner_prod [simp]:\n  \"\\<parallel>v\\<parallel>\\<^sup>2 = \\<langle>v|v\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (\\<parallel>v\\<parallel>\\<^sup>2) =\n    \\<langle>v|v\\<rangle>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. complex_of_real (\\<parallel>v\\<parallel>\\<^sup>2) =\n    \\<langle>v|v\\<rangle>", "have \"\\<parallel>v\\<parallel>\\<^sup>2 = (\\<Sum>i<dim_vec v. (cmod (v $ i))\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>v\\<parallel>\\<^sup>2 =\n    (\\<Sum>i<dim_vec v. (cmod (v $ i))\\<^sup>2)", "using cpx_vec_length_def complex_of_real_def"], ["proof (prove)\nusing this:\n  \\<parallel>?v\\<parallel> \\<equiv>\n  sqrt (\\<Sum>i<dim_vec ?v. (cmod (?v $ i))\\<^sup>2)\n  complex_of_real ?r = Complex ?r 0\n\ngoal (1 subgoal):\n 1. \\<parallel>v\\<parallel>\\<^sup>2 =\n    (\\<Sum>i<dim_vec v. (cmod (v $ i))\\<^sup>2)", "by (metis (no_types, lifting) real_sqrt_power real_sqrt_unique sum_nonneg zero_le_power2)"], ["proof (state)\nthis:\n  \\<parallel>v\\<parallel>\\<^sup>2 =\n  (\\<Sum>i<dim_vec v. (cmod (v $ i))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. complex_of_real (\\<parallel>v\\<parallel>\\<^sup>2) =\n    \\<langle>v|v\\<rangle>", "also"], ["proof (state)\nthis:\n  \\<parallel>v\\<parallel>\\<^sup>2 =\n  (\\<Sum>i<dim_vec v. (cmod (v $ i))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. complex_of_real (\\<parallel>v\\<parallel>\\<^sup>2) =\n    \\<langle>v|v\\<rangle>", "have \"\\<dots> = (\\<Sum>i<dim_vec v. cnj (v $ i) * (v $ i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (\\<Sum>i<dim_vec v. (cmod (v $ i))\\<^sup>2) =\n    (\\<Sum>i<dim_vec v. cnj (v $ i) * v $ i)", "using complex_norm_square mult.commute"], ["proof (prove)\nusing this:\n  complex_of_real ((cmod ?z)\\<^sup>2) = ?z * cnj ?z\n  ?a * ?b = ?b * ?a\n\ngoal (1 subgoal):\n 1. complex_of_real (\\<Sum>i<dim_vec v. (cmod (v $ i))\\<^sup>2) =\n    (\\<Sum>i<dim_vec v. cnj (v $ i) * v $ i)", "by (smt of_real_sum sum.cong)"], ["proof (state)\nthis:\n  complex_of_real (\\<Sum>i<dim_vec v. (cmod (v $ i))\\<^sup>2) =\n  (\\<Sum>i<dim_vec v. cnj (v $ i) * v $ i)\n\ngoal (1 subgoal):\n 1. complex_of_real (\\<parallel>v\\<parallel>\\<^sup>2) =\n    \\<langle>v|v\\<rangle>", "finally"], ["proof (chain)\npicking this:\n  complex_of_real (\\<parallel>v\\<parallel>\\<^sup>2) =\n  (\\<Sum>i<dim_vec v. cnj (v $ i) * v $ i)", "show ?thesis"], ["proof (prove)\nusing this:\n  complex_of_real (\\<parallel>v\\<parallel>\\<^sup>2) =\n  (\\<Sum>i<dim_vec v. cnj (v $ i) * v $ i)\n\ngoal (1 subgoal):\n 1. complex_of_real (\\<parallel>v\\<parallel>\\<^sup>2) =\n    \\<langle>v|v\\<rangle>", "using inner_prod_def"], ["proof (prove)\nusing this:\n  complex_of_real (\\<parallel>v\\<parallel>\\<^sup>2) =\n  (\\<Sum>i<dim_vec v. cnj (v $ i) * v $ i)\n  \\<langle>?u|?v\\<rangle> \\<equiv>\n  \\<Sum>i = 0..<dim_vec ?v. cnj (?u $ i) * ?v $ i\n\ngoal (1 subgoal):\n 1. complex_of_real (\\<parallel>v\\<parallel>\\<^sup>2) =\n    \\<langle>v|v\\<rangle>", "by (simp add: lessThan_atLeast0)"], ["proof (state)\nthis:\n  complex_of_real (\\<parallel>v\\<parallel>\\<^sup>2) = \\<langle>v|v\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inner_prod_csqrt [simp]:\n  \"csqrt \\<langle>v|v\\<rangle> = \\<parallel>v\\<parallel>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. csqrt \\<langle>v|v\\<rangle> = complex_of_real \\<parallel>v\\<parallel>", "using inner_prod_with_itself_Re inner_prod_with_itself_Im csqrt_of_real_nonneg cpx_vec_length_def"], ["proof (prove)\nusing this:\n  0 \\<le> Re \\<langle>?u|?u\\<rangle>\n  Im \\<langle>?u|?u\\<rangle> = 0\n  \\<lbrakk>Im ?x = 0; 0 \\<le> Re ?x\\<rbrakk>\n  \\<Longrightarrow> csqrt ?x = complex_of_real (sqrt (Re ?x))\n  \\<parallel>?v\\<parallel> \\<equiv>\n  sqrt (\\<Sum>i<dim_vec ?v. (cmod (?v $ i))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. csqrt \\<langle>v|v\\<rangle> = complex_of_real \\<parallel>v\\<parallel>", "by (metis (no_types, lifting) Re_complex_of_real cpx_vec_length_inner_prod real_sqrt_ge_0_iff \n      real_sqrt_unique sum_nonneg zero_le_power2)"], ["", "subsection \"Unitary Matrices and Length-Preservation\""], ["", "subsubsection \"Unitary Matrices are Length-Preserving\""], ["", "text \\<open>The bra-vector @{text \"\\<langle>A * v|\"} is given by @{text \"\\<langle>v| * A\\<^sup>\\<dagger>\"}\\<close>"], ["", "lemma dagger_of_ket_is_bra:\n  fixes v:: \"complex vec\"\n  shows \"( |v\\<rangle> )\\<^sup>\\<dagger> = \\<langle>v|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |v\\<rangle>\\<^sup>\\<dagger> = \\<langle>|v\\<rangle>|", "by (simp add: bra_def dagger_def ket_vec_def)"], ["", "lemma bra_mat_on_vec:\n  fixes v::\"complex vec\" and A::\"complex mat\"\n  assumes \"dim_col A = dim_vec v\"\n  shows \"\\<langle>A * v| = \\<langle>v| * (A\\<^sup>\\<dagger>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>A * |v\\<rangle>| = \\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>);\n        j < dim_col (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>)\\<rbrakk>\n       \\<Longrightarrow> \\<langle>A * |v\\<rangle>| $$ (i, j) =\n                         (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>) $$\n                         (i, j)\n 2. dim_row \\<langle>A * |v\\<rangle>| =\n    dim_row (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>)\n 3. dim_col \\<langle>A * |v\\<rangle>| =\n    dim_col (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>)", "show \"dim_row \\<langle>A * v| = dim_row (\\<langle>v| * (A\\<^sup>\\<dagger>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row \\<langle>A * |v\\<rangle>| =\n    dim_row (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>)", "by (simp add: bra_def times_mat_def)"], ["proof (state)\nthis:\n  dim_row \\<langle>A * |v\\<rangle>| =\n  dim_row (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>)\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>);\n        j < dim_col (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>)\\<rbrakk>\n       \\<Longrightarrow> \\<langle>A * |v\\<rangle>| $$ (i, j) =\n                         (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>) $$\n                         (i, j)\n 2. dim_col \\<langle>A * |v\\<rangle>| =\n    dim_col (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>);\n        j < dim_col (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>)\\<rbrakk>\n       \\<Longrightarrow> \\<langle>A * |v\\<rangle>| $$ (i, j) =\n                         (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>) $$\n                         (i, j)\n 2. dim_col \\<langle>A * |v\\<rangle>| =\n    dim_col (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>)", "show \"dim_col \\<langle>A * v| = dim_col (\\<langle>v| * (A\\<^sup>\\<dagger>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col \\<langle>A * |v\\<rangle>| =\n    dim_col (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>)", "by (simp add: bra_def times_mat_def)"], ["proof (state)\nthis:\n  dim_col \\<langle>A * |v\\<rangle>| =\n  dim_col (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>);\n        j < dim_col (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>)\\<rbrakk>\n       \\<Longrightarrow> \\<langle>A * |v\\<rangle>| $$ (i, j) =\n                         (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>) $$\n                         (i, j)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>);\n        j < dim_col (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>)\\<rbrakk>\n       \\<Longrightarrow> \\<langle>A * |v\\<rangle>| $$ (i, j) =\n                         (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>) $$\n                         (i, j)", "fix i j::nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>);\n        j < dim_col (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>)\\<rbrakk>\n       \\<Longrightarrow> \\<langle>A * |v\\<rangle>| $$ (i, j) =\n                         (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>) $$\n                         (i, j)", "assume a1:\"i < dim_row (\\<langle>v| * (A\\<^sup>\\<dagger>))\" and a2:\"j < dim_col (\\<langle>v| * (A\\<^sup>\\<dagger>))\""], ["proof (state)\nthis:\n  i < dim_row (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>)\n  j < dim_col (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>);\n        j < dim_col (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>)\\<rbrakk>\n       \\<Longrightarrow> \\<langle>A * |v\\<rangle>| $$ (i, j) =\n                         (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>) $$\n                         (i, j)", "then"], ["proof (chain)\npicking this:\n  i < dim_row (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>)\n  j < dim_col (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>)", "have \"cnj((A * v) $$ (j,0)) = cnj (row A j \\<bullet> v)\""], ["proof (prove)\nusing this:\n  i < dim_row (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>)\n  j < dim_col (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>)\n\ngoal (1 subgoal):\n 1. cnj ((A * |v\\<rangle>) $$ (j, 0)) = cnj (row A j \\<bullet> v)", "using bra_def times_mat_def ket_vec_col ket_vec_def"], ["proof (prove)\nusing this:\n  i < dim_row (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>)\n  j < dim_col (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>)\n  \\<langle>?v| \\<equiv>\n  mat 1 (dim_row ?v) (\\<lambda>(i, j). cnj (?v $$ (j, i)))\n  ?A * ?B \\<equiv>\n  mat (dim_row ?A) (dim_col ?B)\n   (\\<lambda>(i, j). row ?A i \\<bullet> col ?B j)\n  col |?v\\<rangle> 0 = ?v\n  |?v\\<rangle> \\<equiv> mat (dim_vec ?v) 1 (\\<lambda>(i, j). ?v $ i)\n\ngoal (1 subgoal):\n 1. cnj ((A * |v\\<rangle>) $$ (j, 0)) = cnj (row A j \\<bullet> v)", "by simp"], ["proof (state)\nthis:\n  cnj ((A * |v\\<rangle>) $$ (j, 0)) = cnj (row A j \\<bullet> v)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>);\n        j < dim_col (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>)\\<rbrakk>\n       \\<Longrightarrow> \\<langle>A * |v\\<rangle>| $$ (i, j) =\n                         (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>) $$\n                         (i, j)", "also"], ["proof (state)\nthis:\n  cnj ((A * |v\\<rangle>) $$ (j, 0)) = cnj (row A j \\<bullet> v)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>);\n        j < dim_col (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>)\\<rbrakk>\n       \\<Longrightarrow> \\<langle>A * |v\\<rangle>| $$ (i, j) =\n                         (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>) $$\n                         (i, j)", "have f7:\"\\<dots>= (\\<Sum>i\\<in>{0 ..< dim_vec v}. cnj(v $ i) * cnj(A $$ (j,i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnj (row A j \\<bullet> v) =\n    (\\<Sum>i = 0..<dim_vec v. cnj (v $ i) * cnj (A $$ (j, i)))", "using row_def scalar_prod_def cnj_sum complex_cnj_mult mult.commute"], ["proof (prove)\nusing this:\n  row ?A ?i = vec (dim_col ?A) (\\<lambda>j. ?A $$ (?i, j))\n  ?v \\<bullet> ?w \\<equiv> \\<Sum>i = 0..<dim_vec ?w. ?v $ i * ?w $ i\n  cnj (sum ?f ?s) = (\\<Sum>x\\<in>?s. cnj (?f x))\n  cnj (?x * ?y) = cnj ?x * cnj ?y\n  ?a * ?b = ?b * ?a\n\ngoal (1 subgoal):\n 1. cnj (row A j \\<bullet> v) =\n    (\\<Sum>i = 0..<dim_vec v. cnj (v $ i) * cnj (A $$ (j, i)))", "by (smt assms index_vec lessThan_atLeast0 lessThan_iff sum.cong)"], ["proof (state)\nthis:\n  cnj (row A j \\<bullet> v) =\n  (\\<Sum>i = 0..<dim_vec v. cnj (v $ i) * cnj (A $$ (j, i)))\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>);\n        j < dim_col (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>)\\<rbrakk>\n       \\<Longrightarrow> \\<langle>A * |v\\<rangle>| $$ (i, j) =\n                         (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>) $$\n                         (i, j)", "moreover"], ["proof (state)\nthis:\n  cnj (row A j \\<bullet> v) =\n  (\\<Sum>i = 0..<dim_vec v. cnj (v $ i) * cnj (A $$ (j, i)))\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>);\n        j < dim_col (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>)\\<rbrakk>\n       \\<Longrightarrow> \\<langle>A * |v\\<rangle>| $$ (i, j) =\n                         (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>) $$\n                         (i, j)", "have f8:\"(row \\<langle>v| 0) \\<bullet> (col (A\\<^sup>\\<dagger>) j) = \n    vec (dim_vec v) (\\<lambda>i. cnj (v $ i)) \\<bullet> vec (dim_col A) (\\<lambda>i. cnj (A $$ (j,i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. row \\<langle>|v\\<rangle>| 0 \\<bullet> col A\\<^sup>\\<dagger> j =\n    vec (dim_vec v) (\\<lambda>i. cnj (v $ i)) \\<bullet>\n    vec (dim_col A) (\\<lambda>i. cnj (A $$ (j, i)))", "using a2"], ["proof (prove)\nusing this:\n  j < dim_col (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>)\n\ngoal (1 subgoal):\n 1. row \\<langle>|v\\<rangle>| 0 \\<bullet> col A\\<^sup>\\<dagger> j =\n    vec (dim_vec v) (\\<lambda>i. cnj (v $ i)) \\<bullet>\n    vec (dim_col A) (\\<lambda>i. cnj (A $$ (j, i)))", "by simp"], ["proof (state)\nthis:\n  row \\<langle>|v\\<rangle>| 0 \\<bullet> col A\\<^sup>\\<dagger> j =\n  vec (dim_vec v) (\\<lambda>i. cnj (v $ i)) \\<bullet>\n  vec (dim_col A) (\\<lambda>i. cnj (A $$ (j, i)))\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>);\n        j < dim_col (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>)\\<rbrakk>\n       \\<Longrightarrow> \\<langle>A * |v\\<rangle>| $$ (i, j) =\n                         (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>) $$\n                         (i, j)", "ultimately"], ["proof (chain)\npicking this:\n  cnj ((A * |v\\<rangle>) $$ (j, 0)) = cnj (row A j \\<bullet> v)\n  cnj (row A j \\<bullet> v) =\n  (\\<Sum>i = 0..<dim_vec v. cnj (v $ i) * cnj (A $$ (j, i)))\n  row \\<langle>|v\\<rangle>| 0 \\<bullet> col A\\<^sup>\\<dagger> j =\n  vec (dim_vec v) (\\<lambda>i. cnj (v $ i)) \\<bullet>\n  vec (dim_col A) (\\<lambda>i. cnj (A $$ (j, i)))", "have \"cnj((A * v) $$ (j,0)) = (row \\<langle>v| 0) \\<bullet> (col (A\\<^sup>\\<dagger>) j)\""], ["proof (prove)\nusing this:\n  cnj ((A * |v\\<rangle>) $$ (j, 0)) = cnj (row A j \\<bullet> v)\n  cnj (row A j \\<bullet> v) =\n  (\\<Sum>i = 0..<dim_vec v. cnj (v $ i) * cnj (A $$ (j, i)))\n  row \\<langle>|v\\<rangle>| 0 \\<bullet> col A\\<^sup>\\<dagger> j =\n  vec (dim_vec v) (\\<lambda>i. cnj (v $ i)) \\<bullet>\n  vec (dim_col A) (\\<lambda>i. cnj (A $$ (j, i)))\n\ngoal (1 subgoal):\n 1. cnj ((A * |v\\<rangle>) $$ (j, 0)) =\n    row \\<langle>|v\\<rangle>| 0 \\<bullet> col A\\<^sup>\\<dagger> j", "using assms scalar_prod_def"], ["proof (prove)\nusing this:\n  cnj ((A * |v\\<rangle>) $$ (j, 0)) = cnj (row A j \\<bullet> v)\n  cnj (row A j \\<bullet> v) =\n  (\\<Sum>i = 0..<dim_vec v. cnj (v $ i) * cnj (A $$ (j, i)))\n  row \\<langle>|v\\<rangle>| 0 \\<bullet> col A\\<^sup>\\<dagger> j =\n  vec (dim_vec v) (\\<lambda>i. cnj (v $ i)) \\<bullet>\n  vec (dim_col A) (\\<lambda>i. cnj (A $$ (j, i)))\n  dim_col A = dim_vec v\n  ?v \\<bullet> ?w \\<equiv> \\<Sum>i = 0..<dim_vec ?w. ?v $ i * ?w $ i\n\ngoal (1 subgoal):\n 1. cnj ((A * |v\\<rangle>) $$ (j, 0)) =\n    row \\<langle>|v\\<rangle>| 0 \\<bullet> col A\\<^sup>\\<dagger> j", "by (smt dim_vec index_vec lessThan_atLeast0 lessThan_iff sum.cong)"], ["proof (state)\nthis:\n  cnj ((A * |v\\<rangle>) $$ (j, 0)) =\n  row \\<langle>|v\\<rangle>| 0 \\<bullet> col A\\<^sup>\\<dagger> j\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>);\n        j < dim_col (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>)\\<rbrakk>\n       \\<Longrightarrow> \\<langle>A * |v\\<rangle>| $$ (i, j) =\n                         (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>) $$\n                         (i, j)", "then"], ["proof (chain)\npicking this:\n  cnj ((A * |v\\<rangle>) $$ (j, 0)) =\n  row \\<langle>|v\\<rangle>| 0 \\<bullet> col A\\<^sup>\\<dagger> j", "have \"\\<langle>A * v| $$ (0,j) = (\\<langle>v| * (A\\<^sup>\\<dagger>)) $$ (0,j)\""], ["proof (prove)\nusing this:\n  cnj ((A * |v\\<rangle>) $$ (j, 0)) =\n  row \\<langle>|v\\<rangle>| 0 \\<bullet> col A\\<^sup>\\<dagger> j\n\ngoal (1 subgoal):\n 1. \\<langle>A * |v\\<rangle>| $$ (0, j) =\n    (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>) $$ (0, j)", "using bra_def times_mat_def a2"], ["proof (prove)\nusing this:\n  cnj ((A * |v\\<rangle>) $$ (j, 0)) =\n  row \\<langle>|v\\<rangle>| 0 \\<bullet> col A\\<^sup>\\<dagger> j\n  \\<langle>?v| \\<equiv>\n  mat 1 (dim_row ?v) (\\<lambda>(i, j). cnj (?v $$ (j, i)))\n  ?A * ?B \\<equiv>\n  mat (dim_row ?A) (dim_col ?B)\n   (\\<lambda>(i, j). row ?A i \\<bullet> col ?B j)\n  j < dim_col (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>)\n\ngoal (1 subgoal):\n 1. \\<langle>A * |v\\<rangle>| $$ (0, j) =\n    (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>) $$ (0, j)", "by simp"], ["proof (state)\nthis:\n  \\<langle>A * |v\\<rangle>| $$ (0, j) =\n  (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>) $$ (0, j)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>);\n        j < dim_col (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>)\\<rbrakk>\n       \\<Longrightarrow> \\<langle>A * |v\\<rangle>| $$ (i, j) =\n                         (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>) $$\n                         (i, j)", "thus \"\\<langle>A * |v\\<rangle>| $$ (i, j) = (\\<langle>v| * (A\\<^sup>\\<dagger>)) $$ (i, j)\""], ["proof (prove)\nusing this:\n  \\<langle>A * |v\\<rangle>| $$ (0, j) =\n  (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>) $$ (0, j)\n\ngoal (1 subgoal):\n 1. \\<langle>A * |v\\<rangle>| $$ (i, j) =\n    (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>) $$ (i, j)", "using a1"], ["proof (prove)\nusing this:\n  \\<langle>A * |v\\<rangle>| $$ (0, j) =\n  (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>) $$ (0, j)\n  i < dim_row (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>)\n\ngoal (1 subgoal):\n 1. \\<langle>A * |v\\<rangle>| $$ (i, j) =\n    (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>) $$ (i, j)", "by (simp add: times_mat_def bra_def)"], ["proof (state)\nthis:\n  \\<langle>A * |v\\<rangle>| $$ (i, j) =\n  (\\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>) $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mat_on_ket:\n  fixes v:: \"complex vec\" and A:: \"complex mat\"\n  assumes \"dim_col A = dim_vec v\"\n  shows \"A * |v\\<rangle> = |col (A * v) 0\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A * |v\\<rangle> = |col (A * |v\\<rangle>) 0\\<rangle>", "using assms ket_vec_def"], ["proof (prove)\nusing this:\n  dim_col A = dim_vec v\n  |?v\\<rangle> \\<equiv> mat (dim_vec ?v) 1 (\\<lambda>(i, j). ?v $ i)\n\ngoal (1 subgoal):\n 1. A * |v\\<rangle> = |col (A * |v\\<rangle>) 0\\<rangle>", "by auto"], ["", "lemma dagger_of_mat_on_ket:\n  fixes v:: \"complex vec\" and A :: \"complex mat\"\n  assumes \"dim_col A = dim_vec v\"\n  shows \"(A * |v\\<rangle> )\\<^sup>\\<dagger> = \\<langle>v| * (A\\<^sup>\\<dagger>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A * |v\\<rangle>\\<^sup>\\<dagger> =\n    \\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>", "using assms"], ["proof (prove)\nusing this:\n  dim_col A = dim_vec v\n\ngoal (1 subgoal):\n 1. A * |v\\<rangle>\\<^sup>\\<dagger> =\n    \\<langle>|v\\<rangle>| * A\\<^sup>\\<dagger>", "by (metis bra_mat_on_vec dagger_of_ket_is_bra mat_on_ket)"], ["", "definition col_fst :: \"'a mat \\<Rightarrow> 'a vec\" where \n  \"col_fst A = vec (dim_row A) (\\<lambda> i. A $$ (i,0))\""], ["", "lemma col_fst_is_col [simp]:\n  \"col_fst M = col M 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col_fst M = col M 0", "by (simp add: col_def col_fst_def)"], ["", "text \\<open>\nWe need to declare @{term \"col_fst\"} as a coercion from matrices to vectors in order to see a column \nmatrix as a vector. \n\\<close>"], ["", "declare \n  [[coercion_delete ket_vec]]\n  [[coercion col_fst]]"], ["", "lemma unit_vec_to_col:\n  assumes \"dim_col A = n\" and \"i < n\"\n  shows \"col A i = A * |unit_vec n i\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col A i = col_fst (A * |unit_vec n i\\<rangle>)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ia.\n       ia < dim_vec (col_fst (A * |unit_vec n i\\<rangle>)) \\<Longrightarrow>\n       col A i $ ia = col_fst (A * |unit_vec n i\\<rangle>) $ ia\n 2. dim_vec (col A i) = dim_vec (col_fst (A * |unit_vec n i\\<rangle>))", "show \"dim_vec (col A i) = dim_vec (A * |unit_vec n i\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_vec (col A i) = dim_vec (col_fst (A * |unit_vec n i\\<rangle>))", "using col_def times_mat_def"], ["proof (prove)\nusing this:\n  col ?A ?j = vec (dim_row ?A) (\\<lambda>i. ?A $$ (i, ?j))\n  ?A * ?B \\<equiv>\n  mat (dim_row ?A) (dim_col ?B)\n   (\\<lambda>(i, j). row ?A i \\<bullet> col ?B j)\n\ngoal (1 subgoal):\n 1. dim_vec (col A i) = dim_vec (col_fst (A * |unit_vec n i\\<rangle>))", "by simp"], ["proof (state)\nthis:\n  dim_vec (col A i) = dim_vec (col_fst (A * |unit_vec n i\\<rangle>))\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec (col_fst (A * |unit_vec n i\\<rangle>)) \\<Longrightarrow>\n       col A i $ ia = col_fst (A * |unit_vec n i\\<rangle>) $ ia", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec (col_fst (A * |unit_vec n i\\<rangle>)) \\<Longrightarrow>\n       col A i $ ia = col_fst (A * |unit_vec n i\\<rangle>) $ ia", "fix j::nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec (col_fst (A * |unit_vec n i\\<rangle>)) \\<Longrightarrow>\n       col A i $ ia = col_fst (A * |unit_vec n i\\<rangle>) $ ia", "assume \"j < dim_vec (col_fst (A * |unit_vec n i\\<rangle>))\""], ["proof (state)\nthis:\n  j < dim_vec (col_fst (A * |unit_vec n i\\<rangle>))\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec (col_fst (A * |unit_vec n i\\<rangle>)) \\<Longrightarrow>\n       col A i $ ia = col_fst (A * |unit_vec n i\\<rangle>) $ ia", "then"], ["proof (chain)\npicking this:\n  j < dim_vec (col_fst (A * |unit_vec n i\\<rangle>))", "show \"col A i $ j = (A * |unit_vec n i\\<rangle>) $ j\""], ["proof (prove)\nusing this:\n  j < dim_vec (col_fst (A * |unit_vec n i\\<rangle>))\n\ngoal (1 subgoal):\n 1. col A i $ j = col_fst (A * |unit_vec n i\\<rangle>) $ j", "using assms times_mat_def ket_vec_def"], ["proof (prove)\nusing this:\n  j < dim_vec (col_fst (A * |unit_vec n i\\<rangle>))\n  dim_col A = n\n  i < n\n  ?A * ?B \\<equiv>\n  mat (dim_row ?A) (dim_col ?B)\n   (\\<lambda>(i, j). row ?A i \\<bullet> col ?B j)\n  |?v\\<rangle> \\<equiv> mat (dim_vec ?v) 1 (\\<lambda>(i, j). ?v $ i)\n\ngoal (1 subgoal):\n 1. col A i $ j = col_fst (A * |unit_vec n i\\<rangle>) $ j", "by (smt col_fst_is_col dim_col dim_col_mat(1) index_col index_mult_mat(1) index_mult_mat(2) \nindex_row(1) ket_vec_col less_numeral_extra(1) scalar_prod_right_unit)"], ["proof (state)\nthis:\n  col A i $ j = col_fst (A * |unit_vec n i\\<rangle>) $ j\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mult_ket_vec_is_ket_vec_of_mult:\n  fixes A::\"complex mat\" and v::\"complex vec\"\n  assumes \"dim_col A = dim_vec v\"\n  shows \"|A * |v\\<rangle> \\<rangle> = A * |v\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |col_fst (A * |v\\<rangle>)\\<rangle> = A * |v\\<rangle>", "using assms ket_vec_def"], ["proof (prove)\nusing this:\n  dim_col A = dim_vec v\n  |?v\\<rangle> \\<equiv> mat (dim_vec ?v) 1 (\\<lambda>(i, j). ?v $ i)\n\ngoal (1 subgoal):\n 1. |col_fst (A * |v\\<rangle>)\\<rangle> = A * |v\\<rangle>", "by (metis One_nat_def col_fst_is_col dim_col dim_col_mat(1) index_mult_mat(3) ket_vec_col less_Suc0 \nmat_col_eqI)"], ["", "lemma unitary_is_sq_length_preserving [simp]:\n  assumes \"unitary U\" and \"dim_vec v = dim_col U\"\n  shows \"\\<parallel>U * |v\\<rangle>\\<parallel>\\<^sup>2 = \\<parallel>v\\<parallel>\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>col_fst (U * |v\\<rangle>)\\<parallel>\\<^sup>2 =\n    \\<parallel>v\\<parallel>\\<^sup>2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<parallel>col_fst (U * |v\\<rangle>)\\<parallel>\\<^sup>2 =\n    \\<parallel>v\\<parallel>\\<^sup>2", "have \"\\<langle>U * |v\\<rangle>|U * |v\\<rangle> \\<rangle> = (\\<langle>|v\\<rangle>| * (U\\<^sup>\\<dagger>) * |U * |v\\<rangle>\\<rangle>) $$ (0,0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>col_fst (U * |v\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n    (\\<langle>|v\\<rangle>| * U\\<^sup>\\<dagger> *\n     |col_fst (U * |v\\<rangle>)\\<rangle>) $$\n    (0, 0)", "using assms(2) bra_mat_on_vec"], ["proof (prove)\nusing this:\n  dim_vec v = dim_col U\n  dim_col ?A = dim_vec ?v \\<Longrightarrow>\n  \\<langle>?A * |?v\\<rangle>| = \\<langle>|?v\\<rangle>| * ?A\\<^sup>\\<dagger>\n\ngoal (1 subgoal):\n 1. \\<langle>col_fst (U * |v\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n    (\\<langle>|v\\<rangle>| * U\\<^sup>\\<dagger> *\n     |col_fst (U * |v\\<rangle>)\\<rangle>) $$\n    (0, 0)", "by (metis inner_prod_with_times_mat mult_ket_vec_is_ket_vec_of_mult)"], ["proof (state)\nthis:\n  \\<langle>col_fst (U * |v\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n  (\\<langle>|v\\<rangle>| * U\\<^sup>\\<dagger> *\n   |col_fst (U * |v\\<rangle>)\\<rangle>) $$\n  (0, 0)\n\ngoal (1 subgoal):\n 1. \\<parallel>col_fst (U * |v\\<rangle>)\\<parallel>\\<^sup>2 =\n    \\<parallel>v\\<parallel>\\<^sup>2", "then"], ["proof (chain)\npicking this:\n  \\<langle>col_fst (U * |v\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n  (\\<langle>|v\\<rangle>| * U\\<^sup>\\<dagger> *\n   |col_fst (U * |v\\<rangle>)\\<rangle>) $$\n  (0, 0)", "have \"\\<langle>U * |v\\<rangle>|U * |v\\<rangle> \\<rangle> = (\\<langle>|v\\<rangle>| * (U\\<^sup>\\<dagger>) * (U * |v\\<rangle>)) $$ (0,0)\""], ["proof (prove)\nusing this:\n  \\<langle>col_fst (U * |v\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n  (\\<langle>|v\\<rangle>| * U\\<^sup>\\<dagger> *\n   |col_fst (U * |v\\<rangle>)\\<rangle>) $$\n  (0, 0)\n\ngoal (1 subgoal):\n 1. \\<langle>col_fst (U * |v\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n    (\\<langle>|v\\<rangle>| * U\\<^sup>\\<dagger> * (U * |v\\<rangle>)) $$\n    (0, 0)", "using assms(2) mult_ket_vec_is_ket_vec_of_mult"], ["proof (prove)\nusing this:\n  \\<langle>col_fst (U * |v\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n  (\\<langle>|v\\<rangle>| * U\\<^sup>\\<dagger> *\n   |col_fst (U * |v\\<rangle>)\\<rangle>) $$\n  (0, 0)\n  dim_vec v = dim_col U\n  dim_col ?A = dim_vec ?v \\<Longrightarrow>\n  |col_fst (?A * |?v\\<rangle>)\\<rangle> = ?A * |?v\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>col_fst (U * |v\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n    (\\<langle>|v\\<rangle>| * U\\<^sup>\\<dagger> * (U * |v\\<rangle>)) $$\n    (0, 0)", "by simp"], ["proof (state)\nthis:\n  \\<langle>col_fst (U * |v\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n  (\\<langle>|v\\<rangle>| * U\\<^sup>\\<dagger> * (U * |v\\<rangle>)) $$ (0, 0)\n\ngoal (1 subgoal):\n 1. \\<parallel>col_fst (U * |v\\<rangle>)\\<parallel>\\<^sup>2 =\n    \\<parallel>v\\<parallel>\\<^sup>2", "moreover"], ["proof (state)\nthis:\n  \\<langle>col_fst (U * |v\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n  (\\<langle>|v\\<rangle>| * U\\<^sup>\\<dagger> * (U * |v\\<rangle>)) $$ (0, 0)\n\ngoal (1 subgoal):\n 1. \\<parallel>col_fst (U * |v\\<rangle>)\\<parallel>\\<^sup>2 =\n    \\<parallel>v\\<parallel>\\<^sup>2", "have f1:\"dim_col \\<langle>|v\\<rangle>| = dim_vec v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col \\<langle>|v\\<rangle>| = dim_vec v", "using ket_vec_def bra_def"], ["proof (prove)\nusing this:\n  |?v\\<rangle> \\<equiv> mat (dim_vec ?v) 1 (\\<lambda>(i, j). ?v $ i)\n  \\<langle>?v| \\<equiv>\n  mat 1 (dim_row ?v) (\\<lambda>(i, j). cnj (?v $$ (j, i)))\n\ngoal (1 subgoal):\n 1. dim_col \\<langle>|v\\<rangle>| = dim_vec v", "by simp"], ["proof (state)\nthis:\n  dim_col \\<langle>|v\\<rangle>| = dim_vec v\n\ngoal (1 subgoal):\n 1. \\<parallel>col_fst (U * |v\\<rangle>)\\<parallel>\\<^sup>2 =\n    \\<parallel>v\\<parallel>\\<^sup>2", "moreover"], ["proof (state)\nthis:\n  dim_col \\<langle>|v\\<rangle>| = dim_vec v\n\ngoal (1 subgoal):\n 1. \\<parallel>col_fst (U * |v\\<rangle>)\\<parallel>\\<^sup>2 =\n    \\<parallel>v\\<parallel>\\<^sup>2", "have \"dim_row (U\\<^sup>\\<dagger>) = dim_vec v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row U\\<^sup>\\<dagger> = dim_vec v", "using assms(2)"], ["proof (prove)\nusing this:\n  dim_vec v = dim_col U\n\ngoal (1 subgoal):\n 1. dim_row U\\<^sup>\\<dagger> = dim_vec v", "by simp"], ["proof (state)\nthis:\n  dim_row U\\<^sup>\\<dagger> = dim_vec v\n\ngoal (1 subgoal):\n 1. \\<parallel>col_fst (U * |v\\<rangle>)\\<parallel>\\<^sup>2 =\n    \\<parallel>v\\<parallel>\\<^sup>2", "ultimately"], ["proof (chain)\npicking this:\n  \\<langle>col_fst (U * |v\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n  (\\<langle>|v\\<rangle>| * U\\<^sup>\\<dagger> * (U * |v\\<rangle>)) $$ (0, 0)\n  dim_col \\<langle>|v\\<rangle>| = dim_vec v\n  dim_row U\\<^sup>\\<dagger> = dim_vec v", "have \"\\<langle>U * |v\\<rangle>|U * |v\\<rangle> \\<rangle> = (\\<langle>|v\\<rangle>| * ((U\\<^sup>\\<dagger>) * U) * |v\\<rangle>) $$ (0,0)\""], ["proof (prove)\nusing this:\n  \\<langle>col_fst (U * |v\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n  (\\<langle>|v\\<rangle>| * U\\<^sup>\\<dagger> * (U * |v\\<rangle>)) $$ (0, 0)\n  dim_col \\<langle>|v\\<rangle>| = dim_vec v\n  dim_row U\\<^sup>\\<dagger> = dim_vec v\n\ngoal (1 subgoal):\n 1. \\<langle>col_fst (U * |v\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n    (\\<langle>|v\\<rangle>| * (U\\<^sup>\\<dagger> * U) * |v\\<rangle>) $$\n    (0, 0)", "using assoc_mult_mat"], ["proof (prove)\nusing this:\n  \\<langle>col_fst (U * |v\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n  (\\<langle>|v\\<rangle>| * U\\<^sup>\\<dagger> * (U * |v\\<rangle>)) $$ (0, 0)\n  dim_col \\<langle>|v\\<rangle>| = dim_vec v\n  dim_row U\\<^sup>\\<dagger> = dim_vec v\n  \\<lbrakk>?A \\<in> carrier_mat ?n\\<^sub>1 ?n\\<^sub>2;\n   ?B \\<in> carrier_mat ?n\\<^sub>2 ?n\\<^sub>3;\n   ?C \\<in> carrier_mat ?n\\<^sub>3 ?n\\<^sub>4\\<rbrakk>\n  \\<Longrightarrow> ?A * ?B * ?C = ?A * (?B * ?C)\n\ngoal (1 subgoal):\n 1. \\<langle>col_fst (U * |v\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n    (\\<langle>|v\\<rangle>| * (U\\<^sup>\\<dagger> * U) * |v\\<rangle>) $$\n    (0, 0)", "by(smt carrier_mat_triv dim_row_mat(1) dagger_def ket_vec_def mat_carrier times_mat_def)"], ["proof (state)\nthis:\n  \\<langle>col_fst (U * |v\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n  (\\<langle>|v\\<rangle>| * (U\\<^sup>\\<dagger> * U) * |v\\<rangle>) $$ (0, 0)\n\ngoal (1 subgoal):\n 1. \\<parallel>col_fst (U * |v\\<rangle>)\\<parallel>\\<^sup>2 =\n    \\<parallel>v\\<parallel>\\<^sup>2", "then"], ["proof (chain)\npicking this:\n  \\<langle>col_fst (U * |v\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n  (\\<langle>|v\\<rangle>| * (U\\<^sup>\\<dagger> * U) * |v\\<rangle>) $$ (0, 0)", "have \"\\<langle>U * |v\\<rangle>|U * |v\\<rangle> \\<rangle> = (\\<langle>|v\\<rangle>| * |v\\<rangle>) $$ (0,0)\""], ["proof (prove)\nusing this:\n  \\<langle>col_fst (U * |v\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n  (\\<langle>|v\\<rangle>| * (U\\<^sup>\\<dagger> * U) * |v\\<rangle>) $$ (0, 0)\n\ngoal (1 subgoal):\n 1. \\<langle>col_fst (U * |v\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n    (\\<langle>|v\\<rangle>| * |v\\<rangle>) $$ (0, 0)", "using assms f1 unitary_def"], ["proof (prove)\nusing this:\n  \\<langle>col_fst (U * |v\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n  (\\<langle>|v\\<rangle>| * (U\\<^sup>\\<dagger> * U) * |v\\<rangle>) $$ (0, 0)\n  unitary U\n  dim_vec v = dim_col U\n  dim_col \\<langle>|v\\<rangle>| = dim_vec v\n  unitary ?M \\<equiv>\n  ?M\\<^sup>\\<dagger> * ?M = 1\\<^sub>m (dim_col ?M) \\<and>\n  ?M * ?M\\<^sup>\\<dagger> = 1\\<^sub>m (dim_row ?M)\n\ngoal (1 subgoal):\n 1. \\<langle>col_fst (U * |v\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n    (\\<langle>|v\\<rangle>| * |v\\<rangle>) $$ (0, 0)", "by simp"], ["proof (state)\nthis:\n  \\<langle>col_fst (U * |v\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n  (\\<langle>|v\\<rangle>| * |v\\<rangle>) $$ (0, 0)\n\ngoal (1 subgoal):\n 1. \\<parallel>col_fst (U * |v\\<rangle>)\\<parallel>\\<^sup>2 =\n    \\<parallel>v\\<parallel>\\<^sup>2", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>col_fst (U * |v\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n  (\\<langle>|v\\<rangle>| * |v\\<rangle>) $$ (0, 0)\n\ngoal (1 subgoal):\n 1. \\<parallel>col_fst (U * |v\\<rangle>)\\<parallel>\\<^sup>2 =\n    \\<parallel>v\\<parallel>\\<^sup>2", "using cpx_vec_length_inner_prod"], ["proof (prove)\nusing this:\n  \\<langle>col_fst (U * |v\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n  (\\<langle>|v\\<rangle>| * |v\\<rangle>) $$ (0, 0)\n  complex_of_real (\\<parallel>?v\\<parallel>\\<^sup>2) =\n  \\<langle>?v|?v\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<parallel>col_fst (U * |v\\<rangle>)\\<parallel>\\<^sup>2 =\n    \\<parallel>v\\<parallel>\\<^sup>2", "by(metis Re_complex_of_real inner_prod_with_times_mat)"], ["proof (state)\nthis:\n  \\<parallel>col_fst (U * |v\\<rangle>)\\<parallel>\\<^sup>2 =\n  \\<parallel>v\\<parallel>\\<^sup>2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma col_ket_vec [simp]:\n  assumes \"dim_col M = 1\"\n  shows \"|col M 0\\<rangle> = M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |col M 0\\<rangle> = M", "using eq_matI assms ket_vec_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>i j.\n              \\<lbrakk>i < dim_row ?B; j < dim_col ?B\\<rbrakk>\n              \\<Longrightarrow> ?A $$ (i, j) = ?B $$ (i, j);\n   dim_row ?A = dim_row ?B; dim_col ?A = dim_col ?B\\<rbrakk>\n  \\<Longrightarrow> ?A = ?B\n  dim_col M = 1\n  |?v\\<rangle> \\<equiv> mat (dim_vec ?v) 1 (\\<lambda>(i, j). ?v $ i)\n\ngoal (1 subgoal):\n 1. |col M 0\\<rangle> = M", "by auto"], ["", "lemma state_col_ket_vec:\n  assumes \"state 1 v\"\n  shows \"state 1 |col v 0\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. state 1 |col v 0\\<rangle>", "using assms"], ["proof (prove)\nusing this:\n  state 1 v\n\ngoal (1 subgoal):\n 1. state 1 |col v 0\\<rangle>", "by (simp add: state_def)"], ["", "lemma col_ket_vec_index [simp]:\n  assumes \"i < dim_row v\"\n  shows \"|col v 0\\<rangle> $$ (i,0) = v $$ (i,0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |col v 0\\<rangle> $$ (i, 0) = v $$ (i, 0)", "using assms ket_vec_def"], ["proof (prove)\nusing this:\n  i < dim_row v\n  |?v\\<rangle> \\<equiv> mat (dim_vec ?v) 1 (\\<lambda>(i, j). ?v $ i)\n\ngoal (1 subgoal):\n 1. |col v 0\\<rangle> $$ (i, 0) = v $$ (i, 0)", "by (simp add: col_def)"], ["", "lemma col_index_of_mat_col [simp]:\n  assumes \"dim_col v = 1\" and \"i < dim_row v\"\n  shows \"col v 0 $ i = v $$ (i,0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col v 0 $ i = v $$ (i, 0)", "using assms"], ["proof (prove)\nusing this:\n  dim_col v = 1\n  i < dim_row v\n\ngoal (1 subgoal):\n 1. col v 0 $ i = v $$ (i, 0)", "by simp"], ["", "lemma unitary_is_sq_length_preserving_bis [simp]:\n  assumes \"unitary U\" and \"dim_row v = dim_col U\" and \"dim_col v = 1\"\n  shows \"\\<parallel>col (U * v) 0\\<parallel>\\<^sup>2 = \\<parallel>col v 0\\<parallel>\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>col (U * v) 0\\<parallel>\\<^sup>2 =\n    \\<parallel>col v 0\\<parallel>\\<^sup>2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<parallel>col (U * v) 0\\<parallel>\\<^sup>2 =\n    \\<parallel>col v 0\\<parallel>\\<^sup>2", "have \"dim_vec (col v 0) = dim_col U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_vec (col v 0) = dim_col U", "using assms(2)"], ["proof (prove)\nusing this:\n  dim_row v = dim_col U\n\ngoal (1 subgoal):\n 1. dim_vec (col v 0) = dim_col U", "by simp"], ["proof (state)\nthis:\n  dim_vec (col v 0) = dim_col U\n\ngoal (1 subgoal):\n 1. \\<parallel>col (U * v) 0\\<parallel>\\<^sup>2 =\n    \\<parallel>col v 0\\<parallel>\\<^sup>2", "then"], ["proof (chain)\npicking this:\n  dim_vec (col v 0) = dim_col U", "have \"\\<parallel>col_fst (U * |col v 0\\<rangle>)\\<parallel>\\<^sup>2 = \\<parallel>col v 0\\<parallel>\\<^sup>2\""], ["proof (prove)\nusing this:\n  dim_vec (col v 0) = dim_col U\n\ngoal (1 subgoal):\n 1. \\<parallel>col_fst (U * |col v 0\\<rangle>)\\<parallel>\\<^sup>2 =\n    \\<parallel>col v 0\\<parallel>\\<^sup>2", "using unitary_is_sq_length_preserving[of \"U\" \"col v 0\"] assms(1)"], ["proof (prove)\nusing this:\n  dim_vec (col v 0) = dim_col U\n  \\<lbrakk>unitary U; dim_vec (col v 0) = dim_col U\\<rbrakk>\n  \\<Longrightarrow> \\<parallel>col_fst\n                                (U * |col v 0\\<rangle>)\\<parallel>\\<^sup>2 =\n                    \\<parallel>col v 0\\<parallel>\\<^sup>2\n  unitary U\n\ngoal (1 subgoal):\n 1. \\<parallel>col_fst (U * |col v 0\\<rangle>)\\<parallel>\\<^sup>2 =\n    \\<parallel>col v 0\\<parallel>\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  \\<parallel>col_fst (U * |col v 0\\<rangle>)\\<parallel>\\<^sup>2 =\n  \\<parallel>col v 0\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<parallel>col (U * v) 0\\<parallel>\\<^sup>2 =\n    \\<parallel>col v 0\\<parallel>\\<^sup>2", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<parallel>col_fst (U * |col v 0\\<rangle>)\\<parallel>\\<^sup>2 =\n  \\<parallel>col v 0\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<parallel>col (U * v) 0\\<parallel>\\<^sup>2 =\n    \\<parallel>col v 0\\<parallel>\\<^sup>2", "using assms(3)"], ["proof (prove)\nusing this:\n  \\<parallel>col_fst (U * |col v 0\\<rangle>)\\<parallel>\\<^sup>2 =\n  \\<parallel>col v 0\\<parallel>\\<^sup>2\n  dim_col v = 1\n\ngoal (1 subgoal):\n 1. \\<parallel>col (U * v) 0\\<parallel>\\<^sup>2 =\n    \\<parallel>col v 0\\<parallel>\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  \\<parallel>col (U * v) 0\\<parallel>\\<^sup>2 =\n  \\<parallel>col v 0\\<parallel>\\<^sup>2\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open> \nA unitary matrix is length-preserving, i.e. it acts on a vector to produce another vector of the \nsame length. \n\\<close>"], ["", "lemma unitary_is_length_preserving_bis [simp]:\n  fixes U::\"complex mat\" and v::\"complex mat\"\n  assumes \"unitary U\" and \"dim_row v = dim_col U\" and \"dim_col v = 1\"\n  shows \"\\<parallel>col (U * v) 0\\<parallel> = \\<parallel>col v 0\\<parallel>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>col (U * v) 0\\<parallel> = \\<parallel>col v 0\\<parallel>", "using assms unitary_is_sq_length_preserving_bis"], ["proof (prove)\nusing this:\n  unitary U\n  dim_row v = dim_col U\n  dim_col v = 1\n  \\<lbrakk>unitary ?U; dim_row ?v = dim_col ?U; dim_col ?v = 1\\<rbrakk>\n  \\<Longrightarrow> \\<parallel>col (?U * ?v) 0\\<parallel>\\<^sup>2 =\n                    \\<parallel>col ?v 0\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<parallel>col (U * v) 0\\<parallel> = \\<parallel>col v 0\\<parallel>", "by (metis cpx_vec_length_inner_prod inner_prod_csqrt of_real_hom.injectivity)"], ["", "lemma unitary_is_length_preserving [simp]:\n  fixes U:: \"complex mat\" and v:: \"complex vec\"\n  assumes \"unitary U\" and \"dim_vec v = dim_col U\"\n  shows \"\\<parallel>U * |v\\<rangle>\\<parallel> = \\<parallel>v\\<parallel>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>col_fst (U * |v\\<rangle>)\\<parallel> =\n    \\<parallel>v\\<parallel>", "using assms unitary_is_sq_length_preserving"], ["proof (prove)\nusing this:\n  unitary U\n  dim_vec v = dim_col U\n  \\<lbrakk>unitary ?U; dim_vec ?v = dim_col ?U\\<rbrakk>\n  \\<Longrightarrow> \\<parallel>col_fst\n                                (?U * |?v\\<rangle>)\\<parallel>\\<^sup>2 =\n                    \\<parallel>?v\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<parallel>col_fst (U * |v\\<rangle>)\\<parallel> =\n    \\<parallel>v\\<parallel>", "by (metis cpx_vec_length_inner_prod inner_prod_csqrt of_real_hom.injectivity)"], ["", "subsubsection \"Length-Preserving Matrices are Unitary\""], ["", "lemma inverts_mat_sym:\n  fixes A B:: \"complex mat\"\n  assumes \"inverts_mat A B\" and \"dim_row B = dim_col A\" and \"square_mat B\"\n  shows \"inverts_mat B A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inverts_mat B A", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. inverts_mat B A", "define n where d0:\"n = dim_row B\""], ["proof (state)\nthis:\n  n = dim_row B\n\ngoal (1 subgoal):\n 1. inverts_mat B A", "have \"A * B = 1\\<^sub>m (dim_row A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A * B = 1\\<^sub>m (dim_row A)", "using assms(1) inverts_mat_def"], ["proof (prove)\nusing this:\n  inverts_mat A B\n  inverts_mat ?A ?B \\<equiv> ?A * ?B = 1\\<^sub>m (dim_row ?A)\n\ngoal (1 subgoal):\n 1. A * B = 1\\<^sub>m (dim_row A)", "by auto"], ["proof (state)\nthis:\n  A * B = 1\\<^sub>m (dim_row A)\n\ngoal (1 subgoal):\n 1. inverts_mat B A", "moreover"], ["proof (state)\nthis:\n  A * B = 1\\<^sub>m (dim_row A)\n\ngoal (1 subgoal):\n 1. inverts_mat B A", "have \"dim_col B = dim_col (A * B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col B = dim_col (A * B)", "using times_mat_def"], ["proof (prove)\nusing this:\n  ?A * ?B \\<equiv>\n  mat (dim_row ?A) (dim_col ?B)\n   (\\<lambda>(i, j). row ?A i \\<bullet> col ?B j)\n\ngoal (1 subgoal):\n 1. dim_col B = dim_col (A * B)", "by simp"], ["proof (state)\nthis:\n  dim_col B = dim_col (A * B)\n\ngoal (1 subgoal):\n 1. inverts_mat B A", "ultimately"], ["proof (chain)\npicking this:\n  A * B = 1\\<^sub>m (dim_row A)\n  dim_col B = dim_col (A * B)", "have \"dim_col B = dim_row A\""], ["proof (prove)\nusing this:\n  A * B = 1\\<^sub>m (dim_row A)\n  dim_col B = dim_col (A * B)\n\ngoal (1 subgoal):\n 1. dim_col B = dim_row A", "by simp"], ["proof (state)\nthis:\n  dim_col B = dim_row A\n\ngoal (1 subgoal):\n 1. inverts_mat B A", "then"], ["proof (chain)\npicking this:\n  dim_col B = dim_row A", "have c0:\"A \\<in> carrier_mat n n\""], ["proof (prove)\nusing this:\n  dim_col B = dim_row A\n\ngoal (1 subgoal):\n 1. A \\<in> carrier_mat n n", "using assms(2,3) d0"], ["proof (prove)\nusing this:\n  dim_col B = dim_row A\n  dim_row B = dim_col A\n  square_mat B\n  n = dim_row B\n\ngoal (1 subgoal):\n 1. A \\<in> carrier_mat n n", "by auto"], ["proof (state)\nthis:\n  A \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. inverts_mat B A", "have c1:\"B \\<in> carrier_mat n n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<in> carrier_mat n n", "using assms(3) d0"], ["proof (prove)\nusing this:\n  square_mat B\n  n = dim_row B\n\ngoal (1 subgoal):\n 1. B \\<in> carrier_mat n n", "by auto"], ["proof (state)\nthis:\n  B \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. inverts_mat B A", "have f0:\"A * B = 1\\<^sub>m n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A * B = 1\\<^sub>m n", "using inverts_mat_def c0 c1 assms(1)"], ["proof (prove)\nusing this:\n  inverts_mat ?A ?B \\<equiv> ?A * ?B = 1\\<^sub>m (dim_row ?A)\n  A \\<in> carrier_mat n n\n  B \\<in> carrier_mat n n\n  inverts_mat A B\n\ngoal (1 subgoal):\n 1. A * B = 1\\<^sub>m n", "by auto"], ["proof (state)\nthis:\n  A * B = 1\\<^sub>m n\n\ngoal (1 subgoal):\n 1. inverts_mat B A", "have f1:\"det B \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. det B \\<noteq> 0", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. det B = 0 \\<Longrightarrow> False", "assume \"det B = 0\""], ["proof (state)\nthis:\n  det B = 0\n\ngoal (1 subgoal):\n 1. det B = 0 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  det B = 0", "have \"\\<exists>v. v \\<in> carrier_vec n \\<and> v \\<noteq> 0\\<^sub>v n \\<and> B *\\<^sub>v v = 0\\<^sub>v n\""], ["proof (prove)\nusing this:\n  det B = 0\n\ngoal (1 subgoal):\n 1. \\<exists>v.\n       v \\<in> carrier_vec n \\<and>\n       v \\<noteq> 0\\<^sub>v n \\<and> B *\\<^sub>v v = 0\\<^sub>v n", "using det_0_iff_vec_prod_zero assms(3) c1"], ["proof (prove)\nusing this:\n  det B = 0\n  ?A \\<in> carrier_mat ?n ?n \\<Longrightarrow>\n  (det ?A = (0::?'a)) =\n  (\\<exists>v.\n      v \\<in> carrier_vec ?n \\<and>\n      v \\<noteq> 0\\<^sub>v ?n \\<and> ?A *\\<^sub>v v = 0\\<^sub>v ?n)\n  square_mat B\n  B \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. \\<exists>v.\n       v \\<in> carrier_vec n \\<and>\n       v \\<noteq> 0\\<^sub>v n \\<and> B *\\<^sub>v v = 0\\<^sub>v n", "by blast"], ["proof (state)\nthis:\n  \\<exists>v.\n     v \\<in> carrier_vec n \\<and>\n     v \\<noteq> 0\\<^sub>v n \\<and> B *\\<^sub>v v = 0\\<^sub>v n\n\ngoal (1 subgoal):\n 1. det B = 0 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>v.\n     v \\<in> carrier_vec n \\<and>\n     v \\<noteq> 0\\<^sub>v n \\<and> B *\\<^sub>v v = 0\\<^sub>v n", "obtain v where d1:\"v \\<in> carrier_vec n \\<and> v \\<noteq> 0\\<^sub>v n \\<and> B *\\<^sub>v v = 0\\<^sub>v n\""], ["proof (prove)\nusing this:\n  \\<exists>v.\n     v \\<in> carrier_vec n \\<and>\n     v \\<noteq> 0\\<^sub>v n \\<and> B *\\<^sub>v v = 0\\<^sub>v n\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        v \\<in> carrier_vec n \\<and>\n        v \\<noteq> 0\\<^sub>v n \\<and>\n        B *\\<^sub>v v = 0\\<^sub>v n \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  v \\<in> carrier_vec n \\<and>\n  v \\<noteq> 0\\<^sub>v n \\<and> B *\\<^sub>v v = 0\\<^sub>v n\n\ngoal (1 subgoal):\n 1. det B = 0 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  v \\<in> carrier_vec n \\<and>\n  v \\<noteq> 0\\<^sub>v n \\<and> B *\\<^sub>v v = 0\\<^sub>v n", "have d2:\"dim_vec v = n\""], ["proof (prove)\nusing this:\n  v \\<in> carrier_vec n \\<and>\n  v \\<noteq> 0\\<^sub>v n \\<and> B *\\<^sub>v v = 0\\<^sub>v n\n\ngoal (1 subgoal):\n 1. dim_vec v = n", "by simp"], ["proof (state)\nthis:\n  dim_vec v = n\n\ngoal (1 subgoal):\n 1. det B = 0 \\<Longrightarrow> False", "have \"B * |v\\<rangle> = |0\\<^sub>v n\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B * |v\\<rangle> = |0\\<^sub>v n\\<rangle>", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row |0\\<^sub>v n\\<rangle>;\n        j < dim_col |0\\<^sub>v n\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> (B * |v\\<rangle>) $$ (i, j) =\n                         |0\\<^sub>v n\\<rangle> $$ (i, j)\n 2. dim_row (B * |v\\<rangle>) = dim_row |0\\<^sub>v n\\<rangle>\n 3. dim_col (B * |v\\<rangle>) = dim_col |0\\<^sub>v n\\<rangle>", "show \"dim_row (B * |v\\<rangle>) = dim_row |0\\<^sub>v n\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row (B * |v\\<rangle>) = dim_row |0\\<^sub>v n\\<rangle>", "using ket_vec_def d0"], ["proof (prove)\nusing this:\n  |?v\\<rangle> \\<equiv> mat (dim_vec ?v) 1 (\\<lambda>(i, j). ?v $ i)\n  n = dim_row B\n\ngoal (1 subgoal):\n 1. dim_row (B * |v\\<rangle>) = dim_row |0\\<^sub>v n\\<rangle>", "by simp"], ["proof (state)\nthis:\n  dim_row (B * |v\\<rangle>) = dim_row |0\\<^sub>v n\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row |0\\<^sub>v n\\<rangle>;\n        j < dim_col |0\\<^sub>v n\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> (B * |v\\<rangle>) $$ (i, j) =\n                         |0\\<^sub>v n\\<rangle> $$ (i, j)\n 2. dim_col (B * |v\\<rangle>) = dim_col |0\\<^sub>v n\\<rangle>", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row |0\\<^sub>v n\\<rangle>;\n        j < dim_col |0\\<^sub>v n\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> (B * |v\\<rangle>) $$ (i, j) =\n                         |0\\<^sub>v n\\<rangle> $$ (i, j)\n 2. dim_col (B * |v\\<rangle>) = dim_col |0\\<^sub>v n\\<rangle>", "show \"dim_col (B * |v\\<rangle>) = dim_col |0\\<^sub>v n\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col (B * |v\\<rangle>) = dim_col |0\\<^sub>v n\\<rangle>", "using ket_vec_def d0"], ["proof (prove)\nusing this:\n  |?v\\<rangle> \\<equiv> mat (dim_vec ?v) 1 (\\<lambda>(i, j). ?v $ i)\n  n = dim_row B\n\ngoal (1 subgoal):\n 1. dim_col (B * |v\\<rangle>) = dim_col |0\\<^sub>v n\\<rangle>", "by simp"], ["proof (state)\nthis:\n  dim_col (B * |v\\<rangle>) = dim_col |0\\<^sub>v n\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row |0\\<^sub>v n\\<rangle>;\n        j < dim_col |0\\<^sub>v n\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> (B * |v\\<rangle>) $$ (i, j) =\n                         |0\\<^sub>v n\\<rangle> $$ (i, j)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row |0\\<^sub>v n\\<rangle>;\n        j < dim_col |0\\<^sub>v n\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> (B * |v\\<rangle>) $$ (i, j) =\n                         |0\\<^sub>v n\\<rangle> $$ (i, j)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row |0\\<^sub>v n\\<rangle>;\n        j < dim_col |0\\<^sub>v n\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> (B * |v\\<rangle>) $$ (i, j) =\n                         |0\\<^sub>v n\\<rangle> $$ (i, j)", "assume \"i < dim_row |0\\<^sub>v n\\<rangle>\" and \"j < dim_col |0\\<^sub>v n\\<rangle>\""], ["proof (state)\nthis:\n  i < dim_row |0\\<^sub>v n\\<rangle>\n  j < dim_col |0\\<^sub>v n\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row |0\\<^sub>v n\\<rangle>;\n        j < dim_col |0\\<^sub>v n\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> (B * |v\\<rangle>) $$ (i, j) =\n                         |0\\<^sub>v n\\<rangle> $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i < dim_row |0\\<^sub>v n\\<rangle>\n  j < dim_col |0\\<^sub>v n\\<rangle>", "have f2:\"i < n \\<and> j = 0\""], ["proof (prove)\nusing this:\n  i < dim_row |0\\<^sub>v n\\<rangle>\n  j < dim_col |0\\<^sub>v n\\<rangle>\n\ngoal (1 subgoal):\n 1. i < n \\<and> j = 0", "using ket_vec_def"], ["proof (prove)\nusing this:\n  i < dim_row |0\\<^sub>v n\\<rangle>\n  j < dim_col |0\\<^sub>v n\\<rangle>\n  |?v\\<rangle> \\<equiv> mat (dim_vec ?v) 1 (\\<lambda>(i, j). ?v $ i)\n\ngoal (1 subgoal):\n 1. i < n \\<and> j = 0", "by simp"], ["proof (state)\nthis:\n  i < n \\<and> j = 0\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row |0\\<^sub>v n\\<rangle>;\n        j < dim_col |0\\<^sub>v n\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> (B * |v\\<rangle>) $$ (i, j) =\n                         |0\\<^sub>v n\\<rangle> $$ (i, j)", "moreover"], ["proof (state)\nthis:\n  i < n \\<and> j = 0\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row |0\\<^sub>v n\\<rangle>;\n        j < dim_col |0\\<^sub>v n\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> (B * |v\\<rangle>) $$ (i, j) =\n                         |0\\<^sub>v n\\<rangle> $$ (i, j)", "have \"vec (dim_row B) (($) v) = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vec (dim_row B) (($) v) = v", "using d0 d1"], ["proof (prove)\nusing this:\n  n = dim_row B\n  v \\<in> carrier_vec n \\<and>\n  v \\<noteq> 0\\<^sub>v n \\<and> B *\\<^sub>v v = 0\\<^sub>v n\n\ngoal (1 subgoal):\n 1. vec (dim_row B) (($) v) = v", "by auto"], ["proof (state)\nthis:\n  vec (dim_row B) (($) v) = v\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row |0\\<^sub>v n\\<rangle>;\n        j < dim_col |0\\<^sub>v n\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> (B * |v\\<rangle>) $$ (i, j) =\n                         |0\\<^sub>v n\\<rangle> $$ (i, j)", "moreover"], ["proof (state)\nthis:\n  vec (dim_row B) (($) v) = v\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row |0\\<^sub>v n\\<rangle>;\n        j < dim_col |0\\<^sub>v n\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> (B * |v\\<rangle>) $$ (i, j) =\n                         |0\\<^sub>v n\\<rangle> $$ (i, j)", "have \"(B *\\<^sub>v v) $ i = (\\<Sum>ia = 0..<dim_row B. row B i $ ia * v $ ia)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (B *\\<^sub>v v) $ i = (\\<Sum>ia = 0..<dim_row B. row B i $ ia * v $ ia)", "using d0 d2 f2"], ["proof (prove)\nusing this:\n  n = dim_row B\n  dim_vec v = n\n  i < n \\<and> j = 0\n\ngoal (1 subgoal):\n 1. (B *\\<^sub>v v) $ i = (\\<Sum>ia = 0..<dim_row B. row B i $ ia * v $ ia)", "by (auto simp add: scalar_prod_def)"], ["proof (state)\nthis:\n  (B *\\<^sub>v v) $ i = (\\<Sum>ia = 0..<dim_row B. row B i $ ia * v $ ia)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row |0\\<^sub>v n\\<rangle>;\n        j < dim_col |0\\<^sub>v n\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> (B * |v\\<rangle>) $$ (i, j) =\n                         |0\\<^sub>v n\\<rangle> $$ (i, j)", "ultimately"], ["proof (chain)\npicking this:\n  i < n \\<and> j = 0\n  vec (dim_row B) (($) v) = v\n  (B *\\<^sub>v v) $ i = (\\<Sum>ia = 0..<dim_row B. row B i $ ia * v $ ia)", "show \"(B * |v\\<rangle>) $$ (i, j) = |0\\<^sub>v n\\<rangle> $$ (i, j)\""], ["proof (prove)\nusing this:\n  i < n \\<and> j = 0\n  vec (dim_row B) (($) v) = v\n  (B *\\<^sub>v v) $ i = (\\<Sum>ia = 0..<dim_row B. row B i $ ia * v $ ia)\n\ngoal (1 subgoal):\n 1. (B * |v\\<rangle>) $$ (i, j) = |0\\<^sub>v n\\<rangle> $$ (i, j)", "using ket_vec_def d0 d1 times_mat_def mult_mat_vec_def"], ["proof (prove)\nusing this:\n  i < n \\<and> j = 0\n  vec (dim_row B) (($) v) = v\n  (B *\\<^sub>v v) $ i = (\\<Sum>ia = 0..<dim_row B. row B i $ ia * v $ ia)\n  |?v\\<rangle> \\<equiv> mat (dim_vec ?v) 1 (\\<lambda>(i, j). ?v $ i)\n  n = dim_row B\n  v \\<in> carrier_vec n \\<and>\n  v \\<noteq> 0\\<^sub>v n \\<and> B *\\<^sub>v v = 0\\<^sub>v n\n  ?A * ?B \\<equiv>\n  mat (dim_row ?A) (dim_col ?B)\n   (\\<lambda>(i, j). row ?A i \\<bullet> col ?B j)\n  ?A *\\<^sub>v ?v \\<equiv>\n  vec (dim_row ?A) (\\<lambda>i. row ?A i \\<bullet> ?v)\n\ngoal (1 subgoal):\n 1. (B * |v\\<rangle>) $$ (i, j) = |0\\<^sub>v n\\<rangle> $$ (i, j)", "by (auto simp add: scalar_prod_def)"], ["proof (state)\nthis:\n  (B * |v\\<rangle>) $$ (i, j) = |0\\<^sub>v n\\<rangle> $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  B * |v\\<rangle> = |0\\<^sub>v n\\<rangle>\n\ngoal (1 subgoal):\n 1. det B = 0 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  B * |v\\<rangle> = |0\\<^sub>v n\\<rangle>\n\ngoal (1 subgoal):\n 1. det B = 0 \\<Longrightarrow> False", "have \"|v\\<rangle> \\<in> carrier_mat n 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |v\\<rangle> \\<in> carrier_mat n 1", "using d2 ket_vec_def"], ["proof (prove)\nusing this:\n  dim_vec v = n\n  |?v\\<rangle> \\<equiv> mat (dim_vec ?v) 1 (\\<lambda>(i, j). ?v $ i)\n\ngoal (1 subgoal):\n 1. |v\\<rangle> \\<in> carrier_mat n 1", "by simp"], ["proof (state)\nthis:\n  |v\\<rangle> \\<in> carrier_mat n 1\n\ngoal (1 subgoal):\n 1. det B = 0 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  B * |v\\<rangle> = |0\\<^sub>v n\\<rangle>\n  |v\\<rangle> \\<in> carrier_mat n 1", "have \"(A * B) * |v\\<rangle> = A * |0\\<^sub>v n\\<rangle>\""], ["proof (prove)\nusing this:\n  B * |v\\<rangle> = |0\\<^sub>v n\\<rangle>\n  |v\\<rangle> \\<in> carrier_mat n 1\n\ngoal (1 subgoal):\n 1. A * B * |v\\<rangle> = A * |0\\<^sub>v n\\<rangle>", "using c0 c1"], ["proof (prove)\nusing this:\n  B * |v\\<rangle> = |0\\<^sub>v n\\<rangle>\n  |v\\<rangle> \\<in> carrier_mat n 1\n  A \\<in> carrier_mat n n\n  B \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. A * B * |v\\<rangle> = A * |0\\<^sub>v n\\<rangle>", "by simp"], ["proof (state)\nthis:\n  A * B * |v\\<rangle> = A * |0\\<^sub>v n\\<rangle>\n\ngoal (1 subgoal):\n 1. det B = 0 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  A * B * |v\\<rangle> = A * |0\\<^sub>v n\\<rangle>", "have f3:\"|v\\<rangle> = A * |0\\<^sub>v n\\<rangle>\""], ["proof (prove)\nusing this:\n  A * B * |v\\<rangle> = A * |0\\<^sub>v n\\<rangle>\n\ngoal (1 subgoal):\n 1. |v\\<rangle> = A * |0\\<^sub>v n\\<rangle>", "using d2 f0 ket_vec_def"], ["proof (prove)\nusing this:\n  A * B * |v\\<rangle> = A * |0\\<^sub>v n\\<rangle>\n  dim_vec v = n\n  A * B = 1\\<^sub>m n\n  |?v\\<rangle> \\<equiv> mat (dim_vec ?v) 1 (\\<lambda>(i, j). ?v $ i)\n\ngoal (1 subgoal):\n 1. |v\\<rangle> = A * |0\\<^sub>v n\\<rangle>", "by auto"], ["proof (state)\nthis:\n  |v\\<rangle> = A * |0\\<^sub>v n\\<rangle>\n\ngoal (1 subgoal):\n 1. det B = 0 \\<Longrightarrow> False", "have \"v = 0\\<^sub>v n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v = 0\\<^sub>v n", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       i < dim_vec (0\\<^sub>v n) \\<Longrightarrow> v $ i = 0\\<^sub>v n $ i\n 2. dim_vec v = dim_vec (0\\<^sub>v n)", "show \"dim_vec v = dim_vec (0\\<^sub>v n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_vec v = dim_vec (0\\<^sub>v n)", "using d2"], ["proof (prove)\nusing this:\n  dim_vec v = n\n\ngoal (1 subgoal):\n 1. dim_vec v = dim_vec (0\\<^sub>v n)", "by simp"], ["proof (state)\nthis:\n  dim_vec v = dim_vec (0\\<^sub>v n)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec (0\\<^sub>v n) \\<Longrightarrow> v $ i = 0\\<^sub>v n $ i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec (0\\<^sub>v n) \\<Longrightarrow> v $ i = 0\\<^sub>v n $ i", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec (0\\<^sub>v n) \\<Longrightarrow> v $ i = 0\\<^sub>v n $ i", "assume f4:\"i < dim_vec (0\\<^sub>v n)\""], ["proof (state)\nthis:\n  i < dim_vec (0\\<^sub>v n)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec (0\\<^sub>v n) \\<Longrightarrow> v $ i = 0\\<^sub>v n $ i", "then"], ["proof (chain)\npicking this:\n  i < dim_vec (0\\<^sub>v n)", "have \"|v\\<rangle> $$ (i,0) = v $ i\""], ["proof (prove)\nusing this:\n  i < dim_vec (0\\<^sub>v n)\n\ngoal (1 subgoal):\n 1. |v\\<rangle> $$ (i, 0) = v $ i", "using d2 ket_vec_def"], ["proof (prove)\nusing this:\n  i < dim_vec (0\\<^sub>v n)\n  dim_vec v = n\n  |?v\\<rangle> \\<equiv> mat (dim_vec ?v) 1 (\\<lambda>(i, j). ?v $ i)\n\ngoal (1 subgoal):\n 1. |v\\<rangle> $$ (i, 0) = v $ i", "by simp"], ["proof (state)\nthis:\n  |v\\<rangle> $$ (i, 0) = v $ i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec (0\\<^sub>v n) \\<Longrightarrow> v $ i = 0\\<^sub>v n $ i", "moreover"], ["proof (state)\nthis:\n  |v\\<rangle> $$ (i, 0) = v $ i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec (0\\<^sub>v n) \\<Longrightarrow> v $ i = 0\\<^sub>v n $ i", "have \"(A * |0\\<^sub>v n\\<rangle>) $$ (i, 0) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A * |0\\<^sub>v n\\<rangle>) $$ (i, 0) = 0", "using ket_vec_def times_mat_def scalar_prod_def f4 c0"], ["proof (prove)\nusing this:\n  |?v\\<rangle> \\<equiv> mat (dim_vec ?v) 1 (\\<lambda>(i, j). ?v $ i)\n  ?A * ?B \\<equiv>\n  mat (dim_row ?A) (dim_col ?B)\n   (\\<lambda>(i, j). row ?A i \\<bullet> col ?B j)\n  ?v \\<bullet> ?w \\<equiv> \\<Sum>i = 0..<dim_vec ?w. ?v $ i * ?w $ i\n  i < dim_vec (0\\<^sub>v n)\n  A \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. (A * |0\\<^sub>v n\\<rangle>) $$ (i, 0) = 0", "by auto"], ["proof (state)\nthis:\n  (A * |0\\<^sub>v n\\<rangle>) $$ (i, 0) = 0\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec (0\\<^sub>v n) \\<Longrightarrow> v $ i = 0\\<^sub>v n $ i", "ultimately"], ["proof (chain)\npicking this:\n  |v\\<rangle> $$ (i, 0) = v $ i\n  (A * |0\\<^sub>v n\\<rangle>) $$ (i, 0) = 0", "show \"v $ i = 0\\<^sub>v n $ i\""], ["proof (prove)\nusing this:\n  |v\\<rangle> $$ (i, 0) = v $ i\n  (A * |0\\<^sub>v n\\<rangle>) $$ (i, 0) = 0\n\ngoal (1 subgoal):\n 1. v $ i = 0\\<^sub>v n $ i", "using f3 f4"], ["proof (prove)\nusing this:\n  |v\\<rangle> $$ (i, 0) = v $ i\n  (A * |0\\<^sub>v n\\<rangle>) $$ (i, 0) = 0\n  |v\\<rangle> = A * |0\\<^sub>v n\\<rangle>\n  i < dim_vec (0\\<^sub>v n)\n\ngoal (1 subgoal):\n 1. v $ i = 0\\<^sub>v n $ i", "by simp"], ["proof (state)\nthis:\n  v $ i = 0\\<^sub>v n $ i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  v = 0\\<^sub>v n\n\ngoal (1 subgoal):\n 1. det B = 0 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  v = 0\\<^sub>v n", "show False"], ["proof (prove)\nusing this:\n  v = 0\\<^sub>v n\n\ngoal (1 subgoal):\n 1. False", "using d1"], ["proof (prove)\nusing this:\n  v = 0\\<^sub>v n\n  v \\<in> carrier_vec n \\<and>\n  v \\<noteq> 0\\<^sub>v n \\<and> B *\\<^sub>v v = 0\\<^sub>v n\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  det B \\<noteq> 0\n\ngoal (1 subgoal):\n 1. inverts_mat B A", "have f5:\"adj_mat B \\<in> carrier_mat n n \\<and> B * adj_mat B = det B \\<cdot>\\<^sub>m 1\\<^sub>m n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. adj_mat B \\<in> carrier_mat n n \\<and>\n    B * adj_mat B = det B \\<cdot>\\<^sub>m 1\\<^sub>m n", "using c1 adj_mat"], ["proof (prove)\nusing this:\n  B \\<in> carrier_mat n n\n  ?A \\<in> carrier_mat ?n ?n \\<Longrightarrow>\n  adj_mat ?A \\<in> carrier_mat ?n ?n\n  ?A \\<in> carrier_mat ?n ?n \\<Longrightarrow>\n  ?A * adj_mat ?A = det ?A \\<cdot>\\<^sub>m 1\\<^sub>m ?n\n  ?A \\<in> carrier_mat ?n ?n \\<Longrightarrow>\n  adj_mat ?A * ?A = det ?A \\<cdot>\\<^sub>m 1\\<^sub>m ?n\n\ngoal (1 subgoal):\n 1. adj_mat B \\<in> carrier_mat n n \\<and>\n    B * adj_mat B = det B \\<cdot>\\<^sub>m 1\\<^sub>m n", "by auto"], ["proof (state)\nthis:\n  adj_mat B \\<in> carrier_mat n n \\<and>\n  B * adj_mat B = det B \\<cdot>\\<^sub>m 1\\<^sub>m n\n\ngoal (1 subgoal):\n 1. inverts_mat B A", "then"], ["proof (chain)\npicking this:\n  adj_mat B \\<in> carrier_mat n n \\<and>\n  B * adj_mat B = det B \\<cdot>\\<^sub>m 1\\<^sub>m n", "have c2:\"((1/det B) \\<cdot>\\<^sub>m adj_mat B) \\<in> carrier_mat n n\""], ["proof (prove)\nusing this:\n  adj_mat B \\<in> carrier_mat n n \\<and>\n  B * adj_mat B = det B \\<cdot>\\<^sub>m 1\\<^sub>m n\n\ngoal (1 subgoal):\n 1. 1 / det B \\<cdot>\\<^sub>m adj_mat B \\<in> carrier_mat n n", "by simp"], ["proof (state)\nthis:\n  1 / det B \\<cdot>\\<^sub>m adj_mat B \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. inverts_mat B A", "have f6:\"B * ((1/det B) \\<cdot>\\<^sub>m adj_mat B) = 1\\<^sub>m n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B * (1 / det B \\<cdot>\\<^sub>m adj_mat B) = 1\\<^sub>m n", "using c1 f1 f5 mult_smult_distrib[of \"B\"]"], ["proof (prove)\nusing this:\n  B \\<in> carrier_mat n n\n  det B \\<noteq> 0\n  adj_mat B \\<in> carrier_mat n n \\<and>\n  B * adj_mat B = det B \\<cdot>\\<^sub>m 1\\<^sub>m n\n  \\<lbrakk>B \\<in> carrier_mat ?nr ?n; ?B \\<in> carrier_mat ?n ?nc\\<rbrakk>\n  \\<Longrightarrow> B * (?k \\<cdot>\\<^sub>m ?B) =\n                    ?k \\<cdot>\\<^sub>m (B * ?B)\n\ngoal (1 subgoal):\n 1. B * (1 / det B \\<cdot>\\<^sub>m adj_mat B) = 1\\<^sub>m n", "by auto"], ["proof (state)\nthis:\n  B * (1 / det B \\<cdot>\\<^sub>m adj_mat B) = 1\\<^sub>m n\n\ngoal (1 subgoal):\n 1. inverts_mat B A", "then"], ["proof (chain)\npicking this:\n  B * (1 / det B \\<cdot>\\<^sub>m adj_mat B) = 1\\<^sub>m n", "have \"A = (A * B) * ((1/det B) \\<cdot>\\<^sub>m adj_mat B)\""], ["proof (prove)\nusing this:\n  B * (1 / det B \\<cdot>\\<^sub>m adj_mat B) = 1\\<^sub>m n\n\ngoal (1 subgoal):\n 1. A = A * B * (1 / det B \\<cdot>\\<^sub>m adj_mat B)", "using c0 c1 c2"], ["proof (prove)\nusing this:\n  B * (1 / det B \\<cdot>\\<^sub>m adj_mat B) = 1\\<^sub>m n\n  A \\<in> carrier_mat n n\n  B \\<in> carrier_mat n n\n  1 / det B \\<cdot>\\<^sub>m adj_mat B \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. A = A * B * (1 / det B \\<cdot>\\<^sub>m adj_mat B)", "by simp"], ["proof (state)\nthis:\n  A = A * B * (1 / det B \\<cdot>\\<^sub>m adj_mat B)\n\ngoal (1 subgoal):\n 1. inverts_mat B A", "then"], ["proof (chain)\npicking this:\n  A = A * B * (1 / det B \\<cdot>\\<^sub>m adj_mat B)", "have \"A = (1/det B) \\<cdot>\\<^sub>m adj_mat B\""], ["proof (prove)\nusing this:\n  A = A * B * (1 / det B \\<cdot>\\<^sub>m adj_mat B)\n\ngoal (1 subgoal):\n 1. A = 1 / det B \\<cdot>\\<^sub>m adj_mat B", "using f0 c2"], ["proof (prove)\nusing this:\n  A = A * B * (1 / det B \\<cdot>\\<^sub>m adj_mat B)\n  A * B = 1\\<^sub>m n\n  1 / det B \\<cdot>\\<^sub>m adj_mat B \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. A = 1 / det B \\<cdot>\\<^sub>m adj_mat B", "by auto"], ["proof (state)\nthis:\n  A = 1 / det B \\<cdot>\\<^sub>m adj_mat B\n\ngoal (1 subgoal):\n 1. inverts_mat B A", "then"], ["proof (chain)\npicking this:\n  A = 1 / det B \\<cdot>\\<^sub>m adj_mat B", "show ?thesis"], ["proof (prove)\nusing this:\n  A = 1 / det B \\<cdot>\\<^sub>m adj_mat B\n\ngoal (1 subgoal):\n 1. inverts_mat B A", "using c0 c1 f6 inverts_mat_def"], ["proof (prove)\nusing this:\n  A = 1 / det B \\<cdot>\\<^sub>m adj_mat B\n  A \\<in> carrier_mat n n\n  B \\<in> carrier_mat n n\n  B * (1 / det B \\<cdot>\\<^sub>m adj_mat B) = 1\\<^sub>m n\n  inverts_mat ?A ?B \\<equiv> ?A * ?B = 1\\<^sub>m (dim_row ?A)\n\ngoal (1 subgoal):\n 1. inverts_mat B A", "by auto"], ["proof (state)\nthis:\n  inverts_mat B A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_of_unit_vec_length:\n  fixes i j n:: nat and c:: complex\n  assumes \"i < n\" and \"j < n\" and \"i \\<noteq> j\"\n  shows \"\\<parallel>unit_vec n i + c \\<cdot>\\<^sub>v unit_vec n j\\<parallel>\\<^sup>2 = 1 + cnj(c) * c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real\n     (\\<parallel>unit_vec n i +\n                 c \\<cdot>\\<^sub>v unit_vec n j\\<parallel>\\<^sup>2) =\n    1 + cnj c * c", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. complex_of_real\n     (\\<parallel>unit_vec n i +\n                 c \\<cdot>\\<^sub>v unit_vec n j\\<parallel>\\<^sup>2) =\n    1 + cnj c * c", "define v where d0:\"v = unit_vec n i + c \\<cdot>\\<^sub>v unit_vec n j\""], ["proof (state)\nthis:\n  v = unit_vec n i + c \\<cdot>\\<^sub>v unit_vec n j\n\ngoal (1 subgoal):\n 1. complex_of_real\n     (\\<parallel>unit_vec n i +\n                 c \\<cdot>\\<^sub>v unit_vec n j\\<parallel>\\<^sup>2) =\n    1 + cnj c * c", "have \"\\<forall>k<n. v $ k = (if k = i then 1 else (if k = j then c else 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>k<n. v $ k = (if k = i then 1 else if k = j then c else 0)", "using d0 assms(1,2,3)"], ["proof (prove)\nusing this:\n  v = unit_vec n i + c \\<cdot>\\<^sub>v unit_vec n j\n  i < n\n  j < n\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. \\<forall>k<n. v $ k = (if k = i then 1 else if k = j then c else 0)", "by auto"], ["proof (state)\nthis:\n  \\<forall>k<n. v $ k = (if k = i then 1 else if k = j then c else 0)\n\ngoal (1 subgoal):\n 1. complex_of_real\n     (\\<parallel>unit_vec n i +\n                 c \\<cdot>\\<^sub>v unit_vec n j\\<parallel>\\<^sup>2) =\n    1 + cnj c * c", "then"], ["proof (chain)\npicking this:\n  \\<forall>k<n. v $ k = (if k = i then 1 else if k = j then c else 0)", "have \"\\<forall>k<n. cnj (v $ k) * v $ k = (if k = i then 1 else 0) + (if k = j then cnj(c) * c else 0)\""], ["proof (prove)\nusing this:\n  \\<forall>k<n. v $ k = (if k = i then 1 else if k = j then c else 0)\n\ngoal (1 subgoal):\n 1. \\<forall>k<n.\n       cnj (v $ k) * v $ k =\n       (if k = i then 1 else 0) + (if k = j then cnj c * c else 0)", "using assms(3)"], ["proof (prove)\nusing this:\n  \\<forall>k<n. v $ k = (if k = i then 1 else if k = j then c else 0)\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. \\<forall>k<n.\n       cnj (v $ k) * v $ k =\n       (if k = i then 1 else 0) + (if k = j then cnj c * c else 0)", "by auto"], ["proof (state)\nthis:\n  \\<forall>k<n.\n     cnj (v $ k) * v $ k =\n     (if k = i then 1 else 0) + (if k = j then cnj c * c else 0)\n\ngoal (1 subgoal):\n 1. complex_of_real\n     (\\<parallel>unit_vec n i +\n                 c \\<cdot>\\<^sub>v unit_vec n j\\<parallel>\\<^sup>2) =\n    1 + cnj c * c", "moreover"], ["proof (state)\nthis:\n  \\<forall>k<n.\n     cnj (v $ k) * v $ k =\n     (if k = i then 1 else 0) + (if k = j then cnj c * c else 0)\n\ngoal (1 subgoal):\n 1. complex_of_real\n     (\\<parallel>unit_vec n i +\n                 c \\<cdot>\\<^sub>v unit_vec n j\\<parallel>\\<^sup>2) =\n    1 + cnj c * c", "have \"\\<parallel>v\\<parallel>\\<^sup>2 = (\\<Sum>k = 0..<n. cnj (v $ k) * v $ k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (\\<parallel>v\\<parallel>\\<^sup>2) =\n    (\\<Sum>k = 0..<n. cnj (v $ k) * v $ k)", "using d0 assms cpx_vec_length_inner_prod inner_prod_def"], ["proof (prove)\nusing this:\n  v = unit_vec n i + c \\<cdot>\\<^sub>v unit_vec n j\n  i < n\n  j < n\n  i \\<noteq> j\n  complex_of_real (\\<parallel>?v\\<parallel>\\<^sup>2) =\n  \\<langle>?v|?v\\<rangle>\n  \\<langle>?u|?v\\<rangle> \\<equiv>\n  \\<Sum>i = 0..<dim_vec ?v. cnj (?u $ i) * ?v $ i\n\ngoal (1 subgoal):\n 1. complex_of_real (\\<parallel>v\\<parallel>\\<^sup>2) =\n    (\\<Sum>k = 0..<n. cnj (v $ k) * v $ k)", "by simp"], ["proof (state)\nthis:\n  complex_of_real (\\<parallel>v\\<parallel>\\<^sup>2) =\n  (\\<Sum>k = 0..<n. cnj (v $ k) * v $ k)\n\ngoal (1 subgoal):\n 1. complex_of_real\n     (\\<parallel>unit_vec n i +\n                 c \\<cdot>\\<^sub>v unit_vec n j\\<parallel>\\<^sup>2) =\n    1 + cnj c * c", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>k<n.\n     cnj (v $ k) * v $ k =\n     (if k = i then 1 else 0) + (if k = j then cnj c * c else 0)\n  complex_of_real (\\<parallel>v\\<parallel>\\<^sup>2) =\n  (\\<Sum>k = 0..<n. cnj (v $ k) * v $ k)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>k<n.\n     cnj (v $ k) * v $ k =\n     (if k = i then 1 else 0) + (if k = j then cnj c * c else 0)\n  complex_of_real (\\<parallel>v\\<parallel>\\<^sup>2) =\n  (\\<Sum>k = 0..<n. cnj (v $ k) * v $ k)\n\ngoal (1 subgoal):\n 1. complex_of_real\n     (\\<parallel>unit_vec n i +\n                 c \\<cdot>\\<^sub>v unit_vec n j\\<parallel>\\<^sup>2) =\n    1 + cnj c * c", "using d0 assms"], ["proof (prove)\nusing this:\n  \\<forall>k<n.\n     cnj (v $ k) * v $ k =\n     (if k = i then 1 else 0) + (if k = j then cnj c * c else 0)\n  complex_of_real (\\<parallel>v\\<parallel>\\<^sup>2) =\n  (\\<Sum>k = 0..<n. cnj (v $ k) * v $ k)\n  v = unit_vec n i + c \\<cdot>\\<^sub>v unit_vec n j\n  i < n\n  j < n\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. complex_of_real\n     (\\<parallel>unit_vec n i +\n                 c \\<cdot>\\<^sub>v unit_vec n j\\<parallel>\\<^sup>2) =\n    1 + cnj c * c", "by (auto simp add: sum.distrib)"], ["proof (state)\nthis:\n  complex_of_real\n   (\\<parallel>unit_vec n i +\n               c \\<cdot>\\<^sub>v unit_vec n j\\<parallel>\\<^sup>2) =\n  1 + cnj c * c\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_of_unit_vec_to_col:\n  assumes \"dim_col A = n\" and \"i < n\" and \"j < n\"\n  shows \"col A i + c \\<cdot>\\<^sub>v col A j = A * |unit_vec n i + c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col A i + c \\<cdot>\\<^sub>v col A j =\n    col_fst (A * |unit_vec n i + c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ia.\n       ia < dim_vec\n             (col_fst\n               (A *\n                |unit_vec n i +\n                 c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>)) \\<Longrightarrow>\n       (col A i + c \\<cdot>\\<^sub>v col A j) $ ia =\n       col_fst\n        (A * |unit_vec n i + c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>) $\n       ia\n 2. dim_vec (col A i + c \\<cdot>\\<^sub>v col A j) =\n    dim_vec\n     (col_fst (A * |unit_vec n i + c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>))", "show \"dim_vec (col A i + c \\<cdot>\\<^sub>v col A j) = dim_vec (col_fst (A * |unit_vec n i + c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_vec (col A i + c \\<cdot>\\<^sub>v col A j) =\n    dim_vec\n     (col_fst (A * |unit_vec n i + c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>))", "using assms(1)"], ["proof (prove)\nusing this:\n  dim_col A = n\n\ngoal (1 subgoal):\n 1. dim_vec (col A i + c \\<cdot>\\<^sub>v col A j) =\n    dim_vec\n     (col_fst (A * |unit_vec n i + c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>))", "by auto"], ["proof (state)\nthis:\n  dim_vec (col A i + c \\<cdot>\\<^sub>v col A j) =\n  dim_vec\n   (col_fst (A * |unit_vec n i + c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>))\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec\n             (col_fst\n               (A *\n                |unit_vec n i +\n                 c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>)) \\<Longrightarrow>\n       (col A i + c \\<cdot>\\<^sub>v col A j) $ ia =\n       col_fst\n        (A * |unit_vec n i + c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>) $\n       ia", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec\n             (col_fst\n               (A *\n                |unit_vec n i +\n                 c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>)) \\<Longrightarrow>\n       (col A i + c \\<cdot>\\<^sub>v col A j) $ ia =\n       col_fst\n        (A * |unit_vec n i + c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>) $\n       ia", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec\n             (col_fst\n               (A *\n                |unit_vec n i +\n                 c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>)) \\<Longrightarrow>\n       (col A i + c \\<cdot>\\<^sub>v col A j) $ ia =\n       col_fst\n        (A * |unit_vec n i + c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>) $\n       ia", "assume \"k < dim_vec (col_fst (A * |unit_vec n i + c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>))\""], ["proof (state)\nthis:\n  k < dim_vec\n       (col_fst\n         (A * |unit_vec n i + c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>))\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec\n             (col_fst\n               (A *\n                |unit_vec n i +\n                 c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>)) \\<Longrightarrow>\n       (col A i + c \\<cdot>\\<^sub>v col A j) $ ia =\n       col_fst\n        (A * |unit_vec n i + c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>) $\n       ia", "then"], ["proof (chain)\npicking this:\n  k < dim_vec\n       (col_fst\n         (A * |unit_vec n i + c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>))", "have f0:\"k < dim_row A\""], ["proof (prove)\nusing this:\n  k < dim_vec\n       (col_fst\n         (A * |unit_vec n i + c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>))\n\ngoal (1 subgoal):\n 1. k < dim_row A", "using assms(1)"], ["proof (prove)\nusing this:\n  k < dim_vec\n       (col_fst\n         (A * |unit_vec n i + c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>))\n  dim_col A = n\n\ngoal (1 subgoal):\n 1. k < dim_row A", "by auto"], ["proof (state)\nthis:\n  k < dim_row A\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec\n             (col_fst\n               (A *\n                |unit_vec n i +\n                 c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>)) \\<Longrightarrow>\n       (col A i + c \\<cdot>\\<^sub>v col A j) $ ia =\n       col_fst\n        (A * |unit_vec n i + c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>) $\n       ia", "have \"(col A i + c \\<cdot>\\<^sub>v col A j) $ k = A $$ (k, i) + c * A $$ (k, j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (col A i + c \\<cdot>\\<^sub>v col A j) $ k =\n    A $$ (k, i) + c * A $$ (k, j)", "using f0 assms(1-3)"], ["proof (prove)\nusing this:\n  k < dim_row A\n  dim_col A = n\n  i < n\n  j < n\n\ngoal (1 subgoal):\n 1. (col A i + c \\<cdot>\\<^sub>v col A j) $ k =\n    A $$ (k, i) + c * A $$ (k, j)", "by auto"], ["proof (state)\nthis:\n  (col A i + c \\<cdot>\\<^sub>v col A j) $ k = A $$ (k, i) + c * A $$ (k, j)\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec\n             (col_fst\n               (A *\n                |unit_vec n i +\n                 c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>)) \\<Longrightarrow>\n       (col A i + c \\<cdot>\\<^sub>v col A j) $ ia =\n       col_fst\n        (A * |unit_vec n i + c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>) $\n       ia", "moreover"], ["proof (state)\nthis:\n  (col A i + c \\<cdot>\\<^sub>v col A j) $ k = A $$ (k, i) + c * A $$ (k, j)\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec\n             (col_fst\n               (A *\n                |unit_vec n i +\n                 c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>)) \\<Longrightarrow>\n       (col A i + c \\<cdot>\\<^sub>v col A j) $ ia =\n       col_fst\n        (A * |unit_vec n i + c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>) $\n       ia", "have \"(\\<Sum>x<n. A $$ (k, x) * ((if x = i then 1 else 0) + c * (if x = j then 1 else 0))) = \n                 (\\<Sum>x<n. A $$ (k, x) * (if x = i then 1 else 0)) + \n                 (\\<Sum>x<n. A $$ (k, x) * c * (if x = j then 1 else 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x<n.\n        A $$ (k, x) *\n        ((if x = i then 1 else 0) + c * (if x = j then 1 else 0))) =\n    (\\<Sum>x<n. A $$ (k, x) * (if x = i then 1 else 0)) +\n    (\\<Sum>x<n. A $$ (k, x) * c * (if x = j then 1 else 0))", "by (auto simp add: sum.distrib algebra_simps)"], ["proof (state)\nthis:\n  (\\<Sum>x<n.\n      A $$ (k, x) *\n      ((if x = i then 1 else 0) + c * (if x = j then 1 else 0))) =\n  (\\<Sum>x<n. A $$ (k, x) * (if x = i then 1 else 0)) +\n  (\\<Sum>x<n. A $$ (k, x) * c * (if x = j then 1 else 0))\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec\n             (col_fst\n               (A *\n                |unit_vec n i +\n                 c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>)) \\<Longrightarrow>\n       (col A i + c \\<cdot>\\<^sub>v col A j) $ ia =\n       col_fst\n        (A * |unit_vec n i + c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>) $\n       ia", "moreover"], ["proof (state)\nthis:\n  (\\<Sum>x<n.\n      A $$ (k, x) *\n      ((if x = i then 1 else 0) + c * (if x = j then 1 else 0))) =\n  (\\<Sum>x<n. A $$ (k, x) * (if x = i then 1 else 0)) +\n  (\\<Sum>x<n. A $$ (k, x) * c * (if x = j then 1 else 0))\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec\n             (col_fst\n               (A *\n                |unit_vec n i +\n                 c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>)) \\<Longrightarrow>\n       (col A i + c \\<cdot>\\<^sub>v col A j) $ ia =\n       col_fst\n        (A * |unit_vec n i + c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>) $\n       ia", "have \"\\<forall>x<n. A $$ (k, x) * (if x = i then 1 else 0) = (if x = i then A $$ (k, x) else 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x<n.\n       A $$ (k, x) * (if x = i then 1 else 0) =\n       (if x = i then A $$ (k, x) else 0)", "by simp"], ["proof (state)\nthis:\n  \\<forall>x<n.\n     A $$ (k, x) * (if x = i then 1 else 0) =\n     (if x = i then A $$ (k, x) else 0)\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec\n             (col_fst\n               (A *\n                |unit_vec n i +\n                 c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>)) \\<Longrightarrow>\n       (col A i + c \\<cdot>\\<^sub>v col A j) $ ia =\n       col_fst\n        (A * |unit_vec n i + c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>) $\n       ia", "moreover"], ["proof (state)\nthis:\n  \\<forall>x<n.\n     A $$ (k, x) * (if x = i then 1 else 0) =\n     (if x = i then A $$ (k, x) else 0)\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec\n             (col_fst\n               (A *\n                |unit_vec n i +\n                 c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>)) \\<Longrightarrow>\n       (col A i + c \\<cdot>\\<^sub>v col A j) $ ia =\n       col_fst\n        (A * |unit_vec n i + c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>) $\n       ia", "have \"\\<forall>x<n. A $$ (k, x) * c * (if x = j then 1 else 0) = (if x = j then A $$ (k, x) * c else 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x<n.\n       A $$ (k, x) * c * (if x = j then 1 else 0) =\n       (if x = j then A $$ (k, x) * c else 0)", "by simp"], ["proof (state)\nthis:\n  \\<forall>x<n.\n     A $$ (k, x) * c * (if x = j then 1 else 0) =\n     (if x = j then A $$ (k, x) * c else 0)\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec\n             (col_fst\n               (A *\n                |unit_vec n i +\n                 c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>)) \\<Longrightarrow>\n       (col A i + c \\<cdot>\\<^sub>v col A j) $ ia =\n       col_fst\n        (A * |unit_vec n i + c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>) $\n       ia", "ultimately"], ["proof (chain)\npicking this:\n  (col A i + c \\<cdot>\\<^sub>v col A j) $ k = A $$ (k, i) + c * A $$ (k, j)\n  (\\<Sum>x<n.\n      A $$ (k, x) *\n      ((if x = i then 1 else 0) + c * (if x = j then 1 else 0))) =\n  (\\<Sum>x<n. A $$ (k, x) * (if x = i then 1 else 0)) +\n  (\\<Sum>x<n. A $$ (k, x) * c * (if x = j then 1 else 0))\n  \\<forall>x<n.\n     A $$ (k, x) * (if x = i then 1 else 0) =\n     (if x = i then A $$ (k, x) else 0)\n  \\<forall>x<n.\n     A $$ (k, x) * c * (if x = j then 1 else 0) =\n     (if x = j then A $$ (k, x) * c else 0)", "show \"(col A i + c \\<cdot>\\<^sub>v col A j) $ k = col_fst (A * |unit_vec n i + c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>) $ k\""], ["proof (prove)\nusing this:\n  (col A i + c \\<cdot>\\<^sub>v col A j) $ k = A $$ (k, i) + c * A $$ (k, j)\n  (\\<Sum>x<n.\n      A $$ (k, x) *\n      ((if x = i then 1 else 0) + c * (if x = j then 1 else 0))) =\n  (\\<Sum>x<n. A $$ (k, x) * (if x = i then 1 else 0)) +\n  (\\<Sum>x<n. A $$ (k, x) * c * (if x = j then 1 else 0))\n  \\<forall>x<n.\n     A $$ (k, x) * (if x = i then 1 else 0) =\n     (if x = i then A $$ (k, x) else 0)\n  \\<forall>x<n.\n     A $$ (k, x) * c * (if x = j then 1 else 0) =\n     (if x = j then A $$ (k, x) * c else 0)\n\ngoal (1 subgoal):\n 1. (col A i + c \\<cdot>\\<^sub>v col A j) $ k =\n    col_fst (A * |unit_vec n i + c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>) $\n    k", "using f0 assms(1-3) times_mat_def scalar_prod_def ket_vec_def"], ["proof (prove)\nusing this:\n  (col A i + c \\<cdot>\\<^sub>v col A j) $ k = A $$ (k, i) + c * A $$ (k, j)\n  (\\<Sum>x<n.\n      A $$ (k, x) *\n      ((if x = i then 1 else 0) + c * (if x = j then 1 else 0))) =\n  (\\<Sum>x<n. A $$ (k, x) * (if x = i then 1 else 0)) +\n  (\\<Sum>x<n. A $$ (k, x) * c * (if x = j then 1 else 0))\n  \\<forall>x<n.\n     A $$ (k, x) * (if x = i then 1 else 0) =\n     (if x = i then A $$ (k, x) else 0)\n  \\<forall>x<n.\n     A $$ (k, x) * c * (if x = j then 1 else 0) =\n     (if x = j then A $$ (k, x) * c else 0)\n  k < dim_row A\n  dim_col A = n\n  i < n\n  j < n\n  ?A * ?B \\<equiv>\n  mat (dim_row ?A) (dim_col ?B)\n   (\\<lambda>(i, j). row ?A i \\<bullet> col ?B j)\n  ?v \\<bullet> ?w \\<equiv> \\<Sum>i = 0..<dim_vec ?w. ?v $ i * ?w $ i\n  |?v\\<rangle> \\<equiv> mat (dim_vec ?v) 1 (\\<lambda>(i, j). ?v $ i)\n\ngoal (1 subgoal):\n 1. (col A i + c \\<cdot>\\<^sub>v col A j) $ k =\n    col_fst (A * |unit_vec n i + c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>) $\n    k", "by auto"], ["proof (state)\nthis:\n  (col A i + c \\<cdot>\\<^sub>v col A j) $ k =\n  col_fst (A * |unit_vec n i + c \\<cdot>\\<^sub>v unit_vec n j\\<rangle>) $ k\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inner_prod_is_sesquilinear:\n  fixes u1 u2 v1 v2:: \"complex vec\" and c1 c2 c3 c4:: complex and n:: nat\n  assumes \"dim_vec u1 = n\" and \"dim_vec u2 = n\" and \"dim_vec v1 = n\" and \"dim_vec v2 = n\"\n  shows \"\\<langle>c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2|c3 \\<cdot>\\<^sub>v v1 + c4 \\<cdot>\\<^sub>v v2\\<rangle> = cnj (c1) * c3 * \\<langle>u1|v1\\<rangle> + cnj (c2) * c3 * \\<langle>u2|v1\\<rangle> + \n                                                 cnj (c1) * c4 * \\<langle>u1|v2\\<rangle> + cnj (c2) * c4 * \\<langle>u2|v2\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c1 \\<cdot>\\<^sub>v u1 +\n             c2 \\<cdot>\\<^sub>v\n             u2|c3 \\<cdot>\\<^sub>v v1 + c4 \\<cdot>\\<^sub>v v2\\<rangle> =\n    cnj c1 * c3 * \\<langle>u1|v1\\<rangle> +\n    cnj c2 * c3 * \\<langle>u2|v1\\<rangle> +\n    cnj c1 * c4 * \\<langle>u1|v2\\<rangle> +\n    cnj c2 * c4 * \\<langle>u2|v2\\<rangle>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<langle>c1 \\<cdot>\\<^sub>v u1 +\n             c2 \\<cdot>\\<^sub>v\n             u2|c3 \\<cdot>\\<^sub>v v1 + c4 \\<cdot>\\<^sub>v v2\\<rangle> =\n    cnj c1 * c3 * \\<langle>u1|v1\\<rangle> +\n    cnj c2 * c3 * \\<langle>u2|v1\\<rangle> +\n    cnj c1 * c4 * \\<langle>u1|v2\\<rangle> +\n    cnj c2 * c4 * \\<langle>u2|v2\\<rangle>", "have \"\\<langle>c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2|c3 \\<cdot>\\<^sub>v v1 + c4 \\<cdot>\\<^sub>v v2\\<rangle> = c3 * \\<langle>c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2|v1\\<rangle> + c4 * \\<langle>c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2|v2\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c1 \\<cdot>\\<^sub>v u1 +\n             c2 \\<cdot>\\<^sub>v\n             u2|c3 \\<cdot>\\<^sub>v v1 + c4 \\<cdot>\\<^sub>v v2\\<rangle> =\n    c3 *\n    \\<langle>c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2|v1\\<rangle> +\n    c4 * \\<langle>c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2|v2\\<rangle>", "using inner_prod_is_linear[of \"c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2\" \"\\<lambda>i. if i = 0 then v1 else v2\" \n                                  \"\\<lambda>i. if i = 0 then c3 else c4\"] assms"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>{0, 1}.\n     dim_vec (c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2) =\n     dim_vec (if i = 0 then v1 else v2) \\<Longrightarrow>\n  \\<langle>c1 \\<cdot>\\<^sub>v u1 +\n           c2 \\<cdot>\\<^sub>v\n           u2|(if 0 = 0 then c3 else c4) \\<cdot>\\<^sub>v\n              (if 0 = 0 then v1 else v2) +\n              (if 1 = 0 then c3 else c4) \\<cdot>\\<^sub>v\n              (if 1 = 0 then v1 else v2)\\<rangle> =\n  (\\<Sum>i\\<le>1.\n      (if i = 0 then c3 else c4) *\n      \\<langle>c1 \\<cdot>\\<^sub>v u1 +\n               c2 \\<cdot>\\<^sub>v u2|if i = 0 then v1 else v2\\<rangle>)\n  dim_vec u1 = n\n  dim_vec u2 = n\n  dim_vec v1 = n\n  dim_vec v2 = n\n\ngoal (1 subgoal):\n 1. \\<langle>c1 \\<cdot>\\<^sub>v u1 +\n             c2 \\<cdot>\\<^sub>v\n             u2|c3 \\<cdot>\\<^sub>v v1 + c4 \\<cdot>\\<^sub>v v2\\<rangle> =\n    c3 *\n    \\<langle>c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2|v1\\<rangle> +\n    c4 * \\<langle>c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2|v2\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>c1 \\<cdot>\\<^sub>v u1 +\n           c2 \\<cdot>\\<^sub>v\n           u2|c3 \\<cdot>\\<^sub>v v1 + c4 \\<cdot>\\<^sub>v v2\\<rangle> =\n  c3 * \\<langle>c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2|v1\\<rangle> +\n  c4 * \\<langle>c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2|v2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c1 \\<cdot>\\<^sub>v u1 +\n             c2 \\<cdot>\\<^sub>v\n             u2|c3 \\<cdot>\\<^sub>v v1 + c4 \\<cdot>\\<^sub>v v2\\<rangle> =\n    cnj c1 * c3 * \\<langle>u1|v1\\<rangle> +\n    cnj c2 * c3 * \\<langle>u2|v1\\<rangle> +\n    cnj c1 * c4 * \\<langle>u1|v2\\<rangle> +\n    cnj c2 * c4 * \\<langle>u2|v2\\<rangle>", "also"], ["proof (state)\nthis:\n  \\<langle>c1 \\<cdot>\\<^sub>v u1 +\n           c2 \\<cdot>\\<^sub>v\n           u2|c3 \\<cdot>\\<^sub>v v1 + c4 \\<cdot>\\<^sub>v v2\\<rangle> =\n  c3 * \\<langle>c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2|v1\\<rangle> +\n  c4 * \\<langle>c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2|v2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c1 \\<cdot>\\<^sub>v u1 +\n             c2 \\<cdot>\\<^sub>v\n             u2|c3 \\<cdot>\\<^sub>v v1 + c4 \\<cdot>\\<^sub>v v2\\<rangle> =\n    cnj c1 * c3 * \\<langle>u1|v1\\<rangle> +\n    cnj c2 * c3 * \\<langle>u2|v1\\<rangle> +\n    cnj c1 * c4 * \\<langle>u1|v2\\<rangle> +\n    cnj c2 * c4 * \\<langle>u2|v2\\<rangle>", "have \"... = c3 * cnj(\\<langle>v1|c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2\\<rangle>) + c4 * cnj(\\<langle>v2|c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c3 *\n    \\<langle>c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2|v1\\<rangle> +\n    c4 *\n    \\<langle>c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2|v2\\<rangle> =\n    c3 *\n    cnj \\<langle>v1|c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2\\<rangle> +\n    c4 *\n    cnj \\<langle>v2|c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2\\<rangle>", "using assms inner_prod_cnj[of \"v1\" \"c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2\"] inner_prod_cnj[of \"v2\" \"c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2\"]"], ["proof (prove)\nusing this:\n  dim_vec u1 = n\n  dim_vec u2 = n\n  dim_vec v1 = n\n  dim_vec v2 = n\n  dim_vec v1 =\n  dim_vec (c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2) \\<Longrightarrow>\n  \\<langle>c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2|v1\\<rangle> =\n  cnj \\<langle>v1|c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2\\<rangle>\n  dim_vec v2 =\n  dim_vec (c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2) \\<Longrightarrow>\n  \\<langle>c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2|v2\\<rangle> =\n  cnj \\<langle>v2|c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2\\<rangle>\n\ngoal (1 subgoal):\n 1. c3 *\n    \\<langle>c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2|v1\\<rangle> +\n    c4 *\n    \\<langle>c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2|v2\\<rangle> =\n    c3 *\n    cnj \\<langle>v1|c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2\\<rangle> +\n    c4 *\n    cnj \\<langle>v2|c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2\\<rangle>", "by simp"], ["proof (state)\nthis:\n  c3 * \\<langle>c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2|v1\\<rangle> +\n  c4 * \\<langle>c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2|v2\\<rangle> =\n  c3 *\n  cnj \\<langle>v1|c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2\\<rangle> +\n  c4 *\n  cnj \\<langle>v2|c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c1 \\<cdot>\\<^sub>v u1 +\n             c2 \\<cdot>\\<^sub>v\n             u2|c3 \\<cdot>\\<^sub>v v1 + c4 \\<cdot>\\<^sub>v v2\\<rangle> =\n    cnj c1 * c3 * \\<langle>u1|v1\\<rangle> +\n    cnj c2 * c3 * \\<langle>u2|v1\\<rangle> +\n    cnj c1 * c4 * \\<langle>u1|v2\\<rangle> +\n    cnj c2 * c4 * \\<langle>u2|v2\\<rangle>", "also"], ["proof (state)\nthis:\n  c3 * \\<langle>c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2|v1\\<rangle> +\n  c4 * \\<langle>c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2|v2\\<rangle> =\n  c3 *\n  cnj \\<langle>v1|c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2\\<rangle> +\n  c4 *\n  cnj \\<langle>v2|c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c1 \\<cdot>\\<^sub>v u1 +\n             c2 \\<cdot>\\<^sub>v\n             u2|c3 \\<cdot>\\<^sub>v v1 + c4 \\<cdot>\\<^sub>v v2\\<rangle> =\n    cnj c1 * c3 * \\<langle>u1|v1\\<rangle> +\n    cnj c2 * c3 * \\<langle>u2|v1\\<rangle> +\n    cnj c1 * c4 * \\<langle>u1|v2\\<rangle> +\n    cnj c2 * c4 * \\<langle>u2|v2\\<rangle>", "have \"... = c3 * cnj(c1 * \\<langle>v1|u1\\<rangle> + c2 * \\<langle>v1|u2\\<rangle>) + c4 * cnj(c1 * \\<langle>v2|u1\\<rangle> + c2 * \\<langle>v2|u2\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c3 *\n    cnj \\<langle>v1|c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2\\<rangle> +\n    c4 *\n    cnj \\<langle>v2|c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2\\<rangle> =\n    c3 * cnj (c1 * \\<langle>v1|u1\\<rangle> + c2 * \\<langle>v1|u2\\<rangle>) +\n    c4 * cnj (c1 * \\<langle>v2|u1\\<rangle> + c2 * \\<langle>v2|u2\\<rangle>)", "using inner_prod_is_linear[of \"v1\" \"\\<lambda>i. if i = 0 then u1 else u2\" \"\\<lambda>i. if i = 0 then c1 else c2\"] \n          inner_prod_is_linear[of \"v2\" \"\\<lambda>i. if i = 0 then u1 else u2\" \"\\<lambda>i. if i = 0 then c1 else c2\"] assms"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>{0, 1}.\n     dim_vec v1 = dim_vec (if i = 0 then u1 else u2) \\<Longrightarrow>\n  \\<langle>v1|(if 0 = 0 then c1 else c2) \\<cdot>\\<^sub>v\n              (if 0 = 0 then u1 else u2) +\n              (if 1 = 0 then c1 else c2) \\<cdot>\\<^sub>v\n              (if 1 = 0 then u1 else u2)\\<rangle> =\n  (\\<Sum>i\\<le>1.\n      (if i = 0 then c1 else c2) *\n      \\<langle>v1|if i = 0 then u1 else u2\\<rangle>)\n  \\<forall>i\\<in>{0, 1}.\n     dim_vec v2 = dim_vec (if i = 0 then u1 else u2) \\<Longrightarrow>\n  \\<langle>v2|(if 0 = 0 then c1 else c2) \\<cdot>\\<^sub>v\n              (if 0 = 0 then u1 else u2) +\n              (if 1 = 0 then c1 else c2) \\<cdot>\\<^sub>v\n              (if 1 = 0 then u1 else u2)\\<rangle> =\n  (\\<Sum>i\\<le>1.\n      (if i = 0 then c1 else c2) *\n      \\<langle>v2|if i = 0 then u1 else u2\\<rangle>)\n  dim_vec u1 = n\n  dim_vec u2 = n\n  dim_vec v1 = n\n  dim_vec v2 = n\n\ngoal (1 subgoal):\n 1. c3 *\n    cnj \\<langle>v1|c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2\\<rangle> +\n    c4 *\n    cnj \\<langle>v2|c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2\\<rangle> =\n    c3 * cnj (c1 * \\<langle>v1|u1\\<rangle> + c2 * \\<langle>v1|u2\\<rangle>) +\n    c4 * cnj (c1 * \\<langle>v2|u1\\<rangle> + c2 * \\<langle>v2|u2\\<rangle>)", "by simp"], ["proof (state)\nthis:\n  c3 *\n  cnj \\<langle>v1|c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2\\<rangle> +\n  c4 *\n  cnj \\<langle>v2|c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2\\<rangle> =\n  c3 * cnj (c1 * \\<langle>v1|u1\\<rangle> + c2 * \\<langle>v1|u2\\<rangle>) +\n  c4 * cnj (c1 * \\<langle>v2|u1\\<rangle> + c2 * \\<langle>v2|u2\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<langle>c1 \\<cdot>\\<^sub>v u1 +\n             c2 \\<cdot>\\<^sub>v\n             u2|c3 \\<cdot>\\<^sub>v v1 + c4 \\<cdot>\\<^sub>v v2\\<rangle> =\n    cnj c1 * c3 * \\<langle>u1|v1\\<rangle> +\n    cnj c2 * c3 * \\<langle>u2|v1\\<rangle> +\n    cnj c1 * c4 * \\<langle>u1|v2\\<rangle> +\n    cnj c2 * c4 * \\<langle>u2|v2\\<rangle>", "also"], ["proof (state)\nthis:\n  c3 *\n  cnj \\<langle>v1|c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2\\<rangle> +\n  c4 *\n  cnj \\<langle>v2|c1 \\<cdot>\\<^sub>v u1 + c2 \\<cdot>\\<^sub>v u2\\<rangle> =\n  c3 * cnj (c1 * \\<langle>v1|u1\\<rangle> + c2 * \\<langle>v1|u2\\<rangle>) +\n  c4 * cnj (c1 * \\<langle>v2|u1\\<rangle> + c2 * \\<langle>v2|u2\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<langle>c1 \\<cdot>\\<^sub>v u1 +\n             c2 \\<cdot>\\<^sub>v\n             u2|c3 \\<cdot>\\<^sub>v v1 + c4 \\<cdot>\\<^sub>v v2\\<rangle> =\n    cnj c1 * c3 * \\<langle>u1|v1\\<rangle> +\n    cnj c2 * c3 * \\<langle>u2|v1\\<rangle> +\n    cnj c1 * c4 * \\<langle>u1|v2\\<rangle> +\n    cnj c2 * c4 * \\<langle>u2|v2\\<rangle>", "have \"... = c3 * (cnj(c1) * \\<langle>u1|v1\\<rangle> + cnj(c2) * \\<langle>u2|v1\\<rangle>) + \n                   c4 * (cnj(c1) * \\<langle>u1|v2\\<rangle> + cnj(c2) * \\<langle>u2|v2\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c3 * cnj (c1 * \\<langle>v1|u1\\<rangle> + c2 * \\<langle>v1|u2\\<rangle>) +\n    c4 * cnj (c1 * \\<langle>v2|u1\\<rangle> + c2 * \\<langle>v2|u2\\<rangle>) =\n    c3 *\n    (cnj c1 * \\<langle>u1|v1\\<rangle> + cnj c2 * \\<langle>u2|v1\\<rangle>) +\n    c4 *\n    (cnj c1 * \\<langle>u1|v2\\<rangle> + cnj c2 * \\<langle>u2|v2\\<rangle>)", "using inner_prod_cnj[of \"v1\" \"u1\"] inner_prod_cnj[of \"v1\" \"u2\"] \n          inner_prod_cnj[of \"v2\" \"u1\"] inner_prod_cnj[of \"v2\" \"u2\"] assms"], ["proof (prove)\nusing this:\n  dim_vec v1 = dim_vec u1 \\<Longrightarrow>\n  \\<langle>u1|v1\\<rangle> = cnj \\<langle>v1|u1\\<rangle>\n  dim_vec v1 = dim_vec u2 \\<Longrightarrow>\n  \\<langle>u2|v1\\<rangle> = cnj \\<langle>v1|u2\\<rangle>\n  dim_vec v2 = dim_vec u1 \\<Longrightarrow>\n  \\<langle>u1|v2\\<rangle> = cnj \\<langle>v2|u1\\<rangle>\n  dim_vec v2 = dim_vec u2 \\<Longrightarrow>\n  \\<langle>u2|v2\\<rangle> = cnj \\<langle>v2|u2\\<rangle>\n  dim_vec u1 = n\n  dim_vec u2 = n\n  dim_vec v1 = n\n  dim_vec v2 = n\n\ngoal (1 subgoal):\n 1. c3 * cnj (c1 * \\<langle>v1|u1\\<rangle> + c2 * \\<langle>v1|u2\\<rangle>) +\n    c4 * cnj (c1 * \\<langle>v2|u1\\<rangle> + c2 * \\<langle>v2|u2\\<rangle>) =\n    c3 *\n    (cnj c1 * \\<langle>u1|v1\\<rangle> + cnj c2 * \\<langle>u2|v1\\<rangle>) +\n    c4 *\n    (cnj c1 * \\<langle>u1|v2\\<rangle> + cnj c2 * \\<langle>u2|v2\\<rangle>)", "by simp"], ["proof (state)\nthis:\n  c3 * cnj (c1 * \\<langle>v1|u1\\<rangle> + c2 * \\<langle>v1|u2\\<rangle>) +\n  c4 * cnj (c1 * \\<langle>v2|u1\\<rangle> + c2 * \\<langle>v2|u2\\<rangle>) =\n  c3 *\n  (cnj c1 * \\<langle>u1|v1\\<rangle> + cnj c2 * \\<langle>u2|v1\\<rangle>) +\n  c4 * (cnj c1 * \\<langle>u1|v2\\<rangle> + cnj c2 * \\<langle>u2|v2\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<langle>c1 \\<cdot>\\<^sub>v u1 +\n             c2 \\<cdot>\\<^sub>v\n             u2|c3 \\<cdot>\\<^sub>v v1 + c4 \\<cdot>\\<^sub>v v2\\<rangle> =\n    cnj c1 * c3 * \\<langle>u1|v1\\<rangle> +\n    cnj c2 * c3 * \\<langle>u2|v1\\<rangle> +\n    cnj c1 * c4 * \\<langle>u1|v2\\<rangle> +\n    cnj c2 * c4 * \\<langle>u2|v2\\<rangle>", "finally"], ["proof (chain)\npicking this:\n  \\<langle>c1 \\<cdot>\\<^sub>v u1 +\n           c2 \\<cdot>\\<^sub>v\n           u2|c3 \\<cdot>\\<^sub>v v1 + c4 \\<cdot>\\<^sub>v v2\\<rangle> =\n  c3 *\n  (cnj c1 * \\<langle>u1|v1\\<rangle> + cnj c2 * \\<langle>u2|v1\\<rangle>) +\n  c4 * (cnj c1 * \\<langle>u1|v2\\<rangle> + cnj c2 * \\<langle>u2|v2\\<rangle>)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>c1 \\<cdot>\\<^sub>v u1 +\n           c2 \\<cdot>\\<^sub>v\n           u2|c3 \\<cdot>\\<^sub>v v1 + c4 \\<cdot>\\<^sub>v v2\\<rangle> =\n  c3 *\n  (cnj c1 * \\<langle>u1|v1\\<rangle> + cnj c2 * \\<langle>u2|v1\\<rangle>) +\n  c4 * (cnj c1 * \\<langle>u1|v2\\<rangle> + cnj c2 * \\<langle>u2|v2\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<langle>c1 \\<cdot>\\<^sub>v u1 +\n             c2 \\<cdot>\\<^sub>v\n             u2|c3 \\<cdot>\\<^sub>v v1 + c4 \\<cdot>\\<^sub>v v2\\<rangle> =\n    cnj c1 * c3 * \\<langle>u1|v1\\<rangle> +\n    cnj c2 * c3 * \\<langle>u2|v1\\<rangle> +\n    cnj c1 * c4 * \\<langle>u1|v2\\<rangle> +\n    cnj c2 * c4 * \\<langle>u2|v2\\<rangle>", "by (auto simp add: algebra_simps)"], ["proof (state)\nthis:\n  \\<langle>c1 \\<cdot>\\<^sub>v u1 +\n           c2 \\<cdot>\\<^sub>v\n           u2|c3 \\<cdot>\\<^sub>v v1 + c4 \\<cdot>\\<^sub>v v2\\<rangle> =\n  cnj c1 * c3 * \\<langle>u1|v1\\<rangle> +\n  cnj c2 * c3 * \\<langle>u2|v1\\<rangle> +\n  cnj c1 * c4 * \\<langle>u1|v2\\<rangle> +\n  cnj c2 * c4 * \\<langle>u2|v2\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\nA length-preserving matrix is unitary. So, unitary matrices are exactly the length-preserving\nmatrices.\n\\<close>"], ["", "lemma length_preserving_is_unitary:\n  fixes U:: \"complex mat\"\n  assumes \"square_mat U\" and \"\\<forall>v::complex vec. dim_vec v = dim_col U \\<longrightarrow> \\<parallel>U * |v\\<rangle>\\<parallel> = \\<parallel>v\\<parallel>\"\n  shows \"unitary U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unitary U", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. unitary U", "define n where \"n = dim_col U\""], ["proof (state)\nthis:\n  n = dim_col U\n\ngoal (1 subgoal):\n 1. unitary U", "then"], ["proof (chain)\npicking this:\n  n = dim_col U", "have c0:\"U \\<in> carrier_mat n n\""], ["proof (prove)\nusing this:\n  n = dim_col U\n\ngoal (1 subgoal):\n 1. U \\<in> carrier_mat n n", "using assms(1)"], ["proof (prove)\nusing this:\n  n = dim_col U\n  square_mat U\n\ngoal (1 subgoal):\n 1. U \\<in> carrier_mat n n", "by auto"], ["proof (state)\nthis:\n  U \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. unitary U", "then"], ["proof (chain)\npicking this:\n  U \\<in> carrier_mat n n", "have c1:\"U\\<^sup>\\<dagger> \\<in> carrier_mat n n\""], ["proof (prove)\nusing this:\n  U \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. U\\<^sup>\\<dagger> \\<in> carrier_mat n n", "using assms(1) dagger_def"], ["proof (prove)\nusing this:\n  U \\<in> carrier_mat n n\n  square_mat U\n  ?M\\<^sup>\\<dagger> \\<equiv>\n  mat (dim_col ?M) (dim_row ?M) (\\<lambda>(i, j). cnj (?M $$ (j, i)))\n\ngoal (1 subgoal):\n 1. U\\<^sup>\\<dagger> \\<in> carrier_mat n n", "by auto"], ["proof (state)\nthis:\n  U\\<^sup>\\<dagger> \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. unitary U", "have f0:\"(U\\<^sup>\\<dagger>) * U = 1\\<^sub>m (dim_col U)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U\\<^sup>\\<dagger> * U = 1\\<^sub>m (dim_col U)", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (1\\<^sub>m (dim_col U));\n        j < dim_col (1\\<^sub>m (dim_col U))\\<rbrakk>\n       \\<Longrightarrow> (U\\<^sup>\\<dagger> * U) $$ (i, j) =\n                         1\\<^sub>m (dim_col U) $$ (i, j)\n 2. dim_row (U\\<^sup>\\<dagger> * U) = dim_row (1\\<^sub>m (dim_col U))\n 3. dim_col (U\\<^sup>\\<dagger> * U) = dim_col (1\\<^sub>m (dim_col U))", "show \"dim_row (U\\<^sup>\\<dagger> * U) = dim_row (1\\<^sub>m (dim_col U))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row (U\\<^sup>\\<dagger> * U) = dim_row (1\\<^sub>m (dim_col U))", "using c0"], ["proof (prove)\nusing this:\n  U \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. dim_row (U\\<^sup>\\<dagger> * U) = dim_row (1\\<^sub>m (dim_col U))", "by simp"], ["proof (state)\nthis:\n  dim_row (U\\<^sup>\\<dagger> * U) = dim_row (1\\<^sub>m (dim_col U))\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (1\\<^sub>m (dim_col U));\n        j < dim_col (1\\<^sub>m (dim_col U))\\<rbrakk>\n       \\<Longrightarrow> (U\\<^sup>\\<dagger> * U) $$ (i, j) =\n                         1\\<^sub>m (dim_col U) $$ (i, j)\n 2. dim_col (U\\<^sup>\\<dagger> * U) = dim_col (1\\<^sub>m (dim_col U))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (1\\<^sub>m (dim_col U));\n        j < dim_col (1\\<^sub>m (dim_col U))\\<rbrakk>\n       \\<Longrightarrow> (U\\<^sup>\\<dagger> * U) $$ (i, j) =\n                         1\\<^sub>m (dim_col U) $$ (i, j)\n 2. dim_col (U\\<^sup>\\<dagger> * U) = dim_col (1\\<^sub>m (dim_col U))", "show \"dim_col (U\\<^sup>\\<dagger> * U) = dim_col (1\\<^sub>m (dim_col U))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col (U\\<^sup>\\<dagger> * U) = dim_col (1\\<^sub>m (dim_col U))", "using c0"], ["proof (prove)\nusing this:\n  U \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. dim_col (U\\<^sup>\\<dagger> * U) = dim_col (1\\<^sub>m (dim_col U))", "by simp"], ["proof (state)\nthis:\n  dim_col (U\\<^sup>\\<dagger> * U) = dim_col (1\\<^sub>m (dim_col U))\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (1\\<^sub>m (dim_col U));\n        j < dim_col (1\\<^sub>m (dim_col U))\\<rbrakk>\n       \\<Longrightarrow> (U\\<^sup>\\<dagger> * U) $$ (i, j) =\n                         1\\<^sub>m (dim_col U) $$ (i, j)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (1\\<^sub>m (dim_col U));\n        j < dim_col (1\\<^sub>m (dim_col U))\\<rbrakk>\n       \\<Longrightarrow> (U\\<^sup>\\<dagger> * U) $$ (i, j) =\n                         1\\<^sub>m (dim_col U) $$ (i, j)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (1\\<^sub>m (dim_col U));\n        j < dim_col (1\\<^sub>m (dim_col U))\\<rbrakk>\n       \\<Longrightarrow> (U\\<^sup>\\<dagger> * U) $$ (i, j) =\n                         1\\<^sub>m (dim_col U) $$ (i, j)", "assume \"i < dim_row (1\\<^sub>m (dim_col U))\" and \"j < dim_col (1\\<^sub>m (dim_col U))\""], ["proof (state)\nthis:\n  i < dim_row (1\\<^sub>m (dim_col U))\n  j < dim_col (1\\<^sub>m (dim_col U))\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (1\\<^sub>m (dim_col U));\n        j < dim_col (1\\<^sub>m (dim_col U))\\<rbrakk>\n       \\<Longrightarrow> (U\\<^sup>\\<dagger> * U) $$ (i, j) =\n                         1\\<^sub>m (dim_col U) $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i < dim_row (1\\<^sub>m (dim_col U))\n  j < dim_col (1\\<^sub>m (dim_col U))", "have a0:\"i < n \\<and> j < n\""], ["proof (prove)\nusing this:\n  i < dim_row (1\\<^sub>m (dim_col U))\n  j < dim_col (1\\<^sub>m (dim_col U))\n\ngoal (1 subgoal):\n 1. i < n \\<and> j < n", "using c0"], ["proof (prove)\nusing this:\n  i < dim_row (1\\<^sub>m (dim_col U))\n  j < dim_col (1\\<^sub>m (dim_col U))\n  U \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. i < n \\<and> j < n", "by simp"], ["proof (state)\nthis:\n  i < n \\<and> j < n\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (1\\<^sub>m (dim_col U));\n        j < dim_col (1\\<^sub>m (dim_col U))\\<rbrakk>\n       \\<Longrightarrow> (U\\<^sup>\\<dagger> * U) $$ (i, j) =\n                         1\\<^sub>m (dim_col U) $$ (i, j)", "have f1:\"\\<And>l. l<n \\<longrightarrow> (\\<Sum>k<n. cnj (U $$ (k, l)) * U $$ (k, l)) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       l < n \\<longrightarrow>\n       (\\<Sum>k<n. cnj (U $$ (k, l)) * U $$ (k, l)) = 1", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l.\n       l < n \\<Longrightarrow>\n       (\\<Sum>k<n. cnj (U $$ (k, l)) * U $$ (k, l)) = 1", "fix l"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l.\n       l < n \\<Longrightarrow>\n       (\\<Sum>k<n. cnj (U $$ (k, l)) * U $$ (k, l)) = 1", "assume a1:\"l<n\""], ["proof (state)\nthis:\n  l < n\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       l < n \\<Longrightarrow>\n       (\\<Sum>k<n. cnj (U $$ (k, l)) * U $$ (k, l)) = 1", "define v::\"complex vec\" where d1:\"v = unit_vec n l\""], ["proof (state)\nthis:\n  v = unit_vec n l\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       l < n \\<Longrightarrow>\n       (\\<Sum>k<n. cnj (U $$ (k, l)) * U $$ (k, l)) = 1", "have \"\\<parallel>col U l\\<parallel>\\<^sup>2 = (\\<Sum>k<n. cnj (U $$ (k, l)) * U $$ (k, l))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (\\<parallel>col U l\\<parallel>\\<^sup>2) =\n    (\\<Sum>k<n. cnj (U $$ (k, l)) * U $$ (k, l))", "using c0 a1 cpx_vec_length_inner_prod inner_prod_def lessThan_atLeast0"], ["proof (prove)\nusing this:\n  U \\<in> carrier_mat n n\n  l < n\n  complex_of_real (\\<parallel>?v\\<parallel>\\<^sup>2) =\n  \\<langle>?v|?v\\<rangle>\n  \\<langle>?u|?v\\<rangle> \\<equiv>\n  \\<Sum>i = 0..<dim_vec ?v. cnj (?u $ i) * ?v $ i\n  {..<?n} = {0..<?n}\n\ngoal (1 subgoal):\n 1. complex_of_real (\\<parallel>col U l\\<parallel>\\<^sup>2) =\n    (\\<Sum>k<n. cnj (U $$ (k, l)) * U $$ (k, l))", "by simp"], ["proof (state)\nthis:\n  complex_of_real (\\<parallel>col U l\\<parallel>\\<^sup>2) =\n  (\\<Sum>k<n. cnj (U $$ (k, l)) * U $$ (k, l))\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       l < n \\<Longrightarrow>\n       (\\<Sum>k<n. cnj (U $$ (k, l)) * U $$ (k, l)) = 1", "moreover"], ["proof (state)\nthis:\n  complex_of_real (\\<parallel>col U l\\<parallel>\\<^sup>2) =\n  (\\<Sum>k<n. cnj (U $$ (k, l)) * U $$ (k, l))\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       l < n \\<Longrightarrow>\n       (\\<Sum>k<n. cnj (U $$ (k, l)) * U $$ (k, l)) = 1", "have \"\\<parallel>col U l\\<parallel>\\<^sup>2 = \\<parallel>v\\<parallel>\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>col U l\\<parallel>\\<^sup>2 = \\<parallel>v\\<parallel>\\<^sup>2", "using c0 d1 a1 assms(2) unit_vec_to_col"], ["proof (prove)\nusing this:\n  U \\<in> carrier_mat n n\n  v = unit_vec n l\n  l < n\n  \\<forall>v.\n     dim_vec v = dim_col U \\<longrightarrow>\n     \\<parallel>col_fst (U * |v\\<rangle>)\\<parallel> =\n     \\<parallel>v\\<parallel>\n  \\<lbrakk>dim_col ?A = ?n; ?i < ?n\\<rbrakk>\n  \\<Longrightarrow> col ?A ?i = col_fst (?A * |unit_vec ?n ?i\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<parallel>col U l\\<parallel>\\<^sup>2 = \\<parallel>v\\<parallel>\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  \\<parallel>col U l\\<parallel>\\<^sup>2 = \\<parallel>v\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       l < n \\<Longrightarrow>\n       (\\<Sum>k<n. cnj (U $$ (k, l)) * U $$ (k, l)) = 1", "moreover"], ["proof (state)\nthis:\n  \\<parallel>col U l\\<parallel>\\<^sup>2 = \\<parallel>v\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       l < n \\<Longrightarrow>\n       (\\<Sum>k<n. cnj (U $$ (k, l)) * U $$ (k, l)) = 1", "have \"\\<parallel>v\\<parallel>\\<^sup>2 = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>v\\<parallel>\\<^sup>2 = 1", "using d1 a1 cpx_vec_length_inner_prod"], ["proof (prove)\nusing this:\n  v = unit_vec n l\n  l < n\n  complex_of_real (\\<parallel>?v\\<parallel>\\<^sup>2) =\n  \\<langle>?v|?v\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<parallel>v\\<parallel>\\<^sup>2 = 1", "by simp"], ["proof (state)\nthis:\n  \\<parallel>v\\<parallel>\\<^sup>2 = 1\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       l < n \\<Longrightarrow>\n       (\\<Sum>k<n. cnj (U $$ (k, l)) * U $$ (k, l)) = 1", "ultimately"], ["proof (chain)\npicking this:\n  complex_of_real (\\<parallel>col U l\\<parallel>\\<^sup>2) =\n  (\\<Sum>k<n. cnj (U $$ (k, l)) * U $$ (k, l))\n  \\<parallel>col U l\\<parallel>\\<^sup>2 = \\<parallel>v\\<parallel>\\<^sup>2\n  \\<parallel>v\\<parallel>\\<^sup>2 = 1", "show \"(\\<Sum>k<n. cnj (U $$ (k, l)) * U $$ (k, l)) = 1\""], ["proof (prove)\nusing this:\n  complex_of_real (\\<parallel>col U l\\<parallel>\\<^sup>2) =\n  (\\<Sum>k<n. cnj (U $$ (k, l)) * U $$ (k, l))\n  \\<parallel>col U l\\<parallel>\\<^sup>2 = \\<parallel>v\\<parallel>\\<^sup>2\n  \\<parallel>v\\<parallel>\\<^sup>2 = 1\n\ngoal (1 subgoal):\n 1. (\\<Sum>k<n. cnj (U $$ (k, l)) * U $$ (k, l)) = 1", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k<n. cnj (U $$ (k, l)) * U $$ (k, l)) = 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?l1 < n \\<longrightarrow>\n  (\\<Sum>k<n. cnj (U $$ (k, ?l1)) * U $$ (k, ?l1)) = 1\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (1\\<^sub>m (dim_col U));\n        j < dim_col (1\\<^sub>m (dim_col U))\\<rbrakk>\n       \\<Longrightarrow> (U\\<^sup>\\<dagger> * U) $$ (i, j) =\n                         1\\<^sub>m (dim_col U) $$ (i, j)", "moreover"], ["proof (state)\nthis:\n  ?l1 < n \\<longrightarrow>\n  (\\<Sum>k<n. cnj (U $$ (k, ?l1)) * U $$ (k, ?l1)) = 1\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (1\\<^sub>m (dim_col U));\n        j < dim_col (1\\<^sub>m (dim_col U))\\<rbrakk>\n       \\<Longrightarrow> (U\\<^sup>\\<dagger> * U) $$ (i, j) =\n                         1\\<^sub>m (dim_col U) $$ (i, j)", "have \"i \\<noteq> j \\<longrightarrow> (\\<Sum>k<n. cnj (U $$ (k, i)) * U $$ (k, j)) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<longrightarrow>\n    (\\<Sum>k<n. cnj (U $$ (k, i)) * U $$ (k, j)) = 0", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow>\n    (\\<Sum>k<n. cnj (U $$ (k, i)) * U $$ (k, j)) = 0", "assume a2:\"i \\<noteq> j\""], ["proof (state)\nthis:\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow>\n    (\\<Sum>k<n. cnj (U $$ (k, i)) * U $$ (k, j)) = 0", "define v1::\"complex vec\" where d1:\"v1 = unit_vec n i + 1 \\<cdot>\\<^sub>v unit_vec n j\""], ["proof (state)\nthis:\n  v1 = unit_vec n i + 1 \\<cdot>\\<^sub>v unit_vec n j\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow>\n    (\\<Sum>k<n. cnj (U $$ (k, i)) * U $$ (k, j)) = 0", "define v2::\"complex vec\" where d2:\"v2 = unit_vec n i + \\<i> \\<cdot>\\<^sub>v unit_vec n j\""], ["proof (state)\nthis:\n  v2 = unit_vec n i + \\<i> \\<cdot>\\<^sub>v unit_vec n j\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow>\n    (\\<Sum>k<n. cnj (U $$ (k, i)) * U $$ (k, j)) = 0", "have \"\\<parallel>v1\\<parallel>\\<^sup>2 = 1 + cnj 1 * 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (\\<parallel>v1\\<parallel>\\<^sup>2) = 1 + cnj 1 * 1", "using d1 a0 a2 sum_of_unit_vec_length"], ["proof (prove)\nusing this:\n  v1 = unit_vec n i + 1 \\<cdot>\\<^sub>v unit_vec n j\n  i < n \\<and> j < n\n  i \\<noteq> j\n  \\<lbrakk>?i < ?n; ?j < ?n; ?i \\<noteq> ?j\\<rbrakk>\n  \\<Longrightarrow> complex_of_real\n                     (\\<parallel>unit_vec ?n ?i +\n                                 ?c \\<cdot>\\<^sub>v\n                                 unit_vec ?n ?j\\<parallel>\\<^sup>2) =\n                    1 + cnj ?c * ?c\n\ngoal (1 subgoal):\n 1. complex_of_real (\\<parallel>v1\\<parallel>\\<^sup>2) = 1 + cnj 1 * 1", "by blast"], ["proof (state)\nthis:\n  complex_of_real (\\<parallel>v1\\<parallel>\\<^sup>2) = 1 + cnj 1 * 1\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow>\n    (\\<Sum>k<n. cnj (U $$ (k, i)) * U $$ (k, j)) = 0", "then"], ["proof (chain)\npicking this:\n  complex_of_real (\\<parallel>v1\\<parallel>\\<^sup>2) = 1 + cnj 1 * 1", "have \"\\<parallel>v1\\<parallel>\\<^sup>2 = 2\""], ["proof (prove)\nusing this:\n  complex_of_real (\\<parallel>v1\\<parallel>\\<^sup>2) = 1 + cnj 1 * 1\n\ngoal (1 subgoal):\n 1. \\<parallel>v1\\<parallel>\\<^sup>2 = 2", "by (metis complex_cnj_one cpx_vec_length_inner_prod mult.left_neutral of_real_eq_iff \n            of_real_numeral one_add_one)"], ["proof (state)\nthis:\n  \\<parallel>v1\\<parallel>\\<^sup>2 = 2\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow>\n    (\\<Sum>k<n. cnj (U $$ (k, i)) * U $$ (k, j)) = 0", "then"], ["proof (chain)\npicking this:\n  \\<parallel>v1\\<parallel>\\<^sup>2 = 2", "have \"\\<parallel>U * |v1\\<rangle>\\<parallel>\\<^sup>2 = 2\""], ["proof (prove)\nusing this:\n  \\<parallel>v1\\<parallel>\\<^sup>2 = 2\n\ngoal (1 subgoal):\n 1. \\<parallel>col_fst (U * |v1\\<rangle>)\\<parallel>\\<^sup>2 = 2", "using c0 d1 assms(2) unit_vec_to_col"], ["proof (prove)\nusing this:\n  \\<parallel>v1\\<parallel>\\<^sup>2 = 2\n  U \\<in> carrier_mat n n\n  v1 = unit_vec n i + 1 \\<cdot>\\<^sub>v unit_vec n j\n  \\<forall>v.\n     dim_vec v = dim_col U \\<longrightarrow>\n     \\<parallel>col_fst (U * |v\\<rangle>)\\<parallel> =\n     \\<parallel>v\\<parallel>\n  \\<lbrakk>dim_col ?A = ?n; ?i < ?n\\<rbrakk>\n  \\<Longrightarrow> col ?A ?i = col_fst (?A * |unit_vec ?n ?i\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<parallel>col_fst (U * |v1\\<rangle>)\\<parallel>\\<^sup>2 = 2", "by simp"], ["proof (state)\nthis:\n  \\<parallel>col_fst (U * |v1\\<rangle>)\\<parallel>\\<^sup>2 = 2\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow>\n    (\\<Sum>k<n. cnj (U $$ (k, i)) * U $$ (k, j)) = 0", "moreover"], ["proof (state)\nthis:\n  \\<parallel>col_fst (U * |v1\\<rangle>)\\<parallel>\\<^sup>2 = 2\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow>\n    (\\<Sum>k<n. cnj (U $$ (k, i)) * U $$ (k, j)) = 0", "have \"col U i + 1 \\<cdot>\\<^sub>v col U j = U * |v1\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col U i + 1 \\<cdot>\\<^sub>v col U j = col_fst (U * |v1\\<rangle>)", "using c0 d1 a0 sum_of_unit_vec_to_col"], ["proof (prove)\nusing this:\n  U \\<in> carrier_mat n n\n  v1 = unit_vec n i + 1 \\<cdot>\\<^sub>v unit_vec n j\n  i < n \\<and> j < n\n  \\<lbrakk>dim_col ?A = ?n; ?i < ?n; ?j < ?n\\<rbrakk>\n  \\<Longrightarrow> col ?A ?i + ?c \\<cdot>\\<^sub>v col ?A ?j =\n                    col_fst\n                     (?A *\n                      |unit_vec ?n ?i +\n                       ?c \\<cdot>\\<^sub>v unit_vec ?n ?j\\<rangle>)\n\ngoal (1 subgoal):\n 1. col U i + 1 \\<cdot>\\<^sub>v col U j = col_fst (U * |v1\\<rangle>)", "by blast"], ["proof (state)\nthis:\n  col U i + 1 \\<cdot>\\<^sub>v col U j = col_fst (U * |v1\\<rangle>)\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow>\n    (\\<Sum>k<n. cnj (U $$ (k, i)) * U $$ (k, j)) = 0", "moreover"], ["proof (state)\nthis:\n  col U i + 1 \\<cdot>\\<^sub>v col U j = col_fst (U * |v1\\<rangle>)\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow>\n    (\\<Sum>k<n. cnj (U $$ (k, i)) * U $$ (k, j)) = 0", "have \"col U i + 1 \\<cdot>\\<^sub>v col U j = col U i + col U j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col U i + 1 \\<cdot>\\<^sub>v col U j = col U i + col U j", "by simp"], ["proof (state)\nthis:\n  col U i + 1 \\<cdot>\\<^sub>v col U j = col U i + col U j\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow>\n    (\\<Sum>k<n. cnj (U $$ (k, i)) * U $$ (k, j)) = 0", "ultimately"], ["proof (chain)\npicking this:\n  \\<parallel>col_fst (U * |v1\\<rangle>)\\<parallel>\\<^sup>2 = 2\n  col U i + 1 \\<cdot>\\<^sub>v col U j = col_fst (U * |v1\\<rangle>)\n  col U i + 1 \\<cdot>\\<^sub>v col U j = col U i + col U j", "have \"\\<langle>col U i + col U j|col U i + col U j\\<rangle> = 2\""], ["proof (prove)\nusing this:\n  \\<parallel>col_fst (U * |v1\\<rangle>)\\<parallel>\\<^sup>2 = 2\n  col U i + 1 \\<cdot>\\<^sub>v col U j = col_fst (U * |v1\\<rangle>)\n  col U i + 1 \\<cdot>\\<^sub>v col U j = col U i + col U j\n\ngoal (1 subgoal):\n 1. \\<langle>col U i + col U j|col U i + col U j\\<rangle> = 2", "using cpx_vec_length_inner_prod"], ["proof (prove)\nusing this:\n  \\<parallel>col_fst (U * |v1\\<rangle>)\\<parallel>\\<^sup>2 = 2\n  col U i + 1 \\<cdot>\\<^sub>v col U j = col_fst (U * |v1\\<rangle>)\n  col U i + 1 \\<cdot>\\<^sub>v col U j = col U i + col U j\n  complex_of_real (\\<parallel>?v\\<parallel>\\<^sup>2) =\n  \\<langle>?v|?v\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>col U i + col U j|col U i + col U j\\<rangle> = 2", "by (metis of_real_numeral)"], ["proof (state)\nthis:\n  \\<langle>col U i + col U j|col U i + col U j\\<rangle> = 2\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow>\n    (\\<Sum>k<n. cnj (U $$ (k, i)) * U $$ (k, j)) = 0", "moreover"], ["proof (state)\nthis:\n  \\<langle>col U i + col U j|col U i + col U j\\<rangle> = 2\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow>\n    (\\<Sum>k<n. cnj (U $$ (k, i)) * U $$ (k, j)) = 0", "have \"\\<langle>col U i + col U j|col U i + col U j\\<rangle> = \n               \\<langle>col U i|col U i\\<rangle> + \\<langle>col U j|col U i\\<rangle> + \\<langle>col U i|col U j\\<rangle> + \\<langle>col U j|col U j\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>col U i + col U j|col U i + col U j\\<rangle> =\n    \\<langle>col U i|col U i\\<rangle> + \\<langle>col U j|col U i\\<rangle> +\n    \\<langle>col U i|col U j\\<rangle> +\n    \\<langle>col U j|col U j\\<rangle>", "using inner_prod_is_sesquilinear[of \"col U i\" \"dim_row U\" \"col U j\" \"col U i\" \"col U j\" \"1\" \"1\" \"1\" \"1\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>dim_vec (col U i) = dim_row U; dim_vec (col U j) = dim_row U;\n   dim_vec (col U i) = dim_row U; dim_vec (col U j) = dim_row U\\<rbrakk>\n  \\<Longrightarrow> \\<langle>1 \\<cdot>\\<^sub>v col U i +\n                             1 \\<cdot>\\<^sub>v\n                             col U\n                              j|1 \\<cdot>\\<^sub>v col U i +\n                                1 \\<cdot>\\<^sub>v col U j\\<rangle> =\n                    cnj 1 * 1 * \\<langle>col U i|col U i\\<rangle> +\n                    cnj 1 * 1 * \\<langle>col U j|col U i\\<rangle> +\n                    cnj 1 * 1 * \\<langle>col U i|col U j\\<rangle> +\n                    cnj 1 * 1 * \\<langle>col U j|col U j\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>col U i + col U j|col U i + col U j\\<rangle> =\n    \\<langle>col U i|col U i\\<rangle> + \\<langle>col U j|col U i\\<rangle> +\n    \\<langle>col U i|col U j\\<rangle> +\n    \\<langle>col U j|col U j\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>col U i + col U j|col U i + col U j\\<rangle> =\n  \\<langle>col U i|col U i\\<rangle> + \\<langle>col U j|col U i\\<rangle> +\n  \\<langle>col U i|col U j\\<rangle> +\n  \\<langle>col U j|col U j\\<rangle>\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow>\n    (\\<Sum>k<n. cnj (U $$ (k, i)) * U $$ (k, j)) = 0", "ultimately"], ["proof (chain)\npicking this:\n  \\<langle>col U i + col U j|col U i + col U j\\<rangle> = 2\n  \\<langle>col U i + col U j|col U i + col U j\\<rangle> =\n  \\<langle>col U i|col U i\\<rangle> + \\<langle>col U j|col U i\\<rangle> +\n  \\<langle>col U i|col U j\\<rangle> +\n  \\<langle>col U j|col U j\\<rangle>", "have f2:\"\\<langle>col U j|col U i\\<rangle> + \\<langle>col U i|col U j\\<rangle> = 0\""], ["proof (prove)\nusing this:\n  \\<langle>col U i + col U j|col U i + col U j\\<rangle> = 2\n  \\<langle>col U i + col U j|col U i + col U j\\<rangle> =\n  \\<langle>col U i|col U i\\<rangle> + \\<langle>col U j|col U i\\<rangle> +\n  \\<langle>col U i|col U j\\<rangle> +\n  \\<langle>col U j|col U j\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>col U j|col U i\\<rangle> + \\<langle>col U i|col U j\\<rangle> =\n    0", "using c0 a0 f1 inner_prod_def lessThan_atLeast0"], ["proof (prove)\nusing this:\n  \\<langle>col U i + col U j|col U i + col U j\\<rangle> = 2\n  \\<langle>col U i + col U j|col U i + col U j\\<rangle> =\n  \\<langle>col U i|col U i\\<rangle> + \\<langle>col U j|col U i\\<rangle> +\n  \\<langle>col U i|col U j\\<rangle> +\n  \\<langle>col U j|col U j\\<rangle>\n  U \\<in> carrier_mat n n\n  i < n \\<and> j < n\n  ?l1 < n \\<longrightarrow>\n  (\\<Sum>k<n. cnj (U $$ (k, ?l1)) * U $$ (k, ?l1)) = 1\n  \\<langle>?u|?v\\<rangle> \\<equiv>\n  \\<Sum>i = 0..<dim_vec ?v. cnj (?u $ i) * ?v $ i\n  {..<?n} = {0..<?n}\n\ngoal (1 subgoal):\n 1. \\<langle>col U j|col U i\\<rangle> + \\<langle>col U i|col U j\\<rangle> =\n    0", "by simp"], ["proof (state)\nthis:\n  \\<langle>col U j|col U i\\<rangle> + \\<langle>col U i|col U j\\<rangle> = 0\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow>\n    (\\<Sum>k<n. cnj (U $$ (k, i)) * U $$ (k, j)) = 0", "have \"\\<parallel>v2\\<parallel>\\<^sup>2 = 1 + cnj \\<i> * \\<i>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (\\<parallel>v2\\<parallel>\\<^sup>2) = 1 + cnj \\<i> * \\<i>", "using a0 a2 d2 sum_of_unit_vec_length"], ["proof (prove)\nusing this:\n  i < n \\<and> j < n\n  i \\<noteq> j\n  v2 = unit_vec n i + \\<i> \\<cdot>\\<^sub>v unit_vec n j\n  \\<lbrakk>?i < ?n; ?j < ?n; ?i \\<noteq> ?j\\<rbrakk>\n  \\<Longrightarrow> complex_of_real\n                     (\\<parallel>unit_vec ?n ?i +\n                                 ?c \\<cdot>\\<^sub>v\n                                 unit_vec ?n ?j\\<parallel>\\<^sup>2) =\n                    1 + cnj ?c * ?c\n\ngoal (1 subgoal):\n 1. complex_of_real (\\<parallel>v2\\<parallel>\\<^sup>2) = 1 + cnj \\<i> * \\<i>", "by simp"], ["proof (state)\nthis:\n  complex_of_real (\\<parallel>v2\\<parallel>\\<^sup>2) = 1 + cnj \\<i> * \\<i>\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow>\n    (\\<Sum>k<n. cnj (U $$ (k, i)) * U $$ (k, j)) = 0", "then"], ["proof (chain)\npicking this:\n  complex_of_real (\\<parallel>v2\\<parallel>\\<^sup>2) = 1 + cnj \\<i> * \\<i>", "have \"\\<parallel>v2\\<parallel>\\<^sup>2 = 2\""], ["proof (prove)\nusing this:\n  complex_of_real (\\<parallel>v2\\<parallel>\\<^sup>2) = 1 + cnj \\<i> * \\<i>\n\ngoal (1 subgoal):\n 1. \\<parallel>v2\\<parallel>\\<^sup>2 = 2", "by (metis Re_complex_of_real complex_norm_square mult.commute norm_ii numeral_Bit0 \n            numeral_One numeral_eq_one_iff of_real_numeral one_power2)"], ["proof (state)\nthis:\n  \\<parallel>v2\\<parallel>\\<^sup>2 = 2\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow>\n    (\\<Sum>k<n. cnj (U $$ (k, i)) * U $$ (k, j)) = 0", "moreover"], ["proof (state)\nthis:\n  \\<parallel>v2\\<parallel>\\<^sup>2 = 2\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow>\n    (\\<Sum>k<n. cnj (U $$ (k, i)) * U $$ (k, j)) = 0", "have \"\\<parallel>U * |v2\\<rangle>\\<parallel>\\<^sup>2 = \\<parallel>v2\\<parallel>\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>col_fst (U * |v2\\<rangle>)\\<parallel>\\<^sup>2 =\n    \\<parallel>v2\\<parallel>\\<^sup>2", "using c0 d2 assms(2) unit_vec_to_col"], ["proof (prove)\nusing this:\n  U \\<in> carrier_mat n n\n  v2 = unit_vec n i + \\<i> \\<cdot>\\<^sub>v unit_vec n j\n  \\<forall>v.\n     dim_vec v = dim_col U \\<longrightarrow>\n     \\<parallel>col_fst (U * |v\\<rangle>)\\<parallel> =\n     \\<parallel>v\\<parallel>\n  \\<lbrakk>dim_col ?A = ?n; ?i < ?n\\<rbrakk>\n  \\<Longrightarrow> col ?A ?i = col_fst (?A * |unit_vec ?n ?i\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<parallel>col_fst (U * |v2\\<rangle>)\\<parallel>\\<^sup>2 =\n    \\<parallel>v2\\<parallel>\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  \\<parallel>col_fst (U * |v2\\<rangle>)\\<parallel>\\<^sup>2 =\n  \\<parallel>v2\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow>\n    (\\<Sum>k<n. cnj (U $$ (k, i)) * U $$ (k, j)) = 0", "moreover"], ["proof (state)\nthis:\n  \\<parallel>col_fst (U * |v2\\<rangle>)\\<parallel>\\<^sup>2 =\n  \\<parallel>v2\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow>\n    (\\<Sum>k<n. cnj (U $$ (k, i)) * U $$ (k, j)) = 0", "have \"\\<langle>col U i + \\<i> \\<cdot>\\<^sub>v col U j|col U i + \\<i> \\<cdot>\\<^sub>v col U j\\<rangle> = \\<parallel>U * |v2\\<rangle>\\<parallel>\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>col U i +\n             \\<i> \\<cdot>\\<^sub>v\n             col U j|col U i + \\<i> \\<cdot>\\<^sub>v col U j\\<rangle> =\n    complex_of_real\n     (\\<parallel>col_fst (U * |v2\\<rangle>)\\<parallel>\\<^sup>2)", "using c0 a0 d2 sum_of_unit_vec_to_col cpx_vec_length_inner_prod"], ["proof (prove)\nusing this:\n  U \\<in> carrier_mat n n\n  i < n \\<and> j < n\n  v2 = unit_vec n i + \\<i> \\<cdot>\\<^sub>v unit_vec n j\n  \\<lbrakk>dim_col ?A = ?n; ?i < ?n; ?j < ?n\\<rbrakk>\n  \\<Longrightarrow> col ?A ?i + ?c \\<cdot>\\<^sub>v col ?A ?j =\n                    col_fst\n                     (?A *\n                      |unit_vec ?n ?i +\n                       ?c \\<cdot>\\<^sub>v unit_vec ?n ?j\\<rangle>)\n  complex_of_real (\\<parallel>?v\\<parallel>\\<^sup>2) =\n  \\<langle>?v|?v\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>col U i +\n             \\<i> \\<cdot>\\<^sub>v\n             col U j|col U i + \\<i> \\<cdot>\\<^sub>v col U j\\<rangle> =\n    complex_of_real\n     (\\<parallel>col_fst (U * |v2\\<rangle>)\\<parallel>\\<^sup>2)", "by auto"], ["proof (state)\nthis:\n  \\<langle>col U i +\n           \\<i> \\<cdot>\\<^sub>v\n           col U j|col U i + \\<i> \\<cdot>\\<^sub>v col U j\\<rangle> =\n  complex_of_real (\\<parallel>col_fst (U * |v2\\<rangle>)\\<parallel>\\<^sup>2)\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow>\n    (\\<Sum>k<n. cnj (U $$ (k, i)) * U $$ (k, j)) = 0", "moreover"], ["proof (state)\nthis:\n  \\<langle>col U i +\n           \\<i> \\<cdot>\\<^sub>v\n           col U j|col U i + \\<i> \\<cdot>\\<^sub>v col U j\\<rangle> =\n  complex_of_real (\\<parallel>col_fst (U * |v2\\<rangle>)\\<parallel>\\<^sup>2)\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow>\n    (\\<Sum>k<n. cnj (U $$ (k, i)) * U $$ (k, j)) = 0", "have \"\\<langle>col U i + \\<i> \\<cdot>\\<^sub>v col U j|col U i + \\<i> \\<cdot>\\<^sub>v col U j\\<rangle> = \n                     \\<langle>col U i|col U i\\<rangle> + (-\\<i>) * \\<langle>col U j|col U i\\<rangle> + \\<i> * \\<langle>col U i|col U j\\<rangle> + \\<langle>col U j|col U j\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>col U i +\n             \\<i> \\<cdot>\\<^sub>v\n             col U j|col U i + \\<i> \\<cdot>\\<^sub>v col U j\\<rangle> =\n    \\<langle>col U i|col U i\\<rangle> +\n    - \\<i> * \\<langle>col U j|col U i\\<rangle> +\n    \\<i> * \\<langle>col U i|col U j\\<rangle> +\n    \\<langle>col U j|col U j\\<rangle>", "using inner_prod_is_sesquilinear[of \"col U i\" \"dim_row U\" \"col U j\" \"col U i\" \"col U j\" \"1\" \"\\<i>\" \"1\" \"\\<i>\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>dim_vec (col U i) = dim_row U; dim_vec (col U j) = dim_row U;\n   dim_vec (col U i) = dim_row U; dim_vec (col U j) = dim_row U\\<rbrakk>\n  \\<Longrightarrow> \\<langle>1 \\<cdot>\\<^sub>v col U i +\n                             \\<i> \\<cdot>\\<^sub>v\n                             col U\n                              j|1 \\<cdot>\\<^sub>v col U i +\n                                \\<i> \\<cdot>\\<^sub>v col U j\\<rangle> =\n                    cnj 1 * 1 * \\<langle>col U i|col U i\\<rangle> +\n                    cnj \\<i> * 1 * \\<langle>col U j|col U i\\<rangle> +\n                    cnj 1 * \\<i> * \\<langle>col U i|col U j\\<rangle> +\n                    cnj \\<i> * \\<i> * \\<langle>col U j|col U j\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>col U i +\n             \\<i> \\<cdot>\\<^sub>v\n             col U j|col U i + \\<i> \\<cdot>\\<^sub>v col U j\\<rangle> =\n    \\<langle>col U i|col U i\\<rangle> +\n    - \\<i> * \\<langle>col U j|col U i\\<rangle> +\n    \\<i> * \\<langle>col U i|col U j\\<rangle> +\n    \\<langle>col U j|col U j\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>col U i +\n           \\<i> \\<cdot>\\<^sub>v\n           col U j|col U i + \\<i> \\<cdot>\\<^sub>v col U j\\<rangle> =\n  \\<langle>col U i|col U i\\<rangle> +\n  - \\<i> * \\<langle>col U j|col U i\\<rangle> +\n  \\<i> * \\<langle>col U i|col U j\\<rangle> +\n  \\<langle>col U j|col U j\\<rangle>\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow>\n    (\\<Sum>k<n. cnj (U $$ (k, i)) * U $$ (k, j)) = 0", "ultimately"], ["proof (chain)\npicking this:\n  \\<parallel>v2\\<parallel>\\<^sup>2 = 2\n  \\<parallel>col_fst (U * |v2\\<rangle>)\\<parallel>\\<^sup>2 =\n  \\<parallel>v2\\<parallel>\\<^sup>2\n  \\<langle>col U i +\n           \\<i> \\<cdot>\\<^sub>v\n           col U j|col U i + \\<i> \\<cdot>\\<^sub>v col U j\\<rangle> =\n  complex_of_real (\\<parallel>col_fst (U * |v2\\<rangle>)\\<parallel>\\<^sup>2)\n  \\<langle>col U i +\n           \\<i> \\<cdot>\\<^sub>v\n           col U j|col U i + \\<i> \\<cdot>\\<^sub>v col U j\\<rangle> =\n  \\<langle>col U i|col U i\\<rangle> +\n  - \\<i> * \\<langle>col U j|col U i\\<rangle> +\n  \\<i> * \\<langle>col U i|col U j\\<rangle> +\n  \\<langle>col U j|col U j\\<rangle>", "have \"\\<langle>col U j|col U i\\<rangle> - \\<langle>col U i|col U j\\<rangle> = 0\""], ["proof (prove)\nusing this:\n  \\<parallel>v2\\<parallel>\\<^sup>2 = 2\n  \\<parallel>col_fst (U * |v2\\<rangle>)\\<parallel>\\<^sup>2 =\n  \\<parallel>v2\\<parallel>\\<^sup>2\n  \\<langle>col U i +\n           \\<i> \\<cdot>\\<^sub>v\n           col U j|col U i + \\<i> \\<cdot>\\<^sub>v col U j\\<rangle> =\n  complex_of_real (\\<parallel>col_fst (U * |v2\\<rangle>)\\<parallel>\\<^sup>2)\n  \\<langle>col U i +\n           \\<i> \\<cdot>\\<^sub>v\n           col U j|col U i + \\<i> \\<cdot>\\<^sub>v col U j\\<rangle> =\n  \\<langle>col U i|col U i\\<rangle> +\n  - \\<i> * \\<langle>col U j|col U i\\<rangle> +\n  \\<i> * \\<langle>col U i|col U j\\<rangle> +\n  \\<langle>col U j|col U j\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>col U j|col U i\\<rangle> - \\<langle>col U i|col U j\\<rangle> =\n    0", "using c0 a0 f1 inner_prod_def lessThan_atLeast0"], ["proof (prove)\nusing this:\n  \\<parallel>v2\\<parallel>\\<^sup>2 = 2\n  \\<parallel>col_fst (U * |v2\\<rangle>)\\<parallel>\\<^sup>2 =\n  \\<parallel>v2\\<parallel>\\<^sup>2\n  \\<langle>col U i +\n           \\<i> \\<cdot>\\<^sub>v\n           col U j|col U i + \\<i> \\<cdot>\\<^sub>v col U j\\<rangle> =\n  complex_of_real (\\<parallel>col_fst (U * |v2\\<rangle>)\\<parallel>\\<^sup>2)\n  \\<langle>col U i +\n           \\<i> \\<cdot>\\<^sub>v\n           col U j|col U i + \\<i> \\<cdot>\\<^sub>v col U j\\<rangle> =\n  \\<langle>col U i|col U i\\<rangle> +\n  - \\<i> * \\<langle>col U j|col U i\\<rangle> +\n  \\<i> * \\<langle>col U i|col U j\\<rangle> +\n  \\<langle>col U j|col U j\\<rangle>\n  U \\<in> carrier_mat n n\n  i < n \\<and> j < n\n  ?l1 < n \\<longrightarrow>\n  (\\<Sum>k<n. cnj (U $$ (k, ?l1)) * U $$ (k, ?l1)) = 1\n  \\<langle>?u|?v\\<rangle> \\<equiv>\n  \\<Sum>i = 0..<dim_vec ?v. cnj (?u $ i) * ?v $ i\n  {..<?n} = {0..<?n}\n\ngoal (1 subgoal):\n 1. \\<langle>col U j|col U i\\<rangle> - \\<langle>col U i|col U j\\<rangle> =\n    0", "by auto"], ["proof (state)\nthis:\n  \\<langle>col U j|col U i\\<rangle> - \\<langle>col U i|col U j\\<rangle> = 0\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow>\n    (\\<Sum>k<n. cnj (U $$ (k, i)) * U $$ (k, j)) = 0", "then"], ["proof (chain)\npicking this:\n  \\<langle>col U j|col U i\\<rangle> - \\<langle>col U i|col U j\\<rangle> = 0", "show \"(\\<Sum>k<n. cnj (U $$ (k, i)) * U $$ (k, j)) = 0\""], ["proof (prove)\nusing this:\n  \\<langle>col U j|col U i\\<rangle> - \\<langle>col U i|col U j\\<rangle> = 0\n\ngoal (1 subgoal):\n 1. (\\<Sum>k<n. cnj (U $$ (k, i)) * U $$ (k, j)) = 0", "using c0 a0 f2 lessThan_atLeast0 inner_prod_def"], ["proof (prove)\nusing this:\n  \\<langle>col U j|col U i\\<rangle> - \\<langle>col U i|col U j\\<rangle> = 0\n  U \\<in> carrier_mat n n\n  i < n \\<and> j < n\n  \\<langle>col U j|col U i\\<rangle> + \\<langle>col U i|col U j\\<rangle> = 0\n  {..<?n} = {0..<?n}\n  \\<langle>?u|?v\\<rangle> \\<equiv>\n  \\<Sum>i = 0..<dim_vec ?v. cnj (?u $ i) * ?v $ i\n\ngoal (1 subgoal):\n 1. (\\<Sum>k<n. cnj (U $$ (k, i)) * U $$ (k, j)) = 0", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k<n. cnj (U $$ (k, i)) * U $$ (k, j)) = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  i \\<noteq> j \\<longrightarrow>\n  (\\<Sum>k<n. cnj (U $$ (k, i)) * U $$ (k, j)) = 0\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (1\\<^sub>m (dim_col U));\n        j < dim_col (1\\<^sub>m (dim_col U))\\<rbrakk>\n       \\<Longrightarrow> (U\\<^sup>\\<dagger> * U) $$ (i, j) =\n                         1\\<^sub>m (dim_col U) $$ (i, j)", "ultimately"], ["proof (chain)\npicking this:\n  ?l1 < n \\<longrightarrow>\n  (\\<Sum>k<n. cnj (U $$ (k, ?l1)) * U $$ (k, ?l1)) = 1\n  i \\<noteq> j \\<longrightarrow>\n  (\\<Sum>k<n. cnj (U $$ (k, i)) * U $$ (k, j)) = 0", "show \"(U\\<^sup>\\<dagger> * U) $$ (i, j) = 1\\<^sub>m (dim_col U) $$ (i, j)\""], ["proof (prove)\nusing this:\n  ?l1 < n \\<longrightarrow>\n  (\\<Sum>k<n. cnj (U $$ (k, ?l1)) * U $$ (k, ?l1)) = 1\n  i \\<noteq> j \\<longrightarrow>\n  (\\<Sum>k<n. cnj (U $$ (k, i)) * U $$ (k, j)) = 0\n\ngoal (1 subgoal):\n 1. (U\\<^sup>\\<dagger> * U) $$ (i, j) = 1\\<^sub>m (dim_col U) $$ (i, j)", "using c0 assms(1) a0 one_mat_def dagger_def"], ["proof (prove)\nusing this:\n  ?l1 < n \\<longrightarrow>\n  (\\<Sum>k<n. cnj (U $$ (k, ?l1)) * U $$ (k, ?l1)) = 1\n  i \\<noteq> j \\<longrightarrow>\n  (\\<Sum>k<n. cnj (U $$ (k, i)) * U $$ (k, j)) = 0\n  U \\<in> carrier_mat n n\n  square_mat U\n  i < n \\<and> j < n\n  1\\<^sub>m ?n \\<equiv>\n  mat ?n ?n (\\<lambda>(i, j). if i = j then 1::?'a else (0::?'a))\n  ?M\\<^sup>\\<dagger> \\<equiv>\n  mat (dim_col ?M) (dim_row ?M) (\\<lambda>(i, j). cnj (?M $$ (j, i)))\n\ngoal (1 subgoal):\n 1. (U\\<^sup>\\<dagger> * U) $$ (i, j) = 1\\<^sub>m (dim_col U) $$ (i, j)", "by auto"], ["proof (state)\nthis:\n  (U\\<^sup>\\<dagger> * U) $$ (i, j) = 1\\<^sub>m (dim_col U) $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  U\\<^sup>\\<dagger> * U = 1\\<^sub>m (dim_col U)\n\ngoal (1 subgoal):\n 1. unitary U", "then"], ["proof (chain)\npicking this:\n  U\\<^sup>\\<dagger> * U = 1\\<^sub>m (dim_col U)", "have \"(U\\<^sup>\\<dagger>) * U = 1\\<^sub>m n\""], ["proof (prove)\nusing this:\n  U\\<^sup>\\<dagger> * U = 1\\<^sub>m (dim_col U)\n\ngoal (1 subgoal):\n 1. U\\<^sup>\\<dagger> * U = 1\\<^sub>m n", "using c0"], ["proof (prove)\nusing this:\n  U\\<^sup>\\<dagger> * U = 1\\<^sub>m (dim_col U)\n  U \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. U\\<^sup>\\<dagger> * U = 1\\<^sub>m n", "by simp"], ["proof (state)\nthis:\n  U\\<^sup>\\<dagger> * U = 1\\<^sub>m n\n\ngoal (1 subgoal):\n 1. unitary U", "then"], ["proof (chain)\npicking this:\n  U\\<^sup>\\<dagger> * U = 1\\<^sub>m n", "have \"inverts_mat (U\\<^sup>\\<dagger>) U\""], ["proof (prove)\nusing this:\n  U\\<^sup>\\<dagger> * U = 1\\<^sub>m n\n\ngoal (1 subgoal):\n 1. inverts_mat U\\<^sup>\\<dagger> U", "using c1 inverts_mat_def"], ["proof (prove)\nusing this:\n  U\\<^sup>\\<dagger> * U = 1\\<^sub>m n\n  U\\<^sup>\\<dagger> \\<in> carrier_mat n n\n  inverts_mat ?A ?B \\<equiv> ?A * ?B = 1\\<^sub>m (dim_row ?A)\n\ngoal (1 subgoal):\n 1. inverts_mat U\\<^sup>\\<dagger> U", "by auto"], ["proof (state)\nthis:\n  inverts_mat U\\<^sup>\\<dagger> U\n\ngoal (1 subgoal):\n 1. unitary U", "then"], ["proof (chain)\npicking this:\n  inverts_mat U\\<^sup>\\<dagger> U", "have \"inverts_mat U (U\\<^sup>\\<dagger>)\""], ["proof (prove)\nusing this:\n  inverts_mat U\\<^sup>\\<dagger> U\n\ngoal (1 subgoal):\n 1. inverts_mat U U\\<^sup>\\<dagger>", "using c0 c1 inverts_mat_sym"], ["proof (prove)\nusing this:\n  inverts_mat U\\<^sup>\\<dagger> U\n  U \\<in> carrier_mat n n\n  U\\<^sup>\\<dagger> \\<in> carrier_mat n n\n  \\<lbrakk>inverts_mat ?A ?B; dim_row ?B = dim_col ?A;\n   square_mat ?B\\<rbrakk>\n  \\<Longrightarrow> inverts_mat ?B ?A\n\ngoal (1 subgoal):\n 1. inverts_mat U U\\<^sup>\\<dagger>", "by simp"], ["proof (state)\nthis:\n  inverts_mat U U\\<^sup>\\<dagger>\n\ngoal (1 subgoal):\n 1. unitary U", "then"], ["proof (chain)\npicking this:\n  inverts_mat U U\\<^sup>\\<dagger>", "have \"U * (U\\<^sup>\\<dagger>) = 1\\<^sub>m (dim_row U)\""], ["proof (prove)\nusing this:\n  inverts_mat U U\\<^sup>\\<dagger>\n\ngoal (1 subgoal):\n 1. U * U\\<^sup>\\<dagger> = 1\\<^sub>m (dim_row U)", "using c0 inverts_mat_def"], ["proof (prove)\nusing this:\n  inverts_mat U U\\<^sup>\\<dagger>\n  U \\<in> carrier_mat n n\n  inverts_mat ?A ?B \\<equiv> ?A * ?B = 1\\<^sub>m (dim_row ?A)\n\ngoal (1 subgoal):\n 1. U * U\\<^sup>\\<dagger> = 1\\<^sub>m (dim_row U)", "by auto"], ["proof (state)\nthis:\n  U * U\\<^sup>\\<dagger> = 1\\<^sub>m (dim_row U)\n\ngoal (1 subgoal):\n 1. unitary U", "then"], ["proof (chain)\npicking this:\n  U * U\\<^sup>\\<dagger> = 1\\<^sub>m (dim_row U)", "show ?thesis"], ["proof (prove)\nusing this:\n  U * U\\<^sup>\\<dagger> = 1\\<^sub>m (dim_row U)\n\ngoal (1 subgoal):\n 1. unitary U", "using f0 unitary_def"], ["proof (prove)\nusing this:\n  U * U\\<^sup>\\<dagger> = 1\\<^sub>m (dim_row U)\n  U\\<^sup>\\<dagger> * U = 1\\<^sub>m (dim_col U)\n  unitary ?M \\<equiv>\n  ?M\\<^sup>\\<dagger> * ?M = 1\\<^sub>m (dim_col ?M) \\<and>\n  ?M * ?M\\<^sup>\\<dagger> = 1\\<^sub>m (dim_row ?M)\n\ngoal (1 subgoal):\n 1. unitary U", "by simp"], ["proof (state)\nthis:\n  unitary U\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inner_prod_with_unitary_mat [simp]:\n  assumes \"unitary U\" and \"dim_vec u = dim_col U\" and \"dim_vec v = dim_col U\"\n  shows \"\\<langle>U * |u\\<rangle>|U * |v\\<rangle>\\<rangle> = \\<langle>u|v\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>col_fst (U * |u\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n    \\<langle>u|v\\<rangle>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<langle>col_fst (U * |u\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n    \\<langle>u|v\\<rangle>", "have f1:\"\\<langle>U * |u\\<rangle>|U * |v\\<rangle>\\<rangle> = (\\<langle>|u\\<rangle>| * (U\\<^sup>\\<dagger>) * U * |v\\<rangle>) $$ (0,0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>col_fst (U * |u\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n    (\\<langle>|u\\<rangle>| * U\\<^sup>\\<dagger> * U * |v\\<rangle>) $$ (0, 0)", "using assms(2-3) bra_mat_on_vec mult_ket_vec_is_ket_vec_of_mult"], ["proof (prove)\nusing this:\n  dim_vec u = dim_col U\n  dim_vec v = dim_col U\n  dim_col ?A = dim_vec ?v \\<Longrightarrow>\n  \\<langle>?A * |?v\\<rangle>| = \\<langle>|?v\\<rangle>| * ?A\\<^sup>\\<dagger>\n  dim_col ?A = dim_vec ?v \\<Longrightarrow>\n  |col_fst (?A * |?v\\<rangle>)\\<rangle> = ?A * |?v\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>col_fst (U * |u\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n    (\\<langle>|u\\<rangle>| * U\\<^sup>\\<dagger> * U * |v\\<rangle>) $$ (0, 0)", "by (smt assoc_mult_mat carrier_mat_triv col_fst_def dim_vec dim_col_of_dagger index_mult_mat(2) \n        index_mult_mat(3) inner_prod_with_times_mat ket_vec_def mat_carrier)"], ["proof (state)\nthis:\n  \\<langle>col_fst (U * |u\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n  (\\<langle>|u\\<rangle>| * U\\<^sup>\\<dagger> * U * |v\\<rangle>) $$ (0, 0)\n\ngoal (1 subgoal):\n 1. \\<langle>col_fst (U * |u\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n    \\<langle>u|v\\<rangle>", "moreover"], ["proof (state)\nthis:\n  \\<langle>col_fst (U * |u\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n  (\\<langle>|u\\<rangle>| * U\\<^sup>\\<dagger> * U * |v\\<rangle>) $$ (0, 0)\n\ngoal (1 subgoal):\n 1. \\<langle>col_fst (U * |u\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n    \\<langle>u|v\\<rangle>", "have f2:\"\\<langle>|u\\<rangle>| \\<in> carrier_mat 1 (dim_vec v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>|u\\<rangle>| \\<in> carrier_mat 1 (dim_vec v)", "using bra_def ket_vec_def assms(2-3)"], ["proof (prove)\nusing this:\n  \\<langle>?v| \\<equiv>\n  mat 1 (dim_row ?v) (\\<lambda>(i, j). cnj (?v $$ (j, i)))\n  |?v\\<rangle> \\<equiv> mat (dim_vec ?v) 1 (\\<lambda>(i, j). ?v $ i)\n  dim_vec u = dim_col U\n  dim_vec v = dim_col U\n\ngoal (1 subgoal):\n 1. \\<langle>|u\\<rangle>| \\<in> carrier_mat 1 (dim_vec v)", "by simp"], ["proof (state)\nthis:\n  \\<langle>|u\\<rangle>| \\<in> carrier_mat 1 (dim_vec v)\n\ngoal (1 subgoal):\n 1. \\<langle>col_fst (U * |u\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n    \\<langle>u|v\\<rangle>", "moreover"], ["proof (state)\nthis:\n  \\<langle>|u\\<rangle>| \\<in> carrier_mat 1 (dim_vec v)\n\ngoal (1 subgoal):\n 1. \\<langle>col_fst (U * |u\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n    \\<langle>u|v\\<rangle>", "have f3:\"U\\<^sup>\\<dagger> \\<in> carrier_mat (dim_col U) (dim_row U)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U\\<^sup>\\<dagger> \\<in> carrier_mat (dim_col U) (dim_row U)", "using dagger_def"], ["proof (prove)\nusing this:\n  ?M\\<^sup>\\<dagger> \\<equiv>\n  mat (dim_col ?M) (dim_row ?M) (\\<lambda>(i, j). cnj (?M $$ (j, i)))\n\ngoal (1 subgoal):\n 1. U\\<^sup>\\<dagger> \\<in> carrier_mat (dim_col U) (dim_row U)", "by simp"], ["proof (state)\nthis:\n  U\\<^sup>\\<dagger> \\<in> carrier_mat (dim_col U) (dim_row U)\n\ngoal (1 subgoal):\n 1. \\<langle>col_fst (U * |u\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n    \\<langle>u|v\\<rangle>", "ultimately"], ["proof (chain)\npicking this:\n  \\<langle>col_fst (U * |u\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n  (\\<langle>|u\\<rangle>| * U\\<^sup>\\<dagger> * U * |v\\<rangle>) $$ (0, 0)\n  \\<langle>|u\\<rangle>| \\<in> carrier_mat 1 (dim_vec v)\n  U\\<^sup>\\<dagger> \\<in> carrier_mat (dim_col U) (dim_row U)", "have \"\\<langle>U * |u\\<rangle>|U * |v\\<rangle>\\<rangle> = (\\<langle>|u\\<rangle>| * (U\\<^sup>\\<dagger> * U) * |v\\<rangle>) $$ (0,0)\""], ["proof (prove)\nusing this:\n  \\<langle>col_fst (U * |u\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n  (\\<langle>|u\\<rangle>| * U\\<^sup>\\<dagger> * U * |v\\<rangle>) $$ (0, 0)\n  \\<langle>|u\\<rangle>| \\<in> carrier_mat 1 (dim_vec v)\n  U\\<^sup>\\<dagger> \\<in> carrier_mat (dim_col U) (dim_row U)\n\ngoal (1 subgoal):\n 1. \\<langle>col_fst (U * |u\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n    (\\<langle>|u\\<rangle>| * (U\\<^sup>\\<dagger> * U) * |v\\<rangle>) $$\n    (0, 0)", "using assms(3) assoc_mult_mat"], ["proof (prove)\nusing this:\n  \\<langle>col_fst (U * |u\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n  (\\<langle>|u\\<rangle>| * U\\<^sup>\\<dagger> * U * |v\\<rangle>) $$ (0, 0)\n  \\<langle>|u\\<rangle>| \\<in> carrier_mat 1 (dim_vec v)\n  U\\<^sup>\\<dagger> \\<in> carrier_mat (dim_col U) (dim_row U)\n  dim_vec v = dim_col U\n  \\<lbrakk>?A \\<in> carrier_mat ?n\\<^sub>1 ?n\\<^sub>2;\n   ?B \\<in> carrier_mat ?n\\<^sub>2 ?n\\<^sub>3;\n   ?C \\<in> carrier_mat ?n\\<^sub>3 ?n\\<^sub>4\\<rbrakk>\n  \\<Longrightarrow> ?A * ?B * ?C = ?A * (?B * ?C)\n\ngoal (1 subgoal):\n 1. \\<langle>col_fst (U * |u\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n    (\\<langle>|u\\<rangle>| * (U\\<^sup>\\<dagger> * U) * |v\\<rangle>) $$\n    (0, 0)", "by (metis carrier_mat_triv)"], ["proof (state)\nthis:\n  \\<langle>col_fst (U * |u\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n  (\\<langle>|u\\<rangle>| * (U\\<^sup>\\<dagger> * U) * |v\\<rangle>) $$ (0, 0)\n\ngoal (1 subgoal):\n 1. \\<langle>col_fst (U * |u\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n    \\<langle>u|v\\<rangle>", "also"], ["proof (state)\nthis:\n  \\<langle>col_fst (U * |u\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n  (\\<langle>|u\\<rangle>| * (U\\<^sup>\\<dagger> * U) * |v\\<rangle>) $$ (0, 0)\n\ngoal (1 subgoal):\n 1. \\<langle>col_fst (U * |u\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n    \\<langle>u|v\\<rangle>", "have \"\\<dots> = (\\<langle>|u\\<rangle>| * |v\\<rangle>) $$ (0,0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<langle>|u\\<rangle>| * (U\\<^sup>\\<dagger> * U) * |v\\<rangle>) $$\n    (0, 0) =\n    (\\<langle>|u\\<rangle>| * |v\\<rangle>) $$ (0, 0)", "using assms(1) unitary_def"], ["proof (prove)\nusing this:\n  unitary U\n  unitary ?M \\<equiv>\n  ?M\\<^sup>\\<dagger> * ?M = 1\\<^sub>m (dim_col ?M) \\<and>\n  ?M * ?M\\<^sup>\\<dagger> = 1\\<^sub>m (dim_row ?M)\n\ngoal (1 subgoal):\n 1. (\\<langle>|u\\<rangle>| * (U\\<^sup>\\<dagger> * U) * |v\\<rangle>) $$\n    (0, 0) =\n    (\\<langle>|u\\<rangle>| * |v\\<rangle>) $$ (0, 0)", "by (simp add: assms(2) bra_def ket_vec_def)"], ["proof (state)\nthis:\n  (\\<langle>|u\\<rangle>| * (U\\<^sup>\\<dagger> * U) * |v\\<rangle>) $$\n  (0, 0) =\n  (\\<langle>|u\\<rangle>| * |v\\<rangle>) $$ (0, 0)\n\ngoal (1 subgoal):\n 1. \\<langle>col_fst (U * |u\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n    \\<langle>u|v\\<rangle>", "finally"], ["proof (chain)\npicking this:\n  \\<langle>col_fst (U * |u\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n  (\\<langle>|u\\<rangle>| * |v\\<rangle>) $$ (0, 0)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>col_fst (U * |u\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n  (\\<langle>|u\\<rangle>| * |v\\<rangle>) $$ (0, 0)\n\ngoal (1 subgoal):\n 1. \\<langle>col_fst (U * |u\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n    \\<langle>u|v\\<rangle>", "using assms(2-3) inner_prod_with_times_mat"], ["proof (prove)\nusing this:\n  \\<langle>col_fst (U * |u\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n  (\\<langle>|u\\<rangle>| * |v\\<rangle>) $$ (0, 0)\n  dim_vec u = dim_col U\n  dim_vec v = dim_col U\n  dim_vec ?u = dim_vec ?v \\<Longrightarrow>\n  \\<langle>?u|?v\\<rangle> =\n  (\\<langle>|?u\\<rangle>| * |?v\\<rangle>) $$ (0, 0)\n\ngoal (1 subgoal):\n 1. \\<langle>col_fst (U * |u\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n    \\<langle>u|v\\<rangle>", "by presburger"], ["proof (state)\nthis:\n  \\<langle>col_fst (U * |u\\<rangle>)|col_fst (U * |v\\<rangle>)\\<rangle> =\n  \\<langle>u|v\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>As a consequence we prove that columns and rows of a unitary matrix are orthonormal vectors.\\<close>"], ["", "lemma unitary_unit_col [simp]:\n  assumes \"unitary U\" and \"dim_col U = n\" and \"i < n\"\n  shows \"\\<parallel>col U i\\<parallel> = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>col U i\\<parallel> = 1", "using assms unit_vec_to_col unitary_is_length_preserving"], ["proof (prove)\nusing this:\n  unitary U\n  dim_col U = n\n  i < n\n  \\<lbrakk>dim_col ?A = ?n; ?i < ?n\\<rbrakk>\n  \\<Longrightarrow> col ?A ?i = col_fst (?A * |unit_vec ?n ?i\\<rangle>)\n  \\<lbrakk>unitary ?U; dim_vec ?v = dim_col ?U\\<rbrakk>\n  \\<Longrightarrow> \\<parallel>col_fst (?U * |?v\\<rangle>)\\<parallel> =\n                    \\<parallel>?v\\<parallel>\n\ngoal (1 subgoal):\n 1. \\<parallel>col U i\\<parallel> = 1", "by simp"], ["", "lemma unitary_unit_row [simp]:\n  assumes \"unitary U\" and \"dim_row U = n\" and \"i < n\"\n  shows \"\\<parallel>row U i\\<parallel> = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>row U i\\<parallel> = 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<parallel>row U i\\<parallel> = 1", "have \"row U i = col (U\\<^sup>t) i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. row U i = col U\\<^sup>t i", "using  assms(2-3)"], ["proof (prove)\nusing this:\n  dim_row U = n\n  i < n\n\ngoal (1 subgoal):\n 1. row U i = col U\\<^sup>t i", "by simp"], ["proof (state)\nthis:\n  row U i = col U\\<^sup>t i\n\ngoal (1 subgoal):\n 1. \\<parallel>row U i\\<parallel> = 1", "thus ?thesis"], ["proof (prove)\nusing this:\n  row U i = col U\\<^sup>t i\n\ngoal (1 subgoal):\n 1. \\<parallel>row U i\\<parallel> = 1", "using assms transpose_of_unitary_is_unitary unitary_unit_col"], ["proof (prove)\nusing this:\n  row U i = col U\\<^sup>t i\n  unitary U\n  dim_row U = n\n  i < n\n  unitary ?U \\<Longrightarrow> unitary ?U\\<^sup>t\n  \\<lbrakk>unitary ?U; dim_col ?U = ?n; ?i < ?n\\<rbrakk>\n  \\<Longrightarrow> \\<parallel>col ?U ?i\\<parallel> = 1\n\ngoal (1 subgoal):\n 1. \\<parallel>row U i\\<parallel> = 1", "by (metis index_transpose_mat(3))"], ["proof (state)\nthis:\n  \\<parallel>row U i\\<parallel> = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma orthogonal_col_of_unitary [simp]:\n  assumes \"unitary U\" and \"dim_col U = n\" and \"i < n\" and \"j < n\" and \"i \\<noteq> j\"\n  shows \"\\<langle>col U i|col U j\\<rangle> = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>col U i|col U j\\<rangle> = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<langle>col U i|col U j\\<rangle> = 0", "have \"\\<langle>col U i|col U j\\<rangle> = \\<langle>U * |unit_vec n i\\<rangle>| U * |unit_vec n j\\<rangle>\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>col U i|col U j\\<rangle> =\n    \\<langle>col_fst\n              (U *\n               |unit_vec n\n                 i\\<rangle>)|col_fst (U * |unit_vec n j\\<rangle>)\\<rangle>", "using assms(2-4) unit_vec_to_col"], ["proof (prove)\nusing this:\n  dim_col U = n\n  i < n\n  j < n\n  \\<lbrakk>dim_col ?A = ?n; ?i < ?n\\<rbrakk>\n  \\<Longrightarrow> col ?A ?i = col_fst (?A * |unit_vec ?n ?i\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<langle>col U i|col U j\\<rangle> =\n    \\<langle>col_fst\n              (U *\n               |unit_vec n\n                 i\\<rangle>)|col_fst (U * |unit_vec n j\\<rangle>)\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>col U i|col U j\\<rangle> =\n  \\<langle>col_fst\n            (U *\n             |unit_vec n\n               i\\<rangle>)|col_fst (U * |unit_vec n j\\<rangle>)\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>col U i|col U j\\<rangle> = 0", "also"], ["proof (state)\nthis:\n  \\<langle>col U i|col U j\\<rangle> =\n  \\<langle>col_fst\n            (U *\n             |unit_vec n\n               i\\<rangle>)|col_fst (U * |unit_vec n j\\<rangle>)\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>col U i|col U j\\<rangle> = 0", "have \"\\<dots> = \\<langle>unit_vec n i |unit_vec n j\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>col_fst\n              (U *\n               |unit_vec n\n                 i\\<rangle>)|col_fst (U * |unit_vec n j\\<rangle>)\\<rangle> =\n    \\<langle>unit_vec n i|unit_vec n j\\<rangle>", "using assms(1-2) inner_prod_with_unitary_mat index_unit_vec(3)"], ["proof (prove)\nusing this:\n  unitary U\n  dim_col U = n\n  \\<lbrakk>unitary ?U; dim_vec ?u = dim_col ?U;\n   dim_vec ?v = dim_col ?U\\<rbrakk>\n  \\<Longrightarrow> \\<langle>col_fst\n                              (?U *\n                               |?u\\<rangle>)|col_fst\n        (?U * |?v\\<rangle>)\\<rangle> =\n                    \\<langle>?u|?v\\<rangle>\n  dim_vec (unit_vec ?n ?i) = ?n\n\ngoal (1 subgoal):\n 1. \\<langle>col_fst\n              (U *\n               |unit_vec n\n                 i\\<rangle>)|col_fst (U * |unit_vec n j\\<rangle>)\\<rangle> =\n    \\<langle>unit_vec n i|unit_vec n j\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>col_fst\n            (U *\n             |unit_vec n\n               i\\<rangle>)|col_fst (U * |unit_vec n j\\<rangle>)\\<rangle> =\n  \\<langle>unit_vec n i|unit_vec n j\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>col U i|col U j\\<rangle> = 0", "finally"], ["proof (chain)\npicking this:\n  \\<langle>col U i|col U j\\<rangle> =\n  \\<langle>unit_vec n i|unit_vec n j\\<rangle>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>col U i|col U j\\<rangle> =\n  \\<langle>unit_vec n i|unit_vec n j\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>col U i|col U j\\<rangle> = 0", "using assms(3-5)"], ["proof (prove)\nusing this:\n  \\<langle>col U i|col U j\\<rangle> =\n  \\<langle>unit_vec n i|unit_vec n j\\<rangle>\n  i < n\n  j < n\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. \\<langle>col U i|col U j\\<rangle> = 0", "by simp"], ["proof (state)\nthis:\n  \\<langle>col U i|col U j\\<rangle> = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma orthogonal_row_of_unitary [simp]:\n  fixes U::\"complex mat\"\n  assumes \"unitary U\" and \"dim_row U = n\" and \"i < n\" and \"j < n\" and \"i \\<noteq> j\"\n  shows \"\\<langle>row U i|row U j\\<rangle> = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>row U i|row U j\\<rangle> = 0", "using assms orthogonal_col_of_unitary transpose_of_unitary_is_unitary col_transpose"], ["proof (prove)\nusing this:\n  unitary U\n  dim_row U = n\n  i < n\n  j < n\n  i \\<noteq> j\n  \\<lbrakk>unitary ?U; dim_col ?U = ?n; ?i < ?n; ?j < ?n;\n   ?i \\<noteq> ?j\\<rbrakk>\n  \\<Longrightarrow> \\<langle>col ?U ?i|col ?U ?j\\<rangle> = 0\n  unitary ?U \\<Longrightarrow> unitary ?U\\<^sup>t\n  ?i < dim_row ?A \\<Longrightarrow> col ?A\\<^sup>t ?i = row ?A ?i\n\ngoal (1 subgoal):\n 1. \\<langle>row U i|row U j\\<rangle> = 0", "by (metis index_transpose_mat(3))"], ["", "text\\<open>\nAs a consequence, we prove that a quantum gate acting on a state of a system of n qubits give \nanother state of that same system.\n\\<close>"], ["", "lemma gate_on_state_is_state [intro, simp]:\n  assumes a1:\"gate n A\" and a2:\"state n v\"\n  shows \"state n (A * v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. state n (A * v)", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. dim_col (A * v) = 1\n 2. dim_row (A * v) = 2 ^ n\n 3. \\<parallel>col (A * v) 0\\<parallel> = 1", "show \"dim_row (A * v) = 2^n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row (A * v) = 2 ^ n", "using gate_def state_def a1"], ["proof (prove)\nusing this:\n  gate ?n ?A \\<equiv>\n  dim_row ?A = 2 ^ ?n \\<and> square_mat ?A \\<and> unitary ?A\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>col ?v 0\\<parallel> = 1\n  gate n A\n\ngoal (1 subgoal):\n 1. dim_row (A * v) = 2 ^ n", "by simp"], ["proof (state)\nthis:\n  dim_row (A * v) = 2 ^ n\n\ngoal (2 subgoals):\n 1. dim_col (A * v) = 1\n 2. \\<parallel>col (A * v) 0\\<parallel> = 1", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. dim_col (A * v) = 1\n 2. \\<parallel>col (A * v) 0\\<parallel> = 1", "show \"dim_col (A * v) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col (A * v) = 1", "using state_def a2"], ["proof (prove)\nusing this:\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>col ?v 0\\<parallel> = 1\n  state n v\n\ngoal (1 subgoal):\n 1. dim_col (A * v) = 1", "by simp"], ["proof (state)\nthis:\n  dim_col (A * v) = 1\n\ngoal (1 subgoal):\n 1. \\<parallel>col (A * v) 0\\<parallel> = 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<parallel>col (A * v) 0\\<parallel> = 1", "have \"square_mat A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. square_mat A", "using a1 gate_def"], ["proof (prove)\nusing this:\n  gate n A\n  gate ?n ?A \\<equiv>\n  dim_row ?A = 2 ^ ?n \\<and> square_mat ?A \\<and> unitary ?A\n\ngoal (1 subgoal):\n 1. square_mat A", "by simp"], ["proof (state)\nthis:\n  square_mat A\n\ngoal (1 subgoal):\n 1. \\<parallel>col (A * v) 0\\<parallel> = 1", "then"], ["proof (chain)\npicking this:\n  square_mat A", "have \"dim_col A = 2^n\""], ["proof (prove)\nusing this:\n  square_mat A\n\ngoal (1 subgoal):\n 1. dim_col A = 2 ^ n", "using a1 gate.dim_row"], ["proof (prove)\nusing this:\n  square_mat A\n  gate n A\n  gate ?n ?A \\<Longrightarrow> dim_row ?A = 2 ^ ?n\n\ngoal (1 subgoal):\n 1. dim_col A = 2 ^ n", "by simp"], ["proof (state)\nthis:\n  dim_col A = 2 ^ n\n\ngoal (1 subgoal):\n 1. \\<parallel>col (A * v) 0\\<parallel> = 1", "then"], ["proof (chain)\npicking this:\n  dim_col A = 2 ^ n", "have \"dim_col A = dim_row v\""], ["proof (prove)\nusing this:\n  dim_col A = 2 ^ n\n\ngoal (1 subgoal):\n 1. dim_col A = dim_row v", "using a2 state.dim_row"], ["proof (prove)\nusing this:\n  dim_col A = 2 ^ n\n  state n v\n  state ?n ?v \\<Longrightarrow> dim_row ?v = 2 ^ ?n\n\ngoal (1 subgoal):\n 1. dim_col A = dim_row v", "by simp"], ["proof (state)\nthis:\n  dim_col A = dim_row v\n\ngoal (1 subgoal):\n 1. \\<parallel>col (A * v) 0\\<parallel> = 1", "then"], ["proof (chain)\npicking this:\n  dim_col A = dim_row v", "have \"\\<parallel>col (A * v) 0\\<parallel> = \\<parallel>col v 0\\<parallel>\""], ["proof (prove)\nusing this:\n  dim_col A = dim_row v\n\ngoal (1 subgoal):\n 1. \\<parallel>col (A * v) 0\\<parallel> = \\<parallel>col v 0\\<parallel>", "using unitary_is_length_preserving_bis assms gate_def state_def"], ["proof (prove)\nusing this:\n  dim_col A = dim_row v\n  \\<lbrakk>unitary ?U; dim_row ?v = dim_col ?U; dim_col ?v = 1\\<rbrakk>\n  \\<Longrightarrow> \\<parallel>col (?U * ?v) 0\\<parallel> =\n                    \\<parallel>col ?v 0\\<parallel>\n  gate n A\n  state n v\n  gate ?n ?A \\<equiv>\n  dim_row ?A = 2 ^ ?n \\<and> square_mat ?A \\<and> unitary ?A\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>col ?v 0\\<parallel> = 1\n\ngoal (1 subgoal):\n 1. \\<parallel>col (A * v) 0\\<parallel> = \\<parallel>col v 0\\<parallel>", "by simp"], ["proof (state)\nthis:\n  \\<parallel>col (A * v) 0\\<parallel> = \\<parallel>col v 0\\<parallel>\n\ngoal (1 subgoal):\n 1. \\<parallel>col (A * v) 0\\<parallel> = 1", "thus\"\\<parallel>col (A * v) 0\\<parallel> = 1\""], ["proof (prove)\nusing this:\n  \\<parallel>col (A * v) 0\\<parallel> = \\<parallel>col v 0\\<parallel>\n\ngoal (1 subgoal):\n 1. \\<parallel>col (A * v) 0\\<parallel> = 1", "using a2 state.is_normal"], ["proof (prove)\nusing this:\n  \\<parallel>col (A * v) 0\\<parallel> = \\<parallel>col v 0\\<parallel>\n  state n v\n  state ?n ?v \\<Longrightarrow> \\<parallel>col ?v 0\\<parallel> = 1\n\ngoal (1 subgoal):\n 1. \\<parallel>col (A * v) 0\\<parallel> = 1", "by simp"], ["proof (state)\nthis:\n  \\<parallel>col (A * v) 0\\<parallel> = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>A Few Well-known Quantum Gates\\<close>"], ["", "text \\<open>\nAny unitary operation on n qubits can be implemented exactly by composing single qubits and\nCNOT-gates (controlled-NOT gates). However, no straightforward method is known to implement these \ngates in a fashion which is resistant to errors. But, the Hadamard gate, the phase gate, the \nCNOT-gate and the @{text \"\\<pi>/8\"} gate are also universal for quantum computations, i.e. any quantum circuit on \nn qubits can be approximated to an arbitrary accuracy by using only these gates, and these gates can \nbe implemented in a fault-tolerant way. \n\\<close>"], ["", "text \\<open>We introduce a coercion from real matrices to complex matrices.\\<close>"], ["", "definition real_to_cpx_mat:: \"real mat \\<Rightarrow> complex mat\" where\n\"real_to_cpx_mat A \\<equiv> mat (dim_row A) (dim_col A) (\\<lambda>(i,j). A $$ (i,j))\""], ["", "text \\<open>Our first quantum gate: the identity matrix! Arguably, not a very interesting one though!\\<close>"], ["", "definition Id :: \"nat \\<Rightarrow> complex mat\" where\n\"Id n \\<equiv> 1\\<^sub>m (2^n)\""], ["", "lemma id_is_gate [simp]:\n  \"gate n (Id n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gate n (Quantum.Id n)", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. dim_row (Quantum.Id n) = 2 ^ n\n 2. square_mat (Quantum.Id n)\n 3. unitary (Quantum.Id n)", "show \"dim_row (Id n) = 2^n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row (Quantum.Id n) = 2 ^ n", "using Id_def"], ["proof (prove)\nusing this:\n  Quantum.Id ?n \\<equiv> 1\\<^sub>m (2 ^ ?n)\n\ngoal (1 subgoal):\n 1. dim_row (Quantum.Id n) = 2 ^ n", "by simp"], ["proof (state)\nthis:\n  dim_row (Quantum.Id n) = 2 ^ n\n\ngoal (2 subgoals):\n 1. square_mat (Quantum.Id n)\n 2. unitary (Quantum.Id n)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. square_mat (Quantum.Id n)\n 2. unitary (Quantum.Id n)", "show \"square_mat (Id n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. square_mat (Quantum.Id n)", "using Id_def"], ["proof (prove)\nusing this:\n  Quantum.Id ?n \\<equiv> 1\\<^sub>m (2 ^ ?n)\n\ngoal (1 subgoal):\n 1. square_mat (Quantum.Id n)", "by simp"], ["proof (state)\nthis:\n  square_mat (Quantum.Id n)\n\ngoal (1 subgoal):\n 1. unitary (Quantum.Id n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. unitary (Quantum.Id n)", "show \"unitary (Id n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unitary (Quantum.Id n)", "by (simp add: Id_def)"], ["proof (state)\nthis:\n  unitary (Quantum.Id n)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>More interesting: the Pauli matrices.\\<close>"], ["", "definition X ::\"complex mat\" where\n\"X \\<equiv> mat 2 2 (\\<lambda>(i,j). if i=j then 0 else 1)\""], ["", "text\\<open> \nBe aware that @{text \"gate n A\"} means that the matrix A has dimension @{text \"2^n * 2^n\"}. \nFor instance, with this convention a 2 X 2 matrix A which is unitary satisfies @{text \"gate 1 A\"}\n but not @{text \"gate 2 A\"} as one might have been expected.\n\\<close>"], ["", "lemma dagger_of_X [simp]:\n  \"X\\<^sup>\\<dagger> = X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X\\<^sup>\\<dagger> = X", "using dagger_def"], ["proof (prove)\nusing this:\n  ?M\\<^sup>\\<dagger> \\<equiv>\n  mat (dim_col ?M) (dim_row ?M) (\\<lambda>(i, j). cnj (?M $$ (j, i)))\n\ngoal (1 subgoal):\n 1. X\\<^sup>\\<dagger> = X", "by (simp add: X_def cong_mat)"], ["", "lemma X_inv [simp]:\n  \"X * X = 1\\<^sub>m 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X * X = 1\\<^sub>m 2", "apply(simp add: X_def times_mat_def one_mat_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. mat 2 2\n     (\\<lambda>(i, j).\n         row (mat 2 2 (\\<lambda>(i, j). if i = j then 0 else 1)) i \\<bullet>\n         col (mat 2 2 (\\<lambda>(i, j). if i = j then 0 else 1)) j) =\n    mat 2 2 (\\<lambda>(i, j). if i = j then 1 else 0)", "apply(rule cong_mat)"], ["proof (prove)\ngoal (3 subgoals):\n 1. 2 = 2\n 2. 2 = 2\n 3. \\<And>i j.\n       \\<lbrakk>i < 2; j < 2\\<rbrakk>\n       \\<Longrightarrow> (case (i, j) of\n                          (i, j) \\<Rightarrow>\n                            row (mat 2 2\n                                  (\\<lambda>(i, j). if i = j then 0 else 1))\n                             i \\<bullet>\n                            col (mat 2 2\n                                  (\\<lambda>(i, j). if i = j then 0 else 1))\n                             j) =\n                         (case (i, j) of\n                          (i, j) \\<Rightarrow> if i = j then 1 else 0)", "by(auto simp: scalar_prod_def)"], ["", "lemma X_is_gate [simp]:\n  \"gate 1 X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gate 1 X", "by (simp add: gate_def unitary_def)\n    (simp add: X_def)"], ["", "definition Y ::\"complex mat\" where\n\"Y \\<equiv> mat 2 2 (\\<lambda>(i,j). if i=j then 0 else (if i=0 then -\\<i> else \\<i>))\""], ["", "lemma dagger_of_Y [simp]:\n  \"Y\\<^sup>\\<dagger> = Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Y\\<^sup>\\<dagger> = Y", "using dagger_def"], ["proof (prove)\nusing this:\n  ?M\\<^sup>\\<dagger> \\<equiv>\n  mat (dim_col ?M) (dim_row ?M) (\\<lambda>(i, j). cnj (?M $$ (j, i)))\n\ngoal (1 subgoal):\n 1. Y\\<^sup>\\<dagger> = Y", "by (simp add: Y_def cong_mat)"], ["", "lemma Y_inv [simp]:\n  \"Y * Y = 1\\<^sub>m 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Y * Y = 1\\<^sub>m 2", "apply(simp add: Y_def times_mat_def one_mat_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. mat 2 2\n     (\\<lambda>(i, j).\n         row (mat 2 2\n               (\\<lambda>(i, j).\n                   if i = j then 0 else if i = 0 then - \\<i> else \\<i>))\n          i \\<bullet>\n         col (mat 2 2\n               (\\<lambda>(i, j).\n                   if i = j then 0 else if i = 0 then - \\<i> else \\<i>))\n          j) =\n    mat 2 2 (\\<lambda>(i, j). if i = j then 1 else 0)", "apply(rule cong_mat)"], ["proof (prove)\ngoal (3 subgoals):\n 1. 2 = 2\n 2. 2 = 2\n 3. \\<And>i j.\n       \\<lbrakk>i < 2; j < 2\\<rbrakk>\n       \\<Longrightarrow> (case (i, j) of\n                          (i, j) \\<Rightarrow>\n                            row (mat 2 2\n                                  (\\<lambda>(i, j).\nif i = j then 0 else if i = 0 then - \\<i> else \\<i>))\n                             i \\<bullet>\n                            col (mat 2 2\n                                  (\\<lambda>(i, j).\nif i = j then 0 else if i = 0 then - \\<i> else \\<i>))\n                             j) =\n                         (case (i, j) of\n                          (i, j) \\<Rightarrow> if i = j then 1 else 0)", "by(auto simp: scalar_prod_def)"], ["", "lemma Y_is_gate [simp]:\n  \"gate 1 Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gate 1 Y", "by (simp add: gate_def unitary_def)\n    (simp add: Y_def)"], ["", "definition Z ::\"complex mat\" where\n\"Z \\<equiv> mat 2 2 (\\<lambda>(i,j). if i\\<noteq>j then 0 else (if i=0 then 1 else -1))\""], ["", "lemma dagger_of_Z [simp]:\n  \"Z\\<^sup>\\<dagger> = Z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Z\\<^sup>\\<dagger> = Z", "using dagger_def"], ["proof (prove)\nusing this:\n  ?M\\<^sup>\\<dagger> \\<equiv>\n  mat (dim_col ?M) (dim_row ?M) (\\<lambda>(i, j). cnj (?M $$ (j, i)))\n\ngoal (1 subgoal):\n 1. Z\\<^sup>\\<dagger> = Z", "by (simp add: Z_def cong_mat)"], ["", "lemma Z_inv [simp]:\n  \"Z * Z = 1\\<^sub>m 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Z * Z = 1\\<^sub>m 2", "apply(simp add: Z_def times_mat_def one_mat_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. mat 2 2\n     (\\<lambda>(i, j).\n         row (mat 2 2\n               (\\<lambda>(i, j).\n                   if i \\<noteq> j then 0 else if i = 0 then 1 else - 1))\n          i \\<bullet>\n         col (mat 2 2\n               (\\<lambda>(i, j).\n                   if i \\<noteq> j then 0 else if i = 0 then 1 else - 1))\n          j) =\n    mat 2 2 (\\<lambda>(i, j). if i = j then 1 else 0)", "apply(rule cong_mat)"], ["proof (prove)\ngoal (3 subgoals):\n 1. 2 = 2\n 2. 2 = 2\n 3. \\<And>i j.\n       \\<lbrakk>i < 2; j < 2\\<rbrakk>\n       \\<Longrightarrow> (case (i, j) of\n                          (i, j) \\<Rightarrow>\n                            row (mat 2 2\n                                  (\\<lambda>(i, j).\nif i \\<noteq> j then 0 else if i = 0 then 1 else - 1))\n                             i \\<bullet>\n                            col (mat 2 2\n                                  (\\<lambda>(i, j).\nif i \\<noteq> j then 0 else if i = 0 then 1 else - 1))\n                             j) =\n                         (case (i, j) of\n                          (i, j) \\<Rightarrow> if i = j then 1 else 0)", "by(auto simp: scalar_prod_def)"], ["", "lemma Z_is_gate [simp]:\n  \"gate 1 Z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gate 1 Z", "by (simp add: gate_def unitary_def)\n    (simp add: Z_def)"], ["", "text \\<open>The Hadamard gate\\<close>"], ["", "definition H ::\"complex mat\" where\n\"H \\<equiv> 1/sqrt(2) \\<cdot>\\<^sub>m (mat 2 2 (\\<lambda>(i,j). if i\\<noteq>j then 1 else (if i=0 then 1 else -1)))\""], ["", "lemma H_without_scalar_prod:\n  \"H = mat 2 2 (\\<lambda>(i,j). if i\\<noteq>j then 1/sqrt(2) else (if i=0 then 1/sqrt(2) else -(1/sqrt(2))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H =\n    mat 2 2\n     (\\<lambda>x.\n         complex_of_real\n          (case x of\n           (i, j) \\<Rightarrow>\n             if i \\<noteq> j then 1 / sqrt 2\n             else if i = 0 then 1 / sqrt 2 else - (1 / sqrt 2)))", "using cong_mat"], ["proof (prove)\nusing this:\n  \\<lbrakk>?nr = ?nr'; ?nc = ?nc';\n   \\<And>i j.\n      \\<lbrakk>i < ?nr; j < ?nc\\<rbrakk>\n      \\<Longrightarrow> ?f (i, j) = ?f' (i, j)\\<rbrakk>\n  \\<Longrightarrow> mat ?nr ?nc ?f = mat ?nr' ?nc' ?f'\n\ngoal (1 subgoal):\n 1. H =\n    mat 2 2\n     (\\<lambda>x.\n         complex_of_real\n          (case x of\n           (i, j) \\<Rightarrow>\n             if i \\<noteq> j then 1 / sqrt 2\n             else if i = 0 then 1 / sqrt 2 else - (1 / sqrt 2)))", "by (auto simp: H_def)"], ["", "lemma dagger_of_H [simp]:\n  \"H\\<^sup>\\<dagger> = H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H\\<^sup>\\<dagger> = H", "using dagger_def"], ["proof (prove)\nusing this:\n  ?M\\<^sup>\\<dagger> \\<equiv>\n  mat (dim_col ?M) (dim_row ?M) (\\<lambda>(i, j). cnj (?M $$ (j, i)))\n\ngoal (1 subgoal):\n 1. H\\<^sup>\\<dagger> = H", "by (auto simp: H_def cong_mat)"], ["", "lemma H_inv [simp]:\n  \"H * H = 1\\<^sub>m 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H * H = 1\\<^sub>m 2", "apply(simp add: H_def times_mat_def one_mat_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. mat 2 2\n     (\\<lambda>(i, j).\n         row (1 / complex_of_real (sqrt 2) \\<cdot>\\<^sub>m\n              mat 2 2\n               (\\<lambda>(i, j).\n                   if i \\<noteq> j then 1 else if i = 0 then 1 else - 1))\n          i \\<bullet>\n         col (1 / complex_of_real (sqrt 2) \\<cdot>\\<^sub>m\n              mat 2 2\n               (\\<lambda>(i, j).\n                   if i \\<noteq> j then 1 else if i = 0 then 1 else - 1))\n          j) =\n    mat 2 2 (\\<lambda>(i, j). if i = j then 1 else 0)", "apply(rule cong_mat)"], ["proof (prove)\ngoal (3 subgoals):\n 1. 2 = 2\n 2. 2 = 2\n 3. \\<And>i j.\n       \\<lbrakk>i < 2; j < 2\\<rbrakk>\n       \\<Longrightarrow> (case (i, j) of\n                          (i, j) \\<Rightarrow>\n                            row (1 /\n                                 complex_of_real (sqrt 2) \\<cdot>\\<^sub>m\n                                 mat 2 2\n                                  (\\<lambda>(i, j).\nif i \\<noteq> j then 1 else if i = 0 then 1 else - 1))\n                             i \\<bullet>\n                            col (1 /\n                                 complex_of_real (sqrt 2) \\<cdot>\\<^sub>m\n                                 mat 2 2\n                                  (\\<lambda>(i, j).\nif i \\<noteq> j then 1 else if i = 0 then 1 else - 1))\n                             j) =\n                         (case (i, j) of\n                          (i, j) \\<Rightarrow> if i = j then 1 else 0)", "by(auto simp: scalar_prod_def complex_eqI)"], ["", "lemma H_is_gate [simp]:\n  \"gate 1 H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gate 1 H", "by (simp add: gate_def unitary_def)\n    (simp add: H_def)"], ["", "lemma H_values:\n  fixes i j:: nat\n  assumes \"i < dim_row H\" and \"j < dim_col H\" and \"i \\<noteq> 1 \\<or> j \\<noteq> 1\" \n  shows \"H $$ (i,j) = 1/sqrt 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H $$ (i, j) = complex_of_real (1 / sqrt 2)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. H $$ (i, j) = complex_of_real (1 / sqrt 2)", "have \"i < 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < 2", "using assms(1)"], ["proof (prove)\nusing this:\n  i < dim_row H\n\ngoal (1 subgoal):\n 1. i < 2", "by (simp add: H_without_scalar_prod less_2_cases)"], ["proof (state)\nthis:\n  i < 2\n\ngoal (1 subgoal):\n 1. H $$ (i, j) = complex_of_real (1 / sqrt 2)", "moreover"], ["proof (state)\nthis:\n  i < 2\n\ngoal (1 subgoal):\n 1. H $$ (i, j) = complex_of_real (1 / sqrt 2)", "have \"j < 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j < 2", "using assms(2)"], ["proof (prove)\nusing this:\n  j < dim_col H\n\ngoal (1 subgoal):\n 1. j < 2", "by (simp add: H_without_scalar_prod less_2_cases)"], ["proof (state)\nthis:\n  j < 2\n\ngoal (1 subgoal):\n 1. H $$ (i, j) = complex_of_real (1 / sqrt 2)", "ultimately"], ["proof (chain)\npicking this:\n  i < 2\n  j < 2", "show ?thesis"], ["proof (prove)\nusing this:\n  i < 2\n  j < 2\n\ngoal (1 subgoal):\n 1. H $$ (i, j) = complex_of_real (1 / sqrt 2)", "using assms(3) H_without_scalar_prod"], ["proof (prove)\nusing this:\n  i < 2\n  j < 2\n  i \\<noteq> 1 \\<or> j \\<noteq> 1\n  H =\n  mat 2 2\n   (\\<lambda>x.\n       complex_of_real\n        (case x of\n         (i, j) \\<Rightarrow>\n           if i \\<noteq> j then 1 / sqrt 2\n           else if i = 0 then 1 / sqrt 2 else - (1 / sqrt 2)))\n\ngoal (1 subgoal):\n 1. H $$ (i, j) = complex_of_real (1 / sqrt 2)", "by(smt One_nat_def index_mat(1) less_2_cases old.prod.case)"], ["proof (state)\nthis:\n  H $$ (i, j) = complex_of_real (1 / sqrt 2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma H_values_right_bottom:\n  fixes i j:: nat\n  assumes \"i = 1 \\<and> j = 1\"\n  shows \"H $$ (i,j) = - 1/sqrt 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H $$ (i, j) = complex_of_real (- 1 / sqrt 2)", "using assms"], ["proof (prove)\nusing this:\n  i = 1 \\<and> j = 1\n\ngoal (1 subgoal):\n 1. H $$ (i, j) = complex_of_real (- 1 / sqrt 2)", "by (simp add: H_without_scalar_prod)"], ["", "text \\<open>The controlled-NOT gate\\<close>"], ["", "definition CNOT ::\"complex mat\" where\n\"CNOT \\<equiv> mat 4 4 \n  (\\<lambda>(i,j). if i=0 \\<and> j=0 then 1 else \n    (if i=1 \\<and> j=1 then 1 else \n      (if i=2 \\<and> j=3 then 1 else \n        (if i=3 \\<and> j=2 then 1 else 0))))\""], ["", "lemma dagger_of_CNOT [simp]:\n  \"CNOT\\<^sup>\\<dagger> = CNOT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CNOT\\<^sup>\\<dagger> = CNOT", "using dagger_def"], ["proof (prove)\nusing this:\n  ?M\\<^sup>\\<dagger> \\<equiv>\n  mat (dim_col ?M) (dim_row ?M) (\\<lambda>(i, j). cnj (?M $$ (j, i)))\n\ngoal (1 subgoal):\n 1. CNOT\\<^sup>\\<dagger> = CNOT", "by (simp add: CNOT_def cong_mat)"], ["", "lemma CNOT_inv [simp]:\n  \"CNOT * CNOT = 1\\<^sub>m 4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CNOT * CNOT = 1\\<^sub>m 4", "apply(simp add: CNOT_def times_mat_def one_mat_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. mat 4 4\n     (\\<lambda>(i, j).\n         row (mat 4 4\n               (\\<lambda>(i, j).\n                   if i = 0 \\<and> j = 0 then 1\n                   else if i = 1 \\<and> j = 1 then 1\n                        else if i = 2 \\<and> j = 3 then 1\n                             else if i = 3 \\<and> j = 2 then 1 else 0))\n          i \\<bullet>\n         col (mat 4 4\n               (\\<lambda>(i, j).\n                   if i = 0 \\<and> j = 0 then 1\n                   else if i = 1 \\<and> j = 1 then 1\n                        else if i = 2 \\<and> j = 3 then 1\n                             else if i = 3 \\<and> j = 2 then 1 else 0))\n          j) =\n    mat 4 4 (\\<lambda>(i, j). if i = j then 1 else 0)", "apply(rule cong_mat)"], ["proof (prove)\ngoal (3 subgoals):\n 1. 4 = 4\n 2. 4 = 4\n 3. \\<And>i j.\n       \\<lbrakk>i < 4; j < 4\\<rbrakk>\n       \\<Longrightarrow> (case (i, j) of\n                          (i, j) \\<Rightarrow>\n                            row (mat 4 4\n                                  (\\<lambda>(i, j).\nif i = 0 \\<and> j = 0 then 1\nelse if i = 1 \\<and> j = 1 then 1\n     else if i = 2 \\<and> j = 3 then 1\n          else if i = 3 \\<and> j = 2 then 1 else 0))\n                             i \\<bullet>\n                            col (mat 4 4\n                                  (\\<lambda>(i, j).\nif i = 0 \\<and> j = 0 then 1\nelse if i = 1 \\<and> j = 1 then 1\n     else if i = 2 \\<and> j = 3 then 1\n          else if i = 3 \\<and> j = 2 then 1 else 0))\n                             j) =\n                         (case (i, j) of\n                          (i, j) \\<Rightarrow> if i = j then 1 else 0)", "by(auto simp: scalar_prod_def)"], ["", "lemma CNOT_is_gate [simp]:\n  \"gate 2 CNOT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gate 2 CNOT", "by (simp add: gate_def unitary_def)\n    (simp add: CNOT_def)"], ["", "text \\<open>The phase gate, also known as the S-gate\\<close>"], ["", "definition S ::\"complex mat\" where\n\"S \\<equiv> mat 2 2 (\\<lambda>(i,j). if i=0 \\<and> j=0 then 1 else (if i=1 \\<and> j=1 then \\<i> else 0))\""], ["", "text \\<open>The @{text \"\\<pi>/8\"} gate, also known as the T-gate\\<close>"], ["", "definition T ::\"complex mat\" where\n\"T \\<equiv> mat 2 2 (\\<lambda>(i,j). if i=0 \\<and> j=0 then 1 else (if i=1 \\<and> j=1 then exp(\\<i>*(pi/4)) else 0))\""], ["", "text \\<open>A few relations between the Hadamard gate and the Pauli matrices\\<close>"], ["", "lemma HXH_is_Z [simp]:\n  \"H * X * H = Z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H * X * H = Z", "apply(simp add: X_def Z_def H_def times_mat_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. mat 2 2\n     (\\<lambda>(i, j).\n         row (mat 2 2\n               (\\<lambda>(i, j).\n                   row (1 / complex_of_real (sqrt 2) \\<cdot>\\<^sub>m\n                        mat 2 2\n                         (\\<lambda>(i, j).\n                             if i \\<noteq> j then 1\n                             else if i = 0 then 1 else - 1))\n                    i \\<bullet>\n                   col (mat 2 2 (\\<lambda>(i, j). if i = j then 0 else 1))\n                    j))\n          i \\<bullet>\n         col (1 / complex_of_real (sqrt 2) \\<cdot>\\<^sub>m\n              mat 2 2\n               (\\<lambda>(i, j).\n                   if i \\<noteq> j then 1 else if i = 0 then 1 else - 1))\n          j) =\n    mat 2 2\n     (\\<lambda>(i, j). if i \\<noteq> j then 0 else if i = 0 then 1 else - 1)", "apply(rule cong_mat)"], ["proof (prove)\ngoal (3 subgoals):\n 1. 2 = 2\n 2. 2 = 2\n 3. \\<And>i j.\n       \\<lbrakk>i < 2; j < 2\\<rbrakk>\n       \\<Longrightarrow> (case (i, j) of\n                          (i, j) \\<Rightarrow>\n                            row (mat 2 2\n                                  (\\<lambda>(i, j).\nrow (1 / complex_of_real (sqrt 2) \\<cdot>\\<^sub>m\n     mat 2 2\n      (\\<lambda>(i, j).\n          if i \\<noteq> j then 1 else if i = 0 then 1 else - 1))\n i \\<bullet>\ncol (mat 2 2 (\\<lambda>(i, j). if i = j then 0 else 1)) j))\n                             i \\<bullet>\n                            col (1 /\n                                 complex_of_real (sqrt 2) \\<cdot>\\<^sub>m\n                                 mat 2 2\n                                  (\\<lambda>(i, j).\nif i \\<noteq> j then 1 else if i = 0 then 1 else - 1))\n                             j) =\n                         (case (i, j) of\n                          (i, j) \\<Rightarrow>\n                            if i \\<noteq> j then 0\n                            else if i = 0 then 1 else - 1)", "by(auto simp add: scalar_prod_def complex_eqI)"], ["", "lemma HYH_is_minusY [simp]:\n  \"H * Y * H = - Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H * Y * H = - Y", "apply(simp add: Y_def H_def times_mat_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. mat 2 2\n     (\\<lambda>(i, j).\n         row (mat 2 2\n               (\\<lambda>(i, j).\n                   row (1 / complex_of_real (sqrt 2) \\<cdot>\\<^sub>m\n                        mat 2 2\n                         (\\<lambda>(i, j).\n                             if i \\<noteq> j then 1\n                             else if i = 0 then 1 else - 1))\n                    i \\<bullet>\n                   col (mat 2 2\n                         (\\<lambda>(i, j).\n                             if i = j then 0\n                             else if i = 0 then - \\<i> else \\<i>))\n                    j))\n          i \\<bullet>\n         col (1 / complex_of_real (sqrt 2) \\<cdot>\\<^sub>m\n              mat 2 2\n               (\\<lambda>(i, j).\n                   if i \\<noteq> j then 1 else if i = 0 then 1 else - 1))\n          j) =\n    - mat 2 2\n       (\\<lambda>(i, j).\n           if i = j then 0 else if i = 0 then - \\<i> else \\<i>)", "apply(rule eq_matI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (- mat 2 2\n                         (\\<lambda>(i, j).\n                             if i = j then 0\n                             else if i = 0 then - \\<i> else \\<i>));\n        j < dim_col\n             (- mat 2 2\n                 (\\<lambda>(i, j).\n                     if i = j then 0\n                     else if i = 0 then - \\<i> else \\<i>))\\<rbrakk>\n       \\<Longrightarrow> mat 2 2\n                          (\\<lambda>(i, j).\n                              row (mat 2 2\n                                    (\\<lambda>(i, j).\n  row (1 / complex_of_real (sqrt 2) \\<cdot>\\<^sub>m\n       mat 2 2\n        (\\<lambda>(i, j).\n            if i \\<noteq> j then 1 else if i = 0 then 1 else - 1))\n   i \\<bullet>\n  col (mat 2 2\n        (\\<lambda>(i, j).\n            if i = j then 0 else if i = 0 then - \\<i> else \\<i>))\n   j))\n                               i \\<bullet>\n                              col (1 /\n                                   complex_of_real (sqrt 2) \\<cdot>\\<^sub>m\n                                   mat 2 2\n                                    (\\<lambda>(i, j).\n  if i \\<noteq> j then 1 else if i = 0 then 1 else - 1))\n                               j) $$\n                         (i, j) =\n                         (- mat 2 2\n                             (\\<lambda>(i, j).\n                                 if i = j then 0\n                                 else if i = 0 then - \\<i> else \\<i>)) $$\n                         (i, j)\n 2. dim_row\n     (mat 2 2\n       (\\<lambda>(i, j).\n           row (mat 2 2\n                 (\\<lambda>(i, j).\n                     row (1 / complex_of_real (sqrt 2) \\<cdot>\\<^sub>m\n                          mat 2 2\n                           (\\<lambda>(i, j).\n                               if i \\<noteq> j then 1\n                               else if i = 0 then 1 else - 1))\n                      i \\<bullet>\n                     col (mat 2 2\n                           (\\<lambda>(i, j).\n                               if i = j then 0\n                               else if i = 0 then - \\<i> else \\<i>))\n                      j))\n            i \\<bullet>\n           col (1 / complex_of_real (sqrt 2) \\<cdot>\\<^sub>m\n                mat 2 2\n                 (\\<lambda>(i, j).\n                     if i \\<noteq> j then 1 else if i = 0 then 1 else - 1))\n            j)) =\n    dim_row\n     (- mat 2 2\n         (\\<lambda>(i, j).\n             if i = j then 0 else if i = 0 then - \\<i> else \\<i>))\n 3. dim_col\n     (mat 2 2\n       (\\<lambda>(i, j).\n           row (mat 2 2\n                 (\\<lambda>(i, j).\n                     row (1 / complex_of_real (sqrt 2) \\<cdot>\\<^sub>m\n                          mat 2 2\n                           (\\<lambda>(i, j).\n                               if i \\<noteq> j then 1\n                               else if i = 0 then 1 else - 1))\n                      i \\<bullet>\n                     col (mat 2 2\n                           (\\<lambda>(i, j).\n                               if i = j then 0\n                               else if i = 0 then - \\<i> else \\<i>))\n                      j))\n            i \\<bullet>\n           col (1 / complex_of_real (sqrt 2) \\<cdot>\\<^sub>m\n                mat 2 2\n                 (\\<lambda>(i, j).\n                     if i \\<noteq> j then 1 else if i = 0 then 1 else - 1))\n            j)) =\n    dim_col\n     (- mat 2 2\n         (\\<lambda>(i, j).\n             if i = j then 0 else if i = 0 then - \\<i> else \\<i>))", "by(auto simp add: scalar_prod_def complex_eqI)"], ["", "lemma HZH_is_X [simp]:\n  shows \"H * Z * H = X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H * Z * H = X", "apply(simp add: X_def Z_def H_def times_mat_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. mat 2 2\n     (\\<lambda>(i, j).\n         row (mat 2 2\n               (\\<lambda>(i, j).\n                   row (1 / complex_of_real (sqrt 2) \\<cdot>\\<^sub>m\n                        mat 2 2\n                         (\\<lambda>(i, j).\n                             if i \\<noteq> j then 1\n                             else if i = 0 then 1 else - 1))\n                    i \\<bullet>\n                   col (mat 2 2\n                         (\\<lambda>(i, j).\n                             if i \\<noteq> j then 0\n                             else if i = 0 then 1 else - 1))\n                    j))\n          i \\<bullet>\n         col (1 / complex_of_real (sqrt 2) \\<cdot>\\<^sub>m\n              mat 2 2\n               (\\<lambda>(i, j).\n                   if i \\<noteq> j then 1 else if i = 0 then 1 else - 1))\n          j) =\n    mat 2 2 (\\<lambda>(i, j). if i = j then 0 else 1)", "apply(rule cong_mat)"], ["proof (prove)\ngoal (3 subgoals):\n 1. 2 = 2\n 2. 2 = 2\n 3. \\<And>i j.\n       \\<lbrakk>i < 2; j < 2\\<rbrakk>\n       \\<Longrightarrow> (case (i, j) of\n                          (i, j) \\<Rightarrow>\n                            row (mat 2 2\n                                  (\\<lambda>(i, j).\nrow (1 / complex_of_real (sqrt 2) \\<cdot>\\<^sub>m\n     mat 2 2\n      (\\<lambda>(i, j).\n          if i \\<noteq> j then 1 else if i = 0 then 1 else - 1))\n i \\<bullet>\ncol (mat 2 2\n      (\\<lambda>(i, j).\n          if i \\<noteq> j then 0 else if i = 0 then 1 else - 1))\n j))\n                             i \\<bullet>\n                            col (1 /\n                                 complex_of_real (sqrt 2) \\<cdot>\\<^sub>m\n                                 mat 2 2\n                                  (\\<lambda>(i, j).\nif i \\<noteq> j then 1 else if i = 0 then 1 else - 1))\n                             j) =\n                         (case (i, j) of\n                          (i, j) \\<Rightarrow> if i = j then 0 else 1)", "by(auto simp add: scalar_prod_def complex_eqI)"], ["", "subsection \\<open>The Bell States\\<close>"], ["", "text \\<open>\nWe introduce below the so-called Bell states, also known as EPR pairs (EPR stands for Einstein,\nPodolsky and Rosen).\n\\<close>"], ["", "definition bell00 ::\"complex mat\" (\"|\\<beta>\\<^sub>0\\<^sub>0\\<rangle>\") where\n\"bell00 \\<equiv> 1/sqrt(2) \\<cdot>\\<^sub>m |vec 4 (\\<lambda>i. if i=0 \\<or> i=3 then 1 else 0)\\<rangle>\""], ["", "definition bell01 ::\"complex mat\" (\"|\\<beta>\\<^sub>0\\<^sub>1\\<rangle>\") where\n\"bell01 \\<equiv> 1/sqrt(2) \\<cdot>\\<^sub>m |vec 4 (\\<lambda>i. if i=1 \\<or> i=2 then 1 else 0)\\<rangle>\""], ["", "definition bell10 ::\"complex mat\" (\"|\\<beta>\\<^sub>1\\<^sub>0\\<rangle>\") where\n\"bell10 \\<equiv> 1/sqrt(2) \\<cdot>\\<^sub>m |vec 4 (\\<lambda>i. if i=0 then 1 else if i=3 then -1 else 0)\\<rangle>\""], ["", "definition bell11 ::\"complex mat\" (\"|\\<beta>\\<^sub>1\\<^sub>1\\<rangle>\") where\n\"bell11 \\<equiv> 1/sqrt(2) \\<cdot>\\<^sub>m |vec 4 (\\<lambda>i. if i=1 then 1 else if i=2 then -1 else 0)\\<rangle>\""], ["", "lemma\n  shows bell00_is_state [simp]:\"state 2 |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>\" and bell01_is_state [simp]:\"state 2 |\\<beta>\\<^sub>0\\<^sub>1\\<rangle>\" and \n    bell10_is_state [simp]:\"state 2 |\\<beta>\\<^sub>1\\<^sub>0\\<rangle>\" and bell11_is_state [simp]:\"state 2 |\\<beta>\\<^sub>1\\<^sub>1\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (state 2 |\\<beta>\\<^sub>0\\<^sub>0\\<rangle> &&&\n     state 2 |\\<beta>\\<^sub>0\\<^sub>1\\<rangle>) &&&\n    state 2 |\\<beta>\\<^sub>1\\<^sub>0\\<rangle> &&&\n    state 2 |\\<beta>\\<^sub>1\\<^sub>1\\<rangle>", "by (auto simp: state_def bell00_def bell01_def bell10_def bell11_def ket_vec_def)\n    (auto simp: cpx_vec_length_def Set_Interval.lessThan_atLeast0 cmod_def power2_eq_square)"], ["", "lemma bell00_index [simp]:\n  shows \"|\\<beta>\\<^sub>0\\<^sub>0\\<rangle> $$ (0,0) = 1/sqrt 2\" and \"|\\<beta>\\<^sub>0\\<^sub>0\\<rangle> $$ (1,0) = 0\" and \"|\\<beta>\\<^sub>0\\<^sub>0\\<rangle> $$ (2,0) = 0\" and \n    \"|\\<beta>\\<^sub>0\\<^sub>0\\<rangle> $$ (3,0) = 1/sqrt 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (|\\<beta>\\<^sub>0\\<^sub>0\\<rangle> $$ (0, 0) =\n     complex_of_real (1 / sqrt 2) &&&\n     |\\<beta>\\<^sub>0\\<^sub>0\\<rangle> $$ (1, 0) = 0) &&&\n    |\\<beta>\\<^sub>0\\<^sub>0\\<rangle> $$ (2, 0) = 0 &&&\n    |\\<beta>\\<^sub>0\\<^sub>0\\<rangle> $$ (3, 0) =\n    complex_of_real (1 / sqrt 2)", "by (auto simp: bell00_def ket_vec_def)"], ["", "lemma bell01_index [simp]:\n  shows \"|\\<beta>\\<^sub>0\\<^sub>1\\<rangle> $$ (0,0) = 0\" and \"|\\<beta>\\<^sub>0\\<^sub>1\\<rangle> $$ (1,0) = 1/sqrt 2\" and \"|\\<beta>\\<^sub>0\\<^sub>1\\<rangle> $$ (2,0) = 1/sqrt 2\" and \n    \"|\\<beta>\\<^sub>0\\<^sub>1\\<rangle> $$ (3,0) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (|\\<beta>\\<^sub>0\\<^sub>1\\<rangle> $$ (0, 0) = 0 &&&\n     |\\<beta>\\<^sub>0\\<^sub>1\\<rangle> $$ (1, 0) =\n     complex_of_real (1 / sqrt 2)) &&&\n    |\\<beta>\\<^sub>0\\<^sub>1\\<rangle> $$ (2, 0) =\n    complex_of_real (1 / sqrt 2) &&&\n    |\\<beta>\\<^sub>0\\<^sub>1\\<rangle> $$ (3, 0) = 0", "by (auto simp: bell01_def ket_vec_def)"], ["", "lemma bell10_index [simp]:\n  shows \"|\\<beta>\\<^sub>1\\<^sub>0\\<rangle> $$ (0,0) = 1/sqrt 2\" and \"|\\<beta>\\<^sub>1\\<^sub>0\\<rangle> $$ (1,0) = 0\" and \"|\\<beta>\\<^sub>1\\<^sub>0\\<rangle> $$ (2,0) = 0\" and \n    \"|\\<beta>\\<^sub>1\\<^sub>0\\<rangle> $$ (3,0) = - 1/sqrt 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (|\\<beta>\\<^sub>1\\<^sub>0\\<rangle> $$ (0, 0) =\n     complex_of_real (1 / sqrt 2) &&&\n     |\\<beta>\\<^sub>1\\<^sub>0\\<rangle> $$ (1, 0) = 0) &&&\n    |\\<beta>\\<^sub>1\\<^sub>0\\<rangle> $$ (2, 0) = 0 &&&\n    |\\<beta>\\<^sub>1\\<^sub>0\\<rangle> $$ (3, 0) =\n    complex_of_real (- 1 / sqrt 2)", "by (auto simp: bell10_def ket_vec_def)"], ["", "lemma bell_11_index [simp]:\n  shows \"|\\<beta>\\<^sub>1\\<^sub>1\\<rangle> $$ (0,0) = 0\" and \"|\\<beta>\\<^sub>1\\<^sub>1\\<rangle> $$ (1,0) = 1/sqrt 2\" and \"|\\<beta>\\<^sub>1\\<^sub>1\\<rangle> $$ (2,0) = - 1/sqrt 2\" and \n    \"|\\<beta>\\<^sub>1\\<^sub>1\\<rangle> $$ (3,0) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (|\\<beta>\\<^sub>1\\<^sub>1\\<rangle> $$ (0, 0) = 0 &&&\n     |\\<beta>\\<^sub>1\\<^sub>1\\<rangle> $$ (1, 0) =\n     complex_of_real (1 / sqrt 2)) &&&\n    |\\<beta>\\<^sub>1\\<^sub>1\\<rangle> $$ (2, 0) =\n    complex_of_real (- 1 / sqrt 2) &&&\n    |\\<beta>\\<^sub>1\\<^sub>1\\<rangle> $$ (3, 0) = 0", "by (auto simp: bell11_def ket_vec_def)"], ["", "subsection \\<open>The Bitwise Inner Product\\<close>"], ["", "definition bitwise_inner_prod:: \"nat \\<Rightarrow> nat \\<Rightarrow> nat \\<Rightarrow> nat\" where \n\"bitwise_inner_prod n i j = (\\<Sum>k\\<in>{0..<n}. (bin_rep n i) ! k * (bin_rep n j) ! k)\""], ["", "abbreviation bip:: \"nat \\<Rightarrow> nat \\<Rightarrow> nat \\<Rightarrow> nat\" (\"_ \\<cdot>\\<^bsub>_\\<^esub>  _\") where\n\"bip i n j \\<equiv> bitwise_inner_prod n i j\""], ["", "lemma bitwise_inner_prod_fst_el_0: \n  assumes \"i < 2^n \\<or> j < 2^n\" \n  shows \"(i \\<cdot>\\<^bsub>Suc n\\<^esub> j) = (i mod 2^n) \\<cdot>\\<^bsub>n\\<^esub> (j mod 2^n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n    i mod 2 ^ n \\<cdot>\\<^bsub>n\\<^esub>  j mod 2 ^ n", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n    i mod 2 ^ n \\<cdot>\\<^bsub>n\\<^esub>  j mod 2 ^ n", "have \"bip i (Suc n) j = (\\<Sum>k\\<in>{0..<(Suc n)}. (bin_rep (Suc n) i) ! k * (bin_rep (Suc n) j) ! k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n    (\\<Sum>k = 0..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k)", "using bitwise_inner_prod_def"], ["proof (prove)\nusing this:\n  ?i \\<cdot>\\<^bsub>?n\\<^esub>  ?j =\n  (\\<Sum>k = 0..<?n. bin_rep ?n ?i ! k * bin_rep ?n ?j ! k)\n\ngoal (1 subgoal):\n 1. i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n    (\\<Sum>k = 0..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k)", "by simp"], ["proof (state)\nthis:\n  i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n  (\\<Sum>k = 0..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k)\n\ngoal (1 subgoal):\n 1. i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n    i mod 2 ^ n \\<cdot>\\<^bsub>n\\<^esub>  j mod 2 ^ n", "also"], ["proof (state)\nthis:\n  i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n  (\\<Sum>k = 0..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k)\n\ngoal (1 subgoal):\n 1. i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n    i mod 2 ^ n \\<cdot>\\<^bsub>n\\<^esub>  j mod 2 ^ n", "have \"... = bin_rep (Suc n) i ! 0 * bin_rep (Suc n) j ! 0 + \n             (\\<Sum>k\\<in>{1..<(Suc n)}. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k) =\n    bin_rep (Suc n) i ! 0 * bin_rep (Suc n) j ! 0 +\n    (\\<Sum>k = 1..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k)", "by (simp add: sum.atLeast_Suc_lessThan)"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k) =\n  bin_rep (Suc n) i ! 0 * bin_rep (Suc n) j ! 0 +\n  (\\<Sum>k = 1..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k)\n\ngoal (1 subgoal):\n 1. i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n    i mod 2 ^ n \\<cdot>\\<^bsub>n\\<^esub>  j mod 2 ^ n", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k) =\n  bin_rep (Suc n) i ! 0 * bin_rep (Suc n) j ! 0 +\n  (\\<Sum>k = 1..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k)\n\ngoal (1 subgoal):\n 1. i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n    i mod 2 ^ n \\<cdot>\\<^bsub>n\\<^esub>  j mod 2 ^ n", "have \"... = (\\<Sum>k\\<in>{1..<(Suc n)}. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bin_rep (Suc n) i ! 0 * bin_rep (Suc n) j ! 0 +\n    (\\<Sum>k = 1..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k) =\n    (\\<Sum>k = 1..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k)", "using bin_rep_index_0[of i n] bin_rep_index_0[of j n] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>i < 2 ^ n; n < ?k\\<rbrakk> \\<Longrightarrow> bin_rep ?k i ! 0 = 0\n  \\<lbrakk>j < 2 ^ n; n < ?k\\<rbrakk> \\<Longrightarrow> bin_rep ?k j ! 0 = 0\n  i < 2 ^ n \\<or> j < 2 ^ n\n\ngoal (1 subgoal):\n 1. bin_rep (Suc n) i ! 0 * bin_rep (Suc n) j ! 0 +\n    (\\<Sum>k = 1..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k) =\n    (\\<Sum>k = 1..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k)", "by auto"], ["proof (state)\nthis:\n  bin_rep (Suc n) i ! 0 * bin_rep (Suc n) j ! 0 +\n  (\\<Sum>k = 1..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k) =\n  (\\<Sum>k = 1..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k)\n\ngoal (1 subgoal):\n 1. i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n    i mod 2 ^ n \\<cdot>\\<^bsub>n\\<^esub>  j mod 2 ^ n", "also"], ["proof (state)\nthis:\n  bin_rep (Suc n) i ! 0 * bin_rep (Suc n) j ! 0 +\n  (\\<Sum>k = 1..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k) =\n  (\\<Sum>k = 1..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k)\n\ngoal (1 subgoal):\n 1. i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n    i mod 2 ^ n \\<cdot>\\<^bsub>n\\<^esub>  j mod 2 ^ n", "have \"... = (\\<Sum>k\\<in>{0..<n}. bin_rep (Suc n) i !(k+1) * bin_rep (Suc n) j ! (k+1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k) =\n    (\\<Sum>k = 0..<n.\n        bin_rep (Suc n) i ! (k + 1) * bin_rep (Suc n) j ! (k + 1))", "using sum.shift_bounds_Suc_ivl[of \"\\<lambda>k. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k\" \"0\" \"n\"]"], ["proof (prove)\nusing this:\n  (\\<Sum>k = Suc 0..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k) =\n  (\\<Sum>ia = 0..<n.\n      bin_rep (Suc n) i ! Suc ia * bin_rep (Suc n) j ! Suc ia)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k) =\n    (\\<Sum>k = 0..<n.\n        bin_rep (Suc n) i ! (k + 1) * bin_rep (Suc n) j ! (k + 1))", "by (metis (no_types, lifting) One_nat_def add.commute plus_1_eq_Suc sum.cong)"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k) =\n  (\\<Sum>k = 0..<n.\n      bin_rep (Suc n) i ! (k + 1) * bin_rep (Suc n) j ! (k + 1))\n\ngoal (1 subgoal):\n 1. i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n    i mod 2 ^ n \\<cdot>\\<^bsub>n\\<^esub>  j mod 2 ^ n", "finally"], ["proof (chain)\npicking this:\n  i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n  (\\<Sum>k = 0..<n.\n      bin_rep (Suc n) i ! (k + 1) * bin_rep (Suc n) j ! (k + 1))", "have \"bip i (Suc n) j = (\\<Sum>k\\<in>{0..<n}. bin_rep (Suc n) i ! (k+1) * bin_rep (Suc n) j ! (k+1))\""], ["proof (prove)\nusing this:\n  i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n  (\\<Sum>k = 0..<n.\n      bin_rep (Suc n) i ! (k + 1) * bin_rep (Suc n) j ! (k + 1))\n\ngoal (1 subgoal):\n 1. i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n    (\\<Sum>k = 0..<n.\n        bin_rep (Suc n) i ! (k + 1) * bin_rep (Suc n) j ! (k + 1))", "by simp"], ["proof (state)\nthis:\n  i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n  (\\<Sum>k = 0..<n.\n      bin_rep (Suc n) i ! (k + 1) * bin_rep (Suc n) j ! (k + 1))\n\ngoal (1 subgoal):\n 1. i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n    i mod 2 ^ n \\<cdot>\\<^bsub>n\\<^esub>  j mod 2 ^ n", "moreover"], ["proof (state)\nthis:\n  i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n  (\\<Sum>k = 0..<n.\n      bin_rep (Suc n) i ! (k + 1) * bin_rep (Suc n) j ! (k + 1))\n\ngoal (1 subgoal):\n 1. i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n    i mod 2 ^ n \\<cdot>\\<^bsub>n\\<^esub>  j mod 2 ^ n", "have \"k\\<in>{0..n} \\<longrightarrow> bin_rep (Suc n) i ! (k+1) = bin_rep n (i mod 2^n) ! k\" for k"], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<in> {0..n} \\<longrightarrow>\n    bin_rep (Suc n) i ! (k + 1) = bin_rep n (i mod 2 ^ n) ! k", "using bin_rep_def"], ["proof (prove)\nusing this:\n  bin_rep ?n ?m = butlast (bin_rep_aux ?n ?m)\n\ngoal (1 subgoal):\n 1. k \\<in> {0..n} \\<longrightarrow>\n    bin_rep (Suc n) i ! (k + 1) = bin_rep n (i mod 2 ^ n) ! k", "by (simp add: bin_rep_aux_neq_nil)"], ["proof (state)\nthis:\n  ?k \\<in> {0..n} \\<longrightarrow>\n  bin_rep (Suc n) i ! (?k + 1) = bin_rep n (i mod 2 ^ n) ! ?k\n\ngoal (1 subgoal):\n 1. i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n    i mod 2 ^ n \\<cdot>\\<^bsub>n\\<^esub>  j mod 2 ^ n", "moreover"], ["proof (state)\nthis:\n  ?k \\<in> {0..n} \\<longrightarrow>\n  bin_rep (Suc n) i ! (?k + 1) = bin_rep n (i mod 2 ^ n) ! ?k\n\ngoal (1 subgoal):\n 1. i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n    i mod 2 ^ n \\<cdot>\\<^bsub>n\\<^esub>  j mod 2 ^ n", "have \"k\\<in>{0..n} \\<longrightarrow> bin_rep (Suc n) j !(k+1) = bin_rep n (j mod 2^n) ! k\" for k"], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<in> {0..n} \\<longrightarrow>\n    bin_rep (Suc n) j ! (k + 1) = bin_rep n (j mod 2 ^ n) ! k", "using bin_rep_def"], ["proof (prove)\nusing this:\n  bin_rep ?n ?m = butlast (bin_rep_aux ?n ?m)\n\ngoal (1 subgoal):\n 1. k \\<in> {0..n} \\<longrightarrow>\n    bin_rep (Suc n) j ! (k + 1) = bin_rep n (j mod 2 ^ n) ! k", "by (simp add: bin_rep_aux_neq_nil)"], ["proof (state)\nthis:\n  ?k \\<in> {0..n} \\<longrightarrow>\n  bin_rep (Suc n) j ! (?k + 1) = bin_rep n (j mod 2 ^ n) ! ?k\n\ngoal (1 subgoal):\n 1. i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n    i mod 2 ^ n \\<cdot>\\<^bsub>n\\<^esub>  j mod 2 ^ n", "ultimately"], ["proof (chain)\npicking this:\n  i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n  (\\<Sum>k = 0..<n.\n      bin_rep (Suc n) i ! (k + 1) * bin_rep (Suc n) j ! (k + 1))\n  ?k \\<in> {0..n} \\<longrightarrow>\n  bin_rep (Suc n) i ! (?k + 1) = bin_rep n (i mod 2 ^ n) ! ?k\n  ?k \\<in> {0..n} \\<longrightarrow>\n  bin_rep (Suc n) j ! (?k + 1) = bin_rep n (j mod 2 ^ n) ! ?k", "show ?thesis"], ["proof (prove)\nusing this:\n  i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n  (\\<Sum>k = 0..<n.\n      bin_rep (Suc n) i ! (k + 1) * bin_rep (Suc n) j ! (k + 1))\n  ?k \\<in> {0..n} \\<longrightarrow>\n  bin_rep (Suc n) i ! (?k + 1) = bin_rep n (i mod 2 ^ n) ! ?k\n  ?k \\<in> {0..n} \\<longrightarrow>\n  bin_rep (Suc n) j ! (?k + 1) = bin_rep n (j mod 2 ^ n) ! ?k\n\ngoal (1 subgoal):\n 1. i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n    i mod 2 ^ n \\<cdot>\\<^bsub>n\\<^esub>  j mod 2 ^ n", "using assms bin_rep_index_0 bitwise_inner_prod_def"], ["proof (prove)\nusing this:\n  i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n  (\\<Sum>k = 0..<n.\n      bin_rep (Suc n) i ! (k + 1) * bin_rep (Suc n) j ! (k + 1))\n  ?k \\<in> {0..n} \\<longrightarrow>\n  bin_rep (Suc n) i ! (?k + 1) = bin_rep n (i mod 2 ^ n) ! ?k\n  ?k \\<in> {0..n} \\<longrightarrow>\n  bin_rep (Suc n) j ! (?k + 1) = bin_rep n (j mod 2 ^ n) ! ?k\n  i < 2 ^ n \\<or> j < 2 ^ n\n  \\<lbrakk>?m < 2 ^ ?n; ?n < ?k\\<rbrakk>\n  \\<Longrightarrow> bin_rep ?k ?m ! 0 = 0\n  ?i \\<cdot>\\<^bsub>?n\\<^esub>  ?j =\n  (\\<Sum>k = 0..<?n. bin_rep ?n ?i ! k * bin_rep ?n ?j ! k)\n\ngoal (1 subgoal):\n 1. i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n    i mod 2 ^ n \\<cdot>\\<^bsub>n\\<^esub>  j mod 2 ^ n", "by simp"], ["proof (state)\nthis:\n  i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n  i mod 2 ^ n \\<cdot>\\<^bsub>n\\<^esub>  j mod 2 ^ n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bitwise_inner_prod_fst_el_is_1:\n  fixes n i j:: nat\n  assumes \"i \\<ge> 2^n \\<and> j \\<ge> 2^n\" and \"i < 2^(n+1) \\<and> j < 2^(n+1)\"\n  shows \"(i \\<cdot>\\<^bsub>(n+1)\\<^esub> j) = 1 + ((i mod 2^n) \\<cdot>\\<^bsub>n\\<^esub> (j mod 2^n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<cdot>\\<^bsub>n + 1\\<^esub>  j =\n    1 + i mod 2 ^ n \\<cdot>\\<^bsub>n\\<^esub>  j mod 2 ^ n", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<cdot>\\<^bsub>n + 1\\<^esub>  j =\n    1 + i mod 2 ^ n \\<cdot>\\<^bsub>n\\<^esub>  j mod 2 ^ n", "have \"bip i (Suc n) j = (\\<Sum>k\\<in>{0..<(Suc n)}. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n    (\\<Sum>k = 0..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k)", "using bitwise_inner_prod_def"], ["proof (prove)\nusing this:\n  ?i \\<cdot>\\<^bsub>?n\\<^esub>  ?j =\n  (\\<Sum>k = 0..<?n. bin_rep ?n ?i ! k * bin_rep ?n ?j ! k)\n\ngoal (1 subgoal):\n 1. i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n    (\\<Sum>k = 0..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k)", "by simp"], ["proof (state)\nthis:\n  i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n  (\\<Sum>k = 0..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k)\n\ngoal (1 subgoal):\n 1. i \\<cdot>\\<^bsub>n + 1\\<^esub>  j =\n    1 + i mod 2 ^ n \\<cdot>\\<^bsub>n\\<^esub>  j mod 2 ^ n", "also"], ["proof (state)\nthis:\n  i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n  (\\<Sum>k = 0..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k)\n\ngoal (1 subgoal):\n 1. i \\<cdot>\\<^bsub>n + 1\\<^esub>  j =\n    1 + i mod 2 ^ n \\<cdot>\\<^bsub>n\\<^esub>  j mod 2 ^ n", "have \"... = bin_rep (Suc n) i ! 0 * bin_rep (Suc n) j ! 0 + \n            (\\<Sum>k\\<in>{1..<(Suc n)}. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k) =\n    bin_rep (Suc n) i ! 0 * bin_rep (Suc n) j ! 0 +\n    (\\<Sum>k = 1..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k)", "by (simp add: sum.atLeast_Suc_lessThan)"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k) =\n  bin_rep (Suc n) i ! 0 * bin_rep (Suc n) j ! 0 +\n  (\\<Sum>k = 1..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k)\n\ngoal (1 subgoal):\n 1. i \\<cdot>\\<^bsub>n + 1\\<^esub>  j =\n    1 + i mod 2 ^ n \\<cdot>\\<^bsub>n\\<^esub>  j mod 2 ^ n", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k) =\n  bin_rep (Suc n) i ! 0 * bin_rep (Suc n) j ! 0 +\n  (\\<Sum>k = 1..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k)\n\ngoal (1 subgoal):\n 1. i \\<cdot>\\<^bsub>n + 1\\<^esub>  j =\n    1 + i mod 2 ^ n \\<cdot>\\<^bsub>n\\<^esub>  j mod 2 ^ n", "have \"... = 1 + (\\<Sum>k\\<in>{1..<(Suc n)}. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bin_rep (Suc n) i ! 0 * bin_rep (Suc n) j ! 0 +\n    (\\<Sum>k = 1..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k) =\n    1 + (\\<Sum>k = 1..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k)", "using bin_rep_index_0_geq[of n i] bin_rep_index_0_geq[of n j] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>2 ^ n \\<le> i; i < 2 ^ (n + 1)\\<rbrakk>\n  \\<Longrightarrow> bin_rep (n + 1) i ! 0 = 1\n  \\<lbrakk>2 ^ n \\<le> j; j < 2 ^ (n + 1)\\<rbrakk>\n  \\<Longrightarrow> bin_rep (n + 1) j ! 0 = 1\n  2 ^ n \\<le> i \\<and> 2 ^ n \\<le> j\n  i < 2 ^ (n + 1) \\<and> j < 2 ^ (n + 1)\n\ngoal (1 subgoal):\n 1. bin_rep (Suc n) i ! 0 * bin_rep (Suc n) j ! 0 +\n    (\\<Sum>k = 1..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k) =\n    1 + (\\<Sum>k = 1..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k)", "by simp"], ["proof (state)\nthis:\n  bin_rep (Suc n) i ! 0 * bin_rep (Suc n) j ! 0 +\n  (\\<Sum>k = 1..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k) =\n  1 + (\\<Sum>k = 1..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k)\n\ngoal (1 subgoal):\n 1. i \\<cdot>\\<^bsub>n + 1\\<^esub>  j =\n    1 + i mod 2 ^ n \\<cdot>\\<^bsub>n\\<^esub>  j mod 2 ^ n", "also"], ["proof (state)\nthis:\n  bin_rep (Suc n) i ! 0 * bin_rep (Suc n) j ! 0 +\n  (\\<Sum>k = 1..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k) =\n  1 + (\\<Sum>k = 1..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k)\n\ngoal (1 subgoal):\n 1. i \\<cdot>\\<^bsub>n + 1\\<^esub>  j =\n    1 + i mod 2 ^ n \\<cdot>\\<^bsub>n\\<^esub>  j mod 2 ^ n", "have \"... = 1 + (\\<Sum>k \\<in> {0..<n}. bin_rep (Suc n) i ! (k+1) * bin_rep (Suc n) j ! (k+1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 +\n    (\\<Sum>k = 1..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k) =\n    1 +\n    (\\<Sum>k = 0..<n.\n        bin_rep (Suc n) i ! (k + 1) * bin_rep (Suc n) j ! (k + 1))", "using sum.shift_bounds_Suc_ivl[of \"\\<lambda>k. (bin_rep (Suc n) i)!k * (bin_rep (Suc n) j)!k\" \"0\" \"n\"]"], ["proof (prove)\nusing this:\n  (\\<Sum>k = Suc 0..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k) =\n  (\\<Sum>ia = 0..<n.\n      bin_rep (Suc n) i ! Suc ia * bin_rep (Suc n) j ! Suc ia)\n\ngoal (1 subgoal):\n 1. 1 +\n    (\\<Sum>k = 1..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k) =\n    1 +\n    (\\<Sum>k = 0..<n.\n        bin_rep (Suc n) i ! (k + 1) * bin_rep (Suc n) j ! (k + 1))", "by (metis (no_types, lifting) One_nat_def Suc_eq_plus1 sum.cong)"], ["proof (state)\nthis:\n  1 + (\\<Sum>k = 1..<Suc n. bin_rep (Suc n) i ! k * bin_rep (Suc n) j ! k) =\n  1 +\n  (\\<Sum>k = 0..<n.\n      bin_rep (Suc n) i ! (k + 1) * bin_rep (Suc n) j ! (k + 1))\n\ngoal (1 subgoal):\n 1. i \\<cdot>\\<^bsub>n + 1\\<^esub>  j =\n    1 + i mod 2 ^ n \\<cdot>\\<^bsub>n\\<^esub>  j mod 2 ^ n", "finally"], ["proof (chain)\npicking this:\n  i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n  1 +\n  (\\<Sum>k = 0..<n.\n      bin_rep (Suc n) i ! (k + 1) * bin_rep (Suc n) j ! (k + 1))", "have f0:\"bip i (Suc n) j = 1 + (\\<Sum>k\\<in>{0..<n}. bin_rep (Suc n) i ! (k+1) * bin_rep (Suc n) j ! (k+1))\""], ["proof (prove)\nusing this:\n  i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n  1 +\n  (\\<Sum>k = 0..<n.\n      bin_rep (Suc n) i ! (k + 1) * bin_rep (Suc n) j ! (k + 1))\n\ngoal (1 subgoal):\n 1. i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n    1 +\n    (\\<Sum>k = 0..<n.\n        bin_rep (Suc n) i ! (k + 1) * bin_rep (Suc n) j ! (k + 1))", "by simp"], ["proof (state)\nthis:\n  i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n  1 +\n  (\\<Sum>k = 0..<n.\n      bin_rep (Suc n) i ! (k + 1) * bin_rep (Suc n) j ! (k + 1))\n\ngoal (1 subgoal):\n 1. i \\<cdot>\\<^bsub>n + 1\\<^esub>  j =\n    1 + i mod 2 ^ n \\<cdot>\\<^bsub>n\\<^esub>  j mod 2 ^ n", "moreover"], ["proof (state)\nthis:\n  i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n  1 +\n  (\\<Sum>k = 0..<n.\n      bin_rep (Suc n) i ! (k + 1) * bin_rep (Suc n) j ! (k + 1))\n\ngoal (1 subgoal):\n 1. i \\<cdot>\\<^bsub>n + 1\\<^esub>  j =\n    1 + i mod 2 ^ n \\<cdot>\\<^bsub>n\\<^esub>  j mod 2 ^ n", "have \"k\\<in>{0..n} \\<longrightarrow> bin_rep (Suc n) i ! (k+1) = bin_rep n (i mod 2^n) ! k\n\\<and> bin_rep (Suc n) j ! (k+1) = bin_rep n (j mod 2^n) ! k\" for k"], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<in> {0..n} \\<longrightarrow>\n    bin_rep (Suc n) i ! (k + 1) = bin_rep n (i mod 2 ^ n) ! k \\<and>\n    bin_rep (Suc n) j ! (k + 1) = bin_rep n (j mod 2 ^ n) ! k", "using bin_rep_def"], ["proof (prove)\nusing this:\n  bin_rep ?n ?m = butlast (bin_rep_aux ?n ?m)\n\ngoal (1 subgoal):\n 1. k \\<in> {0..n} \\<longrightarrow>\n    bin_rep (Suc n) i ! (k + 1) = bin_rep n (i mod 2 ^ n) ! k \\<and>\n    bin_rep (Suc n) j ! (k + 1) = bin_rep n (j mod 2 ^ n) ! k", "by(metis Suc_eq_plus1 bin_rep_aux.simps(2) bin_rep_aux_neq_nil butlast.simps(2) nth_Cons_Suc)"], ["proof (state)\nthis:\n  ?k \\<in> {0..n} \\<longrightarrow>\n  bin_rep (Suc n) i ! (?k + 1) = bin_rep n (i mod 2 ^ n) ! ?k \\<and>\n  bin_rep (Suc n) j ! (?k + 1) = bin_rep n (j mod 2 ^ n) ! ?k\n\ngoal (1 subgoal):\n 1. i \\<cdot>\\<^bsub>n + 1\\<^esub>  j =\n    1 + i mod 2 ^ n \\<cdot>\\<^bsub>n\\<^esub>  j mod 2 ^ n", "ultimately"], ["proof (chain)\npicking this:\n  i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n  1 +\n  (\\<Sum>k = 0..<n.\n      bin_rep (Suc n) i ! (k + 1) * bin_rep (Suc n) j ! (k + 1))\n  ?k \\<in> {0..n} \\<longrightarrow>\n  bin_rep (Suc n) i ! (?k + 1) = bin_rep n (i mod 2 ^ n) ! ?k \\<and>\n  bin_rep (Suc n) j ! (?k + 1) = bin_rep n (j mod 2 ^ n) ! ?k", "show ?thesis"], ["proof (prove)\nusing this:\n  i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n  1 +\n  (\\<Sum>k = 0..<n.\n      bin_rep (Suc n) i ! (k + 1) * bin_rep (Suc n) j ! (k + 1))\n  ?k \\<in> {0..n} \\<longrightarrow>\n  bin_rep (Suc n) i ! (?k + 1) = bin_rep n (i mod 2 ^ n) ! ?k \\<and>\n  bin_rep (Suc n) j ! (?k + 1) = bin_rep n (j mod 2 ^ n) ! ?k\n\ngoal (1 subgoal):\n 1. i \\<cdot>\\<^bsub>n + 1\\<^esub>  j =\n    1 + i mod 2 ^ n \\<cdot>\\<^bsub>n\\<^esub>  j mod 2 ^ n", "using bitwise_inner_prod_def"], ["proof (prove)\nusing this:\n  i \\<cdot>\\<^bsub>Suc n\\<^esub>  j =\n  1 +\n  (\\<Sum>k = 0..<n.\n      bin_rep (Suc n) i ! (k + 1) * bin_rep (Suc n) j ! (k + 1))\n  ?k \\<in> {0..n} \\<longrightarrow>\n  bin_rep (Suc n) i ! (?k + 1) = bin_rep n (i mod 2 ^ n) ! ?k \\<and>\n  bin_rep (Suc n) j ! (?k + 1) = bin_rep n (j mod 2 ^ n) ! ?k\n  ?i \\<cdot>\\<^bsub>?n\\<^esub>  ?j =\n  (\\<Sum>k = 0..<?n. bin_rep ?n ?i ! k * bin_rep ?n ?j ! k)\n\ngoal (1 subgoal):\n 1. i \\<cdot>\\<^bsub>n + 1\\<^esub>  j =\n    1 + i mod 2 ^ n \\<cdot>\\<^bsub>n\\<^esub>  j mod 2 ^ n", "by simp"], ["proof (state)\nthis:\n  i \\<cdot>\\<^bsub>n + 1\\<^esub>  j =\n  1 + i mod 2 ^ n \\<cdot>\\<^bsub>n\\<^esub>  j mod 2 ^ n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bitwise_inner_prod_with_zero:\n  assumes \"m < 2^n\"\n  shows \"(0 \\<cdot>\\<^bsub>n\\<^esub>  m) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<cdot>\\<^bsub>n\\<^esub>  m = 0", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 \\<cdot>\\<^bsub>n\\<^esub>  m = 0", "have \"(0 \\<cdot>\\<^bsub>n\\<^esub>  m) = (\\<Sum>j\\<in>{0..<n}. bin_rep n 0 ! j * bin_rep n m ! j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<cdot>\\<^bsub>n\\<^esub>  m =\n    (\\<Sum>j = 0..<n. bin_rep n 0 ! j * bin_rep n m ! j)", "using bitwise_inner_prod_def"], ["proof (prove)\nusing this:\n  ?i \\<cdot>\\<^bsub>?n\\<^esub>  ?j =\n  (\\<Sum>k = 0..<?n. bin_rep ?n ?i ! k * bin_rep ?n ?j ! k)\n\ngoal (1 subgoal):\n 1. 0 \\<cdot>\\<^bsub>n\\<^esub>  m =\n    (\\<Sum>j = 0..<n. bin_rep n 0 ! j * bin_rep n m ! j)", "by simp"], ["proof (state)\nthis:\n  0 \\<cdot>\\<^bsub>n\\<^esub>  m =\n  (\\<Sum>j = 0..<n. bin_rep n 0 ! j * bin_rep n m ! j)\n\ngoal (1 subgoal):\n 1. 0 \\<cdot>\\<^bsub>n\\<^esub>  m = 0", "moreover"], ["proof (state)\nthis:\n  0 \\<cdot>\\<^bsub>n\\<^esub>  m =\n  (\\<Sum>j = 0..<n. bin_rep n 0 ! j * bin_rep n m ! j)\n\ngoal (1 subgoal):\n 1. 0 \\<cdot>\\<^bsub>n\\<^esub>  m = 0", "have \"(\\<Sum>j\\<in>{0..<n}. bin_rep n 0 ! j * bin_rep n m ! j) \n               = (\\<Sum>j\\<in>{0..<n}. 0 * (bin_rep n m) ! j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j = 0..<n. bin_rep n 0 ! j * bin_rep n m ! j) =\n    (\\<Sum>j = 0..<n. 0 * bin_rep n m ! j)", "by (simp add: bin_rep_index)"], ["proof (state)\nthis:\n  (\\<Sum>j = 0..<n. bin_rep n 0 ! j * bin_rep n m ! j) =\n  (\\<Sum>j = 0..<n. 0 * bin_rep n m ! j)\n\ngoal (1 subgoal):\n 1. 0 \\<cdot>\\<^bsub>n\\<^esub>  m = 0", "ultimately"], ["proof (chain)\npicking this:\n  0 \\<cdot>\\<^bsub>n\\<^esub>  m =\n  (\\<Sum>j = 0..<n. bin_rep n 0 ! j * bin_rep n m ! j)\n  (\\<Sum>j = 0..<n. bin_rep n 0 ! j * bin_rep n m ! j) =\n  (\\<Sum>j = 0..<n. 0 * bin_rep n m ! j)", "show \"?thesis\""], ["proof (prove)\nusing this:\n  0 \\<cdot>\\<^bsub>n\\<^esub>  m =\n  (\\<Sum>j = 0..<n. bin_rep n 0 ! j * bin_rep n m ! j)\n  (\\<Sum>j = 0..<n. bin_rep n 0 ! j * bin_rep n m ! j) =\n  (\\<Sum>j = 0..<n. 0 * bin_rep n m ! j)\n\ngoal (1 subgoal):\n 1. 0 \\<cdot>\\<^bsub>n\\<^esub>  m = 0", "by simp"], ["proof (state)\nthis:\n  0 \\<cdot>\\<^bsub>n\\<^esub>  m = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "(*\nBiblio:\n\n@book{MikeandIke,\n  author = {Nielsen, Michael A. and Chuang, Isaac L.},\n  publisher = {Cambridge University Press},\n  title = {Quantum Computation and Quantum Information},\n  year = 2010\n}\n*)"], ["", "end"]]}