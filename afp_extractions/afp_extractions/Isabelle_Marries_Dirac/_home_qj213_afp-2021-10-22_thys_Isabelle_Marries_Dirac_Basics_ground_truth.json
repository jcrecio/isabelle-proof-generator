{"file_name": "/home/qj213/afp-2021-10-22/thys/Isabelle_Marries_Dirac/Basics.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Isabelle_Marries_Dirac", "problem_names": ["lemma set_2_atLeast0 [simp]: \"{0..<2::nat} = {0,1}\"", "lemma set_2: \"{..<2::nat} = {0,1}\"", "lemma set_4_atLeast0 [simp]:\"{0..<4::nat} = {0,1,2,3}\"", "lemma set_4: \"{..<4::nat} = {0,1,2,3}\"", "lemma set_4_disj [simp]: \n  fixes i:: nat\n  assumes \"i < 4\"\n  shows \"i = 0 \\<or> i = 1 \\<or> i = 2 \\<or> i = 3\"", "lemma set_8_atLeast0 [simp]: \"{0..<8::nat} = {0,1,2,3,4,5,6,7}\"", "lemma index_is_2 [simp]: \"\\<forall>i::nat. i \\<noteq> Suc 0 \\<longrightarrow> i \\<noteq> 3 \\<longrightarrow> 0 < i \\<longrightarrow> i < 4 \\<longrightarrow> i = 2\"", "lemma index_sl_four [simp]: \"\\<forall>i::nat. i < 4 \\<longrightarrow> i = 0 \\<or> i = 1 \\<or> i = 2 \\<or> i = 3\"", "lemma index_div_eq [simp]:\n  fixes i::nat\n  shows \"i\\<in>{a*b..<(a+1)*b} \\<Longrightarrow> i div b = a\"", "lemma index_mod_eq [simp]:\n  fixes i::nat\n  shows \"i\\<in>{a*b..<(a+1)*b} \\<Longrightarrow> i mod b = i-a*b\"", "lemma sqr_of_cmod_of_prod:\n  shows \"(cmod (z1 * z2))\\<^sup>2 = (cmod z1)\\<^sup>2 * (cmod z2)\\<^sup>2\"", "lemma less_power_add_imp_div_less [simp]:\n  fixes i m n:: nat\n  assumes \"i < 2^(m+n)\"\n  shows \"i div 2^n < 2^m\"", "lemma div_mult_mod_eq_minus:\n  fixes i j:: nat\n  shows \"(i div 2^n) * 2^n + i mod 2^n - (j div 2^n) * 2^n - j mod 2^n = i - j\"", "lemma neq_imp_neq_div_or_mod:\n  fixes i j:: nat\n  assumes \"i \\<noteq> j\"\n  shows \"i div 2^n \\<noteq> j div 2^n \\<or> i mod 2^n \\<noteq> j mod 2^n\"", "lemma index_one_mat_div_mod:\n  assumes \"i < 2^(m+n)\" and \"j < 2^(m+n)\"\n  shows \"((1\\<^sub>m(2^m) $$ (i div 2^n, j div 2^n))::complex) * 1\\<^sub>m(2^n) $$ (i mod 2^n, j mod 2^n) = 1\\<^sub>m(2^(m+n)) $$ (i, j)\"", "lemma sqr_of_sqrt_2 [simp]:\n  fixes z:: \"complex\"\n  shows \"z * 2 / (complex_of_real (sqrt 2) * complex_of_real (sqrt 2)) = z\"", "lemma two_div_sqrt_two [simp]:\n  shows \"2 * complex_of_real (sqrt (1/2)) = complex_of_real (sqrt 2)\"", "lemma two_div_sqr_of_cmd_sqrt_two [simp]: \n  shows \"2 * (cmod (1 / complex_of_real (sqrt 2)))\\<^sup>2 = 1\"", "lemma two_div_two [simp]: \n  shows \"2 div Suc (Suc 0) = 1\"", "lemma two_mod_two [simp]: \n  shows \"2 mod Suc (Suc 0) = 0\"", "lemma three_div_two [simp]: \n  shows \"3 div Suc (Suc 0) = 1\"", "lemma three_mod_two [simp]: \n  shows \"3 mod Suc (Suc 0) = 1\"", "lemma index_matrix_prod [simp]:\n  assumes \"i < dim_row A\" and \"j < dim_col B\" and \"dim_col A = dim_row B\"\n  shows \"(A * B) $$ (i,j) = (\\<Sum>k<dim_row B. (A $$ (i,k)) * (B $$ (k,j)))\"", "lemma sum_insert [simp]:\n  assumes \"x \\<notin> F\" and \"finite F\"\n  shows \"(\\<Sum>y\\<in>insert x F. P y) = (\\<Sum>y\\<in>F. P y) + P x\"", "lemma sum_of_index_diff [simp]:\n  fixes f:: \"nat \\<Rightarrow> 'a::comm_monoid_add\"\n  shows \"(\\<Sum>i\\<in>{a..<a+b}. f(i-a)) = (\\<Sum>i\\<in>{..<b}. f(i))\"", "lemma exp_of_real_cnj:\n  fixes x ::real\n  shows \"cnj (exp (\\<i> * x)) = exp (-(\\<i> * x))\"", "lemma exp_of_real_cnj2:\n  fixes x ::real\n  shows \"cnj (exp (-(\\<i> * x))) = exp (\\<i> * x)\"", "lemma exp_of_half_pi: \n  fixes x:: real\n  assumes \"x = pi/2\"\n  shows \"exp (\\<i> * complex_of_real x) = \\<i>\"", "lemma exp_of_minus_half_pi: \n  fixes x:: real\n  assumes \"x = pi/2\"\n  shows \"exp (-(\\<i> * complex_of_real x)) = -\\<i>\"", "lemma exp_of_real:\n  fixes x:: real\n  shows \"exp (\\<i> * x) = cos x + \\<i> * (sin x)\"", "lemma exp_of_real_inv:\n  fixes x:: real\n  shows \"exp (-(\\<i> * x)) = cos x - \\<i> * (sin x)\"", "lemma sin_squared_le_one:\n  fixes x:: real\n  shows \"(sin x)\\<^sup>2 \\<le> 1\"", "lemma cos_squared_le_one:\n  fixes x:: real\n  shows \"(cos x)\\<^sup>2 \\<le> 1\"", "lemma sin_of_quarter_pi:\n  fixes x:: real\n  assumes \"x = pi/2\"\n  shows \"sin (x/2) = (sqrt 2)/2\"", "lemma cos_of_quarter_pi:\n  fixes x:: real\n  assumes \"x = pi/2\"\n  shows \"cos (x/2) = (sqrt 2)/2\""], "translations": [["", "lemma set_2_atLeast0 [simp]: \"{0..<2::nat} = {0,1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {0..<2} = {0, 1}", "by auto"], ["", "lemma set_2: \"{..<2::nat} = {0,1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {..<2} = {0, 1}", "by auto"], ["", "lemma set_4_atLeast0 [simp]:\"{0..<4::nat} = {0,1,2,3}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {0..<4} = {0, 1, 2, 3}", "by auto"], ["", "lemma set_4: \"{..<4::nat} = {0,1,2,3}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {..<4} = {0, 1, 2, 3}", "by auto"], ["", "lemma set_4_disj [simp]: \n  fixes i:: nat\n  assumes \"i < 4\"\n  shows \"i = 0 \\<or> i = 1 \\<or> i = 2 \\<or> i = 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i = 0 \\<or> i = 1 \\<or> i = 2 \\<or> i = 3", "using assms"], ["proof (prove)\nusing this:\n  i < 4\n\ngoal (1 subgoal):\n 1. i = 0 \\<or> i = 1 \\<or> i = 2 \\<or> i = 3", "by auto"], ["", "lemma set_8_atLeast0 [simp]: \"{0..<8::nat} = {0,1,2,3,4,5,6,7}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {0..<8} = {0, 1, 2, 3, 4, 5, 6, 7}", "by auto"], ["", "lemma index_is_2 [simp]: \"\\<forall>i::nat. i \\<noteq> Suc 0 \\<longrightarrow> i \\<noteq> 3 \\<longrightarrow> 0 < i \\<longrightarrow> i < 4 \\<longrightarrow> i = 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i.\n       i \\<noteq> Suc 0 \\<longrightarrow>\n       i \\<noteq> 3 \\<longrightarrow>\n       0 < i \\<longrightarrow> i < 4 \\<longrightarrow> i = 2", "by simp"], ["", "lemma index_sl_four [simp]: \"\\<forall>i::nat. i < 4 \\<longrightarrow> i = 0 \\<or> i = 1 \\<or> i = 2 \\<or> i = 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i<4. i = 0 \\<or> i = 1 \\<or> i = 2 \\<or> i = 3", "by auto"], ["", "subsection \\<open>Basic Arithmetic Results\\<close>"], ["", "lemma index_div_eq [simp]:\n  fixes i::nat\n  shows \"i\\<in>{a*b..<(a+1)*b} \\<Longrightarrow> i div b = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<in> {a * b..<(a + 1) * b} \\<Longrightarrow> i div b = a", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<in> {a * b..<(a + 1) * b} \\<Longrightarrow> i div b = a", "fix i::nat"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<in> {a * b..<(a + 1) * b} \\<Longrightarrow> i div b = a", "assume a:\"i\\<in>{a*b..<(a+1)*b}\""], ["proof (state)\nthis:\n  i \\<in> {a * b..<(a + 1) * b}\n\ngoal (1 subgoal):\n 1. i \\<in> {a * b..<(a + 1) * b} \\<Longrightarrow> i div b = a", "then"], ["proof (chain)\npicking this:\n  i \\<in> {a * b..<(a + 1) * b}", "have \"i div b \\<ge> a\""], ["proof (prove)\nusing this:\n  i \\<in> {a * b..<(a + 1) * b}\n\ngoal (1 subgoal):\n 1. a \\<le> i div b", "by (metis Suc_eq_plus1 atLeastLessThan_iff le_refl semiring_normalization_rules(7) split_div')"], ["proof (state)\nthis:\n  a \\<le> i div b\n\ngoal (1 subgoal):\n 1. i \\<in> {a * b..<(a + 1) * b} \\<Longrightarrow> i div b = a", "moreover"], ["proof (state)\nthis:\n  a \\<le> i div b\n\ngoal (1 subgoal):\n 1. i \\<in> {a * b..<(a + 1) * b} \\<Longrightarrow> i div b = a", "have \"i div b < a+1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i div b < a + 1", "using a"], ["proof (prove)\nusing this:\n  i \\<in> {a * b..<(a + 1) * b}\n\ngoal (1 subgoal):\n 1. i div b < a + 1", "by (simp add: less_mult_imp_div_less)"], ["proof (state)\nthis:\n  i div b < a + 1\n\ngoal (1 subgoal):\n 1. i \\<in> {a * b..<(a + 1) * b} \\<Longrightarrow> i div b = a", "ultimately"], ["proof (chain)\npicking this:\n  a \\<le> i div b\n  i div b < a + 1", "show \"i div b = a\""], ["proof (prove)\nusing this:\n  a \\<le> i div b\n  i div b < a + 1\n\ngoal (1 subgoal):\n 1. i div b = a", "by simp"], ["proof (state)\nthis:\n  i div b = a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma index_mod_eq [simp]:\n  fixes i::nat\n  shows \"i\\<in>{a*b..<(a+1)*b} \\<Longrightarrow> i mod b = i-a*b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<in> {a * b..<(a + 1) * b} \\<Longrightarrow> i mod b = i - a * b", "by (simp add: modulo_nat_def)"], ["", "lemma sqr_of_cmod_of_prod:\n  shows \"(cmod (z1 * z2))\\<^sup>2 = (cmod z1)\\<^sup>2 * (cmod z2)\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cmod (z1 * z2))\\<^sup>2 = (cmod z1)\\<^sup>2 * (cmod z2)\\<^sup>2", "by (simp add: norm_mult power_mult_distrib)"], ["", "lemma less_power_add_imp_div_less [simp]:\n  fixes i m n:: nat\n  assumes \"i < 2^(m+n)\"\n  shows \"i div 2^n < 2^m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i div 2 ^ n < 2 ^ m", "using assms"], ["proof (prove)\nusing this:\n  i < 2 ^ (m + n)\n\ngoal (1 subgoal):\n 1. i div 2 ^ n < 2 ^ m", "by (simp add: less_mult_imp_div_less power_add)"], ["", "lemma div_mult_mod_eq_minus:\n  fixes i j:: nat\n  shows \"(i div 2^n) * 2^n + i mod 2^n - (j div 2^n) * 2^n - j mod 2^n = i - j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i div 2 ^ n * 2 ^ n + i mod 2 ^ n - j div 2 ^ n * 2 ^ n - j mod 2 ^ n =\n    i - j", "by (simp add: div_mult_mod_eq algebra_simps)"], ["", "lemma neq_imp_neq_div_or_mod:\n  fixes i j:: nat\n  assumes \"i \\<noteq> j\"\n  shows \"i div 2^n \\<noteq> j div 2^n \\<or> i mod 2^n \\<noteq> j mod 2^n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i div 2 ^ n \\<noteq> j div 2 ^ n \\<or> i mod 2 ^ n \\<noteq> j mod 2 ^ n", "using assms div_mult_mod_eq_minus"], ["proof (prove)\nusing this:\n  i \\<noteq> j\n  ?i div 2 ^ ?n * 2 ^ ?n + ?i mod 2 ^ ?n - ?j div 2 ^ ?n * 2 ^ ?n -\n  ?j mod 2 ^ ?n =\n  ?i - ?j\n\ngoal (1 subgoal):\n 1. i div 2 ^ n \\<noteq> j div 2 ^ n \\<or> i mod 2 ^ n \\<noteq> j mod 2 ^ n", "by (metis add.right_neutral cancel_div_mod_rules(2))"], ["", "lemma index_one_mat_div_mod:\n  assumes \"i < 2^(m+n)\" and \"j < 2^(m+n)\"\n  shows \"((1\\<^sub>m(2^m) $$ (i div 2^n, j div 2^n))::complex) * 1\\<^sub>m(2^n) $$ (i mod 2^n, j mod 2^n) = 1\\<^sub>m(2^(m+n)) $$ (i, j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n) *\n    1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n) =\n    1\\<^sub>m (2 ^ (m + n)) $$ (i, j)", "proof (cases \"i = j\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i = j \\<Longrightarrow>\n    1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n) *\n    1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n) =\n    1\\<^sub>m (2 ^ (m + n)) $$ (i, j)\n 2. i \\<noteq> j \\<Longrightarrow>\n    1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n) *\n    1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n) =\n    1\\<^sub>m (2 ^ (m + n)) $$ (i, j)", "case True"], ["proof (state)\nthis:\n  i = j\n\ngoal (2 subgoals):\n 1. i = j \\<Longrightarrow>\n    1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n) *\n    1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n) =\n    1\\<^sub>m (2 ^ (m + n)) $$ (i, j)\n 2. i \\<noteq> j \\<Longrightarrow>\n    1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n) *\n    1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n) =\n    1\\<^sub>m (2 ^ (m + n)) $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i = j", "show ?thesis"], ["proof (prove)\nusing this:\n  i = j\n\ngoal (1 subgoal):\n 1. 1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n) *\n    1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n) =\n    1\\<^sub>m (2 ^ (m + n)) $$ (i, j)", "by(simp add: assms)"], ["proof (state)\nthis:\n  1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n) *\n  1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n) =\n  1\\<^sub>m (2 ^ (m + n)) $$ (i, j)\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow>\n    1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n) *\n    1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n) =\n    1\\<^sub>m (2 ^ (m + n)) $$ (i, j)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow>\n    1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n) *\n    1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n) =\n    1\\<^sub>m (2 ^ (m + n)) $$ (i, j)", "case c1:False"], ["proof (state)\nthis:\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow>\n    1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n) *\n    1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n) =\n    1\\<^sub>m (2 ^ (m + n)) $$ (i, j)", "have \"i div 2^n \\<noteq> j div 2^n \\<or> i mod 2^n \\<noteq> j mod 2^n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i div 2 ^ n \\<noteq> j div 2 ^ n \\<or> i mod 2 ^ n \\<noteq> j mod 2 ^ n", "using c1 neq_imp_neq_div_or_mod"], ["proof (prove)\nusing this:\n  i \\<noteq> j\n  ?i \\<noteq> ?j \\<Longrightarrow>\n  ?i div 2 ^ ?n \\<noteq> ?j div 2 ^ ?n \\<or>\n  ?i mod 2 ^ ?n \\<noteq> ?j mod 2 ^ ?n\n\ngoal (1 subgoal):\n 1. i div 2 ^ n \\<noteq> j div 2 ^ n \\<or> i mod 2 ^ n \\<noteq> j mod 2 ^ n", "by simp"], ["proof (state)\nthis:\n  i div 2 ^ n \\<noteq> j div 2 ^ n \\<or> i mod 2 ^ n \\<noteq> j mod 2 ^ n\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow>\n    1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n) *\n    1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n) =\n    1\\<^sub>m (2 ^ (m + n)) $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i div 2 ^ n \\<noteq> j div 2 ^ n \\<or> i mod 2 ^ n \\<noteq> j mod 2 ^ n", "have \"1\\<^sub>m (2^m) $$ (i div 2^n, j div 2^n) = 0 \\<or> 1\\<^sub>m (2^n) $$ (i mod 2^n, j mod 2^n) = 0\""], ["proof (prove)\nusing this:\n  i div 2 ^ n \\<noteq> j div 2 ^ n \\<or> i mod 2 ^ n \\<noteq> j mod 2 ^ n\n\ngoal (1 subgoal):\n 1. 1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n) = (0::'a) \\<or>\n    1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n) = (0::'b)", "using assms"], ["proof (prove)\nusing this:\n  i div 2 ^ n \\<noteq> j div 2 ^ n \\<or> i mod 2 ^ n \\<noteq> j mod 2 ^ n\n  i < 2 ^ (m + n)\n  j < 2 ^ (m + n)\n\ngoal (1 subgoal):\n 1. 1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n) = (0::'a) \\<or>\n    1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n) = (0::'b)", "by simp"], ["proof (state)\nthis:\n  1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n) = (0::?'a1) \\<or>\n  1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n) = (0::?'b1)\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow>\n    1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n) *\n    1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n) =\n    1\\<^sub>m (2 ^ (m + n)) $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n) = (0::?'a1) \\<or>\n  1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n) = (0::?'b1)", "show ?thesis"], ["proof (prove)\nusing this:\n  1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n) = (0::?'a1) \\<or>\n  1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n) = (0::?'b1)\n\ngoal (1 subgoal):\n 1. 1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n) *\n    1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n) =\n    1\\<^sub>m (2 ^ (m + n)) $$ (i, j)", "using assms"], ["proof (prove)\nusing this:\n  1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n) = (0::?'a1) \\<or>\n  1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n) = (0::?'b1)\n  i < 2 ^ (m + n)\n  j < 2 ^ (m + n)\n\ngoal (1 subgoal):\n 1. 1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n) *\n    1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n) =\n    1\\<^sub>m (2 ^ (m + n)) $$ (i, j)", "by (simp add: c1)"], ["proof (state)\nthis:\n  1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n) *\n  1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n) =\n  1\\<^sub>m (2 ^ (m + n)) $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sqr_of_sqrt_2 [simp]:\n  fixes z:: \"complex\"\n  shows \"z * 2 / (complex_of_real (sqrt 2) * complex_of_real (sqrt 2)) = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z * 2 / (complex_of_real (sqrt 2) * complex_of_real (sqrt 2)) = z", "by(metis nonzero_mult_div_cancel_right norm_numeral of_real_numeral of_real_power power2_eq_square \nreal_norm_def real_sqrt_abs real_sqrt_power zero_neq_numeral)"], ["", "lemma two_div_sqrt_two [simp]:\n  shows \"2 * complex_of_real (sqrt (1/2)) = complex_of_real (sqrt 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * complex_of_real (sqrt (1 / 2)) = complex_of_real (sqrt 2)", "apply(auto simp add: real_sqrt_divide algebra_simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 / complex_of_real (sqrt 2) = complex_of_real (sqrt 2)", "by (metis divide_eq_0_iff nonzero_mult_div_cancel_left sqr_of_sqrt_2)"], ["", "lemma two_div_sqr_of_cmd_sqrt_two [simp]: \n  shows \"2 * (cmod (1 / complex_of_real (sqrt 2)))\\<^sup>2 = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * (cmod (1 / complex_of_real (sqrt 2)))\\<^sup>2 = 1", "using cmod_def"], ["proof (prove)\nusing this:\n  cmod ?z = sqrt ((Re ?z)\\<^sup>2 + (Im ?z)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. 2 * (cmod (1 / complex_of_real (sqrt 2)))\\<^sup>2 = 1", "by (simp add: power_divide)"], ["", "lemma two_div_two [simp]: \n  shows \"2 div Suc (Suc 0) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 div Suc (Suc 0) = 1", "by simp"], ["", "lemma two_mod_two [simp]: \n  shows \"2 mod Suc (Suc 0) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 mod Suc (Suc 0) = 0", "by (simp add: numeral_2_eq_2)"], ["", "lemma three_div_two [simp]: \n  shows \"3 div Suc (Suc 0) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 3 div Suc (Suc 0) = 1", "by (simp add: numeral_3_eq_3)"], ["", "lemma three_mod_two [simp]: \n  shows \"3 mod Suc (Suc 0) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 3 mod Suc (Suc 0) = 1", "by (simp add: mod_Suc numeral_3_eq_3)"], ["", "subsection \\<open>Basic Results on Matrices\\<close>"], ["", "lemma index_matrix_prod [simp]:\n  assumes \"i < dim_row A\" and \"j < dim_col B\" and \"dim_col A = dim_row B\"\n  shows \"(A * B) $$ (i,j) = (\\<Sum>k<dim_row B. (A $$ (i,k)) * (B $$ (k,j)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A * B) $$ (i, j) = (\\<Sum>k<dim_row B. A $$ (i, k) * B $$ (k, j))", "using assms"], ["proof (prove)\nusing this:\n  i < dim_row A\n  j < dim_col B\n  dim_col A = dim_row B\n\ngoal (1 subgoal):\n 1. (A * B) $$ (i, j) = (\\<Sum>k<dim_row B. A $$ (i, k) * B $$ (k, j))", "apply(simp add: scalar_prod_def atLeast0LessThan)"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "subsection \\<open>Basic Results on Sums\\<close>"], ["", "lemma sum_insert [simp]:\n  assumes \"x \\<notin> F\" and \"finite F\"\n  shows \"(\\<Sum>y\\<in>insert x F. P y) = (\\<Sum>y\\<in>F. P y) + P x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum P (insert x F) = sum P F + P x", "using assms insert_def"], ["proof (prove)\nusing this:\n  x \\<notin> F\n  finite F\n  insert ?a ?B = {x. x = ?a} \\<union> ?B\n\ngoal (1 subgoal):\n 1. sum P (insert x F) = sum P F + P x", "by(simp add: add.commute)"], ["", "lemma sum_of_index_diff [simp]:\n  fixes f:: \"nat \\<Rightarrow> 'a::comm_monoid_add\"\n  shows \"(\\<Sum>i\\<in>{a..<a+b}. f(i-a)) = (\\<Sum>i\\<in>{..<b}. f(i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = a..<a + b. f (i - a)) = sum f {..<b}", "proof (induction b)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<Sum>i = a..<a + 0. f (i - a)) = sum f {..<0}\n 2. \\<And>b.\n       (\\<Sum>i = a..<a + b. f (i - a)) = sum f {..<b} \\<Longrightarrow>\n       (\\<Sum>i = a..<a + Suc b. f (i - a)) = sum f {..<Suc b}", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. (\\<Sum>i = a..<a + 0. f (i - a)) = sum f {..<0}\n 2. \\<And>b.\n       (\\<Sum>i = a..<a + b. f (i - a)) = sum f {..<b} \\<Longrightarrow>\n       (\\<Sum>i = a..<a + Suc b. f (i - a)) = sum f {..<Suc b}", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = a..<a + 0. f (i - a)) = sum f {..<0}", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>i = a..<a + 0. f (i - a)) = sum f {..<0}\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       (\\<Sum>i = a..<a + b. f (i - a)) = sum f {..<b} \\<Longrightarrow>\n       (\\<Sum>i = a..<a + Suc b. f (i - a)) = sum f {..<Suc b}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b.\n       (\\<Sum>i = a..<a + b. f (i - a)) = sum f {..<b} \\<Longrightarrow>\n       (\\<Sum>i = a..<a + Suc b. f (i - a)) = sum f {..<Suc b}", "case (Suc b)"], ["proof (state)\nthis:\n  (\\<Sum>i = a..<a + b. f (i - a)) = sum f {..<b}\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       (\\<Sum>i = a..<a + b. f (i - a)) = sum f {..<b} \\<Longrightarrow>\n       (\\<Sum>i = a..<a + Suc b. f (i - a)) = sum f {..<Suc b}", "then"], ["proof (chain)\npicking this:\n  (\\<Sum>i = a..<a + b. f (i - a)) = sum f {..<b}", "show ?case"], ["proof (prove)\nusing this:\n  (\\<Sum>i = a..<a + b. f (i - a)) = sum f {..<b}\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = a..<a + Suc b. f (i - a)) = sum f {..<Suc b}", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>i = a..<a + Suc b. f (i - a)) = sum f {..<Suc b}\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Basic Results Involving the Exponential Function.\\<close>"], ["", "lemma exp_of_real_cnj:\n  fixes x ::real\n  shows \"cnj (exp (\\<i> * x)) = exp (-(\\<i> * x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnj (exp (\\<i> * complex_of_real x)) =\n    exp (- (\\<i> * complex_of_real x))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. Re (cnj (exp (\\<i> * complex_of_real x))) =\n    Re (exp (- (\\<i> * complex_of_real x)))\n 2. Im (cnj (exp (\\<i> * complex_of_real x))) =\n    Im (exp (- (\\<i> * complex_of_real x)))", "show \"Re (cnj (exp (\\<i> * x))) = Re (exp (-(\\<i> * x)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re (cnj (exp (\\<i> * complex_of_real x))) =\n    Re (exp (- (\\<i> * complex_of_real x)))", "using Re_exp"], ["proof (prove)\nusing this:\n  Re (exp ?z) = exp (Re ?z) * cos (Im ?z)\n\ngoal (1 subgoal):\n 1. Re (cnj (exp (\\<i> * complex_of_real x))) =\n    Re (exp (- (\\<i> * complex_of_real x)))", "by simp"], ["proof (state)\nthis:\n  Re (cnj (exp (\\<i> * complex_of_real x))) =\n  Re (exp (- (\\<i> * complex_of_real x)))\n\ngoal (1 subgoal):\n 1. Im (cnj (exp (\\<i> * complex_of_real x))) =\n    Im (exp (- (\\<i> * complex_of_real x)))", "show \"Im (cnj (exp (\\<i> * x))) = Im (exp (-(\\<i> * x)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Im (cnj (exp (\\<i> * complex_of_real x))) =\n    Im (exp (- (\\<i> * complex_of_real x)))", "using Im_exp"], ["proof (prove)\nusing this:\n  Im (exp ?z) = exp (Re ?z) * sin (Im ?z)\n\ngoal (1 subgoal):\n 1. Im (cnj (exp (\\<i> * complex_of_real x))) =\n    Im (exp (- (\\<i> * complex_of_real x)))", "by simp"], ["proof (state)\nthis:\n  Im (cnj (exp (\\<i> * complex_of_real x))) =\n  Im (exp (- (\\<i> * complex_of_real x)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma exp_of_real_cnj2:\n  fixes x ::real\n  shows \"cnj (exp (-(\\<i> * x))) = exp (\\<i> * x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnj (exp (- (\\<i> * complex_of_real x))) =\n    exp (\\<i> * complex_of_real x)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. Re (cnj (exp (- (\\<i> * complex_of_real x)))) =\n    Re (exp (\\<i> * complex_of_real x))\n 2. Im (cnj (exp (- (\\<i> * complex_of_real x)))) =\n    Im (exp (\\<i> * complex_of_real x))", "show \"Re (cnj (exp (-(\\<i> * x)))) = Re (exp (\\<i> * x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re (cnj (exp (- (\\<i> * complex_of_real x)))) =\n    Re (exp (\\<i> * complex_of_real x))", "using Re_exp"], ["proof (prove)\nusing this:\n  Re (exp ?z) = exp (Re ?z) * cos (Im ?z)\n\ngoal (1 subgoal):\n 1. Re (cnj (exp (- (\\<i> * complex_of_real x)))) =\n    Re (exp (\\<i> * complex_of_real x))", "by simp"], ["proof (state)\nthis:\n  Re (cnj (exp (- (\\<i> * complex_of_real x)))) =\n  Re (exp (\\<i> * complex_of_real x))\n\ngoal (1 subgoal):\n 1. Im (cnj (exp (- (\\<i> * complex_of_real x)))) =\n    Im (exp (\\<i> * complex_of_real x))", "show \"Im (cnj (exp (-(\\<i> * x)))) = Im (exp (\\<i> * x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Im (cnj (exp (- (\\<i> * complex_of_real x)))) =\n    Im (exp (\\<i> * complex_of_real x))", "using Im_exp"], ["proof (prove)\nusing this:\n  Im (exp ?z) = exp (Re ?z) * sin (Im ?z)\n\ngoal (1 subgoal):\n 1. Im (cnj (exp (- (\\<i> * complex_of_real x)))) =\n    Im (exp (\\<i> * complex_of_real x))", "by simp"], ["proof (state)\nthis:\n  Im (cnj (exp (- (\\<i> * complex_of_real x)))) =\n  Im (exp (\\<i> * complex_of_real x))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma exp_of_half_pi: \n  fixes x:: real\n  assumes \"x = pi/2\"\n  shows \"exp (\\<i> * complex_of_real x) = \\<i>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (\\<i> * complex_of_real x) = \\<i>", "using assms cis_conv_exp cis_pi_half"], ["proof (prove)\nusing this:\n  x = pi / 2\n  cis ?b = exp (\\<i> * complex_of_real ?b)\n  cis (pi / 2) = \\<i>\n\ngoal (1 subgoal):\n 1. exp (\\<i> * complex_of_real x) = \\<i>", "by fastforce"], ["", "lemma exp_of_minus_half_pi: \n  fixes x:: real\n  assumes \"x = pi/2\"\n  shows \"exp (-(\\<i> * complex_of_real x)) = -\\<i>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (- (\\<i> * complex_of_real x)) = - \\<i>", "using assms cis_conv_exp cis_minus_pi_half"], ["proof (prove)\nusing this:\n  x = pi / 2\n  cis ?b = exp (\\<i> * complex_of_real ?b)\n  cis (- (pi / 2)) = - \\<i>\n\ngoal (1 subgoal):\n 1. exp (- (\\<i> * complex_of_real x)) = - \\<i>", "by fastforce"], ["", "lemma exp_of_real:\n  fixes x:: real\n  shows \"exp (\\<i> * x) = cos x + \\<i> * (sin x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (\\<i> * complex_of_real x) =\n    complex_of_real (cos x) + \\<i> * complex_of_real (sin x)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. Re (exp (\\<i> * complex_of_real x)) =\n    Re (complex_of_real (cos x) + \\<i> * complex_of_real (sin x))\n 2. Im (exp (\\<i> * complex_of_real x)) =\n    Im (complex_of_real (cos x) + \\<i> * complex_of_real (sin x))", "show \"Re (exp (\\<i> * x)) = Re ((cos x) + \\<i> * (sin x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re (exp (\\<i> * complex_of_real x)) =\n    Re (complex_of_real (cos x) + \\<i> * complex_of_real (sin x))", "using Re_exp"], ["proof (prove)\nusing this:\n  Re (exp ?z) = exp (Re ?z) * cos (Im ?z)\n\ngoal (1 subgoal):\n 1. Re (exp (\\<i> * complex_of_real x)) =\n    Re (complex_of_real (cos x) + \\<i> * complex_of_real (sin x))", "by simp"], ["proof (state)\nthis:\n  Re (exp (\\<i> * complex_of_real x)) =\n  Re (complex_of_real (cos x) + \\<i> * complex_of_real (sin x))\n\ngoal (1 subgoal):\n 1. Im (exp (\\<i> * complex_of_real x)) =\n    Im (complex_of_real (cos x) + \\<i> * complex_of_real (sin x))", "show \"Im (exp (\\<i> * x)) = Im ((cos x) + \\<i> * (sin x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Im (exp (\\<i> * complex_of_real x)) =\n    Im (complex_of_real (cos x) + \\<i> * complex_of_real (sin x))", "using Im_exp"], ["proof (prove)\nusing this:\n  Im (exp ?z) = exp (Re ?z) * sin (Im ?z)\n\ngoal (1 subgoal):\n 1. Im (exp (\\<i> * complex_of_real x)) =\n    Im (complex_of_real (cos x) + \\<i> * complex_of_real (sin x))", "by simp"], ["proof (state)\nthis:\n  Im (exp (\\<i> * complex_of_real x)) =\n  Im (complex_of_real (cos x) + \\<i> * complex_of_real (sin x))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma exp_of_real_inv:\n  fixes x:: real\n  shows \"exp (-(\\<i> * x)) = cos x - \\<i> * (sin x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (- (\\<i> * complex_of_real x)) =\n    complex_of_real (cos x) - \\<i> * complex_of_real (sin x)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. Re (exp (- (\\<i> * complex_of_real x))) =\n    Re (complex_of_real (cos x) - \\<i> * complex_of_real (sin x))\n 2. Im (exp (- (\\<i> * complex_of_real x))) =\n    Im (complex_of_real (cos x) - \\<i> * complex_of_real (sin x))", "show \"Re (exp (-(\\<i> * x))) = Re ((cos x) - \\<i> * (sin x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re (exp (- (\\<i> * complex_of_real x))) =\n    Re (complex_of_real (cos x) - \\<i> * complex_of_real (sin x))", "using Re_exp"], ["proof (prove)\nusing this:\n  Re (exp ?z) = exp (Re ?z) * cos (Im ?z)\n\ngoal (1 subgoal):\n 1. Re (exp (- (\\<i> * complex_of_real x))) =\n    Re (complex_of_real (cos x) - \\<i> * complex_of_real (sin x))", "by simp"], ["proof (state)\nthis:\n  Re (exp (- (\\<i> * complex_of_real x))) =\n  Re (complex_of_real (cos x) - \\<i> * complex_of_real (sin x))\n\ngoal (1 subgoal):\n 1. Im (exp (- (\\<i> * complex_of_real x))) =\n    Im (complex_of_real (cos x) - \\<i> * complex_of_real (sin x))", "show \"Im (exp (-(\\<i> * x))) = Im ((cos x) - \\<i> * (sin x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Im (exp (- (\\<i> * complex_of_real x))) =\n    Im (complex_of_real (cos x) - \\<i> * complex_of_real (sin x))", "using Im_exp"], ["proof (prove)\nusing this:\n  Im (exp ?z) = exp (Re ?z) * sin (Im ?z)\n\ngoal (1 subgoal):\n 1. Im (exp (- (\\<i> * complex_of_real x))) =\n    Im (complex_of_real (cos x) - \\<i> * complex_of_real (sin x))", "by simp"], ["proof (state)\nthis:\n  Im (exp (- (\\<i> * complex_of_real x))) =\n  Im (complex_of_real (cos x) - \\<i> * complex_of_real (sin x))\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Basic Results with Trigonometric Functions.\\<close>"], ["", "subsubsection \\<open>Basic Inequalities\\<close>"], ["", "lemma sin_squared_le_one:\n  fixes x:: real\n  shows \"(sin x)\\<^sup>2 \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (sin x)\\<^sup>2 \\<le> 1", "using abs_sin_le_one abs_square_le_1"], ["proof (prove)\nusing this:\n  \\<bar>sin ?x\\<bar> \\<le> 1\n  (?x\\<^sup>2 \\<le> (1::?'a)) = (\\<bar>?x\\<bar> \\<le> (1::?'a))\n\ngoal (1 subgoal):\n 1. (sin x)\\<^sup>2 \\<le> 1", "by blast"], ["", "lemma cos_squared_le_one:\n  fixes x:: real\n  shows \"(cos x)\\<^sup>2 \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cos x)\\<^sup>2 \\<le> 1", "using abs_cos_le_one abs_square_le_1"], ["proof (prove)\nusing this:\n  \\<bar>cos ?x\\<bar> \\<le> 1\n  (?x\\<^sup>2 \\<le> (1::?'a)) = (\\<bar>?x\\<bar> \\<le> (1::?'a))\n\ngoal (1 subgoal):\n 1. (cos x)\\<^sup>2 \\<le> 1", "by blast"], ["", "subsubsection \\<open>Basic Equalities\\<close>"], ["", "lemma sin_of_quarter_pi:\n  fixes x:: real\n  assumes \"x = pi/2\"\n  shows \"sin (x/2) = (sqrt 2)/2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sin (x / 2) = sqrt 2 / 2", "by (auto simp add: assms sin_45)"], ["", "lemma cos_of_quarter_pi:\n  fixes x:: real\n  assumes \"x = pi/2\"\n  shows \"cos (x/2) = (sqrt 2)/2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cos (x / 2) = sqrt 2 / 2", "by (auto simp add: assms cos_45)"], ["", "end"]]}