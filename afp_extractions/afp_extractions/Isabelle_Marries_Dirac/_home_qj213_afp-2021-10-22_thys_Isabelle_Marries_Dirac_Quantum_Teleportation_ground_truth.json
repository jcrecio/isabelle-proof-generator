{"file_name": "/home/qj213/afp-2021-10-22/thys/Isabelle_Marries_Dirac/Quantum_Teleportation.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Isabelle_Marries_Dirac", "problem_names": ["lemma tensor_prod_of_cnot_id_1: \n  shows \"(CNOT \\<Otimes> Id 1) = M1\"", "lemma tensor_prod_of_h_id_2: \n  shows \"(H \\<Otimes> Id 2) = M2\"", "lemma alice_step_1_state [simp]:\n  assumes \"state 1 \\<phi>\"\n  shows \"state 3 (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)\"", "lemma alice_step_2_state:\n  assumes \"state 1 \\<phi>\"\n  shows \"state 3 ((CNOT \\<Otimes> Id 1) * (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>))\"", "lemma alice_state [simp]:\n  assumes \"state 1 \\<phi>\"\n  shows \"state 3 (alice \\<phi>) \"", "lemma alice_step_1:\n  assumes \"state 1 \\<phi>\" and \"\\<alpha> = \\<phi> $$ (0,0)\" and \"\\<beta> = \\<phi> $$ (1,0)\"\n  shows \"(\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>) = mat_of_cols_list 8 [[\\<alpha>/sqrt(2),0,0,\\<alpha>/sqrt(2),\\<beta>/sqrt(2),0,0,\\<beta>/sqrt(2)]]\"", "lemma alice_step_2:\n  assumes \"state 1 \\<phi>\" and \"\\<alpha> = \\<phi> $$ (0,0)\" and \"\\<beta> = \\<phi> $$ (1,0)\"\n  shows \"(CNOT \\<Otimes> Id 1) * (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>) = mat_of_cols_list 8 [[\\<alpha>/sqrt(2),0,0,\\<alpha>/sqrt(2),0,\\<beta>/sqrt(2),\\<beta>/sqrt(2),0]]\"", "lemma alice_result:\n  assumes \"state 1 \\<phi>\" and \"\\<alpha> = \\<phi> $$ (0,0)\" and \"\\<beta> = \\<phi> $$ (1,0)\"\n  shows \"alice \\<phi> = mat_of_cols_list 8 [[\\<alpha>/2, \\<beta>/2, \\<beta>/2, \\<alpha>/2, \\<alpha>/2, -\\<beta>/2, -\\<beta>/2, \\<alpha>/2]]\"", "lemma phi_vec_length:\n  assumes \"state 1 \\<phi>\"\n  shows \"cmod(\\<phi> $$ (0,0))^2 + cmod(\\<phi> $$ (Suc 0,0))^2 = 1\"", "lemma select_index_3_subsets [simp]: \n  shows \"{j::nat. select_index 3 0 j} = {4,5,6,7} \\<and>\n         {j::nat. j < 8 \\<and> \\<not> select_index 3 0 j} = {0,1,2,3} \\<and>\n         {j::nat. select_index 3 1 j} = {2,3,6,7} \\<and>\n         {j::nat. j < 8 \\<and> \\<not> select_index 3 1 j} = {0,1,4,5}\"", "lemma prob_index_0_alice:\n  assumes \"state 1 \\<phi>\"\n  shows \"prob0 3 (alice \\<phi>) 0 = 1/2 \\<and> prob1 3 (alice \\<phi>) 0 = 1/2\"", "lemma post_meas0_index_0_alice:\n  assumes \"state 1 \\<phi>\" and \"\\<alpha> = \\<phi> $$ (0,0)\" and \"\\<beta> = \\<phi> $$ (1,0)\"\n  shows \"post_meas0 3 (alice \\<phi>) 0 = \nmat_of_cols_list 8 [[\\<alpha>/sqrt(2), \\<beta>/sqrt(2), \\<beta>/sqrt(2), \\<alpha>/sqrt(2), 0, 0, 0, 0]]\"", "lemma post_meas1_index_0_alice:\n  assumes \"state 1 \\<phi>\" and \"\\<alpha> = \\<phi> $$ (0,0)\" and \"\\<beta> = \\<phi> $$ (1,0)\"\n  shows \"post_meas1 3 (alice \\<phi>) 0 = mat_of_cols_list 8 [[0,0,0,0,\\<alpha>/sqrt(2),-\\<beta>/sqrt(2),-\\<beta>/sqrt(2),\\<alpha>/sqrt(2)]]\"", "lemma post_meas0_index_0_alice_state [simp]:\n  assumes \"state 1 \\<phi>\"\n  shows \"state 3 (post_meas0 3 (alice \\<phi>) 0)\"", "lemma post_meas1_index_0_alice_state [simp]:\n  assumes \"state 1 \\<phi>\"\n  shows \"state 3 (post_meas1 3 (alice \\<phi>) 0)\"", "lemma Alice_case [simp]:\n  assumes \"state 1 \\<phi>\" and \"state 3 q\" and \"List.member (alice_meas \\<phi>) (p, q)\"\n  shows \"alice_pos \\<phi> q\"", "lemma alice_out_unique [simp]:\n  assumes \"state 1 \\<phi>\"\n  shows \"Matrix.mat 8 (Suc 0) (\\<lambda>(i,j). [[0, 0, \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0), 0, 0, 0, 0]]!j!i) \\<noteq>\n         Matrix.mat 8 (Suc 0) (\\<lambda>(i,j). [[\\<phi> $$ (0, 0), \\<phi> $$ (Suc 0, 0), 0, 0, 0, 0, 0, 0]]!j!i) \\<and> \n         Matrix.mat 8 (Suc 0) (\\<lambda>(i,j). [[0, 0, 0, 0, \\<phi> $$ (0, 0), -\\<phi> $$ (Suc 0, 0), 0, 0]]!j!i) \\<noteq>\n         Matrix.mat 8 (Suc 0) (\\<lambda>(i,j). [[\\<phi> $$ (0, 0), \\<phi> $$ (Suc 0, 0), 0, 0, 0, 0, 0, 0]]!j!i) \\<and> \n         Matrix.mat 8 (Suc 0) (\\<lambda>(i,j). [[0, 0, 0, 0, 0, 0, -\\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0)]]!j!i) \\<noteq>\n         Matrix.mat 8 (Suc 0) (\\<lambda>(i,j). [[\\<phi> $$ (0, 0), \\<phi> $$ (Suc 0, 0), 0, 0, 0, 0, 0, 0]]!j!i) \\<and> \n         Matrix.mat 8 (Suc 0) (\\<lambda>(i,j). [[0, 0, 0, 0, \\<phi> $$ (0, 0), -\\<phi> $$ (Suc 0, 0), 0, 0]]!j!i) \\<noteq>\n         Matrix.mat 8 (Suc 0) (\\<lambda>(i,j). [[0, 0, \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0), 0, 0, 0, 0]]!j!i) \\<and> \n         Matrix.mat 8 (Suc 0) (\\<lambda>(i,j). [[0, 0, 0, 0, 0, 0, -\\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0)]]!j!i) \\<noteq>\n         Matrix.mat 8 (Suc 0) (\\<lambda>(i,j). [[0, 0, \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0), 0, 0, 0, 0]]!j!i) \\<and> \n         Matrix.mat 8 (Suc 0) (\\<lambda>(i,j). [[0, 0, 0, 0, 0, 0, -\\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0)]]!j!i) \\<noteq>\n         Matrix.mat 8 (Suc 0) (\\<lambda>(i,j). [[0, 0, 0, 0, \\<phi> $$ (0, 0), -\\<phi> $$ (Suc 0, 0), 0, 0]]!j!i)\"", "lemma tensor_prod_of_id_2_x:\n  shows \"(Id 2 \\<Otimes> X) = M3\"", "lemma l_inv_of_ZX:\n  shows \"ZX\\<^sup>\\<dagger> * ZX = 1\\<^sub>m 2\"", "lemma r_inv_of_ZX:\n  shows \"ZX * (ZX\\<^sup>\\<dagger>) = 1\\<^sub>m 2\"", "lemma ZX_is_gate [simp]:\n  shows \"gate 1 ZX\"", "lemma prod_of_ZX:\n  shows \"Z * X = ZX\"", "lemma tensor_prod_of_id_2_y:\n  shows \"(Id 2 \\<Otimes> Z * X) = M4\"", "lemma tensor_prod_of_id_2_z:\n  shows \"(Id 2 \\<Otimes> Z) = M5\"", "lemma teleportation:\n  assumes \"state 1 \\<phi>\" and \"state 3 q\" and \"List.member (alice_meas \\<phi>) (p, q)\"\n  shows \"\\<exists>r. state 2 r \\<and> bob q (alice_out \\<phi> q) = r \\<Otimes> \\<phi>\""], "translations": [["", "lemma tensor_prod_of_cnot_id_1: \n  shows \"(CNOT \\<Otimes> Id 1) = M1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CNOT \\<Otimes> Quantum.Id 1 = M1", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M1; j < dim_col M1\\<rbrakk>\n       \\<Longrightarrow> (CNOT \\<Otimes> Quantum.Id 1) $$ (i, j) =\n                         M1 $$ (i, j)\n 2. dim_row (CNOT \\<Otimes> Quantum.Id 1) = dim_row M1\n 3. dim_col (CNOT \\<Otimes> Quantum.Id 1) = dim_col M1", "show \"dim_col (CNOT \\<Otimes> Id 1) = dim_col M1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col (CNOT \\<Otimes> Quantum.Id 1) = dim_col M1", "by(simp add: CNOT_def Id_def mat_of_cols_list_def)"], ["proof (state)\nthis:\n  dim_col (CNOT \\<Otimes> Quantum.Id 1) = dim_col M1\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M1; j < dim_col M1\\<rbrakk>\n       \\<Longrightarrow> (CNOT \\<Otimes> Quantum.Id 1) $$ (i, j) =\n                         M1 $$ (i, j)\n 2. dim_row (CNOT \\<Otimes> Quantum.Id 1) = dim_row M1", "show \"dim_row (CNOT \\<Otimes> Id 1) = dim_row M1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row (CNOT \\<Otimes> Quantum.Id 1) = dim_row M1", "by(simp add: CNOT_def Id_def  mat_of_cols_list_def)"], ["proof (state)\nthis:\n  dim_row (CNOT \\<Otimes> Quantum.Id 1) = dim_row M1\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M1; j < dim_col M1\\<rbrakk>\n       \\<Longrightarrow> (CNOT \\<Otimes> Quantum.Id 1) $$ (i, j) =\n                         M1 $$ (i, j)", "fix i j::nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M1; j < dim_col M1\\<rbrakk>\n       \\<Longrightarrow> (CNOT \\<Otimes> Quantum.Id 1) $$ (i, j) =\n                         M1 $$ (i, j)", "assume \"i < dim_row M1\" and \"j < dim_col M1\""], ["proof (state)\nthis:\n  i < dim_row M1\n  j < dim_col M1\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M1; j < dim_col M1\\<rbrakk>\n       \\<Longrightarrow> (CNOT \\<Otimes> Quantum.Id 1) $$ (i, j) =\n                         M1 $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i < dim_row M1\n  j < dim_col M1", "have \"i \\<in> {0..<8} \\<and> j \\<in> {0..<8}\""], ["proof (prove)\nusing this:\n  i < dim_row M1\n  j < dim_col M1\n\ngoal (1 subgoal):\n 1. i \\<in> {0..<8} \\<and> j \\<in> {0..<8}", "by (auto simp add:  mat_of_cols_list_def)"], ["proof (state)\nthis:\n  i \\<in> {0..<8} \\<and> j \\<in> {0..<8}\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M1; j < dim_col M1\\<rbrakk>\n       \\<Longrightarrow> (CNOT \\<Otimes> Quantum.Id 1) $$ (i, j) =\n                         M1 $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i \\<in> {0..<8} \\<and> j \\<in> {0..<8}", "show \"(CNOT \\<Otimes> Id 1) $$ (i, j) = M1 $$ (i, j)\""], ["proof (prove)\nusing this:\n  i \\<in> {0..<8} \\<and> j \\<in> {0..<8}\n\ngoal (1 subgoal):\n 1. (CNOT \\<Otimes> Quantum.Id 1) $$ (i, j) = M1 $$ (i, j)", "by (auto simp add: Id_def CNOT_def mat_of_cols_list_def)"], ["proof (state)\nthis:\n  (CNOT \\<Otimes> Quantum.Id 1) $$ (i, j) = M1 $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["", "abbreviation M2:: \"complex Matrix.mat\" where\n\"M2 \\<equiv> mat_of_cols_list 8 [[1/sqrt(2), 0, 0, 0, 1/sqrt(2), 0, 0, 0],\n                          [0, 1/sqrt(2), 0, 0, 0, 1/sqrt(2), 0, 0],\n                          [0, 0, 1/sqrt(2), 0, 0, 0, 1/sqrt(2), 0],\n                          [0, 0, 0, 1/sqrt(2), 0, 0, 0, 1/sqrt(2)],\n                          [1/sqrt(2), 0, 0, 0, -1/sqrt(2), 0, 0, 0],\n                          [0, 1/sqrt(2), 0, 0, 0, -1/sqrt(2), 0, 0],\n                          [0, 0, 1/sqrt(2), 0, 0, 0, -1/sqrt(2), 0],\n                          [0, 0, 0, 1/sqrt(2), 0, 0, 0, -1/sqrt(2)]]\""], ["", "lemma tensor_prod_of_h_id_2: \n  shows \"(H \\<Otimes> Id 2) = M2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<Otimes> Quantum.Id 2 =\n    Tensor.mat_of_cols_list 8\n     (map (map complex_of_real)\n       [[1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0, 0],\n        [0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0],\n        [0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0],\n        [0, 0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2],\n        [1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0, 0],\n        [0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0],\n        [0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0],\n        [0, 0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2]])", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       (map (map complex_of_real)\n                         [[1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0, 0],\n                          [0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0],\n                          [0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0],\n                          [0, 0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2],\n                          [1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0, 0],\n                          [0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0],\n                          [0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0],\n                          [0, 0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2]]));\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               (map (map complex_of_real)\n                 [[1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0, 0],\n                  [0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0],\n                  [0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0],\n                  [0, 0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2],\n                  [1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0, 0],\n                  [0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0],\n                  [0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0],\n                  [0, 0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2]]))\\<rbrakk>\n       \\<Longrightarrow> (H \\<Otimes> Quantum.Id 2) $$ (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          (map (map complex_of_real)\n                            [[1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0, 0],\n                             [0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0],\n                             [0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0],\n                             [0, 0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2],\n                             [1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0, 0],\n                             [0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0],\n                             [0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0],\n                             [0, 0, 0, 1 / sqrt 2, 0, 0, 0,\n                              - 1 / sqrt 2]]) $$\n                         (i, j)\n 2. dim_row (H \\<Otimes> Quantum.Id 2) =\n    dim_row\n     (Tensor.mat_of_cols_list 8\n       (map (map complex_of_real)\n         [[1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0, 0],\n          [0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0],\n          [0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0],\n          [0, 0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2],\n          [1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0, 0],\n          [0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0],\n          [0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0],\n          [0, 0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2]]))\n 3. dim_col (H \\<Otimes> Quantum.Id 2) =\n    dim_col\n     (Tensor.mat_of_cols_list 8\n       (map (map complex_of_real)\n         [[1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0, 0],\n          [0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0],\n          [0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0],\n          [0, 0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2],\n          [1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0, 0],\n          [0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0],\n          [0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0],\n          [0, 0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2]]))", "show \"dim_col (H \\<Otimes> Id 2) = dim_col M2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col (H \\<Otimes> Quantum.Id 2) =\n    dim_col\n     (Tensor.mat_of_cols_list 8\n       (map (map complex_of_real)\n         [[1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0, 0],\n          [0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0],\n          [0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0],\n          [0, 0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2],\n          [1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0, 0],\n          [0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0],\n          [0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0],\n          [0, 0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2]]))", "by(simp add: H_def Id_def mat_of_cols_list_def)"], ["proof (state)\nthis:\n  dim_col (H \\<Otimes> Quantum.Id 2) =\n  dim_col\n   (Tensor.mat_of_cols_list 8\n     (map (map complex_of_real)\n       [[1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0, 0],\n        [0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0],\n        [0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0],\n        [0, 0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2],\n        [1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0, 0],\n        [0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0],\n        [0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0],\n        [0, 0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2]]))\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       (map (map complex_of_real)\n                         [[1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0, 0],\n                          [0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0],\n                          [0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0],\n                          [0, 0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2],\n                          [1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0, 0],\n                          [0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0],\n                          [0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0],\n                          [0, 0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2]]));\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               (map (map complex_of_real)\n                 [[1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0, 0],\n                  [0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0],\n                  [0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0],\n                  [0, 0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2],\n                  [1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0, 0],\n                  [0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0],\n                  [0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0],\n                  [0, 0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2]]))\\<rbrakk>\n       \\<Longrightarrow> (H \\<Otimes> Quantum.Id 2) $$ (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          (map (map complex_of_real)\n                            [[1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0, 0],\n                             [0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0],\n                             [0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0],\n                             [0, 0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2],\n                             [1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0, 0],\n                             [0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0],\n                             [0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0],\n                             [0, 0, 0, 1 / sqrt 2, 0, 0, 0,\n                              - 1 / sqrt 2]]) $$\n                         (i, j)\n 2. dim_row (H \\<Otimes> Quantum.Id 2) =\n    dim_row\n     (Tensor.mat_of_cols_list 8\n       (map (map complex_of_real)\n         [[1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0, 0],\n          [0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0],\n          [0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0],\n          [0, 0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2],\n          [1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0, 0],\n          [0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0],\n          [0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0],\n          [0, 0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2]]))", "show \"dim_row (H \\<Otimes> Id 2) = dim_row M2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row (H \\<Otimes> Quantum.Id 2) =\n    dim_row\n     (Tensor.mat_of_cols_list 8\n       (map (map complex_of_real)\n         [[1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0, 0],\n          [0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0],\n          [0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0],\n          [0, 0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2],\n          [1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0, 0],\n          [0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0],\n          [0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0],\n          [0, 0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2]]))", "by(simp add: H_def Id_def mat_of_cols_list_def)"], ["proof (state)\nthis:\n  dim_row (H \\<Otimes> Quantum.Id 2) =\n  dim_row\n   (Tensor.mat_of_cols_list 8\n     (map (map complex_of_real)\n       [[1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0, 0],\n        [0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0],\n        [0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0],\n        [0, 0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2],\n        [1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0, 0],\n        [0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0],\n        [0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0],\n        [0, 0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2]]))\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       (map (map complex_of_real)\n                         [[1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0, 0],\n                          [0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0],\n                          [0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0],\n                          [0, 0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2],\n                          [1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0, 0],\n                          [0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0],\n                          [0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0],\n                          [0, 0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2]]));\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               (map (map complex_of_real)\n                 [[1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0, 0],\n                  [0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0],\n                  [0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0],\n                  [0, 0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2],\n                  [1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0, 0],\n                  [0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0],\n                  [0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0],\n                  [0, 0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2]]))\\<rbrakk>\n       \\<Longrightarrow> (H \\<Otimes> Quantum.Id 2) $$ (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          (map (map complex_of_real)\n                            [[1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0, 0],\n                             [0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0],\n                             [0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0],\n                             [0, 0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2],\n                             [1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0, 0],\n                             [0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0],\n                             [0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0],\n                             [0, 0, 0, 1 / sqrt 2, 0, 0, 0,\n                              - 1 / sqrt 2]]) $$\n                         (i, j)", "fix i j::nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       (map (map complex_of_real)\n                         [[1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0, 0],\n                          [0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0],\n                          [0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0],\n                          [0, 0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2],\n                          [1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0, 0],\n                          [0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0],\n                          [0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0],\n                          [0, 0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2]]));\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               (map (map complex_of_real)\n                 [[1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0, 0],\n                  [0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0],\n                  [0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0],\n                  [0, 0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2],\n                  [1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0, 0],\n                  [0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0],\n                  [0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0],\n                  [0, 0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2]]))\\<rbrakk>\n       \\<Longrightarrow> (H \\<Otimes> Quantum.Id 2) $$ (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          (map (map complex_of_real)\n                            [[1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0, 0],\n                             [0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0],\n                             [0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0],\n                             [0, 0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2],\n                             [1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0, 0],\n                             [0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0],\n                             [0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0],\n                             [0, 0, 0, 1 / sqrt 2, 0, 0, 0,\n                              - 1 / sqrt 2]]) $$\n                         (i, j)", "assume \"i < dim_row M2\" and \"j < dim_col M2\""], ["proof (state)\nthis:\n  i < dim_row\n       (Tensor.mat_of_cols_list 8\n         (map (map complex_of_real)\n           [[1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0, 0],\n            [0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0],\n            [0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0],\n            [0, 0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2],\n            [1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0, 0],\n            [0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0],\n            [0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0],\n            [0, 0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2]]))\n  j < dim_col\n       (Tensor.mat_of_cols_list 8\n         (map (map complex_of_real)\n           [[1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0, 0],\n            [0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0],\n            [0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0],\n            [0, 0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2],\n            [1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0, 0],\n            [0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0],\n            [0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0],\n            [0, 0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2]]))\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       (map (map complex_of_real)\n                         [[1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0, 0],\n                          [0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0],\n                          [0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0],\n                          [0, 0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2],\n                          [1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0, 0],\n                          [0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0],\n                          [0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0],\n                          [0, 0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2]]));\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               (map (map complex_of_real)\n                 [[1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0, 0],\n                  [0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0],\n                  [0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0],\n                  [0, 0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2],\n                  [1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0, 0],\n                  [0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0],\n                  [0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0],\n                  [0, 0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2]]))\\<rbrakk>\n       \\<Longrightarrow> (H \\<Otimes> Quantum.Id 2) $$ (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          (map (map complex_of_real)\n                            [[1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0, 0],\n                             [0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0],\n                             [0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0],\n                             [0, 0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2],\n                             [1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0, 0],\n                             [0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0],\n                             [0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0],\n                             [0, 0, 0, 1 / sqrt 2, 0, 0, 0,\n                              - 1 / sqrt 2]]) $$\n                         (i, j)", "then"], ["proof (chain)\npicking this:\n  i < dim_row\n       (Tensor.mat_of_cols_list 8\n         (map (map complex_of_real)\n           [[1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0, 0],\n            [0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0],\n            [0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0],\n            [0, 0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2],\n            [1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0, 0],\n            [0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0],\n            [0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0],\n            [0, 0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2]]))\n  j < dim_col\n       (Tensor.mat_of_cols_list 8\n         (map (map complex_of_real)\n           [[1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0, 0],\n            [0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0],\n            [0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0],\n            [0, 0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2],\n            [1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0, 0],\n            [0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0],\n            [0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0],\n            [0, 0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2]]))", "have \"i \\<in> {0..<8} \\<and> j \\<in> {0..<8}\""], ["proof (prove)\nusing this:\n  i < dim_row\n       (Tensor.mat_of_cols_list 8\n         (map (map complex_of_real)\n           [[1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0, 0],\n            [0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0],\n            [0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0],\n            [0, 0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2],\n            [1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0, 0],\n            [0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0],\n            [0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0],\n            [0, 0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2]]))\n  j < dim_col\n       (Tensor.mat_of_cols_list 8\n         (map (map complex_of_real)\n           [[1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0, 0],\n            [0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0],\n            [0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0],\n            [0, 0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2],\n            [1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0, 0],\n            [0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0],\n            [0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0],\n            [0, 0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2]]))\n\ngoal (1 subgoal):\n 1. i \\<in> {0..<8} \\<and> j \\<in> {0..<8}", "by (auto simp add:  mat_of_cols_list_def)"], ["proof (state)\nthis:\n  i \\<in> {0..<8} \\<and> j \\<in> {0..<8}\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       (map (map complex_of_real)\n                         [[1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0, 0],\n                          [0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0],\n                          [0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0],\n                          [0, 0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2],\n                          [1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0, 0],\n                          [0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0],\n                          [0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0],\n                          [0, 0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2]]));\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               (map (map complex_of_real)\n                 [[1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0, 0],\n                  [0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0],\n                  [0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0],\n                  [0, 0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2],\n                  [1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0, 0],\n                  [0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0],\n                  [0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0],\n                  [0, 0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2]]))\\<rbrakk>\n       \\<Longrightarrow> (H \\<Otimes> Quantum.Id 2) $$ (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          (map (map complex_of_real)\n                            [[1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0, 0],\n                             [0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0],\n                             [0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0],\n                             [0, 0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2],\n                             [1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0, 0],\n                             [0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0],\n                             [0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0],\n                             [0, 0, 0, 1 / sqrt 2, 0, 0, 0,\n                              - 1 / sqrt 2]]) $$\n                         (i, j)", "then"], ["proof (chain)\npicking this:\n  i \\<in> {0..<8} \\<and> j \\<in> {0..<8}", "show \"(H \\<Otimes> Id 2) $$ (i, j) = M2 $$ (i, j)\""], ["proof (prove)\nusing this:\n  i \\<in> {0..<8} \\<and> j \\<in> {0..<8}\n\ngoal (1 subgoal):\n 1. (H \\<Otimes> Quantum.Id 2) $$ (i, j) =\n    Tensor.mat_of_cols_list 8\n     (map (map complex_of_real)\n       [[1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0, 0],\n        [0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0],\n        [0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0],\n        [0, 0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2],\n        [1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0, 0],\n        [0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0],\n        [0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0],\n        [0, 0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2]]) $$\n    (i, j)", "by (auto simp add: Id_def H_def mat_of_cols_list_def)"], ["proof (state)\nthis:\n  (H \\<Otimes> Quantum.Id 2) $$ (i, j) =\n  Tensor.mat_of_cols_list 8\n   (map (map complex_of_real)\n     [[1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0, 0],\n      [0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0],\n      [0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0],\n      [0, 0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2],\n      [1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0, 0],\n      [0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0],\n      [0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0],\n      [0, 0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2]]) $$\n  (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma alice_step_1_state [simp]:\n  assumes \"state 1 \\<phi>\"\n  shows \"state 3 (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. state 3 (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)", "using assms bell00_is_state tensor_state"], ["proof (prove)\nusing this:\n  state 1 \\<phi>\n  state 2 |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>\n  \\<lbrakk>state ?m ?u; state ?n ?v\\<rbrakk>\n  \\<Longrightarrow> state (?m + ?n) (?u \\<Otimes> ?v)\n\ngoal (1 subgoal):\n 1. state 3 (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)", "by(metis One_nat_def Suc_1 numeral_3_eq_3 plus_1_eq_Suc)"], ["", "lemma alice_step_2_state:\n  assumes \"state 1 \\<phi>\"\n  shows \"state 3 ((CNOT \\<Otimes> Id 1) * (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. state 3\n     ((CNOT \\<Otimes> Quantum.Id 1) *\n      (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. state 3\n     ((CNOT \\<Otimes> Quantum.Id 1) *\n      (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>))", "have \"gate 3 (CNOT \\<Otimes> Id 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gate 3 (CNOT \\<Otimes> Quantum.Id 1)", "using CNOT_is_gate id_is_gate tensor_gate"], ["proof (prove)\nusing this:\n  gate 2 CNOT\n  gate ?n (Quantum.Id ?n)\n  \\<lbrakk>gate ?m ?G1.0; gate ?n ?G2.0\\<rbrakk>\n  \\<Longrightarrow> gate (?m + ?n) (?G1.0 \\<Otimes> ?G2.0)\n\ngoal (1 subgoal):\n 1. gate 3 (CNOT \\<Otimes> Quantum.Id 1)", "by (metis numeral_plus_one semiring_norm(5))"], ["proof (state)\nthis:\n  gate 3 (CNOT \\<Otimes> Quantum.Id 1)\n\ngoal (1 subgoal):\n 1. state 3\n     ((CNOT \\<Otimes> Quantum.Id 1) *\n      (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>))", "then"], ["proof (chain)\npicking this:\n  gate 3 (CNOT \\<Otimes> Quantum.Id 1)", "show \"state 3 ((CNOT \\<Otimes> Id 1) * (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>))\""], ["proof (prove)\nusing this:\n  gate 3 (CNOT \\<Otimes> Quantum.Id 1)\n\ngoal (1 subgoal):\n 1. state 3\n     ((CNOT \\<Otimes> Quantum.Id 1) *\n      (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>))", "using assms"], ["proof (prove)\nusing this:\n  gate 3 (CNOT \\<Otimes> Quantum.Id 1)\n  state 1 \\<phi>\n\ngoal (1 subgoal):\n 1. state 3\n     ((CNOT \\<Otimes> Quantum.Id 1) *\n      (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>))", "by simp"], ["proof (state)\nthis:\n  state 3\n   ((CNOT \\<Otimes> Quantum.Id 1) *\n    (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma alice_state [simp]:\n  assumes \"state 1 \\<phi>\"\n  shows \"state 3 (alice \\<phi>) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. state 3 (alice \\<phi>)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. state 3 (alice \\<phi>)", "have \"gate 3 (H \\<Otimes> Id 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gate 3 (H \\<Otimes> Quantum.Id 2)", "using tensor_gate id_is_gate H_is_gate"], ["proof (prove)\nusing this:\n  \\<lbrakk>gate ?m ?G1.0; gate ?n ?G2.0\\<rbrakk>\n  \\<Longrightarrow> gate (?m + ?n) (?G1.0 \\<Otimes> ?G2.0)\n  gate ?n (Quantum.Id ?n)\n  gate 1 H\n\ngoal (1 subgoal):\n 1. gate 3 (H \\<Otimes> Quantum.Id 2)", "by(metis eval_nat_numeral(3) plus_1_eq_Suc)"], ["proof (state)\nthis:\n  gate 3 (H \\<Otimes> Quantum.Id 2)\n\ngoal (1 subgoal):\n 1. state 3 (alice \\<phi>)", "then"], ["proof (chain)\npicking this:\n  gate 3 (H \\<Otimes> Quantum.Id 2)", "show ?thesis"], ["proof (prove)\nusing this:\n  gate 3 (H \\<Otimes> Quantum.Id 2)\n\ngoal (1 subgoal):\n 1. state 3 (alice \\<phi>)", "using assms alice_step_2_state"], ["proof (prove)\nusing this:\n  gate 3 (H \\<Otimes> Quantum.Id 2)\n  state 1 \\<phi>\n  state 1 ?\\<phi> \\<Longrightarrow>\n  state 3\n   ((CNOT \\<Otimes> Quantum.Id 1) *\n    (?\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>))\n\ngoal (1 subgoal):\n 1. state 3 (alice \\<phi>)", "by(simp add: alice_def)"], ["proof (state)\nthis:\n  state 3 (alice \\<phi>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma alice_step_1:\n  assumes \"state 1 \\<phi>\" and \"\\<alpha> = \\<phi> $$ (0,0)\" and \"\\<beta> = \\<phi> $$ (1,0)\"\n  shows \"(\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>) = mat_of_cols_list 8 [[\\<alpha>/sqrt(2),0,0,\\<alpha>/sqrt(2),\\<beta>/sqrt(2),0,0,\\<beta>/sqrt(2)]]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle> =\n    Tensor.mat_of_cols_list 8\n     [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n       \\<alpha> / complex_of_real (sqrt 2),\n       \\<beta> / complex_of_real (sqrt 2), 0, 0,\n       \\<beta> / complex_of_real (sqrt 2)]]", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n                         \\<alpha> / complex_of_real (sqrt 2),\n                         \\<beta> / complex_of_real (sqrt 2), 0, 0,\n                         \\<beta> / complex_of_real (sqrt 2)]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n                 \\<alpha> / complex_of_real (sqrt 2),\n                 \\<beta> / complex_of_real (sqrt 2), 0, 0,\n                 \\<beta> / complex_of_real (sqrt 2)]])\\<rbrakk>\n       \\<Longrightarrow> (\\<phi> \\<Otimes>\n                          |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>) $$\n                         (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n                            \\<alpha> / complex_of_real (sqrt 2),\n                            \\<beta> / complex_of_real (sqrt 2), 0, 0,\n                            \\<beta> / complex_of_real (sqrt 2)]] $$\n                         (i, j)\n 2. dim_row (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>) =\n    dim_row\n     (Tensor.mat_of_cols_list 8\n       [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n         \\<alpha> / complex_of_real (sqrt 2),\n         \\<beta> / complex_of_real (sqrt 2), 0, 0,\n         \\<beta> / complex_of_real (sqrt 2)]])\n 3. dim_col (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>) =\n    dim_col\n     (Tensor.mat_of_cols_list 8\n       [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n         \\<alpha> / complex_of_real (sqrt 2),\n         \\<beta> / complex_of_real (sqrt 2), 0, 0,\n         \\<beta> / complex_of_real (sqrt 2)]])", "define v where asm:\"v = mat_of_cols_list 8 [[\\<alpha>/sqrt(2),0,0,\\<alpha>/sqrt(2),\\<beta>/sqrt(2),0,0,\\<beta>/sqrt(2)]]\""], ["proof (state)\nthis:\n  v =\n  Tensor.mat_of_cols_list 8\n   [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n     \\<alpha> / complex_of_real (sqrt 2),\n     \\<beta> / complex_of_real (sqrt 2), 0, 0,\n     \\<beta> / complex_of_real (sqrt 2)]]\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n                         \\<alpha> / complex_of_real (sqrt 2),\n                         \\<beta> / complex_of_real (sqrt 2), 0, 0,\n                         \\<beta> / complex_of_real (sqrt 2)]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n                 \\<alpha> / complex_of_real (sqrt 2),\n                 \\<beta> / complex_of_real (sqrt 2), 0, 0,\n                 \\<beta> / complex_of_real (sqrt 2)]])\\<rbrakk>\n       \\<Longrightarrow> (\\<phi> \\<Otimes>\n                          |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>) $$\n                         (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n                            \\<alpha> / complex_of_real (sqrt 2),\n                            \\<beta> / complex_of_real (sqrt 2), 0, 0,\n                            \\<beta> / complex_of_real (sqrt 2)]] $$\n                         (i, j)\n 2. dim_row (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>) =\n    dim_row\n     (Tensor.mat_of_cols_list 8\n       [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n         \\<alpha> / complex_of_real (sqrt 2),\n         \\<beta> / complex_of_real (sqrt 2), 0, 0,\n         \\<beta> / complex_of_real (sqrt 2)]])\n 3. dim_col (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>) =\n    dim_col\n     (Tensor.mat_of_cols_list 8\n       [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n         \\<alpha> / complex_of_real (sqrt 2),\n         \\<beta> / complex_of_real (sqrt 2), 0, 0,\n         \\<beta> / complex_of_real (sqrt 2)]])", "then"], ["proof (chain)\npicking this:\n  v =\n  Tensor.mat_of_cols_list 8\n   [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n     \\<alpha> / complex_of_real (sqrt 2),\n     \\<beta> / complex_of_real (sqrt 2), 0, 0,\n     \\<beta> / complex_of_real (sqrt 2)]]", "show \"dim_row (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>) = dim_row v\""], ["proof (prove)\nusing this:\n  v =\n  Tensor.mat_of_cols_list 8\n   [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n     \\<alpha> / complex_of_real (sqrt 2),\n     \\<beta> / complex_of_real (sqrt 2), 0, 0,\n     \\<beta> / complex_of_real (sqrt 2)]]\n\ngoal (1 subgoal):\n 1. dim_row (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>) = dim_row v", "using assms(1) alice_step_1_state state.dim_row mat_of_cols_list_def"], ["proof (prove)\nusing this:\n  v =\n  Tensor.mat_of_cols_list 8\n   [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n     \\<alpha> / complex_of_real (sqrt 2),\n     \\<beta> / complex_of_real (sqrt 2), 0, 0,\n     \\<beta> / complex_of_real (sqrt 2)]]\n  state 1 \\<phi>\n  state 1 ?\\<phi> \\<Longrightarrow>\n  state 3 (?\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)\n  state ?n ?v \\<Longrightarrow> dim_row ?v = 2 ^ ?n\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n\ngoal (1 subgoal):\n 1. dim_row (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>) = dim_row v", "by fastforce"], ["proof (state)\nthis:\n  dim_row (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>) = dim_row v\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n                         \\<alpha> / complex_of_real (sqrt 2),\n                         \\<beta> / complex_of_real (sqrt 2), 0, 0,\n                         \\<beta> / complex_of_real (sqrt 2)]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n                 \\<alpha> / complex_of_real (sqrt 2),\n                 \\<beta> / complex_of_real (sqrt 2), 0, 0,\n                 \\<beta> / complex_of_real (sqrt 2)]])\\<rbrakk>\n       \\<Longrightarrow> (\\<phi> \\<Otimes>\n                          |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>) $$\n                         (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n                            \\<alpha> / complex_of_real (sqrt 2),\n                            \\<beta> / complex_of_real (sqrt 2), 0, 0,\n                            \\<beta> / complex_of_real (sqrt 2)]] $$\n                         (i, j)\n 2. dim_col (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>) =\n    dim_col\n     (Tensor.mat_of_cols_list 8\n       [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n         \\<alpha> / complex_of_real (sqrt 2),\n         \\<beta> / complex_of_real (sqrt 2), 0, 0,\n         \\<beta> / complex_of_real (sqrt 2)]])", "show \"dim_col (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>) = dim_col v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>) = dim_col v", "using assms(1) alice_step_1_state state.is_column asm mat_of_cols_list_def"], ["proof (prove)\nusing this:\n  state 1 \\<phi>\n  state 1 ?\\<phi> \\<Longrightarrow>\n  state 3 (?\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)\n  state ?n ?v \\<Longrightarrow> dim_col ?v = 1\n  v =\n  Tensor.mat_of_cols_list 8\n   [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n     \\<alpha> / complex_of_real (sqrt 2),\n     \\<beta> / complex_of_real (sqrt 2), 0, 0,\n     \\<beta> / complex_of_real (sqrt 2)]]\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n\ngoal (1 subgoal):\n 1. dim_col (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>) = dim_col v", "by fastforce"], ["proof (state)\nthis:\n  dim_col (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>) = dim_col v\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n                         \\<alpha> / complex_of_real (sqrt 2),\n                         \\<beta> / complex_of_real (sqrt 2), 0, 0,\n                         \\<beta> / complex_of_real (sqrt 2)]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n                 \\<alpha> / complex_of_real (sqrt 2),\n                 \\<beta> / complex_of_real (sqrt 2), 0, 0,\n                 \\<beta> / complex_of_real (sqrt 2)]])\\<rbrakk>\n       \\<Longrightarrow> (\\<phi> \\<Otimes>\n                          |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>) $$\n                         (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n                            \\<alpha> / complex_of_real (sqrt 2),\n                            \\<beta> / complex_of_real (sqrt 2), 0, 0,\n                            \\<beta> / complex_of_real (sqrt 2)]] $$\n                         (i, j)", "show \"\\<And>i j. i < dim_row v \\<Longrightarrow> j < dim_col v \\<Longrightarrow> (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>) $$ (i,j) = v $$ (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> (\\<phi> \\<Otimes>\n                          |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>) $$\n                         (i, j) =\n                         v $$ (i, j)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> (\\<phi> \\<Otimes>\n                          |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>) $$\n                         (i, j) =\n                         v $$ (i, j)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> (\\<phi> \\<Otimes>\n                          |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>) $$\n                         (i, j) =\n                         v $$ (i, j)", "assume \"i < dim_row v\" and \"j < dim_col v\""], ["proof (state)\nthis:\n  i < dim_row v\n  j < dim_col v\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> (\\<phi> \\<Otimes>\n                          |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>) $$\n                         (i, j) =\n                         v $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i < dim_row v\n  j < dim_col v", "have \"i \\<in> {0..<8} \\<and> j = 0\""], ["proof (prove)\nusing this:\n  i < dim_row v\n  j < dim_col v\n\ngoal (1 subgoal):\n 1. i \\<in> {0..<8} \\<and> j = 0", "using asm"], ["proof (prove)\nusing this:\n  i < dim_row v\n  j < dim_col v\n  v =\n  Tensor.mat_of_cols_list 8\n   [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n     \\<alpha> / complex_of_real (sqrt 2),\n     \\<beta> / complex_of_real (sqrt 2), 0, 0,\n     \\<beta> / complex_of_real (sqrt 2)]]\n\ngoal (1 subgoal):\n 1. i \\<in> {0..<8} \\<and> j = 0", "by (auto simp add: mat_of_cols_list_def)"], ["proof (state)\nthis:\n  i \\<in> {0..<8} \\<and> j = 0\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> (\\<phi> \\<Otimes>\n                          |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>) $$\n                         (i, j) =\n                         v $$ (i, j)", "moreover"], ["proof (state)\nthis:\n  i \\<in> {0..<8} \\<and> j = 0\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> (\\<phi> \\<Otimes>\n                          |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>) $$\n                         (i, j) =\n                         v $$ (i, j)", "have \"dim_row |\\<beta>\\<^sub>0\\<^sub>0\\<rangle> = 4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row |\\<beta>\\<^sub>0\\<^sub>0\\<rangle> = 4", "using bell00_is_state state_def"], ["proof (prove)\nusing this:\n  state 2 |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n\ngoal (1 subgoal):\n 1. dim_row |\\<beta>\\<^sub>0\\<^sub>0\\<rangle> = 4", "by simp"], ["proof (state)\nthis:\n  dim_row |\\<beta>\\<^sub>0\\<^sub>0\\<rangle> = 4\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> (\\<phi> \\<Otimes>\n                          |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>) $$\n                         (i, j) =\n                         v $$ (i, j)", "moreover"], ["proof (state)\nthis:\n  dim_row |\\<beta>\\<^sub>0\\<^sub>0\\<rangle> = 4\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> (\\<phi> \\<Otimes>\n                          |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>) $$\n                         (i, j) =\n                         v $$ (i, j)", "have \"dim_col |\\<beta>\\<^sub>0\\<^sub>0\\<rangle> = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col |\\<beta>\\<^sub>0\\<^sub>0\\<rangle> = 1", "using bell00_is_state state_def"], ["proof (prove)\nusing this:\n  state 2 |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n\ngoal (1 subgoal):\n 1. dim_col |\\<beta>\\<^sub>0\\<^sub>0\\<rangle> = 1", "by simp"], ["proof (state)\nthis:\n  dim_col |\\<beta>\\<^sub>0\\<^sub>0\\<rangle> = 1\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> (\\<phi> \\<Otimes>\n                          |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>) $$\n                         (i, j) =\n                         v $$ (i, j)", "ultimately"], ["proof (chain)\npicking this:\n  i \\<in> {0..<8} \\<and> j = 0\n  dim_row |\\<beta>\\<^sub>0\\<^sub>0\\<rangle> = 4\n  dim_col |\\<beta>\\<^sub>0\\<^sub>0\\<rangle> = 1", "show \"(\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>) $$ (i, j) = v $$ (i,j)\""], ["proof (prove)\nusing this:\n  i \\<in> {0..<8} \\<and> j = 0\n  dim_row |\\<beta>\\<^sub>0\\<^sub>0\\<rangle> = 4\n  dim_col |\\<beta>\\<^sub>0\\<^sub>0\\<rangle> = 1\n\ngoal (1 subgoal):\n 1. (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>) $$ (i, j) =\n    v $$ (i, j)", "using state_def assms asm"], ["proof (prove)\nusing this:\n  i \\<in> {0..<8} \\<and> j = 0\n  dim_row |\\<beta>\\<^sub>0\\<^sub>0\\<rangle> = 4\n  dim_col |\\<beta>\\<^sub>0\\<^sub>0\\<rangle> = 1\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n  state 1 \\<phi>\n  \\<alpha> = \\<phi> $$ (0, 0)\n  \\<beta> = \\<phi> $$ (1, 0)\n  v =\n  Tensor.mat_of_cols_list 8\n   [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n     \\<alpha> / complex_of_real (sqrt 2),\n     \\<beta> / complex_of_real (sqrt 2), 0, 0,\n     \\<beta> / complex_of_real (sqrt 2)]]\n\ngoal (1 subgoal):\n 1. (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>) $$ (i, j) =\n    v $$ (i, j)", "by (auto simp add: bell00_def)"], ["proof (state)\nthis:\n  (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>) $$ (i, j) =\n  v $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?i < dim_row v; ?j < dim_col v\\<rbrakk>\n  \\<Longrightarrow> (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>) $$\n                    (?i, ?j) =\n                    v $$ (?i, ?j)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma alice_step_2:\n  assumes \"state 1 \\<phi>\" and \"\\<alpha> = \\<phi> $$ (0,0)\" and \"\\<beta> = \\<phi> $$ (1,0)\"\n  shows \"(CNOT \\<Otimes> Id 1) * (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>) = mat_of_cols_list 8 [[\\<alpha>/sqrt(2),0,0,\\<alpha>/sqrt(2),0,\\<beta>/sqrt(2),\\<beta>/sqrt(2),0]]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (CNOT \\<Otimes> Quantum.Id 1) *\n    (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>) =\n    Tensor.mat_of_cols_list 8\n     [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n       \\<alpha> / complex_of_real (sqrt 2), 0,\n       \\<beta> / complex_of_real (sqrt 2),\n       \\<beta> / complex_of_real (sqrt 2), 0]]", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n                         \\<alpha> / complex_of_real (sqrt 2), 0,\n                         \\<beta> / complex_of_real (sqrt 2),\n                         \\<beta> / complex_of_real (sqrt 2), 0]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n                 \\<alpha> / complex_of_real (sqrt 2), 0,\n                 \\<beta> / complex_of_real (sqrt 2),\n                 \\<beta> / complex_of_real (sqrt 2), 0]])\\<rbrakk>\n       \\<Longrightarrow> ((CNOT \\<Otimes> Quantum.Id 1) *\n                          (\\<phi> \\<Otimes>\n                           |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)) $$\n                         (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n                            \\<alpha> / complex_of_real (sqrt 2), 0,\n                            \\<beta> / complex_of_real (sqrt 2),\n                            \\<beta> / complex_of_real (sqrt 2), 0]] $$\n                         (i, j)\n 2. dim_row\n     ((CNOT \\<Otimes> Quantum.Id 1) *\n      (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)) =\n    dim_row\n     (Tensor.mat_of_cols_list 8\n       [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n         \\<alpha> / complex_of_real (sqrt 2), 0,\n         \\<beta> / complex_of_real (sqrt 2),\n         \\<beta> / complex_of_real (sqrt 2), 0]])\n 3. dim_col\n     ((CNOT \\<Otimes> Quantum.Id 1) *\n      (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)) =\n    dim_col\n     (Tensor.mat_of_cols_list 8\n       [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n         \\<alpha> / complex_of_real (sqrt 2), 0,\n         \\<beta> / complex_of_real (sqrt 2),\n         \\<beta> / complex_of_real (sqrt 2), 0]])", "have f0:\"(\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>) = mat_of_cols_list 8 [[\\<alpha>/sqrt(2),0,0,\\<alpha>/sqrt(2),\\<beta>/sqrt(2),0,0,\\<beta>/sqrt(2)]]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle> =\n    Tensor.mat_of_cols_list 8\n     [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n       \\<alpha> / complex_of_real (sqrt 2),\n       \\<beta> / complex_of_real (sqrt 2), 0, 0,\n       \\<beta> / complex_of_real (sqrt 2)]]", "using assms alice_step_1"], ["proof (prove)\nusing this:\n  state 1 \\<phi>\n  \\<alpha> = \\<phi> $$ (0, 0)\n  \\<beta> = \\<phi> $$ (1, 0)\n  \\<lbrakk>state 1 ?\\<phi>; ?\\<alpha> = ?\\<phi> $$ (0, 0);\n   ?\\<beta> = ?\\<phi> $$ (1, 0)\\<rbrakk>\n  \\<Longrightarrow> ?\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle> =\n                    Tensor.mat_of_cols_list 8\n                     [[?\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n                       ?\\<alpha> / complex_of_real (sqrt 2),\n                       ?\\<beta> / complex_of_real (sqrt 2), 0, 0,\n                       ?\\<beta> / complex_of_real (sqrt 2)]]\n\ngoal (1 subgoal):\n 1. \\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle> =\n    Tensor.mat_of_cols_list 8\n     [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n       \\<alpha> / complex_of_real (sqrt 2),\n       \\<beta> / complex_of_real (sqrt 2), 0, 0,\n       \\<beta> / complex_of_real (sqrt 2)]]", "by simp"], ["proof (state)\nthis:\n  \\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle> =\n  Tensor.mat_of_cols_list 8\n   [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n     \\<alpha> / complex_of_real (sqrt 2),\n     \\<beta> / complex_of_real (sqrt 2), 0, 0,\n     \\<beta> / complex_of_real (sqrt 2)]]\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n                         \\<alpha> / complex_of_real (sqrt 2), 0,\n                         \\<beta> / complex_of_real (sqrt 2),\n                         \\<beta> / complex_of_real (sqrt 2), 0]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n                 \\<alpha> / complex_of_real (sqrt 2), 0,\n                 \\<beta> / complex_of_real (sqrt 2),\n                 \\<beta> / complex_of_real (sqrt 2), 0]])\\<rbrakk>\n       \\<Longrightarrow> ((CNOT \\<Otimes> Quantum.Id 1) *\n                          (\\<phi> \\<Otimes>\n                           |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)) $$\n                         (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n                            \\<alpha> / complex_of_real (sqrt 2), 0,\n                            \\<beta> / complex_of_real (sqrt 2),\n                            \\<beta> / complex_of_real (sqrt 2), 0]] $$\n                         (i, j)\n 2. dim_row\n     ((CNOT \\<Otimes> Quantum.Id 1) *\n      (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)) =\n    dim_row\n     (Tensor.mat_of_cols_list 8\n       [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n         \\<alpha> / complex_of_real (sqrt 2), 0,\n         \\<beta> / complex_of_real (sqrt 2),\n         \\<beta> / complex_of_real (sqrt 2), 0]])\n 3. dim_col\n     ((CNOT \\<Otimes> Quantum.Id 1) *\n      (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)) =\n    dim_col\n     (Tensor.mat_of_cols_list 8\n       [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n         \\<alpha> / complex_of_real (sqrt 2), 0,\n         \\<beta> / complex_of_real (sqrt 2),\n         \\<beta> / complex_of_real (sqrt 2), 0]])", "define v where asm:\"v = mat_of_cols_list 8 [[\\<alpha>/sqrt(2),0,0,\\<alpha>/sqrt(2),0,\\<beta>/sqrt(2),\\<beta>/sqrt(2),0]]\""], ["proof (state)\nthis:\n  v =\n  Tensor.mat_of_cols_list 8\n   [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n     \\<alpha> / complex_of_real (sqrt 2), 0,\n     \\<beta> / complex_of_real (sqrt 2), \\<beta> / complex_of_real (sqrt 2),\n     0]]\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n                         \\<alpha> / complex_of_real (sqrt 2), 0,\n                         \\<beta> / complex_of_real (sqrt 2),\n                         \\<beta> / complex_of_real (sqrt 2), 0]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n                 \\<alpha> / complex_of_real (sqrt 2), 0,\n                 \\<beta> / complex_of_real (sqrt 2),\n                 \\<beta> / complex_of_real (sqrt 2), 0]])\\<rbrakk>\n       \\<Longrightarrow> ((CNOT \\<Otimes> Quantum.Id 1) *\n                          (\\<phi> \\<Otimes>\n                           |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)) $$\n                         (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n                            \\<alpha> / complex_of_real (sqrt 2), 0,\n                            \\<beta> / complex_of_real (sqrt 2),\n                            \\<beta> / complex_of_real (sqrt 2), 0]] $$\n                         (i, j)\n 2. dim_row\n     ((CNOT \\<Otimes> Quantum.Id 1) *\n      (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)) =\n    dim_row\n     (Tensor.mat_of_cols_list 8\n       [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n         \\<alpha> / complex_of_real (sqrt 2), 0,\n         \\<beta> / complex_of_real (sqrt 2),\n         \\<beta> / complex_of_real (sqrt 2), 0]])\n 3. dim_col\n     ((CNOT \\<Otimes> Quantum.Id 1) *\n      (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)) =\n    dim_col\n     (Tensor.mat_of_cols_list 8\n       [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n         \\<alpha> / complex_of_real (sqrt 2), 0,\n         \\<beta> / complex_of_real (sqrt 2),\n         \\<beta> / complex_of_real (sqrt 2), 0]])", "then"], ["proof (chain)\npicking this:\n  v =\n  Tensor.mat_of_cols_list 8\n   [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n     \\<alpha> / complex_of_real (sqrt 2), 0,\n     \\<beta> / complex_of_real (sqrt 2), \\<beta> / complex_of_real (sqrt 2),\n     0]]", "show \"dim_row ((CNOT \\<Otimes> Id 1) * (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)) = dim_row v\""], ["proof (prove)\nusing this:\n  v =\n  Tensor.mat_of_cols_list 8\n   [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n     \\<alpha> / complex_of_real (sqrt 2), 0,\n     \\<beta> / complex_of_real (sqrt 2), \\<beta> / complex_of_real (sqrt 2),\n     0]]\n\ngoal (1 subgoal):\n 1. dim_row\n     ((CNOT \\<Otimes> Quantum.Id 1) *\n      (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)) =\n    dim_row v", "using assms(1) alice_step_2_state state.dim_row mat_of_cols_list_def"], ["proof (prove)\nusing this:\n  v =\n  Tensor.mat_of_cols_list 8\n   [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n     \\<alpha> / complex_of_real (sqrt 2), 0,\n     \\<beta> / complex_of_real (sqrt 2), \\<beta> / complex_of_real (sqrt 2),\n     0]]\n  state 1 \\<phi>\n  state 1 ?\\<phi> \\<Longrightarrow>\n  state 3\n   ((CNOT \\<Otimes> Quantum.Id 1) *\n    (?\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>))\n  state ?n ?v \\<Longrightarrow> dim_row ?v = 2 ^ ?n\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n\ngoal (1 subgoal):\n 1. dim_row\n     ((CNOT \\<Otimes> Quantum.Id 1) *\n      (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)) =\n    dim_row v", "by fastforce"], ["proof (state)\nthis:\n  dim_row\n   ((CNOT \\<Otimes> Quantum.Id 1) *\n    (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)) =\n  dim_row v\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n                         \\<alpha> / complex_of_real (sqrt 2), 0,\n                         \\<beta> / complex_of_real (sqrt 2),\n                         \\<beta> / complex_of_real (sqrt 2), 0]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n                 \\<alpha> / complex_of_real (sqrt 2), 0,\n                 \\<beta> / complex_of_real (sqrt 2),\n                 \\<beta> / complex_of_real (sqrt 2), 0]])\\<rbrakk>\n       \\<Longrightarrow> ((CNOT \\<Otimes> Quantum.Id 1) *\n                          (\\<phi> \\<Otimes>\n                           |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)) $$\n                         (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n                            \\<alpha> / complex_of_real (sqrt 2), 0,\n                            \\<beta> / complex_of_real (sqrt 2),\n                            \\<beta> / complex_of_real (sqrt 2), 0]] $$\n                         (i, j)\n 2. dim_col\n     ((CNOT \\<Otimes> Quantum.Id 1) *\n      (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)) =\n    dim_col\n     (Tensor.mat_of_cols_list 8\n       [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n         \\<alpha> / complex_of_real (sqrt 2), 0,\n         \\<beta> / complex_of_real (sqrt 2),\n         \\<beta> / complex_of_real (sqrt 2), 0]])", "show \"dim_col ((CNOT \\<Otimes> Id 1) * (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)) = dim_col v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col\n     ((CNOT \\<Otimes> Quantum.Id 1) *\n      (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)) =\n    dim_col v", "using assms(1) alice_step_2_state state.is_column asm mat_of_cols_list_def"], ["proof (prove)\nusing this:\n  state 1 \\<phi>\n  state 1 ?\\<phi> \\<Longrightarrow>\n  state 3\n   ((CNOT \\<Otimes> Quantum.Id 1) *\n    (?\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>))\n  state ?n ?v \\<Longrightarrow> dim_col ?v = 1\n  v =\n  Tensor.mat_of_cols_list 8\n   [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n     \\<alpha> / complex_of_real (sqrt 2), 0,\n     \\<beta> / complex_of_real (sqrt 2), \\<beta> / complex_of_real (sqrt 2),\n     0]]\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n\ngoal (1 subgoal):\n 1. dim_col\n     ((CNOT \\<Otimes> Quantum.Id 1) *\n      (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)) =\n    dim_col v", "by fastforce"], ["proof (state)\nthis:\n  dim_col\n   ((CNOT \\<Otimes> Quantum.Id 1) *\n    (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)) =\n  dim_col v\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n                         \\<alpha> / complex_of_real (sqrt 2), 0,\n                         \\<beta> / complex_of_real (sqrt 2),\n                         \\<beta> / complex_of_real (sqrt 2), 0]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n                 \\<alpha> / complex_of_real (sqrt 2), 0,\n                 \\<beta> / complex_of_real (sqrt 2),\n                 \\<beta> / complex_of_real (sqrt 2), 0]])\\<rbrakk>\n       \\<Longrightarrow> ((CNOT \\<Otimes> Quantum.Id 1) *\n                          (\\<phi> \\<Otimes>\n                           |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)) $$\n                         (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n                            \\<alpha> / complex_of_real (sqrt 2), 0,\n                            \\<beta> / complex_of_real (sqrt 2),\n                            \\<beta> / complex_of_real (sqrt 2), 0]] $$\n                         (i, j)", "show \"\\<And>i j. i<dim_row v \\<Longrightarrow> j<dim_col v \\<Longrightarrow> ((CNOT \\<Otimes> Id 1) * (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)) $$ (i,j) = v $$ (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> ((CNOT \\<Otimes> Quantum.Id 1) *\n                          (\\<phi> \\<Otimes>\n                           |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)) $$\n                         (i, j) =\n                         v $$ (i, j)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> ((CNOT \\<Otimes> Quantum.Id 1) *\n                          (\\<phi> \\<Otimes>\n                           |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)) $$\n                         (i, j) =\n                         v $$ (i, j)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> ((CNOT \\<Otimes> Quantum.Id 1) *\n                          (\\<phi> \\<Otimes>\n                           |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)) $$\n                         (i, j) =\n                         v $$ (i, j)", "assume \"i < dim_row v\" and \"j < dim_col v\""], ["proof (state)\nthis:\n  i < dim_row v\n  j < dim_col v\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> ((CNOT \\<Otimes> Quantum.Id 1) *\n                          (\\<phi> \\<Otimes>\n                           |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)) $$\n                         (i, j) =\n                         v $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i < dim_row v\n  j < dim_col v", "have \"i \\<in> {0..<8::nat} \\<and> j = 0\""], ["proof (prove)\nusing this:\n  i < dim_row v\n  j < dim_col v\n\ngoal (1 subgoal):\n 1. i \\<in> {0..<8} \\<and> j = 0", "using asm"], ["proof (prove)\nusing this:\n  i < dim_row v\n  j < dim_col v\n  v =\n  Tensor.mat_of_cols_list 8\n   [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n     \\<alpha> / complex_of_real (sqrt 2), 0,\n     \\<beta> / complex_of_real (sqrt 2), \\<beta> / complex_of_real (sqrt 2),\n     0]]\n\ngoal (1 subgoal):\n 1. i \\<in> {0..<8} \\<and> j = 0", "by (auto simp add: mat_of_cols_list_def)"], ["proof (state)\nthis:\n  i \\<in> {0..<8} \\<and> j = 0\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> ((CNOT \\<Otimes> Quantum.Id 1) *\n                          (\\<phi> \\<Otimes>\n                           |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)) $$\n                         (i, j) =\n                         v $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i \\<in> {0..<8} \\<and> j = 0", "have \"(M1 * (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)) $$ (i,j) = v $$ (i,j)\""], ["proof (prove)\nusing this:\n  i \\<in> {0..<8} \\<and> j = 0\n\ngoal (1 subgoal):\n 1. (M1 * (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)) $$ (i, j) =\n    v $$ (i, j)", "by (auto simp add: f0 asm mat_of_cols_list_def times_mat_def scalar_prod_def)"], ["proof (state)\nthis:\n  (M1 * (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)) $$ (i, j) =\n  v $$ (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> ((CNOT \\<Otimes> Quantum.Id 1) *\n                          (\\<phi> \\<Otimes>\n                           |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)) $$\n                         (i, j) =\n                         v $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  (M1 * (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)) $$ (i, j) =\n  v $$ (i, j)", "show \"((CNOT \\<Otimes> Id 1) * (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)) $$ (i,j) = v $$ (i,j)\""], ["proof (prove)\nusing this:\n  (M1 * (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)) $$ (i, j) =\n  v $$ (i, j)\n\ngoal (1 subgoal):\n 1. ((CNOT \\<Otimes> Quantum.Id 1) *\n     (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)) $$\n    (i, j) =\n    v $$ (i, j)", "using tensor_prod_of_cnot_id_1"], ["proof (prove)\nusing this:\n  (M1 * (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)) $$ (i, j) =\n  v $$ (i, j)\n  CNOT \\<Otimes> Quantum.Id 1 = M1\n\ngoal (1 subgoal):\n 1. ((CNOT \\<Otimes> Quantum.Id 1) *\n     (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)) $$\n    (i, j) =\n    v $$ (i, j)", "by simp"], ["proof (state)\nthis:\n  ((CNOT \\<Otimes> Quantum.Id 1) *\n   (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)) $$\n  (i, j) =\n  v $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?i < dim_row v; ?j < dim_col v\\<rbrakk>\n  \\<Longrightarrow> ((CNOT \\<Otimes> Quantum.Id 1) *\n                     (\\<phi> \\<Otimes>\n                      |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)) $$\n                    (?i, ?j) =\n                    v $$ (?i, ?j)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma alice_result:\n  assumes \"state 1 \\<phi>\" and \"\\<alpha> = \\<phi> $$ (0,0)\" and \"\\<beta> = \\<phi> $$ (1,0)\"\n  shows \"alice \\<phi> = mat_of_cols_list 8 [[\\<alpha>/2, \\<beta>/2, \\<beta>/2, \\<alpha>/2, \\<alpha>/2, -\\<beta>/2, -\\<beta>/2, \\<alpha>/2]]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. alice \\<phi> =\n    Tensor.mat_of_cols_list 8\n     [[\\<alpha> / 2, \\<beta> / 2, \\<beta> / 2, \\<alpha> / 2, \\<alpha> / 2,\n       - \\<beta> / 2, - \\<beta> / 2, \\<alpha> / 2]]", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       [[\\<alpha> / 2, \\<beta> / 2, \\<beta> / 2,\n                         \\<alpha> / 2, \\<alpha> / 2, - \\<beta> / 2,\n                         - \\<beta> / 2, \\<alpha> / 2]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               [[\\<alpha> / 2, \\<beta> / 2, \\<beta> / 2, \\<alpha> / 2,\n                 \\<alpha> / 2, - \\<beta> / 2, - \\<beta> / 2,\n                 \\<alpha> / 2]])\\<rbrakk>\n       \\<Longrightarrow> alice \\<phi> $$ (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          [[\\<alpha> / 2, \\<beta> / 2, \\<beta> / 2,\n                            \\<alpha> / 2, \\<alpha> / 2, - \\<beta> / 2,\n                            - \\<beta> / 2, \\<alpha> / 2]] $$\n                         (i, j)\n 2. dim_row (alice \\<phi>) =\n    dim_row\n     (Tensor.mat_of_cols_list 8\n       [[\\<alpha> / 2, \\<beta> / 2, \\<beta> / 2, \\<alpha> / 2, \\<alpha> / 2,\n         - \\<beta> / 2, - \\<beta> / 2, \\<alpha> / 2]])\n 3. dim_col (alice \\<phi>) =\n    dim_col\n     (Tensor.mat_of_cols_list 8\n       [[\\<alpha> / 2, \\<beta> / 2, \\<beta> / 2, \\<alpha> / 2, \\<alpha> / 2,\n         - \\<beta> / 2, - \\<beta> / 2, \\<alpha> / 2]])", "define v where a0:\"v = mat_of_cols_list 8 [[\\<alpha>/2, \\<beta>/2, \\<beta>/2, \\<alpha>/2, \\<alpha>/2, -\\<beta>/2, -\\<beta>/2, \\<alpha>/2]]\""], ["proof (state)\nthis:\n  v =\n  Tensor.mat_of_cols_list 8\n   [[\\<alpha> / 2, \\<beta> / 2, \\<beta> / 2, \\<alpha> / 2, \\<alpha> / 2,\n     - \\<beta> / 2, - \\<beta> / 2, \\<alpha> / 2]]\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       [[\\<alpha> / 2, \\<beta> / 2, \\<beta> / 2,\n                         \\<alpha> / 2, \\<alpha> / 2, - \\<beta> / 2,\n                         - \\<beta> / 2, \\<alpha> / 2]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               [[\\<alpha> / 2, \\<beta> / 2, \\<beta> / 2, \\<alpha> / 2,\n                 \\<alpha> / 2, - \\<beta> / 2, - \\<beta> / 2,\n                 \\<alpha> / 2]])\\<rbrakk>\n       \\<Longrightarrow> alice \\<phi> $$ (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          [[\\<alpha> / 2, \\<beta> / 2, \\<beta> / 2,\n                            \\<alpha> / 2, \\<alpha> / 2, - \\<beta> / 2,\n                            - \\<beta> / 2, \\<alpha> / 2]] $$\n                         (i, j)\n 2. dim_row (alice \\<phi>) =\n    dim_row\n     (Tensor.mat_of_cols_list 8\n       [[\\<alpha> / 2, \\<beta> / 2, \\<beta> / 2, \\<alpha> / 2, \\<alpha> / 2,\n         - \\<beta> / 2, - \\<beta> / 2, \\<alpha> / 2]])\n 3. dim_col (alice \\<phi>) =\n    dim_col\n     (Tensor.mat_of_cols_list 8\n       [[\\<alpha> / 2, \\<beta> / 2, \\<beta> / 2, \\<alpha> / 2, \\<alpha> / 2,\n         - \\<beta> / 2, - \\<beta> / 2, \\<alpha> / 2]])", "define w where a1:\"w = (CNOT \\<Otimes> Id 1) * (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)\""], ["proof (state)\nthis:\n  w =\n  (CNOT \\<Otimes> Quantum.Id 1) *\n  (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       [[\\<alpha> / 2, \\<beta> / 2, \\<beta> / 2,\n                         \\<alpha> / 2, \\<alpha> / 2, - \\<beta> / 2,\n                         - \\<beta> / 2, \\<alpha> / 2]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               [[\\<alpha> / 2, \\<beta> / 2, \\<beta> / 2, \\<alpha> / 2,\n                 \\<alpha> / 2, - \\<beta> / 2, - \\<beta> / 2,\n                 \\<alpha> / 2]])\\<rbrakk>\n       \\<Longrightarrow> alice \\<phi> $$ (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          [[\\<alpha> / 2, \\<beta> / 2, \\<beta> / 2,\n                            \\<alpha> / 2, \\<alpha> / 2, - \\<beta> / 2,\n                            - \\<beta> / 2, \\<alpha> / 2]] $$\n                         (i, j)\n 2. dim_row (alice \\<phi>) =\n    dim_row\n     (Tensor.mat_of_cols_list 8\n       [[\\<alpha> / 2, \\<beta> / 2, \\<beta> / 2, \\<alpha> / 2, \\<alpha> / 2,\n         - \\<beta> / 2, - \\<beta> / 2, \\<alpha> / 2]])\n 3. dim_col (alice \\<phi>) =\n    dim_col\n     (Tensor.mat_of_cols_list 8\n       [[\\<alpha> / 2, \\<beta> / 2, \\<beta> / 2, \\<alpha> / 2, \\<alpha> / 2,\n         - \\<beta> / 2, - \\<beta> / 2, \\<alpha> / 2]])", "then"], ["proof (chain)\npicking this:\n  w =\n  (CNOT \\<Otimes> Quantum.Id 1) *\n  (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)", "have f0:\"w = mat_of_cols_list 8 [[\\<alpha>/sqrt(2), 0, 0, \\<alpha>/sqrt(2), 0, \\<beta>/sqrt(2), \\<beta>/sqrt(2), 0]]\""], ["proof (prove)\nusing this:\n  w =\n  (CNOT \\<Otimes> Quantum.Id 1) *\n  (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)\n\ngoal (1 subgoal):\n 1. w =\n    Tensor.mat_of_cols_list 8\n     [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n       \\<alpha> / complex_of_real (sqrt 2), 0,\n       \\<beta> / complex_of_real (sqrt 2),\n       \\<beta> / complex_of_real (sqrt 2), 0]]", "using assms alice_step_2"], ["proof (prove)\nusing this:\n  w =\n  (CNOT \\<Otimes> Quantum.Id 1) *\n  (\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>)\n  state 1 \\<phi>\n  \\<alpha> = \\<phi> $$ (0, 0)\n  \\<beta> = \\<phi> $$ (1, 0)\n  \\<lbrakk>state 1 ?\\<phi>; ?\\<alpha> = ?\\<phi> $$ (0, 0);\n   ?\\<beta> = ?\\<phi> $$ (1, 0)\\<rbrakk>\n  \\<Longrightarrow> (CNOT \\<Otimes> Quantum.Id 1) *\n                    (?\\<phi> \\<Otimes> |\\<beta>\\<^sub>0\\<^sub>0\\<rangle>) =\n                    Tensor.mat_of_cols_list 8\n                     [[?\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n                       ?\\<alpha> / complex_of_real (sqrt 2), 0,\n                       ?\\<beta> / complex_of_real (sqrt 2),\n                       ?\\<beta> / complex_of_real (sqrt 2), 0]]\n\ngoal (1 subgoal):\n 1. w =\n    Tensor.mat_of_cols_list 8\n     [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n       \\<alpha> / complex_of_real (sqrt 2), 0,\n       \\<beta> / complex_of_real (sqrt 2),\n       \\<beta> / complex_of_real (sqrt 2), 0]]", "by simp"], ["proof (state)\nthis:\n  w =\n  Tensor.mat_of_cols_list 8\n   [[\\<alpha> / complex_of_real (sqrt 2), 0, 0,\n     \\<alpha> / complex_of_real (sqrt 2), 0,\n     \\<beta> / complex_of_real (sqrt 2), \\<beta> / complex_of_real (sqrt 2),\n     0]]\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       [[\\<alpha> / 2, \\<beta> / 2, \\<beta> / 2,\n                         \\<alpha> / 2, \\<alpha> / 2, - \\<beta> / 2,\n                         - \\<beta> / 2, \\<alpha> / 2]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               [[\\<alpha> / 2, \\<beta> / 2, \\<beta> / 2, \\<alpha> / 2,\n                 \\<alpha> / 2, - \\<beta> / 2, - \\<beta> / 2,\n                 \\<alpha> / 2]])\\<rbrakk>\n       \\<Longrightarrow> alice \\<phi> $$ (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          [[\\<alpha> / 2, \\<beta> / 2, \\<beta> / 2,\n                            \\<alpha> / 2, \\<alpha> / 2, - \\<beta> / 2,\n                            - \\<beta> / 2, \\<alpha> / 2]] $$\n                         (i, j)\n 2. dim_row (alice \\<phi>) =\n    dim_row\n     (Tensor.mat_of_cols_list 8\n       [[\\<alpha> / 2, \\<beta> / 2, \\<beta> / 2, \\<alpha> / 2, \\<alpha> / 2,\n         - \\<beta> / 2, - \\<beta> / 2, \\<alpha> / 2]])\n 3. dim_col (alice \\<phi>) =\n    dim_col\n     (Tensor.mat_of_cols_list 8\n       [[\\<alpha> / 2, \\<beta> / 2, \\<beta> / 2, \\<alpha> / 2, \\<alpha> / 2,\n         - \\<beta> / 2, - \\<beta> / 2, \\<alpha> / 2]])", "show \"dim_row (alice \\<phi>) = dim_row v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row (alice \\<phi>) = dim_row v", "using assms(1) alice_state state_def a0"], ["proof (prove)\nusing this:\n  state 1 \\<phi>\n  state 1 ?\\<phi> \\<Longrightarrow> state 3 (alice ?\\<phi>)\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n  v =\n  Tensor.mat_of_cols_list 8\n   [[\\<alpha> / 2, \\<beta> / 2, \\<beta> / 2, \\<alpha> / 2, \\<alpha> / 2,\n     - \\<beta> / 2, - \\<beta> / 2, \\<alpha> / 2]]\n\ngoal (1 subgoal):\n 1. dim_row (alice \\<phi>) = dim_row v", "by (simp add: mat_of_cols_list_def)"], ["proof (state)\nthis:\n  dim_row (alice \\<phi>) = dim_row v\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       [[\\<alpha> / 2, \\<beta> / 2, \\<beta> / 2,\n                         \\<alpha> / 2, \\<alpha> / 2, - \\<beta> / 2,\n                         - \\<beta> / 2, \\<alpha> / 2]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               [[\\<alpha> / 2, \\<beta> / 2, \\<beta> / 2, \\<alpha> / 2,\n                 \\<alpha> / 2, - \\<beta> / 2, - \\<beta> / 2,\n                 \\<alpha> / 2]])\\<rbrakk>\n       \\<Longrightarrow> alice \\<phi> $$ (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          [[\\<alpha> / 2, \\<beta> / 2, \\<beta> / 2,\n                            \\<alpha> / 2, \\<alpha> / 2, - \\<beta> / 2,\n                            - \\<beta> / 2, \\<alpha> / 2]] $$\n                         (i, j)\n 2. dim_col (alice \\<phi>) =\n    dim_col\n     (Tensor.mat_of_cols_list 8\n       [[\\<alpha> / 2, \\<beta> / 2, \\<beta> / 2, \\<alpha> / 2, \\<alpha> / 2,\n         - \\<beta> / 2, - \\<beta> / 2, \\<alpha> / 2]])", "show \"dim_col (alice \\<phi>) = dim_col v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col (alice \\<phi>) = dim_col v", "using assms(1) alice_state state_def a0"], ["proof (prove)\nusing this:\n  state 1 \\<phi>\n  state 1 ?\\<phi> \\<Longrightarrow> state 3 (alice ?\\<phi>)\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n  v =\n  Tensor.mat_of_cols_list 8\n   [[\\<alpha> / 2, \\<beta> / 2, \\<beta> / 2, \\<alpha> / 2, \\<alpha> / 2,\n     - \\<beta> / 2, - \\<beta> / 2, \\<alpha> / 2]]\n\ngoal (1 subgoal):\n 1. dim_col (alice \\<phi>) = dim_col v", "by (simp add: mat_of_cols_list_def)"], ["proof (state)\nthis:\n  dim_col (alice \\<phi>) = dim_col v\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       [[\\<alpha> / 2, \\<beta> / 2, \\<beta> / 2,\n                         \\<alpha> / 2, \\<alpha> / 2, - \\<beta> / 2,\n                         - \\<beta> / 2, \\<alpha> / 2]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               [[\\<alpha> / 2, \\<beta> / 2, \\<beta> / 2, \\<alpha> / 2,\n                 \\<alpha> / 2, - \\<beta> / 2, - \\<beta> / 2,\n                 \\<alpha> / 2]])\\<rbrakk>\n       \\<Longrightarrow> alice \\<phi> $$ (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          [[\\<alpha> / 2, \\<beta> / 2, \\<beta> / 2,\n                            \\<alpha> / 2, \\<alpha> / 2, - \\<beta> / 2,\n                            - \\<beta> / 2, \\<alpha> / 2]] $$\n                         (i, j)", "show \"\\<And>i j. i < dim_row v \\<Longrightarrow> j < dim_col v \\<Longrightarrow> alice \\<phi> $$ (i,j) = v $$ (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> alice \\<phi> $$ (i, j) = v $$ (i, j)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> alice \\<phi> $$ (i, j) = v $$ (i, j)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> alice \\<phi> $$ (i, j) = v $$ (i, j)", "assume \"i < dim_row v\" and \"j < dim_col v\""], ["proof (state)\nthis:\n  i < dim_row v\n  j < dim_col v\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> alice \\<phi> $$ (i, j) = v $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i < dim_row v\n  j < dim_col v", "have \"i \\<in> {0..<8} \\<and> j = 0\""], ["proof (prove)\nusing this:\n  i < dim_row v\n  j < dim_col v\n\ngoal (1 subgoal):\n 1. i \\<in> {0..<8} \\<and> j = 0", "using a0"], ["proof (prove)\nusing this:\n  i < dim_row v\n  j < dim_col v\n  v =\n  Tensor.mat_of_cols_list 8\n   [[\\<alpha> / 2, \\<beta> / 2, \\<beta> / 2, \\<alpha> / 2, \\<alpha> / 2,\n     - \\<beta> / 2, - \\<beta> / 2, \\<alpha> / 2]]\n\ngoal (1 subgoal):\n 1. i \\<in> {0..<8} \\<and> j = 0", "by (auto simp add: Tensor.mat_of_cols_list_def)"], ["proof (state)\nthis:\n  i \\<in> {0..<8} \\<and> j = 0\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> alice \\<phi> $$ (i, j) = v $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i \\<in> {0..<8} \\<and> j = 0", "have \"(M2 * w) $$ (i,j) = v $$ (i,j)\""], ["proof (prove)\nusing this:\n  i \\<in> {0..<8} \\<and> j = 0\n\ngoal (1 subgoal):\n 1. (Tensor.mat_of_cols_list 8\n      (map (map complex_of_real)\n        [[1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0, 0],\n         [0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0],\n         [0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0],\n         [0, 0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2],\n         [1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0, 0],\n         [0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0],\n         [0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0],\n         [0, 0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2]]) *\n     w) $$\n    (i, j) =\n    v $$ (i, j)", "by (auto simp add: f0 a0 mat_of_cols_list_def times_mat_def scalar_prod_def)"], ["proof (state)\nthis:\n  (Tensor.mat_of_cols_list 8\n    (map (map complex_of_real)\n      [[1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0, 0],\n       [0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0],\n       [0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0],\n       [0, 0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2],\n       [1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0, 0],\n       [0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0],\n       [0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0],\n       [0, 0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2]]) *\n   w) $$\n  (i, j) =\n  v $$ (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> alice \\<phi> $$ (i, j) = v $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  (Tensor.mat_of_cols_list 8\n    (map (map complex_of_real)\n      [[1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0, 0],\n       [0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0],\n       [0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0],\n       [0, 0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2],\n       [1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0, 0],\n       [0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0],\n       [0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0],\n       [0, 0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2]]) *\n   w) $$\n  (i, j) =\n  v $$ (i, j)", "show \"alice \\<phi> $$ (i,j) = v $$ (i,j)\""], ["proof (prove)\nusing this:\n  (Tensor.mat_of_cols_list 8\n    (map (map complex_of_real)\n      [[1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0, 0],\n       [0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0, 0],\n       [0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2, 0],\n       [0, 0, 0, 1 / sqrt 2, 0, 0, 0, 1 / sqrt 2],\n       [1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0, 0],\n       [0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0, 0],\n       [0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2, 0],\n       [0, 0, 0, 1 / sqrt 2, 0, 0, 0, - 1 / sqrt 2]]) *\n   w) $$\n  (i, j) =\n  v $$ (i, j)\n\ngoal (1 subgoal):\n 1. alice \\<phi> $$ (i, j) = v $$ (i, j)", "by (simp add: tensor_prod_of_h_id_2 alice_def a1)"], ["proof (state)\nthis:\n  alice \\<phi> $$ (i, j) = v $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?i < dim_row v; ?j < dim_col v\\<rbrakk>\n  \\<Longrightarrow> alice \\<phi> $$ (?i, ?j) = v $$ (?i, ?j)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\nAn application of function @{term \"alice\"} to a state @{term \"\\<phi>\"} of a 1-qubit system results in the following cases.\n\\<close>"], ["", "definition alice_meas:: \"complex Matrix.mat \\<Rightarrow> _list\" where\n\"alice_meas \\<phi> = [\n  ((prob0 3 (alice \\<phi>) 0) * (prob0 3 (post_meas0 3 (alice \\<phi>) 0) 1), post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1)\n, ((prob0 3 (alice \\<phi>) 0) * (prob1 3 (post_meas0 3 (alice \\<phi>) 0) 1), post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1)\n, ((prob1 3 (alice \\<phi>) 0) * (prob0 3 (post_meas1 3 (alice \\<phi>) 0) 1), post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1)\n, ((prob1 3 (alice \\<phi>) 0) * (prob1 3 (post_meas1 3 (alice \\<phi>) 0) 1), post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1)\n]\""], ["", "definition alice_pos:: \"complex Matrix.mat \\<Rightarrow> complex Matrix.mat \\<Rightarrow> bool\" where\n\"alice_pos \\<phi> q \\<equiv>  q = mat_of_cols_list 8 [[\\<phi> $$ (0,0), \\<phi> $$ (1,0), 0, 0, 0, 0, 0, 0]] \\<or>\n                  q = mat_of_cols_list 8 [[0, 0, \\<phi> $$ (1,0), \\<phi> $$ (0,0), 0, 0, 0, 0]] \\<or>\n                  q = mat_of_cols_list 8 [[0, 0, 0, 0, \\<phi> $$ (0,0), - \\<phi> $$ (1,0), 0, 0]] \\<or>\n                  q = mat_of_cols_list 8 [[0, 0, 0, 0, 0, 0, - \\<phi> $$ (1,0), \\<phi> $$ (0,0)]]\""], ["", "lemma phi_vec_length:\n  assumes \"state 1 \\<phi>\"\n  shows \"cmod(\\<phi> $$ (0,0))^2 + cmod(\\<phi> $$ (Suc 0,0))^2 = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cmod (\\<phi> $$ (0, 0)))\\<^sup>2 +\n    (cmod (\\<phi> $$ (Suc 0, 0)))\\<^sup>2 =\n    1", "using set_2 assms state_def Matrix.col_def cpx_vec_length_def"], ["proof (prove)\nusing this:\n  {..<2} = {0, 1}\n  state 1 \\<phi>\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n  Matrix.col ?A ?j = Matrix.vec (dim_row ?A) (\\<lambda>i. ?A $$ (i, ?j))\n  \\<parallel>?v\\<parallel> \\<equiv>\n  sqrt (\\<Sum>i<dim_vec ?v. (cmod (?v $ i))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (cmod (\\<phi> $$ (0, 0)))\\<^sup>2 +\n    (cmod (\\<phi> $$ (Suc 0, 0)))\\<^sup>2 =\n    1", "by(auto simp add: atLeast0LessThan)"], ["", "lemma select_index_3_subsets [simp]: \n  shows \"{j::nat. select_index 3 0 j} = {4,5,6,7} \\<and>\n         {j::nat. j < 8 \\<and> \\<not> select_index 3 0 j} = {0,1,2,3} \\<and>\n         {j::nat. select_index 3 1 j} = {2,3,6,7} \\<and>\n         {j::nat. j < 8 \\<and> \\<not> select_index 3 1 j} = {0,1,4,5}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {j. select_index 3 0 j} = {4, 5, 6, 7} \\<and>\n    {j. j < 8 \\<and> \\<not> select_index 3 0 j} = {0, 1, 2, 3} \\<and>\n    {j. select_index 3 1 j} = {2, 3, 6, 7} \\<and>\n    {j. j < 8 \\<and> \\<not> select_index 3 1 j} = {0, 1, 4, 5}", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. {j. select_index 3 0 j} = {4, 5, 6, 7} \\<and>\n    {j. j < 8 \\<and> \\<not> select_index 3 0 j} = {0, 1, 2, 3} \\<and>\n    {j. select_index 3 1 j} = {2, 3, 6, 7} \\<and>\n    {j. j < 8 \\<and> \\<not> select_index 3 1 j} = {0, 1, 4, 5}", "have \"{j::nat. select_index 3 0 j} = {4,5,6,7}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {j. select_index 3 0 j} = {4, 5, 6, 7}", "by (auto simp add: select_index_def)"], ["proof (state)\nthis:\n  {j. select_index 3 0 j} = {4, 5, 6, 7}\n\ngoal (1 subgoal):\n 1. {j. select_index 3 0 j} = {4, 5, 6, 7} \\<and>\n    {j. j < 8 \\<and> \\<not> select_index 3 0 j} = {0, 1, 2, 3} \\<and>\n    {j. select_index 3 1 j} = {2, 3, 6, 7} \\<and>\n    {j. j < 8 \\<and> \\<not> select_index 3 1 j} = {0, 1, 4, 5}", "moreover"], ["proof (state)\nthis:\n  {j. select_index 3 0 j} = {4, 5, 6, 7}\n\ngoal (1 subgoal):\n 1. {j. select_index 3 0 j} = {4, 5, 6, 7} \\<and>\n    {j. j < 8 \\<and> \\<not> select_index 3 0 j} = {0, 1, 2, 3} \\<and>\n    {j. select_index 3 1 j} = {2, 3, 6, 7} \\<and>\n    {j. j < 8 \\<and> \\<not> select_index 3 1 j} = {0, 1, 4, 5}", "have \"{j::nat. j < 8 \\<and> \\<not> select_index 3 0 j} = {0,1,2,3}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {j. j < 8 \\<and> \\<not> select_index 3 0 j} = {0, 1, 2, 3}", "by(auto simp add: select_index_def)"], ["proof (state)\nthis:\n  {j. j < 8 \\<and> \\<not> select_index 3 0 j} = {0, 1, 2, 3}\n\ngoal (1 subgoal):\n 1. {j. select_index 3 0 j} = {4, 5, 6, 7} \\<and>\n    {j. j < 8 \\<and> \\<not> select_index 3 0 j} = {0, 1, 2, 3} \\<and>\n    {j. select_index 3 1 j} = {2, 3, 6, 7} \\<and>\n    {j. j < 8 \\<and> \\<not> select_index 3 1 j} = {0, 1, 4, 5}", "moreover"], ["proof (state)\nthis:\n  {j. j < 8 \\<and> \\<not> select_index 3 0 j} = {0, 1, 2, 3}\n\ngoal (1 subgoal):\n 1. {j. select_index 3 0 j} = {4, 5, 6, 7} \\<and>\n    {j. j < 8 \\<and> \\<not> select_index 3 0 j} = {0, 1, 2, 3} \\<and>\n    {j. select_index 3 1 j} = {2, 3, 6, 7} \\<and>\n    {j. j < 8 \\<and> \\<not> select_index 3 1 j} = {0, 1, 4, 5}", "have f1:\"{j::nat. select_index 3 1 j} = {2,3,6,7}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {j. select_index 3 1 j} = {2, 3, 6, 7}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. {j. select_index 3 1 j} \\<subseteq> {2, 3, 6, 7}\n 2. {2, 3, 6, 7} \\<subseteq> {j. select_index 3 1 j}", "show \"{j. select_index 3 1 j} \\<subseteq> {2,3,6,7}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {j. select_index 3 1 j} \\<subseteq> {2, 3, 6, 7}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {j. select_index 3 1 j} \\<Longrightarrow>\n       x \\<in> {2, 3, 6, 7}", "fix j::nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {j. select_index 3 1 j} \\<Longrightarrow>\n       x \\<in> {2, 3, 6, 7}", "assume \"j \\<in> {j. select_index 3 1 j}\""], ["proof (state)\nthis:\n  j \\<in> {j. select_index 3 1 j}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {j. select_index 3 1 j} \\<Longrightarrow>\n       x \\<in> {2, 3, 6, 7}", "then"], ["proof (chain)\npicking this:\n  j \\<in> {j. select_index 3 1 j}", "have \"j \\<in> {0..<8} \\<and> j mod 4 \\<in> {2,3}\""], ["proof (prove)\nusing this:\n  j \\<in> {j. select_index 3 1 j}\n\ngoal (1 subgoal):\n 1. j \\<in> {0..<8} \\<and> j mod 4 \\<in> {2, 3}", "by (auto simp add: select_index_def)"], ["proof (state)\nthis:\n  j \\<in> {0..<8} \\<and> j mod 4 \\<in> {2, 3}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {j. select_index 3 1 j} \\<Longrightarrow>\n       x \\<in> {2, 3, 6, 7}", "then"], ["proof (chain)\npicking this:\n  j \\<in> {0..<8} \\<and> j mod 4 \\<in> {2, 3}", "show \"j \\<in> {2,3,6,7}\""], ["proof (prove)\nusing this:\n  j \\<in> {0..<8} \\<and> j mod 4 \\<in> {2, 3}\n\ngoal (1 subgoal):\n 1. j \\<in> {2, 3, 6, 7}", "by auto"], ["proof (state)\nthis:\n  j \\<in> {2, 3, 6, 7}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {j. select_index 3 1 j} \\<subseteq> {2, 3, 6, 7}\n\ngoal (1 subgoal):\n 1. {2, 3, 6, 7} \\<subseteq> {j. select_index 3 1 j}", "show \"{2,3,6,7} \\<subseteq> {j. select_index 3 1 j}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {2, 3, 6, 7} \\<subseteq> {j. select_index 3 1 j}", "by (auto simp add: select_index_def)"], ["proof (state)\nthis:\n  {2, 3, 6, 7} \\<subseteq> {j. select_index 3 1 j}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {j. select_index 3 1 j} = {2, 3, 6, 7}\n\ngoal (1 subgoal):\n 1. {j. select_index 3 0 j} = {4, 5, 6, 7} \\<and>\n    {j. j < 8 \\<and> \\<not> select_index 3 0 j} = {0, 1, 2, 3} \\<and>\n    {j. select_index 3 1 j} = {2, 3, 6, 7} \\<and>\n    {j. j < 8 \\<and> \\<not> select_index 3 1 j} = {0, 1, 4, 5}", "moreover"], ["proof (state)\nthis:\n  {j. select_index 3 1 j} = {2, 3, 6, 7}\n\ngoal (1 subgoal):\n 1. {j. select_index 3 0 j} = {4, 5, 6, 7} \\<and>\n    {j. j < 8 \\<and> \\<not> select_index 3 0 j} = {0, 1, 2, 3} \\<and>\n    {j. select_index 3 1 j} = {2, 3, 6, 7} \\<and>\n    {j. j < 8 \\<and> \\<not> select_index 3 1 j} = {0, 1, 4, 5}", "have \"{j::nat. j < 8 \\<and> \\<not> select_index 3 1 j} = {0,1,4,5}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {j. j < 8 \\<and> \\<not> select_index 3 1 j} = {0, 1, 4, 5}", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. {j. j < 8 \\<and> \\<not> select_index 3 1 j} = {0, 1, 4, 5}", "have \"{j::nat. j < 8 \\<and> j \\<notin> {2,3,6,7}} = {0,1,4,5}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {j. j < 8 \\<and> j \\<notin> {2, 3, 6, 7}} = {0, 1, 4, 5}", "by auto"], ["proof (state)\nthis:\n  {j. j < 8 \\<and> j \\<notin> {2, 3, 6, 7}} = {0, 1, 4, 5}\n\ngoal (1 subgoal):\n 1. {j. j < 8 \\<and> \\<not> select_index 3 1 j} = {0, 1, 4, 5}", "then"], ["proof (chain)\npicking this:\n  {j. j < 8 \\<and> j \\<notin> {2, 3, 6, 7}} = {0, 1, 4, 5}", "show ?thesis"], ["proof (prove)\nusing this:\n  {j. j < 8 \\<and> j \\<notin> {2, 3, 6, 7}} = {0, 1, 4, 5}\n\ngoal (1 subgoal):\n 1. {j. j < 8 \\<and> \\<not> select_index 3 1 j} = {0, 1, 4, 5}", "using f1"], ["proof (prove)\nusing this:\n  {j. j < 8 \\<and> j \\<notin> {2, 3, 6, 7}} = {0, 1, 4, 5}\n  {j. select_index 3 1 j} = {2, 3, 6, 7}\n\ngoal (1 subgoal):\n 1. {j. j < 8 \\<and> \\<not> select_index 3 1 j} = {0, 1, 4, 5}", "by blast"], ["proof (state)\nthis:\n  {j. j < 8 \\<and> \\<not> select_index 3 1 j} = {0, 1, 4, 5}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {j. j < 8 \\<and> \\<not> select_index 3 1 j} = {0, 1, 4, 5}\n\ngoal (1 subgoal):\n 1. {j. select_index 3 0 j} = {4, 5, 6, 7} \\<and>\n    {j. j < 8 \\<and> \\<not> select_index 3 0 j} = {0, 1, 2, 3} \\<and>\n    {j. select_index 3 1 j} = {2, 3, 6, 7} \\<and>\n    {j. j < 8 \\<and> \\<not> select_index 3 1 j} = {0, 1, 4, 5}", "ultimately"], ["proof (chain)\npicking this:\n  {j. select_index 3 0 j} = {4, 5, 6, 7}\n  {j. j < 8 \\<and> \\<not> select_index 3 0 j} = {0, 1, 2, 3}\n  {j. select_index 3 1 j} = {2, 3, 6, 7}\n  {j. j < 8 \\<and> \\<not> select_index 3 1 j} = {0, 1, 4, 5}", "show ?thesis"], ["proof (prove)\nusing this:\n  {j. select_index 3 0 j} = {4, 5, 6, 7}\n  {j. j < 8 \\<and> \\<not> select_index 3 0 j} = {0, 1, 2, 3}\n  {j. select_index 3 1 j} = {2, 3, 6, 7}\n  {j. j < 8 \\<and> \\<not> select_index 3 1 j} = {0, 1, 4, 5}\n\ngoal (1 subgoal):\n 1. {j. select_index 3 0 j} = {4, 5, 6, 7} \\<and>\n    {j. j < 8 \\<and> \\<not> select_index 3 0 j} = {0, 1, 2, 3} \\<and>\n    {j. select_index 3 1 j} = {2, 3, 6, 7} \\<and>\n    {j. j < 8 \\<and> \\<not> select_index 3 1 j} = {0, 1, 4, 5}", "by simp"], ["proof (state)\nthis:\n  {j. select_index 3 0 j} = {4, 5, 6, 7} \\<and>\n  {j. j < 8 \\<and> \\<not> select_index 3 0 j} = {0, 1, 2, 3} \\<and>\n  {j. select_index 3 1 j} = {2, 3, 6, 7} \\<and>\n  {j. j < 8 \\<and> \\<not> select_index 3 1 j} = {0, 1, 4, 5}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prob_index_0_alice:\n  assumes \"state 1 \\<phi>\"\n  shows \"prob0 3 (alice \\<phi>) 0 = 1/2 \\<and> prob1 3 (alice \\<phi>) 0 = 1/2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob0 3 (alice \\<phi>) 0 = 1 / 2 \\<and> prob1 3 (alice \\<phi>) 0 = 1 / 2", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. prob0 3 (alice \\<phi>) 0 = 1 / 2\n 2. prob1 3 (alice \\<phi>) 0 = 1 / 2", "show \"prob0 3 (alice \\<phi>) 0 = 1/2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob0 3 (alice \\<phi>) 0 = 1 / 2", "using alice_result assms prob0_def alice_state"], ["proof (prove)\nusing this:\n  \\<lbrakk>state 1 ?\\<phi>; ?\\<alpha> = ?\\<phi> $$ (0, 0);\n   ?\\<beta> = ?\\<phi> $$ (1, 0)\\<rbrakk>\n  \\<Longrightarrow> alice ?\\<phi> =\n                    Tensor.mat_of_cols_list 8\n                     [[?\\<alpha> / 2, ?\\<beta> / 2, ?\\<beta> / 2,\n                       ?\\<alpha> / 2, ?\\<alpha> / 2, - ?\\<beta> / 2,\n                       - ?\\<beta> / 2, ?\\<alpha> / 2]]\n  state 1 \\<phi>\n  prob0 ?n ?v ?i \\<equiv>\n  \\<Sum>j\\<in>{k |k. k < 2 ^ ?n \\<and> \\<not> select_index ?n ?i k}.\n    (cmod (?v $$ (j, 0)))\\<^sup>2\n  state 1 ?\\<phi> \\<Longrightarrow> state 3 (alice ?\\<phi>)\n\ngoal (1 subgoal):\n 1. prob0 3 (alice \\<phi>) 0 = 1 / 2", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> alice \\<phi> =\n                                  Tensor.mat_of_cols_list 8\n                                   [[\\<phi> $$ (0, 0) / 2,\n                                     \\<phi> $$ (Suc 0, 0) / 2,\n                                     \\<phi> $$ (Suc 0, 0) / 2,\n                                     \\<phi> $$ (0, 0) / 2,\n                                     \\<phi> $$ (0, 0) / 2,\n                                     - (\\<phi> $$ (Suc 0, 0) / 2),\n                                     - (\\<phi> $$ (Suc 0, 0) / 2),\n                                     \\<phi> $$ (0, 0) / 2]];\n     state (Suc 0) \\<phi>;\n     \\<And>n v i.\n        prob0 n v i \\<equiv>\n        \\<Sum>j\\<in>{uu_. uu_ < 2 ^ n \\<and> \\<not> select_index n i uu_}.\n          (cmod (v $$ (j, 0)))\\<^sup>2;\n     \\<And>\\<phi>.\n        state (Suc 0) \\<phi> \\<Longrightarrow>\n        state 3\n         (Tensor.mat_of_cols_list 8\n           [[\\<phi> $$ (0, 0) / 2, \\<phi> $$ (Suc 0, 0) / 2,\n             \\<phi> $$ (Suc 0, 0) / 2, \\<phi> $$ (0, 0) / 2,\n             \\<phi> $$ (0, 0) / 2, - (\\<phi> $$ (Suc 0, 0) / 2),\n             - (\\<phi> $$ (Suc 0, 0) / 2), \\<phi> $$ (0, 0) / 2]])\\<rbrakk>\n    \\<Longrightarrow> 4 * (cmod (\\<phi> $$ (0, 0)) / 2)\\<^sup>2 +\n                      4 * (cmod (\\<phi> $$ (Suc 0, 0)) / 2)\\<^sup>2 =\n                      1", "by (metis (no_types, hide_lams) One_nat_def phi_vec_length four_x_squared mult.commute \nnonzero_mult_div_cancel_right times_divide_eq_right zero_neq_numeral)"], ["proof (state)\nthis:\n  prob0 3 (alice \\<phi>) 0 = 1 / 2\n\ngoal (1 subgoal):\n 1. prob1 3 (alice \\<phi>) 0 = 1 / 2", "then"], ["proof (chain)\npicking this:\n  prob0 3 (alice \\<phi>) 0 = 1 / 2", "show\"prob1 3 (alice \\<phi>) 0 = 1/2\""], ["proof (prove)\nusing this:\n  prob0 3 (alice \\<phi>) 0 = 1 / 2\n\ngoal (1 subgoal):\n 1. prob1 3 (alice \\<phi>) 0 = 1 / 2", "using prob_sum_is_one[of \"3\" \"alice \\<phi>\" \"0\"] alice_state[of \"\\<phi>\"] assms"], ["proof (prove)\nusing this:\n  prob0 3 (alice \\<phi>) 0 = 1 / 2\n  state 3 (alice \\<phi>) \\<Longrightarrow>\n  prob1 3 (alice \\<phi>) 0 + prob0 3 (alice \\<phi>) 0 = 1\n  state 1 \\<phi> \\<Longrightarrow> state 3 (alice \\<phi>)\n  state 1 \\<phi>\n\ngoal (1 subgoal):\n 1. prob1 3 (alice \\<phi>) 0 = 1 / 2", "by linarith"], ["proof (state)\nthis:\n  prob1 3 (alice \\<phi>) 0 = 1 / 2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma post_meas0_index_0_alice:\n  assumes \"state 1 \\<phi>\" and \"\\<alpha> = \\<phi> $$ (0,0)\" and \"\\<beta> = \\<phi> $$ (1,0)\"\n  shows \"post_meas0 3 (alice \\<phi>) 0 = \nmat_of_cols_list 8 [[\\<alpha>/sqrt(2), \\<beta>/sqrt(2), \\<beta>/sqrt(2), \\<alpha>/sqrt(2), 0, 0, 0, 0]]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. post_meas0 3 (alice \\<phi>) 0 =\n    Tensor.mat_of_cols_list 8\n     [[\\<alpha> / complex_of_real (sqrt 2),\n       \\<beta> / complex_of_real (sqrt 2),\n       \\<beta> / complex_of_real (sqrt 2),\n       \\<alpha> / complex_of_real (sqrt 2), 0, 0, 0, 0]]", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       [[\\<alpha> / complex_of_real (sqrt 2),\n                         \\<beta> / complex_of_real (sqrt 2),\n                         \\<beta> / complex_of_real (sqrt 2),\n                         \\<alpha> / complex_of_real (sqrt 2), 0, 0, 0, 0]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               [[\\<alpha> / complex_of_real (sqrt 2),\n                 \\<beta> / complex_of_real (sqrt 2),\n                 \\<beta> / complex_of_real (sqrt 2),\n                 \\<alpha> / complex_of_real (sqrt 2), 0, 0, 0, 0]])\\<rbrakk>\n       \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 $$ (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          [[\\<alpha> / complex_of_real (sqrt 2),\n                            \\<beta> / complex_of_real (sqrt 2),\n                            \\<beta> / complex_of_real (sqrt 2),\n                            \\<alpha> / complex_of_real (sqrt 2), 0, 0, 0,\n                            0]] $$\n                         (i, j)\n 2. dim_row (post_meas0 3 (alice \\<phi>) 0) =\n    dim_row\n     (Tensor.mat_of_cols_list 8\n       [[\\<alpha> / complex_of_real (sqrt 2),\n         \\<beta> / complex_of_real (sqrt 2),\n         \\<beta> / complex_of_real (sqrt 2),\n         \\<alpha> / complex_of_real (sqrt 2), 0, 0, 0, 0]])\n 3. dim_col (post_meas0 3 (alice \\<phi>) 0) =\n    dim_col\n     (Tensor.mat_of_cols_list 8\n       [[\\<alpha> / complex_of_real (sqrt 2),\n         \\<beta> / complex_of_real (sqrt 2),\n         \\<beta> / complex_of_real (sqrt 2),\n         \\<alpha> / complex_of_real (sqrt 2), 0, 0, 0, 0]])", "define v where asm:\"v = mat_of_cols_list 8 [[\\<alpha>/sqrt(2),\\<beta>/sqrt(2),\\<beta>/sqrt(2),\\<alpha>/sqrt(2),0,0,0,0]]\""], ["proof (state)\nthis:\n  v =\n  Tensor.mat_of_cols_list 8\n   [[\\<alpha> / complex_of_real (sqrt 2),\n     \\<beta> / complex_of_real (sqrt 2), \\<beta> / complex_of_real (sqrt 2),\n     \\<alpha> / complex_of_real (sqrt 2), 0, 0, 0, 0]]\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       [[\\<alpha> / complex_of_real (sqrt 2),\n                         \\<beta> / complex_of_real (sqrt 2),\n                         \\<beta> / complex_of_real (sqrt 2),\n                         \\<alpha> / complex_of_real (sqrt 2), 0, 0, 0, 0]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               [[\\<alpha> / complex_of_real (sqrt 2),\n                 \\<beta> / complex_of_real (sqrt 2),\n                 \\<beta> / complex_of_real (sqrt 2),\n                 \\<alpha> / complex_of_real (sqrt 2), 0, 0, 0, 0]])\\<rbrakk>\n       \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 $$ (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          [[\\<alpha> / complex_of_real (sqrt 2),\n                            \\<beta> / complex_of_real (sqrt 2),\n                            \\<beta> / complex_of_real (sqrt 2),\n                            \\<alpha> / complex_of_real (sqrt 2), 0, 0, 0,\n                            0]] $$\n                         (i, j)\n 2. dim_row (post_meas0 3 (alice \\<phi>) 0) =\n    dim_row\n     (Tensor.mat_of_cols_list 8\n       [[\\<alpha> / complex_of_real (sqrt 2),\n         \\<beta> / complex_of_real (sqrt 2),\n         \\<beta> / complex_of_real (sqrt 2),\n         \\<alpha> / complex_of_real (sqrt 2), 0, 0, 0, 0]])\n 3. dim_col (post_meas0 3 (alice \\<phi>) 0) =\n    dim_col\n     (Tensor.mat_of_cols_list 8\n       [[\\<alpha> / complex_of_real (sqrt 2),\n         \\<beta> / complex_of_real (sqrt 2),\n         \\<beta> / complex_of_real (sqrt 2),\n         \\<alpha> / complex_of_real (sqrt 2), 0, 0, 0, 0]])", "then"], ["proof (chain)\npicking this:\n  v =\n  Tensor.mat_of_cols_list 8\n   [[\\<alpha> / complex_of_real (sqrt 2),\n     \\<beta> / complex_of_real (sqrt 2), \\<beta> / complex_of_real (sqrt 2),\n     \\<alpha> / complex_of_real (sqrt 2), 0, 0, 0, 0]]", "show \"dim_row (post_meas0 3 (alice \\<phi>) 0) = dim_row v\""], ["proof (prove)\nusing this:\n  v =\n  Tensor.mat_of_cols_list 8\n   [[\\<alpha> / complex_of_real (sqrt 2),\n     \\<beta> / complex_of_real (sqrt 2), \\<beta> / complex_of_real (sqrt 2),\n     \\<alpha> / complex_of_real (sqrt 2), 0, 0, 0, 0]]\n\ngoal (1 subgoal):\n 1. dim_row (post_meas0 3 (alice \\<phi>) 0) = dim_row v", "using mat_of_cols_list_def post_meas0_def assms(1) alice_state ket_vec_def"], ["proof (prove)\nusing this:\n  v =\n  Tensor.mat_of_cols_list 8\n   [[\\<alpha> / complex_of_real (sqrt 2),\n     \\<beta> / complex_of_real (sqrt 2), \\<beta> / complex_of_real (sqrt 2),\n     \\<alpha> / complex_of_real (sqrt 2), 0, 0, 0, 0]]\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  post_meas0 ?n ?v ?i \\<equiv>\n  complex_of_real (1 / sqrt (prob0 ?n ?v ?i)) \\<cdot>\\<^sub>m\n  |Matrix.vec (2 ^ ?n)\n    (\\<lambda>j.\n        if \\<not> select_index ?n ?i j then ?v $$ (j, 0) else 0)\\<rangle>\n  state 1 \\<phi>\n  state 1 ?\\<phi> \\<Longrightarrow> state 3 (alice ?\\<phi>)\n  |?v\\<rangle> \\<equiv> Matrix.mat (dim_vec ?v) 1 (\\<lambda>(i, j). ?v $ i)\n\ngoal (1 subgoal):\n 1. dim_row (post_meas0 3 (alice \\<phi>) 0) = dim_row v", "by simp"], ["proof (state)\nthis:\n  dim_row (post_meas0 3 (alice \\<phi>) 0) = dim_row v\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       [[\\<alpha> / complex_of_real (sqrt 2),\n                         \\<beta> / complex_of_real (sqrt 2),\n                         \\<beta> / complex_of_real (sqrt 2),\n                         \\<alpha> / complex_of_real (sqrt 2), 0, 0, 0, 0]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               [[\\<alpha> / complex_of_real (sqrt 2),\n                 \\<beta> / complex_of_real (sqrt 2),\n                 \\<beta> / complex_of_real (sqrt 2),\n                 \\<alpha> / complex_of_real (sqrt 2), 0, 0, 0, 0]])\\<rbrakk>\n       \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 $$ (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          [[\\<alpha> / complex_of_real (sqrt 2),\n                            \\<beta> / complex_of_real (sqrt 2),\n                            \\<beta> / complex_of_real (sqrt 2),\n                            \\<alpha> / complex_of_real (sqrt 2), 0, 0, 0,\n                            0]] $$\n                         (i, j)\n 2. dim_col (post_meas0 3 (alice \\<phi>) 0) =\n    dim_col\n     (Tensor.mat_of_cols_list 8\n       [[\\<alpha> / complex_of_real (sqrt 2),\n         \\<beta> / complex_of_real (sqrt 2),\n         \\<beta> / complex_of_real (sqrt 2),\n         \\<alpha> / complex_of_real (sqrt 2), 0, 0, 0, 0]])", "show \"dim_col (post_meas0 3 (alice \\<phi>) 0) = dim_col v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col (post_meas0 3 (alice \\<phi>) 0) = dim_col v", "using mat_of_cols_list_def post_meas0_def assms(1) alice_state ket_vec_def asm"], ["proof (prove)\nusing this:\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  post_meas0 ?n ?v ?i \\<equiv>\n  complex_of_real (1 / sqrt (prob0 ?n ?v ?i)) \\<cdot>\\<^sub>m\n  |Matrix.vec (2 ^ ?n)\n    (\\<lambda>j.\n        if \\<not> select_index ?n ?i j then ?v $$ (j, 0) else 0)\\<rangle>\n  state 1 \\<phi>\n  state 1 ?\\<phi> \\<Longrightarrow> state 3 (alice ?\\<phi>)\n  |?v\\<rangle> \\<equiv> Matrix.mat (dim_vec ?v) 1 (\\<lambda>(i, j). ?v $ i)\n  v =\n  Tensor.mat_of_cols_list 8\n   [[\\<alpha> / complex_of_real (sqrt 2),\n     \\<beta> / complex_of_real (sqrt 2), \\<beta> / complex_of_real (sqrt 2),\n     \\<alpha> / complex_of_real (sqrt 2), 0, 0, 0, 0]]\n\ngoal (1 subgoal):\n 1. dim_col (post_meas0 3 (alice \\<phi>) 0) = dim_col v", "by simp"], ["proof (state)\nthis:\n  dim_col (post_meas0 3 (alice \\<phi>) 0) = dim_col v\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       [[\\<alpha> / complex_of_real (sqrt 2),\n                         \\<beta> / complex_of_real (sqrt 2),\n                         \\<beta> / complex_of_real (sqrt 2),\n                         \\<alpha> / complex_of_real (sqrt 2), 0, 0, 0, 0]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               [[\\<alpha> / complex_of_real (sqrt 2),\n                 \\<beta> / complex_of_real (sqrt 2),\n                 \\<beta> / complex_of_real (sqrt 2),\n                 \\<alpha> / complex_of_real (sqrt 2), 0, 0, 0, 0]])\\<rbrakk>\n       \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 $$ (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          [[\\<alpha> / complex_of_real (sqrt 2),\n                            \\<beta> / complex_of_real (sqrt 2),\n                            \\<beta> / complex_of_real (sqrt 2),\n                            \\<alpha> / complex_of_real (sqrt 2), 0, 0, 0,\n                            0]] $$\n                         (i, j)", "show \"\\<And>i j. i<dim_row v \\<Longrightarrow> j<dim_col v \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 $$ (i,j) = v $$ (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 $$ (i, j) =\n                         v $$ (i, j)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 $$ (i, j) =\n                         v $$ (i, j)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 $$ (i, j) =\n                         v $$ (i, j)", "assume \"i < dim_row v\" and \"j < dim_col v\""], ["proof (state)\nthis:\n  i < dim_row v\n  j < dim_col v\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 $$ (i, j) =\n                         v $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i < dim_row v\n  j < dim_col v", "have \"i \\<in> {0..<8} \\<and> j = 0\""], ["proof (prove)\nusing this:\n  i < dim_row v\n  j < dim_col v\n\ngoal (1 subgoal):\n 1. i \\<in> {0..<8} \\<and> j = 0", "using asm set_8_atLeast0 mat_of_cols_list_def"], ["proof (prove)\nusing this:\n  i < dim_row v\n  j < dim_col v\n  v =\n  Tensor.mat_of_cols_list 8\n   [[\\<alpha> / complex_of_real (sqrt 2),\n     \\<beta> / complex_of_real (sqrt 2), \\<beta> / complex_of_real (sqrt 2),\n     \\<alpha> / complex_of_real (sqrt 2), 0, 0, 0, 0]]\n  {0..<8} = {0, 1, 2, 3, 4, 5, 6, 7}\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n\ngoal (1 subgoal):\n 1. i \\<in> {0..<8} \\<and> j = 0", "by auto"], ["proof (state)\nthis:\n  i \\<in> {0..<8} \\<and> j = 0\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 $$ (i, j) =\n                         v $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i \\<in> {0..<8} \\<and> j = 0", "show \"post_meas0 3 (alice \\<phi>) 0 $$ (i, j) = v $$ (i, j)\""], ["proof (prove)\nusing this:\n  i \\<in> {0..<8} \\<and> j = 0\n\ngoal (1 subgoal):\n 1. post_meas0 3 (alice \\<phi>) 0 $$ (i, j) = v $$ (i, j)", "using post_meas0_def assms asm mat_of_cols_list_def ket_vec_def"], ["proof (prove)\nusing this:\n  i \\<in> {0..<8} \\<and> j = 0\n  post_meas0 ?n ?v ?i \\<equiv>\n  complex_of_real (1 / sqrt (prob0 ?n ?v ?i)) \\<cdot>\\<^sub>m\n  |Matrix.vec (2 ^ ?n)\n    (\\<lambda>j.\n        if \\<not> select_index ?n ?i j then ?v $$ (j, 0) else 0)\\<rangle>\n  state 1 \\<phi>\n  \\<alpha> = \\<phi> $$ (0, 0)\n  \\<beta> = \\<phi> $$ (1, 0)\n  v =\n  Tensor.mat_of_cols_list 8\n   [[\\<alpha> / complex_of_real (sqrt 2),\n     \\<beta> / complex_of_real (sqrt 2), \\<beta> / complex_of_real (sqrt 2),\n     \\<alpha> / complex_of_real (sqrt 2), 0, 0, 0, 0]]\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  |?v\\<rangle> \\<equiv> Matrix.mat (dim_vec ?v) 1 (\\<lambda>(i, j). ?v $ i)\n\ngoal (1 subgoal):\n 1. post_meas0 3 (alice \\<phi>) 0 $$ (i, j) = v $$ (i, j)", "apply (auto simp add: prob_index_0_alice)"], ["proof (prove)\ngoal (12 subgoals):\n 1. \\<lbrakk>\\<And>n v i.\n                post_meas0 n v i \\<equiv>\n                1 / complex_of_real (sqrt (prob0 n v i)) \\<cdot>\\<^sub>m\n                Matrix.mat (2 ^ n) (Suc 0)\n                 (\\<lambda>(ia, j).\n                     Matrix.vec (2 ^ n)\n                      (\\<lambda>j.\n                          if \\<not> select_index n i j then v $$ (j, 0)\n                          else 0) $\n                     ia);\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0);\n     v =\n     Matrix.mat 8 (Suc 0)\n      (\\<lambda>(i, j).\n          [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0, 0, 0, 0]] !\n          j !\n          i);\n     \\<And>nr cs.\n        Tensor.mat_of_cols_list nr cs =\n        Matrix.mat nr (length cs) (\\<lambda>(i, j). cs ! j ! i);\n     \\<And>v.\n        |v\\<rangle> \\<equiv>\n        Matrix.mat (dim_vec v) (Suc 0) (\\<lambda>(i, j). v $ i);\n     j = 0; i = 0; \\<not> select_index 3 0 0\\<rbrakk>\n    \\<Longrightarrow> alice \\<phi> $$ (0, 0) /\n                      complex_of_real (sqrt (1 / 2)) =\n                      \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)\n 2. \\<lbrakk>\\<And>n v i.\n                post_meas0 n v i \\<equiv>\n                1 / complex_of_real (sqrt (prob0 n v i)) \\<cdot>\\<^sub>m\n                Matrix.mat (2 ^ n) (Suc 0)\n                 (\\<lambda>(ia, j).\n                     Matrix.vec (2 ^ n)\n                      (\\<lambda>j.\n                          if \\<not> select_index n i j then v $$ (j, 0)\n                          else 0) $\n                     ia);\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0);\n     v =\n     Matrix.mat 8 (Suc 0)\n      (\\<lambda>(i, j).\n          [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0, 0, 0, 0]] !\n          j !\n          i);\n     \\<And>nr cs.\n        Tensor.mat_of_cols_list nr cs =\n        Matrix.mat nr (length cs) (\\<lambda>(i, j). cs ! j ! i);\n     \\<And>v.\n        |v\\<rangle> \\<equiv>\n        Matrix.mat (dim_vec v) (Suc 0) (\\<lambda>(i, j). v $ i);\n     j = 0; i = 0; select_index 3 0 0\\<rbrakk>\n    \\<Longrightarrow> \\<phi> $$ (0, 0) = 0\n 3. \\<lbrakk>\\<And>n v i.\n                post_meas0 n v i \\<equiv>\n                1 / complex_of_real (sqrt (prob0 n v i)) \\<cdot>\\<^sub>m\n                Matrix.mat (2 ^ n) (Suc 0)\n                 (\\<lambda>(ia, j).\n                     Matrix.vec (2 ^ n)\n                      (\\<lambda>j.\n                          if \\<not> select_index n i j then v $$ (j, 0)\n                          else 0) $\n                     ia);\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0);\n     v =\n     Matrix.mat 8 (Suc 0)\n      (\\<lambda>(i, j).\n          [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0, 0, 0, 0]] !\n          j !\n          i);\n     \\<And>nr cs.\n        Tensor.mat_of_cols_list nr cs =\n        Matrix.mat nr (length cs) (\\<lambda>(i, j). cs ! j ! i);\n     \\<And>v.\n        |v\\<rangle> \\<equiv>\n        Matrix.mat (dim_vec v) (Suc 0) (\\<lambda>(i, j). v $ i);\n     j = 0; i = Suc 0; \\<not> select_index 3 0 (Suc 0)\\<rbrakk>\n    \\<Longrightarrow> alice \\<phi> $$ (Suc 0, 0) /\n                      complex_of_real (sqrt (1 / 2)) =\n                      \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)\n 4. \\<lbrakk>\\<And>n v i.\n                post_meas0 n v i \\<equiv>\n                1 / complex_of_real (sqrt (prob0 n v i)) \\<cdot>\\<^sub>m\n                Matrix.mat (2 ^ n) (Suc 0)\n                 (\\<lambda>(ia, j).\n                     Matrix.vec (2 ^ n)\n                      (\\<lambda>j.\n                          if \\<not> select_index n i j then v $$ (j, 0)\n                          else 0) $\n                     ia);\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0);\n     v =\n     Matrix.mat 8 (Suc 0)\n      (\\<lambda>(i, j).\n          [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0, 0, 0, 0]] !\n          j !\n          i);\n     \\<And>nr cs.\n        Tensor.mat_of_cols_list nr cs =\n        Matrix.mat nr (length cs) (\\<lambda>(i, j). cs ! j ! i);\n     \\<And>v.\n        |v\\<rangle> \\<equiv>\n        Matrix.mat (dim_vec v) (Suc 0) (\\<lambda>(i, j). v $ i);\n     j = 0; i = Suc 0; select_index 3 0 (Suc 0)\\<rbrakk>\n    \\<Longrightarrow> \\<phi> $$ (Suc 0, 0) = 0\n 5. \\<lbrakk>\\<And>n v i.\n                post_meas0 n v i \\<equiv>\n                1 / complex_of_real (sqrt (prob0 n v i)) \\<cdot>\\<^sub>m\n                Matrix.mat (2 ^ n) (Suc 0)\n                 (\\<lambda>(ia, j).\n                     Matrix.vec (2 ^ n)\n                      (\\<lambda>j.\n                          if \\<not> select_index n i j then v $$ (j, 0)\n                          else 0) $\n                     ia);\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0);\n     v =\n     Matrix.mat 8 (Suc 0)\n      (\\<lambda>(i, j).\n          [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0, 0, 0, 0]] !\n          j !\n          i);\n     \\<And>nr cs.\n        Tensor.mat_of_cols_list nr cs =\n        Matrix.mat nr (length cs) (\\<lambda>(i, j). cs ! j ! i);\n     \\<And>v.\n        |v\\<rangle> \\<equiv>\n        Matrix.mat (dim_vec v) (Suc 0) (\\<lambda>(i, j). v $ i);\n     j = 0; i = 2; \\<not> select_index 3 0 2\\<rbrakk>\n    \\<Longrightarrow> alice \\<phi> $$ (2, 0) /\n                      complex_of_real (sqrt (1 / 2)) =\n                      \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)\n 6. \\<lbrakk>\\<And>n v i.\n                post_meas0 n v i \\<equiv>\n                1 / complex_of_real (sqrt (prob0 n v i)) \\<cdot>\\<^sub>m\n                Matrix.mat (2 ^ n) (Suc 0)\n                 (\\<lambda>(ia, j).\n                     Matrix.vec (2 ^ n)\n                      (\\<lambda>j.\n                          if \\<not> select_index n i j then v $$ (j, 0)\n                          else 0) $\n                     ia);\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0);\n     v =\n     Matrix.mat 8 (Suc 0)\n      (\\<lambda>(i, j).\n          [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0, 0, 0, 0]] !\n          j !\n          i);\n     \\<And>nr cs.\n        Tensor.mat_of_cols_list nr cs =\n        Matrix.mat nr (length cs) (\\<lambda>(i, j). cs ! j ! i);\n     \\<And>v.\n        |v\\<rangle> \\<equiv>\n        Matrix.mat (dim_vec v) (Suc 0) (\\<lambda>(i, j). v $ i);\n     j = 0; i = 2; select_index 3 0 2\\<rbrakk>\n    \\<Longrightarrow> \\<phi> $$ (Suc 0, 0) = 0\n 7. \\<lbrakk>\\<And>n v i.\n                post_meas0 n v i \\<equiv>\n                1 / complex_of_real (sqrt (prob0 n v i)) \\<cdot>\\<^sub>m\n                Matrix.mat (2 ^ n) (Suc 0)\n                 (\\<lambda>(ia, j).\n                     Matrix.vec (2 ^ n)\n                      (\\<lambda>j.\n                          if \\<not> select_index n i j then v $$ (j, 0)\n                          else 0) $\n                     ia);\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0);\n     v =\n     Matrix.mat 8 (Suc 0)\n      (\\<lambda>(i, j).\n          [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0, 0, 0, 0]] !\n          j !\n          i);\n     \\<And>nr cs.\n        Tensor.mat_of_cols_list nr cs =\n        Matrix.mat nr (length cs) (\\<lambda>(i, j). cs ! j ! i);\n     \\<And>v.\n        |v\\<rangle> \\<equiv>\n        Matrix.mat (dim_vec v) (Suc 0) (\\<lambda>(i, j). v $ i);\n     j = 0; i = 3; \\<not> select_index 3 0 3\\<rbrakk>\n    \\<Longrightarrow> alice \\<phi> $$ (3, 0) /\n                      complex_of_real (sqrt (1 / 2)) =\n                      \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)\n 8. \\<lbrakk>\\<And>n v i.\n                post_meas0 n v i \\<equiv>\n                1 / complex_of_real (sqrt (prob0 n v i)) \\<cdot>\\<^sub>m\n                Matrix.mat (2 ^ n) (Suc 0)\n                 (\\<lambda>(ia, j).\n                     Matrix.vec (2 ^ n)\n                      (\\<lambda>j.\n                          if \\<not> select_index n i j then v $$ (j, 0)\n                          else 0) $\n                     ia);\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0);\n     v =\n     Matrix.mat 8 (Suc 0)\n      (\\<lambda>(i, j).\n          [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0, 0, 0, 0]] !\n          j !\n          i);\n     \\<And>nr cs.\n        Tensor.mat_of_cols_list nr cs =\n        Matrix.mat nr (length cs) (\\<lambda>(i, j). cs ! j ! i);\n     \\<And>v.\n        |v\\<rangle> \\<equiv>\n        Matrix.mat (dim_vec v) (Suc 0) (\\<lambda>(i, j). v $ i);\n     j = 0; i = 3; select_index 3 0 3\\<rbrakk>\n    \\<Longrightarrow> \\<phi> $$ (0, 0) = 0\n 9. \\<lbrakk>\\<And>n v i.\n                post_meas0 n v i \\<equiv>\n                1 / complex_of_real (sqrt (prob0 n v i)) \\<cdot>\\<^sub>m\n                Matrix.mat (2 ^ n) (Suc 0)\n                 (\\<lambda>(ia, j).\n                     Matrix.vec (2 ^ n)\n                      (\\<lambda>j.\n                          if \\<not> select_index n i j then v $$ (j, 0)\n                          else 0) $\n                     ia);\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0);\n     v =\n     Matrix.mat 8 (Suc 0)\n      (\\<lambda>(i, j).\n          [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0, 0, 0, 0]] !\n          j !\n          i);\n     \\<And>nr cs.\n        Tensor.mat_of_cols_list nr cs =\n        Matrix.mat nr (length cs) (\\<lambda>(i, j). cs ! j ! i);\n     \\<And>v.\n        |v\\<rangle> \\<equiv>\n        Matrix.mat (dim_vec v) (Suc 0) (\\<lambda>(i, j). v $ i);\n     j = 0; i = 4; \\<not> select_index 3 0 4\\<rbrakk>\n    \\<Longrightarrow> alice \\<phi> $$ (4, 0) = 0\n 10. \\<lbrakk>\\<And>n v i.\n                 post_meas0 n v i \\<equiv>\n                 1 / complex_of_real (sqrt (prob0 n v i)) \\<cdot>\\<^sub>m\n                 Matrix.mat (2 ^ n) (Suc 0)\n                  (\\<lambda>(ia, j).\n                      Matrix.vec (2 ^ n)\n                       (\\<lambda>j.\n                           if \\<not> select_index n i j then v $$ (j, 0)\n                           else 0) $\n                      ia);\n      state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n      \\<beta> = \\<phi> $$ (Suc 0, 0);\n      v =\n      Matrix.mat 8 (Suc 0)\n       (\\<lambda>(i, j).\n           [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n             \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n             \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n             \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0, 0, 0, 0]] !\n           j !\n           i);\n      \\<And>nr cs.\n         Tensor.mat_of_cols_list nr cs =\n         Matrix.mat nr (length cs) (\\<lambda>(i, j). cs ! j ! i);\n      \\<And>v.\n         |v\\<rangle> \\<equiv>\n         Matrix.mat (dim_vec v) (Suc 0) (\\<lambda>(i, j). v $ i);\n      j = 0; i = 5; \\<not> select_index 3 0 5\\<rbrakk>\n     \\<Longrightarrow> alice \\<phi> $$ (5, 0) = 0\nA total of 12 subgoals...", "using assms(1) alice_result select_index_def"], ["proof (prove)\nusing this:\n  state 1 \\<phi>\n  \\<lbrakk>state 1 ?\\<phi>; ?\\<alpha> = ?\\<phi> $$ (0, 0);\n   ?\\<beta> = ?\\<phi> $$ (1, 0)\\<rbrakk>\n  \\<Longrightarrow> alice ?\\<phi> =\n                    Tensor.mat_of_cols_list 8\n                     [[?\\<alpha> / 2, ?\\<beta> / 2, ?\\<beta> / 2,\n                       ?\\<alpha> / 2, ?\\<alpha> / 2, - ?\\<beta> / 2,\n                       - ?\\<beta> / 2, ?\\<alpha> / 2]]\n  select_index ?n ?i ?j \\<equiv>\n  ?i \\<le> ?n - 1 \\<and>\n  ?j \\<le> 2 ^ ?n - 1 \\<and> 2 ^ (?n - 1 - ?i) \\<le> ?j mod 2 ^ (?n - ?i)\n\ngoal (12 subgoals):\n 1. \\<lbrakk>\\<And>n v i.\n                post_meas0 n v i \\<equiv>\n                1 / complex_of_real (sqrt (prob0 n v i)) \\<cdot>\\<^sub>m\n                Matrix.mat (2 ^ n) (Suc 0)\n                 (\\<lambda>(ia, j).\n                     Matrix.vec (2 ^ n)\n                      (\\<lambda>j.\n                          if \\<not> select_index n i j then v $$ (j, 0)\n                          else 0) $\n                     ia);\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0);\n     v =\n     Matrix.mat 8 (Suc 0)\n      (\\<lambda>(i, j).\n          [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0, 0, 0, 0]] !\n          j !\n          i);\n     \\<And>nr cs.\n        Tensor.mat_of_cols_list nr cs =\n        Matrix.mat nr (length cs) (\\<lambda>(i, j). cs ! j ! i);\n     \\<And>v.\n        |v\\<rangle> \\<equiv>\n        Matrix.mat (dim_vec v) (Suc 0) (\\<lambda>(i, j). v $ i);\n     j = 0; i = 0; \\<not> select_index 3 0 0\\<rbrakk>\n    \\<Longrightarrow> alice \\<phi> $$ (0, 0) /\n                      complex_of_real (sqrt (1 / 2)) =\n                      \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)\n 2. \\<lbrakk>\\<And>n v i.\n                post_meas0 n v i \\<equiv>\n                1 / complex_of_real (sqrt (prob0 n v i)) \\<cdot>\\<^sub>m\n                Matrix.mat (2 ^ n) (Suc 0)\n                 (\\<lambda>(ia, j).\n                     Matrix.vec (2 ^ n)\n                      (\\<lambda>j.\n                          if \\<not> select_index n i j then v $$ (j, 0)\n                          else 0) $\n                     ia);\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0);\n     v =\n     Matrix.mat 8 (Suc 0)\n      (\\<lambda>(i, j).\n          [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0, 0, 0, 0]] !\n          j !\n          i);\n     \\<And>nr cs.\n        Tensor.mat_of_cols_list nr cs =\n        Matrix.mat nr (length cs) (\\<lambda>(i, j). cs ! j ! i);\n     \\<And>v.\n        |v\\<rangle> \\<equiv>\n        Matrix.mat (dim_vec v) (Suc 0) (\\<lambda>(i, j). v $ i);\n     j = 0; i = 0; select_index 3 0 0\\<rbrakk>\n    \\<Longrightarrow> \\<phi> $$ (0, 0) = 0\n 3. \\<lbrakk>\\<And>n v i.\n                post_meas0 n v i \\<equiv>\n                1 / complex_of_real (sqrt (prob0 n v i)) \\<cdot>\\<^sub>m\n                Matrix.mat (2 ^ n) (Suc 0)\n                 (\\<lambda>(ia, j).\n                     Matrix.vec (2 ^ n)\n                      (\\<lambda>j.\n                          if \\<not> select_index n i j then v $$ (j, 0)\n                          else 0) $\n                     ia);\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0);\n     v =\n     Matrix.mat 8 (Suc 0)\n      (\\<lambda>(i, j).\n          [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0, 0, 0, 0]] !\n          j !\n          i);\n     \\<And>nr cs.\n        Tensor.mat_of_cols_list nr cs =\n        Matrix.mat nr (length cs) (\\<lambda>(i, j). cs ! j ! i);\n     \\<And>v.\n        |v\\<rangle> \\<equiv>\n        Matrix.mat (dim_vec v) (Suc 0) (\\<lambda>(i, j). v $ i);\n     j = 0; i = Suc 0; \\<not> select_index 3 0 (Suc 0)\\<rbrakk>\n    \\<Longrightarrow> alice \\<phi> $$ (Suc 0, 0) /\n                      complex_of_real (sqrt (1 / 2)) =\n                      \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)\n 4. \\<lbrakk>\\<And>n v i.\n                post_meas0 n v i \\<equiv>\n                1 / complex_of_real (sqrt (prob0 n v i)) \\<cdot>\\<^sub>m\n                Matrix.mat (2 ^ n) (Suc 0)\n                 (\\<lambda>(ia, j).\n                     Matrix.vec (2 ^ n)\n                      (\\<lambda>j.\n                          if \\<not> select_index n i j then v $$ (j, 0)\n                          else 0) $\n                     ia);\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0);\n     v =\n     Matrix.mat 8 (Suc 0)\n      (\\<lambda>(i, j).\n          [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0, 0, 0, 0]] !\n          j !\n          i);\n     \\<And>nr cs.\n        Tensor.mat_of_cols_list nr cs =\n        Matrix.mat nr (length cs) (\\<lambda>(i, j). cs ! j ! i);\n     \\<And>v.\n        |v\\<rangle> \\<equiv>\n        Matrix.mat (dim_vec v) (Suc 0) (\\<lambda>(i, j). v $ i);\n     j = 0; i = Suc 0; select_index 3 0 (Suc 0)\\<rbrakk>\n    \\<Longrightarrow> \\<phi> $$ (Suc 0, 0) = 0\n 5. \\<lbrakk>\\<And>n v i.\n                post_meas0 n v i \\<equiv>\n                1 / complex_of_real (sqrt (prob0 n v i)) \\<cdot>\\<^sub>m\n                Matrix.mat (2 ^ n) (Suc 0)\n                 (\\<lambda>(ia, j).\n                     Matrix.vec (2 ^ n)\n                      (\\<lambda>j.\n                          if \\<not> select_index n i j then v $$ (j, 0)\n                          else 0) $\n                     ia);\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0);\n     v =\n     Matrix.mat 8 (Suc 0)\n      (\\<lambda>(i, j).\n          [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0, 0, 0, 0]] !\n          j !\n          i);\n     \\<And>nr cs.\n        Tensor.mat_of_cols_list nr cs =\n        Matrix.mat nr (length cs) (\\<lambda>(i, j). cs ! j ! i);\n     \\<And>v.\n        |v\\<rangle> \\<equiv>\n        Matrix.mat (dim_vec v) (Suc 0) (\\<lambda>(i, j). v $ i);\n     j = 0; i = 2; \\<not> select_index 3 0 2\\<rbrakk>\n    \\<Longrightarrow> alice \\<phi> $$ (2, 0) /\n                      complex_of_real (sqrt (1 / 2)) =\n                      \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)\n 6. \\<lbrakk>\\<And>n v i.\n                post_meas0 n v i \\<equiv>\n                1 / complex_of_real (sqrt (prob0 n v i)) \\<cdot>\\<^sub>m\n                Matrix.mat (2 ^ n) (Suc 0)\n                 (\\<lambda>(ia, j).\n                     Matrix.vec (2 ^ n)\n                      (\\<lambda>j.\n                          if \\<not> select_index n i j then v $$ (j, 0)\n                          else 0) $\n                     ia);\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0);\n     v =\n     Matrix.mat 8 (Suc 0)\n      (\\<lambda>(i, j).\n          [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0, 0, 0, 0]] !\n          j !\n          i);\n     \\<And>nr cs.\n        Tensor.mat_of_cols_list nr cs =\n        Matrix.mat nr (length cs) (\\<lambda>(i, j). cs ! j ! i);\n     \\<And>v.\n        |v\\<rangle> \\<equiv>\n        Matrix.mat (dim_vec v) (Suc 0) (\\<lambda>(i, j). v $ i);\n     j = 0; i = 2; select_index 3 0 2\\<rbrakk>\n    \\<Longrightarrow> \\<phi> $$ (Suc 0, 0) = 0\n 7. \\<lbrakk>\\<And>n v i.\n                post_meas0 n v i \\<equiv>\n                1 / complex_of_real (sqrt (prob0 n v i)) \\<cdot>\\<^sub>m\n                Matrix.mat (2 ^ n) (Suc 0)\n                 (\\<lambda>(ia, j).\n                     Matrix.vec (2 ^ n)\n                      (\\<lambda>j.\n                          if \\<not> select_index n i j then v $$ (j, 0)\n                          else 0) $\n                     ia);\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0);\n     v =\n     Matrix.mat 8 (Suc 0)\n      (\\<lambda>(i, j).\n          [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0, 0, 0, 0]] !\n          j !\n          i);\n     \\<And>nr cs.\n        Tensor.mat_of_cols_list nr cs =\n        Matrix.mat nr (length cs) (\\<lambda>(i, j). cs ! j ! i);\n     \\<And>v.\n        |v\\<rangle> \\<equiv>\n        Matrix.mat (dim_vec v) (Suc 0) (\\<lambda>(i, j). v $ i);\n     j = 0; i = 3; \\<not> select_index 3 0 3\\<rbrakk>\n    \\<Longrightarrow> alice \\<phi> $$ (3, 0) /\n                      complex_of_real (sqrt (1 / 2)) =\n                      \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)\n 8. \\<lbrakk>\\<And>n v i.\n                post_meas0 n v i \\<equiv>\n                1 / complex_of_real (sqrt (prob0 n v i)) \\<cdot>\\<^sub>m\n                Matrix.mat (2 ^ n) (Suc 0)\n                 (\\<lambda>(ia, j).\n                     Matrix.vec (2 ^ n)\n                      (\\<lambda>j.\n                          if \\<not> select_index n i j then v $$ (j, 0)\n                          else 0) $\n                     ia);\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0);\n     v =\n     Matrix.mat 8 (Suc 0)\n      (\\<lambda>(i, j).\n          [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0, 0, 0, 0]] !\n          j !\n          i);\n     \\<And>nr cs.\n        Tensor.mat_of_cols_list nr cs =\n        Matrix.mat nr (length cs) (\\<lambda>(i, j). cs ! j ! i);\n     \\<And>v.\n        |v\\<rangle> \\<equiv>\n        Matrix.mat (dim_vec v) (Suc 0) (\\<lambda>(i, j). v $ i);\n     j = 0; i = 3; select_index 3 0 3\\<rbrakk>\n    \\<Longrightarrow> \\<phi> $$ (0, 0) = 0\n 9. \\<lbrakk>\\<And>n v i.\n                post_meas0 n v i \\<equiv>\n                1 / complex_of_real (sqrt (prob0 n v i)) \\<cdot>\\<^sub>m\n                Matrix.mat (2 ^ n) (Suc 0)\n                 (\\<lambda>(ia, j).\n                     Matrix.vec (2 ^ n)\n                      (\\<lambda>j.\n                          if \\<not> select_index n i j then v $$ (j, 0)\n                          else 0) $\n                     ia);\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0);\n     v =\n     Matrix.mat 8 (Suc 0)\n      (\\<lambda>(i, j).\n          [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n            \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0, 0, 0, 0]] !\n          j !\n          i);\n     \\<And>nr cs.\n        Tensor.mat_of_cols_list nr cs =\n        Matrix.mat nr (length cs) (\\<lambda>(i, j). cs ! j ! i);\n     \\<And>v.\n        |v\\<rangle> \\<equiv>\n        Matrix.mat (dim_vec v) (Suc 0) (\\<lambda>(i, j). v $ i);\n     j = 0; i = 4; \\<not> select_index 3 0 4\\<rbrakk>\n    \\<Longrightarrow> alice \\<phi> $$ (4, 0) = 0\n 10. \\<lbrakk>\\<And>n v i.\n                 post_meas0 n v i \\<equiv>\n                 1 / complex_of_real (sqrt (prob0 n v i)) \\<cdot>\\<^sub>m\n                 Matrix.mat (2 ^ n) (Suc 0)\n                  (\\<lambda>(ia, j).\n                      Matrix.vec (2 ^ n)\n                       (\\<lambda>j.\n                           if \\<not> select_index n i j then v $$ (j, 0)\n                           else 0) $\n                      ia);\n      state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n      \\<beta> = \\<phi> $$ (Suc 0, 0);\n      v =\n      Matrix.mat 8 (Suc 0)\n       (\\<lambda>(i, j).\n           [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n             \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n             \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n             \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0, 0, 0, 0]] !\n           j !\n           i);\n      \\<And>nr cs.\n         Tensor.mat_of_cols_list nr cs =\n         Matrix.mat nr (length cs) (\\<lambda>(i, j). cs ! j ! i);\n      \\<And>v.\n         |v\\<rangle> \\<equiv>\n         Matrix.mat (dim_vec v) (Suc 0) (\\<lambda>(i, j). v $ i);\n      j = 0; i = 5; \\<not> select_index 3 0 5\\<rbrakk>\n     \\<Longrightarrow> alice \\<phi> $$ (5, 0) = 0\nA total of 12 subgoals...", "by auto"], ["proof (state)\nthis:\n  post_meas0 3 (alice \\<phi>) 0 $$ (i, j) = v $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?i < dim_row v; ?j < dim_col v\\<rbrakk>\n  \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 $$ (?i, ?j) =\n                    v $$ (?i, ?j)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma post_meas1_index_0_alice:\n  assumes \"state 1 \\<phi>\" and \"\\<alpha> = \\<phi> $$ (0,0)\" and \"\\<beta> = \\<phi> $$ (1,0)\"\n  shows \"post_meas1 3 (alice \\<phi>) 0 = mat_of_cols_list 8 [[0,0,0,0,\\<alpha>/sqrt(2),-\\<beta>/sqrt(2),-\\<beta>/sqrt(2),\\<alpha>/sqrt(2)]]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. post_meas1 3 (alice \\<phi>) 0 =\n    Tensor.mat_of_cols_list 8\n     [[0, 0, 0, 0, \\<alpha> / complex_of_real (sqrt 2),\n       - \\<beta> / complex_of_real (sqrt 2),\n       - \\<beta> / complex_of_real (sqrt 2),\n       \\<alpha> / complex_of_real (sqrt 2)]]", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       [[0, 0, 0, 0, \\<alpha> / complex_of_real (sqrt 2),\n                         - \\<beta> / complex_of_real (sqrt 2),\n                         - \\<beta> / complex_of_real (sqrt 2),\n                         \\<alpha> / complex_of_real (sqrt 2)]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               [[0, 0, 0, 0, \\<alpha> / complex_of_real (sqrt 2),\n                 - \\<beta> / complex_of_real (sqrt 2),\n                 - \\<beta> / complex_of_real (sqrt 2),\n                 \\<alpha> / complex_of_real (sqrt 2)]])\\<rbrakk>\n       \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 $$ (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          [[0, 0, 0, 0, \\<alpha> / complex_of_real (sqrt 2),\n                            - \\<beta> / complex_of_real (sqrt 2),\n                            - \\<beta> / complex_of_real (sqrt 2),\n                            \\<alpha> / complex_of_real (sqrt 2)]] $$\n                         (i, j)\n 2. dim_row (post_meas1 3 (alice \\<phi>) 0) =\n    dim_row\n     (Tensor.mat_of_cols_list 8\n       [[0, 0, 0, 0, \\<alpha> / complex_of_real (sqrt 2),\n         - \\<beta> / complex_of_real (sqrt 2),\n         - \\<beta> / complex_of_real (sqrt 2),\n         \\<alpha> / complex_of_real (sqrt 2)]])\n 3. dim_col (post_meas1 3 (alice \\<phi>) 0) =\n    dim_col\n     (Tensor.mat_of_cols_list 8\n       [[0, 0, 0, 0, \\<alpha> / complex_of_real (sqrt 2),\n         - \\<beta> / complex_of_real (sqrt 2),\n         - \\<beta> / complex_of_real (sqrt 2),\n         \\<alpha> / complex_of_real (sqrt 2)]])", "define v where asm:\"v = mat_of_cols_list 8 [[0,0,0,0,\\<alpha>/sqrt(2),-\\<beta>/sqrt(2),-\\<beta>/sqrt(2),\\<alpha>/sqrt(2)]]\""], ["proof (state)\nthis:\n  v =\n  Tensor.mat_of_cols_list 8\n   [[0, 0, 0, 0, \\<alpha> / complex_of_real (sqrt 2),\n     - \\<beta> / complex_of_real (sqrt 2),\n     - \\<beta> / complex_of_real (sqrt 2),\n     \\<alpha> / complex_of_real (sqrt 2)]]\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       [[0, 0, 0, 0, \\<alpha> / complex_of_real (sqrt 2),\n                         - \\<beta> / complex_of_real (sqrt 2),\n                         - \\<beta> / complex_of_real (sqrt 2),\n                         \\<alpha> / complex_of_real (sqrt 2)]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               [[0, 0, 0, 0, \\<alpha> / complex_of_real (sqrt 2),\n                 - \\<beta> / complex_of_real (sqrt 2),\n                 - \\<beta> / complex_of_real (sqrt 2),\n                 \\<alpha> / complex_of_real (sqrt 2)]])\\<rbrakk>\n       \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 $$ (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          [[0, 0, 0, 0, \\<alpha> / complex_of_real (sqrt 2),\n                            - \\<beta> / complex_of_real (sqrt 2),\n                            - \\<beta> / complex_of_real (sqrt 2),\n                            \\<alpha> / complex_of_real (sqrt 2)]] $$\n                         (i, j)\n 2. dim_row (post_meas1 3 (alice \\<phi>) 0) =\n    dim_row\n     (Tensor.mat_of_cols_list 8\n       [[0, 0, 0, 0, \\<alpha> / complex_of_real (sqrt 2),\n         - \\<beta> / complex_of_real (sqrt 2),\n         - \\<beta> / complex_of_real (sqrt 2),\n         \\<alpha> / complex_of_real (sqrt 2)]])\n 3. dim_col (post_meas1 3 (alice \\<phi>) 0) =\n    dim_col\n     (Tensor.mat_of_cols_list 8\n       [[0, 0, 0, 0, \\<alpha> / complex_of_real (sqrt 2),\n         - \\<beta> / complex_of_real (sqrt 2),\n         - \\<beta> / complex_of_real (sqrt 2),\n         \\<alpha> / complex_of_real (sqrt 2)]])", "then"], ["proof (chain)\npicking this:\n  v =\n  Tensor.mat_of_cols_list 8\n   [[0, 0, 0, 0, \\<alpha> / complex_of_real (sqrt 2),\n     - \\<beta> / complex_of_real (sqrt 2),\n     - \\<beta> / complex_of_real (sqrt 2),\n     \\<alpha> / complex_of_real (sqrt 2)]]", "show \"dim_row (post_meas1 3 (alice \\<phi>) 0) = dim_row v\""], ["proof (prove)\nusing this:\n  v =\n  Tensor.mat_of_cols_list 8\n   [[0, 0, 0, 0, \\<alpha> / complex_of_real (sqrt 2),\n     - \\<beta> / complex_of_real (sqrt 2),\n     - \\<beta> / complex_of_real (sqrt 2),\n     \\<alpha> / complex_of_real (sqrt 2)]]\n\ngoal (1 subgoal):\n 1. dim_row (post_meas1 3 (alice \\<phi>) 0) = dim_row v", "using mat_of_cols_list_def post_meas1_def assms(1) alice_state ket_vec_def"], ["proof (prove)\nusing this:\n  v =\n  Tensor.mat_of_cols_list 8\n   [[0, 0, 0, 0, \\<alpha> / complex_of_real (sqrt 2),\n     - \\<beta> / complex_of_real (sqrt 2),\n     - \\<beta> / complex_of_real (sqrt 2),\n     \\<alpha> / complex_of_real (sqrt 2)]]\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  post_meas1 ?n ?v ?i \\<equiv>\n  complex_of_real (1 / sqrt (prob1 ?n ?v ?i)) \\<cdot>\\<^sub>m\n  |Matrix.vec (2 ^ ?n)\n    (\\<lambda>j. if select_index ?n ?i j then ?v $$ (j, 0) else 0)\\<rangle>\n  state 1 \\<phi>\n  state 1 ?\\<phi> \\<Longrightarrow> state 3 (alice ?\\<phi>)\n  |?v\\<rangle> \\<equiv> Matrix.mat (dim_vec ?v) 1 (\\<lambda>(i, j). ?v $ i)\n\ngoal (1 subgoal):\n 1. dim_row (post_meas1 3 (alice \\<phi>) 0) = dim_row v", "by simp"], ["proof (state)\nthis:\n  dim_row (post_meas1 3 (alice \\<phi>) 0) = dim_row v\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       [[0, 0, 0, 0, \\<alpha> / complex_of_real (sqrt 2),\n                         - \\<beta> / complex_of_real (sqrt 2),\n                         - \\<beta> / complex_of_real (sqrt 2),\n                         \\<alpha> / complex_of_real (sqrt 2)]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               [[0, 0, 0, 0, \\<alpha> / complex_of_real (sqrt 2),\n                 - \\<beta> / complex_of_real (sqrt 2),\n                 - \\<beta> / complex_of_real (sqrt 2),\n                 \\<alpha> / complex_of_real (sqrt 2)]])\\<rbrakk>\n       \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 $$ (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          [[0, 0, 0, 0, \\<alpha> / complex_of_real (sqrt 2),\n                            - \\<beta> / complex_of_real (sqrt 2),\n                            - \\<beta> / complex_of_real (sqrt 2),\n                            \\<alpha> / complex_of_real (sqrt 2)]] $$\n                         (i, j)\n 2. dim_col (post_meas1 3 (alice \\<phi>) 0) =\n    dim_col\n     (Tensor.mat_of_cols_list 8\n       [[0, 0, 0, 0, \\<alpha> / complex_of_real (sqrt 2),\n         - \\<beta> / complex_of_real (sqrt 2),\n         - \\<beta> / complex_of_real (sqrt 2),\n         \\<alpha> / complex_of_real (sqrt 2)]])", "show \"dim_col (post_meas1 3 (alice \\<phi>) 0) = dim_col v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col (post_meas1 3 (alice \\<phi>) 0) = dim_col v", "using mat_of_cols_list_def post_meas1_def assms(1) alice_state ket_vec_def asm"], ["proof (prove)\nusing this:\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  post_meas1 ?n ?v ?i \\<equiv>\n  complex_of_real (1 / sqrt (prob1 ?n ?v ?i)) \\<cdot>\\<^sub>m\n  |Matrix.vec (2 ^ ?n)\n    (\\<lambda>j. if select_index ?n ?i j then ?v $$ (j, 0) else 0)\\<rangle>\n  state 1 \\<phi>\n  state 1 ?\\<phi> \\<Longrightarrow> state 3 (alice ?\\<phi>)\n  |?v\\<rangle> \\<equiv> Matrix.mat (dim_vec ?v) 1 (\\<lambda>(i, j). ?v $ i)\n  v =\n  Tensor.mat_of_cols_list 8\n   [[0, 0, 0, 0, \\<alpha> / complex_of_real (sqrt 2),\n     - \\<beta> / complex_of_real (sqrt 2),\n     - \\<beta> / complex_of_real (sqrt 2),\n     \\<alpha> / complex_of_real (sqrt 2)]]\n\ngoal (1 subgoal):\n 1. dim_col (post_meas1 3 (alice \\<phi>) 0) = dim_col v", "by simp"], ["proof (state)\nthis:\n  dim_col (post_meas1 3 (alice \\<phi>) 0) = dim_col v\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       [[0, 0, 0, 0, \\<alpha> / complex_of_real (sqrt 2),\n                         - \\<beta> / complex_of_real (sqrt 2),\n                         - \\<beta> / complex_of_real (sqrt 2),\n                         \\<alpha> / complex_of_real (sqrt 2)]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               [[0, 0, 0, 0, \\<alpha> / complex_of_real (sqrt 2),\n                 - \\<beta> / complex_of_real (sqrt 2),\n                 - \\<beta> / complex_of_real (sqrt 2),\n                 \\<alpha> / complex_of_real (sqrt 2)]])\\<rbrakk>\n       \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 $$ (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          [[0, 0, 0, 0, \\<alpha> / complex_of_real (sqrt 2),\n                            - \\<beta> / complex_of_real (sqrt 2),\n                            - \\<beta> / complex_of_real (sqrt 2),\n                            \\<alpha> / complex_of_real (sqrt 2)]] $$\n                         (i, j)", "show \"\\<And>i j. i<dim_row v \\<Longrightarrow> j<dim_col v \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 $$ (i,j) = v $$ (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 $$ (i, j) =\n                         v $$ (i, j)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 $$ (i, j) =\n                         v $$ (i, j)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 $$ (i, j) =\n                         v $$ (i, j)", "assume \"i < dim_row v\" and \"j < dim_col v\""], ["proof (state)\nthis:\n  i < dim_row v\n  j < dim_col v\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 $$ (i, j) =\n                         v $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i < dim_row v\n  j < dim_col v", "have \"i \\<in> {0..<8} \\<and> j = 0\""], ["proof (prove)\nusing this:\n  i < dim_row v\n  j < dim_col v\n\ngoal (1 subgoal):\n 1. i \\<in> {0..<8} \\<and> j = 0", "using asm set_8_atLeast0 mat_of_cols_list_def"], ["proof (prove)\nusing this:\n  i < dim_row v\n  j < dim_col v\n  v =\n  Tensor.mat_of_cols_list 8\n   [[0, 0, 0, 0, \\<alpha> / complex_of_real (sqrt 2),\n     - \\<beta> / complex_of_real (sqrt 2),\n     - \\<beta> / complex_of_real (sqrt 2),\n     \\<alpha> / complex_of_real (sqrt 2)]]\n  {0..<8} = {0, 1, 2, 3, 4, 5, 6, 7}\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n\ngoal (1 subgoal):\n 1. i \\<in> {0..<8} \\<and> j = 0", "by auto"], ["proof (state)\nthis:\n  i \\<in> {0..<8} \\<and> j = 0\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 $$ (i, j) =\n                         v $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i \\<in> {0..<8} \\<and> j = 0", "show \"post_meas1 3 (alice \\<phi>) 0 $$ (i,j) = v $$ (i,j)\""], ["proof (prove)\nusing this:\n  i \\<in> {0..<8} \\<and> j = 0\n\ngoal (1 subgoal):\n 1. post_meas1 3 (alice \\<phi>) 0 $$ (i, j) = v $$ (i, j)", "using post_meas1_def assms asm mat_of_cols_list_def ket_vec_def"], ["proof (prove)\nusing this:\n  i \\<in> {0..<8} \\<and> j = 0\n  post_meas1 ?n ?v ?i \\<equiv>\n  complex_of_real (1 / sqrt (prob1 ?n ?v ?i)) \\<cdot>\\<^sub>m\n  |Matrix.vec (2 ^ ?n)\n    (\\<lambda>j. if select_index ?n ?i j then ?v $$ (j, 0) else 0)\\<rangle>\n  state 1 \\<phi>\n  \\<alpha> = \\<phi> $$ (0, 0)\n  \\<beta> = \\<phi> $$ (1, 0)\n  v =\n  Tensor.mat_of_cols_list 8\n   [[0, 0, 0, 0, \\<alpha> / complex_of_real (sqrt 2),\n     - \\<beta> / complex_of_real (sqrt 2),\n     - \\<beta> / complex_of_real (sqrt 2),\n     \\<alpha> / complex_of_real (sqrt 2)]]\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  |?v\\<rangle> \\<equiv> Matrix.mat (dim_vec ?v) 1 (\\<lambda>(i, j). ?v $ i)\n\ngoal (1 subgoal):\n 1. post_meas1 3 (alice \\<phi>) 0 $$ (i, j) = v $$ (i, j)", "apply (auto simp add: prob_index_0_alice)"], ["proof (prove)\ngoal (12 subgoals):\n 1. \\<lbrakk>\\<And>n v i.\n                post_meas1 n v i \\<equiv>\n                1 / complex_of_real (sqrt (prob1 n v i)) \\<cdot>\\<^sub>m\n                Matrix.mat (2 ^ n) (Suc 0)\n                 (\\<lambda>(ia, j).\n                     Matrix.vec (2 ^ n)\n                      (\\<lambda>j.\n                          if select_index n i j then v $$ (j, 0) else 0) $\n                     ia);\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0);\n     v =\n     Matrix.mat 8 (Suc 0)\n      (\\<lambda>(i, j).\n          [[0, 0, 0, 0, \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n            - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n            - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n            \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]] !\n          j !\n          i);\n     \\<And>nr cs.\n        Tensor.mat_of_cols_list nr cs =\n        Matrix.mat nr (length cs) (\\<lambda>(i, j). cs ! j ! i);\n     \\<And>v.\n        |v\\<rangle> \\<equiv>\n        Matrix.mat (dim_vec v) (Suc 0) (\\<lambda>(i, j). v $ i);\n     j = 0; i = 0; select_index 3 0 0\\<rbrakk>\n    \\<Longrightarrow> alice \\<phi> $$ (0, 0) = 0\n 2. \\<lbrakk>\\<And>n v i.\n                post_meas1 n v i \\<equiv>\n                1 / complex_of_real (sqrt (prob1 n v i)) \\<cdot>\\<^sub>m\n                Matrix.mat (2 ^ n) (Suc 0)\n                 (\\<lambda>(ia, j).\n                     Matrix.vec (2 ^ n)\n                      (\\<lambda>j.\n                          if select_index n i j then v $$ (j, 0) else 0) $\n                     ia);\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0);\n     v =\n     Matrix.mat 8 (Suc 0)\n      (\\<lambda>(i, j).\n          [[0, 0, 0, 0, \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n            - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n            - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n            \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]] !\n          j !\n          i);\n     \\<And>nr cs.\n        Tensor.mat_of_cols_list nr cs =\n        Matrix.mat nr (length cs) (\\<lambda>(i, j). cs ! j ! i);\n     \\<And>v.\n        |v\\<rangle> \\<equiv>\n        Matrix.mat (dim_vec v) (Suc 0) (\\<lambda>(i, j). v $ i);\n     j = 0; i = Suc 0; select_index 3 0 (Suc 0)\\<rbrakk>\n    \\<Longrightarrow> alice \\<phi> $$ (Suc 0, 0) = 0\n 3. \\<lbrakk>\\<And>n v i.\n                post_meas1 n v i \\<equiv>\n                1 / complex_of_real (sqrt (prob1 n v i)) \\<cdot>\\<^sub>m\n                Matrix.mat (2 ^ n) (Suc 0)\n                 (\\<lambda>(ia, j).\n                     Matrix.vec (2 ^ n)\n                      (\\<lambda>j.\n                          if select_index n i j then v $$ (j, 0) else 0) $\n                     ia);\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0);\n     v =\n     Matrix.mat 8 (Suc 0)\n      (\\<lambda>(i, j).\n          [[0, 0, 0, 0, \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n            - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n            - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n            \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]] !\n          j !\n          i);\n     \\<And>nr cs.\n        Tensor.mat_of_cols_list nr cs =\n        Matrix.mat nr (length cs) (\\<lambda>(i, j). cs ! j ! i);\n     \\<And>v.\n        |v\\<rangle> \\<equiv>\n        Matrix.mat (dim_vec v) (Suc 0) (\\<lambda>(i, j). v $ i);\n     j = 0; i = 2; select_index 3 0 2\\<rbrakk>\n    \\<Longrightarrow> alice \\<phi> $$ (2, 0) = 0\n 4. \\<lbrakk>\\<And>n v i.\n                post_meas1 n v i \\<equiv>\n                1 / complex_of_real (sqrt (prob1 n v i)) \\<cdot>\\<^sub>m\n                Matrix.mat (2 ^ n) (Suc 0)\n                 (\\<lambda>(ia, j).\n                     Matrix.vec (2 ^ n)\n                      (\\<lambda>j.\n                          if select_index n i j then v $$ (j, 0) else 0) $\n                     ia);\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0);\n     v =\n     Matrix.mat 8 (Suc 0)\n      (\\<lambda>(i, j).\n          [[0, 0, 0, 0, \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n            - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n            - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n            \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]] !\n          j !\n          i);\n     \\<And>nr cs.\n        Tensor.mat_of_cols_list nr cs =\n        Matrix.mat nr (length cs) (\\<lambda>(i, j). cs ! j ! i);\n     \\<And>v.\n        |v\\<rangle> \\<equiv>\n        Matrix.mat (dim_vec v) (Suc 0) (\\<lambda>(i, j). v $ i);\n     j = 0; i = 3; select_index 3 0 3\\<rbrakk>\n    \\<Longrightarrow> alice \\<phi> $$ (3, 0) = 0\n 5. \\<lbrakk>\\<And>n v i.\n                post_meas1 n v i \\<equiv>\n                1 / complex_of_real (sqrt (prob1 n v i)) \\<cdot>\\<^sub>m\n                Matrix.mat (2 ^ n) (Suc 0)\n                 (\\<lambda>(ia, j).\n                     Matrix.vec (2 ^ n)\n                      (\\<lambda>j.\n                          if select_index n i j then v $$ (j, 0) else 0) $\n                     ia);\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0);\n     v =\n     Matrix.mat 8 (Suc 0)\n      (\\<lambda>(i, j).\n          [[0, 0, 0, 0, \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n            - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n            - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n            \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]] !\n          j !\n          i);\n     \\<And>nr cs.\n        Tensor.mat_of_cols_list nr cs =\n        Matrix.mat nr (length cs) (\\<lambda>(i, j). cs ! j ! i);\n     \\<And>v.\n        |v\\<rangle> \\<equiv>\n        Matrix.mat (dim_vec v) (Suc 0) (\\<lambda>(i, j). v $ i);\n     j = 0; i = 4; select_index 3 0 4\\<rbrakk>\n    \\<Longrightarrow> alice \\<phi> $$ (4, 0) /\n                      complex_of_real (sqrt (1 / 2)) =\n                      \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)\n 6. \\<lbrakk>\\<And>n v i.\n                post_meas1 n v i \\<equiv>\n                1 / complex_of_real (sqrt (prob1 n v i)) \\<cdot>\\<^sub>m\n                Matrix.mat (2 ^ n) (Suc 0)\n                 (\\<lambda>(ia, j).\n                     Matrix.vec (2 ^ n)\n                      (\\<lambda>j.\n                          if select_index n i j then v $$ (j, 0) else 0) $\n                     ia);\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0);\n     v =\n     Matrix.mat 8 (Suc 0)\n      (\\<lambda>(i, j).\n          [[0, 0, 0, 0, \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n            - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n            - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n            \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]] !\n          j !\n          i);\n     \\<And>nr cs.\n        Tensor.mat_of_cols_list nr cs =\n        Matrix.mat nr (length cs) (\\<lambda>(i, j). cs ! j ! i);\n     \\<And>v.\n        |v\\<rangle> \\<equiv>\n        Matrix.mat (dim_vec v) (Suc 0) (\\<lambda>(i, j). v $ i);\n     j = 0; i = 4; \\<not> select_index 3 0 4\\<rbrakk>\n    \\<Longrightarrow> \\<phi> $$ (0, 0) = 0\n 7. \\<lbrakk>\\<And>n v i.\n                post_meas1 n v i \\<equiv>\n                1 / complex_of_real (sqrt (prob1 n v i)) \\<cdot>\\<^sub>m\n                Matrix.mat (2 ^ n) (Suc 0)\n                 (\\<lambda>(ia, j).\n                     Matrix.vec (2 ^ n)\n                      (\\<lambda>j.\n                          if select_index n i j then v $$ (j, 0) else 0) $\n                     ia);\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0);\n     v =\n     Matrix.mat 8 (Suc 0)\n      (\\<lambda>(i, j).\n          [[0, 0, 0, 0, \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n            - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n            - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n            \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]] !\n          j !\n          i);\n     \\<And>nr cs.\n        Tensor.mat_of_cols_list nr cs =\n        Matrix.mat nr (length cs) (\\<lambda>(i, j). cs ! j ! i);\n     \\<And>v.\n        |v\\<rangle> \\<equiv>\n        Matrix.mat (dim_vec v) (Suc 0) (\\<lambda>(i, j). v $ i);\n     j = 0; i = 5; select_index 3 0 5\\<rbrakk>\n    \\<Longrightarrow> alice \\<phi> $$ (5, 0) /\n                      complex_of_real (sqrt (1 / 2)) =\n                      - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2))\n 8. \\<lbrakk>\\<And>n v i.\n                post_meas1 n v i \\<equiv>\n                1 / complex_of_real (sqrt (prob1 n v i)) \\<cdot>\\<^sub>m\n                Matrix.mat (2 ^ n) (Suc 0)\n                 (\\<lambda>(ia, j).\n                     Matrix.vec (2 ^ n)\n                      (\\<lambda>j.\n                          if select_index n i j then v $$ (j, 0) else 0) $\n                     ia);\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0);\n     v =\n     Matrix.mat 8 (Suc 0)\n      (\\<lambda>(i, j).\n          [[0, 0, 0, 0, \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n            - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n            - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n            \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]] !\n          j !\n          i);\n     \\<And>nr cs.\n        Tensor.mat_of_cols_list nr cs =\n        Matrix.mat nr (length cs) (\\<lambda>(i, j). cs ! j ! i);\n     \\<And>v.\n        |v\\<rangle> \\<equiv>\n        Matrix.mat (dim_vec v) (Suc 0) (\\<lambda>(i, j). v $ i);\n     j = 0; i = 5; \\<not> select_index 3 0 5\\<rbrakk>\n    \\<Longrightarrow> \\<phi> $$ (Suc 0, 0) = 0\n 9. \\<lbrakk>\\<And>n v i.\n                post_meas1 n v i \\<equiv>\n                1 / complex_of_real (sqrt (prob1 n v i)) \\<cdot>\\<^sub>m\n                Matrix.mat (2 ^ n) (Suc 0)\n                 (\\<lambda>(ia, j).\n                     Matrix.vec (2 ^ n)\n                      (\\<lambda>j.\n                          if select_index n i j then v $$ (j, 0) else 0) $\n                     ia);\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0);\n     v =\n     Matrix.mat 8 (Suc 0)\n      (\\<lambda>(i, j).\n          [[0, 0, 0, 0, \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n            - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n            - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n            \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]] !\n          j !\n          i);\n     \\<And>nr cs.\n        Tensor.mat_of_cols_list nr cs =\n        Matrix.mat nr (length cs) (\\<lambda>(i, j). cs ! j ! i);\n     \\<And>v.\n        |v\\<rangle> \\<equiv>\n        Matrix.mat (dim_vec v) (Suc 0) (\\<lambda>(i, j). v $ i);\n     j = 0; i = 6; select_index 3 0 6\\<rbrakk>\n    \\<Longrightarrow> alice \\<phi> $$ (6, 0) /\n                      complex_of_real (sqrt (1 / 2)) =\n                      - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2))\n 10. \\<lbrakk>\\<And>n v i.\n                 post_meas1 n v i \\<equiv>\n                 1 / complex_of_real (sqrt (prob1 n v i)) \\<cdot>\\<^sub>m\n                 Matrix.mat (2 ^ n) (Suc 0)\n                  (\\<lambda>(ia, j).\n                      Matrix.vec (2 ^ n)\n                       (\\<lambda>j.\n                           if select_index n i j then v $$ (j, 0) else 0) $\n                      ia);\n      state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n      \\<beta> = \\<phi> $$ (Suc 0, 0);\n      v =\n      Matrix.mat 8 (Suc 0)\n       (\\<lambda>(i, j).\n           [[0, 0, 0, 0, \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n             - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n             - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n             \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]] !\n           j !\n           i);\n      \\<And>nr cs.\n         Tensor.mat_of_cols_list nr cs =\n         Matrix.mat nr (length cs) (\\<lambda>(i, j). cs ! j ! i);\n      \\<And>v.\n         |v\\<rangle> \\<equiv>\n         Matrix.mat (dim_vec v) (Suc 0) (\\<lambda>(i, j). v $ i);\n      j = 0; i = 6; \\<not> select_index 3 0 6\\<rbrakk>\n     \\<Longrightarrow> \\<phi> $$ (Suc 0, 0) = 0\nA total of 12 subgoals...", "using assms(1) alice_result select_index_def"], ["proof (prove)\nusing this:\n  state 1 \\<phi>\n  \\<lbrakk>state 1 ?\\<phi>; ?\\<alpha> = ?\\<phi> $$ (0, 0);\n   ?\\<beta> = ?\\<phi> $$ (1, 0)\\<rbrakk>\n  \\<Longrightarrow> alice ?\\<phi> =\n                    Tensor.mat_of_cols_list 8\n                     [[?\\<alpha> / 2, ?\\<beta> / 2, ?\\<beta> / 2,\n                       ?\\<alpha> / 2, ?\\<alpha> / 2, - ?\\<beta> / 2,\n                       - ?\\<beta> / 2, ?\\<alpha> / 2]]\n  select_index ?n ?i ?j \\<equiv>\n  ?i \\<le> ?n - 1 \\<and>\n  ?j \\<le> 2 ^ ?n - 1 \\<and> 2 ^ (?n - 1 - ?i) \\<le> ?j mod 2 ^ (?n - ?i)\n\ngoal (12 subgoals):\n 1. \\<lbrakk>\\<And>n v i.\n                post_meas1 n v i \\<equiv>\n                1 / complex_of_real (sqrt (prob1 n v i)) \\<cdot>\\<^sub>m\n                Matrix.mat (2 ^ n) (Suc 0)\n                 (\\<lambda>(ia, j).\n                     Matrix.vec (2 ^ n)\n                      (\\<lambda>j.\n                          if select_index n i j then v $$ (j, 0) else 0) $\n                     ia);\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0);\n     v =\n     Matrix.mat 8 (Suc 0)\n      (\\<lambda>(i, j).\n          [[0, 0, 0, 0, \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n            - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n            - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n            \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]] !\n          j !\n          i);\n     \\<And>nr cs.\n        Tensor.mat_of_cols_list nr cs =\n        Matrix.mat nr (length cs) (\\<lambda>(i, j). cs ! j ! i);\n     \\<And>v.\n        |v\\<rangle> \\<equiv>\n        Matrix.mat (dim_vec v) (Suc 0) (\\<lambda>(i, j). v $ i);\n     j = 0; i = 0; select_index 3 0 0\\<rbrakk>\n    \\<Longrightarrow> alice \\<phi> $$ (0, 0) = 0\n 2. \\<lbrakk>\\<And>n v i.\n                post_meas1 n v i \\<equiv>\n                1 / complex_of_real (sqrt (prob1 n v i)) \\<cdot>\\<^sub>m\n                Matrix.mat (2 ^ n) (Suc 0)\n                 (\\<lambda>(ia, j).\n                     Matrix.vec (2 ^ n)\n                      (\\<lambda>j.\n                          if select_index n i j then v $$ (j, 0) else 0) $\n                     ia);\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0);\n     v =\n     Matrix.mat 8 (Suc 0)\n      (\\<lambda>(i, j).\n          [[0, 0, 0, 0, \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n            - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n            - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n            \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]] !\n          j !\n          i);\n     \\<And>nr cs.\n        Tensor.mat_of_cols_list nr cs =\n        Matrix.mat nr (length cs) (\\<lambda>(i, j). cs ! j ! i);\n     \\<And>v.\n        |v\\<rangle> \\<equiv>\n        Matrix.mat (dim_vec v) (Suc 0) (\\<lambda>(i, j). v $ i);\n     j = 0; i = Suc 0; select_index 3 0 (Suc 0)\\<rbrakk>\n    \\<Longrightarrow> alice \\<phi> $$ (Suc 0, 0) = 0\n 3. \\<lbrakk>\\<And>n v i.\n                post_meas1 n v i \\<equiv>\n                1 / complex_of_real (sqrt (prob1 n v i)) \\<cdot>\\<^sub>m\n                Matrix.mat (2 ^ n) (Suc 0)\n                 (\\<lambda>(ia, j).\n                     Matrix.vec (2 ^ n)\n                      (\\<lambda>j.\n                          if select_index n i j then v $$ (j, 0) else 0) $\n                     ia);\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0);\n     v =\n     Matrix.mat 8 (Suc 0)\n      (\\<lambda>(i, j).\n          [[0, 0, 0, 0, \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n            - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n            - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n            \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]] !\n          j !\n          i);\n     \\<And>nr cs.\n        Tensor.mat_of_cols_list nr cs =\n        Matrix.mat nr (length cs) (\\<lambda>(i, j). cs ! j ! i);\n     \\<And>v.\n        |v\\<rangle> \\<equiv>\n        Matrix.mat (dim_vec v) (Suc 0) (\\<lambda>(i, j). v $ i);\n     j = 0; i = 2; select_index 3 0 2\\<rbrakk>\n    \\<Longrightarrow> alice \\<phi> $$ (2, 0) = 0\n 4. \\<lbrakk>\\<And>n v i.\n                post_meas1 n v i \\<equiv>\n                1 / complex_of_real (sqrt (prob1 n v i)) \\<cdot>\\<^sub>m\n                Matrix.mat (2 ^ n) (Suc 0)\n                 (\\<lambda>(ia, j).\n                     Matrix.vec (2 ^ n)\n                      (\\<lambda>j.\n                          if select_index n i j then v $$ (j, 0) else 0) $\n                     ia);\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0);\n     v =\n     Matrix.mat 8 (Suc 0)\n      (\\<lambda>(i, j).\n          [[0, 0, 0, 0, \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n            - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n            - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n            \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]] !\n          j !\n          i);\n     \\<And>nr cs.\n        Tensor.mat_of_cols_list nr cs =\n        Matrix.mat nr (length cs) (\\<lambda>(i, j). cs ! j ! i);\n     \\<And>v.\n        |v\\<rangle> \\<equiv>\n        Matrix.mat (dim_vec v) (Suc 0) (\\<lambda>(i, j). v $ i);\n     j = 0; i = 3; select_index 3 0 3\\<rbrakk>\n    \\<Longrightarrow> alice \\<phi> $$ (3, 0) = 0\n 5. \\<lbrakk>\\<And>n v i.\n                post_meas1 n v i \\<equiv>\n                1 / complex_of_real (sqrt (prob1 n v i)) \\<cdot>\\<^sub>m\n                Matrix.mat (2 ^ n) (Suc 0)\n                 (\\<lambda>(ia, j).\n                     Matrix.vec (2 ^ n)\n                      (\\<lambda>j.\n                          if select_index n i j then v $$ (j, 0) else 0) $\n                     ia);\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0);\n     v =\n     Matrix.mat 8 (Suc 0)\n      (\\<lambda>(i, j).\n          [[0, 0, 0, 0, \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n            - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n            - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n            \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]] !\n          j !\n          i);\n     \\<And>nr cs.\n        Tensor.mat_of_cols_list nr cs =\n        Matrix.mat nr (length cs) (\\<lambda>(i, j). cs ! j ! i);\n     \\<And>v.\n        |v\\<rangle> \\<equiv>\n        Matrix.mat (dim_vec v) (Suc 0) (\\<lambda>(i, j). v $ i);\n     j = 0; i = 4; select_index 3 0 4\\<rbrakk>\n    \\<Longrightarrow> alice \\<phi> $$ (4, 0) /\n                      complex_of_real (sqrt (1 / 2)) =\n                      \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)\n 6. \\<lbrakk>\\<And>n v i.\n                post_meas1 n v i \\<equiv>\n                1 / complex_of_real (sqrt (prob1 n v i)) \\<cdot>\\<^sub>m\n                Matrix.mat (2 ^ n) (Suc 0)\n                 (\\<lambda>(ia, j).\n                     Matrix.vec (2 ^ n)\n                      (\\<lambda>j.\n                          if select_index n i j then v $$ (j, 0) else 0) $\n                     ia);\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0);\n     v =\n     Matrix.mat 8 (Suc 0)\n      (\\<lambda>(i, j).\n          [[0, 0, 0, 0, \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n            - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n            - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n            \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]] !\n          j !\n          i);\n     \\<And>nr cs.\n        Tensor.mat_of_cols_list nr cs =\n        Matrix.mat nr (length cs) (\\<lambda>(i, j). cs ! j ! i);\n     \\<And>v.\n        |v\\<rangle> \\<equiv>\n        Matrix.mat (dim_vec v) (Suc 0) (\\<lambda>(i, j). v $ i);\n     j = 0; i = 4; \\<not> select_index 3 0 4\\<rbrakk>\n    \\<Longrightarrow> \\<phi> $$ (0, 0) = 0\n 7. \\<lbrakk>\\<And>n v i.\n                post_meas1 n v i \\<equiv>\n                1 / complex_of_real (sqrt (prob1 n v i)) \\<cdot>\\<^sub>m\n                Matrix.mat (2 ^ n) (Suc 0)\n                 (\\<lambda>(ia, j).\n                     Matrix.vec (2 ^ n)\n                      (\\<lambda>j.\n                          if select_index n i j then v $$ (j, 0) else 0) $\n                     ia);\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0);\n     v =\n     Matrix.mat 8 (Suc 0)\n      (\\<lambda>(i, j).\n          [[0, 0, 0, 0, \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n            - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n            - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n            \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]] !\n          j !\n          i);\n     \\<And>nr cs.\n        Tensor.mat_of_cols_list nr cs =\n        Matrix.mat nr (length cs) (\\<lambda>(i, j). cs ! j ! i);\n     \\<And>v.\n        |v\\<rangle> \\<equiv>\n        Matrix.mat (dim_vec v) (Suc 0) (\\<lambda>(i, j). v $ i);\n     j = 0; i = 5; select_index 3 0 5\\<rbrakk>\n    \\<Longrightarrow> alice \\<phi> $$ (5, 0) /\n                      complex_of_real (sqrt (1 / 2)) =\n                      - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2))\n 8. \\<lbrakk>\\<And>n v i.\n                post_meas1 n v i \\<equiv>\n                1 / complex_of_real (sqrt (prob1 n v i)) \\<cdot>\\<^sub>m\n                Matrix.mat (2 ^ n) (Suc 0)\n                 (\\<lambda>(ia, j).\n                     Matrix.vec (2 ^ n)\n                      (\\<lambda>j.\n                          if select_index n i j then v $$ (j, 0) else 0) $\n                     ia);\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0);\n     v =\n     Matrix.mat 8 (Suc 0)\n      (\\<lambda>(i, j).\n          [[0, 0, 0, 0, \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n            - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n            - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n            \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]] !\n          j !\n          i);\n     \\<And>nr cs.\n        Tensor.mat_of_cols_list nr cs =\n        Matrix.mat nr (length cs) (\\<lambda>(i, j). cs ! j ! i);\n     \\<And>v.\n        |v\\<rangle> \\<equiv>\n        Matrix.mat (dim_vec v) (Suc 0) (\\<lambda>(i, j). v $ i);\n     j = 0; i = 5; \\<not> select_index 3 0 5\\<rbrakk>\n    \\<Longrightarrow> \\<phi> $$ (Suc 0, 0) = 0\n 9. \\<lbrakk>\\<And>n v i.\n                post_meas1 n v i \\<equiv>\n                1 / complex_of_real (sqrt (prob1 n v i)) \\<cdot>\\<^sub>m\n                Matrix.mat (2 ^ n) (Suc 0)\n                 (\\<lambda>(ia, j).\n                     Matrix.vec (2 ^ n)\n                      (\\<lambda>j.\n                          if select_index n i j then v $$ (j, 0) else 0) $\n                     ia);\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0);\n     v =\n     Matrix.mat 8 (Suc 0)\n      (\\<lambda>(i, j).\n          [[0, 0, 0, 0, \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n            - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n            - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n            \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]] !\n          j !\n          i);\n     \\<And>nr cs.\n        Tensor.mat_of_cols_list nr cs =\n        Matrix.mat nr (length cs) (\\<lambda>(i, j). cs ! j ! i);\n     \\<And>v.\n        |v\\<rangle> \\<equiv>\n        Matrix.mat (dim_vec v) (Suc 0) (\\<lambda>(i, j). v $ i);\n     j = 0; i = 6; select_index 3 0 6\\<rbrakk>\n    \\<Longrightarrow> alice \\<phi> $$ (6, 0) /\n                      complex_of_real (sqrt (1 / 2)) =\n                      - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2))\n 10. \\<lbrakk>\\<And>n v i.\n                 post_meas1 n v i \\<equiv>\n                 1 / complex_of_real (sqrt (prob1 n v i)) \\<cdot>\\<^sub>m\n                 Matrix.mat (2 ^ n) (Suc 0)\n                  (\\<lambda>(ia, j).\n                      Matrix.vec (2 ^ n)\n                       (\\<lambda>j.\n                           if select_index n i j then v $$ (j, 0) else 0) $\n                      ia);\n      state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n      \\<beta> = \\<phi> $$ (Suc 0, 0);\n      v =\n      Matrix.mat 8 (Suc 0)\n       (\\<lambda>(i, j).\n           [[0, 0, 0, 0, \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n             - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n             - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n             \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]] !\n           j !\n           i);\n      \\<And>nr cs.\n         Tensor.mat_of_cols_list nr cs =\n         Matrix.mat nr (length cs) (\\<lambda>(i, j). cs ! j ! i);\n      \\<And>v.\n         |v\\<rangle> \\<equiv>\n         Matrix.mat (dim_vec v) (Suc 0) (\\<lambda>(i, j). v $ i);\n      j = 0; i = 6; \\<not> select_index 3 0 6\\<rbrakk>\n     \\<Longrightarrow> \\<phi> $$ (Suc 0, 0) = 0\nA total of 12 subgoals...", "by auto"], ["proof (state)\nthis:\n  post_meas1 3 (alice \\<phi>) 0 $$ (i, j) = v $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?i < dim_row v; ?j < dim_col v\\<rbrakk>\n  \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 $$ (?i, ?j) =\n                    v $$ (?i, ?j)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma post_meas0_index_0_alice_state [simp]:\n  assumes \"state 1 \\<phi>\"\n  shows \"state 3 (post_meas0 3 (alice \\<phi>) 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. state 3 (post_meas0 3 (alice \\<phi>) 0)", "using assms"], ["proof (prove)\nusing this:\n  state 1 \\<phi>\n\ngoal (1 subgoal):\n 1. state 3 (post_meas0 3 (alice \\<phi>) 0)", "by (simp add: prob_index_0_alice)"], ["", "lemma post_meas1_index_0_alice_state [simp]:\n  assumes \"state 1 \\<phi>\"\n  shows \"state 3 (post_meas1 3 (alice \\<phi>) 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. state 3 (post_meas1 3 (alice \\<phi>) 0)", "using assms"], ["proof (prove)\nusing this:\n  state 1 \\<phi>\n\ngoal (1 subgoal):\n 1. state 3 (post_meas1 3 (alice \\<phi>) 0)", "by (simp add: prob_index_0_alice)"], ["", "lemma Alice_case [simp]:\n  assumes \"state 1 \\<phi>\" and \"state 3 q\" and \"List.member (alice_meas \\<phi>) (p, q)\"\n  shows \"alice_pos \\<phi> q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. alice_pos \\<phi> q", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. alice_pos \\<phi> q", "define \\<alpha> \\<beta> where a0:\"\\<alpha> = \\<phi> $$ (0,0)\" and a1:\"\\<beta> = \\<phi> $$ (1,0)\""], ["proof (state)\nthis:\n  \\<alpha> = \\<phi> $$ (0, 0)\n  \\<beta> = \\<phi> $$ (1, 0)\n\ngoal (1 subgoal):\n 1. alice_pos \\<phi> q", "have f0:\"prob0 3 (Matrix.mat 8 (Suc 0) (\\<lambda>(i,j). [[\\<phi> $$ (0,0)/sqrt 2, \\<phi> $$ (Suc 0,0)/sqrt 2, \n                    \\<phi> $$ (Suc 0,0)/sqrt 2, \\<phi> $$ (0,0)/sqrt 2,0,0,0,0]]!j!i)) (Suc 0) = 1/2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob0 3\n     (Matrix.mat 8 (Suc 0)\n       (\\<lambda>(i, j).\n           [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n             \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n             \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n             \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0, 0, 0, 0]] !\n           j !\n           i))\n     (Suc 0) =\n    1 / 2", "using post_meas0_index_0_alice prob0_def mat_of_cols_list_def post_meas0_index_0_alice_state \nassms(1) a0 a1 select_index_3_subsets"], ["proof (prove)\nusing this:\n  \\<lbrakk>state 1 ?\\<phi>; ?\\<alpha> = ?\\<phi> $$ (0, 0);\n   ?\\<beta> = ?\\<phi> $$ (1, 0)\\<rbrakk>\n  \\<Longrightarrow> post_meas0 3 (alice ?\\<phi>) 0 =\n                    Tensor.mat_of_cols_list 8\n                     [[?\\<alpha> / complex_of_real (sqrt 2),\n                       ?\\<beta> / complex_of_real (sqrt 2),\n                       ?\\<beta> / complex_of_real (sqrt 2),\n                       ?\\<alpha> / complex_of_real (sqrt 2), 0, 0, 0, 0]]\n  prob0 ?n ?v ?i \\<equiv>\n  \\<Sum>j\\<in>{k |k. k < 2 ^ ?n \\<and> \\<not> select_index ?n ?i k}.\n    (cmod (?v $$ (j, 0)))\\<^sup>2\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  state 1 ?\\<phi> \\<Longrightarrow> state 3 (post_meas0 3 (alice ?\\<phi>) 0)\n  state 1 \\<phi>\n  \\<alpha> = \\<phi> $$ (0, 0)\n  \\<beta> = \\<phi> $$ (1, 0)\n  {j. select_index 3 0 j} = {4, 5, 6, 7} \\<and>\n  {j. j < 8 \\<and> \\<not> select_index 3 0 j} = {0, 1, 2, 3} \\<and>\n  {j. select_index 3 1 j} = {2, 3, 6, 7} \\<and>\n  {j. j < 8 \\<and> \\<not> select_index 3 1 j} = {0, 1, 4, 5}\n\ngoal (1 subgoal):\n 1. prob0 3\n     (Matrix.mat 8 (Suc 0)\n       (\\<lambda>(i, j).\n           [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n             \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n             \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n             \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0, 0, 0, 0]] !\n           j !\n           i))\n     (Suc 0) =\n    1 / 2", "by (auto simp add: norm_divide power_divide phi_vec_length)"], ["proof (state)\nthis:\n  prob0 3\n   (Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0, 0, 0, 0]] !\n         j !\n         i))\n   (Suc 0) =\n  1 / 2\n\ngoal (1 subgoal):\n 1. alice_pos \\<phi> q", "have f1:\"prob1 3 (Matrix.mat 8 (Suc 0) (\\<lambda>(i,j). [[\\<phi> $$ (0,0)/sqrt 2, \\<phi> $$ (Suc 0,0)/sqrt 2, \n                    \\<phi> $$ (Suc 0,0)/sqrt 2, \\<phi> $$ (0,0)/sqrt 2, 0, 0, 0, 0]] ! j ! i)) (Suc 0) = 1/2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob1 3\n     (Matrix.mat 8 (Suc 0)\n       (\\<lambda>(i, j).\n           [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n             \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n             \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n             \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0, 0, 0, 0]] !\n           j !\n           i))\n     (Suc 0) =\n    1 / 2", "using post_meas0_index_0_alice prob1_def mat_of_cols_list_def post_meas0_index_0_alice_state \nassms(1) a0 a1 select_index_3_subsets"], ["proof (prove)\nusing this:\n  \\<lbrakk>state 1 ?\\<phi>; ?\\<alpha> = ?\\<phi> $$ (0, 0);\n   ?\\<beta> = ?\\<phi> $$ (1, 0)\\<rbrakk>\n  \\<Longrightarrow> post_meas0 3 (alice ?\\<phi>) 0 =\n                    Tensor.mat_of_cols_list 8\n                     [[?\\<alpha> / complex_of_real (sqrt 2),\n                       ?\\<beta> / complex_of_real (sqrt 2),\n                       ?\\<beta> / complex_of_real (sqrt 2),\n                       ?\\<alpha> / complex_of_real (sqrt 2), 0, 0, 0, 0]]\n  prob1 ?n ?v ?i \\<equiv>\n  \\<Sum>j\\<in>{k |k. select_index ?n ?i k}. (cmod (?v $$ (j, 0)))\\<^sup>2\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  state 1 ?\\<phi> \\<Longrightarrow> state 3 (post_meas0 3 (alice ?\\<phi>) 0)\n  state 1 \\<phi>\n  \\<alpha> = \\<phi> $$ (0, 0)\n  \\<beta> = \\<phi> $$ (1, 0)\n  {j. select_index 3 0 j} = {4, 5, 6, 7} \\<and>\n  {j. j < 8 \\<and> \\<not> select_index 3 0 j} = {0, 1, 2, 3} \\<and>\n  {j. select_index 3 1 j} = {2, 3, 6, 7} \\<and>\n  {j. j < 8 \\<and> \\<not> select_index 3 1 j} = {0, 1, 4, 5}\n\ngoal (1 subgoal):\n 1. prob1 3\n     (Matrix.mat 8 (Suc 0)\n       (\\<lambda>(i, j).\n           [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n             \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n             \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n             \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0, 0, 0, 0]] !\n           j !\n           i))\n     (Suc 0) =\n    1 / 2", "by(auto simp add: norm_divide power_divide phi_vec_length algebra_simps)"], ["proof (state)\nthis:\n  prob1 3\n   (Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0, 0, 0, 0]] !\n         j !\n         i))\n   (Suc 0) =\n  1 / 2\n\ngoal (1 subgoal):\n 1. alice_pos \\<phi> q", "have f2:\"prob0 3 (Matrix.mat 8 (Suc 0) \n          (\\<lambda>(i,j). [[0,0,0,0,\\<phi> $$ (0,0)/complex_of_real (sqrt 2),-(\\<phi> $$ (Suc 0,0)/complex_of_real (sqrt 2)), \n-(\\<phi> $$ (Suc 0,0)/complex_of_real (sqrt 2)),\\<phi> $$ (0,0)/complex_of_real (sqrt 2)]] ! j ! i)) (Suc 0) = 1/2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob0 3\n     (Matrix.mat 8 (Suc 0)\n       (\\<lambda>(i, j).\n           [[0, 0, 0, 0, \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n             - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n             - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n             \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]] !\n           j !\n           i))\n     (Suc 0) =\n    1 / 2", "using post_meas1_index_0_alice prob0_def mat_of_cols_list_def post_meas1_index_0_alice_state \n      assms(1) a0 a1 select_index_3_subsets"], ["proof (prove)\nusing this:\n  \\<lbrakk>state 1 ?\\<phi>; ?\\<alpha> = ?\\<phi> $$ (0, 0);\n   ?\\<beta> = ?\\<phi> $$ (1, 0)\\<rbrakk>\n  \\<Longrightarrow> post_meas1 3 (alice ?\\<phi>) 0 =\n                    Tensor.mat_of_cols_list 8\n                     [[0, 0, 0, 0, ?\\<alpha> / complex_of_real (sqrt 2),\n                       - ?\\<beta> / complex_of_real (sqrt 2),\n                       - ?\\<beta> / complex_of_real (sqrt 2),\n                       ?\\<alpha> / complex_of_real (sqrt 2)]]\n  prob0 ?n ?v ?i \\<equiv>\n  \\<Sum>j\\<in>{k |k. k < 2 ^ ?n \\<and> \\<not> select_index ?n ?i k}.\n    (cmod (?v $$ (j, 0)))\\<^sup>2\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  state 1 ?\\<phi> \\<Longrightarrow> state 3 (post_meas1 3 (alice ?\\<phi>) 0)\n  state 1 \\<phi>\n  \\<alpha> = \\<phi> $$ (0, 0)\n  \\<beta> = \\<phi> $$ (1, 0)\n  {j. select_index 3 0 j} = {4, 5, 6, 7} \\<and>\n  {j. j < 8 \\<and> \\<not> select_index 3 0 j} = {0, 1, 2, 3} \\<and>\n  {j. select_index 3 1 j} = {2, 3, 6, 7} \\<and>\n  {j. j < 8 \\<and> \\<not> select_index 3 1 j} = {0, 1, 4, 5}\n\ngoal (1 subgoal):\n 1. prob0 3\n     (Matrix.mat 8 (Suc 0)\n       (\\<lambda>(i, j).\n           [[0, 0, 0, 0, \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n             - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n             - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n             \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]] !\n           j !\n           i))\n     (Suc 0) =\n    1 / 2", "by(auto simp add: norm_divide power_divide phi_vec_length)"], ["proof (state)\nthis:\n  prob0 3\n   (Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n           - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n           - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]] !\n         j !\n         i))\n   (Suc 0) =\n  1 / 2\n\ngoal (1 subgoal):\n 1. alice_pos \\<phi> q", "have f3:\"prob1 3 (Matrix.mat 8 (Suc 0) \n          (\\<lambda>(i,j). [[0,0,0,0,\\<phi> $$ (0,0)/complex_of_real (sqrt 2),-(\\<phi> $$ (Suc 0,0)/complex_of_real (sqrt 2)), \n-(\\<phi> $$ (Suc 0,0)/complex_of_real (sqrt 2)), \\<phi> $$ (0,0)/complex_of_real (sqrt 2)]] ! j ! i)) (Suc 0) = 1/2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob1 3\n     (Matrix.mat 8 (Suc 0)\n       (\\<lambda>(i, j).\n           [[0, 0, 0, 0, \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n             - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n             - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n             \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]] !\n           j !\n           i))\n     (Suc 0) =\n    1 / 2", "using post_meas1_index_0_alice prob1_def mat_of_cols_list_def post_meas1_index_0_alice_state \nassms(1) a0 a1 select_index_3_subsets"], ["proof (prove)\nusing this:\n  \\<lbrakk>state 1 ?\\<phi>; ?\\<alpha> = ?\\<phi> $$ (0, 0);\n   ?\\<beta> = ?\\<phi> $$ (1, 0)\\<rbrakk>\n  \\<Longrightarrow> post_meas1 3 (alice ?\\<phi>) 0 =\n                    Tensor.mat_of_cols_list 8\n                     [[0, 0, 0, 0, ?\\<alpha> / complex_of_real (sqrt 2),\n                       - ?\\<beta> / complex_of_real (sqrt 2),\n                       - ?\\<beta> / complex_of_real (sqrt 2),\n                       ?\\<alpha> / complex_of_real (sqrt 2)]]\n  prob1 ?n ?v ?i \\<equiv>\n  \\<Sum>j\\<in>{k |k. select_index ?n ?i k}. (cmod (?v $$ (j, 0)))\\<^sup>2\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  state 1 ?\\<phi> \\<Longrightarrow> state 3 (post_meas1 3 (alice ?\\<phi>) 0)\n  state 1 \\<phi>\n  \\<alpha> = \\<phi> $$ (0, 0)\n  \\<beta> = \\<phi> $$ (1, 0)\n  {j. select_index 3 0 j} = {4, 5, 6, 7} \\<and>\n  {j. j < 8 \\<and> \\<not> select_index 3 0 j} = {0, 1, 2, 3} \\<and>\n  {j. select_index 3 1 j} = {2, 3, 6, 7} \\<and>\n  {j. j < 8 \\<and> \\<not> select_index 3 1 j} = {0, 1, 4, 5}\n\ngoal (1 subgoal):\n 1. prob1 3\n     (Matrix.mat 8 (Suc 0)\n       (\\<lambda>(i, j).\n           [[0, 0, 0, 0, \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n             - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n             - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n             \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]] !\n           j !\n           i))\n     (Suc 0) =\n    1 / 2", "by(auto simp add: norm_divide power_divide phi_vec_length algebra_simps)"], ["proof (state)\nthis:\n  prob1 3\n   (Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n           - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n           - (\\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2)),\n           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]] !\n         j !\n         i))\n   (Suc 0) =\n  1 / 2\n\ngoal (1 subgoal):\n 1. alice_pos \\<phi> q", "have \"(p, q) = ((prob0 3 (alice \\<phi>) 0) * (prob0 3 (post_meas0 3 (alice \\<phi>) 0) 1), post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1) \\<or>\n        (p, q) = ((prob0 3 (alice \\<phi>) 0) * (prob1 3 (post_meas0 3 (alice \\<phi>) 0) 1), post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1) \\<or>\n        (p, q) = ((prob1 3 (alice \\<phi>) 0) * (prob0 3 (post_meas1 3 (alice \\<phi>) 0) 1), post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1) \\<or>\n        (p, q) = ((prob1 3 (alice \\<phi>) 0) * (prob1 3 (post_meas1 3 (alice \\<phi>) 0) 1), post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p, q) =\n    (prob0 3 (alice \\<phi>) 0 * prob0 3 (post_meas0 3 (alice \\<phi>) 0) 1,\n     post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1) \\<or>\n    (p, q) =\n    (prob0 3 (alice \\<phi>) 0 * prob1 3 (post_meas0 3 (alice \\<phi>) 0) 1,\n     post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1) \\<or>\n    (p, q) =\n    (prob1 3 (alice \\<phi>) 0 * prob0 3 (post_meas1 3 (alice \\<phi>) 0) 1,\n     post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1) \\<or>\n    (p, q) =\n    (prob1 3 (alice \\<phi>) 0 * prob1 3 (post_meas1 3 (alice \\<phi>) 0) 1,\n     post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1)", "using assms(3) alice_meas_def List.member_def"], ["proof (prove)\nusing this:\n  List.member (alice_meas \\<phi>) (p, q)\n  alice_meas ?\\<phi> =\n  [(prob0 3 (alice ?\\<phi>) 0 * prob0 3 (post_meas0 3 (alice ?\\<phi>) 0) 1,\n    post_meas0 3 (post_meas0 3 (alice ?\\<phi>) 0) 1),\n   (prob0 3 (alice ?\\<phi>) 0 * prob1 3 (post_meas0 3 (alice ?\\<phi>) 0) 1,\n    post_meas1 3 (post_meas0 3 (alice ?\\<phi>) 0) 1),\n   (prob1 3 (alice ?\\<phi>) 0 * prob0 3 (post_meas1 3 (alice ?\\<phi>) 0) 1,\n    post_meas0 3 (post_meas1 3 (alice ?\\<phi>) 0) 1),\n   (prob1 3 (alice ?\\<phi>) 0 * prob1 3 (post_meas1 3 (alice ?\\<phi>) 0) 1,\n    post_meas1 3 (post_meas1 3 (alice ?\\<phi>) 0) 1)]\n  List.member ?xs ?x = (?x \\<in> set ?xs)\n\ngoal (1 subgoal):\n 1. (p, q) =\n    (prob0 3 (alice \\<phi>) 0 * prob0 3 (post_meas0 3 (alice \\<phi>) 0) 1,\n     post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1) \\<or>\n    (p, q) =\n    (prob0 3 (alice \\<phi>) 0 * prob1 3 (post_meas0 3 (alice \\<phi>) 0) 1,\n     post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1) \\<or>\n    (p, q) =\n    (prob1 3 (alice \\<phi>) 0 * prob0 3 (post_meas1 3 (alice \\<phi>) 0) 1,\n     post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1) \\<or>\n    (p, q) =\n    (prob1 3 (alice \\<phi>) 0 * prob1 3 (post_meas1 3 (alice \\<phi>) 0) 1,\n     post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1)", "by(smt list.distinct(1) list.exhaust list.inject member_rec(1) member_rec(2))"], ["proof (state)\nthis:\n  (p, q) =\n  (prob0 3 (alice \\<phi>) 0 * prob0 3 (post_meas0 3 (alice \\<phi>) 0) 1,\n   post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1) \\<or>\n  (p, q) =\n  (prob0 3 (alice \\<phi>) 0 * prob1 3 (post_meas0 3 (alice \\<phi>) 0) 1,\n   post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1) \\<or>\n  (p, q) =\n  (prob1 3 (alice \\<phi>) 0 * prob0 3 (post_meas1 3 (alice \\<phi>) 0) 1,\n   post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1) \\<or>\n  (p, q) =\n  (prob1 3 (alice \\<phi>) 0 * prob1 3 (post_meas1 3 (alice \\<phi>) 0) 1,\n   post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1)\n\ngoal (1 subgoal):\n 1. alice_pos \\<phi> q", "then"], ["proof (chain)\npicking this:\n  (p, q) =\n  (prob0 3 (alice \\<phi>) 0 * prob0 3 (post_meas0 3 (alice \\<phi>) 0) 1,\n   post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1) \\<or>\n  (p, q) =\n  (prob0 3 (alice \\<phi>) 0 * prob1 3 (post_meas0 3 (alice \\<phi>) 0) 1,\n   post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1) \\<or>\n  (p, q) =\n  (prob1 3 (alice \\<phi>) 0 * prob0 3 (post_meas1 3 (alice \\<phi>) 0) 1,\n   post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1) \\<or>\n  (p, q) =\n  (prob1 3 (alice \\<phi>) 0 * prob1 3 (post_meas1 3 (alice \\<phi>) 0) 1,\n   post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1)", "have \"q = post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1 \\<or> q = post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1 \\<or>\n             q = post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1 \\<or> q = post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1\""], ["proof (prove)\nusing this:\n  (p, q) =\n  (prob0 3 (alice \\<phi>) 0 * prob0 3 (post_meas0 3 (alice \\<phi>) 0) 1,\n   post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1) \\<or>\n  (p, q) =\n  (prob0 3 (alice \\<phi>) 0 * prob1 3 (post_meas0 3 (alice \\<phi>) 0) 1,\n   post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1) \\<or>\n  (p, q) =\n  (prob1 3 (alice \\<phi>) 0 * prob0 3 (post_meas1 3 (alice \\<phi>) 0) 1,\n   post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1) \\<or>\n  (p, q) =\n  (prob1 3 (alice \\<phi>) 0 * prob1 3 (post_meas1 3 (alice \\<phi>) 0) 1,\n   post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1)\n\ngoal (1 subgoal):\n 1. q = post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1 \\<or>\n    q = post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1 \\<or>\n    q = post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1 \\<or>\n    q = post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1", "by auto"], ["proof (state)\nthis:\n  q = post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1 \\<or>\n  q = post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1 \\<or>\n  q = post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1 \\<or>\n  q = post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1\n\ngoal (1 subgoal):\n 1. alice_pos \\<phi> q", "moreover"], ["proof (state)\nthis:\n  q = post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1 \\<or>\n  q = post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1 \\<or>\n  q = post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1 \\<or>\n  q = post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1\n\ngoal (1 subgoal):\n 1. alice_pos \\<phi> q", "have \"post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1 = mat_of_cols_list 8 [[\\<alpha>,\\<beta>,0,0,0,0,0,0]]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1 =\n    Tensor.mat_of_cols_list 8 [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]]", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]])\\<rbrakk>\n       \\<Longrightarrow> post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1 $$\n                         (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]] $$\n                         (i, j)\n 2. dim_row (post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1) =\n    dim_row\n     (Tensor.mat_of_cols_list 8 [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]])\n 3. dim_col (post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1) =\n    dim_col\n     (Tensor.mat_of_cols_list 8 [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]])", "define v where asm:\"v = mat_of_cols_list 8 [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]]\""], ["proof (state)\nthis:\n  v = Tensor.mat_of_cols_list 8 [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]]\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]])\\<rbrakk>\n       \\<Longrightarrow> post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1 $$\n                         (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]] $$\n                         (i, j)\n 2. dim_row (post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1) =\n    dim_row\n     (Tensor.mat_of_cols_list 8 [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]])\n 3. dim_col (post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1) =\n    dim_col\n     (Tensor.mat_of_cols_list 8 [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]])", "then"], ["proof (chain)\npicking this:\n  v = Tensor.mat_of_cols_list 8 [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]]", "show \"dim_row (post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1) = dim_row v\""], ["proof (prove)\nusing this:\n  v = Tensor.mat_of_cols_list 8 [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]]\n\ngoal (1 subgoal):\n 1. dim_row (post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1) = dim_row v", "using mat_of_cols_list_def post_meas0_def ket_vec_def"], ["proof (prove)\nusing this:\n  v = Tensor.mat_of_cols_list 8 [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]]\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  post_meas0 ?n ?v ?i \\<equiv>\n  complex_of_real (1 / sqrt (prob0 ?n ?v ?i)) \\<cdot>\\<^sub>m\n  |Matrix.vec (2 ^ ?n)\n    (\\<lambda>j.\n        if \\<not> select_index ?n ?i j then ?v $$ (j, 0) else 0)\\<rangle>\n  |?v\\<rangle> \\<equiv> Matrix.mat (dim_vec ?v) 1 (\\<lambda>(i, j). ?v $ i)\n\ngoal (1 subgoal):\n 1. dim_row (post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1) = dim_row v", "by simp"], ["proof (state)\nthis:\n  dim_row (post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1) = dim_row v\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]])\\<rbrakk>\n       \\<Longrightarrow> post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1 $$\n                         (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]] $$\n                         (i, j)\n 2. dim_col (post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1) =\n    dim_col\n     (Tensor.mat_of_cols_list 8 [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]])", "show \"dim_col (post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1) = dim_col v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col (post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1) = dim_col v", "using mat_of_cols_list_def post_meas0_def ket_vec_def asm"], ["proof (prove)\nusing this:\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  post_meas0 ?n ?v ?i \\<equiv>\n  complex_of_real (1 / sqrt (prob0 ?n ?v ?i)) \\<cdot>\\<^sub>m\n  |Matrix.vec (2 ^ ?n)\n    (\\<lambda>j.\n        if \\<not> select_index ?n ?i j then ?v $$ (j, 0) else 0)\\<rangle>\n  |?v\\<rangle> \\<equiv> Matrix.mat (dim_vec ?v) 1 (\\<lambda>(i, j). ?v $ i)\n  v = Tensor.mat_of_cols_list 8 [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]]\n\ngoal (1 subgoal):\n 1. dim_col (post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1) = dim_col v", "by simp"], ["proof (state)\nthis:\n  dim_col (post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1) = dim_col v\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]])\\<rbrakk>\n       \\<Longrightarrow> post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1 $$\n                         (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]] $$\n                         (i, j)", "show \"\\<And>i j. i<dim_row v \\<Longrightarrow> j<dim_col v \\<Longrightarrow> post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1 $$ (i,j) = v $$ (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1 $$\n                         (i, j) =\n                         v $$ (i, j)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1 $$\n                         (i, j) =\n                         v $$ (i, j)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1 $$\n                         (i, j) =\n                         v $$ (i, j)", "assume \"i < dim_row v\" and \"j < dim_col v\""], ["proof (state)\nthis:\n  i < dim_row v\n  j < dim_col v\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1 $$\n                         (i, j) =\n                         v $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i < dim_row v\n  j < dim_col v", "have \"i \\<in> {0..<8} \\<and> j = 0\""], ["proof (prove)\nusing this:\n  i < dim_row v\n  j < dim_col v\n\ngoal (1 subgoal):\n 1. i \\<in> {0..<8} \\<and> j = 0", "using asm mat_of_cols_list_def"], ["proof (prove)\nusing this:\n  i < dim_row v\n  j < dim_col v\n  v = Tensor.mat_of_cols_list 8 [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]]\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n\ngoal (1 subgoal):\n 1. i \\<in> {0..<8} \\<and> j = 0", "by auto"], ["proof (state)\nthis:\n  i \\<in> {0..<8} \\<and> j = 0\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1 $$\n                         (i, j) =\n                         v $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i \\<in> {0..<8} \\<and> j = 0", "show \"post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1 $$ (i,j) = v $$ (i,j)\""], ["proof (prove)\nusing this:\n  i \\<in> {0..<8} \\<and> j = 0\n\ngoal (1 subgoal):\n 1. post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1 $$ (i, j) = v $$ (i, j)", "using post_meas0_index_0_alice assms(1) a0 a1"], ["proof (prove)\nusing this:\n  i \\<in> {0..<8} \\<and> j = 0\n  \\<lbrakk>state 1 ?\\<phi>; ?\\<alpha> = ?\\<phi> $$ (0, 0);\n   ?\\<beta> = ?\\<phi> $$ (1, 0)\\<rbrakk>\n  \\<Longrightarrow> post_meas0 3 (alice ?\\<phi>) 0 =\n                    Tensor.mat_of_cols_list 8\n                     [[?\\<alpha> / complex_of_real (sqrt 2),\n                       ?\\<beta> / complex_of_real (sqrt 2),\n                       ?\\<beta> / complex_of_real (sqrt 2),\n                       ?\\<alpha> / complex_of_real (sqrt 2), 0, 0, 0, 0]]\n  state 1 \\<phi>\n  \\<alpha> = \\<phi> $$ (0, 0)\n  \\<beta> = \\<phi> $$ (1, 0)\n\ngoal (1 subgoal):\n 1. post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1 $$ (i, j) = v $$ (i, j)", "apply (auto)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[\\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     0, 0, 0, 0]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 0\\<rbrakk>\n    \\<Longrightarrow> post_meas0 3\n                       (Tensor.mat_of_cols_list 8\n                         [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0,\n                           0, 0, 0]])\n                       (Suc 0) $$\n                      (0, 0) =\n                      v $$ (0, 0)\n 2. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[\\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     0, 0, 0, 0]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = Suc 0\\<rbrakk>\n    \\<Longrightarrow> post_meas0 3\n                       (Tensor.mat_of_cols_list 8\n                         [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0,\n                           0, 0, 0]])\n                       (Suc 0) $$\n                      (Suc 0, 0) =\n                      v $$ (Suc 0, 0)\n 3. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[\\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     0, 0, 0, 0]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 2\\<rbrakk>\n    \\<Longrightarrow> post_meas0 3\n                       (Tensor.mat_of_cols_list 8\n                         [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0,\n                           0, 0, 0]])\n                       (Suc 0) $$\n                      (2, 0) =\n                      v $$ (2, 0)\n 4. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[\\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     0, 0, 0, 0]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 3\\<rbrakk>\n    \\<Longrightarrow> post_meas0 3\n                       (Tensor.mat_of_cols_list 8\n                         [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0,\n                           0, 0, 0]])\n                       (Suc 0) $$\n                      (3, 0) =\n                      v $$ (3, 0)\n 5. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[\\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     0, 0, 0, 0]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 4\\<rbrakk>\n    \\<Longrightarrow> post_meas0 3\n                       (Tensor.mat_of_cols_list 8\n                         [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0,\n                           0, 0, 0]])\n                       (Suc 0) $$\n                      (4, 0) =\n                      v $$ (4, 0)\n 6. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[\\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     0, 0, 0, 0]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 5\\<rbrakk>\n    \\<Longrightarrow> post_meas0 3\n                       (Tensor.mat_of_cols_list 8\n                         [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0,\n                           0, 0, 0]])\n                       (Suc 0) $$\n                      (5, 0) =\n                      v $$ (5, 0)\n 7. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[\\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     0, 0, 0, 0]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 6\\<rbrakk>\n    \\<Longrightarrow> post_meas0 3\n                       (Tensor.mat_of_cols_list 8\n                         [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0,\n                           0, 0, 0]])\n                       (Suc 0) $$\n                      (6, 0) =\n                      v $$ (6, 0)\n 8. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[\\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     0, 0, 0, 0]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 7\\<rbrakk>\n    \\<Longrightarrow> post_meas0 3\n                       (Tensor.mat_of_cols_list 8\n                         [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0,\n                           0, 0, 0]])\n                       (Suc 0) $$\n                      (7, 0) =\n                      v $$ (7, 0)", "using post_meas0_def asm mat_of_cols_list_def ket_vec_def select_index_def"], ["proof (prove)\nusing this:\n  post_meas0 ?n ?v ?i \\<equiv>\n  complex_of_real (1 / sqrt (prob0 ?n ?v ?i)) \\<cdot>\\<^sub>m\n  |Matrix.vec (2 ^ ?n)\n    (\\<lambda>j.\n        if \\<not> select_index ?n ?i j then ?v $$ (j, 0) else 0)\\<rangle>\n  v = Tensor.mat_of_cols_list 8 [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]]\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  |?v\\<rangle> \\<equiv> Matrix.mat (dim_vec ?v) 1 (\\<lambda>(i, j). ?v $ i)\n  select_index ?n ?i ?j \\<equiv>\n  ?i \\<le> ?n - 1 \\<and>\n  ?j \\<le> 2 ^ ?n - 1 \\<and> 2 ^ (?n - 1 - ?i) \\<le> ?j mod 2 ^ (?n - ?i)\n\ngoal (8 subgoals):\n 1. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[\\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     0, 0, 0, 0]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 0\\<rbrakk>\n    \\<Longrightarrow> post_meas0 3\n                       (Tensor.mat_of_cols_list 8\n                         [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0,\n                           0, 0, 0]])\n                       (Suc 0) $$\n                      (0, 0) =\n                      v $$ (0, 0)\n 2. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[\\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     0, 0, 0, 0]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = Suc 0\\<rbrakk>\n    \\<Longrightarrow> post_meas0 3\n                       (Tensor.mat_of_cols_list 8\n                         [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0,\n                           0, 0, 0]])\n                       (Suc 0) $$\n                      (Suc 0, 0) =\n                      v $$ (Suc 0, 0)\n 3. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[\\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     0, 0, 0, 0]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 2\\<rbrakk>\n    \\<Longrightarrow> post_meas0 3\n                       (Tensor.mat_of_cols_list 8\n                         [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0,\n                           0, 0, 0]])\n                       (Suc 0) $$\n                      (2, 0) =\n                      v $$ (2, 0)\n 4. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[\\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     0, 0, 0, 0]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 3\\<rbrakk>\n    \\<Longrightarrow> post_meas0 3\n                       (Tensor.mat_of_cols_list 8\n                         [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0,\n                           0, 0, 0]])\n                       (Suc 0) $$\n                      (3, 0) =\n                      v $$ (3, 0)\n 5. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[\\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     0, 0, 0, 0]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 4\\<rbrakk>\n    \\<Longrightarrow> post_meas0 3\n                       (Tensor.mat_of_cols_list 8\n                         [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0,\n                           0, 0, 0]])\n                       (Suc 0) $$\n                      (4, 0) =\n                      v $$ (4, 0)\n 6. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[\\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     0, 0, 0, 0]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 5\\<rbrakk>\n    \\<Longrightarrow> post_meas0 3\n                       (Tensor.mat_of_cols_list 8\n                         [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0,\n                           0, 0, 0]])\n                       (Suc 0) $$\n                      (5, 0) =\n                      v $$ (5, 0)\n 7. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[\\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     0, 0, 0, 0]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 6\\<rbrakk>\n    \\<Longrightarrow> post_meas0 3\n                       (Tensor.mat_of_cols_list 8\n                         [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0,\n                           0, 0, 0]])\n                       (Suc 0) $$\n                      (6, 0) =\n                      v $$ (6, 0)\n 8. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[\\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     0, 0, 0, 0]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 7\\<rbrakk>\n    \\<Longrightarrow> post_meas0 3\n                       (Tensor.mat_of_cols_list 8\n                         [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0,\n                           0, 0, 0]])\n                       (Suc 0) $$\n                      (7, 0) =\n                      v $$ (7, 0)", "by (auto simp add: f0 real_sqrt_divide)"], ["proof (state)\nthis:\n  post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1 $$ (i, j) = v $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?i < dim_row v; ?j < dim_col v\\<rbrakk>\n  \\<Longrightarrow> post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1 $$\n                    (?i, ?j) =\n                    v $$ (?i, ?j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1 =\n  Tensor.mat_of_cols_list 8 [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]]\n\ngoal (1 subgoal):\n 1. alice_pos \\<phi> q", "moreover"], ["proof (state)\nthis:\n  post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1 =\n  Tensor.mat_of_cols_list 8 [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]]\n\ngoal (1 subgoal):\n 1. alice_pos \\<phi> q", "have \"post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1 = mat_of_cols_list 8 [[0,0,\\<beta>,\\<alpha>,0,0,0,0]]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1 =\n    Tensor.mat_of_cols_list 8 [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]]", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]])\\<rbrakk>\n       \\<Longrightarrow> post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1 $$\n                         (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]] $$\n                         (i, j)\n 2. dim_row (post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1) =\n    dim_row\n     (Tensor.mat_of_cols_list 8 [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]])\n 3. dim_col (post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1) =\n    dim_col\n     (Tensor.mat_of_cols_list 8 [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]])", "define v where asm:\"v = mat_of_cols_list 8 [[0,0,\\<beta>,\\<alpha>,0,0,0,0]]\""], ["proof (state)\nthis:\n  v = Tensor.mat_of_cols_list 8 [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]]\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]])\\<rbrakk>\n       \\<Longrightarrow> post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1 $$\n                         (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]] $$\n                         (i, j)\n 2. dim_row (post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1) =\n    dim_row\n     (Tensor.mat_of_cols_list 8 [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]])\n 3. dim_col (post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1) =\n    dim_col\n     (Tensor.mat_of_cols_list 8 [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]])", "then"], ["proof (chain)\npicking this:\n  v = Tensor.mat_of_cols_list 8 [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]]", "show \"dim_row (post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1) = dim_row v\""], ["proof (prove)\nusing this:\n  v = Tensor.mat_of_cols_list 8 [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]]\n\ngoal (1 subgoal):\n 1. dim_row (post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1) = dim_row v", "using mat_of_cols_list_def post_meas1_def ket_vec_def asm"], ["proof (prove)\nusing this:\n  v = Tensor.mat_of_cols_list 8 [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]]\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  post_meas1 ?n ?v ?i \\<equiv>\n  complex_of_real (1 / sqrt (prob1 ?n ?v ?i)) \\<cdot>\\<^sub>m\n  |Matrix.vec (2 ^ ?n)\n    (\\<lambda>j. if select_index ?n ?i j then ?v $$ (j, 0) else 0)\\<rangle>\n  |?v\\<rangle> \\<equiv> Matrix.mat (dim_vec ?v) 1 (\\<lambda>(i, j). ?v $ i)\n  v = Tensor.mat_of_cols_list 8 [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]]\n\ngoal (1 subgoal):\n 1. dim_row (post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1) = dim_row v", "by auto"], ["proof (state)\nthis:\n  dim_row (post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1) = dim_row v\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]])\\<rbrakk>\n       \\<Longrightarrow> post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1 $$\n                         (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]] $$\n                         (i, j)\n 2. dim_col (post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1) =\n    dim_col\n     (Tensor.mat_of_cols_list 8 [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]])", "show \"dim_col (post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1) = dim_col v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col (post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1) = dim_col v", "using mat_of_cols_list_def post_meas1_def ket_vec_def asm"], ["proof (prove)\nusing this:\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  post_meas1 ?n ?v ?i \\<equiv>\n  complex_of_real (1 / sqrt (prob1 ?n ?v ?i)) \\<cdot>\\<^sub>m\n  |Matrix.vec (2 ^ ?n)\n    (\\<lambda>j. if select_index ?n ?i j then ?v $$ (j, 0) else 0)\\<rangle>\n  |?v\\<rangle> \\<equiv> Matrix.mat (dim_vec ?v) 1 (\\<lambda>(i, j). ?v $ i)\n  v = Tensor.mat_of_cols_list 8 [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]]\n\ngoal (1 subgoal):\n 1. dim_col (post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1) = dim_col v", "by auto"], ["proof (state)\nthis:\n  dim_col (post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1) = dim_col v\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]])\\<rbrakk>\n       \\<Longrightarrow> post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1 $$\n                         (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]] $$\n                         (i, j)", "show \"\\<And>i j. i<dim_row v \\<Longrightarrow> j<dim_col v \\<Longrightarrow> post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1 $$ (i,j) = v $$ (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1 $$\n                         (i, j) =\n                         v $$ (i, j)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1 $$\n                         (i, j) =\n                         v $$ (i, j)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1 $$\n                         (i, j) =\n                         v $$ (i, j)", "assume \"i < dim_row v\" and \"j < dim_col v\""], ["proof (state)\nthis:\n  i < dim_row v\n  j < dim_col v\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1 $$\n                         (i, j) =\n                         v $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i < dim_row v\n  j < dim_col v", "have \"i \\<in> {0..<8} \\<and> j = 0\""], ["proof (prove)\nusing this:\n  i < dim_row v\n  j < dim_col v\n\ngoal (1 subgoal):\n 1. i \\<in> {0..<8} \\<and> j = 0", "using asm mat_of_cols_list_def"], ["proof (prove)\nusing this:\n  i < dim_row v\n  j < dim_col v\n  v = Tensor.mat_of_cols_list 8 [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]]\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n\ngoal (1 subgoal):\n 1. i \\<in> {0..<8} \\<and> j = 0", "by auto"], ["proof (state)\nthis:\n  i \\<in> {0..<8} \\<and> j = 0\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1 $$\n                         (i, j) =\n                         v $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i \\<in> {0..<8} \\<and> j = 0", "show \"post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1 $$ (i,j) = v $$ (i,j)\""], ["proof (prove)\nusing this:\n  i \\<in> {0..<8} \\<and> j = 0\n\ngoal (1 subgoal):\n 1. post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1 $$ (i, j) = v $$ (i, j)", "using post_meas0_index_0_alice assms(1) a0 a1"], ["proof (prove)\nusing this:\n  i \\<in> {0..<8} \\<and> j = 0\n  \\<lbrakk>state 1 ?\\<phi>; ?\\<alpha> = ?\\<phi> $$ (0, 0);\n   ?\\<beta> = ?\\<phi> $$ (1, 0)\\<rbrakk>\n  \\<Longrightarrow> post_meas0 3 (alice ?\\<phi>) 0 =\n                    Tensor.mat_of_cols_list 8\n                     [[?\\<alpha> / complex_of_real (sqrt 2),\n                       ?\\<beta> / complex_of_real (sqrt 2),\n                       ?\\<beta> / complex_of_real (sqrt 2),\n                       ?\\<alpha> / complex_of_real (sqrt 2), 0, 0, 0, 0]]\n  state 1 \\<phi>\n  \\<alpha> = \\<phi> $$ (0, 0)\n  \\<beta> = \\<phi> $$ (1, 0)\n\ngoal (1 subgoal):\n 1. post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1 $$ (i, j) = v $$ (i, j)", "apply (auto)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[\\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     0, 0, 0, 0]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 0\\<rbrakk>\n    \\<Longrightarrow> post_meas1 3\n                       (Tensor.mat_of_cols_list 8\n                         [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0,\n                           0, 0, 0]])\n                       (Suc 0) $$\n                      (0, 0) =\n                      v $$ (0, 0)\n 2. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[\\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     0, 0, 0, 0]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = Suc 0\\<rbrakk>\n    \\<Longrightarrow> post_meas1 3\n                       (Tensor.mat_of_cols_list 8\n                         [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0,\n                           0, 0, 0]])\n                       (Suc 0) $$\n                      (Suc 0, 0) =\n                      v $$ (Suc 0, 0)\n 3. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[\\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     0, 0, 0, 0]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 2\\<rbrakk>\n    \\<Longrightarrow> post_meas1 3\n                       (Tensor.mat_of_cols_list 8\n                         [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0,\n                           0, 0, 0]])\n                       (Suc 0) $$\n                      (2, 0) =\n                      v $$ (2, 0)\n 4. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[\\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     0, 0, 0, 0]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 3\\<rbrakk>\n    \\<Longrightarrow> post_meas1 3\n                       (Tensor.mat_of_cols_list 8\n                         [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0,\n                           0, 0, 0]])\n                       (Suc 0) $$\n                      (3, 0) =\n                      v $$ (3, 0)\n 5. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[\\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     0, 0, 0, 0]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 4\\<rbrakk>\n    \\<Longrightarrow> post_meas1 3\n                       (Tensor.mat_of_cols_list 8\n                         [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0,\n                           0, 0, 0]])\n                       (Suc 0) $$\n                      (4, 0) =\n                      v $$ (4, 0)\n 6. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[\\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     0, 0, 0, 0]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 5\\<rbrakk>\n    \\<Longrightarrow> post_meas1 3\n                       (Tensor.mat_of_cols_list 8\n                         [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0,\n                           0, 0, 0]])\n                       (Suc 0) $$\n                      (5, 0) =\n                      v $$ (5, 0)\n 7. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[\\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     0, 0, 0, 0]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 6\\<rbrakk>\n    \\<Longrightarrow> post_meas1 3\n                       (Tensor.mat_of_cols_list 8\n                         [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0,\n                           0, 0, 0]])\n                       (Suc 0) $$\n                      (6, 0) =\n                      v $$ (6, 0)\n 8. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[\\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     0, 0, 0, 0]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 7\\<rbrakk>\n    \\<Longrightarrow> post_meas1 3\n                       (Tensor.mat_of_cols_list 8\n                         [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0,\n                           0, 0, 0]])\n                       (Suc 0) $$\n                      (7, 0) =\n                      v $$ (7, 0)", "using post_meas1_def asm mat_of_cols_list_def ket_vec_def select_index_def"], ["proof (prove)\nusing this:\n  post_meas1 ?n ?v ?i \\<equiv>\n  complex_of_real (1 / sqrt (prob1 ?n ?v ?i)) \\<cdot>\\<^sub>m\n  |Matrix.vec (2 ^ ?n)\n    (\\<lambda>j. if select_index ?n ?i j then ?v $$ (j, 0) else 0)\\<rangle>\n  v = Tensor.mat_of_cols_list 8 [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]]\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  |?v\\<rangle> \\<equiv> Matrix.mat (dim_vec ?v) 1 (\\<lambda>(i, j). ?v $ i)\n  select_index ?n ?i ?j \\<equiv>\n  ?i \\<le> ?n - 1 \\<and>\n  ?j \\<le> 2 ^ ?n - 1 \\<and> 2 ^ (?n - 1 - ?i) \\<le> ?j mod 2 ^ (?n - ?i)\n\ngoal (8 subgoals):\n 1. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[\\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     0, 0, 0, 0]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 0\\<rbrakk>\n    \\<Longrightarrow> post_meas1 3\n                       (Tensor.mat_of_cols_list 8\n                         [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0,\n                           0, 0, 0]])\n                       (Suc 0) $$\n                      (0, 0) =\n                      v $$ (0, 0)\n 2. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[\\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     0, 0, 0, 0]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = Suc 0\\<rbrakk>\n    \\<Longrightarrow> post_meas1 3\n                       (Tensor.mat_of_cols_list 8\n                         [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0,\n                           0, 0, 0]])\n                       (Suc 0) $$\n                      (Suc 0, 0) =\n                      v $$ (Suc 0, 0)\n 3. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[\\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     0, 0, 0, 0]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 2\\<rbrakk>\n    \\<Longrightarrow> post_meas1 3\n                       (Tensor.mat_of_cols_list 8\n                         [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0,\n                           0, 0, 0]])\n                       (Suc 0) $$\n                      (2, 0) =\n                      v $$ (2, 0)\n 4. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[\\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     0, 0, 0, 0]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 3\\<rbrakk>\n    \\<Longrightarrow> post_meas1 3\n                       (Tensor.mat_of_cols_list 8\n                         [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0,\n                           0, 0, 0]])\n                       (Suc 0) $$\n                      (3, 0) =\n                      v $$ (3, 0)\n 5. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[\\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     0, 0, 0, 0]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 4\\<rbrakk>\n    \\<Longrightarrow> post_meas1 3\n                       (Tensor.mat_of_cols_list 8\n                         [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0,\n                           0, 0, 0]])\n                       (Suc 0) $$\n                      (4, 0) =\n                      v $$ (4, 0)\n 6. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[\\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     0, 0, 0, 0]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 5\\<rbrakk>\n    \\<Longrightarrow> post_meas1 3\n                       (Tensor.mat_of_cols_list 8\n                         [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0,\n                           0, 0, 0]])\n                       (Suc 0) $$\n                      (5, 0) =\n                      v $$ (5, 0)\n 7. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[\\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     0, 0, 0, 0]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 6\\<rbrakk>\n    \\<Longrightarrow> post_meas1 3\n                       (Tensor.mat_of_cols_list 8\n                         [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0,\n                           0, 0, 0]])\n                       (Suc 0) $$\n                      (6, 0) =\n                      v $$ (6, 0)\n 8. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas0 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[\\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (Suc 0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     0, 0, 0, 0]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 7\\<rbrakk>\n    \\<Longrightarrow> post_meas1 3\n                       (Tensor.mat_of_cols_list 8\n                         [[\\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (Suc 0, 0) / complex_of_real (sqrt 2),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2), 0,\n                           0, 0, 0]])\n                       (Suc 0) $$\n                      (7, 0) =\n                      v $$ (7, 0)", "by (auto simp add: f1 real_sqrt_divide)"], ["proof (state)\nthis:\n  post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1 $$ (i, j) = v $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?i < dim_row v; ?j < dim_col v\\<rbrakk>\n  \\<Longrightarrow> post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1 $$\n                    (?i, ?j) =\n                    v $$ (?i, ?j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1 =\n  Tensor.mat_of_cols_list 8 [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]]\n\ngoal (1 subgoal):\n 1. alice_pos \\<phi> q", "moreover"], ["proof (state)\nthis:\n  post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1 =\n  Tensor.mat_of_cols_list 8 [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]]\n\ngoal (1 subgoal):\n 1. alice_pos \\<phi> q", "have \"post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1 = mat_of_cols_list 8 [[0,0,0,0,\\<alpha>,-\\<beta>,0,0]]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1 =\n    Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]]", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]])\\<rbrakk>\n       \\<Longrightarrow> post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1 $$\n                         (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]] $$\n                         (i, j)\n 2. dim_row (post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1) =\n    dim_row\n     (Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]])\n 3. dim_col (post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1) =\n    dim_col\n     (Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]])", "define v where asm:\"v = mat_of_cols_list 8 [[0, 0, 0, 0, \\<alpha>, -\\<beta>, 0, 0]]\""], ["proof (state)\nthis:\n  v = Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]]\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]])\\<rbrakk>\n       \\<Longrightarrow> post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1 $$\n                         (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]] $$\n                         (i, j)\n 2. dim_row (post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1) =\n    dim_row\n     (Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]])\n 3. dim_col (post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1) =\n    dim_col\n     (Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]])", "then"], ["proof (chain)\npicking this:\n  v = Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]]", "show \"dim_row (post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1) = dim_row v\""], ["proof (prove)\nusing this:\n  v = Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]]\n\ngoal (1 subgoal):\n 1. dim_row (post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1) = dim_row v", "using mat_of_cols_list_def post_meas0_def ket_vec_def"], ["proof (prove)\nusing this:\n  v = Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]]\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  post_meas0 ?n ?v ?i \\<equiv>\n  complex_of_real (1 / sqrt (prob0 ?n ?v ?i)) \\<cdot>\\<^sub>m\n  |Matrix.vec (2 ^ ?n)\n    (\\<lambda>j.\n        if \\<not> select_index ?n ?i j then ?v $$ (j, 0) else 0)\\<rangle>\n  |?v\\<rangle> \\<equiv> Matrix.mat (dim_vec ?v) 1 (\\<lambda>(i, j). ?v $ i)\n\ngoal (1 subgoal):\n 1. dim_row (post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1) = dim_row v", "by simp"], ["proof (state)\nthis:\n  dim_row (post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1) = dim_row v\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]])\\<rbrakk>\n       \\<Longrightarrow> post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1 $$\n                         (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]] $$\n                         (i, j)\n 2. dim_col (post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1) =\n    dim_col\n     (Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]])", "show \"dim_col (post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1) = dim_col v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col (post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1) = dim_col v", "using mat_of_cols_list_def post_meas0_def ket_vec_def asm"], ["proof (prove)\nusing this:\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  post_meas0 ?n ?v ?i \\<equiv>\n  complex_of_real (1 / sqrt (prob0 ?n ?v ?i)) \\<cdot>\\<^sub>m\n  |Matrix.vec (2 ^ ?n)\n    (\\<lambda>j.\n        if \\<not> select_index ?n ?i j then ?v $$ (j, 0) else 0)\\<rangle>\n  |?v\\<rangle> \\<equiv> Matrix.mat (dim_vec ?v) 1 (\\<lambda>(i, j). ?v $ i)\n  v = Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]]\n\ngoal (1 subgoal):\n 1. dim_col (post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1) = dim_col v", "by simp"], ["proof (state)\nthis:\n  dim_col (post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1) = dim_col v\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]])\\<rbrakk>\n       \\<Longrightarrow> post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1 $$\n                         (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]] $$\n                         (i, j)", "show \"\\<And>i j. i<dim_row v \\<Longrightarrow> j<dim_col v \\<Longrightarrow> post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1 $$ (i,j) = v $$ (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1 $$\n                         (i, j) =\n                         v $$ (i, j)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1 $$\n                         (i, j) =\n                         v $$ (i, j)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1 $$\n                         (i, j) =\n                         v $$ (i, j)", "assume \"i < dim_row v\" and \"j < dim_col v\""], ["proof (state)\nthis:\n  i < dim_row v\n  j < dim_col v\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1 $$\n                         (i, j) =\n                         v $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i < dim_row v\n  j < dim_col v", "have \"i \\<in> {0..<8} \\<and> j = 0\""], ["proof (prove)\nusing this:\n  i < dim_row v\n  j < dim_col v\n\ngoal (1 subgoal):\n 1. i \\<in> {0..<8} \\<and> j = 0", "using asm mat_of_cols_list_def"], ["proof (prove)\nusing this:\n  i < dim_row v\n  j < dim_col v\n  v = Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]]\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n\ngoal (1 subgoal):\n 1. i \\<in> {0..<8} \\<and> j = 0", "by auto"], ["proof (state)\nthis:\n  i \\<in> {0..<8} \\<and> j = 0\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1 $$\n                         (i, j) =\n                         v $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i \\<in> {0..<8} \\<and> j = 0", "show \"post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1 $$ (i,j) = v $$ (i,j)\""], ["proof (prove)\nusing this:\n  i \\<in> {0..<8} \\<and> j = 0\n\ngoal (1 subgoal):\n 1. post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1 $$ (i, j) = v $$ (i, j)", "using post_meas1_index_0_alice assms(1) a0 a1"], ["proof (prove)\nusing this:\n  i \\<in> {0..<8} \\<and> j = 0\n  \\<lbrakk>state 1 ?\\<phi>; ?\\<alpha> = ?\\<phi> $$ (0, 0);\n   ?\\<beta> = ?\\<phi> $$ (1, 0)\\<rbrakk>\n  \\<Longrightarrow> post_meas1 3 (alice ?\\<phi>) 0 =\n                    Tensor.mat_of_cols_list 8\n                     [[0, 0, 0, 0, ?\\<alpha> / complex_of_real (sqrt 2),\n                       - ?\\<beta> / complex_of_real (sqrt 2),\n                       - ?\\<beta> / complex_of_real (sqrt 2),\n                       ?\\<alpha> / complex_of_real (sqrt 2)]]\n  state 1 \\<phi>\n  \\<alpha> = \\<phi> $$ (0, 0)\n  \\<beta> = \\<phi> $$ (1, 0)\n\ngoal (1 subgoal):\n 1. post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1 $$ (i, j) = v $$ (i, j)", "apply (auto)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[0, 0, 0, 0,\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2)]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 0\\<rbrakk>\n    \\<Longrightarrow> post_meas0 3\n                       (Tensor.mat_of_cols_list 8\n                         [[0, 0, 0, 0,\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]])\n                       (Suc 0) $$\n                      (0, 0) =\n                      v $$ (0, 0)\n 2. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[0, 0, 0, 0,\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2)]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = Suc 0\\<rbrakk>\n    \\<Longrightarrow> post_meas0 3\n                       (Tensor.mat_of_cols_list 8\n                         [[0, 0, 0, 0,\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]])\n                       (Suc 0) $$\n                      (Suc 0, 0) =\n                      v $$ (Suc 0, 0)\n 3. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[0, 0, 0, 0,\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2)]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 2\\<rbrakk>\n    \\<Longrightarrow> post_meas0 3\n                       (Tensor.mat_of_cols_list 8\n                         [[0, 0, 0, 0,\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]])\n                       (Suc 0) $$\n                      (2, 0) =\n                      v $$ (2, 0)\n 4. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[0, 0, 0, 0,\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2)]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 3\\<rbrakk>\n    \\<Longrightarrow> post_meas0 3\n                       (Tensor.mat_of_cols_list 8\n                         [[0, 0, 0, 0,\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]])\n                       (Suc 0) $$\n                      (3, 0) =\n                      v $$ (3, 0)\n 5. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[0, 0, 0, 0,\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2)]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 4\\<rbrakk>\n    \\<Longrightarrow> post_meas0 3\n                       (Tensor.mat_of_cols_list 8\n                         [[0, 0, 0, 0,\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]])\n                       (Suc 0) $$\n                      (4, 0) =\n                      v $$ (4, 0)\n 6. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[0, 0, 0, 0,\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2)]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 5\\<rbrakk>\n    \\<Longrightarrow> post_meas0 3\n                       (Tensor.mat_of_cols_list 8\n                         [[0, 0, 0, 0,\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]])\n                       (Suc 0) $$\n                      (5, 0) =\n                      v $$ (5, 0)\n 7. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[0, 0, 0, 0,\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2)]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 6\\<rbrakk>\n    \\<Longrightarrow> post_meas0 3\n                       (Tensor.mat_of_cols_list 8\n                         [[0, 0, 0, 0,\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]])\n                       (Suc 0) $$\n                      (6, 0) =\n                      v $$ (6, 0)\n 8. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[0, 0, 0, 0,\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2)]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 7\\<rbrakk>\n    \\<Longrightarrow> post_meas0 3\n                       (Tensor.mat_of_cols_list 8\n                         [[0, 0, 0, 0,\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]])\n                       (Suc 0) $$\n                      (7, 0) =\n                      v $$ (7, 0)", "using post_meas0_def asm mat_of_cols_list_def ket_vec_def select_index_def"], ["proof (prove)\nusing this:\n  post_meas0 ?n ?v ?i \\<equiv>\n  complex_of_real (1 / sqrt (prob0 ?n ?v ?i)) \\<cdot>\\<^sub>m\n  |Matrix.vec (2 ^ ?n)\n    (\\<lambda>j.\n        if \\<not> select_index ?n ?i j then ?v $$ (j, 0) else 0)\\<rangle>\n  v = Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]]\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  |?v\\<rangle> \\<equiv> Matrix.mat (dim_vec ?v) 1 (\\<lambda>(i, j). ?v $ i)\n  select_index ?n ?i ?j \\<equiv>\n  ?i \\<le> ?n - 1 \\<and>\n  ?j \\<le> 2 ^ ?n - 1 \\<and> 2 ^ (?n - 1 - ?i) \\<le> ?j mod 2 ^ (?n - ?i)\n\ngoal (8 subgoals):\n 1. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[0, 0, 0, 0,\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2)]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 0\\<rbrakk>\n    \\<Longrightarrow> post_meas0 3\n                       (Tensor.mat_of_cols_list 8\n                         [[0, 0, 0, 0,\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]])\n                       (Suc 0) $$\n                      (0, 0) =\n                      v $$ (0, 0)\n 2. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[0, 0, 0, 0,\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2)]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = Suc 0\\<rbrakk>\n    \\<Longrightarrow> post_meas0 3\n                       (Tensor.mat_of_cols_list 8\n                         [[0, 0, 0, 0,\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]])\n                       (Suc 0) $$\n                      (Suc 0, 0) =\n                      v $$ (Suc 0, 0)\n 3. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[0, 0, 0, 0,\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2)]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 2\\<rbrakk>\n    \\<Longrightarrow> post_meas0 3\n                       (Tensor.mat_of_cols_list 8\n                         [[0, 0, 0, 0,\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]])\n                       (Suc 0) $$\n                      (2, 0) =\n                      v $$ (2, 0)\n 4. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[0, 0, 0, 0,\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2)]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 3\\<rbrakk>\n    \\<Longrightarrow> post_meas0 3\n                       (Tensor.mat_of_cols_list 8\n                         [[0, 0, 0, 0,\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]])\n                       (Suc 0) $$\n                      (3, 0) =\n                      v $$ (3, 0)\n 5. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[0, 0, 0, 0,\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2)]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 4\\<rbrakk>\n    \\<Longrightarrow> post_meas0 3\n                       (Tensor.mat_of_cols_list 8\n                         [[0, 0, 0, 0,\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]])\n                       (Suc 0) $$\n                      (4, 0) =\n                      v $$ (4, 0)\n 6. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[0, 0, 0, 0,\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2)]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 5\\<rbrakk>\n    \\<Longrightarrow> post_meas0 3\n                       (Tensor.mat_of_cols_list 8\n                         [[0, 0, 0, 0,\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]])\n                       (Suc 0) $$\n                      (5, 0) =\n                      v $$ (5, 0)\n 7. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[0, 0, 0, 0,\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2)]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 6\\<rbrakk>\n    \\<Longrightarrow> post_meas0 3\n                       (Tensor.mat_of_cols_list 8\n                         [[0, 0, 0, 0,\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]])\n                       (Suc 0) $$\n                      (6, 0) =\n                      v $$ (6, 0)\n 8. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[0, 0, 0, 0,\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2)]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 7\\<rbrakk>\n    \\<Longrightarrow> post_meas0 3\n                       (Tensor.mat_of_cols_list 8\n                         [[0, 0, 0, 0,\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]])\n                       (Suc 0) $$\n                      (7, 0) =\n                      v $$ (7, 0)", "by (auto simp add: f2 real_sqrt_divide)"], ["proof (state)\nthis:\n  post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1 $$ (i, j) = v $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?i < dim_row v; ?j < dim_col v\\<rbrakk>\n  \\<Longrightarrow> post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1 $$\n                    (?i, ?j) =\n                    v $$ (?i, ?j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1 =\n  Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]]\n\ngoal (1 subgoal):\n 1. alice_pos \\<phi> q", "moreover"], ["proof (state)\nthis:\n  post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1 =\n  Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]]\n\ngoal (1 subgoal):\n 1. alice_pos \\<phi> q", "have \"post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1 = mat_of_cols_list 8 [[0,0,0,0,0,0,-\\<beta>,\\<alpha>]]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1 =\n    Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]]", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]])\\<rbrakk>\n       \\<Longrightarrow> post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1 $$\n                         (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]] $$\n                         (i, j)\n 2. dim_row (post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1) =\n    dim_row\n     (Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]])\n 3. dim_col (post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1) =\n    dim_col\n     (Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]])", "define v where asm:\"v = mat_of_cols_list 8 [[0,0,0,0,0,0,-\\<beta>,\\<alpha>]]\""], ["proof (state)\nthis:\n  v = Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]]\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]])\\<rbrakk>\n       \\<Longrightarrow> post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1 $$\n                         (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]] $$\n                         (i, j)\n 2. dim_row (post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1) =\n    dim_row\n     (Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]])\n 3. dim_col (post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1) =\n    dim_col\n     (Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]])", "then"], ["proof (chain)\npicking this:\n  v = Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]]", "show \"dim_row (post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1) = dim_row v\""], ["proof (prove)\nusing this:\n  v = Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]]\n\ngoal (1 subgoal):\n 1. dim_row (post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1) = dim_row v", "using mat_of_cols_list_def post_meas1_def ket_vec_def"], ["proof (prove)\nusing this:\n  v = Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]]\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  post_meas1 ?n ?v ?i \\<equiv>\n  complex_of_real (1 / sqrt (prob1 ?n ?v ?i)) \\<cdot>\\<^sub>m\n  |Matrix.vec (2 ^ ?n)\n    (\\<lambda>j. if select_index ?n ?i j then ?v $$ (j, 0) else 0)\\<rangle>\n  |?v\\<rangle> \\<equiv> Matrix.mat (dim_vec ?v) 1 (\\<lambda>(i, j). ?v $ i)\n\ngoal (1 subgoal):\n 1. dim_row (post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1) = dim_row v", "by simp"], ["proof (state)\nthis:\n  dim_row (post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1) = dim_row v\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]])\\<rbrakk>\n       \\<Longrightarrow> post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1 $$\n                         (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]] $$\n                         (i, j)\n 2. dim_col (post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1) =\n    dim_col\n     (Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]])", "show \"dim_col (post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1) = dim_col v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col (post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1) = dim_col v", "using mat_of_cols_list_def post_meas1_def ket_vec_def asm"], ["proof (prove)\nusing this:\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  post_meas1 ?n ?v ?i \\<equiv>\n  complex_of_real (1 / sqrt (prob1 ?n ?v ?i)) \\<cdot>\\<^sub>m\n  |Matrix.vec (2 ^ ?n)\n    (\\<lambda>j. if select_index ?n ?i j then ?v $$ (j, 0) else 0)\\<rangle>\n  |?v\\<rangle> \\<equiv> Matrix.mat (dim_vec ?v) 1 (\\<lambda>(i, j). ?v $ i)\n  v = Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]]\n\ngoal (1 subgoal):\n 1. dim_col (post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1) = dim_col v", "by simp"], ["proof (state)\nthis:\n  dim_col (post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1) = dim_col v\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 8\n                       [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 8\n               [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]])\\<rbrakk>\n       \\<Longrightarrow> post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1 $$\n                         (i, j) =\n                         Tensor.mat_of_cols_list 8\n                          [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]] $$\n                         (i, j)", "show \"\\<And>i j. i<dim_row v \\<Longrightarrow> j<dim_col v \\<Longrightarrow> post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1 $$ (i,j) = v $$ (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1 $$\n                         (i, j) =\n                         v $$ (i, j)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1 $$\n                         (i, j) =\n                         v $$ (i, j)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1 $$\n                         (i, j) =\n                         v $$ (i, j)", "assume \"i < dim_row v\" and \"j < dim_col v\""], ["proof (state)\nthis:\n  i < dim_row v\n  j < dim_col v\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1 $$\n                         (i, j) =\n                         v $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i < dim_row v\n  j < dim_col v", "have \"i \\<in> {0..<8} \\<and> j = 0\""], ["proof (prove)\nusing this:\n  i < dim_row v\n  j < dim_col v\n\ngoal (1 subgoal):\n 1. i \\<in> {0..<8} \\<and> j = 0", "using asm mat_of_cols_list_def"], ["proof (prove)\nusing this:\n  i < dim_row v\n  j < dim_col v\n  v = Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]]\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n\ngoal (1 subgoal):\n 1. i \\<in> {0..<8} \\<and> j = 0", "by auto"], ["proof (state)\nthis:\n  i \\<in> {0..<8} \\<and> j = 0\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row v; j < dim_col v\\<rbrakk>\n       \\<Longrightarrow> post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1 $$\n                         (i, j) =\n                         v $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i \\<in> {0..<8} \\<and> j = 0", "show \"post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1 $$ (i,j) = v $$ (i,j)\""], ["proof (prove)\nusing this:\n  i \\<in> {0..<8} \\<and> j = 0\n\ngoal (1 subgoal):\n 1. post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1 $$ (i, j) = v $$ (i, j)", "using post_meas1_index_0_alice assms(1) a0 a1"], ["proof (prove)\nusing this:\n  i \\<in> {0..<8} \\<and> j = 0\n  \\<lbrakk>state 1 ?\\<phi>; ?\\<alpha> = ?\\<phi> $$ (0, 0);\n   ?\\<beta> = ?\\<phi> $$ (1, 0)\\<rbrakk>\n  \\<Longrightarrow> post_meas1 3 (alice ?\\<phi>) 0 =\n                    Tensor.mat_of_cols_list 8\n                     [[0, 0, 0, 0, ?\\<alpha> / complex_of_real (sqrt 2),\n                       - ?\\<beta> / complex_of_real (sqrt 2),\n                       - ?\\<beta> / complex_of_real (sqrt 2),\n                       ?\\<alpha> / complex_of_real (sqrt 2)]]\n  state 1 \\<phi>\n  \\<alpha> = \\<phi> $$ (0, 0)\n  \\<beta> = \\<phi> $$ (1, 0)\n\ngoal (1 subgoal):\n 1. post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1 $$ (i, j) = v $$ (i, j)", "apply (auto)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[0, 0, 0, 0,\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2)]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 0\\<rbrakk>\n    \\<Longrightarrow> post_meas1 3\n                       (Tensor.mat_of_cols_list 8\n                         [[0, 0, 0, 0,\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]])\n                       (Suc 0) $$\n                      (0, 0) =\n                      v $$ (0, 0)\n 2. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[0, 0, 0, 0,\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2)]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = Suc 0\\<rbrakk>\n    \\<Longrightarrow> post_meas1 3\n                       (Tensor.mat_of_cols_list 8\n                         [[0, 0, 0, 0,\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]])\n                       (Suc 0) $$\n                      (Suc 0, 0) =\n                      v $$ (Suc 0, 0)\n 3. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[0, 0, 0, 0,\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2)]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 2\\<rbrakk>\n    \\<Longrightarrow> post_meas1 3\n                       (Tensor.mat_of_cols_list 8\n                         [[0, 0, 0, 0,\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]])\n                       (Suc 0) $$\n                      (2, 0) =\n                      v $$ (2, 0)\n 4. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[0, 0, 0, 0,\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2)]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 3\\<rbrakk>\n    \\<Longrightarrow> post_meas1 3\n                       (Tensor.mat_of_cols_list 8\n                         [[0, 0, 0, 0,\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]])\n                       (Suc 0) $$\n                      (3, 0) =\n                      v $$ (3, 0)\n 5. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[0, 0, 0, 0,\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2)]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 4\\<rbrakk>\n    \\<Longrightarrow> post_meas1 3\n                       (Tensor.mat_of_cols_list 8\n                         [[0, 0, 0, 0,\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]])\n                       (Suc 0) $$\n                      (4, 0) =\n                      v $$ (4, 0)\n 6. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[0, 0, 0, 0,\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2)]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 5\\<rbrakk>\n    \\<Longrightarrow> post_meas1 3\n                       (Tensor.mat_of_cols_list 8\n                         [[0, 0, 0, 0,\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]])\n                       (Suc 0) $$\n                      (5, 0) =\n                      v $$ (5, 0)\n 7. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[0, 0, 0, 0,\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2)]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 6\\<rbrakk>\n    \\<Longrightarrow> post_meas1 3\n                       (Tensor.mat_of_cols_list 8\n                         [[0, 0, 0, 0,\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]])\n                       (Suc 0) $$\n                      (6, 0) =\n                      v $$ (6, 0)\n 8. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[0, 0, 0, 0,\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2)]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 7\\<rbrakk>\n    \\<Longrightarrow> post_meas1 3\n                       (Tensor.mat_of_cols_list 8\n                         [[0, 0, 0, 0,\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]])\n                       (Suc 0) $$\n                      (7, 0) =\n                      v $$ (7, 0)", "using post_meas1_def asm mat_of_cols_list_def ket_vec_def select_index_def"], ["proof (prove)\nusing this:\n  post_meas1 ?n ?v ?i \\<equiv>\n  complex_of_real (1 / sqrt (prob1 ?n ?v ?i)) \\<cdot>\\<^sub>m\n  |Matrix.vec (2 ^ ?n)\n    (\\<lambda>j. if select_index ?n ?i j then ?v $$ (j, 0) else 0)\\<rangle>\n  v = Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]]\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  |?v\\<rangle> \\<equiv> Matrix.mat (dim_vec ?v) 1 (\\<lambda>(i, j). ?v $ i)\n  select_index ?n ?i ?j \\<equiv>\n  ?i \\<le> ?n - 1 \\<and>\n  ?j \\<le> 2 ^ ?n - 1 \\<and> 2 ^ (?n - 1 - ?i) \\<le> ?j mod 2 ^ (?n - ?i)\n\ngoal (8 subgoals):\n 1. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[0, 0, 0, 0,\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2)]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 0\\<rbrakk>\n    \\<Longrightarrow> post_meas1 3\n                       (Tensor.mat_of_cols_list 8\n                         [[0, 0, 0, 0,\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]])\n                       (Suc 0) $$\n                      (0, 0) =\n                      v $$ (0, 0)\n 2. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[0, 0, 0, 0,\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2)]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = Suc 0\\<rbrakk>\n    \\<Longrightarrow> post_meas1 3\n                       (Tensor.mat_of_cols_list 8\n                         [[0, 0, 0, 0,\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]])\n                       (Suc 0) $$\n                      (Suc 0, 0) =\n                      v $$ (Suc 0, 0)\n 3. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[0, 0, 0, 0,\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2)]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 2\\<rbrakk>\n    \\<Longrightarrow> post_meas1 3\n                       (Tensor.mat_of_cols_list 8\n                         [[0, 0, 0, 0,\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]])\n                       (Suc 0) $$\n                      (2, 0) =\n                      v $$ (2, 0)\n 4. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[0, 0, 0, 0,\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2)]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 3\\<rbrakk>\n    \\<Longrightarrow> post_meas1 3\n                       (Tensor.mat_of_cols_list 8\n                         [[0, 0, 0, 0,\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]])\n                       (Suc 0) $$\n                      (3, 0) =\n                      v $$ (3, 0)\n 5. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[0, 0, 0, 0,\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2)]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 4\\<rbrakk>\n    \\<Longrightarrow> post_meas1 3\n                       (Tensor.mat_of_cols_list 8\n                         [[0, 0, 0, 0,\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]])\n                       (Suc 0) $$\n                      (4, 0) =\n                      v $$ (4, 0)\n 6. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[0, 0, 0, 0,\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2)]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 5\\<rbrakk>\n    \\<Longrightarrow> post_meas1 3\n                       (Tensor.mat_of_cols_list 8\n                         [[0, 0, 0, 0,\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]])\n                       (Suc 0) $$\n                      (5, 0) =\n                      v $$ (5, 0)\n 7. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[0, 0, 0, 0,\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2)]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 6\\<rbrakk>\n    \\<Longrightarrow> post_meas1 3\n                       (Tensor.mat_of_cols_list 8\n                         [[0, 0, 0, 0,\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]])\n                       (Suc 0) $$\n                      (6, 0) =\n                      v $$ (6, 0)\n 8. \\<lbrakk>\\<And>\\<phi> \\<alpha> \\<beta>.\n                \\<lbrakk>state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n                 \\<beta> = \\<phi> $$ (Suc 0, 0)\\<rbrakk>\n                \\<Longrightarrow> post_meas1 3 (alice \\<phi>) 0 =\n                                  Tensor.mat_of_cols_list 8\n                                   [[0, 0, 0, 0,\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     - (\\<phi> $$ (Suc 0, 0) /\n  complex_of_real (sqrt 2)),\n                                     \\<phi> $$ (0, 0) /\n                                     complex_of_real (sqrt 2)]];\n     state (Suc 0) \\<phi>; \\<alpha> = \\<phi> $$ (0, 0);\n     \\<beta> = \\<phi> $$ (Suc 0, 0); j = 0; i = 7\\<rbrakk>\n    \\<Longrightarrow> post_meas1 3\n                       (Tensor.mat_of_cols_list 8\n                         [[0, 0, 0, 0,\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           - (\\<phi> $$ (Suc 0, 0) /\n                              complex_of_real (sqrt 2)),\n                           \\<phi> $$ (0, 0) / complex_of_real (sqrt 2)]])\n                       (Suc 0) $$\n                      (7, 0) =\n                      v $$ (7, 0)", "by (auto simp add: f3 real_sqrt_divide)"], ["proof (state)\nthis:\n  post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1 $$ (i, j) = v $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?i < dim_row v; ?j < dim_col v\\<rbrakk>\n  \\<Longrightarrow> post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1 $$\n                    (?i, ?j) =\n                    v $$ (?i, ?j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1 =\n  Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]]\n\ngoal (1 subgoal):\n 1. alice_pos \\<phi> q", "ultimately"], ["proof (chain)\npicking this:\n  q = post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1 \\<or>\n  q = post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1 \\<or>\n  q = post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1 \\<or>\n  q = post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1\n  post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1 =\n  Tensor.mat_of_cols_list 8 [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]]\n  post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1 =\n  Tensor.mat_of_cols_list 8 [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]]\n  post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1 =\n  Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]]\n  post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1 =\n  Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]]", "show ?thesis"], ["proof (prove)\nusing this:\n  q = post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1 \\<or>\n  q = post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1 \\<or>\n  q = post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1 \\<or>\n  q = post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1\n  post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1 =\n  Tensor.mat_of_cols_list 8 [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]]\n  post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1 =\n  Tensor.mat_of_cols_list 8 [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]]\n  post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1 =\n  Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]]\n  post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1 =\n  Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]]\n\ngoal (1 subgoal):\n 1. alice_pos \\<phi> q", "using alice_pos_def a0 a1"], ["proof (prove)\nusing this:\n  q = post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1 \\<or>\n  q = post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1 \\<or>\n  q = post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1 \\<or>\n  q = post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1\n  post_meas0 3 (post_meas0 3 (alice \\<phi>) 0) 1 =\n  Tensor.mat_of_cols_list 8 [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]]\n  post_meas1 3 (post_meas0 3 (alice \\<phi>) 0) 1 =\n  Tensor.mat_of_cols_list 8 [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]]\n  post_meas0 3 (post_meas1 3 (alice \\<phi>) 0) 1 =\n  Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]]\n  post_meas1 3 (post_meas1 3 (alice \\<phi>) 0) 1 =\n  Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]]\n  alice_pos ?\\<phi> ?q \\<equiv>\n  ?q =\n  Tensor.mat_of_cols_list 8\n   [[?\\<phi> $$ (0, 0), ?\\<phi> $$ (1, 0), 0, 0, 0, 0, 0, 0]] \\<or>\n  ?q =\n  Tensor.mat_of_cols_list 8\n   [[0, 0, ?\\<phi> $$ (1, 0), ?\\<phi> $$ (0, 0), 0, 0, 0, 0]] \\<or>\n  ?q =\n  Tensor.mat_of_cols_list 8\n   [[0, 0, 0, 0, ?\\<phi> $$ (0, 0), - ?\\<phi> $$ (1, 0), 0, 0]] \\<or>\n  ?q =\n  Tensor.mat_of_cols_list 8\n   [[0, 0, 0, 0, 0, 0, - ?\\<phi> $$ (1, 0), ?\\<phi> $$ (0, 0)]]\n  \\<alpha> = \\<phi> $$ (0, 0)\n  \\<beta> = \\<phi> $$ (1, 0)\n\ngoal (1 subgoal):\n 1. alice_pos \\<phi> q", "by simp"], ["proof (state)\nthis:\n  alice_pos \\<phi> q\n\ngoal:\nNo subgoals!", "qed"], ["", "datatype bit = zero | one"], ["", "definition alice_out:: \"complex Matrix.mat => complex Matrix.mat => bit \\<times> bit\" where\n\"alice_out \\<phi> q \\<equiv> \nif q = mat_of_cols_list 8 [[\\<phi> $$ (0,0), \\<phi> $$ (1,0), 0, 0, 0, 0, 0, 0]] then (zero, zero) else\n  if q = mat_of_cols_list 8 [[0, 0, \\<phi> $$ (1,0), \\<phi> $$ (0,0), 0, 0, 0, 0]] then (zero, one) else\n    if q = mat_of_cols_list 8 [[0, 0, 0, 0, \\<phi> $$ (0,0), - \\<phi> $$ (1,0), 0, 0]] then (one, zero) else\n      if q = mat_of_cols_list 8 [[0, 0, 0, 0, 0, 0, - \\<phi> $$ (1,0), \\<phi> $$ (0,0)]] then (one, one) else \n        undefined\""], ["", "definition bob:: \"complex Matrix.mat => bit \\<times> bit \\<Rightarrow> complex Matrix.mat\" where\n\"bob q b \\<equiv> \nif (fst b, snd b) = (zero, zero) then q else \n  if (fst b, snd b) = (zero, one) then (Id 2 \\<Otimes> X) * q else\n    if (fst b, snd b) = (one, zero) then (Id 2 \\<Otimes> Z) * q else\n      if (fst b, snd b) = (one, one) then (Id 2 \\<Otimes> Z * X) * q else \n        undefined\""], ["", "lemma alice_out_unique [simp]:\n  assumes \"state 1 \\<phi>\"\n  shows \"Matrix.mat 8 (Suc 0) (\\<lambda>(i,j). [[0, 0, \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0), 0, 0, 0, 0]]!j!i) \\<noteq>\n         Matrix.mat 8 (Suc 0) (\\<lambda>(i,j). [[\\<phi> $$ (0, 0), \\<phi> $$ (Suc 0, 0), 0, 0, 0, 0, 0, 0]]!j!i) \\<and> \n         Matrix.mat 8 (Suc 0) (\\<lambda>(i,j). [[0, 0, 0, 0, \\<phi> $$ (0, 0), -\\<phi> $$ (Suc 0, 0), 0, 0]]!j!i) \\<noteq>\n         Matrix.mat 8 (Suc 0) (\\<lambda>(i,j). [[\\<phi> $$ (0, 0), \\<phi> $$ (Suc 0, 0), 0, 0, 0, 0, 0, 0]]!j!i) \\<and> \n         Matrix.mat 8 (Suc 0) (\\<lambda>(i,j). [[0, 0, 0, 0, 0, 0, -\\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0)]]!j!i) \\<noteq>\n         Matrix.mat 8 (Suc 0) (\\<lambda>(i,j). [[\\<phi> $$ (0, 0), \\<phi> $$ (Suc 0, 0), 0, 0, 0, 0, 0, 0]]!j!i) \\<and> \n         Matrix.mat 8 (Suc 0) (\\<lambda>(i,j). [[0, 0, 0, 0, \\<phi> $$ (0, 0), -\\<phi> $$ (Suc 0, 0), 0, 0]]!j!i) \\<noteq>\n         Matrix.mat 8 (Suc 0) (\\<lambda>(i,j). [[0, 0, \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0), 0, 0, 0, 0]]!j!i) \\<and> \n         Matrix.mat 8 (Suc 0) (\\<lambda>(i,j). [[0, 0, 0, 0, 0, 0, -\\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0)]]!j!i) \\<noteq>\n         Matrix.mat 8 (Suc 0) (\\<lambda>(i,j). [[0, 0, \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0), 0, 0, 0, 0]]!j!i) \\<and> \n         Matrix.mat 8 (Suc 0) (\\<lambda>(i,j). [[0, 0, 0, 0, 0, 0, -\\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0)]]!j!i) \\<noteq>\n         Matrix.mat 8 (Suc 0) (\\<lambda>(i,j). [[0, 0, 0, 0, \\<phi> $$ (0, 0), -\\<phi> $$ (Suc 0, 0), 0, 0]]!j!i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0), 0, 0, 0, 0]] ! j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[\\<phi> $$ (0, 0), \\<phi> $$ (Suc 0, 0), 0, 0, 0, 0, 0, 0]] ! j !\n         i) \\<and>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, \\<phi> $$ (0, 0), - \\<phi> $$ (Suc 0, 0), 0, 0]] !\n         j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[\\<phi> $$ (0, 0), \\<phi> $$ (Suc 0, 0), 0, 0, 0, 0, 0, 0]] ! j !\n         i) \\<and>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, 0, 0, - \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0)]] !\n         j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[\\<phi> $$ (0, 0), \\<phi> $$ (Suc 0, 0), 0, 0, 0, 0, 0, 0]] ! j !\n         i) \\<and>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, \\<phi> $$ (0, 0), - \\<phi> $$ (Suc 0, 0), 0, 0]] !\n         j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0), 0, 0, 0, 0]] ! j !\n         i) \\<and>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, 0, 0, - \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0)]] !\n         j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0), 0, 0, 0, 0]] ! j !\n         i) \\<and>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, 0, 0, - \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0)]] !\n         j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, \\<phi> $$ (0, 0), - \\<phi> $$ (Suc 0, 0), 0, 0]] !\n         j !\n         i)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0), 0, 0, 0, 0]] ! j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[\\<phi> $$ (0, 0), \\<phi> $$ (Suc 0, 0), 0, 0, 0, 0, 0, 0]] ! j !\n         i) \\<and>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, \\<phi> $$ (0, 0), - \\<phi> $$ (Suc 0, 0), 0, 0]] !\n         j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[\\<phi> $$ (0, 0), \\<phi> $$ (Suc 0, 0), 0, 0, 0, 0, 0, 0]] ! j !\n         i) \\<and>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, 0, 0, - \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0)]] !\n         j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[\\<phi> $$ (0, 0), \\<phi> $$ (Suc 0, 0), 0, 0, 0, 0, 0, 0]] ! j !\n         i) \\<and>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, \\<phi> $$ (0, 0), - \\<phi> $$ (Suc 0, 0), 0, 0]] !\n         j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0), 0, 0, 0, 0]] ! j !\n         i) \\<and>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, 0, 0, - \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0)]] !\n         j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0), 0, 0, 0, 0]] ! j !\n         i) \\<and>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, 0, 0, - \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0)]] !\n         j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, \\<phi> $$ (0, 0), - \\<phi> $$ (Suc 0, 0), 0, 0]] !\n         j !\n         i)", "have f0:\"\\<phi> $$ (0,0) \\<noteq> 0 \\<or> \\<phi> $$ (1,0) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi> $$ (0, 0) \\<noteq> 0 \\<or> \\<phi> $$ (1, 0) \\<noteq> 0", "using assms state_def Matrix.col_def cpx_vec_length_def set_2"], ["proof (prove)\nusing this:\n  state 1 \\<phi>\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n  Matrix.col ?A ?j = Matrix.vec (dim_row ?A) (\\<lambda>i. ?A $$ (i, ?j))\n  \\<parallel>?v\\<parallel> \\<equiv>\n  sqrt (\\<Sum>i<dim_vec ?v. (cmod (?v $ i))\\<^sup>2)\n  {..<2} = {0, 1}\n\ngoal (1 subgoal):\n 1. \\<phi> $$ (0, 0) \\<noteq> 0 \\<or> \\<phi> $$ (1, 0) \\<noteq> 0", "by(auto simp add: atLeast0LessThan)"], ["proof (state)\nthis:\n  \\<phi> $$ (0, 0) \\<noteq> 0 \\<or> \\<phi> $$ (1, 0) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0), 0, 0, 0, 0]] ! j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[\\<phi> $$ (0, 0), \\<phi> $$ (Suc 0, 0), 0, 0, 0, 0, 0, 0]] ! j !\n         i) \\<and>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, \\<phi> $$ (0, 0), - \\<phi> $$ (Suc 0, 0), 0, 0]] !\n         j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[\\<phi> $$ (0, 0), \\<phi> $$ (Suc 0, 0), 0, 0, 0, 0, 0, 0]] ! j !\n         i) \\<and>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, 0, 0, - \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0)]] !\n         j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[\\<phi> $$ (0, 0), \\<phi> $$ (Suc 0, 0), 0, 0, 0, 0, 0, 0]] ! j !\n         i) \\<and>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, \\<phi> $$ (0, 0), - \\<phi> $$ (Suc 0, 0), 0, 0]] !\n         j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0), 0, 0, 0, 0]] ! j !\n         i) \\<and>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, 0, 0, - \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0)]] !\n         j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0), 0, 0, 0, 0]] ! j !\n         i) \\<and>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, 0, 0, - \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0)]] !\n         j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, \\<phi> $$ (0, 0), - \\<phi> $$ (Suc 0, 0), 0, 0]] !\n         j !\n         i)", "define v1 v2 v3 v4 where d0:\"v1 = Matrix.mat 8 1 (\\<lambda>(i,j). [[\\<phi> $$ (0,0),\\<phi> $$ (1,0),0,0,0,0,0,0]]!j!i)\"\n                       and d1:\"v2 = Matrix.mat 8 1 (\\<lambda>(i,j). [[0,0,\\<phi> $$ (1,0), \\<phi> $$ (0,0),0,0,0,0]]!j!i)\"\n                       and d2:\"v3 = Matrix.mat 8 1 (\\<lambda>(i,j). [[0,0,0,0,\\<phi> $$ (0,0),-\\<phi> $$ (1,0),0,0]]!j!i)\"\n                       and d3:\"v4 = Matrix.mat 8 1 (\\<lambda>(i,j). [[0,0,0,0,0,0,-\\<phi> $$ (1,0),\\<phi> $$ (0,0)]]!j!i)\""], ["proof (state)\nthis:\n  v1 =\n  Matrix.mat 8 1\n   (\\<lambda>(i, j).\n       [[\\<phi> $$ (0, 0), \\<phi> $$ (1, 0), 0, 0, 0, 0, 0, 0]] ! j ! i)\n  v2 =\n  Matrix.mat 8 1\n   (\\<lambda>(i, j).\n       [[0, 0, \\<phi> $$ (1, 0), \\<phi> $$ (0, 0), 0, 0, 0, 0]] ! j ! i)\n  v3 =\n  Matrix.mat 8 1\n   (\\<lambda>(i, j).\n       [[0, 0, 0, 0, \\<phi> $$ (0, 0), - \\<phi> $$ (1, 0), 0, 0]] ! j ! i)\n  v4 =\n  Matrix.mat 8 1\n   (\\<lambda>(i, j).\n       [[0, 0, 0, 0, 0, 0, - \\<phi> $$ (1, 0), \\<phi> $$ (0, 0)]] ! j ! i)\n\ngoal (1 subgoal):\n 1. Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0), 0, 0, 0, 0]] ! j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[\\<phi> $$ (0, 0), \\<phi> $$ (Suc 0, 0), 0, 0, 0, 0, 0, 0]] ! j !\n         i) \\<and>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, \\<phi> $$ (0, 0), - \\<phi> $$ (Suc 0, 0), 0, 0]] !\n         j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[\\<phi> $$ (0, 0), \\<phi> $$ (Suc 0, 0), 0, 0, 0, 0, 0, 0]] ! j !\n         i) \\<and>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, 0, 0, - \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0)]] !\n         j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[\\<phi> $$ (0, 0), \\<phi> $$ (Suc 0, 0), 0, 0, 0, 0, 0, 0]] ! j !\n         i) \\<and>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, \\<phi> $$ (0, 0), - \\<phi> $$ (Suc 0, 0), 0, 0]] !\n         j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0), 0, 0, 0, 0]] ! j !\n         i) \\<and>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, 0, 0, - \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0)]] !\n         j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0), 0, 0, 0, 0]] ! j !\n         i) \\<and>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, 0, 0, - \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0)]] !\n         j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, \\<phi> $$ (0, 0), - \\<phi> $$ (Suc 0, 0), 0, 0]] !\n         j !\n         i)", "then"], ["proof (chain)\npicking this:\n  v1 =\n  Matrix.mat 8 1\n   (\\<lambda>(i, j).\n       [[\\<phi> $$ (0, 0), \\<phi> $$ (1, 0), 0, 0, 0, 0, 0, 0]] ! j ! i)\n  v2 =\n  Matrix.mat 8 1\n   (\\<lambda>(i, j).\n       [[0, 0, \\<phi> $$ (1, 0), \\<phi> $$ (0, 0), 0, 0, 0, 0]] ! j ! i)\n  v3 =\n  Matrix.mat 8 1\n   (\\<lambda>(i, j).\n       [[0, 0, 0, 0, \\<phi> $$ (0, 0), - \\<phi> $$ (1, 0), 0, 0]] ! j ! i)\n  v4 =\n  Matrix.mat 8 1\n   (\\<lambda>(i, j).\n       [[0, 0, 0, 0, 0, 0, - \\<phi> $$ (1, 0), \\<phi> $$ (0, 0)]] ! j ! i)", "have \"(v1 $$ (0,0) \\<noteq> v2 $$ (0,0) \\<or> v1 $$ (1,0) \\<noteq> v2 $$ (1,0)) \\<and> \n             (v1 $$ (0,0) \\<noteq> v3 $$ (0,0) \\<or> v1 $$ (1,0) \\<noteq> v3 $$ (1,0)) \\<and>  \n             (v1 $$ (0,0) \\<noteq> v4 $$ (0,0) \\<or> v1 $$ (1,0) \\<noteq> v4 $$ (1,0)) \\<and>  \n             (v2 $$ (2,0) \\<noteq> v3 $$ (2,0) \\<or> v2 $$ (3,0) \\<noteq> v3 $$ (3,0)) \\<and>  \n             (v2 $$ (2,0) \\<noteq> v4 $$ (2,0) \\<or> v2 $$ (3,0) \\<noteq> v4 $$ (3,0)) \\<and>  \n             (v3 $$ (4,0) \\<noteq> v4 $$ (4,0) \\<or> v3 $$ (5,0) \\<noteq> v4 $$ (5,0))\""], ["proof (prove)\nusing this:\n  v1 =\n  Matrix.mat 8 1\n   (\\<lambda>(i, j).\n       [[\\<phi> $$ (0, 0), \\<phi> $$ (1, 0), 0, 0, 0, 0, 0, 0]] ! j ! i)\n  v2 =\n  Matrix.mat 8 1\n   (\\<lambda>(i, j).\n       [[0, 0, \\<phi> $$ (1, 0), \\<phi> $$ (0, 0), 0, 0, 0, 0]] ! j ! i)\n  v3 =\n  Matrix.mat 8 1\n   (\\<lambda>(i, j).\n       [[0, 0, 0, 0, \\<phi> $$ (0, 0), - \\<phi> $$ (1, 0), 0, 0]] ! j ! i)\n  v4 =\n  Matrix.mat 8 1\n   (\\<lambda>(i, j).\n       [[0, 0, 0, 0, 0, 0, - \\<phi> $$ (1, 0), \\<phi> $$ (0, 0)]] ! j ! i)\n\ngoal (1 subgoal):\n 1. (v1 $$ (0, 0) \\<noteq> v2 $$ (0, 0) \\<or>\n     v1 $$ (1, 0) \\<noteq> v2 $$ (1, 0)) \\<and>\n    (v1 $$ (0, 0) \\<noteq> v3 $$ (0, 0) \\<or>\n     v1 $$ (1, 0) \\<noteq> v3 $$ (1, 0)) \\<and>\n    (v1 $$ (0, 0) \\<noteq> v4 $$ (0, 0) \\<or>\n     v1 $$ (1, 0) \\<noteq> v4 $$ (1, 0)) \\<and>\n    (v2 $$ (2, 0) \\<noteq> v3 $$ (2, 0) \\<or>\n     v2 $$ (3, 0) \\<noteq> v3 $$ (3, 0)) \\<and>\n    (v2 $$ (2, 0) \\<noteq> v4 $$ (2, 0) \\<or>\n     v2 $$ (3, 0) \\<noteq> v4 $$ (3, 0)) \\<and>\n    (v3 $$ (4, 0) \\<noteq> v4 $$ (4, 0) \\<or>\n     v3 $$ (5, 0) \\<noteq> v4 $$ (5, 0))", "using f0"], ["proof (prove)\nusing this:\n  v1 =\n  Matrix.mat 8 1\n   (\\<lambda>(i, j).\n       [[\\<phi> $$ (0, 0), \\<phi> $$ (1, 0), 0, 0, 0, 0, 0, 0]] ! j ! i)\n  v2 =\n  Matrix.mat 8 1\n   (\\<lambda>(i, j).\n       [[0, 0, \\<phi> $$ (1, 0), \\<phi> $$ (0, 0), 0, 0, 0, 0]] ! j ! i)\n  v3 =\n  Matrix.mat 8 1\n   (\\<lambda>(i, j).\n       [[0, 0, 0, 0, \\<phi> $$ (0, 0), - \\<phi> $$ (1, 0), 0, 0]] ! j ! i)\n  v4 =\n  Matrix.mat 8 1\n   (\\<lambda>(i, j).\n       [[0, 0, 0, 0, 0, 0, - \\<phi> $$ (1, 0), \\<phi> $$ (0, 0)]] ! j ! i)\n  \\<phi> $$ (0, 0) \\<noteq> 0 \\<or> \\<phi> $$ (1, 0) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (v1 $$ (0, 0) \\<noteq> v2 $$ (0, 0) \\<or>\n     v1 $$ (1, 0) \\<noteq> v2 $$ (1, 0)) \\<and>\n    (v1 $$ (0, 0) \\<noteq> v3 $$ (0, 0) \\<or>\n     v1 $$ (1, 0) \\<noteq> v3 $$ (1, 0)) \\<and>\n    (v1 $$ (0, 0) \\<noteq> v4 $$ (0, 0) \\<or>\n     v1 $$ (1, 0) \\<noteq> v4 $$ (1, 0)) \\<and>\n    (v2 $$ (2, 0) \\<noteq> v3 $$ (2, 0) \\<or>\n     v2 $$ (3, 0) \\<noteq> v3 $$ (3, 0)) \\<and>\n    (v2 $$ (2, 0) \\<noteq> v4 $$ (2, 0) \\<or>\n     v2 $$ (3, 0) \\<noteq> v4 $$ (3, 0)) \\<and>\n    (v3 $$ (4, 0) \\<noteq> v4 $$ (4, 0) \\<or>\n     v3 $$ (5, 0) \\<noteq> v4 $$ (5, 0))", "by auto"], ["proof (state)\nthis:\n  (v1 $$ (0, 0) \\<noteq> v2 $$ (0, 0) \\<or>\n   v1 $$ (1, 0) \\<noteq> v2 $$ (1, 0)) \\<and>\n  (v1 $$ (0, 0) \\<noteq> v3 $$ (0, 0) \\<or>\n   v1 $$ (1, 0) \\<noteq> v3 $$ (1, 0)) \\<and>\n  (v1 $$ (0, 0) \\<noteq> v4 $$ (0, 0) \\<or>\n   v1 $$ (1, 0) \\<noteq> v4 $$ (1, 0)) \\<and>\n  (v2 $$ (2, 0) \\<noteq> v3 $$ (2, 0) \\<or>\n   v2 $$ (3, 0) \\<noteq> v3 $$ (3, 0)) \\<and>\n  (v2 $$ (2, 0) \\<noteq> v4 $$ (2, 0) \\<or>\n   v2 $$ (3, 0) \\<noteq> v4 $$ (3, 0)) \\<and>\n  (v3 $$ (4, 0) \\<noteq> v4 $$ (4, 0) \\<or>\n   v3 $$ (5, 0) \\<noteq> v4 $$ (5, 0))\n\ngoal (1 subgoal):\n 1. Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0), 0, 0, 0, 0]] ! j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[\\<phi> $$ (0, 0), \\<phi> $$ (Suc 0, 0), 0, 0, 0, 0, 0, 0]] ! j !\n         i) \\<and>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, \\<phi> $$ (0, 0), - \\<phi> $$ (Suc 0, 0), 0, 0]] !\n         j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[\\<phi> $$ (0, 0), \\<phi> $$ (Suc 0, 0), 0, 0, 0, 0, 0, 0]] ! j !\n         i) \\<and>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, 0, 0, - \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0)]] !\n         j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[\\<phi> $$ (0, 0), \\<phi> $$ (Suc 0, 0), 0, 0, 0, 0, 0, 0]] ! j !\n         i) \\<and>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, \\<phi> $$ (0, 0), - \\<phi> $$ (Suc 0, 0), 0, 0]] !\n         j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0), 0, 0, 0, 0]] ! j !\n         i) \\<and>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, 0, 0, - \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0)]] !\n         j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0), 0, 0, 0, 0]] ! j !\n         i) \\<and>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, 0, 0, - \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0)]] !\n         j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, \\<phi> $$ (0, 0), - \\<phi> $$ (Suc 0, 0), 0, 0]] !\n         j !\n         i)", "then"], ["proof (chain)\npicking this:\n  (v1 $$ (0, 0) \\<noteq> v2 $$ (0, 0) \\<or>\n   v1 $$ (1, 0) \\<noteq> v2 $$ (1, 0)) \\<and>\n  (v1 $$ (0, 0) \\<noteq> v3 $$ (0, 0) \\<or>\n   v1 $$ (1, 0) \\<noteq> v3 $$ (1, 0)) \\<and>\n  (v1 $$ (0, 0) \\<noteq> v4 $$ (0, 0) \\<or>\n   v1 $$ (1, 0) \\<noteq> v4 $$ (1, 0)) \\<and>\n  (v2 $$ (2, 0) \\<noteq> v3 $$ (2, 0) \\<or>\n   v2 $$ (3, 0) \\<noteq> v3 $$ (3, 0)) \\<and>\n  (v2 $$ (2, 0) \\<noteq> v4 $$ (2, 0) \\<or>\n   v2 $$ (3, 0) \\<noteq> v4 $$ (3, 0)) \\<and>\n  (v3 $$ (4, 0) \\<noteq> v4 $$ (4, 0) \\<or>\n   v3 $$ (5, 0) \\<noteq> v4 $$ (5, 0))", "have \"v1 \\<noteq> v2 \\<and> v1 \\<noteq> v3 \\<and> v1 \\<noteq> v4 \\<and> v2 \\<noteq> v3 \\<and> v2 \\<noteq> v4 \\<and> v3 \\<noteq> v4\""], ["proof (prove)\nusing this:\n  (v1 $$ (0, 0) \\<noteq> v2 $$ (0, 0) \\<or>\n   v1 $$ (1, 0) \\<noteq> v2 $$ (1, 0)) \\<and>\n  (v1 $$ (0, 0) \\<noteq> v3 $$ (0, 0) \\<or>\n   v1 $$ (1, 0) \\<noteq> v3 $$ (1, 0)) \\<and>\n  (v1 $$ (0, 0) \\<noteq> v4 $$ (0, 0) \\<or>\n   v1 $$ (1, 0) \\<noteq> v4 $$ (1, 0)) \\<and>\n  (v2 $$ (2, 0) \\<noteq> v3 $$ (2, 0) \\<or>\n   v2 $$ (3, 0) \\<noteq> v3 $$ (3, 0)) \\<and>\n  (v2 $$ (2, 0) \\<noteq> v4 $$ (2, 0) \\<or>\n   v2 $$ (3, 0) \\<noteq> v4 $$ (3, 0)) \\<and>\n  (v3 $$ (4, 0) \\<noteq> v4 $$ (4, 0) \\<or>\n   v3 $$ (5, 0) \\<noteq> v4 $$ (5, 0))\n\ngoal (1 subgoal):\n 1. v1 \\<noteq> v2 \\<and>\n    v1 \\<noteq> v3 \\<and>\n    v1 \\<noteq> v4 \\<and>\n    v2 \\<noteq> v3 \\<and> v2 \\<noteq> v4 \\<and> v3 \\<noteq> v4", "by auto"], ["proof (state)\nthis:\n  v1 \\<noteq> v2 \\<and>\n  v1 \\<noteq> v3 \\<and>\n  v1 \\<noteq> v4 \\<and>\n  v2 \\<noteq> v3 \\<and> v2 \\<noteq> v4 \\<and> v3 \\<noteq> v4\n\ngoal (1 subgoal):\n 1. Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0), 0, 0, 0, 0]] ! j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[\\<phi> $$ (0, 0), \\<phi> $$ (Suc 0, 0), 0, 0, 0, 0, 0, 0]] ! j !\n         i) \\<and>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, \\<phi> $$ (0, 0), - \\<phi> $$ (Suc 0, 0), 0, 0]] !\n         j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[\\<phi> $$ (0, 0), \\<phi> $$ (Suc 0, 0), 0, 0, 0, 0, 0, 0]] ! j !\n         i) \\<and>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, 0, 0, - \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0)]] !\n         j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[\\<phi> $$ (0, 0), \\<phi> $$ (Suc 0, 0), 0, 0, 0, 0, 0, 0]] ! j !\n         i) \\<and>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, \\<phi> $$ (0, 0), - \\<phi> $$ (Suc 0, 0), 0, 0]] !\n         j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0), 0, 0, 0, 0]] ! j !\n         i) \\<and>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, 0, 0, - \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0)]] !\n         j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0), 0, 0, 0, 0]] ! j !\n         i) \\<and>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, 0, 0, - \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0)]] !\n         j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, \\<phi> $$ (0, 0), - \\<phi> $$ (Suc 0, 0), 0, 0]] !\n         j !\n         i)", "thus ?thesis"], ["proof (prove)\nusing this:\n  v1 \\<noteq> v2 \\<and>\n  v1 \\<noteq> v3 \\<and>\n  v1 \\<noteq> v4 \\<and>\n  v2 \\<noteq> v3 \\<and> v2 \\<noteq> v4 \\<and> v3 \\<noteq> v4\n\ngoal (1 subgoal):\n 1. Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0), 0, 0, 0, 0]] ! j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[\\<phi> $$ (0, 0), \\<phi> $$ (Suc 0, 0), 0, 0, 0, 0, 0, 0]] ! j !\n         i) \\<and>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, \\<phi> $$ (0, 0), - \\<phi> $$ (Suc 0, 0), 0, 0]] !\n         j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[\\<phi> $$ (0, 0), \\<phi> $$ (Suc 0, 0), 0, 0, 0, 0, 0, 0]] ! j !\n         i) \\<and>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, 0, 0, - \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0)]] !\n         j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[\\<phi> $$ (0, 0), \\<phi> $$ (Suc 0, 0), 0, 0, 0, 0, 0, 0]] ! j !\n         i) \\<and>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, \\<phi> $$ (0, 0), - \\<phi> $$ (Suc 0, 0), 0, 0]] !\n         j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0), 0, 0, 0, 0]] ! j !\n         i) \\<and>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, 0, 0, - \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0)]] !\n         j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0), 0, 0, 0, 0]] ! j !\n         i) \\<and>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, 0, 0, - \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0)]] !\n         j !\n         i) \\<noteq>\n    Matrix.mat 8 (Suc 0)\n     (\\<lambda>(i, j).\n         [[0, 0, 0, 0, \\<phi> $$ (0, 0), - \\<phi> $$ (Suc 0, 0), 0, 0]] !\n         j !\n         i)", "by (auto simp add: d0 d1 d2 d3)"], ["proof (state)\nthis:\n  Matrix.mat 8 (Suc 0)\n   (\\<lambda>(i, j).\n       [[0, 0, \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0), 0, 0, 0, 0]] ! j !\n       i) \\<noteq>\n  Matrix.mat 8 (Suc 0)\n   (\\<lambda>(i, j).\n       [[\\<phi> $$ (0, 0), \\<phi> $$ (Suc 0, 0), 0, 0, 0, 0, 0, 0]] ! j !\n       i) \\<and>\n  Matrix.mat 8 (Suc 0)\n   (\\<lambda>(i, j).\n       [[0, 0, 0, 0, \\<phi> $$ (0, 0), - \\<phi> $$ (Suc 0, 0), 0, 0]] ! j !\n       i) \\<noteq>\n  Matrix.mat 8 (Suc 0)\n   (\\<lambda>(i, j).\n       [[\\<phi> $$ (0, 0), \\<phi> $$ (Suc 0, 0), 0, 0, 0, 0, 0, 0]] ! j !\n       i) \\<and>\n  Matrix.mat 8 (Suc 0)\n   (\\<lambda>(i, j).\n       [[0, 0, 0, 0, 0, 0, - \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0)]] ! j !\n       i) \\<noteq>\n  Matrix.mat 8 (Suc 0)\n   (\\<lambda>(i, j).\n       [[\\<phi> $$ (0, 0), \\<phi> $$ (Suc 0, 0), 0, 0, 0, 0, 0, 0]] ! j !\n       i) \\<and>\n  Matrix.mat 8 (Suc 0)\n   (\\<lambda>(i, j).\n       [[0, 0, 0, 0, \\<phi> $$ (0, 0), - \\<phi> $$ (Suc 0, 0), 0, 0]] ! j !\n       i) \\<noteq>\n  Matrix.mat 8 (Suc 0)\n   (\\<lambda>(i, j).\n       [[0, 0, \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0), 0, 0, 0, 0]] ! j !\n       i) \\<and>\n  Matrix.mat 8 (Suc 0)\n   (\\<lambda>(i, j).\n       [[0, 0, 0, 0, 0, 0, - \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0)]] ! j !\n       i) \\<noteq>\n  Matrix.mat 8 (Suc 0)\n   (\\<lambda>(i, j).\n       [[0, 0, \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0), 0, 0, 0, 0]] ! j !\n       i) \\<and>\n  Matrix.mat 8 (Suc 0)\n   (\\<lambda>(i, j).\n       [[0, 0, 0, 0, 0, 0, - \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0)]] ! j !\n       i) \\<noteq>\n  Matrix.mat 8 (Suc 0)\n   (\\<lambda>(i, j).\n       [[0, 0, 0, 0, \\<phi> $$ (0, 0), - \\<phi> $$ (Suc 0, 0), 0, 0]] ! j !\n       i)\n\ngoal:\nNo subgoals!", "qed"], ["", "abbreviation M3:: \"complex Matrix.mat\" where \n\"M3 \\<equiv> mat_of_cols_list 8 [[0, 1, 0, 0, 0, 0, 0, 0],\n                          [1, 0, 0, 0, 0, 0, 0, 0],\n                          [0, 0, 0, 1, 0, 0, 0, 0],\n                          [0, 0, 1, 0, 0, 0, 0, 0],\n                          [0, 0, 0, 0, 0, 1, 0, 0],\n                          [0, 0, 0, 0, 1, 0, 0, 0],\n                          [0, 0, 0, 0, 0, 0, 0, 1],\n                          [0, 0, 0, 0, 0, 0, 1, 0]]\""], ["", "lemma tensor_prod_of_id_2_x:\n  shows \"(Id 2 \\<Otimes> X) = M3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Quantum.Id 2 \\<Otimes> X = M3", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M3; j < dim_col M3\\<rbrakk>\n       \\<Longrightarrow> (Quantum.Id 2 \\<Otimes> X) $$ (i, j) = M3 $$ (i, j)\n 2. dim_row (Quantum.Id 2 \\<Otimes> X) = dim_row M3\n 3. dim_col (Quantum.Id 2 \\<Otimes> X) = dim_col M3", "have f0:\"gate 3 (Id 2 \\<Otimes> X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gate 3 (Quantum.Id 2 \\<Otimes> X)", "using X_is_gate tensor_gate[of \"2\" \"Id 2\" \"1\" \"X\"]"], ["proof (prove)\nusing this:\n  gate 1 X\n  \\<lbrakk>gate 2 (Quantum.Id 2); gate 1 X\\<rbrakk>\n  \\<Longrightarrow> gate (2 + 1) (Quantum.Id 2 \\<Otimes> X)\n\ngoal (1 subgoal):\n 1. gate 3 (Quantum.Id 2 \\<Otimes> X)", "by simp"], ["proof (state)\nthis:\n  gate 3 (Quantum.Id 2 \\<Otimes> X)\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M3; j < dim_col M3\\<rbrakk>\n       \\<Longrightarrow> (Quantum.Id 2 \\<Otimes> X) $$ (i, j) = M3 $$ (i, j)\n 2. dim_row (Quantum.Id 2 \\<Otimes> X) = dim_row M3\n 3. dim_col (Quantum.Id 2 \\<Otimes> X) = dim_col M3", "then"], ["proof (chain)\npicking this:\n  gate 3 (Quantum.Id 2 \\<Otimes> X)", "show \"dim_row (Id 2 \\<Otimes> X) = dim_row M3\""], ["proof (prove)\nusing this:\n  gate 3 (Quantum.Id 2 \\<Otimes> X)\n\ngoal (1 subgoal):\n 1. dim_row (Quantum.Id 2 \\<Otimes> X) = dim_row M3", "using gate_def"], ["proof (prove)\nusing this:\n  gate 3 (Quantum.Id 2 \\<Otimes> X)\n  gate ?n ?A \\<equiv>\n  dim_row ?A = 2 ^ ?n \\<and> square_mat ?A \\<and> unitary ?A\n\ngoal (1 subgoal):\n 1. dim_row (Quantum.Id 2 \\<Otimes> X) = dim_row M3", "by (simp add: mat_of_cols_list_def)"], ["proof (state)\nthis:\n  dim_row (Quantum.Id 2 \\<Otimes> X) = dim_row M3\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M3; j < dim_col M3\\<rbrakk>\n       \\<Longrightarrow> (Quantum.Id 2 \\<Otimes> X) $$ (i, j) = M3 $$ (i, j)\n 2. dim_col (Quantum.Id 2 \\<Otimes> X) = dim_col M3", "show \"dim_col (Id 2 \\<Otimes> X) = dim_col M3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col (Quantum.Id 2 \\<Otimes> X) = dim_col M3", "using f0 gate_def"], ["proof (prove)\nusing this:\n  gate 3 (Quantum.Id 2 \\<Otimes> X)\n  gate ?n ?A \\<equiv>\n  dim_row ?A = 2 ^ ?n \\<and> square_mat ?A \\<and> unitary ?A\n\ngoal (1 subgoal):\n 1. dim_col (Quantum.Id 2 \\<Otimes> X) = dim_col M3", "by (simp add: mat_of_cols_list_def)"], ["proof (state)\nthis:\n  dim_col (Quantum.Id 2 \\<Otimes> X) = dim_col M3\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M3; j < dim_col M3\\<rbrakk>\n       \\<Longrightarrow> (Quantum.Id 2 \\<Otimes> X) $$ (i, j) = M3 $$ (i, j)", "show \"\\<And>i j. i < dim_row M3 \\<Longrightarrow> j < dim_col M3 \\<Longrightarrow> (Id 2 \\<Otimes> X) $$ (i,j) = M3 $$ (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M3; j < dim_col M3\\<rbrakk>\n       \\<Longrightarrow> (Quantum.Id 2 \\<Otimes> X) $$ (i, j) = M3 $$ (i, j)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M3; j < dim_col M3\\<rbrakk>\n       \\<Longrightarrow> (Quantum.Id 2 \\<Otimes> X) $$ (i, j) = M3 $$ (i, j)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M3; j < dim_col M3\\<rbrakk>\n       \\<Longrightarrow> (Quantum.Id 2 \\<Otimes> X) $$ (i, j) = M3 $$ (i, j)", "assume \"i < dim_row M3\" and \"j < dim_col M3\""], ["proof (state)\nthis:\n  i < dim_row M3\n  j < dim_col M3\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M3; j < dim_col M3\\<rbrakk>\n       \\<Longrightarrow> (Quantum.Id 2 \\<Otimes> X) $$ (i, j) = M3 $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i < dim_row M3\n  j < dim_col M3", "have \"i \\<in> {0..<8} \\<and> j \\<in> {0..<8}\""], ["proof (prove)\nusing this:\n  i < dim_row M3\n  j < dim_col M3\n\ngoal (1 subgoal):\n 1. i \\<in> {0..<8} \\<and> j \\<in> {0..<8}", "by (auto simp add: mat_of_cols_list_def)"], ["proof (state)\nthis:\n  i \\<in> {0..<8} \\<and> j \\<in> {0..<8}\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M3; j < dim_col M3\\<rbrakk>\n       \\<Longrightarrow> (Quantum.Id 2 \\<Otimes> X) $$ (i, j) = M3 $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i \\<in> {0..<8} \\<and> j \\<in> {0..<8}", "show \"(Id 2 \\<Otimes> X) $$ (i,j) = M3 $$ (i,j)\""], ["proof (prove)\nusing this:\n  i \\<in> {0..<8} \\<and> j \\<in> {0..<8}\n\ngoal (1 subgoal):\n 1. (Quantum.Id 2 \\<Otimes> X) $$ (i, j) = M3 $$ (i, j)", "using Id_def X_def index_tensor_mat[of \"Id 2\" \"4\" \"4\" \"X\" \"2\" \"2\" \"i\" \"j\"] gate_def X_is_gate \nid_is_gate Id_def"], ["proof (prove)\nusing this:\n  i \\<in> {0..<8} \\<and> j \\<in> {0..<8}\n  Quantum.Id ?n \\<equiv> 1\\<^sub>m (2 ^ ?n)\n  X \\<equiv> Matrix.mat 2 2 (\\<lambda>(i, j). if i = j then 0 else 1)\n  \\<lbrakk>dim_row (Quantum.Id 2) = 4; dim_col (Quantum.Id 2) = 4;\n   dim_row X = 2; dim_col X = 2; i < 4 * 2; j < 4 * 2; 0 < 4; 0 < 2\\<rbrakk>\n  \\<Longrightarrow> (Quantum.Id 2 \\<Otimes> X) $$ (i, j) =\n                    Quantum.Id 2 $$ (i div 2, j div 2) *\n                    X $$ (i mod 2, j mod 2)\n  gate ?n ?A \\<equiv>\n  dim_row ?A = 2 ^ ?n \\<and> square_mat ?A \\<and> unitary ?A\n  gate 1 X\n  gate ?n (Quantum.Id ?n)\n  Quantum.Id ?n \\<equiv> 1\\<^sub>m (2 ^ ?n)\n\ngoal (1 subgoal):\n 1. (Quantum.Id 2 \\<Otimes> X) $$ (i, j) = M3 $$ (i, j)", "by (auto simp add: mat_of_cols_list_def X_def)"], ["proof (state)\nthis:\n  (Quantum.Id 2 \\<Otimes> X) $$ (i, j) = M3 $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?i < dim_row M3; ?j < dim_col M3\\<rbrakk>\n  \\<Longrightarrow> (Quantum.Id 2 \\<Otimes> X) $$ (?i, ?j) = M3 $$ (?i, ?j)\n\ngoal:\nNo subgoals!", "qed"], ["", "abbreviation M4:: \"complex Matrix.mat\" where \n\"M4 \\<equiv> mat_of_cols_list 8 [[0, -1, 0, 0, 0, 0, 0, 0],\n                          [1, 0, 0, 0, 0, 0, 0, 0],\n                          [0, 0, 0, -1, 0, 0, 0, 0],\n                          [0, 0, 1, 0, 0, 0, 0, 0],\n                          [0, 0, 0, 0, 0, -1, 0, 0],\n                          [0, 0, 0, 0, 1, 0, 0, 0],\n                          [0, 0, 0, 0, 0, 0, 0, -1],\n                          [0, 0, 0, 0, 0, 0, 1, 0]]\""], ["", "abbreviation ZX:: \"complex Matrix.mat\" where\n\"ZX \\<equiv> mat_of_cols_list 2 [[0, -1], [1, 0]]\""], ["", "lemma l_inv_of_ZX:\n  shows \"ZX\\<^sup>\\<dagger> * ZX = 1\\<^sub>m 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZX\\<^sup>\\<dagger> * ZX = 1\\<^sub>m 2", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (1\\<^sub>m 2);\n        j < dim_col (1\\<^sub>m 2)\\<rbrakk>\n       \\<Longrightarrow> (ZX\\<^sup>\\<dagger> * ZX) $$ (i, j) =\n                         1\\<^sub>m 2 $$ (i, j)\n 2. dim_row (ZX\\<^sup>\\<dagger> * ZX) = dim_row (1\\<^sub>m 2)\n 3. dim_col (ZX\\<^sup>\\<dagger> * ZX) = dim_col (1\\<^sub>m 2)", "show \"dim_row (ZX\\<^sup>\\<dagger> * ZX) = dim_row (1\\<^sub>m 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row (ZX\\<^sup>\\<dagger> * ZX) = dim_row (1\\<^sub>m 2)", "using dagger_def mat_of_cols_list_def"], ["proof (prove)\nusing this:\n  ?M\\<^sup>\\<dagger> \\<equiv>\n  Matrix.mat (dim_col ?M) (dim_row ?M) (\\<lambda>(i, j). cnj (?M $$ (j, i)))\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n\ngoal (1 subgoal):\n 1. dim_row (ZX\\<^sup>\\<dagger> * ZX) = dim_row (1\\<^sub>m 2)", "by simp"], ["proof (state)\nthis:\n  dim_row (ZX\\<^sup>\\<dagger> * ZX) = dim_row (1\\<^sub>m 2)\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (1\\<^sub>m 2);\n        j < dim_col (1\\<^sub>m 2)\\<rbrakk>\n       \\<Longrightarrow> (ZX\\<^sup>\\<dagger> * ZX) $$ (i, j) =\n                         1\\<^sub>m 2 $$ (i, j)\n 2. dim_col (ZX\\<^sup>\\<dagger> * ZX) = dim_col (1\\<^sub>m 2)", "show \"dim_col (ZX\\<^sup>\\<dagger> * ZX) = dim_col (1\\<^sub>m 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col (ZX\\<^sup>\\<dagger> * ZX) = dim_col (1\\<^sub>m 2)", "using dagger_def mat_of_cols_list_def"], ["proof (prove)\nusing this:\n  ?M\\<^sup>\\<dagger> \\<equiv>\n  Matrix.mat (dim_col ?M) (dim_row ?M) (\\<lambda>(i, j). cnj (?M $$ (j, i)))\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n\ngoal (1 subgoal):\n 1. dim_col (ZX\\<^sup>\\<dagger> * ZX) = dim_col (1\\<^sub>m 2)", "by simp"], ["proof (state)\nthis:\n  dim_col (ZX\\<^sup>\\<dagger> * ZX) = dim_col (1\\<^sub>m 2)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (1\\<^sub>m 2);\n        j < dim_col (1\\<^sub>m 2)\\<rbrakk>\n       \\<Longrightarrow> (ZX\\<^sup>\\<dagger> * ZX) $$ (i, j) =\n                         1\\<^sub>m 2 $$ (i, j)", "show \"\\<And>i j. i < dim_row (1\\<^sub>m 2) \\<Longrightarrow> j < dim_col (1\\<^sub>m 2) \\<Longrightarrow> (ZX\\<^sup>\\<dagger> * ZX) $$ (i, j) = 1\\<^sub>m 2 $$ (i, j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (1\\<^sub>m 2);\n        j < dim_col (1\\<^sub>m 2)\\<rbrakk>\n       \\<Longrightarrow> (ZX\\<^sup>\\<dagger> * ZX) $$ (i, j) =\n                         1\\<^sub>m 2 $$ (i, j)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (1\\<^sub>m 2);\n        j < dim_col (1\\<^sub>m 2)\\<rbrakk>\n       \\<Longrightarrow> (ZX\\<^sup>\\<dagger> * ZX) $$ (i, j) =\n                         1\\<^sub>m 2 $$ (i, j)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (1\\<^sub>m 2);\n        j < dim_col (1\\<^sub>m 2)\\<rbrakk>\n       \\<Longrightarrow> (ZX\\<^sup>\\<dagger> * ZX) $$ (i, j) =\n                         1\\<^sub>m 2 $$ (i, j)", "assume \"i < dim_row (1\\<^sub>m 2)\" and \"j < dim_col (1\\<^sub>m 2)\""], ["proof (state)\nthis:\n  i < dim_row (1\\<^sub>m 2)\n  j < dim_col (1\\<^sub>m 2)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (1\\<^sub>m 2);\n        j < dim_col (1\\<^sub>m 2)\\<rbrakk>\n       \\<Longrightarrow> (ZX\\<^sup>\\<dagger> * ZX) $$ (i, j) =\n                         1\\<^sub>m 2 $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i < dim_row (1\\<^sub>m 2)\n  j < dim_col (1\\<^sub>m 2)", "have \"i \\<in> {0..<2} \\<and> j \\<in> {0..<2}\""], ["proof (prove)\nusing this:\n  i < dim_row (1\\<^sub>m 2)\n  j < dim_col (1\\<^sub>m 2)\n\ngoal (1 subgoal):\n 1. i \\<in> {0..<2} \\<and> j \\<in> {0..<2}", "by auto"], ["proof (state)\nthis:\n  i \\<in> {0..<2} \\<and> j \\<in> {0..<2}\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (1\\<^sub>m 2);\n        j < dim_col (1\\<^sub>m 2)\\<rbrakk>\n       \\<Longrightarrow> (ZX\\<^sup>\\<dagger> * ZX) $$ (i, j) =\n                         1\\<^sub>m 2 $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i \\<in> {0..<2} \\<and> j \\<in> {0..<2}", "show \"(ZX\\<^sup>\\<dagger> * ZX) $$ (i, j) = 1\\<^sub>m 2 $$ (i, j)\""], ["proof (prove)\nusing this:\n  i \\<in> {0..<2} \\<and> j \\<in> {0..<2}\n\ngoal (1 subgoal):\n 1. (ZX\\<^sup>\\<dagger> * ZX) $$ (i, j) = 1\\<^sub>m 2 $$ (i, j)", "using mat_of_cols_list_def dagger_def"], ["proof (prove)\nusing this:\n  i \\<in> {0..<2} \\<and> j \\<in> {0..<2}\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  ?M\\<^sup>\\<dagger> \\<equiv>\n  Matrix.mat (dim_col ?M) (dim_row ?M) (\\<lambda>(i, j). cnj (?M $$ (j, i)))\n\ngoal (1 subgoal):\n 1. (ZX\\<^sup>\\<dagger> * ZX) $$ (i, j) = 1\\<^sub>m 2 $$ (i, j)", "by (auto simp add: set_2)"], ["proof (state)\nthis:\n  (ZX\\<^sup>\\<dagger> * ZX) $$ (i, j) = 1\\<^sub>m 2 $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?i2 < dim_row (1\\<^sub>m 2); ?j2 < dim_col (1\\<^sub>m 2)\\<rbrakk>\n  \\<Longrightarrow> (ZX\\<^sup>\\<dagger> * ZX) $$ (?i2, ?j2) =\n                    1\\<^sub>m 2 $$ (?i2, ?j2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma r_inv_of_ZX:\n  shows \"ZX * (ZX\\<^sup>\\<dagger>) = 1\\<^sub>m 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZX * ZX\\<^sup>\\<dagger> = 1\\<^sub>m 2", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (1\\<^sub>m 2);\n        j < dim_col (1\\<^sub>m 2)\\<rbrakk>\n       \\<Longrightarrow> (ZX * ZX\\<^sup>\\<dagger>) $$ (i, j) =\n                         1\\<^sub>m 2 $$ (i, j)\n 2. dim_row (ZX * ZX\\<^sup>\\<dagger>) = dim_row (1\\<^sub>m 2)\n 3. dim_col (ZX * ZX\\<^sup>\\<dagger>) = dim_col (1\\<^sub>m 2)", "show \"dim_row (ZX * (ZX\\<^sup>\\<dagger>)) = dim_row (1\\<^sub>m 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row (ZX * ZX\\<^sup>\\<dagger>) = dim_row (1\\<^sub>m 2)", "using dagger_def mat_of_cols_list_def"], ["proof (prove)\nusing this:\n  ?M\\<^sup>\\<dagger> \\<equiv>\n  Matrix.mat (dim_col ?M) (dim_row ?M) (\\<lambda>(i, j). cnj (?M $$ (j, i)))\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n\ngoal (1 subgoal):\n 1. dim_row (ZX * ZX\\<^sup>\\<dagger>) = dim_row (1\\<^sub>m 2)", "by simp"], ["proof (state)\nthis:\n  dim_row (ZX * ZX\\<^sup>\\<dagger>) = dim_row (1\\<^sub>m 2)\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (1\\<^sub>m 2);\n        j < dim_col (1\\<^sub>m 2)\\<rbrakk>\n       \\<Longrightarrow> (ZX * ZX\\<^sup>\\<dagger>) $$ (i, j) =\n                         1\\<^sub>m 2 $$ (i, j)\n 2. dim_col (ZX * ZX\\<^sup>\\<dagger>) = dim_col (1\\<^sub>m 2)", "show \"dim_col (ZX * (ZX\\<^sup>\\<dagger>)) = dim_col (1\\<^sub>m 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col (ZX * ZX\\<^sup>\\<dagger>) = dim_col (1\\<^sub>m 2)", "using dagger_def mat_of_cols_list_def"], ["proof (prove)\nusing this:\n  ?M\\<^sup>\\<dagger> \\<equiv>\n  Matrix.mat (dim_col ?M) (dim_row ?M) (\\<lambda>(i, j). cnj (?M $$ (j, i)))\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n\ngoal (1 subgoal):\n 1. dim_col (ZX * ZX\\<^sup>\\<dagger>) = dim_col (1\\<^sub>m 2)", "by simp"], ["proof (state)\nthis:\n  dim_col (ZX * ZX\\<^sup>\\<dagger>) = dim_col (1\\<^sub>m 2)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (1\\<^sub>m 2);\n        j < dim_col (1\\<^sub>m 2)\\<rbrakk>\n       \\<Longrightarrow> (ZX * ZX\\<^sup>\\<dagger>) $$ (i, j) =\n                         1\\<^sub>m 2 $$ (i, j)", "show \"\\<And>i j. i < dim_row (1\\<^sub>m 2) \\<Longrightarrow> j < dim_col (1\\<^sub>m 2) \\<Longrightarrow> (ZX * (ZX\\<^sup>\\<dagger>)) $$ (i, j) = 1\\<^sub>m 2 $$ (i, j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (1\\<^sub>m 2);\n        j < dim_col (1\\<^sub>m 2)\\<rbrakk>\n       \\<Longrightarrow> (ZX * ZX\\<^sup>\\<dagger>) $$ (i, j) =\n                         1\\<^sub>m 2 $$ (i, j)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (1\\<^sub>m 2);\n        j < dim_col (1\\<^sub>m 2)\\<rbrakk>\n       \\<Longrightarrow> (ZX * ZX\\<^sup>\\<dagger>) $$ (i, j) =\n                         1\\<^sub>m 2 $$ (i, j)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (1\\<^sub>m 2);\n        j < dim_col (1\\<^sub>m 2)\\<rbrakk>\n       \\<Longrightarrow> (ZX * ZX\\<^sup>\\<dagger>) $$ (i, j) =\n                         1\\<^sub>m 2 $$ (i, j)", "assume \"i < dim_row (1\\<^sub>m 2)\" and \"j < dim_col (1\\<^sub>m 2)\""], ["proof (state)\nthis:\n  i < dim_row (1\\<^sub>m 2)\n  j < dim_col (1\\<^sub>m 2)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (1\\<^sub>m 2);\n        j < dim_col (1\\<^sub>m 2)\\<rbrakk>\n       \\<Longrightarrow> (ZX * ZX\\<^sup>\\<dagger>) $$ (i, j) =\n                         1\\<^sub>m 2 $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i < dim_row (1\\<^sub>m 2)\n  j < dim_col (1\\<^sub>m 2)", "have \"i \\<in> {0..<2} \\<and> j \\<in> {0..<2}\""], ["proof (prove)\nusing this:\n  i < dim_row (1\\<^sub>m 2)\n  j < dim_col (1\\<^sub>m 2)\n\ngoal (1 subgoal):\n 1. i \\<in> {0..<2} \\<and> j \\<in> {0..<2}", "by auto"], ["proof (state)\nthis:\n  i \\<in> {0..<2} \\<and> j \\<in> {0..<2}\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (1\\<^sub>m 2);\n        j < dim_col (1\\<^sub>m 2)\\<rbrakk>\n       \\<Longrightarrow> (ZX * ZX\\<^sup>\\<dagger>) $$ (i, j) =\n                         1\\<^sub>m 2 $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i \\<in> {0..<2} \\<and> j \\<in> {0..<2}", "show \"(ZX * (ZX\\<^sup>\\<dagger>)) $$ (i, j) = 1\\<^sub>m 2 $$ (i, j)\""], ["proof (prove)\nusing this:\n  i \\<in> {0..<2} \\<and> j \\<in> {0..<2}\n\ngoal (1 subgoal):\n 1. (ZX * ZX\\<^sup>\\<dagger>) $$ (i, j) = 1\\<^sub>m 2 $$ (i, j)", "using mat_of_cols_list_def dagger_def"], ["proof (prove)\nusing this:\n  i \\<in> {0..<2} \\<and> j \\<in> {0..<2}\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  ?M\\<^sup>\\<dagger> \\<equiv>\n  Matrix.mat (dim_col ?M) (dim_row ?M) (\\<lambda>(i, j). cnj (?M $$ (j, i)))\n\ngoal (1 subgoal):\n 1. (ZX * ZX\\<^sup>\\<dagger>) $$ (i, j) = 1\\<^sub>m 2 $$ (i, j)", "by (auto simp add: set_2)"], ["proof (state)\nthis:\n  (ZX * ZX\\<^sup>\\<dagger>) $$ (i, j) = 1\\<^sub>m 2 $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?i2 < dim_row (1\\<^sub>m 2); ?j2 < dim_col (1\\<^sub>m 2)\\<rbrakk>\n  \\<Longrightarrow> (ZX * ZX\\<^sup>\\<dagger>) $$ (?i2, ?j2) =\n                    1\\<^sub>m 2 $$ (?i2, ?j2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ZX_is_gate [simp]:\n  shows \"gate 1 ZX\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gate 1 ZX", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. dim_row ZX = 2 ^ 1\n 2. square_mat ZX\n 3. unitary ZX", "show \"dim_row ZX = 2 ^ 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row ZX = 2 ^ 1", "using mat_of_cols_list_def"], ["proof (prove)\nusing this:\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n\ngoal (1 subgoal):\n 1. dim_row ZX = 2 ^ 1", "by simp"], ["proof (state)\nthis:\n  dim_row ZX = 2 ^ 1\n\ngoal (2 subgoals):\n 1. square_mat ZX\n 2. unitary ZX", "show \"square_mat ZX\""], ["proof (prove)\ngoal (1 subgoal):\n 1. square_mat ZX", "using mat_of_cols_list_def"], ["proof (prove)\nusing this:\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n\ngoal (1 subgoal):\n 1. square_mat ZX", "by simp"], ["proof (state)\nthis:\n  square_mat ZX\n\ngoal (1 subgoal):\n 1. unitary ZX", "show \"unitary ZX\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unitary ZX", "using unitary_def l_inv_of_ZX r_inv_of_ZX mat_of_cols_list_def"], ["proof (prove)\nusing this:\n  unitary ?M \\<equiv>\n  ?M\\<^sup>\\<dagger> * ?M = 1\\<^sub>m (dim_col ?M) \\<and>\n  ?M * ?M\\<^sup>\\<dagger> = 1\\<^sub>m (dim_row ?M)\n  ZX\\<^sup>\\<dagger> * ZX = 1\\<^sub>m 2\n  ZX * ZX\\<^sup>\\<dagger> = 1\\<^sub>m 2\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n\ngoal (1 subgoal):\n 1. unitary ZX", "by auto"], ["proof (state)\nthis:\n  unitary ZX\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prod_of_ZX:\n  shows \"Z * X = ZX\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Z * X = ZX", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row ZX; j < dim_col ZX\\<rbrakk>\n       \\<Longrightarrow> (Z * X) $$ (i, j) = ZX $$ (i, j)\n 2. dim_row (Z * X) = dim_row ZX\n 3. dim_col (Z * X) = dim_col ZX", "show \"dim_row (Z * X) = dim_row ZX\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row (Z * X) = dim_row ZX", "using Z_is_gate mat_of_cols_list_def gate_def"], ["proof (prove)\nusing this:\n  gate 1 Z\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  gate ?n ?A \\<equiv>\n  dim_row ?A = 2 ^ ?n \\<and> square_mat ?A \\<and> unitary ?A\n\ngoal (1 subgoal):\n 1. dim_row (Z * X) = dim_row ZX", "by auto"], ["proof (state)\nthis:\n  dim_row (Z * X) = dim_row ZX\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row ZX; j < dim_col ZX\\<rbrakk>\n       \\<Longrightarrow> (Z * X) $$ (i, j) = ZX $$ (i, j)\n 2. dim_col (Z * X) = dim_col ZX", "show \"dim_col (Z * X) = dim_col ZX\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col (Z * X) = dim_col ZX", "using X_is_gate mat_of_cols_list_def gate_def"], ["proof (prove)\nusing this:\n  gate 1 X\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  gate ?n ?A \\<equiv>\n  dim_row ?A = 2 ^ ?n \\<and> square_mat ?A \\<and> unitary ?A\n\ngoal (1 subgoal):\n 1. dim_col (Z * X) = dim_col ZX", "by auto"], ["proof (state)\nthis:\n  dim_col (Z * X) = dim_col ZX\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row ZX; j < dim_col ZX\\<rbrakk>\n       \\<Longrightarrow> (Z * X) $$ (i, j) = ZX $$ (i, j)", "show \"\\<And>i j. i < dim_row ZX \\<Longrightarrow> j < dim_col ZX \\<Longrightarrow> (Z * X) $$ (i, j) = ZX $$ (i, j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row ZX; j < dim_col ZX\\<rbrakk>\n       \\<Longrightarrow> (Z * X) $$ (i, j) = ZX $$ (i, j)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row ZX; j < dim_col ZX\\<rbrakk>\n       \\<Longrightarrow> (Z * X) $$ (i, j) = ZX $$ (i, j)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row ZX; j < dim_col ZX\\<rbrakk>\n       \\<Longrightarrow> (Z * X) $$ (i, j) = ZX $$ (i, j)", "assume \"i < dim_row ZX\" and \"j < dim_col ZX\""], ["proof (state)\nthis:\n  i < dim_row ZX\n  j < dim_col ZX\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row ZX; j < dim_col ZX\\<rbrakk>\n       \\<Longrightarrow> (Z * X) $$ (i, j) = ZX $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i < dim_row ZX\n  j < dim_col ZX", "have \"i \\<in> {0..<2} \\<and> j \\<in> {0..<2}\""], ["proof (prove)\nusing this:\n  i < dim_row ZX\n  j < dim_col ZX\n\ngoal (1 subgoal):\n 1. i \\<in> {0..<2} \\<and> j \\<in> {0..<2}", "by (auto simp add: mat_of_cols_list_def)"], ["proof (state)\nthis:\n  i \\<in> {0..<2} \\<and> j \\<in> {0..<2}\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row ZX; j < dim_col ZX\\<rbrakk>\n       \\<Longrightarrow> (Z * X) $$ (i, j) = ZX $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i \\<in> {0..<2} \\<and> j \\<in> {0..<2}", "show \"(Z * X) $$ (i, j) = ZX $$ (i, j)\""], ["proof (prove)\nusing this:\n  i \\<in> {0..<2} \\<and> j \\<in> {0..<2}\n\ngoal (1 subgoal):\n 1. (Z * X) $$ (i, j) = ZX $$ (i, j)", "by (auto simp add: set_2 Z_def X_def)"], ["proof (state)\nthis:\n  (Z * X) $$ (i, j) = ZX $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?i < dim_row ZX; ?j < dim_col ZX\\<rbrakk>\n  \\<Longrightarrow> (Z * X) $$ (?i, ?j) = ZX $$ (?i, ?j)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tensor_prod_of_id_2_y:\n  shows \"(Id 2 \\<Otimes> Z * X) = M4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Quantum.Id 2 \\<Otimes> Z * X = M4", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M4; j < dim_col M4\\<rbrakk>\n       \\<Longrightarrow> (Quantum.Id 2 \\<Otimes> Z * X) $$ (i, j) =\n                         M4 $$ (i, j)\n 2. dim_row (Quantum.Id 2 \\<Otimes> Z * X) = dim_row M4\n 3. dim_col (Quantum.Id 2 \\<Otimes> Z * X) = dim_col M4", "have f0:\"gate 3 (Id 2 \\<Otimes> Z * X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gate 3 (Quantum.Id 2 \\<Otimes> Z * X)", "using prod_of_ZX ZX_is_gate tensor_gate[of \"2\" \"Id 2\" \"1\" \"Z * X\"]"], ["proof (prove)\nusing this:\n  Z * X = ZX\n  gate 1 ZX\n  \\<lbrakk>gate 2 (Quantum.Id 2); gate 1 (Z * X)\\<rbrakk>\n  \\<Longrightarrow> gate (2 + 1) (Quantum.Id 2 \\<Otimes> Z * X)\n\ngoal (1 subgoal):\n 1. gate 3 (Quantum.Id 2 \\<Otimes> Z * X)", "by simp"], ["proof (state)\nthis:\n  gate 3 (Quantum.Id 2 \\<Otimes> Z * X)\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M4; j < dim_col M4\\<rbrakk>\n       \\<Longrightarrow> (Quantum.Id 2 \\<Otimes> Z * X) $$ (i, j) =\n                         M4 $$ (i, j)\n 2. dim_row (Quantum.Id 2 \\<Otimes> Z * X) = dim_row M4\n 3. dim_col (Quantum.Id 2 \\<Otimes> Z * X) = dim_col M4", "then"], ["proof (chain)\npicking this:\n  gate 3 (Quantum.Id 2 \\<Otimes> Z * X)", "show \"dim_row (Id 2 \\<Otimes> Z * X) = dim_row M4\""], ["proof (prove)\nusing this:\n  gate 3 (Quantum.Id 2 \\<Otimes> Z * X)\n\ngoal (1 subgoal):\n 1. dim_row (Quantum.Id 2 \\<Otimes> Z * X) = dim_row M4", "using gate_def"], ["proof (prove)\nusing this:\n  gate 3 (Quantum.Id 2 \\<Otimes> Z * X)\n  gate ?n ?A \\<equiv>\n  dim_row ?A = 2 ^ ?n \\<and> square_mat ?A \\<and> unitary ?A\n\ngoal (1 subgoal):\n 1. dim_row (Quantum.Id 2 \\<Otimes> Z * X) = dim_row M4", "by (simp add: mat_of_cols_list_def)"], ["proof (state)\nthis:\n  dim_row (Quantum.Id 2 \\<Otimes> Z * X) = dim_row M4\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M4; j < dim_col M4\\<rbrakk>\n       \\<Longrightarrow> (Quantum.Id 2 \\<Otimes> Z * X) $$ (i, j) =\n                         M4 $$ (i, j)\n 2. dim_col (Quantum.Id 2 \\<Otimes> Z * X) = dim_col M4", "show \"dim_col (Id 2 \\<Otimes> Z * X) = dim_col M4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col (Quantum.Id 2 \\<Otimes> Z * X) = dim_col M4", "using f0 gate_def"], ["proof (prove)\nusing this:\n  gate 3 (Quantum.Id 2 \\<Otimes> Z * X)\n  gate ?n ?A \\<equiv>\n  dim_row ?A = 2 ^ ?n \\<and> square_mat ?A \\<and> unitary ?A\n\ngoal (1 subgoal):\n 1. dim_col (Quantum.Id 2 \\<Otimes> Z * X) = dim_col M4", "by (simp add: mat_of_cols_list_def)"], ["proof (state)\nthis:\n  dim_col (Quantum.Id 2 \\<Otimes> Z * X) = dim_col M4\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M4; j < dim_col M4\\<rbrakk>\n       \\<Longrightarrow> (Quantum.Id 2 \\<Otimes> Z * X) $$ (i, j) =\n                         M4 $$ (i, j)", "show \"\\<And>i j. i < dim_row M4 \\<Longrightarrow> j < dim_col M4 \\<Longrightarrow> (Id 2 \\<Otimes> Z * X) $$ (i,j) = M4 $$ (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M4; j < dim_col M4\\<rbrakk>\n       \\<Longrightarrow> (Quantum.Id 2 \\<Otimes> Z * X) $$ (i, j) =\n                         M4 $$ (i, j)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M4; j < dim_col M4\\<rbrakk>\n       \\<Longrightarrow> (Quantum.Id 2 \\<Otimes> Z * X) $$ (i, j) =\n                         M4 $$ (i, j)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M4; j < dim_col M4\\<rbrakk>\n       \\<Longrightarrow> (Quantum.Id 2 \\<Otimes> Z * X) $$ (i, j) =\n                         M4 $$ (i, j)", "assume \"i < dim_row M4\" and \"j < dim_col M4\""], ["proof (state)\nthis:\n  i < dim_row M4\n  j < dim_col M4\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M4; j < dim_col M4\\<rbrakk>\n       \\<Longrightarrow> (Quantum.Id 2 \\<Otimes> Z * X) $$ (i, j) =\n                         M4 $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i < dim_row M4\n  j < dim_col M4", "have \"i \\<in> {0..<8} \\<and> j \\<in> {0..<8}\""], ["proof (prove)\nusing this:\n  i < dim_row M4\n  j < dim_col M4\n\ngoal (1 subgoal):\n 1. i \\<in> {0..<8} \\<and> j \\<in> {0..<8}", "by (auto simp add: mat_of_cols_list_def)"], ["proof (state)\nthis:\n  i \\<in> {0..<8} \\<and> j \\<in> {0..<8}\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M4; j < dim_col M4\\<rbrakk>\n       \\<Longrightarrow> (Quantum.Id 2 \\<Otimes> Z * X) $$ (i, j) =\n                         M4 $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i \\<in> {0..<8} \\<and> j \\<in> {0..<8}", "have \"(Id 2 \\<Otimes> ZX) $$ (i, j) = M4 $$ (i,j)\""], ["proof (prove)\nusing this:\n  i \\<in> {0..<8} \\<and> j \\<in> {0..<8}\n\ngoal (1 subgoal):\n 1. (Quantum.Id 2 \\<Otimes> ZX) $$ (i, j) = M4 $$ (i, j)", "using Id_def mat_of_cols_list_def index_tensor_mat[of \"Id 2\" \"4\" \"4\" \"ZX\" \"2\" \"2\" \"i\" \"j\"] \n        gate_def ZX_is_gate id_is_gate"], ["proof (prove)\nusing this:\n  i \\<in> {0..<8} \\<and> j \\<in> {0..<8}\n  Quantum.Id ?n \\<equiv> 1\\<^sub>m (2 ^ ?n)\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  \\<lbrakk>dim_row (Quantum.Id 2) = 4; dim_col (Quantum.Id 2) = 4;\n   dim_row ZX = 2; dim_col ZX = 2; i < 4 * 2; j < 4 * 2; 0 < 4;\n   0 < 2\\<rbrakk>\n  \\<Longrightarrow> (Quantum.Id 2 \\<Otimes> ZX) $$ (i, j) =\n                    Quantum.Id 2 $$ (i div 2, j div 2) *\n                    ZX $$ (i mod 2, j mod 2)\n  gate ?n ?A \\<equiv>\n  dim_row ?A = 2 ^ ?n \\<and> square_mat ?A \\<and> unitary ?A\n  gate 1 ZX\n  gate ?n (Quantum.Id ?n)\n\ngoal (1 subgoal):\n 1. (Quantum.Id 2 \\<Otimes> ZX) $$ (i, j) = M4 $$ (i, j)", "by (auto simp add: mat_of_cols_list_def)"], ["proof (state)\nthis:\n  (Quantum.Id 2 \\<Otimes> ZX) $$ (i, j) = M4 $$ (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M4; j < dim_col M4\\<rbrakk>\n       \\<Longrightarrow> (Quantum.Id 2 \\<Otimes> Z * X) $$ (i, j) =\n                         M4 $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  (Quantum.Id 2 \\<Otimes> ZX) $$ (i, j) = M4 $$ (i, j)", "show \"(Id 2 \\<Otimes> Z * X) $$ (i, j) = M4 $$ (i,j)\""], ["proof (prove)\nusing this:\n  (Quantum.Id 2 \\<Otimes> ZX) $$ (i, j) = M4 $$ (i, j)\n\ngoal (1 subgoal):\n 1. (Quantum.Id 2 \\<Otimes> Z * X) $$ (i, j) = M4 $$ (i, j)", "using prod_of_ZX"], ["proof (prove)\nusing this:\n  (Quantum.Id 2 \\<Otimes> ZX) $$ (i, j) = M4 $$ (i, j)\n  Z * X = ZX\n\ngoal (1 subgoal):\n 1. (Quantum.Id 2 \\<Otimes> Z * X) $$ (i, j) = M4 $$ (i, j)", "by simp"], ["proof (state)\nthis:\n  (Quantum.Id 2 \\<Otimes> Z * X) $$ (i, j) = M4 $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?i < dim_row M4; ?j < dim_col M4\\<rbrakk>\n  \\<Longrightarrow> (Quantum.Id 2 \\<Otimes> Z * X) $$ (?i, ?j) =\n                    M4 $$ (?i, ?j)\n\ngoal:\nNo subgoals!", "qed"], ["", "abbreviation M5:: \"complex Matrix.mat\" where \n\"M5 \\<equiv> mat_of_cols_list 8 [[1, 0, 0, 0, 0, 0, 0, 0],\n                          [0, -1, 0, 0, 0, 0, 0, 0],\n                          [0, 0, 1, 0, 0, 0, 0, 0],\n                          [0, 0, 0, -1, 0, 0, 0, 0],\n                          [0, 0, 0, 0, 1, 0, 0, 0],\n                          [0, 0, 0, 0, 0, -1, 0, 0],\n                          [0, 0, 0, 0, 0, 0, 1, 0],\n                          [0, 0, 0, 0, 0, 0, 0, -1]]\""], ["", "lemma tensor_prod_of_id_2_z:\n  shows \"(Id 2 \\<Otimes> Z) = M5\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Quantum.Id 2 \\<Otimes> Z = M5", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M5; j < dim_col M5\\<rbrakk>\n       \\<Longrightarrow> (Quantum.Id 2 \\<Otimes> Z) $$ (i, j) = M5 $$ (i, j)\n 2. dim_row (Quantum.Id 2 \\<Otimes> Z) = dim_row M5\n 3. dim_col (Quantum.Id 2 \\<Otimes> Z) = dim_col M5", "have f0:\"gate 3 (Id 2 \\<Otimes> Z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gate 3 (Quantum.Id 2 \\<Otimes> Z)", "using Z_is_gate tensor_gate[of \"2\" \"Id 2\" \"1\" \"Z\"]"], ["proof (prove)\nusing this:\n  gate 1 Z\n  \\<lbrakk>gate 2 (Quantum.Id 2); gate 1 Z\\<rbrakk>\n  \\<Longrightarrow> gate (2 + 1) (Quantum.Id 2 \\<Otimes> Z)\n\ngoal (1 subgoal):\n 1. gate 3 (Quantum.Id 2 \\<Otimes> Z)", "by simp"], ["proof (state)\nthis:\n  gate 3 (Quantum.Id 2 \\<Otimes> Z)\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M5; j < dim_col M5\\<rbrakk>\n       \\<Longrightarrow> (Quantum.Id 2 \\<Otimes> Z) $$ (i, j) = M5 $$ (i, j)\n 2. dim_row (Quantum.Id 2 \\<Otimes> Z) = dim_row M5\n 3. dim_col (Quantum.Id 2 \\<Otimes> Z) = dim_col M5", "then"], ["proof (chain)\npicking this:\n  gate 3 (Quantum.Id 2 \\<Otimes> Z)", "show \"dim_row (Id 2 \\<Otimes> Z) = dim_row M5\""], ["proof (prove)\nusing this:\n  gate 3 (Quantum.Id 2 \\<Otimes> Z)\n\ngoal (1 subgoal):\n 1. dim_row (Quantum.Id 2 \\<Otimes> Z) = dim_row M5", "using gate_def"], ["proof (prove)\nusing this:\n  gate 3 (Quantum.Id 2 \\<Otimes> Z)\n  gate ?n ?A \\<equiv>\n  dim_row ?A = 2 ^ ?n \\<and> square_mat ?A \\<and> unitary ?A\n\ngoal (1 subgoal):\n 1. dim_row (Quantum.Id 2 \\<Otimes> Z) = dim_row M5", "by (simp add:  mat_of_cols_list_def)"], ["proof (state)\nthis:\n  dim_row (Quantum.Id 2 \\<Otimes> Z) = dim_row M5\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M5; j < dim_col M5\\<rbrakk>\n       \\<Longrightarrow> (Quantum.Id 2 \\<Otimes> Z) $$ (i, j) = M5 $$ (i, j)\n 2. dim_col (Quantum.Id 2 \\<Otimes> Z) = dim_col M5", "show \"dim_col (Id 2 \\<Otimes> Z) = dim_col M5\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col (Quantum.Id 2 \\<Otimes> Z) = dim_col M5", "using f0 gate_def"], ["proof (prove)\nusing this:\n  gate 3 (Quantum.Id 2 \\<Otimes> Z)\n  gate ?n ?A \\<equiv>\n  dim_row ?A = 2 ^ ?n \\<and> square_mat ?A \\<and> unitary ?A\n\ngoal (1 subgoal):\n 1. dim_col (Quantum.Id 2 \\<Otimes> Z) = dim_col M5", "by (simp add:  mat_of_cols_list_def)"], ["proof (state)\nthis:\n  dim_col (Quantum.Id 2 \\<Otimes> Z) = dim_col M5\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M5; j < dim_col M5\\<rbrakk>\n       \\<Longrightarrow> (Quantum.Id 2 \\<Otimes> Z) $$ (i, j) = M5 $$ (i, j)", "show \"\\<And>i j. i < dim_row M5 \\<Longrightarrow> j < dim_col M5 \\<Longrightarrow> (Id 2 \\<Otimes> Z) $$ (i,j) = M5 $$ (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M5; j < dim_col M5\\<rbrakk>\n       \\<Longrightarrow> (Quantum.Id 2 \\<Otimes> Z) $$ (i, j) = M5 $$ (i, j)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M5; j < dim_col M5\\<rbrakk>\n       \\<Longrightarrow> (Quantum.Id 2 \\<Otimes> Z) $$ (i, j) = M5 $$ (i, j)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M5; j < dim_col M5\\<rbrakk>\n       \\<Longrightarrow> (Quantum.Id 2 \\<Otimes> Z) $$ (i, j) = M5 $$ (i, j)", "assume \"i < dim_row M5\" and \"j < dim_col M5\""], ["proof (state)\nthis:\n  i < dim_row M5\n  j < dim_col M5\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M5; j < dim_col M5\\<rbrakk>\n       \\<Longrightarrow> (Quantum.Id 2 \\<Otimes> Z) $$ (i, j) = M5 $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i < dim_row M5\n  j < dim_col M5", "have \"i \\<in> {0..<8} \\<and> j \\<in> {0..<8}\""], ["proof (prove)\nusing this:\n  i < dim_row M5\n  j < dim_col M5\n\ngoal (1 subgoal):\n 1. i \\<in> {0..<8} \\<and> j \\<in> {0..<8}", "by (auto simp add: mat_of_cols_list_def)"], ["proof (state)\nthis:\n  i \\<in> {0..<8} \\<and> j \\<in> {0..<8}\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row M5; j < dim_col M5\\<rbrakk>\n       \\<Longrightarrow> (Quantum.Id 2 \\<Otimes> Z) $$ (i, j) = M5 $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i \\<in> {0..<8} \\<and> j \\<in> {0..<8}", "show \"(Id 2 \\<Otimes> Z) $$ (i, j) = M5 $$ (i,j)\""], ["proof (prove)\nusing this:\n  i \\<in> {0..<8} \\<and> j \\<in> {0..<8}\n\ngoal (1 subgoal):\n 1. (Quantum.Id 2 \\<Otimes> Z) $$ (i, j) = M5 $$ (i, j)", "using Id_def Z_def index_tensor_mat[of \"Id 2\" \"4\" \"4\" \"Z\" \"2\" \"2\" \"i\" \"j\"] gate_def Z_is_gate \nid_is_gate Id_def"], ["proof (prove)\nusing this:\n  i \\<in> {0..<8} \\<and> j \\<in> {0..<8}\n  Quantum.Id ?n \\<equiv> 1\\<^sub>m (2 ^ ?n)\n  Z \\<equiv>\n  Matrix.mat 2 2\n   (\\<lambda>(i, j). if i \\<noteq> j then 0 else if i = 0 then 1 else - 1)\n  \\<lbrakk>dim_row (Quantum.Id 2) = 4; dim_col (Quantum.Id 2) = 4;\n   dim_row Z = 2; dim_col Z = 2; i < 4 * 2; j < 4 * 2; 0 < 4; 0 < 2\\<rbrakk>\n  \\<Longrightarrow> (Quantum.Id 2 \\<Otimes> Z) $$ (i, j) =\n                    Quantum.Id 2 $$ (i div 2, j div 2) *\n                    Z $$ (i mod 2, j mod 2)\n  gate ?n ?A \\<equiv>\n  dim_row ?A = 2 ^ ?n \\<and> square_mat ?A \\<and> unitary ?A\n  gate 1 Z\n  gate ?n (Quantum.Id ?n)\n  Quantum.Id ?n \\<equiv> 1\\<^sub>m (2 ^ ?n)\n\ngoal (1 subgoal):\n 1. (Quantum.Id 2 \\<Otimes> Z) $$ (i, j) = M5 $$ (i, j)", "by (auto simp add: mat_of_cols_list_def Z_def)"], ["proof (state)\nthis:\n  (Quantum.Id 2 \\<Otimes> Z) $$ (i, j) = M5 $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?i < dim_row M5; ?j < dim_col M5\\<rbrakk>\n  \\<Longrightarrow> (Quantum.Id 2 \\<Otimes> Z) $$ (?i, ?j) = M5 $$ (?i, ?j)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma teleportation:\n  assumes \"state 1 \\<phi>\" and \"state 3 q\" and \"List.member (alice_meas \\<phi>) (p, q)\"\n  shows \"\\<exists>r. state 2 r \\<and> bob q (alice_out \\<phi> q) = r \\<Otimes> \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>r.\n       state 2 r \\<and> bob q (alice_out \\<phi> q) = r \\<Otimes> \\<phi>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>r.\n       state 2 r \\<and> bob q (alice_out \\<phi> q) = r \\<Otimes> \\<phi>", "define \\<alpha> \\<beta> where a0:\"\\<alpha> = \\<phi> $$ (0,0)\" and a1:\"\\<beta> = \\<phi> $$ (1,0)\""], ["proof (state)\nthis:\n  \\<alpha> = \\<phi> $$ (0, 0)\n  \\<beta> = \\<phi> $$ (1, 0)\n\ngoal (1 subgoal):\n 1. \\<exists>r.\n       state 2 r \\<and> bob q (alice_out \\<phi> q) = r \\<Otimes> \\<phi>", "then"], ["proof (chain)\npicking this:\n  \\<alpha> = \\<phi> $$ (0, 0)\n  \\<beta> = \\<phi> $$ (1, 0)", "have \"q = mat_of_cols_list 8 [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]] \\<or>\n             q = mat_of_cols_list 8 [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]] \\<or>\n             q = mat_of_cols_list 8 [[0, 0, 0, 0, \\<alpha>, -\\<beta>, 0, 0]] \\<or>\n             q = mat_of_cols_list 8 [[0, 0, 0, 0, 0, 0, -\\<beta>, \\<alpha>]]\""], ["proof (prove)\nusing this:\n  \\<alpha> = \\<phi> $$ (0, 0)\n  \\<beta> = \\<phi> $$ (1, 0)\n\ngoal (1 subgoal):\n 1. q =\n    Tensor.mat_of_cols_list 8 [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]] \\<or>\n    q =\n    Tensor.mat_of_cols_list 8 [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]] \\<or>\n    q =\n    Tensor.mat_of_cols_list 8\n     [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]] \\<or>\n    q = Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]]", "using assms Alice_case alice_pos_def"], ["proof (prove)\nusing this:\n  \\<alpha> = \\<phi> $$ (0, 0)\n  \\<beta> = \\<phi> $$ (1, 0)\n  state 1 \\<phi>\n  state 3 q\n  List.member (alice_meas \\<phi>) (p, q)\n  \\<lbrakk>state 1 ?\\<phi>; state 3 ?q;\n   List.member (alice_meas ?\\<phi>) (?p, ?q)\\<rbrakk>\n  \\<Longrightarrow> alice_pos ?\\<phi> ?q\n  alice_pos ?\\<phi> ?q \\<equiv>\n  ?q =\n  Tensor.mat_of_cols_list 8\n   [[?\\<phi> $$ (0, 0), ?\\<phi> $$ (1, 0), 0, 0, 0, 0, 0, 0]] \\<or>\n  ?q =\n  Tensor.mat_of_cols_list 8\n   [[0, 0, ?\\<phi> $$ (1, 0), ?\\<phi> $$ (0, 0), 0, 0, 0, 0]] \\<or>\n  ?q =\n  Tensor.mat_of_cols_list 8\n   [[0, 0, 0, 0, ?\\<phi> $$ (0, 0), - ?\\<phi> $$ (1, 0), 0, 0]] \\<or>\n  ?q =\n  Tensor.mat_of_cols_list 8\n   [[0, 0, 0, 0, 0, 0, - ?\\<phi> $$ (1, 0), ?\\<phi> $$ (0, 0)]]\n\ngoal (1 subgoal):\n 1. q =\n    Tensor.mat_of_cols_list 8 [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]] \\<or>\n    q =\n    Tensor.mat_of_cols_list 8 [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]] \\<or>\n    q =\n    Tensor.mat_of_cols_list 8\n     [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]] \\<or>\n    q = Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]]", "by simp"], ["proof (state)\nthis:\n  q =\n  Tensor.mat_of_cols_list 8 [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]] \\<or>\n  q =\n  Tensor.mat_of_cols_list 8 [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]] \\<or>\n  q =\n  Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]] \\<or>\n  q = Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]]\n\ngoal (1 subgoal):\n 1. \\<exists>r.\n       state 2 r \\<and> bob q (alice_out \\<phi> q) = r \\<Otimes> \\<phi>", "moreover"], ["proof (state)\nthis:\n  q =\n  Tensor.mat_of_cols_list 8 [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]] \\<or>\n  q =\n  Tensor.mat_of_cols_list 8 [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]] \\<or>\n  q =\n  Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]] \\<or>\n  q = Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]]\n\ngoal (1 subgoal):\n 1. \\<exists>r.\n       state 2 r \\<and> bob q (alice_out \\<phi> q) = r \\<Otimes> \\<phi>", "have \"q = mat_of_cols_list 8 [[\\<alpha>,\\<beta>,0,0,0,0,0,0]] \\<Longrightarrow> bob q (alice_out \\<phi> q) = \nmat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes> \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q =\n    Tensor.mat_of_cols_list 8\n     [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]] \\<Longrightarrow>\n    bob q (alice_out \\<phi> q) =\n    Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes> \\<phi>", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>q =\n                Tensor.mat_of_cols_list 8\n                 [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]];\n        i < dim_row\n             (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes> \\<phi>);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes>\n              \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (i, j) =\n                         (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes>\n                          \\<phi>) $$\n                         (i, j)\n 2. q =\n    Tensor.mat_of_cols_list 8\n     [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]] \\<Longrightarrow>\n    dim_row (bob q (alice_out \\<phi> q)) =\n    dim_row (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes> \\<phi>)\n 3. q =\n    Tensor.mat_of_cols_list 8\n     [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]] \\<Longrightarrow>\n    dim_col (bob q (alice_out \\<phi> q)) =\n    dim_col (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes> \\<phi>)", "assume asm:\"q = Tensor.mat_of_cols_list 8 [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]]\""], ["proof (state)\nthis:\n  q = Tensor.mat_of_cols_list 8 [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]]\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>q =\n                Tensor.mat_of_cols_list 8\n                 [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]];\n        i < dim_row\n             (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes> \\<phi>);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes>\n              \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (i, j) =\n                         (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes>\n                          \\<phi>) $$\n                         (i, j)\n 2. q =\n    Tensor.mat_of_cols_list 8\n     [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]] \\<Longrightarrow>\n    dim_row (bob q (alice_out \\<phi> q)) =\n    dim_row (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes> \\<phi>)\n 3. q =\n    Tensor.mat_of_cols_list 8\n     [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]] \\<Longrightarrow>\n    dim_col (bob q (alice_out \\<phi> q)) =\n    dim_col (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes> \\<phi>)", "show \"dim_row (bob q (alice_out \\<phi> q)) = dim_row (Tensor.mat_of_cols_list 4 [[1,0,0,0]] \\<Otimes> \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row (bob q (alice_out \\<phi> q)) =\n    dim_row (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes> \\<phi>)", "using mat_of_cols_list_def a0 a1 assms(1) state_def bob_def alice_out_def asm"], ["proof (prove)\nusing this:\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  \\<alpha> = \\<phi> $$ (0, 0)\n  \\<beta> = \\<phi> $$ (1, 0)\n  state 1 \\<phi>\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n  bob ?q ?b \\<equiv>\n  if (fst ?b, snd ?b) = (bit.zero, bit.zero) then ?q\n  else if (fst ?b, snd ?b) = (bit.zero, bit.one)\n       then (Quantum.Id 2 \\<Otimes> X) * ?q\n       else if (fst ?b, snd ?b) = (bit.one, bit.zero)\n            then (Quantum.Id 2 \\<Otimes> Z) * ?q\n            else if (fst ?b, snd ?b) = (bit.one, bit.one)\n                 then (Quantum.Id 2 \\<Otimes> Z * X) * ?q else undefined\n  alice_out ?\\<phi> ?q \\<equiv>\n  if ?q =\n     Tensor.mat_of_cols_list 8\n      [[?\\<phi> $$ (0, 0), ?\\<phi> $$ (1, 0), 0, 0, 0, 0, 0, 0]]\n  then (bit.zero, bit.zero)\n  else if ?q =\n          Tensor.mat_of_cols_list 8\n           [[0, 0, ?\\<phi> $$ (1, 0), ?\\<phi> $$ (0, 0), 0, 0, 0, 0]]\n       then (bit.zero, bit.one)\n       else if ?q =\n               Tensor.mat_of_cols_list 8\n                [[0, 0, 0, 0, ?\\<phi> $$ (0, 0), - ?\\<phi> $$ (1, 0), 0, 0]]\n            then (bit.one, bit.zero)\n            else if ?q =\n                    Tensor.mat_of_cols_list 8\n                     [[0, 0, 0, 0, 0, 0, - ?\\<phi> $$ (1, 0),\n                       ?\\<phi> $$ (0, 0)]]\n                 then (bit.one, bit.one) else undefined\n  q = Tensor.mat_of_cols_list 8 [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]]\n\ngoal (1 subgoal):\n 1. dim_row (bob q (alice_out \\<phi> q)) =\n    dim_row (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes> \\<phi>)", "by simp"], ["proof (state)\nthis:\n  dim_row (bob q (alice_out \\<phi> q)) =\n  dim_row (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes> \\<phi>)\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>q =\n                Tensor.mat_of_cols_list 8\n                 [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]];\n        i < dim_row\n             (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes> \\<phi>);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes>\n              \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (i, j) =\n                         (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes>\n                          \\<phi>) $$\n                         (i, j)\n 2. q =\n    Tensor.mat_of_cols_list 8\n     [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]] \\<Longrightarrow>\n    dim_col (bob q (alice_out \\<phi> q)) =\n    dim_col (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes> \\<phi>)", "show \"dim_col (bob q (alice_out \\<phi> q)) = dim_col (Tensor.mat_of_cols_list 4 [[1,0,0,0]] \\<Otimes> \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col (bob q (alice_out \\<phi> q)) =\n    dim_col (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes> \\<phi>)", "using mat_of_cols_list_def a0 a1 assms(1) state_def bob_def alice_out_def asm"], ["proof (prove)\nusing this:\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  \\<alpha> = \\<phi> $$ (0, 0)\n  \\<beta> = \\<phi> $$ (1, 0)\n  state 1 \\<phi>\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n  bob ?q ?b \\<equiv>\n  if (fst ?b, snd ?b) = (bit.zero, bit.zero) then ?q\n  else if (fst ?b, snd ?b) = (bit.zero, bit.one)\n       then (Quantum.Id 2 \\<Otimes> X) * ?q\n       else if (fst ?b, snd ?b) = (bit.one, bit.zero)\n            then (Quantum.Id 2 \\<Otimes> Z) * ?q\n            else if (fst ?b, snd ?b) = (bit.one, bit.one)\n                 then (Quantum.Id 2 \\<Otimes> Z * X) * ?q else undefined\n  alice_out ?\\<phi> ?q \\<equiv>\n  if ?q =\n     Tensor.mat_of_cols_list 8\n      [[?\\<phi> $$ (0, 0), ?\\<phi> $$ (1, 0), 0, 0, 0, 0, 0, 0]]\n  then (bit.zero, bit.zero)\n  else if ?q =\n          Tensor.mat_of_cols_list 8\n           [[0, 0, ?\\<phi> $$ (1, 0), ?\\<phi> $$ (0, 0), 0, 0, 0, 0]]\n       then (bit.zero, bit.one)\n       else if ?q =\n               Tensor.mat_of_cols_list 8\n                [[0, 0, 0, 0, ?\\<phi> $$ (0, 0), - ?\\<phi> $$ (1, 0), 0, 0]]\n            then (bit.one, bit.zero)\n            else if ?q =\n                    Tensor.mat_of_cols_list 8\n                     [[0, 0, 0, 0, 0, 0, - ?\\<phi> $$ (1, 0),\n                       ?\\<phi> $$ (0, 0)]]\n                 then (bit.one, bit.one) else undefined\n  q = Tensor.mat_of_cols_list 8 [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]]\n\ngoal (1 subgoal):\n 1. dim_col (bob q (alice_out \\<phi> q)) =\n    dim_col (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes> \\<phi>)", "by simp"], ["proof (state)\nthis:\n  dim_col (bob q (alice_out \\<phi> q)) =\n  dim_col (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes> \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>q =\n                Tensor.mat_of_cols_list 8\n                 [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]];\n        i < dim_row\n             (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes> \\<phi>);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes>\n              \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (i, j) =\n                         (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes>\n                          \\<phi>) $$\n                         (i, j)", "show \"\\<And>i j. i < dim_row (Tensor.mat_of_cols_list 4 [[1,0,0,0]] \\<Otimes> \\<phi>) \\<Longrightarrow> \n                j < dim_col (Tensor.mat_of_cols_list 4 [[1,0,0,0]] \\<Otimes> \\<phi>) \\<Longrightarrow>\n           bob q (alice_out \\<phi> q) $$ (i, j) = (Tensor.mat_of_cols_list 4 [[1,0,0,0]] \\<Otimes> \\<phi>) $$ (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes>\n                      \\<phi>);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes>\n              \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (i, j) =\n                         (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes>\n                          \\<phi>) $$\n                         (i, j)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes>\n                      \\<phi>);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes>\n              \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (i, j) =\n                         (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes>\n                          \\<phi>) $$\n                         (i, j)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes>\n                      \\<phi>);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes>\n              \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (i, j) =\n                         (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes>\n                          \\<phi>) $$\n                         (i, j)", "assume \"i < dim_row (Tensor.mat_of_cols_list 4 [[1,0,0,0]] \\<Otimes> \\<phi>)\" and\n                     \"j < dim_col (Tensor.mat_of_cols_list 4 [[1,0,0,0]] \\<Otimes> \\<phi>)\""], ["proof (state)\nthis:\n  i < dim_row (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes> \\<phi>)\n  j < dim_col (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes> \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes>\n                      \\<phi>);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes>\n              \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (i, j) =\n                         (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes>\n                          \\<phi>) $$\n                         (i, j)", "then"], ["proof (chain)\npicking this:\n  i < dim_row (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes> \\<phi>)\n  j < dim_col (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes> \\<phi>)", "have \"i \\<in> {0..<8} \\<and> j = 0\""], ["proof (prove)\nusing this:\n  i < dim_row (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes> \\<phi>)\n  j < dim_col (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes> \\<phi>)\n\ngoal (1 subgoal):\n 1. i \\<in> {0..<8} \\<and> j = 0", "using asm mat_of_cols_list_def assms state_def"], ["proof (prove)\nusing this:\n  i < dim_row (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes> \\<phi>)\n  j < dim_col (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes> \\<phi>)\n  q = Tensor.mat_of_cols_list 8 [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]]\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  state 1 \\<phi>\n  state 3 q\n  List.member (alice_meas \\<phi>) (p, q)\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n\ngoal (1 subgoal):\n 1. i \\<in> {0..<8} \\<and> j = 0", "by auto"], ["proof (state)\nthis:\n  i \\<in> {0..<8} \\<and> j = 0\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes>\n                      \\<phi>);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes>\n              \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (i, j) =\n                         (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes>\n                          \\<phi>) $$\n                         (i, j)", "then"], ["proof (chain)\npicking this:\n  i \\<in> {0..<8} \\<and> j = 0", "show \"bob q (alice_out \\<phi> q) $$ (i,j) = (Tensor.mat_of_cols_list 4 [[1,0,0,0]] \\<Otimes> \\<phi>) $$ (i,j)\""], ["proof (prove)\nusing this:\n  i \\<in> {0..<8} \\<and> j = 0\n\ngoal (1 subgoal):\n 1. bob q (alice_out \\<phi> q) $$ (i, j) =\n    (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes> \\<phi>) $$ (i, j)", "using bob_def alice_out_def asm mat_of_cols_list_def a0 a1 assms state_def"], ["proof (prove)\nusing this:\n  i \\<in> {0..<8} \\<and> j = 0\n  bob ?q ?b \\<equiv>\n  if (fst ?b, snd ?b) = (bit.zero, bit.zero) then ?q\n  else if (fst ?b, snd ?b) = (bit.zero, bit.one)\n       then (Quantum.Id 2 \\<Otimes> X) * ?q\n       else if (fst ?b, snd ?b) = (bit.one, bit.zero)\n            then (Quantum.Id 2 \\<Otimes> Z) * ?q\n            else if (fst ?b, snd ?b) = (bit.one, bit.one)\n                 then (Quantum.Id 2 \\<Otimes> Z * X) * ?q else undefined\n  alice_out ?\\<phi> ?q \\<equiv>\n  if ?q =\n     Tensor.mat_of_cols_list 8\n      [[?\\<phi> $$ (0, 0), ?\\<phi> $$ (1, 0), 0, 0, 0, 0, 0, 0]]\n  then (bit.zero, bit.zero)\n  else if ?q =\n          Tensor.mat_of_cols_list 8\n           [[0, 0, ?\\<phi> $$ (1, 0), ?\\<phi> $$ (0, 0), 0, 0, 0, 0]]\n       then (bit.zero, bit.one)\n       else if ?q =\n               Tensor.mat_of_cols_list 8\n                [[0, 0, 0, 0, ?\\<phi> $$ (0, 0), - ?\\<phi> $$ (1, 0), 0, 0]]\n            then (bit.one, bit.zero)\n            else if ?q =\n                    Tensor.mat_of_cols_list 8\n                     [[0, 0, 0, 0, 0, 0, - ?\\<phi> $$ (1, 0),\n                       ?\\<phi> $$ (0, 0)]]\n                 then (bit.one, bit.one) else undefined\n  q = Tensor.mat_of_cols_list 8 [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]]\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  \\<alpha> = \\<phi> $$ (0, 0)\n  \\<beta> = \\<phi> $$ (1, 0)\n  state 1 \\<phi>\n  state 3 q\n  List.member (alice_meas \\<phi>) (p, q)\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n\ngoal (1 subgoal):\n 1. bob q (alice_out \\<phi> q) $$ (i, j) =\n    (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes> \\<phi>) $$ (i, j)", "by auto"], ["proof (state)\nthis:\n  bob q (alice_out \\<phi> q) $$ (i, j) =\n  (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes> \\<phi>) $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?i < dim_row\n                 (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes>\n                  \\<phi>);\n   ?j < dim_col\n         (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes>\n          \\<phi>)\\<rbrakk>\n  \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (?i, ?j) =\n                    (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes>\n                     \\<phi>) $$\n                    (?i, ?j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  q =\n  Tensor.mat_of_cols_list 8\n   [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]] \\<Longrightarrow>\n  bob q (alice_out \\<phi> q) =\n  Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes> \\<phi>\n\ngoal (1 subgoal):\n 1. \\<exists>r.\n       state 2 r \\<and> bob q (alice_out \\<phi> q) = r \\<Otimes> \\<phi>", "moreover"], ["proof (state)\nthis:\n  q =\n  Tensor.mat_of_cols_list 8\n   [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]] \\<Longrightarrow>\n  bob q (alice_out \\<phi> q) =\n  Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes> \\<phi>\n\ngoal (1 subgoal):\n 1. \\<exists>r.\n       state 2 r \\<and> bob q (alice_out \\<phi> q) = r \\<Otimes> \\<phi>", "have \"q = mat_of_cols_list 8 [[0,0,\\<beta>,\\<alpha>,0,0,0,0]] \\<Longrightarrow> bob q (alice_out \\<phi> q) = \nmat_of_cols_list 4 [[0,1,0,0]] \\<Otimes> \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q =\n    Tensor.mat_of_cols_list 8\n     [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]] \\<Longrightarrow>\n    bob q (alice_out \\<phi> q) =\n    Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes> \\<phi>", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>q =\n                Tensor.mat_of_cols_list 8\n                 [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]];\n        i < dim_row\n             (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes> \\<phi>);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes>\n              \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (i, j) =\n                         (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes>\n                          \\<phi>) $$\n                         (i, j)\n 2. q =\n    Tensor.mat_of_cols_list 8\n     [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]] \\<Longrightarrow>\n    dim_row (bob q (alice_out \\<phi> q)) =\n    dim_row (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes> \\<phi>)\n 3. q =\n    Tensor.mat_of_cols_list 8\n     [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]] \\<Longrightarrow>\n    dim_col (bob q (alice_out \\<phi> q)) =\n    dim_col (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes> \\<phi>)", "assume asm:\"q = Tensor.mat_of_cols_list 8 [[0,0,\\<beta>,\\<alpha>,0,0,0,0]]\""], ["proof (state)\nthis:\n  q = Tensor.mat_of_cols_list 8 [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]]\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>q =\n                Tensor.mat_of_cols_list 8\n                 [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]];\n        i < dim_row\n             (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes> \\<phi>);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes>\n              \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (i, j) =\n                         (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes>\n                          \\<phi>) $$\n                         (i, j)\n 2. q =\n    Tensor.mat_of_cols_list 8\n     [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]] \\<Longrightarrow>\n    dim_row (bob q (alice_out \\<phi> q)) =\n    dim_row (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes> \\<phi>)\n 3. q =\n    Tensor.mat_of_cols_list 8\n     [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]] \\<Longrightarrow>\n    dim_col (bob q (alice_out \\<phi> q)) =\n    dim_col (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes> \\<phi>)", "show \"dim_row (bob q (alice_out \\<phi> q)) = dim_row (Tensor.mat_of_cols_list 4 [[0,1,0,0]] \\<Otimes> \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row (bob q (alice_out \\<phi> q)) =\n    dim_row (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes> \\<phi>)", "using mat_of_cols_list_def a0 a1 assms(1) state_def bob_def alice_out_def asm tensor_prod_of_id_2_x"], ["proof (prove)\nusing this:\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  \\<alpha> = \\<phi> $$ (0, 0)\n  \\<beta> = \\<phi> $$ (1, 0)\n  state 1 \\<phi>\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n  bob ?q ?b \\<equiv>\n  if (fst ?b, snd ?b) = (bit.zero, bit.zero) then ?q\n  else if (fst ?b, snd ?b) = (bit.zero, bit.one)\n       then (Quantum.Id 2 \\<Otimes> X) * ?q\n       else if (fst ?b, snd ?b) = (bit.one, bit.zero)\n            then (Quantum.Id 2 \\<Otimes> Z) * ?q\n            else if (fst ?b, snd ?b) = (bit.one, bit.one)\n                 then (Quantum.Id 2 \\<Otimes> Z * X) * ?q else undefined\n  alice_out ?\\<phi> ?q \\<equiv>\n  if ?q =\n     Tensor.mat_of_cols_list 8\n      [[?\\<phi> $$ (0, 0), ?\\<phi> $$ (1, 0), 0, 0, 0, 0, 0, 0]]\n  then (bit.zero, bit.zero)\n  else if ?q =\n          Tensor.mat_of_cols_list 8\n           [[0, 0, ?\\<phi> $$ (1, 0), ?\\<phi> $$ (0, 0), 0, 0, 0, 0]]\n       then (bit.zero, bit.one)\n       else if ?q =\n               Tensor.mat_of_cols_list 8\n                [[0, 0, 0, 0, ?\\<phi> $$ (0, 0), - ?\\<phi> $$ (1, 0), 0, 0]]\n            then (bit.one, bit.zero)\n            else if ?q =\n                    Tensor.mat_of_cols_list 8\n                     [[0, 0, 0, 0, 0, 0, - ?\\<phi> $$ (1, 0),\n                       ?\\<phi> $$ (0, 0)]]\n                 then (bit.one, bit.one) else undefined\n  q = Tensor.mat_of_cols_list 8 [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]]\n  Quantum.Id 2 \\<Otimes> X = M3\n\ngoal (1 subgoal):\n 1. dim_row (bob q (alice_out \\<phi> q)) =\n    dim_row (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes> \\<phi>)", "by simp"], ["proof (state)\nthis:\n  dim_row (bob q (alice_out \\<phi> q)) =\n  dim_row (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes> \\<phi>)\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>q =\n                Tensor.mat_of_cols_list 8\n                 [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]];\n        i < dim_row\n             (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes> \\<phi>);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes>\n              \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (i, j) =\n                         (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes>\n                          \\<phi>) $$\n                         (i, j)\n 2. q =\n    Tensor.mat_of_cols_list 8\n     [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]] \\<Longrightarrow>\n    dim_col (bob q (alice_out \\<phi> q)) =\n    dim_col (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes> \\<phi>)", "show \"dim_col (bob q (alice_out \\<phi> q)) = dim_col (Tensor.mat_of_cols_list 4 [[0,1,0,0]] \\<Otimes> \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col (bob q (alice_out \\<phi> q)) =\n    dim_col (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes> \\<phi>)", "using mat_of_cols_list_def a0 a1 assms(1) state_def bob_def alice_out_def asm"], ["proof (prove)\nusing this:\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  \\<alpha> = \\<phi> $$ (0, 0)\n  \\<beta> = \\<phi> $$ (1, 0)\n  state 1 \\<phi>\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n  bob ?q ?b \\<equiv>\n  if (fst ?b, snd ?b) = (bit.zero, bit.zero) then ?q\n  else if (fst ?b, snd ?b) = (bit.zero, bit.one)\n       then (Quantum.Id 2 \\<Otimes> X) * ?q\n       else if (fst ?b, snd ?b) = (bit.one, bit.zero)\n            then (Quantum.Id 2 \\<Otimes> Z) * ?q\n            else if (fst ?b, snd ?b) = (bit.one, bit.one)\n                 then (Quantum.Id 2 \\<Otimes> Z * X) * ?q else undefined\n  alice_out ?\\<phi> ?q \\<equiv>\n  if ?q =\n     Tensor.mat_of_cols_list 8\n      [[?\\<phi> $$ (0, 0), ?\\<phi> $$ (1, 0), 0, 0, 0, 0, 0, 0]]\n  then (bit.zero, bit.zero)\n  else if ?q =\n          Tensor.mat_of_cols_list 8\n           [[0, 0, ?\\<phi> $$ (1, 0), ?\\<phi> $$ (0, 0), 0, 0, 0, 0]]\n       then (bit.zero, bit.one)\n       else if ?q =\n               Tensor.mat_of_cols_list 8\n                [[0, 0, 0, 0, ?\\<phi> $$ (0, 0), - ?\\<phi> $$ (1, 0), 0, 0]]\n            then (bit.one, bit.zero)\n            else if ?q =\n                    Tensor.mat_of_cols_list 8\n                     [[0, 0, 0, 0, 0, 0, - ?\\<phi> $$ (1, 0),\n                       ?\\<phi> $$ (0, 0)]]\n                 then (bit.one, bit.one) else undefined\n  q = Tensor.mat_of_cols_list 8 [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]]\n\ngoal (1 subgoal):\n 1. dim_col (bob q (alice_out \\<phi> q)) =\n    dim_col (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes> \\<phi>)", "by simp"], ["proof (state)\nthis:\n  dim_col (bob q (alice_out \\<phi> q)) =\n  dim_col (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes> \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>q =\n                Tensor.mat_of_cols_list 8\n                 [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]];\n        i < dim_row\n             (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes> \\<phi>);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes>\n              \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (i, j) =\n                         (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes>\n                          \\<phi>) $$\n                         (i, j)", "show \"\\<And>i j. i < dim_row (Tensor.mat_of_cols_list 4 [[0,1,0,0]] \\<Otimes> \\<phi>) \\<Longrightarrow> \n                j < dim_col (Tensor.mat_of_cols_list 4 [[0,1,0,0]] \\<Otimes> \\<phi>) \\<Longrightarrow>\n           bob q (alice_out \\<phi> q) $$ (i,j) = (Tensor.mat_of_cols_list 4 [[0,1,0,0]] \\<Otimes> \\<phi>) $$ (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes>\n                      \\<phi>);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes>\n              \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (i, j) =\n                         (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes>\n                          \\<phi>) $$\n                         (i, j)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes>\n                      \\<phi>);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes>\n              \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (i, j) =\n                         (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes>\n                          \\<phi>) $$\n                         (i, j)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes>\n                      \\<phi>);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes>\n              \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (i, j) =\n                         (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes>\n                          \\<phi>) $$\n                         (i, j)", "assume \"i < dim_row (Tensor.mat_of_cols_list 4 [[0,1,0,0]] \\<Otimes> \\<phi>)\" and\n                     \"j < dim_col (Tensor.mat_of_cols_list 4 [[0,1,0,0]] \\<Otimes> \\<phi>)\""], ["proof (state)\nthis:\n  i < dim_row (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes> \\<phi>)\n  j < dim_col (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes> \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes>\n                      \\<phi>);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes>\n              \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (i, j) =\n                         (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes>\n                          \\<phi>) $$\n                         (i, j)", "then"], ["proof (chain)\npicking this:\n  i < dim_row (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes> \\<phi>)\n  j < dim_col (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes> \\<phi>)", "have c1:\"i \\<in> {0..<8} \\<and> j = 0\""], ["proof (prove)\nusing this:\n  i < dim_row (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes> \\<phi>)\n  j < dim_col (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes> \\<phi>)\n\ngoal (1 subgoal):\n 1. i \\<in> {0..<8} \\<and> j = 0", "using asm mat_of_cols_list_def assms(1) state_def"], ["proof (prove)\nusing this:\n  i < dim_row (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes> \\<phi>)\n  j < dim_col (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes> \\<phi>)\n  q = Tensor.mat_of_cols_list 8 [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]]\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  state 1 \\<phi>\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n\ngoal (1 subgoal):\n 1. i \\<in> {0..<8} \\<and> j = 0", "by auto"], ["proof (state)\nthis:\n  i \\<in> {0..<8} \\<and> j = 0\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes>\n                      \\<phi>);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes>\n              \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (i, j) =\n                         (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes>\n                          \\<phi>) $$\n                         (i, j)", "then"], ["proof (chain)\npicking this:\n  i \\<in> {0..<8} \\<and> j = 0", "have \"(M3 * (Matrix.mat 8 1 (\\<lambda>(i,j). [[0,0,\\<phi> $$ (1,0),\\<phi> $$ (0,0),0,0,0,0]]!j!i))) $$ (i,j) = \n(Tensor.mat_of_cols_list 4 [[0,1,0,0]] \\<Otimes> \\<phi>) $$ (i,j)\""], ["proof (prove)\nusing this:\n  i \\<in> {0..<8} \\<and> j = 0\n\ngoal (1 subgoal):\n 1. (M3 *\n     Matrix.mat 8 1\n      (\\<lambda>(i, j).\n          [[0, 0, \\<phi> $$ (1, 0), \\<phi> $$ (0, 0), 0, 0, 0, 0]] ! j !\n          i)) $$\n    (i, j) =\n    (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes> \\<phi>) $$ (i, j)", "using state_def assms(1)"], ["proof (prove)\nusing this:\n  i \\<in> {0..<8} \\<and> j = 0\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n  state 1 \\<phi>\n\ngoal (1 subgoal):\n 1. (M3 *\n     Matrix.mat 8 1\n      (\\<lambda>(i, j).\n          [[0, 0, \\<phi> $$ (1, 0), \\<phi> $$ (0, 0), 0, 0, 0, 0]] ! j !\n          i)) $$\n    (i, j) =\n    (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes> \\<phi>) $$ (i, j)", "by(auto simp add:  a0 a1 mat_of_cols_list_def times_mat_def scalar_prod_def)"], ["proof (state)\nthis:\n  (M3 *\n   Matrix.mat 8 1\n    (\\<lambda>(i, j).\n        [[0, 0, \\<phi> $$ (1, 0), \\<phi> $$ (0, 0), 0, 0, 0, 0]] ! j !\n        i)) $$\n  (i, j) =\n  (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes> \\<phi>) $$ (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes>\n                      \\<phi>);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes>\n              \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (i, j) =\n                         (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes>\n                          \\<phi>) $$\n                         (i, j)", "then"], ["proof (chain)\npicking this:\n  (M3 *\n   Matrix.mat 8 1\n    (\\<lambda>(i, j).\n        [[0, 0, \\<phi> $$ (1, 0), \\<phi> $$ (0, 0), 0, 0, 0, 0]] ! j !\n        i)) $$\n  (i, j) =\n  (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes> \\<phi>) $$ (i, j)", "show \"bob q (alice_out \\<phi> q) $$ (i,j) = (Tensor.mat_of_cols_list 4 [[0,1,0,0]] \\<Otimes> \\<phi>) $$ (i,j)\""], ["proof (prove)\nusing this:\n  (M3 *\n   Matrix.mat 8 1\n    (\\<lambda>(i, j).\n        [[0, 0, \\<phi> $$ (1, 0), \\<phi> $$ (0, 0), 0, 0, 0, 0]] ! j !\n        i)) $$\n  (i, j) =\n  (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes> \\<phi>) $$ (i, j)\n\ngoal (1 subgoal):\n 1. bob q (alice_out \\<phi> q) $$ (i, j) =\n    (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes> \\<phi>) $$ (i, j)", "using bob_def alice_out_def asm c1 a0 a1 mat_of_cols_list_def tensor_prod_of_id_2_x assms(1)"], ["proof (prove)\nusing this:\n  (M3 *\n   Matrix.mat 8 1\n    (\\<lambda>(i, j).\n        [[0, 0, \\<phi> $$ (1, 0), \\<phi> $$ (0, 0), 0, 0, 0, 0]] ! j !\n        i)) $$\n  (i, j) =\n  (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes> \\<phi>) $$ (i, j)\n  bob ?q ?b \\<equiv>\n  if (fst ?b, snd ?b) = (bit.zero, bit.zero) then ?q\n  else if (fst ?b, snd ?b) = (bit.zero, bit.one)\n       then (Quantum.Id 2 \\<Otimes> X) * ?q\n       else if (fst ?b, snd ?b) = (bit.one, bit.zero)\n            then (Quantum.Id 2 \\<Otimes> Z) * ?q\n            else if (fst ?b, snd ?b) = (bit.one, bit.one)\n                 then (Quantum.Id 2 \\<Otimes> Z * X) * ?q else undefined\n  alice_out ?\\<phi> ?q \\<equiv>\n  if ?q =\n     Tensor.mat_of_cols_list 8\n      [[?\\<phi> $$ (0, 0), ?\\<phi> $$ (1, 0), 0, 0, 0, 0, 0, 0]]\n  then (bit.zero, bit.zero)\n  else if ?q =\n          Tensor.mat_of_cols_list 8\n           [[0, 0, ?\\<phi> $$ (1, 0), ?\\<phi> $$ (0, 0), 0, 0, 0, 0]]\n       then (bit.zero, bit.one)\n       else if ?q =\n               Tensor.mat_of_cols_list 8\n                [[0, 0, 0, 0, ?\\<phi> $$ (0, 0), - ?\\<phi> $$ (1, 0), 0, 0]]\n            then (bit.one, bit.zero)\n            else if ?q =\n                    Tensor.mat_of_cols_list 8\n                     [[0, 0, 0, 0, 0, 0, - ?\\<phi> $$ (1, 0),\n                       ?\\<phi> $$ (0, 0)]]\n                 then (bit.one, bit.one) else undefined\n  q = Tensor.mat_of_cols_list 8 [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]]\n  i \\<in> {0..<8} \\<and> j = 0\n  \\<alpha> = \\<phi> $$ (0, 0)\n  \\<beta> = \\<phi> $$ (1, 0)\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  Quantum.Id 2 \\<Otimes> X = M3\n  state 1 \\<phi>\n\ngoal (1 subgoal):\n 1. bob q (alice_out \\<phi> q) $$ (i, j) =\n    (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes> \\<phi>) $$ (i, j)", "by simp"], ["proof (state)\nthis:\n  bob q (alice_out \\<phi> q) $$ (i, j) =\n  (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes> \\<phi>) $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?i < dim_row\n                 (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes>\n                  \\<phi>);\n   ?j < dim_col\n         (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes>\n          \\<phi>)\\<rbrakk>\n  \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (?i, ?j) =\n                    (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes>\n                     \\<phi>) $$\n                    (?i, ?j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  q =\n  Tensor.mat_of_cols_list 8\n   [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]] \\<Longrightarrow>\n  bob q (alice_out \\<phi> q) =\n  Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes> \\<phi>\n\ngoal (1 subgoal):\n 1. \\<exists>r.\n       state 2 r \\<and> bob q (alice_out \\<phi> q) = r \\<Otimes> \\<phi>", "moreover"], ["proof (state)\nthis:\n  q =\n  Tensor.mat_of_cols_list 8\n   [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]] \\<Longrightarrow>\n  bob q (alice_out \\<phi> q) =\n  Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes> \\<phi>\n\ngoal (1 subgoal):\n 1. \\<exists>r.\n       state 2 r \\<and> bob q (alice_out \\<phi> q) = r \\<Otimes> \\<phi>", "have \"q = mat_of_cols_list 8 [[0,0,0,0,\\<alpha>,-\\<beta>,0,0]] \\<Longrightarrow> bob q (alice_out \\<phi> q) = \nmat_of_cols_list 4 [[0,0,1,0]] \\<Otimes> \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q =\n    Tensor.mat_of_cols_list 8\n     [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]] \\<Longrightarrow>\n    bob q (alice_out \\<phi> q) =\n    Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes> \\<phi>", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>q =\n                Tensor.mat_of_cols_list 8\n                 [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]];\n        i < dim_row\n             (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes> \\<phi>);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes>\n              \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (i, j) =\n                         (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes>\n                          \\<phi>) $$\n                         (i, j)\n 2. q =\n    Tensor.mat_of_cols_list 8\n     [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]] \\<Longrightarrow>\n    dim_row (bob q (alice_out \\<phi> q)) =\n    dim_row (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes> \\<phi>)\n 3. q =\n    Tensor.mat_of_cols_list 8\n     [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]] \\<Longrightarrow>\n    dim_col (bob q (alice_out \\<phi> q)) =\n    dim_col (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes> \\<phi>)", "assume asm:\"q = Tensor.mat_of_cols_list 8 [[0,0,0,0,\\<alpha>,-\\<beta>,0,0]]\""], ["proof (state)\nthis:\n  q = Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]]\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>q =\n                Tensor.mat_of_cols_list 8\n                 [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]];\n        i < dim_row\n             (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes> \\<phi>);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes>\n              \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (i, j) =\n                         (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes>\n                          \\<phi>) $$\n                         (i, j)\n 2. q =\n    Tensor.mat_of_cols_list 8\n     [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]] \\<Longrightarrow>\n    dim_row (bob q (alice_out \\<phi> q)) =\n    dim_row (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes> \\<phi>)\n 3. q =\n    Tensor.mat_of_cols_list 8\n     [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]] \\<Longrightarrow>\n    dim_col (bob q (alice_out \\<phi> q)) =\n    dim_col (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes> \\<phi>)", "show \"dim_row (bob q (alice_out \\<phi> q)) = dim_row (Tensor.mat_of_cols_list 4 [[0,0,1,0]] \\<Otimes> \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row (bob q (alice_out \\<phi> q)) =\n    dim_row (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes> \\<phi>)", "using mat_of_cols_list_def a0 a1 assms(1) state_def bob_def alice_out_def asm tensor_prod_of_id_2_z"], ["proof (prove)\nusing this:\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  \\<alpha> = \\<phi> $$ (0, 0)\n  \\<beta> = \\<phi> $$ (1, 0)\n  state 1 \\<phi>\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n  bob ?q ?b \\<equiv>\n  if (fst ?b, snd ?b) = (bit.zero, bit.zero) then ?q\n  else if (fst ?b, snd ?b) = (bit.zero, bit.one)\n       then (Quantum.Id 2 \\<Otimes> X) * ?q\n       else if (fst ?b, snd ?b) = (bit.one, bit.zero)\n            then (Quantum.Id 2 \\<Otimes> Z) * ?q\n            else if (fst ?b, snd ?b) = (bit.one, bit.one)\n                 then (Quantum.Id 2 \\<Otimes> Z * X) * ?q else undefined\n  alice_out ?\\<phi> ?q \\<equiv>\n  if ?q =\n     Tensor.mat_of_cols_list 8\n      [[?\\<phi> $$ (0, 0), ?\\<phi> $$ (1, 0), 0, 0, 0, 0, 0, 0]]\n  then (bit.zero, bit.zero)\n  else if ?q =\n          Tensor.mat_of_cols_list 8\n           [[0, 0, ?\\<phi> $$ (1, 0), ?\\<phi> $$ (0, 0), 0, 0, 0, 0]]\n       then (bit.zero, bit.one)\n       else if ?q =\n               Tensor.mat_of_cols_list 8\n                [[0, 0, 0, 0, ?\\<phi> $$ (0, 0), - ?\\<phi> $$ (1, 0), 0, 0]]\n            then (bit.one, bit.zero)\n            else if ?q =\n                    Tensor.mat_of_cols_list 8\n                     [[0, 0, 0, 0, 0, 0, - ?\\<phi> $$ (1, 0),\n                       ?\\<phi> $$ (0, 0)]]\n                 then (bit.one, bit.one) else undefined\n  q = Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]]\n  Quantum.Id 2 \\<Otimes> Z = M5\n\ngoal (1 subgoal):\n 1. dim_row (bob q (alice_out \\<phi> q)) =\n    dim_row (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes> \\<phi>)", "by simp"], ["proof (state)\nthis:\n  dim_row (bob q (alice_out \\<phi> q)) =\n  dim_row (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes> \\<phi>)\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>q =\n                Tensor.mat_of_cols_list 8\n                 [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]];\n        i < dim_row\n             (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes> \\<phi>);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes>\n              \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (i, j) =\n                         (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes>\n                          \\<phi>) $$\n                         (i, j)\n 2. q =\n    Tensor.mat_of_cols_list 8\n     [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]] \\<Longrightarrow>\n    dim_col (bob q (alice_out \\<phi> q)) =\n    dim_col (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes> \\<phi>)", "show \"dim_col (bob q (alice_out \\<phi> q)) = dim_col (Tensor.mat_of_cols_list 4 [[0,0,1,0]] \\<Otimes> \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col (bob q (alice_out \\<phi> q)) =\n    dim_col (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes> \\<phi>)", "using mat_of_cols_list_def a0 a1 assms(1) state_def bob_def alice_out_def asm"], ["proof (prove)\nusing this:\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  \\<alpha> = \\<phi> $$ (0, 0)\n  \\<beta> = \\<phi> $$ (1, 0)\n  state 1 \\<phi>\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n  bob ?q ?b \\<equiv>\n  if (fst ?b, snd ?b) = (bit.zero, bit.zero) then ?q\n  else if (fst ?b, snd ?b) = (bit.zero, bit.one)\n       then (Quantum.Id 2 \\<Otimes> X) * ?q\n       else if (fst ?b, snd ?b) = (bit.one, bit.zero)\n            then (Quantum.Id 2 \\<Otimes> Z) * ?q\n            else if (fst ?b, snd ?b) = (bit.one, bit.one)\n                 then (Quantum.Id 2 \\<Otimes> Z * X) * ?q else undefined\n  alice_out ?\\<phi> ?q \\<equiv>\n  if ?q =\n     Tensor.mat_of_cols_list 8\n      [[?\\<phi> $$ (0, 0), ?\\<phi> $$ (1, 0), 0, 0, 0, 0, 0, 0]]\n  then (bit.zero, bit.zero)\n  else if ?q =\n          Tensor.mat_of_cols_list 8\n           [[0, 0, ?\\<phi> $$ (1, 0), ?\\<phi> $$ (0, 0), 0, 0, 0, 0]]\n       then (bit.zero, bit.one)\n       else if ?q =\n               Tensor.mat_of_cols_list 8\n                [[0, 0, 0, 0, ?\\<phi> $$ (0, 0), - ?\\<phi> $$ (1, 0), 0, 0]]\n            then (bit.one, bit.zero)\n            else if ?q =\n                    Tensor.mat_of_cols_list 8\n                     [[0, 0, 0, 0, 0, 0, - ?\\<phi> $$ (1, 0),\n                       ?\\<phi> $$ (0, 0)]]\n                 then (bit.one, bit.one) else undefined\n  q = Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]]\n\ngoal (1 subgoal):\n 1. dim_col (bob q (alice_out \\<phi> q)) =\n    dim_col (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes> \\<phi>)", "by simp"], ["proof (state)\nthis:\n  dim_col (bob q (alice_out \\<phi> q)) =\n  dim_col (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes> \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>q =\n                Tensor.mat_of_cols_list 8\n                 [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]];\n        i < dim_row\n             (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes> \\<phi>);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes>\n              \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (i, j) =\n                         (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes>\n                          \\<phi>) $$\n                         (i, j)", "show \"\\<And>i j. i < dim_row (Tensor.mat_of_cols_list 4 [[0,0,1,0]] \\<Otimes> \\<phi>) \\<Longrightarrow> \n                j < dim_col (Tensor.mat_of_cols_list 4 [[0,0,1,0]] \\<Otimes> \\<phi>) \\<Longrightarrow>\n           bob q (alice_out \\<phi> q) $$ (i,j) = (Tensor.mat_of_cols_list 4 [[0,0,1,0]] \\<Otimes> \\<phi>) $$ (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes>\n                      \\<phi>);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes>\n              \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (i, j) =\n                         (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes>\n                          \\<phi>) $$\n                         (i, j)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes>\n                      \\<phi>);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes>\n              \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (i, j) =\n                         (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes>\n                          \\<phi>) $$\n                         (i, j)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes>\n                      \\<phi>);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes>\n              \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (i, j) =\n                         (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes>\n                          \\<phi>) $$\n                         (i, j)", "assume \"i < dim_row (Tensor.mat_of_cols_list 4 [[0,0,1,0]] \\<Otimes> \\<phi>)\" and\n                     \"j < dim_col (Tensor.mat_of_cols_list 4 [[0,0,1,0]] \\<Otimes> \\<phi>)\""], ["proof (state)\nthis:\n  i < dim_row (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes> \\<phi>)\n  j < dim_col (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes> \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes>\n                      \\<phi>);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes>\n              \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (i, j) =\n                         (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes>\n                          \\<phi>) $$\n                         (i, j)", "then"], ["proof (chain)\npicking this:\n  i < dim_row (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes> \\<phi>)\n  j < dim_col (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes> \\<phi>)", "have c1:\"i \\<in> {0..<8} \\<and> j = 0\""], ["proof (prove)\nusing this:\n  i < dim_row (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes> \\<phi>)\n  j < dim_col (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes> \\<phi>)\n\ngoal (1 subgoal):\n 1. i \\<in> {0..<8} \\<and> j = 0", "using asm mat_of_cols_list_def assms state_def"], ["proof (prove)\nusing this:\n  i < dim_row (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes> \\<phi>)\n  j < dim_col (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes> \\<phi>)\n  q = Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]]\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  state 1 \\<phi>\n  state 3 q\n  List.member (alice_meas \\<phi>) (p, q)\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n\ngoal (1 subgoal):\n 1. i \\<in> {0..<8} \\<and> j = 0", "by auto"], ["proof (state)\nthis:\n  i \\<in> {0..<8} \\<and> j = 0\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes>\n                      \\<phi>);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes>\n              \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (i, j) =\n                         (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes>\n                          \\<phi>) $$\n                         (i, j)", "then"], ["proof (chain)\npicking this:\n  i \\<in> {0..<8} \\<and> j = 0", "have \"(M5 * (Matrix.mat 8 (Suc 0) (\\<lambda>(i,j). [[0,0,0,0,\\<phi> $$ (0,0),-\\<phi> $$ (Suc 0,0),0,0]]!j!i))) $$ (i,j) = \n(Tensor.mat_of_cols_list 4 [[0,0,1,0]] \\<Otimes> \\<phi>) $$ (i,j)\""], ["proof (prove)\nusing this:\n  i \\<in> {0..<8} \\<and> j = 0\n\ngoal (1 subgoal):\n 1. (M5 *\n     Matrix.mat 8 (Suc 0)\n      (\\<lambda>(i, j).\n          [[0, 0, 0, 0, \\<phi> $$ (0, 0), - \\<phi> $$ (Suc 0, 0), 0, 0]] !\n          j !\n          i)) $$\n    (i, j) =\n    (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes> \\<phi>) $$ (i, j)", "using state_def assms(1)"], ["proof (prove)\nusing this:\n  i \\<in> {0..<8} \\<and> j = 0\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n  state 1 \\<phi>\n\ngoal (1 subgoal):\n 1. (M5 *\n     Matrix.mat 8 (Suc 0)\n      (\\<lambda>(i, j).\n          [[0, 0, 0, 0, \\<phi> $$ (0, 0), - \\<phi> $$ (Suc 0, 0), 0, 0]] !\n          j !\n          i)) $$\n    (i, j) =\n    (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes> \\<phi>) $$ (i, j)", "by(auto simp add: a0 a1 mat_of_cols_list_def times_mat_def scalar_prod_def)"], ["proof (state)\nthis:\n  (M5 *\n   Matrix.mat 8 (Suc 0)\n    (\\<lambda>(i, j).\n        [[0, 0, 0, 0, \\<phi> $$ (0, 0), - \\<phi> $$ (Suc 0, 0), 0, 0]] ! j !\n        i)) $$\n  (i, j) =\n  (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes> \\<phi>) $$ (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes>\n                      \\<phi>);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes>\n              \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (i, j) =\n                         (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes>\n                          \\<phi>) $$\n                         (i, j)", "then"], ["proof (chain)\npicking this:\n  (M5 *\n   Matrix.mat 8 (Suc 0)\n    (\\<lambda>(i, j).\n        [[0, 0, 0, 0, \\<phi> $$ (0, 0), - \\<phi> $$ (Suc 0, 0), 0, 0]] ! j !\n        i)) $$\n  (i, j) =\n  (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes> \\<phi>) $$ (i, j)", "show \"bob q (alice_out \\<phi> q) $$ (i,j) = (Tensor.mat_of_cols_list 4 [[0,0,1,0]] \\<Otimes> \\<phi>) $$ (i,j)\""], ["proof (prove)\nusing this:\n  (M5 *\n   Matrix.mat 8 (Suc 0)\n    (\\<lambda>(i, j).\n        [[0, 0, 0, 0, \\<phi> $$ (0, 0), - \\<phi> $$ (Suc 0, 0), 0, 0]] ! j !\n        i)) $$\n  (i, j) =\n  (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes> \\<phi>) $$ (i, j)\n\ngoal (1 subgoal):\n 1. bob q (alice_out \\<phi> q) $$ (i, j) =\n    (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes> \\<phi>) $$ (i, j)", "using bob_def alice_out_def asm c1 a0 a1 mat_of_cols_list_def tensor_prod_of_id_2_z assms(1)"], ["proof (prove)\nusing this:\n  (M5 *\n   Matrix.mat 8 (Suc 0)\n    (\\<lambda>(i, j).\n        [[0, 0, 0, 0, \\<phi> $$ (0, 0), - \\<phi> $$ (Suc 0, 0), 0, 0]] ! j !\n        i)) $$\n  (i, j) =\n  (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes> \\<phi>) $$ (i, j)\n  bob ?q ?b \\<equiv>\n  if (fst ?b, snd ?b) = (bit.zero, bit.zero) then ?q\n  else if (fst ?b, snd ?b) = (bit.zero, bit.one)\n       then (Quantum.Id 2 \\<Otimes> X) * ?q\n       else if (fst ?b, snd ?b) = (bit.one, bit.zero)\n            then (Quantum.Id 2 \\<Otimes> Z) * ?q\n            else if (fst ?b, snd ?b) = (bit.one, bit.one)\n                 then (Quantum.Id 2 \\<Otimes> Z * X) * ?q else undefined\n  alice_out ?\\<phi> ?q \\<equiv>\n  if ?q =\n     Tensor.mat_of_cols_list 8\n      [[?\\<phi> $$ (0, 0), ?\\<phi> $$ (1, 0), 0, 0, 0, 0, 0, 0]]\n  then (bit.zero, bit.zero)\n  else if ?q =\n          Tensor.mat_of_cols_list 8\n           [[0, 0, ?\\<phi> $$ (1, 0), ?\\<phi> $$ (0, 0), 0, 0, 0, 0]]\n       then (bit.zero, bit.one)\n       else if ?q =\n               Tensor.mat_of_cols_list 8\n                [[0, 0, 0, 0, ?\\<phi> $$ (0, 0), - ?\\<phi> $$ (1, 0), 0, 0]]\n            then (bit.one, bit.zero)\n            else if ?q =\n                    Tensor.mat_of_cols_list 8\n                     [[0, 0, 0, 0, 0, 0, - ?\\<phi> $$ (1, 0),\n                       ?\\<phi> $$ (0, 0)]]\n                 then (bit.one, bit.one) else undefined\n  q = Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]]\n  i \\<in> {0..<8} \\<and> j = 0\n  \\<alpha> = \\<phi> $$ (0, 0)\n  \\<beta> = \\<phi> $$ (1, 0)\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  Quantum.Id 2 \\<Otimes> Z = M5\n  state 1 \\<phi>\n\ngoal (1 subgoal):\n 1. bob q (alice_out \\<phi> q) $$ (i, j) =\n    (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes> \\<phi>) $$ (i, j)", "by simp"], ["proof (state)\nthis:\n  bob q (alice_out \\<phi> q) $$ (i, j) =\n  (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes> \\<phi>) $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?i < dim_row\n                 (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes>\n                  \\<phi>);\n   ?j < dim_col\n         (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes>\n          \\<phi>)\\<rbrakk>\n  \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (?i, ?j) =\n                    (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes>\n                     \\<phi>) $$\n                    (?i, ?j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  q =\n  Tensor.mat_of_cols_list 8\n   [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]] \\<Longrightarrow>\n  bob q (alice_out \\<phi> q) =\n  Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes> \\<phi>\n\ngoal (1 subgoal):\n 1. \\<exists>r.\n       state 2 r \\<and> bob q (alice_out \\<phi> q) = r \\<Otimes> \\<phi>", "moreover"], ["proof (state)\nthis:\n  q =\n  Tensor.mat_of_cols_list 8\n   [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]] \\<Longrightarrow>\n  bob q (alice_out \\<phi> q) =\n  Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes> \\<phi>\n\ngoal (1 subgoal):\n 1. \\<exists>r.\n       state 2 r \\<and> bob q (alice_out \\<phi> q) = r \\<Otimes> \\<phi>", "have \"q = mat_of_cols_list 8 [[0, 0, 0, 0, 0, 0, -\\<beta>, \\<alpha>]] \\<Longrightarrow> bob q (alice_out \\<phi> q) = \nmat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes> \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q =\n    Tensor.mat_of_cols_list 8\n     [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]] \\<Longrightarrow>\n    bob q (alice_out \\<phi> q) =\n    Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes> \\<phi>", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>q =\n                Tensor.mat_of_cols_list 8\n                 [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]];\n        i < dim_row\n             (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes> \\<phi>);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes>\n              \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (i, j) =\n                         (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes>\n                          \\<phi>) $$\n                         (i, j)\n 2. q =\n    Tensor.mat_of_cols_list 8\n     [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]] \\<Longrightarrow>\n    dim_row (bob q (alice_out \\<phi> q)) =\n    dim_row (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes> \\<phi>)\n 3. q =\n    Tensor.mat_of_cols_list 8\n     [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]] \\<Longrightarrow>\n    dim_col (bob q (alice_out \\<phi> q)) =\n    dim_col (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes> \\<phi>)", "assume asm:\"q = Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, 0, 0, -\\<beta>, \\<alpha>]]\""], ["proof (state)\nthis:\n  q = Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]]\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>q =\n                Tensor.mat_of_cols_list 8\n                 [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]];\n        i < dim_row\n             (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes> \\<phi>);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes>\n              \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (i, j) =\n                         (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes>\n                          \\<phi>) $$\n                         (i, j)\n 2. q =\n    Tensor.mat_of_cols_list 8\n     [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]] \\<Longrightarrow>\n    dim_row (bob q (alice_out \\<phi> q)) =\n    dim_row (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes> \\<phi>)\n 3. q =\n    Tensor.mat_of_cols_list 8\n     [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]] \\<Longrightarrow>\n    dim_col (bob q (alice_out \\<phi> q)) =\n    dim_col (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes> \\<phi>)", "show \"dim_row (bob q (alice_out \\<phi> q)) = dim_row (Tensor.mat_of_cols_list 4 [[0,0,0,1]] \\<Otimes> \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row (bob q (alice_out \\<phi> q)) =\n    dim_row (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes> \\<phi>)", "using mat_of_cols_list_def a0 a1 assms(1) state_def bob_def alice_out_def asm tensor_prod_of_id_2_y"], ["proof (prove)\nusing this:\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  \\<alpha> = \\<phi> $$ (0, 0)\n  \\<beta> = \\<phi> $$ (1, 0)\n  state 1 \\<phi>\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n  bob ?q ?b \\<equiv>\n  if (fst ?b, snd ?b) = (bit.zero, bit.zero) then ?q\n  else if (fst ?b, snd ?b) = (bit.zero, bit.one)\n       then (Quantum.Id 2 \\<Otimes> X) * ?q\n       else if (fst ?b, snd ?b) = (bit.one, bit.zero)\n            then (Quantum.Id 2 \\<Otimes> Z) * ?q\n            else if (fst ?b, snd ?b) = (bit.one, bit.one)\n                 then (Quantum.Id 2 \\<Otimes> Z * X) * ?q else undefined\n  alice_out ?\\<phi> ?q \\<equiv>\n  if ?q =\n     Tensor.mat_of_cols_list 8\n      [[?\\<phi> $$ (0, 0), ?\\<phi> $$ (1, 0), 0, 0, 0, 0, 0, 0]]\n  then (bit.zero, bit.zero)\n  else if ?q =\n          Tensor.mat_of_cols_list 8\n           [[0, 0, ?\\<phi> $$ (1, 0), ?\\<phi> $$ (0, 0), 0, 0, 0, 0]]\n       then (bit.zero, bit.one)\n       else if ?q =\n               Tensor.mat_of_cols_list 8\n                [[0, 0, 0, 0, ?\\<phi> $$ (0, 0), - ?\\<phi> $$ (1, 0), 0, 0]]\n            then (bit.one, bit.zero)\n            else if ?q =\n                    Tensor.mat_of_cols_list 8\n                     [[0, 0, 0, 0, 0, 0, - ?\\<phi> $$ (1, 0),\n                       ?\\<phi> $$ (0, 0)]]\n                 then (bit.one, bit.one) else undefined\n  q = Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]]\n  Quantum.Id 2 \\<Otimes> Z * X = M4\n\ngoal (1 subgoal):\n 1. dim_row (bob q (alice_out \\<phi> q)) =\n    dim_row (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes> \\<phi>)", "by simp"], ["proof (state)\nthis:\n  dim_row (bob q (alice_out \\<phi> q)) =\n  dim_row (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes> \\<phi>)\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>q =\n                Tensor.mat_of_cols_list 8\n                 [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]];\n        i < dim_row\n             (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes> \\<phi>);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes>\n              \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (i, j) =\n                         (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes>\n                          \\<phi>) $$\n                         (i, j)\n 2. q =\n    Tensor.mat_of_cols_list 8\n     [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]] \\<Longrightarrow>\n    dim_col (bob q (alice_out \\<phi> q)) =\n    dim_col (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes> \\<phi>)", "show \"dim_col (bob q (alice_out \\<phi> q)) = dim_col (Tensor.mat_of_cols_list 4 [[0,0,0,1]] \\<Otimes> \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col (bob q (alice_out \\<phi> q)) =\n    dim_col (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes> \\<phi>)", "using mat_of_cols_list_def a0 a1 assms(1) state_def bob_def alice_out_def asm"], ["proof (prove)\nusing this:\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  \\<alpha> = \\<phi> $$ (0, 0)\n  \\<beta> = \\<phi> $$ (1, 0)\n  state 1 \\<phi>\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n  bob ?q ?b \\<equiv>\n  if (fst ?b, snd ?b) = (bit.zero, bit.zero) then ?q\n  else if (fst ?b, snd ?b) = (bit.zero, bit.one)\n       then (Quantum.Id 2 \\<Otimes> X) * ?q\n       else if (fst ?b, snd ?b) = (bit.one, bit.zero)\n            then (Quantum.Id 2 \\<Otimes> Z) * ?q\n            else if (fst ?b, snd ?b) = (bit.one, bit.one)\n                 then (Quantum.Id 2 \\<Otimes> Z * X) * ?q else undefined\n  alice_out ?\\<phi> ?q \\<equiv>\n  if ?q =\n     Tensor.mat_of_cols_list 8\n      [[?\\<phi> $$ (0, 0), ?\\<phi> $$ (1, 0), 0, 0, 0, 0, 0, 0]]\n  then (bit.zero, bit.zero)\n  else if ?q =\n          Tensor.mat_of_cols_list 8\n           [[0, 0, ?\\<phi> $$ (1, 0), ?\\<phi> $$ (0, 0), 0, 0, 0, 0]]\n       then (bit.zero, bit.one)\n       else if ?q =\n               Tensor.mat_of_cols_list 8\n                [[0, 0, 0, 0, ?\\<phi> $$ (0, 0), - ?\\<phi> $$ (1, 0), 0, 0]]\n            then (bit.one, bit.zero)\n            else if ?q =\n                    Tensor.mat_of_cols_list 8\n                     [[0, 0, 0, 0, 0, 0, - ?\\<phi> $$ (1, 0),\n                       ?\\<phi> $$ (0, 0)]]\n                 then (bit.one, bit.one) else undefined\n  q = Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]]\n\ngoal (1 subgoal):\n 1. dim_col (bob q (alice_out \\<phi> q)) =\n    dim_col (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes> \\<phi>)", "by simp"], ["proof (state)\nthis:\n  dim_col (bob q (alice_out \\<phi> q)) =\n  dim_col (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes> \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>q =\n                Tensor.mat_of_cols_list 8\n                 [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]];\n        i < dim_row\n             (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes> \\<phi>);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes>\n              \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (i, j) =\n                         (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes>\n                          \\<phi>) $$\n                         (i, j)", "show \"\\<And>i j. i < dim_row (Tensor.mat_of_cols_list 4 [[0,0,0,1]] \\<Otimes> \\<phi>) \\<Longrightarrow> \n                j < dim_col (Tensor.mat_of_cols_list 4 [[0,0,0,1]] \\<Otimes> \\<phi>) \\<Longrightarrow>\n           bob q (alice_out \\<phi> q) $$ (i,j) = (Tensor.mat_of_cols_list 4 [[0,0,0,1]] \\<Otimes> \\<phi>) $$ (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes>\n                      \\<phi>);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes>\n              \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (i, j) =\n                         (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes>\n                          \\<phi>) $$\n                         (i, j)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes>\n                      \\<phi>);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes>\n              \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (i, j) =\n                         (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes>\n                          \\<phi>) $$\n                         (i, j)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes>\n                      \\<phi>);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes>\n              \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (i, j) =\n                         (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes>\n                          \\<phi>) $$\n                         (i, j)", "assume \"i < dim_row (Tensor.mat_of_cols_list 4 [[0,0,0,1]] \\<Otimes> \\<phi>)\" and\n                     \"j < dim_col (Tensor.mat_of_cols_list 4 [[0,0,0,1]] \\<Otimes> \\<phi>)\""], ["proof (state)\nthis:\n  i < dim_row (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes> \\<phi>)\n  j < dim_col (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes> \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes>\n                      \\<phi>);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes>\n              \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (i, j) =\n                         (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes>\n                          \\<phi>) $$\n                         (i, j)", "then"], ["proof (chain)\npicking this:\n  i < dim_row (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes> \\<phi>)\n  j < dim_col (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes> \\<phi>)", "have c1:\"i \\<in> {0..<8} \\<and> j = 0\""], ["proof (prove)\nusing this:\n  i < dim_row (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes> \\<phi>)\n  j < dim_col (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes> \\<phi>)\n\ngoal (1 subgoal):\n 1. i \\<in> {0..<8} \\<and> j = 0", "using asm mat_of_cols_list_def assms state_def"], ["proof (prove)\nusing this:\n  i < dim_row (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes> \\<phi>)\n  j < dim_col (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes> \\<phi>)\n  q = Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]]\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  state 1 \\<phi>\n  state 3 q\n  List.member (alice_meas \\<phi>) (p, q)\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n\ngoal (1 subgoal):\n 1. i \\<in> {0..<8} \\<and> j = 0", "by auto"], ["proof (state)\nthis:\n  i \\<in> {0..<8} \\<and> j = 0\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes>\n                      \\<phi>);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes>\n              \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (i, j) =\n                         (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes>\n                          \\<phi>) $$\n                         (i, j)", "then"], ["proof (chain)\npicking this:\n  i \\<in> {0..<8} \\<and> j = 0", "have \"(M4 * (Matrix.mat 8 (Suc 0) (\\<lambda>(i, j). [[0,0,0,0,0,0,-\\<phi> $$ (Suc 0,0),\\<phi> $$ (0,0)]]!j!i))) $$ (i,j) = \n(Tensor.mat_of_cols_list 4 [[0,0,0,1]] \\<Otimes> \\<phi>) $$ (i,j)\""], ["proof (prove)\nusing this:\n  i \\<in> {0..<8} \\<and> j = 0\n\ngoal (1 subgoal):\n 1. (M4 *\n     Matrix.mat 8 (Suc 0)\n      (\\<lambda>(i, j).\n          [[0, 0, 0, 0, 0, 0, - \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0)]] !\n          j !\n          i)) $$\n    (i, j) =\n    (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes> \\<phi>) $$ (i, j)", "using state_def assms(1)"], ["proof (prove)\nusing this:\n  i \\<in> {0..<8} \\<and> j = 0\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n  state 1 \\<phi>\n\ngoal (1 subgoal):\n 1. (M4 *\n     Matrix.mat 8 (Suc 0)\n      (\\<lambda>(i, j).\n          [[0, 0, 0, 0, 0, 0, - \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0)]] !\n          j !\n          i)) $$\n    (i, j) =\n    (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes> \\<phi>) $$ (i, j)", "by(auto simp add: a0 a1 mat_of_cols_list_def times_mat_def scalar_prod_def)"], ["proof (state)\nthis:\n  (M4 *\n   Matrix.mat 8 (Suc 0)\n    (\\<lambda>(i, j).\n        [[0, 0, 0, 0, 0, 0, - \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0)]] ! j !\n        i)) $$\n  (i, j) =\n  (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes> \\<phi>) $$ (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes>\n                      \\<phi>);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes>\n              \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (i, j) =\n                         (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes>\n                          \\<phi>) $$\n                         (i, j)", "then"], ["proof (chain)\npicking this:\n  (M4 *\n   Matrix.mat 8 (Suc 0)\n    (\\<lambda>(i, j).\n        [[0, 0, 0, 0, 0, 0, - \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0)]] ! j !\n        i)) $$\n  (i, j) =\n  (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes> \\<phi>) $$ (i, j)", "show \"bob q (alice_out \\<phi> q) $$ (i,j) = (Tensor.mat_of_cols_list 4 [[0,0,0,1]] \\<Otimes> \\<phi>) $$ (i,j)\""], ["proof (prove)\nusing this:\n  (M4 *\n   Matrix.mat 8 (Suc 0)\n    (\\<lambda>(i, j).\n        [[0, 0, 0, 0, 0, 0, - \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0)]] ! j !\n        i)) $$\n  (i, j) =\n  (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes> \\<phi>) $$ (i, j)\n\ngoal (1 subgoal):\n 1. bob q (alice_out \\<phi> q) $$ (i, j) =\n    (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes> \\<phi>) $$ (i, j)", "using bob_def alice_out_def asm c1 a0 a1 mat_of_cols_list_def tensor_prod_of_id_2_y assms(1)"], ["proof (prove)\nusing this:\n  (M4 *\n   Matrix.mat 8 (Suc 0)\n    (\\<lambda>(i, j).\n        [[0, 0, 0, 0, 0, 0, - \\<phi> $$ (Suc 0, 0), \\<phi> $$ (0, 0)]] ! j !\n        i)) $$\n  (i, j) =\n  (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes> \\<phi>) $$ (i, j)\n  bob ?q ?b \\<equiv>\n  if (fst ?b, snd ?b) = (bit.zero, bit.zero) then ?q\n  else if (fst ?b, snd ?b) = (bit.zero, bit.one)\n       then (Quantum.Id 2 \\<Otimes> X) * ?q\n       else if (fst ?b, snd ?b) = (bit.one, bit.zero)\n            then (Quantum.Id 2 \\<Otimes> Z) * ?q\n            else if (fst ?b, snd ?b) = (bit.one, bit.one)\n                 then (Quantum.Id 2 \\<Otimes> Z * X) * ?q else undefined\n  alice_out ?\\<phi> ?q \\<equiv>\n  if ?q =\n     Tensor.mat_of_cols_list 8\n      [[?\\<phi> $$ (0, 0), ?\\<phi> $$ (1, 0), 0, 0, 0, 0, 0, 0]]\n  then (bit.zero, bit.zero)\n  else if ?q =\n          Tensor.mat_of_cols_list 8\n           [[0, 0, ?\\<phi> $$ (1, 0), ?\\<phi> $$ (0, 0), 0, 0, 0, 0]]\n       then (bit.zero, bit.one)\n       else if ?q =\n               Tensor.mat_of_cols_list 8\n                [[0, 0, 0, 0, ?\\<phi> $$ (0, 0), - ?\\<phi> $$ (1, 0), 0, 0]]\n            then (bit.one, bit.zero)\n            else if ?q =\n                    Tensor.mat_of_cols_list 8\n                     [[0, 0, 0, 0, 0, 0, - ?\\<phi> $$ (1, 0),\n                       ?\\<phi> $$ (0, 0)]]\n                 then (bit.one, bit.one) else undefined\n  q = Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]]\n  i \\<in> {0..<8} \\<and> j = 0\n  \\<alpha> = \\<phi> $$ (0, 0)\n  \\<beta> = \\<phi> $$ (1, 0)\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  Quantum.Id 2 \\<Otimes> Z * X = M4\n  state 1 \\<phi>\n\ngoal (1 subgoal):\n 1. bob q (alice_out \\<phi> q) $$ (i, j) =\n    (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes> \\<phi>) $$ (i, j)", "by simp"], ["proof (state)\nthis:\n  bob q (alice_out \\<phi> q) $$ (i, j) =\n  (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes> \\<phi>) $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?i < dim_row\n                 (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes>\n                  \\<phi>);\n   ?j < dim_col\n         (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes>\n          \\<phi>)\\<rbrakk>\n  \\<Longrightarrow> bob q (alice_out \\<phi> q) $$ (?i, ?j) =\n                    (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes>\n                     \\<phi>) $$\n                    (?i, ?j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  q =\n  Tensor.mat_of_cols_list 8\n   [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]] \\<Longrightarrow>\n  bob q (alice_out \\<phi> q) =\n  Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes> \\<phi>\n\ngoal (1 subgoal):\n 1. \\<exists>r.\n       state 2 r \\<and> bob q (alice_out \\<phi> q) = r \\<Otimes> \\<phi>", "moreover"], ["proof (state)\nthis:\n  q =\n  Tensor.mat_of_cols_list 8\n   [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]] \\<Longrightarrow>\n  bob q (alice_out \\<phi> q) =\n  Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes> \\<phi>\n\ngoal (1 subgoal):\n 1. \\<exists>r.\n       state 2 r \\<and> bob q (alice_out \\<phi> q) = r \\<Otimes> \\<phi>", "have \"state 2 (mat_of_cols_list 4 [[1, 0, 0, 0]])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. state 2 (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]])", "using state_def mat_of_cols_list_def cpx_vec_length_def lessThan_atLeast0"], ["proof (prove)\nusing this:\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  \\<parallel>?v\\<parallel> \\<equiv>\n  sqrt (\\<Sum>i<dim_vec ?v. (cmod (?v $ i))\\<^sup>2)\n  {..<?n} = {0..<?n}\n\ngoal (1 subgoal):\n 1. state 2 (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]])", "by simp"], ["proof (state)\nthis:\n  state 2 (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]])\n\ngoal (1 subgoal):\n 1. \\<exists>r.\n       state 2 r \\<and> bob q (alice_out \\<phi> q) = r \\<Otimes> \\<phi>", "moreover"], ["proof (state)\nthis:\n  state 2 (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]])\n\ngoal (1 subgoal):\n 1. \\<exists>r.\n       state 2 r \\<and> bob q (alice_out \\<phi> q) = r \\<Otimes> \\<phi>", "have \"state 2 (mat_of_cols_list 4 [[0, 1, 0, 0]])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. state 2 (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]])", "using state_def mat_of_cols_list_def cpx_vec_length_def lessThan_atLeast0"], ["proof (prove)\nusing this:\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  \\<parallel>?v\\<parallel> \\<equiv>\n  sqrt (\\<Sum>i<dim_vec ?v. (cmod (?v $ i))\\<^sup>2)\n  {..<?n} = {0..<?n}\n\ngoal (1 subgoal):\n 1. state 2 (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]])", "by simp"], ["proof (state)\nthis:\n  state 2 (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]])\n\ngoal (1 subgoal):\n 1. \\<exists>r.\n       state 2 r \\<and> bob q (alice_out \\<phi> q) = r \\<Otimes> \\<phi>", "moreover"], ["proof (state)\nthis:\n  state 2 (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]])\n\ngoal (1 subgoal):\n 1. \\<exists>r.\n       state 2 r \\<and> bob q (alice_out \\<phi> q) = r \\<Otimes> \\<phi>", "have \"state 2 (mat_of_cols_list 4 [[0, 0, 1, 0]])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. state 2 (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]])", "using state_def mat_of_cols_list_def cpx_vec_length_def lessThan_atLeast0"], ["proof (prove)\nusing this:\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  \\<parallel>?v\\<parallel> \\<equiv>\n  sqrt (\\<Sum>i<dim_vec ?v. (cmod (?v $ i))\\<^sup>2)\n  {..<?n} = {0..<?n}\n\ngoal (1 subgoal):\n 1. state 2 (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]])", "by simp"], ["proof (state)\nthis:\n  state 2 (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]])\n\ngoal (1 subgoal):\n 1. \\<exists>r.\n       state 2 r \\<and> bob q (alice_out \\<phi> q) = r \\<Otimes> \\<phi>", "moreover"], ["proof (state)\nthis:\n  state 2 (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]])\n\ngoal (1 subgoal):\n 1. \\<exists>r.\n       state 2 r \\<and> bob q (alice_out \\<phi> q) = r \\<Otimes> \\<phi>", "have \"state 2 (mat_of_cols_list 4 [[0, 0, 0, 1]])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. state 2 (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]])", "using state_def mat_of_cols_list_def cpx_vec_length_def lessThan_atLeast0"], ["proof (prove)\nusing this:\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  \\<parallel>?v\\<parallel> \\<equiv>\n  sqrt (\\<Sum>i<dim_vec ?v. (cmod (?v $ i))\\<^sup>2)\n  {..<?n} = {0..<?n}\n\ngoal (1 subgoal):\n 1. state 2 (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]])", "by simp"], ["proof (state)\nthis:\n  state 2 (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]])\n\ngoal (1 subgoal):\n 1. \\<exists>r.\n       state 2 r \\<and> bob q (alice_out \\<phi> q) = r \\<Otimes> \\<phi>", "ultimately"], ["proof (chain)\npicking this:\n  q =\n  Tensor.mat_of_cols_list 8 [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]] \\<or>\n  q =\n  Tensor.mat_of_cols_list 8 [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]] \\<or>\n  q =\n  Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]] \\<or>\n  q = Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]]\n  q =\n  Tensor.mat_of_cols_list 8\n   [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]] \\<Longrightarrow>\n  bob q (alice_out \\<phi> q) =\n  Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes> \\<phi>\n  q =\n  Tensor.mat_of_cols_list 8\n   [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]] \\<Longrightarrow>\n  bob q (alice_out \\<phi> q) =\n  Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes> \\<phi>\n  q =\n  Tensor.mat_of_cols_list 8\n   [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]] \\<Longrightarrow>\n  bob q (alice_out \\<phi> q) =\n  Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes> \\<phi>\n  q =\n  Tensor.mat_of_cols_list 8\n   [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]] \\<Longrightarrow>\n  bob q (alice_out \\<phi> q) =\n  Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes> \\<phi>\n  state 2 (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]])\n  state 2 (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]])\n  state 2 (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]])\n  state 2 (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]])", "show ?thesis"], ["proof (prove)\nusing this:\n  q =\n  Tensor.mat_of_cols_list 8 [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]] \\<or>\n  q =\n  Tensor.mat_of_cols_list 8 [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]] \\<or>\n  q =\n  Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]] \\<or>\n  q = Tensor.mat_of_cols_list 8 [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]]\n  q =\n  Tensor.mat_of_cols_list 8\n   [[\\<alpha>, \\<beta>, 0, 0, 0, 0, 0, 0]] \\<Longrightarrow>\n  bob q (alice_out \\<phi> q) =\n  Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]] \\<Otimes> \\<phi>\n  q =\n  Tensor.mat_of_cols_list 8\n   [[0, 0, \\<beta>, \\<alpha>, 0, 0, 0, 0]] \\<Longrightarrow>\n  bob q (alice_out \\<phi> q) =\n  Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]] \\<Otimes> \\<phi>\n  q =\n  Tensor.mat_of_cols_list 8\n   [[0, 0, 0, 0, \\<alpha>, - \\<beta>, 0, 0]] \\<Longrightarrow>\n  bob q (alice_out \\<phi> q) =\n  Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]] \\<Otimes> \\<phi>\n  q =\n  Tensor.mat_of_cols_list 8\n   [[0, 0, 0, 0, 0, 0, - \\<beta>, \\<alpha>]] \\<Longrightarrow>\n  bob q (alice_out \\<phi> q) =\n  Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]] \\<Otimes> \\<phi>\n  state 2 (Tensor.mat_of_cols_list 4 [[1, 0, 0, 0]])\n  state 2 (Tensor.mat_of_cols_list 4 [[0, 1, 0, 0]])\n  state 2 (Tensor.mat_of_cols_list 4 [[0, 0, 1, 0]])\n  state 2 (Tensor.mat_of_cols_list 4 [[0, 0, 0, 1]])\n\ngoal (1 subgoal):\n 1. \\<exists>r.\n       state 2 r \\<and> bob q (alice_out \\<phi> q) = r \\<Otimes> \\<phi>", "by auto"], ["proof (state)\nthis:\n  \\<exists>r.\n     state 2 r \\<and> bob q (alice_out \\<phi> q) = r \\<Otimes> \\<phi>\n\ngoal:\nNo subgoals!", "qed"], ["", "(* \nBiblio:\n\n@inproceedings{Boender2015FormalizationOQ,\n  title={Formalization of Quantum Protocols using Coq},\n  author={Jaap Boender and Florian Kamm{\\\"u}ller and Rajagopal Nagarajan},\n  booktitle={QPL},\n  year={2015}\n}\n*)"], ["", "end"]]}