{"file_name": "/home/qj213/afp-2021-10-22/thys/Isabelle_Marries_Dirac/More_Tensor.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Isabelle_Marries_Dirac", "problem_names": ["lemma tensor_prod_2 [simp]: \n\"mult.vec_vec_Tensor (*) [x1::complex,x2] [x3, x4] = [x1 * x3, x1 * x4, x2 * x3, x2 * x4]\"", "lemma list_vec [simp]: \n  assumes \"v \\<in> state_qbit 1\"\n  shows \"list_of_vec v = [v $ 0, v $ 1]\"", "lemma vec_tensor_prod_2 [simp]:\n  assumes \"v \\<in> state_qbit 1\" and \"w \\<in> state_qbit 1\"\n  shows \"v \\<otimes> w = vec_of_list [v $ 0 * w $ 0, v $ 0 * w $ 1, v $ 1 * w $ 0, v $ 1 * w $ 1]\"", "lemma vec_dim_of_vec_of_list [simp]:\n  assumes \"length l = n\"\n  shows \"dim_vec (vec_of_list l) = n\"", "lemma vec_tensor_prod_2_bis [simp]:\n  assumes \"v \\<in> state_qbit 1\" and \"w \\<in> state_qbit 1\"\n  shows \"v \\<otimes> w = Matrix.vec 4 (\\<lambda>i. if i = 0 then v $ 0 * w $ 0 else \n                                      if i = 3 then v $ 1 * w $ 1 else\n                                          if i = 1 then v $ 0 * w $ 1 else v $ 1 * w $ 0)\"", "lemma index_col_mat_of_cols_list [simp]:\n  assumes \"i < n\" and \"j < length l\"\n  shows \"Matrix.col (mat_of_cols_list n l) j $ i = l ! j ! i\"", "lemma multTensor2 [simp]:\n  assumes a1:\"A = Matrix.mat 2 1 (\\<lambda>(i,j). if i = 0 then a0 else a1)\" and \n          a2:\"B = Matrix.mat 2 1 (\\<lambda>(i,j). if i = 0 then b0 else b1)\"\n  shows \"mult.Tensor (*) (mat_to_cols_list A) (mat_to_cols_list B) = [[a0*b0, a0*b1, a1*b0, a1*b1]]\"", "lemma multTensor2_bis [simp]:\n  assumes a1:\"dim_row A = 2\" and a2:\"dim_col A = 1\" and a3:\"dim_row B = 2\" and a4:\"dim_col B = 1\"\n  shows \"mult.Tensor (*) (mat_to_cols_list A) (mat_to_cols_list B) =  \n[[A $$ (0,0) * B $$ (0,0), A $$ (0,0) *  B $$ (1,0), A $$ (1,0) * B $$ (0,0), A $$ (1,0) * B $$ (1,0)]]\"", "lemma mat_tensor_prod_2_prelim [simp]:\n  assumes \"state 1 v\" and \"state 1 w\"\n  shows \"v \\<Otimes> w = mat_of_cols_list 4 \n[[v $$ (0,0) * w $$ (0,0), v $$ (0,0) * w $$ (1,0), v $$ (1,0) * w $$ (0,0), v $$ (1,0) * w $$ (1,0)]]\"", "lemma mat_tensor_prod_2_col [simp]:\n  assumes \"state 1 v\" and \"state 1 w\"\n  shows \"Matrix.col (v \\<Otimes> w) 0 = Matrix.col v 0 \\<otimes> Matrix.col w 0\"", "lemma mat_tensor_prod_2 [simp]:\n  assumes \"state 1 v\" and \"state 1 w\"\n  shows \"v \\<Otimes> w = Matrix.mat 4 1 (\\<lambda>(i,j). if i = 0 then v $$ (0,0) * w $$ (0,0) else \n                                            if i = 3 then v $$ (1,0) * w $$ (1,0) else\n                                              if i = 1 then v $$ (0,0) * w $$ (1,0) else \n                                                v $$ (1,0) * w $$ (0,0))\"", "lemma mat_tensor_prod_2_bis:\n  assumes \"state 1 v\" and \"state 1 w\"\n  shows \"v \\<Otimes> w = |Matrix.vec 4 (\\<lambda>i. if i = 0 then v $$ (0,0) * w $$ (0,0) else \n                                          if i = 3 then v $$ (1,0) * w $$ (1,0) else\n                                            if i = 1 then v $$ (0,0) * w $$ (1,0) else \n                                              v $$ (1,0) * w $$ (0,0))\\<rangle>\"", "lemma eq_ket_vec:\n  fixes u v:: \"complex Matrix.vec\"\n  assumes \"u = v\"\n  shows \"|u\\<rangle> = |v\\<rangle>\"", "lemma mat_tensor_ket_vec:\n  assumes \"state 1 v\" and \"state 1 w\"\n  shows \"v \\<Otimes> w = |(Matrix.col v 0) \\<otimes> (Matrix.col w 0)\\<rangle>\"", "lemma tensor_state2 [simp]:\n  assumes \"state 1 u\" and \"state 1 v\"\n  shows \"state 2 (u \\<Otimes> v)\"", "lemma sum_prod:\n  fixes f::\"nat \\<Rightarrow> complex\" and g::\"nat \\<Rightarrow> complex\"\n  shows \"(\\<Sum>i<a*b. f(i div b) * g(i mod b)) = (\\<Sum>i<a. f(i)) * (\\<Sum>j<b. g(j))\"", "lemma tensor_state [simp]:\n  assumes \"state m u\" and \"state n v\"\n  shows \"state (m + n) (u \\<Otimes> v)\"", "lemma dim_row_of_tensor_gate:\n  assumes \"gate m G1\" and \"gate n G2\"\n  shows \"dim_row (G1 \\<Otimes> G2) = 2^(m+n)\"", "lemma tensor_gate_sqr_mat:\n  assumes \"gate m G1\" and \"gate n G2\"\n  shows \"square_mat (G1 \\<Otimes> G2)\"", "lemma dim_row_of_one_mat_less_pow:\n  assumes \"gate m G1\" and \"gate n G2\" and \"i < dim_row (1\\<^sub>m(dim_col G1 * dim_col G2))\"\n  shows \"i < 2^(m+n)\"", "lemma dim_col_of_one_mat_less_pow:\n  assumes \"gate m G1\" and \"gate n G2\" and \"j < dim_col (1\\<^sub>m(dim_col G1 * dim_col G2))\"\n  shows \"j < 2^(m+n)\"", "lemma index_tensor_gate_unitary1:\n  assumes \"gate m G1\" and \"gate n G2\" and \"i < dim_row (1\\<^sub>m(dim_col G1 * dim_col G2))\" and \n\"j < dim_col (1\\<^sub>m(dim_col G1 * dim_col G2))\"\n  shows \"((G1 \\<Otimes> G2)\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) = 1\\<^sub>m(dim_col G1 * dim_col G2) $$ (i, j)\"", "lemma tensor_gate_unitary1 [simp]:\n  assumes \"gate m G1\" and \"gate n G2\"\n  shows \"(G1 \\<Otimes> G2)\\<^sup>\\<dagger> * (G1 \\<Otimes> G2) = 1\\<^sub>m(dim_col G1 * dim_col G2)\"", "lemma index_tensor_gate_unitary2 [simp]:\n  assumes \"gate m G1\" and \"gate n G2\" and \"i < dim_row (1\\<^sub>m (dim_col G1 * dim_col G2))\" and\n\"j < dim_col (1\\<^sub>m (dim_col G1 * dim_col G2))\"\n  shows \"((G1 \\<Otimes> G2) * ((G1 \\<Otimes> G2)\\<^sup>\\<dagger>)) $$ (i, j) = 1\\<^sub>m(dim_col G1 * dim_col G2) $$ (i, j)\"", "lemma tensor_gate_unitary2 [simp]:\n  assumes \"gate m G1\" and \"gate n G2\"\n  shows \"(G1 \\<Otimes> G2) * ((G1 \\<Otimes> G2)\\<^sup>\\<dagger>) = 1\\<^sub>m(dim_col G1 * dim_col G2)\"", "lemma tensor_gate [simp]:\n  assumes \"gate m G1\" and \"gate n G2\"\n  shows \"gate (m + n) (G1 \\<Otimes> G2)\""], "translations": [["", "lemma tensor_prod_2 [simp]: \n\"mult.vec_vec_Tensor (*) [x1::complex,x2] [x3, x4] = [x1 * x3, x1 * x4, x2 * x3, x2 * x4]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mult.vec_vec_Tensor (*) [x1, x2] [x3, x4] =\n    [x1 * x3, x1 * x4, x2 * x3, x2 * x4]", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. mult.vec_vec_Tensor (*) [x1, x2] [x3, x4] =\n    [x1 * x3, x1 * x4, x2 * x3, x2 * x4]", "have \"Matrix_Tensor.mult (1::complex) (*)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Matrix_Tensor.mult 1 (*)", "by (simp add: Matrix_Tensor.mult_def)"], ["proof (state)\nthis:\n  Matrix_Tensor.mult 1 (*)\n\ngoal (1 subgoal):\n 1. mult.vec_vec_Tensor (*) [x1, x2] [x3, x4] =\n    [x1 * x3, x1 * x4, x2 * x3, x2 * x4]", "thus \"mult.vec_vec_Tensor (*) [x1::complex,x2] [x3,x4] = [x1*x3,x1*x4,x2*x3,x2*x4]\""], ["proof (prove)\nusing this:\n  Matrix_Tensor.mult 1 (*)\n\ngoal (1 subgoal):\n 1. mult.vec_vec_Tensor (*) [x1, x2] [x3, x4] =\n    [x1 * x3, x1 * x4, x2 * x3, x2 * x4]", "using mult.vec_vec_Tensor_def[of \"(1::complex)\" \"(*)\"] mult.times_def[of \"(1::complex)\" \"(*)\"]"], ["proof (prove)\nusing this:\n  Matrix_Tensor.mult 1 (*)\n  Matrix_Tensor.mult 1 (*) \\<Longrightarrow>\n  mult.vec_vec_Tensor (*) \\<equiv>\n  rec_list (\\<lambda>ys. [])\n   (\\<lambda>x xs xsa ys. mult.times (*) x ys @ xsa ys)\n  Matrix_Tensor.mult 1 (*) \\<Longrightarrow>\n  mult.times (*) \\<equiv>\n  \\<lambda>uu uua.\n     rec_list (\\<lambda>n. []) (\\<lambda>y ys ysa n. n * y # ysa n) uua uu\n\ngoal (1 subgoal):\n 1. mult.vec_vec_Tensor (*) [x1, x2] [x3, x4] =\n    [x1 * x3, x1 * x4, x2 * x3, x2 * x4]", "by simp"], ["proof (state)\nthis:\n  mult.vec_vec_Tensor (*) [x1, x2] [x3, x4] =\n  [x1 * x3, x1 * x4, x2 * x3, x2 * x4]\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma list_vec [simp]: \n  assumes \"v \\<in> state_qbit 1\"\n  shows \"list_of_vec v = [v $ 0, v $ 1]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. list_of_vec v = [v $ 0, v $ 1]", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. list_of_vec v = [v $ 0, v $ 1]", "have \"Rep_vec v = (fst(Rep_vec v), snd(Rep_vec v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_vec v = (fst (Rep_vec v), snd (Rep_vec v))", "by simp"], ["proof (state)\nthis:\n  Rep_vec v = (fst (Rep_vec v), snd (Rep_vec v))\n\ngoal (1 subgoal):\n 1. list_of_vec v = [v $ 0, v $ 1]", "also"], ["proof (state)\nthis:\n  Rep_vec v = (fst (Rep_vec v), snd (Rep_vec v))\n\ngoal (1 subgoal):\n 1. list_of_vec v = [v $ 0, v $ 1]", "have \"\\<dots> = (2, vec_index v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (fst (Rep_vec v), snd (Rep_vec v)) = (2, ($) v)", "by (metis (mono_tags, lifting) assms dim_vec.rep_eq mem_Collect_eq power_one_right state_qbit_def vec_index.rep_eq)"], ["proof (state)\nthis:\n  (fst (Rep_vec v), snd (Rep_vec v)) = (2, ($) v)\n\ngoal (1 subgoal):\n 1. list_of_vec v = [v $ 0, v $ 1]", "moreover"], ["proof (state)\nthis:\n  (fst (Rep_vec v), snd (Rep_vec v)) = (2, ($) v)\n\ngoal (1 subgoal):\n 1. list_of_vec v = [v $ 0, v $ 1]", "have \"[0..<2::nat] = [0,1]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [0..<2] = [0, 1]", "by(simp add: upt_rec)"], ["proof (state)\nthis:\n  [0..<2] = [0, 1]\n\ngoal (1 subgoal):\n 1. list_of_vec v = [v $ 0, v $ 1]", "ultimately"], ["proof (chain)\npicking this:\n  Rep_vec v = (fst (Rep_vec v), snd (Rep_vec v))\n  (fst (Rep_vec v), snd (Rep_vec v)) = (2, ($) v)\n  [0..<2] = [0, 1]", "show ?thesis"], ["proof (prove)\nusing this:\n  Rep_vec v = (fst (Rep_vec v), snd (Rep_vec v))\n  (fst (Rep_vec v), snd (Rep_vec v)) = (2, ($) v)\n  [0..<2] = [0, 1]\n\ngoal (1 subgoal):\n 1. list_of_vec v = [v $ 0, v $ 1]", "by(simp add: list_of_vec_def)"], ["proof (state)\nthis:\n  list_of_vec v = [v $ 0, v $ 1]\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vec_tensor_prod_2 [simp]:\n  assumes \"v \\<in> state_qbit 1\" and \"w \\<in> state_qbit 1\"\n  shows \"v \\<otimes> w = vec_of_list [v $ 0 * w $ 0, v $ 0 * w $ 1, v $ 1 * w $ 0, v $ 1 * w $ 1]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<otimes> w =\n    vec_of_list [v $ 0 * w $ 0, v $ 0 * w $ 1, v $ 1 * w $ 0, v $ 1 * w $ 1]", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. v \\<otimes> w =\n    vec_of_list [v $ 0 * w $ 0, v $ 0 * w $ 1, v $ 1 * w $ 0, v $ 1 * w $ 1]", "have \"list_of_vec v = [v $ 0, v $ 1]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. list_of_vec v = [v $ 0, v $ 1]", "using assms"], ["proof (prove)\nusing this:\n  v \\<in> state_qbit 1\n  w \\<in> state_qbit 1\n\ngoal (1 subgoal):\n 1. list_of_vec v = [v $ 0, v $ 1]", "by simp"], ["proof (state)\nthis:\n  list_of_vec v = [v $ 0, v $ 1]\n\ngoal (1 subgoal):\n 1. v \\<otimes> w =\n    vec_of_list [v $ 0 * w $ 0, v $ 0 * w $ 1, v $ 1 * w $ 0, v $ 1 * w $ 1]", "moreover"], ["proof (state)\nthis:\n  list_of_vec v = [v $ 0, v $ 1]\n\ngoal (1 subgoal):\n 1. v \\<otimes> w =\n    vec_of_list [v $ 0 * w $ 0, v $ 0 * w $ 1, v $ 1 * w $ 0, v $ 1 * w $ 1]", "have \"list_of_vec w = [w $ 0, w $ 1]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. list_of_vec w = [w $ 0, w $ 1]", "using assms"], ["proof (prove)\nusing this:\n  v \\<in> state_qbit 1\n  w \\<in> state_qbit 1\n\ngoal (1 subgoal):\n 1. list_of_vec w = [w $ 0, w $ 1]", "by simp"], ["proof (state)\nthis:\n  list_of_vec w = [w $ 0, w $ 1]\n\ngoal (1 subgoal):\n 1. v \\<otimes> w =\n    vec_of_list [v $ 0 * w $ 0, v $ 0 * w $ 1, v $ 1 * w $ 0, v $ 1 * w $ 1]", "ultimately"], ["proof (chain)\npicking this:\n  list_of_vec v = [v $ 0, v $ 1]\n  list_of_vec w = [w $ 0, w $ 1]", "show \"v \\<otimes> w = vec_of_list [v $ 0 * w $ 0, v $ 0 * w $ 1, v $ 1 * w $ 0, v $ 1 * w $ 1]\""], ["proof (prove)\nusing this:\n  list_of_vec v = [v $ 0, v $ 1]\n  list_of_vec w = [w $ 0, w $ 1]\n\ngoal (1 subgoal):\n 1. v \\<otimes> w =\n    vec_of_list [v $ 0 * w $ 0, v $ 0 * w $ 1, v $ 1 * w $ 0, v $ 1 * w $ 1]", "by(simp add: tensor_vec_def)"], ["proof (state)\nthis:\n  v \\<otimes> w =\n  vec_of_list [v $ 0 * w $ 0, v $ 0 * w $ 1, v $ 1 * w $ 0, v $ 1 * w $ 1]\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vec_dim_of_vec_of_list [simp]:\n  assumes \"length l = n\"\n  shows \"dim_vec (vec_of_list l) = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_vec (vec_of_list l) = n", "using assms vec_of_list_def"], ["proof (prove)\nusing this:\n  length l = n\n  vec_of_list \\<equiv>\n  map_fun id Abs_vec (\\<lambda>v. (length v, mk_vec (length v) ((!) v)))\n\ngoal (1 subgoal):\n 1. dim_vec (vec_of_list l) = n", "by simp"], ["", "lemma vec_tensor_prod_2_bis [simp]:\n  assumes \"v \\<in> state_qbit 1\" and \"w \\<in> state_qbit 1\"\n  shows \"v \\<otimes> w = Matrix.vec 4 (\\<lambda>i. if i = 0 then v $ 0 * w $ 0 else \n                                      if i = 3 then v $ 1 * w $ 1 else\n                                          if i = 1 then v $ 0 * w $ 1 else v $ 1 * w $ 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<otimes> w =\n    Matrix.vec 4\n     (\\<lambda>i.\n         if i = 0 then v $ 0 * w $ 0\n         else if i = 3 then v $ 1 * w $ 1\n              else if i = 1 then v $ 0 * w $ 1 else v $ 1 * w $ 0)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       i < dim_vec\n            (Matrix.vec 4\n              (\\<lambda>i.\n                  if i = 0 then v $ 0 * w $ 0\n                  else if i = 3 then v $ 1 * w $ 1\n                       else if i = 1 then v $ 0 * w $ 1\n                            else v $ 1 * w $ 0)) \\<Longrightarrow>\n       (v \\<otimes> w) $ i =\n       Matrix.vec 4\n        (\\<lambda>i.\n            if i = 0 then v $ 0 * w $ 0\n            else if i = 3 then v $ 1 * w $ 1\n                 else if i = 1 then v $ 0 * w $ 1 else v $ 1 * w $ 0) $\n       i\n 2. dim_vec (v \\<otimes> w) =\n    dim_vec\n     (Matrix.vec 4\n       (\\<lambda>i.\n           if i = 0 then v $ 0 * w $ 0\n           else if i = 3 then v $ 1 * w $ 1\n                else if i = 1 then v $ 0 * w $ 1 else v $ 1 * w $ 0))", "define u where \"u = Matrix.vec 4 (\\<lambda>i. if i = 0 then v $ 0 * w $ 0 else \n                                          if i = 3 then v $ 1 * w $ 1 else\n                                            if i = 1 then v $ 0 * w $ 1 else v $ 1 * w $ 0)\""], ["proof (state)\nthis:\n  u =\n  Matrix.vec 4\n   (\\<lambda>i.\n       if i = 0 then v $ 0 * w $ 0\n       else if i = 3 then v $ 1 * w $ 1\n            else if i = 1 then v $ 0 * w $ 1 else v $ 1 * w $ 0)\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       i < dim_vec\n            (Matrix.vec 4\n              (\\<lambda>i.\n                  if i = 0 then v $ 0 * w $ 0\n                  else if i = 3 then v $ 1 * w $ 1\n                       else if i = 1 then v $ 0 * w $ 1\n                            else v $ 1 * w $ 0)) \\<Longrightarrow>\n       (v \\<otimes> w) $ i =\n       Matrix.vec 4\n        (\\<lambda>i.\n            if i = 0 then v $ 0 * w $ 0\n            else if i = 3 then v $ 1 * w $ 1\n                 else if i = 1 then v $ 0 * w $ 1 else v $ 1 * w $ 0) $\n       i\n 2. dim_vec (v \\<otimes> w) =\n    dim_vec\n     (Matrix.vec 4\n       (\\<lambda>i.\n           if i = 0 then v $ 0 * w $ 0\n           else if i = 3 then v $ 1 * w $ 1\n                else if i = 1 then v $ 0 * w $ 1 else v $ 1 * w $ 0))", "then"], ["proof (chain)\npicking this:\n  u =\n  Matrix.vec 4\n   (\\<lambda>i.\n       if i = 0 then v $ 0 * w $ 0\n       else if i = 3 then v $ 1 * w $ 1\n            else if i = 1 then v $ 0 * w $ 1 else v $ 1 * w $ 0)", "show f2:\"dim_vec (v \\<otimes> w) = dim_vec u\""], ["proof (prove)\nusing this:\n  u =\n  Matrix.vec 4\n   (\\<lambda>i.\n       if i = 0 then v $ 0 * w $ 0\n       else if i = 3 then v $ 1 * w $ 1\n            else if i = 1 then v $ 0 * w $ 1 else v $ 1 * w $ 0)\n\ngoal (1 subgoal):\n 1. dim_vec (v \\<otimes> w) = dim_vec u", "using assms"], ["proof (prove)\nusing this:\n  u =\n  Matrix.vec 4\n   (\\<lambda>i.\n       if i = 0 then v $ 0 * w $ 0\n       else if i = 3 then v $ 1 * w $ 1\n            else if i = 1 then v $ 0 * w $ 1 else v $ 1 * w $ 0)\n  v \\<in> state_qbit 1\n  w \\<in> state_qbit 1\n\ngoal (1 subgoal):\n 1. dim_vec (v \\<otimes> w) = dim_vec u", "by simp"], ["proof (state)\nthis:\n  dim_vec (v \\<otimes> w) = dim_vec u\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec\n            (Matrix.vec 4\n              (\\<lambda>i.\n                  if i = 0 then v $ 0 * w $ 0\n                  else if i = 3 then v $ 1 * w $ 1\n                       else if i = 1 then v $ 0 * w $ 1\n                            else v $ 1 * w $ 0)) \\<Longrightarrow>\n       (v \\<otimes> w) $ i =\n       Matrix.vec 4\n        (\\<lambda>i.\n            if i = 0 then v $ 0 * w $ 0\n            else if i = 3 then v $ 1 * w $ 1\n                 else if i = 1 then v $ 0 * w $ 1 else v $ 1 * w $ 0) $\n       i", "show \"\\<And>i. i < dim_vec u \\<Longrightarrow> (v \\<otimes> w) $ i = u $ i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. i < dim_vec u \\<Longrightarrow> (v \\<otimes> w) $ i = u $ i", "apply (auto simp: u_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. (v \\<otimes> w) $ Suc 0 = v $ 0 * w $ Suc 0\n 2. (v \\<otimes> w) $ 3 = v $ Suc 0 * w $ Suc 0\n 3. (v \\<otimes> w) $ 0 = v $ 0 * w $ 0\n 4. \\<And>i.\n       \\<lbrakk>i < 4; i \\<noteq> Suc 0; i \\<noteq> 3; 0 < i\\<rbrakk>\n       \\<Longrightarrow> (v \\<otimes> w) $ i = v $ Suc 0 * w $ 0", "using assms"], ["proof (prove)\nusing this:\n  v \\<in> state_qbit 1\n  w \\<in> state_qbit 1\n\ngoal (4 subgoals):\n 1. (v \\<otimes> w) $ Suc 0 = v $ 0 * w $ Suc 0\n 2. (v \\<otimes> w) $ 3 = v $ Suc 0 * w $ Suc 0\n 3. (v \\<otimes> w) $ 0 = v $ 0 * w $ 0\n 4. \\<And>i.\n       \\<lbrakk>i < 4; i \\<noteq> Suc 0; i \\<noteq> 3; 0 < i\\<rbrakk>\n       \\<Longrightarrow> (v \\<otimes> w) $ i = v $ Suc 0 * w $ 0", "apply auto[3]"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a aa A Aa.\n       \\<lbrakk>v = module.lincomb (module_cpx_vec 2) a A;\n        w = module.lincomb (module_cpx_vec 2) aa Aa; finite A; finite Aa;\n        A \\<subseteq> unit_vectors 2;\n        \\<parallel>module.lincomb (module_cpx_vec 2) a A\\<parallel> = 1;\n        Aa \\<subseteq> unit_vectors 2;\n        \\<parallel>module.lincomb (module_cpx_vec 2) aa Aa\\<parallel> =\n        1\\<rbrakk>\n       \\<Longrightarrow> vCons\n                          (module.lincomb (module_cpx_vec 2) a A $ 0 *\n                           module.lincomb (module_cpx_vec 2) aa Aa $ 0)\n                          (vCons\n                            (module.lincomb (module_cpx_vec 2) a A $ 0 *\n                             module.lincomb (module_cpx_vec 2) aa Aa $\n                             Suc 0)\n                            (vCons\n                              (module.lincomb (module_cpx_vec 2) a A $\n                               Suc 0 *\n                               module.lincomb (module_cpx_vec 2) aa Aa $ 0)\n                              (vCons\n                                (module.lincomb (module_cpx_vec 2) a A $\n                                 Suc 0 *\n                                 module.lincomb (module_cpx_vec 2) aa Aa $\n                                 Suc 0)\n                                vNil))) $\n                         3 =\n                         module.lincomb (module_cpx_vec 2) a A $ Suc 0 *\n                         module.lincomb (module_cpx_vec 2) aa Aa $ Suc 0\n 2. \\<And>i.\n       \\<lbrakk>i < 4; i \\<noteq> Suc 0; i \\<noteq> 3; 0 < i\\<rbrakk>\n       \\<Longrightarrow> (v \\<otimes> w) $ i = v $ Suc 0 * w $ 0", "apply (simp add: numeral_3_eq_3)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i < 4; i \\<noteq> Suc 0; i \\<noteq> 3; 0 < i\\<rbrakk>\n       \\<Longrightarrow> (v \\<otimes> w) $ i = v $ Suc 0 * w $ 0", "using u_def vec_of_list_index vec_tensor_prod_2 index_is_2"], ["proof (prove)\nusing this:\n  u =\n  Matrix.vec 4\n   (\\<lambda>i.\n       if i = 0 then v $ 0 * w $ 0\n       else if i = 3 then v $ 1 * w $ 1\n            else if i = 1 then v $ 0 * w $ 1 else v $ 1 * w $ 0)\n  vec_of_list ?xs $ ?j = ?xs ! ?j\n  \\<lbrakk>?v \\<in> state_qbit 1; ?w \\<in> state_qbit 1\\<rbrakk>\n  \\<Longrightarrow> ?v \\<otimes> ?w =\n                    vec_of_list\n                     [?v $ 0 * ?w $ 0, ?v $ 0 * ?w $ 1, ?v $ 1 * ?w $ 0,\n                      ?v $ 1 * ?w $ 1]\n  \\<forall>i.\n     i \\<noteq> Suc 0 \\<longrightarrow>\n     i \\<noteq> 3 \\<longrightarrow>\n     0 < i \\<longrightarrow> i < 4 \\<longrightarrow> i = 2\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i < 4; i \\<noteq> Suc 0; i \\<noteq> 3; 0 < i\\<rbrakk>\n       \\<Longrightarrow> (v \\<otimes> w) $ i = v $ Suc 0 * w $ 0", "by (metis (no_types, lifting) One_nat_def assms nth_Cons_0 nth_Cons_Suc numeral_2_eq_2)"], ["proof (state)\nthis:\n  ?i < dim_vec u \\<Longrightarrow> (v \\<otimes> w) $ ?i = u $ ?i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma index_col_mat_of_cols_list [simp]:\n  assumes \"i < n\" and \"j < length l\"\n  shows \"Matrix.col (mat_of_cols_list n l) j $ i = l ! j ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Matrix.col (Tensor.mat_of_cols_list n l) j $ i = l ! j ! i", "apply (auto simp: Matrix.col_def mat_of_cols_list_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Matrix.vec n\n     (\\<lambda>i.\n         Matrix.mat n (length l) (\\<lambda>(i, j). l ! j ! i) $$ (i, j)) $\n    i =\n    l ! j ! i", "using assms less_le_trans"], ["proof (prove)\nusing this:\n  i < n\n  j < length l\n  \\<lbrakk>?x < ?y; ?y \\<le> ?z\\<rbrakk> \\<Longrightarrow> ?x < ?z\n\ngoal (1 subgoal):\n 1. Matrix.vec n\n     (\\<lambda>i.\n         Matrix.mat n (length l) (\\<lambda>(i, j). l ! j ! i) $$ (i, j)) $\n    i =\n    l ! j ! i", "by fastforce"], ["", "lemma multTensor2 [simp]:\n  assumes a1:\"A = Matrix.mat 2 1 (\\<lambda>(i,j). if i = 0 then a0 else a1)\" and \n          a2:\"B = Matrix.mat 2 1 (\\<lambda>(i,j). if i = 0 then b0 else b1)\"\n  shows \"mult.Tensor (*) (mat_to_cols_list A) (mat_to_cols_list B) = [[a0*b0, a0*b1, a1*b0, a1*b1]]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mult.Tensor (*) (mat_to_cols_list A) (mat_to_cols_list B) =\n    [[a0 * b0, a0 * b1, a1 * b0, a1 * b1]]", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. mult.Tensor (*) (mat_to_cols_list A) (mat_to_cols_list B) =\n    [[a0 * b0, a0 * b1, a1 * b0, a1 * b1]]", "have \"mat_to_cols_list A = [[a0, a1]]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat_to_cols_list A = [[a0, a1]]", "by (auto simp: a1 mat_to_cols_list_def) (simp add: numeral_2_eq_2)"], ["proof (state)\nthis:\n  mat_to_cols_list A = [[a0, a1]]\n\ngoal (1 subgoal):\n 1. mult.Tensor (*) (mat_to_cols_list A) (mat_to_cols_list B) =\n    [[a0 * b0, a0 * b1, a1 * b0, a1 * b1]]", "moreover"], ["proof (state)\nthis:\n  mat_to_cols_list A = [[a0, a1]]\n\ngoal (1 subgoal):\n 1. mult.Tensor (*) (mat_to_cols_list A) (mat_to_cols_list B) =\n    [[a0 * b0, a0 * b1, a1 * b0, a1 * b1]]", "have f2:\"mat_to_cols_list B = [[b0, b1]]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat_to_cols_list B = [[b0, b1]]", "by (auto simp: a2 mat_to_cols_list_def) (simp add: numeral_2_eq_2)"], ["proof (state)\nthis:\n  mat_to_cols_list B = [[b0, b1]]\n\ngoal (1 subgoal):\n 1. mult.Tensor (*) (mat_to_cols_list A) (mat_to_cols_list B) =\n    [[a0 * b0, a0 * b1, a1 * b0, a1 * b1]]", "ultimately"], ["proof (chain)\npicking this:\n  mat_to_cols_list A = [[a0, a1]]\n  mat_to_cols_list B = [[b0, b1]]", "have \"mult.Tensor (*) (mat_to_cols_list A) (mat_to_cols_list B) = \n                   mult.Tensor (*) [[a0,a1]] [[b0,b1]]\""], ["proof (prove)\nusing this:\n  mat_to_cols_list A = [[a0, a1]]\n  mat_to_cols_list B = [[b0, b1]]\n\ngoal (1 subgoal):\n 1. mult.Tensor (*) (mat_to_cols_list A) (mat_to_cols_list B) =\n    mult.Tensor (*) [[a0, a1]] [[b0, b1]]", "by simp"], ["proof (state)\nthis:\n  mult.Tensor (*) (mat_to_cols_list A) (mat_to_cols_list B) =\n  mult.Tensor (*) [[a0, a1]] [[b0, b1]]\n\ngoal (1 subgoal):\n 1. mult.Tensor (*) (mat_to_cols_list A) (mat_to_cols_list B) =\n    [[a0 * b0, a0 * b1, a1 * b0, a1 * b1]]", "thus ?thesis"], ["proof (prove)\nusing this:\n  mult.Tensor (*) (mat_to_cols_list A) (mat_to_cols_list B) =\n  mult.Tensor (*) [[a0, a1]] [[b0, b1]]\n\ngoal (1 subgoal):\n 1. mult.Tensor (*) (mat_to_cols_list A) (mat_to_cols_list B) =\n    [[a0 * b0, a0 * b1, a1 * b0, a1 * b1]]", "using mult.Tensor_def[of \"(1::complex)\" \"(*)\"] mult.times_def[of \"(1::complex)\" \"(*)\"]"], ["proof (prove)\nusing this:\n  mult.Tensor (*) (mat_to_cols_list A) (mat_to_cols_list B) =\n  mult.Tensor (*) [[a0, a1]] [[b0, b1]]\n  Matrix_Tensor.mult 1 (*) \\<Longrightarrow>\n  mult.Tensor (*) \\<equiv>\n  rec_list (\\<lambda>xs. [])\n   (\\<lambda>x xs xsa ys. mult.vec_mat_Tensor (*) x ys @ xsa ys)\n  Matrix_Tensor.mult 1 (*) \\<Longrightarrow>\n  mult.times (*) \\<equiv>\n  \\<lambda>uu uua.\n     rec_list (\\<lambda>n. []) (\\<lambda>y ys ysa n. n * y # ysa n) uua uu\n\ngoal (1 subgoal):\n 1. mult.Tensor (*) (mat_to_cols_list A) (mat_to_cols_list B) =\n    [[a0 * b0, a0 * b1, a1 * b0, a1 * b1]]", "by (metis (mono_tags, lifting) append_self_conv list.simps(6) mult.Tensor.simps(2) mult.vec_mat_Tensor.simps(1) \nmult.vec_mat_Tensor.simps(2) plus_mult_cpx plus_mult_def tensor_prod_2)"], ["proof (state)\nthis:\n  mult.Tensor (*) (mat_to_cols_list A) (mat_to_cols_list B) =\n  [[a0 * b0, a0 * b1, a1 * b0, a1 * b1]]\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma multTensor2_bis [simp]:\n  assumes a1:\"dim_row A = 2\" and a2:\"dim_col A = 1\" and a3:\"dim_row B = 2\" and a4:\"dim_col B = 1\"\n  shows \"mult.Tensor (*) (mat_to_cols_list A) (mat_to_cols_list B) =  \n[[A $$ (0,0) * B $$ (0,0), A $$ (0,0) *  B $$ (1,0), A $$ (1,0) * B $$ (0,0), A $$ (1,0) * B $$ (1,0)]]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mult.Tensor (*) (mat_to_cols_list A) (mat_to_cols_list B) =\n    [[A $$ (0, 0) * B $$ (0, 0), A $$ (0, 0) * B $$ (1, 0),\n      A $$ (1, 0) * B $$ (0, 0), A $$ (1, 0) * B $$ (1, 0)]]", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. mult.Tensor (*) (mat_to_cols_list A) (mat_to_cols_list B) =\n    [[A $$ (0, 0) * B $$ (0, 0), A $$ (0, 0) * B $$ (1, 0),\n      A $$ (1, 0) * B $$ (0, 0), A $$ (1, 0) * B $$ (1, 0)]]", "have \"mat_to_cols_list A = [[A $$ (0,0), A $$ (1,0)]]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat_to_cols_list A = [[A $$ (0, 0), A $$ (1, 0)]]", "by (auto simp: a1 a2 mat_to_cols_list_def) (simp add: numeral_2_eq_2)"], ["proof (state)\nthis:\n  mat_to_cols_list A = [[A $$ (0, 0), A $$ (1, 0)]]\n\ngoal (1 subgoal):\n 1. mult.Tensor (*) (mat_to_cols_list A) (mat_to_cols_list B) =\n    [[A $$ (0, 0) * B $$ (0, 0), A $$ (0, 0) * B $$ (1, 0),\n      A $$ (1, 0) * B $$ (0, 0), A $$ (1, 0) * B $$ (1, 0)]]", "moreover"], ["proof (state)\nthis:\n  mat_to_cols_list A = [[A $$ (0, 0), A $$ (1, 0)]]\n\ngoal (1 subgoal):\n 1. mult.Tensor (*) (mat_to_cols_list A) (mat_to_cols_list B) =\n    [[A $$ (0, 0) * B $$ (0, 0), A $$ (0, 0) * B $$ (1, 0),\n      A $$ (1, 0) * B $$ (0, 0), A $$ (1, 0) * B $$ (1, 0)]]", "have f2:\"mat_to_cols_list B = [[B $$ (0,0), B $$ (1,0)]]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat_to_cols_list B = [[B $$ (0, 0), B $$ (1, 0)]]", "by (auto simp: a3 a4 mat_to_cols_list_def) (simp add: numeral_2_eq_2)"], ["proof (state)\nthis:\n  mat_to_cols_list B = [[B $$ (0, 0), B $$ (1, 0)]]\n\ngoal (1 subgoal):\n 1. mult.Tensor (*) (mat_to_cols_list A) (mat_to_cols_list B) =\n    [[A $$ (0, 0) * B $$ (0, 0), A $$ (0, 0) * B $$ (1, 0),\n      A $$ (1, 0) * B $$ (0, 0), A $$ (1, 0) * B $$ (1, 0)]]", "ultimately"], ["proof (chain)\npicking this:\n  mat_to_cols_list A = [[A $$ (0, 0), A $$ (1, 0)]]\n  mat_to_cols_list B = [[B $$ (0, 0), B $$ (1, 0)]]", "have \"mult.Tensor (*) (mat_to_cols_list A) (mat_to_cols_list B) =\n                   mult.Tensor (*) [[A $$ (0,0), A $$ (1,0)]] [[B $$ (0,0), B $$ (1,0)]]\""], ["proof (prove)\nusing this:\n  mat_to_cols_list A = [[A $$ (0, 0), A $$ (1, 0)]]\n  mat_to_cols_list B = [[B $$ (0, 0), B $$ (1, 0)]]\n\ngoal (1 subgoal):\n 1. mult.Tensor (*) (mat_to_cols_list A) (mat_to_cols_list B) =\n    mult.Tensor (*) [[A $$ (0, 0), A $$ (1, 0)]]\n     [[B $$ (0, 0), B $$ (1, 0)]]", "by simp"], ["proof (state)\nthis:\n  mult.Tensor (*) (mat_to_cols_list A) (mat_to_cols_list B) =\n  mult.Tensor (*) [[A $$ (0, 0), A $$ (1, 0)]] [[B $$ (0, 0), B $$ (1, 0)]]\n\ngoal (1 subgoal):\n 1. mult.Tensor (*) (mat_to_cols_list A) (mat_to_cols_list B) =\n    [[A $$ (0, 0) * B $$ (0, 0), A $$ (0, 0) * B $$ (1, 0),\n      A $$ (1, 0) * B $$ (0, 0), A $$ (1, 0) * B $$ (1, 0)]]", "thus ?thesis"], ["proof (prove)\nusing this:\n  mult.Tensor (*) (mat_to_cols_list A) (mat_to_cols_list B) =\n  mult.Tensor (*) [[A $$ (0, 0), A $$ (1, 0)]] [[B $$ (0, 0), B $$ (1, 0)]]\n\ngoal (1 subgoal):\n 1. mult.Tensor (*) (mat_to_cols_list A) (mat_to_cols_list B) =\n    [[A $$ (0, 0) * B $$ (0, 0), A $$ (0, 0) * B $$ (1, 0),\n      A $$ (1, 0) * B $$ (0, 0), A $$ (1, 0) * B $$ (1, 0)]]", "using mult.Tensor_def[of \"(1::complex)\" \"(*)\"] mult.times_def[of \"(1::complex)\" \"(*)\"]"], ["proof (prove)\nusing this:\n  mult.Tensor (*) (mat_to_cols_list A) (mat_to_cols_list B) =\n  mult.Tensor (*) [[A $$ (0, 0), A $$ (1, 0)]] [[B $$ (0, 0), B $$ (1, 0)]]\n  Matrix_Tensor.mult 1 (*) \\<Longrightarrow>\n  mult.Tensor (*) \\<equiv>\n  rec_list (\\<lambda>xs. [])\n   (\\<lambda>x xs xsa ys. mult.vec_mat_Tensor (*) x ys @ xsa ys)\n  Matrix_Tensor.mult 1 (*) \\<Longrightarrow>\n  mult.times (*) \\<equiv>\n  \\<lambda>uu uua.\n     rec_list (\\<lambda>n. []) (\\<lambda>y ys ysa n. n * y # ysa n) uua uu\n\ngoal (1 subgoal):\n 1. mult.Tensor (*) (mat_to_cols_list A) (mat_to_cols_list B) =\n    [[A $$ (0, 0) * B $$ (0, 0), A $$ (0, 0) * B $$ (1, 0),\n      A $$ (1, 0) * B $$ (0, 0), A $$ (1, 0) * B $$ (1, 0)]]", "by (smt append_self_conv list.simps(6) mult.Tensor.simps(2) mult.vec_mat_Tensor.simps(1) \nmult.vec_mat_Tensor.simps(2) plus_mult_cpx plus_mult_def tensor_prod_2)"], ["proof (state)\nthis:\n  mult.Tensor (*) (mat_to_cols_list A) (mat_to_cols_list B) =\n  [[A $$ (0, 0) * B $$ (0, 0), A $$ (0, 0) * B $$ (1, 0),\n    A $$ (1, 0) * B $$ (0, 0), A $$ (1, 0) * B $$ (1, 0)]]\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mat_tensor_prod_2_prelim [simp]:\n  assumes \"state 1 v\" and \"state 1 w\"\n  shows \"v \\<Otimes> w = mat_of_cols_list 4 \n[[v $$ (0,0) * w $$ (0,0), v $$ (0,0) * w $$ (1,0), v $$ (1,0) * w $$ (0,0), v $$ (1,0) * w $$ (1,0)]]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<Otimes> w =\n    Tensor.mat_of_cols_list 4\n     [[v $$ (0, 0) * w $$ (0, 0), v $$ (0, 0) * w $$ (1, 0),\n       v $$ (1, 0) * w $$ (0, 0), v $$ (1, 0) * w $$ (1, 0)]]", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 4\n                       [[v $$ (0, 0) * w $$ (0, 0),\n                         v $$ (0, 0) * w $$ (1, 0),\n                         v $$ (1, 0) * w $$ (0, 0),\n                         v $$ (1, 0) * w $$ (1, 0)]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4\n               [[v $$ (0, 0) * w $$ (0, 0), v $$ (0, 0) * w $$ (1, 0),\n                 v $$ (1, 0) * w $$ (0, 0),\n                 v $$ (1, 0) * w $$ (1, 0)]])\\<rbrakk>\n       \\<Longrightarrow> (v \\<Otimes> w) $$ (i, j) =\n                         Tensor.mat_of_cols_list 4\n                          [[v $$ (0, 0) * w $$ (0, 0),\n                            v $$ (0, 0) * w $$ (1, 0),\n                            v $$ (1, 0) * w $$ (0, 0),\n                            v $$ (1, 0) * w $$ (1, 0)]] $$\n                         (i, j)\n 2. dim_row (v \\<Otimes> w) =\n    dim_row\n     (Tensor.mat_of_cols_list 4\n       [[v $$ (0, 0) * w $$ (0, 0), v $$ (0, 0) * w $$ (1, 0),\n         v $$ (1, 0) * w $$ (0, 0), v $$ (1, 0) * w $$ (1, 0)]])\n 3. dim_col (v \\<Otimes> w) =\n    dim_col\n     (Tensor.mat_of_cols_list 4\n       [[v $$ (0, 0) * w $$ (0, 0), v $$ (0, 0) * w $$ (1, 0),\n         v $$ (1, 0) * w $$ (0, 0), v $$ (1, 0) * w $$ (1, 0)]])", "define u where \"u = mat_of_cols_list 4 \n[[v $$ (0,0) * w $$ (0,0), v $$ (0,0) * w $$ (1,0), v $$ (1,0) * w $$ (0,0), v $$ (1,0) * w $$ (1,0)]]\""], ["proof (state)\nthis:\n  u =\n  Tensor.mat_of_cols_list 4\n   [[v $$ (0, 0) * w $$ (0, 0), v $$ (0, 0) * w $$ (1, 0),\n     v $$ (1, 0) * w $$ (0, 0), v $$ (1, 0) * w $$ (1, 0)]]\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 4\n                       [[v $$ (0, 0) * w $$ (0, 0),\n                         v $$ (0, 0) * w $$ (1, 0),\n                         v $$ (1, 0) * w $$ (0, 0),\n                         v $$ (1, 0) * w $$ (1, 0)]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4\n               [[v $$ (0, 0) * w $$ (0, 0), v $$ (0, 0) * w $$ (1, 0),\n                 v $$ (1, 0) * w $$ (0, 0),\n                 v $$ (1, 0) * w $$ (1, 0)]])\\<rbrakk>\n       \\<Longrightarrow> (v \\<Otimes> w) $$ (i, j) =\n                         Tensor.mat_of_cols_list 4\n                          [[v $$ (0, 0) * w $$ (0, 0),\n                            v $$ (0, 0) * w $$ (1, 0),\n                            v $$ (1, 0) * w $$ (0, 0),\n                            v $$ (1, 0) * w $$ (1, 0)]] $$\n                         (i, j)\n 2. dim_row (v \\<Otimes> w) =\n    dim_row\n     (Tensor.mat_of_cols_list 4\n       [[v $$ (0, 0) * w $$ (0, 0), v $$ (0, 0) * w $$ (1, 0),\n         v $$ (1, 0) * w $$ (0, 0), v $$ (1, 0) * w $$ (1, 0)]])\n 3. dim_col (v \\<Otimes> w) =\n    dim_col\n     (Tensor.mat_of_cols_list 4\n       [[v $$ (0, 0) * w $$ (0, 0), v $$ (0, 0) * w $$ (1, 0),\n         v $$ (1, 0) * w $$ (0, 0), v $$ (1, 0) * w $$ (1, 0)]])", "then"], ["proof (chain)\npicking this:\n  u =\n  Tensor.mat_of_cols_list 4\n   [[v $$ (0, 0) * w $$ (0, 0), v $$ (0, 0) * w $$ (1, 0),\n     v $$ (1, 0) * w $$ (0, 0), v $$ (1, 0) * w $$ (1, 0)]]", "show f1:\"dim_row (v \\<Otimes> w) = dim_row u\""], ["proof (prove)\nusing this:\n  u =\n  Tensor.mat_of_cols_list 4\n   [[v $$ (0, 0) * w $$ (0, 0), v $$ (0, 0) * w $$ (1, 0),\n     v $$ (1, 0) * w $$ (0, 0), v $$ (1, 0) * w $$ (1, 0)]]\n\ngoal (1 subgoal):\n 1. dim_row (v \\<Otimes> w) = dim_row u", "using assms state_def mat_of_cols_list_def tensor_mat_def"], ["proof (prove)\nusing this:\n  u =\n  Tensor.mat_of_cols_list 4\n   [[v $$ (0, 0) * w $$ (0, 0), v $$ (0, 0) * w $$ (1, 0),\n     v $$ (1, 0) * w $$ (0, 0), v $$ (1, 0) * w $$ (1, 0)]]\n  state 1 v\n  state 1 w\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  ?A \\<Otimes> ?B \\<equiv>\n  Tensor.mat_of_cols_list (dim_row ?A * dim_row ?B)\n   (mult.Tensor (*) (mat_to_cols_list ?A) (mat_to_cols_list ?B))\n\ngoal (1 subgoal):\n 1. dim_row (v \\<Otimes> w) = dim_row u", "by simp"], ["proof (state)\nthis:\n  dim_row (v \\<Otimes> w) = dim_row u\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 4\n                       [[v $$ (0, 0) * w $$ (0, 0),\n                         v $$ (0, 0) * w $$ (1, 0),\n                         v $$ (1, 0) * w $$ (0, 0),\n                         v $$ (1, 0) * w $$ (1, 0)]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4\n               [[v $$ (0, 0) * w $$ (0, 0), v $$ (0, 0) * w $$ (1, 0),\n                 v $$ (1, 0) * w $$ (0, 0),\n                 v $$ (1, 0) * w $$ (1, 0)]])\\<rbrakk>\n       \\<Longrightarrow> (v \\<Otimes> w) $$ (i, j) =\n                         Tensor.mat_of_cols_list 4\n                          [[v $$ (0, 0) * w $$ (0, 0),\n                            v $$ (0, 0) * w $$ (1, 0),\n                            v $$ (1, 0) * w $$ (0, 0),\n                            v $$ (1, 0) * w $$ (1, 0)]] $$\n                         (i, j)\n 2. dim_col (v \\<Otimes> w) =\n    dim_col\n     (Tensor.mat_of_cols_list 4\n       [[v $$ (0, 0) * w $$ (0, 0), v $$ (0, 0) * w $$ (1, 0),\n         v $$ (1, 0) * w $$ (0, 0), v $$ (1, 0) * w $$ (1, 0)]])", "show f2:\"dim_col (v \\<Otimes> w) = dim_col u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col (v \\<Otimes> w) = dim_col u", "using assms state_def mat_of_cols_list_def tensor_mat_def u_def"], ["proof (prove)\nusing this:\n  state 1 v\n  state 1 w\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n  ?A \\<Otimes> ?B \\<equiv>\n  Tensor.mat_of_cols_list (dim_row ?A * dim_row ?B)\n   (mult.Tensor (*) (mat_to_cols_list ?A) (mat_to_cols_list ?B))\n  u =\n  Tensor.mat_of_cols_list 4\n   [[v $$ (0, 0) * w $$ (0, 0), v $$ (0, 0) * w $$ (1, 0),\n     v $$ (1, 0) * w $$ (0, 0), v $$ (1, 0) * w $$ (1, 0)]]\n\ngoal (1 subgoal):\n 1. dim_col (v \\<Otimes> w) = dim_col u", "by simp"], ["proof (state)\nthis:\n  dim_col (v \\<Otimes> w) = dim_col u\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Tensor.mat_of_cols_list 4\n                       [[v $$ (0, 0) * w $$ (0, 0),\n                         v $$ (0, 0) * w $$ (1, 0),\n                         v $$ (1, 0) * w $$ (0, 0),\n                         v $$ (1, 0) * w $$ (1, 0)]]);\n        j < dim_col\n             (Tensor.mat_of_cols_list 4\n               [[v $$ (0, 0) * w $$ (0, 0), v $$ (0, 0) * w $$ (1, 0),\n                 v $$ (1, 0) * w $$ (0, 0),\n                 v $$ (1, 0) * w $$ (1, 0)]])\\<rbrakk>\n       \\<Longrightarrow> (v \\<Otimes> w) $$ (i, j) =\n                         Tensor.mat_of_cols_list 4\n                          [[v $$ (0, 0) * w $$ (0, 0),\n                            v $$ (0, 0) * w $$ (1, 0),\n                            v $$ (1, 0) * w $$ (0, 0),\n                            v $$ (1, 0) * w $$ (1, 0)]] $$\n                         (i, j)", "show \"\\<And>i j. i < dim_row u \\<Longrightarrow> j < dim_col u \\<Longrightarrow>  (v \\<Otimes> w) $$ (i, j) = u $$ (i, j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row u; j < dim_col u\\<rbrakk>\n       \\<Longrightarrow> (v \\<Otimes> w) $$ (i, j) = u $$ (i, j)", "using u_def tensor_mat_def assms state_def"], ["proof (prove)\nusing this:\n  u =\n  Tensor.mat_of_cols_list 4\n   [[v $$ (0, 0) * w $$ (0, 0), v $$ (0, 0) * w $$ (1, 0),\n     v $$ (1, 0) * w $$ (0, 0), v $$ (1, 0) * w $$ (1, 0)]]\n  ?A \\<Otimes> ?B \\<equiv>\n  Tensor.mat_of_cols_list (dim_row ?A * dim_row ?B)\n   (mult.Tensor (*) (mat_to_cols_list ?A) (mat_to_cols_list ?B))\n  state 1 v\n  state 1 w\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row u; j < dim_col u\\<rbrakk>\n       \\<Longrightarrow> (v \\<Otimes> w) $$ (i, j) = u $$ (i, j)", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>?i < dim_row u; ?j < dim_col u\\<rbrakk>\n  \\<Longrightarrow> (v \\<Otimes> w) $$ (?i, ?j) = u $$ (?i, ?j)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mat_tensor_prod_2_col [simp]:\n  assumes \"state 1 v\" and \"state 1 w\"\n  shows \"Matrix.col (v \\<Otimes> w) 0 = Matrix.col v 0 \\<otimes> Matrix.col w 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Matrix.col (v \\<Otimes> w) 0 = Matrix.col v 0 \\<otimes> Matrix.col w 0", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       i < dim_vec\n            (Matrix.col v 0 \\<otimes> Matrix.col w 0) \\<Longrightarrow>\n       Matrix.col (v \\<Otimes> w) 0 $ i =\n       (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ i\n 2. dim_vec (Matrix.col (v \\<Otimes> w) 0) =\n    dim_vec (Matrix.col v 0 \\<otimes> Matrix.col w 0)", "show f1:\"dim_vec (Matrix.col (v \\<Otimes> w) 0) = dim_vec (Matrix.col v 0 \\<otimes> Matrix.col w 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_vec (Matrix.col (v \\<Otimes> w) 0) =\n    dim_vec (Matrix.col v 0 \\<otimes> Matrix.col w 0)", "using assms vec_tensor_prod_2_bis"], ["proof (prove)\nusing this:\n  state 1 v\n  state 1 w\n  \\<lbrakk>?v \\<in> state_qbit 1; ?w \\<in> state_qbit 1\\<rbrakk>\n  \\<Longrightarrow> ?v \\<otimes> ?w =\n                    Matrix.vec 4\n                     (\\<lambda>i.\n                         if i = 0 then ?v $ 0 * ?w $ 0\n                         else if i = 3 then ?v $ 1 * ?w $ 1\n                              else if i = 1 then ?v $ 0 * ?w $ 1\n                                   else ?v $ 1 * ?w $ 0)\n\ngoal (1 subgoal):\n 1. dim_vec (Matrix.col (v \\<Otimes> w) 0) =\n    dim_vec (Matrix.col v 0 \\<otimes> Matrix.col w 0)", "by (smt Tensor.mat_of_cols_list_def dim_col dim_row_mat(1) dim_vec mat_tensor_prod_2_prelim state.state_to_state_qbit)"], ["proof (state)\nthis:\n  dim_vec (Matrix.col (v \\<Otimes> w) 0) =\n  dim_vec (Matrix.col v 0 \\<otimes> Matrix.col w 0)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec\n            (Matrix.col v 0 \\<otimes> Matrix.col w 0) \\<Longrightarrow>\n       Matrix.col (v \\<Otimes> w) 0 $ i =\n       (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec\n            (Matrix.col v 0 \\<otimes> Matrix.col w 0) \\<Longrightarrow>\n       Matrix.col (v \\<Otimes> w) 0 $ i =\n       (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ i", "show \"\\<And>i. i<dim_vec (Matrix.col v 0 \\<otimes> Matrix.col w 0) \\<Longrightarrow> Matrix.col (v \\<Otimes> w) 0 $ i = (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec\n            (Matrix.col v 0 \\<otimes> Matrix.col w 0) \\<Longrightarrow>\n       Matrix.col (v \\<Otimes> w) 0 $ i =\n       (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec\n            (Matrix.col v 0 \\<otimes> Matrix.col w 0) \\<Longrightarrow>\n       Matrix.col (v \\<Otimes> w) 0 $ i =\n       (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ i", "have \"dim_vec (Matrix.col v 0 \\<otimes> Matrix.col w 0) = 4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_vec (Matrix.col v 0 \\<otimes> Matrix.col w 0) = 4", "by (metis (no_types, lifting) assms(1) assms(2) dim_vec state.state_to_state_qbit vec_tensor_prod_2_bis)"], ["proof (state)\nthis:\n  dim_vec (Matrix.col v 0 \\<otimes> Matrix.col w 0) = 4\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec\n            (Matrix.col v 0 \\<otimes> Matrix.col w 0) \\<Longrightarrow>\n       Matrix.col (v \\<Otimes> w) 0 $ i =\n       (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ i", "moreover"], ["proof (state)\nthis:\n  dim_vec (Matrix.col v 0 \\<otimes> Matrix.col w 0) = 4\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec\n            (Matrix.col v 0 \\<otimes> Matrix.col w 0) \\<Longrightarrow>\n       Matrix.col (v \\<Otimes> w) 0 $ i =\n       (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ i", "have \"(Matrix.col v 0 \\<otimes> Matrix.col w 0) $ 0 = v $$ (0,0) * w $$ (0,0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ 0 =\n    v $$ (0, 0) * w $$ (0, 0)", "using assms vec_tensor_prod_2 state.state_to_state_qbit col_index_of_mat_col"], ["proof (prove)\nusing this:\n  state 1 v\n  state 1 w\n  \\<lbrakk>?v \\<in> state_qbit 1; ?w \\<in> state_qbit 1\\<rbrakk>\n  \\<Longrightarrow> ?v \\<otimes> ?w =\n                    vec_of_list\n                     [?v $ 0 * ?w $ 0, ?v $ 0 * ?w $ 1, ?v $ 1 * ?w $ 0,\n                      ?v $ 1 * ?w $ 1]\n  state ?n ?v \\<Longrightarrow> Matrix.col ?v 0 \\<in> state_qbit ?n\n  \\<lbrakk>dim_col ?v = 1; ?i < dim_row ?v\\<rbrakk>\n  \\<Longrightarrow> Matrix.col ?v 0 $ ?i = ?v $$ (?i, 0)\n\ngoal (1 subgoal):\n 1. (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ 0 =\n    v $$ (0, 0) * w $$ (0, 0)", "by (smt nth_Cons_0 power_one_right state_def vec_of_list_index zero_less_numeral)"], ["proof (state)\nthis:\n  (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ 0 = v $$ (0, 0) * w $$ (0, 0)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec\n            (Matrix.col v 0 \\<otimes> Matrix.col w 0) \\<Longrightarrow>\n       Matrix.col (v \\<Otimes> w) 0 $ i =\n       (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ i", "moreover"], ["proof (state)\nthis:\n  (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ 0 = v $$ (0, 0) * w $$ (0, 0)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec\n            (Matrix.col v 0 \\<otimes> Matrix.col w 0) \\<Longrightarrow>\n       Matrix.col (v \\<Otimes> w) 0 $ i =\n       (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ i", "have \"\\<dots> = Matrix.col (v \\<Otimes> w) 0 $ 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v $$ (0, 0) * w $$ (0, 0) = Matrix.col (v \\<Otimes> w) 0 $ 0", "using assms"], ["proof (prove)\nusing this:\n  state 1 v\n  state 1 w\n\ngoal (1 subgoal):\n 1. v $$ (0, 0) * w $$ (0, 0) = Matrix.col (v \\<Otimes> w) 0 $ 0", "by simp"], ["proof (state)\nthis:\n  v $$ (0, 0) * w $$ (0, 0) = Matrix.col (v \\<Otimes> w) 0 $ 0\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec\n            (Matrix.col v 0 \\<otimes> Matrix.col w 0) \\<Longrightarrow>\n       Matrix.col (v \\<Otimes> w) 0 $ i =\n       (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ i", "moreover"], ["proof (state)\nthis:\n  v $$ (0, 0) * w $$ (0, 0) = Matrix.col (v \\<Otimes> w) 0 $ 0\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec\n            (Matrix.col v 0 \\<otimes> Matrix.col w 0) \\<Longrightarrow>\n       Matrix.col (v \\<Otimes> w) 0 $ i =\n       (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ i", "have \"(Matrix.col v 0 \\<otimes> Matrix.col w 0) $ 1 = v $$ (0,0) * w $$ (1,0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ 1 =\n    v $$ (0, 0) * w $$ (1, 0)", "using assms vec_tensor_prod_2 state.state_to_state_qbit col_index_of_mat_col"], ["proof (prove)\nusing this:\n  state 1 v\n  state 1 w\n  \\<lbrakk>?v \\<in> state_qbit 1; ?w \\<in> state_qbit 1\\<rbrakk>\n  \\<Longrightarrow> ?v \\<otimes> ?w =\n                    vec_of_list\n                     [?v $ 0 * ?w $ 0, ?v $ 0 * ?w $ 1, ?v $ 1 * ?w $ 0,\n                      ?v $ 1 * ?w $ 1]\n  state ?n ?v \\<Longrightarrow> Matrix.col ?v 0 \\<in> state_qbit ?n\n  \\<lbrakk>dim_col ?v = 1; ?i < dim_row ?v\\<rbrakk>\n  \\<Longrightarrow> Matrix.col ?v 0 $ ?i = ?v $$ (?i, 0)\n\ngoal (1 subgoal):\n 1. (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ 1 =\n    v $$ (0, 0) * w $$ (1, 0)", "by (smt One_nat_def Suc_1 lessI nth_Cons_0 power_one_right state_def vec_index_vCons_Suc \nvec_of_list_Cons vec_of_list_index zero_less_numeral)"], ["proof (state)\nthis:\n  (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ 1 = v $$ (0, 0) * w $$ (1, 0)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec\n            (Matrix.col v 0 \\<otimes> Matrix.col w 0) \\<Longrightarrow>\n       Matrix.col (v \\<Otimes> w) 0 $ i =\n       (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ i", "moreover"], ["proof (state)\nthis:\n  (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ 1 = v $$ (0, 0) * w $$ (1, 0)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec\n            (Matrix.col v 0 \\<otimes> Matrix.col w 0) \\<Longrightarrow>\n       Matrix.col (v \\<Otimes> w) 0 $ i =\n       (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ i", "have \"\\<dots> = Matrix.col (v \\<Otimes> w) 0 $ 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v $$ (0, 0) * w $$ (1, 0) = Matrix.col (v \\<Otimes> w) 0 $ 1", "using assms"], ["proof (prove)\nusing this:\n  state 1 v\n  state 1 w\n\ngoal (1 subgoal):\n 1. v $$ (0, 0) * w $$ (1, 0) = Matrix.col (v \\<Otimes> w) 0 $ 1", "by simp"], ["proof (state)\nthis:\n  v $$ (0, 0) * w $$ (1, 0) = Matrix.col (v \\<Otimes> w) 0 $ 1\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec\n            (Matrix.col v 0 \\<otimes> Matrix.col w 0) \\<Longrightarrow>\n       Matrix.col (v \\<Otimes> w) 0 $ i =\n       (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ i", "moreover"], ["proof (state)\nthis:\n  v $$ (0, 0) * w $$ (1, 0) = Matrix.col (v \\<Otimes> w) 0 $ 1\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec\n            (Matrix.col v 0 \\<otimes> Matrix.col w 0) \\<Longrightarrow>\n       Matrix.col (v \\<Otimes> w) 0 $ i =\n       (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ i", "have \"(Matrix.col v 0 \\<otimes> Matrix.col w 0) $ 2 = v $$ (1,0) * w $$ (0,0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ 2 =\n    v $$ (1, 0) * w $$ (0, 0)", "using assms vec_tensor_prod_2 state.state_to_state_qbit col_index_of_mat_col"], ["proof (prove)\nusing this:\n  state 1 v\n  state 1 w\n  \\<lbrakk>?v \\<in> state_qbit 1; ?w \\<in> state_qbit 1\\<rbrakk>\n  \\<Longrightarrow> ?v \\<otimes> ?w =\n                    vec_of_list\n                     [?v $ 0 * ?w $ 0, ?v $ 0 * ?w $ 1, ?v $ 1 * ?w $ 0,\n                      ?v $ 1 * ?w $ 1]\n  state ?n ?v \\<Longrightarrow> Matrix.col ?v 0 \\<in> state_qbit ?n\n  \\<lbrakk>dim_col ?v = 1; ?i < dim_row ?v\\<rbrakk>\n  \\<Longrightarrow> Matrix.col ?v 0 $ ?i = ?v $$ (?i, 0)\n\ngoal (1 subgoal):\n 1. (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ 2 =\n    v $$ (1, 0) * w $$ (0, 0)", "by (smt One_nat_def Suc_1 lessI nth_Cons_0 power_one_right state_def vec_index_vCons_Suc \nvec_of_list_Cons vec_of_list_index zero_less_numeral)"], ["proof (state)\nthis:\n  (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ 2 = v $$ (1, 0) * w $$ (0, 0)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec\n            (Matrix.col v 0 \\<otimes> Matrix.col w 0) \\<Longrightarrow>\n       Matrix.col (v \\<Otimes> w) 0 $ i =\n       (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ i", "moreover"], ["proof (state)\nthis:\n  (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ 2 = v $$ (1, 0) * w $$ (0, 0)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec\n            (Matrix.col v 0 \\<otimes> Matrix.col w 0) \\<Longrightarrow>\n       Matrix.col (v \\<Otimes> w) 0 $ i =\n       (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ i", "have \"\\<dots> = Matrix.col (v \\<Otimes> w) 0 $ 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v $$ (1, 0) * w $$ (0, 0) = Matrix.col (v \\<Otimes> w) 0 $ 2", "using assms"], ["proof (prove)\nusing this:\n  state 1 v\n  state 1 w\n\ngoal (1 subgoal):\n 1. v $$ (1, 0) * w $$ (0, 0) = Matrix.col (v \\<Otimes> w) 0 $ 2", "by simp"], ["proof (state)\nthis:\n  v $$ (1, 0) * w $$ (0, 0) = Matrix.col (v \\<Otimes> w) 0 $ 2\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec\n            (Matrix.col v 0 \\<otimes> Matrix.col w 0) \\<Longrightarrow>\n       Matrix.col (v \\<Otimes> w) 0 $ i =\n       (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ i", "moreover"], ["proof (state)\nthis:\n  v $$ (1, 0) * w $$ (0, 0) = Matrix.col (v \\<Otimes> w) 0 $ 2\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec\n            (Matrix.col v 0 \\<otimes> Matrix.col w 0) \\<Longrightarrow>\n       Matrix.col (v \\<Otimes> w) 0 $ i =\n       (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ i", "have \"(Matrix.col v 0 \\<otimes> Matrix.col w 0) $ 3 = v $$ (1,0) * w $$ (1,0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ 3 =\n    v $$ (1, 0) * w $$ (1, 0)", "using assms vec_tensor_prod_2 state.state_to_state_qbit col_index_of_mat_col numeral_3_eq_3"], ["proof (prove)\nusing this:\n  state 1 v\n  state 1 w\n  \\<lbrakk>?v \\<in> state_qbit 1; ?w \\<in> state_qbit 1\\<rbrakk>\n  \\<Longrightarrow> ?v \\<otimes> ?w =\n                    vec_of_list\n                     [?v $ 0 * ?w $ 0, ?v $ 0 * ?w $ 1, ?v $ 1 * ?w $ 0,\n                      ?v $ 1 * ?w $ 1]\n  state ?n ?v \\<Longrightarrow> Matrix.col ?v 0 \\<in> state_qbit ?n\n  \\<lbrakk>dim_col ?v = 1; ?i < dim_row ?v\\<rbrakk>\n  \\<Longrightarrow> Matrix.col ?v 0 $ ?i = ?v $$ (?i, 0)\n  3 = Suc (Suc (Suc 0))\n\ngoal (1 subgoal):\n 1. (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ 3 =\n    v $$ (1, 0) * w $$ (1, 0)", "by (smt One_nat_def Suc_1 lessI nth_Cons_0 power_one_right state_def vec_index_vCons_Suc \nvec_of_list_Cons vec_of_list_index zero_less_numeral)"], ["proof (state)\nthis:\n  (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ 3 = v $$ (1, 0) * w $$ (1, 0)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec\n            (Matrix.col v 0 \\<otimes> Matrix.col w 0) \\<Longrightarrow>\n       Matrix.col (v \\<Otimes> w) 0 $ i =\n       (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ i", "moreover"], ["proof (state)\nthis:\n  (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ 3 = v $$ (1, 0) * w $$ (1, 0)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec\n            (Matrix.col v 0 \\<otimes> Matrix.col w 0) \\<Longrightarrow>\n       Matrix.col (v \\<Otimes> w) 0 $ i =\n       (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ i", "have \"\\<dots> = Matrix.col (v \\<Otimes> w) 0 $ 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v $$ (1, 0) * w $$ (1, 0) = Matrix.col (v \\<Otimes> w) 0 $ 3", "using assms"], ["proof (prove)\nusing this:\n  state 1 v\n  state 1 w\n\ngoal (1 subgoal):\n 1. v $$ (1, 0) * w $$ (1, 0) = Matrix.col (v \\<Otimes> w) 0 $ 3", "by simp"], ["proof (state)\nthis:\n  v $$ (1, 0) * w $$ (1, 0) = Matrix.col (v \\<Otimes> w) 0 $ 3\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec\n            (Matrix.col v 0 \\<otimes> Matrix.col w 0) \\<Longrightarrow>\n       Matrix.col (v \\<Otimes> w) 0 $ i =\n       (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ i", "ultimately"], ["proof (chain)\npicking this:\n  dim_vec (Matrix.col v 0 \\<otimes> Matrix.col w 0) = 4\n  (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ 0 = v $$ (0, 0) * w $$ (0, 0)\n  v $$ (0, 0) * w $$ (0, 0) = Matrix.col (v \\<Otimes> w) 0 $ 0\n  (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ 1 = v $$ (0, 0) * w $$ (1, 0)\n  v $$ (0, 0) * w $$ (1, 0) = Matrix.col (v \\<Otimes> w) 0 $ 1\n  (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ 2 = v $$ (1, 0) * w $$ (0, 0)\n  v $$ (1, 0) * w $$ (0, 0) = Matrix.col (v \\<Otimes> w) 0 $ 2\n  (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ 3 = v $$ (1, 0) * w $$ (1, 0)\n  v $$ (1, 0) * w $$ (1, 0) = Matrix.col (v \\<Otimes> w) 0 $ 3", "show \"\\<And>i. i<dim_vec (Matrix.col v 0 \\<otimes> Matrix.col w 0) \\<Longrightarrow> Matrix.col (v \\<Otimes> w) 0 $ i = (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ i\""], ["proof (prove)\nusing this:\n  dim_vec (Matrix.col v 0 \\<otimes> Matrix.col w 0) = 4\n  (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ 0 = v $$ (0, 0) * w $$ (0, 0)\n  v $$ (0, 0) * w $$ (0, 0) = Matrix.col (v \\<Otimes> w) 0 $ 0\n  (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ 1 = v $$ (0, 0) * w $$ (1, 0)\n  v $$ (0, 0) * w $$ (1, 0) = Matrix.col (v \\<Otimes> w) 0 $ 1\n  (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ 2 = v $$ (1, 0) * w $$ (0, 0)\n  v $$ (1, 0) * w $$ (0, 0) = Matrix.col (v \\<Otimes> w) 0 $ 2\n  (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ 3 = v $$ (1, 0) * w $$ (1, 0)\n  v $$ (1, 0) * w $$ (1, 0) = Matrix.col (v \\<Otimes> w) 0 $ 3\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec\n            (Matrix.col v 0 \\<otimes> Matrix.col w 0) \\<Longrightarrow>\n       Matrix.col (v \\<Otimes> w) 0 $ i =\n       (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ i", "using index_sl_four"], ["proof (prove)\nusing this:\n  dim_vec (Matrix.col v 0 \\<otimes> Matrix.col w 0) = 4\n  (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ 0 = v $$ (0, 0) * w $$ (0, 0)\n  v $$ (0, 0) * w $$ (0, 0) = Matrix.col (v \\<Otimes> w) 0 $ 0\n  (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ 1 = v $$ (0, 0) * w $$ (1, 0)\n  v $$ (0, 0) * w $$ (1, 0) = Matrix.col (v \\<Otimes> w) 0 $ 1\n  (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ 2 = v $$ (1, 0) * w $$ (0, 0)\n  v $$ (1, 0) * w $$ (0, 0) = Matrix.col (v \\<Otimes> w) 0 $ 2\n  (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ 3 = v $$ (1, 0) * w $$ (1, 0)\n  v $$ (1, 0) * w $$ (1, 0) = Matrix.col (v \\<Otimes> w) 0 $ 3\n  \\<forall>i<4. i = 0 \\<or> i = 1 \\<or> i = 2 \\<or> i = 3\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec\n            (Matrix.col v 0 \\<otimes> Matrix.col w 0) \\<Longrightarrow>\n       Matrix.col (v \\<Otimes> w) 0 $ i =\n       (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ i", "by auto"], ["proof (state)\nthis:\n  ?i < dim_vec (Matrix.col v 0 \\<otimes> Matrix.col w 0) \\<Longrightarrow>\n  Matrix.col (v \\<Otimes> w) 0 $ ?i =\n  (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ ?i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?i < dim_vec (Matrix.col v 0 \\<otimes> Matrix.col w 0) \\<Longrightarrow>\n  Matrix.col (v \\<Otimes> w) 0 $ ?i =\n  (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ ?i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mat_tensor_prod_2 [simp]:\n  assumes \"state 1 v\" and \"state 1 w\"\n  shows \"v \\<Otimes> w = Matrix.mat 4 1 (\\<lambda>(i,j). if i = 0 then v $$ (0,0) * w $$ (0,0) else \n                                            if i = 3 then v $$ (1,0) * w $$ (1,0) else\n                                              if i = 1 then v $$ (0,0) * w $$ (1,0) else \n                                                v $$ (1,0) * w $$ (0,0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<Otimes> w =\n    Matrix.mat 4 1\n     (\\<lambda>(i, j).\n         if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n         else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n              else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                   else v $$ (1, 0) * w $$ (0, 0))", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Matrix.mat 4 1\n                       (\\<lambda>(i, j).\n                           if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n                           else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n                                else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                                     else v $$ (1, 0) * w $$ (0, 0)));\n        j < dim_col\n             (Matrix.mat 4 1\n               (\\<lambda>(i, j).\n                   if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n                   else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n                        else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                             else v $$ (1, 0) * w $$ (0, 0)))\\<rbrakk>\n       \\<Longrightarrow> (v \\<Otimes> w) $$ (i, j) =\n                         Matrix.mat 4 1\n                          (\\<lambda>(i, j).\n                              if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n                              else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n                                   else if i = 1\n  then v $$ (0, 0) * w $$ (1, 0) else v $$ (1, 0) * w $$ (0, 0)) $$\n                         (i, j)\n 2. dim_row (v \\<Otimes> w) =\n    dim_row\n     (Matrix.mat 4 1\n       (\\<lambda>(i, j).\n           if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n           else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n                else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                     else v $$ (1, 0) * w $$ (0, 0)))\n 3. dim_col (v \\<Otimes> w) =\n    dim_col\n     (Matrix.mat 4 1\n       (\\<lambda>(i, j).\n           if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n           else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n                else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                     else v $$ (1, 0) * w $$ (0, 0)))", "define u where \"u = Matrix.mat 4 1 (\\<lambda>(i,j). if i = 0 then v $$ (0,0) * w $$ (0,0) else \n                                            if i = 3 then v $$ (1,0) * w $$ (1,0) else\n                                              if i = 1 then v $$ (0,0) * w $$ (1,0) else \n                                                v $$ (1,0) * w $$ (0,0))\""], ["proof (state)\nthis:\n  u =\n  Matrix.mat 4 1\n   (\\<lambda>(i, j).\n       if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n       else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n            else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                 else v $$ (1, 0) * w $$ (0, 0))\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Matrix.mat 4 1\n                       (\\<lambda>(i, j).\n                           if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n                           else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n                                else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                                     else v $$ (1, 0) * w $$ (0, 0)));\n        j < dim_col\n             (Matrix.mat 4 1\n               (\\<lambda>(i, j).\n                   if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n                   else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n                        else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                             else v $$ (1, 0) * w $$ (0, 0)))\\<rbrakk>\n       \\<Longrightarrow> (v \\<Otimes> w) $$ (i, j) =\n                         Matrix.mat 4 1\n                          (\\<lambda>(i, j).\n                              if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n                              else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n                                   else if i = 1\n  then v $$ (0, 0) * w $$ (1, 0) else v $$ (1, 0) * w $$ (0, 0)) $$\n                         (i, j)\n 2. dim_row (v \\<Otimes> w) =\n    dim_row\n     (Matrix.mat 4 1\n       (\\<lambda>(i, j).\n           if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n           else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n                else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                     else v $$ (1, 0) * w $$ (0, 0)))\n 3. dim_col (v \\<Otimes> w) =\n    dim_col\n     (Matrix.mat 4 1\n       (\\<lambda>(i, j).\n           if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n           else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n                else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                     else v $$ (1, 0) * w $$ (0, 0)))", "then"], ["proof (chain)\npicking this:\n  u =\n  Matrix.mat 4 1\n   (\\<lambda>(i, j).\n       if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n       else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n            else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                 else v $$ (1, 0) * w $$ (0, 0))", "show \"dim_row (v \\<Otimes> w) = dim_row u\""], ["proof (prove)\nusing this:\n  u =\n  Matrix.mat 4 1\n   (\\<lambda>(i, j).\n       if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n       else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n            else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                 else v $$ (1, 0) * w $$ (0, 0))\n\ngoal (1 subgoal):\n 1. dim_row (v \\<Otimes> w) = dim_row u", "using assms tensor_mat_def state_def"], ["proof (prove)\nusing this:\n  u =\n  Matrix.mat 4 1\n   (\\<lambda>(i, j).\n       if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n       else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n            else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                 else v $$ (1, 0) * w $$ (0, 0))\n  state 1 v\n  state 1 w\n  ?A \\<Otimes> ?B \\<equiv>\n  Tensor.mat_of_cols_list (dim_row ?A * dim_row ?B)\n   (mult.Tensor (*) (mat_to_cols_list ?A) (mat_to_cols_list ?B))\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n\ngoal (1 subgoal):\n 1. dim_row (v \\<Otimes> w) = dim_row u", "by(simp add: Tensor.mat_of_cols_list_def)"], ["proof (state)\nthis:\n  dim_row (v \\<Otimes> w) = dim_row u\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Matrix.mat 4 1\n                       (\\<lambda>(i, j).\n                           if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n                           else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n                                else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                                     else v $$ (1, 0) * w $$ (0, 0)));\n        j < dim_col\n             (Matrix.mat 4 1\n               (\\<lambda>(i, j).\n                   if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n                   else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n                        else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                             else v $$ (1, 0) * w $$ (0, 0)))\\<rbrakk>\n       \\<Longrightarrow> (v \\<Otimes> w) $$ (i, j) =\n                         Matrix.mat 4 1\n                          (\\<lambda>(i, j).\n                              if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n                              else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n                                   else if i = 1\n  then v $$ (0, 0) * w $$ (1, 0) else v $$ (1, 0) * w $$ (0, 0)) $$\n                         (i, j)\n 2. dim_col (v \\<Otimes> w) =\n    dim_col\n     (Matrix.mat 4 1\n       (\\<lambda>(i, j).\n           if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n           else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n                else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                     else v $$ (1, 0) * w $$ (0, 0)))", "also"], ["proof (state)\nthis:\n  dim_row (v \\<Otimes> w) = dim_row u\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Matrix.mat 4 1\n                       (\\<lambda>(i, j).\n                           if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n                           else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n                                else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                                     else v $$ (1, 0) * w $$ (0, 0)));\n        j < dim_col\n             (Matrix.mat 4 1\n               (\\<lambda>(i, j).\n                   if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n                   else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n                        else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                             else v $$ (1, 0) * w $$ (0, 0)))\\<rbrakk>\n       \\<Longrightarrow> (v \\<Otimes> w) $$ (i, j) =\n                         Matrix.mat 4 1\n                          (\\<lambda>(i, j).\n                              if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n                              else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n                                   else if i = 1\n  then v $$ (0, 0) * w $$ (1, 0) else v $$ (1, 0) * w $$ (0, 0)) $$\n                         (i, j)\n 2. dim_col (v \\<Otimes> w) =\n    dim_col\n     (Matrix.mat 4 1\n       (\\<lambda>(i, j).\n           if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n           else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n                else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                     else v $$ (1, 0) * w $$ (0, 0)))", "have \"\\<dots> = 4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row u = 4", "by (simp add: u_def)"], ["proof (state)\nthis:\n  dim_row u = 4\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Matrix.mat 4 1\n                       (\\<lambda>(i, j).\n                           if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n                           else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n                                else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                                     else v $$ (1, 0) * w $$ (0, 0)));\n        j < dim_col\n             (Matrix.mat 4 1\n               (\\<lambda>(i, j).\n                   if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n                   else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n                        else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                             else v $$ (1, 0) * w $$ (0, 0)))\\<rbrakk>\n       \\<Longrightarrow> (v \\<Otimes> w) $$ (i, j) =\n                         Matrix.mat 4 1\n                          (\\<lambda>(i, j).\n                              if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n                              else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n                                   else if i = 1\n  then v $$ (0, 0) * w $$ (1, 0) else v $$ (1, 0) * w $$ (0, 0)) $$\n                         (i, j)\n 2. dim_col (v \\<Otimes> w) =\n    dim_col\n     (Matrix.mat 4 1\n       (\\<lambda>(i, j).\n           if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n           else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n                else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                     else v $$ (1, 0) * w $$ (0, 0)))", "show \"dim_col (v \\<Otimes> w) = dim_col u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col (v \\<Otimes> w) = dim_col u", "using u_def assms tensor_mat_def state_def Tensor.mat_of_cols_list_def"], ["proof (prove)\nusing this:\n  u =\n  Matrix.mat 4 1\n   (\\<lambda>(i, j).\n       if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n       else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n            else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                 else v $$ (1, 0) * w $$ (0, 0))\n  state 1 v\n  state 1 w\n  ?A \\<Otimes> ?B \\<equiv>\n  Tensor.mat_of_cols_list (dim_row ?A * dim_row ?B)\n   (mult.Tensor (*) (mat_to_cols_list ?A) (mat_to_cols_list ?B))\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n  Tensor.mat_of_cols_list ?nr ?cs =\n  Matrix.mat ?nr (length ?cs) (\\<lambda>(i, j). ?cs ! j ! i)\n\ngoal (1 subgoal):\n 1. dim_col (v \\<Otimes> w) = dim_col u", "by simp"], ["proof (state)\nthis:\n  dim_col (v \\<Otimes> w) = dim_col u\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Matrix.mat 4 1\n                       (\\<lambda>(i, j).\n                           if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n                           else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n                                else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                                     else v $$ (1, 0) * w $$ (0, 0)));\n        j < dim_col\n             (Matrix.mat 4 1\n               (\\<lambda>(i, j).\n                   if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n                   else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n                        else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                             else v $$ (1, 0) * w $$ (0, 0)))\\<rbrakk>\n       \\<Longrightarrow> (v \\<Otimes> w) $$ (i, j) =\n                         Matrix.mat 4 1\n                          (\\<lambda>(i, j).\n                              if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n                              else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n                                   else if i = 1\n  then v $$ (0, 0) * w $$ (1, 0) else v $$ (1, 0) * w $$ (0, 0)) $$\n                         (i, j)", "moreover"], ["proof (state)\nthis:\n  dim_col (v \\<Otimes> w) = dim_col u\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Matrix.mat 4 1\n                       (\\<lambda>(i, j).\n                           if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n                           else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n                                else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                                     else v $$ (1, 0) * w $$ (0, 0)));\n        j < dim_col\n             (Matrix.mat 4 1\n               (\\<lambda>(i, j).\n                   if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n                   else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n                        else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                             else v $$ (1, 0) * w $$ (0, 0)))\\<rbrakk>\n       \\<Longrightarrow> (v \\<Otimes> w) $$ (i, j) =\n                         Matrix.mat 4 1\n                          (\\<lambda>(i, j).\n                              if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n                              else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n                                   else if i = 1\n  then v $$ (0, 0) * w $$ (1, 0) else v $$ (1, 0) * w $$ (0, 0)) $$\n                         (i, j)", "have \"\\<dots> = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col u = 1", "by(simp add: u_def)"], ["proof (state)\nthis:\n  dim_col u = 1\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (Matrix.mat 4 1\n                       (\\<lambda>(i, j).\n                           if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n                           else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n                                else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                                     else v $$ (1, 0) * w $$ (0, 0)));\n        j < dim_col\n             (Matrix.mat 4 1\n               (\\<lambda>(i, j).\n                   if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n                   else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n                        else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                             else v $$ (1, 0) * w $$ (0, 0)))\\<rbrakk>\n       \\<Longrightarrow> (v \\<Otimes> w) $$ (i, j) =\n                         Matrix.mat 4 1\n                          (\\<lambda>(i, j).\n                              if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n                              else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n                                   else if i = 1\n  then v $$ (0, 0) * w $$ (1, 0) else v $$ (1, 0) * w $$ (0, 0)) $$\n                         (i, j)", "ultimately"], ["proof (chain)\npicking this:\n  dim_row (v \\<Otimes> w) = dim_row u\n  dim_col (v \\<Otimes> w) = dim_col u\n  dim_col u = 1", "show \"\\<And>i j. i < dim_row u \\<Longrightarrow> j < dim_col u \\<Longrightarrow> (v \\<Otimes> w) $$ (i, j) = u $$ (i,j)\""], ["proof (prove)\nusing this:\n  dim_row (v \\<Otimes> w) = dim_row u\n  dim_col (v \\<Otimes> w) = dim_col u\n  dim_col u = 1\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row u; j < dim_col u\\<rbrakk>\n       \\<Longrightarrow> (v \\<Otimes> w) $$ (i, j) = u $$ (i, j)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row u; j < dim_col u;\n        dim_row (v \\<Otimes> w) = dim_row u;\n        dim_col (v \\<Otimes> w) = dim_col u; dim_col u = 1\\<rbrakk>\n       \\<Longrightarrow> (v \\<Otimes> w) $$ (i, j) = u $$ (i, j)", "fix i j::nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row u; j < dim_col u;\n        dim_row (v \\<Otimes> w) = dim_row u;\n        dim_col (v \\<Otimes> w) = dim_col u; dim_col u = 1\\<rbrakk>\n       \\<Longrightarrow> (v \\<Otimes> w) $$ (i, j) = u $$ (i, j)", "assume a1:\"i < dim_row u\" and a2:\"j < dim_col u\""], ["proof (state)\nthis:\n  i < dim_row u\n  j < dim_col u\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row u; j < dim_col u;\n        dim_row (v \\<Otimes> w) = dim_row u;\n        dim_col (v \\<Otimes> w) = dim_col u; dim_col u = 1\\<rbrakk>\n       \\<Longrightarrow> (v \\<Otimes> w) $$ (i, j) = u $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i < dim_row u\n  j < dim_col u", "have \"(v \\<Otimes> w) $$ (i, j) = Matrix.col (v \\<Otimes> w) 0 $ i\""], ["proof (prove)\nusing this:\n  i < dim_row u\n  j < dim_col u\n\ngoal (1 subgoal):\n 1. (v \\<Otimes> w) $$ (i, j) = Matrix.col (v \\<Otimes> w) 0 $ i", "using Matrix.col_def u_def assms"], ["proof (prove)\nusing this:\n  i < dim_row u\n  j < dim_col u\n  Matrix.col ?A ?j = Matrix.vec (dim_row ?A) (\\<lambda>i. ?A $$ (i, ?j))\n  u =\n  Matrix.mat 4 1\n   (\\<lambda>(i, j).\n       if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n       else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n            else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                 else v $$ (1, 0) * w $$ (0, 0))\n  state 1 v\n  state 1 w\n\ngoal (1 subgoal):\n 1. (v \\<Otimes> w) $$ (i, j) = Matrix.col (v \\<Otimes> w) 0 $ i", "by simp"], ["proof (state)\nthis:\n  (v \\<Otimes> w) $$ (i, j) = Matrix.col (v \\<Otimes> w) 0 $ i\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row u; j < dim_col u;\n        dim_row (v \\<Otimes> w) = dim_row u;\n        dim_col (v \\<Otimes> w) = dim_col u; dim_col u = 1\\<rbrakk>\n       \\<Longrightarrow> (v \\<Otimes> w) $$ (i, j) = u $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  (v \\<Otimes> w) $$ (i, j) = Matrix.col (v \\<Otimes> w) 0 $ i", "have f1:\"(v \\<Otimes> w) $$ (i, j) = (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ i\""], ["proof (prove)\nusing this:\n  (v \\<Otimes> w) $$ (i, j) = Matrix.col (v \\<Otimes> w) 0 $ i\n\ngoal (1 subgoal):\n 1. (v \\<Otimes> w) $$ (i, j) =\n    (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ i", "using assms mat_tensor_prod_2_col"], ["proof (prove)\nusing this:\n  (v \\<Otimes> w) $$ (i, j) = Matrix.col (v \\<Otimes> w) 0 $ i\n  state 1 v\n  state 1 w\n  \\<lbrakk>state 1 ?v; state 1 ?w\\<rbrakk>\n  \\<Longrightarrow> Matrix.col (?v \\<Otimes> ?w) 0 =\n                    Matrix.col ?v 0 \\<otimes> Matrix.col ?w 0\n\ngoal (1 subgoal):\n 1. (v \\<Otimes> w) $$ (i, j) =\n    (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ i", "by simp"], ["proof (state)\nthis:\n  (v \\<Otimes> w) $$ (i, j) = (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ i\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row u; j < dim_col u;\n        dim_row (v \\<Otimes> w) = dim_row u;\n        dim_col (v \\<Otimes> w) = dim_col u; dim_col u = 1\\<rbrakk>\n       \\<Longrightarrow> (v \\<Otimes> w) $$ (i, j) = u $$ (i, j)", "have \"(Matrix.col v 0 \\<otimes> Matrix.col w 0) $ i = \n Matrix.vec 4 (\\<lambda>i. if i = 0 then Matrix.col v 0 $ 0 * Matrix.col w 0 $ 0 else \n                                      if i = 3 then Matrix.col v 0 $ 1 * Matrix.col w 0 $ 1 else\n                                          if i = 1 then Matrix.col v 0 $ 0 * Matrix.col w 0 $ 1 else \n                                            Matrix.col v 0 $ 1 * Matrix.col w 0 $ 0) $ i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ i =\n    Matrix.vec 4\n     (\\<lambda>i.\n         if i = 0 then Matrix.col v 0 $ 0 * Matrix.col w 0 $ 0\n         else if i = 3 then Matrix.col v 0 $ 1 * Matrix.col w 0 $ 1\n              else if i = 1 then Matrix.col v 0 $ 0 * Matrix.col w 0 $ 1\n                   else Matrix.col v 0 $ 1 * Matrix.col w 0 $ 0) $\n    i", "using vec_tensor_prod_2_bis assms state.state_to_state_qbit"], ["proof (prove)\nusing this:\n  \\<lbrakk>?v \\<in> state_qbit 1; ?w \\<in> state_qbit 1\\<rbrakk>\n  \\<Longrightarrow> ?v \\<otimes> ?w =\n                    Matrix.vec 4\n                     (\\<lambda>i.\n                         if i = 0 then ?v $ 0 * ?w $ 0\n                         else if i = 3 then ?v $ 1 * ?w $ 1\n                              else if i = 1 then ?v $ 0 * ?w $ 1\n                                   else ?v $ 1 * ?w $ 0)\n  state 1 v\n  state 1 w\n  state ?n ?v \\<Longrightarrow> Matrix.col ?v 0 \\<in> state_qbit ?n\n\ngoal (1 subgoal):\n 1. (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ i =\n    Matrix.vec 4\n     (\\<lambda>i.\n         if i = 0 then Matrix.col v 0 $ 0 * Matrix.col w 0 $ 0\n         else if i = 3 then Matrix.col v 0 $ 1 * Matrix.col w 0 $ 1\n              else if i = 1 then Matrix.col v 0 $ 0 * Matrix.col w 0 $ 1\n                   else Matrix.col v 0 $ 1 * Matrix.col w 0 $ 0) $\n    i", "by presburger"], ["proof (state)\nthis:\n  (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ i =\n  Matrix.vec 4\n   (\\<lambda>i.\n       if i = 0 then Matrix.col v 0 $ 0 * Matrix.col w 0 $ 0\n       else if i = 3 then Matrix.col v 0 $ 1 * Matrix.col w 0 $ 1\n            else if i = 1 then Matrix.col v 0 $ 0 * Matrix.col w 0 $ 1\n                 else Matrix.col v 0 $ 1 * Matrix.col w 0 $ 0) $\n  i\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row u; j < dim_col u;\n        dim_row (v \\<Otimes> w) = dim_row u;\n        dim_col (v \\<Otimes> w) = dim_col u; dim_col u = 1\\<rbrakk>\n       \\<Longrightarrow> (v \\<Otimes> w) $$ (i, j) = u $$ (i, j)", "thus \"(v \\<Otimes> w) $$ (i, j) = u $$ (i,j)\""], ["proof (prove)\nusing this:\n  (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ i =\n  Matrix.vec 4\n   (\\<lambda>i.\n       if i = 0 then Matrix.col v 0 $ 0 * Matrix.col w 0 $ 0\n       else if i = 3 then Matrix.col v 0 $ 1 * Matrix.col w 0 $ 1\n            else if i = 1 then Matrix.col v 0 $ 0 * Matrix.col w 0 $ 1\n                 else Matrix.col v 0 $ 1 * Matrix.col w 0 $ 0) $\n  i\n\ngoal (1 subgoal):\n 1. (v \\<Otimes> w) $$ (i, j) = u $$ (i, j)", "using u_def a1 a2 assms state_def"], ["proof (prove)\nusing this:\n  (Matrix.col v 0 \\<otimes> Matrix.col w 0) $ i =\n  Matrix.vec 4\n   (\\<lambda>i.\n       if i = 0 then Matrix.col v 0 $ 0 * Matrix.col w 0 $ 0\n       else if i = 3 then Matrix.col v 0 $ 1 * Matrix.col w 0 $ 1\n            else if i = 1 then Matrix.col v 0 $ 0 * Matrix.col w 0 $ 1\n                 else Matrix.col v 0 $ 1 * Matrix.col w 0 $ 0) $\n  i\n  u =\n  Matrix.mat 4 1\n   (\\<lambda>(i, j).\n       if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n       else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n            else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                 else v $$ (1, 0) * w $$ (0, 0))\n  i < dim_row u\n  j < dim_col u\n  state 1 v\n  state 1 w\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n\ngoal (1 subgoal):\n 1. (v \\<Otimes> w) $$ (i, j) = u $$ (i, j)", "by simp"], ["proof (state)\nthis:\n  (v \\<Otimes> w) $$ (i, j) = u $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?i < dim_row u; ?j < dim_col u\\<rbrakk>\n  \\<Longrightarrow> (v \\<Otimes> w) $$ (?i, ?j) = u $$ (?i, ?j)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mat_tensor_prod_2_bis:\n  assumes \"state 1 v\" and \"state 1 w\"\n  shows \"v \\<Otimes> w = |Matrix.vec 4 (\\<lambda>i. if i = 0 then v $$ (0,0) * w $$ (0,0) else \n                                          if i = 3 then v $$ (1,0) * w $$ (1,0) else\n                                            if i = 1 then v $$ (0,0) * w $$ (1,0) else \n                                              v $$ (1,0) * w $$ (0,0))\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<Otimes> w =\n    |Matrix.vec 4\n      (\\<lambda>i.\n          if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n          else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n               else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                    else v $$ (1, 0) * w $$ (0, 0))\\<rangle>", "using assms ket_vec_def mat_tensor_prod_2"], ["proof (prove)\nusing this:\n  state 1 v\n  state 1 w\n  |?v\\<rangle> \\<equiv> Matrix.mat (dim_vec ?v) 1 (\\<lambda>(i, j). ?v $ i)\n  \\<lbrakk>state 1 ?v; state 1 ?w\\<rbrakk>\n  \\<Longrightarrow> ?v \\<Otimes> ?w =\n                    Matrix.mat 4 1\n                     (\\<lambda>(i, j).\n                         if i = 0 then ?v $$ (0, 0) * ?w $$ (0, 0)\n                         else if i = 3 then ?v $$ (1, 0) * ?w $$ (1, 0)\n                              else if i = 1 then ?v $$ (0, 0) * ?w $$ (1, 0)\n                                   else ?v $$ (1, 0) * ?w $$ (0, 0))\n\ngoal (1 subgoal):\n 1. v \\<Otimes> w =\n    |Matrix.vec 4\n      (\\<lambda>i.\n          if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n          else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n               else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                    else v $$ (1, 0) * w $$ (0, 0))\\<rangle>", "by(simp add: mat_eq_iff)"], ["", "lemma eq_ket_vec:\n  fixes u v:: \"complex Matrix.vec\"\n  assumes \"u = v\"\n  shows \"|u\\<rangle> = |v\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |u\\<rangle> = |v\\<rangle>", "using assms"], ["proof (prove)\nusing this:\n  u = v\n\ngoal (1 subgoal):\n 1. |u\\<rangle> = |v\\<rangle>", "by simp"], ["", "lemma mat_tensor_ket_vec:\n  assumes \"state 1 v\" and \"state 1 w\"\n  shows \"v \\<Otimes> w = |(Matrix.col v 0) \\<otimes> (Matrix.col w 0)\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<Otimes> w = |Matrix.col v 0 \\<otimes> Matrix.col w 0\\<rangle>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. v \\<Otimes> w = |Matrix.col v 0 \\<otimes> Matrix.col w 0\\<rangle>", "have \"v \\<Otimes> w = |Matrix.col v 0\\<rangle> \\<Otimes> |Matrix.col w 0\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<Otimes> w =\n    |Matrix.col v 0\\<rangle> \\<Otimes> |Matrix.col w 0\\<rangle>", "using assms state_def"], ["proof (prove)\nusing this:\n  state 1 v\n  state 1 w\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n\ngoal (1 subgoal):\n 1. v \\<Otimes> w =\n    |Matrix.col v 0\\<rangle> \\<Otimes> |Matrix.col w 0\\<rangle>", "by simp"], ["proof (state)\nthis:\n  v \\<Otimes> w =\n  |Matrix.col v 0\\<rangle> \\<Otimes> |Matrix.col w 0\\<rangle>\n\ngoal (1 subgoal):\n 1. v \\<Otimes> w = |Matrix.col v 0 \\<otimes> Matrix.col w 0\\<rangle>", "also"], ["proof (state)\nthis:\n  v \\<Otimes> w =\n  |Matrix.col v 0\\<rangle> \\<Otimes> |Matrix.col w 0\\<rangle>\n\ngoal (1 subgoal):\n 1. v \\<Otimes> w = |Matrix.col v 0 \\<otimes> Matrix.col w 0\\<rangle>", "have \"\\<dots> = \n|Matrix.vec 4 (\\<lambda>i. if i = 0 then |Matrix.col v 0\\<rangle> $$ (0,0) * |Matrix.col w 0\\<rangle> $$ (0,0) else \n                                          if i = 3 then |Matrix.col v 0\\<rangle> $$ (1,0) * |Matrix.col w 0\\<rangle> $$ (1,0) else\n                                            if i = 1 then |Matrix.col v 0\\<rangle> $$ (0,0) * |Matrix.col w 0\\<rangle> $$ (1,0) else \n                                              |Matrix.col v 0\\<rangle> $$ (1,0) * |Matrix.col w 0\\<rangle> $$ (0,0))\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |Matrix.col v 0\\<rangle> \\<Otimes> |Matrix.col w 0\\<rangle> =\n    |Matrix.vec 4\n      (\\<lambda>i.\n          if i = 0\n          then |Matrix.col v 0\\<rangle> $$ (0, 0) *\n               |Matrix.col w 0\\<rangle> $$ (0, 0)\n          else if i = 3\n               then |Matrix.col v 0\\<rangle> $$ (1, 0) *\n                    |Matrix.col w 0\\<rangle> $$ (1, 0)\n               else if i = 1\n                    then |Matrix.col v 0\\<rangle> $$ (0, 0) *\n                         |Matrix.col w 0\\<rangle> $$ (1, 0)\n                    else |Matrix.col v 0\\<rangle> $$ (1, 0) *\n                         |Matrix.col w 0\\<rangle> $$ (0, 0))\\<rangle>", "using assms mat_tensor_prod_2_bis state_col_ket_vec"], ["proof (prove)\nusing this:\n  state 1 v\n  state 1 w\n  \\<lbrakk>state 1 ?v; state 1 ?w\\<rbrakk>\n  \\<Longrightarrow> ?v \\<Otimes> ?w =\n                    |Matrix.vec 4\n                      (\\<lambda>i.\n                          if i = 0 then ?v $$ (0, 0) * ?w $$ (0, 0)\n                          else if i = 3 then ?v $$ (1, 0) * ?w $$ (1, 0)\n                               else if i = 1\n                                    then ?v $$ (0, 0) * ?w $$ (1, 0)\n                                    else ?v $$ (1, 0) *\n   ?w $$ (0, 0))\\<rangle>\n  state 1 ?v \\<Longrightarrow> state 1 |Matrix.col ?v 0\\<rangle>\n\ngoal (1 subgoal):\n 1. |Matrix.col v 0\\<rangle> \\<Otimes> |Matrix.col w 0\\<rangle> =\n    |Matrix.vec 4\n      (\\<lambda>i.\n          if i = 0\n          then |Matrix.col v 0\\<rangle> $$ (0, 0) *\n               |Matrix.col w 0\\<rangle> $$ (0, 0)\n          else if i = 3\n               then |Matrix.col v 0\\<rangle> $$ (1, 0) *\n                    |Matrix.col w 0\\<rangle> $$ (1, 0)\n               else if i = 1\n                    then |Matrix.col v 0\\<rangle> $$ (0, 0) *\n                         |Matrix.col w 0\\<rangle> $$ (1, 0)\n                    else |Matrix.col v 0\\<rangle> $$ (1, 0) *\n                         |Matrix.col w 0\\<rangle> $$ (0, 0))\\<rangle>", "by simp"], ["proof (state)\nthis:\n  |Matrix.col v 0\\<rangle> \\<Otimes> |Matrix.col w 0\\<rangle> =\n  |Matrix.vec 4\n    (\\<lambda>i.\n        if i = 0\n        then |Matrix.col v 0\\<rangle> $$ (0, 0) *\n             |Matrix.col w 0\\<rangle> $$ (0, 0)\n        else if i = 3\n             then |Matrix.col v 0\\<rangle> $$ (1, 0) *\n                  |Matrix.col w 0\\<rangle> $$ (1, 0)\n             else if i = 1\n                  then |Matrix.col v 0\\<rangle> $$ (0, 0) *\n                       |Matrix.col w 0\\<rangle> $$ (1, 0)\n                  else |Matrix.col v 0\\<rangle> $$ (1, 0) *\n                       |Matrix.col w 0\\<rangle> $$ (0, 0))\\<rangle>\n\ngoal (1 subgoal):\n 1. v \\<Otimes> w = |Matrix.col v 0 \\<otimes> Matrix.col w 0\\<rangle>", "also"], ["proof (state)\nthis:\n  |Matrix.col v 0\\<rangle> \\<Otimes> |Matrix.col w 0\\<rangle> =\n  |Matrix.vec 4\n    (\\<lambda>i.\n        if i = 0\n        then |Matrix.col v 0\\<rangle> $$ (0, 0) *\n             |Matrix.col w 0\\<rangle> $$ (0, 0)\n        else if i = 3\n             then |Matrix.col v 0\\<rangle> $$ (1, 0) *\n                  |Matrix.col w 0\\<rangle> $$ (1, 0)\n             else if i = 1\n                  then |Matrix.col v 0\\<rangle> $$ (0, 0) *\n                       |Matrix.col w 0\\<rangle> $$ (1, 0)\n                  else |Matrix.col v 0\\<rangle> $$ (1, 0) *\n                       |Matrix.col w 0\\<rangle> $$ (0, 0))\\<rangle>\n\ngoal (1 subgoal):\n 1. v \\<Otimes> w = |Matrix.col v 0 \\<otimes> Matrix.col w 0\\<rangle>", "have \"\\<dots> = \n|Matrix.vec 4 (\\<lambda>i. if i = 0 then v $$ (0,0) * w $$ (0,0) else \n                                          if i = 3 then v $$ (1,0) * w $$ (1,0) else\n                                            if i = 1 then v $$ (0,0) * w $$ (1,0) else \n                                              v $$ (1,0) * w $$ (0,0))\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |Matrix.vec 4\n      (\\<lambda>i.\n          if i = 0\n          then |Matrix.col v 0\\<rangle> $$ (0, 0) *\n               |Matrix.col w 0\\<rangle> $$ (0, 0)\n          else if i = 3\n               then |Matrix.col v 0\\<rangle> $$ (1, 0) *\n                    |Matrix.col w 0\\<rangle> $$ (1, 0)\n               else if i = 1\n                    then |Matrix.col v 0\\<rangle> $$ (0, 0) *\n                         |Matrix.col w 0\\<rangle> $$ (1, 0)\n                    else |Matrix.col v 0\\<rangle> $$ (1, 0) *\n                         |Matrix.col w 0\\<rangle> $$ (0, 0))\\<rangle> =\n    |Matrix.vec 4\n      (\\<lambda>i.\n          if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n          else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n               else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                    else v $$ (1, 0) * w $$ (0, 0))\\<rangle>", "using assms mat_tensor_prod_2_bis calculation"], ["proof (prove)\nusing this:\n  state 1 v\n  state 1 w\n  \\<lbrakk>state 1 ?v; state 1 ?w\\<rbrakk>\n  \\<Longrightarrow> ?v \\<Otimes> ?w =\n                    |Matrix.vec 4\n                      (\\<lambda>i.\n                          if i = 0 then ?v $$ (0, 0) * ?w $$ (0, 0)\n                          else if i = 3 then ?v $$ (1, 0) * ?w $$ (1, 0)\n                               else if i = 1\n                                    then ?v $$ (0, 0) * ?w $$ (1, 0)\n                                    else ?v $$ (1, 0) *\n   ?w $$ (0, 0))\\<rangle>\n  v \\<Otimes> w =\n  |Matrix.vec 4\n    (\\<lambda>i.\n        if i = 0\n        then |Matrix.col v 0\\<rangle> $$ (0, 0) *\n             |Matrix.col w 0\\<rangle> $$ (0, 0)\n        else if i = 3\n             then |Matrix.col v 0\\<rangle> $$ (1, 0) *\n                  |Matrix.col w 0\\<rangle> $$ (1, 0)\n             else if i = 1\n                  then |Matrix.col v 0\\<rangle> $$ (0, 0) *\n                       |Matrix.col w 0\\<rangle> $$ (1, 0)\n                  else |Matrix.col v 0\\<rangle> $$ (1, 0) *\n                       |Matrix.col w 0\\<rangle> $$ (0, 0))\\<rangle>\n\ngoal (1 subgoal):\n 1. |Matrix.vec 4\n      (\\<lambda>i.\n          if i = 0\n          then |Matrix.col v 0\\<rangle> $$ (0, 0) *\n               |Matrix.col w 0\\<rangle> $$ (0, 0)\n          else if i = 3\n               then |Matrix.col v 0\\<rangle> $$ (1, 0) *\n                    |Matrix.col w 0\\<rangle> $$ (1, 0)\n               else if i = 1\n                    then |Matrix.col v 0\\<rangle> $$ (0, 0) *\n                         |Matrix.col w 0\\<rangle> $$ (1, 0)\n                    else |Matrix.col v 0\\<rangle> $$ (1, 0) *\n                         |Matrix.col w 0\\<rangle> $$ (0, 0))\\<rangle> =\n    |Matrix.vec 4\n      (\\<lambda>i.\n          if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n          else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n               else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                    else v $$ (1, 0) * w $$ (0, 0))\\<rangle>", "by auto"], ["proof (state)\nthis:\n  |Matrix.vec 4\n    (\\<lambda>i.\n        if i = 0\n        then |Matrix.col v 0\\<rangle> $$ (0, 0) *\n             |Matrix.col w 0\\<rangle> $$ (0, 0)\n        else if i = 3\n             then |Matrix.col v 0\\<rangle> $$ (1, 0) *\n                  |Matrix.col w 0\\<rangle> $$ (1, 0)\n             else if i = 1\n                  then |Matrix.col v 0\\<rangle> $$ (0, 0) *\n                       |Matrix.col w 0\\<rangle> $$ (1, 0)\n                  else |Matrix.col v 0\\<rangle> $$ (1, 0) *\n                       |Matrix.col w 0\\<rangle> $$ (0, 0))\\<rangle> =\n  |Matrix.vec 4\n    (\\<lambda>i.\n        if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n        else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n             else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                  else v $$ (1, 0) * w $$ (0, 0))\\<rangle>\n\ngoal (1 subgoal):\n 1. v \\<Otimes> w = |Matrix.col v 0 \\<otimes> Matrix.col w 0\\<rangle>", "also"], ["proof (state)\nthis:\n  |Matrix.vec 4\n    (\\<lambda>i.\n        if i = 0\n        then |Matrix.col v 0\\<rangle> $$ (0, 0) *\n             |Matrix.col w 0\\<rangle> $$ (0, 0)\n        else if i = 3\n             then |Matrix.col v 0\\<rangle> $$ (1, 0) *\n                  |Matrix.col w 0\\<rangle> $$ (1, 0)\n             else if i = 1\n                  then |Matrix.col v 0\\<rangle> $$ (0, 0) *\n                       |Matrix.col w 0\\<rangle> $$ (1, 0)\n                  else |Matrix.col v 0\\<rangle> $$ (1, 0) *\n                       |Matrix.col w 0\\<rangle> $$ (0, 0))\\<rangle> =\n  |Matrix.vec 4\n    (\\<lambda>i.\n        if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n        else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n             else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                  else v $$ (1, 0) * w $$ (0, 0))\\<rangle>\n\ngoal (1 subgoal):\n 1. v \\<Otimes> w = |Matrix.col v 0 \\<otimes> Matrix.col w 0\\<rangle>", "have \"\\<dots> = \n|Matrix.vec 4 (\\<lambda>i. if i = 0 then Matrix.col v 0 $ 0 * Matrix.col w 0 $ 0 else \n                                      if i = 3 then Matrix.col v 0 $ 1 * Matrix.col w 0 $ 1 else\n                                          if i = 1 then Matrix.col v 0 $ 0 * Matrix.col w 0 $ 1 else \n                                            Matrix.col v 0 $ 1 * Matrix.col w 0 $ 0)\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |Matrix.vec 4\n      (\\<lambda>i.\n          if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n          else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n               else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                    else v $$ (1, 0) * w $$ (0, 0))\\<rangle> =\n    |Matrix.vec 4\n      (\\<lambda>i.\n          if i = 0 then Matrix.col v 0 $ 0 * Matrix.col w 0 $ 0\n          else if i = 3 then Matrix.col v 0 $ 1 * Matrix.col w 0 $ 1\n               else if i = 1 then Matrix.col v 0 $ 0 * Matrix.col w 0 $ 1\n                    else Matrix.col v 0 $ 1 * Matrix.col w 0 $ 0)\\<rangle>", "apply(rule eq_ket_vec)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Matrix.vec 4\n     (\\<lambda>i.\n         if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n         else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n              else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                   else v $$ (1, 0) * w $$ (0, 0)) =\n    Matrix.vec 4\n     (\\<lambda>i.\n         if i = 0 then Matrix.col v 0 $ 0 * Matrix.col w 0 $ 0\n         else if i = 3 then Matrix.col v 0 $ 1 * Matrix.col w 0 $ 1\n              else if i = 1 then Matrix.col v 0 $ 0 * Matrix.col w 0 $ 1\n                   else Matrix.col v 0 $ 1 * Matrix.col w 0 $ 0)", "apply (rule eq_vecI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       i < dim_vec\n            (Matrix.vec 4\n              (\\<lambda>i.\n                  if i = 0 then Matrix.col v 0 $ 0 * Matrix.col w 0 $ 0\n                  else if i = 3 then Matrix.col v 0 $ 1 * Matrix.col w 0 $ 1\n                       else if i = 1\n                            then Matrix.col v 0 $ 0 * Matrix.col w 0 $ 1\n                            else Matrix.col v 0 $ 1 *\n                                 Matrix.col w 0 $ 0)) \\<Longrightarrow>\n       Matrix.vec 4\n        (\\<lambda>i.\n            if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n            else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n                 else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                      else v $$ (1, 0) * w $$ (0, 0)) $\n       i =\n       Matrix.vec 4\n        (\\<lambda>i.\n            if i = 0 then Matrix.col v 0 $ 0 * Matrix.col w 0 $ 0\n            else if i = 3 then Matrix.col v 0 $ 1 * Matrix.col w 0 $ 1\n                 else if i = 1 then Matrix.col v 0 $ 0 * Matrix.col w 0 $ 1\n                      else Matrix.col v 0 $ 1 * Matrix.col w 0 $ 0) $\n       i\n 2. dim_vec\n     (Matrix.vec 4\n       (\\<lambda>i.\n           if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n           else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n                else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                     else v $$ (1, 0) * w $$ (0, 0))) =\n    dim_vec\n     (Matrix.vec 4\n       (\\<lambda>i.\n           if i = 0 then Matrix.col v 0 $ 0 * Matrix.col w 0 $ 0\n           else if i = 3 then Matrix.col v 0 $ 1 * Matrix.col w 0 $ 1\n                else if i = 1 then Matrix.col v 0 $ 0 * Matrix.col w 0 $ 1\n                     else Matrix.col v 0 $ 1 * Matrix.col w 0 $ 0))", "using col_index_of_mat_col assms state_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>dim_col ?v = 1; ?i < dim_row ?v\\<rbrakk>\n  \\<Longrightarrow> Matrix.col ?v 0 $ ?i = ?v $$ (?i, 0)\n  state 1 v\n  state 1 w\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       i < dim_vec\n            (Matrix.vec 4\n              (\\<lambda>i.\n                  if i = 0 then Matrix.col v 0 $ 0 * Matrix.col w 0 $ 0\n                  else if i = 3 then Matrix.col v 0 $ 1 * Matrix.col w 0 $ 1\n                       else if i = 1\n                            then Matrix.col v 0 $ 0 * Matrix.col w 0 $ 1\n                            else Matrix.col v 0 $ 1 *\n                                 Matrix.col w 0 $ 0)) \\<Longrightarrow>\n       Matrix.vec 4\n        (\\<lambda>i.\n            if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n            else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n                 else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                      else v $$ (1, 0) * w $$ (0, 0)) $\n       i =\n       Matrix.vec 4\n        (\\<lambda>i.\n            if i = 0 then Matrix.col v 0 $ 0 * Matrix.col w 0 $ 0\n            else if i = 3 then Matrix.col v 0 $ 1 * Matrix.col w 0 $ 1\n                 else if i = 1 then Matrix.col v 0 $ 0 * Matrix.col w 0 $ 1\n                      else Matrix.col v 0 $ 1 * Matrix.col w 0 $ 0) $\n       i\n 2. dim_vec\n     (Matrix.vec 4\n       (\\<lambda>i.\n           if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n           else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n                else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                     else v $$ (1, 0) * w $$ (0, 0))) =\n    dim_vec\n     (Matrix.vec 4\n       (\\<lambda>i.\n           if i = 0 then Matrix.col v 0 $ 0 * Matrix.col w 0 $ 0\n           else if i = 3 then Matrix.col v 0 $ 1 * Matrix.col w 0 $ 1\n                else if i = 1 then Matrix.col v 0 $ 0 * Matrix.col w 0 $ 1\n                     else Matrix.col v 0 $ 1 * Matrix.col w 0 $ 0))", "by auto"], ["proof (state)\nthis:\n  |Matrix.vec 4\n    (\\<lambda>i.\n        if i = 0 then v $$ (0, 0) * w $$ (0, 0)\n        else if i = 3 then v $$ (1, 0) * w $$ (1, 0)\n             else if i = 1 then v $$ (0, 0) * w $$ (1, 0)\n                  else v $$ (1, 0) * w $$ (0, 0))\\<rangle> =\n  |Matrix.vec 4\n    (\\<lambda>i.\n        if i = 0 then Matrix.col v 0 $ 0 * Matrix.col w 0 $ 0\n        else if i = 3 then Matrix.col v 0 $ 1 * Matrix.col w 0 $ 1\n             else if i = 1 then Matrix.col v 0 $ 0 * Matrix.col w 0 $ 1\n                  else Matrix.col v 0 $ 1 * Matrix.col w 0 $ 0)\\<rangle>\n\ngoal (1 subgoal):\n 1. v \\<Otimes> w = |Matrix.col v 0 \\<otimes> Matrix.col w 0\\<rangle>", "finally"], ["proof (chain)\npicking this:\n  v \\<Otimes> w =\n  |Matrix.vec 4\n    (\\<lambda>i.\n        if i = 0 then Matrix.col v 0 $ 0 * Matrix.col w 0 $ 0\n        else if i = 3 then Matrix.col v 0 $ 1 * Matrix.col w 0 $ 1\n             else if i = 1 then Matrix.col v 0 $ 0 * Matrix.col w 0 $ 1\n                  else Matrix.col v 0 $ 1 * Matrix.col w 0 $ 0)\\<rangle>", "show ?thesis"], ["proof (prove)\nusing this:\n  v \\<Otimes> w =\n  |Matrix.vec 4\n    (\\<lambda>i.\n        if i = 0 then Matrix.col v 0 $ 0 * Matrix.col w 0 $ 0\n        else if i = 3 then Matrix.col v 0 $ 1 * Matrix.col w 0 $ 1\n             else if i = 1 then Matrix.col v 0 $ 0 * Matrix.col w 0 $ 1\n                  else Matrix.col v 0 $ 1 * Matrix.col w 0 $ 0)\\<rangle>\n\ngoal (1 subgoal):\n 1. v \\<Otimes> w = |Matrix.col v 0 \\<otimes> Matrix.col w 0\\<rangle>", "using vec_tensor_prod_2_bis assms state.state_to_state_qbit"], ["proof (prove)\nusing this:\n  v \\<Otimes> w =\n  |Matrix.vec 4\n    (\\<lambda>i.\n        if i = 0 then Matrix.col v 0 $ 0 * Matrix.col w 0 $ 0\n        else if i = 3 then Matrix.col v 0 $ 1 * Matrix.col w 0 $ 1\n             else if i = 1 then Matrix.col v 0 $ 0 * Matrix.col w 0 $ 1\n                  else Matrix.col v 0 $ 1 * Matrix.col w 0 $ 0)\\<rangle>\n  \\<lbrakk>?v \\<in> state_qbit 1; ?w \\<in> state_qbit 1\\<rbrakk>\n  \\<Longrightarrow> ?v \\<otimes> ?w =\n                    Matrix.vec 4\n                     (\\<lambda>i.\n                         if i = 0 then ?v $ 0 * ?w $ 0\n                         else if i = 3 then ?v $ 1 * ?w $ 1\n                              else if i = 1 then ?v $ 0 * ?w $ 1\n                                   else ?v $ 1 * ?w $ 0)\n  state 1 v\n  state 1 w\n  state ?n ?v \\<Longrightarrow> Matrix.col ?v 0 \\<in> state_qbit ?n\n\ngoal (1 subgoal):\n 1. v \\<Otimes> w = |Matrix.col v 0 \\<otimes> Matrix.col w 0\\<rangle>", "by presburger"], ["proof (state)\nthis:\n  v \\<Otimes> w = |Matrix.col v 0 \\<otimes> Matrix.col w 0\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The property of being a state (resp. a gate) is preserved by tensor product.\\<close>"], ["", "lemma tensor_state2 [simp]:\n  assumes \"state 1 u\" and \"state 1 v\"\n  shows \"state 2 (u \\<Otimes> v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. state 2 (u \\<Otimes> v)", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. dim_col (u \\<Otimes> v) = 1\n 2. dim_row (u \\<Otimes> v) = 2\\<^sup>2\n 3. \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1", "show \"dim_col (u \\<Otimes> v) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col (u \\<Otimes> v) = 1", "using assms dim_col_tensor_mat state.is_column"], ["proof (prove)\nusing this:\n  state 1 u\n  state 1 v\n  dim_col (?A \\<Otimes> ?B) = dim_col ?A * dim_col ?B\n  state ?n ?v \\<Longrightarrow> dim_col ?v = 1\n\ngoal (1 subgoal):\n 1. dim_col (u \\<Otimes> v) = 1", "by presburger"], ["proof (state)\nthis:\n  dim_col (u \\<Otimes> v) = 1\n\ngoal (2 subgoals):\n 1. dim_row (u \\<Otimes> v) = 2\\<^sup>2\n 2. \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1", "show \"dim_row (u \\<Otimes> v) = 2\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row (u \\<Otimes> v) = 2\\<^sup>2", "using assms dim_row_tensor_mat state.dim_row"], ["proof (prove)\nusing this:\n  state 1 u\n  state 1 v\n  dim_row (?A \\<Otimes> ?B) = dim_row ?A * dim_row ?B\n  state ?n ?v \\<Longrightarrow> dim_row ?v = 2 ^ ?n\n\ngoal (1 subgoal):\n 1. dim_row (u \\<Otimes> v) = 2\\<^sup>2", "by (metis (mono_tags, lifting) power2_eq_square power_one_right)"], ["proof (state)\nthis:\n  dim_row (u \\<Otimes> v) = 2\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1", "show \"\\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1", "define l where d0:\"l = [u $$ (0,0) * v $$ (0,0), u $$ (0,0) * v $$ (1,0), u $$ (1,0) * v $$ (0,0), u $$ (1,0) * v $$ (1,0)]\""], ["proof (state)\nthis:\n  l =\n  [u $$ (0, 0) * v $$ (0, 0), u $$ (0, 0) * v $$ (1, 0),\n   u $$ (1, 0) * v $$ (0, 0), u $$ (1, 0) * v $$ (1, 0)]\n\ngoal (1 subgoal):\n 1. \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1", "then"], ["proof (chain)\npicking this:\n  l =\n  [u $$ (0, 0) * v $$ (0, 0), u $$ (0, 0) * v $$ (1, 0),\n   u $$ (1, 0) * v $$ (0, 0), u $$ (1, 0) * v $$ (1, 0)]", "have f4:\"length l = 4\""], ["proof (prove)\nusing this:\n  l =\n  [u $$ (0, 0) * v $$ (0, 0), u $$ (0, 0) * v $$ (1, 0),\n   u $$ (1, 0) * v $$ (0, 0), u $$ (1, 0) * v $$ (1, 0)]\n\ngoal (1 subgoal):\n 1. length l = 4", "by simp"], ["proof (state)\nthis:\n  length l = 4\n\ngoal (1 subgoal):\n 1. \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1", "also"], ["proof (state)\nthis:\n  length l = 4\n\ngoal (1 subgoal):\n 1. \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1", "have \"u \\<Otimes> v = mat_of_cols_list 4 \n[[u $$ (0,0) * v $$ (0,0), u $$ (0,0) * v $$ (1,0), u $$ (1,0) * v $$ (0,0), u $$ (1,0) * v $$ (1,0)]]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<Otimes> v =\n    Tensor.mat_of_cols_list 4\n     [[u $$ (0, 0) * v $$ (0, 0), u $$ (0, 0) * v $$ (1, 0),\n       u $$ (1, 0) * v $$ (0, 0), u $$ (1, 0) * v $$ (1, 0)]]", "using assms"], ["proof (prove)\nusing this:\n  state 1 u\n  state 1 v\n\ngoal (1 subgoal):\n 1. u \\<Otimes> v =\n    Tensor.mat_of_cols_list 4\n     [[u $$ (0, 0) * v $$ (0, 0), u $$ (0, 0) * v $$ (1, 0),\n       u $$ (1, 0) * v $$ (0, 0), u $$ (1, 0) * v $$ (1, 0)]]", "by simp"], ["proof (state)\nthis:\n  u \\<Otimes> v =\n  Tensor.mat_of_cols_list 4\n   [[u $$ (0, 0) * v $$ (0, 0), u $$ (0, 0) * v $$ (1, 0),\n     u $$ (1, 0) * v $$ (0, 0), u $$ (1, 0) * v $$ (1, 0)]]\n\ngoal (1 subgoal):\n 1. \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1", "then"], ["proof (chain)\npicking this:\n  u \\<Otimes> v =\n  Tensor.mat_of_cols_list 4\n   [[u $$ (0, 0) * v $$ (0, 0), u $$ (0, 0) * v $$ (1, 0),\n     u $$ (1, 0) * v $$ (0, 0), u $$ (1, 0) * v $$ (1, 0)]]", "have \"Matrix.col (u \\<Otimes> v) 0 = vec_of_list [u $$ (0,0) * v $$ (0,0), u $$ (0,0) * v $$ (1,0), \nu $$ (1,0) * v $$ (0,0), u $$ (1,0) * v $$ (1,0)]\""], ["proof (prove)\nusing this:\n  u \\<Otimes> v =\n  Tensor.mat_of_cols_list 4\n   [[u $$ (0, 0) * v $$ (0, 0), u $$ (0, 0) * v $$ (1, 0),\n     u $$ (1, 0) * v $$ (0, 0), u $$ (1, 0) * v $$ (1, 0)]]\n\ngoal (1 subgoal):\n 1. Matrix.col (u \\<Otimes> v) 0 =\n    vec_of_list\n     [u $$ (0, 0) * v $$ (0, 0), u $$ (0, 0) * v $$ (1, 0),\n      u $$ (1, 0) * v $$ (0, 0), u $$ (1, 0) * v $$ (1, 0)]", "by (metis One_nat_def Suc_eq_plus1 add_Suc col_mat_of_cols_list list.size(3) list.size(4) \nnth_Cons_0 numeral_2_eq_2 numeral_Bit0 plus_1_eq_Suc vec_of_list_Cons zero_less_one_class.zero_less_one)"], ["proof (state)\nthis:\n  Matrix.col (u \\<Otimes> v) 0 =\n  vec_of_list\n   [u $$ (0, 0) * v $$ (0, 0), u $$ (0, 0) * v $$ (1, 0),\n    u $$ (1, 0) * v $$ (0, 0), u $$ (1, 0) * v $$ (1, 0)]\n\ngoal (1 subgoal):\n 1. \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1", "then"], ["proof (chain)\npicking this:\n  Matrix.col (u \\<Otimes> v) 0 =\n  vec_of_list\n   [u $$ (0, 0) * v $$ (0, 0), u $$ (0, 0) * v $$ (1, 0),\n    u $$ (1, 0) * v $$ (0, 0), u $$ (1, 0) * v $$ (1, 0)]", "have f5:\"\\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = sqrt(\\<Sum>i<4. (cmod (l ! i))\\<^sup>2)\""], ["proof (prove)\nusing this:\n  Matrix.col (u \\<Otimes> v) 0 =\n  vec_of_list\n   [u $$ (0, 0) * v $$ (0, 0), u $$ (0, 0) * v $$ (1, 0),\n    u $$ (1, 0) * v $$ (0, 0), u $$ (1, 0) * v $$ (1, 0)]\n\ngoal (1 subgoal):\n 1. \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> =\n    sqrt (\\<Sum>i<4. (cmod (l ! i))\\<^sup>2)", "by (metis d0 f4 One_nat_def cpx_length_of_vec_of_list d0 vec_of_list_Cons)"], ["proof (state)\nthis:\n  \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> =\n  sqrt (\\<Sum>i<4. (cmod (l ! i))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1", "also"], ["proof (state)\nthis:\n  \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> =\n  sqrt (\\<Sum>i<4. (cmod (l ! i))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1", "have \"\\<dots> = sqrt ((cmod (u $$ (0,0) * v $$ (0,0)))\\<^sup>2 + (cmod(u $$ (0,0) * v $$ (1,0)))\\<^sup>2 + \n(cmod(u $$ (1,0) * v $$ (0,0)))\\<^sup>2 + (cmod(u $$ (1,0) * v $$ (1,0)))\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (\\<Sum>i<4. (cmod (l ! i))\\<^sup>2) =\n    sqrt\n     ((cmod (u $$ (0, 0) * v $$ (0, 0)))\\<^sup>2 +\n      (cmod (u $$ (0, 0) * v $$ (1, 0)))\\<^sup>2 +\n      (cmod (u $$ (1, 0) * v $$ (0, 0)))\\<^sup>2 +\n      (cmod (u $$ (1, 0) * v $$ (1, 0)))\\<^sup>2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sqrt (\\<Sum>i<4. (cmod (l ! i))\\<^sup>2) =\n    sqrt\n     ((cmod (u $$ (0, 0) * v $$ (0, 0)))\\<^sup>2 +\n      (cmod (u $$ (0, 0) * v $$ (1, 0)))\\<^sup>2 +\n      (cmod (u $$ (1, 0) * v $$ (0, 0)))\\<^sup>2 +\n      (cmod (u $$ (1, 0) * v $$ (1, 0)))\\<^sup>2)", "have \"(\\<Sum>i<4. (cmod (l ! i))\\<^sup>2) = (cmod (l ! 0))\\<^sup>2 + (cmod (l ! 1))\\<^sup>2 + (cmod (l ! 2))\\<^sup>2 + \n(cmod (l ! 3))\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<4. (cmod (l ! i))\\<^sup>2) =\n    (cmod (l ! 0))\\<^sup>2 + (cmod (l ! 1))\\<^sup>2 +\n    (cmod (l ! 2))\\<^sup>2 +\n    (cmod (l ! 3))\\<^sup>2", "using sum_insert"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<notin> ?F; finite ?F\\<rbrakk>\n  \\<Longrightarrow> sum ?P (insert ?x ?F) = sum ?P ?F + ?P ?x\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<4. (cmod (l ! i))\\<^sup>2) =\n    (cmod (l ! 0))\\<^sup>2 + (cmod (l ! 1))\\<^sup>2 +\n    (cmod (l ! 2))\\<^sup>2 +\n    (cmod (l ! 3))\\<^sup>2", "by (smt One_nat_def empty_iff finite.emptyI finite.insertI insertE lessThan_0 lessThan_Suc \nnumeral_2_eq_2 numeral_3_eq_3 numeral_plus_one one_plus_numeral_commute plus_1_eq_Suc semiring_norm(2) \nsemiring_norm(8) sum.empty)"], ["proof (state)\nthis:\n  (\\<Sum>i<4. (cmod (l ! i))\\<^sup>2) =\n  (cmod (l ! 0))\\<^sup>2 + (cmod (l ! 1))\\<^sup>2 + (cmod (l ! 2))\\<^sup>2 +\n  (cmod (l ! 3))\\<^sup>2\n\ngoal (1 subgoal):\n 1. sqrt (\\<Sum>i<4. (cmod (l ! i))\\<^sup>2) =\n    sqrt\n     ((cmod (u $$ (0, 0) * v $$ (0, 0)))\\<^sup>2 +\n      (cmod (u $$ (0, 0) * v $$ (1, 0)))\\<^sup>2 +\n      (cmod (u $$ (1, 0) * v $$ (0, 0)))\\<^sup>2 +\n      (cmod (u $$ (1, 0) * v $$ (1, 0)))\\<^sup>2)", "also"], ["proof (state)\nthis:\n  (\\<Sum>i<4. (cmod (l ! i))\\<^sup>2) =\n  (cmod (l ! 0))\\<^sup>2 + (cmod (l ! 1))\\<^sup>2 + (cmod (l ! 2))\\<^sup>2 +\n  (cmod (l ! 3))\\<^sup>2\n\ngoal (1 subgoal):\n 1. sqrt (\\<Sum>i<4. (cmod (l ! i))\\<^sup>2) =\n    sqrt\n     ((cmod (u $$ (0, 0) * v $$ (0, 0)))\\<^sup>2 +\n      (cmod (u $$ (0, 0) * v $$ (1, 0)))\\<^sup>2 +\n      (cmod (u $$ (1, 0) * v $$ (0, 0)))\\<^sup>2 +\n      (cmod (u $$ (1, 0) * v $$ (1, 0)))\\<^sup>2)", "have \"\\<dots> = (cmod (u $$ (0,0) * v $$ (0,0)))\\<^sup>2 + (cmod(u $$ (0,0) * v $$ (1,0)))\\<^sup>2 + \n(cmod(u $$ (1,0) * v $$ (0,0)))\\<^sup>2 + (cmod(u $$ (1,0) * v $$ (1,0)))\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cmod (l ! 0))\\<^sup>2 + (cmod (l ! 1))\\<^sup>2 +\n    (cmod (l ! 2))\\<^sup>2 +\n    (cmod (l ! 3))\\<^sup>2 =\n    (cmod (u $$ (0, 0) * v $$ (0, 0)))\\<^sup>2 +\n    (cmod (u $$ (0, 0) * v $$ (1, 0)))\\<^sup>2 +\n    (cmod (u $$ (1, 0) * v $$ (0, 0)))\\<^sup>2 +\n    (cmod (u $$ (1, 0) * v $$ (1, 0)))\\<^sup>2", "using d0"], ["proof (prove)\nusing this:\n  l =\n  [u $$ (0, 0) * v $$ (0, 0), u $$ (0, 0) * v $$ (1, 0),\n   u $$ (1, 0) * v $$ (0, 0), u $$ (1, 0) * v $$ (1, 0)]\n\ngoal (1 subgoal):\n 1. (cmod (l ! 0))\\<^sup>2 + (cmod (l ! 1))\\<^sup>2 +\n    (cmod (l ! 2))\\<^sup>2 +\n    (cmod (l ! 3))\\<^sup>2 =\n    (cmod (u $$ (0, 0) * v $$ (0, 0)))\\<^sup>2 +\n    (cmod (u $$ (0, 0) * v $$ (1, 0)))\\<^sup>2 +\n    (cmod (u $$ (1, 0) * v $$ (0, 0)))\\<^sup>2 +\n    (cmod (u $$ (1, 0) * v $$ (1, 0)))\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  (cmod (l ! 0))\\<^sup>2 + (cmod (l ! 1))\\<^sup>2 + (cmod (l ! 2))\\<^sup>2 +\n  (cmod (l ! 3))\\<^sup>2 =\n  (cmod (u $$ (0, 0) * v $$ (0, 0)))\\<^sup>2 +\n  (cmod (u $$ (0, 0) * v $$ (1, 0)))\\<^sup>2 +\n  (cmod (u $$ (1, 0) * v $$ (0, 0)))\\<^sup>2 +\n  (cmod (u $$ (1, 0) * v $$ (1, 0)))\\<^sup>2\n\ngoal (1 subgoal):\n 1. sqrt (\\<Sum>i<4. (cmod (l ! i))\\<^sup>2) =\n    sqrt\n     ((cmod (u $$ (0, 0) * v $$ (0, 0)))\\<^sup>2 +\n      (cmod (u $$ (0, 0) * v $$ (1, 0)))\\<^sup>2 +\n      (cmod (u $$ (1, 0) * v $$ (0, 0)))\\<^sup>2 +\n      (cmod (u $$ (1, 0) * v $$ (1, 0)))\\<^sup>2)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>i<4. (cmod (l ! i))\\<^sup>2) =\n  (cmod (u $$ (0, 0) * v $$ (0, 0)))\\<^sup>2 +\n  (cmod (u $$ (0, 0) * v $$ (1, 0)))\\<^sup>2 +\n  (cmod (u $$ (1, 0) * v $$ (0, 0)))\\<^sup>2 +\n  (cmod (u $$ (1, 0) * v $$ (1, 0)))\\<^sup>2", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>i<4. (cmod (l ! i))\\<^sup>2) =\n  (cmod (u $$ (0, 0) * v $$ (0, 0)))\\<^sup>2 +\n  (cmod (u $$ (0, 0) * v $$ (1, 0)))\\<^sup>2 +\n  (cmod (u $$ (1, 0) * v $$ (0, 0)))\\<^sup>2 +\n  (cmod (u $$ (1, 0) * v $$ (1, 0)))\\<^sup>2\n\ngoal (1 subgoal):\n 1. sqrt (\\<Sum>i<4. (cmod (l ! i))\\<^sup>2) =\n    sqrt\n     ((cmod (u $$ (0, 0) * v $$ (0, 0)))\\<^sup>2 +\n      (cmod (u $$ (0, 0) * v $$ (1, 0)))\\<^sup>2 +\n      (cmod (u $$ (1, 0) * v $$ (0, 0)))\\<^sup>2 +\n      (cmod (u $$ (1, 0) * v $$ (1, 0)))\\<^sup>2)", "by(simp add: f5)"], ["proof (state)\nthis:\n  sqrt (\\<Sum>i<4. (cmod (l ! i))\\<^sup>2) =\n  sqrt\n   ((cmod (u $$ (0, 0) * v $$ (0, 0)))\\<^sup>2 +\n    (cmod (u $$ (0, 0) * v $$ (1, 0)))\\<^sup>2 +\n    (cmod (u $$ (1, 0) * v $$ (0, 0)))\\<^sup>2 +\n    (cmod (u $$ (1, 0) * v $$ (1, 0)))\\<^sup>2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sqrt (\\<Sum>i<4. (cmod (l ! i))\\<^sup>2) =\n  sqrt\n   ((cmod (u $$ (0, 0) * v $$ (0, 0)))\\<^sup>2 +\n    (cmod (u $$ (0, 0) * v $$ (1, 0)))\\<^sup>2 +\n    (cmod (u $$ (1, 0) * v $$ (0, 0)))\\<^sup>2 +\n    (cmod (u $$ (1, 0) * v $$ (1, 0)))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1", "moreover"], ["proof (state)\nthis:\n  sqrt (\\<Sum>i<4. (cmod (l ! i))\\<^sup>2) =\n  sqrt\n   ((cmod (u $$ (0, 0) * v $$ (0, 0)))\\<^sup>2 +\n    (cmod (u $$ (0, 0) * v $$ (1, 0)))\\<^sup>2 +\n    (cmod (u $$ (1, 0) * v $$ (0, 0)))\\<^sup>2 +\n    (cmod (u $$ (1, 0) * v $$ (1, 0)))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1", "have \"\\<dots> = \nsqrt ((cmod (u $$ (0,0)))\\<^sup>2 * (cmod (v $$ (0,0)))\\<^sup>2 + (cmod(u $$ (0,0)))\\<^sup>2 * (cmod (v $$ (1,0)))\\<^sup>2 + \n(cmod(u $$ (1,0)))\\<^sup>2 * (cmod (v $$ (0,0)))\\<^sup>2 + (cmod(u $$ (1,0)))\\<^sup>2 * (cmod(v $$ (1,0)))\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt\n     ((cmod (u $$ (0, 0) * v $$ (0, 0)))\\<^sup>2 +\n      (cmod (u $$ (0, 0) * v $$ (1, 0)))\\<^sup>2 +\n      (cmod (u $$ (1, 0) * v $$ (0, 0)))\\<^sup>2 +\n      (cmod (u $$ (1, 0) * v $$ (1, 0)))\\<^sup>2) =\n    sqrt\n     ((cmod (u $$ (0, 0)))\\<^sup>2 * (cmod (v $$ (0, 0)))\\<^sup>2 +\n      (cmod (u $$ (0, 0)))\\<^sup>2 * (cmod (v $$ (1, 0)))\\<^sup>2 +\n      (cmod (u $$ (1, 0)))\\<^sup>2 * (cmod (v $$ (0, 0)))\\<^sup>2 +\n      (cmod (u $$ (1, 0)))\\<^sup>2 * (cmod (v $$ (1, 0)))\\<^sup>2)", "by (simp add: norm_mult power_mult_distrib)"], ["proof (state)\nthis:\n  sqrt\n   ((cmod (u $$ (0, 0) * v $$ (0, 0)))\\<^sup>2 +\n    (cmod (u $$ (0, 0) * v $$ (1, 0)))\\<^sup>2 +\n    (cmod (u $$ (1, 0) * v $$ (0, 0)))\\<^sup>2 +\n    (cmod (u $$ (1, 0) * v $$ (1, 0)))\\<^sup>2) =\n  sqrt\n   ((cmod (u $$ (0, 0)))\\<^sup>2 * (cmod (v $$ (0, 0)))\\<^sup>2 +\n    (cmod (u $$ (0, 0)))\\<^sup>2 * (cmod (v $$ (1, 0)))\\<^sup>2 +\n    (cmod (u $$ (1, 0)))\\<^sup>2 * (cmod (v $$ (0, 0)))\\<^sup>2 +\n    (cmod (u $$ (1, 0)))\\<^sup>2 * (cmod (v $$ (1, 0)))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1", "moreover"], ["proof (state)\nthis:\n  sqrt\n   ((cmod (u $$ (0, 0) * v $$ (0, 0)))\\<^sup>2 +\n    (cmod (u $$ (0, 0) * v $$ (1, 0)))\\<^sup>2 +\n    (cmod (u $$ (1, 0) * v $$ (0, 0)))\\<^sup>2 +\n    (cmod (u $$ (1, 0) * v $$ (1, 0)))\\<^sup>2) =\n  sqrt\n   ((cmod (u $$ (0, 0)))\\<^sup>2 * (cmod (v $$ (0, 0)))\\<^sup>2 +\n    (cmod (u $$ (0, 0)))\\<^sup>2 * (cmod (v $$ (1, 0)))\\<^sup>2 +\n    (cmod (u $$ (1, 0)))\\<^sup>2 * (cmod (v $$ (0, 0)))\\<^sup>2 +\n    (cmod (u $$ (1, 0)))\\<^sup>2 * (cmod (v $$ (1, 0)))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1", "have \"\\<dots> = sqrt ((((cmod(u $$ (0,0)))\\<^sup>2 + (cmod(u $$ (1,0)))\\<^sup>2)) * \n(((cmod(v $$ (0,0)))\\<^sup>2 + (cmod(v $$ (1,0)))\\<^sup>2)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt\n     ((cmod (u $$ (0, 0)))\\<^sup>2 * (cmod (v $$ (0, 0)))\\<^sup>2 +\n      (cmod (u $$ (0, 0)))\\<^sup>2 * (cmod (v $$ (1, 0)))\\<^sup>2 +\n      (cmod (u $$ (1, 0)))\\<^sup>2 * (cmod (v $$ (0, 0)))\\<^sup>2 +\n      (cmod (u $$ (1, 0)))\\<^sup>2 * (cmod (v $$ (1, 0)))\\<^sup>2) =\n    sqrt\n     (((cmod (u $$ (0, 0)))\\<^sup>2 + (cmod (u $$ (1, 0)))\\<^sup>2) *\n      ((cmod (v $$ (0, 0)))\\<^sup>2 + (cmod (v $$ (1, 0)))\\<^sup>2))", "by (simp add: distrib_left mult.commute)"], ["proof (state)\nthis:\n  sqrt\n   ((cmod (u $$ (0, 0)))\\<^sup>2 * (cmod (v $$ (0, 0)))\\<^sup>2 +\n    (cmod (u $$ (0, 0)))\\<^sup>2 * (cmod (v $$ (1, 0)))\\<^sup>2 +\n    (cmod (u $$ (1, 0)))\\<^sup>2 * (cmod (v $$ (0, 0)))\\<^sup>2 +\n    (cmod (u $$ (1, 0)))\\<^sup>2 * (cmod (v $$ (1, 0)))\\<^sup>2) =\n  sqrt\n   (((cmod (u $$ (0, 0)))\\<^sup>2 + (cmod (u $$ (1, 0)))\\<^sup>2) *\n    ((cmod (v $$ (0, 0)))\\<^sup>2 + (cmod (v $$ (1, 0)))\\<^sup>2))\n\ngoal (1 subgoal):\n 1. \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1", "ultimately"], ["proof (chain)\npicking this:\n  \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> =\n  sqrt (\\<Sum>i<length l. (cmod (l ! i))\\<^sup>2)\n  sqrt (\\<Sum>i<4. (cmod (l ! i))\\<^sup>2) =\n  sqrt\n   ((cmod (u $$ (0, 0) * v $$ (0, 0)))\\<^sup>2 +\n    (cmod (u $$ (0, 0) * v $$ (1, 0)))\\<^sup>2 +\n    (cmod (u $$ (1, 0) * v $$ (0, 0)))\\<^sup>2 +\n    (cmod (u $$ (1, 0) * v $$ (1, 0)))\\<^sup>2)\n  sqrt\n   ((cmod (u $$ (0, 0) * v $$ (0, 0)))\\<^sup>2 +\n    (cmod (u $$ (0, 0) * v $$ (1, 0)))\\<^sup>2 +\n    (cmod (u $$ (1, 0) * v $$ (0, 0)))\\<^sup>2 +\n    (cmod (u $$ (1, 0) * v $$ (1, 0)))\\<^sup>2) =\n  sqrt\n   ((cmod (u $$ (0, 0)))\\<^sup>2 * (cmod (v $$ (0, 0)))\\<^sup>2 +\n    (cmod (u $$ (0, 0)))\\<^sup>2 * (cmod (v $$ (1, 0)))\\<^sup>2 +\n    (cmod (u $$ (1, 0)))\\<^sup>2 * (cmod (v $$ (0, 0)))\\<^sup>2 +\n    (cmod (u $$ (1, 0)))\\<^sup>2 * (cmod (v $$ (1, 0)))\\<^sup>2)\n  sqrt\n   ((cmod (u $$ (0, 0)))\\<^sup>2 * (cmod (v $$ (0, 0)))\\<^sup>2 +\n    (cmod (u $$ (0, 0)))\\<^sup>2 * (cmod (v $$ (1, 0)))\\<^sup>2 +\n    (cmod (u $$ (1, 0)))\\<^sup>2 * (cmod (v $$ (0, 0)))\\<^sup>2 +\n    (cmod (u $$ (1, 0)))\\<^sup>2 * (cmod (v $$ (1, 0)))\\<^sup>2) =\n  sqrt\n   (((cmod (u $$ (0, 0)))\\<^sup>2 + (cmod (u $$ (1, 0)))\\<^sup>2) *\n    ((cmod (v $$ (0, 0)))\\<^sup>2 + (cmod (v $$ (1, 0)))\\<^sup>2))", "have f6:\"\\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel>\\<^sup>2 = (((cmod(u $$ (0,0)))\\<^sup>2 + (cmod(u $$ (1,0)))\\<^sup>2)) * \n(((cmod(v $$ (0,0)))\\<^sup>2 + (cmod(v $$ (1,0)))\\<^sup>2))\""], ["proof (prove)\nusing this:\n  \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> =\n  sqrt (\\<Sum>i<length l. (cmod (l ! i))\\<^sup>2)\n  sqrt (\\<Sum>i<4. (cmod (l ! i))\\<^sup>2) =\n  sqrt\n   ((cmod (u $$ (0, 0) * v $$ (0, 0)))\\<^sup>2 +\n    (cmod (u $$ (0, 0) * v $$ (1, 0)))\\<^sup>2 +\n    (cmod (u $$ (1, 0) * v $$ (0, 0)))\\<^sup>2 +\n    (cmod (u $$ (1, 0) * v $$ (1, 0)))\\<^sup>2)\n  sqrt\n   ((cmod (u $$ (0, 0) * v $$ (0, 0)))\\<^sup>2 +\n    (cmod (u $$ (0, 0) * v $$ (1, 0)))\\<^sup>2 +\n    (cmod (u $$ (1, 0) * v $$ (0, 0)))\\<^sup>2 +\n    (cmod (u $$ (1, 0) * v $$ (1, 0)))\\<^sup>2) =\n  sqrt\n   ((cmod (u $$ (0, 0)))\\<^sup>2 * (cmod (v $$ (0, 0)))\\<^sup>2 +\n    (cmod (u $$ (0, 0)))\\<^sup>2 * (cmod (v $$ (1, 0)))\\<^sup>2 +\n    (cmod (u $$ (1, 0)))\\<^sup>2 * (cmod (v $$ (0, 0)))\\<^sup>2 +\n    (cmod (u $$ (1, 0)))\\<^sup>2 * (cmod (v $$ (1, 0)))\\<^sup>2)\n  sqrt\n   ((cmod (u $$ (0, 0)))\\<^sup>2 * (cmod (v $$ (0, 0)))\\<^sup>2 +\n    (cmod (u $$ (0, 0)))\\<^sup>2 * (cmod (v $$ (1, 0)))\\<^sup>2 +\n    (cmod (u $$ (1, 0)))\\<^sup>2 * (cmod (v $$ (0, 0)))\\<^sup>2 +\n    (cmod (u $$ (1, 0)))\\<^sup>2 * (cmod (v $$ (1, 0)))\\<^sup>2) =\n  sqrt\n   (((cmod (u $$ (0, 0)))\\<^sup>2 + (cmod (u $$ (1, 0)))\\<^sup>2) *\n    ((cmod (v $$ (0, 0)))\\<^sup>2 + (cmod (v $$ (1, 0)))\\<^sup>2))\n\ngoal (1 subgoal):\n 1. \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel>\\<^sup>2 =\n    ((cmod (u $$ (0, 0)))\\<^sup>2 + (cmod (u $$ (1, 0)))\\<^sup>2) *\n    ((cmod (v $$ (0, 0)))\\<^sup>2 + (cmod (v $$ (1, 0)))\\<^sup>2)", "by (simp add: f4)"], ["proof (state)\nthis:\n  \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel>\\<^sup>2 =\n  ((cmod (u $$ (0, 0)))\\<^sup>2 + (cmod (u $$ (1, 0)))\\<^sup>2) *\n  ((cmod (v $$ (0, 0)))\\<^sup>2 + (cmod (v $$ (1, 0)))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1", "also"], ["proof (state)\nthis:\n  \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel>\\<^sup>2 =\n  ((cmod (u $$ (0, 0)))\\<^sup>2 + (cmod (u $$ (1, 0)))\\<^sup>2) *\n  ((cmod (v $$ (0, 0)))\\<^sup>2 + (cmod (v $$ (1, 0)))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1", "have f7:\"\\<dots> = (\\<Sum>i< 2. (cmod (u $$ (i,0)))\\<^sup>2) * (\\<Sum>i<2. (cmod (v $$ (i,0)))\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((cmod (u $$ (0, 0)))\\<^sup>2 + (cmod (u $$ (1, 0)))\\<^sup>2) *\n    ((cmod (v $$ (0, 0)))\\<^sup>2 + (cmod (v $$ (1, 0)))\\<^sup>2) =\n    (\\<Sum>i<2. (cmod (u $$ (i, 0)))\\<^sup>2) *\n    (\\<Sum>i<2. (cmod (v $$ (i, 0)))\\<^sup>2)", "by (simp add: numeral_2_eq_2)"], ["proof (state)\nthis:\n  ((cmod (u $$ (0, 0)))\\<^sup>2 + (cmod (u $$ (1, 0)))\\<^sup>2) *\n  ((cmod (v $$ (0, 0)))\\<^sup>2 + (cmod (v $$ (1, 0)))\\<^sup>2) =\n  (\\<Sum>i<2. (cmod (u $$ (i, 0)))\\<^sup>2) *\n  (\\<Sum>i<2. (cmod (v $$ (i, 0)))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1", "also"], ["proof (state)\nthis:\n  ((cmod (u $$ (0, 0)))\\<^sup>2 + (cmod (u $$ (1, 0)))\\<^sup>2) *\n  ((cmod (v $$ (0, 0)))\\<^sup>2 + (cmod (v $$ (1, 0)))\\<^sup>2) =\n  (\\<Sum>i<2. (cmod (u $$ (i, 0)))\\<^sup>2) *\n  (\\<Sum>i<2. (cmod (v $$ (i, 0)))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1", "have f8:\"\\<dots> = (\\<Sum>i< 2.(cmod (Matrix.col u 0 $ i))\\<^sup>2) * (\\<Sum>i<2.(cmod (Matrix.col v 0 $ i))\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<2. (cmod (u $$ (i, 0)))\\<^sup>2) *\n    (\\<Sum>i<2. (cmod (v $$ (i, 0)))\\<^sup>2) =\n    (\\<Sum>i<2. (cmod (Matrix.col u 0 $ i))\\<^sup>2) *\n    (\\<Sum>i<2. (cmod (Matrix.col v 0 $ i))\\<^sup>2)", "using assms index_col state_def"], ["proof (prove)\nusing this:\n  state 1 u\n  state 1 v\n  \\<lbrakk>?i < dim_row ?A; ?j < dim_col ?A\\<rbrakk>\n  \\<Longrightarrow> Matrix.col ?A ?j $ ?i = ?A $$ (?i, ?j)\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<2. (cmod (u $$ (i, 0)))\\<^sup>2) *\n    (\\<Sum>i<2. (cmod (v $$ (i, 0)))\\<^sup>2) =\n    (\\<Sum>i<2. (cmod (Matrix.col u 0 $ i))\\<^sup>2) *\n    (\\<Sum>i<2. (cmod (Matrix.col v 0 $ i))\\<^sup>2)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>i<2. (cmod (u $$ (i, 0)))\\<^sup>2) *\n  (\\<Sum>i<2. (cmod (v $$ (i, 0)))\\<^sup>2) =\n  (\\<Sum>i<2. (cmod (Matrix.col u 0 $ i))\\<^sup>2) *\n  (\\<Sum>i<2. (cmod (Matrix.col v 0 $ i))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1", "finally"], ["proof (chain)\npicking this:\n  \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel>\\<^sup>2 =\n  (\\<Sum>i<2. (cmod (Matrix.col u 0 $ i))\\<^sup>2) *\n  (\\<Sum>i<2. (cmod (Matrix.col v 0 $ i))\\<^sup>2)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel>\\<^sup>2 =\n  (\\<Sum>i<2. (cmod (Matrix.col u 0 $ i))\\<^sup>2) *\n  (\\<Sum>i<2. (cmod (Matrix.col v 0 $ i))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel>\\<^sup>2 =\n    (\\<Sum>i<2. (cmod (Matrix.col u 0 $ i))\\<^sup>2) *\n    (\\<Sum>i<2. (cmod (Matrix.col v 0 $ i))\\<^sup>2) \\<Longrightarrow>\n    \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1", "have f1:\"(\\<Sum>i< 2.(cmod (Matrix.col u 0 $ i))\\<^sup>2) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<2. (cmod (Matrix.col u 0 $ i))\\<^sup>2) = 1", "using assms(1) state_def cpx_vec_length_def"], ["proof (prove)\nusing this:\n  state 1 u\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n  \\<parallel>?v\\<parallel> \\<equiv>\n  sqrt (\\<Sum>i<dim_vec ?v. (cmod (?v $ i))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<2. (cmod (Matrix.col u 0 $ i))\\<^sup>2) = 1", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>i<2. (cmod (Matrix.col u 0 $ i))\\<^sup>2) = 1\n\ngoal (1 subgoal):\n 1. \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel>\\<^sup>2 =\n    (\\<Sum>i<2. (cmod (Matrix.col u 0 $ i))\\<^sup>2) *\n    (\\<Sum>i<2. (cmod (Matrix.col v 0 $ i))\\<^sup>2) \\<Longrightarrow>\n    \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1", "have f2:\"(\\<Sum>i< 2.(cmod (Matrix.col v 0 $ i))\\<^sup>2) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<2. (cmod (Matrix.col v 0 $ i))\\<^sup>2) = 1", "using assms(2) state_def cpx_vec_length_def"], ["proof (prove)\nusing this:\n  state 1 v\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n  \\<parallel>?v\\<parallel> \\<equiv>\n  sqrt (\\<Sum>i<dim_vec ?v. (cmod (?v $ i))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<2. (cmod (Matrix.col v 0 $ i))\\<^sup>2) = 1", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>i<2. (cmod (Matrix.col v 0 $ i))\\<^sup>2) = 1\n\ngoal (1 subgoal):\n 1. \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel>\\<^sup>2 =\n    (\\<Sum>i<2. (cmod (Matrix.col u 0 $ i))\\<^sup>2) *\n    (\\<Sum>i<2. (cmod (Matrix.col v 0 $ i))\\<^sup>2) \\<Longrightarrow>\n    \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>i<2. (cmod (Matrix.col v 0 $ i))\\<^sup>2) = 1\n\ngoal (1 subgoal):\n 1. \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1", "using f1 f8 f5 f6 f7"], ["proof (prove)\nusing this:\n  (\\<Sum>i<2. (cmod (Matrix.col v 0 $ i))\\<^sup>2) = 1\n  (\\<Sum>i<2. (cmod (Matrix.col u 0 $ i))\\<^sup>2) = 1\n  (\\<Sum>i<2. (cmod (u $$ (i, 0)))\\<^sup>2) *\n  (\\<Sum>i<2. (cmod (v $$ (i, 0)))\\<^sup>2) =\n  (\\<Sum>i<2. (cmod (Matrix.col u 0 $ i))\\<^sup>2) *\n  (\\<Sum>i<2. (cmod (Matrix.col v 0 $ i))\\<^sup>2)\n  \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> =\n  sqrt (\\<Sum>i<4. (cmod (l ! i))\\<^sup>2)\n  \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel>\\<^sup>2 =\n  ((cmod (u $$ (0, 0)))\\<^sup>2 + (cmod (u $$ (1, 0)))\\<^sup>2) *\n  ((cmod (v $$ (0, 0)))\\<^sup>2 + (cmod (v $$ (1, 0)))\\<^sup>2)\n  ((cmod (u $$ (0, 0)))\\<^sup>2 + (cmod (u $$ (1, 0)))\\<^sup>2) *\n  ((cmod (v $$ (0, 0)))\\<^sup>2 + (cmod (v $$ (1, 0)))\\<^sup>2) =\n  (\\<Sum>i<2. (cmod (u $$ (i, 0)))\\<^sup>2) *\n  (\\<Sum>i<2. (cmod (v $$ (i, 0)))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1", "by (simp add: \\<open>sqrt (\\<Sum>i<4. (cmod (l ! i))\\<^sup>2) = sqrt ((cmod (u $$ (0, 0) * v $$ (0, 0)))\\<^sup>2 + \n(cmod (u $$ (0, 0) * v $$ (1, 0)))\\<^sup>2 + (cmod (u $$ (1, 0) * v $$ (0, 0)))\\<^sup>2 + (cmod (u $$ (1, 0) * v $$ (1, 0)))\\<^sup>2)\\<close>)"], ["proof (state)\nthis:\n  \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_prod:\n  fixes f::\"nat \\<Rightarrow> complex\" and g::\"nat \\<Rightarrow> complex\"\n  shows \"(\\<Sum>i<a*b. f(i div b) * g(i mod b)) = (\\<Sum>i<a. f(i)) * (\\<Sum>j<b. g(j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<a * b. f (i div b) * g (i mod b)) = sum f {..<a} * sum g {..<b}", "proof (induction a)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<Sum>i<0 * b. f (i div b) * g (i mod b)) = sum f {..<0} * sum g {..<b}\n 2. \\<And>a.\n       (\\<Sum>i<a * b. f (i div b) * g (i mod b)) =\n       sum f {..<a} * sum g {..<b} \\<Longrightarrow>\n       (\\<Sum>i<Suc a * b. f (i div b) * g (i mod b)) =\n       sum f {..<Suc a} * sum g {..<b}", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. (\\<Sum>i<0 * b. f (i div b) * g (i mod b)) = sum f {..<0} * sum g {..<b}\n 2. \\<And>a.\n       (\\<Sum>i<a * b. f (i div b) * g (i mod b)) =\n       sum f {..<a} * sum g {..<b} \\<Longrightarrow>\n       (\\<Sum>i<Suc a * b. f (i div b) * g (i mod b)) =\n       sum f {..<Suc a} * sum g {..<b}", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<0 * b. f (i div b) * g (i mod b)) = sum f {..<0} * sum g {..<b}", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>i<0 * b. f (i div b) * g (i mod b)) = sum f {..<0} * sum g {..<b}\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       (\\<Sum>i<a * b. f (i div b) * g (i mod b)) =\n       sum f {..<a} * sum g {..<b} \\<Longrightarrow>\n       (\\<Sum>i<Suc a * b. f (i div b) * g (i mod b)) =\n       sum f {..<Suc a} * sum g {..<b}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       (\\<Sum>i<a * b. f (i div b) * g (i mod b)) =\n       sum f {..<a} * sum g {..<b} \\<Longrightarrow>\n       (\\<Sum>i<Suc a * b. f (i div b) * g (i mod b)) =\n       sum f {..<Suc a} * sum g {..<b}", "case (Suc a)"], ["proof (state)\nthis:\n  (\\<Sum>i<a * b. f (i div b) * g (i mod b)) = sum f {..<a} * sum g {..<b}\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       (\\<Sum>i<a * b. f (i div b) * g (i mod b)) =\n       sum f {..<a} * sum g {..<b} \\<Longrightarrow>\n       (\\<Sum>i<Suc a * b. f (i div b) * g (i mod b)) =\n       sum f {..<Suc a} * sum g {..<b}", "have \"(\\<Sum>i<(a+1)*b. f (i div b) * g (i mod b)) = (\\<Sum>i<a*b. f (i div b) * g (i mod b)) + \n(\\<Sum>i\\<in>{a*b..<(a+1)*b}. f (i div b) * g (i mod b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<(a + 1) * b. f (i div b) * g (i mod b)) =\n    (\\<Sum>i<a * b. f (i div b) * g (i mod b)) +\n    (\\<Sum>i = a * b..<(a + 1) * b. f (i div b) * g (i mod b))", "apply (auto simp: algebra_simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<b + a * b. f (i div b) * g (i mod b)) =\n    (\\<Sum>i<a * b. f (i div b) * g (i mod b)) +\n    (\\<Sum>i = a * b..<b + a * b. f (i div b) * g (i mod b))", "by (smt add.commute mult_Suc sum.lessThan_Suc sum.nat_group)"], ["proof (state)\nthis:\n  (\\<Sum>i<(a + 1) * b. f (i div b) * g (i mod b)) =\n  (\\<Sum>i<a * b. f (i div b) * g (i mod b)) +\n  (\\<Sum>i = a * b..<(a + 1) * b. f (i div b) * g (i mod b))\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       (\\<Sum>i<a * b. f (i div b) * g (i mod b)) =\n       sum f {..<a} * sum g {..<b} \\<Longrightarrow>\n       (\\<Sum>i<Suc a * b. f (i div b) * g (i mod b)) =\n       sum f {..<Suc a} * sum g {..<b}", "also"], ["proof (state)\nthis:\n  (\\<Sum>i<(a + 1) * b. f (i div b) * g (i mod b)) =\n  (\\<Sum>i<a * b. f (i div b) * g (i mod b)) +\n  (\\<Sum>i = a * b..<(a + 1) * b. f (i div b) * g (i mod b))\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       (\\<Sum>i<a * b. f (i div b) * g (i mod b)) =\n       sum f {..<a} * sum g {..<b} \\<Longrightarrow>\n       (\\<Sum>i<Suc a * b. f (i div b) * g (i mod b)) =\n       sum f {..<Suc a} * sum g {..<b}", "have \"\\<dots> = (\\<Sum>i<a. f(i)) * (\\<Sum>j<b. g(j)) + (\\<Sum>i\\<in>{a*b..<(a+1)*b}. f (i div b) * g (i mod b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<a * b. f (i div b) * g (i mod b)) +\n    (\\<Sum>i = a * b..<(a + 1) * b. f (i div b) * g (i mod b)) =\n    sum f {..<a} * sum g {..<b} +\n    (\\<Sum>i = a * b..<(a + 1) * b. f (i div b) * g (i mod b))", "by (simp add: Suc.IH)"], ["proof (state)\nthis:\n  (\\<Sum>i<a * b. f (i div b) * g (i mod b)) +\n  (\\<Sum>i = a * b..<(a + 1) * b. f (i div b) * g (i mod b)) =\n  sum f {..<a} * sum g {..<b} +\n  (\\<Sum>i = a * b..<(a + 1) * b. f (i div b) * g (i mod b))\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       (\\<Sum>i<a * b. f (i div b) * g (i mod b)) =\n       sum f {..<a} * sum g {..<b} \\<Longrightarrow>\n       (\\<Sum>i<Suc a * b. f (i div b) * g (i mod b)) =\n       sum f {..<Suc a} * sum g {..<b}", "also"], ["proof (state)\nthis:\n  (\\<Sum>i<a * b. f (i div b) * g (i mod b)) +\n  (\\<Sum>i = a * b..<(a + 1) * b. f (i div b) * g (i mod b)) =\n  sum f {..<a} * sum g {..<b} +\n  (\\<Sum>i = a * b..<(a + 1) * b. f (i div b) * g (i mod b))\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       (\\<Sum>i<a * b. f (i div b) * g (i mod b)) =\n       sum f {..<a} * sum g {..<b} \\<Longrightarrow>\n       (\\<Sum>i<Suc a * b. f (i div b) * g (i mod b)) =\n       sum f {..<Suc a} * sum g {..<b}", "have \"\\<dots> = (\\<Sum>i<a. f(i)) * (\\<Sum>j<b. g(j)) + (\\<Sum>i\\<in>{a*b..<(a+1)*b}. f (a) * g(i-a*b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f {..<a} * sum g {..<b} +\n    (\\<Sum>i = a * b..<(a + 1) * b. f (i div b) * g (i mod b)) =\n    sum f {..<a} * sum g {..<b} +\n    (\\<Sum>i = a * b..<(a + 1) * b. f a * g (i - a * b))", "by simp"], ["proof (state)\nthis:\n  sum f {..<a} * sum g {..<b} +\n  (\\<Sum>i = a * b..<(a + 1) * b. f (i div b) * g (i mod b)) =\n  sum f {..<a} * sum g {..<b} +\n  (\\<Sum>i = a * b..<(a + 1) * b. f a * g (i - a * b))\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       (\\<Sum>i<a * b. f (i div b) * g (i mod b)) =\n       sum f {..<a} * sum g {..<b} \\<Longrightarrow>\n       (\\<Sum>i<Suc a * b. f (i div b) * g (i mod b)) =\n       sum f {..<Suc a} * sum g {..<b}", "also"], ["proof (state)\nthis:\n  sum f {..<a} * sum g {..<b} +\n  (\\<Sum>i = a * b..<(a + 1) * b. f (i div b) * g (i mod b)) =\n  sum f {..<a} * sum g {..<b} +\n  (\\<Sum>i = a * b..<(a + 1) * b. f a * g (i - a * b))\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       (\\<Sum>i<a * b. f (i div b) * g (i mod b)) =\n       sum f {..<a} * sum g {..<b} \\<Longrightarrow>\n       (\\<Sum>i<Suc a * b. f (i div b) * g (i mod b)) =\n       sum f {..<Suc a} * sum g {..<b}", "have \"\\<dots> = (\\<Sum>i<a. f(i)) * (\\<Sum>j<b. g(j)) + f(a) * (\\<Sum>i\\<in>{a*b..<(a+1)*b}. g(i-a*b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f {..<a} * sum g {..<b} +\n    (\\<Sum>i = a * b..<(a + 1) * b. f a * g (i - a * b)) =\n    sum f {..<a} * sum g {..<b} +\n    f a * (\\<Sum>i = a * b..<(a + 1) * b. g (i - a * b))", "by(simp add: sum_distrib_left)"], ["proof (state)\nthis:\n  sum f {..<a} * sum g {..<b} +\n  (\\<Sum>i = a * b..<(a + 1) * b. f a * g (i - a * b)) =\n  sum f {..<a} * sum g {..<b} +\n  f a * (\\<Sum>i = a * b..<(a + 1) * b. g (i - a * b))\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       (\\<Sum>i<a * b. f (i div b) * g (i mod b)) =\n       sum f {..<a} * sum g {..<b} \\<Longrightarrow>\n       (\\<Sum>i<Suc a * b. f (i div b) * g (i mod b)) =\n       sum f {..<Suc a} * sum g {..<b}", "also"], ["proof (state)\nthis:\n  sum f {..<a} * sum g {..<b} +\n  (\\<Sum>i = a * b..<(a + 1) * b. f a * g (i - a * b)) =\n  sum f {..<a} * sum g {..<b} +\n  f a * (\\<Sum>i = a * b..<(a + 1) * b. g (i - a * b))\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       (\\<Sum>i<a * b. f (i div b) * g (i mod b)) =\n       sum f {..<a} * sum g {..<b} \\<Longrightarrow>\n       (\\<Sum>i<Suc a * b. f (i div b) * g (i mod b)) =\n       sum f {..<Suc a} * sum g {..<b}", "have \"\\<dots> = (\\<Sum>i<a. f(i)) * (\\<Sum>j<b. g(j)) + f(a) * (\\<Sum>i\\<in>{..<b}. g(i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f {..<a} * sum g {..<b} +\n    f a * (\\<Sum>i = a * b..<(a + 1) * b. g (i - a * b)) =\n    sum f {..<a} * sum g {..<b} + f a * sum g {..<b}", "using sum_of_index_diff[of \"g\" \"(a*b)\" \"b\"]"], ["proof (prove)\nusing this:\n  (\\<Sum>i = a * b..<a * b + b. g (i - a * b)) = sum g {..<b}\n\ngoal (1 subgoal):\n 1. sum f {..<a} * sum g {..<b} +\n    f a * (\\<Sum>i = a * b..<(a + 1) * b. g (i - a * b)) =\n    sum f {..<a} * sum g {..<b} + f a * sum g {..<b}", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  sum f {..<a} * sum g {..<b} +\n  f a * (\\<Sum>i = a * b..<(a + 1) * b. g (i - a * b)) =\n  sum f {..<a} * sum g {..<b} + f a * sum g {..<b}\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       (\\<Sum>i<a * b. f (i div b) * g (i mod b)) =\n       sum f {..<a} * sum g {..<b} \\<Longrightarrow>\n       (\\<Sum>i<Suc a * b. f (i div b) * g (i mod b)) =\n       sum f {..<Suc a} * sum g {..<b}", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Sum>i<(a + 1) * b. f (i div b) * g (i mod b)) =\n  sum f {..<a} * sum g {..<b} +\n  f a * (\\<Sum>i = a * b..<(a + 1) * b. g (i - a * b))\n  sum f {..<a} * sum g {..<b} +\n  f a * (\\<Sum>i = a * b..<(a + 1) * b. g (i - a * b)) =\n  sum f {..<a} * sum g {..<b} + f a * sum g {..<b}", "show ?case"], ["proof (prove)\nusing this:\n  (\\<Sum>i<(a + 1) * b. f (i div b) * g (i mod b)) =\n  sum f {..<a} * sum g {..<b} +\n  f a * (\\<Sum>i = a * b..<(a + 1) * b. g (i - a * b))\n  sum f {..<a} * sum g {..<b} +\n  f a * (\\<Sum>i = a * b..<(a + 1) * b. g (i - a * b)) =\n  sum f {..<a} * sum g {..<b} + f a * sum g {..<b}\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<Suc a * b. f (i div b) * g (i mod b)) =\n    sum f {..<Suc a} * sum g {..<b}", "by (simp add: semiring_normalization_rules(1))"], ["proof (state)\nthis:\n  (\\<Sum>i<Suc a * b. f (i div b) * g (i mod b)) =\n  sum f {..<Suc a} * sum g {..<b}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tensor_state [simp]:\n  assumes \"state m u\" and \"state n v\"\n  shows \"state (m + n) (u \\<Otimes> v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. state (m + n) (u \\<Otimes> v)", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. dim_col (u \\<Otimes> v) = 1\n 2. dim_row (u \\<Otimes> v) = 2 ^ (m + n)\n 3. \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1", "show c1:\"dim_col (u \\<Otimes> v) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col (u \\<Otimes> v) = 1", "using assms dim_col_tensor_mat state.is_column"], ["proof (prove)\nusing this:\n  state m u\n  state n v\n  dim_col (?A \\<Otimes> ?B) = dim_col ?A * dim_col ?B\n  state ?n ?v \\<Longrightarrow> dim_col ?v = 1\n\ngoal (1 subgoal):\n 1. dim_col (u \\<Otimes> v) = 1", "by presburger"], ["proof (state)\nthis:\n  dim_col (u \\<Otimes> v) = 1\n\ngoal (2 subgoals):\n 1. dim_row (u \\<Otimes> v) = 2 ^ (m + n)\n 2. \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1", "show c2:\"dim_row (u \\<Otimes> v) = 2^(m + n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row (u \\<Otimes> v) = 2 ^ (m + n)", "using assms dim_row_tensor_mat state.dim_row"], ["proof (prove)\nusing this:\n  state m u\n  state n v\n  dim_row (?A \\<Otimes> ?B) = dim_row ?A * dim_row ?B\n  state ?n ?v \\<Longrightarrow> dim_row ?v = 2 ^ ?n\n\ngoal (1 subgoal):\n 1. dim_row (u \\<Otimes> v) = 2 ^ (m + n)", "by (metis power_add)"], ["proof (state)\nthis:\n  dim_row (u \\<Otimes> v) = 2 ^ (m + n)\n\ngoal (1 subgoal):\n 1. \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1", "have \"(\\<Sum>i<2^(m + n). (cmod (u $$ (i div 2 ^ n, 0) * v $$ (i mod 2 ^ n, 0)))\\<^sup>2) = \n(\\<Sum>i<2^(m + n). (cmod (u $$ (i div 2 ^ n, 0)))\\<^sup>2 * (cmod (v $$ (i mod 2 ^ n, 0)))\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<2 ^ (m + n).\n        (cmod (u $$ (i div 2 ^ n, 0) * v $$ (i mod 2 ^ n, 0)))\\<^sup>2) =\n    (\\<Sum>i<2 ^ (m + n).\n        (cmod (u $$ (i div 2 ^ n, 0)))\\<^sup>2 *\n        (cmod (v $$ (i mod 2 ^ n, 0)))\\<^sup>2)", "by (simp add: sqr_of_cmod_of_prod)"], ["proof (state)\nthis:\n  (\\<Sum>i<2 ^ (m + n).\n      (cmod (u $$ (i div 2 ^ n, 0) * v $$ (i mod 2 ^ n, 0)))\\<^sup>2) =\n  (\\<Sum>i<2 ^ (m + n).\n      (cmod (u $$ (i div 2 ^ n, 0)))\\<^sup>2 *\n      (cmod (v $$ (i mod 2 ^ n, 0)))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1", "also"], ["proof (state)\nthis:\n  (\\<Sum>i<2 ^ (m + n).\n      (cmod (u $$ (i div 2 ^ n, 0) * v $$ (i mod 2 ^ n, 0)))\\<^sup>2) =\n  (\\<Sum>i<2 ^ (m + n).\n      (cmod (u $$ (i div 2 ^ n, 0)))\\<^sup>2 *\n      (cmod (v $$ (i mod 2 ^ n, 0)))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1", "have \"\\<dots> = (\\<Sum>i<2^m. (cmod (u $$ (i, 0)))\\<^sup>2) * (\\<Sum>i<2^n. (cmod (v $$ (i, 0)))\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<2 ^ (m + n).\n        (cmod (u $$ (i div 2 ^ n, 0)))\\<^sup>2 *\n        (cmod (v $$ (i mod 2 ^ n, 0)))\\<^sup>2) =\n    (\\<Sum>i<2 ^ m. (cmod (u $$ (i, 0)))\\<^sup>2) *\n    (\\<Sum>i<2 ^ n. (cmod (v $$ (i, 0)))\\<^sup>2)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>i<2 ^ (m + n).\n        (cmod (u $$ (i div 2 ^ n, 0)))\\<^sup>2 *\n        (cmod (v $$ (i mod 2 ^ n, 0)))\\<^sup>2) =\n    (\\<Sum>i<2 ^ m. (cmod (u $$ (i, 0)))\\<^sup>2) *\n    (\\<Sum>i<2 ^ n. (cmod (v $$ (i, 0)))\\<^sup>2)", "have \"\\<dots> = (\\<Sum>i<2^(m + n).complex_of_real((cmod (u $$ (i div 2^n,0)))\\<^sup>2) * complex_of_real((cmod (v $$ (i mod 2^n,0)))\\<^sup>2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real\n     (\\<Sum>i<2 ^ (m + n).\n         (cmod (u $$ (i div 2 ^ n, 0)))\\<^sup>2 *\n         (cmod (v $$ (i mod 2 ^ n, 0)))\\<^sup>2) =\n    (\\<Sum>i<2 ^ (m + n).\n        complex_of_real ((cmod (u $$ (i div 2 ^ n, 0)))\\<^sup>2) *\n        complex_of_real ((cmod (v $$ (i mod 2 ^ n, 0)))\\<^sup>2))", "by simp"], ["proof (state)\nthis:\n  complex_of_real\n   (\\<Sum>i<2 ^ (m + n).\n       (cmod (u $$ (i div 2 ^ n, 0)))\\<^sup>2 *\n       (cmod (v $$ (i mod 2 ^ n, 0)))\\<^sup>2) =\n  (\\<Sum>i<2 ^ (m + n).\n      complex_of_real ((cmod (u $$ (i div 2 ^ n, 0)))\\<^sup>2) *\n      complex_of_real ((cmod (v $$ (i mod 2 ^ n, 0)))\\<^sup>2))\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<2 ^ (m + n).\n        (cmod (u $$ (i div 2 ^ n, 0)))\\<^sup>2 *\n        (cmod (v $$ (i mod 2 ^ n, 0)))\\<^sup>2) =\n    (\\<Sum>i<2 ^ m. (cmod (u $$ (i, 0)))\\<^sup>2) *\n    (\\<Sum>i<2 ^ n. (cmod (v $$ (i, 0)))\\<^sup>2)", "moreover"], ["proof (state)\nthis:\n  complex_of_real\n   (\\<Sum>i<2 ^ (m + n).\n       (cmod (u $$ (i div 2 ^ n, 0)))\\<^sup>2 *\n       (cmod (v $$ (i mod 2 ^ n, 0)))\\<^sup>2) =\n  (\\<Sum>i<2 ^ (m + n).\n      complex_of_real ((cmod (u $$ (i div 2 ^ n, 0)))\\<^sup>2) *\n      complex_of_real ((cmod (v $$ (i mod 2 ^ n, 0)))\\<^sup>2))\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<2 ^ (m + n).\n        (cmod (u $$ (i div 2 ^ n, 0)))\\<^sup>2 *\n        (cmod (v $$ (i mod 2 ^ n, 0)))\\<^sup>2) =\n    (\\<Sum>i<2 ^ m. (cmod (u $$ (i, 0)))\\<^sup>2) *\n    (\\<Sum>i<2 ^ n. (cmod (v $$ (i, 0)))\\<^sup>2)", "have \"(\\<Sum>i<2^m. (cmod (u $$ (i, 0)))\\<^sup>2) = (\\<Sum>i<2^m. complex_of_real ((cmod (u $$ (i,0)))\\<^sup>2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (\\<Sum>i<2 ^ m. (cmod (u $$ (i, 0)))\\<^sup>2) =\n    (\\<Sum>i<2 ^ m. complex_of_real ((cmod (u $$ (i, 0)))\\<^sup>2))", "by simp"], ["proof (state)\nthis:\n  complex_of_real (\\<Sum>i<2 ^ m. (cmod (u $$ (i, 0)))\\<^sup>2) =\n  (\\<Sum>i<2 ^ m. complex_of_real ((cmod (u $$ (i, 0)))\\<^sup>2))\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<2 ^ (m + n).\n        (cmod (u $$ (i div 2 ^ n, 0)))\\<^sup>2 *\n        (cmod (v $$ (i mod 2 ^ n, 0)))\\<^sup>2) =\n    (\\<Sum>i<2 ^ m. (cmod (u $$ (i, 0)))\\<^sup>2) *\n    (\\<Sum>i<2 ^ n. (cmod (v $$ (i, 0)))\\<^sup>2)", "moreover"], ["proof (state)\nthis:\n  complex_of_real (\\<Sum>i<2 ^ m. (cmod (u $$ (i, 0)))\\<^sup>2) =\n  (\\<Sum>i<2 ^ m. complex_of_real ((cmod (u $$ (i, 0)))\\<^sup>2))\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<2 ^ (m + n).\n        (cmod (u $$ (i div 2 ^ n, 0)))\\<^sup>2 *\n        (cmod (v $$ (i mod 2 ^ n, 0)))\\<^sup>2) =\n    (\\<Sum>i<2 ^ m. (cmod (u $$ (i, 0)))\\<^sup>2) *\n    (\\<Sum>i<2 ^ n. (cmod (v $$ (i, 0)))\\<^sup>2)", "have \"(\\<Sum>i<2^n. (cmod (v $$ (i, 0)))\\<^sup>2) = (\\<Sum>i<2^n. complex_of_real ((cmod (v $$ (i, 0)))\\<^sup>2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (\\<Sum>i<2 ^ n. (cmod (v $$ (i, 0)))\\<^sup>2) =\n    (\\<Sum>i<2 ^ n. complex_of_real ((cmod (v $$ (i, 0)))\\<^sup>2))", "by simp"], ["proof (state)\nthis:\n  complex_of_real (\\<Sum>i<2 ^ n. (cmod (v $$ (i, 0)))\\<^sup>2) =\n  (\\<Sum>i<2 ^ n. complex_of_real ((cmod (v $$ (i, 0)))\\<^sup>2))\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<2 ^ (m + n).\n        (cmod (u $$ (i div 2 ^ n, 0)))\\<^sup>2 *\n        (cmod (v $$ (i mod 2 ^ n, 0)))\\<^sup>2) =\n    (\\<Sum>i<2 ^ m. (cmod (u $$ (i, 0)))\\<^sup>2) *\n    (\\<Sum>i<2 ^ n. (cmod (v $$ (i, 0)))\\<^sup>2)", "ultimately"], ["proof (chain)\npicking this:\n  complex_of_real\n   (\\<Sum>i<2 ^ (m + n).\n       (cmod (u $$ (i div 2 ^ n, 0)))\\<^sup>2 *\n       (cmod (v $$ (i mod 2 ^ n, 0)))\\<^sup>2) =\n  (\\<Sum>i<2 ^ (m + n).\n      complex_of_real ((cmod (u $$ (i div 2 ^ n, 0)))\\<^sup>2) *\n      complex_of_real ((cmod (v $$ (i mod 2 ^ n, 0)))\\<^sup>2))\n  complex_of_real (\\<Sum>i<2 ^ m. (cmod (u $$ (i, 0)))\\<^sup>2) =\n  (\\<Sum>i<2 ^ m. complex_of_real ((cmod (u $$ (i, 0)))\\<^sup>2))\n  complex_of_real (\\<Sum>i<2 ^ n. (cmod (v $$ (i, 0)))\\<^sup>2) =\n  (\\<Sum>i<2 ^ n. complex_of_real ((cmod (v $$ (i, 0)))\\<^sup>2))", "show ?thesis"], ["proof (prove)\nusing this:\n  complex_of_real\n   (\\<Sum>i<2 ^ (m + n).\n       (cmod (u $$ (i div 2 ^ n, 0)))\\<^sup>2 *\n       (cmod (v $$ (i mod 2 ^ n, 0)))\\<^sup>2) =\n  (\\<Sum>i<2 ^ (m + n).\n      complex_of_real ((cmod (u $$ (i div 2 ^ n, 0)))\\<^sup>2) *\n      complex_of_real ((cmod (v $$ (i mod 2 ^ n, 0)))\\<^sup>2))\n  complex_of_real (\\<Sum>i<2 ^ m. (cmod (u $$ (i, 0)))\\<^sup>2) =\n  (\\<Sum>i<2 ^ m. complex_of_real ((cmod (u $$ (i, 0)))\\<^sup>2))\n  complex_of_real (\\<Sum>i<2 ^ n. (cmod (v $$ (i, 0)))\\<^sup>2) =\n  (\\<Sum>i<2 ^ n. complex_of_real ((cmod (v $$ (i, 0)))\\<^sup>2))\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<2 ^ (m + n).\n        (cmod (u $$ (i div 2 ^ n, 0)))\\<^sup>2 *\n        (cmod (v $$ (i mod 2 ^ n, 0)))\\<^sup>2) =\n    (\\<Sum>i<2 ^ m. (cmod (u $$ (i, 0)))\\<^sup>2) *\n    (\\<Sum>i<2 ^ n. (cmod (v $$ (i, 0)))\\<^sup>2)", "using sum_prod[of \"\\<lambda>i. (cmod (u $$ (i , 0)))\\<^sup>2\" \"2^n\" \"\\<lambda>i. (cmod (v $$ (i , 0)))\\<^sup>2\" \"2^m\"]"], ["proof (prove)\nusing this:\n  complex_of_real\n   (\\<Sum>i<2 ^ (m + n).\n       (cmod (u $$ (i div 2 ^ n, 0)))\\<^sup>2 *\n       (cmod (v $$ (i mod 2 ^ n, 0)))\\<^sup>2) =\n  (\\<Sum>i<2 ^ (m + n).\n      complex_of_real ((cmod (u $$ (i div 2 ^ n, 0)))\\<^sup>2) *\n      complex_of_real ((cmod (v $$ (i mod 2 ^ n, 0)))\\<^sup>2))\n  complex_of_real (\\<Sum>i<2 ^ m. (cmod (u $$ (i, 0)))\\<^sup>2) =\n  (\\<Sum>i<2 ^ m. complex_of_real ((cmod (u $$ (i, 0)))\\<^sup>2))\n  complex_of_real (\\<Sum>i<2 ^ n. (cmod (v $$ (i, 0)))\\<^sup>2) =\n  (\\<Sum>i<2 ^ n. complex_of_real ((cmod (v $$ (i, 0)))\\<^sup>2))\n  (\\<Sum>i<2 ^ m * 2 ^ n.\n      complex_of_real ((cmod (u $$ (i div 2 ^ n, 0)))\\<^sup>2) *\n      complex_of_real ((cmod (v $$ (i mod 2 ^ n, 0)))\\<^sup>2)) =\n  (\\<Sum>i<2 ^ m. complex_of_real ((cmod (u $$ (i, 0)))\\<^sup>2)) *\n  (\\<Sum>j<2 ^ n. complex_of_real ((cmod (v $$ (j, 0)))\\<^sup>2))\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<2 ^ (m + n).\n        (cmod (u $$ (i div 2 ^ n, 0)))\\<^sup>2 *\n        (cmod (v $$ (i mod 2 ^ n, 0)))\\<^sup>2) =\n    (\\<Sum>i<2 ^ m. (cmod (u $$ (i, 0)))\\<^sup>2) *\n    (\\<Sum>i<2 ^ n. (cmod (v $$ (i, 0)))\\<^sup>2)", "by (smt of_real_eq_iff of_real_mult power_add)"], ["proof (state)\nthis:\n  (\\<Sum>i<2 ^ (m + n).\n      (cmod (u $$ (i div 2 ^ n, 0)))\\<^sup>2 *\n      (cmod (v $$ (i mod 2 ^ n, 0)))\\<^sup>2) =\n  (\\<Sum>i<2 ^ m. (cmod (u $$ (i, 0)))\\<^sup>2) *\n  (\\<Sum>i<2 ^ n. (cmod (v $$ (i, 0)))\\<^sup>2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>i<2 ^ (m + n).\n      (cmod (u $$ (i div 2 ^ n, 0)))\\<^sup>2 *\n      (cmod (v $$ (i mod 2 ^ n, 0)))\\<^sup>2) =\n  (\\<Sum>i<2 ^ m. (cmod (u $$ (i, 0)))\\<^sup>2) *\n  (\\<Sum>i<2 ^ n. (cmod (v $$ (i, 0)))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1", "also"], ["proof (state)\nthis:\n  (\\<Sum>i<2 ^ (m + n).\n      (cmod (u $$ (i div 2 ^ n, 0)))\\<^sup>2 *\n      (cmod (v $$ (i mod 2 ^ n, 0)))\\<^sup>2) =\n  (\\<Sum>i<2 ^ m. (cmod (u $$ (i, 0)))\\<^sup>2) *\n  (\\<Sum>i<2 ^ n. (cmod (v $$ (i, 0)))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1", "have \"\\<dots> = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<2 ^ m. (cmod (u $$ (i, 0)))\\<^sup>2) *\n    (\\<Sum>i<2 ^ n. (cmod (v $$ (i, 0)))\\<^sup>2) =\n    1", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>i<2 ^ m. (cmod (u $$ (i, 0)))\\<^sup>2) *\n    (\\<Sum>i<2 ^ n. (cmod (v $$ (i, 0)))\\<^sup>2) =\n    1", "have \"(\\<Sum>i<2^m. (cmod (u $$ (i, 0)))\\<^sup>2) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<2 ^ m. (cmod (u $$ (i, 0)))\\<^sup>2) = 1", "using assms(1) state_def cpx_vec_length_def"], ["proof (prove)\nusing this:\n  state m u\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n  \\<parallel>?v\\<parallel> \\<equiv>\n  sqrt (\\<Sum>i<dim_vec ?v. (cmod (?v $ i))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<2 ^ m. (cmod (u $$ (i, 0)))\\<^sup>2) = 1", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>i<2 ^ m. (cmod (u $$ (i, 0)))\\<^sup>2) = 1\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<2 ^ m. (cmod (u $$ (i, 0)))\\<^sup>2) *\n    (\\<Sum>i<2 ^ n. (cmod (v $$ (i, 0)))\\<^sup>2) =\n    1", "moreover"], ["proof (state)\nthis:\n  (\\<Sum>i<2 ^ m. (cmod (u $$ (i, 0)))\\<^sup>2) = 1\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<2 ^ m. (cmod (u $$ (i, 0)))\\<^sup>2) *\n    (\\<Sum>i<2 ^ n. (cmod (v $$ (i, 0)))\\<^sup>2) =\n    1", "have \"(\\<Sum>i<2^n. (cmod (v $$ (i, 0)))\\<^sup>2) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<2 ^ n. (cmod (v $$ (i, 0)))\\<^sup>2) = 1", "using assms(2) state_def cpx_vec_length_def"], ["proof (prove)\nusing this:\n  state n v\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n  \\<parallel>?v\\<parallel> \\<equiv>\n  sqrt (\\<Sum>i<dim_vec ?v. (cmod (?v $ i))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<2 ^ n. (cmod (v $$ (i, 0)))\\<^sup>2) = 1", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>i<2 ^ n. (cmod (v $$ (i, 0)))\\<^sup>2) = 1\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<2 ^ m. (cmod (u $$ (i, 0)))\\<^sup>2) *\n    (\\<Sum>i<2 ^ n. (cmod (v $$ (i, 0)))\\<^sup>2) =\n    1", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Sum>i<2 ^ m. (cmod (u $$ (i, 0)))\\<^sup>2) = 1\n  (\\<Sum>i<2 ^ n. (cmod (v $$ (i, 0)))\\<^sup>2) = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>i<2 ^ m. (cmod (u $$ (i, 0)))\\<^sup>2) = 1\n  (\\<Sum>i<2 ^ n. (cmod (v $$ (i, 0)))\\<^sup>2) = 1\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<2 ^ m. (cmod (u $$ (i, 0)))\\<^sup>2) *\n    (\\<Sum>i<2 ^ n. (cmod (v $$ (i, 0)))\\<^sup>2) =\n    1", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>i<2 ^ m. (cmod (u $$ (i, 0)))\\<^sup>2) *\n  (\\<Sum>i<2 ^ n. (cmod (v $$ (i, 0)))\\<^sup>2) =\n  1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>i<2 ^ m. (cmod (u $$ (i, 0)))\\<^sup>2) *\n  (\\<Sum>i<2 ^ n. (cmod (v $$ (i, 0)))\\<^sup>2) =\n  1\n\ngoal (1 subgoal):\n 1. \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Sum>i<2 ^ (m + n).\n      (cmod (u $$ (i div 2 ^ n, 0) * v $$ (i mod 2 ^ n, 0)))\\<^sup>2) =\n  (\\<Sum>i<2 ^ m. (cmod (u $$ (i, 0)))\\<^sup>2) *\n  (\\<Sum>i<2 ^ n. (cmod (v $$ (i, 0)))\\<^sup>2)\n  (\\<Sum>i<2 ^ m. (cmod (u $$ (i, 0)))\\<^sup>2) *\n  (\\<Sum>i<2 ^ n. (cmod (v $$ (i, 0)))\\<^sup>2) =\n  1", "show \"\\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1\""], ["proof (prove)\nusing this:\n  (\\<Sum>i<2 ^ (m + n).\n      (cmod (u $$ (i div 2 ^ n, 0) * v $$ (i mod 2 ^ n, 0)))\\<^sup>2) =\n  (\\<Sum>i<2 ^ m. (cmod (u $$ (i, 0)))\\<^sup>2) *\n  (\\<Sum>i<2 ^ n. (cmod (v $$ (i, 0)))\\<^sup>2)\n  (\\<Sum>i<2 ^ m. (cmod (u $$ (i, 0)))\\<^sup>2) *\n  (\\<Sum>i<2 ^ n. (cmod (v $$ (i, 0)))\\<^sup>2) =\n  1\n\ngoal (1 subgoal):\n 1. \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1", "using c1 c2 assms state_def"], ["proof (prove)\nusing this:\n  (\\<Sum>i<2 ^ (m + n).\n      (cmod (u $$ (i div 2 ^ n, 0) * v $$ (i mod 2 ^ n, 0)))\\<^sup>2) =\n  (\\<Sum>i<2 ^ m. (cmod (u $$ (i, 0)))\\<^sup>2) *\n  (\\<Sum>i<2 ^ n. (cmod (v $$ (i, 0)))\\<^sup>2)\n  (\\<Sum>i<2 ^ m. (cmod (u $$ (i, 0)))\\<^sup>2) *\n  (\\<Sum>i<2 ^ n. (cmod (v $$ (i, 0)))\\<^sup>2) =\n  1\n  dim_col (u \\<Otimes> v) = 1\n  dim_row (u \\<Otimes> v) = 2 ^ (m + n)\n  state m u\n  state n v\n  state ?n ?v \\<equiv>\n  dim_col ?v = 1 \\<and>\n  dim_row ?v = 2 ^ ?n \\<and> \\<parallel>Matrix.col ?v 0\\<parallel> = 1\n\ngoal (1 subgoal):\n 1. \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1", "by (auto simp add: cpx_vec_length_def)"], ["proof (state)\nthis:\n  \\<parallel>Matrix.col (u \\<Otimes> v) 0\\<parallel> = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dim_row_of_tensor_gate:\n  assumes \"gate m G1\" and \"gate n G2\"\n  shows \"dim_row (G1 \\<Otimes> G2) = 2^(m+n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row (G1 \\<Otimes> G2) = 2 ^ (m + n)", "using assms dim_row_tensor_mat gate.dim_row"], ["proof (prove)\nusing this:\n  gate m G1\n  gate n G2\n  dim_row (?A \\<Otimes> ?B) = dim_row ?A * dim_row ?B\n  gate ?n ?A \\<Longrightarrow> dim_row ?A = 2 ^ ?n\n\ngoal (1 subgoal):\n 1. dim_row (G1 \\<Otimes> G2) = 2 ^ (m + n)", "by (simp add: power_add)"], ["", "lemma tensor_gate_sqr_mat:\n  assumes \"gate m G1\" and \"gate n G2\"\n  shows \"square_mat (G1 \\<Otimes> G2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. square_mat (G1 \\<Otimes> G2)", "using assms gate.square_mat"], ["proof (prove)\nusing this:\n  gate m G1\n  gate n G2\n  gate ?n ?A \\<Longrightarrow> square_mat ?A\n\ngoal (1 subgoal):\n 1. square_mat (G1 \\<Otimes> G2)", "by simp"], ["", "lemma dim_row_of_one_mat_less_pow:\n  assumes \"gate m G1\" and \"gate n G2\" and \"i < dim_row (1\\<^sub>m(dim_col G1 * dim_col G2))\"\n  shows \"i < 2^(m+n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < 2 ^ (m + n)", "using assms gate_def"], ["proof (prove)\nusing this:\n  gate m G1\n  gate n G2\n  i < dim_row (1\\<^sub>m (dim_col G1 * dim_col G2))\n  gate ?n ?A \\<equiv>\n  dim_row ?A = 2 ^ ?n \\<and> square_mat ?A \\<and> unitary ?A\n\ngoal (1 subgoal):\n 1. i < 2 ^ (m + n)", "by (simp add: power_add)"], ["", "lemma dim_col_of_one_mat_less_pow:\n  assumes \"gate m G1\" and \"gate n G2\" and \"j < dim_col (1\\<^sub>m(dim_col G1 * dim_col G2))\"\n  shows \"j < 2^(m+n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j < 2 ^ (m + n)", "using assms gate_def"], ["proof (prove)\nusing this:\n  gate m G1\n  gate n G2\n  j < dim_col (1\\<^sub>m (dim_col G1 * dim_col G2))\n  gate ?n ?A \\<equiv>\n  dim_row ?A = 2 ^ ?n \\<and> square_mat ?A \\<and> unitary ?A\n\ngoal (1 subgoal):\n 1. j < 2 ^ (m + n)", "by (simp add: power_add)"], ["", "lemma index_tensor_gate_unitary1:\n  assumes \"gate m G1\" and \"gate n G2\" and \"i < dim_row (1\\<^sub>m(dim_col G1 * dim_col G2))\" and \n\"j < dim_col (1\\<^sub>m(dim_col G1 * dim_col G2))\"\n  shows \"((G1 \\<Otimes> G2)\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) = 1\\<^sub>m(dim_col G1 * dim_col G2) $$ (i, j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "have \"\\<And>k. k<2^(m+n) \\<Longrightarrow> cnj((G1 \\<Otimes> G2) $$ (k,i)) = \ncnj(G1 $$ (k div 2^n, i div 2^n)) * cnj(G2 $$ (k mod 2^n, i mod 2^n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k.\n       k < 2 ^ (m + n) \\<Longrightarrow>\n       cnj ((G1 \\<Otimes> G2) $$ (k, i)) =\n       cnj (G1 $$ (k div 2 ^ n, i div 2 ^ n)) *\n       cnj (G2 $$ (k mod 2 ^ n, i mod 2 ^ n))", "using assms(1-3)"], ["proof (prove)\nusing this:\n  gate m G1\n  gate n G2\n  i < dim_row (1\\<^sub>m (dim_col G1 * dim_col G2))\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k < 2 ^ (m + n) \\<Longrightarrow>\n       cnj ((G1 \\<Otimes> G2) $$ (k, i)) =\n       cnj (G1 $$ (k div 2 ^ n, i div 2 ^ n)) *\n       cnj (G2 $$ (k mod 2 ^ n, i mod 2 ^ n))", "by (simp add: gate_def power_add)"], ["proof (state)\nthis:\n  ?k < 2 ^ (m + n) \\<Longrightarrow>\n  cnj ((G1 \\<Otimes> G2) $$ (?k, i)) =\n  cnj (G1 $$ (?k div 2 ^ n, i div 2 ^ n)) *\n  cnj (G2 $$ (?k mod 2 ^ n, i mod 2 ^ n))\n\ngoal (1 subgoal):\n 1. (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "moreover"], ["proof (state)\nthis:\n  ?k < 2 ^ (m + n) \\<Longrightarrow>\n  cnj ((G1 \\<Otimes> G2) $$ (?k, i)) =\n  cnj (G1 $$ (?k div 2 ^ n, i div 2 ^ n)) *\n  cnj (G2 $$ (?k mod 2 ^ n, i mod 2 ^ n))\n\ngoal (1 subgoal):\n 1. (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "have \"\\<And>k. k<2^(m+n) \\<Longrightarrow> (G1 \\<Otimes> G2) $$ (k,j) = \n                                   G1 $$ (k div 2^n, j div 2^n) * G2 $$ (k mod 2^n, j mod 2^n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k.\n       k < 2 ^ (m + n) \\<Longrightarrow>\n       (G1 \\<Otimes> G2) $$ (k, j) =\n       G1 $$ (k div 2 ^ n, j div 2 ^ n) * G2 $$ (k mod 2 ^ n, j mod 2 ^ n)", "using assms(1,2,4)"], ["proof (prove)\nusing this:\n  gate m G1\n  gate n G2\n  j < dim_col (1\\<^sub>m (dim_col G1 * dim_col G2))\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k < 2 ^ (m + n) \\<Longrightarrow>\n       (G1 \\<Otimes> G2) $$ (k, j) =\n       G1 $$ (k div 2 ^ n, j div 2 ^ n) * G2 $$ (k mod 2 ^ n, j mod 2 ^ n)", "by (simp add: gate_def power_add)"], ["proof (state)\nthis:\n  ?k < 2 ^ (m + n) \\<Longrightarrow>\n  (G1 \\<Otimes> G2) $$ (?k, j) =\n  G1 $$ (?k div 2 ^ n, j div 2 ^ n) * G2 $$ (?k mod 2 ^ n, j mod 2 ^ n)\n\ngoal (1 subgoal):\n 1. (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "ultimately"], ["proof (chain)\npicking this:\n  ?k < 2 ^ (m + n) \\<Longrightarrow>\n  cnj ((G1 \\<Otimes> G2) $$ (?k, i)) =\n  cnj (G1 $$ (?k div 2 ^ n, i div 2 ^ n)) *\n  cnj (G2 $$ (?k mod 2 ^ n, i mod 2 ^ n))\n  ?k < 2 ^ (m + n) \\<Longrightarrow>\n  (G1 \\<Otimes> G2) $$ (?k, j) =\n  G1 $$ (?k div 2 ^ n, j div 2 ^ n) * G2 $$ (?k mod 2 ^ n, j mod 2 ^ n)", "have \"\\<And>k. k<2^(m+n) \\<Longrightarrow> cnj((G1 \\<Otimes> G2) $$ (k,i)) * ((G1 \\<Otimes> G2) $$ (k,j)) = \n      cnj(G1 $$ (k div 2^n, i div 2^n)) * G1 $$ (k div 2^n, j div 2^n) * \n      cnj(G2 $$ (k mod 2^n, i mod 2^n)) * G2 $$ (k mod 2^n, j mod 2^n)\""], ["proof (prove)\nusing this:\n  ?k < 2 ^ (m + n) \\<Longrightarrow>\n  cnj ((G1 \\<Otimes> G2) $$ (?k, i)) =\n  cnj (G1 $$ (?k div 2 ^ n, i div 2 ^ n)) *\n  cnj (G2 $$ (?k mod 2 ^ n, i mod 2 ^ n))\n  ?k < 2 ^ (m + n) \\<Longrightarrow>\n  (G1 \\<Otimes> G2) $$ (?k, j) =\n  G1 $$ (?k div 2 ^ n, j div 2 ^ n) * G2 $$ (?k mod 2 ^ n, j mod 2 ^ n)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k < 2 ^ (m + n) \\<Longrightarrow>\n       cnj ((G1 \\<Otimes> G2) $$ (k, i)) * (G1 \\<Otimes> G2) $$ (k, j) =\n       cnj (G1 $$ (k div 2 ^ n, i div 2 ^ n)) *\n       G1 $$ (k div 2 ^ n, j div 2 ^ n) *\n       cnj (G2 $$ (k mod 2 ^ n, i mod 2 ^ n)) *\n       G2 $$ (k mod 2 ^ n, j mod 2 ^ n)", "by simp"], ["proof (state)\nthis:\n  ?k < 2 ^ (m + n) \\<Longrightarrow>\n  cnj ((G1 \\<Otimes> G2) $$ (?k, i)) * (G1 \\<Otimes> G2) $$ (?k, j) =\n  cnj (G1 $$ (?k div 2 ^ n, i div 2 ^ n)) *\n  G1 $$ (?k div 2 ^ n, j div 2 ^ n) *\n  cnj (G2 $$ (?k mod 2 ^ n, i mod 2 ^ n)) *\n  G2 $$ (?k mod 2 ^ n, j mod 2 ^ n)\n\ngoal (1 subgoal):\n 1. (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  ?k < 2 ^ (m + n) \\<Longrightarrow>\n  cnj ((G1 \\<Otimes> G2) $$ (?k, i)) * (G1 \\<Otimes> G2) $$ (?k, j) =\n  cnj (G1 $$ (?k div 2 ^ n, i div 2 ^ n)) *\n  G1 $$ (?k div 2 ^ n, j div 2 ^ n) *\n  cnj (G2 $$ (?k mod 2 ^ n, i mod 2 ^ n)) *\n  G2 $$ (?k mod 2 ^ n, j mod 2 ^ n)", "have \"(\\<Sum>k<2^(m+n). cnj((G1 \\<Otimes> G2) $$ (k,i)) * ((G1 \\<Otimes> G2) $$ (k,j))) = \n      (\\<Sum>k<2^(m+n). cnj(G1 $$ (k div 2^n, i div 2^n)) * G1 $$ (k div 2^n, j div 2^n) * \n                    cnj(G2 $$ (k mod 2^n, i mod 2^n)) * G2 $$ (k mod 2^n, j mod 2^n))\""], ["proof (prove)\nusing this:\n  ?k < 2 ^ (m + n) \\<Longrightarrow>\n  cnj ((G1 \\<Otimes> G2) $$ (?k, i)) * (G1 \\<Otimes> G2) $$ (?k, j) =\n  cnj (G1 $$ (?k div 2 ^ n, i div 2 ^ n)) *\n  G1 $$ (?k div 2 ^ n, j div 2 ^ n) *\n  cnj (G2 $$ (?k mod 2 ^ n, i mod 2 ^ n)) *\n  G2 $$ (?k mod 2 ^ n, j mod 2 ^ n)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k<2 ^ (m + n).\n        cnj ((G1 \\<Otimes> G2) $$ (k, i)) * (G1 \\<Otimes> G2) $$ (k, j)) =\n    (\\<Sum>k<2 ^ (m + n).\n        cnj (G1 $$ (k div 2 ^ n, i div 2 ^ n)) *\n        G1 $$ (k div 2 ^ n, j div 2 ^ n) *\n        cnj (G2 $$ (k mod 2 ^ n, i mod 2 ^ n)) *\n        G2 $$ (k mod 2 ^ n, j mod 2 ^ n))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k<2 ^ (m + n).\n      cnj ((G1 \\<Otimes> G2) $$ (k, i)) * (G1 \\<Otimes> G2) $$ (k, j)) =\n  (\\<Sum>k<2 ^ (m + n).\n      cnj (G1 $$ (k div 2 ^ n, i div 2 ^ n)) *\n      G1 $$ (k div 2 ^ n, j div 2 ^ n) *\n      cnj (G2 $$ (k mod 2 ^ n, i mod 2 ^ n)) *\n      G2 $$ (k mod 2 ^ n, j mod 2 ^ n))\n\ngoal (1 subgoal):\n 1. (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k<2 ^ (m + n).\n      cnj ((G1 \\<Otimes> G2) $$ (k, i)) * (G1 \\<Otimes> G2) $$ (k, j)) =\n  (\\<Sum>k<2 ^ (m + n).\n      cnj (G1 $$ (k div 2 ^ n, i div 2 ^ n)) *\n      G1 $$ (k div 2 ^ n, j div 2 ^ n) *\n      cnj (G2 $$ (k mod 2 ^ n, i mod 2 ^ n)) *\n      G2 $$ (k mod 2 ^ n, j mod 2 ^ n))\n\ngoal (1 subgoal):\n 1. (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "have \"\\<dots> = \n             (\\<Sum>k<2^m. cnj(G1 $$ (k, i div 2^n)) * G1 $$ (k, j div 2^n)) * \n             (\\<Sum>k<2^n. cnj(G2 $$ (k, i mod 2^n)) * G2 $$ (k, j mod 2^n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k<2 ^ (m + n).\n        cnj (G1 $$ (k div 2 ^ n, i div 2 ^ n)) *\n        G1 $$ (k div 2 ^ n, j div 2 ^ n) *\n        cnj (G2 $$ (k mod 2 ^ n, i mod 2 ^ n)) *\n        G2 $$ (k mod 2 ^ n, j mod 2 ^ n)) =\n    (\\<Sum>k<2 ^ m. cnj (G1 $$ (k, i div 2 ^ n)) * G1 $$ (k, j div 2 ^ n)) *\n    (\\<Sum>k<2 ^ n. cnj (G2 $$ (k, i mod 2 ^ n)) * G2 $$ (k, j mod 2 ^ n))", "using sum_prod[of \"\\<lambda>x. cnj(G1 $$ (x, i div 2^n)) * G1 $$ (x, j div 2^n)\" \"2^n\" \n\"\\<lambda>x. cnj(G2 $$ (x, i mod 2^n)) * G2 $$ (x, j mod 2^n)\" \"2^m\"]"], ["proof (prove)\nusing this:\n  (\\<Sum>ia<2 ^ m * 2 ^ n.\n      cnj (G1 $$ (ia div 2 ^ n, i div 2 ^ n)) *\n      G1 $$ (ia div 2 ^ n, j div 2 ^ n) *\n      (cnj (G2 $$ (ia mod 2 ^ n, i mod 2 ^ n)) *\n       G2 $$ (ia mod 2 ^ n, j mod 2 ^ n))) =\n  (\\<Sum>ia<2 ^ m.\n      cnj (G1 $$ (ia, i div 2 ^ n)) * G1 $$ (ia, j div 2 ^ n)) *\n  (\\<Sum>ja<2 ^ n. cnj (G2 $$ (ja, i mod 2 ^ n)) * G2 $$ (ja, j mod 2 ^ n))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k<2 ^ (m + n).\n        cnj (G1 $$ (k div 2 ^ n, i div 2 ^ n)) *\n        G1 $$ (k div 2 ^ n, j div 2 ^ n) *\n        cnj (G2 $$ (k mod 2 ^ n, i mod 2 ^ n)) *\n        G2 $$ (k mod 2 ^ n, j mod 2 ^ n)) =\n    (\\<Sum>k<2 ^ m. cnj (G1 $$ (k, i div 2 ^ n)) * G1 $$ (k, j div 2 ^ n)) *\n    (\\<Sum>k<2 ^ n. cnj (G2 $$ (k, i mod 2 ^ n)) * G2 $$ (k, j mod 2 ^ n))", "by (metis (no_types, lifting) power_add semigroup_mult_class.mult.assoc sum.cong)"], ["proof (state)\nthis:\n  (\\<Sum>k<2 ^ (m + n).\n      cnj (G1 $$ (k div 2 ^ n, i div 2 ^ n)) *\n      G1 $$ (k div 2 ^ n, j div 2 ^ n) *\n      cnj (G2 $$ (k mod 2 ^ n, i mod 2 ^ n)) *\n      G2 $$ (k mod 2 ^ n, j mod 2 ^ n)) =\n  (\\<Sum>k<2 ^ m. cnj (G1 $$ (k, i div 2 ^ n)) * G1 $$ (k, j div 2 ^ n)) *\n  (\\<Sum>k<2 ^ n. cnj (G2 $$ (k, i mod 2 ^ n)) * G2 $$ (k, j mod 2 ^ n))\n\ngoal (1 subgoal):\n 1. (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k<2 ^ (m + n).\n      cnj (G1 $$ (k div 2 ^ n, i div 2 ^ n)) *\n      G1 $$ (k div 2 ^ n, j div 2 ^ n) *\n      cnj (G2 $$ (k mod 2 ^ n, i mod 2 ^ n)) *\n      G2 $$ (k mod 2 ^ n, j mod 2 ^ n)) =\n  (\\<Sum>k<2 ^ m. cnj (G1 $$ (k, i div 2 ^ n)) * G1 $$ (k, j div 2 ^ n)) *\n  (\\<Sum>k<2 ^ n. cnj (G2 $$ (k, i mod 2 ^ n)) * G2 $$ (k, j mod 2 ^ n))\n\ngoal (1 subgoal):\n 1. (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "have \"((G1 \\<Otimes> G2)\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) = (\\<Sum>k<2^(m+n).cnj((G1 \\<Otimes> G2) $$ (k,i)) * ((G1 \\<Otimes> G2) $$ (k,j)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n    (\\<Sum>k<2 ^ (m + n).\n        cnj ((G1 \\<Otimes> G2) $$ (k, i)) * (G1 \\<Otimes> G2) $$ (k, j))", "using assms index_matrix_prod[of \"i\" \"(G1 \\<Otimes> G2)\\<^sup>\\<dagger>\" \"j\" \"(G1 \\<Otimes> G2)\"] dagger_def \ndim_row_of_tensor_gate tensor_gate_sqr_mat"], ["proof (prove)\nusing this:\n  gate m G1\n  gate n G2\n  i < dim_row (1\\<^sub>m (dim_col G1 * dim_col G2))\n  j < dim_col (1\\<^sub>m (dim_col G1 * dim_col G2))\n  \\<lbrakk>i < dim_row G1 \\<Otimes> G2\\<^sup>\\<dagger>;\n   j < dim_col (G1 \\<Otimes> G2);\n   dim_col G1 \\<Otimes> G2\\<^sup>\\<dagger> =\n   dim_row (G1 \\<Otimes> G2)\\<rbrakk>\n  \\<Longrightarrow> (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$\n                    (i, j) =\n                    (\\<Sum>k<dim_row (G1 \\<Otimes> G2).\n                        G1 \\<Otimes> G2\\<^sup>\\<dagger> $$ (i, k) *\n                        (G1 \\<Otimes> G2) $$ (k, j))\n  ?M\\<^sup>\\<dagger> \\<equiv>\n  Matrix.mat (dim_col ?M) (dim_row ?M) (\\<lambda>(i, j). cnj (?M $$ (j, i)))\n  \\<lbrakk>gate ?m ?G1.0; gate ?n ?G2.0\\<rbrakk>\n  \\<Longrightarrow> dim_row (?G1.0 \\<Otimes> ?G2.0) = 2 ^ (?m + ?n)\n  \\<lbrakk>gate ?m ?G1.0; gate ?n ?G2.0\\<rbrakk>\n  \\<Longrightarrow> square_mat (?G1.0 \\<Otimes> ?G2.0)\n\ngoal (1 subgoal):\n 1. (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n    (\\<Sum>k<2 ^ (m + n).\n        cnj ((G1 \\<Otimes> G2) $$ (k, i)) * (G1 \\<Otimes> G2) $$ (k, j))", "by simp"], ["proof (state)\nthis:\n  (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n  (\\<Sum>k<2 ^ (m + n).\n      cnj ((G1 \\<Otimes> G2) $$ (k, i)) * (G1 \\<Otimes> G2) $$ (k, j))\n\ngoal (1 subgoal):\n 1. (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Sum>k<2 ^ (m + n).\n      cnj ((G1 \\<Otimes> G2) $$ (k, i)) * (G1 \\<Otimes> G2) $$ (k, j)) =\n  (\\<Sum>k<2 ^ m. cnj (G1 $$ (k, i div 2 ^ n)) * G1 $$ (k, j div 2 ^ n)) *\n  (\\<Sum>k<2 ^ n. cnj (G2 $$ (k, i mod 2 ^ n)) * G2 $$ (k, j mod 2 ^ n))\n  (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n  (\\<Sum>k<2 ^ (m + n).\n      cnj ((G1 \\<Otimes> G2) $$ (k, i)) * (G1 \\<Otimes> G2) $$ (k, j))", "have \"((G1 \\<Otimes> G2)\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i,j) = \n              (\\<Sum>k1<2^m. cnj(G1 $$ (k1, i div 2^n)) * G1 $$ (k1, j div 2^n)) * \n              (\\<Sum>k2<2^n. cnj(G2 $$ (k2, i mod 2^n)) * G2 $$ (k2, j mod 2^n))\""], ["proof (prove)\nusing this:\n  (\\<Sum>k<2 ^ (m + n).\n      cnj ((G1 \\<Otimes> G2) $$ (k, i)) * (G1 \\<Otimes> G2) $$ (k, j)) =\n  (\\<Sum>k<2 ^ m. cnj (G1 $$ (k, i div 2 ^ n)) * G1 $$ (k, j div 2 ^ n)) *\n  (\\<Sum>k<2 ^ n. cnj (G2 $$ (k, i mod 2 ^ n)) * G2 $$ (k, j mod 2 ^ n))\n  (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n  (\\<Sum>k<2 ^ (m + n).\n      cnj ((G1 \\<Otimes> G2) $$ (k, i)) * (G1 \\<Otimes> G2) $$ (k, j))\n\ngoal (1 subgoal):\n 1. (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n    (\\<Sum>k1<2 ^ m.\n        cnj (G1 $$ (k1, i div 2 ^ n)) * G1 $$ (k1, j div 2 ^ n)) *\n    (\\<Sum>k2<2 ^ n.\n        cnj (G2 $$ (k2, i mod 2 ^ n)) * G2 $$ (k2, j mod 2 ^ n))", "by simp"], ["proof (state)\nthis:\n  (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n  (\\<Sum>k1<2 ^ m.\n      cnj (G1 $$ (k1, i div 2 ^ n)) * G1 $$ (k1, j div 2 ^ n)) *\n  (\\<Sum>k2<2 ^ n. cnj (G2 $$ (k2, i mod 2 ^ n)) * G2 $$ (k2, j mod 2 ^ n))\n\ngoal (1 subgoal):\n 1. (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "moreover"], ["proof (state)\nthis:\n  (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n  (\\<Sum>k1<2 ^ m.\n      cnj (G1 $$ (k1, i div 2 ^ n)) * G1 $$ (k1, j div 2 ^ n)) *\n  (\\<Sum>k2<2 ^ n. cnj (G2 $$ (k2, i mod 2 ^ n)) * G2 $$ (k2, j mod 2 ^ n))\n\ngoal (1 subgoal):\n 1. (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "have \"(\\<Sum>k<2^m. cnj(G1 $$ (k, i div 2^n))* G1 $$ (k, j div 2^n)) = (G1\\<^sup>\\<dagger> * G1) $$ (i div 2^n, j div 2^n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k<2 ^ m. cnj (G1 $$ (k, i div 2 ^ n)) * G1 $$ (k, j div 2 ^ n)) =\n    (G1\\<^sup>\\<dagger> * G1) $$ (i div 2 ^ n, j div 2 ^ n)", "using assms gate_def dagger_def index_matrix_prod[of \"i div 2^n\" \"G1\\<^sup>\\<dagger>\" \"j div 2^n\" \"G1\"]"], ["proof (prove)\nusing this:\n  gate m G1\n  gate n G2\n  i < dim_row (1\\<^sub>m (dim_col G1 * dim_col G2))\n  j < dim_col (1\\<^sub>m (dim_col G1 * dim_col G2))\n  gate ?n ?A \\<equiv>\n  dim_row ?A = 2 ^ ?n \\<and> square_mat ?A \\<and> unitary ?A\n  ?M\\<^sup>\\<dagger> \\<equiv>\n  Matrix.mat (dim_col ?M) (dim_row ?M) (\\<lambda>(i, j). cnj (?M $$ (j, i)))\n  \\<lbrakk>i div 2 ^ n < dim_row G1\\<^sup>\\<dagger>;\n   j div 2 ^ n < dim_col G1;\n   dim_col G1\\<^sup>\\<dagger> = dim_row G1\\<rbrakk>\n  \\<Longrightarrow> (G1\\<^sup>\\<dagger> * G1) $$\n                    (i div 2 ^ n, j div 2 ^ n) =\n                    (\\<Sum>k<dim_row G1.\n                        G1\\<^sup>\\<dagger> $$ (i div 2 ^ n, k) *\n                        G1 $$ (k, j div 2 ^ n))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k<2 ^ m. cnj (G1 $$ (k, i div 2 ^ n)) * G1 $$ (k, j div 2 ^ n)) =\n    (G1\\<^sup>\\<dagger> * G1) $$ (i div 2 ^ n, j div 2 ^ n)", "by (simp add: less_mult_imp_div_less power_add)"], ["proof (state)\nthis:\n  (\\<Sum>k<2 ^ m. cnj (G1 $$ (k, i div 2 ^ n)) * G1 $$ (k, j div 2 ^ n)) =\n  (G1\\<^sup>\\<dagger> * G1) $$ (i div 2 ^ n, j div 2 ^ n)\n\ngoal (1 subgoal):\n 1. (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "moreover"], ["proof (state)\nthis:\n  (\\<Sum>k<2 ^ m. cnj (G1 $$ (k, i div 2 ^ n)) * G1 $$ (k, j div 2 ^ n)) =\n  (G1\\<^sup>\\<dagger> * G1) $$ (i div 2 ^ n, j div 2 ^ n)\n\ngoal (1 subgoal):\n 1. (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "have \"\\<dots> = 1\\<^sub>m(2^m) $$ (i div 2^n, j div 2^n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (G1\\<^sup>\\<dagger> * G1) $$ (i div 2 ^ n, j div 2 ^ n) =\n    1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n)", "using assms(1,2) gate_def unitary_def"], ["proof (prove)\nusing this:\n  gate m G1\n  gate n G2\n  gate ?n ?A \\<equiv>\n  dim_row ?A = 2 ^ ?n \\<and> square_mat ?A \\<and> unitary ?A\n  unitary ?M \\<equiv>\n  ?M\\<^sup>\\<dagger> * ?M = 1\\<^sub>m (dim_col ?M) \\<and>\n  ?M * ?M\\<^sup>\\<dagger> = 1\\<^sub>m (dim_row ?M)\n\ngoal (1 subgoal):\n 1. (G1\\<^sup>\\<dagger> * G1) $$ (i div 2 ^ n, j div 2 ^ n) =\n    1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n)", "by simp"], ["proof (state)\nthis:\n  (G1\\<^sup>\\<dagger> * G1) $$ (i div 2 ^ n, j div 2 ^ n) =\n  1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n)\n\ngoal (1 subgoal):\n 1. (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "moreover"], ["proof (state)\nthis:\n  (G1\\<^sup>\\<dagger> * G1) $$ (i div 2 ^ n, j div 2 ^ n) =\n  1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n)\n\ngoal (1 subgoal):\n 1. (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "have \"(\\<Sum>k<2^n. cnj(G2 $$ (k, i mod 2^n))* G2 $$ (k, j mod 2^n)) = (G2\\<^sup>\\<dagger> * G2) $$ (i mod 2^n, j mod 2^n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k<2 ^ n. cnj (G2 $$ (k, i mod 2 ^ n)) * G2 $$ (k, j mod 2 ^ n)) =\n    (G2\\<^sup>\\<dagger> * G2) $$ (i mod 2 ^ n, j mod 2 ^ n)", "using assms(1,2) gate_def dagger_def index_matrix_prod[of \"i mod 2^n\" \"G2\\<^sup>\\<dagger>\" \"j mod 2^n\" \"G2\"]"], ["proof (prove)\nusing this:\n  gate m G1\n  gate n G2\n  gate ?n ?A \\<equiv>\n  dim_row ?A = 2 ^ ?n \\<and> square_mat ?A \\<and> unitary ?A\n  ?M\\<^sup>\\<dagger> \\<equiv>\n  Matrix.mat (dim_col ?M) (dim_row ?M) (\\<lambda>(i, j). cnj (?M $$ (j, i)))\n  \\<lbrakk>i mod 2 ^ n < dim_row G2\\<^sup>\\<dagger>;\n   j mod 2 ^ n < dim_col G2;\n   dim_col G2\\<^sup>\\<dagger> = dim_row G2\\<rbrakk>\n  \\<Longrightarrow> (G2\\<^sup>\\<dagger> * G2) $$\n                    (i mod 2 ^ n, j mod 2 ^ n) =\n                    (\\<Sum>k<dim_row G2.\n                        G2\\<^sup>\\<dagger> $$ (i mod 2 ^ n, k) *\n                        G2 $$ (k, j mod 2 ^ n))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k<2 ^ n. cnj (G2 $$ (k, i mod 2 ^ n)) * G2 $$ (k, j mod 2 ^ n)) =\n    (G2\\<^sup>\\<dagger> * G2) $$ (i mod 2 ^ n, j mod 2 ^ n)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k<2 ^ n. cnj (G2 $$ (k, i mod 2 ^ n)) * G2 $$ (k, j mod 2 ^ n)) =\n  (G2\\<^sup>\\<dagger> * G2) $$ (i mod 2 ^ n, j mod 2 ^ n)\n\ngoal (1 subgoal):\n 1. (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "moreover"], ["proof (state)\nthis:\n  (\\<Sum>k<2 ^ n. cnj (G2 $$ (k, i mod 2 ^ n)) * G2 $$ (k, j mod 2 ^ n)) =\n  (G2\\<^sup>\\<dagger> * G2) $$ (i mod 2 ^ n, j mod 2 ^ n)\n\ngoal (1 subgoal):\n 1. (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "have \"\\<dots> = 1\\<^sub>m(2^n) $$ (i mod 2^n, j mod 2^n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (G2\\<^sup>\\<dagger> * G2) $$ (i mod 2 ^ n, j mod 2 ^ n) =\n    1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n)", "using assms(1,2) gate_def unitary_def"], ["proof (prove)\nusing this:\n  gate m G1\n  gate n G2\n  gate ?n ?A \\<equiv>\n  dim_row ?A = 2 ^ ?n \\<and> square_mat ?A \\<and> unitary ?A\n  unitary ?M \\<equiv>\n  ?M\\<^sup>\\<dagger> * ?M = 1\\<^sub>m (dim_col ?M) \\<and>\n  ?M * ?M\\<^sup>\\<dagger> = 1\\<^sub>m (dim_row ?M)\n\ngoal (1 subgoal):\n 1. (G2\\<^sup>\\<dagger> * G2) $$ (i mod 2 ^ n, j mod 2 ^ n) =\n    1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n)", "by simp"], ["proof (state)\nthis:\n  (G2\\<^sup>\\<dagger> * G2) $$ (i mod 2 ^ n, j mod 2 ^ n) =\n  1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n)\n\ngoal (1 subgoal):\n 1. (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "ultimately"], ["proof (chain)\npicking this:\n  (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n  (\\<Sum>k1<2 ^ m.\n      cnj (G1 $$ (k1, i div 2 ^ n)) * G1 $$ (k1, j div 2 ^ n)) *\n  (\\<Sum>k2<2 ^ n. cnj (G2 $$ (k2, i mod 2 ^ n)) * G2 $$ (k2, j mod 2 ^ n))\n  (\\<Sum>k<2 ^ m. cnj (G1 $$ (k, i div 2 ^ n)) * G1 $$ (k, j div 2 ^ n)) =\n  (G1\\<^sup>\\<dagger> * G1) $$ (i div 2 ^ n, j div 2 ^ n)\n  (G1\\<^sup>\\<dagger> * G1) $$ (i div 2 ^ n, j div 2 ^ n) =\n  1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n)\n  (\\<Sum>k<2 ^ n. cnj (G2 $$ (k, i mod 2 ^ n)) * G2 $$ (k, j mod 2 ^ n)) =\n  (G2\\<^sup>\\<dagger> * G2) $$ (i mod 2 ^ n, j mod 2 ^ n)\n  (G2\\<^sup>\\<dagger> * G2) $$ (i mod 2 ^ n, j mod 2 ^ n) =\n  1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n)", "have \"((G1 \\<Otimes> G2)\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i,j) = 1\\<^sub>m (2^m) $$ (i div 2^n, j div 2^n) * 1\\<^sub>m (2^n) $$ (i mod 2^n, j mod 2^n)\""], ["proof (prove)\nusing this:\n  (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n  (\\<Sum>k1<2 ^ m.\n      cnj (G1 $$ (k1, i div 2 ^ n)) * G1 $$ (k1, j div 2 ^ n)) *\n  (\\<Sum>k2<2 ^ n. cnj (G2 $$ (k2, i mod 2 ^ n)) * G2 $$ (k2, j mod 2 ^ n))\n  (\\<Sum>k<2 ^ m. cnj (G1 $$ (k, i div 2 ^ n)) * G1 $$ (k, j div 2 ^ n)) =\n  (G1\\<^sup>\\<dagger> * G1) $$ (i div 2 ^ n, j div 2 ^ n)\n  (G1\\<^sup>\\<dagger> * G1) $$ (i div 2 ^ n, j div 2 ^ n) =\n  1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n)\n  (\\<Sum>k<2 ^ n. cnj (G2 $$ (k, i mod 2 ^ n)) * G2 $$ (k, j mod 2 ^ n)) =\n  (G2\\<^sup>\\<dagger> * G2) $$ (i mod 2 ^ n, j mod 2 ^ n)\n  (G2\\<^sup>\\<dagger> * G2) $$ (i mod 2 ^ n, j mod 2 ^ n) =\n  1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n)\n\ngoal (1 subgoal):\n 1. (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n    1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n) *\n    1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n)", "by simp"], ["proof (state)\nthis:\n  (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n  1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n) *\n  1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n)\n\ngoal (1 subgoal):\n 1. (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "thus ?thesis"], ["proof (prove)\nusing this:\n  (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n  1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n) *\n  1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n)\n\ngoal (1 subgoal):\n 1. (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "using assms assms(3,4) gate_def index_one_mat_div_mod[of \"i\" \"m\" \"n\" \"j\"]"], ["proof (prove)\nusing this:\n  (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n  1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n) *\n  1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n)\n  gate m G1\n  gate n G2\n  i < dim_row (1\\<^sub>m (dim_col G1 * dim_col G2))\n  j < dim_col (1\\<^sub>m (dim_col G1 * dim_col G2))\n  i < dim_row (1\\<^sub>m (dim_col G1 * dim_col G2))\n  j < dim_col (1\\<^sub>m (dim_col G1 * dim_col G2))\n  gate ?n ?A \\<equiv>\n  dim_row ?A = 2 ^ ?n \\<and> square_mat ?A \\<and> unitary ?A\n  \\<lbrakk>i < 2 ^ (m + n); j < 2 ^ (m + n)\\<rbrakk>\n  \\<Longrightarrow> 1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n) *\n                    1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n) =\n                    1\\<^sub>m (2 ^ (m + n)) $$ (i, j)\n\ngoal (1 subgoal):\n 1. (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "by(simp add: power_add)"], ["proof (state)\nthis:\n  (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n  1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tensor_gate_unitary1 [simp]:\n  assumes \"gate m G1\" and \"gate n G2\"\n  shows \"(G1 \\<Otimes> G2)\\<^sup>\\<dagger> * (G1 \\<Otimes> G2) = 1\\<^sub>m(dim_col G1 * dim_col G2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2) =\n    1\\<^sub>m (dim_col G1 * dim_col G2)", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (1\\<^sub>m (dim_col G1 * dim_col G2));\n        j < dim_col (1\\<^sub>m (dim_col G1 * dim_col G2))\\<rbrakk>\n       \\<Longrightarrow> (G1 \\<Otimes> G2\\<^sup>\\<dagger> *\n                          (G1 \\<Otimes> G2)) $$\n                         (i, j) =\n                         1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)\n 2. dim_row (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) =\n    dim_row (1\\<^sub>m (dim_col G1 * dim_col G2))\n 3. dim_col (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) =\n    dim_col (1\\<^sub>m (dim_col G1 * dim_col G2))", "show \"dim_row ((G1 \\<Otimes> G2)\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) = dim_row (1\\<^sub>m(dim_col G1 * dim_col G2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) =\n    dim_row (1\\<^sub>m (dim_col G1 * dim_col G2))", "by simp"], ["proof (state)\nthis:\n  dim_row (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) =\n  dim_row (1\\<^sub>m (dim_col G1 * dim_col G2))\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (1\\<^sub>m (dim_col G1 * dim_col G2));\n        j < dim_col (1\\<^sub>m (dim_col G1 * dim_col G2))\\<rbrakk>\n       \\<Longrightarrow> (G1 \\<Otimes> G2\\<^sup>\\<dagger> *\n                          (G1 \\<Otimes> G2)) $$\n                         (i, j) =\n                         1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)\n 2. dim_col (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) =\n    dim_col (1\\<^sub>m (dim_col G1 * dim_col G2))", "show \"dim_col ((G1 \\<Otimes> G2)\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) = dim_col (1\\<^sub>m(dim_col G1 * dim_col G2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) =\n    dim_col (1\\<^sub>m (dim_col G1 * dim_col G2))", "by simp"], ["proof (state)\nthis:\n  dim_col (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) =\n  dim_col (1\\<^sub>m (dim_col G1 * dim_col G2))\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (1\\<^sub>m (dim_col G1 * dim_col G2));\n        j < dim_col (1\\<^sub>m (dim_col G1 * dim_col G2))\\<rbrakk>\n       \\<Longrightarrow> (G1 \\<Otimes> G2\\<^sup>\\<dagger> *\n                          (G1 \\<Otimes> G2)) $$\n                         (i, j) =\n                         1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (1\\<^sub>m (dim_col G1 * dim_col G2));\n        j < dim_col (1\\<^sub>m (dim_col G1 * dim_col G2))\\<rbrakk>\n       \\<Longrightarrow> (G1 \\<Otimes> G2\\<^sup>\\<dagger> *\n                          (G1 \\<Otimes> G2)) $$\n                         (i, j) =\n                         1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "assume \"i < dim_row (1\\<^sub>m(dim_col G1 * dim_col G2))\" and \"j < dim_col (1\\<^sub>m(dim_col G1 * dim_col G2))\""], ["proof (state)\nthis:\n  i < dim_row (1\\<^sub>m (dim_col G1 * dim_col G2))\n  j < dim_col (1\\<^sub>m (dim_col G1 * dim_col G2))\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (1\\<^sub>m (dim_col G1 * dim_col G2));\n        j < dim_col (1\\<^sub>m (dim_col G1 * dim_col G2))\\<rbrakk>\n       \\<Longrightarrow> (G1 \\<Otimes> G2\\<^sup>\\<dagger> *\n                          (G1 \\<Otimes> G2)) $$\n                         (i, j) =\n                         1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "thus \"((G1 \\<Otimes> G2)\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) = 1\\<^sub>m(dim_col G1 * dim_col G2) $$ (i, j)\""], ["proof (prove)\nusing this:\n  i < dim_row (1\\<^sub>m (dim_col G1 * dim_col G2))\n  j < dim_col (1\\<^sub>m (dim_col G1 * dim_col G2))\n\ngoal (1 subgoal):\n 1. (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "using assms index_tensor_gate_unitary1"], ["proof (prove)\nusing this:\n  i < dim_row (1\\<^sub>m (dim_col G1 * dim_col G2))\n  j < dim_col (1\\<^sub>m (dim_col G1 * dim_col G2))\n  gate m G1\n  gate n G2\n  \\<lbrakk>gate ?m ?G1.0; gate ?n ?G2.0;\n   ?i < dim_row (1\\<^sub>m (dim_col ?G1.0 * dim_col ?G2.0));\n   ?j < dim_col (1\\<^sub>m (dim_col ?G1.0 * dim_col ?G2.0))\\<rbrakk>\n  \\<Longrightarrow> (?G1.0 \\<Otimes> ?G2.0\\<^sup>\\<dagger> *\n                     (?G1.0 \\<Otimes> ?G2.0)) $$\n                    (?i, ?j) =\n                    1\\<^sub>m (dim_col ?G1.0 * dim_col ?G2.0) $$ (?i, ?j)\n\ngoal (1 subgoal):\n 1. (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "by simp"], ["proof (state)\nthis:\n  (G1 \\<Otimes> G2\\<^sup>\\<dagger> * (G1 \\<Otimes> G2)) $$ (i, j) =\n  1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma index_tensor_gate_unitary2 [simp]:\n  assumes \"gate m G1\" and \"gate n G2\" and \"i < dim_row (1\\<^sub>m (dim_col G1 * dim_col G2))\" and\n\"j < dim_col (1\\<^sub>m (dim_col G1 * dim_col G2))\"\n  shows \"((G1 \\<Otimes> G2) * ((G1 \\<Otimes> G2)\\<^sup>\\<dagger>)) $$ (i, j) = 1\\<^sub>m(dim_col G1 * dim_col G2) $$ (i, j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "have \"\\<And>k. k<2^(m+n) \\<Longrightarrow> (G1 \\<Otimes> G2) $$ (i,k) = \nG1 $$ (i div 2^n, k div 2^n) * G2 $$ (i mod 2^n, k mod 2^n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k.\n       k < 2 ^ (m + n) \\<Longrightarrow>\n       (G1 \\<Otimes> G2) $$ (i, k) =\n       G1 $$ (i div 2 ^ n, k div 2 ^ n) * G2 $$ (i mod 2 ^ n, k mod 2 ^ n)", "using assms(1-3)"], ["proof (prove)\nusing this:\n  gate m G1\n  gate n G2\n  i < dim_row (1\\<^sub>m (dim_col G1 * dim_col G2))\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k < 2 ^ (m + n) \\<Longrightarrow>\n       (G1 \\<Otimes> G2) $$ (i, k) =\n       G1 $$ (i div 2 ^ n, k div 2 ^ n) * G2 $$ (i mod 2 ^ n, k mod 2 ^ n)", "by (simp add: gate_def power_add)"], ["proof (state)\nthis:\n  ?k < 2 ^ (m + n) \\<Longrightarrow>\n  (G1 \\<Otimes> G2) $$ (i, ?k) =\n  G1 $$ (i div 2 ^ n, ?k div 2 ^ n) * G2 $$ (i mod 2 ^ n, ?k mod 2 ^ n)\n\ngoal (1 subgoal):\n 1. ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "moreover"], ["proof (state)\nthis:\n  ?k < 2 ^ (m + n) \\<Longrightarrow>\n  (G1 \\<Otimes> G2) $$ (i, ?k) =\n  G1 $$ (i div 2 ^ n, ?k div 2 ^ n) * G2 $$ (i mod 2 ^ n, ?k mod 2 ^ n)\n\ngoal (1 subgoal):\n 1. ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "have \"\\<And>k. k<2^(m+n) \\<Longrightarrow> cnj((G1 \\<Otimes> G2) $$ (j,k)) = \ncnj(G1 $$ (j div 2^n, k div 2^n)) * cnj(G2 $$ (j mod 2^n, k mod 2^n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k.\n       k < 2 ^ (m + n) \\<Longrightarrow>\n       cnj ((G1 \\<Otimes> G2) $$ (j, k)) =\n       cnj (G1 $$ (j div 2 ^ n, k div 2 ^ n)) *\n       cnj (G2 $$ (j mod 2 ^ n, k mod 2 ^ n))", "using assms(1,2,4)"], ["proof (prove)\nusing this:\n  gate m G1\n  gate n G2\n  j < dim_col (1\\<^sub>m (dim_col G1 * dim_col G2))\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k < 2 ^ (m + n) \\<Longrightarrow>\n       cnj ((G1 \\<Otimes> G2) $$ (j, k)) =\n       cnj (G1 $$ (j div 2 ^ n, k div 2 ^ n)) *\n       cnj (G2 $$ (j mod 2 ^ n, k mod 2 ^ n))", "by (simp add: gate_def power_add)"], ["proof (state)\nthis:\n  ?k < 2 ^ (m + n) \\<Longrightarrow>\n  cnj ((G1 \\<Otimes> G2) $$ (j, ?k)) =\n  cnj (G1 $$ (j div 2 ^ n, ?k div 2 ^ n)) *\n  cnj (G2 $$ (j mod 2 ^ n, ?k mod 2 ^ n))\n\ngoal (1 subgoal):\n 1. ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "ultimately"], ["proof (chain)\npicking this:\n  ?k < 2 ^ (m + n) \\<Longrightarrow>\n  (G1 \\<Otimes> G2) $$ (i, ?k) =\n  G1 $$ (i div 2 ^ n, ?k div 2 ^ n) * G2 $$ (i mod 2 ^ n, ?k mod 2 ^ n)\n  ?k < 2 ^ (m + n) \\<Longrightarrow>\n  cnj ((G1 \\<Otimes> G2) $$ (j, ?k)) =\n  cnj (G1 $$ (j div 2 ^ n, ?k div 2 ^ n)) *\n  cnj (G2 $$ (j mod 2 ^ n, ?k mod 2 ^ n))", "have \"\\<And>k. k\\<in>{..<2^(m+n)} \\<Longrightarrow> (G1 \\<Otimes> G2) $$ (i,k) * cnj((G1 \\<Otimes> G2) $$ (j,k)) = \n                         G1 $$ (i div 2^n, k div 2^n) * cnj(G1 $$ (j div 2^n, k div 2^n)) * \n                         G2 $$ (i mod 2^n, k mod 2^n) * cnj(G2 $$ (j mod 2^n, k mod 2^n))\""], ["proof (prove)\nusing this:\n  ?k < 2 ^ (m + n) \\<Longrightarrow>\n  (G1 \\<Otimes> G2) $$ (i, ?k) =\n  G1 $$ (i div 2 ^ n, ?k div 2 ^ n) * G2 $$ (i mod 2 ^ n, ?k mod 2 ^ n)\n  ?k < 2 ^ (m + n) \\<Longrightarrow>\n  cnj ((G1 \\<Otimes> G2) $$ (j, ?k)) =\n  cnj (G1 $$ (j div 2 ^ n, ?k div 2 ^ n)) *\n  cnj (G2 $$ (j mod 2 ^ n, ?k mod 2 ^ n))\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {..<2 ^ (m + n)} \\<Longrightarrow>\n       (G1 \\<Otimes> G2) $$ (i, k) * cnj ((G1 \\<Otimes> G2) $$ (j, k)) =\n       G1 $$ (i div 2 ^ n, k div 2 ^ n) *\n       cnj (G1 $$ (j div 2 ^ n, k div 2 ^ n)) *\n       G2 $$ (i mod 2 ^ n, k mod 2 ^ n) *\n       cnj (G2 $$ (j mod 2 ^ n, k mod 2 ^ n))", "by simp"], ["proof (state)\nthis:\n  ?k \\<in> {..<2 ^ (m + n)} \\<Longrightarrow>\n  (G1 \\<Otimes> G2) $$ (i, ?k) * cnj ((G1 \\<Otimes> G2) $$ (j, ?k)) =\n  G1 $$ (i div 2 ^ n, ?k div 2 ^ n) *\n  cnj (G1 $$ (j div 2 ^ n, ?k div 2 ^ n)) *\n  G2 $$ (i mod 2 ^ n, ?k mod 2 ^ n) *\n  cnj (G2 $$ (j mod 2 ^ n, ?k mod 2 ^ n))\n\ngoal (1 subgoal):\n 1. ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  ?k \\<in> {..<2 ^ (m + n)} \\<Longrightarrow>\n  (G1 \\<Otimes> G2) $$ (i, ?k) * cnj ((G1 \\<Otimes> G2) $$ (j, ?k)) =\n  G1 $$ (i div 2 ^ n, ?k div 2 ^ n) *\n  cnj (G1 $$ (j div 2 ^ n, ?k div 2 ^ n)) *\n  G2 $$ (i mod 2 ^ n, ?k mod 2 ^ n) *\n  cnj (G2 $$ (j mod 2 ^ n, ?k mod 2 ^ n))", "have \"(\\<Sum>k<2^(m+n). (G1 \\<Otimes> G2) $$ (i,k) * cnj((G1 \\<Otimes> G2) $$ (j,k))) = \n      (\\<Sum>k<2^(m+n). G1 $$ (i div 2^n, k div 2^n) * cnj(G1 $$ (j div 2^n, k div 2^n)) * \n      G2 $$ (i mod 2^n, k mod 2^n) * cnj(G2 $$ (j mod 2^n, k mod 2^n)))\""], ["proof (prove)\nusing this:\n  ?k \\<in> {..<2 ^ (m + n)} \\<Longrightarrow>\n  (G1 \\<Otimes> G2) $$ (i, ?k) * cnj ((G1 \\<Otimes> G2) $$ (j, ?k)) =\n  G1 $$ (i div 2 ^ n, ?k div 2 ^ n) *\n  cnj (G1 $$ (j div 2 ^ n, ?k div 2 ^ n)) *\n  G2 $$ (i mod 2 ^ n, ?k mod 2 ^ n) *\n  cnj (G2 $$ (j mod 2 ^ n, ?k mod 2 ^ n))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k<2 ^ (m + n).\n        (G1 \\<Otimes> G2) $$ (i, k) * cnj ((G1 \\<Otimes> G2) $$ (j, k))) =\n    (\\<Sum>k<2 ^ (m + n).\n        G1 $$ (i div 2 ^ n, k div 2 ^ n) *\n        cnj (G1 $$ (j div 2 ^ n, k div 2 ^ n)) *\n        G2 $$ (i mod 2 ^ n, k mod 2 ^ n) *\n        cnj (G2 $$ (j mod 2 ^ n, k mod 2 ^ n)))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k<2 ^ (m + n).\n      (G1 \\<Otimes> G2) $$ (i, k) * cnj ((G1 \\<Otimes> G2) $$ (j, k))) =\n  (\\<Sum>k<2 ^ (m + n).\n      G1 $$ (i div 2 ^ n, k div 2 ^ n) *\n      cnj (G1 $$ (j div 2 ^ n, k div 2 ^ n)) *\n      G2 $$ (i mod 2 ^ n, k mod 2 ^ n) *\n      cnj (G2 $$ (j mod 2 ^ n, k mod 2 ^ n)))\n\ngoal (1 subgoal):\n 1. ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k<2 ^ (m + n).\n      (G1 \\<Otimes> G2) $$ (i, k) * cnj ((G1 \\<Otimes> G2) $$ (j, k))) =\n  (\\<Sum>k<2 ^ (m + n).\n      G1 $$ (i div 2 ^ n, k div 2 ^ n) *\n      cnj (G1 $$ (j div 2 ^ n, k div 2 ^ n)) *\n      G2 $$ (i mod 2 ^ n, k mod 2 ^ n) *\n      cnj (G2 $$ (j mod 2 ^ n, k mod 2 ^ n)))\n\ngoal (1 subgoal):\n 1. ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "have \"\\<dots> = \n             (\\<Sum>k<2^m. G1 $$ (i div 2^n, k) * cnj(G1 $$ (j div 2^n, k))) * \n             (\\<Sum>k<2^n. G2 $$ (i mod 2^n, k) * cnj(G2 $$ (j mod 2^n, k)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k<2 ^ (m + n).\n        G1 $$ (i div 2 ^ n, k div 2 ^ n) *\n        cnj (G1 $$ (j div 2 ^ n, k div 2 ^ n)) *\n        G2 $$ (i mod 2 ^ n, k mod 2 ^ n) *\n        cnj (G2 $$ (j mod 2 ^ n, k mod 2 ^ n))) =\n    (\\<Sum>k<2 ^ m. G1 $$ (i div 2 ^ n, k) * cnj (G1 $$ (j div 2 ^ n, k))) *\n    (\\<Sum>k<2 ^ n. G2 $$ (i mod 2 ^ n, k) * cnj (G2 $$ (j mod 2 ^ n, k)))", "using sum_prod[of \"\\<lambda>k. G1 $$ (i div 2^n, k) * cnj(G1 $$ (j div 2^n, k))\" \"2^n\" \n                        \"\\<lambda>k. G2 $$ (i mod 2^n, k) * cnj(G2 $$ (j mod 2^n, k))\" \"2^m\"]"], ["proof (prove)\nusing this:\n  (\\<Sum>ia<2 ^ m * 2 ^ n.\n      G1 $$ (i div 2 ^ n, ia div 2 ^ n) *\n      cnj (G1 $$ (j div 2 ^ n, ia div 2 ^ n)) *\n      (G2 $$ (i mod 2 ^ n, ia mod 2 ^ n) *\n       cnj (G2 $$ (j mod 2 ^ n, ia mod 2 ^ n)))) =\n  (\\<Sum>ia<2 ^ m.\n      G1 $$ (i div 2 ^ n, ia) * cnj (G1 $$ (j div 2 ^ n, ia))) *\n  (\\<Sum>ja<2 ^ n. G2 $$ (i mod 2 ^ n, ja) * cnj (G2 $$ (j mod 2 ^ n, ja)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k<2 ^ (m + n).\n        G1 $$ (i div 2 ^ n, k div 2 ^ n) *\n        cnj (G1 $$ (j div 2 ^ n, k div 2 ^ n)) *\n        G2 $$ (i mod 2 ^ n, k mod 2 ^ n) *\n        cnj (G2 $$ (j mod 2 ^ n, k mod 2 ^ n))) =\n    (\\<Sum>k<2 ^ m. G1 $$ (i div 2 ^ n, k) * cnj (G1 $$ (j div 2 ^ n, k))) *\n    (\\<Sum>k<2 ^ n. G2 $$ (i mod 2 ^ n, k) * cnj (G2 $$ (j mod 2 ^ n, k)))", "by (metis (no_types, lifting) power_add semigroup_mult_class.mult.assoc sum.cong)"], ["proof (state)\nthis:\n  (\\<Sum>k<2 ^ (m + n).\n      G1 $$ (i div 2 ^ n, k div 2 ^ n) *\n      cnj (G1 $$ (j div 2 ^ n, k div 2 ^ n)) *\n      G2 $$ (i mod 2 ^ n, k mod 2 ^ n) *\n      cnj (G2 $$ (j mod 2 ^ n, k mod 2 ^ n))) =\n  (\\<Sum>k<2 ^ m. G1 $$ (i div 2 ^ n, k) * cnj (G1 $$ (j div 2 ^ n, k))) *\n  (\\<Sum>k<2 ^ n. G2 $$ (i mod 2 ^ n, k) * cnj (G2 $$ (j mod 2 ^ n, k)))\n\ngoal (1 subgoal):\n 1. ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k<2 ^ (m + n).\n      G1 $$ (i div 2 ^ n, k div 2 ^ n) *\n      cnj (G1 $$ (j div 2 ^ n, k div 2 ^ n)) *\n      G2 $$ (i mod 2 ^ n, k mod 2 ^ n) *\n      cnj (G2 $$ (j mod 2 ^ n, k mod 2 ^ n))) =\n  (\\<Sum>k<2 ^ m. G1 $$ (i div 2 ^ n, k) * cnj (G1 $$ (j div 2 ^ n, k))) *\n  (\\<Sum>k<2 ^ n. G2 $$ (i mod 2 ^ n, k) * cnj (G2 $$ (j mod 2 ^ n, k)))\n\ngoal (1 subgoal):\n 1. ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "have \"((G1 \\<Otimes> G2) * ((G1 \\<Otimes> G2)\\<^sup>\\<dagger>)) $$ (i, j) = (\\<Sum>k<2^(m+n). (G1 \\<Otimes> G2) $$ (i,k) * cnj((G1 \\<Otimes> G2) $$ (j,k)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n    (\\<Sum>k<2 ^ (m + n).\n        (G1 \\<Otimes> G2) $$ (i, k) * cnj ((G1 \\<Otimes> G2) $$ (j, k)))", "using assms index_matrix_prod[of \"i\" \"(G1 \\<Otimes> G2)\" \"j\" \"(G1 \\<Otimes> G2)\\<^sup>\\<dagger>\"] dagger_def\ndim_row_of_tensor_gate tensor_gate_sqr_mat"], ["proof (prove)\nusing this:\n  gate m G1\n  gate n G2\n  i < dim_row (1\\<^sub>m (dim_col G1 * dim_col G2))\n  j < dim_col (1\\<^sub>m (dim_col G1 * dim_col G2))\n  \\<lbrakk>i < dim_row (G1 \\<Otimes> G2);\n   j < dim_col G1 \\<Otimes> G2\\<^sup>\\<dagger>;\n   dim_col (G1 \\<Otimes> G2) =\n   dim_row G1 \\<Otimes> G2\\<^sup>\\<dagger>\\<rbrakk>\n  \\<Longrightarrow> ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$\n                    (i, j) =\n                    (\\<Sum>k<dim_row G1 \\<Otimes> G2\\<^sup>\\<dagger>.\n                        (G1 \\<Otimes> G2) $$ (i, k) *\n                        G1 \\<Otimes> G2\\<^sup>\\<dagger> $$ (k, j))\n  ?M\\<^sup>\\<dagger> \\<equiv>\n  Matrix.mat (dim_col ?M) (dim_row ?M) (\\<lambda>(i, j). cnj (?M $$ (j, i)))\n  \\<lbrakk>gate ?m ?G1.0; gate ?n ?G2.0\\<rbrakk>\n  \\<Longrightarrow> dim_row (?G1.0 \\<Otimes> ?G2.0) = 2 ^ (?m + ?n)\n  \\<lbrakk>gate ?m ?G1.0; gate ?n ?G2.0\\<rbrakk>\n  \\<Longrightarrow> square_mat (?G1.0 \\<Otimes> ?G2.0)\n\ngoal (1 subgoal):\n 1. ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n    (\\<Sum>k<2 ^ (m + n).\n        (G1 \\<Otimes> G2) $$ (i, k) * cnj ((G1 \\<Otimes> G2) $$ (j, k)))", "by simp"], ["proof (state)\nthis:\n  ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n  (\\<Sum>k<2 ^ (m + n).\n      (G1 \\<Otimes> G2) $$ (i, k) * cnj ((G1 \\<Otimes> G2) $$ (j, k)))\n\ngoal (1 subgoal):\n 1. ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Sum>k<2 ^ (m + n).\n      (G1 \\<Otimes> G2) $$ (i, k) * cnj ((G1 \\<Otimes> G2) $$ (j, k))) =\n  (\\<Sum>k<2 ^ m. G1 $$ (i div 2 ^ n, k) * cnj (G1 $$ (j div 2 ^ n, k))) *\n  (\\<Sum>k<2 ^ n. G2 $$ (i mod 2 ^ n, k) * cnj (G2 $$ (j mod 2 ^ n, k)))\n  ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n  (\\<Sum>k<2 ^ (m + n).\n      (G1 \\<Otimes> G2) $$ (i, k) * cnj ((G1 \\<Otimes> G2) $$ (j, k)))", "have \"((G1 \\<Otimes> G2) * ((G1 \\<Otimes> G2)\\<^sup>\\<dagger>)) $$ (i,j) = \n             (\\<Sum>k<2^m. G1 $$ (i div 2^n, k) * cnj(G1 $$ (j div 2^n, k))) * \n             (\\<Sum>k<2^n. G2 $$ (i mod 2^n, k) * cnj(G2 $$ (j mod 2^n, k)))\""], ["proof (prove)\nusing this:\n  (\\<Sum>k<2 ^ (m + n).\n      (G1 \\<Otimes> G2) $$ (i, k) * cnj ((G1 \\<Otimes> G2) $$ (j, k))) =\n  (\\<Sum>k<2 ^ m. G1 $$ (i div 2 ^ n, k) * cnj (G1 $$ (j div 2 ^ n, k))) *\n  (\\<Sum>k<2 ^ n. G2 $$ (i mod 2 ^ n, k) * cnj (G2 $$ (j mod 2 ^ n, k)))\n  ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n  (\\<Sum>k<2 ^ (m + n).\n      (G1 \\<Otimes> G2) $$ (i, k) * cnj ((G1 \\<Otimes> G2) $$ (j, k)))\n\ngoal (1 subgoal):\n 1. ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n    (\\<Sum>k<2 ^ m. G1 $$ (i div 2 ^ n, k) * cnj (G1 $$ (j div 2 ^ n, k))) *\n    (\\<Sum>k<2 ^ n. G2 $$ (i mod 2 ^ n, k) * cnj (G2 $$ (j mod 2 ^ n, k)))", "by simp"], ["proof (state)\nthis:\n  ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n  (\\<Sum>k<2 ^ m. G1 $$ (i div 2 ^ n, k) * cnj (G1 $$ (j div 2 ^ n, k))) *\n  (\\<Sum>k<2 ^ n. G2 $$ (i mod 2 ^ n, k) * cnj (G2 $$ (j mod 2 ^ n, k)))\n\ngoal (1 subgoal):\n 1. ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "moreover"], ["proof (state)\nthis:\n  ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n  (\\<Sum>k<2 ^ m. G1 $$ (i div 2 ^ n, k) * cnj (G1 $$ (j div 2 ^ n, k))) *\n  (\\<Sum>k<2 ^ n. G2 $$ (i mod 2 ^ n, k) * cnj (G2 $$ (j mod 2 ^ n, k)))\n\ngoal (1 subgoal):\n 1. ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "have \"(\\<Sum>k<2^m. G1 $$ (i div 2^n, k) * cnj(G1 $$ (j div 2^n, k))) = (G1 * (G1\\<^sup>\\<dagger>)) $$ (i div 2^n, j div 2^n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k<2 ^ m. G1 $$ (i div 2 ^ n, k) * cnj (G1 $$ (j div 2 ^ n, k))) =\n    (G1 * G1\\<^sup>\\<dagger>) $$ (i div 2 ^ n, j div 2 ^ n)", "using assms gate_def dagger_def index_matrix_prod[of \"i div 2^n\" \"G1\" \"j div 2^n\" \"G1\\<^sup>\\<dagger>\"]"], ["proof (prove)\nusing this:\n  gate m G1\n  gate n G2\n  i < dim_row (1\\<^sub>m (dim_col G1 * dim_col G2))\n  j < dim_col (1\\<^sub>m (dim_col G1 * dim_col G2))\n  gate ?n ?A \\<equiv>\n  dim_row ?A = 2 ^ ?n \\<and> square_mat ?A \\<and> unitary ?A\n  ?M\\<^sup>\\<dagger> \\<equiv>\n  Matrix.mat (dim_col ?M) (dim_row ?M) (\\<lambda>(i, j). cnj (?M $$ (j, i)))\n  \\<lbrakk>i div 2 ^ n < dim_row G1;\n   j div 2 ^ n < dim_col G1\\<^sup>\\<dagger>;\n   dim_col G1 = dim_row G1\\<^sup>\\<dagger>\\<rbrakk>\n  \\<Longrightarrow> (G1 * G1\\<^sup>\\<dagger>) $$\n                    (i div 2 ^ n, j div 2 ^ n) =\n                    (\\<Sum>k<dim_row G1\\<^sup>\\<dagger>.\n                        G1 $$ (i div 2 ^ n, k) *\n                        G1\\<^sup>\\<dagger> $$ (k, j div 2 ^ n))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k<2 ^ m. G1 $$ (i div 2 ^ n, k) * cnj (G1 $$ (j div 2 ^ n, k))) =\n    (G1 * G1\\<^sup>\\<dagger>) $$ (i div 2 ^ n, j div 2 ^ n)", "by (simp add: less_mult_imp_div_less power_add)"], ["proof (state)\nthis:\n  (\\<Sum>k<2 ^ m. G1 $$ (i div 2 ^ n, k) * cnj (G1 $$ (j div 2 ^ n, k))) =\n  (G1 * G1\\<^sup>\\<dagger>) $$ (i div 2 ^ n, j div 2 ^ n)\n\ngoal (1 subgoal):\n 1. ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "moreover"], ["proof (state)\nthis:\n  (\\<Sum>k<2 ^ m. G1 $$ (i div 2 ^ n, k) * cnj (G1 $$ (j div 2 ^ n, k))) =\n  (G1 * G1\\<^sup>\\<dagger>) $$ (i div 2 ^ n, j div 2 ^ n)\n\ngoal (1 subgoal):\n 1. ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "have \"\\<dots> = 1\\<^sub>m(2^m) $$ (i div 2^n, j div 2^n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (G1 * G1\\<^sup>\\<dagger>) $$ (i div 2 ^ n, j div 2 ^ n) =\n    1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n)", "using assms(1,2) gate_def unitary_def"], ["proof (prove)\nusing this:\n  gate m G1\n  gate n G2\n  gate ?n ?A \\<equiv>\n  dim_row ?A = 2 ^ ?n \\<and> square_mat ?A \\<and> unitary ?A\n  unitary ?M \\<equiv>\n  ?M\\<^sup>\\<dagger> * ?M = 1\\<^sub>m (dim_col ?M) \\<and>\n  ?M * ?M\\<^sup>\\<dagger> = 1\\<^sub>m (dim_row ?M)\n\ngoal (1 subgoal):\n 1. (G1 * G1\\<^sup>\\<dagger>) $$ (i div 2 ^ n, j div 2 ^ n) =\n    1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n)", "by simp"], ["proof (state)\nthis:\n  (G1 * G1\\<^sup>\\<dagger>) $$ (i div 2 ^ n, j div 2 ^ n) =\n  1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n)\n\ngoal (1 subgoal):\n 1. ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "moreover"], ["proof (state)\nthis:\n  (G1 * G1\\<^sup>\\<dagger>) $$ (i div 2 ^ n, j div 2 ^ n) =\n  1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n)\n\ngoal (1 subgoal):\n 1. ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "have \"(\\<Sum>k<2^n. G2 $$ (i mod 2^n, k) * cnj(G2 $$ (j mod 2^n, k))) = (G2 * (G2\\<^sup>\\<dagger>)) $$ (i mod 2^n, j mod 2^n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k<2 ^ n. G2 $$ (i mod 2 ^ n, k) * cnj (G2 $$ (j mod 2 ^ n, k))) =\n    (G2 * G2\\<^sup>\\<dagger>) $$ (i mod 2 ^ n, j mod 2 ^ n)", "using assms(1,2) gate_def dagger_def index_matrix_prod[of \"i mod 2^n\" \"G2\" \"j mod 2^n\" \"G2\\<^sup>\\<dagger>\"]"], ["proof (prove)\nusing this:\n  gate m G1\n  gate n G2\n  gate ?n ?A \\<equiv>\n  dim_row ?A = 2 ^ ?n \\<and> square_mat ?A \\<and> unitary ?A\n  ?M\\<^sup>\\<dagger> \\<equiv>\n  Matrix.mat (dim_col ?M) (dim_row ?M) (\\<lambda>(i, j). cnj (?M $$ (j, i)))\n  \\<lbrakk>i mod 2 ^ n < dim_row G2;\n   j mod 2 ^ n < dim_col G2\\<^sup>\\<dagger>;\n   dim_col G2 = dim_row G2\\<^sup>\\<dagger>\\<rbrakk>\n  \\<Longrightarrow> (G2 * G2\\<^sup>\\<dagger>) $$\n                    (i mod 2 ^ n, j mod 2 ^ n) =\n                    (\\<Sum>k<dim_row G2\\<^sup>\\<dagger>.\n                        G2 $$ (i mod 2 ^ n, k) *\n                        G2\\<^sup>\\<dagger> $$ (k, j mod 2 ^ n))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k<2 ^ n. G2 $$ (i mod 2 ^ n, k) * cnj (G2 $$ (j mod 2 ^ n, k))) =\n    (G2 * G2\\<^sup>\\<dagger>) $$ (i mod 2 ^ n, j mod 2 ^ n)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k<2 ^ n. G2 $$ (i mod 2 ^ n, k) * cnj (G2 $$ (j mod 2 ^ n, k))) =\n  (G2 * G2\\<^sup>\\<dagger>) $$ (i mod 2 ^ n, j mod 2 ^ n)\n\ngoal (1 subgoal):\n 1. ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "moreover"], ["proof (state)\nthis:\n  (\\<Sum>k<2 ^ n. G2 $$ (i mod 2 ^ n, k) * cnj (G2 $$ (j mod 2 ^ n, k))) =\n  (G2 * G2\\<^sup>\\<dagger>) $$ (i mod 2 ^ n, j mod 2 ^ n)\n\ngoal (1 subgoal):\n 1. ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "have \"\\<dots> = 1\\<^sub>m(2^n) $$ (i mod 2^n, j mod 2^n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (G2 * G2\\<^sup>\\<dagger>) $$ (i mod 2 ^ n, j mod 2 ^ n) =\n    1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n)", "using assms(1,2) gate_def unitary_def"], ["proof (prove)\nusing this:\n  gate m G1\n  gate n G2\n  gate ?n ?A \\<equiv>\n  dim_row ?A = 2 ^ ?n \\<and> square_mat ?A \\<and> unitary ?A\n  unitary ?M \\<equiv>\n  ?M\\<^sup>\\<dagger> * ?M = 1\\<^sub>m (dim_col ?M) \\<and>\n  ?M * ?M\\<^sup>\\<dagger> = 1\\<^sub>m (dim_row ?M)\n\ngoal (1 subgoal):\n 1. (G2 * G2\\<^sup>\\<dagger>) $$ (i mod 2 ^ n, j mod 2 ^ n) =\n    1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n)", "by simp"], ["proof (state)\nthis:\n  (G2 * G2\\<^sup>\\<dagger>) $$ (i mod 2 ^ n, j mod 2 ^ n) =\n  1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n)\n\ngoal (1 subgoal):\n 1. ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "ultimately"], ["proof (chain)\npicking this:\n  ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n  (\\<Sum>k<2 ^ m. G1 $$ (i div 2 ^ n, k) * cnj (G1 $$ (j div 2 ^ n, k))) *\n  (\\<Sum>k<2 ^ n. G2 $$ (i mod 2 ^ n, k) * cnj (G2 $$ (j mod 2 ^ n, k)))\n  (\\<Sum>k<2 ^ m. G1 $$ (i div 2 ^ n, k) * cnj (G1 $$ (j div 2 ^ n, k))) =\n  (G1 * G1\\<^sup>\\<dagger>) $$ (i div 2 ^ n, j div 2 ^ n)\n  (G1 * G1\\<^sup>\\<dagger>) $$ (i div 2 ^ n, j div 2 ^ n) =\n  1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n)\n  (\\<Sum>k<2 ^ n. G2 $$ (i mod 2 ^ n, k) * cnj (G2 $$ (j mod 2 ^ n, k))) =\n  (G2 * G2\\<^sup>\\<dagger>) $$ (i mod 2 ^ n, j mod 2 ^ n)\n  (G2 * G2\\<^sup>\\<dagger>) $$ (i mod 2 ^ n, j mod 2 ^ n) =\n  1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n)", "have \"((G1 \\<Otimes> G2) * ((G1 \\<Otimes> G2)\\<^sup>\\<dagger>)) $$ (i,j) = 1\\<^sub>m(2^m) $$ (i div 2^n, j div 2^n) * 1\\<^sub>m(2^n) $$ (i mod 2^n, j mod 2^n)\""], ["proof (prove)\nusing this:\n  ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n  (\\<Sum>k<2 ^ m. G1 $$ (i div 2 ^ n, k) * cnj (G1 $$ (j div 2 ^ n, k))) *\n  (\\<Sum>k<2 ^ n. G2 $$ (i mod 2 ^ n, k) * cnj (G2 $$ (j mod 2 ^ n, k)))\n  (\\<Sum>k<2 ^ m. G1 $$ (i div 2 ^ n, k) * cnj (G1 $$ (j div 2 ^ n, k))) =\n  (G1 * G1\\<^sup>\\<dagger>) $$ (i div 2 ^ n, j div 2 ^ n)\n  (G1 * G1\\<^sup>\\<dagger>) $$ (i div 2 ^ n, j div 2 ^ n) =\n  1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n)\n  (\\<Sum>k<2 ^ n. G2 $$ (i mod 2 ^ n, k) * cnj (G2 $$ (j mod 2 ^ n, k))) =\n  (G2 * G2\\<^sup>\\<dagger>) $$ (i mod 2 ^ n, j mod 2 ^ n)\n  (G2 * G2\\<^sup>\\<dagger>) $$ (i mod 2 ^ n, j mod 2 ^ n) =\n  1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n)\n\ngoal (1 subgoal):\n 1. ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n    1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n) *\n    1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n)", "by simp"], ["proof (state)\nthis:\n  ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n  1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n) *\n  1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n)\n\ngoal (1 subgoal):\n 1. ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "thus ?thesis"], ["proof (prove)\nusing this:\n  ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n  1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n) *\n  1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n)\n\ngoal (1 subgoal):\n 1. ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "using assms gate_def index_one_mat_div_mod[of \"i\" \"m\" \"n\" \"j\"]"], ["proof (prove)\nusing this:\n  ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n  1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n) *\n  1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n)\n  gate m G1\n  gate n G2\n  i < dim_row (1\\<^sub>m (dim_col G1 * dim_col G2))\n  j < dim_col (1\\<^sub>m (dim_col G1 * dim_col G2))\n  gate ?n ?A \\<equiv>\n  dim_row ?A = 2 ^ ?n \\<and> square_mat ?A \\<and> unitary ?A\n  \\<lbrakk>i < 2 ^ (m + n); j < 2 ^ (m + n)\\<rbrakk>\n  \\<Longrightarrow> 1\\<^sub>m (2 ^ m) $$ (i div 2 ^ n, j div 2 ^ n) *\n                    1\\<^sub>m (2 ^ n) $$ (i mod 2 ^ n, j mod 2 ^ n) =\n                    1\\<^sub>m (2 ^ (m + n)) $$ (i, j)\n\ngoal (1 subgoal):\n 1. ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "by(simp add: power_add)"], ["proof (state)\nthis:\n  ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n  1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tensor_gate_unitary2 [simp]:\n  assumes \"gate m G1\" and \"gate n G2\"\n  shows \"(G1 \\<Otimes> G2) * ((G1 \\<Otimes> G2)\\<^sup>\\<dagger>) = 1\\<^sub>m(dim_col G1 * dim_col G2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger> =\n    1\\<^sub>m (dim_col G1 * dim_col G2)", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (1\\<^sub>m (dim_col G1 * dim_col G2));\n        j < dim_col (1\\<^sub>m (dim_col G1 * dim_col G2))\\<rbrakk>\n       \\<Longrightarrow> ((G1 \\<Otimes> G2) *\n                          G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$\n                         (i, j) =\n                         1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)\n 2. dim_row ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) =\n    dim_row (1\\<^sub>m (dim_col G1 * dim_col G2))\n 3. dim_col ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) =\n    dim_col (1\\<^sub>m (dim_col G1 * dim_col G2))", "show \"dim_row ((G1 \\<Otimes> G2) * ((G1 \\<Otimes> G2)\\<^sup>\\<dagger>)) = dim_row(1\\<^sub>m (dim_col G1 * dim_col G2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) =\n    dim_row (1\\<^sub>m (dim_col G1 * dim_col G2))", "using assms gate_def"], ["proof (prove)\nusing this:\n  gate m G1\n  gate n G2\n  gate ?n ?A \\<equiv>\n  dim_row ?A = 2 ^ ?n \\<and> square_mat ?A \\<and> unitary ?A\n\ngoal (1 subgoal):\n 1. dim_row ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) =\n    dim_row (1\\<^sub>m (dim_col G1 * dim_col G2))", "by simp"], ["proof (state)\nthis:\n  dim_row ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) =\n  dim_row (1\\<^sub>m (dim_col G1 * dim_col G2))\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (1\\<^sub>m (dim_col G1 * dim_col G2));\n        j < dim_col (1\\<^sub>m (dim_col G1 * dim_col G2))\\<rbrakk>\n       \\<Longrightarrow> ((G1 \\<Otimes> G2) *\n                          G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$\n                         (i, j) =\n                         1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)\n 2. dim_col ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) =\n    dim_col (1\\<^sub>m (dim_col G1 * dim_col G2))", "show \"dim_col ((G1 \\<Otimes> G2) * ((G1 \\<Otimes> G2)\\<^sup>\\<dagger>)) = dim_col (1\\<^sub>m(dim_col G1 * dim_col G2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) =\n    dim_col (1\\<^sub>m (dim_col G1 * dim_col G2))", "using assms gate_def"], ["proof (prove)\nusing this:\n  gate m G1\n  gate n G2\n  gate ?n ?A \\<equiv>\n  dim_row ?A = 2 ^ ?n \\<and> square_mat ?A \\<and> unitary ?A\n\ngoal (1 subgoal):\n 1. dim_col ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) =\n    dim_col (1\\<^sub>m (dim_col G1 * dim_col G2))", "by simp"], ["proof (state)\nthis:\n  dim_col ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) =\n  dim_col (1\\<^sub>m (dim_col G1 * dim_col G2))\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (1\\<^sub>m (dim_col G1 * dim_col G2));\n        j < dim_col (1\\<^sub>m (dim_col G1 * dim_col G2))\\<rbrakk>\n       \\<Longrightarrow> ((G1 \\<Otimes> G2) *\n                          G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$\n                         (i, j) =\n                         1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (1\\<^sub>m (dim_col G1 * dim_col G2));\n        j < dim_col (1\\<^sub>m (dim_col G1 * dim_col G2))\\<rbrakk>\n       \\<Longrightarrow> ((G1 \\<Otimes> G2) *\n                          G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$\n                         (i, j) =\n                         1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "assume \"i < dim_row (1\\<^sub>m (dim_col G1 * dim_col G2))\" and \"j < dim_col (1\\<^sub>m (dim_col G1 * dim_col G2))\""], ["proof (state)\nthis:\n  i < dim_row (1\\<^sub>m (dim_col G1 * dim_col G2))\n  j < dim_col (1\\<^sub>m (dim_col G1 * dim_col G2))\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (1\\<^sub>m (dim_col G1 * dim_col G2));\n        j < dim_col (1\\<^sub>m (dim_col G1 * dim_col G2))\\<rbrakk>\n       \\<Longrightarrow> ((G1 \\<Otimes> G2) *\n                          G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$\n                         (i, j) =\n                         1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "thus \"((G1 \\<Otimes> G2) * ((G1 \\<Otimes> G2)\\<^sup>\\<dagger>)) $$ (i, j) = 1\\<^sub>m(dim_col G1 * dim_col G2) $$ (i, j)\""], ["proof (prove)\nusing this:\n  i < dim_row (1\\<^sub>m (dim_col G1 * dim_col G2))\n  j < dim_col (1\\<^sub>m (dim_col G1 * dim_col G2))\n\ngoal (1 subgoal):\n 1. ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "using assms index_tensor_gate_unitary2"], ["proof (prove)\nusing this:\n  i < dim_row (1\\<^sub>m (dim_col G1 * dim_col G2))\n  j < dim_col (1\\<^sub>m (dim_col G1 * dim_col G2))\n  gate m G1\n  gate n G2\n  \\<lbrakk>gate ?m ?G1.0; gate ?n ?G2.0;\n   ?i < dim_row (1\\<^sub>m (dim_col ?G1.0 * dim_col ?G2.0));\n   ?j < dim_col (1\\<^sub>m (dim_col ?G1.0 * dim_col ?G2.0))\\<rbrakk>\n  \\<Longrightarrow> ((?G1.0 \\<Otimes> ?G2.0) *\n                     ?G1.0 \\<Otimes> ?G2.0\\<^sup>\\<dagger>) $$\n                    (?i, ?j) =\n                    1\\<^sub>m (dim_col ?G1.0 * dim_col ?G2.0) $$ (?i, ?j)\n\ngoal (1 subgoal):\n 1. ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n    1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)", "by simp"], ["proof (state)\nthis:\n  ((G1 \\<Otimes> G2) * G1 \\<Otimes> G2\\<^sup>\\<dagger>) $$ (i, j) =\n  1\\<^sub>m (dim_col G1 * dim_col G2) $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tensor_gate [simp]:\n  assumes \"gate m G1\" and \"gate n G2\"\n  shows \"gate (m + n) (G1 \\<Otimes> G2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gate (m + n) (G1 \\<Otimes> G2)", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. dim_row (G1 \\<Otimes> G2) = 2 ^ (m + n)\n 2. square_mat (G1 \\<Otimes> G2)\n 3. unitary (G1 \\<Otimes> G2)", "show \"dim_row (G1 \\<Otimes> G2) = 2^(m+n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row (G1 \\<Otimes> G2) = 2 ^ (m + n)", "using assms dim_row_tensor_mat gate.dim_row"], ["proof (prove)\nusing this:\n  gate m G1\n  gate n G2\n  dim_row (?A \\<Otimes> ?B) = dim_row ?A * dim_row ?B\n  gate ?n ?A \\<Longrightarrow> dim_row ?A = 2 ^ ?n\n\ngoal (1 subgoal):\n 1. dim_row (G1 \\<Otimes> G2) = 2 ^ (m + n)", "by (simp add: power_add)"], ["proof (state)\nthis:\n  dim_row (G1 \\<Otimes> G2) = 2 ^ (m + n)\n\ngoal (2 subgoals):\n 1. square_mat (G1 \\<Otimes> G2)\n 2. unitary (G1 \\<Otimes> G2)", "show \"square_mat (G1 \\<Otimes> G2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. square_mat (G1 \\<Otimes> G2)", "using assms gate.square_mat"], ["proof (prove)\nusing this:\n  gate m G1\n  gate n G2\n  gate ?n ?A \\<Longrightarrow> square_mat ?A\n\ngoal (1 subgoal):\n 1. square_mat (G1 \\<Otimes> G2)", "by simp"], ["proof (state)\nthis:\n  square_mat (G1 \\<Otimes> G2)\n\ngoal (1 subgoal):\n 1. unitary (G1 \\<Otimes> G2)", "thus \"unitary (G1 \\<Otimes> G2)\""], ["proof (prove)\nusing this:\n  square_mat (G1 \\<Otimes> G2)\n\ngoal (1 subgoal):\n 1. unitary (G1 \\<Otimes> G2)", "using assms unitary_def"], ["proof (prove)\nusing this:\n  square_mat (G1 \\<Otimes> G2)\n  gate m G1\n  gate n G2\n  unitary ?M \\<equiv>\n  ?M\\<^sup>\\<dagger> * ?M = 1\\<^sub>m (dim_col ?M) \\<and>\n  ?M * ?M\\<^sup>\\<dagger> = 1\\<^sub>m (dim_row ?M)\n\ngoal (1 subgoal):\n 1. unitary (G1 \\<Otimes> G2)", "by simp"], ["proof (state)\nthis:\n  unitary (G1 \\<Otimes> G2)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}