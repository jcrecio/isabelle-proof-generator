{"file_name": "/home/qj213/afp-2021-10-22/thys/No_FTL_observers/SpecRel.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/No_FTL_observers", "problem_names": ["lemma lemZEG:\n    shows \"z - e = g - e + (z - g)\"", "lemma noFTLObserver:\n  assumes iobm:  \"IOb m\"\n  and     iobk:  \"IOb k\"\n  and     mke:   \"m sees k at e\"\n  and     mkf:   \"m sees k at f\"\n  and     enotf: \"e \\<noteq> f\"\nshows     \"space2 e f \\<le> (c m * c m) * time2 e f\""], "translations": [["", "lemma lemZEG:\n    shows \"z - e = g - e + (z - g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z - e = g - e + (z - g)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. z - e = g - e + (z - g)", "have  \"g - e + (z - g) = (g - e + z) - g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g - e + (z - g) = g - e + z - g", "by (rule add_diff_eq)"], ["proof (state)\nthis:\n  g - e + (z - g) = g - e + z - g\n\ngoal (1 subgoal):\n 1. z - e = g - e + (z - g)", "also"], ["proof (state)\nthis:\n  g - e + (z - g) = g - e + z - g\n\ngoal (1 subgoal):\n 1. z - e = g - e + (z - g)", "have \"(g - e + z) - g = (-e + z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g - e + z - g = - e + z", "by (metis local.diff_add_cancel \n                local.ring_normalization_rules(2) \n                local.semiring_normalization_rules(24) \n                local.semiring_normalization_rules(25))"], ["proof (state)\nthis:\n  g - e + z - g = - e + z\n\ngoal (1 subgoal):\n 1. z - e = g - e + (z - g)", "thus ?thesis"], ["proof (prove)\nusing this:\n  g - e + z - g = - e + z\n\ngoal (1 subgoal):\n 1. z - e = g - e + (z - g)", "by (simp add: calculation)"], ["proof (state)\nthis:\n  z - e = g - e + (z - g)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma noFTLObserver:\n  assumes iobm:  \"IOb m\"\n  and     iobk:  \"IOb k\"\n  and     mke:   \"m sees k at e\"\n  and     mkf:   \"m sees k at f\"\n  and     enotf: \"e \\<noteq> f\"\nshows     \"space2 e f \\<le> (c m * c m) * time2 e f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "(* by reductio *)\n\n(* Step 1: Suppose k is going FTL from m's viewpoint. *)"], ["proof (state)\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "assume converse: \"space2 e f > (c m * c m) * time2 e f\""], ["proof (state)\nthis:\n  c m * c m * time2 e f < space2 e f\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "(* Step 2: Consider the m-lightcone at e *)"], ["proof (state)\nthis:\n  c m * c m * time2 e f < space2 e f\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "define eCone where \"eCone = mkCone e (c m)\""], ["proof (state)\nthis:\n  eCone = mkCone e (c m)\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have e_on_econe: \"onCone e eCone\""], ["proof (prove)\ngoal (1 subgoal):\n 1. onCone e eCone", "by (simp add: eCone_def)"], ["proof (state)\nthis:\n  onCone e eCone\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "(* Step 3: There is a tangent plane for eCone containing both e and f,\n   defined using some point g on the tangent line  *)"], ["proof (state)\nthis:\n  onCone e eCone\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have e_is_vertex: \"e = vertex eCone\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e = vertex eCone", "by (simp add: eCone_def)"], ["proof (state)\nthis:\n  e = vertex eCone\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have cm_is_slope: \"c m = slope eCone\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c m = slope eCone", "by (simp add: eCone_def)"], ["proof (state)\nthis:\n  c m = slope eCone\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence outside: \"outsideCone f eCone\""], ["proof (prove)\nusing this:\n  c m = slope eCone\n\ngoal (1 subgoal):\n 1. outsideCone f eCone", "by (metis (lifting) e_is_vertex cm_is_slope converse outsideCone.simps)"], ["proof (state)\nthis:\n  outsideCone f eCone\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have \"outsideCone f eCone \n    \\<longrightarrow> (\\<exists>x.(onCone x eCone \\<and> x \\<noteq> vertex eCone \\<and> inPlane f (tangentPlane x eCone)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. outsideCone f eCone \\<longrightarrow>\n    (\\<exists>x.\n        onCone x eCone \\<and>\n        x \\<noteq> vertex eCone \\<and> inPlane f (tangentPlane x eCone))", "by (rule AxParallelConesE)"], ["proof (state)\nthis:\n  outsideCone f eCone \\<longrightarrow>\n  (\\<exists>x.\n      onCone x eCone \\<and>\n      x \\<noteq> vertex eCone \\<and> inPlane f (tangentPlane x eCone))\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence tplane_exists: \"\\<exists>x.(onCone x eCone \\<and> x \\<noteq> vertex eCone \\<and> inPlane f (tangentPlane x eCone))\""], ["proof (prove)\nusing this:\n  outsideCone f eCone \\<longrightarrow>\n  (\\<exists>x.\n      onCone x eCone \\<and>\n      x \\<noteq> vertex eCone \\<and> inPlane f (tangentPlane x eCone))\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       onCone x eCone \\<and>\n       x \\<noteq> vertex eCone \\<and> inPlane f (tangentPlane x eCone)", "by (metis outside)"], ["proof (state)\nthis:\n  \\<exists>x.\n     onCone x eCone \\<and>\n     x \\<noteq> vertex eCone \\<and> inPlane f (tangentPlane x eCone)\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "then"], ["proof (chain)\npicking this:\n  \\<exists>x.\n     onCone x eCone \\<and>\n     x \\<noteq> vertex eCone \\<and> inPlane f (tangentPlane x eCone)", "obtain g where g_props: \"(onCone g eCone \\<and> g \\<noteq> vertex eCone \\<and> inPlane f (tangentPlane g eCone))\""], ["proof (prove)\nusing this:\n  \\<exists>x.\n     onCone x eCone \\<and>\n     x \\<noteq> vertex eCone \\<and> inPlane f (tangentPlane x eCone)\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        onCone g eCone \\<and>\n        g \\<noteq> vertex eCone \\<and>\n        inPlane f (tangentPlane g eCone) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  onCone g eCone \\<and>\n  g \\<noteq> vertex eCone \\<and> inPlane f (tangentPlane g eCone)\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have g_on_eCone: \"onCone g eCone\""], ["proof (prove)\ngoal (1 subgoal):\n 1. onCone g eCone", "by (metis g_props)"], ["proof (state)\nthis:\n  onCone g eCone\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have g_not_vertex: \"g \\<noteq> vertex eCone\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<noteq> vertex eCone", "by (metis g_props)"], ["proof (state)\nthis:\n  g \\<noteq> vertex eCone\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "define tplane where \"tplane = tangentPlane g eCone\""], ["proof (state)\nthis:\n  tplane = tangentPlane g eCone\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have e_in_tplane: \"inPlane e tplane\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inPlane e tplane", "by (metis AxTangentVertex e_is_vertex tplane_def)"], ["proof (state)\nthis:\n  inPlane e tplane\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have f_in_tplane: \"inPlane f tplane\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inPlane f tplane", "by (metis g_props tplane_def)"], ["proof (state)\nthis:\n  inPlane f tplane\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have g_in_tplane: \"inPlane g tplane\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inPlane g tplane", "by (metis lemPlaneContainsBasePoint tplane_def AxTangentBase)"], ["proof (state)\nthis:\n  inPlane g tplane\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "(* We'll need to show that e-f-g aren't collinear *)"], ["proof (state)\nthis:\n  inPlane g tplane\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have \"(onCone g eCone) \\<longrightarrow>\n                  ((inPlane f (tangentPlane g eCone) \\<and> onCone f eCone) \n                                                           \\<longleftrightarrow> collinear (vertex eCone) g f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. onCone g eCone \\<longrightarrow>\n    (inPlane f (tangentPlane g eCone) \\<and> onCone f eCone) =\n    collinear (vertex eCone) g f", "by (metis AxConeTangent)"], ["proof (state)\nthis:\n  onCone g eCone \\<longrightarrow>\n  (inPlane f (tangentPlane g eCone) \\<and> onCone f eCone) =\n  collinear (vertex eCone) g f\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence axconetangent: \"collinear e g f \\<longrightarrow> onCone f eCone\""], ["proof (prove)\nusing this:\n  onCone g eCone \\<longrightarrow>\n  (inPlane f (tangentPlane g eCone) \\<and> onCone f eCone) =\n  collinear (vertex eCone) g f\n\ngoal (1 subgoal):\n 1. collinear e g f \\<longrightarrow> onCone f eCone", "by (metis g_on_eCone e_is_vertex)"], ["proof (state)\nthis:\n  collinear e g f \\<longrightarrow> onCone f eCone\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have \"\\<not>(onCone f eCone)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> onCone f eCone", "by (metis outside lemOutsideNotOnCone)"], ["proof (state)\nthis:\n  \\<not> onCone f eCone\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence g_not_collinear: \"\\<not> (collinear e g f)\""], ["proof (prove)\nusing this:\n  \\<not> onCone f eCone\n\ngoal (1 subgoal):\n 1. \\<not> collinear e g f", "by (metis axconetangent)"], ["proof (state)\nthis:\n  \\<not> collinear e g f\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "(* Step 4: k considers wvte and wvtf to be distinct points on the t-axis, and wvtg is off \n           k's t-axis. *)"], ["proof (state)\nthis:\n  \\<not> collinear e g f\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "define wvte where \"wvte = wvt k m e\""], ["proof (state)\nthis:\n  wvte = wvt k m e\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "define wvtf where \"wvtf = wvt k m f\""], ["proof (state)\nthis:\n  wvtf = wvt k m f\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "define wvtg where \"wvtg = wvt k m g\""], ["proof (state)\nthis:\n  wvtg = wvt k m g\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have \"W k k wvte\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k sees k at wvte", "by (metis wvte_def AxWVT mke iobm iobk)"], ["proof (state)\nthis:\n  k sees k at wvte\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence wvte_onAxis: \"onAxisT wvte\""], ["proof (prove)\nusing this:\n  k sees k at wvte\n\ngoal (1 subgoal):\n 1. onAxisT wvte", "by (metis AxSelf iobk)"], ["proof (state)\nthis:\n  onAxisT wvte\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have \"W k k wvtf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k sees k at wvtf", "by (metis wvtf_def AxWVT mkf iobm iobk)"], ["proof (state)\nthis:\n  k sees k at wvtf\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence wvtf_onAxis: \"onAxisT wvtf\""], ["proof (prove)\nusing this:\n  k sees k at wvtf\n\ngoal (1 subgoal):\n 1. onAxisT wvtf", "by (metis AxSelf iobk)"], ["proof (state)\nthis:\n  onAxisT wvtf\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have wvte_inv: \"e = wvt m k wvte\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e = wvt m k wvte", "by (metis AxWVTSym iobk iobm wvte_def)"], ["proof (state)\nthis:\n  e = wvt m k wvte\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have wvtf_inv: \"f = wvt m k wvtf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f = wvt m k wvtf", "by (metis AxWVTSym iobk iobm wvtf_def)"], ["proof (state)\nthis:\n  f = wvt m k wvtf\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have wvtg_inv: \"g = wvt m k wvtg\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g = wvt m k wvtg", "by (metis AxWVTSym iobk iobm wvtg_def)"], ["proof (state)\nthis:\n  g = wvt m k wvtg\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have e_not_g: \"e \\<noteq> g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e \\<noteq> g", "by (metis e_is_vertex g_not_vertex)"], ["proof (state)\nthis:\n  e \\<noteq> g\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have f_not_g: \"f \\<noteq> g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<noteq> g", "by (metis outside lemOutsideNotOnCone g_on_eCone)"], ["proof (state)\nthis:\n  f \\<noteq> g\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have wvt_e_not_f: \"wvte \\<noteq> wvtf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wvte \\<noteq> wvtf", "by (metis wvte_inv wvtf_inv enotf)"], ["proof (state)\nthis:\n  wvte \\<noteq> wvtf\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have wvt_f_not_g: \"wvtf \\<noteq> wvtg\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wvtf \\<noteq> wvtg", "by (metis wvtf_inv wvtg_inv f_not_g)"], ["proof (state)\nthis:\n  wvtf \\<noteq> wvtg\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have wvt_g_not_e: \"wvtg \\<noteq> wvte\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wvtg \\<noteq> wvte", "by (metis wvtg_inv wvte_inv e_not_g)"], ["proof (state)\nthis:\n  wvtg \\<noteq> wvte\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have if_g_onAxis:  \"onAxisT wvtg \\<longrightarrow> collinear wvte wvtg wvtf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. onAxisT wvtg \\<longrightarrow> collinear wvte wvtg wvtf", "by (metis lemAxisIsLine wvte_onAxis wvtf_onAxis wvt_e_not_f wvt_f_not_g wvt_g_not_e)"], ["proof (state)\nthis:\n  onAxisT wvtg \\<longrightarrow> collinear wvte wvtg wvtf\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have \"collinear wvte wvtg wvtf \\<longrightarrow> collinear e g f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. collinear wvte wvtg wvtf \\<longrightarrow> collinear e g f", "by (metis AxLines iobm iobk wvte_inv wvtf_inv wvtg_inv)"], ["proof (state)\nthis:\n  collinear wvte wvtg wvtf \\<longrightarrow> collinear e g f\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence \"onAxisT wvtg \\<longrightarrow> collinear e g f\""], ["proof (prove)\nusing this:\n  collinear wvte wvtg wvtf \\<longrightarrow> collinear e g f\n\ngoal (1 subgoal):\n 1. onAxisT wvtg \\<longrightarrow> collinear e g f", "by (metis if_g_onAxis)"], ["proof (state)\nthis:\n  onAxisT wvtg \\<longrightarrow> collinear e g f\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence wvtg_offAxis: \"\\<not> (onAxisT wvtg)\""], ["proof (prove)\nusing this:\n  onAxisT wvtg \\<longrightarrow> collinear e g f\n\ngoal (1 subgoal):\n 1. \\<not> onAxisT wvtg", "by (metis g_not_collinear)"], ["proof (state)\nthis:\n  \\<not> onAxisT wvtg\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "(* Step 5: There is a point z with various contradictory properties. *)"], ["proof (state)\nthis:\n  \\<not> onAxisT wvtg\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have \"\\<forall>s.(\\<exists>p.( collinear wvte wvtg p \\<and> (space2 p wvtf = (s*s)*time2 p wvtf)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s.\n       \\<exists>p.\n          collinear wvte wvtg p \\<and> space2 p wvtf = s * s * time2 p wvtf", "by (metis AxSlopedLineInVerticalPlane wvte_onAxis wvtf_onAxis wvtg_offAxis wvt_e_not_f)"], ["proof (state)\nthis:\n  \\<forall>s.\n     \\<exists>p.\n        collinear wvte wvtg p \\<and> space2 p wvtf = s * s * time2 p wvtf\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence exists_wvtz: \"\\<exists>p.( collinear wvte wvtg p \\<and> (space2 p wvtf = (c k * c k)*time2 p wvtf))\""], ["proof (prove)\nusing this:\n  \\<forall>s.\n     \\<exists>p.\n        collinear wvte wvtg p \\<and> space2 p wvtf = s * s * time2 p wvtf\n\ngoal (1 subgoal):\n 1. \\<exists>p.\n       collinear wvte wvtg p \\<and> space2 p wvtf = c k * c k * time2 p wvtf", "by metis"], ["proof (state)\nthis:\n  \\<exists>p.\n     collinear wvte wvtg p \\<and> space2 p wvtf = c k * c k * time2 p wvtf\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "then"], ["proof (chain)\npicking this:\n  \\<exists>p.\n     collinear wvte wvtg p \\<and> space2 p wvtf = c k * c k * time2 p wvtf", "obtain wvtz where \n    wvtz_props: \"collinear wvte wvtg wvtz \\<and> (space2 wvtz wvtf = (c k * c k)*time2 wvtz wvtf)\""], ["proof (prove)\nusing this:\n  \\<exists>p.\n     collinear wvte wvtg p \\<and> space2 p wvtf = c k * c k * time2 p wvtf\n\ngoal (1 subgoal):\n 1. (\\<And>wvtz.\n        collinear wvte wvtg wvtz \\<and>\n        space2 wvtz wvtf = c k * c k * time2 wvtz wvtf \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  collinear wvte wvtg wvtz \\<and>\n  space2 wvtz wvtf = c k * c k * time2 wvtz wvtf\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence wvtf_speed: \"space2 wvtz wvtf = (c k * c k)*time2 wvtz wvtf\""], ["proof (prove)\nusing this:\n  collinear wvte wvtg wvtz \\<and>\n  space2 wvtz wvtf = c k * c k * time2 wvtz wvtf\n\ngoal (1 subgoal):\n 1. space2 wvtz wvtf = c k * c k * time2 wvtz wvtf", "by metis"], ["proof (state)\nthis:\n  space2 wvtz wvtf = c k * c k * time2 wvtz wvtf\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "define z where \"z = wvt m k wvtz\""], ["proof (state)\nthis:\n  z = wvt m k wvtz\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "define wvtzCone where \"wvtzCone = lightcone k wvtz\""], ["proof (state)\nthis:\n  wvtzCone = lightcone k wvtz\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have wvtz_is_vertex: \"wvtz = vertex wvtzCone\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wvtz = vertex wvtzCone", "by (simp add: wvtzCone_def)"], ["proof (state)\nthis:\n  wvtz = vertex wvtzCone\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have ck_is_slope: \"c k = slope wvtzCone\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c k = slope wvtzCone", "by (simp add: wvtzCone_def)"], ["proof (state)\nthis:\n  c k = slope wvtzCone\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence \"space2 (vertex wvtzCone) wvtf = ((slope wvtzCone) *(slope wvtzCone))*time2 (vertex wvtzCone) wvtf\""], ["proof (prove)\nusing this:\n  c k = slope wvtzCone\n\ngoal (1 subgoal):\n 1. space2 (vertex wvtzCone) wvtf =\n    slope wvtzCone * slope wvtzCone * time2 (vertex wvtzCone) wvtf", "by (metis wvtf_speed wvtz_is_vertex ck_is_slope)"], ["proof (state)\nthis:\n  space2 (vertex wvtzCone) wvtf =\n  slope wvtzCone * slope wvtzCone * time2 (vertex wvtzCone) wvtf\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence \"onCone wvtf wvtzCone\""], ["proof (prove)\nusing this:\n  space2 (vertex wvtzCone) wvtf =\n  slope wvtzCone * slope wvtzCone * time2 (vertex wvtzCone) wvtf\n\ngoal (1 subgoal):\n 1. onCone wvtf wvtzCone", "by (metis onCone.simps)"], ["proof (state)\nthis:\n  onCone wvtf wvtzCone\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence wvtf_on_wvtzCone: \"onCone (wvt m k wvtf) (lightcone m z)\""], ["proof (prove)\nusing this:\n  onCone wvtf wvtzCone\n\ngoal (1 subgoal):\n 1. onCone (wvt m k wvtf) (lightcone m z)", "by (metis iobm iobk AxCones wvtzCone_def z_def)"], ["proof (state)\nthis:\n  onCone (wvt m k wvtf) (lightcone m z)\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "(* f is on the lightcone at z *)"], ["proof (state)\nthis:\n  onCone (wvt m k wvtf) (lightcone m z)\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "define zCone where \"zCone = lightcone m z\""], ["proof (state)\nthis:\n  zCone = lightcone m z\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have z_is_vertex: \"z = vertex zCone\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z = vertex zCone", "by (simp add: zCone_def)"], ["proof (state)\nthis:\n  z = vertex zCone\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have cm_is_zSlope: \"c m = slope zCone\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c m = slope zCone", "by (simp add: zCone_def)"], ["proof (state)\nthis:\n  c m = slope zCone\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have f_on_zCone: \"onCone f zCone\""], ["proof (prove)\ngoal (1 subgoal):\n 1. onCone f zCone", "by (metis wvtf_inv wvtf_on_wvtzCone zCone_def)"], ["proof (state)\nthis:\n  onCone f zCone\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "(* whence z is on the lightcone at f *)"], ["proof (state)\nthis:\n  onCone f zCone\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence \"space2 (vertex zCone) f = (slope zCone * slope zCone)*time2 (vertex zCone) f\""], ["proof (prove)\nusing this:\n  onCone f zCone\n\ngoal (1 subgoal):\n 1. space2 (vertex zCone) f =\n    slope zCone * slope zCone * time2 (vertex zCone) f", "by (simp add: zCone_def)"], ["proof (state)\nthis:\n  space2 (vertex zCone) f =\n  slope zCone * slope zCone * time2 (vertex zCone) f\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence \"space2 z f = (c m * c m)*time2 z f\""], ["proof (prove)\nusing this:\n  space2 (vertex zCone) f =\n  slope zCone * slope zCone * time2 (vertex zCone) f\n\ngoal (1 subgoal):\n 1. space2 z f = c m * c m * time2 z f", "by (metis z_is_vertex cm_is_zSlope)"], ["proof (state)\nthis:\n  space2 z f = c m * c m * time2 z f\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence fz_speed: \"space2 f z = (c m * c m)*time2 f z\""], ["proof (prove)\nusing this:\n  space2 z f = c m * c m * time2 z f\n\ngoal (1 subgoal):\n 1. space2 f z = c m * c m * time2 f z", "by (metis lemSpace2Sym lemTime2Sym)"], ["proof (state)\nthis:\n  space2 f z = c m * c m * time2 f z\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "define fCone where \"fCone = lightcone m f\""], ["proof (state)\nthis:\n  fCone = lightcone m f\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have f_is_fVertex: \"f = vertex fCone\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f = vertex fCone", "by (simp add: fCone_def)"], ["proof (state)\nthis:\n  f = vertex fCone\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have cm_is_fSlope: \"c m = slope fCone\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c m = slope fCone", "by (simp add: fCone_def)"], ["proof (state)\nthis:\n  c m = slope fCone\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence \"space2 (vertex fCone) z = ((slope fCone) *(slope fCone))*time2 (vertex fCone) z\""], ["proof (prove)\nusing this:\n  c m = slope fCone\n\ngoal (1 subgoal):\n 1. space2 (vertex fCone) z =\n    slope fCone * slope fCone * time2 (vertex fCone) z", "by (metis fz_speed f_is_fVertex cm_is_fSlope)"], ["proof (state)\nthis:\n  space2 (vertex fCone) z =\n  slope fCone * slope fCone * time2 (vertex fCone) z\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence z_on_fCone: \"onCone z fCone\""], ["proof (prove)\nusing this:\n  space2 (vertex fCone) z =\n  slope fCone * slope fCone * time2 (vertex fCone) z\n\ngoal (1 subgoal):\n 1. onCone z fCone", "by (metis onCone.simps)"], ["proof (state)\nthis:\n  onCone z fCone\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "(* z is also on the lightcone at e, as well as in the tangent plane at g *)"], ["proof (state)\nthis:\n  onCone z fCone\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have \"collinear wvte wvtg wvtz\""], ["proof (prove)\ngoal (1 subgoal):\n 1. collinear wvte wvtg wvtz", "by (metis wvtz_props)"], ["proof (state)\nthis:\n  collinear wvte wvtg wvtz\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence egz_collinear: \"collinear e g z\""], ["proof (prove)\nusing this:\n  collinear wvte wvtg wvtz\n\ngoal (1 subgoal):\n 1. collinear e g z", "by (metis wvte_inv wvtg_inv z_def AxLines iobm iobk)"], ["proof (state)\nthis:\n  collinear e g z\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence z_geometry: \"(inPlane z (tangentPlane g eCone) \\<and> onCone z eCone)\""], ["proof (prove)\nusing this:\n  collinear e g z\n\ngoal (1 subgoal):\n 1. inPlane z (tangentPlane g eCone) \\<and> onCone z eCone", "by (metis AxConeTangent e_is_vertex g_on_eCone)"], ["proof (state)\nthis:\n  inPlane z (tangentPlane g eCone) \\<and> onCone z eCone\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have z_on_eCone: \"onCone z eCone\""], ["proof (prove)\ngoal (1 subgoal):\n 1. onCone z eCone", "by (metis z_geometry)"], ["proof (state)\nthis:\n  onCone z eCone\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have z_in_tplane: \"inPlane z tplane\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inPlane z tplane", "by (metis z_geometry tplane_def)"], ["proof (state)\nthis:\n  inPlane z tplane\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence z_not_f: \"z \\<noteq> f\""], ["proof (prove)\nusing this:\n  inPlane z tplane\n\ngoal (1 subgoal):\n 1. z \\<noteq> f", "by (metis z_on_eCone outside lemOutsideNotOnCone)"], ["proof (state)\nthis:\n  z \\<noteq> f\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence z_not_fVertex: \"z \\<noteq> vertex fCone\""], ["proof (prove)\nusing this:\n  z \\<noteq> f\n\ngoal (1 subgoal):\n 1. z \\<noteq> vertex fCone", "by (simp add: fCone_def z_not_f)"], ["proof (state)\nthis:\n  z \\<noteq> vertex fCone\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "{"], ["proof (state)\nthis:\n  z \\<noteq> vertex fCone\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "assume assm: \"z = e\""], ["proof (state)\nthis:\n  z = e\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have \"space2 f e = (c m * c m)*time2 f e \\<and> space2 f e = space2 e f \\<and> time2 f e = time2 e f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. space2 f e = c m * c m * time2 f e \\<and>\n    space2 f e = space2 e f \\<and> time2 f e = time2 e f", "by (metis lemSpace2Sym lemTime2Sym fz_speed assm)"], ["proof (state)\nthis:\n  space2 f e = c m * c m * time2 f e \\<and>\n  space2 f e = space2 e f \\<and> time2 f e = time2 e f\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence \"space2 e f = (c m * c m)*time2 e f\""], ["proof (prove)\nusing this:\n  space2 f e = c m * c m * time2 f e \\<and>\n  space2 f e = space2 e f \\<and> time2 f e = time2 e f\n\ngoal (1 subgoal):\n 1. space2 e f = c m * c m * time2 e f", "by metis"], ["proof (state)\nthis:\n  space2 e f = c m * c m * time2 e f\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence \"False\""], ["proof (prove)\nusing this:\n  space2 e f = c m * c m * time2 e f\n\ngoal (1 subgoal):\n 1. False", "by (metis less_irrefl converse)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "}"], ["proof (state)\nthis:\n  z = e \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "from this"], ["proof (chain)\npicking this:\n  z = e \\<Longrightarrow> False", "have z_not_e: \"z \\<noteq> e\""], ["proof (prove)\nusing this:\n  z = e \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. z \\<noteq> e", "by blast"], ["proof (state)\nthis:\n  z \\<noteq> e\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "(* but the lines e-z and f-z must be parallel *)"], ["proof (state)\nthis:\n  z \\<noteq> e\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "define lineA where \"lineA = lineJoining e z\""], ["proof (state)\nthis:\n  lineA = line joining e to z\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "define lineB where \"lineB = lineJoining f z\""], ["proof (state)\nthis:\n  lineB = line joining f to z\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "{"], ["proof (state)\nthis:\n  lineB = line joining f to z\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "assume assm: \"direction lineA = vecZero\""], ["proof (state)\nthis:\n  direction lineA = 0\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have lemnullline: \"(direction lineA = vecZero \\<and> inLine z lineA) \\<longrightarrow> z = basepoint lineA\""], ["proof (prove)\ngoal (1 subgoal):\n 1. direction lineA = 0 \\<and> inLine z lineA \\<longrightarrow>\n    z = basepoint lineA", "by (metis lemNullLine)"], ["proof (state)\nthis:\n  direction lineA = 0 \\<and> inLine z lineA \\<longrightarrow>\n  z = basepoint lineA\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have \"inLine z lineA\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inLine z lineA", "by (metis lineA_def lemLineContainsEndpoint)"], ["proof (state)\nthis:\n  inLine z lineA\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence z_is_bp: \"z = basepoint lineA\""], ["proof (prove)\nusing this:\n  inLine z lineA\n\ngoal (1 subgoal):\n 1. z = basepoint lineA", "by (metis lemnullline assm)"], ["proof (state)\nthis:\n  z = basepoint lineA\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have \"basepoint lineA = e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. basepoint lineA = e", "by (simp add: lineA_def)"], ["proof (state)\nthis:\n  basepoint lineA = e\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence \"False\""], ["proof (prove)\nusing this:\n  basepoint lineA = e\n\ngoal (1 subgoal):\n 1. False", "by (metis z_is_bp z_not_e)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "}"], ["proof (state)\nthis:\n  direction lineA = 0 \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "from this"], ["proof (chain)\npicking this:\n  direction lineA = 0 \\<Longrightarrow> False", "have ez_not_null: \"direction lineA \\<noteq> vecZero\""], ["proof (prove)\nusing this:\n  direction lineA = 0 \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. direction lineA \\<noteq> 0", "by blast"], ["proof (state)\nthis:\n  direction lineA \\<noteq> 0\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "{"], ["proof (state)\nthis:\n  direction lineA \\<noteq> 0\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "assume assm: \"direction lineB = vecZero\""], ["proof (state)\nthis:\n  direction lineB = 0\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have lemnullline: \"(direction lineB = vecZero \\<and> inLine z lineB) \\<longrightarrow> z = basepoint lineB\""], ["proof (prove)\ngoal (1 subgoal):\n 1. direction lineB = 0 \\<and> inLine z lineB \\<longrightarrow>\n    z = basepoint lineB", "by (metis lemNullLine)"], ["proof (state)\nthis:\n  direction lineB = 0 \\<and> inLine z lineB \\<longrightarrow>\n  z = basepoint lineB\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have \"inLine z lineB\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inLine z lineB", "by (metis lineB_def lemLineContainsEndpoint)"], ["proof (state)\nthis:\n  inLine z lineB\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence z_is_bp: \"z = basepoint lineB\""], ["proof (prove)\nusing this:\n  inLine z lineB\n\ngoal (1 subgoal):\n 1. z = basepoint lineB", "by (metis lemnullline assm)"], ["proof (state)\nthis:\n  z = basepoint lineB\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have \"basepoint lineB = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. basepoint lineB = f", "by (simp add: lineB_def)"], ["proof (state)\nthis:\n  basepoint lineB = f\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence \"False\""], ["proof (prove)\nusing this:\n  basepoint lineB = f\n\ngoal (1 subgoal):\n 1. False", "by (metis z_is_bp z_not_f)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "}"], ["proof (state)\nthis:\n  direction lineB = 0 \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "from this"], ["proof (chain)\npicking this:\n  direction lineB = 0 \\<Longrightarrow> False", "have fz_not_null: \"direction lineB \\<noteq> vecZero\""], ["proof (prove)\nusing this:\n  direction lineB = 0 \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. direction lineB \\<noteq> 0", "by blast"], ["proof (state)\nthis:\n  direction lineB \\<noteq> 0\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "{"], ["proof (state)\nthis:\n  direction lineB \\<noteq> 0\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have \"samePlane tplane (tangentPlane z fCone)\n           \\<and> ((lineJoining e g) \\<parallel> (lineJoining f z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. samePlane tplane (tangentPlane z fCone) \\<and>\n    line joining e to g \\<parallel>  line joining f to z", "by (metis AxParallelCones tplane_def\n              g_on_eCone g_not_vertex z_on_fCone z_not_fVertex z_in_tplane\n              e_is_vertex f_is_fVertex)"], ["proof (state)\nthis:\n  samePlane tplane (tangentPlane z fCone) \\<and>\n  line joining e to g \\<parallel>  line joining f to z\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence eg_par_fz: \"(lineJoining e g) \\<parallel> (lineJoining f z)\""], ["proof (prove)\nusing this:\n  samePlane tplane (tangentPlane z fCone) \\<and>\n  line joining e to g \\<parallel>  line joining f to z\n\ngoal (1 subgoal):\n 1. line joining e to g \\<parallel>  line joining f to z", "by metis"], ["proof (state)\nthis:\n  line joining e to g \\<parallel>  line joining f to z\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "{"], ["proof (state)\nthis:\n  line joining e to g \\<parallel>  line joining f to z\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "assume case1: \"direction (lineJoining e g) = vecZero\""], ["proof (state)\nthis:\n  direction line joining e to g = 0\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have \"direction (lineJoining e g) = from e to g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. direction line joining e to g = from e to g", "by simp"], ["proof (state)\nthis:\n  direction line joining e to g = from e to g\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence \"from e to g = vecZero\""], ["proof (prove)\nusing this:\n  direction line joining e to g = from e to g\n\ngoal (1 subgoal):\n 1. from e to g = 0", "by (metis case1)"], ["proof (state)\nthis:\n  from e to g = 0\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence \"e = g\""], ["proof (prove)\nusing this:\n  from e to g = 0\n\ngoal (1 subgoal):\n 1. e = g", "by (simp)"], ["proof (state)\nthis:\n  e = g\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence \"False\""], ["proof (prove)\nusing this:\n  e = g\n\ngoal (1 subgoal):\n 1. False", "by (metis e_not_g)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "}"], ["proof (state)\nthis:\n  direction line joining e to g = 0 \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "from this"], ["proof (chain)\npicking this:\n  direction line joining e to g = 0 \\<Longrightarrow> False", "have eg_not_null: \"\\<not>(direction (lineJoining e g) = vecZero)\""], ["proof (prove)\nusing this:\n  direction line joining e to g = 0 \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. direction line joining e to g \\<noteq> 0", "by blast"], ["proof (state)\nthis:\n  direction line joining e to g \\<noteq> 0\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "then"], ["proof (chain)\npicking this:\n  direction line joining e to g \\<noteq> 0", "obtain a where a_props: \"a \\<noteq> 0 \\<and> direction (lineJoining f z) = a**direction (lineJoining e g)\""], ["proof (prove)\nusing this:\n  direction line joining e to g \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        a \\<noteq> (0::'a) \\<and>\n        direction line joining f to z =\n        a ** direction line joining e to g \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis fz_not_null eg_not_null eg_par_fz parallel.simps lineB_def)"], ["proof (state)\nthis:\n  a \\<noteq> (0::'a) \\<and>\n  direction line joining f to z = a ** direction line joining e to g\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence f_to_z: \"from f to z = a**(from e to g)\""], ["proof (prove)\nusing this:\n  a \\<noteq> (0::'a) \\<and>\n  direction line joining f to z = a ** direction line joining e to g\n\ngoal (1 subgoal):\n 1. from f to z = a ** from e to g", "by simp"], ["proof (state)\nthis:\n  from f to z = a ** from e to g\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have a_nonzero: \"a \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<noteq> (0::'a)", "by (metis a_props)"], ["proof (state)\nthis:\n  a \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have eg_dir: \"from e to g = direction (lineJoining e g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. from e to g = direction line joining e to g", "by simp"], ["proof (state)\nthis:\n  from e to g = direction line joining e to g\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have gz_dir: \"from g to z = direction (lineJoining g z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. from g to z = direction line joining g to z", "by simp"], ["proof (state)\nthis:\n  from g to z = direction line joining g to z\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have egz: \"z = g \\<leadsto> (from g to z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z = g \\<leadsto> from g to z", "by (metis lemLineEndpoint)"], ["proof (state)\nthis:\n  z = g \\<leadsto> from g to z\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence \"collinear e g (g \\<leadsto> (from g to z))\""], ["proof (prove)\nusing this:\n  z = g \\<leadsto> from g to z\n\ngoal (1 subgoal):\n 1. collinear e g (g \\<leadsto> from g to z)", "by (metis egz_collinear)"], ["proof (state)\nthis:\n  collinear e g (g \\<leadsto> from g to z)\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "then"], ["proof (chain)\npicking this:\n  collinear e g (g \\<leadsto> from g to z)", "obtain b where e_to_g: \"from e to g = (-b)**(from g to z)\""], ["proof (prove)\nusing this:\n  collinear e g (g \\<leadsto> from g to z)\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        from e to g = (- b) ** from g to z \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis lemDirectionCollinear)"], ["proof (state)\nthis:\n  from e to g = (- b) ** from g to z\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "{"], ["proof (state)\nthis:\n  from e to g = (- b) ** from g to z\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "assume assm: \"-b = 0\""], ["proof (state)\nthis:\n  - b = (0::'a)\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have \"from e to g = (-b)**(from g to z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. from e to g = (- b) ** from g to z", "by (metis e_to_g)"], ["proof (state)\nthis:\n  from e to g = (- b) ** from g to z\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence \"from e to g = vecZero\""], ["proof (prove)\nusing this:\n  from e to g = (- b) ** from g to z\n\ngoal (1 subgoal):\n 1. from e to g = 0", "by (simp add: assm)"], ["proof (state)\nthis:\n  from e to g = 0\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence \"direction (lineJoining e g) = vecZero\""], ["proof (prove)\nusing this:\n  from e to g = 0\n\ngoal (1 subgoal):\n 1. direction line joining e to g = 0", "by (simp)"], ["proof (state)\nthis:\n  direction line joining e to g = 0\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence \"False\""], ["proof (prove)\nusing this:\n  direction line joining e to g = 0\n\ngoal (1 subgoal):\n 1. False", "by (metis eg_not_null lineA_def)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "}"], ["proof (state)\nthis:\n  - b = (0::'a) \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "from this"], ["proof (chain)\npicking this:\n  - b = (0::'a) \\<Longrightarrow> False", "have b_nonzero: \"-b \\<noteq> 0\""], ["proof (prove)\nusing this:\n  - b = (0::'a) \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. - b \\<noteq> (0::'a)", "by blast"], ["proof (state)\nthis:\n  - b \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "define binv where \"binv = inverse (-b)\""], ["proof (state)\nthis:\n  binv = inverse (- b)\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "define factor where \"factor = 1+binv\""], ["proof (state)\nthis:\n  factor = (1::'a) + binv\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have binv_nonzero: \"binv \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. binv \\<noteq> (0::'a)", "by (metis b_nonzero add.comm_neutral binv_def nonzero_imp_inverse_nonzero right_minus)"], ["proof (state)\nthis:\n  binv \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have \"from e to g = (-b)**(from g to z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. from e to g = (- b) ** from g to z", "by (metis e_to_g)"], ["proof (state)\nthis:\n  from e to g = (- b) ** from g to z\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence g_to_z: \"(from g to z) = binv**(from e to g)\""], ["proof (prove)\nusing this:\n  from e to g = (- b) ** from g to z\n\ngoal (1 subgoal):\n 1. from g to z = binv ** from e to g", "by (metis b_nonzero lemScaleInverse binv_def)"], ["proof (state)\nthis:\n  from g to z = binv ** from e to g\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have \"from e to z = from e to g \\<oplus> from g to z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. from e to z = from e to g \\<oplus> from g to z", "by (simp add: lemZEG)"], ["proof (state)\nthis:\n  from e to z = from e to g \\<oplus> from g to z\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence \"from e to z = (from e to g) \\<oplus> binv**(from e to g)\""], ["proof (prove)\nusing this:\n  from e to z = from e to g \\<oplus> from g to z\n\ngoal (1 subgoal):\n 1. from e to z = from e to g \\<oplus> binv ** from e to g", "by (metis g_to_z)"], ["proof (state)\nthis:\n  from e to z = from e to g \\<oplus> binv ** from e to g\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence e_to_z: \"from e to z = factor**(from e to g)\""], ["proof (prove)\nusing this:\n  from e to z = from e to g \\<oplus> binv ** from e to g\n\ngoal (1 subgoal):\n 1. from e to z = factor ** from e to g", "by (metis lemAddOverScale lemScale1 factor_def)"], ["proof (state)\nthis:\n  from e to z = factor ** from e to g\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have ez_dir: \"direction (lineJoining e z) = from e to z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. direction line joining e to z = from e to z", "by simp"], ["proof (state)\nthis:\n  direction line joining e to z = from e to z\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have eg_dir: \"direction (lineJoining e g) = from e to g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. direction line joining e to g = from e to g", "by simp"], ["proof (state)\nthis:\n  direction line joining e to g = from e to g\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "{"], ["proof (state)\nthis:\n  direction line joining e to g = from e to g\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "assume assm: \"factor = 0\""], ["proof (state)\nthis:\n  factor = (0::'a)\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have \"from e to z = factor**(from e to g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. from e to z = factor ** from e to g", "by (metis e_to_z)"], ["proof (state)\nthis:\n  from e to z = factor ** from e to g\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence \"from e to z = vecZero\""], ["proof (prove)\nusing this:\n  from e to z = factor ** from e to g\n\ngoal (1 subgoal):\n 1. from e to z = 0", "by (simp add: assm)"], ["proof (state)\nthis:\n  from e to z = 0\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence \"direction (lineJoining e z) = vecZero\""], ["proof (prove)\nusing this:\n  from e to z = 0\n\ngoal (1 subgoal):\n 1. direction line joining e to z = 0", "by (simp)"], ["proof (state)\nthis:\n  direction line joining e to z = 0\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence \"False\""], ["proof (prove)\nusing this:\n  direction line joining e to z = 0\n\ngoal (1 subgoal):\n 1. False", "by (metis ez_not_null lineA_def)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "}"], ["proof (state)\nthis:\n  factor = (0::'a) \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "from this"], ["proof (chain)\npicking this:\n  factor = (0::'a) \\<Longrightarrow> False", "have factor_nonzero: \"factor \\<noteq> 0\""], ["proof (prove)\nusing this:\n  factor = (0::'a) \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. factor \\<noteq> (0::'a)", "by blast"], ["proof (state)\nthis:\n  factor \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have \"direction (lineJoining e z) = factor**(direction (lineJoining e g))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. direction line joining e to z = factor ** direction line joining e to g", "by (metis e_to_z ez_dir eg_dir)"], ["proof (state)\nthis:\n  direction line joining e to z = factor ** direction line joining e to g\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence \"(lineJoining e g) \\<parallel> (lineJoining e z)\""], ["proof (prove)\nusing this:\n  direction line joining e to z = factor ** direction line joining e to g\n\ngoal (1 subgoal):\n 1. line joining e to g \\<parallel>  line joining e to z", "by (metis parallel.simps factor_nonzero)"], ["proof (state)\nthis:\n  line joining e to g \\<parallel>  line joining e to z\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence \"(lineJoining e z) \\<parallel> (lineJoining e g)\""], ["proof (prove)\nusing this:\n  line joining e to g \\<parallel>  line joining e to z\n\ngoal (1 subgoal):\n 1. line joining e to z \\<parallel>  line joining e to g", "by (metis lemParallelSym)"], ["proof (state)\nthis:\n  line joining e to z \\<parallel>  line joining e to g\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence \"(lineJoining e z) \\<parallel> (lineJoining f z)\""], ["proof (prove)\nusing this:\n  line joining e to z \\<parallel>  line joining e to g\n\ngoal (1 subgoal):\n 1. line joining e to z \\<parallel>  line joining f to z", "by (metis lemParallelTrans eg_par_fz eg_not_null)"], ["proof (state)\nthis:\n  line joining e to z \\<parallel>  line joining f to z\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "}"], ["proof (state)\nthis:\n  line joining e to z \\<parallel>  line joining f to z\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "from this"], ["proof (chain)\npicking this:\n  line joining e to z \\<parallel>  line joining f to z", "have A_par_B: \"lineA \\<parallel> lineB\""], ["proof (prove)\nusing this:\n  line joining e to z \\<parallel>  line joining f to z\n\ngoal (1 subgoal):\n 1. lineA \\<parallel>  lineB", "by (metis lineA_def lineB_def)"], ["proof (state)\nthis:\n  lineA \\<parallel>  lineB\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "(* which is impossible because this means they are distinct parallel lines that meet *)"], ["proof (state)\nthis:\n  lineA \\<parallel>  lineB\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have e_in_lineA: \"inLine e lineA\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inLine e lineA", "by (metis lineA_def lemLineContainsBasepoint)"], ["proof (state)\nthis:\n  inLine e lineA\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "{"], ["proof (state)\nthis:\n  inLine e lineA\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have basic: \"\\<forall>a b.(((-a)*b)*((-a)*b) = (a*a)*(b*b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a b. - a * b * (- a * b) = a * a * (b * b)", "by (metis equation_minus_iff minus_mult_commute minus_mult_right \n                semiring_normalization_rules(17) semiring_normalization_rules(19))"], ["proof (state)\nthis:\n  \\<forall>a b. - a * b * (- a * b) = a * a * (b * b)\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "assume assm: \"inLine e lineB\""], ["proof (state)\nthis:\n  inLine e lineB\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence coll: \"collinear e f (f \\<leadsto> direction lineB)\""], ["proof (prove)\nusing this:\n  inLine e lineB\n\ngoal (1 subgoal):\n 1. collinear e f (f \\<leadsto> direction lineB)", "by (simp add: lineB_def)"], ["proof (state)\nthis:\n  collinear e f (f \\<leadsto> direction lineB)\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "then"], ["proof (chain)\npicking this:\n  collinear e f (f \\<leadsto> direction lineB)", "obtain \\<beta> where props: \"from e to f = (-\\<beta>)**(direction lineB)\""], ["proof (prove)\nusing this:\n  collinear e f (f \\<leadsto> direction lineB)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<beta>.\n        from e to f = (- \\<beta>) ** direction lineB \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis lemDirectionCollinear)"], ["proof (state)\nthis:\n  from e to f = (- \\<beta>) ** direction lineB\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence \"tval f - tval e = (-\\<beta>)*(tval z - tval f) \\<and> xval f - xval e = (-\\<beta>)*(xval z - xval f)\n        \\<and> yval f - yval e = (-\\<beta>)*(yval z - yval f) \\<and> zval f - zval e = (-\\<beta>)*(zval z - zval f)\""], ["proof (prove)\nusing this:\n  from e to f = (- \\<beta>) ** direction lineB\n\ngoal (1 subgoal):\n 1. tval f - tval e = - \\<beta> * (tval z - tval f) \\<and>\n    xval f - xval e = - \\<beta> * (xval z - xval f) \\<and>\n    yval f - yval e = - \\<beta> * (yval z - yval f) \\<and>\n    zval f - zval e = - \\<beta> * (zval z - zval f)", "by (simp add: lineB_def)"], ["proof (state)\nthis:\n  tval f - tval e = - \\<beta> * (tval z - tval f) \\<and>\n  xval f - xval e = - \\<beta> * (xval z - xval f) \\<and>\n  yval f - yval e = - \\<beta> * (yval z - yval f) \\<and>\n  zval f - zval e = - \\<beta> * (zval z - zval f)\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence speeds: \"time2 f e = (\\<beta>*\\<beta>)*time2 z f \\<and> space2 f e = (\\<beta>*\\<beta>)*space2 z f\""], ["proof (prove)\nusing this:\n  tval f - tval e = - \\<beta> * (tval z - tval f) \\<and>\n  xval f - xval e = - \\<beta> * (xval z - xval f) \\<and>\n  yval f - yval e = - \\<beta> * (yval z - yval f) \\<and>\n  zval f - zval e = - \\<beta> * (zval z - zval f)\n\ngoal (1 subgoal):\n 1. time2 f e = \\<beta> * \\<beta> * time2 z f \\<and>\n    space2 f e = \\<beta> * \\<beta> * space2 z f", "apply (simp add: basic)"], ["proof (prove)\ngoal (1 subgoal):\n 1. tval f - tval e = - (\\<beta> * (tval z - tval f)) \\<and>\n    xval f - xval e = - (\\<beta> * (xval z - xval f)) \\<and>\n    yval f - yval e = - (\\<beta> * (yval z - yval f)) \\<and>\n    zval f - zval e = - (\\<beta> * (zval z - zval f)) \\<Longrightarrow>\n    \\<beta> * (tval z - tval f) * (\\<beta> * (tval z - tval f)) =\n    \\<beta> * \\<beta> * ((tval z - tval f) * (tval z - tval f)) \\<and>\n    \\<beta> * (xval z - xval f) * (\\<beta> * (xval z - xval f)) +\n    \\<beta> * (yval z - yval f) * (\\<beta> * (yval z - yval f)) +\n    \\<beta> * (zval z - zval f) * (\\<beta> * (zval z - zval f)) =\n    \\<beta> * \\<beta> *\n    ((xval z - xval f) * (xval z - xval f) +\n     (yval z - yval f) * (yval z - yval f) +\n     (zval z - zval f) * (zval z - zval f))", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>tval f - tval e = - (\\<beta> * (tval z - tval f));\n     xval f - xval e = - (\\<beta> * (xval z - xval f));\n     yval f - yval e = - (\\<beta> * (yval z - yval f));\n     zval f - zval e = - (\\<beta> * (zval z - zval f))\\<rbrakk>\n    \\<Longrightarrow> \\<beta> * (tval z - tval f) *\n                      (\\<beta> * (tval z - tval f)) =\n                      \\<beta> * \\<beta> *\n                      ((tval z - tval f) * (tval z - tval f))\n 2. \\<lbrakk>tval f - tval e = - (\\<beta> * (tval z - tval f));\n     xval f - xval e = - (\\<beta> * (xval z - xval f));\n     yval f - yval e = - (\\<beta> * (yval z - yval f));\n     zval f - zval e = - (\\<beta> * (zval z - zval f))\\<rbrakk>\n    \\<Longrightarrow> \\<beta> * (xval z - xval f) *\n                      (\\<beta> * (xval z - xval f)) +\n                      \\<beta> * (yval z - yval f) *\n                      (\\<beta> * (yval z - yval f)) +\n                      \\<beta> * (zval z - zval f) *\n                      (\\<beta> * (zval z - zval f)) =\n                      \\<beta> * \\<beta> *\n                      ((xval z - xval f) * (xval z - xval f) +\n                       (yval z - yval f) * (yval z - yval f) +\n                       (zval z - zval f) * (zval z - zval f))", "apply (metis semiring_normalization_rules(18) semiring_normalization_rules(19))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>tval f - tval e = - (\\<beta> * (tval z - tval f));\n     xval f - xval e = - (\\<beta> * (xval z - xval f));\n     yval f - yval e = - (\\<beta> * (yval z - yval f));\n     zval f - zval e = - (\\<beta> * (zval z - zval f))\\<rbrakk>\n    \\<Longrightarrow> \\<beta> * (xval z - xval f) *\n                      (\\<beta> * (xval z - xval f)) +\n                      \\<beta> * (yval z - yval f) *\n                      (\\<beta> * (yval z - yval f)) +\n                      \\<beta> * (zval z - zval f) *\n                      (\\<beta> * (zval z - zval f)) =\n                      \\<beta> * \\<beta> *\n                      ((xval z - xval f) * (xval z - xval f) +\n                       (yval z - yval f) * (yval z - yval f) +\n                       (zval z - zval f) * (zval z - zval f))", "by (metis semiring_normalization_rules(18) semiring_normalization_rules(19) \n                semiring_normalization_rules(34))"], ["proof (state)\nthis:\n  time2 f e = \\<beta> * \\<beta> * time2 z f \\<and>\n  space2 f e = \\<beta> * \\<beta> * space2 z f\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have \"space2 f z = (c m * c m)*time2 f z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. space2 f z = c m * c m * time2 f z", "by (metis fz_speed)"], ["proof (state)\nthis:\n  space2 f z = c m * c m * time2 f z\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence \"space2 z f = (c m * c m)*time2 z f\""], ["proof (prove)\nusing this:\n  space2 f z = c m * c m * time2 f z\n\ngoal (1 subgoal):\n 1. space2 z f = c m * c m * time2 z f", "by (metis lemSpace2Sym lemTime2Sym)"], ["proof (state)\nthis:\n  space2 z f = c m * c m * time2 z f\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence \"space2 f e = ((\\<beta>*\\<beta>)*(c m * c m))*time2 z f\""], ["proof (prove)\nusing this:\n  space2 z f = c m * c m * time2 z f\n\ngoal (1 subgoal):\n 1. space2 f e = \\<beta> * \\<beta> * (c m * c m) * time2 z f", "by (metis speeds mult.assoc)"], ["proof (state)\nthis:\n  space2 f e = \\<beta> * \\<beta> * (c m * c m) * time2 z f\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence \"space2 f e = (c m * c m)*(\\<beta>*\\<beta>)*time2 z f\""], ["proof (prove)\nusing this:\n  space2 f e = \\<beta> * \\<beta> * (c m * c m) * time2 z f\n\ngoal (1 subgoal):\n 1. space2 f e = c m * c m * (\\<beta> * \\<beta>) * time2 z f", "by (metis mult.assoc mult.commute)"], ["proof (state)\nthis:\n  space2 f e = c m * c m * (\\<beta> * \\<beta>) * time2 z f\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence \"space2 f e = (c m * c m)*time2 f e\""], ["proof (prove)\nusing this:\n  space2 f e = c m * c m * (\\<beta> * \\<beta>) * time2 z f\n\ngoal (1 subgoal):\n 1. space2 f e = c m * c m * time2 f e", "by (metis mult.assoc speeds)"], ["proof (state)\nthis:\n  space2 f e = c m * c m * time2 f e\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence \"space2 e f = (c m * c m)*time2 e f\""], ["proof (prove)\nusing this:\n  space2 f e = c m * c m * time2 f e\n\ngoal (1 subgoal):\n 1. space2 e f = c m * c m * time2 e f", "by (metis lemSpace2Sym lemTime2Sym)"], ["proof (state)\nthis:\n  space2 e f = c m * c m * time2 e f\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence \"False\""], ["proof (prove)\nusing this:\n  space2 e f = c m * c m * time2 e f\n\ngoal (1 subgoal):\n 1. False", "by (metis less_irrefl converse)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "}"], ["proof (state)\nthis:\n  inLine e lineB \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "from this"], ["proof (chain)\npicking this:\n  inLine e lineB \\<Longrightarrow> False", "have e_not_in_lineB: \"\\<not>(inLine e lineB)\""], ["proof (prove)\nusing this:\n  inLine e lineB \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<not> inLine e lineB", "by blast"], ["proof (state)\nthis:\n  \\<not> inLine e lineB\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "have \"inLine z lineA \\<and> inLine z lineB\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inLine z lineA \\<and> inLine z lineB", "by (metis lemLineContainsEndpoint lineA_def lineB_def)"], ["proof (state)\nthis:\n  inLine z lineA \\<and> inLine z lineB\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence A_meets_B: \"meets lineA lineB\""], ["proof (prove)\nusing this:\n  inLine z lineA \\<and> inLine z lineB\n\ngoal (1 subgoal):\n 1. meets lineA lineB", "by auto"], ["proof (state)\nthis:\n  meets lineA lineB\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "hence \"False\""], ["proof (prove)\nusing this:\n  meets lineA lineB\n\ngoal (1 subgoal):\n 1. False", "by (metis A_par_B ez_not_null fz_not_null e_in_lineA e_not_in_lineB lemParallelNotMeet)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "}"], ["proof (state)\nthis:\n  c m * c m * time2 e f < space2 e f \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "from this"], ["proof (chain)\npicking this:\n  c m * c m * time2 e f < space2 e f \\<Longrightarrow> False", "have \"\\<not> (space2 e f > (c m * c m) * time2 e f)\""], ["proof (prove)\nusing this:\n  c m * c m * time2 e f < space2 e f \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<not> c m * c m * time2 e f < space2 e f", "by blast"], ["proof (state)\nthis:\n  \\<not> c m * c m * time2 e f < space2 e f\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> c m * c m * time2 e f < space2 e f\n\ngoal (1 subgoal):\n 1. space2 e f \\<le> c m * c m * time2 e f", "by simp"], ["proof (state)\nthis:\n  space2 e f \\<le> c m * c m * time2 e f\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}