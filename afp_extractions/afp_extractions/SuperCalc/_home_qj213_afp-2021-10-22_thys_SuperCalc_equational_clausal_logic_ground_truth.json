{"file_name": "/home/qj213/afp-2021-10-22/thys/SuperCalc/equational_clausal_logic.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/SuperCalc", "problem_names": ["lemma decompose_equation_vars:\n  assumes \"decompose_equation e t s\"\n  shows \"vars_of t \\<subseteq> vars_of_eq e\"", "lemma decompose_literal_vars:\n  assumes \"decompose_literal L t s p\"\n  shows \"vars_of t \\<subseteq> vars_of_lit L\"", "lemma vars_of_cl_lem:\n  assumes \"L \\<in> C\"\n  shows \"vars_of_lit L \\<subseteq> vars_of_cl C\"", "lemma set_of_variables_is_finite_eq:\n  shows \"finite (vars_of_eq e)\"", "lemma set_of_variables_is_finite_lit:\n  shows \"finite (vars_of_lit l)\"", "lemma set_of_variables_is_finite_cl:\n  assumes \"finite C\"\n  shows \"finite (vars_of_cl C)\"", "lemma subterm_lit_vars :\n  assumes \"u \\<in> subterms_of_lit L\"\n  shows \"vars_of u \\<subseteq> vars_of_lit L\"", "lemma subterm_vars :\n  assumes \"u \\<in> subterms_of_cl C\"\n  shows \"vars_of u \\<subseteq> vars_of_cl C\"", "lemma subterm_cl_subst:\n  assumes \"x \\<in> (subterms_of_cl C)\"\n  shows \"(subst x \\<sigma>) \\<in>  (subterms_of_cl (subst_cl C \\<sigma>))\"", "lemma ground_substs_yield_ground_clause:\n  assumes \"ground_on (vars_of_cl C) \\<sigma>\"\n  shows \"ground_clause (subst_cl C \\<sigma>)\"", "lemma ground_clauses_and_ground_substs:\n  assumes \"ground_clause (subst_cl C \\<sigma>)\"\n  shows \"ground_on (vars_of_cl C) \\<sigma>\"", "lemma ground_instance_exists:\n  assumes \"finite C\"\n  shows \"\\<exists>\\<sigma>. (ground_clause (subst_cl C \\<sigma>))\"", "lemma composition_of_substs :\n  shows \"(subst (subst t  \\<sigma>) \\<eta>) \n    = (subst t (comp \\<sigma> \\<eta>))\"", "lemma composition_of_substs_eq :\n  shows \"(subst_equation (subst_equation e \\<sigma>) \\<eta>) \n    = (subst_equation e (comp \\<sigma> \\<eta>))\"", "lemma composition_of_substs_lit :\n  shows \"(subst_lit (subst_lit l \\<sigma>) \\<eta>) \n    = (subst_lit l (comp \\<sigma> \\<eta>))\"", "lemma composition_of_substs_cl :\n  shows \"(subst_cl (subst_cl C \\<sigma>) \\<eta>) \n    = (subst_cl C (comp \\<sigma> \\<eta>))\"", "lemma substs_preserve_ground_lit :\n  assumes \"ground_clause C\"\n  assumes \"y \\<in> C\"\n  shows \"subst_lit y \\<sigma> = y\"", "lemma substs_preserve_ground_clause :\n  assumes \"ground_clause C\"\n  shows \"subst_cl C \\<sigma> = C\"", "lemma substs_preserve_finiteness :\n  assumes \"finite C\"\n  shows \"finite (subst_cl C \\<sigma>)\"", "lemma subst_eq_eq :\n  assumes \"subst_eq \\<sigma> \\<eta>\"\n  shows \"subst_equation e \\<sigma> = subst_equation e \\<eta>\"", "lemma subst_eq_lit :\n  assumes \"subst_eq \\<sigma> \\<eta>\"\n  shows \"subst_lit l \\<sigma> = subst_lit l \\<eta>\"", "lemma subst_eq_cl:\n  assumes \"subst_eq \\<sigma> \\<eta>\"\n  shows \"subst_cl C \\<sigma> = subst_cl C \\<eta>\"", "lemma coincide_on_eq :\n  assumes \"coincide_on \\<sigma> \\<eta> (vars_of_eq e)\"\n  shows \"subst_equation e \\<sigma> = subst_equation e \\<eta>\"", "lemma coincide_on_lit :\n  assumes \"coincide_on \\<sigma> \\<eta> (vars_of_lit l)\"\n  shows \"subst_lit l \\<sigma> = subst_lit l \\<eta>\"", "lemma coincide_on_cl :\n  assumes \"coincide_on \\<sigma> \\<eta> (vars_of_cl C)\"\n  shows \"subst_cl C \\<sigma> = subst_cl C \\<eta>\"", "lemma set_entails_clause_member:\n  assumes \"C \\<in> S\"\n  shows \"set_entails_clause S C\"", "lemma instances_are_entailed :\n  assumes \"validate_clause I C\"\n  shows \"validate_clause I (subst_cl C \\<sigma>)\"", "lemma equivalent_on_eq :\n  assumes \"equivalent_on \\<sigma> \\<eta> (vars_of_eq e) I\"\n  assumes \"fo_interpretation I\"\n  shows \"(validate_ground_eq I (subst_equation e \\<sigma>)) = (validate_ground_eq I (subst_equation e \\<eta>))\"", "lemma equivalent_on_lit :\n  assumes \"equivalent_on \\<sigma> \\<eta> (vars_of_lit l) I\"\n  assumes \"fo_interpretation I\"\n  shows \"(validate_ground_lit I (subst_lit l \\<sigma>)) \n    = (validate_ground_lit I (subst_lit l \\<eta>))\"", "lemma equivalent_on_cl :\n  assumes \"equivalent_on \\<sigma> \\<eta> (vars_of_cl C) I\"\n  assumes \"fo_interpretation I\"\n  shows \"(validate_ground_clause I (subst_cl C \\<sigma>)) \n    = (validate_ground_clause I (subst_cl C \\<eta>))\""], "translations": [["", "lemma decompose_equation_vars:\n  assumes \"decompose_equation e t s\"\n  shows \"vars_of t \\<subseteq> vars_of_eq e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars_of t \\<subseteq> vars_of_eq e", "by (metis assms decompose_equation_def sup.cobounded1 sup_commute vars_of_eq.simps)"], ["", "fun subterms_of_lit \n  where \n    \"subterms_of_lit (Pos e) = (subterms_of_eq e)\" |\n    \"subterms_of_lit (Neg e) = (subterms_of_eq e)\""], ["", "fun vars_of_lit \n  where \n    \"vars_of_lit (Pos e) = (vars_of_eq e)\" |\n    \"vars_of_lit (Neg e) = (vars_of_eq e)\""], ["", "fun vars_of_cl \n  where \"vars_of_cl C = { x. \\<exists>L. x \\<in> (vars_of_lit L) \\<and> L \\<in> C }\""], ["", "fun subterms_of_cl \n  where \"subterms_of_cl C = { x. \\<exists>L. x \\<in> (subterms_of_lit L) \\<and> L \\<in> C }\""], ["", "text \\<open>Note that clauses are defined as sets and not as multisets \n(identical literals are always merged).\\<close>"], ["", "type_synonym 'a clause = \"'a literal set\""], ["", "fun ground_clause :: \"'a clause \\<Rightarrow> bool\"\nwhere\n  \"(ground_clause C) = ((vars_of_cl C) = {})\""], ["", "fun subst_equation :: \"'a equation \\<Rightarrow> 'a subst \\<Rightarrow> 'a equation\"\nwhere\n  \"(subst_equation (Eq u v) s) \n    = (Eq (subst u s) (subst v s))\""], ["", "fun subst_lit :: \"'a literal \\<Rightarrow> 'a subst \\<Rightarrow> 'a literal\"\nwhere\n  \"(subst_lit (Pos e) s) \n    = (Pos (subst_equation e s))\" |\n  \"(subst_lit (Neg e) s) \n    = (Neg (subst_equation e s))\""], ["", "fun subst_cl :: \"'a clause \\<Rightarrow> 'a subst \\<Rightarrow> 'a clause\"\nwhere\n  \"(subst_cl C s) = { L. (\\<exists>L'. (L' \\<in> C) \\<and> (L = (subst_lit L' s))) }\""], ["", "text \\<open>We establish some properties of the functions returning the set of variables occurring in \nan object.\\<close>"], ["", "lemma decompose_literal_vars:\n  assumes \"decompose_literal L t s p\"\n  shows \"vars_of t \\<subseteq> vars_of_lit L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars_of t \\<subseteq> vars_of_lit L", "by (metis assms decompose_equation_vars decompose_literal_def vars_of_lit.simps(1) vars_of_lit.simps(2))"], ["", "lemma vars_of_cl_lem:\n  assumes \"L \\<in> C\"\n  shows \"vars_of_lit L \\<subseteq> vars_of_cl C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars_of_lit L \\<subseteq> vars_of_cl C", "using assms"], ["proof (prove)\nusing this:\n  L \\<in> C\n\ngoal (1 subgoal):\n 1. vars_of_lit L \\<subseteq> vars_of_cl C", "by auto"], ["", "lemma set_of_variables_is_finite_eq:\n  shows \"finite (vars_of_eq e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (vars_of_eq e)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (vars_of_eq e)", "obtain t and s where \"e = Eq t s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t s. e = Eq t s \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using equation.exhaust"], ["proof (prove)\nusing this:\n  (\\<And>x1 x2. ?y = Eq x1 x2 \\<Longrightarrow> ?P) \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>t s. e = Eq t s \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  e = Eq t s\n\ngoal (1 subgoal):\n 1. finite (vars_of_eq e)", "then"], ["proof (chain)\npicking this:\n  e = Eq t s", "have \"vars_of_eq e = (vars_of t) \\<union> (vars_of s)\""], ["proof (prove)\nusing this:\n  e = Eq t s\n\ngoal (1 subgoal):\n 1. vars_of_eq e = vars_of t \\<union> vars_of s", "by auto"], ["proof (state)\nthis:\n  vars_of_eq e = vars_of t \\<union> vars_of s\n\ngoal (1 subgoal):\n 1. finite (vars_of_eq e)", "from this"], ["proof (chain)\npicking this:\n  vars_of_eq e = vars_of t \\<union> vars_of s", "show ?thesis"], ["proof (prove)\nusing this:\n  vars_of_eq e = vars_of t \\<union> vars_of s\n\ngoal (1 subgoal):\n 1. finite (vars_of_eq e)", "by auto"], ["proof (state)\nthis:\n  finite (vars_of_eq e)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma set_of_variables_is_finite_lit:\n  shows \"finite (vars_of_lit l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (vars_of_lit l)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (vars_of_lit l)", "obtain e where \"l = Pos e \\<or> l = Neg e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>e.\n        l = Pos e \\<or> l = Neg e \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using literal.exhaust"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x1. ?y = Pos x1 \\<Longrightarrow> ?P;\n   \\<And>x2. ?y = Neg x2 \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        l = Pos e \\<or> l = Neg e \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  l = Pos e \\<or> l = Neg e\n\ngoal (1 subgoal):\n 1. finite (vars_of_lit l)", "then"], ["proof (chain)\npicking this:\n  l = Pos e \\<or> l = Neg e", "have \"vars_of_lit l = (vars_of_eq e)\""], ["proof (prove)\nusing this:\n  l = Pos e \\<or> l = Neg e\n\ngoal (1 subgoal):\n 1. vars_of_lit l = vars_of_eq e", "by auto"], ["proof (state)\nthis:\n  vars_of_lit l = vars_of_eq e\n\ngoal (1 subgoal):\n 1. finite (vars_of_lit l)", "from this"], ["proof (chain)\npicking this:\n  vars_of_lit l = vars_of_eq e", "show ?thesis"], ["proof (prove)\nusing this:\n  vars_of_lit l = vars_of_eq e\n\ngoal (1 subgoal):\n 1. finite (vars_of_lit l)", "using set_of_variables_is_finite_eq"], ["proof (prove)\nusing this:\n  vars_of_lit l = vars_of_eq e\n  finite (vars_of_eq ?e)\n\ngoal (1 subgoal):\n 1. finite (vars_of_lit l)", "by auto"], ["proof (state)\nthis:\n  finite (vars_of_lit l)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma set_of_variables_is_finite_cl:\n  assumes \"finite C\"\n  shows \"finite (vars_of_cl C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (vars_of_cl C)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (vars_of_cl C)", "let ?S = \"{ x. \\<exists>l. x = vars_of_lit l \\<and> l \\<in> C }\""], ["proof (state)\ngoal (1 subgoal):\n 1. finite (vars_of_cl C)", "have \"vars_of_cl C = \\<Union> ?S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars_of_cl C = \\<Union> {vars_of_lit l |l. l \\<in> C}", "by auto"], ["proof (state)\nthis:\n  vars_of_cl C = \\<Union> {vars_of_lit l |l. l \\<in> C}\n\ngoal (1 subgoal):\n 1. finite (vars_of_cl C)", "from assms"], ["proof (chain)\npicking this:\n  finite C", "have \"finite ?S\""], ["proof (prove)\nusing this:\n  finite C\n\ngoal (1 subgoal):\n 1. finite {vars_of_lit l |l. l \\<in> C}", "by auto"], ["proof (state)\nthis:\n  finite {vars_of_lit l |l. l \\<in> C}\n\ngoal (1 subgoal):\n 1. finite (vars_of_cl C)", "{"], ["proof (state)\nthis:\n  finite {vars_of_lit l |l. l \\<in> C}\n\ngoal (1 subgoal):\n 1. finite (vars_of_cl C)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (vars_of_cl C)", "have \"x \\<in> ?S \\<Longrightarrow> finite x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> {vars_of_lit l |l. l \\<in> C} \\<Longrightarrow> finite x", "using set_of_variables_is_finite_lit"], ["proof (prove)\nusing this:\n  finite (vars_of_lit ?l)\n\ngoal (1 subgoal):\n 1. x \\<in> {vars_of_lit l |l. l \\<in> C} \\<Longrightarrow> finite x", "by auto"], ["proof (state)\nthis:\n  x \\<in> {vars_of_lit l |l. l \\<in> C} \\<Longrightarrow> finite x\n\ngoal (1 subgoal):\n 1. finite (vars_of_cl C)", "}"], ["proof (state)\nthis:\n  ?x2 \\<in> {vars_of_lit l |l. l \\<in> C} \\<Longrightarrow> finite ?x2\n\ngoal (1 subgoal):\n 1. finite (vars_of_cl C)", "from this and \\<open>finite ?S\\<close>"], ["proof (chain)\npicking this:\n  ?x2 \\<in> {vars_of_lit l |l. l \\<in> C} \\<Longrightarrow> finite ?x2\n  finite {vars_of_lit l |l. l \\<in> C}", "have \"finite (\\<Union> ?S)\""], ["proof (prove)\nusing this:\n  ?x2 \\<in> {vars_of_lit l |l. l \\<in> C} \\<Longrightarrow> finite ?x2\n  finite {vars_of_lit l |l. l \\<in> C}\n\ngoal (1 subgoal):\n 1. finite (\\<Union> {vars_of_lit l |l. l \\<in> C})", "using finite_Union"], ["proof (prove)\nusing this:\n  ?x2 \\<in> {vars_of_lit l |l. l \\<in> C} \\<Longrightarrow> finite ?x2\n  finite {vars_of_lit l |l. l \\<in> C}\n  \\<lbrakk>finite ?A;\n   \\<And>M. M \\<in> ?A \\<Longrightarrow> finite M\\<rbrakk>\n  \\<Longrightarrow> finite (\\<Union> ?A)\n\ngoal (1 subgoal):\n 1. finite (\\<Union> {vars_of_lit l |l. l \\<in> C})", "by auto"], ["proof (state)\nthis:\n  finite (\\<Union> {vars_of_lit l |l. l \\<in> C})\n\ngoal (1 subgoal):\n 1. finite (vars_of_cl C)", "from this and \\<open>vars_of_cl C = \\<Union> ?S\\<close>"], ["proof (chain)\npicking this:\n  finite (\\<Union> {vars_of_lit l |l. l \\<in> C})\n  vars_of_cl C = \\<Union> {vars_of_lit l |l. l \\<in> C}", "show ?thesis"], ["proof (prove)\nusing this:\n  finite (\\<Union> {vars_of_lit l |l. l \\<in> C})\n  vars_of_cl C = \\<Union> {vars_of_lit l |l. l \\<in> C}\n\ngoal (1 subgoal):\n 1. finite (vars_of_cl C)", "by auto"], ["proof (state)\nthis:\n  finite (vars_of_cl C)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subterm_lit_vars :\n  assumes \"u \\<in> subterms_of_lit L\"\n  shows \"vars_of u \\<subseteq> vars_of_lit L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars_of u \\<subseteq> vars_of_lit L", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. vars_of u \\<subseteq> vars_of_lit L", "obtain e where def_e: \"L = (Pos e) \\<or> L = (Neg e)\" and \"vars_of_lit L = vars_of_eq e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>L = Pos e \\<or> L = Neg e;\n         vars_of_lit L = vars_of_eq e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis negative_literal.elims(2) negative_literal.elims(3) \n      vars_of_lit.simps(1) vars_of_lit.simps(2))"], ["proof (state)\nthis:\n  L = Pos e \\<or> L = Neg e\n  vars_of_lit L = vars_of_eq e\n\ngoal (1 subgoal):\n 1. vars_of u \\<subseteq> vars_of_lit L", "obtain t and s where def_ts: \"e = (Eq t s) \\<or> e = (Eq s t)\" and \"vars_of_eq e = vars_of t \\<union> vars_of s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t s.\n        \\<lbrakk>e = Eq t s \\<or> e = Eq s t;\n         vars_of_eq e = vars_of t \\<union> vars_of s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis equation.exhaust vars_of_eq.simps)"], ["proof (state)\nthis:\n  e = Eq t s \\<or> e = Eq s t\n  vars_of_eq e = vars_of t \\<union> vars_of s\n\ngoal (1 subgoal):\n 1. vars_of u \\<subseteq> vars_of_lit L", "from this and \\<open>vars_of_lit L = vars_of_eq e\\<close>"], ["proof (chain)\npicking this:\n  e = Eq t s \\<or> e = Eq s t\n  vars_of_eq e = vars_of t \\<union> vars_of s\n  vars_of_lit L = vars_of_eq e", "have \"vars_of_lit L = vars_of t \\<union> vars_of s\""], ["proof (prove)\nusing this:\n  e = Eq t s \\<or> e = Eq s t\n  vars_of_eq e = vars_of t \\<union> vars_of s\n  vars_of_lit L = vars_of_eq e\n\ngoal (1 subgoal):\n 1. vars_of_lit L = vars_of t \\<union> vars_of s", "by auto"], ["proof (state)\nthis:\n  vars_of_lit L = vars_of t \\<union> vars_of s\n\ngoal (1 subgoal):\n 1. vars_of u \\<subseteq> vars_of_lit L", "from assms(1) and def_e def_ts"], ["proof (chain)\npicking this:\n  u \\<in> subterms_of_lit L\n  L = Pos e \\<or> L = Neg e\n  e = Eq t s \\<or> e = Eq s t", "have \"u \\<in> subterms_of t \\<union> subterms_of s\""], ["proof (prove)\nusing this:\n  u \\<in> subterms_of_lit L\n  L = Pos e \\<or> L = Neg e\n  e = Eq t s \\<or> e = Eq s t\n\ngoal (1 subgoal):\n 1. u \\<in> subterms_of t \\<union> subterms_of s", "by auto"], ["proof (state)\nthis:\n  u \\<in> subterms_of t \\<union> subterms_of s\n\ngoal (1 subgoal):\n 1. vars_of u \\<subseteq> vars_of_lit L", "from this"], ["proof (chain)\npicking this:\n  u \\<in> subterms_of t \\<union> subterms_of s", "have \"vars_of u \\<subseteq> vars_of t \\<union> vars_of s\""], ["proof (prove)\nusing this:\n  u \\<in> subterms_of t \\<union> subterms_of s\n\ngoal (1 subgoal):\n 1. vars_of u \\<subseteq> vars_of t \\<union> vars_of s", "by (meson UnE sup.coboundedI1 sup.coboundedI2 vars_subterms_of)"], ["proof (state)\nthis:\n  vars_of u \\<subseteq> vars_of t \\<union> vars_of s\n\ngoal (1 subgoal):\n 1. vars_of u \\<subseteq> vars_of_lit L", "from this and \\<open>vars_of_lit L = vars_of t \\<union> vars_of s\\<close>"], ["proof (chain)\npicking this:\n  vars_of u \\<subseteq> vars_of t \\<union> vars_of s\n  vars_of_lit L = vars_of t \\<union> vars_of s", "show ?thesis"], ["proof (prove)\nusing this:\n  vars_of u \\<subseteq> vars_of t \\<union> vars_of s\n  vars_of_lit L = vars_of t \\<union> vars_of s\n\ngoal (1 subgoal):\n 1. vars_of u \\<subseteq> vars_of_lit L", "by auto"], ["proof (state)\nthis:\n  vars_of u \\<subseteq> vars_of_lit L\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subterm_vars :\n  assumes \"u \\<in> subterms_of_cl C\"\n  shows \"vars_of u \\<subseteq> vars_of_cl C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars_of u \\<subseteq> vars_of_cl C", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. vars_of u \\<subseteq> vars_of_cl C", "from assms(1)"], ["proof (chain)\npicking this:\n  u \\<in> subterms_of_cl C", "obtain L where \"u \\<in> subterms_of_lit L\" and \"L \\<in> C\""], ["proof (prove)\nusing this:\n  u \\<in> subterms_of_cl C\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        \\<lbrakk>u \\<in> subterms_of_lit L; L \\<in> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  u \\<in> subterms_of_lit L\n  L \\<in> C\n\ngoal (1 subgoal):\n 1. vars_of u \\<subseteq> vars_of_cl C", "from \\<open>u \\<in> subterms_of_lit L\\<close>"], ["proof (chain)\npicking this:\n  u \\<in> subterms_of_lit L", "have \"vars_of u \\<subseteq> vars_of_lit L\""], ["proof (prove)\nusing this:\n  u \\<in> subterms_of_lit L\n\ngoal (1 subgoal):\n 1. vars_of u \\<subseteq> vars_of_lit L", "using subterm_lit_vars"], ["proof (prove)\nusing this:\n  u \\<in> subterms_of_lit L\n  ?u \\<in> subterms_of_lit ?L \\<Longrightarrow>\n  vars_of ?u \\<subseteq> vars_of_lit ?L\n\ngoal (1 subgoal):\n 1. vars_of u \\<subseteq> vars_of_lit L", "by auto"], ["proof (state)\nthis:\n  vars_of u \\<subseteq> vars_of_lit L\n\ngoal (1 subgoal):\n 1. vars_of u \\<subseteq> vars_of_cl C", "from  \\<open>L \\<in> C\\<close>"], ["proof (chain)\npicking this:\n  L \\<in> C", "have \"vars_of_lit L \\<subseteq> vars_of_cl C\""], ["proof (prove)\nusing this:\n  L \\<in> C\n\ngoal (1 subgoal):\n 1. vars_of_lit L \\<subseteq> vars_of_cl C", "using vars_of_cl.simps"], ["proof (prove)\nusing this:\n  L \\<in> C\n  vars_of_cl ?C = {x. \\<exists>L. x \\<in> vars_of_lit L \\<and> L \\<in> ?C}\n\ngoal (1 subgoal):\n 1. vars_of_lit L \\<subseteq> vars_of_cl C", "by auto"], ["proof (state)\nthis:\n  vars_of_lit L \\<subseteq> vars_of_cl C\n\ngoal (1 subgoal):\n 1. vars_of u \\<subseteq> vars_of_cl C", "from this and \\<open>vars_of u \\<subseteq> vars_of_lit L\\<close>"], ["proof (chain)\npicking this:\n  vars_of_lit L \\<subseteq> vars_of_cl C\n  vars_of u \\<subseteq> vars_of_lit L", "show ?thesis"], ["proof (prove)\nusing this:\n  vars_of_lit L \\<subseteq> vars_of_cl C\n  vars_of u \\<subseteq> vars_of_lit L\n\ngoal (1 subgoal):\n 1. vars_of u \\<subseteq> vars_of_cl C", "by auto"], ["proof (state)\nthis:\n  vars_of u \\<subseteq> vars_of_cl C\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>We establish some basic properties of substitutions.\\<close>"], ["", "lemma subterm_cl_subst:\n  assumes \"x \\<in> (subterms_of_cl C)\"\n  shows \"(subst x \\<sigma>) \\<in>  (subterms_of_cl (subst_cl C \\<sigma>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "from assms(1)"], ["proof (chain)\npicking this:\n  x \\<in> subterms_of_cl C", "obtain L where \"L \\<in> C\" and \"x \\<in> subterms_of_lit L\""], ["proof (prove)\nusing this:\n  x \\<in> subterms_of_cl C\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        \\<lbrakk>L \\<in> C; x \\<in> subterms_of_lit L\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  L \\<in> C\n  x \\<in> subterms_of_lit L\n\ngoal (1 subgoal):\n 1. x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "from \\<open>L \\<in> C\\<close>"], ["proof (chain)\npicking this:\n  L \\<in> C", "have \"(subst_lit L \\<sigma>) \\<in> (subst_cl C \\<sigma>)\""], ["proof (prove)\nusing this:\n  L \\<in> C\n\ngoal (1 subgoal):\n 1. subst_lit L \\<sigma> \\<in> subst_cl C \\<sigma>", "by auto"], ["proof (state)\nthis:\n  subst_lit L \\<sigma> \\<in> subst_cl C \\<sigma>\n\ngoal (1 subgoal):\n 1. x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "obtain e where \"L = (Pos e) \\<or> L = (Neg e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>e.\n        L = Pos e \\<or> L = Neg e \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using literal.exhaust"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x1. ?y = Pos x1 \\<Longrightarrow> ?P;\n   \\<And>x2. ?y = Neg x2 \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        L = Pos e \\<or> L = Neg e \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  L = Pos e \\<or> L = Neg e\n\ngoal (1 subgoal):\n 1. x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "then"], ["proof (chain)\npicking this:\n  L = Pos e \\<or> L = Neg e", "show ?thesis"], ["proof (prove)\nusing this:\n  L = Pos e \\<or> L = Neg e\n\ngoal (1 subgoal):\n 1. x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. L = Pos e \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)\n 2. L = Neg e \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "assume \"L = (Pos e)\""], ["proof (state)\nthis:\n  L = Pos e\n\ngoal (2 subgoals):\n 1. L = Pos e \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)\n 2. L = Neg e \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "from this and \\<open>x \\<in> subterms_of_lit L\\<close>"], ["proof (chain)\npicking this:\n  L = Pos e\n  x \\<in> subterms_of_lit L", "have \"x \\<in> subterms_of_eq e\""], ["proof (prove)\nusing this:\n  L = Pos e\n  x \\<in> subterms_of_lit L\n\ngoal (1 subgoal):\n 1. x \\<in> subterms_of_eq e", "by auto"], ["proof (state)\nthis:\n  x \\<in> subterms_of_eq e\n\ngoal (2 subgoals):\n 1. L = Pos e \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)\n 2. L = Neg e \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "from \\<open>L = (Pos e)\\<close>"], ["proof (chain)\npicking this:\n  L = Pos e", "have \"(subst_lit L \\<sigma>) = (Pos (subst_equation e \\<sigma>))\""], ["proof (prove)\nusing this:\n  L = Pos e\n\ngoal (1 subgoal):\n 1. subst_lit L \\<sigma> = Pos (subst_equation e \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  subst_lit L \\<sigma> = Pos (subst_equation e \\<sigma>)\n\ngoal (2 subgoals):\n 1. L = Pos e \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)\n 2. L = Neg e \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "obtain t s where \"e = (Eq t s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t s. e = Eq t s \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using equation.exhaust"], ["proof (prove)\nusing this:\n  (\\<And>x1 x2. ?y = Eq x1 x2 \\<Longrightarrow> ?P) \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>t s. e = Eq t s \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  e = Eq t s\n\ngoal (2 subgoals):\n 1. L = Pos e \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)\n 2. L = Neg e \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "from this"], ["proof (chain)\npicking this:\n  e = Eq t s", "have \"(subst_equation e \\<sigma>) = (Eq (subst t \\<sigma>)  (subst s \\<sigma>))\""], ["proof (prove)\nusing this:\n  e = Eq t s\n\ngoal (1 subgoal):\n 1. subst_equation e \\<sigma> = Eq (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  subst_equation e \\<sigma> = Eq (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)\n\ngoal (2 subgoals):\n 1. L = Pos e \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)\n 2. L = Neg e \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "from \\<open>x \\<in> subterms_of_eq e\\<close> and \\<open>e = (Eq t s)\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> subterms_of_eq e\n  e = Eq t s", "have \"x \\<in> subterms_of t \\<or> x \\<in> subterms_of s\""], ["proof (prove)\nusing this:\n  x \\<in> subterms_of_eq e\n  e = Eq t s\n\ngoal (1 subgoal):\n 1. x \\<in> subterms_of t \\<or> x \\<in> subterms_of s", "by auto"], ["proof (state)\nthis:\n  x \\<in> subterms_of t \\<or> x \\<in> subterms_of s\n\ngoal (2 subgoals):\n 1. L = Pos e \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)\n 2. L = Neg e \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "then"], ["proof (chain)\npicking this:\n  x \\<in> subterms_of t \\<or> x \\<in> subterms_of s", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> subterms_of t \\<or> x \\<in> subterms_of s\n\ngoal (1 subgoal):\n 1. x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> subterms_of t \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)\n 2. x \\<in> subterms_of s \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "assume \"x \\<in> subterms_of t\""], ["proof (state)\nthis:\n  x \\<in> subterms_of t\n\ngoal (2 subgoals):\n 1. x \\<in> subterms_of t \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)\n 2. x \\<in> subterms_of s \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "then"], ["proof (chain)\npicking this:\n  x \\<in> subterms_of t", "have \"occurs_in x t\""], ["proof (prove)\nusing this:\n  x \\<in> subterms_of t\n\ngoal (1 subgoal):\n 1. occurs_in x t", "by auto"], ["proof (state)\nthis:\n  occurs_in x t\n\ngoal (2 subgoals):\n 1. x \\<in> subterms_of t \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)\n 2. x \\<in> subterms_of s \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "then"], ["proof (chain)\npicking this:\n  occurs_in x t", "obtain p where \"subterm t p x\""], ["proof (prove)\nusing this:\n  occurs_in x t\n\ngoal (1 subgoal):\n 1. (\\<And>p. subterm t p x \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding occurs_in_def"], ["proof (prove)\nusing this:\n  \\<exists>p. subterm t p x\n\ngoal (1 subgoal):\n 1. (\\<And>p. subterm t p x \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  subterm t p x\n\ngoal (2 subgoals):\n 1. x \\<in> subterms_of t \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)\n 2. x \\<in> subterms_of s \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "from this"], ["proof (chain)\npicking this:\n  subterm t p x", "have \"subterm (subst t \\<sigma>) p (subst x \\<sigma>)\""], ["proof (prove)\nusing this:\n  subterm t p x\n\ngoal (1 subgoal):\n 1. subterm (t \\<lhd> \\<sigma>) p (x \\<lhd> \\<sigma>)", "using substs_preserve_subterms"], ["proof (prove)\nusing this:\n  subterm t p x\n  subterm ?t ?p ?s \\<Longrightarrow>\n  subterm (?t \\<lhd> ?\\<sigma>) ?p (?s \\<lhd> ?\\<sigma>)\n\ngoal (1 subgoal):\n 1. subterm (t \\<lhd> \\<sigma>) p (x \\<lhd> \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  subterm (t \\<lhd> \\<sigma>) p (x \\<lhd> \\<sigma>)\n\ngoal (2 subgoals):\n 1. x \\<in> subterms_of t \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)\n 2. x \\<in> subterms_of s \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "from this"], ["proof (chain)\npicking this:\n  subterm (t \\<lhd> \\<sigma>) p (x \\<lhd> \\<sigma>)", "have \"occurs_in (subst x \\<sigma>) (subst t \\<sigma>)\""], ["proof (prove)\nusing this:\n  subterm (t \\<lhd> \\<sigma>) p (x \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. occurs_in (x \\<lhd> \\<sigma>) (t \\<lhd> \\<sigma>)", "unfolding occurs_in_def"], ["proof (prove)\nusing this:\n  subterm (t \\<lhd> \\<sigma>) p (x \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<exists>p. subterm (t \\<lhd> \\<sigma>) p (x \\<lhd> \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  occurs_in (x \\<lhd> \\<sigma>) (t \\<lhd> \\<sigma>)\n\ngoal (2 subgoals):\n 1. x \\<in> subterms_of t \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)\n 2. x \\<in> subterms_of s \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "then"], ["proof (chain)\npicking this:\n  occurs_in (x \\<lhd> \\<sigma>) (t \\<lhd> \\<sigma>)", "have \"(subst x \\<sigma>) \\<in> subterms_of (subst t \\<sigma>)\""], ["proof (prove)\nusing this:\n  occurs_in (x \\<lhd> \\<sigma>) (t \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. x \\<lhd> \\<sigma> \\<in> subterms_of (t \\<lhd> \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  x \\<lhd> \\<sigma> \\<in> subterms_of (t \\<lhd> \\<sigma>)\n\ngoal (2 subgoals):\n 1. x \\<in> subterms_of t \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)\n 2. x \\<in> subterms_of s \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "then"], ["proof (chain)\npicking this:\n  x \\<lhd> \\<sigma> \\<in> subterms_of (t \\<lhd> \\<sigma>)", "have \"(subst x \\<sigma>) \\<in> subterms_of_eq (Eq (subst t \\<sigma>) (subst s \\<sigma>))\""], ["proof (prove)\nusing this:\n  x \\<lhd> \\<sigma> \\<in> subterms_of (t \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. x \\<lhd> \\<sigma>\n    \\<in> subterms_of_eq (Eq (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>))", "by auto"], ["proof (state)\nthis:\n  x \\<lhd> \\<sigma>\n  \\<in> subterms_of_eq (Eq (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>))\n\ngoal (2 subgoals):\n 1. x \\<in> subterms_of t \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)\n 2. x \\<in> subterms_of s \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "from this and \\<open>L = (Pos e)\\<close> and \\<open>e = Eq t s\\<close>"], ["proof (chain)\npicking this:\n  x \\<lhd> \\<sigma>\n  \\<in> subterms_of_eq (Eq (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>))\n  L = Pos e\n  e = Eq t s", "have \"(subst x \\<sigma>) \\<in> (subterms_of_lit (subst_lit L \\<sigma>))\""], ["proof (prove)\nusing this:\n  x \\<lhd> \\<sigma>\n  \\<in> subterms_of_eq (Eq (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>))\n  L = Pos e\n  e = Eq t s\n\ngoal (1 subgoal):\n 1. x \\<lhd> \\<sigma> \\<in> subterms_of_lit (subst_lit L \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  x \\<lhd> \\<sigma> \\<in> subterms_of_lit (subst_lit L \\<sigma>)\n\ngoal (2 subgoals):\n 1. x \\<in> subterms_of t \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)\n 2. x \\<in> subterms_of s \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "from this and \\<open>(subst_lit L \\<sigma>) \\<in> (subst_cl C \\<sigma>)\\<close>"], ["proof (chain)\npicking this:\n  x \\<lhd> \\<sigma> \\<in> subterms_of_lit (subst_lit L \\<sigma>)\n  subst_lit L \\<sigma> \\<in> subst_cl C \\<sigma>", "show \"(subst x \\<sigma>) \\<in> subterms_of_cl (subst_cl C \\<sigma>)\""], ["proof (prove)\nusing this:\n  x \\<lhd> \\<sigma> \\<in> subterms_of_lit (subst_lit L \\<sigma>)\n  subst_lit L \\<sigma> \\<in> subst_cl C \\<sigma>\n\ngoal (1 subgoal):\n 1. x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)\n\ngoal (1 subgoal):\n 1. x \\<in> subterms_of s \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> subterms_of s \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "assume \"x \\<in> subterms_of s\""], ["proof (state)\nthis:\n  x \\<in> subterms_of s\n\ngoal (1 subgoal):\n 1. x \\<in> subterms_of s \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "then"], ["proof (chain)\npicking this:\n  x \\<in> subterms_of s", "have \"occurs_in x s\""], ["proof (prove)\nusing this:\n  x \\<in> subterms_of s\n\ngoal (1 subgoal):\n 1. occurs_in x s", "by auto"], ["proof (state)\nthis:\n  occurs_in x s\n\ngoal (1 subgoal):\n 1. x \\<in> subterms_of s \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "then"], ["proof (chain)\npicking this:\n  occurs_in x s", "obtain p where \"subterm s p x\""], ["proof (prove)\nusing this:\n  occurs_in x s\n\ngoal (1 subgoal):\n 1. (\\<And>p. subterm s p x \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding occurs_in_def"], ["proof (prove)\nusing this:\n  \\<exists>p. subterm s p x\n\ngoal (1 subgoal):\n 1. (\\<And>p. subterm s p x \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  subterm s p x\n\ngoal (1 subgoal):\n 1. x \\<in> subterms_of s \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "from this"], ["proof (chain)\npicking this:\n  subterm s p x", "have \"subterm (subst s \\<sigma>) p (subst x \\<sigma>)\""], ["proof (prove)\nusing this:\n  subterm s p x\n\ngoal (1 subgoal):\n 1. subterm (s \\<lhd> \\<sigma>) p (x \\<lhd> \\<sigma>)", "using substs_preserve_subterms"], ["proof (prove)\nusing this:\n  subterm s p x\n  subterm ?t ?p ?s \\<Longrightarrow>\n  subterm (?t \\<lhd> ?\\<sigma>) ?p (?s \\<lhd> ?\\<sigma>)\n\ngoal (1 subgoal):\n 1. subterm (s \\<lhd> \\<sigma>) p (x \\<lhd> \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  subterm (s \\<lhd> \\<sigma>) p (x \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. x \\<in> subterms_of s \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "from this"], ["proof (chain)\npicking this:\n  subterm (s \\<lhd> \\<sigma>) p (x \\<lhd> \\<sigma>)", "have \"occurs_in (subst x \\<sigma>) (subst s \\<sigma>)\""], ["proof (prove)\nusing this:\n  subterm (s \\<lhd> \\<sigma>) p (x \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. occurs_in (x \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)", "unfolding occurs_in_def"], ["proof (prove)\nusing this:\n  subterm (s \\<lhd> \\<sigma>) p (x \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<exists>p. subterm (s \\<lhd> \\<sigma>) p (x \\<lhd> \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  occurs_in (x \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. x \\<in> subterms_of s \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "then"], ["proof (chain)\npicking this:\n  occurs_in (x \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)", "have \"(subst x \\<sigma>) \\<in> subterms_of (subst s \\<sigma>)\""], ["proof (prove)\nusing this:\n  occurs_in (x \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. x \\<lhd> \\<sigma> \\<in> subterms_of (s \\<lhd> \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  x \\<lhd> \\<sigma> \\<in> subterms_of (s \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. x \\<in> subterms_of s \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "then"], ["proof (chain)\npicking this:\n  x \\<lhd> \\<sigma> \\<in> subterms_of (s \\<lhd> \\<sigma>)", "have \"(subst x \\<sigma>) \\<in> subterms_of_eq (Eq (subst t \\<sigma>) (subst s \\<sigma>))\""], ["proof (prove)\nusing this:\n  x \\<lhd> \\<sigma> \\<in> subterms_of (s \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. x \\<lhd> \\<sigma>\n    \\<in> subterms_of_eq (Eq (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>))", "by auto"], ["proof (state)\nthis:\n  x \\<lhd> \\<sigma>\n  \\<in> subterms_of_eq (Eq (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>))\n\ngoal (1 subgoal):\n 1. x \\<in> subterms_of s \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "from this and \\<open>L = (Pos e)\\<close> and \\<open>e = Eq t s\\<close>"], ["proof (chain)\npicking this:\n  x \\<lhd> \\<sigma>\n  \\<in> subterms_of_eq (Eq (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>))\n  L = Pos e\n  e = Eq t s", "have \"(subst x \\<sigma>) \\<in> (subterms_of_lit (subst_lit L \\<sigma>))\""], ["proof (prove)\nusing this:\n  x \\<lhd> \\<sigma>\n  \\<in> subterms_of_eq (Eq (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>))\n  L = Pos e\n  e = Eq t s\n\ngoal (1 subgoal):\n 1. x \\<lhd> \\<sigma> \\<in> subterms_of_lit (subst_lit L \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  x \\<lhd> \\<sigma> \\<in> subterms_of_lit (subst_lit L \\<sigma>)\n\ngoal (1 subgoal):\n 1. x \\<in> subterms_of s \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "from this and \\<open>(subst_lit L \\<sigma>) \\<in> (subst_cl C \\<sigma>)\\<close>"], ["proof (chain)\npicking this:\n  x \\<lhd> \\<sigma> \\<in> subterms_of_lit (subst_lit L \\<sigma>)\n  subst_lit L \\<sigma> \\<in> subst_cl C \\<sigma>", "show \"(subst x \\<sigma>) \\<in> subterms_of_cl (subst_cl C \\<sigma>)\""], ["proof (prove)\nusing this:\n  x \\<lhd> \\<sigma> \\<in> subterms_of_lit (subst_lit L \\<sigma>)\n  subst_lit L \\<sigma> \\<in> subst_cl C \\<sigma>\n\ngoal (1 subgoal):\n 1. x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)\n\ngoal (1 subgoal):\n 1. L = Neg e \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. L = Neg e \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "assume \"L = (Neg e)\""], ["proof (state)\nthis:\n  L = Neg e\n\ngoal (1 subgoal):\n 1. L = Neg e \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "from this and \\<open>x \\<in> subterms_of_lit L\\<close>"], ["proof (chain)\npicking this:\n  L = Neg e\n  x \\<in> subterms_of_lit L", "have \"x \\<in> subterms_of_eq e\""], ["proof (prove)\nusing this:\n  L = Neg e\n  x \\<in> subterms_of_lit L\n\ngoal (1 subgoal):\n 1. x \\<in> subterms_of_eq e", "by auto"], ["proof (state)\nthis:\n  x \\<in> subterms_of_eq e\n\ngoal (1 subgoal):\n 1. L = Neg e \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "from \\<open>L = (Neg e)\\<close>"], ["proof (chain)\npicking this:\n  L = Neg e", "have \"(subst_lit L \\<sigma>) = (Neg (subst_equation e \\<sigma>))\""], ["proof (prove)\nusing this:\n  L = Neg e\n\ngoal (1 subgoal):\n 1. subst_lit L \\<sigma> = Neg (subst_equation e \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  subst_lit L \\<sigma> = Neg (subst_equation e \\<sigma>)\n\ngoal (1 subgoal):\n 1. L = Neg e \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "obtain t s where \"e = (Eq t s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t s. e = Eq t s \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using equation.exhaust"], ["proof (prove)\nusing this:\n  (\\<And>x1 x2. ?y = Eq x1 x2 \\<Longrightarrow> ?P) \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>t s. e = Eq t s \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  e = Eq t s\n\ngoal (1 subgoal):\n 1. L = Neg e \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "from this"], ["proof (chain)\npicking this:\n  e = Eq t s", "have \"(subst_equation e \\<sigma>) = (Eq (subst t \\<sigma>)  (subst s \\<sigma>))\""], ["proof (prove)\nusing this:\n  e = Eq t s\n\ngoal (1 subgoal):\n 1. subst_equation e \\<sigma> = Eq (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  subst_equation e \\<sigma> = Eq (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. L = Neg e \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "from \\<open>x \\<in> subterms_of_eq e\\<close> and \\<open>e = (Eq t s)\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> subterms_of_eq e\n  e = Eq t s", "have \"x \\<in> subterms_of t \\<or> x \\<in> subterms_of s\""], ["proof (prove)\nusing this:\n  x \\<in> subterms_of_eq e\n  e = Eq t s\n\ngoal (1 subgoal):\n 1. x \\<in> subterms_of t \\<or> x \\<in> subterms_of s", "by auto"], ["proof (state)\nthis:\n  x \\<in> subterms_of t \\<or> x \\<in> subterms_of s\n\ngoal (1 subgoal):\n 1. L = Neg e \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "then"], ["proof (chain)\npicking this:\n  x \\<in> subterms_of t \\<or> x \\<in> subterms_of s", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> subterms_of t \\<or> x \\<in> subterms_of s\n\ngoal (1 subgoal):\n 1. x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> subterms_of t \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)\n 2. x \\<in> subterms_of s \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "assume \"x \\<in> subterms_of t\""], ["proof (state)\nthis:\n  x \\<in> subterms_of t\n\ngoal (2 subgoals):\n 1. x \\<in> subterms_of t \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)\n 2. x \\<in> subterms_of s \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "then"], ["proof (chain)\npicking this:\n  x \\<in> subterms_of t", "have \"occurs_in x t\""], ["proof (prove)\nusing this:\n  x \\<in> subterms_of t\n\ngoal (1 subgoal):\n 1. occurs_in x t", "by auto"], ["proof (state)\nthis:\n  occurs_in x t\n\ngoal (2 subgoals):\n 1. x \\<in> subterms_of t \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)\n 2. x \\<in> subterms_of s \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "then"], ["proof (chain)\npicking this:\n  occurs_in x t", "obtain p where \"subterm t p x\""], ["proof (prove)\nusing this:\n  occurs_in x t\n\ngoal (1 subgoal):\n 1. (\\<And>p. subterm t p x \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding occurs_in_def"], ["proof (prove)\nusing this:\n  \\<exists>p. subterm t p x\n\ngoal (1 subgoal):\n 1. (\\<And>p. subterm t p x \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  subterm t p x\n\ngoal (2 subgoals):\n 1. x \\<in> subterms_of t \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)\n 2. x \\<in> subterms_of s \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "from this"], ["proof (chain)\npicking this:\n  subterm t p x", "have \"subterm (subst t \\<sigma>) p (subst x \\<sigma>)\""], ["proof (prove)\nusing this:\n  subterm t p x\n\ngoal (1 subgoal):\n 1. subterm (t \\<lhd> \\<sigma>) p (x \\<lhd> \\<sigma>)", "using substs_preserve_subterms"], ["proof (prove)\nusing this:\n  subterm t p x\n  subterm ?t ?p ?s \\<Longrightarrow>\n  subterm (?t \\<lhd> ?\\<sigma>) ?p (?s \\<lhd> ?\\<sigma>)\n\ngoal (1 subgoal):\n 1. subterm (t \\<lhd> \\<sigma>) p (x \\<lhd> \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  subterm (t \\<lhd> \\<sigma>) p (x \\<lhd> \\<sigma>)\n\ngoal (2 subgoals):\n 1. x \\<in> subterms_of t \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)\n 2. x \\<in> subterms_of s \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "from this"], ["proof (chain)\npicking this:\n  subterm (t \\<lhd> \\<sigma>) p (x \\<lhd> \\<sigma>)", "have \"occurs_in (subst x \\<sigma>) (subst t \\<sigma>)\""], ["proof (prove)\nusing this:\n  subterm (t \\<lhd> \\<sigma>) p (x \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. occurs_in (x \\<lhd> \\<sigma>) (t \\<lhd> \\<sigma>)", "unfolding occurs_in_def"], ["proof (prove)\nusing this:\n  subterm (t \\<lhd> \\<sigma>) p (x \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<exists>p. subterm (t \\<lhd> \\<sigma>) p (x \\<lhd> \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  occurs_in (x \\<lhd> \\<sigma>) (t \\<lhd> \\<sigma>)\n\ngoal (2 subgoals):\n 1. x \\<in> subterms_of t \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)\n 2. x \\<in> subterms_of s \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "then"], ["proof (chain)\npicking this:\n  occurs_in (x \\<lhd> \\<sigma>) (t \\<lhd> \\<sigma>)", "have \"(subst x \\<sigma>) \\<in> subterms_of (subst t \\<sigma>)\""], ["proof (prove)\nusing this:\n  occurs_in (x \\<lhd> \\<sigma>) (t \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. x \\<lhd> \\<sigma> \\<in> subterms_of (t \\<lhd> \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  x \\<lhd> \\<sigma> \\<in> subterms_of (t \\<lhd> \\<sigma>)\n\ngoal (2 subgoals):\n 1. x \\<in> subterms_of t \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)\n 2. x \\<in> subterms_of s \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "then"], ["proof (chain)\npicking this:\n  x \\<lhd> \\<sigma> \\<in> subterms_of (t \\<lhd> \\<sigma>)", "have \"(subst x \\<sigma>) \\<in> subterms_of_eq (Eq (subst t \\<sigma>) (subst s \\<sigma>))\""], ["proof (prove)\nusing this:\n  x \\<lhd> \\<sigma> \\<in> subterms_of (t \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. x \\<lhd> \\<sigma>\n    \\<in> subterms_of_eq (Eq (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>))", "by auto"], ["proof (state)\nthis:\n  x \\<lhd> \\<sigma>\n  \\<in> subterms_of_eq (Eq (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>))\n\ngoal (2 subgoals):\n 1. x \\<in> subterms_of t \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)\n 2. x \\<in> subterms_of s \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "from this and \\<open>L = (Neg e)\\<close> and \\<open>e = Eq t s\\<close>"], ["proof (chain)\npicking this:\n  x \\<lhd> \\<sigma>\n  \\<in> subterms_of_eq (Eq (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>))\n  L = Neg e\n  e = Eq t s", "have \"(subst x \\<sigma>) \\<in> (subterms_of_lit (subst_lit L \\<sigma>))\""], ["proof (prove)\nusing this:\n  x \\<lhd> \\<sigma>\n  \\<in> subterms_of_eq (Eq (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>))\n  L = Neg e\n  e = Eq t s\n\ngoal (1 subgoal):\n 1. x \\<lhd> \\<sigma> \\<in> subterms_of_lit (subst_lit L \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  x \\<lhd> \\<sigma> \\<in> subterms_of_lit (subst_lit L \\<sigma>)\n\ngoal (2 subgoals):\n 1. x \\<in> subterms_of t \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)\n 2. x \\<in> subterms_of s \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "from this and \\<open>(subst_lit L \\<sigma>) \\<in> (subst_cl C \\<sigma>)\\<close>"], ["proof (chain)\npicking this:\n  x \\<lhd> \\<sigma> \\<in> subterms_of_lit (subst_lit L \\<sigma>)\n  subst_lit L \\<sigma> \\<in> subst_cl C \\<sigma>", "show \"(subst x \\<sigma>) \\<in> subterms_of_cl (subst_cl C \\<sigma>)\""], ["proof (prove)\nusing this:\n  x \\<lhd> \\<sigma> \\<in> subterms_of_lit (subst_lit L \\<sigma>)\n  subst_lit L \\<sigma> \\<in> subst_cl C \\<sigma>\n\ngoal (1 subgoal):\n 1. x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)\n\ngoal (1 subgoal):\n 1. x \\<in> subterms_of s \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> subterms_of s \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "assume \"x \\<in> subterms_of s\""], ["proof (state)\nthis:\n  x \\<in> subterms_of s\n\ngoal (1 subgoal):\n 1. x \\<in> subterms_of s \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "then"], ["proof (chain)\npicking this:\n  x \\<in> subterms_of s", "have \"occurs_in x s\""], ["proof (prove)\nusing this:\n  x \\<in> subterms_of s\n\ngoal (1 subgoal):\n 1. occurs_in x s", "by auto"], ["proof (state)\nthis:\n  occurs_in x s\n\ngoal (1 subgoal):\n 1. x \\<in> subterms_of s \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "then"], ["proof (chain)\npicking this:\n  occurs_in x s", "obtain p where \"subterm s p x\""], ["proof (prove)\nusing this:\n  occurs_in x s\n\ngoal (1 subgoal):\n 1. (\\<And>p. subterm s p x \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding occurs_in_def"], ["proof (prove)\nusing this:\n  \\<exists>p. subterm s p x\n\ngoal (1 subgoal):\n 1. (\\<And>p. subterm s p x \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  subterm s p x\n\ngoal (1 subgoal):\n 1. x \\<in> subterms_of s \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "from this"], ["proof (chain)\npicking this:\n  subterm s p x", "have \"subterm (subst s \\<sigma>) p (subst x \\<sigma>)\""], ["proof (prove)\nusing this:\n  subterm s p x\n\ngoal (1 subgoal):\n 1. subterm (s \\<lhd> \\<sigma>) p (x \\<lhd> \\<sigma>)", "using substs_preserve_subterms"], ["proof (prove)\nusing this:\n  subterm s p x\n  subterm ?t ?p ?s \\<Longrightarrow>\n  subterm (?t \\<lhd> ?\\<sigma>) ?p (?s \\<lhd> ?\\<sigma>)\n\ngoal (1 subgoal):\n 1. subterm (s \\<lhd> \\<sigma>) p (x \\<lhd> \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  subterm (s \\<lhd> \\<sigma>) p (x \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. x \\<in> subterms_of s \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "from this"], ["proof (chain)\npicking this:\n  subterm (s \\<lhd> \\<sigma>) p (x \\<lhd> \\<sigma>)", "have \"occurs_in (subst x \\<sigma>) (subst s \\<sigma>)\""], ["proof (prove)\nusing this:\n  subterm (s \\<lhd> \\<sigma>) p (x \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. occurs_in (x \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)", "unfolding occurs_in_def"], ["proof (prove)\nusing this:\n  subterm (s \\<lhd> \\<sigma>) p (x \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<exists>p. subterm (s \\<lhd> \\<sigma>) p (x \\<lhd> \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  occurs_in (x \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. x \\<in> subterms_of s \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "then"], ["proof (chain)\npicking this:\n  occurs_in (x \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)", "have \"(subst x \\<sigma>) \\<in> subterms_of (subst s \\<sigma>)\""], ["proof (prove)\nusing this:\n  occurs_in (x \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. x \\<lhd> \\<sigma> \\<in> subterms_of (s \\<lhd> \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  x \\<lhd> \\<sigma> \\<in> subterms_of (s \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. x \\<in> subterms_of s \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "then"], ["proof (chain)\npicking this:\n  x \\<lhd> \\<sigma> \\<in> subterms_of (s \\<lhd> \\<sigma>)", "have \"(subst x \\<sigma>) \\<in> subterms_of_eq (Eq (subst t \\<sigma>) (subst s \\<sigma>))\""], ["proof (prove)\nusing this:\n  x \\<lhd> \\<sigma> \\<in> subterms_of (s \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. x \\<lhd> \\<sigma>\n    \\<in> subterms_of_eq (Eq (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>))", "by auto"], ["proof (state)\nthis:\n  x \\<lhd> \\<sigma>\n  \\<in> subterms_of_eq (Eq (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>))\n\ngoal (1 subgoal):\n 1. x \\<in> subterms_of s \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "from this and \\<open>L = (Neg e)\\<close> and \\<open>e = Eq t s\\<close>"], ["proof (chain)\npicking this:\n  x \\<lhd> \\<sigma>\n  \\<in> subterms_of_eq (Eq (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>))\n  L = Neg e\n  e = Eq t s", "have \"(subst x \\<sigma>) \\<in> (subterms_of_lit (subst_lit L \\<sigma>))\""], ["proof (prove)\nusing this:\n  x \\<lhd> \\<sigma>\n  \\<in> subterms_of_eq (Eq (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>))\n  L = Neg e\n  e = Eq t s\n\ngoal (1 subgoal):\n 1. x \\<lhd> \\<sigma> \\<in> subterms_of_lit (subst_lit L \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  x \\<lhd> \\<sigma> \\<in> subterms_of_lit (subst_lit L \\<sigma>)\n\ngoal (1 subgoal):\n 1. x \\<in> subterms_of s \\<Longrightarrow>\n    x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "from this and \\<open>(subst_lit L \\<sigma>) \\<in> (subst_cl C \\<sigma>)\\<close>"], ["proof (chain)\npicking this:\n  x \\<lhd> \\<sigma> \\<in> subterms_of_lit (subst_lit L \\<sigma>)\n  subst_lit L \\<sigma> \\<in> subst_cl C \\<sigma>", "show \"(subst x \\<sigma>) \\<in> subterms_of_cl (subst_cl C \\<sigma>)\""], ["proof (prove)\nusing this:\n  x \\<lhd> \\<sigma> \\<in> subterms_of_lit (subst_lit L \\<sigma>)\n  subst_lit L \\<sigma> \\<in> subst_cl C \\<sigma>\n\ngoal (1 subgoal):\n 1. x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<lhd> \\<sigma> \\<in> subterms_of_cl (subst_cl C \\<sigma>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ground_substs_yield_ground_clause:\n  assumes \"ground_on (vars_of_cl C) \\<sigma>\"\n  shows \"ground_clause (subst_cl C \\<sigma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ground_clause (subst_cl C \\<sigma>)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> ground_clause (subst_cl C \\<sigma>) \\<Longrightarrow> False", "let ?D = \"(subst_cl C \\<sigma>)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> ground_clause (subst_cl C \\<sigma>) \\<Longrightarrow> False", "let ?V = \"(vars_of_cl C)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> ground_clause (subst_cl C \\<sigma>) \\<Longrightarrow> False", "assume \"\\<not>(ground_clause ?D)\""], ["proof (state)\nthis:\n  \\<not> ground_clause (subst_cl C \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<not> ground_clause (subst_cl C \\<sigma>) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> ground_clause (subst_cl C \\<sigma>)", "obtain x where \"x \\<in> (vars_of_cl ?D)\""], ["proof (prove)\nusing this:\n  \\<not> ground_clause (subst_cl C \\<sigma>)\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        x \\<in> vars_of_cl (subst_cl C \\<sigma>) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> vars_of_cl (subst_cl C \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<not> ground_clause (subst_cl C \\<sigma>) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  x \\<in> vars_of_cl (subst_cl C \\<sigma>)", "obtain l where \"l \\<in> C\" and \"x \\<in> (vars_of_lit (subst_lit l  \\<sigma>))\""], ["proof (prove)\nusing this:\n  x \\<in> vars_of_cl (subst_cl C \\<sigma>)\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>l \\<in> C;\n         x \\<in> vars_of_lit (subst_lit l \\<sigma>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  l \\<in> C\n  x \\<in> vars_of_lit (subst_lit l \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<not> ground_clause (subst_cl C \\<sigma>) \\<Longrightarrow> False", "from \\<open>l \\<in> C\\<close>"], ["proof (chain)\npicking this:\n  l \\<in> C", "have \"vars_of_lit l \\<subseteq> vars_of_cl C\""], ["proof (prove)\nusing this:\n  l \\<in> C\n\ngoal (1 subgoal):\n 1. vars_of_lit l \\<subseteq> vars_of_cl C", "by auto"], ["proof (state)\nthis:\n  vars_of_lit l \\<subseteq> vars_of_cl C\n\ngoal (1 subgoal):\n 1. \\<not> ground_clause (subst_cl C \\<sigma>) \\<Longrightarrow> False", "obtain e  where \"l = Pos e \\<or> l = Neg e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>e.\n        l = Pos e \\<or> l = Neg e \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using literal.exhaust"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x1. ?y = Pos x1 \\<Longrightarrow> ?P;\n   \\<And>x2. ?y = Neg x2 \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        l = Pos e \\<or> l = Neg e \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  l = Pos e \\<or> l = Neg e\n\ngoal (1 subgoal):\n 1. \\<not> ground_clause (subst_cl C \\<sigma>) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  l = Pos e \\<or> l = Neg e", "have \"vars_of_lit l = vars_of_eq e\""], ["proof (prove)\nusing this:\n  l = Pos e \\<or> l = Neg e\n\ngoal (1 subgoal):\n 1. vars_of_lit l = vars_of_eq e", "by auto"], ["proof (state)\nthis:\n  vars_of_lit l = vars_of_eq e\n\ngoal (1 subgoal):\n 1. \\<not> ground_clause (subst_cl C \\<sigma>) \\<Longrightarrow> False", "let ?l' = \"(subst_lit l \\<sigma>)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> ground_clause (subst_cl C \\<sigma>) \\<Longrightarrow> False", "let ?e' = \"(subst_equation e \\<sigma>)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> ground_clause (subst_cl C \\<sigma>) \\<Longrightarrow> False", "obtain t and s where \"e = Eq t s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t s. e = Eq t s \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using equation.exhaust"], ["proof (prove)\nusing this:\n  (\\<And>x1 x2. ?y = Eq x1 x2 \\<Longrightarrow> ?P) \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>t s. e = Eq t s \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  e = Eq t s\n\ngoal (1 subgoal):\n 1. \\<not> ground_clause (subst_cl C \\<sigma>) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  e = Eq t s", "have \"vars_of_eq e = vars_of t \\<union> vars_of s\""], ["proof (prove)\nusing this:\n  e = Eq t s\n\ngoal (1 subgoal):\n 1. vars_of_eq e = vars_of t \\<union> vars_of s", "by auto"], ["proof (state)\nthis:\n  vars_of_eq e = vars_of t \\<union> vars_of s\n\ngoal (1 subgoal):\n 1. \\<not> ground_clause (subst_cl C \\<sigma>) \\<Longrightarrow> False", "let ?t' = \"(subst t \\<sigma>)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> ground_clause (subst_cl C \\<sigma>) \\<Longrightarrow> False", "let ?s' = \"(subst s \\<sigma>)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> ground_clause (subst_cl C \\<sigma>) \\<Longrightarrow> False", "from \\<open>e = Eq t s\\<close>"], ["proof (chain)\npicking this:\n  e = Eq t s", "have \"?e' = (Eq ?t' ?s')\""], ["proof (prove)\nusing this:\n  e = Eq t s\n\ngoal (1 subgoal):\n 1. subst_equation e \\<sigma> = Eq (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  subst_equation e \\<sigma> = Eq (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<not> ground_clause (subst_cl C \\<sigma>) \\<Longrightarrow> False", "from \\<open>l = Pos e \\<or> l = Neg e\\<close>"], ["proof (chain)\npicking this:\n  l = Pos e \\<or> l = Neg e", "have \"?l' = Pos ?e' \\<or> ?l' = Neg ?e'\""], ["proof (prove)\nusing this:\n  l = Pos e \\<or> l = Neg e\n\ngoal (1 subgoal):\n 1. subst_lit l \\<sigma> = Pos (subst_equation e \\<sigma>) \\<or>\n    subst_lit l \\<sigma> = Neg (subst_equation e \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  subst_lit l \\<sigma> = Pos (subst_equation e \\<sigma>) \\<or>\n  subst_lit l \\<sigma> = Neg (subst_equation e \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<not> ground_clause (subst_cl C \\<sigma>) \\<Longrightarrow> False", "from \\<open>l \\<in> C\\<close>"], ["proof (chain)\npicking this:\n  l \\<in> C", "have \"?l' \\<in> ?D\""], ["proof (prove)\nusing this:\n  l \\<in> C\n\ngoal (1 subgoal):\n 1. subst_lit l \\<sigma> \\<in> subst_cl C \\<sigma>", "by auto"], ["proof (state)\nthis:\n  subst_lit l \\<sigma> \\<in> subst_cl C \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<not> ground_clause (subst_cl C \\<sigma>) \\<Longrightarrow> False", "from \\<open>?l' = Pos ?e' \\<or> ?l' = Neg ?e'\\<close> and \\<open>x \\<in> (vars_of_lit ?l')\\<close>"], ["proof (chain)\npicking this:\n  subst_lit l \\<sigma> = Pos (subst_equation e \\<sigma>) \\<or>\n  subst_lit l \\<sigma> = Neg (subst_equation e \\<sigma>)\n  x \\<in> vars_of_lit (subst_lit l \\<sigma>)", "have \"x \\<in> (vars_of_eq ?e')\""], ["proof (prove)\nusing this:\n  subst_lit l \\<sigma> = Pos (subst_equation e \\<sigma>) \\<or>\n  subst_lit l \\<sigma> = Neg (subst_equation e \\<sigma>)\n  x \\<in> vars_of_lit (subst_lit l \\<sigma>)\n\ngoal (1 subgoal):\n 1. x \\<in> vars_of_eq (subst_equation e \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  x \\<in> vars_of_eq (subst_equation e \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<not> ground_clause (subst_cl C \\<sigma>) \\<Longrightarrow> False", "from this and \\<open>?e' = (Eq ?t' ?s')\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> vars_of_eq (subst_equation e \\<sigma>)\n  subst_equation e \\<sigma> = Eq (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)", "have \"x \\<in> (vars_of ?t' \\<union> vars_of ?s')\""], ["proof (prove)\nusing this:\n  x \\<in> vars_of_eq (subst_equation e \\<sigma>)\n  subst_equation e \\<sigma> = Eq (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. x \\<in> vars_of (t \\<lhd> \\<sigma>) \\<union> vars_of (s \\<lhd> \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  x \\<in> vars_of (t \\<lhd> \\<sigma>) \\<union> vars_of (s \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<not> ground_clause (subst_cl C \\<sigma>) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  x \\<in> vars_of (t \\<lhd> \\<sigma>) \\<union> vars_of (s \\<lhd> \\<sigma>)", "have i:\"\\<not>(ground_term ?t') \\<or> \\<not>(ground_term ?s')\""], ["proof (prove)\nusing this:\n  x \\<in> vars_of (t \\<lhd> \\<sigma>) \\<union> vars_of (s \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<not> ground_term (t \\<lhd> \\<sigma>) \\<or>\n    \\<not> ground_term (s \\<lhd> \\<sigma>)", "unfolding ground_term_def"], ["proof (prove)\nusing this:\n  x \\<in> vars_of (t \\<lhd> \\<sigma>) \\<union> vars_of (s \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. vars_of (t \\<lhd> \\<sigma>) \\<noteq> {} \\<or>\n    vars_of (s \\<lhd> \\<sigma>) \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  \\<not> ground_term (t \\<lhd> \\<sigma>) \\<or>\n  \\<not> ground_term (s \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<not> ground_clause (subst_cl C \\<sigma>) \\<Longrightarrow> False", "from \\<open>vars_of_eq e = vars_of t \\<union> vars_of s\\<close> and \\<open>vars_of_lit l = vars_of_eq e\\<close> and\n      \\<open>vars_of_lit l \\<subseteq> ?V\\<close>"], ["proof (chain)\npicking this:\n  vars_of_eq e = vars_of t \\<union> vars_of s\n  vars_of_lit l = vars_of_eq e\n  vars_of_lit l \\<subseteq> vars_of_cl C", "have \"vars_of t \\<subseteq> ?V\" and \"vars_of s \\<subseteq> ?V\""], ["proof (prove)\nusing this:\n  vars_of_eq e = vars_of t \\<union> vars_of s\n  vars_of_lit l = vars_of_eq e\n  vars_of_lit l \\<subseteq> vars_of_cl C\n\ngoal (1 subgoal):\n 1. vars_of t \\<subseteq> vars_of_cl C &&&\n    vars_of s \\<subseteq> vars_of_cl C", "by auto"], ["proof (state)\nthis:\n  vars_of t \\<subseteq> vars_of_cl C\n  vars_of s \\<subseteq> vars_of_cl C\n\ngoal (1 subgoal):\n 1. \\<not> ground_clause (subst_cl C \\<sigma>) \\<Longrightarrow> False", "from \\<open>vars_of t  \\<subseteq> ?V\\<close> and \\<open>ground_on ?V \\<sigma>\\<close>"], ["proof (chain)\npicking this:\n  vars_of t \\<subseteq> vars_of_cl C\n  ground_on (vars_of_cl C) \\<sigma>", "have  \"ground_on (vars_of t) \\<sigma>\""], ["proof (prove)\nusing this:\n  vars_of t \\<subseteq> vars_of_cl C\n  ground_on (vars_of_cl C) \\<sigma>\n\ngoal (1 subgoal):\n 1. ground_on (vars_of t) \\<sigma>", "unfolding ground_on_def"], ["proof (prove)\nusing this:\n  vars_of t \\<subseteq> vars_of_cl C\n  \\<forall>x\\<in>vars_of_cl C. ground_term (Var x \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>vars_of t. ground_term (Var x \\<lhd> \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  ground_on (vars_of t) \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<not> ground_clause (subst_cl C \\<sigma>) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  ground_on (vars_of t) \\<sigma>", "have ii:\"ground_term ?t'\""], ["proof (prove)\nusing this:\n  ground_on (vars_of t) \\<sigma>\n\ngoal (1 subgoal):\n 1. ground_term (t \\<lhd> \\<sigma>)", "using ground_instance"], ["proof (prove)\nusing this:\n  ground_on (vars_of t) \\<sigma>\n  ground_on (vars_of ?t) ?\\<sigma> \\<Longrightarrow>\n  ground_term (?t \\<lhd> ?\\<sigma>)\n\ngoal (1 subgoal):\n 1. ground_term (t \\<lhd> \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  ground_term (t \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<not> ground_clause (subst_cl C \\<sigma>) \\<Longrightarrow> False", "from \\<open>vars_of s  \\<subseteq> ?V\\<close> and \\<open>ground_on ?V \\<sigma>\\<close>"], ["proof (chain)\npicking this:\n  vars_of s \\<subseteq> vars_of_cl C\n  ground_on (vars_of_cl C) \\<sigma>", "have  \"ground_on (vars_of s) \\<sigma>\""], ["proof (prove)\nusing this:\n  vars_of s \\<subseteq> vars_of_cl C\n  ground_on (vars_of_cl C) \\<sigma>\n\ngoal (1 subgoal):\n 1. ground_on (vars_of s) \\<sigma>", "unfolding ground_on_def"], ["proof (prove)\nusing this:\n  vars_of s \\<subseteq> vars_of_cl C\n  \\<forall>x\\<in>vars_of_cl C. ground_term (Var x \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>vars_of s. ground_term (Var x \\<lhd> \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  ground_on (vars_of s) \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<not> ground_clause (subst_cl C \\<sigma>) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  ground_on (vars_of s) \\<sigma>", "have iii:\"ground_term ?s'\""], ["proof (prove)\nusing this:\n  ground_on (vars_of s) \\<sigma>\n\ngoal (1 subgoal):\n 1. ground_term (s \\<lhd> \\<sigma>)", "using ground_instance"], ["proof (prove)\nusing this:\n  ground_on (vars_of s) \\<sigma>\n  ground_on (vars_of ?t) ?\\<sigma> \\<Longrightarrow>\n  ground_term (?t \\<lhd> ?\\<sigma>)\n\ngoal (1 subgoal):\n 1. ground_term (s \\<lhd> \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  ground_term (s \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<not> ground_clause (subst_cl C \\<sigma>) \\<Longrightarrow> False", "from i and ii and iii"], ["proof (chain)\npicking this:\n  \\<not> ground_term (t \\<lhd> \\<sigma>) \\<or>\n  \\<not> ground_term (s \\<lhd> \\<sigma>)\n  ground_term (t \\<lhd> \\<sigma>)\n  ground_term (s \\<lhd> \\<sigma>)", "show False"], ["proof (prove)\nusing this:\n  \\<not> ground_term (t \\<lhd> \\<sigma>) \\<or>\n  \\<not> ground_term (s \\<lhd> \\<sigma>)\n  ground_term (t \\<lhd> \\<sigma>)\n  ground_term (s \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ground_clauses_and_ground_substs:\n  assumes \"ground_clause (subst_cl C \\<sigma>)\"\n  shows \"ground_on (vars_of_cl C) \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ground_on (vars_of_cl C) \\<sigma>", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> ground_on (vars_of_cl C) \\<sigma> \\<Longrightarrow> False", "assume \"\\<not>ground_on (vars_of_cl C) \\<sigma>\""], ["proof (state)\nthis:\n  \\<not> ground_on (vars_of_cl C) \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<not> ground_on (vars_of_cl C) \\<sigma> \\<Longrightarrow> False", "from this"], ["proof (chain)\npicking this:\n  \\<not> ground_on (vars_of_cl C) \\<sigma>", "obtain x where \"x \\<in> vars_of_cl C\" and \"\\<not> ground_term (subst (Var x) \\<sigma>)\""], ["proof (prove)\nusing this:\n  \\<not> ground_on (vars_of_cl C) \\<sigma>\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> vars_of_cl C;\n         \\<not> ground_term (Var x \\<lhd> \\<sigma>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding ground_on_def"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>x\\<in>vars_of_cl C. ground_term (Var x \\<lhd> \\<sigma>))\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> vars_of_cl C;\n         \\<not> ground_term (Var x \\<lhd> \\<sigma>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> vars_of_cl C\n  \\<not> ground_term (Var x \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<not> ground_on (vars_of_cl C) \\<sigma> \\<Longrightarrow> False", "from \\<open>\\<not> ground_term (subst (Var x) \\<sigma>)\\<close>"], ["proof (chain)\npicking this:\n  \\<not> ground_term (Var x \\<lhd> \\<sigma>)", "obtain y where \n    \"y \\<in> vars_of (subst (Var x) \\<sigma>)\""], ["proof (prove)\nusing this:\n  \\<not> ground_term (Var x \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        y \\<in> vars_of (Var x \\<lhd> \\<sigma>) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding ground_term_def"], ["proof (prove)\nusing this:\n  vars_of (Var x \\<lhd> \\<sigma>) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        y \\<in> vars_of (Var x \\<lhd> \\<sigma>) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  y \\<in> vars_of (Var x \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<not> ground_on (vars_of_cl C) \\<sigma> \\<Longrightarrow> False", "from \\<open>x \\<in> vars_of_cl C\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> vars_of_cl C", "obtain L where \"L \\<in> C\" and \"x \\<in> vars_of_lit L\""], ["proof (prove)\nusing this:\n  x \\<in> vars_of_cl C\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        \\<lbrakk>L \\<in> C; x \\<in> vars_of_lit L\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  L \\<in> C\n  x \\<in> vars_of_lit L\n\ngoal (1 subgoal):\n 1. \\<not> ground_on (vars_of_cl C) \\<sigma> \\<Longrightarrow> False", "from \\<open>x \\<in> vars_of_lit L\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> vars_of_lit L", "obtain e where \"L = Pos e \\<or> L = Neg e\" and \"x \\<in> vars_of_eq e\""], ["proof (prove)\nusing this:\n  x \\<in> vars_of_lit L\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>L = Pos e \\<or> L = Neg e; x \\<in> vars_of_eq e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis vars_of_lit.elims)"], ["proof (state)\nthis:\n  L = Pos e \\<or> L = Neg e\n  x \\<in> vars_of_eq e\n\ngoal (1 subgoal):\n 1. \\<not> ground_on (vars_of_cl C) \\<sigma> \\<Longrightarrow> False", "from \\<open>x \\<in> vars_of_eq e\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> vars_of_eq e", "obtain t s where \"e = (Eq t s)\" and \"x \\<in> vars_of t \\<union> vars_of s\""], ["proof (prove)\nusing this:\n  x \\<in> vars_of_eq e\n\ngoal (1 subgoal):\n 1. (\\<And>t s.\n        \\<lbrakk>e = Eq t s; x \\<in> vars_of t \\<union> vars_of s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis vars_of_eq.elims)"], ["proof (state)\nthis:\n  e = Eq t s\n  x \\<in> vars_of t \\<union> vars_of s\n\ngoal (1 subgoal):\n 1. \\<not> ground_on (vars_of_cl C) \\<sigma> \\<Longrightarrow> False", "from this"], ["proof (chain)\npicking this:\n  e = Eq t s\n  x \\<in> vars_of t \\<union> vars_of s", "have \"x \\<in> vars_of t \\<or> x \\<in> vars_of s\""], ["proof (prove)\nusing this:\n  e = Eq t s\n  x \\<in> vars_of t \\<union> vars_of s\n\ngoal (1 subgoal):\n 1. x \\<in> vars_of t \\<or> x \\<in> vars_of s", "by auto"], ["proof (state)\nthis:\n  x \\<in> vars_of t \\<or> x \\<in> vars_of s\n\ngoal (1 subgoal):\n 1. \\<not> ground_on (vars_of_cl C) \\<sigma> \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  x \\<in> vars_of t \\<or> x \\<in> vars_of s", "have \"y \\<in> vars_of_eq (subst_equation e \\<sigma>)\""], ["proof (prove)\nusing this:\n  x \\<in> vars_of t \\<or> x \\<in> vars_of s\n\ngoal (1 subgoal):\n 1. y \\<in> vars_of_eq (subst_equation e \\<sigma>)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> vars_of t \\<Longrightarrow>\n    y \\<in> vars_of_eq (subst_equation e \\<sigma>)\n 2. x \\<in> vars_of s \\<Longrightarrow>\n    y \\<in> vars_of_eq (subst_equation e \\<sigma>)", "assume \"x \\<in> vars_of t\""], ["proof (state)\nthis:\n  x \\<in> vars_of t\n\ngoal (2 subgoals):\n 1. x \\<in> vars_of t \\<Longrightarrow>\n    y \\<in> vars_of_eq (subst_equation e \\<sigma>)\n 2. x \\<in> vars_of s \\<Longrightarrow>\n    y \\<in> vars_of_eq (subst_equation e \\<sigma>)", "have i: \"vars_of (subst t \\<sigma>) = \\<Union>{V. \\<exists>x. x \\<in> vars_of t \\<and> V = vars_of (subst (Var x) \\<sigma>) }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars_of (t \\<lhd> \\<sigma>) =\n    \\<Union>\n     {V. \\<exists>x.\n            x \\<in> vars_of t \\<and> V = vars_of (Var x \\<lhd> \\<sigma>)}", "using vars_of_instances [of t \\<sigma>]"], ["proof (prove)\nusing this:\n  vars_of (t \\<lhd> \\<sigma>) =\n  \\<Union>\n   {V. \\<exists>x.\n          x \\<in> vars_of t \\<and> V = vars_of (Var x \\<lhd> \\<sigma>)}\n\ngoal (1 subgoal):\n 1. vars_of (t \\<lhd> \\<sigma>) =\n    \\<Union>\n     {V. \\<exists>x.\n            x \\<in> vars_of t \\<and> V = vars_of (Var x \\<lhd> \\<sigma>)}", "by meson"], ["proof (state)\nthis:\n  vars_of (t \\<lhd> \\<sigma>) =\n  \\<Union>\n   {V. \\<exists>x.\n          x \\<in> vars_of t \\<and> V = vars_of (Var x \\<lhd> \\<sigma>)}\n\ngoal (2 subgoals):\n 1. x \\<in> vars_of t \\<Longrightarrow>\n    y \\<in> vars_of_eq (subst_equation e \\<sigma>)\n 2. x \\<in> vars_of s \\<Longrightarrow>\n    y \\<in> vars_of_eq (subst_equation e \\<sigma>)", "from \\<open>x \\<in> vars_of t\\<close>  i"], ["proof (chain)\npicking this:\n  x \\<in> vars_of t\n  vars_of (t \\<lhd> \\<sigma>) =\n  \\<Union>\n   {V. \\<exists>x.\n          x \\<in> vars_of t \\<and> V = vars_of (Var x \\<lhd> \\<sigma>)}", "have \"vars_of (subst (Var x) \\<sigma>) \\<subseteq> vars_of (subst t \\<sigma>)\""], ["proof (prove)\nusing this:\n  x \\<in> vars_of t\n  vars_of (t \\<lhd> \\<sigma>) =\n  \\<Union>\n   {V. \\<exists>x.\n          x \\<in> vars_of t \\<and> V = vars_of (Var x \\<lhd> \\<sigma>)}\n\ngoal (1 subgoal):\n 1. vars_of (Var x \\<lhd> \\<sigma>) \\<subseteq> vars_of (t \\<lhd> \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  vars_of (Var x \\<lhd> \\<sigma>) \\<subseteq> vars_of (t \\<lhd> \\<sigma>)\n\ngoal (2 subgoals):\n 1. x \\<in> vars_of t \\<Longrightarrow>\n    y \\<in> vars_of_eq (subst_equation e \\<sigma>)\n 2. x \\<in> vars_of s \\<Longrightarrow>\n    y \\<in> vars_of_eq (subst_equation e \\<sigma>)", "from this and \\<open>y \\<in> vars_of (subst (Var x) \\<sigma>)\\<close> \\<open>e = (Eq t s)\\<close>"], ["proof (chain)\npicking this:\n  vars_of (Var x \\<lhd> \\<sigma>) \\<subseteq> vars_of (t \\<lhd> \\<sigma>)\n  y \\<in> vars_of (Var x \\<lhd> \\<sigma>)\n  e = Eq t s", "show ?thesis"], ["proof (prove)\nusing this:\n  vars_of (Var x \\<lhd> \\<sigma>) \\<subseteq> vars_of (t \\<lhd> \\<sigma>)\n  y \\<in> vars_of (Var x \\<lhd> \\<sigma>)\n  e = Eq t s\n\ngoal (1 subgoal):\n 1. y \\<in> vars_of_eq (subst_equation e \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  y \\<in> vars_of_eq (subst_equation e \\<sigma>)\n\ngoal (1 subgoal):\n 1. x \\<in> vars_of s \\<Longrightarrow>\n    y \\<in> vars_of_eq (subst_equation e \\<sigma>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> vars_of s \\<Longrightarrow>\n    y \\<in> vars_of_eq (subst_equation e \\<sigma>)", "assume \"x \\<in> vars_of s\""], ["proof (state)\nthis:\n  x \\<in> vars_of s\n\ngoal (1 subgoal):\n 1. x \\<in> vars_of s \\<Longrightarrow>\n    y \\<in> vars_of_eq (subst_equation e \\<sigma>)", "have i: \"vars_of (subst s \\<sigma>) = \\<Union>{V. \\<exists>x. x \\<in> vars_of s \\<and> V = vars_of (subst (Var x) \\<sigma>) }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars_of (s \\<lhd> \\<sigma>) =\n    \\<Union>\n     {V. \\<exists>x.\n            x \\<in> vars_of s \\<and> V = vars_of (Var x \\<lhd> \\<sigma>)}", "using vars_of_instances [of s \\<sigma>]"], ["proof (prove)\nusing this:\n  vars_of (s \\<lhd> \\<sigma>) =\n  \\<Union>\n   {V. \\<exists>x.\n          x \\<in> vars_of s \\<and> V = vars_of (Var x \\<lhd> \\<sigma>)}\n\ngoal (1 subgoal):\n 1. vars_of (s \\<lhd> \\<sigma>) =\n    \\<Union>\n     {V. \\<exists>x.\n            x \\<in> vars_of s \\<and> V = vars_of (Var x \\<lhd> \\<sigma>)}", "by meson"], ["proof (state)\nthis:\n  vars_of (s \\<lhd> \\<sigma>) =\n  \\<Union>\n   {V. \\<exists>x.\n          x \\<in> vars_of s \\<and> V = vars_of (Var x \\<lhd> \\<sigma>)}\n\ngoal (1 subgoal):\n 1. x \\<in> vars_of s \\<Longrightarrow>\n    y \\<in> vars_of_eq (subst_equation e \\<sigma>)", "from \\<open>x \\<in> vars_of s\\<close> i"], ["proof (chain)\npicking this:\n  x \\<in> vars_of s\n  vars_of (s \\<lhd> \\<sigma>) =\n  \\<Union>\n   {V. \\<exists>x.\n          x \\<in> vars_of s \\<and> V = vars_of (Var x \\<lhd> \\<sigma>)}", "have \"vars_of (subst (Var x) \\<sigma>) \\<subseteq> vars_of (subst s \\<sigma>)\""], ["proof (prove)\nusing this:\n  x \\<in> vars_of s\n  vars_of (s \\<lhd> \\<sigma>) =\n  \\<Union>\n   {V. \\<exists>x.\n          x \\<in> vars_of s \\<and> V = vars_of (Var x \\<lhd> \\<sigma>)}\n\ngoal (1 subgoal):\n 1. vars_of (Var x \\<lhd> \\<sigma>) \\<subseteq> vars_of (s \\<lhd> \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  vars_of (Var x \\<lhd> \\<sigma>) \\<subseteq> vars_of (s \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. x \\<in> vars_of s \\<Longrightarrow>\n    y \\<in> vars_of_eq (subst_equation e \\<sigma>)", "from this and \\<open>y \\<in> vars_of (subst (Var x) \\<sigma>)\\<close> \\<open>e = (Eq t s)\\<close>"], ["proof (chain)\npicking this:\n  vars_of (Var x \\<lhd> \\<sigma>) \\<subseteq> vars_of (s \\<lhd> \\<sigma>)\n  y \\<in> vars_of (Var x \\<lhd> \\<sigma>)\n  e = Eq t s", "show ?thesis"], ["proof (prove)\nusing this:\n  vars_of (Var x \\<lhd> \\<sigma>) \\<subseteq> vars_of (s \\<lhd> \\<sigma>)\n  y \\<in> vars_of (Var x \\<lhd> \\<sigma>)\n  e = Eq t s\n\ngoal (1 subgoal):\n 1. y \\<in> vars_of_eq (subst_equation e \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  y \\<in> vars_of_eq (subst_equation e \\<sigma>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  y \\<in> vars_of_eq (subst_equation e \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<not> ground_on (vars_of_cl C) \\<sigma> \\<Longrightarrow> False", "from this and \\<open>L = Pos e \\<or> L = Neg e\\<close>"], ["proof (chain)\npicking this:\n  y \\<in> vars_of_eq (subst_equation e \\<sigma>)\n  L = Pos e \\<or> L = Neg e", "have \"y \\<in> vars_of_lit (subst_lit L \\<sigma>)\""], ["proof (prove)\nusing this:\n  y \\<in> vars_of_eq (subst_equation e \\<sigma>)\n  L = Pos e \\<or> L = Neg e\n\ngoal (1 subgoal):\n 1. y \\<in> vars_of_lit (subst_lit L \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  y \\<in> vars_of_lit (subst_lit L \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<not> ground_on (vars_of_cl C) \\<sigma> \\<Longrightarrow> False", "from this and \\<open>L \\<in> C\\<close>"], ["proof (chain)\npicking this:\n  y \\<in> vars_of_lit (subst_lit L \\<sigma>)\n  L \\<in> C", "have \"y \\<in> vars_of_cl (subst_cl C \\<sigma>)\""], ["proof (prove)\nusing this:\n  y \\<in> vars_of_lit (subst_lit L \\<sigma>)\n  L \\<in> C\n\ngoal (1 subgoal):\n 1. y \\<in> vars_of_cl (subst_cl C \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  y \\<in> vars_of_cl (subst_cl C \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<not> ground_on (vars_of_cl C) \\<sigma> \\<Longrightarrow> False", "from this and assms(1)"], ["proof (chain)\npicking this:\n  y \\<in> vars_of_cl (subst_cl C \\<sigma>)\n  ground_clause (subst_cl C \\<sigma>)", "show False"], ["proof (prove)\nusing this:\n  y \\<in> vars_of_cl (subst_cl C \\<sigma>)\n  ground_clause (subst_cl C \\<sigma>)\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ground_instance_exists:\n  assumes \"finite C\"\n  shows \"\\<exists>\\<sigma>. (ground_clause (subst_cl C \\<sigma>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>. ground_clause (subst_cl C \\<sigma>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>. ground_clause (subst_cl C \\<sigma>)", "let ?V = \"(vars_of_cl C)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>. ground_clause (subst_cl C \\<sigma>)", "from assms"], ["proof (chain)\npicking this:\n  finite C", "have \"finite ?V\""], ["proof (prove)\nusing this:\n  finite C\n\ngoal (1 subgoal):\n 1. finite (vars_of_cl C)", "using set_of_variables_is_finite_cl"], ["proof (prove)\nusing this:\n  finite C\n  finite ?C \\<Longrightarrow> finite (vars_of_cl ?C)\n\ngoal (1 subgoal):\n 1. finite (vars_of_cl C)", "by auto"], ["proof (state)\nthis:\n  finite (vars_of_cl C)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>. ground_clause (subst_cl C \\<sigma>)", "from this"], ["proof (chain)\npicking this:\n  finite (vars_of_cl C)", "obtain \\<sigma> where \"ground_on ?V \\<sigma>\""], ["proof (prove)\nusing this:\n  finite (vars_of_cl C)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>.\n        ground_on (vars_of_cl C) \\<sigma> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using ground_subst_exists"], ["proof (prove)\nusing this:\n  finite (vars_of_cl C)\n  finite ?V \\<Longrightarrow> \\<exists>\\<sigma>. ground_on ?V \\<sigma>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>.\n        ground_on (vars_of_cl C) \\<sigma> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  ground_on (vars_of_cl C) \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>. ground_clause (subst_cl C \\<sigma>)", "let ?D = \"(subst_cl C \\<sigma>)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>. ground_clause (subst_cl C \\<sigma>)", "from \\<open>ground_on ?V \\<sigma>\\<close>"], ["proof (chain)\npicking this:\n  ground_on (vars_of_cl C) \\<sigma>", "have \"(ground_clause ?D)\""], ["proof (prove)\nusing this:\n  ground_on (vars_of_cl C) \\<sigma>\n\ngoal (1 subgoal):\n 1. ground_clause (subst_cl C \\<sigma>)", "using ground_substs_yield_ground_clause [of C \\<sigma>]"], ["proof (prove)\nusing this:\n  ground_on (vars_of_cl C) \\<sigma>\n  ground_on (vars_of_cl C) \\<sigma> \\<Longrightarrow>\n  ground_clause (subst_cl C \\<sigma>)\n\ngoal (1 subgoal):\n 1. ground_clause (subst_cl C \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  ground_clause (subst_cl C \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>. ground_clause (subst_cl C \\<sigma>)", "then"], ["proof (chain)\npicking this:\n  ground_clause (subst_cl C \\<sigma>)", "show ?thesis"], ["proof (prove)\nusing this:\n  ground_clause (subst_cl C \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>. ground_clause (subst_cl C \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  \\<exists>\\<sigma>. ground_clause (subst_cl C \\<sigma>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma composition_of_substs :\n  shows \"(subst (subst t  \\<sigma>) \\<eta>) \n    = (subst t (comp \\<sigma> \\<eta>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<lhd> \\<sigma> \\<lhd> \\<eta> = t \\<lhd> \\<sigma> \\<lozenge> \\<eta>", "by simp"], ["", "lemma composition_of_substs_eq :\n  shows \"(subst_equation (subst_equation e \\<sigma>) \\<eta>) \n    = (subst_equation e (comp \\<sigma> \\<eta>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subst_equation (subst_equation e \\<sigma>) \\<eta> =\n    subst_equation e (\\<sigma> \\<lozenge> \\<eta>)", "by (metis subst_equation.simps composition_of_substs vars_of_eq.elims)"], ["", "lemma composition_of_substs_lit :\n  shows \"(subst_lit (subst_lit l \\<sigma>) \\<eta>) \n    = (subst_lit l (comp \\<sigma> \\<eta>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subst_lit (subst_lit l \\<sigma>) \\<eta> =\n    subst_lit l (\\<sigma> \\<lozenge> \\<eta>)", "by (metis subst_lit.simps(1) subst_lit.simps(2) \n    composition_of_substs_eq positive_literal.cases)"], ["", "lemma composition_of_substs_cl :\n  shows \"(subst_cl (subst_cl C \\<sigma>) \\<eta>) \n    = (subst_cl C (comp \\<sigma> \\<eta>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subst_cl (subst_cl C \\<sigma>) \\<eta> =\n    subst_cl C (\\<sigma> \\<lozenge> \\<eta>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. subst_cl (subst_cl C \\<sigma>) \\<eta> =\n    subst_cl C (\\<sigma> \\<lozenge> \\<eta>)", "let ?f = \"(\\<lambda>x. (subst_lit (subst_lit x  \\<sigma>) \\<eta>))\""], ["proof (state)\ngoal (1 subgoal):\n 1. subst_cl (subst_cl C \\<sigma>) \\<eta> =\n    subst_cl C (\\<sigma> \\<lozenge> \\<eta>)", "let ?f' = \"(\\<lambda>x. (subst_lit x (comp \\<sigma> \\<eta>)))\""], ["proof (state)\ngoal (1 subgoal):\n 1. subst_cl (subst_cl C \\<sigma>) \\<eta> =\n    subst_cl C (\\<sigma> \\<lozenge> \\<eta>)", "have \"\\<forall>l. (?f l) = (?f' l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l.\n       subst_lit (subst_lit l \\<sigma>) \\<eta> =\n       subst_lit l (\\<sigma> \\<lozenge> \\<eta>)", "using composition_of_substs_lit"], ["proof (prove)\nusing this:\n  subst_lit (subst_lit ?l ?\\<sigma>) ?\\<eta> =\n  subst_lit ?l (?\\<sigma> \\<lozenge> ?\\<eta>)\n\ngoal (1 subgoal):\n 1. \\<forall>l.\n       subst_lit (subst_lit l \\<sigma>) \\<eta> =\n       subst_lit l (\\<sigma> \\<lozenge> \\<eta>)", "by auto"], ["proof (state)\nthis:\n  \\<forall>l.\n     subst_lit (subst_lit l \\<sigma>) \\<eta> =\n     subst_lit l (\\<sigma> \\<lozenge> \\<eta>)\n\ngoal (1 subgoal):\n 1. subst_cl (subst_cl C \\<sigma>) \\<eta> =\n    subst_cl C (\\<sigma> \\<lozenge> \\<eta>)", "then"], ["proof (chain)\npicking this:\n  \\<forall>l.\n     subst_lit (subst_lit l \\<sigma>) \\<eta> =\n     subst_lit l (\\<sigma> \\<lozenge> \\<eta>)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>l.\n     subst_lit (subst_lit l \\<sigma>) \\<eta> =\n     subst_lit l (\\<sigma> \\<lozenge> \\<eta>)\n\ngoal (1 subgoal):\n 1. subst_cl (subst_cl C \\<sigma>) \\<eta> =\n    subst_cl C (\\<sigma> \\<lozenge> \\<eta>)", "by auto"], ["proof (state)\nthis:\n  subst_cl (subst_cl C \\<sigma>) \\<eta> =\n  subst_cl C (\\<sigma> \\<lozenge> \\<eta>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma substs_preserve_ground_lit :\n  assumes \"ground_clause C\"\n  assumes \"y \\<in> C\"\n  shows \"subst_lit y \\<sigma> = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subst_lit y \\<sigma> = y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. subst_lit y \\<sigma> = y", "obtain t and s where \"y = Pos (Eq t s) \\<or> y = Neg (Eq t s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t s.\n        y = Pos (Eq t s) \\<or> y = Neg (Eq t s) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis subst_equation.elims get_sign.elims)"], ["proof (state)\nthis:\n  y = Pos (Eq t s) \\<or> y = Neg (Eq t s)\n\ngoal (1 subgoal):\n 1. subst_lit y \\<sigma> = y", "from this"], ["proof (chain)\npicking this:\n  y = Pos (Eq t s) \\<or> y = Neg (Eq t s)", "have \"vars_of t \\<subseteq> vars_of_lit y\""], ["proof (prove)\nusing this:\n  y = Pos (Eq t s) \\<or> y = Neg (Eq t s)\n\ngoal (1 subgoal):\n 1. vars_of t \\<subseteq> vars_of_lit y", "by auto"], ["proof (state)\nthis:\n  vars_of t \\<subseteq> vars_of_lit y\n\ngoal (1 subgoal):\n 1. subst_lit y \\<sigma> = y", "from this and \\<open>y \\<in> C\\<close>"], ["proof (chain)\npicking this:\n  vars_of t \\<subseteq> vars_of_lit y\n  y \\<in> C", "have \"vars_of t \\<subseteq> vars_of_cl C\""], ["proof (prove)\nusing this:\n  vars_of t \\<subseteq> vars_of_lit y\n  y \\<in> C\n\ngoal (1 subgoal):\n 1. vars_of t \\<subseteq> vars_of_cl C", "by auto"], ["proof (state)\nthis:\n  vars_of t \\<subseteq> vars_of_cl C\n\ngoal (1 subgoal):\n 1. subst_lit y \\<sigma> = y", "from this and assms(1)"], ["proof (chain)\npicking this:\n  vars_of t \\<subseteq> vars_of_cl C\n  ground_clause C", "have \"ground_term t\""], ["proof (prove)\nusing this:\n  vars_of t \\<subseteq> vars_of_cl C\n  ground_clause C\n\ngoal (1 subgoal):\n 1. ground_term t", "unfolding ground_term_def"], ["proof (prove)\nusing this:\n  vars_of t \\<subseteq> vars_of_cl C\n  ground_clause C\n\ngoal (1 subgoal):\n 1. vars_of t = {}", "by auto"], ["proof (state)\nthis:\n  ground_term t\n\ngoal (1 subgoal):\n 1. subst_lit y \\<sigma> = y", "then"], ["proof (chain)\npicking this:\n  ground_term t", "have \"subst t \\<sigma> = t\""], ["proof (prove)\nusing this:\n  ground_term t\n\ngoal (1 subgoal):\n 1. t \\<lhd> \\<sigma> = t", "using substs_preserve_ground_terms"], ["proof (prove)\nusing this:\n  ground_term t\n  ground_term ?t \\<Longrightarrow> ?t \\<lhd> ?\\<sigma> = ?t\n\ngoal (1 subgoal):\n 1. t \\<lhd> \\<sigma> = t", "by auto"], ["proof (state)\nthis:\n  t \\<lhd> \\<sigma> = t\n\ngoal (1 subgoal):\n 1. subst_lit y \\<sigma> = y", "from \\<open>y = Pos (Eq t s) \\<or> y = Neg (Eq t s)\\<close>"], ["proof (chain)\npicking this:\n  y = Pos (Eq t s) \\<or> y = Neg (Eq t s)", "have \"vars_of s \\<subseteq> vars_of_lit y\""], ["proof (prove)\nusing this:\n  y = Pos (Eq t s) \\<or> y = Neg (Eq t s)\n\ngoal (1 subgoal):\n 1. vars_of s \\<subseteq> vars_of_lit y", "by auto"], ["proof (state)\nthis:\n  vars_of s \\<subseteq> vars_of_lit y\n\ngoal (1 subgoal):\n 1. subst_lit y \\<sigma> = y", "from this and \\<open>y \\<in> C\\<close>"], ["proof (chain)\npicking this:\n  vars_of s \\<subseteq> vars_of_lit y\n  y \\<in> C", "have \"vars_of s \\<subseteq> vars_of_cl C\""], ["proof (prove)\nusing this:\n  vars_of s \\<subseteq> vars_of_lit y\n  y \\<in> C\n\ngoal (1 subgoal):\n 1. vars_of s \\<subseteq> vars_of_cl C", "by auto"], ["proof (state)\nthis:\n  vars_of s \\<subseteq> vars_of_cl C\n\ngoal (1 subgoal):\n 1. subst_lit y \\<sigma> = y", "from this and assms(1)"], ["proof (chain)\npicking this:\n  vars_of s \\<subseteq> vars_of_cl C\n  ground_clause C", "have \"ground_term s\""], ["proof (prove)\nusing this:\n  vars_of s \\<subseteq> vars_of_cl C\n  ground_clause C\n\ngoal (1 subgoal):\n 1. ground_term s", "unfolding ground_term_def"], ["proof (prove)\nusing this:\n  vars_of s \\<subseteq> vars_of_cl C\n  ground_clause C\n\ngoal (1 subgoal):\n 1. vars_of s = {}", "by auto"], ["proof (state)\nthis:\n  ground_term s\n\ngoal (1 subgoal):\n 1. subst_lit y \\<sigma> = y", "then"], ["proof (chain)\npicking this:\n  ground_term s", "have \"subst s \\<sigma> = s\""], ["proof (prove)\nusing this:\n  ground_term s\n\ngoal (1 subgoal):\n 1. s \\<lhd> \\<sigma> = s", "using substs_preserve_ground_terms"], ["proof (prove)\nusing this:\n  ground_term s\n  ground_term ?t \\<Longrightarrow> ?t \\<lhd> ?\\<sigma> = ?t\n\ngoal (1 subgoal):\n 1. s \\<lhd> \\<sigma> = s", "by auto"], ["proof (state)\nthis:\n  s \\<lhd> \\<sigma> = s\n\ngoal (1 subgoal):\n 1. subst_lit y \\<sigma> = y", "from \\<open>subst s \\<sigma> = s\\<close> and \\<open>subst t \\<sigma> = t\\<close> and \\<open>y = Pos (Eq t s) \\<or> y = Neg (Eq t s)\\<close>"], ["proof (chain)\npicking this:\n  s \\<lhd> \\<sigma> = s\n  t \\<lhd> \\<sigma> = t\n  y = Pos (Eq t s) \\<or> y = Neg (Eq t s)", "show \"subst_lit y \\<sigma> = y\""], ["proof (prove)\nusing this:\n  s \\<lhd> \\<sigma> = s\n  t \\<lhd> \\<sigma> = t\n  y = Pos (Eq t s) \\<or> y = Neg (Eq t s)\n\ngoal (1 subgoal):\n 1. subst_lit y \\<sigma> = y", "by auto"], ["proof (state)\nthis:\n  subst_lit y \\<sigma> = y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma substs_preserve_ground_clause :\n  assumes \"ground_clause C\"\n  shows \"subst_cl C \\<sigma> = C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subst_cl C \\<sigma> = C", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. subst_cl C \\<sigma> \\<subseteq> C\n 2. C \\<subseteq> subst_cl C \\<sigma>", "show \"subst_cl C \\<sigma> \\<subseteq> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subst_cl C \\<sigma> \\<subseteq> C", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> subst_cl C \\<sigma> \\<Longrightarrow> x \\<in> C", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> subst_cl C \\<sigma> \\<Longrightarrow> x \\<in> C", "assume \"x \\<in> subst_cl C \\<sigma>\""], ["proof (state)\nthis:\n  x \\<in> subst_cl C \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> subst_cl C \\<sigma> \\<Longrightarrow> x \\<in> C", "then"], ["proof (chain)\npicking this:\n  x \\<in> subst_cl C \\<sigma>", "obtain y where \"y \\<in> C\" and \"x = subst_lit y \\<sigma>\""], ["proof (prove)\nusing this:\n  x \\<in> subst_cl C \\<sigma>\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> C; x = subst_lit y \\<sigma>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  y \\<in> C\n  x = subst_lit y \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> subst_cl C \\<sigma> \\<Longrightarrow> x \\<in> C", "from assms(1) and \\<open>y \\<in> C\\<close> and \\<open>x = subst_lit y \\<sigma>\\<close>"], ["proof (chain)\npicking this:\n  ground_clause C\n  y \\<in> C\n  x = subst_lit y \\<sigma>", "have \"x = y\""], ["proof (prove)\nusing this:\n  ground_clause C\n  y \\<in> C\n  x = subst_lit y \\<sigma>\n\ngoal (1 subgoal):\n 1. x = y", "using substs_preserve_ground_lit"], ["proof (prove)\nusing this:\n  ground_clause C\n  y \\<in> C\n  x = subst_lit y \\<sigma>\n  \\<lbrakk>ground_clause ?C; ?y \\<in> ?C\\<rbrakk>\n  \\<Longrightarrow> subst_lit ?y ?\\<sigma> = ?y\n\ngoal (1 subgoal):\n 1. x = y", "by auto"], ["proof (state)\nthis:\n  x = y\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> subst_cl C \\<sigma> \\<Longrightarrow> x \\<in> C", "from this and \\<open>y \\<in> C\\<close>"], ["proof (chain)\npicking this:\n  x = y\n  y \\<in> C", "show \"x \\<in> C\""], ["proof (prove)\nusing this:\n  x = y\n  y \\<in> C\n\ngoal (1 subgoal):\n 1. x \\<in> C", "by auto"], ["proof (state)\nthis:\n  x \\<in> C\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  subst_cl C \\<sigma> \\<subseteq> C\n\ngoal (1 subgoal):\n 1. C \\<subseteq> subst_cl C \\<sigma>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. C \\<subseteq> subst_cl C \\<sigma>", "show \"C \\<subseteq> subst_cl C \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<subseteq> subst_cl C \\<sigma>", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> C \\<Longrightarrow> x \\<in> subst_cl C \\<sigma>", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> C \\<Longrightarrow> x \\<in> subst_cl C \\<sigma>", "assume \"x \\<in> C\""], ["proof (state)\nthis:\n  x \\<in> C\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> C \\<Longrightarrow> x \\<in> subst_cl C \\<sigma>", "then"], ["proof (chain)\npicking this:\n  x \\<in> C", "have \"subst_lit x \\<sigma> \\<in> subst_cl C \\<sigma>\""], ["proof (prove)\nusing this:\n  x \\<in> C\n\ngoal (1 subgoal):\n 1. subst_lit x \\<sigma> \\<in> subst_cl C \\<sigma>", "by auto"], ["proof (state)\nthis:\n  subst_lit x \\<sigma> \\<in> subst_cl C \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> C \\<Longrightarrow> x \\<in> subst_cl C \\<sigma>", "from assms(1) and \\<open>x \\<in> C\\<close>"], ["proof (chain)\npicking this:\n  ground_clause C\n  x \\<in> C", "have \"x = subst_lit x \\<sigma>\""], ["proof (prove)\nusing this:\n  ground_clause C\n  x \\<in> C\n\ngoal (1 subgoal):\n 1. x = subst_lit x \\<sigma>", "using substs_preserve_ground_lit [of C x]"], ["proof (prove)\nusing this:\n  ground_clause C\n  x \\<in> C\n  \\<lbrakk>ground_clause C; x \\<in> C\\<rbrakk>\n  \\<Longrightarrow> subst_lit x ?\\<sigma> = x\n\ngoal (1 subgoal):\n 1. x = subst_lit x \\<sigma>", "by auto"], ["proof (state)\nthis:\n  x = subst_lit x \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> C \\<Longrightarrow> x \\<in> subst_cl C \\<sigma>", "from this and \\<open>x \\<in> C\\<close>"], ["proof (chain)\npicking this:\n  x = subst_lit x \\<sigma>\n  x \\<in> C", "show \"x \\<in> subst_cl C \\<sigma>\""], ["proof (prove)\nusing this:\n  x = subst_lit x \\<sigma>\n  x \\<in> C\n\ngoal (1 subgoal):\n 1. x \\<in> subst_cl C \\<sigma>", "by auto"], ["proof (state)\nthis:\n  x \\<in> subst_cl C \\<sigma>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  C \\<subseteq> subst_cl C \\<sigma>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma substs_preserve_finiteness :\n  assumes \"finite C\"\n  shows \"finite (subst_cl C \\<sigma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (subst_cl C \\<sigma>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (subst_cl C \\<sigma>)", "from assms(1)"], ["proof (chain)\npicking this:\n  finite C", "show ?thesis"], ["proof (prove)\nusing this:\n  finite C\n\ngoal (1 subgoal):\n 1. finite (subst_cl C \\<sigma>)", "using Finite_Set.finite_imageI"], ["proof (prove)\nusing this:\n  finite C\n  finite ?F \\<Longrightarrow> finite (?h ` ?F)\n\ngoal (1 subgoal):\n 1. finite (subst_cl C \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  finite (subst_cl C \\<sigma>)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>We prove that two equal substitutions yield the same objects.\\<close>"], ["", "lemma subst_eq_eq :\n  assumes \"subst_eq \\<sigma> \\<eta>\"\n  shows \"subst_equation e \\<sigma> = subst_equation e \\<eta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subst_equation e \\<sigma> = subst_equation e \\<eta>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. subst_equation e \\<sigma> = subst_equation e \\<eta>", "obtain t and s where \"e = Eq t s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t s. e = Eq t s \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using equation.exhaust"], ["proof (prove)\nusing this:\n  (\\<And>x1 x2. ?y = Eq x1 x2 \\<Longrightarrow> ?P) \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>t s. e = Eq t s \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  e = Eq t s\n\ngoal (1 subgoal):\n 1. subst_equation e \\<sigma> = subst_equation e \\<eta>", "from assms(1)"], ["proof (chain)\npicking this:\n  \\<sigma> \\<doteq> \\<eta>", "have \"subst s \\<sigma> = subst s \\<eta>\""], ["proof (prove)\nusing this:\n  \\<sigma> \\<doteq> \\<eta>\n\ngoal (1 subgoal):\n 1. s \\<lhd> \\<sigma> = s \\<lhd> \\<eta>", "by auto"], ["proof (state)\nthis:\n  s \\<lhd> \\<sigma> = s \\<lhd> \\<eta>\n\ngoal (1 subgoal):\n 1. subst_equation e \\<sigma> = subst_equation e \\<eta>", "from assms(1)"], ["proof (chain)\npicking this:\n  \\<sigma> \\<doteq> \\<eta>", "have \"subst t \\<sigma> = subst t \\<eta>\""], ["proof (prove)\nusing this:\n  \\<sigma> \\<doteq> \\<eta>\n\ngoal (1 subgoal):\n 1. t \\<lhd> \\<sigma> = t \\<lhd> \\<eta>", "by auto"], ["proof (state)\nthis:\n  t \\<lhd> \\<sigma> = t \\<lhd> \\<eta>\n\ngoal (1 subgoal):\n 1. subst_equation e \\<sigma> = subst_equation e \\<eta>", "from \\<open>subst s \\<sigma> = subst s \\<eta>\\<close> \\<open>subst t \\<sigma> = subst t \\<eta>\\<close>\n    and \\<open>e = Eq t s\\<close>"], ["proof (chain)\npicking this:\n  s \\<lhd> \\<sigma> = s \\<lhd> \\<eta>\n  t \\<lhd> \\<sigma> = t \\<lhd> \\<eta>\n  e = Eq t s", "show ?thesis"], ["proof (prove)\nusing this:\n  s \\<lhd> \\<sigma> = s \\<lhd> \\<eta>\n  t \\<lhd> \\<sigma> = t \\<lhd> \\<eta>\n  e = Eq t s\n\ngoal (1 subgoal):\n 1. subst_equation e \\<sigma> = subst_equation e \\<eta>", "by auto"], ["proof (state)\nthis:\n  subst_equation e \\<sigma> = subst_equation e \\<eta>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subst_eq_lit :\n  assumes \"subst_eq \\<sigma> \\<eta>\"\n  shows \"subst_lit l \\<sigma> = subst_lit l \\<eta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subst_lit l \\<sigma> = subst_lit l \\<eta>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. subst_lit l \\<sigma> = subst_lit l \\<eta>", "obtain e where \"l = Pos e \\<or> l = Neg e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>e.\n        l = Pos e \\<or> l = Neg e \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using literal.exhaust"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x1. ?y = Pos x1 \\<Longrightarrow> ?P;\n   \\<And>x2. ?y = Neg x2 \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        l = Pos e \\<or> l = Neg e \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  l = Pos e \\<or> l = Neg e\n\ngoal (1 subgoal):\n 1. subst_lit l \\<sigma> = subst_lit l \\<eta>", "from assms(1)"], ["proof (chain)\npicking this:\n  \\<sigma> \\<doteq> \\<eta>", "have \"subst_equation e \\<sigma> = subst_equation e \\<eta>\""], ["proof (prove)\nusing this:\n  \\<sigma> \\<doteq> \\<eta>\n\ngoal (1 subgoal):\n 1. subst_equation e \\<sigma> = subst_equation e \\<eta>", "using subst_eq_eq"], ["proof (prove)\nusing this:\n  \\<sigma> \\<doteq> \\<eta>\n  ?\\<sigma> \\<doteq> ?\\<eta> \\<Longrightarrow>\n  subst_equation ?e ?\\<sigma> = subst_equation ?e ?\\<eta>\n\ngoal (1 subgoal):\n 1. subst_equation e \\<sigma> = subst_equation e \\<eta>", "by auto"], ["proof (state)\nthis:\n  subst_equation e \\<sigma> = subst_equation e \\<eta>\n\ngoal (1 subgoal):\n 1. subst_lit l \\<sigma> = subst_lit l \\<eta>", "from this and \\<open>l = Pos e \\<or> l = Neg e\\<close>"], ["proof (chain)\npicking this:\n  subst_equation e \\<sigma> = subst_equation e \\<eta>\n  l = Pos e \\<or> l = Neg e", "show ?thesis"], ["proof (prove)\nusing this:\n  subst_equation e \\<sigma> = subst_equation e \\<eta>\n  l = Pos e \\<or> l = Neg e\n\ngoal (1 subgoal):\n 1. subst_lit l \\<sigma> = subst_lit l \\<eta>", "by auto"], ["proof (state)\nthis:\n  subst_lit l \\<sigma> = subst_lit l \\<eta>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subst_eq_cl:\n  assumes \"subst_eq \\<sigma> \\<eta>\"\n  shows \"subst_cl C \\<sigma> = subst_cl C \\<eta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subst_cl C \\<sigma> = subst_cl C \\<eta>", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. subst_cl C \\<sigma> \\<noteq> subst_cl C \\<eta> \\<Longrightarrow> False", "assume \"subst_cl C \\<sigma> \\<noteq> subst_cl C \\<eta>\""], ["proof (state)\nthis:\n  subst_cl C \\<sigma> \\<noteq> subst_cl C \\<eta>\n\ngoal (1 subgoal):\n 1. subst_cl C \\<sigma> \\<noteq> subst_cl C \\<eta> \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  subst_cl C \\<sigma> \\<noteq> subst_cl C \\<eta>", "obtain L where \"L \\<in> C\" and \"subst_lit L \\<sigma> \\<noteq> subst_lit L \\<eta>\""], ["proof (prove)\nusing this:\n  subst_cl C \\<sigma> \\<noteq> subst_cl C \\<eta>\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        \\<lbrakk>L \\<in> C;\n         subst_lit L \\<sigma> \\<noteq> subst_lit L \\<eta>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  L \\<in> C\n  subst_lit L \\<sigma> \\<noteq> subst_lit L \\<eta>\n\ngoal (1 subgoal):\n 1. subst_cl C \\<sigma> \\<noteq> subst_cl C \\<eta> \\<Longrightarrow> False", "from assms(1) and \\<open>subst_lit L \\<sigma> \\<noteq> subst_lit L \\<eta>\\<close>"], ["proof (chain)\npicking this:\n  \\<sigma> \\<doteq> \\<eta>\n  subst_lit L \\<sigma> \\<noteq> subst_lit L \\<eta>", "show False"], ["proof (prove)\nusing this:\n  \\<sigma> \\<doteq> \\<eta>\n  subst_lit L \\<sigma> \\<noteq> subst_lit L \\<eta>\n\ngoal (1 subgoal):\n 1. False", "using subst_eq_lit"], ["proof (prove)\nusing this:\n  \\<sigma> \\<doteq> \\<eta>\n  subst_lit L \\<sigma> \\<noteq> subst_lit L \\<eta>\n  ?\\<sigma> \\<doteq> ?\\<eta> \\<Longrightarrow>\n  subst_lit ?l ?\\<sigma> = subst_lit ?l ?\\<eta>\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma coincide_on_eq :\n  assumes \"coincide_on \\<sigma> \\<eta> (vars_of_eq e)\"\n  shows \"subst_equation e \\<sigma> = subst_equation e \\<eta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subst_equation e \\<sigma> = subst_equation e \\<eta>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. subst_equation e \\<sigma> = subst_equation e \\<eta>", "obtain t and s where \"e = Eq t s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t s. e = Eq t s \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using equation.exhaust"], ["proof (prove)\nusing this:\n  (\\<And>x1 x2. ?y = Eq x1 x2 \\<Longrightarrow> ?P) \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>t s. e = Eq t s \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  e = Eq t s\n\ngoal (1 subgoal):\n 1. subst_equation e \\<sigma> = subst_equation e \\<eta>", "then"], ["proof (chain)\npicking this:\n  e = Eq t s", "have \"vars_of t \\<subseteq> vars_of_eq e\""], ["proof (prove)\nusing this:\n  e = Eq t s\n\ngoal (1 subgoal):\n 1. vars_of t \\<subseteq> vars_of_eq e", "by simp"], ["proof (state)\nthis:\n  vars_of t \\<subseteq> vars_of_eq e\n\ngoal (1 subgoal):\n 1. subst_equation e \\<sigma> = subst_equation e \\<eta>", "from this and \\<open>coincide_on \\<sigma> \\<eta> (vars_of_eq e)\\<close>"], ["proof (chain)\npicking this:\n  vars_of t \\<subseteq> vars_of_eq e\n  coincide_on \\<sigma> \\<eta> (vars_of_eq e)", "have \"coincide_on \\<sigma> \\<eta> (vars_of t)\""], ["proof (prove)\nusing this:\n  vars_of t \\<subseteq> vars_of_eq e\n  coincide_on \\<sigma> \\<eta> (vars_of_eq e)\n\ngoal (1 subgoal):\n 1. coincide_on \\<sigma> \\<eta> (vars_of t)", "unfolding coincide_on_def"], ["proof (prove)\nusing this:\n  vars_of t \\<subseteq> vars_of_eq e\n  \\<forall>x\\<in>vars_of_eq e. Var x \\<lhd> \\<sigma> = Var x \\<lhd> \\<eta>\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>vars_of t. Var x \\<lhd> \\<sigma> = Var x \\<lhd> \\<eta>", "by auto"], ["proof (state)\nthis:\n  coincide_on \\<sigma> \\<eta> (vars_of t)\n\ngoal (1 subgoal):\n 1. subst_equation e \\<sigma> = subst_equation e \\<eta>", "from this"], ["proof (chain)\npicking this:\n  coincide_on \\<sigma> \\<eta> (vars_of t)", "have \"subst t \\<sigma> = subst t \\<eta>\""], ["proof (prove)\nusing this:\n  coincide_on \\<sigma> \\<eta> (vars_of t)\n\ngoal (1 subgoal):\n 1. t \\<lhd> \\<sigma> = t \\<lhd> \\<eta>", "using coincide_on_term"], ["proof (prove)\nusing this:\n  coincide_on \\<sigma> \\<eta> (vars_of t)\n  coincide_on ?\\<sigma> ?\\<eta> (vars_of ?t) \\<Longrightarrow>\n  ?t \\<lhd> ?\\<sigma> = ?t \\<lhd> ?\\<eta>\n\ngoal (1 subgoal):\n 1. t \\<lhd> \\<sigma> = t \\<lhd> \\<eta>", "by auto"], ["proof (state)\nthis:\n  t \\<lhd> \\<sigma> = t \\<lhd> \\<eta>\n\ngoal (1 subgoal):\n 1. subst_equation e \\<sigma> = subst_equation e \\<eta>", "from \\<open>e = Eq t s\\<close>"], ["proof (chain)\npicking this:\n  e = Eq t s", "have \"vars_of s \\<subseteq> vars_of_eq e\""], ["proof (prove)\nusing this:\n  e = Eq t s\n\ngoal (1 subgoal):\n 1. vars_of s \\<subseteq> vars_of_eq e", "by simp"], ["proof (state)\nthis:\n  vars_of s \\<subseteq> vars_of_eq e\n\ngoal (1 subgoal):\n 1. subst_equation e \\<sigma> = subst_equation e \\<eta>", "from this and \\<open>coincide_on \\<sigma> \\<eta> (vars_of_eq e)\\<close>"], ["proof (chain)\npicking this:\n  vars_of s \\<subseteq> vars_of_eq e\n  coincide_on \\<sigma> \\<eta> (vars_of_eq e)", "have \"coincide_on \\<sigma> \\<eta> (vars_of s)\""], ["proof (prove)\nusing this:\n  vars_of s \\<subseteq> vars_of_eq e\n  coincide_on \\<sigma> \\<eta> (vars_of_eq e)\n\ngoal (1 subgoal):\n 1. coincide_on \\<sigma> \\<eta> (vars_of s)", "unfolding coincide_on_def"], ["proof (prove)\nusing this:\n  vars_of s \\<subseteq> vars_of_eq e\n  \\<forall>x\\<in>vars_of_eq e. Var x \\<lhd> \\<sigma> = Var x \\<lhd> \\<eta>\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>vars_of s. Var x \\<lhd> \\<sigma> = Var x \\<lhd> \\<eta>", "by auto"], ["proof (state)\nthis:\n  coincide_on \\<sigma> \\<eta> (vars_of s)\n\ngoal (1 subgoal):\n 1. subst_equation e \\<sigma> = subst_equation e \\<eta>", "from this"], ["proof (chain)\npicking this:\n  coincide_on \\<sigma> \\<eta> (vars_of s)", "have \"subst s \\<sigma> = subst s \\<eta>\""], ["proof (prove)\nusing this:\n  coincide_on \\<sigma> \\<eta> (vars_of s)\n\ngoal (1 subgoal):\n 1. s \\<lhd> \\<sigma> = s \\<lhd> \\<eta>", "using coincide_on_term"], ["proof (prove)\nusing this:\n  coincide_on \\<sigma> \\<eta> (vars_of s)\n  coincide_on ?\\<sigma> ?\\<eta> (vars_of ?t) \\<Longrightarrow>\n  ?t \\<lhd> ?\\<sigma> = ?t \\<lhd> ?\\<eta>\n\ngoal (1 subgoal):\n 1. s \\<lhd> \\<sigma> = s \\<lhd> \\<eta>", "by auto"], ["proof (state)\nthis:\n  s \\<lhd> \\<sigma> = s \\<lhd> \\<eta>\n\ngoal (1 subgoal):\n 1. subst_equation e \\<sigma> = subst_equation e \\<eta>", "from \\<open>subst t \\<sigma> = subst t \\<eta>\\<close> \n    and \\<open>subst s \\<sigma> = subst s \\<eta>\\<close> \n    and \\<open>e = Eq t s\\<close>"], ["proof (chain)\npicking this:\n  t \\<lhd> \\<sigma> = t \\<lhd> \\<eta>\n  s \\<lhd> \\<sigma> = s \\<lhd> \\<eta>\n  e = Eq t s", "show ?thesis"], ["proof (prove)\nusing this:\n  t \\<lhd> \\<sigma> = t \\<lhd> \\<eta>\n  s \\<lhd> \\<sigma> = s \\<lhd> \\<eta>\n  e = Eq t s\n\ngoal (1 subgoal):\n 1. subst_equation e \\<sigma> = subst_equation e \\<eta>", "by auto"], ["proof (state)\nthis:\n  subst_equation e \\<sigma> = subst_equation e \\<eta>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma coincide_on_lit :\n  assumes \"coincide_on \\<sigma> \\<eta> (vars_of_lit l)\"\n  shows \"subst_lit l \\<sigma> = subst_lit l \\<eta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subst_lit l \\<sigma> = subst_lit l \\<eta>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. subst_lit l \\<sigma> = subst_lit l \\<eta>", "obtain e where \"l = Pos e \\<or> l = Neg e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>e.\n        l = Pos e \\<or> l = Neg e \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using literal.exhaust"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x1. ?y = Pos x1 \\<Longrightarrow> ?P;\n   \\<And>x2. ?y = Neg x2 \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        l = Pos e \\<or> l = Neg e \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  l = Pos e \\<or> l = Neg e\n\ngoal (1 subgoal):\n 1. subst_lit l \\<sigma> = subst_lit l \\<eta>", "then"], ["proof (chain)\npicking this:\n  l = Pos e \\<or> l = Neg e", "have \"vars_of_eq e \\<subseteq> vars_of_lit l\""], ["proof (prove)\nusing this:\n  l = Pos e \\<or> l = Neg e\n\ngoal (1 subgoal):\n 1. vars_of_eq e \\<subseteq> vars_of_lit l", "by auto"], ["proof (state)\nthis:\n  vars_of_eq e \\<subseteq> vars_of_lit l\n\ngoal (1 subgoal):\n 1. subst_lit l \\<sigma> = subst_lit l \\<eta>", "from this and \\<open>coincide_on \\<sigma> \\<eta> (vars_of_lit l)\\<close>"], ["proof (chain)\npicking this:\n  vars_of_eq e \\<subseteq> vars_of_lit l\n  coincide_on \\<sigma> \\<eta> (vars_of_lit l)", "have \"coincide_on \\<sigma> \\<eta> (vars_of_eq e)\""], ["proof (prove)\nusing this:\n  vars_of_eq e \\<subseteq> vars_of_lit l\n  coincide_on \\<sigma> \\<eta> (vars_of_lit l)\n\ngoal (1 subgoal):\n 1. coincide_on \\<sigma> \\<eta> (vars_of_eq e)", "unfolding coincide_on_def"], ["proof (prove)\nusing this:\n  vars_of_eq e \\<subseteq> vars_of_lit l\n  \\<forall>x\\<in>vars_of_lit l. Var x \\<lhd> \\<sigma> = Var x \\<lhd> \\<eta>\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>vars_of_eq e. Var x \\<lhd> \\<sigma> = Var x \\<lhd> \\<eta>", "by auto"], ["proof (state)\nthis:\n  coincide_on \\<sigma> \\<eta> (vars_of_eq e)\n\ngoal (1 subgoal):\n 1. subst_lit l \\<sigma> = subst_lit l \\<eta>", "from this"], ["proof (chain)\npicking this:\n  coincide_on \\<sigma> \\<eta> (vars_of_eq e)", "have \"subst_equation e \\<sigma> = subst_equation e \\<eta>\""], ["proof (prove)\nusing this:\n  coincide_on \\<sigma> \\<eta> (vars_of_eq e)\n\ngoal (1 subgoal):\n 1. subst_equation e \\<sigma> = subst_equation e \\<eta>", "using coincide_on_eq"], ["proof (prove)\nusing this:\n  coincide_on \\<sigma> \\<eta> (vars_of_eq e)\n  coincide_on ?\\<sigma> ?\\<eta> (vars_of_eq ?e) \\<Longrightarrow>\n  subst_equation ?e ?\\<sigma> = subst_equation ?e ?\\<eta>\n\ngoal (1 subgoal):\n 1. subst_equation e \\<sigma> = subst_equation e \\<eta>", "by auto"], ["proof (state)\nthis:\n  subst_equation e \\<sigma> = subst_equation e \\<eta>\n\ngoal (1 subgoal):\n 1. subst_lit l \\<sigma> = subst_lit l \\<eta>", "from this and \\<open>l = Pos e \\<or> l = Neg e\\<close>"], ["proof (chain)\npicking this:\n  subst_equation e \\<sigma> = subst_equation e \\<eta>\n  l = Pos e \\<or> l = Neg e", "show ?thesis"], ["proof (prove)\nusing this:\n  subst_equation e \\<sigma> = subst_equation e \\<eta>\n  l = Pos e \\<or> l = Neg e\n\ngoal (1 subgoal):\n 1. subst_lit l \\<sigma> = subst_lit l \\<eta>", "by auto"], ["proof (state)\nthis:\n  subst_lit l \\<sigma> = subst_lit l \\<eta>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma coincide_on_cl :\n  assumes \"coincide_on \\<sigma> \\<eta> (vars_of_cl C)\"\n  shows \"subst_cl C \\<sigma> = subst_cl C \\<eta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subst_cl C \\<sigma> = subst_cl C \\<eta>", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. subst_cl C \\<sigma> \\<noteq> subst_cl C \\<eta> \\<Longrightarrow> False", "assume \"subst_cl C \\<sigma> \\<noteq> subst_cl C \\<eta>\""], ["proof (state)\nthis:\n  subst_cl C \\<sigma> \\<noteq> subst_cl C \\<eta>\n\ngoal (1 subgoal):\n 1. subst_cl C \\<sigma> \\<noteq> subst_cl C \\<eta> \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  subst_cl C \\<sigma> \\<noteq> subst_cl C \\<eta>", "obtain L where \"L \\<in> C\" and \"subst_lit L \\<sigma> \\<noteq> subst_lit L \\<eta>\""], ["proof (prove)\nusing this:\n  subst_cl C \\<sigma> \\<noteq> subst_cl C \\<eta>\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        \\<lbrakk>L \\<in> C;\n         subst_lit L \\<sigma> \\<noteq> subst_lit L \\<eta>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  L \\<in> C\n  subst_lit L \\<sigma> \\<noteq> subst_lit L \\<eta>\n\ngoal (1 subgoal):\n 1. subst_cl C \\<sigma> \\<noteq> subst_cl C \\<eta> \\<Longrightarrow> False", "from \\<open>L \\<in> C\\<close>"], ["proof (chain)\npicking this:\n  L \\<in> C", "have \"vars_of_lit L \\<subseteq> vars_of_cl C\""], ["proof (prove)\nusing this:\n  L \\<in> C\n\ngoal (1 subgoal):\n 1. vars_of_lit L \\<subseteq> vars_of_cl C", "by auto"], ["proof (state)\nthis:\n  vars_of_lit L \\<subseteq> vars_of_cl C\n\ngoal (1 subgoal):\n 1. subst_cl C \\<sigma> \\<noteq> subst_cl C \\<eta> \\<Longrightarrow> False", "from this and assms"], ["proof (chain)\npicking this:\n  vars_of_lit L \\<subseteq> vars_of_cl C\n  coincide_on \\<sigma> \\<eta> (vars_of_cl C)", "have \"coincide_on \\<sigma> \\<eta> (vars_of_lit L)\""], ["proof (prove)\nusing this:\n  vars_of_lit L \\<subseteq> vars_of_cl C\n  coincide_on \\<sigma> \\<eta> (vars_of_cl C)\n\ngoal (1 subgoal):\n 1. coincide_on \\<sigma> \\<eta> (vars_of_lit L)", "unfolding coincide_on_def"], ["proof (prove)\nusing this:\n  vars_of_lit L \\<subseteq> vars_of_cl C\n  \\<forall>x\\<in>vars_of_cl C. Var x \\<lhd> \\<sigma> = Var x \\<lhd> \\<eta>\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>vars_of_lit L.\n       Var x \\<lhd> \\<sigma> = Var x \\<lhd> \\<eta>", "by auto"], ["proof (state)\nthis:\n  coincide_on \\<sigma> \\<eta> (vars_of_lit L)\n\ngoal (1 subgoal):\n 1. subst_cl C \\<sigma> \\<noteq> subst_cl C \\<eta> \\<Longrightarrow> False", "from this and \\<open>subst_lit L \\<sigma> \\<noteq> subst_lit L \\<eta>\\<close>"], ["proof (chain)\npicking this:\n  coincide_on \\<sigma> \\<eta> (vars_of_lit L)\n  subst_lit L \\<sigma> \\<noteq> subst_lit L \\<eta>", "show False"], ["proof (prove)\nusing this:\n  coincide_on \\<sigma> \\<eta> (vars_of_lit L)\n  subst_lit L \\<sigma> \\<noteq> subst_lit L \\<eta>\n\ngoal (1 subgoal):\n 1. False", "using coincide_on_lit"], ["proof (prove)\nusing this:\n  coincide_on \\<sigma> \\<eta> (vars_of_lit L)\n  subst_lit L \\<sigma> \\<noteq> subst_lit L \\<eta>\n  coincide_on ?\\<sigma> ?\\<eta> (vars_of_lit ?l) \\<Longrightarrow>\n  subst_lit ?l ?\\<sigma> = subst_lit ?l ?\\<eta>\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Semantics\\<close>"], ["", "text \\<open>Interpretations are congruences on the set of terms.\\<close>"], ["", "definition fo_interpretation :: \"'a binary_relation_on_trms \\<Rightarrow> bool\"\nwhere \n  \"(fo_interpretation x) = (congruence x)\""], ["", "fun validate_ground_eq :: \"'a binary_relation_on_trms \\<Rightarrow> 'a equation  \\<Rightarrow> bool\"\nwhere\n\"(validate_ground_eq I (Eq t s) = (I t s))\""], ["", "fun validate_ground_lit :: \"'a binary_relation_on_trms \\<Rightarrow> 'a literal  \\<Rightarrow> bool\"\nwhere\n\"validate_ground_lit I (Pos E) = (validate_ground_eq I E)\" |\n\"validate_ground_lit I (Neg E) = (\\<not>(validate_ground_eq I E))\""], ["", "fun validate_ground_clause :: \"'a binary_relation_on_trms \\<Rightarrow> 'a clause \\<Rightarrow> bool\"\nwhere\n\"validate_ground_clause I C = (\\<exists>L.(L \\<in> C) \\<and> (validate_ground_lit I L))\""], ["", "fun validate_clause :: \"'a binary_relation_on_trms \\<Rightarrow> 'a clause \\<Rightarrow> bool\"\nwhere\n\"validate_clause I C = (\\<forall>s. (ground_clause (subst_cl C s)) \n  \\<longrightarrow> (validate_ground_clause I (subst_cl C s)))\""], ["", "fun validate_clause_set :: \"'a binary_relation_on_trms \\<Rightarrow> 'a clause set \\<Rightarrow> bool\"\nwhere\n\"validate_clause_set I S = (\\<forall>C. (C \\<in> S  \\<longrightarrow> (validate_clause I C)))\""], ["", "definition clause_entails_clause :: \"'a clause \\<Rightarrow> 'a clause \\<Rightarrow> bool\"\nwhere\n  \"clause_entails_clause C D = (\\<forall>I. (fo_interpretation I \\<longrightarrow> validate_clause I C \\<longrightarrow> validate_clause I D))\""], ["", "definition set_entails_clause :: \"'a clause set \\<Rightarrow> 'a clause \\<Rightarrow> bool\"\nwhere\n  \"set_entails_clause S C = (\\<forall>I. (fo_interpretation I \\<longrightarrow> validate_clause_set I S \\<longrightarrow> validate_clause I C))\""], ["", "definition satisfiable_clause_set :: \"'a clause set \\<Rightarrow> bool\"\n where  \n \"(satisfiable_clause_set S) = (\\<exists>I. (fo_interpretation I) \\<and> (validate_clause_set I S))\""], ["", "text \\<open>We state basic properties of the entailment relation.\\<close>"], ["", "lemma set_entails_clause_member:\n  assumes \"C \\<in> S\"\n  shows \"set_entails_clause S C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_entails_clause S C", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> set_entails_clause S C \\<Longrightarrow> False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<not> set_entails_clause S C\n\ngoal (1 subgoal):\n 1. \\<not> set_entails_clause S C \\<Longrightarrow> False", "from this"], ["proof (chain)\npicking this:\n  \\<not> set_entails_clause S C", "obtain I where \"fo_interpretation I\" \"validate_clause_set I S\" \"\\<not> validate_clause I C\""], ["proof (prove)\nusing this:\n  \\<not> set_entails_clause S C\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>fo_interpretation I; validate_clause_set I S;\n         \\<not> validate_clause I C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding set_entails_clause_def"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>I.\n             fo_interpretation I \\<longrightarrow>\n             validate_clause_set I S \\<longrightarrow> validate_clause I C)\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>fo_interpretation I; validate_clause_set I S;\n         \\<not> validate_clause I C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  fo_interpretation I\n  validate_clause_set I S\n  \\<not> validate_clause I C\n\ngoal (1 subgoal):\n 1. \\<not> set_entails_clause S C \\<Longrightarrow> False", "from \\<open>validate_clause_set I S\\<close> and assms(1) \\<open>\\<not> validate_clause I C\\<close>"], ["proof (chain)\npicking this:\n  validate_clause_set I S\n  C \\<in> S\n  \\<not> validate_clause I C", "show False"], ["proof (prove)\nusing this:\n  validate_clause_set I S\n  C \\<in> S\n  \\<not> validate_clause I C\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma instances_are_entailed :\n  assumes \"validate_clause I C\"\n  shows \"validate_clause I (subst_cl C \\<sigma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. validate_clause I (subst_cl C \\<sigma>)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> validate_clause I (subst_cl C \\<sigma>) \\<Longrightarrow> False", "assume \"\\<not>validate_clause I (subst_cl C \\<sigma>)\""], ["proof (state)\nthis:\n  \\<not> validate_clause I (subst_cl C \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<not> validate_clause I (subst_cl C \\<sigma>) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> validate_clause I (subst_cl C \\<sigma>)", "obtain \\<eta> \n    where \"\\<not>validate_ground_clause I (subst_cl (subst_cl C \\<sigma>) \\<eta>)\" \n      and \"ground_clause (subst_cl (subst_cl C \\<sigma>) \\<eta>)\""], ["proof (prove)\nusing this:\n  \\<not> validate_clause I (subst_cl C \\<sigma>)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<eta>.\n        \\<lbrakk>\\<not> validate_ground_clause I\n                         (subst_cl (subst_cl C \\<sigma>) \\<eta>);\n         ground_clause (subst_cl (subst_cl C \\<sigma>) \\<eta>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<not> validate_ground_clause I (subst_cl (subst_cl C \\<sigma>) \\<eta>)\n  ground_clause (subst_cl (subst_cl C \\<sigma>) \\<eta>)\n\ngoal (1 subgoal):\n 1. \\<not> validate_clause I (subst_cl C \\<sigma>) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> validate_ground_clause I (subst_cl (subst_cl C \\<sigma>) \\<eta>)\n  ground_clause (subst_cl (subst_cl C \\<sigma>) \\<eta>)", "have i: \"\\<not>validate_ground_clause I (subst_cl C (comp \\<sigma> \\<eta>))\""], ["proof (prove)\nusing this:\n  \\<not> validate_ground_clause I (subst_cl (subst_cl C \\<sigma>) \\<eta>)\n  ground_clause (subst_cl (subst_cl C \\<sigma>) \\<eta>)\n\ngoal (1 subgoal):\n 1. \\<not> validate_ground_clause I\n            (subst_cl C (\\<sigma> \\<lozenge> \\<eta>))", "using composition_of_substs_cl"], ["proof (prove)\nusing this:\n  \\<not> validate_ground_clause I (subst_cl (subst_cl C \\<sigma>) \\<eta>)\n  ground_clause (subst_cl (subst_cl C \\<sigma>) \\<eta>)\n  subst_cl (subst_cl ?C ?\\<sigma>) ?\\<eta> =\n  subst_cl ?C (?\\<sigma> \\<lozenge> ?\\<eta>)\n\ngoal (1 subgoal):\n 1. \\<not> validate_ground_clause I\n            (subst_cl C (\\<sigma> \\<lozenge> \\<eta>))", "by metis"], ["proof (state)\nthis:\n  \\<not> validate_ground_clause I (subst_cl C (\\<sigma> \\<lozenge> \\<eta>))\n\ngoal (1 subgoal):\n 1. \\<not> validate_clause I (subst_cl C \\<sigma>) \\<Longrightarrow> False", "from \\<open>ground_clause (subst_cl (subst_cl C \\<sigma>) \\<eta>)\\<close>"], ["proof (chain)\npicking this:\n  ground_clause (subst_cl (subst_cl C \\<sigma>) \\<eta>)", "have ii: \"ground_clause (subst_cl C (comp \\<sigma> \\<eta>))\""], ["proof (prove)\nusing this:\n  ground_clause (subst_cl (subst_cl C \\<sigma>) \\<eta>)\n\ngoal (1 subgoal):\n 1. ground_clause (subst_cl C (\\<sigma> \\<lozenge> \\<eta>))", "using composition_of_substs_cl"], ["proof (prove)\nusing this:\n  ground_clause (subst_cl (subst_cl C \\<sigma>) \\<eta>)\n  subst_cl (subst_cl ?C ?\\<sigma>) ?\\<eta> =\n  subst_cl ?C (?\\<sigma> \\<lozenge> ?\\<eta>)\n\ngoal (1 subgoal):\n 1. ground_clause (subst_cl C (\\<sigma> \\<lozenge> \\<eta>))", "by metis"], ["proof (state)\nthis:\n  ground_clause (subst_cl C (\\<sigma> \\<lozenge> \\<eta>))\n\ngoal (1 subgoal):\n 1. \\<not> validate_clause I (subst_cl C \\<sigma>) \\<Longrightarrow> False", "from i and ii"], ["proof (chain)\npicking this:\n  \\<not> validate_ground_clause I (subst_cl C (\\<sigma> \\<lozenge> \\<eta>))\n  ground_clause (subst_cl C (\\<sigma> \\<lozenge> \\<eta>))", "have \"\\<not>validate_clause I C\""], ["proof (prove)\nusing this:\n  \\<not> validate_ground_clause I (subst_cl C (\\<sigma> \\<lozenge> \\<eta>))\n  ground_clause (subst_cl C (\\<sigma> \\<lozenge> \\<eta>))\n\ngoal (1 subgoal):\n 1. \\<not> validate_clause I C", "by auto"], ["proof (state)\nthis:\n  \\<not> validate_clause I C\n\ngoal (1 subgoal):\n 1. \\<not> validate_clause I (subst_cl C \\<sigma>) \\<Longrightarrow> False", "from \\<open>\\<not>validate_clause I C\\<close> and \\<open>validate_clause I C\\<close>"], ["proof (chain)\npicking this:\n  \\<not> validate_clause I C\n  validate_clause I C", "show False"], ["proof (prove)\nusing this:\n  \\<not> validate_clause I C\n  validate_clause I C\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>We prove that two equivalent substitutions yield equivalent objects.\\<close>"], ["", "lemma equivalent_on_eq :\n  assumes \"equivalent_on \\<sigma> \\<eta> (vars_of_eq e) I\"\n  assumes \"fo_interpretation I\"\n  shows \"(validate_ground_eq I (subst_equation e \\<sigma>)) = (validate_ground_eq I (subst_equation e \\<eta>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. validate_ground_eq I (subst_equation e \\<sigma>) =\n    validate_ground_eq I (subst_equation e \\<eta>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. validate_ground_eq I (subst_equation e \\<sigma>) =\n    validate_ground_eq I (subst_equation e \\<eta>)", "obtain t and s where \"e = Eq t s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t s. e = Eq t s \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using equation.exhaust"], ["proof (prove)\nusing this:\n  (\\<And>x1 x2. ?y = Eq x1 x2 \\<Longrightarrow> ?P) \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>t s. e = Eq t s \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  e = Eq t s\n\ngoal (1 subgoal):\n 1. validate_ground_eq I (subst_equation e \\<sigma>) =\n    validate_ground_eq I (subst_equation e \\<eta>)", "then"], ["proof (chain)\npicking this:\n  e = Eq t s", "have \"vars_of t \\<subseteq> vars_of_eq e\""], ["proof (prove)\nusing this:\n  e = Eq t s\n\ngoal (1 subgoal):\n 1. vars_of t \\<subseteq> vars_of_eq e", "by simp"], ["proof (state)\nthis:\n  vars_of t \\<subseteq> vars_of_eq e\n\ngoal (1 subgoal):\n 1. validate_ground_eq I (subst_equation e \\<sigma>) =\n    validate_ground_eq I (subst_equation e \\<eta>)", "from this and assms(1)"], ["proof (chain)\npicking this:\n  vars_of t \\<subseteq> vars_of_eq e\n  equivalent_on \\<sigma> \\<eta> (vars_of_eq e) I", "have \"equivalent_on \\<sigma> \\<eta> (vars_of t) I\""], ["proof (prove)\nusing this:\n  vars_of t \\<subseteq> vars_of_eq e\n  equivalent_on \\<sigma> \\<eta> (vars_of_eq e) I\n\ngoal (1 subgoal):\n 1. equivalent_on \\<sigma> \\<eta> (vars_of t) I", "unfolding equivalent_on_def"], ["proof (prove)\nusing this:\n  vars_of t \\<subseteq> vars_of_eq e\n  \\<forall>x\\<in>vars_of_eq e.\n     I (Var x \\<lhd> \\<sigma>) (Var x \\<lhd> \\<eta>)\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>vars_of t.\n       I (Var x \\<lhd> \\<sigma>) (Var x \\<lhd> \\<eta>)", "by auto"], ["proof (state)\nthis:\n  equivalent_on \\<sigma> \\<eta> (vars_of t) I\n\ngoal (1 subgoal):\n 1. validate_ground_eq I (subst_equation e \\<sigma>) =\n    validate_ground_eq I (subst_equation e \\<eta>)", "from this assms(2)"], ["proof (chain)\npicking this:\n  equivalent_on \\<sigma> \\<eta> (vars_of t) I\n  fo_interpretation I", "have \"I (subst t \\<sigma>) (subst t \\<eta>)\""], ["proof (prove)\nusing this:\n  equivalent_on \\<sigma> \\<eta> (vars_of t) I\n  fo_interpretation I\n\ngoal (1 subgoal):\n 1. I (t \\<lhd> \\<sigma>) (t \\<lhd> \\<eta>)", "using equivalent_on_term"], ["proof (prove)\nusing this:\n  equivalent_on \\<sigma> \\<eta> (vars_of t) I\n  fo_interpretation I\n  \\<lbrakk>congruence ?I;\n   equivalent_on ?\\<sigma> ?\\<eta> (vars_of ?t) ?I\\<rbrakk>\n  \\<Longrightarrow> ?I (?t \\<lhd> ?\\<sigma>) (?t \\<lhd> ?\\<eta>)\n\ngoal (1 subgoal):\n 1. I (t \\<lhd> \\<sigma>) (t \\<lhd> \\<eta>)", "unfolding fo_interpretation_def"], ["proof (prove)\nusing this:\n  equivalent_on \\<sigma> \\<eta> (vars_of t) I\n  congruence I\n  \\<lbrakk>congruence ?I;\n   equivalent_on ?\\<sigma> ?\\<eta> (vars_of ?t) ?I\\<rbrakk>\n  \\<Longrightarrow> ?I (?t \\<lhd> ?\\<sigma>) (?t \\<lhd> ?\\<eta>)\n\ngoal (1 subgoal):\n 1. I (t \\<lhd> \\<sigma>) (t \\<lhd> \\<eta>)", "by auto"], ["proof (state)\nthis:\n  I (t \\<lhd> \\<sigma>) (t \\<lhd> \\<eta>)\n\ngoal (1 subgoal):\n 1. validate_ground_eq I (subst_equation e \\<sigma>) =\n    validate_ground_eq I (subst_equation e \\<eta>)", "from \\<open>e = Eq t s\\<close>"], ["proof (chain)\npicking this:\n  e = Eq t s", "have \"vars_of s \\<subseteq> vars_of_eq e\""], ["proof (prove)\nusing this:\n  e = Eq t s\n\ngoal (1 subgoal):\n 1. vars_of s \\<subseteq> vars_of_eq e", "by simp"], ["proof (state)\nthis:\n  vars_of s \\<subseteq> vars_of_eq e\n\ngoal (1 subgoal):\n 1. validate_ground_eq I (subst_equation e \\<sigma>) =\n    validate_ground_eq I (subst_equation e \\<eta>)", "from this and \\<open>equivalent_on \\<sigma> \\<eta> (vars_of_eq e) I\\<close>"], ["proof (chain)\npicking this:\n  vars_of s \\<subseteq> vars_of_eq e\n  equivalent_on \\<sigma> \\<eta> (vars_of_eq e) I", "have \"equivalent_on \\<sigma> \\<eta> (vars_of s) I\""], ["proof (prove)\nusing this:\n  vars_of s \\<subseteq> vars_of_eq e\n  equivalent_on \\<sigma> \\<eta> (vars_of_eq e) I\n\ngoal (1 subgoal):\n 1. equivalent_on \\<sigma> \\<eta> (vars_of s) I", "unfolding equivalent_on_def"], ["proof (prove)\nusing this:\n  vars_of s \\<subseteq> vars_of_eq e\n  \\<forall>x\\<in>vars_of_eq e.\n     I (Var x \\<lhd> \\<sigma>) (Var x \\<lhd> \\<eta>)\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>vars_of s.\n       I (Var x \\<lhd> \\<sigma>) (Var x \\<lhd> \\<eta>)", "by auto"], ["proof (state)\nthis:\n  equivalent_on \\<sigma> \\<eta> (vars_of s) I\n\ngoal (1 subgoal):\n 1. validate_ground_eq I (subst_equation e \\<sigma>) =\n    validate_ground_eq I (subst_equation e \\<eta>)", "from this assms(2)"], ["proof (chain)\npicking this:\n  equivalent_on \\<sigma> \\<eta> (vars_of s) I\n  fo_interpretation I", "have \"I (subst s \\<sigma>) (subst s \\<eta>)\""], ["proof (prove)\nusing this:\n  equivalent_on \\<sigma> \\<eta> (vars_of s) I\n  fo_interpretation I\n\ngoal (1 subgoal):\n 1. I (s \\<lhd> \\<sigma>) (s \\<lhd> \\<eta>)", "using equivalent_on_term"], ["proof (prove)\nusing this:\n  equivalent_on \\<sigma> \\<eta> (vars_of s) I\n  fo_interpretation I\n  \\<lbrakk>congruence ?I;\n   equivalent_on ?\\<sigma> ?\\<eta> (vars_of ?t) ?I\\<rbrakk>\n  \\<Longrightarrow> ?I (?t \\<lhd> ?\\<sigma>) (?t \\<lhd> ?\\<eta>)\n\ngoal (1 subgoal):\n 1. I (s \\<lhd> \\<sigma>) (s \\<lhd> \\<eta>)", "unfolding fo_interpretation_def"], ["proof (prove)\nusing this:\n  equivalent_on \\<sigma> \\<eta> (vars_of s) I\n  congruence I\n  \\<lbrakk>congruence ?I;\n   equivalent_on ?\\<sigma> ?\\<eta> (vars_of ?t) ?I\\<rbrakk>\n  \\<Longrightarrow> ?I (?t \\<lhd> ?\\<sigma>) (?t \\<lhd> ?\\<eta>)\n\ngoal (1 subgoal):\n 1. I (s \\<lhd> \\<sigma>) (s \\<lhd> \\<eta>)", "by auto"], ["proof (state)\nthis:\n  I (s \\<lhd> \\<sigma>) (s \\<lhd> \\<eta>)\n\ngoal (1 subgoal):\n 1. validate_ground_eq I (subst_equation e \\<sigma>) =\n    validate_ground_eq I (subst_equation e \\<eta>)", "from assms(2) \\<open>I (subst t \\<sigma>) (subst t \\<eta>)\\<close> \n    and \\<open>I (subst s \\<sigma>) (subst s \\<eta>)\\<close> \n    and \\<open>e = Eq t s\\<close>"], ["proof (chain)\npicking this:\n  fo_interpretation I\n  I (t \\<lhd> \\<sigma>) (t \\<lhd> \\<eta>)\n  I (s \\<lhd> \\<sigma>) (s \\<lhd> \\<eta>)\n  e = Eq t s", "show ?thesis"], ["proof (prove)\nusing this:\n  fo_interpretation I\n  I (t \\<lhd> \\<sigma>) (t \\<lhd> \\<eta>)\n  I (s \\<lhd> \\<sigma>) (s \\<lhd> \\<eta>)\n  e = Eq t s\n\ngoal (1 subgoal):\n 1. validate_ground_eq I (subst_equation e \\<sigma>) =\n    validate_ground_eq I (subst_equation e \\<eta>)", "unfolding fo_interpretation_def congruence_def equivalence_relation_def \n    transitive_def symmetric_def reflexive_def"], ["proof (prove)\nusing this:\n  ((\\<forall>y. I y y) \\<and>\n   (\\<forall>y z. I y z = I z y) \\<and>\n   (\\<forall>y z u.\n       I y z \\<longrightarrow> I z u \\<longrightarrow> I y u)) \\<and>\n  compatible_with_structure I\n  I (t \\<lhd> \\<sigma>) (t \\<lhd> \\<eta>)\n  I (s \\<lhd> \\<sigma>) (s \\<lhd> \\<eta>)\n  e = Eq t s\n\ngoal (1 subgoal):\n 1. validate_ground_eq I (subst_equation e \\<sigma>) =\n    validate_ground_eq I (subst_equation e \\<eta>)", "by (metis (full_types) subst_equation.simps validate_ground_eq.simps)"], ["proof (state)\nthis:\n  validate_ground_eq I (subst_equation e \\<sigma>) =\n  validate_ground_eq I (subst_equation e \\<eta>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma equivalent_on_lit :\n  assumes \"equivalent_on \\<sigma> \\<eta> (vars_of_lit l) I\"\n  assumes \"fo_interpretation I\"\n  shows \"(validate_ground_lit I (subst_lit l \\<sigma>)) \n    = (validate_ground_lit I (subst_lit l \\<eta>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. validate_ground_lit I (subst_lit l \\<sigma>) =\n    validate_ground_lit I (subst_lit l \\<eta>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. validate_ground_lit I (subst_lit l \\<sigma>) =\n    validate_ground_lit I (subst_lit l \\<eta>)", "obtain e where \"l = Pos e \\<or> l = Neg e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>e.\n        l = Pos e \\<or> l = Neg e \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using literal.exhaust"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x1. ?y = Pos x1 \\<Longrightarrow> ?P;\n   \\<And>x2. ?y = Neg x2 \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        l = Pos e \\<or> l = Neg e \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  l = Pos e \\<or> l = Neg e\n\ngoal (1 subgoal):\n 1. validate_ground_lit I (subst_lit l \\<sigma>) =\n    validate_ground_lit I (subst_lit l \\<eta>)", "then"], ["proof (chain)\npicking this:\n  l = Pos e \\<or> l = Neg e", "have \"vars_of_eq e \\<subseteq> vars_of_lit l\""], ["proof (prove)\nusing this:\n  l = Pos e \\<or> l = Neg e\n\ngoal (1 subgoal):\n 1. vars_of_eq e \\<subseteq> vars_of_lit l", "by auto"], ["proof (state)\nthis:\n  vars_of_eq e \\<subseteq> vars_of_lit l\n\ngoal (1 subgoal):\n 1. validate_ground_lit I (subst_lit l \\<sigma>) =\n    validate_ground_lit I (subst_lit l \\<eta>)", "from this and \\<open>equivalent_on \\<sigma> \\<eta> (vars_of_lit l) I\\<close>"], ["proof (chain)\npicking this:\n  vars_of_eq e \\<subseteq> vars_of_lit l\n  equivalent_on \\<sigma> \\<eta> (vars_of_lit l) I", "have \"equivalent_on \\<sigma> \\<eta> (vars_of_eq e) I\""], ["proof (prove)\nusing this:\n  vars_of_eq e \\<subseteq> vars_of_lit l\n  equivalent_on \\<sigma> \\<eta> (vars_of_lit l) I\n\ngoal (1 subgoal):\n 1. equivalent_on \\<sigma> \\<eta> (vars_of_eq e) I", "unfolding equivalent_on_def"], ["proof (prove)\nusing this:\n  vars_of_eq e \\<subseteq> vars_of_lit l\n  \\<forall>x\\<in>vars_of_lit l.\n     I (Var x \\<lhd> \\<sigma>) (Var x \\<lhd> \\<eta>)\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>vars_of_eq e.\n       I (Var x \\<lhd> \\<sigma>) (Var x \\<lhd> \\<eta>)", "by auto"], ["proof (state)\nthis:\n  equivalent_on \\<sigma> \\<eta> (vars_of_eq e) I\n\ngoal (1 subgoal):\n 1. validate_ground_lit I (subst_lit l \\<sigma>) =\n    validate_ground_lit I (subst_lit l \\<eta>)", "from this assms(2)"], ["proof (chain)\npicking this:\n  equivalent_on \\<sigma> \\<eta> (vars_of_eq e) I\n  fo_interpretation I", "have \"(validate_ground_eq I (subst_equation e \\<sigma>)) = (validate_ground_eq I (subst_equation e \\<eta>))\""], ["proof (prove)\nusing this:\n  equivalent_on \\<sigma> \\<eta> (vars_of_eq e) I\n  fo_interpretation I\n\ngoal (1 subgoal):\n 1. validate_ground_eq I (subst_equation e \\<sigma>) =\n    validate_ground_eq I (subst_equation e \\<eta>)", "using equivalent_on_eq"], ["proof (prove)\nusing this:\n  equivalent_on \\<sigma> \\<eta> (vars_of_eq e) I\n  fo_interpretation I\n  \\<lbrakk>equivalent_on ?\\<sigma> ?\\<eta> (vars_of_eq ?e) ?I;\n   fo_interpretation ?I\\<rbrakk>\n  \\<Longrightarrow> validate_ground_eq ?I (subst_equation ?e ?\\<sigma>) =\n                    validate_ground_eq ?I (subst_equation ?e ?\\<eta>)\n\ngoal (1 subgoal):\n 1. validate_ground_eq I (subst_equation e \\<sigma>) =\n    validate_ground_eq I (subst_equation e \\<eta>)", "by auto"], ["proof (state)\nthis:\n  validate_ground_eq I (subst_equation e \\<sigma>) =\n  validate_ground_eq I (subst_equation e \\<eta>)\n\ngoal (1 subgoal):\n 1. validate_ground_lit I (subst_lit l \\<sigma>) =\n    validate_ground_lit I (subst_lit l \\<eta>)", "from this and \\<open>l = Pos e \\<or> l = Neg e\\<close>"], ["proof (chain)\npicking this:\n  validate_ground_eq I (subst_equation e \\<sigma>) =\n  validate_ground_eq I (subst_equation e \\<eta>)\n  l = Pos e \\<or> l = Neg e", "show ?thesis"], ["proof (prove)\nusing this:\n  validate_ground_eq I (subst_equation e \\<sigma>) =\n  validate_ground_eq I (subst_equation e \\<eta>)\n  l = Pos e \\<or> l = Neg e\n\ngoal (1 subgoal):\n 1. validate_ground_lit I (subst_lit l \\<sigma>) =\n    validate_ground_lit I (subst_lit l \\<eta>)", "by auto"], ["proof (state)\nthis:\n  validate_ground_lit I (subst_lit l \\<sigma>) =\n  validate_ground_lit I (subst_lit l \\<eta>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma equivalent_on_cl :\n  assumes \"equivalent_on \\<sigma> \\<eta> (vars_of_cl C) I\"\n  assumes \"fo_interpretation I\"\n  shows \"(validate_ground_clause I (subst_cl C \\<sigma>)) \n    = (validate_ground_clause I (subst_cl C \\<eta>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. validate_ground_clause I (subst_cl C \\<sigma>) =\n    validate_ground_clause I (subst_cl C \\<eta>)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. validate_ground_clause I (subst_cl C \\<sigma>) \\<noteq>\n    validate_ground_clause I (subst_cl C \\<eta>) \\<Longrightarrow>\n    False", "assume \"(validate_ground_clause I (subst_cl C \\<sigma>)) \n    \\<noteq> (validate_ground_clause I (subst_cl C \\<eta>))\""], ["proof (state)\nthis:\n  validate_ground_clause I (subst_cl C \\<sigma>) \\<noteq>\n  validate_ground_clause I (subst_cl C \\<eta>)\n\ngoal (1 subgoal):\n 1. validate_ground_clause I (subst_cl C \\<sigma>) \\<noteq>\n    validate_ground_clause I (subst_cl C \\<eta>) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  validate_ground_clause I (subst_cl C \\<sigma>) \\<noteq>\n  validate_ground_clause I (subst_cl C \\<eta>)", "obtain L where \"L \\<in> C\" and \"(validate_ground_lit I (subst_lit L \\<sigma>)) \n    \\<noteq> (validate_ground_lit I (subst_lit L \\<eta>))\""], ["proof (prove)\nusing this:\n  validate_ground_clause I (subst_cl C \\<sigma>) \\<noteq>\n  validate_ground_clause I (subst_cl C \\<eta>)\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        \\<lbrakk>L \\<in> C;\n         validate_ground_lit I (subst_lit L \\<sigma>) \\<noteq>\n         validate_ground_lit I (subst_lit L \\<eta>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  L \\<in> C\n  validate_ground_lit I (subst_lit L \\<sigma>) \\<noteq>\n  validate_ground_lit I (subst_lit L \\<eta>)\n\ngoal (1 subgoal):\n 1. validate_ground_clause I (subst_cl C \\<sigma>) \\<noteq>\n    validate_ground_clause I (subst_cl C \\<eta>) \\<Longrightarrow>\n    False", "from \\<open>L \\<in> C\\<close>"], ["proof (chain)\npicking this:\n  L \\<in> C", "have \"vars_of_lit L \\<subseteq> vars_of_cl C\""], ["proof (prove)\nusing this:\n  L \\<in> C\n\ngoal (1 subgoal):\n 1. vars_of_lit L \\<subseteq> vars_of_cl C", "by auto"], ["proof (state)\nthis:\n  vars_of_lit L \\<subseteq> vars_of_cl C\n\ngoal (1 subgoal):\n 1. validate_ground_clause I (subst_cl C \\<sigma>) \\<noteq>\n    validate_ground_clause I (subst_cl C \\<eta>) \\<Longrightarrow>\n    False", "from this and assms"], ["proof (chain)\npicking this:\n  vars_of_lit L \\<subseteq> vars_of_cl C\n  equivalent_on \\<sigma> \\<eta> (vars_of_cl C) I\n  fo_interpretation I", "have \"equivalent_on \\<sigma> \\<eta> (vars_of_lit L) I\""], ["proof (prove)\nusing this:\n  vars_of_lit L \\<subseteq> vars_of_cl C\n  equivalent_on \\<sigma> \\<eta> (vars_of_cl C) I\n  fo_interpretation I\n\ngoal (1 subgoal):\n 1. equivalent_on \\<sigma> \\<eta> (vars_of_lit L) I", "unfolding equivalent_on_def"], ["proof (prove)\nusing this:\n  vars_of_lit L \\<subseteq> vars_of_cl C\n  \\<forall>x\\<in>vars_of_cl C.\n     I (Var x \\<lhd> \\<sigma>) (Var x \\<lhd> \\<eta>)\n  fo_interpretation I\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>vars_of_lit L.\n       I (Var x \\<lhd> \\<sigma>) (Var x \\<lhd> \\<eta>)", "by auto"], ["proof (state)\nthis:\n  equivalent_on \\<sigma> \\<eta> (vars_of_lit L) I\n\ngoal (1 subgoal):\n 1. validate_ground_clause I (subst_cl C \\<sigma>) \\<noteq>\n    validate_ground_clause I (subst_cl C \\<eta>) \\<Longrightarrow>\n    False", "from this assms(2) and \\<open>(validate_ground_lit I (subst_lit L \\<sigma>)) \n    \\<noteq> (validate_ground_lit I (subst_lit L \\<eta>))\\<close>"], ["proof (chain)\npicking this:\n  equivalent_on \\<sigma> \\<eta> (vars_of_lit L) I\n  fo_interpretation I\n  validate_ground_lit I (subst_lit L \\<sigma>) \\<noteq>\n  validate_ground_lit I (subst_lit L \\<eta>)", "show False"], ["proof (prove)\nusing this:\n  equivalent_on \\<sigma> \\<eta> (vars_of_lit L) I\n  fo_interpretation I\n  validate_ground_lit I (subst_lit L \\<sigma>) \\<noteq>\n  validate_ground_lit I (subst_lit L \\<eta>)\n\ngoal (1 subgoal):\n 1. False", "using equivalent_on_lit"], ["proof (prove)\nusing this:\n  equivalent_on \\<sigma> \\<eta> (vars_of_lit L) I\n  fo_interpretation I\n  validate_ground_lit I (subst_lit L \\<sigma>) \\<noteq>\n  validate_ground_lit I (subst_lit L \\<eta>)\n  \\<lbrakk>equivalent_on ?\\<sigma> ?\\<eta> (vars_of_lit ?l) ?I;\n   fo_interpretation ?I\\<rbrakk>\n  \\<Longrightarrow> validate_ground_lit ?I (subst_lit ?l ?\\<sigma>) =\n                    validate_ground_lit ?I (subst_lit ?l ?\\<eta>)\n\ngoal (1 subgoal):\n 1. False", "by metis"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}