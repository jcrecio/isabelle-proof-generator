{"file_name": "/home/qj213/afp-2021-10-22/thys/SuperCalc/terms.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/SuperCalc", "problem_names": ["lemma constants_are_not_variables :\n  assumes \"is_a_constant x\"\n  shows \"\\<not> (is_a_variable x)\"", "lemma constants_are_ground : \n  assumes \"is_a_constant x\"\n  shows \"ground_term x\"", "lemma replace_subterm_is_a_function: \n  shows \"\\<And>t u v. subterm t p u \\<Longrightarrow> \\<exists>s. replace_subterm t p v s\"", "lemma root_subterm:\n  shows \"t \\<in> (subterms_of t)\"", "lemma root_position:\n  shows \"Nil \\<in> (pos_of t)\"", "lemma subterms_of_an_atomic_term:\n  assumes \"is_a_variable t \\<or> is_a_constant t\"\n  shows \"subterms_of t = { t }\"", "lemma positions_of_an_atomic_term:\n  assumes \"is_a_variable t \\<or> is_a_constant t\"\n  shows \"pos_of t = { Nil }\"", "lemma subterm_of_a_subterm_is_a_subterm :\n  assumes \"subterm u q v\"\n  shows \"\\<And> t. subterm t p u \\<Longrightarrow> subterm t (append p q) v\"", "lemma occur_in_subterm:\n  assumes \"occurs_in u t\"\n  assumes \"occurs_in t s\"\n  shows \"occurs_in u s\"", "lemma vars_of_subterm :\n  assumes \"x \\<in> vars_of s\"\n  shows \"\\<And> t. subterm t p s \\<Longrightarrow> x \\<in> vars_of t\"", "lemma vars_subterm :\n  assumes \"subterm t p s\"\n  shows \"vars_of s \\<subseteq> vars_of t\"", "lemma vars_subterms_of :\n  assumes \"s \\<in> subterms_of t\"\n  shows \"vars_of s \\<subseteq> vars_of t\"", "lemma subterms_of_a_non_atomic_term:\n  shows \"subterms_of (Comb t1 t2) = (subterms_of t1) \\<union> (subterms_of t2) \\<union> { (Comb t1 t2) }\"", "lemma positions_of_a_non_atomic_term:\n  shows \"pos_of (Comb t1 t2) = (left_app ` (pos_of t1)) \\<union> (right_app ` (pos_of t2)) \\<union> { Nil }\"", "lemma set_of_subterms_is_finite :\n  shows \"(finite (subterms_of (t :: 'a trm)))\"", "lemma set_of_positions_is_finite :\n  shows \"(finite (pos_of (t :: 'a trm)))\"", "lemma vars_of_instances:\n  shows \"vars_of (subst t \\<sigma>) \n    = \\<Union> { V. \\<exists>x. (x \\<in> (vars_of t)) \\<and> (V = vars_of (subst (Var x) \\<sigma>)) }\"", "lemma subterms_of_instances :\n   \"\\<forall>u v u' s. (u = (subst v s) \\<longrightarrow> (subterm u p u') \n    \\<longrightarrow> (\\<exists>x q1 q2. (is_a_variable x) \\<and> (subterm (subst x s) q1 u') \\<and> \n                      (subterm v q2 x) \\<and> (p = (append q2 q1))) \\<or> \n        ((\\<exists> v'. ((\\<not> is_a_variable v') \\<and> (subterm v p v') \\<and> (u' = (subst v' s))))))\" (is \"?prop p\")", "lemma vars_of_replacement:\n  shows \"\\<And> t s. x \\<in> vars_of s \\<Longrightarrow> replace_subterm t p v s \\<Longrightarrow> x \\<in> (vars_of t) \\<union> (vars_of v)\"", "lemma vars_of_replacement_set:\n  assumes \"replace_subterm t p v s\"\n  shows \"vars_of s \\<subseteq> (vars_of t) \\<union> (vars_of v)\"", "lemma subst_codomain_is_finite:\n  assumes \"finite A\"\n  shows \"finite (subst_codomain \\<eta> A)\"", "lemma subt_decompose:\n  shows \"\\<forall>t1 t2. Comb t1 t2 \\<prec> s \\<longrightarrow> (t1 \\<prec> s \\<and> t2\\<prec> s) \"", "lemma subt_irrefl:\n  shows \"\\<not> (s \\<prec> s)\"", "lemma MGU_exists:\n  shows \"\\<forall>\\<sigma>. ((subst t \\<sigma>) = (subst s \\<sigma>) \\<longrightarrow> unify t s \\<noteq> None)\"", "lemma comp_subst_terms:\n    assumes \"\\<sigma> \\<doteq> \\<theta> \\<lozenge> \\<eta>\"\n    shows \"(subst t \\<sigma>) = (subst (subst t \\<theta>) \\<eta>)\"", "lemma ground_instance:\n  assumes \"ground_on (vars_of t) \\<sigma>\"\n  shows \"ground_term (subst t \\<sigma>)\"", "lemma substs_preserve_groundness:\n  assumes \"ground_term t\"\n  shows \"ground_term (subst t \\<sigma>)\"", "lemma ground_subst_exists  :\n  \"finite V \\<Longrightarrow> \\<exists>\\<sigma>. (ground_on V \\<sigma>)\"", "lemma substs_preserve_ground_terms :\n  assumes \"ground_term t\"\n  shows \"subst t \\<sigma> = t\"", "lemma substs_preserve_subterms :\n  shows \"\\<And> t  s. subterm t p s \\<Longrightarrow> subterm (subst t \\<sigma>) p (subst s \\<sigma>)\"", "lemma substs_preserve_occurs_in:\n  assumes \"occurs_in s t\"\n  shows \"occurs_in (subst s \\<sigma>) (subst t \\<sigma>)\"", "lemma coincide_sym:\n  assumes \"coincide_on \\<sigma> \\<eta> V\"\n  shows \"coincide_on \\<eta> \\<sigma> V\"", "lemma coincide_on_term:\n  shows \"\\<And> \\<sigma> \\<eta>. coincide_on \\<sigma> \\<eta> (vars_of t) \\<Longrightarrow> subst t \\<sigma> = subst t \\<eta>\"", "lemma ground_replacement:\n  assumes \"replace_subterm t p v s\"\n  assumes \"ground_term (subst t \\<sigma>)\"\n  assumes \"ground_term (subst v \\<sigma>)\"\n  shows \"ground_term (subst s \\<sigma>)\"", "lemma combine_substs:\n  assumes \"finite V1\"\n  assumes \"V1 \\<inter> V2 = {}\"\n  assumes \"ground_on V1 \\<eta>1\"\n  shows \"\\<exists>\\<sigma>. (coincide_on \\<sigma> \\<eta>1 V1) \\<and> (coincide_on \\<sigma> \\<eta>2 V2)\"", "lemma map_subst_lemma:\n  shows \"((subst (Var x) \\<sigma>) \\<noteq> (Var x) \\<or> (subst (Var x) \\<sigma>) \\<noteq> (subst (Var x) (map_subst f \\<sigma>)))\n            \\<longrightarrow> ((subst (Var x) (map_subst f \\<sigma>)) = (f (subst (Var x) \\<sigma>)))\"", "lemma replacement_preserves_congruences :\n  shows \"\\<And> t  s. (congruence I) \\<Longrightarrow> (I (subst u \\<sigma>)  (subst v \\<sigma>)) \n          \\<Longrightarrow> subterm t p u \\<Longrightarrow> replace_subterm t p v s \n          \\<Longrightarrow> (I (subst t \\<sigma>)  (subst s \\<sigma>))\"", "lemma equivalent_on_term:\n  assumes \"congruence I\"\n  shows \"\\<And> \\<sigma> \\<eta>. equivalent_on \\<sigma> \\<eta> (vars_of t) I \\<Longrightarrow> (I (subst t \\<sigma>) (subst t \\<eta>))\"", "lemma renamings_admit_inverse:\n  shows \"finite V \\<Longrightarrow> renaming \\<sigma> V \\<Longrightarrow> \\<exists> \\<theta>. (\\<forall> x \\<in> V. (subst (subst (Var x) \\<sigma> ) \\<theta>) = (Var x))\n    \\<and> (\\<forall> x. (x \\<notin> (subst_codomain \\<sigma> V) \\<longrightarrow> (subst (Var x) \\<theta>) = (Var x)))\"", "lemma renaming_exists:\n  assumes \"\\<not> finite (Vars :: ('a set))\"\n  shows \"finite V \\<Longrightarrow> (\\<forall>V'::'a set. finite V' \\<longrightarrow> (\\<exists>\\<eta>. ((renaming \\<eta> V) \\<and> ((subst_codomain \\<eta> V) \\<inter> V') = {})))\""], "translations": [["", "lemma constants_are_not_variables :\n  assumes \"is_a_constant x\"\n  shows \"\\<not> (is_a_variable x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> is_a_variable x", "by (metis assms is_a_constant.elims(2) is_a_variable.elims(2) trm.distinct(2))"], ["", "lemma constants_are_ground : \n  assumes \"is_a_constant x\"\n  shows \"ground_term x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ground_term x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ground_term x", "from assms"], ["proof (chain)\npicking this:\n  is_a_constant x", "obtain y where \"x = (Const y)\""], ["proof (prove)\nusing this:\n  is_a_constant x\n\ngoal (1 subgoal):\n 1. (\\<And>y. x = Const y \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using is_a_constant.elims(2)"], ["proof (prove)\nusing this:\n  is_a_constant x\n  \\<lbrakk>is_a_constant ?x;\n   \\<And>x. ?x = Const x \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>y. x = Const y \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  x = Const y\n\ngoal (1 subgoal):\n 1. ground_term x", "then"], ["proof (chain)\npicking this:\n  x = Const y", "show ?thesis"], ["proof (prove)\nusing this:\n  x = Const y\n\ngoal (1 subgoal):\n 1. ground_term x", "by (simp add: ground_term_def)"], ["proof (state)\nthis:\n  ground_term x\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Positions\\<close>"], ["", "text \\<open>We define the notion of a position together with functions to access to subterms and \nreplace them. We establish some basic properties of these functions.\\<close>"], ["", "text \\<open>Since terms are binary trees, positions are sequences of binary digits.\\<close>"], ["", "datatype indices = Left | Right"], ["", "type_synonym position = \"indices list\""], ["", "fun left_app\n  where \"left_app x = Left # x\""], ["", "fun right_app\n  where \"right_app x = Right # x\""], ["", "definition strict_prefix\nwhere\n  \"strict_prefix p q = (\\<exists>r. (r \\<noteq> []) \\<and> (q = (append p r)))\""], ["", "fun subterm :: \"'a trm \\<Rightarrow> position \\<Rightarrow> 'a trm \\<Rightarrow> bool\"\n  where \n    \"(subterm T [] S) = (T = S)\" |\n    \"(subterm (Var v) (first # next) S) = False\" |\n    \"(subterm (Const c) (first # next) S) = False\" |\n    \"(subterm (Comb x y) (Left # next) S) = (subterm x next S)\" |\n    \"(subterm (Comb x y) (Right # next) S) = (subterm y next S)\""], ["", "definition occurs_in :: \"'a trm \\<Rightarrow> 'a trm \\<Rightarrow> bool\"\n  where\n    \"occurs_in t s = (\\<exists>p. subterm s p t)\""], ["", "definition position_in :: \"position \\<Rightarrow> 'a trm \\<Rightarrow> bool\"\n  where\n    \"position_in p s = (\\<exists>t. subterm s p t)\""], ["", "fun subterms_of \nwhere\n  \"subterms_of t = { s. (occurs_in s t) }\""], ["", "fun proper_subterms_of \nwhere\n  \"proper_subterms_of t = { s. \\<exists>p. (p \\<noteq> Nil \\<and> (subterm t p s)) }\""], ["", "fun pos_of \nwhere\n  \"pos_of t = { p. (position_in p t) }\""], ["", "fun replace_subterm :: \n  \"'a trm \\<Rightarrow> position \\<Rightarrow> 'a trm \\<Rightarrow> 'a trm \\<Rightarrow> bool\"\n  where \n    \"(replace_subterm T [] u S) = (S = u) \" |\n    \"(replace_subterm (Var x) (first # next) u S) = False\" |\n    \"(replace_subterm (Const c) (first # next) u S) = False\" |\n    \"(replace_subterm (Comb x y) (Left # next) u S) =  \n      (\\<exists>S1. (replace_subterm x next u S1) \\<and> (S = Comb S1 y))\" |\n    \"(replace_subterm (Comb x y) (Right # next) u S) = \n      (\\<exists>S2. (replace_subterm y next u S2) \\<and> (S = Comb x S2))\""], ["", "lemma replace_subterm_is_a_function: \n  shows \"\\<And>t u v. subterm t p u \\<Longrightarrow> \\<exists>s. replace_subterm t p v s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t u v.\n       subterm t p u \\<Longrightarrow> \\<exists>s. replace_subterm t p v s", "proof (induction p,auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a p t u v.\n       \\<lbrakk>\\<And>t u v.\n                   subterm t p u \\<Longrightarrow>\n                   Ex (replace_subterm t p v);\n        subterm t (a # p) u\\<rbrakk>\n       \\<Longrightarrow> Ex (replace_subterm t (a # p) v)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a p t u v.\n       \\<lbrakk>\\<And>t u v.\n                   subterm t p u \\<Longrightarrow>\n                   Ex (replace_subterm t p v);\n        subterm t (a # p) u\\<rbrakk>\n       \\<Longrightarrow> Ex (replace_subterm t (a # p) v)", "case (Cons i q)"], ["proof (state)\nthis:\n  subterm ?t q ?u \\<Longrightarrow> \\<exists>a. replace_subterm ?t q ?v a\n  subterm t (i # q) u\n\ngoal (1 subgoal):\n 1. \\<And>a p t u v.\n       \\<lbrakk>\\<And>t u v.\n                   subterm t p u \\<Longrightarrow>\n                   Ex (replace_subterm t p v);\n        subterm t (a # p) u\\<rbrakk>\n       \\<Longrightarrow> Ex (replace_subterm t (a # p) v)", "from \\<open>subterm t (Cons i q) u\\<close>"], ["proof (chain)\npicking this:\n  subterm t (i # q) u", "obtain t1 t2 where \"t = (Comb t1 t2)\""], ["proof (prove)\nusing this:\n  subterm t (i # q) u\n\ngoal (1 subgoal):\n 1. (\\<And>t1 t2.\n        t = t1 \\<cdot> t2 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using subterm.elims(2)"], ["proof (prove)\nusing this:\n  subterm t (i # q) u\n  \\<lbrakk>subterm ?x ?xa ?xb;\n   \\<And>T S.\n      \\<lbrakk>?x = T; ?xa = []; ?xb = S; T = S\\<rbrakk>\n      \\<Longrightarrow> ?P;\n   \\<And>x y next S.\n      \\<lbrakk>?x = x \\<cdot> y; ?xa = indices.Left # next; ?xb = S;\n       subterm x next S\\<rbrakk>\n      \\<Longrightarrow> ?P;\n   \\<And>x y next S.\n      \\<lbrakk>?x = x \\<cdot> y; ?xa = indices.Right # next; ?xb = S;\n       subterm y next S\\<rbrakk>\n      \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>t1 t2.\n        t = t1 \\<cdot> t2 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  t = t1 \\<cdot> t2\n\ngoal (1 subgoal):\n 1. \\<And>a p t u v.\n       \\<lbrakk>\\<And>t u v.\n                   subterm t p u \\<Longrightarrow>\n                   Ex (replace_subterm t p v);\n        subterm t (a # p) u\\<rbrakk>\n       \\<Longrightarrow> Ex (replace_subterm t (a # p) v)", "have \"i = Right \\<or> i = Left\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i = indices.Right \\<or> i = indices.Left", "using indices.exhaust"], ["proof (prove)\nusing this:\n  \\<lbrakk>?y = indices.Left \\<Longrightarrow> ?P;\n   ?y = indices.Right \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. i = indices.Right \\<or> i = indices.Left", "by auto"], ["proof (state)\nthis:\n  i = indices.Right \\<or> i = indices.Left\n\ngoal (1 subgoal):\n 1. \\<And>a p t u v.\n       \\<lbrakk>\\<And>t u v.\n                   subterm t p u \\<Longrightarrow>\n                   Ex (replace_subterm t p v);\n        subterm t (a # p) u\\<rbrakk>\n       \\<Longrightarrow> Ex (replace_subterm t (a # p) v)", "then"], ["proof (chain)\npicking this:\n  i = indices.Right \\<or> i = indices.Left", "show ?case"], ["proof (prove)\nusing this:\n  i = indices.Right \\<or> i = indices.Left\n\ngoal (1 subgoal):\n 1. \\<exists>a. replace_subterm t (i # q) v a", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. i = indices.Right \\<Longrightarrow>\n    \\<exists>a. replace_subterm t (i # q) v a\n 2. i = indices.Left \\<Longrightarrow>\n    \\<exists>a. replace_subterm t (i # q) v a", "assume \"i = Right\""], ["proof (state)\nthis:\n  i = indices.Right\n\ngoal (2 subgoals):\n 1. i = indices.Right \\<Longrightarrow>\n    \\<exists>a. replace_subterm t (i # q) v a\n 2. i = indices.Left \\<Longrightarrow>\n    \\<exists>a. replace_subterm t (i # q) v a", "from this and \\<open>t = (Comb t1 t2)\\<close> and \\<open>subterm t (Cons i q) u\\<close>"], ["proof (chain)\npicking this:\n  i = indices.Right\n  t = t1 \\<cdot> t2\n  subterm t (i # q) u", "have \"subterm t2 q u\""], ["proof (prove)\nusing this:\n  i = indices.Right\n  t = t1 \\<cdot> t2\n  subterm t (i # q) u\n\ngoal (1 subgoal):\n 1. subterm t2 q u", "by auto"], ["proof (state)\nthis:\n  subterm t2 q u\n\ngoal (2 subgoals):\n 1. i = indices.Right \\<Longrightarrow>\n    \\<exists>a. replace_subterm t (i # q) v a\n 2. i = indices.Left \\<Longrightarrow>\n    \\<exists>a. replace_subterm t (i # q) v a", "from this"], ["proof (chain)\npicking this:\n  subterm t2 q u", "obtain s where \"replace_subterm t2 q v s\""], ["proof (prove)\nusing this:\n  subterm t2 q u\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        replace_subterm t2 q v s \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Cons.IH [of t2 u]"], ["proof (prove)\nusing this:\n  subterm t2 q u\n  subterm t2 q u \\<Longrightarrow> \\<exists>a. replace_subterm t2 q ?v a\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        replace_subterm t2 q v s \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  replace_subterm t2 q v s\n\ngoal (2 subgoals):\n 1. i = indices.Right \\<Longrightarrow>\n    \\<exists>a. replace_subterm t (i # q) v a\n 2. i = indices.Left \\<Longrightarrow>\n    \\<exists>a. replace_subterm t (i # q) v a", "from this and \\<open>t = (Comb t1 t2)\\<close> and \\<open>i = Right\\<close>"], ["proof (chain)\npicking this:\n  replace_subterm t2 q v s\n  t = t1 \\<cdot> t2\n  i = indices.Right", "have \"replace_subterm t (Cons i q) v (Comb t1 s)\""], ["proof (prove)\nusing this:\n  replace_subterm t2 q v s\n  t = t1 \\<cdot> t2\n  i = indices.Right\n\ngoal (1 subgoal):\n 1. replace_subterm t (i # q) v (t1 \\<cdot> s)", "by auto"], ["proof (state)\nthis:\n  replace_subterm t (i # q) v (t1 \\<cdot> s)\n\ngoal (2 subgoals):\n 1. i = indices.Right \\<Longrightarrow>\n    \\<exists>a. replace_subterm t (i # q) v a\n 2. i = indices.Left \\<Longrightarrow>\n    \\<exists>a. replace_subterm t (i # q) v a", "from this"], ["proof (chain)\npicking this:\n  replace_subterm t (i # q) v (t1 \\<cdot> s)", "show ?case"], ["proof (prove)\nusing this:\n  replace_subterm t (i # q) v (t1 \\<cdot> s)\n\ngoal (1 subgoal):\n 1. \\<exists>a. replace_subterm t (i # q) v a", "by auto"], ["proof (state)\nthis:\n  \\<exists>a. replace_subterm t (i # q) v a\n\ngoal (1 subgoal):\n 1. i = indices.Left \\<Longrightarrow>\n    \\<exists>a. replace_subterm t (i # q) v a", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i = indices.Left \\<Longrightarrow>\n    \\<exists>a. replace_subterm t (i # q) v a", "assume \"i = Left\""], ["proof (state)\nthis:\n  i = indices.Left\n\ngoal (1 subgoal):\n 1. i = indices.Left \\<Longrightarrow>\n    \\<exists>a. replace_subterm t (i # q) v a", "from this and \\<open>t = (Comb t1 t2)\\<close> and \\<open>subterm t (Cons i q) u\\<close>"], ["proof (chain)\npicking this:\n  i = indices.Left\n  t = t1 \\<cdot> t2\n  subterm t (i # q) u", "have \"subterm t1 q u\""], ["proof (prove)\nusing this:\n  i = indices.Left\n  t = t1 \\<cdot> t2\n  subterm t (i # q) u\n\ngoal (1 subgoal):\n 1. subterm t1 q u", "by auto"], ["proof (state)\nthis:\n  subterm t1 q u\n\ngoal (1 subgoal):\n 1. i = indices.Left \\<Longrightarrow>\n    \\<exists>a. replace_subterm t (i # q) v a", "from this"], ["proof (chain)\npicking this:\n  subterm t1 q u", "obtain s where \"replace_subterm t1 q v s\""], ["proof (prove)\nusing this:\n  subterm t1 q u\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        replace_subterm t1 q v s \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Cons.IH [of t1 u]"], ["proof (prove)\nusing this:\n  subterm t1 q u\n  subterm t1 q u \\<Longrightarrow> \\<exists>a. replace_subterm t1 q ?v a\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        replace_subterm t1 q v s \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  replace_subterm t1 q v s\n\ngoal (1 subgoal):\n 1. i = indices.Left \\<Longrightarrow>\n    \\<exists>a. replace_subterm t (i # q) v a", "from this and \\<open>t = (Comb t1 t2)\\<close> and \\<open>i = Left\\<close>"], ["proof (chain)\npicking this:\n  replace_subterm t1 q v s\n  t = t1 \\<cdot> t2\n  i = indices.Left", "have \"replace_subterm t (Cons i q) v (Comb s t2)\""], ["proof (prove)\nusing this:\n  replace_subterm t1 q v s\n  t = t1 \\<cdot> t2\n  i = indices.Left\n\ngoal (1 subgoal):\n 1. replace_subterm t (i # q) v (s \\<cdot> t2)", "by auto"], ["proof (state)\nthis:\n  replace_subterm t (i # q) v (s \\<cdot> t2)\n\ngoal (1 subgoal):\n 1. i = indices.Left \\<Longrightarrow>\n    \\<exists>a. replace_subterm t (i # q) v a", "from this"], ["proof (chain)\npicking this:\n  replace_subterm t (i # q) v (s \\<cdot> t2)", "show ?case"], ["proof (prove)\nusing this:\n  replace_subterm t (i # q) v (s \\<cdot> t2)\n\ngoal (1 subgoal):\n 1. \\<exists>a. replace_subterm t (i # q) v a", "by auto"], ["proof (state)\nthis:\n  \\<exists>a. replace_subterm t (i # q) v a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>a. replace_subterm t (i # q) v a\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>We prove some useful lemmata concerning the set of variables or subterms occurring in a \nterm.\\<close>"], ["", "lemma root_subterm:\n  shows \"t \\<in> (subterms_of t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> subterms_of t", "by (metis mem_Collect_eq occurs_in_def subterm.simps(1) subterms_of.simps)"], ["", "lemma root_position:\n  shows \"Nil \\<in> (pos_of t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [] \\<in> pos_of t", "by (metis mem_Collect_eq subterm.simps(1) position_in_def pos_of.simps)"], ["", "lemma subterms_of_an_atomic_term:\n  assumes \"is_a_variable t \\<or> is_a_constant t\"\n  shows \"subterms_of t = { t }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subterms_of t = {t}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. subterms_of t \\<subseteq> {t}\n 2. {t} \\<subseteq> subterms_of t", "show \"subterms_of t \\<subseteq> { t }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subterms_of t \\<subseteq> {t}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> subterms_of t \\<Longrightarrow> x \\<in> {t}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> subterms_of t \\<Longrightarrow> x \\<in> {t}", "assume \"x \\<in> subterms_of t\""], ["proof (state)\nthis:\n  x \\<in> subterms_of t\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> subterms_of t \\<Longrightarrow> x \\<in> {t}", "then"], ["proof (chain)\npicking this:\n  x \\<in> subterms_of t", "have \"occurs_in x t\""], ["proof (prove)\nusing this:\n  x \\<in> subterms_of t\n\ngoal (1 subgoal):\n 1. occurs_in x t", "by auto"], ["proof (state)\nthis:\n  occurs_in x t\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> subterms_of t \\<Longrightarrow> x \\<in> {t}", "then"], ["proof (chain)\npicking this:\n  occurs_in x t", "have \"\\<exists>p. (subterm t p x)\""], ["proof (prove)\nusing this:\n  occurs_in x t\n\ngoal (1 subgoal):\n 1. \\<exists>p. subterm t p x", "unfolding occurs_in_def"], ["proof (prove)\nusing this:\n  \\<exists>p. subterm t p x\n\ngoal (1 subgoal):\n 1. \\<exists>p. subterm t p x", "by auto"], ["proof (state)\nthis:\n  \\<exists>p. subterm t p x\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> subterms_of t \\<Longrightarrow> x \\<in> {t}", "from this and assms"], ["proof (chain)\npicking this:\n  \\<exists>p. subterm t p x\n  is_a_variable t \\<or> is_a_constant t", "have \"x = t\""], ["proof (prove)\nusing this:\n  \\<exists>p. subterm t p x\n  is_a_variable t \\<or> is_a_constant t\n\ngoal (1 subgoal):\n 1. x = t", "by (metis is_a_constant.simps(3) is_a_variable.simps(3) subterm.elims(2))"], ["proof (state)\nthis:\n  x = t\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> subterms_of t \\<Longrightarrow> x \\<in> {t}", "thus \"x \\<in> { t }\""], ["proof (prove)\nusing this:\n  x = t\n\ngoal (1 subgoal):\n 1. x \\<in> {t}", "by auto"], ["proof (state)\nthis:\n  x \\<in> {t}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  subterms_of t \\<subseteq> {t}\n\ngoal (1 subgoal):\n 1. {t} \\<subseteq> subterms_of t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. {t} \\<subseteq> subterms_of t", "show \"{ t } \\<subseteq> subterms_of t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {t} \\<subseteq> subterms_of t", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> {t} \\<Longrightarrow> x \\<in> subterms_of t", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> {t} \\<Longrightarrow> x \\<in> subterms_of t", "assume \"x \\<in> { t }\""], ["proof (state)\nthis:\n  x \\<in> {t}\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> {t} \\<Longrightarrow> x \\<in> subterms_of t", "then"], ["proof (chain)\npicking this:\n  x \\<in> {t}", "show \"x \\<in> subterms_of t\""], ["proof (prove)\nusing this:\n  x \\<in> {t}\n\ngoal (1 subgoal):\n 1. x \\<in> subterms_of t", "using root_subterm"], ["proof (prove)\nusing this:\n  x \\<in> {t}\n  ?t \\<in> subterms_of ?t\n\ngoal (1 subgoal):\n 1. x \\<in> subterms_of t", "by auto"], ["proof (state)\nthis:\n  x \\<in> subterms_of t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {t} \\<subseteq> subterms_of t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma positions_of_an_atomic_term:\n  assumes \"is_a_variable t \\<or> is_a_constant t\"\n  shows \"pos_of t = { Nil }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pos_of t = {[]}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. pos_of t \\<subseteq> {[]}\n 2. {[]} \\<subseteq> pos_of t", "show \"pos_of t \\<subseteq> { Nil }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pos_of t \\<subseteq> {[]}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> pos_of t \\<Longrightarrow> x \\<in> {[]}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> pos_of t \\<Longrightarrow> x \\<in> {[]}", "assume \"x \\<in> pos_of t\""], ["proof (state)\nthis:\n  x \\<in> pos_of t\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> pos_of t \\<Longrightarrow> x \\<in> {[]}", "then"], ["proof (chain)\npicking this:\n  x \\<in> pos_of t", "have \"position_in x t\""], ["proof (prove)\nusing this:\n  x \\<in> pos_of t\n\ngoal (1 subgoal):\n 1. position_in x t", "by auto"], ["proof (state)\nthis:\n  position_in x t\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> pos_of t \\<Longrightarrow> x \\<in> {[]}", "then"], ["proof (chain)\npicking this:\n  position_in x t", "have \"\\<exists>s. (subterm t x s)\""], ["proof (prove)\nusing this:\n  position_in x t\n\ngoal (1 subgoal):\n 1. \\<exists>s. subterm t x s", "unfolding position_in_def"], ["proof (prove)\nusing this:\n  Ex (subterm t x)\n\ngoal (1 subgoal):\n 1. \\<exists>s. subterm t x s", "by auto"], ["proof (state)\nthis:\n  \\<exists>s. subterm t x s\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> pos_of t \\<Longrightarrow> x \\<in> {[]}", "from this and assms"], ["proof (chain)\npicking this:\n  \\<exists>s. subterm t x s\n  is_a_variable t \\<or> is_a_constant t", "have \"x = Nil\""], ["proof (prove)\nusing this:\n  \\<exists>s. subterm t x s\n  is_a_variable t \\<or> is_a_constant t\n\ngoal (1 subgoal):\n 1. x = []", "by (metis is_a_constant.simps(3) is_a_variable.simps(3) subterm.elims(2))"], ["proof (state)\nthis:\n  x = []\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> pos_of t \\<Longrightarrow> x \\<in> {[]}", "thus \"x \\<in> { Nil }\""], ["proof (prove)\nusing this:\n  x = []\n\ngoal (1 subgoal):\n 1. x \\<in> {[]}", "by auto"], ["proof (state)\nthis:\n  x \\<in> {[]}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pos_of t \\<subseteq> {[]}\n\ngoal (1 subgoal):\n 1. {[]} \\<subseteq> pos_of t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. {[]} \\<subseteq> pos_of t", "show \"{ Nil } \\<subseteq> pos_of t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {[]} \\<subseteq> pos_of t", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> {[]} \\<Longrightarrow> x \\<in> pos_of t", "fix x :: \"indices list\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> {[]} \\<Longrightarrow> x \\<in> pos_of t", "assume \"x \\<in> { Nil }\""], ["proof (state)\nthis:\n  x \\<in> {[]}\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> {[]} \\<Longrightarrow> x \\<in> pos_of t", "then"], ["proof (chain)\npicking this:\n  x \\<in> {[]}", "show \"x \\<in> pos_of t\""], ["proof (prove)\nusing this:\n  x \\<in> {[]}\n\ngoal (1 subgoal):\n 1. x \\<in> pos_of t", "using root_position"], ["proof (prove)\nusing this:\n  x \\<in> {[]}\n  [] \\<in> pos_of ?t\n\ngoal (1 subgoal):\n 1. x \\<in> pos_of t", "by auto"], ["proof (state)\nthis:\n  x \\<in> pos_of t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {[]} \\<subseteq> pos_of t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subterm_of_a_subterm_is_a_subterm :\n  assumes \"subterm u q v\"\n  shows \"\\<And> t. subterm t p u \\<Longrightarrow> subterm t (append p q) v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t. subterm t p u \\<Longrightarrow> subterm t (p @ q) v", "proof (induction p)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t. subterm t [] u \\<Longrightarrow> subterm t ([] @ q) v\n 2. \\<And>a p t.\n       \\<lbrakk>\\<And>t.\n                   subterm t p u \\<Longrightarrow> subterm t (p @ q) v;\n        subterm t (a # p) u\\<rbrakk>\n       \\<Longrightarrow> subterm t ((a # p) @ q) v", "case Nil"], ["proof (state)\nthis:\n  subterm t [] u\n\ngoal (2 subgoals):\n 1. \\<And>t. subterm t [] u \\<Longrightarrow> subterm t ([] @ q) v\n 2. \\<And>a p t.\n       \\<lbrakk>\\<And>t.\n                   subterm t p u \\<Longrightarrow> subterm t (p @ q) v;\n        subterm t (a # p) u\\<rbrakk>\n       \\<Longrightarrow> subterm t ((a # p) @ q) v", "show \"?case\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subterm t ([] @ q) v", "using Nil.prems assms"], ["proof (prove)\nusing this:\n  subterm t [] u\n  subterm u q v\n\ngoal (1 subgoal):\n 1. subterm t ([] @ q) v", "by auto"], ["proof (state)\nthis:\n  subterm t ([] @ q) v\n\ngoal (1 subgoal):\n 1. \\<And>a p t.\n       \\<lbrakk>\\<And>t.\n                   subterm t p u \\<Longrightarrow> subterm t (p @ q) v;\n        subterm t (a # p) u\\<rbrakk>\n       \\<Longrightarrow> subterm t ((a # p) @ q) v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a p t.\n       \\<lbrakk>\\<And>t.\n                   subterm t p u \\<Longrightarrow> subterm t (p @ q) v;\n        subterm t (a # p) u\\<rbrakk>\n       \\<Longrightarrow> subterm t ((a # p) @ q) v", "case (Cons i p')"], ["proof (state)\nthis:\n  subterm ?t p' u \\<Longrightarrow> subterm ?t (p' @ q) v\n  subterm t (i # p') u\n\ngoal (1 subgoal):\n 1. \\<And>a p t.\n       \\<lbrakk>\\<And>t.\n                   subterm t p u \\<Longrightarrow> subterm t (p @ q) v;\n        subterm t (a # p) u\\<rbrakk>\n       \\<Longrightarrow> subterm t ((a # p) @ q) v", "from \\<open>subterm t (Cons i p') u\\<close>"], ["proof (chain)\npicking this:\n  subterm t (i # p') u", "obtain t1 t2 where \"t = (Comb t1 t2)\""], ["proof (prove)\nusing this:\n  subterm t (i # p') u\n\ngoal (1 subgoal):\n 1. (\\<And>t1 t2.\n        t = t1 \\<cdot> t2 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using subterm.elims(2)"], ["proof (prove)\nusing this:\n  subterm t (i # p') u\n  \\<lbrakk>subterm ?x ?xa ?xb;\n   \\<And>T S.\n      \\<lbrakk>?x = T; ?xa = []; ?xb = S; T = S\\<rbrakk>\n      \\<Longrightarrow> ?P;\n   \\<And>x y next S.\n      \\<lbrakk>?x = x \\<cdot> y; ?xa = indices.Left # next; ?xb = S;\n       subterm x next S\\<rbrakk>\n      \\<Longrightarrow> ?P;\n   \\<And>x y next S.\n      \\<lbrakk>?x = x \\<cdot> y; ?xa = indices.Right # next; ?xb = S;\n       subterm y next S\\<rbrakk>\n      \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>t1 t2.\n        t = t1 \\<cdot> t2 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  t = t1 \\<cdot> t2\n\ngoal (1 subgoal):\n 1. \\<And>a p t.\n       \\<lbrakk>\\<And>t.\n                   subterm t p u \\<Longrightarrow> subterm t (p @ q) v;\n        subterm t (a # p) u\\<rbrakk>\n       \\<Longrightarrow> subterm t ((a # p) @ q) v", "have \"i = Right \\<or> i = Left\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i = indices.Right \\<or> i = indices.Left", "using indices.exhaust"], ["proof (prove)\nusing this:\n  \\<lbrakk>?y = indices.Left \\<Longrightarrow> ?P;\n   ?y = indices.Right \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. i = indices.Right \\<or> i = indices.Left", "by auto"], ["proof (state)\nthis:\n  i = indices.Right \\<or> i = indices.Left\n\ngoal (1 subgoal):\n 1. \\<And>a p t.\n       \\<lbrakk>\\<And>t.\n                   subterm t p u \\<Longrightarrow> subterm t (p @ q) v;\n        subterm t (a # p) u\\<rbrakk>\n       \\<Longrightarrow> subterm t ((a # p) @ q) v", "then"], ["proof (chain)\npicking this:\n  i = indices.Right \\<or> i = indices.Left", "show ?case"], ["proof (prove)\nusing this:\n  i = indices.Right \\<or> i = indices.Left\n\ngoal (1 subgoal):\n 1. subterm t ((i # p') @ q) v", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. i = indices.Right \\<Longrightarrow> subterm t ((i # p') @ q) v\n 2. i = indices.Left \\<Longrightarrow> subterm t ((i # p') @ q) v", "assume \"i = Right\""], ["proof (state)\nthis:\n  i = indices.Right\n\ngoal (2 subgoals):\n 1. i = indices.Right \\<Longrightarrow> subterm t ((i # p') @ q) v\n 2. i = indices.Left \\<Longrightarrow> subterm t ((i # p') @ q) v", "from this and \\<open>subterm t (Cons i p') u\\<close> and \\<open>t = (Comb t1 t2)\\<close>"], ["proof (chain)\npicking this:\n  i = indices.Right\n  subterm t (i # p') u\n  t = t1 \\<cdot> t2", "have \"subterm t2 p' u\""], ["proof (prove)\nusing this:\n  i = indices.Right\n  subterm t (i # p') u\n  t = t1 \\<cdot> t2\n\ngoal (1 subgoal):\n 1. subterm t2 p' u", "by auto"], ["proof (state)\nthis:\n  subterm t2 p' u\n\ngoal (2 subgoals):\n 1. i = indices.Right \\<Longrightarrow> subterm t ((i # p') @ q) v\n 2. i = indices.Left \\<Longrightarrow> subterm t ((i # p') @ q) v", "from this"], ["proof (chain)\npicking this:\n  subterm t2 p' u", "have \"subterm t2 (append p' q) v\""], ["proof (prove)\nusing this:\n  subterm t2 p' u\n\ngoal (1 subgoal):\n 1. subterm t2 (p' @ q) v", "by (simp add: Cons.IH)"], ["proof (state)\nthis:\n  subterm t2 (p' @ q) v\n\ngoal (2 subgoals):\n 1. i = indices.Right \\<Longrightarrow> subterm t ((i # p') @ q) v\n 2. i = indices.Left \\<Longrightarrow> subterm t ((i # p') @ q) v", "from this and  \\<open>t = (Comb t1 t2)\\<close> and \\<open>i = Right\\<close>"], ["proof (chain)\npicking this:\n  subterm t2 (p' @ q) v\n  t = t1 \\<cdot> t2\n  i = indices.Right", "show \"subterm t  (append (Cons i p') q) v\""], ["proof (prove)\nusing this:\n  subterm t2 (p' @ q) v\n  t = t1 \\<cdot> t2\n  i = indices.Right\n\ngoal (1 subgoal):\n 1. subterm t ((i # p') @ q) v", "by simp"], ["proof (state)\nthis:\n  subterm t ((i # p') @ q) v\n\ngoal (1 subgoal):\n 1. i = indices.Left \\<Longrightarrow> subterm t ((i # p') @ q) v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i = indices.Left \\<Longrightarrow> subterm t ((i # p') @ q) v", "assume \"i = Left\""], ["proof (state)\nthis:\n  i = indices.Left\n\ngoal (1 subgoal):\n 1. i = indices.Left \\<Longrightarrow> subterm t ((i # p') @ q) v", "from this and \\<open>subterm t (Cons i p') u\\<close> and \\<open>t = (Comb t1 t2)\\<close>"], ["proof (chain)\npicking this:\n  i = indices.Left\n  subterm t (i # p') u\n  t = t1 \\<cdot> t2", "have \"subterm t1 p' u\""], ["proof (prove)\nusing this:\n  i = indices.Left\n  subterm t (i # p') u\n  t = t1 \\<cdot> t2\n\ngoal (1 subgoal):\n 1. subterm t1 p' u", "by auto"], ["proof (state)\nthis:\n  subterm t1 p' u\n\ngoal (1 subgoal):\n 1. i = indices.Left \\<Longrightarrow> subterm t ((i # p') @ q) v", "from this"], ["proof (chain)\npicking this:\n  subterm t1 p' u", "have \"subterm t1 (append p' q) v\""], ["proof (prove)\nusing this:\n  subterm t1 p' u\n\ngoal (1 subgoal):\n 1. subterm t1 (p' @ q) v", "by (simp add: Cons.IH)"], ["proof (state)\nthis:\n  subterm t1 (p' @ q) v\n\ngoal (1 subgoal):\n 1. i = indices.Left \\<Longrightarrow> subterm t ((i # p') @ q) v", "from this and  \\<open>t = (Comb t1 t2)\\<close> and \\<open>i = Left\\<close>"], ["proof (chain)\npicking this:\n  subterm t1 (p' @ q) v\n  t = t1 \\<cdot> t2\n  i = indices.Left", "show \"subterm t  (append (Cons i p') q) v\""], ["proof (prove)\nusing this:\n  subterm t1 (p' @ q) v\n  t = t1 \\<cdot> t2\n  i = indices.Left\n\ngoal (1 subgoal):\n 1. subterm t ((i # p') @ q) v", "by simp"], ["proof (state)\nthis:\n  subterm t ((i # p') @ q) v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  subterm t ((i # p') @ q) v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma occur_in_subterm:\n  assumes \"occurs_in u t\"\n  assumes \"occurs_in t s\"\n  shows \"occurs_in u s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. occurs_in u s", "by (meson assms(1) assms(2) occurs_in_def subterm_of_a_subterm_is_a_subterm)"], ["", "lemma vars_of_subterm :\n  assumes \"x \\<in> vars_of s\"\n  shows \"\\<And> t. subterm t p s \\<Longrightarrow> x \\<in> vars_of t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t. subterm t p s \\<Longrightarrow> x \\<in> vars_of t", "proof (induction p)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t. subterm t [] s \\<Longrightarrow> x \\<in> vars_of t\n 2. \\<And>a p t.\n       \\<lbrakk>\\<And>t. subterm t p s \\<Longrightarrow> x \\<in> vars_of t;\n        subterm t (a # p) s\\<rbrakk>\n       \\<Longrightarrow> x \\<in> vars_of t", "case Nil"], ["proof (state)\nthis:\n  subterm t [] s\n\ngoal (2 subgoals):\n 1. \\<And>t. subterm t [] s \\<Longrightarrow> x \\<in> vars_of t\n 2. \\<And>a p t.\n       \\<lbrakk>\\<And>t. subterm t p s \\<Longrightarrow> x \\<in> vars_of t;\n        subterm t (a # p) s\\<rbrakk>\n       \\<Longrightarrow> x \\<in> vars_of t", "show \"?case\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> vars_of t", "using Nil.prems assms"], ["proof (prove)\nusing this:\n  subterm t [] s\n  x \\<in> vars_of s\n\ngoal (1 subgoal):\n 1. x \\<in> vars_of t", "by auto"], ["proof (state)\nthis:\n  x \\<in> vars_of t\n\ngoal (1 subgoal):\n 1. \\<And>a p t.\n       \\<lbrakk>\\<And>t. subterm t p s \\<Longrightarrow> x \\<in> vars_of t;\n        subterm t (a # p) s\\<rbrakk>\n       \\<Longrightarrow> x \\<in> vars_of t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a p t.\n       \\<lbrakk>\\<And>t. subterm t p s \\<Longrightarrow> x \\<in> vars_of t;\n        subterm t (a # p) s\\<rbrakk>\n       \\<Longrightarrow> x \\<in> vars_of t", "case (Cons i p')"], ["proof (state)\nthis:\n  subterm ?t p' s \\<Longrightarrow> x \\<in> vars_of ?t\n  subterm t (i # p') s\n\ngoal (1 subgoal):\n 1. \\<And>a p t.\n       \\<lbrakk>\\<And>t. subterm t p s \\<Longrightarrow> x \\<in> vars_of t;\n        subterm t (a # p) s\\<rbrakk>\n       \\<Longrightarrow> x \\<in> vars_of t", "from \\<open>subterm t (Cons i p') s\\<close>"], ["proof (chain)\npicking this:\n  subterm t (i # p') s", "obtain t1 t2 where \"t = (Comb t1 t2)\""], ["proof (prove)\nusing this:\n  subterm t (i # p') s\n\ngoal (1 subgoal):\n 1. (\\<And>t1 t2.\n        t = t1 \\<cdot> t2 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using subterm.elims(2)"], ["proof (prove)\nusing this:\n  subterm t (i # p') s\n  \\<lbrakk>subterm ?x ?xa ?xb;\n   \\<And>T S.\n      \\<lbrakk>?x = T; ?xa = []; ?xb = S; T = S\\<rbrakk>\n      \\<Longrightarrow> ?P;\n   \\<And>x y next S.\n      \\<lbrakk>?x = x \\<cdot> y; ?xa = indices.Left # next; ?xb = S;\n       subterm x next S\\<rbrakk>\n      \\<Longrightarrow> ?P;\n   \\<And>x y next S.\n      \\<lbrakk>?x = x \\<cdot> y; ?xa = indices.Right # next; ?xb = S;\n       subterm y next S\\<rbrakk>\n      \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>t1 t2.\n        t = t1 \\<cdot> t2 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  t = t1 \\<cdot> t2\n\ngoal (1 subgoal):\n 1. \\<And>a p t.\n       \\<lbrakk>\\<And>t. subterm t p s \\<Longrightarrow> x \\<in> vars_of t;\n        subterm t (a # p) s\\<rbrakk>\n       \\<Longrightarrow> x \\<in> vars_of t", "have \"i = Right \\<or> i = Left\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i = indices.Right \\<or> i = indices.Left", "using indices.exhaust"], ["proof (prove)\nusing this:\n  \\<lbrakk>?y = indices.Left \\<Longrightarrow> ?P;\n   ?y = indices.Right \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. i = indices.Right \\<or> i = indices.Left", "by auto"], ["proof (state)\nthis:\n  i = indices.Right \\<or> i = indices.Left\n\ngoal (1 subgoal):\n 1. \\<And>a p t.\n       \\<lbrakk>\\<And>t. subterm t p s \\<Longrightarrow> x \\<in> vars_of t;\n        subterm t (a # p) s\\<rbrakk>\n       \\<Longrightarrow> x \\<in> vars_of t", "then"], ["proof (chain)\npicking this:\n  i = indices.Right \\<or> i = indices.Left", "show ?case"], ["proof (prove)\nusing this:\n  i = indices.Right \\<or> i = indices.Left\n\ngoal (1 subgoal):\n 1. x \\<in> vars_of t", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. i = indices.Right \\<Longrightarrow> x \\<in> vars_of t\n 2. i = indices.Left \\<Longrightarrow> x \\<in> vars_of t", "assume \"i = Right\""], ["proof (state)\nthis:\n  i = indices.Right\n\ngoal (2 subgoals):\n 1. i = indices.Right \\<Longrightarrow> x \\<in> vars_of t\n 2. i = indices.Left \\<Longrightarrow> x \\<in> vars_of t", "from this and \\<open>subterm t (Cons i p') s\\<close> and \\<open>t = (Comb t1 t2)\\<close>"], ["proof (chain)\npicking this:\n  i = indices.Right\n  subterm t (i # p') s\n  t = t1 \\<cdot> t2", "have \"subterm t2 p' s\""], ["proof (prove)\nusing this:\n  i = indices.Right\n  subterm t (i # p') s\n  t = t1 \\<cdot> t2\n\ngoal (1 subgoal):\n 1. subterm t2 p' s", "by auto"], ["proof (state)\nthis:\n  subterm t2 p' s\n\ngoal (2 subgoals):\n 1. i = indices.Right \\<Longrightarrow> x \\<in> vars_of t\n 2. i = indices.Left \\<Longrightarrow> x \\<in> vars_of t", "from this"], ["proof (chain)\npicking this:\n  subterm t2 p' s", "have \"x \\<in> vars_of t2\""], ["proof (prove)\nusing this:\n  subterm t2 p' s\n\ngoal (1 subgoal):\n 1. x \\<in> vars_of t2", "by (simp add: Cons.IH)"], ["proof (state)\nthis:\n  x \\<in> vars_of t2\n\ngoal (2 subgoals):\n 1. i = indices.Right \\<Longrightarrow> x \\<in> vars_of t\n 2. i = indices.Left \\<Longrightarrow> x \\<in> vars_of t", "from this and  \\<open>t = (Comb t1 t2)\\<close> and \\<open>i = Right\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> vars_of t2\n  t = t1 \\<cdot> t2\n  i = indices.Right", "show ?case"], ["proof (prove)\nusing this:\n  x \\<in> vars_of t2\n  t = t1 \\<cdot> t2\n  i = indices.Right\n\ngoal (1 subgoal):\n 1. x \\<in> vars_of t", "by simp"], ["proof (state)\nthis:\n  x \\<in> vars_of t\n\ngoal (1 subgoal):\n 1. i = indices.Left \\<Longrightarrow> x \\<in> vars_of t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i = indices.Left \\<Longrightarrow> x \\<in> vars_of t", "assume \"i = Left\""], ["proof (state)\nthis:\n  i = indices.Left\n\ngoal (1 subgoal):\n 1. i = indices.Left \\<Longrightarrow> x \\<in> vars_of t", "from this and \\<open>subterm t (Cons i p') s\\<close> and \\<open>t = (Comb t1 t2)\\<close>"], ["proof (chain)\npicking this:\n  i = indices.Left\n  subterm t (i # p') s\n  t = t1 \\<cdot> t2", "have \"subterm t1 p' s\""], ["proof (prove)\nusing this:\n  i = indices.Left\n  subterm t (i # p') s\n  t = t1 \\<cdot> t2\n\ngoal (1 subgoal):\n 1. subterm t1 p' s", "by auto"], ["proof (state)\nthis:\n  subterm t1 p' s\n\ngoal (1 subgoal):\n 1. i = indices.Left \\<Longrightarrow> x \\<in> vars_of t", "from this"], ["proof (chain)\npicking this:\n  subterm t1 p' s", "have \"x \\<in> vars_of t1\""], ["proof (prove)\nusing this:\n  subterm t1 p' s\n\ngoal (1 subgoal):\n 1. x \\<in> vars_of t1", "by (simp add: Cons.IH)"], ["proof (state)\nthis:\n  x \\<in> vars_of t1\n\ngoal (1 subgoal):\n 1. i = indices.Left \\<Longrightarrow> x \\<in> vars_of t", "from this and  \\<open>t = (Comb t1 t2)\\<close> and \\<open>i = Left\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> vars_of t1\n  t = t1 \\<cdot> t2\n  i = indices.Left", "show ?case"], ["proof (prove)\nusing this:\n  x \\<in> vars_of t1\n  t = t1 \\<cdot> t2\n  i = indices.Left\n\ngoal (1 subgoal):\n 1. x \\<in> vars_of t", "by simp"], ["proof (state)\nthis:\n  x \\<in> vars_of t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> vars_of t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vars_subterm :\n  assumes \"subterm t p s\"\n  shows \"vars_of s \\<subseteq> vars_of t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars_of s \\<subseteq> vars_of t", "by (meson assms subsetI vars_of_subterm)"], ["", "lemma vars_subterms_of :\n  assumes \"s \\<in> subterms_of t\"\n  shows \"vars_of s \\<subseteq> vars_of t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars_of s \\<subseteq> vars_of t", "using assms occurs_in_def vars_subterm"], ["proof (prove)\nusing this:\n  s \\<in> subterms_of t\n  occurs_in ?t ?s = (\\<exists>p. subterm ?s p ?t)\n  subterm ?t ?p ?s \\<Longrightarrow> vars_of ?s \\<subseteq> vars_of ?t\n\ngoal (1 subgoal):\n 1. vars_of s \\<subseteq> vars_of t", "by fastforce"], ["", "lemma subterms_of_a_non_atomic_term:\n  shows \"subterms_of (Comb t1 t2) = (subterms_of t1) \\<union> (subterms_of t2) \\<union> { (Comb t1 t2) }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subterms_of (t1 \\<cdot> t2) =\n    subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. subterms_of (t1 \\<cdot> t2)\n    \\<subseteq> subterms_of t1 \\<union> subterms_of t2 \\<union>\n                {t1 \\<cdot> t2}\n 2. subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}\n    \\<subseteq> subterms_of (t1 \\<cdot> t2)", "show \"subterms_of (Comb t1 t2) \\<subseteq> (subterms_of t1) \\<union> (subterms_of t2) \\<union> { (Comb t1 t2) }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subterms_of (t1 \\<cdot> t2)\n    \\<subseteq> subterms_of t1 \\<union> subterms_of t2 \\<union>\n                {t1 \\<cdot> t2}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> subterms_of (t1 \\<cdot> t2) \\<Longrightarrow>\n       x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union>\n               {t1 \\<cdot> t2}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> subterms_of (t1 \\<cdot> t2) \\<Longrightarrow>\n       x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union>\n               {t1 \\<cdot> t2}", "assume \"x \\<in> (subterms_of (Comb t1 t2))\""], ["proof (state)\nthis:\n  x \\<in> subterms_of (t1 \\<cdot> t2)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> subterms_of (t1 \\<cdot> t2) \\<Longrightarrow>\n       x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union>\n               {t1 \\<cdot> t2}", "then"], ["proof (chain)\npicking this:\n  x \\<in> subterms_of (t1 \\<cdot> t2)", "have \"occurs_in x (Comb t1 t2)\""], ["proof (prove)\nusing this:\n  x \\<in> subterms_of (t1 \\<cdot> t2)\n\ngoal (1 subgoal):\n 1. occurs_in x (t1 \\<cdot> t2)", "by auto"], ["proof (state)\nthis:\n  occurs_in x (t1 \\<cdot> t2)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> subterms_of (t1 \\<cdot> t2) \\<Longrightarrow>\n       x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union>\n               {t1 \\<cdot> t2}", "then"], ["proof (chain)\npicking this:\n  occurs_in x (t1 \\<cdot> t2)", "obtain p where \"subterm (Comb t1 t2) p x\""], ["proof (prove)\nusing this:\n  occurs_in x (t1 \\<cdot> t2)\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        subterm (t1 \\<cdot> t2) p x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding occurs_in_def"], ["proof (prove)\nusing this:\n  \\<exists>p. subterm (t1 \\<cdot> t2) p x\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        subterm (t1 \\<cdot> t2) p x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  subterm (t1 \\<cdot> t2) p x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> subterms_of (t1 \\<cdot> t2) \\<Longrightarrow>\n       x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union>\n               {t1 \\<cdot> t2}", "have \"p = [] \\<or> (\\<exists>i q. p = i #q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p = [] \\<or> (\\<exists>i q. p = i # q)", "using neq_Nil_conv"], ["proof (prove)\nusing this:\n  (?xs \\<noteq> []) = (\\<exists>y ys. ?xs = y # ys)\n\ngoal (1 subgoal):\n 1. p = [] \\<or> (\\<exists>i q. p = i # q)", "by blast"], ["proof (state)\nthis:\n  p = [] \\<or> (\\<exists>i q. p = i # q)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> subterms_of (t1 \\<cdot> t2) \\<Longrightarrow>\n       x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union>\n               {t1 \\<cdot> t2}", "then"], ["proof (chain)\npicking this:\n  p = [] \\<or> (\\<exists>i q. p = i # q)", "show \"x \\<in> (subterms_of t1) \\<union> (subterms_of t2) \\<union> { (Comb t1 t2) }\""], ["proof (prove)\nusing this:\n  p = [] \\<or> (\\<exists>i q. p = i # q)\n\ngoal (1 subgoal):\n 1. x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. p = [] \\<Longrightarrow>\n    x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}\n 2. \\<exists>i q. p = i # q \\<Longrightarrow>\n    x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}", "assume \"p = []\""], ["proof (state)\nthis:\n  p = []\n\ngoal (2 subgoals):\n 1. p = [] \\<Longrightarrow>\n    x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}\n 2. \\<exists>i q. p = i # q \\<Longrightarrow>\n    x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}", "from this and \\<open>subterm (Comb t1 t2) p x\\<close>"], ["proof (chain)\npicking this:\n  p = []\n  subterm (t1 \\<cdot> t2) p x", "show ?thesis"], ["proof (prove)\nusing this:\n  p = []\n  subterm (t1 \\<cdot> t2) p x\n\ngoal (1 subgoal):\n 1. x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}", "by auto"], ["proof (state)\nthis:\n  x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}\n\ngoal (1 subgoal):\n 1. \\<exists>i q. p = i # q \\<Longrightarrow>\n    x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i q. p = i # q \\<Longrightarrow>\n    x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}", "assume \"\\<exists>i q. p = i #q\""], ["proof (state)\nthis:\n  \\<exists>i q. p = i # q\n\ngoal (1 subgoal):\n 1. \\<exists>i q. p = i # q \\<Longrightarrow>\n    x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}", "then"], ["proof (chain)\npicking this:\n  \\<exists>i q. p = i # q", "obtain i q where \"p = i # q\""], ["proof (prove)\nusing this:\n  \\<exists>i q. p = i # q\n\ngoal (1 subgoal):\n 1. (\\<And>i q. p = i # q \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  p = i # q\n\ngoal (1 subgoal):\n 1. \\<exists>i q. p = i # q \\<Longrightarrow>\n    x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}", "have \"i = Left \\<or> i = Right\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i = indices.Left \\<or> i = indices.Right", "using indices.exhaust"], ["proof (prove)\nusing this:\n  \\<lbrakk>?y = indices.Left \\<Longrightarrow> ?P;\n   ?y = indices.Right \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. i = indices.Left \\<or> i = indices.Right", "by blast"], ["proof (state)\nthis:\n  i = indices.Left \\<or> i = indices.Right\n\ngoal (1 subgoal):\n 1. \\<exists>i q. p = i # q \\<Longrightarrow>\n    x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}", "then"], ["proof (chain)\npicking this:\n  i = indices.Left \\<or> i = indices.Right", "show \"x \\<in> (subterms_of t1) \\<union> (subterms_of t2) \\<union> { (Comb t1 t2) }\""], ["proof (prove)\nusing this:\n  i = indices.Left \\<or> i = indices.Right\n\ngoal (1 subgoal):\n 1. x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. i = indices.Left \\<Longrightarrow>\n    x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}\n 2. i = indices.Right \\<Longrightarrow>\n    x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}", "assume \"i = Left\""], ["proof (state)\nthis:\n  i = indices.Left\n\ngoal (2 subgoals):\n 1. i = indices.Left \\<Longrightarrow>\n    x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}\n 2. i = indices.Right \\<Longrightarrow>\n    x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}", "from this and \\<open>p = i # q\\<close> and \\<open>subterm (Comb t1 t2) p x\\<close>"], ["proof (chain)\npicking this:\n  i = indices.Left\n  p = i # q\n  subterm (t1 \\<cdot> t2) p x", "have \"subterm t1 q x\""], ["proof (prove)\nusing this:\n  i = indices.Left\n  p = i # q\n  subterm (t1 \\<cdot> t2) p x\n\ngoal (1 subgoal):\n 1. subterm t1 q x", "by auto"], ["proof (state)\nthis:\n  subterm t1 q x\n\ngoal (2 subgoals):\n 1. i = indices.Left \\<Longrightarrow>\n    x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}\n 2. i = indices.Right \\<Longrightarrow>\n    x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}", "then"], ["proof (chain)\npicking this:\n  subterm t1 q x", "have \"occurs_in x t1\""], ["proof (prove)\nusing this:\n  subterm t1 q x\n\ngoal (1 subgoal):\n 1. occurs_in x t1", "unfolding occurs_in_def"], ["proof (prove)\nusing this:\n  subterm t1 q x\n\ngoal (1 subgoal):\n 1. \\<exists>p. subterm t1 p x", "by auto"], ["proof (state)\nthis:\n  occurs_in x t1\n\ngoal (2 subgoals):\n 1. i = indices.Left \\<Longrightarrow>\n    x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}\n 2. i = indices.Right \\<Longrightarrow>\n    x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}", "then"], ["proof (chain)\npicking this:\n  occurs_in x t1", "show \"x \\<in> (subterms_of t1) \\<union> (subterms_of t2) \\<union> { (Comb t1 t2) }\""], ["proof (prove)\nusing this:\n  occurs_in x t1\n\ngoal (1 subgoal):\n 1. x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}", "by auto"], ["proof (state)\nthis:\n  x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}\n\ngoal (1 subgoal):\n 1. i = indices.Right \\<Longrightarrow>\n    x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i = indices.Right \\<Longrightarrow>\n    x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}", "assume \"i = Right\""], ["proof (state)\nthis:\n  i = indices.Right\n\ngoal (1 subgoal):\n 1. i = indices.Right \\<Longrightarrow>\n    x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}", "from this and \\<open>p = i # q\\<close> and \\<open>subterm (Comb t1 t2) p x\\<close>"], ["proof (chain)\npicking this:\n  i = indices.Right\n  p = i # q\n  subterm (t1 \\<cdot> t2) p x", "have \"subterm t2 q x\""], ["proof (prove)\nusing this:\n  i = indices.Right\n  p = i # q\n  subterm (t1 \\<cdot> t2) p x\n\ngoal (1 subgoal):\n 1. subterm t2 q x", "by auto"], ["proof (state)\nthis:\n  subterm t2 q x\n\ngoal (1 subgoal):\n 1. i = indices.Right \\<Longrightarrow>\n    x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}", "then"], ["proof (chain)\npicking this:\n  subterm t2 q x", "have \"occurs_in x t2\""], ["proof (prove)\nusing this:\n  subterm t2 q x\n\ngoal (1 subgoal):\n 1. occurs_in x t2", "unfolding occurs_in_def"], ["proof (prove)\nusing this:\n  subterm t2 q x\n\ngoal (1 subgoal):\n 1. \\<exists>p. subterm t2 p x", "by auto"], ["proof (state)\nthis:\n  occurs_in x t2\n\ngoal (1 subgoal):\n 1. i = indices.Right \\<Longrightarrow>\n    x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}", "then"], ["proof (chain)\npicking this:\n  occurs_in x t2", "show \"x \\<in> (subterms_of t1) \\<union> (subterms_of t2) \\<union> { (Comb t1 t2) }\""], ["proof (prove)\nusing this:\n  occurs_in x t2\n\ngoal (1 subgoal):\n 1. x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}", "by auto"], ["proof (state)\nthis:\n  x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  subterms_of (t1 \\<cdot> t2)\n  \\<subseteq> subterms_of t1 \\<union> subterms_of t2 \\<union>\n              {t1 \\<cdot> t2}\n\ngoal (1 subgoal):\n 1. subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}\n    \\<subseteq> subterms_of (t1 \\<cdot> t2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}\n    \\<subseteq> subterms_of (t1 \\<cdot> t2)", "show \"(subterms_of t1) \\<union> (subterms_of t2) \\<union> { (Comb t1 t2) } \\<subseteq> subterms_of (Comb t1 t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}\n    \\<subseteq> subterms_of (t1 \\<cdot> t2)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union>\n               {t1 \\<cdot> t2} \\<Longrightarrow>\n       x \\<in> subterms_of (t1 \\<cdot> t2)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union>\n               {t1 \\<cdot> t2} \\<Longrightarrow>\n       x \\<in> subterms_of (t1 \\<cdot> t2)", "assume \"x \\<in> (subterms_of t1) \\<union> (subterms_of t2) \\<union> { (Comb t1 t2) }\""], ["proof (state)\nthis:\n  x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union>\n               {t1 \\<cdot> t2} \\<Longrightarrow>\n       x \\<in> subterms_of (t1 \\<cdot> t2)", "then"], ["proof (chain)\npicking this:\n  x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}", "have \"x \\<in> (subterms_of t1) \\<or> (x \\<in> (subterms_of t2) \\<or> x = (Comb t1 t2))\""], ["proof (prove)\nusing this:\n  x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}\n\ngoal (1 subgoal):\n 1. x \\<in> subterms_of t1 \\<or>\n    x \\<in> subterms_of t2 \\<or> x = t1 \\<cdot> t2", "by auto"], ["proof (state)\nthis:\n  x \\<in> subterms_of t1 \\<or>\n  x \\<in> subterms_of t2 \\<or> x = t1 \\<cdot> t2\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> subterms_of t1 \\<union> subterms_of t2 \\<union>\n               {t1 \\<cdot> t2} \\<Longrightarrow>\n       x \\<in> subterms_of (t1 \\<cdot> t2)", "thus \"x \\<in> subterms_of (Comb t1 t2)\""], ["proof (prove)\nusing this:\n  x \\<in> subterms_of t1 \\<or>\n  x \\<in> subterms_of t2 \\<or> x = t1 \\<cdot> t2\n\ngoal (1 subgoal):\n 1. x \\<in> subterms_of (t1 \\<cdot> t2)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> subterms_of t1 \\<Longrightarrow>\n    x \\<in> subterms_of (t1 \\<cdot> t2)\n 2. x \\<in> subterms_of t2 \\<or> x = t1 \\<cdot> t2 \\<Longrightarrow>\n    x \\<in> subterms_of (t1 \\<cdot> t2)", "assume \"x \\<in> (subterms_of t1)\""], ["proof (state)\nthis:\n  x \\<in> subterms_of t1\n\ngoal (2 subgoals):\n 1. x \\<in> subterms_of t1 \\<Longrightarrow>\n    x \\<in> subterms_of (t1 \\<cdot> t2)\n 2. x \\<in> subterms_of t2 \\<or> x = t1 \\<cdot> t2 \\<Longrightarrow>\n    x \\<in> subterms_of (t1 \\<cdot> t2)", "then"], ["proof (chain)\npicking this:\n  x \\<in> subterms_of t1", "have \"occurs_in x t1\""], ["proof (prove)\nusing this:\n  x \\<in> subterms_of t1\n\ngoal (1 subgoal):\n 1. occurs_in x t1", "by auto"], ["proof (state)\nthis:\n  occurs_in x t1\n\ngoal (2 subgoals):\n 1. x \\<in> subterms_of t1 \\<Longrightarrow>\n    x \\<in> subterms_of (t1 \\<cdot> t2)\n 2. x \\<in> subterms_of t2 \\<or> x = t1 \\<cdot> t2 \\<Longrightarrow>\n    x \\<in> subterms_of (t1 \\<cdot> t2)", "then"], ["proof (chain)\npicking this:\n  occurs_in x t1", "obtain p where \"subterm t1 p x\""], ["proof (prove)\nusing this:\n  occurs_in x t1\n\ngoal (1 subgoal):\n 1. (\\<And>p. subterm t1 p x \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding occurs_in_def"], ["proof (prove)\nusing this:\n  \\<exists>p. subterm t1 p x\n\ngoal (1 subgoal):\n 1. (\\<And>p. subterm t1 p x \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  subterm t1 p x\n\ngoal (2 subgoals):\n 1. x \\<in> subterms_of t1 \\<Longrightarrow>\n    x \\<in> subterms_of (t1 \\<cdot> t2)\n 2. x \\<in> subterms_of t2 \\<or> x = t1 \\<cdot> t2 \\<Longrightarrow>\n    x \\<in> subterms_of (t1 \\<cdot> t2)", "then"], ["proof (chain)\npicking this:\n  subterm t1 p x", "have \"subterm (Comb t1 t2) (Left # p) x\""], ["proof (prove)\nusing this:\n  subterm t1 p x\n\ngoal (1 subgoal):\n 1. subterm (t1 \\<cdot> t2) (indices.Left # p) x", "by auto"], ["proof (state)\nthis:\n  subterm (t1 \\<cdot> t2) (indices.Left # p) x\n\ngoal (2 subgoals):\n 1. x \\<in> subterms_of t1 \\<Longrightarrow>\n    x \\<in> subterms_of (t1 \\<cdot> t2)\n 2. x \\<in> subterms_of t2 \\<or> x = t1 \\<cdot> t2 \\<Longrightarrow>\n    x \\<in> subterms_of (t1 \\<cdot> t2)", "then"], ["proof (chain)\npicking this:\n  subterm (t1 \\<cdot> t2) (indices.Left # p) x", "have \"occurs_in x (Comb t1 t2)\""], ["proof (prove)\nusing this:\n  subterm (t1 \\<cdot> t2) (indices.Left # p) x\n\ngoal (1 subgoal):\n 1. occurs_in x (t1 \\<cdot> t2)", "using occurs_in_def"], ["proof (prove)\nusing this:\n  subterm (t1 \\<cdot> t2) (indices.Left # p) x\n  occurs_in ?t ?s = (\\<exists>p. subterm ?s p ?t)\n\ngoal (1 subgoal):\n 1. occurs_in x (t1 \\<cdot> t2)", "by blast"], ["proof (state)\nthis:\n  occurs_in x (t1 \\<cdot> t2)\n\ngoal (2 subgoals):\n 1. x \\<in> subterms_of t1 \\<Longrightarrow>\n    x \\<in> subterms_of (t1 \\<cdot> t2)\n 2. x \\<in> subterms_of t2 \\<or> x = t1 \\<cdot> t2 \\<Longrightarrow>\n    x \\<in> subterms_of (t1 \\<cdot> t2)", "then"], ["proof (chain)\npicking this:\n  occurs_in x (t1 \\<cdot> t2)", "show \"x \\<in> subterms_of (Comb t1 t2)\""], ["proof (prove)\nusing this:\n  occurs_in x (t1 \\<cdot> t2)\n\ngoal (1 subgoal):\n 1. x \\<in> subterms_of (t1 \\<cdot> t2)", "by auto"], ["proof (state)\nthis:\n  x \\<in> subterms_of (t1 \\<cdot> t2)\n\ngoal (1 subgoal):\n 1. x \\<in> subterms_of t2 \\<or> x = t1 \\<cdot> t2 \\<Longrightarrow>\n    x \\<in> subterms_of (t1 \\<cdot> t2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> subterms_of t2 \\<or> x = t1 \\<cdot> t2 \\<Longrightarrow>\n    x \\<in> subterms_of (t1 \\<cdot> t2)", "assume \"(x \\<in> (subterms_of t2) \\<or> x = (Comb t1 t2))\""], ["proof (state)\nthis:\n  x \\<in> subterms_of t2 \\<or> x = t1 \\<cdot> t2\n\ngoal (1 subgoal):\n 1. x \\<in> subterms_of t2 \\<or> x = t1 \\<cdot> t2 \\<Longrightarrow>\n    x \\<in> subterms_of (t1 \\<cdot> t2)", "then"], ["proof (chain)\npicking this:\n  x \\<in> subterms_of t2 \\<or> x = t1 \\<cdot> t2", "show \"x \\<in> subterms_of (Comb t1 t2)\""], ["proof (prove)\nusing this:\n  x \\<in> subterms_of t2 \\<or> x = t1 \\<cdot> t2\n\ngoal (1 subgoal):\n 1. x \\<in> subterms_of (t1 \\<cdot> t2)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> subterms_of t2 \\<Longrightarrow>\n    x \\<in> subterms_of (t1 \\<cdot> t2)\n 2. x = t1 \\<cdot> t2 \\<Longrightarrow> x \\<in> subterms_of (t1 \\<cdot> t2)", "assume \"x \\<in> (subterms_of t2)\""], ["proof (state)\nthis:\n  x \\<in> subterms_of t2\n\ngoal (2 subgoals):\n 1. x \\<in> subterms_of t2 \\<Longrightarrow>\n    x \\<in> subterms_of (t1 \\<cdot> t2)\n 2. x = t1 \\<cdot> t2 \\<Longrightarrow> x \\<in> subterms_of (t1 \\<cdot> t2)", "then"], ["proof (chain)\npicking this:\n  x \\<in> subterms_of t2", "have \"occurs_in x t2\""], ["proof (prove)\nusing this:\n  x \\<in> subterms_of t2\n\ngoal (1 subgoal):\n 1. occurs_in x t2", "by auto"], ["proof (state)\nthis:\n  occurs_in x t2\n\ngoal (2 subgoals):\n 1. x \\<in> subterms_of t2 \\<Longrightarrow>\n    x \\<in> subterms_of (t1 \\<cdot> t2)\n 2. x = t1 \\<cdot> t2 \\<Longrightarrow> x \\<in> subterms_of (t1 \\<cdot> t2)", "then"], ["proof (chain)\npicking this:\n  occurs_in x t2", "obtain p where \"subterm t2 p x\""], ["proof (prove)\nusing this:\n  occurs_in x t2\n\ngoal (1 subgoal):\n 1. (\\<And>p. subterm t2 p x \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding occurs_in_def"], ["proof (prove)\nusing this:\n  \\<exists>p. subterm t2 p x\n\ngoal (1 subgoal):\n 1. (\\<And>p. subterm t2 p x \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  subterm t2 p x\n\ngoal (2 subgoals):\n 1. x \\<in> subterms_of t2 \\<Longrightarrow>\n    x \\<in> subterms_of (t1 \\<cdot> t2)\n 2. x = t1 \\<cdot> t2 \\<Longrightarrow> x \\<in> subterms_of (t1 \\<cdot> t2)", "then"], ["proof (chain)\npicking this:\n  subterm t2 p x", "have \"subterm (Comb t1 t2) (Right # p) x\""], ["proof (prove)\nusing this:\n  subterm t2 p x\n\ngoal (1 subgoal):\n 1. subterm (t1 \\<cdot> t2) (indices.Right # p) x", "by auto"], ["proof (state)\nthis:\n  subterm (t1 \\<cdot> t2) (indices.Right # p) x\n\ngoal (2 subgoals):\n 1. x \\<in> subterms_of t2 \\<Longrightarrow>\n    x \\<in> subterms_of (t1 \\<cdot> t2)\n 2. x = t1 \\<cdot> t2 \\<Longrightarrow> x \\<in> subterms_of (t1 \\<cdot> t2)", "then"], ["proof (chain)\npicking this:\n  subterm (t1 \\<cdot> t2) (indices.Right # p) x", "have \"occurs_in x (Comb t1 t2)\""], ["proof (prove)\nusing this:\n  subterm (t1 \\<cdot> t2) (indices.Right # p) x\n\ngoal (1 subgoal):\n 1. occurs_in x (t1 \\<cdot> t2)", "using occurs_in_def"], ["proof (prove)\nusing this:\n  subterm (t1 \\<cdot> t2) (indices.Right # p) x\n  occurs_in ?t ?s = (\\<exists>p. subterm ?s p ?t)\n\ngoal (1 subgoal):\n 1. occurs_in x (t1 \\<cdot> t2)", "by blast"], ["proof (state)\nthis:\n  occurs_in x (t1 \\<cdot> t2)\n\ngoal (2 subgoals):\n 1. x \\<in> subterms_of t2 \\<Longrightarrow>\n    x \\<in> subterms_of (t1 \\<cdot> t2)\n 2. x = t1 \\<cdot> t2 \\<Longrightarrow> x \\<in> subterms_of (t1 \\<cdot> t2)", "then"], ["proof (chain)\npicking this:\n  occurs_in x (t1 \\<cdot> t2)", "show \"x \\<in> subterms_of (Comb t1 t2)\""], ["proof (prove)\nusing this:\n  occurs_in x (t1 \\<cdot> t2)\n\ngoal (1 subgoal):\n 1. x \\<in> subterms_of (t1 \\<cdot> t2)", "by auto"], ["proof (state)\nthis:\n  x \\<in> subterms_of (t1 \\<cdot> t2)\n\ngoal (1 subgoal):\n 1. x = t1 \\<cdot> t2 \\<Longrightarrow> x \\<in> subterms_of (t1 \\<cdot> t2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x = t1 \\<cdot> t2 \\<Longrightarrow> x \\<in> subterms_of (t1 \\<cdot> t2)", "assume \"x = (Comb t1 t2)\""], ["proof (state)\nthis:\n  x = t1 \\<cdot> t2\n\ngoal (1 subgoal):\n 1. x = t1 \\<cdot> t2 \\<Longrightarrow> x \\<in> subterms_of (t1 \\<cdot> t2)", "show \"x \\<in> subterms_of (Comb t1 t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> subterms_of (t1 \\<cdot> t2)", "using \\<open>x = t1 \\<cdot> t2\\<close> root_subterm"], ["proof (prove)\nusing this:\n  x = t1 \\<cdot> t2\n  ?t \\<in> subterms_of ?t\n\ngoal (1 subgoal):\n 1. x \\<in> subterms_of (t1 \\<cdot> t2)", "by blast"], ["proof (state)\nthis:\n  x \\<in> subterms_of (t1 \\<cdot> t2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> subterms_of (t1 \\<cdot> t2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> subterms_of (t1 \\<cdot> t2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}\n  \\<subseteq> subterms_of (t1 \\<cdot> t2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma positions_of_a_non_atomic_term:\n  shows \"pos_of (Comb t1 t2) = (left_app ` (pos_of t1)) \\<union> (right_app ` (pos_of t2)) \\<union> { Nil }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pos_of (t1 \\<cdot> t2) =\n    left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union> {[]}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. pos_of (t1 \\<cdot> t2)\n    \\<subseteq> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union>\n                {[]}\n 2. left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union> {[]}\n    \\<subseteq> pos_of (t1 \\<cdot> t2)", "show \"pos_of (Comb t1 t2) \\<subseteq> (left_app ` (pos_of t1)) \\<union> (right_app ` (pos_of t2)) \\<union> { Nil }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pos_of (t1 \\<cdot> t2)\n    \\<subseteq> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union>\n                {[]}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pos_of (t1 \\<cdot> t2) \\<Longrightarrow>\n       x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union>\n               {[]}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pos_of (t1 \\<cdot> t2) \\<Longrightarrow>\n       x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union>\n               {[]}", "assume \"x \\<in> pos_of (Comb t1 t2)\""], ["proof (state)\nthis:\n  x \\<in> pos_of (t1 \\<cdot> t2)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pos_of (t1 \\<cdot> t2) \\<Longrightarrow>\n       x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union>\n               {[]}", "then"], ["proof (chain)\npicking this:\n  x \\<in> pos_of (t1 \\<cdot> t2)", "have \"position_in x (Comb t1 t2)\""], ["proof (prove)\nusing this:\n  x \\<in> pos_of (t1 \\<cdot> t2)\n\ngoal (1 subgoal):\n 1. position_in x (t1 \\<cdot> t2)", "by auto"], ["proof (state)\nthis:\n  position_in x (t1 \\<cdot> t2)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pos_of (t1 \\<cdot> t2) \\<Longrightarrow>\n       x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union>\n               {[]}", "then"], ["proof (chain)\npicking this:\n  position_in x (t1 \\<cdot> t2)", "obtain s where \"subterm (Comb t1 t2) x s\""], ["proof (prove)\nusing this:\n  position_in x (t1 \\<cdot> t2)\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        subterm (t1 \\<cdot> t2) x s \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding position_in_def"], ["proof (prove)\nusing this:\n  Ex (subterm (t1 \\<cdot> t2) x)\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        subterm (t1 \\<cdot> t2) x s \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  subterm (t1 \\<cdot> t2) x s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pos_of (t1 \\<cdot> t2) \\<Longrightarrow>\n       x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union>\n               {[]}", "have \"x = [] \\<or> (\\<exists>i q. x = i #q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = [] \\<or> (\\<exists>i q. x = i # q)", "using neq_Nil_conv"], ["proof (prove)\nusing this:\n  (?xs \\<noteq> []) = (\\<exists>y ys. ?xs = y # ys)\n\ngoal (1 subgoal):\n 1. x = [] \\<or> (\\<exists>i q. x = i # q)", "by blast"], ["proof (state)\nthis:\n  x = [] \\<or> (\\<exists>i q. x = i # q)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pos_of (t1 \\<cdot> t2) \\<Longrightarrow>\n       x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union>\n               {[]}", "then"], ["proof (chain)\npicking this:\n  x = [] \\<or> (\\<exists>i q. x = i # q)", "show \"x \\<in> (left_app ` (pos_of t1)) \\<union> (right_app ` (pos_of t2)) \\<union> { Nil }\""], ["proof (prove)\nusing this:\n  x = [] \\<or> (\\<exists>i q. x = i # q)\n\ngoal (1 subgoal):\n 1. x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union>\n            {[]}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. x = [] \\<Longrightarrow>\n    x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union>\n            {[]}\n 2. \\<exists>i q. x = i # q \\<Longrightarrow>\n    x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union>\n            {[]}", "assume \"x = []\""], ["proof (state)\nthis:\n  x = []\n\ngoal (2 subgoals):\n 1. x = [] \\<Longrightarrow>\n    x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union>\n            {[]}\n 2. \\<exists>i q. x = i # q \\<Longrightarrow>\n    x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union>\n            {[]}", "from this and \\<open>subterm (Comb t1 t2) x s\\<close>"], ["proof (chain)\npicking this:\n  x = []\n  subterm (t1 \\<cdot> t2) x s", "show ?thesis"], ["proof (prove)\nusing this:\n  x = []\n  subterm (t1 \\<cdot> t2) x s\n\ngoal (1 subgoal):\n 1. x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union>\n            {[]}", "by auto"], ["proof (state)\nthis:\n  x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union> {[]}\n\ngoal (1 subgoal):\n 1. \\<exists>i q. x = i # q \\<Longrightarrow>\n    x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union>\n            {[]}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i q. x = i # q \\<Longrightarrow>\n    x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union>\n            {[]}", "assume \"\\<exists>i q. x = i #q\""], ["proof (state)\nthis:\n  \\<exists>i q. x = i # q\n\ngoal (1 subgoal):\n 1. \\<exists>i q. x = i # q \\<Longrightarrow>\n    x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union>\n            {[]}", "then"], ["proof (chain)\npicking this:\n  \\<exists>i q. x = i # q", "obtain i q where \"x = i # q\""], ["proof (prove)\nusing this:\n  \\<exists>i q. x = i # q\n\ngoal (1 subgoal):\n 1. (\\<And>i q. x = i # q \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  x = i # q\n\ngoal (1 subgoal):\n 1. \\<exists>i q. x = i # q \\<Longrightarrow>\n    x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union>\n            {[]}", "have \"i = Left \\<or> i = Right\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i = indices.Left \\<or> i = indices.Right", "using indices.exhaust"], ["proof (prove)\nusing this:\n  \\<lbrakk>?y = indices.Left \\<Longrightarrow> ?P;\n   ?y = indices.Right \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. i = indices.Left \\<or> i = indices.Right", "by blast"], ["proof (state)\nthis:\n  i = indices.Left \\<or> i = indices.Right\n\ngoal (1 subgoal):\n 1. \\<exists>i q. x = i # q \\<Longrightarrow>\n    x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union>\n            {[]}", "then"], ["proof (chain)\npicking this:\n  i = indices.Left \\<or> i = indices.Right", "show \"x \\<in> (left_app ` (pos_of t1)) \\<union> (right_app ` (pos_of t2)) \\<union> { Nil }\""], ["proof (prove)\nusing this:\n  i = indices.Left \\<or> i = indices.Right\n\ngoal (1 subgoal):\n 1. x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union>\n            {[]}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. i = indices.Left \\<Longrightarrow>\n    x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union>\n            {[]}\n 2. i = indices.Right \\<Longrightarrow>\n    x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union>\n            {[]}", "assume \"i = Left\""], ["proof (state)\nthis:\n  i = indices.Left\n\ngoal (2 subgoals):\n 1. i = indices.Left \\<Longrightarrow>\n    x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union>\n            {[]}\n 2. i = indices.Right \\<Longrightarrow>\n    x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union>\n            {[]}", "from this and \\<open>x = i # q\\<close> and \\<open>subterm (Comb t1 t2) x s\\<close>"], ["proof (chain)\npicking this:\n  i = indices.Left\n  x = i # q\n  subterm (t1 \\<cdot> t2) x s", "have \"subterm t1 q s\""], ["proof (prove)\nusing this:\n  i = indices.Left\n  x = i # q\n  subterm (t1 \\<cdot> t2) x s\n\ngoal (1 subgoal):\n 1. subterm t1 q s", "by auto"], ["proof (state)\nthis:\n  subterm t1 q s\n\ngoal (2 subgoals):\n 1. i = indices.Left \\<Longrightarrow>\n    x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union>\n            {[]}\n 2. i = indices.Right \\<Longrightarrow>\n    x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union>\n            {[]}", "then"], ["proof (chain)\npicking this:\n  subterm t1 q s", "have \"position_in q t1\""], ["proof (prove)\nusing this:\n  subterm t1 q s\n\ngoal (1 subgoal):\n 1. position_in q t1", "unfolding position_in_def"], ["proof (prove)\nusing this:\n  subterm t1 q s\n\ngoal (1 subgoal):\n 1. Ex (subterm t1 q)", "by auto"], ["proof (state)\nthis:\n  position_in q t1\n\ngoal (2 subgoals):\n 1. i = indices.Left \\<Longrightarrow>\n    x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union>\n            {[]}\n 2. i = indices.Right \\<Longrightarrow>\n    x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union>\n            {[]}", "from this and \\<open>x = i # q\\<close> \\<open>i = Left\\<close>"], ["proof (chain)\npicking this:\n  position_in q t1\n  x = i # q\n  i = indices.Left", "show \"x \\<in> (left_app ` (pos_of t1)) \\<union> (right_app ` (pos_of t2)) \\<union> { Nil }\""], ["proof (prove)\nusing this:\n  position_in q t1\n  x = i # q\n  i = indices.Left\n\ngoal (1 subgoal):\n 1. x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union>\n            {[]}", "by auto"], ["proof (state)\nthis:\n  x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union> {[]}\n\ngoal (1 subgoal):\n 1. i = indices.Right \\<Longrightarrow>\n    x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union>\n            {[]}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i = indices.Right \\<Longrightarrow>\n    x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union>\n            {[]}", "assume \"i = Right\""], ["proof (state)\nthis:\n  i = indices.Right\n\ngoal (1 subgoal):\n 1. i = indices.Right \\<Longrightarrow>\n    x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union>\n            {[]}", "from this and \\<open>x = i # q\\<close> and \\<open>subterm (Comb t1 t2) x s\\<close>"], ["proof (chain)\npicking this:\n  i = indices.Right\n  x = i # q\n  subterm (t1 \\<cdot> t2) x s", "have \"subterm t2 q s\""], ["proof (prove)\nusing this:\n  i = indices.Right\n  x = i # q\n  subterm (t1 \\<cdot> t2) x s\n\ngoal (1 subgoal):\n 1. subterm t2 q s", "by auto"], ["proof (state)\nthis:\n  subterm t2 q s\n\ngoal (1 subgoal):\n 1. i = indices.Right \\<Longrightarrow>\n    x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union>\n            {[]}", "then"], ["proof (chain)\npicking this:\n  subterm t2 q s", "have \"position_in q t2\""], ["proof (prove)\nusing this:\n  subterm t2 q s\n\ngoal (1 subgoal):\n 1. position_in q t2", "unfolding position_in_def"], ["proof (prove)\nusing this:\n  subterm t2 q s\n\ngoal (1 subgoal):\n 1. Ex (subterm t2 q)", "by auto"], ["proof (state)\nthis:\n  position_in q t2\n\ngoal (1 subgoal):\n 1. i = indices.Right \\<Longrightarrow>\n    x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union>\n            {[]}", "from this and \\<open>x = i # q\\<close> \\<open>i = Right\\<close>"], ["proof (chain)\npicking this:\n  position_in q t2\n  x = i # q\n  i = indices.Right", "show \"x \\<in> (left_app ` (pos_of t1)) \\<union> (right_app ` (pos_of t2)) \\<union> { Nil }\""], ["proof (prove)\nusing this:\n  position_in q t2\n  x = i # q\n  i = indices.Right\n\ngoal (1 subgoal):\n 1. x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union>\n            {[]}", "by auto"], ["proof (state)\nthis:\n  x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union> {[]}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union> {[]}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union> {[]}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pos_of (t1 \\<cdot> t2)\n  \\<subseteq> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union>\n              {[]}\n\ngoal (1 subgoal):\n 1. left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union> {[]}\n    \\<subseteq> pos_of (t1 \\<cdot> t2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union> {[]}\n    \\<subseteq> pos_of (t1 \\<cdot> t2)", "show \"(left_app ` (pos_of t1)) \\<union> (right_app ` (pos_of t2)) \\<union> { Nil } \\<subseteq> pos_of (Comb t1 t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union> {[]}\n    \\<subseteq> pos_of (t1 \\<cdot> t2)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union>\n               {[]} \\<Longrightarrow>\n       x \\<in> pos_of (t1 \\<cdot> t2)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union>\n               {[]} \\<Longrightarrow>\n       x \\<in> pos_of (t1 \\<cdot> t2)", "assume \"x \\<in> (left_app ` (pos_of t1)) \\<union> (right_app ` (pos_of t2)) \\<union> { Nil }\""], ["proof (state)\nthis:\n  x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union> {[]}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union>\n               {[]} \\<Longrightarrow>\n       x \\<in> pos_of (t1 \\<cdot> t2)", "then"], ["proof (chain)\npicking this:\n  x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union> {[]}", "have \"(x \\<in> left_app ` (pos_of t1)) \\<or> ((x \\<in> (right_app ` (pos_of t2))) \\<or> (x = Nil))\""], ["proof (prove)\nusing this:\n  x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union> {[]}\n\ngoal (1 subgoal):\n 1. x \\<in> left_app ` pos_of t1 \\<or>\n    x \\<in> right_app ` pos_of t2 \\<or> x = []", "by auto"], ["proof (state)\nthis:\n  x \\<in> left_app ` pos_of t1 \\<or>\n  x \\<in> right_app ` pos_of t2 \\<or> x = []\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union>\n               {[]} \\<Longrightarrow>\n       x \\<in> pos_of (t1 \\<cdot> t2)", "thus \"x \\<in> pos_of (Comb t1 t2)\""], ["proof (prove)\nusing this:\n  x \\<in> left_app ` pos_of t1 \\<or>\n  x \\<in> right_app ` pos_of t2 \\<or> x = []\n\ngoal (1 subgoal):\n 1. x \\<in> pos_of (t1 \\<cdot> t2)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> left_app ` pos_of t1 \\<Longrightarrow>\n    x \\<in> pos_of (t1 \\<cdot> t2)\n 2. x \\<in> right_app ` pos_of t2 \\<or> x = [] \\<Longrightarrow>\n    x \\<in> pos_of (t1 \\<cdot> t2)", "assume \"x \\<in> left_app ` (pos_of t1)\""], ["proof (state)\nthis:\n  x \\<in> left_app ` pos_of t1\n\ngoal (2 subgoals):\n 1. x \\<in> left_app ` pos_of t1 \\<Longrightarrow>\n    x \\<in> pos_of (t1 \\<cdot> t2)\n 2. x \\<in> right_app ` pos_of t2 \\<or> x = [] \\<Longrightarrow>\n    x \\<in> pos_of (t1 \\<cdot> t2)", "then"], ["proof (chain)\npicking this:\n  x \\<in> left_app ` pos_of t1", "obtain q where \"x = Left # q\" and \"position_in q t1\""], ["proof (prove)\nusing this:\n  x \\<in> left_app ` pos_of t1\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>x = indices.Left # q; position_in q t1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x = indices.Left # q\n  position_in q t1\n\ngoal (2 subgoals):\n 1. x \\<in> left_app ` pos_of t1 \\<Longrightarrow>\n    x \\<in> pos_of (t1 \\<cdot> t2)\n 2. x \\<in> right_app ` pos_of t2 \\<or> x = [] \\<Longrightarrow>\n    x \\<in> pos_of (t1 \\<cdot> t2)", "then"], ["proof (chain)\npicking this:\n  x = indices.Left # q\n  position_in q t1", "obtain s where \"subterm t1 q s\""], ["proof (prove)\nusing this:\n  x = indices.Left # q\n  position_in q t1\n\ngoal (1 subgoal):\n 1. (\\<And>s. subterm t1 q s \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding position_in_def"], ["proof (prove)\nusing this:\n  x = indices.Left # q\n  Ex (subterm t1 q)\n\ngoal (1 subgoal):\n 1. (\\<And>s. subterm t1 q s \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  subterm t1 q s\n\ngoal (2 subgoals):\n 1. x \\<in> left_app ` pos_of t1 \\<Longrightarrow>\n    x \\<in> pos_of (t1 \\<cdot> t2)\n 2. x \\<in> right_app ` pos_of t2 \\<or> x = [] \\<Longrightarrow>\n    x \\<in> pos_of (t1 \\<cdot> t2)", "then"], ["proof (chain)\npicking this:\n  subterm t1 q s", "have \"subterm (Comb t1 t2) (Left # q) s\""], ["proof (prove)\nusing this:\n  subterm t1 q s\n\ngoal (1 subgoal):\n 1. subterm (t1 \\<cdot> t2) (indices.Left # q) s", "by auto"], ["proof (state)\nthis:\n  subterm (t1 \\<cdot> t2) (indices.Left # q) s\n\ngoal (2 subgoals):\n 1. x \\<in> left_app ` pos_of t1 \\<Longrightarrow>\n    x \\<in> pos_of (t1 \\<cdot> t2)\n 2. x \\<in> right_app ` pos_of t2 \\<or> x = [] \\<Longrightarrow>\n    x \\<in> pos_of (t1 \\<cdot> t2)", "from this and \\<open>x = Left # q\\<close>"], ["proof (chain)\npicking this:\n  subterm (t1 \\<cdot> t2) (indices.Left # q) s\n  x = indices.Left # q", "have \"position_in x (Comb t1 t2)\""], ["proof (prove)\nusing this:\n  subterm (t1 \\<cdot> t2) (indices.Left # q) s\n  x = indices.Left # q\n\ngoal (1 subgoal):\n 1. position_in x (t1 \\<cdot> t2)", "using position_in_def"], ["proof (prove)\nusing this:\n  subterm (t1 \\<cdot> t2) (indices.Left # q) s\n  x = indices.Left # q\n  position_in ?p ?s = (\\<exists>t. subterm ?s ?p t)\n\ngoal (1 subgoal):\n 1. position_in x (t1 \\<cdot> t2)", "by blast"], ["proof (state)\nthis:\n  position_in x (t1 \\<cdot> t2)\n\ngoal (2 subgoals):\n 1. x \\<in> left_app ` pos_of t1 \\<Longrightarrow>\n    x \\<in> pos_of (t1 \\<cdot> t2)\n 2. x \\<in> right_app ` pos_of t2 \\<or> x = [] \\<Longrightarrow>\n    x \\<in> pos_of (t1 \\<cdot> t2)", "then"], ["proof (chain)\npicking this:\n  position_in x (t1 \\<cdot> t2)", "show \"x \\<in> pos_of (Comb t1 t2)\""], ["proof (prove)\nusing this:\n  position_in x (t1 \\<cdot> t2)\n\ngoal (1 subgoal):\n 1. x \\<in> pos_of (t1 \\<cdot> t2)", "by auto"], ["proof (state)\nthis:\n  x \\<in> pos_of (t1 \\<cdot> t2)\n\ngoal (1 subgoal):\n 1. x \\<in> right_app ` pos_of t2 \\<or> x = [] \\<Longrightarrow>\n    x \\<in> pos_of (t1 \\<cdot> t2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> right_app ` pos_of t2 \\<or> x = [] \\<Longrightarrow>\n    x \\<in> pos_of (t1 \\<cdot> t2)", "assume \"(x \\<in> (right_app ` (pos_of t2))) \\<or> (x = Nil)\""], ["proof (state)\nthis:\n  x \\<in> right_app ` pos_of t2 \\<or> x = []\n\ngoal (1 subgoal):\n 1. x \\<in> right_app ` pos_of t2 \\<or> x = [] \\<Longrightarrow>\n    x \\<in> pos_of (t1 \\<cdot> t2)", "then"], ["proof (chain)\npicking this:\n  x \\<in> right_app ` pos_of t2 \\<or> x = []", "show \"x \\<in> pos_of (Comb t1 t2)\""], ["proof (prove)\nusing this:\n  x \\<in> right_app ` pos_of t2 \\<or> x = []\n\ngoal (1 subgoal):\n 1. x \\<in> pos_of (t1 \\<cdot> t2)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> right_app ` pos_of t2 \\<Longrightarrow>\n    x \\<in> pos_of (t1 \\<cdot> t2)\n 2. x = [] \\<Longrightarrow> x \\<in> pos_of (t1 \\<cdot> t2)", "assume \"x \\<in> right_app ` (pos_of t2)\""], ["proof (state)\nthis:\n  x \\<in> right_app ` pos_of t2\n\ngoal (2 subgoals):\n 1. x \\<in> right_app ` pos_of t2 \\<Longrightarrow>\n    x \\<in> pos_of (t1 \\<cdot> t2)\n 2. x = [] \\<Longrightarrow> x \\<in> pos_of (t1 \\<cdot> t2)", "then"], ["proof (chain)\npicking this:\n  x \\<in> right_app ` pos_of t2", "obtain q where \"x = Right # q\" and \"position_in q t2\""], ["proof (prove)\nusing this:\n  x \\<in> right_app ` pos_of t2\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>x = indices.Right # q; position_in q t2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x = indices.Right # q\n  position_in q t2\n\ngoal (2 subgoals):\n 1. x \\<in> right_app ` pos_of t2 \\<Longrightarrow>\n    x \\<in> pos_of (t1 \\<cdot> t2)\n 2. x = [] \\<Longrightarrow> x \\<in> pos_of (t1 \\<cdot> t2)", "then"], ["proof (chain)\npicking this:\n  x = indices.Right # q\n  position_in q t2", "obtain s where \"subterm t2 q s\""], ["proof (prove)\nusing this:\n  x = indices.Right # q\n  position_in q t2\n\ngoal (1 subgoal):\n 1. (\\<And>s. subterm t2 q s \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding position_in_def"], ["proof (prove)\nusing this:\n  x = indices.Right # q\n  Ex (subterm t2 q)\n\ngoal (1 subgoal):\n 1. (\\<And>s. subterm t2 q s \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  subterm t2 q s\n\ngoal (2 subgoals):\n 1. x \\<in> right_app ` pos_of t2 \\<Longrightarrow>\n    x \\<in> pos_of (t1 \\<cdot> t2)\n 2. x = [] \\<Longrightarrow> x \\<in> pos_of (t1 \\<cdot> t2)", "then"], ["proof (chain)\npicking this:\n  subterm t2 q s", "have \"subterm (Comb t1 t2) (Right # q) s\""], ["proof (prove)\nusing this:\n  subterm t2 q s\n\ngoal (1 subgoal):\n 1. subterm (t1 \\<cdot> t2) (indices.Right # q) s", "by auto"], ["proof (state)\nthis:\n  subterm (t1 \\<cdot> t2) (indices.Right # q) s\n\ngoal (2 subgoals):\n 1. x \\<in> right_app ` pos_of t2 \\<Longrightarrow>\n    x \\<in> pos_of (t1 \\<cdot> t2)\n 2. x = [] \\<Longrightarrow> x \\<in> pos_of (t1 \\<cdot> t2)", "from this and \\<open>x = Right # q\\<close>"], ["proof (chain)\npicking this:\n  subterm (t1 \\<cdot> t2) (indices.Right # q) s\n  x = indices.Right # q", "have \"position_in x (Comb t1 t2)\""], ["proof (prove)\nusing this:\n  subterm (t1 \\<cdot> t2) (indices.Right # q) s\n  x = indices.Right # q\n\ngoal (1 subgoal):\n 1. position_in x (t1 \\<cdot> t2)", "using position_in_def"], ["proof (prove)\nusing this:\n  subterm (t1 \\<cdot> t2) (indices.Right # q) s\n  x = indices.Right # q\n  position_in ?p ?s = (\\<exists>t. subterm ?s ?p t)\n\ngoal (1 subgoal):\n 1. position_in x (t1 \\<cdot> t2)", "by blast"], ["proof (state)\nthis:\n  position_in x (t1 \\<cdot> t2)\n\ngoal (2 subgoals):\n 1. x \\<in> right_app ` pos_of t2 \\<Longrightarrow>\n    x \\<in> pos_of (t1 \\<cdot> t2)\n 2. x = [] \\<Longrightarrow> x \\<in> pos_of (t1 \\<cdot> t2)", "then"], ["proof (chain)\npicking this:\n  position_in x (t1 \\<cdot> t2)", "show \"x \\<in> pos_of (Comb t1 t2)\""], ["proof (prove)\nusing this:\n  position_in x (t1 \\<cdot> t2)\n\ngoal (1 subgoal):\n 1. x \\<in> pos_of (t1 \\<cdot> t2)", "by auto"], ["proof (state)\nthis:\n  x \\<in> pos_of (t1 \\<cdot> t2)\n\ngoal (1 subgoal):\n 1. x = [] \\<Longrightarrow> x \\<in> pos_of (t1 \\<cdot> t2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x = [] \\<Longrightarrow> x \\<in> pos_of (t1 \\<cdot> t2)", "assume \"x = Nil\""], ["proof (state)\nthis:\n  x = []\n\ngoal (1 subgoal):\n 1. x = [] \\<Longrightarrow> x \\<in> pos_of (t1 \\<cdot> t2)", "show \"x \\<in> pos_of (Comb t1 t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> pos_of (t1 \\<cdot> t2)", "using \\<open>x = Nil\\<close> root_position"], ["proof (prove)\nusing this:\n  x = []\n  [] \\<in> pos_of ?t\n\ngoal (1 subgoal):\n 1. x \\<in> pos_of (t1 \\<cdot> t2)", "by blast"], ["proof (state)\nthis:\n  x \\<in> pos_of (t1 \\<cdot> t2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> pos_of (t1 \\<cdot> t2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> pos_of (t1 \\<cdot> t2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union> {[]}\n  \\<subseteq> pos_of (t1 \\<cdot> t2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma set_of_subterms_is_finite :\n  shows \"(finite (subterms_of (t :: 'a trm)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (subterms_of t)", "proof (induction t)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x. finite (subterms_of (Var x))\n 2. \\<And>x. finite (subterms_of (Const x))\n 3. \\<And>t1 t2.\n       \\<lbrakk>finite (subterms_of t1); finite (subterms_of t2)\\<rbrakk>\n       \\<Longrightarrow> finite (subterms_of (t1 \\<cdot> t2))", "case (Var x)"], ["proof (state)\nthis:\n  \n\ngoal (3 subgoals):\n 1. \\<And>x. finite (subterms_of (Var x))\n 2. \\<And>x. finite (subterms_of (Const x))\n 3. \\<And>t1 t2.\n       \\<lbrakk>finite (subterms_of t1); finite (subterms_of t2)\\<rbrakk>\n       \\<Longrightarrow> finite (subterms_of (t1 \\<cdot> t2))", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (subterms_of (Var x))", "using subterms_of_an_atomic_term [of \"Var x\"]"], ["proof (prove)\nusing this:\n  is_a_variable (Var x) \\<or> is_a_constant (Var x) \\<Longrightarrow>\n  subterms_of (Var x) = {Var x}\n\ngoal (1 subgoal):\n 1. finite (subterms_of (Var x))", "by simp"], ["proof (state)\nthis:\n  finite (subterms_of (Var x))\n\ngoal (2 subgoals):\n 1. \\<And>x. finite (subterms_of (Const x))\n 2. \\<And>t1 t2.\n       \\<lbrakk>finite (subterms_of t1); finite (subterms_of t2)\\<rbrakk>\n       \\<Longrightarrow> finite (subterms_of (t1 \\<cdot> t2))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. finite (subterms_of (Const x))\n 2. \\<And>t1 t2.\n       \\<lbrakk>finite (subterms_of t1); finite (subterms_of t2)\\<rbrakk>\n       \\<Longrightarrow> finite (subterms_of (t1 \\<cdot> t2))", "case (Const x)"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>x. finite (subterms_of (Const x))\n 2. \\<And>t1 t2.\n       \\<lbrakk>finite (subterms_of t1); finite (subterms_of t2)\\<rbrakk>\n       \\<Longrightarrow> finite (subterms_of (t1 \\<cdot> t2))", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (subterms_of (Const x))", "using subterms_of_an_atomic_term [of \"Const x\"]"], ["proof (prove)\nusing this:\n  is_a_variable (Const x) \\<or> is_a_constant (Const x) \\<Longrightarrow>\n  subterms_of (Const x) = {Const x}\n\ngoal (1 subgoal):\n 1. finite (subterms_of (Const x))", "by simp"], ["proof (state)\nthis:\n  finite (subterms_of (Const x))\n\ngoal (1 subgoal):\n 1. \\<And>t1 t2.\n       \\<lbrakk>finite (subterms_of t1); finite (subterms_of t2)\\<rbrakk>\n       \\<Longrightarrow> finite (subterms_of (t1 \\<cdot> t2))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 t2.\n       \\<lbrakk>finite (subterms_of t1); finite (subterms_of t2)\\<rbrakk>\n       \\<Longrightarrow> finite (subterms_of (t1 \\<cdot> t2))", "case (Comb t1 t2)"], ["proof (state)\nthis:\n  finite (subterms_of t1)\n  finite (subterms_of t2)\n\ngoal (1 subgoal):\n 1. \\<And>t1 t2.\n       \\<lbrakk>finite (subterms_of t1); finite (subterms_of t2)\\<rbrakk>\n       \\<Longrightarrow> finite (subterms_of (t1 \\<cdot> t2))", "assume \"finite (subterms_of t1)\" and \"finite (subterms_of t2)\""], ["proof (state)\nthis:\n  finite (subterms_of t1)\n  finite (subterms_of t2)\n\ngoal (1 subgoal):\n 1. \\<And>t1 t2.\n       \\<lbrakk>finite (subterms_of t1); finite (subterms_of t2)\\<rbrakk>\n       \\<Longrightarrow> finite (subterms_of (t1 \\<cdot> t2))", "have \"subterms_of (Comb t1 t2) = subterms_of t1 \\<union> subterms_of t2 \\<union> { Comb t1 t2 }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subterms_of (t1 \\<cdot> t2) =\n    subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}", "using subterms_of_a_non_atomic_term"], ["proof (prove)\nusing this:\n  subterms_of (?t1.0 \\<cdot> ?t2.0) =\n  subterms_of ?t1.0 \\<union> subterms_of ?t2.0 \\<union>\n  {?t1.0 \\<cdot> ?t2.0}\n\ngoal (1 subgoal):\n 1. subterms_of (t1 \\<cdot> t2) =\n    subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}", "by auto"], ["proof (state)\nthis:\n  subterms_of (t1 \\<cdot> t2) =\n  subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}\n\ngoal (1 subgoal):\n 1. \\<And>t1 t2.\n       \\<lbrakk>finite (subterms_of t1); finite (subterms_of t2)\\<rbrakk>\n       \\<Longrightarrow> finite (subterms_of (t1 \\<cdot> t2))", "from this and \\<open>finite (subterms_of t1)\\<close> and \\<open>finite (subterms_of t2)\\<close>"], ["proof (chain)\npicking this:\n  subterms_of (t1 \\<cdot> t2) =\n  subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}\n  finite (subterms_of t1)\n  finite (subterms_of t2)", "show \"finite (subterms_of (Comb t1 t2))\""], ["proof (prove)\nusing this:\n  subterms_of (t1 \\<cdot> t2) =\n  subterms_of t1 \\<union> subterms_of t2 \\<union> {t1 \\<cdot> t2}\n  finite (subterms_of t1)\n  finite (subterms_of t2)\n\ngoal (1 subgoal):\n 1. finite (subterms_of (t1 \\<cdot> t2))", "by simp"], ["proof (state)\nthis:\n  finite (subterms_of (t1 \\<cdot> t2))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma set_of_positions_is_finite :\n  shows \"(finite (pos_of (t :: 'a trm)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (pos_of t)", "proof (induction t)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x. finite (pos_of (Var x))\n 2. \\<And>x. finite (pos_of (Const x))\n 3. \\<And>t1 t2.\n       \\<lbrakk>finite (pos_of t1); finite (pos_of t2)\\<rbrakk>\n       \\<Longrightarrow> finite (pos_of (t1 \\<cdot> t2))", "case (Var x)"], ["proof (state)\nthis:\n  \n\ngoal (3 subgoals):\n 1. \\<And>x. finite (pos_of (Var x))\n 2. \\<And>x. finite (pos_of (Const x))\n 3. \\<And>t1 t2.\n       \\<lbrakk>finite (pos_of t1); finite (pos_of t2)\\<rbrakk>\n       \\<Longrightarrow> finite (pos_of (t1 \\<cdot> t2))", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (pos_of (Var x))", "using positions_of_an_atomic_term [of \"Var x\"]"], ["proof (prove)\nusing this:\n  is_a_variable (Var x) \\<or> is_a_constant (Var x) \\<Longrightarrow>\n  pos_of (Var x) = {[]}\n\ngoal (1 subgoal):\n 1. finite (pos_of (Var x))", "by simp"], ["proof (state)\nthis:\n  finite (pos_of (Var x))\n\ngoal (2 subgoals):\n 1. \\<And>x. finite (pos_of (Const x))\n 2. \\<And>t1 t2.\n       \\<lbrakk>finite (pos_of t1); finite (pos_of t2)\\<rbrakk>\n       \\<Longrightarrow> finite (pos_of (t1 \\<cdot> t2))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. finite (pos_of (Const x))\n 2. \\<And>t1 t2.\n       \\<lbrakk>finite (pos_of t1); finite (pos_of t2)\\<rbrakk>\n       \\<Longrightarrow> finite (pos_of (t1 \\<cdot> t2))", "case (Const x)"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>x. finite (pos_of (Const x))\n 2. \\<And>t1 t2.\n       \\<lbrakk>finite (pos_of t1); finite (pos_of t2)\\<rbrakk>\n       \\<Longrightarrow> finite (pos_of (t1 \\<cdot> t2))", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (pos_of (Const x))", "using positions_of_an_atomic_term [of \"Const x\"]"], ["proof (prove)\nusing this:\n  is_a_variable (Const x) \\<or> is_a_constant (Const x) \\<Longrightarrow>\n  pos_of (Const x) = {[]}\n\ngoal (1 subgoal):\n 1. finite (pos_of (Const x))", "by simp"], ["proof (state)\nthis:\n  finite (pos_of (Const x))\n\ngoal (1 subgoal):\n 1. \\<And>t1 t2.\n       \\<lbrakk>finite (pos_of t1); finite (pos_of t2)\\<rbrakk>\n       \\<Longrightarrow> finite (pos_of (t1 \\<cdot> t2))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 t2.\n       \\<lbrakk>finite (pos_of t1); finite (pos_of t2)\\<rbrakk>\n       \\<Longrightarrow> finite (pos_of (t1 \\<cdot> t2))", "case (Comb t1 t2)"], ["proof (state)\nthis:\n  finite (pos_of t1)\n  finite (pos_of t2)\n\ngoal (1 subgoal):\n 1. \\<And>t1 t2.\n       \\<lbrakk>finite (pos_of t1); finite (pos_of t2)\\<rbrakk>\n       \\<Longrightarrow> finite (pos_of (t1 \\<cdot> t2))", "assume \"finite (pos_of t1)\" and \"finite (pos_of t2)\""], ["proof (state)\nthis:\n  finite (pos_of t1)\n  finite (pos_of t2)\n\ngoal (1 subgoal):\n 1. \\<And>t1 t2.\n       \\<lbrakk>finite (pos_of t1); finite (pos_of t2)\\<rbrakk>\n       \\<Longrightarrow> finite (pos_of (t1 \\<cdot> t2))", "from \\<open>finite (pos_of t1)\\<close>"], ["proof (chain)\npicking this:\n  finite (pos_of t1)", "have i: \"finite (left_app ` (pos_of t1))\""], ["proof (prove)\nusing this:\n  finite (pos_of t1)\n\ngoal (1 subgoal):\n 1. finite (left_app ` pos_of t1)", "by auto"], ["proof (state)\nthis:\n  finite (left_app ` pos_of t1)\n\ngoal (1 subgoal):\n 1. \\<And>t1 t2.\n       \\<lbrakk>finite (pos_of t1); finite (pos_of t2)\\<rbrakk>\n       \\<Longrightarrow> finite (pos_of (t1 \\<cdot> t2))", "from \\<open>finite (pos_of t2)\\<close>"], ["proof (chain)\npicking this:\n  finite (pos_of t2)", "have ii: \"finite (right_app ` (pos_of t2))\""], ["proof (prove)\nusing this:\n  finite (pos_of t2)\n\ngoal (1 subgoal):\n 1. finite (right_app ` pos_of t2)", "by auto"], ["proof (state)\nthis:\n  finite (right_app ` pos_of t2)\n\ngoal (1 subgoal):\n 1. \\<And>t1 t2.\n       \\<lbrakk>finite (pos_of t1); finite (pos_of t2)\\<rbrakk>\n       \\<Longrightarrow> finite (pos_of (t1 \\<cdot> t2))", "have \"pos_of (Comb t1 t2) = (left_app ` (pos_of t1)) \\<union> (right_app ` (pos_of t2)) \\<union> { Nil }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pos_of (t1 \\<cdot> t2) =\n    left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union> {[]}", "using positions_of_a_non_atomic_term"], ["proof (prove)\nusing this:\n  pos_of (?t1.0 \\<cdot> ?t2.0) =\n  left_app ` pos_of ?t1.0 \\<union> right_app ` pos_of ?t2.0 \\<union> {[]}\n\ngoal (1 subgoal):\n 1. pos_of (t1 \\<cdot> t2) =\n    left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union> {[]}", "by metis"], ["proof (state)\nthis:\n  pos_of (t1 \\<cdot> t2) =\n  left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union> {[]}\n\ngoal (1 subgoal):\n 1. \\<And>t1 t2.\n       \\<lbrakk>finite (pos_of t1); finite (pos_of t2)\\<rbrakk>\n       \\<Longrightarrow> finite (pos_of (t1 \\<cdot> t2))", "from this and i ii"], ["proof (chain)\npicking this:\n  pos_of (t1 \\<cdot> t2) =\n  left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union> {[]}\n  finite (left_app ` pos_of t1)\n  finite (right_app ` pos_of t2)", "show \"finite (pos_of (Comb t1 t2))\""], ["proof (prove)\nusing this:\n  pos_of (t1 \\<cdot> t2) =\n  left_app ` pos_of t1 \\<union> right_app ` pos_of t2 \\<union> {[]}\n  finite (left_app ` pos_of t1)\n  finite (right_app ` pos_of t2)\n\ngoal (1 subgoal):\n 1. finite (pos_of (t1 \\<cdot> t2))", "by simp"], ["proof (state)\nthis:\n  finite (pos_of (t1 \\<cdot> t2))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vars_of_instances:\n  shows \"vars_of (subst t \\<sigma>) \n    = \\<Union> { V. \\<exists>x. (x \\<in> (vars_of t)) \\<and> (V = vars_of (subst (Var x) \\<sigma>)) }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars_of (t \\<lhd> \\<sigma>) =\n    \\<Union>\n     {V. \\<exists>x.\n            x \\<in> vars_of t \\<and> V = vars_of (Var x \\<lhd> \\<sigma>)}", "proof (induction t)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x.\n       vars_of (Var x \\<lhd> \\<sigma>) =\n       \\<Union>\n        {V. \\<exists>xa.\n               xa \\<in> vars_of (Var x) \\<and>\n               V = vars_of (Var xa \\<lhd> \\<sigma>)}\n 2. \\<And>x.\n       vars_of (Const x \\<lhd> \\<sigma>) =\n       \\<Union>\n        {V. \\<exists>xa.\n               xa \\<in> vars_of (Const x) \\<and>\n               V = vars_of (Var xa \\<lhd> \\<sigma>)}\n 3. \\<And>t1 t2.\n       \\<lbrakk>vars_of (t1 \\<lhd> \\<sigma>) =\n                \\<Union>\n                 {V. \\<exists>x.\n                        x \\<in> vars_of t1 \\<and>\n                        V = vars_of (Var x \\<lhd> \\<sigma>)};\n        vars_of (t2 \\<lhd> \\<sigma>) =\n        \\<Union>\n         {V. \\<exists>x.\n                x \\<in> vars_of t2 \\<and>\n                V = vars_of (Var x \\<lhd> \\<sigma>)}\\<rbrakk>\n       \\<Longrightarrow> vars_of (t1 \\<cdot> t2 \\<lhd> \\<sigma>) =\n                         \\<Union>\n                          {V. \\<exists>x.\n                                 x \\<in> vars_of (t1 \\<cdot> t2) \\<and>\n                                 V = vars_of (Var x \\<lhd> \\<sigma>)}", "case (Const a)"], ["proof (state)\nthis:\n  \n\ngoal (3 subgoals):\n 1. \\<And>x.\n       vars_of (Var x \\<lhd> \\<sigma>) =\n       \\<Union>\n        {V. \\<exists>xa.\n               xa \\<in> vars_of (Var x) \\<and>\n               V = vars_of (Var xa \\<lhd> \\<sigma>)}\n 2. \\<And>x.\n       vars_of (Const x \\<lhd> \\<sigma>) =\n       \\<Union>\n        {V. \\<exists>xa.\n               xa \\<in> vars_of (Const x) \\<and>\n               V = vars_of (Var xa \\<lhd> \\<sigma>)}\n 3. \\<And>t1 t2.\n       \\<lbrakk>vars_of (t1 \\<lhd> \\<sigma>) =\n                \\<Union>\n                 {V. \\<exists>x.\n                        x \\<in> vars_of t1 \\<and>\n                        V = vars_of (Var x \\<lhd> \\<sigma>)};\n        vars_of (t2 \\<lhd> \\<sigma>) =\n        \\<Union>\n         {V. \\<exists>x.\n                x \\<in> vars_of t2 \\<and>\n                V = vars_of (Var x \\<lhd> \\<sigma>)}\\<rbrakk>\n       \\<Longrightarrow> vars_of (t1 \\<cdot> t2 \\<lhd> \\<sigma>) =\n                         \\<Union>\n                          {V. \\<exists>x.\n                                 x \\<in> vars_of (t1 \\<cdot> t2) \\<and>\n                                 V = vars_of (Var x \\<lhd> \\<sigma>)}", "have \"vars_of (Const a) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars_of (Const a) = {}", "by auto"], ["proof (state)\nthis:\n  vars_of (Const a) = {}\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       vars_of (Var x \\<lhd> \\<sigma>) =\n       \\<Union>\n        {V. \\<exists>xa.\n               xa \\<in> vars_of (Var x) \\<and>\n               V = vars_of (Var xa \\<lhd> \\<sigma>)}\n 2. \\<And>x.\n       vars_of (Const x \\<lhd> \\<sigma>) =\n       \\<Union>\n        {V. \\<exists>xa.\n               xa \\<in> vars_of (Const x) \\<and>\n               V = vars_of (Var xa \\<lhd> \\<sigma>)}\n 3. \\<And>t1 t2.\n       \\<lbrakk>vars_of (t1 \\<lhd> \\<sigma>) =\n                \\<Union>\n                 {V. \\<exists>x.\n                        x \\<in> vars_of t1 \\<and>\n                        V = vars_of (Var x \\<lhd> \\<sigma>)};\n        vars_of (t2 \\<lhd> \\<sigma>) =\n        \\<Union>\n         {V. \\<exists>x.\n                x \\<in> vars_of t2 \\<and>\n                V = vars_of (Var x \\<lhd> \\<sigma>)}\\<rbrakk>\n       \\<Longrightarrow> vars_of (t1 \\<cdot> t2 \\<lhd> \\<sigma>) =\n                         \\<Union>\n                          {V. \\<exists>x.\n                                 x \\<in> vars_of (t1 \\<cdot> t2) \\<and>\n                                 V = vars_of (Var x \\<lhd> \\<sigma>)}", "then"], ["proof (chain)\npicking this:\n  vars_of (Const a) = {}", "have rhs_empty: \"\\<Union> { V. \\<exists>x. (x \\<in> (vars_of (Const a))) \\<and> (V = vars_of (subst (Var x) \\<sigma>)) } = {}\""], ["proof (prove)\nusing this:\n  vars_of (Const a) = {}\n\ngoal (1 subgoal):\n 1. \\<Union>\n     {V. \\<exists>x.\n            x \\<in> vars_of (Const a) \\<and>\n            V = vars_of (Var x \\<lhd> \\<sigma>)} =\n    {}", "by auto"], ["proof (state)\nthis:\n  \\<Union>\n   {V. \\<exists>x.\n          x \\<in> vars_of (Const a) \\<and>\n          V = vars_of (Var x \\<lhd> \\<sigma>)} =\n  {}\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       vars_of (Var x \\<lhd> \\<sigma>) =\n       \\<Union>\n        {V. \\<exists>xa.\n               xa \\<in> vars_of (Var x) \\<and>\n               V = vars_of (Var xa \\<lhd> \\<sigma>)}\n 2. \\<And>x.\n       vars_of (Const x \\<lhd> \\<sigma>) =\n       \\<Union>\n        {V. \\<exists>xa.\n               xa \\<in> vars_of (Const x) \\<and>\n               V = vars_of (Var xa \\<lhd> \\<sigma>)}\n 3. \\<And>t1 t2.\n       \\<lbrakk>vars_of (t1 \\<lhd> \\<sigma>) =\n                \\<Union>\n                 {V. \\<exists>x.\n                        x \\<in> vars_of t1 \\<and>\n                        V = vars_of (Var x \\<lhd> \\<sigma>)};\n        vars_of (t2 \\<lhd> \\<sigma>) =\n        \\<Union>\n         {V. \\<exists>x.\n                x \\<in> vars_of t2 \\<and>\n                V = vars_of (Var x \\<lhd> \\<sigma>)}\\<rbrakk>\n       \\<Longrightarrow> vars_of (t1 \\<cdot> t2 \\<lhd> \\<sigma>) =\n                         \\<Union>\n                          {V. \\<exists>x.\n                                 x \\<in> vars_of (t1 \\<cdot> t2) \\<and>\n                                 V = vars_of (Var x \\<lhd> \\<sigma>)}", "have lhs_empty: \"(subst (Const a) \\<sigma>) = (Const a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Const a \\<lhd> \\<sigma> = Const a", "by auto"], ["proof (state)\nthis:\n  Const a \\<lhd> \\<sigma> = Const a\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       vars_of (Var x \\<lhd> \\<sigma>) =\n       \\<Union>\n        {V. \\<exists>xa.\n               xa \\<in> vars_of (Var x) \\<and>\n               V = vars_of (Var xa \\<lhd> \\<sigma>)}\n 2. \\<And>x.\n       vars_of (Const x \\<lhd> \\<sigma>) =\n       \\<Union>\n        {V. \\<exists>xa.\n               xa \\<in> vars_of (Const x) \\<and>\n               V = vars_of (Var xa \\<lhd> \\<sigma>)}\n 3. \\<And>t1 t2.\n       \\<lbrakk>vars_of (t1 \\<lhd> \\<sigma>) =\n                \\<Union>\n                 {V. \\<exists>x.\n                        x \\<in> vars_of t1 \\<and>\n                        V = vars_of (Var x \\<lhd> \\<sigma>)};\n        vars_of (t2 \\<lhd> \\<sigma>) =\n        \\<Union>\n         {V. \\<exists>x.\n                x \\<in> vars_of t2 \\<and>\n                V = vars_of (Var x \\<lhd> \\<sigma>)}\\<rbrakk>\n       \\<Longrightarrow> vars_of (t1 \\<cdot> t2 \\<lhd> \\<sigma>) =\n                         \\<Union>\n                          {V. \\<exists>x.\n                                 x \\<in> vars_of (t1 \\<cdot> t2) \\<and>\n                                 V = vars_of (Var x \\<lhd> \\<sigma>)}", "from rhs_empty and lhs_empty"], ["proof (chain)\npicking this:\n  \\<Union>\n   {V. \\<exists>x.\n          x \\<in> vars_of (Const a) \\<and>\n          V = vars_of (Var x \\<lhd> \\<sigma>)} =\n  {}\n  Const a \\<lhd> \\<sigma> = Const a", "show ?case"], ["proof (prove)\nusing this:\n  \\<Union>\n   {V. \\<exists>x.\n          x \\<in> vars_of (Const a) \\<and>\n          V = vars_of (Var x \\<lhd> \\<sigma>)} =\n  {}\n  Const a \\<lhd> \\<sigma> = Const a\n\ngoal (1 subgoal):\n 1. vars_of (Const a \\<lhd> \\<sigma>) =\n    \\<Union>\n     {V. \\<exists>x.\n            x \\<in> vars_of (Const a) \\<and>\n            V = vars_of (Var x \\<lhd> \\<sigma>)}", "by auto"], ["proof (state)\nthis:\n  vars_of (Const a \\<lhd> \\<sigma>) =\n  \\<Union>\n   {V. \\<exists>x.\n          x \\<in> vars_of (Const a) \\<and>\n          V = vars_of (Var x \\<lhd> \\<sigma>)}\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       vars_of (Var x \\<lhd> \\<sigma>) =\n       \\<Union>\n        {V. \\<exists>xa.\n               xa \\<in> vars_of (Var x) \\<and>\n               V = vars_of (Var xa \\<lhd> \\<sigma>)}\n 2. \\<And>t1 t2.\n       \\<lbrakk>vars_of (t1 \\<lhd> \\<sigma>) =\n                \\<Union>\n                 {V. \\<exists>x.\n                        x \\<in> vars_of t1 \\<and>\n                        V = vars_of (Var x \\<lhd> \\<sigma>)};\n        vars_of (t2 \\<lhd> \\<sigma>) =\n        \\<Union>\n         {V. \\<exists>x.\n                x \\<in> vars_of t2 \\<and>\n                V = vars_of (Var x \\<lhd> \\<sigma>)}\\<rbrakk>\n       \\<Longrightarrow> vars_of (t1 \\<cdot> t2 \\<lhd> \\<sigma>) =\n                         \\<Union>\n                          {V. \\<exists>x.\n                                 x \\<in> vars_of (t1 \\<cdot> t2) \\<and>\n                                 V = vars_of (Var x \\<lhd> \\<sigma>)}", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       vars_of (Var x \\<lhd> \\<sigma>) =\n       \\<Union>\n        {V. \\<exists>xa.\n               xa \\<in> vars_of (Var x) \\<and>\n               V = vars_of (Var xa \\<lhd> \\<sigma>)}\n 2. \\<And>t1 t2.\n       \\<lbrakk>vars_of (t1 \\<lhd> \\<sigma>) =\n                \\<Union>\n                 {V. \\<exists>x.\n                        x \\<in> vars_of t1 \\<and>\n                        V = vars_of (Var x \\<lhd> \\<sigma>)};\n        vars_of (t2 \\<lhd> \\<sigma>) =\n        \\<Union>\n         {V. \\<exists>x.\n                x \\<in> vars_of t2 \\<and>\n                V = vars_of (Var x \\<lhd> \\<sigma>)}\\<rbrakk>\n       \\<Longrightarrow> vars_of (t1 \\<cdot> t2 \\<lhd> \\<sigma>) =\n                         \\<Union>\n                          {V. \\<exists>x.\n                                 x \\<in> vars_of (t1 \\<cdot> t2) \\<and>\n                                 V = vars_of (Var x \\<lhd> \\<sigma>)}", "case (Var a)"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>x.\n       vars_of (Var x \\<lhd> \\<sigma>) =\n       \\<Union>\n        {V. \\<exists>xa.\n               xa \\<in> vars_of (Var x) \\<and>\n               V = vars_of (Var xa \\<lhd> \\<sigma>)}\n 2. \\<And>t1 t2.\n       \\<lbrakk>vars_of (t1 \\<lhd> \\<sigma>) =\n                \\<Union>\n                 {V. \\<exists>x.\n                        x \\<in> vars_of t1 \\<and>\n                        V = vars_of (Var x \\<lhd> \\<sigma>)};\n        vars_of (t2 \\<lhd> \\<sigma>) =\n        \\<Union>\n         {V. \\<exists>x.\n                x \\<in> vars_of t2 \\<and>\n                V = vars_of (Var x \\<lhd> \\<sigma>)}\\<rbrakk>\n       \\<Longrightarrow> vars_of (t1 \\<cdot> t2 \\<lhd> \\<sigma>) =\n                         \\<Union>\n                          {V. \\<exists>x.\n                                 x \\<in> vars_of (t1 \\<cdot> t2) \\<and>\n                                 V = vars_of (Var x \\<lhd> \\<sigma>)}", "have \"vars_of (Var a) = { a }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars_of (Var a) = {a}", "by auto"], ["proof (state)\nthis:\n  vars_of (Var a) = {a}\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       vars_of (Var x \\<lhd> \\<sigma>) =\n       \\<Union>\n        {V. \\<exists>xa.\n               xa \\<in> vars_of (Var x) \\<and>\n               V = vars_of (Var xa \\<lhd> \\<sigma>)}\n 2. \\<And>t1 t2.\n       \\<lbrakk>vars_of (t1 \\<lhd> \\<sigma>) =\n                \\<Union>\n                 {V. \\<exists>x.\n                        x \\<in> vars_of t1 \\<and>\n                        V = vars_of (Var x \\<lhd> \\<sigma>)};\n        vars_of (t2 \\<lhd> \\<sigma>) =\n        \\<Union>\n         {V. \\<exists>x.\n                x \\<in> vars_of t2 \\<and>\n                V = vars_of (Var x \\<lhd> \\<sigma>)}\\<rbrakk>\n       \\<Longrightarrow> vars_of (t1 \\<cdot> t2 \\<lhd> \\<sigma>) =\n                         \\<Union>\n                          {V. \\<exists>x.\n                                 x \\<in> vars_of (t1 \\<cdot> t2) \\<and>\n                                 V = vars_of (Var x \\<lhd> \\<sigma>)}", "then"], ["proof (chain)\npicking this:\n  vars_of (Var a) = {a}", "have rhs: \"\\<Union> { V. \\<exists>x. (x \\<in> (vars_of (Var a))) \\<and> (V = vars_of (subst (Var x) \\<sigma>)) } = \n     vars_of (subst (Var a) \\<sigma>)\""], ["proof (prove)\nusing this:\n  vars_of (Var a) = {a}\n\ngoal (1 subgoal):\n 1. \\<Union>\n     {V. \\<exists>x.\n            x \\<in> vars_of (Var a) \\<and>\n            V = vars_of (Var x \\<lhd> \\<sigma>)} =\n    vars_of (Var a \\<lhd> \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  \\<Union>\n   {V. \\<exists>x.\n          x \\<in> vars_of (Var a) \\<and>\n          V = vars_of (Var x \\<lhd> \\<sigma>)} =\n  vars_of (Var a \\<lhd> \\<sigma>)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       vars_of (Var x \\<lhd> \\<sigma>) =\n       \\<Union>\n        {V. \\<exists>xa.\n               xa \\<in> vars_of (Var x) \\<and>\n               V = vars_of (Var xa \\<lhd> \\<sigma>)}\n 2. \\<And>t1 t2.\n       \\<lbrakk>vars_of (t1 \\<lhd> \\<sigma>) =\n                \\<Union>\n                 {V. \\<exists>x.\n                        x \\<in> vars_of t1 \\<and>\n                        V = vars_of (Var x \\<lhd> \\<sigma>)};\n        vars_of (t2 \\<lhd> \\<sigma>) =\n        \\<Union>\n         {V. \\<exists>x.\n                x \\<in> vars_of t2 \\<and>\n                V = vars_of (Var x \\<lhd> \\<sigma>)}\\<rbrakk>\n       \\<Longrightarrow> vars_of (t1 \\<cdot> t2 \\<lhd> \\<sigma>) =\n                         \\<Union>\n                          {V. \\<exists>x.\n                                 x \\<in> vars_of (t1 \\<cdot> t2) \\<and>\n                                 V = vars_of (Var x \\<lhd> \\<sigma>)}", "have lhs: \"(subst (Var a) \\<sigma>) = (subst (Var a) \\<sigma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Var a \\<lhd> \\<sigma> = Var a \\<lhd> \\<sigma>", "by auto"], ["proof (state)\nthis:\n  Var a \\<lhd> \\<sigma> = Var a \\<lhd> \\<sigma>\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       vars_of (Var x \\<lhd> \\<sigma>) =\n       \\<Union>\n        {V. \\<exists>xa.\n               xa \\<in> vars_of (Var x) \\<and>\n               V = vars_of (Var xa \\<lhd> \\<sigma>)}\n 2. \\<And>t1 t2.\n       \\<lbrakk>vars_of (t1 \\<lhd> \\<sigma>) =\n                \\<Union>\n                 {V. \\<exists>x.\n                        x \\<in> vars_of t1 \\<and>\n                        V = vars_of (Var x \\<lhd> \\<sigma>)};\n        vars_of (t2 \\<lhd> \\<sigma>) =\n        \\<Union>\n         {V. \\<exists>x.\n                x \\<in> vars_of t2 \\<and>\n                V = vars_of (Var x \\<lhd> \\<sigma>)}\\<rbrakk>\n       \\<Longrightarrow> vars_of (t1 \\<cdot> t2 \\<lhd> \\<sigma>) =\n                         \\<Union>\n                          {V. \\<exists>x.\n                                 x \\<in> vars_of (t1 \\<cdot> t2) \\<and>\n                                 V = vars_of (Var x \\<lhd> \\<sigma>)}", "from rhs and lhs"], ["proof (chain)\npicking this:\n  \\<Union>\n   {V. \\<exists>x.\n          x \\<in> vars_of (Var a) \\<and>\n          V = vars_of (Var x \\<lhd> \\<sigma>)} =\n  vars_of (Var a \\<lhd> \\<sigma>)\n  Var a \\<lhd> \\<sigma> = Var a \\<lhd> \\<sigma>", "show ?case"], ["proof (prove)\nusing this:\n  \\<Union>\n   {V. \\<exists>x.\n          x \\<in> vars_of (Var a) \\<and>\n          V = vars_of (Var x \\<lhd> \\<sigma>)} =\n  vars_of (Var a \\<lhd> \\<sigma>)\n  Var a \\<lhd> \\<sigma> = Var a \\<lhd> \\<sigma>\n\ngoal (1 subgoal):\n 1. vars_of (Var a \\<lhd> \\<sigma>) =\n    \\<Union>\n     {V. \\<exists>x.\n            x \\<in> vars_of (Var a) \\<and>\n            V = vars_of (Var x \\<lhd> \\<sigma>)}", "by auto"], ["proof (state)\nthis:\n  vars_of (Var a \\<lhd> \\<sigma>) =\n  \\<Union>\n   {V. \\<exists>x.\n          x \\<in> vars_of (Var a) \\<and>\n          V = vars_of (Var x \\<lhd> \\<sigma>)}\n\ngoal (1 subgoal):\n 1. \\<And>t1 t2.\n       \\<lbrakk>vars_of (t1 \\<lhd> \\<sigma>) =\n                \\<Union>\n                 {V. \\<exists>x.\n                        x \\<in> vars_of t1 \\<and>\n                        V = vars_of (Var x \\<lhd> \\<sigma>)};\n        vars_of (t2 \\<lhd> \\<sigma>) =\n        \\<Union>\n         {V. \\<exists>x.\n                x \\<in> vars_of t2 \\<and>\n                V = vars_of (Var x \\<lhd> \\<sigma>)}\\<rbrakk>\n       \\<Longrightarrow> vars_of (t1 \\<cdot> t2 \\<lhd> \\<sigma>) =\n                         \\<Union>\n                          {V. \\<exists>x.\n                                 x \\<in> vars_of (t1 \\<cdot> t2) \\<and>\n                                 V = vars_of (Var x \\<lhd> \\<sigma>)}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 t2.\n       \\<lbrakk>vars_of (t1 \\<lhd> \\<sigma>) =\n                \\<Union>\n                 {V. \\<exists>x.\n                        x \\<in> vars_of t1 \\<and>\n                        V = vars_of (Var x \\<lhd> \\<sigma>)};\n        vars_of (t2 \\<lhd> \\<sigma>) =\n        \\<Union>\n         {V. \\<exists>x.\n                x \\<in> vars_of t2 \\<and>\n                V = vars_of (Var x \\<lhd> \\<sigma>)}\\<rbrakk>\n       \\<Longrightarrow> vars_of (t1 \\<cdot> t2 \\<lhd> \\<sigma>) =\n                         \\<Union>\n                          {V. \\<exists>x.\n                                 x \\<in> vars_of (t1 \\<cdot> t2) \\<and>\n                                 V = vars_of (Var x \\<lhd> \\<sigma>)}", "case (Comb t1 t2)"], ["proof (state)\nthis:\n  vars_of (t1 \\<lhd> \\<sigma>) =\n  \\<Union>\n   {V. \\<exists>x.\n          x \\<in> vars_of t1 \\<and> V = vars_of (Var x \\<lhd> \\<sigma>)}\n  vars_of (t2 \\<lhd> \\<sigma>) =\n  \\<Union>\n   {V. \\<exists>x.\n          x \\<in> vars_of t2 \\<and> V = vars_of (Var x \\<lhd> \\<sigma>)}\n\ngoal (1 subgoal):\n 1. \\<And>t1 t2.\n       \\<lbrakk>vars_of (t1 \\<lhd> \\<sigma>) =\n                \\<Union>\n                 {V. \\<exists>x.\n                        x \\<in> vars_of t1 \\<and>\n                        V = vars_of (Var x \\<lhd> \\<sigma>)};\n        vars_of (t2 \\<lhd> \\<sigma>) =\n        \\<Union>\n         {V. \\<exists>x.\n                x \\<in> vars_of t2 \\<and>\n                V = vars_of (Var x \\<lhd> \\<sigma>)}\\<rbrakk>\n       \\<Longrightarrow> vars_of (t1 \\<cdot> t2 \\<lhd> \\<sigma>) =\n                         \\<Union>\n                          {V. \\<exists>x.\n                                 x \\<in> vars_of (t1 \\<cdot> t2) \\<and>\n                                 V = vars_of (Var x \\<lhd> \\<sigma>)}", "have \"vars_of (Comb t1 t2) = (vars_of t1) \\<union> (vars_of t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars_of (t1 \\<cdot> t2) = vars_of t1 \\<union> vars_of t2", "by auto"], ["proof (state)\nthis:\n  vars_of (t1 \\<cdot> t2) = vars_of t1 \\<union> vars_of t2\n\ngoal (1 subgoal):\n 1. \\<And>t1 t2.\n       \\<lbrakk>vars_of (t1 \\<lhd> \\<sigma>) =\n                \\<Union>\n                 {V. \\<exists>x.\n                        x \\<in> vars_of t1 \\<and>\n                        V = vars_of (Var x \\<lhd> \\<sigma>)};\n        vars_of (t2 \\<lhd> \\<sigma>) =\n        \\<Union>\n         {V. \\<exists>x.\n                x \\<in> vars_of t2 \\<and>\n                V = vars_of (Var x \\<lhd> \\<sigma>)}\\<rbrakk>\n       \\<Longrightarrow> vars_of (t1 \\<cdot> t2 \\<lhd> \\<sigma>) =\n                         \\<Union>\n                          {V. \\<exists>x.\n                                 x \\<in> vars_of (t1 \\<cdot> t2) \\<and>\n                                 V = vars_of (Var x \\<lhd> \\<sigma>)}", "then"], ["proof (chain)\npicking this:\n  vars_of (t1 \\<cdot> t2) = vars_of t1 \\<union> vars_of t2", "have \"\\<Union> { V. \\<exists>x. (x \\<in> (vars_of (Comb t1 t2))) \\<and> (V = vars_of (subst (Var x) \\<sigma>)) } \n      = \\<Union> { V. \\<exists>x. (x \\<in> (vars_of t1)) \\<and> (V = vars_of (subst(Var x) \\<sigma>)) }   \n        \\<union> \\<Union> { V. \\<exists>x. (x \\<in> (vars_of t2)) \\<and> (V = vars_of (subst (Var x) \\<sigma>)) }\""], ["proof (prove)\nusing this:\n  vars_of (t1 \\<cdot> t2) = vars_of t1 \\<union> vars_of t2\n\ngoal (1 subgoal):\n 1. \\<Union>\n     {V. \\<exists>x.\n            x \\<in> vars_of (t1 \\<cdot> t2) \\<and>\n            V = vars_of (Var x \\<lhd> \\<sigma>)} =\n    \\<Union>\n     {V. \\<exists>x.\n            x \\<in> vars_of t1 \\<and>\n            V = vars_of (Var x \\<lhd> \\<sigma>)} \\<union>\n    \\<Union>\n     {V. \\<exists>x.\n            x \\<in> vars_of t2 \\<and> V = vars_of (Var x \\<lhd> \\<sigma>)}", "by auto"], ["proof (state)\nthis:\n  \\<Union>\n   {V. \\<exists>x.\n          x \\<in> vars_of (t1 \\<cdot> t2) \\<and>\n          V = vars_of (Var x \\<lhd> \\<sigma>)} =\n  \\<Union>\n   {V. \\<exists>x.\n          x \\<in> vars_of t1 \\<and>\n          V = vars_of (Var x \\<lhd> \\<sigma>)} \\<union>\n  \\<Union>\n   {V. \\<exists>x.\n          x \\<in> vars_of t2 \\<and> V = vars_of (Var x \\<lhd> \\<sigma>)}\n\ngoal (1 subgoal):\n 1. \\<And>t1 t2.\n       \\<lbrakk>vars_of (t1 \\<lhd> \\<sigma>) =\n                \\<Union>\n                 {V. \\<exists>x.\n                        x \\<in> vars_of t1 \\<and>\n                        V = vars_of (Var x \\<lhd> \\<sigma>)};\n        vars_of (t2 \\<lhd> \\<sigma>) =\n        \\<Union>\n         {V. \\<exists>x.\n                x \\<in> vars_of t2 \\<and>\n                V = vars_of (Var x \\<lhd> \\<sigma>)}\\<rbrakk>\n       \\<Longrightarrow> vars_of (t1 \\<cdot> t2 \\<lhd> \\<sigma>) =\n                         \\<Union>\n                          {V. \\<exists>x.\n                                 x \\<in> vars_of (t1 \\<cdot> t2) \\<and>\n                                 V = vars_of (Var x \\<lhd> \\<sigma>)}", "then"], ["proof (chain)\npicking this:\n  \\<Union>\n   {V. \\<exists>x.\n          x \\<in> vars_of (t1 \\<cdot> t2) \\<and>\n          V = vars_of (Var x \\<lhd> \\<sigma>)} =\n  \\<Union>\n   {V. \\<exists>x.\n          x \\<in> vars_of t1 \\<and>\n          V = vars_of (Var x \\<lhd> \\<sigma>)} \\<union>\n  \\<Union>\n   {V. \\<exists>x.\n          x \\<in> vars_of t2 \\<and> V = vars_of (Var x \\<lhd> \\<sigma>)}", "have rhs: \"\\<Union> { V. \\<exists>x. (x \\<in> (vars_of (Comb t1 t2))) \\<and> (V = vars_of (subst (Var x) \\<sigma>)) } \n      = (vars_of (subst t1 \\<sigma>))  \\<union> (vars_of (subst t2 \\<sigma>))\""], ["proof (prove)\nusing this:\n  \\<Union>\n   {V. \\<exists>x.\n          x \\<in> vars_of (t1 \\<cdot> t2) \\<and>\n          V = vars_of (Var x \\<lhd> \\<sigma>)} =\n  \\<Union>\n   {V. \\<exists>x.\n          x \\<in> vars_of t1 \\<and>\n          V = vars_of (Var x \\<lhd> \\<sigma>)} \\<union>\n  \\<Union>\n   {V. \\<exists>x.\n          x \\<in> vars_of t2 \\<and> V = vars_of (Var x \\<lhd> \\<sigma>)}\n\ngoal (1 subgoal):\n 1. \\<Union>\n     {V. \\<exists>x.\n            x \\<in> vars_of (t1 \\<cdot> t2) \\<and>\n            V = vars_of (Var x \\<lhd> \\<sigma>)} =\n    vars_of (t1 \\<lhd> \\<sigma>) \\<union> vars_of (t2 \\<lhd> \\<sigma>)", "using \\<open>vars_of (subst t1 \\<sigma>) \n              = \\<Union> { V. \\<exists>x. (x \\<in> (vars_of t1)) \\<and> (V = vars_of (subst (Var x) \\<sigma>)) }\\<close>\n        and\n            \\<open>vars_of (subst t2 \\<sigma>) \n              = \\<Union> { V. \\<exists>x. (x \\<in> (vars_of t2)) \\<and> (V = vars_of (subst (Var x) \\<sigma>)) }\\<close>"], ["proof (prove)\nusing this:\n  \\<Union>\n   {V. \\<exists>x.\n          x \\<in> vars_of (t1 \\<cdot> t2) \\<and>\n          V = vars_of (Var x \\<lhd> \\<sigma>)} =\n  \\<Union>\n   {V. \\<exists>x.\n          x \\<in> vars_of t1 \\<and>\n          V = vars_of (Var x \\<lhd> \\<sigma>)} \\<union>\n  \\<Union>\n   {V. \\<exists>x.\n          x \\<in> vars_of t2 \\<and> V = vars_of (Var x \\<lhd> \\<sigma>)}\n  vars_of (t1 \\<lhd> \\<sigma>) =\n  \\<Union>\n   {V. \\<exists>x.\n          x \\<in> vars_of t1 \\<and> V = vars_of (Var x \\<lhd> \\<sigma>)}\n  vars_of (t2 \\<lhd> \\<sigma>) =\n  \\<Union>\n   {V. \\<exists>x.\n          x \\<in> vars_of t2 \\<and> V = vars_of (Var x \\<lhd> \\<sigma>)}\n\ngoal (1 subgoal):\n 1. \\<Union>\n     {V. \\<exists>x.\n            x \\<in> vars_of (t1 \\<cdot> t2) \\<and>\n            V = vars_of (Var x \\<lhd> \\<sigma>)} =\n    vars_of (t1 \\<lhd> \\<sigma>) \\<union> vars_of (t2 \\<lhd> \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  \\<Union>\n   {V. \\<exists>x.\n          x \\<in> vars_of (t1 \\<cdot> t2) \\<and>\n          V = vars_of (Var x \\<lhd> \\<sigma>)} =\n  vars_of (t1 \\<lhd> \\<sigma>) \\<union> vars_of (t2 \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<And>t1 t2.\n       \\<lbrakk>vars_of (t1 \\<lhd> \\<sigma>) =\n                \\<Union>\n                 {V. \\<exists>x.\n                        x \\<in> vars_of t1 \\<and>\n                        V = vars_of (Var x \\<lhd> \\<sigma>)};\n        vars_of (t2 \\<lhd> \\<sigma>) =\n        \\<Union>\n         {V. \\<exists>x.\n                x \\<in> vars_of t2 \\<and>\n                V = vars_of (Var x \\<lhd> \\<sigma>)}\\<rbrakk>\n       \\<Longrightarrow> vars_of (t1 \\<cdot> t2 \\<lhd> \\<sigma>) =\n                         \\<Union>\n                          {V. \\<exists>x.\n                                 x \\<in> vars_of (t1 \\<cdot> t2) \\<and>\n                                 V = vars_of (Var x \\<lhd> \\<sigma>)}", "have \"(subst (Comb t1 t2) \\<sigma>) = (Comb (subst t1 \\<sigma>) (subst t2 \\<sigma>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t1 \\<cdot> t2 \\<lhd> \\<sigma> =\n    (t1 \\<lhd> \\<sigma>) \\<cdot> (t2 \\<lhd> \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  t1 \\<cdot> t2 \\<lhd> \\<sigma> =\n  (t1 \\<lhd> \\<sigma>) \\<cdot> (t2 \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<And>t1 t2.\n       \\<lbrakk>vars_of (t1 \\<lhd> \\<sigma>) =\n                \\<Union>\n                 {V. \\<exists>x.\n                        x \\<in> vars_of t1 \\<and>\n                        V = vars_of (Var x \\<lhd> \\<sigma>)};\n        vars_of (t2 \\<lhd> \\<sigma>) =\n        \\<Union>\n         {V. \\<exists>x.\n                x \\<in> vars_of t2 \\<and>\n                V = vars_of (Var x \\<lhd> \\<sigma>)}\\<rbrakk>\n       \\<Longrightarrow> vars_of (t1 \\<cdot> t2 \\<lhd> \\<sigma>) =\n                         \\<Union>\n                          {V. \\<exists>x.\n                                 x \\<in> vars_of (t1 \\<cdot> t2) \\<and>\n                                 V = vars_of (Var x \\<lhd> \\<sigma>)}", "then"], ["proof (chain)\npicking this:\n  t1 \\<cdot> t2 \\<lhd> \\<sigma> =\n  (t1 \\<lhd> \\<sigma>) \\<cdot> (t2 \\<lhd> \\<sigma>)", "have lhs: \"(vars_of (subst (Comb t1 t2) \\<sigma>)) = \n      (vars_of (subst t1 \\<sigma>)) \\<union> (vars_of (subst t2 \\<sigma>))\""], ["proof (prove)\nusing this:\n  t1 \\<cdot> t2 \\<lhd> \\<sigma> =\n  (t1 \\<lhd> \\<sigma>) \\<cdot> (t2 \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. vars_of (t1 \\<cdot> t2 \\<lhd> \\<sigma>) =\n    vars_of (t1 \\<lhd> \\<sigma>) \\<union> vars_of (t2 \\<lhd> \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  vars_of (t1 \\<cdot> t2 \\<lhd> \\<sigma>) =\n  vars_of (t1 \\<lhd> \\<sigma>) \\<union> vars_of (t2 \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<And>t1 t2.\n       \\<lbrakk>vars_of (t1 \\<lhd> \\<sigma>) =\n                \\<Union>\n                 {V. \\<exists>x.\n                        x \\<in> vars_of t1 \\<and>\n                        V = vars_of (Var x \\<lhd> \\<sigma>)};\n        vars_of (t2 \\<lhd> \\<sigma>) =\n        \\<Union>\n         {V. \\<exists>x.\n                x \\<in> vars_of t2 \\<and>\n                V = vars_of (Var x \\<lhd> \\<sigma>)}\\<rbrakk>\n       \\<Longrightarrow> vars_of (t1 \\<cdot> t2 \\<lhd> \\<sigma>) =\n                         \\<Union>\n                          {V. \\<exists>x.\n                                 x \\<in> vars_of (t1 \\<cdot> t2) \\<and>\n                                 V = vars_of (Var x \\<lhd> \\<sigma>)}", "from lhs and rhs"], ["proof (chain)\npicking this:\n  vars_of (t1 \\<cdot> t2 \\<lhd> \\<sigma>) =\n  vars_of (t1 \\<lhd> \\<sigma>) \\<union> vars_of (t2 \\<lhd> \\<sigma>)\n  \\<Union>\n   {V. \\<exists>x.\n          x \\<in> vars_of (t1 \\<cdot> t2) \\<and>\n          V = vars_of (Var x \\<lhd> \\<sigma>)} =\n  vars_of (t1 \\<lhd> \\<sigma>) \\<union> vars_of (t2 \\<lhd> \\<sigma>)", "show ?case"], ["proof (prove)\nusing this:\n  vars_of (t1 \\<cdot> t2 \\<lhd> \\<sigma>) =\n  vars_of (t1 \\<lhd> \\<sigma>) \\<union> vars_of (t2 \\<lhd> \\<sigma>)\n  \\<Union>\n   {V. \\<exists>x.\n          x \\<in> vars_of (t1 \\<cdot> t2) \\<and>\n          V = vars_of (Var x \\<lhd> \\<sigma>)} =\n  vars_of (t1 \\<lhd> \\<sigma>) \\<union> vars_of (t2 \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. vars_of (t1 \\<cdot> t2 \\<lhd> \\<sigma>) =\n    \\<Union>\n     {V. \\<exists>x.\n            x \\<in> vars_of (t1 \\<cdot> t2) \\<and>\n            V = vars_of (Var x \\<lhd> \\<sigma>)}", "by auto"], ["proof (state)\nthis:\n  vars_of (t1 \\<cdot> t2 \\<lhd> \\<sigma>) =\n  \\<Union>\n   {V. \\<exists>x.\n          x \\<in> vars_of (t1 \\<cdot> t2) \\<and>\n          V = vars_of (Var x \\<lhd> \\<sigma>)}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subterms_of_instances :\n   \"\\<forall>u v u' s. (u = (subst v s) \\<longrightarrow> (subterm u p u') \n    \\<longrightarrow> (\\<exists>x q1 q2. (is_a_variable x) \\<and> (subterm (subst x s) q1 u') \\<and> \n                      (subterm v q2 x) \\<and> (p = (append q2 q1))) \\<or> \n        ((\\<exists> v'. ((\\<not> is_a_variable v') \\<and> (subterm v p v') \\<and> (u' = (subst v' s))))))\" (is \"?prop p\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>u v u' s.\n       u = v \\<lhd> s \\<longrightarrow>\n       subterm u p u' \\<longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> p = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v p v' \\<and> u' = v' \\<lhd> s)", "proof (induction p)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>u v u' s.\n       u = v \\<lhd> s \\<longrightarrow>\n       subterm u [] u' \\<longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> [] = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v [] v' \\<and> u' = v' \\<lhd> s)\n 2. \\<And>a p.\n       \\<forall>u v u' s.\n          u = v \\<lhd> s \\<longrightarrow>\n          subterm u p u' \\<longrightarrow>\n          (\\<exists>x q1 q2.\n              is_a_variable x \\<and>\n              subterm (x \\<lhd> s) q1 u' \\<and>\n              subterm v q2 x \\<and> p = q2 @ q1) \\<or>\n          (\\<exists>v'.\n              \\<not> is_a_variable v' \\<and>\n              subterm v p v' \\<and> u' = v' \\<lhd> s) \\<Longrightarrow>\n       \\<forall>u v u' s.\n          u = v \\<lhd> s \\<longrightarrow>\n          subterm u (a # p) u' \\<longrightarrow>\n          (\\<exists>x q1 q2.\n              is_a_variable x \\<and>\n              subterm (x \\<lhd> s) q1 u' \\<and>\n              subterm v q2 x \\<and> a # p = q2 @ q1) \\<or>\n          (\\<exists>v'.\n              \\<not> is_a_variable v' \\<and>\n              subterm v (a # p) v' \\<and> u' = v' \\<lhd> s)", "case Nil"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<forall>u v u' s.\n       u = v \\<lhd> s \\<longrightarrow>\n       subterm u [] u' \\<longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> [] = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v [] v' \\<and> u' = v' \\<lhd> s)\n 2. \\<And>a p.\n       \\<forall>u v u' s.\n          u = v \\<lhd> s \\<longrightarrow>\n          subterm u p u' \\<longrightarrow>\n          (\\<exists>x q1 q2.\n              is_a_variable x \\<and>\n              subterm (x \\<lhd> s) q1 u' \\<and>\n              subterm v q2 x \\<and> p = q2 @ q1) \\<or>\n          (\\<exists>v'.\n              \\<not> is_a_variable v' \\<and>\n              subterm v p v' \\<and> u' = v' \\<lhd> s) \\<Longrightarrow>\n       \\<forall>u v u' s.\n          u = v \\<lhd> s \\<longrightarrow>\n          subterm u (a # p) u' \\<longrightarrow>\n          (\\<exists>x q1 q2.\n              is_a_variable x \\<and>\n              subterm (x \\<lhd> s) q1 u' \\<and>\n              subterm v q2 x \\<and> a # p = q2 @ q1) \\<or>\n          (\\<exists>v'.\n              \\<not> is_a_variable v' \\<and>\n              subterm v (a # p) v' \\<and> u' = v' \\<lhd> s)", "show \"?case\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>u v u' s.\n       u = v \\<lhd> s \\<longrightarrow>\n       subterm u [] u' \\<longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> [] = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v [] v' \\<and> u' = v' \\<lhd> s)", "proof ((rule allI)+,(rule impI)+)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u v u' s.\n       \\<lbrakk>u = v \\<lhd> s; subterm u [] u'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>x q1 q2.\n                             is_a_variable x \\<and>\n                             subterm (x \\<lhd> s) q1 u' \\<and>\n                             subterm v q2 x \\<and> [] = q2 @ q1) \\<or>\n                         (\\<exists>v'.\n                             \\<not> is_a_variable v' \\<and>\n                             subterm v [] v' \\<and> u' = v' \\<lhd> s)", "fix u ::\"'a trm\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u v u' s.\n       \\<lbrakk>u = v \\<lhd> s; subterm u [] u'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>x q1 q2.\n                             is_a_variable x \\<and>\n                             subterm (x \\<lhd> s) q1 u' \\<and>\n                             subterm v q2 x \\<and> [] = q2 @ q1) \\<or>\n                         (\\<exists>v'.\n                             \\<not> is_a_variable v' \\<and>\n                             subterm v [] v' \\<and> u' = v' \\<lhd> s)", "fix v u' s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u v u' s.\n       \\<lbrakk>u = v \\<lhd> s; subterm u [] u'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>x q1 q2.\n                             is_a_variable x \\<and>\n                             subterm (x \\<lhd> s) q1 u' \\<and>\n                             subterm v q2 x \\<and> [] = q2 @ q1) \\<or>\n                         (\\<exists>v'.\n                             \\<not> is_a_variable v' \\<and>\n                             subterm v [] v' \\<and> u' = v' \\<lhd> s)", "assume \"u = (subst v s)\" and \"subterm u [] u'\""], ["proof (state)\nthis:\n  u = v \\<lhd> s\n  subterm u [] u'\n\ngoal (1 subgoal):\n 1. \\<And>u v u' s.\n       \\<lbrakk>u = v \\<lhd> s; subterm u [] u'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>x q1 q2.\n                             is_a_variable x \\<and>\n                             subterm (x \\<lhd> s) q1 u' \\<and>\n                             subterm v q2 x \\<and> [] = q2 @ q1) \\<or>\n                         (\\<exists>v'.\n                             \\<not> is_a_variable v' \\<and>\n                             subterm v [] v' \\<and> u' = v' \\<lhd> s)", "then"], ["proof (chain)\npicking this:\n  u = v \\<lhd> s\n  subterm u [] u'", "have \"u = u'\""], ["proof (prove)\nusing this:\n  u = v \\<lhd> s\n  subterm u [] u'\n\ngoal (1 subgoal):\n 1. u = u'", "by auto"], ["proof (state)\nthis:\n  u = u'\n\ngoal (1 subgoal):\n 1. \\<And>u v u' s.\n       \\<lbrakk>u = v \\<lhd> s; subterm u [] u'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>x q1 q2.\n                             is_a_variable x \\<and>\n                             subterm (x \\<lhd> s) q1 u' \\<and>\n                             subterm v q2 x \\<and> [] = q2 @ q1) \\<or>\n                         (\\<exists>v'.\n                             \\<not> is_a_variable v' \\<and>\n                             subterm v [] v' \\<and> u' = v' \\<lhd> s)", "show \"(\\<exists>x q1 q2. (is_a_variable x) \\<and> (subterm (subst x s) q1 u') \\<and> \n                      (subterm v q2 x) \\<and> ([] = (append q2 q1))) \\<or> \n        ((\\<exists> v'. ((\\<not> is_a_variable v') \\<and> (subterm v [] v') \\<and> (u' = (subst v' s)))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>x q1 q2.\n        is_a_variable x \\<and>\n        subterm (x \\<lhd> s) q1 u' \\<and>\n        subterm v q2 x \\<and> [] = q2 @ q1) \\<or>\n    (\\<exists>v'.\n        \\<not> is_a_variable v' \\<and>\n        subterm v [] v' \\<and> u' = v' \\<lhd> s)", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    (\\<exists>x q1 q2.\n        is_a_variable x \\<and>\n        subterm (x \\<lhd> s) q1 u' \\<and>\n        subterm v q2 x \\<and> [] = q2 @ q1) \\<or>\n    (\\<exists>v'.\n        \\<not> is_a_variable v' \\<and>\n        subterm v [] v' \\<and> u' = v' \\<lhd> s)\n 2. \\<not> ?P \\<Longrightarrow>\n    (\\<exists>x q1 q2.\n        is_a_variable x \\<and>\n        subterm (x \\<lhd> s) q1 u' \\<and>\n        subterm v q2 x \\<and> [] = q2 @ q1) \\<or>\n    (\\<exists>v'.\n        \\<not> is_a_variable v' \\<and>\n        subterm v [] v' \\<and> u' = v' \\<lhd> s)", "assume \"is_a_variable v\""], ["proof (state)\nthis:\n  is_a_variable v\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    (\\<exists>x q1 q2.\n        is_a_variable x \\<and>\n        subterm (x \\<lhd> s) q1 u' \\<and>\n        subterm v q2 x \\<and> [] = q2 @ q1) \\<or>\n    (\\<exists>v'.\n        \\<not> is_a_variable v' \\<and>\n        subterm v [] v' \\<and> u' = v' \\<lhd> s)\n 2. \\<not> ?P \\<Longrightarrow>\n    (\\<exists>x q1 q2.\n        is_a_variable x \\<and>\n        subterm (x \\<lhd> s) q1 u' \\<and>\n        subterm v q2 x \\<and> [] = q2 @ q1) \\<or>\n    (\\<exists>v'.\n        \\<not> is_a_variable v' \\<and>\n        subterm v [] v' \\<and> u' = v' \\<lhd> s)", "from \\<open>u = u'\\<close>and \\<open>u = (subst v s)\\<close>"], ["proof (chain)\npicking this:\n  u = u'\n  u = v \\<lhd> s", "have \"(subterm (subst v s) [] u')\""], ["proof (prove)\nusing this:\n  u = u'\n  u = v \\<lhd> s\n\ngoal (1 subgoal):\n 1. subterm (v \\<lhd> s) [] u'", "by auto"], ["proof (state)\nthis:\n  subterm (v \\<lhd> s) [] u'\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    (\\<exists>x q1 q2.\n        is_a_variable x \\<and>\n        subterm (x \\<lhd> s) q1 u' \\<and>\n        subterm v q2 x \\<and> [] = q2 @ q1) \\<or>\n    (\\<exists>v'.\n        \\<not> is_a_variable v' \\<and>\n        subterm v [] v' \\<and> u' = v' \\<lhd> s)\n 2. \\<not> ?P \\<Longrightarrow>\n    (\\<exists>x q1 q2.\n        is_a_variable x \\<and>\n        subterm (x \\<lhd> s) q1 u' \\<and>\n        subterm v q2 x \\<and> [] = q2 @ q1) \\<or>\n    (\\<exists>v'.\n        \\<not> is_a_variable v' \\<and>\n        subterm v [] v' \\<and> u' = v' \\<lhd> s)", "have \"subterm v [] v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subterm v [] v", "by auto"], ["proof (state)\nthis:\n  subterm v [] v\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    (\\<exists>x q1 q2.\n        is_a_variable x \\<and>\n        subterm (x \\<lhd> s) q1 u' \\<and>\n        subterm v q2 x \\<and> [] = q2 @ q1) \\<or>\n    (\\<exists>v'.\n        \\<not> is_a_variable v' \\<and>\n        subterm v [] v' \\<and> u' = v' \\<lhd> s)\n 2. \\<not> ?P \\<Longrightarrow>\n    (\\<exists>x q1 q2.\n        is_a_variable x \\<and>\n        subterm (x \\<lhd> s) q1 u' \\<and>\n        subterm v q2 x \\<and> [] = q2 @ q1) \\<or>\n    (\\<exists>v'.\n        \\<not> is_a_variable v' \\<and>\n        subterm v [] v' \\<and> u' = v' \\<lhd> s)", "from this and \\<open>(subterm (subst v s) [] u')\\<close> and \\<open>is_a_variable v\\<close>"], ["proof (chain)\npicking this:\n  subterm v [] v\n  subterm (v \\<lhd> s) [] u'\n  is_a_variable v", "show ?thesis"], ["proof (prove)\nusing this:\n  subterm v [] v\n  subterm (v \\<lhd> s) [] u'\n  is_a_variable v\n\ngoal (1 subgoal):\n 1. (\\<exists>x q1 q2.\n        is_a_variable x \\<and>\n        subterm (x \\<lhd> s) q1 u' \\<and>\n        subterm v q2 x \\<and> [] = q2 @ q1) \\<or>\n    (\\<exists>v'.\n        \\<not> is_a_variable v' \\<and>\n        subterm v [] v' \\<and> u' = v' \\<lhd> s)", "by auto"], ["proof (state)\nthis:\n  (\\<exists>x q1 q2.\n      is_a_variable x \\<and>\n      subterm (x \\<lhd> s) q1 u' \\<and>\n      subterm v q2 x \\<and> [] = q2 @ q1) \\<or>\n  (\\<exists>v'.\n      \\<not> is_a_variable v' \\<and>\n      subterm v [] v' \\<and> u' = v' \\<lhd> s)\n\ngoal (1 subgoal):\n 1. \\<not> is_a_variable v \\<Longrightarrow>\n    (\\<exists>x q1 q2.\n        is_a_variable x \\<and>\n        subterm (x \\<lhd> s) q1 u' \\<and>\n        subterm v q2 x \\<and> [] = q2 @ q1) \\<or>\n    (\\<exists>v'.\n        \\<not> is_a_variable v' \\<and>\n        subterm v [] v' \\<and> u' = v' \\<lhd> s)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> is_a_variable v \\<Longrightarrow>\n    (\\<exists>x q1 q2.\n        is_a_variable x \\<and>\n        subterm (x \\<lhd> s) q1 u' \\<and>\n        subterm v q2 x \\<and> [] = q2 @ q1) \\<or>\n    (\\<exists>v'.\n        \\<not> is_a_variable v' \\<and>\n        subterm v [] v' \\<and> u' = v' \\<lhd> s)", "assume \"\\<not> is_a_variable v\""], ["proof (state)\nthis:\n  \\<not> is_a_variable v\n\ngoal (1 subgoal):\n 1. \\<not> is_a_variable v \\<Longrightarrow>\n    (\\<exists>x q1 q2.\n        is_a_variable x \\<and>\n        subterm (x \\<lhd> s) q1 u' \\<and>\n        subterm v q2 x \\<and> [] = q2 @ q1) \\<or>\n    (\\<exists>v'.\n        \\<not> is_a_variable v' \\<and>\n        subterm v [] v' \\<and> u' = v' \\<lhd> s)", "from \\<open>u = u'\\<close> and \\<open>u = (subst v s)\\<close>"], ["proof (chain)\npicking this:\n  u = u'\n  u = v \\<lhd> s", "have \"((subterm v [] v) \\<and> (u' = (subst v s)))\""], ["proof (prove)\nusing this:\n  u = u'\n  u = v \\<lhd> s\n\ngoal (1 subgoal):\n 1. subterm v [] v \\<and> u' = v \\<lhd> s", "by auto"], ["proof (state)\nthis:\n  subterm v [] v \\<and> u' = v \\<lhd> s\n\ngoal (1 subgoal):\n 1. \\<not> is_a_variable v \\<Longrightarrow>\n    (\\<exists>x q1 q2.\n        is_a_variable x \\<and>\n        subterm (x \\<lhd> s) q1 u' \\<and>\n        subterm v q2 x \\<and> [] = q2 @ q1) \\<or>\n    (\\<exists>v'.\n        \\<not> is_a_variable v' \\<and>\n        subterm v [] v' \\<and> u' = v' \\<lhd> s)", "then"], ["proof (chain)\npicking this:\n  subterm v [] v \\<and> u' = v \\<lhd> s", "show ?thesis"], ["proof (prove)\nusing this:\n  subterm v [] v \\<and> u' = v \\<lhd> s\n\ngoal (1 subgoal):\n 1. (\\<exists>x q1 q2.\n        is_a_variable x \\<and>\n        subterm (x \\<lhd> s) q1 u' \\<and>\n        subterm v q2 x \\<and> [] = q2 @ q1) \\<or>\n    (\\<exists>v'.\n        \\<not> is_a_variable v' \\<and>\n        subterm v [] v' \\<and> u' = v' \\<lhd> s)", "by auto"], ["proof (state)\nthis:\n  (\\<exists>x q1 q2.\n      is_a_variable x \\<and>\n      subterm (x \\<lhd> s) q1 u' \\<and>\n      subterm v q2 x \\<and> [] = q2 @ q1) \\<or>\n  (\\<exists>v'.\n      \\<not> is_a_variable v' \\<and>\n      subterm v [] v' \\<and> u' = v' \\<lhd> s)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>x q1 q2.\n      is_a_variable x \\<and>\n      subterm (x \\<lhd> s) q1 u' \\<and>\n      subterm v q2 x \\<and> [] = q2 @ q1) \\<or>\n  (\\<exists>v'.\n      \\<not> is_a_variable v' \\<and>\n      subterm v [] v' \\<and> u' = v' \\<lhd> s)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>u v u' s.\n     u = v \\<lhd> s \\<longrightarrow>\n     subterm u [] u' \\<longrightarrow>\n     (\\<exists>x q1 q2.\n         is_a_variable x \\<and>\n         subterm (x \\<lhd> s) q1 u' \\<and>\n         subterm v q2 x \\<and> [] = q2 @ q1) \\<or>\n     (\\<exists>v'.\n         \\<not> is_a_variable v' \\<and>\n         subterm v [] v' \\<and> u' = v' \\<lhd> s)\n\ngoal (1 subgoal):\n 1. \\<And>a p.\n       \\<forall>u v u' s.\n          u = v \\<lhd> s \\<longrightarrow>\n          subterm u p u' \\<longrightarrow>\n          (\\<exists>x q1 q2.\n              is_a_variable x \\<and>\n              subterm (x \\<lhd> s) q1 u' \\<and>\n              subterm v q2 x \\<and> p = q2 @ q1) \\<or>\n          (\\<exists>v'.\n              \\<not> is_a_variable v' \\<and>\n              subterm v p v' \\<and> u' = v' \\<lhd> s) \\<Longrightarrow>\n       \\<forall>u v u' s.\n          u = v \\<lhd> s \\<longrightarrow>\n          subterm u (a # p) u' \\<longrightarrow>\n          (\\<exists>x q1 q2.\n              is_a_variable x \\<and>\n              subterm (x \\<lhd> s) q1 u' \\<and>\n              subterm v q2 x \\<and> a # p = q2 @ q1) \\<or>\n          (\\<exists>v'.\n              \\<not> is_a_variable v' \\<and>\n              subterm v (a # p) v' \\<and> u' = v' \\<lhd> s)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a p.\n       \\<forall>u v u' s.\n          u = v \\<lhd> s \\<longrightarrow>\n          subterm u p u' \\<longrightarrow>\n          (\\<exists>x q1 q2.\n              is_a_variable x \\<and>\n              subterm (x \\<lhd> s) q1 u' \\<and>\n              subterm v q2 x \\<and> p = q2 @ q1) \\<or>\n          (\\<exists>v'.\n              \\<not> is_a_variable v' \\<and>\n              subterm v p v' \\<and> u' = v' \\<lhd> s) \\<Longrightarrow>\n       \\<forall>u v u' s.\n          u = v \\<lhd> s \\<longrightarrow>\n          subterm u (a # p) u' \\<longrightarrow>\n          (\\<exists>x q1 q2.\n              is_a_variable x \\<and>\n              subterm (x \\<lhd> s) q1 u' \\<and>\n              subterm v q2 x \\<and> a # p = q2 @ q1) \\<or>\n          (\\<exists>v'.\n              \\<not> is_a_variable v' \\<and>\n              subterm v (a # p) v' \\<and> u' = v' \\<lhd> s)", "case (Cons i q)"], ["proof (state)\nthis:\n  \\<forall>u v u' s.\n     u = v \\<lhd> s \\<longrightarrow>\n     subterm u q u' \\<longrightarrow>\n     (\\<exists>x q1 q2.\n         is_a_variable x \\<and>\n         subterm (x \\<lhd> s) q1 u' \\<and>\n         subterm v q2 x \\<and> q = q2 @ q1) \\<or>\n     (\\<exists>v'.\n         \\<not> is_a_variable v' \\<and>\n         subterm v q v' \\<and> u' = v' \\<lhd> s)\n\ngoal (1 subgoal):\n 1. \\<And>a p.\n       \\<forall>u v u' s.\n          u = v \\<lhd> s \\<longrightarrow>\n          subterm u p u' \\<longrightarrow>\n          (\\<exists>x q1 q2.\n              is_a_variable x \\<and>\n              subterm (x \\<lhd> s) q1 u' \\<and>\n              subterm v q2 x \\<and> p = q2 @ q1) \\<or>\n          (\\<exists>v'.\n              \\<not> is_a_variable v' \\<and>\n              subterm v p v' \\<and> u' = v' \\<lhd> s) \\<Longrightarrow>\n       \\<forall>u v u' s.\n          u = v \\<lhd> s \\<longrightarrow>\n          subterm u (a # p) u' \\<longrightarrow>\n          (\\<exists>x q1 q2.\n              is_a_variable x \\<and>\n              subterm (x \\<lhd> s) q1 u' \\<and>\n              subterm v q2 x \\<and> a # p = q2 @ q1) \\<or>\n          (\\<exists>v'.\n              \\<not> is_a_variable v' \\<and>\n              subterm v (a # p) v' \\<and> u' = v' \\<lhd> s)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>u v u' s.\n       u = v \\<lhd> s \\<longrightarrow>\n       subterm u (i # q) u' \\<longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "proof ((rule allI)+,(rule impI)+)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u v u' s.\n       \\<lbrakk>u = v \\<lhd> s; subterm u (i # q) u'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>x q1 q2.\n                             is_a_variable x \\<and>\n                             subterm (x \\<lhd> s) q1 u' \\<and>\n                             subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n                         (\\<exists>v'.\n                             \\<not> is_a_variable v' \\<and>\n                             subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "fix u ::\"'a trm\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u v u' s.\n       \\<lbrakk>u = v \\<lhd> s; subterm u (i # q) u'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>x q1 q2.\n                             is_a_variable x \\<and>\n                             subterm (x \\<lhd> s) q1 u' \\<and>\n                             subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n                         (\\<exists>v'.\n                             \\<not> is_a_variable v' \\<and>\n                             subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "fix v u' s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u v u' s.\n       \\<lbrakk>u = v \\<lhd> s; subterm u (i # q) u'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>x q1 q2.\n                             is_a_variable x \\<and>\n                             subterm (x \\<lhd> s) q1 u' \\<and>\n                             subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n                         (\\<exists>v'.\n                             \\<not> is_a_variable v' \\<and>\n                             subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "assume \"u = (subst v s)\" \n      and \"subterm u (Cons i q) u'\""], ["proof (state)\nthis:\n  u = v \\<lhd> s\n  subterm u (i # q) u'\n\ngoal (1 subgoal):\n 1. \\<And>u v u' s.\n       \\<lbrakk>u = v \\<lhd> s; subterm u (i # q) u'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>x q1 q2.\n                             is_a_variable x \\<and>\n                             subterm (x \\<lhd> s) q1 u' \\<and>\n                             subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n                         (\\<exists>v'.\n                             \\<not> is_a_variable v' \\<and>\n                             subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "show \"(\\<exists>x q1 q2. (is_a_variable x) \\<and> (subterm (subst x s) q1 u') \\<and> \n                      (subterm v q2 x) \\<and> ((Cons i q) = (append q2 q1))) \\<or> \n        ((\\<exists> v'. ((\\<not> is_a_variable v') \\<and> (subterm v (Cons i q) v') \\<and> (u' = (subst v' s)))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>x q1 q2.\n        is_a_variable x \\<and>\n        subterm (x \\<lhd> s) q1 u' \\<and>\n        subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n    (\\<exists>v'.\n        \\<not> is_a_variable v' \\<and>\n        subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "proof (cases v)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1.\n       v = Var x1 \\<Longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)\n 2. \\<And>x2.\n       v = Const x2 \\<Longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)\n 3. \\<And>x31 x32.\n       v = x31 \\<cdot> x32 \\<Longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "fix x"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1.\n       v = Var x1 \\<Longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)\n 2. \\<And>x2.\n       v = Const x2 \\<Longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)\n 3. \\<And>x31 x32.\n       v = x31 \\<cdot> x32 \\<Longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "assume \"v = (Var x)\""], ["proof (state)\nthis:\n  v = Var x\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       v = Var x1 \\<Longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)\n 2. \\<And>x2.\n       v = Const x2 \\<Longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)\n 3. \\<And>x31 x32.\n       v = x31 \\<cdot> x32 \\<Longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "then"], ["proof (chain)\npicking this:\n  v = Var x", "have \"subterm v [] v\""], ["proof (prove)\nusing this:\n  v = Var x\n\ngoal (1 subgoal):\n 1. subterm v [] v", "by auto"], ["proof (state)\nthis:\n  subterm v [] v\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       v = Var x1 \\<Longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)\n 2. \\<And>x2.\n       v = Const x2 \\<Longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)\n 3. \\<And>x31 x32.\n       v = x31 \\<cdot> x32 \\<Longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "from \\<open>v = (Var x)\\<close>"], ["proof (chain)\npicking this:\n  v = Var x", "have \"is_a_variable v\""], ["proof (prove)\nusing this:\n  v = Var x\n\ngoal (1 subgoal):\n 1. is_a_variable v", "by auto"], ["proof (state)\nthis:\n  is_a_variable v\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       v = Var x1 \\<Longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)\n 2. \\<And>x2.\n       v = Const x2 \\<Longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)\n 3. \\<And>x31 x32.\n       v = x31 \\<cdot> x32 \\<Longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "have \"Cons i q = (append [] (Cons i q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i # q = [] @ i # q", "by auto"], ["proof (state)\nthis:\n  i # q = [] @ i # q\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       v = Var x1 \\<Longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)\n 2. \\<And>x2.\n       v = Const x2 \\<Longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)\n 3. \\<And>x31 x32.\n       v = x31 \\<cdot> x32 \\<Longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "from \\<open>subterm u (Cons i q) u'\\<close> and \\<open>u = (subst v s)\\<close> \n        and \\<open>v = (Var x)\\<close>"], ["proof (chain)\npicking this:\n  subterm u (i # q) u'\n  u = v \\<lhd> s\n  v = Var x", "have \"subterm (subst v s) (Cons i q) u'\""], ["proof (prove)\nusing this:\n  subterm u (i # q) u'\n  u = v \\<lhd> s\n  v = Var x\n\ngoal (1 subgoal):\n 1. subterm (v \\<lhd> s) (i # q) u'", "by auto"], ["proof (state)\nthis:\n  subterm (v \\<lhd> s) (i # q) u'\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       v = Var x1 \\<Longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)\n 2. \\<And>x2.\n       v = Const x2 \\<Longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)\n 3. \\<And>x31 x32.\n       v = x31 \\<cdot> x32 \\<Longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "from \\<open>is_a_variable v\\<close> and \\<open>subterm v [] v\\<close> and \\<open>Cons i q = (append [] (Cons i q))\\<close> and this"], ["proof (chain)\npicking this:\n  is_a_variable v\n  subterm v [] v\n  i # q = [] @ i # q\n  subterm (v \\<lhd> s) (i # q) u'", "show ?thesis"], ["proof (prove)\nusing this:\n  is_a_variable v\n  subterm v [] v\n  i # q = [] @ i # q\n  subterm (v \\<lhd> s) (i # q) u'\n\ngoal (1 subgoal):\n 1. (\\<exists>x q1 q2.\n        is_a_variable x \\<and>\n        subterm (x \\<lhd> s) q1 u' \\<and>\n        subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n    (\\<exists>v'.\n        \\<not> is_a_variable v' \\<and>\n        subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "by blast"], ["proof (state)\nthis:\n  (\\<exists>x q1 q2.\n      is_a_variable x \\<and>\n      subterm (x \\<lhd> s) q1 u' \\<and>\n      subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n  (\\<exists>v'.\n      \\<not> is_a_variable v' \\<and>\n      subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       v = Const x2 \\<Longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)\n 2. \\<And>x31 x32.\n       v = x31 \\<cdot> x32 \\<Longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x2.\n       v = Const x2 \\<Longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)\n 2. \\<And>x31 x32.\n       v = x31 \\<cdot> x32 \\<Longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x2.\n       v = Const x2 \\<Longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)\n 2. \\<And>x31 x32.\n       v = x31 \\<cdot> x32 \\<Longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "assume \"v = (Const x)\""], ["proof (state)\nthis:\n  v = Const x\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       v = Const x2 \\<Longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)\n 2. \\<And>x31 x32.\n       v = x31 \\<cdot> x32 \\<Longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "from this and \\<open>u = (subst v s)\\<close>"], ["proof (chain)\npicking this:\n  v = Const x\n  u = v \\<lhd> s", "have \"u = v\""], ["proof (prove)\nusing this:\n  v = Const x\n  u = v \\<lhd> s\n\ngoal (1 subgoal):\n 1. u = v", "by auto"], ["proof (state)\nthis:\n  u = v\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       v = Const x2 \\<Longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)\n 2. \\<And>x31 x32.\n       v = x31 \\<cdot> x32 \\<Longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "from this and \\<open>v = (Const x)\\<close> and \\<open>subterm u (Cons i q) u'\\<close>"], ["proof (chain)\npicking this:\n  u = v\n  v = Const x\n  subterm u (i # q) u'", "show ?thesis"], ["proof (prove)\nusing this:\n  u = v\n  v = Const x\n  subterm u (i # q) u'\n\ngoal (1 subgoal):\n 1. (\\<exists>x q1 q2.\n        is_a_variable x \\<and>\n        subterm (x \\<lhd> s) q1 u' \\<and>\n        subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n    (\\<exists>v'.\n        \\<not> is_a_variable v' \\<and>\n        subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "by auto"], ["proof (state)\nthis:\n  (\\<exists>x q1 q2.\n      is_a_variable x \\<and>\n      subterm (x \\<lhd> s) q1 u' \\<and>\n      subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n  (\\<exists>v'.\n      \\<not> is_a_variable v' \\<and>\n      subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32.\n       v = x31 \\<cdot> x32 \\<Longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x31 x32.\n       v = x31 \\<cdot> x32 \\<Longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "fix t1 t2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x31 x32.\n       v = x31 \\<cdot> x32 \\<Longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "assume \"v = (Comb t1 t2)\""], ["proof (state)\nthis:\n  v = t1 \\<cdot> t2\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32.\n       v = x31 \\<cdot> x32 \\<Longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "from this and  \\<open>u = (subst v s)\\<close>"], ["proof (chain)\npicking this:\n  v = t1 \\<cdot> t2\n  u = v \\<lhd> s", "have \"u = (Comb (subst t1 s) (subst t2 s))\""], ["proof (prove)\nusing this:\n  v = t1 \\<cdot> t2\n  u = v \\<lhd> s\n\ngoal (1 subgoal):\n 1. u = (t1 \\<lhd> s) \\<cdot> (t2 \\<lhd> s)", "by auto"], ["proof (state)\nthis:\n  u = (t1 \\<lhd> s) \\<cdot> (t2 \\<lhd> s)\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32.\n       v = x31 \\<cdot> x32 \\<Longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "have \"i = Left \\<or> i = Right\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i = indices.Left \\<or> i = indices.Right", "using indices.exhaust"], ["proof (prove)\nusing this:\n  \\<lbrakk>?y = indices.Left \\<Longrightarrow> ?P;\n   ?y = indices.Right \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. i = indices.Left \\<or> i = indices.Right", "by auto"], ["proof (state)\nthis:\n  i = indices.Left \\<or> i = indices.Right\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32.\n       v = x31 \\<cdot> x32 \\<Longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "from \\<open>i = Left \\<or> i = Right\\<close> and \\<open>u = (Comb (subst t1 s) (subst t2 s))\\<close> \n        and \\<open>subterm u (Cons i q) u'\\<close>"], ["proof (chain)\npicking this:\n  i = indices.Left \\<or> i = indices.Right\n  u = (t1 \\<lhd> s) \\<cdot> (t2 \\<lhd> s)\n  subterm u (i # q) u'", "obtain ti where \n        \"subterm (subst ti s) q u'\" and \"ti = t1 \\<or> ti = t2\" and \"subterm v [i] ti\""], ["proof (prove)\nusing this:\n  i = indices.Left \\<or> i = indices.Right\n  u = (t1 \\<lhd> s) \\<cdot> (t2 \\<lhd> s)\n  subterm u (i # q) u'\n\ngoal (1 subgoal):\n 1. (\\<And>ti.\n        \\<lbrakk>subterm (ti \\<lhd> s) q u'; ti = t1 \\<or> ti = t2;\n         subterm v [i] ti\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>v = t1 \\<cdot> t2\\<close>"], ["proof (prove)\nusing this:\n  i = indices.Left \\<or> i = indices.Right\n  u = (t1 \\<lhd> s) \\<cdot> (t2 \\<lhd> s)\n  subterm u (i # q) u'\n  v = t1 \\<cdot> t2\n\ngoal (1 subgoal):\n 1. (\\<And>ti.\n        \\<lbrakk>subterm (ti \\<lhd> s) q u'; ti = t1 \\<or> ti = t2;\n         subterm v [i] ti\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  subterm (ti \\<lhd> s) q u'\n  ti = t1 \\<or> ti = t2\n  subterm v [i] ti\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32.\n       v = x31 \\<cdot> x32 \\<Longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "from \\<open>?prop q\\<close> and \\<open>subterm (subst ti s) q u'\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>u v u' s.\n     u = v \\<lhd> s \\<longrightarrow>\n     subterm u q u' \\<longrightarrow>\n     (\\<exists>x q1 q2.\n         is_a_variable x \\<and>\n         subterm (x \\<lhd> s) q1 u' \\<and>\n         subterm v q2 x \\<and> q = q2 @ q1) \\<or>\n     (\\<exists>v'.\n         \\<not> is_a_variable v' \\<and>\n         subterm v q v' \\<and> u' = v' \\<lhd> s)\n  subterm (ti \\<lhd> s) q u'", "have\n        \"(\\<exists>x q1 q2. (is_a_variable x) \\<and> (subterm (subst x s) q1 u') \\<and> \n                      (subterm ti q2 x) \\<and> (q = (append q2 q1))) \\<or> \n                      ((\\<exists> v'. ((\\<not> is_a_variable v') \\<and> (subterm ti q v') \\<and> (u' = (subst v' s)))))\""], ["proof (prove)\nusing this:\n  \\<forall>u v u' s.\n     u = v \\<lhd> s \\<longrightarrow>\n     subterm u q u' \\<longrightarrow>\n     (\\<exists>x q1 q2.\n         is_a_variable x \\<and>\n         subterm (x \\<lhd> s) q1 u' \\<and>\n         subterm v q2 x \\<and> q = q2 @ q1) \\<or>\n     (\\<exists>v'.\n         \\<not> is_a_variable v' \\<and>\n         subterm v q v' \\<and> u' = v' \\<lhd> s)\n  subterm (ti \\<lhd> s) q u'\n\ngoal (1 subgoal):\n 1. (\\<exists>x q1 q2.\n        is_a_variable x \\<and>\n        subterm (x \\<lhd> s) q1 u' \\<and>\n        subterm ti q2 x \\<and> q = q2 @ q1) \\<or>\n    (\\<exists>v'.\n        \\<not> is_a_variable v' \\<and>\n        subterm ti q v' \\<and> u' = v' \\<lhd> s)", "by auto"], ["proof (state)\nthis:\n  (\\<exists>x q1 q2.\n      is_a_variable x \\<and>\n      subterm (x \\<lhd> s) q1 u' \\<and>\n      subterm ti q2 x \\<and> q = q2 @ q1) \\<or>\n  (\\<exists>v'.\n      \\<not> is_a_variable v' \\<and>\n      subterm ti q v' \\<and> u' = v' \\<lhd> s)\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32.\n       v = x31 \\<cdot> x32 \\<Longrightarrow>\n       (\\<exists>x q1 q2.\n           is_a_variable x \\<and>\n           subterm (x \\<lhd> s) q1 u' \\<and>\n           subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n       (\\<exists>v'.\n           \\<not> is_a_variable v' \\<and>\n           subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "then"], ["proof (chain)\npicking this:\n  (\\<exists>x q1 q2.\n      is_a_variable x \\<and>\n      subterm (x \\<lhd> s) q1 u' \\<and>\n      subterm ti q2 x \\<and> q = q2 @ q1) \\<or>\n  (\\<exists>v'.\n      \\<not> is_a_variable v' \\<and>\n      subterm ti q v' \\<and> u' = v' \\<lhd> s)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<exists>x q1 q2.\n      is_a_variable x \\<and>\n      subterm (x \\<lhd> s) q1 u' \\<and>\n      subterm ti q2 x \\<and> q = q2 @ q1) \\<or>\n  (\\<exists>v'.\n      \\<not> is_a_variable v' \\<and>\n      subterm ti q v' \\<and> u' = v' \\<lhd> s)\n\ngoal (1 subgoal):\n 1. (\\<exists>x q1 q2.\n        is_a_variable x \\<and>\n        subterm (x \\<lhd> s) q1 u' \\<and>\n        subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n    (\\<exists>v'.\n        \\<not> is_a_variable v' \\<and>\n        subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>x q1 q2.\n       is_a_variable x \\<and>\n       subterm (x \\<lhd> s) q1 u' \\<and>\n       subterm ti q2 x \\<and> q = q2 @ q1 \\<Longrightarrow>\n    (\\<exists>x q1 q2.\n        is_a_variable x \\<and>\n        subterm (x \\<lhd> s) q1 u' \\<and>\n        subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n    (\\<exists>v'.\n        \\<not> is_a_variable v' \\<and>\n        subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)\n 2. \\<exists>v'.\n       \\<not> is_a_variable v' \\<and>\n       subterm ti q v' \\<and> u' = v' \\<lhd> s \\<Longrightarrow>\n    (\\<exists>x q1 q2.\n        is_a_variable x \\<and>\n        subterm (x \\<lhd> s) q1 u' \\<and>\n        subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n    (\\<exists>v'.\n        \\<not> is_a_variable v' \\<and>\n        subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "assume \"(\\<exists>x q1 q2. (is_a_variable x) \\<and> (subterm (subst x s) q1 u') \\<and> \n                      (subterm ti q2 x) \\<and> (q = (append q2 q1)))\""], ["proof (state)\nthis:\n  \\<exists>x q1 q2.\n     is_a_variable x \\<and>\n     subterm (x \\<lhd> s) q1 u' \\<and> subterm ti q2 x \\<and> q = q2 @ q1\n\ngoal (2 subgoals):\n 1. \\<exists>x q1 q2.\n       is_a_variable x \\<and>\n       subterm (x \\<lhd> s) q1 u' \\<and>\n       subterm ti q2 x \\<and> q = q2 @ q1 \\<Longrightarrow>\n    (\\<exists>x q1 q2.\n        is_a_variable x \\<and>\n        subterm (x \\<lhd> s) q1 u' \\<and>\n        subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n    (\\<exists>v'.\n        \\<not> is_a_variable v' \\<and>\n        subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)\n 2. \\<exists>v'.\n       \\<not> is_a_variable v' \\<and>\n       subterm ti q v' \\<and> u' = v' \\<lhd> s \\<Longrightarrow>\n    (\\<exists>x q1 q2.\n        is_a_variable x \\<and>\n        subterm (x \\<lhd> s) q1 u' \\<and>\n        subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n    (\\<exists>v'.\n        \\<not> is_a_variable v' \\<and>\n        subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "then"], ["proof (chain)\npicking this:\n  \\<exists>x q1 q2.\n     is_a_variable x \\<and>\n     subterm (x \\<lhd> s) q1 u' \\<and> subterm ti q2 x \\<and> q = q2 @ q1", "obtain x q1 q2 where \"is_a_variable x\" and \"subterm (subst x s) q1 u'\" \n            and \"subterm ti q2 x\" and \"q = (append q2 q1)\""], ["proof (prove)\nusing this:\n  \\<exists>x q1 q2.\n     is_a_variable x \\<and>\n     subterm (x \\<lhd> s) q1 u' \\<and> subterm ti q2 x \\<and> q = q2 @ q1\n\ngoal (1 subgoal):\n 1. (\\<And>x q1 q2.\n        \\<lbrakk>is_a_variable x; subterm (x \\<lhd> s) q1 u';\n         subterm ti q2 x; q = q2 @ q1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  is_a_variable x\n  subterm (x \\<lhd> s) q1 u'\n  subterm ti q2 x\n  q = q2 @ q1\n\ngoal (2 subgoals):\n 1. \\<exists>x q1 q2.\n       is_a_variable x \\<and>\n       subterm (x \\<lhd> s) q1 u' \\<and>\n       subterm ti q2 x \\<and> q = q2 @ q1 \\<Longrightarrow>\n    (\\<exists>x q1 q2.\n        is_a_variable x \\<and>\n        subterm (x \\<lhd> s) q1 u' \\<and>\n        subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n    (\\<exists>v'.\n        \\<not> is_a_variable v' \\<and>\n        subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)\n 2. \\<exists>v'.\n       \\<not> is_a_variable v' \\<and>\n       subterm ti q v' \\<and> u' = v' \\<lhd> s \\<Longrightarrow>\n    (\\<exists>x q1 q2.\n        is_a_variable x \\<and>\n        subterm (x \\<lhd> s) q1 u' \\<and>\n        subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n    (\\<exists>v'.\n        \\<not> is_a_variable v' \\<and>\n        subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "from \\<open>subterm ti q2 x\\<close> and \\<open>subterm v [i] ti\\<close>"], ["proof (chain)\npicking this:\n  subterm ti q2 x\n  subterm v [i] ti", "have \"subterm v (i # q2) x\""], ["proof (prove)\nusing this:\n  subterm ti q2 x\n  subterm v [i] ti\n\ngoal (1 subgoal):\n 1. subterm v (i # q2) x", "using \\<open>i = indices.Left \\<or> i = indices.Right\\<close> \\<open>v = t1 \\<cdot> t2\\<close>"], ["proof (prove)\nusing this:\n  subterm ti q2 x\n  subterm v [i] ti\n  i = indices.Left \\<or> i = indices.Right\n  v = t1 \\<cdot> t2\n\ngoal (1 subgoal):\n 1. subterm v (i # q2) x", "by auto"], ["proof (state)\nthis:\n  subterm v (i # q2) x\n\ngoal (2 subgoals):\n 1. \\<exists>x q1 q2.\n       is_a_variable x \\<and>\n       subterm (x \\<lhd> s) q1 u' \\<and>\n       subterm ti q2 x \\<and> q = q2 @ q1 \\<Longrightarrow>\n    (\\<exists>x q1 q2.\n        is_a_variable x \\<and>\n        subterm (x \\<lhd> s) q1 u' \\<and>\n        subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n    (\\<exists>v'.\n        \\<not> is_a_variable v' \\<and>\n        subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)\n 2. \\<exists>v'.\n       \\<not> is_a_variable v' \\<and>\n       subterm ti q v' \\<and> u' = v' \\<lhd> s \\<Longrightarrow>\n    (\\<exists>x q1 q2.\n        is_a_variable x \\<and>\n        subterm (x \\<lhd> s) q1 u' \\<and>\n        subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n    (\\<exists>v'.\n        \\<not> is_a_variable v' \\<and>\n        subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "from \\<open>q = append q2 q1\\<close>"], ["proof (chain)\npicking this:\n  q = q2 @ q1", "have \"i # q = (append (i # q2) q1)\""], ["proof (prove)\nusing this:\n  q = q2 @ q1\n\ngoal (1 subgoal):\n 1. i # q = (i # q2) @ q1", "by auto"], ["proof (state)\nthis:\n  i # q = (i # q2) @ q1\n\ngoal (2 subgoals):\n 1. \\<exists>x q1 q2.\n       is_a_variable x \\<and>\n       subterm (x \\<lhd> s) q1 u' \\<and>\n       subterm ti q2 x \\<and> q = q2 @ q1 \\<Longrightarrow>\n    (\\<exists>x q1 q2.\n        is_a_variable x \\<and>\n        subterm (x \\<lhd> s) q1 u' \\<and>\n        subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n    (\\<exists>v'.\n        \\<not> is_a_variable v' \\<and>\n        subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)\n 2. \\<exists>v'.\n       \\<not> is_a_variable v' \\<and>\n       subterm ti q v' \\<and> u' = v' \\<lhd> s \\<Longrightarrow>\n    (\\<exists>x q1 q2.\n        is_a_variable x \\<and>\n        subterm (x \\<lhd> s) q1 u' \\<and>\n        subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n    (\\<exists>v'.\n        \\<not> is_a_variable v' \\<and>\n        subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "from \\<open>i # q = (append (i # q2) q1)\\<close> and \\<open>is_a_variable x\\<close> \n          and \\<open>subterm (subst x s) q1 u'\\<close> and \\<open>subterm v (i # q2) x\\<close>"], ["proof (chain)\npicking this:\n  i # q = (i # q2) @ q1\n  is_a_variable x\n  subterm (x \\<lhd> s) q1 u'\n  subterm v (i # q2) x", "show ?thesis"], ["proof (prove)\nusing this:\n  i # q = (i # q2) @ q1\n  is_a_variable x\n  subterm (x \\<lhd> s) q1 u'\n  subterm v (i # q2) x\n\ngoal (1 subgoal):\n 1. (\\<exists>x q1 q2.\n        is_a_variable x \\<and>\n        subterm (x \\<lhd> s) q1 u' \\<and>\n        subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n    (\\<exists>v'.\n        \\<not> is_a_variable v' \\<and>\n        subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "by blast"], ["proof (state)\nthis:\n  (\\<exists>x q1 q2.\n      is_a_variable x \\<and>\n      subterm (x \\<lhd> s) q1 u' \\<and>\n      subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n  (\\<exists>v'.\n      \\<not> is_a_variable v' \\<and>\n      subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)\n\ngoal (1 subgoal):\n 1. \\<exists>v'.\n       \\<not> is_a_variable v' \\<and>\n       subterm ti q v' \\<and> u' = v' \\<lhd> s \\<Longrightarrow>\n    (\\<exists>x q1 q2.\n        is_a_variable x \\<and>\n        subterm (x \\<lhd> s) q1 u' \\<and>\n        subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n    (\\<exists>v'.\n        \\<not> is_a_variable v' \\<and>\n        subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>v'.\n       \\<not> is_a_variable v' \\<and>\n       subterm ti q v' \\<and> u' = v' \\<lhd> s \\<Longrightarrow>\n    (\\<exists>x q1 q2.\n        is_a_variable x \\<and>\n        subterm (x \\<lhd> s) q1 u' \\<and>\n        subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n    (\\<exists>v'.\n        \\<not> is_a_variable v' \\<and>\n        subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "assume \"((\\<exists> v'. ((\\<not> is_a_variable v') \\<and> (subterm ti q v') \\<and> (u' = (subst v' s)))))\""], ["proof (state)\nthis:\n  \\<exists>v'.\n     \\<not> is_a_variable v' \\<and> subterm ti q v' \\<and> u' = v' \\<lhd> s\n\ngoal (1 subgoal):\n 1. \\<exists>v'.\n       \\<not> is_a_variable v' \\<and>\n       subterm ti q v' \\<and> u' = v' \\<lhd> s \\<Longrightarrow>\n    (\\<exists>x q1 q2.\n        is_a_variable x \\<and>\n        subterm (x \\<lhd> s) q1 u' \\<and>\n        subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n    (\\<exists>v'.\n        \\<not> is_a_variable v' \\<and>\n        subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "then"], ["proof (chain)\npicking this:\n  \\<exists>v'.\n     \\<not> is_a_variable v' \\<and> subterm ti q v' \\<and> u' = v' \\<lhd> s", "obtain v' where \"(\\<not> is_a_variable v')\" \"(subterm ti q v')\" and \"u' = (subst v' s)\""], ["proof (prove)\nusing this:\n  \\<exists>v'.\n     \\<not> is_a_variable v' \\<and> subterm ti q v' \\<and> u' = v' \\<lhd> s\n\ngoal (1 subgoal):\n 1. (\\<And>v'.\n        \\<lbrakk>\\<not> is_a_variable v'; subterm ti q v';\n         u' = v' \\<lhd> s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<not> is_a_variable v'\n  subterm ti q v'\n  u' = v' \\<lhd> s\n\ngoal (1 subgoal):\n 1. \\<exists>v'.\n       \\<not> is_a_variable v' \\<and>\n       subterm ti q v' \\<and> u' = v' \\<lhd> s \\<Longrightarrow>\n    (\\<exists>x q1 q2.\n        is_a_variable x \\<and>\n        subterm (x \\<lhd> s) q1 u' \\<and>\n        subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n    (\\<exists>v'.\n        \\<not> is_a_variable v' \\<and>\n        subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "from \\<open>subterm ti q v'\\<close>  and \\<open>subterm v [i] ti\\<close>"], ["proof (chain)\npicking this:\n  subterm ti q v'\n  subterm v [i] ti", "have \"subterm v (i # q) v'\""], ["proof (prove)\nusing this:\n  subterm ti q v'\n  subterm v [i] ti\n\ngoal (1 subgoal):\n 1. subterm v (i # q) v'", "using \\<open>i = indices.Left \\<or> i = indices.Right\\<close> \\<open>v = t1 \\<cdot> t2\\<close>"], ["proof (prove)\nusing this:\n  subterm ti q v'\n  subterm v [i] ti\n  i = indices.Left \\<or> i = indices.Right\n  v = t1 \\<cdot> t2\n\ngoal (1 subgoal):\n 1. subterm v (i # q) v'", "by auto"], ["proof (state)\nthis:\n  subterm v (i # q) v'\n\ngoal (1 subgoal):\n 1. \\<exists>v'.\n       \\<not> is_a_variable v' \\<and>\n       subterm ti q v' \\<and> u' = v' \\<lhd> s \\<Longrightarrow>\n    (\\<exists>x q1 q2.\n        is_a_variable x \\<and>\n        subterm (x \\<lhd> s) q1 u' \\<and>\n        subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n    (\\<exists>v'.\n        \\<not> is_a_variable v' \\<and>\n        subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "from this and \\<open>(\\<not> is_a_variable v')\\<close> \\<open>subterm ti q v'\\<close> and \\<open>u' = (subst v' s)\\<close>"], ["proof (chain)\npicking this:\n  subterm v (i # q) v'\n  \\<not> is_a_variable v'\n  subterm ti q v'\n  u' = v' \\<lhd> s", "show ?thesis"], ["proof (prove)\nusing this:\n  subterm v (i # q) v'\n  \\<not> is_a_variable v'\n  subterm ti q v'\n  u' = v' \\<lhd> s\n\ngoal (1 subgoal):\n 1. (\\<exists>x q1 q2.\n        is_a_variable x \\<and>\n        subterm (x \\<lhd> s) q1 u' \\<and>\n        subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n    (\\<exists>v'.\n        \\<not> is_a_variable v' \\<and>\n        subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)", "by auto"], ["proof (state)\nthis:\n  (\\<exists>x q1 q2.\n      is_a_variable x \\<and>\n      subterm (x \\<lhd> s) q1 u' \\<and>\n      subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n  (\\<exists>v'.\n      \\<not> is_a_variable v' \\<and>\n      subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>x q1 q2.\n      is_a_variable x \\<and>\n      subterm (x \\<lhd> s) q1 u' \\<and>\n      subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n  (\\<exists>v'.\n      \\<not> is_a_variable v' \\<and>\n      subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>x q1 q2.\n      is_a_variable x \\<and>\n      subterm (x \\<lhd> s) q1 u' \\<and>\n      subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n  (\\<exists>v'.\n      \\<not> is_a_variable v' \\<and>\n      subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>u v u' s.\n     u = v \\<lhd> s \\<longrightarrow>\n     subterm u (i # q) u' \\<longrightarrow>\n     (\\<exists>x q1 q2.\n         is_a_variable x \\<and>\n         subterm (x \\<lhd> s) q1 u' \\<and>\n         subterm v q2 x \\<and> i # q = q2 @ q1) \\<or>\n     (\\<exists>v'.\n         \\<not> is_a_variable v' \\<and>\n         subterm v (i # q) v' \\<and> u' = v' \\<lhd> s)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vars_of_replacement:\n  shows \"\\<And> t s. x \\<in> vars_of s \\<Longrightarrow> replace_subterm t p v s \\<Longrightarrow> x \\<in> (vars_of t) \\<union> (vars_of v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t s.\n       \\<lbrakk>x \\<in> vars_of s; replace_subterm t p v s\\<rbrakk>\n       \\<Longrightarrow> x \\<in> vars_of t \\<union> vars_of v", "proof (induction p)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t s.\n       \\<lbrakk>x \\<in> vars_of s; replace_subterm t [] v s\\<rbrakk>\n       \\<Longrightarrow> x \\<in> vars_of t \\<union> vars_of v\n 2. \\<And>a p t s.\n       \\<lbrakk>\\<And>t s.\n                   \\<lbrakk>x \\<in> vars_of s;\n                    replace_subterm t p v s\\<rbrakk>\n                   \\<Longrightarrow> x \\<in> vars_of t \\<union> vars_of v;\n        x \\<in> vars_of s; replace_subterm t (a # p) v s\\<rbrakk>\n       \\<Longrightarrow> x \\<in> vars_of t \\<union> vars_of v", "case Nil"], ["proof (state)\nthis:\n  x \\<in> vars_of s\n  replace_subterm t [] v s\n\ngoal (2 subgoals):\n 1. \\<And>t s.\n       \\<lbrakk>x \\<in> vars_of s; replace_subterm t [] v s\\<rbrakk>\n       \\<Longrightarrow> x \\<in> vars_of t \\<union> vars_of v\n 2. \\<And>a p t s.\n       \\<lbrakk>\\<And>t s.\n                   \\<lbrakk>x \\<in> vars_of s;\n                    replace_subterm t p v s\\<rbrakk>\n                   \\<Longrightarrow> x \\<in> vars_of t \\<union> vars_of v;\n        x \\<in> vars_of s; replace_subterm t (a # p) v s\\<rbrakk>\n       \\<Longrightarrow> x \\<in> vars_of t \\<union> vars_of v", "from \\<open>replace_subterm t Nil v s\\<close>"], ["proof (chain)\npicking this:\n  replace_subterm t [] v s", "have \"s = v\""], ["proof (prove)\nusing this:\n  replace_subterm t [] v s\n\ngoal (1 subgoal):\n 1. s = v", "by auto"], ["proof (state)\nthis:\n  s = v\n\ngoal (2 subgoals):\n 1. \\<And>t s.\n       \\<lbrakk>x \\<in> vars_of s; replace_subterm t [] v s\\<rbrakk>\n       \\<Longrightarrow> x \\<in> vars_of t \\<union> vars_of v\n 2. \\<And>a p t s.\n       \\<lbrakk>\\<And>t s.\n                   \\<lbrakk>x \\<in> vars_of s;\n                    replace_subterm t p v s\\<rbrakk>\n                   \\<Longrightarrow> x \\<in> vars_of t \\<union> vars_of v;\n        x \\<in> vars_of s; replace_subterm t (a # p) v s\\<rbrakk>\n       \\<Longrightarrow> x \\<in> vars_of t \\<union> vars_of v", "from this and \\<open>x \\<in> vars_of s\\<close>"], ["proof (chain)\npicking this:\n  s = v\n  x \\<in> vars_of s", "show ?case"], ["proof (prove)\nusing this:\n  s = v\n  x \\<in> vars_of s\n\ngoal (1 subgoal):\n 1. x \\<in> vars_of t \\<union> vars_of v", "by auto"], ["proof (state)\nthis:\n  x \\<in> vars_of t \\<union> vars_of v\n\ngoal (1 subgoal):\n 1. \\<And>a p t s.\n       \\<lbrakk>\\<And>t s.\n                   \\<lbrakk>x \\<in> vars_of s;\n                    replace_subterm t p v s\\<rbrakk>\n                   \\<Longrightarrow> x \\<in> vars_of t \\<union> vars_of v;\n        x \\<in> vars_of s; replace_subterm t (a # p) v s\\<rbrakk>\n       \\<Longrightarrow> x \\<in> vars_of t \\<union> vars_of v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a p t s.\n       \\<lbrakk>\\<And>t s.\n                   \\<lbrakk>x \\<in> vars_of s;\n                    replace_subterm t p v s\\<rbrakk>\n                   \\<Longrightarrow> x \\<in> vars_of t \\<union> vars_of v;\n        x \\<in> vars_of s; replace_subterm t (a # p) v s\\<rbrakk>\n       \\<Longrightarrow> x \\<in> vars_of t \\<union> vars_of v", "case (Cons i q)"], ["proof (state)\nthis:\n  \\<lbrakk>x \\<in> vars_of ?s; replace_subterm ?t q v ?s\\<rbrakk>\n  \\<Longrightarrow> x \\<in> vars_of ?t \\<union> vars_of v\n  x \\<in> vars_of s\n  replace_subterm t (i # q) v s\n\ngoal (1 subgoal):\n 1. \\<And>a p t s.\n       \\<lbrakk>\\<And>t s.\n                   \\<lbrakk>x \\<in> vars_of s;\n                    replace_subterm t p v s\\<rbrakk>\n                   \\<Longrightarrow> x \\<in> vars_of t \\<union> vars_of v;\n        x \\<in> vars_of s; replace_subterm t (a # p) v s\\<rbrakk>\n       \\<Longrightarrow> x \\<in> vars_of t \\<union> vars_of v", "from \\<open>replace_subterm t (Cons i q) v s\\<close>"], ["proof (chain)\npicking this:\n  replace_subterm t (i # q) v s", "obtain t1 t2 where\n        \"t = (Comb t1 t2)\""], ["proof (prove)\nusing this:\n  replace_subterm t (i # q) v s\n\ngoal (1 subgoal):\n 1. (\\<And>t1 t2.\n        t = t1 \\<cdot> t2 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis is_a_variable.cases replace_subterm.simps(2) replace_subterm.simps(3))"], ["proof (state)\nthis:\n  t = t1 \\<cdot> t2\n\ngoal (1 subgoal):\n 1. \\<And>a p t s.\n       \\<lbrakk>\\<And>t s.\n                   \\<lbrakk>x \\<in> vars_of s;\n                    replace_subterm t p v s\\<rbrakk>\n                   \\<Longrightarrow> x \\<in> vars_of t \\<union> vars_of v;\n        x \\<in> vars_of s; replace_subterm t (a # p) v s\\<rbrakk>\n       \\<Longrightarrow> x \\<in> vars_of t \\<union> vars_of v", "have \"i = Left \\<or> i = Right\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i = indices.Left \\<or> i = indices.Right", "using indices.exhaust"], ["proof (prove)\nusing this:\n  \\<lbrakk>?y = indices.Left \\<Longrightarrow> ?P;\n   ?y = indices.Right \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. i = indices.Left \\<or> i = indices.Right", "by blast"], ["proof (state)\nthis:\n  i = indices.Left \\<or> i = indices.Right\n\ngoal (1 subgoal):\n 1. \\<And>a p t s.\n       \\<lbrakk>\\<And>t s.\n                   \\<lbrakk>x \\<in> vars_of s;\n                    replace_subterm t p v s\\<rbrakk>\n                   \\<Longrightarrow> x \\<in> vars_of t \\<union> vars_of v;\n        x \\<in> vars_of s; replace_subterm t (a # p) v s\\<rbrakk>\n       \\<Longrightarrow> x \\<in> vars_of t \\<union> vars_of v", "then"], ["proof (chain)\npicking this:\n  i = indices.Left \\<or> i = indices.Right", "show ?case"], ["proof (prove)\nusing this:\n  i = indices.Left \\<or> i = indices.Right\n\ngoal (1 subgoal):\n 1. x \\<in> vars_of t \\<union> vars_of v", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. i = indices.Left \\<Longrightarrow> x \\<in> vars_of t \\<union> vars_of v\n 2. i = indices.Right \\<Longrightarrow> x \\<in> vars_of t \\<union> vars_of v", "assume \"i = Left\""], ["proof (state)\nthis:\n  i = indices.Left\n\ngoal (2 subgoals):\n 1. i = indices.Left \\<Longrightarrow> x \\<in> vars_of t \\<union> vars_of v\n 2. i = indices.Right \\<Longrightarrow> x \\<in> vars_of t \\<union> vars_of v", "from this and \\<open>t = Comb t1 t2\\<close> and \\<open>replace_subterm t (Cons i q) v s\\<close>"], ["proof (chain)\npicking this:\n  i = indices.Left\n  t = t1 \\<cdot> t2\n  replace_subterm t (i # q) v s", "obtain s1 where \"s = Comb s1 t2\" and \"replace_subterm t1  q v s1\""], ["proof (prove)\nusing this:\n  i = indices.Left\n  t = t1 \\<cdot> t2\n  replace_subterm t (i # q) v s\n\ngoal (1 subgoal):\n 1. (\\<And>s1.\n        \\<lbrakk>s = s1 \\<cdot> t2; replace_subterm t1 q v s1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using replace_subterm.simps(4)"], ["proof (prove)\nusing this:\n  i = indices.Left\n  t = t1 \\<cdot> t2\n  replace_subterm t (i # q) v s\n  replace_subterm (?x \\<cdot> ?y) (indices.Left # ?next) ?u ?S =\n  (\\<exists>S1. replace_subterm ?x ?next ?u S1 \\<and> ?S = S1 \\<cdot> ?y)\n\ngoal (1 subgoal):\n 1. (\\<And>s1.\n        \\<lbrakk>s = s1 \\<cdot> t2; replace_subterm t1 q v s1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s = s1 \\<cdot> t2\n  replace_subterm t1 q v s1\n\ngoal (2 subgoals):\n 1. i = indices.Left \\<Longrightarrow> x \\<in> vars_of t \\<union> vars_of v\n 2. i = indices.Right \\<Longrightarrow> x \\<in> vars_of t \\<union> vars_of v", "from \\<open>s = Comb s1 t2\\<close> and \\<open>x \\<in> vars_of s\\<close>"], ["proof (chain)\npicking this:\n  s = s1 \\<cdot> t2\n  x \\<in> vars_of s", "have \"x \\<in> vars_of s1 \\<or> x \\<in> vars_of t2\""], ["proof (prove)\nusing this:\n  s = s1 \\<cdot> t2\n  x \\<in> vars_of s\n\ngoal (1 subgoal):\n 1. x \\<in> vars_of s1 \\<or> x \\<in> vars_of t2", "by simp"], ["proof (state)\nthis:\n  x \\<in> vars_of s1 \\<or> x \\<in> vars_of t2\n\ngoal (2 subgoals):\n 1. i = indices.Left \\<Longrightarrow> x \\<in> vars_of t \\<union> vars_of v\n 2. i = indices.Right \\<Longrightarrow> x \\<in> vars_of t \\<union> vars_of v", "then"], ["proof (chain)\npicking this:\n  x \\<in> vars_of s1 \\<or> x \\<in> vars_of t2", "show ?case"], ["proof (prove)\nusing this:\n  x \\<in> vars_of s1 \\<or> x \\<in> vars_of t2\n\ngoal (1 subgoal):\n 1. x \\<in> vars_of t \\<union> vars_of v", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> vars_of s1 \\<Longrightarrow>\n    x \\<in> vars_of t \\<union> vars_of v\n 2. x \\<in> vars_of t2 \\<Longrightarrow>\n    x \\<in> vars_of t \\<union> vars_of v", "assume \"x \\<in> vars_of s1\""], ["proof (state)\nthis:\n  x \\<in> vars_of s1\n\ngoal (2 subgoals):\n 1. x \\<in> vars_of s1 \\<Longrightarrow>\n    x \\<in> vars_of t \\<union> vars_of v\n 2. x \\<in> vars_of t2 \\<Longrightarrow>\n    x \\<in> vars_of t \\<union> vars_of v", "from this and Cons.IH [of s1 t1] and \\<open>replace_subterm t1 q v s1\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> vars_of s1\n  \\<lbrakk>x \\<in> vars_of s1; replace_subterm t1 q v s1\\<rbrakk>\n  \\<Longrightarrow> x \\<in> vars_of t1 \\<union> vars_of v\n  replace_subterm t1 q v s1", "have \"x \\<in> (vars_of t1) \\<union> (vars_of v)\""], ["proof (prove)\nusing this:\n  x \\<in> vars_of s1\n  \\<lbrakk>x \\<in> vars_of s1; replace_subterm t1 q v s1\\<rbrakk>\n  \\<Longrightarrow> x \\<in> vars_of t1 \\<union> vars_of v\n  replace_subterm t1 q v s1\n\ngoal (1 subgoal):\n 1. x \\<in> vars_of t1 \\<union> vars_of v", "by auto"], ["proof (state)\nthis:\n  x \\<in> vars_of t1 \\<union> vars_of v\n\ngoal (2 subgoals):\n 1. x \\<in> vars_of s1 \\<Longrightarrow>\n    x \\<in> vars_of t \\<union> vars_of v\n 2. x \\<in> vars_of t2 \\<Longrightarrow>\n    x \\<in> vars_of t \\<union> vars_of v", "from this and \\<open>t = (Comb t1 t2)\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> vars_of t1 \\<union> vars_of v\n  t = t1 \\<cdot> t2", "show ?case"], ["proof (prove)\nusing this:\n  x \\<in> vars_of t1 \\<union> vars_of v\n  t = t1 \\<cdot> t2\n\ngoal (1 subgoal):\n 1. x \\<in> vars_of t \\<union> vars_of v", "by auto"], ["proof (state)\nthis:\n  x \\<in> vars_of t \\<union> vars_of v\n\ngoal (1 subgoal):\n 1. x \\<in> vars_of t2 \\<Longrightarrow>\n    x \\<in> vars_of t \\<union> vars_of v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> vars_of t2 \\<Longrightarrow>\n    x \\<in> vars_of t \\<union> vars_of v", "assume \"x \\<in> vars_of t2\""], ["proof (state)\nthis:\n  x \\<in> vars_of t2\n\ngoal (1 subgoal):\n 1. x \\<in> vars_of t2 \\<Longrightarrow>\n    x \\<in> vars_of t \\<union> vars_of v", "from this and \\<open>t = (Comb t1 t2)\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> vars_of t2\n  t = t1 \\<cdot> t2", "show ?case"], ["proof (prove)\nusing this:\n  x \\<in> vars_of t2\n  t = t1 \\<cdot> t2\n\ngoal (1 subgoal):\n 1. x \\<in> vars_of t \\<union> vars_of v", "by auto"], ["proof (state)\nthis:\n  x \\<in> vars_of t \\<union> vars_of v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> vars_of t \\<union> vars_of v\n\ngoal (1 subgoal):\n 1. i = indices.Right \\<Longrightarrow> x \\<in> vars_of t \\<union> vars_of v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i = indices.Right \\<Longrightarrow> x \\<in> vars_of t \\<union> vars_of v", "assume \"i = Right\""], ["proof (state)\nthis:\n  i = indices.Right\n\ngoal (1 subgoal):\n 1. i = indices.Right \\<Longrightarrow> x \\<in> vars_of t \\<union> vars_of v", "from this and \\<open>t = Comb t1 t2\\<close> and \\<open>replace_subterm t (Cons i q) v s\\<close>"], ["proof (chain)\npicking this:\n  i = indices.Right\n  t = t1 \\<cdot> t2\n  replace_subterm t (i # q) v s", "obtain s2 where \"s = Comb t1 s2\" and \"replace_subterm t2 q v s2\""], ["proof (prove)\nusing this:\n  i = indices.Right\n  t = t1 \\<cdot> t2\n  replace_subterm t (i # q) v s\n\ngoal (1 subgoal):\n 1. (\\<And>s2.\n        \\<lbrakk>s = t1 \\<cdot> s2; replace_subterm t2 q v s2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using replace_subterm.simps"], ["proof (prove)\nusing this:\n  i = indices.Right\n  t = t1 \\<cdot> t2\n  replace_subterm t (i # q) v s\n  replace_subterm ?T [] ?u ?S = (?S = ?u)\n  replace_subterm (Var ?x) (?first # ?next) ?u ?S = False\n  replace_subterm (Const ?c) (?first # ?next) ?u ?S = False\n  replace_subterm (?x \\<cdot> ?y) (indices.Left # ?next) ?u ?S =\n  (\\<exists>S1. replace_subterm ?x ?next ?u S1 \\<and> ?S = S1 \\<cdot> ?y)\n  replace_subterm (?x \\<cdot> ?y) (indices.Right # ?next) ?u ?S =\n  (\\<exists>S2. replace_subterm ?y ?next ?u S2 \\<and> ?S = ?x \\<cdot> S2)\n\ngoal (1 subgoal):\n 1. (\\<And>s2.\n        \\<lbrakk>s = t1 \\<cdot> s2; replace_subterm t2 q v s2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s = t1 \\<cdot> s2\n  replace_subterm t2 q v s2\n\ngoal (1 subgoal):\n 1. i = indices.Right \\<Longrightarrow> x \\<in> vars_of t \\<union> vars_of v", "from \\<open>s = Comb t1 s2\\<close> and \\<open>x \\<in> vars_of s\\<close>"], ["proof (chain)\npicking this:\n  s = t1 \\<cdot> s2\n  x \\<in> vars_of s", "have \"x \\<in> vars_of t1 \\<or> x \\<in> vars_of s2\""], ["proof (prove)\nusing this:\n  s = t1 \\<cdot> s2\n  x \\<in> vars_of s\n\ngoal (1 subgoal):\n 1. x \\<in> vars_of t1 \\<or> x \\<in> vars_of s2", "by simp"], ["proof (state)\nthis:\n  x \\<in> vars_of t1 \\<or> x \\<in> vars_of s2\n\ngoal (1 subgoal):\n 1. i = indices.Right \\<Longrightarrow> x \\<in> vars_of t \\<union> vars_of v", "then"], ["proof (chain)\npicking this:\n  x \\<in> vars_of t1 \\<or> x \\<in> vars_of s2", "show ?case"], ["proof (prove)\nusing this:\n  x \\<in> vars_of t1 \\<or> x \\<in> vars_of s2\n\ngoal (1 subgoal):\n 1. x \\<in> vars_of t \\<union> vars_of v", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> vars_of t1 \\<Longrightarrow>\n    x \\<in> vars_of t \\<union> vars_of v\n 2. x \\<in> vars_of s2 \\<Longrightarrow>\n    x \\<in> vars_of t \\<union> vars_of v", "assume \"x \\<in> vars_of s2\""], ["proof (state)\nthis:\n  x \\<in> vars_of s2\n\ngoal (2 subgoals):\n 1. x \\<in> vars_of t1 \\<Longrightarrow>\n    x \\<in> vars_of t \\<union> vars_of v\n 2. x \\<in> vars_of s2 \\<Longrightarrow>\n    x \\<in> vars_of t \\<union> vars_of v", "from this and Cons.IH [of s2 t2] and \\<open>replace_subterm t2 q v s2\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> vars_of s2\n  \\<lbrakk>x \\<in> vars_of s2; replace_subterm t2 q v s2\\<rbrakk>\n  \\<Longrightarrow> x \\<in> vars_of t2 \\<union> vars_of v\n  replace_subterm t2 q v s2", "have \"x \\<in> (vars_of t2) \\<union> (vars_of v)\""], ["proof (prove)\nusing this:\n  x \\<in> vars_of s2\n  \\<lbrakk>x \\<in> vars_of s2; replace_subterm t2 q v s2\\<rbrakk>\n  \\<Longrightarrow> x \\<in> vars_of t2 \\<union> vars_of v\n  replace_subterm t2 q v s2\n\ngoal (1 subgoal):\n 1. x \\<in> vars_of t2 \\<union> vars_of v", "by auto"], ["proof (state)\nthis:\n  x \\<in> vars_of t2 \\<union> vars_of v\n\ngoal (2 subgoals):\n 1. x \\<in> vars_of t1 \\<Longrightarrow>\n    x \\<in> vars_of t \\<union> vars_of v\n 2. x \\<in> vars_of s2 \\<Longrightarrow>\n    x \\<in> vars_of t \\<union> vars_of v", "from this and \\<open>t = (Comb t1 t2)\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> vars_of t2 \\<union> vars_of v\n  t = t1 \\<cdot> t2", "show ?case"], ["proof (prove)\nusing this:\n  x \\<in> vars_of t2 \\<union> vars_of v\n  t = t1 \\<cdot> t2\n\ngoal (1 subgoal):\n 1. x \\<in> vars_of t \\<union> vars_of v", "by auto"], ["proof (state)\nthis:\n  x \\<in> vars_of t \\<union> vars_of v\n\ngoal (1 subgoal):\n 1. x \\<in> vars_of t1 \\<Longrightarrow>\n    x \\<in> vars_of t \\<union> vars_of v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> vars_of t1 \\<Longrightarrow>\n    x \\<in> vars_of t \\<union> vars_of v", "assume \"x \\<in> vars_of t1\""], ["proof (state)\nthis:\n  x \\<in> vars_of t1\n\ngoal (1 subgoal):\n 1. x \\<in> vars_of t1 \\<Longrightarrow>\n    x \\<in> vars_of t \\<union> vars_of v", "from this and \\<open>t = (Comb t1 t2)\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> vars_of t1\n  t = t1 \\<cdot> t2", "show ?case"], ["proof (prove)\nusing this:\n  x \\<in> vars_of t1\n  t = t1 \\<cdot> t2\n\ngoal (1 subgoal):\n 1. x \\<in> vars_of t \\<union> vars_of v", "by auto"], ["proof (state)\nthis:\n  x \\<in> vars_of t \\<union> vars_of v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> vars_of t \\<union> vars_of v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> vars_of t \\<union> vars_of v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vars_of_replacement_set:\n  assumes \"replace_subterm t p v s\"\n  shows \"vars_of s \\<subseteq> (vars_of t) \\<union> (vars_of v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars_of s \\<subseteq> vars_of t \\<union> vars_of v", "by (meson assms subsetI vars_of_replacement)"], ["", "subsection \\<open>Substitutions and Most General Unifiers\\<close>"], ["", "text \\<open>Substitutions are defined in the Unification theory. We provide some \nadditional definitions and lemmata.\\<close>"], ["", "fun subst_set :: \"'a trm set => 'a subst => 'a trm set\"\n  where\n    \"(subst_set S \\<sigma>) = { u. \\<exists>t. u = (subst t \\<sigma>) \\<and> t \\<in> S }\""], ["", "definition subst_codomain\nwhere\n  \"subst_codomain \\<sigma> V = { x. \\<exists>y. (subst (Var y) \\<sigma>) = (Var x) \\<and> (y \\<in> V) }\""], ["", "lemma subst_codomain_is_finite:\n  assumes \"finite A\"\n  shows \"finite (subst_codomain \\<eta> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (subst_codomain \\<eta> A)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (subst_codomain \\<eta> A)", "have i: \"((\\<lambda>x. (Var x)) ` (subst_codomain \\<eta> A)) \\<subseteq> ((\\<lambda>x. (subst (Var x) \\<eta>)) ` A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Var ` subst_codomain \\<eta> A\n    \\<subseteq> (\\<lambda>x. Var x \\<lhd> \\<eta>) ` A", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Var ` subst_codomain \\<eta> A \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. Var x \\<lhd> \\<eta>) ` A", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Var ` subst_codomain \\<eta> A \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. Var x \\<lhd> \\<eta>) ` A", "assume \"x \\<in> ((\\<lambda>x. (Var x)) ` (subst_codomain \\<eta> A))\""], ["proof (state)\nthis:\n  x \\<in> Var ` subst_codomain \\<eta> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Var ` subst_codomain \\<eta> A \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. Var x \\<lhd> \\<eta>) ` A", "from this"], ["proof (chain)\npicking this:\n  x \\<in> Var ` subst_codomain \\<eta> A", "obtain y where \"y \\<in> (subst_codomain \\<eta> A)\" and \"x = (Var y)\""], ["proof (prove)\nusing this:\n  x \\<in> Var ` subst_codomain \\<eta> A\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> subst_codomain \\<eta> A; x = Var y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  y \\<in> subst_codomain \\<eta> A\n  x = Var y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Var ` subst_codomain \\<eta> A \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. Var x \\<lhd> \\<eta>) ` A", "from \\<open>y \\<in> (subst_codomain \\<eta> A)\\<close>"], ["proof (chain)\npicking this:\n  y \\<in> subst_codomain \\<eta> A", "obtain z where \"(subst (Var z) \\<eta>) = (Var y)\" \"(z \\<in> A)\""], ["proof (prove)\nusing this:\n  y \\<in> subst_codomain \\<eta> A\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<lbrakk>Var z \\<lhd> \\<eta> = Var y; z \\<in> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding subst_codomain_def"], ["proof (prove)\nusing this:\n  y \\<in> {x. \\<exists>y. Var y \\<lhd> \\<eta> = Var x \\<and> y \\<in> A}\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<lbrakk>Var z \\<lhd> \\<eta> = Var y; z \\<in> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  Var z \\<lhd> \\<eta> = Var y\n  z \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Var ` subst_codomain \\<eta> A \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. Var x \\<lhd> \\<eta>) ` A", "from \\<open>(z \\<in> A)\\<close> \\<open>x = (Var y)\\<close> \\<open>(subst (Var z) \\<eta>) = (Var y)\\<close> this"], ["proof (chain)\npicking this:\n  z \\<in> A\n  x = Var y\n  Var z \\<lhd> \\<eta> = Var y\n  Var z \\<lhd> \\<eta> = Var y\n  z \\<in> A", "show \n      \"x \\<in> ((\\<lambda>x. (subst (Var x) \\<eta>)) ` A)\""], ["proof (prove)\nusing this:\n  z \\<in> A\n  x = Var y\n  Var z \\<lhd> \\<eta> = Var y\n  Var z \\<lhd> \\<eta> = Var y\n  z \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>x. Var x \\<lhd> \\<eta>) ` A", "using image_iff"], ["proof (prove)\nusing this:\n  z \\<in> A\n  x = Var y\n  Var z \\<lhd> \\<eta> = Var y\n  Var z \\<lhd> \\<eta> = Var y\n  z \\<in> A\n  (?z \\<in> ?f ` ?A) = (\\<exists>x\\<in>?A. ?z = ?f x)\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>x. Var x \\<lhd> \\<eta>) ` A", "by fastforce"], ["proof (state)\nthis:\n  x \\<in> (\\<lambda>x. Var x \\<lhd> \\<eta>) ` A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Var ` subst_codomain \\<eta> A\n  \\<subseteq> (\\<lambda>x. Var x \\<lhd> \\<eta>) ` A\n\ngoal (1 subgoal):\n 1. finite (subst_codomain \\<eta> A)", "have \"inj_on (\\<lambda>x. (Var x)) (subst_codomain \\<eta> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on Var (subst_codomain \\<eta> A)", "by (meson inj_onI trm.inject(1))"], ["proof (state)\nthis:\n  inj_on Var (subst_codomain \\<eta> A)\n\ngoal (1 subgoal):\n 1. finite (subst_codomain \\<eta> A)", "from assms(1)"], ["proof (chain)\npicking this:\n  finite A", "have \"finite ((\\<lambda>x. (subst (Var x) \\<eta>)) ` A)\""], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. finite ((\\<lambda>x. Var x \\<lhd> \\<eta>) ` A)", "by auto"], ["proof (state)\nthis:\n  finite ((\\<lambda>x. Var x \\<lhd> \\<eta>) ` A)\n\ngoal (1 subgoal):\n 1. finite (subst_codomain \\<eta> A)", "from this and i"], ["proof (chain)\npicking this:\n  finite ((\\<lambda>x. Var x \\<lhd> \\<eta>) ` A)\n  Var ` subst_codomain \\<eta> A\n  \\<subseteq> (\\<lambda>x. Var x \\<lhd> \\<eta>) ` A", "have \"finite ((\\<lambda>x. (Var x)) ` (subst_codomain \\<eta> A))\""], ["proof (prove)\nusing this:\n  finite ((\\<lambda>x. Var x \\<lhd> \\<eta>) ` A)\n  Var ` subst_codomain \\<eta> A\n  \\<subseteq> (\\<lambda>x. Var x \\<lhd> \\<eta>) ` A\n\ngoal (1 subgoal):\n 1. finite (Var ` subst_codomain \\<eta> A)", "using rev_finite_subset"], ["proof (prove)\nusing this:\n  finite ((\\<lambda>x. Var x \\<lhd> \\<eta>) ` A)\n  Var ` subst_codomain \\<eta> A\n  \\<subseteq> (\\<lambda>x. Var x \\<lhd> \\<eta>) ` A\n  \\<lbrakk>finite ?B; ?A \\<subseteq> ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. finite (Var ` subst_codomain \\<eta> A)", "by auto"], ["proof (state)\nthis:\n  finite (Var ` subst_codomain \\<eta> A)\n\ngoal (1 subgoal):\n 1. finite (subst_codomain \\<eta> A)", "from this and \\<open>inj_on (\\<lambda>x. (Var x)) (subst_codomain \\<eta> A)\\<close>"], ["proof (chain)\npicking this:\n  finite (Var ` subst_codomain \\<eta> A)\n  inj_on Var (subst_codomain \\<eta> A)", "show ?thesis"], ["proof (prove)\nusing this:\n  finite (Var ` subst_codomain \\<eta> A)\n  inj_on Var (subst_codomain \\<eta> A)\n\ngoal (1 subgoal):\n 1. finite (subst_codomain \\<eta> A)", "using finite_imageD [of \"(\\<lambda>x. (Var x))\" \"subst_codomain \\<eta> A\"]"], ["proof (prove)\nusing this:\n  finite (Var ` subst_codomain \\<eta> A)\n  inj_on Var (subst_codomain \\<eta> A)\n  \\<lbrakk>finite (Var ` subst_codomain \\<eta> A);\n   inj_on Var (subst_codomain \\<eta> A)\\<rbrakk>\n  \\<Longrightarrow> finite (subst_codomain \\<eta> A)\n\ngoal (1 subgoal):\n 1. finite (subst_codomain \\<eta> A)", "by auto"], ["proof (state)\nthis:\n  finite (subst_codomain \\<eta> A)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The notions of unifiers, most general unifiers, the unification algorithm and a \nproof of correctness are provided in the Unification theory. Below, we prove that the algorithm \nis complete.\\<close>"], ["", "lemma subt_decompose:\n  shows \"\\<forall>t1 t2. Comb t1 t2 \\<prec> s \\<longrightarrow> (t1 \\<prec> s \\<and> t2\\<prec> s) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>t1 t2.\n       t1 \\<cdot> t2 \\<prec> s \\<longrightarrow>\n       t1 \\<prec> s \\<and> t2 \\<prec> s", "proof ((induction s),(simp),(simp))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s1 s2.\n       \\<lbrakk>\\<forall>t1 t2.\n                   t1 \\<cdot> t2 \\<prec> s1 \\<longrightarrow>\n                   t1 \\<prec> s1 \\<and> t2 \\<prec> s1;\n        \\<forall>t1 t2.\n           t1 \\<cdot> t2 \\<prec> s2 \\<longrightarrow>\n           t1 \\<prec> s2 \\<and> t2 \\<prec> s2\\<rbrakk>\n       \\<Longrightarrow> \\<forall>t1 t2.\n                            t1 \\<cdot> t2 \\<prec>\n                            s1 \\<cdot> s2 \\<longrightarrow>\n                            t1 \\<prec> s1 \\<cdot> s2 \\<and>\n                            t2 \\<prec> s1 \\<cdot> s2", "case (Comb s1 s2)"], ["proof (state)\nthis:\n  \\<forall>t1 t2.\n     t1 \\<cdot> t2 \\<prec> s1 \\<longrightarrow>\n     t1 \\<prec> s1 \\<and> t2 \\<prec> s1\n  \\<forall>t1 t2.\n     t1 \\<cdot> t2 \\<prec> s2 \\<longrightarrow>\n     t1 \\<prec> s2 \\<and> t2 \\<prec> s2\n\ngoal (1 subgoal):\n 1. \\<And>s1 s2.\n       \\<lbrakk>\\<forall>t1 t2.\n                   t1 \\<cdot> t2 \\<prec> s1 \\<longrightarrow>\n                   t1 \\<prec> s1 \\<and> t2 \\<prec> s1;\n        \\<forall>t1 t2.\n           t1 \\<cdot> t2 \\<prec> s2 \\<longrightarrow>\n           t1 \\<prec> s2 \\<and> t2 \\<prec> s2\\<rbrakk>\n       \\<Longrightarrow> \\<forall>t1 t2.\n                            t1 \\<cdot> t2 \\<prec>\n                            s1 \\<cdot> s2 \\<longrightarrow>\n                            t1 \\<prec> s1 \\<cdot> s2 \\<and>\n                            t2 \\<prec> s1 \\<cdot> s2", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>t1 t2.\n       t1 \\<cdot> t2 \\<prec> s1 \\<cdot> s2 \\<longrightarrow>\n       t1 \\<prec> s1 \\<cdot> s2 \\<and> t2 \\<prec> s1 \\<cdot> s2", "proof ((rule allI)+,(rule impI))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 t2.\n       t1 \\<cdot> t2 \\<prec> s1 \\<cdot> s2 \\<Longrightarrow>\n       t1 \\<prec> s1 \\<cdot> s2 \\<and> t2 \\<prec> s1 \\<cdot> s2", "fix t1 t2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 t2.\n       t1 \\<cdot> t2 \\<prec> s1 \\<cdot> s2 \\<Longrightarrow>\n       t1 \\<prec> s1 \\<cdot> s2 \\<and> t2 \\<prec> s1 \\<cdot> s2", "assume \"Comb t1 t2 \\<prec> Comb s1 s2\""], ["proof (state)\nthis:\n  t1 \\<cdot> t2 \\<prec> s1 \\<cdot> s2\n\ngoal (1 subgoal):\n 1. \\<And>t1 t2.\n       t1 \\<cdot> t2 \\<prec> s1 \\<cdot> s2 \\<Longrightarrow>\n       t1 \\<prec> s1 \\<cdot> s2 \\<and> t2 \\<prec> s1 \\<cdot> s2", "show \"t1 \\<prec> (Comb s1 s2) \\<and> t2 \\<prec> (Comb s1 s2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t1 \\<prec> s1 \\<cdot> s2 \\<and> t2 \\<prec> s1 \\<cdot> s2", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (t1 \\<prec> s1 \\<cdot> s2 \\<and>\n            t2 \\<prec> s1 \\<cdot> s2) \\<Longrightarrow>\n    False", "assume neg: \"\\<not>(t1 \\<prec> (Comb s1 s2) \\<and> t2 \\<prec> (Comb s1 s2))\""], ["proof (state)\nthis:\n  \\<not> (t1 \\<prec> s1 \\<cdot> s2 \\<and> t2 \\<prec> s1 \\<cdot> s2)\n\ngoal (1 subgoal):\n 1. \\<not> (t1 \\<prec> s1 \\<cdot> s2 \\<and>\n            t2 \\<prec> s1 \\<cdot> s2) \\<Longrightarrow>\n    False", "from \\<open>Comb t1 t2 \\<prec> Comb s1 s2\\<close>"], ["proof (chain)\npicking this:\n  t1 \\<cdot> t2 \\<prec> s1 \\<cdot> s2", "have \n          d: \"Comb t1 t2 = s1 \\<or> Comb t1 t2 = s2 \\<or> Comb t1 t2 \\<prec> s1 \\<or> Comb t1 t2 \\<prec> s2\""], ["proof (prove)\nusing this:\n  t1 \\<cdot> t2 \\<prec> s1 \\<cdot> s2\n\ngoal (1 subgoal):\n 1. t1 \\<cdot> t2 = s1 \\<or>\n    t1 \\<cdot> t2 = s2 \\<or>\n    t1 \\<cdot> t2 \\<prec> s1 \\<or> t1 \\<cdot> t2 \\<prec> s2", "by auto"], ["proof (state)\nthis:\n  t1 \\<cdot> t2 = s1 \\<or>\n  t1 \\<cdot> t2 = s2 \\<or>\n  t1 \\<cdot> t2 \\<prec> s1 \\<or> t1 \\<cdot> t2 \\<prec> s2\n\ngoal (1 subgoal):\n 1. \\<not> (t1 \\<prec> s1 \\<cdot> s2 \\<and>\n            t2 \\<prec> s1 \\<cdot> s2) \\<Longrightarrow>\n    False", "have i: \"\\<not> (Comb t1 t2 = s1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t1 \\<cdot> t2 \\<noteq> s1", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. t1 \\<cdot> t2 = s1 \\<Longrightarrow> False", "assume \"(Comb t1 t2 = s1)\""], ["proof (state)\nthis:\n  t1 \\<cdot> t2 = s1\n\ngoal (1 subgoal):\n 1. t1 \\<cdot> t2 = s1 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  t1 \\<cdot> t2 = s1", "have \"t1 \\<prec> s1\" and \"t2 \\<prec> s1\""], ["proof (prove)\nusing this:\n  t1 \\<cdot> t2 = s1\n\ngoal (1 subgoal):\n 1. t1 \\<prec> s1 &&& t2 \\<prec> s1", "by auto"], ["proof (state)\nthis:\n  t1 \\<prec> s1\n  t2 \\<prec> s1\n\ngoal (1 subgoal):\n 1. t1 \\<cdot> t2 = s1 \\<Longrightarrow> False", "from this and neg"], ["proof (chain)\npicking this:\n  t1 \\<prec> s1\n  t2 \\<prec> s1\n  \\<not> (t1 \\<prec> s1 \\<cdot> s2 \\<and> t2 \\<prec> s1 \\<cdot> s2)", "show False"], ["proof (prove)\nusing this:\n  t1 \\<prec> s1\n  t2 \\<prec> s1\n  \\<not> (t1 \\<prec> s1 \\<cdot> s2 \\<and> t2 \\<prec> s1 \\<cdot> s2)\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  t1 \\<cdot> t2 \\<noteq> s1\n\ngoal (1 subgoal):\n 1. \\<not> (t1 \\<prec> s1 \\<cdot> s2 \\<and>\n            t2 \\<prec> s1 \\<cdot> s2) \\<Longrightarrow>\n    False", "have ii: \"\\<not> (Comb t1 t2 = s2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t1 \\<cdot> t2 \\<noteq> s2", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. t1 \\<cdot> t2 = s2 \\<Longrightarrow> False", "assume \"(Comb t1 t2 = s2)\""], ["proof (state)\nthis:\n  t1 \\<cdot> t2 = s2\n\ngoal (1 subgoal):\n 1. t1 \\<cdot> t2 = s2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  t1 \\<cdot> t2 = s2", "have \"t1 \\<prec> s2\" and \"t2 \\<prec> s2\""], ["proof (prove)\nusing this:\n  t1 \\<cdot> t2 = s2\n\ngoal (1 subgoal):\n 1. t1 \\<prec> s2 &&& t2 \\<prec> s2", "by auto"], ["proof (state)\nthis:\n  t1 \\<prec> s2\n  t2 \\<prec> s2\n\ngoal (1 subgoal):\n 1. t1 \\<cdot> t2 = s2 \\<Longrightarrow> False", "from this and neg"], ["proof (chain)\npicking this:\n  t1 \\<prec> s2\n  t2 \\<prec> s2\n  \\<not> (t1 \\<prec> s1 \\<cdot> s2 \\<and> t2 \\<prec> s1 \\<cdot> s2)", "show False"], ["proof (prove)\nusing this:\n  t1 \\<prec> s2\n  t2 \\<prec> s2\n  \\<not> (t1 \\<prec> s1 \\<cdot> s2 \\<and> t2 \\<prec> s1 \\<cdot> s2)\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  t1 \\<cdot> t2 \\<noteq> s2\n\ngoal (1 subgoal):\n 1. \\<not> (t1 \\<prec> s1 \\<cdot> s2 \\<and>\n            t2 \\<prec> s1 \\<cdot> s2) \\<Longrightarrow>\n    False", "have iii: \"\\<not> (Comb t1 t2 \\<prec> s1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> t1 \\<cdot> t2 \\<prec> s1", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. t1 \\<cdot> t2 \\<prec> s1 \\<Longrightarrow> False", "assume \"(Comb t1 t2 \\<prec> s1)\""], ["proof (state)\nthis:\n  t1 \\<cdot> t2 \\<prec> s1\n\ngoal (1 subgoal):\n 1. t1 \\<cdot> t2 \\<prec> s1 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  t1 \\<cdot> t2 \\<prec> s1", "have \"t1 \\<prec> s1 \\<and> t2 \\<prec> s1\""], ["proof (prove)\nusing this:\n  t1 \\<cdot> t2 \\<prec> s1\n\ngoal (1 subgoal):\n 1. t1 \\<prec> s1 \\<and> t2 \\<prec> s1", "using Comb.IH"], ["proof (prove)\nusing this:\n  t1 \\<cdot> t2 \\<prec> s1\n  \\<forall>t1 t2.\n     t1 \\<cdot> t2 \\<prec> s1 \\<longrightarrow>\n     t1 \\<prec> s1 \\<and> t2 \\<prec> s1\n  \\<forall>t1 t2.\n     t1 \\<cdot> t2 \\<prec> s2 \\<longrightarrow>\n     t1 \\<prec> s2 \\<and> t2 \\<prec> s2\n\ngoal (1 subgoal):\n 1. t1 \\<prec> s1 \\<and> t2 \\<prec> s1", "by metis"], ["proof (state)\nthis:\n  t1 \\<prec> s1 \\<and> t2 \\<prec> s1\n\ngoal (1 subgoal):\n 1. t1 \\<cdot> t2 \\<prec> s1 \\<Longrightarrow> False", "from this and neg"], ["proof (chain)\npicking this:\n  t1 \\<prec> s1 \\<and> t2 \\<prec> s1\n  \\<not> (t1 \\<prec> s1 \\<cdot> s2 \\<and> t2 \\<prec> s1 \\<cdot> s2)", "show False"], ["proof (prove)\nusing this:\n  t1 \\<prec> s1 \\<and> t2 \\<prec> s1\n  \\<not> (t1 \\<prec> s1 \\<cdot> s2 \\<and> t2 \\<prec> s1 \\<cdot> s2)\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> t1 \\<cdot> t2 \\<prec> s1\n\ngoal (1 subgoal):\n 1. \\<not> (t1 \\<prec> s1 \\<cdot> s2 \\<and>\n            t2 \\<prec> s1 \\<cdot> s2) \\<Longrightarrow>\n    False", "have iv: \"\\<not> (Comb t1 t2 \\<prec> s2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> t1 \\<cdot> t2 \\<prec> s2", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. t1 \\<cdot> t2 \\<prec> s2 \\<Longrightarrow> False", "assume \"(Comb t1 t2 \\<prec> s2)\""], ["proof (state)\nthis:\n  t1 \\<cdot> t2 \\<prec> s2\n\ngoal (1 subgoal):\n 1. t1 \\<cdot> t2 \\<prec> s2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  t1 \\<cdot> t2 \\<prec> s2", "have \"t1 \\<prec> s2  \\<and> t2 \\<prec> s2\""], ["proof (prove)\nusing this:\n  t1 \\<cdot> t2 \\<prec> s2\n\ngoal (1 subgoal):\n 1. t1 \\<prec> s2 \\<and> t2 \\<prec> s2", "using Comb.IH"], ["proof (prove)\nusing this:\n  t1 \\<cdot> t2 \\<prec> s2\n  \\<forall>t1 t2.\n     t1 \\<cdot> t2 \\<prec> s1 \\<longrightarrow>\n     t1 \\<prec> s1 \\<and> t2 \\<prec> s1\n  \\<forall>t1 t2.\n     t1 \\<cdot> t2 \\<prec> s2 \\<longrightarrow>\n     t1 \\<prec> s2 \\<and> t2 \\<prec> s2\n\ngoal (1 subgoal):\n 1. t1 \\<prec> s2 \\<and> t2 \\<prec> s2", "by metis"], ["proof (state)\nthis:\n  t1 \\<prec> s2 \\<and> t2 \\<prec> s2\n\ngoal (1 subgoal):\n 1. t1 \\<cdot> t2 \\<prec> s2 \\<Longrightarrow> False", "from this and neg"], ["proof (chain)\npicking this:\n  t1 \\<prec> s2 \\<and> t2 \\<prec> s2\n  \\<not> (t1 \\<prec> s1 \\<cdot> s2 \\<and> t2 \\<prec> s1 \\<cdot> s2)", "show False"], ["proof (prove)\nusing this:\n  t1 \\<prec> s2 \\<and> t2 \\<prec> s2\n  \\<not> (t1 \\<prec> s1 \\<cdot> s2 \\<and> t2 \\<prec> s1 \\<cdot> s2)\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> t1 \\<cdot> t2 \\<prec> s2\n\ngoal (1 subgoal):\n 1. \\<not> (t1 \\<prec> s1 \\<cdot> s2 \\<and>\n            t2 \\<prec> s1 \\<cdot> s2) \\<Longrightarrow>\n    False", "from d and i ii iii iv"], ["proof (chain)\npicking this:\n  t1 \\<cdot> t2 = s1 \\<or>\n  t1 \\<cdot> t2 = s2 \\<or>\n  t1 \\<cdot> t2 \\<prec> s1 \\<or> t1 \\<cdot> t2 \\<prec> s2\n  t1 \\<cdot> t2 \\<noteq> s1\n  t1 \\<cdot> t2 \\<noteq> s2\n  \\<not> t1 \\<cdot> t2 \\<prec> s1\n  \\<not> t1 \\<cdot> t2 \\<prec> s2", "show False"], ["proof (prove)\nusing this:\n  t1 \\<cdot> t2 = s1 \\<or>\n  t1 \\<cdot> t2 = s2 \\<or>\n  t1 \\<cdot> t2 \\<prec> s1 \\<or> t1 \\<cdot> t2 \\<prec> s2\n  t1 \\<cdot> t2 \\<noteq> s1\n  t1 \\<cdot> t2 \\<noteq> s2\n  \\<not> t1 \\<cdot> t2 \\<prec> s1\n  \\<not> t1 \\<cdot> t2 \\<prec> s2\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  t1 \\<prec> s1 \\<cdot> s2 \\<and> t2 \\<prec> s1 \\<cdot> s2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>t1 t2.\n     t1 \\<cdot> t2 \\<prec> s1 \\<cdot> s2 \\<longrightarrow>\n     t1 \\<prec> s1 \\<cdot> s2 \\<and> t2 \\<prec> s1 \\<cdot> s2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subt_irrefl:\n  shows \"\\<not> (s \\<prec> s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> s \\<prec> s", "proof ((induction s),(simp),(simp))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s1 s2.\n       \\<lbrakk>\\<not> s1 \\<prec> s1; \\<not> s2 \\<prec> s2\\<rbrakk>\n       \\<Longrightarrow> \\<not> s1 \\<cdot> s2 \\<prec> s1 \\<cdot> s2", "case (Comb t1 t2)"], ["proof (state)\nthis:\n  \\<not> t1 \\<prec> t1\n  \\<not> t2 \\<prec> t2\n\ngoal (1 subgoal):\n 1. \\<And>s1 s2.\n       \\<lbrakk>\\<not> s1 \\<prec> s1; \\<not> s2 \\<prec> s2\\<rbrakk>\n       \\<Longrightarrow> \\<not> s1 \\<cdot> s2 \\<prec> s1 \\<cdot> s2", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> t1 \\<cdot> t2 \\<prec> t1 \\<cdot> t2", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. t1 \\<cdot> t2 \\<prec> t1 \\<cdot> t2 \\<Longrightarrow> False", "assume \"Comb t1 t2 \\<prec> Comb t1 t2\""], ["proof (state)\nthis:\n  t1 \\<cdot> t2 \\<prec> t1 \\<cdot> t2\n\ngoal (1 subgoal):\n 1. t1 \\<cdot> t2 \\<prec> t1 \\<cdot> t2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  t1 \\<cdot> t2 \\<prec> t1 \\<cdot> t2", "have i: \"Comb t1 t2 \\<noteq> t1\""], ["proof (prove)\nusing this:\n  t1 \\<cdot> t2 \\<prec> t1 \\<cdot> t2\n\ngoal (1 subgoal):\n 1. t1 \\<cdot> t2 \\<noteq> t1", "using Comb.IH(1)"], ["proof (prove)\nusing this:\n  t1 \\<cdot> t2 \\<prec> t1 \\<cdot> t2\n  \\<not> t1 \\<prec> t1\n\ngoal (1 subgoal):\n 1. t1 \\<cdot> t2 \\<noteq> t1", "by fastforce"], ["proof (state)\nthis:\n  t1 \\<cdot> t2 \\<noteq> t1\n\ngoal (1 subgoal):\n 1. t1 \\<cdot> t2 \\<prec> t1 \\<cdot> t2 \\<Longrightarrow> False", "from \\<open>Comb t1 t2 \\<prec> Comb t1 t2\\<close>"], ["proof (chain)\npicking this:\n  t1 \\<cdot> t2 \\<prec> t1 \\<cdot> t2", "have ii: \"Comb t1 t2 \\<noteq> t2\""], ["proof (prove)\nusing this:\n  t1 \\<cdot> t2 \\<prec> t1 \\<cdot> t2\n\ngoal (1 subgoal):\n 1. t1 \\<cdot> t2 \\<noteq> t2", "using Comb.IH(2)"], ["proof (prove)\nusing this:\n  t1 \\<cdot> t2 \\<prec> t1 \\<cdot> t2\n  \\<not> t2 \\<prec> t2\n\ngoal (1 subgoal):\n 1. t1 \\<cdot> t2 \\<noteq> t2", "by fastforce"], ["proof (state)\nthis:\n  t1 \\<cdot> t2 \\<noteq> t2\n\ngoal (1 subgoal):\n 1. t1 \\<cdot> t2 \\<prec> t1 \\<cdot> t2 \\<Longrightarrow> False", "from i ii and \\<open>Comb t1 t2 \\<prec> Comb t1 t2\\<close>"], ["proof (chain)\npicking this:\n  t1 \\<cdot> t2 \\<noteq> t1\n  t1 \\<cdot> t2 \\<noteq> t2\n  t1 \\<cdot> t2 \\<prec> t1 \\<cdot> t2", "have \"Comb t1 t2 \\<prec> t1 \\<or> Comb t1 t2 \\<prec> t2\""], ["proof (prove)\nusing this:\n  t1 \\<cdot> t2 \\<noteq> t1\n  t1 \\<cdot> t2 \\<noteq> t2\n  t1 \\<cdot> t2 \\<prec> t1 \\<cdot> t2\n\ngoal (1 subgoal):\n 1. t1 \\<cdot> t2 \\<prec> t1 \\<or> t1 \\<cdot> t2 \\<prec> t2", "by auto"], ["proof (state)\nthis:\n  t1 \\<cdot> t2 \\<prec> t1 \\<or> t1 \\<cdot> t2 \\<prec> t2\n\ngoal (1 subgoal):\n 1. t1 \\<cdot> t2 \\<prec> t1 \\<cdot> t2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  t1 \\<cdot> t2 \\<prec> t1 \\<or> t1 \\<cdot> t2 \\<prec> t2", "show False"], ["proof (prove)\nusing this:\n  t1 \\<cdot> t2 \\<prec> t1 \\<or> t1 \\<cdot> t2 \\<prec> t2\n\ngoal (1 subgoal):\n 1. False", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. t1 \\<cdot> t2 \\<prec> t1 \\<Longrightarrow> False\n 2. t1 \\<cdot> t2 \\<prec> t2 \\<Longrightarrow> False", "assume \"Comb t1 t2  \\<prec> t1\""], ["proof (state)\nthis:\n  t1 \\<cdot> t2 \\<prec> t1\n\ngoal (2 subgoals):\n 1. t1 \\<cdot> t2 \\<prec> t1 \\<Longrightarrow> False\n 2. t1 \\<cdot> t2 \\<prec> t2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  t1 \\<cdot> t2 \\<prec> t1", "have \"t1 \\<prec> t1\""], ["proof (prove)\nusing this:\n  t1 \\<cdot> t2 \\<prec> t1\n\ngoal (1 subgoal):\n 1. t1 \\<prec> t1", "using subt_decompose [of t1]"], ["proof (prove)\nusing this:\n  t1 \\<cdot> t2 \\<prec> t1\n  \\<forall>t1a t2.\n     t1a \\<cdot> t2 \\<prec> t1 \\<longrightarrow>\n     t1a \\<prec> t1 \\<and> t2 \\<prec> t1\n\ngoal (1 subgoal):\n 1. t1 \\<prec> t1", "by metis"], ["proof (state)\nthis:\n  t1 \\<prec> t1\n\ngoal (2 subgoals):\n 1. t1 \\<cdot> t2 \\<prec> t1 \\<Longrightarrow> False\n 2. t1 \\<cdot> t2 \\<prec> t2 \\<Longrightarrow> False", "from this"], ["proof (chain)\npicking this:\n  t1 \\<prec> t1", "show False"], ["proof (prove)\nusing this:\n  t1 \\<prec> t1\n\ngoal (1 subgoal):\n 1. False", "using Comb.IH"], ["proof (prove)\nusing this:\n  t1 \\<prec> t1\n  \\<not> t1 \\<prec> t1\n  \\<not> t2 \\<prec> t2\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. t1 \\<cdot> t2 \\<prec> t2 \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. t1 \\<cdot> t2 \\<prec> t2 \\<Longrightarrow> False", "assume \"Comb t1 t2  \\<prec> t2\""], ["proof (state)\nthis:\n  t1 \\<cdot> t2 \\<prec> t2\n\ngoal (1 subgoal):\n 1. t1 \\<cdot> t2 \\<prec> t2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  t1 \\<cdot> t2 \\<prec> t2", "have \"t2 \\<prec> t2\""], ["proof (prove)\nusing this:\n  t1 \\<cdot> t2 \\<prec> t2\n\ngoal (1 subgoal):\n 1. t2 \\<prec> t2", "using subt_decompose [of t2]"], ["proof (prove)\nusing this:\n  t1 \\<cdot> t2 \\<prec> t2\n  \\<forall>t1 t2a.\n     t1 \\<cdot> t2a \\<prec> t2 \\<longrightarrow>\n     t1 \\<prec> t2 \\<and> t2a \\<prec> t2\n\ngoal (1 subgoal):\n 1. t2 \\<prec> t2", "by metis"], ["proof (state)\nthis:\n  t2 \\<prec> t2\n\ngoal (1 subgoal):\n 1. t1 \\<cdot> t2 \\<prec> t2 \\<Longrightarrow> False", "from this"], ["proof (chain)\npicking this:\n  t2 \\<prec> t2", "show False"], ["proof (prove)\nusing this:\n  t2 \\<prec> t2\n\ngoal (1 subgoal):\n 1. False", "using Comb.IH"], ["proof (prove)\nusing this:\n  t2 \\<prec> t2\n  \\<not> t1 \\<prec> t1\n  \\<not> t2 \\<prec> t2\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> t1 \\<cdot> t2 \\<prec> t1 \\<cdot> t2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma MGU_exists:\n  shows \"\\<forall>\\<sigma>. ((subst t \\<sigma>) = (subst s \\<sigma>) \\<longrightarrow> unify t s \\<noteq> None)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<sigma>.\n       t \\<lhd> \\<sigma> = s \\<lhd> \\<sigma> \\<longrightarrow>\n       unify t s \\<noteq> None", "proof (rule unify.induct)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>c M N.\n       \\<forall>\\<sigma>.\n          Const c \\<lhd> \\<sigma> =\n          M \\<cdot> N \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Const c) (M \\<cdot> N) \\<noteq> None\n 2. \\<And>M N c.\n       \\<forall>\\<sigma>.\n          M \\<cdot> N \\<lhd> \\<sigma> =\n          Const c \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (M \\<cdot> N) (Const c) \\<noteq> None\n 3. \\<And>c v.\n       \\<forall>\\<sigma>.\n          Const c \\<lhd> \\<sigma> = Var v \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Const c) (Var v) \\<noteq> None\n 4. \\<And>M N v.\n       \\<forall>\\<sigma>.\n          M \\<cdot> N \\<lhd> \\<sigma> =\n          Var v \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (M \\<cdot> N) (Var v) \\<noteq> None\n 5. \\<And>v M.\n       \\<forall>\\<sigma>.\n          Var v \\<lhd> \\<sigma> = M \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Var v) M \\<noteq> None\n 6. \\<And>c d.\n       \\<forall>\\<sigma>.\n          Const c \\<lhd> \\<sigma> =\n          Const d \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Const c) (Const d) \\<noteq> None\n 7. \\<And>M N M' N'.\n       \\<lbrakk>\\<forall>\\<sigma>.\n                   M \\<lhd> \\<sigma> = M' \\<lhd> \\<sigma> \\<longrightarrow>\n                   unify M M' \\<noteq> None;\n        \\<And>x2.\n           unify M M' = Some x2 \\<Longrightarrow>\n           \\<forall>\\<sigma>.\n              N \\<lhd> x2 \\<lhd> \\<sigma> =\n              N' \\<lhd> x2 \\<lhd> \\<sigma> \\<longrightarrow>\n              unify (N \\<lhd> x2) (N' \\<lhd> x2) \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> \\<forall>\\<sigma>.\n                            M \\<cdot> N \\<lhd> \\<sigma> =\n                            M' \\<cdot> N' \\<lhd> \\<sigma> \\<longrightarrow>\n                            unify (M \\<cdot> N) (M' \\<cdot> N') \\<noteq>\n                            None", "fix x s1 s2"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>c M N.\n       \\<forall>\\<sigma>.\n          Const c \\<lhd> \\<sigma> =\n          M \\<cdot> N \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Const c) (M \\<cdot> N) \\<noteq> None\n 2. \\<And>M N c.\n       \\<forall>\\<sigma>.\n          M \\<cdot> N \\<lhd> \\<sigma> =\n          Const c \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (M \\<cdot> N) (Const c) \\<noteq> None\n 3. \\<And>c v.\n       \\<forall>\\<sigma>.\n          Const c \\<lhd> \\<sigma> = Var v \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Const c) (Var v) \\<noteq> None\n 4. \\<And>M N v.\n       \\<forall>\\<sigma>.\n          M \\<cdot> N \\<lhd> \\<sigma> =\n          Var v \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (M \\<cdot> N) (Var v) \\<noteq> None\n 5. \\<And>v M.\n       \\<forall>\\<sigma>.\n          Var v \\<lhd> \\<sigma> = M \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Var v) M \\<noteq> None\n 6. \\<And>c d.\n       \\<forall>\\<sigma>.\n          Const c \\<lhd> \\<sigma> =\n          Const d \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Const c) (Const d) \\<noteq> None\n 7. \\<And>M N M' N'.\n       \\<lbrakk>\\<forall>\\<sigma>.\n                   M \\<lhd> \\<sigma> = M' \\<lhd> \\<sigma> \\<longrightarrow>\n                   unify M M' \\<noteq> None;\n        \\<And>x2.\n           unify M M' = Some x2 \\<Longrightarrow>\n           \\<forall>\\<sigma>.\n              N \\<lhd> x2 \\<lhd> \\<sigma> =\n              N' \\<lhd> x2 \\<lhd> \\<sigma> \\<longrightarrow>\n              unify (N \\<lhd> x2) (N' \\<lhd> x2) \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> \\<forall>\\<sigma>.\n                            M \\<cdot> N \\<lhd> \\<sigma> =\n                            M' \\<cdot> N' \\<lhd> \\<sigma> \\<longrightarrow>\n                            unify (M \\<cdot> N) (M' \\<cdot> N') \\<noteq>\n                            None", "show \"\\<forall>\\<sigma> :: 'a subst .((subst (Const x) \\<sigma>) = (subst (Comb s1 s2) \\<sigma>) \n      \\<longrightarrow> unify (Const x) (Comb s1 s2) \\<noteq> None)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<sigma>.\n       Const x \\<lhd> \\<sigma> =\n       s1 \\<cdot> s2 \\<lhd> \\<sigma> \\<longrightarrow>\n       unify (Const x) (s1 \\<cdot> s2) \\<noteq> None", "by simp"], ["proof (state)\nthis:\n  \\<forall>\\<sigma>.\n     Const x \\<lhd> \\<sigma> =\n     s1 \\<cdot> s2 \\<lhd> \\<sigma> \\<longrightarrow>\n     unify (Const x) (s1 \\<cdot> s2) \\<noteq> None\n\ngoal (6 subgoals):\n 1. \\<And>M N c.\n       \\<forall>\\<sigma>.\n          M \\<cdot> N \\<lhd> \\<sigma> =\n          Const c \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (M \\<cdot> N) (Const c) \\<noteq> None\n 2. \\<And>c v.\n       \\<forall>\\<sigma>.\n          Const c \\<lhd> \\<sigma> = Var v \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Const c) (Var v) \\<noteq> None\n 3. \\<And>M N v.\n       \\<forall>\\<sigma>.\n          M \\<cdot> N \\<lhd> \\<sigma> =\n          Var v \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (M \\<cdot> N) (Var v) \\<noteq> None\n 4. \\<And>v M.\n       \\<forall>\\<sigma>.\n          Var v \\<lhd> \\<sigma> = M \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Var v) M \\<noteq> None\n 5. \\<And>c d.\n       \\<forall>\\<sigma>.\n          Const c \\<lhd> \\<sigma> =\n          Const d \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Const c) (Const d) \\<noteq> None\n 6. \\<And>M N M' N'.\n       \\<lbrakk>\\<forall>\\<sigma>.\n                   M \\<lhd> \\<sigma> = M' \\<lhd> \\<sigma> \\<longrightarrow>\n                   unify M M' \\<noteq> None;\n        \\<And>x2.\n           unify M M' = Some x2 \\<Longrightarrow>\n           \\<forall>\\<sigma>.\n              N \\<lhd> x2 \\<lhd> \\<sigma> =\n              N' \\<lhd> x2 \\<lhd> \\<sigma> \\<longrightarrow>\n              unify (N \\<lhd> x2) (N' \\<lhd> x2) \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> \\<forall>\\<sigma>.\n                            M \\<cdot> N \\<lhd> \\<sigma> =\n                            M' \\<cdot> N' \\<lhd> \\<sigma> \\<longrightarrow>\n                            unify (M \\<cdot> N) (M' \\<cdot> N') \\<noteq>\n                            None", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>M N c.\n       \\<forall>\\<sigma>.\n          M \\<cdot> N \\<lhd> \\<sigma> =\n          Const c \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (M \\<cdot> N) (Const c) \\<noteq> None\n 2. \\<And>c v.\n       \\<forall>\\<sigma>.\n          Const c \\<lhd> \\<sigma> = Var v \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Const c) (Var v) \\<noteq> None\n 3. \\<And>M N v.\n       \\<forall>\\<sigma>.\n          M \\<cdot> N \\<lhd> \\<sigma> =\n          Var v \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (M \\<cdot> N) (Var v) \\<noteq> None\n 4. \\<And>v M.\n       \\<forall>\\<sigma>.\n          Var v \\<lhd> \\<sigma> = M \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Var v) M \\<noteq> None\n 5. \\<And>c d.\n       \\<forall>\\<sigma>.\n          Const c \\<lhd> \\<sigma> =\n          Const d \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Const c) (Const d) \\<noteq> None\n 6. \\<And>M N M' N'.\n       \\<lbrakk>\\<forall>\\<sigma>.\n                   M \\<lhd> \\<sigma> = M' \\<lhd> \\<sigma> \\<longrightarrow>\n                   unify M M' \\<noteq> None;\n        \\<And>x2.\n           unify M M' = Some x2 \\<Longrightarrow>\n           \\<forall>\\<sigma>.\n              N \\<lhd> x2 \\<lhd> \\<sigma> =\n              N' \\<lhd> x2 \\<lhd> \\<sigma> \\<longrightarrow>\n              unify (N \\<lhd> x2) (N' \\<lhd> x2) \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> \\<forall>\\<sigma>.\n                            M \\<cdot> N \\<lhd> \\<sigma> =\n                            M' \\<cdot> N' \\<lhd> \\<sigma> \\<longrightarrow>\n                            unify (M \\<cdot> N) (M' \\<cdot> N') \\<noteq>\n                            None", "fix t1 t2 y"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>M N c.\n       \\<forall>\\<sigma>.\n          M \\<cdot> N \\<lhd> \\<sigma> =\n          Const c \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (M \\<cdot> N) (Const c) \\<noteq> None\n 2. \\<And>c v.\n       \\<forall>\\<sigma>.\n          Const c \\<lhd> \\<sigma> = Var v \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Const c) (Var v) \\<noteq> None\n 3. \\<And>M N v.\n       \\<forall>\\<sigma>.\n          M \\<cdot> N \\<lhd> \\<sigma> =\n          Var v \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (M \\<cdot> N) (Var v) \\<noteq> None\n 4. \\<And>v M.\n       \\<forall>\\<sigma>.\n          Var v \\<lhd> \\<sigma> = M \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Var v) M \\<noteq> None\n 5. \\<And>c d.\n       \\<forall>\\<sigma>.\n          Const c \\<lhd> \\<sigma> =\n          Const d \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Const c) (Const d) \\<noteq> None\n 6. \\<And>M N M' N'.\n       \\<lbrakk>\\<forall>\\<sigma>.\n                   M \\<lhd> \\<sigma> = M' \\<lhd> \\<sigma> \\<longrightarrow>\n                   unify M M' \\<noteq> None;\n        \\<And>x2.\n           unify M M' = Some x2 \\<Longrightarrow>\n           \\<forall>\\<sigma>.\n              N \\<lhd> x2 \\<lhd> \\<sigma> =\n              N' \\<lhd> x2 \\<lhd> \\<sigma> \\<longrightarrow>\n              unify (N \\<lhd> x2) (N' \\<lhd> x2) \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> \\<forall>\\<sigma>.\n                            M \\<cdot> N \\<lhd> \\<sigma> =\n                            M' \\<cdot> N' \\<lhd> \\<sigma> \\<longrightarrow>\n                            unify (M \\<cdot> N) (M' \\<cdot> N') \\<noteq>\n                            None", "show \"\\<forall>\\<sigma> :: 'a subst.(subst (Comb t1 t2) \\<sigma>) = (subst (Const y) \\<sigma>) \n      \\<longrightarrow> unify (Comb t1 t2) (Const y) \\<noteq> None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<sigma>.\n       t1 \\<cdot> t2 \\<lhd> \\<sigma> =\n       Const y \\<lhd> \\<sigma> \\<longrightarrow>\n       unify (t1 \\<cdot> t2) (Const y) \\<noteq> None", "by simp"], ["proof (state)\nthis:\n  \\<forall>\\<sigma>.\n     t1 \\<cdot> t2 \\<lhd> \\<sigma> =\n     Const y \\<lhd> \\<sigma> \\<longrightarrow>\n     unify (t1 \\<cdot> t2) (Const y) \\<noteq> None\n\ngoal (5 subgoals):\n 1. \\<And>c v.\n       \\<forall>\\<sigma>.\n          Const c \\<lhd> \\<sigma> = Var v \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Const c) (Var v) \\<noteq> None\n 2. \\<And>M N v.\n       \\<forall>\\<sigma>.\n          M \\<cdot> N \\<lhd> \\<sigma> =\n          Var v \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (M \\<cdot> N) (Var v) \\<noteq> None\n 3. \\<And>v M.\n       \\<forall>\\<sigma>.\n          Var v \\<lhd> \\<sigma> = M \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Var v) M \\<noteq> None\n 4. \\<And>c d.\n       \\<forall>\\<sigma>.\n          Const c \\<lhd> \\<sigma> =\n          Const d \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Const c) (Const d) \\<noteq> None\n 5. \\<And>M N M' N'.\n       \\<lbrakk>\\<forall>\\<sigma>.\n                   M \\<lhd> \\<sigma> = M' \\<lhd> \\<sigma> \\<longrightarrow>\n                   unify M M' \\<noteq> None;\n        \\<And>x2.\n           unify M M' = Some x2 \\<Longrightarrow>\n           \\<forall>\\<sigma>.\n              N \\<lhd> x2 \\<lhd> \\<sigma> =\n              N' \\<lhd> x2 \\<lhd> \\<sigma> \\<longrightarrow>\n              unify (N \\<lhd> x2) (N' \\<lhd> x2) \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> \\<forall>\\<sigma>.\n                            M \\<cdot> N \\<lhd> \\<sigma> =\n                            M' \\<cdot> N' \\<lhd> \\<sigma> \\<longrightarrow>\n                            unify (M \\<cdot> N) (M' \\<cdot> N') \\<noteq>\n                            None", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>c v.\n       \\<forall>\\<sigma>.\n          Const c \\<lhd> \\<sigma> = Var v \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Const c) (Var v) \\<noteq> None\n 2. \\<And>M N v.\n       \\<forall>\\<sigma>.\n          M \\<cdot> N \\<lhd> \\<sigma> =\n          Var v \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (M \\<cdot> N) (Var v) \\<noteq> None\n 3. \\<And>v M.\n       \\<forall>\\<sigma>.\n          Var v \\<lhd> \\<sigma> = M \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Var v) M \\<noteq> None\n 4. \\<And>c d.\n       \\<forall>\\<sigma>.\n          Const c \\<lhd> \\<sigma> =\n          Const d \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Const c) (Const d) \\<noteq> None\n 5. \\<And>M N M' N'.\n       \\<lbrakk>\\<forall>\\<sigma>.\n                   M \\<lhd> \\<sigma> = M' \\<lhd> \\<sigma> \\<longrightarrow>\n                   unify M M' \\<noteq> None;\n        \\<And>x2.\n           unify M M' = Some x2 \\<Longrightarrow>\n           \\<forall>\\<sigma>.\n              N \\<lhd> x2 \\<lhd> \\<sigma> =\n              N' \\<lhd> x2 \\<lhd> \\<sigma> \\<longrightarrow>\n              unify (N \\<lhd> x2) (N' \\<lhd> x2) \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> \\<forall>\\<sigma>.\n                            M \\<cdot> N \\<lhd> \\<sigma> =\n                            M' \\<cdot> N' \\<lhd> \\<sigma> \\<longrightarrow>\n                            unify (M \\<cdot> N) (M' \\<cdot> N') \\<noteq>\n                            None", "fix x y"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>c v.\n       \\<forall>\\<sigma>.\n          Const c \\<lhd> \\<sigma> = Var v \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Const c) (Var v) \\<noteq> None\n 2. \\<And>M N v.\n       \\<forall>\\<sigma>.\n          M \\<cdot> N \\<lhd> \\<sigma> =\n          Var v \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (M \\<cdot> N) (Var v) \\<noteq> None\n 3. \\<And>v M.\n       \\<forall>\\<sigma>.\n          Var v \\<lhd> \\<sigma> = M \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Var v) M \\<noteq> None\n 4. \\<And>c d.\n       \\<forall>\\<sigma>.\n          Const c \\<lhd> \\<sigma> =\n          Const d \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Const c) (Const d) \\<noteq> None\n 5. \\<And>M N M' N'.\n       \\<lbrakk>\\<forall>\\<sigma>.\n                   M \\<lhd> \\<sigma> = M' \\<lhd> \\<sigma> \\<longrightarrow>\n                   unify M M' \\<noteq> None;\n        \\<And>x2.\n           unify M M' = Some x2 \\<Longrightarrow>\n           \\<forall>\\<sigma>.\n              N \\<lhd> x2 \\<lhd> \\<sigma> =\n              N' \\<lhd> x2 \\<lhd> \\<sigma> \\<longrightarrow>\n              unify (N \\<lhd> x2) (N' \\<lhd> x2) \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> \\<forall>\\<sigma>.\n                            M \\<cdot> N \\<lhd> \\<sigma> =\n                            M' \\<cdot> N' \\<lhd> \\<sigma> \\<longrightarrow>\n                            unify (M \\<cdot> N) (M' \\<cdot> N') \\<noteq>\n                            None", "show \"\\<forall>\\<sigma> :: 'a subst.(subst (Const x) \\<sigma>) = (subst (Var y) \\<sigma>) \n      \\<longrightarrow> unify (Const x) (Var y) \\<noteq> None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<sigma>.\n       Const x \\<lhd> \\<sigma> = Var y \\<lhd> \\<sigma> \\<longrightarrow>\n       unify (Const x) (Var y) \\<noteq> None", "using unify.simps(3)"], ["proof (prove)\nusing this:\n  unify (Const ?c) (Var ?v) = Some [(?v, Const ?c)]\n\ngoal (1 subgoal):\n 1. \\<forall>\\<sigma>.\n       Const x \\<lhd> \\<sigma> = Var y \\<lhd> \\<sigma> \\<longrightarrow>\n       unify (Const x) (Var y) \\<noteq> None", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>\\<sigma>.\n     Const x \\<lhd> \\<sigma> = Var y \\<lhd> \\<sigma> \\<longrightarrow>\n     unify (Const x) (Var y) \\<noteq> None\n\ngoal (4 subgoals):\n 1. \\<And>M N v.\n       \\<forall>\\<sigma>.\n          M \\<cdot> N \\<lhd> \\<sigma> =\n          Var v \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (M \\<cdot> N) (Var v) \\<noteq> None\n 2. \\<And>v M.\n       \\<forall>\\<sigma>.\n          Var v \\<lhd> \\<sigma> = M \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Var v) M \\<noteq> None\n 3. \\<And>c d.\n       \\<forall>\\<sigma>.\n          Const c \\<lhd> \\<sigma> =\n          Const d \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Const c) (Const d) \\<noteq> None\n 4. \\<And>M N M' N'.\n       \\<lbrakk>\\<forall>\\<sigma>.\n                   M \\<lhd> \\<sigma> = M' \\<lhd> \\<sigma> \\<longrightarrow>\n                   unify M M' \\<noteq> None;\n        \\<And>x2.\n           unify M M' = Some x2 \\<Longrightarrow>\n           \\<forall>\\<sigma>.\n              N \\<lhd> x2 \\<lhd> \\<sigma> =\n              N' \\<lhd> x2 \\<lhd> \\<sigma> \\<longrightarrow>\n              unify (N \\<lhd> x2) (N' \\<lhd> x2) \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> \\<forall>\\<sigma>.\n                            M \\<cdot> N \\<lhd> \\<sigma> =\n                            M' \\<cdot> N' \\<lhd> \\<sigma> \\<longrightarrow>\n                            unify (M \\<cdot> N) (M' \\<cdot> N') \\<noteq>\n                            None", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>M N v.\n       \\<forall>\\<sigma>.\n          M \\<cdot> N \\<lhd> \\<sigma> =\n          Var v \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (M \\<cdot> N) (Var v) \\<noteq> None\n 2. \\<And>v M.\n       \\<forall>\\<sigma>.\n          Var v \\<lhd> \\<sigma> = M \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Var v) M \\<noteq> None\n 3. \\<And>c d.\n       \\<forall>\\<sigma>.\n          Const c \\<lhd> \\<sigma> =\n          Const d \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Const c) (Const d) \\<noteq> None\n 4. \\<And>M N M' N'.\n       \\<lbrakk>\\<forall>\\<sigma>.\n                   M \\<lhd> \\<sigma> = M' \\<lhd> \\<sigma> \\<longrightarrow>\n                   unify M M' \\<noteq> None;\n        \\<And>x2.\n           unify M M' = Some x2 \\<Longrightarrow>\n           \\<forall>\\<sigma>.\n              N \\<lhd> x2 \\<lhd> \\<sigma> =\n              N' \\<lhd> x2 \\<lhd> \\<sigma> \\<longrightarrow>\n              unify (N \\<lhd> x2) (N' \\<lhd> x2) \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> \\<forall>\\<sigma>.\n                            M \\<cdot> N \\<lhd> \\<sigma> =\n                            M' \\<cdot> N' \\<lhd> \\<sigma> \\<longrightarrow>\n                            unify (M \\<cdot> N) (M' \\<cdot> N') \\<noteq>\n                            None", "fix t1 t2 y"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>M N v.\n       \\<forall>\\<sigma>.\n          M \\<cdot> N \\<lhd> \\<sigma> =\n          Var v \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (M \\<cdot> N) (Var v) \\<noteq> None\n 2. \\<And>v M.\n       \\<forall>\\<sigma>.\n          Var v \\<lhd> \\<sigma> = M \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Var v) M \\<noteq> None\n 3. \\<And>c d.\n       \\<forall>\\<sigma>.\n          Const c \\<lhd> \\<sigma> =\n          Const d \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Const c) (Const d) \\<noteq> None\n 4. \\<And>M N M' N'.\n       \\<lbrakk>\\<forall>\\<sigma>.\n                   M \\<lhd> \\<sigma> = M' \\<lhd> \\<sigma> \\<longrightarrow>\n                   unify M M' \\<noteq> None;\n        \\<And>x2.\n           unify M M' = Some x2 \\<Longrightarrow>\n           \\<forall>\\<sigma>.\n              N \\<lhd> x2 \\<lhd> \\<sigma> =\n              N' \\<lhd> x2 \\<lhd> \\<sigma> \\<longrightarrow>\n              unify (N \\<lhd> x2) (N' \\<lhd> x2) \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> \\<forall>\\<sigma>.\n                            M \\<cdot> N \\<lhd> \\<sigma> =\n                            M' \\<cdot> N' \\<lhd> \\<sigma> \\<longrightarrow>\n                            unify (M \\<cdot> N) (M' \\<cdot> N') \\<noteq>\n                            None", "show \"\\<forall>\\<sigma> :: 'a subst.(subst (Comb t1 t2) \\<sigma>) = (subst (Var y) \\<sigma>) \n      \\<longrightarrow> unify (Comb t1 t2) (Var y) \\<noteq> None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<sigma>.\n       t1 \\<cdot> t2 \\<lhd> \\<sigma> =\n       Var y \\<lhd> \\<sigma> \\<longrightarrow>\n       unify (t1 \\<cdot> t2) (Var y) \\<noteq> None", "by (metis option.distinct(1) subst_mono subt_irrefl unify.simps(4))"], ["proof (state)\nthis:\n  \\<forall>\\<sigma>.\n     t1 \\<cdot> t2 \\<lhd> \\<sigma> = Var y \\<lhd> \\<sigma> \\<longrightarrow>\n     unify (t1 \\<cdot> t2) (Var y) \\<noteq> None\n\ngoal (3 subgoals):\n 1. \\<And>v M.\n       \\<forall>\\<sigma>.\n          Var v \\<lhd> \\<sigma> = M \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Var v) M \\<noteq> None\n 2. \\<And>c d.\n       \\<forall>\\<sigma>.\n          Const c \\<lhd> \\<sigma> =\n          Const d \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Const c) (Const d) \\<noteq> None\n 3. \\<And>M N M' N'.\n       \\<lbrakk>\\<forall>\\<sigma>.\n                   M \\<lhd> \\<sigma> = M' \\<lhd> \\<sigma> \\<longrightarrow>\n                   unify M M' \\<noteq> None;\n        \\<And>x2.\n           unify M M' = Some x2 \\<Longrightarrow>\n           \\<forall>\\<sigma>.\n              N \\<lhd> x2 \\<lhd> \\<sigma> =\n              N' \\<lhd> x2 \\<lhd> \\<sigma> \\<longrightarrow>\n              unify (N \\<lhd> x2) (N' \\<lhd> x2) \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> \\<forall>\\<sigma>.\n                            M \\<cdot> N \\<lhd> \\<sigma> =\n                            M' \\<cdot> N' \\<lhd> \\<sigma> \\<longrightarrow>\n                            unify (M \\<cdot> N) (M' \\<cdot> N') \\<noteq>\n                            None", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>v M.\n       \\<forall>\\<sigma>.\n          Var v \\<lhd> \\<sigma> = M \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Var v) M \\<noteq> None\n 2. \\<And>c d.\n       \\<forall>\\<sigma>.\n          Const c \\<lhd> \\<sigma> =\n          Const d \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Const c) (Const d) \\<noteq> None\n 3. \\<And>M N M' N'.\n       \\<lbrakk>\\<forall>\\<sigma>.\n                   M \\<lhd> \\<sigma> = M' \\<lhd> \\<sigma> \\<longrightarrow>\n                   unify M M' \\<noteq> None;\n        \\<And>x2.\n           unify M M' = Some x2 \\<Longrightarrow>\n           \\<forall>\\<sigma>.\n              N \\<lhd> x2 \\<lhd> \\<sigma> =\n              N' \\<lhd> x2 \\<lhd> \\<sigma> \\<longrightarrow>\n              unify (N \\<lhd> x2) (N' \\<lhd> x2) \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> \\<forall>\\<sigma>.\n                            M \\<cdot> N \\<lhd> \\<sigma> =\n                            M' \\<cdot> N' \\<lhd> \\<sigma> \\<longrightarrow>\n                            unify (M \\<cdot> N) (M' \\<cdot> N') \\<noteq>\n                            None", "fix x s"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>v M.\n       \\<forall>\\<sigma>.\n          Var v \\<lhd> \\<sigma> = M \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Var v) M \\<noteq> None\n 2. \\<And>c d.\n       \\<forall>\\<sigma>.\n          Const c \\<lhd> \\<sigma> =\n          Const d \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Const c) (Const d) \\<noteq> None\n 3. \\<And>M N M' N'.\n       \\<lbrakk>\\<forall>\\<sigma>.\n                   M \\<lhd> \\<sigma> = M' \\<lhd> \\<sigma> \\<longrightarrow>\n                   unify M M' \\<noteq> None;\n        \\<And>x2.\n           unify M M' = Some x2 \\<Longrightarrow>\n           \\<forall>\\<sigma>.\n              N \\<lhd> x2 \\<lhd> \\<sigma> =\n              N' \\<lhd> x2 \\<lhd> \\<sigma> \\<longrightarrow>\n              unify (N \\<lhd> x2) (N' \\<lhd> x2) \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> \\<forall>\\<sigma>.\n                            M \\<cdot> N \\<lhd> \\<sigma> =\n                            M' \\<cdot> N' \\<lhd> \\<sigma> \\<longrightarrow>\n                            unify (M \\<cdot> N) (M' \\<cdot> N') \\<noteq>\n                            None", "show \"\\<forall>\\<sigma> :: 'a subst.(subst (Var x) \\<sigma>) = (subst s \\<sigma>) \n      \\<longrightarrow> unify (Var x) s \\<noteq> None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<sigma>.\n       Var x \\<lhd> \\<sigma> = s \\<lhd> \\<sigma> \\<longrightarrow>\n       unify (Var x) s \\<noteq> None", "by (metis option.distinct(1) subst_mono subt_irrefl unify.simps(5))"], ["proof (state)\nthis:\n  \\<forall>\\<sigma>.\n     Var x \\<lhd> \\<sigma> = s \\<lhd> \\<sigma> \\<longrightarrow>\n     unify (Var x) s \\<noteq> None\n\ngoal (2 subgoals):\n 1. \\<And>c d.\n       \\<forall>\\<sigma>.\n          Const c \\<lhd> \\<sigma> =\n          Const d \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Const c) (Const d) \\<noteq> None\n 2. \\<And>M N M' N'.\n       \\<lbrakk>\\<forall>\\<sigma>.\n                   M \\<lhd> \\<sigma> = M' \\<lhd> \\<sigma> \\<longrightarrow>\n                   unify M M' \\<noteq> None;\n        \\<And>x2.\n           unify M M' = Some x2 \\<Longrightarrow>\n           \\<forall>\\<sigma>.\n              N \\<lhd> x2 \\<lhd> \\<sigma> =\n              N' \\<lhd> x2 \\<lhd> \\<sigma> \\<longrightarrow>\n              unify (N \\<lhd> x2) (N' \\<lhd> x2) \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> \\<forall>\\<sigma>.\n                            M \\<cdot> N \\<lhd> \\<sigma> =\n                            M' \\<cdot> N' \\<lhd> \\<sigma> \\<longrightarrow>\n                            unify (M \\<cdot> N) (M' \\<cdot> N') \\<noteq>\n                            None", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c d.\n       \\<forall>\\<sigma>.\n          Const c \\<lhd> \\<sigma> =\n          Const d \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Const c) (Const d) \\<noteq> None\n 2. \\<And>M N M' N'.\n       \\<lbrakk>\\<forall>\\<sigma>.\n                   M \\<lhd> \\<sigma> = M' \\<lhd> \\<sigma> \\<longrightarrow>\n                   unify M M' \\<noteq> None;\n        \\<And>x2.\n           unify M M' = Some x2 \\<Longrightarrow>\n           \\<forall>\\<sigma>.\n              N \\<lhd> x2 \\<lhd> \\<sigma> =\n              N' \\<lhd> x2 \\<lhd> \\<sigma> \\<longrightarrow>\n              unify (N \\<lhd> x2) (N' \\<lhd> x2) \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> \\<forall>\\<sigma>.\n                            M \\<cdot> N \\<lhd> \\<sigma> =\n                            M' \\<cdot> N' \\<lhd> \\<sigma> \\<longrightarrow>\n                            unify (M \\<cdot> N) (M' \\<cdot> N') \\<noteq>\n                            None", "fix x y"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c d.\n       \\<forall>\\<sigma>.\n          Const c \\<lhd> \\<sigma> =\n          Const d \\<lhd> \\<sigma> \\<longrightarrow>\n          unify (Const c) (Const d) \\<noteq> None\n 2. \\<And>M N M' N'.\n       \\<lbrakk>\\<forall>\\<sigma>.\n                   M \\<lhd> \\<sigma> = M' \\<lhd> \\<sigma> \\<longrightarrow>\n                   unify M M' \\<noteq> None;\n        \\<And>x2.\n           unify M M' = Some x2 \\<Longrightarrow>\n           \\<forall>\\<sigma>.\n              N \\<lhd> x2 \\<lhd> \\<sigma> =\n              N' \\<lhd> x2 \\<lhd> \\<sigma> \\<longrightarrow>\n              unify (N \\<lhd> x2) (N' \\<lhd> x2) \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> \\<forall>\\<sigma>.\n                            M \\<cdot> N \\<lhd> \\<sigma> =\n                            M' \\<cdot> N' \\<lhd> \\<sigma> \\<longrightarrow>\n                            unify (M \\<cdot> N) (M' \\<cdot> N') \\<noteq>\n                            None", "show \"\\<forall>\\<sigma> :: 'a subst.(subst (Const x) \\<sigma>) = (subst (Const y) \\<sigma>) \n      \\<longrightarrow> unify (Const x) (Const y) \\<noteq> None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<sigma>.\n       Const x \\<lhd> \\<sigma> = Const y \\<lhd> \\<sigma> \\<longrightarrow>\n       unify (Const x) (Const y) \\<noteq> None", "by simp"], ["proof (state)\nthis:\n  \\<forall>\\<sigma>.\n     Const x \\<lhd> \\<sigma> = Const y \\<lhd> \\<sigma> \\<longrightarrow>\n     unify (Const x) (Const y) \\<noteq> None\n\ngoal (1 subgoal):\n 1. \\<And>M N M' N'.\n       \\<lbrakk>\\<forall>\\<sigma>.\n                   M \\<lhd> \\<sigma> = M' \\<lhd> \\<sigma> \\<longrightarrow>\n                   unify M M' \\<noteq> None;\n        \\<And>x2.\n           unify M M' = Some x2 \\<Longrightarrow>\n           \\<forall>\\<sigma>.\n              N \\<lhd> x2 \\<lhd> \\<sigma> =\n              N' \\<lhd> x2 \\<lhd> \\<sigma> \\<longrightarrow>\n              unify (N \\<lhd> x2) (N' \\<lhd> x2) \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> \\<forall>\\<sigma>.\n                            M \\<cdot> N \\<lhd> \\<sigma> =\n                            M' \\<cdot> N' \\<lhd> \\<sigma> \\<longrightarrow>\n                            unify (M \\<cdot> N) (M' \\<cdot> N') \\<noteq>\n                            None", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M N M' N'.\n       \\<lbrakk>\\<forall>\\<sigma>.\n                   M \\<lhd> \\<sigma> = M' \\<lhd> \\<sigma> \\<longrightarrow>\n                   unify M M' \\<noteq> None;\n        \\<And>x2.\n           unify M M' = Some x2 \\<Longrightarrow>\n           \\<forall>\\<sigma>.\n              N \\<lhd> x2 \\<lhd> \\<sigma> =\n              N' \\<lhd> x2 \\<lhd> \\<sigma> \\<longrightarrow>\n              unify (N \\<lhd> x2) (N' \\<lhd> x2) \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> \\<forall>\\<sigma>.\n                            M \\<cdot> N \\<lhd> \\<sigma> =\n                            M' \\<cdot> N' \\<lhd> \\<sigma> \\<longrightarrow>\n                            unify (M \\<cdot> N) (M' \\<cdot> N') \\<noteq>\n                            None", "fix t1 t2 s1 s2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M N M' N'.\n       \\<lbrakk>\\<forall>\\<sigma>.\n                   M \\<lhd> \\<sigma> = M' \\<lhd> \\<sigma> \\<longrightarrow>\n                   unify M M' \\<noteq> None;\n        \\<And>x2.\n           unify M M' = Some x2 \\<Longrightarrow>\n           \\<forall>\\<sigma>.\n              N \\<lhd> x2 \\<lhd> \\<sigma> =\n              N' \\<lhd> x2 \\<lhd> \\<sigma> \\<longrightarrow>\n              unify (N \\<lhd> x2) (N' \\<lhd> x2) \\<noteq> None\\<rbrakk>\n       \\<Longrightarrow> \\<forall>\\<sigma>.\n                            M \\<cdot> N \\<lhd> \\<sigma> =\n                            M' \\<cdot> N' \\<lhd> \\<sigma> \\<longrightarrow>\n                            unify (M \\<cdot> N) (M' \\<cdot> N') \\<noteq>\n                            None", "show \"\\<forall>\\<sigma> :: 'a subst. (subst t1 \\<sigma> = subst s1 \\<sigma> \\<longrightarrow> unify t1 s1 \\<noteq> None) \\<Longrightarrow>\n       (\\<And>x2. unify t1 s1 = Some x2 \\<Longrightarrow>\n              \\<forall>\\<sigma>. subst (t2 \\<lhd> x2) \\<sigma> = subst (s2 \\<lhd> x2) \\<sigma> \\<longrightarrow>\n              unify (t2 \\<lhd> x2) (s2 \\<lhd> x2) \\<noteq> None) \\<Longrightarrow>\n       \\<forall>\\<sigma>. (subst (t1 \\<cdot> t2) \\<sigma> = subst (s1 \\<cdot> s2) \\<sigma> \\<longrightarrow>\n       unify (t1 \\<cdot> t2) (s1 \\<cdot> s2) \\<noteq> None)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>\\<sigma>.\n                t1 \\<lhd> \\<sigma> = s1 \\<lhd> \\<sigma> \\<longrightarrow>\n                unify t1 s1 \\<noteq> None;\n     \\<And>x2.\n        unify t1 s1 = Some x2 \\<Longrightarrow>\n        \\<forall>\\<sigma>.\n           t2 \\<lhd> x2 \\<lhd> \\<sigma> =\n           s2 \\<lhd> x2 \\<lhd> \\<sigma> \\<longrightarrow>\n           unify (t2 \\<lhd> x2) (s2 \\<lhd> x2) \\<noteq> None\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<sigma>.\n                         t1 \\<cdot> t2 \\<lhd> \\<sigma> =\n                         s1 \\<cdot> s2 \\<lhd> \\<sigma> \\<longrightarrow>\n                         unify (t1 \\<cdot> t2) (s1 \\<cdot> s2) \\<noteq> None", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>\\<sigma>.\n                t1 \\<lhd> \\<sigma> = s1 \\<lhd> \\<sigma> \\<longrightarrow>\n                unify t1 s1 \\<noteq> None;\n     \\<And>x2.\n        unify t1 s1 = Some x2 \\<Longrightarrow>\n        \\<forall>\\<sigma>.\n           t2 \\<lhd> x2 \\<lhd> \\<sigma> =\n           s2 \\<lhd> x2 \\<lhd> \\<sigma> \\<longrightarrow>\n           unify (t2 \\<lhd> x2) (s2 \\<lhd> x2) \\<noteq> None\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<sigma>.\n                         t1 \\<cdot> t2 \\<lhd> \\<sigma> =\n                         s1 \\<cdot> s2 \\<lhd> \\<sigma> \\<longrightarrow>\n                         unify (t1 \\<cdot> t2) (s1 \\<cdot> s2) \\<noteq> None", "assume h1: \"\\<forall>\\<sigma>. (subst t1 \\<sigma> = subst s1 \\<sigma> \\<longrightarrow> unify t1 s1 \\<noteq> None)\""], ["proof (state)\nthis:\n  \\<forall>\\<sigma>.\n     t1 \\<lhd> \\<sigma> = s1 \\<lhd> \\<sigma> \\<longrightarrow>\n     unify t1 s1 \\<noteq> None\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>\\<sigma>.\n                t1 \\<lhd> \\<sigma> = s1 \\<lhd> \\<sigma> \\<longrightarrow>\n                unify t1 s1 \\<noteq> None;\n     \\<And>x2.\n        unify t1 s1 = Some x2 \\<Longrightarrow>\n        \\<forall>\\<sigma>.\n           t2 \\<lhd> x2 \\<lhd> \\<sigma> =\n           s2 \\<lhd> x2 \\<lhd> \\<sigma> \\<longrightarrow>\n           unify (t2 \\<lhd> x2) (s2 \\<lhd> x2) \\<noteq> None\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<sigma>.\n                         t1 \\<cdot> t2 \\<lhd> \\<sigma> =\n                         s1 \\<cdot> s2 \\<lhd> \\<sigma> \\<longrightarrow>\n                         unify (t1 \\<cdot> t2) (s1 \\<cdot> s2) \\<noteq> None", "assume h2: \"(\\<And>x2. unify t1 s1 = Some x2 \\<Longrightarrow>\n              \\<forall>\\<sigma>. subst (t2 \\<lhd> x2) \\<sigma> = subst (s2 \\<lhd> x2) \\<sigma> \\<longrightarrow>\n              unify (t2 \\<lhd> x2) (s2 \\<lhd> x2) \\<noteq> None)\""], ["proof (state)\nthis:\n  unify t1 s1 = Some ?x2.0 \\<Longrightarrow>\n  \\<forall>\\<sigma>.\n     t2 \\<lhd> ?x2.0 \\<lhd> \\<sigma> =\n     s2 \\<lhd> ?x2.0 \\<lhd> \\<sigma> \\<longrightarrow>\n     unify (t2 \\<lhd> ?x2.0) (s2 \\<lhd> ?x2.0) \\<noteq> None\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>\\<sigma>.\n                t1 \\<lhd> \\<sigma> = s1 \\<lhd> \\<sigma> \\<longrightarrow>\n                unify t1 s1 \\<noteq> None;\n     \\<And>x2.\n        unify t1 s1 = Some x2 \\<Longrightarrow>\n        \\<forall>\\<sigma>.\n           t2 \\<lhd> x2 \\<lhd> \\<sigma> =\n           s2 \\<lhd> x2 \\<lhd> \\<sigma> \\<longrightarrow>\n           unify (t2 \\<lhd> x2) (s2 \\<lhd> x2) \\<noteq> None\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<sigma>.\n                         t1 \\<cdot> t2 \\<lhd> \\<sigma> =\n                         s1 \\<cdot> s2 \\<lhd> \\<sigma> \\<longrightarrow>\n                         unify (t1 \\<cdot> t2) (s1 \\<cdot> s2) \\<noteq> None", "show \"\\<forall>\\<sigma>. (subst (t1 \\<cdot> t2) \\<sigma> = subst (s1 \\<cdot> s2) \\<sigma> \\<longrightarrow>\n       unify (t1 \\<cdot> t2) (s1 \\<cdot> s2) \\<noteq> None)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<sigma>.\n       t1 \\<cdot> t2 \\<lhd> \\<sigma> =\n       s1 \\<cdot> s2 \\<lhd> \\<sigma> \\<longrightarrow>\n       unify (t1 \\<cdot> t2) (s1 \\<cdot> s2) \\<noteq> None", "proof ((rule allI),(rule impI))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>.\n       t1 \\<cdot> t2 \\<lhd> \\<sigma> =\n       s1 \\<cdot> s2 \\<lhd> \\<sigma> \\<Longrightarrow>\n       unify (t1 \\<cdot> t2) (s1 \\<cdot> s2) \\<noteq> None", "fix \\<sigma>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>.\n       t1 \\<cdot> t2 \\<lhd> \\<sigma> =\n       s1 \\<cdot> s2 \\<lhd> \\<sigma> \\<Longrightarrow>\n       unify (t1 \\<cdot> t2) (s1 \\<cdot> s2) \\<noteq> None", "assume h3: \"subst (t1 \\<cdot> t2) \\<sigma> = subst (s1 \\<cdot> s2) \\<sigma>\""], ["proof (state)\nthis:\n  t1 \\<cdot> t2 \\<lhd> \\<sigma> = s1 \\<cdot> s2 \\<lhd> \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>.\n       t1 \\<cdot> t2 \\<lhd> \\<sigma> =\n       s1 \\<cdot> s2 \\<lhd> \\<sigma> \\<Longrightarrow>\n       unify (t1 \\<cdot> t2) (s1 \\<cdot> s2) \\<noteq> None", "from h3"], ["proof (chain)\npicking this:\n  t1 \\<cdot> t2 \\<lhd> \\<sigma> = s1 \\<cdot> s2 \\<lhd> \\<sigma>", "have \"subst t1 \\<sigma> = subst s1 \\<sigma>\""], ["proof (prove)\nusing this:\n  t1 \\<cdot> t2 \\<lhd> \\<sigma> = s1 \\<cdot> s2 \\<lhd> \\<sigma>\n\ngoal (1 subgoal):\n 1. t1 \\<lhd> \\<sigma> = s1 \\<lhd> \\<sigma>", "by auto"], ["proof (state)\nthis:\n  t1 \\<lhd> \\<sigma> = s1 \\<lhd> \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>.\n       t1 \\<cdot> t2 \\<lhd> \\<sigma> =\n       s1 \\<cdot> s2 \\<lhd> \\<sigma> \\<Longrightarrow>\n       unify (t1 \\<cdot> t2) (s1 \\<cdot> s2) \\<noteq> None", "from this and h1"], ["proof (chain)\npicking this:\n  t1 \\<lhd> \\<sigma> = s1 \\<lhd> \\<sigma>\n  \\<forall>\\<sigma>.\n     t1 \\<lhd> \\<sigma> = s1 \\<lhd> \\<sigma> \\<longrightarrow>\n     unify t1 s1 \\<noteq> None", "have \"unify t1 s1 \\<noteq> None\""], ["proof (prove)\nusing this:\n  t1 \\<lhd> \\<sigma> = s1 \\<lhd> \\<sigma>\n  \\<forall>\\<sigma>.\n     t1 \\<lhd> \\<sigma> = s1 \\<lhd> \\<sigma> \\<longrightarrow>\n     unify t1 s1 \\<noteq> None\n\ngoal (1 subgoal):\n 1. unify t1 s1 \\<noteq> None", "by auto"], ["proof (state)\nthis:\n  unify t1 s1 \\<noteq> None\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>.\n       t1 \\<cdot> t2 \\<lhd> \\<sigma> =\n       s1 \\<cdot> s2 \\<lhd> \\<sigma> \\<Longrightarrow>\n       unify (t1 \\<cdot> t2) (s1 \\<cdot> s2) \\<noteq> None", "from this"], ["proof (chain)\npicking this:\n  unify t1 s1 \\<noteq> None", "obtain \\<theta> where \"unify t1 s1 = Some \\<theta>\" and \"MGU \\<theta> t1 s1\""], ["proof (prove)\nusing this:\n  unify t1 s1 \\<noteq> None\n\ngoal (1 subgoal):\n 1. (\\<And>\\<theta>.\n        \\<lbrakk>unify t1 s1 = Some \\<theta>; MGU \\<theta> t1 s1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson option.exhaust unify_computes_MGU)"], ["proof (state)\nthis:\n  unify t1 s1 = Some \\<theta>\n  MGU \\<theta> t1 s1\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>.\n       t1 \\<cdot> t2 \\<lhd> \\<sigma> =\n       s1 \\<cdot> s2 \\<lhd> \\<sigma> \\<Longrightarrow>\n       unify (t1 \\<cdot> t2) (s1 \\<cdot> s2) \\<noteq> None", "from \\<open>subst t1 \\<sigma> = subst s1 \\<sigma>\\<close>"], ["proof (chain)\npicking this:\n  t1 \\<lhd> \\<sigma> = s1 \\<lhd> \\<sigma>", "have \"Unifier \\<sigma> t1 s1\""], ["proof (prove)\nusing this:\n  t1 \\<lhd> \\<sigma> = s1 \\<lhd> \\<sigma>\n\ngoal (1 subgoal):\n 1. Unifier \\<sigma> t1 s1", "unfolding Unifier_def"], ["proof (prove)\nusing this:\n  t1 \\<lhd> \\<sigma> = s1 \\<lhd> \\<sigma>\n\ngoal (1 subgoal):\n 1. t1 \\<lhd> \\<sigma> = s1 \\<lhd> \\<sigma>", "by auto"], ["proof (state)\nthis:\n  Unifier \\<sigma> t1 s1\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>.\n       t1 \\<cdot> t2 \\<lhd> \\<sigma> =\n       s1 \\<cdot> s2 \\<lhd> \\<sigma> \\<Longrightarrow>\n       unify (t1 \\<cdot> t2) (s1 \\<cdot> s2) \\<noteq> None", "from this and \\<open>MGU \\<theta> t1 s1\\<close>"], ["proof (chain)\npicking this:\n  Unifier \\<sigma> t1 s1\n  MGU \\<theta> t1 s1", "obtain \\<eta> where  \"\\<sigma> \\<doteq> \\<theta> \\<lozenge> \\<eta>\""], ["proof (prove)\nusing this:\n  Unifier \\<sigma> t1 s1\n  MGU \\<theta> t1 s1\n\ngoal (1 subgoal):\n 1. (\\<And>\\<eta>.\n        \\<sigma> \\<doteq> \\<theta> \\<lozenge> \\<eta> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using MGU_def"], ["proof (prove)\nusing this:\n  Unifier \\<sigma> t1 s1\n  MGU \\<theta> t1 s1\n  MGU ?\\<sigma> ?t ?u =\n  (Unifier ?\\<sigma> ?t ?u \\<and>\n   (\\<forall>\\<theta>.\n       Unifier \\<theta> ?t ?u \\<longrightarrow>\n       (\\<exists>\\<gamma>.\n           \\<theta> \\<doteq> ?\\<sigma> \\<lozenge> \\<gamma>)))\n\ngoal (1 subgoal):\n 1. (\\<And>\\<eta>.\n        \\<sigma> \\<doteq> \\<theta> \\<lozenge> \\<eta> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  \\<sigma> \\<doteq> \\<theta> \\<lozenge> \\<eta>\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>.\n       t1 \\<cdot> t2 \\<lhd> \\<sigma> =\n       s1 \\<cdot> s2 \\<lhd> \\<sigma> \\<Longrightarrow>\n       unify (t1 \\<cdot> t2) (s1 \\<cdot> s2) \\<noteq> None", "from h3"], ["proof (chain)\npicking this:\n  t1 \\<cdot> t2 \\<lhd> \\<sigma> = s1 \\<cdot> s2 \\<lhd> \\<sigma>", "have \"subst t2 \\<sigma> = subst s2 \\<sigma>\""], ["proof (prove)\nusing this:\n  t1 \\<cdot> t2 \\<lhd> \\<sigma> = s1 \\<cdot> s2 \\<lhd> \\<sigma>\n\ngoal (1 subgoal):\n 1. t2 \\<lhd> \\<sigma> = s2 \\<lhd> \\<sigma>", "by auto"], ["proof (state)\nthis:\n  t2 \\<lhd> \\<sigma> = s2 \\<lhd> \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>.\n       t1 \\<cdot> t2 \\<lhd> \\<sigma> =\n       s1 \\<cdot> s2 \\<lhd> \\<sigma> \\<Longrightarrow>\n       unify (t1 \\<cdot> t2) (s1 \\<cdot> s2) \\<noteq> None", "from this and \\<open>\\<sigma> \\<doteq> \\<theta> \\<lozenge> \\<eta>\\<close>"], ["proof (chain)\npicking this:\n  t2 \\<lhd> \\<sigma> = s2 \\<lhd> \\<sigma>\n  \\<sigma> \\<doteq> \\<theta> \\<lozenge> \\<eta>", "have \"subst (subst t2 \\<theta>) \\<eta> \n              = subst (subst s2 \\<theta>) \\<eta>\""], ["proof (prove)\nusing this:\n  t2 \\<lhd> \\<sigma> = s2 \\<lhd> \\<sigma>\n  \\<sigma> \\<doteq> \\<theta> \\<lozenge> \\<eta>\n\ngoal (1 subgoal):\n 1. t2 \\<lhd> \\<theta> \\<lhd> \\<eta> = s2 \\<lhd> \\<theta> \\<lhd> \\<eta>", "by (simp add: subst_eq_def)"], ["proof (state)\nthis:\n  t2 \\<lhd> \\<theta> \\<lhd> \\<eta> = s2 \\<lhd> \\<theta> \\<lhd> \\<eta>\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>.\n       t1 \\<cdot> t2 \\<lhd> \\<sigma> =\n       s1 \\<cdot> s2 \\<lhd> \\<sigma> \\<Longrightarrow>\n       unify (t1 \\<cdot> t2) (s1 \\<cdot> s2) \\<noteq> None", "from this and \\<open>unify t1 s1 = Some \\<theta>\\<close> and h2 [of \\<theta>]"], ["proof (chain)\npicking this:\n  t2 \\<lhd> \\<theta> \\<lhd> \\<eta> = s2 \\<lhd> \\<theta> \\<lhd> \\<eta>\n  unify t1 s1 = Some \\<theta>\n  unify t1 s1 = Some \\<theta> \\<Longrightarrow>\n  \\<forall>\\<sigma>.\n     t2 \\<lhd> \\<theta> \\<lhd> \\<sigma> =\n     s2 \\<lhd> \\<theta> \\<lhd> \\<sigma> \\<longrightarrow>\n     unify (t2 \\<lhd> \\<theta>) (s2 \\<lhd> \\<theta>) \\<noteq> None", "have \"unify (t2 \\<lhd> \\<theta>) (s2 \\<lhd> \\<theta>) \\<noteq> None\""], ["proof (prove)\nusing this:\n  t2 \\<lhd> \\<theta> \\<lhd> \\<eta> = s2 \\<lhd> \\<theta> \\<lhd> \\<eta>\n  unify t1 s1 = Some \\<theta>\n  unify t1 s1 = Some \\<theta> \\<Longrightarrow>\n  \\<forall>\\<sigma>.\n     t2 \\<lhd> \\<theta> \\<lhd> \\<sigma> =\n     s2 \\<lhd> \\<theta> \\<lhd> \\<sigma> \\<longrightarrow>\n     unify (t2 \\<lhd> \\<theta>) (s2 \\<lhd> \\<theta>) \\<noteq> None\n\ngoal (1 subgoal):\n 1. unify (t2 \\<lhd> \\<theta>) (s2 \\<lhd> \\<theta>) \\<noteq> None", "by auto"], ["proof (state)\nthis:\n  unify (t2 \\<lhd> \\<theta>) (s2 \\<lhd> \\<theta>) \\<noteq> None\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>.\n       t1 \\<cdot> t2 \\<lhd> \\<sigma> =\n       s1 \\<cdot> s2 \\<lhd> \\<sigma> \\<Longrightarrow>\n       unify (t1 \\<cdot> t2) (s1 \\<cdot> s2) \\<noteq> None", "from this"], ["proof (chain)\npicking this:\n  unify (t2 \\<lhd> \\<theta>) (s2 \\<lhd> \\<theta>) \\<noteq> None", "show \"unify (t1 \\<cdot> t2) (s1 \\<cdot> s2) \\<noteq> None\""], ["proof (prove)\nusing this:\n  unify (t2 \\<lhd> \\<theta>) (s2 \\<lhd> \\<theta>) \\<noteq> None\n\ngoal (1 subgoal):\n 1. unify (t1 \\<cdot> t2) (s1 \\<cdot> s2) \\<noteq> None", "by (simp add: \\<open>unify t1 s1 = Some \\<theta>\\<close> option.case_eq_if)"], ["proof (state)\nthis:\n  unify (t1 \\<cdot> t2) (s1 \\<cdot> s2) \\<noteq> None\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<sigma>.\n     t1 \\<cdot> t2 \\<lhd> \\<sigma> =\n     s1 \\<cdot> s2 \\<lhd> \\<sigma> \\<longrightarrow>\n     unify (t1 \\<cdot> t2) (s1 \\<cdot> s2) \\<noteq> None\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>\\<sigma>.\n              t1 \\<lhd> \\<sigma> = s1 \\<lhd> \\<sigma> \\<longrightarrow>\n              unify t1 s1 \\<noteq> None;\n   \\<And>x2.\n      unify t1 s1 = Some x2 \\<Longrightarrow>\n      \\<forall>\\<sigma>.\n         t2 \\<lhd> x2 \\<lhd> \\<sigma> =\n         s2 \\<lhd> x2 \\<lhd> \\<sigma> \\<longrightarrow>\n         unify (t2 \\<lhd> x2) (s2 \\<lhd> x2) \\<noteq> None\\<rbrakk>\n  \\<Longrightarrow> \\<forall>\\<sigma>.\n                       t1 \\<cdot> t2 \\<lhd> \\<sigma> =\n                       s1 \\<cdot> s2 \\<lhd> \\<sigma> \\<longrightarrow>\n                       unify (t1 \\<cdot> t2) (s1 \\<cdot> s2) \\<noteq> None\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>We establish some useful properties of substitutions and instances.\\<close>"], ["", "definition ground_on :: \"'a set \\<Rightarrow> 'a subst \\<Rightarrow> bool\"\n  where \"ground_on V \\<sigma> = (\\<forall>x \\<in> V. (ground_term (subst (Var x)  \\<sigma>)))\""], ["", "lemma comp_subst_terms:\n    assumes \"\\<sigma> \\<doteq> \\<theta> \\<lozenge> \\<eta>\"\n    shows \"(subst t \\<sigma>) = (subst (subst t \\<theta>) \\<eta>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<lhd> \\<sigma> = t \\<lhd> \\<theta> \\<lhd> \\<eta>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. t \\<lhd> \\<sigma> = t \\<lhd> \\<theta> \\<lhd> \\<eta>", "from \\<open>\\<sigma> \\<doteq> \\<theta> \\<lozenge> \\<eta>\\<close>"], ["proof (chain)\npicking this:\n  \\<sigma> \\<doteq> \\<theta> \\<lozenge> \\<eta>", "have \"((subst t \\<sigma>) = (subst t (\\<theta> \\<lozenge> \\<eta>)))\""], ["proof (prove)\nusing this:\n  \\<sigma> \\<doteq> \\<theta> \\<lozenge> \\<eta>\n\ngoal (1 subgoal):\n 1. t \\<lhd> \\<sigma> = t \\<lhd> \\<theta> \\<lozenge> \\<eta>", "by auto"], ["proof (state)\nthis:\n  t \\<lhd> \\<sigma> = t \\<lhd> \\<theta> \\<lozenge> \\<eta>\n\ngoal (1 subgoal):\n 1. t \\<lhd> \\<sigma> = t \\<lhd> \\<theta> \\<lhd> \\<eta>", "have \"(subst t (\\<theta> \\<lozenge> \\<eta>) = (subst (subst t \\<theta>) \\<eta>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<lhd> \\<theta> \\<lozenge> \\<eta> = t \\<lhd> \\<theta> \\<lhd> \\<eta>", "by auto"], ["proof (state)\nthis:\n  t \\<lhd> \\<theta> \\<lozenge> \\<eta> = t \\<lhd> \\<theta> \\<lhd> \\<eta>\n\ngoal (1 subgoal):\n 1. t \\<lhd> \\<sigma> = t \\<lhd> \\<theta> \\<lhd> \\<eta>", "from this and \\<open>((subst t \\<sigma>) = (subst t (\\<theta> \\<lozenge> \\<eta>)))\\<close>"], ["proof (chain)\npicking this:\n  t \\<lhd> \\<theta> \\<lozenge> \\<eta> = t \\<lhd> \\<theta> \\<lhd> \\<eta>\n  t \\<lhd> \\<sigma> = t \\<lhd> \\<theta> \\<lozenge> \\<eta>", "show ?thesis"], ["proof (prove)\nusing this:\n  t \\<lhd> \\<theta> \\<lozenge> \\<eta> = t \\<lhd> \\<theta> \\<lhd> \\<eta>\n  t \\<lhd> \\<sigma> = t \\<lhd> \\<theta> \\<lozenge> \\<eta>\n\ngoal (1 subgoal):\n 1. t \\<lhd> \\<sigma> = t \\<lhd> \\<theta> \\<lhd> \\<eta>", "by auto"], ["proof (state)\nthis:\n  t \\<lhd> \\<sigma> = t \\<lhd> \\<theta> \\<lhd> \\<eta>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ground_instance:\n  assumes \"ground_on (vars_of t) \\<sigma>\"\n  shows \"ground_term (subst t \\<sigma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ground_term (t \\<lhd> \\<sigma>)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> ground_term (t \\<lhd> \\<sigma>) \\<Longrightarrow> False", "assume \"\\<not> ground_term (subst t \\<sigma>)\""], ["proof (state)\nthis:\n  \\<not> ground_term (t \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<not> ground_term (t \\<lhd> \\<sigma>) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> ground_term (t \\<lhd> \\<sigma>)", "have \"vars_of (subst t \\<sigma>) \\<noteq> {}\""], ["proof (prove)\nusing this:\n  \\<not> ground_term (t \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. vars_of (t \\<lhd> \\<sigma>) \\<noteq> {}", "unfolding ground_term_def"], ["proof (prove)\nusing this:\n  vars_of (t \\<lhd> \\<sigma>) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. vars_of (t \\<lhd> \\<sigma>) \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  vars_of (t \\<lhd> \\<sigma>) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> ground_term (t \\<lhd> \\<sigma>) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  vars_of (t \\<lhd> \\<sigma>) \\<noteq> {}", "obtain x where \"x \\<in> vars_of (subst t \\<sigma>)\""], ["proof (prove)\nusing this:\n  vars_of (t \\<lhd> \\<sigma>) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        x \\<in> vars_of (t \\<lhd> \\<sigma>) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> vars_of (t \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<not> ground_term (t \\<lhd> \\<sigma>) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  x \\<in> vars_of (t \\<lhd> \\<sigma>)", "have \"x \\<in> \\<Union> { V. \\<exists>x. (x \\<in> (vars_of t)) \\<and> (V = vars_of (subst (Var x) \\<sigma>)) }\""], ["proof (prove)\nusing this:\n  x \\<in> vars_of (t \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. x \\<in> \\<Union>\n             {V. \\<exists>x.\n                    x \\<in> vars_of t \\<and>\n                    V = vars_of (Var x \\<lhd> \\<sigma>)}", "using vars_of_instances"], ["proof (prove)\nusing this:\n  x \\<in> vars_of (t \\<lhd> \\<sigma>)\n  vars_of (?t \\<lhd> ?\\<sigma>) =\n  \\<Union>\n   {V. \\<exists>x.\n          x \\<in> vars_of ?t \\<and> V = vars_of (Var x \\<lhd> ?\\<sigma>)}\n\ngoal (1 subgoal):\n 1. x \\<in> \\<Union>\n             {V. \\<exists>x.\n                    x \\<in> vars_of t \\<and>\n                    V = vars_of (Var x \\<lhd> \\<sigma>)}", "by force"], ["proof (state)\nthis:\n  x \\<in> \\<Union>\n           {V. \\<exists>x.\n                  x \\<in> vars_of t \\<and>\n                  V = vars_of (Var x \\<lhd> \\<sigma>)}\n\ngoal (1 subgoal):\n 1. \\<not> ground_term (t \\<lhd> \\<sigma>) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  x \\<in> \\<Union>\n           {V. \\<exists>x.\n                  x \\<in> vars_of t \\<and>\n                  V = vars_of (Var x \\<lhd> \\<sigma>)}", "obtain y where \"x \\<in> (vars_of (subst (Var y) \\<sigma>))\" and \"y \\<in> (vars_of t)\""], ["proof (prove)\nusing this:\n  x \\<in> \\<Union>\n           {V. \\<exists>x.\n                  x \\<in> vars_of t \\<and>\n                  V = vars_of (Var x \\<lhd> \\<sigma>)}\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>x \\<in> vars_of (Var y \\<lhd> \\<sigma>);\n         y \\<in> vars_of t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x \\<in> vars_of (Var y \\<lhd> \\<sigma>)\n  y \\<in> vars_of t\n\ngoal (1 subgoal):\n 1. \\<not> ground_term (t \\<lhd> \\<sigma>) \\<Longrightarrow> False", "from assms(1) and \\<open>y \\<in> (vars_of t)\\<close>"], ["proof (chain)\npicking this:\n  ground_on (vars_of t) \\<sigma>\n  y \\<in> vars_of t", "have \"ground_term (subst (Var y) \\<sigma>)\""], ["proof (prove)\nusing this:\n  ground_on (vars_of t) \\<sigma>\n  y \\<in> vars_of t\n\ngoal (1 subgoal):\n 1. ground_term (Var y \\<lhd> \\<sigma>)", "unfolding ground_on_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>vars_of t. ground_term (Var x \\<lhd> \\<sigma>)\n  y \\<in> vars_of t\n\ngoal (1 subgoal):\n 1. ground_term (Var y \\<lhd> \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  ground_term (Var y \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<not> ground_term (t \\<lhd> \\<sigma>) \\<Longrightarrow> False", "from this and \\<open>x \\<in> (vars_of (subst (Var y) \\<sigma>))\\<close>"], ["proof (chain)\npicking this:\n  ground_term (Var y \\<lhd> \\<sigma>)\n  x \\<in> vars_of (Var y \\<lhd> \\<sigma>)", "show False"], ["proof (prove)\nusing this:\n  ground_term (Var y \\<lhd> \\<sigma>)\n  x \\<in> vars_of (Var y \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. False", "unfolding ground_term_def"], ["proof (prove)\nusing this:\n  vars_of (Var y \\<lhd> \\<sigma>) = {}\n  x \\<in> vars_of (Var y \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma substs_preserve_groundness:\n  assumes \"ground_term t\"\n  shows \"ground_term (subst t \\<sigma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ground_term (t \\<lhd> \\<sigma>)", "by (metis assms equals0D ground_instance ground_on_def ground_term_def)"], ["", "lemma ground_subst_exists  :\n  \"finite V \\<Longrightarrow> \\<exists>\\<sigma>. (ground_on V \\<sigma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite V \\<Longrightarrow> \\<exists>\\<sigma>. ground_on V \\<sigma>", "proof (induction rule: finite.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>a. ground_on {} a\n 2. \\<And>A a.\n       \\<lbrakk>finite A; \\<exists>a. ground_on A a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. ground_on (insert a A) b", "case emptyI"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<exists>a. ground_on {} a\n 2. \\<And>A a.\n       \\<lbrakk>finite A; \\<exists>a. ground_on A a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. ground_on (insert a A) b", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a. ground_on {} a", "unfolding ground_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a. \\<forall>x\\<in>{}. ground_term (Var x \\<lhd> a)", "by simp"], ["proof (state)\nthis:\n  \\<exists>a. ground_on {} a\n\ngoal (1 subgoal):\n 1. \\<And>A a.\n       \\<lbrakk>finite A; \\<exists>a. ground_on A a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. ground_on (insert a A) b", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A a.\n       \\<lbrakk>finite A; \\<exists>a. ground_on A a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. ground_on (insert a A) b", "fix A :: \"'a set\" and a::'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A a.\n       \\<lbrakk>finite A; \\<exists>a. ground_on A a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. ground_on (insert a A) b", "assume \"finite A\""], ["proof (state)\nthis:\n  finite A\n\ngoal (1 subgoal):\n 1. \\<And>A a.\n       \\<lbrakk>finite A; \\<exists>a. ground_on A a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. ground_on (insert a A) b", "assume hyp_ind: \"\\<exists>\\<sigma>. ground_on A \\<sigma>\""], ["proof (state)\nthis:\n  \\<exists>\\<sigma>. ground_on A \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>A a.\n       \\<lbrakk>finite A; \\<exists>a. ground_on A a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. ground_on (insert a A) b", "then"], ["proof (chain)\npicking this:\n  \\<exists>\\<sigma>. ground_on A \\<sigma>", "obtain \\<sigma> where \"ground_on A \\<sigma>\""], ["proof (prove)\nusing this:\n  \\<exists>\\<sigma>. ground_on A \\<sigma>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>.\n        ground_on A \\<sigma> \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ground_on A \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>A a.\n       \\<lbrakk>finite A; \\<exists>a. ground_on A a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. ground_on (insert a A) b", "then"], ["proof (chain)\npicking this:\n  ground_on A \\<sigma>", "show \"\\<exists>\\<sigma>. ground_on (insert a A) \\<sigma>\""], ["proof (prove)\nusing this:\n  ground_on A \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>. ground_on (insert a A) \\<sigma>", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>ground_on A \\<sigma>; ?P1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<sigma>. ground_on (insert a A) \\<sigma>\n 2. \\<lbrakk>ground_on A \\<sigma>; \\<not> ?P1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<sigma>. ground_on (insert a A) \\<sigma>", "assume \"a \\<in> A\""], ["proof (state)\nthis:\n  a \\<in> A\n\ngoal (2 subgoals):\n 1. \\<lbrakk>ground_on A \\<sigma>; ?P1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<sigma>. ground_on (insert a A) \\<sigma>\n 2. \\<lbrakk>ground_on A \\<sigma>; \\<not> ?P1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<sigma>. ground_on (insert a A) \\<sigma>", "from this and hyp_ind"], ["proof (chain)\npicking this:\n  a \\<in> A\n  \\<exists>\\<sigma>. ground_on A \\<sigma>", "show \"\\<exists>\\<sigma>. ground_on (insert a A) \\<sigma>\""], ["proof (prove)\nusing this:\n  a \\<in> A\n  \\<exists>\\<sigma>. ground_on A \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>. ground_on (insert a A) \\<sigma>", "unfolding ground_on_def"], ["proof (prove)\nusing this:\n  a \\<in> A\n  \\<exists>\\<sigma>. \\<forall>x\\<in>A. ground_term (Var x \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       \\<forall>x\\<in>insert a A. ground_term (Var x \\<lhd> \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  \\<exists>\\<sigma>. ground_on (insert a A) \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ground_on A \\<sigma>; a \\<notin> A\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<sigma>. ground_on (insert a A) \\<sigma>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>ground_on A \\<sigma>; a \\<notin> A\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<sigma>. ground_on (insert a A) \\<sigma>", "assume \"a \\<notin> A\""], ["proof (state)\nthis:\n  a \\<notin> A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ground_on A \\<sigma>; a \\<notin> A\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<sigma>. ground_on (insert a A) \\<sigma>", "obtain c where \"c = (Const a)\" and \"is_a_constant c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c = Const a; is_a_constant c\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  c = Const a\n  is_a_constant c\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ground_on A \\<sigma>; a \\<notin> A\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<sigma>. ground_on (insert a A) \\<sigma>", "obtain \\<theta> where \"\\<theta> = (a,c) # \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<theta>.\n        \\<theta> = (a, c) # \\<sigma> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<theta> = (a, c) # \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ground_on A \\<sigma>; a \\<notin> A\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<sigma>. ground_on (insert a A) \\<sigma>", "have \"\\<forall>x. (x \\<in> insert a A \\<longrightarrow> (ground_term (subst (Var x) \\<theta>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       x \\<in> insert a A \\<longrightarrow>\n       ground_term (Var x \\<lhd> \\<theta>)", "proof ((rule allI)+,(rule impI)+)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> insert a A \\<Longrightarrow>\n       ground_term (Var x \\<lhd> \\<theta>)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> insert a A \\<Longrightarrow>\n       ground_term (Var x \\<lhd> \\<theta>)", "assume \"x \\<in> insert a A\""], ["proof (state)\nthis:\n  x \\<in> insert a A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> insert a A \\<Longrightarrow>\n       ground_term (Var x \\<lhd> \\<theta>)", "show \"ground_term (subst (Var x) \\<theta>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ground_term (Var x \\<lhd> \\<theta>)", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> ground_term (Var x \\<lhd> \\<theta>)\n 2. \\<not> ?P \\<Longrightarrow> ground_term (Var x \\<lhd> \\<theta>)", "assume \"x = a\""], ["proof (state)\nthis:\n  x = a\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> ground_term (Var x \\<lhd> \\<theta>)\n 2. \\<not> ?P \\<Longrightarrow> ground_term (Var x \\<lhd> \\<theta>)", "from this and \\<open>\\<theta> = (a,c) # \\<sigma>\\<close>"], ["proof (chain)\npicking this:\n  x = a\n  \\<theta> = (a, c) # \\<sigma>", "have \"(subst (Var x) \\<theta>) = c\""], ["proof (prove)\nusing this:\n  x = a\n  \\<theta> = (a, c) # \\<sigma>\n\ngoal (1 subgoal):\n 1. Var x \\<lhd> \\<theta> = c", "by auto"], ["proof (state)\nthis:\n  Var x \\<lhd> \\<theta> = c\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> ground_term (Var x \\<lhd> \\<theta>)\n 2. \\<not> ?P \\<Longrightarrow> ground_term (Var x \\<lhd> \\<theta>)", "from \\<open>is_a_constant c\\<close>"], ["proof (chain)\npicking this:\n  is_a_constant c", "have \"ground_term c\""], ["proof (prove)\nusing this:\n  is_a_constant c\n\ngoal (1 subgoal):\n 1. ground_term c", "using constants_are_ground"], ["proof (prove)\nusing this:\n  is_a_constant c\n  is_a_constant ?x \\<Longrightarrow> ground_term ?x\n\ngoal (1 subgoal):\n 1. ground_term c", "by auto"], ["proof (state)\nthis:\n  ground_term c\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> ground_term (Var x \\<lhd> \\<theta>)\n 2. \\<not> ?P \\<Longrightarrow> ground_term (Var x \\<lhd> \\<theta>)", "from this and \\<open>(subst (Var x) \\<theta>) = c\\<close>"], ["proof (chain)\npicking this:\n  ground_term c\n  Var x \\<lhd> \\<theta> = c", "show \"ground_term (subst (Var x) \\<theta>)\""], ["proof (prove)\nusing this:\n  ground_term c\n  Var x \\<lhd> \\<theta> = c\n\ngoal (1 subgoal):\n 1. ground_term (Var x \\<lhd> \\<theta>)", "by auto"], ["proof (state)\nthis:\n  ground_term (Var x \\<lhd> \\<theta>)\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow> ground_term (Var x \\<lhd> \\<theta>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow> ground_term (Var x \\<lhd> \\<theta>)", "assume \"x \\<noteq> a\""], ["proof (state)\nthis:\n  x \\<noteq> a\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow> ground_term (Var x \\<lhd> \\<theta>)", "from \\<open>x \\<noteq> a\\<close> and \\<open>x \\<in> insert a A\\<close>"], ["proof (chain)\npicking this:\n  x \\<noteq> a\n  x \\<in> insert a A", "have \"x \\<in> A\""], ["proof (prove)\nusing this:\n  x \\<noteq> a\n  x \\<in> insert a A\n\ngoal (1 subgoal):\n 1. x \\<in> A", "by auto"], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow> ground_term (Var x \\<lhd> \\<theta>)", "from \\<open>x \\<noteq> a\\<close> and  \\<open>\\<theta> = (a,c) # \\<sigma>\\<close>"], ["proof (chain)\npicking this:\n  x \\<noteq> a\n  \\<theta> = (a, c) # \\<sigma>", "have \"(subst (Var x) \\<theta>) = (subst (Var x) \\<sigma>)\""], ["proof (prove)\nusing this:\n  x \\<noteq> a\n  \\<theta> = (a, c) # \\<sigma>\n\ngoal (1 subgoal):\n 1. Var x \\<lhd> \\<theta> = Var x \\<lhd> \\<sigma>", "by auto"], ["proof (state)\nthis:\n  Var x \\<lhd> \\<theta> = Var x \\<lhd> \\<sigma>\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow> ground_term (Var x \\<lhd> \\<theta>)", "from this and \\<open>x \\<in> A\\<close> and \\<open>ground_on A \\<sigma>\\<close>"], ["proof (chain)\npicking this:\n  Var x \\<lhd> \\<theta> = Var x \\<lhd> \\<sigma>\n  x \\<in> A\n  ground_on A \\<sigma>", "show \"ground_term (subst (Var x) \\<theta>)\""], ["proof (prove)\nusing this:\n  Var x \\<lhd> \\<theta> = Var x \\<lhd> \\<sigma>\n  x \\<in> A\n  ground_on A \\<sigma>\n\ngoal (1 subgoal):\n 1. ground_term (Var x \\<lhd> \\<theta>)", "unfolding ground_on_def"], ["proof (prove)\nusing this:\n  Var x \\<lhd> \\<theta> = Var x \\<lhd> \\<sigma>\n  x \\<in> A\n  \\<forall>x\\<in>A. ground_term (Var x \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. ground_term (Var x \\<lhd> \\<theta>)", "by auto"], ["proof (state)\nthis:\n  ground_term (Var x \\<lhd> \\<theta>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ground_term (Var x \\<lhd> \\<theta>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x.\n     x \\<in> insert a A \\<longrightarrow>\n     ground_term (Var x \\<lhd> \\<theta>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ground_on A \\<sigma>; a \\<notin> A\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<sigma>. ground_on (insert a A) \\<sigma>", "from this"], ["proof (chain)\npicking this:\n  \\<forall>x.\n     x \\<in> insert a A \\<longrightarrow>\n     ground_term (Var x \\<lhd> \\<theta>)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>x.\n     x \\<in> insert a A \\<longrightarrow>\n     ground_term (Var x \\<lhd> \\<theta>)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>. ground_on (insert a A) \\<sigma>", "unfolding ground_on_def"], ["proof (prove)\nusing this:\n  \\<forall>x.\n     x \\<in> insert a A \\<longrightarrow>\n     ground_term (Var x \\<lhd> \\<theta>)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       \\<forall>x\\<in>insert a A. ground_term (Var x \\<lhd> \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  \\<exists>\\<sigma>. ground_on (insert a A) \\<sigma>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>\\<sigma>. ground_on (insert a A) \\<sigma>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma substs_preserve_ground_terms :\n  assumes \"ground_term t\"\n  shows \"subst t \\<sigma> = t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<lhd> \\<sigma> = t", "by (metis agreement assms equals0D ground_term_def subst_Nil)"], ["", "lemma substs_preserve_subterms :\n  shows \"\\<And> t  s. subterm t p s \\<Longrightarrow> subterm (subst t \\<sigma>) p (subst s \\<sigma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t s.\n       subterm t p s \\<Longrightarrow>\n       subterm (t \\<lhd> \\<sigma>) p (s \\<lhd> \\<sigma>)", "proof (induction p)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t s.\n       subterm t [] s \\<Longrightarrow>\n       subterm (t \\<lhd> \\<sigma>) [] (s \\<lhd> \\<sigma>)\n 2. \\<And>a p t s.\n       \\<lbrakk>\\<And>t s.\n                   subterm t p s \\<Longrightarrow>\n                   subterm (t \\<lhd> \\<sigma>) p (s \\<lhd> \\<sigma>);\n        subterm t (a # p) s\\<rbrakk>\n       \\<Longrightarrow> subterm (t \\<lhd> \\<sigma>) (a # p)\n                          (s \\<lhd> \\<sigma>)", "case Nil"], ["proof (state)\nthis:\n  subterm t [] s\n\ngoal (2 subgoals):\n 1. \\<And>t s.\n       subterm t [] s \\<Longrightarrow>\n       subterm (t \\<lhd> \\<sigma>) [] (s \\<lhd> \\<sigma>)\n 2. \\<And>a p t s.\n       \\<lbrakk>\\<And>t s.\n                   subterm t p s \\<Longrightarrow>\n                   subterm (t \\<lhd> \\<sigma>) p (s \\<lhd> \\<sigma>);\n        subterm t (a # p) s\\<rbrakk>\n       \\<Longrightarrow> subterm (t \\<lhd> \\<sigma>) (a # p)\n                          (s \\<lhd> \\<sigma>)", "then"], ["proof (chain)\npicking this:\n  subterm t [] s", "have \"t = s\""], ["proof (prove)\nusing this:\n  subterm t [] s\n\ngoal (1 subgoal):\n 1. t = s", "using subterm.elims(2)"], ["proof (prove)\nusing this:\n  subterm t [] s\n  \\<lbrakk>subterm ?x ?xa ?xb;\n   \\<And>T S.\n      \\<lbrakk>?x = T; ?xa = []; ?xb = S; T = S\\<rbrakk>\n      \\<Longrightarrow> ?P;\n   \\<And>x y next S.\n      \\<lbrakk>?x = x \\<cdot> y; ?xa = indices.Left # next; ?xb = S;\n       subterm x next S\\<rbrakk>\n      \\<Longrightarrow> ?P;\n   \\<And>x y next S.\n      \\<lbrakk>?x = x \\<cdot> y; ?xa = indices.Right # next; ?xb = S;\n       subterm y next S\\<rbrakk>\n      \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. t = s", "by auto"], ["proof (state)\nthis:\n  t = s\n\ngoal (2 subgoals):\n 1. \\<And>t s.\n       subterm t [] s \\<Longrightarrow>\n       subterm (t \\<lhd> \\<sigma>) [] (s \\<lhd> \\<sigma>)\n 2. \\<And>a p t s.\n       \\<lbrakk>\\<And>t s.\n                   subterm t p s \\<Longrightarrow>\n                   subterm (t \\<lhd> \\<sigma>) p (s \\<lhd> \\<sigma>);\n        subterm t (a # p) s\\<rbrakk>\n       \\<Longrightarrow> subterm (t \\<lhd> \\<sigma>) (a # p)\n                          (s \\<lhd> \\<sigma>)", "from \\<open>t = s\\<close>"], ["proof (chain)\npicking this:\n  t = s", "have \"(subst t \\<sigma>) = (subst s \\<sigma>)\""], ["proof (prove)\nusing this:\n  t = s\n\ngoal (1 subgoal):\n 1. t \\<lhd> \\<sigma> = s \\<lhd> \\<sigma>", "by auto"], ["proof (state)\nthis:\n  t \\<lhd> \\<sigma> = s \\<lhd> \\<sigma>\n\ngoal (2 subgoals):\n 1. \\<And>t s.\n       subterm t [] s \\<Longrightarrow>\n       subterm (t \\<lhd> \\<sigma>) [] (s \\<lhd> \\<sigma>)\n 2. \\<And>a p t s.\n       \\<lbrakk>\\<And>t s.\n                   subterm t p s \\<Longrightarrow>\n                   subterm (t \\<lhd> \\<sigma>) p (s \\<lhd> \\<sigma>);\n        subterm t (a # p) s\\<rbrakk>\n       \\<Longrightarrow> subterm (t \\<lhd> \\<sigma>) (a # p)\n                          (s \\<lhd> \\<sigma>)", "from this"], ["proof (chain)\npicking this:\n  t \\<lhd> \\<sigma> = s \\<lhd> \\<sigma>", "show ?case"], ["proof (prove)\nusing this:\n  t \\<lhd> \\<sigma> = s \\<lhd> \\<sigma>\n\ngoal (1 subgoal):\n 1. subterm (t \\<lhd> \\<sigma>) [] (s \\<lhd> \\<sigma>)", "using Nil.prems"], ["proof (prove)\nusing this:\n  t \\<lhd> \\<sigma> = s \\<lhd> \\<sigma>\n  subterm t [] s\n\ngoal (1 subgoal):\n 1. subterm (t \\<lhd> \\<sigma>) [] (s \\<lhd> \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  subterm (t \\<lhd> \\<sigma>) [] (s \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<And>a p t s.\n       \\<lbrakk>\\<And>t s.\n                   subterm t p s \\<Longrightarrow>\n                   subterm (t \\<lhd> \\<sigma>) p (s \\<lhd> \\<sigma>);\n        subterm t (a # p) s\\<rbrakk>\n       \\<Longrightarrow> subterm (t \\<lhd> \\<sigma>) (a # p)\n                          (s \\<lhd> \\<sigma>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a p t s.\n       \\<lbrakk>\\<And>t s.\n                   subterm t p s \\<Longrightarrow>\n                   subterm (t \\<lhd> \\<sigma>) p (s \\<lhd> \\<sigma>);\n        subterm t (a # p) s\\<rbrakk>\n       \\<Longrightarrow> subterm (t \\<lhd> \\<sigma>) (a # p)\n                          (s \\<lhd> \\<sigma>)", "case (Cons i q)"], ["proof (state)\nthis:\n  subterm ?t q ?s \\<Longrightarrow>\n  subterm (?t \\<lhd> \\<sigma>) q (?s \\<lhd> \\<sigma>)\n  subterm t (i # q) s\n\ngoal (1 subgoal):\n 1. \\<And>a p t s.\n       \\<lbrakk>\\<And>t s.\n                   subterm t p s \\<Longrightarrow>\n                   subterm (t \\<lhd> \\<sigma>) p (s \\<lhd> \\<sigma>);\n        subterm t (a # p) s\\<rbrakk>\n       \\<Longrightarrow> subterm (t \\<lhd> \\<sigma>) (a # p)\n                          (s \\<lhd> \\<sigma>)", "from \\<open>subterm t (i # q) s\\<close>"], ["proof (chain)\npicking this:\n  subterm t (i # q) s", "obtain t1 t2 where\n        \"t = (Comb t1 t2)\""], ["proof (prove)\nusing this:\n  subterm t (i # q) s\n\ngoal (1 subgoal):\n 1. (\\<And>t1 t2.\n        t = t1 \\<cdot> t2 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using subterm.elims(2)"], ["proof (prove)\nusing this:\n  subterm t (i # q) s\n  \\<lbrakk>subterm ?x ?xa ?xb;\n   \\<And>T S.\n      \\<lbrakk>?x = T; ?xa = []; ?xb = S; T = S\\<rbrakk>\n      \\<Longrightarrow> ?P;\n   \\<And>x y next S.\n      \\<lbrakk>?x = x \\<cdot> y; ?xa = indices.Left # next; ?xb = S;\n       subterm x next S\\<rbrakk>\n      \\<Longrightarrow> ?P;\n   \\<And>x y next S.\n      \\<lbrakk>?x = x \\<cdot> y; ?xa = indices.Right # next; ?xb = S;\n       subterm y next S\\<rbrakk>\n      \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>t1 t2.\n        t = t1 \\<cdot> t2 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  t = t1 \\<cdot> t2\n\ngoal (1 subgoal):\n 1. \\<And>a p t s.\n       \\<lbrakk>\\<And>t s.\n                   subterm t p s \\<Longrightarrow>\n                   subterm (t \\<lhd> \\<sigma>) p (s \\<lhd> \\<sigma>);\n        subterm t (a # p) s\\<rbrakk>\n       \\<Longrightarrow> subterm (t \\<lhd> \\<sigma>) (a # p)\n                          (s \\<lhd> \\<sigma>)", "have \"i = Left \\<or> i = Right\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i = indices.Left \\<or> i = indices.Right", "using indices.exhaust"], ["proof (prove)\nusing this:\n  \\<lbrakk>?y = indices.Left \\<Longrightarrow> ?P;\n   ?y = indices.Right \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. i = indices.Left \\<or> i = indices.Right", "by blast"], ["proof (state)\nthis:\n  i = indices.Left \\<or> i = indices.Right\n\ngoal (1 subgoal):\n 1. \\<And>a p t s.\n       \\<lbrakk>\\<And>t s.\n                   subterm t p s \\<Longrightarrow>\n                   subterm (t \\<lhd> \\<sigma>) p (s \\<lhd> \\<sigma>);\n        subterm t (a # p) s\\<rbrakk>\n       \\<Longrightarrow> subterm (t \\<lhd> \\<sigma>) (a # p)\n                          (s \\<lhd> \\<sigma>)", "then"], ["proof (chain)\npicking this:\n  i = indices.Left \\<or> i = indices.Right", "show \"subterm (subst t \\<sigma>) (i # q) (subst s \\<sigma>)\""], ["proof (prove)\nusing this:\n  i = indices.Left \\<or> i = indices.Right\n\ngoal (1 subgoal):\n 1. subterm (t \\<lhd> \\<sigma>) (i # q) (s \\<lhd> \\<sigma>)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. i = indices.Left \\<Longrightarrow>\n    subterm (t \\<lhd> \\<sigma>) (i # q) (s \\<lhd> \\<sigma>)\n 2. i = indices.Right \\<Longrightarrow>\n    subterm (t \\<lhd> \\<sigma>) (i # q) (s \\<lhd> \\<sigma>)", "assume \"i = Left\""], ["proof (state)\nthis:\n  i = indices.Left\n\ngoal (2 subgoals):\n 1. i = indices.Left \\<Longrightarrow>\n    subterm (t \\<lhd> \\<sigma>) (i # q) (s \\<lhd> \\<sigma>)\n 2. i = indices.Right \\<Longrightarrow>\n    subterm (t \\<lhd> \\<sigma>) (i # q) (s \\<lhd> \\<sigma>)", "from this and \\<open>t = Comb t1 t2\\<close> and \\<open>subterm t (i # q) s\\<close>"], ["proof (chain)\npicking this:\n  i = indices.Left\n  t = t1 \\<cdot> t2\n  subterm t (i # q) s", "have \"subterm t1 q s\""], ["proof (prove)\nusing this:\n  i = indices.Left\n  t = t1 \\<cdot> t2\n  subterm t (i # q) s\n\ngoal (1 subgoal):\n 1. subterm t1 q s", "by auto"], ["proof (state)\nthis:\n  subterm t1 q s\n\ngoal (2 subgoals):\n 1. i = indices.Left \\<Longrightarrow>\n    subterm (t \\<lhd> \\<sigma>) (i # q) (s \\<lhd> \\<sigma>)\n 2. i = indices.Right \\<Longrightarrow>\n    subterm (t \\<lhd> \\<sigma>) (i # q) (s \\<lhd> \\<sigma>)", "from this"], ["proof (chain)\npicking this:\n  subterm t1 q s", "have \"subterm (subst t1 \\<sigma>) q (subst s \\<sigma>)\""], ["proof (prove)\nusing this:\n  subterm t1 q s\n\ngoal (1 subgoal):\n 1. subterm (t1 \\<lhd> \\<sigma>) q (s \\<lhd> \\<sigma>)", "using Cons.IH"], ["proof (prove)\nusing this:\n  subterm t1 q s\n  subterm ?t q ?s \\<Longrightarrow>\n  subterm (?t \\<lhd> \\<sigma>) q (?s \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. subterm (t1 \\<lhd> \\<sigma>) q (s \\<lhd> \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  subterm (t1 \\<lhd> \\<sigma>) q (s \\<lhd> \\<sigma>)\n\ngoal (2 subgoals):\n 1. i = indices.Left \\<Longrightarrow>\n    subterm (t \\<lhd> \\<sigma>) (i # q) (s \\<lhd> \\<sigma>)\n 2. i = indices.Right \\<Longrightarrow>\n    subterm (t \\<lhd> \\<sigma>) (i # q) (s \\<lhd> \\<sigma>)", "from this and \\<open>t = Comb t1 t2\\<close>"], ["proof (chain)\npicking this:\n  subterm (t1 \\<lhd> \\<sigma>) q (s \\<lhd> \\<sigma>)\n  t = t1 \\<cdot> t2", "show \"subterm (subst t \\<sigma>) (i # q) (subst s \\<sigma>)\""], ["proof (prove)\nusing this:\n  subterm (t1 \\<lhd> \\<sigma>) q (s \\<lhd> \\<sigma>)\n  t = t1 \\<cdot> t2\n\ngoal (1 subgoal):\n 1. subterm (t \\<lhd> \\<sigma>) (i # q) (s \\<lhd> \\<sigma>)", "by (simp add: \\<open>i = indices.Left\\<close>)"], ["proof (state)\nthis:\n  subterm (t \\<lhd> \\<sigma>) (i # q) (s \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. i = indices.Right \\<Longrightarrow>\n    subterm (t \\<lhd> \\<sigma>) (i # q) (s \\<lhd> \\<sigma>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i = indices.Right \\<Longrightarrow>\n    subterm (t \\<lhd> \\<sigma>) (i # q) (s \\<lhd> \\<sigma>)", "assume \"i = Right\""], ["proof (state)\nthis:\n  i = indices.Right\n\ngoal (1 subgoal):\n 1. i = indices.Right \\<Longrightarrow>\n    subterm (t \\<lhd> \\<sigma>) (i # q) (s \\<lhd> \\<sigma>)", "from this and \\<open>t = Comb t1 t2\\<close> and \\<open>subterm t (i # q) s\\<close>"], ["proof (chain)\npicking this:\n  i = indices.Right\n  t = t1 \\<cdot> t2\n  subterm t (i # q) s", "have \"subterm t2 q s\""], ["proof (prove)\nusing this:\n  i = indices.Right\n  t = t1 \\<cdot> t2\n  subterm t (i # q) s\n\ngoal (1 subgoal):\n 1. subterm t2 q s", "by auto"], ["proof (state)\nthis:\n  subterm t2 q s\n\ngoal (1 subgoal):\n 1. i = indices.Right \\<Longrightarrow>\n    subterm (t \\<lhd> \\<sigma>) (i # q) (s \\<lhd> \\<sigma>)", "from this"], ["proof (chain)\npicking this:\n  subterm t2 q s", "have \"subterm (subst t2 \\<sigma>) q (subst s \\<sigma>)\""], ["proof (prove)\nusing this:\n  subterm t2 q s\n\ngoal (1 subgoal):\n 1. subterm (t2 \\<lhd> \\<sigma>) q (s \\<lhd> \\<sigma>)", "using Cons.IH"], ["proof (prove)\nusing this:\n  subterm t2 q s\n  subterm ?t q ?s \\<Longrightarrow>\n  subterm (?t \\<lhd> \\<sigma>) q (?s \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. subterm (t2 \\<lhd> \\<sigma>) q (s \\<lhd> \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  subterm (t2 \\<lhd> \\<sigma>) q (s \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. i = indices.Right \\<Longrightarrow>\n    subterm (t \\<lhd> \\<sigma>) (i # q) (s \\<lhd> \\<sigma>)", "from this and \\<open>t = Comb t1 t2\\<close>"], ["proof (chain)\npicking this:\n  subterm (t2 \\<lhd> \\<sigma>) q (s \\<lhd> \\<sigma>)\n  t = t1 \\<cdot> t2", "show \"subterm (subst t \\<sigma>) (i # q) (subst s \\<sigma>)\""], ["proof (prove)\nusing this:\n  subterm (t2 \\<lhd> \\<sigma>) q (s \\<lhd> \\<sigma>)\n  t = t1 \\<cdot> t2\n\ngoal (1 subgoal):\n 1. subterm (t \\<lhd> \\<sigma>) (i # q) (s \\<lhd> \\<sigma>)", "by (simp add: \\<open>i = indices.Right\\<close>)"], ["proof (state)\nthis:\n  subterm (t \\<lhd> \\<sigma>) (i # q) (s \\<lhd> \\<sigma>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  subterm (t \\<lhd> \\<sigma>) (i # q) (s \\<lhd> \\<sigma>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma substs_preserve_occurs_in:\n  assumes \"occurs_in s t\"\n  shows \"occurs_in (subst s \\<sigma>) (subst t \\<sigma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. occurs_in (s \\<lhd> \\<sigma>) (t \\<lhd> \\<sigma>)", "using substs_preserve_subterms"], ["proof (prove)\nusing this:\n  subterm ?t ?p ?s \\<Longrightarrow>\n  subterm (?t \\<lhd> ?\\<sigma>) ?p (?s \\<lhd> ?\\<sigma>)\n\ngoal (1 subgoal):\n 1. occurs_in (s \\<lhd> \\<sigma>) (t \\<lhd> \\<sigma>)", "using assms occurs_in_def"], ["proof (prove)\nusing this:\n  subterm ?t ?p ?s \\<Longrightarrow>\n  subterm (?t \\<lhd> ?\\<sigma>) ?p (?s \\<lhd> ?\\<sigma>)\n  occurs_in s t\n  occurs_in ?t ?s = (\\<exists>p. subterm ?s p ?t)\n\ngoal (1 subgoal):\n 1. occurs_in (s \\<lhd> \\<sigma>) (t \\<lhd> \\<sigma>)", "by blast"], ["", "definition coincide_on \nwhere \"coincide_on \\<sigma> \\<eta> V = (\\<forall>x \\<in> V. (subst (Var x) \\<sigma>) = ( (subst (Var x) \\<eta>)))\""], ["", "lemma coincide_sym:\n  assumes \"coincide_on \\<sigma> \\<eta> V\"\n  shows \"coincide_on \\<eta> \\<sigma> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coincide_on \\<eta> \\<sigma> V", "by (metis assms coincide_on_def)"], ["", "lemma coincide_on_term:\n  shows \"\\<And> \\<sigma> \\<eta>. coincide_on \\<sigma> \\<eta> (vars_of t) \\<Longrightarrow> subst t \\<sigma> = subst t \\<eta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<eta>.\n       coincide_on \\<sigma> \\<eta> (vars_of t) \\<Longrightarrow>\n       t \\<lhd> \\<sigma> = t \\<lhd> \\<eta>", "proof (induction t)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x \\<sigma> \\<eta>.\n       coincide_on \\<sigma> \\<eta> (vars_of (Var x)) \\<Longrightarrow>\n       Var x \\<lhd> \\<sigma> = Var x \\<lhd> \\<eta>\n 2. \\<And>x \\<sigma> \\<eta>.\n       coincide_on \\<sigma> \\<eta> (vars_of (Const x)) \\<Longrightarrow>\n       Const x \\<lhd> \\<sigma> = Const x \\<lhd> \\<eta>\n 3. \\<And>t1 t2 \\<sigma> \\<eta>.\n       \\<lbrakk>\\<And>\\<sigma> \\<eta>.\n                   coincide_on \\<sigma> \\<eta>\n                    (vars_of t1) \\<Longrightarrow>\n                   t1 \\<lhd> \\<sigma> = t1 \\<lhd> \\<eta>;\n        \\<And>\\<sigma> \\<eta>.\n           coincide_on \\<sigma> \\<eta> (vars_of t2) \\<Longrightarrow>\n           t2 \\<lhd> \\<sigma> = t2 \\<lhd> \\<eta>;\n        coincide_on \\<sigma> \\<eta> (vars_of (t1 \\<cdot> t2))\\<rbrakk>\n       \\<Longrightarrow> t1 \\<cdot> t2 \\<lhd> \\<sigma> =\n                         t1 \\<cdot> t2 \\<lhd> \\<eta>", "case (Var x)"], ["proof (state)\nthis:\n  coincide_on \\<sigma> \\<eta> (vars_of (Var x))\n\ngoal (3 subgoals):\n 1. \\<And>x \\<sigma> \\<eta>.\n       coincide_on \\<sigma> \\<eta> (vars_of (Var x)) \\<Longrightarrow>\n       Var x \\<lhd> \\<sigma> = Var x \\<lhd> \\<eta>\n 2. \\<And>x \\<sigma> \\<eta>.\n       coincide_on \\<sigma> \\<eta> (vars_of (Const x)) \\<Longrightarrow>\n       Const x \\<lhd> \\<sigma> = Const x \\<lhd> \\<eta>\n 3. \\<And>t1 t2 \\<sigma> \\<eta>.\n       \\<lbrakk>\\<And>\\<sigma> \\<eta>.\n                   coincide_on \\<sigma> \\<eta>\n                    (vars_of t1) \\<Longrightarrow>\n                   t1 \\<lhd> \\<sigma> = t1 \\<lhd> \\<eta>;\n        \\<And>\\<sigma> \\<eta>.\n           coincide_on \\<sigma> \\<eta> (vars_of t2) \\<Longrightarrow>\n           t2 \\<lhd> \\<sigma> = t2 \\<lhd> \\<eta>;\n        coincide_on \\<sigma> \\<eta> (vars_of (t1 \\<cdot> t2))\\<rbrakk>\n       \\<Longrightarrow> t1 \\<cdot> t2 \\<lhd> \\<sigma> =\n                         t1 \\<cdot> t2 \\<lhd> \\<eta>", "from this"], ["proof (chain)\npicking this:\n  coincide_on \\<sigma> \\<eta> (vars_of (Var x))", "show \"subst (Var x) \\<sigma> = subst  (Var x) \\<eta>\""], ["proof (prove)\nusing this:\n  coincide_on \\<sigma> \\<eta> (vars_of (Var x))\n\ngoal (1 subgoal):\n 1. Var x \\<lhd> \\<sigma> = Var x \\<lhd> \\<eta>", "unfolding coincide_on_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>vars_of (Var x).\n     Var x \\<lhd> \\<sigma> = Var x \\<lhd> \\<eta>\n\ngoal (1 subgoal):\n 1. Var x \\<lhd> \\<sigma> = Var x \\<lhd> \\<eta>", "by auto"], ["proof (state)\nthis:\n  Var x \\<lhd> \\<sigma> = Var x \\<lhd> \\<eta>\n\ngoal (2 subgoals):\n 1. \\<And>x \\<sigma> \\<eta>.\n       coincide_on \\<sigma> \\<eta> (vars_of (Const x)) \\<Longrightarrow>\n       Const x \\<lhd> \\<sigma> = Const x \\<lhd> \\<eta>\n 2. \\<And>t1 t2 \\<sigma> \\<eta>.\n       \\<lbrakk>\\<And>\\<sigma> \\<eta>.\n                   coincide_on \\<sigma> \\<eta>\n                    (vars_of t1) \\<Longrightarrow>\n                   t1 \\<lhd> \\<sigma> = t1 \\<lhd> \\<eta>;\n        \\<And>\\<sigma> \\<eta>.\n           coincide_on \\<sigma> \\<eta> (vars_of t2) \\<Longrightarrow>\n           t2 \\<lhd> \\<sigma> = t2 \\<lhd> \\<eta>;\n        coincide_on \\<sigma> \\<eta> (vars_of (t1 \\<cdot> t2))\\<rbrakk>\n       \\<Longrightarrow> t1 \\<cdot> t2 \\<lhd> \\<sigma> =\n                         t1 \\<cdot> t2 \\<lhd> \\<eta>", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x \\<sigma> \\<eta>.\n       coincide_on \\<sigma> \\<eta> (vars_of (Const x)) \\<Longrightarrow>\n       Const x \\<lhd> \\<sigma> = Const x \\<lhd> \\<eta>\n 2. \\<And>t1 t2 \\<sigma> \\<eta>.\n       \\<lbrakk>\\<And>\\<sigma> \\<eta>.\n                   coincide_on \\<sigma> \\<eta>\n                    (vars_of t1) \\<Longrightarrow>\n                   t1 \\<lhd> \\<sigma> = t1 \\<lhd> \\<eta>;\n        \\<And>\\<sigma> \\<eta>.\n           coincide_on \\<sigma> \\<eta> (vars_of t2) \\<Longrightarrow>\n           t2 \\<lhd> \\<sigma> = t2 \\<lhd> \\<eta>;\n        coincide_on \\<sigma> \\<eta> (vars_of (t1 \\<cdot> t2))\\<rbrakk>\n       \\<Longrightarrow> t1 \\<cdot> t2 \\<lhd> \\<sigma> =\n                         t1 \\<cdot> t2 \\<lhd> \\<eta>", "case (Const x)"], ["proof (state)\nthis:\n  coincide_on \\<sigma> \\<eta> (vars_of (Const x))\n\ngoal (2 subgoals):\n 1. \\<And>x \\<sigma> \\<eta>.\n       coincide_on \\<sigma> \\<eta> (vars_of (Const x)) \\<Longrightarrow>\n       Const x \\<lhd> \\<sigma> = Const x \\<lhd> \\<eta>\n 2. \\<And>t1 t2 \\<sigma> \\<eta>.\n       \\<lbrakk>\\<And>\\<sigma> \\<eta>.\n                   coincide_on \\<sigma> \\<eta>\n                    (vars_of t1) \\<Longrightarrow>\n                   t1 \\<lhd> \\<sigma> = t1 \\<lhd> \\<eta>;\n        \\<And>\\<sigma> \\<eta>.\n           coincide_on \\<sigma> \\<eta> (vars_of t2) \\<Longrightarrow>\n           t2 \\<lhd> \\<sigma> = t2 \\<lhd> \\<eta>;\n        coincide_on \\<sigma> \\<eta> (vars_of (t1 \\<cdot> t2))\\<rbrakk>\n       \\<Longrightarrow> t1 \\<cdot> t2 \\<lhd> \\<sigma> =\n                         t1 \\<cdot> t2 \\<lhd> \\<eta>", "show \"subst (Const x) \\<sigma> = subst  (Const x) \\<eta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Const x \\<lhd> \\<sigma> = Const x \\<lhd> \\<eta>", "by auto"], ["proof (state)\nthis:\n  Const x \\<lhd> \\<sigma> = Const x \\<lhd> \\<eta>\n\ngoal (1 subgoal):\n 1. \\<And>t1 t2 \\<sigma> \\<eta>.\n       \\<lbrakk>\\<And>\\<sigma> \\<eta>.\n                   coincide_on \\<sigma> \\<eta>\n                    (vars_of t1) \\<Longrightarrow>\n                   t1 \\<lhd> \\<sigma> = t1 \\<lhd> \\<eta>;\n        \\<And>\\<sigma> \\<eta>.\n           coincide_on \\<sigma> \\<eta> (vars_of t2) \\<Longrightarrow>\n           t2 \\<lhd> \\<sigma> = t2 \\<lhd> \\<eta>;\n        coincide_on \\<sigma> \\<eta> (vars_of (t1 \\<cdot> t2))\\<rbrakk>\n       \\<Longrightarrow> t1 \\<cdot> t2 \\<lhd> \\<sigma> =\n                         t1 \\<cdot> t2 \\<lhd> \\<eta>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 t2 \\<sigma> \\<eta>.\n       \\<lbrakk>\\<And>\\<sigma> \\<eta>.\n                   coincide_on \\<sigma> \\<eta>\n                    (vars_of t1) \\<Longrightarrow>\n                   t1 \\<lhd> \\<sigma> = t1 \\<lhd> \\<eta>;\n        \\<And>\\<sigma> \\<eta>.\n           coincide_on \\<sigma> \\<eta> (vars_of t2) \\<Longrightarrow>\n           t2 \\<lhd> \\<sigma> = t2 \\<lhd> \\<eta>;\n        coincide_on \\<sigma> \\<eta> (vars_of (t1 \\<cdot> t2))\\<rbrakk>\n       \\<Longrightarrow> t1 \\<cdot> t2 \\<lhd> \\<sigma> =\n                         t1 \\<cdot> t2 \\<lhd> \\<eta>", "case (Comb t1 t2)"], ["proof (state)\nthis:\n  coincide_on ?\\<sigma> ?\\<eta> (vars_of t1) \\<Longrightarrow>\n  t1 \\<lhd> ?\\<sigma> = t1 \\<lhd> ?\\<eta>\n  coincide_on ?\\<sigma> ?\\<eta> (vars_of t2) \\<Longrightarrow>\n  t2 \\<lhd> ?\\<sigma> = t2 \\<lhd> ?\\<eta>\n  coincide_on \\<sigma> \\<eta> (vars_of (t1 \\<cdot> t2))\n\ngoal (1 subgoal):\n 1. \\<And>t1 t2 \\<sigma> \\<eta>.\n       \\<lbrakk>\\<And>\\<sigma> \\<eta>.\n                   coincide_on \\<sigma> \\<eta>\n                    (vars_of t1) \\<Longrightarrow>\n                   t1 \\<lhd> \\<sigma> = t1 \\<lhd> \\<eta>;\n        \\<And>\\<sigma> \\<eta>.\n           coincide_on \\<sigma> \\<eta> (vars_of t2) \\<Longrightarrow>\n           t2 \\<lhd> \\<sigma> = t2 \\<lhd> \\<eta>;\n        coincide_on \\<sigma> \\<eta> (vars_of (t1 \\<cdot> t2))\\<rbrakk>\n       \\<Longrightarrow> t1 \\<cdot> t2 \\<lhd> \\<sigma> =\n                         t1 \\<cdot> t2 \\<lhd> \\<eta>", "from this"], ["proof (chain)\npicking this:\n  coincide_on ?\\<sigma> ?\\<eta> (vars_of t1) \\<Longrightarrow>\n  t1 \\<lhd> ?\\<sigma> = t1 \\<lhd> ?\\<eta>\n  coincide_on ?\\<sigma> ?\\<eta> (vars_of t2) \\<Longrightarrow>\n  t2 \\<lhd> ?\\<sigma> = t2 \\<lhd> ?\\<eta>\n  coincide_on \\<sigma> \\<eta> (vars_of (t1 \\<cdot> t2))", "show ?case"], ["proof (prove)\nusing this:\n  coincide_on ?\\<sigma> ?\\<eta> (vars_of t1) \\<Longrightarrow>\n  t1 \\<lhd> ?\\<sigma> = t1 \\<lhd> ?\\<eta>\n  coincide_on ?\\<sigma> ?\\<eta> (vars_of t2) \\<Longrightarrow>\n  t2 \\<lhd> ?\\<sigma> = t2 \\<lhd> ?\\<eta>\n  coincide_on \\<sigma> \\<eta> (vars_of (t1 \\<cdot> t2))\n\ngoal (1 subgoal):\n 1. t1 \\<cdot> t2 \\<lhd> \\<sigma> = t1 \\<cdot> t2 \\<lhd> \\<eta>", "unfolding coincide_on_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>vars_of t1.\n     Var x \\<lhd> ?\\<sigma> = Var x \\<lhd> ?\\<eta> \\<Longrightarrow>\n  t1 \\<lhd> ?\\<sigma> = t1 \\<lhd> ?\\<eta>\n  \\<forall>x\\<in>vars_of t2.\n     Var x \\<lhd> ?\\<sigma> = Var x \\<lhd> ?\\<eta> \\<Longrightarrow>\n  t2 \\<lhd> ?\\<sigma> = t2 \\<lhd> ?\\<eta>\n  \\<forall>x\\<in>vars_of (t1 \\<cdot> t2).\n     Var x \\<lhd> \\<sigma> = Var x \\<lhd> \\<eta>\n\ngoal (1 subgoal):\n 1. t1 \\<cdot> t2 \\<lhd> \\<sigma> = t1 \\<cdot> t2 \\<lhd> \\<eta>", "by auto"], ["proof (state)\nthis:\n  t1 \\<cdot> t2 \\<lhd> \\<sigma> = t1 \\<cdot> t2 \\<lhd> \\<eta>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ground_replacement:\n  assumes \"replace_subterm t p v s\"\n  assumes \"ground_term (subst t \\<sigma>)\"\n  assumes \"ground_term (subst v \\<sigma>)\"\n  shows \"ground_term (subst s \\<sigma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ground_term (s \\<lhd> \\<sigma>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ground_term (s \\<lhd> \\<sigma>)", "from assms(1)"], ["proof (chain)\npicking this:\n  replace_subterm t p v s", "have \"vars_of s \\<subseteq> (vars_of t) \\<union> (vars_of v)\""], ["proof (prove)\nusing this:\n  replace_subterm t p v s\n\ngoal (1 subgoal):\n 1. vars_of s \\<subseteq> vars_of t \\<union> vars_of v", "using vars_of_replacement_set [of t p v s]"], ["proof (prove)\nusing this:\n  replace_subterm t p v s\n  replace_subterm t p v s \\<Longrightarrow>\n  vars_of s \\<subseteq> vars_of t \\<union> vars_of v\n\ngoal (1 subgoal):\n 1. vars_of s \\<subseteq> vars_of t \\<union> vars_of v", "by auto"], ["proof (state)\nthis:\n  vars_of s \\<subseteq> vars_of t \\<union> vars_of v\n\ngoal (1 subgoal):\n 1. ground_term (s \\<lhd> \\<sigma>)", "from assms(2)"], ["proof (chain)\npicking this:\n  ground_term (t \\<lhd> \\<sigma>)", "have \"ground_on (vars_of t) \\<sigma>\""], ["proof (prove)\nusing this:\n  ground_term (t \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. ground_on (vars_of t) \\<sigma>", "unfolding ground_on_def"], ["proof (prove)\nusing this:\n  ground_term (t \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>vars_of t. ground_term (Var x \\<lhd> \\<sigma>)", "by (metis contra_subsetD ex_in_conv ground_term_def \n      occs_vars_subset subst_mono vars_iff_occseq)"], ["proof (state)\nthis:\n  ground_on (vars_of t) \\<sigma>\n\ngoal (1 subgoal):\n 1. ground_term (s \\<lhd> \\<sigma>)", "from assms(3)"], ["proof (chain)\npicking this:\n  ground_term (v \\<lhd> \\<sigma>)", "have \"ground_on (vars_of v) \\<sigma>\""], ["proof (prove)\nusing this:\n  ground_term (v \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. ground_on (vars_of v) \\<sigma>", "unfolding ground_on_def"], ["proof (prove)\nusing this:\n  ground_term (v \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>vars_of v. ground_term (Var x \\<lhd> \\<sigma>)", "by (metis contra_subsetD ex_in_conv ground_term_def \n      occs_vars_subset subst_mono vars_iff_occseq)"], ["proof (state)\nthis:\n  ground_on (vars_of v) \\<sigma>\n\ngoal (1 subgoal):\n 1. ground_term (s \\<lhd> \\<sigma>)", "from \\<open>vars_of s \\<subseteq> (vars_of t) \\<union> (vars_of v)\\<close> \\<open>ground_on (vars_of t) \\<sigma>\\<close> \n    and  \\<open>ground_on (vars_of v) \\<sigma>\\<close>"], ["proof (chain)\npicking this:\n  vars_of s \\<subseteq> vars_of t \\<union> vars_of v\n  ground_on (vars_of t) \\<sigma>\n  ground_on (vars_of v) \\<sigma>", "have \"ground_on (vars_of s) \\<sigma>\""], ["proof (prove)\nusing this:\n  vars_of s \\<subseteq> vars_of t \\<union> vars_of v\n  ground_on (vars_of t) \\<sigma>\n  ground_on (vars_of v) \\<sigma>\n\ngoal (1 subgoal):\n 1. ground_on (vars_of s) \\<sigma>", "by (meson UnE ground_on_def rev_subsetD)"], ["proof (state)\nthis:\n  ground_on (vars_of s) \\<sigma>\n\ngoal (1 subgoal):\n 1. ground_term (s \\<lhd> \\<sigma>)", "from this"], ["proof (chain)\npicking this:\n  ground_on (vars_of s) \\<sigma>", "show ?thesis"], ["proof (prove)\nusing this:\n  ground_on (vars_of s) \\<sigma>\n\ngoal (1 subgoal):\n 1. ground_term (s \\<lhd> \\<sigma>)", "using ground_instance"], ["proof (prove)\nusing this:\n  ground_on (vars_of s) \\<sigma>\n  ground_on (vars_of ?t) ?\\<sigma> \\<Longrightarrow>\n  ground_term (?t \\<lhd> ?\\<sigma>)\n\ngoal (1 subgoal):\n 1. ground_term (s \\<lhd> \\<sigma>)", "by blast"], ["proof (state)\nthis:\n  ground_term (s \\<lhd> \\<sigma>)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>We now show that two disjoint substitutions can always be fused.\\<close>"], ["", "lemma combine_substs:\n  assumes \"finite V1\"\n  assumes \"V1 \\<inter> V2 = {}\"\n  assumes \"ground_on V1 \\<eta>1\"\n  shows \"\\<exists>\\<sigma>. (coincide_on \\<sigma> \\<eta>1 V1) \\<and> (coincide_on \\<sigma> \\<eta>2 V2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       coincide_on \\<sigma> \\<eta>1 V1 \\<and>\n       coincide_on \\<sigma> \\<eta>2 V2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       coincide_on \\<sigma> \\<eta>1 V1 \\<and>\n       coincide_on \\<sigma> \\<eta>2 V2", "have \"finite V1 \\<Longrightarrow> ground_on V1 \\<eta>1 \\<Longrightarrow> V1 \\<inter> V2 = {} \\<Longrightarrow> \\<exists>\\<sigma>. (coincide_on \\<sigma> \\<eta>1 V1) \\<and> (coincide_on \\<sigma> \\<eta>2 V2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite V1; ground_on V1 \\<eta>1; V1 \\<inter> V2 = {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<sigma>.\n                         coincide_on \\<sigma> \\<eta>1 V1 \\<and>\n                         coincide_on \\<sigma> \\<eta>2 V2", "proof (induction rule: finite.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>ground_on {} \\<eta>1; {} \\<inter> V2 = {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<sigma>.\n                         coincide_on \\<sigma> \\<eta>1 {} \\<and>\n                         coincide_on \\<sigma> \\<eta>2 V2\n 2. \\<And>A a.\n       \\<lbrakk>finite A;\n        \\<lbrakk>ground_on A \\<eta>1; A \\<inter> V2 = {}\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<sigma>.\n                             coincide_on \\<sigma> \\<eta>1 A \\<and>\n                             coincide_on \\<sigma> \\<eta>2 V2;\n        ground_on (insert a A) \\<eta>1; insert a A \\<inter> V2 = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            coincide_on \\<sigma> \\<eta>1 (insert a A) \\<and>\n                            coincide_on \\<sigma> \\<eta>2 V2", "case emptyI"], ["proof (state)\nthis:\n  ground_on {} \\<eta>1\n  {} \\<inter> V2 = {}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>ground_on {} \\<eta>1; {} \\<inter> V2 = {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<sigma>.\n                         coincide_on \\<sigma> \\<eta>1 {} \\<and>\n                         coincide_on \\<sigma> \\<eta>2 V2\n 2. \\<And>A a.\n       \\<lbrakk>finite A;\n        \\<lbrakk>ground_on A \\<eta>1; A \\<inter> V2 = {}\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<sigma>.\n                             coincide_on \\<sigma> \\<eta>1 A \\<and>\n                             coincide_on \\<sigma> \\<eta>2 V2;\n        ground_on (insert a A) \\<eta>1; insert a A \\<inter> V2 = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            coincide_on \\<sigma> \\<eta>1 (insert a A) \\<and>\n                            coincide_on \\<sigma> \\<eta>2 V2", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       coincide_on \\<sigma> \\<eta>1 {} \\<and>\n       coincide_on \\<sigma> \\<eta>2 V2", "unfolding coincide_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       (\\<forall>x\\<in>{}.\n           Var x \\<lhd> \\<sigma> = Var x \\<lhd> \\<eta>1) \\<and>\n       (\\<forall>x\\<in>V2. Var x \\<lhd> \\<sigma> = Var x \\<lhd> \\<eta>2)", "by auto"], ["proof (state)\nthis:\n  \\<exists>\\<sigma>.\n     coincide_on \\<sigma> \\<eta>1 {} \\<and> coincide_on \\<sigma> \\<eta>2 V2\n\ngoal (1 subgoal):\n 1. \\<And>A a.\n       \\<lbrakk>finite A;\n        \\<lbrakk>ground_on A \\<eta>1; A \\<inter> V2 = {}\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<sigma>.\n                             coincide_on \\<sigma> \\<eta>1 A \\<and>\n                             coincide_on \\<sigma> \\<eta>2 V2;\n        ground_on (insert a A) \\<eta>1; insert a A \\<inter> V2 = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            coincide_on \\<sigma> \\<eta>1 (insert a A) \\<and>\n                            coincide_on \\<sigma> \\<eta>2 V2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A a.\n       \\<lbrakk>finite A;\n        \\<lbrakk>ground_on A \\<eta>1; A \\<inter> V2 = {}\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<sigma>.\n                             coincide_on \\<sigma> \\<eta>1 A \\<and>\n                             coincide_on \\<sigma> \\<eta>2 V2;\n        ground_on (insert a A) \\<eta>1; insert a A \\<inter> V2 = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            coincide_on \\<sigma> \\<eta>1 (insert a A) \\<and>\n                            coincide_on \\<sigma> \\<eta>2 V2", "fix V1 :: \"'a set\" and a::'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A a.\n       \\<lbrakk>finite A;\n        \\<lbrakk>ground_on A \\<eta>1; A \\<inter> V2 = {}\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<sigma>.\n                             coincide_on \\<sigma> \\<eta>1 A \\<and>\n                             coincide_on \\<sigma> \\<eta>2 V2;\n        ground_on (insert a A) \\<eta>1; insert a A \\<inter> V2 = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            coincide_on \\<sigma> \\<eta>1 (insert a A) \\<and>\n                            coincide_on \\<sigma> \\<eta>2 V2", "assume \"finite V1\""], ["proof (state)\nthis:\n  finite V1\n\ngoal (1 subgoal):\n 1. \\<And>A a.\n       \\<lbrakk>finite A;\n        \\<lbrakk>ground_on A \\<eta>1; A \\<inter> V2 = {}\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<sigma>.\n                             coincide_on \\<sigma> \\<eta>1 A \\<and>\n                             coincide_on \\<sigma> \\<eta>2 V2;\n        ground_on (insert a A) \\<eta>1; insert a A \\<inter> V2 = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            coincide_on \\<sigma> \\<eta>1 (insert a A) \\<and>\n                            coincide_on \\<sigma> \\<eta>2 V2", "assume hyp_ind: \"ground_on V1 \\<eta>1 \\<Longrightarrow> V1 \\<inter> V2 = {} \n        \\<Longrightarrow> \\<exists>\\<sigma>. (coincide_on \\<sigma> \\<eta>1 V1) \\<and> (coincide_on \\<sigma> \\<eta>2 V2)\""], ["proof (state)\nthis:\n  \\<lbrakk>ground_on V1 \\<eta>1; V1 \\<inter> V2 = {}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<sigma>.\n                       coincide_on \\<sigma> \\<eta>1 V1 \\<and>\n                       coincide_on \\<sigma> \\<eta>2 V2\n\ngoal (1 subgoal):\n 1. \\<And>A a.\n       \\<lbrakk>finite A;\n        \\<lbrakk>ground_on A \\<eta>1; A \\<inter> V2 = {}\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<sigma>.\n                             coincide_on \\<sigma> \\<eta>1 A \\<and>\n                             coincide_on \\<sigma> \\<eta>2 V2;\n        ground_on (insert a A) \\<eta>1; insert a A \\<inter> V2 = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            coincide_on \\<sigma> \\<eta>1 (insert a A) \\<and>\n                            coincide_on \\<sigma> \\<eta>2 V2", "assume  \"ground_on (insert a V1) \\<eta>1\""], ["proof (state)\nthis:\n  ground_on (insert a V1) \\<eta>1\n\ngoal (1 subgoal):\n 1. \\<And>A a.\n       \\<lbrakk>finite A;\n        \\<lbrakk>ground_on A \\<eta>1; A \\<inter> V2 = {}\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<sigma>.\n                             coincide_on \\<sigma> \\<eta>1 A \\<and>\n                             coincide_on \\<sigma> \\<eta>2 V2;\n        ground_on (insert a A) \\<eta>1; insert a A \\<inter> V2 = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            coincide_on \\<sigma> \\<eta>1 (insert a A) \\<and>\n                            coincide_on \\<sigma> \\<eta>2 V2", "assume \"(insert a V1) \\<inter> V2 = {}\""], ["proof (state)\nthis:\n  insert a V1 \\<inter> V2 = {}\n\ngoal (1 subgoal):\n 1. \\<And>A a.\n       \\<lbrakk>finite A;\n        \\<lbrakk>ground_on A \\<eta>1; A \\<inter> V2 = {}\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<sigma>.\n                             coincide_on \\<sigma> \\<eta>1 A \\<and>\n                             coincide_on \\<sigma> \\<eta>2 V2;\n        ground_on (insert a A) \\<eta>1; insert a A \\<inter> V2 = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            coincide_on \\<sigma> \\<eta>1 (insert a A) \\<and>\n                            coincide_on \\<sigma> \\<eta>2 V2", "from this"], ["proof (chain)\npicking this:\n  insert a V1 \\<inter> V2 = {}", "have \"V1 \\<inter> V2 = {}\""], ["proof (prove)\nusing this:\n  insert a V1 \\<inter> V2 = {}\n\ngoal (1 subgoal):\n 1. V1 \\<inter> V2 = {}", "by auto"], ["proof (state)\nthis:\n  V1 \\<inter> V2 = {}\n\ngoal (1 subgoal):\n 1. \\<And>A a.\n       \\<lbrakk>finite A;\n        \\<lbrakk>ground_on A \\<eta>1; A \\<inter> V2 = {}\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<sigma>.\n                             coincide_on \\<sigma> \\<eta>1 A \\<and>\n                             coincide_on \\<sigma> \\<eta>2 V2;\n        ground_on (insert a A) \\<eta>1; insert a A \\<inter> V2 = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            coincide_on \\<sigma> \\<eta>1 (insert a A) \\<and>\n                            coincide_on \\<sigma> \\<eta>2 V2", "from \\<open>ground_on (insert a V1) \\<eta>1\\<close>"], ["proof (chain)\npicking this:\n  ground_on (insert a V1) \\<eta>1", "have \"ground_on V1 \\<eta>1\""], ["proof (prove)\nusing this:\n  ground_on (insert a V1) \\<eta>1\n\ngoal (1 subgoal):\n 1. ground_on V1 \\<eta>1", "unfolding ground_on_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>insert a V1. ground_term (Var x \\<lhd> \\<eta>1)\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>V1. ground_term (Var x \\<lhd> \\<eta>1)", "by auto"], ["proof (state)\nthis:\n  ground_on V1 \\<eta>1\n\ngoal (1 subgoal):\n 1. \\<And>A a.\n       \\<lbrakk>finite A;\n        \\<lbrakk>ground_on A \\<eta>1; A \\<inter> V2 = {}\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<sigma>.\n                             coincide_on \\<sigma> \\<eta>1 A \\<and>\n                             coincide_on \\<sigma> \\<eta>2 V2;\n        ground_on (insert a A) \\<eta>1; insert a A \\<inter> V2 = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            coincide_on \\<sigma> \\<eta>1 (insert a A) \\<and>\n                            coincide_on \\<sigma> \\<eta>2 V2", "from this and hyp_ind and \\<open>V1 \\<inter> V2 = {}\\<close>"], ["proof (chain)\npicking this:\n  ground_on V1 \\<eta>1\n  \\<lbrakk>ground_on V1 \\<eta>1; V1 \\<inter> V2 = {}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<sigma>.\n                       coincide_on \\<sigma> \\<eta>1 V1 \\<and>\n                       coincide_on \\<sigma> \\<eta>2 V2\n  V1 \\<inter> V2 = {}", "obtain \\<sigma>' \n        where c:\"(coincide_on \\<sigma>' \\<eta>1 V1) \\<and> (coincide_on \\<sigma>' \\<eta>2 V2)\""], ["proof (prove)\nusing this:\n  ground_on V1 \\<eta>1\n  \\<lbrakk>ground_on V1 \\<eta>1; V1 \\<inter> V2 = {}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<sigma>.\n                       coincide_on \\<sigma> \\<eta>1 V1 \\<and>\n                       coincide_on \\<sigma> \\<eta>2 V2\n  V1 \\<inter> V2 = {}\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>'.\n        coincide_on \\<sigma>' \\<eta>1 V1 \\<and>\n        coincide_on \\<sigma>' \\<eta>2 V2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  coincide_on \\<sigma>' \\<eta>1 V1 \\<and> coincide_on \\<sigma>' \\<eta>2 V2\n\ngoal (1 subgoal):\n 1. \\<And>A a.\n       \\<lbrakk>finite A;\n        \\<lbrakk>ground_on A \\<eta>1; A \\<inter> V2 = {}\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<sigma>.\n                             coincide_on \\<sigma> \\<eta>1 A \\<and>\n                             coincide_on \\<sigma> \\<eta>2 V2;\n        ground_on (insert a A) \\<eta>1; insert a A \\<inter> V2 = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            coincide_on \\<sigma> \\<eta>1 (insert a A) \\<and>\n                            coincide_on \\<sigma> \\<eta>2 V2", "let ?t = \"subst (Var a) \\<eta>1\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A a.\n       \\<lbrakk>finite A;\n        \\<lbrakk>ground_on A \\<eta>1; A \\<inter> V2 = {}\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<sigma>.\n                             coincide_on \\<sigma> \\<eta>1 A \\<and>\n                             coincide_on \\<sigma> \\<eta>2 V2;\n        ground_on (insert a A) \\<eta>1; insert a A \\<inter> V2 = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            coincide_on \\<sigma> \\<eta>1 (insert a A) \\<and>\n                            coincide_on \\<sigma> \\<eta>2 V2", "from assms(2)"], ["proof (chain)\npicking this:\n  V1 \\<inter> V2 = {}", "have \"ground_term ?t\""], ["proof (prove)\nusing this:\n  V1 \\<inter> V2 = {}\n\ngoal (1 subgoal):\n 1. ground_term (Var a \\<lhd> \\<eta>1)", "by (meson \\<open>ground_on (insert a V1) \\<eta>1\\<close> ground_on_def insertI1)"], ["proof (state)\nthis:\n  ground_term (Var a \\<lhd> \\<eta>1)\n\ngoal (1 subgoal):\n 1. \\<And>A a.\n       \\<lbrakk>finite A;\n        \\<lbrakk>ground_on A \\<eta>1; A \\<inter> V2 = {}\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<sigma>.\n                             coincide_on \\<sigma> \\<eta>1 A \\<and>\n                             coincide_on \\<sigma> \\<eta>2 V2;\n        ground_on (insert a A) \\<eta>1; insert a A \\<inter> V2 = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            coincide_on \\<sigma> \\<eta>1 (insert a A) \\<and>\n                            coincide_on \\<sigma> \\<eta>2 V2", "let ?\\<sigma> = \"comp [(a,?t)] \\<sigma>'\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A a.\n       \\<lbrakk>finite A;\n        \\<lbrakk>ground_on A \\<eta>1; A \\<inter> V2 = {}\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<sigma>.\n                             coincide_on \\<sigma> \\<eta>1 A \\<and>\n                             coincide_on \\<sigma> \\<eta>2 V2;\n        ground_on (insert a A) \\<eta>1; insert a A \\<inter> V2 = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            coincide_on \\<sigma> \\<eta>1 (insert a A) \\<and>\n                            coincide_on \\<sigma> \\<eta>2 V2", "have \"coincide_on ?\\<sigma> \\<eta>1 (insert a V1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coincide_on ([(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>') \\<eta>1\n     (insert a V1)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> coincide_on ([(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>')\n            \\<eta>1 (insert a V1) \\<Longrightarrow>\n    False", "assume \"\\<not>coincide_on ?\\<sigma> \\<eta>1 (insert a V1)\""], ["proof (state)\nthis:\n  \\<not> coincide_on ([(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>')\n          \\<eta>1 (insert a V1)\n\ngoal (1 subgoal):\n 1. \\<not> coincide_on ([(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>')\n            \\<eta>1 (insert a V1) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<not> coincide_on ([(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>')\n          \\<eta>1 (insert a V1)", "obtain x where \"x \\<in> (insert a V1)\" and \n          \"(subst (Var x) ?\\<sigma>) \\<noteq> ( (subst (Var x) \\<eta>1))\""], ["proof (prove)\nusing this:\n  \\<not> coincide_on ([(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>')\n          \\<eta>1 (insert a V1)\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> insert a V1;\n         Var x \\<lhd>\n         [(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>' \\<noteq>\n         Var x \\<lhd> \\<eta>1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding coincide_on_def"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>x\\<in>insert a V1.\n             Var x \\<lhd> [(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>' =\n             Var x \\<lhd> \\<eta>1)\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> insert a V1;\n         Var x \\<lhd>\n         [(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>' \\<noteq>\n         Var x \\<lhd> \\<eta>1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x \\<in> insert a V1\n  Var x \\<lhd> [(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>' \\<noteq>\n  Var x \\<lhd> \\<eta>1\n\ngoal (1 subgoal):\n 1. \\<not> coincide_on ([(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>')\n            \\<eta>1 (insert a V1) \\<Longrightarrow>\n    False", "have \"subst (Var a) ?\\<sigma>  = subst ?t \\<sigma>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Var a \\<lhd> [(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>' =\n    Var a \\<lhd> \\<eta>1 \\<lhd> \\<sigma>'", "by simp"], ["proof (state)\nthis:\n  Var a \\<lhd> [(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>' =\n  Var a \\<lhd> \\<eta>1 \\<lhd> \\<sigma>'\n\ngoal (1 subgoal):\n 1. \\<not> coincide_on ([(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>')\n            \\<eta>1 (insert a V1) \\<Longrightarrow>\n    False", "from \\<open>ground_term ?t\\<close>"], ["proof (chain)\npicking this:\n  ground_term (Var a \\<lhd> \\<eta>1)", "have \"subst (Var a) ?\\<sigma>  = ?t\""], ["proof (prove)\nusing this:\n  ground_term (Var a \\<lhd> \\<eta>1)\n\ngoal (1 subgoal):\n 1. Var a \\<lhd> [(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>' =\n    Var a \\<lhd> \\<eta>1", "using substs_preserve_ground_terms"], ["proof (prove)\nusing this:\n  ground_term (Var a \\<lhd> \\<eta>1)\n  ground_term ?t \\<Longrightarrow> ?t \\<lhd> ?\\<sigma> = ?t\n\ngoal (1 subgoal):\n 1. Var a \\<lhd> [(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>' =\n    Var a \\<lhd> \\<eta>1", "by auto"], ["proof (state)\nthis:\n  Var a \\<lhd> [(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>' =\n  Var a \\<lhd> \\<eta>1\n\ngoal (1 subgoal):\n 1. \\<not> coincide_on ([(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>')\n            \\<eta>1 (insert a V1) \\<Longrightarrow>\n    False", "from this and \\<open>(subst (Var x) ?\\<sigma>) \\<noteq> ( (subst (Var x) \\<eta>1))\\<close>"], ["proof (chain)\npicking this:\n  Var a \\<lhd> [(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>' =\n  Var a \\<lhd> \\<eta>1\n  Var x \\<lhd> [(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>' \\<noteq>\n  Var x \\<lhd> \\<eta>1", "have \"x \\<noteq> a\""], ["proof (prove)\nusing this:\n  Var a \\<lhd> [(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>' =\n  Var a \\<lhd> \\<eta>1\n  Var x \\<lhd> [(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>' \\<noteq>\n  Var x \\<lhd> \\<eta>1\n\ngoal (1 subgoal):\n 1. x \\<noteq> a", "by blast"], ["proof (state)\nthis:\n  x \\<noteq> a\n\ngoal (1 subgoal):\n 1. \\<not> coincide_on ([(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>')\n            \\<eta>1 (insert a V1) \\<Longrightarrow>\n    False", "from this and \\<open>x \\<in> (insert a V1)\\<close>"], ["proof (chain)\npicking this:\n  x \\<noteq> a\n  x \\<in> insert a V1", "have \"x \\<in> V1\""], ["proof (prove)\nusing this:\n  x \\<noteq> a\n  x \\<in> insert a V1\n\ngoal (1 subgoal):\n 1. x \\<in> V1", "by auto"], ["proof (state)\nthis:\n  x \\<in> V1\n\ngoal (1 subgoal):\n 1. \\<not> coincide_on ([(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>')\n            \\<eta>1 (insert a V1) \\<Longrightarrow>\n    False", "from \\<open>x \\<noteq> a\\<close>"], ["proof (chain)\npicking this:\n  x \\<noteq> a", "have \"(subst (Var x) ?\\<sigma>) = (subst (Var x) \\<sigma>')\""], ["proof (prove)\nusing this:\n  x \\<noteq> a\n\ngoal (1 subgoal):\n 1. Var x \\<lhd> [(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>' =\n    Var x \\<lhd> \\<sigma>'", "by auto"], ["proof (state)\nthis:\n  Var x \\<lhd> [(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>' =\n  Var x \\<lhd> \\<sigma>'\n\ngoal (1 subgoal):\n 1. \\<not> coincide_on ([(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>')\n            \\<eta>1 (insert a V1) \\<Longrightarrow>\n    False", "from c and \\<open>x \\<in> V1\\<close>"], ["proof (chain)\npicking this:\n  coincide_on \\<sigma>' \\<eta>1 V1 \\<and> coincide_on \\<sigma>' \\<eta>2 V2\n  x \\<in> V1", "have \"(subst (Var x) \\<sigma>') = (subst (Var x) \\<eta>1)\""], ["proof (prove)\nusing this:\n  coincide_on \\<sigma>' \\<eta>1 V1 \\<and> coincide_on \\<sigma>' \\<eta>2 V2\n  x \\<in> V1\n\ngoal (1 subgoal):\n 1. Var x \\<lhd> \\<sigma>' = Var x \\<lhd> \\<eta>1", "unfolding coincide_on_def"], ["proof (prove)\nusing this:\n  (\\<forall>x\\<in>V1. Var x \\<lhd> \\<sigma>' = Var x \\<lhd> \\<eta>1) \\<and>\n  (\\<forall>x\\<in>V2. Var x \\<lhd> \\<sigma>' = Var x \\<lhd> \\<eta>2)\n  x \\<in> V1\n\ngoal (1 subgoal):\n 1. Var x \\<lhd> \\<sigma>' = Var x \\<lhd> \\<eta>1", "by blast"], ["proof (state)\nthis:\n  Var x \\<lhd> \\<sigma>' = Var x \\<lhd> \\<eta>1\n\ngoal (1 subgoal):\n 1. \\<not> coincide_on ([(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>')\n            \\<eta>1 (insert a V1) \\<Longrightarrow>\n    False", "from this and \\<open>(subst (Var x) ?\\<sigma>) = (subst (Var x) \\<sigma>')\\<close> \n          and \\<open>(subst (Var x) ?\\<sigma>) \\<noteq> ( (subst (Var x) \\<eta>1))\\<close>"], ["proof (chain)\npicking this:\n  Var x \\<lhd> \\<sigma>' = Var x \\<lhd> \\<eta>1\n  Var x \\<lhd> [(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>' =\n  Var x \\<lhd> \\<sigma>'\n  Var x \\<lhd> [(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>' \\<noteq>\n  Var x \\<lhd> \\<eta>1", "show False"], ["proof (prove)\nusing this:\n  Var x \\<lhd> \\<sigma>' = Var x \\<lhd> \\<eta>1\n  Var x \\<lhd> [(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>' =\n  Var x \\<lhd> \\<sigma>'\n  Var x \\<lhd> [(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>' \\<noteq>\n  Var x \\<lhd> \\<eta>1\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  coincide_on ([(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>') \\<eta>1\n   (insert a V1)\n\ngoal (1 subgoal):\n 1. \\<And>A a.\n       \\<lbrakk>finite A;\n        \\<lbrakk>ground_on A \\<eta>1; A \\<inter> V2 = {}\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<sigma>.\n                             coincide_on \\<sigma> \\<eta>1 A \\<and>\n                             coincide_on \\<sigma> \\<eta>2 V2;\n        ground_on (insert a A) \\<eta>1; insert a A \\<inter> V2 = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            coincide_on \\<sigma> \\<eta>1 (insert a A) \\<and>\n                            coincide_on \\<sigma> \\<eta>2 V2", "have \"coincide_on ?\\<sigma> \\<eta>2 V2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coincide_on ([(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>') \\<eta>2\n     V2", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> coincide_on ([(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>')\n            \\<eta>2 V2 \\<Longrightarrow>\n    False", "assume \"\\<not>coincide_on ?\\<sigma> \\<eta>2 V2\""], ["proof (state)\nthis:\n  \\<not> coincide_on ([(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>')\n          \\<eta>2 V2\n\ngoal (1 subgoal):\n 1. \\<not> coincide_on ([(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>')\n            \\<eta>2 V2 \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<not> coincide_on ([(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>')\n          \\<eta>2 V2", "obtain x where \"x \\<in> V2\" and \n          \"(subst (Var x) ?\\<sigma>) \\<noteq> ( (subst (Var x) \\<eta>2))\""], ["proof (prove)\nusing this:\n  \\<not> coincide_on ([(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>')\n          \\<eta>2 V2\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> V2;\n         Var x \\<lhd>\n         [(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>' \\<noteq>\n         Var x \\<lhd> \\<eta>2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding coincide_on_def"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>x\\<in>V2.\n             Var x \\<lhd> [(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>' =\n             Var x \\<lhd> \\<eta>2)\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> V2;\n         Var x \\<lhd>\n         [(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>' \\<noteq>\n         Var x \\<lhd> \\<eta>2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x \\<in> V2\n  Var x \\<lhd> [(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>' \\<noteq>\n  Var x \\<lhd> \\<eta>2\n\ngoal (1 subgoal):\n 1. \\<not> coincide_on ([(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>')\n            \\<eta>2 V2 \\<Longrightarrow>\n    False", "from \\<open>(insert a V1) \\<inter> V2 = {}\\<close> and \\<open>x \\<in> V2\\<close>"], ["proof (chain)\npicking this:\n  insert a V1 \\<inter> V2 = {}\n  x \\<in> V2", "have \"x \\<noteq> a\""], ["proof (prove)\nusing this:\n  insert a V1 \\<inter> V2 = {}\n  x \\<in> V2\n\ngoal (1 subgoal):\n 1. x \\<noteq> a", "by auto"], ["proof (state)\nthis:\n  x \\<noteq> a\n\ngoal (1 subgoal):\n 1. \\<not> coincide_on ([(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>')\n            \\<eta>2 V2 \\<Longrightarrow>\n    False", "from this"], ["proof (chain)\npicking this:\n  x \\<noteq> a", "have \"(subst (Var x) ?\\<sigma>) = (subst (Var x) \\<sigma>')\""], ["proof (prove)\nusing this:\n  x \\<noteq> a\n\ngoal (1 subgoal):\n 1. Var x \\<lhd> [(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>' =\n    Var x \\<lhd> \\<sigma>'", "by auto"], ["proof (state)\nthis:\n  Var x \\<lhd> [(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>' =\n  Var x \\<lhd> \\<sigma>'\n\ngoal (1 subgoal):\n 1. \\<not> coincide_on ([(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>')\n            \\<eta>2 V2 \\<Longrightarrow>\n    False", "from c and \\<open>x \\<in> V2\\<close>"], ["proof (chain)\npicking this:\n  coincide_on \\<sigma>' \\<eta>1 V1 \\<and> coincide_on \\<sigma>' \\<eta>2 V2\n  x \\<in> V2", "have \"(subst (Var x) \\<sigma>') = (subst (Var x) \\<eta>2)\""], ["proof (prove)\nusing this:\n  coincide_on \\<sigma>' \\<eta>1 V1 \\<and> coincide_on \\<sigma>' \\<eta>2 V2\n  x \\<in> V2\n\ngoal (1 subgoal):\n 1. Var x \\<lhd> \\<sigma>' = Var x \\<lhd> \\<eta>2", "unfolding coincide_on_def"], ["proof (prove)\nusing this:\n  (\\<forall>x\\<in>V1. Var x \\<lhd> \\<sigma>' = Var x \\<lhd> \\<eta>1) \\<and>\n  (\\<forall>x\\<in>V2. Var x \\<lhd> \\<sigma>' = Var x \\<lhd> \\<eta>2)\n  x \\<in> V2\n\ngoal (1 subgoal):\n 1. Var x \\<lhd> \\<sigma>' = Var x \\<lhd> \\<eta>2", "by blast"], ["proof (state)\nthis:\n  Var x \\<lhd> \\<sigma>' = Var x \\<lhd> \\<eta>2\n\ngoal (1 subgoal):\n 1. \\<not> coincide_on ([(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>')\n            \\<eta>2 V2 \\<Longrightarrow>\n    False", "from this and \\<open>(subst (Var x) ?\\<sigma>) = (subst (Var x) \\<sigma>')\\<close> \n          and \\<open>(subst (Var x) ?\\<sigma>) \\<noteq> ( (subst (Var x) \\<eta>2))\\<close>"], ["proof (chain)\npicking this:\n  Var x \\<lhd> \\<sigma>' = Var x \\<lhd> \\<eta>2\n  Var x \\<lhd> [(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>' =\n  Var x \\<lhd> \\<sigma>'\n  Var x \\<lhd> [(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>' \\<noteq>\n  Var x \\<lhd> \\<eta>2", "show False"], ["proof (prove)\nusing this:\n  Var x \\<lhd> \\<sigma>' = Var x \\<lhd> \\<eta>2\n  Var x \\<lhd> [(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>' =\n  Var x \\<lhd> \\<sigma>'\n  Var x \\<lhd> [(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>' \\<noteq>\n  Var x \\<lhd> \\<eta>2\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  coincide_on ([(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>') \\<eta>2 V2\n\ngoal (1 subgoal):\n 1. \\<And>A a.\n       \\<lbrakk>finite A;\n        \\<lbrakk>ground_on A \\<eta>1; A \\<inter> V2 = {}\\<rbrakk>\n        \\<Longrightarrow> \\<exists>\\<sigma>.\n                             coincide_on \\<sigma> \\<eta>1 A \\<and>\n                             coincide_on \\<sigma> \\<eta>2 V2;\n        ground_on (insert a A) \\<eta>1; insert a A \\<inter> V2 = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            coincide_on \\<sigma> \\<eta>1 (insert a A) \\<and>\n                            coincide_on \\<sigma> \\<eta>2 V2", "from \\<open>coincide_on ?\\<sigma> \\<eta>1 (insert a V1)\\<close> \\<open>coincide_on ?\\<sigma> \\<eta>2 V2\\<close>"], ["proof (chain)\npicking this:\n  coincide_on ([(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>') \\<eta>1\n   (insert a V1)\n  coincide_on ([(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>') \\<eta>2 V2", "show \"\\<exists>\\<sigma>. (coincide_on \\<sigma> \\<eta>1 (insert a V1)) \\<and> (coincide_on \\<sigma> \\<eta>2 V2)\""], ["proof (prove)\nusing this:\n  coincide_on ([(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>') \\<eta>1\n   (insert a V1)\n  coincide_on ([(a, Var a \\<lhd> \\<eta>1)] \\<lozenge> \\<sigma>') \\<eta>2 V2\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       coincide_on \\<sigma> \\<eta>1 (insert a V1) \\<and>\n       coincide_on \\<sigma> \\<eta>2 V2", "by auto"], ["proof (state)\nthis:\n  \\<exists>\\<sigma>.\n     coincide_on \\<sigma> \\<eta>1 (insert a V1) \\<and>\n     coincide_on \\<sigma> \\<eta>2 V2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>finite V1; ground_on V1 \\<eta>1; V1 \\<inter> V2 = {}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<sigma>.\n                       coincide_on \\<sigma> \\<eta>1 V1 \\<and>\n                       coincide_on \\<sigma> \\<eta>2 V2\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       coincide_on \\<sigma> \\<eta>1 V1 \\<and>\n       coincide_on \\<sigma> \\<eta>2 V2", "from this and assms"], ["proof (chain)\npicking this:\n  \\<lbrakk>finite V1; ground_on V1 \\<eta>1; V1 \\<inter> V2 = {}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<sigma>.\n                       coincide_on \\<sigma> \\<eta>1 V1 \\<and>\n                       coincide_on \\<sigma> \\<eta>2 V2\n  finite V1\n  V1 \\<inter> V2 = {}\n  ground_on V1 \\<eta>1", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite V1; ground_on V1 \\<eta>1; V1 \\<inter> V2 = {}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<sigma>.\n                       coincide_on \\<sigma> \\<eta>1 V1 \\<and>\n                       coincide_on \\<sigma> \\<eta>2 V2\n  finite V1\n  V1 \\<inter> V2 = {}\n  ground_on V1 \\<eta>1\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       coincide_on \\<sigma> \\<eta>1 V1 \\<and>\n       coincide_on \\<sigma> \\<eta>2 V2", "by auto"], ["proof (state)\nthis:\n  \\<exists>\\<sigma>.\n     coincide_on \\<sigma> \\<eta>1 V1 \\<and> coincide_on \\<sigma> \\<eta>2 V2\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>We define a map function for substitutions and prove its correctness.\\<close>"], ["", "fun map_subst\n  where \"map_subst f Nil = Nil\" \n      | \"map_subst f ((x,y) # l) = (x,(f y)) # (map_subst f l)\""], ["", "lemma map_subst_lemma:\n  shows \"((subst (Var x) \\<sigma>) \\<noteq> (Var x) \\<or> (subst (Var x) \\<sigma>) \\<noteq> (subst (Var x) (map_subst f \\<sigma>)))\n            \\<longrightarrow> ((subst (Var x) (map_subst f \\<sigma>)) = (f (subst (Var x) \\<sigma>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Var x \\<lhd> \\<sigma> \\<noteq> Var x \\<or>\n    Var x \\<lhd> \\<sigma> \\<noteq>\n    Var x \\<lhd> map_subst f \\<sigma> \\<longrightarrow>\n    Var x \\<lhd> map_subst f \\<sigma> = f (Var x \\<lhd> \\<sigma>)", "proof (induction \\<sigma>,simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a \\<sigma>.\n       Var x \\<lhd> \\<sigma> \\<noteq> Var x \\<or>\n       Var x \\<lhd> \\<sigma> \\<noteq>\n       Var x \\<lhd> map_subst f \\<sigma> \\<longrightarrow>\n       Var x \\<lhd> map_subst f \\<sigma> =\n       f (Var x \\<lhd> \\<sigma>) \\<Longrightarrow>\n       Var x \\<lhd> a # \\<sigma> \\<noteq> Var x \\<or>\n       Var x \\<lhd> a # \\<sigma> \\<noteq>\n       Var x \\<lhd> map_subst f (a # \\<sigma>) \\<longrightarrow>\n       Var x \\<lhd> map_subst f (a # \\<sigma>) =\n       f (Var x \\<lhd> a # \\<sigma>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a \\<sigma>.\n       Var x \\<lhd> \\<sigma> \\<noteq> Var x \\<or>\n       Var x \\<lhd> \\<sigma> \\<noteq>\n       Var x \\<lhd> map_subst f \\<sigma> \\<longrightarrow>\n       Var x \\<lhd> map_subst f \\<sigma> =\n       f (Var x \\<lhd> \\<sigma>) \\<Longrightarrow>\n       Var x \\<lhd> a # \\<sigma> \\<noteq> Var x \\<or>\n       Var x \\<lhd> a # \\<sigma> \\<noteq>\n       Var x \\<lhd> map_subst f (a # \\<sigma>) \\<longrightarrow>\n       Var x \\<lhd> map_subst f (a # \\<sigma>) =\n       f (Var x \\<lhd> a # \\<sigma>)", "case (Cons p \\<sigma>)"], ["proof (state)\nthis:\n  Var x \\<lhd> \\<sigma> \\<noteq> Var x \\<or>\n  Var x \\<lhd> \\<sigma> \\<noteq>\n  Var x \\<lhd> map_subst f \\<sigma> \\<longrightarrow>\n  Var x \\<lhd> map_subst f \\<sigma> = f (Var x \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<And>a \\<sigma>.\n       Var x \\<lhd> \\<sigma> \\<noteq> Var x \\<or>\n       Var x \\<lhd> \\<sigma> \\<noteq>\n       Var x \\<lhd> map_subst f \\<sigma> \\<longrightarrow>\n       Var x \\<lhd> map_subst f \\<sigma> =\n       f (Var x \\<lhd> \\<sigma>) \\<Longrightarrow>\n       Var x \\<lhd> a # \\<sigma> \\<noteq> Var x \\<or>\n       Var x \\<lhd> a # \\<sigma> \\<noteq>\n       Var x \\<lhd> map_subst f (a # \\<sigma>) \\<longrightarrow>\n       Var x \\<lhd> map_subst f (a # \\<sigma>) =\n       f (Var x \\<lhd> a # \\<sigma>)", "let ?u = \"(fst p)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a \\<sigma>.\n       Var x \\<lhd> \\<sigma> \\<noteq> Var x \\<or>\n       Var x \\<lhd> \\<sigma> \\<noteq>\n       Var x \\<lhd> map_subst f \\<sigma> \\<longrightarrow>\n       Var x \\<lhd> map_subst f \\<sigma> =\n       f (Var x \\<lhd> \\<sigma>) \\<Longrightarrow>\n       Var x \\<lhd> a # \\<sigma> \\<noteq> Var x \\<or>\n       Var x \\<lhd> a # \\<sigma> \\<noteq>\n       Var x \\<lhd> map_subst f (a # \\<sigma>) \\<longrightarrow>\n       Var x \\<lhd> map_subst f (a # \\<sigma>) =\n       f (Var x \\<lhd> a # \\<sigma>)", "let ?v = \"(snd p)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a \\<sigma>.\n       Var x \\<lhd> \\<sigma> \\<noteq> Var x \\<or>\n       Var x \\<lhd> \\<sigma> \\<noteq>\n       Var x \\<lhd> map_subst f \\<sigma> \\<longrightarrow>\n       Var x \\<lhd> map_subst f \\<sigma> =\n       f (Var x \\<lhd> \\<sigma>) \\<Longrightarrow>\n       Var x \\<lhd> a # \\<sigma> \\<noteq> Var x \\<or>\n       Var x \\<lhd> a # \\<sigma> \\<noteq>\n       Var x \\<lhd> map_subst f (a # \\<sigma>) \\<longrightarrow>\n       Var x \\<lhd> map_subst f (a # \\<sigma>) =\n       f (Var x \\<lhd> a # \\<sigma>)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. Var x \\<lhd> p # \\<sigma> \\<noteq> Var x \\<or>\n    Var x \\<lhd> p # \\<sigma> \\<noteq>\n    Var x \\<lhd> map_subst f (p # \\<sigma>) \\<longrightarrow>\n    Var x \\<lhd> map_subst f (p # \\<sigma>) = f (Var x \\<lhd> p # \\<sigma>)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. Var x \\<lhd> p # \\<sigma> \\<noteq> Var x \\<or>\n    Var x \\<lhd> p # \\<sigma> \\<noteq>\n    Var x \\<lhd> map_subst f (p # \\<sigma>) \\<Longrightarrow>\n    Var x \\<lhd> map_subst f (p # \\<sigma>) = f (Var x \\<lhd> p # \\<sigma>)", "assume \"((subst (Var x) (Cons p \\<sigma>)) \\<noteq> (Var x)  \n        \\<or> (subst (Var x)  (Cons p \\<sigma>)) \n          \\<noteq> (subst (Var x) (map_subst f  (Cons p \\<sigma>))))\""], ["proof (state)\nthis:\n  Var x \\<lhd> p # \\<sigma> \\<noteq> Var x \\<or>\n  Var x \\<lhd> p # \\<sigma> \\<noteq> Var x \\<lhd> map_subst f (p # \\<sigma>)\n\ngoal (1 subgoal):\n 1. Var x \\<lhd> p # \\<sigma> \\<noteq> Var x \\<or>\n    Var x \\<lhd> p # \\<sigma> \\<noteq>\n    Var x \\<lhd> map_subst f (p # \\<sigma>) \\<Longrightarrow>\n    Var x \\<lhd> map_subst f (p # \\<sigma>) = f (Var x \\<lhd> p # \\<sigma>)", "have  \"map_subst f (Cons p \\<sigma>) = ( (?u, (f ?v)) # (map_subst f \\<sigma>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_subst f (p # \\<sigma>) = (fst p, f (snd p)) # map_subst f \\<sigma>", "by (metis map_subst.simps(2) prod.collapse)"], ["proof (state)\nthis:\n  map_subst f (p # \\<sigma>) = (fst p, f (snd p)) # map_subst f \\<sigma>\n\ngoal (1 subgoal):\n 1. Var x \\<lhd> p # \\<sigma> \\<noteq> Var x \\<or>\n    Var x \\<lhd> p # \\<sigma> \\<noteq>\n    Var x \\<lhd> map_subst f (p # \\<sigma>) \\<Longrightarrow>\n    Var x \\<lhd> map_subst f (p # \\<sigma>) = f (Var x \\<lhd> p # \\<sigma>)", "show \"(subst (Var x) (map_subst f (Cons p \\<sigma>))) = (f (subst (Var x) (Cons p \\<sigma>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Var x \\<lhd> map_subst f (p # \\<sigma>) = f (Var x \\<lhd> p # \\<sigma>)", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    Var x \\<lhd> map_subst f (p # \\<sigma>) = f (Var x \\<lhd> p # \\<sigma>)\n 2. \\<not> ?P \\<Longrightarrow>\n    Var x \\<lhd> map_subst f (p # \\<sigma>) = f (Var x \\<lhd> p # \\<sigma>)", "assume \"x = ?u\""], ["proof (state)\nthis:\n  x = fst p\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    Var x \\<lhd> map_subst f (p # \\<sigma>) = f (Var x \\<lhd> p # \\<sigma>)\n 2. \\<not> ?P \\<Longrightarrow>\n    Var x \\<lhd> map_subst f (p # \\<sigma>) = f (Var x \\<lhd> p # \\<sigma>)", "from this"], ["proof (chain)\npicking this:\n  x = fst p", "have \"subst (Var x) (Cons p \\<sigma>) = ?v\""], ["proof (prove)\nusing this:\n  x = fst p\n\ngoal (1 subgoal):\n 1. Var x \\<lhd> p # \\<sigma> = snd p", "by (metis assoc.simps(2) prod.collapse subst.simps(1))"], ["proof (state)\nthis:\n  Var x \\<lhd> p # \\<sigma> = snd p\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    Var x \\<lhd> map_subst f (p # \\<sigma>) = f (Var x \\<lhd> p # \\<sigma>)\n 2. \\<not> ?P \\<Longrightarrow>\n    Var x \\<lhd> map_subst f (p # \\<sigma>) = f (Var x \\<lhd> p # \\<sigma>)", "from \\<open>map_subst f (Cons p \\<sigma>) = ( (?u, (f ?v)) # (map_subst f \\<sigma>))\\<close> \n          and \\<open>x = ?u\\<close>"], ["proof (chain)\npicking this:\n  map_subst f (p # \\<sigma>) = (fst p, f (snd p)) # map_subst f \\<sigma>\n  x = fst p", "have \"subst (Var x) (map_subst f (Cons p \\<sigma>)) = (f ?v)\""], ["proof (prove)\nusing this:\n  map_subst f (p # \\<sigma>) = (fst p, f (snd p)) # map_subst f \\<sigma>\n  x = fst p\n\ngoal (1 subgoal):\n 1. Var x \\<lhd> map_subst f (p # \\<sigma>) = f (snd p)", "by simp"], ["proof (state)\nthis:\n  Var x \\<lhd> map_subst f (p # \\<sigma>) = f (snd p)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    Var x \\<lhd> map_subst f (p # \\<sigma>) = f (Var x \\<lhd> p # \\<sigma>)\n 2. \\<not> ?P \\<Longrightarrow>\n    Var x \\<lhd> map_subst f (p # \\<sigma>) = f (Var x \\<lhd> p # \\<sigma>)", "from \\<open>subst (Var x) (Cons p \\<sigma>) = ?v\\<close> \\<open>subst (Var x) (map_subst f (Cons p \\<sigma>)) = (f ?v)\\<close>"], ["proof (chain)\npicking this:\n  Var x \\<lhd> p # \\<sigma> = snd p\n  Var x \\<lhd> map_subst f (p # \\<sigma>) = f (snd p)", "show ?thesis"], ["proof (prove)\nusing this:\n  Var x \\<lhd> p # \\<sigma> = snd p\n  Var x \\<lhd> map_subst f (p # \\<sigma>) = f (snd p)\n\ngoal (1 subgoal):\n 1. Var x \\<lhd> map_subst f (p # \\<sigma>) = f (Var x \\<lhd> p # \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  Var x \\<lhd> map_subst f (p # \\<sigma>) = f (Var x \\<lhd> p # \\<sigma>)\n\ngoal (1 subgoal):\n 1. x \\<noteq> fst p \\<Longrightarrow>\n    Var x \\<lhd> map_subst f (p # \\<sigma>) = f (Var x \\<lhd> p # \\<sigma>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> fst p \\<Longrightarrow>\n    Var x \\<lhd> map_subst f (p # \\<sigma>) = f (Var x \\<lhd> p # \\<sigma>)", "assume \"x \\<noteq> ?u\""], ["proof (state)\nthis:\n  x \\<noteq> fst p\n\ngoal (1 subgoal):\n 1. x \\<noteq> fst p \\<Longrightarrow>\n    Var x \\<lhd> map_subst f (p # \\<sigma>) = f (Var x \\<lhd> p # \\<sigma>)", "from this"], ["proof (chain)\npicking this:\n  x \\<noteq> fst p", "have \"subst (Var x) (Cons p \\<sigma>) = (subst (Var x) \\<sigma>)\""], ["proof (prove)\nusing this:\n  x \\<noteq> fst p\n\ngoal (1 subgoal):\n 1. Var x \\<lhd> p # \\<sigma> = Var x \\<lhd> \\<sigma>", "by (metis  assoc.simps(2) prod.collapse subst.simps(1))"], ["proof (state)\nthis:\n  Var x \\<lhd> p # \\<sigma> = Var x \\<lhd> \\<sigma>\n\ngoal (1 subgoal):\n 1. x \\<noteq> fst p \\<Longrightarrow>\n    Var x \\<lhd> map_subst f (p # \\<sigma>) = f (Var x \\<lhd> p # \\<sigma>)", "from \\<open>map_subst f (Cons p \\<sigma>) = ( (?u, (f ?v)) # (map_subst f \\<sigma>))\\<close> \n          and \\<open>x \\<noteq> ?u\\<close>"], ["proof (chain)\npicking this:\n  map_subst f (p # \\<sigma>) = (fst p, f (snd p)) # map_subst f \\<sigma>\n  x \\<noteq> fst p", "have \"subst (Var x) (map_subst f (Cons p \\<sigma>)) = \n            subst (Var x) (map_subst f \\<sigma>)\""], ["proof (prove)\nusing this:\n  map_subst f (p # \\<sigma>) = (fst p, f (snd p)) # map_subst f \\<sigma>\n  x \\<noteq> fst p\n\ngoal (1 subgoal):\n 1. Var x \\<lhd> map_subst f (p # \\<sigma>) =\n    Var x \\<lhd> map_subst f \\<sigma>", "by simp"], ["proof (state)\nthis:\n  Var x \\<lhd> map_subst f (p # \\<sigma>) =\n  Var x \\<lhd> map_subst f \\<sigma>\n\ngoal (1 subgoal):\n 1. x \\<noteq> fst p \\<Longrightarrow>\n    Var x \\<lhd> map_subst f (p # \\<sigma>) = f (Var x \\<lhd> p # \\<sigma>)", "from this and \"Cons.IH\""], ["proof (chain)\npicking this:\n  Var x \\<lhd> map_subst f (p # \\<sigma>) =\n  Var x \\<lhd> map_subst f \\<sigma>\n  Var x \\<lhd> \\<sigma> \\<noteq> Var x \\<or>\n  Var x \\<lhd> \\<sigma> \\<noteq>\n  Var x \\<lhd> map_subst f \\<sigma> \\<longrightarrow>\n  Var x \\<lhd> map_subst f \\<sigma> = f (Var x \\<lhd> \\<sigma>)", "have \n          \"subst (Var x) (map_subst f (Cons p \\<sigma>)) = (f (subst (Var x) \\<sigma>))\""], ["proof (prove)\nusing this:\n  Var x \\<lhd> map_subst f (p # \\<sigma>) =\n  Var x \\<lhd> map_subst f \\<sigma>\n  Var x \\<lhd> \\<sigma> \\<noteq> Var x \\<or>\n  Var x \\<lhd> \\<sigma> \\<noteq>\n  Var x \\<lhd> map_subst f \\<sigma> \\<longrightarrow>\n  Var x \\<lhd> map_subst f \\<sigma> = f (Var x \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. Var x \\<lhd> map_subst f (p # \\<sigma>) = f (Var x \\<lhd> \\<sigma>)", "using \\<open>subst (Var x) (p # \\<sigma>) = subst (Var x) \\<sigma>\\<close> \\<open>subst (Var x) (p # \\<sigma>) \\<noteq> Var x \\<or> subst (Var x) (p # \\<sigma>) \\<noteq> subst (Var x) (map_subst f (p # \\<sigma>))\\<close>"], ["proof (prove)\nusing this:\n  Var x \\<lhd> map_subst f (p # \\<sigma>) =\n  Var x \\<lhd> map_subst f \\<sigma>\n  Var x \\<lhd> \\<sigma> \\<noteq> Var x \\<or>\n  Var x \\<lhd> \\<sigma> \\<noteq>\n  Var x \\<lhd> map_subst f \\<sigma> \\<longrightarrow>\n  Var x \\<lhd> map_subst f \\<sigma> = f (Var x \\<lhd> \\<sigma>)\n  Var x \\<lhd> p # \\<sigma> = Var x \\<lhd> \\<sigma>\n  Var x \\<lhd> p # \\<sigma> \\<noteq> Var x \\<or>\n  Var x \\<lhd> p # \\<sigma> \\<noteq> Var x \\<lhd> map_subst f (p # \\<sigma>)\n\ngoal (1 subgoal):\n 1. Var x \\<lhd> map_subst f (p # \\<sigma>) = f (Var x \\<lhd> \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  Var x \\<lhd> map_subst f (p # \\<sigma>) = f (Var x \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. x \\<noteq> fst p \\<Longrightarrow>\n    Var x \\<lhd> map_subst f (p # \\<sigma>) = f (Var x \\<lhd> p # \\<sigma>)", "from this and \\<open>subst (Var x) (Cons p \\<sigma>) = (subst (Var x) \\<sigma>)\\<close>"], ["proof (chain)\npicking this:\n  Var x \\<lhd> map_subst f (p # \\<sigma>) = f (Var x \\<lhd> \\<sigma>)\n  Var x \\<lhd> p # \\<sigma> = Var x \\<lhd> \\<sigma>", "show ?thesis"], ["proof (prove)\nusing this:\n  Var x \\<lhd> map_subst f (p # \\<sigma>) = f (Var x \\<lhd> \\<sigma>)\n  Var x \\<lhd> p # \\<sigma> = Var x \\<lhd> \\<sigma>\n\ngoal (1 subgoal):\n 1. Var x \\<lhd> map_subst f (p # \\<sigma>) = f (Var x \\<lhd> p # \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  Var x \\<lhd> map_subst f (p # \\<sigma>) = f (Var x \\<lhd> p # \\<sigma>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Var x \\<lhd> map_subst f (p # \\<sigma>) = f (Var x \\<lhd> p # \\<sigma>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Var x \\<lhd> p # \\<sigma> \\<noteq> Var x \\<or>\n  Var x \\<lhd> p # \\<sigma> \\<noteq>\n  Var x \\<lhd> map_subst f (p # \\<sigma>) \\<longrightarrow>\n  Var x \\<lhd> map_subst f (p # \\<sigma>) = f (Var x \\<lhd> p # \\<sigma>)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Congruences\\<close>"], ["", "text \\<open>We now define the notion of a congruence on ground terms, i.e., an equivalence relation\nthat is closed under contextual embedding.\\<close>"], ["", "type_synonym 'a binary_relation_on_trms = \"'a trm \\<Rightarrow> 'a trm \\<Rightarrow> bool\""], ["", "definition reflexive :: \"'a binary_relation_on_trms \\<Rightarrow> bool\"\nwhere \n    \"(reflexive x) = (\\<forall>y. (x y y))\""], ["", "definition symmetric :: \"'a binary_relation_on_trms \\<Rightarrow> bool\"\nwhere \n    \"(symmetric x) = (\\<forall>y. \\<forall>z. ((x y z) = (x z y)))\""], ["", "definition transitive :: \"'a binary_relation_on_trms \\<Rightarrow> bool\"\nwhere \n    \"(transitive x) = (\\<forall>y. \\<forall>z. \\<forall>u. (x y z) \\<longrightarrow> (x z u) \\<longrightarrow> (x y u))\""], ["", "definition equivalence_relation :: \"'a binary_relation_on_trms \\<Rightarrow> bool\"\nwhere \n  \"(equivalence_relation x) = ((reflexive x) \\<and> (symmetric x) \\<and> (transitive x))\""], ["", "definition compatible_with_structure :: \"('a binary_relation_on_trms) \\<Rightarrow> bool\"\nwhere\n   \"(compatible_with_structure x) = (\\<forall>t1 t2 s1 s2. \n      (x t1 s1) \\<longrightarrow> (x t2 s2) \\<longrightarrow> (x (Comb t1 t2) (Comb s1 s2)))\""], ["", "definition congruence :: \"'a binary_relation_on_trms \\<Rightarrow> bool\"\nwhere \n  \"(congruence x) = ((equivalence_relation x) \\<and> (compatible_with_structure x))\""], ["", "lemma replacement_preserves_congruences :\n  shows \"\\<And> t  s. (congruence I) \\<Longrightarrow> (I (subst u \\<sigma>)  (subst v \\<sigma>)) \n          \\<Longrightarrow> subterm t p u \\<Longrightarrow> replace_subterm t p v s \n          \\<Longrightarrow> (I (subst t \\<sigma>)  (subst s \\<sigma>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t s.\n       \\<lbrakk>congruence I; I (u \\<lhd> \\<sigma>) (v \\<lhd> \\<sigma>);\n        subterm t p u; replace_subterm t p v s\\<rbrakk>\n       \\<Longrightarrow> I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)", "proof (induction p)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t s.\n       \\<lbrakk>congruence I; I (u \\<lhd> \\<sigma>) (v \\<lhd> \\<sigma>);\n        subterm t [] u; replace_subterm t [] v s\\<rbrakk>\n       \\<Longrightarrow> I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)\n 2. \\<And>a p t s.\n       \\<lbrakk>\\<And>t s.\n                   \\<lbrakk>congruence I;\n                    I (u \\<lhd> \\<sigma>) (v \\<lhd> \\<sigma>);\n                    subterm t p u; replace_subterm t p v s\\<rbrakk>\n                   \\<Longrightarrow> I (t \\<lhd> \\<sigma>)\n(s \\<lhd> \\<sigma>);\n        congruence I; I (u \\<lhd> \\<sigma>) (v \\<lhd> \\<sigma>);\n        subterm t (a # p) u; replace_subterm t (a # p) v s\\<rbrakk>\n       \\<Longrightarrow> I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)", "case Nil"], ["proof (state)\nthis:\n  congruence I\n  I (u \\<lhd> \\<sigma>) (v \\<lhd> \\<sigma>)\n  subterm t [] u\n  replace_subterm t [] v s\n\ngoal (2 subgoals):\n 1. \\<And>t s.\n       \\<lbrakk>congruence I; I (u \\<lhd> \\<sigma>) (v \\<lhd> \\<sigma>);\n        subterm t [] u; replace_subterm t [] v s\\<rbrakk>\n       \\<Longrightarrow> I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)\n 2. \\<And>a p t s.\n       \\<lbrakk>\\<And>t s.\n                   \\<lbrakk>congruence I;\n                    I (u \\<lhd> \\<sigma>) (v \\<lhd> \\<sigma>);\n                    subterm t p u; replace_subterm t p v s\\<rbrakk>\n                   \\<Longrightarrow> I (t \\<lhd> \\<sigma>)\n(s \\<lhd> \\<sigma>);\n        congruence I; I (u \\<lhd> \\<sigma>) (v \\<lhd> \\<sigma>);\n        subterm t (a # p) u; replace_subterm t (a # p) v s\\<rbrakk>\n       \\<Longrightarrow> I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)", "from \\<open>subterm t Nil u\\<close>"], ["proof (chain)\npicking this:\n  subterm t [] u", "have \"t = u\""], ["proof (prove)\nusing this:\n  subterm t [] u\n\ngoal (1 subgoal):\n 1. t = u", "by auto"], ["proof (state)\nthis:\n  t = u\n\ngoal (2 subgoals):\n 1. \\<And>t s.\n       \\<lbrakk>congruence I; I (u \\<lhd> \\<sigma>) (v \\<lhd> \\<sigma>);\n        subterm t [] u; replace_subterm t [] v s\\<rbrakk>\n       \\<Longrightarrow> I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)\n 2. \\<And>a p t s.\n       \\<lbrakk>\\<And>t s.\n                   \\<lbrakk>congruence I;\n                    I (u \\<lhd> \\<sigma>) (v \\<lhd> \\<sigma>);\n                    subterm t p u; replace_subterm t p v s\\<rbrakk>\n                   \\<Longrightarrow> I (t \\<lhd> \\<sigma>)\n(s \\<lhd> \\<sigma>);\n        congruence I; I (u \\<lhd> \\<sigma>) (v \\<lhd> \\<sigma>);\n        subterm t (a # p) u; replace_subterm t (a # p) v s\\<rbrakk>\n       \\<Longrightarrow> I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)", "from \\<open>replace_subterm t Nil v s\\<close>"], ["proof (chain)\npicking this:\n  replace_subterm t [] v s", "have \"s = v\""], ["proof (prove)\nusing this:\n  replace_subterm t [] v s\n\ngoal (1 subgoal):\n 1. s = v", "by auto"], ["proof (state)\nthis:\n  s = v\n\ngoal (2 subgoals):\n 1. \\<And>t s.\n       \\<lbrakk>congruence I; I (u \\<lhd> \\<sigma>) (v \\<lhd> \\<sigma>);\n        subterm t [] u; replace_subterm t [] v s\\<rbrakk>\n       \\<Longrightarrow> I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)\n 2. \\<And>a p t s.\n       \\<lbrakk>\\<And>t s.\n                   \\<lbrakk>congruence I;\n                    I (u \\<lhd> \\<sigma>) (v \\<lhd> \\<sigma>);\n                    subterm t p u; replace_subterm t p v s\\<rbrakk>\n                   \\<Longrightarrow> I (t \\<lhd> \\<sigma>)\n(s \\<lhd> \\<sigma>);\n        congruence I; I (u \\<lhd> \\<sigma>) (v \\<lhd> \\<sigma>);\n        subterm t (a # p) u; replace_subterm t (a # p) v s\\<rbrakk>\n       \\<Longrightarrow> I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)", "from \\<open>t = u\\<close> and \\<open>s = v\\<close> and \\<open>(I (subst u \\<sigma>)  (subst v \\<sigma>))\\<close>"], ["proof (chain)\npicking this:\n  t = u\n  s = v\n  I (u \\<lhd> \\<sigma>) (v \\<lhd> \\<sigma>)", "show ?case"], ["proof (prove)\nusing this:\n  t = u\n  s = v\n  I (u \\<lhd> \\<sigma>) (v \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<And>a p t s.\n       \\<lbrakk>\\<And>t s.\n                   \\<lbrakk>congruence I;\n                    I (u \\<lhd> \\<sigma>) (v \\<lhd> \\<sigma>);\n                    subterm t p u; replace_subterm t p v s\\<rbrakk>\n                   \\<Longrightarrow> I (t \\<lhd> \\<sigma>)\n(s \\<lhd> \\<sigma>);\n        congruence I; I (u \\<lhd> \\<sigma>) (v \\<lhd> \\<sigma>);\n        subterm t (a # p) u; replace_subterm t (a # p) v s\\<rbrakk>\n       \\<Longrightarrow> I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a p t s.\n       \\<lbrakk>\\<And>t s.\n                   \\<lbrakk>congruence I;\n                    I (u \\<lhd> \\<sigma>) (v \\<lhd> \\<sigma>);\n                    subterm t p u; replace_subterm t p v s\\<rbrakk>\n                   \\<Longrightarrow> I (t \\<lhd> \\<sigma>)\n(s \\<lhd> \\<sigma>);\n        congruence I; I (u \\<lhd> \\<sigma>) (v \\<lhd> \\<sigma>);\n        subterm t (a # p) u; replace_subterm t (a # p) v s\\<rbrakk>\n       \\<Longrightarrow> I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)", "case (Cons i q)"], ["proof (state)\nthis:\n  \\<lbrakk>congruence I; I (u \\<lhd> \\<sigma>) (v \\<lhd> \\<sigma>);\n   subterm ?t q u; replace_subterm ?t q v ?s\\<rbrakk>\n  \\<Longrightarrow> I (?t \\<lhd> \\<sigma>) (?s \\<lhd> \\<sigma>)\n  congruence I\n  I (u \\<lhd> \\<sigma>) (v \\<lhd> \\<sigma>)\n  subterm t (i # q) u\n  replace_subterm t (i # q) v s\n\ngoal (1 subgoal):\n 1. \\<And>a p t s.\n       \\<lbrakk>\\<And>t s.\n                   \\<lbrakk>congruence I;\n                    I (u \\<lhd> \\<sigma>) (v \\<lhd> \\<sigma>);\n                    subterm t p u; replace_subterm t p v s\\<rbrakk>\n                   \\<Longrightarrow> I (t \\<lhd> \\<sigma>)\n(s \\<lhd> \\<sigma>);\n        congruence I; I (u \\<lhd> \\<sigma>) (v \\<lhd> \\<sigma>);\n        subterm t (a # p) u; replace_subterm t (a # p) v s\\<rbrakk>\n       \\<Longrightarrow> I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)", "from \\<open>subterm t (i # q) u\\<close>"], ["proof (chain)\npicking this:\n  subterm t (i # q) u", "obtain t1 t2 where\n        \"t = (Comb t1 t2)\""], ["proof (prove)\nusing this:\n  subterm t (i # q) u\n\ngoal (1 subgoal):\n 1. (\\<And>t1 t2.\n        t = t1 \\<cdot> t2 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using subterm.elims(2)"], ["proof (prove)\nusing this:\n  subterm t (i # q) u\n  \\<lbrakk>subterm ?x ?xa ?xb;\n   \\<And>T S.\n      \\<lbrakk>?x = T; ?xa = []; ?xb = S; T = S\\<rbrakk>\n      \\<Longrightarrow> ?P;\n   \\<And>x y next S.\n      \\<lbrakk>?x = x \\<cdot> y; ?xa = indices.Left # next; ?xb = S;\n       subterm x next S\\<rbrakk>\n      \\<Longrightarrow> ?P;\n   \\<And>x y next S.\n      \\<lbrakk>?x = x \\<cdot> y; ?xa = indices.Right # next; ?xb = S;\n       subterm y next S\\<rbrakk>\n      \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>t1 t2.\n        t = t1 \\<cdot> t2 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  t = t1 \\<cdot> t2\n\ngoal (1 subgoal):\n 1. \\<And>a p t s.\n       \\<lbrakk>\\<And>t s.\n                   \\<lbrakk>congruence I;\n                    I (u \\<lhd> \\<sigma>) (v \\<lhd> \\<sigma>);\n                    subterm t p u; replace_subterm t p v s\\<rbrakk>\n                   \\<Longrightarrow> I (t \\<lhd> \\<sigma>)\n(s \\<lhd> \\<sigma>);\n        congruence I; I (u \\<lhd> \\<sigma>) (v \\<lhd> \\<sigma>);\n        subterm t (a # p) u; replace_subterm t (a # p) v s\\<rbrakk>\n       \\<Longrightarrow> I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)", "have \"i = Left \\<or> i = Right\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i = indices.Left \\<or> i = indices.Right", "using indices.exhaust"], ["proof (prove)\nusing this:\n  \\<lbrakk>?y = indices.Left \\<Longrightarrow> ?P;\n   ?y = indices.Right \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. i = indices.Left \\<or> i = indices.Right", "by blast"], ["proof (state)\nthis:\n  i = indices.Left \\<or> i = indices.Right\n\ngoal (1 subgoal):\n 1. \\<And>a p t s.\n       \\<lbrakk>\\<And>t s.\n                   \\<lbrakk>congruence I;\n                    I (u \\<lhd> \\<sigma>) (v \\<lhd> \\<sigma>);\n                    subterm t p u; replace_subterm t p v s\\<rbrakk>\n                   \\<Longrightarrow> I (t \\<lhd> \\<sigma>)\n(s \\<lhd> \\<sigma>);\n        congruence I; I (u \\<lhd> \\<sigma>) (v \\<lhd> \\<sigma>);\n        subterm t (a # p) u; replace_subterm t (a # p) v s\\<rbrakk>\n       \\<Longrightarrow> I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)", "then"], ["proof (chain)\npicking this:\n  i = indices.Left \\<or> i = indices.Right", "show \"I (subst t \\<sigma>)  (subst s \\<sigma>)\""], ["proof (prove)\nusing this:\n  i = indices.Left \\<or> i = indices.Right\n\ngoal (1 subgoal):\n 1. I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. i = indices.Left \\<Longrightarrow>\n    I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)\n 2. i = indices.Right \\<Longrightarrow>\n    I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)", "assume \"i = Left\""], ["proof (state)\nthis:\n  i = indices.Left\n\ngoal (2 subgoals):\n 1. i = indices.Left \\<Longrightarrow>\n    I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)\n 2. i = indices.Right \\<Longrightarrow>\n    I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)", "from this and \\<open>t = Comb t1 t2\\<close> and \\<open>subterm t (i # q) u\\<close>"], ["proof (chain)\npicking this:\n  i = indices.Left\n  t = t1 \\<cdot> t2\n  subterm t (i # q) u", "have \"subterm t1 q u\""], ["proof (prove)\nusing this:\n  i = indices.Left\n  t = t1 \\<cdot> t2\n  subterm t (i # q) u\n\ngoal (1 subgoal):\n 1. subterm t1 q u", "by auto"], ["proof (state)\nthis:\n  subterm t1 q u\n\ngoal (2 subgoals):\n 1. i = indices.Left \\<Longrightarrow>\n    I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)\n 2. i = indices.Right \\<Longrightarrow>\n    I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)", "from \\<open>i = Left\\<close> and \\<open>t = Comb t1 t2\\<close> and \\<open>replace_subterm t (i # q) v s\\<close>"], ["proof (chain)\npicking this:\n  i = indices.Left\n  t = t1 \\<cdot> t2\n  replace_subterm t (i # q) v s", "obtain t1' where \"replace_subterm t1 q v t1'\" and \"s = Comb t1' t2\""], ["proof (prove)\nusing this:\n  i = indices.Left\n  t = t1 \\<cdot> t2\n  replace_subterm t (i # q) v s\n\ngoal (1 subgoal):\n 1. (\\<And>t1'.\n        \\<lbrakk>replace_subterm t1 q v t1'; s = t1' \\<cdot> t2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  replace_subterm t1 q v t1'\n  s = t1' \\<cdot> t2\n\ngoal (2 subgoals):\n 1. i = indices.Left \\<Longrightarrow>\n    I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)\n 2. i = indices.Right \\<Longrightarrow>\n    I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)", "from \\<open>congruence I\\<close> and \\<open>(I (subst u \\<sigma>)  (subst v \\<sigma>))\\<close> \n        and \\<open>subterm t1 q u\\<close> and \\<open>replace_subterm t1 q v t1'\\<close>"], ["proof (chain)\npicking this:\n  congruence I\n  I (u \\<lhd> \\<sigma>) (v \\<lhd> \\<sigma>)\n  subterm t1 q u\n  replace_subterm t1 q v t1'", "have \n        \"I (subst t1 \\<sigma>) (subst t1' \\<sigma>)\""], ["proof (prove)\nusing this:\n  congruence I\n  I (u \\<lhd> \\<sigma>) (v \\<lhd> \\<sigma>)\n  subterm t1 q u\n  replace_subterm t1 q v t1'\n\ngoal (1 subgoal):\n 1. I (t1 \\<lhd> \\<sigma>) (t1' \\<lhd> \\<sigma>)", "using Cons.IH Cons.prems(1)"], ["proof (prove)\nusing this:\n  congruence I\n  I (u \\<lhd> \\<sigma>) (v \\<lhd> \\<sigma>)\n  subterm t1 q u\n  replace_subterm t1 q v t1'\n  \\<lbrakk>congruence I; I (u \\<lhd> \\<sigma>) (v \\<lhd> \\<sigma>);\n   subterm ?t q u; replace_subterm ?t q v ?s\\<rbrakk>\n  \\<Longrightarrow> I (?t \\<lhd> \\<sigma>) (?s \\<lhd> \\<sigma>)\n  congruence I\n\ngoal (1 subgoal):\n 1. I (t1 \\<lhd> \\<sigma>) (t1' \\<lhd> \\<sigma>)", "by blast"], ["proof (state)\nthis:\n  I (t1 \\<lhd> \\<sigma>) (t1' \\<lhd> \\<sigma>)\n\ngoal (2 subgoals):\n 1. i = indices.Left \\<Longrightarrow>\n    I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)\n 2. i = indices.Right \\<Longrightarrow>\n    I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)", "from \\<open>congruence I\\<close>"], ["proof (chain)\npicking this:\n  congruence I", "have \"I (subst t2 \\<sigma>)  (subst t2 \\<sigma>)\""], ["proof (prove)\nusing this:\n  congruence I\n\ngoal (1 subgoal):\n 1. I (t2 \\<lhd> \\<sigma>) (t2 \\<lhd> \\<sigma>)", "unfolding congruence_def equivalence_relation_def reflexive_def"], ["proof (prove)\nusing this:\n  ((\\<forall>y. I y y) \\<and> symmetric I \\<and> transitive I) \\<and>\n  compatible_with_structure I\n\ngoal (1 subgoal):\n 1. I (t2 \\<lhd> \\<sigma>) (t2 \\<lhd> \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  I (t2 \\<lhd> \\<sigma>) (t2 \\<lhd> \\<sigma>)\n\ngoal (2 subgoals):\n 1. i = indices.Left \\<Longrightarrow>\n    I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)\n 2. i = indices.Right \\<Longrightarrow>\n    I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)", "from \\<open>I (subst t1 \\<sigma>) (subst t1' \\<sigma>)\\<close> \n        and \\<open>I (subst t2 \\<sigma>)  (subst t2 \\<sigma>)\\<close> \n        and \\<open>congruence I\\<close> and \\<open>t = (Comb t1 t2)\\<close> and \\<open>s = (Comb t1' t2)\\<close>"], ["proof (chain)\npicking this:\n  I (t1 \\<lhd> \\<sigma>) (t1' \\<lhd> \\<sigma>)\n  I (t2 \\<lhd> \\<sigma>) (t2 \\<lhd> \\<sigma>)\n  congruence I\n  t = t1 \\<cdot> t2\n  s = t1' \\<cdot> t2", "show \"I (subst t \\<sigma>)  (subst s \\<sigma>)\""], ["proof (prove)\nusing this:\n  I (t1 \\<lhd> \\<sigma>) (t1' \\<lhd> \\<sigma>)\n  I (t2 \\<lhd> \\<sigma>) (t2 \\<lhd> \\<sigma>)\n  congruence I\n  t = t1 \\<cdot> t2\n  s = t1' \\<cdot> t2\n\ngoal (1 subgoal):\n 1. I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)", "unfolding congruence_def compatible_with_structure_def"], ["proof (prove)\nusing this:\n  I (t1 \\<lhd> \\<sigma>) (t1' \\<lhd> \\<sigma>)\n  I (t2 \\<lhd> \\<sigma>) (t2 \\<lhd> \\<sigma>)\n  equivalence_relation I \\<and>\n  (\\<forall>t1 t2 s1 s2.\n      I t1 s1 \\<longrightarrow>\n      I t2 s2 \\<longrightarrow> I (t1 \\<cdot> t2) (s1 \\<cdot> s2))\n  t = t1 \\<cdot> t2\n  s = t1' \\<cdot> t2\n\ngoal (1 subgoal):\n 1. I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. i = indices.Right \\<Longrightarrow>\n    I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i = indices.Right \\<Longrightarrow>\n    I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)", "assume \"i = Right\""], ["proof (state)\nthis:\n  i = indices.Right\n\ngoal (1 subgoal):\n 1. i = indices.Right \\<Longrightarrow>\n    I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)", "from this and \\<open>t = Comb t1 t2\\<close> and \\<open>subterm t (i # q) u\\<close>"], ["proof (chain)\npicking this:\n  i = indices.Right\n  t = t1 \\<cdot> t2\n  subterm t (i # q) u", "have \"subterm t2 q u\""], ["proof (prove)\nusing this:\n  i = indices.Right\n  t = t1 \\<cdot> t2\n  subterm t (i # q) u\n\ngoal (1 subgoal):\n 1. subterm t2 q u", "by auto"], ["proof (state)\nthis:\n  subterm t2 q u\n\ngoal (1 subgoal):\n 1. i = indices.Right \\<Longrightarrow>\n    I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)", "from \\<open>i = Right\\<close> and \\<open>t = Comb t1 t2\\<close> and \\<open>replace_subterm t (i # q) v s\\<close>"], ["proof (chain)\npicking this:\n  i = indices.Right\n  t = t1 \\<cdot> t2\n  replace_subterm t (i # q) v s", "obtain t2' where \"replace_subterm t2 q v t2'\" and \"s = Comb t1 t2'\""], ["proof (prove)\nusing this:\n  i = indices.Right\n  t = t1 \\<cdot> t2\n  replace_subterm t (i # q) v s\n\ngoal (1 subgoal):\n 1. (\\<And>t2'.\n        \\<lbrakk>replace_subterm t2 q v t2'; s = t1 \\<cdot> t2'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  replace_subterm t2 q v t2'\n  s = t1 \\<cdot> t2'\n\ngoal (1 subgoal):\n 1. i = indices.Right \\<Longrightarrow>\n    I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)", "from \\<open>congruence I\\<close> and \\<open>(I (subst u \\<sigma>)  (subst v \\<sigma>))\\<close> \n        and \\<open>subterm t2 q u\\<close> and \\<open>replace_subterm t2 q v t2'\\<close>"], ["proof (chain)\npicking this:\n  congruence I\n  I (u \\<lhd> \\<sigma>) (v \\<lhd> \\<sigma>)\n  subterm t2 q u\n  replace_subterm t2 q v t2'", "have \n        \"I (subst t2 \\<sigma>) (subst t2' \\<sigma>)\""], ["proof (prove)\nusing this:\n  congruence I\n  I (u \\<lhd> \\<sigma>) (v \\<lhd> \\<sigma>)\n  subterm t2 q u\n  replace_subterm t2 q v t2'\n\ngoal (1 subgoal):\n 1. I (t2 \\<lhd> \\<sigma>) (t2' \\<lhd> \\<sigma>)", "using Cons.IH Cons.prems(1)"], ["proof (prove)\nusing this:\n  congruence I\n  I (u \\<lhd> \\<sigma>) (v \\<lhd> \\<sigma>)\n  subterm t2 q u\n  replace_subterm t2 q v t2'\n  \\<lbrakk>congruence I; I (u \\<lhd> \\<sigma>) (v \\<lhd> \\<sigma>);\n   subterm ?t q u; replace_subterm ?t q v ?s\\<rbrakk>\n  \\<Longrightarrow> I (?t \\<lhd> \\<sigma>) (?s \\<lhd> \\<sigma>)\n  congruence I\n\ngoal (1 subgoal):\n 1. I (t2 \\<lhd> \\<sigma>) (t2' \\<lhd> \\<sigma>)", "by blast"], ["proof (state)\nthis:\n  I (t2 \\<lhd> \\<sigma>) (t2' \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. i = indices.Right \\<Longrightarrow>\n    I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)", "from \\<open>congruence I\\<close>"], ["proof (chain)\npicking this:\n  congruence I", "have \"I (subst t1 \\<sigma>)  (subst t1 \\<sigma>)\""], ["proof (prove)\nusing this:\n  congruence I\n\ngoal (1 subgoal):\n 1. I (t1 \\<lhd> \\<sigma>) (t1 \\<lhd> \\<sigma>)", "unfolding congruence_def equivalence_relation_def reflexive_def"], ["proof (prove)\nusing this:\n  ((\\<forall>y. I y y) \\<and> symmetric I \\<and> transitive I) \\<and>\n  compatible_with_structure I\n\ngoal (1 subgoal):\n 1. I (t1 \\<lhd> \\<sigma>) (t1 \\<lhd> \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  I (t1 \\<lhd> \\<sigma>) (t1 \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. i = indices.Right \\<Longrightarrow>\n    I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)", "from \\<open>I (subst t2 \\<sigma>) (subst t2' \\<sigma>)\\<close> \n        and \\<open>I (subst t1 \\<sigma>)  (subst t1 \\<sigma>)\\<close> \n        and \\<open>congruence I\\<close> and \\<open>t = (Comb t1 t2)\\<close> and \\<open>s = (Comb t1 t2')\\<close>"], ["proof (chain)\npicking this:\n  I (t2 \\<lhd> \\<sigma>) (t2' \\<lhd> \\<sigma>)\n  I (t1 \\<lhd> \\<sigma>) (t1 \\<lhd> \\<sigma>)\n  congruence I\n  t = t1 \\<cdot> t2\n  s = t1 \\<cdot> t2'", "show \"I (subst t \\<sigma>)  (subst s \\<sigma>)\""], ["proof (prove)\nusing this:\n  I (t2 \\<lhd> \\<sigma>) (t2' \\<lhd> \\<sigma>)\n  I (t1 \\<lhd> \\<sigma>) (t1 \\<lhd> \\<sigma>)\n  congruence I\n  t = t1 \\<cdot> t2\n  s = t1 \\<cdot> t2'\n\ngoal (1 subgoal):\n 1. I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)", "unfolding congruence_def compatible_with_structure_def"], ["proof (prove)\nusing this:\n  I (t2 \\<lhd> \\<sigma>) (t2' \\<lhd> \\<sigma>)\n  I (t1 \\<lhd> \\<sigma>) (t1 \\<lhd> \\<sigma>)\n  equivalence_relation I \\<and>\n  (\\<forall>t1 t2 s1 s2.\n      I t1 s1 \\<longrightarrow>\n      I t2 s2 \\<longrightarrow> I (t1 \\<cdot> t2) (s1 \\<cdot> s2))\n  t = t1 \\<cdot> t2\n  s = t1 \\<cdot> t2'\n\ngoal (1 subgoal):\n 1. I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  I (t \\<lhd> \\<sigma>) (s \\<lhd> \\<sigma>)\n\ngoal:\nNo subgoals!", "qed"], ["", "definition equivalent_on \nwhere \"equivalent_on \\<sigma> \\<eta> V I = (\\<forall>x \\<in> V. \n  (I (subst (Var x) \\<sigma>) ( (subst (Var x) \\<eta>))))\""], ["", "lemma equivalent_on_term:\n  assumes \"congruence I\"\n  shows \"\\<And> \\<sigma> \\<eta>. equivalent_on \\<sigma> \\<eta> (vars_of t) I \\<Longrightarrow> (I (subst t \\<sigma>) (subst t \\<eta>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<eta>.\n       equivalent_on \\<sigma> \\<eta> (vars_of t) I \\<Longrightarrow>\n       I (t \\<lhd> \\<sigma>) (t \\<lhd> \\<eta>)", "proof (induction t)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x \\<sigma> \\<eta>.\n       equivalent_on \\<sigma> \\<eta> (vars_of (Var x)) I \\<Longrightarrow>\n       I (Var x \\<lhd> \\<sigma>) (Var x \\<lhd> \\<eta>)\n 2. \\<And>x \\<sigma> \\<eta>.\n       equivalent_on \\<sigma> \\<eta> (vars_of (Const x)) I \\<Longrightarrow>\n       I (Const x \\<lhd> \\<sigma>) (Const x \\<lhd> \\<eta>)\n 3. \\<And>t1 t2 \\<sigma> \\<eta>.\n       \\<lbrakk>\\<And>\\<sigma> \\<eta>.\n                   equivalent_on \\<sigma> \\<eta> (vars_of t1)\n                    I \\<Longrightarrow>\n                   I (t1 \\<lhd> \\<sigma>) (t1 \\<lhd> \\<eta>);\n        \\<And>\\<sigma> \\<eta>.\n           equivalent_on \\<sigma> \\<eta> (vars_of t2) I \\<Longrightarrow>\n           I (t2 \\<lhd> \\<sigma>) (t2 \\<lhd> \\<eta>);\n        equivalent_on \\<sigma> \\<eta> (vars_of (t1 \\<cdot> t2)) I\\<rbrakk>\n       \\<Longrightarrow> I (t1 \\<cdot> t2 \\<lhd> \\<sigma>)\n                          (t1 \\<cdot> t2 \\<lhd> \\<eta>)", "case (Var x)"], ["proof (state)\nthis:\n  equivalent_on \\<sigma> \\<eta> (vars_of (Var x)) I\n\ngoal (3 subgoals):\n 1. \\<And>x \\<sigma> \\<eta>.\n       equivalent_on \\<sigma> \\<eta> (vars_of (Var x)) I \\<Longrightarrow>\n       I (Var x \\<lhd> \\<sigma>) (Var x \\<lhd> \\<eta>)\n 2. \\<And>x \\<sigma> \\<eta>.\n       equivalent_on \\<sigma> \\<eta> (vars_of (Const x)) I \\<Longrightarrow>\n       I (Const x \\<lhd> \\<sigma>) (Const x \\<lhd> \\<eta>)\n 3. \\<And>t1 t2 \\<sigma> \\<eta>.\n       \\<lbrakk>\\<And>\\<sigma> \\<eta>.\n                   equivalent_on \\<sigma> \\<eta> (vars_of t1)\n                    I \\<Longrightarrow>\n                   I (t1 \\<lhd> \\<sigma>) (t1 \\<lhd> \\<eta>);\n        \\<And>\\<sigma> \\<eta>.\n           equivalent_on \\<sigma> \\<eta> (vars_of t2) I \\<Longrightarrow>\n           I (t2 \\<lhd> \\<sigma>) (t2 \\<lhd> \\<eta>);\n        equivalent_on \\<sigma> \\<eta> (vars_of (t1 \\<cdot> t2)) I\\<rbrakk>\n       \\<Longrightarrow> I (t1 \\<cdot> t2 \\<lhd> \\<sigma>)\n                          (t1 \\<cdot> t2 \\<lhd> \\<eta>)", "from this"], ["proof (chain)\npicking this:\n  equivalent_on \\<sigma> \\<eta> (vars_of (Var x)) I", "show \"(I (subst (Var x) \\<sigma>) (subst  (Var x) \\<eta>))\""], ["proof (prove)\nusing this:\n  equivalent_on \\<sigma> \\<eta> (vars_of (Var x)) I\n\ngoal (1 subgoal):\n 1. I (Var x \\<lhd> \\<sigma>) (Var x \\<lhd> \\<eta>)", "unfolding equivalent_on_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>vars_of (Var x).\n     I (Var x \\<lhd> \\<sigma>) (Var x \\<lhd> \\<eta>)\n\ngoal (1 subgoal):\n 1. I (Var x \\<lhd> \\<sigma>) (Var x \\<lhd> \\<eta>)", "by auto"], ["proof (state)\nthis:\n  I (Var x \\<lhd> \\<sigma>) (Var x \\<lhd> \\<eta>)\n\ngoal (2 subgoals):\n 1. \\<And>x \\<sigma> \\<eta>.\n       equivalent_on \\<sigma> \\<eta> (vars_of (Const x)) I \\<Longrightarrow>\n       I (Const x \\<lhd> \\<sigma>) (Const x \\<lhd> \\<eta>)\n 2. \\<And>t1 t2 \\<sigma> \\<eta>.\n       \\<lbrakk>\\<And>\\<sigma> \\<eta>.\n                   equivalent_on \\<sigma> \\<eta> (vars_of t1)\n                    I \\<Longrightarrow>\n                   I (t1 \\<lhd> \\<sigma>) (t1 \\<lhd> \\<eta>);\n        \\<And>\\<sigma> \\<eta>.\n           equivalent_on \\<sigma> \\<eta> (vars_of t2) I \\<Longrightarrow>\n           I (t2 \\<lhd> \\<sigma>) (t2 \\<lhd> \\<eta>);\n        equivalent_on \\<sigma> \\<eta> (vars_of (t1 \\<cdot> t2)) I\\<rbrakk>\n       \\<Longrightarrow> I (t1 \\<cdot> t2 \\<lhd> \\<sigma>)\n                          (t1 \\<cdot> t2 \\<lhd> \\<eta>)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x \\<sigma> \\<eta>.\n       equivalent_on \\<sigma> \\<eta> (vars_of (Const x)) I \\<Longrightarrow>\n       I (Const x \\<lhd> \\<sigma>) (Const x \\<lhd> \\<eta>)\n 2. \\<And>t1 t2 \\<sigma> \\<eta>.\n       \\<lbrakk>\\<And>\\<sigma> \\<eta>.\n                   equivalent_on \\<sigma> \\<eta> (vars_of t1)\n                    I \\<Longrightarrow>\n                   I (t1 \\<lhd> \\<sigma>) (t1 \\<lhd> \\<eta>);\n        \\<And>\\<sigma> \\<eta>.\n           equivalent_on \\<sigma> \\<eta> (vars_of t2) I \\<Longrightarrow>\n           I (t2 \\<lhd> \\<sigma>) (t2 \\<lhd> \\<eta>);\n        equivalent_on \\<sigma> \\<eta> (vars_of (t1 \\<cdot> t2)) I\\<rbrakk>\n       \\<Longrightarrow> I (t1 \\<cdot> t2 \\<lhd> \\<sigma>)\n                          (t1 \\<cdot> t2 \\<lhd> \\<eta>)", "case (Const x)"], ["proof (state)\nthis:\n  equivalent_on \\<sigma> \\<eta> (vars_of (Const x)) I\n\ngoal (2 subgoals):\n 1. \\<And>x \\<sigma> \\<eta>.\n       equivalent_on \\<sigma> \\<eta> (vars_of (Const x)) I \\<Longrightarrow>\n       I (Const x \\<lhd> \\<sigma>) (Const x \\<lhd> \\<eta>)\n 2. \\<And>t1 t2 \\<sigma> \\<eta>.\n       \\<lbrakk>\\<And>\\<sigma> \\<eta>.\n                   equivalent_on \\<sigma> \\<eta> (vars_of t1)\n                    I \\<Longrightarrow>\n                   I (t1 \\<lhd> \\<sigma>) (t1 \\<lhd> \\<eta>);\n        \\<And>\\<sigma> \\<eta>.\n           equivalent_on \\<sigma> \\<eta> (vars_of t2) I \\<Longrightarrow>\n           I (t2 \\<lhd> \\<sigma>) (t2 \\<lhd> \\<eta>);\n        equivalent_on \\<sigma> \\<eta> (vars_of (t1 \\<cdot> t2)) I\\<rbrakk>\n       \\<Longrightarrow> I (t1 \\<cdot> t2 \\<lhd> \\<sigma>)\n                          (t1 \\<cdot> t2 \\<lhd> \\<eta>)", "from assms(1)"], ["proof (chain)\npicking this:\n  congruence I", "show \"(I (subst (Const x) \\<sigma>) (subst  (Const x) \\<eta>))\""], ["proof (prove)\nusing this:\n  congruence I\n\ngoal (1 subgoal):\n 1. I (Const x \\<lhd> \\<sigma>) (Const x \\<lhd> \\<eta>)", "unfolding congruence_def equivalence_relation_def reflexive_def"], ["proof (prove)\nusing this:\n  ((\\<forall>y. I y y) \\<and> symmetric I \\<and> transitive I) \\<and>\n  compatible_with_structure I\n\ngoal (1 subgoal):\n 1. I (Const x \\<lhd> \\<sigma>) (Const x \\<lhd> \\<eta>)", "by auto"], ["proof (state)\nthis:\n  I (Const x \\<lhd> \\<sigma>) (Const x \\<lhd> \\<eta>)\n\ngoal (1 subgoal):\n 1. \\<And>t1 t2 \\<sigma> \\<eta>.\n       \\<lbrakk>\\<And>\\<sigma> \\<eta>.\n                   equivalent_on \\<sigma> \\<eta> (vars_of t1)\n                    I \\<Longrightarrow>\n                   I (t1 \\<lhd> \\<sigma>) (t1 \\<lhd> \\<eta>);\n        \\<And>\\<sigma> \\<eta>.\n           equivalent_on \\<sigma> \\<eta> (vars_of t2) I \\<Longrightarrow>\n           I (t2 \\<lhd> \\<sigma>) (t2 \\<lhd> \\<eta>);\n        equivalent_on \\<sigma> \\<eta> (vars_of (t1 \\<cdot> t2)) I\\<rbrakk>\n       \\<Longrightarrow> I (t1 \\<cdot> t2 \\<lhd> \\<sigma>)\n                          (t1 \\<cdot> t2 \\<lhd> \\<eta>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 t2 \\<sigma> \\<eta>.\n       \\<lbrakk>\\<And>\\<sigma> \\<eta>.\n                   equivalent_on \\<sigma> \\<eta> (vars_of t1)\n                    I \\<Longrightarrow>\n                   I (t1 \\<lhd> \\<sigma>) (t1 \\<lhd> \\<eta>);\n        \\<And>\\<sigma> \\<eta>.\n           equivalent_on \\<sigma> \\<eta> (vars_of t2) I \\<Longrightarrow>\n           I (t2 \\<lhd> \\<sigma>) (t2 \\<lhd> \\<eta>);\n        equivalent_on \\<sigma> \\<eta> (vars_of (t1 \\<cdot> t2)) I\\<rbrakk>\n       \\<Longrightarrow> I (t1 \\<cdot> t2 \\<lhd> \\<sigma>)\n                          (t1 \\<cdot> t2 \\<lhd> \\<eta>)", "case (Comb t1 t2)"], ["proof (state)\nthis:\n  equivalent_on ?\\<sigma> ?\\<eta> (vars_of t1) I \\<Longrightarrow>\n  I (t1 \\<lhd> ?\\<sigma>) (t1 \\<lhd> ?\\<eta>)\n  equivalent_on ?\\<sigma> ?\\<eta> (vars_of t2) I \\<Longrightarrow>\n  I (t2 \\<lhd> ?\\<sigma>) (t2 \\<lhd> ?\\<eta>)\n  equivalent_on \\<sigma> \\<eta> (vars_of (t1 \\<cdot> t2)) I\n\ngoal (1 subgoal):\n 1. \\<And>t1 t2 \\<sigma> \\<eta>.\n       \\<lbrakk>\\<And>\\<sigma> \\<eta>.\n                   equivalent_on \\<sigma> \\<eta> (vars_of t1)\n                    I \\<Longrightarrow>\n                   I (t1 \\<lhd> \\<sigma>) (t1 \\<lhd> \\<eta>);\n        \\<And>\\<sigma> \\<eta>.\n           equivalent_on \\<sigma> \\<eta> (vars_of t2) I \\<Longrightarrow>\n           I (t2 \\<lhd> \\<sigma>) (t2 \\<lhd> \\<eta>);\n        equivalent_on \\<sigma> \\<eta> (vars_of (t1 \\<cdot> t2)) I\\<rbrakk>\n       \\<Longrightarrow> I (t1 \\<cdot> t2 \\<lhd> \\<sigma>)\n                          (t1 \\<cdot> t2 \\<lhd> \\<eta>)", "from this assms(1)"], ["proof (chain)\npicking this:\n  equivalent_on ?\\<sigma> ?\\<eta> (vars_of t1) I \\<Longrightarrow>\n  I (t1 \\<lhd> ?\\<sigma>) (t1 \\<lhd> ?\\<eta>)\n  equivalent_on ?\\<sigma> ?\\<eta> (vars_of t2) I \\<Longrightarrow>\n  I (t2 \\<lhd> ?\\<sigma>) (t2 \\<lhd> ?\\<eta>)\n  equivalent_on \\<sigma> \\<eta> (vars_of (t1 \\<cdot> t2)) I\n  congruence I", "show ?case"], ["proof (prove)\nusing this:\n  equivalent_on ?\\<sigma> ?\\<eta> (vars_of t1) I \\<Longrightarrow>\n  I (t1 \\<lhd> ?\\<sigma>) (t1 \\<lhd> ?\\<eta>)\n  equivalent_on ?\\<sigma> ?\\<eta> (vars_of t2) I \\<Longrightarrow>\n  I (t2 \\<lhd> ?\\<sigma>) (t2 \\<lhd> ?\\<eta>)\n  equivalent_on \\<sigma> \\<eta> (vars_of (t1 \\<cdot> t2)) I\n  congruence I\n\ngoal (1 subgoal):\n 1. I (t1 \\<cdot> t2 \\<lhd> \\<sigma>) (t1 \\<cdot> t2 \\<lhd> \\<eta>)", "unfolding equivalent_on_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>vars_of t1.\n     I (Var x \\<lhd> ?\\<sigma>) (Var x \\<lhd> ?\\<eta>) \\<Longrightarrow>\n  I (t1 \\<lhd> ?\\<sigma>) (t1 \\<lhd> ?\\<eta>)\n  \\<forall>x\\<in>vars_of t2.\n     I (Var x \\<lhd> ?\\<sigma>) (Var x \\<lhd> ?\\<eta>) \\<Longrightarrow>\n  I (t2 \\<lhd> ?\\<sigma>) (t2 \\<lhd> ?\\<eta>)\n  \\<forall>x\\<in>vars_of (t1 \\<cdot> t2).\n     I (Var x \\<lhd> \\<sigma>) (Var x \\<lhd> \\<eta>)\n  congruence I\n\ngoal (1 subgoal):\n 1. I (t1 \\<cdot> t2 \\<lhd> \\<sigma>) (t1 \\<cdot> t2 \\<lhd> \\<eta>)", "unfolding congruence_def compatible_with_structure_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>vars_of t1.\n     I (Var x \\<lhd> ?\\<sigma>) (Var x \\<lhd> ?\\<eta>) \\<Longrightarrow>\n  I (t1 \\<lhd> ?\\<sigma>) (t1 \\<lhd> ?\\<eta>)\n  \\<forall>x\\<in>vars_of t2.\n     I (Var x \\<lhd> ?\\<sigma>) (Var x \\<lhd> ?\\<eta>) \\<Longrightarrow>\n  I (t2 \\<lhd> ?\\<sigma>) (t2 \\<lhd> ?\\<eta>)\n  \\<forall>x\\<in>vars_of (t1 \\<cdot> t2).\n     I (Var x \\<lhd> \\<sigma>) (Var x \\<lhd> \\<eta>)\n  equivalence_relation I \\<and>\n  (\\<forall>t1 t2 s1 s2.\n      I t1 s1 \\<longrightarrow>\n      I t2 s2 \\<longrightarrow> I (t1 \\<cdot> t2) (s1 \\<cdot> s2))\n\ngoal (1 subgoal):\n 1. I (t1 \\<cdot> t2 \\<lhd> \\<sigma>) (t1 \\<cdot> t2 \\<lhd> \\<eta>)", "by auto"], ["proof (state)\nthis:\n  I (t1 \\<cdot> t2 \\<lhd> \\<sigma>) (t1 \\<cdot> t2 \\<lhd> \\<eta>)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Renamings\\<close>"], ["", "text \\<open>We define the usual notion of a renaming. We show that fresh renamings always exist \n(provided the set of variables is infinite) and that renamings admit inverses.\\<close>"], ["", "definition renaming\nwhere\n  \"renaming \\<sigma> V = (\\<forall>x \\<in> V. (is_a_variable (subst (Var x) \\<sigma>)) \n    \\<and> (\\<forall> x y. ((x \\<in> V) \\<longrightarrow> (y \\<in> V) \\<longrightarrow> x \\<noteq> y \\<longrightarrow> (subst (Var x) \\<sigma>) \\<noteq> (subst (Var y) \\<sigma>))))\""], ["", "lemma renamings_admit_inverse:\n  shows \"finite V \\<Longrightarrow> renaming \\<sigma> V \\<Longrightarrow> \\<exists> \\<theta>. (\\<forall> x \\<in> V. (subst (subst (Var x) \\<sigma> ) \\<theta>) = (Var x))\n    \\<and> (\\<forall> x. (x \\<notin> (subst_codomain \\<sigma> V) \\<longrightarrow> (subst (Var x) \\<theta>) = (Var x)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite V; renaming \\<sigma> V\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<theta>.\n                         (\\<forall>x\\<in>V.\n                             Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> =\n                             Var x) \\<and>\n                         (\\<forall>x.\n                             x \\<notin> subst_codomain \\<sigma>\n   V \\<longrightarrow>\n                             Var x \\<lhd> \\<theta> = Var x)", "proof (induction rule: finite.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. renaming \\<sigma> {} \\<Longrightarrow>\n    \\<exists>\\<theta>.\n       (\\<forall>x\\<in>{}.\n           Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n       (\\<forall>x.\n           x \\<notin> subst_codomain \\<sigma> {} \\<longrightarrow>\n           Var x \\<lhd> \\<theta> = Var x)\n 2. \\<And>A a.\n       \\<lbrakk>finite A;\n        renaming \\<sigma> A \\<Longrightarrow>\n        \\<exists>\\<theta>.\n           (\\<forall>x\\<in>A.\n               Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n           (\\<forall>x.\n               x \\<notin> subst_codomain \\<sigma> A \\<longrightarrow>\n               Var x \\<lhd> \\<theta> = Var x);\n        renaming \\<sigma> (insert a A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<theta>.\n                            (\\<forall>x\\<in>insert a A.\n                                Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> =\n                                Var x) \\<and>\n                            (\\<forall>x.\n                                x \\<notin> subst_codomain \\<sigma>\n      (insert a A) \\<longrightarrow>\n                                Var x \\<lhd> \\<theta> = Var x)", "case emptyI"], ["proof (state)\nthis:\n  renaming \\<sigma> {}\n\ngoal (2 subgoals):\n 1. renaming \\<sigma> {} \\<Longrightarrow>\n    \\<exists>\\<theta>.\n       (\\<forall>x\\<in>{}.\n           Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n       (\\<forall>x.\n           x \\<notin> subst_codomain \\<sigma> {} \\<longrightarrow>\n           Var x \\<lhd> \\<theta> = Var x)\n 2. \\<And>A a.\n       \\<lbrakk>finite A;\n        renaming \\<sigma> A \\<Longrightarrow>\n        \\<exists>\\<theta>.\n           (\\<forall>x\\<in>A.\n               Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n           (\\<forall>x.\n               x \\<notin> subst_codomain \\<sigma> A \\<longrightarrow>\n               Var x \\<lhd> \\<theta> = Var x);\n        renaming \\<sigma> (insert a A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<theta>.\n                            (\\<forall>x\\<in>insert a A.\n                                Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> =\n                                Var x) \\<and>\n                            (\\<forall>x.\n                                x \\<notin> subst_codomain \\<sigma>\n      (insert a A) \\<longrightarrow>\n                                Var x \\<lhd> \\<theta> = Var x)", "let ?\\<theta> = \"[]\""], ["proof (state)\ngoal (2 subgoals):\n 1. renaming \\<sigma> {} \\<Longrightarrow>\n    \\<exists>\\<theta>.\n       (\\<forall>x\\<in>{}.\n           Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n       (\\<forall>x.\n           x \\<notin> subst_codomain \\<sigma> {} \\<longrightarrow>\n           Var x \\<lhd> \\<theta> = Var x)\n 2. \\<And>A a.\n       \\<lbrakk>finite A;\n        renaming \\<sigma> A \\<Longrightarrow>\n        \\<exists>\\<theta>.\n           (\\<forall>x\\<in>A.\n               Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n           (\\<forall>x.\n               x \\<notin> subst_codomain \\<sigma> A \\<longrightarrow>\n               Var x \\<lhd> \\<theta> = Var x);\n        renaming \\<sigma> (insert a A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<theta>.\n                            (\\<forall>x\\<in>insert a A.\n                                Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> =\n                                Var x) \\<and>\n                            (\\<forall>x.\n                                x \\<notin> subst_codomain \\<sigma>\n      (insert a A) \\<longrightarrow>\n                                Var x \\<lhd> \\<theta> = Var x)", "have i: \"(\\<forall> x \\<in> {}. (subst (subst (Var x) \\<sigma> ) ?\\<theta>) = (Var x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>{}. Var x \\<lhd> \\<sigma> \\<lhd> [] = Var x", "by auto"], ["proof (state)\nthis:\n  \\<forall>x\\<in>{}. Var x \\<lhd> \\<sigma> \\<lhd> [] = Var x\n\ngoal (2 subgoals):\n 1. renaming \\<sigma> {} \\<Longrightarrow>\n    \\<exists>\\<theta>.\n       (\\<forall>x\\<in>{}.\n           Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n       (\\<forall>x.\n           x \\<notin> subst_codomain \\<sigma> {} \\<longrightarrow>\n           Var x \\<lhd> \\<theta> = Var x)\n 2. \\<And>A a.\n       \\<lbrakk>finite A;\n        renaming \\<sigma> A \\<Longrightarrow>\n        \\<exists>\\<theta>.\n           (\\<forall>x\\<in>A.\n               Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n           (\\<forall>x.\n               x \\<notin> subst_codomain \\<sigma> A \\<longrightarrow>\n               Var x \\<lhd> \\<theta> = Var x);\n        renaming \\<sigma> (insert a A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<theta>.\n                            (\\<forall>x\\<in>insert a A.\n                                Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> =\n                                Var x) \\<and>\n                            (\\<forall>x.\n                                x \\<notin> subst_codomain \\<sigma>\n      (insert a A) \\<longrightarrow>\n                                Var x \\<lhd> \\<theta> = Var x)", "have ii: \"(\\<forall> x. (x \\<notin> (subst_codomain \\<sigma> {}) \\<longrightarrow> (subst (Var x) ?\\<theta>) = (Var x)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       x \\<notin> subst_codomain \\<sigma> {} \\<longrightarrow>\n       Var x \\<lhd> [] = Var x", "by auto"], ["proof (state)\nthis:\n  \\<forall>x.\n     x \\<notin> subst_codomain \\<sigma> {} \\<longrightarrow>\n     Var x \\<lhd> [] = Var x\n\ngoal (2 subgoals):\n 1. renaming \\<sigma> {} \\<Longrightarrow>\n    \\<exists>\\<theta>.\n       (\\<forall>x\\<in>{}.\n           Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n       (\\<forall>x.\n           x \\<notin> subst_codomain \\<sigma> {} \\<longrightarrow>\n           Var x \\<lhd> \\<theta> = Var x)\n 2. \\<And>A a.\n       \\<lbrakk>finite A;\n        renaming \\<sigma> A \\<Longrightarrow>\n        \\<exists>\\<theta>.\n           (\\<forall>x\\<in>A.\n               Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n           (\\<forall>x.\n               x \\<notin> subst_codomain \\<sigma> A \\<longrightarrow>\n               Var x \\<lhd> \\<theta> = Var x);\n        renaming \\<sigma> (insert a A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<theta>.\n                            (\\<forall>x\\<in>insert a A.\n                                Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> =\n                                Var x) \\<and>\n                            (\\<forall>x.\n                                x \\<notin> subst_codomain \\<sigma>\n      (insert a A) \\<longrightarrow>\n                                Var x \\<lhd> \\<theta> = Var x)", "from i ii"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>{}. Var x \\<lhd> \\<sigma> \\<lhd> [] = Var x\n  \\<forall>x.\n     x \\<notin> subst_codomain \\<sigma> {} \\<longrightarrow>\n     Var x \\<lhd> [] = Var x", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>{}. Var x \\<lhd> \\<sigma> \\<lhd> [] = Var x\n  \\<forall>x.\n     x \\<notin> subst_codomain \\<sigma> {} \\<longrightarrow>\n     Var x \\<lhd> [] = Var x\n\ngoal (1 subgoal):\n 1. \\<exists>\\<theta>.\n       (\\<forall>x\\<in>{}.\n           Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n       (\\<forall>x.\n           x \\<notin> subst_codomain \\<sigma> {} \\<longrightarrow>\n           Var x \\<lhd> \\<theta> = Var x)", "by metis"], ["proof (state)\nthis:\n  \\<exists>\\<theta>.\n     (\\<forall>x\\<in>{}.\n         Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n     (\\<forall>x.\n         x \\<notin> subst_codomain \\<sigma> {} \\<longrightarrow>\n         Var x \\<lhd> \\<theta> = Var x)\n\ngoal (1 subgoal):\n 1. \\<And>A a.\n       \\<lbrakk>finite A;\n        renaming \\<sigma> A \\<Longrightarrow>\n        \\<exists>\\<theta>.\n           (\\<forall>x\\<in>A.\n               Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n           (\\<forall>x.\n               x \\<notin> subst_codomain \\<sigma> A \\<longrightarrow>\n               Var x \\<lhd> \\<theta> = Var x);\n        renaming \\<sigma> (insert a A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<theta>.\n                            (\\<forall>x\\<in>insert a A.\n                                Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> =\n                                Var x) \\<and>\n                            (\\<forall>x.\n                                x \\<notin> subst_codomain \\<sigma>\n      (insert a A) \\<longrightarrow>\n                                Var x \\<lhd> \\<theta> = Var x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A a.\n       \\<lbrakk>finite A;\n        renaming \\<sigma> A \\<Longrightarrow>\n        \\<exists>\\<theta>.\n           (\\<forall>x\\<in>A.\n               Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n           (\\<forall>x.\n               x \\<notin> subst_codomain \\<sigma> A \\<longrightarrow>\n               Var x \\<lhd> \\<theta> = Var x);\n        renaming \\<sigma> (insert a A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<theta>.\n                            (\\<forall>x\\<in>insert a A.\n                                Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> =\n                                Var x) \\<and>\n                            (\\<forall>x.\n                                x \\<notin> subst_codomain \\<sigma>\n      (insert a A) \\<longrightarrow>\n                                Var x \\<lhd> \\<theta> = Var x)", "fix A :: \"'a set\" and a::'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A a.\n       \\<lbrakk>finite A;\n        renaming \\<sigma> A \\<Longrightarrow>\n        \\<exists>\\<theta>.\n           (\\<forall>x\\<in>A.\n               Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n           (\\<forall>x.\n               x \\<notin> subst_codomain \\<sigma> A \\<longrightarrow>\n               Var x \\<lhd> \\<theta> = Var x);\n        renaming \\<sigma> (insert a A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<theta>.\n                            (\\<forall>x\\<in>insert a A.\n                                Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> =\n                                Var x) \\<and>\n                            (\\<forall>x.\n                                x \\<notin> subst_codomain \\<sigma>\n      (insert a A) \\<longrightarrow>\n                                Var x \\<lhd> \\<theta> = Var x)", "assume \"finite A\""], ["proof (state)\nthis:\n  finite A\n\ngoal (1 subgoal):\n 1. \\<And>A a.\n       \\<lbrakk>finite A;\n        renaming \\<sigma> A \\<Longrightarrow>\n        \\<exists>\\<theta>.\n           (\\<forall>x\\<in>A.\n               Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n           (\\<forall>x.\n               x \\<notin> subst_codomain \\<sigma> A \\<longrightarrow>\n               Var x \\<lhd> \\<theta> = Var x);\n        renaming \\<sigma> (insert a A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<theta>.\n                            (\\<forall>x\\<in>insert a A.\n                                Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> =\n                                Var x) \\<and>\n                            (\\<forall>x.\n                                x \\<notin> subst_codomain \\<sigma>\n      (insert a A) \\<longrightarrow>\n                                Var x \\<lhd> \\<theta> = Var x)", "assume hyp_ind: \"renaming \\<sigma> A \\<Longrightarrow> \\<exists> \\<theta>. (\\<forall> x \\<in> A. (subst (subst (Var x) \\<sigma> ) \\<theta>) = (Var x))\n    \\<and> (\\<forall> x. (x \\<notin> (subst_codomain \\<sigma> A) \\<longrightarrow> (subst (Var x) \\<theta>) = (Var x)))\""], ["proof (state)\nthis:\n  renaming \\<sigma> A \\<Longrightarrow>\n  \\<exists>\\<theta>.\n     (\\<forall>x\\<in>A.\n         Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n     (\\<forall>x.\n         x \\<notin> subst_codomain \\<sigma> A \\<longrightarrow>\n         Var x \\<lhd> \\<theta> = Var x)\n\ngoal (1 subgoal):\n 1. \\<And>A a.\n       \\<lbrakk>finite A;\n        renaming \\<sigma> A \\<Longrightarrow>\n        \\<exists>\\<theta>.\n           (\\<forall>x\\<in>A.\n               Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n           (\\<forall>x.\n               x \\<notin> subst_codomain \\<sigma> A \\<longrightarrow>\n               Var x \\<lhd> \\<theta> = Var x);\n        renaming \\<sigma> (insert a A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<theta>.\n                            (\\<forall>x\\<in>insert a A.\n                                Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> =\n                                Var x) \\<and>\n                            (\\<forall>x.\n                                x \\<notin> subst_codomain \\<sigma>\n      (insert a A) \\<longrightarrow>\n                                Var x \\<lhd> \\<theta> = Var x)", "show \"renaming \\<sigma> (insert a A) \\<Longrightarrow> \\<exists> \\<theta>. (\\<forall> x \\<in>  (insert a A). (subst (subst (Var x) \\<sigma> ) \\<theta>) = (Var x))\n    \\<and> (\\<forall> x. (x \\<notin> (subst_codomain \\<sigma> (insert a A)) \\<longrightarrow> (subst (Var x) \\<theta>) = (Var x)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. renaming \\<sigma> (insert a A) \\<Longrightarrow>\n    \\<exists>\\<theta>.\n       (\\<forall>x\\<in>insert a A.\n           Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n       (\\<forall>x.\n           x \\<notin> subst_codomain \\<sigma> (insert a A) \\<longrightarrow>\n           Var x \\<lhd> \\<theta> = Var x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. renaming \\<sigma> (insert a A) \\<Longrightarrow>\n    \\<exists>\\<theta>.\n       (\\<forall>x\\<in>insert a A.\n           Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n       (\\<forall>x.\n           x \\<notin> subst_codomain \\<sigma> (insert a A) \\<longrightarrow>\n           Var x \\<lhd> \\<theta> = Var x)", "assume \"renaming \\<sigma> (insert a A)\""], ["proof (state)\nthis:\n  renaming \\<sigma> (insert a A)\n\ngoal (1 subgoal):\n 1. renaming \\<sigma> (insert a A) \\<Longrightarrow>\n    \\<exists>\\<theta>.\n       (\\<forall>x\\<in>insert a A.\n           Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n       (\\<forall>x.\n           x \\<notin> subst_codomain \\<sigma> (insert a A) \\<longrightarrow>\n           Var x \\<lhd> \\<theta> = Var x)", "show \"\\<exists> \\<theta>. (\\<forall> x \\<in>  (insert a A). (subst (subst (Var x) \\<sigma> ) \\<theta>) = (Var x))\n    \\<and> (\\<forall> x. (x \\<notin> (subst_codomain \\<sigma> (insert a A)) \\<longrightarrow> (subst (Var x) \\<theta>) = (Var x)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<theta>.\n       (\\<forall>x\\<in>insert a A.\n           Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n       (\\<forall>x.\n           x \\<notin> subst_codomain \\<sigma> (insert a A) \\<longrightarrow>\n           Var x \\<lhd> \\<theta> = Var x)", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>\\<theta>.\n       (\\<forall>x\\<in>insert a A.\n           Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n       (\\<forall>x.\n           x \\<notin> subst_codomain \\<sigma> (insert a A) \\<longrightarrow>\n           Var x \\<lhd> \\<theta> = Var x)\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>\\<theta>.\n       (\\<forall>x\\<in>insert a A.\n           Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n       (\\<forall>x.\n           x \\<notin> subst_codomain \\<sigma> (insert a A) \\<longrightarrow>\n           Var x \\<lhd> \\<theta> = Var x)", "assume \"a \\<in> A\""], ["proof (state)\nthis:\n  a \\<in> A\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>\\<theta>.\n       (\\<forall>x\\<in>insert a A.\n           Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n       (\\<forall>x.\n           x \\<notin> subst_codomain \\<sigma> (insert a A) \\<longrightarrow>\n           Var x \\<lhd> \\<theta> = Var x)\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>\\<theta>.\n       (\\<forall>x\\<in>insert a A.\n           Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n       (\\<forall>x.\n           x \\<notin> subst_codomain \\<sigma> (insert a A) \\<longrightarrow>\n           Var x \\<lhd> \\<theta> = Var x)", "from this"], ["proof (chain)\npicking this:\n  a \\<in> A", "have \"insert a A = A\""], ["proof (prove)\nusing this:\n  a \\<in> A\n\ngoal (1 subgoal):\n 1. insert a A = A", "by auto"], ["proof (state)\nthis:\n  insert a A = A\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>\\<theta>.\n       (\\<forall>x\\<in>insert a A.\n           Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n       (\\<forall>x.\n           x \\<notin> subst_codomain \\<sigma> (insert a A) \\<longrightarrow>\n           Var x \\<lhd> \\<theta> = Var x)\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>\\<theta>.\n       (\\<forall>x\\<in>insert a A.\n           Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n       (\\<forall>x.\n           x \\<notin> subst_codomain \\<sigma> (insert a A) \\<longrightarrow>\n           Var x \\<lhd> \\<theta> = Var x)", "from this and \\<open>renaming \\<sigma> (insert a A)\\<close> hyp_ind"], ["proof (chain)\npicking this:\n  insert a A = A\n  renaming \\<sigma> (insert a A)\n  renaming \\<sigma> A \\<Longrightarrow>\n  \\<exists>\\<theta>.\n     (\\<forall>x\\<in>A.\n         Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n     (\\<forall>x.\n         x \\<notin> subst_codomain \\<sigma> A \\<longrightarrow>\n         Var x \\<lhd> \\<theta> = Var x)", "show ?thesis"], ["proof (prove)\nusing this:\n  insert a A = A\n  renaming \\<sigma> (insert a A)\n  renaming \\<sigma> A \\<Longrightarrow>\n  \\<exists>\\<theta>.\n     (\\<forall>x\\<in>A.\n         Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n     (\\<forall>x.\n         x \\<notin> subst_codomain \\<sigma> A \\<longrightarrow>\n         Var x \\<lhd> \\<theta> = Var x)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<theta>.\n       (\\<forall>x\\<in>insert a A.\n           Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n       (\\<forall>x.\n           x \\<notin> subst_codomain \\<sigma> (insert a A) \\<longrightarrow>\n           Var x \\<lhd> \\<theta> = Var x)", "by metis"], ["proof (state)\nthis:\n  \\<exists>\\<theta>.\n     (\\<forall>x\\<in>insert a A.\n         Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n     (\\<forall>x.\n         x \\<notin> subst_codomain \\<sigma> (insert a A) \\<longrightarrow>\n         Var x \\<lhd> \\<theta> = Var x)\n\ngoal (1 subgoal):\n 1. a \\<notin> A \\<Longrightarrow>\n    \\<exists>\\<theta>.\n       (\\<forall>x\\<in>insert a A.\n           Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n       (\\<forall>x.\n           x \\<notin> subst_codomain \\<sigma> (insert a A) \\<longrightarrow>\n           Var x \\<lhd> \\<theta> = Var x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<notin> A \\<Longrightarrow>\n    \\<exists>\\<theta>.\n       (\\<forall>x\\<in>insert a A.\n           Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n       (\\<forall>x.\n           x \\<notin> subst_codomain \\<sigma> (insert a A) \\<longrightarrow>\n           Var x \\<lhd> \\<theta> = Var x)", "assume \"a \\<notin> A\""], ["proof (state)\nthis:\n  a \\<notin> A\n\ngoal (1 subgoal):\n 1. a \\<notin> A \\<Longrightarrow>\n    \\<exists>\\<theta>.\n       (\\<forall>x\\<in>insert a A.\n           Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n       (\\<forall>x.\n           x \\<notin> subst_codomain \\<sigma> (insert a A) \\<longrightarrow>\n           Var x \\<lhd> \\<theta> = Var x)", "from \\<open>renaming \\<sigma> (insert a A)\\<close>"], ["proof (chain)\npicking this:\n  renaming \\<sigma> (insert a A)", "have \"renaming \\<sigma> A\""], ["proof (prove)\nusing this:\n  renaming \\<sigma> (insert a A)\n\ngoal (1 subgoal):\n 1. renaming \\<sigma> A", "unfolding renaming_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>insert a A.\n     is_a_variable (Var x \\<lhd> \\<sigma>) \\<and>\n     (\\<forall>x y.\n         x \\<in> insert a A \\<longrightarrow>\n         y \\<in> insert a A \\<longrightarrow>\n         x \\<noteq> y \\<longrightarrow>\n         Var x \\<lhd> \\<sigma> \\<noteq> Var y \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>A.\n       is_a_variable (Var x \\<lhd> \\<sigma>) \\<and>\n       (\\<forall>x y.\n           x \\<in> A \\<longrightarrow>\n           y \\<in> A \\<longrightarrow>\n           x \\<noteq> y \\<longrightarrow>\n           Var x \\<lhd> \\<sigma> \\<noteq> Var y \\<lhd> \\<sigma>)", "by blast"], ["proof (state)\nthis:\n  renaming \\<sigma> A\n\ngoal (1 subgoal):\n 1. a \\<notin> A \\<Longrightarrow>\n    \\<exists>\\<theta>.\n       (\\<forall>x\\<in>insert a A.\n           Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n       (\\<forall>x.\n           x \\<notin> subst_codomain \\<sigma> (insert a A) \\<longrightarrow>\n           Var x \\<lhd> \\<theta> = Var x)", "from this and hyp_ind"], ["proof (chain)\npicking this:\n  renaming \\<sigma> A\n  renaming \\<sigma> A \\<Longrightarrow>\n  \\<exists>\\<theta>.\n     (\\<forall>x\\<in>A.\n         Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n     (\\<forall>x.\n         x \\<notin> subst_codomain \\<sigma> A \\<longrightarrow>\n         Var x \\<lhd> \\<theta> = Var x)", "obtain \\<theta> where i: \"(\\<forall> x \\<in> A. (subst (subst (Var x) \\<sigma> ) \\<theta>) = (Var x))\" and \n        ii:  \"(\\<forall> x. (x \\<notin> (subst_codomain \\<sigma> A) \\<longrightarrow> (subst (Var x) \\<theta>) = (Var x)))\""], ["proof (prove)\nusing this:\n  renaming \\<sigma> A\n  renaming \\<sigma> A \\<Longrightarrow>\n  \\<exists>\\<theta>.\n     (\\<forall>x\\<in>A.\n         Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n     (\\<forall>x.\n         x \\<notin> subst_codomain \\<sigma> A \\<longrightarrow>\n         Var x \\<lhd> \\<theta> = Var x)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<theta>.\n        \\<lbrakk>\\<forall>x\\<in>A.\n                    Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x;\n         \\<forall>x.\n            x \\<notin> subst_codomain \\<sigma> A \\<longrightarrow>\n            Var x \\<lhd> \\<theta> = Var x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  \\<forall>x\\<in>A. Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x\n  \\<forall>x.\n     x \\<notin> subst_codomain \\<sigma> A \\<longrightarrow>\n     Var x \\<lhd> \\<theta> = Var x\n\ngoal (1 subgoal):\n 1. a \\<notin> A \\<Longrightarrow>\n    \\<exists>\\<theta>.\n       (\\<forall>x\\<in>insert a A.\n           Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n       (\\<forall>x.\n           x \\<notin> subst_codomain \\<sigma> (insert a A) \\<longrightarrow>\n           Var x \\<lhd> \\<theta> = Var x)", "from \\<open>renaming \\<sigma> (insert a A)\\<close>"], ["proof (chain)\npicking this:\n  renaming \\<sigma> (insert a A)", "have \"is_a_variable (subst (Var a) \\<sigma>)\""], ["proof (prove)\nusing this:\n  renaming \\<sigma> (insert a A)\n\ngoal (1 subgoal):\n 1. is_a_variable (Var a \\<lhd> \\<sigma>)", "unfolding renaming_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>insert a A.\n     is_a_variable (Var x \\<lhd> \\<sigma>) \\<and>\n     (\\<forall>x y.\n         x \\<in> insert a A \\<longrightarrow>\n         y \\<in> insert a A \\<longrightarrow>\n         x \\<noteq> y \\<longrightarrow>\n         Var x \\<lhd> \\<sigma> \\<noteq> Var y \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. is_a_variable (Var a \\<lhd> \\<sigma>)", "by blast"], ["proof (state)\nthis:\n  is_a_variable (Var a \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. a \\<notin> A \\<Longrightarrow>\n    \\<exists>\\<theta>.\n       (\\<forall>x\\<in>insert a A.\n           Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n       (\\<forall>x.\n           x \\<notin> subst_codomain \\<sigma> (insert a A) \\<longrightarrow>\n           Var x \\<lhd> \\<theta> = Var x)", "from this"], ["proof (chain)\npicking this:\n  is_a_variable (Var a \\<lhd> \\<sigma>)", "obtain b where \"(subst (Var a) \\<sigma>) = (Var b)\""], ["proof (prove)\nusing this:\n  is_a_variable (Var a \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        Var a \\<lhd> \\<sigma> = Var b \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using is_a_variable.elims(2)"], ["proof (prove)\nusing this:\n  is_a_variable (Var a \\<lhd> \\<sigma>)\n  \\<lbrakk>is_a_variable ?x;\n   \\<And>x. ?x = Var x \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        Var a \\<lhd> \\<sigma> = Var b \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  Var a \\<lhd> \\<sigma> = Var b\n\ngoal (1 subgoal):\n 1. a \\<notin> A \\<Longrightarrow>\n    \\<exists>\\<theta>.\n       (\\<forall>x\\<in>insert a A.\n           Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n       (\\<forall>x.\n           x \\<notin> subst_codomain \\<sigma> (insert a A) \\<longrightarrow>\n           Var x \\<lhd> \\<theta> = Var x)", "let ?\\<eta> = \"(b,(Var a)) # \\<theta>\""], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<notin> A \\<Longrightarrow>\n    \\<exists>\\<theta>.\n       (\\<forall>x\\<in>insert a A.\n           Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n       (\\<forall>x.\n           x \\<notin> subst_codomain \\<sigma> (insert a A) \\<longrightarrow>\n           Var x \\<lhd> \\<theta> = Var x)", "have i': \"(\\<forall> x \\<in>  (insert a A). (subst (subst (Var x) \\<sigma> ) ?\\<eta>) = (Var x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>insert a A.\n       Var x \\<lhd> \\<sigma> \\<lhd> (b, Var a) # \\<theta> = Var x", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> insert a A \\<Longrightarrow>\n       Var x \\<lhd> \\<sigma> \\<lhd> (b, Var a) # \\<theta> = Var x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> insert a A \\<Longrightarrow>\n       Var x \\<lhd> \\<sigma> \\<lhd> (b, Var a) # \\<theta> = Var x", "assume \"x \\<in> (insert a A)\""], ["proof (state)\nthis:\n  x \\<in> insert a A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> insert a A \\<Longrightarrow>\n       Var x \\<lhd> \\<sigma> \\<lhd> (b, Var a) # \\<theta> = Var x", "show \"(subst (subst (Var x) \\<sigma> ) ?\\<eta>) = (Var x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Var x \\<lhd> \\<sigma> \\<lhd> (b, Var a) # \\<theta> = Var x", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    Var x \\<lhd> \\<sigma> \\<lhd> (b, Var a) # \\<theta> = Var x\n 2. \\<not> ?P \\<Longrightarrow>\n    Var x \\<lhd> \\<sigma> \\<lhd> (b, Var a) # \\<theta> = Var x", "assume \"x = a\""], ["proof (state)\nthis:\n  x = a\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    Var x \\<lhd> \\<sigma> \\<lhd> (b, Var a) # \\<theta> = Var x\n 2. \\<not> ?P \\<Longrightarrow>\n    Var x \\<lhd> \\<sigma> \\<lhd> (b, Var a) # \\<theta> = Var x", "from this"], ["proof (chain)\npicking this:\n  x = a", "have \"(subst  (Var b) ( (b,(Var a)) # Nil)) = (Var a)\""], ["proof (prove)\nusing this:\n  x = a\n\ngoal (1 subgoal):\n 1. Var b \\<lhd> [(b, Var a)] = Var a", "by simp"], ["proof (state)\nthis:\n  Var b \\<lhd> [(b, Var a)] = Var a\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    Var x \\<lhd> \\<sigma> \\<lhd> (b, Var a) # \\<theta> = Var x\n 2. \\<not> ?P \\<Longrightarrow>\n    Var x \\<lhd> \\<sigma> \\<lhd> (b, Var a) # \\<theta> = Var x", "have \"b \\<notin> (subst_codomain \\<sigma> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<notin> subst_codomain \\<sigma> A", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. b \\<in> subst_codomain \\<sigma> A \\<Longrightarrow> False", "assume \"b \\<in> (subst_codomain \\<sigma> A)\""], ["proof (state)\nthis:\n  b \\<in> subst_codomain \\<sigma> A\n\ngoal (1 subgoal):\n 1. b \\<in> subst_codomain \\<sigma> A \\<Longrightarrow> False", "from this"], ["proof (chain)\npicking this:\n  b \\<in> subst_codomain \\<sigma> A", "have \"\\<exists>y. (subst (Var y) \\<sigma>) = (Var b) \\<and> (y \\<in> A)\""], ["proof (prove)\nusing this:\n  b \\<in> subst_codomain \\<sigma> A\n\ngoal (1 subgoal):\n 1. \\<exists>y. Var y \\<lhd> \\<sigma> = Var b \\<and> y \\<in> A", "unfolding subst_codomain_def"], ["proof (prove)\nusing this:\n  b \\<in> {x. \\<exists>y. Var y \\<lhd> \\<sigma> = Var x \\<and> y \\<in> A}\n\ngoal (1 subgoal):\n 1. \\<exists>y. Var y \\<lhd> \\<sigma> = Var b \\<and> y \\<in> A", "by force"], ["proof (state)\nthis:\n  \\<exists>y. Var y \\<lhd> \\<sigma> = Var b \\<and> y \\<in> A\n\ngoal (1 subgoal):\n 1. b \\<in> subst_codomain \\<sigma> A \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>y. Var y \\<lhd> \\<sigma> = Var b \\<and> y \\<in> A", "obtain a' where \"a' \\<in> A\" and \"subst (Var a') \\<sigma> = (Var b)\""], ["proof (prove)\nusing this:\n  \\<exists>y. Var y \\<lhd> \\<sigma> = Var b \\<and> y \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<And>a'.\n        \\<lbrakk>a' \\<in> A; Var a' \\<lhd> \\<sigma> = Var b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  a' \\<in> A\n  Var a' \\<lhd> \\<sigma> = Var b\n\ngoal (1 subgoal):\n 1. b \\<in> subst_codomain \\<sigma> A \\<Longrightarrow> False", "from \\<open>a' \\<in> A\\<close> and \\<open>a \\<notin> A\\<close>"], ["proof (chain)\npicking this:\n  a' \\<in> A\n  a \\<notin> A", "have \"a \\<noteq> a'\""], ["proof (prove)\nusing this:\n  a' \\<in> A\n  a \\<notin> A\n\ngoal (1 subgoal):\n 1. a \\<noteq> a'", "by auto"], ["proof (state)\nthis:\n  a \\<noteq> a'\n\ngoal (1 subgoal):\n 1. b \\<in> subst_codomain \\<sigma> A \\<Longrightarrow> False", "have \"a \\<in> (insert a A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> insert a A", "by auto"], ["proof (state)\nthis:\n  a \\<in> insert a A\n\ngoal (1 subgoal):\n 1. b \\<in> subst_codomain \\<sigma> A \\<Longrightarrow> False", "from \\<open>a \\<noteq> a'\\<close> and \\<open>a' \\<in> A\\<close> and \\<open>a \\<in> (insert a A)\\<close> and \\<open>renaming \\<sigma> (insert a A)\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> a'\n  a' \\<in> A\n  a \\<in> insert a A\n  renaming \\<sigma> (insert a A)", "have \"(subst (Var a) \\<sigma> \\<noteq> (subst (Var a') \\<sigma>))\""], ["proof (prove)\nusing this:\n  a \\<noteq> a'\n  a' \\<in> A\n  a \\<in> insert a A\n  renaming \\<sigma> (insert a A)\n\ngoal (1 subgoal):\n 1. Var a \\<lhd> \\<sigma> \\<noteq> Var a' \\<lhd> \\<sigma>", "unfolding renaming_def"], ["proof (prove)\nusing this:\n  a \\<noteq> a'\n  a' \\<in> A\n  a \\<in> insert a A\n  \\<forall>x\\<in>insert a A.\n     is_a_variable (Var x \\<lhd> \\<sigma>) \\<and>\n     (\\<forall>x y.\n         x \\<in> insert a A \\<longrightarrow>\n         y \\<in> insert a A \\<longrightarrow>\n         x \\<noteq> y \\<longrightarrow>\n         Var x \\<lhd> \\<sigma> \\<noteq> Var y \\<lhd> \\<sigma>)\n\ngoal (1 subgoal):\n 1. Var a \\<lhd> \\<sigma> \\<noteq> Var a' \\<lhd> \\<sigma>", "by blast"], ["proof (state)\nthis:\n  Var a \\<lhd> \\<sigma> \\<noteq> Var a' \\<lhd> \\<sigma>\n\ngoal (1 subgoal):\n 1. b \\<in> subst_codomain \\<sigma> A \\<Longrightarrow> False", "from this and \\<open>subst (Var a') \\<sigma> = (Var b)\\<close> \\<open>(subst (Var a) \\<sigma>) = (Var b)\\<close>"], ["proof (chain)\npicking this:\n  Var a \\<lhd> \\<sigma> \\<noteq> Var a' \\<lhd> \\<sigma>\n  Var a' \\<lhd> \\<sigma> = Var b\n  Var a \\<lhd> \\<sigma> = Var b", "show False"], ["proof (prove)\nusing this:\n  Var a \\<lhd> \\<sigma> \\<noteq> Var a' \\<lhd> \\<sigma>\n  Var a' \\<lhd> \\<sigma> = Var b\n  Var a \\<lhd> \\<sigma> = Var b\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  b \\<notin> subst_codomain \\<sigma> A\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    Var x \\<lhd> \\<sigma> \\<lhd> (b, Var a) # \\<theta> = Var x\n 2. \\<not> ?P \\<Longrightarrow>\n    Var x \\<lhd> \\<sigma> \\<lhd> (b, Var a) # \\<theta> = Var x", "from this and ii"], ["proof (chain)\npicking this:\n  b \\<notin> subst_codomain \\<sigma> A\n  \\<forall>x.\n     x \\<notin> subst_codomain \\<sigma> A \\<longrightarrow>\n     Var x \\<lhd> \\<theta> = Var x", "have \"(subst (Var b) \\<theta>) = (Var b)\""], ["proof (prove)\nusing this:\n  b \\<notin> subst_codomain \\<sigma> A\n  \\<forall>x.\n     x \\<notin> subst_codomain \\<sigma> A \\<longrightarrow>\n     Var x \\<lhd> \\<theta> = Var x\n\ngoal (1 subgoal):\n 1. Var b \\<lhd> \\<theta> = Var b", "by auto"], ["proof (state)\nthis:\n  Var b \\<lhd> \\<theta> = Var b\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    Var x \\<lhd> \\<sigma> \\<lhd> (b, Var a) # \\<theta> = Var x\n 2. \\<not> ?P \\<Longrightarrow>\n    Var x \\<lhd> \\<sigma> \\<lhd> (b, Var a) # \\<theta> = Var x", "from this and \\<open>x = a\\<close> \\<open>(subst (Var a) \\<sigma>) = (Var b)\\<close>\n            \\<open>(subst  (Var b) ( (b,(Var a)) # Nil)) = (Var a)\\<close>"], ["proof (chain)\npicking this:\n  Var b \\<lhd> \\<theta> = Var b\n  x = a\n  Var a \\<lhd> \\<sigma> = Var b\n  Var b \\<lhd> [(b, Var a)] = Var a", "show \"(subst (subst (Var x) \\<sigma> ) ?\\<eta>) = (Var x)\""], ["proof (prove)\nusing this:\n  Var b \\<lhd> \\<theta> = Var b\n  x = a\n  Var a \\<lhd> \\<sigma> = Var b\n  Var b \\<lhd> [(b, Var a)] = Var a\n\ngoal (1 subgoal):\n 1. Var x \\<lhd> \\<sigma> \\<lhd> (b, Var a) # \\<theta> = Var x", "by simp"], ["proof (state)\nthis:\n  Var x \\<lhd> \\<sigma> \\<lhd> (b, Var a) # \\<theta> = Var x\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    Var x \\<lhd> \\<sigma> \\<lhd> (b, Var a) # \\<theta> = Var x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    Var x \\<lhd> \\<sigma> \\<lhd> (b, Var a) # \\<theta> = Var x", "assume \"x \\<noteq> a\""], ["proof (state)\nthis:\n  x \\<noteq> a\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    Var x \\<lhd> \\<sigma> \\<lhd> (b, Var a) # \\<theta> = Var x", "from this and \\<open>x \\<in> insert a A\\<close>"], ["proof (chain)\npicking this:\n  x \\<noteq> a\n  x \\<in> insert a A", "obtain \"x \\<in> A\""], ["proof (prove)\nusing this:\n  x \\<noteq> a\n  x \\<in> insert a A\n\ngoal (1 subgoal):\n 1. (x \\<in> A \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    Var x \\<lhd> \\<sigma> \\<lhd> (b, Var a) # \\<theta> = Var x", "from this i"], ["proof (chain)\npicking this:\n  x \\<in> A\n  \\<forall>x\\<in>A. Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x", "have \"(subst (subst (Var x) \\<sigma> ) \\<theta>) = (Var x)\""], ["proof (prove)\nusing this:\n  x \\<in> A\n  \\<forall>x\\<in>A. Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x\n\ngoal (1 subgoal):\n 1. Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x", "by auto"], ["proof (state)\nthis:\n  Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    Var x \\<lhd> \\<sigma> \\<lhd> (b, Var a) # \\<theta> = Var x", "then"], ["proof (chain)\npicking this:\n  Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x", "show \"(subst (subst (Var x) \\<sigma> ) ?\\<eta>) = (Var x)\""], ["proof (prove)\nusing this:\n  Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x\n\ngoal (1 subgoal):\n 1. Var x \\<lhd> \\<sigma> \\<lhd> (b, Var a) # \\<theta> = Var x", "by (metis \\<open>subst (Var a) \\<sigma> = Var b\\<close> \\<open>renaming \\<sigma> (insert a A)\\<close> \n                \\<open>x \\<in> insert a A\\<close> \\<open>x \\<noteq> a\\<close> insertI1 is_a_variable.elims(2) \n                occs.simps(1) renaming_def repl_invariance vars_iff_occseq)"], ["proof (state)\nthis:\n  Var x \\<lhd> \\<sigma> \\<lhd> (b, Var a) # \\<theta> = Var x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Var x \\<lhd> \\<sigma> \\<lhd> (b, Var a) # \\<theta> = Var x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x\\<in>insert a A.\n     Var x \\<lhd> \\<sigma> \\<lhd> (b, Var a) # \\<theta> = Var x\n\ngoal (1 subgoal):\n 1. a \\<notin> A \\<Longrightarrow>\n    \\<exists>\\<theta>.\n       (\\<forall>x\\<in>insert a A.\n           Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n       (\\<forall>x.\n           x \\<notin> subst_codomain \\<sigma> (insert a A) \\<longrightarrow>\n           Var x \\<lhd> \\<theta> = Var x)", "have ii': \"(\\<forall> x. (x \\<notin> (subst_codomain \\<sigma> (insert a A)) \\<longrightarrow> (subst (Var x) ?\\<eta>) = (Var x)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       x \\<notin> subst_codomain \\<sigma> (insert a A) \\<longrightarrow>\n       Var x \\<lhd> (b, Var a) # \\<theta> = Var x", "proof ((rule allI),(rule impI))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<notin> subst_codomain \\<sigma> (insert a A) \\<Longrightarrow>\n       Var x \\<lhd> (b, Var a) # \\<theta> = Var x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<notin> subst_codomain \\<sigma> (insert a A) \\<Longrightarrow>\n       Var x \\<lhd> (b, Var a) # \\<theta> = Var x", "assume \"x \\<notin> subst_codomain \\<sigma> (insert a A)\""], ["proof (state)\nthis:\n  x \\<notin> subst_codomain \\<sigma> (insert a A)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<notin> subst_codomain \\<sigma> (insert a A) \\<Longrightarrow>\n       Var x \\<lhd> (b, Var a) # \\<theta> = Var x", "from this \\<open>(subst (Var a) \\<sigma>) = (Var b)\\<close>"], ["proof (chain)\npicking this:\n  x \\<notin> subst_codomain \\<sigma> (insert a A)\n  Var a \\<lhd> \\<sigma> = Var b", "have \"x\\<noteq> b\""], ["proof (prove)\nusing this:\n  x \\<notin> subst_codomain \\<sigma> (insert a A)\n  Var a \\<lhd> \\<sigma> = Var b\n\ngoal (1 subgoal):\n 1. x \\<noteq> b", "unfolding subst_codomain_def"], ["proof (prove)\nusing this:\n  x \\<notin> {x. \\<exists>y.\n                    Var y \\<lhd> \\<sigma> = Var x \\<and> y \\<in> insert a A}\n  Var a \\<lhd> \\<sigma> = Var b\n\ngoal (1 subgoal):\n 1. x \\<noteq> b", "by auto"], ["proof (state)\nthis:\n  x \\<noteq> b\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<notin> subst_codomain \\<sigma> (insert a A) \\<Longrightarrow>\n       Var x \\<lhd> (b, Var a) # \\<theta> = Var x", "from this"], ["proof (chain)\npicking this:\n  x \\<noteq> b", "have \"(subst (Var x) ?\\<eta>) = (subst (Var x) \\<theta>)\""], ["proof (prove)\nusing this:\n  x \\<noteq> b\n\ngoal (1 subgoal):\n 1. Var x \\<lhd> (b, Var a) # \\<theta> = Var x \\<lhd> \\<theta>", "by auto"], ["proof (state)\nthis:\n  Var x \\<lhd> (b, Var a) # \\<theta> = Var x \\<lhd> \\<theta>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<notin> subst_codomain \\<sigma> (insert a A) \\<Longrightarrow>\n       Var x \\<lhd> (b, Var a) # \\<theta> = Var x", "from \\<open>x \\<notin> subst_codomain \\<sigma> (insert a A)\\<close>"], ["proof (chain)\npicking this:\n  x \\<notin> subst_codomain \\<sigma> (insert a A)", "have \"x \\<notin> (subst_codomain \\<sigma> A)\""], ["proof (prove)\nusing this:\n  x \\<notin> subst_codomain \\<sigma> (insert a A)\n\ngoal (1 subgoal):\n 1. x \\<notin> subst_codomain \\<sigma> A", "unfolding subst_codomain_def"], ["proof (prove)\nusing this:\n  x \\<notin> {x. \\<exists>y.\n                    Var y \\<lhd> \\<sigma> = Var x \\<and> y \\<in> insert a A}\n\ngoal (1 subgoal):\n 1. x \\<notin> {x. \\<exists>y.\n                      Var y \\<lhd> \\<sigma> = Var x \\<and> y \\<in> A}", "by auto"], ["proof (state)\nthis:\n  x \\<notin> subst_codomain \\<sigma> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<notin> subst_codomain \\<sigma> (insert a A) \\<Longrightarrow>\n       Var x \\<lhd> (b, Var a) # \\<theta> = Var x", "from this and ii"], ["proof (chain)\npicking this:\n  x \\<notin> subst_codomain \\<sigma> A\n  \\<forall>x.\n     x \\<notin> subst_codomain \\<sigma> A \\<longrightarrow>\n     Var x \\<lhd> \\<theta> = Var x", "have \"(subst (Var x) \\<theta>) = (Var x)\""], ["proof (prove)\nusing this:\n  x \\<notin> subst_codomain \\<sigma> A\n  \\<forall>x.\n     x \\<notin> subst_codomain \\<sigma> A \\<longrightarrow>\n     Var x \\<lhd> \\<theta> = Var x\n\ngoal (1 subgoal):\n 1. Var x \\<lhd> \\<theta> = Var x", "by auto"], ["proof (state)\nthis:\n  Var x \\<lhd> \\<theta> = Var x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<notin> subst_codomain \\<sigma> (insert a A) \\<Longrightarrow>\n       Var x \\<lhd> (b, Var a) # \\<theta> = Var x", "from \\<open>(subst (Var x) ?\\<eta>) = (subst (Var x) \\<theta>)\\<close> \n          and \\<open>(subst (Var x) \\<theta>) = (Var x)\\<close>"], ["proof (chain)\npicking this:\n  Var x \\<lhd> (b, Var a) # \\<theta> = Var x \\<lhd> \\<theta>\n  Var x \\<lhd> \\<theta> = Var x", "show \"(subst (Var x) ?\\<eta>) = (Var x)\""], ["proof (prove)\nusing this:\n  Var x \\<lhd> (b, Var a) # \\<theta> = Var x \\<lhd> \\<theta>\n  Var x \\<lhd> \\<theta> = Var x\n\ngoal (1 subgoal):\n 1. Var x \\<lhd> (b, Var a) # \\<theta> = Var x", "by auto"], ["proof (state)\nthis:\n  Var x \\<lhd> (b, Var a) # \\<theta> = Var x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x.\n     x \\<notin> subst_codomain \\<sigma> (insert a A) \\<longrightarrow>\n     Var x \\<lhd> (b, Var a) # \\<theta> = Var x\n\ngoal (1 subgoal):\n 1. a \\<notin> A \\<Longrightarrow>\n    \\<exists>\\<theta>.\n       (\\<forall>x\\<in>insert a A.\n           Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n       (\\<forall>x.\n           x \\<notin> subst_codomain \\<sigma> (insert a A) \\<longrightarrow>\n           Var x \\<lhd> \\<theta> = Var x)", "from i' ii'"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>insert a A.\n     Var x \\<lhd> \\<sigma> \\<lhd> (b, Var a) # \\<theta> = Var x\n  \\<forall>x.\n     x \\<notin> subst_codomain \\<sigma> (insert a A) \\<longrightarrow>\n     Var x \\<lhd> (b, Var a) # \\<theta> = Var x", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>insert a A.\n     Var x \\<lhd> \\<sigma> \\<lhd> (b, Var a) # \\<theta> = Var x\n  \\<forall>x.\n     x \\<notin> subst_codomain \\<sigma> (insert a A) \\<longrightarrow>\n     Var x \\<lhd> (b, Var a) # \\<theta> = Var x\n\ngoal (1 subgoal):\n 1. \\<exists>\\<theta>.\n       (\\<forall>x\\<in>insert a A.\n           Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n       (\\<forall>x.\n           x \\<notin> subst_codomain \\<sigma> (insert a A) \\<longrightarrow>\n           Var x \\<lhd> \\<theta> = Var x)", "by auto"], ["proof (state)\nthis:\n  \\<exists>\\<theta>.\n     (\\<forall>x\\<in>insert a A.\n         Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n     (\\<forall>x.\n         x \\<notin> subst_codomain \\<sigma> (insert a A) \\<longrightarrow>\n         Var x \\<lhd> \\<theta> = Var x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>\\<theta>.\n     (\\<forall>x\\<in>insert a A.\n         Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n     (\\<forall>x.\n         x \\<notin> subst_codomain \\<sigma> (insert a A) \\<longrightarrow>\n         Var x \\<lhd> \\<theta> = Var x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  renaming \\<sigma> (insert a A) \\<Longrightarrow>\n  \\<exists>\\<theta>.\n     (\\<forall>x\\<in>insert a A.\n         Var x \\<lhd> \\<sigma> \\<lhd> \\<theta> = Var x) \\<and>\n     (\\<forall>x.\n         x \\<notin> subst_codomain \\<sigma> (insert a A) \\<longrightarrow>\n         Var x \\<lhd> \\<theta> = Var x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma renaming_exists:\n  assumes \"\\<not> finite (Vars :: ('a set))\"\n  shows \"finite V \\<Longrightarrow> (\\<forall>V'::'a set. finite V' \\<longrightarrow> (\\<exists>\\<eta>. ((renaming \\<eta> V) \\<and> ((subst_codomain \\<eta> V) \\<inter> V') = {})))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite V \\<Longrightarrow>\n    \\<forall>V'.\n       finite V' \\<longrightarrow>\n       (\\<exists>\\<eta>.\n           renaming \\<eta> V \\<and>\n           subst_codomain \\<eta> V \\<inter> V' = {})", "proof (induction rule: finite.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>V'.\n       finite V' \\<longrightarrow>\n       (\\<exists>\\<eta>.\n           renaming \\<eta> {} \\<and>\n           subst_codomain \\<eta> {} \\<inter> V' = {})\n 2. \\<And>A a.\n       \\<lbrakk>finite A;\n        \\<forall>V'.\n           finite V' \\<longrightarrow>\n           (\\<exists>\\<eta>.\n               renaming \\<eta> A \\<and>\n               subst_codomain \\<eta> A \\<inter> V' = {})\\<rbrakk>\n       \\<Longrightarrow> \\<forall>V'.\n                            finite V' \\<longrightarrow>\n                            (\\<exists>\\<eta>.\n                                renaming \\<eta> (insert a A) \\<and>\n                                subst_codomain \\<eta> (insert a A) \\<inter>\n                                V' =\n                                {})", "case emptyI"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<forall>V'.\n       finite V' \\<longrightarrow>\n       (\\<exists>\\<eta>.\n           renaming \\<eta> {} \\<and>\n           subst_codomain \\<eta> {} \\<inter> V' = {})\n 2. \\<And>A a.\n       \\<lbrakk>finite A;\n        \\<forall>V'.\n           finite V' \\<longrightarrow>\n           (\\<exists>\\<eta>.\n               renaming \\<eta> A \\<and>\n               subst_codomain \\<eta> A \\<inter> V' = {})\\<rbrakk>\n       \\<Longrightarrow> \\<forall>V'.\n                            finite V' \\<longrightarrow>\n                            (\\<exists>\\<eta>.\n                                renaming \\<eta> (insert a A) \\<and>\n                                subst_codomain \\<eta> (insert a A) \\<inter>\n                                V' =\n                                {})", "let ?\\<eta> = \"[]\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>V'.\n       finite V' \\<longrightarrow>\n       (\\<exists>\\<eta>.\n           renaming \\<eta> {} \\<and>\n           subst_codomain \\<eta> {} \\<inter> V' = {})\n 2. \\<And>A a.\n       \\<lbrakk>finite A;\n        \\<forall>V'.\n           finite V' \\<longrightarrow>\n           (\\<exists>\\<eta>.\n               renaming \\<eta> A \\<and>\n               subst_codomain \\<eta> A \\<inter> V' = {})\\<rbrakk>\n       \\<Longrightarrow> \\<forall>V'.\n                            finite V' \\<longrightarrow>\n                            (\\<exists>\\<eta>.\n                                renaming \\<eta> (insert a A) \\<and>\n                                subst_codomain \\<eta> (insert a A) \\<inter>\n                                V' =\n                                {})", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>V'.\n       finite V' \\<longrightarrow>\n       (\\<exists>\\<eta>.\n           renaming \\<eta> {} \\<and>\n           subst_codomain \\<eta> {} \\<inter> V' = {})", "unfolding renaming_def subst_codomain_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>V'.\n       finite V' \\<longrightarrow>\n       (\\<exists>\\<eta>.\n           (\\<forall>x\\<in>{}.\n               is_a_variable (Var x \\<lhd> \\<eta>) \\<and>\n               (\\<forall>x y.\n                   x \\<in> {} \\<longrightarrow>\n                   y \\<in> {} \\<longrightarrow>\n                   x \\<noteq> y \\<longrightarrow>\n                   Var x \\<lhd> \\<eta> \\<noteq> Var y \\<lhd> \\<eta>)) \\<and>\n           {x. \\<exists>y.\n                  Var y \\<lhd> \\<eta> = Var x \\<and> y \\<in> {}} \\<inter>\n           V' =\n           {})", "by auto"], ["proof (state)\nthis:\n  \\<forall>V'.\n     finite V' \\<longrightarrow>\n     (\\<exists>\\<eta>.\n         renaming \\<eta> {} \\<and>\n         subst_codomain \\<eta> {} \\<inter> V' = {})\n\ngoal (1 subgoal):\n 1. \\<And>A a.\n       \\<lbrakk>finite A;\n        \\<forall>V'.\n           finite V' \\<longrightarrow>\n           (\\<exists>\\<eta>.\n               renaming \\<eta> A \\<and>\n               subst_codomain \\<eta> A \\<inter> V' = {})\\<rbrakk>\n       \\<Longrightarrow> \\<forall>V'.\n                            finite V' \\<longrightarrow>\n                            (\\<exists>\\<eta>.\n                                renaming \\<eta> (insert a A) \\<and>\n                                subst_codomain \\<eta> (insert a A) \\<inter>\n                                V' =\n                                {})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A a.\n       \\<lbrakk>finite A;\n        \\<forall>V'.\n           finite V' \\<longrightarrow>\n           (\\<exists>\\<eta>.\n               renaming \\<eta> A \\<and>\n               subst_codomain \\<eta> A \\<inter> V' = {})\\<rbrakk>\n       \\<Longrightarrow> \\<forall>V'.\n                            finite V' \\<longrightarrow>\n                            (\\<exists>\\<eta>.\n                                renaming \\<eta> (insert a A) \\<and>\n                                subst_codomain \\<eta> (insert a A) \\<inter>\n                                V' =\n                                {})", "fix A :: \"'a set\" and a::'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A a.\n       \\<lbrakk>finite A;\n        \\<forall>V'.\n           finite V' \\<longrightarrow>\n           (\\<exists>\\<eta>.\n               renaming \\<eta> A \\<and>\n               subst_codomain \\<eta> A \\<inter> V' = {})\\<rbrakk>\n       \\<Longrightarrow> \\<forall>V'.\n                            finite V' \\<longrightarrow>\n                            (\\<exists>\\<eta>.\n                                renaming \\<eta> (insert a A) \\<and>\n                                subst_codomain \\<eta> (insert a A) \\<inter>\n                                V' =\n                                {})", "assume \"finite A\""], ["proof (state)\nthis:\n  finite A\n\ngoal (1 subgoal):\n 1. \\<And>A a.\n       \\<lbrakk>finite A;\n        \\<forall>V'.\n           finite V' \\<longrightarrow>\n           (\\<exists>\\<eta>.\n               renaming \\<eta> A \\<and>\n               subst_codomain \\<eta> A \\<inter> V' = {})\\<rbrakk>\n       \\<Longrightarrow> \\<forall>V'.\n                            finite V' \\<longrightarrow>\n                            (\\<exists>\\<eta>.\n                                renaming \\<eta> (insert a A) \\<and>\n                                subst_codomain \\<eta> (insert a A) \\<inter>\n                                V' =\n                                {})", "assume hyp_ind: \"\\<forall>V' :: 'a set. finite V' \\<longrightarrow> (\\<exists>\\<eta>. renaming \\<eta> A \\<and> subst_codomain \\<eta> A \\<inter> V' = {})\""], ["proof (state)\nthis:\n  \\<forall>V'.\n     finite V' \\<longrightarrow>\n     (\\<exists>\\<eta>.\n         renaming \\<eta> A \\<and> subst_codomain \\<eta> A \\<inter> V' = {})\n\ngoal (1 subgoal):\n 1. \\<And>A a.\n       \\<lbrakk>finite A;\n        \\<forall>V'.\n           finite V' \\<longrightarrow>\n           (\\<exists>\\<eta>.\n               renaming \\<eta> A \\<and>\n               subst_codomain \\<eta> A \\<inter> V' = {})\\<rbrakk>\n       \\<Longrightarrow> \\<forall>V'.\n                            finite V' \\<longrightarrow>\n                            (\\<exists>\\<eta>.\n                                renaming \\<eta> (insert a A) \\<and>\n                                subst_codomain \\<eta> (insert a A) \\<inter>\n                                V' =\n                                {})", "show \"\\<forall>V':: 'a set. finite V' \\<longrightarrow> (\\<exists>\\<eta>. renaming \\<eta> (insert a A) \\<and> subst_codomain \\<eta> (insert a A) \\<inter> V' = {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>V'.\n       finite V' \\<longrightarrow>\n       (\\<exists>\\<eta>.\n           renaming \\<eta> (insert a A) \\<and>\n           subst_codomain \\<eta> (insert a A) \\<inter> V' = {})", "proof ((rule allI),(rule impI))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>V'.\n       finite V' \\<Longrightarrow>\n       \\<exists>\\<eta>.\n          renaming \\<eta> (insert a A) \\<and>\n          subst_codomain \\<eta> (insert a A) \\<inter> V' = {}", "fix V':: \"'a set\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>V'.\n       finite V' \\<Longrightarrow>\n       \\<exists>\\<eta>.\n          renaming \\<eta> (insert a A) \\<and>\n          subst_codomain \\<eta> (insert a A) \\<inter> V' = {}", "assume \"finite V'\""], ["proof (state)\nthis:\n  finite V'\n\ngoal (1 subgoal):\n 1. \\<And>V'.\n       finite V' \\<Longrightarrow>\n       \\<exists>\\<eta>.\n          renaming \\<eta> (insert a A) \\<and>\n          subst_codomain \\<eta> (insert a A) \\<inter> V' = {}", "from this"], ["proof (chain)\npicking this:\n  finite V'", "have \"finite (insert a V')\""], ["proof (prove)\nusing this:\n  finite V'\n\ngoal (1 subgoal):\n 1. finite (insert a V')", "by auto"], ["proof (state)\nthis:\n  finite (insert a V')\n\ngoal (1 subgoal):\n 1. \\<And>V'.\n       finite V' \\<Longrightarrow>\n       \\<exists>\\<eta>.\n          renaming \\<eta> (insert a A) \\<and>\n          subst_codomain \\<eta> (insert a A) \\<inter> V' = {}", "from this and hyp_ind"], ["proof (chain)\npicking this:\n  finite (insert a V')\n  \\<forall>V'.\n     finite V' \\<longrightarrow>\n     (\\<exists>\\<eta>.\n         renaming \\<eta> A \\<and> subst_codomain \\<eta> A \\<inter> V' = {})", "obtain \\<eta> where \"renaming \\<eta> A\" and \"(subst_codomain \\<eta> A) \\<inter> (insert a V') = {}\""], ["proof (prove)\nusing this:\n  finite (insert a V')\n  \\<forall>V'.\n     finite V' \\<longrightarrow>\n     (\\<exists>\\<eta>.\n         renaming \\<eta> A \\<and> subst_codomain \\<eta> A \\<inter> V' = {})\n\ngoal (1 subgoal):\n 1. (\\<And>\\<eta>.\n        \\<lbrakk>renaming \\<eta> A;\n         subst_codomain \\<eta> A \\<inter> insert a V' = {}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  renaming \\<eta> A\n  subst_codomain \\<eta> A \\<inter> insert a V' = {}\n\ngoal (1 subgoal):\n 1. \\<And>V'.\n       finite V' \\<Longrightarrow>\n       \\<exists>\\<eta>.\n          renaming \\<eta> (insert a A) \\<and>\n          subst_codomain \\<eta> (insert a A) \\<inter> V' = {}", "from \\<open>finite A\\<close>"], ["proof (chain)\npicking this:\n  finite A", "have \"finite (subst_codomain \\<eta> A)\""], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. finite (subst_codomain \\<eta> A)", "using subst_codomain_is_finite"], ["proof (prove)\nusing this:\n  finite A\n  finite ?A \\<Longrightarrow> finite (subst_codomain ?\\<eta> ?A)\n\ngoal (1 subgoal):\n 1. finite (subst_codomain \\<eta> A)", "by auto"], ["proof (state)\nthis:\n  finite (subst_codomain \\<eta> A)\n\ngoal (1 subgoal):\n 1. \\<And>V'.\n       finite V' \\<Longrightarrow>\n       \\<exists>\\<eta>.\n          renaming \\<eta> (insert a A) \\<and>\n          subst_codomain \\<eta> (insert a A) \\<inter> V' = {}", "from this \\<open>finite V'\\<close>"], ["proof (chain)\npicking this:\n  finite (subst_codomain \\<eta> A)\n  finite V'", "have \"finite (V' \\<union> (subst_codomain \\<eta> A))\""], ["proof (prove)\nusing this:\n  finite (subst_codomain \\<eta> A)\n  finite V'\n\ngoal (1 subgoal):\n 1. finite (V' \\<union> subst_codomain \\<eta> A)", "by auto"], ["proof (state)\nthis:\n  finite (V' \\<union> subst_codomain \\<eta> A)\n\ngoal (1 subgoal):\n 1. \\<And>V'.\n       finite V' \\<Longrightarrow>\n       \\<exists>\\<eta>.\n          renaming \\<eta> (insert a A) \\<and>\n          subst_codomain \\<eta> (insert a A) \\<inter> V' = {}", "from this"], ["proof (chain)\npicking this:\n  finite (V' \\<union> subst_codomain \\<eta> A)", "have \"finite ((insert a V') \\<union> (subst_codomain \\<eta> A))\""], ["proof (prove)\nusing this:\n  finite (V' \\<union> subst_codomain \\<eta> A)\n\ngoal (1 subgoal):\n 1. finite (insert a V' \\<union> subst_codomain \\<eta> A)", "by auto"], ["proof (state)\nthis:\n  finite (insert a V' \\<union> subst_codomain \\<eta> A)\n\ngoal (1 subgoal):\n 1. \\<And>V'.\n       finite V' \\<Longrightarrow>\n       \\<exists>\\<eta>.\n          renaming \\<eta> (insert a A) \\<and>\n          subst_codomain \\<eta> (insert a A) \\<inter> V' = {}", "from this \\<open>\\<not> finite Vars\\<close>"], ["proof (chain)\npicking this:\n  finite (insert a V' \\<union> subst_codomain \\<eta> A)\n  infinite Vars", "have \"\\<not> (Vars \\<subseteq> ((insert a V') \\<union> (subst_codomain \\<eta> A)))\""], ["proof (prove)\nusing this:\n  finite (insert a V' \\<union> subst_codomain \\<eta> A)\n  infinite Vars\n\ngoal (1 subgoal):\n 1. \\<not> Vars \\<subseteq> insert a V' \\<union> subst_codomain \\<eta> A", "using rev_finite_subset"], ["proof (prove)\nusing this:\n  finite (insert a V' \\<union> subst_codomain \\<eta> A)\n  infinite Vars\n  \\<lbrakk>finite ?B; ?A \\<subseteq> ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. \\<not> Vars \\<subseteq> insert a V' \\<union> subst_codomain \\<eta> A", "by metis"], ["proof (state)\nthis:\n  \\<not> Vars \\<subseteq> insert a V' \\<union> subst_codomain \\<eta> A\n\ngoal (1 subgoal):\n 1. \\<And>V'.\n       finite V' \\<Longrightarrow>\n       \\<exists>\\<eta>.\n          renaming \\<eta> (insert a A) \\<and>\n          subst_codomain \\<eta> (insert a A) \\<inter> V' = {}", "from this"], ["proof (chain)\npicking this:\n  \\<not> Vars \\<subseteq> insert a V' \\<union> subst_codomain \\<eta> A", "obtain nv where \"nv \\<in> Vars\" and \"nv \\<notin> (insert a V')\" and \"nv \\<notin> (subst_codomain \\<eta> A)\""], ["proof (prove)\nusing this:\n  \\<not> Vars \\<subseteq> insert a V' \\<union> subst_codomain \\<eta> A\n\ngoal (1 subgoal):\n 1. (\\<And>nv.\n        \\<lbrakk>nv \\<in> Vars; nv \\<notin> insert a V';\n         nv \\<notin> subst_codomain \\<eta> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  nv \\<in> Vars\n  nv \\<notin> insert a V'\n  nv \\<notin> subst_codomain \\<eta> A\n\ngoal (1 subgoal):\n 1. \\<And>V'.\n       finite V' \\<Longrightarrow>\n       \\<exists>\\<eta>.\n          renaming \\<eta> (insert a A) \\<and>\n          subst_codomain \\<eta> (insert a A) \\<inter> V' = {}", "let ?\\<eta> = \"(a,(Var nv)) # \\<eta>\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>V'.\n       finite V' \\<Longrightarrow>\n       \\<exists>\\<eta>.\n          renaming \\<eta> (insert a A) \\<and>\n          subst_codomain \\<eta> (insert a A) \\<inter> V' = {}", "have i: \"(\\<forall>x \\<in> (insert a A). (is_a_variable (subst (Var x) ?\\<eta>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>insert a A.\n       is_a_variable (Var x \\<lhd> (a, Var nv) # \\<eta>)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>insert a A.\n               is_a_variable\n                (Var x \\<lhd> (a, Var nv) # \\<eta>)) \\<Longrightarrow>\n    False", "assume \"\\<not> (\\<forall>x \\<in>  (insert a A). (is_a_variable (subst (Var x) ?\\<eta>)))\""], ["proof (state)\nthis:\n  \\<not> (\\<forall>x\\<in>insert a A.\n             is_a_variable (Var x \\<lhd> (a, Var nv) # \\<eta>))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>insert a A.\n               is_a_variable\n                (Var x \\<lhd> (a, Var nv) # \\<eta>)) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>x\\<in>insert a A.\n             is_a_variable (Var x \\<lhd> (a, Var nv) # \\<eta>))", "obtain x where \"x \\<in>  (insert a A)\" and \"\\<not>is_a_variable (subst (Var x) ?\\<eta>)\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>x\\<in>insert a A.\n             is_a_variable (Var x \\<lhd> (a, Var nv) # \\<eta>))\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> insert a A;\n         \\<not> is_a_variable (Var x \\<lhd> (a, Var nv) # \\<eta>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> insert a A\n  \\<not> is_a_variable (Var x \\<lhd> (a, Var nv) # \\<eta>)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>insert a A.\n               is_a_variable\n                (Var x \\<lhd> (a, Var nv) # \\<eta>)) \\<Longrightarrow>\n    False", "from \\<open>\\<not>is_a_variable (subst (Var x) ?\\<eta>)\\<close>"], ["proof (chain)\npicking this:\n  \\<not> is_a_variable (Var x \\<lhd> (a, Var nv) # \\<eta>)", "have \"x \\<noteq> a\""], ["proof (prove)\nusing this:\n  \\<not> is_a_variable (Var x \\<lhd> (a, Var nv) # \\<eta>)\n\ngoal (1 subgoal):\n 1. x \\<noteq> a", "by auto"], ["proof (state)\nthis:\n  x \\<noteq> a\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>insert a A.\n               is_a_variable\n                (Var x \\<lhd> (a, Var nv) # \\<eta>)) \\<Longrightarrow>\n    False", "from this and \\<open>x \\<in>  (insert a A)\\<close>"], ["proof (chain)\npicking this:\n  x \\<noteq> a\n  x \\<in> insert a A", "have \"x \\<in> A\""], ["proof (prove)\nusing this:\n  x \\<noteq> a\n  x \\<in> insert a A\n\ngoal (1 subgoal):\n 1. x \\<in> A", "by auto"], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>insert a A.\n               is_a_variable\n                (Var x \\<lhd> (a, Var nv) # \\<eta>)) \\<Longrightarrow>\n    False", "from \\<open>x \\<noteq> a\\<close>"], ["proof (chain)\npicking this:\n  x \\<noteq> a", "have \"(subst (Var x) ?\\<eta>) = (subst (Var x) \\<eta>)\""], ["proof (prove)\nusing this:\n  x \\<noteq> a\n\ngoal (1 subgoal):\n 1. Var x \\<lhd> (a, Var nv) # \\<eta> = Var x \\<lhd> \\<eta>", "by auto"], ["proof (state)\nthis:\n  Var x \\<lhd> (a, Var nv) # \\<eta> = Var x \\<lhd> \\<eta>\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>insert a A.\n               is_a_variable\n                (Var x \\<lhd> (a, Var nv) # \\<eta>)) \\<Longrightarrow>\n    False", "from \\<open>renaming \\<eta> A\\<close> and \\<open>x \\<in> A\\<close>"], ["proof (chain)\npicking this:\n  renaming \\<eta> A\n  x \\<in> A", "have \"is_a_variable (subst (Var x) \\<eta>)\""], ["proof (prove)\nusing this:\n  renaming \\<eta> A\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. is_a_variable (Var x \\<lhd> \\<eta>)", "unfolding renaming_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>A.\n     is_a_variable (Var x \\<lhd> \\<eta>) \\<and>\n     (\\<forall>x y.\n         x \\<in> A \\<longrightarrow>\n         y \\<in> A \\<longrightarrow>\n         x \\<noteq> y \\<longrightarrow>\n         Var x \\<lhd> \\<eta> \\<noteq> Var y \\<lhd> \\<eta>)\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. is_a_variable (Var x \\<lhd> \\<eta>)", "by metis"], ["proof (state)\nthis:\n  is_a_variable (Var x \\<lhd> \\<eta>)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x\\<in>insert a A.\n               is_a_variable\n                (Var x \\<lhd> (a, Var nv) # \\<eta>)) \\<Longrightarrow>\n    False", "from this and \\<open>\\<not>is_a_variable (subst (Var x) ?\\<eta>)\\<close>\n          \\<open>(subst (Var x) ?\\<eta>) = (subst (Var x) \\<eta>)\\<close>"], ["proof (chain)\npicking this:\n  is_a_variable (Var x \\<lhd> \\<eta>)\n  \\<not> is_a_variable (Var x \\<lhd> (a, Var nv) # \\<eta>)\n  Var x \\<lhd> (a, Var nv) # \\<eta> = Var x \\<lhd> \\<eta>", "show False"], ["proof (prove)\nusing this:\n  is_a_variable (Var x \\<lhd> \\<eta>)\n  \\<not> is_a_variable (Var x \\<lhd> (a, Var nv) # \\<eta>)\n  Var x \\<lhd> (a, Var nv) # \\<eta> = Var x \\<lhd> \\<eta>\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x\\<in>insert a A.\n     is_a_variable (Var x \\<lhd> (a, Var nv) # \\<eta>)\n\ngoal (1 subgoal):\n 1. \\<And>V'.\n       finite V' \\<Longrightarrow>\n       \\<exists>\\<eta>.\n          renaming \\<eta> (insert a A) \\<and>\n          subst_codomain \\<eta> (insert a A) \\<inter> V' = {}", "have ii: \"(\\<forall> x y. ((x \\<in> (insert a A)) \\<longrightarrow> (y \\<in> (insert a A)) \\<longrightarrow> x \\<noteq> y \n        \\<longrightarrow> (subst (Var x) ?\\<eta>) \\<noteq> (subst (Var y) ?\\<eta>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       x \\<in> insert a A \\<longrightarrow>\n       y \\<in> insert a A \\<longrightarrow>\n       x \\<noteq> y \\<longrightarrow>\n       Var x \\<lhd> (a, Var nv) # \\<eta> \\<noteq>\n       Var y \\<lhd> (a, Var nv) # \\<eta>", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x y.\n               x \\<in> insert a A \\<longrightarrow>\n               y \\<in> insert a A \\<longrightarrow>\n               x \\<noteq> y \\<longrightarrow>\n               Var x \\<lhd> (a, Var nv) # \\<eta> \\<noteq>\n               Var y \\<lhd> (a, Var nv) # \\<eta>) \\<Longrightarrow>\n    False", "assume \"\\<not>(\\<forall> x y. ((x \\<in> (insert a A)) \\<longrightarrow> (y \\<in> (insert a A)) \\<longrightarrow> x \\<noteq> y \n          \\<longrightarrow> (subst (Var x) ?\\<eta>) \\<noteq> (subst (Var y) ?\\<eta>)))\""], ["proof (state)\nthis:\n  \\<not> (\\<forall>x y.\n             x \\<in> insert a A \\<longrightarrow>\n             y \\<in> insert a A \\<longrightarrow>\n             x \\<noteq> y \\<longrightarrow>\n             Var x \\<lhd> (a, Var nv) # \\<eta> \\<noteq>\n             Var y \\<lhd> (a, Var nv) # \\<eta>)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x y.\n               x \\<in> insert a A \\<longrightarrow>\n               y \\<in> insert a A \\<longrightarrow>\n               x \\<noteq> y \\<longrightarrow>\n               Var x \\<lhd> (a, Var nv) # \\<eta> \\<noteq>\n               Var y \\<lhd> (a, Var nv) # \\<eta>) \\<Longrightarrow>\n    False", "from this"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>x y.\n             x \\<in> insert a A \\<longrightarrow>\n             y \\<in> insert a A \\<longrightarrow>\n             x \\<noteq> y \\<longrightarrow>\n             Var x \\<lhd> (a, Var nv) # \\<eta> \\<noteq>\n             Var y \\<lhd> (a, Var nv) # \\<eta>)", "obtain x y where \"x \\<in> insert a A\" \"y \\<in> insert a A\" \"x \\<noteq> y\"\n          \"(subst (Var x) ?\\<eta>) = (subst (Var y) ?\\<eta>)\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>x y.\n             x \\<in> insert a A \\<longrightarrow>\n             y \\<in> insert a A \\<longrightarrow>\n             x \\<noteq> y \\<longrightarrow>\n             Var x \\<lhd> (a, Var nv) # \\<eta> \\<noteq>\n             Var y \\<lhd> (a, Var nv) # \\<eta>)\n\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        \\<lbrakk>x \\<in> insert a A; y \\<in> insert a A; x \\<noteq> y;\n         Var x \\<lhd> (a, Var nv) # \\<eta> =\n         Var y \\<lhd> (a, Var nv) # \\<eta>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x \\<in> insert a A\n  y \\<in> insert a A\n  x \\<noteq> y\n  Var x \\<lhd> (a, Var nv) # \\<eta> = Var y \\<lhd> (a, Var nv) # \\<eta>\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x y.\n               x \\<in> insert a A \\<longrightarrow>\n               y \\<in> insert a A \\<longrightarrow>\n               x \\<noteq> y \\<longrightarrow>\n               Var x \\<lhd> (a, Var nv) # \\<eta> \\<noteq>\n               Var y \\<lhd> (a, Var nv) # \\<eta>) \\<Longrightarrow>\n    False", "from i"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>insert a A.\n     is_a_variable (Var x \\<lhd> (a, Var nv) # \\<eta>)", "obtain y' where \"(subst (Var y) ?\\<eta>) = (Var y')\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>insert a A.\n     is_a_variable (Var x \\<lhd> (a, Var nv) # \\<eta>)\n\ngoal (1 subgoal):\n 1. (\\<And>y'.\n        Var y \\<lhd> (a, Var nv) # \\<eta> = Var y' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using is_a_variable.simps"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>insert a A.\n     is_a_variable (Var x \\<lhd> (a, Var nv) # \\<eta>)\n  is_a_variable (Var ?x) = True\n  is_a_variable (Const ?x) = False\n  is_a_variable (?x \\<cdot> ?y) = False\n\ngoal (1 subgoal):\n 1. (\\<And>y'.\n        Var y \\<lhd> (a, Var nv) # \\<eta> = Var y' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using \\<open>y \\<in> insert a A\\<close> is_a_variable.elims(2)"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>insert a A.\n     is_a_variable (Var x \\<lhd> (a, Var nv) # \\<eta>)\n  is_a_variable (Var ?x) = True\n  is_a_variable (Const ?x) = False\n  is_a_variable (?x \\<cdot> ?y) = False\n  y \\<in> insert a A\n  \\<lbrakk>is_a_variable ?x;\n   \\<And>x. ?x = Var x \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>y'.\n        Var y \\<lhd> (a, Var nv) # \\<eta> = Var y' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  Var y \\<lhd> (a, Var nv) # \\<eta> = Var y'\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x y.\n               x \\<in> insert a A \\<longrightarrow>\n               y \\<in> insert a A \\<longrightarrow>\n               x \\<noteq> y \\<longrightarrow>\n               Var x \\<lhd> (a, Var nv) # \\<eta> \\<noteq>\n               Var y \\<lhd> (a, Var nv) # \\<eta>) \\<Longrightarrow>\n    False", "from i"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>insert a A.\n     is_a_variable (Var x \\<lhd> (a, Var nv) # \\<eta>)", "obtain x' where \"(subst (Var x) ?\\<eta>) = (Var x')\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>insert a A.\n     is_a_variable (Var x \\<lhd> (a, Var nv) # \\<eta>)\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        Var x \\<lhd> (a, Var nv) # \\<eta> = Var x' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using is_a_variable.simps"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>insert a A.\n     is_a_variable (Var x \\<lhd> (a, Var nv) # \\<eta>)\n  is_a_variable (Var ?x) = True\n  is_a_variable (Const ?x) = False\n  is_a_variable (?x \\<cdot> ?y) = False\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        Var x \\<lhd> (a, Var nv) # \\<eta> = Var x' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using \\<open>x \\<in> insert a A\\<close> is_a_variable.elims(2)"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>insert a A.\n     is_a_variable (Var x \\<lhd> (a, Var nv) # \\<eta>)\n  is_a_variable (Var ?x) = True\n  is_a_variable (Const ?x) = False\n  is_a_variable (?x \\<cdot> ?y) = False\n  x \\<in> insert a A\n  \\<lbrakk>is_a_variable ?x;\n   \\<And>x. ?x = Var x \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        Var x \\<lhd> (a, Var nv) # \\<eta> = Var x' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  Var x \\<lhd> (a, Var nv) # \\<eta> = Var x'\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x y.\n               x \\<in> insert a A \\<longrightarrow>\n               y \\<in> insert a A \\<longrightarrow>\n               x \\<noteq> y \\<longrightarrow>\n               Var x \\<lhd> (a, Var nv) # \\<eta> \\<noteq>\n               Var y \\<lhd> (a, Var nv) # \\<eta>) \\<Longrightarrow>\n    False", "from \\<open>(subst (Var x) ?\\<eta>) = (Var x')\\<close> \\<open>(subst (Var y) ?\\<eta>) = (Var y')\\<close> \n          \\<open>(subst (Var x) ?\\<eta>) = (subst (Var y) ?\\<eta>)\\<close>"], ["proof (chain)\npicking this:\n  Var x \\<lhd> (a, Var nv) # \\<eta> = Var x'\n  Var y \\<lhd> (a, Var nv) # \\<eta> = Var y'\n  Var x \\<lhd> (a, Var nv) # \\<eta> = Var y \\<lhd> (a, Var nv) # \\<eta>", "have \"x' = y'\""], ["proof (prove)\nusing this:\n  Var x \\<lhd> (a, Var nv) # \\<eta> = Var x'\n  Var y \\<lhd> (a, Var nv) # \\<eta> = Var y'\n  Var x \\<lhd> (a, Var nv) # \\<eta> = Var y \\<lhd> (a, Var nv) # \\<eta>\n\ngoal (1 subgoal):\n 1. x' = y'", "by auto"], ["proof (state)\nthis:\n  x' = y'\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x y.\n               x \\<in> insert a A \\<longrightarrow>\n               y \\<in> insert a A \\<longrightarrow>\n               x \\<noteq> y \\<longrightarrow>\n               Var x \\<lhd> (a, Var nv) # \\<eta> \\<noteq>\n               Var y \\<lhd> (a, Var nv) # \\<eta>) \\<Longrightarrow>\n    False", "have \"x \\<noteq> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> a", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. x = a \\<Longrightarrow> False", "assume \"x = a\""], ["proof (state)\nthis:\n  x = a\n\ngoal (1 subgoal):\n 1. x = a \\<Longrightarrow> False", "from this and \\<open>x \\<noteq> y\\<close> and \\<open>y \\<in> insert a A\\<close>"], ["proof (chain)\npicking this:\n  x = a\n  x \\<noteq> y\n  y \\<in> insert a A", "have \"y \\<in> A\""], ["proof (prove)\nusing this:\n  x = a\n  x \\<noteq> y\n  y \\<in> insert a A\n\ngoal (1 subgoal):\n 1. y \\<in> A", "by auto"], ["proof (state)\nthis:\n  y \\<in> A\n\ngoal (1 subgoal):\n 1. x = a \\<Longrightarrow> False", "from this and \\<open>x \\<noteq> y\\<close> and \\<open>x = a\\<close> and \\<open>(subst (Var y) ?\\<eta>) = (Var y')\\<close>"], ["proof (chain)\npicking this:\n  y \\<in> A\n  x \\<noteq> y\n  x = a\n  Var y \\<lhd> (a, Var nv) # \\<eta> = Var y'", "have \"y' \\<in> (subst_codomain \\<eta> A)\""], ["proof (prove)\nusing this:\n  y \\<in> A\n  x \\<noteq> y\n  x = a\n  Var y \\<lhd> (a, Var nv) # \\<eta> = Var y'\n\ngoal (1 subgoal):\n 1. y' \\<in> subst_codomain \\<eta> A", "unfolding subst_codomain_def"], ["proof (prove)\nusing this:\n  y \\<in> A\n  x \\<noteq> y\n  x = a\n  Var y \\<lhd> (a, Var nv) # \\<eta> = Var y'\n\ngoal (1 subgoal):\n 1. y' \\<in> {x. \\<exists>y. Var y \\<lhd> \\<eta> = Var x \\<and> y \\<in> A}", "by auto"], ["proof (state)\nthis:\n  y' \\<in> subst_codomain \\<eta> A\n\ngoal (1 subgoal):\n 1. x = a \\<Longrightarrow> False", "from \\<open>x = a\\<close> and \\<open>(subst (Var x) ?\\<eta>) = (Var x')\\<close>"], ["proof (chain)\npicking this:\n  x = a\n  Var x \\<lhd> (a, Var nv) # \\<eta> = Var x'", "have \"x' = nv\""], ["proof (prove)\nusing this:\n  x = a\n  Var x \\<lhd> (a, Var nv) # \\<eta> = Var x'\n\ngoal (1 subgoal):\n 1. x' = nv", "by auto"], ["proof (state)\nthis:\n  x' = nv\n\ngoal (1 subgoal):\n 1. x = a \\<Longrightarrow> False", "from this and \\<open>y' \\<in> (subst_codomain \\<eta> A)\\<close> and \\<open>x' = y'\\<close> and \\<open>nv \\<notin> (subst_codomain \\<eta> A)\\<close>"], ["proof (chain)\npicking this:\n  x' = nv\n  y' \\<in> subst_codomain \\<eta> A\n  x' = y'\n  nv \\<notin> subst_codomain \\<eta> A", "show False"], ["proof (prove)\nusing this:\n  x' = nv\n  y' \\<in> subst_codomain \\<eta> A\n  x' = y'\n  nv \\<notin> subst_codomain \\<eta> A\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<noteq> a\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x y.\n               x \\<in> insert a A \\<longrightarrow>\n               y \\<in> insert a A \\<longrightarrow>\n               x \\<noteq> y \\<longrightarrow>\n               Var x \\<lhd> (a, Var nv) # \\<eta> \\<noteq>\n               Var y \\<lhd> (a, Var nv) # \\<eta>) \\<Longrightarrow>\n    False", "from this and \\<open>x \\<in> insert a A\\<close>"], ["proof (chain)\npicking this:\n  x \\<noteq> a\n  x \\<in> insert a A", "have \"x \\<in> A\" and \n          \"(subst (Var x) ?\\<eta>) = (subst (Var x) \\<eta>)\""], ["proof (prove)\nusing this:\n  x \\<noteq> a\n  x \\<in> insert a A\n\ngoal (1 subgoal):\n 1. x \\<in> A &&& Var x \\<lhd> (a, Var nv) # \\<eta> = Var x \\<lhd> \\<eta>", "by auto"], ["proof (state)\nthis:\n  x \\<in> A\n  Var x \\<lhd> (a, Var nv) # \\<eta> = Var x \\<lhd> \\<eta>\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x y.\n               x \\<in> insert a A \\<longrightarrow>\n               y \\<in> insert a A \\<longrightarrow>\n               x \\<noteq> y \\<longrightarrow>\n               Var x \\<lhd> (a, Var nv) # \\<eta> \\<noteq>\n               Var y \\<lhd> (a, Var nv) # \\<eta>) \\<Longrightarrow>\n    False", "have \"y \\<noteq> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<noteq> a", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. y = a \\<Longrightarrow> False", "assume \"y = a\""], ["proof (state)\nthis:\n  y = a\n\ngoal (1 subgoal):\n 1. y = a \\<Longrightarrow> False", "from this and \\<open>x \\<noteq> y\\<close> and \\<open>x \\<in> insert a A\\<close>"], ["proof (chain)\npicking this:\n  y = a\n  x \\<noteq> y\n  x \\<in> insert a A", "have \"x \\<in> A\""], ["proof (prove)\nusing this:\n  y = a\n  x \\<noteq> y\n  x \\<in> insert a A\n\ngoal (1 subgoal):\n 1. x \\<in> A", "by auto"], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. y = a \\<Longrightarrow> False", "from this and \\<open>x \\<noteq> y\\<close> and \\<open>y = a\\<close> and \\<open>(subst (Var x) ?\\<eta>) = (Var x')\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> A\n  x \\<noteq> y\n  y = a\n  Var x \\<lhd> (a, Var nv) # \\<eta> = Var x'", "have \"x' \\<in> (subst_codomain \\<eta> A)\""], ["proof (prove)\nusing this:\n  x \\<in> A\n  x \\<noteq> y\n  y = a\n  Var x \\<lhd> (a, Var nv) # \\<eta> = Var x'\n\ngoal (1 subgoal):\n 1. x' \\<in> subst_codomain \\<eta> A", "unfolding subst_codomain_def"], ["proof (prove)\nusing this:\n  x \\<in> A\n  x \\<noteq> y\n  y = a\n  Var x \\<lhd> (a, Var nv) # \\<eta> = Var x'\n\ngoal (1 subgoal):\n 1. x' \\<in> {x. \\<exists>y. Var y \\<lhd> \\<eta> = Var x \\<and> y \\<in> A}", "by auto"], ["proof (state)\nthis:\n  x' \\<in> subst_codomain \\<eta> A\n\ngoal (1 subgoal):\n 1. y = a \\<Longrightarrow> False", "from \\<open>y = a\\<close> and \\<open>(subst (Var y) ?\\<eta>) = (Var y')\\<close>"], ["proof (chain)\npicking this:\n  y = a\n  Var y \\<lhd> (a, Var nv) # \\<eta> = Var y'", "have \"y' = nv\""], ["proof (prove)\nusing this:\n  y = a\n  Var y \\<lhd> (a, Var nv) # \\<eta> = Var y'\n\ngoal (1 subgoal):\n 1. y' = nv", "by auto"], ["proof (state)\nthis:\n  y' = nv\n\ngoal (1 subgoal):\n 1. y = a \\<Longrightarrow> False", "from this and \\<open>x' \\<in> (subst_codomain \\<eta> A)\\<close> and \\<open>x' = y'\\<close> and \\<open>nv \\<notin> (subst_codomain \\<eta> A)\\<close>"], ["proof (chain)\npicking this:\n  y' = nv\n  x' \\<in> subst_codomain \\<eta> A\n  x' = y'\n  nv \\<notin> subst_codomain \\<eta> A", "show False"], ["proof (prove)\nusing this:\n  y' = nv\n  x' \\<in> subst_codomain \\<eta> A\n  x' = y'\n  nv \\<notin> subst_codomain \\<eta> A\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  y \\<noteq> a\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x y.\n               x \\<in> insert a A \\<longrightarrow>\n               y \\<in> insert a A \\<longrightarrow>\n               x \\<noteq> y \\<longrightarrow>\n               Var x \\<lhd> (a, Var nv) # \\<eta> \\<noteq>\n               Var y \\<lhd> (a, Var nv) # \\<eta>) \\<Longrightarrow>\n    False", "from this and \\<open>y \\<in> insert a A\\<close>"], ["proof (chain)\npicking this:\n  y \\<noteq> a\n  y \\<in> insert a A", "have \"y \\<in> A\" and \n          \"(subst (Var y) ?\\<eta>) = (subst (Var y) \\<eta>)\""], ["proof (prove)\nusing this:\n  y \\<noteq> a\n  y \\<in> insert a A\n\ngoal (1 subgoal):\n 1. y \\<in> A &&& Var y \\<lhd> (a, Var nv) # \\<eta> = Var y \\<lhd> \\<eta>", "by auto"], ["proof (state)\nthis:\n  y \\<in> A\n  Var y \\<lhd> (a, Var nv) # \\<eta> = Var y \\<lhd> \\<eta>\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x y.\n               x \\<in> insert a A \\<longrightarrow>\n               y \\<in> insert a A \\<longrightarrow>\n               x \\<noteq> y \\<longrightarrow>\n               Var x \\<lhd> (a, Var nv) # \\<eta> \\<noteq>\n               Var y \\<lhd> (a, Var nv) # \\<eta>) \\<Longrightarrow>\n    False", "from \\<open>(subst (Var x) ?\\<eta>) = (subst (Var x) \\<eta>)\\<close> \n          \\<open>(subst (Var y) ?\\<eta>) = (subst (Var y) \\<eta>)\\<close> \n          \\<open>(subst (Var x) ?\\<eta>) = (subst (Var y) ?\\<eta>)\\<close>"], ["proof (chain)\npicking this:\n  Var x \\<lhd> (a, Var nv) # \\<eta> = Var x \\<lhd> \\<eta>\n  Var y \\<lhd> (a, Var nv) # \\<eta> = Var y \\<lhd> \\<eta>\n  Var x \\<lhd> (a, Var nv) # \\<eta> = Var y \\<lhd> (a, Var nv) # \\<eta>", "have \"(subst (Var x) \\<eta>) = (subst (Var y) \\<eta>)\""], ["proof (prove)\nusing this:\n  Var x \\<lhd> (a, Var nv) # \\<eta> = Var x \\<lhd> \\<eta>\n  Var y \\<lhd> (a, Var nv) # \\<eta> = Var y \\<lhd> \\<eta>\n  Var x \\<lhd> (a, Var nv) # \\<eta> = Var y \\<lhd> (a, Var nv) # \\<eta>\n\ngoal (1 subgoal):\n 1. Var x \\<lhd> \\<eta> = Var y \\<lhd> \\<eta>", "by auto"], ["proof (state)\nthis:\n  Var x \\<lhd> \\<eta> = Var y \\<lhd> \\<eta>\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x y.\n               x \\<in> insert a A \\<longrightarrow>\n               y \\<in> insert a A \\<longrightarrow>\n               x \\<noteq> y \\<longrightarrow>\n               Var x \\<lhd> (a, Var nv) # \\<eta> \\<noteq>\n               Var y \\<lhd> (a, Var nv) # \\<eta>) \\<Longrightarrow>\n    False", "from this and \\<open>x \\<in> A\\<close> and \\<open>y \\<in> A\\<close>and \\<open>renaming \\<eta> A\\<close> and \\<open>x \\<noteq> y\\<close>"], ["proof (chain)\npicking this:\n  Var x \\<lhd> \\<eta> = Var y \\<lhd> \\<eta>\n  x \\<in> A\n  y \\<in> A\n  renaming \\<eta> A\n  x \\<noteq> y", "show False"], ["proof (prove)\nusing this:\n  Var x \\<lhd> \\<eta> = Var y \\<lhd> \\<eta>\n  x \\<in> A\n  y \\<in> A\n  renaming \\<eta> A\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. False", "unfolding renaming_def"], ["proof (prove)\nusing this:\n  Var x \\<lhd> \\<eta> = Var y \\<lhd> \\<eta>\n  x \\<in> A\n  y \\<in> A\n  \\<forall>x\\<in>A.\n     is_a_variable (Var x \\<lhd> \\<eta>) \\<and>\n     (\\<forall>x y.\n         x \\<in> A \\<longrightarrow>\n         y \\<in> A \\<longrightarrow>\n         x \\<noteq> y \\<longrightarrow>\n         Var x \\<lhd> \\<eta> \\<noteq> Var y \\<lhd> \\<eta>)\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. False", "by metis"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x y.\n     x \\<in> insert a A \\<longrightarrow>\n     y \\<in> insert a A \\<longrightarrow>\n     x \\<noteq> y \\<longrightarrow>\n     Var x \\<lhd> (a, Var nv) # \\<eta> \\<noteq>\n     Var y \\<lhd> (a, Var nv) # \\<eta>\n\ngoal (1 subgoal):\n 1. \\<And>V'.\n       finite V' \\<Longrightarrow>\n       \\<exists>\\<eta>.\n          renaming \\<eta> (insert a A) \\<and>\n          subst_codomain \\<eta> (insert a A) \\<inter> V' = {}", "from i ii"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>insert a A.\n     is_a_variable (Var x \\<lhd> (a, Var nv) # \\<eta>)\n  \\<forall>x y.\n     x \\<in> insert a A \\<longrightarrow>\n     y \\<in> insert a A \\<longrightarrow>\n     x \\<noteq> y \\<longrightarrow>\n     Var x \\<lhd> (a, Var nv) # \\<eta> \\<noteq>\n     Var y \\<lhd> (a, Var nv) # \\<eta>", "have \"renaming ?\\<eta> (insert a A)\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>insert a A.\n     is_a_variable (Var x \\<lhd> (a, Var nv) # \\<eta>)\n  \\<forall>x y.\n     x \\<in> insert a A \\<longrightarrow>\n     y \\<in> insert a A \\<longrightarrow>\n     x \\<noteq> y \\<longrightarrow>\n     Var x \\<lhd> (a, Var nv) # \\<eta> \\<noteq>\n     Var y \\<lhd> (a, Var nv) # \\<eta>\n\ngoal (1 subgoal):\n 1. renaming ((a, Var nv) # \\<eta>) (insert a A)", "unfolding renaming_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>insert a A.\n     is_a_variable (Var x \\<lhd> (a, Var nv) # \\<eta>)\n  \\<forall>x y.\n     x \\<in> insert a A \\<longrightarrow>\n     y \\<in> insert a A \\<longrightarrow>\n     x \\<noteq> y \\<longrightarrow>\n     Var x \\<lhd> (a, Var nv) # \\<eta> \\<noteq>\n     Var y \\<lhd> (a, Var nv) # \\<eta>\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>insert a A.\n       is_a_variable (Var x \\<lhd> (a, Var nv) # \\<eta>) \\<and>\n       (\\<forall>x y.\n           x \\<in> insert a A \\<longrightarrow>\n           y \\<in> insert a A \\<longrightarrow>\n           x \\<noteq> y \\<longrightarrow>\n           Var x \\<lhd> (a, Var nv) # \\<eta> \\<noteq>\n           Var y \\<lhd> (a, Var nv) # \\<eta>)", "by auto"], ["proof (state)\nthis:\n  renaming ((a, Var nv) # \\<eta>) (insert a A)\n\ngoal (1 subgoal):\n 1. \\<And>V'.\n       finite V' \\<Longrightarrow>\n       \\<exists>\\<eta>.\n          renaming \\<eta> (insert a A) \\<and>\n          subst_codomain \\<eta> (insert a A) \\<inter> V' = {}", "have \"((subst_codomain ?\\<eta> (insert a A)) \\<inter> V') = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subst_codomain ((a, Var nv) # \\<eta>) (insert a A) \\<inter> V' = {}", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. subst_codomain ((a, Var nv) # \\<eta>) (insert a A) \\<inter> V' \\<noteq>\n    {} \\<Longrightarrow>\n    False", "assume \"(subst_codomain ?\\<eta> (insert a A)) \\<inter> V' \\<noteq> {}\""], ["proof (state)\nthis:\n  subst_codomain ((a, Var nv) # \\<eta>) (insert a A) \\<inter> V' \\<noteq> {}\n\ngoal (1 subgoal):\n 1. subst_codomain ((a, Var nv) # \\<eta>) (insert a A) \\<inter> V' \\<noteq>\n    {} \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  subst_codomain ((a, Var nv) # \\<eta>) (insert a A) \\<inter> V' \\<noteq> {}", "obtain x where \"x \\<in> (subst_codomain ?\\<eta> (insert a A))\" and \"x \\<in> V'\""], ["proof (prove)\nusing this:\n  subst_codomain ((a, Var nv) # \\<eta>) (insert a A) \\<inter> V' \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> subst_codomain ((a, Var nv) # \\<eta>) (insert a A);\n         x \\<in> V'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> subst_codomain ((a, Var nv) # \\<eta>) (insert a A)\n  x \\<in> V'\n\ngoal (1 subgoal):\n 1. subst_codomain ((a, Var nv) # \\<eta>) (insert a A) \\<inter> V' \\<noteq>\n    {} \\<Longrightarrow>\n    False", "from \\<open>x \\<in> (subst_codomain ?\\<eta> (insert a A))\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> subst_codomain ((a, Var nv) # \\<eta>) (insert a A)", "obtain x' where \"x' \\<in> (insert a A)\"  \n        and \"subst (Var x') ?\\<eta> = (Var x)\""], ["proof (prove)\nusing this:\n  x \\<in> subst_codomain ((a, Var nv) # \\<eta>) (insert a A)\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>x' \\<in> insert a A;\n         Var x' \\<lhd> (a, Var nv) # \\<eta> = Var x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding subst_codomain_def"], ["proof (prove)\nusing this:\n  x \\<in> {x. \\<exists>y.\n                 Var y \\<lhd> (a, Var nv) # \\<eta> = Var x \\<and>\n                 y \\<in> insert a A}\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>x' \\<in> insert a A;\n         Var x' \\<lhd> (a, Var nv) # \\<eta> = Var x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x' \\<in> insert a A\n  Var x' \\<lhd> (a, Var nv) # \\<eta> = Var x\n\ngoal (1 subgoal):\n 1. subst_codomain ((a, Var nv) # \\<eta>) (insert a A) \\<inter> V' \\<noteq>\n    {} \\<Longrightarrow>\n    False", "have \"x' \\<noteq> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x' \\<noteq> a", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. x' = a \\<Longrightarrow> False", "assume \"x' = a\""], ["proof (state)\nthis:\n  x' = a\n\ngoal (1 subgoal):\n 1. x' = a \\<Longrightarrow> False", "from this and \\<open>subst (Var x') ?\\<eta> = (Var x)\\<close>"], ["proof (chain)\npicking this:\n  x' = a\n  Var x' \\<lhd> (a, Var nv) # \\<eta> = Var x", "have \"x = nv\""], ["proof (prove)\nusing this:\n  x' = a\n  Var x' \\<lhd> (a, Var nv) # \\<eta> = Var x\n\ngoal (1 subgoal):\n 1. x = nv", "by auto"], ["proof (state)\nthis:\n  x = nv\n\ngoal (1 subgoal):\n 1. x' = a \\<Longrightarrow> False", "from this and \\<open>x \\<in> V'\\<close> and \\<open>nv \\<notin> (insert a V')\\<close>"], ["proof (chain)\npicking this:\n  x = nv\n  x \\<in> V'\n  nv \\<notin> insert a V'", "show False"], ["proof (prove)\nusing this:\n  x = nv\n  x \\<in> V'\n  nv \\<notin> insert a V'\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x' \\<noteq> a\n\ngoal (1 subgoal):\n 1. subst_codomain ((a, Var nv) # \\<eta>) (insert a A) \\<inter> V' \\<noteq>\n    {} \\<Longrightarrow>\n    False", "from this and \\<open>x' \\<in> (insert a A)\\<close>"], ["proof (chain)\npicking this:\n  x' \\<noteq> a\n  x' \\<in> insert a A", "have \"x' \\<in> A\""], ["proof (prove)\nusing this:\n  x' \\<noteq> a\n  x' \\<in> insert a A\n\ngoal (1 subgoal):\n 1. x' \\<in> A", "by auto"], ["proof (state)\nthis:\n  x' \\<in> A\n\ngoal (1 subgoal):\n 1. subst_codomain ((a, Var nv) # \\<eta>) (insert a A) \\<inter> V' \\<noteq>\n    {} \\<Longrightarrow>\n    False", "from \\<open>x' \\<noteq> a\\<close> and \\<open>subst (Var x') ?\\<eta> = (Var x)\\<close>"], ["proof (chain)\npicking this:\n  x' \\<noteq> a\n  Var x' \\<lhd> (a, Var nv) # \\<eta> = Var x", "have \n        \"(Var x) = (subst (Var x') \\<eta>)\""], ["proof (prove)\nusing this:\n  x' \\<noteq> a\n  Var x' \\<lhd> (a, Var nv) # \\<eta> = Var x\n\ngoal (1 subgoal):\n 1. Var x = Var x' \\<lhd> \\<eta>", "by auto"], ["proof (state)\nthis:\n  Var x = Var x' \\<lhd> \\<eta>\n\ngoal (1 subgoal):\n 1. subst_codomain ((a, Var nv) # \\<eta>) (insert a A) \\<inter> V' \\<noteq>\n    {} \\<Longrightarrow>\n    False", "from this and \\<open>x' \\<in> A\\<close>"], ["proof (chain)\npicking this:\n  Var x = Var x' \\<lhd> \\<eta>\n  x' \\<in> A", "have \"x \\<in> subst_codomain \\<eta> A\""], ["proof (prove)\nusing this:\n  Var x = Var x' \\<lhd> \\<eta>\n  x' \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<in> subst_codomain \\<eta> A", "unfolding subst_codomain_def"], ["proof (prove)\nusing this:\n  Var x = Var x' \\<lhd> \\<eta>\n  x' \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<in> {x. \\<exists>y. Var y \\<lhd> \\<eta> = Var x \\<and> y \\<in> A}", "by auto"], ["proof (state)\nthis:\n  x \\<in> subst_codomain \\<eta> A\n\ngoal (1 subgoal):\n 1. subst_codomain ((a, Var nv) # \\<eta>) (insert a A) \\<inter> V' \\<noteq>\n    {} \\<Longrightarrow>\n    False", "from \\<open>x \\<in> subst_codomain \\<eta> A\\<close> and \\<open>(subst_codomain \\<eta> A) \\<inter> (insert a V') = {}\\<close> and \\<open>x \\<in> V'\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> subst_codomain \\<eta> A\n  subst_codomain \\<eta> A \\<inter> insert a V' = {}\n  x \\<in> V'", "show False"], ["proof (prove)\nusing this:\n  x \\<in> subst_codomain \\<eta> A\n  subst_codomain \\<eta> A \\<inter> insert a V' = {}\n  x \\<in> V'\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  subst_codomain ((a, Var nv) # \\<eta>) (insert a A) \\<inter> V' = {}\n\ngoal (1 subgoal):\n 1. \\<And>V'.\n       finite V' \\<Longrightarrow>\n       \\<exists>\\<eta>.\n          renaming \\<eta> (insert a A) \\<and>\n          subst_codomain \\<eta> (insert a A) \\<inter> V' = {}", "from this and \\<open>renaming ?\\<eta> (insert a A)\\<close>"], ["proof (chain)\npicking this:\n  subst_codomain ((a, Var nv) # \\<eta>) (insert a A) \\<inter> V' = {}\n  renaming ((a, Var nv) # \\<eta>) (insert a A)", "show \"\\<exists>\\<eta>. renaming \\<eta> (insert a A) \\<and> subst_codomain \\<eta> (insert a A) \\<inter> V' = {}\""], ["proof (prove)\nusing this:\n  subst_codomain ((a, Var nv) # \\<eta>) (insert a A) \\<inter> V' = {}\n  renaming ((a, Var nv) # \\<eta>) (insert a A)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<eta>.\n       renaming \\<eta> (insert a A) \\<and>\n       subst_codomain \\<eta> (insert a A) \\<inter> V' = {}", "by auto"], ["proof (state)\nthis:\n  \\<exists>\\<eta>.\n     renaming \\<eta> (insert a A) \\<and>\n     subst_codomain \\<eta> (insert a A) \\<inter> V' = {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>V'.\n     finite V' \\<longrightarrow>\n     (\\<exists>\\<eta>.\n         renaming \\<eta> (insert a A) \\<and>\n         subst_codomain \\<eta> (insert a A) \\<inter> V' = {})\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}