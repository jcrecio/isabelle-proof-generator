{"file_name": "/home/qj213/afp-2021-10-22/thys/SuperCalc/multisets_continued.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/SuperCalc", "problem_names": ["lemma mset_set_inclusion:\n  assumes \"finite E2\"\n  assumes \"E1 \\<subset> E2\"  \n  shows \"mset_set E1 \\<subset># (mset_set E2)\"", "lemma mset_ordering_addition:\n  assumes \"A = B + C\"\n  shows \"B \\<subseteq># A\"", "lemma equal_image_mset:\n  assumes \"\\<forall>x \\<in> E. (f x) = (g x)\"\n  shows \"{# (f x). x \\<in># (mset_set E) #} = {# (g x). x \\<in># (mset_set E)  #}\"", "lemma multiset_order_inclusion:\n  assumes \"E \\<subset># F\"\n  assumes \"trans r\"\n  shows \"(E,F) \\<in> (mult r)\"", "lemma multiset_order_inclusion_eq:\n  assumes \"E \\<subseteq># F\"\n  assumes \"trans r\"\n  shows \"E = F \\<or> (E,F) \\<in> (mult r)\"", "lemma image_mset_ordering:\n  assumes \"M1 = {# (f1 u). u \\<in># L #}\"\n  assumes \"M2 = {# (f2 u). u \\<in># L #}\"\n  assumes \"\\<forall>u. (u \\<in># L \\<longrightarrow> (((f1 u), (f2 u)) \\<in> r \\<or> (f1 u) = (f2 u)))\"\n  assumes \"\\<exists>u. (u \\<in># L \\<and> ((f1 u), (f2 u)) \\<in> r)\"\n  assumes \"irrefl r\"\n  shows \"( (M1,M2) \\<in> (mult r) )\"", "lemma image_mset_ordering_eq:\n  assumes \"M1 = {# (f1 u). u \\<in># L #}\"\n  assumes \"M2 = {# (f2 u). u \\<in># L #}\"\n  assumes \"\\<forall>u. (u \\<in># L \\<longrightarrow> (((f1 u), (f2 u)) \\<in> r \\<or> (f1 u) = (f2 u)))\"\n  shows \"(M1 = M2) \\<or> ( (M1,M2) \\<in> (mult r) )\"", "lemma mult1_def_lemma :\n  assumes \"M = M0 + {#a#} \\<and> N = M0 + K \\<and> (\\<forall>b. b \\<in># K \\<longrightarrow> (b, a) \\<in> r)\"\n  shows \"(N,M) \\<in> (mult1 r)\"", "lemma mset_ordering_add1:\n  assumes \"(E1,E2) \\<in> (mult r)\"\n  shows \"(E1,E2 + {# a #}) \\<in> (mult r)\"", "lemma mset_ordering_singleton:\n  assumes \"\\<forall>x. (x \\<in># E1 \\<longrightarrow> (x,a) \\<in> r)\"\n  shows \"(E1, {# a #}) \\<in> (mult r)\"", "lemma monotonic_fun_mult1:\n  assumes \"\\<And> t s. ((t,s) \\<in> r \\<Longrightarrow> ((f t), (f s)) \\<in> r)\"\n  assumes \"(E1,E2) \\<in> (mult1 r)\"\n  shows \"({# (f x). x \\<in># E1 #},{# (f x). x \\<in># E2 #}) \\<in>  (mult1 r)\"", "lemma monotonic_fun_mult:\n  assumes \"\\<And> t s. ((t,s) \\<in> r \\<Longrightarrow> ((f t), (f s)) \\<in> r)\"\n  assumes \"(E1,E2) \\<in> (mult r)\"\n  shows \"({# (f x). x \\<in># E1 #},{# (f x). x \\<in># E2 #}) \\<in>  (mult r)\"", "lemma mset_set_insert_eq:\n  assumes \"finite E\"\n  shows \"mset_set (E \\<union> { x }) \\<subseteq># mset_set E + {# x #}\"", "lemma mset_set_insert:\n  assumes \"x \\<notin> E\"\n  assumes \"finite E\"\n  shows \"mset_set (E \\<union> { x }) = mset_set E + {# x #}\"", "lemma mset_image_comp:\n  shows \"{# (f x). x \\<in># {# (g x). x \\<in># E #} #} = {# (f (g x)). x \\<in># E #}\"", "lemma mset_set_mset_image:\n  shows \"\\<And> E. card E = N \\<Longrightarrow> finite E \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#  {# (g x). x \\<in># mset_set (E) #}\"", "lemma split_mset_set: \n  assumes \"C = C1 \\<union> C2\"\n  assumes \"C1 \\<inter> C2 = {}\"\n  assumes \"finite C1\"\n  assumes \"finite C2\"\n  shows \"(mset_set C) = (mset_set C1) + (mset_set C2)\"", "lemma image_mset_thm:\n  assumes \"E = {# (f x). x \\<in># E' #}\"\n  assumes \"x \\<in># E\"\n  shows \"\\<exists> y. ((y \\<in># E') \\<and> x = (f y))\"", "lemma split_image_mset:\n  assumes \"M = M1 + M2\"\n  shows \"{# (f x). x \\<in># M #} = {# (f x). x \\<in># M1 #} + {# (f x). x \\<in># M2 #}\""], "translations": [["", "lemma mset_set_inclusion:\n  assumes \"finite E2\"\n  assumes \"E1 \\<subset> E2\"  \n  shows \"mset_set E1 \\<subset># (mset_set E2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mset_set E1 \\<subset># mset_set E2", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> mset_set E1 \\<subset># mset_set E2 \\<Longrightarrow> False", "let ?s1 = \"mset_set E1\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> mset_set E1 \\<subset># mset_set E2 \\<Longrightarrow> False", "let ?s2 = \"mset_set E2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> mset_set E1 \\<subset># mset_set E2 \\<Longrightarrow> False", "assume \"\\<not> ?s1 \\<subset># ?s2\""], ["proof (state)\nthis:\n  \\<not> mset_set E1 \\<subset># mset_set E2\n\ngoal (1 subgoal):\n 1. \\<not> mset_set E1 \\<subset># mset_set E2 \\<Longrightarrow> False", "from assms(1) and assms(2)"], ["proof (chain)\npicking this:\n  finite E2\n  E1 \\<subset> E2", "have \"finite E1\""], ["proof (prove)\nusing this:\n  finite E2\n  E1 \\<subset> E2\n\ngoal (1 subgoal):\n 1. finite E1", "using finite_subset less_imp_le"], ["proof (prove)\nusing this:\n  finite E2\n  E1 \\<subset> E2\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n  ?x < ?y \\<Longrightarrow> ?x \\<le> ?y\n\ngoal (1 subgoal):\n 1. finite E1", "by auto"], ["proof (state)\nthis:\n  finite E1\n\ngoal (1 subgoal):\n 1. \\<not> mset_set E1 \\<subset># mset_set E2 \\<Longrightarrow> False", "from \\<open>\\<not> ?s1 \\<subset># ?s2\\<close>"], ["proof (chain)\npicking this:\n  \\<not> mset_set E1 \\<subset># mset_set E2", "obtain x where \"(count ?s1 x > count ?s2 x)\""], ["proof (prove)\nusing this:\n  \\<not> mset_set E1 \\<subset># mset_set E2\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        count (mset_set E2) x < count (mset_set E1) x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using subseteq_mset_def [of ?s1 ?s2]"], ["proof (prove)\nusing this:\n  \\<not> mset_set E1 \\<subset># mset_set E2\n  (mset_set E1 \\<subseteq># mset_set E2) =\n  (\\<forall>a. count (mset_set E1) a \\<le> count (mset_set E2) a)\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        count (mset_set E2) x < count (mset_set E1) x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis assms(1) assms(2) finite_set_mset_mset_set finite_subset less_imp_le \n      less_le not_le_imp_less subset_mset.le_less)"], ["proof (state)\nthis:\n  count (mset_set E2) x < count (mset_set E1) x\n\ngoal (1 subgoal):\n 1. \\<not> mset_set E1 \\<subset># mset_set E2 \\<Longrightarrow> False", "from this"], ["proof (chain)\npicking this:\n  count (mset_set E2) x < count (mset_set E1) x", "have \"count ?s1 x > 0\""], ["proof (prove)\nusing this:\n  count (mset_set E2) x < count (mset_set E1) x\n\ngoal (1 subgoal):\n 1. 0 < count (mset_set E1) x", "by linarith"], ["proof (state)\nthis:\n  0 < count (mset_set E1) x\n\ngoal (1 subgoal):\n 1. \\<not> mset_set E1 \\<subset># mset_set E2 \\<Longrightarrow> False", "from this and \\<open>finite E1\\<close>"], ["proof (chain)\npicking this:\n  0 < count (mset_set E1) x\n  finite E1", "have \"count ?s1 x = 1\" and \"x \\<in> E1\""], ["proof (prove)\nusing this:\n  0 < count (mset_set E1) x\n  finite E1\n\ngoal (1 subgoal):\n 1. count (mset_set E1) x = 1 &&& x \\<in> E1", "using subseteq_mset_def"], ["proof (prove)\nusing this:\n  0 < count (mset_set E1) x\n  finite E1\n  (?A \\<subseteq># ?B) = (\\<forall>a. count ?A a \\<le> count ?B a)\n\ngoal (1 subgoal):\n 1. count (mset_set E1) x = 1 &&& x \\<in> E1", "by auto"], ["proof (state)\nthis:\n  count (mset_set E1) x = 1\n  x \\<in> E1\n\ngoal (1 subgoal):\n 1. \\<not> mset_set E1 \\<subset># mset_set E2 \\<Longrightarrow> False", "from this and assms(2)"], ["proof (chain)\npicking this:\n  count (mset_set E1) x = 1\n  x \\<in> E1\n  E1 \\<subset> E2", "have \"x \\<in> E2\""], ["proof (prove)\nusing this:\n  count (mset_set E1) x = 1\n  x \\<in> E1\n  E1 \\<subset> E2\n\ngoal (1 subgoal):\n 1. x \\<in> E2", "by auto"], ["proof (state)\nthis:\n  x \\<in> E2\n\ngoal (1 subgoal):\n 1. \\<not> mset_set E1 \\<subset># mset_set E2 \\<Longrightarrow> False", "from this and \\<open>finite E2\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> E2\n  finite E2", "have \"count ?s2 x = 1\""], ["proof (prove)\nusing this:\n  x \\<in> E2\n  finite E2\n\ngoal (1 subgoal):\n 1. count (mset_set E2) x = 1", "by auto"], ["proof (state)\nthis:\n  count (mset_set E2) x = 1\n\ngoal (1 subgoal):\n 1. \\<not> mset_set E1 \\<subset># mset_set E2 \\<Longrightarrow> False", "from this and \\<open>count ?s1 x = 1\\<close> and \\<open>(count ?s1 x > count ?s2 x)\\<close>"], ["proof (chain)\npicking this:\n  count (mset_set E2) x = 1\n  count (mset_set E1) x = 1\n  count (mset_set E2) x < count (mset_set E1) x", "show False"], ["proof (prove)\nusing this:\n  count (mset_set E2) x = 1\n  count (mset_set E1) x = 1\n  count (mset_set E2) x < count (mset_set E1) x\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mset_ordering_addition:\n  assumes \"A = B + C\"\n  shows \"B \\<subseteq># A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<subseteq># A", "using assms"], ["proof (prove)\nusing this:\n  A = B + C\n\ngoal (1 subgoal):\n 1. B \\<subseteq># A", "by simp"], ["", "lemma equal_image_mset:\n  assumes \"\\<forall>x \\<in> E. (f x) = (g x)\"\n  shows \"{# (f x). x \\<in># (mset_set E) #} = {# (g x). x \\<in># (mset_set E)  #}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. image_mset f (mset_set E) = image_mset g (mset_set E)", "by (meson assms count_eq_zero_iff count_mset_set(3) image_mset_cong)"], ["", "lemma multiset_order_inclusion:\n  assumes \"E \\<subset># F\"\n  assumes \"trans r\"\n  shows \"(E,F) \\<in> (mult r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (E, F) \\<in> mult r", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (E, F) \\<in> mult r", "let ?G = \"F-E\""], ["proof (state)\ngoal (1 subgoal):\n 1. (E, F) \\<in> mult r", "from assms(1)"], ["proof (chain)\npicking this:\n  E \\<subset># F", "have \"F = E +?G\""], ["proof (prove)\nusing this:\n  E \\<subset># F\n\ngoal (1 subgoal):\n 1. F = E + (F - E)", "by (simp add: subset_mset.add_diff_inverse subset_mset_def)"], ["proof (state)\nthis:\n  F = E + (F - E)\n\ngoal (1 subgoal):\n 1. (E, F) \\<in> mult r", "from this assms(1)"], ["proof (chain)\npicking this:\n  F = E + (F - E)\n  E \\<subset># F", "have \"?G \\<noteq> {#}\""], ["proof (prove)\nusing this:\n  F = E + (F - E)\n  E \\<subset># F\n\ngoal (1 subgoal):\n 1. F - E \\<noteq> {#}", "by fastforce"], ["proof (state)\nthis:\n  F - E \\<noteq> {#}\n\ngoal (1 subgoal):\n 1. (E, F) \\<in> mult r", "have \"E = E + {#}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. E = E + {#}", "by auto"], ["proof (state)\nthis:\n  E = E + {#}\n\ngoal (1 subgoal):\n 1. (E, F) \\<in> mult r", "from this \\<open>F = E +?G\\<close>  \\<open>?G \\<noteq> {#}\\<close> assms(2)"], ["proof (chain)\npicking this:\n  E = E + {#}\n  F = E + (F - E)\n  F - E \\<noteq> {#}\n  trans r", "show ?thesis"], ["proof (prove)\nusing this:\n  E = E + {#}\n  F = E + (F - E)\n  F - E \\<noteq> {#}\n  trans r\n\ngoal (1 subgoal):\n 1. (E, F) \\<in> mult r", "using one_step_implies_mult [of ?G \"{#}\" r E]"], ["proof (prove)\nusing this:\n  E = E + {#}\n  F = E + (F - E)\n  F - E \\<noteq> {#}\n  trans r\n  \\<lbrakk>F - E \\<noteq> {#};\n   \\<forall>k\\<in>#{#}. \\<exists>j\\<in>#F - E. (k, j) \\<in> r\\<rbrakk>\n  \\<Longrightarrow> (E + {#}, E + (F - E)) \\<in> mult r\n\ngoal (1 subgoal):\n 1. (E, F) \\<in> mult r", "by auto"], ["proof (state)\nthis:\n  (E, F) \\<in> mult r\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma multiset_order_inclusion_eq:\n  assumes \"E \\<subseteq># F\"\n  assumes \"trans r\"\n  shows \"E = F \\<or> (E,F) \\<in> (mult r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. E = F \\<or> (E, F) \\<in> mult r", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> E = F \\<or> (E, F) \\<in> mult r\n 2. \\<not> ?P \\<Longrightarrow> E = F \\<or> (E, F) \\<in> mult r", "assume \"E = F\""], ["proof (state)\nthis:\n  E = F\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> E = F \\<or> (E, F) \\<in> mult r\n 2. \\<not> ?P \\<Longrightarrow> E = F \\<or> (E, F) \\<in> mult r", "then"], ["proof (chain)\npicking this:\n  E = F", "show ?thesis"], ["proof (prove)\nusing this:\n  E = F\n\ngoal (1 subgoal):\n 1. E = F \\<or> (E, F) \\<in> mult r", "by auto"], ["proof (state)\nthis:\n  E = F \\<or> (E, F) \\<in> mult r\n\ngoal (1 subgoal):\n 1. E \\<noteq> F \\<Longrightarrow> E = F \\<or> (E, F) \\<in> mult r", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. E \\<noteq> F \\<Longrightarrow> E = F \\<or> (E, F) \\<in> mult r", "assume \"E \\<noteq> F\""], ["proof (state)\nthis:\n  E \\<noteq> F\n\ngoal (1 subgoal):\n 1. E \\<noteq> F \\<Longrightarrow> E = F \\<or> (E, F) \\<in> mult r", "from this and assms(1)"], ["proof (chain)\npicking this:\n  E \\<noteq> F\n  E \\<subseteq># F", "have \"E \\<subset># F\""], ["proof (prove)\nusing this:\n  E \\<noteq> F\n  E \\<subseteq># F\n\ngoal (1 subgoal):\n 1. E \\<subset># F", "by auto"], ["proof (state)\nthis:\n  E \\<subset># F\n\ngoal (1 subgoal):\n 1. E \\<noteq> F \\<Longrightarrow> E = F \\<or> (E, F) \\<in> mult r", "from this assms(2) and multiset_order_inclusion"], ["proof (chain)\npicking this:\n  E \\<subset># F\n  trans r\n  \\<lbrakk>?E \\<subset># ?F; trans ?r\\<rbrakk>\n  \\<Longrightarrow> (?E, ?F) \\<in> mult ?r", "show ?thesis"], ["proof (prove)\nusing this:\n  E \\<subset># F\n  trans r\n  \\<lbrakk>?E \\<subset># ?F; trans ?r\\<rbrakk>\n  \\<Longrightarrow> (?E, ?F) \\<in> mult ?r\n\ngoal (1 subgoal):\n 1. E = F \\<or> (E, F) \\<in> mult r", "by auto"], ["proof (state)\nthis:\n  E = F \\<or> (E, F) \\<in> mult r\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma image_mset_ordering:\n  assumes \"M1 = {# (f1 u). u \\<in># L #}\"\n  assumes \"M2 = {# (f2 u). u \\<in># L #}\"\n  assumes \"\\<forall>u. (u \\<in># L \\<longrightarrow> (((f1 u), (f2 u)) \\<in> r \\<or> (f1 u) = (f2 u)))\"\n  assumes \"\\<exists>u. (u \\<in># L \\<and> ((f1 u), (f2 u)) \\<in> r)\"\n  assumes \"irrefl r\"\n  shows \"( (M1,M2) \\<in> (mult r) )\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (M1, M2) \\<in> mult r", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (M1, M2) \\<in> mult r", "let ?L' = \"{# u \\<in># L.  (f1 u) = (f2 u) #}\""], ["proof (state)\ngoal (1 subgoal):\n 1. (M1, M2) \\<in> mult r", "let ?L'' = \"{# u \\<in># L.  (f1 u) \\<noteq> (f2 u) #}\""], ["proof (state)\ngoal (1 subgoal):\n 1. (M1, M2) \\<in> mult r", "have \"L = ?L' + ?L''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. L = {#u \\<in># L. f1 u = f2 u#} + {#u \\<in># L. f1 u \\<noteq> f2 u#}", "by (simp)"], ["proof (state)\nthis:\n  L = {#u \\<in># L. f1 u = f2 u#} + {#u \\<in># L. f1 u \\<noteq> f2 u#}\n\ngoal (1 subgoal):\n 1. (M1, M2) \\<in> mult r", "from assms(3)"], ["proof (chain)\npicking this:\n  \\<forall>u.\n     u \\<in># L \\<longrightarrow> (f1 u, f2 u) \\<in> r \\<or> f1 u = f2 u", "have \"\\<forall>u. (u \\<in># ?L'' \\<longrightarrow> ((f1 u),(f2 u)) \\<in> r)\""], ["proof (prove)\nusing this:\n  \\<forall>u.\n     u \\<in># L \\<longrightarrow> (f1 u, f2 u) \\<in> r \\<or> f1 u = f2 u\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       u \\<in># {#u \\<in># L. f1 u \\<noteq> f2 u#} \\<longrightarrow>\n       (f1 u, f2 u) \\<in> r", "by auto"], ["proof (state)\nthis:\n  \\<forall>u.\n     u \\<in># {#u \\<in># L. f1 u \\<noteq> f2 u#} \\<longrightarrow>\n     (f1 u, f2 u) \\<in> r\n\ngoal (1 subgoal):\n 1. (M1, M2) \\<in> mult r", "let ?M1' = \"{# (f1 u). u \\<in># ?L' #}\""], ["proof (state)\ngoal (1 subgoal):\n 1. (M1, M2) \\<in> mult r", "let ?M2' = \"{# (f2 u). u \\<in># ?L' #}\""], ["proof (state)\ngoal (1 subgoal):\n 1. (M1, M2) \\<in> mult r", "have \"?M1' = ?M2'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. image_mset f1 {#u \\<in># L. f1 u = f2 u#} =\n    image_mset f2 {#u \\<in># L. f1 u = f2 u#}", "by (metis (mono_tags, lifting) mem_Collect_eq multiset.map_cong0 set_mset_filter)"], ["proof (state)\nthis:\n  image_mset f1 {#u \\<in># L. f1 u = f2 u#} =\n  image_mset f2 {#u \\<in># L. f1 u = f2 u#}\n\ngoal (1 subgoal):\n 1. (M1, M2) \\<in> mult r", "let ?M1'' = \"{# (f1 u). u \\<in># ?L'' #}\""], ["proof (state)\ngoal (1 subgoal):\n 1. (M1, M2) \\<in> mult r", "let ?M2'' = \"{# (f2 u). u \\<in># ?L'' #}\""], ["proof (state)\ngoal (1 subgoal):\n 1. (M1, M2) \\<in> mult r", "from \\<open>L = ?L' + ?L''\\<close>"], ["proof (chain)\npicking this:\n  L = {#u \\<in># L. f1 u = f2 u#} + {#u \\<in># L. f1 u \\<noteq> f2 u#}", "have \"M1 = ?M1' + ?M1''\""], ["proof (prove)\nusing this:\n  L = {#u \\<in># L. f1 u = f2 u#} + {#u \\<in># L. f1 u \\<noteq> f2 u#}\n\ngoal (1 subgoal):\n 1. M1 =\n    image_mset f1 {#u \\<in># L. f1 u = f2 u#} +\n    image_mset f1 {#u \\<in># L. f1 u \\<noteq> f2 u#}", "by (metis assms(1) image_mset_union)"], ["proof (state)\nthis:\n  M1 =\n  image_mset f1 {#u \\<in># L. f1 u = f2 u#} +\n  image_mset f1 {#u \\<in># L. f1 u \\<noteq> f2 u#}\n\ngoal (1 subgoal):\n 1. (M1, M2) \\<in> mult r", "from \\<open>L = ?L' + ?L''\\<close>"], ["proof (chain)\npicking this:\n  L = {#u \\<in># L. f1 u = f2 u#} + {#u \\<in># L. f1 u \\<noteq> f2 u#}", "have \"M2 = ?M2' + ?M2''\""], ["proof (prove)\nusing this:\n  L = {#u \\<in># L. f1 u = f2 u#} + {#u \\<in># L. f1 u \\<noteq> f2 u#}\n\ngoal (1 subgoal):\n 1. M2 =\n    image_mset f2 {#u \\<in># L. f1 u = f2 u#} +\n    image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}", "by (metis assms(2) image_mset_union)"], ["proof (state)\nthis:\n  M2 =\n  image_mset f2 {#u \\<in># L. f1 u = f2 u#} +\n  image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}\n\ngoal (1 subgoal):\n 1. (M1, M2) \\<in> mult r", "have dom: \"(\\<forall>k \\<in> set_mset ?M1''. \\<exists>j \\<in> set_mset ?M2''. (k, j) \\<in> r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>k\\<in>#image_mset f1 {#u \\<in># L. f1 u \\<noteq> f2 u#}.\n       \\<exists>j\\<in>#image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}.\n          (k, j) \\<in> r", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in># image_mset f1\n                 {#u \\<in># L. f1 u \\<noteq> f2 u#} \\<Longrightarrow>\n       \\<exists>j\\<in>#image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}.\n          (k, j) \\<in> r", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in># image_mset f1\n                 {#u \\<in># L. f1 u \\<noteq> f2 u#} \\<Longrightarrow>\n       \\<exists>j\\<in>#image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}.\n          (k, j) \\<in> r", "assume \"k \\<in> set_mset ?M1''\""], ["proof (state)\nthis:\n  k \\<in># image_mset f1 {#u \\<in># L. f1 u \\<noteq> f2 u#}\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in># image_mset f1\n                 {#u \\<in># L. f1 u \\<noteq> f2 u#} \\<Longrightarrow>\n       \\<exists>j\\<in>#image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}.\n          (k, j) \\<in> r", "from this"], ["proof (chain)\npicking this:\n  k \\<in># image_mset f1 {#u \\<in># L. f1 u \\<noteq> f2 u#}", "obtain u where \"k = (f1 u)\" and \"u \\<in># ?L''\""], ["proof (prove)\nusing this:\n  k \\<in># image_mset f1 {#u \\<in># L. f1 u \\<noteq> f2 u#}\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>k = f1 u;\n         u \\<in># {#u \\<in># L. f1 u \\<noteq> f2 u#}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  k = f1 u\n  u \\<in># {#u \\<in># L. f1 u \\<noteq> f2 u#}\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in># image_mset f1\n                 {#u \\<in># L. f1 u \\<noteq> f2 u#} \\<Longrightarrow>\n       \\<exists>j\\<in>#image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}.\n          (k, j) \\<in> r", "from \\<open>u \\<in># ?L''\\<close>"], ["proof (chain)\npicking this:\n  u \\<in># {#u \\<in># L. f1 u \\<noteq> f2 u#}", "have \"(f2 u) \\<in># ?M2''\""], ["proof (prove)\nusing this:\n  u \\<in># {#u \\<in># L. f1 u \\<noteq> f2 u#}\n\ngoal (1 subgoal):\n 1. f2 u \\<in># image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}", "by simp"], ["proof (state)\nthis:\n  f2 u \\<in># image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in># image_mset f1\n                 {#u \\<in># L. f1 u \\<noteq> f2 u#} \\<Longrightarrow>\n       \\<exists>j\\<in>#image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}.\n          (k, j) \\<in> r", "from \\<open>\\<forall>u. (u \\<in># ?L'' \\<longrightarrow> ((f1 u),(f2 u)) \\<in> r)\\<close> and \\<open>u \\<in># ?L''\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>u.\n     u \\<in># {#u \\<in># L. f1 u \\<noteq> f2 u#} \\<longrightarrow>\n     (f1 u, f2 u) \\<in> r\n  u \\<in># {#u \\<in># L. f1 u \\<noteq> f2 u#}", "have \"((f1 u),(f2 u)) \\<in> r\""], ["proof (prove)\nusing this:\n  \\<forall>u.\n     u \\<in># {#u \\<in># L. f1 u \\<noteq> f2 u#} \\<longrightarrow>\n     (f1 u, f2 u) \\<in> r\n  u \\<in># {#u \\<in># L. f1 u \\<noteq> f2 u#}\n\ngoal (1 subgoal):\n 1. (f1 u, f2 u) \\<in> r", "by auto"], ["proof (state)\nthis:\n  (f1 u, f2 u) \\<in> r\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in># image_mset f1\n                 {#u \\<in># L. f1 u \\<noteq> f2 u#} \\<Longrightarrow>\n       \\<exists>j\\<in>#image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}.\n          (k, j) \\<in> r", "from this and \\<open>k = (f1 u)\\<close> and \\<open>(f2 u) \\<in> set_mset ?M2''\\<close>"], ["proof (chain)\npicking this:\n  (f1 u, f2 u) \\<in> r\n  k = f1 u\n  f2 u \\<in># image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}", "show \"\\<exists>j \\<in> set_mset ?M2''. (k, j) \\<in> r\""], ["proof (prove)\nusing this:\n  (f1 u, f2 u) \\<in> r\n  k = f1 u\n  f2 u \\<in># image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}\n\ngoal (1 subgoal):\n 1. \\<exists>j\\<in>#image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}.\n       (k, j) \\<in> r", "by auto"], ["proof (state)\nthis:\n  \\<exists>j\\<in>#image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}.\n     (k, j) \\<in> r\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>k\\<in>#image_mset f1 {#u \\<in># L. f1 u \\<noteq> f2 u#}.\n     \\<exists>j\\<in>#image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}.\n        (k, j) \\<in> r\n\ngoal (1 subgoal):\n 1. (M1, M2) \\<in> mult r", "have \"?L'' \\<noteq> {#}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {#u \\<in># L. f1 u \\<noteq> f2 u#} \\<noteq> {#}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {#u \\<in># L. f1 u \\<noteq> f2 u#} \\<noteq> {#}", "from assms(4)"], ["proof (chain)\npicking this:\n  \\<exists>u. u \\<in># L \\<and> (f1 u, f2 u) \\<in> r", "obtain u where \"u \\<in># L\" and \"( (f1 u),(f2 u) ) \\<in> r\""], ["proof (prove)\nusing this:\n  \\<exists>u. u \\<in># L \\<and> (f1 u, f2 u) \\<in> r\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>u \\<in># L; (f1 u, f2 u) \\<in> r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  u \\<in># L\n  (f1 u, f2 u) \\<in> r\n\ngoal (1 subgoal):\n 1. {#u \\<in># L. f1 u \\<noteq> f2 u#} \\<noteq> {#}", "from assms(5) \\<open>( (f1 u),(f2 u) ) \\<in> r\\<close>"], ["proof (chain)\npicking this:\n  irrefl r\n  (f1 u, f2 u) \\<in> r", "have \"( (f1 u) \\<noteq> (f2 u) )\""], ["proof (prove)\nusing this:\n  irrefl r\n  (f1 u, f2 u) \\<in> r\n\ngoal (1 subgoal):\n 1. f1 u \\<noteq> f2 u", "unfolding irrefl_def"], ["proof (prove)\nusing this:\n  \\<forall>a. (a, a) \\<notin> r\n  (f1 u, f2 u) \\<in> r\n\ngoal (1 subgoal):\n 1. f1 u \\<noteq> f2 u", "by fastforce"], ["proof (state)\nthis:\n  f1 u \\<noteq> f2 u\n\ngoal (1 subgoal):\n 1. {#u \\<in># L. f1 u \\<noteq> f2 u#} \\<noteq> {#}", "from \\<open>u \\<in># L\\<close> \\<open>( (f1 u) \\<noteq> (f2 u) )\\<close>"], ["proof (chain)\npicking this:\n  u \\<in># L\n  f1 u \\<noteq> f2 u", "have \"u \\<in># ?L''\""], ["proof (prove)\nusing this:\n  u \\<in># L\n  f1 u \\<noteq> f2 u\n\ngoal (1 subgoal):\n 1. u \\<in># {#u \\<in># L. f1 u \\<noteq> f2 u#}", "by auto"], ["proof (state)\nthis:\n  u \\<in># {#u \\<in># L. f1 u \\<noteq> f2 u#}\n\ngoal (1 subgoal):\n 1. {#u \\<in># L. f1 u \\<noteq> f2 u#} \\<noteq> {#}", "from this"], ["proof (chain)\npicking this:\n  u \\<in># {#u \\<in># L. f1 u \\<noteq> f2 u#}", "show ?thesis"], ["proof (prove)\nusing this:\n  u \\<in># {#u \\<in># L. f1 u \\<noteq> f2 u#}\n\ngoal (1 subgoal):\n 1. {#u \\<in># L. f1 u \\<noteq> f2 u#} \\<noteq> {#}", "by force"], ["proof (state)\nthis:\n  {#u \\<in># L. f1 u \\<noteq> f2 u#} \\<noteq> {#}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {#u \\<in># L. f1 u \\<noteq> f2 u#} \\<noteq> {#}\n\ngoal (1 subgoal):\n 1. (M1, M2) \\<in> mult r", "from this"], ["proof (chain)\npicking this:\n  {#u \\<in># L. f1 u \\<noteq> f2 u#} \\<noteq> {#}", "have  \"?M2'' \\<noteq> {#}\""], ["proof (prove)\nusing this:\n  {#u \\<in># L. f1 u \\<noteq> f2 u#} \\<noteq> {#}\n\ngoal (1 subgoal):\n 1. image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#} \\<noteq> {#}", "by auto"], ["proof (state)\nthis:\n  image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#} \\<noteq> {#}\n\ngoal (1 subgoal):\n 1. (M1, M2) \\<in> mult r", "from this and dom and \\<open>M1 = ?M1' + ?M1''\\<close> \\<open>M2 = ?M2' + ?M2''\\<close> \\<open>?M1'=?M2'\\<close>"], ["proof (chain)\npicking this:\n  image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#} \\<noteq> {#}\n  \\<forall>k\\<in>#image_mset f1 {#u \\<in># L. f1 u \\<noteq> f2 u#}.\n     \\<exists>j\\<in>#image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}.\n        (k, j) \\<in> r\n  M1 =\n  image_mset f1 {#u \\<in># L. f1 u = f2 u#} +\n  image_mset f1 {#u \\<in># L. f1 u \\<noteq> f2 u#}\n  M2 =\n  image_mset f2 {#u \\<in># L. f1 u = f2 u#} +\n  image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}\n  image_mset f1 {#u \\<in># L. f1 u = f2 u#} =\n  image_mset f2 {#u \\<in># L. f1 u = f2 u#}", "show \"(M1,M2) \\<in> (mult r)\""], ["proof (prove)\nusing this:\n  image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#} \\<noteq> {#}\n  \\<forall>k\\<in>#image_mset f1 {#u \\<in># L. f1 u \\<noteq> f2 u#}.\n     \\<exists>j\\<in>#image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}.\n        (k, j) \\<in> r\n  M1 =\n  image_mset f1 {#u \\<in># L. f1 u = f2 u#} +\n  image_mset f1 {#u \\<in># L. f1 u \\<noteq> f2 u#}\n  M2 =\n  image_mset f2 {#u \\<in># L. f1 u = f2 u#} +\n  image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}\n  image_mset f1 {#u \\<in># L. f1 u = f2 u#} =\n  image_mset f2 {#u \\<in># L. f1 u = f2 u#}\n\ngoal (1 subgoal):\n 1. (M1, M2) \\<in> mult r", "by (simp add: one_step_implies_mult)"], ["proof (state)\nthis:\n  (M1, M2) \\<in> mult r\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma image_mset_ordering_eq:\n  assumes \"M1 = {# (f1 u). u \\<in># L #}\"\n  assumes \"M2 = {# (f2 u). u \\<in># L #}\"\n  assumes \"\\<forall>u. (u \\<in># L \\<longrightarrow> (((f1 u), (f2 u)) \\<in> r \\<or> (f1 u) = (f2 u)))\"\n  shows \"(M1 = M2) \\<or> ( (M1,M2) \\<in> (mult r) )\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M1 = M2 \\<or> (M1, M2) \\<in> mult r", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> M1 = M2 \\<or> (M1, M2) \\<in> mult r\n 2. \\<not> ?P \\<Longrightarrow> M1 = M2 \\<or> (M1, M2) \\<in> mult r", "assume \"M1 = M2\""], ["proof (state)\nthis:\n  M1 = M2\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> M1 = M2 \\<or> (M1, M2) \\<in> mult r\n 2. \\<not> ?P \\<Longrightarrow> M1 = M2 \\<or> (M1, M2) \\<in> mult r", "then"], ["proof (chain)\npicking this:\n  M1 = M2", "show ?thesis"], ["proof (prove)\nusing this:\n  M1 = M2\n\ngoal (1 subgoal):\n 1. M1 = M2 \\<or> (M1, M2) \\<in> mult r", "by auto"], ["proof (state)\nthis:\n  M1 = M2 \\<or> (M1, M2) \\<in> mult r\n\ngoal (1 subgoal):\n 1. M1 \\<noteq> M2 \\<Longrightarrow> M1 = M2 \\<or> (M1, M2) \\<in> mult r", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. M1 \\<noteq> M2 \\<Longrightarrow> M1 = M2 \\<or> (M1, M2) \\<in> mult r", "assume \"M1 \\<noteq> M2\""], ["proof (state)\nthis:\n  M1 \\<noteq> M2\n\ngoal (1 subgoal):\n 1. M1 \\<noteq> M2 \\<Longrightarrow> M1 = M2 \\<or> (M1, M2) \\<in> mult r", "let ?L' = \"{# u \\<in># L.  (f1 u) = (f2 u) #}\""], ["proof (state)\ngoal (1 subgoal):\n 1. M1 \\<noteq> M2 \\<Longrightarrow> M1 = M2 \\<or> (M1, M2) \\<in> mult r", "let ?L'' = \"{# u \\<in># L.  (f1 u) \\<noteq> (f2 u) #}\""], ["proof (state)\ngoal (1 subgoal):\n 1. M1 \\<noteq> M2 \\<Longrightarrow> M1 = M2 \\<or> (M1, M2) \\<in> mult r", "have \"L = ?L' + ?L''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. L = {#u \\<in># L. f1 u = f2 u#} + {#u \\<in># L. f1 u \\<noteq> f2 u#}", "by (simp)"], ["proof (state)\nthis:\n  L = {#u \\<in># L. f1 u = f2 u#} + {#u \\<in># L. f1 u \\<noteq> f2 u#}\n\ngoal (1 subgoal):\n 1. M1 \\<noteq> M2 \\<Longrightarrow> M1 = M2 \\<or> (M1, M2) \\<in> mult r", "from assms(3)"], ["proof (chain)\npicking this:\n  \\<forall>u.\n     u \\<in># L \\<longrightarrow> (f1 u, f2 u) \\<in> r \\<or> f1 u = f2 u", "have \"\\<forall>u. (u \\<in># ?L'' \\<longrightarrow> ((f1 u),(f2 u)) \\<in> r)\""], ["proof (prove)\nusing this:\n  \\<forall>u.\n     u \\<in># L \\<longrightarrow> (f1 u, f2 u) \\<in> r \\<or> f1 u = f2 u\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       u \\<in># {#u \\<in># L. f1 u \\<noteq> f2 u#} \\<longrightarrow>\n       (f1 u, f2 u) \\<in> r", "by auto"], ["proof (state)\nthis:\n  \\<forall>u.\n     u \\<in># {#u \\<in># L. f1 u \\<noteq> f2 u#} \\<longrightarrow>\n     (f1 u, f2 u) \\<in> r\n\ngoal (1 subgoal):\n 1. M1 \\<noteq> M2 \\<Longrightarrow> M1 = M2 \\<or> (M1, M2) \\<in> mult r", "let ?M1' = \"{# (f1 u). u \\<in># ?L' #}\""], ["proof (state)\ngoal (1 subgoal):\n 1. M1 \\<noteq> M2 \\<Longrightarrow> M1 = M2 \\<or> (M1, M2) \\<in> mult r", "let ?M2' = \"{# (f2 u). u \\<in># ?L' #}\""], ["proof (state)\ngoal (1 subgoal):\n 1. M1 \\<noteq> M2 \\<Longrightarrow> M1 = M2 \\<or> (M1, M2) \\<in> mult r", "have \"?M1' = ?M2'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. image_mset f1 {#u \\<in># L. f1 u = f2 u#} =\n    image_mset f2 {#u \\<in># L. f1 u = f2 u#}", "by (metis (mono_tags, lifting) mem_Collect_eq multiset.map_cong0 set_mset_filter)"], ["proof (state)\nthis:\n  image_mset f1 {#u \\<in># L. f1 u = f2 u#} =\n  image_mset f2 {#u \\<in># L. f1 u = f2 u#}\n\ngoal (1 subgoal):\n 1. M1 \\<noteq> M2 \\<Longrightarrow> M1 = M2 \\<or> (M1, M2) \\<in> mult r", "let ?M1'' = \"{# (f1 u). u \\<in># ?L'' #}\""], ["proof (state)\ngoal (1 subgoal):\n 1. M1 \\<noteq> M2 \\<Longrightarrow> M1 = M2 \\<or> (M1, M2) \\<in> mult r", "let ?M2'' = \"{# (f2 u). u \\<in># ?L'' #}\""], ["proof (state)\ngoal (1 subgoal):\n 1. M1 \\<noteq> M2 \\<Longrightarrow> M1 = M2 \\<or> (M1, M2) \\<in> mult r", "from \\<open>L = ?L' + ?L''\\<close>"], ["proof (chain)\npicking this:\n  L = {#u \\<in># L. f1 u = f2 u#} + {#u \\<in># L. f1 u \\<noteq> f2 u#}", "have \"M1 = ?M1' + ?M1''\""], ["proof (prove)\nusing this:\n  L = {#u \\<in># L. f1 u = f2 u#} + {#u \\<in># L. f1 u \\<noteq> f2 u#}\n\ngoal (1 subgoal):\n 1. M1 =\n    image_mset f1 {#u \\<in># L. f1 u = f2 u#} +\n    image_mset f1 {#u \\<in># L. f1 u \\<noteq> f2 u#}", "by (metis assms(1) image_mset_union)"], ["proof (state)\nthis:\n  M1 =\n  image_mset f1 {#u \\<in># L. f1 u = f2 u#} +\n  image_mset f1 {#u \\<in># L. f1 u \\<noteq> f2 u#}\n\ngoal (1 subgoal):\n 1. M1 \\<noteq> M2 \\<Longrightarrow> M1 = M2 \\<or> (M1, M2) \\<in> mult r", "from \\<open>L = ?L' + ?L''\\<close>"], ["proof (chain)\npicking this:\n  L = {#u \\<in># L. f1 u = f2 u#} + {#u \\<in># L. f1 u \\<noteq> f2 u#}", "have \"M2 = ?M2' + ?M2''\""], ["proof (prove)\nusing this:\n  L = {#u \\<in># L. f1 u = f2 u#} + {#u \\<in># L. f1 u \\<noteq> f2 u#}\n\ngoal (1 subgoal):\n 1. M2 =\n    image_mset f2 {#u \\<in># L. f1 u = f2 u#} +\n    image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}", "by (metis assms(2) image_mset_union)"], ["proof (state)\nthis:\n  M2 =\n  image_mset f2 {#u \\<in># L. f1 u = f2 u#} +\n  image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}\n\ngoal (1 subgoal):\n 1. M1 \\<noteq> M2 \\<Longrightarrow> M1 = M2 \\<or> (M1, M2) \\<in> mult r", "have dom: \"(\\<forall>k \\<in> set_mset ?M1''. \\<exists>j \\<in> set_mset ?M2''. (k, j) \\<in> r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>k\\<in>#image_mset f1 {#u \\<in># L. f1 u \\<noteq> f2 u#}.\n       \\<exists>j\\<in>#image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}.\n          (k, j) \\<in> r", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in># image_mset f1\n                 {#u \\<in># L. f1 u \\<noteq> f2 u#} \\<Longrightarrow>\n       \\<exists>j\\<in>#image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}.\n          (k, j) \\<in> r", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in># image_mset f1\n                 {#u \\<in># L. f1 u \\<noteq> f2 u#} \\<Longrightarrow>\n       \\<exists>j\\<in>#image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}.\n          (k, j) \\<in> r", "assume \"k \\<in> set_mset ?M1''\""], ["proof (state)\nthis:\n  k \\<in># image_mset f1 {#u \\<in># L. f1 u \\<noteq> f2 u#}\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in># image_mset f1\n                 {#u \\<in># L. f1 u \\<noteq> f2 u#} \\<Longrightarrow>\n       \\<exists>j\\<in>#image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}.\n          (k, j) \\<in> r", "from this"], ["proof (chain)\npicking this:\n  k \\<in># image_mset f1 {#u \\<in># L. f1 u \\<noteq> f2 u#}", "obtain u where \"k = (f1 u)\" and \"u \\<in># ?L''\""], ["proof (prove)\nusing this:\n  k \\<in># image_mset f1 {#u \\<in># L. f1 u \\<noteq> f2 u#}\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>k = f1 u;\n         u \\<in># {#u \\<in># L. f1 u \\<noteq> f2 u#}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  k = f1 u\n  u \\<in># {#u \\<in># L. f1 u \\<noteq> f2 u#}\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in># image_mset f1\n                 {#u \\<in># L. f1 u \\<noteq> f2 u#} \\<Longrightarrow>\n       \\<exists>j\\<in>#image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}.\n          (k, j) \\<in> r", "from \\<open>u \\<in># ?L''\\<close>"], ["proof (chain)\npicking this:\n  u \\<in># {#u \\<in># L. f1 u \\<noteq> f2 u#}", "have \"(f2 u) \\<in># ?M2''\""], ["proof (prove)\nusing this:\n  u \\<in># {#u \\<in># L. f1 u \\<noteq> f2 u#}\n\ngoal (1 subgoal):\n 1. f2 u \\<in># image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}", "by simp"], ["proof (state)\nthis:\n  f2 u \\<in># image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in># image_mset f1\n                 {#u \\<in># L. f1 u \\<noteq> f2 u#} \\<Longrightarrow>\n       \\<exists>j\\<in>#image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}.\n          (k, j) \\<in> r", "from \\<open>\\<forall>u. (u \\<in># ?L'' \\<longrightarrow> ((f1 u),(f2 u)) \\<in> r)\\<close> and \\<open>u \\<in># ?L''\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>u.\n     u \\<in># {#u \\<in># L. f1 u \\<noteq> f2 u#} \\<longrightarrow>\n     (f1 u, f2 u) \\<in> r\n  u \\<in># {#u \\<in># L. f1 u \\<noteq> f2 u#}", "have \"((f1 u),(f2 u)) \\<in> r\""], ["proof (prove)\nusing this:\n  \\<forall>u.\n     u \\<in># {#u \\<in># L. f1 u \\<noteq> f2 u#} \\<longrightarrow>\n     (f1 u, f2 u) \\<in> r\n  u \\<in># {#u \\<in># L. f1 u \\<noteq> f2 u#}\n\ngoal (1 subgoal):\n 1. (f1 u, f2 u) \\<in> r", "by auto"], ["proof (state)\nthis:\n  (f1 u, f2 u) \\<in> r\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in># image_mset f1\n                 {#u \\<in># L. f1 u \\<noteq> f2 u#} \\<Longrightarrow>\n       \\<exists>j\\<in>#image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}.\n          (k, j) \\<in> r", "from this and \\<open>k = (f1 u)\\<close> and \\<open>(f2 u) \\<in> set_mset ?M2''\\<close>"], ["proof (chain)\npicking this:\n  (f1 u, f2 u) \\<in> r\n  k = f1 u\n  f2 u \\<in># image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}", "show \"\\<exists>j \\<in> set_mset ?M2''. (k, j) \\<in> r\""], ["proof (prove)\nusing this:\n  (f1 u, f2 u) \\<in> r\n  k = f1 u\n  f2 u \\<in># image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}\n\ngoal (1 subgoal):\n 1. \\<exists>j\\<in>#image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}.\n       (k, j) \\<in> r", "by auto"], ["proof (state)\nthis:\n  \\<exists>j\\<in>#image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}.\n     (k, j) \\<in> r\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>k\\<in>#image_mset f1 {#u \\<in># L. f1 u \\<noteq> f2 u#}.\n     \\<exists>j\\<in>#image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}.\n        (k, j) \\<in> r\n\ngoal (1 subgoal):\n 1. M1 \\<noteq> M2 \\<Longrightarrow> M1 = M2 \\<or> (M1, M2) \\<in> mult r", "from \\<open>M1 \\<noteq> M2\\<close>"], ["proof (chain)\npicking this:\n  M1 \\<noteq> M2", "have  \"?M2'' \\<noteq> {#}\""], ["proof (prove)\nusing this:\n  M1 \\<noteq> M2\n\ngoal (1 subgoal):\n 1. image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#} \\<noteq> {#}", "using \\<open>M1 = image_mset f1 {# u \\<in># L. f1 u = f2 u#} + image_mset f1 {# u \\<in># L. f1 u \\<noteq> f2 u#}\\<close> \\<open>M2 = image_mset f2 {# u \\<in># L. f1 u = f2 u#} + image_mset f2 {# u \\<in># L. f1 u \\<noteq> f2 u#}\\<close> \\<open>image_mset f1 {# u \\<in># L. f1 u = f2 u#} = image_mset f2 {# u \\<in># L. f1 u = f2 u#}\\<close>"], ["proof (prove)\nusing this:\n  M1 \\<noteq> M2\n  M1 =\n  image_mset f1 {#u \\<in># L. f1 u = f2 u#} +\n  image_mset f1 {#u \\<in># L. f1 u \\<noteq> f2 u#}\n  M2 =\n  image_mset f2 {#u \\<in># L. f1 u = f2 u#} +\n  image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}\n  image_mset f1 {#u \\<in># L. f1 u = f2 u#} =\n  image_mset f2 {#u \\<in># L. f1 u = f2 u#}\n\ngoal (1 subgoal):\n 1. image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#} \\<noteq> {#}", "by auto"], ["proof (state)\nthis:\n  image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#} \\<noteq> {#}\n\ngoal (1 subgoal):\n 1. M1 \\<noteq> M2 \\<Longrightarrow> M1 = M2 \\<or> (M1, M2) \\<in> mult r", "from this and dom and \\<open>M1 = ?M1' + ?M1''\\<close> \\<open>M2 = ?M2' + ?M2''\\<close> \\<open>?M1'=?M2'\\<close>"], ["proof (chain)\npicking this:\n  image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#} \\<noteq> {#}\n  \\<forall>k\\<in>#image_mset f1 {#u \\<in># L. f1 u \\<noteq> f2 u#}.\n     \\<exists>j\\<in>#image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}.\n        (k, j) \\<in> r\n  M1 =\n  image_mset f1 {#u \\<in># L. f1 u = f2 u#} +\n  image_mset f1 {#u \\<in># L. f1 u \\<noteq> f2 u#}\n  M2 =\n  image_mset f2 {#u \\<in># L. f1 u = f2 u#} +\n  image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}\n  image_mset f1 {#u \\<in># L. f1 u = f2 u#} =\n  image_mset f2 {#u \\<in># L. f1 u = f2 u#}", "have \"(M1,M2) \\<in> (mult r)\""], ["proof (prove)\nusing this:\n  image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#} \\<noteq> {#}\n  \\<forall>k\\<in>#image_mset f1 {#u \\<in># L. f1 u \\<noteq> f2 u#}.\n     \\<exists>j\\<in>#image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}.\n        (k, j) \\<in> r\n  M1 =\n  image_mset f1 {#u \\<in># L. f1 u = f2 u#} +\n  image_mset f1 {#u \\<in># L. f1 u \\<noteq> f2 u#}\n  M2 =\n  image_mset f2 {#u \\<in># L. f1 u = f2 u#} +\n  image_mset f2 {#u \\<in># L. f1 u \\<noteq> f2 u#}\n  image_mset f1 {#u \\<in># L. f1 u = f2 u#} =\n  image_mset f2 {#u \\<in># L. f1 u = f2 u#}\n\ngoal (1 subgoal):\n 1. (M1, M2) \\<in> mult r", "by (simp add: one_step_implies_mult)"], ["proof (state)\nthis:\n  (M1, M2) \\<in> mult r\n\ngoal (1 subgoal):\n 1. M1 \\<noteq> M2 \\<Longrightarrow> M1 = M2 \\<or> (M1, M2) \\<in> mult r", "from this"], ["proof (chain)\npicking this:\n  (M1, M2) \\<in> mult r", "show ?thesis"], ["proof (prove)\nusing this:\n  (M1, M2) \\<in> mult r\n\ngoal (1 subgoal):\n 1. M1 = M2 \\<or> (M1, M2) \\<in> mult r", "by auto"], ["proof (state)\nthis:\n  M1 = M2 \\<or> (M1, M2) \\<in> mult r\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mult1_def_lemma :\n  assumes \"M = M0 + {#a#} \\<and> N = M0 + K \\<and> (\\<forall>b. b \\<in># K \\<longrightarrow> (b, a) \\<in> r)\"\n  shows \"(N,M) \\<in> (mult1 r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (N, M) \\<in> mult1 r", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (N, M) \\<in> mult1 r", "from assms(1)"], ["proof (chain)\npicking this:\n  M = M0 + {#a#} \\<and>\n  N = M0 + K \\<and>\n  (\\<forall>b. b \\<in># K \\<longrightarrow> (b, a) \\<in> r)", "show ?thesis"], ["proof (prove)\nusing this:\n  M = M0 + {#a#} \\<and>\n  N = M0 + K \\<and>\n  (\\<forall>b. b \\<in># K \\<longrightarrow> (b, a) \\<in> r)\n\ngoal (1 subgoal):\n 1. (N, M) \\<in> mult1 r", "using mult1_def [of r]"], ["proof (prove)\nusing this:\n  M = M0 + {#a#} \\<and>\n  N = M0 + K \\<and>\n  (\\<forall>b. b \\<in># K \\<longrightarrow> (b, a) \\<in> r)\n  mult1 r =\n  {(N, M).\n   \\<exists>a M0 K.\n      M = add_mset a M0 \\<and>\n      N = M0 + K \\<and>\n      (\\<forall>b. b \\<in># K \\<longrightarrow> (b, a) \\<in> r)}\n\ngoal (1 subgoal):\n 1. (N, M) \\<in> mult1 r", "by auto"], ["proof (state)\nthis:\n  (N, M) \\<in> mult1 r\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mset_ordering_add1:\n  assumes \"(E1,E2) \\<in> (mult r)\"\n  shows \"(E1,E2 + {# a #}) \\<in> (mult r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (E1, E2 + {#a#}) \\<in> mult r", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (E1, E2 + {#a#}) \\<in> mult r", "have i: \"(E2,E2 + {# a #}) \\<in> (mult1 r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (E2, E2 + {#a#}) \\<in> mult1 r", "using mult1_def_lemma [of \"E2 + {# a #}\" E2 a E2 \"{#}\" r]"], ["proof (prove)\nusing this:\n  E2 + {#a#} = E2 + {#a#} \\<and>\n  E2 = E2 + {#} \\<and>\n  (\\<forall>b.\n      b \\<in># {#} \\<longrightarrow> (b, a) \\<in> r) \\<Longrightarrow>\n  (E2, E2 + {#a#}) \\<in> mult1 r\n\ngoal (1 subgoal):\n 1. (E2, E2 + {#a#}) \\<in> mult1 r", "by auto"], ["proof (state)\nthis:\n  (E2, E2 + {#a#}) \\<in> mult1 r\n\ngoal (1 subgoal):\n 1. (E1, E2 + {#a#}) \\<in> mult r", "have i: \"(E2,E2 + {# a #}) \\<in> (mult1 r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (E2, E2 + {#a#}) \\<in> mult1 r", "using mult1_def_lemma [of \"E2 + {# a #}\" E2 a E2 \"{#}\" r]"], ["proof (prove)\nusing this:\n  E2 + {#a#} = E2 + {#a#} \\<and>\n  E2 = E2 + {#} \\<and>\n  (\\<forall>b.\n      b \\<in># {#} \\<longrightarrow> (b, a) \\<in> r) \\<Longrightarrow>\n  (E2, E2 + {#a#}) \\<in> mult1 r\n\ngoal (1 subgoal):\n 1. (E2, E2 + {#a#}) \\<in> mult1 r", "by auto"], ["proof (state)\nthis:\n  (E2, E2 + {#a#}) \\<in> mult1 r\n\ngoal (1 subgoal):\n 1. (E1, E2 + {#a#}) \\<in> mult r", "from assms(1)"], ["proof (chain)\npicking this:\n  (E1, E2) \\<in> mult r", "have \"(E1,E2) \\<in> (mult1 r)\\<^sup>+\""], ["proof (prove)\nusing this:\n  (E1, E2) \\<in> mult r\n\ngoal (1 subgoal):\n 1. (E1, E2) \\<in> (mult1 r)\\<^sup>+", "using mult_def"], ["proof (prove)\nusing this:\n  (E1, E2) \\<in> mult r\n  mult ?r = (mult1 ?r)\\<^sup>+\n\ngoal (1 subgoal):\n 1. (E1, E2) \\<in> (mult1 r)\\<^sup>+", "by auto"], ["proof (state)\nthis:\n  (E1, E2) \\<in> (mult1 r)\\<^sup>+\n\ngoal (1 subgoal):\n 1. (E1, E2 + {#a#}) \\<in> mult r", "from this and i"], ["proof (chain)\npicking this:\n  (E1, E2) \\<in> (mult1 r)\\<^sup>+\n  (E2, E2 + {#a#}) \\<in> mult1 r", "have \"(E1,E2 + {# a #}) \\<in> (mult1 r)\\<^sup>+\""], ["proof (prove)\nusing this:\n  (E1, E2) \\<in> (mult1 r)\\<^sup>+\n  (E2, E2 + {#a#}) \\<in> mult1 r\n\ngoal (1 subgoal):\n 1. (E1, E2 + {#a#}) \\<in> (mult1 r)\\<^sup>+", "by auto"], ["proof (state)\nthis:\n  (E1, E2 + {#a#}) \\<in> (mult1 r)\\<^sup>+\n\ngoal (1 subgoal):\n 1. (E1, E2 + {#a#}) \\<in> mult r", "then"], ["proof (chain)\npicking this:\n  (E1, E2 + {#a#}) \\<in> (mult1 r)\\<^sup>+", "show ?thesis"], ["proof (prove)\nusing this:\n  (E1, E2 + {#a#}) \\<in> (mult1 r)\\<^sup>+\n\ngoal (1 subgoal):\n 1. (E1, E2 + {#a#}) \\<in> mult r", "using mult_def"], ["proof (prove)\nusing this:\n  (E1, E2 + {#a#}) \\<in> (mult1 r)\\<^sup>+\n  mult ?r = (mult1 ?r)\\<^sup>+\n\ngoal (1 subgoal):\n 1. (E1, E2 + {#a#}) \\<in> mult r", "by auto"], ["proof (state)\nthis:\n  (E1, E2 + {#a#}) \\<in> mult r\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mset_ordering_singleton:\n  assumes \"\\<forall>x. (x \\<in># E1 \\<longrightarrow> (x,a) \\<in> r)\"\n  shows \"(E1, {# a #}) \\<in> (mult r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (E1, {#a#}) \\<in> mult r", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (E1, {#a#}) \\<in> mult r", "let ?K = \"E1\""], ["proof (state)\ngoal (1 subgoal):\n 1. (E1, {#a#}) \\<in> mult r", "let ?M0 = \"{#}\""], ["proof (state)\ngoal (1 subgoal):\n 1. (E1, {#a#}) \\<in> mult r", "have i: \"E1 = ?M0 + ?K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. E1 = {#} + E1", "by auto"], ["proof (state)\nthis:\n  E1 = {#} + E1\n\ngoal (1 subgoal):\n 1. (E1, {#a#}) \\<in> mult r", "have ii: \"{# a #} = ?M0 + {# a #}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {#a#} = {#} + {#a#}", "by auto"], ["proof (state)\nthis:\n  {#a#} = {#} + {#a#}\n\ngoal (1 subgoal):\n 1. (E1, {#a#}) \\<in> mult r", "from assms(1)"], ["proof (chain)\npicking this:\n  \\<forall>x. x \\<in># E1 \\<longrightarrow> (x, a) \\<in> r", "have iii: \"\\<forall>x. (x \\<in># ?K \\<longrightarrow> (x,a) \\<in> r)\""], ["proof (prove)\nusing this:\n  \\<forall>x. x \\<in># E1 \\<longrightarrow> (x, a) \\<in> r\n\ngoal (1 subgoal):\n 1. \\<forall>x. x \\<in># E1 \\<longrightarrow> (x, a) \\<in> r", "by auto"], ["proof (state)\nthis:\n  \\<forall>x. x \\<in># E1 \\<longrightarrow> (x, a) \\<in> r\n\ngoal (1 subgoal):\n 1. (E1, {#a#}) \\<in> mult r", "from i and ii and iii"], ["proof (chain)\npicking this:\n  E1 = {#} + E1\n  {#a#} = {#} + {#a#}\n  \\<forall>x. x \\<in># E1 \\<longrightarrow> (x, a) \\<in> r", "show ?thesis"], ["proof (prove)\nusing this:\n  E1 = {#} + E1\n  {#a#} = {#} + {#a#}\n  \\<forall>x. x \\<in># E1 \\<longrightarrow> (x, a) \\<in> r\n\ngoal (1 subgoal):\n 1. (E1, {#a#}) \\<in> mult r", "using mult1_def_lemma [of \"{# a #}\"  ?M0 a E1 ?K r] mult_def"], ["proof (prove)\nusing this:\n  E1 = {#} + E1\n  {#a#} = {#} + {#a#}\n  \\<forall>x. x \\<in># E1 \\<longrightarrow> (x, a) \\<in> r\n  {#a#} = {#} + {#a#} \\<and>\n  E1 = {#} + E1 \\<and>\n  (\\<forall>b.\n      b \\<in># E1 \\<longrightarrow> (b, a) \\<in> r) \\<Longrightarrow>\n  (E1, {#a#}) \\<in> mult1 r\n  mult ?r = (mult1 ?r)\\<^sup>+\n\ngoal (1 subgoal):\n 1. (E1, {#a#}) \\<in> mult r", "by auto"], ["proof (state)\nthis:\n  (E1, {#a#}) \\<in> mult r\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma monotonic_fun_mult1:\n  assumes \"\\<And> t s. ((t,s) \\<in> r \\<Longrightarrow> ((f t), (f s)) \\<in> r)\"\n  assumes \"(E1,E2) \\<in> (mult1 r)\"\n  shows \"({# (f x). x \\<in># E1 #},{# (f x). x \\<in># E2 #}) \\<in>  (mult1 r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (image_mset f E1, image_mset f E2) \\<in> mult1 r", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (image_mset f E1, image_mset f E2) \\<in> mult1 r", "let ?E1 = \"{# (f x). x \\<in># E1 #}\""], ["proof (state)\ngoal (1 subgoal):\n 1. (image_mset f E1, image_mset f E2) \\<in> mult1 r", "let ?E2 = \"{# (f x). x \\<in># E2 #}\""], ["proof (state)\ngoal (1 subgoal):\n 1. (image_mset f E1, image_mset f E2) \\<in> mult1 r", "from assms(2)"], ["proof (chain)\npicking this:\n  (E1, E2) \\<in> mult1 r", "obtain M0 a K where \"E2 = M0 + {#a#}\" and \"E1 = M0 + K\" and \"(\\<forall>b. b \\<in># K \\<longrightarrow> (b, a) \\<in> r)\""], ["proof (prove)\nusing this:\n  (E1, E2) \\<in> mult1 r\n\ngoal (1 subgoal):\n 1. (\\<And>M0 a K.\n        \\<lbrakk>E2 = M0 + {#a#}; E1 = M0 + K;\n         \\<forall>b. b \\<in># K \\<longrightarrow> (b, a) \\<in> r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding mult1_def [of r]"], ["proof (prove)\nusing this:\n  (E1, E2)\n  \\<in> {(N, M).\n         \\<exists>a M0 K.\n            M = add_mset a M0 \\<and>\n            N = M0 + K \\<and>\n            (\\<forall>b. b \\<in># K \\<longrightarrow> (b, a) \\<in> r)}\n\ngoal (1 subgoal):\n 1. (\\<And>M0 a K.\n        \\<lbrakk>E2 = M0 + {#a#}; E1 = M0 + K;\n         \\<forall>b. b \\<in># K \\<longrightarrow> (b, a) \\<in> r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  E2 = M0 + {#a#}\n  E1 = M0 + K\n  \\<forall>b. b \\<in># K \\<longrightarrow> (b, a) \\<in> r\n\ngoal (1 subgoal):\n 1. (image_mset f E1, image_mset f E2) \\<in> mult1 r", "let ?K = \"{# (f x). x \\<in># K #}\""], ["proof (state)\ngoal (1 subgoal):\n 1. (image_mset f E1, image_mset f E2) \\<in> mult1 r", "let ?M0 = \"{# (f x). x \\<in># M0 #}\""], ["proof (state)\ngoal (1 subgoal):\n 1. (image_mset f E1, image_mset f E2) \\<in> mult1 r", "from \\<open>E2 = M0 + {#a#}\\<close>"], ["proof (chain)\npicking this:\n  E2 = M0 + {#a#}", "have \"?E2 = ?M0 + {# (f a) #}\""], ["proof (prove)\nusing this:\n  E2 = M0 + {#a#}\n\ngoal (1 subgoal):\n 1. image_mset f E2 = image_mset f M0 + {#f a#}", "by simp"], ["proof (state)\nthis:\n  image_mset f E2 = image_mset f M0 + {#f a#}\n\ngoal (1 subgoal):\n 1. (image_mset f E1, image_mset f E2) \\<in> mult1 r", "from \\<open>E1 = M0 + K\\<close>"], ["proof (chain)\npicking this:\n  E1 = M0 + K", "have \"?E1 = ?M0 + ?K\""], ["proof (prove)\nusing this:\n  E1 = M0 + K\n\ngoal (1 subgoal):\n 1. image_mset f E1 = image_mset f M0 + image_mset f K", "by simp"], ["proof (state)\nthis:\n  image_mset f E1 = image_mset f M0 + image_mset f K\n\ngoal (1 subgoal):\n 1. (image_mset f E1, image_mset f E2) \\<in> mult1 r", "have \"(\\<forall>b. b \\<in># ?K \\<longrightarrow> (b, (f a)) \\<in> r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>b. b \\<in># image_mset f K \\<longrightarrow> (b, f a) \\<in> r", "proof ((rule allI),(rule impI))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b. b \\<in># image_mset f K \\<Longrightarrow> (b, f a) \\<in> r", "fix b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b. b \\<in># image_mset f K \\<Longrightarrow> (b, f a) \\<in> r", "assume \"b  \\<in># ?K\""], ["proof (state)\nthis:\n  b \\<in># image_mset f K\n\ngoal (1 subgoal):\n 1. \\<And>b. b \\<in># image_mset f K \\<Longrightarrow> (b, f a) \\<in> r", "from \\<open>b  \\<in># ?K\\<close>"], ["proof (chain)\npicking this:\n  b \\<in># image_mset f K", "obtain b' where \"b = (f b')\" and \"b' \\<in># K\""], ["proof (prove)\nusing this:\n  b \\<in># image_mset f K\n\ngoal (1 subgoal):\n 1. (\\<And>b'.\n        \\<lbrakk>b = f b'; b' \\<in># K\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: insert_DiffM2 msed_map_invR union_single_eq_member)"], ["proof (state)\nthis:\n  b = f b'\n  b' \\<in># K\n\ngoal (1 subgoal):\n 1. \\<And>b. b \\<in># image_mset f K \\<Longrightarrow> (b, f a) \\<in> r", "from \\<open>b' \\<in># K\\<close> and \\<open>(\\<forall>b. b \\<in># K \\<longrightarrow> (b, a) \\<in> r)\\<close>"], ["proof (chain)\npicking this:\n  b' \\<in># K\n  \\<forall>b. b \\<in># K \\<longrightarrow> (b, a) \\<in> r", "have \"(b',a) \\<in> r\""], ["proof (prove)\nusing this:\n  b' \\<in># K\n  \\<forall>b. b \\<in># K \\<longrightarrow> (b, a) \\<in> r\n\ngoal (1 subgoal):\n 1. (b', a) \\<in> r", "by auto"], ["proof (state)\nthis:\n  (b', a) \\<in> r\n\ngoal (1 subgoal):\n 1. \\<And>b. b \\<in># image_mset f K \\<Longrightarrow> (b, f a) \\<in> r", "from assms(1) and this and \\<open>b = (f b')\\<close>"], ["proof (chain)\npicking this:\n  (?t, ?s) \\<in> r \\<Longrightarrow> (f ?t, f ?s) \\<in> r\n  (b', a) \\<in> r\n  b = f b'", "show \"(b, (f a)) \\<in> r\""], ["proof (prove)\nusing this:\n  (?t, ?s) \\<in> r \\<Longrightarrow> (f ?t, f ?s) \\<in> r\n  (b', a) \\<in> r\n  b = f b'\n\ngoal (1 subgoal):\n 1. (b, f a) \\<in> r", "by auto"], ["proof (state)\nthis:\n  (b, f a) \\<in> r\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>b. b \\<in># image_mset f K \\<longrightarrow> (b, f a) \\<in> r\n\ngoal (1 subgoal):\n 1. (image_mset f E1, image_mset f E2) \\<in> mult1 r", "from \\<open>?E1 = ?M0 + ?K\\<close> and \\<open>?E2 = ?M0 + {# (f a) #}\\<close> and \\<open>(\\<forall>b. b \\<in># ?K \\<longrightarrow> (b, (f a)) \\<in> r)\\<close>"], ["proof (chain)\npicking this:\n  image_mset f E1 = image_mset f M0 + image_mset f K\n  image_mset f E2 = image_mset f M0 + {#f a#}\n  \\<forall>b. b \\<in># image_mset f K \\<longrightarrow> (b, f a) \\<in> r", "show \"(?E1,?E2) \\<in>  (mult1 r)\""], ["proof (prove)\nusing this:\n  image_mset f E1 = image_mset f M0 + image_mset f K\n  image_mset f E2 = image_mset f M0 + {#f a#}\n  \\<forall>b. b \\<in># image_mset f K \\<longrightarrow> (b, f a) \\<in> r\n\ngoal (1 subgoal):\n 1. (image_mset f E1, image_mset f E2) \\<in> mult1 r", "by (metis mult1_def_lemma)"], ["proof (state)\nthis:\n  (image_mset f E1, image_mset f E2) \\<in> mult1 r\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma monotonic_fun_mult:\n  assumes \"\\<And> t s. ((t,s) \\<in> r \\<Longrightarrow> ((f t), (f s)) \\<in> r)\"\n  assumes \"(E1,E2) \\<in> (mult r)\"\n  shows \"({# (f x). x \\<in># E1 #},{# (f x). x \\<in># E2 #}) \\<in>  (mult r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (image_mset f E1, image_mset f E2) \\<in> mult r", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (image_mset f E1, image_mset f E2) \\<in> mult r", "let ?E1 = \"{# (f x). x \\<in># E1 #}\""], ["proof (state)\ngoal (1 subgoal):\n 1. (image_mset f E1, image_mset f E2) \\<in> mult r", "let ?E2 = \"{# (f x). x \\<in># E2 #}\""], ["proof (state)\ngoal (1 subgoal):\n 1. (image_mset f E1, image_mset f E2) \\<in> mult r", "let ?P = \"\\<lambda>x. (?E1,{# (f y). y \\<in># x #}) \\<in> (mult r)\""], ["proof (state)\ngoal (1 subgoal):\n 1. (image_mset f E1, image_mset f E2) \\<in> mult r", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (image_mset f E1, image_mset f E2) \\<in> mult r", "proof (rule trancl_induct [of E1 E2 \"(mult1 r)\" ?P])"], ["proof (state)\ngoal (3 subgoals):\n 1. (E1, E2) \\<in> (mult1 r)\\<^sup>+\n 2. \\<And>x.\n       (E1, x) \\<in> mult1 r \\<Longrightarrow>\n       (image_mset f E1, image_mset f x) \\<in> mult r\n 3. \\<And>x z.\n       \\<lbrakk>(E1, x) \\<in> (mult1 r)\\<^sup>+; (x, z) \\<in> mult1 r;\n        (image_mset f E1, image_mset f x) \\<in> mult r\\<rbrakk>\n       \\<Longrightarrow> (image_mset f E1, image_mset f z) \\<in> mult r", "from assms(1)"], ["proof (chain)\npicking this:\n  (?t, ?s) \\<in> r \\<Longrightarrow> (f ?t, f ?s) \\<in> r", "show \"(E1, E2) \\<in> (mult1 r)\\<^sup>+\""], ["proof (prove)\nusing this:\n  (?t, ?s) \\<in> r \\<Longrightarrow> (f ?t, f ?s) \\<in> r\n\ngoal (1 subgoal):\n 1. (E1, E2) \\<in> (mult1 r)\\<^sup>+", "using assms(2) mult_def"], ["proof (prove)\nusing this:\n  (?t, ?s) \\<in> r \\<Longrightarrow> (f ?t, f ?s) \\<in> r\n  (E1, E2) \\<in> mult r\n  mult ?r = (mult1 ?r)\\<^sup>+\n\ngoal (1 subgoal):\n 1. (E1, E2) \\<in> (mult1 r)\\<^sup>+", "by blast"], ["proof (state)\nthis:\n  (E1, E2) \\<in> (mult1 r)\\<^sup>+\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       (E1, x) \\<in> mult1 r \\<Longrightarrow>\n       (image_mset f E1, image_mset f x) \\<in> mult r\n 2. \\<And>x z.\n       \\<lbrakk>(E1, x) \\<in> (mult1 r)\\<^sup>+; (x, z) \\<in> mult1 r;\n        (image_mset f E1, image_mset f x) \\<in> mult r\\<rbrakk>\n       \\<Longrightarrow> (image_mset f E1, image_mset f z) \\<in> mult r", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       (E1, x) \\<in> mult1 r \\<Longrightarrow>\n       (image_mset f E1, image_mset f x) \\<in> mult r\n 2. \\<And>x z.\n       \\<lbrakk>(E1, x) \\<in> (mult1 r)\\<^sup>+; (x, z) \\<in> mult1 r;\n        (image_mset f E1, image_mset f x) \\<in> mult r\\<rbrakk>\n       \\<Longrightarrow> (image_mset f E1, image_mset f z) \\<in> mult r", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       (E1, x) \\<in> mult1 r \\<Longrightarrow>\n       (image_mset f E1, image_mset f x) \\<in> mult r\n 2. \\<And>x z.\n       \\<lbrakk>(E1, x) \\<in> (mult1 r)\\<^sup>+; (x, z) \\<in> mult1 r;\n        (image_mset f E1, image_mset f x) \\<in> mult r\\<rbrakk>\n       \\<Longrightarrow> (image_mset f E1, image_mset f z) \\<in> mult r", "assume \"(E1, x) \\<in> mult1 r\""], ["proof (state)\nthis:\n  (E1, x) \\<in> mult1 r\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       (E1, x) \\<in> mult1 r \\<Longrightarrow>\n       (image_mset f E1, image_mset f x) \\<in> mult r\n 2. \\<And>x z.\n       \\<lbrakk>(E1, x) \\<in> (mult1 r)\\<^sup>+; (x, z) \\<in> mult1 r;\n        (image_mset f E1, image_mset f x) \\<in> mult r\\<rbrakk>\n       \\<Longrightarrow> (image_mset f E1, image_mset f z) \\<in> mult r", "have \"(image_mset f E1, image_mset f x) \\<in> mult1 r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (image_mset f E1, image_mset f x) \\<in> mult1 r", "by (simp add: \\<open>(E1, x) \\<in> mult1 r\\<close> assms(1) monotonic_fun_mult1)"], ["proof (state)\nthis:\n  (image_mset f E1, image_mset f x) \\<in> mult1 r\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       (E1, x) \\<in> mult1 r \\<Longrightarrow>\n       (image_mset f E1, image_mset f x) \\<in> mult r\n 2. \\<And>x z.\n       \\<lbrakk>(E1, x) \\<in> (mult1 r)\\<^sup>+; (x, z) \\<in> mult1 r;\n        (image_mset f E1, image_mset f x) \\<in> mult r\\<rbrakk>\n       \\<Longrightarrow> (image_mset f E1, image_mset f z) \\<in> mult r", "from this"], ["proof (chain)\npicking this:\n  (image_mset f E1, image_mset f x) \\<in> mult1 r", "show \"(image_mset f E1, image_mset f x) \\<in> mult r\""], ["proof (prove)\nusing this:\n  (image_mset f E1, image_mset f x) \\<in> mult1 r\n\ngoal (1 subgoal):\n 1. (image_mset f E1, image_mset f x) \\<in> mult r", "by (simp add: mult_def)"], ["proof (state)\nthis:\n  (image_mset f E1, image_mset f x) \\<in> mult r\n\ngoal (1 subgoal):\n 1. \\<And>x z.\n       \\<lbrakk>(E1, x) \\<in> (mult1 r)\\<^sup>+; (x, z) \\<in> mult1 r;\n        (image_mset f E1, image_mset f x) \\<in> mult r\\<rbrakk>\n       \\<Longrightarrow> (image_mset f E1, image_mset f z) \\<in> mult r", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x z.\n       \\<lbrakk>(E1, x) \\<in> (mult1 r)\\<^sup>+; (x, z) \\<in> mult1 r;\n        (image_mset f E1, image_mset f x) \\<in> mult r\\<rbrakk>\n       \\<Longrightarrow> (image_mset f E1, image_mset f z) \\<in> mult r", "fix x z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x z.\n       \\<lbrakk>(E1, x) \\<in> (mult1 r)\\<^sup>+; (x, z) \\<in> mult1 r;\n        (image_mset f E1, image_mset f x) \\<in> mult r\\<rbrakk>\n       \\<Longrightarrow> (image_mset f E1, image_mset f z) \\<in> mult r", "assume \"(E1, x) \\<in> (mult1 r)\\<^sup>+\"\n      \"(x, z) \\<in> mult1 r\" and \"(image_mset f E1, image_mset f x) \\<in> mult r\""], ["proof (state)\nthis:\n  (E1, x) \\<in> (mult1 r)\\<^sup>+\n  (x, z) \\<in> mult1 r\n  (image_mset f E1, image_mset f x) \\<in> mult r\n\ngoal (1 subgoal):\n 1. \\<And>x z.\n       \\<lbrakk>(E1, x) \\<in> (mult1 r)\\<^sup>+; (x, z) \\<in> mult1 r;\n        (image_mset f E1, image_mset f x) \\<in> mult r\\<rbrakk>\n       \\<Longrightarrow> (image_mset f E1, image_mset f z) \\<in> mult r", "from \\<open>(x, z) \\<in> mult1 r\\<close>"], ["proof (chain)\npicking this:\n  (x, z) \\<in> mult1 r", "have \"(image_mset f x, image_mset f z) \\<in> mult1 r\""], ["proof (prove)\nusing this:\n  (x, z) \\<in> mult1 r\n\ngoal (1 subgoal):\n 1. (image_mset f x, image_mset f z) \\<in> mult1 r", "by (simp add: assms(1) monotonic_fun_mult1)"], ["proof (state)\nthis:\n  (image_mset f x, image_mset f z) \\<in> mult1 r\n\ngoal (1 subgoal):\n 1. \\<And>x z.\n       \\<lbrakk>(E1, x) \\<in> (mult1 r)\\<^sup>+; (x, z) \\<in> mult1 r;\n        (image_mset f E1, image_mset f x) \\<in> mult r\\<rbrakk>\n       \\<Longrightarrow> (image_mset f E1, image_mset f z) \\<in> mult r", "from this and \\<open>(image_mset f E1, image_mset f x) \\<in> mult r\\<close>"], ["proof (chain)\npicking this:\n  (image_mset f x, image_mset f z) \\<in> mult1 r\n  (image_mset f E1, image_mset f x) \\<in> mult r", "show \"(image_mset f E1, image_mset f z) \\<in> mult r\""], ["proof (prove)\nusing this:\n  (image_mset f x, image_mset f z) \\<in> mult1 r\n  (image_mset f E1, image_mset f x) \\<in> mult r\n\ngoal (1 subgoal):\n 1. (image_mset f E1, image_mset f z) \\<in> mult r", "using mult_def trancl.trancl_into_trancl"], ["proof (prove)\nusing this:\n  (image_mset f x, image_mset f z) \\<in> mult1 r\n  (image_mset f E1, image_mset f x) \\<in> mult r\n  mult ?r = (mult1 ?r)\\<^sup>+\n  \\<lbrakk>(?a, ?b) \\<in> ?r\\<^sup>+; (?b, ?c) \\<in> ?r\\<rbrakk>\n  \\<Longrightarrow> (?a, ?c) \\<in> ?r\\<^sup>+\n\ngoal (1 subgoal):\n 1. (image_mset f E1, image_mset f z) \\<in> mult r", "by fastforce"], ["proof (state)\nthis:\n  (image_mset f E1, image_mset f z) \\<in> mult r\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (image_mset f E1, image_mset f E2) \\<in> mult r\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mset_set_insert_eq:\n  assumes \"finite E\"\n  shows \"mset_set (E \\<union> { x }) \\<subseteq># mset_set E + {# x #}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mset_set (E \\<union> {x}) \\<subseteq># mset_set E + {#x#}", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> mset_set (E \\<union> {x}) \\<subseteq>#\n           mset_set E + {#x#} \\<Longrightarrow>\n    False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<not> mset_set (E \\<union> {x}) \\<subseteq># mset_set E + {#x#}\n\ngoal (1 subgoal):\n 1. \\<not> mset_set (E \\<union> {x}) \\<subseteq>#\n           mset_set E + {#x#} \\<Longrightarrow>\n    False", "from this"], ["proof (chain)\npicking this:\n  \\<not> mset_set (E \\<union> {x}) \\<subseteq># mset_set E + {#x#}", "obtain y where \"(count (mset_set (E \\<union> { x })) y) \n    > (count (mset_set E + {# x #}) y)\""], ["proof (prove)\nusing this:\n  \\<not> mset_set (E \\<union> {x}) \\<subseteq># mset_set E + {#x#}\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        count (mset_set E + {#x#}) y\n        < count (mset_set (E \\<union> {x})) y \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (meson leI subseteq_mset_def)"], ["proof (state)\nthis:\n  count (mset_set E + {#x#}) y < count (mset_set (E \\<union> {x})) y\n\ngoal (1 subgoal):\n 1. \\<not> mset_set (E \\<union> {x}) \\<subseteq>#\n           mset_set E + {#x#} \\<Longrightarrow>\n    False", "from assms(1)"], ["proof (chain)\npicking this:\n  finite E", "have \"finite (E \\<union> { x })\""], ["proof (prove)\nusing this:\n  finite E\n\ngoal (1 subgoal):\n 1. finite (E \\<union> {x})", "by auto"], ["proof (state)\nthis:\n  finite (E \\<union> {x})\n\ngoal (1 subgoal):\n 1. \\<not> mset_set (E \\<union> {x}) \\<subseteq>#\n           mset_set E + {#x#} \\<Longrightarrow>\n    False", "have \"(count (mset_set E + {# x #}) y) = (count (mset_set E) y) + (count {# x #} y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. count (mset_set E + {#x#}) y = count (mset_set E) y + count {#x#} y", "by auto"], ["proof (state)\nthis:\n  count (mset_set E + {#x#}) y = count (mset_set E) y + count {#x#} y\n\ngoal (1 subgoal):\n 1. \\<not> mset_set (E \\<union> {x}) \\<subseteq>#\n           mset_set E + {#x#} \\<Longrightarrow>\n    False", "have \"x \\<noteq> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> y", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. x = y \\<Longrightarrow> False", "assume \"x = y\""], ["proof (state)\nthis:\n  x = y\n\ngoal (1 subgoal):\n 1. x = y \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  x = y", "have \"y \\<in> E \\<union> { x }\""], ["proof (prove)\nusing this:\n  x = y\n\ngoal (1 subgoal):\n 1. y \\<in> E \\<union> {x}", "by auto"], ["proof (state)\nthis:\n  y \\<in> E \\<union> {x}\n\ngoal (1 subgoal):\n 1. x = y \\<Longrightarrow> False", "from \\<open>finite (E \\<union> { x })\\<close> this"], ["proof (chain)\npicking this:\n  finite (E \\<union> {x})\n  y \\<in> E \\<union> {x}", "have \"(count (mset_set (E \\<union> { x })) y) = 1\""], ["proof (prove)\nusing this:\n  finite (E \\<union> {x})\n  y \\<in> E \\<union> {x}\n\ngoal (1 subgoal):\n 1. count (mset_set (E \\<union> {x})) y = 1", "using count_mset_set(1)"], ["proof (prove)\nusing this:\n  finite (E \\<union> {x})\n  y \\<in> E \\<union> {x}\n  \\<lbrakk>finite ?A; ?x \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> count (mset_set ?A) ?x = 1\n\ngoal (1 subgoal):\n 1. count (mset_set (E \\<union> {x})) y = 1", "by auto"], ["proof (state)\nthis:\n  count (mset_set (E \\<union> {x})) y = 1\n\ngoal (1 subgoal):\n 1. x = y \\<Longrightarrow> False", "from this and \\<open>(count (mset_set (E \\<union> { x })) y) > (count (mset_set E + {# x #}) y)\\<close>"], ["proof (chain)\npicking this:\n  count (mset_set (E \\<union> {x})) y = 1\n  count (mset_set E + {#x#}) y < count (mset_set (E \\<union> {x})) y", "have \n      \"(count (mset_set E + {# x #}) y) = 0\""], ["proof (prove)\nusing this:\n  count (mset_set (E \\<union> {x})) y = 1\n  count (mset_set E + {#x#}) y < count (mset_set (E \\<union> {x})) y\n\ngoal (1 subgoal):\n 1. count (mset_set E + {#x#}) y = 0", "by auto"], ["proof (state)\nthis:\n  count (mset_set E + {#x#}) y = 0\n\ngoal (1 subgoal):\n 1. x = y \\<Longrightarrow> False", "from \\<open>(count (mset_set E + {# x #}) y) = 0\\<close>"], ["proof (chain)\npicking this:\n  count (mset_set E + {#x#}) y = 0", "have \"count {# x #} y = 0\""], ["proof (prove)\nusing this:\n  count (mset_set E + {#x#}) y = 0\n\ngoal (1 subgoal):\n 1. count {#x#} y = 0", "by auto"], ["proof (state)\nthis:\n  count {#x#} y = 0\n\ngoal (1 subgoal):\n 1. x = y \\<Longrightarrow> False", "from \\<open>x = y\\<close>"], ["proof (chain)\npicking this:\n  x = y", "have \"count {# x #} y = 1\""], ["proof (prove)\nusing this:\n  x = y\n\ngoal (1 subgoal):\n 1. count {#x#} y = 1", "using count_mset_set"], ["proof (prove)\nusing this:\n  x = y\n  \\<lbrakk>finite ?A; ?x \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> count (mset_set ?A) ?x = 1\n  infinite ?A \\<Longrightarrow> count (mset_set ?A) ?x = 0\n  ?x \\<notin> ?A \\<Longrightarrow> count (mset_set ?A) ?x = 0\n\ngoal (1 subgoal):\n 1. count {#x#} y = 1", "by auto"], ["proof (state)\nthis:\n  count {#x#} y = 1\n\ngoal (1 subgoal):\n 1. x = y \\<Longrightarrow> False", "from this and \\<open>count {# x #} y = 0\\<close>"], ["proof (chain)\npicking this:\n  count {#x#} y = 1\n  count {#x#} y = 0", "show False"], ["proof (prove)\nusing this:\n  count {#x#} y = 1\n  count {#x#} y = 0\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. \\<not> mset_set (E \\<union> {x}) \\<subseteq>#\n           mset_set E + {#x#} \\<Longrightarrow>\n    False", "have \"y \\<notin> E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<notin> E", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<in> E \\<Longrightarrow> False", "assume \"y \\<in> E\""], ["proof (state)\nthis:\n  y \\<in> E\n\ngoal (1 subgoal):\n 1. y \\<in> E \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  y \\<in> E", "have \"y \\<in> E \\<union> { x }\""], ["proof (prove)\nusing this:\n  y \\<in> E\n\ngoal (1 subgoal):\n 1. y \\<in> E \\<union> {x}", "by auto"], ["proof (state)\nthis:\n  y \\<in> E \\<union> {x}\n\ngoal (1 subgoal):\n 1. y \\<in> E \\<Longrightarrow> False", "from \\<open>finite (E \\<union> { x })\\<close> this"], ["proof (chain)\npicking this:\n  finite (E \\<union> {x})\n  y \\<in> E \\<union> {x}", "have \"(count (mset_set (E \\<union> { x })) y) = 1\""], ["proof (prove)\nusing this:\n  finite (E \\<union> {x})\n  y \\<in> E \\<union> {x}\n\ngoal (1 subgoal):\n 1. count (mset_set (E \\<union> {x})) y = 1", "using count_mset_set(1)"], ["proof (prove)\nusing this:\n  finite (E \\<union> {x})\n  y \\<in> E \\<union> {x}\n  \\<lbrakk>finite ?A; ?x \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> count (mset_set ?A) ?x = 1\n\ngoal (1 subgoal):\n 1. count (mset_set (E \\<union> {x})) y = 1", "by auto"], ["proof (state)\nthis:\n  count (mset_set (E \\<union> {x})) y = 1\n\ngoal (1 subgoal):\n 1. y \\<in> E \\<Longrightarrow> False", "from this and \\<open>(count (mset_set (E \\<union> { x })) y) > (count (mset_set E + {# x #}) y)\\<close>"], ["proof (chain)\npicking this:\n  count (mset_set (E \\<union> {x})) y = 1\n  count (mset_set E + {#x#}) y < count (mset_set (E \\<union> {x})) y", "have \n      \"(count (mset_set E + {# x #}) y) = 0\""], ["proof (prove)\nusing this:\n  count (mset_set (E \\<union> {x})) y = 1\n  count (mset_set E + {#x#}) y < count (mset_set (E \\<union> {x})) y\n\ngoal (1 subgoal):\n 1. count (mset_set E + {#x#}) y = 0", "by auto"], ["proof (state)\nthis:\n  count (mset_set E + {#x#}) y = 0\n\ngoal (1 subgoal):\n 1. y \\<in> E \\<Longrightarrow> False", "from \\<open>(count (mset_set E + {# x #}) y) = 0\\<close>"], ["proof (chain)\npicking this:\n  count (mset_set E + {#x#}) y = 0", "have \"count (mset_set E) y = 0\""], ["proof (prove)\nusing this:\n  count (mset_set E + {#x#}) y = 0\n\ngoal (1 subgoal):\n 1. count (mset_set E) y = 0", "by (simp split: if_splits)"], ["proof (state)\nthis:\n  count (mset_set E) y = 0\n\ngoal (1 subgoal):\n 1. y \\<in> E \\<Longrightarrow> False", "from \\<open>y \\<in> E\\<close> \\<open>finite E\\<close>"], ["proof (chain)\npicking this:\n  y \\<in> E\n  finite E", "have \"count (mset_set E) y = 1\""], ["proof (prove)\nusing this:\n  y \\<in> E\n  finite E\n\ngoal (1 subgoal):\n 1. count (mset_set E) y = 1", "using count_mset_set(1)"], ["proof (prove)\nusing this:\n  y \\<in> E\n  finite E\n  \\<lbrakk>finite ?A; ?x \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> count (mset_set ?A) ?x = 1\n\ngoal (1 subgoal):\n 1. count (mset_set E) y = 1", "by auto"], ["proof (state)\nthis:\n  count (mset_set E) y = 1\n\ngoal (1 subgoal):\n 1. y \\<in> E \\<Longrightarrow> False", "from this and \\<open>count (mset_set E) y = 0\\<close>"], ["proof (chain)\npicking this:\n  count (mset_set E) y = 1\n  count (mset_set E) y = 0", "show False"], ["proof (prove)\nusing this:\n  count (mset_set E) y = 1\n  count (mset_set E) y = 0\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  y \\<notin> E\n\ngoal (1 subgoal):\n 1. \\<not> mset_set (E \\<union> {x}) \\<subseteq>#\n           mset_set E + {#x#} \\<Longrightarrow>\n    False", "from this and \\<open>x \\<noteq> y\\<close>"], ["proof (chain)\npicking this:\n  y \\<notin> E\n  x \\<noteq> y", "have \"y \\<notin> E \\<union> { x }\""], ["proof (prove)\nusing this:\n  y \\<notin> E\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. y \\<notin> E \\<union> {x}", "by auto"], ["proof (state)\nthis:\n  y \\<notin> E \\<union> {x}\n\ngoal (1 subgoal):\n 1. \\<not> mset_set (E \\<union> {x}) \\<subseteq>#\n           mset_set E + {#x#} \\<Longrightarrow>\n    False", "from this"], ["proof (chain)\npicking this:\n  y \\<notin> E \\<union> {x}", "have \"(count (mset_set (E \\<union> { x })) y) = 0\""], ["proof (prove)\nusing this:\n  y \\<notin> E \\<union> {x}\n\ngoal (1 subgoal):\n 1. count (mset_set (E \\<union> {x})) y = 0", "by auto"], ["proof (state)\nthis:\n  count (mset_set (E \\<union> {x})) y = 0\n\ngoal (1 subgoal):\n 1. \\<not> mset_set (E \\<union> {x}) \\<subseteq>#\n           mset_set E + {#x#} \\<Longrightarrow>\n    False", "from this and \\<open>(count (mset_set (E \\<union> { x })) y) \n    > (count (mset_set E + {# x #}) y)\\<close>"], ["proof (chain)\npicking this:\n  count (mset_set (E \\<union> {x})) y = 0\n  count (mset_set E + {#x#}) y < count (mset_set (E \\<union> {x})) y", "show False"], ["proof (prove)\nusing this:\n  count (mset_set (E \\<union> {x})) y = 0\n  count (mset_set E + {#x#}) y < count (mset_set (E \\<union> {x})) y\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mset_set_insert:\n  assumes \"x \\<notin> E\"\n  assumes \"finite E\"\n  shows \"mset_set (E \\<union> { x }) = mset_set E + {# x #}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mset_set (E \\<union> {x}) = mset_set E + {#x#}", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. mset_set (E \\<union> {x}) \\<noteq> mset_set E + {#x#} \\<Longrightarrow>\n    False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  mset_set (E \\<union> {x}) \\<noteq> mset_set E + {#x#}\n\ngoal (1 subgoal):\n 1. mset_set (E \\<union> {x}) \\<noteq> mset_set E + {#x#} \\<Longrightarrow>\n    False", "from this"], ["proof (chain)\npicking this:\n  mset_set (E \\<union> {x}) \\<noteq> mset_set E + {#x#}", "obtain y where \"(count (mset_set (E \\<union> { x })) y) \n    \\<noteq> (count (mset_set E + {# x #}) y)\""], ["proof (prove)\nusing this:\n  mset_set (E \\<union> {x}) \\<noteq> mset_set E + {#x#}\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        count (mset_set (E \\<union> {x})) y \\<noteq>\n        count (mset_set E + {#x#}) y \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (meson multiset_eqI)"], ["proof (state)\nthis:\n  count (mset_set (E \\<union> {x})) y \\<noteq> count (mset_set E + {#x#}) y\n\ngoal (1 subgoal):\n 1. mset_set (E \\<union> {x}) \\<noteq> mset_set E + {#x#} \\<Longrightarrow>\n    False", "have \"(count (mset_set E + {# x #}) y) = (count (mset_set E) y) + (count {# x #} y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. count (mset_set E + {#x#}) y = count (mset_set E) y + count {#x#} y", "by auto"], ["proof (state)\nthis:\n  count (mset_set E + {#x#}) y = count (mset_set E) y + count {#x#} y\n\ngoal (1 subgoal):\n 1. mset_set (E \\<union> {x}) \\<noteq> mset_set E + {#x#} \\<Longrightarrow>\n    False", "from assms(2)"], ["proof (chain)\npicking this:\n  finite E", "have \"finite (E \\<union> { x })\""], ["proof (prove)\nusing this:\n  finite E\n\ngoal (1 subgoal):\n 1. finite (E \\<union> {x})", "by auto"], ["proof (state)\nthis:\n  finite (E \\<union> {x})\n\ngoal (1 subgoal):\n 1. mset_set (E \\<union> {x}) \\<noteq> mset_set E + {#x#} \\<Longrightarrow>\n    False", "have \"x \\<noteq> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> y", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. x = y \\<Longrightarrow> False", "assume \"x = y\""], ["proof (state)\nthis:\n  x = y\n\ngoal (1 subgoal):\n 1. x = y \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  x = y", "have \"y \\<in> E \\<union> { x }\""], ["proof (prove)\nusing this:\n  x = y\n\ngoal (1 subgoal):\n 1. y \\<in> E \\<union> {x}", "by auto"], ["proof (state)\nthis:\n  y \\<in> E \\<union> {x}\n\ngoal (1 subgoal):\n 1. x = y \\<Longrightarrow> False", "from \\<open>finite (E \\<union> { x })\\<close> this"], ["proof (chain)\npicking this:\n  finite (E \\<union> {x})\n  y \\<in> E \\<union> {x}", "have \"(count (mset_set (E \\<union> { x })) y) = 1\""], ["proof (prove)\nusing this:\n  finite (E \\<union> {x})\n  y \\<in> E \\<union> {x}\n\ngoal (1 subgoal):\n 1. count (mset_set (E \\<union> {x})) y = 1", "using count_mset_set(1)"], ["proof (prove)\nusing this:\n  finite (E \\<union> {x})\n  y \\<in> E \\<union> {x}\n  \\<lbrakk>finite ?A; ?x \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> count (mset_set ?A) ?x = 1\n\ngoal (1 subgoal):\n 1. count (mset_set (E \\<union> {x})) y = 1", "by auto"], ["proof (state)\nthis:\n  count (mset_set (E \\<union> {x})) y = 1\n\ngoal (1 subgoal):\n 1. x = y \\<Longrightarrow> False", "from \\<open>x = y\\<close>"], ["proof (chain)\npicking this:\n  x = y", "have \"count {# x #} y = 1\""], ["proof (prove)\nusing this:\n  x = y\n\ngoal (1 subgoal):\n 1. count {#x#} y = 1", "using count_mset_set"], ["proof (prove)\nusing this:\n  x = y\n  \\<lbrakk>finite ?A; ?x \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> count (mset_set ?A) ?x = 1\n  infinite ?A \\<Longrightarrow> count (mset_set ?A) ?x = 0\n  ?x \\<notin> ?A \\<Longrightarrow> count (mset_set ?A) ?x = 0\n\ngoal (1 subgoal):\n 1. count {#x#} y = 1", "by auto"], ["proof (state)\nthis:\n  count {#x#} y = 1\n\ngoal (1 subgoal):\n 1. x = y \\<Longrightarrow> False", "from \\<open>x = y\\<close> \\<open>x \\<notin> E\\<close>"], ["proof (chain)\npicking this:\n  x = y\n  x \\<notin> E", "have \"(count (mset_set E) y) = 0\""], ["proof (prove)\nusing this:\n  x = y\n  x \\<notin> E\n\ngoal (1 subgoal):\n 1. count (mset_set E) y = 0", "using count_mset_set"], ["proof (prove)\nusing this:\n  x = y\n  x \\<notin> E\n  \\<lbrakk>finite ?A; ?x \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> count (mset_set ?A) ?x = 1\n  infinite ?A \\<Longrightarrow> count (mset_set ?A) ?x = 0\n  ?x \\<notin> ?A \\<Longrightarrow> count (mset_set ?A) ?x = 0\n\ngoal (1 subgoal):\n 1. count (mset_set E) y = 0", "by auto"], ["proof (state)\nthis:\n  count (mset_set E) y = 0\n\ngoal (1 subgoal):\n 1. x = y \\<Longrightarrow> False", "from \\<open>count {# x #} y = 1\\<close> \\<open>(count (mset_set E) y) = 0\\<close> \n      \\<open>(count (mset_set E + {# x #}) y) = (count (mset_set E) y) + (count {# x #} y)\\<close>"], ["proof (chain)\npicking this:\n  count {#x#} y = 1\n  count (mset_set E) y = 0\n  count (mset_set E + {#x#}) y = count (mset_set E) y + count {#x#} y", "have \"(count (mset_set E + {# x #}) y) = 1\""], ["proof (prove)\nusing this:\n  count {#x#} y = 1\n  count (mset_set E) y = 0\n  count (mset_set E + {#x#}) y = count (mset_set E) y + count {#x#} y\n\ngoal (1 subgoal):\n 1. count (mset_set E + {#x#}) y = 1", "by auto"], ["proof (state)\nthis:\n  count (mset_set E + {#x#}) y = 1\n\ngoal (1 subgoal):\n 1. x = y \\<Longrightarrow> False", "from this and \\<open>(count (mset_set (E \\<union> { x })) y) = 1\\<close> and \\<open>(count (mset_set (E \\<union> { x })) y) \n    \\<noteq> (count (mset_set E + {# x #}) y)\\<close>"], ["proof (chain)\npicking this:\n  count (mset_set E + {#x#}) y = 1\n  count (mset_set (E \\<union> {x})) y = 1\n  count (mset_set (E \\<union> {x})) y \\<noteq> count (mset_set E + {#x#}) y", "show False"], ["proof (prove)\nusing this:\n  count (mset_set E + {#x#}) y = 1\n  count (mset_set (E \\<union> {x})) y = 1\n  count (mset_set (E \\<union> {x})) y \\<noteq> count (mset_set E + {#x#}) y\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. mset_set (E \\<union> {x}) \\<noteq> mset_set E + {#x#} \\<Longrightarrow>\n    False", "from \\<open>x \\<noteq> y\\<close>"], ["proof (chain)\npicking this:\n  x \\<noteq> y", "have \"count {# x #} y = 0\""], ["proof (prove)\nusing this:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. count {#x#} y = 0", "using count_mset_set"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n  \\<lbrakk>finite ?A; ?x \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> count (mset_set ?A) ?x = 1\n  infinite ?A \\<Longrightarrow> count (mset_set ?A) ?x = 0\n  ?x \\<notin> ?A \\<Longrightarrow> count (mset_set ?A) ?x = 0\n\ngoal (1 subgoal):\n 1. count {#x#} y = 0", "by auto"], ["proof (state)\nthis:\n  count {#x#} y = 0\n\ngoal (1 subgoal):\n 1. mset_set (E \\<union> {x}) \\<noteq> mset_set E + {#x#} \\<Longrightarrow>\n    False", "have \"y \\<notin> E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<notin> E", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<in> E \\<Longrightarrow> False", "assume \"y \\<in> E\""], ["proof (state)\nthis:\n  y \\<in> E\n\ngoal (1 subgoal):\n 1. y \\<in> E \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  y \\<in> E", "have \"y \\<in> E \\<union> { x }\""], ["proof (prove)\nusing this:\n  y \\<in> E\n\ngoal (1 subgoal):\n 1. y \\<in> E \\<union> {x}", "by auto"], ["proof (state)\nthis:\n  y \\<in> E \\<union> {x}\n\ngoal (1 subgoal):\n 1. y \\<in> E \\<Longrightarrow> False", "from \\<open>finite (E \\<union> { x })\\<close> this"], ["proof (chain)\npicking this:\n  finite (E \\<union> {x})\n  y \\<in> E \\<union> {x}", "have \"(count (mset_set (E \\<union> { x })) y) = 1\""], ["proof (prove)\nusing this:\n  finite (E \\<union> {x})\n  y \\<in> E \\<union> {x}\n\ngoal (1 subgoal):\n 1. count (mset_set (E \\<union> {x})) y = 1", "using count_mset_set(1)"], ["proof (prove)\nusing this:\n  finite (E \\<union> {x})\n  y \\<in> E \\<union> {x}\n  \\<lbrakk>finite ?A; ?x \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> count (mset_set ?A) ?x = 1\n\ngoal (1 subgoal):\n 1. count (mset_set (E \\<union> {x})) y = 1", "by auto"], ["proof (state)\nthis:\n  count (mset_set (E \\<union> {x})) y = 1\n\ngoal (1 subgoal):\n 1. y \\<in> E \\<Longrightarrow> False", "from assms(2) \\<open>y \\<in> E\\<close>"], ["proof (chain)\npicking this:\n  finite E\n  y \\<in> E", "have \"(count (mset_set E) y) = 1\""], ["proof (prove)\nusing this:\n  finite E\n  y \\<in> E\n\ngoal (1 subgoal):\n 1. count (mset_set E) y = 1", "using count_mset_set"], ["proof (prove)\nusing this:\n  finite E\n  y \\<in> E\n  \\<lbrakk>finite ?A; ?x \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> count (mset_set ?A) ?x = 1\n  infinite ?A \\<Longrightarrow> count (mset_set ?A) ?x = 0\n  ?x \\<notin> ?A \\<Longrightarrow> count (mset_set ?A) ?x = 0\n\ngoal (1 subgoal):\n 1. count (mset_set E) y = 1", "by auto"], ["proof (state)\nthis:\n  count (mset_set E) y = 1\n\ngoal (1 subgoal):\n 1. y \\<in> E \\<Longrightarrow> False", "from \\<open>count {# x #} y = 0\\<close> \\<open>(count (mset_set E) y) = 1\\<close> \n      \\<open>(count (mset_set E + {# x #}) y) = (count (mset_set E) y) + (count {# x #} y)\\<close>"], ["proof (chain)\npicking this:\n  count {#x#} y = 0\n  count (mset_set E) y = 1\n  count (mset_set E + {#x#}) y = count (mset_set E) y + count {#x#} y", "have \"(count (mset_set E + {# x #}) y) = 1\""], ["proof (prove)\nusing this:\n  count {#x#} y = 0\n  count (mset_set E) y = 1\n  count (mset_set E + {#x#}) y = count (mset_set E) y + count {#x#} y\n\ngoal (1 subgoal):\n 1. count (mset_set E + {#x#}) y = 1", "by auto"], ["proof (state)\nthis:\n  count (mset_set E + {#x#}) y = 1\n\ngoal (1 subgoal):\n 1. y \\<in> E \\<Longrightarrow> False", "from this and \\<open>(count (mset_set (E \\<union> { x })) y) = 1\\<close> and \\<open>(count (mset_set (E \\<union> { x })) y) \n    \\<noteq> (count (mset_set E + {# x #}) y)\\<close>"], ["proof (chain)\npicking this:\n  count (mset_set E + {#x#}) y = 1\n  count (mset_set (E \\<union> {x})) y = 1\n  count (mset_set (E \\<union> {x})) y \\<noteq> count (mset_set E + {#x#}) y", "show False"], ["proof (prove)\nusing this:\n  count (mset_set E + {#x#}) y = 1\n  count (mset_set (E \\<union> {x})) y = 1\n  count (mset_set (E \\<union> {x})) y \\<noteq> count (mset_set E + {#x#}) y\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  y \\<notin> E\n\ngoal (1 subgoal):\n 1. mset_set (E \\<union> {x}) \\<noteq> mset_set E + {#x#} \\<Longrightarrow>\n    False", "from this and \\<open>x \\<noteq> y\\<close>"], ["proof (chain)\npicking this:\n  y \\<notin> E\n  x \\<noteq> y", "have \"y \\<notin> E \\<union> { x }\""], ["proof (prove)\nusing this:\n  y \\<notin> E\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. y \\<notin> E \\<union> {x}", "by auto"], ["proof (state)\nthis:\n  y \\<notin> E \\<union> {x}\n\ngoal (1 subgoal):\n 1. mset_set (E \\<union> {x}) \\<noteq> mset_set E + {#x#} \\<Longrightarrow>\n    False", "from this"], ["proof (chain)\npicking this:\n  y \\<notin> E \\<union> {x}", "have \"(count (mset_set (E \\<union> { x })) y) = 0\""], ["proof (prove)\nusing this:\n  y \\<notin> E \\<union> {x}\n\ngoal (1 subgoal):\n 1. count (mset_set (E \\<union> {x})) y = 0", "by auto"], ["proof (state)\nthis:\n  count (mset_set (E \\<union> {x})) y = 0\n\ngoal (1 subgoal):\n 1. mset_set (E \\<union> {x}) \\<noteq> mset_set E + {#x#} \\<Longrightarrow>\n    False", "from \\<open>y \\<notin> E\\<close>"], ["proof (chain)\npicking this:\n  y \\<notin> E", "have \"(count (mset_set E) y) = 0\""], ["proof (prove)\nusing this:\n  y \\<notin> E\n\ngoal (1 subgoal):\n 1. count (mset_set E) y = 0", "using count_mset_set"], ["proof (prove)\nusing this:\n  y \\<notin> E\n  \\<lbrakk>finite ?A; ?x \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> count (mset_set ?A) ?x = 1\n  infinite ?A \\<Longrightarrow> count (mset_set ?A) ?x = 0\n  ?x \\<notin> ?A \\<Longrightarrow> count (mset_set ?A) ?x = 0\n\ngoal (1 subgoal):\n 1. count (mset_set E) y = 0", "by auto"], ["proof (state)\nthis:\n  count (mset_set E) y = 0\n\ngoal (1 subgoal):\n 1. mset_set (E \\<union> {x}) \\<noteq> mset_set E + {#x#} \\<Longrightarrow>\n    False", "from \\<open>count {# x #} y = 0\\<close> \\<open>(count (mset_set E) y) = 0\\<close> \n      \\<open>(count (mset_set E + {# x #}) y) = (count (mset_set E) y) + (count {# x #} y)\\<close>"], ["proof (chain)\npicking this:\n  count {#x#} y = 0\n  count (mset_set E) y = 0\n  count (mset_set E + {#x#}) y = count (mset_set E) y + count {#x#} y", "have \"(count (mset_set E + {# x #}) y) = 0\""], ["proof (prove)\nusing this:\n  count {#x#} y = 0\n  count (mset_set E) y = 0\n  count (mset_set E + {#x#}) y = count (mset_set E) y + count {#x#} y\n\ngoal (1 subgoal):\n 1. count (mset_set E + {#x#}) y = 0", "by auto"], ["proof (state)\nthis:\n  count (mset_set E + {#x#}) y = 0\n\ngoal (1 subgoal):\n 1. mset_set (E \\<union> {x}) \\<noteq> mset_set E + {#x#} \\<Longrightarrow>\n    False", "from this and \\<open>(count (mset_set (E \\<union> { x })) y) = 0\\<close> and \\<open>(count (mset_set (E \\<union> { x })) y) \n    \\<noteq> (count (mset_set E + {# x #}) y)\\<close>"], ["proof (chain)\npicking this:\n  count (mset_set E + {#x#}) y = 0\n  count (mset_set (E \\<union> {x})) y = 0\n  count (mset_set (E \\<union> {x})) y \\<noteq> count (mset_set E + {#x#}) y", "show False"], ["proof (prove)\nusing this:\n  count (mset_set E + {#x#}) y = 0\n  count (mset_set (E \\<union> {x})) y = 0\n  count (mset_set (E \\<union> {x})) y \\<noteq> count (mset_set E + {#x#}) y\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mset_image_comp:\n  shows \"{# (f x). x \\<in># {# (g x). x \\<in># E #} #} = {# (f (g x)). x \\<in># E #}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. image_mset f (image_mset g E) = {#f (g x). x \\<in># E#}", "by (simp add: image_mset.compositionality comp_def)"], ["", "lemma mset_set_mset_image:\n  shows \"\\<And> E. card E = N \\<Longrightarrow> finite E \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#  {# (g x). x \\<in># mset_set (E) #}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>E.\n       \\<lbrakk>card E = N; finite E\\<rbrakk>\n       \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                         image_mset g (mset_set E)", "proof (induction N)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>E.\n       \\<lbrakk>card E = 0; finite E\\<rbrakk>\n       \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                         image_mset g (mset_set E)\n 2. \\<And>N E.\n       \\<lbrakk>\\<And>E.\n                   \\<lbrakk>card E = N; finite E\\<rbrakk>\n                   \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                                     image_mset g (mset_set E);\n        card E = Suc N; finite E\\<rbrakk>\n       \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                         image_mset g (mset_set E)", "case 0"], ["proof (state)\nthis:\n  card E = 0\n  finite E\n\ngoal (2 subgoals):\n 1. \\<And>E.\n       \\<lbrakk>card E = 0; finite E\\<rbrakk>\n       \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                         image_mset g (mset_set E)\n 2. \\<And>N E.\n       \\<lbrakk>\\<And>E.\n                   \\<lbrakk>card E = N; finite E\\<rbrakk>\n                   \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                                     image_mset g (mset_set E);\n        card E = Suc N; finite E\\<rbrakk>\n       \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                         image_mset g (mset_set E)", "assume \"card E = 0\""], ["proof (state)\nthis:\n  card E = 0\n\ngoal (2 subgoals):\n 1. \\<And>E.\n       \\<lbrakk>card E = 0; finite E\\<rbrakk>\n       \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                         image_mset g (mset_set E)\n 2. \\<And>N E.\n       \\<lbrakk>\\<And>E.\n                   \\<lbrakk>card E = N; finite E\\<rbrakk>\n                   \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                                     image_mset g (mset_set E);\n        card E = Suc N; finite E\\<rbrakk>\n       \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                         image_mset g (mset_set E)", "assume \"finite E\""], ["proof (state)\nthis:\n  finite E\n\ngoal (2 subgoals):\n 1. \\<And>E.\n       \\<lbrakk>card E = 0; finite E\\<rbrakk>\n       \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                         image_mset g (mset_set E)\n 2. \\<And>N E.\n       \\<lbrakk>\\<And>E.\n                   \\<lbrakk>card E = N; finite E\\<rbrakk>\n                   \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                                     image_mset g (mset_set E);\n        card E = Suc N; finite E\\<rbrakk>\n       \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                         image_mset g (mset_set E)", "from this and \\<open>card E = 0\\<close>"], ["proof (chain)\npicking this:\n  finite E\n  card E = 0", "have \"E = {}\""], ["proof (prove)\nusing this:\n  finite E\n  card E = 0\n\ngoal (1 subgoal):\n 1. E = {}", "by auto"], ["proof (state)\nthis:\n  E = {}\n\ngoal (2 subgoals):\n 1. \\<And>E.\n       \\<lbrakk>card E = 0; finite E\\<rbrakk>\n       \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                         image_mset g (mset_set E)\n 2. \\<And>N E.\n       \\<lbrakk>\\<And>E.\n                   \\<lbrakk>card E = N; finite E\\<rbrakk>\n                   \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                                     image_mset g (mset_set E);\n        card E = Suc N; finite E\\<rbrakk>\n       \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                         image_mset g (mset_set E)", "then"], ["proof (chain)\npicking this:\n  E = {}", "show \"mset_set (g ` E) \\<subseteq>#  {# (g x). x \\<in># mset_set (E) #}\""], ["proof (prove)\nusing this:\n  E = {}\n\ngoal (1 subgoal):\n 1. mset_set (g ` E) \\<subseteq># image_mset g (mset_set E)", "by auto"], ["proof (state)\nthis:\n  mset_set (g ` E) \\<subseteq># image_mset g (mset_set E)\n\ngoal (1 subgoal):\n 1. \\<And>N E.\n       \\<lbrakk>\\<And>E.\n                   \\<lbrakk>card E = N; finite E\\<rbrakk>\n                   \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                                     image_mset g (mset_set E);\n        card E = Suc N; finite E\\<rbrakk>\n       \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                         image_mset g (mset_set E)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>N E.\n       \\<lbrakk>\\<And>E.\n                   \\<lbrakk>card E = N; finite E\\<rbrakk>\n                   \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                                     image_mset g (mset_set E);\n        card E = Suc N; finite E\\<rbrakk>\n       \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                         image_mset g (mset_set E)", "case (Suc N)"], ["proof (state)\nthis:\n  \\<lbrakk>card ?E = N; finite ?E\\<rbrakk>\n  \\<Longrightarrow> mset_set (g ` ?E) \\<subseteq>#\n                    image_mset g (mset_set ?E)\n  card E = Suc N\n  finite E\n\ngoal (1 subgoal):\n 1. \\<And>N E.\n       \\<lbrakk>\\<And>E.\n                   \\<lbrakk>card E = N; finite E\\<rbrakk>\n                   \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                                     image_mset g (mset_set E);\n        card E = Suc N; finite E\\<rbrakk>\n       \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                         image_mset g (mset_set E)", "assume \"card E = (Suc N)\""], ["proof (state)\nthis:\n  card E = Suc N\n\ngoal (1 subgoal):\n 1. \\<And>N E.\n       \\<lbrakk>\\<And>E.\n                   \\<lbrakk>card E = N; finite E\\<rbrakk>\n                   \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                                     image_mset g (mset_set E);\n        card E = Suc N; finite E\\<rbrakk>\n       \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                         image_mset g (mset_set E)", "assume \"finite E\""], ["proof (state)\nthis:\n  finite E\n\ngoal (1 subgoal):\n 1. \\<And>N E.\n       \\<lbrakk>\\<And>E.\n                   \\<lbrakk>card E = N; finite E\\<rbrakk>\n                   \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                                     image_mset g (mset_set E);\n        card E = Suc N; finite E\\<rbrakk>\n       \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                         image_mset g (mset_set E)", "from this and \\<open>card E = (Suc N)\\<close>"], ["proof (chain)\npicking this:\n  finite E\n  card E = Suc N", "have \"E \\<noteq> {}\""], ["proof (prove)\nusing this:\n  finite E\n  card E = Suc N\n\ngoal (1 subgoal):\n 1. E \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  E \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>N E.\n       \\<lbrakk>\\<And>E.\n                   \\<lbrakk>card E = N; finite E\\<rbrakk>\n                   \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                                     image_mset g (mset_set E);\n        card E = Suc N; finite E\\<rbrakk>\n       \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                         image_mset g (mset_set E)", "from this"], ["proof (chain)\npicking this:\n  E \\<noteq> {}", "obtain x where \"x \\<in> E\""], ["proof (prove)\nusing this:\n  E \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>x. x \\<in> E \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> E\n\ngoal (1 subgoal):\n 1. \\<And>N E.\n       \\<lbrakk>\\<And>E.\n                   \\<lbrakk>card E = N; finite E\\<rbrakk>\n                   \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                                     image_mset g (mset_set E);\n        card E = Suc N; finite E\\<rbrakk>\n       \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                         image_mset g (mset_set E)", "let ?E = \"E - { x }\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>N E.\n       \\<lbrakk>\\<And>E.\n                   \\<lbrakk>card E = N; finite E\\<rbrakk>\n                   \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                                     image_mset g (mset_set E);\n        card E = Suc N; finite E\\<rbrakk>\n       \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                         image_mset g (mset_set E)", "from \\<open>finite E\\<close> \\<open>card E = (Suc N)\\<close> and \\<open>x \\<in> E\\<close>"], ["proof (chain)\npicking this:\n  finite E\n  card E = Suc N\n  x \\<in> E", "have \"card ?E = N\""], ["proof (prove)\nusing this:\n  finite E\n  card E = Suc N\n  x \\<in> E\n\ngoal (1 subgoal):\n 1. card (E - {x}) = N", "by auto"], ["proof (state)\nthis:\n  card (E - {x}) = N\n\ngoal (1 subgoal):\n 1. \\<And>N E.\n       \\<lbrakk>\\<And>E.\n                   \\<lbrakk>card E = N; finite E\\<rbrakk>\n                   \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                                     image_mset g (mset_set E);\n        card E = Suc N; finite E\\<rbrakk>\n       \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                         image_mset g (mset_set E)", "from \\<open>finite E\\<close>"], ["proof (chain)\npicking this:\n  finite E", "have \"finite ?E\""], ["proof (prove)\nusing this:\n  finite E\n\ngoal (1 subgoal):\n 1. finite (E - {x})", "by auto"], ["proof (state)\nthis:\n  finite (E - {x})\n\ngoal (1 subgoal):\n 1. \\<And>N E.\n       \\<lbrakk>\\<And>E.\n                   \\<lbrakk>card E = N; finite E\\<rbrakk>\n                   \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                                     image_mset g (mset_set E);\n        card E = Suc N; finite E\\<rbrakk>\n       \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                         image_mset g (mset_set E)", "from this and \"Suc.IH\" [of ?E] and \\<open>card ?E = N\\<close>"], ["proof (chain)\npicking this:\n  finite (E - {x})\n  \\<lbrakk>card (E - {x}) = N; finite (E - {x})\\<rbrakk>\n  \\<Longrightarrow> mset_set (g ` (E - {x})) \\<subseteq>#\n                    image_mset g (mset_set (E - {x}))\n  card (E - {x}) = N", "have ind: \"mset_set (g ` ?E) \\<subseteq>#  {# (g x). x \\<in># mset_set (?E) #}\""], ["proof (prove)\nusing this:\n  finite (E - {x})\n  \\<lbrakk>card (E - {x}) = N; finite (E - {x})\\<rbrakk>\n  \\<Longrightarrow> mset_set (g ` (E - {x})) \\<subseteq>#\n                    image_mset g (mset_set (E - {x}))\n  card (E - {x}) = N\n\ngoal (1 subgoal):\n 1. mset_set (g ` (E - {x})) \\<subseteq># image_mset g (mset_set (E - {x}))", "by force"], ["proof (state)\nthis:\n  mset_set (g ` (E - {x})) \\<subseteq># image_mset g (mset_set (E - {x}))\n\ngoal (1 subgoal):\n 1. \\<And>N E.\n       \\<lbrakk>\\<And>E.\n                   \\<lbrakk>card E = N; finite E\\<rbrakk>\n                   \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                                     image_mset g (mset_set E);\n        card E = Suc N; finite E\\<rbrakk>\n       \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                         image_mset g (mset_set E)", "from \\<open>x \\<in> E\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> E", "have \"E = ?E \\<union> { x }\""], ["proof (prove)\nusing this:\n  x \\<in> E\n\ngoal (1 subgoal):\n 1. E = E - {x} \\<union> {x}", "by auto"], ["proof (state)\nthis:\n  E = E - {x} \\<union> {x}\n\ngoal (1 subgoal):\n 1. \\<And>N E.\n       \\<lbrakk>\\<And>E.\n                   \\<lbrakk>card E = N; finite E\\<rbrakk>\n                   \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                                     image_mset g (mset_set E);\n        card E = Suc N; finite E\\<rbrakk>\n       \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                         image_mset g (mset_set E)", "have \"x \\<notin> ?E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> E - {x}", "by auto"], ["proof (state)\nthis:\n  x \\<notin> E - {x}\n\ngoal (1 subgoal):\n 1. \\<And>N E.\n       \\<lbrakk>\\<And>E.\n                   \\<lbrakk>card E = N; finite E\\<rbrakk>\n                   \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                                     image_mset g (mset_set E);\n        card E = Suc N; finite E\\<rbrakk>\n       \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                         image_mset g (mset_set E)", "from \\<open>finite ?E\\<close> \\<open>E = ?E \\<union> { x }\\<close> and \\<open>x \\<notin> ?E\\<close>"], ["proof (chain)\npicking this:\n  finite (E - {x})\n  E = E - {x} \\<union> {x}\n  x \\<notin> E - {x}", "have \"mset_set (?E \\<union> { x }) = mset_set ?E + {# x #}\""], ["proof (prove)\nusing this:\n  finite (E - {x})\n  E = E - {x} \\<union> {x}\n  x \\<notin> E - {x}\n\ngoal (1 subgoal):\n 1. mset_set (E - {x} \\<union> {x}) = mset_set (E - {x}) + {#x#}", "using mset_set_insert [of x ?E]"], ["proof (prove)\nusing this:\n  finite (E - {x})\n  E = E - {x} \\<union> {x}\n  x \\<notin> E - {x}\n  \\<lbrakk>x \\<notin> E - {x}; finite (E - {x})\\<rbrakk>\n  \\<Longrightarrow> mset_set (E - {x} \\<union> {x}) =\n                    mset_set (E - {x}) + {#x#}\n\ngoal (1 subgoal):\n 1. mset_set (E - {x} \\<union> {x}) = mset_set (E - {x}) + {#x#}", "by auto"], ["proof (state)\nthis:\n  mset_set (E - {x} \\<union> {x}) = mset_set (E - {x}) + {#x#}\n\ngoal (1 subgoal):\n 1. \\<And>N E.\n       \\<lbrakk>\\<And>E.\n                   \\<lbrakk>card E = N; finite E\\<rbrakk>\n                   \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                                     image_mset g (mset_set E);\n        card E = Suc N; finite E\\<rbrakk>\n       \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                         image_mset g (mset_set E)", "from this"], ["proof (chain)\npicking this:\n  mset_set (E - {x} \\<union> {x}) = mset_set (E - {x}) + {#x#}", "have \n    \"{# (g x). x \\<in># mset_set (?E \\<union> { x }) #} = {# (g x). x \\<in># mset_set ?E #} + {# (g x) #}\""], ["proof (prove)\nusing this:\n  mset_set (E - {x} \\<union> {x}) = mset_set (E - {x}) + {#x#}\n\ngoal (1 subgoal):\n 1. image_mset g (mset_set (E - {x} \\<union> {x})) =\n    image_mset g (mset_set (E - {x})) + {#g x#}", "by auto"], ["proof (state)\nthis:\n  image_mset g (mset_set (E - {x} \\<union> {x})) =\n  image_mset g (mset_set (E - {x})) + {#g x#}\n\ngoal (1 subgoal):\n 1. \\<And>N E.\n       \\<lbrakk>\\<And>E.\n                   \\<lbrakk>card E = N; finite E\\<rbrakk>\n                   \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                                     image_mset g (mset_set E);\n        card E = Suc N; finite E\\<rbrakk>\n       \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                         image_mset g (mset_set E)", "have \"(g ` (?E \\<union> { x }) = (g ` ?E) \\<union> { g x })\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g ` (E - {x} \\<union> {x}) = g ` (E - {x}) \\<union> {g x}", "by auto"], ["proof (state)\nthis:\n  g ` (E - {x} \\<union> {x}) = g ` (E - {x}) \\<union> {g x}\n\ngoal (1 subgoal):\n 1. \\<And>N E.\n       \\<lbrakk>\\<And>E.\n                   \\<lbrakk>card E = N; finite E\\<rbrakk>\n                   \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                                     image_mset g (mset_set E);\n        card E = Suc N; finite E\\<rbrakk>\n       \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                         image_mset g (mset_set E)", "from this"], ["proof (chain)\npicking this:\n  g ` (E - {x} \\<union> {x}) = g ` (E - {x}) \\<union> {g x}", "have i: \"mset_set (g ` (?E \\<union> { x })) = mset_set ( (g ` ?E) \\<union> { g x } )\""], ["proof (prove)\nusing this:\n  g ` (E - {x} \\<union> {x}) = g ` (E - {x}) \\<union> {g x}\n\ngoal (1 subgoal):\n 1. mset_set (g ` (E - {x} \\<union> {x})) =\n    mset_set (g ` (E - {x}) \\<union> {g x})", "by auto"], ["proof (state)\nthis:\n  mset_set (g ` (E - {x} \\<union> {x})) =\n  mset_set (g ` (E - {x}) \\<union> {g x})\n\ngoal (1 subgoal):\n 1. \\<And>N E.\n       \\<lbrakk>\\<And>E.\n                   \\<lbrakk>card E = N; finite E\\<rbrakk>\n                   \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                                     image_mset g (mset_set E);\n        card E = Suc N; finite E\\<rbrakk>\n       \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                         image_mset g (mset_set E)", "from \\<open>finite ?E\\<close>"], ["proof (chain)\npicking this:\n  finite (E - {x})", "have \"finite (g ` ?E)\""], ["proof (prove)\nusing this:\n  finite (E - {x})\n\ngoal (1 subgoal):\n 1. finite (g ` (E - {x}))", "by auto"], ["proof (state)\nthis:\n  finite (g ` (E - {x}))\n\ngoal (1 subgoal):\n 1. \\<And>N E.\n       \\<lbrakk>\\<And>E.\n                   \\<lbrakk>card E = N; finite E\\<rbrakk>\n                   \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                                     image_mset g (mset_set E);\n        card E = Suc N; finite E\\<rbrakk>\n       \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                         image_mset g (mset_set E)", "from this"], ["proof (chain)\npicking this:\n  finite (g ` (E - {x}))", "have \"mset_set ( (g ` ?E) \\<union> { g x } ) \\<subseteq># mset_set (g ` ?E) + {# (g x) #}\""], ["proof (prove)\nusing this:\n  finite (g ` (E - {x}))\n\ngoal (1 subgoal):\n 1. mset_set (g ` (E - {x}) \\<union> {g x}) \\<subseteq>#\n    mset_set (g ` (E - {x})) + {#g x#}", "using  mset_set_insert_eq [of \"(g ` ?E)\" \"(g x)\" ]"], ["proof (prove)\nusing this:\n  finite (g ` (E - {x}))\n  finite (g ` (E - {x})) \\<Longrightarrow>\n  mset_set (g ` (E - {x}) \\<union> {g x}) \\<subseteq>#\n  mset_set (g ` (E - {x})) + {#g x#}\n\ngoal (1 subgoal):\n 1. mset_set (g ` (E - {x}) \\<union> {g x}) \\<subseteq>#\n    mset_set (g ` (E - {x})) + {#g x#}", "by meson"], ["proof (state)\nthis:\n  mset_set (g ` (E - {x}) \\<union> {g x}) \\<subseteq>#\n  mset_set (g ` (E - {x})) + {#g x#}\n\ngoal (1 subgoal):\n 1. \\<And>N E.\n       \\<lbrakk>\\<And>E.\n                   \\<lbrakk>card E = N; finite E\\<rbrakk>\n                   \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                                     image_mset g (mset_set E);\n        card E = Suc N; finite E\\<rbrakk>\n       \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                         image_mset g (mset_set E)", "from this i"], ["proof (chain)\npicking this:\n  mset_set (g ` (E - {x}) \\<union> {g x}) \\<subseteq>#\n  mset_set (g ` (E - {x})) + {#g x#}\n  mset_set (g ` (E - {x} \\<union> {x})) =\n  mset_set (g ` (E - {x}) \\<union> {g x})", "have ii: \"mset_set (g ` (?E \\<union> { x })) \\<subseteq># mset_set (g ` ?E) + {# (g x) #}\""], ["proof (prove)\nusing this:\n  mset_set (g ` (E - {x}) \\<union> {g x}) \\<subseteq>#\n  mset_set (g ` (E - {x})) + {#g x#}\n  mset_set (g ` (E - {x} \\<union> {x})) =\n  mset_set (g ` (E - {x}) \\<union> {g x})\n\ngoal (1 subgoal):\n 1. mset_set (g ` (E - {x} \\<union> {x})) \\<subseteq>#\n    mset_set (g ` (E - {x})) + {#g x#}", "by auto"], ["proof (state)\nthis:\n  mset_set (g ` (E - {x} \\<union> {x})) \\<subseteq>#\n  mset_set (g ` (E - {x})) + {#g x#}\n\ngoal (1 subgoal):\n 1. \\<And>N E.\n       \\<lbrakk>\\<And>E.\n                   \\<lbrakk>card E = N; finite E\\<rbrakk>\n                   \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                                     image_mset g (mset_set E);\n        card E = Suc N; finite E\\<rbrakk>\n       \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                         image_mset g (mset_set E)", "from ind"], ["proof (chain)\npicking this:\n  mset_set (g ` (E - {x})) \\<subseteq># image_mset g (mset_set (E - {x}))", "have \"mset_set (g ` ?E) + {# (g x) #} \\<subseteq>#  {# (g x). x \\<in># mset_set (?E) #} + {# (g x) #}\""], ["proof (prove)\nusing this:\n  mset_set (g ` (E - {x})) \\<subseteq># image_mset g (mset_set (E - {x}))\n\ngoal (1 subgoal):\n 1. mset_set (g ` (E - {x})) + {#g x#} \\<subseteq>#\n    image_mset g (mset_set (E - {x})) + {#g x#}", "using Multiset.subset_mset.add_right_mono"], ["proof (prove)\nusing this:\n  mset_set (g ` (E - {x})) \\<subseteq># image_mset g (mset_set (E - {x}))\n  ?a \\<subseteq># ?b \\<Longrightarrow> ?a + ?c \\<subseteq># ?b + ?c\n\ngoal (1 subgoal):\n 1. mset_set (g ` (E - {x})) + {#g x#} \\<subseteq>#\n    image_mset g (mset_set (E - {x})) + {#g x#}", "by metis"], ["proof (state)\nthis:\n  mset_set (g ` (E - {x})) + {#g x#} \\<subseteq>#\n  image_mset g (mset_set (E - {x})) + {#g x#}\n\ngoal (1 subgoal):\n 1. \\<And>N E.\n       \\<lbrakk>\\<And>E.\n                   \\<lbrakk>card E = N; finite E\\<rbrakk>\n                   \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                                     image_mset g (mset_set E);\n        card E = Suc N; finite E\\<rbrakk>\n       \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                         image_mset g (mset_set E)", "from this and ii"], ["proof (chain)\npicking this:\n  mset_set (g ` (E - {x})) + {#g x#} \\<subseteq>#\n  image_mset g (mset_set (E - {x})) + {#g x#}\n  mset_set (g ` (E - {x} \\<union> {x})) \\<subseteq>#\n  mset_set (g ` (E - {x})) + {#g x#}", "have \"mset_set (g ` (?E \\<union> { x })) \\<subseteq># {# (g x). x \\<in># mset_set (?E) #} + {# (g x) #}\""], ["proof (prove)\nusing this:\n  mset_set (g ` (E - {x})) + {#g x#} \\<subseteq>#\n  image_mset g (mset_set (E - {x})) + {#g x#}\n  mset_set (g ` (E - {x} \\<union> {x})) \\<subseteq>#\n  mset_set (g ` (E - {x})) + {#g x#}\n\ngoal (1 subgoal):\n 1. mset_set (g ` (E - {x} \\<union> {x})) \\<subseteq>#\n    image_mset g (mset_set (E - {x})) + {#g x#}", "using Multiset.subset_mset.order.trans [of \"mset_set (g ` (?E \\<union> { x }))\" ]"], ["proof (prove)\nusing this:\n  mset_set (g ` (E - {x})) + {#g x#} \\<subseteq>#\n  image_mset g (mset_set (E - {x})) + {#g x#}\n  mset_set (g ` (E - {x} \\<union> {x})) \\<subseteq>#\n  mset_set (g ` (E - {x})) + {#g x#}\n  \\<lbrakk>mset_set (g ` (E - {x} \\<union> {x})) \\<subseteq># ?b;\n   ?b \\<subseteq># ?c\\<rbrakk>\n  \\<Longrightarrow> mset_set (g ` (E - {x} \\<union> {x})) \\<subseteq># ?c\n\ngoal (1 subgoal):\n 1. mset_set (g ` (E - {x} \\<union> {x})) \\<subseteq>#\n    image_mset g (mset_set (E - {x})) + {#g x#}", "by metis"], ["proof (state)\nthis:\n  mset_set (g ` (E - {x} \\<union> {x})) \\<subseteq>#\n  image_mset g (mset_set (E - {x})) + {#g x#}\n\ngoal (1 subgoal):\n 1. \\<And>N E.\n       \\<lbrakk>\\<And>E.\n                   \\<lbrakk>card E = N; finite E\\<rbrakk>\n                   \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                                     image_mset g (mset_set E);\n        card E = Suc N; finite E\\<rbrakk>\n       \\<Longrightarrow> mset_set (g ` E) \\<subseteq>#\n                         image_mset g (mset_set E)", "from this and \\<open>E = ?E \\<union> { x }\\<close> \\<open>{# (g x). x \\<in># mset_set (?E \\<union> { x }) #} = {# (g x). x \\<in># mset_set ?E #} + {# (g x) #}\\<close>"], ["proof (chain)\npicking this:\n  mset_set (g ` (E - {x} \\<union> {x})) \\<subseteq>#\n  image_mset g (mset_set (E - {x})) + {#g x#}\n  E = E - {x} \\<union> {x}\n  image_mset g (mset_set (E - {x} \\<union> {x})) =\n  image_mset g (mset_set (E - {x})) + {#g x#}", "show \"mset_set (g ` E) \\<subseteq># {# (g x). x \\<in># mset_set E #}\""], ["proof (prove)\nusing this:\n  mset_set (g ` (E - {x} \\<union> {x})) \\<subseteq>#\n  image_mset g (mset_set (E - {x})) + {#g x#}\n  E = E - {x} \\<union> {x}\n  image_mset g (mset_set (E - {x} \\<union> {x})) =\n  image_mset g (mset_set (E - {x})) + {#g x#}\n\ngoal (1 subgoal):\n 1. mset_set (g ` E) \\<subseteq># image_mset g (mset_set E)", "by metis"], ["proof (state)\nthis:\n  mset_set (g ` E) \\<subseteq># image_mset g (mset_set E)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma split_mset_set: \n  assumes \"C = C1 \\<union> C2\"\n  assumes \"C1 \\<inter> C2 = {}\"\n  assumes \"finite C1\"\n  assumes \"finite C2\"\n  shows \"(mset_set C) = (mset_set C1) + (mset_set C2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mset_set C = mset_set C1 + mset_set C2", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. mset_set C \\<noteq> mset_set C1 + mset_set C2 \\<Longrightarrow> False", "assume \"(mset_set C) \\<noteq> (mset_set C1) + (mset_set C2)\""], ["proof (state)\nthis:\n  mset_set C \\<noteq> mset_set C1 + mset_set C2\n\ngoal (1 subgoal):\n 1. mset_set C \\<noteq> mset_set C1 + mset_set C2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  mset_set C \\<noteq> mset_set C1 + mset_set C2", "obtain x where \"count (mset_set C) x \\<noteq> count ((mset_set C1) + (mset_set C2)) x\""], ["proof (prove)\nusing this:\n  mset_set C \\<noteq> mset_set C1 + mset_set C2\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        count (mset_set C) x \\<noteq>\n        count (mset_set C1 + mset_set C2) x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (meson multiset_eqI)"], ["proof (state)\nthis:\n  count (mset_set C) x \\<noteq> count (mset_set C1 + mset_set C2) x\n\ngoal (1 subgoal):\n 1. mset_set C \\<noteq> mset_set C1 + mset_set C2 \\<Longrightarrow> False", "from assms(3) assms(4) assms(1)"], ["proof (chain)\npicking this:\n  finite C1\n  finite C2\n  C = C1 \\<union> C2", "have \"finite C\""], ["proof (prove)\nusing this:\n  finite C1\n  finite C2\n  C = C1 \\<union> C2\n\ngoal (1 subgoal):\n 1. finite C", "by auto"], ["proof (state)\nthis:\n  finite C\n\ngoal (1 subgoal):\n 1. mset_set C \\<noteq> mset_set C1 + mset_set C2 \\<Longrightarrow> False", "have \"count ((mset_set C1) + (mset_set C2)) x = (count (mset_set C1) x) + (count (mset_set C2) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. count (mset_set C1 + mset_set C2) x =\n    count (mset_set C1) x + count (mset_set C2) x", "by auto"], ["proof (state)\nthis:\n  count (mset_set C1 + mset_set C2) x =\n  count (mset_set C1) x + count (mset_set C2) x\n\ngoal (1 subgoal):\n 1. mset_set C \\<noteq> mset_set C1 + mset_set C2 \\<Longrightarrow> False", "from this and \\<open>count (mset_set C) x \\<noteq> count ((mset_set C1) + (mset_set C2)) x\\<close>"], ["proof (chain)\npicking this:\n  count (mset_set C1 + mset_set C2) x =\n  count (mset_set C1) x + count (mset_set C2) x\n  count (mset_set C) x \\<noteq> count (mset_set C1 + mset_set C2) x", "have \n    \"count (mset_set C) x \\<noteq> (count (mset_set C1) x) + (count (mset_set C2) x)\""], ["proof (prove)\nusing this:\n  count (mset_set C1 + mset_set C2) x =\n  count (mset_set C1) x + count (mset_set C2) x\n  count (mset_set C) x \\<noteq> count (mset_set C1 + mset_set C2) x\n\ngoal (1 subgoal):\n 1. count (mset_set C) x \\<noteq>\n    count (mset_set C1) x + count (mset_set C2) x", "by auto"], ["proof (state)\nthis:\n  count (mset_set C) x \\<noteq>\n  count (mset_set C1) x + count (mset_set C2) x\n\ngoal (1 subgoal):\n 1. mset_set C \\<noteq> mset_set C1 + mset_set C2 \\<Longrightarrow> False", "have \"x \\<in> C1 \\<or> x \\<in> C2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> C1 \\<or> x \\<in> C2", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (x \\<in> C1 \\<or> x \\<in> C2) \\<Longrightarrow> False", "assume \"\\<not> (x \\<in> C1 \\<or> x \\<in> C2)\""], ["proof (state)\nthis:\n  \\<not> (x \\<in> C1 \\<or> x \\<in> C2)\n\ngoal (1 subgoal):\n 1. \\<not> (x \\<in> C1 \\<or> x \\<in> C2) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> (x \\<in> C1 \\<or> x \\<in> C2)", "have \"x \\<notin> C1\" and \"x\\<notin> C2\""], ["proof (prove)\nusing this:\n  \\<not> (x \\<in> C1 \\<or> x \\<in> C2)\n\ngoal (1 subgoal):\n 1. x \\<notin> C1 &&& x \\<notin> C2", "by auto"], ["proof (state)\nthis:\n  x \\<notin> C1\n  x \\<notin> C2\n\ngoal (1 subgoal):\n 1. \\<not> (x \\<in> C1 \\<or> x \\<in> C2) \\<Longrightarrow> False", "from assms(1) \\<open>x \\<notin> C1\\<close> and \\<open>x\\<notin> C2\\<close>"], ["proof (chain)\npicking this:\n  C = C1 \\<union> C2\n  x \\<notin> C1\n  x \\<notin> C2", "have \"x \\<notin> C\""], ["proof (prove)\nusing this:\n  C = C1 \\<union> C2\n  x \\<notin> C1\n  x \\<notin> C2\n\ngoal (1 subgoal):\n 1. x \\<notin> C", "by auto"], ["proof (state)\nthis:\n  x \\<notin> C\n\ngoal (1 subgoal):\n 1. \\<not> (x \\<in> C1 \\<or> x \\<in> C2) \\<Longrightarrow> False", "from \\<open>x \\<notin> C1\\<close>"], ["proof (chain)\npicking this:\n  x \\<notin> C1", "have \"(count (mset_set C1) x) = 0\""], ["proof (prove)\nusing this:\n  x \\<notin> C1\n\ngoal (1 subgoal):\n 1. count (mset_set C1) x = 0", "by auto"], ["proof (state)\nthis:\n  count (mset_set C1) x = 0\n\ngoal (1 subgoal):\n 1. \\<not> (x \\<in> C1 \\<or> x \\<in> C2) \\<Longrightarrow> False", "from \\<open>x \\<notin> C2\\<close>"], ["proof (chain)\npicking this:\n  x \\<notin> C2", "have \"(count (mset_set C2) x) = 0\""], ["proof (prove)\nusing this:\n  x \\<notin> C2\n\ngoal (1 subgoal):\n 1. count (mset_set C2) x = 0", "by auto"], ["proof (state)\nthis:\n  count (mset_set C2) x = 0\n\ngoal (1 subgoal):\n 1. \\<not> (x \\<in> C1 \\<or> x \\<in> C2) \\<Longrightarrow> False", "from \\<open>x \\<notin> C\\<close>"], ["proof (chain)\npicking this:\n  x \\<notin> C", "have \"(count (mset_set C) x) = 0\""], ["proof (prove)\nusing this:\n  x \\<notin> C\n\ngoal (1 subgoal):\n 1. count (mset_set C) x = 0", "by auto"], ["proof (state)\nthis:\n  count (mset_set C) x = 0\n\ngoal (1 subgoal):\n 1. \\<not> (x \\<in> C1 \\<or> x \\<in> C2) \\<Longrightarrow> False", "from \\<open>(count (mset_set C1) x) = 0\\<close> \\<open>(count (mset_set C2) x) = 0\\<close> \n      \\<open>(count (mset_set C) x) = 0\\<close> \n      \\<open>count (mset_set C) x \\<noteq> (count (mset_set C1) x) + (count (mset_set C2) x)\\<close>"], ["proof (chain)\npicking this:\n  count (mset_set C1) x = 0\n  count (mset_set C2) x = 0\n  count (mset_set C) x = 0\n  count (mset_set C) x \\<noteq>\n  count (mset_set C1) x + count (mset_set C2) x", "show False"], ["proof (prove)\nusing this:\n  count (mset_set C1) x = 0\n  count (mset_set C2) x = 0\n  count (mset_set C) x = 0\n  count (mset_set C) x \\<noteq>\n  count (mset_set C1) x + count (mset_set C2) x\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> C1 \\<or> x \\<in> C2\n\ngoal (1 subgoal):\n 1. mset_set C \\<noteq> mset_set C1 + mset_set C2 \\<Longrightarrow> False", "have \"(x \\<notin> C1 \\<or> x \\<in> C2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> C1 \\<or> x \\<in> C2", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (x \\<notin> C1 \\<or> x \\<in> C2) \\<Longrightarrow> False", "assume \"\\<not> (x \\<notin> C1 \\<or> x \\<in> C2)\""], ["proof (state)\nthis:\n  \\<not> (x \\<notin> C1 \\<or> x \\<in> C2)\n\ngoal (1 subgoal):\n 1. \\<not> (x \\<notin> C1 \\<or> x \\<in> C2) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> (x \\<notin> C1 \\<or> x \\<in> C2)", "have \"x \\<in> C1\" and \" x\\<notin> C2\""], ["proof (prove)\nusing this:\n  \\<not> (x \\<notin> C1 \\<or> x \\<in> C2)\n\ngoal (1 subgoal):\n 1. x \\<in> C1 &&& x \\<notin> C2", "by auto"], ["proof (state)\nthis:\n  x \\<in> C1\n  x \\<notin> C2\n\ngoal (1 subgoal):\n 1. \\<not> (x \\<notin> C1 \\<or> x \\<in> C2) \\<Longrightarrow> False", "from assms(1) \\<open>x \\<in> C1\\<close>"], ["proof (chain)\npicking this:\n  C = C1 \\<union> C2\n  x \\<in> C1", "have \"x \\<in> C\""], ["proof (prove)\nusing this:\n  C = C1 \\<union> C2\n  x \\<in> C1\n\ngoal (1 subgoal):\n 1. x \\<in> C", "by auto"], ["proof (state)\nthis:\n  x \\<in> C\n\ngoal (1 subgoal):\n 1. \\<not> (x \\<notin> C1 \\<or> x \\<in> C2) \\<Longrightarrow> False", "from assms(3) \\<open>x \\<in> C1\\<close>"], ["proof (chain)\npicking this:\n  finite C1\n  x \\<in> C1", "have \"(count (mset_set C1) x) = 1\""], ["proof (prove)\nusing this:\n  finite C1\n  x \\<in> C1\n\ngoal (1 subgoal):\n 1. count (mset_set C1) x = 1", "by auto"], ["proof (state)\nthis:\n  count (mset_set C1) x = 1\n\ngoal (1 subgoal):\n 1. \\<not> (x \\<notin> C1 \\<or> x \\<in> C2) \\<Longrightarrow> False", "from \\<open>x \\<notin> C2\\<close>"], ["proof (chain)\npicking this:\n  x \\<notin> C2", "have \"(count (mset_set C2) x) = 0\""], ["proof (prove)\nusing this:\n  x \\<notin> C2\n\ngoal (1 subgoal):\n 1. count (mset_set C2) x = 0", "by auto"], ["proof (state)\nthis:\n  count (mset_set C2) x = 0\n\ngoal (1 subgoal):\n 1. \\<not> (x \\<notin> C1 \\<or> x \\<in> C2) \\<Longrightarrow> False", "from assms(3) assms(4) assms(1)"], ["proof (chain)\npicking this:\n  finite C1\n  finite C2\n  C = C1 \\<union> C2", "have \"finite C\""], ["proof (prove)\nusing this:\n  finite C1\n  finite C2\n  C = C1 \\<union> C2\n\ngoal (1 subgoal):\n 1. finite C", "by auto"], ["proof (state)\nthis:\n  finite C\n\ngoal (1 subgoal):\n 1. \\<not> (x \\<notin> C1 \\<or> x \\<in> C2) \\<Longrightarrow> False", "from \\<open>finite C\\<close> \\<open>x \\<in> C\\<close>"], ["proof (chain)\npicking this:\n  finite C\n  x \\<in> C", "have \"(count (mset_set C) x) = 1\""], ["proof (prove)\nusing this:\n  finite C\n  x \\<in> C\n\ngoal (1 subgoal):\n 1. count (mset_set C) x = 1", "by auto"], ["proof (state)\nthis:\n  count (mset_set C) x = 1\n\ngoal (1 subgoal):\n 1. \\<not> (x \\<notin> C1 \\<or> x \\<in> C2) \\<Longrightarrow> False", "from \\<open>(count (mset_set C1) x) = 1\\<close> \\<open>(count (mset_set C2) x) = 0\\<close> \n      \\<open>(count (mset_set C) x) = 1\\<close> \n      \\<open>count (mset_set C) x \\<noteq> (count (mset_set C1) x) + (count (mset_set C2) x)\\<close>"], ["proof (chain)\npicking this:\n  count (mset_set C1) x = 1\n  count (mset_set C2) x = 0\n  count (mset_set C) x = 1\n  count (mset_set C) x \\<noteq>\n  count (mset_set C1) x + count (mset_set C2) x", "show False"], ["proof (prove)\nusing this:\n  count (mset_set C1) x = 1\n  count (mset_set C2) x = 0\n  count (mset_set C) x = 1\n  count (mset_set C) x \\<noteq>\n  count (mset_set C1) x + count (mset_set C2) x\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<notin> C1 \\<or> x \\<in> C2\n\ngoal (1 subgoal):\n 1. mset_set C \\<noteq> mset_set C1 + mset_set C2 \\<Longrightarrow> False", "have \"(x \\<notin> C2 \\<or> x \\<in> C1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> C2 \\<or> x \\<in> C1", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (x \\<notin> C2 \\<or> x \\<in> C1) \\<Longrightarrow> False", "assume \"\\<not> (x \\<notin> C2 \\<or> x \\<in> C1)\""], ["proof (state)\nthis:\n  \\<not> (x \\<notin> C2 \\<or> x \\<in> C1)\n\ngoal (1 subgoal):\n 1. \\<not> (x \\<notin> C2 \\<or> x \\<in> C1) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> (x \\<notin> C2 \\<or> x \\<in> C1)", "have \"x \\<in> C2\" and \" x\\<notin> C1\""], ["proof (prove)\nusing this:\n  \\<not> (x \\<notin> C2 \\<or> x \\<in> C1)\n\ngoal (1 subgoal):\n 1. x \\<in> C2 &&& x \\<notin> C1", "by auto"], ["proof (state)\nthis:\n  x \\<in> C2\n  x \\<notin> C1\n\ngoal (1 subgoal):\n 1. \\<not> (x \\<notin> C2 \\<or> x \\<in> C1) \\<Longrightarrow> False", "from assms(1) \\<open>x \\<in> C2\\<close>"], ["proof (chain)\npicking this:\n  C = C1 \\<union> C2\n  x \\<in> C2", "have \"x \\<in> C\""], ["proof (prove)\nusing this:\n  C = C1 \\<union> C2\n  x \\<in> C2\n\ngoal (1 subgoal):\n 1. x \\<in> C", "by auto"], ["proof (state)\nthis:\n  x \\<in> C\n\ngoal (1 subgoal):\n 1. \\<not> (x \\<notin> C2 \\<or> x \\<in> C1) \\<Longrightarrow> False", "from assms(4) \\<open>x \\<in> C2\\<close>"], ["proof (chain)\npicking this:\n  finite C2\n  x \\<in> C2", "have \"(count (mset_set C2) x) = 1\""], ["proof (prove)\nusing this:\n  finite C2\n  x \\<in> C2\n\ngoal (1 subgoal):\n 1. count (mset_set C2) x = 1", "by auto"], ["proof (state)\nthis:\n  count (mset_set C2) x = 1\n\ngoal (1 subgoal):\n 1. \\<not> (x \\<notin> C2 \\<or> x \\<in> C1) \\<Longrightarrow> False", "from \\<open>x \\<notin> C1\\<close>"], ["proof (chain)\npicking this:\n  x \\<notin> C1", "have \"(count (mset_set C1) x) = 0\""], ["proof (prove)\nusing this:\n  x \\<notin> C1\n\ngoal (1 subgoal):\n 1. count (mset_set C1) x = 0", "by auto"], ["proof (state)\nthis:\n  count (mset_set C1) x = 0\n\ngoal (1 subgoal):\n 1. \\<not> (x \\<notin> C2 \\<or> x \\<in> C1) \\<Longrightarrow> False", "from \\<open>finite C\\<close> \\<open>x \\<in> C\\<close>"], ["proof (chain)\npicking this:\n  finite C\n  x \\<in> C", "have \"(count (mset_set C) x) = 1\""], ["proof (prove)\nusing this:\n  finite C\n  x \\<in> C\n\ngoal (1 subgoal):\n 1. count (mset_set C) x = 1", "by auto"], ["proof (state)\nthis:\n  count (mset_set C) x = 1\n\ngoal (1 subgoal):\n 1. \\<not> (x \\<notin> C2 \\<or> x \\<in> C1) \\<Longrightarrow> False", "from \\<open>(count (mset_set C2) x) = 1\\<close> \\<open>(count (mset_set C1) x) = 0\\<close> \n      \\<open>(count (mset_set C) x) = 1\\<close> \n      \\<open>count (mset_set C) x \\<noteq> (count (mset_set C1) x) + (count (mset_set C2) x)\\<close>"], ["proof (chain)\npicking this:\n  count (mset_set C2) x = 1\n  count (mset_set C1) x = 0\n  count (mset_set C) x = 1\n  count (mset_set C) x \\<noteq>\n  count (mset_set C1) x + count (mset_set C2) x", "show False"], ["proof (prove)\nusing this:\n  count (mset_set C2) x = 1\n  count (mset_set C1) x = 0\n  count (mset_set C) x = 1\n  count (mset_set C) x \\<noteq>\n  count (mset_set C1) x + count (mset_set C2) x\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<notin> C2 \\<or> x \\<in> C1\n\ngoal (1 subgoal):\n 1. mset_set C \\<noteq> mset_set C1 + mset_set C2 \\<Longrightarrow> False", "from \\<open>x \\<in> C1 \\<or> x \\<in> C2\\<close> \\<open>(x \\<notin> C1 \\<or> x \\<in> C2)\\<close> \\<open>(x \\<notin> C2 \\<or> x \\<in> C1)\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> C1 \\<or> x \\<in> C2\n  x \\<notin> C1 \\<or> x \\<in> C2\n  x \\<notin> C2 \\<or> x \\<in> C1", "have \"x \\<in> C1 \\<and> x \\<in> C2\""], ["proof (prove)\nusing this:\n  x \\<in> C1 \\<or> x \\<in> C2\n  x \\<notin> C1 \\<or> x \\<in> C2\n  x \\<notin> C2 \\<or> x \\<in> C1\n\ngoal (1 subgoal):\n 1. x \\<in> C1 \\<and> x \\<in> C2", "by blast"], ["proof (state)\nthis:\n  x \\<in> C1 \\<and> x \\<in> C2\n\ngoal (1 subgoal):\n 1. mset_set C \\<noteq> mset_set C1 + mset_set C2 \\<Longrightarrow> False", "from this and assms(2)"], ["proof (chain)\npicking this:\n  x \\<in> C1 \\<and> x \\<in> C2\n  C1 \\<inter> C2 = {}", "show False"], ["proof (prove)\nusing this:\n  x \\<in> C1 \\<and> x \\<in> C2\n  C1 \\<inter> C2 = {}\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma image_mset_thm:\n  assumes \"E = {# (f x). x \\<in># E' #}\"\n  assumes \"x \\<in># E\"\n  shows \"\\<exists> y. ((y \\<in># E') \\<and> x = (f y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y. y \\<in># E' \\<and> x = f y", "using assms"], ["proof (prove)\nusing this:\n  E = image_mset f E'\n  x \\<in># E\n\ngoal (1 subgoal):\n 1. \\<exists>y. y \\<in># E' \\<and> x = f y", "by auto"], ["", "lemma split_image_mset:\n  assumes \"M = M1 + M2\"\n  shows \"{# (f x). x \\<in># M #} = {# (f x). x \\<in># M1 #} + {# (f x). x \\<in># M2 #}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. image_mset f M = image_mset f M1 + image_mset f M2", "by (simp add: assms)"], ["", "end"]]}