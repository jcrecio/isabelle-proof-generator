{"file_name": "/home/qj213/afp-2021-10-22/thys/Complete_Non_Orders/Complete_Relations.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Complete_Non_Orders", "problem_names": ["lemmas completeI = complete_def[unfolded atomize_eq, THEN iffD2, rule_format]", "lemmas completeD = complete_def[unfolded atomize_eq, THEN iffD1, rule_format]", "lemma complete_cmono: \"CC \\<subseteq> DD \\<Longrightarrow> DD-complete \\<le> CC-complete\"", "lemma complete_empty[simp]: \"CC-complete {} r \\<longleftrightarrow> {} \\<notin> CC\"", "lemma extremed_imp_ex_bound: \"extremed A r \\<Longrightarrow> X \\<subseteq> A \\<Longrightarrow> \\<exists>b \\<in> A. bound X r b\"", "lemma extremed_iff_UNIV_complete: \"extremed A (\\<sqsubseteq>) \\<longleftrightarrow> {A}-complete A (\\<sqsubseteq>)\" (is \"?l \\<longleftrightarrow> ?r\")", "lemma pointed_iff_empty_complete: \"extremed A (\\<sqsubseteq>) \\<longleftrightarrow> {{}}-complete A (\\<sqsubseteq>)\\<^sup>-\"", "lemma pair_completeI:\n  assumes \"\\<And>x y. x \\<in> A \\<Longrightarrow> y \\<in> A \\<Longrightarrow> \\<exists>s. extreme_bound A r {x,y} s\"\n  shows \"pair_complete A r\"", "lemma pair_completeD:\n  assumes \"pair_complete A r\"\n  shows \"x \\<in> A \\<Longrightarrow> y \\<in> A \\<Longrightarrow> \\<exists>s. extreme_bound A r {x,y} s\"", "lemma pair_complete_imp_directed:\n  assumes comp: \"pair_complete A (\\<sqsubseteq>)\" shows \"directed A (\\<sqsubseteq>)\"", "lemma (in connex) pair_complete: \"pair_complete A (\\<sqsubseteq>)\"", "lemma finite_complete_le_pair_complete: \"finite_complete \\<le> pair_complete\"", "lemma conditionally_complete_imp_nonempty_imp_ex_extreme_bound_iff_ex_bound:\n  assumes comp: \"conditionally_complete A r\"\n  assumes \"X \\<subseteq> A\" and \"X \\<noteq> {}\"\n  shows \"(\\<exists>s. extreme_bound A r X s) \\<longleftrightarrow> (\\<exists>b\\<in>A. bound X r b)\"", "lemma (in transitive) local_chain:\n  assumes CA: \"range C \\<subseteq> A\"\n  shows \"(\\<forall>i::nat. C i \\<sqsubseteq> C (Suc i)) \\<longleftrightarrow> monotone (<) (\\<sqsubseteq>) C\"", "lemma monotone_directed_complete:\n  assumes comp: \"directed_complete A r\"\n  assumes fI: \"f ` I \\<subseteq> A\" and dir: \"directed I ri\" and I0: \"I \\<noteq> {}\" and mono: \"monotone_on I ri r f\"\n  shows \"\\<exists>s. extreme_bound A r (f ` I) s\"", "lemma semicomplete_nonempty_imp_extremed:\n  \"semicomplete A r \\<Longrightarrow> A \\<noteq> {} \\<Longrightarrow> extremed A r\"", "lemma connex_dual_semicomplete: \"semicomplete {C. connex C r} (\\<supseteq>)\"", "lemma complete_union: \"(CC \\<union> CC')-complete A r \\<longleftrightarrow> CC-complete A r \\<and> CC'-complete A r\"", "lemma pointed_directed_complete:\n  \"{X. directed X r}-complete A r \\<longleftrightarrow> directed_complete A r \\<and> extremed A r\\<^sup>-\"", "lemma conditionally_complete_dual:\n  assumes comp: \"conditionally_complete A (\\<sqsubseteq>)\" shows \"conditionally_complete A (\\<sqsupseteq>)\"", "lemma complete_dual:\n  \"UNIV-complete A (\\<sqsubseteq>) \\<Longrightarrow> UNIV-complete A (\\<sqsupseteq>)\"", "lemma pointed_conditionally_complete_iff_bounded_complete:\n  assumes A: \"A \\<noteq> {}\"\n  shows \"conditionally_complete A (\\<sqsubseteq>) \\<and> extremed A (\\<sqsupseteq>) \\<longleftrightarrow> bounded_complete A (\\<sqsubseteq>)\"", "lemmas connex_bounded_complete = connex_dual_semicomplete[folded bounded_complete_iff_dual_semicomplete]", "lemma (in transitive) pair_complete_iff_finite_complete:\n  \"pair_complete A (\\<sqsubseteq>) \\<longleftrightarrow> finite_complete A (\\<sqsubseteq>)\" (is \"?l \\<longleftrightarrow> ?r\")", "lemma (in complete_lattice) \"UNIV-complete UNIV (\\<le>)\"", "lemma directed_sets_directed_complete:\n  assumes cl: \"\\<forall>DC. DC \\<subseteq> AA \\<longrightarrow> (\\<forall>X\\<in>DC. directed X r) \\<longrightarrow> (\\<Union>DC) \\<in> AA\"\n  shows \"{DC. directed DC (\\<subseteq>)}-complete {X \\<in> AA. directed X r} (\\<subseteq>)\"", "lemma connex_directed_Un:\n  assumes ch: \"CC \\<subseteq> {C. connex C r}\" and dir: \"directed CC (\\<subseteq>)\"\n  shows \"connex (\\<Union>CC) r\"", "lemma connex_directed_complete: \"{DC. directed DC (\\<subseteq>)}-complete {C. connex C r} (\\<subseteq>)\""], "translations": [["", "lemmas completeI = complete_def[unfolded atomize_eq, THEN iffD2, rule_format]"], ["", "lemmas completeD = complete_def[unfolded atomize_eq, THEN iffD1, rule_format]"], ["", "lemma complete_cmono: \"CC \\<subseteq> DD \\<Longrightarrow> DD-complete \\<le> CC-complete\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CC \\<subseteq> DD \\<Longrightarrow> DD-complete \\<le> CC-complete", "by (force simp: complete_def)"], ["", "lemma complete_empty[simp]: \"CC-complete {} r \\<longleftrightarrow> {} \\<notin> CC\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CC-complete {} r = ({} \\<notin> CC)", "by (auto simp: complete_def)"], ["", "text \\<open>\nA related set $\\tp{A,\\SLE}$ is called \\emph{topped} if there is a ``top'' element $\\top \\in A$,\na greatest element in $A$.\nNote that there might be multiple tops if $(\\SLE)$ is not antisymmetric.\\<close>"], ["", "definition \"extremed A r \\<equiv> \\<exists>e. extreme A r e\""], ["", "lemma extremed_imp_ex_bound: \"extremed A r \\<Longrightarrow> X \\<subseteq> A \\<Longrightarrow> \\<exists>b \\<in> A. bound X r b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>extremed A r; X \\<subseteq> A\\<rbrakk>\n    \\<Longrightarrow> \\<exists>b\\<in>A. bound X r b", "by (auto simp: extremed_def)"], ["", "context\n  fixes less_eq :: \"'a \\<Rightarrow> 'a \\<Rightarrow> bool\" (infix \"\\<sqsubseteq>\" 50)\nbegin"], ["", "text\\<open>Toppedness can be also seen as a completeness condition,\nsince it is equivalent to saying that the universe has a supremum.\\<close>"], ["", "lemma extremed_iff_UNIV_complete: \"extremed A (\\<sqsubseteq>) \\<longleftrightarrow> {A}-complete A (\\<sqsubseteq>)\" (is \"?l \\<longleftrightarrow> ?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. extremed A (\\<sqsubseteq>) = {A}-complete A (\\<sqsubseteq>)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. extremed A (\\<sqsubseteq>) \\<Longrightarrow>\n    {A}-complete A (\\<sqsubseteq>)\n 2. {A}-complete A (\\<sqsubseteq>) \\<Longrightarrow>\n    extremed A (\\<sqsubseteq>)", "assume ?l"], ["proof (state)\nthis:\n  extremed A (\\<sqsubseteq>)\n\ngoal (2 subgoals):\n 1. extremed A (\\<sqsubseteq>) \\<Longrightarrow>\n    {A}-complete A (\\<sqsubseteq>)\n 2. {A}-complete A (\\<sqsubseteq>) \\<Longrightarrow>\n    extremed A (\\<sqsubseteq>)", "then"], ["proof (chain)\npicking this:\n  extremed A (\\<sqsubseteq>)", "obtain e where \"extreme A (\\<sqsubseteq>) e\""], ["proof (prove)\nusing this:\n  extremed A (\\<sqsubseteq>)\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        extreme A (\\<sqsubseteq>) e \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: extremed_def)"], ["proof (state)\nthis:\n  extreme A (\\<sqsubseteq>) e\n\ngoal (2 subgoals):\n 1. extremed A (\\<sqsubseteq>) \\<Longrightarrow>\n    {A}-complete A (\\<sqsubseteq>)\n 2. {A}-complete A (\\<sqsubseteq>) \\<Longrightarrow>\n    extremed A (\\<sqsubseteq>)", "then"], ["proof (chain)\npicking this:\n  extreme A (\\<sqsubseteq>) e", "have \"extreme_bound A (\\<sqsubseteq>) A e\""], ["proof (prove)\nusing this:\n  extreme A (\\<sqsubseteq>) e\n\ngoal (1 subgoal):\n 1. extreme_bound A (\\<sqsubseteq>) A e", "by auto"], ["proof (state)\nthis:\n  extreme_bound A (\\<sqsubseteq>) A e\n\ngoal (2 subgoals):\n 1. extremed A (\\<sqsubseteq>) \\<Longrightarrow>\n    {A}-complete A (\\<sqsubseteq>)\n 2. {A}-complete A (\\<sqsubseteq>) \\<Longrightarrow>\n    extremed A (\\<sqsubseteq>)", "then"], ["proof (chain)\npicking this:\n  extreme_bound A (\\<sqsubseteq>) A e", "show ?r"], ["proof (prove)\nusing this:\n  extreme_bound A (\\<sqsubseteq>) A e\n\ngoal (1 subgoal):\n 1. {A}-complete A (\\<sqsubseteq>)", "by (auto intro!: completeI)"], ["proof (state)\nthis:\n  {A}-complete A (\\<sqsubseteq>)\n\ngoal (1 subgoal):\n 1. {A}-complete A (\\<sqsubseteq>) \\<Longrightarrow>\n    extremed A (\\<sqsubseteq>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. {A}-complete A (\\<sqsubseteq>) \\<Longrightarrow>\n    extremed A (\\<sqsubseteq>)", "assume ?r"], ["proof (state)\nthis:\n  {A}-complete A (\\<sqsubseteq>)\n\ngoal (1 subgoal):\n 1. {A}-complete A (\\<sqsubseteq>) \\<Longrightarrow>\n    extremed A (\\<sqsubseteq>)", "from completeD[OF this]"], ["proof (chain)\npicking this:\n  \\<lbrakk>?X \\<subseteq> A; ?X \\<in> {A}\\<rbrakk>\n  \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) ?X)", "obtain s where \"extreme_bound A (\\<sqsubseteq>) A s\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?X \\<subseteq> A; ?X \\<in> {A}\\<rbrakk>\n  \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) ?X)\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        extreme_bound A (\\<sqsubseteq>) A s \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  extreme_bound A (\\<sqsubseteq>) A s\n\ngoal (1 subgoal):\n 1. {A}-complete A (\\<sqsubseteq>) \\<Longrightarrow>\n    extremed A (\\<sqsubseteq>)", "then"], ["proof (chain)\npicking this:\n  extreme_bound A (\\<sqsubseteq>) A s", "have \"extreme A (\\<sqsubseteq>) s\""], ["proof (prove)\nusing this:\n  extreme_bound A (\\<sqsubseteq>) A s\n\ngoal (1 subgoal):\n 1. extreme A (\\<sqsubseteq>) s", "by auto"], ["proof (state)\nthis:\n  extreme A (\\<sqsubseteq>) s\n\ngoal (1 subgoal):\n 1. {A}-complete A (\\<sqsubseteq>) \\<Longrightarrow>\n    extremed A (\\<sqsubseteq>)", "then"], ["proof (chain)\npicking this:\n  extreme A (\\<sqsubseteq>) s", "show ?l"], ["proof (prove)\nusing this:\n  extreme A (\\<sqsubseteq>) s\n\ngoal (1 subgoal):\n 1. extremed A (\\<sqsubseteq>)", "by (auto simp: extremed_def)"], ["proof (state)\nthis:\n  extremed A (\\<sqsubseteq>)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The dual notion of topped is called ``pointed'', equivalently ensuring a supremum\nof the empty set.\\<close>"], ["", "lemma pointed_iff_empty_complete: \"extremed A (\\<sqsubseteq>) \\<longleftrightarrow> {{}}-complete A (\\<sqsubseteq>)\\<^sup>-\""], ["proof (prove)\ngoal (1 subgoal):\n 1. extremed A (\\<sqsubseteq>) =\n    {{}}-complete A (\\<lambda>x y. y \\<sqsubseteq> x)", "by (auto simp: complete_def extremed_def)"], ["", "end"], ["", "text \\<open>One of the most well-studied notion of completeness would be the semilattice condition:\nevery pair of elements $x$ and $y$ has a supremum $x \\sqcup y$\n(not necessarily unique if the underlying relation is not antisymmetric).\\<close>"], ["", "definition \"pair_complete \\<equiv> {{x,y} |. x y :: 'a}-complete\""], ["", "lemma pair_completeI:\n  assumes \"\\<And>x y. x \\<in> A \\<Longrightarrow> y \\<in> A \\<Longrightarrow> \\<exists>s. extreme_bound A r {x,y} s\"\n  shows \"pair_complete A r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pair_complete A r", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> A; ?y \\<in> A\\<rbrakk>\n  \\<Longrightarrow> Ex (extreme_bound A r {?x, ?y})\n\ngoal (1 subgoal):\n 1. pair_complete A r", "by (auto simp: pair_complete_def complete_def)"], ["", "lemma pair_completeD:\n  assumes \"pair_complete A r\"\n  shows \"x \\<in> A \\<Longrightarrow> y \\<in> A \\<Longrightarrow> \\<exists>s. extreme_bound A r {x,y} s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n    \\<Longrightarrow> Ex (extreme_bound A r {x, y})", "by (intro completeD[OF assms[unfolded pair_complete_def]], auto)"], ["", "context\n  fixes less_eq :: \"'a \\<Rightarrow> 'a \\<Rightarrow> bool\" (infix \"\\<sqsubseteq>\" 50)\nbegin"], ["", "lemma pair_complete_imp_directed:\n  assumes comp: \"pair_complete A (\\<sqsubseteq>)\" shows \"directed A (\\<sqsubseteq>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. directed A (\\<sqsubseteq>)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>A.\n                            x \\<sqsubseteq> z \\<and> y \\<sqsubseteq> z", "fix x y :: 'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>A.\n                            x \\<sqsubseteq> z \\<and> y \\<sqsubseteq> z", "assume \"x \\<in> A\" \"y \\<in> A\""], ["proof (state)\nthis:\n  x \\<in> A\n  y \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>A.\n                            x \\<sqsubseteq> z \\<and> y \\<sqsubseteq> z", "with pair_completeD[OF comp this]"], ["proof (chain)\npicking this:\n  Ex (extreme_bound A (\\<sqsubseteq>) {x, y})\n  x \\<in> A\n  y \\<in> A", "show \"\\<exists>z \\<in> A. x \\<sqsubseteq> z \\<and> y \\<sqsubseteq> z\""], ["proof (prove)\nusing this:\n  Ex (extreme_bound A (\\<sqsubseteq>) {x, y})\n  x \\<in> A\n  y \\<in> A\n\ngoal (1 subgoal):\n 1. \\<exists>z\\<in>A. x \\<sqsubseteq> z \\<and> y \\<sqsubseteq> z", "by auto"], ["proof (state)\nthis:\n  \\<exists>z\\<in>A. x \\<sqsubseteq> z \\<and> y \\<sqsubseteq> z\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "lemma (in connex) pair_complete: \"pair_complete A (\\<sqsubseteq>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pair_complete A (\\<sqsubseteq>)", "proof (safe intro!: pair_completeI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) {x, y})", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) {x, y})", "assume x: \"x \\<in> A\" and y: \"y \\<in> A\""], ["proof (state)\nthis:\n  x \\<in> A\n  y \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) {x, y})", "then"], ["proof (chain)\npicking this:\n  x \\<in> A\n  y \\<in> A", "show \"\\<exists>s. extreme_bound A (\\<sqsubseteq>) {x, y} s\""], ["proof (prove)\nusing this:\n  x \\<in> A\n  y \\<in> A\n\ngoal (1 subgoal):\n 1. Ex (extreme_bound A (\\<sqsubseteq>) {x, y})", "proof (cases rule:comparable_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<sqsubseteq> y \\<Longrightarrow>\n    Ex (extreme_bound A (\\<sqsubseteq>) {x, y})\n 2. y \\<sqsubseteq> x \\<Longrightarrow>\n    Ex (extreme_bound A (\\<sqsubseteq>) {x, y})", "case le"], ["proof (state)\nthis:\n  x \\<sqsubseteq> y\n\ngoal (2 subgoals):\n 1. x \\<sqsubseteq> y \\<Longrightarrow>\n    Ex (extreme_bound A (\\<sqsubseteq>) {x, y})\n 2. y \\<sqsubseteq> x \\<Longrightarrow>\n    Ex (extreme_bound A (\\<sqsubseteq>) {x, y})", "with x y"], ["proof (chain)\npicking this:\n  x \\<in> A\n  y \\<in> A\n  x \\<sqsubseteq> y", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> A\n  y \\<in> A\n  x \\<sqsubseteq> y\n\ngoal (1 subgoal):\n 1. Ex (extreme_bound A (\\<sqsubseteq>) {x, y})", "by (auto intro!: exI[of _ y])"], ["proof (state)\nthis:\n  Ex (extreme_bound A (\\<sqsubseteq>) {x, y})\n\ngoal (1 subgoal):\n 1. y \\<sqsubseteq> x \\<Longrightarrow>\n    Ex (extreme_bound A (\\<sqsubseteq>) {x, y})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<sqsubseteq> x \\<Longrightarrow>\n    Ex (extreme_bound A (\\<sqsubseteq>) {x, y})", "case ge"], ["proof (state)\nthis:\n  y \\<sqsubseteq> x\n\ngoal (1 subgoal):\n 1. y \\<sqsubseteq> x \\<Longrightarrow>\n    Ex (extreme_bound A (\\<sqsubseteq>) {x, y})", "with x y"], ["proof (chain)\npicking this:\n  x \\<in> A\n  y \\<in> A\n  y \\<sqsubseteq> x", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> A\n  y \\<in> A\n  y \\<sqsubseteq> x\n\ngoal (1 subgoal):\n 1. Ex (extreme_bound A (\\<sqsubseteq>) {x, y})", "by (auto intro!: exI[of _ x])"], ["proof (state)\nthis:\n  Ex (extreme_bound A (\\<sqsubseteq>) {x, y})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Ex (extreme_bound A (\\<sqsubseteq>) {x, y})\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The next one assumes that every nonempty finite set has a supremum.\\<close>"], ["", "abbreviation \"finite_complete \\<equiv> {X. finite X \\<and> X \\<noteq> {}}-complete\""], ["", "lemma finite_complete_le_pair_complete: \"finite_complete \\<le> pair_complete\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_complete \\<le> pair_complete", "by (unfold pair_complete_def, rule complete_cmono, auto)"], ["", "text \\<open>The next one assumes that every nonempty bounded set has a supremum.\nIt is also called the Dedekind completeness.\\<close>"], ["", "abbreviation \"conditionally_complete A r \\<equiv> {X. \\<exists>b \\<in> A. bound X r b \\<and> X \\<noteq> {}}-complete A r\""], ["", "lemma conditionally_complete_imp_nonempty_imp_ex_extreme_bound_iff_ex_bound:\n  assumes comp: \"conditionally_complete A r\"\n  assumes \"X \\<subseteq> A\" and \"X \\<noteq> {}\"\n  shows \"(\\<exists>s. extreme_bound A r X s) \\<longleftrightarrow> (\\<exists>b\\<in>A. bound X r b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ex (extreme_bound A r X) = (\\<exists>b\\<in>A. bound X r b)", "using assms"], ["proof (prove)\nusing this:\n  conditionally_complete A r\n  X \\<subseteq> A\n  X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. Ex (extreme_bound A r X) = (\\<exists>b\\<in>A. bound X r b)", "by (auto 0 4 intro!:completeD[OF comp])"], ["", "text \\<open>The $\\omega$-completeness condition demands a supremum for an $\\omega$-chain,\n  $a_1 \\sqsubseteq a_2 \\sqsubseteq \\dots$.\n  We model $\\omega$-chain as the range of a monotone map $f : i \\mapsto a_i$.\\<close>"], ["", "definition \"omega_complete A r \\<equiv> {range f | f :: nat \\<Rightarrow> 'a. monotone (\\<le>) r f}-complete A r\""], ["", "lemma (in transitive) local_chain:\n  assumes CA: \"range C \\<subseteq> A\"\n  shows \"(\\<forall>i::nat. C i \\<sqsubseteq> C (Suc i)) \\<longleftrightarrow> monotone (<) (\\<sqsubseteq>) C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>i. C i \\<sqsubseteq> C (Suc i)) =\n    monotone (<) (\\<sqsubseteq>) C", "proof (intro iffI allI monotoneI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>\\<forall>i. C i \\<sqsubseteq> C (Suc i); x < y\\<rbrakk>\n       \\<Longrightarrow> C x \\<sqsubseteq> C y\n 2. \\<And>i.\n       monotone (<) (\\<sqsubseteq>) C \\<Longrightarrow>\n       C i \\<sqsubseteq> C (Suc i)", "fix i j :: nat"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>\\<forall>i. C i \\<sqsubseteq> C (Suc i); x < y\\<rbrakk>\n       \\<Longrightarrow> C x \\<sqsubseteq> C y\n 2. \\<And>i.\n       monotone (<) (\\<sqsubseteq>) C \\<Longrightarrow>\n       C i \\<sqsubseteq> C (Suc i)", "assume loc: \"\\<forall>i. C i \\<sqsubseteq> C (Suc i)\" and ij: \"i < j\""], ["proof (state)\nthis:\n  \\<forall>i. C i \\<sqsubseteq> C (Suc i)\n  i < j\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>\\<forall>i. C i \\<sqsubseteq> C (Suc i); x < y\\<rbrakk>\n       \\<Longrightarrow> C x \\<sqsubseteq> C y\n 2. \\<And>i.\n       monotone (<) (\\<sqsubseteq>) C \\<Longrightarrow>\n       C i \\<sqsubseteq> C (Suc i)", "have \"C i \\<sqsubseteq> C (i+k+1)\" for k"], ["proof (prove)\ngoal (1 subgoal):\n 1. C i \\<sqsubseteq> C (i + k + 1)", "proof (induct k)"], ["proof (state)\ngoal (2 subgoals):\n 1. C i \\<sqsubseteq> C (i + 0 + 1)\n 2. \\<And>k.\n       C i \\<sqsubseteq> C (i + k + 1) \\<Longrightarrow>\n       C i \\<sqsubseteq> C (i + Suc k + 1)", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. C i \\<sqsubseteq> C (i + 0 + 1)\n 2. \\<And>k.\n       C i \\<sqsubseteq> C (i + k + 1) \\<Longrightarrow>\n       C i \\<sqsubseteq> C (i + Suc k + 1)", "from loc"], ["proof (chain)\npicking this:\n  \\<forall>i. C i \\<sqsubseteq> C (Suc i)", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>i. C i \\<sqsubseteq> C (Suc i)\n\ngoal (1 subgoal):\n 1. C i \\<sqsubseteq> C (i + 0 + 1)", "by auto"], ["proof (state)\nthis:\n  C i \\<sqsubseteq> C (i + 0 + 1)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       C i \\<sqsubseteq> C (i + k + 1) \\<Longrightarrow>\n       C i \\<sqsubseteq> C (i + Suc k + 1)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       C i \\<sqsubseteq> C (i + k + 1) \\<Longrightarrow>\n       C i \\<sqsubseteq> C (i + Suc k + 1)", "case (Suc k)"], ["proof (state)\nthis:\n  C i \\<sqsubseteq> C (i + k + 1)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       C i \\<sqsubseteq> C (i + k + 1) \\<Longrightarrow>\n       C i \\<sqsubseteq> C (i + Suc k + 1)", "also"], ["proof (state)\nthis:\n  C i \\<sqsubseteq> C (i + k + 1)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       C i \\<sqsubseteq> C (i + k + 1) \\<Longrightarrow>\n       C i \\<sqsubseteq> C (i + Suc k + 1)", "have \"C (i+k+1) \\<sqsubseteq> C (i+k+Suc 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C (i + k + 1) \\<sqsubseteq> C (i + k + Suc 1)", "using loc"], ["proof (prove)\nusing this:\n  \\<forall>i. C i \\<sqsubseteq> C (Suc i)\n\ngoal (1 subgoal):\n 1. C (i + k + 1) \\<sqsubseteq> C (i + k + Suc 1)", "by auto"], ["proof (state)\nthis:\n  C (i + k + 1) \\<sqsubseteq> C (i + k + Suc 1)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       C i \\<sqsubseteq> C (i + k + 1) \\<Longrightarrow>\n       C i \\<sqsubseteq> C (i + Suc k + 1)", "finally"], ["proof (chain)\npicking this:\n  \\<lbrakk>C i \\<in> A; C (i + k + 1) \\<in> A;\n   C (i + k + Suc 1) \\<in> A\\<rbrakk>\n  \\<Longrightarrow> C i \\<sqsubseteq> C (i + k + Suc 1)", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>C i \\<in> A; C (i + k + 1) \\<in> A;\n   C (i + k + Suc 1) \\<in> A\\<rbrakk>\n  \\<Longrightarrow> C i \\<sqsubseteq> C (i + k + Suc 1)\n\ngoal (1 subgoal):\n 1. C i \\<sqsubseteq> C (i + Suc k + 1)", "using CA"], ["proof (prove)\nusing this:\n  \\<lbrakk>C i \\<in> A; C (i + k + 1) \\<in> A;\n   C (i + k + Suc 1) \\<in> A\\<rbrakk>\n  \\<Longrightarrow> C i \\<sqsubseteq> C (i + k + Suc 1)\n  range C \\<subseteq> A\n\ngoal (1 subgoal):\n 1. C i \\<sqsubseteq> C (i + Suc k + 1)", "by auto"], ["proof (state)\nthis:\n  C i \\<sqsubseteq> C (i + Suc k + 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  C i \\<sqsubseteq> C (i + ?k + 1)\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>\\<forall>i. C i \\<sqsubseteq> C (Suc i); x < y\\<rbrakk>\n       \\<Longrightarrow> C x \\<sqsubseteq> C y\n 2. \\<And>i.\n       monotone (<) (\\<sqsubseteq>) C \\<Longrightarrow>\n       C i \\<sqsubseteq> C (Suc i)", "from this[of \"j-i-1\"] ij"], ["proof (chain)\npicking this:\n  C i \\<sqsubseteq> C (i + (j - i - 1) + 1)\n  i < j", "show \"C i \\<sqsubseteq> C j\""], ["proof (prove)\nusing this:\n  C i \\<sqsubseteq> C (i + (j - i - 1) + 1)\n  i < j\n\ngoal (1 subgoal):\n 1. C i \\<sqsubseteq> C j", "by auto"], ["proof (state)\nthis:\n  C i \\<sqsubseteq> C j\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       monotone (<) (\\<sqsubseteq>) C \\<Longrightarrow>\n       C i \\<sqsubseteq> C (Suc i)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       monotone (<) (\\<sqsubseteq>) C \\<Longrightarrow>\n       C i \\<sqsubseteq> C (Suc i)", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       monotone (<) (\\<sqsubseteq>) C \\<Longrightarrow>\n       C i \\<sqsubseteq> C (Suc i)", "assume \"monotone (<) (\\<sqsubseteq>) C\""], ["proof (state)\nthis:\n  monotone (<) (\\<sqsubseteq>) C\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       monotone (<) (\\<sqsubseteq>) C \\<Longrightarrow>\n       C i \\<sqsubseteq> C (Suc i)", "then"], ["proof (chain)\npicking this:\n  monotone (<) (\\<sqsubseteq>) C", "show \"C i \\<sqsubseteq> C (Suc i)\""], ["proof (prove)\nusing this:\n  monotone (<) (\\<sqsubseteq>) C\n\ngoal (1 subgoal):\n 1. C i \\<sqsubseteq> C (Suc i)", "by (auto dest: monotoneD)"], ["proof (state)\nthis:\n  C i \\<sqsubseteq> C (Suc i)\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>\\emph{Directed completeness} is an important notion in domain theory~\\cite{abramski94},\nasserting that every nonempty directed set has a supremum.\nHere, a set $X$ is \\emph{directed} if any pair of two elements in $X$ has a bound in $X$.\\<close>"], ["", "definition \"directed_complete A r \\<equiv> {X. directed X r \\<and> X \\<noteq> {}}-complete A r\""], ["", "lemma monotone_directed_complete:\n  assumes comp: \"directed_complete A r\"\n  assumes fI: \"f ` I \\<subseteq> A\" and dir: \"directed I ri\" and I0: \"I \\<noteq> {}\" and mono: \"monotone_on I ri r f\"\n  shows \"\\<exists>s. extreme_bound A r (f ` I) s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ex (extreme_bound A r (f ` I))", "apply (rule completeD[OF comp[unfolded directed_complete_def], OF fI])"], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` I \\<in> {X. directed X r \\<and> X \\<noteq> {}}", "using monotone_directed_image[OF mono dir] I0"], ["proof (prove)\nusing this:\n  directed (f ` I) r\n  I \\<noteq> {}\n\ngoal (1 subgoal):\n 1. f ` I \\<in> {X. directed X r \\<and> X \\<noteq> {}}", "by auto"], ["", "text \\<open>The next one is quite complete, only the empty set may fail to have a supremum.\nThe terminology follows \\cite{Bergman2015},\nalthough there it is defined more generally depending on a cardinal $\\alpha$\nsuch that a nonempty set $X$ of cardinality below $\\alpha$ has a supremum.\\<close>"], ["", "abbreviation \"semicomplete \\<equiv> {X. X \\<noteq> {}}-complete\""], ["", "lemma semicomplete_nonempty_imp_extremed:\n  \"semicomplete A r \\<Longrightarrow> A \\<noteq> {} \\<Longrightarrow> extremed A r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>semicomplete A r; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> extremed A r", "unfolding extremed_iff_UNIV_complete"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>semicomplete A r; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> {A}-complete A r", "using complete_cmono[of \"{A}\" \"{X. X \\<noteq> {}}\"]"], ["proof (prove)\nusing this:\n  {A} \\<subseteq> {X. X \\<noteq> {}} \\<Longrightarrow>\n  semicomplete \\<le> {A}-complete\n\ngoal (1 subgoal):\n 1. \\<lbrakk>semicomplete A r; A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> {A}-complete A r", "by auto"], ["", "lemma connex_dual_semicomplete: \"semicomplete {C. connex C r} (\\<supseteq>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. semicomplete {C. connex C r} (\\<lambda>x y. y \\<subseteq> x)", "proof (intro completeI, elim CollectE)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> {C. connex C r}; X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (greatest\n                              {b \\<in> {C. connex C r}.\n                               bound X (\\<lambda>x y. y \\<subseteq> x) b})", "fix X"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> {C. connex C r}; X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (greatest\n                              {b \\<in> {C. connex C r}.\n                               bound X (\\<lambda>x y. y \\<subseteq> x) b})", "assume \"X \\<subseteq> {C. connex C r}\" and \"X \\<noteq> {}\""], ["proof (state)\nthis:\n  X \\<subseteq> {C. connex C r}\n  X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> {C. connex C r}; X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (greatest\n                              {b \\<in> {C. connex C r}.\n                               bound X (\\<lambda>x y. y \\<subseteq> x) b})", "then"], ["proof (chain)\npicking this:\n  X \\<subseteq> {C. connex C r}\n  X \\<noteq> {}", "have \"connex (\\<Inter>X) r\""], ["proof (prove)\nusing this:\n  X \\<subseteq> {C. connex C r}\n  X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. connex (\\<Inter> X) r", "by (auto simp: connex_def)"], ["proof (state)\nthis:\n  connex (\\<Inter> X) r\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> {C. connex C r}; X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (greatest\n                              {b \\<in> {C. connex C r}.\n                               bound X (\\<lambda>x y. y \\<subseteq> x) b})", "then"], ["proof (chain)\npicking this:\n  connex (\\<Inter> X) r", "have \"extreme_bound {C. connex C r} (\\<supseteq>) X (\\<Inter> X)\""], ["proof (prove)\nusing this:\n  connex (\\<Inter> X) r\n\ngoal (1 subgoal):\n 1. greatest\n     {b \\<in> {C. connex C r}. bound X (\\<lambda>x y. y \\<subseteq> x) b}\n     (\\<Inter> X)", "by auto"], ["proof (state)\nthis:\n  greatest\n   {b \\<in> {C. connex C r}. bound X (\\<lambda>x y. y \\<subseteq> x) b}\n   (\\<Inter> X)\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> {C. connex C r}; X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (greatest\n                              {b \\<in> {C. connex C r}.\n                               bound X (\\<lambda>x y. y \\<subseteq> x) b})", "then"], ["proof (chain)\npicking this:\n  greatest\n   {b \\<in> {C. connex C r}. bound X (\\<lambda>x y. y \\<subseteq> x) b}\n   (\\<Inter> X)", "show \"\\<exists>S. extreme_bound {C. connex C r} (\\<supseteq>) X S\""], ["proof (prove)\nusing this:\n  greatest\n   {b \\<in> {C. connex C r}. bound X (\\<lambda>x y. y \\<subseteq> x) b}\n   (\\<Inter> X)\n\ngoal (1 subgoal):\n 1. Ex (greatest\n         {b \\<in> {C. connex C r}.\n          bound X (\\<lambda>x y. y \\<subseteq> x) b})", "by auto"], ["proof (state)\nthis:\n  Ex (greatest\n       {b \\<in> {C. connex C r}. bound X (\\<lambda>x y. y \\<subseteq> x) b})\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Pointed Ones\\<close>"], ["", "text \\<open>The term `pointed' refers to the dual notion of toppedness, i.e., there is a global least element.\n  This serves as the supremum of the empty set.\\<close>"], ["", "lemma complete_union: \"(CC \\<union> CC')-complete A r \\<longleftrightarrow> CC-complete A r \\<and> CC'-complete A r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (CC \\<union> CC')-complete A r =\n    (CC-complete A r \\<and> CC'-complete A r)", "by (auto simp: complete_def)"], ["", "lemma pointed_directed_complete:\n  \"{X. directed X r}-complete A r \\<longleftrightarrow> directed_complete A r \\<and> extremed A r\\<^sup>-\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {X. directed X r}-complete A r =\n    (directed_complete A r \\<and> extremed A (\\<lambda>x y. r y x))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. {X. directed X r}-complete A r =\n    (directed_complete A r \\<and> extremed A (\\<lambda>x y. r y x))", "have [simp]: \"{X. directed X r \\<and> X \\<noteq> {} \\<or> X = {}} = {X. directed X r}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {X. directed X r \\<and> X \\<noteq> {} \\<or> X = {}} = {X. directed X r}", "by auto"], ["proof (state)\nthis:\n  {X. directed X r \\<and> X \\<noteq> {} \\<or> X = {}} = {X. directed X r}\n\ngoal (1 subgoal):\n 1. {X. directed X r}-complete A r =\n    (directed_complete A r \\<and> extremed A (\\<lambda>x y. r y x))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. {X. directed X r}-complete A r =\n    (directed_complete A r \\<and> extremed A (\\<lambda>x y. r y x))", "by (auto simp: directed_complete_def pointed_iff_empty_complete complete_union[symmetric] Un_def)"], ["proof (state)\nthis:\n  {X. directed X r}-complete A r =\n  (directed_complete A r \\<and> extremed A (\\<lambda>x y. r y x))\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>``Bounded complete'' refers to pointed conditional complete,\nbut this notion is just the dual of semicompleteness. We prove this later.\\<close>"], ["", "abbreviation \"bounded_complete A r \\<equiv> {X. \\<exists>b\\<in>A. bound X r b}-complete A r\""], ["", "subsection \\<open>Relations between Completeness Conditions\\<close>"], ["", "context\n  fixes less_eq :: \"'a \\<Rightarrow> 'a \\<Rightarrow> bool\" (infix \"\\<sqsubseteq>\" 50)\nbegin"], ["", "interpretation less_eq_notations"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "text \\<open>Pair-completeness implies that the universe is directed. Thus, with directed completeness\nimplies toppedness.\\<close>"], ["", "proposition directed_complete_pair_complete_imp_extremed:\n  assumes dc: \"directed_complete A (\\<sqsubseteq>)\" and pc: \"pair_complete A (\\<sqsubseteq>)\" and A: \"A \\<noteq> {}\"\n  shows \"extremed A (\\<sqsubseteq>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. extremed A (\\<sqsubseteq>)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. extremed A (\\<sqsubseteq>)", "have \"\\<exists>s. extreme_bound A (\\<sqsubseteq>) A s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ex (extreme_bound A (\\<sqsubseteq>) A)", "apply (rule completeD[OF dc[unfolded directed_complete_def]])"], ["proof (prove)\ngoal (2 subgoals):\n 1. A \\<subseteq> A\n 2. A \\<in> {X. directed X (\\<sqsubseteq>) \\<and> X \\<noteq> {}}", "using pair_complete_imp_directed[OF pc] A"], ["proof (prove)\nusing this:\n  directed A (\\<sqsubseteq>)\n  A \\<noteq> {}\n\ngoal (2 subgoals):\n 1. A \\<subseteq> A\n 2. A \\<in> {X. directed X (\\<sqsubseteq>) \\<and> X \\<noteq> {}}", "by auto"], ["proof (state)\nthis:\n  Ex (extreme_bound A (\\<sqsubseteq>) A)\n\ngoal (1 subgoal):\n 1. extremed A (\\<sqsubseteq>)", "then"], ["proof (chain)\npicking this:\n  Ex (extreme_bound A (\\<sqsubseteq>) A)", "obtain t where \"extreme_bound A (\\<sqsubseteq>) A t\""], ["proof (prove)\nusing this:\n  Ex (extreme_bound A (\\<sqsubseteq>) A)\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        extreme_bound A (\\<sqsubseteq>) A t \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  extreme_bound A (\\<sqsubseteq>) A t\n\ngoal (1 subgoal):\n 1. extremed A (\\<sqsubseteq>)", "then"], ["proof (chain)\npicking this:\n  extreme_bound A (\\<sqsubseteq>) A t", "have \"\\<forall>x \\<in> A. x \\<sqsubseteq> t\" and \"t \\<in> A\""], ["proof (prove)\nusing this:\n  extreme_bound A (\\<sqsubseteq>) A t\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>A. x \\<sqsubseteq> t &&& t \\<in> A", "by auto"], ["proof (state)\nthis:\n  \\<forall>x\\<in>A. x \\<sqsubseteq> t\n  t \\<in> A\n\ngoal (1 subgoal):\n 1. extremed A (\\<sqsubseteq>)", "then"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>A. x \\<sqsubseteq> t\n  t \\<in> A", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>A. x \\<sqsubseteq> t\n  t \\<in> A\n\ngoal (1 subgoal):\n 1. extremed A (\\<sqsubseteq>)", "by (auto simp: extremed_def)"], ["proof (state)\nthis:\n  extremed A (\\<sqsubseteq>)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Semicomplete is conditional complete and topped.\\<close>"], ["", "proposition semicomplete_iff_conditionally_complete_extremed:\n  assumes A: \"A \\<noteq> {}\"\n  shows \"semicomplete A (\\<sqsubseteq>) \\<longleftrightarrow> conditionally_complete A (\\<sqsubseteq>) \\<and> extremed A (\\<sqsubseteq>)\" (is \"?l \\<longleftrightarrow> ?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicomplete A (\\<sqsubseteq>) =\n    (conditionally_complete A (\\<sqsubseteq>) \\<and>\n     extremed A (\\<sqsubseteq>))", "proof (intro iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. semicomplete A (\\<sqsubseteq>) \\<Longrightarrow>\n    conditionally_complete A (\\<sqsubseteq>) \\<and>\n    extremed A (\\<sqsubseteq>)\n 2. conditionally_complete A (\\<sqsubseteq>) \\<and>\n    extremed A (\\<sqsubseteq>) \\<Longrightarrow>\n    semicomplete A (\\<sqsubseteq>)", "assume r: \"?r\""], ["proof (state)\nthis:\n  conditionally_complete A (\\<sqsubseteq>) \\<and> extremed A (\\<sqsubseteq>)\n\ngoal (2 subgoals):\n 1. semicomplete A (\\<sqsubseteq>) \\<Longrightarrow>\n    conditionally_complete A (\\<sqsubseteq>) \\<and>\n    extremed A (\\<sqsubseteq>)\n 2. conditionally_complete A (\\<sqsubseteq>) \\<and>\n    extremed A (\\<sqsubseteq>) \\<Longrightarrow>\n    semicomplete A (\\<sqsubseteq>)", "then"], ["proof (chain)\npicking this:\n  conditionally_complete A (\\<sqsubseteq>) \\<and> extremed A (\\<sqsubseteq>)", "have cc: \"conditionally_complete A (\\<sqsubseteq>)\" and e: \"extremed A (\\<sqsubseteq>)\""], ["proof (prove)\nusing this:\n  conditionally_complete A (\\<sqsubseteq>) \\<and> extremed A (\\<sqsubseteq>)\n\ngoal (1 subgoal):\n 1. conditionally_complete A (\\<sqsubseteq>) &&& extremed A (\\<sqsubseteq>)", "by auto"], ["proof (state)\nthis:\n  conditionally_complete A (\\<sqsubseteq>)\n  extremed A (\\<sqsubseteq>)\n\ngoal (2 subgoals):\n 1. semicomplete A (\\<sqsubseteq>) \\<Longrightarrow>\n    conditionally_complete A (\\<sqsubseteq>) \\<and>\n    extremed A (\\<sqsubseteq>)\n 2. conditionally_complete A (\\<sqsubseteq>) \\<and>\n    extremed A (\\<sqsubseteq>) \\<Longrightarrow>\n    semicomplete A (\\<sqsubseteq>)", "show ?l"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicomplete A (\\<sqsubseteq>)", "proof (intro completeI, unfold mem_Collect_eq)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> A; X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) X)", "fix X"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> A; X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) X)", "assume X: \"X \\<subseteq> A\" and \"X \\<noteq> {}\""], ["proof (state)\nthis:\n  X \\<subseteq> A\n  X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> A; X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) X)", "with extremed_imp_ex_bound[OF e X]"], ["proof (chain)\npicking this:\n  \\<exists>b\\<in>A. bound X (\\<sqsubseteq>) b\n  X \\<subseteq> A\n  X \\<noteq> {}", "show \"\\<exists>s. extreme_bound A (\\<sqsubseteq>) X s\""], ["proof (prove)\nusing this:\n  \\<exists>b\\<in>A. bound X (\\<sqsubseteq>) b\n  X \\<subseteq> A\n  X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. Ex (extreme_bound A (\\<sqsubseteq>) X)", "by (auto intro!: completeD[OF cc X])"], ["proof (state)\nthis:\n  Ex (extreme_bound A (\\<sqsubseteq>) X)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  semicomplete A (\\<sqsubseteq>)\n\ngoal (1 subgoal):\n 1. semicomplete A (\\<sqsubseteq>) \\<Longrightarrow>\n    conditionally_complete A (\\<sqsubseteq>) \\<and>\n    extremed A (\\<sqsubseteq>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. semicomplete A (\\<sqsubseteq>) \\<Longrightarrow>\n    conditionally_complete A (\\<sqsubseteq>) \\<and>\n    extremed A (\\<sqsubseteq>)", "assume l: ?l"], ["proof (state)\nthis:\n  semicomplete A (\\<sqsubseteq>)\n\ngoal (1 subgoal):\n 1. semicomplete A (\\<sqsubseteq>) \\<Longrightarrow>\n    conditionally_complete A (\\<sqsubseteq>) \\<and>\n    extremed A (\\<sqsubseteq>)", "with semicomplete_nonempty_imp_extremed[OF l] A"], ["proof (chain)\npicking this:\n  A \\<noteq> {} \\<Longrightarrow> extremed A (\\<sqsubseteq>)\n  A \\<noteq> {}\n  semicomplete A (\\<sqsubseteq>)", "show ?r"], ["proof (prove)\nusing this:\n  A \\<noteq> {} \\<Longrightarrow> extremed A (\\<sqsubseteq>)\n  A \\<noteq> {}\n  semicomplete A (\\<sqsubseteq>)\n\ngoal (1 subgoal):\n 1. conditionally_complete A (\\<sqsubseteq>) \\<and>\n    extremed A (\\<sqsubseteq>)", "by (auto intro!: completeI dest: completeD)"], ["proof (state)\nthis:\n  conditionally_complete A (\\<sqsubseteq>) \\<and> extremed A (\\<sqsubseteq>)\n\ngoal:\nNo subgoals!", "qed"], ["", "proposition complete_iff_pointed_semicomplete:\n  \"UNIV-complete A (\\<sqsubseteq>) \\<longleftrightarrow> semicomplete A (\\<sqsubseteq>) \\<and> extremed A (\\<sqsupseteq>)\" (is \"?l \\<longleftrightarrow> ?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV-complete A (\\<sqsubseteq>) =\n    (semicomplete A (\\<sqsubseteq>) \\<and>\n     extremed A (\\<lambda>x y. y \\<sqsubseteq> x))", "by (unfold pointed_iff_empty_complete complete_union[symmetric] Un_def, auto)"], ["", "text \\<open>Conditional completeness only lacks top and bottom to be complete.\\<close>"], ["", "proposition complete_iff_conditionally_complete_extremed_pointed:\n  \"UNIV-complete A (\\<sqsubseteq>) \\<longleftrightarrow> conditionally_complete A (\\<sqsubseteq>) \\<and> extremed A (\\<sqsubseteq>) \\<and> extremed A (\\<sqsupseteq>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV-complete A (\\<sqsubseteq>) =\n    (conditionally_complete A (\\<sqsubseteq>) \\<and>\n     extremed A (\\<sqsubseteq>) \\<and>\n     extremed A (\\<lambda>x y. y \\<sqsubseteq> x))", "unfolding complete_iff_pointed_semicomplete"], ["proof (prove)\ngoal (1 subgoal):\n 1. (semicomplete A (\\<sqsubseteq>) \\<and>\n     extremed A (\\<lambda>x y. y \\<sqsubseteq> x)) =\n    (conditionally_complete A (\\<sqsubseteq>) \\<and>\n     extremed A (\\<sqsubseteq>) \\<and>\n     extremed A (\\<lambda>x y. y \\<sqsubseteq> x))", "apply (cases \"A = {}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. A = {} \\<Longrightarrow>\n    (semicomplete A (\\<sqsubseteq>) \\<and>\n     extremed A (\\<lambda>x y. y \\<sqsubseteq> x)) =\n    (conditionally_complete A (\\<sqsubseteq>) \\<and>\n     extremed A (\\<sqsubseteq>) \\<and>\n     extremed A (\\<lambda>x y. y \\<sqsubseteq> x))\n 2. A \\<noteq> {} \\<Longrightarrow>\n    (semicomplete A (\\<sqsubseteq>) \\<and>\n     extremed A (\\<lambda>x y. y \\<sqsubseteq> x)) =\n    (conditionally_complete A (\\<sqsubseteq>) \\<and>\n     extremed A (\\<sqsubseteq>) \\<and>\n     extremed A (\\<lambda>x y. y \\<sqsubseteq> x))", "apply (auto intro!: completeI dest: extremed_imp_ex_bound)[1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    (semicomplete A (\\<sqsubseteq>) \\<and>\n     extremed A (\\<lambda>x y. y \\<sqsubseteq> x)) =\n    (conditionally_complete A (\\<sqsubseteq>) \\<and>\n     extremed A (\\<sqsubseteq>) \\<and>\n     extremed A (\\<lambda>x y. y \\<sqsubseteq> x))", "unfolding semicomplete_iff_conditionally_complete_extremed"], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    ((conditionally_complete A (\\<sqsubseteq>) \\<and>\n      extremed A (\\<sqsubseteq>)) \\<and>\n     extremed A (\\<lambda>x y. y \\<sqsubseteq> x)) =\n    (conditionally_complete A (\\<sqsubseteq>) \\<and>\n     extremed A (\\<sqsubseteq>) \\<and>\n     extremed A (\\<lambda>x y. y \\<sqsubseteq> x))", "apply (auto intro:completeI)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text \\<open>If the universe is directed, then every pair is bounded, and thus has a supremum.\n  On the other hand, supremum gives an upper bound, witnessing directedness.\\<close>"], ["", "proposition conditionally_complete_imp_pair_complete_iff_directed:\n  assumes comp: \"conditionally_complete A (\\<sqsubseteq>)\"\n  shows \"pair_complete A (\\<sqsubseteq>) \\<longleftrightarrow> directed A (\\<sqsubseteq>)\" (is \"?l \\<longleftrightarrow> ?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. pair_complete A (\\<sqsubseteq>) = directed A (\\<sqsubseteq>)", "proof(intro iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. pair_complete A (\\<sqsubseteq>) \\<Longrightarrow>\n    directed A (\\<sqsubseteq>)\n 2. directed A (\\<sqsubseteq>) \\<Longrightarrow>\n    pair_complete A (\\<sqsubseteq>)", "assume ?r"], ["proof (state)\nthis:\n  directed A (\\<sqsubseteq>)\n\ngoal (2 subgoals):\n 1. pair_complete A (\\<sqsubseteq>) \\<Longrightarrow>\n    directed A (\\<sqsubseteq>)\n 2. directed A (\\<sqsubseteq>) \\<Longrightarrow>\n    pair_complete A (\\<sqsubseteq>)", "then"], ["proof (chain)\npicking this:\n  directed A (\\<sqsubseteq>)", "show ?l"], ["proof (prove)\nusing this:\n  directed A (\\<sqsubseteq>)\n\ngoal (1 subgoal):\n 1. pair_complete A (\\<sqsubseteq>)", "by (auto intro!: pair_completeI completeD[OF comp] elim: directedE)"], ["proof (state)\nthis:\n  pair_complete A (\\<sqsubseteq>)\n\ngoal (1 subgoal):\n 1. pair_complete A (\\<sqsubseteq>) \\<Longrightarrow>\n    directed A (\\<sqsubseteq>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. pair_complete A (\\<sqsubseteq>) \\<Longrightarrow>\n    directed A (\\<sqsubseteq>)", "assume pc: ?l"], ["proof (state)\nthis:\n  pair_complete A (\\<sqsubseteq>)\n\ngoal (1 subgoal):\n 1. pair_complete A (\\<sqsubseteq>) \\<Longrightarrow>\n    directed A (\\<sqsubseteq>)", "show ?r"], ["proof (prove)\ngoal (1 subgoal):\n 1. directed A (\\<sqsubseteq>)", "proof (intro directedI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>A.\n                            x \\<sqsubseteq> z \\<and> y \\<sqsubseteq> z", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>A.\n                            x \\<sqsubseteq> z \\<and> y \\<sqsubseteq> z", "assume \"x \\<in> A\" and \"y \\<in> A\""], ["proof (state)\nthis:\n  x \\<in> A\n  y \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>A.\n                            x \\<sqsubseteq> z \\<and> y \\<sqsubseteq> z", "with pc"], ["proof (chain)\npicking this:\n  pair_complete A (\\<sqsubseteq>)\n  x \\<in> A\n  y \\<in> A", "obtain z where \"extreme_bound A (\\<sqsubseteq>) {x,y} z\""], ["proof (prove)\nusing this:\n  pair_complete A (\\<sqsubseteq>)\n  x \\<in> A\n  y \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        extreme_bound A (\\<sqsubseteq>) {x, y} z \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto dest: pair_completeD)"], ["proof (state)\nthis:\n  extreme_bound A (\\<sqsubseteq>) {x, y} z\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>A.\n                            x \\<sqsubseteq> z \\<and> y \\<sqsubseteq> z", "then"], ["proof (chain)\npicking this:\n  extreme_bound A (\\<sqsubseteq>) {x, y} z", "show \"\\<exists>z\\<in>A. x \\<sqsubseteq> z \\<and> y \\<sqsubseteq> z\""], ["proof (prove)\nusing this:\n  extreme_bound A (\\<sqsubseteq>) {x, y} z\n\ngoal (1 subgoal):\n 1. \\<exists>z\\<in>A. x \\<sqsubseteq> z \\<and> y \\<sqsubseteq> z", "by auto"], ["proof (state)\nthis:\n  \\<exists>z\\<in>A. x \\<sqsubseteq> z \\<and> y \\<sqsubseteq> z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  directed A (\\<sqsubseteq>)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "text \\<open>Following is a new generalization of (weak) chain-completeness:\\<close>"], ["", "abbreviation \"well_complete A r \\<equiv> {X. well_related_set X r}-complete A r\""], ["", "subsection \\<open>Duality of Completeness Conditions\\<close>"], ["", "text \\<open>Conditional completeness is symmetric.\\<close>"], ["", "context fixes less_eq :: \"'a \\<Rightarrow> 'a \\<Rightarrow> bool\" (infix \"\\<sqsubseteq>\" 50)\nbegin"], ["", "interpretation less_eq_notations"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "lemma conditionally_complete_dual:\n  assumes comp: \"conditionally_complete A (\\<sqsubseteq>)\" shows \"conditionally_complete A (\\<sqsupseteq>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conditionally_complete A (\\<lambda>x y. y \\<sqsubseteq> x)", "proof (intro completeI, elim CollectE)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> A;\n        \\<exists>b\\<in>A.\n           bound X (\\<lambda>x y. y \\<sqsubseteq> x) b \\<and>\n           X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A\n                              (\\<lambda>x y. y \\<sqsubseteq> x) X)", "fix X"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> A;\n        \\<exists>b\\<in>A.\n           bound X (\\<lambda>x y. y \\<sqsubseteq> x) b \\<and>\n           X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A\n                              (\\<lambda>x y. y \\<sqsubseteq> x) X)", "assume XA: \"X \\<subseteq> A\""], ["proof (state)\nthis:\n  X \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> A;\n        \\<exists>b\\<in>A.\n           bound X (\\<lambda>x y. y \\<sqsubseteq> x) b \\<and>\n           X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A\n                              (\\<lambda>x y. y \\<sqsubseteq> x) X)", "define B where [simp]: \"B \\<equiv> {b\\<in>A. bound X (\\<sqsupseteq>) b}\""], ["proof (state)\nthis:\n  B \\<equiv> {b \\<in> A. bound X (\\<lambda>x y. y \\<sqsubseteq> x) b}\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> A;\n        \\<exists>b\\<in>A.\n           bound X (\\<lambda>x y. y \\<sqsubseteq> x) b \\<and>\n           X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A\n                              (\\<lambda>x y. y \\<sqsubseteq> x) X)", "assume bound: \"\\<exists>b\\<in>A. bound X (\\<sqsupseteq>) b \\<and> X \\<noteq> {}\""], ["proof (state)\nthis:\n  \\<exists>b\\<in>A.\n     bound X (\\<lambda>x y. y \\<sqsubseteq> x) b \\<and> X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> A;\n        \\<exists>b\\<in>A.\n           bound X (\\<lambda>x y. y \\<sqsubseteq> x) b \\<and>\n           X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A\n                              (\\<lambda>x y. y \\<sqsubseteq> x) X)", "with in_mono[OF XA]"], ["proof (chain)\npicking this:\n  ?x \\<in> X \\<longrightarrow> ?x \\<in> A\n  \\<exists>b\\<in>A.\n     bound X (\\<lambda>x y. y \\<sqsubseteq> x) b \\<and> X \\<noteq> {}", "have B: \"B \\<subseteq> A\" and \"\\<exists>b \\<in> A. bound B (\\<sqsubseteq>) b\" and \"B \\<noteq> {}\""], ["proof (prove)\nusing this:\n  ?x \\<in> X \\<longrightarrow> ?x \\<in> A\n  \\<exists>b\\<in>A.\n     bound X (\\<lambda>x y. y \\<sqsubseteq> x) b \\<and> X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. B \\<subseteq> A &&&\n    \\<exists>b\\<in>A. bound B (\\<sqsubseteq>) b &&& B \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  B \\<subseteq> A\n  \\<exists>b\\<in>A. bound B (\\<sqsubseteq>) b\n  B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> A;\n        \\<exists>b\\<in>A.\n           bound X (\\<lambda>x y. y \\<sqsubseteq> x) b \\<and>\n           X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A\n                              (\\<lambda>x y. y \\<sqsubseteq> x) X)", "from comp[THEN completeD, OF B] this"], ["proof (chain)\npicking this:\n  B \\<in> {X. \\<exists>b\\<in>A.\n                 bound X (\\<sqsubseteq>) b \\<and>\n                 X \\<noteq> {}} \\<Longrightarrow>\n  Ex (extreme_bound A (\\<sqsubseteq>) B)\n  B \\<subseteq> A\n  \\<exists>b\\<in>A. bound B (\\<sqsubseteq>) b\n  B \\<noteq> {}", "obtain s where \"s \\<in> A\" and \"extreme_bound A (\\<sqsubseteq>) B s\""], ["proof (prove)\nusing this:\n  B \\<in> {X. \\<exists>b\\<in>A.\n                 bound X (\\<sqsubseteq>) b \\<and>\n                 X \\<noteq> {}} \\<Longrightarrow>\n  Ex (extreme_bound A (\\<sqsubseteq>) B)\n  B \\<subseteq> A\n  \\<exists>b\\<in>A. bound B (\\<sqsubseteq>) b\n  B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>s \\<in> A; extreme_bound A (\\<sqsubseteq>) B s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s \\<in> A\n  extreme_bound A (\\<sqsubseteq>) B s\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> A;\n        \\<exists>b\\<in>A.\n           bound X (\\<lambda>x y. y \\<sqsubseteq> x) b \\<and>\n           X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A\n                              (\\<lambda>x y. y \\<sqsubseteq> x) X)", "with in_mono[OF XA]"], ["proof (chain)\npicking this:\n  ?x \\<in> X \\<longrightarrow> ?x \\<in> A\n  s \\<in> A\n  extreme_bound A (\\<sqsubseteq>) B s", "show \"\\<exists>s. extreme_bound A (\\<sqsupseteq>) X s\""], ["proof (prove)\nusing this:\n  ?x \\<in> X \\<longrightarrow> ?x \\<in> A\n  s \\<in> A\n  extreme_bound A (\\<sqsubseteq>) B s\n\ngoal (1 subgoal):\n 1. Ex (extreme_bound A (\\<lambda>x y. y \\<sqsubseteq> x) X)", "by (intro exI[of _ s] extremeI, auto)"], ["proof (state)\nthis:\n  Ex (extreme_bound A (\\<lambda>x y. y \\<sqsubseteq> x) X)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Full completeness is symmetric.\\<close>"], ["", "lemma complete_dual:\n  \"UNIV-complete A (\\<sqsubseteq>) \\<Longrightarrow> UNIV-complete A (\\<sqsupseteq>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV-complete A (\\<sqsubseteq>) \\<Longrightarrow>\n    UNIV-complete A (\\<lambda>x y. y \\<sqsubseteq> x)", "apply (unfold complete_iff_conditionally_complete_extremed_pointed)"], ["proof (prove)\ngoal (1 subgoal):\n 1. conditionally_complete A (\\<sqsubseteq>) \\<and>\n    extremed A (\\<sqsubseteq>) \\<and>\n    extremed A (\\<lambda>x y. y \\<sqsubseteq> x) \\<Longrightarrow>\n    conditionally_complete A (\\<lambda>x y. y \\<sqsubseteq> x) \\<and>\n    extremed A (\\<lambda>x y. y \\<sqsubseteq> x) \\<and>\n    extremed A (\\<sqsubseteq>)", "using conditionally_complete_dual"], ["proof (prove)\nusing this:\n  conditionally_complete ?A (\\<sqsubseteq>) \\<Longrightarrow>\n  conditionally_complete ?A (\\<lambda>x y. y \\<sqsubseteq> x)\n\ngoal (1 subgoal):\n 1. conditionally_complete A (\\<sqsubseteq>) \\<and>\n    extremed A (\\<sqsubseteq>) \\<and>\n    extremed A (\\<lambda>x y. y \\<sqsubseteq> x) \\<Longrightarrow>\n    conditionally_complete A (\\<lambda>x y. y \\<sqsubseteq> x) \\<and>\n    extremed A (\\<lambda>x y. y \\<sqsubseteq> x) \\<and>\n    extremed A (\\<sqsubseteq>)", "by auto"], ["", "text \\<open>Now we show that bounded completeness is the dual of semicompleteness.\\<close>"], ["", "lemma pointed_conditionally_complete_iff_bounded_complete:\n  assumes A: \"A \\<noteq> {}\"\n  shows \"conditionally_complete A (\\<sqsubseteq>) \\<and> extremed A (\\<sqsupseteq>) \\<longleftrightarrow> bounded_complete A (\\<sqsubseteq>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (conditionally_complete A (\\<sqsubseteq>) \\<and>\n     extremed A (\\<lambda>x y. y \\<sqsubseteq> x)) =\n    bounded_complete A (\\<sqsubseteq>)", "apply (unfold pointed_iff_empty_complete)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (conditionally_complete A (\\<sqsubseteq>) \\<and>\n     {{}}-complete A (\\<sqsubseteq>)) =\n    bounded_complete A (\\<sqsubseteq>)", "apply (fold complete_union)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ({X. \\<exists>b\\<in>A.\n            bound X (\\<sqsubseteq>) b \\<and> X \\<noteq> {}} \\<union>\n     {{}})-complete\n     A (\\<sqsubseteq>) =\n    bounded_complete A (\\<sqsubseteq>)", "apply (unfold Un_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. x \\<in> {X. \\<exists>b\\<in>A.\n                       bound X (\\<sqsubseteq>) b \\<and> X \\<noteq> {}} \\<or>\n        x \\<in> {{}}}-complete\n     A (\\<sqsubseteq>) =\n    bounded_complete A (\\<sqsubseteq>)", "apply (rule arg_cong[of _ _ \"\\<lambda>CC. CC-complete A (\\<sqsubseteq>)\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. x \\<in> {X. \\<exists>b\\<in>A.\n                       bound X (\\<sqsubseteq>) b \\<and> X \\<noteq> {}} \\<or>\n        x \\<in> {{}}} =\n    {X. \\<exists>b\\<in>A. bound X (\\<sqsubseteq>) b}", "using A"], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. {x. x \\<in> {X. \\<exists>b\\<in>A.\n                       bound X (\\<sqsubseteq>) b \\<and> X \\<noteq> {}} \\<or>\n        x \\<in> {{}}} =\n    {X. \\<exists>b\\<in>A. bound X (\\<sqsubseteq>) b}", "by auto"], ["", "proposition bounded_complete_iff_dual_semicomplete:\n  \"bounded_complete A (\\<sqsubseteq>) \\<longleftrightarrow> semicomplete A (\\<sqsupseteq>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded_complete A (\\<sqsubseteq>) =\n    semicomplete A (\\<lambda>x y. y \\<sqsubseteq> x)", "proof (cases \"A = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. A = {} \\<Longrightarrow>\n    bounded_complete A (\\<sqsubseteq>) =\n    semicomplete A (\\<lambda>x y. y \\<sqsubseteq> x)\n 2. A \\<noteq> {} \\<Longrightarrow>\n    bounded_complete A (\\<sqsubseteq>) =\n    semicomplete A (\\<lambda>x y. y \\<sqsubseteq> x)", "case True"], ["proof (state)\nthis:\n  A = {}\n\ngoal (2 subgoals):\n 1. A = {} \\<Longrightarrow>\n    bounded_complete A (\\<sqsubseteq>) =\n    semicomplete A (\\<lambda>x y. y \\<sqsubseteq> x)\n 2. A \\<noteq> {} \\<Longrightarrow>\n    bounded_complete A (\\<sqsubseteq>) =\n    semicomplete A (\\<lambda>x y. y \\<sqsubseteq> x)", "then"], ["proof (chain)\npicking this:\n  A = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  A = {}\n\ngoal (1 subgoal):\n 1. bounded_complete A (\\<sqsubseteq>) =\n    semicomplete A (\\<lambda>x y. y \\<sqsubseteq> x)", "by auto"], ["proof (state)\nthis:\n  bounded_complete A (\\<sqsubseteq>) =\n  semicomplete A (\\<lambda>x y. y \\<sqsubseteq> x)\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    bounded_complete A (\\<sqsubseteq>) =\n    semicomplete A (\\<lambda>x y. y \\<sqsubseteq> x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    bounded_complete A (\\<sqsubseteq>) =\n    semicomplete A (\\<lambda>x y. y \\<sqsubseteq> x)", "case False"], ["proof (state)\nthis:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    bounded_complete A (\\<sqsubseteq>) =\n    semicomplete A (\\<lambda>x y. y \\<sqsubseteq> x)", "then"], ["proof (chain)\npicking this:\n  A \\<noteq> {}", "show ?thesis"], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. bounded_complete A (\\<sqsubseteq>) =\n    semicomplete A (\\<lambda>x y. y \\<sqsubseteq> x)", "apply (fold pointed_conditionally_complete_iff_bounded_complete[OF False])"], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    (conditionally_complete A (\\<sqsubseteq>) \\<and>\n     extremed A (\\<lambda>x y. y \\<sqsubseteq> x)) =\n    semicomplete A (\\<lambda>x y. y \\<sqsubseteq> x)", "apply (unfold semicomplete_iff_conditionally_complete_extremed)"], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    (conditionally_complete A (\\<sqsubseteq>) \\<and>\n     extremed A (\\<lambda>x y. y \\<sqsubseteq> x)) =\n    (conditionally_complete A (\\<lambda>x y. y \\<sqsubseteq> x) \\<and>\n     extremed A (\\<lambda>x y. y \\<sqsubseteq> x))", "using Complete_Relations.conditionally_complete_dual"], ["proof (prove)\nusing this:\n  conditionally_complete ?A ?less_eq \\<Longrightarrow>\n  conditionally_complete ?A (\\<lambda>x y. ?less_eq y x)\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    (conditionally_complete A (\\<sqsubseteq>) \\<and>\n     extremed A (\\<lambda>x y. y \\<sqsubseteq> x)) =\n    (conditionally_complete A (\\<lambda>x y. y \\<sqsubseteq> x) \\<and>\n     extremed A (\\<lambda>x y. y \\<sqsubseteq> x))", "by auto"], ["proof (state)\nthis:\n  bounded_complete A (\\<sqsubseteq>) =\n  semicomplete A (\\<lambda>x y. y \\<sqsubseteq> x)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "lemmas connex_bounded_complete = connex_dual_semicomplete[folded bounded_complete_iff_dual_semicomplete]"], ["", "subsection \\<open>Completeness Results Requiring Order-Like Properties\\<close>"], ["", "text \\<open>Above results hold without any assumption on the relation.\nThis part demands some order-like properties.\\<close>"], ["", "text \\<open>It is well known that in a semilattice, i.e., a pair-complete partial order,\nevery finite nonempty subset of elements has a supremum.\nWe prove the result assuming transitivity, but only that.\\<close>"], ["", "lemma (in transitive) pair_complete_iff_finite_complete:\n  \"pair_complete A (\\<sqsubseteq>) \\<longleftrightarrow> finite_complete A (\\<sqsubseteq>)\" (is \"?l \\<longleftrightarrow> ?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. pair_complete A (\\<sqsubseteq>) = finite_complete A (\\<sqsubseteq>)", "proof (intro iffI completeI, elim CollectE conjE)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>X.\n       \\<lbrakk>pair_complete A (\\<sqsubseteq>); X \\<subseteq> A; finite X;\n        X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) X)\n 2. finite_complete A (\\<sqsubseteq>) \\<Longrightarrow>\n    pair_complete A (\\<sqsubseteq>)", "fix X"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>X.\n       \\<lbrakk>pair_complete A (\\<sqsubseteq>); X \\<subseteq> A; finite X;\n        X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) X)\n 2. finite_complete A (\\<sqsubseteq>) \\<Longrightarrow>\n    pair_complete A (\\<sqsubseteq>)", "assume pc: ?l"], ["proof (state)\nthis:\n  pair_complete A (\\<sqsubseteq>)\n\ngoal (2 subgoals):\n 1. \\<And>X.\n       \\<lbrakk>pair_complete A (\\<sqsubseteq>); X \\<subseteq> A; finite X;\n        X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) X)\n 2. finite_complete A (\\<sqsubseteq>) \\<Longrightarrow>\n    pair_complete A (\\<sqsubseteq>)", "show \"finite X \\<Longrightarrow> X \\<subseteq> A \\<Longrightarrow> X \\<noteq> {} \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite X; X \\<subseteq> A; X \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) X)", "proof (induct X rule: finite_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>{} \\<subseteq> A; {} \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) {})\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> A; F \\<noteq> {}\\<rbrakk>\n        \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) F);\n        insert x F \\<subseteq> A; insert x F \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) (insert x F))", "case empty"], ["proof (state)\nthis:\n  {} \\<subseteq> A\n  {} \\<noteq> {}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>{} \\<subseteq> A; {} \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) {})\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> A; F \\<noteq> {}\\<rbrakk>\n        \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) F);\n        insert x F \\<subseteq> A; insert x F \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) (insert x F))", "then"], ["proof (chain)\npicking this:\n  {} \\<subseteq> A\n  {} \\<noteq> {}", "show ?case"], ["proof (prove)\nusing this:\n  {} \\<subseteq> A\n  {} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. Ex (extreme_bound A (\\<sqsubseteq>) {})", "by auto"], ["proof (state)\nthis:\n  Ex (extreme_bound A (\\<sqsubseteq>) {})\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> A; F \\<noteq> {}\\<rbrakk>\n        \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) F);\n        insert x F \\<subseteq> A; insert x F \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) (insert x F))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> A; F \\<noteq> {}\\<rbrakk>\n        \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) F);\n        insert x F \\<subseteq> A; insert x F \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) (insert x F))", "case (insert x X)"], ["proof (state)\nthis:\n  finite X\n  x \\<notin> X\n  \\<lbrakk>X \\<subseteq> A; X \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) X)\n  insert x X \\<subseteq> A\n  insert x X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> A; F \\<noteq> {}\\<rbrakk>\n        \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) F);\n        insert x F \\<subseteq> A; insert x F \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) (insert x F))", "then"], ["proof (chain)\npicking this:\n  finite X\n  x \\<notin> X\n  \\<lbrakk>X \\<subseteq> A; X \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) X)\n  insert x X \\<subseteq> A\n  insert x X \\<noteq> {}", "have x: \"x \\<in> A\" and X: \"X \\<subseteq> A\""], ["proof (prove)\nusing this:\n  finite X\n  x \\<notin> X\n  \\<lbrakk>X \\<subseteq> A; X \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) X)\n  insert x X \\<subseteq> A\n  insert x X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. x \\<in> A &&& X \\<subseteq> A", "by auto"], ["proof (state)\nthis:\n  x \\<in> A\n  X \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> A; F \\<noteq> {}\\<rbrakk>\n        \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) F);\n        insert x F \\<subseteq> A; insert x F \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) (insert x F))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. Ex (extreme_bound A (\\<sqsubseteq>) (insert x X))", "proof (cases \"X = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. X = {} \\<Longrightarrow>\n    Ex (extreme_bound A (\\<sqsubseteq>) (insert x X))\n 2. X \\<noteq> {} \\<Longrightarrow>\n    Ex (extreme_bound A (\\<sqsubseteq>) (insert x X))", "case True"], ["proof (state)\nthis:\n  X = {}\n\ngoal (2 subgoals):\n 1. X = {} \\<Longrightarrow>\n    Ex (extreme_bound A (\\<sqsubseteq>) (insert x X))\n 2. X \\<noteq> {} \\<Longrightarrow>\n    Ex (extreme_bound A (\\<sqsubseteq>) (insert x X))", "obtain x' where \"extreme_bound A (\\<sqsubseteq>) {x,x} x'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        extreme_bound A (\\<sqsubseteq>) {x, x} x' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using pc[THEN pair_completeD, OF x x]"], ["proof (prove)\nusing this:\n  Ex (extreme_bound A (\\<sqsubseteq>) {x, x})\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        extreme_bound A (\\<sqsubseteq>) {x, x} x' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  extreme_bound A (\\<sqsubseteq>) {x, x} x'\n\ngoal (2 subgoals):\n 1. X = {} \\<Longrightarrow>\n    Ex (extreme_bound A (\\<sqsubseteq>) (insert x X))\n 2. X \\<noteq> {} \\<Longrightarrow>\n    Ex (extreme_bound A (\\<sqsubseteq>) (insert x X))", "with True"], ["proof (chain)\npicking this:\n  X = {}\n  extreme_bound A (\\<sqsubseteq>) {x, x} x'", "show ?thesis"], ["proof (prove)\nusing this:\n  X = {}\n  extreme_bound A (\\<sqsubseteq>) {x, x} x'\n\ngoal (1 subgoal):\n 1. Ex (extreme_bound A (\\<sqsubseteq>) (insert x X))", "by (auto intro!: exI[of _ x'])"], ["proof (state)\nthis:\n  Ex (extreme_bound A (\\<sqsubseteq>) (insert x X))\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    Ex (extreme_bound A (\\<sqsubseteq>) (insert x X))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    Ex (extreme_bound A (\\<sqsubseteq>) (insert x X))", "case False"], ["proof (state)\nthis:\n  X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    Ex (extreme_bound A (\\<sqsubseteq>) (insert x X))", "with insert"], ["proof (chain)\npicking this:\n  finite X\n  x \\<notin> X\n  \\<lbrakk>X \\<subseteq> A; X \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) X)\n  insert x X \\<subseteq> A\n  insert x X \\<noteq> {}\n  X \\<noteq> {}", "obtain b where b: \"extreme_bound A (\\<sqsubseteq>) X b\""], ["proof (prove)\nusing this:\n  finite X\n  x \\<notin> X\n  \\<lbrakk>X \\<subseteq> A; X \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) X)\n  insert x X \\<subseteq> A\n  insert x X \\<noteq> {}\n  X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        extreme_bound A (\\<sqsubseteq>) X b \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  extreme_bound A (\\<sqsubseteq>) X b\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    Ex (extreme_bound A (\\<sqsubseteq>) (insert x X))", "with pc[THEN pair_completeD] x"], ["proof (chain)\npicking this:\n  \\<lbrakk>?x \\<in> A; ?y \\<in> A\\<rbrakk>\n  \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) {?x, ?y})\n  x \\<in> A\n  extreme_bound A (\\<sqsubseteq>) X b", "obtain c where c: \"extreme_bound A (\\<sqsubseteq>) {x,b} c\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> A; ?y \\<in> A\\<rbrakk>\n  \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) {?x, ?y})\n  x \\<in> A\n  extreme_bound A (\\<sqsubseteq>) X b\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        extreme_bound A (\\<sqsubseteq>) {x, b} c \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  extreme_bound A (\\<sqsubseteq>) {x, b} c\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    Ex (extreme_bound A (\\<sqsubseteq>) (insert x X))", "from c"], ["proof (chain)\npicking this:\n  extreme_bound A (\\<sqsubseteq>) {x, b} c", "have cA: \"c \\<in> A\" and xc: \"x \\<sqsubseteq> c\" and bc: \"b \\<sqsubseteq> c\""], ["proof (prove)\nusing this:\n  extreme_bound A (\\<sqsubseteq>) {x, b} c\n\ngoal (1 subgoal):\n 1. c \\<in> A &&& x \\<sqsubseteq> c &&& b \\<sqsubseteq> c", "by auto"], ["proof (state)\nthis:\n  c \\<in> A\n  x \\<sqsubseteq> c\n  b \\<sqsubseteq> c\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    Ex (extreme_bound A (\\<sqsubseteq>) (insert x X))", "from b"], ["proof (chain)\npicking this:\n  extreme_bound A (\\<sqsubseteq>) X b", "have bA: \"b \\<in> A\" and bX: \"bound X (\\<sqsubseteq>) b\""], ["proof (prove)\nusing this:\n  extreme_bound A (\\<sqsubseteq>) X b\n\ngoal (1 subgoal):\n 1. b \\<in> A &&& bound X (\\<sqsubseteq>) b", "by auto"], ["proof (state)\nthis:\n  b \\<in> A\n  bound X (\\<sqsubseteq>) b\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    Ex (extreme_bound A (\\<sqsubseteq>) (insert x X))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Ex (extreme_bound A (\\<sqsubseteq>) (insert x X))", "proof (intro exI extreme_boundI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>bound (insert x X) (\\<sqsubseteq>) b; b \\<in> A\\<rbrakk>\n       \\<Longrightarrow> ?x \\<sqsubseteq> b\n 2. \\<And>xa. xa \\<in> insert x X \\<Longrightarrow> xa \\<sqsubseteq> ?x\n 3. ?x \\<in> A", "fix xb"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>bound (insert x X) (\\<sqsubseteq>) b; b \\<in> A\\<rbrakk>\n       \\<Longrightarrow> ?x \\<sqsubseteq> b\n 2. \\<And>xa. xa \\<in> insert x X \\<Longrightarrow> xa \\<sqsubseteq> ?x\n 3. ?x \\<in> A", "assume xb: \"xb \\<in> insert x X\""], ["proof (state)\nthis:\n  xb \\<in> insert x X\n\ngoal (3 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>bound (insert x X) (\\<sqsubseteq>) b; b \\<in> A\\<rbrakk>\n       \\<Longrightarrow> ?x \\<sqsubseteq> b\n 2. \\<And>xa. xa \\<in> insert x X \\<Longrightarrow> xa \\<sqsubseteq> ?x\n 3. ?x \\<in> A", "from bound_trans[OF bX bc X bA cA]"], ["proof (chain)\npicking this:\n  bound X (\\<sqsubseteq>) c", "have \"bound X (\\<sqsubseteq>) c\""], ["proof (prove)\nusing this:\n  bound X (\\<sqsubseteq>) c\n\ngoal (1 subgoal):\n 1. bound X (\\<sqsubseteq>) c", "."], ["proof (state)\nthis:\n  bound X (\\<sqsubseteq>) c\n\ngoal (3 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>bound (insert x X) (\\<sqsubseteq>) b; b \\<in> A\\<rbrakk>\n       \\<Longrightarrow> ?x \\<sqsubseteq> b\n 2. \\<And>xa. xa \\<in> insert x X \\<Longrightarrow> xa \\<sqsubseteq> ?x\n 3. ?x \\<in> A", "with xb xc"], ["proof (chain)\npicking this:\n  xb \\<in> insert x X\n  x \\<sqsubseteq> c\n  bound X (\\<sqsubseteq>) c", "show \"xb \\<sqsubseteq> c\""], ["proof (prove)\nusing this:\n  xb \\<in> insert x X\n  x \\<sqsubseteq> c\n  bound X (\\<sqsubseteq>) c\n\ngoal (1 subgoal):\n 1. xb \\<sqsubseteq> c", "by auto"], ["proof (state)\nthis:\n  xb \\<sqsubseteq> c\n\ngoal (2 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>bound (insert x X) (\\<sqsubseteq>) b; b \\<in> A\\<rbrakk>\n       \\<Longrightarrow> c \\<sqsubseteq> b\n 2. c \\<in> A", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>bound (insert x X) (\\<sqsubseteq>) b; b \\<in> A\\<rbrakk>\n       \\<Longrightarrow> c \\<sqsubseteq> b\n 2. c \\<in> A", "fix d"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>bound (insert x X) (\\<sqsubseteq>) b; b \\<in> A\\<rbrakk>\n       \\<Longrightarrow> c \\<sqsubseteq> b\n 2. c \\<in> A", "assume \"bound (insert x X) (\\<sqsubseteq>) d\" and dA: \"d \\<in> A\""], ["proof (state)\nthis:\n  bound (insert x X) (\\<sqsubseteq>) d\n  d \\<in> A\n\ngoal (2 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>bound (insert x X) (\\<sqsubseteq>) b; b \\<in> A\\<rbrakk>\n       \\<Longrightarrow> c \\<sqsubseteq> b\n 2. c \\<in> A", "with b"], ["proof (chain)\npicking this:\n  extreme_bound A (\\<sqsubseteq>) X b\n  bound (insert x X) (\\<sqsubseteq>) d\n  d \\<in> A", "have \"bound {x,b} (\\<sqsubseteq>) d\""], ["proof (prove)\nusing this:\n  extreme_bound A (\\<sqsubseteq>) X b\n  bound (insert x X) (\\<sqsubseteq>) d\n  d \\<in> A\n\ngoal (1 subgoal):\n 1. bound {x, b} (\\<sqsubseteq>) d", "by auto"], ["proof (state)\nthis:\n  bound {x, b} (\\<sqsubseteq>) d\n\ngoal (2 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>bound (insert x X) (\\<sqsubseteq>) b; b \\<in> A\\<rbrakk>\n       \\<Longrightarrow> c \\<sqsubseteq> b\n 2. c \\<in> A", "with c"], ["proof (chain)\npicking this:\n  extreme_bound A (\\<sqsubseteq>) {x, b} c\n  bound {x, b} (\\<sqsubseteq>) d", "show \"c \\<sqsubseteq> d\""], ["proof (prove)\nusing this:\n  extreme_bound A (\\<sqsubseteq>) {x, b} c\n  bound {x, b} (\\<sqsubseteq>) d\n\ngoal (1 subgoal):\n 1. c \\<sqsubseteq> d", "using dA"], ["proof (prove)\nusing this:\n  extreme_bound A (\\<sqsubseteq>) {x, b} c\n  bound {x, b} (\\<sqsubseteq>) d\n  d \\<in> A\n\ngoal (1 subgoal):\n 1. c \\<sqsubseteq> d", "by auto"], ["proof (state)\nthis:\n  c \\<sqsubseteq> d\n\ngoal (1 subgoal):\n 1. c \\<in> A", "qed (fact cA)"], ["proof (state)\nthis:\n  Ex (extreme_bound A (\\<sqsubseteq>) (insert x X))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Ex (extreme_bound A (\\<sqsubseteq>) (insert x X))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>finite X; X \\<subseteq> A; X \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) X)\n\ngoal (1 subgoal):\n 1. finite_complete A (\\<sqsubseteq>) \\<Longrightarrow>\n    pair_complete A (\\<sqsubseteq>)", "qed (insert finite_complete_le_pair_complete, auto)"], ["", "text \\<open>Gierz et al.~\\cite{gierz03} showed that a directed complete partial order is semicomplete\nif and only if it is also a semilattice.\nWe generalize the claim so that the underlying relation is only transitive.\\<close>"], ["", "proposition(in transitive) semicomplete_iff_directed_complete_pair_complete:\n  \"semicomplete A (\\<sqsubseteq>) \\<longleftrightarrow> directed_complete A (\\<sqsubseteq>) \\<and> pair_complete A (\\<sqsubseteq>)\" (is \"?l \\<longleftrightarrow> ?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicomplete A (\\<sqsubseteq>) =\n    (directed_complete A (\\<sqsubseteq>) \\<and>\n     pair_complete A (\\<sqsubseteq>))", "proof (intro iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. semicomplete A (\\<sqsubseteq>) \\<Longrightarrow>\n    directed_complete A (\\<sqsubseteq>) \\<and>\n    pair_complete A (\\<sqsubseteq>)\n 2. directed_complete A (\\<sqsubseteq>) \\<and>\n    pair_complete A (\\<sqsubseteq>) \\<Longrightarrow>\n    semicomplete A (\\<sqsubseteq>)", "assume l: ?l"], ["proof (state)\nthis:\n  semicomplete A (\\<sqsubseteq>)\n\ngoal (2 subgoals):\n 1. semicomplete A (\\<sqsubseteq>) \\<Longrightarrow>\n    directed_complete A (\\<sqsubseteq>) \\<and>\n    pair_complete A (\\<sqsubseteq>)\n 2. directed_complete A (\\<sqsubseteq>) \\<and>\n    pair_complete A (\\<sqsubseteq>) \\<Longrightarrow>\n    semicomplete A (\\<sqsubseteq>)", "then"], ["proof (chain)\npicking this:\n  semicomplete A (\\<sqsubseteq>)", "show ?r"], ["proof (prove)\nusing this:\n  semicomplete A (\\<sqsubseteq>)\n\ngoal (1 subgoal):\n 1. directed_complete A (\\<sqsubseteq>) \\<and>\n    pair_complete A (\\<sqsubseteq>)", "by (auto simp: directed_complete_def intro!: completeI pair_completeI completeD[OF l])"], ["proof (state)\nthis:\n  directed_complete A (\\<sqsubseteq>) \\<and> pair_complete A (\\<sqsubseteq>)\n\ngoal (1 subgoal):\n 1. directed_complete A (\\<sqsubseteq>) \\<and>\n    pair_complete A (\\<sqsubseteq>) \\<Longrightarrow>\n    semicomplete A (\\<sqsubseteq>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. directed_complete A (\\<sqsubseteq>) \\<and>\n    pair_complete A (\\<sqsubseteq>) \\<Longrightarrow>\n    semicomplete A (\\<sqsubseteq>)", "assume ?r"], ["proof (state)\nthis:\n  directed_complete A (\\<sqsubseteq>) \\<and> pair_complete A (\\<sqsubseteq>)\n\ngoal (1 subgoal):\n 1. directed_complete A (\\<sqsubseteq>) \\<and>\n    pair_complete A (\\<sqsubseteq>) \\<Longrightarrow>\n    semicomplete A (\\<sqsubseteq>)", "then"], ["proof (chain)\npicking this:\n  directed_complete A (\\<sqsubseteq>) \\<and> pair_complete A (\\<sqsubseteq>)", "have dc: \"directed_complete A (\\<sqsubseteq>)\" and pc: \"pair_complete A (\\<sqsubseteq>)\""], ["proof (prove)\nusing this:\n  directed_complete A (\\<sqsubseteq>) \\<and> pair_complete A (\\<sqsubseteq>)\n\ngoal (1 subgoal):\n 1. directed_complete A (\\<sqsubseteq>) &&& pair_complete A (\\<sqsubseteq>)", "by auto"], ["proof (state)\nthis:\n  directed_complete A (\\<sqsubseteq>)\n  pair_complete A (\\<sqsubseteq>)\n\ngoal (1 subgoal):\n 1. directed_complete A (\\<sqsubseteq>) \\<and>\n    pair_complete A (\\<sqsubseteq>) \\<Longrightarrow>\n    semicomplete A (\\<sqsubseteq>)", "with pair_complete_iff_finite_complete"], ["proof (chain)\npicking this:\n  pair_complete A (\\<sqsubseteq>) = finite_complete A (\\<sqsubseteq>)\n  directed_complete A (\\<sqsubseteq>)\n  pair_complete A (\\<sqsubseteq>)", "have fc: \"finite_complete A (\\<sqsubseteq>)\""], ["proof (prove)\nusing this:\n  pair_complete A (\\<sqsubseteq>) = finite_complete A (\\<sqsubseteq>)\n  directed_complete A (\\<sqsubseteq>)\n  pair_complete A (\\<sqsubseteq>)\n\ngoal (1 subgoal):\n 1. finite_complete A (\\<sqsubseteq>)", "by auto"], ["proof (state)\nthis:\n  finite_complete A (\\<sqsubseteq>)\n\ngoal (1 subgoal):\n 1. directed_complete A (\\<sqsubseteq>) \\<and>\n    pair_complete A (\\<sqsubseteq>) \\<Longrightarrow>\n    semicomplete A (\\<sqsubseteq>)", "show ?l"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicomplete A (\\<sqsubseteq>)", "proof (intro completeI, elim CollectE)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> A; X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) X)", "fix X"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> A; X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) X)", "assume XA: \"X \\<subseteq> A\""], ["proof (state)\nthis:\n  X \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> A; X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) X)", "have 1: \"directed {x. \\<exists>Y \\<subseteq> X. finite Y \\<and> Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x} (\\<sqsubseteq>)\" (is \"directed ?B _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. directed\n     {x. \\<exists>Y\\<subseteq>X.\n            finite Y \\<and>\n            Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n     (\\<sqsubseteq>)", "proof (intro directedI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {x. \\<exists>Y\\<subseteq>X.\n                               finite Y \\<and>\n                               Y \\<noteq> {} \\<and>\n                               extreme_bound A (\\<sqsubseteq>) Y x};\n        y \\<in> {x. \\<exists>Y\\<subseteq>X.\n                       finite Y \\<and>\n                       Y \\<noteq> {} \\<and>\n                       extreme_bound A (\\<sqsubseteq>) Y x}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>{x.\n   \\<exists>Y\\<subseteq>X.\n      finite Y \\<and>\n      Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}.\n                            x \\<sqsubseteq> z \\<and> y \\<sqsubseteq> z", "fix a b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {x. \\<exists>Y\\<subseteq>X.\n                               finite Y \\<and>\n                               Y \\<noteq> {} \\<and>\n                               extreme_bound A (\\<sqsubseteq>) Y x};\n        y \\<in> {x. \\<exists>Y\\<subseteq>X.\n                       finite Y \\<and>\n                       Y \\<noteq> {} \\<and>\n                       extreme_bound A (\\<sqsubseteq>) Y x}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>{x.\n   \\<exists>Y\\<subseteq>X.\n      finite Y \\<and>\n      Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}.\n                            x \\<sqsubseteq> z \\<and> y \\<sqsubseteq> z", "assume a: \"a \\<in> ?B\" and b: \"b \\<in> ?B\""], ["proof (state)\nthis:\n  a \\<in> {x. \\<exists>Y\\<subseteq>X.\n                 finite Y \\<and>\n                 Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n  b \\<in> {x. \\<exists>Y\\<subseteq>X.\n                 finite Y \\<and>\n                 Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {x. \\<exists>Y\\<subseteq>X.\n                               finite Y \\<and>\n                               Y \\<noteq> {} \\<and>\n                               extreme_bound A (\\<sqsubseteq>) Y x};\n        y \\<in> {x. \\<exists>Y\\<subseteq>X.\n                       finite Y \\<and>\n                       Y \\<noteq> {} \\<and>\n                       extreme_bound A (\\<sqsubseteq>) Y x}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>{x.\n   \\<exists>Y\\<subseteq>X.\n      finite Y \\<and>\n      Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}.\n                            x \\<sqsubseteq> z \\<and> y \\<sqsubseteq> z", "from a"], ["proof (chain)\npicking this:\n  a \\<in> {x. \\<exists>Y\\<subseteq>X.\n                 finite Y \\<and>\n                 Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}", "obtain Y where Y: \"extreme_bound A (\\<sqsubseteq>) Y a\" \"finite Y\" \"Y \\<noteq> {}\" \"Y \\<subseteq> X\""], ["proof (prove)\nusing this:\n  a \\<in> {x. \\<exists>Y\\<subseteq>X.\n                 finite Y \\<and>\n                 Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n\ngoal (1 subgoal):\n 1. (\\<And>Y.\n        \\<lbrakk>extreme_bound A (\\<sqsubseteq>) Y a; finite Y;\n         Y \\<noteq> {}; Y \\<subseteq> X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  extreme_bound A (\\<sqsubseteq>) Y a\n  finite Y\n  Y \\<noteq> {}\n  Y \\<subseteq> X\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {x. \\<exists>Y\\<subseteq>X.\n                               finite Y \\<and>\n                               Y \\<noteq> {} \\<and>\n                               extreme_bound A (\\<sqsubseteq>) Y x};\n        y \\<in> {x. \\<exists>Y\\<subseteq>X.\n                       finite Y \\<and>\n                       Y \\<noteq> {} \\<and>\n                       extreme_bound A (\\<sqsubseteq>) Y x}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>{x.\n   \\<exists>Y\\<subseteq>X.\n      finite Y \\<and>\n      Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}.\n                            x \\<sqsubseteq> z \\<and> y \\<sqsubseteq> z", "from b"], ["proof (chain)\npicking this:\n  b \\<in> {x. \\<exists>Y\\<subseteq>X.\n                 finite Y \\<and>\n                 Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}", "obtain B where B: \"extreme_bound A (\\<sqsubseteq>) B b\" \"finite B\" \"B \\<noteq> {}\" \"B \\<subseteq> X\""], ["proof (prove)\nusing this:\n  b \\<in> {x. \\<exists>Y\\<subseteq>X.\n                 finite Y \\<and>\n                 Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n\ngoal (1 subgoal):\n 1. (\\<And>B.\n        \\<lbrakk>extreme_bound A (\\<sqsubseteq>) B b; finite B;\n         B \\<noteq> {}; B \\<subseteq> X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  extreme_bound A (\\<sqsubseteq>) B b\n  finite B\n  B \\<noteq> {}\n  B \\<subseteq> X\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {x. \\<exists>Y\\<subseteq>X.\n                               finite Y \\<and>\n                               Y \\<noteq> {} \\<and>\n                               extreme_bound A (\\<sqsubseteq>) Y x};\n        y \\<in> {x. \\<exists>Y\\<subseteq>X.\n                       finite Y \\<and>\n                       Y \\<noteq> {} \\<and>\n                       extreme_bound A (\\<sqsubseteq>) Y x}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>{x.\n   \\<exists>Y\\<subseteq>X.\n      finite Y \\<and>\n      Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}.\n                            x \\<sqsubseteq> z \\<and> y \\<sqsubseteq> z", "from XA Y B"], ["proof (chain)\npicking this:\n  X \\<subseteq> A\n  extreme_bound A (\\<sqsubseteq>) Y a\n  finite Y\n  Y \\<noteq> {}\n  Y \\<subseteq> X\n  extreme_bound A (\\<sqsubseteq>) B b\n  finite B\n  B \\<noteq> {}\n  B \\<subseteq> X", "have AB: \"Y \\<subseteq> A\" \"B \\<subseteq> A\" \"finite (Y \\<union> B)\" \"Y \\<union> B \\<noteq> {}\" \"Y \\<union> B \\<subseteq> X\""], ["proof (prove)\nusing this:\n  X \\<subseteq> A\n  extreme_bound A (\\<sqsubseteq>) Y a\n  finite Y\n  Y \\<noteq> {}\n  Y \\<subseteq> X\n  extreme_bound A (\\<sqsubseteq>) B b\n  finite B\n  B \\<noteq> {}\n  B \\<subseteq> X\n\ngoal (1 subgoal):\n 1. (Y \\<subseteq> A &&& B \\<subseteq> A) &&&\n    finite (Y \\<union> B) &&&\n    Y \\<union> B \\<noteq> {} &&& Y \\<union> B \\<subseteq> X", "by auto"], ["proof (state)\nthis:\n  Y \\<subseteq> A\n  B \\<subseteq> A\n  finite (Y \\<union> B)\n  Y \\<union> B \\<noteq> {}\n  Y \\<union> B \\<subseteq> X\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {x. \\<exists>Y\\<subseteq>X.\n                               finite Y \\<and>\n                               Y \\<noteq> {} \\<and>\n                               extreme_bound A (\\<sqsubseteq>) Y x};\n        y \\<in> {x. \\<exists>Y\\<subseteq>X.\n                       finite Y \\<and>\n                       Y \\<noteq> {} \\<and>\n                       extreme_bound A (\\<sqsubseteq>) Y x}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>{x.\n   \\<exists>Y\\<subseteq>X.\n      finite Y \\<and>\n      Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}.\n                            x \\<sqsubseteq> z \\<and> y \\<sqsubseteq> z", "with fc[THEN completeD]"], ["proof (chain)\npicking this:\n  \\<lbrakk>?X \\<subseteq> A;\n   ?X \\<in> {X. finite X \\<and> X \\<noteq> {}}\\<rbrakk>\n  \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) ?X)\n  Y \\<subseteq> A\n  B \\<subseteq> A\n  finite (Y \\<union> B)\n  Y \\<union> B \\<noteq> {}\n  Y \\<union> B \\<subseteq> X", "have \"Ex (extreme_bound A (\\<sqsubseteq>) (Y \\<union> B))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?X \\<subseteq> A;\n   ?X \\<in> {X. finite X \\<and> X \\<noteq> {}}\\<rbrakk>\n  \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) ?X)\n  Y \\<subseteq> A\n  B \\<subseteq> A\n  finite (Y \\<union> B)\n  Y \\<union> B \\<noteq> {}\n  Y \\<union> B \\<subseteq> X\n\ngoal (1 subgoal):\n 1. Ex (extreme_bound A (\\<sqsubseteq>) (Y \\<union> B))", "by auto"], ["proof (state)\nthis:\n  Ex (extreme_bound A (\\<sqsubseteq>) (Y \\<union> B))\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {x. \\<exists>Y\\<subseteq>X.\n                               finite Y \\<and>\n                               Y \\<noteq> {} \\<and>\n                               extreme_bound A (\\<sqsubseteq>) Y x};\n        y \\<in> {x. \\<exists>Y\\<subseteq>X.\n                       finite Y \\<and>\n                       Y \\<noteq> {} \\<and>\n                       extreme_bound A (\\<sqsubseteq>) Y x}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>{x.\n   \\<exists>Y\\<subseteq>X.\n      finite Y \\<and>\n      Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}.\n                            x \\<sqsubseteq> z \\<and> y \\<sqsubseteq> z", "then"], ["proof (chain)\npicking this:\n  Ex (extreme_bound A (\\<sqsubseteq>) (Y \\<union> B))", "obtain c where c: \"extreme_bound A (\\<sqsubseteq>) (Y \\<union> B) c\""], ["proof (prove)\nusing this:\n  Ex (extreme_bound A (\\<sqsubseteq>) (Y \\<union> B))\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        extreme_bound A (\\<sqsubseteq>) (Y \\<union> B) c \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  extreme_bound A (\\<sqsubseteq>) (Y \\<union> B) c\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {x. \\<exists>Y\\<subseteq>X.\n                               finite Y \\<and>\n                               Y \\<noteq> {} \\<and>\n                               extreme_bound A (\\<sqsubseteq>) Y x};\n        y \\<in> {x. \\<exists>Y\\<subseteq>X.\n                       finite Y \\<and>\n                       Y \\<noteq> {} \\<and>\n                       extreme_bound A (\\<sqsubseteq>) Y x}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>{x.\n   \\<exists>Y\\<subseteq>X.\n      finite Y \\<and>\n      Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}.\n                            x \\<sqsubseteq> z \\<and> y \\<sqsubseteq> z", "show \"\\<exists>c \\<in> ?B. a \\<sqsubseteq> c \\<and> b \\<sqsubseteq> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c\\<in>{x. \\<exists>Y\\<subseteq>X.\n                          finite Y \\<and>\n                          Y \\<noteq> {} \\<and>\n                          extreme_bound A (\\<sqsubseteq>) Y x}.\n       a \\<sqsubseteq> c \\<and> b \\<sqsubseteq> c", "proof (intro bexI conjI)"], ["proof (state)\ngoal (3 subgoals):\n 1. a \\<sqsubseteq> ?c\n 2. b \\<sqsubseteq> ?c\n 3. ?c \\<in> {x. \\<exists>Y\\<subseteq>X.\n                    finite Y \\<and>\n                    Y \\<noteq> {} \\<and>\n                    extreme_bound A (\\<sqsubseteq>) Y x}", "from Y B c"], ["proof (chain)\npicking this:\n  extreme_bound A (\\<sqsubseteq>) Y a\n  finite Y\n  Y \\<noteq> {}\n  Y \\<subseteq> X\n  extreme_bound A (\\<sqsubseteq>) B b\n  finite B\n  B \\<noteq> {}\n  B \\<subseteq> X\n  extreme_bound A (\\<sqsubseteq>) (Y \\<union> B) c", "show \"a \\<sqsubseteq> c\" and \"b \\<sqsubseteq> c\""], ["proof (prove)\nusing this:\n  extreme_bound A (\\<sqsubseteq>) Y a\n  finite Y\n  Y \\<noteq> {}\n  Y \\<subseteq> X\n  extreme_bound A (\\<sqsubseteq>) B b\n  finite B\n  B \\<noteq> {}\n  B \\<subseteq> X\n  extreme_bound A (\\<sqsubseteq>) (Y \\<union> B) c\n\ngoal (1 subgoal):\n 1. a \\<sqsubseteq> c &&& b \\<sqsubseteq> c", "by (auto simp: extreme_bound_iff)"], ["proof (state)\nthis:\n  a \\<sqsubseteq> c\n  b \\<sqsubseteq> c\n\ngoal (1 subgoal):\n 1. c \\<in> {x. \\<exists>Y\\<subseteq>X.\n                   finite Y \\<and>\n                   Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}", "from AB c"], ["proof (chain)\npicking this:\n  Y \\<subseteq> A\n  B \\<subseteq> A\n  finite (Y \\<union> B)\n  Y \\<union> B \\<noteq> {}\n  Y \\<union> B \\<subseteq> X\n  extreme_bound A (\\<sqsubseteq>) (Y \\<union> B) c", "show \"c \\<in> ?B\""], ["proof (prove)\nusing this:\n  Y \\<subseteq> A\n  B \\<subseteq> A\n  finite (Y \\<union> B)\n  Y \\<union> B \\<noteq> {}\n  Y \\<union> B \\<subseteq> X\n  extreme_bound A (\\<sqsubseteq>) (Y \\<union> B) c\n\ngoal (1 subgoal):\n 1. c \\<in> {x. \\<exists>Y\\<subseteq>X.\n                   finite Y \\<and>\n                   Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}", "by (auto intro!: exI[of _ \"Y \\<union> B\"])"], ["proof (state)\nthis:\n  c \\<in> {x. \\<exists>Y\\<subseteq>X.\n                 finite Y \\<and>\n                 Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>c\\<in>{x. \\<exists>Y\\<subseteq>X.\n                        finite Y \\<and>\n                        Y \\<noteq> {} \\<and>\n                        extreme_bound A (\\<sqsubseteq>) Y x}.\n     a \\<sqsubseteq> c \\<and> b \\<sqsubseteq> c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  directed\n   {x. \\<exists>Y\\<subseteq>X.\n          finite Y \\<and>\n          Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n   (\\<sqsubseteq>)\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> A; X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) X)", "have B: \"?B \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. \\<exists>Y\\<subseteq>X.\n           finite Y \\<and>\n           Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n    \\<subseteq> A", "by auto"], ["proof (state)\nthis:\n  {x. \\<exists>Y\\<subseteq>X.\n         finite Y \\<and>\n         Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n  \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> A; X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) X)", "assume \"X \\<noteq> {}\""], ["proof (state)\nthis:\n  X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> A; X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) X)", "then"], ["proof (chain)\npicking this:\n  X \\<noteq> {}", "obtain x where xX: \"x \\<in> X\""], ["proof (prove)\nusing this:\n  X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>x. x \\<in> X \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> A; X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) X)", "with fc[THEN completeD, of \"{x}\"] XA"], ["proof (chain)\npicking this:\n  \\<lbrakk>{x} \\<subseteq> A;\n   {x} \\<in> {X. finite X \\<and> X \\<noteq> {}}\\<rbrakk>\n  \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) {x})\n  X \\<subseteq> A\n  x \\<in> X", "obtain x' where \"extreme_bound A (\\<sqsubseteq>) {x} x'\""], ["proof (prove)\nusing this:\n  \\<lbrakk>{x} \\<subseteq> A;\n   {x} \\<in> {X. finite X \\<and> X \\<noteq> {}}\\<rbrakk>\n  \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) {x})\n  X \\<subseteq> A\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        extreme_bound A (\\<sqsubseteq>) {x} x' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  extreme_bound A (\\<sqsubseteq>) {x} x'\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> A; X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) X)", "with xX"], ["proof (chain)\npicking this:\n  x \\<in> X\n  extreme_bound A (\\<sqsubseteq>) {x} x'", "have x'B: \"x' \\<in> ?B\""], ["proof (prove)\nusing this:\n  x \\<in> X\n  extreme_bound A (\\<sqsubseteq>) {x} x'\n\ngoal (1 subgoal):\n 1. x' \\<in> {x. \\<exists>Y\\<subseteq>X.\n                    finite Y \\<and>\n                    Y \\<noteq> {} \\<and>\n                    extreme_bound A (\\<sqsubseteq>) Y x}", "by (auto intro!: exI[of _ \"{x}\"] extreme_boundI)"], ["proof (state)\nthis:\n  x' \\<in> {x. \\<exists>Y\\<subseteq>X.\n                  finite Y \\<and>\n                  Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> A; X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) X)", "then"], ["proof (chain)\npicking this:\n  x' \\<in> {x. \\<exists>Y\\<subseteq>X.\n                  finite Y \\<and>\n                  Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}", "have 2: \"?B \\<noteq> {}\""], ["proof (prove)\nusing this:\n  x' \\<in> {x. \\<exists>Y\\<subseteq>X.\n                  finite Y \\<and>\n                  Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n\ngoal (1 subgoal):\n 1. {x. \\<exists>Y\\<subseteq>X.\n           finite Y \\<and>\n           Y \\<noteq> {} \\<and>\n           extreme_bound A (\\<sqsubseteq>) Y x} \\<noteq>\n    {}", "by auto"], ["proof (state)\nthis:\n  {x. \\<exists>Y\\<subseteq>X.\n         finite Y \\<and>\n         Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x} \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> A; X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) X)", "from dc[unfolded directed_complete_def, THEN completeD, of ?B] 1 2"], ["proof (chain)\npicking this:\n  \\<lbrakk>{x. \\<exists>Y\\<subseteq>X.\n                  finite Y \\<and>\n                  Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n           \\<subseteq> A;\n   {x. \\<exists>Y\\<subseteq>X.\n          finite Y \\<and>\n          Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n   \\<in> {X. directed X (\\<sqsubseteq>) \\<and> X \\<noteq> {}}\\<rbrakk>\n  \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>)\n                         {x. \\<exists>Y\\<subseteq>X.\n                                finite Y \\<and>\n                                Y \\<noteq> {} \\<and>\n                                extreme_bound A (\\<sqsubseteq>) Y x})\n  directed\n   {x. \\<exists>Y\\<subseteq>X.\n          finite Y \\<and>\n          Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n   (\\<sqsubseteq>)\n  {x. \\<exists>Y\\<subseteq>X.\n         finite Y \\<and>\n         Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x} \\<noteq>\n  {}", "obtain b where b: \"extreme_bound A (\\<sqsubseteq>) ?B b\""], ["proof (prove)\nusing this:\n  \\<lbrakk>{x. \\<exists>Y\\<subseteq>X.\n                  finite Y \\<and>\n                  Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n           \\<subseteq> A;\n   {x. \\<exists>Y\\<subseteq>X.\n          finite Y \\<and>\n          Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n   \\<in> {X. directed X (\\<sqsubseteq>) \\<and> X \\<noteq> {}}\\<rbrakk>\n  \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>)\n                         {x. \\<exists>Y\\<subseteq>X.\n                                finite Y \\<and>\n                                Y \\<noteq> {} \\<and>\n                                extreme_bound A (\\<sqsubseteq>) Y x})\n  directed\n   {x. \\<exists>Y\\<subseteq>X.\n          finite Y \\<and>\n          Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n   (\\<sqsubseteq>)\n  {x. \\<exists>Y\\<subseteq>X.\n         finite Y \\<and>\n         Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x} \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        extreme_bound A (\\<sqsubseteq>)\n         {x. \\<exists>Y\\<subseteq>X.\n                finite Y \\<and>\n                Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n         b \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  extreme_bound A (\\<sqsubseteq>)\n   {x. \\<exists>Y\\<subseteq>X.\n          finite Y \\<and>\n          Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n   b\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> A; X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) X)", "then"], ["proof (chain)\npicking this:\n  extreme_bound A (\\<sqsubseteq>)\n   {x. \\<exists>Y\\<subseteq>X.\n          finite Y \\<and>\n          Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n   b", "have bA: \"b \\<in> A\""], ["proof (prove)\nusing this:\n  extreme_bound A (\\<sqsubseteq>)\n   {x. \\<exists>Y\\<subseteq>X.\n          finite Y \\<and>\n          Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n   b\n\ngoal (1 subgoal):\n 1. b \\<in> A", "by auto"], ["proof (state)\nthis:\n  b \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> A; X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) X)", "show \"Ex (extreme_bound A (\\<sqsubseteq>) X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ex (extreme_bound A (\\<sqsubseteq>) X)", "proof (intro exI extreme_boundI UNIV_I)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>bound X (\\<sqsubseteq>) b; b \\<in> A\\<rbrakk>\n       \\<Longrightarrow> ?x \\<sqsubseteq> b\n 2. \\<And>x. x \\<in> X \\<Longrightarrow> x \\<sqsubseteq> ?x\n 3. ?x \\<in> A", "fix x"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>bound X (\\<sqsubseteq>) b; b \\<in> A\\<rbrakk>\n       \\<Longrightarrow> ?x \\<sqsubseteq> b\n 2. \\<And>x. x \\<in> X \\<Longrightarrow> x \\<sqsubseteq> ?x\n 3. ?x \\<in> A", "assume xX: \"x \\<in> X\""], ["proof (state)\nthis:\n  x \\<in> X\n\ngoal (3 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>bound X (\\<sqsubseteq>) b; b \\<in> A\\<rbrakk>\n       \\<Longrightarrow> ?x \\<sqsubseteq> b\n 2. \\<And>x. x \\<in> X \\<Longrightarrow> x \\<sqsubseteq> ?x\n 3. ?x \\<in> A", "with XA fc[THEN completeD, of \"{x}\"]"], ["proof (chain)\npicking this:\n  X \\<subseteq> A\n  \\<lbrakk>{x} \\<subseteq> A;\n   {x} \\<in> {X. finite X \\<and> X \\<noteq> {}}\\<rbrakk>\n  \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) {x})\n  x \\<in> X", "obtain c where c: \"extreme_bound A (\\<sqsubseteq>) {x} c\""], ["proof (prove)\nusing this:\n  X \\<subseteq> A\n  \\<lbrakk>{x} \\<subseteq> A;\n   {x} \\<in> {X. finite X \\<and> X \\<noteq> {}}\\<rbrakk>\n  \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) {x})\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        extreme_bound A (\\<sqsubseteq>) {x} c \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  extreme_bound A (\\<sqsubseteq>) {x} c\n\ngoal (3 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>bound X (\\<sqsubseteq>) b; b \\<in> A\\<rbrakk>\n       \\<Longrightarrow> ?x \\<sqsubseteq> b\n 2. \\<And>x. x \\<in> X \\<Longrightarrow> x \\<sqsubseteq> ?x\n 3. ?x \\<in> A", "then"], ["proof (chain)\npicking this:\n  extreme_bound A (\\<sqsubseteq>) {x} c", "have cA: \"c \\<in> A\" and xc: \"x \\<sqsubseteq> c\""], ["proof (prove)\nusing this:\n  extreme_bound A (\\<sqsubseteq>) {x} c\n\ngoal (1 subgoal):\n 1. c \\<in> A &&& x \\<sqsubseteq> c", "by auto"], ["proof (state)\nthis:\n  c \\<in> A\n  x \\<sqsubseteq> c\n\ngoal (3 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>bound X (\\<sqsubseteq>) b; b \\<in> A\\<rbrakk>\n       \\<Longrightarrow> ?x \\<sqsubseteq> b\n 2. \\<And>x. x \\<in> X \\<Longrightarrow> x \\<sqsubseteq> ?x\n 3. ?x \\<in> A", "from c xX"], ["proof (chain)\npicking this:\n  extreme_bound A (\\<sqsubseteq>) {x} c\n  x \\<in> X", "have cB: \"c \\<in> ?B\""], ["proof (prove)\nusing this:\n  extreme_bound A (\\<sqsubseteq>) {x} c\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. c \\<in> {x. \\<exists>Y\\<subseteq>X.\n                   finite Y \\<and>\n                   Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}", "by (auto intro!: exI[of _ \"{x}\"] extreme_boundI)"], ["proof (state)\nthis:\n  c \\<in> {x. \\<exists>Y\\<subseteq>X.\n                 finite Y \\<and>\n                 Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n\ngoal (3 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>bound X (\\<sqsubseteq>) b; b \\<in> A\\<rbrakk>\n       \\<Longrightarrow> ?x \\<sqsubseteq> b\n 2. \\<And>x. x \\<in> X \\<Longrightarrow> x \\<sqsubseteq> ?x\n 3. ?x \\<in> A", "with b"], ["proof (chain)\npicking this:\n  extreme_bound A (\\<sqsubseteq>)\n   {x. \\<exists>Y\\<subseteq>X.\n          finite Y \\<and>\n          Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n   b\n  c \\<in> {x. \\<exists>Y\\<subseteq>X.\n                 finite Y \\<and>\n                 Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}", "have bA: \"b \\<in> A\" and cb: \"c \\<sqsubseteq> b\""], ["proof (prove)\nusing this:\n  extreme_bound A (\\<sqsubseteq>)\n   {x. \\<exists>Y\\<subseteq>X.\n          finite Y \\<and>\n          Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n   b\n  c \\<in> {x. \\<exists>Y\\<subseteq>X.\n                 finite Y \\<and>\n                 Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n\ngoal (1 subgoal):\n 1. b \\<in> A &&& c \\<sqsubseteq> b", "by auto"], ["proof (state)\nthis:\n  b \\<in> A\n  c \\<sqsubseteq> b\n\ngoal (3 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>bound X (\\<sqsubseteq>) b; b \\<in> A\\<rbrakk>\n       \\<Longrightarrow> ?x \\<sqsubseteq> b\n 2. \\<And>x. x \\<in> X \\<Longrightarrow> x \\<sqsubseteq> ?x\n 3. ?x \\<in> A", "from xX XA cA bA trans[OF xc cb]"], ["proof (chain)\npicking this:\n  x \\<in> X\n  X \\<subseteq> A\n  c \\<in> A\n  b \\<in> A\n  \\<lbrakk>x \\<in> A; c \\<in> A; b \\<in> A\\<rbrakk>\n  \\<Longrightarrow> x \\<sqsubseteq> b", "show \"x \\<sqsubseteq> b\""], ["proof (prove)\nusing this:\n  x \\<in> X\n  X \\<subseteq> A\n  c \\<in> A\n  b \\<in> A\n  \\<lbrakk>x \\<in> A; c \\<in> A; b \\<in> A\\<rbrakk>\n  \\<Longrightarrow> x \\<sqsubseteq> b\n\ngoal (1 subgoal):\n 1. x \\<sqsubseteq> b", "by auto"], ["proof (state)\nthis:\n  x \\<sqsubseteq> b\n\ngoal (2 subgoals):\n 1. \\<And>ba.\n       \\<lbrakk>bound X (\\<sqsubseteq>) ba; ba \\<in> A\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq> ba\n 2. b \\<in> A", "text\\<open> Here transitivity is needed. \\<close>"], ["proof (state)\nthis:\n  x \\<sqsubseteq> b\n\ngoal (2 subgoals):\n 1. \\<And>ba.\n       \\<lbrakk>bound X (\\<sqsubseteq>) ba; ba \\<in> A\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq> ba\n 2. b \\<in> A", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ba.\n       \\<lbrakk>bound X (\\<sqsubseteq>) ba; ba \\<in> A\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq> ba\n 2. b \\<in> A", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ba.\n       \\<lbrakk>bound X (\\<sqsubseteq>) ba; ba \\<in> A\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq> ba\n 2. b \\<in> A", "assume xA: \"x \\<in> A\" and Xx: \"bound X (\\<sqsubseteq>) x\""], ["proof (state)\nthis:\n  x \\<in> A\n  bound X (\\<sqsubseteq>) x\n\ngoal (2 subgoals):\n 1. \\<And>ba.\n       \\<lbrakk>bound X (\\<sqsubseteq>) ba; ba \\<in> A\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq> ba\n 2. b \\<in> A", "have \"bound ?B (\\<sqsubseteq>) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bound\n     {x. \\<exists>Y\\<subseteq>X.\n            finite Y \\<and>\n            Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n     (\\<sqsubseteq>) x", "proof (intro boundI UNIV_I, clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x Y.\n       \\<lbrakk>Y \\<subseteq> X; finite Y; Y \\<noteq> {};\n        extreme_bound A (\\<sqsubseteq>) Y x\\<rbrakk>\n       \\<Longrightarrow> x \\<sqsubseteq> x", "fix c Y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x Y.\n       \\<lbrakk>Y \\<subseteq> X; finite Y; Y \\<noteq> {};\n        extreme_bound A (\\<sqsubseteq>) Y x\\<rbrakk>\n       \\<Longrightarrow> x \\<sqsubseteq> x", "assume \"finite Y\" and YX: \"Y \\<subseteq> X\" and \"Y \\<noteq> {}\" and c: \"extreme_bound A (\\<sqsubseteq>) Y c\""], ["proof (state)\nthis:\n  finite Y\n  Y \\<subseteq> X\n  Y \\<noteq> {}\n  extreme_bound A (\\<sqsubseteq>) Y c\n\ngoal (1 subgoal):\n 1. \\<And>x Y.\n       \\<lbrakk>Y \\<subseteq> X; finite Y; Y \\<noteq> {};\n        extreme_bound A (\\<sqsubseteq>) Y x\\<rbrakk>\n       \\<Longrightarrow> x \\<sqsubseteq> x", "from YX Xx"], ["proof (chain)\npicking this:\n  Y \\<subseteq> X\n  bound X (\\<sqsubseteq>) x", "have \"bound Y (\\<sqsubseteq>) x\""], ["proof (prove)\nusing this:\n  Y \\<subseteq> X\n  bound X (\\<sqsubseteq>) x\n\ngoal (1 subgoal):\n 1. bound Y (\\<sqsubseteq>) x", "by auto"], ["proof (state)\nthis:\n  bound Y (\\<sqsubseteq>) x\n\ngoal (1 subgoal):\n 1. \\<And>x Y.\n       \\<lbrakk>Y \\<subseteq> X; finite Y; Y \\<noteq> {};\n        extreme_bound A (\\<sqsubseteq>) Y x\\<rbrakk>\n       \\<Longrightarrow> x \\<sqsubseteq> x", "with c xA"], ["proof (chain)\npicking this:\n  extreme_bound A (\\<sqsubseteq>) Y c\n  x \\<in> A\n  bound Y (\\<sqsubseteq>) x", "show \"c \\<sqsubseteq> x\""], ["proof (prove)\nusing this:\n  extreme_bound A (\\<sqsubseteq>) Y c\n  x \\<in> A\n  bound Y (\\<sqsubseteq>) x\n\ngoal (1 subgoal):\n 1. c \\<sqsubseteq> x", "by auto"], ["proof (state)\nthis:\n  c \\<sqsubseteq> x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  bound\n   {x. \\<exists>Y\\<subseteq>X.\n          finite Y \\<and>\n          Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n   (\\<sqsubseteq>) x\n\ngoal (2 subgoals):\n 1. \\<And>ba.\n       \\<lbrakk>bound X (\\<sqsubseteq>) ba; ba \\<in> A\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq> ba\n 2. b \\<in> A", "with b xA"], ["proof (chain)\npicking this:\n  extreme_bound A (\\<sqsubseteq>)\n   {x. \\<exists>Y\\<subseteq>X.\n          finite Y \\<and>\n          Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n   b\n  x \\<in> A\n  bound\n   {x. \\<exists>Y\\<subseteq>X.\n          finite Y \\<and>\n          Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n   (\\<sqsubseteq>) x", "show \"b \\<sqsubseteq> x\""], ["proof (prove)\nusing this:\n  extreme_bound A (\\<sqsubseteq>)\n   {x. \\<exists>Y\\<subseteq>X.\n          finite Y \\<and>\n          Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n   b\n  x \\<in> A\n  bound\n   {x. \\<exists>Y\\<subseteq>X.\n          finite Y \\<and>\n          Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n   (\\<sqsubseteq>) x\n\ngoal (1 subgoal):\n 1. b \\<sqsubseteq> x", "by auto"], ["proof (state)\nthis:\n  b \\<sqsubseteq> x\n\ngoal (1 subgoal):\n 1. b \\<in> A", "qed (fact bA)"], ["proof (state)\nthis:\n  Ex (extreme_bound A (\\<sqsubseteq>) X)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  semicomplete A (\\<sqsubseteq>)\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>The last argument in the above proof requires transitivity,\nbut if we had reflexivity then $x$ itself is a supremum of $\\set{x}$\n(see @{thm reflexive.extreme_bound_singleton}) and so $x \\SLE s$ would be immediate.\nThus we can replace transitivity by reflexivity,\nbut then pair-completeness does not imply finite completeness.\nWe obtain the following result.\\<close>"], ["", "proposition (in reflexive) semicomplete_iff_directed_complete_finite_complete:\n  \"semicomplete A (\\<sqsubseteq>) \\<longleftrightarrow> directed_complete A (\\<sqsubseteq>) \\<and> finite_complete A (\\<sqsubseteq>)\" (is \"?l \\<longleftrightarrow> ?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicomplete A (\\<sqsubseteq>) =\n    (directed_complete A (\\<sqsubseteq>) \\<and>\n     finite_complete A (\\<sqsubseteq>))", "proof (intro iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. semicomplete A (\\<sqsubseteq>) \\<Longrightarrow>\n    directed_complete A (\\<sqsubseteq>) \\<and>\n    finite_complete A (\\<sqsubseteq>)\n 2. directed_complete A (\\<sqsubseteq>) \\<and>\n    finite_complete A (\\<sqsubseteq>) \\<Longrightarrow>\n    semicomplete A (\\<sqsubseteq>)", "assume l: ?l"], ["proof (state)\nthis:\n  semicomplete A (\\<sqsubseteq>)\n\ngoal (2 subgoals):\n 1. semicomplete A (\\<sqsubseteq>) \\<Longrightarrow>\n    directed_complete A (\\<sqsubseteq>) \\<and>\n    finite_complete A (\\<sqsubseteq>)\n 2. directed_complete A (\\<sqsubseteq>) \\<and>\n    finite_complete A (\\<sqsubseteq>) \\<Longrightarrow>\n    semicomplete A (\\<sqsubseteq>)", "then"], ["proof (chain)\npicking this:\n  semicomplete A (\\<sqsubseteq>)", "show ?r"], ["proof (prove)\nusing this:\n  semicomplete A (\\<sqsubseteq>)\n\ngoal (1 subgoal):\n 1. directed_complete A (\\<sqsubseteq>) \\<and>\n    finite_complete A (\\<sqsubseteq>)", "by (auto simp: directed_complete_def intro!: completeI pair_completeI completeD[OF l])"], ["proof (state)\nthis:\n  directed_complete A (\\<sqsubseteq>) \\<and>\n  finite_complete A (\\<sqsubseteq>)\n\ngoal (1 subgoal):\n 1. directed_complete A (\\<sqsubseteq>) \\<and>\n    finite_complete A (\\<sqsubseteq>) \\<Longrightarrow>\n    semicomplete A (\\<sqsubseteq>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. directed_complete A (\\<sqsubseteq>) \\<and>\n    finite_complete A (\\<sqsubseteq>) \\<Longrightarrow>\n    semicomplete A (\\<sqsubseteq>)", "assume ?r"], ["proof (state)\nthis:\n  directed_complete A (\\<sqsubseteq>) \\<and>\n  finite_complete A (\\<sqsubseteq>)\n\ngoal (1 subgoal):\n 1. directed_complete A (\\<sqsubseteq>) \\<and>\n    finite_complete A (\\<sqsubseteq>) \\<Longrightarrow>\n    semicomplete A (\\<sqsubseteq>)", "then"], ["proof (chain)\npicking this:\n  directed_complete A (\\<sqsubseteq>) \\<and>\n  finite_complete A (\\<sqsubseteq>)", "have dc: \"directed_complete A (\\<sqsubseteq>)\" and fc: \"finite_complete A (\\<sqsubseteq>)\""], ["proof (prove)\nusing this:\n  directed_complete A (\\<sqsubseteq>) \\<and>\n  finite_complete A (\\<sqsubseteq>)\n\ngoal (1 subgoal):\n 1. directed_complete A (\\<sqsubseteq>) &&&\n    finite_complete A (\\<sqsubseteq>)", "by auto"], ["proof (state)\nthis:\n  directed_complete A (\\<sqsubseteq>)\n  finite_complete A (\\<sqsubseteq>)\n\ngoal (1 subgoal):\n 1. directed_complete A (\\<sqsubseteq>) \\<and>\n    finite_complete A (\\<sqsubseteq>) \\<Longrightarrow>\n    semicomplete A (\\<sqsubseteq>)", "show ?l"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicomplete A (\\<sqsubseteq>)", "proof (intro completeI, elim CollectE)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> A; X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) X)", "fix X"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> A; X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) X)", "assume XA: \"X \\<subseteq> A\""], ["proof (state)\nthis:\n  X \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> A; X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) X)", "have 1: \"directed {x. \\<exists>Y \\<subseteq> X. finite Y \\<and> Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x} (\\<sqsubseteq>)\" (is \"directed ?B _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. directed\n     {x. \\<exists>Y\\<subseteq>X.\n            finite Y \\<and>\n            Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n     (\\<sqsubseteq>)", "proof (intro directedI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {x. \\<exists>Y\\<subseteq>X.\n                               finite Y \\<and>\n                               Y \\<noteq> {} \\<and>\n                               extreme_bound A (\\<sqsubseteq>) Y x};\n        y \\<in> {x. \\<exists>Y\\<subseteq>X.\n                       finite Y \\<and>\n                       Y \\<noteq> {} \\<and>\n                       extreme_bound A (\\<sqsubseteq>) Y x}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>{x.\n   \\<exists>Y\\<subseteq>X.\n      finite Y \\<and>\n      Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}.\n                            x \\<sqsubseteq> z \\<and> y \\<sqsubseteq> z", "fix a b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {x. \\<exists>Y\\<subseteq>X.\n                               finite Y \\<and>\n                               Y \\<noteq> {} \\<and>\n                               extreme_bound A (\\<sqsubseteq>) Y x};\n        y \\<in> {x. \\<exists>Y\\<subseteq>X.\n                       finite Y \\<and>\n                       Y \\<noteq> {} \\<and>\n                       extreme_bound A (\\<sqsubseteq>) Y x}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>{x.\n   \\<exists>Y\\<subseteq>X.\n      finite Y \\<and>\n      Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}.\n                            x \\<sqsubseteq> z \\<and> y \\<sqsubseteq> z", "assume a: \"a \\<in> ?B\" and b: \"b \\<in> ?B\""], ["proof (state)\nthis:\n  a \\<in> {x. \\<exists>Y\\<subseteq>X.\n                 finite Y \\<and>\n                 Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n  b \\<in> {x. \\<exists>Y\\<subseteq>X.\n                 finite Y \\<and>\n                 Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {x. \\<exists>Y\\<subseteq>X.\n                               finite Y \\<and>\n                               Y \\<noteq> {} \\<and>\n                               extreme_bound A (\\<sqsubseteq>) Y x};\n        y \\<in> {x. \\<exists>Y\\<subseteq>X.\n                       finite Y \\<and>\n                       Y \\<noteq> {} \\<and>\n                       extreme_bound A (\\<sqsubseteq>) Y x}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>{x.\n   \\<exists>Y\\<subseteq>X.\n      finite Y \\<and>\n      Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}.\n                            x \\<sqsubseteq> z \\<and> y \\<sqsubseteq> z", "from a"], ["proof (chain)\npicking this:\n  a \\<in> {x. \\<exists>Y\\<subseteq>X.\n                 finite Y \\<and>\n                 Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}", "obtain Y where Y: \"extreme_bound A (\\<sqsubseteq>) Y a\" \"finite Y\" \"Y \\<noteq> {}\" \"Y \\<subseteq> X\""], ["proof (prove)\nusing this:\n  a \\<in> {x. \\<exists>Y\\<subseteq>X.\n                 finite Y \\<and>\n                 Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n\ngoal (1 subgoal):\n 1. (\\<And>Y.\n        \\<lbrakk>extreme_bound A (\\<sqsubseteq>) Y a; finite Y;\n         Y \\<noteq> {}; Y \\<subseteq> X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  extreme_bound A (\\<sqsubseteq>) Y a\n  finite Y\n  Y \\<noteq> {}\n  Y \\<subseteq> X\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {x. \\<exists>Y\\<subseteq>X.\n                               finite Y \\<and>\n                               Y \\<noteq> {} \\<and>\n                               extreme_bound A (\\<sqsubseteq>) Y x};\n        y \\<in> {x. \\<exists>Y\\<subseteq>X.\n                       finite Y \\<and>\n                       Y \\<noteq> {} \\<and>\n                       extreme_bound A (\\<sqsubseteq>) Y x}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>{x.\n   \\<exists>Y\\<subseteq>X.\n      finite Y \\<and>\n      Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}.\n                            x \\<sqsubseteq> z \\<and> y \\<sqsubseteq> z", "from b"], ["proof (chain)\npicking this:\n  b \\<in> {x. \\<exists>Y\\<subseteq>X.\n                 finite Y \\<and>\n                 Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}", "obtain B where B: \"extreme_bound A (\\<sqsubseteq>) B b\" \"finite B\" \"B \\<noteq> {}\" \"B \\<subseteq> X\""], ["proof (prove)\nusing this:\n  b \\<in> {x. \\<exists>Y\\<subseteq>X.\n                 finite Y \\<and>\n                 Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n\ngoal (1 subgoal):\n 1. (\\<And>B.\n        \\<lbrakk>extreme_bound A (\\<sqsubseteq>) B b; finite B;\n         B \\<noteq> {}; B \\<subseteq> X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  extreme_bound A (\\<sqsubseteq>) B b\n  finite B\n  B \\<noteq> {}\n  B \\<subseteq> X\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {x. \\<exists>Y\\<subseteq>X.\n                               finite Y \\<and>\n                               Y \\<noteq> {} \\<and>\n                               extreme_bound A (\\<sqsubseteq>) Y x};\n        y \\<in> {x. \\<exists>Y\\<subseteq>X.\n                       finite Y \\<and>\n                       Y \\<noteq> {} \\<and>\n                       extreme_bound A (\\<sqsubseteq>) Y x}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>{x.\n   \\<exists>Y\\<subseteq>X.\n      finite Y \\<and>\n      Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}.\n                            x \\<sqsubseteq> z \\<and> y \\<sqsubseteq> z", "from XA Y B"], ["proof (chain)\npicking this:\n  X \\<subseteq> A\n  extreme_bound A (\\<sqsubseteq>) Y a\n  finite Y\n  Y \\<noteq> {}\n  Y \\<subseteq> X\n  extreme_bound A (\\<sqsubseteq>) B b\n  finite B\n  B \\<noteq> {}\n  B \\<subseteq> X", "have AB: \"Y \\<subseteq> A\" \"B \\<subseteq> A\" \"finite (Y \\<union> B)\" \"Y \\<union> B \\<noteq> {}\" \"Y \\<union> B \\<subseteq> X\""], ["proof (prove)\nusing this:\n  X \\<subseteq> A\n  extreme_bound A (\\<sqsubseteq>) Y a\n  finite Y\n  Y \\<noteq> {}\n  Y \\<subseteq> X\n  extreme_bound A (\\<sqsubseteq>) B b\n  finite B\n  B \\<noteq> {}\n  B \\<subseteq> X\n\ngoal (1 subgoal):\n 1. (Y \\<subseteq> A &&& B \\<subseteq> A) &&&\n    finite (Y \\<union> B) &&&\n    Y \\<union> B \\<noteq> {} &&& Y \\<union> B \\<subseteq> X", "by auto"], ["proof (state)\nthis:\n  Y \\<subseteq> A\n  B \\<subseteq> A\n  finite (Y \\<union> B)\n  Y \\<union> B \\<noteq> {}\n  Y \\<union> B \\<subseteq> X\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {x. \\<exists>Y\\<subseteq>X.\n                               finite Y \\<and>\n                               Y \\<noteq> {} \\<and>\n                               extreme_bound A (\\<sqsubseteq>) Y x};\n        y \\<in> {x. \\<exists>Y\\<subseteq>X.\n                       finite Y \\<and>\n                       Y \\<noteq> {} \\<and>\n                       extreme_bound A (\\<sqsubseteq>) Y x}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>{x.\n   \\<exists>Y\\<subseteq>X.\n      finite Y \\<and>\n      Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}.\n                            x \\<sqsubseteq> z \\<and> y \\<sqsubseteq> z", "with fc[THEN completeD]"], ["proof (chain)\npicking this:\n  \\<lbrakk>?X \\<subseteq> A;\n   ?X \\<in> {X. finite X \\<and> X \\<noteq> {}}\\<rbrakk>\n  \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) ?X)\n  Y \\<subseteq> A\n  B \\<subseteq> A\n  finite (Y \\<union> B)\n  Y \\<union> B \\<noteq> {}\n  Y \\<union> B \\<subseteq> X", "have \"Ex (extreme_bound A (\\<sqsubseteq>) (Y \\<union> B))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?X \\<subseteq> A;\n   ?X \\<in> {X. finite X \\<and> X \\<noteq> {}}\\<rbrakk>\n  \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) ?X)\n  Y \\<subseteq> A\n  B \\<subseteq> A\n  finite (Y \\<union> B)\n  Y \\<union> B \\<noteq> {}\n  Y \\<union> B \\<subseteq> X\n\ngoal (1 subgoal):\n 1. Ex (extreme_bound A (\\<sqsubseteq>) (Y \\<union> B))", "by auto"], ["proof (state)\nthis:\n  Ex (extreme_bound A (\\<sqsubseteq>) (Y \\<union> B))\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {x. \\<exists>Y\\<subseteq>X.\n                               finite Y \\<and>\n                               Y \\<noteq> {} \\<and>\n                               extreme_bound A (\\<sqsubseteq>) Y x};\n        y \\<in> {x. \\<exists>Y\\<subseteq>X.\n                       finite Y \\<and>\n                       Y \\<noteq> {} \\<and>\n                       extreme_bound A (\\<sqsubseteq>) Y x}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>{x.\n   \\<exists>Y\\<subseteq>X.\n      finite Y \\<and>\n      Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}.\n                            x \\<sqsubseteq> z \\<and> y \\<sqsubseteq> z", "then"], ["proof (chain)\npicking this:\n  Ex (extreme_bound A (\\<sqsubseteq>) (Y \\<union> B))", "obtain c where c: \"extreme_bound A (\\<sqsubseteq>) (Y \\<union> B) c\""], ["proof (prove)\nusing this:\n  Ex (extreme_bound A (\\<sqsubseteq>) (Y \\<union> B))\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        extreme_bound A (\\<sqsubseteq>) (Y \\<union> B) c \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  extreme_bound A (\\<sqsubseteq>) (Y \\<union> B) c\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {x. \\<exists>Y\\<subseteq>X.\n                               finite Y \\<and>\n                               Y \\<noteq> {} \\<and>\n                               extreme_bound A (\\<sqsubseteq>) Y x};\n        y \\<in> {x. \\<exists>Y\\<subseteq>X.\n                       finite Y \\<and>\n                       Y \\<noteq> {} \\<and>\n                       extreme_bound A (\\<sqsubseteq>) Y x}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>{x.\n   \\<exists>Y\\<subseteq>X.\n      finite Y \\<and>\n      Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}.\n                            x \\<sqsubseteq> z \\<and> y \\<sqsubseteq> z", "show \"\\<exists>c \\<in> ?B. a \\<sqsubseteq> c \\<and> b \\<sqsubseteq> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c\\<in>{x. \\<exists>Y\\<subseteq>X.\n                          finite Y \\<and>\n                          Y \\<noteq> {} \\<and>\n                          extreme_bound A (\\<sqsubseteq>) Y x}.\n       a \\<sqsubseteq> c \\<and> b \\<sqsubseteq> c", "proof (intro bexI conjI)"], ["proof (state)\ngoal (3 subgoals):\n 1. a \\<sqsubseteq> ?c\n 2. b \\<sqsubseteq> ?c\n 3. ?c \\<in> {x. \\<exists>Y\\<subseteq>X.\n                    finite Y \\<and>\n                    Y \\<noteq> {} \\<and>\n                    extreme_bound A (\\<sqsubseteq>) Y x}", "from Y B c"], ["proof (chain)\npicking this:\n  extreme_bound A (\\<sqsubseteq>) Y a\n  finite Y\n  Y \\<noteq> {}\n  Y \\<subseteq> X\n  extreme_bound A (\\<sqsubseteq>) B b\n  finite B\n  B \\<noteq> {}\n  B \\<subseteq> X\n  extreme_bound A (\\<sqsubseteq>) (Y \\<union> B) c", "show \"a \\<sqsubseteq> c\" and \"b \\<sqsubseteq> c\""], ["proof (prove)\nusing this:\n  extreme_bound A (\\<sqsubseteq>) Y a\n  finite Y\n  Y \\<noteq> {}\n  Y \\<subseteq> X\n  extreme_bound A (\\<sqsubseteq>) B b\n  finite B\n  B \\<noteq> {}\n  B \\<subseteq> X\n  extreme_bound A (\\<sqsubseteq>) (Y \\<union> B) c\n\ngoal (1 subgoal):\n 1. a \\<sqsubseteq> c &&& b \\<sqsubseteq> c", "by (auto simp: extreme_bound_iff)"], ["proof (state)\nthis:\n  a \\<sqsubseteq> c\n  b \\<sqsubseteq> c\n\ngoal (1 subgoal):\n 1. c \\<in> {x. \\<exists>Y\\<subseteq>X.\n                   finite Y \\<and>\n                   Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}", "from AB c"], ["proof (chain)\npicking this:\n  Y \\<subseteq> A\n  B \\<subseteq> A\n  finite (Y \\<union> B)\n  Y \\<union> B \\<noteq> {}\n  Y \\<union> B \\<subseteq> X\n  extreme_bound A (\\<sqsubseteq>) (Y \\<union> B) c", "show \"c \\<in> ?B\""], ["proof (prove)\nusing this:\n  Y \\<subseteq> A\n  B \\<subseteq> A\n  finite (Y \\<union> B)\n  Y \\<union> B \\<noteq> {}\n  Y \\<union> B \\<subseteq> X\n  extreme_bound A (\\<sqsubseteq>) (Y \\<union> B) c\n\ngoal (1 subgoal):\n 1. c \\<in> {x. \\<exists>Y\\<subseteq>X.\n                   finite Y \\<and>\n                   Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}", "by (auto intro!: exI[of _ \"Y \\<union> B\"])"], ["proof (state)\nthis:\n  c \\<in> {x. \\<exists>Y\\<subseteq>X.\n                 finite Y \\<and>\n                 Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>c\\<in>{x. \\<exists>Y\\<subseteq>X.\n                        finite Y \\<and>\n                        Y \\<noteq> {} \\<and>\n                        extreme_bound A (\\<sqsubseteq>) Y x}.\n     a \\<sqsubseteq> c \\<and> b \\<sqsubseteq> c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  directed\n   {x. \\<exists>Y\\<subseteq>X.\n          finite Y \\<and>\n          Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n   (\\<sqsubseteq>)\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> A; X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) X)", "have B: \"?B \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. \\<exists>Y\\<subseteq>X.\n           finite Y \\<and>\n           Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n    \\<subseteq> A", "by auto"], ["proof (state)\nthis:\n  {x. \\<exists>Y\\<subseteq>X.\n         finite Y \\<and>\n         Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n  \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> A; X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) X)", "assume \"X \\<noteq> {}\""], ["proof (state)\nthis:\n  X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> A; X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) X)", "then"], ["proof (chain)\npicking this:\n  X \\<noteq> {}", "obtain x where xX: \"x \\<in> X\""], ["proof (prove)\nusing this:\n  X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>x. x \\<in> X \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> A; X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) X)", "with XA"], ["proof (chain)\npicking this:\n  X \\<subseteq> A\n  x \\<in> X", "have \"extreme_bound A (\\<sqsubseteq>) {x} x\""], ["proof (prove)\nusing this:\n  X \\<subseteq> A\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. extreme_bound A (\\<sqsubseteq>) {x} x", "by (intro extreme_bound_singleton, auto)"], ["proof (state)\nthis:\n  extreme_bound A (\\<sqsubseteq>) {x} x\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> A; X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) X)", "with xX"], ["proof (chain)\npicking this:\n  x \\<in> X\n  extreme_bound A (\\<sqsubseteq>) {x} x", "have xB: \"x \\<in> ?B\""], ["proof (prove)\nusing this:\n  x \\<in> X\n  extreme_bound A (\\<sqsubseteq>) {x} x\n\ngoal (1 subgoal):\n 1. x \\<in> {x. \\<exists>Y\\<subseteq>X.\n                   finite Y \\<and>\n                   Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}", "by (auto intro!: exI[of _ \"{x}\"])"], ["proof (state)\nthis:\n  x \\<in> {x. \\<exists>Y\\<subseteq>X.\n                 finite Y \\<and>\n                 Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> A; X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) X)", "then"], ["proof (chain)\npicking this:\n  x \\<in> {x. \\<exists>Y\\<subseteq>X.\n                 finite Y \\<and>\n                 Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}", "have 2: \"?B \\<noteq> {}\""], ["proof (prove)\nusing this:\n  x \\<in> {x. \\<exists>Y\\<subseteq>X.\n                 finite Y \\<and>\n                 Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n\ngoal (1 subgoal):\n 1. {x. \\<exists>Y\\<subseteq>X.\n           finite Y \\<and>\n           Y \\<noteq> {} \\<and>\n           extreme_bound A (\\<sqsubseteq>) Y x} \\<noteq>\n    {}", "by auto"], ["proof (state)\nthis:\n  {x. \\<exists>Y\\<subseteq>X.\n         finite Y \\<and>\n         Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x} \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> A; X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) X)", "from dc[unfolded directed_complete_def, THEN completeD, of ?B] B 1 2"], ["proof (chain)\npicking this:\n  \\<lbrakk>{x. \\<exists>Y\\<subseteq>X.\n                  finite Y \\<and>\n                  Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n           \\<subseteq> A;\n   {x. \\<exists>Y\\<subseteq>X.\n          finite Y \\<and>\n          Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n   \\<in> {X. directed X (\\<sqsubseteq>) \\<and> X \\<noteq> {}}\\<rbrakk>\n  \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>)\n                         {x. \\<exists>Y\\<subseteq>X.\n                                finite Y \\<and>\n                                Y \\<noteq> {} \\<and>\n                                extreme_bound A (\\<sqsubseteq>) Y x})\n  {x. \\<exists>Y\\<subseteq>X.\n         finite Y \\<and>\n         Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n  \\<subseteq> A\n  directed\n   {x. \\<exists>Y\\<subseteq>X.\n          finite Y \\<and>\n          Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n   (\\<sqsubseteq>)\n  {x. \\<exists>Y\\<subseteq>X.\n         finite Y \\<and>\n         Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x} \\<noteq>\n  {}", "obtain b where b: \"extreme_bound A (\\<sqsubseteq>) ?B b\""], ["proof (prove)\nusing this:\n  \\<lbrakk>{x. \\<exists>Y\\<subseteq>X.\n                  finite Y \\<and>\n                  Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n           \\<subseteq> A;\n   {x. \\<exists>Y\\<subseteq>X.\n          finite Y \\<and>\n          Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n   \\<in> {X. directed X (\\<sqsubseteq>) \\<and> X \\<noteq> {}}\\<rbrakk>\n  \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>)\n                         {x. \\<exists>Y\\<subseteq>X.\n                                finite Y \\<and>\n                                Y \\<noteq> {} \\<and>\n                                extreme_bound A (\\<sqsubseteq>) Y x})\n  {x. \\<exists>Y\\<subseteq>X.\n         finite Y \\<and>\n         Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n  \\<subseteq> A\n  directed\n   {x. \\<exists>Y\\<subseteq>X.\n          finite Y \\<and>\n          Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n   (\\<sqsubseteq>)\n  {x. \\<exists>Y\\<subseteq>X.\n         finite Y \\<and>\n         Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x} \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        extreme_bound A (\\<sqsubseteq>)\n         {x. \\<exists>Y\\<subseteq>X.\n                finite Y \\<and>\n                Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n         b \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  extreme_bound A (\\<sqsubseteq>)\n   {x. \\<exists>Y\\<subseteq>X.\n          finite Y \\<and>\n          Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n   b\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> A; X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) X)", "then"], ["proof (chain)\npicking this:\n  extreme_bound A (\\<sqsubseteq>)\n   {x. \\<exists>Y\\<subseteq>X.\n          finite Y \\<and>\n          Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n   b", "have bA: \"b \\<in> A\""], ["proof (prove)\nusing this:\n  extreme_bound A (\\<sqsubseteq>)\n   {x. \\<exists>Y\\<subseteq>X.\n          finite Y \\<and>\n          Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n   b\n\ngoal (1 subgoal):\n 1. b \\<in> A", "by auto"], ["proof (state)\nthis:\n  b \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> A; X \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> Ex (extreme_bound A (\\<sqsubseteq>) X)", "show \"Ex (extreme_bound A (\\<sqsubseteq>) X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ex (extreme_bound A (\\<sqsubseteq>) X)", "proof (intro exI extreme_boundI UNIV_I)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>bound X (\\<sqsubseteq>) b; b \\<in> A\\<rbrakk>\n       \\<Longrightarrow> ?x \\<sqsubseteq> b\n 2. \\<And>x. x \\<in> X \\<Longrightarrow> x \\<sqsubseteq> ?x\n 3. ?x \\<in> A", "fix x"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>bound X (\\<sqsubseteq>) b; b \\<in> A\\<rbrakk>\n       \\<Longrightarrow> ?x \\<sqsubseteq> b\n 2. \\<And>x. x \\<in> X \\<Longrightarrow> x \\<sqsubseteq> ?x\n 3. ?x \\<in> A", "assume xX: \"x \\<in> X\""], ["proof (state)\nthis:\n  x \\<in> X\n\ngoal (3 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>bound X (\\<sqsubseteq>) b; b \\<in> A\\<rbrakk>\n       \\<Longrightarrow> ?x \\<sqsubseteq> b\n 2. \\<And>x. x \\<in> X \\<Longrightarrow> x \\<sqsubseteq> ?x\n 3. ?x \\<in> A", "with XA"], ["proof (chain)\npicking this:\n  X \\<subseteq> A\n  x \\<in> X", "have x: \"extreme_bound A (\\<sqsubseteq>) {x} x\""], ["proof (prove)\nusing this:\n  X \\<subseteq> A\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. extreme_bound A (\\<sqsubseteq>) {x} x", "by (intro extreme_bound_singleton, auto)"], ["proof (state)\nthis:\n  extreme_bound A (\\<sqsubseteq>) {x} x\n\ngoal (3 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>bound X (\\<sqsubseteq>) b; b \\<in> A\\<rbrakk>\n       \\<Longrightarrow> ?x \\<sqsubseteq> b\n 2. \\<And>x. x \\<in> X \\<Longrightarrow> x \\<sqsubseteq> ?x\n 3. ?x \\<in> A", "from x xX"], ["proof (chain)\npicking this:\n  extreme_bound A (\\<sqsubseteq>) {x} x\n  x \\<in> X", "have cB: \"x \\<in> ?B\""], ["proof (prove)\nusing this:\n  extreme_bound A (\\<sqsubseteq>) {x} x\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. x \\<in> {x. \\<exists>Y\\<subseteq>X.\n                   finite Y \\<and>\n                   Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}", "by (auto intro!: exI[of _ \"{x}\"])"], ["proof (state)\nthis:\n  x \\<in> {x. \\<exists>Y\\<subseteq>X.\n                 finite Y \\<and>\n                 Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n\ngoal (3 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>bound X (\\<sqsubseteq>) b; b \\<in> A\\<rbrakk>\n       \\<Longrightarrow> ?x \\<sqsubseteq> b\n 2. \\<And>x. x \\<in> X \\<Longrightarrow> x \\<sqsubseteq> ?x\n 3. ?x \\<in> A", "with b"], ["proof (chain)\npicking this:\n  extreme_bound A (\\<sqsubseteq>)\n   {x. \\<exists>Y\\<subseteq>X.\n          finite Y \\<and>\n          Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n   b\n  x \\<in> {x. \\<exists>Y\\<subseteq>X.\n                 finite Y \\<and>\n                 Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}", "show \"x \\<sqsubseteq> b\""], ["proof (prove)\nusing this:\n  extreme_bound A (\\<sqsubseteq>)\n   {x. \\<exists>Y\\<subseteq>X.\n          finite Y \\<and>\n          Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n   b\n  x \\<in> {x. \\<exists>Y\\<subseteq>X.\n                 finite Y \\<and>\n                 Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n\ngoal (1 subgoal):\n 1. x \\<sqsubseteq> b", "by auto"], ["proof (state)\nthis:\n  x \\<sqsubseteq> b\n\ngoal (2 subgoals):\n 1. \\<And>ba.\n       \\<lbrakk>bound X (\\<sqsubseteq>) ba; ba \\<in> A\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq> ba\n 2. b \\<in> A", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ba.\n       \\<lbrakk>bound X (\\<sqsubseteq>) ba; ba \\<in> A\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq> ba\n 2. b \\<in> A", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ba.\n       \\<lbrakk>bound X (\\<sqsubseteq>) ba; ba \\<in> A\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq> ba\n 2. b \\<in> A", "assume Xx: \"bound X (\\<sqsubseteq>) x\" and xA: \"x \\<in> A\""], ["proof (state)\nthis:\n  bound X (\\<sqsubseteq>) x\n  x \\<in> A\n\ngoal (2 subgoals):\n 1. \\<And>ba.\n       \\<lbrakk>bound X (\\<sqsubseteq>) ba; ba \\<in> A\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq> ba\n 2. b \\<in> A", "have \"bound ?B (\\<sqsubseteq>) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bound\n     {x. \\<exists>Y\\<subseteq>X.\n            finite Y \\<and>\n            Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n     (\\<sqsubseteq>) x", "proof (intro boundI UNIV_I, clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x Y.\n       \\<lbrakk>Y \\<subseteq> X; finite Y; Y \\<noteq> {};\n        extreme_bound A (\\<sqsubseteq>) Y x\\<rbrakk>\n       \\<Longrightarrow> x \\<sqsubseteq> x", "fix c Y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x Y.\n       \\<lbrakk>Y \\<subseteq> X; finite Y; Y \\<noteq> {};\n        extreme_bound A (\\<sqsubseteq>) Y x\\<rbrakk>\n       \\<Longrightarrow> x \\<sqsubseteq> x", "assume \"finite Y\" and YX: \"Y \\<subseteq> X\" and \"Y \\<noteq> {}\" and c: \"extreme_bound A (\\<sqsubseteq>) Y c\""], ["proof (state)\nthis:\n  finite Y\n  Y \\<subseteq> X\n  Y \\<noteq> {}\n  extreme_bound A (\\<sqsubseteq>) Y c\n\ngoal (1 subgoal):\n 1. \\<And>x Y.\n       \\<lbrakk>Y \\<subseteq> X; finite Y; Y \\<noteq> {};\n        extreme_bound A (\\<sqsubseteq>) Y x\\<rbrakk>\n       \\<Longrightarrow> x \\<sqsubseteq> x", "from YX Xx"], ["proof (chain)\npicking this:\n  Y \\<subseteq> X\n  bound X (\\<sqsubseteq>) x", "have \"bound Y (\\<sqsubseteq>) x\""], ["proof (prove)\nusing this:\n  Y \\<subseteq> X\n  bound X (\\<sqsubseteq>) x\n\ngoal (1 subgoal):\n 1. bound Y (\\<sqsubseteq>) x", "by auto"], ["proof (state)\nthis:\n  bound Y (\\<sqsubseteq>) x\n\ngoal (1 subgoal):\n 1. \\<And>x Y.\n       \\<lbrakk>Y \\<subseteq> X; finite Y; Y \\<noteq> {};\n        extreme_bound A (\\<sqsubseteq>) Y x\\<rbrakk>\n       \\<Longrightarrow> x \\<sqsubseteq> x", "with YX XA xA c"], ["proof (chain)\npicking this:\n  Y \\<subseteq> X\n  X \\<subseteq> A\n  x \\<in> A\n  extreme_bound A (\\<sqsubseteq>) Y c\n  bound Y (\\<sqsubseteq>) x", "show \"c \\<sqsubseteq> x\""], ["proof (prove)\nusing this:\n  Y \\<subseteq> X\n  X \\<subseteq> A\n  x \\<in> A\n  extreme_bound A (\\<sqsubseteq>) Y c\n  bound Y (\\<sqsubseteq>) x\n\ngoal (1 subgoal):\n 1. c \\<sqsubseteq> x", "by auto"], ["proof (state)\nthis:\n  c \\<sqsubseteq> x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  bound\n   {x. \\<exists>Y\\<subseteq>X.\n          finite Y \\<and>\n          Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n   (\\<sqsubseteq>) x\n\ngoal (2 subgoals):\n 1. \\<And>ba.\n       \\<lbrakk>bound X (\\<sqsubseteq>) ba; ba \\<in> A\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq> ba\n 2. b \\<in> A", "with xA b"], ["proof (chain)\npicking this:\n  x \\<in> A\n  extreme_bound A (\\<sqsubseteq>)\n   {x. \\<exists>Y\\<subseteq>X.\n          finite Y \\<and>\n          Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n   b\n  bound\n   {x. \\<exists>Y\\<subseteq>X.\n          finite Y \\<and>\n          Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n   (\\<sqsubseteq>) x", "show \"b \\<sqsubseteq> x\""], ["proof (prove)\nusing this:\n  x \\<in> A\n  extreme_bound A (\\<sqsubseteq>)\n   {x. \\<exists>Y\\<subseteq>X.\n          finite Y \\<and>\n          Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n   b\n  bound\n   {x. \\<exists>Y\\<subseteq>X.\n          finite Y \\<and>\n          Y \\<noteq> {} \\<and> extreme_bound A (\\<sqsubseteq>) Y x}\n   (\\<sqsubseteq>) x\n\ngoal (1 subgoal):\n 1. b \\<sqsubseteq> x", "by auto"], ["proof (state)\nthis:\n  b \\<sqsubseteq> x\n\ngoal (1 subgoal):\n 1. b \\<in> A", "qed (fact bA)"], ["proof (state)\nthis:\n  Ex (extreme_bound A (\\<sqsubseteq>) X)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  semicomplete A (\\<sqsubseteq>)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Relating to Classes\\<close>"], ["", "(* HOL.Conditionally_Complete_Lattices imports choice.\n\ntext \\<open>Isabelle's class @{class conditionally_complete_lattice} satisfies @{const conditionally_complete}.\nThe other direction does not hold, since for the former,\n@{term \"Sup {}\"} and @{term \"Inf {}\"} are arbitrary even if there are top or bottom elements.\\<close>\n\nlemma (in conditionally_complete_lattice) \"conditionally_complete UNIV (\\<le>)\"\nproof (intro completeI, elim CollectE)\n  fix X :: \"'a set\"\n  assume \"\\<exists>b\\<in>UNIV. bound X (\\<le>) b \\<and> X \\<noteq> {}\"\n  then have bdd:\"bdd_above X\" and X0: \"X \\<noteq> {}\" by (auto 0 3)\n  from cSup_upper[OF _ bdd] cSup_least[OF X0]\n  have \"supremum X (Sup X)\" by (intro extremeI boundI, auto)\n  then show \"\\<exists>s. least {b \\<in> UNIV. bound X (\\<le>) b} s\" by auto\nqed\n*)"], ["", "text \\<open>Isabelle's class @{class complete_lattice} is @{term \"UNIV-complete\"}.\\<close>"], ["", "lemma (in complete_lattice) \"UNIV-complete UNIV (\\<le>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV-complete UNIV (\\<le>)", "by (auto intro!: completeI Sup_upper Sup_least Inf_lower Inf_greatest)"], ["", "subsection \\<open>Set-wise Completeness\\<close>"], ["", "lemma directed_sets_directed_complete:\n  assumes cl: \"\\<forall>DC. DC \\<subseteq> AA \\<longrightarrow> (\\<forall>X\\<in>DC. directed X r) \\<longrightarrow> (\\<Union>DC) \\<in> AA\"\n  shows \"{DC. directed DC (\\<subseteq>)}-complete {X \\<in> AA. directed X r} (\\<subseteq>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {DC. directed DC (\\<subseteq>)}-complete {X \\<in> AA. directed X r}\n     (\\<subseteq>)", "proof (intro completeI, safe)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> {X \\<in> AA. directed X r};\n        directed X (\\<subseteq>)\\<rbrakk>\n       \\<Longrightarrow> Ex (least\n                              {b \\<in> {X \\<in> AA. directed X r}.\n                               bound X (\\<subseteq>) b})", "fix XX"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> {X \\<in> AA. directed X r};\n        directed X (\\<subseteq>)\\<rbrakk>\n       \\<Longrightarrow> Ex (least\n                              {b \\<in> {X \\<in> AA. directed X r}.\n                               bound X (\\<subseteq>) b})", "assume ch: \"XX \\<subseteq> {X \\<in> AA. directed X r}\" and dir: \"directed XX (\\<subseteq>)\""], ["proof (state)\nthis:\n  XX \\<subseteq> {X \\<in> AA. directed X r}\n  directed XX (\\<subseteq>)\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> {X \\<in> AA. directed X r};\n        directed X (\\<subseteq>)\\<rbrakk>\n       \\<Longrightarrow> Ex (least\n                              {b \\<in> {X \\<in> AA. directed X r}.\n                               bound X (\\<subseteq>) b})", "with cl"], ["proof (chain)\npicking this:\n  \\<forall>DC\\<subseteq>AA.\n     (\\<forall>X\\<in>DC. directed X r) \\<longrightarrow>\n     \\<Union> DC \\<in> AA\n  XX \\<subseteq> {X \\<in> AA. directed X r}\n  directed XX (\\<subseteq>)", "have \"(\\<Union>XX) \\<in> AA\""], ["proof (prove)\nusing this:\n  \\<forall>DC\\<subseteq>AA.\n     (\\<forall>X\\<in>DC. directed X r) \\<longrightarrow>\n     \\<Union> DC \\<in> AA\n  XX \\<subseteq> {X \\<in> AA. directed X r}\n  directed XX (\\<subseteq>)\n\ngoal (1 subgoal):\n 1. \\<Union> XX \\<in> AA", "by auto"], ["proof (state)\nthis:\n  \\<Union> XX \\<in> AA\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> {X \\<in> AA. directed X r};\n        directed X (\\<subseteq>)\\<rbrakk>\n       \\<Longrightarrow> Ex (least\n                              {b \\<in> {X \\<in> AA. directed X r}.\n                               bound X (\\<subseteq>) b})", "moreover"], ["proof (state)\nthis:\n  \\<Union> XX \\<in> AA\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> {X \\<in> AA. directed X r};\n        directed X (\\<subseteq>)\\<rbrakk>\n       \\<Longrightarrow> Ex (least\n                              {b \\<in> {X \\<in> AA. directed X r}.\n                               bound X (\\<subseteq>) b})", "have \"directed (\\<Union>XX) r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. directed (\\<Union> XX) r", "proof (intro directedI, elim UnionE)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y X Xa.\n       \\<lbrakk>x \\<in> X; X \\<in> XX; y \\<in> Xa; Xa \\<in> XX\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>\\<Union> XX. r x z \\<and> r y z", "fix x y X Y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y X Xa.\n       \\<lbrakk>x \\<in> X; X \\<in> XX; y \\<in> Xa; Xa \\<in> XX\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>\\<Union> XX. r x z \\<and> r y z", "assume xX: \"x \\<in> X\" and X: \"X \\<in> XX\" and yY: \"y \\<in> Y\" and Y: \"Y \\<in> XX\""], ["proof (state)\nthis:\n  x \\<in> X\n  X \\<in> XX\n  y \\<in> Y\n  Y \\<in> XX\n\ngoal (1 subgoal):\n 1. \\<And>x y X Xa.\n       \\<lbrakk>x \\<in> X; X \\<in> XX; y \\<in> Xa; Xa \\<in> XX\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>\\<Union> XX. r x z \\<and> r y z", "from directedD[OF dir X Y]"], ["proof (chain)\npicking this:\n  \\<exists>z\\<in>XX. X \\<subseteq> z \\<and> Y \\<subseteq> z", "obtain Z where \"X \\<subseteq> Z\" \"Y \\<subseteq> Z\" and Z: \"Z \\<in> XX\""], ["proof (prove)\nusing this:\n  \\<exists>z\\<in>XX. X \\<subseteq> z \\<and> Y \\<subseteq> z\n\ngoal (1 subgoal):\n 1. (\\<And>Z.\n        \\<lbrakk>X \\<subseteq> Z; Y \\<subseteq> Z; Z \\<in> XX\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  X \\<subseteq> Z\n  Y \\<subseteq> Z\n  Z \\<in> XX\n\ngoal (1 subgoal):\n 1. \\<And>x y X Xa.\n       \\<lbrakk>x \\<in> X; X \\<in> XX; y \\<in> Xa; Xa \\<in> XX\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>\\<Union> XX. r x z \\<and> r y z", "with ch xX yY"], ["proof (chain)\npicking this:\n  XX \\<subseteq> {X \\<in> AA. directed X r}\n  x \\<in> X\n  y \\<in> Y\n  X \\<subseteq> Z\n  Y \\<subseteq> Z\n  Z \\<in> XX", "have \"directed Z r\" \"x \\<in> Z\" \"y \\<in> Z\""], ["proof (prove)\nusing this:\n  XX \\<subseteq> {X \\<in> AA. directed X r}\n  x \\<in> X\n  y \\<in> Y\n  X \\<subseteq> Z\n  Y \\<subseteq> Z\n  Z \\<in> XX\n\ngoal (1 subgoal):\n 1. directed Z r &&& x \\<in> Z &&& y \\<in> Z", "by auto"], ["proof (state)\nthis:\n  directed Z r\n  x \\<in> Z\n  y \\<in> Z\n\ngoal (1 subgoal):\n 1. \\<And>x y X Xa.\n       \\<lbrakk>x \\<in> X; X \\<in> XX; y \\<in> Xa; Xa \\<in> XX\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>\\<Union> XX. r x z \\<and> r y z", "then"], ["proof (chain)\npicking this:\n  directed Z r\n  x \\<in> Z\n  y \\<in> Z", "obtain z where \"z \\<in> Z\" \"r x z \\<and> r y z\""], ["proof (prove)\nusing this:\n  directed Z r\n  x \\<in> Z\n  y \\<in> Z\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<lbrakk>z \\<in> Z; r x z \\<and> r y z\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim:directedE)"], ["proof (state)\nthis:\n  z \\<in> Z\n  r x z \\<and> r y z\n\ngoal (1 subgoal):\n 1. \\<And>x y X Xa.\n       \\<lbrakk>x \\<in> X; X \\<in> XX; y \\<in> Xa; Xa \\<in> XX\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>\\<Union> XX. r x z \\<and> r y z", "with Z"], ["proof (chain)\npicking this:\n  Z \\<in> XX\n  z \\<in> Z\n  r x z \\<and> r y z", "show \"\\<exists>z\\<in>\\<Union> XX. r x z \\<and> r y z\""], ["proof (prove)\nusing this:\n  Z \\<in> XX\n  z \\<in> Z\n  r x z \\<and> r y z\n\ngoal (1 subgoal):\n 1. \\<exists>z\\<in>\\<Union> XX. r x z \\<and> r y z", "by auto"], ["proof (state)\nthis:\n  \\<exists>z\\<in>\\<Union> XX. r x z \\<and> r y z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  directed (\\<Union> XX) r\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> {X \\<in> AA. directed X r};\n        directed X (\\<subseteq>)\\<rbrakk>\n       \\<Longrightarrow> Ex (least\n                              {b \\<in> {X \\<in> AA. directed X r}.\n                               bound X (\\<subseteq>) b})", "ultimately"], ["proof (chain)\npicking this:\n  \\<Union> XX \\<in> AA\n  directed (\\<Union> XX) r", "have \"extreme_bound {X \\<in> AA. directed X r} (\\<subseteq>) XX (\\<Union>XX)\""], ["proof (prove)\nusing this:\n  \\<Union> XX \\<in> AA\n  directed (\\<Union> XX) r\n\ngoal (1 subgoal):\n 1. least {b \\<in> {X \\<in> AA. directed X r}. bound XX (\\<subseteq>) b}\n     (\\<Union> XX)", "by auto"], ["proof (state)\nthis:\n  least {b \\<in> {X \\<in> AA. directed X r}. bound XX (\\<subseteq>) b}\n   (\\<Union> XX)\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>X \\<subseteq> {X \\<in> AA. directed X r};\n        directed X (\\<subseteq>)\\<rbrakk>\n       \\<Longrightarrow> Ex (least\n                              {b \\<in> {X \\<in> AA. directed X r}.\n                               bound X (\\<subseteq>) b})", "then"], ["proof (chain)\npicking this:\n  least {b \\<in> {X \\<in> AA. directed X r}. bound XX (\\<subseteq>) b}\n   (\\<Union> XX)", "show \"Ex (extreme_bound {X \\<in> AA. directed X r} (\\<subseteq>) XX)\""], ["proof (prove)\nusing this:\n  least {b \\<in> {X \\<in> AA. directed X r}. bound XX (\\<subseteq>) b}\n   (\\<Union> XX)\n\ngoal (1 subgoal):\n 1. Ex (least\n         {b \\<in> {X \\<in> AA. directed X r}. bound XX (\\<subseteq>) b})", "by auto"], ["proof (state)\nthis:\n  Ex (least {b \\<in> {X \\<in> AA. directed X r}. bound XX (\\<subseteq>) b})\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma connex_directed_Un:\n  assumes ch: \"CC \\<subseteq> {C. connex C r}\" and dir: \"directed CC (\\<subseteq>)\"\n  shows \"connex (\\<Union>CC) r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. connex (\\<Union> CC) r", "proof (intro connexI, elim UnionE)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y X Xa.\n       \\<lbrakk>x \\<in> X; X \\<in> CC; y \\<in> Xa; Xa \\<in> CC\\<rbrakk>\n       \\<Longrightarrow> r x y \\<or> r y x", "fix x y X Y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y X Xa.\n       \\<lbrakk>x \\<in> X; X \\<in> CC; y \\<in> Xa; Xa \\<in> CC\\<rbrakk>\n       \\<Longrightarrow> r x y \\<or> r y x", "assume xX: \"x \\<in> X\" and X: \"X \\<in> CC\" and yY: \"y \\<in> Y\" and Y: \"Y \\<in> CC\""], ["proof (state)\nthis:\n  x \\<in> X\n  X \\<in> CC\n  y \\<in> Y\n  Y \\<in> CC\n\ngoal (1 subgoal):\n 1. \\<And>x y X Xa.\n       \\<lbrakk>x \\<in> X; X \\<in> CC; y \\<in> Xa; Xa \\<in> CC\\<rbrakk>\n       \\<Longrightarrow> r x y \\<or> r y x", "from directedD[OF dir X Y]"], ["proof (chain)\npicking this:\n  \\<exists>z\\<in>CC. X \\<subseteq> z \\<and> Y \\<subseteq> z", "obtain Z where \"X \\<subseteq> Z\" \"Y \\<subseteq> Z\" \"Z \\<in> CC\""], ["proof (prove)\nusing this:\n  \\<exists>z\\<in>CC. X \\<subseteq> z \\<and> Y \\<subseteq> z\n\ngoal (1 subgoal):\n 1. (\\<And>Z.\n        \\<lbrakk>X \\<subseteq> Z; Y \\<subseteq> Z; Z \\<in> CC\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  X \\<subseteq> Z\n  Y \\<subseteq> Z\n  Z \\<in> CC\n\ngoal (1 subgoal):\n 1. \\<And>x y X Xa.\n       \\<lbrakk>x \\<in> X; X \\<in> CC; y \\<in> Xa; Xa \\<in> CC\\<rbrakk>\n       \\<Longrightarrow> r x y \\<or> r y x", "with xX yY ch"], ["proof (chain)\npicking this:\n  x \\<in> X\n  y \\<in> Y\n  CC \\<subseteq> {C. connex C r}\n  X \\<subseteq> Z\n  Y \\<subseteq> Z\n  Z \\<in> CC", "have \"x \\<in> Z\" \"y \\<in> Z\" \"connex Z r\""], ["proof (prove)\nusing this:\n  x \\<in> X\n  y \\<in> Y\n  CC \\<subseteq> {C. connex C r}\n  X \\<subseteq> Z\n  Y \\<subseteq> Z\n  Z \\<in> CC\n\ngoal (1 subgoal):\n 1. x \\<in> Z &&& y \\<in> Z &&& connex Z r", "by auto"], ["proof (state)\nthis:\n  x \\<in> Z\n  y \\<in> Z\n  connex Z r\n\ngoal (1 subgoal):\n 1. \\<And>x y X Xa.\n       \\<lbrakk>x \\<in> X; X \\<in> CC; y \\<in> Xa; Xa \\<in> CC\\<rbrakk>\n       \\<Longrightarrow> r x y \\<or> r y x", "then"], ["proof (chain)\npicking this:\n  x \\<in> Z\n  y \\<in> Z\n  connex Z r", "show \"r x y \\<or> r y x\""], ["proof (prove)\nusing this:\n  x \\<in> Z\n  y \\<in> Z\n  connex Z r\n\ngoal (1 subgoal):\n 1. r x y \\<or> r y x", "by (auto elim:connexE)"], ["proof (state)\nthis:\n  r x y \\<or> r y x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma connex_directed_complete: \"{DC. directed DC (\\<subseteq>)}-complete {C. connex C r} (\\<subseteq>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {DC. directed DC (\\<subseteq>)}-complete {C. connex C r} (\\<subseteq>)", "by (intro completeI, force dest!: connex_directed_Un)"], ["", "end"]]}