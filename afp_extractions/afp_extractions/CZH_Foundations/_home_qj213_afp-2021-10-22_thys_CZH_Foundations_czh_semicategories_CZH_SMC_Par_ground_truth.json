{"file_name": "/home/qj213/afp-2021-10-22/thys/CZH_Foundations/czh_semicategories/CZH_SMC_Par.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CZH_Foundations", "problem_names": ["lemmas (in arr_Par) [smc_Par_cs_simps] = \n  dg_Rel_shared_cs_simps", "lemmas [smc_Par_cs_simps] = \n  dg_Rel_shared_cs_simps\n  arr_Par.arr_Par_length\n  arr_Par_comp_Par_id_Par_left\n  arr_Par_comp_Par_id_Par_right", "lemmas [smc_Par_cs_intros] = \n  dg_Rel_shared_cs_intros\n  arr_Par_comp_Par", "lemma smc_Par_components:\n  shows \"smc_Par \\<alpha>\\<lparr>Obj\\<rparr> = Vset \\<alpha>\"\n    and \"smc_Par \\<alpha>\\<lparr>Arr\\<rparr> = set {T. arr_Par \\<alpha> T}\"\n    and \"smc_Par \\<alpha>\\<lparr>Dom\\<rparr> = (\\<lambda>T\\<in>\\<^sub>\\<circ>set {T. arr_Par \\<alpha> T}. T\\<lparr>ArrDom\\<rparr>)\"\n    and \"smc_Par \\<alpha>\\<lparr>Cod\\<rparr> = (\\<lambda>T\\<in>\\<^sub>\\<circ>set {T. arr_Par \\<alpha> T}. T\\<lparr>ArrCod\\<rparr>)\"\n    and \"smc_Par \\<alpha>\\<lparr>Comp\\<rparr> = (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Par \\<alpha>). ST\\<lparr>0\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\"", "lemma smc_dg_smc_Par: \"smc_dg (smc_Par \\<alpha>) = dg_Par \\<alpha>\"", "lemmas_with [folded smc_dg_smc_Par, unfolded slicing_simps]: \n  smc_Par_Obj_iff = dg_Par_Obj_iff\n  and smc_Par_Arr_iff[smc_Par_cs_simps] = dg_Par_Arr_iff\n  and smc_Par_Dom_vsv[smc_Par_cs_intros] = dg_Par_Dom_vsv\n  and smc_Par_Dom_vdomain[smc_Par_cs_simps] = dg_Par_Dom_vdomain\n  and smc_Par_Dom_vrange = dg_Par_Dom_vrange\n  and smc_Par_Dom_app[smc_Par_cs_simps] = dg_Par_Dom_app\n  and smc_Par_Cod_vsv[smc_Par_cs_intros] = dg_Par_Cod_vsv\n  and smc_Par_Cod_vdomain[smc_Par_cs_simps] = dg_Par_Cod_vdomain\n  and smc_Par_Cod_vrange = dg_Par_Cod_vrange\n  and smc_Par_Cod_app[smc_Par_cs_simps] = dg_Par_Cod_app\n  and smc_Par_is_arrI = dg_Par_is_arrI\n  and smc_Par_is_arrD = dg_Par_is_arrD\n  and smc_Par_is_arrE = dg_Par_is_arrE", "lemmas [smc_cs_simps] = smc_Par_is_arrD(2,3)", "lemmas [smc_Par_cs_intros] = smc_Par_is_arrI", "lemmas_with (in \\<Z>) [folded smc_dg_smc_Par, unfolded slicing_simps]: \n  smc_Par_Hom_vifunion_in_Vset = dg_Par_Hom_vifunion_in_Vset\n  and smc_Par_incl_Par_is_arr = dg_Par_incl_Par_is_arr\n  and smc_Par_incl_Par_is_arr'[smc_Par_cs_intros] = dg_Par_incl_Par_is_arr'", "lemmas [smc_Par_cs_intros] = \\<Z>.smc_Par_incl_Par_is_arr'", "lemma smc_Par_composable_arrs_dg_Par: \n  \"composable_arrs (dg_Par \\<alpha>) = composable_arrs (smc_Par \\<alpha>)\"", "lemma smc_Par_Comp: \n  \"smc_Par \\<alpha>\\<lparr>Comp\\<rparr> = (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (smc_Par \\<alpha>). ST\\<lparr>0\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\"", "lemma smc_Par_Comp_app[smc_Par_cs_simps]:\n  assumes \"S : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C\" and \"T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\"\n  shows \"S \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T = S \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l T\"", "lemma smc_Par_Comp_vdomain: \"\\<D>\\<^sub>\\<circ> (smc_Par \\<alpha>\\<lparr>Comp\\<rparr>) = composable_arrs (smc_Par \\<alpha>)\"", "lemma (in \\<Z>) smc_Par_Comp_vrange: \"\\<R>\\<^sub>\\<circ> (smc_Par \\<alpha>\\<lparr>Comp\\<rparr>) \\<subseteq>\\<^sub>\\<circ> set {T. arr_Par \\<alpha> T}\"", "lemma (in \\<Z>) semicategory_smc_Par: \"semicategory \\<alpha> (smc_Par \\<alpha>)\"", "lemma (in \\<Z>) wide_subsemicategory_smc_Par_smc_Rel: \n  \"smc_Par \\<alpha> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> smc_Rel \\<alpha>\"", "lemma (in \\<Z>) smc_Par_is_monic_arrI[intro]:\n  assumes \"T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\" and \"v11 (T\\<lparr>ArrVal\\<rparr>)\" and \"\\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\"\n  shows \"T : A \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>smc_Par \\<alpha>\\<^esub> B\"", "lemma (in \\<Z>) smc_Par_is_monic_arrD:\n  assumes \"T : A \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>smc_Par \\<alpha>\\<^esub> B\"\n  shows \"T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\" and \"v11 (T\\<lparr>ArrVal\\<rparr>)\" and \"\\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\"", "lemma (in \\<Z>) smc_Par_is_monic_arr: \n  \"T : A \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>smc_Par \\<alpha>\\<^esub> B \\<longleftrightarrow>\n    T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B \\<and> v11 (T\\<lparr>ArrVal\\<rparr>) \\<and> \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\"", "lemma smc_Par_is_epic_arr_vsubset:\n  assumes \"T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\"\n    and \"\\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\"\n    and \"R : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C\" \n    and \"S : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C\" \n    and \"R \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T = S \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T\" \n  shows \"R\\<lparr>ArrVal\\<rparr> \\<subseteq>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\"", "lemma smc_Par_is_epic_arrI:\n  assumes \"T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\" and \"\\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\"\n  shows \"T : A \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>smc_Par \\<alpha>\\<^esub> B\"", "lemma smc_Par_is_epic_arrD:\n  assumes \"T : A \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>smc_Par \\<alpha>\\<^esub> B\"\n  shows \"T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\" and \"\\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\"", "lemma (in \\<Z>) smc_Par_is_epic_arr: \n  \"T : A \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>smc_Par \\<alpha>\\<^esub> B \\<longleftrightarrow> T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B \\<and> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\"", "lemma (in \\<Z>) smc_Par_obj_terminal: \"obj_terminal (smc_Par \\<alpha>) A \\<longleftrightarrow> A = 0\"", "lemma (in \\<Z>) smc_Par_obj_initial: \"obj_initial (smc_Par \\<alpha>) A \\<longleftrightarrow> A = 0\"", "lemma (in \\<Z>) smc_Par_obj_terminal_obj_initial:\n  \"obj_initial (smc_Par \\<alpha>) A \\<longleftrightarrow> obj_terminal (smc_Par \\<alpha>) A\"", "lemma (in \\<Z>) smc_Par_obj_null: \"obj_null (smc_Par \\<alpha>) A \\<longleftrightarrow> A = 0\"", "lemma (in \\<Z>) smc_Par_is_zero_arr: \n  assumes \"A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" and \"B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Par \\<alpha>\\<^esub> B \\<longleftrightarrow> T = [0, A, B]\\<^sub>\\<circ>\""], "translations": [["", "lemmas (in arr_Par) [smc_Par_cs_simps] = \n  dg_Rel_shared_cs_simps"], ["", "lemmas [smc_Par_cs_simps] = \n  dg_Rel_shared_cs_simps\n  arr_Par.arr_Par_length\n  arr_Par_comp_Par_id_Par_left\n  arr_Par_comp_Par_id_Par_right"], ["", "lemmas [smc_Par_cs_intros] = \n  dg_Rel_shared_cs_intros\n  arr_Par_comp_Par"], ["", "subsection\\<open>\\<open>Par\\<close> as a semicategory\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "definition smc_Par :: \"V \\<Rightarrow> V\"\n  where \"smc_Par \\<alpha> =\n    [\n      Vset \\<alpha>,\n      set {T. arr_Par \\<alpha> T},\n      (\\<lambda>T\\<in>\\<^sub>\\<circ>set {T. arr_Par \\<alpha> T}. T\\<lparr>ArrDom\\<rparr>),\n      (\\<lambda>T\\<in>\\<^sub>\\<circ>set {T. arr_Par \\<alpha> T}. T\\<lparr>ArrCod\\<rparr>),\n      (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Par \\<alpha>). ST\\<lparr>0\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\n    ]\\<^sub>\\<circ>\""], ["", "text\\<open>Components.\\<close>"], ["", "lemma smc_Par_components:\n  shows \"smc_Par \\<alpha>\\<lparr>Obj\\<rparr> = Vset \\<alpha>\"\n    and \"smc_Par \\<alpha>\\<lparr>Arr\\<rparr> = set {T. arr_Par \\<alpha> T}\"\n    and \"smc_Par \\<alpha>\\<lparr>Dom\\<rparr> = (\\<lambda>T\\<in>\\<^sub>\\<circ>set {T. arr_Par \\<alpha> T}. T\\<lparr>ArrDom\\<rparr>)\"\n    and \"smc_Par \\<alpha>\\<lparr>Cod\\<rparr> = (\\<lambda>T\\<in>\\<^sub>\\<circ>set {T. arr_Par \\<alpha> T}. T\\<lparr>ArrCod\\<rparr>)\"\n    and \"smc_Par \\<alpha>\\<lparr>Comp\\<rparr> = (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Par \\<alpha>). ST\\<lparr>0\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (smc_Par \\<alpha>\\<lparr>Obj\\<rparr> = Vset \\<alpha> &&&\n     smc_Par \\<alpha>\\<lparr>Arr\\<rparr> =\n     ZFC_in_HOL.set {T. arr_Par \\<alpha> T}) &&&\n    smc_Par \\<alpha>\\<lparr>Dom\\<rparr> =\n    (\\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {T. arr_Par \\<alpha> T}.\n        T\\<lparr>ArrDom\\<rparr>) &&&\n    smc_Par \\<alpha>\\<lparr>Cod\\<rparr> =\n    (\\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {T. arr_Par \\<alpha> T}.\n        T\\<lparr>ArrCod\\<rparr>) &&&\n    smc_Par \\<alpha>\\<lparr>Comp\\<rparr> =\n    (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Par \\<alpha>).\n        ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n        ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>)", "unfolding smc_Par_def dg_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Par \\<alpha>)),\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Par \\<alpha>)).\n         T\\<lparr>ArrDom\\<rparr>,\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Par \\<alpha>)).\n         T\\<lparr>ArrCod\\<rparr>,\n      \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Par \\<alpha>).\n         ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n         ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n     Vset \\<alpha> &&&\n     [Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Par \\<alpha>)),\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Par \\<alpha>)).\n         T\\<lparr>ArrDom\\<rparr>,\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Par \\<alpha>)).\n         T\\<lparr>ArrCod\\<rparr>,\n      \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Par \\<alpha>).\n         ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n         ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> =\n     ZFC_in_HOL.set {T. arr_Par \\<alpha> T}) &&&\n    [Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Par \\<alpha>)),\n     \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   (Collect (arr_Par \\<alpha>)).\n        T\\<lparr>ArrDom\\<rparr>,\n     \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   (Collect (arr_Par \\<alpha>)).\n        T\\<lparr>ArrCod\\<rparr>,\n     \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Par \\<alpha>).\n        ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n        ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr> =\n    (\\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {T. arr_Par \\<alpha> T}.\n        T\\<lparr>ArrDom\\<rparr>) &&&\n    [Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Par \\<alpha>)),\n     \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   (Collect (arr_Par \\<alpha>)).\n        T\\<lparr>ArrDom\\<rparr>,\n     \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   (Collect (arr_Par \\<alpha>)).\n        T\\<lparr>ArrCod\\<rparr>,\n     \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Par \\<alpha>).\n        ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n        ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr> =\n    (\\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {T. arr_Par \\<alpha> T}.\n        T\\<lparr>ArrCod\\<rparr>) &&&\n    [Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Par \\<alpha>)),\n     \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   (Collect (arr_Par \\<alpha>)).\n        T\\<lparr>ArrDom\\<rparr>,\n     \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   (Collect (arr_Par \\<alpha>)).\n        T\\<lparr>ArrCod\\<rparr>,\n     \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Par \\<alpha>).\n        ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n        ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>4\\<^sub>\\<nat>\\<rparr> =\n    (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Par \\<alpha>).\n        ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n        ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>)", "by (simp_all add: nat_omega_simps)"], ["", "text\\<open>Slicing.\\<close>"], ["", "lemma smc_dg_smc_Par: \"smc_dg (smc_Par \\<alpha>) = dg_Par \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smc_dg (smc_Par \\<alpha>) = dg_Par \\<alpha>", "proof(rule vsv_eqI)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (smc_dg (smc_Par \\<alpha>))\n 2. vsv (dg_Par \\<alpha>)\n 3. \\<D>\\<^sub>\\<circ> (smc_dg (smc_Par \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ> (dg_Par \\<alpha>)\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (smc_dg (smc_Par \\<alpha>)) \\<Longrightarrow>\n       smc_dg (smc_Par \\<alpha>)\\<lparr>a\\<rparr> =\n       dg_Par \\<alpha>\\<lparr>a\\<rparr>", "have dom_lhs: \"\\<D>\\<^sub>\\<circ> (smc_dg (smc_Par \\<alpha>)) = 4\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (smc_dg (smc_Par \\<alpha>)) = 4\\<^sub>\\<nat>", "unfolding smc_dg_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     [smc_Par \\<alpha>\\<lparr>Obj\\<rparr>,\n      smc_Par \\<alpha>\\<lparr>Arr\\<rparr>,\n      smc_Par \\<alpha>\\<lparr>Dom\\<rparr>,\n      smc_Par \\<alpha>\\<lparr>Cod\\<rparr>]\\<^sub>\\<circ> =\n    4\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (smc_dg (smc_Par \\<alpha>)) = 4\\<^sub>\\<nat>\n\ngoal (4 subgoals):\n 1. vsv (smc_dg (smc_Par \\<alpha>))\n 2. vsv (dg_Par \\<alpha>)\n 3. \\<D>\\<^sub>\\<circ> (smc_dg (smc_Par \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ> (dg_Par \\<alpha>)\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (smc_dg (smc_Par \\<alpha>)) \\<Longrightarrow>\n       smc_dg (smc_Par \\<alpha>)\\<lparr>a\\<rparr> =\n       dg_Par \\<alpha>\\<lparr>a\\<rparr>", "have dom_rhs: \"\\<D>\\<^sub>\\<circ> (dg_Par \\<alpha>) = 4\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (dg_Par \\<alpha>) = 4\\<^sub>\\<nat>", "unfolding dg_Par_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     [Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Par \\<alpha>)),\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Par \\<alpha>)).\n         T\\<lparr>ArrDom\\<rparr>,\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Par \\<alpha>)).\n         T\\<lparr>ArrCod\\<rparr>]\\<^sub>\\<circ> =\n    4\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (dg_Par \\<alpha>) = 4\\<^sub>\\<nat>\n\ngoal (4 subgoals):\n 1. vsv (smc_dg (smc_Par \\<alpha>))\n 2. vsv (dg_Par \\<alpha>)\n 3. \\<D>\\<^sub>\\<circ> (smc_dg (smc_Par \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ> (dg_Par \\<alpha>)\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (smc_dg (smc_Par \\<alpha>)) \\<Longrightarrow>\n       smc_dg (smc_Par \\<alpha>)\\<lparr>a\\<rparr> =\n       dg_Par \\<alpha>\\<lparr>a\\<rparr>", "show \"\\<D>\\<^sub>\\<circ> (smc_dg (smc_Par \\<alpha>)) = \\<D>\\<^sub>\\<circ> (dg_Par \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (smc_dg (smc_Par \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ> (dg_Par \\<alpha>)", "unfolding dom_lhs dom_rhs"], ["proof (prove)\ngoal (1 subgoal):\n 1. 4\\<^sub>\\<nat> = 4\\<^sub>\\<nat>", "by simp"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (smc_dg (smc_Par \\<alpha>)) =\n  \\<D>\\<^sub>\\<circ> (dg_Par \\<alpha>)\n\ngoal (3 subgoals):\n 1. vsv (smc_dg (smc_Par \\<alpha>))\n 2. vsv (dg_Par \\<alpha>)\n 3. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (smc_dg (smc_Par \\<alpha>)) \\<Longrightarrow>\n       smc_dg (smc_Par \\<alpha>)\\<lparr>a\\<rparr> =\n       dg_Par \\<alpha>\\<lparr>a\\<rparr>", "show \"a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (smc_dg (smc_Par \\<alpha>)) \\<Longrightarrow> smc_dg (smc_Par \\<alpha>)\\<lparr>a\\<rparr> = dg_Par \\<alpha>\\<lparr>a\\<rparr>\"\n    for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                           (smc_dg (smc_Par \\<alpha>)) \\<Longrightarrow>\n    smc_dg (smc_Par \\<alpha>)\\<lparr>a\\<rparr> =\n    dg_Par \\<alpha>\\<lparr>a\\<rparr>", "by \n      (\n        unfold dom_lhs, \n        elim_in_numeral, \n        unfold smc_dg_def dg_field_simps smc_Par_def dg_Par_def\n      )\n      (auto simp: nat_omega_simps)"], ["proof (state)\nthis:\n  ?a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                          (smc_dg (smc_Par \\<alpha>)) \\<Longrightarrow>\n  smc_dg (smc_Par \\<alpha>)\\<lparr>?a\\<rparr> =\n  dg_Par \\<alpha>\\<lparr>?a\\<rparr>\n\ngoal (2 subgoals):\n 1. vsv (smc_dg (smc_Par \\<alpha>))\n 2. vsv (dg_Par \\<alpha>)", "qed (auto simp: dg_Par_def smc_dg_def)"], ["", "lemmas_with [folded smc_dg_smc_Par, unfolded slicing_simps]: \n  smc_Par_Obj_iff = dg_Par_Obj_iff\n  and smc_Par_Arr_iff[smc_Par_cs_simps] = dg_Par_Arr_iff\n  and smc_Par_Dom_vsv[smc_Par_cs_intros] = dg_Par_Dom_vsv\n  and smc_Par_Dom_vdomain[smc_Par_cs_simps] = dg_Par_Dom_vdomain\n  and smc_Par_Dom_vrange = dg_Par_Dom_vrange\n  and smc_Par_Dom_app[smc_Par_cs_simps] = dg_Par_Dom_app\n  and smc_Par_Cod_vsv[smc_Par_cs_intros] = dg_Par_Cod_vsv\n  and smc_Par_Cod_vdomain[smc_Par_cs_simps] = dg_Par_Cod_vdomain\n  and smc_Par_Cod_vrange = dg_Par_Cod_vrange\n  and smc_Par_Cod_app[smc_Par_cs_simps] = dg_Par_Cod_app\n  and smc_Par_is_arrI = dg_Par_is_arrI\n  and smc_Par_is_arrD = dg_Par_is_arrD\n  and smc_Par_is_arrE = dg_Par_is_arrE"], ["", "lemmas [smc_cs_simps] = smc_Par_is_arrD(2,3)"], ["", "lemmas [smc_Par_cs_intros] = smc_Par_is_arrI"], ["", "lemmas_with (in \\<Z>) [folded smc_dg_smc_Par, unfolded slicing_simps]: \n  smc_Par_Hom_vifunion_in_Vset = dg_Par_Hom_vifunion_in_Vset\n  and smc_Par_incl_Par_is_arr = dg_Par_incl_Par_is_arr\n  and smc_Par_incl_Par_is_arr'[smc_Par_cs_intros] = dg_Par_incl_Par_is_arr'"], ["", "lemmas [smc_Par_cs_intros] = \\<Z>.smc_Par_incl_Par_is_arr'"], ["", "subsubsection\\<open>Composable arrows\\<close>"], ["", "lemma smc_Par_composable_arrs_dg_Par: \n  \"composable_arrs (dg_Par \\<alpha>) = composable_arrs (smc_Par \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. composable_arrs (dg_Par \\<alpha>) = composable_arrs (smc_Par \\<alpha>)", "unfolding composable_arrs_def smc_dg_smc_Par[symmetric] slicing_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set\n     {[g, f]\\<^sub>\\<circ> |g f.\n      \\<exists>a b c.\n         g : b \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> c \\<and>\n         f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> b} =\n    ZFC_in_HOL.set\n     {[g, f]\\<^sub>\\<circ> |g f.\n      \\<exists>a b c.\n         g : b \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> c \\<and>\n         f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> b}", "by simp"], ["", "lemma smc_Par_Comp: \n  \"smc_Par \\<alpha>\\<lparr>Comp\\<rparr> = (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (smc_Par \\<alpha>). ST\\<lparr>0\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smc_Par \\<alpha>\\<lparr>Comp\\<rparr> =\n    (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (smc_Par \\<alpha>).\n        ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n        ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>)", "unfolding smc_Par_components smc_Par_composable_arrs_dg_Par"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (smc_Par \\<alpha>).\n        ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n        ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>) =\n    (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (smc_Par \\<alpha>).\n        ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n        ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>)", ".."], ["", "subsubsection\\<open>Composition\\<close>"], ["", "lemma smc_Par_Comp_app[smc_Par_cs_simps]:\n  assumes \"S : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C\" and \"T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\"\n  shows \"S \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T = S \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T =\n    S \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l T", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. S \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T =\n    S \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l T", "from assms"], ["proof (chain)\npicking this:\n  S : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C\n  T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "have \"[S, T]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> composable_arrs (smc_Par \\<alpha>)\""], ["proof (prove)\nusing this:\n  S : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C\n  T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. [S, T]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> composable_arrs (smc_Par \\<alpha>)", "by (auto simp: smc_cs_intros)"], ["proof (state)\nthis:\n  [S, T]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> composable_arrs (smc_Par \\<alpha>)\n\ngoal (1 subgoal):\n 1. S \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T =\n    S \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l T", "then"], ["proof (chain)\npicking this:\n  [S, T]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> composable_arrs (smc_Par \\<alpha>)", "show \"S \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T = S \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l T\""], ["proof (prove)\nusing this:\n  [S, T]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> composable_arrs (smc_Par \\<alpha>)\n\ngoal (1 subgoal):\n 1. S \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T =\n    S \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l T", "unfolding smc_Par_Comp"], ["proof (prove)\nusing this:\n  [S, T]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> composable_arrs (smc_Par \\<alpha>)\n\ngoal (1 subgoal):\n 1. (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (smc_Par \\<alpha>).\n        ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n        ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>) \\<lparr>S,\n            T\\<rparr>\\<^sub>\\<bullet> =\n    S \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l T", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  S \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T =\n  S \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l T\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smc_Par_Comp_vdomain: \"\\<D>\\<^sub>\\<circ> (smc_Par \\<alpha>\\<lparr>Comp\\<rparr>) = composable_arrs (smc_Par \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (smc_Par \\<alpha>\\<lparr>Comp\\<rparr>) =\n    composable_arrs (smc_Par \\<alpha>)", "unfolding smc_Par_Comp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (smc_Par \\<alpha>).\n         ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n         ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>) =\n    composable_arrs (smc_Par \\<alpha>)", "by simp"], ["", "lemma (in \\<Z>) smc_Par_Comp_vrange: \"\\<R>\\<^sub>\\<circ> (smc_Par \\<alpha>\\<lparr>Comp\\<rparr>) \\<subseteq>\\<^sub>\\<circ> set {T. arr_Par \\<alpha> T}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (smc_Par \\<alpha>\\<lparr>Comp\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {T. arr_Par \\<alpha> T}", "proof(rule vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (smc_Par\n                                \\<alpha>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {T. arr_Par \\<alpha> T}", "interpret digraph \\<alpha> \\<open>smc_dg (smc_Par \\<alpha>)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. digraph \\<alpha> (smc_dg (smc_Par \\<alpha>))", "unfolding smc_dg_smc_Par"], ["proof (prove)\ngoal (1 subgoal):\n 1. digraph \\<alpha> (dg_Par \\<alpha>)", "by (simp add: digraph_dg_Par)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (smc_Par\n                                \\<alpha>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {T. arr_Par \\<alpha> T}", "fix R"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (smc_Par\n                                \\<alpha>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {T. arr_Par \\<alpha> T}", "assume \"R \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (smc_Par \\<alpha>\\<lparr>Comp\\<rparr>)\""], ["proof (state)\nthis:\n  R \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                         (smc_Par \\<alpha>\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (smc_Par\n                                \\<alpha>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {T. arr_Par \\<alpha> T}", "then"], ["proof (chain)\npicking this:\n  R \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                         (smc_Par \\<alpha>\\<lparr>Comp\\<rparr>)", "obtain ST \n    where R_def: \"R = smc_Par \\<alpha>\\<lparr>Comp\\<rparr>\\<lparr>ST\\<rparr>\"\n      and \"ST \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (smc_Par \\<alpha>\\<lparr>Comp\\<rparr>)\""], ["proof (prove)\nusing this:\n  R \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                         (smc_Par \\<alpha>\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. (\\<And>ST.\n        \\<lbrakk>R = smc_Par \\<alpha>\\<lparr>Comp\\<rparr>\\<lparr>ST\\<rparr>;\n         ST \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                 (smc_Par\n                                   \\<alpha>\\<lparr>Comp\\<rparr>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding smc_Par_components"], ["proof (prove)\nusing this:\n  R \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                         (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs\n                   (dg_Par \\<alpha>).\n                             ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n                             ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\n\ngoal (1 subgoal):\n 1. (\\<And>ST.\n        \\<lbrakk>R =\n                 (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs\n           (dg_Par \\<alpha>).\n                     ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n                     ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\\<lparr>ST\\<rparr>;\n         ST \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                 (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs\n                           (dg_Par \\<alpha>).\n                                     ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n                                     ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (blast dest: rel_VLambda.vrange_atD)"], ["proof (state)\nthis:\n  R = smc_Par \\<alpha>\\<lparr>Comp\\<rparr>\\<lparr>ST\\<rparr>\n  ST \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                          (smc_Par \\<alpha>\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (smc_Par\n                                \\<alpha>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {T. arr_Par \\<alpha> T}", "then"], ["proof (chain)\npicking this:\n  R = smc_Par \\<alpha>\\<lparr>Comp\\<rparr>\\<lparr>ST\\<rparr>\n  ST \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                          (smc_Par \\<alpha>\\<lparr>Comp\\<rparr>)", "obtain S T A B C \n    where \"ST = [S, T]\\<^sub>\\<circ>\" \n      and S: \"S : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C\" \n      and T: \"T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\""], ["proof (prove)\nusing this:\n  R = smc_Par \\<alpha>\\<lparr>Comp\\<rparr>\\<lparr>ST\\<rparr>\n  ST \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                          (smc_Par \\<alpha>\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. (\\<And>S T B C A.\n        \\<lbrakk>ST = [S, T]\\<^sub>\\<circ>;\n         S : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C;\n         T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: smc_Par_Comp_vdomain)"], ["proof (state)\nthis:\n  ST = [S, T]\\<^sub>\\<circ>\n  S : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C\n  T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (smc_Par\n                                \\<alpha>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {T. arr_Par \\<alpha> T}", "with R_def"], ["proof (chain)\npicking this:\n  R = smc_Par \\<alpha>\\<lparr>Comp\\<rparr>\\<lparr>ST\\<rparr>\n  ST = [S, T]\\<^sub>\\<circ>\n  S : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C\n  T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "have R_def': \"R = S \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T\""], ["proof (prove)\nusing this:\n  R = smc_Par \\<alpha>\\<lparr>Comp\\<rparr>\\<lparr>ST\\<rparr>\n  ST = [S, T]\\<^sub>\\<circ>\n  S : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C\n  T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. R = S \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T", "by simp"], ["proof (state)\nthis:\n  R = S \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (smc_Par\n                                \\<alpha>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {T. arr_Par \\<alpha> T}", "note S_D = dg_is_arrD(1)[unfolded slicing_simps, OF S]\n    and T_D = dg_is_arrD(1)[unfolded slicing_simps, OF T]"], ["proof (state)\nthis:\n  S \\<in>\\<^sub>\\<circ> smc_Par \\<alpha>\\<lparr>Arr\\<rparr>\n  T \\<in>\\<^sub>\\<circ> smc_Par \\<alpha>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (smc_Par\n                                \\<alpha>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {T. arr_Par \\<alpha> T}", "from S_D T_D"], ["proof (chain)\npicking this:\n  S \\<in>\\<^sub>\\<circ> smc_Par \\<alpha>\\<lparr>Arr\\<rparr>\n  T \\<in>\\<^sub>\\<circ> smc_Par \\<alpha>\\<lparr>Arr\\<rparr>", "have \"arr_Par \\<alpha> S\" \"arr_Par \\<alpha> T\""], ["proof (prove)\nusing this:\n  S \\<in>\\<^sub>\\<circ> smc_Par \\<alpha>\\<lparr>Arr\\<rparr>\n  T \\<in>\\<^sub>\\<circ> smc_Par \\<alpha>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. arr_Par \\<alpha> S &&& arr_Par \\<alpha> T", "by (simp_all add: smc_Par_components)"], ["proof (state)\nthis:\n  arr_Par \\<alpha> S\n  arr_Par \\<alpha> T\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (smc_Par\n                                \\<alpha>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {T. arr_Par \\<alpha> T}", "from this"], ["proof (chain)\npicking this:\n  arr_Par \\<alpha> S\n  arr_Par \\<alpha> T", "show \"R \\<in>\\<^sub>\\<circ> set {T. arr_Par \\<alpha> T}\""], ["proof (prove)\nusing this:\n  arr_Par \\<alpha> S\n  arr_Par \\<alpha> T\n\ngoal (1 subgoal):\n 1. R \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {T. arr_Par \\<alpha> T}", "unfolding R_def' smc_Par_Comp_app[OF S T]"], ["proof (prove)\nusing this:\n  arr_Par \\<alpha> S\n  arr_Par \\<alpha> T\n\ngoal (1 subgoal):\n 1. S \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l T\n    \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {T. arr_Par \\<alpha> T}", "by (auto simp: arr_Par_comp_Par)"], ["proof (state)\nthis:\n  R \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {T. arr_Par \\<alpha> T}\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>\\<open>Par\\<close> is a semicategory\\<close>"], ["", "lemma (in \\<Z>) semicategory_smc_Par: \"semicategory \\<alpha> (smc_Par \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (smc_Par \\<alpha>)", "proof(intro semicategoryI, unfold smc_dg_smc_Par)"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (smc_Par \\<alpha>)\n 3. vsv (smc_Par \\<alpha>\\<lparr>Comp\\<rparr>)\n 4. vcard (smc_Par \\<alpha>) = 5\\<^sub>\\<nat>\n 5. digraph \\<alpha> (dg_Par \\<alpha>)\n 6. \\<And>gf.\n       (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (smc_Par \\<alpha>\\<lparr>Comp\\<rparr>)) =\n       (\\<exists>g f b c a.\n           gf = [g, f]\\<^sub>\\<circ> \\<and>\n           g : b \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> c \\<and>\n           f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> b)\n 7. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n                         f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> c\n 8. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n                          f)", "show \"vfsequence (smc_Par \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (smc_Par \\<alpha>)", "unfolding smc_Par_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence\n     [Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Par \\<alpha>)),\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Par \\<alpha>)).\n         T\\<lparr>ArrDom\\<rparr>,\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Par \\<alpha>)).\n         T\\<lparr>ArrCod\\<rparr>,\n      \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Par \\<alpha>).\n         ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n         ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  vfsequence (smc_Par \\<alpha>)\n\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (smc_Par \\<alpha>\\<lparr>Comp\\<rparr>)\n 3. vcard (smc_Par \\<alpha>) = 5\\<^sub>\\<nat>\n 4. digraph \\<alpha> (dg_Par \\<alpha>)\n 5. \\<And>gf.\n       (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (smc_Par \\<alpha>\\<lparr>Comp\\<rparr>)) =\n       (\\<exists>g f b c a.\n           gf = [g, f]\\<^sub>\\<circ> \\<and>\n           g : b \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> c \\<and>\n           f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> b)\n 6. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n                         f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> c\n 7. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n                          f)", "show \"vcard (smc_Par \\<alpha>) = 5\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (smc_Par \\<alpha>) = 5\\<^sub>\\<nat>", "unfolding smc_Par_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard\n     [Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Par \\<alpha>)),\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Par \\<alpha>)).\n         T\\<lparr>ArrDom\\<rparr>,\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Par \\<alpha>)).\n         T\\<lparr>ArrCod\\<rparr>,\n      \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Par \\<alpha>).\n         ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n         ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ> =\n    5\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  vcard (smc_Par \\<alpha>) = 5\\<^sub>\\<nat>\n\ngoal (6 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (smc_Par \\<alpha>\\<lparr>Comp\\<rparr>)\n 3. digraph \\<alpha> (dg_Par \\<alpha>)\n 4. \\<And>gf.\n       (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (smc_Par \\<alpha>\\<lparr>Comp\\<rparr>)) =\n       (\\<exists>g f b c a.\n           gf = [g, f]\\<^sub>\\<circ> \\<and>\n           g : b \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> c \\<and>\n           f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> b)\n 5. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n                         f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> c\n 6. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n                          f)", "show \"(GF \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (smc_Par \\<alpha>\\<lparr>Comp\\<rparr>)) \\<longleftrightarrow>\n    (\\<exists>G F B C A. GF = [G, F]\\<^sub>\\<circ> \\<and> G : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C \\<and> F : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B)\"\n    for GF"], ["proof (prove)\ngoal (1 subgoal):\n 1. (GF \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                             (smc_Par \\<alpha>\\<lparr>Comp\\<rparr>)) =\n    (\\<exists>G F B C A.\n        GF = [G, F]\\<^sub>\\<circ> \\<and>\n        G : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C \\<and>\n        F : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B)", "unfolding smc_Par_Comp_vdomain"], ["proof (prove)\ngoal (1 subgoal):\n 1. (GF \\<in>\\<^sub>\\<circ> composable_arrs (smc_Par \\<alpha>)) =\n    (\\<exists>G F B C A.\n        GF = [G, F]\\<^sub>\\<circ> \\<and>\n        G : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C \\<and>\n        F : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B)", "by (auto intro: composable_arrsI)"], ["proof (state)\nthis:\n  (?GF\n   \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                        (smc_Par \\<alpha>\\<lparr>Comp\\<rparr>)) =\n  (\\<exists>G F B C A.\n      ?GF = [G, F]\\<^sub>\\<circ> \\<and>\n      G : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C \\<and>\n      F : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B)\n\ngoal (5 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (smc_Par \\<alpha>\\<lparr>Comp\\<rparr>)\n 3. digraph \\<alpha> (dg_Par \\<alpha>)\n 4. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n                         f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> c\n 5. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n                          f)", "show [intro]: \"G \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> F : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C\"\n    if \"G : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C\" and \"F : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\" for G B C F A"], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n    F : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. G \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n    F : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C", "from that"], ["proof (chain)\npicking this:\n  G : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C\n  F : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "have \"arr_Par \\<alpha> G\" \"arr_Par \\<alpha> F\""], ["proof (prove)\nusing this:\n  G : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C\n  F : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. arr_Par \\<alpha> G &&& arr_Par \\<alpha> F", "by (auto elim: smc_Par_is_arrE)"], ["proof (state)\nthis:\n  arr_Par \\<alpha> G\n  arr_Par \\<alpha> F\n\ngoal (1 subgoal):\n 1. G \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n    F : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C", "with that"], ["proof (chain)\npicking this:\n  G : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C\n  F : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n  arr_Par \\<alpha> G\n  arr_Par \\<alpha> F", "show ?thesis"], ["proof (prove)\nusing this:\n  G : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C\n  F : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n  arr_Par \\<alpha> G\n  arr_Par \\<alpha> F\n\ngoal (1 subgoal):\n 1. G \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n    F : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C", "by \n        (\n          cs_concl \n            cs_simp: smc_cs_simps smc_Par_cs_simps \n            cs_intro: smc_Par_cs_intros\n        )"], ["proof (state)\nthis:\n  G \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n  F : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?G : ?B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> ?C;\n   ?F : ?A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> ?B\\<rbrakk>\n  \\<Longrightarrow> ?G \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n                    ?F : ?A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> ?C\n\ngoal (4 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (smc_Par \\<alpha>\\<lparr>Comp\\<rparr>)\n 3. digraph \\<alpha> (dg_Par \\<alpha>)\n 4. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n                          f)", "show \"H \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> G \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> F = H \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> (G \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> F)\"\n    if \"H : C \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> D\" \n      and \"G : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C\"\n      and \"F : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\"\n    for H C D G B F A"], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n    G \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n    F =\n    H \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n    (G \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> F)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. H \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n    G \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n    F =\n    H \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n    (G \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> F)", "from that"], ["proof (chain)\npicking this:\n  H : C \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> D\n  G : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C\n  F : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "have \"arr_Par \\<alpha> H\" \"arr_Par \\<alpha> G\" \"arr_Par \\<alpha> F\""], ["proof (prove)\nusing this:\n  H : C \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> D\n  G : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C\n  F : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. arr_Par \\<alpha> H &&& arr_Par \\<alpha> G &&& arr_Par \\<alpha> F", "by (auto simp: smc_Par_is_arrD)"], ["proof (state)\nthis:\n  arr_Par \\<alpha> H\n  arr_Par \\<alpha> G\n  arr_Par \\<alpha> F\n\ngoal (1 subgoal):\n 1. H \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n    G \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n    F =\n    H \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n    (G \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> F)", "with that"], ["proof (chain)\npicking this:\n  H : C \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> D\n  G : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C\n  F : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n  arr_Par \\<alpha> H\n  arr_Par \\<alpha> G\n  arr_Par \\<alpha> F", "show ?thesis"], ["proof (prove)\nusing this:\n  H : C \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> D\n  G : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C\n  F : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n  arr_Par \\<alpha> H\n  arr_Par \\<alpha> G\n  arr_Par \\<alpha> F\n\ngoal (1 subgoal):\n 1. H \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n    G \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n    F =\n    H \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n    (G \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> F)", "by \n        (\n          cs_concl \n            cs_simp: smc_cs_simps smc_Par_cs_simps \n            cs_intro: smc_Par_cs_intros\n        )"], ["proof (state)\nthis:\n  H \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n  G \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n  F =\n  H \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n  (G \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> F)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?H : ?C \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> ?D;\n   ?G : ?B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> ?C;\n   ?F : ?A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> ?B\\<rbrakk>\n  \\<Longrightarrow> ?H \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n                    ?G \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n                    ?F =\n                    ?H \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n                    (?G \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> ?F)\n\ngoal (3 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (smc_Par \\<alpha>\\<lparr>Comp\\<rparr>)\n 3. digraph \\<alpha> (dg_Par \\<alpha>)", "qed (auto simp: digraph_dg_Par smc_Par_components)"], ["", "subsubsection\\<open>\\<open>Par\\<close> is a wide subsemicategory of \\<open>Rel\\<close>\\<close>"], ["", "lemma (in \\<Z>) wide_subsemicategory_smc_Par_smc_Rel: \n  \"smc_Par \\<alpha> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> smc_Rel \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smc_Par \\<alpha>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> smc_Rel\n                             \\<alpha>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. smc_Par \\<alpha>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> smc_Rel\n                             \\<alpha>", "interpret Rel: semicategory \\<alpha> \\<open>smc_Rel \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (smc_Rel \\<alpha>)", "by (rule semicategory_smc_Rel)"], ["proof (state)\ngoal (1 subgoal):\n 1. smc_Par \\<alpha>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> smc_Rel\n                             \\<alpha>", "interpret Par: semicategory \\<alpha> \\<open>smc_Par \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (smc_Par \\<alpha>)", "by (rule semicategory_smc_Par)"], ["proof (state)\ngoal (1 subgoal):\n 1. smc_Par \\<alpha>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> smc_Rel\n                             \\<alpha>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. smc_Par \\<alpha>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> smc_Rel\n                             \\<alpha>", "proof\n    (\n      intro wide_subsemicategoryI subsemicategoryI,\n      unfold smc_dg_smc_Par smc_dg_smc_Rel\n    )"], ["proof (state)\ngoal (5 subgoals):\n 1. semicategory \\<alpha> (smc_Par \\<alpha>)\n 2. semicategory \\<alpha> (smc_Rel \\<alpha>)\n 3. dg_Par \\<alpha>\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> dg_Rel \\<alpha>\n 4. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n                         f =\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_Rel \\<alpha>\\<^esub> f\n 5. dg_Par \\<alpha>\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> dg_Rel\n                     \\<alpha>", "from wide_subdigraph_dg_Par_dg_Rel"], ["proof (chain)\npicking this:\n  dg_Par \\<alpha>\n  \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> dg_Rel\n                   \\<alpha>", "show wsd:\n      \"dg_Par \\<alpha> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> dg_Rel \\<alpha>\" \"dg_Par \\<alpha> \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> dg_Rel \\<alpha>\""], ["proof (prove)\nusing this:\n  dg_Par \\<alpha>\n  \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> dg_Rel\n                   \\<alpha>\n\ngoal (1 subgoal):\n 1. dg_Par \\<alpha>\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> dg_Rel \\<alpha> &&&\n    dg_Par \\<alpha>\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> dg_Rel\n                     \\<alpha>", "by auto"], ["proof (state)\nthis:\n  dg_Par \\<alpha>\n  \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> dg_Rel \\<alpha>\n  dg_Par \\<alpha>\n  \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> dg_Rel\n                   \\<alpha>\n\ngoal (3 subgoals):\n 1. semicategory \\<alpha> (smc_Par \\<alpha>)\n 2. semicategory \\<alpha> (smc_Rel \\<alpha>)\n 3. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n                         f =\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_Rel \\<alpha>\\<^esub> f", "interpret wide_subdigraph \\<alpha> \\<open>dg_Par \\<alpha>\\<close> \\<open>dg_Rel \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. dg_Par \\<alpha>\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> dg_Rel\n                     \\<alpha>", "by (rule wsd(2))"], ["proof (state)\ngoal (3 subgoals):\n 1. semicategory \\<alpha> (smc_Par \\<alpha>)\n 2. semicategory \\<alpha> (smc_Rel \\<alpha>)\n 3. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n                         f =\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_Rel \\<alpha>\\<^esub> f", "show \"G \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> F = G \\<circ>\\<^sub>A\\<^bsub>smc_Rel \\<alpha>\\<^esub> F\"\n      if \"G : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C\" and \"F : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\" for G B C F A"], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> F =\n    G \\<circ>\\<^sub>A\\<^bsub>smc_Rel \\<alpha>\\<^esub> F", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. G \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> F =\n    G \\<circ>\\<^sub>A\\<^bsub>smc_Rel \\<alpha>\\<^esub> F", "from that"], ["proof (chain)\npicking this:\n  G : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C\n  F : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "have \"G : B \\<mapsto>\\<^bsub>dg_Par \\<alpha>\\<^esub> C\" and \"F : A \\<mapsto>\\<^bsub>dg_Par \\<alpha>\\<^esub> B\""], ["proof (prove)\nusing this:\n  G : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C\n  F : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. G : B \\<mapsto>\\<^bsub>dg_Par \\<alpha>\\<^esub> C &&&\n    F : A \\<mapsto>\\<^bsub>dg_Par \\<alpha>\\<^esub> B", "by (cs_concl cs_simp: smc_dg_smc_Par[symmetric] cs_intro: slicing_intros)+"], ["proof (state)\nthis:\n  G : B \\<mapsto>\\<^bsub>dg_Par \\<alpha>\\<^esub> C\n  F : A \\<mapsto>\\<^bsub>dg_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. G \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> F =\n    G \\<circ>\\<^sub>A\\<^bsub>smc_Rel \\<alpha>\\<^esub> F", "then"], ["proof (chain)\npicking this:\n  G : B \\<mapsto>\\<^bsub>dg_Par \\<alpha>\\<^esub> C\n  F : A \\<mapsto>\\<^bsub>dg_Par \\<alpha>\\<^esub> B", "have \"G : B \\<mapsto>\\<^bsub>dg_Rel \\<alpha>\\<^esub> C\" and \"F : A \\<mapsto>\\<^bsub>dg_Rel \\<alpha>\\<^esub> B\""], ["proof (prove)\nusing this:\n  G : B \\<mapsto>\\<^bsub>dg_Par \\<alpha>\\<^esub> C\n  F : A \\<mapsto>\\<^bsub>dg_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. G : B \\<mapsto>\\<^bsub>dg_Rel \\<alpha>\\<^esub> C &&&\n    F : A \\<mapsto>\\<^bsub>dg_Rel \\<alpha>\\<^esub> B", "by (cs_concl cs_intro: dg_sub_fw_cs_intros)+"], ["proof (state)\nthis:\n  G : B \\<mapsto>\\<^bsub>dg_Rel \\<alpha>\\<^esub> C\n  F : A \\<mapsto>\\<^bsub>dg_Rel \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. G \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> F =\n    G \\<circ>\\<^sub>A\\<^bsub>smc_Rel \\<alpha>\\<^esub> F", "then"], ["proof (chain)\npicking this:\n  G : B \\<mapsto>\\<^bsub>dg_Rel \\<alpha>\\<^esub> C\n  F : A \\<mapsto>\\<^bsub>dg_Rel \\<alpha>\\<^esub> B", "have \"G : B \\<mapsto>\\<^bsub>smc_Rel \\<alpha>\\<^esub> C\" and \"F : A \\<mapsto>\\<^bsub>smc_Rel \\<alpha>\\<^esub> B\""], ["proof (prove)\nusing this:\n  G : B \\<mapsto>\\<^bsub>dg_Rel \\<alpha>\\<^esub> C\n  F : A \\<mapsto>\\<^bsub>dg_Rel \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. G : B \\<mapsto>\\<^bsub>smc_Rel \\<alpha>\\<^esub> C &&&\n    F : A \\<mapsto>\\<^bsub>smc_Rel \\<alpha>\\<^esub> B", "unfolding smc_dg_smc_Rel[symmetric] slicing_simps"], ["proof (prove)\nusing this:\n  G : B \\<mapsto>\\<^bsub>smc_Rel \\<alpha>\\<^esub> C\n  F : A \\<mapsto>\\<^bsub>smc_Rel \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. G : B \\<mapsto>\\<^bsub>smc_Rel \\<alpha>\\<^esub> C &&&\n    F : A \\<mapsto>\\<^bsub>smc_Rel \\<alpha>\\<^esub> B", "by simp_all"], ["proof (state)\nthis:\n  G : B \\<mapsto>\\<^bsub>smc_Rel \\<alpha>\\<^esub> C\n  F : A \\<mapsto>\\<^bsub>smc_Rel \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. G \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> F =\n    G \\<circ>\\<^sub>A\\<^bsub>smc_Rel \\<alpha>\\<^esub> F", "from that this"], ["proof (chain)\npicking this:\n  G : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C\n  F : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n  G : B \\<mapsto>\\<^bsub>smc_Rel \\<alpha>\\<^esub> C\n  F : A \\<mapsto>\\<^bsub>smc_Rel \\<alpha>\\<^esub> B", "show \"G \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> F = G \\<circ>\\<^sub>A\\<^bsub>smc_Rel \\<alpha>\\<^esub> F\""], ["proof (prove)\nusing this:\n  G : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C\n  F : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n  G : B \\<mapsto>\\<^bsub>smc_Rel \\<alpha>\\<^esub> C\n  F : A \\<mapsto>\\<^bsub>smc_Rel \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. G \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> F =\n    G \\<circ>\\<^sub>A\\<^bsub>smc_Rel \\<alpha>\\<^esub> F", "by (cs_concl cs_simp: smc_Par_cs_simps smc_Rel_cs_simps)"], ["proof (state)\nthis:\n  G \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> F =\n  G \\<circ>\\<^sub>A\\<^bsub>smc_Rel \\<alpha>\\<^esub> F\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?G : ?B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> ?C;\n   ?F : ?A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> ?B\\<rbrakk>\n  \\<Longrightarrow> ?G \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> ?F =\n                    ?G \\<circ>\\<^sub>A\\<^bsub>smc_Rel \\<alpha>\\<^esub> ?F\n\ngoal (2 subgoals):\n 1. semicategory \\<alpha> (smc_Par \\<alpha>)\n 2. semicategory \\<alpha> (smc_Rel \\<alpha>)", "qed (auto simp: smc_cs_intros)"], ["proof (state)\nthis:\n  smc_Par \\<alpha>\n  \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> smc_Rel\n                           \\<alpha>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Monic arrow and epic arrow\\<close>"], ["", "lemma (in \\<Z>) smc_Par_is_monic_arrI[intro]:\n  assumes \"T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\" and \"v11 (T\\<lparr>ArrVal\\<rparr>)\" and \"\\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\"\n  shows \"T : A \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>smc_Par \\<alpha>\\<^esub> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "proof(intro is_monic_arrI)"], ["proof (state)\ngoal (2 subgoals):\n 1. T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n 2. \\<And>f g a.\n       \\<lbrakk>f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A;\n        g : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A;\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> f =\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> f = g", "interpret Par_Rel: wide_subsemicategory \\<alpha> \\<open>smc_Par \\<alpha>\\<close> \\<open>smc_Rel \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. smc_Par \\<alpha>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> smc_Rel\n                             \\<alpha>", "by (rule wide_subsemicategory_smc_Par_smc_Rel)"], ["proof (state)\ngoal (2 subgoals):\n 1. T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n 2. \\<And>f g a.\n       \\<lbrakk>f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A;\n        g : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A;\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> f =\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> f = g", "interpret v11: v11 \\<open>T\\<lparr>ArrVal\\<rparr>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. v11 (T\\<lparr>ArrVal\\<rparr>)", "by (rule assms(2))"], ["proof (state)\ngoal (2 subgoals):\n 1. T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n 2. \\<And>f g a.\n       \\<lbrakk>f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A;\n        g : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A;\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> f =\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> f = g", "show T: \"T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "by (rule assms(1))"], ["proof (state)\nthis:\n  T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. \\<And>f g a.\n       \\<lbrakk>f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A;\n        g : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A;\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> f =\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> f = g", "fix S R A'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f g a.\n       \\<lbrakk>f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A;\n        g : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A;\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> f =\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> f = g", "assume S: \"S : A' \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\" \n    and R: \"R : A' \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\"\n    and TS_TR: \"T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> S = T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> R\""], ["proof (state)\nthis:\n  S : A' \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\n  R : A' \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> S =\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> R\n\ngoal (1 subgoal):\n 1. \\<And>f g a.\n       \\<lbrakk>f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A;\n        g : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A;\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> f =\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> f = g", "from assms(3) T Par_Rel.subsemicategory_axioms"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n  T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n  smc_Par \\<alpha>\n  \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_Rel\n                         \\<alpha>", "have \"T : A \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>smc_Rel \\<alpha>\\<^esub> B\""], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n  T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n  smc_Par \\<alpha>\n  \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_Rel\n                         \\<alpha>\n\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>smc_Rel \\<alpha>\\<^esub> B", "by (intro smc_Rel_is_monic_arrI)\n      (auto dest: v11.v11_vimage_vpsubset_neq elim!: smc_sub_fw_cs_intros)"], ["proof (state)\nthis:\n  T : A \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>smc_Rel \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. \\<And>f g a.\n       \\<lbrakk>f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A;\n        g : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A;\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> f =\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> f = g", "moreover"], ["proof (state)\nthis:\n  T : A \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>smc_Rel \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. \\<And>f g a.\n       \\<lbrakk>f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A;\n        g : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A;\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> f =\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> f = g", "from S Par_Rel.subsemicategory_axioms"], ["proof (chain)\npicking this:\n  S : A' \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\n  smc_Par \\<alpha>\n  \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_Rel\n                         \\<alpha>", "have \"S : A' \\<mapsto>\\<^bsub>smc_Rel \\<alpha>\\<^esub> A\""], ["proof (prove)\nusing this:\n  S : A' \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\n  smc_Par \\<alpha>\n  \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_Rel\n                         \\<alpha>\n\ngoal (1 subgoal):\n 1. S : A' \\<mapsto>\\<^bsub>smc_Rel \\<alpha>\\<^esub> A", "by (cs_concl cs_intro: smc_sub_fw_cs_intros)"], ["proof (state)\nthis:\n  S : A' \\<mapsto>\\<^bsub>smc_Rel \\<alpha>\\<^esub> A\n\ngoal (1 subgoal):\n 1. \\<And>f g a.\n       \\<lbrakk>f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A;\n        g : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A;\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> f =\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> f = g", "moreover"], ["proof (state)\nthis:\n  S : A' \\<mapsto>\\<^bsub>smc_Rel \\<alpha>\\<^esub> A\n\ngoal (1 subgoal):\n 1. \\<And>f g a.\n       \\<lbrakk>f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A;\n        g : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A;\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> f =\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> f = g", "from R Par_Rel.subsemicategory_axioms"], ["proof (chain)\npicking this:\n  R : A' \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\n  smc_Par \\<alpha>\n  \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_Rel\n                         \\<alpha>", "have \"R : A' \\<mapsto>\\<^bsub>smc_Rel \\<alpha>\\<^esub> A\""], ["proof (prove)\nusing this:\n  R : A' \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\n  smc_Par \\<alpha>\n  \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_Rel\n                         \\<alpha>\n\ngoal (1 subgoal):\n 1. R : A' \\<mapsto>\\<^bsub>smc_Rel \\<alpha>\\<^esub> A", "by (cs_concl cs_intro: smc_sub_fw_cs_intros)"], ["proof (state)\nthis:\n  R : A' \\<mapsto>\\<^bsub>smc_Rel \\<alpha>\\<^esub> A\n\ngoal (1 subgoal):\n 1. \\<And>f g a.\n       \\<lbrakk>f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A;\n        g : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A;\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> f =\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> f = g", "moreover"], ["proof (state)\nthis:\n  R : A' \\<mapsto>\\<^bsub>smc_Rel \\<alpha>\\<^esub> A\n\ngoal (1 subgoal):\n 1. \\<And>f g a.\n       \\<lbrakk>f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A;\n        g : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A;\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> f =\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> f = g", "from T S R TS_TR Par_Rel.subsemicategory_axioms"], ["proof (chain)\npicking this:\n  T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n  S : A' \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\n  R : A' \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> S =\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> R\n  smc_Par \\<alpha>\n  \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_Rel\n                         \\<alpha>", "have \n    \"T \\<circ>\\<^sub>A\\<^bsub>smc_Rel \\<alpha>\\<^esub> S = T \\<circ>\\<^sub>A\\<^bsub>smc_Rel \\<alpha>\\<^esub> R\""], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n  S : A' \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\n  R : A' \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> S =\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> R\n  smc_Par \\<alpha>\n  \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_Rel\n                         \\<alpha>\n\ngoal (1 subgoal):\n 1. T \\<circ>\\<^sub>A\\<^bsub>smc_Rel \\<alpha>\\<^esub> S =\n    T \\<circ>\\<^sub>A\\<^bsub>smc_Rel \\<alpha>\\<^esub> R", "by (auto simp: smc_sub_bw_cs_simps)"], ["proof (state)\nthis:\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Rel \\<alpha>\\<^esub> S =\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Rel \\<alpha>\\<^esub> R\n\ngoal (1 subgoal):\n 1. \\<And>f g a.\n       \\<lbrakk>f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A;\n        g : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A;\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> f =\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> f = g", "ultimately"], ["proof (chain)\npicking this:\n  T : A \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>smc_Rel \\<alpha>\\<^esub> B\n  S : A' \\<mapsto>\\<^bsub>smc_Rel \\<alpha>\\<^esub> A\n  R : A' \\<mapsto>\\<^bsub>smc_Rel \\<alpha>\\<^esub> A\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Rel \\<alpha>\\<^esub> S =\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Rel \\<alpha>\\<^esub> R", "show \"S = R\""], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>smc_Rel \\<alpha>\\<^esub> B\n  S : A' \\<mapsto>\\<^bsub>smc_Rel \\<alpha>\\<^esub> A\n  R : A' \\<mapsto>\\<^bsub>smc_Rel \\<alpha>\\<^esub> A\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Rel \\<alpha>\\<^esub> S =\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Rel \\<alpha>\\<^esub> R\n\ngoal (1 subgoal):\n 1. S = R", "by (rule is_monic_arrD(2))"], ["proof (state)\nthis:\n  S = R\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in \\<Z>) smc_Par_is_monic_arrD:\n  assumes \"T : A \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>smc_Par \\<alpha>\\<^esub> B\"\n  shows \"T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\" and \"v11 (T\\<lparr>ArrVal\\<rparr>)\" and \"\\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B &&&\n    v11 (T\\<lparr>ArrVal\\<rparr>) &&&\n    \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A", "proof-"], ["proof (state)\ngoal (3 subgoals):\n 1. T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n 2. v11 (T\\<lparr>ArrVal\\<rparr>)\n 3. \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A", "from assms"], ["proof (chain)\npicking this:\n  T : A \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "show T: \"T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\""], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "by auto"], ["proof (state)\nthis:\n  T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n\ngoal (2 subgoals):\n 1. v11 (T\\<lparr>ArrVal\\<rparr>)\n 2. \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A", "interpret T: arr_Par \\<alpha> T \n    rewrites [simp]: \"T\\<lparr>ArrDom\\<rparr> = A\" and [simp]: \"T\\<lparr>ArrCod\\<rparr> = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Par \\<alpha> T &&&\n    T\\<lparr>ArrDom\\<rparr> = A &&& T\\<lparr>ArrCod\\<rparr> = B", "using T"], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. arr_Par \\<alpha> T &&&\n    T\\<lparr>ArrDom\\<rparr> = A &&& T\\<lparr>ArrCod\\<rparr> = B", "by (auto dest: smc_Par_is_arrD)"], ["proof (state)\ngoal (2 subgoals):\n 1. v11 (T\\<lparr>ArrVal\\<rparr>)\n 2. \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A", "show \"v11 (T\\<lparr>ArrVal\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v11 (T\\<lparr>ArrVal\\<rparr>)", "proof(intro v11I)"], ["proof (state)\ngoal (2 subgoals):\n 1. vsv (T\\<lparr>ArrVal\\<rparr>)\n 2. vsv ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)", "show \"vsv ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)", "proof(intro vsvI)"], ["proof (state)\ngoal (2 subgoals):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "fix a b c"], ["proof (state)\ngoal (2 subgoals):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "assume \"\\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\" and \"\\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\""], ["proof (state)\nthis:\n  \\<langle>a, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\n  \\<langle>a, c\\<rangle>\n  \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\n\ngoal (2 subgoals):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "then"], ["proof (chain)\npicking this:\n  \\<langle>a, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\n  \\<langle>a, c\\<rangle>\n  \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>", "have bar: \"\\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\" and car: \"\\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<langle>a, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\n  \\<langle>a, c\\<rangle>\n  \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> &&&\n    \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>", "by auto"], ["proof (state)\nthis:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n\ngoal (2 subgoals):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "with T.arr_Rel_ArrVal_vdomain"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> A\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>", "have [intro]: \"b \\<in>\\<^sub>\\<circ> A\" \"c \\<in>\\<^sub>\\<circ> A\""], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> A\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. b \\<in>\\<^sub>\\<circ> A &&& c \\<in>\\<^sub>\\<circ> A", "by auto"], ["proof (state)\nthis:\n  b \\<in>\\<^sub>\\<circ> A\n  c \\<in>\\<^sub>\\<circ> A\n\ngoal (2 subgoals):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "define R where \"R = [set {\\<langle>0, b\\<rangle>}, set {0}, A]\\<^sub>\\<circ>\""], ["proof (state)\nthis:\n  R =\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, A]\\<^sub>\\<circ>\n\ngoal (2 subgoals):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "define S where \"S = [set {\\<langle>0, c\\<rangle>}, set {0}, A]\\<^sub>\\<circ>\""], ["proof (state)\nthis:\n  S =\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, A]\\<^sub>\\<circ>\n\ngoal (2 subgoals):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "have R_components: \n        \"R\\<lparr>ArrVal\\<rparr> = set {\\<langle>0, b\\<rangle>}\" \"R\\<lparr>ArrDom\\<rparr> = set {0}\" \"R\\<lparr>ArrCod\\<rparr> = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R\\<lparr>ArrVal\\<rparr> =\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>} &&&\n    R\\<lparr>ArrDom\\<rparr> = ZFC_in_HOL.set {[]\\<^sub>\\<circ>} &&&\n    R\\<lparr>ArrCod\\<rparr> = A", "unfolding R_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>},\n     ZFC_in_HOL.set {[]\\<^sub>\\<circ>},\n     A]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr> =\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>} &&&\n    [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>},\n     ZFC_in_HOL.set {[]\\<^sub>\\<circ>},\n     A]\\<^sub>\\<circ>\\<lparr>ArrDom\\<rparr> =\n    ZFC_in_HOL.set {[]\\<^sub>\\<circ>} &&&\n    [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>},\n     ZFC_in_HOL.set {[]\\<^sub>\\<circ>},\n     A]\\<^sub>\\<circ>\\<lparr>ArrCod\\<rparr> =\n    A", "by (simp_all add: arr_Rel_components)"], ["proof (state)\nthis:\n  R\\<lparr>ArrVal\\<rparr> =\n  ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>}\n  R\\<lparr>ArrDom\\<rparr> = ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n  R\\<lparr>ArrCod\\<rparr> = A\n\ngoal (2 subgoals):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "have S_components: \n        \"S\\<lparr>ArrVal\\<rparr> = set {\\<langle>0, c\\<rangle>}\" \"S\\<lparr>ArrDom\\<rparr> = set {0}\" \"S\\<lparr>ArrCod\\<rparr> = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S\\<lparr>ArrVal\\<rparr> =\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>} &&&\n    S\\<lparr>ArrDom\\<rparr> = ZFC_in_HOL.set {[]\\<^sub>\\<circ>} &&&\n    S\\<lparr>ArrCod\\<rparr> = A", "unfolding S_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>},\n     ZFC_in_HOL.set {[]\\<^sub>\\<circ>},\n     A]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr> =\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>} &&&\n    [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>},\n     ZFC_in_HOL.set {[]\\<^sub>\\<circ>},\n     A]\\<^sub>\\<circ>\\<lparr>ArrDom\\<rparr> =\n    ZFC_in_HOL.set {[]\\<^sub>\\<circ>} &&&\n    [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>},\n     ZFC_in_HOL.set {[]\\<^sub>\\<circ>},\n     A]\\<^sub>\\<circ>\\<lparr>ArrCod\\<rparr> =\n    A", "by (simp_all add: arr_Rel_components)"], ["proof (state)\nthis:\n  S\\<lparr>ArrVal\\<rparr> =\n  ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>}\n  S\\<lparr>ArrDom\\<rparr> = ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n  S\\<lparr>ArrCod\\<rparr> = A\n\ngoal (2 subgoals):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "have R: \"R : set {0} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R : ZFC_in_HOL.set\n         {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A", "proof(rule smc_Par_is_arrI)"], ["proof (state)\ngoal (3 subgoals):\n 1. arr_Par \\<alpha> R\n 2. R\\<lparr>ArrDom\\<rparr> = ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n 3. R\\<lparr>ArrCod\\<rparr> = A", "show \"arr_Par \\<alpha> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Par \\<alpha> R", "unfolding R_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Par \\<alpha>\n     [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>},\n      ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, A]\\<^sub>\\<circ>", "by (rule arr_Par_vfsequenceI) (auto simp: T.arr_Rel_ArrDom_in_Vset)"], ["proof (state)\nthis:\n  arr_Par \\<alpha> R\n\ngoal (2 subgoals):\n 1. R\\<lparr>ArrDom\\<rparr> = ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n 2. R\\<lparr>ArrCod\\<rparr> = A", "qed (simp_all add: R_components)"], ["proof (state)\nthis:\n  R : ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\n\ngoal (2 subgoals):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "have S: \"S : set {0} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S : ZFC_in_HOL.set\n         {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A", "proof(rule smc_Par_is_arrI)"], ["proof (state)\ngoal (3 subgoals):\n 1. arr_Par \\<alpha> S\n 2. S\\<lparr>ArrDom\\<rparr> = ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n 3. S\\<lparr>ArrCod\\<rparr> = A", "show \"arr_Par \\<alpha> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Par \\<alpha> S", "unfolding S_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Par \\<alpha>\n     [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>},\n      ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, A]\\<^sub>\\<circ>", "by (rule arr_Par_vfsequenceI) (auto simp: T.arr_Rel_ArrDom_in_Vset)"], ["proof (state)\nthis:\n  arr_Par \\<alpha> S\n\ngoal (2 subgoals):\n 1. S\\<lparr>ArrDom\\<rparr> = ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n 2. S\\<lparr>ArrCod\\<rparr> = A", "qed (simp_all add: S_components)"], ["proof (state)\nthis:\n  S : ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\n\ngoal (2 subgoals):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "have \"T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> R = [set {\\<langle>0, a\\<rangle>}, set {0}, B]\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> R =\n    [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n     ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>", "unfolding smc_Par_Comp_app[OF T R]"], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l R =\n    [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n     ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>", "proof\n        (\n          rule arr_Par_eqI[of \\<alpha>],\n          unfold comp_Rel_components arr_Rel_components R_components\n        )"], ["proof (state)\ngoal (5 subgoals):\n 1. arr_Par \\<alpha> (T \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l R)\n 2. arr_Par \\<alpha>\n     [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n      ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>\n 3. T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>} =\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}\n 4. ZFC_in_HOL.set {[]\\<^sub>\\<circ>} = ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n 5. T\\<lparr>ArrCod\\<rparr> = B", "from R T"], ["proof (chain)\npicking this:\n  R : ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\n  T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "show \"arr_Par \\<alpha> (T \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l R)\""], ["proof (prove)\nusing this:\n  R : ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\n  T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. arr_Par \\<alpha> (T \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l R)", "by (intro arr_Par_comp_Par) (auto elim!: smc_Par_is_arrE)"], ["proof (state)\nthis:\n  arr_Par \\<alpha> (T \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l R)\n\ngoal (4 subgoals):\n 1. arr_Par \\<alpha>\n     [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n      ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>\n 2. T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>} =\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}\n 3. ZFC_in_HOL.set {[]\\<^sub>\\<circ>} = ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n 4. T\\<lparr>ArrCod\\<rparr> = B", "show \"arr_Par \\<alpha> [set {\\<langle>0, a\\<rangle>}, set {0}, B]\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Par \\<alpha>\n     [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n      ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>", "proof(rule arr_Par_vfsequenceI)"], ["proof (state)\ngoal (5 subgoals):\n 1. vsv (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})\n 2. \\<D>\\<^sub>\\<circ>\n     (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n 3. \\<R>\\<^sub>\\<circ>\n     (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})\n    \\<subseteq>\\<^sub>\\<circ> B\n 4. ZFC_in_HOL.set {[]\\<^sub>\\<circ>} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 5. B \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "from T.arr_Rel_ArrVal_vrange bar"], ["proof (chain)\npicking this:\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> B\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>", "show \"\\<R>\\<^sub>\\<circ> (set {\\<langle>0, a\\<rangle>}) \\<subseteq>\\<^sub>\\<circ> B\""], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> B\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})\n    \\<subseteq>\\<^sub>\\<circ> B", "by auto"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ>\n   (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})\n  \\<subseteq>\\<^sub>\\<circ> B\n\ngoal (4 subgoals):\n 1. vsv (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})\n 2. \\<D>\\<^sub>\\<circ>\n     (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n 3. ZFC_in_HOL.set {[]\\<^sub>\\<circ>} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 4. B \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "qed (auto simp: T.arr_Rel_ArrCod_in_Vset Axiom_of_Powers)"], ["proof (state)\nthis:\n  arr_Par \\<alpha>\n   [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n    ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>\n\ngoal (3 subgoals):\n 1. T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>} =\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}\n 2. ZFC_in_HOL.set {[]\\<^sub>\\<circ>} = ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n 3. T\\<lparr>ArrCod\\<rparr> = B", "show \"T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> set {\\<langle>0, b\\<rangle>} = set {\\<langle>0, a\\<rangle>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>} =\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}", "proof(rule vsv_eqI, unfold vdomain_vsingleton)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n         ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>})\n 2. vsv (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})\n 3. \\<D>\\<^sub>\\<circ>\n     (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n      ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>}) =\n    ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n 4. \\<And>aa.\n       aa \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                               (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                                ZFC_in_HOL.set\n                                 {\\<langle>[]\\<^sub>\\<circ>,\n     b\\<rangle>}) \\<Longrightarrow>\n       (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n        ZFC_in_HOL.set\n         {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>})\\<lparr>aa\\<rparr> =\n       ZFC_in_HOL.set\n        {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}\\<lparr>aa\\<rparr>", "from bar"], ["proof (chain)\npicking this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>", "show \"\\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> set {\\<langle>0, b\\<rangle>}) = set {0}\""], ["proof (prove)\nusing this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n      ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>}) =\n    ZFC_in_HOL.set {[]\\<^sub>\\<circ>}", "by auto"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>}) =\n  ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n\ngoal (3 subgoals):\n 1. vsv (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n         ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>})\n 2. vsv (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})\n 3. \\<And>aa.\n       aa \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                               (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                                ZFC_in_HOL.set\n                                 {\\<langle>[]\\<^sub>\\<circ>,\n     b\\<rangle>}) \\<Longrightarrow>\n       (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n        ZFC_in_HOL.set\n         {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>})\\<lparr>aa\\<rparr> =\n       ZFC_in_HOL.set\n        {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}\\<lparr>aa\\<rparr>", "with bar"], ["proof (chain)\npicking this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n  \\<D>\\<^sub>\\<circ>\n   (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>}) =\n  ZFC_in_HOL.set {[]\\<^sub>\\<circ>}", "show \n            \"a' \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> set {\\<langle>0, b\\<rangle>}) \\<Longrightarrow>\n              (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> set {\\<langle>0, b\\<rangle>})\\<lparr>a'\\<rparr> = set {\\<langle>0, a\\<rangle>}\\<lparr>a'\\<rparr>\"\n            for a'"], ["proof (prove)\nusing this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n  \\<D>\\<^sub>\\<circ>\n   (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>}) =\n  ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n\ngoal (1 subgoal):\n 1. a' \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                            (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                             ZFC_in_HOL.set\n                              {\\<langle>[]\\<^sub>\\<circ>,\n  b\\<rangle>}) \\<Longrightarrow>\n    (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n     ZFC_in_HOL.set\n      {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>})\\<lparr>a'\\<rparr> =\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}\\<lparr>a'\\<rparr>", "by auto"], ["proof (state)\nthis:\n  ?a'\n  \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                       (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                        ZFC_in_HOL.set\n                         {\\<langle>[]\\<^sub>\\<circ>,\n                                   b\\<rangle>}) \\<Longrightarrow>\n  (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n   ZFC_in_HOL.set\n    {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>})\\<lparr>?a'\\<rparr> =\n  ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}\\<lparr>?a'\\<rparr>\n\ngoal (2 subgoals):\n 1. vsv (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n         ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>})\n 2. vsv (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})", "qed (auto intro: vsv_vcomp)"], ["proof (state)\nthis:\n  T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n  ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>} =\n  ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}\n\ngoal (2 subgoals):\n 1. ZFC_in_HOL.set {[]\\<^sub>\\<circ>} = ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n 2. T\\<lparr>ArrCod\\<rparr> = B", "qed simp_all"], ["proof (state)\nthis:\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> R =\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>\n\ngoal (2 subgoals):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "moreover"], ["proof (state)\nthis:\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> R =\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>\n\ngoal (2 subgoals):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "have \"T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> S = [set {\\<langle>0, a\\<rangle>}, set {0}, B]\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> S =\n    [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n     ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>", "unfolding smc_Par_Comp_app[OF T S]"], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l S =\n    [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n     ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>", "proof\n        (\n          rule arr_Par_eqI[of \\<alpha>],\n          unfold comp_Rel_components arr_Rel_components S_components\n        )"], ["proof (state)\ngoal (5 subgoals):\n 1. arr_Par \\<alpha> (T \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l S)\n 2. arr_Par \\<alpha>\n     [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n      ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>\n 3. T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>} =\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}\n 4. ZFC_in_HOL.set {[]\\<^sub>\\<circ>} = ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n 5. T\\<lparr>ArrCod\\<rparr> = B", "from T S"], ["proof (chain)\npicking this:\n  T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n  S : ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A", "show \"arr_Par \\<alpha> (T \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l S)\""], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n  S : ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\n\ngoal (1 subgoal):\n 1. arr_Par \\<alpha> (T \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l S)", "by (intro arr_Par_comp_Par) (auto elim!: smc_Par_is_arrE)"], ["proof (state)\nthis:\n  arr_Par \\<alpha> (T \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l S)\n\ngoal (4 subgoals):\n 1. arr_Par \\<alpha>\n     [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n      ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>\n 2. T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>} =\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}\n 3. ZFC_in_HOL.set {[]\\<^sub>\\<circ>} = ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n 4. T\\<lparr>ArrCod\\<rparr> = B", "show \"arr_Par \\<alpha> [set {\\<langle>0, a\\<rangle>}, set {0}, B]\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Par \\<alpha>\n     [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n      ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>", "proof(rule arr_Par_vfsequenceI)"], ["proof (state)\ngoal (5 subgoals):\n 1. vsv (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})\n 2. \\<D>\\<^sub>\\<circ>\n     (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n 3. \\<R>\\<^sub>\\<circ>\n     (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})\n    \\<subseteq>\\<^sub>\\<circ> B\n 4. ZFC_in_HOL.set {[]\\<^sub>\\<circ>} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 5. B \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "from T.arr_Rel_ArrVal_vrange bar"], ["proof (chain)\npicking this:\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> B\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>", "show \"\\<R>\\<^sub>\\<circ> (set {\\<langle>0, a\\<rangle>}) \\<subseteq>\\<^sub>\\<circ> B\""], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> B\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})\n    \\<subseteq>\\<^sub>\\<circ> B", "by auto"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ>\n   (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})\n  \\<subseteq>\\<^sub>\\<circ> B\n\ngoal (4 subgoals):\n 1. vsv (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})\n 2. \\<D>\\<^sub>\\<circ>\n     (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n 3. ZFC_in_HOL.set {[]\\<^sub>\\<circ>} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 4. B \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "qed (auto simp: T.arr_Rel_ArrCod_in_Vset Axiom_of_Powers)"], ["proof (state)\nthis:\n  arr_Par \\<alpha>\n   [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n    ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>\n\ngoal (3 subgoals):\n 1. T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>} =\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}\n 2. ZFC_in_HOL.set {[]\\<^sub>\\<circ>} = ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n 3. T\\<lparr>ArrCod\\<rparr> = B", "show \"T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> set {\\<langle>0, c\\<rangle>} = set {\\<langle>0, a\\<rangle>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>} =\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}", "proof(rule vsv_eqI, unfold vdomain_vsingleton)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n         ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>})\n 2. vsv (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})\n 3. \\<D>\\<^sub>\\<circ>\n     (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n      ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>}) =\n    ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n 4. \\<And>aa.\n       aa \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                               (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                                ZFC_in_HOL.set\n                                 {\\<langle>[]\\<^sub>\\<circ>,\n     c\\<rangle>}) \\<Longrightarrow>\n       (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n        ZFC_in_HOL.set\n         {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>})\\<lparr>aa\\<rparr> =\n       ZFC_in_HOL.set\n        {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}\\<lparr>aa\\<rparr>", "from car"], ["proof (chain)\npicking this:\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>", "show \"\\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> set {\\<langle>0, c\\<rangle>}) = set {0}\""], ["proof (prove)\nusing this:\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n      ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>}) =\n    ZFC_in_HOL.set {[]\\<^sub>\\<circ>}", "by auto"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>}) =\n  ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n\ngoal (3 subgoals):\n 1. vsv (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n         ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>})\n 2. vsv (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})\n 3. \\<And>aa.\n       aa \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                               (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                                ZFC_in_HOL.set\n                                 {\\<langle>[]\\<^sub>\\<circ>,\n     c\\<rangle>}) \\<Longrightarrow>\n       (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n        ZFC_in_HOL.set\n         {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>})\\<lparr>aa\\<rparr> =\n       ZFC_in_HOL.set\n        {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}\\<lparr>aa\\<rparr>", "with car"], ["proof (chain)\npicking this:\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n  \\<D>\\<^sub>\\<circ>\n   (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>}) =\n  ZFC_in_HOL.set {[]\\<^sub>\\<circ>}", "show \"a' \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> set {\\<langle>0, c\\<rangle>}) \\<Longrightarrow> \n            (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> set {\\<langle>0, c\\<rangle>})\\<lparr>a'\\<rparr> = set {\\<langle>0, a\\<rangle>}\\<lparr>a'\\<rparr>\"\n            for a'"], ["proof (prove)\nusing this:\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n  \\<D>\\<^sub>\\<circ>\n   (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>}) =\n  ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n\ngoal (1 subgoal):\n 1. a' \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                            (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                             ZFC_in_HOL.set\n                              {\\<langle>[]\\<^sub>\\<circ>,\n  c\\<rangle>}) \\<Longrightarrow>\n    (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n     ZFC_in_HOL.set\n      {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>})\\<lparr>a'\\<rparr> =\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}\\<lparr>a'\\<rparr>", "by auto"], ["proof (state)\nthis:\n  ?a'\n  \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                       (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                        ZFC_in_HOL.set\n                         {\\<langle>[]\\<^sub>\\<circ>,\n                                   c\\<rangle>}) \\<Longrightarrow>\n  (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n   ZFC_in_HOL.set\n    {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>})\\<lparr>?a'\\<rparr> =\n  ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}\\<lparr>?a'\\<rparr>\n\ngoal (2 subgoals):\n 1. vsv (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n         ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>})\n 2. vsv (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})", "qed (auto intro: vsv_vcomp)"], ["proof (state)\nthis:\n  T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n  ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>} =\n  ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}\n\ngoal (2 subgoals):\n 1. ZFC_in_HOL.set {[]\\<^sub>\\<circ>} = ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n 2. T\\<lparr>ArrCod\\<rparr> = B", "qed simp_all"], ["proof (state)\nthis:\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> S =\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>\n\ngoal (2 subgoals):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "ultimately"], ["proof (chain)\npicking this:\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> R =\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> S =\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>", "have \"T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> R = T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> S\""], ["proof (prove)\nusing this:\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> R =\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> S =\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> R =\n    T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> S", "by simp"], ["proof (state)\nthis:\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> R =\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> S\n\ngoal (2 subgoals):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "from assms R S this"], ["proof (chain)\npicking this:\n  T : A \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n  R : ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\n  S : ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> R =\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> S", "have \"R = S\""], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n  R : ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\n  S : ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> R =\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> S\n\ngoal (1 subgoal):\n 1. R = S", "by blast"], ["proof (state)\nthis:\n  R = S\n\ngoal (2 subgoals):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "with R_components(1) S_components(1)"], ["proof (chain)\npicking this:\n  R\\<lparr>ArrVal\\<rparr> =\n  ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>}\n  S\\<lparr>ArrVal\\<rparr> =\n  ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>}\n  R = S", "show \"b = c\""], ["proof (prove)\nusing this:\n  R\\<lparr>ArrVal\\<rparr> =\n  ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>}\n  S\\<lparr>ArrVal\\<rparr> =\n  ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>}\n  R = S\n\ngoal (1 subgoal):\n 1. b = c", "by simp"], ["proof (state)\nthis:\n  b = c\n\ngoal (1 subgoal):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)", "qed auto"], ["proof (state)\nthis:\n  vsv ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n\ngoal (1 subgoal):\n 1. vsv (T\\<lparr>ArrVal\\<rparr>)", "qed auto"], ["proof (state)\nthis:\n  v11 (T\\<lparr>ArrVal\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A", "show \"\\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A", "proof(intro vsubset_antisym vsubsetI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> A\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)", "from T.arr_Rel_ArrVal_vdomain"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> A", "show \"x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow> x \\<in>\\<^sub>\\<circ> A\" for x"], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                           (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n    x \\<in>\\<^sub>\\<circ> A", "by auto"], ["proof (state)\nthis:\n  ?x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                          (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n  ?x \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)", "assume [simp]: \"a \\<in>\\<^sub>\\<circ> A\""], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)", "show \"a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)", "proof(rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<notin>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n    False", "assume a: \"a \\<notin>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\""], ["proof (state)\nthis:\n  a \\<notin>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n\ngoal (1 subgoal):\n 1. a \\<notin>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n    False", "define R where \"R = [set {\\<langle>0, a\\<rangle>}, set {0, 1}, A]\\<^sub>\\<circ>\""], ["proof (state)\nthis:\n  R =\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}, A]\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. a \\<notin>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n    False", "define S where \"S = [set {\\<langle>1, a\\<rangle>}, set {0, 1}, A]\\<^sub>\\<circ>\""], ["proof (state)\nthis:\n  S =\n  [ZFC_in_HOL.set {\\<langle>1, a\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}, A]\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. a \\<notin>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n    False", "have R: \"R : set {0, 1} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R : ZFC_in_HOL.set\n         {[]\\<^sub>\\<circ>, 1} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A", "proof(rule smc_Par_is_arrI)"], ["proof (state)\ngoal (3 subgoals):\n 1. arr_Par \\<alpha> R\n 2. R\\<lparr>ArrDom\\<rparr> = ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}\n 3. R\\<lparr>ArrCod\\<rparr> = A", "show \"arr_Par \\<alpha> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Par \\<alpha> R", "unfolding R_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Par \\<alpha>\n     [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n      ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}, A]\\<^sub>\\<circ>", "proof(rule arr_Par_vfsequenceI)"], ["proof (state)\ngoal (5 subgoals):\n 1. vsv (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})\n 2. \\<D>\\<^sub>\\<circ>\n     (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}\n 3. \\<R>\\<^sub>\\<circ>\n     (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})\n    \\<subseteq>\\<^sub>\\<circ> A\n 4. ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 5. A \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "from Axiom_of_Infinity vone_in_omega"], ["proof (chain)\npicking this:\n  \\<omega> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  1 \\<in>\\<^sub>\\<circ> \\<omega>", "show \"set {0, 1} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  \\<omega> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  1 \\<in>\\<^sub>\\<circ> \\<omega>\n\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1} \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by blast"], ["proof (state)\nthis:\n  ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (4 subgoals):\n 1. vsv (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})\n 2. \\<D>\\<^sub>\\<circ>\n     (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}\n 3. \\<R>\\<^sub>\\<circ>\n     (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})\n    \\<subseteq>\\<^sub>\\<circ> A\n 4. A \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "qed (auto simp: T.arr_Rel_ArrDom_in_Vset)"], ["proof (state)\nthis:\n  arr_Par \\<alpha> R\n\ngoal (2 subgoals):\n 1. R\\<lparr>ArrDom\\<rparr> = ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}\n 2. R\\<lparr>ArrCod\\<rparr> = A", "qed (auto simp: R_def arr_Rel_components)"], ["proof (state)\nthis:\n  R : ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>, 1} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\n\ngoal (1 subgoal):\n 1. a \\<notin>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n    False", "have S: \"S : set {0, 1} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S : ZFC_in_HOL.set\n         {[]\\<^sub>\\<circ>, 1} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A", "proof(rule smc_Par_is_arrI)"], ["proof (state)\ngoal (3 subgoals):\n 1. arr_Par \\<alpha> S\n 2. S\\<lparr>ArrDom\\<rparr> = ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}\n 3. S\\<lparr>ArrCod\\<rparr> = A", "show \"arr_Par \\<alpha> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Par \\<alpha> S", "unfolding S_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Par \\<alpha>\n     [ZFC_in_HOL.set {\\<langle>1, a\\<rangle>},\n      ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}, A]\\<^sub>\\<circ>", "proof(rule arr_Par_vfsequenceI)"], ["proof (state)\ngoal (5 subgoals):\n 1. vsv (ZFC_in_HOL.set {\\<langle>1, a\\<rangle>})\n 2. \\<D>\\<^sub>\\<circ> (ZFC_in_HOL.set {\\<langle>1, a\\<rangle>})\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}\n 3. \\<R>\\<^sub>\\<circ> (ZFC_in_HOL.set {\\<langle>1, a\\<rangle>})\n    \\<subseteq>\\<^sub>\\<circ> A\n 4. ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 5. A \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "from Axiom_of_Infinity vone_in_omega"], ["proof (chain)\npicking this:\n  \\<omega> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  1 \\<in>\\<^sub>\\<circ> \\<omega>", "show \"set {0, 1} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  \\<omega> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  1 \\<in>\\<^sub>\\<circ> \\<omega>\n\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1} \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by blast"], ["proof (state)\nthis:\n  ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (4 subgoals):\n 1. vsv (ZFC_in_HOL.set {\\<langle>1, a\\<rangle>})\n 2. \\<D>\\<^sub>\\<circ> (ZFC_in_HOL.set {\\<langle>1, a\\<rangle>})\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}\n 3. \\<R>\\<^sub>\\<circ> (ZFC_in_HOL.set {\\<langle>1, a\\<rangle>})\n    \\<subseteq>\\<^sub>\\<circ> A\n 4. A \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "qed (auto simp: T.arr_Rel_ArrDom_in_Vset)"], ["proof (state)\nthis:\n  arr_Par \\<alpha> S\n\ngoal (2 subgoals):\n 1. S\\<lparr>ArrDom\\<rparr> = ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}\n 2. S\\<lparr>ArrCod\\<rparr> = A", "qed (auto simp: S_def arr_Rel_components)"], ["proof (state)\nthis:\n  S : ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>, 1} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\n\ngoal (1 subgoal):\n 1. a \\<notin>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n    False", "with a"], ["proof (chain)\npicking this:\n  a \\<notin>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n  S : ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>, 1} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A", "have \"T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr> = 0\""], ["proof (prove)\nusing this:\n  a \\<notin>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n  S : ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>, 1} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\n\ngoal (1 subgoal):\n 1. T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr> =\n    []\\<^sub>\\<circ>", "unfolding R_def arr_Rel_components"], ["proof (prove)\nusing this:\n  a \\<notin>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n  S : ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>, 1} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\n\ngoal (1 subgoal):\n 1. T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>} =\n    []\\<^sub>\\<circ>", "by (intro vsubset_antisym vsubsetI) auto"], ["proof (state)\nthis:\n  T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr> =\n  []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. a \\<notin>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr> =\n  []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. a \\<notin>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n    False", "with a"], ["proof (chain)\npicking this:\n  a \\<notin>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n  T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr> =\n  []\\<^sub>\\<circ>", "have \"T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> = 0\""], ["proof (prove)\nusing this:\n  a \\<notin>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n  T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr> =\n  []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> =\n    []\\<^sub>\\<circ>", "unfolding S_def arr_Rel_components"], ["proof (prove)\nusing this:\n  a \\<notin>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n  T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr> =\n  []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n    ZFC_in_HOL.set {\\<langle>1, a\\<rangle>} =\n    []\\<^sub>\\<circ>", "by (intro vsubset_antisym vsubsetI) auto"], ["proof (state)\nthis:\n  T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> =\n  []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. a \\<notin>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr> =\n  []\\<^sub>\\<circ>\n  T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> =\n  []\\<^sub>\\<circ>", "have \"T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> R = T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> S\""], ["proof (prove)\nusing this:\n  T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr> =\n  []\\<^sub>\\<circ>\n  T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> =\n  []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> R =\n    T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> S", "using R T S"], ["proof (prove)\nusing this:\n  T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr> =\n  []\\<^sub>\\<circ>\n  T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> =\n  []\\<^sub>\\<circ>\n  R : ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>, 1} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\n  T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n  S : ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>, 1} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\n\ngoal (1 subgoal):\n 1. T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> R =\n    T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> S", "by\n          (\n            intro arr_Par_eqI[of \\<alpha> \\<open>T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> R\\<close> \\<open>T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> S\\<close>]; \n            elim smc_Par_is_arrE\n          )\n          (\n            auto simp:\n              dg_Par_cs_intros\n              smc_Par_Comp_app[OF T R] \n              smc_Par_Comp_app[OF T S] \n              comp_Rel_components\n          )"], ["proof (state)\nthis:\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> R =\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> S\n\ngoal (1 subgoal):\n 1. a \\<notin>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n    False", "from R S this assms"], ["proof (chain)\npicking this:\n  R : ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>, 1} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\n  S : ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>, 1} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> R =\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> S\n  T : A \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "have \"R = S\""], ["proof (prove)\nusing this:\n  R : ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>, 1} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\n  S : ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>, 1} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> R =\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> S\n  T : A \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. R = S", "by blast"], ["proof (state)\nthis:\n  R = S\n\ngoal (1 subgoal):\n 1. a \\<notin>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  R = S", "show False"], ["proof (prove)\nusing this:\n  R = S\n\ngoal (1 subgoal):\n 1. False", "unfolding R_def S_def"], ["proof (prove)\nusing this:\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}, A]\\<^sub>\\<circ> =\n  [ZFC_in_HOL.set {\\<langle>1, a\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}, A]\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in \\<Z>) smc_Par_is_monic_arr: \n  \"T : A \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>smc_Par \\<alpha>\\<^esub> B \\<longleftrightarrow>\n    T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B \\<and> v11 (T\\<lparr>ArrVal\\<rparr>) \\<and> \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>smc_Par \\<alpha>\\<^esub> B =\n    (T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B \\<and>\n     v11 (T\\<lparr>ArrVal\\<rparr>) \\<and>\n     \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A)", "by (intro iffI) (auto simp: smc_Par_is_monic_arrD smc_Par_is_monic_arrI)"], ["", "context \\<Z>\nbegin"], ["", "context\nbegin"], ["", "private"], ["", "lemma smc_Par_is_epic_arr_vsubset:\n  assumes \"T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\"\n    and \"\\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\"\n    and \"R : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C\" \n    and \"S : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C\" \n    and \"R \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T = S \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T\" \n  shows \"R\\<lparr>ArrVal\\<rparr> \\<subseteq>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R\\<lparr>ArrVal\\<rparr>\n    \\<subseteq>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>", "interpret T: arr_Par \\<alpha> T\n    rewrites [simp]: \"T\\<lparr>ArrDom\\<rparr> = A\" and [simp]: \"T\\<lparr>ArrCod\\<rparr> = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Par \\<alpha> T &&&\n    T\\<lparr>ArrDom\\<rparr> = A &&& T\\<lparr>ArrCod\\<rparr> = B", "using assms smc_Par_is_arrD"], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\n  R : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C\n  S : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C\n  R \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T =\n  S \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T\n  ?S : ?A \\<mapsto>\\<^bsub>smc_Par ?\\<alpha>\\<^esub> ?B \\<Longrightarrow>\n  arr_Par ?\\<alpha> ?S\n  ?S : ?A \\<mapsto>\\<^bsub>smc_Par ?\\<alpha>\\<^esub> ?B \\<Longrightarrow>\n  ?S\\<lparr>ArrDom\\<rparr> = ?A\n  ?S : ?A \\<mapsto>\\<^bsub>smc_Par ?\\<alpha>\\<^esub> ?B \\<Longrightarrow>\n  ?S\\<lparr>ArrCod\\<rparr> = ?B\n\ngoal (1 subgoal):\n 1. arr_Par \\<alpha> T &&&\n    T\\<lparr>ArrDom\\<rparr> = A &&& T\\<lparr>ArrCod\\<rparr> = B", "by auto"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>", "interpret R: arr_Par \\<alpha> R \n    rewrites [simp]: \"R\\<lparr>ArrDom\\<rparr> = B\" and [simp]: \"R\\<lparr>ArrCod\\<rparr> = C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Par \\<alpha> R &&&\n    R\\<lparr>ArrDom\\<rparr> = B &&& R\\<lparr>ArrCod\\<rparr> = C", "using assms smc_Par_is_arrD"], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\n  R : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C\n  S : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> C\n  R \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T =\n  S \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T\n  ?S : ?A \\<mapsto>\\<^bsub>smc_Par ?\\<alpha>\\<^esub> ?B \\<Longrightarrow>\n  arr_Par ?\\<alpha> ?S\n  ?S : ?A \\<mapsto>\\<^bsub>smc_Par ?\\<alpha>\\<^esub> ?B \\<Longrightarrow>\n  ?S\\<lparr>ArrDom\\<rparr> = ?A\n  ?S : ?A \\<mapsto>\\<^bsub>smc_Par ?\\<alpha>\\<^esub> ?B \\<Longrightarrow>\n  ?S\\<lparr>ArrCod\\<rparr> = ?B\n\ngoal (1 subgoal):\n 1. arr_Par \\<alpha> R &&&\n    R\\<lparr>ArrDom\\<rparr> = B &&& R\\<lparr>ArrCod\\<rparr> = C", "by auto"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>", "from assms(5)"], ["proof (chain)\npicking this:\n  R \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T =\n  S \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T", "have \"(R \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T)\\<lparr>ArrVal\\<rparr> = (S \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T)\\<lparr>ArrVal\\<rparr>\""], ["proof (prove)\nusing this:\n  R \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T =\n  S \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T\n\ngoal (1 subgoal):\n 1. (R \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n     T)\\<lparr>ArrVal\\<rparr> =\n    (S \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n     T)\\<lparr>ArrVal\\<rparr>", "by simp"], ["proof (state)\nthis:\n  (R \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n   T)\\<lparr>ArrVal\\<rparr> =\n  (S \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n   T)\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>", "then"], ["proof (chain)\npicking this:\n  (R \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n   T)\\<lparr>ArrVal\\<rparr> =\n  (S \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n   T)\\<lparr>ArrVal\\<rparr>", "have eq: \"R\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> = S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\""], ["proof (prove)\nusing this:\n  (R \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n   T)\\<lparr>ArrVal\\<rparr> =\n  (S \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n   T)\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. R\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> =\n    S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>", "unfolding \n      smc_Par_Comp_app[OF assms(3,1)] \n      smc_Par_Comp_app[OF assms(4,1)]\n      comp_Rel_components"], ["proof (prove)\nusing this:\n  R\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> =\n  S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. R\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> =\n    S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>", "by simp"], ["proof (state)\nthis:\n  R\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> =\n  S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>", "fix bc"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>", "assume prems: \"bc \\<in>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr>\""], ["proof (state)\nthis:\n  bc \\<in>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>", "moreover"], ["proof (state)\nthis:\n  bc \\<in>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>", "with R.ArrVal.vbrelation"], ["proof (chain)\npicking this:\n  vpairs (R\\<lparr>ArrVal\\<rparr>) = R\\<lparr>ArrVal\\<rparr>\n  bc \\<in>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr>", "obtain b c where bc_def: \"bc = \\<langle>b, c\\<rangle>\""], ["proof (prove)\nusing this:\n  vpairs (R\\<lparr>ArrVal\\<rparr>) = R\\<lparr>ArrVal\\<rparr>\n  bc \\<in>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>b c.\n        bc = \\<langle>b, c\\<rangle> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  bc = \\<langle>b, c\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>", "ultimately"], ["proof (chain)\npicking this:\n  bc \\<in>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr>\n  bc = \\<langle>b, c\\<rangle>", "have [simp]: \"b \\<in>\\<^sub>\\<circ> B\" and \"c \\<in>\\<^sub>\\<circ> C\""], ["proof (prove)\nusing this:\n  bc \\<in>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr>\n  bc = \\<langle>b, c\\<rangle>\n\ngoal (1 subgoal):\n 1. b \\<in>\\<^sub>\\<circ> B &&& c \\<in>\\<^sub>\\<circ> C", "using R.arr_Rel_ArrVal_vdomain R.arr_Rel_ArrVal_vrange"], ["proof (prove)\nusing this:\n  bc \\<in>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr>\n  bc = \\<langle>b, c\\<rangle>\n  \\<D>\\<^sub>\\<circ> (R\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> B\n  \\<R>\\<^sub>\\<circ> (R\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> C\n\ngoal (1 subgoal):\n 1. b \\<in>\\<^sub>\\<circ> B &&& c \\<in>\\<^sub>\\<circ> C", "by auto"], ["proof (state)\nthis:\n  b \\<in>\\<^sub>\\<circ> B\n  c \\<in>\\<^sub>\\<circ> C\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>", "note [intro] = prems[unfolded bc_def]"], ["proof (state)\nthis:\n  \\<langle>b, c\\<rangle> \\<in>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>", "have \"b \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)", "by (simp add: assms(2))"], ["proof (state)\nthis:\n  b \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>", "then"], ["proof (chain)\npicking this:\n  b \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)", "obtain a where ab: \"\\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\""], ["proof (prove)\nusing this:\n  b \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<langle>a, b\\<rangle>\n        \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>", "then"], ["proof (chain)\npicking this:\n  \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>", "have \"\\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<langle>a, c\\<rangle>\n    \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                        T\\<lparr>ArrVal\\<rparr>", "unfolding eq[symmetric]"], ["proof (prove)\nusing this:\n  \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<langle>a, c\\<rangle>\n    \\<in>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                        T\\<lparr>ArrVal\\<rparr>", "by auto"], ["proof (state)\nthis:\n  \\<langle>a, c\\<rangle>\n  \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                      T\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>", "then"], ["proof (chain)\npicking this:\n  \\<langle>a, c\\<rangle>\n  \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                      T\\<lparr>ArrVal\\<rparr>", "obtain b' where ab': \"\\<langle>b', c\\<rangle> \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\" and \"\\<langle>a, b'\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<langle>a, c\\<rangle>\n  \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                      T\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>b'.\n        \\<lbrakk>\\<langle>b', c\\<rangle>\n                 \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>;\n         \\<langle>a, b'\\<rangle>\n         \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  \\<langle>b', c\\<rangle> \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\n  \\<langle>a, b'\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>", "with ab ab' T.vsv T.ArrVal.vsv"], ["proof (chain)\npicking this:\n  \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n  \\<langle>b', c\\<rangle> \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\n  \\<lbrakk>\\<langle>?a, ?b\\<rangle> \\<in>\\<^sub>\\<circ> T;\n   \\<langle>?a, ?c\\<rangle> \\<in>\\<^sub>\\<circ> T\\<rbrakk>\n  \\<Longrightarrow> ?b = ?c\n  \\<lbrakk>\\<langle>?a, ?b\\<rangle>\n           \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>;\n   \\<langle>?a, ?c\\<rangle>\n   \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\\<rbrakk>\n  \\<Longrightarrow> ?b = ?c\n  \\<langle>b', c\\<rangle> \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\n  \\<langle>a, b'\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>", "show \"bc \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n  \\<langle>b', c\\<rangle> \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\n  \\<lbrakk>\\<langle>?a, ?b\\<rangle> \\<in>\\<^sub>\\<circ> T;\n   \\<langle>?a, ?c\\<rangle> \\<in>\\<^sub>\\<circ> T\\<rbrakk>\n  \\<Longrightarrow> ?b = ?c\n  \\<lbrakk>\\<langle>?a, ?b\\<rangle>\n           \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>;\n   \\<langle>?a, ?c\\<rangle>\n   \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\\<rbrakk>\n  \\<Longrightarrow> ?b = ?c\n  \\<langle>b', c\\<rangle> \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\n  \\<langle>a, b'\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. bc \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>", "unfolding bc_def"], ["proof (prove)\nusing this:\n  \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n  \\<langle>b', c\\<rangle> \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\n  \\<lbrakk>\\<langle>?a, ?b\\<rangle> \\<in>\\<^sub>\\<circ> T;\n   \\<langle>?a, ?c\\<rangle> \\<in>\\<^sub>\\<circ> T\\<rbrakk>\n  \\<Longrightarrow> ?b = ?c\n  \\<lbrakk>\\<langle>?a, ?b\\<rangle>\n           \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>;\n   \\<langle>?a, ?c\\<rangle>\n   \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\\<rbrakk>\n  \\<Longrightarrow> ?b = ?c\n  \\<langle>b', c\\<rangle> \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\n  \\<langle>a, b'\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<langle>b, c\\<rangle> \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>", "by blast"], ["proof (state)\nthis:\n  bc \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smc_Par_is_epic_arrI:\n  assumes \"T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\" and \"\\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\"\n  shows \"T : A \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>smc_Par \\<alpha>\\<^esub> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "unfolding is_epic_arr_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. T : B \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>op_smc (smc_Par \\<alpha>)\\<^esub> A", "proof\n  (\n    intro is_monic_arrI[\n      of \\<open>op_smc (smc_Par \\<alpha>)\\<close>, unfolded smc_op_simps, OF assms(1)\n      ]\n  )"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f g a.\n       \\<lbrakk>f : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> a;\n        g : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> a;\n        T \\<circ>\\<^sub>A\\<^bsub>op_smc (smc_Par \\<alpha>)\\<^esub> f =\n        T \\<circ>\\<^sub>A\\<^bsub>op_smc (smc_Par \\<alpha>)\\<^esub>\n        g\\<rbrakk>\n       \\<Longrightarrow> f = g", "interpret semicategory \\<alpha> \\<open>smc_Par \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (smc_Par \\<alpha>)", "by (rule semicategory_smc_Par)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f g a.\n       \\<lbrakk>f : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> a;\n        g : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> a;\n        T \\<circ>\\<^sub>A\\<^bsub>op_smc (smc_Par \\<alpha>)\\<^esub> f =\n        T \\<circ>\\<^sub>A\\<^bsub>op_smc (smc_Par \\<alpha>)\\<^esub>\n        g\\<rbrakk>\n       \\<Longrightarrow> f = g", "fix R S a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f g a.\n       \\<lbrakk>f : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> a;\n        g : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> a;\n        T \\<circ>\\<^sub>A\\<^bsub>op_smc (smc_Par \\<alpha>)\\<^esub> f =\n        T \\<circ>\\<^sub>A\\<^bsub>op_smc (smc_Par \\<alpha>)\\<^esub>\n        g\\<rbrakk>\n       \\<Longrightarrow> f = g", "assume prems: \n    \"R : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> a\" \n    \"S : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> a\" \n    \"T \\<circ>\\<^sub>A\\<^bsub>op_smc (smc_Par \\<alpha>)\\<^esub> R = T \\<circ>\\<^sub>A\\<^bsub>op_smc (smc_Par \\<alpha>)\\<^esub> S\""], ["proof (state)\nthis:\n  R : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> a\n  S : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> a\n  T \\<circ>\\<^sub>A\\<^bsub>op_smc (smc_Par \\<alpha>)\\<^esub> R =\n  T \\<circ>\\<^sub>A\\<^bsub>op_smc (smc_Par \\<alpha>)\\<^esub> S\n\ngoal (1 subgoal):\n 1. \\<And>f g a.\n       \\<lbrakk>f : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> a;\n        g : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> a;\n        T \\<circ>\\<^sub>A\\<^bsub>op_smc (smc_Par \\<alpha>)\\<^esub> f =\n        T \\<circ>\\<^sub>A\\<^bsub>op_smc (smc_Par \\<alpha>)\\<^esub>\n        g\\<rbrakk>\n       \\<Longrightarrow> f = g", "from prems(3)"], ["proof (chain)\npicking this:\n  T \\<circ>\\<^sub>A\\<^bsub>op_smc (smc_Par \\<alpha>)\\<^esub> R =\n  T \\<circ>\\<^sub>A\\<^bsub>op_smc (smc_Par \\<alpha>)\\<^esub> S", "have RT_ST: \"R \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T = S \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T\""], ["proof (prove)\nusing this:\n  T \\<circ>\\<^sub>A\\<^bsub>op_smc (smc_Par \\<alpha>)\\<^esub> R =\n  T \\<circ>\\<^sub>A\\<^bsub>op_smc (smc_Par \\<alpha>)\\<^esub> S\n\ngoal (1 subgoal):\n 1. R \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T =\n    S \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T", "unfolding \n      op_smc_Comp[OF prems(1) assms(1)]\n      op_smc_Comp[OF prems(2) assms(1)]"], ["proof (prove)\nusing this:\n  R \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T =\n  S \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T\n\ngoal (1 subgoal):\n 1. R \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T =\n    S \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T", "by simp"], ["proof (state)\nthis:\n  R \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T =\n  S \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T\n\ngoal (1 subgoal):\n 1. \\<And>f g a.\n       \\<lbrakk>f : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> a;\n        g : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> a;\n        T \\<circ>\\<^sub>A\\<^bsub>op_smc (smc_Par \\<alpha>)\\<^esub> f =\n        T \\<circ>\\<^sub>A\\<^bsub>op_smc (smc_Par \\<alpha>)\\<^esub>\n        g\\<rbrakk>\n       \\<Longrightarrow> f = g", "from smc_Par_is_epic_arr_vsubset[OF assms(1,2) prems(1,2) this]"], ["proof (chain)\npicking this:\n  R\\<lparr>ArrVal\\<rparr> \\<subseteq>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>", "have RS: \"R\\<lparr>ArrVal\\<rparr> \\<subseteq>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\""], ["proof (prove)\nusing this:\n  R\\<lparr>ArrVal\\<rparr> \\<subseteq>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. R\\<lparr>ArrVal\\<rparr>\n    \\<subseteq>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>", "."], ["proof (state)\nthis:\n  R\\<lparr>ArrVal\\<rparr> \\<subseteq>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>f g a.\n       \\<lbrakk>f : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> a;\n        g : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> a;\n        T \\<circ>\\<^sub>A\\<^bsub>op_smc (smc_Par \\<alpha>)\\<^esub> f =\n        T \\<circ>\\<^sub>A\\<^bsub>op_smc (smc_Par \\<alpha>)\\<^esub>\n        g\\<rbrakk>\n       \\<Longrightarrow> f = g", "from smc_Par_is_epic_arr_vsubset[OF assms(1,2) prems(2,1) RT_ST[symmetric]]"], ["proof (chain)\npicking this:\n  S\\<lparr>ArrVal\\<rparr> \\<subseteq>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr>", "have SR: \"S\\<lparr>ArrVal\\<rparr> \\<subseteq>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr>\""], ["proof (prove)\nusing this:\n  S\\<lparr>ArrVal\\<rparr> \\<subseteq>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. S\\<lparr>ArrVal\\<rparr>\n    \\<subseteq>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr>", "."], ["proof (state)\nthis:\n  S\\<lparr>ArrVal\\<rparr> \\<subseteq>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>f g a.\n       \\<lbrakk>f : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> a;\n        g : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> a;\n        T \\<circ>\\<^sub>A\\<^bsub>op_smc (smc_Par \\<alpha>)\\<^esub> f =\n        T \\<circ>\\<^sub>A\\<^bsub>op_smc (smc_Par \\<alpha>)\\<^esub>\n        g\\<rbrakk>\n       \\<Longrightarrow> f = g", "from prems"], ["proof (chain)\npicking this:\n  R : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> a\n  S : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> a\n  T \\<circ>\\<^sub>A\\<^bsub>op_smc (smc_Par \\<alpha>)\\<^esub> R =\n  T \\<circ>\\<^sub>A\\<^bsub>op_smc (smc_Par \\<alpha>)\\<^esub> S", "show \"R = S\""], ["proof (prove)\nusing this:\n  R : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> a\n  S : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> a\n  T \\<circ>\\<^sub>A\\<^bsub>op_smc (smc_Par \\<alpha>)\\<^esub> R =\n  T \\<circ>\\<^sub>A\\<^bsub>op_smc (smc_Par \\<alpha>)\\<^esub> S\n\ngoal (1 subgoal):\n 1. R = S", "by (intro arr_Par_eqI[of \\<alpha> R S])\n      (auto simp: RS SR vsubset_antisym elim!: smc_Par_is_arrE)"], ["proof (state)\nthis:\n  R = S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smc_Par_is_epic_arrD:\n  assumes \"T : A \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>smc_Par \\<alpha>\\<^esub> B\"\n  shows \"T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\" and \"\\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B &&&\n    \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "proof-"], ["proof (state)\ngoal (2 subgoals):\n 1. T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n 2. \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "interpret semicategory \\<alpha> \\<open>smc_Par \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (smc_Par \\<alpha>)", "by (rule semicategory_smc_Par)"], ["proof (state)\ngoal (2 subgoals):\n 1. T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n 2. \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "from assms"], ["proof (chain)\npicking this:\n  T : A \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "show T: \"T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\""], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "unfolding is_epic_arr_def"], ["proof (prove)\nusing this:\n  T : B \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>op_smc (smc_Par \\<alpha>)\\<^esub> A\n\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "by (auto simp: op_smc_is_arr)"], ["proof (state)\nthis:\n  T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "interpret T: arr_Par \\<alpha> T\n    rewrites [simp]: \"T\\<lparr>ArrDom\\<rparr> = A\" and [simp]: \"T\\<lparr>ArrCod\\<rparr> = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Par \\<alpha> T &&&\n    T\\<lparr>ArrDom\\<rparr> = A &&& T\\<lparr>ArrCod\\<rparr> = B", "using T"], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. arr_Par \\<alpha> T &&&\n    T\\<lparr>ArrDom\\<rparr> = A &&& T\\<lparr>ArrCod\\<rparr> = B", "by (auto elim: smc_Par_is_arrE)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "show \"\\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "proof(intro vsubset_antisym vsubsetI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> B\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> B \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)", "from T.arr_Rel_ArrVal_vrange"], ["proof (chain)\npicking this:\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> B", "show \"y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow> y \\<in>\\<^sub>\\<circ> B\" for y"], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> B\n\ngoal (1 subgoal):\n 1. y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                           (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n    y \\<in>\\<^sub>\\<circ> B", "by auto"], ["proof (state)\nthis:\n  ?y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                          (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n  ?y \\<in>\\<^sub>\\<circ> B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> B \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)", "fix b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> B \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)", "assume [intro]: \"b \\<in>\\<^sub>\\<circ> B\""], ["proof (state)\nthis:\n  b \\<in>\\<^sub>\\<circ> B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> B \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)", "show \"b \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)", "proof(rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. b \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n    False", "assume prems: \"b \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\""], ["proof (state)\nthis:\n  b \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n\ngoal (1 subgoal):\n 1. b \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n    False", "define R where \"R = [set {\\<langle>b, 0\\<rangle>}, B, set {0, 1}]\\<^sub>\\<circ>\""], ["proof (state)\nthis:\n  R =\n  [ZFC_in_HOL.set {\\<langle>b, []\\<^sub>\\<circ>\\<rangle>}, B,\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}]\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. b \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n    False", "define S where \"S = [set {\\<langle>b, 1\\<rangle>}, B, set {0, 1}]\\<^sub>\\<circ>\""], ["proof (state)\nthis:\n  S =\n  [ZFC_in_HOL.set {\\<langle>b, 1\\<rangle>}, B,\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}]\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. b \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n    False", "have R: \"R : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> set {0, 1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> ZFC_in_HOL.set\n               {[]\\<^sub>\\<circ>, 1}", "unfolding R_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. [ZFC_in_HOL.set {\\<langle>b, []\\<^sub>\\<circ>\\<rangle>}, B,\n     ZFC_in_HOL.set\n      {[]\\<^sub>\\<circ>,\n       1}]\\<^sub>\\<circ> : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> ZFC_in_HOL.set\n                                  {[]\\<^sub>\\<circ>, 1}", "proof(intro smc_Par_is_arrI arr_Par_vfsequenceI, unfold arr_Rel_components)"], ["proof (state)\ngoal (7 subgoals):\n 1. vsv (ZFC_in_HOL.set {\\<langle>b, []\\<^sub>\\<circ>\\<rangle>})\n 2. \\<D>\\<^sub>\\<circ>\n     (ZFC_in_HOL.set {\\<langle>b, []\\<^sub>\\<circ>\\<rangle>})\n    \\<subseteq>\\<^sub>\\<circ> B\n 3. \\<R>\\<^sub>\\<circ>\n     (ZFC_in_HOL.set {\\<langle>b, []\\<^sub>\\<circ>\\<rangle>})\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}\n 4. B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 5. ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 6. B = B\n 7. ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1} =\n    ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}", "from Axiom_of_Infinity vone_in_omega"], ["proof (chain)\npicking this:\n  \\<omega> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  1 \\<in>\\<^sub>\\<circ> \\<omega>", "show \"set {0, 1} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  \\<omega> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  1 \\<in>\\<^sub>\\<circ> \\<omega>\n\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1} \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by blast"], ["proof (state)\nthis:\n  ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (6 subgoals):\n 1. vsv (ZFC_in_HOL.set {\\<langle>b, []\\<^sub>\\<circ>\\<rangle>})\n 2. \\<D>\\<^sub>\\<circ>\n     (ZFC_in_HOL.set {\\<langle>b, []\\<^sub>\\<circ>\\<rangle>})\n    \\<subseteq>\\<^sub>\\<circ> B\n 3. \\<R>\\<^sub>\\<circ>\n     (ZFC_in_HOL.set {\\<langle>b, []\\<^sub>\\<circ>\\<rangle>})\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}\n 4. B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 5. B = B\n 6. ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1} =\n    ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}", "qed (auto simp: T.arr_Rel_ArrCod_in_Vset)"], ["proof (state)\nthis:\n  R : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> ZFC_in_HOL.set\n             {[]\\<^sub>\\<circ>, 1}\n\ngoal (1 subgoal):\n 1. b \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n    False", "have S: \"S : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> set {0, 1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> ZFC_in_HOL.set\n               {[]\\<^sub>\\<circ>, 1}", "unfolding S_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. [ZFC_in_HOL.set {\\<langle>b, 1\\<rangle>}, B,\n     ZFC_in_HOL.set\n      {[]\\<^sub>\\<circ>,\n       1}]\\<^sub>\\<circ> : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> ZFC_in_HOL.set\n                                  {[]\\<^sub>\\<circ>, 1}", "proof(intro smc_Par_is_arrI arr_Par_vfsequenceI, unfold arr_Rel_components)"], ["proof (state)\ngoal (7 subgoals):\n 1. vsv (ZFC_in_HOL.set {\\<langle>b, 1\\<rangle>})\n 2. \\<D>\\<^sub>\\<circ> (ZFC_in_HOL.set {\\<langle>b, 1\\<rangle>})\n    \\<subseteq>\\<^sub>\\<circ> B\n 3. \\<R>\\<^sub>\\<circ> (ZFC_in_HOL.set {\\<langle>b, 1\\<rangle>})\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}\n 4. B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 5. ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 6. B = B\n 7. ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1} =\n    ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}", "from Axiom_of_Infinity vone_in_omega"], ["proof (chain)\npicking this:\n  \\<omega> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  1 \\<in>\\<^sub>\\<circ> \\<omega>", "show \"set {0, 1} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  \\<omega> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  1 \\<in>\\<^sub>\\<circ> \\<omega>\n\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1} \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by blast"], ["proof (state)\nthis:\n  ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (6 subgoals):\n 1. vsv (ZFC_in_HOL.set {\\<langle>b, 1\\<rangle>})\n 2. \\<D>\\<^sub>\\<circ> (ZFC_in_HOL.set {\\<langle>b, 1\\<rangle>})\n    \\<subseteq>\\<^sub>\\<circ> B\n 3. \\<R>\\<^sub>\\<circ> (ZFC_in_HOL.set {\\<langle>b, 1\\<rangle>})\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}\n 4. B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 5. B = B\n 6. ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1} =\n    ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}", "qed (auto simp: T.arr_Rel_ArrCod_in_Vset)"], ["proof (state)\nthis:\n  S : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> ZFC_in_HOL.set\n             {[]\\<^sub>\\<circ>, 1}\n\ngoal (1 subgoal):\n 1. b \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n    False", "from prems"], ["proof (chain)\npicking this:\n  b \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)", "have \"R\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> = 0\""], ["proof (prove)\nusing this:\n  b \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n\ngoal (1 subgoal):\n 1. R\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> =\n    []\\<^sub>\\<circ>", "unfolding R_def arr_Rel_components"], ["proof (prove)\nusing this:\n  b \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set\n     {\\<langle>b, []\\<^sub>\\<circ>\\<rangle>} \\<circ>\\<^sub>\\<circ>\n    T\\<lparr>ArrVal\\<rparr> =\n    []\\<^sub>\\<circ>", "by (auto intro!: vsubset_antisym vsubsetI)"], ["proof (state)\nthis:\n  R\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> =\n  []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. b \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  R\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> =\n  []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. b \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n    False", "from prems"], ["proof (chain)\npicking this:\n  b \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)", "have \"S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> = 0\""], ["proof (prove)\nusing this:\n  b \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n\ngoal (1 subgoal):\n 1. S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> =\n    []\\<^sub>\\<circ>", "unfolding S_def arr_Rel_components"], ["proof (prove)\nusing this:\n  b \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set {\\<langle>b, 1\\<rangle>} \\<circ>\\<^sub>\\<circ>\n    T\\<lparr>ArrVal\\<rparr> =\n    []\\<^sub>\\<circ>", "by (auto intro!: vsubset_antisym vsubsetI)"], ["proof (state)\nthis:\n  S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> =\n  []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. b \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  R\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> =\n  []\\<^sub>\\<circ>\n  S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> =\n  []\\<^sub>\\<circ>", "have \"R \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T = S \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T\""], ["proof (prove)\nusing this:\n  R\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> =\n  []\\<^sub>\\<circ>\n  S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> =\n  []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. R \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T =\n    S \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T", "unfolding smc_Par_Comp_app[OF R T] smc_Par_Comp_app[OF S T]"], ["proof (prove)\nusing this:\n  R\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> =\n  []\\<^sub>\\<circ>\n  S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> =\n  []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. R \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l T =\n    S \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l T", "by (simp add: R_def S_def arr_Rel_components comp_Rel_def)"], ["proof (state)\nthis:\n  R \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T =\n  S \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T\n\ngoal (1 subgoal):\n 1. b \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n    False", "from is_epic_arrD(2)[OF assms R S this]"], ["proof (chain)\npicking this:\n  R = S", "show False"], ["proof (prove)\nusing this:\n  R = S\n\ngoal (1 subgoal):\n 1. False", "unfolding R_def S_def"], ["proof (prove)\nusing this:\n  [ZFC_in_HOL.set {\\<langle>b, []\\<^sub>\\<circ>\\<rangle>}, B,\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}]\\<^sub>\\<circ> =\n  [ZFC_in_HOL.set {\\<langle>b, 1\\<rangle>}, B,\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}]\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  b \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"], ["", "lemma (in \\<Z>) smc_Par_is_epic_arr: \n  \"T : A \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>smc_Par \\<alpha>\\<^esub> B \\<longleftrightarrow> T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B \\<and> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>smc_Par \\<alpha>\\<^esub> B =\n    (T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B \\<and>\n     \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B)", "by (intro iffI) (simp_all add: smc_Par_is_epic_arrD smc_Par_is_epic_arrI)"], ["", "subsection\\<open>Terminal object, initial object and null object\\<close>"], ["", "lemma (in \\<Z>) smc_Par_obj_terminal: \"obj_terminal (smc_Par \\<alpha>) A \\<longleftrightarrow> A = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. obj_terminal (smc_Par \\<alpha>) A = (A = []\\<^sub>\\<circ>)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. obj_terminal (smc_Par \\<alpha>) A = (A = []\\<^sub>\\<circ>)", "interpret semicategory \\<alpha> \\<open>smc_Par \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (smc_Par \\<alpha>)", "by (rule semicategory_smc_Par)"], ["proof (state)\ngoal (1 subgoal):\n 1. obj_terminal (smc_Par \\<alpha>) A = (A = []\\<^sub>\\<circ>)", "have \"(\\<forall>A\\<in>\\<^sub>\\<circ>Vset \\<alpha>. \\<exists>!T. T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B) \\<longleftrightarrow> B = 0\" for B"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>A\\<in>elts (Vset \\<alpha>).\n        \\<exists>!T. T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B) =\n    (B = []\\<^sub>\\<circ>)", "proof(intro iffI allI ballI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>A\\<in>elts (Vset \\<alpha>).\n       \\<exists>!T.\n          T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B \\<Longrightarrow>\n    B = []\\<^sub>\\<circ>\n 2. \\<And>A.\n       \\<lbrakk>B = []\\<^sub>\\<circ>;\n        A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!T.\n                            T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "assume prems[rule_format]: \"\\<forall>A\\<in>\\<^sub>\\<circ>Vset \\<alpha>. \\<exists>!T. T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\""], ["proof (state)\nthis:\n  ?A \\<in>\\<^sub>\\<circ> Vset \\<alpha> \\<Longrightarrow>\n  Ex1 (is_arr (smc_Par \\<alpha>) ?A B)\n\ngoal (2 subgoals):\n 1. \\<forall>A\\<in>elts (Vset \\<alpha>).\n       \\<exists>!T.\n          T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B \\<Longrightarrow>\n    B = []\\<^sub>\\<circ>\n 2. \\<And>A.\n       \\<lbrakk>B = []\\<^sub>\\<circ>;\n        A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!T.\n                            T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "then"], ["proof (chain)\npicking this:\n  ?A \\<in>\\<^sub>\\<circ> Vset \\<alpha> \\<Longrightarrow>\n  Ex1 (is_arr (smc_Par \\<alpha>) ?A B)", "obtain T where \"T : 0 \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\""], ["proof (prove)\nusing this:\n  ?A \\<in>\\<^sub>\\<circ> Vset \\<alpha> \\<Longrightarrow>\n  Ex1 (is_arr (smc_Par \\<alpha>) ?A B)\n\ngoal (1 subgoal):\n 1. (\\<And>T.\n        T : []\\<^sub>\\<circ> \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (meson vempty_is_zet)"], ["proof (state)\nthis:\n  T : []\\<^sub>\\<circ> \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n\ngoal (2 subgoals):\n 1. \\<forall>A\\<in>elts (Vset \\<alpha>).\n       \\<exists>!T.\n          T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B \\<Longrightarrow>\n    B = []\\<^sub>\\<circ>\n 2. \\<And>A.\n       \\<lbrakk>B = []\\<^sub>\\<circ>;\n        A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!T.\n                            T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "then"], ["proof (chain)\npicking this:\n  T : []\\<^sub>\\<circ> \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "have [simp]: \"B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  T : []\\<^sub>\\<circ> \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. B \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (fastforce simp: smc_Par_components(1))"], ["proof (state)\nthis:\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (2 subgoals):\n 1. \\<forall>A\\<in>elts (Vset \\<alpha>).\n       \\<exists>!T.\n          T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B \\<Longrightarrow>\n    B = []\\<^sub>\\<circ>\n 2. \\<And>A.\n       \\<lbrakk>B = []\\<^sub>\\<circ>;\n        A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!T.\n                            T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "show \"B = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B = []\\<^sub>\\<circ>", "proof(rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. B \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow> False", "assume \"B \\<noteq> 0\""], ["proof (state)\nthis:\n  B \\<noteq> []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. B \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  B \\<noteq> []\\<^sub>\\<circ>", "obtain b where \"b \\<in>\\<^sub>\\<circ> B\""], ["proof (prove)\nusing this:\n  B \\<noteq> []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        b \\<in>\\<^sub>\\<circ> B \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using trad_foundation"], ["proof (prove)\nusing this:\n  B \\<noteq> []\\<^sub>\\<circ>\n  ?z \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n  \\<exists>w.\n     w \\<in>\\<^sub>\\<circ> ?z \\<and>\n     w \\<inter>\\<^sub>\\<circ> ?z = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        b \\<in>\\<^sub>\\<circ> B \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  b \\<in>\\<^sub>\\<circ> B\n\ngoal (1 subgoal):\n 1. B \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow> False", "have \"[set {\\<langle>0, b\\<rangle>}, set {0}, B]\\<^sub>\\<circ> : set {0} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>},\n     ZFC_in_HOL.set {[]\\<^sub>\\<circ>},\n     B]\\<^sub>\\<circ> : ZFC_in_HOL.set\n                         {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "by (intro smc_Par_is_arrI arr_Par_vfsequenceI, unfold arr_Rel_components)\n          (auto simp: \\<open>b \\<in>\\<^sub>\\<circ> B\\<close> vsubset_vsingleton_leftI)"], ["proof (state)\nthis:\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>},\n   B]\\<^sub>\\<circ> : ZFC_in_HOL.set\n                       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. B \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>},\n   B]\\<^sub>\\<circ> : ZFC_in_HOL.set\n                       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. B \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow> False", "have \"[0, set {0}, B]\\<^sub>\\<circ> : set {0} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [[]\\<^sub>\\<circ>, ZFC_in_HOL.set {[]\\<^sub>\\<circ>},\n     B]\\<^sub>\\<circ> : ZFC_in_HOL.set\n                         {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "by (intro smc_Par_is_arrI arr_Par_vfsequenceI, unfold arr_Rel_components)\n          (auto simp: \\<open>b \\<in>\\<^sub>\\<circ> B\\<close> vsubset_vsingleton_leftI)"], ["proof (state)\nthis:\n  [[]\\<^sub>\\<circ>, ZFC_in_HOL.set {[]\\<^sub>\\<circ>},\n   B]\\<^sub>\\<circ> : ZFC_in_HOL.set\n                       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. B \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  [[]\\<^sub>\\<circ>, ZFC_in_HOL.set {[]\\<^sub>\\<circ>},\n   B]\\<^sub>\\<circ> : ZFC_in_HOL.set\n                       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. B \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow> False", "have \"[set {\\<langle>0, b\\<rangle>}, set {0}, B]\\<^sub>\\<circ> \\<noteq> [0, set {0}, B]\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>},\n     ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ> \\<noteq>\n    [[]\\<^sub>\\<circ>, ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ> \\<noteq>\n  [[]\\<^sub>\\<circ>, ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. B \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>},\n   B]\\<^sub>\\<circ> : ZFC_in_HOL.set\n                       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n  [[]\\<^sub>\\<circ>, ZFC_in_HOL.set {[]\\<^sub>\\<circ>},\n   B]\\<^sub>\\<circ> : ZFC_in_HOL.set\n                       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ> \\<noteq>\n  [[]\\<^sub>\\<circ>, ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>", "show False"], ["proof (prove)\nusing this:\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>},\n   B]\\<^sub>\\<circ> : ZFC_in_HOL.set\n                       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n  [[]\\<^sub>\\<circ>, ZFC_in_HOL.set {[]\\<^sub>\\<circ>},\n   B]\\<^sub>\\<circ> : ZFC_in_HOL.set\n                       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ> \\<noteq>\n  [[]\\<^sub>\\<circ>, ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. False", "by (metis prems smc_is_arrE smc_Par_components(1))"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  B = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>B = []\\<^sub>\\<circ>;\n        A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!T.\n                            T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>B = []\\<^sub>\\<circ>;\n        A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!T.\n                            T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "fix A"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>B = []\\<^sub>\\<circ>;\n        A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!T.\n                            T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "assume [simp]: \"B = 0\" \"A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (state)\nthis:\n  B = []\\<^sub>\\<circ>\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>B = []\\<^sub>\\<circ>;\n        A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!T.\n                            T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "show \"\\<exists>!T. T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!T. T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "proof(intro ex1I [of _ \\<open>[0, A, 0]\\<^sub>\\<circ>\\<close>])"], ["proof (state)\ngoal (2 subgoals):\n 1. [[]\\<^sub>\\<circ>, A,\n     []\\<^sub>\\<circ>]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n 2. \\<And>T.\n       T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B \\<Longrightarrow>\n       T = [[]\\<^sub>\\<circ>, A, []\\<^sub>\\<circ>]\\<^sub>\\<circ>", "show zAz: \"[0, A, 0]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [[]\\<^sub>\\<circ>, A,\n     []\\<^sub>\\<circ>]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "by \n          ( \n            intro smc_Par_is_arrI arr_Par_vfsequenceI, \n            unfold arr_Rel_components\n          ) \n          simp_all"], ["proof (state)\nthis:\n  [[]\\<^sub>\\<circ>, A,\n   []\\<^sub>\\<circ>]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. \\<And>T.\n       T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B \\<Longrightarrow>\n       T = [[]\\<^sub>\\<circ>, A, []\\<^sub>\\<circ>]\\<^sub>\\<circ>", "show \"T = [0, A, 0]\\<^sub>\\<circ>\" if \"T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\" for T"], ["proof (prove)\ngoal (1 subgoal):\n 1. T = [[]\\<^sub>\\<circ>, A, []\\<^sub>\\<circ>]\\<^sub>\\<circ>", "proof(rule arr_Par_eqI[of \\<alpha>], unfold arr_Rel_components)"], ["proof (state)\ngoal (5 subgoals):\n 1. arr_Par \\<alpha> T\n 2. arr_Par \\<alpha> [[]\\<^sub>\\<circ>, A, []\\<^sub>\\<circ>]\\<^sub>\\<circ>\n 3. T\\<lparr>ArrVal\\<rparr> = []\\<^sub>\\<circ>\n 4. T\\<lparr>ArrDom\\<rparr> = A\n 5. T\\<lparr>ArrCod\\<rparr> = []\\<^sub>\\<circ>", "interpret arr_Par \\<alpha> T"], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Par \\<alpha> T", "using that"], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. arr_Par \\<alpha> T", "by (simp add: smc_Par_is_arrD(1))"], ["proof (state)\ngoal (5 subgoals):\n 1. arr_Par \\<alpha> T\n 2. arr_Par \\<alpha> [[]\\<^sub>\\<circ>, A, []\\<^sub>\\<circ>]\\<^sub>\\<circ>\n 3. T\\<lparr>ArrVal\\<rparr> = []\\<^sub>\\<circ>\n 4. T\\<lparr>ArrDom\\<rparr> = A\n 5. T\\<lparr>ArrCod\\<rparr> = []\\<^sub>\\<circ>", "from zAz"], ["proof (chain)\npicking this:\n  [[]\\<^sub>\\<circ>, A,\n   []\\<^sub>\\<circ>]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "show \"arr_Par \\<alpha> [0, A, 0]\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  [[]\\<^sub>\\<circ>, A,\n   []\\<^sub>\\<circ>]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. arr_Par \\<alpha> [[]\\<^sub>\\<circ>, A, []\\<^sub>\\<circ>]\\<^sub>\\<circ>", "by (auto elim: smc_Par_is_arrE)"], ["proof (state)\nthis:\n  arr_Par \\<alpha> [[]\\<^sub>\\<circ>, A, []\\<^sub>\\<circ>]\\<^sub>\\<circ>\n\ngoal (4 subgoals):\n 1. arr_Par \\<alpha> T\n 2. T\\<lparr>ArrVal\\<rparr> = []\\<^sub>\\<circ>\n 3. T\\<lparr>ArrDom\\<rparr> = A\n 4. T\\<lparr>ArrCod\\<rparr> = []\\<^sub>\\<circ>", "from arr_Par_axioms that"], ["proof (chain)\npicking this:\n  arr_Par \\<alpha> T\n  T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "show \"T\\<lparr>ArrVal\\<rparr> = 0\""], ["proof (prove)\nusing this:\n  arr_Par \\<alpha> T\n  T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. T\\<lparr>ArrVal\\<rparr> = []\\<^sub>\\<circ>", "by (clarsimp simp: vsv.vsv_vrange_vempty smc_Par_is_arrD(3))"], ["proof (state)\nthis:\n  T\\<lparr>ArrVal\\<rparr> = []\\<^sub>\\<circ>\n\ngoal (3 subgoals):\n 1. arr_Par \\<alpha> T\n 2. T\\<lparr>ArrDom\\<rparr> = A\n 3. T\\<lparr>ArrCod\\<rparr> = []\\<^sub>\\<circ>", "qed (use that in \\<open>auto dest: smc_Par_is_arrD\\<close>)"], ["proof (state)\nthis:\n  ?T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B \\<Longrightarrow>\n  ?T = [[]\\<^sub>\\<circ>, A, []\\<^sub>\\<circ>]\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>!T. T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<forall>A\\<in>elts (Vset \\<alpha>).\n      \\<exists>!T. T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> ?B) =\n  (?B = []\\<^sub>\\<circ>)\n\ngoal (1 subgoal):\n 1. obj_terminal (smc_Par \\<alpha>) A = (A = []\\<^sub>\\<circ>)", "then"], ["proof (chain)\npicking this:\n  (\\<forall>A\\<in>elts (Vset \\<alpha>).\n      \\<exists>!T. T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> ?B) =\n  (?B = []\\<^sub>\\<circ>)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<forall>A\\<in>elts (Vset \\<alpha>).\n      \\<exists>!T. T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> ?B) =\n  (?B = []\\<^sub>\\<circ>)\n\ngoal (1 subgoal):\n 1. obj_terminal (smc_Par \\<alpha>) A = (A = []\\<^sub>\\<circ>)", "apply(intro iffI obj_terminalI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>B.\n                (\\<forall>A\\<in>elts (Vset \\<alpha>).\n                    \\<exists>!T.\n                       T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B) =\n                (B = []\\<^sub>\\<circ>);\n     obj_terminal (smc_Par \\<alpha>) A\\<rbrakk>\n    \\<Longrightarrow> A = []\\<^sub>\\<circ>\n 2. \\<lbrakk>\\<And>B.\n                (\\<forall>A\\<in>elts (Vset \\<alpha>).\n                    \\<exists>!T.\n                       T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B) =\n                (B = []\\<^sub>\\<circ>);\n     A = []\\<^sub>\\<circ>\\<rbrakk>\n    \\<Longrightarrow> A \\<in>\\<^sub>\\<circ> smc_Par\n       \\<alpha>\\<lparr>Obj\\<rparr>\n 3. \\<And>a.\n       \\<lbrakk>\\<And>B.\n                   (\\<forall>A\\<in>elts (Vset \\<alpha>).\n                       \\<exists>!T.\n                          T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B) =\n                   (B = []\\<^sub>\\<circ>);\n        A = []\\<^sub>\\<circ>;\n        a \\<in>\\<^sub>\\<circ> smc_Par \\<alpha>\\<lparr>Obj\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> Ex1 (is_arr (smc_Par \\<alpha>) a A)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>B.\n                (\\<forall>A\\<in>elts (Vset \\<alpha>).\n                    \\<exists>!T.\n                       T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B) =\n                (B = []\\<^sub>\\<circ>);\n     obj_terminal (smc_Par \\<alpha>) A\\<rbrakk>\n    \\<Longrightarrow> A = []\\<^sub>\\<circ>", "by (metis smc_is_arrD(2) obj_terminalE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>B.\n                (\\<forall>A\\<in>elts (Vset \\<alpha>).\n                    \\<exists>!T.\n                       T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B) =\n                (B = []\\<^sub>\\<circ>);\n     A = []\\<^sub>\\<circ>\\<rbrakk>\n    \\<Longrightarrow> A \\<in>\\<^sub>\\<circ> smc_Par\n       \\<alpha>\\<lparr>Obj\\<rparr>\n 2. \\<And>a.\n       \\<lbrakk>\\<And>B.\n                   (\\<forall>A\\<in>elts (Vset \\<alpha>).\n                       \\<exists>!T.\n                          T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B) =\n                   (B = []\\<^sub>\\<circ>);\n        A = []\\<^sub>\\<circ>;\n        a \\<in>\\<^sub>\\<circ> smc_Par \\<alpha>\\<lparr>Obj\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> Ex1 (is_arr (smc_Par \\<alpha>) a A)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>B.\n                (\\<forall>A\\<in>elts (Vset \\<alpha>).\n                    \\<exists>!T.\n                       T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B) =\n                (B = []\\<^sub>\\<circ>);\n     A = []\\<^sub>\\<circ>\\<rbrakk>\n    \\<Longrightarrow> A \\<in>\\<^sub>\\<circ> smc_Par\n       \\<alpha>\\<lparr>Obj\\<rparr>", "by blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>\\<And>B.\n                   (\\<forall>A\\<in>elts (Vset \\<alpha>).\n                       \\<exists>!T.\n                          T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B) =\n                   (B = []\\<^sub>\\<circ>);\n        A = []\\<^sub>\\<circ>;\n        a \\<in>\\<^sub>\\<circ> smc_Par \\<alpha>\\<lparr>Obj\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> Ex1 (is_arr (smc_Par \\<alpha>) a A)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>B.\n                (\\<forall>A\\<in>elts (Vset \\<alpha>).\n                    \\<exists>!T.\n                       T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B) =\n                (B = []\\<^sub>\\<circ>);\n     A = []\\<^sub>\\<circ>;\n     a_ \\<in>\\<^sub>\\<circ> smc_Par \\<alpha>\\<lparr>Obj\\<rparr>\\<rbrakk>\n    \\<Longrightarrow> Ex1 (is_arr (smc_Par \\<alpha>) a_ A)", "by (metis smc_Par_components(1))"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  obj_terminal (smc_Par \\<alpha>) A = (A = []\\<^sub>\\<circ>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in \\<Z>) smc_Par_obj_initial: \"obj_initial (smc_Par \\<alpha>) A \\<longleftrightarrow> A = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. obj_initial (smc_Par \\<alpha>) A = (A = []\\<^sub>\\<circ>)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. obj_initial (smc_Par \\<alpha>) A = (A = []\\<^sub>\\<circ>)", "interpret Par: semicategory \\<alpha> \\<open>smc_Par \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (smc_Par \\<alpha>)", "by (rule semicategory_smc_Par)"], ["proof (state)\ngoal (1 subgoal):\n 1. obj_initial (smc_Par \\<alpha>) A = (A = []\\<^sub>\\<circ>)", "have \"(\\<forall>B\\<in>\\<^sub>\\<circ>Vset \\<alpha>. \\<exists>!T. T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B) \\<longleftrightarrow> (A = 0)\" for A"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>B\\<in>elts (Vset \\<alpha>).\n        \\<exists>!T. T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B) =\n    (A = []\\<^sub>\\<circ>)", "proof(intro iffI allI ballI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>B\\<in>elts (Vset \\<alpha>).\n       \\<exists>!T.\n          T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B \\<Longrightarrow>\n    A = []\\<^sub>\\<circ>\n 2. \\<And>B.\n       \\<lbrakk>A = []\\<^sub>\\<circ>;\n        B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!T.\n                            T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "assume prems[rule_format]: \"\\<forall>B\\<in>\\<^sub>\\<circ>Vset \\<alpha>. \\<exists>!T. T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\""], ["proof (state)\nthis:\n  ?B \\<in>\\<^sub>\\<circ> Vset \\<alpha> \\<Longrightarrow>\n  Ex1 (is_arr (smc_Par \\<alpha>) A ?B)\n\ngoal (2 subgoals):\n 1. \\<forall>B\\<in>elts (Vset \\<alpha>).\n       \\<exists>!T.\n          T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B \\<Longrightarrow>\n    A = []\\<^sub>\\<circ>\n 2. \\<And>B.\n       \\<lbrakk>A = []\\<^sub>\\<circ>;\n        B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!T.\n                            T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "then"], ["proof (chain)\npicking this:\n  ?B \\<in>\\<^sub>\\<circ> Vset \\<alpha> \\<Longrightarrow>\n  Ex1 (is_arr (smc_Par \\<alpha>) A ?B)", "obtain T where \"T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> 0\""], ["proof (prove)\nusing this:\n  ?B \\<in>\\<^sub>\\<circ> Vset \\<alpha> \\<Longrightarrow>\n  Ex1 (is_arr (smc_Par \\<alpha>) A ?B)\n\ngoal (1 subgoal):\n 1. (\\<And>T.\n        T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> []\\<^sub>\\<circ> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (meson vempty_is_zet)"], ["proof (state)\nthis:\n  T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> []\\<^sub>\\<circ>\n\ngoal (2 subgoals):\n 1. \\<forall>B\\<in>elts (Vset \\<alpha>).\n       \\<exists>!T.\n          T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B \\<Longrightarrow>\n    A = []\\<^sub>\\<circ>\n 2. \\<And>B.\n       \\<lbrakk>A = []\\<^sub>\\<circ>;\n        B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!T.\n                            T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "then"], ["proof (chain)\npicking this:\n  T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> []\\<^sub>\\<circ>", "have [simp]: \"A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. A \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (fastforce simp: smc_Par_components(1))"], ["proof (state)\nthis:\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (2 subgoals):\n 1. \\<forall>B\\<in>elts (Vset \\<alpha>).\n       \\<exists>!T.\n          T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B \\<Longrightarrow>\n    A = []\\<^sub>\\<circ>\n 2. \\<And>B.\n       \\<lbrakk>A = []\\<^sub>\\<circ>;\n        B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!T.\n                            T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "show \"A = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = []\\<^sub>\\<circ>", "proof(rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. A \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow> False", "assume \"A \\<noteq> 0\""], ["proof (state)\nthis:\n  A \\<noteq> []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. A \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  A \\<noteq> []\\<^sub>\\<circ>", "obtain a where \"a \\<in>\\<^sub>\\<circ> A\""], ["proof (prove)\nusing this:\n  A \\<noteq> []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        a \\<in>\\<^sub>\\<circ> A \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using trad_foundation"], ["proof (prove)\nusing this:\n  A \\<noteq> []\\<^sub>\\<circ>\n  ?z \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n  \\<exists>w.\n     w \\<in>\\<^sub>\\<circ> ?z \\<and>\n     w \\<inter>\\<^sub>\\<circ> ?z = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        a \\<in>\\<^sub>\\<circ> A \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. A \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow> False", "have \"[set {\\<langle>a, 0\\<rangle>}, A, set {0}]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> set {0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [ZFC_in_HOL.set {\\<langle>a, []\\<^sub>\\<circ>\\<rangle>}, A,\n     ZFC_in_HOL.set\n      {[]\\<^sub>\\<circ>}]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> ZFC_in_HOL.set\n           {[]\\<^sub>\\<circ>}", "by (intro smc_Par_is_arrI arr_Par_vfsequenceI, unfold arr_Rel_components)\n          (auto simp: \\<open>a \\<in>\\<^sub>\\<circ> A\\<close> vsubset_vsingleton_leftI)"], ["proof (state)\nthis:\n  [ZFC_in_HOL.set {\\<langle>a, []\\<^sub>\\<circ>\\<rangle>}, A,\n   ZFC_in_HOL.set\n    {[]\\<^sub>\\<circ>}]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> ZFC_in_HOL.set\n         {[]\\<^sub>\\<circ>}\n\ngoal (1 subgoal):\n 1. A \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  [ZFC_in_HOL.set {\\<langle>a, []\\<^sub>\\<circ>\\<rangle>}, A,\n   ZFC_in_HOL.set\n    {[]\\<^sub>\\<circ>}]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> ZFC_in_HOL.set\n         {[]\\<^sub>\\<circ>}\n\ngoal (1 subgoal):\n 1. A \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow> False", "have \"[0, A, set {0}]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> set {0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [[]\\<^sub>\\<circ>, A,\n     ZFC_in_HOL.set\n      {[]\\<^sub>\\<circ>}]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> ZFC_in_HOL.set\n           {[]\\<^sub>\\<circ>}", "by (intro smc_Par_is_arrI arr_Par_vfsequenceI, unfold arr_Rel_components)\n          (auto simp: \\<open>a \\<in>\\<^sub>\\<circ> A\\<close> vsubset_vsingleton_leftI)"], ["proof (state)\nthis:\n  [[]\\<^sub>\\<circ>, A,\n   ZFC_in_HOL.set\n    {[]\\<^sub>\\<circ>}]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> ZFC_in_HOL.set\n         {[]\\<^sub>\\<circ>}\n\ngoal (1 subgoal):\n 1. A \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  [[]\\<^sub>\\<circ>, A,\n   ZFC_in_HOL.set\n    {[]\\<^sub>\\<circ>}]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> ZFC_in_HOL.set\n         {[]\\<^sub>\\<circ>}\n\ngoal (1 subgoal):\n 1. A \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow> False", "have \"[set {\\<langle>a, 0\\<rangle>}, A, set {0}]\\<^sub>\\<circ> \\<noteq> [0, A, set {0}]\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [ZFC_in_HOL.set {\\<langle>a, []\\<^sub>\\<circ>\\<rangle>}, A,\n     ZFC_in_HOL.set {[]\\<^sub>\\<circ>}]\\<^sub>\\<circ> \\<noteq>\n    [[]\\<^sub>\\<circ>, A, ZFC_in_HOL.set {[]\\<^sub>\\<circ>}]\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  [ZFC_in_HOL.set {\\<langle>a, []\\<^sub>\\<circ>\\<rangle>}, A,\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>}]\\<^sub>\\<circ> \\<noteq>\n  [[]\\<^sub>\\<circ>, A, ZFC_in_HOL.set {[]\\<^sub>\\<circ>}]\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. A \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  [ZFC_in_HOL.set {\\<langle>a, []\\<^sub>\\<circ>\\<rangle>}, A,\n   ZFC_in_HOL.set\n    {[]\\<^sub>\\<circ>}]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> ZFC_in_HOL.set\n         {[]\\<^sub>\\<circ>}\n  [[]\\<^sub>\\<circ>, A,\n   ZFC_in_HOL.set\n    {[]\\<^sub>\\<circ>}]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> ZFC_in_HOL.set\n         {[]\\<^sub>\\<circ>}\n  [ZFC_in_HOL.set {\\<langle>a, []\\<^sub>\\<circ>\\<rangle>}, A,\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>}]\\<^sub>\\<circ> \\<noteq>\n  [[]\\<^sub>\\<circ>, A, ZFC_in_HOL.set {[]\\<^sub>\\<circ>}]\\<^sub>\\<circ>", "show False"], ["proof (prove)\nusing this:\n  [ZFC_in_HOL.set {\\<langle>a, []\\<^sub>\\<circ>\\<rangle>}, A,\n   ZFC_in_HOL.set\n    {[]\\<^sub>\\<circ>}]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> ZFC_in_HOL.set\n         {[]\\<^sub>\\<circ>}\n  [[]\\<^sub>\\<circ>, A,\n   ZFC_in_HOL.set\n    {[]\\<^sub>\\<circ>}]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> ZFC_in_HOL.set\n         {[]\\<^sub>\\<circ>}\n  [ZFC_in_HOL.set {\\<langle>a, []\\<^sub>\\<circ>\\<rangle>}, A,\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>}]\\<^sub>\\<circ> \\<noteq>\n  [[]\\<^sub>\\<circ>, A, ZFC_in_HOL.set {[]\\<^sub>\\<circ>}]\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. False", "by (metis prems Par.smc_is_arrE smc_Par_components(1))"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  A = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       \\<lbrakk>A = []\\<^sub>\\<circ>;\n        B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!T.\n                            T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B.\n       \\<lbrakk>A = []\\<^sub>\\<circ>;\n        B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!T.\n                            T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "fix B"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B.\n       \\<lbrakk>A = []\\<^sub>\\<circ>;\n        B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!T.\n                            T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "assume prems[simp]: \"A = 0\" \"B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (state)\nthis:\n  A = []\\<^sub>\\<circ>\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       \\<lbrakk>A = []\\<^sub>\\<circ>;\n        B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!T.\n                            T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "show \"\\<exists>!T. T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!T. T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "proof(intro ex1I[of _ \\<open>[0, 0, B]\\<^sub>\\<circ>\\<close>])"], ["proof (state)\ngoal (2 subgoals):\n 1. [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n     B]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n 2. \\<And>T.\n       T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B \\<Longrightarrow>\n       T = [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, B]\\<^sub>\\<circ>", "show zzB: \"[0, 0, B]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n     B]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "by \n          ( \n            intro smc_Par_is_arrI arr_Par_vfsequenceI, \n            unfold arr_Rel_components\n          ) \n          simp_all"], ["proof (state)\nthis:\n  [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n   B]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. \\<And>T.\n       T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B \\<Longrightarrow>\n       T = [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, B]\\<^sub>\\<circ>", "show \"T = [0, 0, B]\\<^sub>\\<circ>\" if \"T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\" for T"], ["proof (prove)\ngoal (1 subgoal):\n 1. T = [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, B]\\<^sub>\\<circ>", "proof(rule arr_Par_eqI[of \\<alpha>], unfold arr_Rel_components)"], ["proof (state)\ngoal (5 subgoals):\n 1. arr_Par \\<alpha> T\n 2. arr_Par \\<alpha> [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, B]\\<^sub>\\<circ>\n 3. T\\<lparr>ArrVal\\<rparr> = []\\<^sub>\\<circ>\n 4. T\\<lparr>ArrDom\\<rparr> = []\\<^sub>\\<circ>\n 5. T\\<lparr>ArrCod\\<rparr> = B", "interpret arr_Par \\<alpha> T"], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Par \\<alpha> T", "using that"], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. arr_Par \\<alpha> T", "by (simp add: smc_Par_is_arrD(1))"], ["proof (state)\ngoal (5 subgoals):\n 1. arr_Par \\<alpha> T\n 2. arr_Par \\<alpha> [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, B]\\<^sub>\\<circ>\n 3. T\\<lparr>ArrVal\\<rparr> = []\\<^sub>\\<circ>\n 4. T\\<lparr>ArrDom\\<rparr> = []\\<^sub>\\<circ>\n 5. T\\<lparr>ArrCod\\<rparr> = B", "show \"arr_Par \\<alpha> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Par \\<alpha> T", "by (rule arr_Par_axioms)"], ["proof (state)\nthis:\n  arr_Par \\<alpha> T\n\ngoal (4 subgoals):\n 1. arr_Par \\<alpha> [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, B]\\<^sub>\\<circ>\n 2. T\\<lparr>ArrVal\\<rparr> = []\\<^sub>\\<circ>\n 3. T\\<lparr>ArrDom\\<rparr> = []\\<^sub>\\<circ>\n 4. T\\<lparr>ArrCod\\<rparr> = B", "from zzB"], ["proof (chain)\npicking this:\n  [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n   B]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "show \"arr_Par \\<alpha> [0, 0, B]\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n   B]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. arr_Par \\<alpha> [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, B]\\<^sub>\\<circ>", "by (auto elim: smc_Par_is_arrE)"], ["proof (state)\nthis:\n  arr_Par \\<alpha> [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, B]\\<^sub>\\<circ>\n\ngoal (3 subgoals):\n 1. T\\<lparr>ArrVal\\<rparr> = []\\<^sub>\\<circ>\n 2. T\\<lparr>ArrDom\\<rparr> = []\\<^sub>\\<circ>\n 3. T\\<lparr>ArrCod\\<rparr> = B", "from arr_Par_axioms that"], ["proof (chain)\npicking this:\n  arr_Par \\<alpha> T\n  T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "show \"T\\<lparr>ArrVal\\<rparr> = 0\""], ["proof (prove)\nusing this:\n  arr_Par \\<alpha> T\n  T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. T\\<lparr>ArrVal\\<rparr> = []\\<^sub>\\<circ>", "by (elim smc_Par_is_arrE arr_ParE)\n            (\n              auto \n                intro: ArrVal.vsv_vrange_vempty \n                simp: ArrVal.vdomain_vrange_is_vempty\n            )"], ["proof (state)\nthis:\n  T\\<lparr>ArrVal\\<rparr> = []\\<^sub>\\<circ>\n\ngoal (2 subgoals):\n 1. T\\<lparr>ArrDom\\<rparr> = []\\<^sub>\\<circ>\n 2. T\\<lparr>ArrCod\\<rparr> = B", "qed (use that in \\<open>auto dest: smc_Par_is_arrD\\<close>)"], ["proof (state)\nthis:\n  ?T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B \\<Longrightarrow>\n  ?T = [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, B]\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>!T. T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<forall>B\\<in>elts (Vset \\<alpha>).\n      \\<exists>!T. T : ?A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B) =\n  (?A = []\\<^sub>\\<circ>)\n\ngoal (1 subgoal):\n 1. obj_initial (smc_Par \\<alpha>) A = (A = []\\<^sub>\\<circ>)", "then"], ["proof (chain)\npicking this:\n  (\\<forall>B\\<in>elts (Vset \\<alpha>).\n      \\<exists>!T. T : ?A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B) =\n  (?A = []\\<^sub>\\<circ>)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<forall>B\\<in>elts (Vset \\<alpha>).\n      \\<exists>!T. T : ?A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B) =\n  (?A = []\\<^sub>\\<circ>)\n\ngoal (1 subgoal):\n 1. obj_initial (smc_Par \\<alpha>) A = (A = []\\<^sub>\\<circ>)", "unfolding obj_initial_def"], ["proof (prove)\nusing this:\n  (\\<forall>B\\<in>elts (Vset \\<alpha>).\n      \\<exists>!T. T : ?A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B) =\n  (?A = []\\<^sub>\\<circ>)\n\ngoal (1 subgoal):\n 1. obj_terminal (op_smc (smc_Par \\<alpha>)) A = (A = []\\<^sub>\\<circ>)", "apply(intro iffI obj_terminalI, elim obj_terminalE, unfold smc_op_simps)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>A.\n                (\\<forall>B\\<in>elts (Vset \\<alpha>).\n                    \\<exists>!T.\n                       T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B) =\n                (A = []\\<^sub>\\<circ>);\n     \\<And>A.\n        (\\<forall>B\\<in>elts (Vset \\<alpha>).\n            \\<exists>!T.\n               T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B) =\n        (A = []\\<^sub>\\<circ>);\n     A \\<in>\\<^sub>\\<circ> smc_Par \\<alpha>\\<lparr>Obj\\<rparr>;\n     \\<And>a.\n        a \\<in>\\<^sub>\\<circ> smc_Par\n                               \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n        Ex1 (is_arr (smc_Par \\<alpha>) A a);\n     \\<And>A.\n        (\\<forall>B\\<in>elts (Vset \\<alpha>).\n            \\<exists>!T.\n               T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B) =\n        (A = []\\<^sub>\\<circ>)\\<rbrakk>\n    \\<Longrightarrow> A = []\\<^sub>\\<circ>\n 2. \\<lbrakk>\\<And>A.\n                (\\<forall>B\\<in>elts (Vset \\<alpha>).\n                    \\<exists>!T.\n                       T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B) =\n                (A = []\\<^sub>\\<circ>);\n     A = []\\<^sub>\\<circ>;\n     \\<And>A.\n        (\\<forall>B\\<in>elts (Vset \\<alpha>).\n            \\<exists>!T.\n               T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B) =\n        (A = []\\<^sub>\\<circ>)\\<rbrakk>\n    \\<Longrightarrow> A \\<in>\\<^sub>\\<circ> smc_Par\n       \\<alpha>\\<lparr>Obj\\<rparr>\n 3. \\<And>a.\n       \\<lbrakk>\\<And>A.\n                   (\\<forall>B\\<in>elts (Vset \\<alpha>).\n                       \\<exists>!T.\n                          T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B) =\n                   (A = []\\<^sub>\\<circ>);\n        A = []\\<^sub>\\<circ>;\n        a \\<in>\\<^sub>\\<circ> smc_Par \\<alpha>\\<lparr>Obj\\<rparr>;\n        \\<And>A.\n           (\\<forall>B\\<in>elts (Vset \\<alpha>).\n               \\<exists>!T.\n                  T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B) =\n           (A = []\\<^sub>\\<circ>)\\<rbrakk>\n       \\<Longrightarrow> Ex1 (is_arr (smc_Par \\<alpha>) A a)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>A.\n                (\\<forall>B\\<in>elts (Vset \\<alpha>).\n                    \\<exists>!T.\n                       T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B) =\n                (A = []\\<^sub>\\<circ>);\n     \\<And>A.\n        (\\<forall>B\\<in>elts (Vset \\<alpha>).\n            \\<exists>!T.\n               T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B) =\n        (A = []\\<^sub>\\<circ>);\n     A \\<in>\\<^sub>\\<circ> smc_Par \\<alpha>\\<lparr>Obj\\<rparr>;\n     \\<And>a.\n        a \\<in>\\<^sub>\\<circ> smc_Par\n                               \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n        Ex1 (is_arr (smc_Par \\<alpha>) A a);\n     \\<And>A.\n        (\\<forall>B\\<in>elts (Vset \\<alpha>).\n            \\<exists>!T.\n               T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B) =\n        (A = []\\<^sub>\\<circ>)\\<rbrakk>\n    \\<Longrightarrow> A = []\\<^sub>\\<circ>", "by (metis smc_Par_components(1))"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>A.\n                (\\<forall>B\\<in>elts (Vset \\<alpha>).\n                    \\<exists>!T.\n                       T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B) =\n                (A = []\\<^sub>\\<circ>);\n     A = []\\<^sub>\\<circ>;\n     \\<And>A.\n        (\\<forall>B\\<in>elts (Vset \\<alpha>).\n            \\<exists>!T.\n               T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B) =\n        (A = []\\<^sub>\\<circ>)\\<rbrakk>\n    \\<Longrightarrow> A \\<in>\\<^sub>\\<circ> smc_Par\n       \\<alpha>\\<lparr>Obj\\<rparr>\n 2. \\<And>a.\n       \\<lbrakk>\\<And>A.\n                   (\\<forall>B\\<in>elts (Vset \\<alpha>).\n                       \\<exists>!T.\n                          T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B) =\n                   (A = []\\<^sub>\\<circ>);\n        A = []\\<^sub>\\<circ>;\n        a \\<in>\\<^sub>\\<circ> smc_Par \\<alpha>\\<lparr>Obj\\<rparr>;\n        \\<And>A.\n           (\\<forall>B\\<in>elts (Vset \\<alpha>).\n               \\<exists>!T.\n                  T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B) =\n           (A = []\\<^sub>\\<circ>)\\<rbrakk>\n       \\<Longrightarrow> Ex1 (is_arr (smc_Par \\<alpha>) A a)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>A.\n                (\\<forall>B\\<in>elts (Vset \\<alpha>).\n                    \\<exists>!T.\n                       T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B) =\n                (A = []\\<^sub>\\<circ>);\n     A = []\\<^sub>\\<circ>;\n     \\<And>A.\n        (\\<forall>B\\<in>elts (Vset \\<alpha>).\n            \\<exists>!T.\n               T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B) =\n        (A = []\\<^sub>\\<circ>)\\<rbrakk>\n    \\<Longrightarrow> A \\<in>\\<^sub>\\<circ> smc_Par\n       \\<alpha>\\<lparr>Obj\\<rparr>", "by (simp add: smc_Par_components(1))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>\\<And>A.\n                   (\\<forall>B\\<in>elts (Vset \\<alpha>).\n                       \\<exists>!T.\n                          T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B) =\n                   (A = []\\<^sub>\\<circ>);\n        A = []\\<^sub>\\<circ>;\n        a \\<in>\\<^sub>\\<circ> smc_Par \\<alpha>\\<lparr>Obj\\<rparr>;\n        \\<And>A.\n           (\\<forall>B\\<in>elts (Vset \\<alpha>).\n               \\<exists>!T.\n                  T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B) =\n           (A = []\\<^sub>\\<circ>)\\<rbrakk>\n       \\<Longrightarrow> Ex1 (is_arr (smc_Par \\<alpha>) A a)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>A.\n                (\\<forall>B\\<in>elts (Vset \\<alpha>).\n                    \\<exists>!T.\n                       T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B) =\n                (A = []\\<^sub>\\<circ>);\n     A = []\\<^sub>\\<circ>;\n     a_ \\<in>\\<^sub>\\<circ> smc_Par \\<alpha>\\<lparr>Obj\\<rparr>;\n     \\<And>A.\n        (\\<forall>B\\<in>elts (Vset \\<alpha>).\n            \\<exists>!T.\n               T : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B) =\n        (A = []\\<^sub>\\<circ>)\\<rbrakk>\n    \\<Longrightarrow> Ex1 (is_arr (smc_Par \\<alpha>) A a_)", "by (metis smc_Par_components(1))"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  obj_initial (smc_Par \\<alpha>) A = (A = []\\<^sub>\\<circ>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in \\<Z>) smc_Par_obj_terminal_obj_initial:\n  \"obj_initial (smc_Par \\<alpha>) A \\<longleftrightarrow> obj_terminal (smc_Par \\<alpha>) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. obj_initial (smc_Par \\<alpha>) A = obj_terminal (smc_Par \\<alpha>) A", "unfolding smc_Par_obj_initial smc_Par_obj_terminal"], ["proof (prove)\ngoal (1 subgoal):\n 1. (A = []\\<^sub>\\<circ>) = (A = []\\<^sub>\\<circ>)", "by simp"], ["", "lemma (in \\<Z>) smc_Par_obj_null: \"obj_null (smc_Par \\<alpha>) A \\<longleftrightarrow> A = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. obj_null (smc_Par \\<alpha>) A = (A = []\\<^sub>\\<circ>)", "unfolding obj_null_def smc_Par_obj_terminal smc_Par_obj_initial"], ["proof (prove)\ngoal (1 subgoal):\n 1. (A = []\\<^sub>\\<circ> \\<and> A = []\\<^sub>\\<circ>) =\n    (A = []\\<^sub>\\<circ>)", "by simp"], ["", "subsection\\<open>Zero arrow\\<close>"], ["", "lemma (in \\<Z>) smc_Par_is_zero_arr: \n  assumes \"A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" and \"B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Par \\<alpha>\\<^esub> B \\<longleftrightarrow> T = [0, A, B]\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Par \\<alpha>\\<^esub> B =\n    (T = [[]\\<^sub>\\<circ>, A, B]\\<^sub>\\<circ>)", "proof(intro HOL.ext iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Par \\<alpha>\\<^esub> B \\<Longrightarrow>\n    T = [[]\\<^sub>\\<circ>, A, B]\\<^sub>\\<circ>\n 2. T = [[]\\<^sub>\\<circ>, A, B]\\<^sub>\\<circ> \\<Longrightarrow>\n    T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "interpret Par: semicategory \\<alpha> \\<open>smc_Par \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (smc_Par \\<alpha>)", "by (rule semicategory_smc_Par)"], ["proof (state)\ngoal (2 subgoals):\n 1. T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Par \\<alpha>\\<^esub> B \\<Longrightarrow>\n    T = [[]\\<^sub>\\<circ>, A, B]\\<^sub>\\<circ>\n 2. T = [[]\\<^sub>\\<circ>, A, B]\\<^sub>\\<circ> \\<Longrightarrow>\n    T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "fix T A B"], ["proof (state)\ngoal (2 subgoals):\n 1. T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Par \\<alpha>\\<^esub> B \\<Longrightarrow>\n    T = [[]\\<^sub>\\<circ>, A, B]\\<^sub>\\<circ>\n 2. T = [[]\\<^sub>\\<circ>, A, B]\\<^sub>\\<circ> \\<Longrightarrow>\n    T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "assume \"T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Par \\<alpha>\\<^esub> B\""], ["proof (state)\nthis:\n  T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n\ngoal (2 subgoals):\n 1. T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Par \\<alpha>\\<^esub> B \\<Longrightarrow>\n    T = [[]\\<^sub>\\<circ>, A, B]\\<^sub>\\<circ>\n 2. T = [[]\\<^sub>\\<circ>, A, B]\\<^sub>\\<circ> \\<Longrightarrow>\n    T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "with smc_Par_is_arrD(1)"], ["proof (chain)\npicking this:\n  ?S : ?A \\<mapsto>\\<^bsub>smc_Par ?\\<alpha>\\<^esub> ?B \\<Longrightarrow>\n  arr_Par ?\\<alpha> ?S\n  T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "obtain R S \n    where T_def: \"T = R \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> S\" \n      and S: \"S : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> 0\" \n      and R: \"R : 0 \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\""], ["proof (prove)\nusing this:\n  ?S : ?A \\<mapsto>\\<^bsub>smc_Par ?\\<alpha>\\<^esub> ?B \\<Longrightarrow>\n  arr_Par ?\\<alpha> ?S\n  T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. (\\<And>R S.\n        \\<lbrakk>T = R \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> S;\n         S : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> []\\<^sub>\\<circ>;\n         R : []\\<^sub>\\<circ> \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: arr_Par_def \\<Z>.smc_Par_obj_initial obj_null_def)"], ["proof (state)\nthis:\n  T = R \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> S\n  S : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> []\\<^sub>\\<circ>\n  R : []\\<^sub>\\<circ> \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n\ngoal (2 subgoals):\n 1. T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Par \\<alpha>\\<^esub> B \\<Longrightarrow>\n    T = [[]\\<^sub>\\<circ>, A, B]\\<^sub>\\<circ>\n 2. T = [[]\\<^sub>\\<circ>, A, B]\\<^sub>\\<circ> \\<Longrightarrow>\n    T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "interpret S: arr_Par \\<alpha> S\n    rewrites [simp]: \"S\\<lparr>ArrDom\\<rparr> = A\" and [simp]: \"S\\<lparr>ArrCod\\<rparr> = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Par \\<alpha> S &&&\n    S\\<lparr>ArrDom\\<rparr> = A &&&\n    S\\<lparr>ArrCod\\<rparr> = []\\<^sub>\\<circ>", "using S smc_Par_is_arrD"], ["proof (prove)\nusing this:\n  S : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> []\\<^sub>\\<circ>\n  ?S : ?A \\<mapsto>\\<^bsub>smc_Par ?\\<alpha>\\<^esub> ?B \\<Longrightarrow>\n  arr_Par ?\\<alpha> ?S\n  ?S : ?A \\<mapsto>\\<^bsub>smc_Par ?\\<alpha>\\<^esub> ?B \\<Longrightarrow>\n  ?S\\<lparr>ArrDom\\<rparr> = ?A\n  ?S : ?A \\<mapsto>\\<^bsub>smc_Par ?\\<alpha>\\<^esub> ?B \\<Longrightarrow>\n  ?S\\<lparr>ArrCod\\<rparr> = ?B\n\ngoal (1 subgoal):\n 1. arr_Par \\<alpha> S &&&\n    S\\<lparr>ArrDom\\<rparr> = A &&&\n    S\\<lparr>ArrCod\\<rparr> = []\\<^sub>\\<circ>", "by auto"], ["proof (state)\ngoal (2 subgoals):\n 1. T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Par \\<alpha>\\<^esub> B \\<Longrightarrow>\n    T = [[]\\<^sub>\\<circ>, A, B]\\<^sub>\\<circ>\n 2. T = [[]\\<^sub>\\<circ>, A, B]\\<^sub>\\<circ> \\<Longrightarrow>\n    T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "interpret R: arr_Par \\<alpha> R\n    rewrites [simp]: \"R\\<lparr>ArrDom\\<rparr> = 0\" and [simp]: \"R\\<lparr>ArrCod\\<rparr> = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Par \\<alpha> R &&&\n    R\\<lparr>ArrDom\\<rparr> = []\\<^sub>\\<circ> &&&\n    R\\<lparr>ArrCod\\<rparr> = B", "using R smc_Par_is_arrD"], ["proof (prove)\nusing this:\n  R : []\\<^sub>\\<circ> \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n  ?S : ?A \\<mapsto>\\<^bsub>smc_Par ?\\<alpha>\\<^esub> ?B \\<Longrightarrow>\n  arr_Par ?\\<alpha> ?S\n  ?S : ?A \\<mapsto>\\<^bsub>smc_Par ?\\<alpha>\\<^esub> ?B \\<Longrightarrow>\n  ?S\\<lparr>ArrDom\\<rparr> = ?A\n  ?S : ?A \\<mapsto>\\<^bsub>smc_Par ?\\<alpha>\\<^esub> ?B \\<Longrightarrow>\n  ?S\\<lparr>ArrCod\\<rparr> = ?B\n\ngoal (1 subgoal):\n 1. arr_Par \\<alpha> R &&&\n    R\\<lparr>ArrDom\\<rparr> = []\\<^sub>\\<circ> &&&\n    R\\<lparr>ArrCod\\<rparr> = B", "by auto"], ["proof (state)\ngoal (2 subgoals):\n 1. T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Par \\<alpha>\\<^esub> B \\<Longrightarrow>\n    T = [[]\\<^sub>\\<circ>, A, B]\\<^sub>\\<circ>\n 2. T = [[]\\<^sub>\\<circ>, A, B]\\<^sub>\\<circ> \\<Longrightarrow>\n    T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "have S_def: \"S = [0, A, 0]\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S = [[]\\<^sub>\\<circ>, A, []\\<^sub>\\<circ>]\\<^sub>\\<circ>", "by \n      (\n        rule arr_Rel_eqI[of \\<alpha>], \n        unfold arr_Rel_components,\n        insert S.arr_Rel_ArrVal_vrange S.ArrVal.vbrelation_vintersection_vrange\n      )\n      (\n        auto simp: \n        S.arr_Rel_axioms \n        S.arr_Rel_ArrDom_in_Vset \n        arr_Rel_vfsequenceI vbrelationI\n      )"], ["proof (state)\nthis:\n  S = [[]\\<^sub>\\<circ>, A, []\\<^sub>\\<circ>]\\<^sub>\\<circ>\n\ngoal (2 subgoals):\n 1. T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Par \\<alpha>\\<^esub> B \\<Longrightarrow>\n    T = [[]\\<^sub>\\<circ>, A, B]\\<^sub>\\<circ>\n 2. T = [[]\\<^sub>\\<circ>, A, B]\\<^sub>\\<circ> \\<Longrightarrow>\n    T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "show \"T = [0, A, B]\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T = [[]\\<^sub>\\<circ>, A, B]\\<^sub>\\<circ>", "unfolding T_def smc_Par_Comp_app[OF R S]"], ["proof (prove)\ngoal (1 subgoal):\n 1. R \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l S =\n    [[]\\<^sub>\\<circ>, A, B]\\<^sub>\\<circ>", "by (rule arr_Rel_eqI[of \\<alpha>], unfold comp_Rel_components)\n       (\n         auto simp: \n          \\<Z>_axioms\n          S_def\n          R.arr_Rel_axioms \n          S.arr_Rel_axioms \n          arr_Rel_comp_Rel\n          arr_Rel_components\n          R.arr_Rel_ArrCod_in_Vset \n          S.arr_Rel_ArrDom_in_Vset \n          \\<Z>.arr_Rel_vfsequenceI \n          vbrelation_vempty\n       )"], ["proof (state)\nthis:\n  T = [[]\\<^sub>\\<circ>, A, B]\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. T = [[]\\<^sub>\\<circ>, A, B]\\<^sub>\\<circ> \\<Longrightarrow>\n    T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. T = [[]\\<^sub>\\<circ>, A, B]\\<^sub>\\<circ> \\<Longrightarrow>\n    T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "fix T"], ["proof (state)\ngoal (1 subgoal):\n 1. T = [[]\\<^sub>\\<circ>, A, B]\\<^sub>\\<circ> \\<Longrightarrow>\n    T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "assume prems: \"T = [0, A, B]\\<^sub>\\<circ>\""], ["proof (state)\nthis:\n  T = [[]\\<^sub>\\<circ>, A, B]\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. T = [[]\\<^sub>\\<circ>, A, B]\\<^sub>\\<circ> \\<Longrightarrow>\n    T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "let ?S = \\<open>[0, A, 0]\\<^sub>\\<circ>\\<close> and ?R = \\<open>[0, 0, B]\\<^sub>\\<circ>\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. T = [[]\\<^sub>\\<circ>, A, B]\\<^sub>\\<circ> \\<Longrightarrow>\n    T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "have S: \"arr_Par \\<alpha> ?S\" and R: \"arr_Par \\<alpha> ?R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Par \\<alpha>\n     [[]\\<^sub>\\<circ>, A, []\\<^sub>\\<circ>]\\<^sub>\\<circ> &&&\n    arr_Par \\<alpha> [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, B]\\<^sub>\\<circ>", "by (all\\<open>intro arr_Par_vfsequenceI\\<close>) (simp_all add: assms)"], ["proof (state)\nthis:\n  arr_Par \\<alpha> [[]\\<^sub>\\<circ>, A, []\\<^sub>\\<circ>]\\<^sub>\\<circ>\n  arr_Par \\<alpha> [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, B]\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. T = [[]\\<^sub>\\<circ>, A, B]\\<^sub>\\<circ> \\<Longrightarrow>\n    T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "have SA0: \"?S : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [[]\\<^sub>\\<circ>, A,\n     []\\<^sub>\\<circ>]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> []\\<^sub>\\<circ>", "by (intro smc_Par_is_arrI) (simp_all add: S arr_Rel_components)"], ["proof (state)\nthis:\n  [[]\\<^sub>\\<circ>, A,\n   []\\<^sub>\\<circ>]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. T = [[]\\<^sub>\\<circ>, A, B]\\<^sub>\\<circ> \\<Longrightarrow>\n    T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "moreover"], ["proof (state)\nthis:\n  [[]\\<^sub>\\<circ>, A,\n   []\\<^sub>\\<circ>]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. T = [[]\\<^sub>\\<circ>, A, B]\\<^sub>\\<circ> \\<Longrightarrow>\n    T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "have R0B: \"?R : 0 \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n     B]\\<^sub>\\<circ> : []\\<^sub>\\<circ> \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "by (intro smc_Par_is_arrI) (simp_all add: R arr_Rel_components)"], ["proof (state)\nthis:\n  [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n   B]\\<^sub>\\<circ> : []\\<^sub>\\<circ> \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. T = [[]\\<^sub>\\<circ>, A, B]\\<^sub>\\<circ> \\<Longrightarrow>\n    T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "moreover"], ["proof (state)\nthis:\n  [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n   B]\\<^sub>\\<circ> : []\\<^sub>\\<circ> \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. T = [[]\\<^sub>\\<circ>, A, B]\\<^sub>\\<circ> \\<Longrightarrow>\n    T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "have \"T = ?R \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> ?S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T =\n    [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n     B]\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n    [[]\\<^sub>\\<circ>, A, []\\<^sub>\\<circ>]\\<^sub>\\<circ>", "unfolding smc_Par_Comp_app[OF R0B SA0]"], ["proof (prove)\ngoal (1 subgoal):\n 1. T =\n    [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n     B]\\<^sub>\\<circ> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n    [[]\\<^sub>\\<circ>, A, []\\<^sub>\\<circ>]\\<^sub>\\<circ>", "proof\n    (\n      rule arr_Par_eqI[of \\<alpha>],\n      unfold comp_Rel_components arr_Rel_components prems\n    )"], ["proof (state)\ngoal (5 subgoals):\n 1. arr_Par \\<alpha> [[]\\<^sub>\\<circ>, A, B]\\<^sub>\\<circ>\n 2. arr_Par \\<alpha>\n     ([[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n       B]\\<^sub>\\<circ> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n      [[]\\<^sub>\\<circ>, A, []\\<^sub>\\<circ>]\\<^sub>\\<circ>)\n 3. []\\<^sub>\\<circ> =\n    []\\<^sub>\\<circ> \\<circ>\\<^sub>\\<circ> []\\<^sub>\\<circ>\n 4. A = A\n 5. B = B", "show \"arr_Par \\<alpha> [0, A, B]\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Par \\<alpha> [[]\\<^sub>\\<circ>, A, B]\\<^sub>\\<circ>", "unfolding prems"], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Par \\<alpha> [[]\\<^sub>\\<circ>, A, B]\\<^sub>\\<circ>", "by (intro arr_Par_vfsequenceI) (auto simp: assms)"], ["proof (state)\nthis:\n  arr_Par \\<alpha> [[]\\<^sub>\\<circ>, A, B]\\<^sub>\\<circ>\n\ngoal (4 subgoals):\n 1. arr_Par \\<alpha>\n     ([[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n       B]\\<^sub>\\<circ> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n      [[]\\<^sub>\\<circ>, A, []\\<^sub>\\<circ>]\\<^sub>\\<circ>)\n 2. []\\<^sub>\\<circ> =\n    []\\<^sub>\\<circ> \\<circ>\\<^sub>\\<circ> []\\<^sub>\\<circ>\n 3. A = A\n 4. B = B", "qed (use R S in \\<open>auto simp: smc_Par_cs_intros\\<close>)"], ["proof (state)\nthis:\n  T =\n  [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n   B]\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n  [[]\\<^sub>\\<circ>, A, []\\<^sub>\\<circ>]\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. T = [[]\\<^sub>\\<circ>, A, B]\\<^sub>\\<circ> \\<Longrightarrow>\n    T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "ultimately"], ["proof (chain)\npicking this:\n  [[]\\<^sub>\\<circ>, A,\n   []\\<^sub>\\<circ>]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> []\\<^sub>\\<circ>\n  [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n   B]\\<^sub>\\<circ> : []\\<^sub>\\<circ> \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n  T =\n  [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n   B]\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n  [[]\\<^sub>\\<circ>, A, []\\<^sub>\\<circ>]\\<^sub>\\<circ>", "show \"T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Par \\<alpha>\\<^esub> B\""], ["proof (prove)\nusing this:\n  [[]\\<^sub>\\<circ>, A,\n   []\\<^sub>\\<circ>]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> []\\<^sub>\\<circ>\n  [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n   B]\\<^sub>\\<circ> : []\\<^sub>\\<circ> \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n  T =\n  [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n   B]\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub>\n  [[]\\<^sub>\\<circ>, A, []\\<^sub>\\<circ>]\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "by (simp add: is_zero_arrI smc_Par_obj_null)"], ["proof (state)\nthis:\n  T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>\\newpage\\<close>"], ["", "end"]]}