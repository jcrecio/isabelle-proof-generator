{"file_name": "/home/qj213/afp-2021-10-22/thys/CZH_Foundations/czh_sets/CZH_Sets_Cardinality.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CZH_Foundations", "problem_names": ["lemma vcard_veqpoll: \"vcard A = vcard B \\<longleftrightarrow> A \\<approx>\\<^sub>\\<circ> B\"", "lemma vcard_vlepoll: \"vcard A \\<le> vcard B \\<longleftrightarrow> A \\<lesssim>\\<^sub>\\<circ> B\"", "lemma vcard_vempty: \"vcard A = 0 \\<longleftrightarrow> A = 0\"", "lemmas vcard_vemptyD = vcard_vempty[THEN iffD1]\n  and vcard_vemptyI = vcard_vempty[THEN iffD2]", "lemma vcard_neq_vempty: \"vcard A \\<noteq> 0\\<^sub>\\<nat> \\<longleftrightarrow> A \\<noteq> 0\\<^sub>\\<nat>\"", "lemmas vcard_neq_vemptyD = vcard_neq_vempty[THEN iffD1]\n  and vcard_neq_vemptyI = vcard_neq_vempty[THEN iffD2]", "lemma vcard_mono:\n  assumes \"A \\<subseteq>\\<^sub>\\<circ> B\"\n  shows \"vcard A \\<le> vcard B\"", "lemma vcard_vinsert_in[simp]:\n  assumes \"a \\<in>\\<^sub>\\<circ> A\"\n  shows \"vcard (vinsert a A) = vcard A\"", "lemma vcard_vintersection_left: \"vcard (A \\<inter>\\<^sub>\\<circ> B) \\<le> vcard A\"", "lemma vcard_vintersection_right: \"vcard (A \\<inter>\\<^sub>\\<circ> B) \\<le> vcard B\"", "lemma vcard_vunion: \n  assumes \"vdisjnt A B\"\n  shows \"vcard (A \\<union>\\<^sub>\\<circ> B) = vcard A \\<oplus> vcard B\"", "lemma vcard_vdiff[simp]: \"vcard (A -\\<^sub>\\<circ> B) \\<oplus> vcard (A \\<inter>\\<^sub>\\<circ> B) = vcard A\"", "lemma vcard_vdiff_vsubset:\n  assumes \"B \\<subseteq>\\<^sub>\\<circ> A\"\n  shows \"vcard (A -\\<^sub>\\<circ> B) \\<oplus> vcard B = vcard A\"", "lemma (in vsv) vsv_vcard_vdomain: \"vcard (\\<D>\\<^sub>\\<circ> r) = vcard r\"", "lemma vcard_vunion_vintersection: \n  \"vcard (A \\<union>\\<^sub>\\<circ> B) \\<oplus> vcard (A \\<inter>\\<^sub>\\<circ> B) = vcard A \\<oplus> vcard B\"", "lemma vfinite_def: \"vfinite A \\<longleftrightarrow> (\\<exists>n\\<in>\\<^sub>\\<circ>\\<omega>. n \\<approx>\\<^sub>\\<circ> A)\"", "lemmas vfiniteI[intro!] = vfinite_def[THEN iffD2]", "lemmas vfiniteD[dest!] = vfinite_def[THEN iffD1]", "lemma vfiniteE1[elim!]:\n  assumes \"vfinite A\" and \"\\<exists>n\\<in>\\<^sub>\\<circ>\\<omega>. n \\<approx>\\<^sub>\\<circ> A \\<Longrightarrow> P\"\n  shows P", "lemma vfiniteE2[elim]:\n  assumes \"vfinite A\" \n  obtains n where \"n \\<in>\\<^sub>\\<circ> \\<omega>\" and \"n \\<approx>\\<^sub>\\<circ> A\"", "lemma veqpoll_omega_vcard[intro, simp]:\n  assumes \"n \\<in>\\<^sub>\\<circ> \\<omega>\" and \"n \\<approx>\\<^sub>\\<circ> A\" \n  shows \"vcard A = n\"", "lemma (in vsv) vfinite_vimage[intro]:\n  assumes \"vfinite A\"\n  shows \"vfinite (r `\\<^sub>\\<circ> A)\"", "lemmas [intro] = vsv.vfinite_vimage", "lemma vfinite_veqpoll_trans:\n  assumes \"vfinite A\" and \"A \\<approx>\\<^sub>\\<circ> B\" \n  shows \"vfinite B\"", "lemma vfinite_vlepoll_trans:\n  assumes \"vfinite A\" and \"B \\<lesssim>\\<^sub>\\<circ> A\"   \n  shows \"vfinite B\"", "lemma vfinite_vlesspoll_trans:\n  assumes \"vfinite A\" and \"B \\<prec>\\<^sub>\\<circ> A\"   \n  shows \"vfinite B\"", "lemma vfinite_induct[consumes 1, case_names vempty vinsert]:\n  assumes \"vfinite F\"\n    and \"P 0\"\n    and \"\\<And>x F. \\<lbrakk>vfinite F; x \\<notin>\\<^sub>\\<circ> F; P F\\<rbrakk> \\<Longrightarrow> P (vinsert x F)\"\n  shows \"P F\"", "lemma vfinite_vempty[simp]: \"vfinite (0\\<^sub>\\<nat>)\"", "lemma vfinite_vsingleton[simp]: \"vfinite (set {x})\"", "lemma vfinite_vdoubleton[simp]: \"vfinite (set {x, y})\"", "lemma vfinite_vinsert:\n  assumes \"vfinite F\"\n  shows \"vfinite (vinsert x F)\"", "lemma vfinite_vinsertD:\n  assumes \"vfinite (vinsert x F)\"\n  shows \"vfinite F\"", "lemma vfinite_vsubset: \n  assumes \"vfinite B\" and \"A \\<subseteq>\\<^sub>\\<circ> B\" \n  shows \"vfinite A\"", "lemma vfinite_vunion: \"vfinite (A \\<union>\\<^sub>\\<circ> B) \\<longleftrightarrow> vfinite A \\<and> vfinite B\"", "lemma vfinite_vunionI:\n  assumes \"vfinite A\" and \"vfinite B\"\n  shows \"vfinite (A \\<union>\\<^sub>\\<circ> B)\"", "lemma vfinite_vunionD:\n  assumes \"vfinite (A \\<union>\\<^sub>\\<circ> B)\" \n  shows \"vfinite A\" and \"vfinite B\"", "lemma vfinite_vintersectionI:\n  assumes \"vfinite A\" and \"vfinite B\"\n  shows \"vfinite (A \\<inter>\\<^sub>\\<circ> B)\"", "lemma vfinite_VPowI: \n  assumes \"vfinite A\"\n  shows \"vfinite (VPow A)\"", "lemma vfinite_vcard_vfinite: \"vfinite (vcard A) = vfinite A\"", "lemma vfinite_vcard_omega_iff: \"vfinite A \\<longleftrightarrow> vcard A \\<in>\\<^sub>\\<circ> \\<omega>\"", "lemmas vcard_vfinite_omega = vfinite_vcard_omega_iff[THEN iffD2]\n  and vfinite_vcard_omega = vfinite_vcard_omega_iff[THEN iffD1]", "lemma vfinite_csucc[intro, simp]:\n  assumes \"vfinite A\"\n  shows \"csucc (vcard A) = succ (vcard A)\"", "lemmas [intro, simp] = finite_csucc", "lemma vcard_vsingleton[simp]: \"vcard (set {a}) = 1\\<^sub>\\<nat>\"", "lemma vfinite_vcard_vinsert_nin[simp]:\n  assumes \"vfinite A\" and \"a \\<notin>\\<^sub>\\<circ> A\"\n  shows \"vcard (vinsert a A) = csucc (vcard A)\""], "translations": [["", "lemma vcard_veqpoll: \"vcard A = vcard B \\<longleftrightarrow> A \\<approx>\\<^sub>\\<circ> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (vcard A = vcard B) = (A \\<approx>\\<^sub>\\<circ> B)", "by (metis cardinal_cong cardinal_eqpoll eqpoll_sym eqpoll_trans)"], ["", "lemma vcard_vlepoll: \"vcard A \\<le> vcard B \\<longleftrightarrow> A \\<lesssim>\\<^sub>\\<circ> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (vcard A \\<subseteq>\\<^sub>\\<circ> vcard B) =\n    (A \\<lesssim>\\<^sub>\\<circ> B)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. vcard A \\<subseteq>\\<^sub>\\<circ> vcard B \\<Longrightarrow>\n    A \\<lesssim>\\<^sub>\\<circ> B\n 2. A \\<lesssim>\\<^sub>\\<circ> B \\<Longrightarrow>\n    vcard A \\<subseteq>\\<^sub>\\<circ> vcard B", "assume \"vcard A \\<le> vcard B\""], ["proof (state)\nthis:\n  vcard A \\<subseteq>\\<^sub>\\<circ> vcard B\n\ngoal (2 subgoals):\n 1. vcard A \\<subseteq>\\<^sub>\\<circ> vcard B \\<Longrightarrow>\n    A \\<lesssim>\\<^sub>\\<circ> B\n 2. A \\<lesssim>\\<^sub>\\<circ> B \\<Longrightarrow>\n    vcard A \\<subseteq>\\<^sub>\\<circ> vcard B", "moreover"], ["proof (state)\nthis:\n  vcard A \\<subseteq>\\<^sub>\\<circ> vcard B\n\ngoal (2 subgoals):\n 1. vcard A \\<subseteq>\\<^sub>\\<circ> vcard B \\<Longrightarrow>\n    A \\<lesssim>\\<^sub>\\<circ> B\n 2. A \\<lesssim>\\<^sub>\\<circ> B \\<Longrightarrow>\n    vcard A \\<subseteq>\\<^sub>\\<circ> vcard B", "have \"vcard A \\<approx>\\<^sub>\\<circ> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard A \\<approx>\\<^sub>\\<circ> A", "by (rule cardinal_eqpoll)"], ["proof (state)\nthis:\n  vcard A \\<approx>\\<^sub>\\<circ> A\n\ngoal (2 subgoals):\n 1. vcard A \\<subseteq>\\<^sub>\\<circ> vcard B \\<Longrightarrow>\n    A \\<lesssim>\\<^sub>\\<circ> B\n 2. A \\<lesssim>\\<^sub>\\<circ> B \\<Longrightarrow>\n    vcard A \\<subseteq>\\<^sub>\\<circ> vcard B", "moreover"], ["proof (state)\nthis:\n  vcard A \\<approx>\\<^sub>\\<circ> A\n\ngoal (2 subgoals):\n 1. vcard A \\<subseteq>\\<^sub>\\<circ> vcard B \\<Longrightarrow>\n    A \\<lesssim>\\<^sub>\\<circ> B\n 2. A \\<lesssim>\\<^sub>\\<circ> B \\<Longrightarrow>\n    vcard A \\<subseteq>\\<^sub>\\<circ> vcard B", "have \"vcard B \\<approx>\\<^sub>\\<circ> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard B \\<approx>\\<^sub>\\<circ> B", "by (rule cardinal_eqpoll)"], ["proof (state)\nthis:\n  vcard B \\<approx>\\<^sub>\\<circ> B\n\ngoal (2 subgoals):\n 1. vcard A \\<subseteq>\\<^sub>\\<circ> vcard B \\<Longrightarrow>\n    A \\<lesssim>\\<^sub>\\<circ> B\n 2. A \\<lesssim>\\<^sub>\\<circ> B \\<Longrightarrow>\n    vcard A \\<subseteq>\\<^sub>\\<circ> vcard B", "ultimately"], ["proof (chain)\npicking this:\n  vcard A \\<subseteq>\\<^sub>\\<circ> vcard B\n  vcard A \\<approx>\\<^sub>\\<circ> A\n  vcard B \\<approx>\\<^sub>\\<circ> B", "show \"A \\<lesssim>\\<^sub>\\<circ> B\""], ["proof (prove)\nusing this:\n  vcard A \\<subseteq>\\<^sub>\\<circ> vcard B\n  vcard A \\<approx>\\<^sub>\\<circ> A\n  vcard B \\<approx>\\<^sub>\\<circ> B\n\ngoal (1 subgoal):\n 1. A \\<lesssim>\\<^sub>\\<circ> B", "by (meson eqpoll_sym lepoll_trans1 lepoll_trans2 vlepoll_vsubset)"], ["proof (state)\nthis:\n  A \\<lesssim>\\<^sub>\\<circ> B\n\ngoal (1 subgoal):\n 1. A \\<lesssim>\\<^sub>\\<circ> B \\<Longrightarrow>\n    vcard A \\<subseteq>\\<^sub>\\<circ> vcard B", "qed (simp add: lepoll_imp_Card_le)"], ["", "lemma vcard_vempty: \"vcard A = 0 \\<longleftrightarrow> A = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (vcard A = 0) = (A = 0)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (vcard A = 0) = (A = 0)", "have vcard_A: \"vcard A \\<approx>\\<^sub>\\<circ> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard A \\<approx>\\<^sub>\\<circ> A", "by (simp add: cardinal_eqpoll)"], ["proof (state)\nthis:\n  vcard A \\<approx>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. (vcard A = 0) = (A = 0)", "then"], ["proof (chain)\npicking this:\n  vcard A \\<approx>\\<^sub>\\<circ> A", "show ?thesis"], ["proof (prove)\nusing this:\n  vcard A \\<approx>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. (vcard A = 0) = (A = 0)", "using eq0_iff eqpoll_iff_bijections"], ["proof (prove)\nusing this:\n  vcard A \\<approx>\\<^sub>\\<circ> A\n  (?x = 0) = (\\<forall>y. y \\<notin>\\<^sub>\\<circ> ?x)\n  (?A \\<approx> ?B) =\n  (\\<exists>f g.\n      (\\<forall>x\\<in>?A. f x \\<in> ?B \\<and> g (f x) = x) \\<and>\n      (\\<forall>y\\<in>?B. g y \\<in> ?A \\<and> f (g y) = y))\n\ngoal (1 subgoal):\n 1. (vcard A = 0) = (A = 0)", "by metis"], ["proof (state)\nthis:\n  (vcard A = 0) = (A = 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas vcard_vemptyD = vcard_vempty[THEN iffD1]\n  and vcard_vemptyI = vcard_vempty[THEN iffD2]"], ["", "lemma vcard_neq_vempty: \"vcard A \\<noteq> 0\\<^sub>\\<nat> \\<longleftrightarrow> A \\<noteq> 0\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (vcard A \\<noteq> 0\\<^sub>\\<nat>) = (A \\<noteq> 0\\<^sub>\\<nat>)", "using vcard_vempty"], ["proof (prove)\nusing this:\n  (vcard ?A = 0) = (?A = 0)\n\ngoal (1 subgoal):\n 1. (vcard A \\<noteq> 0\\<^sub>\\<nat>) = (A \\<noteq> 0\\<^sub>\\<nat>)", "by auto"], ["", "lemmas vcard_neq_vemptyD = vcard_neq_vempty[THEN iffD1]\n  and vcard_neq_vemptyI = vcard_neq_vempty[THEN iffD2]"], ["", "text\\<open>Set operations.\\<close>"], ["", "lemma vcard_mono:\n  assumes \"A \\<subseteq>\\<^sub>\\<circ> B\"\n  shows \"vcard A \\<le> vcard B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard A \\<subseteq>\\<^sub>\\<circ> vcard B", "using assms"], ["proof (prove)\nusing this:\n  A \\<subseteq>\\<^sub>\\<circ> B\n\ngoal (1 subgoal):\n 1. vcard A \\<subseteq>\\<^sub>\\<circ> vcard B", "by (simp add: lepoll_imp_Card_le vlepoll_vsubset)"], ["", "lemma vcard_vinsert_in[simp]:\n  assumes \"a \\<in>\\<^sub>\\<circ> A\"\n  shows \"vcard (vinsert a A) = vcard A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (vinsert a A) = vcard A", "using assms"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. vcard (vinsert a A) = vcard A", "by (simp add: cardinal_cong insert_absorb)"], ["", "lemma vcard_vintersection_left: \"vcard (A \\<inter>\\<^sub>\\<circ> B) \\<le> vcard A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (A \\<inter>\\<^sub>\\<circ> B) \\<subseteq>\\<^sub>\\<circ> vcard A", "by (simp add: vcard_mono)"], ["", "lemma vcard_vintersection_right: \"vcard (A \\<inter>\\<^sub>\\<circ> B) \\<le> vcard B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (A \\<inter>\\<^sub>\\<circ> B) \\<subseteq>\\<^sub>\\<circ> vcard B", "by (simp add: vcard_mono)"], ["", "lemma vcard_vunion: \n  assumes \"vdisjnt A B\"\n  shows \"vcard (A \\<union>\\<^sub>\\<circ> B) = vcard A \\<oplus> vcard B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (A \\<union>\\<^sub>\\<circ> B) = vcard A \\<oplus> vcard B", "using assms"], ["proof (prove)\nusing this:\n  vdisjnt A B\n\ngoal (1 subgoal):\n 1. vcard (A \\<union>\\<^sub>\\<circ> B) = vcard A \\<oplus> vcard B", "by (rule vcard_disjoint_sup)"], ["", "lemma vcard_vdiff[simp]: \"vcard (A -\\<^sub>\\<circ> B) \\<oplus> vcard (A \\<inter>\\<^sub>\\<circ> B) = vcard A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (A -\\<^sub>\\<circ> B) \\<oplus>\n    vcard (A \\<inter>\\<^sub>\\<circ> B) =\n    vcard A", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. vcard (A -\\<^sub>\\<circ> B) \\<oplus>\n    vcard (A \\<inter>\\<^sub>\\<circ> B) =\n    vcard A", "have ABB: \"vdisjnt (A -\\<^sub>\\<circ> B) (A \\<inter>\\<^sub>\\<circ> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vdisjnt (A -\\<^sub>\\<circ> B) (A \\<inter>\\<^sub>\\<circ> B)", "by auto"], ["proof (state)\nthis:\n  vdisjnt (A -\\<^sub>\\<circ> B) (A \\<inter>\\<^sub>\\<circ> B)\n\ngoal (1 subgoal):\n 1. vcard (A -\\<^sub>\\<circ> B) \\<oplus>\n    vcard (A \\<inter>\\<^sub>\\<circ> B) =\n    vcard A", "have \"A -\\<^sub>\\<circ> B \\<union>\\<^sub>\\<circ> A \\<inter>\\<^sub>\\<circ> B = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A -\\<^sub>\\<circ> B \\<union>\\<^sub>\\<circ> A \\<inter>\\<^sub>\\<circ> B =\n    A", "by auto"], ["proof (state)\nthis:\n  A -\\<^sub>\\<circ> B \\<union>\\<^sub>\\<circ> A \\<inter>\\<^sub>\\<circ> B = A\n\ngoal (1 subgoal):\n 1. vcard (A -\\<^sub>\\<circ> B) \\<oplus>\n    vcard (A \\<inter>\\<^sub>\\<circ> B) =\n    vcard A", "from vcard_vunion[OF ABB, unfolded this]"], ["proof (chain)\npicking this:\n  vcard A =\n  vcard (A -\\<^sub>\\<circ> B) \\<oplus> vcard (A \\<inter>\\<^sub>\\<circ> B)", "show ?thesis"], ["proof (prove)\nusing this:\n  vcard A =\n  vcard (A -\\<^sub>\\<circ> B) \\<oplus> vcard (A \\<inter>\\<^sub>\\<circ> B)\n\ngoal (1 subgoal):\n 1. vcard (A -\\<^sub>\\<circ> B) \\<oplus>\n    vcard (A \\<inter>\\<^sub>\\<circ> B) =\n    vcard A", ".."], ["proof (state)\nthis:\n  vcard (A -\\<^sub>\\<circ> B) \\<oplus> vcard (A \\<inter>\\<^sub>\\<circ> B) =\n  vcard A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vcard_vdiff_vsubset:\n  assumes \"B \\<subseteq>\\<^sub>\\<circ> A\"\n  shows \"vcard (A -\\<^sub>\\<circ> B) \\<oplus> vcard B = vcard A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (A -\\<^sub>\\<circ> B) \\<oplus> vcard B = vcard A", "by (metis assms inf.absorb_iff2 vcard_vdiff)"], ["", "text\\<open>Connections.\\<close>"], ["", "lemma (in vsv) vsv_vcard_vdomain: \"vcard (\\<D>\\<^sub>\\<circ> r) = vcard r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (\\<D>\\<^sub>\\<circ> r) = vcard r", "unfolding vcard_veqpoll"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> r \\<approx>\\<^sub>\\<circ> r", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> r \\<approx>\\<^sub>\\<circ> r", "define f where \"f x = \\<langle>x, r\\<lparr>x\\<rparr>\\<rangle>\" for x"], ["proof (state)\nthis:\n  f ?x = \\<langle>?x, r\\<lparr>?x\\<rparr>\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> r \\<approx>\\<^sub>\\<circ> r", "have \"bij_betw f (elts (\\<D>\\<^sub>\\<circ> r)) (elts r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw f (elts (\\<D>\\<^sub>\\<circ> r)) (elts r)", "unfolding f_def bij_betw_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>x. \\<langle>x, r\\<lparr>x\\<rparr>\\<rangle>)\n     (elts (\\<D>\\<^sub>\\<circ> r)) \\<and>\n    (\\<lambda>x. \\<langle>x, r\\<lparr>x\\<rparr>\\<rangle>) `\n    elts (\\<D>\\<^sub>\\<circ> r) =\n    elts r", "proof(intro conjI inj_onI subset_antisym subsetI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> r;\n        y \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> r;\n        \\<langle>x, r\\<lparr>x\\<rparr>\\<rangle> =\n        \\<langle>y, r\\<lparr>y\\<rparr>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>x.\n       x \\<in> (\\<lambda>x. \\<langle>x, r\\<lparr>x\\<rparr>\\<rangle>) `\n               elts (\\<D>\\<^sub>\\<circ> r) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> r\n 3. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> r \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. \\<langle>x, r\\<lparr>x\\<rparr>\\<rangle>) `\n               elts (\\<D>\\<^sub>\\<circ> r)", "from vlrestriction_vdomain"], ["proof (chain)\npicking this:\n  r \\<restriction>\\<^sup>l\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> r = r", "show \n      \"x \\<in>\\<^sub>\\<circ> r \\<Longrightarrow> x \\<in> (\\<lambda>x. \\<langle>x, r\\<lparr>x\\<rparr>\\<rangle>) ` elts (\\<D>\\<^sub>\\<circ> r)\" \n      for x"], ["proof (prove)\nusing this:\n  r \\<restriction>\\<^sup>l\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> r = r\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>\\<circ> r \\<Longrightarrow>\n    x \\<in> (\\<lambda>x. \\<langle>x, r\\<lparr>x\\<rparr>\\<rangle>) `\n            elts (\\<D>\\<^sub>\\<circ> r)", "unfolding mem_Collect_eq"], ["proof (prove)\nusing this:\n  r \\<restriction>\\<^sup>l\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> r = r\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>\\<circ> r \\<Longrightarrow>\n    x \\<in> (\\<lambda>x. \\<langle>x, r\\<lparr>x\\<rparr>\\<rangle>) `\n            elts (\\<D>\\<^sub>\\<circ> r)", "by blast"], ["proof (state)\nthis:\n  ?x \\<in>\\<^sub>\\<circ> r \\<Longrightarrow>\n  ?x \\<in> (\\<lambda>x. \\<langle>x, r\\<lparr>x\\<rparr>\\<rangle>) `\n           elts (\\<D>\\<^sub>\\<circ> r)\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> r;\n        y \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> r;\n        \\<langle>x, r\\<lparr>x\\<rparr>\\<rangle> =\n        \\<langle>y, r\\<lparr>y\\<rparr>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>x.\n       x \\<in> (\\<lambda>x. \\<langle>x, r\\<lparr>x\\<rparr>\\<rangle>) `\n               elts (\\<D>\\<^sub>\\<circ> r) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> r", "qed (auto simp: image_def)"], ["proof (state)\nthis:\n  bij_betw f (elts (\\<D>\\<^sub>\\<circ> r)) (elts r)\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> r \\<approx>\\<^sub>\\<circ> r", "then"], ["proof (chain)\npicking this:\n  bij_betw f (elts (\\<D>\\<^sub>\\<circ> r)) (elts r)", "show \"\\<D>\\<^sub>\\<circ> r \\<approx>\\<^sub>\\<circ> r\""], ["proof (prove)\nusing this:\n  bij_betw f (elts (\\<D>\\<^sub>\\<circ> r)) (elts r)\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> r \\<approx>\\<^sub>\\<circ> r", "unfolding eqpoll_def"], ["proof (prove)\nusing this:\n  bij_betw f (elts (\\<D>\\<^sub>\\<circ> r)) (elts r)\n\ngoal (1 subgoal):\n 1. \\<exists>f. bij_betw f (elts (\\<D>\\<^sub>\\<circ> r)) (elts r)", "by auto"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> r \\<approx>\\<^sub>\\<circ> r\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Special properties.\\<close>"], ["", "lemma vcard_vunion_vintersection: \n  \"vcard (A \\<union>\\<^sub>\\<circ> B) \\<oplus> vcard (A \\<inter>\\<^sub>\\<circ> B) = vcard A \\<oplus> vcard B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (A \\<union>\\<^sub>\\<circ> B) \\<oplus>\n    vcard (A \\<inter>\\<^sub>\\<circ> B) =\n    vcard A \\<oplus> vcard B", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. vcard (A \\<union>\\<^sub>\\<circ> B) \\<oplus>\n    vcard (A \\<inter>\\<^sub>\\<circ> B) =\n    vcard A \\<oplus> vcard B", "have AB_ABB: \"A \\<union>\\<^sub>\\<circ> B = B \\<union>\\<^sub>\\<circ> (A -\\<^sub>\\<circ> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<union>\\<^sub>\\<circ> B =\n    B \\<union>\\<^sub>\\<circ> (A -\\<^sub>\\<circ> B)", "by auto"], ["proof (state)\nthis:\n  A \\<union>\\<^sub>\\<circ> B =\n  B \\<union>\\<^sub>\\<circ> (A -\\<^sub>\\<circ> B)\n\ngoal (1 subgoal):\n 1. vcard (A \\<union>\\<^sub>\\<circ> B) \\<oplus>\n    vcard (A \\<inter>\\<^sub>\\<circ> B) =\n    vcard A \\<oplus> vcard B", "have ABB: \"vdisjnt B (A -\\<^sub>\\<circ> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vdisjnt B (A -\\<^sub>\\<circ> B)", "by auto"], ["proof (state)\nthis:\n  vdisjnt B (A -\\<^sub>\\<circ> B)\n\ngoal (1 subgoal):\n 1. vcard (A \\<union>\\<^sub>\\<circ> B) \\<oplus>\n    vcard (A \\<inter>\\<^sub>\\<circ> B) =\n    vcard A \\<oplus> vcard B", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (A \\<union>\\<^sub>\\<circ> B) \\<oplus>\n    vcard (A \\<inter>\\<^sub>\\<circ> B) =\n    vcard A \\<oplus> vcard B", "unfolding vcard_vunion[OF ABB, folded AB_ABB] cadd_assoc vcard_vdiff"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard B \\<oplus> vcard A = vcard A \\<oplus> vcard B", "by (simp add: cadd_commute)"], ["proof (state)\nthis:\n  vcard (A \\<union>\\<^sub>\\<circ> B) \\<oplus>\n  vcard (A \\<inter>\\<^sub>\\<circ> B) =\n  vcard A \\<oplus> vcard B\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Finite sets\\<close>"], ["", "abbreviation vfinite :: \"V \\<Rightarrow> bool\" \n  where \"vfinite A \\<equiv> finite (elts A)\""], ["", "lemma vfinite_def: \"vfinite A \\<longleftrightarrow> (\\<exists>n\\<in>\\<^sub>\\<circ>\\<omega>. n \\<approx>\\<^sub>\\<circ> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfinite A = (\\<exists>n\\<in>elts \\<omega>. n \\<approx>\\<^sub>\\<circ> A)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. vfinite A \\<Longrightarrow>\n    \\<exists>n\\<in>elts \\<omega>. n \\<approx>\\<^sub>\\<circ> A\n 2. \\<exists>n\\<in>elts \\<omega>.\n       n \\<approx>\\<^sub>\\<circ> A \\<Longrightarrow>\n    vfinite A", "assume \"finite (elts A)\""], ["proof (state)\nthis:\n  vfinite A\n\ngoal (2 subgoals):\n 1. vfinite A \\<Longrightarrow>\n    \\<exists>n\\<in>elts \\<omega>. n \\<approx>\\<^sub>\\<circ> A\n 2. \\<exists>n\\<in>elts \\<omega>.\n       n \\<approx>\\<^sub>\\<circ> A \\<Longrightarrow>\n    vfinite A", "then"], ["proof (chain)\npicking this:\n  vfinite A", "obtain n :: nat where eltsA: \"elts A \\<approx> {..<n}\""], ["proof (prove)\nusing this:\n  vfinite A\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        elts A \\<approx> {..<n} \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (simp add: eqpoll_iff_card)"], ["proof (state)\nthis:\n  elts A \\<approx> {..<n}\n\ngoal (2 subgoals):\n 1. vfinite A \\<Longrightarrow>\n    \\<exists>n\\<in>elts \\<omega>. n \\<approx>\\<^sub>\\<circ> A\n 2. \\<exists>n\\<in>elts \\<omega>.\n       n \\<approx>\\<^sub>\\<circ> A \\<Longrightarrow>\n    vfinite A", "have on: \"ord_of_nat n = set (ord_of_nat ` {..<n})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n\\<^sub>\\<nat> = set (ord_of_nat ` {..<n})", "by (simp add: ord_of_nat_eq_initial[symmetric])"], ["proof (state)\nthis:\n  n\\<^sub>\\<nat> = set (ord_of_nat ` {..<n})\n\ngoal (2 subgoals):\n 1. vfinite A \\<Longrightarrow>\n    \\<exists>n\\<in>elts \\<omega>. n \\<approx>\\<^sub>\\<circ> A\n 2. \\<exists>n\\<in>elts \\<omega>.\n       n \\<approx>\\<^sub>\\<circ> A \\<Longrightarrow>\n    vfinite A", "from eltsA"], ["proof (chain)\npicking this:\n  elts A \\<approx> {..<n}", "have \"elts A \\<approx> elts (ord_of_nat n)\""], ["proof (prove)\nusing this:\n  elts A \\<approx> {..<n}\n\ngoal (1 subgoal):\n 1. A \\<approx>\\<^sub>\\<circ> n\\<^sub>\\<nat>", "unfolding on"], ["proof (prove)\nusing this:\n  elts A \\<approx> {..<n}\n\ngoal (1 subgoal):\n 1. A \\<approx>\\<^sub>\\<circ> set (ord_of_nat ` {..<n})", "by (simp add: inj_on_def)"], ["proof (state)\nthis:\n  A \\<approx>\\<^sub>\\<circ> n\\<^sub>\\<nat>\n\ngoal (2 subgoals):\n 1. vfinite A \\<Longrightarrow>\n    \\<exists>n\\<in>elts \\<omega>. n \\<approx>\\<^sub>\\<circ> A\n 2. \\<exists>n\\<in>elts \\<omega>.\n       n \\<approx>\\<^sub>\\<circ> A \\<Longrightarrow>\n    vfinite A", "moreover"], ["proof (state)\nthis:\n  A \\<approx>\\<^sub>\\<circ> n\\<^sub>\\<nat>\n\ngoal (2 subgoals):\n 1. vfinite A \\<Longrightarrow>\n    \\<exists>n\\<in>elts \\<omega>. n \\<approx>\\<^sub>\\<circ> A\n 2. \\<exists>n\\<in>elts \\<omega>.\n       n \\<approx>\\<^sub>\\<circ> A \\<Longrightarrow>\n    vfinite A", "have \"ord_of_nat n \\<in>\\<^sub>\\<circ> \\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>", "by (simp add: \\<omega>_def)"], ["proof (state)\nthis:\n  n\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>\n\ngoal (2 subgoals):\n 1. vfinite A \\<Longrightarrow>\n    \\<exists>n\\<in>elts \\<omega>. n \\<approx>\\<^sub>\\<circ> A\n 2. \\<exists>n\\<in>elts \\<omega>.\n       n \\<approx>\\<^sub>\\<circ> A \\<Longrightarrow>\n    vfinite A", "ultimately"], ["proof (chain)\npicking this:\n  A \\<approx>\\<^sub>\\<circ> n\\<^sub>\\<nat>\n  n\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>", "show \"\\<exists>n\\<in>\\<^sub>\\<circ>\\<omega>. n \\<approx>\\<^sub>\\<circ> A\""], ["proof (prove)\nusing this:\n  A \\<approx>\\<^sub>\\<circ> n\\<^sub>\\<nat>\n  n\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>\n\ngoal (1 subgoal):\n 1. \\<exists>n\\<in>elts \\<omega>. n \\<approx>\\<^sub>\\<circ> A", "by (auto intro: eqpoll_sym)"], ["proof (state)\nthis:\n  \\<exists>n\\<in>elts \\<omega>. n \\<approx>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. \\<exists>n\\<in>elts \\<omega>.\n       n \\<approx>\\<^sub>\\<circ> A \\<Longrightarrow>\n    vfinite A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>n\\<in>elts \\<omega>.\n       n \\<approx>\\<^sub>\\<circ> A \\<Longrightarrow>\n    vfinite A", "assume \"\\<exists>n\\<in>\\<^sub>\\<circ>\\<omega>. n \\<approx>\\<^sub>\\<circ> A\""], ["proof (state)\nthis:\n  \\<exists>n\\<in>elts \\<omega>. n \\<approx>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. \\<exists>n\\<in>elts \\<omega>.\n       n \\<approx>\\<^sub>\\<circ> A \\<Longrightarrow>\n    vfinite A", "then"], ["proof (chain)\npicking this:\n  \\<exists>n\\<in>elts \\<omega>. n \\<approx>\\<^sub>\\<circ> A", "obtain n where \"n \\<in>\\<^sub>\\<circ> \\<omega>\" and \"n \\<approx>\\<^sub>\\<circ> A\""], ["proof (prove)\nusing this:\n  \\<exists>n\\<in>elts \\<omega>. n \\<approx>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>n \\<in>\\<^sub>\\<circ> \\<omega>;\n         n \\<approx>\\<^sub>\\<circ> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  n \\<in>\\<^sub>\\<circ> \\<omega>\n  n \\<approx>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. \\<exists>n\\<in>elts \\<omega>.\n       n \\<approx>\\<^sub>\\<circ> A \\<Longrightarrow>\n    vfinite A", "with eqpoll_finite_iff"], ["proof (chain)\npicking this:\n  ?A \\<approx> ?B \\<Longrightarrow> finite ?A = finite ?B\n  n \\<in>\\<^sub>\\<circ> \\<omega>\n  n \\<approx>\\<^sub>\\<circ> A", "show \"finite (elts A)\""], ["proof (prove)\nusing this:\n  ?A \\<approx> ?B \\<Longrightarrow> finite ?A = finite ?B\n  n \\<in>\\<^sub>\\<circ> \\<omega>\n  n \\<approx>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. vfinite A", "by (auto intro: finite_Ord_omega)"], ["proof (state)\nthis:\n  vfinite A\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Rules.\\<close>"], ["", "lemmas vfiniteI[intro!] = vfinite_def[THEN iffD2]"], ["", "lemmas vfiniteD[dest!] = vfinite_def[THEN iffD1]"], ["", "lemma vfiniteE1[elim!]:\n  assumes \"vfinite A\" and \"\\<exists>n\\<in>\\<^sub>\\<circ>\\<omega>. n \\<approx>\\<^sub>\\<circ> A \\<Longrightarrow> P\"\n  shows P"], ["proof (prove)\ngoal (1 subgoal):\n 1. P", "using assms"], ["proof (prove)\nusing this:\n  vfinite A\n  \\<exists>n\\<in>elts \\<omega>.\n     n \\<approx>\\<^sub>\\<circ> A \\<Longrightarrow>\n  P\n\ngoal (1 subgoal):\n 1. P", "by auto"], ["", "lemma vfiniteE2[elim]:\n  assumes \"vfinite A\" \n  obtains n where \"n \\<in>\\<^sub>\\<circ> \\<omega>\" and \"n \\<approx>\\<^sub>\\<circ> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>n \\<in>\\<^sub>\\<circ> \\<omega>;\n         n \\<approx>\\<^sub>\\<circ> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  vfinite A\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>n \\<in>\\<^sub>\\<circ> \\<omega>;\n         n \\<approx>\\<^sub>\\<circ> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["", "text\\<open>Elementary properties.\\<close>"], ["", "lemma veqpoll_omega_vcard[intro, simp]:\n  assumes \"n \\<in>\\<^sub>\\<circ> \\<omega>\" and \"n \\<approx>\\<^sub>\\<circ> A\" \n  shows \"vcard A = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard A = n", "using \n    nat_into_Card[OF assms(1), unfolded Card_def] \n    cardinal_cong[OF assms(2)]"], ["proof (prove)\nusing this:\n  n = vcard n\n  vcard n = vcard A\n\ngoal (1 subgoal):\n 1. vcard A = n", "by simp"], ["", "lemma (in vsv) vfinite_vimage[intro]:\n  assumes \"vfinite A\"\n  shows \"vfinite (r `\\<^sub>\\<circ> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfinite (r `\\<^sub>\\<circ> A)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. vfinite (r `\\<^sub>\\<circ> A)", "have rA: \"r `\\<^sub>\\<circ> A = r `\\<^sub>\\<circ> (\\<D>\\<^sub>\\<circ> r \\<inter>\\<^sub>\\<circ> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r `\\<^sub>\\<circ> A =\n    r `\\<^sub>\\<circ> (\\<D>\\<^sub>\\<circ> r \\<inter>\\<^sub>\\<circ> A)", "by fast"], ["proof (state)\nthis:\n  r `\\<^sub>\\<circ> A =\n  r `\\<^sub>\\<circ> (\\<D>\\<^sub>\\<circ> r \\<inter>\\<^sub>\\<circ> A)\n\ngoal (1 subgoal):\n 1. vfinite (r `\\<^sub>\\<circ> A)", "have DrA: \"\\<D>\\<^sub>\\<circ> r \\<inter>\\<^sub>\\<circ> A \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> r \\<inter>\\<^sub>\\<circ> A\n    \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> r", "by simp"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> r \\<inter>\\<^sub>\\<circ> A\n  \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> r\n\ngoal (1 subgoal):\n 1. vfinite (r `\\<^sub>\\<circ> A)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfinite (r `\\<^sub>\\<circ> A)", "by (simp add: inf_V_def assms vimage_image[OF DrA, folded rA])"], ["proof (state)\nthis:\n  vfinite (r `\\<^sub>\\<circ> A)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [intro] = vsv.vfinite_vimage"], ["", "lemma vfinite_veqpoll_trans:\n  assumes \"vfinite A\" and \"A \\<approx>\\<^sub>\\<circ> B\" \n  shows \"vfinite B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfinite B", "using assms"], ["proof (prove)\nusing this:\n  vfinite A\n  A \\<approx>\\<^sub>\\<circ> B\n\ngoal (1 subgoal):\n 1. vfinite B", "by (simp add: eqpoll_finite_iff)"], ["", "lemma vfinite_vlepoll_trans:\n  assumes \"vfinite A\" and \"B \\<lesssim>\\<^sub>\\<circ> A\"   \n  shows \"vfinite B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfinite B", "by (meson assms eqpoll_finite_iff finite_lepoll_infinite lepoll_antisym)"], ["", "lemma vfinite_vlesspoll_trans:\n  assumes \"vfinite A\" and \"B \\<prec>\\<^sub>\\<circ> A\"   \n  shows \"vfinite B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfinite B", "using assms"], ["proof (prove)\nusing this:\n  vfinite A\n  B \\<prec>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. vfinite B", "by (auto simp: vlesspoll_def vfinite_vlepoll_trans)"], ["", "text\\<open>Induction.\\<close>"], ["", "lemma vfinite_induct[consumes 1, case_names vempty vinsert]:\n  assumes \"vfinite F\"\n    and \"P 0\"\n    and \"\\<And>x F. \\<lbrakk>vfinite F; x \\<notin>\\<^sub>\\<circ> F; P F\\<rbrakk> \\<Longrightarrow> P (vinsert x F)\"\n  shows \"P F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P F", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. P F", "from assms(1)"], ["proof (chain)\npicking this:\n  vfinite F", "obtain n where n: \"n \\<in>\\<^sub>\\<circ> \\<omega>\" and \"n \\<approx>\\<^sub>\\<circ> F\""], ["proof (prove)\nusing this:\n  vfinite F\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>n \\<in>\\<^sub>\\<circ> \\<omega>;\n         n \\<approx>\\<^sub>\\<circ> F\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  n \\<in>\\<^sub>\\<circ> \\<omega>\n  n \\<approx>\\<^sub>\\<circ> F\n\ngoal (1 subgoal):\n 1. P F", "then"], ["proof (chain)\npicking this:\n  n \\<in>\\<^sub>\\<circ> \\<omega>\n  n \\<approx>\\<^sub>\\<circ> F", "obtain f'' where bij: \"bij_betw f'' (elts n) (elts F)\""], ["proof (prove)\nusing this:\n  n \\<in>\\<^sub>\\<circ> \\<omega>\n  n \\<approx>\\<^sub>\\<circ> F\n\ngoal (1 subgoal):\n 1. (\\<And>f''.\n        bij_betw f'' (elts n) (elts F) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding eqpoll_def"], ["proof (prove)\nusing this:\n  n \\<in>\\<^sub>\\<circ> \\<omega>\n  \\<exists>f. bij_betw f (elts n) (elts F)\n\ngoal (1 subgoal):\n 1. (\\<And>f''.\n        bij_betw f'' (elts n) (elts F) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  bij_betw f'' (elts n) (elts F)\n\ngoal (1 subgoal):\n 1. P F", "define f where \"f = (\\<lambda>a\\<in>\\<^sub>\\<circ>n. f'' a)\""], ["proof (state)\nthis:\n  f = VLambda n f''\n\ngoal (1 subgoal):\n 1. P F", "interpret v11 f"], ["proof (prove)\ngoal (1 subgoal):\n 1. v11 f", "unfolding f_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. v11 (VLambda n f'')", "proof(intro v11I)"], ["proof (state)\ngoal (2 subgoals):\n 1. vsv (VLambda n f'')\n 2. vsv ((VLambda n f'')\\<inverse>\\<^sub>\\<circ>)", "show \"vsv ((\\<lambda>a\\<in>\\<^sub>\\<circ>n. f'' a)\\<inverse>\\<^sub>\\<circ>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv ((VLambda n f'')\\<inverse>\\<^sub>\\<circ>)", "proof(intro vsvI)"], ["proof (state)\ngoal (2 subgoals):\n 1. vbrelation ((VLambda n f'')\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (VLambda n f'')\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (VLambda n f'')\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "fix a b c"], ["proof (state)\ngoal (2 subgoals):\n 1. vbrelation ((VLambda n f'')\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (VLambda n f'')\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (VLambda n f'')\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "assume \"\\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> (\\<lambda>a\\<in>\\<^sub>\\<circ>n. f'' a)\\<inverse>\\<^sub>\\<circ>\" and \"\\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> (\\<lambda>a\\<in>\\<^sub>\\<circ>n. f'' a)\\<inverse>\\<^sub>\\<circ>\""], ["proof (state)\nthis:\n  \\<langle>a, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> (VLambda n f'')\\<inverse>\\<^sub>\\<circ>\n  \\<langle>a, c\\<rangle>\n  \\<in>\\<^sub>\\<circ> (VLambda n f'')\\<inverse>\\<^sub>\\<circ>\n\ngoal (2 subgoals):\n 1. vbrelation ((VLambda n f'')\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (VLambda n f'')\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (VLambda n f'')\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "then"], ["proof (chain)\npicking this:\n  \\<langle>a, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> (VLambda n f'')\\<inverse>\\<^sub>\\<circ>\n  \\<langle>a, c\\<rangle>\n  \\<in>\\<^sub>\\<circ> (VLambda n f'')\\<inverse>\\<^sub>\\<circ>", "have \"\\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> (\\<lambda>a\\<in>\\<^sub>\\<circ>n. f'' a)\" \n        and \"\\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> (\\<lambda>a\\<in>\\<^sub>\\<circ>n. f'' a)\" \n        and \"b \\<in>\\<^sub>\\<circ> n\" \n        and \"c \\<in>\\<^sub>\\<circ> n\""], ["proof (prove)\nusing this:\n  \\<langle>a, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> (VLambda n f'')\\<inverse>\\<^sub>\\<circ>\n  \\<langle>a, c\\<rangle>\n  \\<in>\\<^sub>\\<circ> (VLambda n f'')\\<inverse>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. (\\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> VLambda n f'' &&&\n     \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> VLambda n f'') &&&\n    b \\<in>\\<^sub>\\<circ> n &&& c \\<in>\\<^sub>\\<circ> n", "by auto"], ["proof (state)\nthis:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> VLambda n f''\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> VLambda n f''\n  b \\<in>\\<^sub>\\<circ> n\n  c \\<in>\\<^sub>\\<circ> n\n\ngoal (2 subgoals):\n 1. vbrelation ((VLambda n f'')\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (VLambda n f'')\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (VLambda n f'')\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "moreover"], ["proof (state)\nthis:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> VLambda n f''\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> VLambda n f''\n  b \\<in>\\<^sub>\\<circ> n\n  c \\<in>\\<^sub>\\<circ> n\n\ngoal (2 subgoals):\n 1. vbrelation ((VLambda n f'')\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (VLambda n f'')\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (VLambda n f'')\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "then"], ["proof (chain)\npicking this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> VLambda n f''\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> VLambda n f''\n  b \\<in>\\<^sub>\\<circ> n\n  c \\<in>\\<^sub>\\<circ> n", "have \"f'' b = f'' c\""], ["proof (prove)\nusing this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> VLambda n f''\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> VLambda n f''\n  b \\<in>\\<^sub>\\<circ> n\n  c \\<in>\\<^sub>\\<circ> n\n\ngoal (1 subgoal):\n 1. f'' b = f'' c", "by auto"], ["proof (state)\nthis:\n  f'' b = f'' c\n\ngoal (2 subgoals):\n 1. vbrelation ((VLambda n f'')\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (VLambda n f'')\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (VLambda n f'')\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "ultimately"], ["proof (chain)\npicking this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> VLambda n f''\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> VLambda n f''\n  b \\<in>\\<^sub>\\<circ> n\n  c \\<in>\\<^sub>\\<circ> n\n  f'' b = f'' c", "show \"b = c\""], ["proof (prove)\nusing this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> VLambda n f''\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> VLambda n f''\n  b \\<in>\\<^sub>\\<circ> n\n  c \\<in>\\<^sub>\\<circ> n\n  f'' b = f'' c\n\ngoal (1 subgoal):\n 1. b = c", "using bij"], ["proof (prove)\nusing this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> VLambda n f''\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> VLambda n f''\n  b \\<in>\\<^sub>\\<circ> n\n  c \\<in>\\<^sub>\\<circ> n\n  f'' b = f'' c\n  bij_betw f'' (elts n) (elts F)\n\ngoal (1 subgoal):\n 1. b = c", "by (metis bij_betw_iff_bijections)"], ["proof (state)\nthis:\n  b = c\n\ngoal (1 subgoal):\n 1. vbrelation ((VLambda n f'')\\<inverse>\\<^sub>\\<circ>)", "qed auto"], ["proof (state)\nthis:\n  vsv ((VLambda n f'')\\<inverse>\\<^sub>\\<circ>)\n\ngoal (1 subgoal):\n 1. vsv (VLambda n f'')", "qed auto"], ["proof (state)\ngoal (1 subgoal):\n 1. P F", "have dom_f: \"\\<D>\\<^sub>\\<circ> f = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> f = n", "unfolding f_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (VLambda n f'') = n", "by clarsimp"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> f = n\n\ngoal (1 subgoal):\n 1. P F", "have ran_f: \"\\<R>\\<^sub>\\<circ> f = F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> f = F", "proof(intro vsubset_antisym vsubsetI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> f \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> F\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> F \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> f", "fix b"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> f \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> F\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> F \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> f", "assume \"b \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> f\""], ["proof (state)\nthis:\n  b \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> f\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> f \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> F\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> F \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> f", "then"], ["proof (chain)\npicking this:\n  b \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> f", "obtain a where \"a \\<in>\\<^sub>\\<circ> n\" and \"b = f'' a\""], ["proof (prove)\nusing this:\n  b \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> f\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>a \\<in>\\<^sub>\\<circ> n; b = f'' a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding f_def"], ["proof (prove)\nusing this:\n  b \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (VLambda n f'')\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>a \\<in>\\<^sub>\\<circ> n; b = f'' a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> n\n  b = f'' a\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> f \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> F\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> F \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> f", "then"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> n\n  b = f'' a", "show \"b \\<in>\\<^sub>\\<circ> F\""], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> n\n  b = f'' a\n\ngoal (1 subgoal):\n 1. b \\<in>\\<^sub>\\<circ> F", "by (meson bij bij_betw_iff_bijections)"], ["proof (state)\nthis:\n  b \\<in>\\<^sub>\\<circ> F\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> F \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> f", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> F \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> f", "fix b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> F \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> f", "assume \"b \\<in>\\<^sub>\\<circ> F\""], ["proof (state)\nthis:\n  b \\<in>\\<^sub>\\<circ> F\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> F \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> f", "then"], ["proof (chain)\npicking this:\n  b \\<in>\\<^sub>\\<circ> F", "obtain a where \"a \\<in>\\<^sub>\\<circ> n\" and \"b = f'' a\""], ["proof (prove)\nusing this:\n  b \\<in>\\<^sub>\\<circ> F\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>a \\<in>\\<^sub>\\<circ> n; b = f'' a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis bij bij_betw_iff_bijections)"], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> n\n  b = f'' a\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> F \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> f", "then"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> n\n  b = f'' a", "show \"b \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> f\""], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> n\n  b = f'' a\n\ngoal (1 subgoal):\n 1. b \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> f", "unfolding f_def"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> n\n  b = f'' a\n\ngoal (1 subgoal):\n 1. b \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (VLambda n f'')", "by auto"], ["proof (state)\nthis:\n  b \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> f = F\n\ngoal (1 subgoal):\n 1. P F", "define f' where \"f' n = f `\\<^sub>\\<circ> n\" for n"], ["proof (state)\nthis:\n  f' ?n = f `\\<^sub>\\<circ> ?n\n\ngoal (1 subgoal):\n 1. P F", "have F_def: \"F = f' n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F = f' n", "unfolding f'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. F = f `\\<^sub>\\<circ> n", "using dom_f ran_f vimage_vdomain"], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> f = n\n  \\<R>\\<^sub>\\<circ> f = F\n  ?r `\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> ?r = \\<R>\\<^sub>\\<circ> ?r\n\ngoal (1 subgoal):\n 1. F = f `\\<^sub>\\<circ> n", "by clarsimp"], ["proof (state)\nthis:\n  F = f' n\n\ngoal (1 subgoal):\n 1. P F", "have \"v11 (\\<lambda>a\\<in>\\<^sub>\\<circ>n. f' a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v11 (VLambda n f')", "proof(intro vsv.vsv_valneq_v11I, unfold vdomain_VLambda)"], ["proof (state)\ngoal (2 subgoals):\n 1. vsv (VLambda n f')\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in>\\<^sub>\\<circ> n; y \\<in>\\<^sub>\\<circ> n;\n        x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> VLambda n f'\\<lparr>x\\<rparr> \\<noteq>\n                         VLambda n f'\\<lparr>y\\<rparr>", "show \"vsv (\\<lambda>a\\<in>\\<^sub>\\<circ>n. f' a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (VLambda n f')", "by simp"], ["proof (state)\nthis:\n  vsv (VLambda n f')\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in>\\<^sub>\\<circ> n; y \\<in>\\<^sub>\\<circ> n;\n        x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> VLambda n f'\\<lparr>x\\<rparr> \\<noteq>\n                         VLambda n f'\\<lparr>y\\<rparr>", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in>\\<^sub>\\<circ> n; y \\<in>\\<^sub>\\<circ> n;\n        x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> VLambda n f'\\<lparr>x\\<rparr> \\<noteq>\n                         VLambda n f'\\<lparr>y\\<rparr>", "assume xD: \"x \\<in>\\<^sub>\\<circ> n\" and yD: \"y \\<in>\\<^sub>\\<circ> n\" and xy: \"x \\<noteq> y\""], ["proof (state)\nthis:\n  x \\<in>\\<^sub>\\<circ> n\n  y \\<in>\\<^sub>\\<circ> n\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in>\\<^sub>\\<circ> n; y \\<in>\\<^sub>\\<circ> n;\n        x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> VLambda n f'\\<lparr>x\\<rparr> \\<noteq>\n                         VLambda n f'\\<lparr>y\\<rparr>", "from \\<open>x \\<in>\\<^sub>\\<circ> n\\<close> \\<open>y \\<in>\\<^sub>\\<circ> n\\<close> \\<open>n \\<in>\\<^sub>\\<circ> \\<omega>\\<close>"], ["proof (chain)\npicking this:\n  x \\<in>\\<^sub>\\<circ> n\n  y \\<in>\\<^sub>\\<circ> n\n  n \\<in>\\<^sub>\\<circ> \\<omega>", "have xn: \"x \\<subseteq>\\<^sub>\\<circ> n\" and yn: \"y \\<subseteq>\\<^sub>\\<circ> n\""], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>\\<circ> n\n  y \\<in>\\<^sub>\\<circ> n\n  n \\<in>\\<^sub>\\<circ> \\<omega>\n\ngoal (1 subgoal):\n 1. x \\<subseteq>\\<^sub>\\<circ> n &&& y \\<subseteq>\\<^sub>\\<circ> n", "by (simp_all add: OrdmemD order.strict_implies_order)"], ["proof (state)\nthis:\n  x \\<subseteq>\\<^sub>\\<circ> n\n  y \\<subseteq>\\<^sub>\\<circ> n\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in>\\<^sub>\\<circ> n; y \\<in>\\<^sub>\\<circ> n;\n        x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> VLambda n f'\\<lparr>x\\<rparr> \\<noteq>\n                         VLambda n f'\\<lparr>y\\<rparr>", "show \"(\\<lambda>a\\<in>\\<^sub>\\<circ>n. f' a)\\<lparr>x\\<rparr> \\<noteq> (\\<lambda>a\\<in>\\<^sub>\\<circ>n. f' a)\\<lparr>y\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. VLambda n f'\\<lparr>x\\<rparr> \\<noteq> VLambda n f'\\<lparr>y\\<rparr>", "unfolding beta[OF xD] beta[OF yD] f'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. f `\\<^sub>\\<circ> x \\<noteq> f `\\<^sub>\\<circ> y", "using xn yn xy"], ["proof (prove)\nusing this:\n  x \\<subseteq>\\<^sub>\\<circ> n\n  y \\<subseteq>\\<^sub>\\<circ> n\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. f `\\<^sub>\\<circ> x \\<noteq> f `\\<^sub>\\<circ> y", "by (simp add: dom_f v11_vimage_vpsubset_neq)"], ["proof (state)\nthis:\n  VLambda n f'\\<lparr>x\\<rparr> \\<noteq> VLambda n f'\\<lparr>y\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  v11 (VLambda n f')\n\ngoal (1 subgoal):\n 1. P F", "define P' where \"P' n' = (if n' \\<le> n then P (f' n') else True)\" for n'"], ["proof (state)\nthis:\n  P' ?n' =\n  (if ?n' \\<subseteq>\\<^sub>\\<circ> n \\<Rightarrow> P (f' ?n') \n    | otherwise \\<Rightarrow> True)\n\ngoal (1 subgoal):\n 1. P F", "from n"], ["proof (chain)\npicking this:\n  n \\<in>\\<^sub>\\<circ> \\<omega>", "have \"P' n\""], ["proof (prove)\nusing this:\n  n \\<in>\\<^sub>\\<circ> \\<omega>\n\ngoal (1 subgoal):\n 1. P' n", "proof(induct rule: omega_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. P' 0\n 2. \\<And>n.\n       \\<lbrakk>n \\<in>\\<^sub>\\<circ> \\<omega>; P' n\\<rbrakk>\n       \\<Longrightarrow> P' (ZFC_in_HOL.succ n)", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. P' 0\n 2. \\<And>n.\n       \\<lbrakk>n \\<in>\\<^sub>\\<circ> \\<omega>; P' n\\<rbrakk>\n       \\<Longrightarrow> P' (ZFC_in_HOL.succ n)", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. P' 0", "unfolding P'_def f'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. if 0 \\<subseteq>\\<^sub>\\<circ> n \\<Rightarrow> P (f `\\<^sub>\\<circ> 0) \n     | otherwise \\<Rightarrow> True", "using assms(2)"], ["proof (prove)\nusing this:\n  P 0\n\ngoal (1 subgoal):\n 1. if 0 \\<subseteq>\\<^sub>\\<circ> n \\<Rightarrow> P (f `\\<^sub>\\<circ> 0) \n     | otherwise \\<Rightarrow> True", "by auto"], ["proof (state)\nthis:\n  P' 0\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>n \\<in>\\<^sub>\\<circ> \\<omega>; P' n\\<rbrakk>\n       \\<Longrightarrow> P' (ZFC_in_HOL.succ n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>n \\<in>\\<^sub>\\<circ> \\<omega>; P' n\\<rbrakk>\n       \\<Longrightarrow> P' (ZFC_in_HOL.succ n)", "case (succ k)"], ["proof (state)\nthis:\n  k \\<in>\\<^sub>\\<circ> \\<omega>\n  P' k\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>n \\<in>\\<^sub>\\<circ> \\<omega>; P' n\\<rbrakk>\n       \\<Longrightarrow> P' (ZFC_in_HOL.succ n)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. P' (ZFC_in_HOL.succ k)", "proof(cases \\<open>succ k \\<le> n\\<close>)"], ["proof (state)\ngoal (2 subgoals):\n 1. ZFC_in_HOL.succ k \\<subseteq>\\<^sub>\\<circ> n \\<Longrightarrow>\n    P' (ZFC_in_HOL.succ k)\n 2. \\<not> ZFC_in_HOL.succ k \\<subseteq>\\<^sub>\\<circ> n \\<Longrightarrow>\n    P' (ZFC_in_HOL.succ k)", "case True"], ["proof (state)\nthis:\n  ZFC_in_HOL.succ k \\<subseteq>\\<^sub>\\<circ> n\n\ngoal (2 subgoals):\n 1. ZFC_in_HOL.succ k \\<subseteq>\\<^sub>\\<circ> n \\<Longrightarrow>\n    P' (ZFC_in_HOL.succ k)\n 2. \\<not> ZFC_in_HOL.succ k \\<subseteq>\\<^sub>\\<circ> n \\<Longrightarrow>\n    P' (ZFC_in_HOL.succ k)", "then"], ["proof (chain)\npicking this:\n  ZFC_in_HOL.succ k \\<subseteq>\\<^sub>\\<circ> n", "obtain x where xF: \"vinsert x (f' k) = (f' (succ k))\""], ["proof (prove)\nusing this:\n  ZFC_in_HOL.succ k \\<subseteq>\\<^sub>\\<circ> n\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        vinsert x (f' k) = f' (ZFC_in_HOL.succ k) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (simp add: f'_def succ_def vsubsetD dom_f vsv_vimage_vinsert)"], ["proof (state)\nthis:\n  vinsert x (f' k) = f' (ZFC_in_HOL.succ k)\n\ngoal (2 subgoals):\n 1. ZFC_in_HOL.succ k \\<subseteq>\\<^sub>\\<circ> n \\<Longrightarrow>\n    P' (ZFC_in_HOL.succ k)\n 2. \\<not> ZFC_in_HOL.succ k \\<subseteq>\\<^sub>\\<circ> n \\<Longrightarrow>\n    P' (ZFC_in_HOL.succ k)", "from True"], ["proof (chain)\npicking this:\n  ZFC_in_HOL.succ k \\<subseteq>\\<^sub>\\<circ> n", "have \"k \\<le> n\""], ["proof (prove)\nusing this:\n  ZFC_in_HOL.succ k \\<subseteq>\\<^sub>\\<circ> n\n\ngoal (1 subgoal):\n 1. k \\<subseteq>\\<^sub>\\<circ> n", "by auto"], ["proof (state)\nthis:\n  k \\<subseteq>\\<^sub>\\<circ> n\n\ngoal (2 subgoals):\n 1. ZFC_in_HOL.succ k \\<subseteq>\\<^sub>\\<circ> n \\<Longrightarrow>\n    P' (ZFC_in_HOL.succ k)\n 2. \\<not> ZFC_in_HOL.succ k \\<subseteq>\\<^sub>\\<circ> n \\<Longrightarrow>\n    P' (ZFC_in_HOL.succ k)", "with \\<open>P' k\\<close>"], ["proof (chain)\npicking this:\n  P' k\n  k \\<subseteq>\\<^sub>\\<circ> n", "have \"P (f' k)\""], ["proof (prove)\nusing this:\n  P' k\n  k \\<subseteq>\\<^sub>\\<circ> n\n\ngoal (1 subgoal):\n 1. P (f' k)", "unfolding P'_def"], ["proof (prove)\nusing this:\n  if k \\<subseteq>\\<^sub>\\<circ> n \\<Rightarrow> P (f' k) \n   | otherwise \\<Rightarrow> True\n  k \\<subseteq>\\<^sub>\\<circ> n\n\ngoal (1 subgoal):\n 1. P (f' k)", "by simp"], ["proof (state)\nthis:\n  P (f' k)\n\ngoal (2 subgoals):\n 1. ZFC_in_HOL.succ k \\<subseteq>\\<^sub>\\<circ> n \\<Longrightarrow>\n    P' (ZFC_in_HOL.succ k)\n 2. \\<not> ZFC_in_HOL.succ k \\<subseteq>\\<^sub>\\<circ> n \\<Longrightarrow>\n    P' (ZFC_in_HOL.succ k)", "then"], ["proof (chain)\npicking this:\n  P (f' k)", "have \"f' k \\<noteq> f' (succ k)\""], ["proof (prove)\nusing this:\n  P (f' k)\n\ngoal (1 subgoal):\n 1. f' k \\<noteq> f' (ZFC_in_HOL.succ k)", "by (simp add: True f'_def \\<open>k \\<le> n\\<close> dom_f v11_vimage_vpsubset_neq)"], ["proof (state)\nthis:\n  f' k \\<noteq> f' (ZFC_in_HOL.succ k)\n\ngoal (2 subgoals):\n 1. ZFC_in_HOL.succ k \\<subseteq>\\<^sub>\\<circ> n \\<Longrightarrow>\n    P' (ZFC_in_HOL.succ k)\n 2. \\<not> ZFC_in_HOL.succ k \\<subseteq>\\<^sub>\\<circ> n \\<Longrightarrow>\n    P' (ZFC_in_HOL.succ k)", "with xF"], ["proof (chain)\npicking this:\n  vinsert x (f' k) = f' (ZFC_in_HOL.succ k)\n  f' k \\<noteq> f' (ZFC_in_HOL.succ k)", "have \"x \\<notin>\\<^sub>\\<circ> f' k\""], ["proof (prove)\nusing this:\n  vinsert x (f' k) = f' (ZFC_in_HOL.succ k)\n  f' k \\<noteq> f' (ZFC_in_HOL.succ k)\n\ngoal (1 subgoal):\n 1. x \\<notin>\\<^sub>\\<circ> f' k", "by auto"], ["proof (state)\nthis:\n  x \\<notin>\\<^sub>\\<circ> f' k\n\ngoal (2 subgoals):\n 1. ZFC_in_HOL.succ k \\<subseteq>\\<^sub>\\<circ> n \\<Longrightarrow>\n    P' (ZFC_in_HOL.succ k)\n 2. \\<not> ZFC_in_HOL.succ k \\<subseteq>\\<^sub>\\<circ> n \\<Longrightarrow>\n    P' (ZFC_in_HOL.succ k)", "have \"vfinite (f' k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfinite (f' k)", "by (simp add: \\<open>k \\<in>\\<^sub>\\<circ> \\<omega>\\<close> f'_def finite_Ord_omega vfinite_vimage)"], ["proof (state)\nthis:\n  vfinite (f' k)\n\ngoal (2 subgoals):\n 1. ZFC_in_HOL.succ k \\<subseteq>\\<^sub>\\<circ> n \\<Longrightarrow>\n    P' (ZFC_in_HOL.succ k)\n 2. \\<not> ZFC_in_HOL.succ k \\<subseteq>\\<^sub>\\<circ> n \\<Longrightarrow>\n    P' (ZFC_in_HOL.succ k)", "from assms(3)[OF \\<open>vfinite (f' k)\\<close> \\<open>x \\<notin>\\<^sub>\\<circ> f' k\\<close> \\<open>P (f' k)\\<close>]"], ["proof (chain)\npicking this:\n  P (vinsert x (f' k))", "show ?thesis"], ["proof (prove)\nusing this:\n  P (vinsert x (f' k))\n\ngoal (1 subgoal):\n 1. P' (ZFC_in_HOL.succ k)", "unfolding xF P'_def"], ["proof (prove)\nusing this:\n  P (f' (ZFC_in_HOL.succ k))\n\ngoal (1 subgoal):\n 1. if ZFC_in_HOL.succ k \\<subseteq>\\<^sub>\\<circ> n \\<Rightarrow>\n         P (f' (ZFC_in_HOL.succ k)) \n     | otherwise \\<Rightarrow> True", "by simp"], ["proof (state)\nthis:\n  P' (ZFC_in_HOL.succ k)\n\ngoal (1 subgoal):\n 1. \\<not> ZFC_in_HOL.succ k \\<subseteq>\\<^sub>\\<circ> n \\<Longrightarrow>\n    P' (ZFC_in_HOL.succ k)", "qed (unfold P'_def, auto)"], ["proof (state)\nthis:\n  P' (ZFC_in_HOL.succ k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P' n\n\ngoal (1 subgoal):\n 1. P F", "then"], ["proof (chain)\npicking this:\n  P' n", "show ?thesis"], ["proof (prove)\nusing this:\n  P' n\n\ngoal (1 subgoal):\n 1. P F", "unfolding P'_def F_def"], ["proof (prove)\nusing this:\n  if n \\<subseteq>\\<^sub>\\<circ> n \\<Rightarrow> P (f' n) \n   | otherwise \\<Rightarrow> True\n\ngoal (1 subgoal):\n 1. P (f' n)", "by simp"], ["proof (state)\nthis:\n  P F\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Set operations.\\<close>"], ["", "lemma vfinite_vempty[simp]: \"vfinite (0\\<^sub>\\<nat>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfinite (0\\<^sub>\\<nat>)", "by simp"], ["", "lemma vfinite_vsingleton[simp]: \"vfinite (set {x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfinite (set {x})", "by simp"], ["", "lemma vfinite_vdoubleton[simp]: \"vfinite (set {x, y})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfinite (set {x, y})", "by simp"], ["", "lemma vfinite_vinsert:\n  assumes \"vfinite F\"\n  shows \"vfinite (vinsert x F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfinite (vinsert x F)", "using assms"], ["proof (prove)\nusing this:\n  vfinite F\n\ngoal (1 subgoal):\n 1. vfinite (vinsert x F)", "by simp"], ["", "lemma vfinite_vinsertD:\n  assumes \"vfinite (vinsert x F)\"\n  shows \"vfinite F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfinite F", "using assms"], ["proof (prove)\nusing this:\n  vfinite (vinsert x F)\n\ngoal (1 subgoal):\n 1. vfinite F", "by simp"], ["", "lemma vfinite_vsubset: \n  assumes \"vfinite B\" and \"A \\<subseteq>\\<^sub>\\<circ> B\" \n  shows \"vfinite A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfinite A", "using assms"], ["proof (prove)\nusing this:\n  vfinite B\n  A \\<subseteq>\\<^sub>\\<circ> B\n\ngoal (1 subgoal):\n 1. vfinite A", "by (induct arbitrary: A rule: vfinite_induct)\n    (simp_all add: less_eq_V_def finite_subset)"], ["", "lemma vfinite_vunion: \"vfinite (A \\<union>\\<^sub>\\<circ> B) \\<longleftrightarrow> vfinite A \\<and> vfinite B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfinite (A \\<union>\\<^sub>\\<circ> B) = (vfinite A \\<and> vfinite B)", "by (auto simp: elts_sup_iff)"], ["", "lemma vfinite_vunionI:\n  assumes \"vfinite A\" and \"vfinite B\"\n  shows \"vfinite (A \\<union>\\<^sub>\\<circ> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfinite (A \\<union>\\<^sub>\\<circ> B)", "using assms"], ["proof (prove)\nusing this:\n  vfinite A\n  vfinite B\n\ngoal (1 subgoal):\n 1. vfinite (A \\<union>\\<^sub>\\<circ> B)", "by (simp add: elts_sup_iff)"], ["", "lemma vfinite_vunionD:\n  assumes \"vfinite (A \\<union>\\<^sub>\\<circ> B)\" \n  shows \"vfinite A\" and \"vfinite B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfinite A &&& vfinite B", "using assms"], ["proof (prove)\nusing this:\n  vfinite (A \\<union>\\<^sub>\\<circ> B)\n\ngoal (1 subgoal):\n 1. vfinite A &&& vfinite B", "by (auto simp: elts_sup_iff)"], ["", "lemma vfinite_vintersectionI:\n  assumes \"vfinite A\" and \"vfinite B\"\n  shows \"vfinite (A \\<inter>\\<^sub>\\<circ> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfinite (A \\<inter>\\<^sub>\\<circ> B)", "using assms"], ["proof (prove)\nusing this:\n  vfinite A\n  vfinite B\n\ngoal (1 subgoal):\n 1. vfinite (A \\<inter>\\<^sub>\\<circ> B)", "by (simp add: vfinite_vsubset)"], ["", "lemma vfinite_VPowI: \n  assumes \"vfinite A\"\n  shows \"vfinite (VPow A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfinite (VPow A)", "using assms"], ["proof (prove)\nusing this:\n  vfinite A\n\ngoal (1 subgoal):\n 1. vfinite (VPow A)", "proof(induct rule: vfinite_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. vfinite (VPow 0)\n 2. \\<And>x F.\n       \\<lbrakk>vfinite F; x \\<notin>\\<^sub>\\<circ> F;\n        vfinite (VPow F)\\<rbrakk>\n       \\<Longrightarrow> vfinite (VPow (vinsert x F))", "case vempty"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. vfinite (VPow 0)\n 2. \\<And>x F.\n       \\<lbrakk>vfinite F; x \\<notin>\\<^sub>\\<circ> F;\n        vfinite (VPow F)\\<rbrakk>\n       \\<Longrightarrow> vfinite (VPow (vinsert x F))", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfinite (VPow 0)", "by simp"], ["proof (state)\nthis:\n  vfinite (VPow 0)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>vfinite F; x \\<notin>\\<^sub>\\<circ> F;\n        vfinite (VPow F)\\<rbrakk>\n       \\<Longrightarrow> vfinite (VPow (vinsert x F))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>vfinite F; x \\<notin>\\<^sub>\\<circ> F;\n        vfinite (VPow F)\\<rbrakk>\n       \\<Longrightarrow> vfinite (VPow (vinsert x F))", "case (vinsert x F)"], ["proof (state)\nthis:\n  vfinite F\n  x \\<notin>\\<^sub>\\<circ> F\n  vfinite (VPow F)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>vfinite F; x \\<notin>\\<^sub>\\<circ> F;\n        vfinite (VPow F)\\<rbrakk>\n       \\<Longrightarrow> vfinite (VPow (vinsert x F))", "then"], ["proof (chain)\npicking this:\n  vfinite F\n  x \\<notin>\\<^sub>\\<circ> F\n  vfinite (VPow F)", "show ?case"], ["proof (prove)\nusing this:\n  vfinite F\n  x \\<notin>\\<^sub>\\<circ> F\n  vfinite (VPow F)\n\ngoal (1 subgoal):\n 1. vfinite (VPow (vinsert x F))", "unfolding VPow_vinsert"], ["proof (prove)\nusing this:\n  vfinite F\n  x \\<notin>\\<^sub>\\<circ> F\n  vfinite (VPow F)\n\ngoal (1 subgoal):\n 1. vfinite\n     (VPow F \\<union>\\<^sub>\\<circ>\n      VLambda (VPow F) (vinsert x) `\\<^sub>\\<circ> VPow F)", "using rel_VLambda.vfinite_vimage"], ["proof (prove)\nusing this:\n  vfinite F\n  x \\<notin>\\<^sub>\\<circ> F\n  vfinite (VPow F)\n  vfinite ?A \\<Longrightarrow> vfinite (VLambda ?Aa ?f `\\<^sub>\\<circ> ?A)\n\ngoal (1 subgoal):\n 1. vfinite\n     (VPow F \\<union>\\<^sub>\\<circ>\n      VLambda (VPow F) (vinsert x) `\\<^sub>\\<circ> VPow F)", "by (intro vfinite_vunionI) metis+"], ["proof (state)\nthis:\n  vfinite (VPow (vinsert x F))\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Connections.\\<close>"], ["", "lemma vfinite_vcard_vfinite: \"vfinite (vcard A) = vfinite A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfinite (vcard A) = vfinite A", "by (simp add: cardinal_eqpoll eqpoll_finite_iff)"], ["", "lemma vfinite_vcard_omega_iff: \"vfinite A \\<longleftrightarrow> vcard A \\<in>\\<^sub>\\<circ> \\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfinite A = (vcard A \\<in>\\<^sub>\\<circ> \\<omega>)", "using vfinite_vcard_vfinite"], ["proof (prove)\nusing this:\n  vfinite (vcard ?A) = vfinite ?A\n\ngoal (1 subgoal):\n 1. vfinite A = (vcard A \\<in>\\<^sub>\\<circ> \\<omega>)", "by auto"], ["", "lemmas vcard_vfinite_omega = vfinite_vcard_omega_iff[THEN iffD2]\n  and vfinite_vcard_omega = vfinite_vcard_omega_iff[THEN iffD1]"], ["", "lemma vfinite_csucc[intro, simp]:\n  assumes \"vfinite A\"\n  shows \"csucc (vcard A) = succ (vcard A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. csucc (vcard A) = ZFC_in_HOL.succ (vcard A)", "using assms"], ["proof (prove)\nusing this:\n  vfinite A\n\ngoal (1 subgoal):\n 1. csucc (vcard A) = ZFC_in_HOL.succ (vcard A)", "by (force simp: finite_csucc)"], ["", "lemmas [intro, simp] = finite_csucc"], ["", "text\\<open>Previous connections.\\<close>"], ["", "lemma vcard_vsingleton[simp]: \"vcard (set {a}) = 1\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (set {a}) = 1\\<^sub>\\<nat>", "by auto"], ["", "lemma vfinite_vcard_vinsert_nin[simp]:\n  assumes \"vfinite A\" and \"a \\<notin>\\<^sub>\\<circ> A\"\n  shows \"vcard (vinsert a A) = csucc (vcard A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (vinsert a A) = csucc (vcard A)", "using assms"], ["proof (prove)\nusing this:\n  vfinite A\n  a \\<notin>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. vcard (vinsert a A) = csucc (vcard A)", "by (simp add: ZFC_in_HOL.vinsert_def)"], ["", "text\\<open>\\newpage\\<close>"], ["", "end"]]}