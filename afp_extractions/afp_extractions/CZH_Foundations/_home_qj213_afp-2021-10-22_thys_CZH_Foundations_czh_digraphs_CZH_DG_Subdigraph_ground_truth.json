{"file_name": "/home/qj213/afp-2021-10-22/thys/CZH_Foundations/czh_digraphs/CZH_DG_Subdigraph.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CZH_Foundations", "problem_names": ["lemmas [dg_sub_fw_cs_intros] = \n  subdigraph.subdg_Obj_vsubset\n  subdigraph.subdg_is_arr_vsubset", "lemma (in subdigraph) subdigraph_axioms'[dg_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<BB>' = \\<BB>\"\n  shows \"\\<BB>' \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>'\\<^esub> \\<CC>\"", "lemma (in subdigraph) subdigraph_axioms''[dg_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<CC>' = \\<CC>\"\n  shows \"\\<BB> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>'\\<^esub> \\<CC>'\"", "lemmas [dg_sub_cs_intros] = subdigraphD(1,2)", "lemma (in subdigraph) subdg_subdigraph_op_dg_op_dg: \"op_dg \\<BB> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> op_dg \\<CC>\"", "lemmas subdg_subdigraph_op_dg_op_dg[dg_op_intros] = \n  subdigraph.subdg_subdigraph_op_dg_op_dg", "lemma (in subdigraph) subdg_objD:\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\" \n  shows \"a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"", "lemmas [dg_sub_fw_cs_intros] = subdigraph.subdg_objD", "lemma (in subdigraph) subdg_arrD[dg_sub_fw_cs_intros]:\n  assumes \"f \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\" \n  shows \"f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\"", "lemmas [dg_sub_fw_cs_intros] = subdigraph.subdg_arrD", "lemma (in subdigraph) subdg_dom_simp:\n  assumes \"f \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\" \n  shows \"\\<BB>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr>\"", "lemmas [dg_sub_bw_cs_simps] = subdigraph.subdg_dom_simp", "lemma (in subdigraph) subdg_cod_simp:\n  assumes \"f \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\" \n  shows \"\\<BB>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>\"", "lemmas [dg_sub_bw_cs_simps] = subdigraph.subdg_cod_simp", "lemma (in subdigraph) subdg_is_arrD:\n  assumes \"f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\" \n  shows \"f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"", "lemmas [dg_sub_fw_cs_intros] = subdigraph.subdg_is_arrD", "lemma subdg_refl: \n  assumes \"digraph \\<alpha> \\<AA>\" \n  shows \"\\<AA> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<AA>\"", "lemma subdg_trans[trans]: \n  assumes \"\\<AA> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"\\<BB> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<AA> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"", "lemma subdg_antisym:\n  assumes \"\\<AA> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"\\<BB> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<AA>\"\n  shows \"\\<AA> = \\<BB>\"", "lemma dghm_inc_components:\n  shows \"dghm_inc \\<BB> \\<CC>\\<lparr>ObjMap\\<rparr> = vid_on (\\<BB>\\<lparr>Obj\\<rparr>)\" \n    and \"dghm_inc \\<BB> \\<CC>\\<lparr>ArrMap\\<rparr> = vid_on (\\<BB>\\<lparr>Arr\\<rparr>)\" \n    and [dg_cs_simps]: \"dghm_inc \\<BB> \\<CC>\\<lparr>HomDom\\<rparr> = \\<BB>\"\n    and [dg_cs_simps]: \"dghm_inc \\<BB> \\<CC>\\<lparr>HomCod\\<rparr> = \\<CC>\"", "lemmas (in subdigraph) subdg_dghm_inc_is_ft_dghm = inc.is_ft_dghm_axioms", "lemma (in subdigraph) subdg_dghm_inc_op_dg_is_dghm[dg_sub_cs_intros]:\n  \"dghm_inc (op_dg \\<BB>) (op_dg \\<CC>) : op_dg \\<BB> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> op_dg \\<CC>\"", "lemmas [dg_sub_cs_intros] = subdigraph.subdg_dghm_inc_op_dg_is_dghm", "lemma (in subdigraph) subdg_op_dg_dghm_inc[dg_op_simps]: \n  \"op_dghm (dghm_inc \\<BB> \\<CC>) = dghm_inc (op_dg \\<BB>) (op_dg \\<CC>)\"", "lemmas [dg_op_simps] = subdigraph.subdg_op_dg_dghm_inc", "lemma (in fl_subdigraph) fl_subdigraph_axioms'[dg_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<BB>' = \\<BB>\"\n  shows \"\\<BB>' \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>'\\<^esub> \\<CC>\"", "lemma (in fl_subdigraph) fl_subdigraph_axioms''[dg_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<CC>' = \\<CC>\"\n  shows \"\\<BB> \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>'\\<^esub> \\<CC>'\"", "lemmas [dg_sub_cs_intros] = fl_subdigraphD(1)", "lemma (in fl_subdigraph) fl_subdg_Hom_eq:\n  assumes \"A \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\" and \"B \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\"\n  shows \"Hom \\<BB> A B = Hom \\<CC> A B\"", "lemmas [dg_sub_bw_cs_intros] = wide_subdigraph.wide_subdg_Obj", "lemma (in wide_subdigraph) wide_subdigraph_axioms'[dg_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<BB>' = \\<BB>\"\n  shows \"\\<BB>' \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>'\\<^esub> \\<CC>\"", "lemma (in wide_subdigraph) wide_subdigraph_axioms''[dg_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<CC>' = \\<CC>\"\n  shows \"\\<BB> \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>'\\<^esub> \\<CC>'\"", "lemmas [dg_sub_cs_intros] = wide_subdigraphD(1)", "lemma (in wide_subdigraph) wide_subdg_obj_eq[dg_sub_bw_cs_simps]: \n  \"\\<BB>\\<lparr>Obj\\<rparr> = \\<CC>\\<lparr>Obj\\<rparr>\"", "lemmas [dg_sub_bw_cs_simps] = wide_subdigraph.wide_subdg_obj_eq", "lemma wide_subdg_refl: \n  assumes \"digraph \\<alpha> \\<AA>\" \n  shows \"\\<AA> \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<AA>\"", "lemma wide_subdg_trans[trans]: \n  assumes \"\\<AA> \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"\\<BB> \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<AA> \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"", "lemma wide_subdg_antisym:\n  assumes \"\\<AA> \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"\\<BB> \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<AA>\"\n  shows \"\\<AA> = \\<BB>\""], "translations": [["", "lemmas [dg_sub_fw_cs_intros] = \n  subdigraph.subdg_Obj_vsubset\n  subdigraph.subdg_is_arr_vsubset"], ["", "text\\<open>Rules.\\<close>"], ["", "lemma (in subdigraph) subdigraph_axioms'[dg_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<BB>' = \\<BB>\"\n  shows \"\\<BB>' \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>'\\<^esub> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>' \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>'\\<^esub> \\<CC>", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule subdigraph_axioms)"], ["", "lemma (in subdigraph) subdigraph_axioms''[dg_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<CC>' = \\<CC>\"\n  shows \"\\<BB> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>'\\<^esub> \\<CC>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>'\\<^esub> \\<CC>'", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule subdigraph_axioms)"], ["", "mk_ide rf subdigraph_def[unfolded subdigraph_axioms_def]\n  |intro subdigraphI|\n  |dest subdigraphD[dest]|\n  |elim subdigraphE[elim!]|"], ["", "lemmas [dg_sub_cs_intros] = subdigraphD(1,2)"], ["", "text\\<open>The opposite subdigraph.\\<close>"], ["", "lemma (in subdigraph) subdg_subdigraph_op_dg_op_dg: \"op_dg \\<BB> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> op_dg \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_dg \\<BB>\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> op_dg \\<CC>", "proof(rule subdigraphI)"], ["proof (state)\ngoal (4 subgoals):\n 1. digraph \\<alpha> (op_dg \\<BB>)\n 2. digraph \\<alpha> (op_dg \\<CC>)\n 3. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> op_dg\n                              \\<BB>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       a \\<in>\\<^sub>\\<circ> op_dg \\<CC>\\<lparr>Obj\\<rparr>\n 4. \\<And>a b f.\n       f : a \\<mapsto>\\<^bsub>op_dg \\<BB>\\<^esub> b \\<Longrightarrow>\n       f : a \\<mapsto>\\<^bsub>op_dg \\<CC>\\<^esub> b", "show \"a \\<in>\\<^sub>\\<circ> op_dg \\<BB>\\<lparr>Obj\\<rparr> \\<Longrightarrow> a \\<in>\\<^sub>\\<circ> op_dg \\<CC>\\<lparr>Obj\\<rparr>\" for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> op_dg \\<BB>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n    a \\<in>\\<^sub>\\<circ> op_dg \\<CC>\\<lparr>Obj\\<rparr>", "by (auto simp: dg_op_simps subdg_Obj_vsubset)"], ["proof (state)\nthis:\n  ?a \\<in>\\<^sub>\\<circ> op_dg \\<BB>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n  ?a \\<in>\\<^sub>\\<circ> op_dg \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (3 subgoals):\n 1. digraph \\<alpha> (op_dg \\<BB>)\n 2. digraph \\<alpha> (op_dg \\<CC>)\n 3. \\<And>a b f.\n       f : a \\<mapsto>\\<^bsub>op_dg \\<BB>\\<^esub> b \\<Longrightarrow>\n       f : a \\<mapsto>\\<^bsub>op_dg \\<CC>\\<^esub> b", "show \"f : a \\<mapsto>\\<^bsub>op_dg \\<BB>\\<^esub> b \\<Longrightarrow> f : a \\<mapsto>\\<^bsub>op_dg \\<CC>\\<^esub> b\" for f a b"], ["proof (prove)\ngoal (1 subgoal):\n 1. f : a \\<mapsto>\\<^bsub>op_dg \\<BB>\\<^esub> b \\<Longrightarrow>\n    f : a \\<mapsto>\\<^bsub>op_dg \\<CC>\\<^esub> b", "by (auto simp: dg_op_simps subdg_is_arr_vsubset)"], ["proof (state)\nthis:\n  ?f : ?a \\<mapsto>\\<^bsub>op_dg \\<BB>\\<^esub> ?b \\<Longrightarrow>\n  ?f : ?a \\<mapsto>\\<^bsub>op_dg \\<CC>\\<^esub> ?b\n\ngoal (2 subgoals):\n 1. digraph \\<alpha> (op_dg \\<BB>)\n 2. digraph \\<alpha> (op_dg \\<CC>)", "qed (auto simp: dg_op_simps intro: dg_op_intros)"], ["", "lemmas subdg_subdigraph_op_dg_op_dg[dg_op_intros] = \n  subdigraph.subdg_subdigraph_op_dg_op_dg"], ["", "text\\<open>Further rules.\\<close>"], ["", "lemma (in subdigraph) subdg_objD:\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\" \n  shows \"a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "using assms"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "by (auto intro: subdg_Obj_vsubset)"], ["", "lemmas [dg_sub_fw_cs_intros] = subdigraph.subdg_objD"], ["", "lemma (in subdigraph) subdg_arrD[dg_sub_fw_cs_intros]:\n  assumes \"f \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\" \n  shows \"f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "from assms"], ["proof (chain)\npicking this:\n  f \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>", "obtain a b where \"f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\""], ["proof (prove)\nusing this:\n  f \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\n\ngoal (1 subgoal):\n 1. f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "then"], ["proof (chain)\npicking this:\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b", "show \"f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\n\ngoal (1 subgoal):\n 1. f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "by (cs_concl cs_intro: subdg_is_arr_vsubset dg_cs_intros)"], ["proof (state)\nthis:\n  f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [dg_sub_fw_cs_intros] = subdigraph.subdg_arrD"], ["", "lemma (in subdigraph) subdg_dom_simp:\n  assumes \"f \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\" \n  shows \"\\<BB>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n    \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n    \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr>", "from assms"], ["proof (chain)\npicking this:\n  f \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>", "obtain a b where \"f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\""], ["proof (prove)\nusing this:\n  f \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n    \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr>", "then"], ["proof (chain)\npicking this:\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b", "show \"\\<BB>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr>\""], ["proof (prove)\nusing this:\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n    \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr>", "by (force dest: subdg_is_arr_vsubset simp: dg_cs_simps)"], ["proof (state)\nthis:\n  \\<BB>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n  \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [dg_sub_bw_cs_simps] = subdigraph.subdg_dom_simp"], ["", "lemma (in subdigraph) subdg_cod_simp:\n  assumes \"f \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\" \n  shows \"\\<BB>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n    \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n    \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>", "from assms"], ["proof (chain)\npicking this:\n  f \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>", "obtain a b where \"f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\""], ["proof (prove)\nusing this:\n  f \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n    \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>", "then"], ["proof (chain)\npicking this:\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b", "show \"\\<BB>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>\""], ["proof (prove)\nusing this:\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n    \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>", "by (force dest: subdg_is_arr_vsubset simp: dg_cs_simps)"], ["proof (state)\nthis:\n  \\<BB>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n  \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [dg_sub_bw_cs_simps] = subdigraph.subdg_cod_simp"], ["", "lemma (in subdigraph) subdg_is_arrD:\n  assumes \"f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\" \n  shows \"f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "using assms subdg_is_arr_vsubset"], ["proof (prove)\nusing this:\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\n  ?f : ?a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> ?b \\<Longrightarrow>\n  ?f : ?a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> ?b\n\ngoal (1 subgoal):\n 1. f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "by simp"], ["", "lemmas [dg_sub_fw_cs_intros] = subdigraph.subdg_is_arrD"], ["", "subsubsection\\<open>The subdigraph relation is a partial order\\<close>"], ["", "lemma subdg_refl: \n  assumes \"digraph \\<alpha> \\<AA>\" \n  shows \"\\<AA> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "interpret digraph \\<alpha> \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. digraph \\<alpha> \\<AA>", "by (rule assms)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "by unfold_locales simp"], ["proof (state)\nthis:\n  \\<AA> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subdg_trans[trans]: \n  assumes \"\\<AA> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"\\<BB> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<AA> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "interpret \\<AA>\\<BB>: subdigraph \\<alpha> \\<AA> \\<BB>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "interpret \\<BB>\\<CC>: subdigraph \\<alpha> \\<BB> \\<CC>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by  unfold_locales\n      (\n        insert \\<AA>\\<BB>.subdigraph_axioms, \n        auto simp:\n          \\<BB>\\<CC>.subdg_Obj_vsubset\n          \\<AA>\\<BB>.subdg_Obj_vsubset \n          subdigraph.subdg_is_arr_vsubset \n          \\<BB>\\<CC>.subdg_is_arr_vsubset\n      )"], ["proof (state)\nthis:\n  \\<AA> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subdg_antisym:\n  assumes \"\\<AA> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"\\<BB> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<AA>\"\n  shows \"\\<AA> = \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "interpret \\<AA>\\<BB>: subdigraph \\<alpha> \\<AA> \\<BB>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "interpret \\<BB>\\<AA>: subdigraph \\<alpha> \\<BB> \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "proof(rule dg_eqI)"], ["proof (state)\ngoal (6 subgoals):\n 1. digraph ?\\<alpha> \\<AA>\n 2. digraph ?\\<alpha> \\<BB>\n 3. \\<AA>\\<lparr>Obj\\<rparr> = \\<BB>\\<lparr>Obj\\<rparr>\n 4. \\<AA>\\<lparr>Arr\\<rparr> = \\<BB>\\<lparr>Arr\\<rparr>\n 5. \\<AA>\\<lparr>Dom\\<rparr> = \\<BB>\\<lparr>Dom\\<rparr>\n 6. \\<AA>\\<lparr>Cod\\<rparr> = \\<BB>\\<lparr>Cod\\<rparr>", "from assms"], ["proof (chain)\npicking this:\n  \\<AA> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  \\<BB> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "show Arr: \"\\<AA>\\<lparr>Arr\\<rparr> = \\<BB>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<AA> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  \\<BB> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Arr\\<rparr> = \\<BB>\\<lparr>Arr\\<rparr>", "by (intro vsubset_antisym vsubsetI) \n        (auto simp: dg_sub_bw_cs_simps intro: dg_sub_fw_cs_intros)"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Arr\\<rparr> = \\<BB>\\<lparr>Arr\\<rparr>\n\ngoal (5 subgoals):\n 1. digraph ?\\<alpha> \\<AA>\n 2. digraph ?\\<alpha> \\<BB>\n 3. \\<AA>\\<lparr>Obj\\<rparr> = \\<BB>\\<lparr>Obj\\<rparr>\n 4. \\<AA>\\<lparr>Dom\\<rparr> = \\<BB>\\<lparr>Dom\\<rparr>\n 5. \\<AA>\\<lparr>Cod\\<rparr> = \\<BB>\\<lparr>Cod\\<rparr>", "from assms"], ["proof (chain)\npicking this:\n  \\<AA> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  \\<BB> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "show \"\\<AA>\\<lparr>Obj\\<rparr> = \\<BB>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<AA> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  \\<BB> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Obj\\<rparr> = \\<BB>\\<lparr>Obj\\<rparr>", "by (intro vsubset_antisym vsubsetI)\n        (auto simp: dg_sub_bw_cs_simps intro: dg_sub_fw_cs_intros)"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Obj\\<rparr> = \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (4 subgoals):\n 1. digraph ?\\<alpha> \\<AA>\n 2. digraph ?\\<alpha> \\<BB>\n 3. \\<AA>\\<lparr>Dom\\<rparr> = \\<BB>\\<lparr>Dom\\<rparr>\n 4. \\<AA>\\<lparr>Cod\\<rparr> = \\<BB>\\<lparr>Cod\\<rparr>", "show \"\\<AA>\\<lparr>Dom\\<rparr> = \\<BB>\\<lparr>Dom\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Dom\\<rparr> = \\<BB>\\<lparr>Dom\\<rparr>", "by (rule vsv_eqI) (auto simp: \\<AA>\\<BB>.subdg_dom_simp Arr dg_cs_simps)"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Dom\\<rparr> = \\<BB>\\<lparr>Dom\\<rparr>\n\ngoal (3 subgoals):\n 1. digraph ?\\<alpha> \\<AA>\n 2. digraph ?\\<alpha> \\<BB>\n 3. \\<AA>\\<lparr>Cod\\<rparr> = \\<BB>\\<lparr>Cod\\<rparr>", "show \"\\<AA>\\<lparr>Cod\\<rparr> = \\<BB>\\<lparr>Cod\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Cod\\<rparr> = \\<BB>\\<lparr>Cod\\<rparr>", "by (rule vsv_eqI) (auto simp: \\<AA>\\<BB>.subdg_cod_simp Arr dg_cs_simps)"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Cod\\<rparr> = \\<BB>\\<lparr>Cod\\<rparr>\n\ngoal (2 subgoals):\n 1. digraph ?\\<alpha> \\<AA>\n 2. digraph ?\\<alpha> \\<BB>", "qed (cs_concl cs_intro: dg_cs_intros)+"], ["proof (state)\nthis:\n  \\<AA> = \\<BB>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Inclusion digraph homomorphism\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "text\\<open>See Chapter I-3 in \\cite{mac_lane_categories_2010}.\\<close>"], ["", "definition dghm_inc :: \"V \\<Rightarrow> V \\<Rightarrow> V\"\n  where \"dghm_inc \\<BB> \\<CC> = [vid_on (\\<BB>\\<lparr>Obj\\<rparr>), vid_on (\\<BB>\\<lparr>Arr\\<rparr>), \\<BB>, \\<CC>]\\<^sub>\\<circ>\""], ["", "text\\<open>Components.\\<close>"], ["", "lemma dghm_inc_components:\n  shows \"dghm_inc \\<BB> \\<CC>\\<lparr>ObjMap\\<rparr> = vid_on (\\<BB>\\<lparr>Obj\\<rparr>)\" \n    and \"dghm_inc \\<BB> \\<CC>\\<lparr>ArrMap\\<rparr> = vid_on (\\<BB>\\<lparr>Arr\\<rparr>)\" \n    and [dg_cs_simps]: \"dghm_inc \\<BB> \\<CC>\\<lparr>HomDom\\<rparr> = \\<BB>\"\n    and [dg_cs_simps]: \"dghm_inc \\<BB> \\<CC>\\<lparr>HomCod\\<rparr> = \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (dghm_inc \\<BB> \\<CC>\\<lparr>ObjMap\\<rparr> =\n     vid_on (\\<BB>\\<lparr>Obj\\<rparr>) &&&\n     dghm_inc \\<BB> \\<CC>\\<lparr>ArrMap\\<rparr> =\n     vid_on (\\<BB>\\<lparr>Arr\\<rparr>)) &&&\n    dghm_inc \\<BB> \\<CC>\\<lparr>HomDom\\<rparr> = \\<BB> &&&\n    dghm_inc \\<BB> \\<CC>\\<lparr>HomCod\\<rparr> = \\<CC>", "unfolding dghm_inc_def dghm_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([vid_on (\\<BB>\\<lparr>Obj\\<rparr>), vid_on (\\<BB>\\<lparr>Arr\\<rparr>),\n      \\<BB>, \\<CC>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n     vid_on (\\<BB>\\<lparr>Obj\\<rparr>) &&&\n     [vid_on (\\<BB>\\<lparr>Obj\\<rparr>), vid_on (\\<BB>\\<lparr>Arr\\<rparr>),\n      \\<BB>, \\<CC>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> =\n     vid_on (\\<BB>\\<lparr>Arr\\<rparr>)) &&&\n    [vid_on (\\<BB>\\<lparr>Obj\\<rparr>), vid_on (\\<BB>\\<lparr>Arr\\<rparr>),\n     \\<BB>, \\<CC>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr> =\n    \\<BB> &&&\n    [vid_on (\\<BB>\\<lparr>Obj\\<rparr>), vid_on (\\<BB>\\<lparr>Arr\\<rparr>),\n     \\<BB>, \\<CC>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr> =\n    \\<CC>", "by (simp_all add: nat_omega_simps)"], ["", "subsubsection\\<open>Object map\\<close>"], ["", "mk_VLambda dghm_inc_components(1)[folded VLambda_vid_on]\n  |vsv dghm_inc_ObjMap_vsv[dg_cs_intros]|\n  |vdomain dghm_inc_ObjMap_vdomain[dg_cs_simps]|\n  |app dghm_inc_ObjMap_app[dg_cs_simps]|"], ["", "subsubsection\\<open>Arrow map\\<close>"], ["", "mk_VLambda dghm_inc_components(2)[folded VLambda_vid_on]\n  |vsv dghm_inc_ArrMap_vsv[dg_cs_intros]|\n  |vdomain dghm_inc_ArrMap_vdomain[dg_cs_simps]|\n  |app dghm_inc_ArrMap_app[dg_cs_simps]|"], ["", "subsubsection\\<open>\nCanonical inclusion digraph homomorphism associated with a subdigraph\n\\<close>"], ["", "sublocale subdigraph \\<subseteq> inc: is_ft_dghm \\<alpha> \\<BB> \\<CC> \\<open>dghm_inc \\<BB> \\<CC>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_inc \\<BB> \\<CC> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "proof(intro is_ft_dghmI is_dghmI)"], ["proof (state)\ngoal (14 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (dghm_inc \\<BB> \\<CC>)\n 3. digraph \\<alpha> \\<BB>\n 4. digraph \\<alpha> \\<CC>\n 5. vcard (dghm_inc \\<BB> \\<CC>) = 4\\<^sub>\\<nat>\n 6. dghm_inc \\<BB> \\<CC>\\<lparr>HomDom\\<rparr> = \\<BB>\n 7. dghm_inc \\<BB> \\<CC>\\<lparr>HomCod\\<rparr> = \\<CC>\n 8. vsv (dghm_inc \\<BB> \\<CC>\\<lparr>ObjMap\\<rparr>)\n 9. vsv (dghm_inc \\<BB> \\<CC>\\<lparr>ArrMap\\<rparr>)\n 10. \\<D>\\<^sub>\\<circ> (dghm_inc \\<BB> \\<CC>\\<lparr>ObjMap\\<rparr>) =\n     \\<BB>\\<lparr>Obj\\<rparr>\nA total of 14 subgoals...", "show \"vfsequence (dghm_inc \\<BB> \\<CC>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (dghm_inc \\<BB> \\<CC>)", "unfolding dghm_inc_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence\n     [vid_on (\\<BB>\\<lparr>Obj\\<rparr>), vid_on (\\<BB>\\<lparr>Arr\\<rparr>),\n      \\<BB>, \\<CC>]\\<^sub>\\<circ>", "by auto"], ["proof (state)\nthis:\n  vfsequence (dghm_inc \\<BB> \\<CC>)\n\ngoal (13 subgoals):\n 1. \\<Z> \\<alpha>\n 2. digraph \\<alpha> \\<BB>\n 3. digraph \\<alpha> \\<CC>\n 4. vcard (dghm_inc \\<BB> \\<CC>) = 4\\<^sub>\\<nat>\n 5. dghm_inc \\<BB> \\<CC>\\<lparr>HomDom\\<rparr> = \\<BB>\n 6. dghm_inc \\<BB> \\<CC>\\<lparr>HomCod\\<rparr> = \\<CC>\n 7. vsv (dghm_inc \\<BB> \\<CC>\\<lparr>ObjMap\\<rparr>)\n 8. vsv (dghm_inc \\<BB> \\<CC>\\<lparr>ArrMap\\<rparr>)\n 9. \\<D>\\<^sub>\\<circ> (dghm_inc \\<BB> \\<CC>\\<lparr>ObjMap\\<rparr>) =\n    \\<BB>\\<lparr>Obj\\<rparr>\n 10. \\<R>\\<^sub>\\<circ> (dghm_inc \\<BB> \\<CC>\\<lparr>ObjMap\\<rparr>)\n     \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\nA total of 13 subgoals...", "show \"vcard (dghm_inc \\<BB> \\<CC>) = 4\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (dghm_inc \\<BB> \\<CC>) = 4\\<^sub>\\<nat>", "unfolding dghm_inc_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard\n     [vid_on (\\<BB>\\<lparr>Obj\\<rparr>), vid_on (\\<BB>\\<lparr>Arr\\<rparr>),\n      \\<BB>, \\<CC>]\\<^sub>\\<circ> =\n    4\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  vcard (dghm_inc \\<BB> \\<CC>) = 4\\<^sub>\\<nat>\n\ngoal (12 subgoals):\n 1. \\<Z> \\<alpha>\n 2. digraph \\<alpha> \\<BB>\n 3. digraph \\<alpha> \\<CC>\n 4. dghm_inc \\<BB> \\<CC>\\<lparr>HomDom\\<rparr> = \\<BB>\n 5. dghm_inc \\<BB> \\<CC>\\<lparr>HomCod\\<rparr> = \\<CC>\n 6. vsv (dghm_inc \\<BB> \\<CC>\\<lparr>ObjMap\\<rparr>)\n 7. vsv (dghm_inc \\<BB> \\<CC>\\<lparr>ArrMap\\<rparr>)\n 8. \\<D>\\<^sub>\\<circ> (dghm_inc \\<BB> \\<CC>\\<lparr>ObjMap\\<rparr>) =\n    \\<BB>\\<lparr>Obj\\<rparr>\n 9. \\<R>\\<^sub>\\<circ> (dghm_inc \\<BB> \\<CC>\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n 10. \\<D>\\<^sub>\\<circ> (dghm_inc \\<BB> \\<CC>\\<lparr>ArrMap\\<rparr>) =\n     \\<BB>\\<lparr>Arr\\<rparr>\nA total of 12 subgoals...", "show \"\\<R>\\<^sub>\\<circ> (dghm_inc \\<BB> \\<CC>\\<lparr>ObjMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (dghm_inc \\<BB> \\<CC>\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "unfolding dghm_inc_components"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (vid_on (\\<BB>\\<lparr>Obj\\<rparr>))\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "by (auto dest: subdg_objD)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (dghm_inc \\<BB> \\<CC>\\<lparr>ObjMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (11 subgoals):\n 1. \\<Z> \\<alpha>\n 2. digraph \\<alpha> \\<BB>\n 3. digraph \\<alpha> \\<CC>\n 4. dghm_inc \\<BB> \\<CC>\\<lparr>HomDom\\<rparr> = \\<BB>\n 5. dghm_inc \\<BB> \\<CC>\\<lparr>HomCod\\<rparr> = \\<CC>\n 6. vsv (dghm_inc \\<BB> \\<CC>\\<lparr>ObjMap\\<rparr>)\n 7. vsv (dghm_inc \\<BB> \\<CC>\\<lparr>ArrMap\\<rparr>)\n 8. \\<D>\\<^sub>\\<circ> (dghm_inc \\<BB> \\<CC>\\<lparr>ObjMap\\<rparr>) =\n    \\<BB>\\<lparr>Obj\\<rparr>\n 9. \\<D>\\<^sub>\\<circ> (dghm_inc \\<BB> \\<CC>\\<lparr>ArrMap\\<rparr>) =\n    \\<BB>\\<lparr>Arr\\<rparr>\n 10. \\<And>a b f.\n        f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b \\<Longrightarrow>\n        dghm_inc \\<BB>\n         \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> : dghm_inc \\<BB>\n                   \\<CC>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> \\<mapsto>\\<^bsub>\\<CC>\\<^esub> dghm_inc\n                    \\<BB> \\<CC>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\nA total of 11 subgoals...", "show \"dghm_inc \\<BB> \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> :\n    dghm_inc \\<BB> \\<CC>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> \\<mapsto>\\<^bsub>\\<CC>\\<^esub> dghm_inc \\<BB> \\<CC>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\"\n    if \"f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\" for a b f"], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_inc \\<BB>\n     \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> : dghm_inc \\<BB>\n               \\<CC>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> \\<mapsto>\\<^bsub>\\<CC>\\<^esub> dghm_inc\n                \\<BB> \\<CC>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>", "using that"], ["proof (prove)\nusing this:\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\n\ngoal (1 subgoal):\n 1. dghm_inc \\<BB>\n     \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> : dghm_inc \\<BB>\n               \\<CC>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> \\<mapsto>\\<^bsub>\\<CC>\\<^esub> dghm_inc\n                \\<BB> \\<CC>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>", "by (cs_concl cs_simp: dg_cs_simps cs_intro: dg_cs_intros dg_sub_fw_cs_intros)"], ["proof (state)\nthis:\n  ?f : ?a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> ?b \\<Longrightarrow>\n  dghm_inc \\<BB>\n   \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>?f\\<rparr> : dghm_inc \\<BB>\n              \\<CC>\\<lparr>ObjMap\\<rparr>\\<lparr>?a\\<rparr> \\<mapsto>\\<^bsub>\\<CC>\\<^esub> dghm_inc\n                \\<BB> \\<CC>\\<lparr>ObjMap\\<rparr>\\<lparr>?b\\<rparr>\n\ngoal (10 subgoals):\n 1. \\<Z> \\<alpha>\n 2. digraph \\<alpha> \\<BB>\n 3. digraph \\<alpha> \\<CC>\n 4. dghm_inc \\<BB> \\<CC>\\<lparr>HomDom\\<rparr> = \\<BB>\n 5. dghm_inc \\<BB> \\<CC>\\<lparr>HomCod\\<rparr> = \\<CC>\n 6. vsv (dghm_inc \\<BB> \\<CC>\\<lparr>ObjMap\\<rparr>)\n 7. vsv (dghm_inc \\<BB> \\<CC>\\<lparr>ArrMap\\<rparr>)\n 8. \\<D>\\<^sub>\\<circ> (dghm_inc \\<BB> \\<CC>\\<lparr>ObjMap\\<rparr>) =\n    \\<BB>\\<lparr>Obj\\<rparr>\n 9. \\<D>\\<^sub>\\<circ> (dghm_inc \\<BB> \\<CC>\\<lparr>ArrMap\\<rparr>) =\n    \\<BB>\\<lparr>Arr\\<rparr>\n 10. \\<And>a b.\n        \\<lbrakk>a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>;\n         b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\\<rbrakk>\n        \\<Longrightarrow> v11 (dghm_inc \\<BB>\n                                \\<CC>\\<lparr>ArrMap\\<rparr> \\<restriction>\\<^sup>l\\<^sub>\\<circ>\n                               Hom \\<BB> a b)", "show \"v11 (dghm_inc \\<BB> \\<CC>\\<lparr>ArrMap\\<rparr> \\<restriction>\\<^sup>l\\<^sub>\\<circ> Hom \\<BB> a b)\"\n    if \"a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\" and \"b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\" for a b"], ["proof (prove)\ngoal (1 subgoal):\n 1. v11 (dghm_inc \\<BB>\n          \\<CC>\\<lparr>ArrMap\\<rparr> \\<restriction>\\<^sup>l\\<^sub>\\<circ>\n         Hom \\<BB> a b)", "using that"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. v11 (dghm_inc \\<BB>\n          \\<CC>\\<lparr>ArrMap\\<rparr> \\<restriction>\\<^sup>l\\<^sub>\\<circ>\n         Hom \\<BB> a b)", "unfolding dghm_inc_components"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. v11 (vid_on\n          (\\<BB>\\<lparr>Arr\\<rparr>) \\<restriction>\\<^sup>l\\<^sub>\\<circ>\n         Hom \\<BB> a b)", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>?a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>;\n   ?b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\\<rbrakk>\n  \\<Longrightarrow> v11 (dghm_inc \\<BB>\n                          \\<CC>\\<lparr>ArrMap\\<rparr> \\<restriction>\\<^sup>l\\<^sub>\\<circ>\n                         Hom \\<BB> ?a ?b)\n\ngoal (9 subgoals):\n 1. \\<Z> \\<alpha>\n 2. digraph \\<alpha> \\<BB>\n 3. digraph \\<alpha> \\<CC>\n 4. dghm_inc \\<BB> \\<CC>\\<lparr>HomDom\\<rparr> = \\<BB>\n 5. dghm_inc \\<BB> \\<CC>\\<lparr>HomCod\\<rparr> = \\<CC>\n 6. vsv (dghm_inc \\<BB> \\<CC>\\<lparr>ObjMap\\<rparr>)\n 7. vsv (dghm_inc \\<BB> \\<CC>\\<lparr>ArrMap\\<rparr>)\n 8. \\<D>\\<^sub>\\<circ> (dghm_inc \\<BB> \\<CC>\\<lparr>ObjMap\\<rparr>) =\n    \\<BB>\\<lparr>Obj\\<rparr>\n 9. \\<D>\\<^sub>\\<circ> (dghm_inc \\<BB> \\<CC>\\<lparr>ArrMap\\<rparr>) =\n    \\<BB>\\<lparr>Arr\\<rparr>", "qed (cs_concl cs_simp: dg_cs_simps cs_intro: dg_cs_intros)+"], ["", "lemmas (in subdigraph) subdg_dghm_inc_is_ft_dghm = inc.is_ft_dghm_axioms"], ["", "subsubsection\\<open>The inclusion digraph homomorphism for the opposite digraphs\\<close>"], ["", "lemma (in subdigraph) subdg_dghm_inc_op_dg_is_dghm[dg_sub_cs_intros]:\n  \"dghm_inc (op_dg \\<BB>) (op_dg \\<CC>) : op_dg \\<BB> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> op_dg \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_inc (op_dg \\<BB>) (op_dg \\<CC>) :\n    op_dg\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> op_dg\n                             \\<CC>", "by (intro subdigraph.subdg_dghm_inc_is_ft_dghm subdg_subdigraph_op_dg_op_dg)"], ["", "lemmas [dg_sub_cs_intros] = subdigraph.subdg_dghm_inc_op_dg_is_dghm"], ["", "lemma (in subdigraph) subdg_op_dg_dghm_inc[dg_op_simps]: \n  \"op_dghm (dghm_inc \\<BB> \\<CC>) = dghm_inc (op_dg \\<BB>) (op_dg \\<CC>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_dghm (dghm_inc \\<BB> \\<CC>) = dghm_inc (op_dg \\<BB>) (op_dg \\<CC>)", "by (rule dghm_eqI, unfold dg_op_simps dghm_inc_components id_def)\n    (\n      auto \n        simp: subdg_dghm_inc_op_dg_is_dghm is_ft_dghmD \n        intro: dg_op_intros dg_cs_intros\n    )"], ["", "lemmas [dg_op_simps] = subdigraph.subdg_op_dg_dghm_inc"], ["", "subsection\\<open>Full subdigraph\\<close>"], ["", "text\\<open>See Chapter I-3 in \\cite{mac_lane_categories_2010}.\\<close>"], ["", "locale fl_subdigraph = subdigraph + \n  assumes fl_subdg_is_fl_dghm_inc: \"dghm_inc \\<BB> \\<CC> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<CC>\""], ["", "abbreviation is_fl_subdigraph (\"(_/ \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<index> _)\" [51, 51] 50)\n  where \"\\<BB> \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<equiv> fl_subdigraph \\<alpha> \\<BB> \\<CC>\""], ["", "sublocale fl_subdigraph \\<subseteq> inc: is_fl_dghm \\<alpha> \\<BB> \\<CC> \\<open>dghm_inc \\<BB> \\<CC>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_inc \\<BB> \\<CC> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule fl_subdg_is_fl_dghm_inc)"], ["", "text\\<open>Rules.\\<close>"], ["", "lemma (in fl_subdigraph) fl_subdigraph_axioms'[dg_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<BB>' = \\<BB>\"\n  shows \"\\<BB>' \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>'\\<^esub> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>'\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>'\\<^esub> \\<CC>", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule fl_subdigraph_axioms)"], ["", "lemma (in fl_subdigraph) fl_subdigraph_axioms''[dg_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<CC>' = \\<CC>\"\n  shows \"\\<BB> \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>'\\<^esub> \\<CC>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>'\\<^esub> \\<CC>'", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule fl_subdigraph_axioms)"], ["", "mk_ide rf fl_subdigraph_def[unfolded fl_subdigraph_axioms_def]\n  |intro fl_subdigraphI|\n  |dest fl_subdigraphD[dest]|\n  |elim fl_subdigraphE[elim!]|"], ["", "lemmas [dg_sub_cs_intros] = fl_subdigraphD(1)"], ["", "text\\<open>Elementary properties.\\<close>"], ["", "lemma (in fl_subdigraph) fl_subdg_Hom_eq:\n  assumes \"A \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\" and \"B \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\"\n  shows \"Hom \\<BB> A B = Hom \\<CC> A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom \\<BB> A B = Hom \\<CC> A B", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Hom \\<BB> A B = Hom \\<CC> A B", "from assms"], ["proof (chain)\npicking this:\n  A \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>", "have Arr_AB: \"\\<BB>\\<lparr>Arr\\<rparr> \\<inter>\\<^sub>\\<circ> Hom \\<BB> A B = Hom \\<BB> A B\""], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>Arr\\<rparr> \\<inter>\\<^sub>\\<circ> Hom \\<BB> A B =\n    Hom \\<BB> A B", "by \n      (\n        intro vsubset_antisym vsubsetI, \n        unfold vintersection_iff in_Hom_iff; \n        (elim conjE)?; \n        (intro conjI)?\n      )\n      (auto intro: dg_cs_intros)"], ["proof (state)\nthis:\n  \\<BB>\\<lparr>Arr\\<rparr> \\<inter>\\<^sub>\\<circ> Hom \\<BB> A B =\n  Hom \\<BB> A B\n\ngoal (1 subgoal):\n 1. Hom \\<BB> A B = Hom \\<CC> A B", "from assms"], ["proof (chain)\npicking this:\n  A \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>", "have A: \"vid_on (\\<BB>\\<lparr>Obj\\<rparr>)\\<lparr>A\\<rparr> = A\" and B: \"vid_on (\\<BB>\\<lparr>Obj\\<rparr>)\\<lparr>B\\<rparr> = B\""], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vid_on (\\<BB>\\<lparr>Obj\\<rparr>)\\<lparr>A\\<rparr> = A &&&\n    vid_on (\\<BB>\\<lparr>Obj\\<rparr>)\\<lparr>B\\<rparr> = B", "by simp_all"], ["proof (state)\nthis:\n  vid_on (\\<BB>\\<lparr>Obj\\<rparr>)\\<lparr>A\\<rparr> = A\n  vid_on (\\<BB>\\<lparr>Obj\\<rparr>)\\<lparr>B\\<rparr> = B\n\ngoal (1 subgoal):\n 1. Hom \\<BB> A B = Hom \\<CC> A B", "from inc.fl_dghm_surj_on_Hom[OF assms, unfolded dghm_inc_components]"], ["proof (chain)\npicking this:\n  vid_on (\\<BB>\\<lparr>Arr\\<rparr>) `\\<^sub>\\<circ> Hom \\<BB> A B =\n  Hom \\<CC> (vid_on (\\<BB>\\<lparr>Obj\\<rparr>)\\<lparr>A\\<rparr>)\n   (vid_on (\\<BB>\\<lparr>Obj\\<rparr>)\\<lparr>B\\<rparr>)", "show\n    \"Hom \\<BB> A B = Hom \\<CC> A B\""], ["proof (prove)\nusing this:\n  vid_on (\\<BB>\\<lparr>Arr\\<rparr>) `\\<^sub>\\<circ> Hom \\<BB> A B =\n  Hom \\<CC> (vid_on (\\<BB>\\<lparr>Obj\\<rparr>)\\<lparr>A\\<rparr>)\n   (vid_on (\\<BB>\\<lparr>Obj\\<rparr>)\\<lparr>B\\<rparr>)\n\ngoal (1 subgoal):\n 1. Hom \\<BB> A B = Hom \\<CC> A B", "by (auto simp: Arr_AB A B)"], ["proof (state)\nthis:\n  Hom \\<BB> A B = Hom \\<CC> A B\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Wide subdigraph\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "text\\<open>\nSee \\cite{noauthor_nlab_nodate}\\footnote{\n\\url{https://ncatlab.org/nlab/show/wide+subcategory}\n}).\n\\<close>"], ["", "locale wide_subdigraph = subdigraph +\n  assumes wide_subdg_Obj[dg_sub_bw_cs_intros]: \"a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr> \\<Longrightarrow> a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\""], ["", "abbreviation is_wide_subdigraph (\"(_/ \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<index> _)\" [51, 51] 50)\n  where \"\\<BB> \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<equiv> wide_subdigraph \\<alpha> \\<BB> \\<CC>\""], ["", "lemmas [dg_sub_bw_cs_intros] = wide_subdigraph.wide_subdg_Obj"], ["", "text\\<open>Rules.\\<close>"], ["", "lemma (in wide_subdigraph) wide_subdigraph_axioms'[dg_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<BB>' = \\<BB>\"\n  shows \"\\<BB>' \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>'\\<^esub> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>'\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>'\\<^esub> \\<CC>", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule wide_subdigraph_axioms)"], ["", "lemma (in wide_subdigraph) wide_subdigraph_axioms''[dg_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<CC>' = \\<CC>\"\n  shows \"\\<BB> \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>'\\<^esub> \\<CC>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>'\\<^esub> \\<CC>'", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule wide_subdigraph_axioms)"], ["", "mk_ide rf wide_subdigraph_def[unfolded wide_subdigraph_axioms_def]\n  |intro wide_subdigraphI|\n  |dest wide_subdigraphD[dest]|\n  |elim wide_subdigraphE[elim!]|"], ["", "lemmas [dg_sub_cs_intros] = wide_subdigraphD(1)"], ["", "text\\<open>Elementary properties.\\<close>"], ["", "lemma (in wide_subdigraph) wide_subdg_obj_eq[dg_sub_bw_cs_simps]: \n  \"\\<BB>\\<lparr>Obj\\<rparr> = \\<CC>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>Obj\\<rparr> = \\<CC>\\<lparr>Obj\\<rparr>", "using subdg_Obj_vsubset wide_subdg_Obj"], ["proof (prove)\nusing this:\n  ?a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n  ?a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  ?a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n  ?a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>Obj\\<rparr> = \\<CC>\\<lparr>Obj\\<rparr>", "by auto"], ["", "lemmas [dg_sub_bw_cs_simps] = wide_subdigraph.wide_subdg_obj_eq"], ["", "subsubsection\\<open>The wide subdigraph relation is a partial order\\<close>"], ["", "lemma wide_subdg_refl: \n  assumes \"digraph \\<alpha> \\<AA>\" \n  shows \"\\<AA> \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "interpret digraph \\<alpha> \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. digraph \\<alpha> \\<AA>", "by (rule assms)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "by unfold_locales simp"], ["proof (state)\nthis:\n  \\<AA>\n  \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wide_subdg_trans[trans]: \n  assumes \"\\<AA> \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"\\<BB> \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<AA> \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "interpret \\<AA>\\<BB>: wide_subdigraph \\<alpha> \\<AA> \\<BB>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "interpret \\<BB>\\<CC>: wide_subdigraph \\<alpha> \\<BB> \\<CC>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "interpret \\<AA>\\<CC>: subdigraph \\<alpha> \\<AA> \\<CC>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule subdg_trans) (cs_concl cs_intro: dg_cs_intros)+"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (cs_concl cs_intro: dg_sub_bw_cs_intros dg_cs_intros wide_subdigraphI)"], ["proof (state)\nthis:\n  \\<AA>\n  \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wide_subdg_antisym:\n  assumes \"\\<AA> \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"\\<BB> \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<AA>\"\n  shows \"\\<AA> = \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "interpret \\<AA>\\<BB>: wide_subdigraph \\<alpha> \\<AA> \\<BB>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "interpret \\<BB>\\<AA>: wide_subdigraph \\<alpha> \\<BB> \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "by (rule subdg_antisym[OF \\<AA>\\<BB>.subdigraph_axioms \\<BB>\\<AA>.subdigraph_axioms])"], ["proof (state)\nthis:\n  \\<AA> = \\<BB>\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>\\newpage\\<close>"], ["", "end"]]}