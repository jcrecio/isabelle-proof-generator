{"file_name": "/home/qj213/afp-2021-10-22/thys/CZH_Foundations/czh_semicategories/CZH_SMC_Set.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CZH_Foundations", "problem_names": ["lemmas (in arr_Set) [smc_Set_cs_simps] = \n  dg_Rel_shared_cs_simps", "lemmas [smc_Set_cs_simps] =\n  dg_Rel_shared_cs_simps\n  arr_Set.arr_Set_ArrVal_vdomain\n  arr_Set_comp_Set_id_Set_left\n  arr_Set_comp_Set_id_Set_right", "lemmas [smc_Set_cs_intros] = \n  dg_Rel_shared_cs_intros\n  arr_Set_comp_Set", "lemma smc_Set_components:\n  shows \"smc_Set \\<alpha>\\<lparr>Obj\\<rparr> = Vset \\<alpha>\"\n    and \"smc_Set \\<alpha>\\<lparr>Arr\\<rparr> = set {T. arr_Set \\<alpha> T}\"\n    and \"smc_Set \\<alpha>\\<lparr>Dom\\<rparr> = (\\<lambda>T\\<in>\\<^sub>\\<circ>set {T. arr_Set \\<alpha> T}. T\\<lparr>ArrDom\\<rparr>)\"\n    and \"smc_Set \\<alpha>\\<lparr>Cod\\<rparr> = (\\<lambda>T\\<in>\\<^sub>\\<circ>set {T. arr_Set \\<alpha> T}. T\\<lparr>ArrCod\\<rparr>)\"\n    and \"smc_Set \\<alpha>\\<lparr>Comp\\<rparr> = (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Set \\<alpha>). ST\\<lparr>0\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\"", "lemma smc_dg_smc_Set: \"smc_dg (smc_Set \\<alpha>) = dg_Set \\<alpha>\"", "lemmas_with [folded smc_dg_smc_Set, unfolded slicing_simps]: \n  smc_Set_Obj_iff = dg_Set_Obj_iff\n  and smc_Set_Arr_iff[smc_Set_cs_simps] = dg_Set_Arr_iff\n  and smc_Set_Dom_vsv[smc_Set_cs_intros] = dg_Set_Dom_vsv\n  and smc_Set_Dom_vdomain[smc_Set_cs_simps] = dg_Set_Dom_vdomain\n  and smc_Set_Dom_vrange = dg_Set_Dom_vrange\n  and smc_Set_Dom_app[smc_Set_cs_simps] = dg_Set_Dom_app\n  and smc_Set_Cod_vsv[smc_Set_cs_intros] = dg_Set_Cod_vsv\n  and smc_Set_Cod_vdomain[smc_Set_cs_simps] = dg_Set_Cod_vdomain\n  and smc_Set_Cod_vrange = dg_Set_Cod_vrange\n  and smc_Set_Cod_app[smc_Set_cs_simps] = dg_Set_Cod_app\n  and smc_Set_is_arrI = dg_Set_is_arrI\n  and smc_Set_is_arrD = dg_Set_is_arrD\n  and smc_Set_is_arrE = dg_Set_is_arrE\n  and smc_Set_ArrVal_vdomain[smc_Set_cs_simps] = dg_Set_ArrVal_vdomain\n  and smc_Set_ArrVal_app_vrange[smc_Set_cs_intros] = dg_Set_ArrVal_app_vrange", "lemmas [smc_cs_simps] = smc_Set_is_arrD(2,3)", "lemmas_with (in \\<Z>) [folded smc_dg_smc_Set, unfolded slicing_simps]: \n  smc_Set_Hom_vifunion_in_Vset = dg_Set_Hom_vifunion_in_Vset\n  and smc_Set_incl_Set_is_arr = dg_Set_incl_Set_is_arr\n  and smc_Set_incl_Set_is_arr'[smc_Set_cs_intros] = dg_Set_incl_Set_is_arr'", "lemmas [smc_Set_cs_intros] = \n  smc_Set_is_arrI\n  \\<Z>.smc_Set_incl_Set_is_arr'", "lemma smc_Set_composable_arrs_dg_Set: \n  \"composable_arrs (dg_Set \\<alpha>) = composable_arrs (smc_Set \\<alpha>)\"", "lemma smc_Set_Comp: \n  \"smc_Set \\<alpha>\\<lparr>Comp\\<rparr> =\n    VLambda (composable_arrs (smc_Set \\<alpha>)) (\\<lambda>ST. ST\\<lparr>0\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\"", "lemma smc_Set_Comp_app[smc_Set_cs_simps]:\n  assumes \"S : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c\" and \"T : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\"\n  shows \"S \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T = S \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l T\"", "lemma smc_Set_Comp_vdomain: \"\\<D>\\<^sub>\\<circ> (smc_Set \\<alpha>\\<lparr>Comp\\<rparr>) = composable_arrs (smc_Set \\<alpha>)\"", "lemma (in \\<Z>) smc_Set_Comp_vrange: \n  \"\\<R>\\<^sub>\\<circ> (smc_Set \\<alpha>\\<lparr>Comp\\<rparr>) \\<subseteq>\\<^sub>\\<circ> set {T. arr_Set \\<alpha> T}\"", "lemma smc_Set_composable_vrange_vdomain[smc_Set_cs_intros]:\n  assumes \"g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c\" and \"f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\"\n  shows \"\\<R>\\<^sub>\\<circ> (f\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (g\\<lparr>ArrVal\\<rparr>)\"", "lemma smc_Set_Comp_ArrVal[smc_cs_simps]:\n  assumes \"S : y \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> z\" and \"T : x \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> y\" and \"a \\<in>\\<^sub>\\<circ> x\"\n  shows \"(S \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> = S\\<lparr>ArrVal\\<rparr>\\<lparr>T\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\\<rparr>\"", "lemma (in \\<Z>) semicategory_smc_Set: \"semicategory \\<alpha> (smc_Set \\<alpha>)\"", "lemma (in \\<Z>) wide_subsemicategory_smc_Set_smc_Par: \n  \"smc_Set \\<alpha> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> smc_Par \\<alpha>\"", "lemma (in \\<Z>) smc_Set_is_monic_arrI:\n  \\<comment>\\<open>See Chapter I-5 in \\cite{mac_lane_categories_2010}).\\<close>\n  assumes \"T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\" and \"v11 (T\\<lparr>ArrVal\\<rparr>)\" and \"\\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\"\n  shows \"T : A \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>smc_Set \\<alpha>\\<^esub> B\"", "lemma (in \\<Z>) smc_Set_is_monic_arrD:\n  assumes \"T : A \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>smc_Set \\<alpha>\\<^esub> B\"\n  shows \"T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\" and \"v11 (T\\<lparr>ArrVal\\<rparr>)\" and \"\\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\"", "lemma (in \\<Z>) smc_Set_is_monic_arr: \n  \"T : A \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>smc_Set \\<alpha>\\<^esub> B \\<longleftrightarrow>  \n    T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B \\<and> v11 (T\\<lparr>ArrVal\\<rparr>) \\<and> \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\"", "lemma (in \\<Z>) smc_Set_is_epic_arrI:\n  assumes \"T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\" and \"\\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\"\n  shows \"T : A \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>smc_Set \\<alpha>\\<^esub> B\"", "lemma (in \\<Z>) smc_Set_is_epic_arrD:\n  assumes \"T : A \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>smc_Set \\<alpha>\\<^esub> B\"\n  shows \"T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\" and \"\\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\"", "lemma (in \\<Z>) smc_Set_is_epic_arr: \n  \"T : A \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>smc_Set \\<alpha>\\<^esub> B \\<longleftrightarrow> T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B \\<and> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\"", "lemma (in \\<Z>) smc_Set_obj_terminal: \n  \"obj_terminal (smc_Set \\<alpha>) A \\<longleftrightarrow> (\\<exists>B\\<in>\\<^sub>\\<circ>Vset \\<alpha>. A = set {B})\"", "lemma (in \\<Z>) smc_Set_obj_initial: \"obj_initial (smc_Set \\<alpha>) A \\<longleftrightarrow> A = 0\"", "lemma (in \\<Z>) smc_Set_obj_null: \"obj_null (smc_Set \\<alpha>) A \\<longleftrightarrow> False\"", "lemma (in \\<Z>) smc_Set_is_zero_arr: \"T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Set \\<alpha>\\<^esub> B \\<longleftrightarrow> False\""], "translations": [["", "lemmas (in arr_Set) [smc_Set_cs_simps] = \n  dg_Rel_shared_cs_simps"], ["", "lemmas [smc_Set_cs_simps] =\n  dg_Rel_shared_cs_simps\n  arr_Set.arr_Set_ArrVal_vdomain\n  arr_Set_comp_Set_id_Set_left\n  arr_Set_comp_Set_id_Set_right"], ["", "lemmas [smc_Set_cs_intros] = \n  dg_Rel_shared_cs_intros\n  arr_Set_comp_Set"], ["", "subsection\\<open>\\<open>Set\\<close> as a semicategory\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "definition smc_Set :: \"V \\<Rightarrow> V\"\n  where \"smc_Set \\<alpha> =\n    [\n      Vset \\<alpha>,\n      set {T. arr_Set \\<alpha> T},\n      (\\<lambda>T\\<in>\\<^sub>\\<circ>set {T. arr_Set \\<alpha> T}. T\\<lparr>ArrDom\\<rparr>),\n      (\\<lambda>T\\<in>\\<^sub>\\<circ>set {T. arr_Set \\<alpha> T}. T\\<lparr>ArrCod\\<rparr>),\n      (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Set \\<alpha>). ST\\<lparr>0\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\n    ]\\<^sub>\\<circ>\""], ["", "text\\<open>Components.\\<close>"], ["", "lemma smc_Set_components:\n  shows \"smc_Set \\<alpha>\\<lparr>Obj\\<rparr> = Vset \\<alpha>\"\n    and \"smc_Set \\<alpha>\\<lparr>Arr\\<rparr> = set {T. arr_Set \\<alpha> T}\"\n    and \"smc_Set \\<alpha>\\<lparr>Dom\\<rparr> = (\\<lambda>T\\<in>\\<^sub>\\<circ>set {T. arr_Set \\<alpha> T}. T\\<lparr>ArrDom\\<rparr>)\"\n    and \"smc_Set \\<alpha>\\<lparr>Cod\\<rparr> = (\\<lambda>T\\<in>\\<^sub>\\<circ>set {T. arr_Set \\<alpha> T}. T\\<lparr>ArrCod\\<rparr>)\"\n    and \"smc_Set \\<alpha>\\<lparr>Comp\\<rparr> = (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Set \\<alpha>). ST\\<lparr>0\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (smc_Set \\<alpha>\\<lparr>Obj\\<rparr> = Vset \\<alpha> &&&\n     smc_Set \\<alpha>\\<lparr>Arr\\<rparr> =\n     ZFC_in_HOL.set {T. arr_Set \\<alpha> T}) &&&\n    smc_Set \\<alpha>\\<lparr>Dom\\<rparr> =\n    (\\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {T. arr_Set \\<alpha> T}.\n        T\\<lparr>ArrDom\\<rparr>) &&&\n    smc_Set \\<alpha>\\<lparr>Cod\\<rparr> =\n    (\\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {T. arr_Set \\<alpha> T}.\n        T\\<lparr>ArrCod\\<rparr>) &&&\n    smc_Set \\<alpha>\\<lparr>Comp\\<rparr> =\n    (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Set \\<alpha>).\n        ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n        ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>)", "unfolding smc_Set_def dg_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Set \\<alpha>)),\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Set \\<alpha>)).\n         T\\<lparr>ArrDom\\<rparr>,\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Set \\<alpha>)).\n         T\\<lparr>ArrCod\\<rparr>,\n      \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Set \\<alpha>).\n         ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n         ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n     Vset \\<alpha> &&&\n     [Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Set \\<alpha>)),\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Set \\<alpha>)).\n         T\\<lparr>ArrDom\\<rparr>,\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Set \\<alpha>)).\n         T\\<lparr>ArrCod\\<rparr>,\n      \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Set \\<alpha>).\n         ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n         ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> =\n     ZFC_in_HOL.set {T. arr_Set \\<alpha> T}) &&&\n    [Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Set \\<alpha>)),\n     \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   (Collect (arr_Set \\<alpha>)).\n        T\\<lparr>ArrDom\\<rparr>,\n     \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   (Collect (arr_Set \\<alpha>)).\n        T\\<lparr>ArrCod\\<rparr>,\n     \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Set \\<alpha>).\n        ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n        ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr> =\n    (\\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {T. arr_Set \\<alpha> T}.\n        T\\<lparr>ArrDom\\<rparr>) &&&\n    [Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Set \\<alpha>)),\n     \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   (Collect (arr_Set \\<alpha>)).\n        T\\<lparr>ArrDom\\<rparr>,\n     \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   (Collect (arr_Set \\<alpha>)).\n        T\\<lparr>ArrCod\\<rparr>,\n     \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Set \\<alpha>).\n        ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n        ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr> =\n    (\\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {T. arr_Set \\<alpha> T}.\n        T\\<lparr>ArrCod\\<rparr>) &&&\n    [Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Set \\<alpha>)),\n     \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   (Collect (arr_Set \\<alpha>)).\n        T\\<lparr>ArrDom\\<rparr>,\n     \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   (Collect (arr_Set \\<alpha>)).\n        T\\<lparr>ArrCod\\<rparr>,\n     \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Set \\<alpha>).\n        ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n        ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>4\\<^sub>\\<nat>\\<rparr> =\n    (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Set \\<alpha>).\n        ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n        ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>)", "by (simp_all add: nat_omega_simps)"], ["", "text\\<open>Slicing.\\<close>"], ["", "lemma smc_dg_smc_Set: \"smc_dg (smc_Set \\<alpha>) = dg_Set \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smc_dg (smc_Set \\<alpha>) = dg_Set \\<alpha>", "proof(rule vsv_eqI)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (smc_dg (smc_Set \\<alpha>))\n 2. vsv (dg_Set \\<alpha>)\n 3. \\<D>\\<^sub>\\<circ> (smc_dg (smc_Set \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ> (dg_Set \\<alpha>)\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (smc_dg (smc_Set \\<alpha>)) \\<Longrightarrow>\n       smc_dg (smc_Set \\<alpha>)\\<lparr>a\\<rparr> =\n       dg_Set \\<alpha>\\<lparr>a\\<rparr>", "have dom_lhs: \"\\<D>\\<^sub>\\<circ> (smc_dg (smc_Set \\<alpha>)) = 4\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (smc_dg (smc_Set \\<alpha>)) = 4\\<^sub>\\<nat>", "unfolding smc_dg_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     [smc_Set \\<alpha>\\<lparr>Obj\\<rparr>,\n      smc_Set \\<alpha>\\<lparr>Arr\\<rparr>,\n      smc_Set \\<alpha>\\<lparr>Dom\\<rparr>,\n      smc_Set \\<alpha>\\<lparr>Cod\\<rparr>]\\<^sub>\\<circ> =\n    4\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (smc_dg (smc_Set \\<alpha>)) = 4\\<^sub>\\<nat>\n\ngoal (4 subgoals):\n 1. vsv (smc_dg (smc_Set \\<alpha>))\n 2. vsv (dg_Set \\<alpha>)\n 3. \\<D>\\<^sub>\\<circ> (smc_dg (smc_Set \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ> (dg_Set \\<alpha>)\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (smc_dg (smc_Set \\<alpha>)) \\<Longrightarrow>\n       smc_dg (smc_Set \\<alpha>)\\<lparr>a\\<rparr> =\n       dg_Set \\<alpha>\\<lparr>a\\<rparr>", "have dom_rhs: \"\\<D>\\<^sub>\\<circ> (dg_Set \\<alpha>) = 4\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (dg_Set \\<alpha>) = 4\\<^sub>\\<nat>", "unfolding dg_Set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     [Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Set \\<alpha>)),\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Set \\<alpha>)).\n         T\\<lparr>ArrDom\\<rparr>,\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Set \\<alpha>)).\n         T\\<lparr>ArrCod\\<rparr>]\\<^sub>\\<circ> =\n    4\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (dg_Set \\<alpha>) = 4\\<^sub>\\<nat>\n\ngoal (4 subgoals):\n 1. vsv (smc_dg (smc_Set \\<alpha>))\n 2. vsv (dg_Set \\<alpha>)\n 3. \\<D>\\<^sub>\\<circ> (smc_dg (smc_Set \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ> (dg_Set \\<alpha>)\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (smc_dg (smc_Set \\<alpha>)) \\<Longrightarrow>\n       smc_dg (smc_Set \\<alpha>)\\<lparr>a\\<rparr> =\n       dg_Set \\<alpha>\\<lparr>a\\<rparr>", "show \"\\<D>\\<^sub>\\<circ> (smc_dg (smc_Set \\<alpha>)) = \\<D>\\<^sub>\\<circ> (dg_Set \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (smc_dg (smc_Set \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ> (dg_Set \\<alpha>)", "unfolding dom_lhs dom_rhs"], ["proof (prove)\ngoal (1 subgoal):\n 1. 4\\<^sub>\\<nat> = 4\\<^sub>\\<nat>", "by simp"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (smc_dg (smc_Set \\<alpha>)) =\n  \\<D>\\<^sub>\\<circ> (dg_Set \\<alpha>)\n\ngoal (3 subgoals):\n 1. vsv (smc_dg (smc_Set \\<alpha>))\n 2. vsv (dg_Set \\<alpha>)\n 3. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (smc_dg (smc_Set \\<alpha>)) \\<Longrightarrow>\n       smc_dg (smc_Set \\<alpha>)\\<lparr>a\\<rparr> =\n       dg_Set \\<alpha>\\<lparr>a\\<rparr>", "show \"a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (smc_dg (smc_Set \\<alpha>)) \\<Longrightarrow> smc_dg (smc_Set \\<alpha>)\\<lparr>a\\<rparr> = dg_Set \\<alpha>\\<lparr>a\\<rparr>\"\n    for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                           (smc_dg (smc_Set \\<alpha>)) \\<Longrightarrow>\n    smc_dg (smc_Set \\<alpha>)\\<lparr>a\\<rparr> =\n    dg_Set \\<alpha>\\<lparr>a\\<rparr>", "by \n      (\n        unfold dom_lhs, \n        elim_in_numeral,\n        unfold smc_dg_def dg_field_simps smc_Set_def dg_Set_def\n      )\n      (auto simp: nat_omega_simps)"], ["proof (state)\nthis:\n  ?a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                          (smc_dg (smc_Set \\<alpha>)) \\<Longrightarrow>\n  smc_dg (smc_Set \\<alpha>)\\<lparr>?a\\<rparr> =\n  dg_Set \\<alpha>\\<lparr>?a\\<rparr>\n\ngoal (2 subgoals):\n 1. vsv (smc_dg (smc_Set \\<alpha>))\n 2. vsv (dg_Set \\<alpha>)", "qed (auto simp: smc_dg_def dg_Set_def)"], ["", "lemmas_with [folded smc_dg_smc_Set, unfolded slicing_simps]: \n  smc_Set_Obj_iff = dg_Set_Obj_iff\n  and smc_Set_Arr_iff[smc_Set_cs_simps] = dg_Set_Arr_iff\n  and smc_Set_Dom_vsv[smc_Set_cs_intros] = dg_Set_Dom_vsv\n  and smc_Set_Dom_vdomain[smc_Set_cs_simps] = dg_Set_Dom_vdomain\n  and smc_Set_Dom_vrange = dg_Set_Dom_vrange\n  and smc_Set_Dom_app[smc_Set_cs_simps] = dg_Set_Dom_app\n  and smc_Set_Cod_vsv[smc_Set_cs_intros] = dg_Set_Cod_vsv\n  and smc_Set_Cod_vdomain[smc_Set_cs_simps] = dg_Set_Cod_vdomain\n  and smc_Set_Cod_vrange = dg_Set_Cod_vrange\n  and smc_Set_Cod_app[smc_Set_cs_simps] = dg_Set_Cod_app\n  and smc_Set_is_arrI = dg_Set_is_arrI\n  and smc_Set_is_arrD = dg_Set_is_arrD\n  and smc_Set_is_arrE = dg_Set_is_arrE\n  and smc_Set_ArrVal_vdomain[smc_Set_cs_simps] = dg_Set_ArrVal_vdomain\n  and smc_Set_ArrVal_app_vrange[smc_Set_cs_intros] = dg_Set_ArrVal_app_vrange"], ["", "lemmas [smc_cs_simps] = smc_Set_is_arrD(2,3)"], ["", "lemmas_with (in \\<Z>) [folded smc_dg_smc_Set, unfolded slicing_simps]: \n  smc_Set_Hom_vifunion_in_Vset = dg_Set_Hom_vifunion_in_Vset\n  and smc_Set_incl_Set_is_arr = dg_Set_incl_Set_is_arr\n  and smc_Set_incl_Set_is_arr'[smc_Set_cs_intros] = dg_Set_incl_Set_is_arr'"], ["", "lemmas [smc_Set_cs_intros] = \n  smc_Set_is_arrI\n  \\<Z>.smc_Set_incl_Set_is_arr'"], ["", "subsubsection\\<open>Composable arrows\\<close>"], ["", "lemma smc_Set_composable_arrs_dg_Set: \n  \"composable_arrs (dg_Set \\<alpha>) = composable_arrs (smc_Set \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. composable_arrs (dg_Set \\<alpha>) = composable_arrs (smc_Set \\<alpha>)", "unfolding composable_arrs_def smc_dg_smc_Set[symmetric] slicing_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set\n     {[g, f]\\<^sub>\\<circ> |g f.\n      \\<exists>a b c.\n         g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c \\<and>\n         f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b} =\n    ZFC_in_HOL.set\n     {[g, f]\\<^sub>\\<circ> |g f.\n      \\<exists>a b c.\n         g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c \\<and>\n         f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b}", "by simp"], ["", "lemma smc_Set_Comp: \n  \"smc_Set \\<alpha>\\<lparr>Comp\\<rparr> =\n    VLambda (composable_arrs (smc_Set \\<alpha>)) (\\<lambda>ST. ST\\<lparr>0\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smc_Set \\<alpha>\\<lparr>Comp\\<rparr> =\n    (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (smc_Set \\<alpha>).\n        ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n        ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>)", "unfolding smc_Set_components smc_Set_composable_arrs_dg_Set"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (smc_Set \\<alpha>).\n        ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n        ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>) =\n    (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (smc_Set \\<alpha>).\n        ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n        ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>)", ".."], ["", "subsubsection\\<open>Composition\\<close>"], ["", "lemma smc_Set_Comp_app[smc_Set_cs_simps]:\n  assumes \"S : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c\" and \"T : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\"\n  shows \"S \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T = S \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T =\n    S \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l T", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. S \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T =\n    S \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l T", "from assms"], ["proof (chain)\npicking this:\n  S : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c\n  T : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b", "have \"[S, T]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> composable_arrs (smc_Set \\<alpha>)\""], ["proof (prove)\nusing this:\n  S : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c\n  T : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\n\ngoal (1 subgoal):\n 1. [S, T]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> composable_arrs (smc_Set \\<alpha>)", "by (auto simp: smc_cs_intros)"], ["proof (state)\nthis:\n  [S, T]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> composable_arrs (smc_Set \\<alpha>)\n\ngoal (1 subgoal):\n 1. S \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T =\n    S \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l T", "then"], ["proof (chain)\npicking this:\n  [S, T]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> composable_arrs (smc_Set \\<alpha>)", "show \"S \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T = S \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l T\""], ["proof (prove)\nusing this:\n  [S, T]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> composable_arrs (smc_Set \\<alpha>)\n\ngoal (1 subgoal):\n 1. S \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T =\n    S \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l T", "unfolding smc_Set_Comp"], ["proof (prove)\nusing this:\n  [S, T]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> composable_arrs (smc_Set \\<alpha>)\n\ngoal (1 subgoal):\n 1. (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (smc_Set \\<alpha>).\n        ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n        ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>) \\<lparr>S,\n            T\\<rparr>\\<^sub>\\<bullet> =\n    S \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l T", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  S \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T =\n  S \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l T\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smc_Set_Comp_vdomain: \"\\<D>\\<^sub>\\<circ> (smc_Set \\<alpha>\\<lparr>Comp\\<rparr>) = composable_arrs (smc_Set \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (smc_Set \\<alpha>\\<lparr>Comp\\<rparr>) =\n    composable_arrs (smc_Set \\<alpha>)", "unfolding smc_Set_Comp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (smc_Set \\<alpha>).\n         ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n         ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>) =\n    composable_arrs (smc_Set \\<alpha>)", "by simp"], ["", "lemma (in \\<Z>) smc_Set_Comp_vrange: \n  \"\\<R>\\<^sub>\\<circ> (smc_Set \\<alpha>\\<lparr>Comp\\<rparr>) \\<subseteq>\\<^sub>\\<circ> set {T. arr_Set \\<alpha> T}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (smc_Set \\<alpha>\\<lparr>Comp\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {T. arr_Set \\<alpha> T}", "proof(rule vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (smc_Set\n                                \\<alpha>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {T. arr_Set \\<alpha> T}", "interpret digraph \\<alpha> \\<open>smc_dg (smc_Set \\<alpha>)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. digraph \\<alpha> (smc_dg (smc_Set \\<alpha>))", "unfolding smc_dg_smc_Set"], ["proof (prove)\ngoal (1 subgoal):\n 1. digraph \\<alpha> (dg_Set \\<alpha>)", "by (simp add: digraph_dg_Set)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (smc_Set\n                                \\<alpha>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {T. arr_Set \\<alpha> T}", "fix R"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (smc_Set\n                                \\<alpha>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {T. arr_Set \\<alpha> T}", "assume \"R \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (smc_Set \\<alpha>\\<lparr>Comp\\<rparr>)\""], ["proof (state)\nthis:\n  R \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                         (smc_Set \\<alpha>\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (smc_Set\n                                \\<alpha>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {T. arr_Set \\<alpha> T}", "then"], ["proof (chain)\npicking this:\n  R \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                         (smc_Set \\<alpha>\\<lparr>Comp\\<rparr>)", "obtain ST \n    where R_def: \"R = smc_Set \\<alpha>\\<lparr>Comp\\<rparr>\\<lparr>ST\\<rparr>\"\n      and \"ST \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (smc_Set \\<alpha>\\<lparr>Comp\\<rparr>)\""], ["proof (prove)\nusing this:\n  R \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                         (smc_Set \\<alpha>\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. (\\<And>ST.\n        \\<lbrakk>R = smc_Set \\<alpha>\\<lparr>Comp\\<rparr>\\<lparr>ST\\<rparr>;\n         ST \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                 (smc_Set\n                                   \\<alpha>\\<lparr>Comp\\<rparr>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding smc_Set_components"], ["proof (prove)\nusing this:\n  R \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                         (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs\n                   (dg_Set \\<alpha>).\n                             ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n                             ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\n\ngoal (1 subgoal):\n 1. (\\<And>ST.\n        \\<lbrakk>R =\n                 (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs\n           (dg_Set \\<alpha>).\n                     ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n                     ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\\<lparr>ST\\<rparr>;\n         ST \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                 (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs\n                           (dg_Set \\<alpha>).\n                                     ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n                                     ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (blast dest: rel_VLambda.vrange_atD)"], ["proof (state)\nthis:\n  R = smc_Set \\<alpha>\\<lparr>Comp\\<rparr>\\<lparr>ST\\<rparr>\n  ST \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                          (smc_Set \\<alpha>\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (smc_Set\n                                \\<alpha>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {T. arr_Set \\<alpha> T}", "then"], ["proof (chain)\npicking this:\n  R = smc_Set \\<alpha>\\<lparr>Comp\\<rparr>\\<lparr>ST\\<rparr>\n  ST \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                          (smc_Set \\<alpha>\\<lparr>Comp\\<rparr>)", "obtain S T a b c \n    where \"ST = [S, T]\\<^sub>\\<circ>\" \n      and S: \"S : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c\" \n      and T: \"T : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\""], ["proof (prove)\nusing this:\n  R = smc_Set \\<alpha>\\<lparr>Comp\\<rparr>\\<lparr>ST\\<rparr>\n  ST \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                          (smc_Set \\<alpha>\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. (\\<And>S T b c a.\n        \\<lbrakk>ST = [S, T]\\<^sub>\\<circ>;\n         S : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c;\n         T : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: smc_Set_Comp_vdomain)"], ["proof (state)\nthis:\n  ST = [S, T]\\<^sub>\\<circ>\n  S : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c\n  T : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (smc_Set\n                                \\<alpha>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {T. arr_Set \\<alpha> T}", "with R_def"], ["proof (chain)\npicking this:\n  R = smc_Set \\<alpha>\\<lparr>Comp\\<rparr>\\<lparr>ST\\<rparr>\n  ST = [S, T]\\<^sub>\\<circ>\n  S : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c\n  T : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b", "have R_def': \"R = S \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T\""], ["proof (prove)\nusing this:\n  R = smc_Set \\<alpha>\\<lparr>Comp\\<rparr>\\<lparr>ST\\<rparr>\n  ST = [S, T]\\<^sub>\\<circ>\n  S : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c\n  T : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\n\ngoal (1 subgoal):\n 1. R = S \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T", "by simp"], ["proof (state)\nthis:\n  R = S \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (smc_Set\n                                \\<alpha>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {T. arr_Set \\<alpha> T}", "interpret S: arr_Set \\<alpha> S + T: arr_Set \\<alpha> T \n    rewrites [simp]: \"S\\<lparr>ArrDom\\<rparr> = b\" \n      and [simp]: \"S\\<lparr>ArrCod\\<rparr> = c\"\n      and [simp]: \"T\\<lparr>ArrDom\\<rparr> = a\"\n      and [simp]: \"T\\<lparr>ArrCod\\<rparr> = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (arr_Set \\<alpha> S &&&\n     arr_Set \\<alpha> T &&& S\\<lparr>ArrDom\\<rparr> = b) &&&\n    S\\<lparr>ArrCod\\<rparr> = c &&&\n    T\\<lparr>ArrDom\\<rparr> = a &&& T\\<lparr>ArrCod\\<rparr> = b", "using S T"], ["proof (prove)\nusing this:\n  S : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c\n  T : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\n\ngoal (1 subgoal):\n 1. (arr_Set \\<alpha> S &&&\n     arr_Set \\<alpha> T &&& S\\<lparr>ArrDom\\<rparr> = b) &&&\n    S\\<lparr>ArrCod\\<rparr> = c &&&\n    T\\<lparr>ArrDom\\<rparr> = a &&& T\\<lparr>ArrCod\\<rparr> = b", "by (auto elim!: smc_Set_is_arrD)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (smc_Set\n                                \\<alpha>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {T. arr_Set \\<alpha> T}", "have \"\\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>)", "proof(intro vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>)", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>)", "assume prems: \"y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\""], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>)", "with T.ArrVal.vrange_atD"], ["proof (chain)\npicking this:\n  ?b \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                          (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n  \\<exists>a\\<in>elts (\\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)).\n     T\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> = ?b\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)", "obtain x \n      where y_def: \"y = T\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr>\" and x: \"x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\""], ["proof (prove)\nusing this:\n  ?b \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                          (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n  \\<exists>a\\<in>elts (\\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)).\n     T\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> = ?b\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>y = T\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr>;\n         x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (T\\<lparr>ArrVal\\<rparr>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  y = T\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr>\n  x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>)", "from prems x T.arr_Set_ArrVal_vrange"], ["proof (chain)\npicking this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n  x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> b", "show \"y \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>)\""], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n  x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> b\n\ngoal (1 subgoal):\n 1. y \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>)", "unfolding y_def"], ["proof (prove)\nusing this:\n  T\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr>\n  \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n  x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> b\n\ngoal (1 subgoal):\n 1. T\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr>\n    \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>)", "by (auto simp: smc_Set_cs_simps)"], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (smc_Set\n                                \\<alpha>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {T. arr_Set \\<alpha> T}", "with S.arr_Set_axioms T.arr_Set_axioms"], ["proof (chain)\npicking this:\n  arr_Set \\<alpha> S\n  arr_Set \\<alpha> T\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>)", "have \"arr_Set \\<alpha> (S \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l T)\""], ["proof (prove)\nusing this:\n  arr_Set \\<alpha> S\n  arr_Set \\<alpha> T\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>)\n\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> (S \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l T)", "by (simp add: arr_Set_comp_Set)"], ["proof (state)\nthis:\n  arr_Set \\<alpha> (S \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l T)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (smc_Set\n                                \\<alpha>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {T. arr_Set \\<alpha> T}", "from this"], ["proof (chain)\npicking this:\n  arr_Set \\<alpha> (S \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l T)", "show \"R \\<in>\\<^sub>\\<circ> set {T. arr_Set \\<alpha> T}\""], ["proof (prove)\nusing this:\n  arr_Set \\<alpha> (S \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l T)\n\ngoal (1 subgoal):\n 1. R \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {T. arr_Set \\<alpha> T}", "unfolding R_def' smc_Set_Comp_app[OF S T]"], ["proof (prove)\nusing this:\n  arr_Set \\<alpha> (S \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l T)\n\ngoal (1 subgoal):\n 1. S \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l T\n    \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {T. arr_Set \\<alpha> T}", "by simp"], ["proof (state)\nthis:\n  R \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {T. arr_Set \\<alpha> T}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smc_Set_composable_vrange_vdomain[smc_Set_cs_intros]:\n  assumes \"g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c\" and \"f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\"\n  shows \"\\<R>\\<^sub>\\<circ> (f\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (g\\<lparr>ArrVal\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (f\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (g\\<lparr>ArrVal\\<rparr>)", "proof(intro vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (f\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (g\\<lparr>ArrVal\\<rparr>)", "from assms"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b", "have g: \"arr_Set \\<alpha> g\" and f: \"arr_Set \\<alpha> f\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\n\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> g &&& arr_Set \\<alpha> f", "by (auto simp: smc_Set_is_arrD)"], ["proof (state)\nthis:\n  arr_Set \\<alpha> g\n  arr_Set \\<alpha> f\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (f\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (g\\<lparr>ArrVal\\<rparr>)", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (f\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (g\\<lparr>ArrVal\\<rparr>)", "assume \"y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (f\\<lparr>ArrVal\\<rparr>)\""], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (f\\<lparr>ArrVal\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (f\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (g\\<lparr>ArrVal\\<rparr>)", "with assms f"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\n  arr_Set \\<alpha> f\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (f\\<lparr>ArrVal\\<rparr>)", "have \"y \\<in>\\<^sub>\\<circ> b\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\n  arr_Set \\<alpha> f\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (f\\<lparr>ArrVal\\<rparr>)\n\ngoal (1 subgoal):\n 1. y \\<in>\\<^sub>\\<circ> b", "by (force simp: smc_Set_is_arrD(3))"], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> b\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (f\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (g\\<lparr>ArrVal\\<rparr>)", "with assms g"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\n  arr_Set \\<alpha> g\n  y \\<in>\\<^sub>\\<circ> b", "show \"y \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (g\\<lparr>ArrVal\\<rparr>)\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\n  arr_Set \\<alpha> g\n  y \\<in>\\<^sub>\\<circ> b\n\ngoal (1 subgoal):\n 1. y \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (g\\<lparr>ArrVal\\<rparr>)", "by (simp add: smc_Set_is_arrD(2) arr_SetD(5))"], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (g\\<lparr>ArrVal\\<rparr>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smc_Set_Comp_ArrVal[smc_cs_simps]:\n  assumes \"S : y \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> z\" and \"T : x \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> y\" and \"a \\<in>\\<^sub>\\<circ> x\"\n  shows \"(S \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> = S\\<lparr>ArrVal\\<rparr>\\<lparr>T\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (S \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n     T)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> =\n    S\\<lparr>ArrVal\\<rparr>\\<lparr>T\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (S \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n     T)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> =\n    S\\<lparr>ArrVal\\<rparr>\\<lparr>T\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\\<rparr>", "interpret S: arr_Set \\<alpha> S + T: arr_Set \\<alpha> T"], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> S &&& arr_Set \\<alpha> T", "using assms"], ["proof (prove)\nusing this:\n  S : y \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> z\n  T : x \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> y\n  a \\<in>\\<^sub>\\<circ> x\n\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> S &&& arr_Set \\<alpha> T", "by (auto simp: smc_Set_is_arrD)"], ["proof (state)\ngoal (1 subgoal):\n 1. (S \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n     T)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> =\n    S\\<lparr>ArrVal\\<rparr>\\<lparr>T\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\\<rparr>", "have Ta: \"T\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> \\<in>\\<^sub>\\<circ> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> \\<in>\\<^sub>\\<circ> y", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. T\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> \\<in>\\<^sub>\\<circ> y", "from assms"], ["proof (chain)\npicking this:\n  S : y \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> z\n  T : x \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> y\n  a \\<in>\\<^sub>\\<circ> x", "have \"a \\<in>\\<^sub>\\<circ> T\\<lparr>ArrDom\\<rparr>\""], ["proof (prove)\nusing this:\n  S : y \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> z\n  T : x \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> y\n  a \\<in>\\<^sub>\\<circ> x\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> T\\<lparr>ArrDom\\<rparr>", "by (auto simp: smc_Set_is_arrD)"], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> T\\<lparr>ArrDom\\<rparr>\n\ngoal (1 subgoal):\n 1. T\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> \\<in>\\<^sub>\\<circ> y", "with assms T.arr_Set_ArrVal_vrange"], ["proof (chain)\npicking this:\n  S : y \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> z\n  T : x \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> y\n  a \\<in>\\<^sub>\\<circ> x\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> T\\<lparr>ArrCod\\<rparr>\n  a \\<in>\\<^sub>\\<circ> T\\<lparr>ArrDom\\<rparr>", "show ?thesis"], ["proof (prove)\nusing this:\n  S : y \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> z\n  T : x \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> y\n  a \\<in>\\<^sub>\\<circ> x\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> T\\<lparr>ArrCod\\<rparr>\n  a \\<in>\\<^sub>\\<circ> T\\<lparr>ArrDom\\<rparr>\n\ngoal (1 subgoal):\n 1. T\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> \\<in>\\<^sub>\\<circ> y", "by \n        (\n          simp add: \n            T.ArrVal.vsv_vimageI2 vsubset_iff smc_Set_is_arrD smc_Set_cs_simps\n        )"], ["proof (state)\nthis:\n  T\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> \\<in>\\<^sub>\\<circ> y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  T\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> \\<in>\\<^sub>\\<circ> y\n\ngoal (1 subgoal):\n 1. (S \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n     T)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> =\n    S\\<lparr>ArrVal\\<rparr>\\<lparr>T\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\\<rparr>", "from Ta assms S.arr_Set_axioms T.arr_Set_axioms"], ["proof (chain)\npicking this:\n  T\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> \\<in>\\<^sub>\\<circ> y\n  S : y \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> z\n  T : x \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> y\n  a \\<in>\\<^sub>\\<circ> x\n  arr_Set \\<alpha> S\n  arr_Set \\<alpha> T", "show ?thesis"], ["proof (prove)\nusing this:\n  T\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> \\<in>\\<^sub>\\<circ> y\n  S : y \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> z\n  T : x \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> y\n  a \\<in>\\<^sub>\\<circ> x\n  arr_Set \\<alpha> S\n  arr_Set \\<alpha> T\n\ngoal (1 subgoal):\n 1. (S \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n     T)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> =\n    S\\<lparr>ArrVal\\<rparr>\\<lparr>T\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\\<rparr>", "by ((cs_concl_step smc_Set_cs_simps)+, intro arr_Set_comp_Set_ArrVal[of \\<alpha>])\n      (simp_all add: smc_Set_is_arrD smc_Set_cs_simps)"], ["proof (state)\nthis:\n  (S \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n   T)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> =\n  S\\<lparr>ArrVal\\<rparr>\\<lparr>T\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>\\<open>Set\\<close> is a semicategory\\<close>"], ["", "lemma (in \\<Z>) semicategory_smc_Set: \"semicategory \\<alpha> (smc_Set \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (smc_Set \\<alpha>)", "proof(rule semicategoryI, unfold smc_dg_smc_Set)"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (smc_Set \\<alpha>)\n 3. vsv (smc_Set \\<alpha>\\<lparr>Comp\\<rparr>)\n 4. vcard (smc_Set \\<alpha>) = 5\\<^sub>\\<nat>\n 5. digraph \\<alpha> (dg_Set \\<alpha>)\n 6. \\<And>gf.\n       (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (smc_Set \\<alpha>\\<lparr>Comp\\<rparr>)) =\n       (\\<exists>g f b c a.\n           gf = [g, f]\\<^sub>\\<circ> \\<and>\n           g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c \\<and>\n           f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b)\n 7. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                         f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c\n 8. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                          f)", "interpret wide_subdigraph \\<alpha> \\<open>dg_Set \\<alpha>\\<close> \\<open>dg_Par \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. dg_Set \\<alpha>\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> dg_Par\n                     \\<alpha>", "by (rule wide_subdigraph_dg_Set_dg_Par)"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (smc_Set \\<alpha>)\n 3. vsv (smc_Set \\<alpha>\\<lparr>Comp\\<rparr>)\n 4. vcard (smc_Set \\<alpha>) = 5\\<^sub>\\<nat>\n 5. digraph \\<alpha> (dg_Set \\<alpha>)\n 6. \\<And>gf.\n       (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (smc_Set \\<alpha>\\<lparr>Comp\\<rparr>)) =\n       (\\<exists>g f b c a.\n           gf = [g, f]\\<^sub>\\<circ> \\<and>\n           g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c \\<and>\n           f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b)\n 7. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                         f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c\n 8. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                          f)", "interpret smc_Par: semicategory \\<alpha> \\<open>smc_Par \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (smc_Par \\<alpha>)", "by (rule semicategory_smc_Par)"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (smc_Set \\<alpha>)\n 3. vsv (smc_Set \\<alpha>\\<lparr>Comp\\<rparr>)\n 4. vcard (smc_Set \\<alpha>) = 5\\<^sub>\\<nat>\n 5. digraph \\<alpha> (dg_Set \\<alpha>)\n 6. \\<And>gf.\n       (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (smc_Set \\<alpha>\\<lparr>Comp\\<rparr>)) =\n       (\\<exists>g f b c a.\n           gf = [g, f]\\<^sub>\\<circ> \\<and>\n           g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c \\<and>\n           f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b)\n 7. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                         f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c\n 8. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                          f)", "show \"vfsequence (smc_Set \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (smc_Set \\<alpha>)", "unfolding smc_Set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence\n     [Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Set \\<alpha>)),\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Set \\<alpha>)).\n         T\\<lparr>ArrDom\\<rparr>,\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Set \\<alpha>)).\n         T\\<lparr>ArrCod\\<rparr>,\n      \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Set \\<alpha>).\n         ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n         ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  vfsequence (smc_Set \\<alpha>)\n\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (smc_Set \\<alpha>\\<lparr>Comp\\<rparr>)\n 3. vcard (smc_Set \\<alpha>) = 5\\<^sub>\\<nat>\n 4. digraph \\<alpha> (dg_Set \\<alpha>)\n 5. \\<And>gf.\n       (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (smc_Set \\<alpha>\\<lparr>Comp\\<rparr>)) =\n       (\\<exists>g f b c a.\n           gf = [g, f]\\<^sub>\\<circ> \\<and>\n           g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c \\<and>\n           f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b)\n 6. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                         f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c\n 7. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                          f)", "show \"vcard (smc_Set \\<alpha>) = 5\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (smc_Set \\<alpha>) = 5\\<^sub>\\<nat>", "unfolding smc_Set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard\n     [Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Set \\<alpha>)),\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Set \\<alpha>)).\n         T\\<lparr>ArrDom\\<rparr>,\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Set \\<alpha>)).\n         T\\<lparr>ArrCod\\<rparr>,\n      \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Set \\<alpha>).\n         ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n         ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ> =\n    5\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  vcard (smc_Set \\<alpha>) = 5\\<^sub>\\<nat>\n\ngoal (6 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (smc_Set \\<alpha>\\<lparr>Comp\\<rparr>)\n 3. digraph \\<alpha> (dg_Set \\<alpha>)\n 4. \\<And>gf.\n       (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (smc_Set \\<alpha>\\<lparr>Comp\\<rparr>)) =\n       (\\<exists>g f b c a.\n           gf = [g, f]\\<^sub>\\<circ> \\<and>\n           g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c \\<and>\n           f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b)\n 5. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                         f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c\n 6. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                          f)", "show \"(gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (smc_Set \\<alpha>\\<lparr>Comp\\<rparr>)) \\<longleftrightarrow> \n    (\\<exists>g f b c a. gf = [g, f]\\<^sub>\\<circ> \\<and> g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c \\<and> f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b)\"\n    for gf"], ["proof (prove)\ngoal (1 subgoal):\n 1. (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                             (smc_Set \\<alpha>\\<lparr>Comp\\<rparr>)) =\n    (\\<exists>g f b c a.\n        gf = [g, f]\\<^sub>\\<circ> \\<and>\n        g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c \\<and>\n        f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b)", "unfolding smc_Set_Comp_vdomain"], ["proof (prove)\ngoal (1 subgoal):\n 1. (gf \\<in>\\<^sub>\\<circ> composable_arrs (smc_Set \\<alpha>)) =\n    (\\<exists>g f b c a.\n        gf = [g, f]\\<^sub>\\<circ> \\<and>\n        g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c \\<and>\n        f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b)", "by (auto intro: composable_arrsI)"], ["proof (state)\nthis:\n  (?gf\n   \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                        (smc_Set \\<alpha>\\<lparr>Comp\\<rparr>)) =\n  (\\<exists>g f b c a.\n      ?gf = [g, f]\\<^sub>\\<circ> \\<and>\n      g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c \\<and>\n      f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b)\n\ngoal (5 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (smc_Set \\<alpha>\\<lparr>Comp\\<rparr>)\n 3. digraph \\<alpha> (dg_Set \\<alpha>)\n 4. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                         f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c\n 5. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                          f)", "show [intro]: \"g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c\"\n    if \"g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c\" \"f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\" for g b c f a"], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n    f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n    f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c", "from that"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b", "have g: \"arr_Set \\<alpha> g\" and f: \"arr_Set \\<alpha> f\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\n\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> g &&& arr_Set \\<alpha> f", "by (auto simp: smc_Set_is_arrD)"], ["proof (state)\nthis:\n  arr_Set \\<alpha> g\n  arr_Set \\<alpha> f\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n    f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c", "with that"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\n  arr_Set \\<alpha> g\n  arr_Set \\<alpha> f", "show ?thesis"], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\n  arr_Set \\<alpha> g\n  arr_Set \\<alpha> f\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n    f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c", "by \n        (\n          cs_concl \n            cs_simp: smc_cs_simps smc_Set_cs_simps \n            cs_intro: smc_Set_cs_intros\n        )"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n  f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?g : ?b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ?c;\n   ?f : ?a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ?b\\<rbrakk>\n  \\<Longrightarrow> ?g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                    ?f : ?a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ?c\n\ngoal (4 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (smc_Set \\<alpha>\\<lparr>Comp\\<rparr>)\n 3. digraph \\<alpha> (dg_Set \\<alpha>)\n 4. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                          f)", "show \"h \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> f = h \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> (g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> f)\"\n    if \"h : c \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> d\" \n      and \"g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c\"\n      and \"f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\"\n    for h c d g b f a"], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n    g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n    f =\n    h \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n    (g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> f)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. h \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n    g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n    f =\n    h \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n    (g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> f)", "from that"], ["proof (chain)\npicking this:\n  h : c \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> d\n  g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b", "have \"arr_Set \\<alpha> h\" \"arr_Set \\<alpha> g\" \"arr_Set \\<alpha> f\""], ["proof (prove)\nusing this:\n  h : c \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> d\n  g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\n\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> h &&& arr_Set \\<alpha> g &&& arr_Set \\<alpha> f", "by (auto simp: smc_Set_is_arrD)"], ["proof (state)\nthis:\n  arr_Set \\<alpha> h\n  arr_Set \\<alpha> g\n  arr_Set \\<alpha> f\n\ngoal (1 subgoal):\n 1. h \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n    g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n    f =\n    h \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n    (g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> f)", "with that"], ["proof (chain)\npicking this:\n  h : c \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> d\n  g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\n  arr_Set \\<alpha> h\n  arr_Set \\<alpha> g\n  arr_Set \\<alpha> f", "show ?thesis"], ["proof (prove)\nusing this:\n  h : c \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> d\n  g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\n  arr_Set \\<alpha> h\n  arr_Set \\<alpha> g\n  arr_Set \\<alpha> f\n\ngoal (1 subgoal):\n 1. h \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n    g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n    f =\n    h \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n    (g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> f)", "by \n        (\n          cs_concl \n            cs_simp: smc_cs_simps smc_Set_cs_simps \n            cs_intro: smc_Set_cs_intros\n        )"], ["proof (state)\nthis:\n  h \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n  g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n  f =\n  h \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n  (g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> f)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?h : ?c \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ?d;\n   ?g : ?b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ?c;\n   ?f : ?a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ?b\\<rbrakk>\n  \\<Longrightarrow> ?h \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                    ?g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                    ?f =\n                    ?h \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                    (?g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> ?f)\n\ngoal (3 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (smc_Set \\<alpha>\\<lparr>Comp\\<rparr>)\n 3. digraph \\<alpha> (dg_Set \\<alpha>)", "qed (auto simp: digraph_dg_Set smc_Set_components)"], ["", "subsubsection\\<open>\\<open>Set\\<close> is a wide subsemicategory of \\<open>Par\\<close>\\<close>"], ["", "lemma (in \\<Z>) wide_subsemicategory_smc_Set_smc_Par: \n  \"smc_Set \\<alpha> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> smc_Par \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smc_Set \\<alpha>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> smc_Par\n                             \\<alpha>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. smc_Set \\<alpha>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> smc_Par\n                             \\<alpha>", "interpret Par: semicategory \\<alpha> \\<open>smc_Par \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (smc_Par \\<alpha>)", "by (rule semicategory_smc_Par)"], ["proof (state)\ngoal (1 subgoal):\n 1. smc_Set \\<alpha>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> smc_Par\n                             \\<alpha>", "interpret Set: semicategory \\<alpha> \\<open>smc_Set \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (smc_Set \\<alpha>)", "by (rule semicategory_smc_Set)"], ["proof (state)\ngoal (1 subgoal):\n 1. smc_Set \\<alpha>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> smc_Par\n                             \\<alpha>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. smc_Set \\<alpha>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> smc_Par\n                             \\<alpha>", "proof\n    (\n      intro wide_subsemicategoryI subsemicategoryI, \n      unfold smc_dg_smc_Par smc_dg_smc_Set\n    )"], ["proof (state)\ngoal (5 subgoals):\n 1. semicategory \\<alpha> (smc_Set \\<alpha>)\n 2. semicategory \\<alpha> (smc_Par \\<alpha>)\n 3. dg_Set \\<alpha>\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> dg_Par \\<alpha>\n 4. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                         f =\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> f\n 5. dg_Set \\<alpha>\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> dg_Par\n                     \\<alpha>", "from wide_subdigraph_dg_Set_dg_Par"], ["proof (chain)\npicking this:\n  dg_Set \\<alpha>\n  \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> dg_Par\n                   \\<alpha>", "show wsd:  \n      \"dg_Set \\<alpha> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> dg_Par \\<alpha>\" \n      \"dg_Set \\<alpha> \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> dg_Par \\<alpha>\""], ["proof (prove)\nusing this:\n  dg_Set \\<alpha>\n  \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> dg_Par\n                   \\<alpha>\n\ngoal (1 subgoal):\n 1. dg_Set \\<alpha>\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> dg_Par \\<alpha> &&&\n    dg_Set \\<alpha>\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> dg_Par\n                     \\<alpha>", "by auto"], ["proof (state)\nthis:\n  dg_Set \\<alpha>\n  \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> dg_Par \\<alpha>\n  dg_Set \\<alpha>\n  \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> dg_Par\n                   \\<alpha>\n\ngoal (3 subgoals):\n 1. semicategory \\<alpha> (smc_Set \\<alpha>)\n 2. semicategory \\<alpha> (smc_Par \\<alpha>)\n 3. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                         f =\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> f", "interpret wide_subdigraph \\<alpha> \\<open>dg_Set \\<alpha>\\<close> \\<open>dg_Par \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. dg_Set \\<alpha>\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> dg_Par\n                     \\<alpha>", "by (rule wsd(2))"], ["proof (state)\ngoal (3 subgoals):\n 1. semicategory \\<alpha> (smc_Set \\<alpha>)\n 2. semicategory \\<alpha> (smc_Par \\<alpha>)\n 3. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub>\n                         f =\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> f", "show \"g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> f = g \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> f\"\n      if \"g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c\" and \"f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\" for g b c f a"], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> f =\n    g \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> f", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> f =\n    g \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> f", "from that"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b", "have \"g : b \\<mapsto>\\<^bsub>dg_Set \\<alpha>\\<^esub> c\" and \"f : a \\<mapsto>\\<^bsub>dg_Set \\<alpha>\\<^esub> b\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\n\ngoal (1 subgoal):\n 1. g : b \\<mapsto>\\<^bsub>dg_Set \\<alpha>\\<^esub> c &&&\n    f : a \\<mapsto>\\<^bsub>dg_Set \\<alpha>\\<^esub> b", "by (cs_concl cs_simp: smc_dg_smc_Set[symmetric] cs_intro: slicing_intros)+"], ["proof (state)\nthis:\n  g : b \\<mapsto>\\<^bsub>dg_Set \\<alpha>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>dg_Set \\<alpha>\\<^esub> b\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> f =\n    g \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> f", "then"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^bsub>dg_Set \\<alpha>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>dg_Set \\<alpha>\\<^esub> b", "have \"g : b \\<mapsto>\\<^bsub>dg_Par \\<alpha>\\<^esub> c\" and \"f : a \\<mapsto>\\<^bsub>dg_Par \\<alpha>\\<^esub> b\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>dg_Set \\<alpha>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>dg_Set \\<alpha>\\<^esub> b\n\ngoal (1 subgoal):\n 1. g : b \\<mapsto>\\<^bsub>dg_Par \\<alpha>\\<^esub> c &&&\n    f : a \\<mapsto>\\<^bsub>dg_Par \\<alpha>\\<^esub> b", "by (cs_concl cs_intro: dg_sub_fw_cs_intros)+"], ["proof (state)\nthis:\n  g : b \\<mapsto>\\<^bsub>dg_Par \\<alpha>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>dg_Par \\<alpha>\\<^esub> b\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> f =\n    g \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> f", "then"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^bsub>dg_Par \\<alpha>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>dg_Par \\<alpha>\\<^esub> b", "have \"g : b \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> c\" and \"f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> b\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>dg_Par \\<alpha>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>dg_Par \\<alpha>\\<^esub> b\n\ngoal (1 subgoal):\n 1. g : b \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> c &&&\n    f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> b", "unfolding smc_dg_smc_Par[symmetric] slicing_simps"], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> b\n\ngoal (1 subgoal):\n 1. g : b \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> c &&&\n    f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> b", "by simp_all"], ["proof (state)\nthis:\n  g : b \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> b\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> f =\n    g \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> f", "from that this"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\n  g : b \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> b", "show \"g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> f = g \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> f\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\n  g : b \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> b\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> f =\n    g \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> f", "by (cs_concl cs_simp: smc_Set_cs_simps smc_Par_cs_simps)"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> f =\n  g \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?g : ?b \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ?c;\n   ?f : ?a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ?b\\<rbrakk>\n  \\<Longrightarrow> ?g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> ?f =\n                    ?g \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> ?f\n\ngoal (2 subgoals):\n 1. semicategory \\<alpha> (smc_Set \\<alpha>)\n 2. semicategory \\<alpha> (smc_Par \\<alpha>)", "qed (auto simp: smc_cs_intros)"], ["proof (state)\nthis:\n  smc_Set \\<alpha>\n  \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> smc_Par\n                           \\<alpha>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Monic arrow and epic arrow\\<close>"], ["", "lemma (in \\<Z>) smc_Set_is_monic_arrI:\n  \\<comment>\\<open>See Chapter I-5 in \\cite{mac_lane_categories_2010}).\\<close>\n  assumes \"T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\" and \"v11 (T\\<lparr>ArrVal\\<rparr>)\" and \"\\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\"\n  shows \"T : A \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>smc_Set \\<alpha>\\<^esub> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>smc_Set \\<alpha>\\<^esub> B", "proof(rule is_monic_arrI)"], ["proof (state)\ngoal (2 subgoals):\n 1. T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n 2. \\<And>f g a.\n       \\<lbrakk>f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A;\n        g : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A;\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> f =\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> f = g", "interpret wide_subsemicategory \\<alpha> \\<open>smc_Set \\<alpha>\\<close> \\<open>smc_Par \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. smc_Set \\<alpha>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> smc_Par\n                             \\<alpha>", "by (rule wide_subsemicategory_smc_Set_smc_Par)"], ["proof (state)\ngoal (2 subgoals):\n 1. T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n 2. \\<And>f g a.\n       \\<lbrakk>f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A;\n        g : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A;\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> f =\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> f = g", "interpret v11 \\<open>T\\<lparr>ArrVal\\<rparr>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. v11 (T\\<lparr>ArrVal\\<rparr>)", "by (rule assms(2))"], ["proof (state)\ngoal (2 subgoals):\n 1. T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n 2. \\<And>f g a.\n       \\<lbrakk>f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A;\n        g : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A;\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> f =\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> f = g", "show T: \"T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B", "by (rule assms(1))"], ["proof (state)\nthis:\n  T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. \\<And>f g a.\n       \\<lbrakk>f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A;\n        g : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A;\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> f =\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> f = g", "fix S R A'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f g a.\n       \\<lbrakk>f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A;\n        g : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A;\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> f =\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> f = g", "assume S: \"S : A' \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A\" \n    and R: \"R : A' \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A\" \n    and TS_TR: \"T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> S = T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> R\""], ["proof (state)\nthis:\n  S : A' \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A\n  R : A' \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> S =\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> R\n\ngoal (1 subgoal):\n 1. \\<And>f g a.\n       \\<lbrakk>f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A;\n        g : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A;\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> f =\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> f = g", "from assms(3) T"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n  T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B", "have \"T : A \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>smc_Par \\<alpha>\\<^esub> B\""], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n  T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "by (intro smc_Par_is_monic_arrI) \n      (auto simp: v11_axioms dest: subsmc_is_arrD)"], ["proof (state)\nthis:\n  T : A \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. \\<And>f g a.\n       \\<lbrakk>f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A;\n        g : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A;\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> f =\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> f = g", "moreover"], ["proof (state)\nthis:\n  T : A \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. \\<And>f g a.\n       \\<lbrakk>f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A;\n        g : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A;\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> f =\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> f = g", "from S subsemicategory_axioms"], ["proof (chain)\npicking this:\n  S : A' \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A\n  smc_Set \\<alpha>\n  \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_Par\n                         \\<alpha>", "have \"S : A' \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\""], ["proof (prove)\nusing this:\n  S : A' \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A\n  smc_Set \\<alpha>\n  \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_Par\n                         \\<alpha>\n\ngoal (1 subgoal):\n 1. S : A' \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A", "by (cs_concl cs_intro: smc_sub_fw_cs_intros)"], ["proof (state)\nthis:\n  S : A' \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\n\ngoal (1 subgoal):\n 1. \\<And>f g a.\n       \\<lbrakk>f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A;\n        g : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A;\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> f =\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> f = g", "moreover"], ["proof (state)\nthis:\n  S : A' \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\n\ngoal (1 subgoal):\n 1. \\<And>f g a.\n       \\<lbrakk>f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A;\n        g : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A;\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> f =\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> f = g", "from R subsemicategory_axioms"], ["proof (chain)\npicking this:\n  R : A' \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A\n  smc_Set \\<alpha>\n  \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_Par\n                         \\<alpha>", "have \"R : A' \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\""], ["proof (prove)\nusing this:\n  R : A' \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A\n  smc_Set \\<alpha>\n  \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_Par\n                         \\<alpha>\n\ngoal (1 subgoal):\n 1. R : A' \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A", "by (cs_concl cs_intro: smc_sub_fw_cs_intros)"], ["proof (state)\nthis:\n  R : A' \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\n\ngoal (1 subgoal):\n 1. \\<And>f g a.\n       \\<lbrakk>f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A;\n        g : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A;\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> f =\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> f = g", "moreover"], ["proof (state)\nthis:\n  R : A' \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\n\ngoal (1 subgoal):\n 1. \\<And>f g a.\n       \\<lbrakk>f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A;\n        g : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A;\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> f =\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> f = g", "from T S R TS_TR subsemicategory_axioms"], ["proof (chain)\npicking this:\n  T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n  S : A' \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A\n  R : A' \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> S =\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> R\n  smc_Set \\<alpha>\n  \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_Par\n                         \\<alpha>", "have \n    \"T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> S = T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> R\""], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n  S : A' \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A\n  R : A' \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> S =\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> R\n  smc_Set \\<alpha>\n  \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_Par\n                         \\<alpha>\n\ngoal (1 subgoal):\n 1. T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> S =\n    T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> R", "by (auto simp: smc_sub_bw_cs_simps)"], ["proof (state)\nthis:\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> S =\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> R\n\ngoal (1 subgoal):\n 1. \\<And>f g a.\n       \\<lbrakk>f : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A;\n        g : a \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A;\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> f =\n        T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> f = g", "ultimately"], ["proof (chain)\npicking this:\n  T : A \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n  S : A' \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\n  R : A' \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> S =\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> R", "show \"S = R\""], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n  S : A' \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\n  R : A' \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> A\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> S =\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> R\n\ngoal (1 subgoal):\n 1. S = R", "by (rule is_monic_arrD(2))"], ["proof (state)\nthis:\n  S = R\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in \\<Z>) smc_Set_is_monic_arrD:\n  assumes \"T : A \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>smc_Set \\<alpha>\\<^esub> B\"\n  shows \"T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\" and \"v11 (T\\<lparr>ArrVal\\<rparr>)\" and \"\\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B &&&\n    v11 (T\\<lparr>ArrVal\\<rparr>) &&&\n    \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A", "proof-"], ["proof (state)\ngoal (3 subgoals):\n 1. T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n 2. v11 (T\\<lparr>ArrVal\\<rparr>)\n 3. \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A", "interpret wide_subdigraph \\<alpha> \\<open>dg_Set \\<alpha>\\<close> \\<open>dg_Par \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. dg_Set \\<alpha>\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> dg_Par\n                     \\<alpha>", "by (rule wide_subdigraph_dg_Set_dg_Par)"], ["proof (state)\ngoal (3 subgoals):\n 1. T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n 2. v11 (T\\<lparr>ArrVal\\<rparr>)\n 3. \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A", "interpret Par: semicategory \\<alpha> \\<open>smc_Par \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (smc_Par \\<alpha>)", "by (rule semicategory_smc_Par)"], ["proof (state)\ngoal (3 subgoals):\n 1. T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n 2. v11 (T\\<lparr>ArrVal\\<rparr>)\n 3. \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A", "from assms"], ["proof (chain)\npicking this:\n  T : A \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>smc_Set \\<alpha>\\<^esub> B", "show T: \"T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\""], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B", "by auto"], ["proof (state)\nthis:\n  T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n\ngoal (2 subgoals):\n 1. v11 (T\\<lparr>ArrVal\\<rparr>)\n 2. \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A", "interpret T: arr_Set \\<alpha> T \n    rewrites [simp]: \"T\\<lparr>ArrDom\\<rparr> = A\" and [simp]: \"T\\<lparr>ArrCod\\<rparr> = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> T &&&\n    T\\<lparr>ArrDom\\<rparr> = A &&& T\\<lparr>ArrCod\\<rparr> = B", "using T"], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> T &&&\n    T\\<lparr>ArrDom\\<rparr> = A &&& T\\<lparr>ArrCod\\<rparr> = B", "by (auto elim!: smc_Set_is_arrE)"], ["proof (state)\ngoal (2 subgoals):\n 1. v11 (T\\<lparr>ArrVal\\<rparr>)\n 2. \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A", "show \"v11 (T\\<lparr>ArrVal\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v11 (T\\<lparr>ArrVal\\<rparr>)", "proof(rule v11I)"], ["proof (state)\ngoal (2 subgoals):\n 1. vsv (T\\<lparr>ArrVal\\<rparr>)\n 2. vsv ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)", "show \"vsv ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)", "proof(rule vsvI)"], ["proof (state)\ngoal (2 subgoals):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "fix a b c"], ["proof (state)\ngoal (2 subgoals):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "assume \"\\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\" and \"\\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\""], ["proof (state)\nthis:\n  \\<langle>a, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\n  \\<langle>a, c\\<rangle>\n  \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\n\ngoal (2 subgoals):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "then"], ["proof (chain)\npicking this:\n  \\<langle>a, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\n  \\<langle>a, c\\<rangle>\n  \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>", "have bar: \"\\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\" and car: \"\\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<langle>a, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\n  \\<langle>a, c\\<rangle>\n  \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> &&&\n    \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>", "by auto"], ["proof (state)\nthis:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n\ngoal (2 subgoals):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "with T.arr_Set_ArrVal_vdomain"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>", "have [intro]: \"b \\<in>\\<^sub>\\<circ> A\" \"c \\<in>\\<^sub>\\<circ> A\""], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. b \\<in>\\<^sub>\\<circ> A &&& c \\<in>\\<^sub>\\<circ> A", "by blast+"], ["proof (state)\nthis:\n  b \\<in>\\<^sub>\\<circ> A\n  c \\<in>\\<^sub>\\<circ> A\n\ngoal (2 subgoals):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "define R where \"R = [set {\\<langle>0, b\\<rangle>}, set {0}, A]\\<^sub>\\<circ>\""], ["proof (state)\nthis:\n  R =\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, A]\\<^sub>\\<circ>\n\ngoal (2 subgoals):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "define S where \"S = [set {\\<langle>0, c\\<rangle>}, set {0}, A]\\<^sub>\\<circ>\""], ["proof (state)\nthis:\n  S =\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, A]\\<^sub>\\<circ>\n\ngoal (2 subgoals):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "have R: \"R : set {0} \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R : ZFC_in_HOL.set\n         {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A", "proof(rule smc_Set_is_arrI)"], ["proof (state)\ngoal (3 subgoals):\n 1. arr_Set \\<alpha> R\n 2. R\\<lparr>ArrDom\\<rparr> = ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n 3. R\\<lparr>ArrCod\\<rparr> = A", "show \"arr_Set \\<alpha> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> R", "unfolding R_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Set \\<alpha>\n     [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>},\n      ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, A]\\<^sub>\\<circ>", "by (rule arr_Set_vfsequenceI) (auto simp: T.arr_Rel_ArrDom_in_Vset)"], ["proof (state)\nthis:\n  arr_Set \\<alpha> R\n\ngoal (2 subgoals):\n 1. R\\<lparr>ArrDom\\<rparr> = ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n 2. R\\<lparr>ArrCod\\<rparr> = A", "qed (simp_all add: R_def arr_Rel_components)"], ["proof (state)\nthis:\n  R : ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A\n\ngoal (2 subgoals):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "interpret R: arr_Set \\<alpha> R \n        rewrites [simp]: \"R\\<lparr>ArrDom\\<rparr> = set {0}\" and [simp]: \"R\\<lparr>ArrCod\\<rparr> = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> R &&&\n    R\\<lparr>ArrDom\\<rparr> = ZFC_in_HOL.set {[]\\<^sub>\\<circ>} &&&\n    R\\<lparr>ArrCod\\<rparr> = A", "using R"], ["proof (prove)\nusing this:\n  R : ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A\n\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> R &&&\n    R\\<lparr>ArrDom\\<rparr> = ZFC_in_HOL.set {[]\\<^sub>\\<circ>} &&&\n    R\\<lparr>ArrCod\\<rparr> = A", "by (auto elim!: smc_Set_is_arrE)"], ["proof (state)\ngoal (2 subgoals):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "have S: \"S : set {0} \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S : ZFC_in_HOL.set\n         {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A", "proof(rule smc_Set_is_arrI)"], ["proof (state)\ngoal (3 subgoals):\n 1. arr_Set \\<alpha> S\n 2. S\\<lparr>ArrDom\\<rparr> = ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n 3. S\\<lparr>ArrCod\\<rparr> = A", "show \"arr_Set \\<alpha> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> S", "unfolding S_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Set \\<alpha>\n     [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>},\n      ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, A]\\<^sub>\\<circ>", "by (rule arr_Set_vfsequenceI) (auto simp: T.arr_Rel_ArrDom_in_Vset)"], ["proof (state)\nthis:\n  arr_Set \\<alpha> S\n\ngoal (2 subgoals):\n 1. S\\<lparr>ArrDom\\<rparr> = ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n 2. S\\<lparr>ArrCod\\<rparr> = A", "qed (simp_all add: S_def arr_Rel_components)"], ["proof (state)\nthis:\n  S : ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A\n\ngoal (2 subgoals):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "interpret S: arr_Set \\<alpha> S \n        rewrites [simp]: \"S\\<lparr>ArrDom\\<rparr> = set {0}\" and [simp]: \"S\\<lparr>ArrCod\\<rparr> = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> S &&&\n    S\\<lparr>ArrDom\\<rparr> = ZFC_in_HOL.set {[]\\<^sub>\\<circ>} &&&\n    S\\<lparr>ArrCod\\<rparr> = A", "using S"], ["proof (prove)\nusing this:\n  S : ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A\n\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> S &&&\n    S\\<lparr>ArrDom\\<rparr> = ZFC_in_HOL.set {[]\\<^sub>\\<circ>} &&&\n    S\\<lparr>ArrCod\\<rparr> = A", "by (auto elim!: smc_Set_is_arrE)"], ["proof (state)\ngoal (2 subgoals):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "have \"T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> R = [set {\\<langle>0, a\\<rangle>}, set {0}, B]\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> R =\n    [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n     ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>", "unfolding smc_Set_Comp_app[OF T R]"], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l R =\n    [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n     ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>", "proof\n        (\n          rule arr_Set_eqI[of \\<alpha>], \n          unfold comp_Rel_components arr_Rel_components\n        )"], ["proof (state)\ngoal (5 subgoals):\n 1. arr_Set \\<alpha> (T \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l R)\n 2. arr_Set \\<alpha>\n     [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n      ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>\n 3. T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr> =\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}\n 4. R\\<lparr>ArrDom\\<rparr> = ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n 5. T\\<lparr>ArrCod\\<rparr> = B", "from R T"], ["proof (chain)\npicking this:\n  R : ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A\n  T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B", "show \"arr_Set \\<alpha> (T \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l R)\""], ["proof (prove)\nusing this:\n  R : ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A\n  T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> (T \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l R)", "by (intro arr_Set_comp_Set) \n            (auto elim!: smc_Set_is_arrE simp: smc_Set_cs_simps)"], ["proof (state)\nthis:\n  arr_Set \\<alpha> (T \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l R)\n\ngoal (4 subgoals):\n 1. arr_Set \\<alpha>\n     [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n      ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>\n 2. T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr> =\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}\n 3. R\\<lparr>ArrDom\\<rparr> = ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n 4. T\\<lparr>ArrCod\\<rparr> = B", "show \"arr_Set \\<alpha> [set {\\<langle>0, a\\<rangle>}, set {0}, B]\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Set \\<alpha>\n     [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n      ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>", "proof(rule arr_Set_vfsequenceI)"], ["proof (state)\ngoal (5 subgoals):\n 1. vsv (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})\n 2. \\<D>\\<^sub>\\<circ>\n     (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}) =\n    ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n 3. \\<R>\\<^sub>\\<circ>\n     (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})\n    \\<subseteq>\\<^sub>\\<circ> B\n 4. ZFC_in_HOL.set {[]\\<^sub>\\<circ>} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 5. B \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "from T.arr_Rel_ArrVal_vrange bar"], ["proof (chain)\npicking this:\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> B\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>", "show \"\\<R>\\<^sub>\\<circ> (set {\\<langle>0, a\\<rangle>}) \\<subseteq>\\<^sub>\\<circ> B\""], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> B\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})\n    \\<subseteq>\\<^sub>\\<circ> B", "by auto"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ>\n   (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})\n  \\<subseteq>\\<^sub>\\<circ> B\n\ngoal (4 subgoals):\n 1. vsv (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})\n 2. \\<D>\\<^sub>\\<circ>\n     (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}) =\n    ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n 3. ZFC_in_HOL.set {[]\\<^sub>\\<circ>} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 4. B \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "qed (auto simp: T.arr_Rel_ArrCod_in_Vset Axiom_of_Powers)"], ["proof (state)\nthis:\n  arr_Set \\<alpha>\n   [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n    ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>\n\ngoal (3 subgoals):\n 1. T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr> =\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}\n 2. R\\<lparr>ArrDom\\<rparr> = ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n 3. T\\<lparr>ArrCod\\<rparr> = B", "show \"T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr> = set {\\<langle>0, a\\<rangle>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr> =\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}", "unfolding R_def arr_Rel_components"], ["proof (prove)\ngoal (1 subgoal):\n 1. T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>} =\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}", "proof(rule vsv_eqI, unfold vdomain_vsingleton)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n         ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>})\n 2. vsv (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})\n 3. \\<D>\\<^sub>\\<circ>\n     (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n      ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>}) =\n    ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n 4. \\<And>aa.\n       aa \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                               (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                                ZFC_in_HOL.set\n                                 {\\<langle>[]\\<^sub>\\<circ>,\n     b\\<rangle>}) \\<Longrightarrow>\n       (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n        ZFC_in_HOL.set\n         {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>})\\<lparr>aa\\<rparr> =\n       ZFC_in_HOL.set\n        {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}\\<lparr>aa\\<rparr>", "from bar"], ["proof (chain)\npicking this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>", "show \"\\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> set {\\<langle>0, b\\<rangle>}) = set {0}\""], ["proof (prove)\nusing this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n      ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>}) =\n    ZFC_in_HOL.set {[]\\<^sub>\\<circ>}", "by auto"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>}) =\n  ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n\ngoal (3 subgoals):\n 1. vsv (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n         ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>})\n 2. vsv (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})\n 3. \\<And>aa.\n       aa \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                               (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                                ZFC_in_HOL.set\n                                 {\\<langle>[]\\<^sub>\\<circ>,\n     b\\<rangle>}) \\<Longrightarrow>\n       (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n        ZFC_in_HOL.set\n         {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>})\\<lparr>aa\\<rparr> =\n       ZFC_in_HOL.set\n        {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}\\<lparr>aa\\<rparr>", "with bar"], ["proof (chain)\npicking this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n  \\<D>\\<^sub>\\<circ>\n   (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>}) =\n  ZFC_in_HOL.set {[]\\<^sub>\\<circ>}", "show \"a' \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> set {\\<langle>0, b\\<rangle>}) \\<Longrightarrow> \n            (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> set {\\<langle>0, b\\<rangle>})\\<lparr>a'\\<rparr> = set {\\<langle>0, a\\<rangle>}\\<lparr>a'\\<rparr>\"\n            for a'"], ["proof (prove)\nusing this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n  \\<D>\\<^sub>\\<circ>\n   (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>}) =\n  ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n\ngoal (1 subgoal):\n 1. a' \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                            (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                             ZFC_in_HOL.set\n                              {\\<langle>[]\\<^sub>\\<circ>,\n  b\\<rangle>}) \\<Longrightarrow>\n    (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n     ZFC_in_HOL.set\n      {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>})\\<lparr>a'\\<rparr> =\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}\\<lparr>a'\\<rparr>", "by auto"], ["proof (state)\nthis:\n  ?a'\n  \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                       (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                        ZFC_in_HOL.set\n                         {\\<langle>[]\\<^sub>\\<circ>,\n                                   b\\<rangle>}) \\<Longrightarrow>\n  (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n   ZFC_in_HOL.set\n    {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>})\\<lparr>?a'\\<rparr> =\n  ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}\\<lparr>?a'\\<rparr>\n\ngoal (2 subgoals):\n 1. vsv (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n         ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>})\n 2. vsv (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})", "qed (auto intro: vsv_vcomp)"], ["proof (state)\nthis:\n  T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> R\\<lparr>ArrVal\\<rparr> =\n  ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}\n\ngoal (2 subgoals):\n 1. R\\<lparr>ArrDom\\<rparr> = ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n 2. T\\<lparr>ArrCod\\<rparr> = B", "qed (simp_all add: R_def arr_Rel_components)"], ["proof (state)\nthis:\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> R =\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>\n\ngoal (2 subgoals):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "moreover"], ["proof (state)\nthis:\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> R =\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>\n\ngoal (2 subgoals):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "have \"T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> S = [set {\\<langle>0, a\\<rangle>}, set {0}, B]\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> S =\n    [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n     ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>", "unfolding smc_Set_Comp_app[OF T S]"], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l S =\n    [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n     ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>", "proof\n        (\n          rule arr_Set_eqI[of \\<alpha>],\n          unfold comp_Rel_components arr_Rel_components\n        )"], ["proof (state)\ngoal (5 subgoals):\n 1. arr_Set \\<alpha> (T \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l S)\n 2. arr_Set \\<alpha>\n     [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n      ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>\n 3. T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> =\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}\n 4. S\\<lparr>ArrDom\\<rparr> = ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n 5. T\\<lparr>ArrCod\\<rparr> = B", "from T S"], ["proof (chain)\npicking this:\n  T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n  S : ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A", "show \"arr_Set \\<alpha> (T \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l S)\""], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n  S : ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A\n\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> (T \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l S)", "by (intro arr_Set_comp_Set)\n            (\n              auto simp: \n                T.arr_Set_axioms \n                smc_Set_is_arrD \n                S.arr_Set_ArrVal_vrange \n                smc_Set_cs_simps\n            )"], ["proof (state)\nthis:\n  arr_Set \\<alpha> (T \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l S)\n\ngoal (4 subgoals):\n 1. arr_Set \\<alpha>\n     [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n      ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>\n 2. T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> =\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}\n 3. S\\<lparr>ArrDom\\<rparr> = ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n 4. T\\<lparr>ArrCod\\<rparr> = B", "show \"arr_Set \\<alpha> [set {\\<langle>0, a\\<rangle>}, set {0}, B]\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Set \\<alpha>\n     [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n      ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>", "proof(rule arr_Set_vfsequenceI)"], ["proof (state)\ngoal (5 subgoals):\n 1. vsv (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})\n 2. \\<D>\\<^sub>\\<circ>\n     (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}) =\n    ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n 3. \\<R>\\<^sub>\\<circ>\n     (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})\n    \\<subseteq>\\<^sub>\\<circ> B\n 4. ZFC_in_HOL.set {[]\\<^sub>\\<circ>} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 5. B \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "from T.arr_Rel_ArrVal_vrange bar"], ["proof (chain)\npicking this:\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> B\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>", "show \"\\<R>\\<^sub>\\<circ> (set {\\<langle>0, a\\<rangle>}) \\<subseteq>\\<^sub>\\<circ> B\""], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> B\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})\n    \\<subseteq>\\<^sub>\\<circ> B", "by auto"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ>\n   (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})\n  \\<subseteq>\\<^sub>\\<circ> B\n\ngoal (4 subgoals):\n 1. vsv (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})\n 2. \\<D>\\<^sub>\\<circ>\n     (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}) =\n    ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n 3. ZFC_in_HOL.set {[]\\<^sub>\\<circ>} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 4. B \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "qed (auto simp: T.arr_Rel_ArrCod_in_Vset Axiom_of_Powers)"], ["proof (state)\nthis:\n  arr_Set \\<alpha>\n   [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n    ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>\n\ngoal (3 subgoals):\n 1. T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> =\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}\n 2. S\\<lparr>ArrDom\\<rparr> = ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n 3. T\\<lparr>ArrCod\\<rparr> = B", "show \"T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> = set {\\<langle>0, a\\<rangle>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> =\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}", "unfolding S_def arr_Rel_components"], ["proof (prove)\ngoal (1 subgoal):\n 1. T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>} =\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}", "proof(rule vsv_eqI, unfold vdomain_vsingleton)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n         ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>})\n 2. vsv (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})\n 3. \\<D>\\<^sub>\\<circ>\n     (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n      ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>}) =\n    ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n 4. \\<And>aa.\n       aa \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                               (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                                ZFC_in_HOL.set\n                                 {\\<langle>[]\\<^sub>\\<circ>,\n     c\\<rangle>}) \\<Longrightarrow>\n       (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n        ZFC_in_HOL.set\n         {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>})\\<lparr>aa\\<rparr> =\n       ZFC_in_HOL.set\n        {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}\\<lparr>aa\\<rparr>", "from car"], ["proof (chain)\npicking this:\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>", "show \"\\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> set {\\<langle>0, c\\<rangle>}) = set {0}\""], ["proof (prove)\nusing this:\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n      ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>}) =\n    ZFC_in_HOL.set {[]\\<^sub>\\<circ>}", "by auto"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>}) =\n  ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n\ngoal (3 subgoals):\n 1. vsv (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n         ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>})\n 2. vsv (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})\n 3. \\<And>aa.\n       aa \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                               (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                                ZFC_in_HOL.set\n                                 {\\<langle>[]\\<^sub>\\<circ>,\n     c\\<rangle>}) \\<Longrightarrow>\n       (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n        ZFC_in_HOL.set\n         {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>})\\<lparr>aa\\<rparr> =\n       ZFC_in_HOL.set\n        {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}\\<lparr>aa\\<rparr>", "with car"], ["proof (chain)\npicking this:\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n  \\<D>\\<^sub>\\<circ>\n   (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>}) =\n  ZFC_in_HOL.set {[]\\<^sub>\\<circ>}", "show \"a' \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> set {\\<langle>0, c\\<rangle>}) \\<Longrightarrow> \n            (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> set {\\<langle>0, c\\<rangle>})\\<lparr>a'\\<rparr> = set {\\<langle>0, a\\<rangle>}\\<lparr>a'\\<rparr>\"\n            for a'"], ["proof (prove)\nusing this:\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n  \\<D>\\<^sub>\\<circ>\n   (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>}) =\n  ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n\ngoal (1 subgoal):\n 1. a' \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                            (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                             ZFC_in_HOL.set\n                              {\\<langle>[]\\<^sub>\\<circ>,\n  c\\<rangle>}) \\<Longrightarrow>\n    (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n     ZFC_in_HOL.set\n      {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>})\\<lparr>a'\\<rparr> =\n    ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}\\<lparr>a'\\<rparr>", "by auto"], ["proof (state)\nthis:\n  ?a'\n  \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                       (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                        ZFC_in_HOL.set\n                         {\\<langle>[]\\<^sub>\\<circ>,\n                                   c\\<rangle>}) \\<Longrightarrow>\n  (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n   ZFC_in_HOL.set\n    {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>})\\<lparr>?a'\\<rparr> =\n  ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}\\<lparr>?a'\\<rparr>\n\ngoal (2 subgoals):\n 1. vsv (T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n         ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>})\n 2. vsv (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>})", "qed (auto intro: vsv_vcomp)"], ["proof (state)\nthis:\n  T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> =\n  ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>}\n\ngoal (2 subgoals):\n 1. S\\<lparr>ArrDom\\<rparr> = ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n 2. T\\<lparr>ArrCod\\<rparr> = B", "qed (simp_all add: S_def arr_Rel_components)"], ["proof (state)\nthis:\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> S =\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>\n\ngoal (2 subgoals):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "ultimately"], ["proof (chain)\npicking this:\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> R =\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> S =\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>", "have \"T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> R = T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> S\""], ["proof (prove)\nusing this:\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> R =\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> S =\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> R =\n    T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> S", "by simp"], ["proof (state)\nthis:\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> R =\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> S\n\ngoal (2 subgoals):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "from R S assms this"], ["proof (chain)\npicking this:\n  R : ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A\n  S : ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A\n  T : A \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> R =\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> S", "have \"R = S\""], ["proof (prove)\nusing this:\n  R : ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A\n  S : ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> A\n  T : A \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> R =\n  T \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> S\n\ngoal (1 subgoal):\n 1. R = S", "by clarsimp"], ["proof (state)\nthis:\n  R = S\n\ngoal (2 subgoals):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "then"], ["proof (chain)\npicking this:\n  R = S", "have \"R\\<lparr>ArrVal\\<rparr> = S\\<lparr>ArrVal\\<rparr>\""], ["proof (prove)\nusing this:\n  R = S\n\ngoal (1 subgoal):\n 1. R\\<lparr>ArrVal\\<rparr> = S\\<lparr>ArrVal\\<rparr>", "by simp"], ["proof (state)\nthis:\n  R\\<lparr>ArrVal\\<rparr> = S\\<lparr>ArrVal\\<rparr>\n\ngoal (2 subgoals):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "then"], ["proof (chain)\npicking this:\n  R\\<lparr>ArrVal\\<rparr> = S\\<lparr>ArrVal\\<rparr>", "show \"b = c\""], ["proof (prove)\nusing this:\n  R\\<lparr>ArrVal\\<rparr> = S\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. b = c", "unfolding R_def S_def arr_Rel_components"], ["proof (prove)\nusing this:\n  ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>} =\n  ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, c\\<rangle>}\n\ngoal (1 subgoal):\n 1. b = c", "by simp"], ["proof (state)\nthis:\n  b = c\n\ngoal (1 subgoal):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)", "qed clarsimp"], ["proof (state)\nthis:\n  vsv ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n\ngoal (1 subgoal):\n 1. vsv (T\\<lparr>ArrVal\\<rparr>)", "qed auto"], ["proof (state)\nthis:\n  v11 (T\\<lparr>ArrVal\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A", "show \"\\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A", "by (simp add: smc_Set_cs_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in \\<Z>) smc_Set_is_monic_arr: \n  \"T : A \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>smc_Set \\<alpha>\\<^esub> B \\<longleftrightarrow>  \n    T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B \\<and> v11 (T\\<lparr>ArrVal\\<rparr>) \\<and> \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>smc_Set \\<alpha>\\<^esub> B =\n    (T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B \\<and>\n     v11 (T\\<lparr>ArrVal\\<rparr>) \\<and>\n     \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A)", "by (rule iffI) (auto simp: smc_Set_is_monic_arrD smc_Set_is_monic_arrI)"], ["", "text\\<open>\nAn epic arrow in \\<open>Set\\<close> is a total surjective function (see Chapter I-5 \nin \\cite{mac_lane_categories_2010}).\n\\<close>"], ["", "lemma (in \\<Z>) smc_Set_is_epic_arrI:\n  assumes \"T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\" and \"\\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\"\n  shows \"T : A \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>smc_Set \\<alpha>\\<^esub> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>smc_Set \\<alpha>\\<^esub> B", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>smc_Set \\<alpha>\\<^esub> B", "interpret wide_subsemicategory \\<alpha> \\<open>smc_Set \\<alpha>\\<close> \\<open>smc_Par \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. smc_Set \\<alpha>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> smc_Par\n                             \\<alpha>", "by (rule wide_subsemicategory_smc_Set_smc_Par)"], ["proof (state)\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>smc_Set \\<alpha>\\<^esub> B", "have epi_T: \"T : A \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>smc_Par \\<alpha>\\<^esub> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "using assms"], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\n\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>smc_Par \\<alpha>\\<^esub> B", "by (meson smc_Par_is_epic_arr subsmc_is_arrD)"], ["proof (state)\nthis:\n  T : A \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>smc_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>smc_Set \\<alpha>\\<^esub> B", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>smc_Set \\<alpha>\\<^esub> B", "proof(rule sdg.is_epic_arrI)"], ["proof (state)\ngoal (2 subgoals):\n 1. T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n 2. \\<And>f g c.\n       \\<lbrakk>f : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c;\n        g : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c;\n        f \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T =\n        g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T\\<rbrakk>\n       \\<Longrightarrow> f = g", "show T: \"T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B", "by (rule assms(1))"], ["proof (state)\nthis:\n  T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. \\<And>f g c.\n       \\<lbrakk>f : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c;\n        g : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c;\n        f \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T =\n        g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T\\<rbrakk>\n       \\<Longrightarrow> f = g", "fix f g a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f g c.\n       \\<lbrakk>f : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c;\n        g : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c;\n        f \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T =\n        g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T\\<rbrakk>\n       \\<Longrightarrow> f = g", "assume prems: \n      \"f : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> a\" \n      \"g : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> a\"\n      \"f \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T = g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T\""], ["proof (state)\nthis:\n  f : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> a\n  g : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> a\n  f \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T =\n  g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T\n\ngoal (1 subgoal):\n 1. \\<And>f g c.\n       \\<lbrakk>f : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c;\n        g : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c;\n        f \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T =\n        g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T\\<rbrakk>\n       \\<Longrightarrow> f = g", "from prems(1) subsemicategory_axioms"], ["proof (chain)\npicking this:\n  f : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> a\n  smc_Set \\<alpha>\n  \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_Par\n                         \\<alpha>", "have \"f : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> a\""], ["proof (prove)\nusing this:\n  f : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> a\n  smc_Set \\<alpha>\n  \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_Par\n                         \\<alpha>\n\ngoal (1 subgoal):\n 1. f : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> a", "by (cs_concl cs_intro: smc_sub_fw_cs_intros)"], ["proof (state)\nthis:\n  f : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> a\n\ngoal (1 subgoal):\n 1. \\<And>f g c.\n       \\<lbrakk>f : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c;\n        g : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c;\n        f \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T =\n        g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T\\<rbrakk>\n       \\<Longrightarrow> f = g", "moreover"], ["proof (state)\nthis:\n  f : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> a\n\ngoal (1 subgoal):\n 1. \\<And>f g c.\n       \\<lbrakk>f : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c;\n        g : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c;\n        f \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T =\n        g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T\\<rbrakk>\n       \\<Longrightarrow> f = g", "from prems(2) subsemicategory_axioms"], ["proof (chain)\npicking this:\n  g : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> a\n  smc_Set \\<alpha>\n  \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_Par\n                         \\<alpha>", "have \"g : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> a\""], ["proof (prove)\nusing this:\n  g : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> a\n  smc_Set \\<alpha>\n  \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_Par\n                         \\<alpha>\n\ngoal (1 subgoal):\n 1. g : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> a", "by (cs_concl cs_intro: smc_sub_fw_cs_intros)"], ["proof (state)\nthis:\n  g : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> a\n\ngoal (1 subgoal):\n 1. \\<And>f g c.\n       \\<lbrakk>f : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c;\n        g : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c;\n        f \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T =\n        g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T\\<rbrakk>\n       \\<Longrightarrow> f = g", "moreover"], ["proof (state)\nthis:\n  g : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> a\n\ngoal (1 subgoal):\n 1. \\<And>f g c.\n       \\<lbrakk>f : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c;\n        g : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c;\n        f \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T =\n        g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T\\<rbrakk>\n       \\<Longrightarrow> f = g", "from prems T subsemicategory_axioms"], ["proof (chain)\npicking this:\n  f : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> a\n  g : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> a\n  f \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T =\n  g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T\n  T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n  smc_Set \\<alpha>\n  \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_Par\n                         \\<alpha>", "have \n      \"f \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T = g \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T\""], ["proof (prove)\nusing this:\n  f : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> a\n  g : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> a\n  f \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T =\n  g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T\n  T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n  smc_Set \\<alpha>\n  \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_Par\n                         \\<alpha>\n\ngoal (1 subgoal):\n 1. f \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T =\n    g \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T", "by (auto simp: smc_sub_bw_cs_simps)"], ["proof (state)\nthis:\n  f \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T =\n  g \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T\n\ngoal (1 subgoal):\n 1. \\<And>f g c.\n       \\<lbrakk>f : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c;\n        g : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> c;\n        f \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T =\n        g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T\\<rbrakk>\n       \\<Longrightarrow> f = g", "ultimately"], ["proof (chain)\npicking this:\n  f : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> a\n  g : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> a\n  f \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T =\n  g \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T", "show \"f = g\""], ["proof (prove)\nusing this:\n  f : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> a\n  g : B \\<mapsto>\\<^bsub>smc_Par \\<alpha>\\<^esub> a\n  f \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T =\n  g \\<circ>\\<^sub>A\\<^bsub>smc_Par \\<alpha>\\<^esub> T\n\ngoal (1 subgoal):\n 1. f = g", "by (rule dg.is_epic_arrD(2)[OF epi_T])"], ["proof (state)\nthis:\n  f = g\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  T : A \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in \\<Z>) smc_Set_is_epic_arrD:\n  assumes \"T : A \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>smc_Set \\<alpha>\\<^esub> B\"\n  shows \"T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\" and \"\\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B &&&\n    \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "proof-"], ["proof (state)\ngoal (2 subgoals):\n 1. T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n 2. \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "interpret semicategory \\<alpha> \\<open>smc_Set \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (smc_Set \\<alpha>)", "by (rule semicategory_smc_Set)"], ["proof (state)\ngoal (2 subgoals):\n 1. T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n 2. \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "from assms"], ["proof (chain)\npicking this:\n  T : A \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>smc_Set \\<alpha>\\<^esub> B", "show T: \"T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\""], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B", "by auto"], ["proof (state)\nthis:\n  T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "interpret T: arr_Set \\<alpha> T\n    rewrites \"T\\<lparr>ArrDom\\<rparr> = A\" and \"T\\<lparr>ArrCod\\<rparr> = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> T &&&\n    T\\<lparr>ArrDom\\<rparr> = A &&& T\\<lparr>ArrCod\\<rparr> = B", "using T"], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> T &&&\n    T\\<lparr>ArrDom\\<rparr> = A &&& T\\<lparr>ArrCod\\<rparr> = B", "by (auto elim!: smc_Set_is_arrE)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "show \"\\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "proof(intro vsubset_antisym vsubsetI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> B\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> B \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)", "fix b"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> B\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> B \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)", "assume [intro]: \"b \\<in>\\<^sub>\\<circ> B\""], ["proof (state)\nthis:\n  b \\<in>\\<^sub>\\<circ> B\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> B\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> B \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)", "show \"b \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)", "proof(rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. b \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n    False", "assume b: \"b \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\""], ["proof (state)\nthis:\n  b \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n\ngoal (1 subgoal):\n 1. b \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n    False", "define R \n        where \"R = [vinsert \\<langle>b, 0\\<rangle> ((B -\\<^sub>\\<circ> set {b}) \\<times>\\<^sub>\\<circ> set {1}), B, set {0, 1}]\\<^sub>\\<circ>\""], ["proof (state)\nthis:\n  R =\n  [vinsert \\<langle>b, []\\<^sub>\\<circ>\\<rangle>\n    ((B -\\<^sub>\\<circ> ZFC_in_HOL.set {b}) \\<times>\\<^sub>\\<circ>\n     ZFC_in_HOL.set {1}),\n   B, ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}]\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. b \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n    False", "define S where \"S = [B \\<times>\\<^sub>\\<circ> set {1}, B, set {0, 1}]\\<^sub>\\<circ>\""], ["proof (state)\nthis:\n  S =\n  [B \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {1}, B,\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}]\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. b \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n    False", "have R: \"R : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> set {0, 1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ZFC_in_HOL.set\n               {[]\\<^sub>\\<circ>, 1}", "unfolding R_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. [vinsert \\<langle>b, []\\<^sub>\\<circ>\\<rangle>\n      ((B -\\<^sub>\\<circ> ZFC_in_HOL.set {b}) \\<times>\\<^sub>\\<circ>\n       ZFC_in_HOL.set {1}),\n     B, ZFC_in_HOL.set\n         {[]\\<^sub>\\<circ>,\n          1}]\\<^sub>\\<circ> : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ZFC_in_HOL.set\n                                     {[]\\<^sub>\\<circ>, 1}", "proof(intro smc_Set_is_arrI arr_Set_vfsequenceI, unfold arr_Rel_components)"], ["proof (state)\ngoal (7 subgoals):\n 1. vsv (vinsert \\<langle>b, []\\<^sub>\\<circ>\\<rangle>\n          ((B -\\<^sub>\\<circ> ZFC_in_HOL.set {b}) \\<times>\\<^sub>\\<circ>\n           ZFC_in_HOL.set {1}))\n 2. \\<D>\\<^sub>\\<circ>\n     (vinsert \\<langle>b, []\\<^sub>\\<circ>\\<rangle>\n       ((B -\\<^sub>\\<circ> ZFC_in_HOL.set {b}) \\<times>\\<^sub>\\<circ>\n        ZFC_in_HOL.set {1})) =\n    B\n 3. \\<R>\\<^sub>\\<circ>\n     (vinsert \\<langle>b, []\\<^sub>\\<circ>\\<rangle>\n       ((B -\\<^sub>\\<circ> ZFC_in_HOL.set {b}) \\<times>\\<^sub>\\<circ>\n        ZFC_in_HOL.set {1}))\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}\n 4. B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 5. ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 6. B = B\n 7. ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1} =\n    ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}", "from Axiom_of_Infinity vone_in_omega"], ["proof (chain)\npicking this:\n  \\<omega> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  1 \\<in>\\<^sub>\\<circ> \\<omega>", "show \"set {0, 1} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  \\<omega> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  1 \\<in>\\<^sub>\\<circ> \\<omega>\n\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1} \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by blast"], ["proof (state)\nthis:\n  ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (6 subgoals):\n 1. vsv (vinsert \\<langle>b, []\\<^sub>\\<circ>\\<rangle>\n          ((B -\\<^sub>\\<circ> ZFC_in_HOL.set {b}) \\<times>\\<^sub>\\<circ>\n           ZFC_in_HOL.set {1}))\n 2. \\<D>\\<^sub>\\<circ>\n     (vinsert \\<langle>b, []\\<^sub>\\<circ>\\<rangle>\n       ((B -\\<^sub>\\<circ> ZFC_in_HOL.set {b}) \\<times>\\<^sub>\\<circ>\n        ZFC_in_HOL.set {1})) =\n    B\n 3. \\<R>\\<^sub>\\<circ>\n     (vinsert \\<langle>b, []\\<^sub>\\<circ>\\<rangle>\n       ((B -\\<^sub>\\<circ> ZFC_in_HOL.set {b}) \\<times>\\<^sub>\\<circ>\n        ZFC_in_HOL.set {1}))\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}\n 4. B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 5. B = B\n 6. ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1} =\n    ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}", "qed (auto simp: T.arr_Rel_ArrCod_in_Vset)"], ["proof (state)\nthis:\n  R : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ZFC_in_HOL.set\n             {[]\\<^sub>\\<circ>, 1}\n\ngoal (1 subgoal):\n 1. b \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n    False", "have S: \"S : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> set {0, 1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ZFC_in_HOL.set\n               {[]\\<^sub>\\<circ>, 1}", "unfolding S_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. [B \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {1}, B,\n     ZFC_in_HOL.set\n      {[]\\<^sub>\\<circ>,\n       1}]\\<^sub>\\<circ> : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ZFC_in_HOL.set\n                                  {[]\\<^sub>\\<circ>, 1}", "proof(intro smc_Set_is_arrI arr_Set_vfsequenceI, unfold arr_Rel_components)"], ["proof (state)\ngoal (7 subgoals):\n 1. vsv (B \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {1})\n 2. \\<D>\\<^sub>\\<circ> (B \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {1}) = B\n 3. \\<R>\\<^sub>\\<circ> (B \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {1})\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}\n 4. B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 5. ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 6. B = B\n 7. ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1} =\n    ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}", "from Axiom_of_Infinity vone_in_omega"], ["proof (chain)\npicking this:\n  \\<omega> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  1 \\<in>\\<^sub>\\<circ> \\<omega>", "show \"set {0, 1} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  \\<omega> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  1 \\<in>\\<^sub>\\<circ> \\<omega>\n\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1} \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by blast"], ["proof (state)\nthis:\n  ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (6 subgoals):\n 1. vsv (B \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {1})\n 2. \\<D>\\<^sub>\\<circ> (B \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {1}) = B\n 3. \\<R>\\<^sub>\\<circ> (B \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {1})\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}\n 4. B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 5. B = B\n 6. ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1} =\n    ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}", "qed (auto simp: T.arr_Rel_ArrCod_in_Vset)"], ["proof (state)\nthis:\n  S : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ZFC_in_HOL.set\n             {[]\\<^sub>\\<circ>, 1}\n\ngoal (1 subgoal):\n 1. b \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n    False", "from b"], ["proof (chain)\npicking this:\n  b \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)", "have \"R\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> = S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\""], ["proof (prove)\nusing this:\n  b \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n\ngoal (1 subgoal):\n 1. R\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> =\n    S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>", "unfolding S_def R_def arr_Rel_components"], ["proof (prove)\nusing this:\n  b \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n\ngoal (1 subgoal):\n 1. vinsert \\<langle>b, []\\<^sub>\\<circ>\\<rangle>\n     ((B -\\<^sub>\\<circ> ZFC_in_HOL.set {b}) \\<times>\\<^sub>\\<circ>\n      ZFC_in_HOL.set {1}) \\<circ>\\<^sub>\\<circ>\n    T\\<lparr>ArrVal\\<rparr> =\n    B \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {1} \\<circ>\\<^sub>\\<circ>\n    T\\<lparr>ArrVal\\<rparr>", "by (auto intro!: vsubset_antisym vsubsetI)"], ["proof (state)\nthis:\n  R\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> =\n  S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. b \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  R\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> =\n  S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>", "have \"R \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T = S \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T\""], ["proof (prove)\nusing this:\n  R\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> =\n  S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. R \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T =\n    S \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T", "unfolding smc_Set_Comp_app[OF R T] smc_Set_Comp_app[OF S T]"], ["proof (prove)\nusing this:\n  R\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> =\n  S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. R \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l T =\n    S \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l T", "by (simp add: R_def S_def arr_Rel_components comp_Rel_def)"], ["proof (state)\nthis:\n  R \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T =\n  S \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T\n\ngoal (1 subgoal):\n 1. b \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n    False", "from R S this"], ["proof (chain)\npicking this:\n  R : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ZFC_in_HOL.set\n             {[]\\<^sub>\\<circ>, 1}\n  S : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ZFC_in_HOL.set\n             {[]\\<^sub>\\<circ>, 1}\n  R \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T =\n  S \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T", "have \"R = S\""], ["proof (prove)\nusing this:\n  R : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ZFC_in_HOL.set\n             {[]\\<^sub>\\<circ>, 1}\n  S : B \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ZFC_in_HOL.set\n             {[]\\<^sub>\\<circ>, 1}\n  R \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T =\n  S \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> T\n\ngoal (1 subgoal):\n 1. R = S", "by (rule is_epic_arrD(2)[OF assms])"], ["proof (state)\nthis:\n  R = S\n\ngoal (1 subgoal):\n 1. b \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n    False", "with zero_neq_one"], ["proof (chain)\npicking this:\n  (0::?'a) \\<noteq> (1::?'a)\n  R = S", "show False"], ["proof (prove)\nusing this:\n  (0::?'a) \\<noteq> (1::?'a)\n  R = S\n\ngoal (1 subgoal):\n 1. False", "unfolding R_def S_def"], ["proof (prove)\nusing this:\n  (0::?'a) \\<noteq> (1::?'a)\n  [vinsert \\<langle>b, []\\<^sub>\\<circ>\\<rangle>\n    ((B -\\<^sub>\\<circ> ZFC_in_HOL.set {b}) \\<times>\\<^sub>\\<circ>\n     ZFC_in_HOL.set {1}),\n   B, ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}]\\<^sub>\\<circ> =\n  [B \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {1}, B,\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}]\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  b \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> B", "qed (use T.arr_Set_ArrVal_vrange in auto)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in \\<Z>) smc_Set_is_epic_arr: \n  \"T : A \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>smc_Set \\<alpha>\\<^esub> B \\<longleftrightarrow> T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B \\<and> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>smc_Set \\<alpha>\\<^esub> B =\n    (T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B \\<and>\n     \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B)", "by (rule iffI) (simp_all add: smc_Set_is_epic_arrD smc_Set_is_epic_arrI)"], ["", "subsection\\<open>Terminal object, initial object and null object\\<close>"], ["", "text\\<open>An object in \\<open>Set\\<close> is terminal if and only if it is a singleton \nset (see Chapter I-5 in \\cite{mac_lane_categories_2010}).\\<close>"], ["", "lemma (in \\<Z>) smc_Set_obj_terminal: \n  \"obj_terminal (smc_Set \\<alpha>) A \\<longleftrightarrow> (\\<exists>B\\<in>\\<^sub>\\<circ>Vset \\<alpha>. A = set {B})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. obj_terminal (smc_Set \\<alpha>) A =\n    (\\<exists>B\\<in>elts (Vset \\<alpha>). A = ZFC_in_HOL.set {B})", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. obj_terminal (smc_Set \\<alpha>) A =\n    (\\<exists>B\\<in>elts (Vset \\<alpha>). A = ZFC_in_HOL.set {B})", "interpret semicategory \\<alpha> \\<open>smc_Set \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (smc_Set \\<alpha>)", "by (rule semicategory_smc_Set)"], ["proof (state)\ngoal (1 subgoal):\n 1. obj_terminal (smc_Set \\<alpha>) A =\n    (\\<exists>B\\<in>elts (Vset \\<alpha>). A = ZFC_in_HOL.set {B})", "have \"(\\<forall>A\\<in>\\<^sub>\\<circ>Vset \\<alpha>. \\<exists>!T. T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B) \\<longleftrightarrow> (\\<exists>C\\<in>\\<^sub>\\<circ>Vset \\<alpha>. B = set {C})\" \n    for B"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>A\\<in>elts (Vset \\<alpha>).\n        \\<exists>!T. T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B) =\n    (\\<exists>C\\<in>elts (Vset \\<alpha>). B = ZFC_in_HOL.set {C})", "proof(intro iffI ballI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>A\\<in>elts (Vset \\<alpha>).\n       \\<exists>!T.\n          T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B \\<Longrightarrow>\n    \\<exists>C\\<in>elts (Vset \\<alpha>). B = ZFC_in_HOL.set {C}\n 2. \\<And>A.\n       \\<lbrakk>\\<exists>C\\<in>elts (Vset \\<alpha>). B = ZFC_in_HOL.set {C};\n        A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!T.\n                            T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B", "assume prems[rule_format]: \"\\<forall>A\\<in>\\<^sub>\\<circ>Vset \\<alpha>. \\<exists>!T. T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\""], ["proof (state)\nthis:\n  ?A \\<in>\\<^sub>\\<circ> Vset \\<alpha> \\<Longrightarrow>\n  Ex1 (is_arr (smc_Set \\<alpha>) ?A B)\n\ngoal (2 subgoals):\n 1. \\<forall>A\\<in>elts (Vset \\<alpha>).\n       \\<exists>!T.\n          T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B \\<Longrightarrow>\n    \\<exists>C\\<in>elts (Vset \\<alpha>). B = ZFC_in_HOL.set {C}\n 2. \\<And>A.\n       \\<lbrakk>\\<exists>C\\<in>elts (Vset \\<alpha>). B = ZFC_in_HOL.set {C};\n        A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!T.\n                            T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B", "then"], ["proof (chain)\npicking this:\n  ?A \\<in>\\<^sub>\\<circ> Vset \\<alpha> \\<Longrightarrow>\n  Ex1 (is_arr (smc_Set \\<alpha>) ?A B)", "obtain T where T0B: \"T : 0 \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\""], ["proof (prove)\nusing this:\n  ?A \\<in>\\<^sub>\\<circ> Vset \\<alpha> \\<Longrightarrow>\n  Ex1 (is_arr (smc_Set \\<alpha>) ?A B)\n\ngoal (1 subgoal):\n 1. (\\<And>T.\n        T : []\\<^sub>\\<circ> \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (meson vempty_is_zet)"], ["proof (state)\nthis:\n  T : []\\<^sub>\\<circ> \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n\ngoal (2 subgoals):\n 1. \\<forall>A\\<in>elts (Vset \\<alpha>).\n       \\<exists>!T.\n          T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B \\<Longrightarrow>\n    \\<exists>C\\<in>elts (Vset \\<alpha>). B = ZFC_in_HOL.set {C}\n 2. \\<And>A.\n       \\<lbrakk>\\<exists>C\\<in>elts (Vset \\<alpha>). B = ZFC_in_HOL.set {C};\n        A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!T.\n                            T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B", "then"], ["proof (chain)\npicking this:\n  T : []\\<^sub>\\<circ> \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B", "have B[simp]: \"B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  T : []\\<^sub>\\<circ> \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. B \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (fastforce simp: smc_Set_components(1))"], ["proof (state)\nthis:\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (2 subgoals):\n 1. \\<forall>A\\<in>elts (Vset \\<alpha>).\n       \\<exists>!T.\n          T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B \\<Longrightarrow>\n    \\<exists>C\\<in>elts (Vset \\<alpha>). B = ZFC_in_HOL.set {C}\n 2. \\<And>A.\n       \\<lbrakk>\\<exists>C\\<in>elts (Vset \\<alpha>). B = ZFC_in_HOL.set {C};\n        A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!T.\n                            T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B", "show \"\\<exists>C\\<in>\\<^sub>\\<circ>Vset \\<alpha>. B = set {C}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>C\\<in>elts (Vset \\<alpha>). B = ZFC_in_HOL.set {C}", "proof(rule ccontr, cases \\<open>B = 0\\<close>)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<not> (\\<exists>C\\<in>elts (Vset \\<alpha>).\n                        B = ZFC_in_HOL.set {C});\n     B = []\\<^sub>\\<circ>\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>\\<not> (\\<exists>C\\<in>elts (Vset \\<alpha>).\n                        B = ZFC_in_HOL.set {C});\n     B \\<noteq> []\\<^sub>\\<circ>\\<rbrakk>\n    \\<Longrightarrow> False", "case True"], ["proof (state)\nthis:\n  B = []\\<^sub>\\<circ>\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<not> (\\<exists>C\\<in>elts (Vset \\<alpha>).\n                        B = ZFC_in_HOL.set {C});\n     B = []\\<^sub>\\<circ>\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>\\<not> (\\<exists>C\\<in>elts (Vset \\<alpha>).\n                        B = ZFC_in_HOL.set {C});\n     B \\<noteq> []\\<^sub>\\<circ>\\<rbrakk>\n    \\<Longrightarrow> False", "from prems"], ["proof (chain)\npicking this:\n  ?A \\<in>\\<^sub>\\<circ> Vset \\<alpha> \\<Longrightarrow>\n  Ex1 (is_arr (smc_Set \\<alpha>) ?A B)", "have \"\\<exists>!T. T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> 0\" if \"A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" for A"], ["proof (prove)\nusing this:\n  ?A \\<in>\\<^sub>\\<circ> Vset \\<alpha> \\<Longrightarrow>\n  Ex1 (is_arr (smc_Set \\<alpha>) ?A B)\n\ngoal (1 subgoal):\n 1. \\<exists>!T.\n       T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> []\\<^sub>\\<circ>", "using that"], ["proof (prove)\nusing this:\n  ?A \\<in>\\<^sub>\\<circ> Vset \\<alpha> \\<Longrightarrow>\n  Ex1 (is_arr (smc_Set \\<alpha>) ?A B)\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<exists>!T.\n       T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> []\\<^sub>\\<circ>", "unfolding True"], ["proof (prove)\nusing this:\n  ?A \\<in>\\<^sub>\\<circ> Vset \\<alpha> \\<Longrightarrow>\n  Ex1 (is_arr (smc_Set \\<alpha>) ?A []\\<^sub>\\<circ>)\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<exists>!T.\n       T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> []\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  ?A \\<in>\\<^sub>\\<circ> Vset \\<alpha> \\<Longrightarrow>\n  \\<exists>!T.\n     T : ?A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> []\\<^sub>\\<circ>\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<not> (\\<exists>C\\<in>elts (Vset \\<alpha>).\n                        B = ZFC_in_HOL.set {C});\n     B = []\\<^sub>\\<circ>\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>\\<not> (\\<exists>C\\<in>elts (Vset \\<alpha>).\n                        B = ZFC_in_HOL.set {C});\n     B \\<noteq> []\\<^sub>\\<circ>\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  ?A \\<in>\\<^sub>\\<circ> Vset \\<alpha> \\<Longrightarrow>\n  \\<exists>!T.\n     T : ?A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> []\\<^sub>\\<circ>", "obtain T where T: \"T : set {0} \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> 0\""], ["proof (prove)\nusing this:\n  ?A \\<in>\\<^sub>\\<circ> Vset \\<alpha> \\<Longrightarrow>\n  \\<exists>!T.\n     T : ?A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. (\\<And>T.\n        T : ZFC_in_HOL.set\n             {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> []\\<^sub>\\<circ> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis Axiom_of_Pairing insert_absorb2 vempty_is_zet)"], ["proof (state)\nthis:\n  T : ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> []\\<^sub>\\<circ>\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<not> (\\<exists>C\\<in>elts (Vset \\<alpha>).\n                        B = ZFC_in_HOL.set {C});\n     B = []\\<^sub>\\<circ>\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>\\<not> (\\<exists>C\\<in>elts (Vset \\<alpha>).\n                        B = ZFC_in_HOL.set {C});\n     B \\<noteq> []\\<^sub>\\<circ>\\<rbrakk>\n    \\<Longrightarrow> False", "interpret T: arr_Set \\<alpha> T\n        rewrites \"T\\<lparr>ArrDom\\<rparr> = set {0}\" and \"T\\<lparr>ArrCod\\<rparr> = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> T &&&\n    T\\<lparr>ArrDom\\<rparr> = ZFC_in_HOL.set {[]\\<^sub>\\<circ>} &&&\n    T\\<lparr>ArrCod\\<rparr> = []\\<^sub>\\<circ>", "using T"], ["proof (prove)\nusing this:\n  T : ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> T &&&\n    T\\<lparr>ArrDom\\<rparr> = ZFC_in_HOL.set {[]\\<^sub>\\<circ>} &&&\n    T\\<lparr>ArrCod\\<rparr> = []\\<^sub>\\<circ>", "by (auto elim!: smc_Set_is_arrE)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<not> (\\<exists>C\\<in>elts (Vset \\<alpha>).\n                        B = ZFC_in_HOL.set {C});\n     B = []\\<^sub>\\<circ>\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>\\<not> (\\<exists>C\\<in>elts (Vset \\<alpha>).\n                        B = ZFC_in_HOL.set {C});\n     B \\<noteq> []\\<^sub>\\<circ>\\<rbrakk>\n    \\<Longrightarrow> False", "from \n        T.vdomain_vrange_is_vempty\n        T.ArrVal.vdomain_vrange_is_vempty \n        T.arr_Set_ArrVal_vrange"], ["proof (chain)\npicking this:\n  (\\<D>\\<^sub>\\<circ> T = []\\<^sub>\\<circ>) =\n  (\\<R>\\<^sub>\\<circ> T = []\\<^sub>\\<circ>)\n  (\\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = []\\<^sub>\\<circ>) =\n  (\\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = []\\<^sub>\\<circ>)\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> []\\<^sub>\\<circ>", "show False"], ["proof (prove)\nusing this:\n  (\\<D>\\<^sub>\\<circ> T = []\\<^sub>\\<circ>) =\n  (\\<R>\\<^sub>\\<circ> T = []\\<^sub>\\<circ>)\n  (\\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = []\\<^sub>\\<circ>) =\n  (\\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = []\\<^sub>\\<circ>)\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. False", "by (auto simp: smc_Set_cs_simps)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (\\<exists>C\\<in>elts (Vset \\<alpha>).\n                        B = ZFC_in_HOL.set {C});\n     B \\<noteq> []\\<^sub>\\<circ>\\<rbrakk>\n    \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (\\<exists>C\\<in>elts (Vset \\<alpha>).\n                        B = ZFC_in_HOL.set {C});\n     B \\<noteq> []\\<^sub>\\<circ>\\<rbrakk>\n    \\<Longrightarrow> False", "case False"], ["proof (state)\nthis:\n  B \\<noteq> []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (\\<exists>C\\<in>elts (Vset \\<alpha>).\n                        B = ZFC_in_HOL.set {C});\n     B \\<noteq> []\\<^sub>\\<circ>\\<rbrakk>\n    \\<Longrightarrow> False", "assume \"\\<not>(\\<exists>C\\<in>\\<^sub>\\<circ>Vset \\<alpha>. B = set {C})\""], ["proof (state)\nthis:\n  \\<not> (\\<exists>C\\<in>elts (Vset \\<alpha>). B = ZFC_in_HOL.set {C})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (\\<exists>C\\<in>elts (Vset \\<alpha>).\n                        B = ZFC_in_HOL.set {C});\n     B \\<noteq> []\\<^sub>\\<circ>\\<rbrakk>\n    \\<Longrightarrow> False", "with B"], ["proof (chain)\npicking this:\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<not> (\\<exists>C\\<in>elts (Vset \\<alpha>). B = ZFC_in_HOL.set {C})", "have \"\\<nexists>C. B = set {C}\""], ["proof (prove)\nusing this:\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<not> (\\<exists>C\\<in>elts (Vset \\<alpha>). B = ZFC_in_HOL.set {C})\n\ngoal (1 subgoal):\n 1. \\<nexists>C. B = ZFC_in_HOL.set {C}", "by blast"], ["proof (state)\nthis:\n  \\<nexists>C. B = ZFC_in_HOL.set {C}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (\\<exists>C\\<in>elts (Vset \\<alpha>).\n                        B = ZFC_in_HOL.set {C});\n     B \\<noteq> []\\<^sub>\\<circ>\\<rbrakk>\n    \\<Longrightarrow> False", "with False"], ["proof (chain)\npicking this:\n  B \\<noteq> []\\<^sub>\\<circ>\n  \\<nexists>C. B = ZFC_in_HOL.set {C}", "obtain a b where ab: \"a \\<noteq> b\" \"a \\<in>\\<^sub>\\<circ> B\" \"b \\<in>\\<^sub>\\<circ> B\""], ["proof (prove)\nusing this:\n  B \\<noteq> []\\<^sub>\\<circ>\n  \\<nexists>C. B = ZFC_in_HOL.set {C}\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>a \\<noteq> b; a \\<in>\\<^sub>\\<circ> B;\n         b \\<in>\\<^sub>\\<circ> B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis V_equalityI vemptyE vintersection_vsingleton vsingletonD)"], ["proof (state)\nthis:\n  a \\<noteq> b\n  a \\<in>\\<^sub>\\<circ> B\n  b \\<in>\\<^sub>\\<circ> B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (\\<exists>C\\<in>elts (Vset \\<alpha>).\n                        B = ZFC_in_HOL.set {C});\n     B \\<noteq> []\\<^sub>\\<circ>\\<rbrakk>\n    \\<Longrightarrow> False", "have \"[set {\\<langle>0, a\\<rangle>}, set {0}, B]\\<^sub>\\<circ> : set {0} \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n     ZFC_in_HOL.set {[]\\<^sub>\\<circ>},\n     B]\\<^sub>\\<circ> : ZFC_in_HOL.set\n                         {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B", "by (intro smc_Set_is_arrI arr_SetI, unfold arr_Rel_components)\n          (auto simp: ab(2) nat_omega_simps)"], ["proof (state)\nthis:\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>},\n   B]\\<^sub>\\<circ> : ZFC_in_HOL.set\n                       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (\\<exists>C\\<in>elts (Vset \\<alpha>).\n                        B = ZFC_in_HOL.set {C});\n     B \\<noteq> []\\<^sub>\\<circ>\\<rbrakk>\n    \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>},\n   B]\\<^sub>\\<circ> : ZFC_in_HOL.set\n                       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (\\<exists>C\\<in>elts (Vset \\<alpha>).\n                        B = ZFC_in_HOL.set {C});\n     B \\<noteq> []\\<^sub>\\<circ>\\<rbrakk>\n    \\<Longrightarrow> False", "from ab"], ["proof (chain)\npicking this:\n  a \\<noteq> b\n  a \\<in>\\<^sub>\\<circ> B\n  b \\<in>\\<^sub>\\<circ> B", "have \n        \"[set {\\<langle>0, b\\<rangle>}, set {0}, B]\\<^sub>\\<circ> : set {0} \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  a \\<in>\\<^sub>\\<circ> B\n  b \\<in>\\<^sub>\\<circ> B\n\ngoal (1 subgoal):\n 1. [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>},\n     ZFC_in_HOL.set {[]\\<^sub>\\<circ>},\n     B]\\<^sub>\\<circ> : ZFC_in_HOL.set\n                         {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B", "by (intro smc_Set_is_arrI arr_SetI, unfold arr_Rel_components)\n          (auto simp: ab(2) nat_omega_simps)"], ["proof (state)\nthis:\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>},\n   B]\\<^sub>\\<circ> : ZFC_in_HOL.set\n                       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (\\<exists>C\\<in>elts (Vset \\<alpha>).\n                        B = ZFC_in_HOL.set {C});\n     B \\<noteq> []\\<^sub>\\<circ>\\<rbrakk>\n    \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>},\n   B]\\<^sub>\\<circ> : ZFC_in_HOL.set\n                       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (\\<exists>C\\<in>elts (Vset \\<alpha>).\n                        B = ZFC_in_HOL.set {C});\n     B \\<noteq> []\\<^sub>\\<circ>\\<rbrakk>\n    \\<Longrightarrow> False", "with ab"], ["proof (chain)\npicking this:\n  a \\<noteq> b\n  a \\<in>\\<^sub>\\<circ> B\n  b \\<in>\\<^sub>\\<circ> B\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>},\n   B]\\<^sub>\\<circ> : ZFC_in_HOL.set\n                       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B", "have \n        \"[set {\\<langle>0, a\\<rangle>}, set {0}, B]\\<^sub>\\<circ> \\<noteq> [set {\\<langle>0, b\\<rangle>}, set {0}, B]\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  a \\<in>\\<^sub>\\<circ> B\n  b \\<in>\\<^sub>\\<circ> B\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>},\n   B]\\<^sub>\\<circ> : ZFC_in_HOL.set\n                       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n     ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ> \\<noteq>\n    [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>},\n     ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ> \\<noteq>\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (\\<exists>C\\<in>elts (Vset \\<alpha>).\n                        B = ZFC_in_HOL.set {C});\n     B \\<noteq> []\\<^sub>\\<circ>\\<rbrakk>\n    \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>},\n   B]\\<^sub>\\<circ> : ZFC_in_HOL.set\n                       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>},\n   B]\\<^sub>\\<circ> : ZFC_in_HOL.set\n                       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ> \\<noteq>\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>", "show False"], ["proof (prove)\nusing this:\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>},\n   B]\\<^sub>\\<circ> : ZFC_in_HOL.set\n                       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>},\n   B]\\<^sub>\\<circ> : ZFC_in_HOL.set\n                       {[]\\<^sub>\\<circ>} \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, a\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ> \\<noteq>\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>},\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, B]\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. False", "by (metis prems smc_is_arrE smc_Set_components(1))"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>C\\<in>elts (Vset \\<alpha>). B = ZFC_in_HOL.set {C}\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>\\<exists>C\\<in>elts (Vset \\<alpha>). B = ZFC_in_HOL.set {C};\n        A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!T.\n                            T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>\\<exists>C\\<in>elts (Vset \\<alpha>). B = ZFC_in_HOL.set {C};\n        A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!T.\n                            T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B", "fix A"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>\\<exists>C\\<in>elts (Vset \\<alpha>). B = ZFC_in_HOL.set {C};\n        A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!T.\n                            T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B", "assume prems: \"\\<exists>b\\<in>\\<^sub>\\<circ>Vset \\<alpha>. B = set {b}\" \"A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (state)\nthis:\n  \\<exists>b\\<in>elts (Vset \\<alpha>). B = ZFC_in_HOL.set {b}\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>\\<exists>C\\<in>elts (Vset \\<alpha>). B = ZFC_in_HOL.set {C};\n        A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!T.\n                            T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B", "then"], ["proof (chain)\npicking this:\n  \\<exists>b\\<in>elts (Vset \\<alpha>). B = ZFC_in_HOL.set {b}\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "obtain b where B_def: \"B = set {b}\" and b: \"b \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  \\<exists>b\\<in>elts (Vset \\<alpha>). B = ZFC_in_HOL.set {b}\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>B = ZFC_in_HOL.set {b};\n         b \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  B = ZFC_in_HOL.set {b}\n  b \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>\\<exists>C\\<in>elts (Vset \\<alpha>). B = ZFC_in_HOL.set {C};\n        A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!T.\n                            T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B", "have \"vconst_on A b = A \\<times>\\<^sub>\\<circ> set {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vconst_on A b = A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}", "by (simp add: vconst_on_eq_vtimes)"], ["proof (state)\nthis:\n  vconst_on A b = A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>\\<exists>C\\<in>elts (Vset \\<alpha>). B = ZFC_in_HOL.set {C};\n        A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!T.\n                            T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B", "show \"\\<exists>!T. T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!T. T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B", "unfolding B_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!T.\n       T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ZFC_in_HOL.set {b}", "proof(rule ex1I[of _ \\<open>[A \\<times>\\<^sub>\\<circ> set {b}, A, set {b}]\\<^sub>\\<circ>\\<close>])"], ["proof (state)\ngoal (2 subgoals):\n 1. [A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}, A,\n     ZFC_in_HOL.set\n      {b}]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ZFC_in_HOL.set\n                                  {b}\n 2. \\<And>T.\n       T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ZFC_in_HOL.set\n                  {b} \\<Longrightarrow>\n       T =\n       [A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}, A,\n        ZFC_in_HOL.set {b}]\\<^sub>\\<circ>", "show \"[A \\<times>\\<^sub>\\<circ> set {b}, A, set {b}]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> set {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}, A,\n     ZFC_in_HOL.set\n      {b}]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ZFC_in_HOL.set\n                                  {b}", "using b"], ["proof (prove)\nusing this:\n  b \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. [A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}, A,\n     ZFC_in_HOL.set\n      {b}]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ZFC_in_HOL.set\n                                  {b}", "by \n          ( \n            intro smc_Set_is_arrI arr_Set_vfsequenceI, \n            unfold arr_Rel_components\n          )\n          (auto simp: prems(2) vconst_on_eq_vtimes[symmetric])"], ["proof (state)\nthis:\n  [A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}, A,\n   ZFC_in_HOL.set\n    {b}]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ZFC_in_HOL.set\n                                {b}\n\ngoal (1 subgoal):\n 1. \\<And>T.\n       T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ZFC_in_HOL.set\n                  {b} \\<Longrightarrow>\n       T =\n       [A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}, A,\n        ZFC_in_HOL.set {b}]\\<^sub>\\<circ>", "fix T"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>T.\n       T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ZFC_in_HOL.set\n                  {b} \\<Longrightarrow>\n       T =\n       [A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}, A,\n        ZFC_in_HOL.set {b}]\\<^sub>\\<circ>", "assume prems: \"T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> set {b}\""], ["proof (state)\nthis:\n  T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ZFC_in_HOL.set {b}\n\ngoal (1 subgoal):\n 1. \\<And>T.\n       T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ZFC_in_HOL.set\n                  {b} \\<Longrightarrow>\n       T =\n       [A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}, A,\n        ZFC_in_HOL.set {b}]\\<^sub>\\<circ>", "interpret T: arr_Set \\<alpha> T\n        rewrites [simp]: \"T\\<lparr>ArrDom\\<rparr> = A\" and [simp]: \"T\\<lparr>ArrCod\\<rparr> = set {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> T &&&\n    T\\<lparr>ArrDom\\<rparr> = A &&&\n    T\\<lparr>ArrCod\\<rparr> = ZFC_in_HOL.set {b}", "using prems"], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ZFC_in_HOL.set {b}\n\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> T &&&\n    T\\<lparr>ArrDom\\<rparr> = A &&&\n    T\\<lparr>ArrCod\\<rparr> = ZFC_in_HOL.set {b}", "by (auto elim!: smc_Set_is_arrE)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>T.\n       T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ZFC_in_HOL.set\n                  {b} \\<Longrightarrow>\n       T =\n       [A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}, A,\n        ZFC_in_HOL.set {b}]\\<^sub>\\<circ>", "have [simp]: \"T\\<lparr>ArrVal\\<rparr> = A \\<times>\\<^sub>\\<circ> set {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T\\<lparr>ArrVal\\<rparr> = A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}", "proof(intro vsubset_antisym vsubsetI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ>\n                             ZFC_in_HOL.set {b} \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ>\n                             ZFC_in_HOL.set {b} \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>", "assume prems: \"x \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\""], ["proof (state)\nthis:\n  x \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ>\n                             ZFC_in_HOL.set {b} \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>", "with T.vbrelation_axioms app_vdomainI"], ["proof (chain)\npicking this:\n  vbrelation T\n  \\<langle>?a, ?b\\<rangle> \\<in>\\<^sub>\\<circ> ?r \\<Longrightarrow>\n  ?a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> ?r\n  x \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>", "obtain a b' \n          where \"x = \\<langle>a, b'\\<rangle>\" and \"a \\<in>\\<^sub>\\<circ> A\""], ["proof (prove)\nusing this:\n  vbrelation T\n  \\<langle>?a, ?b\\<rangle> \\<in>\\<^sub>\\<circ> ?r \\<Longrightarrow>\n  ?a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> ?r\n  x \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>a b'.\n        \\<lbrakk>x = \\<langle>a, b'\\<rangle>;\n         a \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis T.ArrVal.vbrelation_vinE T.arr_Set_ArrVal_vdomain)"], ["proof (state)\nthis:\n  x = \\<langle>a, b'\\<rangle>\n  a \\<in>\\<^sub>\\<circ> A\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ>\n                             ZFC_in_HOL.set {b} \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>", "with prems T.arr_Set_ArrVal_vrange"], ["proof (chain)\npicking this:\n  x \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {b}\n  x = \\<langle>a, b'\\<rangle>\n  a \\<in>\\<^sub>\\<circ> A", "show \"x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> set {b}\""], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {b}\n  x = \\<langle>a, b'\\<rangle>\n  a \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}", "by auto"], ["proof (state)\nthis:\n  x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ>\n                             ZFC_in_HOL.set {b} \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ>\n                             ZFC_in_HOL.set {b} \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ>\n                             ZFC_in_HOL.set {b} \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>", "assume \"x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> set {b}\""], ["proof (state)\nthis:\n  x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ>\n                             ZFC_in_HOL.set {b} \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>", "then"], ["proof (chain)\npicking this:\n  x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}", "obtain a where x_def: \"x = \\<langle>a, b\\<rangle>\" and \"a \\<in>\\<^sub>\\<circ> A\""], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>x = \\<langle>a, b\\<rangle>;\n         a \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  x = \\<langle>a, b\\<rangle>\n  a \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ>\n                             ZFC_in_HOL.set {b} \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>", "have \"\\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A", "by (simp add: smc_Set_cs_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ>\n                             ZFC_in_HOL.set {b} \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>", "moreover"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ>\n                             ZFC_in_HOL.set {b} \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>", "with \n          T.arr_Set_ArrVal_vrange T.ArrVal.vdomain_vrange_is_vempty \\<open>a \\<in>\\<^sub>\\<circ> A\\<close>"], ["proof (chain)\npicking this:\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {b}\n  (\\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = []\\<^sub>\\<circ>) =\n  (\\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = []\\<^sub>\\<circ>)\n  a \\<in>\\<^sub>\\<circ> A\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A", "have \"\\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = set {b}\""], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {b}\n  (\\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = []\\<^sub>\\<circ>) =\n  (\\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = []\\<^sub>\\<circ>)\n  a \\<in>\\<^sub>\\<circ> A\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = ZFC_in_HOL.set {b}", "by auto"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = ZFC_in_HOL.set {b}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ>\n                             ZFC_in_HOL.set {b} \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>", "ultimately"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = ZFC_in_HOL.set {b}", "show \"x \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = ZFC_in_HOL.set {b}\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>", "using \\<open>a \\<in>\\<^sub>\\<circ> A\\<close>"], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = ZFC_in_HOL.set {b}\n  a \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>", "unfolding x_def"], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = ZFC_in_HOL.set {b}\n  a \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>", "by \n            (\n              metis \n                T.ArrVal.vsv_ex1_app1 \n                T.ArrVal.vsv_vimageI1 \n                vimage_vdomain \n                vsingletonD\n            )"], ["proof (state)\nthis:\n  x \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  T\\<lparr>ArrVal\\<rparr> = A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}\n\ngoal (1 subgoal):\n 1. \\<And>T.\n       T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ZFC_in_HOL.set\n                  {b} \\<Longrightarrow>\n       T =\n       [A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}, A,\n        ZFC_in_HOL.set {b}]\\<^sub>\\<circ>", "show \"T = [A \\<times>\\<^sub>\\<circ> set {b}, A, set {b}]\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T =\n    [A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}, A,\n     ZFC_in_HOL.set {b}]\\<^sub>\\<circ>", "proof(rule arr_Set_eqI[of \\<alpha>], unfold arr_Rel_components)"], ["proof (state)\ngoal (5 subgoals):\n 1. arr_Set \\<alpha> T\n 2. arr_Set \\<alpha>\n     [A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}, A,\n      ZFC_in_HOL.set {b}]\\<^sub>\\<circ>\n 3. T\\<lparr>ArrVal\\<rparr> = A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}\n 4. T\\<lparr>ArrDom\\<rparr> = A\n 5. T\\<lparr>ArrCod\\<rparr> = ZFC_in_HOL.set {b}", "show \"arr_Set \\<alpha> [A \\<times>\\<^sub>\\<circ> set {b}, A, set {b}]\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Set \\<alpha>\n     [A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}, A,\n      ZFC_in_HOL.set {b}]\\<^sub>\\<circ>", "using T.arr_Rel_def T.arr_Set_axioms"], ["proof (prove)\nusing this:\n  T = [T\\<lparr>ArrVal\\<rparr>, A, ZFC_in_HOL.set {b}]\\<^sub>\\<circ>\n  arr_Set \\<alpha> T\n\ngoal (1 subgoal):\n 1. arr_Set \\<alpha>\n     [A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}, A,\n      ZFC_in_HOL.set {b}]\\<^sub>\\<circ>", "by auto"], ["proof (state)\nthis:\n  arr_Set \\<alpha>\n   [A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}, A,\n    ZFC_in_HOL.set {b}]\\<^sub>\\<circ>\n\ngoal (4 subgoals):\n 1. arr_Set \\<alpha> T\n 2. T\\<lparr>ArrVal\\<rparr> = A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}\n 3. T\\<lparr>ArrDom\\<rparr> = A\n 4. T\\<lparr>ArrCod\\<rparr> = ZFC_in_HOL.set {b}", "qed (auto simp: T.arr_Set_axioms)"], ["proof (state)\nthis:\n  T =\n  [A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}, A,\n   ZFC_in_HOL.set {b}]\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>!T. T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<forall>A\\<in>elts (Vset \\<alpha>).\n      \\<exists>!T. T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ?B) =\n  (\\<exists>C\\<in>elts (Vset \\<alpha>). ?B = ZFC_in_HOL.set {C})\n\ngoal (1 subgoal):\n 1. obj_terminal (smc_Set \\<alpha>) A =\n    (\\<exists>B\\<in>elts (Vset \\<alpha>). A = ZFC_in_HOL.set {B})", "then"], ["proof (chain)\npicking this:\n  (\\<forall>A\\<in>elts (Vset \\<alpha>).\n      \\<exists>!T. T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ?B) =\n  (\\<exists>C\\<in>elts (Vset \\<alpha>). ?B = ZFC_in_HOL.set {C})", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<forall>A\\<in>elts (Vset \\<alpha>).\n      \\<exists>!T. T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ?B) =\n  (\\<exists>C\\<in>elts (Vset \\<alpha>). ?B = ZFC_in_HOL.set {C})\n\ngoal (1 subgoal):\n 1. obj_terminal (smc_Set \\<alpha>) A =\n    (\\<exists>B\\<in>elts (Vset \\<alpha>). A = ZFC_in_HOL.set {B})", "apply(intro iffI obj_terminalI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>B.\n                (\\<forall>A\\<in>elts (Vset \\<alpha>).\n                    \\<exists>!T.\n                       T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B) =\n                (\\<exists>C\\<in>elts (Vset \\<alpha>).\n                    B = ZFC_in_HOL.set {C});\n     obj_terminal (smc_Set \\<alpha>) A\\<rbrakk>\n    \\<Longrightarrow> \\<exists>B\\<in>elts (Vset \\<alpha>).\n                         A = ZFC_in_HOL.set {B}\n 2. \\<lbrakk>\\<And>B.\n                (\\<forall>A\\<in>elts (Vset \\<alpha>).\n                    \\<exists>!T.\n                       T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B) =\n                (\\<exists>C\\<in>elts (Vset \\<alpha>).\n                    B = ZFC_in_HOL.set {C});\n     \\<exists>B\\<in>elts (Vset \\<alpha>). A = ZFC_in_HOL.set {B}\\<rbrakk>\n    \\<Longrightarrow> A \\<in>\\<^sub>\\<circ> smc_Set\n       \\<alpha>\\<lparr>Obj\\<rparr>\n 3. \\<And>a.\n       \\<lbrakk>\\<And>B.\n                   (\\<forall>A\\<in>elts (Vset \\<alpha>).\n                       \\<exists>!T.\n                          T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B) =\n                   (\\<exists>C\\<in>elts (Vset \\<alpha>).\n                       B = ZFC_in_HOL.set {C});\n        \\<exists>B\\<in>elts (Vset \\<alpha>). A = ZFC_in_HOL.set {B};\n        a \\<in>\\<^sub>\\<circ> smc_Set \\<alpha>\\<lparr>Obj\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> Ex1 (is_arr (smc_Set \\<alpha>) a A)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>B.\n                (\\<forall>A\\<in>elts (Vset \\<alpha>).\n                    \\<exists>!T.\n                       T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B) =\n                (\\<exists>C\\<in>elts (Vset \\<alpha>).\n                    B = ZFC_in_HOL.set {C});\n     obj_terminal (smc_Set \\<alpha>) A\\<rbrakk>\n    \\<Longrightarrow> \\<exists>B\\<in>elts (Vset \\<alpha>).\n                         A = ZFC_in_HOL.set {B}", "by (metis smc_is_arrD(2) obj_terminalE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>B.\n                (\\<forall>A\\<in>elts (Vset \\<alpha>).\n                    \\<exists>!T.\n                       T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B) =\n                (\\<exists>C\\<in>elts (Vset \\<alpha>).\n                    B = ZFC_in_HOL.set {C});\n     \\<exists>B\\<in>elts (Vset \\<alpha>). A = ZFC_in_HOL.set {B}\\<rbrakk>\n    \\<Longrightarrow> A \\<in>\\<^sub>\\<circ> smc_Set\n       \\<alpha>\\<lparr>Obj\\<rparr>\n 2. \\<And>a.\n       \\<lbrakk>\\<And>B.\n                   (\\<forall>A\\<in>elts (Vset \\<alpha>).\n                       \\<exists>!T.\n                          T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B) =\n                   (\\<exists>C\\<in>elts (Vset \\<alpha>).\n                       B = ZFC_in_HOL.set {C});\n        \\<exists>B\\<in>elts (Vset \\<alpha>). A = ZFC_in_HOL.set {B};\n        a \\<in>\\<^sub>\\<circ> smc_Set \\<alpha>\\<lparr>Obj\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> Ex1 (is_arr (smc_Set \\<alpha>) a A)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>B.\n                (\\<forall>A\\<in>elts (Vset \\<alpha>).\n                    \\<exists>!T.\n                       T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B) =\n                (\\<exists>C\\<in>elts (Vset \\<alpha>).\n                    B = ZFC_in_HOL.set {C});\n     \\<exists>B\\<in>elts (Vset \\<alpha>). A = ZFC_in_HOL.set {B}\\<rbrakk>\n    \\<Longrightarrow> A \\<in>\\<^sub>\\<circ> smc_Set\n       \\<alpha>\\<lparr>Obj\\<rparr>", "by blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>\\<And>B.\n                   (\\<forall>A\\<in>elts (Vset \\<alpha>).\n                       \\<exists>!T.\n                          T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B) =\n                   (\\<exists>C\\<in>elts (Vset \\<alpha>).\n                       B = ZFC_in_HOL.set {C});\n        \\<exists>B\\<in>elts (Vset \\<alpha>). A = ZFC_in_HOL.set {B};\n        a \\<in>\\<^sub>\\<circ> smc_Set \\<alpha>\\<lparr>Obj\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> Ex1 (is_arr (smc_Set \\<alpha>) a A)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>B.\n                (\\<forall>A\\<in>elts (Vset \\<alpha>).\n                    \\<exists>!T.\n                       T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B) =\n                (\\<exists>C\\<in>elts (Vset \\<alpha>).\n                    B = ZFC_in_HOL.set {C});\n     \\<exists>B\\<in>elts (Vset \\<alpha>). A = ZFC_in_HOL.set {B};\n     a_ \\<in>\\<^sub>\\<circ> smc_Set \\<alpha>\\<lparr>Obj\\<rparr>\\<rbrakk>\n    \\<Longrightarrow> Ex1 (is_arr (smc_Set \\<alpha>) a_ A)", "by (metis smc_Set_components(1))"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  obj_terminal (smc_Set \\<alpha>) A =\n  (\\<exists>B\\<in>elts (Vset \\<alpha>). A = ZFC_in_HOL.set {B})\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>An object in \\<open>Set\\<close> is initial if and only if it is the empty \nset (see Chapter I-5 in \\cite{mac_lane_categories_2010}).\\<close>"], ["", "lemma (in \\<Z>) smc_Set_obj_initial: \"obj_initial (smc_Set \\<alpha>) A \\<longleftrightarrow> A = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. obj_initial (smc_Set \\<alpha>) A = (A = []\\<^sub>\\<circ>)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. obj_initial (smc_Set \\<alpha>) A = (A = []\\<^sub>\\<circ>)", "interpret semicategory \\<alpha> \\<open>smc_Set \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (smc_Set \\<alpha>)", "by (rule semicategory_smc_Set)"], ["proof (state)\ngoal (1 subgoal):\n 1. obj_initial (smc_Set \\<alpha>) A = (A = []\\<^sub>\\<circ>)", "have \"(\\<forall>B\\<in>\\<^sub>\\<circ>Vset \\<alpha>. \\<exists>!T. T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B) \\<longleftrightarrow> A = 0\" for A"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>B\\<in>elts (Vset \\<alpha>).\n        \\<exists>!T. T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B) =\n    (A = []\\<^sub>\\<circ>)", "proof(intro iffI ballI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>B\\<in>elts (Vset \\<alpha>).\n       \\<exists>!T.\n          T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B \\<Longrightarrow>\n    A = []\\<^sub>\\<circ>\n 2. \\<And>B.\n       \\<lbrakk>A = []\\<^sub>\\<circ>;\n        B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!T.\n                            T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B", "assume prems[rule_format]: \"\\<forall>B\\<in>\\<^sub>\\<circ>Vset \\<alpha>. \\<exists>!T. T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\""], ["proof (state)\nthis:\n  ?B \\<in>\\<^sub>\\<circ> Vset \\<alpha> \\<Longrightarrow>\n  Ex1 (is_arr (smc_Set \\<alpha>) A ?B)\n\ngoal (2 subgoals):\n 1. \\<forall>B\\<in>elts (Vset \\<alpha>).\n       \\<exists>!T.\n          T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B \\<Longrightarrow>\n    A = []\\<^sub>\\<circ>\n 2. \\<And>B.\n       \\<lbrakk>A = []\\<^sub>\\<circ>;\n        B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!T.\n                            T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B", "then"], ["proof (chain)\npicking this:\n  ?B \\<in>\\<^sub>\\<circ> Vset \\<alpha> \\<Longrightarrow>\n  Ex1 (is_arr (smc_Set \\<alpha>) A ?B)", "obtain T where T0B: \"T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> 0\""], ["proof (prove)\nusing this:\n  ?B \\<in>\\<^sub>\\<circ> Vset \\<alpha> \\<Longrightarrow>\n  Ex1 (is_arr (smc_Set \\<alpha>) A ?B)\n\ngoal (1 subgoal):\n 1. (\\<And>T.\n        T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> []\\<^sub>\\<circ> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (meson vempty_is_zet)"], ["proof (state)\nthis:\n  T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> []\\<^sub>\\<circ>\n\ngoal (2 subgoals):\n 1. \\<forall>B\\<in>elts (Vset \\<alpha>).\n       \\<exists>!T.\n          T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B \\<Longrightarrow>\n    A = []\\<^sub>\\<circ>\n 2. \\<And>B.\n       \\<lbrakk>A = []\\<^sub>\\<circ>;\n        B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!T.\n                            T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B", "then"], ["proof (chain)\npicking this:\n  T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> []\\<^sub>\\<circ>", "have A[simp]: \"A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. A \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (fastforce simp: smc_Set_components(1))"], ["proof (state)\nthis:\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (2 subgoals):\n 1. \\<forall>B\\<in>elts (Vset \\<alpha>).\n       \\<exists>!T.\n          T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B \\<Longrightarrow>\n    A = []\\<^sub>\\<circ>\n 2. \\<And>B.\n       \\<lbrakk>A = []\\<^sub>\\<circ>;\n        B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!T.\n                            T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B", "show \"A = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = []\\<^sub>\\<circ>", "proof(rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. A \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow> False", "assume \"A \\<noteq> 0\""], ["proof (state)\nthis:\n  A \\<noteq> []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. A \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  A \\<noteq> []\\<^sub>\\<circ>", "obtain a where a: \"a \\<in>\\<^sub>\\<circ> A\""], ["proof (prove)\nusing this:\n  A \\<noteq> []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        a \\<in>\\<^sub>\\<circ> A \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto dest: trad_foundation)"], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. A \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow> False", "from Axiom_of_Powers a"], ["proof (chain)\npicking this:\n  ?a \\<in>\\<^sub>\\<circ> Vset \\<alpha> \\<Longrightarrow>\n  VPow ?a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  a \\<in>\\<^sub>\\<circ> A", "have A0: \n        \"[A \\<times>\\<^sub>\\<circ> set {0}, A, set {0}]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> set {0}\""], ["proof (prove)\nusing this:\n  ?a \\<in>\\<^sub>\\<circ> Vset \\<alpha> \\<Longrightarrow>\n  VPow ?a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  a \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. [A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, A,\n     ZFC_in_HOL.set\n      {[]\\<^sub>\\<circ>}]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ZFC_in_HOL.set\n           {[]\\<^sub>\\<circ>}", "by \n          ( \n            intro smc_Set_is_arrI arr_Set_vfsequenceI, \n            unfold arr_Rel_components\n          )\n          auto"], ["proof (state)\nthis:\n  [A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, A,\n   ZFC_in_HOL.set\n    {[]\\<^sub>\\<circ>}]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ZFC_in_HOL.set\n         {[]\\<^sub>\\<circ>}\n\ngoal (1 subgoal):\n 1. A \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow> False", "have A1: \"[A \\<times>\\<^sub>\\<circ> set {1}, A, set {1}]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> set {1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {1}, A,\n     ZFC_in_HOL.set\n      {1}]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ZFC_in_HOL.set\n                                  {1}", "proof\n          ( \n            intro smc_Set_is_arrI arr_Set_vfsequenceI, \n            unfold arr_Rel_components\n          )"], ["proof (state)\ngoal (7 subgoals):\n 1. vsv (A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {1})\n 2. \\<D>\\<^sub>\\<circ> (A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {1}) = A\n 3. \\<R>\\<^sub>\\<circ> (A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {1})\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {1}\n 4. A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 5. ZFC_in_HOL.set {1} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 6. A = A\n 7. ZFC_in_HOL.set {1} = ZFC_in_HOL.set {1}", "show \"set {1} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set {1} \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (blast intro: vone_in_omega Axiom_of_Infinity)"], ["proof (state)\nthis:\n  ZFC_in_HOL.set {1} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (6 subgoals):\n 1. vsv (A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {1})\n 2. \\<D>\\<^sub>\\<circ> (A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {1}) = A\n 3. \\<R>\\<^sub>\\<circ> (A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {1})\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {1}\n 4. A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 5. A = A\n 6. ZFC_in_HOL.set {1} = ZFC_in_HOL.set {1}", "qed auto"], ["proof (state)\nthis:\n  [A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {1}, A,\n   ZFC_in_HOL.set\n    {1}]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ZFC_in_HOL.set\n                                {1}\n\ngoal (1 subgoal):\n 1. A \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow> False", "have \"[A \\<times>\\<^sub>\\<circ> set {0}, A, set {0, 1}]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> set {0, 1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, A,\n     ZFC_in_HOL.set\n      {[]\\<^sub>\\<circ>,\n       1}]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ZFC_in_HOL.set\n                                  {[]\\<^sub>\\<circ>, 1}", "proof\n        (\n          intro smc_Set_is_arrI arr_Set_vfsequenceI, \n          unfold arr_Rel_components\n        )"], ["proof (state)\ngoal (7 subgoals):\n 1. vsv (A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {[]\\<^sub>\\<circ>})\n 2. \\<D>\\<^sub>\\<circ>\n     (A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {[]\\<^sub>\\<circ>}) =\n    A\n 3. \\<R>\\<^sub>\\<circ>\n     (A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {[]\\<^sub>\\<circ>})\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}\n 4. A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 5. ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 6. A = A\n 7. ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1} =\n    ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}", "show \"set {[]\\<^sub>\\<circ>, 1} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1} \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (intro Limit_vdoubleton_in_VsetI) (force simp: nat_omega_simps)+"], ["proof (state)\nthis:\n  ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (6 subgoals):\n 1. vsv (A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {[]\\<^sub>\\<circ>})\n 2. \\<D>\\<^sub>\\<circ>\n     (A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {[]\\<^sub>\\<circ>}) =\n    A\n 3. \\<R>\\<^sub>\\<circ>\n     (A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {[]\\<^sub>\\<circ>})\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}\n 4. A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 5. A = A\n 6. ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1} =\n    ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}", "qed auto"], ["proof (state)\nthis:\n  [A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, A,\n   ZFC_in_HOL.set\n    {[]\\<^sub>\\<circ>,\n     1}]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ZFC_in_HOL.set\n                                {[]\\<^sub>\\<circ>, 1}\n\ngoal (1 subgoal):\n 1. A \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  [A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, A,\n   ZFC_in_HOL.set\n    {[]\\<^sub>\\<circ>,\n     1}]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ZFC_in_HOL.set\n                                {[]\\<^sub>\\<circ>, 1}\n\ngoal (1 subgoal):\n 1. A \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow> False", "have \n        \"[A \\<times>\\<^sub>\\<circ> set {1}, A, set {0, 1}]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> set {0, 1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {1}, A,\n     ZFC_in_HOL.set\n      {[]\\<^sub>\\<circ>,\n       1}]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ZFC_in_HOL.set\n                                  {[]\\<^sub>\\<circ>, 1}", "proof\n        (\n          intro smc_Set_is_arrI arr_Set_vfsequenceI, \n          unfold arr_Rel_components\n        )"], ["proof (state)\ngoal (7 subgoals):\n 1. vsv (A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {1})\n 2. \\<D>\\<^sub>\\<circ> (A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {1}) = A\n 3. \\<R>\\<^sub>\\<circ> (A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {1})\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}\n 4. A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 5. ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 6. A = A\n 7. ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1} =\n    ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}", "show \"set {[]\\<^sub>\\<circ>, 1} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1} \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (intro Limit_vdoubleton_in_VsetI) (force simp: nat_omega_simps)+"], ["proof (state)\nthis:\n  ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (6 subgoals):\n 1. vsv (A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {1})\n 2. \\<D>\\<^sub>\\<circ> (A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {1}) = A\n 3. \\<R>\\<^sub>\\<circ> (A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {1})\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}\n 4. A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 5. A = A\n 6. ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1} =\n    ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}", "qed auto"], ["proof (state)\nthis:\n  [A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {1}, A,\n   ZFC_in_HOL.set\n    {[]\\<^sub>\\<circ>,\n     1}]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ZFC_in_HOL.set\n                                {[]\\<^sub>\\<circ>, 1}\n\ngoal (1 subgoal):\n 1. A \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  [A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {1}, A,\n   ZFC_in_HOL.set\n    {[]\\<^sub>\\<circ>,\n     1}]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ZFC_in_HOL.set\n                                {[]\\<^sub>\\<circ>, 1}\n\ngoal (1 subgoal):\n 1. A \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow> False", "from \\<open>A \\<noteq> 0\\<close> one_neq_zero"], ["proof (chain)\npicking this:\n  A \\<noteq> []\\<^sub>\\<circ>\n  (1::?'a) \\<noteq> (0::?'a)", "have \n        \"[A \\<times>\\<^sub>\\<circ> set {0}, A, set {0, 1}]\\<^sub>\\<circ> \\<noteq> [A \\<times>\\<^sub>\\<circ> set {1}, A, set {0, 1}]\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  A \\<noteq> []\\<^sub>\\<circ>\n  (1::?'a) \\<noteq> (0::?'a)\n\ngoal (1 subgoal):\n 1. [A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, A,\n     ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}]\\<^sub>\\<circ> \\<noteq>\n    [A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {1}, A,\n     ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}]\\<^sub>\\<circ>", "by (blast intro!: vsubset_antisym)"], ["proof (state)\nthis:\n  [A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, A,\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}]\\<^sub>\\<circ> \\<noteq>\n  [A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {1}, A,\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}]\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. A \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  [A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, A,\n   ZFC_in_HOL.set\n    {[]\\<^sub>\\<circ>,\n     1}]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ZFC_in_HOL.set\n                                {[]\\<^sub>\\<circ>, 1}\n  [A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {1}, A,\n   ZFC_in_HOL.set\n    {[]\\<^sub>\\<circ>,\n     1}]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ZFC_in_HOL.set\n                                {[]\\<^sub>\\<circ>, 1}\n  [A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, A,\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}]\\<^sub>\\<circ> \\<noteq>\n  [A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {1}, A,\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}]\\<^sub>\\<circ>", "show False"], ["proof (prove)\nusing this:\n  [A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, A,\n   ZFC_in_HOL.set\n    {[]\\<^sub>\\<circ>,\n     1}]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ZFC_in_HOL.set\n                                {[]\\<^sub>\\<circ>, 1}\n  [A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {1}, A,\n   ZFC_in_HOL.set\n    {[]\\<^sub>\\<circ>,\n     1}]\\<^sub>\\<circ> : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> ZFC_in_HOL.set\n                                {[]\\<^sub>\\<circ>, 1}\n  [A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {[]\\<^sub>\\<circ>}, A,\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}]\\<^sub>\\<circ> \\<noteq>\n  [A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {1}, A,\n   ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1}]\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. False", "by (metis prems smc_is_arrE smc_Set_components(1))"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  A = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       \\<lbrakk>A = []\\<^sub>\\<circ>;\n        B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!T.\n                            T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B.\n       \\<lbrakk>A = []\\<^sub>\\<circ>;\n        B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!T.\n                            T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B", "fix B"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B.\n       \\<lbrakk>A = []\\<^sub>\\<circ>;\n        B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!T.\n                            T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B", "assume prems: \"A = 0\" \"B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (state)\nthis:\n  A = []\\<^sub>\\<circ>\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       \\<lbrakk>A = []\\<^sub>\\<circ>;\n        B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!T.\n                            T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B", "show \"\\<exists>!T. T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!T. T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B", "proof(rule ex1I[of _ \\<open>[0, 0, B]\\<^sub>\\<circ>\\<close>], unfold prems(1))"], ["proof (state)\ngoal (2 subgoals):\n 1. [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n     B]\\<^sub>\\<circ> : []\\<^sub>\\<circ> \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n 2. \\<And>T.\n       T : []\\<^sub>\\<circ> \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B \\<Longrightarrow>\n       T = [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, B]\\<^sub>\\<circ>", "show zzB: \"[0, 0, B]\\<^sub>\\<circ> : 0 \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n     B]\\<^sub>\\<circ> : []\\<^sub>\\<circ> \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B", "by \n          (\n            intro smc_Set_is_arrI arr_Set_vfsequenceI, \n            unfold arr_Rel_components\n          )\n          (simp_all add: prems)"], ["proof (state)\nthis:\n  [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n   B]\\<^sub>\\<circ> : []\\<^sub>\\<circ> \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. \\<And>T.\n       T : []\\<^sub>\\<circ> \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B \\<Longrightarrow>\n       T = [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, B]\\<^sub>\\<circ>", "fix T"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>T.\n       T : []\\<^sub>\\<circ> \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B \\<Longrightarrow>\n       T = [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, B]\\<^sub>\\<circ>", "assume prems: \"T : 0 \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\""], ["proof (state)\nthis:\n  T : []\\<^sub>\\<circ> \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. \\<And>T.\n       T : []\\<^sub>\\<circ> \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B \\<Longrightarrow>\n       T = [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, B]\\<^sub>\\<circ>", "interpret T: arr_Set \\<alpha> T\n        rewrites [simp]: \"T\\<lparr>ArrDom\\<rparr> = 0\" and [simp]: \"T\\<lparr>ArrCod\\<rparr> = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> T &&&\n    T\\<lparr>ArrDom\\<rparr> = []\\<^sub>\\<circ> &&&\n    T\\<lparr>ArrCod\\<rparr> = B", "using prems"], ["proof (prove)\nusing this:\n  T : []\\<^sub>\\<circ> \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> T &&&\n    T\\<lparr>ArrDom\\<rparr> = []\\<^sub>\\<circ> &&&\n    T\\<lparr>ArrCod\\<rparr> = B", "by (auto simp: smc_Set_is_arrD)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>T.\n       T : []\\<^sub>\\<circ> \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B \\<Longrightarrow>\n       T = [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, B]\\<^sub>\\<circ>", "show \"T = [0, 0, B]\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T = [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, B]\\<^sub>\\<circ>", "proof(rule arr_Set_eqI[of \\<alpha>], unfold arr_Rel_components)"], ["proof (state)\ngoal (5 subgoals):\n 1. arr_Set \\<alpha> T\n 2. arr_Set \\<alpha> [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, B]\\<^sub>\\<circ>\n 3. T\\<lparr>ArrVal\\<rparr> = []\\<^sub>\\<circ>\n 4. T\\<lparr>ArrDom\\<rparr> = []\\<^sub>\\<circ>\n 5. T\\<lparr>ArrCod\\<rparr> = B", "show \"arr_Set \\<alpha> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> T", "by (rule T.arr_Set_axioms)"], ["proof (state)\nthis:\n  arr_Set \\<alpha> T\n\ngoal (4 subgoals):\n 1. arr_Set \\<alpha> [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, B]\\<^sub>\\<circ>\n 2. T\\<lparr>ArrVal\\<rparr> = []\\<^sub>\\<circ>\n 3. T\\<lparr>ArrDom\\<rparr> = []\\<^sub>\\<circ>\n 4. T\\<lparr>ArrCod\\<rparr> = B", "from zzB"], ["proof (chain)\npicking this:\n  [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n   B]\\<^sub>\\<circ> : []\\<^sub>\\<circ> \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B", "show \"arr_Set \\<alpha> [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, B]\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n   B]\\<^sub>\\<circ> : []\\<^sub>\\<circ> \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, B]\\<^sub>\\<circ>", "by (meson smc_Set_is_arrE)"], ["proof (state)\nthis:\n  arr_Set \\<alpha> [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, B]\\<^sub>\\<circ>\n\ngoal (3 subgoals):\n 1. T\\<lparr>ArrVal\\<rparr> = []\\<^sub>\\<circ>\n 2. T\\<lparr>ArrDom\\<rparr> = []\\<^sub>\\<circ>\n 3. T\\<lparr>ArrCod\\<rparr> = B", "from T.ArrVal.vdomain_vrange_is_vempty"], ["proof (chain)\npicking this:\n  (\\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = []\\<^sub>\\<circ>) =\n  (\\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = []\\<^sub>\\<circ>)", "show \"T\\<lparr>ArrVal\\<rparr> = []\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  (\\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = []\\<^sub>\\<circ>) =\n  (\\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = []\\<^sub>\\<circ>)\n\ngoal (1 subgoal):\n 1. T\\<lparr>ArrVal\\<rparr> = []\\<^sub>\\<circ>", "by (auto intro: T.ArrVal.vsv_vrange_vempty simp: smc_Set_cs_simps)"], ["proof (state)\nthis:\n  T\\<lparr>ArrVal\\<rparr> = []\\<^sub>\\<circ>\n\ngoal (2 subgoals):\n 1. T\\<lparr>ArrDom\\<rparr> = []\\<^sub>\\<circ>\n 2. T\\<lparr>ArrCod\\<rparr> = B", "qed simp_all"], ["proof (state)\nthis:\n  T = [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, B]\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>!T. T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<forall>B\\<in>elts (Vset \\<alpha>).\n      \\<exists>!T. T : ?A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B) =\n  (?A = []\\<^sub>\\<circ>)\n\ngoal (1 subgoal):\n 1. obj_initial (smc_Set \\<alpha>) A = (A = []\\<^sub>\\<circ>)", "then"], ["proof (chain)\npicking this:\n  (\\<forall>B\\<in>elts (Vset \\<alpha>).\n      \\<exists>!T. T : ?A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B) =\n  (?A = []\\<^sub>\\<circ>)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<forall>B\\<in>elts (Vset \\<alpha>).\n      \\<exists>!T. T : ?A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B) =\n  (?A = []\\<^sub>\\<circ>)\n\ngoal (1 subgoal):\n 1. obj_initial (smc_Set \\<alpha>) A = (A = []\\<^sub>\\<circ>)", "apply(intro iffI obj_initialI, elim obj_initialE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>A.\n                (\\<forall>B\\<in>elts (Vset \\<alpha>).\n                    \\<exists>!T.\n                       T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B) =\n                (A = []\\<^sub>\\<circ>);\n     \\<And>A.\n        (\\<forall>B\\<in>elts (Vset \\<alpha>).\n            \\<exists>!T.\n               T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B) =\n        (A = []\\<^sub>\\<circ>);\n     A \\<in>\\<^sub>\\<circ> smc_Set \\<alpha>\\<lparr>Obj\\<rparr>;\n     \\<And>b.\n        b \\<in>\\<^sub>\\<circ> smc_Set\n                               \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n        \\<exists>!f.\n           f : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\\<rbrakk>\n    \\<Longrightarrow> A = []\\<^sub>\\<circ>\n 2. \\<lbrakk>\\<And>A.\n                (\\<forall>B\\<in>elts (Vset \\<alpha>).\n                    \\<exists>!T.\n                       T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B) =\n                (A = []\\<^sub>\\<circ>);\n     A = []\\<^sub>\\<circ>\\<rbrakk>\n    \\<Longrightarrow> A \\<in>\\<^sub>\\<circ> smc_Set\n       \\<alpha>\\<lparr>Obj\\<rparr>\n 3. \\<And>b.\n       \\<lbrakk>\\<And>A.\n                   (\\<forall>B\\<in>elts (Vset \\<alpha>).\n                       \\<exists>!T.\n                          T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B) =\n                   (A = []\\<^sub>\\<circ>);\n        A = []\\<^sub>\\<circ>;\n        b \\<in>\\<^sub>\\<circ> smc_Set \\<alpha>\\<lparr>Obj\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!f.\n                            f : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>A.\n                (\\<forall>B\\<in>elts (Vset \\<alpha>).\n                    \\<exists>!T.\n                       T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B) =\n                (A = []\\<^sub>\\<circ>);\n     \\<And>A.\n        (\\<forall>B\\<in>elts (Vset \\<alpha>).\n            \\<exists>!T.\n               T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B) =\n        (A = []\\<^sub>\\<circ>);\n     A \\<in>\\<^sub>\\<circ> smc_Set \\<alpha>\\<lparr>Obj\\<rparr>;\n     \\<And>b.\n        b \\<in>\\<^sub>\\<circ> smc_Set\n                               \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n        \\<exists>!f.\n           f : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b\\<rbrakk>\n    \\<Longrightarrow> A = []\\<^sub>\\<circ>", "by (metis smc_Set_components(1))"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>A.\n                (\\<forall>B\\<in>elts (Vset \\<alpha>).\n                    \\<exists>!T.\n                       T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B) =\n                (A = []\\<^sub>\\<circ>);\n     A = []\\<^sub>\\<circ>\\<rbrakk>\n    \\<Longrightarrow> A \\<in>\\<^sub>\\<circ> smc_Set\n       \\<alpha>\\<lparr>Obj\\<rparr>\n 2. \\<And>b.\n       \\<lbrakk>\\<And>A.\n                   (\\<forall>B\\<in>elts (Vset \\<alpha>).\n                       \\<exists>!T.\n                          T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B) =\n                   (A = []\\<^sub>\\<circ>);\n        A = []\\<^sub>\\<circ>;\n        b \\<in>\\<^sub>\\<circ> smc_Set \\<alpha>\\<lparr>Obj\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!f.\n                            f : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>A.\n                (\\<forall>B\\<in>elts (Vset \\<alpha>).\n                    \\<exists>!T.\n                       T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B) =\n                (A = []\\<^sub>\\<circ>);\n     A = []\\<^sub>\\<circ>\\<rbrakk>\n    \\<Longrightarrow> A \\<in>\\<^sub>\\<circ> smc_Set\n       \\<alpha>\\<lparr>Obj\\<rparr>", "by (simp add: smc_Set_components(1))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>\\<And>A.\n                   (\\<forall>B\\<in>elts (Vset \\<alpha>).\n                       \\<exists>!T.\n                          T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B) =\n                   (A = []\\<^sub>\\<circ>);\n        A = []\\<^sub>\\<circ>;\n        b \\<in>\\<^sub>\\<circ> smc_Set \\<alpha>\\<lparr>Obj\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!f.\n                            f : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>A.\n                (\\<forall>B\\<in>elts (Vset \\<alpha>).\n                    \\<exists>!T.\n                       T : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B) =\n                (A = []\\<^sub>\\<circ>);\n     A = []\\<^sub>\\<circ>;\n     b_ \\<in>\\<^sub>\\<circ> smc_Set \\<alpha>\\<lparr>Obj\\<rparr>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!f.\n                         f : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> b_", "by (metis smc_Set_components(1))"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  obj_initial (smc_Set \\<alpha>) A = (A = []\\<^sub>\\<circ>)\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>\nThere are no null objects in \\<open>Set\\<close> (this is a trivial corollary of the \nabove).\n\\<close>"], ["", "lemma (in \\<Z>) smc_Set_obj_null: \"obj_null (smc_Set \\<alpha>) A \\<longleftrightarrow> False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. obj_null (smc_Set \\<alpha>) A = False", "unfolding obj_null_def smc_Set_obj_terminal smc_Set_obj_initial"], ["proof (prove)\ngoal (1 subgoal):\n 1. (A = []\\<^sub>\\<circ> \\<and>\n     (\\<exists>B\\<in>elts (Vset \\<alpha>). A = ZFC_in_HOL.set {B})) =\n    False", "by simp"], ["", "subsection\\<open>Zero arrow\\<close>"], ["", "text\\<open>\nThere are no zero arrows in \\<open>Set\\<close> (this result is a trivial \ncorollary of the absence of null objects).\n\\<close>"], ["", "lemma (in \\<Z>) smc_Set_is_zero_arr: \"T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Set \\<alpha>\\<^esub> B \\<longleftrightarrow> False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Set \\<alpha>\\<^esub> B = False", "using smc_Set_obj_null"], ["proof (prove)\nusing this:\n  obj_null (smc_Set \\<alpha>) ?A = False\n\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>0\\<^bsub>smc_Set \\<alpha>\\<^esub> B = False", "unfolding is_zero_arr_def"], ["proof (prove)\nusing this:\n  obj_null (smc_Set \\<alpha>) ?A = False\n\ngoal (1 subgoal):\n 1. (\\<exists>z g f.\n        obj_null (smc_Set \\<alpha>) z \\<and>\n        T = g \\<circ>\\<^sub>A\\<^bsub>smc_Set \\<alpha>\\<^esub> f \\<and>\n        f : A \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> z \\<and>\n        g : z \\<mapsto>\\<^bsub>smc_Set \\<alpha>\\<^esub> B) =\n    False", "by auto"], ["", "text\\<open>\\newpage\\<close>"], ["", "end"]]}