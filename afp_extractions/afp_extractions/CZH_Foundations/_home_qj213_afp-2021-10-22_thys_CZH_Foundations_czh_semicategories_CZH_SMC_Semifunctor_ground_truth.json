{"file_name": "/home/qj213/afp-2021-10-22/thys/CZH_Foundations/czh_semicategories/CZH_SMC_Semifunctor.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CZH_Foundations", "problem_names": ["lemmas [smc_cs_simps] = dg_shared_cs_simps", "lemmas [smc_cs_intros] = dg_shared_cs_intros", "lemma smcf_dghm_components:\n  shows [slicing_simps]: \"smcf_dghm \\<FF>\\<lparr>ObjMap\\<rparr> = \\<FF>\\<lparr>ObjMap\\<rparr>\"\n    and [slicing_simps]: \"smcf_dghm \\<FF>\\<lparr>ArrMap\\<rparr> = \\<FF>\\<lparr>ArrMap\\<rparr>\"\n    and [slicing_commute]: \"smcf_dghm \\<FF>\\<lparr>HomDom\\<rparr> = smc_dg (\\<FF>\\<lparr>HomDom\\<rparr>)\"\n    and [slicing_commute]: \"smcf_dghm \\<FF>\\<lparr>HomCod\\<rparr> = smc_dg (\\<FF>\\<lparr>HomCod\\<rparr>)\"", "lemmas [smc_cs_simps] =\n  is_semifunctor.smcf_HomDom\n  is_semifunctor.smcf_HomCod\n  is_semifunctor.smcf_ArrMap_Comp", "lemma smcf_is_dghm'[slicing_intros]:\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n    and \"\\<AA>' = smc_dg \\<AA>\"\n    and \"\\<BB>' = smc_dg \\<BB>\"\n  shows \"smcf_dghm \\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<BB>'\"", "lemma cn_dghm_comp_is_dghm: \n  assumes \"\\<FF> : op_smc \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"smcf_dghm \\<FF> : op_dg (smc_dg \\<AA>) \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg \\<BB>\"", "lemma cn_dghm_comp_is_dghm'[slicing_intros]: \n  assumes \"\\<FF> : op_smc \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n    and \"\\<AA>' = op_dg (smc_dg \\<AA>)\"\n    and \"\\<BB>' = smc_dg \\<BB>\"\n  shows \"smcf_dghm \\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<BB>'\"", "lemma (in is_semifunctor) is_semifunctor_axioms'[smc_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<AA>' = \\<AA>\" and \"\\<BB>' = \\<BB>\"\n  shows \"\\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'\"", "lemmas [smc_cs_intros] =\n  is_semifunctorD(3,4)", "lemma is_semifunctorI':\n  assumes \"\\<Z> \\<alpha>\" \n    and \"vfsequence \\<FF>\" \n    and \"semicategory \\<alpha> \\<AA>\"\n    and \"semicategory \\<alpha> \\<BB>\" \n    and \"vcard \\<FF> = 4\\<^sub>\\<nat>\"\n    and \"\\<FF>\\<lparr>HomDom\\<rparr> = \\<AA>\"\n    and \"\\<FF>\\<lparr>HomCod\\<rparr> = \\<BB>\"\n    and \"vsv (\\<FF>\\<lparr>ObjMap\\<rparr>)\"\n    and \"vsv (\\<FF>\\<lparr>ArrMap\\<rparr>)\"\n    and \"\\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = \\<AA>\\<lparr>Obj\\<rparr>\"\n    and \"\\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\"\n    and \"\\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) = \\<AA>\\<lparr>Arr\\<rparr>\"\n    and \"\\<And>a b f. f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b \\<Longrightarrow>\n      \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> : \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> \\<mapsto>\\<^bsub>\\<BB>\\<^esub> \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\"\n    and \"\\<And>b c g a f. \\<lbrakk> g : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> c; f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b \\<rbrakk> \\<Longrightarrow>\n      \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f\\<rparr> = \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"", "lemma is_semifunctorD':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<Z> \\<alpha>\" \n    and \"vfsequence \\<FF>\" \n    and \"semicategory \\<alpha> \\<AA>\"\n    and \"semicategory \\<alpha> \\<BB>\" \n    and \"vcard \\<FF> = 4\\<^sub>\\<nat>\"\n    and \"\\<FF>\\<lparr>HomDom\\<rparr> = \\<AA>\"\n    and \"\\<FF>\\<lparr>HomCod\\<rparr> = \\<BB>\"\n    and \"vsv (\\<FF>\\<lparr>ObjMap\\<rparr>)\"\n    and \"vsv (\\<FF>\\<lparr>ArrMap\\<rparr>)\"\n    and \"\\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = \\<AA>\\<lparr>Obj\\<rparr>\"\n    and \"\\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\"\n    and \"\\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) = \\<AA>\\<lparr>Arr\\<rparr>\"\n    and \"\\<And>a b f. f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b \\<Longrightarrow>\n      \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> : \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> \\<mapsto>\\<^bsub>\\<BB>\\<^esub> \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\"\n    and \"\\<And>b c g a f. \\<lbrakk> g : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> c; f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b \\<rbrakk> \\<Longrightarrow>\n      \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f\\<rparr> = \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\"", "lemma is_semifunctorE':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  obtains \"\\<Z> \\<alpha>\" \n    and \"vfsequence \\<FF>\" \n    and \"semicategory \\<alpha> \\<AA>\"\n    and \"semicategory \\<alpha> \\<BB>\" \n    and \"vcard \\<FF> = 4\\<^sub>\\<nat>\"\n    and \"\\<FF>\\<lparr>HomDom\\<rparr> = \\<AA>\"\n    and \"\\<FF>\\<lparr>HomCod\\<rparr> = \\<BB>\"\n    and \"vsv (\\<FF>\\<lparr>ObjMap\\<rparr>)\"\n    and \"vsv (\\<FF>\\<lparr>ArrMap\\<rparr>)\"\n    and \"\\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = \\<AA>\\<lparr>Obj\\<rparr>\"\n    and \"\\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\"\n    and \"\\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) = \\<AA>\\<lparr>Arr\\<rparr>\"\n    and \"\\<And>a b f. f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b \\<Longrightarrow>\n      \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> : \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> \\<mapsto>\\<^bsub>\\<BB>\\<^esub> \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\"\n    and \"\\<And>b c g a f. \\<lbrakk> g : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> c; f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b \\<rbrakk> \\<Longrightarrow>\n      \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f\\<rparr> = \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\"", "lemmas_with [unfolded slicing_simps]:\n  smcf_ObjMap_vsv = dghm.dghm_ObjMap_vsv\n  and smcf_ArrMap_vsv = dghm.dghm_ArrMap_vsv\n  and smcf_ObjMap_vdomain[smc_cs_simps] = dghm.dghm_ObjMap_vdomain\n  and smcf_ObjMap_vrange = dghm.dghm_ObjMap_vrange\n  and smcf_ArrMap_vdomain[smc_cs_simps] = dghm.dghm_ArrMap_vdomain\n  and smcf_ArrMap_is_arr = dghm.dghm_ArrMap_is_arr\n  and smcf_ArrMap_is_arr''[smc_cs_intros] = dghm.dghm_ArrMap_is_arr''\n  and smcf_ArrMap_is_arr'[smc_cs_intros] = dghm.dghm_ArrMap_is_arr'\n  and smcf_ObjMap_app_in_HomCod_Obj[smc_cs_intros] = \n    dghm.dghm_ObjMap_app_in_HomCod_Obj\n  and smcf_ArrMap_vrange = dghm.dghm_ArrMap_vrange\n  and smcf_ArrMap_app_in_HomCod_Arr[smc_cs_intros] = \n    dghm.dghm_ArrMap_app_in_HomCod_Arr\n  and smcf_ObjMap_vsubset_Vset = dghm.dghm_ObjMap_vsubset_Vset\n  and smcf_ArrMap_vsubset_Vset = dghm.dghm_ArrMap_vsubset_Vset\n  and smcf_ObjMap_in_Vset = dghm.dghm_ObjMap_in_Vset\n  and smcf_ArrMap_in_Vset = dghm.dghm_ArrMap_in_Vset\n  and smcf_is_dghm_if_ge_Limit = dghm.dghm_is_dghm_if_ge_Limit\n  and smcf_is_arr_HomCod = dghm.dghm_is_arr_HomCod\n  and smcf_vimage_dghm_ArrMap_vsubset_Hom = \n    dghm.dghm_vimage_dghm_ArrMap_vsubset_Hom", "lemmas [smc_cs_simps] =\n  is_semifunctor.smcf_ObjMap_vdomain\n  is_semifunctor.smcf_ArrMap_vdomain", "lemmas [smc_cs_intros] =\n  is_semifunctor.smcf_ObjMap_app_in_HomCod_Obj\n  is_semifunctor.smcf_ArrMap_app_in_HomCod_Arr\n  is_semifunctor.smcf_ArrMap_is_arr'", "lemma cn_smcf_ArrMap_Comp[smc_cs_simps]:\n  assumes \"semicategory \\<alpha> \\<AA>\"\n    and \"\\<FF> : op_smc \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n    and \"g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\"\n    and \"f : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> a\"\n  shows \"\\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> g\\<rparr> = \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\"", "lemma smcf_eqI:\n  assumes \"\\<GG> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n    and \"\\<FF> : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\"\n    and \"\\<GG>\\<lparr>ObjMap\\<rparr> = \\<FF>\\<lparr>ObjMap\\<rparr>\"\n    and \"\\<GG>\\<lparr>ArrMap\\<rparr> = \\<FF>\\<lparr>ArrMap\\<rparr>\"\n    and \"\\<AA> = \\<CC>\"\n    and \"\\<BB> = \\<DD>\"\n  shows \"\\<GG> = \\<FF>\"", "lemma smcf_dghm_eqI:\n  assumes \"\\<GG> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n    and \"\\<FF> : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\"\n    and \"\\<AA> = \\<CC>\"\n    and \"\\<BB> = \\<DD>\"\n    and \"smcf_dghm \\<GG> = smcf_dghm \\<FF>\"\n  shows \"\\<GG> = \\<FF>\"", "lemma (in is_semifunctor) smcf_def: \n  \"\\<FF> = [\\<FF>\\<lparr>ObjMap\\<rparr>, \\<FF>\\<lparr>ArrMap\\<rparr>, \\<FF>\\<lparr>HomDom\\<rparr>, \\<FF>\\<lparr>HomCod\\<rparr>]\\<^sub>\\<circ>\"", "lemma (in is_semifunctor) smcf_in_Vset: \n  assumes \"\\<Z> \\<beta>\" and \"\\<alpha> \\<in>\\<^sub>\\<circ> \\<beta>\"\n  shows \"\\<FF> \\<in>\\<^sub>\\<circ> Vset \\<beta>\"", "lemma (in is_semifunctor) smcf_is_semifunctor_if_ge_Limit:\n  assumes \"\\<Z> \\<beta>\" and \"\\<alpha> \\<in>\\<^sub>\\<circ> \\<beta>\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<beta>\\<^esub> \\<BB>\"", "lemma small_all_smcfs[simp]: \"small {\\<FF>. \\<exists>\\<AA> \\<BB>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>}\"", "lemma (in is_semifunctor) smcf_in_Vset_7: \"\\<FF> \\<in>\\<^sub>\\<circ> Vset (\\<alpha> + 7\\<^sub>\\<nat>)\"", "lemma (in \\<Z>) all_smcfs_in_Vset: \n  assumes \"\\<Z> \\<beta>\" and \"\\<alpha> \\<in>\\<^sub>\\<circ> \\<beta>\"\n  shows \"all_smcfs \\<alpha> \\<in>\\<^sub>\\<circ> Vset \\<beta>\"", "lemma small_smcfs[simp]: \"small {\\<FF>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>}\"", "lemma op_smcf_components[smc_op_simps]:\n  shows \"op_smcf \\<FF>\\<lparr>ObjMap\\<rparr> = \\<FF>\\<lparr>ObjMap\\<rparr>\"\n    and \"op_smcf \\<FF>\\<lparr>ArrMap\\<rparr> = \\<FF>\\<lparr>ArrMap\\<rparr>\"\n    and \"op_smcf \\<FF>\\<lparr>HomDom\\<rparr> = op_smc (\\<FF>\\<lparr>HomDom\\<rparr>)\"\n    and \"op_smcf \\<FF>\\<lparr>HomCod\\<rparr> = op_smc (\\<FF>\\<lparr>HomCod\\<rparr>)\"", "lemma op_dghm_smcf_dghm[slicing_commute]: \n  \"op_dghm (smcf_dghm \\<FF>) = smcf_dghm (op_smcf \\<FF>)\"", "lemma (in is_semifunctor) is_semifunctor_op:\n  \"op_smcf \\<FF> : op_smc \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> op_smc \\<BB>\"", "lemma (in is_semifunctor) is_semifunctor_op':  \n  assumes \"\\<AA>' = op_smc \\<AA>\" and \"\\<BB>' = op_smc \\<BB>\" and \"\\<alpha>' = \\<alpha>\"\n  shows \"op_smcf \\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'\"", "lemmas is_semifunctor_op'[smc_op_intros] = is_semifunctor.is_semifunctor_op'", "lemma (in is_semifunctor) smcf_op_smcf_op_smcf[smc_op_simps]: \n  \"op_smcf (op_smcf \\<FF>) = \\<FF>\"", "lemmas smcf_op_smcf_op_smcf[smc_op_simps] = is_semifunctor.smcf_op_smcf_op_smcf", "lemma eq_op_smcf_iff[smc_op_simps]: \n  assumes \"\\<GG> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"\\<FF> : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\"\n  shows \"op_smcf \\<GG> = op_smcf \\<FF> \\<longleftrightarrow> \\<GG> = \\<FF>\"", "lemma smcf_dghm_smcf_comp[slicing_commute]: \n  \"smcf_dghm \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M smcf_dghm \\<FF> = smcf_dghm (\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF>)\"", "lemma smcf_comp_ObjMap_vsv[smc_cs_intros]: \n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"vsv ((\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF>)\\<lparr>ObjMap\\<rparr>)\"", "lemma smcf_comp_ObjMap_vdomain[smc_cs_simps]:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<D>\\<^sub>\\<circ> ((\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF>)\\<lparr>ObjMap\\<rparr>) = \\<AA>\\<lparr>Obj\\<rparr>\"", "lemma smcf_comp_ObjMap_vrange:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<R>\\<^sub>\\<circ> ((\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF>)\\<lparr>ObjMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"", "lemma smcf_comp_ObjMap_app[smc_cs_simps]:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" \n    and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n    and [simp]: \"a \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>\"\n  shows \"(\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> = \\<GG>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>\\<rparr>\"", "lemma smcf_comp_ArrMap_vsv[smc_cs_intros]: \n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"vsv ((\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF>)\\<lparr>ArrMap\\<rparr>)\"", "lemma smcf_comp_ArrMap_vdomain[smc_cs_simps]:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<D>\\<^sub>\\<circ> ((\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF>)\\<lparr>ArrMap\\<rparr>) = \\<AA>\\<lparr>Arr\\<rparr>\"", "lemma smcf_comp_ArrMap_vrange:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<R>\\<^sub>\\<circ> ((\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF>)\\<lparr>ArrMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\"", "lemma smcf_comp_ArrMap_app[smc_cs_simps]:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" \n    and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n    and [simp]: \"f \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Arr\\<rparr>\"\n  shows \"(\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = \\<GG>\\<lparr>ArrMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\\<rparr>\"", "lemma smcf_comp_is_semifunctor[smc_cs_intros]:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"", "lemma smcf_comp_assoc[smc_cs_simps]:\n  assumes \"\\<HH> : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\" \n    and \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" \n    and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"(\\<HH> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<GG>) \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF> = \\<HH> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F (\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF>)\"", "lemma op_smcf_smcf_comp[smc_op_simps]: \n  \"op_smcf (\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF>) = op_smcf \\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F op_smcf \\<FF>\"", "lemma smcf_cn_comp_components:\n  shows \"(\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ObjMap\\<rparr> = \\<GG>\\<lparr>ObjMap\\<rparr> \\<circ>\\<^sub>\\<circ> \\<FF>\\<lparr>ObjMap\\<rparr>\"\n    and \"(\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ArrMap\\<rparr> = \\<GG>\\<lparr>ArrMap\\<rparr> \\<circ>\\<^sub>\\<circ> \\<FF>\\<lparr>ArrMap\\<rparr>\"\n    and [smc_cn_cs_simps]: \"(\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>HomDom\\<rparr> = op_smc (\\<FF>\\<lparr>HomDom\\<rparr>)\"\n    and [smc_cn_cs_simps]: \"(\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>HomCod\\<rparr> = \\<GG>\\<lparr>HomCod\\<rparr>\"", "lemma smcf_dghm_smcf_cn_comp[slicing_commute]: \n  \"smcf_dghm \\<GG> \\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\\<circ> smcf_dghm \\<FF> = smcf_dghm (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\"", "lemma smcf_cn_comp_ObjMap_vsv[smc_cn_cs_intros]: \n  assumes \"\\<GG> : \\<BB> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"vsv ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ObjMap\\<rparr>)\"", "lemma smcf_cn_comp_ObjMap_vdomain[smc_cn_cs_simps]:\n  assumes \"\\<GG> : \\<BB> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<D>\\<^sub>\\<circ> ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ObjMap\\<rparr>) = \\<AA>\\<lparr>Obj\\<rparr>\"", "lemma smcf_cn_comp_ObjMap_vrange:\n  assumes \"\\<GG> : \\<BB> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<R>\\<^sub>\\<circ> ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ObjMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"", "lemma smcf_cn_comp_ObjMap_app[smc_cn_cs_simps]:\n  assumes \"\\<GG> : \\<BB> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"a \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>\"\n  shows \"(\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> = \\<GG>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>\\<rparr>\"", "lemma smcf_cn_comp_ArrMap_vsv[smc_cn_cs_intros]: \n  assumes \"\\<GG> : \\<BB> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"vsv ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ArrMap\\<rparr>)\"", "lemma smcf_cn_comp_ArrMap_vdomain[smc_cn_cs_simps]:\n  assumes \"\\<GG> : \\<BB> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<D>\\<^sub>\\<circ> ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ArrMap\\<rparr>) = \\<AA>\\<lparr>Arr\\<rparr>\"", "lemma smcf_cn_comp_ArrMap_vrange:\n  assumes \"\\<GG> : \\<BB> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<R>\\<^sub>\\<circ> ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ArrMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\"", "lemma smcf_cn_comp_ArrMap_app[smc_cn_cs_simps]:\n  assumes \"\\<GG> : \\<BB> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"a \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Arr\\<rparr>\"\n  shows \"(\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> = \\<GG>\\<lparr>ArrMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>\\<rparr>\"", "lemma smcf_cn_cov_comp_ObjMap_vsv[smc_cn_cs_intros]: \n  assumes \"\\<GG> : \\<BB> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"vsv ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ObjMap\\<rparr>)\"", "lemma smcf_cn_cov_comp_ObjMap_vdomain[smc_cn_cs_simps]:\n  assumes \"\\<GG> : \\<BB> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<D>\\<^sub>\\<circ> ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ObjMap\\<rparr>) = \\<AA>\\<lparr>Obj\\<rparr>\"", "lemma smcf_cn_cov_comp_ObjMap_vrange:\n  assumes \"\\<GG> : \\<BB> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<R>\\<^sub>\\<circ> ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ObjMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"", "lemma smcf_cn_cov_comp_ObjMap_app[smc_cn_cs_simps]:\n    assumes \"\\<GG> : \\<BB> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"a \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>\"\n  shows \"(\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> = \\<GG>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>\\<rparr>\"", "lemma smcf_cn_cov_comp_ArrMap_vsv[smc_cn_cs_intros]: \n  assumes \"\\<GG> : \\<BB> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"vsv ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ArrMap\\<rparr>)\"", "lemma smcf_cn_cov_comp_ArrMap_vdomain[smc_cn_cs_simps]:\n  assumes \"\\<GG> : \\<BB> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<D>\\<^sub>\\<circ> ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ArrMap\\<rparr>) = \\<AA>\\<lparr>Arr\\<rparr>\"", "lemma smcf_cn_cov_comp_ArrMap_vrange:\n  assumes \"\\<GG> : \\<BB> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<R>\\<^sub>\\<circ> ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ArrMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\"", "lemma smcf_cn_cov_comp_ArrMap_app[smc_cn_cs_simps]:\n  assumes \"\\<GG> : \\<BB> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"f \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Arr\\<rparr>\"\n  shows \"(\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = \\<GG>\\<lparr>ArrMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\\<rparr>\"", "lemma op_smcf_smcf_cn_comp[smc_op_simps]: \n  \"op_smcf (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>) = op_smcf \\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> op_smcf \\<FF>\"", "lemma smcf_cn_comp_is_semifunctor[smc_cn_cs_intros]:\n  \\<comment>\\<open>See section 1.2 in \\cite{bodo_categories_1970}.\\<close>\n  assumes \"semicategory \\<alpha> \\<AA>\" and \"\\<GG> : \\<BB> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"", "lemma smcf_cn_cov_comp_is_semifunctor[smc_cs_intros]:\n  \\<comment>\\<open>See section 1.2 in \\cite{bodo_categories_1970}.\\<close>\n  assumes \"\\<GG> : \\<BB> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF> : \\<AA> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"", "lemma smcf_cov_cn_comp_is_semifunctor[smc_cn_cs_intros]:\n  \\<comment>\\<open>See section 1.2 in \\cite{bodo_categories_1970}.\\<close>\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF> : \\<AA> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"", "lemma smcf_dghm_smcf_id[slicing_commute]: \n  \"dghm_id (smc_dg \\<CC>) = smcf_dghm (smcf_id \\<CC>)\"", "lemmas_with [unfolded slicing_simps]:\n  smc_dghm_id_is_dghm = dg.dg_dghm_id_is_dghm", "lemmas [smc_cs_simps] = dghm_id_ObjMap_app", "lemmas [smc_cs_simps] = dghm_id_ArrMap_app", "lemma op_smcf_smcf_id[smc_op_simps]: \"op_smcf (smcf_id \\<CC>) = smcf_id (op_smc \\<CC>)\"", "lemma (in semicategory) smc_smcf_id_is_semifunctor: \"smcf_id \\<CC> : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"", "lemma (in semicategory) smc_smcf_id_is_semifunctor': \n  assumes \"\\<AA> = \\<CC>\" and \"\\<BB> = \\<CC>\"\n  shows \"smcf_id \\<CC> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"", "lemmas [smc_cs_intros] = semicategory.smc_smcf_id_is_semifunctor'", "lemma (in is_semifunctor) smcf_smcf_comp_smcf_id_left[smc_cs_simps]:\n  \\<comment>\\<open>See Chapter I-3 in \\cite{mac_lane_categories_2010}).\\<close>\n  \"smcf_id \\<BB> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF> = \\<FF>\"", "lemmas [smc_cs_simps] = is_semifunctor.smcf_smcf_comp_smcf_id_left", "lemma (in is_semifunctor) smcf_smcf_comp_smcf_id_right[smc_cs_simps]: \n  \\<comment>\\<open>See Chapter I-3 in \\cite{mac_lane_categories_2010}).\\<close>\n  \"\\<FF> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F smcf_id \\<AA> = \\<FF>\"", "lemmas [smc_cs_simps] = is_semifunctor.smcf_smcf_comp_smcf_id_right", "lemma smcf_dghm_smcf_const[slicing_commute]: \n  \"dghm_const (smc_dg \\<CC>) (smc_dg \\<DD>) a f = smcf_dghm (smcf_const \\<CC> \\<DD> a f)\"", "lemmas [smc_cs_simps] = \n  dghm_const_ObjMap_app", "lemmas [smc_cs_simps] = \n  dghm_const_ArrMap_app", "lemma op_smcf_smcf_const[smc_op_simps]:\n  \"op_smcf (smcf_const \\<CC> \\<DD> a f) = smcf_const (op_smc \\<CC>) (op_smc \\<DD>) a f\"", "lemma smcf_const_is_semifunctor: \n  assumes \"semicategory \\<alpha> \\<CC>\"\n    and \"semicategory \\<alpha> \\<DD>\" \n    and \"f : a \\<mapsto>\\<^bsub>\\<DD>\\<^esub> a\" \n    and [simp]: \"f \\<circ>\\<^sub>A\\<^bsub>\\<DD>\\<^esub> f = f\"\n  shows \"smcf_const \\<CC> \\<DD> a f : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\"", "lemma smcf_const_is_semifunctor'[smc_cs_intros]: \n  assumes \"semicategory \\<alpha> \\<CC>\" \n    and \"semicategory \\<alpha> \\<DD>\" \n    and \"f : a \\<mapsto>\\<^bsub>\\<DD>\\<^esub> a\"\n    and \"f \\<circ>\\<^sub>A\\<^bsub>\\<DD>\\<^esub> f = f\"\n    and \"\\<AA> = \\<CC>\"\n    and \"\\<BB> = \\<DD>\"\n  shows \"smcf_const \\<CC> \\<DD> a f : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"", "lemma (in is_ft_semifunctor) ft_smcf_is_ft_dghm'[slicing_intros]:\n  assumes \"\\<AA>' = smc_dg \\<AA>\" and \"\\<BB>' = smc_dg \\<BB>\"\n  shows \"smcf_dghm \\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>'\"", "lemmas [slicing_intros] = is_ft_semifunctor.ft_smcf_is_ft_dghm'", "lemma (in is_ft_semifunctor) is_ft_semifunctor_axioms'[smcf_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<AA>' = \\<AA>\" and \"\\<BB>' = \\<BB>\"\n  shows \"\\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'\"", "lemmas [smcf_cs_intros] = is_ft_semifunctorD(1)", "lemma is_ft_semifunctorI':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n    and \"\\<And>a b. \\<lbrakk> a \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>; b \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr> \\<rbrakk> \\<Longrightarrow> v11 (\\<FF>\\<lparr>ArrMap\\<rparr> \\<restriction>\\<^sup>l\\<^sub>\\<circ> Hom \\<AA> a b)\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"", "lemma is_ft_semifunctorD':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n    and \"\\<And>a b. \\<lbrakk> a \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>; b \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr> \\<rbrakk> \\<Longrightarrow> v11 (\\<FF>\\<lparr>ArrMap\\<rparr> \\<restriction>\\<^sup>l\\<^sub>\\<circ> Hom \\<AA> a b)\"", "lemma is_ft_semifunctorE':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  obtains \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n    and \"\\<And>a b. \\<lbrakk> a \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>; b \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr> \\<rbrakk> \\<Longrightarrow> v11 (\\<FF>\\<lparr>ArrMap\\<rparr> \\<restriction>\\<^sup>l\\<^sub>\\<circ> Hom \\<AA> a b)\"", "lemmas_with [unfolded slicing_simps]:\n  ft_smcf_v11_on_Hom = dghm.ft_dghm_v11_on_Hom", "lemma (in is_ft_semifunctor) is_ft_semifunctor_op: \n  \"op_smcf \\<FF> : op_smc \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> op_smc \\<BB>\"", "lemma (in is_ft_semifunctor) is_ft_semifunctor_op'[smc_op_intros]: \n  assumes \"\\<AA>' = op_smc \\<AA>\" and \"\\<BB>' = op_smc \\<BB>\"\n  shows \"op_smcf \\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>'\"", "lemmas is_ft_semifunctor_op[smc_op_intros] = \n  is_ft_semifunctor.is_ft_semifunctor_op'", "lemma smcf_comp_is_ft_semifunctor[smcf_cs_intros]:\n  \\<comment>\\<open>See Chapter I-3 in \\cite{mac_lane_categories_2010}.\\<close>\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"", "lemma (in is_fl_semifunctor) fl_smcf_is_fl_dghm'[slicing_intros]:\n  assumes \"\\<AA>' = smc_dg \\<AA>\" and \"\\<BB>' = smc_dg \\<BB>\"\n  shows \"smcf_dghm \\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>'\"", "lemmas [slicing_intros] = is_fl_semifunctor.fl_smcf_is_fl_dghm'", "lemmas [smcf_cs_intros] = is_fl_semifunctorD(1)", "lemma is_fl_semifunctorI':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n    and \"\\<And>a b. \\<lbrakk> a \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>; b \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr> \\<rbrakk> \\<Longrightarrow>\n      \\<FF>\\<lparr>ArrMap\\<rparr> `\\<^sub>\\<circ> (Hom \\<AA> a b) = Hom \\<BB> (\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>) (\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>)\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"", "lemma is_fl_semifunctorD':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n    and \"\\<And>a b. \\<lbrakk> a \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>; b \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr> \\<rbrakk> \\<Longrightarrow> \n      \\<FF>\\<lparr>ArrMap\\<rparr> `\\<^sub>\\<circ> (Hom \\<AA> a b) = Hom \\<BB> (\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>) (\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>)\"", "lemma is_fl_semifunctorE':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  obtains \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n    and \"\\<And>a b. \\<lbrakk> a \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>; b \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr> \\<rbrakk> \\<Longrightarrow> \n      \\<FF>\\<lparr>ArrMap\\<rparr> `\\<^sub>\\<circ> (Hom \\<AA> a b) = Hom \\<BB> (\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>) (\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>)\"", "lemmas_with [unfolded slicing_simps]:\n  fl_smcf_surj_on_Hom = dghm.fl_dghm_surj_on_Hom", "lemma (in is_fl_semifunctor) is_fl_semifunctor_op: \n  \"op_smcf \\<FF> : op_smc \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> op_smc \\<BB>\"", "lemma (in is_fl_semifunctor) is_fl_semifunctor_op'[smc_op_intros]: \n  assumes \"\\<AA>' = op_smc \\<AA>\" and \"\\<BB>' = op_smc \\<BB>\"\n  shows \"op_smcf \\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>'\"", "lemmas is_fl_semifunctor_op[smc_op_intros] = \n  is_fl_semifunctor.is_fl_semifunctor_op", "lemma smcf_comp_is_fl_semifunctor[smcf_cs_intros]:\n  \\<comment>\\<open>See Chapter I-3 in \\cite{mac_lane_categories_2010}.\\<close>\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n  shows \"\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"", "lemmas [smcf_cs_intros] = is_ff_semifunctorD", "lemma (in is_ff_semifunctor) ff_smcf_is_ff_dghm:\n  \"smcf_dghm \\<FF> : smc_dg \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>f\\<^bsub>\\<alpha>\\<^esub> smc_dg \\<BB>\"", "lemma (in is_ff_semifunctor) ff_smcf_is_ff_dghm'[slicing_intros]:\n  assumes \"\\<AA>' = smc_dg \\<AA>\" and \"\\<BB>' = smc_dg \\<BB>\"\n  shows \"smcf_dghm \\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>f\\<^bsub>\\<alpha>\\<^esub> \\<BB>'\"", "lemmas [slicing_intros] = is_ff_semifunctor.ff_smcf_is_ff_dghm'", "lemma (in is_ff_semifunctor) is_ff_semifunctor_op: \n  \"op_smcf \\<FF> : op_smc \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>f\\<^bsub>\\<alpha>\\<^esub> op_smc \\<BB>\"", "lemma (in is_ff_semifunctor) is_ff_semifunctor_op'[smc_op_intros]: \n  assumes \"\\<AA>' = op_smc \\<AA>\" and \"\\<BB>' = op_smc \\<BB>\"\n  shows \"op_smcf \\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>f\\<^bsub>\\<alpha>\\<^esub> \\<BB>'\"", "lemmas is_ff_semifunctor_op[smc_op_intros] = \n  is_ff_semifunctor.is_ff_semifunctor_op'", "lemma smcf_comp_is_ff_semifunctor[smcf_cs_intros]:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>f\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>f\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>f\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"", "lemma (in is_iso_semifunctor) iso_smcf_is_iso_dghm'[slicing_intros]:\n  assumes \"\\<AA>' = smc_dg \\<AA>\" \"\\<BB>' = smc_dg \\<BB>\"\n  shows \"smcf_dghm \\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>'\"", "lemmas [slicing_intros] = is_iso_semifunctor.iso_smcf_is_iso_dghm'", "lemma (in is_iso_semifunctor) is_iso_semifunctor_axioms'[smcf_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<AA>' = \\<AA>\" and \"\\<BB>' = \\<BB>\"\n  shows \"\\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'\"", "lemma is_iso_semifunctorI':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n    and \"v11 (\\<FF>\\<lparr>ObjMap\\<rparr>)\"\n    and \"v11 (\\<FF>\\<lparr>ArrMap\\<rparr>)\"\n    and \"\\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = \\<BB>\\<lparr>Obj\\<rparr>\"\n    and \"\\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) = \\<BB>\\<lparr>Arr\\<rparr>\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"", "lemma is_iso_semifunctorD':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n    and \"v11 (\\<FF>\\<lparr>ObjMap\\<rparr>)\"\n    and \"v11 (\\<FF>\\<lparr>ArrMap\\<rparr>)\"\n    and \"\\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = \\<BB>\\<lparr>Obj\\<rparr>\"\n    and \"\\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) = \\<BB>\\<lparr>Arr\\<rparr>\"", "lemma is_iso_semifunctorE':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  obtains \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n    and \"v11 (\\<FF>\\<lparr>ObjMap\\<rparr>)\"\n    and \"v11 (\\<FF>\\<lparr>ArrMap\\<rparr>)\"\n    and \"\\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = \\<BB>\\<lparr>Obj\\<rparr>\"\n    and \"\\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) = \\<BB>\\<lparr>Arr\\<rparr>\"", "lemmas_with [unfolded slicing_simps]:\n  iso_smcf_ObjMap_vrange[smcf_cs_simps] = dghm.iso_dghm_ObjMap_vrange\n  and iso_smcf_ArrMap_vrange[smcf_cs_simps] = dghm.iso_dghm_ArrMap_vrange", "lemmas_with [unfolded slicing_simps]:\n  iso_smcf_Obj_HomDom_if_Obj_HomCod[elim] = \n    dghm.iso_dghm_Obj_HomDom_if_Obj_HomCod\n  and iso_smcf_Arr_HomDom_if_Arr_HomCod[elim] = \n    dghm.iso_dghm_Arr_HomDom_if_Arr_HomCod\n  and iso_smcf_ObjMap_eqE[elim] = dghm.iso_dghm_ObjMap_eqE\n  and iso_smcf_ArrMap_eqE[elim] = dghm.iso_dghm_ArrMap_eqE", "lemmas (in is_iso_semifunctor) iso_smcf_is_ff_semifunctor = \n  is_ff_semifunctor_axioms", "lemmas [smcf_cs_intros] = is_iso_semifunctor.iso_smcf_is_ff_semifunctor", "lemma (in is_iso_semifunctor) is_iso_semifunctor_op: \n  \"op_smcf \\<FF> : op_smc \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> op_smc \\<BB>\"", "lemmas is_iso_semifunctor_op[smc_op_intros] =\n  is_iso_semifunctor.is_iso_semifunctor_op", "lemma smcf_comp_is_iso_semifunctor[smcf_cs_intros]:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"", "lemmas [smc_cs_simps] = inv_dghm_components(3,4)", "lemma dghm_inv_smcf[slicing_commute]: \n  \"inv_dghm (smcf_dghm \\<FF>) = smcf_dghm (inv_smcf \\<FF>)\"", "lemmas_with [unfolded slicing_simps slicing_commute]:\n  inv_smcf_ObjMap_v11 = dghm.inv_dghm_ObjMap_v11\n  and inv_smcf_ObjMap_vdomain = dghm.inv_dghm_ObjMap_vdomain\n  and inv_smcf_ObjMap_app = dghm.inv_dghm_ObjMap_app\n  and inv_smcf_ObjMap_vrange = dghm.inv_dghm_ObjMap_vrange\n  and inv_smcf_ArrMap_v11 = dghm.inv_dghm_ArrMap_v11\n  and inv_smcf_ArrMap_vdomain = dghm.inv_dghm_ArrMap_vdomain\n  and inv_smcf_ArrMap_app = dghm.inv_dghm_ArrMap_app\n  and inv_smcf_ArrMap_vrange = dghm.inv_dghm_ArrMap_vrange\n  and iso_smcf_ObjMap_inv_smcf_ObjMap_app =\n    dghm.iso_dghm_ObjMap_inv_dghm_ObjMap_app\n  and iso_smcf_ArrMap_inv_smcf_ArrMap_app = \n    dghm.iso_dghm_ArrMap_inv_dghm_ArrMap_app\n  and iso_smcf_HomDom_is_arr_conv = dghm.iso_dghm_HomDom_is_arr_conv\n  and iso_smcf_HomCod_is_arr_conv = dghm.iso_dghm_HomCod_is_arr_conv", "lemmas [smcf_cs_intros] = \n  is_iso_semifunctor.inv_smcf_ObjMap_v11\n  is_iso_semifunctor.inv_smcf_ArrMap_v11", "lemmas [smcf_cs_simps] = \n  is_iso_semifunctor.inv_smcf_ObjMap_vdomain\n  is_iso_semifunctor.inv_smcf_ObjMap_app\n  is_iso_semifunctor.inv_smcf_ObjMap_vrange\n  is_iso_semifunctor.inv_smcf_ArrMap_vdomain\n  is_iso_semifunctor.inv_smcf_ArrMap_app\n  is_iso_semifunctor.inv_smcf_ArrMap_vrange\n  is_iso_semifunctor.iso_smcf_ObjMap_inv_smcf_ObjMap_app\n  is_iso_semifunctor.iso_smcf_ArrMap_inv_smcf_ArrMap_app", "lemma is_arr_isomorphism_is_iso_semifunctor:\n  \\<comment>\\<open>See Chapter I-3 in \\cite{mac_lane_categories_2010}.\\<close>\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n    and \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\"\n    and \"\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF> = smcf_id \\<AA>\"\n    and \"\\<FF> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<GG> = smcf_id \\<BB>\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"", "lemma is_iso_semifunctor_is_arr_isomorphism:\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows [smcf_cs_intros]: \"inv_smcf \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<AA>\"\n    and \"inv_smcf \\<FF> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF> = smcf_id \\<AA>\"\n    and \"\\<FF> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F inv_smcf \\<FF> = smcf_id \\<BB>\"", "lemma (in semicategory) smc_smcf_id_is_iso_semifunctor: \n  \"smcf_id \\<CC> : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"", "lemma (in semicategory) smc_smcf_id_is_iso_semifunctor'[smcf_cs_intros]: \n  assumes \"\\<AA>' = \\<CC>\" and \"\\<BB>' = \\<CC>\"\n  shows \"smcf_id \\<CC> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>'\"", "lemmas [smcf_cs_intros] = semicategory.smc_smcf_id_is_iso_semifunctor'", "lemma iso_semicategoryI:\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n  shows \"\\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"", "lemma iso_semicategoryD[dest]:\n  assumes \"\\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n  shows \"\\<exists>\\<FF>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"", "lemma iso_semicategoryE[elim]:\n  assumes \"\\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n  obtains \\<FF> where \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"", "lemma (in iso_semicategory) iso_smc_iso_digraph: \"smc_dg \\<AA> \\<approx>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg \\<BB>\"", "lemma iso_semicategory_refl: \n  assumes \"semicategory \\<alpha> \\<AA>\" \n  shows \"\\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\"", "lemma iso_semicategory_sym[sym]:\n  assumes \"\\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n  shows \"\\<BB> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\"", "lemma iso_semicategory_trans[trans]:\n  assumes \"\\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"\\<BB> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" \n  shows \"\\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\""], "translations": [["", "lemmas [smc_cs_simps] = dg_shared_cs_simps"], ["", "lemmas [smc_cs_intros] = dg_shared_cs_intros"], ["", "subsubsection\\<open>Slicing\\<close>"], ["", "definition smcf_dghm :: \"V \\<Rightarrow> V\"\n  where \"smcf_dghm \\<CC> = \n    [\\<CC>\\<lparr>ObjMap\\<rparr>, \\<CC>\\<lparr>ArrMap\\<rparr>, smc_dg (\\<CC>\\<lparr>HomDom\\<rparr>), smc_dg (\\<CC>\\<lparr>HomCod\\<rparr>)]\\<^sub>\\<circ>\""], ["", "text\\<open>Components.\\<close>"], ["", "lemma smcf_dghm_components:\n  shows [slicing_simps]: \"smcf_dghm \\<FF>\\<lparr>ObjMap\\<rparr> = \\<FF>\\<lparr>ObjMap\\<rparr>\"\n    and [slicing_simps]: \"smcf_dghm \\<FF>\\<lparr>ArrMap\\<rparr> = \\<FF>\\<lparr>ArrMap\\<rparr>\"\n    and [slicing_commute]: \"smcf_dghm \\<FF>\\<lparr>HomDom\\<rparr> = smc_dg (\\<FF>\\<lparr>HomDom\\<rparr>)\"\n    and [slicing_commute]: \"smcf_dghm \\<FF>\\<lparr>HomCod\\<rparr> = smc_dg (\\<FF>\\<lparr>HomCod\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (smcf_dghm \\<FF>\\<lparr>ObjMap\\<rparr> = \\<FF>\\<lparr>ObjMap\\<rparr> &&&\n     smcf_dghm \\<FF>\\<lparr>ArrMap\\<rparr> =\n     \\<FF>\\<lparr>ArrMap\\<rparr>) &&&\n    smcf_dghm \\<FF>\\<lparr>HomDom\\<rparr> =\n    smc_dg (\\<FF>\\<lparr>HomDom\\<rparr>) &&&\n    smcf_dghm \\<FF>\\<lparr>HomCod\\<rparr> =\n    smc_dg (\\<FF>\\<lparr>HomCod\\<rparr>)", "unfolding smcf_dghm_def dghm_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      smc_dg (\\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n      smc_dg\n       (\\<FF>\\<lparr>3\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n     \\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> &&&\n     [\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      smc_dg (\\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n      smc_dg\n       (\\<FF>\\<lparr>3\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> =\n     \\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>) &&&\n    [\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     \\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     smc_dg (\\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n     smc_dg\n      (\\<FF>\\<lparr>3\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr> =\n    smc_dg (\\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>) &&&\n    [\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     \\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     smc_dg (\\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n     smc_dg\n      (\\<FF>\\<lparr>3\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr> =\n    smc_dg (\\<FF>\\<lparr>3\\<^sub>\\<nat>\\<rparr>)", "by (auto simp: nat_omega_simps)"], ["", "subsection\\<open>Definition and elementary properties\\<close>"], ["", "text\\<open>\nSee Chapter I-3 in \\cite{mac_lane_categories_2010} and the description\nof the concept of a digraph homomorphism in the previous chapter.\n\\<close>"], ["", "locale is_semifunctor = \n  \\<Z> \\<alpha> +\n  vfsequence \\<FF> + \n  HomDom: semicategory \\<alpha> \\<AA> + \n  HomCod: semicategory \\<alpha> \\<BB> \n  for \\<alpha> \\<AA> \\<BB> \\<FF> +\n  assumes smcf_length[smc_cs_simps]: \"vcard \\<FF> = 4\\<^sub>\\<nat>\" \n    and smcf_is_dghm[slicing_intros]: \n      \"smcf_dghm \\<FF> : smc_dg \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg \\<BB>\" \n    and smcf_HomDom[smc_cs_simps]: \"\\<FF>\\<lparr>HomDom\\<rparr> = \\<AA>\"\n    and smcf_HomCod[smc_cs_simps]: \"\\<FF>\\<lparr>HomCod\\<rparr> = \\<BB>\"\n    and smcf_ArrMap_Comp[smc_cs_simps]: \"\\<lbrakk> g : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> c; f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b \\<rbrakk> \\<Longrightarrow>\n      \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f\\<rparr> = \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\""], ["", "syntax \"_is_semifunctor\" :: \"V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> bool\"\n  (\\<open>(_ :/ _ \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<index> _)\\<close> [51, 51, 51] 51)"], ["", "translations \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \\<rightleftharpoons> \"CONST is_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>\""], ["", "abbreviation (input) is_cn_semifunctor :: \"V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> bool\"\n  where \"is_cn_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF> \\<equiv> \\<FF> : op_smc \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["", "syntax \"_is_cn_semifunctor\" :: \"V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> bool\" \n  (\\<open>(_ :/ _ \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<index> _)\\<close> [51, 51, 51] 51)"], ["", "translations \"\\<FF> : \\<AA> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \\<rightharpoonup> \"CONST is_cn_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>\""], ["", "abbreviation all_smcfs :: \"V \\<Rightarrow> V\"\n  where \"all_smcfs \\<alpha> \\<equiv> set {\\<FF>. \\<exists>\\<AA> \\<BB>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>}\""], ["", "abbreviation smcfs :: \"V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V\"\n  where \"smcfs \\<alpha> \\<AA> \\<BB> \\<equiv> set {\\<FF>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>}\""], ["", "lemmas [smc_cs_simps] =\n  is_semifunctor.smcf_HomDom\n  is_semifunctor.smcf_HomCod\n  is_semifunctor.smcf_ArrMap_Comp"], ["", "lemma smcf_is_dghm'[slicing_intros]:\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n    and \"\\<AA>' = smc_dg \\<AA>\"\n    and \"\\<BB>' = smc_dg \\<BB>\"\n  shows \"smcf_dghm \\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<BB>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm \\<FF> :\n    \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<BB>'", "using assms(1)"], ["proof (prove)\nusing this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. smcf_dghm \\<FF> :\n    \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<BB>'", "unfolding assms(2,3)"], ["proof (prove)\nusing this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. smcf_dghm \\<FF> :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 \\<BB>", "by (rule is_semifunctor.smcf_is_dghm)"], ["", "lemma cn_dghm_comp_is_dghm: \n  assumes \"\\<FF> : op_smc \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"smcf_dghm \\<FF> : op_dg (smc_dg \\<AA>) \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm \\<FF> :\n    op_dg\n     (smc_dg\n       \\<AA>) \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                    \\<BB>", "using assms"], ["proof (prove)\nusing this:\n  \\<FF> :\n  op_smc\n   \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. smcf_dghm \\<FF> :\n    op_dg\n     (smc_dg\n       \\<AA>) \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                    \\<BB>", "unfolding slicing_simps slicing_commute"], ["proof (prove)\nusing this:\n  \\<FF> :\n  op_smc\n   \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. smcf_dghm \\<FF> :\n    smc_dg\n     (op_smc\n       \\<AA>) \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                    \\<BB>", "by (cs_concl cs_intro: slicing_intros)"], ["", "lemma cn_dghm_comp_is_dghm'[slicing_intros]: \n  assumes \"\\<FF> : op_smc \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n    and \"\\<AA>' = op_dg (smc_dg \\<AA>)\"\n    and \"\\<BB>' = smc_dg \\<BB>\"\n  shows \"smcf_dghm \\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<BB>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm \\<FF> :\n    \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<BB>'", "using assms(1)"], ["proof (prove)\nusing this:\n  \\<FF> :\n  op_smc\n   \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. smcf_dghm \\<FF> :\n    \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> \\<BB>'", "unfolding assms(2,3)"], ["proof (prove)\nusing this:\n  \\<FF> :\n  op_smc\n   \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. smcf_dghm \\<FF> :\n    op_dg\n     (smc_dg\n       \\<AA>) \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                    \\<BB>", "by (rule cn_dghm_comp_is_dghm)"], ["", "text\\<open>Rules.\\<close>"], ["", "lemma (in is_semifunctor) is_semifunctor_axioms'[smc_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<AA>' = \\<AA>\" and \"\\<BB>' = \\<BB>\"\n  shows \"\\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule is_semifunctor_axioms)"], ["", "mk_ide rf is_semifunctor_def[unfolded is_semifunctor_axioms_def]\n  |intro is_semifunctorI|\n  |dest is_semifunctorD[dest]|\n  |elim is_semifunctorE[elim]|"], ["", "lemmas [smc_cs_intros] =\n  is_semifunctorD(3,4)"], ["", "lemma is_semifunctorI':\n  assumes \"\\<Z> \\<alpha>\" \n    and \"vfsequence \\<FF>\" \n    and \"semicategory \\<alpha> \\<AA>\"\n    and \"semicategory \\<alpha> \\<BB>\" \n    and \"vcard \\<FF> = 4\\<^sub>\\<nat>\"\n    and \"\\<FF>\\<lparr>HomDom\\<rparr> = \\<AA>\"\n    and \"\\<FF>\\<lparr>HomCod\\<rparr> = \\<BB>\"\n    and \"vsv (\\<FF>\\<lparr>ObjMap\\<rparr>)\"\n    and \"vsv (\\<FF>\\<lparr>ArrMap\\<rparr>)\"\n    and \"\\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = \\<AA>\\<lparr>Obj\\<rparr>\"\n    and \"\\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\"\n    and \"\\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) = \\<AA>\\<lparr>Arr\\<rparr>\"\n    and \"\\<And>a b f. f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b \\<Longrightarrow>\n      \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> : \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> \\<mapsto>\\<^bsub>\\<BB>\\<^esub> \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\"\n    and \"\\<And>b c g a f. \\<lbrakk> g : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> c; f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b \\<rbrakk> \\<Longrightarrow>\n      \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f\\<rparr> = \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (intro is_semifunctorI is_dghmI, unfold smcf_dghm_components slicing_simps)\n    (simp_all add: assms smcf_dghm_def nat_omega_simps semicategory.smc_digraph)"], ["", "lemma is_semifunctorD':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<Z> \\<alpha>\" \n    and \"vfsequence \\<FF>\" \n    and \"semicategory \\<alpha> \\<AA>\"\n    and \"semicategory \\<alpha> \\<BB>\" \n    and \"vcard \\<FF> = 4\\<^sub>\\<nat>\"\n    and \"\\<FF>\\<lparr>HomDom\\<rparr> = \\<AA>\"\n    and \"\\<FF>\\<lparr>HomCod\\<rparr> = \\<BB>\"\n    and \"vsv (\\<FF>\\<lparr>ObjMap\\<rparr>)\"\n    and \"vsv (\\<FF>\\<lparr>ArrMap\\<rparr>)\"\n    and \"\\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = \\<AA>\\<lparr>Obj\\<rparr>\"\n    and \"\\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\"\n    and \"\\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) = \\<AA>\\<lparr>Arr\\<rparr>\"\n    and \"\\<And>a b f. f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b \\<Longrightarrow>\n      \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> : \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> \\<mapsto>\\<^bsub>\\<BB>\\<^esub> \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\"\n    and \"\\<And>b c g a f. \\<lbrakk> g : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> c; f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b \\<rbrakk> \\<Longrightarrow>\n      \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f\\<rparr> = \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<Z> \\<alpha> &&&\n      vfsequence \\<FF> &&& semicategory \\<alpha> \\<AA>) &&&\n     (semicategory \\<alpha> \\<BB> &&& vcard \\<FF> = 4\\<^sub>\\<nat>) &&&\n     \\<FF>\\<lparr>HomDom\\<rparr> = \\<AA> &&&\n     \\<FF>\\<lparr>HomCod\\<rparr> = \\<BB>) &&&\n    (vsv (\\<FF>\\<lparr>ObjMap\\<rparr>) &&&\n     vsv (\\<FF>\\<lparr>ArrMap\\<rparr>) &&&\n     \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) =\n     \\<AA>\\<lparr>Obj\\<rparr>) &&&\n    (\\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>)\n     \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr> &&&\n     \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) =\n     \\<AA>\\<lparr>Arr\\<rparr>) &&&\n    (\\<And>a b f.\n        f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b \\<Longrightarrow>\n        \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> : \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> \\<mapsto>\\<^bsub>\\<BB>\\<^esub> \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>) &&&\n    (\\<And>b c g a f.\n        \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> c;\n         f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\\<rbrakk>\n        \\<Longrightarrow> \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n                       f\\<rparr> =\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>)", "by\n    (\n      simp_all add: \n        is_semifunctorD(2-9)[OF assms] \n        is_dghmD[OF is_semifunctorD(6)[OF assms], unfolded slicing_simps]\n    )"], ["", "lemma is_semifunctorE':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  obtains \"\\<Z> \\<alpha>\" \n    and \"vfsequence \\<FF>\" \n    and \"semicategory \\<alpha> \\<AA>\"\n    and \"semicategory \\<alpha> \\<BB>\" \n    and \"vcard \\<FF> = 4\\<^sub>\\<nat>\"\n    and \"\\<FF>\\<lparr>HomDom\\<rparr> = \\<AA>\"\n    and \"\\<FF>\\<lparr>HomCod\\<rparr> = \\<BB>\"\n    and \"vsv (\\<FF>\\<lparr>ObjMap\\<rparr>)\"\n    and \"vsv (\\<FF>\\<lparr>ArrMap\\<rparr>)\"\n    and \"\\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = \\<AA>\\<lparr>Obj\\<rparr>\"\n    and \"\\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\"\n    and \"\\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) = \\<AA>\\<lparr>Arr\\<rparr>\"\n    and \"\\<And>a b f. f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b \\<Longrightarrow>\n      \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> : \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> \\<mapsto>\\<^bsub>\\<BB>\\<^esub> \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\"\n    and \"\\<And>b c g a f. \\<lbrakk> g : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> c; f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b \\<rbrakk> \\<Longrightarrow>\n      \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f\\<rparr> = \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>\\<Z> \\<alpha>; vfsequence \\<FF>; semicategory \\<alpha> \\<AA>;\n      semicategory \\<alpha> \\<BB>; vcard \\<FF> = 4\\<^sub>\\<nat>;\n      \\<FF>\\<lparr>HomDom\\<rparr> = \\<AA>;\n      \\<FF>\\<lparr>HomCod\\<rparr> = \\<BB>;\n      vsv (\\<FF>\\<lparr>ObjMap\\<rparr>); vsv (\\<FF>\\<lparr>ArrMap\\<rparr>);\n      \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) =\n      \\<AA>\\<lparr>Obj\\<rparr>;\n      \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>)\n      \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>;\n      \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) =\n      \\<AA>\\<lparr>Arr\\<rparr>;\n      \\<And>a b f.\n         f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b \\<Longrightarrow>\n         \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> : \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> \\<mapsto>\\<^bsub>\\<BB>\\<^esub> \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>;\n      \\<And>b c g a f.\n         \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> c;\n          f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\\<rbrakk>\n         \\<Longrightarrow> \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n                        f\\<rparr> =\n                           \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n                           \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>\\<Z> \\<alpha>; vfsequence \\<FF>; semicategory \\<alpha> \\<AA>;\n      semicategory \\<alpha> \\<BB>; vcard \\<FF> = 4\\<^sub>\\<nat>;\n      \\<FF>\\<lparr>HomDom\\<rparr> = \\<AA>;\n      \\<FF>\\<lparr>HomCod\\<rparr> = \\<BB>;\n      vsv (\\<FF>\\<lparr>ObjMap\\<rparr>); vsv (\\<FF>\\<lparr>ArrMap\\<rparr>);\n      \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) =\n      \\<AA>\\<lparr>Obj\\<rparr>;\n      \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>)\n      \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>;\n      \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) =\n      \\<AA>\\<lparr>Arr\\<rparr>;\n      \\<And>a b f.\n         f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b \\<Longrightarrow>\n         \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> : \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> \\<mapsto>\\<^bsub>\\<BB>\\<^esub> \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>;\n      \\<And>b c g a f.\n         \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> c;\n          f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\\<rbrakk>\n         \\<Longrightarrow> \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n                        f\\<rparr> =\n                           \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n                           \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (simp add: is_semifunctorD')"], ["", "text\\<open>Slicing.\\<close>"], ["", "context is_semifunctor\nbegin"], ["", "interpretation dghm: is_dghm \\<alpha> \\<open>smc_dg \\<AA>\\<close> \\<open>smc_dg \\<BB>\\<close> \\<open>smcf_dghm \\<FF>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm \\<FF> :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 \\<BB>", "by (rule smcf_is_dghm)"], ["", "sublocale ObjMap: vsv \\<open>\\<FF>\\<lparr>ObjMap\\<rparr>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (\\<FF>\\<lparr>ObjMap\\<rparr>)", "by (rule dghm.ObjMap.vsv_axioms[unfolded slicing_simps])"], ["", "sublocale ArrMap: vsv \\<open>\\<FF>\\<lparr>ArrMap\\<rparr>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (\\<FF>\\<lparr>ArrMap\\<rparr>)", "by (rule dghm.ArrMap.vsv_axioms[unfolded slicing_simps])"], ["", "lemmas_with [unfolded slicing_simps]:\n  smcf_ObjMap_vsv = dghm.dghm_ObjMap_vsv\n  and smcf_ArrMap_vsv = dghm.dghm_ArrMap_vsv\n  and smcf_ObjMap_vdomain[smc_cs_simps] = dghm.dghm_ObjMap_vdomain\n  and smcf_ObjMap_vrange = dghm.dghm_ObjMap_vrange\n  and smcf_ArrMap_vdomain[smc_cs_simps] = dghm.dghm_ArrMap_vdomain\n  and smcf_ArrMap_is_arr = dghm.dghm_ArrMap_is_arr\n  and smcf_ArrMap_is_arr''[smc_cs_intros] = dghm.dghm_ArrMap_is_arr''\n  and smcf_ArrMap_is_arr'[smc_cs_intros] = dghm.dghm_ArrMap_is_arr'\n  and smcf_ObjMap_app_in_HomCod_Obj[smc_cs_intros] = \n    dghm.dghm_ObjMap_app_in_HomCod_Obj\n  and smcf_ArrMap_vrange = dghm.dghm_ArrMap_vrange\n  and smcf_ArrMap_app_in_HomCod_Arr[smc_cs_intros] = \n    dghm.dghm_ArrMap_app_in_HomCod_Arr\n  and smcf_ObjMap_vsubset_Vset = dghm.dghm_ObjMap_vsubset_Vset\n  and smcf_ArrMap_vsubset_Vset = dghm.dghm_ArrMap_vsubset_Vset\n  and smcf_ObjMap_in_Vset = dghm.dghm_ObjMap_in_Vset\n  and smcf_ArrMap_in_Vset = dghm.dghm_ArrMap_in_Vset\n  and smcf_is_dghm_if_ge_Limit = dghm.dghm_is_dghm_if_ge_Limit\n  and smcf_is_arr_HomCod = dghm.dghm_is_arr_HomCod\n  and smcf_vimage_dghm_ArrMap_vsubset_Hom = \n    dghm.dghm_vimage_dghm_ArrMap_vsubset_Hom"], ["", "end"], ["", "lemmas [smc_cs_simps] =\n  is_semifunctor.smcf_ObjMap_vdomain\n  is_semifunctor.smcf_ArrMap_vdomain"], ["", "lemmas [smc_cs_intros] =\n  is_semifunctor.smcf_ObjMap_app_in_HomCod_Obj\n  is_semifunctor.smcf_ArrMap_app_in_HomCod_Arr\n  is_semifunctor.smcf_ArrMap_is_arr'"], ["", "text\\<open>Elementary properties.\\<close>"], ["", "lemma cn_smcf_ArrMap_Comp[smc_cs_simps]:\n  assumes \"semicategory \\<alpha> \\<AA>\"\n    and \"\\<FF> : op_smc \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n    and \"g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\"\n    and \"f : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> a\"\n  shows \"\\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> g\\<rparr> = \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n g\\<rparr> =\n    \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n    \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n g\\<rparr> =\n    \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n    \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "from assms(3,4)"], ["proof (chain)\npicking this:\n  g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> a", "have gf:\n    \"\\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<AA>\\<^esub> f\\<rparr>\""], ["proof (prove)\nusing this:\n  g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> a\n\ngoal (1 subgoal):\n 1. \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n    \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<AA>\\<^esub>\n f\\<rparr>", "by\n      (\n        force\n          intro: is_semifunctor.smcf_ArrMap_Comp[OF assms(2), symmetric]\n          simp: slicing_simps smc_op_simps\n      )"], ["proof (state)\nthis:\n  \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n  \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n  \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<AA>\\<^esub>\n                                     f\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n g\\<rparr> =\n    \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n    \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "from assms"], ["proof (chain)\npicking this:\n  semicategory \\<alpha> \\<AA>\n  \\<FF> :\n  op_smc\n   \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> a", "show ?thesis"], ["proof (prove)\nusing this:\n  semicategory \\<alpha> \\<AA>\n  \\<FF> :\n  op_smc\n   \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> a\n\ngoal (1 subgoal):\n 1. \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n g\\<rparr> =\n    \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n    \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "unfolding gf"], ["proof (prove)\nusing this:\n  semicategory \\<alpha> \\<AA>\n  \\<FF> :\n  op_smc\n   \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> a\n\ngoal (1 subgoal):\n 1. \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n g\\<rparr> =\n    \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<AA>\\<^esub>\n f\\<rparr>", "by (cs_concl cs_simp: smc_op_simps)"], ["proof (state)\nthis:\n  \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n                                     g\\<rparr> =\n  \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n  \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smcf_eqI:\n  assumes \"\\<GG> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n    and \"\\<FF> : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\"\n    and \"\\<GG>\\<lparr>ObjMap\\<rparr> = \\<FF>\\<lparr>ObjMap\\<rparr>\"\n    and \"\\<GG>\\<lparr>ArrMap\\<rparr> = \\<FF>\\<lparr>ArrMap\\<rparr>\"\n    and \"\\<AA> = \\<CC>\"\n    and \"\\<BB> = \\<DD>\"\n  shows \"\\<GG> = \\<FF>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> = \\<FF>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<GG> = \\<FF>", "interpret L: is_semifunctor \\<alpha> \\<AA> \\<BB> \\<GG>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<GG> = \\<FF>", "interpret R: is_semifunctor \\<alpha> \\<CC> \\<DD> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<GG> = \\<FF>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> = \\<FF>", "proof(rule vsv_eqI)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv \\<GG>\n 2. vsv \\<FF>\n 3. \\<D>\\<^sub>\\<circ> \\<GG> = \\<D>\\<^sub>\\<circ> \\<FF>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> \\<GG> \\<Longrightarrow>\n       \\<GG>\\<lparr>a\\<rparr> = \\<FF>\\<lparr>a\\<rparr>", "have dom: \"\\<D>\\<^sub>\\<circ> \\<GG> = 4\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> \\<GG> = 4\\<^sub>\\<nat>", "by (cs_concl cs_simp: smc_cs_simps V_cs_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> \\<GG> = 4\\<^sub>\\<nat>\n\ngoal (4 subgoals):\n 1. vsv \\<GG>\n 2. vsv \\<FF>\n 3. \\<D>\\<^sub>\\<circ> \\<GG> = \\<D>\\<^sub>\\<circ> \\<FF>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> \\<GG> \\<Longrightarrow>\n       \\<GG>\\<lparr>a\\<rparr> = \\<FF>\\<lparr>a\\<rparr>", "show \"\\<D>\\<^sub>\\<circ> \\<GG> = \\<D>\\<^sub>\\<circ> \\<FF>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> \\<GG> = \\<D>\\<^sub>\\<circ> \\<FF>", "by (cs_concl cs_simp: smc_cs_simps V_cs_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> \\<GG> = \\<D>\\<^sub>\\<circ> \\<FF>\n\ngoal (3 subgoals):\n 1. vsv \\<GG>\n 2. vsv \\<FF>\n 3. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> \\<GG> \\<Longrightarrow>\n       \\<GG>\\<lparr>a\\<rparr> = \\<FF>\\<lparr>a\\<rparr>", "from assms(5,6)"], ["proof (chain)\npicking this:\n  \\<AA> = \\<CC>\n  \\<BB> = \\<DD>", "have sup: \"\\<GG>\\<lparr>HomDom\\<rparr> = \\<FF>\\<lparr>HomDom\\<rparr>\" \"\\<GG>\\<lparr>HomCod\\<rparr> = \\<FF>\\<lparr>HomCod\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<AA> = \\<CC>\n  \\<BB> = \\<DD>\n\ngoal (1 subgoal):\n 1. \\<GG>\\<lparr>HomDom\\<rparr> = \\<FF>\\<lparr>HomDom\\<rparr> &&&\n    \\<GG>\\<lparr>HomCod\\<rparr> = \\<FF>\\<lparr>HomCod\\<rparr>", "by (simp_all add: smc_cs_simps)"], ["proof (state)\nthis:\n  \\<GG>\\<lparr>HomDom\\<rparr> = \\<FF>\\<lparr>HomDom\\<rparr>\n  \\<GG>\\<lparr>HomCod\\<rparr> = \\<FF>\\<lparr>HomCod\\<rparr>\n\ngoal (3 subgoals):\n 1. vsv \\<GG>\n 2. vsv \\<FF>\n 3. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> \\<GG> \\<Longrightarrow>\n       \\<GG>\\<lparr>a\\<rparr> = \\<FF>\\<lparr>a\\<rparr>", "show \"a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> \\<GG> \\<Longrightarrow> \\<GG>\\<lparr>a\\<rparr> = \\<FF>\\<lparr>a\\<rparr>\" for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> \\<GG> \\<Longrightarrow>\n    \\<GG>\\<lparr>a\\<rparr> = \\<FF>\\<lparr>a\\<rparr>", "by (unfold dom, elim_in_numeral, insert assms(3,4) sup)\n        (auto simp: dghm_field_simps)"], ["proof (state)\nthis:\n  ?a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> \\<GG> \\<Longrightarrow>\n  \\<GG>\\<lparr>?a\\<rparr> = \\<FF>\\<lparr>?a\\<rparr>\n\ngoal (2 subgoals):\n 1. vsv \\<GG>\n 2. vsv \\<FF>", "qed auto"], ["proof (state)\nthis:\n  \\<GG> = \\<FF>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smcf_dghm_eqI:\n  assumes \"\\<GG> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n    and \"\\<FF> : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\"\n    and \"\\<AA> = \\<CC>\"\n    and \"\\<BB> = \\<DD>\"\n    and \"smcf_dghm \\<GG> = smcf_dghm \\<FF>\"\n  shows \"\\<GG> = \\<FF>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> = \\<FF>", "proof(rule smcf_eqI)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<GG> :\n    ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<BB>\n 2. \\<FF> :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<DD>\n 3. \\<GG>\\<lparr>ObjMap\\<rparr> = \\<FF>\\<lparr>ObjMap\\<rparr>\n 4. \\<GG>\\<lparr>ArrMap\\<rparr> = \\<FF>\\<lparr>ArrMap\\<rparr>\n 5. ?\\<AA> = ?\\<CC>\n 6. ?\\<BB> = ?\\<DD>", "from assms(5)"], ["proof (chain)\npicking this:\n  smcf_dghm \\<GG> = smcf_dghm \\<FF>", "have \n    \"smcf_dghm \\<GG>\\<lparr>ObjMap\\<rparr> = smcf_dghm \\<FF>\\<lparr>ObjMap\\<rparr>\"\n    \"smcf_dghm \\<GG>\\<lparr>ArrMap\\<rparr> = smcf_dghm \\<FF>\\<lparr>ArrMap\\<rparr>\""], ["proof (prove)\nusing this:\n  smcf_dghm \\<GG> = smcf_dghm \\<FF>\n\ngoal (1 subgoal):\n 1. smcf_dghm \\<GG>\\<lparr>ObjMap\\<rparr> =\n    smcf_dghm \\<FF>\\<lparr>ObjMap\\<rparr> &&&\n    smcf_dghm \\<GG>\\<lparr>ArrMap\\<rparr> =\n    smcf_dghm \\<FF>\\<lparr>ArrMap\\<rparr>", "by simp_all"], ["proof (state)\nthis:\n  smcf_dghm \\<GG>\\<lparr>ObjMap\\<rparr> =\n  smcf_dghm \\<FF>\\<lparr>ObjMap\\<rparr>\n  smcf_dghm \\<GG>\\<lparr>ArrMap\\<rparr> =\n  smcf_dghm \\<FF>\\<lparr>ArrMap\\<rparr>\n\ngoal (6 subgoals):\n 1. \\<GG> :\n    ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<BB>\n 2. \\<FF> :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<DD>\n 3. \\<GG>\\<lparr>ObjMap\\<rparr> = \\<FF>\\<lparr>ObjMap\\<rparr>\n 4. \\<GG>\\<lparr>ArrMap\\<rparr> = \\<FF>\\<lparr>ArrMap\\<rparr>\n 5. ?\\<AA> = ?\\<CC>\n 6. ?\\<BB> = ?\\<DD>", "then"], ["proof (chain)\npicking this:\n  smcf_dghm \\<GG>\\<lparr>ObjMap\\<rparr> =\n  smcf_dghm \\<FF>\\<lparr>ObjMap\\<rparr>\n  smcf_dghm \\<GG>\\<lparr>ArrMap\\<rparr> =\n  smcf_dghm \\<FF>\\<lparr>ArrMap\\<rparr>", "show \"\\<GG>\\<lparr>ObjMap\\<rparr> = \\<FF>\\<lparr>ObjMap\\<rparr>\" \"\\<GG>\\<lparr>ArrMap\\<rparr> = \\<FF>\\<lparr>ArrMap\\<rparr>\""], ["proof (prove)\nusing this:\n  smcf_dghm \\<GG>\\<lparr>ObjMap\\<rparr> =\n  smcf_dghm \\<FF>\\<lparr>ObjMap\\<rparr>\n  smcf_dghm \\<GG>\\<lparr>ArrMap\\<rparr> =\n  smcf_dghm \\<FF>\\<lparr>ArrMap\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<GG>\\<lparr>ObjMap\\<rparr> = \\<FF>\\<lparr>ObjMap\\<rparr> &&&\n    \\<GG>\\<lparr>ArrMap\\<rparr> = \\<FF>\\<lparr>ArrMap\\<rparr>", "unfolding slicing_simps"], ["proof (prove)\nusing this:\n  \\<GG>\\<lparr>ObjMap\\<rparr> = \\<FF>\\<lparr>ObjMap\\<rparr>\n  \\<GG>\\<lparr>ArrMap\\<rparr> = \\<FF>\\<lparr>ArrMap\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<GG>\\<lparr>ObjMap\\<rparr> = \\<FF>\\<lparr>ObjMap\\<rparr> &&&\n    \\<GG>\\<lparr>ArrMap\\<rparr> = \\<FF>\\<lparr>ArrMap\\<rparr>", "by simp_all"], ["proof (state)\nthis:\n  \\<GG>\\<lparr>ObjMap\\<rparr> = \\<FF>\\<lparr>ObjMap\\<rparr>\n  \\<GG>\\<lparr>ArrMap\\<rparr> = \\<FF>\\<lparr>ArrMap\\<rparr>\n\ngoal (4 subgoals):\n 1. \\<GG> :\n    ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<BB>\n 2. \\<FF> :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<DD>\n 3. ?\\<AA> = ?\\<CC>\n 4. ?\\<BB> = ?\\<DD>", "qed (auto intro: assms(1,2) simp: assms)"], ["", "lemma (in is_semifunctor) smcf_def: \n  \"\\<FF> = [\\<FF>\\<lparr>ObjMap\\<rparr>, \\<FF>\\<lparr>ArrMap\\<rparr>, \\<FF>\\<lparr>HomDom\\<rparr>, \\<FF>\\<lparr>HomCod\\<rparr>]\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> =\n    [\\<FF>\\<lparr>ObjMap\\<rparr>, \\<FF>\\<lparr>ArrMap\\<rparr>,\n     \\<FF>\\<lparr>HomDom\\<rparr>, \\<FF>\\<lparr>HomCod\\<rparr>]\\<^sub>\\<circ>", "proof(rule vsv_eqI)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv \\<FF>\n 2. vsv [\\<FF>\\<lparr>ObjMap\\<rparr>, \\<FF>\\<lparr>ArrMap\\<rparr>,\n         \\<FF>\\<lparr>HomDom\\<rparr>,\n         \\<FF>\\<lparr>HomCod\\<rparr>]\\<^sub>\\<circ>\n 3. \\<D>\\<^sub>\\<circ> \\<FF> =\n    \\<D>\\<^sub>\\<circ>\n     [\\<FF>\\<lparr>ObjMap\\<rparr>, \\<FF>\\<lparr>ArrMap\\<rparr>,\n      \\<FF>\\<lparr>HomDom\\<rparr>,\n      \\<FF>\\<lparr>HomCod\\<rparr>]\\<^sub>\\<circ>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> \\<FF> \\<Longrightarrow>\n       \\<FF>\\<lparr>a\\<rparr> =\n       [\\<FF>\\<lparr>ObjMap\\<rparr>, \\<FF>\\<lparr>ArrMap\\<rparr>,\n        \\<FF>\\<lparr>HomDom\\<rparr>,\n        \\<FF>\\<lparr>HomCod\\<rparr>]\\<^sub>\\<circ>\\<lparr>a\\<rparr>", "have dom_lhs: \"\\<D>\\<^sub>\\<circ> \\<FF> = 4\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> \\<FF> = 4\\<^sub>\\<nat>", "by (cs_concl cs_simp: smc_cs_simps V_cs_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> \\<FF> = 4\\<^sub>\\<nat>\n\ngoal (4 subgoals):\n 1. vsv \\<FF>\n 2. vsv [\\<FF>\\<lparr>ObjMap\\<rparr>, \\<FF>\\<lparr>ArrMap\\<rparr>,\n         \\<FF>\\<lparr>HomDom\\<rparr>,\n         \\<FF>\\<lparr>HomCod\\<rparr>]\\<^sub>\\<circ>\n 3. \\<D>\\<^sub>\\<circ> \\<FF> =\n    \\<D>\\<^sub>\\<circ>\n     [\\<FF>\\<lparr>ObjMap\\<rparr>, \\<FF>\\<lparr>ArrMap\\<rparr>,\n      \\<FF>\\<lparr>HomDom\\<rparr>,\n      \\<FF>\\<lparr>HomCod\\<rparr>]\\<^sub>\\<circ>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> \\<FF> \\<Longrightarrow>\n       \\<FF>\\<lparr>a\\<rparr> =\n       [\\<FF>\\<lparr>ObjMap\\<rparr>, \\<FF>\\<lparr>ArrMap\\<rparr>,\n        \\<FF>\\<lparr>HomDom\\<rparr>,\n        \\<FF>\\<lparr>HomCod\\<rparr>]\\<^sub>\\<circ>\\<lparr>a\\<rparr>", "have dom_rhs: \"\\<D>\\<^sub>\\<circ> [\\<FF>\\<lparr>Obj\\<rparr>, \\<FF>\\<lparr>Arr\\<rparr>, \\<FF>\\<lparr>Dom\\<rparr>, \\<FF>\\<lparr>Cod\\<rparr>]\\<^sub>\\<circ> = 4\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     [\\<FF>\\<lparr>Obj\\<rparr>, \\<FF>\\<lparr>Arr\\<rparr>,\n      \\<FF>\\<lparr>Dom\\<rparr>, \\<FF>\\<lparr>Cod\\<rparr>]\\<^sub>\\<circ> =\n    4\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   [\\<FF>\\<lparr>Obj\\<rparr>, \\<FF>\\<lparr>Arr\\<rparr>,\n    \\<FF>\\<lparr>Dom\\<rparr>, \\<FF>\\<lparr>Cod\\<rparr>]\\<^sub>\\<circ> =\n  4\\<^sub>\\<nat>\n\ngoal (4 subgoals):\n 1. vsv \\<FF>\n 2. vsv [\\<FF>\\<lparr>ObjMap\\<rparr>, \\<FF>\\<lparr>ArrMap\\<rparr>,\n         \\<FF>\\<lparr>HomDom\\<rparr>,\n         \\<FF>\\<lparr>HomCod\\<rparr>]\\<^sub>\\<circ>\n 3. \\<D>\\<^sub>\\<circ> \\<FF> =\n    \\<D>\\<^sub>\\<circ>\n     [\\<FF>\\<lparr>ObjMap\\<rparr>, \\<FF>\\<lparr>ArrMap\\<rparr>,\n      \\<FF>\\<lparr>HomDom\\<rparr>,\n      \\<FF>\\<lparr>HomCod\\<rparr>]\\<^sub>\\<circ>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> \\<FF> \\<Longrightarrow>\n       \\<FF>\\<lparr>a\\<rparr> =\n       [\\<FF>\\<lparr>ObjMap\\<rparr>, \\<FF>\\<lparr>ArrMap\\<rparr>,\n        \\<FF>\\<lparr>HomDom\\<rparr>,\n        \\<FF>\\<lparr>HomCod\\<rparr>]\\<^sub>\\<circ>\\<lparr>a\\<rparr>", "then"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ>\n   [\\<FF>\\<lparr>Obj\\<rparr>, \\<FF>\\<lparr>Arr\\<rparr>,\n    \\<FF>\\<lparr>Dom\\<rparr>, \\<FF>\\<lparr>Cod\\<rparr>]\\<^sub>\\<circ> =\n  4\\<^sub>\\<nat>", "show \"\\<D>\\<^sub>\\<circ> \\<FF> = \\<D>\\<^sub>\\<circ> [\\<FF>\\<lparr>ObjMap\\<rparr>, \\<FF>\\<lparr>ArrMap\\<rparr>, \\<FF>\\<lparr>HomDom\\<rparr>, \\<FF>\\<lparr>HomCod\\<rparr>]\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ>\n   [\\<FF>\\<lparr>Obj\\<rparr>, \\<FF>\\<lparr>Arr\\<rparr>,\n    \\<FF>\\<lparr>Dom\\<rparr>, \\<FF>\\<lparr>Cod\\<rparr>]\\<^sub>\\<circ> =\n  4\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> \\<FF> =\n    \\<D>\\<^sub>\\<circ>\n     [\\<FF>\\<lparr>ObjMap\\<rparr>, \\<FF>\\<lparr>ArrMap\\<rparr>,\n      \\<FF>\\<lparr>HomDom\\<rparr>,\n      \\<FF>\\<lparr>HomCod\\<rparr>]\\<^sub>\\<circ>", "unfolding dom_lhs dom_rhs"], ["proof (prove)\nusing this:\n  4\\<^sub>\\<nat> = 4\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. 4\\<^sub>\\<nat> =\n    \\<D>\\<^sub>\\<circ>\n     [\\<FF>\\<lparr>ObjMap\\<rparr>, \\<FF>\\<lparr>ArrMap\\<rparr>,\n      \\<FF>\\<lparr>HomDom\\<rparr>,\n      \\<FF>\\<lparr>HomCod\\<rparr>]\\<^sub>\\<circ>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> \\<FF> =\n  \\<D>\\<^sub>\\<circ>\n   [\\<FF>\\<lparr>ObjMap\\<rparr>, \\<FF>\\<lparr>ArrMap\\<rparr>,\n    \\<FF>\\<lparr>HomDom\\<rparr>, \\<FF>\\<lparr>HomCod\\<rparr>]\\<^sub>\\<circ>\n\ngoal (3 subgoals):\n 1. vsv \\<FF>\n 2. vsv [\\<FF>\\<lparr>ObjMap\\<rparr>, \\<FF>\\<lparr>ArrMap\\<rparr>,\n         \\<FF>\\<lparr>HomDom\\<rparr>,\n         \\<FF>\\<lparr>HomCod\\<rparr>]\\<^sub>\\<circ>\n 3. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> \\<FF> \\<Longrightarrow>\n       \\<FF>\\<lparr>a\\<rparr> =\n       [\\<FF>\\<lparr>ObjMap\\<rparr>, \\<FF>\\<lparr>ArrMap\\<rparr>,\n        \\<FF>\\<lparr>HomDom\\<rparr>,\n        \\<FF>\\<lparr>HomCod\\<rparr>]\\<^sub>\\<circ>\\<lparr>a\\<rparr>", "show \"a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> \\<FF> \\<Longrightarrow> \\<FF>\\<lparr>a\\<rparr> = [\\<FF>\\<lparr>ObjMap\\<rparr>, \\<FF>\\<lparr>ArrMap\\<rparr>, \\<FF>\\<lparr>HomDom\\<rparr>, \\<FF>\\<lparr>HomCod\\<rparr>]\\<^sub>\\<circ>\\<lparr>a\\<rparr>\" \n    for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> \\<FF> \\<Longrightarrow>\n    \\<FF>\\<lparr>a\\<rparr> =\n    [\\<FF>\\<lparr>ObjMap\\<rparr>, \\<FF>\\<lparr>ArrMap\\<rparr>,\n     \\<FF>\\<lparr>HomDom\\<rparr>,\n     \\<FF>\\<lparr>HomCod\\<rparr>]\\<^sub>\\<circ>\\<lparr>a\\<rparr>", "by (unfold dom_lhs, elim_in_numeral, unfold dghm_field_simps)\n      (simp_all add: nat_omega_simps)"], ["proof (state)\nthis:\n  ?a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> \\<FF> \\<Longrightarrow>\n  \\<FF>\\<lparr>?a\\<rparr> =\n  [\\<FF>\\<lparr>ObjMap\\<rparr>, \\<FF>\\<lparr>ArrMap\\<rparr>,\n   \\<FF>\\<lparr>HomDom\\<rparr>,\n   \\<FF>\\<lparr>HomCod\\<rparr>]\\<^sub>\\<circ>\\<lparr>?a\\<rparr>\n\ngoal (2 subgoals):\n 1. vsv \\<FF>\n 2. vsv [\\<FF>\\<lparr>ObjMap\\<rparr>, \\<FF>\\<lparr>ArrMap\\<rparr>,\n         \\<FF>\\<lparr>HomDom\\<rparr>,\n         \\<FF>\\<lparr>HomCod\\<rparr>]\\<^sub>\\<circ>", "qed (auto simp: vsv_axioms)"], ["", "lemma (in is_semifunctor) smcf_in_Vset: \n  assumes \"\\<Z> \\<beta>\" and \"\\<alpha> \\<in>\\<^sub>\\<circ> \\<beta>\"\n  shows \"\\<FF> \\<in>\\<^sub>\\<circ> Vset \\<beta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> \\<in>\\<^sub>\\<circ> Vset \\<beta>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<FF> \\<in>\\<^sub>\\<circ> Vset \\<beta>", "interpret \\<beta>: \\<Z> \\<beta>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Z> \\<beta>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<FF> \\<in>\\<^sub>\\<circ> Vset \\<beta>", "note [smc_cs_intros] = \n    smcf_ObjMap_in_Vset \n    smcf_ArrMap_in_Vset \n    HomDom.smc_in_Vset \n    HomCod.smc_in_Vset"], ["proof (state)\nthis:\n  \\<alpha> \\<in>\\<^sub>\\<circ> ?\\<beta> \\<Longrightarrow>\n  \\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset ?\\<beta>\n  \\<alpha> \\<in>\\<^sub>\\<circ> ?\\<beta> \\<Longrightarrow>\n  \\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset ?\\<beta>\n  \\<lbrakk>\\<Z> ?\\<beta>; \\<alpha> \\<in>\\<^sub>\\<circ> ?\\<beta>\\<rbrakk>\n  \\<Longrightarrow> \\<AA> \\<in>\\<^sub>\\<circ> Vset ?\\<beta>\n  \\<lbrakk>\\<Z> ?\\<beta>; \\<alpha> \\<in>\\<^sub>\\<circ> ?\\<beta>\\<rbrakk>\n  \\<Longrightarrow> \\<BB> \\<in>\\<^sub>\\<circ> Vset ?\\<beta>\n\ngoal (1 subgoal):\n 1. \\<FF> \\<in>\\<^sub>\\<circ> Vset \\<beta>", "from assms(2)"], ["proof (chain)\npicking this:\n  \\<alpha> \\<in>\\<^sub>\\<circ> \\<beta>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<alpha> \\<in>\\<^sub>\\<circ> \\<beta>\n\ngoal (1 subgoal):\n 1. \\<FF> \\<in>\\<^sub>\\<circ> Vset \\<beta>", "by (subst smcf_def) \n      (cs_concl cs_simp: smc_cs_simps cs_intro: smc_cs_intros V_cs_intros)"], ["proof (state)\nthis:\n  \\<FF> \\<in>\\<^sub>\\<circ> Vset \\<beta>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in is_semifunctor) smcf_is_semifunctor_if_ge_Limit:\n  assumes \"\\<Z> \\<beta>\" and \"\\<alpha> \\<in>\\<^sub>\\<circ> \\<beta>\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<beta>\\<^esub> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<beta>\\<^esub> \\<BB>", "by (rule is_semifunctorI)\n    (\n      simp_all add: \n        assms \n        vfsequence_axioms\n        smcf_is_dghm_if_ge_Limit\n        HomDom.smc_semicategory_if_ge_Limit\n        HomCod.smc_semicategory_if_ge_Limit\n        smc_cs_simps\n    )"], ["", "lemma small_all_smcfs[simp]: \"small {\\<FF>. \\<exists>\\<AA> \\<BB>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. small\n     {\\<FF>.\n      \\<exists>\\<AA> \\<BB>.\n         \\<FF> :\n         \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>}", "proof(cases \\<open>\\<Z> \\<alpha>\\<close>)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Z> \\<alpha> \\<Longrightarrow>\n    small\n     {\\<FF>.\n      \\<exists>\\<AA> \\<BB>.\n         \\<FF> :\n         \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>}\n 2. \\<not> \\<Z> \\<alpha> \\<Longrightarrow>\n    small\n     {\\<FF>.\n      \\<exists>\\<AA> \\<BB>.\n         \\<FF> :\n         \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>}", "case True"], ["proof (state)\nthis:\n  \\<Z> \\<alpha>\n\ngoal (2 subgoals):\n 1. \\<Z> \\<alpha> \\<Longrightarrow>\n    small\n     {\\<FF>.\n      \\<exists>\\<AA> \\<BB>.\n         \\<FF> :\n         \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>}\n 2. \\<not> \\<Z> \\<alpha> \\<Longrightarrow>\n    small\n     {\\<FF>.\n      \\<exists>\\<AA> \\<BB>.\n         \\<FF> :\n         \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>}", "from is_semifunctor.smcf_in_Vset"], ["proof (chain)\npicking this:\n  \\<lbrakk>?\\<FF> :\n           ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<BB>;\n   \\<Z> ?\\<beta>; ?\\<alpha> \\<in>\\<^sub>\\<circ> ?\\<beta>\\<rbrakk>\n  \\<Longrightarrow> ?\\<FF> \\<in>\\<^sub>\\<circ> Vset ?\\<beta>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?\\<FF> :\n           ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<BB>;\n   \\<Z> ?\\<beta>; ?\\<alpha> \\<in>\\<^sub>\\<circ> ?\\<beta>\\<rbrakk>\n  \\<Longrightarrow> ?\\<FF> \\<in>\\<^sub>\\<circ> Vset ?\\<beta>\n\ngoal (1 subgoal):\n 1. small\n     {\\<FF>.\n      \\<exists>\\<AA> \\<BB>.\n         \\<FF> :\n         \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>}", "by (intro down[of _ \\<open>Vset (\\<alpha> + \\<omega>)\\<close>]) \n      (auto simp: True \\<Z>.\\<Z>_Limit_\\<alpha>\\<omega> \\<Z>.\\<Z>_\\<omega>_\\<alpha>\\<omega> \\<Z>.intro \\<Z>.\\<Z>_\\<alpha>_\\<alpha>\\<omega>)"], ["proof (state)\nthis:\n  small\n   {\\<FF>.\n    \\<exists>\\<AA> \\<BB>.\n       \\<FF> :\n       \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>}\n\ngoal (1 subgoal):\n 1. \\<not> \\<Z> \\<alpha> \\<Longrightarrow>\n    small\n     {\\<FF>.\n      \\<exists>\\<AA> \\<BB>.\n         \\<FF> :\n         \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<Z> \\<alpha> \\<Longrightarrow>\n    small\n     {\\<FF>.\n      \\<exists>\\<AA> \\<BB>.\n         \\<FF> :\n         \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>}", "case False"], ["proof (state)\nthis:\n  \\<not> \\<Z> \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<not> \\<Z> \\<alpha> \\<Longrightarrow>\n    small\n     {\\<FF>.\n      \\<exists>\\<AA> \\<BB>.\n         \\<FF> :\n         \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>}", "then"], ["proof (chain)\npicking this:\n  \\<not> \\<Z> \\<alpha>", "have \"{\\<FF>. \\<exists>\\<AA> \\<BB>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>} = {}\""], ["proof (prove)\nusing this:\n  \\<not> \\<Z> \\<alpha>\n\ngoal (1 subgoal):\n 1. {\\<FF>.\n     \\<exists>\\<AA> \\<BB>.\n        \\<FF> :\n        \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>} =\n    {}", "by auto"], ["proof (state)\nthis:\n  {\\<FF>.\n   \\<exists>\\<AA> \\<BB>.\n      \\<FF> :\n      \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>} =\n  {}\n\ngoal (1 subgoal):\n 1. \\<not> \\<Z> \\<alpha> \\<Longrightarrow>\n    small\n     {\\<FF>.\n      \\<exists>\\<AA> \\<BB>.\n         \\<FF> :\n         \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>}", "then"], ["proof (chain)\npicking this:\n  {\\<FF>.\n   \\<exists>\\<AA> \\<BB>.\n      \\<FF> :\n      \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>} =\n  {}", "show ?thesis"], ["proof (prove)\nusing this:\n  {\\<FF>.\n   \\<exists>\\<AA> \\<BB>.\n      \\<FF> :\n      \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>} =\n  {}\n\ngoal (1 subgoal):\n 1. small\n     {\\<FF>.\n      \\<exists>\\<AA> \\<BB>.\n         \\<FF> :\n         \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>}", "by simp"], ["proof (state)\nthis:\n  small\n   {\\<FF>.\n    \\<exists>\\<AA> \\<BB>.\n       \\<FF> :\n       \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in is_semifunctor) smcf_in_Vset_7: \"\\<FF> \\<in>\\<^sub>\\<circ> Vset (\\<alpha> + 7\\<^sub>\\<nat>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> \\<in>\\<^sub>\\<circ> Vset (\\<alpha> + 7\\<^sub>\\<nat>)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<FF> \\<in>\\<^sub>\\<circ> Vset (\\<alpha> + 7\\<^sub>\\<nat>)", "note [folded VPow_iff, folded Vset_succ[OF Ord_\\<alpha>], smc_cs_intros] =\n    smcf_ObjMap_vsubset_Vset \n    smcf_ArrMap_vsubset_Vset"], ["proof (state)\nthis:\n  \\<FF>\\<lparr>ObjMap\\<rparr>\n  \\<in>\\<^sub>\\<circ> Vset (ZFC_in_HOL.succ \\<alpha>)\n  \\<FF>\\<lparr>ArrMap\\<rparr>\n  \\<in>\\<^sub>\\<circ> Vset (ZFC_in_HOL.succ \\<alpha>)\n\ngoal (1 subgoal):\n 1. \\<FF> \\<in>\\<^sub>\\<circ> Vset (\\<alpha> + 7\\<^sub>\\<nat>)", "from HomDom.smc_semicategory_in_Vset_4"], ["proof (chain)\npicking this:\n  \\<AA> \\<in>\\<^sub>\\<circ> Vset (\\<alpha> + 4\\<^sub>\\<nat>)", "have [smc_cs_intros]:\n    \"\\<AA> \\<in>\\<^sub>\\<circ> Vset (succ (succ (succ (succ \\<alpha>))))\""], ["proof (prove)\nusing this:\n  \\<AA> \\<in>\\<^sub>\\<circ> Vset (\\<alpha> + 4\\<^sub>\\<nat>)\n\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<in>\\<^sub>\\<circ> Vset\n                         (ZFC_in_HOL.succ\n                           (ZFC_in_HOL.succ\n                             (ZFC_in_HOL.succ (ZFC_in_HOL.succ \\<alpha>))))", "by (succ_of_numeral) (cs_prems cs_simp: plus_V_succ_right V_cs_simps)"], ["proof (state)\nthis:\n  \\<AA>\n  \\<in>\\<^sub>\\<circ> Vset\n                       (ZFC_in_HOL.succ\n                         (ZFC_in_HOL.succ\n                           (ZFC_in_HOL.succ (ZFC_in_HOL.succ \\<alpha>))))\n\ngoal (1 subgoal):\n 1. \\<FF> \\<in>\\<^sub>\\<circ> Vset (\\<alpha> + 7\\<^sub>\\<nat>)", "from HomCod.smc_semicategory_in_Vset_4"], ["proof (chain)\npicking this:\n  \\<BB> \\<in>\\<^sub>\\<circ> Vset (\\<alpha> + 4\\<^sub>\\<nat>)", "have [smc_cs_intros]:\n    \"\\<BB> \\<in>\\<^sub>\\<circ> Vset (succ (succ (succ (succ \\<alpha>))))\""], ["proof (prove)\nusing this:\n  \\<BB> \\<in>\\<^sub>\\<circ> Vset (\\<alpha> + 4\\<^sub>\\<nat>)\n\ngoal (1 subgoal):\n 1. \\<BB>\n    \\<in>\\<^sub>\\<circ> Vset\n                         (ZFC_in_HOL.succ\n                           (ZFC_in_HOL.succ\n                             (ZFC_in_HOL.succ (ZFC_in_HOL.succ \\<alpha>))))", "by (succ_of_numeral) (cs_prems cs_simp: plus_V_succ_right V_cs_simps)"], ["proof (state)\nthis:\n  \\<BB>\n  \\<in>\\<^sub>\\<circ> Vset\n                       (ZFC_in_HOL.succ\n                         (ZFC_in_HOL.succ\n                           (ZFC_in_HOL.succ (ZFC_in_HOL.succ \\<alpha>))))\n\ngoal (1 subgoal):\n 1. \\<FF> \\<in>\\<^sub>\\<circ> Vset (\\<alpha> + 7\\<^sub>\\<nat>)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> \\<in>\\<^sub>\\<circ> Vset (\\<alpha> + 7\\<^sub>\\<nat>)", "by (subst smcf_def, succ_of_numeral)\n      (\n        cs_concl \n          cs_simp: plus_V_succ_right V_cs_simps smc_cs_simps \n          cs_intro: smc_cs_intros V_cs_intros\n      )"], ["proof (state)\nthis:\n  \\<FF> \\<in>\\<^sub>\\<circ> Vset (\\<alpha> + 7\\<^sub>\\<nat>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in \\<Z>) all_smcfs_in_Vset: \n  assumes \"\\<Z> \\<beta>\" and \"\\<alpha> \\<in>\\<^sub>\\<circ> \\<beta>\"\n  shows \"all_smcfs \\<alpha> \\<in>\\<^sub>\\<circ> Vset \\<beta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. all_smcfs \\<alpha> \\<in>\\<^sub>\\<circ> Vset \\<beta>", "proof(rule vsubset_in_VsetI)"], ["proof (state)\ngoal (2 subgoals):\n 1. all_smcfs \\<alpha> \\<subseteq>\\<^sub>\\<circ> ?A\n 2. ?A \\<in>\\<^sub>\\<circ> Vset \\<beta>", "interpret \\<beta>: \\<Z> \\<beta>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Z> \\<beta>", "by (rule assms(1))"], ["proof (state)\ngoal (2 subgoals):\n 1. all_smcfs \\<alpha> \\<subseteq>\\<^sub>\\<circ> ?A\n 2. ?A \\<in>\\<^sub>\\<circ> Vset \\<beta>", "show \"all_smcfs \\<alpha> \\<subseteq>\\<^sub>\\<circ> Vset (\\<alpha> + 7\\<^sub>\\<nat>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. all_smcfs \\<alpha>\n    \\<subseteq>\\<^sub>\\<circ> Vset (\\<alpha> + 7\\<^sub>\\<nat>)", "proof(intro vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> all_smcfs \\<alpha> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> Vset (\\<alpha> + 7\\<^sub>\\<nat>)", "fix \\<FF>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> all_smcfs \\<alpha> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> Vset (\\<alpha> + 7\\<^sub>\\<nat>)", "assume \"\\<FF> \\<in>\\<^sub>\\<circ> all_smcfs \\<alpha>\""], ["proof (state)\nthis:\n  \\<FF> \\<in>\\<^sub>\\<circ> all_smcfs \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> all_smcfs \\<alpha> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> Vset (\\<alpha> + 7\\<^sub>\\<nat>)", "then"], ["proof (chain)\npicking this:\n  \\<FF> \\<in>\\<^sub>\\<circ> all_smcfs \\<alpha>", "obtain \\<AA> \\<BB> where \\<FF>: \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\nusing this:\n  \\<FF> \\<in>\\<^sub>\\<circ> all_smcfs \\<alpha>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<AA> \\<BB>.\n        \\<FF> :\n        \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> all_smcfs \\<alpha> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> Vset (\\<alpha> + 7\\<^sub>\\<nat>)", "then"], ["proof (chain)\npicking this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "interpret is_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\nusing this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "."], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> all_smcfs \\<alpha> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> Vset (\\<alpha> + 7\\<^sub>\\<nat>)", "show \"\\<FF> \\<in>\\<^sub>\\<circ> Vset (\\<alpha> + 7\\<^sub>\\<nat>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> \\<in>\\<^sub>\\<circ> Vset (\\<alpha> + 7\\<^sub>\\<nat>)", "by (rule smcf_in_Vset_7)"], ["proof (state)\nthis:\n  \\<FF> \\<in>\\<^sub>\\<circ> Vset (\\<alpha> + 7\\<^sub>\\<nat>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  all_smcfs \\<alpha>\n  \\<subseteq>\\<^sub>\\<circ> Vset (\\<alpha> + 7\\<^sub>\\<nat>)\n\ngoal (1 subgoal):\n 1. Vset (\\<alpha> + 7\\<^sub>\\<nat>) \\<in>\\<^sub>\\<circ> Vset \\<beta>", "from assms(2)"], ["proof (chain)\npicking this:\n  \\<alpha> \\<in>\\<^sub>\\<circ> \\<beta>", "show \"Vset (\\<alpha> + 7\\<^sub>\\<nat>) \\<in>\\<^sub>\\<circ> Vset \\<beta>\""], ["proof (prove)\nusing this:\n  \\<alpha> \\<in>\\<^sub>\\<circ> \\<beta>\n\ngoal (1 subgoal):\n 1. Vset (\\<alpha> + 7\\<^sub>\\<nat>) \\<in>\\<^sub>\\<circ> Vset \\<beta>", "by (cs_concl cs_intro: V_cs_intros Ord_cs_intros)"], ["proof (state)\nthis:\n  Vset (\\<alpha> + 7\\<^sub>\\<nat>) \\<in>\\<^sub>\\<circ> Vset \\<beta>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma small_smcfs[simp]: \"small {\\<FF>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. small\n     {\\<FF>.\n      \\<FF> :\n      \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>}", "by (rule down[of _ \\<open>set {\\<FF>. \\<exists>\\<AA> \\<BB>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>}\\<close>]) auto"], ["", "subsection\\<open>Opposite semifunctor\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "text\\<open>See Chapter II-2 in \\cite{mac_lane_categories_2010}.\\<close>"], ["", "definition op_smcf :: \"V \\<Rightarrow> V\"\n  where \"op_smcf \\<FF> =\n    [\\<FF>\\<lparr>ObjMap\\<rparr>, \\<FF>\\<lparr>ArrMap\\<rparr>, op_smc (\\<FF>\\<lparr>HomDom\\<rparr>), op_smc (\\<FF>\\<lparr>HomCod\\<rparr>)]\\<^sub>\\<circ>\""], ["", "text\\<open>Components.\\<close>"], ["", "lemma op_smcf_components[smc_op_simps]:\n  shows \"op_smcf \\<FF>\\<lparr>ObjMap\\<rparr> = \\<FF>\\<lparr>ObjMap\\<rparr>\"\n    and \"op_smcf \\<FF>\\<lparr>ArrMap\\<rparr> = \\<FF>\\<lparr>ArrMap\\<rparr>\"\n    and \"op_smcf \\<FF>\\<lparr>HomDom\\<rparr> = op_smc (\\<FF>\\<lparr>HomDom\\<rparr>)\"\n    and \"op_smcf \\<FF>\\<lparr>HomCod\\<rparr> = op_smc (\\<FF>\\<lparr>HomCod\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (op_smcf \\<FF>\\<lparr>ObjMap\\<rparr> = \\<FF>\\<lparr>ObjMap\\<rparr> &&&\n     op_smcf \\<FF>\\<lparr>ArrMap\\<rparr> = \\<FF>\\<lparr>ArrMap\\<rparr>) &&&\n    op_smcf \\<FF>\\<lparr>HomDom\\<rparr> =\n    op_smc (\\<FF>\\<lparr>HomDom\\<rparr>) &&&\n    op_smcf \\<FF>\\<lparr>HomCod\\<rparr> =\n    op_smc (\\<FF>\\<lparr>HomCod\\<rparr>)", "unfolding op_smcf_def dghm_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      op_smc (\\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n      op_smc\n       (\\<FF>\\<lparr>3\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n     \\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> &&&\n     [\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      op_smc (\\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n      op_smc\n       (\\<FF>\\<lparr>3\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> =\n     \\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>) &&&\n    [\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     \\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     op_smc (\\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n     op_smc\n      (\\<FF>\\<lparr>3\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr> =\n    op_smc (\\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>) &&&\n    [\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     \\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     op_smc (\\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n     op_smc\n      (\\<FF>\\<lparr>3\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr> =\n    op_smc (\\<FF>\\<lparr>3\\<^sub>\\<nat>\\<rparr>)", "by (auto simp: nat_omega_simps)"], ["", "text\\<open>Slicing.\\<close>"], ["", "lemma op_dghm_smcf_dghm[slicing_commute]: \n  \"op_dghm (smcf_dghm \\<FF>) = smcf_dghm (op_smcf \\<FF>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_dghm (smcf_dghm \\<FF>) = smcf_dghm (op_smcf \\<FF>)", "proof(rule vsv_eqI)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (op_dghm (smcf_dghm \\<FF>))\n 2. vsv (smcf_dghm (op_smcf \\<FF>))\n 3. \\<D>\\<^sub>\\<circ> (op_dghm (smcf_dghm \\<FF>)) =\n    \\<D>\\<^sub>\\<circ> (smcf_dghm (op_smcf \\<FF>))\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_dghm (smcf_dghm \\<FF>)) \\<Longrightarrow>\n       op_dghm (smcf_dghm \\<FF>)\\<lparr>a\\<rparr> =\n       smcf_dghm (op_smcf \\<FF>)\\<lparr>a\\<rparr>", "have dom_lhs: \"\\<D>\\<^sub>\\<circ> (op_dghm (smcf_dghm \\<FF>)) = 4\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (op_dghm (smcf_dghm \\<FF>)) = 4\\<^sub>\\<nat>", "unfolding op_dghm_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     [smcf_dghm \\<FF>\\<lparr>ObjMap\\<rparr>,\n      smcf_dghm \\<FF>\\<lparr>ArrMap\\<rparr>,\n      op_dg (smcf_dghm \\<FF>\\<lparr>HomDom\\<rparr>),\n      op_dg (smcf_dghm \\<FF>\\<lparr>HomCod\\<rparr>)]\\<^sub>\\<circ> =\n    4\\<^sub>\\<nat>", "by (auto simp: nat_omega_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (op_dghm (smcf_dghm \\<FF>)) = 4\\<^sub>\\<nat>\n\ngoal (4 subgoals):\n 1. vsv (op_dghm (smcf_dghm \\<FF>))\n 2. vsv (smcf_dghm (op_smcf \\<FF>))\n 3. \\<D>\\<^sub>\\<circ> (op_dghm (smcf_dghm \\<FF>)) =\n    \\<D>\\<^sub>\\<circ> (smcf_dghm (op_smcf \\<FF>))\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_dghm (smcf_dghm \\<FF>)) \\<Longrightarrow>\n       op_dghm (smcf_dghm \\<FF>)\\<lparr>a\\<rparr> =\n       smcf_dghm (op_smcf \\<FF>)\\<lparr>a\\<rparr>", "have dom_rhs: \"\\<D>\\<^sub>\\<circ> (smcf_dghm (op_smcf \\<FF>)) = 4\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (smcf_dghm (op_smcf \\<FF>)) = 4\\<^sub>\\<nat>", "unfolding smcf_dghm_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     [op_smcf \\<FF>\\<lparr>ObjMap\\<rparr>,\n      op_smcf \\<FF>\\<lparr>ArrMap\\<rparr>,\n      smc_dg (op_smcf \\<FF>\\<lparr>HomDom\\<rparr>),\n      smc_dg (op_smcf \\<FF>\\<lparr>HomCod\\<rparr>)]\\<^sub>\\<circ> =\n    4\\<^sub>\\<nat>", "by (auto simp: nat_omega_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (smcf_dghm (op_smcf \\<FF>)) = 4\\<^sub>\\<nat>\n\ngoal (4 subgoals):\n 1. vsv (op_dghm (smcf_dghm \\<FF>))\n 2. vsv (smcf_dghm (op_smcf \\<FF>))\n 3. \\<D>\\<^sub>\\<circ> (op_dghm (smcf_dghm \\<FF>)) =\n    \\<D>\\<^sub>\\<circ> (smcf_dghm (op_smcf \\<FF>))\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_dghm (smcf_dghm \\<FF>)) \\<Longrightarrow>\n       op_dghm (smcf_dghm \\<FF>)\\<lparr>a\\<rparr> =\n       smcf_dghm (op_smcf \\<FF>)\\<lparr>a\\<rparr>", "show \"\\<D>\\<^sub>\\<circ> (op_dghm (smcf_dghm \\<FF>)) = \\<D>\\<^sub>\\<circ> (smcf_dghm (op_smcf \\<FF>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (op_dghm (smcf_dghm \\<FF>)) =\n    \\<D>\\<^sub>\\<circ> (smcf_dghm (op_smcf \\<FF>))", "unfolding dom_lhs dom_rhs"], ["proof (prove)\ngoal (1 subgoal):\n 1. 4\\<^sub>\\<nat> = 4\\<^sub>\\<nat>", "by simp"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (op_dghm (smcf_dghm \\<FF>)) =\n  \\<D>\\<^sub>\\<circ> (smcf_dghm (op_smcf \\<FF>))\n\ngoal (3 subgoals):\n 1. vsv (op_dghm (smcf_dghm \\<FF>))\n 2. vsv (smcf_dghm (op_smcf \\<FF>))\n 3. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_dghm (smcf_dghm \\<FF>)) \\<Longrightarrow>\n       op_dghm (smcf_dghm \\<FF>)\\<lparr>a\\<rparr> =\n       smcf_dghm (op_smcf \\<FF>)\\<lparr>a\\<rparr>", "show \"a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (op_dghm (smcf_dghm \\<FF>)) \\<Longrightarrow>\n    op_dghm (smcf_dghm \\<FF>)\\<lparr>a\\<rparr> = smcf_dghm (op_smcf \\<FF>)\\<lparr>a\\<rparr>\"\n    for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                           (op_dghm (smcf_dghm \\<FF>)) \\<Longrightarrow>\n    op_dghm (smcf_dghm \\<FF>)\\<lparr>a\\<rparr> =\n    smcf_dghm (op_smcf \\<FF>)\\<lparr>a\\<rparr>", "by \n      (\n        unfold dom_lhs, \n        elim_in_numeral,\n        unfold smcf_dghm_def op_smcf_def op_dghm_def dghm_field_simps\n      ) \n      (auto simp: nat_omega_simps slicing_simps slicing_commute)"], ["proof (state)\nthis:\n  ?a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                          (op_dghm (smcf_dghm \\<FF>)) \\<Longrightarrow>\n  op_dghm (smcf_dghm \\<FF>)\\<lparr>?a\\<rparr> =\n  smcf_dghm (op_smcf \\<FF>)\\<lparr>?a\\<rparr>\n\ngoal (2 subgoals):\n 1. vsv (op_dghm (smcf_dghm \\<FF>))\n 2. vsv (smcf_dghm (op_smcf \\<FF>))", "qed (auto simp: smcf_dghm_def op_dghm_def)"], ["", "subsubsection\\<open>Further properties\\<close>"], ["", "lemma (in is_semifunctor) is_semifunctor_op:\n  \"op_smcf \\<FF> : op_smc \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> op_smc \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_smcf \\<FF> :\n    op_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> op_smc\n   \\<BB>", "proof(intro is_semifunctorI)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (op_smcf \\<FF>)\n 3. semicategory \\<alpha> (op_smc \\<AA>)\n 4. semicategory \\<alpha> (op_smc \\<BB>)\n 5. vcard (op_smcf \\<FF>) = 4\\<^sub>\\<nat>\n 6. smcf_dghm (op_smcf \\<FF>) :\n    smc_dg\n     (op_smc\n       \\<AA>) \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                    (op_smc \\<BB>)\n 7. op_smcf \\<FF>\\<lparr>HomDom\\<rparr> = op_smc \\<AA>\n 8. op_smcf \\<FF>\\<lparr>HomCod\\<rparr> = op_smc \\<BB>\n 9. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>op_smc \\<AA>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>op_smc \\<AA>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> op_smcf\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<AA>\\<^esub>\n                       f\\<rparr> =\n                         op_smcf\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>op_smc \\<BB>\\<^esub>\n                         op_smcf\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "show \"vfsequence (op_smcf \\<FF>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (op_smcf \\<FF>)", "unfolding op_smcf_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence\n     [\\<FF>\\<lparr>ObjMap\\<rparr>, \\<FF>\\<lparr>ArrMap\\<rparr>,\n      op_smc (\\<FF>\\<lparr>HomDom\\<rparr>),\n      op_smc (\\<FF>\\<lparr>HomCod\\<rparr>)]\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  vfsequence (op_smcf \\<FF>)\n\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> (op_smc \\<AA>)\n 3. semicategory \\<alpha> (op_smc \\<BB>)\n 4. vcard (op_smcf \\<FF>) = 4\\<^sub>\\<nat>\n 5. smcf_dghm (op_smcf \\<FF>) :\n    smc_dg\n     (op_smc\n       \\<AA>) \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                    (op_smc \\<BB>)\n 6. op_smcf \\<FF>\\<lparr>HomDom\\<rparr> = op_smc \\<AA>\n 7. op_smcf \\<FF>\\<lparr>HomCod\\<rparr> = op_smc \\<BB>\n 8. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>op_smc \\<AA>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>op_smc \\<AA>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> op_smcf\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<AA>\\<^esub>\n                       f\\<rparr> =\n                         op_smcf\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>op_smc \\<BB>\\<^esub>\n                         op_smcf\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "show \"vcard (op_smcf \\<FF>) = 4\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (op_smcf \\<FF>) = 4\\<^sub>\\<nat>", "unfolding op_smcf_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard\n     [\\<FF>\\<lparr>ObjMap\\<rparr>, \\<FF>\\<lparr>ArrMap\\<rparr>,\n      op_smc (\\<FF>\\<lparr>HomDom\\<rparr>),\n      op_smc (\\<FF>\\<lparr>HomCod\\<rparr>)]\\<^sub>\\<circ> =\n    4\\<^sub>\\<nat>", "by (auto simp: nat_omega_simps)"], ["proof (state)\nthis:\n  vcard (op_smcf \\<FF>) = 4\\<^sub>\\<nat>\n\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> (op_smc \\<AA>)\n 3. semicategory \\<alpha> (op_smc \\<BB>)\n 4. smcf_dghm (op_smcf \\<FF>) :\n    smc_dg\n     (op_smc\n       \\<AA>) \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                    (op_smc \\<BB>)\n 5. op_smcf \\<FF>\\<lparr>HomDom\\<rparr> = op_smc \\<AA>\n 6. op_smcf \\<FF>\\<lparr>HomCod\\<rparr> = op_smc \\<BB>\n 7. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>op_smc \\<AA>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>op_smc \\<AA>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> op_smcf\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<AA>\\<^esub>\n                       f\\<rparr> =\n                         op_smcf\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>op_smc \\<BB>\\<^esub>\n                         op_smcf\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "fix g b c f a"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> (op_smc \\<AA>)\n 3. semicategory \\<alpha> (op_smc \\<BB>)\n 4. smcf_dghm (op_smcf \\<FF>) :\n    smc_dg\n     (op_smc\n       \\<AA>) \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                    (op_smc \\<BB>)\n 5. op_smcf \\<FF>\\<lparr>HomDom\\<rparr> = op_smc \\<AA>\n 6. op_smcf \\<FF>\\<lparr>HomCod\\<rparr> = op_smc \\<BB>\n 7. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>op_smc \\<AA>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>op_smc \\<AA>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> op_smcf\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<AA>\\<^esub>\n                       f\\<rparr> =\n                         op_smcf\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>op_smc \\<BB>\\<^esub>\n                         op_smcf\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "assume \"g : b \\<mapsto>\\<^bsub>op_smc \\<AA>\\<^esub> c\" \"f : a \\<mapsto>\\<^bsub>op_smc \\<AA>\\<^esub> b\""], ["proof (state)\nthis:\n  g : b \\<mapsto>\\<^bsub>op_smc \\<AA>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>op_smc \\<AA>\\<^esub> b\n\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> (op_smc \\<AA>)\n 3. semicategory \\<alpha> (op_smc \\<BB>)\n 4. smcf_dghm (op_smcf \\<FF>) :\n    smc_dg\n     (op_smc\n       \\<AA>) \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                    (op_smc \\<BB>)\n 5. op_smcf \\<FF>\\<lparr>HomDom\\<rparr> = op_smc \\<AA>\n 6. op_smcf \\<FF>\\<lparr>HomCod\\<rparr> = op_smc \\<BB>\n 7. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>op_smc \\<AA>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>op_smc \\<AA>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> op_smcf\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<AA>\\<^esub>\n                       f\\<rparr> =\n                         op_smcf\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>op_smc \\<BB>\\<^esub>\n                         op_smcf\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "then"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^bsub>op_smc \\<AA>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>op_smc \\<AA>\\<^esub> b", "have \"g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\" and \"f : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> a\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>op_smc \\<AA>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>op_smc \\<AA>\\<^esub> b\n\ngoal (1 subgoal):\n 1. g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b &&&\n    f : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> a", "unfolding smc_op_simps"], ["proof (prove)\nusing this:\n  g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> a\n\ngoal (1 subgoal):\n 1. g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b &&&\n    f : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> a", "by simp_all"], ["proof (state)\nthis:\n  g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> a\n\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> (op_smc \\<AA>)\n 3. semicategory \\<alpha> (op_smc \\<BB>)\n 4. smcf_dghm (op_smcf \\<FF>) :\n    smc_dg\n     (op_smc\n       \\<AA>) \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                    (op_smc \\<BB>)\n 5. op_smcf \\<FF>\\<lparr>HomDom\\<rparr> = op_smc \\<AA>\n 6. op_smcf \\<FF>\\<lparr>HomCod\\<rparr> = op_smc \\<BB>\n 7. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>op_smc \\<AA>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>op_smc \\<AA>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> op_smcf\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<AA>\\<^esub>\n                       f\\<rparr> =\n                         op_smcf\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>op_smc \\<BB>\\<^esub>\n                         op_smcf\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "with is_semifunctor_axioms"], ["proof (chain)\npicking this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> a", "show \n    \"op_smcf \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<AA>\\<^esub> f\\<rparr> =\n      op_smcf \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>op_smc \\<BB>\\<^esub> op_smcf \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> a\n\ngoal (1 subgoal):\n 1. op_smcf\n     \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<AA>\\<^esub>\n  f\\<rparr> =\n    op_smcf\n     \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>op_smc \\<BB>\\<^esub>\n    op_smcf \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "by \n      (\n        cs_concl \n          cs_simp: smc_op_simps smc_cs_simps \n          cs_intro: smc_op_intros smc_cs_intros\n      )"], ["proof (state)\nthis:\n  op_smcf\n   \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<AA>\\<^esub>\nf\\<rparr> =\n  op_smcf\n   \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>op_smc \\<BB>\\<^esub>\n  op_smcf \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\n\ngoal (6 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> (op_smc \\<AA>)\n 3. semicategory \\<alpha> (op_smc \\<BB>)\n 4. smcf_dghm (op_smcf \\<FF>) :\n    smc_dg\n     (op_smc\n       \\<AA>) \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                    (op_smc \\<BB>)\n 5. op_smcf \\<FF>\\<lparr>HomDom\\<rparr> = op_smc \\<AA>\n 6. op_smcf \\<FF>\\<lparr>HomCod\\<rparr> = op_smc \\<BB>", "qed \n  (\n    auto simp: \n      smc_cs_simps\n      smc_op_simps\n      slicing_simps\n      slicing_commute[symmetric]\n      is_dghm.is_dghm_op \n      smcf_is_dghm\n      HomCod.semicategory_op \n      HomDom.semicategory_op\n  )"], ["", "lemma (in is_semifunctor) is_semifunctor_op':  \n  assumes \"\\<AA>' = op_smc \\<AA>\" and \"\\<BB>' = op_smc \\<BB>\" and \"\\<alpha>' = \\<alpha>\"\n  shows \"op_smcf \\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_smcf \\<FF> :\n    \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. op_smcf \\<FF> :\n    op_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> op_smc\n   \\<BB>", "by (rule is_semifunctor_op)"], ["", "lemmas is_semifunctor_op'[smc_op_intros] = is_semifunctor.is_semifunctor_op'"], ["", "lemma (in is_semifunctor) smcf_op_smcf_op_smcf[smc_op_simps]: \n  \"op_smcf (op_smcf \\<FF>) = \\<FF>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_smcf (op_smcf \\<FF>) = \\<FF>", "proof(rule smcf_eqI, unfold smc_op_simps)"], ["proof (state)\ngoal (6 subgoals):\n 1. op_smcf (op_smcf \\<FF>) :\n    ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<BB>\n 2. \\<FF> :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<DD>\n 3. \\<FF>\\<lparr>ObjMap\\<rparr> = \\<FF>\\<lparr>ObjMap\\<rparr>\n 4. \\<FF>\\<lparr>ArrMap\\<rparr> = \\<FF>\\<lparr>ArrMap\\<rparr>\n 5. ?\\<AA> = ?\\<CC>\n 6. ?\\<BB> = ?\\<DD>", "show \"op_smcf (op_smcf \\<FF>) : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_smcf (op_smcf \\<FF>) :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by \n      (\n        metis \n          HomCod.smc_op_smc_op_smc \n          HomDom.smc_op_smc_op_smc \n          is_semifunctor.is_semifunctor_op \n          is_semifunctor_op\n      )"], ["proof (state)\nthis:\n  op_smcf (op_smcf \\<FF>) :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (5 subgoals):\n 1. \\<FF> :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<DD>\n 2. \\<FF>\\<lparr>ObjMap\\<rparr> = \\<FF>\\<lparr>ObjMap\\<rparr>\n 3. \\<FF>\\<lparr>ArrMap\\<rparr> = \\<FF>\\<lparr>ArrMap\\<rparr>\n 4. \\<AA> = ?\\<CC>\n 5. \\<BB> = ?\\<DD>", "qed (simp_all add: is_semifunctor_axioms)"], ["", "lemmas smcf_op_smcf_op_smcf[smc_op_simps] = is_semifunctor.smcf_op_smcf_op_smcf"], ["", "lemma eq_op_smcf_iff[smc_op_simps]: \n  assumes \"\\<GG> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"\\<FF> : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\"\n  shows \"op_smcf \\<GG> = op_smcf \\<FF> \\<longleftrightarrow> \\<GG> = \\<FF>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (op_smcf \\<GG> = op_smcf \\<FF>) = (\\<GG> = \\<FF>)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. op_smcf \\<GG> = op_smcf \\<FF> \\<Longrightarrow> \\<GG> = \\<FF>\n 2. \\<GG> = \\<FF> \\<Longrightarrow> op_smcf \\<GG> = op_smcf \\<FF>", "interpret L: is_semifunctor \\<alpha> \\<AA> \\<BB> \\<GG>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(1))"], ["proof (state)\ngoal (2 subgoals):\n 1. op_smcf \\<GG> = op_smcf \\<FF> \\<Longrightarrow> \\<GG> = \\<FF>\n 2. \\<GG> = \\<FF> \\<Longrightarrow> op_smcf \\<GG> = op_smcf \\<FF>", "interpret R: is_semifunctor \\<alpha> \\<CC> \\<DD> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>", "by (rule assms(2))"], ["proof (state)\ngoal (2 subgoals):\n 1. op_smcf \\<GG> = op_smcf \\<FF> \\<Longrightarrow> \\<GG> = \\<FF>\n 2. \\<GG> = \\<FF> \\<Longrightarrow> op_smcf \\<GG> = op_smcf \\<FF>", "assume prems: \"op_smcf \\<GG> = op_smcf \\<FF>\""], ["proof (state)\nthis:\n  op_smcf \\<GG> = op_smcf \\<FF>\n\ngoal (2 subgoals):\n 1. op_smcf \\<GG> = op_smcf \\<FF> \\<Longrightarrow> \\<GG> = \\<FF>\n 2. \\<GG> = \\<FF> \\<Longrightarrow> op_smcf \\<GG> = op_smcf \\<FF>", "show \"\\<GG> = \\<FF>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> = \\<FF>", "proof(rule smcf_eqI[OF assms])"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<GG>\\<lparr>ObjMap\\<rparr> = \\<FF>\\<lparr>ObjMap\\<rparr>\n 2. \\<GG>\\<lparr>ArrMap\\<rparr> = \\<FF>\\<lparr>ArrMap\\<rparr>\n 3. \\<AA> = \\<CC>\n 4. \\<BB> = \\<DD>", "from prems R.smcf_op_smcf_op_smcf L.smcf_op_smcf_op_smcf"], ["proof (chain)\npicking this:\n  op_smcf \\<GG> = op_smcf \\<FF>\n  op_smcf (op_smcf \\<FF>) = \\<FF>\n  op_smcf (op_smcf \\<GG>) = \\<GG>", "show \n      \"\\<GG>\\<lparr>ObjMap\\<rparr> = \\<FF>\\<lparr>ObjMap\\<rparr>\" and \"\\<GG>\\<lparr>ArrMap\\<rparr> = \\<FF>\\<lparr>ArrMap\\<rparr>\""], ["proof (prove)\nusing this:\n  op_smcf \\<GG> = op_smcf \\<FF>\n  op_smcf (op_smcf \\<FF>) = \\<FF>\n  op_smcf (op_smcf \\<GG>) = \\<GG>\n\ngoal (1 subgoal):\n 1. \\<GG>\\<lparr>ObjMap\\<rparr> = \\<FF>\\<lparr>ObjMap\\<rparr> &&&\n    \\<GG>\\<lparr>ArrMap\\<rparr> = \\<FF>\\<lparr>ArrMap\\<rparr>", "by metis+"], ["proof (state)\nthis:\n  \\<GG>\\<lparr>ObjMap\\<rparr> = \\<FF>\\<lparr>ObjMap\\<rparr>\n  \\<GG>\\<lparr>ArrMap\\<rparr> = \\<FF>\\<lparr>ArrMap\\<rparr>\n\ngoal (2 subgoals):\n 1. \\<AA> = \\<CC>\n 2. \\<BB> = \\<DD>", "from prems R.smcf_op_smcf_op_smcf L.smcf_op_smcf_op_smcf"], ["proof (chain)\npicking this:\n  op_smcf \\<GG> = op_smcf \\<FF>\n  op_smcf (op_smcf \\<FF>) = \\<FF>\n  op_smcf (op_smcf \\<GG>) = \\<GG>", "have \n      \"\\<GG>\\<lparr>HomDom\\<rparr> = \\<FF>\\<lparr>HomDom\\<rparr>\" \"\\<GG>\\<lparr>HomCod\\<rparr> = \\<FF>\\<lparr>HomCod\\<rparr>\""], ["proof (prove)\nusing this:\n  op_smcf \\<GG> = op_smcf \\<FF>\n  op_smcf (op_smcf \\<FF>) = \\<FF>\n  op_smcf (op_smcf \\<GG>) = \\<GG>\n\ngoal (1 subgoal):\n 1. \\<GG>\\<lparr>HomDom\\<rparr> = \\<FF>\\<lparr>HomDom\\<rparr> &&&\n    \\<GG>\\<lparr>HomCod\\<rparr> = \\<FF>\\<lparr>HomCod\\<rparr>", "by auto"], ["proof (state)\nthis:\n  \\<GG>\\<lparr>HomDom\\<rparr> = \\<FF>\\<lparr>HomDom\\<rparr>\n  \\<GG>\\<lparr>HomCod\\<rparr> = \\<FF>\\<lparr>HomCod\\<rparr>\n\ngoal (2 subgoals):\n 1. \\<AA> = \\<CC>\n 2. \\<BB> = \\<DD>", "then"], ["proof (chain)\npicking this:\n  \\<GG>\\<lparr>HomDom\\<rparr> = \\<FF>\\<lparr>HomDom\\<rparr>\n  \\<GG>\\<lparr>HomCod\\<rparr> = \\<FF>\\<lparr>HomCod\\<rparr>", "show \"\\<AA> = \\<CC>\" \"\\<BB> = \\<DD>\""], ["proof (prove)\nusing this:\n  \\<GG>\\<lparr>HomDom\\<rparr> = \\<FF>\\<lparr>HomDom\\<rparr>\n  \\<GG>\\<lparr>HomCod\\<rparr> = \\<FF>\\<lparr>HomCod\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<AA> = \\<CC> &&& \\<BB> = \\<DD>", "by (simp_all add: smc_cs_simps)"], ["proof (state)\nthis:\n  \\<AA> = \\<CC>\n  \\<BB> = \\<DD>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<GG> = \\<FF>\n\ngoal (1 subgoal):\n 1. \\<GG> = \\<FF> \\<Longrightarrow> op_smcf \\<GG> = op_smcf \\<FF>", "qed auto"], ["", "subsection\\<open>Composition of covariant semifunctors\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "abbreviation (input) smcf_comp :: \"V \\<Rightarrow> V \\<Rightarrow> V\" (infixl \"\\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\" 55)\n  where \"smcf_comp \\<equiv> dghm_comp\""], ["", "text\\<open>Slicing.\\<close>"], ["", "lemma smcf_dghm_smcf_comp[slicing_commute]: \n  \"smcf_dghm \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M smcf_dghm \\<FF> = smcf_dghm (\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n    smcf_dghm \\<FF> =\n    smcf_dghm (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>)", "unfolding dghm_comp_def smcf_dghm_def dghm_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. [[\\<GG>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<GG>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      smc_dg (\\<GG>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n      smc_dg\n       (\\<GG>\\<lparr>3\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>\\<circ>\n     [\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      smc_dg (\\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n      smc_dg\n       (\\<FF>\\<lparr>3\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     [\\<GG>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<GG>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      smc_dg (\\<GG>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n      smc_dg\n       (\\<GG>\\<lparr>3\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<circ>\\<^sub>\\<circ>\n     [\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      smc_dg (\\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n      smc_dg\n       (\\<FF>\\<lparr>3\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     [\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      smc_dg (\\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n      smc_dg\n       (\\<FF>\\<lparr>3\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n     [\\<GG>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<GG>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      smc_dg (\\<GG>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n      smc_dg\n       (\\<GG>\\<lparr>3\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ> =\n    [[\\<GG>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>\\<circ>\n      \\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<GG>\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<circ>\\<^sub>\\<circ>\n      \\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      \\<GG>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     [\\<GG>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>\\<circ>\n      \\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<GG>\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<circ>\\<^sub>\\<circ>\n      \\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      \\<GG>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     smc_dg\n      ([\\<GG>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>\\<circ>\n        \\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n        \\<GG>\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<circ>\\<^sub>\\<circ>\n        \\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n        \\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n        \\<GG>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n     smc_dg\n      ([\\<GG>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>\\<circ>\n        \\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n        \\<GG>\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<circ>\\<^sub>\\<circ>\n        \\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n        \\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n        \\<GG>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>", "by (simp add: nat_omega_simps)"], ["", "subsubsection\\<open>Object map\\<close>"], ["", "lemma smcf_comp_ObjMap_vsv[smc_cs_intros]: \n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"vsv ((\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF>)\\<lparr>ObjMap\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv ((\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n          \\<FF>)\\<lparr>ObjMap\\<rparr>)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. vsv ((\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n          \\<FF>)\\<lparr>ObjMap\\<rparr>)", "interpret L: is_semifunctor \\<alpha> \\<BB> \\<CC> \\<GG>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. vsv ((\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n          \\<FF>)\\<lparr>ObjMap\\<rparr>)", "interpret R: is_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. vsv ((\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n          \\<FF>)\\<lparr>ObjMap\\<rparr>)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv ((\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n          \\<FF>)\\<lparr>ObjMap\\<rparr>)", "by \n      (\n        rule dghm_comp_ObjMap_vsv\n          [\n            OF L.smcf_is_dghm R.smcf_is_dghm, \n            unfolded slicing_simps slicing_commute\n          ]\n      )"], ["proof (state)\nthis:\n  vsv ((\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n        \\<FF>)\\<lparr>ObjMap\\<rparr>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smcf_comp_ObjMap_vdomain[smc_cs_simps]:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<D>\\<^sub>\\<circ> ((\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF>)\\<lparr>ObjMap\\<rparr>) = \\<AA>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n       \\<FF>)\\<lparr>ObjMap\\<rparr>) =\n    \\<AA>\\<lparr>Obj\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n       \\<FF>)\\<lparr>ObjMap\\<rparr>) =\n    \\<AA>\\<lparr>Obj\\<rparr>", "interpret L: is_semifunctor \\<alpha> \\<BB> \\<CC> \\<GG>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n       \\<FF>)\\<lparr>ObjMap\\<rparr>) =\n    \\<AA>\\<lparr>Obj\\<rparr>", "interpret R: is_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n       \\<FF>)\\<lparr>ObjMap\\<rparr>) =\n    \\<AA>\\<lparr>Obj\\<rparr>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n       \\<FF>)\\<lparr>ObjMap\\<rparr>) =\n    \\<AA>\\<lparr>Obj\\<rparr>", "by \n      (\n        rule dghm_comp_ObjMap_vdomain\n          [\n            OF L.smcf_is_dghm R.smcf_is_dghm, \n            unfolded slicing_simps slicing_commute\n          ]\n      )"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   ((\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     \\<FF>)\\<lparr>ObjMap\\<rparr>) =\n  \\<AA>\\<lparr>Obj\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smcf_comp_ObjMap_vrange:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<R>\\<^sub>\\<circ> ((\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF>)\\<lparr>ObjMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     ((\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n       \\<FF>)\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     ((\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n       \\<FF>)\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "interpret L: is_semifunctor \\<alpha> \\<BB> \\<CC> \\<GG>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     ((\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n       \\<FF>)\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "interpret R: is_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     ((\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n       \\<FF>)\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     ((\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n       \\<FF>)\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "by \n      (\n        rule dghm_comp_ObjMap_vrange\n          [\n            OF L.smcf_is_dghm R.smcf_is_dghm, \n            unfolded slicing_simps slicing_commute\n          ]\n      )"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ>\n   ((\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     \\<FF>)\\<lparr>ObjMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smcf_comp_ObjMap_app[smc_cs_simps]:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" \n    and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n    and [simp]: \"a \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>\"\n  shows \"(\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> = \\<GG>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     \\<FF>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n    \\<GG>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     \\<FF>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n    \\<GG>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>\\<rparr>", "interpret L: is_semifunctor \\<alpha> \\<BB> \\<CC> \\<GG>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     \\<FF>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n    \\<GG>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>\\<rparr>", "interpret R: is_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     \\<FF>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n    \\<GG>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>\\<rparr>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     \\<FF>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n    \\<GG>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>\\<rparr>", "by \n      (\n        rule dghm_comp_ObjMap_app\n          [\n            OF L.smcf_is_dghm R.smcf_is_dghm, \n            unfolded slicing_simps slicing_commute, \n            OF assms(3)\n          ]\n      )"], ["proof (state)\nthis:\n  (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n   \\<FF>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n  \\<GG>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Arrow map\\<close>"], ["", "lemma smcf_comp_ArrMap_vsv[smc_cs_intros]: \n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"vsv ((\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF>)\\<lparr>ArrMap\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv ((\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n          \\<FF>)\\<lparr>ArrMap\\<rparr>)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. vsv ((\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n          \\<FF>)\\<lparr>ArrMap\\<rparr>)", "interpret L: is_semifunctor \\<alpha> \\<BB> \\<CC> \\<GG>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. vsv ((\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n          \\<FF>)\\<lparr>ArrMap\\<rparr>)", "interpret R: is_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. vsv ((\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n          \\<FF>)\\<lparr>ArrMap\\<rparr>)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv ((\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n          \\<FF>)\\<lparr>ArrMap\\<rparr>)", "by \n      (\n        rule dghm_comp_ArrMap_vsv\n          [\n            OF L.smcf_is_dghm R.smcf_is_dghm, \n            unfolded slicing_simps slicing_commute\n          ]\n      )"], ["proof (state)\nthis:\n  vsv ((\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n        \\<FF>)\\<lparr>ArrMap\\<rparr>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smcf_comp_ArrMap_vdomain[smc_cs_simps]:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<D>\\<^sub>\\<circ> ((\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF>)\\<lparr>ArrMap\\<rparr>) = \\<AA>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n       \\<FF>)\\<lparr>ArrMap\\<rparr>) =\n    \\<AA>\\<lparr>Arr\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n       \\<FF>)\\<lparr>ArrMap\\<rparr>) =\n    \\<AA>\\<lparr>Arr\\<rparr>", "interpret L: is_semifunctor \\<alpha> \\<BB> \\<CC> \\<GG>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n       \\<FF>)\\<lparr>ArrMap\\<rparr>) =\n    \\<AA>\\<lparr>Arr\\<rparr>", "interpret R: is_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n       \\<FF>)\\<lparr>ArrMap\\<rparr>) =\n    \\<AA>\\<lparr>Arr\\<rparr>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n       \\<FF>)\\<lparr>ArrMap\\<rparr>) =\n    \\<AA>\\<lparr>Arr\\<rparr>", "by \n      (\n        rule dghm_comp_ArrMap_vdomain\n          [\n            OF L.smcf_is_dghm R.smcf_is_dghm, \n            unfolded slicing_simps slicing_commute\n          ]\n      )"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   ((\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     \\<FF>)\\<lparr>ArrMap\\<rparr>) =\n  \\<AA>\\<lparr>Arr\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smcf_comp_ArrMap_vrange:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<R>\\<^sub>\\<circ> ((\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF>)\\<lparr>ArrMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     ((\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n       \\<FF>)\\<lparr>ArrMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     ((\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n       \\<FF>)\\<lparr>ArrMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "interpret L: is_semifunctor \\<alpha> \\<BB> \\<CC> \\<GG>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     ((\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n       \\<FF>)\\<lparr>ArrMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "interpret R: is_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     ((\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n       \\<FF>)\\<lparr>ArrMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     ((\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n       \\<FF>)\\<lparr>ArrMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "by \n      (\n        rule dghm_comp_ArrMap_vrange\n          [\n            OF L.smcf_is_dghm R.smcf_is_dghm, \n            unfolded slicing_simps slicing_commute\n          ]\n      )"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ>\n   ((\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     \\<FF>)\\<lparr>ArrMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smcf_comp_ArrMap_app[smc_cs_simps]:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" \n    and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n    and [simp]: \"f \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Arr\\<rparr>\"\n  shows \"(\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = \\<GG>\\<lparr>ArrMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<GG>\\<lparr>ArrMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<GG>\\<lparr>ArrMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\\<rparr>", "interpret L: is_semifunctor \\<alpha> \\<BB> \\<CC> \\<GG>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<GG>\\<lparr>ArrMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\\<rparr>", "interpret R: is_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<GG>\\<lparr>ArrMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\\<rparr>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<GG>\\<lparr>ArrMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\\<rparr>", "by \n      (\n        rule dghm_comp_ArrMap_app\n          [\n            OF L.smcf_is_dghm R.smcf_is_dghm, \n            unfolded slicing_simps slicing_commute,\n            OF assms(3)\n          ]\n      )"], ["proof (state)\nthis:\n  (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n   \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n  \\<GG>\\<lparr>ArrMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Further properties\\<close>"], ["", "lemma smcf_comp_is_semifunctor[smc_cs_intros]:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "interpret L: is_semifunctor \\<alpha> \\<BB> \\<CC> \\<GG>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "interpret R: is_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "proof(rule is_semifunctorI, unfold dghm_comp_components(3,4))"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>)\n 3. semicategory \\<alpha> \\<AA>\n 4. semicategory \\<alpha> \\<CC>\n 5. vcard (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) =\n    4\\<^sub>\\<nat>\n 6. smcf_dghm (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 \\<CC>\n 7. \\<FF>\\<lparr>HomDom\\<rparr> = \\<AA>\n 8. \\<GG>\\<lparr>HomCod\\<rparr> = \\<CC>\n 9. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n                        f\\<rparr> =\n                         (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "show \"vfsequence (\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>)", "by (simp add: dghm_comp_def)"], ["proof (state)\nthis:\n  vfsequence (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>)\n\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> \\<AA>\n 3. semicategory \\<alpha> \\<CC>\n 4. vcard (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) =\n    4\\<^sub>\\<nat>\n 5. smcf_dghm (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 \\<CC>\n 6. \\<FF>\\<lparr>HomDom\\<rparr> = \\<AA>\n 7. \\<GG>\\<lparr>HomCod\\<rparr> = \\<CC>\n 8. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n                        f\\<rparr> =\n                         (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "show \"vcard (\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF>) = 4\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) =\n    4\\<^sub>\\<nat>", "unfolding dghm_comp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard\n     [\\<GG>\\<lparr>ObjMap\\<rparr> \\<circ>\\<^sub>\\<circ>\n      \\<FF>\\<lparr>ObjMap\\<rparr>,\n      \\<GG>\\<lparr>ArrMap\\<rparr> \\<circ>\\<^sub>\\<circ>\n      \\<FF>\\<lparr>ArrMap\\<rparr>,\n      \\<FF>\\<lparr>HomDom\\<rparr>,\n      \\<GG>\\<lparr>HomCod\\<rparr>]\\<^sub>\\<circ> =\n    4\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  vcard (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) =\n  4\\<^sub>\\<nat>\n\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> \\<AA>\n 3. semicategory \\<alpha> \\<CC>\n 4. smcf_dghm (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 \\<CC>\n 5. \\<FF>\\<lparr>HomDom\\<rparr> = \\<AA>\n 6. \\<GG>\\<lparr>HomCod\\<rparr> = \\<CC>\n 7. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n                        f\\<rparr> =\n                         (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "fix g b c f a"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> \\<AA>\n 3. semicategory \\<alpha> \\<CC>\n 4. smcf_dghm (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 \\<CC>\n 5. \\<FF>\\<lparr>HomDom\\<rparr> = \\<AA>\n 6. \\<GG>\\<lparr>HomCod\\<rparr> = \\<CC>\n 7. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n                        f\\<rparr> =\n                         (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "assume \"g : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> c\" \"f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\""], ["proof (state)\nthis:\n  g : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\n\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> \\<AA>\n 3. semicategory \\<alpha> \\<CC>\n 4. smcf_dghm (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 \\<CC>\n 5. \\<FF>\\<lparr>HomDom\\<rparr> = \\<AA>\n 6. \\<GG>\\<lparr>HomCod\\<rparr> = \\<CC>\n 7. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n                        f\\<rparr> =\n                         (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "with assms"], ["proof (chain)\npicking this:\n  \\<GG> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  g : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b", "show \"(\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f\\<rparr> = \n      (\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> (\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<GG> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  g : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\n\ngoal (1 subgoal):\n 1. (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n   f\\<rparr> =\n    (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "by (cs_concl cs_simp: smc_cs_simps cs_intro: smc_cs_intros)"], ["proof (state)\nthis:\n  (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n   \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n f\\<rparr> =\n  (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n   \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n   \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\n\ngoal (6 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> \\<AA>\n 3. semicategory \\<alpha> \\<CC>\n 4. smcf_dghm (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 \\<CC>\n 5. \\<FF>\\<lparr>HomDom\\<rparr> = \\<AA>\n 6. \\<GG>\\<lparr>HomCod\\<rparr> = \\<CC>", "qed \n    (\n      auto \n        simp: slicing_commute[symmetric] smc_cs_simps smc_cs_intros \n        intro: dg_cs_intros slicing_intros\n    )"], ["proof (state)\nthis:\n  \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smcf_comp_assoc[smc_cs_simps]:\n  assumes \"\\<HH> : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\" \n    and \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" \n    and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"(\\<HH> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<GG>) \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF> = \\<HH> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F (\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n    \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n    \\<FF> =\n    \\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n    (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>)", "proof(rule smcf_eqI[of \\<alpha> \\<AA> \\<DD> _ \\<AA> \\<DD>])"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n    \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n    \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\n 2. \\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n    (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\n 3. (\\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     \\<FF>)\\<lparr>ObjMap\\<rparr> =\n    (\\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n      \\<FF>))\\<lparr>ObjMap\\<rparr>\n 4. (\\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     \\<FF>)\\<lparr>ArrMap\\<rparr> =\n    (\\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n      \\<FF>))\\<lparr>ArrMap\\<rparr>\n 5. \\<AA> = \\<AA>\n 6. \\<DD> = \\<DD>", "interpret \\<HH>: is_semifunctor \\<alpha> \\<CC> \\<DD> \\<HH>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<HH> :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>", "by (rule assms(1))"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n    \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n    \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\n 2. \\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n    (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\n 3. (\\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     \\<FF>)\\<lparr>ObjMap\\<rparr> =\n    (\\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n      \\<FF>))\\<lparr>ObjMap\\<rparr>\n 4. (\\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     \\<FF>)\\<lparr>ArrMap\\<rparr> =\n    (\\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n      \\<FF>))\\<lparr>ArrMap\\<rparr>\n 5. \\<AA> = \\<AA>\n 6. \\<DD> = \\<DD>", "interpret \\<GG>: is_semifunctor \\<alpha> \\<BB> \\<CC> \\<GG>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(2))"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n    \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n    \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\n 2. \\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n    (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\n 3. (\\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     \\<FF>)\\<lparr>ObjMap\\<rparr> =\n    (\\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n      \\<FF>))\\<lparr>ObjMap\\<rparr>\n 4. (\\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     \\<FF>)\\<lparr>ArrMap\\<rparr> =\n    (\\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n      \\<FF>))\\<lparr>ArrMap\\<rparr>\n 5. \\<AA> = \\<AA>\n 6. \\<DD> = \\<DD>", "interpret \\<FF>: is_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(3))"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n    \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n    \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\n 2. \\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n    (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\n 3. (\\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     \\<FF>)\\<lparr>ObjMap\\<rparr> =\n    (\\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n      \\<FF>))\\<lparr>ObjMap\\<rparr>\n 4. (\\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     \\<FF>)\\<lparr>ArrMap\\<rparr> =\n    (\\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n      \\<FF>))\\<lparr>ArrMap\\<rparr>\n 5. \\<AA> = \\<AA>\n 6. \\<DD> = \\<DD>", "from \\<FF>.is_semifunctor_axioms \\<GG>.is_semifunctor_axioms \\<HH>.is_semifunctor_axioms"], ["proof (chain)\npicking this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  \\<GG> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<HH> :\n  \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>", "show \"\\<HH> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F (\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF>) : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\" \n    and \"\\<HH> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\""], ["proof (prove)\nusing this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  \\<GG> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<HH> :\n  \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\n\ngoal (1 subgoal):\n 1. \\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n    (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD> &&&\n    \\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n    \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n    \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>", "by (auto intro: smc_cs_intros)"], ["proof (state)\nthis:\n  \\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n  (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\n  \\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n  \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\n\ngoal (4 subgoals):\n 1. (\\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     \\<FF>)\\<lparr>ObjMap\\<rparr> =\n    (\\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n      \\<FF>))\\<lparr>ObjMap\\<rparr>\n 2. (\\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     \\<FF>)\\<lparr>ArrMap\\<rparr> =\n    (\\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n     (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n      \\<FF>))\\<lparr>ArrMap\\<rparr>\n 3. \\<AA> = \\<AA>\n 4. \\<DD> = \\<DD>", "qed (simp_all add: dghm_comp_components vcomp_assoc)"], ["", "lemma op_smcf_smcf_comp[smc_op_simps]: \n  \"op_smcf (\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF>) = op_smcf \\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F op_smcf \\<FF>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_smcf (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) =\n    op_smcf \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M op_smcf \\<FF>", "unfolding dghm_comp_def op_smcf_def dghm_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. [[\\<GG>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>\\<circ>\n      \\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<GG>\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<circ>\\<^sub>\\<circ>\n      \\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      \\<GG>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     [\\<GG>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>\\<circ>\n      \\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<GG>\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<circ>\\<^sub>\\<circ>\n      \\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      \\<GG>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     op_smc\n      ([\\<GG>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>\\<circ>\n        \\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n        \\<GG>\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<circ>\\<^sub>\\<circ>\n        \\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n        \\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n        \\<GG>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n     op_smc\n      ([\\<GG>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>\\<circ>\n        \\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n        \\<GG>\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<circ>\\<^sub>\\<circ>\n        \\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n        \\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n        \\<GG>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ> =\n    [[\\<GG>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<GG>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      op_smc (\\<GG>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n      op_smc\n       (\\<GG>\\<lparr>3\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>\\<circ>\n     [\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      op_smc (\\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n      op_smc\n       (\\<FF>\\<lparr>3\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     [\\<GG>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<GG>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      op_smc (\\<GG>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n      op_smc\n       (\\<GG>\\<lparr>3\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<circ>\\<^sub>\\<circ>\n     [\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      op_smc (\\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n      op_smc\n       (\\<FF>\\<lparr>3\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     [\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      op_smc (\\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n      op_smc\n       (\\<FF>\\<lparr>3\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n     [\\<GG>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<GG>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      op_smc (\\<GG>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n      op_smc\n       (\\<GG>\\<lparr>3\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>", "by (simp add: nat_omega_simps)"], ["", "subsection\\<open>Composition of contravariant semifunctors\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "text\\<open>See section 1.2 in \\cite{bodo_categories_1970}.\\<close>"], ["", "definition smcf_cn_comp :: \"V \\<Rightarrow> V \\<Rightarrow> V\" (infixl \\<open>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\\<close> 55)\n  where \"\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF> =\n    [\n      \\<GG>\\<lparr>ObjMap\\<rparr> \\<circ>\\<^sub>\\<circ> \\<FF>\\<lparr>ObjMap\\<rparr>, \n      \\<GG>\\<lparr>ArrMap\\<rparr> \\<circ>\\<^sub>\\<circ> \\<FF>\\<lparr>ArrMap\\<rparr>, \n      op_smc (\\<FF>\\<lparr>HomDom\\<rparr>), \n      \\<GG>\\<lparr>HomCod\\<rparr>\n    ]\\<^sub>\\<circ>\""], ["", "text\\<open>Components.\\<close>"], ["", "lemma smcf_cn_comp_components:\n  shows \"(\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ObjMap\\<rparr> = \\<GG>\\<lparr>ObjMap\\<rparr> \\<circ>\\<^sub>\\<circ> \\<FF>\\<lparr>ObjMap\\<rparr>\"\n    and \"(\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ArrMap\\<rparr> = \\<GG>\\<lparr>ArrMap\\<rparr> \\<circ>\\<^sub>\\<circ> \\<FF>\\<lparr>ArrMap\\<rparr>\"\n    and [smc_cn_cs_simps]: \"(\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>HomDom\\<rparr> = op_smc (\\<FF>\\<lparr>HomDom\\<rparr>)\"\n    and [smc_cn_cs_simps]: \"(\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>HomCod\\<rparr> = \\<GG>\\<lparr>HomCod\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n      \\<FF>)\\<lparr>ObjMap\\<rparr> =\n     \\<GG>\\<lparr>ObjMap\\<rparr> \\<circ>\\<^sub>\\<circ>\n     \\<FF>\\<lparr>ObjMap\\<rparr> &&&\n     (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n      \\<FF>)\\<lparr>ArrMap\\<rparr> =\n     \\<GG>\\<lparr>ArrMap\\<rparr> \\<circ>\\<^sub>\\<circ>\n     \\<FF>\\<lparr>ArrMap\\<rparr>) &&&\n    (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n     \\<FF>)\\<lparr>HomDom\\<rparr> =\n    op_smc (\\<FF>\\<lparr>HomDom\\<rparr>) &&&\n    (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n     \\<FF>)\\<lparr>HomCod\\<rparr> =\n    \\<GG>\\<lparr>HomCod\\<rparr>", "unfolding smcf_cn_comp_def dghm_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([\\<GG>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>\\<circ>\n      \\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<GG>\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<circ>\\<^sub>\\<circ>\n      \\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      op_smc (\\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n      \\<GG>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n     \\<GG>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>\\<circ>\n     \\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> &&&\n     [\\<GG>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>\\<circ>\n      \\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<GG>\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<circ>\\<^sub>\\<circ>\n      \\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      op_smc (\\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n      \\<GG>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> =\n     \\<GG>\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<circ>\\<^sub>\\<circ>\n     \\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>) &&&\n    [\\<GG>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>\\<circ>\n     \\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     \\<GG>\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<circ>\\<^sub>\\<circ>\n     \\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     op_smc (\\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n     \\<GG>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr> =\n    op_smc (\\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>) &&&\n    [\\<GG>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>\\<circ>\n     \\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     \\<GG>\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<circ>\\<^sub>\\<circ>\n     \\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     op_smc (\\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n     \\<GG>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr> =\n    \\<GG>\\<lparr>3\\<^sub>\\<nat>\\<rparr>", "by (simp_all add: nat_omega_simps)"], ["", "text\\<open>Slicing.\\<close>"], ["", "lemma smcf_dghm_smcf_cn_comp[slicing_commute]: \n  \"smcf_dghm \\<GG> \\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\\<circ> smcf_dghm \\<FF> = smcf_dghm (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm \\<GG> \\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\\<circ>\n    smcf_dghm \\<FF> =\n    smcf_dghm (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)", "unfolding dghm_cn_comp_def smcf_cn_comp_def smcf_dghm_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. [[\\<GG>\\<lparr>ObjMap\\<rparr>, \\<GG>\\<lparr>ArrMap\\<rparr>,\n      smc_dg (\\<GG>\\<lparr>HomDom\\<rparr>),\n      smc_dg\n       (\\<GG>\\<lparr>HomCod\\<rparr>)]\\<^sub>\\<circ>\\<lparr>ObjMap\\<rparr> \\<circ>\\<^sub>\\<circ>\n     [\\<FF>\\<lparr>ObjMap\\<rparr>, \\<FF>\\<lparr>ArrMap\\<rparr>,\n      smc_dg (\\<FF>\\<lparr>HomDom\\<rparr>),\n      smc_dg\n       (\\<FF>\\<lparr>HomCod\\<rparr>)]\\<^sub>\\<circ>\\<lparr>ObjMap\\<rparr>,\n     [\\<GG>\\<lparr>ObjMap\\<rparr>, \\<GG>\\<lparr>ArrMap\\<rparr>,\n      smc_dg (\\<GG>\\<lparr>HomDom\\<rparr>),\n      smc_dg\n       (\\<GG>\\<lparr>HomCod\\<rparr>)]\\<^sub>\\<circ>\\<lparr>ArrMap\\<rparr> \\<circ>\\<^sub>\\<circ>\n     [\\<FF>\\<lparr>ObjMap\\<rparr>, \\<FF>\\<lparr>ArrMap\\<rparr>,\n      smc_dg (\\<FF>\\<lparr>HomDom\\<rparr>),\n      smc_dg\n       (\\<FF>\\<lparr>HomCod\\<rparr>)]\\<^sub>\\<circ>\\<lparr>ArrMap\\<rparr>,\n     op_dg\n      ([\\<FF>\\<lparr>ObjMap\\<rparr>, \\<FF>\\<lparr>ArrMap\\<rparr>,\n        smc_dg (\\<FF>\\<lparr>HomDom\\<rparr>),\n        smc_dg\n         (\\<FF>\\<lparr>HomCod\\<rparr>)]\\<^sub>\\<circ>\\<lparr>HomDom\\<rparr>),\n     [\\<GG>\\<lparr>ObjMap\\<rparr>, \\<GG>\\<lparr>ArrMap\\<rparr>,\n      smc_dg (\\<GG>\\<lparr>HomDom\\<rparr>),\n      smc_dg\n       (\\<GG>\\<lparr>HomCod\\<rparr>)]\\<^sub>\\<circ>\\<lparr>HomCod\\<rparr>]\\<^sub>\\<circ> =\n    [[\\<GG>\\<lparr>ObjMap\\<rparr> \\<circ>\\<^sub>\\<circ>\n      \\<FF>\\<lparr>ObjMap\\<rparr>,\n      \\<GG>\\<lparr>ArrMap\\<rparr> \\<circ>\\<^sub>\\<circ>\n      \\<FF>\\<lparr>ArrMap\\<rparr>,\n      op_smc (\\<FF>\\<lparr>HomDom\\<rparr>),\n      \\<GG>\\<lparr>HomCod\\<rparr>]\\<^sub>\\<circ>\\<lparr>ObjMap\\<rparr>,\n     [\\<GG>\\<lparr>ObjMap\\<rparr> \\<circ>\\<^sub>\\<circ>\n      \\<FF>\\<lparr>ObjMap\\<rparr>,\n      \\<GG>\\<lparr>ArrMap\\<rparr> \\<circ>\\<^sub>\\<circ>\n      \\<FF>\\<lparr>ArrMap\\<rparr>,\n      op_smc (\\<FF>\\<lparr>HomDom\\<rparr>),\n      \\<GG>\\<lparr>HomCod\\<rparr>]\\<^sub>\\<circ>\\<lparr>ArrMap\\<rparr>,\n     smc_dg\n      ([\\<GG>\\<lparr>ObjMap\\<rparr> \\<circ>\\<^sub>\\<circ>\n        \\<FF>\\<lparr>ObjMap\\<rparr>,\n        \\<GG>\\<lparr>ArrMap\\<rparr> \\<circ>\\<^sub>\\<circ>\n        \\<FF>\\<lparr>ArrMap\\<rparr>,\n        op_smc (\\<FF>\\<lparr>HomDom\\<rparr>),\n        \\<GG>\\<lparr>HomCod\\<rparr>]\\<^sub>\\<circ>\\<lparr>HomDom\\<rparr>),\n     smc_dg\n      ([\\<GG>\\<lparr>ObjMap\\<rparr> \\<circ>\\<^sub>\\<circ>\n        \\<FF>\\<lparr>ObjMap\\<rparr>,\n        \\<GG>\\<lparr>ArrMap\\<rparr> \\<circ>\\<^sub>\\<circ>\n        \\<FF>\\<lparr>ArrMap\\<rparr>,\n        op_smc (\\<FF>\\<lparr>HomDom\\<rparr>),\n        \\<GG>\\<lparr>HomCod\\<rparr>]\\<^sub>\\<circ>\\<lparr>HomCod\\<rparr>)]\\<^sub>\\<circ>", "by (simp add: nat_omega_simps slicing_commute dghm_field_simps)"], ["", "subsubsection\\<open>Object map: two contravariant semifunctors\\<close>"], ["", "lemma smcf_cn_comp_ObjMap_vsv[smc_cn_cs_intros]: \n  assumes \"\\<GG> : \\<BB> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"vsv ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ObjMap\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n          \\<FF>)\\<lparr>ObjMap\\<rparr>)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. vsv ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n          \\<FF>)\\<lparr>ObjMap\\<rparr>)", "interpret L: is_semifunctor \\<alpha> \\<open>op_smc \\<BB>\\<close> \\<CC> \\<GG>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> :\n    op_smc\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. vsv ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n          \\<FF>)\\<lparr>ObjMap\\<rparr>)", "interpret R: is_semifunctor \\<alpha> \\<open>op_smc \\<AA>\\<close> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    op_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. vsv ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n          \\<FF>)\\<lparr>ObjMap\\<rparr>)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n          \\<FF>)\\<lparr>ObjMap\\<rparr>)", "by \n      (\n        rule dghm_cn_cov_comp_ObjMap_vsv\n          [\n            OF \n              L.smcf_is_dghm[unfolded slicing_commute[symmetric]] \n              R.smcf_is_dghm[unfolded slicing_commute[symmetric]],\n            unfolded slicing_commute slicing_simps\n          ]\n      )"], ["proof (state)\nthis:\n  vsv ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n        \\<FF>)\\<lparr>ObjMap\\<rparr>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smcf_cn_comp_ObjMap_vdomain[smc_cn_cs_simps]:\n  assumes \"\\<GG> : \\<BB> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<D>\\<^sub>\\<circ> ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ObjMap\\<rparr>) = \\<AA>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n       \\<FF>)\\<lparr>ObjMap\\<rparr>) =\n    \\<AA>\\<lparr>Obj\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n       \\<FF>)\\<lparr>ObjMap\\<rparr>) =\n    \\<AA>\\<lparr>Obj\\<rparr>", "interpret L: is_semifunctor \\<alpha> \\<open>op_smc \\<BB>\\<close> \\<CC> \\<GG>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> :\n    op_smc\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n       \\<FF>)\\<lparr>ObjMap\\<rparr>) =\n    \\<AA>\\<lparr>Obj\\<rparr>", "interpret R: is_semifunctor \\<alpha> \\<open>op_smc \\<AA>\\<close> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    op_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n       \\<FF>)\\<lparr>ObjMap\\<rparr>) =\n    \\<AA>\\<lparr>Obj\\<rparr>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n       \\<FF>)\\<lparr>ObjMap\\<rparr>) =\n    \\<AA>\\<lparr>Obj\\<rparr>", "by \n      (\n        rule dghm_cn_comp_ObjMap_vdomain\n          [\n            OF \n              L.smcf_is_dghm[unfolded slicing_commute[symmetric]] \n              R.smcf_is_dghm[unfolded slicing_commute[symmetric]],\n            unfolded slicing_commute slicing_simps\n          ]\n      )"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n     \\<FF>)\\<lparr>ObjMap\\<rparr>) =\n  \\<AA>\\<lparr>Obj\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smcf_cn_comp_ObjMap_vrange:\n  assumes \"\\<GG> : \\<BB> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<R>\\<^sub>\\<circ> ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ObjMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n       \\<FF>)\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n       \\<FF>)\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "interpret L: is_semifunctor \\<alpha> \\<open>op_smc \\<BB>\\<close> \\<CC> \\<GG>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> :\n    op_smc\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n       \\<FF>)\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "interpret R: is_semifunctor \\<alpha> \\<open>op_smc \\<AA>\\<close> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    op_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n       \\<FF>)\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n       \\<FF>)\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "by \n      (\n        rule dghm_cn_comp_ObjMap_vrange\n          [\n            OF \n              L.smcf_is_dghm[unfolded slicing_commute[symmetric]] \n              R.smcf_is_dghm[unfolded slicing_commute[symmetric]],\n            unfolded slicing_commute slicing_simps\n          ]\n      )"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ>\n   ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n     \\<FF>)\\<lparr>ObjMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smcf_cn_comp_ObjMap_app[smc_cn_cs_simps]:\n  assumes \"\\<GG> : \\<BB> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"a \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>\"\n  shows \"(\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> = \\<GG>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n     \\<FF>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n    \\<GG>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n     \\<FF>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n    \\<GG>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>\\<rparr>", "interpret L: is_semifunctor \\<alpha> \\<open>op_smc \\<BB>\\<close> \\<CC> \\<GG>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> :\n    op_smc\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n     \\<FF>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n    \\<GG>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>\\<rparr>", "interpret R: is_semifunctor \\<alpha> \\<open>op_smc \\<AA>\\<close> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    op_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n     \\<FF>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n    \\<GG>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>\\<rparr>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n     \\<FF>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n    \\<GG>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>\\<rparr>", "by \n      (\n        rule dghm_cn_comp_ObjMap_app\n          [\n            OF \n              L.smcf_is_dghm[unfolded slicing_commute[symmetric]] \n              R.smcf_is_dghm[unfolded slicing_commute[symmetric]],\n            unfolded slicing_commute slicing_simps, \n            OF assms(3)\n          ]\n      )"], ["proof (state)\nthis:\n  (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n   \\<FF>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n  \\<GG>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Arrow map: two contravariant semifunctors\\<close>"], ["", "lemma smcf_cn_comp_ArrMap_vsv[smc_cn_cs_intros]: \n  assumes \"\\<GG> : \\<BB> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"vsv ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ArrMap\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n          \\<FF>)\\<lparr>ArrMap\\<rparr>)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. vsv ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n          \\<FF>)\\<lparr>ArrMap\\<rparr>)", "interpret L: is_semifunctor \\<alpha> \\<open>op_smc \\<BB>\\<close> \\<CC> \\<GG>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> :\n    op_smc\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. vsv ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n          \\<FF>)\\<lparr>ArrMap\\<rparr>)", "interpret R: is_semifunctor \\<alpha> \\<open>op_smc \\<AA>\\<close> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    op_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. vsv ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n          \\<FF>)\\<lparr>ArrMap\\<rparr>)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n          \\<FF>)\\<lparr>ArrMap\\<rparr>)", "by \n      (\n        rule dghm_cn_cov_comp_ArrMap_vsv\n          [\n            OF \n              L.smcf_is_dghm[unfolded slicing_commute[symmetric]] \n              R.smcf_is_dghm[unfolded slicing_commute[symmetric]],\n            unfolded slicing_commute slicing_simps\n          ]\n      )"], ["proof (state)\nthis:\n  vsv ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n        \\<FF>)\\<lparr>ArrMap\\<rparr>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smcf_cn_comp_ArrMap_vdomain[smc_cn_cs_simps]:\n  assumes \"\\<GG> : \\<BB> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<D>\\<^sub>\\<circ> ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ArrMap\\<rparr>) = \\<AA>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n       \\<FF>)\\<lparr>ArrMap\\<rparr>) =\n    \\<AA>\\<lparr>Arr\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n       \\<FF>)\\<lparr>ArrMap\\<rparr>) =\n    \\<AA>\\<lparr>Arr\\<rparr>", "interpret L: is_semifunctor \\<alpha> \\<open>op_smc \\<BB>\\<close> \\<CC> \\<GG>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> :\n    op_smc\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n       \\<FF>)\\<lparr>ArrMap\\<rparr>) =\n    \\<AA>\\<lparr>Arr\\<rparr>", "interpret R: is_semifunctor \\<alpha> \\<open>op_smc \\<AA>\\<close> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    op_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n       \\<FF>)\\<lparr>ArrMap\\<rparr>) =\n    \\<AA>\\<lparr>Arr\\<rparr>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n       \\<FF>)\\<lparr>ArrMap\\<rparr>) =\n    \\<AA>\\<lparr>Arr\\<rparr>", "by \n      (\n        rule dghm_cn_comp_ArrMap_vdomain\n          [\n            OF \n              L.smcf_is_dghm[unfolded slicing_commute[symmetric]] \n              R.smcf_is_dghm[unfolded slicing_commute[symmetric]],\n            unfolded slicing_commute slicing_simps\n          ]\n      )"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n     \\<FF>)\\<lparr>ArrMap\\<rparr>) =\n  \\<AA>\\<lparr>Arr\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smcf_cn_comp_ArrMap_vrange:\n  assumes \"\\<GG> : \\<BB> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<R>\\<^sub>\\<circ> ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ArrMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n       \\<FF>)\\<lparr>ArrMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n       \\<FF>)\\<lparr>ArrMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "interpret L: is_semifunctor \\<alpha> \\<open>op_smc \\<BB>\\<close> \\<CC> \\<GG>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> :\n    op_smc\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n       \\<FF>)\\<lparr>ArrMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "interpret R: is_semifunctor \\<alpha> \\<open>op_smc \\<AA>\\<close> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    op_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n       \\<FF>)\\<lparr>ArrMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n       \\<FF>)\\<lparr>ArrMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "by \n      (\n        rule dghm_cn_comp_ArrMap_vrange\n          [\n            OF \n              L.smcf_is_dghm[unfolded slicing_commute[symmetric]] \n              R.smcf_is_dghm[unfolded slicing_commute[symmetric]],\n            unfolded slicing_commute slicing_simps\n          ]\n      )"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ>\n   ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n     \\<FF>)\\<lparr>ArrMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smcf_cn_comp_ArrMap_app[smc_cn_cs_simps]:\n  assumes \"\\<GG> : \\<BB> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"a \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Arr\\<rparr>\"\n  shows \"(\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> = \\<GG>\\<lparr>ArrMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n     \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> =\n    \\<GG>\\<lparr>ArrMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n     \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> =\n    \\<GG>\\<lparr>ArrMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>\\<rparr>", "interpret L: is_semifunctor \\<alpha> \\<open>op_smc \\<BB>\\<close> \\<CC> \\<GG>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> :\n    op_smc\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n     \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> =\n    \\<GG>\\<lparr>ArrMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>\\<rparr>", "interpret R: is_semifunctor \\<alpha> \\<open>op_smc \\<AA>\\<close> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    op_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n     \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> =\n    \\<GG>\\<lparr>ArrMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>\\<rparr>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n     \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> =\n    \\<GG>\\<lparr>ArrMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>\\<rparr>", "by \n      (\n        rule dghm_cn_comp_ArrMap_app\n          [\n            OF \n              L.smcf_is_dghm[unfolded slicing_commute[symmetric]] \n              R.smcf_is_dghm[unfolded slicing_commute[symmetric]],\n            unfolded slicing_commute slicing_simps,\n            OF assms(3)\n          ]\n      )"], ["proof (state)\nthis:\n  (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n   \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> =\n  \\<GG>\\<lparr>ArrMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Object map: contravariant and covariant semifunctors\\<close>"], ["", "lemma smcf_cn_cov_comp_ObjMap_vsv[smc_cn_cs_intros]: \n  assumes \"\\<GG> : \\<BB> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"vsv ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ObjMap\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n          \\<FF>)\\<lparr>ObjMap\\<rparr>)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. vsv ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n          \\<FF>)\\<lparr>ObjMap\\<rparr>)", "interpret L: is_semifunctor \\<alpha> \\<open>op_smc \\<BB>\\<close> \\<CC> \\<GG>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> :\n    op_smc\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. vsv ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n          \\<FF>)\\<lparr>ObjMap\\<rparr>)", "interpret R: is_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. vsv ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n          \\<FF>)\\<lparr>ObjMap\\<rparr>)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n          \\<FF>)\\<lparr>ObjMap\\<rparr>)", "by \n      (\n        rule dghm_cn_cov_comp_ObjMap_vsv\n          [\n            OF \n              L.smcf_is_dghm[unfolded slicing_commute[symmetric]]\n              R.smcf_is_dghm[unfolded slicing_commute[symmetric]],\n            unfolded slicing_commute slicing_simps\n          ]\n      )"], ["proof (state)\nthis:\n  vsv ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n        \\<FF>)\\<lparr>ObjMap\\<rparr>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smcf_cn_cov_comp_ObjMap_vdomain[smc_cn_cs_simps]:\n  assumes \"\\<GG> : \\<BB> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<D>\\<^sub>\\<circ> ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ObjMap\\<rparr>) = \\<AA>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n       \\<FF>)\\<lparr>ObjMap\\<rparr>) =\n    \\<AA>\\<lparr>Obj\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n       \\<FF>)\\<lparr>ObjMap\\<rparr>) =\n    \\<AA>\\<lparr>Obj\\<rparr>", "interpret L: is_semifunctor \\<alpha> \\<open>op_smc \\<BB>\\<close> \\<CC> \\<GG>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> :\n    op_smc\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n       \\<FF>)\\<lparr>ObjMap\\<rparr>) =\n    \\<AA>\\<lparr>Obj\\<rparr>", "interpret R: is_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n       \\<FF>)\\<lparr>ObjMap\\<rparr>) =\n    \\<AA>\\<lparr>Obj\\<rparr>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n       \\<FF>)\\<lparr>ObjMap\\<rparr>) =\n    \\<AA>\\<lparr>Obj\\<rparr>", "by \n      (\n        rule dghm_cn_cov_comp_ObjMap_vdomain\n          [\n            OF \n              L.smcf_is_dghm[unfolded slicing_commute[symmetric]] \n              R.smcf_is_dghm,\n            unfolded slicing_commute slicing_simps\n          ]\n      )"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n     \\<FF>)\\<lparr>ObjMap\\<rparr>) =\n  \\<AA>\\<lparr>Obj\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smcf_cn_cov_comp_ObjMap_vrange:\n  assumes \"\\<GG> : \\<BB> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<R>\\<^sub>\\<circ> ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ObjMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n       \\<FF>)\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n       \\<FF>)\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "interpret L: is_semifunctor \\<alpha> \\<open>op_smc \\<BB>\\<close> \\<CC> \\<GG>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> :\n    op_smc\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n       \\<FF>)\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "interpret R: is_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n       \\<FF>)\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n       \\<FF>)\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "by \n      (\n        rule dghm_cn_cov_comp_ObjMap_vrange\n          [\n            OF \n              L.smcf_is_dghm[unfolded slicing_commute[symmetric]] \n              R.smcf_is_dghm,\n            unfolded slicing_commute slicing_simps\n          ]\n      )"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ>\n   ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n     \\<FF>)\\<lparr>ObjMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smcf_cn_cov_comp_ObjMap_app[smc_cn_cs_simps]:\n    assumes \"\\<GG> : \\<BB> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"a \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>\"\n  shows \"(\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> = \\<GG>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n     \\<FF>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n    \\<GG>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n     \\<FF>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n    \\<GG>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>\\<rparr>", "interpret L: is_semifunctor \\<alpha> \\<open>op_smc \\<BB>\\<close> \\<CC> \\<GG>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> :\n    op_smc\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n     \\<FF>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n    \\<GG>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>\\<rparr>", "interpret R: is_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n     \\<FF>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n    \\<GG>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>\\<rparr>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n     \\<FF>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n    \\<GG>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>\\<rparr>", "by \n      (\n        rule dghm_cn_cov_comp_ObjMap_app\n          [\n            OF \n              L.smcf_is_dghm[unfolded slicing_commute[symmetric]] \n              R.smcf_is_dghm,\n            unfolded slicing_commute slicing_simps,\n            OF assms(3)\n          ]\n      )"], ["proof (state)\nthis:\n  (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n   \\<FF>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n  \\<GG>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Arrow map: contravariant and covariant semifunctors\\<close>"], ["", "lemma smcf_cn_cov_comp_ArrMap_vsv[smc_cn_cs_intros]: \n  assumes \"\\<GG> : \\<BB> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"vsv ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ArrMap\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n          \\<FF>)\\<lparr>ArrMap\\<rparr>)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. vsv ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n          \\<FF>)\\<lparr>ArrMap\\<rparr>)", "interpret L: is_semifunctor \\<alpha> \\<open>op_smc \\<BB>\\<close> \\<CC> \\<GG>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> :\n    op_smc\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. vsv ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n          \\<FF>)\\<lparr>ArrMap\\<rparr>)", "interpret R: is_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. vsv ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n          \\<FF>)\\<lparr>ArrMap\\<rparr>)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n          \\<FF>)\\<lparr>ArrMap\\<rparr>)", "by \n      (\n        rule dghm_cn_cov_comp_ArrMap_vsv\n          [\n            OF \n              L.smcf_is_dghm[unfolded slicing_commute[symmetric]]\n              R.smcf_is_dghm[unfolded slicing_commute[symmetric]],\n            unfolded slicing_commute slicing_simps\n          ]\n      )"], ["proof (state)\nthis:\n  vsv ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n        \\<FF>)\\<lparr>ArrMap\\<rparr>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smcf_cn_cov_comp_ArrMap_vdomain[smc_cn_cs_simps]:\n  assumes \"\\<GG> : \\<BB> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<D>\\<^sub>\\<circ> ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ArrMap\\<rparr>) = \\<AA>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n       \\<FF>)\\<lparr>ArrMap\\<rparr>) =\n    \\<AA>\\<lparr>Arr\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n       \\<FF>)\\<lparr>ArrMap\\<rparr>) =\n    \\<AA>\\<lparr>Arr\\<rparr>", "interpret L: is_semifunctor \\<alpha> \\<open>op_smc \\<BB>\\<close> \\<CC> \\<GG>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> :\n    op_smc\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n       \\<FF>)\\<lparr>ArrMap\\<rparr>) =\n    \\<AA>\\<lparr>Arr\\<rparr>", "interpret R: is_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n       \\<FF>)\\<lparr>ArrMap\\<rparr>) =\n    \\<AA>\\<lparr>Arr\\<rparr>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n       \\<FF>)\\<lparr>ArrMap\\<rparr>) =\n    \\<AA>\\<lparr>Arr\\<rparr>", "by \n      (\n        rule dghm_cn_cov_comp_ArrMap_vdomain\n          [\n            OF \n              L.smcf_is_dghm[unfolded slicing_commute[symmetric]] \n              R.smcf_is_dghm,\n            unfolded slicing_commute slicing_simps\n          ]\n      )"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n     \\<FF>)\\<lparr>ArrMap\\<rparr>) =\n  \\<AA>\\<lparr>Arr\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smcf_cn_cov_comp_ArrMap_vrange:\n  assumes \"\\<GG> : \\<BB> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<R>\\<^sub>\\<circ> ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ArrMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n       \\<FF>)\\<lparr>ArrMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n       \\<FF>)\\<lparr>ArrMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "interpret L: is_semifunctor \\<alpha> \\<open>op_smc \\<BB>\\<close> \\<CC> \\<GG>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> :\n    op_smc\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n       \\<FF>)\\<lparr>ArrMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "interpret R: is_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n       \\<FF>)\\<lparr>ArrMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n       \\<FF>)\\<lparr>ArrMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "by \n      (\n        rule dghm_cn_cov_comp_ArrMap_vrange\n          [\n            OF \n              L.smcf_is_dghm[unfolded slicing_commute[symmetric]] \n              R.smcf_is_dghm,\n            unfolded slicing_commute slicing_simps\n          ]\n      )"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ>\n   ((\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n     \\<FF>)\\<lparr>ArrMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smcf_cn_cov_comp_ArrMap_app[smc_cn_cs_simps]:\n  assumes \"\\<GG> : \\<BB> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"f \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Arr\\<rparr>\"\n  shows \"(\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = \\<GG>\\<lparr>ArrMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n     \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<GG>\\<lparr>ArrMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n     \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<GG>\\<lparr>ArrMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\\<rparr>", "interpret L: is_semifunctor \\<alpha> \\<open>op_smc \\<BB>\\<close> \\<CC> \\<GG>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> :\n    op_smc\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n     \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<GG>\\<lparr>ArrMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\\<rparr>", "interpret R: is_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n     \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<GG>\\<lparr>ArrMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\\<rparr>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n     \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<GG>\\<lparr>ArrMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\\<rparr>", "by \n      (\n        rule dghm_cn_cov_comp_ArrMap_app\n          [\n            OF \n              L.smcf_is_dghm[unfolded slicing_commute[symmetric]] \n              R.smcf_is_dghm,\n            unfolded slicing_commute slicing_simps,\n            OF assms(3)\n          ]\n      )"], ["proof (state)\nthis:\n  (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n   \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n  \\<GG>\\<lparr>ArrMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Opposite of the contravariant composition of semifunctors\\<close>"], ["", "lemma op_smcf_smcf_cn_comp[smc_op_simps]: \n  \"op_smcf (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>) = op_smcf \\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> op_smcf \\<FF>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_smcf (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>) =\n    op_smcf \\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> op_smcf \\<FF>", "unfolding op_smcf_def smcf_cn_comp_def dghm_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. [[\\<GG>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>\\<circ>\n      \\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<GG>\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<circ>\\<^sub>\\<circ>\n      \\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      op_smc (\\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n      \\<GG>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     [\\<GG>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>\\<circ>\n      \\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<GG>\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<circ>\\<^sub>\\<circ>\n      \\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      op_smc (\\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n      \\<GG>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     op_smc\n      ([\\<GG>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>\\<circ>\n        \\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n        \\<GG>\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<circ>\\<^sub>\\<circ>\n        \\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n        op_smc (\\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n        \\<GG>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n     op_smc\n      ([\\<GG>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>\\<circ>\n        \\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n        \\<GG>\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<circ>\\<^sub>\\<circ>\n        \\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n        op_smc (\\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n        \\<GG>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ> =\n    [[\\<GG>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<GG>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      op_smc (\\<GG>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n      op_smc\n       (\\<GG>\\<lparr>3\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>\\<circ>\n     [\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      op_smc (\\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n      op_smc\n       (\\<FF>\\<lparr>3\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     [\\<GG>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<GG>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      op_smc (\\<GG>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n      op_smc\n       (\\<GG>\\<lparr>3\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<circ>\\<^sub>\\<circ>\n     [\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      op_smc (\\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n      op_smc\n       (\\<FF>\\<lparr>3\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     op_smc\n      ([\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n        \\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n        op_smc (\\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n        op_smc\n         (\\<FF>\\<lparr>3\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n     [\\<GG>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<GG>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      op_smc (\\<GG>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n      op_smc\n       (\\<GG>\\<lparr>3\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>", "by (auto simp: nat_omega_simps)"], ["", "subsubsection\\<open>Further properties\\<close>"], ["", "lemma smcf_cn_comp_is_semifunctor[smc_cn_cs_intros]:\n  \\<comment>\\<open>See section 1.2 in \\cite{bodo_categories_1970}.\\<close>\n  assumes \"semicategory \\<alpha> \\<AA>\" and \"\\<GG> : \\<BB> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "interpret L: is_semifunctor \\<alpha> \\<open>op_smc \\<BB>\\<close> \\<CC> \\<GG> \n    rewrites \"f : b \\<mapsto>\\<^bsub>op_smc \\<CC>'\\<^esub> a = f : a \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> b\" for \\<CC>' f b a"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> :\n    op_smc\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC> &&&\n    f : b \\<mapsto>\\<^bsub>op_smc \\<CC>'\\<^esub> a =\n    f : a \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> b", "by (rule assms(2)) (simp_all add: smc_op_simps)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "interpret R: is_semifunctor \\<alpha> \\<open>op_smc \\<AA>\\<close> \\<BB> \\<FF> \n    rewrites \"f : b \\<mapsto>\\<^bsub>op_smc \\<CC>'\\<^esub> a = f : a \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> b\" for \\<CC>' f b a"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    op_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> &&&\n    f : b \\<mapsto>\\<^bsub>op_smc \\<CC>'\\<^esub> a =\n    f : a \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> b", "by (rule assms(3)) (simp_all add: smc_op_simps)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "interpret \\<AA>: semicategory \\<alpha> \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<AA>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "proof(rule is_semifunctorI, unfold smcf_cn_comp_components(3,4) smc_op_simps)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\n 3. semicategory \\<alpha> \\<AA>\n 4. semicategory \\<alpha> \\<CC>\n 5. vcard (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>) =\n    4\\<^sub>\\<nat>\n 6. smcf_dghm (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>) :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 \\<CC>\n 7. op_smc (\\<FF>\\<lparr>HomDom\\<rparr>) = \\<AA>\n 8. \\<GG>\\<lparr>HomCod\\<rparr> = \\<CC>\n 9. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n                        f\\<rparr> =\n                         (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "from assms"], ["proof (chain)\npicking this:\n  semicategory \\<alpha> \\<AA>\n  \\<GG> :\n  op_smc\n   \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<FF> :\n  op_smc\n   \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "show \"smcf_dghm (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>) : smc_dg \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg \\<CC>\""], ["proof (prove)\nusing this:\n  semicategory \\<alpha> \\<AA>\n  \\<GG> :\n  op_smc\n   \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<FF> :\n  op_smc\n   \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. smcf_dghm (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>) :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 \\<CC>", "by \n        (\n          cs_concl \n            cs_simp: slicing_commute[symmetric] \n            cs_intro: dg_cn_cs_intros slicing_intros\n        )"], ["proof (state)\nthis:\n  smcf_dghm (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>) :\n  smc_dg\n   \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                               \\<CC>\n\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\n 3. semicategory \\<alpha> \\<AA>\n 4. semicategory \\<alpha> \\<CC>\n 5. vcard (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>) =\n    4\\<^sub>\\<nat>\n 6. op_smc (\\<FF>\\<lparr>HomDom\\<rparr>) = \\<AA>\n 7. \\<GG>\\<lparr>HomCod\\<rparr> = \\<CC>\n 8. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n                        f\\<rparr> =\n                         (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "fix g b c f a"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\n 3. semicategory \\<alpha> \\<AA>\n 4. semicategory \\<alpha> \\<CC>\n 5. vcard (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>) =\n    4\\<^sub>\\<nat>\n 6. op_smc (\\<FF>\\<lparr>HomDom\\<rparr>) = \\<AA>\n 7. \\<GG>\\<lparr>HomCod\\<rparr> = \\<CC>\n 8. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n                        f\\<rparr> =\n                         (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "assume \"g : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> c\" \"f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\""], ["proof (state)\nthis:\n  g : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\n\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\n 3. semicategory \\<alpha> \\<AA>\n 4. semicategory \\<alpha> \\<CC>\n 5. vcard (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>) =\n    4\\<^sub>\\<nat>\n 6. op_smc (\\<FF>\\<lparr>HomDom\\<rparr>) = \\<AA>\n 7. \\<GG>\\<lparr>HomCod\\<rparr> = \\<CC>\n 8. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n                        f\\<rparr> =\n                         (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "with assms"], ["proof (chain)\npicking this:\n  semicategory \\<alpha> \\<AA>\n  \\<GG> :\n  op_smc\n   \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<FF> :\n  op_smc\n   \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  g : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b", "show \"(\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f\\<rparr> = \n      (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\""], ["proof (prove)\nusing this:\n  semicategory \\<alpha> \\<AA>\n  \\<GG> :\n  op_smc\n   \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<FF> :\n  op_smc\n   \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  g : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\n\ngoal (1 subgoal):\n 1. (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n     \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n   f\\<rparr> =\n    (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n     \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n     \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "by \n        (\n          cs_concl \n            cs_simp: smc_cs_simps smc_cn_cs_simps smc_op_simps \n            cs_intro: smc_cs_intros\n        )"], ["proof (state)\nthis:\n  (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n   \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n f\\<rparr> =\n  (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n   \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n   \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\n\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\n 3. semicategory \\<alpha> \\<AA>\n 4. semicategory \\<alpha> \\<CC>\n 5. vcard (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>) =\n    4\\<^sub>\\<nat>\n 6. op_smc (\\<FF>\\<lparr>HomDom\\<rparr>) = \\<AA>\n 7. \\<GG>\\<lparr>HomCod\\<rparr> = \\<CC>", "qed \n    (\n      auto simp: \n        smcf_cn_comp_def \n        nat_omega_simps \n        smc_cs_simps\n        smc_op_simps \n        smc_cs_intros\n    )"], ["proof (state)\nthis:\n  \\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smcf_cn_cov_comp_is_semifunctor[smc_cs_intros]:\n  \\<comment>\\<open>See section 1.2 in \\cite{bodo_categories_1970}.\\<close>\n  assumes \"\\<GG> : \\<BB> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF> : \\<AA> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF> :\n    op_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF> :\n    op_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "interpret L: is_semifunctor \\<alpha> \\<open>op_smc \\<BB>\\<close> \\<CC> \\<GG> \n    rewrites \"f : b \\<mapsto>\\<^bsub>op_smc \\<CC>'\\<^esub> a = f : a \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> b\" for \\<CC>' f b a"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> :\n    op_smc\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC> &&&\n    f : b \\<mapsto>\\<^bsub>op_smc \\<CC>'\\<^esub> a =\n    f : a \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> b", "by (rule assms(1)) (simp_all add: smc_op_simps)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF> :\n    op_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "interpret R: is_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF> :\n    op_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF> :\n    op_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "proof(rule is_semifunctorI, unfold smcf_cn_comp_components(3,4) smc_op_simps)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\n 3. semicategory \\<alpha> (op_smc \\<AA>)\n 4. semicategory \\<alpha> \\<CC>\n 5. vcard (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>) =\n    4\\<^sub>\\<nat>\n 6. smcf_dghm (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>) :\n    smc_dg\n     (op_smc\n       \\<AA>) \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                    \\<CC>\n 7. op_smc (\\<FF>\\<lparr>HomDom\\<rparr>) = op_smc \\<AA>\n 8. \\<GG>\\<lparr>HomCod\\<rparr> = \\<CC>\n 9. \\<And>b c g a f.\n       \\<lbrakk>g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b;\n        f : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> a\\<rbrakk>\n       \\<Longrightarrow> (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n                        g\\<rparr> =\n                         (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "from assms"], ["proof (chain)\npicking this:\n  \\<GG> :\n  op_smc\n   \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "show \n      \"smcf_dghm (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>) : smc_dg (op_smc \\<AA>) \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg \\<CC>\""], ["proof (prove)\nusing this:\n  \\<GG> :\n  op_smc\n   \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. smcf_dghm (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>) :\n    smc_dg\n     (op_smc\n       \\<AA>) \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                    \\<CC>", "by \n        (\n          cs_concl \n            cs_simp: slicing_commute[symmetric]\n            cs_intro: dg_cn_cs_intros slicing_intros\n        )"], ["proof (state)\nthis:\n  smcf_dghm (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>) :\n  smc_dg\n   (op_smc\n     \\<AA>) \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                  \\<CC>\n\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\n 3. semicategory \\<alpha> (op_smc \\<AA>)\n 4. semicategory \\<alpha> \\<CC>\n 5. vcard (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>) =\n    4\\<^sub>\\<nat>\n 6. op_smc (\\<FF>\\<lparr>HomDom\\<rparr>) = op_smc \\<AA>\n 7. \\<GG>\\<lparr>HomCod\\<rparr> = \\<CC>\n 8. \\<And>b c g a f.\n       \\<lbrakk>g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b;\n        f : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> a\\<rbrakk>\n       \\<Longrightarrow> (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n                        g\\<rparr> =\n                         (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "show \"vfsequence (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)", "unfolding smcf_cn_comp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence\n     [\\<GG>\\<lparr>ObjMap\\<rparr> \\<circ>\\<^sub>\\<circ>\n      \\<FF>\\<lparr>ObjMap\\<rparr>,\n      \\<GG>\\<lparr>ArrMap\\<rparr> \\<circ>\\<^sub>\\<circ>\n      \\<FF>\\<lparr>ArrMap\\<rparr>,\n      op_smc (\\<FF>\\<lparr>HomDom\\<rparr>),\n      \\<GG>\\<lparr>HomCod\\<rparr>]\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  vfsequence (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\n\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> (op_smc \\<AA>)\n 3. semicategory \\<alpha> \\<CC>\n 4. vcard (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>) =\n    4\\<^sub>\\<nat>\n 5. op_smc (\\<FF>\\<lparr>HomDom\\<rparr>) = op_smc \\<AA>\n 6. \\<GG>\\<lparr>HomCod\\<rparr> = \\<CC>\n 7. \\<And>b c g a f.\n       \\<lbrakk>g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b;\n        f : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> a\\<rbrakk>\n       \\<Longrightarrow> (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n                        g\\<rparr> =\n                         (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "show \"vcard (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>) = 4\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>) =\n    4\\<^sub>\\<nat>", "unfolding smcf_cn_comp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard\n     [\\<GG>\\<lparr>ObjMap\\<rparr> \\<circ>\\<^sub>\\<circ>\n      \\<FF>\\<lparr>ObjMap\\<rparr>,\n      \\<GG>\\<lparr>ArrMap\\<rparr> \\<circ>\\<^sub>\\<circ>\n      \\<FF>\\<lparr>ArrMap\\<rparr>,\n      op_smc (\\<FF>\\<lparr>HomDom\\<rparr>),\n      \\<GG>\\<lparr>HomCod\\<rparr>]\\<^sub>\\<circ> =\n    4\\<^sub>\\<nat>", "by (auto simp: nat_omega_simps)"], ["proof (state)\nthis:\n  vcard (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>) =\n  4\\<^sub>\\<nat>\n\ngoal (6 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> (op_smc \\<AA>)\n 3. semicategory \\<alpha> \\<CC>\n 4. op_smc (\\<FF>\\<lparr>HomDom\\<rparr>) = op_smc \\<AA>\n 5. \\<GG>\\<lparr>HomCod\\<rparr> = \\<CC>\n 6. \\<And>b c g a f.\n       \\<lbrakk>g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b;\n        f : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> a\\<rbrakk>\n       \\<Longrightarrow> (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n                        g\\<rparr> =\n                         (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "show \"op_smc (\\<FF>\\<lparr>HomDom\\<rparr>) = op_smc \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_smc (\\<FF>\\<lparr>HomDom\\<rparr>) = op_smc \\<AA>", "by (simp add: smc_cs_simps)"], ["proof (state)\nthis:\n  op_smc (\\<FF>\\<lparr>HomDom\\<rparr>) = op_smc \\<AA>\n\ngoal (5 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> (op_smc \\<AA>)\n 3. semicategory \\<alpha> \\<CC>\n 4. \\<GG>\\<lparr>HomCod\\<rparr> = \\<CC>\n 5. \\<And>b c g a f.\n       \\<lbrakk>g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b;\n        f : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> a\\<rbrakk>\n       \\<Longrightarrow> (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n                        g\\<rparr> =\n                         (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "show \"\\<GG>\\<lparr>HomCod\\<rparr> = \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG>\\<lparr>HomCod\\<rparr> = \\<CC>", "by (simp add: smc_cs_simps)"], ["proof (state)\nthis:\n  \\<GG>\\<lparr>HomCod\\<rparr> = \\<CC>\n\ngoal (4 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> (op_smc \\<AA>)\n 3. semicategory \\<alpha> \\<CC>\n 4. \\<And>b c g a f.\n       \\<lbrakk>g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b;\n        f : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> a\\<rbrakk>\n       \\<Longrightarrow> (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n                        g\\<rparr> =\n                         (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "fix g b c f a"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> (op_smc \\<AA>)\n 3. semicategory \\<alpha> \\<CC>\n 4. \\<And>b c g a f.\n       \\<lbrakk>g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b;\n        f : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> a\\<rbrakk>\n       \\<Longrightarrow> (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n                        g\\<rparr> =\n                         (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "assume \"g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\" \"f : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> a\""], ["proof (state)\nthis:\n  g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> a\n\ngoal (4 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> (op_smc \\<AA>)\n 3. semicategory \\<alpha> \\<CC>\n 4. \\<And>b c g a f.\n       \\<lbrakk>g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b;\n        f : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> a\\<rbrakk>\n       \\<Longrightarrow> (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n                        g\\<rparr> =\n                         (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n                          \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "with assms"], ["proof (chain)\npicking this:\n  \\<GG> :\n  op_smc\n   \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> a", "show \n      \"(\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> g\\<rparr> = \n        (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<GG> :\n  op_smc\n   \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> a\n\ngoal (1 subgoal):\n 1. (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n     \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n   g\\<rparr> =\n    (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n     \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n     \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "by \n        (\n          cs_concl \n            cs_simp: smc_cs_simps smc_cn_cs_simps smc_op_simps \n            cs_intro: smc_cs_intros\n        )"], ["proof (state)\nthis:\n  (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n   \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n g\\<rparr> =\n  (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n   \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  (\\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n   \\<FF>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\n\ngoal (3 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> (op_smc \\<AA>)\n 3. semicategory \\<alpha> \\<CC>", "qed (auto intro: smc_cs_intros smc_op_intros)"], ["proof (state)\nthis:\n  \\<GG> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ> \\<FF> :\n  op_smc\n   \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smcf_cov_cn_comp_is_semifunctor[smc_cn_cs_intros]:\n  \\<comment>\\<open>See section 1.2 in \\cite{bodo_categories_1970}.\\<close>\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF> : \\<AA> \\<^sub>S\\<^sub>M\\<^sub>C\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    op_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "using assms"], ["proof (prove)\nusing this:\n  \\<GG> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<FF> :\n  op_smc\n   \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    op_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule smcf_comp_is_semifunctor)"], ["", "subsection\\<open>Identity semifunctor\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "text\\<open>See Chapter I-3 in \\cite{mac_lane_categories_2010}.\\<close>"], ["", "abbreviation (input) smcf_id :: \"V \\<Rightarrow> V\" where \"smcf_id \\<equiv> dghm_id\""], ["", "text\\<open>Slicing.\\<close>"], ["", "lemma smcf_dghm_smcf_id[slicing_commute]: \n  \"dghm_id (smc_dg \\<CC>) = smcf_dghm (smcf_id \\<CC>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_id (smc_dg \\<CC>) = smcf_dghm (dghm_id \\<CC>)", "unfolding dghm_id_def smc_dg_def smcf_dghm_def dghm_field_simps dg_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. [vid_on\n      ([\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n        \\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n        \\<CC>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n        \\<CC>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n     vid_on\n      ([\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n        \\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n        \\<CC>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n        \\<CC>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>),\n     [\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>,\n     [\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>]\\<^sub>\\<circ> =\n    [[vid_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n      vid_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<CC>,\n      \\<CC>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     [vid_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n      vid_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<CC>,\n      \\<CC>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     [[vid_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n       vid_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<CC>,\n       \\<CC>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      [vid_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n       vid_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<CC>,\n       \\<CC>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      [vid_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n       vid_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<CC>,\n       \\<CC>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      [vid_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n       vid_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<CC>,\n       \\<CC>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>,\n     [[vid_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n       vid_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<CC>,\n       \\<CC>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      [vid_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n       vid_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<CC>,\n       \\<CC>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      [vid_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n       vid_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<CC>,\n       \\<CC>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      [vid_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n       vid_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<CC>,\n       \\<CC>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>]\\<^sub>\\<circ>", "by (simp add: nat_omega_simps)"], ["", "context semicategory\nbegin"], ["", "interpretation dg: digraph \\<alpha> \\<open>smc_dg \\<CC>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. digraph \\<alpha> (smc_dg \\<CC>)", "by (rule smc_digraph)"], ["", "lemmas_with [unfolded slicing_simps]:\n  smc_dghm_id_is_dghm = dg.dg_dghm_id_is_dghm"], ["", "end"], ["", "subsubsection\\<open>Object map\\<close>"], ["", "lemmas [smc_cs_simps] = dghm_id_ObjMap_app"], ["", "subsubsection\\<open>Arrow map\\<close>"], ["", "lemmas [smc_cs_simps] = dghm_id_ArrMap_app"], ["", "subsubsection\\<open>Opposite identity semifunctor\\<close>"], ["", "lemma op_smcf_smcf_id[smc_op_simps]: \"op_smcf (smcf_id \\<CC>) = smcf_id (op_smc \\<CC>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_smcf (dghm_id \\<CC>) = dghm_id (op_smc \\<CC>)", "unfolding dghm_id_def op_smc_def op_smcf_def dghm_field_simps dg_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. [[vid_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n      vid_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<CC>,\n      \\<CC>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     [vid_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n      vid_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<CC>,\n      \\<CC>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     [[vid_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n       vid_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<CC>,\n       \\<CC>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      [vid_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n       vid_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<CC>,\n       \\<CC>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      [vid_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n       vid_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<CC>,\n       \\<CC>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>3\\<^sub>\\<nat>\\<rparr>,\n      [vid_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n       vid_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<CC>,\n       \\<CC>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      fflip\n       ([vid_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n         vid_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<CC>,\n         \\<CC>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>4\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>,\n     [[vid_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n       vid_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<CC>,\n       \\<CC>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      [vid_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n       vid_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<CC>,\n       \\<CC>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      [vid_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n       vid_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<CC>,\n       \\<CC>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>3\\<^sub>\\<nat>\\<rparr>,\n      [vid_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n       vid_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<CC>,\n       \\<CC>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      fflip\n       ([vid_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n         vid_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<CC>,\n         \\<CC>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>4\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>]\\<^sub>\\<circ> =\n    [vid_on\n      ([\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n        \\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n        \\<CC>\\<lparr>3\\<^sub>\\<nat>\\<rparr>,\n        \\<CC>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n        fflip\n         (\\<CC>\\<lparr>4\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n     vid_on\n      ([\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n        \\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n        \\<CC>\\<lparr>3\\<^sub>\\<nat>\\<rparr>,\n        \\<CC>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n        fflip\n         (\\<CC>\\<lparr>4\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>),\n     [\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>3\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      fflip (\\<CC>\\<lparr>4\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>,\n     [\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>3\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      fflip\n       (\\<CC>\\<lparr>4\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>]\\<^sub>\\<circ>", "by (auto simp: nat_omega_simps)"], ["", "subsubsection\\<open>An identity semifunctor is a semifunctor\\<close>"], ["", "lemma (in semicategory) smc_smcf_id_is_semifunctor: \"smcf_id \\<CC> : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_id \\<CC> :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "proof(rule is_semifunctorI, unfold dghm_id_components)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (dghm_id \\<CC>)\n 3. semicategory \\<alpha> \\<CC>\n 4. semicategory \\<alpha> \\<CC>\n 5. vcard (dghm_id \\<CC>) = 4\\<^sub>\\<nat>\n 6. smcf_dghm (dghm_id \\<CC>) :\n    smc_dg\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 \\<CC>\n 7. \\<CC> = \\<CC>\n 8. \\<CC> = \\<CC>\n 9. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> vid_on\n                          (\\<CC>\\<lparr>Arr\\<rparr>)\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                      f\\<rparr> =\n                         vid_on\n                          (\\<CC>\\<lparr>Arr\\<rparr>)\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         vid_on (\\<CC>\\<lparr>Arr\\<rparr>)\\<lparr>f\\<rparr>", "from smc_dghm_id_is_dghm"], ["proof (chain)\npicking this:\n  dghm_id (smc_dg \\<CC>) :\n  smc_dg\n   \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                               \\<CC>", "show \n    \"smcf_dghm (smcf_id \\<CC>) : smc_dg \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg \\<CC>\""], ["proof (prove)\nusing this:\n  dghm_id (smc_dg \\<CC>) :\n  smc_dg\n   \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                               \\<CC>\n\ngoal (1 subgoal):\n 1. smcf_dghm (dghm_id \\<CC>) :\n    smc_dg\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 \\<CC>", "by (auto simp: slicing_simps slicing_commute)"], ["proof (state)\nthis:\n  smcf_dghm (dghm_id \\<CC>) :\n  smc_dg\n   \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                               \\<CC>\n\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (dghm_id \\<CC>)\n 3. semicategory \\<alpha> \\<CC>\n 4. semicategory \\<alpha> \\<CC>\n 5. vcard (dghm_id \\<CC>) = 4\\<^sub>\\<nat>\n 6. \\<CC> = \\<CC>\n 7. \\<CC> = \\<CC>\n 8. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> vid_on\n                          (\\<CC>\\<lparr>Arr\\<rparr>)\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                      f\\<rparr> =\n                         vid_on\n                          (\\<CC>\\<lparr>Arr\\<rparr>)\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         vid_on (\\<CC>\\<lparr>Arr\\<rparr>)\\<lparr>f\\<rparr>", "fix g b c f a"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (dghm_id \\<CC>)\n 3. semicategory \\<alpha> \\<CC>\n 4. semicategory \\<alpha> \\<CC>\n 5. vcard (dghm_id \\<CC>) = 4\\<^sub>\\<nat>\n 6. \\<CC> = \\<CC>\n 7. \\<CC> = \\<CC>\n 8. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> vid_on\n                          (\\<CC>\\<lparr>Arr\\<rparr>)\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                      f\\<rparr> =\n                         vid_on\n                          (\\<CC>\\<lparr>Arr\\<rparr>)\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         vid_on (\\<CC>\\<lparr>Arr\\<rparr>)\\<lparr>f\\<rparr>", "assume \"g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\" \"f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (state)\nthis:\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (dghm_id \\<CC>)\n 3. semicategory \\<alpha> \\<CC>\n 4. semicategory \\<alpha> \\<CC>\n 5. vcard (dghm_id \\<CC>) = 4\\<^sub>\\<nat>\n 6. \\<CC> = \\<CC>\n 7. \\<CC> = \\<CC>\n 8. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> vid_on\n                          (\\<CC>\\<lparr>Arr\\<rparr>)\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                      f\\<rparr> =\n                         vid_on\n                          (\\<CC>\\<lparr>Arr\\<rparr>)\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         vid_on (\\<CC>\\<lparr>Arr\\<rparr>)\\<lparr>f\\<rparr>", "then"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "show \"vid_on (\\<CC>\\<lparr>Arr\\<rparr>)\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\\<rparr> = \n    vid_on (\\<CC>\\<lparr>Arr\\<rparr>)\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> vid_on (\\<CC>\\<lparr>Arr\\<rparr>)\\<lparr>f\\<rparr>\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. vid_on\n     (\\<CC>\\<lparr>Arr\\<rparr>)\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n f\\<rparr> =\n    vid_on\n     (\\<CC>\\<lparr>Arr\\<rparr>)\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    vid_on (\\<CC>\\<lparr>Arr\\<rparr>)\\<lparr>f\\<rparr>", "by (metis smc_is_arrD(1) smc_Comp_is_arr vid_on_eq_atI)"], ["proof (state)\nthis:\n  vid_on\n   (\\<CC>\\<lparr>Arr\\<rparr>)\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                                     f\\<rparr> =\n  vid_on\n   (\\<CC>\\<lparr>Arr\\<rparr>)\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  vid_on (\\<CC>\\<lparr>Arr\\<rparr>)\\<lparr>f\\<rparr>\n\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (dghm_id \\<CC>)\n 3. semicategory \\<alpha> \\<CC>\n 4. semicategory \\<alpha> \\<CC>\n 5. vcard (dghm_id \\<CC>) = 4\\<^sub>\\<nat>\n 6. \\<CC> = \\<CC>\n 7. \\<CC> = \\<CC>", "qed (auto simp: semicategory_axioms dghm_id_def nat_omega_simps)"], ["", "lemma (in semicategory) smc_smcf_id_is_semifunctor': \n  assumes \"\\<AA> = \\<CC>\" and \"\\<BB> = \\<CC>\"\n  shows \"smcf_id \\<CC> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_id \\<CC> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_id \\<CC> :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule smc_smcf_id_is_semifunctor)"], ["", "lemmas [smc_cs_intros] = semicategory.smc_smcf_id_is_semifunctor'"], ["", "subsubsection\\<open>Further properties\\<close>"], ["", "lemma (in is_semifunctor) smcf_smcf_comp_smcf_id_left[smc_cs_simps]:\n  \\<comment>\\<open>See Chapter I-3 in \\cite{mac_lane_categories_2010}).\\<close>\n  \"smcf_id \\<BB> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF> = \\<FF>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_id \\<BB> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> = \\<FF>", "by (rule smcf_eqI, unfold dghm_id_components dghm_comp_components)\n    (auto simp: smcf_ObjMap_vrange smcf_ArrMap_vrange intro: smc_cs_intros)"], ["", "lemmas [smc_cs_simps] = is_semifunctor.smcf_smcf_comp_smcf_id_left"], ["", "lemma (in is_semifunctor) smcf_smcf_comp_smcf_id_right[smc_cs_simps]: \n  \\<comment>\\<open>See Chapter I-3 in \\cite{mac_lane_categories_2010}).\\<close>\n  \"\\<FF> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F smcf_id \\<AA> = \\<FF>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M dghm_id \\<AA> = \\<FF>", "by (rule smcf_eqI, unfold dghm_id_components dghm_comp_components)\n    (\n      auto \n        simp: smcf_ObjMap_vrange smcf_ArrMap_vrange smc_cs_simps\n        intro: smc_cs_intros\n    )"], ["", "lemmas [smc_cs_simps] = is_semifunctor.smcf_smcf_comp_smcf_id_right"], ["", "subsection\\<open>Constant semifunctor\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "text\\<open>See Chapter III-3 in \\cite{mac_lane_categories_2010}.\\<close>"], ["", "abbreviation (input) smcf_const :: \"V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V\"\n  where \"smcf_const \\<equiv> dghm_const\""], ["", "text\\<open>Slicing.\\<close>"], ["", "lemma smcf_dghm_smcf_const[slicing_commute]: \n  \"dghm_const (smc_dg \\<CC>) (smc_dg \\<DD>) a f = smcf_dghm (smcf_const \\<CC> \\<DD> a f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_const (smc_dg \\<CC>) (smc_dg \\<DD>) a f =\n    smcf_dghm (dghm_const \\<CC> \\<DD> a f)", "unfolding \n    dghm_const_def smc_dg_def smcf_dghm_def dghm_field_simps dg_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. [vconst_on\n      ([\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n        \\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n        \\<CC>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n        \\<CC>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>)\n      a,\n     vconst_on\n      ([\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n        \\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n        \\<CC>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n        \\<CC>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\n      f,\n     [\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>,\n     [\\<DD>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<DD>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<DD>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      \\<DD>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>]\\<^sub>\\<circ> =\n    [[vconst_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) a,\n      vconst_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>) f, \\<CC>,\n      \\<DD>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     [vconst_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) a,\n      vconst_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>) f, \\<CC>,\n      \\<DD>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     [[vconst_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) a,\n       vconst_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>) f, \\<CC>,\n       \\<DD>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      [vconst_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) a,\n       vconst_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>) f, \\<CC>,\n       \\<DD>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      [vconst_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) a,\n       vconst_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>) f, \\<CC>,\n       \\<DD>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      [vconst_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) a,\n       vconst_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>) f, \\<CC>,\n       \\<DD>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>,\n     [[vconst_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) a,\n       vconst_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>) f, \\<CC>,\n       \\<DD>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      [vconst_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) a,\n       vconst_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>) f, \\<CC>,\n       \\<DD>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      [vconst_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) a,\n       vconst_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>) f, \\<CC>,\n       \\<DD>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      [vconst_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) a,\n       vconst_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>) f, \\<CC>,\n       \\<DD>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>]\\<^sub>\\<circ>", "by (simp add: nat_omega_simps)"], ["", "subsubsection\\<open>Object map\\<close>"], ["", "lemmas [smc_cs_simps] = \n  dghm_const_ObjMap_app"], ["", "subsubsection\\<open>Arrow map\\<close>"], ["", "lemmas [smc_cs_simps] = \n  dghm_const_ArrMap_app"], ["", "subsubsection\\<open>Opposite constant semifunctor\\<close>"], ["", "lemma op_smcf_smcf_const[smc_op_simps]:\n  \"op_smcf (smcf_const \\<CC> \\<DD> a f) = smcf_const (op_smc \\<CC>) (op_smc \\<DD>) a f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_smcf (dghm_const \\<CC> \\<DD> a f) =\n    dghm_const (op_smc \\<CC>) (op_smc \\<DD>) a f", "unfolding dghm_const_def op_smc_def op_smcf_def dghm_field_simps dg_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. [[vconst_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) a,\n      vconst_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>) f, \\<CC>,\n      \\<DD>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     [vconst_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) a,\n      vconst_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>) f, \\<CC>,\n      \\<DD>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     [[vconst_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) a,\n       vconst_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>) f, \\<CC>,\n       \\<DD>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      [vconst_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) a,\n       vconst_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>) f, \\<CC>,\n       \\<DD>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      [vconst_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) a,\n       vconst_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>) f, \\<CC>,\n       \\<DD>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>3\\<^sub>\\<nat>\\<rparr>,\n      [vconst_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) a,\n       vconst_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>) f, \\<CC>,\n       \\<DD>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      fflip\n       ([vconst_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) a,\n         vconst_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>) f, \\<CC>,\n         \\<DD>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>4\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>,\n     [[vconst_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) a,\n       vconst_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>) f, \\<CC>,\n       \\<DD>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      [vconst_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) a,\n       vconst_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>) f, \\<CC>,\n       \\<DD>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      [vconst_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) a,\n       vconst_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>) f, \\<CC>,\n       \\<DD>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>3\\<^sub>\\<nat>\\<rparr>,\n      [vconst_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) a,\n       vconst_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>) f, \\<CC>,\n       \\<DD>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      fflip\n       ([vconst_on (\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) a,\n         vconst_on (\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>) f, \\<CC>,\n         \\<DD>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>4\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>]\\<^sub>\\<circ> =\n    [vconst_on\n      ([\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n        \\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n        \\<CC>\\<lparr>3\\<^sub>\\<nat>\\<rparr>,\n        \\<CC>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n        fflip\n         (\\<CC>\\<lparr>4\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>)\n      a,\n     vconst_on\n      ([\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n        \\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n        \\<CC>\\<lparr>3\\<^sub>\\<nat>\\<rparr>,\n        \\<CC>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n        fflip\n         (\\<CC>\\<lparr>4\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\n      f,\n     [\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>3\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      fflip (\\<CC>\\<lparr>4\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>,\n     [\\<DD>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<DD>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<DD>\\<lparr>3\\<^sub>\\<nat>\\<rparr>,\n      \\<DD>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      fflip\n       (\\<DD>\\<lparr>4\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>]\\<^sub>\\<circ>", "by (auto simp: nat_omega_simps)"], ["", "subsubsection\\<open>A constant semifunctor is a semifunctor\\<close>"], ["", "lemma smcf_const_is_semifunctor: \n  assumes \"semicategory \\<alpha> \\<CC>\"\n    and \"semicategory \\<alpha> \\<DD>\" \n    and \"f : a \\<mapsto>\\<^bsub>\\<DD>\\<^esub> a\" \n    and [simp]: \"f \\<circ>\\<^sub>A\\<^bsub>\\<DD>\\<^esub> f = f\"\n  shows \"smcf_const \\<CC> \\<DD> a f : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_const \\<CC> \\<DD> a f :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. dghm_const \\<CC> \\<DD> a f :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>", "interpret \\<CC>: semicategory \\<alpha> \\<CC>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<CC>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. dghm_const \\<CC> \\<DD> a f :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>", "interpret \\<DD>: semicategory \\<alpha> \\<DD>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<DD>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. dghm_const \\<CC> \\<DD> a f :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_const \\<CC> \\<DD> a f :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>", "proof(intro is_semifunctorI, tactic\\<open>distinct_subgoals_tac\\<close>)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (dghm_const \\<CC> \\<DD> a f)\n 3. semicategory \\<alpha> \\<CC>\n 4. semicategory \\<alpha> \\<DD>\n 5. vcard (dghm_const \\<CC> \\<DD> a f) = 4\\<^sub>\\<nat>\n 6. smcf_dghm (dghm_const \\<CC> \\<DD> a f) :\n    smc_dg\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 \\<DD>\n 7. dghm_const \\<CC> \\<DD> a f\\<lparr>HomDom\\<rparr> = \\<CC>\n 8. dghm_const \\<CC> \\<DD> a f\\<lparr>HomCod\\<rparr> = \\<DD>\n 9. \\<And>b c g aa fa.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        fa : aa \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> dghm_const \\<CC> \\<DD> a\n                          f\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                   fa\\<rparr> =\n                         dghm_const \\<CC> \\<DD> a\n                          f\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<DD>\\<^esub>\n                         dghm_const \\<CC> \\<DD> a\n                          f\\<lparr>ArrMap\\<rparr>\\<lparr>fa\\<rparr>", "from assms"], ["proof (chain)\npicking this:\n  semicategory \\<alpha> \\<CC>\n  semicategory \\<alpha> \\<DD>\n  f : a \\<mapsto>\\<^bsub>\\<DD>\\<^esub> a\n  f \\<circ>\\<^sub>A\\<^bsub>\\<DD>\\<^esub> f = f", "show \n      \"smcf_dghm (dghm_const \\<CC> \\<DD> a f) : smc_dg \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg \\<DD>\""], ["proof (prove)\nusing this:\n  semicategory \\<alpha> \\<CC>\n  semicategory \\<alpha> \\<DD>\n  f : a \\<mapsto>\\<^bsub>\\<DD>\\<^esub> a\n  f \\<circ>\\<^sub>A\\<^bsub>\\<DD>\\<^esub> f = f\n\ngoal (1 subgoal):\n 1. smcf_dghm (dghm_const \\<CC> \\<DD> a f) :\n    smc_dg\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 \\<DD>", "by \n        ( \n          cs_concl \n            cs_simp: slicing_commute[symmetric] \n            cs_intro: dg_cs_intros slicing_intros\n        )"], ["proof (state)\nthis:\n  smcf_dghm (dghm_const \\<CC> \\<DD> a f) :\n  smc_dg\n   \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                               \\<DD>\n\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (dghm_const \\<CC> \\<DD> a f)\n 3. semicategory \\<alpha> \\<CC>\n 4. semicategory \\<alpha> \\<DD>\n 5. vcard (dghm_const \\<CC> \\<DD> a f) = 4\\<^sub>\\<nat>\n 6. dghm_const \\<CC> \\<DD> a f\\<lparr>HomDom\\<rparr> = \\<CC>\n 7. dghm_const \\<CC> \\<DD> a f\\<lparr>HomCod\\<rparr> = \\<DD>\n 8. \\<And>b c g aa fa.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        fa : aa \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> dghm_const \\<CC> \\<DD> a\n                          f\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                   fa\\<rparr> =\n                         dghm_const \\<CC> \\<DD> a\n                          f\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<DD>\\<^esub>\n                         dghm_const \\<CC> \\<DD> a\n                          f\\<lparr>ArrMap\\<rparr>\\<lparr>fa\\<rparr>", "show \"vfsequence (smcf_const \\<CC> \\<DD> a f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (dghm_const \\<CC> \\<DD> a f)", "unfolding dghm_const_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence\n     [vconst_on (\\<CC>\\<lparr>Obj\\<rparr>) a,\n      vconst_on (\\<CC>\\<lparr>Arr\\<rparr>) f, \\<CC>, \\<DD>]\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  vfsequence (dghm_const \\<CC> \\<DD> a f)\n\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> \\<CC>\n 3. semicategory \\<alpha> \\<DD>\n 4. vcard (dghm_const \\<CC> \\<DD> a f) = 4\\<^sub>\\<nat>\n 5. dghm_const \\<CC> \\<DD> a f\\<lparr>HomDom\\<rparr> = \\<CC>\n 6. dghm_const \\<CC> \\<DD> a f\\<lparr>HomCod\\<rparr> = \\<DD>\n 7. \\<And>b c g aa fa.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        fa : aa \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> dghm_const \\<CC> \\<DD> a\n                          f\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                   fa\\<rparr> =\n                         dghm_const \\<CC> \\<DD> a\n                          f\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<DD>\\<^esub>\n                         dghm_const \\<CC> \\<DD> a\n                          f\\<lparr>ArrMap\\<rparr>\\<lparr>fa\\<rparr>", "show \"vcard (smcf_const \\<CC> \\<DD> a f) = 4\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (dghm_const \\<CC> \\<DD> a f) = 4\\<^sub>\\<nat>", "unfolding dghm_const_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard\n     [vconst_on (\\<CC>\\<lparr>Obj\\<rparr>) a,\n      vconst_on (\\<CC>\\<lparr>Arr\\<rparr>) f, \\<CC>, \\<DD>]\\<^sub>\\<circ> =\n    4\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  vcard (dghm_const \\<CC> \\<DD> a f) = 4\\<^sub>\\<nat>\n\ngoal (6 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> \\<CC>\n 3. semicategory \\<alpha> \\<DD>\n 4. dghm_const \\<CC> \\<DD> a f\\<lparr>HomDom\\<rparr> = \\<CC>\n 5. dghm_const \\<CC> \\<DD> a f\\<lparr>HomCod\\<rparr> = \\<DD>\n 6. \\<And>b c g aa fa.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        fa : aa \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> dghm_const \\<CC> \\<DD> a\n                          f\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                   fa\\<rparr> =\n                         dghm_const \\<CC> \\<DD> a\n                          f\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<DD>\\<^esub>\n                         dghm_const \\<CC> \\<DD> a\n                          f\\<lparr>ArrMap\\<rparr>\\<lparr>fa\\<rparr>", "fix g' b c f' a'"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> \\<CC>\n 3. semicategory \\<alpha> \\<DD>\n 4. dghm_const \\<CC> \\<DD> a f\\<lparr>HomDom\\<rparr> = \\<CC>\n 5. dghm_const \\<CC> \\<DD> a f\\<lparr>HomCod\\<rparr> = \\<DD>\n 6. \\<And>b c g aa fa.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        fa : aa \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> dghm_const \\<CC> \\<DD> a\n                          f\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                   fa\\<rparr> =\n                         dghm_const \\<CC> \\<DD> a\n                          f\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<DD>\\<^esub>\n                         dghm_const \\<CC> \\<DD> a\n                          f\\<lparr>ArrMap\\<rparr>\\<lparr>fa\\<rparr>", "assume \"g' : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\" \"f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (state)\nthis:\n  g' : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (6 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> \\<CC>\n 3. semicategory \\<alpha> \\<DD>\n 4. dghm_const \\<CC> \\<DD> a f\\<lparr>HomDom\\<rparr> = \\<CC>\n 5. dghm_const \\<CC> \\<DD> a f\\<lparr>HomCod\\<rparr> = \\<DD>\n 6. \\<And>b c g aa fa.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        fa : aa \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> dghm_const \\<CC> \\<DD> a\n                          f\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                   fa\\<rparr> =\n                         dghm_const \\<CC> \\<DD> a\n                          f\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<DD>\\<^esub>\n                         dghm_const \\<CC> \\<DD> a\n                          f\\<lparr>ArrMap\\<rparr>\\<lparr>fa\\<rparr>", "with assms(1-3)"], ["proof (chain)\npicking this:\n  semicategory \\<alpha> \\<CC>\n  semicategory \\<alpha> \\<DD>\n  f : a \\<mapsto>\\<^bsub>\\<DD>\\<^esub> a\n  g' : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "show \"smcf_const \\<CC> \\<DD> a f\\<lparr>ArrMap\\<rparr>\\<lparr>g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f'\\<rparr> =\n      smcf_const \\<CC> \\<DD> a f\\<lparr>ArrMap\\<rparr>\\<lparr>g'\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<DD>\\<^esub> smcf_const \\<CC> \\<DD> a f\\<lparr>ArrMap\\<rparr>\\<lparr>f'\\<rparr>\""], ["proof (prove)\nusing this:\n  semicategory \\<alpha> \\<CC>\n  semicategory \\<alpha> \\<DD>\n  f : a \\<mapsto>\\<^bsub>\\<DD>\\<^esub> a\n  g' : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. dghm_const \\<CC> \\<DD> a\n     f\\<lparr>ArrMap\\<rparr>\\<lparr>g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                                    f'\\<rparr> =\n    dghm_const \\<CC> \\<DD> a\n     f\\<lparr>ArrMap\\<rparr>\\<lparr>g'\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<DD>\\<^esub>\n    dghm_const \\<CC> \\<DD> a f\\<lparr>ArrMap\\<rparr>\\<lparr>f'\\<rparr>", "by (cs_concl cs_simp: assms(4) smc_cs_simps cs_intro: smc_cs_intros)"], ["proof (state)\nthis:\n  dghm_const \\<CC> \\<DD> a\n   f\\<lparr>ArrMap\\<rparr>\\<lparr>g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                                  f'\\<rparr> =\n  dghm_const \\<CC> \\<DD> a\n   f\\<lparr>ArrMap\\<rparr>\\<lparr>g'\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<DD>\\<^esub>\n  dghm_const \\<CC> \\<DD> a f\\<lparr>ArrMap\\<rparr>\\<lparr>f'\\<rparr>\n\ngoal (5 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> \\<CC>\n 3. semicategory \\<alpha> \\<DD>\n 4. dghm_const \\<CC> \\<DD> a f\\<lparr>HomDom\\<rparr> = \\<CC>\n 5. dghm_const \\<CC> \\<DD> a f\\<lparr>HomCod\\<rparr> = \\<DD>", "qed (auto simp: assms(1,2) dghm_const_components)"], ["proof (state)\nthis:\n  dghm_const \\<CC> \\<DD> a f :\n  \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smcf_const_is_semifunctor'[smc_cs_intros]: \n  assumes \"semicategory \\<alpha> \\<CC>\" \n    and \"semicategory \\<alpha> \\<DD>\" \n    and \"f : a \\<mapsto>\\<^bsub>\\<DD>\\<^esub> a\"\n    and \"f \\<circ>\\<^sub>A\\<^bsub>\\<DD>\\<^esub> f = f\"\n    and \"\\<AA> = \\<CC>\"\n    and \"\\<BB> = \\<DD>\"\n  shows \"smcf_const \\<CC> \\<DD> a f : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_const \\<CC> \\<DD> a f :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "using assms(1-4)"], ["proof (prove)\nusing this:\n  semicategory \\<alpha> \\<CC>\n  semicategory \\<alpha> \\<DD>\n  f : a \\<mapsto>\\<^bsub>\\<DD>\\<^esub> a\n  f \\<circ>\\<^sub>A\\<^bsub>\\<DD>\\<^esub> f = f\n\ngoal (1 subgoal):\n 1. dghm_const \\<CC> \\<DD> a f :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "unfolding assms(5,6)"], ["proof (prove)\nusing this:\n  semicategory \\<alpha> \\<CC>\n  semicategory \\<alpha> \\<DD>\n  f : a \\<mapsto>\\<^bsub>\\<DD>\\<^esub> a\n  f \\<circ>\\<^sub>A\\<^bsub>\\<DD>\\<^esub> f = f\n\ngoal (1 subgoal):\n 1. dghm_const \\<CC> \\<DD> a f :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>", "by (rule smcf_const_is_semifunctor)"], ["", "subsection\\<open>Faithful semifunctor\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "text\\<open>See Chapter I-3 in \\cite{mac_lane_categories_2010}.\\<close>"], ["", "locale is_ft_semifunctor = is_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF> for \\<alpha> \\<AA> \\<BB> \\<FF> + \n  assumes ft_smcf_is_ft_dghm: \n    \"smcf_dghm \\<FF> : smc_dg \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> smc_dg \\<BB>\""], ["", "syntax \"_is_ft_semifunctor\" :: \"V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> bool\"\n  (\\<open>(_ :/ _ \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<index> _)\\<close> [51, 51, 51] 51)"], ["", "translations \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \\<rightleftharpoons> \"CONST is_ft_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>\""], ["", "lemma (in is_ft_semifunctor) ft_smcf_is_ft_dghm'[slicing_intros]:\n  assumes \"\\<AA>' = smc_dg \\<AA>\" and \"\\<BB>' = smc_dg \\<BB>\"\n  shows \"smcf_dghm \\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm \\<FF> :\n    \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>'", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm \\<FF> :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                             \\<BB>", "by (rule ft_smcf_is_ft_dghm)"], ["", "lemmas [slicing_intros] = is_ft_semifunctor.ft_smcf_is_ft_dghm'"], ["", "text\\<open>Rules.\\<close>"], ["", "lemma (in is_ft_semifunctor) is_ft_semifunctor_axioms'[smcf_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<AA>' = \\<AA>\" and \"\\<BB>' = \\<BB>\"\n  shows \"\\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule is_ft_semifunctor_axioms)"], ["", "mk_ide rf is_ft_semifunctor_def[unfolded is_ft_semifunctor_axioms_def]\n  |intro is_ft_semifunctorI|\n  |dest is_ft_semifunctorD[dest]|\n  |elim is_ft_semifunctorE[elim]|"], ["", "lemmas [smcf_cs_intros] = is_ft_semifunctorD(1)"], ["", "lemma is_ft_semifunctorI':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n    and \"\\<And>a b. \\<lbrakk> a \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>; b \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr> \\<rbrakk> \\<Longrightarrow> v11 (\\<FF>\\<lparr>ArrMap\\<rparr> \\<restriction>\\<^sup>l\\<^sub>\\<circ> Hom \\<AA> a b)\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "using assms"], ["proof (prove)\nusing this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  \\<lbrakk>?a \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>;\n   ?b \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>\\<rbrakk>\n  \\<Longrightarrow> v11 (\\<FF>\\<lparr>ArrMap\\<rparr> \\<restriction>\\<^sup>l\\<^sub>\\<circ>\n                         Hom \\<AA> ?a ?b)\n\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (intro is_ft_semifunctorI)\n    (\n      simp_all add: \n        assms(1) \n        is_ft_dghmI[OF is_semifunctorD(6)[OF assms(1)], unfolded slicing_simps]\n    )"], ["", "lemma is_ft_semifunctorD':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n    and \"\\<And>a b. \\<lbrakk> a \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>; b \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr> \\<rbrakk> \\<Longrightarrow> v11 (\\<FF>\\<lparr>ArrMap\\<rparr> \\<restriction>\\<^sup>l\\<^sub>\\<circ> Hom \\<AA> a b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> &&&\n    (\\<And>a b.\n        \\<lbrakk>a \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>;\n         b \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>\\<rbrakk>\n        \\<Longrightarrow> v11 (\\<FF>\\<lparr>ArrMap\\<rparr> \\<restriction>\\<^sup>l\\<^sub>\\<circ>\n                               Hom \\<AA> a b))", "by \n    (\n      simp_all add: \n        is_ft_semifunctorD[OF assms(1)] \n        is_ft_dghmD(2)[\n          OF is_ft_semifunctorD(2)[OF assms(1)], unfolded slicing_simps\n          ]\n    )"], ["", "lemma is_ft_semifunctorE':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  obtains \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n    and \"\\<And>a b. \\<lbrakk> a \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>; b \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr> \\<rbrakk> \\<Longrightarrow> v11 (\\<FF>\\<lparr>ArrMap\\<rparr> \\<restriction>\\<^sup>l\\<^sub>\\<circ> Hom \\<AA> a b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>\\<FF> :\n              \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>;\n      \\<And>a b.\n         \\<lbrakk>a \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>;\n          b \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>\\<rbrakk>\n         \\<Longrightarrow> v11 (\\<FF>\\<lparr>ArrMap\\<rparr> \\<restriction>\\<^sup>l\\<^sub>\\<circ>\n                                Hom \\<AA> a b)\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>\\<FF> :\n              \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>;\n      \\<And>a b.\n         \\<lbrakk>a \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>;\n          b \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>\\<rbrakk>\n         \\<Longrightarrow> v11 (\\<FF>\\<lparr>ArrMap\\<rparr> \\<restriction>\\<^sup>l\\<^sub>\\<circ>\n                                Hom \\<AA> a b)\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (simp_all add: is_ft_semifunctorD')"], ["", "text\\<open>Elementary properties.\\<close>"], ["", "context is_ft_semifunctor\nbegin"], ["", "interpretation dghm: is_ft_dghm \\<alpha> \\<open>smc_dg \\<AA>\\<close> \\<open>smc_dg \\<BB>\\<close> \\<open>smcf_dghm \\<FF>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm \\<FF> :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                             \\<BB>", "by (rule ft_smcf_is_ft_dghm)"], ["", "lemmas_with [unfolded slicing_simps]:\n  ft_smcf_v11_on_Hom = dghm.ft_dghm_v11_on_Hom"], ["", "end"], ["", "subsubsection\\<open>Opposite faithful semifunctor\\<close>"], ["", "lemma (in is_ft_semifunctor) is_ft_semifunctor_op: \n  \"op_smcf \\<FF> : op_smc \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> op_smc \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_smcf \\<FF> :\n    op_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> op_smc\n                                     \\<BB>", "by \n    (\n      rule is_ft_semifunctorI, \n      unfold smc_op_simps slicing_simps slicing_commute[symmetric]\n    )\n    (\n      simp_all add: \n        is_semifunctor_op is_ft_dghm.ft_dghm_op_dghm_is_ft_dghm \n        ft_smcf_is_ft_dghm\n    )"], ["", "lemma (in is_ft_semifunctor) is_ft_semifunctor_op'[smc_op_intros]: \n  assumes \"\\<AA>' = op_smc \\<AA>\" and \"\\<BB>' = op_smc \\<BB>\"\n  shows \"op_smcf \\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_smcf \\<FF> :\n    \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>'", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. op_smcf \\<FF> :\n    op_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> op_smc\n                                     \\<BB>", "by (rule is_ft_semifunctor_op)"], ["", "lemmas is_ft_semifunctor_op[smc_op_intros] = \n  is_ft_semifunctor.is_ft_semifunctor_op'"], ["", "subsubsection\\<open>\nThe composition of faithful semifunctors is a faithful semifunctor\n\\<close>"], ["", "lemma smcf_comp_is_ft_semifunctor[smcf_cs_intros]:\n  \\<comment>\\<open>See Chapter I-3 in \\cite{mac_lane_categories_2010}.\\<close>\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "proof(intro is_ft_semifunctorI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n 2. smcf_dghm (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                             \\<CC>", "interpret \\<GG>: is_ft_semifunctor \\<alpha> \\<BB> \\<CC> \\<GG>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (simp add: assms(1))"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n 2. smcf_dghm (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                             \\<CC>", "interpret \\<FF>: is_ft_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (simp add: assms(2))"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n 2. smcf_dghm (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                             \\<CC>", "from \\<FF>.is_semifunctor_axioms \\<GG>.is_semifunctor_axioms"], ["proof (chain)\npicking this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  \\<GG> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "show \\<GG>\\<FF>: \n    \"\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\""], ["proof (prove)\nusing this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  \\<GG> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (auto intro: smc_cs_intros)"], ["proof (state)\nthis:\n  \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. smcf_dghm (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                             \\<CC>", "then"], ["proof (chain)\npicking this:\n  \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "interpret is_semifunctor \\<alpha> \\<AA> \\<CC> \\<open>\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF>\\<close>"], ["proof (prove)\nusing this:\n  \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "."], ["proof (state)\ngoal (1 subgoal):\n 1. smcf_dghm (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                             \\<CC>", "show \"smcf_dghm (\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF>) : smc_dg \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> smc_dg \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                             \\<CC>", "unfolding slicing_simps slicing_commute[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n    smcf_dghm \\<FF> :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                             \\<CC>", "by (auto intro: dghm_cs_intros slicing_intros)"], ["proof (state)\nthis:\n  smcf_dghm (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n  smc_dg\n   \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                           \\<CC>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Full semifunctor\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "text\\<open>See Chapter I-3 in \\cite{mac_lane_categories_2010}.\\<close>"], ["", "locale is_fl_semifunctor = is_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF> for \\<alpha> \\<AA> \\<BB> \\<FF> + \n  assumes fl_smcf_is_fl_dghm:\n    \"smcf_dghm \\<FF> : smc_dg \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> smc_dg \\<BB>\""], ["", "syntax \"_is_fl_semifunctor\" :: \"V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> bool\"\n  (\\<open>(_ :/ _ \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<index> _)\\<close> [51, 51, 51] 51)"], ["", "translations \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \\<rightleftharpoons> \"CONST is_fl_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>\""], ["", "lemma (in is_fl_semifunctor) fl_smcf_is_fl_dghm'[slicing_intros]:\n  assumes \"\\<AA>' = smc_dg \\<AA>\" and \"\\<BB>' = smc_dg \\<BB>\"\n  shows \"smcf_dghm \\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm \\<FF> :\n    \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>'", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm \\<FF> :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                   \\<BB>", "by (rule fl_smcf_is_fl_dghm)"], ["", "lemmas [slicing_intros] = is_fl_semifunctor.fl_smcf_is_fl_dghm'"], ["", "text\\<open>Rules.\\<close>"], ["", "mk_ide rf is_fl_semifunctor_def[unfolded is_fl_semifunctor_axioms_def]\n  |intro is_fl_semifunctorI|\n  |dest is_fl_semifunctorD[dest]|\n  |elim is_fl_semifunctorE[elim]|"], ["", "lemmas [smcf_cs_intros] = is_fl_semifunctorD(1)"], ["", "lemma is_fl_semifunctorI':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n    and \"\\<And>a b. \\<lbrakk> a \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>; b \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr> \\<rbrakk> \\<Longrightarrow>\n      \\<FF>\\<lparr>ArrMap\\<rparr> `\\<^sub>\\<circ> (Hom \\<AA> a b) = Hom \\<BB> (\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>) (\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>)\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "using assms"], ["proof (prove)\nusing this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  \\<lbrakk>?a \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>;\n   ?b \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>\\<rbrakk>\n  \\<Longrightarrow> \\<FF>\\<lparr>ArrMap\\<rparr> `\\<^sub>\\<circ>\n                    Hom \\<AA> ?a ?b =\n                    Hom \\<BB>\n                     (\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>?a\\<rparr>)\n                     (\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>?b\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (intro is_fl_semifunctorI)\n    (\n      simp_all add: \n        assms(1) \n        is_fl_dghmI[OF is_semifunctorD(6)[OF assms(1)], unfolded slicing_simps]\n    )"], ["", "lemma is_fl_semifunctorD':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n    and \"\\<And>a b. \\<lbrakk> a \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>; b \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr> \\<rbrakk> \\<Longrightarrow> \n      \\<FF>\\<lparr>ArrMap\\<rparr> `\\<^sub>\\<circ> (Hom \\<AA> a b) = Hom \\<BB> (\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>) (\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> &&&\n    (\\<And>a b.\n        \\<lbrakk>a \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>;\n         b \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>\\<rbrakk>\n        \\<Longrightarrow> \\<FF>\\<lparr>ArrMap\\<rparr> `\\<^sub>\\<circ>\n                          Hom \\<AA> a b =\n                          Hom \\<BB>\n                           (\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>)\n                           (\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>))", "by \n    (\n      simp_all add: \n        is_fl_semifunctorD[OF assms(1)] \n        is_fl_dghmD(2)[\n          OF is_fl_semifunctorD(2)[OF assms(1)], unfolded slicing_simps\n          ]\n    )"], ["", "lemma is_fl_semifunctorE':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  obtains \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n    and \"\\<And>a b. \\<lbrakk> a \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>; b \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr> \\<rbrakk> \\<Longrightarrow> \n      \\<FF>\\<lparr>ArrMap\\<rparr> `\\<^sub>\\<circ> (Hom \\<AA> a b) = Hom \\<BB> (\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>) (\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>\\<FF> :\n              \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>;\n      \\<And>a b.\n         \\<lbrakk>a \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>;\n          b \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>\\<rbrakk>\n         \\<Longrightarrow> \\<FF>\\<lparr>ArrMap\\<rparr> `\\<^sub>\\<circ>\n                           Hom \\<AA> a b =\n                           Hom \\<BB>\n                            (\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>)\n                            (\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>)\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>\\<FF> :\n              \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>;\n      \\<And>a b.\n         \\<lbrakk>a \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>;\n          b \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>\\<rbrakk>\n         \\<Longrightarrow> \\<FF>\\<lparr>ArrMap\\<rparr> `\\<^sub>\\<circ>\n                           Hom \\<AA> a b =\n                           Hom \\<BB>\n                            (\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>)\n                            (\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>)\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (simp_all add: is_fl_semifunctorD')"], ["", "text\\<open>Elementary properties.\\<close>"], ["", "context is_fl_semifunctor\nbegin"], ["", "interpretation dghm: is_fl_dghm \\<alpha> \\<open>smc_dg \\<AA>\\<close> \\<open>smc_dg \\<BB>\\<close> \\<open>smcf_dghm \\<FF>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm \\<FF> :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                   \\<BB>", "by (rule fl_smcf_is_fl_dghm)"], ["", "lemmas_with [unfolded slicing_simps]:\n  fl_smcf_surj_on_Hom = dghm.fl_dghm_surj_on_Hom"], ["", "end"], ["", "subsubsection\\<open>Opposite full semifunctor\\<close>"], ["", "lemma (in is_fl_semifunctor) is_fl_semifunctor_op: \n  \"op_smcf \\<FF> : op_smc \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> op_smc \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_smcf \\<FF> :\n    op_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> op_smc\n     \\<BB>", "by \n    (\n      rule is_fl_semifunctorI, \n      unfold smc_op_simps slicing_simps slicing_commute[symmetric]\n    )\n    (\n      simp_all add: \n        is_semifunctor_op \n        is_fl_dghm.fl_dghm_op_dghm_is_fl_dghm \n        fl_smcf_is_fl_dghm\n    )"], ["", "lemma (in is_fl_semifunctor) is_fl_semifunctor_op'[smc_op_intros]: \n  assumes \"\\<AA>' = op_smc \\<AA>\" and \"\\<BB>' = op_smc \\<BB>\"\n  shows \"op_smcf \\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_smcf \\<FF> :\n    \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>'", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. op_smcf \\<FF> :\n    op_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> op_smc\n     \\<BB>", "by (rule is_fl_semifunctor_op)"], ["", "lemmas is_fl_semifunctor_op[smc_op_intros] = \n  is_fl_semifunctor.is_fl_semifunctor_op"], ["", "subsubsection\\<open>The composition of full semifunctors is a full semifunctor\\<close>"], ["", "lemma smcf_comp_is_fl_semifunctor[smcf_cs_intros]:\n  \\<comment>\\<open>See Chapter I-3 in \\cite{mac_lane_categories_2010}.\\<close>\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n  shows \"\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "proof(intro is_fl_semifunctorI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n 2. smcf_dghm (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                   \\<CC>", "interpret \\<FF>: is_fl_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "using assms(2)"], ["proof (prove)\nusing this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by simp"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n 2. smcf_dghm (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                   \\<CC>", "interpret \\<GG>: is_fl_semifunctor \\<alpha> \\<BB> \\<CC> \\<GG>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "using assms(1)"], ["proof (prove)\nusing this:\n  \\<GG> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. \\<GG> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by simp"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n 2. smcf_dghm (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                   \\<CC>", "from \\<FF>.is_semifunctor_axioms \\<GG>.is_semifunctor_axioms"], ["proof (chain)\npicking this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  \\<GG> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "show\n    \"\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\""], ["proof (prove)\nusing this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  \\<GG> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (auto intro: smc_cs_intros)"], ["proof (state)\nthis:\n  \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. smcf_dghm (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                   \\<CC>", "show \"smcf_dghm (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) : smc_dg \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> smc_dg \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                   \\<CC>", "unfolding slicing_commute[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n    smcf_dghm \\<FF> :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                   \\<CC>", "by (auto intro: dghm_cs_intros slicing_intros)"], ["proof (state)\nthis:\n  smcf_dghm (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n  smc_dg\n   \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 \\<CC>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Fully faithful semifunctor\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "text\\<open>See Chapter I-3 in \\cite{mac_lane_categories_2010}).\\<close>"], ["", "locale is_ff_semifunctor = \n  is_ft_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF> + is_fl_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF> for \\<alpha> \\<AA> \\<BB> \\<FF>"], ["", "syntax \"_is_ff_semifunctor\" :: \"V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> bool\"\n  (\\<open>(_ :/ _ \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>f\\<index> _)\\<close> [51, 51, 51] 51)"], ["", "translations \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>f\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \\<rightleftharpoons> \"CONST is_ff_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>\""], ["", "text\\<open>Rules.\\<close>"], ["", "mk_ide rf is_ff_semifunctor_def\n  |intro is_ff_semifunctorI|\n  |dest is_ff_semifunctorD[dest]|\n  |elim is_ff_semifunctorE[elim]|"], ["", "lemmas [smcf_cs_intros] = is_ff_semifunctorD"], ["", "text\\<open>Elementary properties.\\<close>"], ["", "lemma (in is_ff_semifunctor) ff_smcf_is_ff_dghm:\n  \"smcf_dghm \\<FF> : smc_dg \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>f\\<^bsub>\\<alpha>\\<^esub> smc_dg \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm \\<FF> :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>f\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                   \\<BB>", "by (rule is_ff_dghmI) (auto intro: slicing_intros)"], ["", "lemma (in is_ff_semifunctor) ff_smcf_is_ff_dghm'[slicing_intros]:\n  assumes \"\\<AA>' = smc_dg \\<AA>\" and \"\\<BB>' = smc_dg \\<BB>\"\n  shows \"smcf_dghm \\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>f\\<^bsub>\\<alpha>\\<^esub> \\<BB>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm \\<FF> :\n    \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>f\\<^bsub>\\<alpha>\\<^esub> \\<BB>'", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm \\<FF> :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>f\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                   \\<BB>", "by (rule ff_smcf_is_ff_dghm)"], ["", "lemmas [slicing_intros] = is_ff_semifunctor.ff_smcf_is_ff_dghm'"], ["", "subsubsection\\<open>Opposite fully faithful semifunctor\\<close>"], ["", "lemma (in is_ff_semifunctor) is_ff_semifunctor_op: \n  \"op_smcf \\<FF> : op_smc \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>f\\<^bsub>\\<alpha>\\<^esub> op_smc \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_smcf \\<FF> :\n    op_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>f\\<^bsub>\\<alpha>\\<^esub> op_smc\n                           \\<BB>", "by (rule is_ff_semifunctorI) \n    (auto simp: is_fl_semifunctor_op is_ft_semifunctor_op)"], ["", "lemma (in is_ff_semifunctor) is_ff_semifunctor_op'[smc_op_intros]: \n  assumes \"\\<AA>' = op_smc \\<AA>\" and \"\\<BB>' = op_smc \\<BB>\"\n  shows \"op_smcf \\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>f\\<^bsub>\\<alpha>\\<^esub> \\<BB>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_smcf \\<FF> :\n    \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>f\\<^bsub>\\<alpha>\\<^esub> \\<BB>'", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. op_smcf \\<FF> :\n    op_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>f\\<^bsub>\\<alpha>\\<^esub> op_smc\n                           \\<BB>", "by (rule is_ff_semifunctor_op)"], ["", "lemmas is_ff_semifunctor_op[smc_op_intros] = \n  is_ff_semifunctor.is_ff_semifunctor_op'"], ["", "subsubsection\\<open>\nThe composition of fully faithful semifunctors is a fully faithful\nsemifunctor\n\\<close>"], ["", "lemma smcf_comp_is_ff_semifunctor[smcf_cs_intros]:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>f\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>f\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>f\\<^bsub>\\<alpha>\\<^esub> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>f\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "using assms"], ["proof (prove)\nusing this:\n  \\<GG> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>f\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>f\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>f\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (intro is_ff_semifunctorI, elim is_ff_semifunctorE) \n    (auto intro: smcf_cs_intros)"], ["", "subsection\\<open>Isomorphism of semicategories\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "text\\<open>See Chapter I-3 in \\cite{mac_lane_categories_2010}.\\<close>"], ["", "locale is_iso_semifunctor = is_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF> for \\<alpha> \\<AA> \\<BB> \\<FF> + \n  assumes iso_smcf_is_iso_dghm: \n    \"smcf_dghm \\<FF> : smc_dg \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> smc_dg \\<BB>\""], ["", "syntax \"_is_iso_semifunctor\" :: \"V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> bool\"\n  (\\<open>(_ :/ _ \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<index> _)\\<close> [51, 51, 51] 51)"], ["", "translations \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \\<rightleftharpoons> \"CONST is_iso_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>\""], ["", "lemma (in is_iso_semifunctor) iso_smcf_is_iso_dghm'[slicing_intros]:\n  assumes \"\\<AA>' = smc_dg \\<AA>\" \"\\<BB>' = smc_dg \\<BB>\"\n  shows \"smcf_dghm \\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm \\<FF> :\n    \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>'", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm \\<FF> :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                           \\<BB>", "by (rule iso_smcf_is_iso_dghm)"], ["", "lemmas [slicing_intros] = is_iso_semifunctor.iso_smcf_is_iso_dghm'"], ["", "text\\<open>Rules.\\<close>"], ["", "lemma (in is_iso_semifunctor) is_iso_semifunctor_axioms'[smcf_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<AA>' = \\<AA>\" and \"\\<BB>' = \\<BB>\"\n  shows \"\\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule is_iso_semifunctor_axioms)"], ["", "mk_ide rf is_iso_semifunctor_def[unfolded is_iso_semifunctor_axioms_def]\n  |intro is_iso_semifunctorI|\n  |dest is_iso_semifunctorD[dest]|\n  |elim is_iso_semifunctorE[elim]|"], ["", "lemma is_iso_semifunctorI':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n    and \"v11 (\\<FF>\\<lparr>ObjMap\\<rparr>)\"\n    and \"v11 (\\<FF>\\<lparr>ArrMap\\<rparr>)\"\n    and \"\\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = \\<BB>\\<lparr>Obj\\<rparr>\"\n    and \"\\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) = \\<BB>\\<lparr>Arr\\<rparr>\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "using assms"], ["proof (prove)\nusing this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  v11 (\\<FF>\\<lparr>ObjMap\\<rparr>)\n  v11 (\\<FF>\\<lparr>ArrMap\\<rparr>)\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) =\n  \\<BB>\\<lparr>Obj\\<rparr>\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) =\n  \\<BB>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (intro is_iso_semifunctorI)\n    (\n      simp_all add: \n        assms(1) \n        is_iso_dghmI[OF is_semifunctorD(6)[OF assms(1)], unfolded slicing_simps]\n    )"], ["", "lemma is_iso_semifunctorD':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n    and \"v11 (\\<FF>\\<lparr>ObjMap\\<rparr>)\"\n    and \"v11 (\\<FF>\\<lparr>ArrMap\\<rparr>)\"\n    and \"\\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = \\<BB>\\<lparr>Obj\\<rparr>\"\n    and \"\\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) = \\<BB>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<FF> :\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> &&&\n     v11 (\\<FF>\\<lparr>ObjMap\\<rparr>)) &&&\n    v11 (\\<FF>\\<lparr>ArrMap\\<rparr>) &&&\n    \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) =\n    \\<BB>\\<lparr>Obj\\<rparr> &&&\n    \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) =\n    \\<BB>\\<lparr>Arr\\<rparr>", "by \n    (\n      simp_all add: \n        is_iso_semifunctorD[OF assms(1)] \n        is_iso_dghmD(2-5)[\n          OF is_iso_semifunctorD(2)[OF assms(1)], unfolded slicing_simps\n          ]\n    )"], ["", "lemma is_iso_semifunctorE':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  obtains \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n    and \"v11 (\\<FF>\\<lparr>ObjMap\\<rparr>)\"\n    and \"v11 (\\<FF>\\<lparr>ArrMap\\<rparr>)\"\n    and \"\\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = \\<BB>\\<lparr>Obj\\<rparr>\"\n    and \"\\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) = \\<BB>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>\\<FF> :\n              \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>;\n      v11 (\\<FF>\\<lparr>ObjMap\\<rparr>); v11 (\\<FF>\\<lparr>ArrMap\\<rparr>);\n      \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) =\n      \\<BB>\\<lparr>Obj\\<rparr>;\n      \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) =\n      \\<BB>\\<lparr>Arr\\<rparr>\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>\\<FF> :\n              \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>;\n      v11 (\\<FF>\\<lparr>ObjMap\\<rparr>); v11 (\\<FF>\\<lparr>ArrMap\\<rparr>);\n      \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) =\n      \\<BB>\\<lparr>Obj\\<rparr>;\n      \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) =\n      \\<BB>\\<lparr>Arr\\<rparr>\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (simp_all add: is_iso_semifunctorD')"], ["", "text\\<open>Elementary properties.\\<close>"], ["", "context is_iso_semifunctor\nbegin"], ["", "interpretation dghm: is_iso_dghm \\<alpha> \\<open>smc_dg \\<AA>\\<close> \\<open>smc_dg \\<BB>\\<close> \\<open>smcf_dghm \\<FF>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm \\<FF> :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                           \\<BB>", "by (rule iso_smcf_is_iso_dghm)"], ["", "lemmas_with [unfolded slicing_simps]:\n  iso_smcf_ObjMap_vrange[smcf_cs_simps] = dghm.iso_dghm_ObjMap_vrange\n  and iso_smcf_ArrMap_vrange[smcf_cs_simps] = dghm.iso_dghm_ArrMap_vrange"], ["", "sublocale ObjMap: v11 \\<open>\\<FF>\\<lparr>ObjMap\\<rparr>\\<close>\n  rewrites \"\\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = \\<AA>\\<lparr>Obj\\<rparr>\" and \"\\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = \\<BB>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v11 (\\<FF>\\<lparr>ObjMap\\<rparr>) &&&\n    \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) =\n    \\<AA>\\<lparr>Obj\\<rparr> &&&\n    \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) =\n    \\<BB>\\<lparr>Obj\\<rparr>", "by (rule dghm.iso_dghm_ObjMap_v11[unfolded slicing_simps]) \n    (simp_all add: smc_cs_simps smcf_cs_simps)"], ["", "sublocale ArrMap: v11 \\<open>\\<FF>\\<lparr>ArrMap\\<rparr>\\<close>\n  rewrites \"\\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) = \\<AA>\\<lparr>Arr\\<rparr>\" and \"\\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) = \\<BB>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v11 (\\<FF>\\<lparr>ArrMap\\<rparr>) &&&\n    \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) =\n    \\<AA>\\<lparr>Arr\\<rparr> &&&\n    \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) =\n    \\<BB>\\<lparr>Arr\\<rparr>", "by (rule dghm.iso_dghm_ArrMap_v11[unfolded slicing_simps])\n    (simp_all add: smc_cs_simps smcf_cs_simps)"], ["", "lemmas_with [unfolded slicing_simps]:\n  iso_smcf_Obj_HomDom_if_Obj_HomCod[elim] = \n    dghm.iso_dghm_Obj_HomDom_if_Obj_HomCod\n  and iso_smcf_Arr_HomDom_if_Arr_HomCod[elim] = \n    dghm.iso_dghm_Arr_HomDom_if_Arr_HomCod\n  and iso_smcf_ObjMap_eqE[elim] = dghm.iso_dghm_ObjMap_eqE\n  and iso_smcf_ArrMap_eqE[elim] = dghm.iso_dghm_ArrMap_eqE"], ["", "end"], ["", "sublocale is_iso_semifunctor \\<subseteq> is_ff_semifunctor"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>f\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>f\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "interpret dghm: is_iso_dghm \\<alpha> \\<open>smc_dg \\<AA>\\<close> \\<open>smc_dg \\<BB>\\<close> \\<open>smcf_dghm \\<FF>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm \\<FF> :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                           \\<BB>", "by (rule iso_smcf_is_iso_dghm)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>f\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "show \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>f\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>f\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by unfold_locales"], ["proof (state)\nthis:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>f\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas (in is_iso_semifunctor) iso_smcf_is_ff_semifunctor = \n  is_ff_semifunctor_axioms"], ["", "lemmas [smcf_cs_intros] = is_iso_semifunctor.iso_smcf_is_ff_semifunctor"], ["", "subsubsection\\<open>Opposite isomorphism of semicategories\\<close>"], ["", "lemma (in is_iso_semifunctor) is_iso_semifunctor_op: \n  \"op_smcf \\<FF> : op_smc \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> op_smc \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_smcf \\<FF> :\n    op_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> op_smc\n                                   \\<BB>", "by \n    (\n      rule is_iso_semifunctorI, \n      unfold smc_op_simps slicing_simps slicing_commute[symmetric]\n    )\n    (\n      simp_all add: \n        is_semifunctor_op is_iso_dghm.is_iso_dghm_op iso_smcf_is_iso_dghm\n    )"], ["", "lemmas is_iso_semifunctor_op[smc_op_intros] =\n  is_iso_semifunctor.is_iso_semifunctor_op"], ["", "subsubsection\\<open>\nThe composition of isomorphisms of semicategories is an isomorphism of \nsemicategories\n\\<close>"], ["", "lemma smcf_comp_is_iso_semifunctor[smcf_cs_intros]:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "proof(intro is_iso_semifunctorI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n 2. smcf_dghm (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                           \\<CC>", "interpret \\<FF>: is_iso_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "using assms"], ["proof (prove)\nusing this:\n  \\<GG> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by auto"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n 2. smcf_dghm (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                           \\<CC>", "interpret \\<GG>: is_iso_semifunctor \\<alpha> \\<BB> \\<CC> \\<GG>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "using assms"], ["proof (prove)\nusing this:\n  \\<GG> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<GG> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by auto"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n 2. smcf_dghm (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                           \\<CC>", "from \\<FF>.is_semifunctor_axioms \\<GG>.is_semifunctor_axioms"], ["proof (chain)\npicking this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  \\<GG> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "show \n    \"\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\""], ["proof (prove)\nusing this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  \\<GG> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (auto intro: smcf_cs_intros)"], ["proof (state)\nthis:\n  \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. smcf_dghm (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                           \\<CC>", "show \"smcf_dghm (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) : smc_dg \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> smc_dg \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                           \\<CC>", "by \n      (\n        auto \n          intro: dghm_cs_intros slicing_intros \n          simp: slicing_commute[symmetric]\n      )"], ["proof (state)\nthis:\n  smcf_dghm (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n  smc_dg\n   \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                         \\<CC>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Inverse semifunctor\\<close>"], ["", "abbreviation (input) inv_smcf :: \"V \\<Rightarrow> V\"\n  where \"inv_smcf \\<equiv> inv_dghm\""], ["", "lemmas [smc_cs_simps] = inv_dghm_components(3,4)"], ["", "text\\<open>Slicing.\\<close>"], ["", "lemma dghm_inv_smcf[slicing_commute]: \n  \"inv_dghm (smcf_dghm \\<FF>) = smcf_dghm (inv_smcf \\<FF>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv_dghm (smcf_dghm \\<FF>) = smcf_dghm (inv_dghm \\<FF>)", "unfolding smcf_dghm_def inv_dghm_def dghm_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. [([\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n       \\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n       smc_dg (\\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n       smc_dg\n        (\\<FF>\\<lparr>3\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>)\\<inverse>\\<^sub>\\<circ>,\n     ([\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n       \\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n       smc_dg (\\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n       smc_dg\n        (\\<FF>\\<lparr>3\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\\<inverse>\\<^sub>\\<circ>,\n     [\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      smc_dg (\\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n      smc_dg\n       (\\<FF>\\<lparr>3\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>,\n     [\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      smc_dg (\\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n      smc_dg\n       (\\<FF>\\<lparr>3\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ> =\n    [[(\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>)\\<inverse>\\<^sub>\\<circ>,\n      (\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\\<inverse>\\<^sub>\\<circ>,\n      \\<FF>\\<lparr>3\\<^sub>\\<nat>\\<rparr>,\n      \\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     [(\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>)\\<inverse>\\<^sub>\\<circ>,\n      (\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\\<inverse>\\<^sub>\\<circ>,\n      \\<FF>\\<lparr>3\\<^sub>\\<nat>\\<rparr>,\n      \\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     smc_dg\n      ([(\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>)\\<inverse>\\<^sub>\\<circ>,\n        (\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\\<inverse>\\<^sub>\\<circ>,\n        \\<FF>\\<lparr>3\\<^sub>\\<nat>\\<rparr>,\n        \\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>),\n     smc_dg\n      ([(\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>)\\<inverse>\\<^sub>\\<circ>,\n        (\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\\<inverse>\\<^sub>\\<circ>,\n        \\<FF>\\<lparr>3\\<^sub>\\<nat>\\<rparr>,\n        \\<FF>\\<lparr>2\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>", "by (simp_all add: nat_omega_simps)"], ["", "context is_iso_semifunctor\nbegin"], ["", "interpretation dghm: is_iso_dghm \\<alpha> \\<open>smc_dg \\<AA>\\<close> \\<open>smc_dg \\<BB>\\<close> \\<open>smcf_dghm \\<FF>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm \\<FF> :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                           \\<BB>", "by (rule iso_smcf_is_iso_dghm)"], ["", "lemmas_with [unfolded slicing_simps slicing_commute]:\n  inv_smcf_ObjMap_v11 = dghm.inv_dghm_ObjMap_v11\n  and inv_smcf_ObjMap_vdomain = dghm.inv_dghm_ObjMap_vdomain\n  and inv_smcf_ObjMap_app = dghm.inv_dghm_ObjMap_app\n  and inv_smcf_ObjMap_vrange = dghm.inv_dghm_ObjMap_vrange\n  and inv_smcf_ArrMap_v11 = dghm.inv_dghm_ArrMap_v11\n  and inv_smcf_ArrMap_vdomain = dghm.inv_dghm_ArrMap_vdomain\n  and inv_smcf_ArrMap_app = dghm.inv_dghm_ArrMap_app\n  and inv_smcf_ArrMap_vrange = dghm.inv_dghm_ArrMap_vrange\n  and iso_smcf_ObjMap_inv_smcf_ObjMap_app =\n    dghm.iso_dghm_ObjMap_inv_dghm_ObjMap_app\n  and iso_smcf_ArrMap_inv_smcf_ArrMap_app = \n    dghm.iso_dghm_ArrMap_inv_dghm_ArrMap_app\n  and iso_smcf_HomDom_is_arr_conv = dghm.iso_dghm_HomDom_is_arr_conv\n  and iso_smcf_HomCod_is_arr_conv = dghm.iso_dghm_HomCod_is_arr_conv"], ["", "end"], ["", "lemmas [smcf_cs_intros] = \n  is_iso_semifunctor.inv_smcf_ObjMap_v11\n  is_iso_semifunctor.inv_smcf_ArrMap_v11"], ["", "lemmas [smcf_cs_simps] = \n  is_iso_semifunctor.inv_smcf_ObjMap_vdomain\n  is_iso_semifunctor.inv_smcf_ObjMap_app\n  is_iso_semifunctor.inv_smcf_ObjMap_vrange\n  is_iso_semifunctor.inv_smcf_ArrMap_vdomain\n  is_iso_semifunctor.inv_smcf_ArrMap_app\n  is_iso_semifunctor.inv_smcf_ArrMap_vrange\n  is_iso_semifunctor.iso_smcf_ObjMap_inv_smcf_ObjMap_app\n  is_iso_semifunctor.iso_smcf_ArrMap_inv_smcf_ArrMap_app"], ["", "subsection\\<open>\nAn isomorphism of semicategories is an isomorphism in the category \\<open>SemiCAT\\<close>\n\\<close>"], ["", "lemma is_arr_isomorphism_is_iso_semifunctor:\n  \\<comment>\\<open>See Chapter I-3 in \\cite{mac_lane_categories_2010}.\\<close>\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n    and \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\"\n    and \"\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF> = smcf_id \\<AA>\"\n    and \"\\<FF> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<GG> = smcf_id \\<BB>\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "interpret \\<FF>: is_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "interpret \\<GG>: is_semifunctor \\<alpha> \\<BB> \\<AA> \\<GG>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "proof(rule is_iso_semifunctorI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n 2. smcf_dghm \\<FF> :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                           \\<BB>", "have dg_\\<GG>\\<FF>\\<AA>: \"smcf_dghm \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M smcf_dghm \\<FF> = dghm_id (smc_dg \\<AA>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n    smcf_dghm \\<FF> =\n    dghm_id (smc_dg \\<AA>)", "by (simp add: assms(3) smcf_dghm_smcf_id smcf_dghm_smcf_comp)"], ["proof (state)\nthis:\n  smcf_dghm \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M smcf_dghm \\<FF> =\n  dghm_id (smc_dg \\<AA>)\n\ngoal (2 subgoals):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n 2. smcf_dghm \\<FF> :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                           \\<BB>", "have dg_\\<FF>\\<GG>\\<BB>: \"smcf_dghm \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M smcf_dghm \\<GG> = dghm_id (smc_dg \\<BB>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n    smcf_dghm \\<GG> =\n    dghm_id (smc_dg \\<BB>)", "by (simp add: assms(4) smcf_dghm_smcf_id smcf_dghm_smcf_comp)"], ["proof (state)\nthis:\n  smcf_dghm \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M smcf_dghm \\<GG> =\n  dghm_id (smc_dg \\<BB>)\n\ngoal (2 subgoals):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n 2. smcf_dghm \\<FF> :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                           \\<BB>", "from \\<FF>.smcf_is_dghm \\<GG>.smcf_is_dghm dg_\\<GG>\\<FF>\\<AA> dg_\\<FF>\\<GG>\\<BB>"], ["proof (chain)\npicking this:\n  smcf_dghm \\<FF> :\n  smc_dg\n   \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                               \\<BB>\n  smcf_dghm \\<GG> :\n  smc_dg\n   \\<BB> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                               \\<AA>\n  smcf_dghm \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M smcf_dghm \\<FF> =\n  dghm_id (smc_dg \\<AA>)\n  smcf_dghm \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M smcf_dghm \\<GG> =\n  dghm_id (smc_dg \\<BB>)", "show \n      \"smcf_dghm \\<FF> : smc_dg \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> smc_dg \\<BB>\""], ["proof (prove)\nusing this:\n  smcf_dghm \\<FF> :\n  smc_dg\n   \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                               \\<BB>\n  smcf_dghm \\<GG> :\n  smc_dg\n   \\<BB> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                               \\<AA>\n  smcf_dghm \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M smcf_dghm \\<FF> =\n  dghm_id (smc_dg \\<AA>)\n  smcf_dghm \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M smcf_dghm \\<GG> =\n  dghm_id (smc_dg \\<BB>)\n\ngoal (1 subgoal):\n 1. smcf_dghm \\<FF> :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                           \\<BB>", "by (rule is_arr_isomorphism_is_iso_dghm)"], ["proof (state)\nthis:\n  smcf_dghm \\<FF> :\n  smc_dg\n   \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                         \\<BB>\n\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "qed (simp add: \\<FF>.is_semifunctor_axioms)"], ["proof (state)\nthis:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma is_iso_semifunctor_is_arr_isomorphism:\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows [smcf_cs_intros]: \"inv_smcf \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<AA>\"\n    and \"inv_smcf \\<FF> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF> = smcf_id \\<AA>\"\n    and \"\\<FF> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F inv_smcf \\<FF> = smcf_id \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv_dghm \\<FF> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<AA> &&&\n    inv_dghm \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> =\n    dghm_id \\<AA> &&&\n    \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M inv_dghm \\<FF> =\n    dghm_id \\<BB>", "proof-"], ["proof (state)\ngoal (3 subgoals):\n 1. inv_dghm \\<FF> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n 2. inv_dghm \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> =\n    dghm_id \\<AA>\n 3. \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M inv_dghm \\<FF> =\n    dghm_id \\<BB>", "let ?\\<GG> = \\<open>inv_smcf \\<FF>\\<close>"], ["proof (state)\ngoal (3 subgoals):\n 1. inv_dghm \\<FF> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n 2. inv_dghm \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> =\n    dghm_id \\<AA>\n 3. \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M inv_dghm \\<FF> =\n    dghm_id \\<BB>", "interpret is_iso_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(1))"], ["proof (state)\ngoal (3 subgoals):\n 1. inv_dghm \\<FF> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n 2. inv_dghm \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> =\n    dghm_id \\<AA>\n 3. \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M inv_dghm \\<FF> =\n    dghm_id \\<BB>", "note is_iso_dghm = is_iso_dghm_is_arr_isomorphism[OF iso_smcf_is_iso_dghm]"], ["proof (state)\nthis:\n  inv_dghm (smcf_dghm \\<FF>) :\n  smc_dg\n   \\<BB> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                         \\<AA>\n  inv_dghm (smcf_dghm \\<FF>) \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n  smcf_dghm \\<FF> =\n  dghm_id (smc_dg \\<AA>)\n  smcf_dghm \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n  inv_dghm (smcf_dghm \\<FF>) =\n  dghm_id (smc_dg \\<BB>)\n\ngoal (3 subgoals):\n 1. inv_dghm \\<FF> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n 2. inv_dghm \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> =\n    dghm_id \\<AA>\n 3. \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M inv_dghm \\<FF> =\n    dghm_id \\<BB>", "show \\<GG>: \"?\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv_dghm \\<FF> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "proof\n    (\n      intro is_iso_semifunctorI is_semifunctorI; \n      (unfold slicing_commute[symmetric])?\n    )"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (inv_dghm \\<FF>)\n 3. semicategory \\<alpha> \\<BB>\n 4. semicategory \\<alpha> \\<AA>\n 5. vcard (inv_dghm \\<FF>) = 4\\<^sub>\\<nat>\n 6. inv_dghm (smcf_dghm \\<FF>) :\n    smc_dg\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 \\<AA>\n 7. inv_dghm \\<FF>\\<lparr>HomDom\\<rparr> = \\<BB>\n 8. inv_dghm \\<FF>\\<lparr>HomCod\\<rparr> = \\<AA>\n 9. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> inv_dghm\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n                       f\\<rparr> =\n                         inv_dghm\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n                         inv_dghm\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\n 10. inv_dghm (smcf_dghm \\<FF>) :\n     smc_dg\n      \\<BB> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                            \\<AA>", "show \"vfsequence (inv_smcf \\<FF>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (inv_dghm \\<FF>)", "unfolding inv_dghm_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence\n     [(\\<FF>\\<lparr>ObjMap\\<rparr>)\\<inverse>\\<^sub>\\<circ>,\n      (\\<FF>\\<lparr>ArrMap\\<rparr>)\\<inverse>\\<^sub>\\<circ>,\n      \\<FF>\\<lparr>HomCod\\<rparr>,\n      \\<FF>\\<lparr>HomDom\\<rparr>]\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  vfsequence (inv_dghm \\<FF>)\n\ngoal (9 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> \\<BB>\n 3. semicategory \\<alpha> \\<AA>\n 4. vcard (inv_dghm \\<FF>) = 4\\<^sub>\\<nat>\n 5. inv_dghm (smcf_dghm \\<FF>) :\n    smc_dg\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 \\<AA>\n 6. inv_dghm \\<FF>\\<lparr>HomDom\\<rparr> = \\<BB>\n 7. inv_dghm \\<FF>\\<lparr>HomCod\\<rparr> = \\<AA>\n 8. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> inv_dghm\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n                       f\\<rparr> =\n                         inv_dghm\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n                         inv_dghm\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\n 9. inv_dghm (smcf_dghm \\<FF>) :\n    smc_dg\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                           \\<AA>", "show \"vcard (inv_smcf \\<FF>) = 4\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (inv_dghm \\<FF>) = 4\\<^sub>\\<nat>", "unfolding inv_dghm_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard\n     [(\\<FF>\\<lparr>ObjMap\\<rparr>)\\<inverse>\\<^sub>\\<circ>,\n      (\\<FF>\\<lparr>ArrMap\\<rparr>)\\<inverse>\\<^sub>\\<circ>,\n      \\<FF>\\<lparr>HomCod\\<rparr>,\n      \\<FF>\\<lparr>HomDom\\<rparr>]\\<^sub>\\<circ> =\n    4\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  vcard (inv_dghm \\<FF>) = 4\\<^sub>\\<nat>\n\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> \\<BB>\n 3. semicategory \\<alpha> \\<AA>\n 4. inv_dghm (smcf_dghm \\<FF>) :\n    smc_dg\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 \\<AA>\n 5. inv_dghm \\<FF>\\<lparr>HomDom\\<rparr> = \\<BB>\n 6. inv_dghm \\<FF>\\<lparr>HomCod\\<rparr> = \\<AA>\n 7. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> inv_dghm\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n                       f\\<rparr> =\n                         inv_dghm\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n                         inv_dghm\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\n 8. inv_dghm (smcf_dghm \\<FF>) :\n    smc_dg\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                           \\<AA>", "show inv_iso_dghm_\\<FF>: \n      \"inv_dghm (smcf_dghm \\<FF>) : smc_dg \\<BB> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> smc_dg \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv_dghm (smcf_dghm \\<FF>) :\n    smc_dg\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                           \\<AA>", "by (rule is_iso_dghm(1))"], ["proof (state)\nthis:\n  inv_dghm (smcf_dghm \\<FF>) :\n  smc_dg\n   \\<BB> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                         \\<AA>\n\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> \\<BB>\n 3. semicategory \\<alpha> \\<AA>\n 4. inv_dghm (smcf_dghm \\<FF>) :\n    smc_dg\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 \\<AA>\n 5. inv_dghm \\<FF>\\<lparr>HomDom\\<rparr> = \\<BB>\n 6. inv_dghm \\<FF>\\<lparr>HomCod\\<rparr> = \\<AA>\n 7. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> inv_dghm\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n                       f\\<rparr> =\n                         inv_dghm\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n                         inv_dghm\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "show inv_dghm_\\<FF>: \"inv_dghm (smcf_dghm \\<FF>) : smc_dg \\<BB> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv_dghm (smcf_dghm \\<FF>) :\n    smc_dg\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 \\<AA>", "by (rule is_iso_dghmD(1)[OF inv_iso_dghm_\\<FF>])"], ["proof (state)\nthis:\n  inv_dghm (smcf_dghm \\<FF>) :\n  smc_dg\n   \\<BB> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                               \\<AA>\n\ngoal (6 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> \\<BB>\n 3. semicategory \\<alpha> \\<AA>\n 4. inv_dghm \\<FF>\\<lparr>HomDom\\<rparr> = \\<BB>\n 5. inv_dghm \\<FF>\\<lparr>HomCod\\<rparr> = \\<AA>\n 6. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> inv_dghm\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n                       f\\<rparr> =\n                         inv_dghm\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n                         inv_dghm\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "fix b c g a f"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> \\<BB>\n 3. semicategory \\<alpha> \\<AA>\n 4. inv_dghm \\<FF>\\<lparr>HomDom\\<rparr> = \\<BB>\n 5. inv_dghm \\<FF>\\<lparr>HomCod\\<rparr> = \\<AA>\n 6. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> inv_dghm\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n                       f\\<rparr> =\n                         inv_dghm\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n                         inv_dghm\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "assume prems: \"g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c\" \"f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\""], ["proof (state)\nthis:\n  g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\n\ngoal (6 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> \\<BB>\n 3. semicategory \\<alpha> \\<AA>\n 4. inv_dghm \\<FF>\\<lparr>HomDom\\<rparr> = \\<BB>\n 5. inv_dghm \\<FF>\\<lparr>HomCod\\<rparr> = \\<AA>\n 6. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> inv_dghm\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n                       f\\<rparr> =\n                         inv_dghm\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n                         inv_dghm\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "note is_arr_inv = is_dghm.dghm_ArrMap_is_arr[\n        OF inv_dghm_\\<FF>, unfolded slicing_simps slicing_commute\n        ]"], ["proof (state)\nthis:\n  ?f : ?a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> ?b \\<Longrightarrow>\n  inv_dghm\n   \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>?f\\<rparr> : inv_dghm\n              \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>?a\\<rparr> \\<mapsto>\\<^bsub>\\<AA>\\<^esub> inv_dghm\n                \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>?b\\<rparr>\n\ngoal (6 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> \\<BB>\n 3. semicategory \\<alpha> \\<AA>\n 4. inv_dghm \\<FF>\\<lparr>HomDom\\<rparr> = \\<BB>\n 5. inv_dghm \\<FF>\\<lparr>HomCod\\<rparr> = \\<AA>\n 6. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> inv_dghm\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n                       f\\<rparr> =\n                         inv_dghm\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n                         inv_dghm\n                          \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "from prems is_arr_inv[OF prems(1)] is_arr_inv[OF prems(2)]"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\n  inv_dghm\n   \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> : inv_dghm\n             \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr> \\<mapsto>\\<^bsub>\\<AA>\\<^esub> inv_dghm\n              \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>c\\<rparr>\n  inv_dghm\n   \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> : inv_dghm\n             \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> \\<mapsto>\\<^bsub>\\<AA>\\<^esub> inv_dghm\n              \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>", "show \n      \"inv_smcf \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f\\<rparr> =\n        inv_smcf \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> inv_smcf \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\n  inv_dghm\n   \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> : inv_dghm\n             \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr> \\<mapsto>\\<^bsub>\\<AA>\\<^esub> inv_dghm\n              \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>c\\<rparr>\n  inv_dghm\n   \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> : inv_dghm\n             \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> \\<mapsto>\\<^bsub>\\<AA>\\<^esub> inv_dghm\n              \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\n\ngoal (1 subgoal):\n 1. inv_dghm\n     \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n  f\\<rparr> =\n    inv_dghm\n     \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n    inv_dghm \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "unfolding inv_dghm_components"], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\n  (\\<FF>\\<lparr>ArrMap\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<lparr>g\\<rparr> : (\\<FF>\\<lparr>ObjMap\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<lparr>b\\<rparr> \\<mapsto>\\<^bsub>\\<AA>\\<^esub> (\\<FF>\\<lparr>ObjMap\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<lparr>c\\<rparr>\n  (\\<FF>\\<lparr>ArrMap\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<lparr>f\\<rparr> : (\\<FF>\\<lparr>ObjMap\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<lparr>a\\<rparr> \\<mapsto>\\<^bsub>\\<AA>\\<^esub> (\\<FF>\\<lparr>ObjMap\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<lparr>b\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<FF>\\<lparr>ArrMap\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n                           f\\<rparr> =\n    (\\<FF>\\<lparr>ArrMap\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n    (\\<FF>\\<lparr>ArrMap\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<lparr>f\\<rparr>", "by (intro v11.v11_vconverse_app)\n         (\n           cs_concl \n            cs_intro: smc_cs_intros V_cs_intros\n            cs_simp: V_cs_simps smc_cs_simps\n         )+"], ["proof (state)\nthis:\n  inv_dghm\n   \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\nf\\<rparr> =\n  inv_dghm\n   \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub>\n  inv_dghm \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\n\ngoal (5 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> \\<BB>\n 3. semicategory \\<alpha> \\<AA>\n 4. inv_dghm \\<FF>\\<lparr>HomDom\\<rparr> = \\<BB>\n 5. inv_dghm \\<FF>\\<lparr>HomCod\\<rparr> = \\<AA>", "qed (auto simp: smc_cs_simps intro: smc_cs_intros)"], ["proof (state)\nthis:\n  inv_dghm \\<FF> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n\ngoal (2 subgoals):\n 1. inv_dghm \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> =\n    dghm_id \\<AA>\n 2. \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M inv_dghm \\<FF> =\n    dghm_id \\<BB>", "show \"?\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF> = smcf_id \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv_dghm \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> =\n    dghm_id \\<AA>", "proof(rule smcf_eqI, unfold dghm_comp_components inv_dghm_components)"], ["proof (state)\ngoal (6 subgoals):\n 1. inv_dghm \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<BB>\n 2. dghm_id \\<AA> :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<DD>\n 3. (\\<FF>\\<lparr>ObjMap\\<rparr>)\\<inverse>\\<^sub>\\<circ> \\<circ>\\<^sub>\\<circ>\n    \\<FF>\\<lparr>ObjMap\\<rparr> =\n    dghm_id \\<AA>\\<lparr>ObjMap\\<rparr>\n 4. (\\<FF>\\<lparr>ArrMap\\<rparr>)\\<inverse>\\<^sub>\\<circ> \\<circ>\\<^sub>\\<circ>\n    \\<FF>\\<lparr>ArrMap\\<rparr> =\n    dghm_id \\<AA>\\<lparr>ArrMap\\<rparr>\n 5. ?\\<AA> = ?\\<CC>\n 6. ?\\<BB> = ?\\<DD>", "from \\<GG> is_semifunctor_axioms"], ["proof (chain)\npicking this:\n  inv_dghm \\<FF> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "show \"inv_smcf \\<FF> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\""], ["proof (prove)\nusing this:\n  inv_dghm \\<FF> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. inv_dghm \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "by (blast intro: smc_cs_intros)"], ["proof (state)\nthis:\n  inv_dghm \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n\ngoal (5 subgoals):\n 1. dghm_id \\<AA> :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<DD>\n 2. (\\<FF>\\<lparr>ObjMap\\<rparr>)\\<inverse>\\<^sub>\\<circ> \\<circ>\\<^sub>\\<circ>\n    \\<FF>\\<lparr>ObjMap\\<rparr> =\n    dghm_id \\<AA>\\<lparr>ObjMap\\<rparr>\n 3. (\\<FF>\\<lparr>ArrMap\\<rparr>)\\<inverse>\\<^sub>\\<circ> \\<circ>\\<^sub>\\<circ>\n    \\<FF>\\<lparr>ArrMap\\<rparr> =\n    dghm_id \\<AA>\\<lparr>ArrMap\\<rparr>\n 4. \\<AA> = ?\\<CC>\n 5. \\<AA> = ?\\<DD>", "qed\n    (\n      simp_all add: \n        HomDom.smc_smcf_id_is_semifunctor\n        ObjMap.v11_vcomp_vconverse \n        ArrMap.v11_vcomp_vconverse \n        dghm_id_components\n    )"], ["proof (state)\nthis:\n  inv_dghm \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> =\n  dghm_id \\<AA>\n\ngoal (1 subgoal):\n 1. \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M inv_dghm \\<FF> =\n    dghm_id \\<BB>", "show \"\\<FF> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F inv_smcf \\<FF> = smcf_id \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M inv_dghm \\<FF> =\n    dghm_id \\<BB>", "proof(rule smcf_eqI, unfold dghm_comp_components inv_dghm_components)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M inv_dghm \\<FF> :\n    ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<BB>\n 2. dghm_id \\<BB> :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<DD>\n 3. \\<FF>\\<lparr>ObjMap\\<rparr> \\<circ>\\<^sub>\\<circ>\n    (\\<FF>\\<lparr>ObjMap\\<rparr>)\\<inverse>\\<^sub>\\<circ> =\n    dghm_id \\<BB>\\<lparr>ObjMap\\<rparr>\n 4. \\<FF>\\<lparr>ArrMap\\<rparr> \\<circ>\\<^sub>\\<circ>\n    (\\<FF>\\<lparr>ArrMap\\<rparr>)\\<inverse>\\<^sub>\\<circ> =\n    dghm_id \\<BB>\\<lparr>ArrMap\\<rparr>\n 5. ?\\<AA> = ?\\<CC>\n 6. ?\\<BB> = ?\\<DD>", "from \\<GG> is_semifunctor_axioms"], ["proof (chain)\npicking this:\n  inv_dghm \\<FF> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "show \"\\<FF> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F inv_smcf \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\nusing this:\n  inv_dghm \\<FF> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M inv_dghm \\<FF> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (blast intro: smc_cs_intros)"], ["proof (state)\nthis:\n  \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M inv_dghm \\<FF> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (5 subgoals):\n 1. dghm_id \\<BB> :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<DD>\n 2. \\<FF>\\<lparr>ObjMap\\<rparr> \\<circ>\\<^sub>\\<circ>\n    (\\<FF>\\<lparr>ObjMap\\<rparr>)\\<inverse>\\<^sub>\\<circ> =\n    dghm_id \\<BB>\\<lparr>ObjMap\\<rparr>\n 3. \\<FF>\\<lparr>ArrMap\\<rparr> \\<circ>\\<^sub>\\<circ>\n    (\\<FF>\\<lparr>ArrMap\\<rparr>)\\<inverse>\\<^sub>\\<circ> =\n    dghm_id \\<BB>\\<lparr>ArrMap\\<rparr>\n 4. \\<BB> = ?\\<CC>\n 5. \\<BB> = ?\\<DD>", "qed \n    (\n      simp_all add: \n        HomCod.smc_smcf_id_is_semifunctor\n        ObjMap.v11_vcomp_vconverse' \n        ArrMap.v11_vcomp_vconverse' \n        dghm_id_components\n    )"], ["proof (state)\nthis:\n  \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M inv_dghm \\<FF> =\n  dghm_id \\<BB>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>An identity semifunctor is an isomorphism of semicategories\\<close>"], ["", "lemma (in semicategory) smc_smcf_id_is_iso_semifunctor: \n  \"smcf_id \\<CC> : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_id \\<CC> :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule is_iso_semifunctorI, unfold slicing_simps slicing_commute[symmetric])\n    (\n      simp_all add: \n        smc_smcf_id_is_semifunctor digraph.dg_dghm_id_is_iso_dghm smc_digraph\n    )"], ["", "lemma (in semicategory) smc_smcf_id_is_iso_semifunctor'[smcf_cs_intros]: \n  assumes \"\\<AA>' = \\<CC>\" and \"\\<BB>' = \\<CC>\"\n  shows \"smcf_id \\<CC> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_id \\<CC> :\n    \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>'", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_id \\<CC> :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule smc_smcf_id_is_iso_semifunctor)"], ["", "lemmas [smcf_cs_intros] = semicategory.smc_smcf_id_is_iso_semifunctor'"], ["", "subsection\\<open>Isomorphic semicategories\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "text\\<open>See Chapter I-3 in \\cite{mac_lane_categories_2010}).\\<close>"], ["", "locale iso_semicategory = L: semicategory \\<alpha> \\<AA> + R: semicategory \\<alpha> \\<BB> \n  for \\<alpha> \\<AA> \\<BB> +\n  assumes iso_smc_is_iso_semifunctor: \"\\<exists>\\<FF>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["", "notation iso_semicategory (infixl \"\\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<index>\" 50)"], ["", "text\\<open>Rules.\\<close>"], ["", "lemma iso_semicategoryI:\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n  shows \"\\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "using assms"], ["proof (prove)\nusing this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "unfolding iso_semicategory_def iso_semicategory_axioms_def"], ["proof (prove)\nusing this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<AA> \\<and>\n    semicategory \\<alpha> \\<BB> \\<and>\n    (\\<exists>\\<FF>.\n        \\<FF> :\n        \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>)", "by blast"], ["", "lemma iso_semicategoryD[dest]:\n  assumes \"\\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n  shows \"\\<exists>\\<FF>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<FF>.\n       \\<FF> :\n       \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "using assms"], ["proof (prove)\nusing this:\n  \\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<FF>.\n       \\<FF> :\n       \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "unfolding iso_semicategory_def iso_semicategory_axioms_def"], ["proof (prove)\nusing this:\n  semicategory \\<alpha> \\<AA> \\<and>\n  semicategory \\<alpha> \\<BB> \\<and>\n  (\\<exists>\\<FF>.\n      \\<FF> :\n      \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<FF>.\n       \\<FF> :\n       \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by simp_all"], ["", "lemma iso_semicategoryE[elim]:\n  assumes \"\\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n  obtains \\<FF> where \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<FF>.\n        \\<FF> :\n        \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  \\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<FF>.\n        \\<FF> :\n        \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["", "text\\<open>Elementary properties.\\<close>"], ["", "lemma (in iso_semicategory) iso_smc_iso_digraph: \"smc_dg \\<AA> \\<approx>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smc_dg \\<AA> \\<approx>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub>\n    smc_dg \\<BB>", "using iso_smc_is_iso_semifunctor"], ["proof (prove)\nusing this:\n  \\<exists>\\<FF>.\n     \\<FF> :\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. smc_dg \\<AA> \\<approx>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub>\n    smc_dg \\<BB>", "by (auto intro: slicing_intros iso_digraphI)"], ["", "subsubsection\\<open>A semicategory isomorphism is an equivalence relation\\<close>"], ["", "lemma iso_semicategory_refl: \n  assumes \"semicategory \\<alpha> \\<AA>\" \n  shows \"\\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "proof(rule iso_semicategoryI[of _  _ _ \\<open>smcf_id \\<AA>\\<close>])"], ["proof (state)\ngoal (1 subgoal):\n 1. dghm_id \\<AA> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "interpret semicategory \\<alpha> \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<AA>", "by (rule assms)"], ["proof (state)\ngoal (1 subgoal):\n 1. dghm_id \\<AA> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "show \"smcf_id \\<AA> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_id \\<AA> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "by (simp add: smc_smcf_id_is_iso_semifunctor)"], ["proof (state)\nthis:\n  dghm_id \\<AA> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma iso_semicategory_sym[sym]:\n  assumes \"\\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n  shows \"\\<BB> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<BB> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "interpret iso_semicategory \\<alpha> \\<AA> \\<BB>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<BB> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "from iso_smc_is_iso_semifunctor"], ["proof (chain)\npicking this:\n  \\<exists>\\<FF>.\n     \\<FF> :\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "obtain \\<FF> where \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\nusing this:\n  \\<exists>\\<FF>.\n     \\<FF> :\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<FF>.\n        \\<FF> :\n        \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<BB> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "then"], ["proof (chain)\npicking this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "have \"inv_smcf \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<AA>\""], ["proof (prove)\nusing this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. inv_dghm \\<FF> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "by (simp add: is_iso_semifunctor_is_arr_isomorphism(1))"], ["proof (state)\nthis:\n  inv_dghm \\<FF> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n\ngoal (1 subgoal):\n 1. \\<BB> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "then"], ["proof (chain)\npicking this:\n  inv_dghm \\<FF> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "show ?thesis"], ["proof (prove)\nusing this:\n  inv_dghm \\<FF> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n\ngoal (1 subgoal):\n 1. \\<BB> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "by (auto intro: iso_semicategoryI)"], ["proof (state)\nthis:\n  \\<BB> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma iso_semicategory_trans[trans]:\n  assumes \"\\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"\\<BB> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" \n  shows \"\\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "interpret L: iso_semicategory \\<alpha> \\<AA> \\<BB>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "interpret R: iso_semicategory \\<alpha> \\<BB> \\<CC>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "from L.iso_smc_is_iso_semifunctor R.iso_smc_is_iso_semifunctor"], ["proof (chain)\npicking this:\n  \\<exists>\\<FF>.\n     \\<FF> :\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  \\<exists>\\<FF>.\n     \\<FF> :\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>\\<FF>.\n     \\<FF> :\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  \\<exists>\\<FF>.\n     \\<FF> :\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. \\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (auto intro: iso_semicategoryI smcf_cs_intros)"], ["proof (state)\nthis:\n  \\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>\\newpage\\<close>"], ["", "end"]]}