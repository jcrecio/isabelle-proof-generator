{"file_name": "/home/qj213/afp-2021-10-22/thys/CZH_Foundations/czh_semicategories/CZH_SMC_Semicategory.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CZH_Foundations", "problem_names": ["lemmas [smc_cs_simps] = dg_shared_cs_simps", "lemmas [smc_cs_intros] = dg_shared_cs_intros", "lemma smc_dg_components[slicing_simps]:\n  shows \"smc_dg \\<CC>\\<lparr>Obj\\<rparr> = \\<CC>\\<lparr>Obj\\<rparr>\"\n    and \"smc_dg \\<CC>\\<lparr>Arr\\<rparr> = \\<CC>\\<lparr>Arr\\<rparr>\"\n    and \"smc_dg \\<CC>\\<lparr>Dom\\<rparr> = \\<CC>\\<lparr>Dom\\<rparr>\"\n    and \"smc_dg \\<CC>\\<lparr>Cod\\<rparr> = \\<CC>\\<lparr>Cod\\<rparr>\"", "lemma smc_dg_is_arr[slicing_simps]: \"f : a \\<mapsto>\\<^bsub>smc_dg \\<CC>\\<^esub> b \\<longleftrightarrow> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"", "lemmas [slicing_intros] = smc_dg_is_arr[THEN iffD2]", "lemma small_composable_arrs[simp]:\n  \"small {[g, f]\\<^sub>\\<circ> | g f. \\<exists>a b c. g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b}\"", "lemma composable_arrsI[smc_cs_intros]:\n  assumes \"gf = [g, f]\\<^sub>\\<circ>\" and \"g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\" and \"f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"\n  shows \"gf \\<in>\\<^sub>\\<circ> composable_arrs \\<CC>\"", "lemma composable_arrsE[elim!]:\n  assumes \"gf \\<in>\\<^sub>\\<circ> composable_arrs \\<CC>\"\n  obtains g f a b c where \"gf = [g, f]\\<^sub>\\<circ>\" and \"g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\" and \"f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"", "lemma small_composable_arrs'[simp]:\n  \"small {[g, f]\\<^sub>\\<circ> | g f. g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and> f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and> \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> = \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>}\"", "lemma dg_composable_arrs':\n  \"set {[g, f]\\<^sub>\\<circ> | g f. g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and> f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and> \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> = \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>} = \n    composable_arrs \\<CC>\"", "lemmas [smc_cs_simps] =\n  semicategory.smc_length\n  semicategory.smc_Comp_assoc", "lemma (in semicategory) smc_Comp_is_arr'[smc_cs_intros]:\n  assumes \"g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\"\n    and \"f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"\n    and \"\\<CC>' = \\<CC>\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f : a \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> c\"", "lemmas [smc_cs_intros] = \n  semicategory.smc_Comp_is_arr'\n  semicategory.smc_Comp_is_arr", "lemmas [slicing_intros] = semicategory.smc_digraph", "lemma (in semicategory) semicategory_axioms'[smc_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\"\n  shows \"semicategory \\<alpha>' \\<CC>\"", "lemma semicategoryI':\n  assumes \"\\<Z> \\<alpha>\"\n    and \"vfsequence \\<CC>\"\n    and \"vsv (\\<CC>\\<lparr>Comp\\<rparr>)\"\n    and \"vcard \\<CC> = 5\\<^sub>\\<nat>\"\n    and \"vsv (\\<CC>\\<lparr>Dom\\<rparr>)\"\n    and \"vsv (\\<CC>\\<lparr>Cod\\<rparr>)\"\n    and \"\\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>) = \\<CC>\\<lparr>Arr\\<rparr>\"\n    and \"\\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n    and \"\\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>) = \\<CC>\\<lparr>Arr\\<rparr>\"\n    and \"\\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n    and \"\\<And>gf. gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>) \\<longleftrightarrow>\n      (\\<exists>g f b c a. gf = [g, f]\\<^sub>\\<circ> \\<and> g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b)\"\n    and \"\\<And>b c g a f. \\<lbrakk> g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c; f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<rbrakk> \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\"\n    and \"\\<And>c d h b g a f. \\<lbrakk> h : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d; g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c; f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<rbrakk> \\<Longrightarrow>\n        (h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g) \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f = h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> (g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f)\"\n    and \"\\<CC>\\<lparr>Obj\\<rparr> \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and \"\\<And>A B. \\<lbrakk> A \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>; B \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>; A \\<in>\\<^sub>\\<circ> Vset \\<alpha>; B \\<in>\\<^sub>\\<circ> Vset \\<alpha> \\<rbrakk> \\<Longrightarrow>\n      (\\<Union>\\<^sub>\\<circ>a\\<in>\\<^sub>\\<circ>A. \\<Union>\\<^sub>\\<circ>b\\<in>\\<^sub>\\<circ>B. Hom \\<CC> a b) \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"semicategory \\<alpha> \\<CC>\"", "lemma semicategoryD':\n  assumes \"semicategory \\<alpha> \\<CC>\"\n  shows \"\\<Z> \\<alpha>\"\n    and \"vfsequence \\<CC>\"\n    and \"vsv (\\<CC>\\<lparr>Comp\\<rparr>)\"\n    and \"vcard \\<CC> = 5\\<^sub>\\<nat>\"\n    and \"vsv (\\<CC>\\<lparr>Dom\\<rparr>)\"\n    and \"vsv (\\<CC>\\<lparr>Cod\\<rparr>)\"\n    and \"\\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>) = \\<CC>\\<lparr>Arr\\<rparr>\"\n    and \"\\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n    and \"\\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>) = \\<CC>\\<lparr>Arr\\<rparr>\"\n    and \"\\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n    and \"\\<And>gf. gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>) \\<longleftrightarrow>\n      (\\<exists>g f b c a. gf = [g, f]\\<^sub>\\<circ> \\<and> g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b)\"\n    and \"\\<And>b c g a f. \\<lbrakk> g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c; f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<rbrakk> \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\"\n    and \"\\<And>c d h b g a f. \\<lbrakk> h : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d; g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c; f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<rbrakk> \\<Longrightarrow>\n        (h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g) \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f = h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> (g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f)\"\n    and \"\\<CC>\\<lparr>Obj\\<rparr> \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and \"\\<And>A B. \\<lbrakk> A \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>; B \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>; A \\<in>\\<^sub>\\<circ> Vset \\<alpha>; B \\<in>\\<^sub>\\<circ> Vset \\<alpha> \\<rbrakk> \\<Longrightarrow>\n      (\\<Union>\\<^sub>\\<circ>a\\<in>\\<^sub>\\<circ>A. \\<Union>\\<^sub>\\<circ>b\\<in>\\<^sub>\\<circ>B. Hom \\<CC> a b) \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"", "lemma semicategoryE':\n  assumes \"semicategory \\<alpha> \\<CC>\"\n  obtains \"\\<Z> \\<alpha>\"\n    and \"vfsequence \\<CC>\"\n    and \"vsv (\\<CC>\\<lparr>Comp\\<rparr>)\"\n    and \"vcard \\<CC> = 5\\<^sub>\\<nat>\"\n    and \"vsv (\\<CC>\\<lparr>Dom\\<rparr>)\"\n    and \"vsv (\\<CC>\\<lparr>Cod\\<rparr>)\"\n    and \"\\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>) = \\<CC>\\<lparr>Arr\\<rparr>\"\n    and \"\\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n    and \"\\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>) = \\<CC>\\<lparr>Arr\\<rparr>\"\n    and \"\\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n    and \"\\<And>gf. gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>) \\<longleftrightarrow>\n      (\\<exists>g f b c a. gf = [g, f]\\<^sub>\\<circ> \\<and> g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b)\"\n    and \"\\<And>b c g a f. \\<lbrakk> g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c; f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<rbrakk> \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\"\n    and \"\\<And>c d h b g a f. \\<lbrakk> h : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d; g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c; f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<rbrakk> \\<Longrightarrow>\n        (h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g) \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f = h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> (g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f)\"\n    and \"\\<CC>\\<lparr>Obj\\<rparr> \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and \"\\<And>A B. \\<lbrakk> A \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>; B \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>; A \\<in>\\<^sub>\\<circ> Vset \\<alpha>; B \\<in>\\<^sub>\\<circ> Vset \\<alpha> \\<rbrakk> \\<Longrightarrow>\n      (\\<Union>\\<^sub>\\<circ>a\\<in>\\<^sub>\\<circ>A. \\<Union>\\<^sub>\\<circ>b\\<in>\\<^sub>\\<circ>B. Hom \\<CC> a b) \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"", "lemmas_with [unfolded slicing_simps]:\n  smc_Dom_vdomain[smc_cs_simps] = dg.dg_Dom_vdomain\n  and smc_Dom_vrange = dg.dg_Dom_vrange\n  and smc_Cod_vdomain[smc_cs_simps] = dg.dg_Cod_vdomain\n  and smc_Cod_vrange = dg.dg_Cod_vrange\n  and smc_Obj_vsubset_Vset = dg.dg_Obj_vsubset_Vset\n  and smc_Hom_vifunion_in_Vset[smc_cs_intros] = dg.dg_Hom_vifunion_in_Vset\n  and smc_Obj_if_Dom_vrange = dg.dg_Obj_if_Dom_vrange\n  and smc_Obj_if_Cod_vrange = dg.dg_Obj_if_Cod_vrange\n  and smc_is_arrD = dg.dg_is_arrD\n  and smc_is_arrE[elim] = dg.dg_is_arrE\n  and smc_in_ArrE[elim] = dg.dg_in_ArrE\n  and smc_Hom_in_Vset[smc_cs_intros] = dg.dg_Hom_in_Vset\n  and smc_Arr_vsubset_Vset = dg.dg_Arr_vsubset_Vset\n  and smc_Dom_vsubset_Vset = dg.dg_Dom_vsubset_Vset\n  and smc_Cod_vsubset_Vset = dg.dg_Cod_vsubset_Vset\n  and smc_Obj_in_Vset = dg.dg_Obj_in_Vset\n  and smc_in_Obj_in_Vset[smc_cs_intros] = dg.dg_in_Obj_in_Vset\n  and smc_Arr_in_Vset = dg.dg_Arr_in_Vset\n  and smc_in_Arr_in_Vset[smc_cs_intros] = dg.dg_in_Arr_in_Vset\n  and smc_Dom_in_Vset = dg.dg_Dom_in_Vset\n  and smc_Cod_in_Vset = dg.dg_Cod_in_Vset\n  and smc_digraph_if_ge_Limit = dg.dg_digraph_if_ge_Limit\n  and smc_Dom_app_in_Obj = dg.dg_Dom_app_in_Obj\n  and smc_Cod_app_in_Obj = dg.dg_Cod_app_in_Obj\n  and smc_Arr_vempty_if_Obj_vempty = dg.dg_Arr_vempty_if_Obj_vempty\n  and smc_Dom_vempty_if_Arr_vempty = dg.dg_Dom_vempty_if_Arr_vempty\n  and smc_Cod_vempty_if_Arr_vempty = dg.dg_Cod_vempty_if_Arr_vempty", "lemmas [smc_cs_intros] =\n  semicategory.smc_is_arrD(1-3)\n  semicategory.smc_Hom_in_Vset", "lemma smc_eqI:\n  assumes \"semicategory \\<alpha> \\<AA>\" \n    and \"semicategory \\<alpha> \\<BB>\"\n    and \"\\<AA>\\<lparr>Obj\\<rparr> = \\<BB>\\<lparr>Obj\\<rparr>\"\n    and \"\\<AA>\\<lparr>Arr\\<rparr> = \\<BB>\\<lparr>Arr\\<rparr>\"\n    and \"\\<AA>\\<lparr>Dom\\<rparr> = \\<BB>\\<lparr>Dom\\<rparr>\"\n    and \"\\<AA>\\<lparr>Cod\\<rparr> = \\<BB>\\<lparr>Cod\\<rparr>\"\n    and \"\\<AA>\\<lparr>Comp\\<rparr> = \\<BB>\\<lparr>Comp\\<rparr>\"\n  shows \"\\<AA> = \\<BB>\"", "lemma smc_dg_eqI:\n  assumes \"semicategory \\<alpha> \\<AA>\"\n    and \"semicategory \\<alpha> \\<BB>\"\n    and \"\\<AA>\\<lparr>Comp\\<rparr> = \\<BB>\\<lparr>Comp\\<rparr>\"\n    and \"smc_dg \\<AA> = smc_dg \\<BB>\"\n  shows \"\\<AA> = \\<BB>\"", "lemma (in semicategory) smc_def: \"\\<CC> = [\\<CC>\\<lparr>Obj\\<rparr>, \\<CC>\\<lparr>Arr\\<rparr>, \\<CC>\\<lparr>Dom\\<rparr>, \\<CC>\\<lparr>Cod\\<rparr>, \\<CC>\\<lparr>Comp\\<rparr>]\\<^sub>\\<circ>\"", "lemma (in semicategory) smc_Comp_vdomainI[smc_cs_intros]: \n  assumes \"g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\" and \"f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\" and \"gf = [g, f]\\<^sub>\\<circ>\"\n  shows \"gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\"", "lemmas [smc_cs_intros] = semicategory.smc_Comp_vdomainI", "lemma (in semicategory) smc_Comp_vdomainE[elim!]: \n  assumes \"gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\" \n  obtains g f a b c where \"gf = [g, f]\\<^sub>\\<circ>\" and \"g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\" and \"f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"", "lemma (in semicategory) smc_Comp_vdomain_is_composable_arrs: \n  \"\\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>) = composable_arrs \\<CC>\"", "lemma (in semicategory) smc_Comp_vrange: \"\\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\"", "lemma (in semicategory) smc_Comp_vsubset_Vset: \"\\<CC>\\<lparr>Comp\\<rparr> \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\"", "lemma (in semicategory) smc_semicategory_in_Vset_4: \"\\<CC> \\<in>\\<^sub>\\<circ> Vset (\\<alpha> + 4\\<^sub>\\<nat>)\"", "lemma (in semicategory) smc_Comp_in_Vset: \n  assumes \"\\<Z> \\<beta>\" and \"\\<alpha> \\<in>\\<^sub>\\<circ> \\<beta>\"\n  shows \"\\<CC>\\<lparr>Comp\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<beta>\"", "lemma (in semicategory) smc_in_Vset: \n  assumes \"\\<Z> \\<beta>\" and \"\\<alpha> \\<in>\\<^sub>\\<circ> \\<beta>\"\n  shows \"\\<CC> \\<in>\\<^sub>\\<circ> Vset \\<beta>\"", "lemma (in semicategory) smc_semicategory_if_ge_Limit:\n  assumes \"\\<Z> \\<beta>\" and \"\\<alpha> \\<in>\\<^sub>\\<circ> \\<beta>\"\n  shows \"semicategory \\<beta> \\<CC>\"", "lemma small_semicategory[simp]: \"small {\\<CC>. semicategory \\<alpha> \\<CC>}\"", "lemma (in \\<Z>) semicategories_in_Vset: \n  assumes \"\\<Z> \\<beta>\" and \"\\<alpha> \\<in>\\<^sub>\\<circ> \\<beta>\"\n  shows \"set {\\<CC>. semicategory \\<alpha> \\<CC>} \\<in>\\<^sub>\\<circ> Vset \\<beta>\"", "lemma semicategory_if_semicategory:\n  assumes \"semicategory \\<beta> \\<CC>\"\n    and \"\\<Z> \\<alpha>\"\n    and \"\\<CC>\\<lparr>Obj\\<rparr> \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and \"\\<And>A B. \\<lbrakk> A \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>; B \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>; A \\<in>\\<^sub>\\<circ> Vset \\<alpha>; B \\<in>\\<^sub>\\<circ> Vset \\<alpha> \\<rbrakk> \\<Longrightarrow>\n      (\\<Union>\\<^sub>\\<circ>a\\<in>\\<^sub>\\<circ>A. \\<Union>\\<^sub>\\<circ>b\\<in>\\<^sub>\\<circ>B. Hom \\<CC> a b) \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"semicategory \\<alpha> \\<CC>\"", "lemma (in semicategory) smc_Comp_vempty_if_Arr_vempty:\n  assumes \"\\<CC>\\<lparr>Arr\\<rparr> = 0\"\n  shows \"\\<CC>\\<lparr>Comp\\<rparr> = 0\"", "lemma op_smc_components:\n  shows [smc_op_simps]: \"op_smc \\<CC>\\<lparr>Obj\\<rparr> = \\<CC>\\<lparr>Obj\\<rparr>\"\n    and [smc_op_simps]: \"op_smc \\<CC>\\<lparr>Arr\\<rparr> = \\<CC>\\<lparr>Arr\\<rparr>\"\n    and [smc_op_simps]: \"op_smc \\<CC>\\<lparr>Dom\\<rparr> = \\<CC>\\<lparr>Cod\\<rparr>\"\n    and [smc_op_simps]: \"op_smc \\<CC>\\<lparr>Cod\\<rparr> = \\<CC>\\<lparr>Dom\\<rparr>\"\n    and \"op_smc \\<CC>\\<lparr>Comp\\<rparr> = fflip (\\<CC>\\<lparr>Comp\\<rparr>)\"", "lemma op_smc_component_intros[smc_op_intros]:\n  shows \"a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr> \\<Longrightarrow> a \\<in>\\<^sub>\\<circ> op_smc \\<CC>\\<lparr>Obj\\<rparr>\"\n    and \"f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<Longrightarrow> f \\<in>\\<^sub>\\<circ> op_smc \\<CC>\\<lparr>Arr\\<rparr>\"", "lemma op_dg_smc_dg[slicing_commute]: \"op_dg (smc_dg \\<CC>) = smc_dg (op_smc \\<CC>)\"", "lemma op_smc_Comp_vdomain[smc_op_simps]: \n  \"\\<D>\\<^sub>\\<circ> (op_smc \\<CC>\\<lparr>Comp\\<rparr>) = (\\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>))\\<inverse>\\<^sub>\\<bullet>\"", "lemma op_smc_is_arr[smc_op_simps]: \"f : b \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> a \\<longleftrightarrow> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"", "lemmas [smc_op_intros] = op_smc_is_arr[THEN iffD2]", "lemma (in semicategory) op_smc_Comp_vrange[smc_op_simps]: \n  \"\\<R>\\<^sub>\\<circ> (op_smc \\<CC>\\<lparr>Comp\\<rparr>) = \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\"", "lemmas [smc_op_simps] = semicategory.op_smc_Comp_vrange", "lemma (in semicategory) op_smc_Comp[smc_op_simps]: \n  assumes \"f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\" and \"g : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f = f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g\"", "lemmas [smc_op_simps] = semicategory.op_smc_Comp", "lemma op_smc_Hom[smc_op_simps]: \"Hom (op_smc \\<CC>) a b = Hom \\<CC> b a\"", "lemma (in semicategory) semicategory_op[smc_op_intros]: \n  \"semicategory \\<alpha> (op_smc \\<CC>)\"", "lemmas semicategory_op[smc_op_intros] = semicategory.semicategory_op", "lemma (in semicategory) smc_op_smc_op_smc[smc_op_simps]: \"op_smc (op_smc \\<CC>) = \\<CC>\"", "lemmas smc_op_smc_op_smc[smc_op_simps] = semicategory.smc_op_smc_op_smc", "lemma eq_op_smc_iff[smc_op_simps]: \n  assumes \"semicategory \\<alpha> \\<AA>\" and \"semicategory \\<alpha> \\<BB>\"\n  shows \"op_smc \\<AA> = op_smc \\<BB> \\<longleftrightarrow> \\<AA> = \\<BB>\"", "lemma (in semicategory) smc_assoc_helper:\n  assumes \"f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"\n    and \"g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\"\n    and \"h : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d\"\n    and \"q : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d\"\n    and \"h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g = q\"\n  shows \"h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> (g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f) = q \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\"", "lemma (in semicategory) smc_pattern_rectangle_right:\n  assumes \"aa' : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a'\" \n    and \"a'a'' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a''\"\n    and \"a''b'' : a'' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b''\"\n    and \"ab : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"\n    and \"bb' : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\"\n    and \"b'b'' : b' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b''\"\n    and \"a'b' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\"\n    and \"a'b' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> aa' = bb' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> ab\"\n    and \"b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> a'b' = a''b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> a'a''\"\n  shows \"a''b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> (a'a'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> aa') = (b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> bb') \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> ab\"", "lemmas (in semicategory) smc_pattern_rectangle_left = \n  smc_pattern_rectangle_right[symmetric]", "lemmas [smc_arrow_cs_intros] = is_monic_arrD(1)", "lemma (in semicategory) is_epic_arrI:\n  assumes \"e : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"\n    and \"\\<And>f g c. \\<lbrakk> f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c; g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c; f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e \\<rbrakk> \\<Longrightarrow>\n      f = g\"\n  shows \"e : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> b\"", "lemma is_epic_arr_is_arr[smc_arrow_cs_intros, dest]:\n  assumes \"e : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> b\"\n  shows \"e : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"", "lemma (in semicategory) is_epic_arrD[dest]:\n  assumes \"e : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> b\"\n  shows \"e : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"\n    and \"\\<And>f g c. \\<lbrakk> f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c; g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c; f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e \\<rbrakk> \\<Longrightarrow>\n      f = g\"", "lemma (in semicategory) is_epic_arrE[elim!]:\n  assumes \"e : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> b\"\n  obtains \"e : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"\n    and \"\\<And>f g c. \\<lbrakk> f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c; g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c; f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e \\<rbrakk> \\<Longrightarrow> \n      f = g\"", "lemma (in semicategory) op_smc_is_epic_arr[smc_op_simps]: \n  \"f : b \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>op_smc \\<CC>\\<^esub> a \\<longleftrightarrow> f : a \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>\\<CC>\\<^esub> b\"", "lemma (in semicategory) op_smc_is_monic_arr[smc_op_simps]: \n  \"f : b \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>op_smc \\<CC>\\<^esub> a \\<longleftrightarrow> f : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> b\"", "lemma (in semicategory) smc_Comp_is_monic_arr[smc_arrow_cs_intros]:\n  assumes \"g : b \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>\\<CC>\\<^esub> c\" and \"f : a \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>\\<CC>\\<^esub> b\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f : a \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>\\<CC>\\<^esub> c\"", "lemmas [smc_arrow_cs_intros] = semicategory.smc_Comp_is_monic_arr", "lemma (in semicategory) smc_Comp_is_epic_arr[smc_arrow_cs_intros]: \n  assumes \"g : b \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> c\" and \"f : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> b\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> c\"", "lemmas [smc_arrow_cs_intros] = semicategory.smc_Comp_is_epic_arr", "lemma (in semicategory) smc_Comp_is_monic_arr_is_monic_arr:\n  assumes \"g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\" and \"f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\" and \"g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f : a \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>\\<CC>\\<^esub> c\"\n  shows \"f : a \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>\\<CC>\\<^esub> b\"", "lemma (in semicategory) smc_Comp_is_epic_arr_is_epic_arr:\n  assumes \"g : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\" and \"f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\" and \"f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> c\"\n  shows \"f : b \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> c\"", "lemmas [smc_cs_simps] = is_idem_arrD(2)", "lemma (in semicategory) op_smc_is_idem_arr[smc_op_simps]: \n  \"f : \\<mapsto>\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>op_smc \\<CC>\\<^esub> b \\<longleftrightarrow> f : \\<mapsto>\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<CC>\\<^esub> b\"", "lemma obj_initialI:\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\" and \"\\<And>b. b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr> \\<Longrightarrow> \\<exists>!f. f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\" \n  shows \"obj_initial \\<CC> a\"", "lemma obj_initialD[dest]:\n  assumes \"obj_initial \\<CC> a\" \n  shows \"a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\" and \"\\<And>b. b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr> \\<Longrightarrow> \\<exists>!f. f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"", "lemma obj_initialE[elim]:\n  assumes \"obj_initial \\<CC> a\" \n  obtains \"a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\" and \"\\<And>b. b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr> \\<Longrightarrow> \\<exists>!f. f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"", "lemma op_smc_obj_initial[smc_op_simps]: \n  \"obj_initial (op_smc \\<CC>) = obj_terminal \\<CC>\"", "lemma op_smc_obj_terminal[smc_op_simps]: \n  \"obj_terminal (op_smc \\<CC>) = obj_initial \\<CC>\"", "lemma op_smc_obj_null[smc_op_simps]: \"obj_null (op_smc \\<CC>) a = obj_null \\<CC> a\"", "lemma is_zero_arrI:\n  assumes \"obj_null \\<CC> z\" \n    and \"h = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\" \n    and \"f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> z\" \n    and \"g : z \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"\n  shows \"h : a \\<mapsto>\\<^sub>0\\<^bsub>\\<CC>\\<^esub> b\"", "lemma is_zero_arrD[dest]:\n  assumes \"h : a \\<mapsto>\\<^sub>0\\<^bsub>\\<CC>\\<^esub> b\"\n  shows \"\\<exists>z g f. obj_null \\<CC> z \\<and> h = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f \\<and> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> z \\<and> g : z \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"", "lemma is_zero_arrE[elim]:\n  assumes \"h : a \\<mapsto>\\<^sub>0\\<^bsub>\\<CC>\\<^esub> b\"\n  obtains z g f \n    where \"obj_null \\<CC> z\"\n      and \"h = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\" \n      and \"f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> z\" \n      and \"g : z \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"", "lemma (in semicategory) op_smc_is_zero_arr[smc_op_simps]: \n  \"f : b \\<mapsto>\\<^sub>0\\<^bsub>op_smc \\<CC>\\<^esub> a \\<longleftrightarrow> f : a \\<mapsto>\\<^sub>0\\<^bsub>\\<CC>\\<^esub> b\"", "lemma (in semicategory) smc_is_zero_arr_Comp_right:\n  assumes \"h : b \\<mapsto>\\<^sub>0\\<^bsub>\\<CC>\\<^esub> c\" and \"h' : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"\n  shows \"h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> h' : a \\<mapsto>\\<^sub>0\\<^bsub>\\<CC>\\<^esub> c\"", "lemmas [smc_arrow_cs_intros] = semicategory.smc_is_zero_arr_Comp_right", "lemma (in semicategory) smc_is_zero_arr_Comp_left:\n  assumes \"h' : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\" and \"h : a \\<mapsto>\\<^sub>0\\<^bsub>\\<CC>\\<^esub> b\" \n  shows \"h' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> h : a \\<mapsto>\\<^sub>0\\<^bsub>\\<CC>\\<^esub> c\"", "lemmas [smc_arrow_cs_intros] = semicategory.smc_is_zero_arr_Comp_left"], "translations": [["", "lemmas [smc_cs_simps] = dg_shared_cs_simps"], ["", "lemmas [smc_cs_intros] = dg_shared_cs_intros"], ["", "subsubsection\\<open>Slicing\\<close>"], ["", "text\\<open>\n\\<open>Slicing\\<close> is a term that is introduced in this work for the description\nof the process of the conversion of more specialized mathematical objects to \ntheir generalizations. \n\nThe terminology was adapted from the informal imperative\nobject oriented programming, where the term slicing often refers to the\nprocess of copying an object of a subclass type to an object of a \nsuperclass type \\cite{noauthor_wikipedia_2001}\\footnote{\n\\url{https://en.wikipedia.org/wiki/Object_slicing}\n}.\nHowever, it is important to note that the term has other meanings in \nprogramming and computer science.\n\\<close>"], ["", "definition smc_dg :: \"V \\<Rightarrow> V\"\n  where \"smc_dg \\<CC> = [\\<CC>\\<lparr>Obj\\<rparr>, \\<CC>\\<lparr>Arr\\<rparr>, \\<CC>\\<lparr>Dom\\<rparr>, \\<CC>\\<lparr>Cod\\<rparr>]\\<^sub>\\<circ>\""], ["", "text\\<open>Components.\\<close>"], ["", "lemma smc_dg_components[slicing_simps]:\n  shows \"smc_dg \\<CC>\\<lparr>Obj\\<rparr> = \\<CC>\\<lparr>Obj\\<rparr>\"\n    and \"smc_dg \\<CC>\\<lparr>Arr\\<rparr> = \\<CC>\\<lparr>Arr\\<rparr>\"\n    and \"smc_dg \\<CC>\\<lparr>Dom\\<rparr> = \\<CC>\\<lparr>Dom\\<rparr>\"\n    and \"smc_dg \\<CC>\\<lparr>Cod\\<rparr> = \\<CC>\\<lparr>Cod\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (smc_dg \\<CC>\\<lparr>Obj\\<rparr> = \\<CC>\\<lparr>Obj\\<rparr> &&&\n     smc_dg \\<CC>\\<lparr>Arr\\<rparr> = \\<CC>\\<lparr>Arr\\<rparr>) &&&\n    smc_dg \\<CC>\\<lparr>Dom\\<rparr> = \\<CC>\\<lparr>Dom\\<rparr> &&&\n    smc_dg \\<CC>\\<lparr>Cod\\<rparr> = \\<CC>\\<lparr>Cod\\<rparr>", "unfolding smc_dg_def dg_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n     \\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> &&&\n     [\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> =\n     \\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>) &&&\n    [\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     \\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     \\<CC>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n     \\<CC>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr> =\n    \\<CC>\\<lparr>2\\<^sub>\\<nat>\\<rparr> &&&\n    [\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     \\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     \\<CC>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n     \\<CC>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr> =\n    \\<CC>\\<lparr>3\\<^sub>\\<nat>\\<rparr>", "by (auto simp: nat_omega_simps)"], ["", "text\\<open>Regular definitions.\\<close>"], ["", "lemma smc_dg_is_arr[slicing_simps]: \"f : a \\<mapsto>\\<^bsub>smc_dg \\<CC>\\<^esub> b \\<longleftrightarrow> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f : a \\<mapsto>\\<^bsub>smc_dg \\<CC>\\<^esub> b =\n    f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "unfolding is_arr_def slicing_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n     \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = a \\<and>\n     \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = b) =\n    (f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n     \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = a \\<and>\n     \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = b)", ".."], ["", "lemmas [slicing_intros] = smc_dg_is_arr[THEN iffD2]"], ["", "subsubsection\\<open>Composition and composable arrows\\<close>"], ["", "text\\<open>\nThe definition of a set of \\<open>composable_arrs\\<close> is equivalent to the definition\nof \\<open>composable pairs\\<close> presented on page 10 in \\cite{mac_lane_categories_2010}\n(see theorem \\<open>dg_composable_arrs'\\<close> below). \nNonetheless, the definition is meant to be used sparingly. Normally,\nthe arrows are meant to be specified explicitly using the predicate \n\\<^const>\\<open>is_arr\\<close>.\n\\<close>"], ["", "definition Comp :: V\n  where [dg_field_simps]: \"Comp = 4\\<^sub>\\<nat>\""], ["", "abbreviation Comp_app :: \"V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V\" (infixl \"\\<circ>\\<^sub>A\\<index>\" 55)\n  where \"Comp_app \\<CC> a b \\<equiv> \\<CC>\\<lparr>Comp\\<rparr>\\<lparr>a, b\\<rparr>\\<^sub>\\<bullet>\""], ["", "definition composable_arrs :: \"V \\<Rightarrow> V\"\n  where \"composable_arrs \\<CC> = set \n    {[g, f]\\<^sub>\\<circ> | g f. \\<exists>a b c. g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b}\""], ["", "lemma small_composable_arrs[simp]:\n  \"small {[g, f]\\<^sub>\\<circ> | g f. \\<exists>a b c. g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. small\n     {[g, f]\\<^sub>\\<circ> |g f.\n      \\<exists>a b c.\n         g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n         f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b}", "proof(intro down[of _ \\<open>\\<CC>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\\<close>] subsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {[g, f]\\<^sub>\\<circ> |g f.\n                \\<exists>a b c.\n                   g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n                   f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b} \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times>\n                             2\\<^sub>\\<nat>", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {[g, f]\\<^sub>\\<circ> |g f.\n                \\<exists>a b c.\n                   g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n                   f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b} \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times>\n                             2\\<^sub>\\<nat>", "assume \"x \\<in> {[g, f]\\<^sub>\\<circ> | g f. \\<exists>a b c. g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b}\""], ["proof (state)\nthis:\n  x \\<in> {[g, f]\\<^sub>\\<circ> |g f.\n           \\<exists>a b c.\n              g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n              f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {[g, f]\\<^sub>\\<circ> |g f.\n                \\<exists>a b c.\n                   g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n                   f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b} \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times>\n                             2\\<^sub>\\<nat>", "then"], ["proof (chain)\npicking this:\n  x \\<in> {[g, f]\\<^sub>\\<circ> |g f.\n           \\<exists>a b c.\n              g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n              f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b}", "obtain g f a b c \n    where x_def: \"x = [g, f]\\<^sub>\\<circ>\" and \"g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\"  and \"f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\nusing this:\n  x \\<in> {[g, f]\\<^sub>\\<circ> |g f.\n           \\<exists>a b c.\n              g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n              f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b}\n\ngoal (1 subgoal):\n 1. (\\<And>g f b c a.\n        \\<lbrakk>x = [g, f]\\<^sub>\\<circ>;\n         g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n         f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  x = [g, f]\\<^sub>\\<circ>\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {[g, f]\\<^sub>\\<circ> |g f.\n                \\<exists>a b c.\n                   g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n                   f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b} \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times>\n                             2\\<^sub>\\<nat>", "with vfsequence_vcpower_two_vpair"], ["proof (chain)\npicking this:\n  ([?a, ?b]\\<^sub>\\<circ>\n   \\<in>\\<^sub>\\<circ> ?A ^\\<^sub>\\<times> 2\\<^sub>\\<nat>) =\n  (\\<langle>?a, ?b\\<rangle>\n   \\<in>\\<^sub>\\<circ> ?A \\<times>\\<^sub>\\<circ> ?A)\n  x = [g, f]\\<^sub>\\<circ>\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "show \"x \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\""], ["proof (prove)\nusing this:\n  ([?a, ?b]\\<^sub>\\<circ>\n   \\<in>\\<^sub>\\<circ> ?A ^\\<^sub>\\<times> 2\\<^sub>\\<nat>) =\n  (\\<langle>?a, ?b\\<rangle>\n   \\<in>\\<^sub>\\<circ> ?A \\<times>\\<^sub>\\<circ> ?A)\n  x = [g, f]\\<^sub>\\<circ>\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times>\n                          2\\<^sub>\\<nat>", "unfolding x_def"], ["proof (prove)\nusing this:\n  ([?a, ?b]\\<^sub>\\<circ>\n   \\<in>\\<^sub>\\<circ> ?A ^\\<^sub>\\<times> 2\\<^sub>\\<nat>) =\n  (\\<langle>?a, ?b\\<rangle>\n   \\<in>\\<^sub>\\<circ> ?A \\<times>\\<^sub>\\<circ> ?A)\n  [g, f]\\<^sub>\\<circ> = [g, f]\\<^sub>\\<circ>\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times>\n                        2\\<^sub>\\<nat>", "by auto"], ["proof (state)\nthis:\n  x \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times>\n                        2\\<^sub>\\<nat>\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Rules.\\<close>"], ["", "lemma composable_arrsI[smc_cs_intros]:\n  assumes \"gf = [g, f]\\<^sub>\\<circ>\" and \"g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\" and \"f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"\n  shows \"gf \\<in>\\<^sub>\\<circ> composable_arrs \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gf \\<in>\\<^sub>\\<circ> composable_arrs \\<CC>", "using assms(2,3) small_composable_arrs"], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  small\n   {[g, f]\\<^sub>\\<circ> |g f.\n    \\<exists>a b c.\n       g : b \\<mapsto>\\<^bsub>?\\<CC>\\<^esub> c \\<and>\n       f : a \\<mapsto>\\<^bsub>?\\<CC>\\<^esub> b}\n\ngoal (1 subgoal):\n 1. gf \\<in>\\<^sub>\\<circ> composable_arrs \\<CC>", "unfolding assms(1) composable_arrs_def"], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  small\n   {[g, f]\\<^sub>\\<circ> |g f.\n    \\<exists>a b c.\n       g : b \\<mapsto>\\<^bsub>?\\<CC>\\<^esub> c \\<and>\n       f : a \\<mapsto>\\<^bsub>?\\<CC>\\<^esub> b}\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                         {[g, f]\\<^sub>\\<circ> |g f.\n                          \\<exists>a b c.\n                             g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n                             f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b}", "by auto"], ["", "lemma composable_arrsE[elim!]:\n  assumes \"gf \\<in>\\<^sub>\\<circ> composable_arrs \\<CC>\"\n  obtains g f a b c where \"gf = [g, f]\\<^sub>\\<circ>\" and \"g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\" and \"f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g f b c a.\n        \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>;\n         g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n         f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms small_composable_arrs"], ["proof (prove)\nusing this:\n  gf \\<in>\\<^sub>\\<circ> composable_arrs \\<CC>\n  small\n   {[g, f]\\<^sub>\\<circ> |g f.\n    \\<exists>a b c.\n       g : b \\<mapsto>\\<^bsub>?\\<CC>\\<^esub> c \\<and>\n       f : a \\<mapsto>\\<^bsub>?\\<CC>\\<^esub> b}\n\ngoal (1 subgoal):\n 1. (\\<And>g f b c a.\n        \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>;\n         g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n         f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding composable_arrs_def"], ["proof (prove)\nusing this:\n  gf \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                          {[g, f]\\<^sub>\\<circ> |g f.\n                           \\<exists>a b c.\n                              g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n                              f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b}\n  small\n   {[g, f]\\<^sub>\\<circ> |g f.\n    \\<exists>a b c.\n       g : b \\<mapsto>\\<^bsub>?\\<CC>\\<^esub> c \\<and>\n       f : a \\<mapsto>\\<^bsub>?\\<CC>\\<^esub> b}\n\ngoal (1 subgoal):\n 1. (\\<And>g f b c a.\n        \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>;\n         g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n         f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["", "lemma small_composable_arrs'[simp]:\n  \"small {[g, f]\\<^sub>\\<circ> | g f. g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and> f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and> \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> = \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. small\n     {[g, f]\\<^sub>\\<circ> |g f.\n      g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n      f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n      \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n      \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>}", "proof(intro down[of _ \\<open>\\<CC>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\\<close>] subsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {[g, f]\\<^sub>\\<circ> |g f.\n                g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n                f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n                \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n                \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>} \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times>\n                             2\\<^sub>\\<nat>", "fix gf"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {[g, f]\\<^sub>\\<circ> |g f.\n                g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n                f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n                \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n                \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>} \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times>\n                             2\\<^sub>\\<nat>", "assume \n    \"gf \\<in>{[g, f]\\<^sub>\\<circ> | g f. g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and> f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and> \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> = \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>}\""], ["proof (state)\nthis:\n  gf \\<in> {[g, f]\\<^sub>\\<circ> |g f.\n            g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n            f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n            \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n            \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {[g, f]\\<^sub>\\<circ> |g f.\n                g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n                f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n                \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n                \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>} \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times>\n                             2\\<^sub>\\<nat>", "then"], ["proof (chain)\npicking this:\n  gf \\<in> {[g, f]\\<^sub>\\<circ> |g f.\n            g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n            f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n            \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n            \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>}", "obtain g f \n    where gf_def: \"gf = [g, f]\\<^sub>\\<circ>\" \n      and \"g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\" \n      and \"f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\" \n      and \"\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> = \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>\""], ["proof (prove)\nusing this:\n  gf \\<in> {[g, f]\\<^sub>\\<circ> |g f.\n            g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n            f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n            \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n            \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>}\n\ngoal (1 subgoal):\n 1. (\\<And>g f.\n        \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>;\n         g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>;\n         f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>;\n         \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n         \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  gf = [g, f]\\<^sub>\\<circ>\n  g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n  f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n  \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n  \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {[g, f]\\<^sub>\\<circ> |g f.\n                g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n                f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n                \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n                \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>} \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times>\n                             2\\<^sub>\\<nat>", "with vfsequence_vcpower_two_vpair"], ["proof (chain)\npicking this:\n  ([?a, ?b]\\<^sub>\\<circ>\n   \\<in>\\<^sub>\\<circ> ?A ^\\<^sub>\\<times> 2\\<^sub>\\<nat>) =\n  (\\<langle>?a, ?b\\<rangle>\n   \\<in>\\<^sub>\\<circ> ?A \\<times>\\<^sub>\\<circ> ?A)\n  gf = [g, f]\\<^sub>\\<circ>\n  g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n  f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n  \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n  \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>", "show \"gf \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\""], ["proof (prove)\nusing this:\n  ([?a, ?b]\\<^sub>\\<circ>\n   \\<in>\\<^sub>\\<circ> ?A ^\\<^sub>\\<times> 2\\<^sub>\\<nat>) =\n  (\\<langle>?a, ?b\\<rangle>\n   \\<in>\\<^sub>\\<circ> ?A \\<times>\\<^sub>\\<circ> ?A)\n  gf = [g, f]\\<^sub>\\<circ>\n  g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n  f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n  \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n  \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>\n\ngoal (1 subgoal):\n 1. gf \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times>\n                           2\\<^sub>\\<nat>", "unfolding gf_def"], ["proof (prove)\nusing this:\n  ([?a, ?b]\\<^sub>\\<circ>\n   \\<in>\\<^sub>\\<circ> ?A ^\\<^sub>\\<times> 2\\<^sub>\\<nat>) =\n  (\\<langle>?a, ?b\\<rangle>\n   \\<in>\\<^sub>\\<circ> ?A \\<times>\\<^sub>\\<circ> ?A)\n  [g, f]\\<^sub>\\<circ> = [g, f]\\<^sub>\\<circ>\n  g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n  f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n  \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n  \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times>\n                        2\\<^sub>\\<nat>", "by auto"], ["proof (state)\nthis:\n  gf \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times>\n                         2\\<^sub>\\<nat>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dg_composable_arrs':\n  \"set {[g, f]\\<^sub>\\<circ> | g f. g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and> f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and> \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> = \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>} = \n    composable_arrs \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set\n     {[g, f]\\<^sub>\\<circ> |g f.\n      g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n      f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n      \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n      \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>} =\n    composable_arrs \\<CC>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set\n     {[g, f]\\<^sub>\\<circ> |g f.\n      g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n      f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n      \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n      \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>} =\n    composable_arrs \\<CC>", "have \"{[g, f]\\<^sub>\\<circ> | g f. g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and> f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and> \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> = \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>} = \n    {[g, f]\\<^sub>\\<circ> | g f. \\<exists>a b c. g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {[g, f]\\<^sub>\\<circ> |g f.\n     g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n     f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n     \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n     \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>} =\n    {[g, f]\\<^sub>\\<circ> |g f.\n     \\<exists>a b c.\n        g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b}", "proof(intro subset_antisym subsetI, unfold mem_Collect_eq; elim exE conjE)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x g f.\n       \\<lbrakk>x = [g, f]\\<^sub>\\<circ>;\n        g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>;\n        f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>;\n        \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n        \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g f.\n                            x = [g, f]\\<^sub>\\<circ> \\<and>\n                            (\\<exists>a b c.\n                                g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n                                f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b)\n 2. \\<And>x g f a b c.\n       \\<lbrakk>x = [g, f]\\<^sub>\\<circ>;\n        g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g f.\n                            x = [g, f]\\<^sub>\\<circ> \\<and>\n                            g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n                            f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n                            \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n                            \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>", "fix gf g f"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x g f.\n       \\<lbrakk>x = [g, f]\\<^sub>\\<circ>;\n        g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>;\n        f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>;\n        \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n        \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g f.\n                            x = [g, f]\\<^sub>\\<circ> \\<and>\n                            (\\<exists>a b c.\n                                g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n                                f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b)\n 2. \\<And>x g f a b c.\n       \\<lbrakk>x = [g, f]\\<^sub>\\<circ>;\n        g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g f.\n                            x = [g, f]\\<^sub>\\<circ> \\<and>\n                            g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n                            f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n                            \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n                            \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>", "assume gf_def: \"gf = [g, f]\\<^sub>\\<circ>\" \n      and \"g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\"\n      and \"f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\" \n      and gf: \"\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> = \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>\""], ["proof (state)\nthis:\n  gf = [g, f]\\<^sub>\\<circ>\n  g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n  f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n  \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n  \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>\n\ngoal (2 subgoals):\n 1. \\<And>x g f.\n       \\<lbrakk>x = [g, f]\\<^sub>\\<circ>;\n        g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>;\n        f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>;\n        \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n        \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g f.\n                            x = [g, f]\\<^sub>\\<circ> \\<and>\n                            (\\<exists>a b c.\n                                g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n                                f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b)\n 2. \\<And>x g f a b c.\n       \\<lbrakk>x = [g, f]\\<^sub>\\<circ>;\n        g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g f.\n                            x = [g, f]\\<^sub>\\<circ> \\<and>\n                            g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n                            f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n                            \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n                            \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>", "then"], ["proof (chain)\npicking this:\n  gf = [g, f]\\<^sub>\\<circ>\n  g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n  f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n  \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n  \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>", "obtain a b b' c where g: \"g : b' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\" and f: \"f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\nusing this:\n  gf = [g, f]\\<^sub>\\<circ>\n  g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n  f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n  \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n  \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>b' c a b.\n        \\<lbrakk>g : b' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n         f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto intro!: is_arrI)"], ["proof (state)\nthis:\n  g : b' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (2 subgoals):\n 1. \\<And>x g f.\n       \\<lbrakk>x = [g, f]\\<^sub>\\<circ>;\n        g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>;\n        f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>;\n        \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n        \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g f.\n                            x = [g, f]\\<^sub>\\<circ> \\<and>\n                            (\\<exists>a b c.\n                                g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n                                f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b)\n 2. \\<And>x g f a b c.\n       \\<lbrakk>x = [g, f]\\<^sub>\\<circ>;\n        g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g f.\n                            x = [g, f]\\<^sub>\\<circ> \\<and>\n                            g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n                            f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n                            \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n                            \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>", "moreover"], ["proof (state)\nthis:\n  g : b' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (2 subgoals):\n 1. \\<And>x g f.\n       \\<lbrakk>x = [g, f]\\<^sub>\\<circ>;\n        g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>;\n        f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>;\n        \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n        \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g f.\n                            x = [g, f]\\<^sub>\\<circ> \\<and>\n                            (\\<exists>a b c.\n                                g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n                                f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b)\n 2. \\<And>x g f a b c.\n       \\<lbrakk>x = [g, f]\\<^sub>\\<circ>;\n        g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g f.\n                            x = [g, f]\\<^sub>\\<circ> \\<and>\n                            g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n                            f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n                            \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n                            \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>", "have \"b' = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b' = b", "unfolding is_arrD(2,3)[OF g, symmetric] is_arrD(2,3)[OF f, symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n    \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>", "by (rule gf)"], ["proof (state)\nthis:\n  b' = b\n\ngoal (2 subgoals):\n 1. \\<And>x g f.\n       \\<lbrakk>x = [g, f]\\<^sub>\\<circ>;\n        g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>;\n        f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>;\n        \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n        \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g f.\n                            x = [g, f]\\<^sub>\\<circ> \\<and>\n                            (\\<exists>a b c.\n                                g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n                                f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b)\n 2. \\<And>x g f a b c.\n       \\<lbrakk>x = [g, f]\\<^sub>\\<circ>;\n        g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g f.\n                            x = [g, f]\\<^sub>\\<circ> \\<and>\n                            g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n                            f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n                            \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n                            \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>", "ultimately"], ["proof (chain)\npicking this:\n  g : b' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  b' = b", "have \"\\<exists>a b c. g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\nusing this:\n  g : b' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  b' = b\n\ngoal (1 subgoal):\n 1. \\<exists>a b c.\n       g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n       f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "by auto"], ["proof (state)\nthis:\n  \\<exists>a b c.\n     g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n     f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (2 subgoals):\n 1. \\<And>x g f.\n       \\<lbrakk>x = [g, f]\\<^sub>\\<circ>;\n        g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>;\n        f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>;\n        \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n        \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g f.\n                            x = [g, f]\\<^sub>\\<circ> \\<and>\n                            (\\<exists>a b c.\n                                g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n                                f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b)\n 2. \\<And>x g f a b c.\n       \\<lbrakk>x = [g, f]\\<^sub>\\<circ>;\n        g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g f.\n                            x = [g, f]\\<^sub>\\<circ> \\<and>\n                            g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n                            f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n                            \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n                            \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>", "then"], ["proof (chain)\npicking this:\n  \\<exists>a b c.\n     g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n     f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "show \"\\<exists>g f. gf = [g, f]\\<^sub>\\<circ> \\<and> (\\<exists>a b c. g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b)\""], ["proof (prove)\nusing this:\n  \\<exists>a b c.\n     g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n     f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<exists>g f.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       (\\<exists>a b c.\n           g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n           f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b)", "unfolding gf_def"], ["proof (prove)\nusing this:\n  \\<exists>a b c.\n     g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n     f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<exists>ga fa.\n       [g, f]\\<^sub>\\<circ> = [ga, fa]\\<^sub>\\<circ> \\<and>\n       (\\<exists>a b c.\n           ga : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n           fa : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b)", "by auto"], ["proof (state)\nthis:\n  \\<exists>g f.\n     gf = [g, f]\\<^sub>\\<circ> \\<and>\n     (\\<exists>a b c.\n         g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n         f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b)\n\ngoal (1 subgoal):\n 1. \\<And>x g f a b c.\n       \\<lbrakk>x = [g, f]\\<^sub>\\<circ>;\n        g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g f.\n                            x = [g, f]\\<^sub>\\<circ> \\<and>\n                            g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n                            f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n                            \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n                            \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x g f a b c.\n       \\<lbrakk>x = [g, f]\\<^sub>\\<circ>;\n        g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g f.\n                            x = [g, f]\\<^sub>\\<circ> \\<and>\n                            g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n                            f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n                            \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n                            \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>", "fix gf g f a b c"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x g f a b c.\n       \\<lbrakk>x = [g, f]\\<^sub>\\<circ>;\n        g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g f.\n                            x = [g, f]\\<^sub>\\<circ> \\<and>\n                            g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n                            f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n                            \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n                            \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>", "assume gf_def: \"gf = [g, f]\\<^sub>\\<circ>\" and \"g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\" and \"f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (state)\nthis:\n  gf = [g, f]\\<^sub>\\<circ>\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<And>x g f a b c.\n       \\<lbrakk>x = [g, f]\\<^sub>\\<circ>;\n        g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g f.\n                            x = [g, f]\\<^sub>\\<circ> \\<and>\n                            g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n                            f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n                            \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n                            \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>", "then"], ["proof (chain)\npicking this:\n  gf = [g, f]\\<^sub>\\<circ>\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "have \"g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\" \"f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\" \"\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> = \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>\""], ["proof (prove)\nusing this:\n  gf = [g, f]\\<^sub>\\<circ>\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> &&&\n    f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> &&&\n    \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n    \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>", "by auto"], ["proof (state)\nthis:\n  g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n  f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n  \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n  \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x g f a b c.\n       \\<lbrakk>x = [g, f]\\<^sub>\\<circ>;\n        g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g f.\n                            x = [g, f]\\<^sub>\\<circ> \\<and>\n                            g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n                            f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n                            \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n                            \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>", "then"], ["proof (chain)\npicking this:\n  g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n  f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n  \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n  \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>", "show \n      \"\\<exists>g f. gf = [g, f]\\<^sub>\\<circ> \\<and> g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and> f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and> \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> = \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>\""], ["proof (prove)\nusing this:\n  g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n  f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n  \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n  \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<exists>g f.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n       f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n       \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n       \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>", "unfolding gf_def"], ["proof (prove)\nusing this:\n  g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n  f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n  \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n  \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<exists>ga fa.\n       [g, f]\\<^sub>\\<circ> = [ga, fa]\\<^sub>\\<circ> \\<and>\n       ga \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n       fa \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n       \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>ga\\<rparr> =\n       \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>fa\\<rparr>", "by auto"], ["proof (state)\nthis:\n  \\<exists>g f.\n     gf = [g, f]\\<^sub>\\<circ> \\<and>\n     g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n     f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n     \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n     \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {[g, f]\\<^sub>\\<circ> |g f.\n   g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n   f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n   \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n   \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>} =\n  {[g, f]\\<^sub>\\<circ> |g f.\n   \\<exists>a b c.\n      g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n      f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b}\n\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set\n     {[g, f]\\<^sub>\\<circ> |g f.\n      g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n      f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n      \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n      \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>} =\n    composable_arrs \\<CC>", "then"], ["proof (chain)\npicking this:\n  {[g, f]\\<^sub>\\<circ> |g f.\n   g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n   f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n   \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n   \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>} =\n  {[g, f]\\<^sub>\\<circ> |g f.\n   \\<exists>a b c.\n      g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n      f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b}", "show ?thesis"], ["proof (prove)\nusing this:\n  {[g, f]\\<^sub>\\<circ> |g f.\n   g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n   f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n   \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n   \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>} =\n  {[g, f]\\<^sub>\\<circ> |g f.\n   \\<exists>a b c.\n      g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n      f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b}\n\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set\n     {[g, f]\\<^sub>\\<circ> |g f.\n      g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n      f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n      \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n      \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>} =\n    composable_arrs \\<CC>", "unfolding composable_arrs_def"], ["proof (prove)\nusing this:\n  {[g, f]\\<^sub>\\<circ> |g f.\n   g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n   f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n   \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n   \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>} =\n  {[g, f]\\<^sub>\\<circ> |g f.\n   \\<exists>a b c.\n      g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n      f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b}\n\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set\n     {[g, f]\\<^sub>\\<circ> |g f.\n      g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n      f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n      \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n      \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>} =\n    ZFC_in_HOL.set\n     {[g, f]\\<^sub>\\<circ> |g f.\n      \\<exists>a b c.\n         g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n         f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b}", "by auto"], ["proof (state)\nthis:\n  ZFC_in_HOL.set\n   {[g, f]\\<^sub>\\<circ> |g f.\n    g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n    f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n    \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> =\n    \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>} =\n  composable_arrs \\<CC>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Definition and elementary properties\\<close>"], ["", "text\\<open>\nThe definition of a semicategory that is used in this work is\nsimilar to the definition that was used in \\cite{mitchell_dominion_1972}.\nIt is also a natural generalization of the definition of a category that is\npresented in Chapter I-2 in \\cite{mac_lane_categories_2010}. The generalization\nis performed by omitting the identity and the axioms associated\nwith it. The amendments to the definitions that are associated with size \nhave already been explained in the previous chapter.\n\\<close>"], ["", "locale semicategory = \\<Z> \\<alpha> + vfsequence \\<CC> + Comp: vsv \\<open>\\<CC>\\<lparr>Comp\\<rparr>\\<close> for \\<alpha> \\<CC> +\n  assumes smc_length[smc_cs_simps]: \"vcard \\<CC> = 5\\<^sub>\\<nat>\"\n    and smc_digraph[slicing_intros]: \"digraph \\<alpha> (smc_dg \\<CC>)\"\n    and smc_Comp_vdomain: \"gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>) \\<longleftrightarrow>\n      (\\<exists>g f b c a. gf = [g, f]\\<^sub>\\<circ> \\<and> g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b)\"\n    and smc_Comp_is_arr: \n      \"\\<lbrakk> g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c; f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<rbrakk> \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\"\n    and smc_Comp_assoc[smc_cs_simps]:\n      \"\\<lbrakk> h : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d; g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c; f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<rbrakk> \\<Longrightarrow>\n        (h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g) \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f = h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> (g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f)\""], ["", "lemmas [smc_cs_simps] =\n  semicategory.smc_length\n  semicategory.smc_Comp_assoc"], ["", "lemma (in semicategory) smc_Comp_is_arr'[smc_cs_intros]:\n  assumes \"g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\"\n    and \"f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"\n    and \"\\<CC>' = \\<CC>\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f : a \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    f : a \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> c", "using assms(1,2)"], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    f : a \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> c", "unfolding assms(3)"], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c", "by (rule smc_Comp_is_arr)"], ["", "lemmas [smc_cs_intros] = \n  semicategory.smc_Comp_is_arr'\n  semicategory.smc_Comp_is_arr"], ["", "lemmas [slicing_intros] = semicategory.smc_digraph"], ["", "text\\<open>Rules.\\<close>"], ["", "lemma (in semicategory) semicategory_axioms'[smc_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\"\n  shows \"semicategory \\<alpha>' \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha>' \\<CC>", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<CC>", "by (rule semicategory_axioms)"], ["", "mk_ide rf semicategory_def[unfolded semicategory_axioms_def]\n  |intro semicategoryI|\n  |dest semicategoryD[dest]|\n  |elim semicategoryE[elim]|"], ["", "lemma semicategoryI':\n  assumes \"\\<Z> \\<alpha>\"\n    and \"vfsequence \\<CC>\"\n    and \"vsv (\\<CC>\\<lparr>Comp\\<rparr>)\"\n    and \"vcard \\<CC> = 5\\<^sub>\\<nat>\"\n    and \"vsv (\\<CC>\\<lparr>Dom\\<rparr>)\"\n    and \"vsv (\\<CC>\\<lparr>Cod\\<rparr>)\"\n    and \"\\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>) = \\<CC>\\<lparr>Arr\\<rparr>\"\n    and \"\\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n    and \"\\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>) = \\<CC>\\<lparr>Arr\\<rparr>\"\n    and \"\\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n    and \"\\<And>gf. gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>) \\<longleftrightarrow>\n      (\\<exists>g f b c a. gf = [g, f]\\<^sub>\\<circ> \\<and> g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b)\"\n    and \"\\<And>b c g a f. \\<lbrakk> g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c; f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<rbrakk> \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\"\n    and \"\\<And>c d h b g a f. \\<lbrakk> h : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d; g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c; f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<rbrakk> \\<Longrightarrow>\n        (h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g) \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f = h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> (g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f)\"\n    and \"\\<CC>\\<lparr>Obj\\<rparr> \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and \"\\<And>A B. \\<lbrakk> A \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>; B \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>; A \\<in>\\<^sub>\\<circ> Vset \\<alpha>; B \\<in>\\<^sub>\\<circ> Vset \\<alpha> \\<rbrakk> \\<Longrightarrow>\n      (\\<Union>\\<^sub>\\<circ>a\\<in>\\<^sub>\\<circ>A. \\<Union>\\<^sub>\\<circ>b\\<in>\\<^sub>\\<circ>B. Hom \\<CC> a b) \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"semicategory \\<alpha> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<CC>", "by (intro semicategoryI digraphI, unfold slicing_simps)\n    (simp_all add: assms  nat_omega_simps smc_dg_def)"], ["", "lemma semicategoryD':\n  assumes \"semicategory \\<alpha> \\<CC>\"\n  shows \"\\<Z> \\<alpha>\"\n    and \"vfsequence \\<CC>\"\n    and \"vsv (\\<CC>\\<lparr>Comp\\<rparr>)\"\n    and \"vcard \\<CC> = 5\\<^sub>\\<nat>\"\n    and \"vsv (\\<CC>\\<lparr>Dom\\<rparr>)\"\n    and \"vsv (\\<CC>\\<lparr>Cod\\<rparr>)\"\n    and \"\\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>) = \\<CC>\\<lparr>Arr\\<rparr>\"\n    and \"\\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n    and \"\\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>) = \\<CC>\\<lparr>Arr\\<rparr>\"\n    and \"\\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n    and \"\\<And>gf. gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>) \\<longleftrightarrow>\n      (\\<exists>g f b c a. gf = [g, f]\\<^sub>\\<circ> \\<and> g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b)\"\n    and \"\\<And>b c g a f. \\<lbrakk> g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c; f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<rbrakk> \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\"\n    and \"\\<And>c d h b g a f. \\<lbrakk> h : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d; g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c; f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<rbrakk> \\<Longrightarrow>\n        (h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g) \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f = h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> (g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f)\"\n    and \"\\<CC>\\<lparr>Obj\\<rparr> \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and \"\\<And>A B. \\<lbrakk> A \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>; B \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>; A \\<in>\\<^sub>\\<circ> Vset \\<alpha>; B \\<in>\\<^sub>\\<circ> Vset \\<alpha> \\<rbrakk> \\<Longrightarrow>\n      (\\<Union>\\<^sub>\\<circ>a\\<in>\\<^sub>\\<circ>A. \\<Union>\\<^sub>\\<circ>b\\<in>\\<^sub>\\<circ>B. Hom \\<CC> a b) \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<Z> \\<alpha> &&&\n      vfsequence \\<CC> &&& vsv (\\<CC>\\<lparr>Comp\\<rparr>)) &&&\n     (vcard \\<CC> = 5\\<^sub>\\<nat> &&& vsv (\\<CC>\\<lparr>Dom\\<rparr>)) &&&\n     vsv (\\<CC>\\<lparr>Cod\\<rparr>) &&&\n     \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>) =\n     \\<CC>\\<lparr>Arr\\<rparr>) &&&\n    ((\\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>)\n      \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr> &&&\n      \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>) =\n      \\<CC>\\<lparr>Arr\\<rparr>) &&&\n     \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>)\n     \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr> &&&\n     (\\<And>gf.\n         (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                  (\\<CC>\\<lparr>Comp\\<rparr>)) =\n         (\\<exists>g f b c a.\n             gf = [g, f]\\<^sub>\\<circ> \\<and>\n             g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n             f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b))) &&&\n    ((\\<And>b c g a f.\n         \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n          f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n         \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                           f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c) &&&\n     (\\<And>c d h b g a f.\n         \\<lbrakk>h : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d;\n          g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n          f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n         \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                           g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                           f =\n                           h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                           (g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f))) &&&\n    \\<CC>\\<lparr>Obj\\<rparr> \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha> &&&\n    (\\<And>A B.\n        \\<lbrakk>A \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>;\n         B \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>;\n         A \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n         B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> \\<Union>\\<^sub>\\<circ>\n                           ((\\<lambda>a\\<in>\\<^sub>\\<circ>A.\n                                \\<Union>\\<^sub>\\<circ>\n                                 (VLambda B (Hom \\<CC> a) `\\<^sub>\\<circ>\n                                  B)) `\\<^sub>\\<circ>\n                            A)\n                          \\<in>\\<^sub>\\<circ> Vset \\<alpha>)", "by \n    (\n      simp_all add: \n        semicategoryD(2-8)[OF assms] \n        digraphD[OF semicategoryD(5)[OF assms], unfolded slicing_simps]\n    )"], ["", "lemma semicategoryE':\n  assumes \"semicategory \\<alpha> \\<CC>\"\n  obtains \"\\<Z> \\<alpha>\"\n    and \"vfsequence \\<CC>\"\n    and \"vsv (\\<CC>\\<lparr>Comp\\<rparr>)\"\n    and \"vcard \\<CC> = 5\\<^sub>\\<nat>\"\n    and \"vsv (\\<CC>\\<lparr>Dom\\<rparr>)\"\n    and \"vsv (\\<CC>\\<lparr>Cod\\<rparr>)\"\n    and \"\\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>) = \\<CC>\\<lparr>Arr\\<rparr>\"\n    and \"\\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n    and \"\\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>) = \\<CC>\\<lparr>Arr\\<rparr>\"\n    and \"\\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n    and \"\\<And>gf. gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>) \\<longleftrightarrow>\n      (\\<exists>g f b c a. gf = [g, f]\\<^sub>\\<circ> \\<and> g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b)\"\n    and \"\\<And>b c g a f. \\<lbrakk> g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c; f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<rbrakk> \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\"\n    and \"\\<And>c d h b g a f. \\<lbrakk> h : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d; g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c; f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<rbrakk> \\<Longrightarrow>\n        (h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g) \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f = h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> (g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f)\"\n    and \"\\<CC>\\<lparr>Obj\\<rparr> \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and \"\\<And>A B. \\<lbrakk> A \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>; B \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>; A \\<in>\\<^sub>\\<circ> Vset \\<alpha>; B \\<in>\\<^sub>\\<circ> Vset \\<alpha> \\<rbrakk> \\<Longrightarrow>\n      (\\<Union>\\<^sub>\\<circ>a\\<in>\\<^sub>\\<circ>A. \\<Union>\\<^sub>\\<circ>b\\<in>\\<^sub>\\<circ>B. Hom \\<CC> a b) \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>\\<Z> \\<alpha>; vfsequence \\<CC>;\n      vsv (\\<CC>\\<lparr>Comp\\<rparr>); vcard \\<CC> = 5\\<^sub>\\<nat>;\n      vsv (\\<CC>\\<lparr>Dom\\<rparr>); vsv (\\<CC>\\<lparr>Cod\\<rparr>);\n      \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>) =\n      \\<CC>\\<lparr>Arr\\<rparr>;\n      \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>)\n      \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>;\n      \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>) =\n      \\<CC>\\<lparr>Arr\\<rparr>;\n      \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>)\n      \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>;\n      \\<And>gf.\n         (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                  (\\<CC>\\<lparr>Comp\\<rparr>)) =\n         (\\<exists>g f b c a.\n             gf = [g, f]\\<^sub>\\<circ> \\<and>\n             g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n             f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b);\n      \\<And>b c g a f.\n         \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n          f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n         \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                           f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n      \\<And>c d h b g a f.\n         \\<lbrakk>h : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d;\n          g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n          f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n         \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                           g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                           f =\n                           h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                           (g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f);\n      \\<CC>\\<lparr>Obj\\<rparr> \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>;\n      \\<And>A B.\n         \\<lbrakk>A \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>;\n          B \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>;\n          A \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n          B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n         \\<Longrightarrow> \\<Union>\\<^sub>\\<circ>\n                            ((\\<lambda>a\\<in>\\<^sub>\\<circ>A.\n                                 \\<Union>\\<^sub>\\<circ>\n                                  (VLambda B (Hom \\<CC> a) `\\<^sub>\\<circ>\n                                   B)) `\\<^sub>\\<circ>\n                             A)\n                           \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  semicategory \\<alpha> \\<CC>\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>\\<Z> \\<alpha>; vfsequence \\<CC>;\n      vsv (\\<CC>\\<lparr>Comp\\<rparr>); vcard \\<CC> = 5\\<^sub>\\<nat>;\n      vsv (\\<CC>\\<lparr>Dom\\<rparr>); vsv (\\<CC>\\<lparr>Cod\\<rparr>);\n      \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>) =\n      \\<CC>\\<lparr>Arr\\<rparr>;\n      \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>)\n      \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>;\n      \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>) =\n      \\<CC>\\<lparr>Arr\\<rparr>;\n      \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>)\n      \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>;\n      \\<And>gf.\n         (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                  (\\<CC>\\<lparr>Comp\\<rparr>)) =\n         (\\<exists>g f b c a.\n             gf = [g, f]\\<^sub>\\<circ> \\<and>\n             g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n             f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b);\n      \\<And>b c g a f.\n         \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n          f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n         \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                           f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n      \\<And>c d h b g a f.\n         \\<lbrakk>h : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d;\n          g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n          f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n         \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                           g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                           f =\n                           h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                           (g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f);\n      \\<CC>\\<lparr>Obj\\<rparr> \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>;\n      \\<And>A B.\n         \\<lbrakk>A \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>;\n          B \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>;\n          A \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n          B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n         \\<Longrightarrow> \\<Union>\\<^sub>\\<circ>\n                            ((\\<lambda>a\\<in>\\<^sub>\\<circ>A.\n                                 \\<Union>\\<^sub>\\<circ>\n                                  (VLambda B (Hom \\<CC> a) `\\<^sub>\\<circ>\n                                   B)) `\\<^sub>\\<circ>\n                             A)\n                           \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (simp add: semicategoryD')"], ["", "text\\<open>\nWhile using the sublocale infrastructure in conjunction with the rewrite \nmorphisms is plausible for achieving automation of slicing, this approach\nhas certain limitations. For example, the rewrite morphisms cannot be added to a \ngiven interpretation that was achieved using the\ncommand @{command sublocale}\\footnote{\n\\url{\nhttps://lists.cam.ac.uk/pipermail/cl-isabelle-users/2019-September/msg00074.html\n}\n}.\nThus, instead of using a partial solution based on the command \n@{command sublocale}, the rewriting is performed manually for \nselected theorems. However, it is hoped that better automation will be provided\nin the future.\n\\<close>"], ["", "context semicategory\nbegin"], ["", "interpretation dg: digraph \\<alpha> \\<open>smc_dg \\<CC>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. digraph \\<alpha> (smc_dg \\<CC>)", "by (rule smc_digraph)"], ["", "sublocale Dom: vsv \\<open>\\<CC>\\<lparr>Dom\\<rparr>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (\\<CC>\\<lparr>Dom\\<rparr>)", "by (rule dg.Dom.vsv_axioms[unfolded slicing_simps])"], ["", "sublocale Cod: vsv \\<open>\\<CC>\\<lparr>Cod\\<rparr>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (\\<CC>\\<lparr>Cod\\<rparr>)", "by (rule dg.Cod.vsv_axioms[unfolded slicing_simps])"], ["", "lemmas_with [unfolded slicing_simps]:\n  smc_Dom_vdomain[smc_cs_simps] = dg.dg_Dom_vdomain\n  and smc_Dom_vrange = dg.dg_Dom_vrange\n  and smc_Cod_vdomain[smc_cs_simps] = dg.dg_Cod_vdomain\n  and smc_Cod_vrange = dg.dg_Cod_vrange\n  and smc_Obj_vsubset_Vset = dg.dg_Obj_vsubset_Vset\n  and smc_Hom_vifunion_in_Vset[smc_cs_intros] = dg.dg_Hom_vifunion_in_Vset\n  and smc_Obj_if_Dom_vrange = dg.dg_Obj_if_Dom_vrange\n  and smc_Obj_if_Cod_vrange = dg.dg_Obj_if_Cod_vrange\n  and smc_is_arrD = dg.dg_is_arrD\n  and smc_is_arrE[elim] = dg.dg_is_arrE\n  and smc_in_ArrE[elim] = dg.dg_in_ArrE\n  and smc_Hom_in_Vset[smc_cs_intros] = dg.dg_Hom_in_Vset\n  and smc_Arr_vsubset_Vset = dg.dg_Arr_vsubset_Vset\n  and smc_Dom_vsubset_Vset = dg.dg_Dom_vsubset_Vset\n  and smc_Cod_vsubset_Vset = dg.dg_Cod_vsubset_Vset\n  and smc_Obj_in_Vset = dg.dg_Obj_in_Vset\n  and smc_in_Obj_in_Vset[smc_cs_intros] = dg.dg_in_Obj_in_Vset\n  and smc_Arr_in_Vset = dg.dg_Arr_in_Vset\n  and smc_in_Arr_in_Vset[smc_cs_intros] = dg.dg_in_Arr_in_Vset\n  and smc_Dom_in_Vset = dg.dg_Dom_in_Vset\n  and smc_Cod_in_Vset = dg.dg_Cod_in_Vset\n  and smc_digraph_if_ge_Limit = dg.dg_digraph_if_ge_Limit\n  and smc_Dom_app_in_Obj = dg.dg_Dom_app_in_Obj\n  and smc_Cod_app_in_Obj = dg.dg_Cod_app_in_Obj\n  and smc_Arr_vempty_if_Obj_vempty = dg.dg_Arr_vempty_if_Obj_vempty\n  and smc_Dom_vempty_if_Arr_vempty = dg.dg_Dom_vempty_if_Arr_vempty\n  and smc_Cod_vempty_if_Arr_vempty = dg.dg_Cod_vempty_if_Arr_vempty"], ["", "end"], ["", "lemmas [smc_cs_intros] =\n  semicategory.smc_is_arrD(1-3)\n  semicategory.smc_Hom_in_Vset"], ["", "text\\<open>Elementary properties.\\<close>"], ["", "lemma smc_eqI:\n  assumes \"semicategory \\<alpha> \\<AA>\" \n    and \"semicategory \\<alpha> \\<BB>\"\n    and \"\\<AA>\\<lparr>Obj\\<rparr> = \\<BB>\\<lparr>Obj\\<rparr>\"\n    and \"\\<AA>\\<lparr>Arr\\<rparr> = \\<BB>\\<lparr>Arr\\<rparr>\"\n    and \"\\<AA>\\<lparr>Dom\\<rparr> = \\<BB>\\<lparr>Dom\\<rparr>\"\n    and \"\\<AA>\\<lparr>Cod\\<rparr> = \\<BB>\\<lparr>Cod\\<rparr>\"\n    and \"\\<AA>\\<lparr>Comp\\<rparr> = \\<BB>\\<lparr>Comp\\<rparr>\"\n  shows \"\\<AA> = \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "interpret \\<AA>: semicategory \\<alpha> \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<AA>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "interpret \\<BB>: semicategory \\<alpha> \\<BB>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<BB>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "proof(rule vsv_eqI)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv \\<AA>\n 2. vsv \\<BB>\n 3. \\<D>\\<^sub>\\<circ> \\<AA> = \\<D>\\<^sub>\\<circ> \\<BB>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> \\<AA> \\<Longrightarrow>\n       \\<AA>\\<lparr>a\\<rparr> = \\<BB>\\<lparr>a\\<rparr>", "have dom: \"\\<D>\\<^sub>\\<circ> \\<AA> = 5\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> \\<AA> = 5\\<^sub>\\<nat>", "by (cs_concl cs_simp: smc_cs_simps V_cs_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> \\<AA> = 5\\<^sub>\\<nat>\n\ngoal (4 subgoals):\n 1. vsv \\<AA>\n 2. vsv \\<BB>\n 3. \\<D>\\<^sub>\\<circ> \\<AA> = \\<D>\\<^sub>\\<circ> \\<BB>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> \\<AA> \\<Longrightarrow>\n       \\<AA>\\<lparr>a\\<rparr> = \\<BB>\\<lparr>a\\<rparr>", "show \"\\<D>\\<^sub>\\<circ> \\<AA> = \\<D>\\<^sub>\\<circ> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> \\<AA> = \\<D>\\<^sub>\\<circ> \\<BB>", "by (cs_concl cs_simp: dom smc_cs_simps V_cs_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> \\<AA> = \\<D>\\<^sub>\\<circ> \\<BB>\n\ngoal (3 subgoals):\n 1. vsv \\<AA>\n 2. vsv \\<BB>\n 3. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> \\<AA> \\<Longrightarrow>\n       \\<AA>\\<lparr>a\\<rparr> = \\<BB>\\<lparr>a\\<rparr>", "show \"a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> \\<AA> \\<Longrightarrow> \\<AA>\\<lparr>a\\<rparr> = \\<BB>\\<lparr>a\\<rparr>\" for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> \\<AA> \\<Longrightarrow>\n    \\<AA>\\<lparr>a\\<rparr> = \\<BB>\\<lparr>a\\<rparr>", "by (unfold dom, elim_in_numeral, insert assms) (auto simp: dg_field_simps)"], ["proof (state)\nthis:\n  ?a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> \\<AA> \\<Longrightarrow>\n  \\<AA>\\<lparr>?a\\<rparr> = \\<BB>\\<lparr>?a\\<rparr>\n\ngoal (2 subgoals):\n 1. vsv \\<AA>\n 2. vsv \\<BB>", "qed auto"], ["proof (state)\nthis:\n  \\<AA> = \\<BB>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smc_dg_eqI:\n  assumes \"semicategory \\<alpha> \\<AA>\"\n    and \"semicategory \\<alpha> \\<BB>\"\n    and \"\\<AA>\\<lparr>Comp\\<rparr> = \\<BB>\\<lparr>Comp\\<rparr>\"\n    and \"smc_dg \\<AA> = smc_dg \\<BB>\"\n  shows \"\\<AA> = \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "proof(rule smc_eqI)"], ["proof (state)\ngoal (7 subgoals):\n 1. semicategory ?\\<alpha> \\<AA>\n 2. semicategory ?\\<alpha> \\<BB>\n 3. \\<AA>\\<lparr>Obj\\<rparr> = \\<BB>\\<lparr>Obj\\<rparr>\n 4. \\<AA>\\<lparr>Arr\\<rparr> = \\<BB>\\<lparr>Arr\\<rparr>\n 5. \\<AA>\\<lparr>Dom\\<rparr> = \\<BB>\\<lparr>Dom\\<rparr>\n 6. \\<AA>\\<lparr>Cod\\<rparr> = \\<BB>\\<lparr>Cod\\<rparr>\n 7. \\<AA>\\<lparr>Comp\\<rparr> = \\<BB>\\<lparr>Comp\\<rparr>", "from assms(4)"], ["proof (chain)\npicking this:\n  smc_dg \\<AA> = smc_dg \\<BB>", "have \n    \"smc_dg \\<AA>\\<lparr>Obj\\<rparr> = smc_dg \\<BB>\\<lparr>Obj\\<rparr>\"\n    \"smc_dg \\<AA>\\<lparr>Arr\\<rparr> = smc_dg \\<BB>\\<lparr>Arr\\<rparr>\"\n    \"smc_dg \\<AA>\\<lparr>Dom\\<rparr> = smc_dg \\<BB>\\<lparr>Dom\\<rparr>\"\n    \"smc_dg \\<AA>\\<lparr>Cod\\<rparr> = smc_dg \\<BB>\\<lparr>Cod\\<rparr>\""], ["proof (prove)\nusing this:\n  smc_dg \\<AA> = smc_dg \\<BB>\n\ngoal (1 subgoal):\n 1. (smc_dg \\<AA>\\<lparr>Obj\\<rparr> = smc_dg \\<BB>\\<lparr>Obj\\<rparr> &&&\n     smc_dg \\<AA>\\<lparr>Arr\\<rparr> = smc_dg \\<BB>\\<lparr>Arr\\<rparr>) &&&\n    smc_dg \\<AA>\\<lparr>Dom\\<rparr> = smc_dg \\<BB>\\<lparr>Dom\\<rparr> &&&\n    smc_dg \\<AA>\\<lparr>Cod\\<rparr> = smc_dg \\<BB>\\<lparr>Cod\\<rparr>", "by auto"], ["proof (state)\nthis:\n  smc_dg \\<AA>\\<lparr>Obj\\<rparr> = smc_dg \\<BB>\\<lparr>Obj\\<rparr>\n  smc_dg \\<AA>\\<lparr>Arr\\<rparr> = smc_dg \\<BB>\\<lparr>Arr\\<rparr>\n  smc_dg \\<AA>\\<lparr>Dom\\<rparr> = smc_dg \\<BB>\\<lparr>Dom\\<rparr>\n  smc_dg \\<AA>\\<lparr>Cod\\<rparr> = smc_dg \\<BB>\\<lparr>Cod\\<rparr>\n\ngoal (7 subgoals):\n 1. semicategory ?\\<alpha> \\<AA>\n 2. semicategory ?\\<alpha> \\<BB>\n 3. \\<AA>\\<lparr>Obj\\<rparr> = \\<BB>\\<lparr>Obj\\<rparr>\n 4. \\<AA>\\<lparr>Arr\\<rparr> = \\<BB>\\<lparr>Arr\\<rparr>\n 5. \\<AA>\\<lparr>Dom\\<rparr> = \\<BB>\\<lparr>Dom\\<rparr>\n 6. \\<AA>\\<lparr>Cod\\<rparr> = \\<BB>\\<lparr>Cod\\<rparr>\n 7. \\<AA>\\<lparr>Comp\\<rparr> = \\<BB>\\<lparr>Comp\\<rparr>", "then"], ["proof (chain)\npicking this:\n  smc_dg \\<AA>\\<lparr>Obj\\<rparr> = smc_dg \\<BB>\\<lparr>Obj\\<rparr>\n  smc_dg \\<AA>\\<lparr>Arr\\<rparr> = smc_dg \\<BB>\\<lparr>Arr\\<rparr>\n  smc_dg \\<AA>\\<lparr>Dom\\<rparr> = smc_dg \\<BB>\\<lparr>Dom\\<rparr>\n  smc_dg \\<AA>\\<lparr>Cod\\<rparr> = smc_dg \\<BB>\\<lparr>Cod\\<rparr>", "show\n    \"\\<AA>\\<lparr>Obj\\<rparr> = \\<BB>\\<lparr>Obj\\<rparr>\" \"\\<AA>\\<lparr>Arr\\<rparr> = \\<BB>\\<lparr>Arr\\<rparr>\" \"\\<AA>\\<lparr>Dom\\<rparr> = \\<BB>\\<lparr>Dom\\<rparr>\" \"\\<AA>\\<lparr>Cod\\<rparr> = \\<BB>\\<lparr>Cod\\<rparr>\""], ["proof (prove)\nusing this:\n  smc_dg \\<AA>\\<lparr>Obj\\<rparr> = smc_dg \\<BB>\\<lparr>Obj\\<rparr>\n  smc_dg \\<AA>\\<lparr>Arr\\<rparr> = smc_dg \\<BB>\\<lparr>Arr\\<rparr>\n  smc_dg \\<AA>\\<lparr>Dom\\<rparr> = smc_dg \\<BB>\\<lparr>Dom\\<rparr>\n  smc_dg \\<AA>\\<lparr>Cod\\<rparr> = smc_dg \\<BB>\\<lparr>Cod\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<AA>\\<lparr>Obj\\<rparr> = \\<BB>\\<lparr>Obj\\<rparr> &&&\n     \\<AA>\\<lparr>Arr\\<rparr> = \\<BB>\\<lparr>Arr\\<rparr>) &&&\n    \\<AA>\\<lparr>Dom\\<rparr> = \\<BB>\\<lparr>Dom\\<rparr> &&&\n    \\<AA>\\<lparr>Cod\\<rparr> = \\<BB>\\<lparr>Cod\\<rparr>", "unfolding slicing_simps"], ["proof (prove)\nusing this:\n  \\<AA>\\<lparr>Obj\\<rparr> = \\<BB>\\<lparr>Obj\\<rparr>\n  \\<AA>\\<lparr>Arr\\<rparr> = \\<BB>\\<lparr>Arr\\<rparr>\n  \\<AA>\\<lparr>Dom\\<rparr> = \\<BB>\\<lparr>Dom\\<rparr>\n  \\<AA>\\<lparr>Cod\\<rparr> = \\<BB>\\<lparr>Cod\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<AA>\\<lparr>Obj\\<rparr> = \\<BB>\\<lparr>Obj\\<rparr> &&&\n     \\<AA>\\<lparr>Arr\\<rparr> = \\<BB>\\<lparr>Arr\\<rparr>) &&&\n    \\<AA>\\<lparr>Dom\\<rparr> = \\<BB>\\<lparr>Dom\\<rparr> &&&\n    \\<AA>\\<lparr>Cod\\<rparr> = \\<BB>\\<lparr>Cod\\<rparr>", "by simp_all"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Obj\\<rparr> = \\<BB>\\<lparr>Obj\\<rparr>\n  \\<AA>\\<lparr>Arr\\<rparr> = \\<BB>\\<lparr>Arr\\<rparr>\n  \\<AA>\\<lparr>Dom\\<rparr> = \\<BB>\\<lparr>Dom\\<rparr>\n  \\<AA>\\<lparr>Cod\\<rparr> = \\<BB>\\<lparr>Cod\\<rparr>\n\ngoal (3 subgoals):\n 1. semicategory ?\\<alpha> \\<AA>\n 2. semicategory ?\\<alpha> \\<BB>\n 3. \\<AA>\\<lparr>Comp\\<rparr> = \\<BB>\\<lparr>Comp\\<rparr>", "qed (auto intro: assms)"], ["", "lemma (in semicategory) smc_def: \"\\<CC> = [\\<CC>\\<lparr>Obj\\<rparr>, \\<CC>\\<lparr>Arr\\<rparr>, \\<CC>\\<lparr>Dom\\<rparr>, \\<CC>\\<lparr>Cod\\<rparr>, \\<CC>\\<lparr>Comp\\<rparr>]\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<CC> =\n    [\\<CC>\\<lparr>Obj\\<rparr>, \\<CC>\\<lparr>Arr\\<rparr>,\n     \\<CC>\\<lparr>Dom\\<rparr>, \\<CC>\\<lparr>Cod\\<rparr>,\n     \\<CC>\\<lparr>Comp\\<rparr>]\\<^sub>\\<circ>", "proof(rule vsv_eqI)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv \\<CC>\n 2. vsv [\\<CC>\\<lparr>Obj\\<rparr>, \\<CC>\\<lparr>Arr\\<rparr>,\n         \\<CC>\\<lparr>Dom\\<rparr>, \\<CC>\\<lparr>Cod\\<rparr>,\n         \\<CC>\\<lparr>Comp\\<rparr>]\\<^sub>\\<circ>\n 3. \\<D>\\<^sub>\\<circ> \\<CC> =\n    \\<D>\\<^sub>\\<circ>\n     [\\<CC>\\<lparr>Obj\\<rparr>, \\<CC>\\<lparr>Arr\\<rparr>,\n      \\<CC>\\<lparr>Dom\\<rparr>, \\<CC>\\<lparr>Cod\\<rparr>,\n      \\<CC>\\<lparr>Comp\\<rparr>]\\<^sub>\\<circ>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> \\<CC> \\<Longrightarrow>\n       \\<CC>\\<lparr>a\\<rparr> =\n       [\\<CC>\\<lparr>Obj\\<rparr>, \\<CC>\\<lparr>Arr\\<rparr>,\n        \\<CC>\\<lparr>Dom\\<rparr>, \\<CC>\\<lparr>Cod\\<rparr>,\n        \\<CC>\\<lparr>Comp\\<rparr>]\\<^sub>\\<circ>\\<lparr>a\\<rparr>", "have dom_lhs: \"\\<D>\\<^sub>\\<circ> \\<CC> = 5\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> \\<CC> = 5\\<^sub>\\<nat>", "by (cs_concl cs_simp: smc_cs_simps V_cs_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> \\<CC> = 5\\<^sub>\\<nat>\n\ngoal (4 subgoals):\n 1. vsv \\<CC>\n 2. vsv [\\<CC>\\<lparr>Obj\\<rparr>, \\<CC>\\<lparr>Arr\\<rparr>,\n         \\<CC>\\<lparr>Dom\\<rparr>, \\<CC>\\<lparr>Cod\\<rparr>,\n         \\<CC>\\<lparr>Comp\\<rparr>]\\<^sub>\\<circ>\n 3. \\<D>\\<^sub>\\<circ> \\<CC> =\n    \\<D>\\<^sub>\\<circ>\n     [\\<CC>\\<lparr>Obj\\<rparr>, \\<CC>\\<lparr>Arr\\<rparr>,\n      \\<CC>\\<lparr>Dom\\<rparr>, \\<CC>\\<lparr>Cod\\<rparr>,\n      \\<CC>\\<lparr>Comp\\<rparr>]\\<^sub>\\<circ>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> \\<CC> \\<Longrightarrow>\n       \\<CC>\\<lparr>a\\<rparr> =\n       [\\<CC>\\<lparr>Obj\\<rparr>, \\<CC>\\<lparr>Arr\\<rparr>,\n        \\<CC>\\<lparr>Dom\\<rparr>, \\<CC>\\<lparr>Cod\\<rparr>,\n        \\<CC>\\<lparr>Comp\\<rparr>]\\<^sub>\\<circ>\\<lparr>a\\<rparr>", "have dom_rhs: \"\\<D>\\<^sub>\\<circ> [\\<CC>\\<lparr>Obj\\<rparr>, \\<CC>\\<lparr>Arr\\<rparr>, \\<CC>\\<lparr>Dom\\<rparr>, \\<CC>\\<lparr>Cod\\<rparr>, \\<CC>\\<lparr>Comp\\<rparr>]\\<^sub>\\<circ> = 5\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     [\\<CC>\\<lparr>Obj\\<rparr>, \\<CC>\\<lparr>Arr\\<rparr>,\n      \\<CC>\\<lparr>Dom\\<rparr>, \\<CC>\\<lparr>Cod\\<rparr>,\n      \\<CC>\\<lparr>Comp\\<rparr>]\\<^sub>\\<circ> =\n    5\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   [\\<CC>\\<lparr>Obj\\<rparr>, \\<CC>\\<lparr>Arr\\<rparr>,\n    \\<CC>\\<lparr>Dom\\<rparr>, \\<CC>\\<lparr>Cod\\<rparr>,\n    \\<CC>\\<lparr>Comp\\<rparr>]\\<^sub>\\<circ> =\n  5\\<^sub>\\<nat>\n\ngoal (4 subgoals):\n 1. vsv \\<CC>\n 2. vsv [\\<CC>\\<lparr>Obj\\<rparr>, \\<CC>\\<lparr>Arr\\<rparr>,\n         \\<CC>\\<lparr>Dom\\<rparr>, \\<CC>\\<lparr>Cod\\<rparr>,\n         \\<CC>\\<lparr>Comp\\<rparr>]\\<^sub>\\<circ>\n 3. \\<D>\\<^sub>\\<circ> \\<CC> =\n    \\<D>\\<^sub>\\<circ>\n     [\\<CC>\\<lparr>Obj\\<rparr>, \\<CC>\\<lparr>Arr\\<rparr>,\n      \\<CC>\\<lparr>Dom\\<rparr>, \\<CC>\\<lparr>Cod\\<rparr>,\n      \\<CC>\\<lparr>Comp\\<rparr>]\\<^sub>\\<circ>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> \\<CC> \\<Longrightarrow>\n       \\<CC>\\<lparr>a\\<rparr> =\n       [\\<CC>\\<lparr>Obj\\<rparr>, \\<CC>\\<lparr>Arr\\<rparr>,\n        \\<CC>\\<lparr>Dom\\<rparr>, \\<CC>\\<lparr>Cod\\<rparr>,\n        \\<CC>\\<lparr>Comp\\<rparr>]\\<^sub>\\<circ>\\<lparr>a\\<rparr>", "then"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ>\n   [\\<CC>\\<lparr>Obj\\<rparr>, \\<CC>\\<lparr>Arr\\<rparr>,\n    \\<CC>\\<lparr>Dom\\<rparr>, \\<CC>\\<lparr>Cod\\<rparr>,\n    \\<CC>\\<lparr>Comp\\<rparr>]\\<^sub>\\<circ> =\n  5\\<^sub>\\<nat>", "show \"\\<D>\\<^sub>\\<circ> \\<CC> = \\<D>\\<^sub>\\<circ> [\\<CC>\\<lparr>Obj\\<rparr>, \\<CC>\\<lparr>Arr\\<rparr>, \\<CC>\\<lparr>Dom\\<rparr>, \\<CC>\\<lparr>Cod\\<rparr>, \\<CC>\\<lparr>Comp\\<rparr>]\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ>\n   [\\<CC>\\<lparr>Obj\\<rparr>, \\<CC>\\<lparr>Arr\\<rparr>,\n    \\<CC>\\<lparr>Dom\\<rparr>, \\<CC>\\<lparr>Cod\\<rparr>,\n    \\<CC>\\<lparr>Comp\\<rparr>]\\<^sub>\\<circ> =\n  5\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> \\<CC> =\n    \\<D>\\<^sub>\\<circ>\n     [\\<CC>\\<lparr>Obj\\<rparr>, \\<CC>\\<lparr>Arr\\<rparr>,\n      \\<CC>\\<lparr>Dom\\<rparr>, \\<CC>\\<lparr>Cod\\<rparr>,\n      \\<CC>\\<lparr>Comp\\<rparr>]\\<^sub>\\<circ>", "unfolding dom_lhs dom_rhs"], ["proof (prove)\nusing this:\n  5\\<^sub>\\<nat> = 5\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. 5\\<^sub>\\<nat> = 5\\<^sub>\\<nat>", "by simp"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> \\<CC> =\n  \\<D>\\<^sub>\\<circ>\n   [\\<CC>\\<lparr>Obj\\<rparr>, \\<CC>\\<lparr>Arr\\<rparr>,\n    \\<CC>\\<lparr>Dom\\<rparr>, \\<CC>\\<lparr>Cod\\<rparr>,\n    \\<CC>\\<lparr>Comp\\<rparr>]\\<^sub>\\<circ>\n\ngoal (3 subgoals):\n 1. vsv \\<CC>\n 2. vsv [\\<CC>\\<lparr>Obj\\<rparr>, \\<CC>\\<lparr>Arr\\<rparr>,\n         \\<CC>\\<lparr>Dom\\<rparr>, \\<CC>\\<lparr>Cod\\<rparr>,\n         \\<CC>\\<lparr>Comp\\<rparr>]\\<^sub>\\<circ>\n 3. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> \\<CC> \\<Longrightarrow>\n       \\<CC>\\<lparr>a\\<rparr> =\n       [\\<CC>\\<lparr>Obj\\<rparr>, \\<CC>\\<lparr>Arr\\<rparr>,\n        \\<CC>\\<lparr>Dom\\<rparr>, \\<CC>\\<lparr>Cod\\<rparr>,\n        \\<CC>\\<lparr>Comp\\<rparr>]\\<^sub>\\<circ>\\<lparr>a\\<rparr>", "show \"a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> \\<CC> \\<Longrightarrow> \\<CC>\\<lparr>a\\<rparr> = [\\<CC>\\<lparr>Obj\\<rparr>, \\<CC>\\<lparr>Arr\\<rparr>, \\<CC>\\<lparr>Dom\\<rparr>, \\<CC>\\<lparr>Cod\\<rparr>, \\<CC>\\<lparr>Comp\\<rparr>]\\<^sub>\\<circ>\\<lparr>a\\<rparr>\" \n    for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> \\<CC> \\<Longrightarrow>\n    \\<CC>\\<lparr>a\\<rparr> =\n    [\\<CC>\\<lparr>Obj\\<rparr>, \\<CC>\\<lparr>Arr\\<rparr>,\n     \\<CC>\\<lparr>Dom\\<rparr>, \\<CC>\\<lparr>Cod\\<rparr>,\n     \\<CC>\\<lparr>Comp\\<rparr>]\\<^sub>\\<circ>\\<lparr>a\\<rparr>", "unfolding dom_lhs"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> 5\\<^sub>\\<nat> \\<Longrightarrow>\n    \\<CC>\\<lparr>a\\<rparr> =\n    [\\<CC>\\<lparr>Obj\\<rparr>, \\<CC>\\<lparr>Arr\\<rparr>,\n     \\<CC>\\<lparr>Dom\\<rparr>, \\<CC>\\<lparr>Cod\\<rparr>,\n     \\<CC>\\<lparr>Comp\\<rparr>]\\<^sub>\\<circ>\\<lparr>a\\<rparr>", "by elim_in_numeral (simp_all add: dg_field_simps nat_omega_simps)"], ["proof (state)\nthis:\n  ?a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> \\<CC> \\<Longrightarrow>\n  \\<CC>\\<lparr>?a\\<rparr> =\n  [\\<CC>\\<lparr>Obj\\<rparr>, \\<CC>\\<lparr>Arr\\<rparr>,\n   \\<CC>\\<lparr>Dom\\<rparr>, \\<CC>\\<lparr>Cod\\<rparr>,\n   \\<CC>\\<lparr>Comp\\<rparr>]\\<^sub>\\<circ>\\<lparr>?a\\<rparr>\n\ngoal (2 subgoals):\n 1. vsv \\<CC>\n 2. vsv [\\<CC>\\<lparr>Obj\\<rparr>, \\<CC>\\<lparr>Arr\\<rparr>,\n         \\<CC>\\<lparr>Dom\\<rparr>, \\<CC>\\<lparr>Cod\\<rparr>,\n         \\<CC>\\<lparr>Comp\\<rparr>]\\<^sub>\\<circ>", "qed auto"], ["", "lemma (in semicategory) smc_Comp_vdomainI[smc_cs_intros]: \n  assumes \"g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\" and \"f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\" and \"gf = [g, f]\\<^sub>\\<circ>\"\n  shows \"gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)", "using assms"], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  gf = [g, f]\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)", "by (intro smc_Comp_vdomain[THEN iffD2]) auto"], ["", "lemmas [smc_cs_intros] = semicategory.smc_Comp_vdomainI"], ["", "lemma (in semicategory) smc_Comp_vdomainE[elim!]: \n  assumes \"gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\" \n  obtains g f a b c where \"gf = [g, f]\\<^sub>\\<circ>\" and \"g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\" and \"f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g f b c a.\n        \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>;\n         g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n         f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>g f b c a.\n        \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>;\n         g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n         f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from smc_Comp_vdomain[THEN iffD1, OF assms(1)]"], ["proof (chain)\npicking this:\n  \\<exists>g f b c a.\n     gf = [g, f]\\<^sub>\\<circ> \\<and>\n     g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n     f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "obtain g f b c a\n    where \"gf = [g, f]\\<^sub>\\<circ>\" and \"g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\" and \"f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\nusing this:\n  \\<exists>g f b c a.\n     gf = [g, f]\\<^sub>\\<circ> \\<and>\n     g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n     f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. (\\<And>g f b c a.\n        \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>;\n         g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n         f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  gf = [g, f]\\<^sub>\\<circ>\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. (\\<And>g f b c a.\n        \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>;\n         g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n         f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with that"], ["proof (chain)\npicking this:\n  \\<lbrakk>gf = [?g, ?f]\\<^sub>\\<circ>;\n   ?g : ?b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> ?c;\n   ?f : ?a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> ?b\\<rbrakk>\n  \\<Longrightarrow> thesis\n  gf = [g, f]\\<^sub>\\<circ>\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>gf = [?g, ?f]\\<^sub>\\<circ>;\n   ?g : ?b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> ?c;\n   ?f : ?a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> ?b\\<rbrakk>\n  \\<Longrightarrow> thesis\n  gf = [g, f]\\<^sub>\\<circ>\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. thesis", "by simp"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in semicategory) smc_Comp_vdomain_is_composable_arrs: \n  \"\\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>) = composable_arrs \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>) = composable_arrs \\<CC>", "by (intro vsubset_antisym vsubsetI) (auto intro!: smc_cs_intros)+"], ["", "lemma (in semicategory) smc_Comp_vrange: \"\\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "proof(rule Comp.vsv_vrange_vsubset)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (\\<CC>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       \\<CC>\\<lparr>Comp\\<rparr>\\<lparr>x\\<rparr>\n       \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "fix gf"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (\\<CC>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       \\<CC>\\<lparr>Comp\\<rparr>\\<lparr>x\\<rparr>\n       \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "assume \"gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\""], ["proof (state)\nthis:\n  gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (\\<CC>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       \\<CC>\\<lparr>Comp\\<rparr>\\<lparr>x\\<rparr>\n       \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "from smc_Comp_vdomain[THEN iffD1, OF this]"], ["proof (chain)\npicking this:\n  \\<exists>g f b c a.\n     gf = [g, f]\\<^sub>\\<circ> \\<and>\n     g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n     f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "obtain g f b c a\n    where gf_def: \"gf = [g, f]\\<^sub>\\<circ>\" \n      and g: \"g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\" \n      and f: \"f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\nusing this:\n  \\<exists>g f b c a.\n     gf = [g, f]\\<^sub>\\<circ> \\<and>\n     g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n     f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. (\\<And>g f b c a.\n        \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>;\n         g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n         f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  gf = [g, f]\\<^sub>\\<circ>\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (\\<CC>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       \\<CC>\\<lparr>Comp\\<rparr>\\<lparr>x\\<rparr>\n       \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "from semicategory_axioms g f"], ["proof (chain)\npicking this:\n  semicategory \\<alpha> \\<CC>\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "show \"\\<CC>\\<lparr>Comp\\<rparr>\\<lparr>gf\\<rparr> \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  semicategory \\<alpha> \\<CC>\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>Comp\\<rparr>\\<lparr>gf\\<rparr>\n    \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "by (cs_concl cs_simp: gf_def smc_cs_simps cs_intro: smc_cs_intros)"], ["proof (state)\nthis:\n  \\<CC>\\<lparr>Comp\\<rparr>\\<lparr>gf\\<rparr>\n  \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "sublocale semicategory \\<subseteq> Comp: pbinop \\<open>\\<CC>\\<lparr>Arr\\<rparr>\\<close> \\<open>\\<CC>\\<lparr>Comp\\<rparr>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. pbinop (\\<CC>\\<lparr>Arr\\<rparr>) (\\<CC>\\<lparr>Comp\\<rparr>)", "proof unfold_locales"], ["proof (state)\ngoal (3 subgoals):\n 1. 2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>\n 2. \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times>\n                              2\\<^sub>\\<nat>\n 3. \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "show \"\\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times>\n                              2\\<^sub>\\<nat>", "proof(intro vsubsetI; unfold smc_Comp_vdomain)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<exists>g f b c a.\n          x = [g, f]\\<^sub>\\<circ> \\<and>\n          g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n          f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times>\n                             2\\<^sub>\\<nat>", "fix gf"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<exists>g f b c a.\n          x = [g, f]\\<^sub>\\<circ> \\<and>\n          g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n          f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times>\n                             2\\<^sub>\\<nat>", "assume \"\\<exists>g f b c a. gf = [g, f]\\<^sub>\\<circ> \\<and> g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (state)\nthis:\n  \\<exists>g f b c a.\n     gf = [g, f]\\<^sub>\\<circ> \\<and>\n     g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n     f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<exists>g f b c a.\n          x = [g, f]\\<^sub>\\<circ> \\<and>\n          g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n          f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times>\n                             2\\<^sub>\\<nat>", "then"], ["proof (chain)\npicking this:\n  \\<exists>g f b c a.\n     gf = [g, f]\\<^sub>\\<circ> \\<and>\n     g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n     f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "obtain a b c g f \n      where x_def: \"gf = [g, f]\\<^sub>\\<circ>\" and \"g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\" and \"f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\nusing this:\n  \\<exists>g f b c a.\n     gf = [g, f]\\<^sub>\\<circ> \\<and>\n     g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n     f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. (\\<And>g f b c a.\n        \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>;\n         g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n         f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  gf = [g, f]\\<^sub>\\<circ>\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<exists>g f b c a.\n          x = [g, f]\\<^sub>\\<circ> \\<and>\n          g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n          f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times>\n                             2\\<^sub>\\<nat>", "then"], ["proof (chain)\npicking this:\n  gf = [g, f]\\<^sub>\\<circ>\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "have \"g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\" \"f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  gf = [g, f]\\<^sub>\\<circ>\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> &&&\n    f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "by auto"], ["proof (state)\nthis:\n  g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n  f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<exists>g f b c a.\n          x = [g, f]\\<^sub>\\<circ> \\<and>\n          g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n          f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times>\n                             2\\<^sub>\\<nat>", "then"], ["proof (chain)\npicking this:\n  g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n  f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "show \"gf \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\""], ["proof (prove)\nusing this:\n  g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n  f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. gf \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times>\n                           2\\<^sub>\\<nat>", "unfolding x_def"], ["proof (prove)\nusing this:\n  g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n  f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times>\n                        2\\<^sub>\\<nat>", "by (auto simp: nat_omega_simps)"], ["proof (state)\nthis:\n  gf \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times>\n                         2\\<^sub>\\<nat>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times>\n                            2\\<^sub>\\<nat>\n\ngoal (2 subgoals):\n 1. 2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>\n 2. \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "show \"\\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "by (rule smc_Comp_vrange)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. 2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>", "qed auto"], ["", "text\\<open>Size.\\<close>"], ["", "lemma (in semicategory) smc_Comp_vsubset_Vset: \"\\<CC>\\<lparr>Comp\\<rparr> \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>Comp\\<rparr> \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>", "proof(intro vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Comp\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "fix gfh"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Comp\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "assume \"gfh \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Comp\\<rparr>\""], ["proof (state)\nthis:\n  gfh \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Comp\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Comp\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "then"], ["proof (chain)\npicking this:\n  gfh \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Comp\\<rparr>", "obtain gf h \n    where gfh_def: \"gfh = \\<langle>gf, h\\<rangle>\" \n      and gf: \"gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\" \n      and h: \"h \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\""], ["proof (prove)\nusing this:\n  gfh \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Comp\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>gf h.\n        \\<lbrakk>gfh = \\<langle>gf, h\\<rangle>;\n         gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                 (\\<CC>\\<lparr>Comp\\<rparr>);\n         h \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                                (\\<CC>\\<lparr>Comp\\<rparr>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (blast elim: Comp.vbrelation_vinE)"], ["proof (state)\nthis:\n  gfh = \\<langle>gf, h\\<rangle>\n  gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\n  h \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Comp\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "from gf"], ["proof (chain)\npicking this:\n  gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)", "obtain g f a b c\n    where gf_def: \"gf = [g, f]\\<^sub>\\<circ>\" and g: \"g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\" and f: \"f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\nusing this:\n  gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. (\\<And>g f b c a.\n        \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>;\n         g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n         f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  gf = [g, f]\\<^sub>\\<circ>\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Comp\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "from h smc_Comp_vrange"], ["proof (chain)\npicking this:\n  h \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\n  \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "have \"h \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  h \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\n  \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. h \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "by auto"], ["proof (state)\nthis:\n  h \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Comp\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "with g f"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  h \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "show \"gfh \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  h \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. gfh \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "unfolding gfh_def gf_def"], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  h \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<langle>[g, f]\\<^sub>\\<circ>, h\\<rangle>\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (cs_concl cs_intro: smc_cs_intros V_cs_intros)"], ["proof (state)\nthis:\n  gfh \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in semicategory) smc_semicategory_in_Vset_4: \"\\<CC> \\<in>\\<^sub>\\<circ> Vset (\\<alpha> + 4\\<^sub>\\<nat>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<CC> \\<in>\\<^sub>\\<circ> Vset (\\<alpha> + 4\\<^sub>\\<nat>)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<CC> \\<in>\\<^sub>\\<circ> Vset (\\<alpha> + 4\\<^sub>\\<nat>)", "note [folded VPow_iff, folded Vset_succ[OF Ord_\\<alpha>], smc_cs_intros] =\n    smc_Obj_vsubset_Vset\n    smc_Arr_vsubset_Vset\n    smc_Dom_vsubset_Vset\n    smc_Cod_vsubset_Vset\n    smc_Comp_vsubset_Vset"], ["proof (state)\nthis:\n  \\<CC>\\<lparr>Obj\\<rparr>\n  \\<in>\\<^sub>\\<circ> Vset (ZFC_in_HOL.succ \\<alpha>)\n  \\<CC>\\<lparr>Arr\\<rparr>\n  \\<in>\\<^sub>\\<circ> Vset (ZFC_in_HOL.succ \\<alpha>)\n  \\<CC>\\<lparr>Dom\\<rparr>\n  \\<in>\\<^sub>\\<circ> Vset (ZFC_in_HOL.succ \\<alpha>)\n  \\<CC>\\<lparr>Cod\\<rparr>\n  \\<in>\\<^sub>\\<circ> Vset (ZFC_in_HOL.succ \\<alpha>)\n  \\<CC>\\<lparr>Comp\\<rparr>\n  \\<in>\\<^sub>\\<circ> Vset (ZFC_in_HOL.succ \\<alpha>)\n\ngoal (1 subgoal):\n 1. \\<CC> \\<in>\\<^sub>\\<circ> Vset (\\<alpha> + 4\\<^sub>\\<nat>)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<CC> \\<in>\\<^sub>\\<circ> Vset (\\<alpha> + 4\\<^sub>\\<nat>)", "by (subst smc_def, succ_of_numeral)\n      (\n        cs_concl \n          cs_simp: plus_V_succ_right V_cs_simps \n          cs_intro: smc_cs_intros V_cs_intros\n      )"], ["proof (state)\nthis:\n  \\<CC> \\<in>\\<^sub>\\<circ> Vset (\\<alpha> + 4\\<^sub>\\<nat>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in semicategory) smc_Comp_in_Vset: \n  assumes \"\\<Z> \\<beta>\" and \"\\<alpha> \\<in>\\<^sub>\\<circ> \\<beta>\"\n  shows \"\\<CC>\\<lparr>Comp\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<beta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>Comp\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<beta>", "using smc_Comp_vsubset_Vset"], ["proof (prove)\nusing this:\n  \\<CC>\\<lparr>Comp\\<rparr> \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>Comp\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<beta>", "by (meson Vset_in_mono assms(2) vsubset_in_VsetI)"], ["", "lemma (in semicategory) smc_in_Vset: \n  assumes \"\\<Z> \\<beta>\" and \"\\<alpha> \\<in>\\<^sub>\\<circ> \\<beta>\"\n  shows \"\\<CC> \\<in>\\<^sub>\\<circ> Vset \\<beta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<CC> \\<in>\\<^sub>\\<circ> Vset \\<beta>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<CC> \\<in>\\<^sub>\\<circ> Vset \\<beta>", "interpret \\<beta>: \\<Z> \\<beta>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Z> \\<beta>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<CC> \\<in>\\<^sub>\\<circ> Vset \\<beta>", "note [smc_cs_intros] = \n    smc_Obj_in_Vset \n    smc_Arr_in_Vset\n    smc_Dom_in_Vset\n    smc_Cod_in_Vset\n    smc_Comp_in_Vset"], ["proof (state)\nthis:\n  \\<lbrakk>\\<Z> ?\\<beta>; \\<alpha> \\<in>\\<^sub>\\<circ> ?\\<beta>\\<rbrakk>\n  \\<Longrightarrow> \\<CC>\\<lparr>Obj\\<rparr>\n                    \\<in>\\<^sub>\\<circ> Vset ?\\<beta>\n  \\<lbrakk>\\<Z> ?\\<beta>; \\<alpha> \\<in>\\<^sub>\\<circ> ?\\<beta>\\<rbrakk>\n  \\<Longrightarrow> \\<CC>\\<lparr>Arr\\<rparr>\n                    \\<in>\\<^sub>\\<circ> Vset ?\\<beta>\n  \\<lbrakk>\\<Z> ?\\<beta>; \\<alpha> \\<in>\\<^sub>\\<circ> ?\\<beta>\\<rbrakk>\n  \\<Longrightarrow> \\<CC>\\<lparr>Dom\\<rparr>\n                    \\<in>\\<^sub>\\<circ> Vset ?\\<beta>\n  \\<lbrakk>\\<Z> ?\\<beta>; \\<alpha> \\<in>\\<^sub>\\<circ> ?\\<beta>\\<rbrakk>\n  \\<Longrightarrow> \\<CC>\\<lparr>Cod\\<rparr>\n                    \\<in>\\<^sub>\\<circ> Vset ?\\<beta>\n  \\<lbrakk>\\<Z> ?\\<beta>; \\<alpha> \\<in>\\<^sub>\\<circ> ?\\<beta>\\<rbrakk>\n  \\<Longrightarrow> \\<CC>\\<lparr>Comp\\<rparr>\n                    \\<in>\\<^sub>\\<circ> Vset ?\\<beta>\n\ngoal (1 subgoal):\n 1. \\<CC> \\<in>\\<^sub>\\<circ> Vset \\<beta>", "from assms(2)"], ["proof (chain)\npicking this:\n  \\<alpha> \\<in>\\<^sub>\\<circ> \\<beta>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<alpha> \\<in>\\<^sub>\\<circ> \\<beta>\n\ngoal (1 subgoal):\n 1. \\<CC> \\<in>\\<^sub>\\<circ> Vset \\<beta>", "by (subst smc_def) (cs_concl cs_intro: smc_cs_intros V_cs_intros)"], ["proof (state)\nthis:\n  \\<CC> \\<in>\\<^sub>\\<circ> Vset \\<beta>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in semicategory) smc_semicategory_if_ge_Limit:\n  assumes \"\\<Z> \\<beta>\" and \"\\<alpha> \\<in>\\<^sub>\\<circ> \\<beta>\"\n  shows \"semicategory \\<beta> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<beta> \\<CC>", "by (rule semicategoryI)\n    (\n      auto \n        intro: smc_cs_intros \n        simp: smc_cs_simps assms vfsequence_axioms smc_digraph_if_ge_Limit \n    )"], ["", "lemma small_semicategory[simp]: \"small {\\<CC>. semicategory \\<alpha> \\<CC>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. small {\\<CC>. semicategory \\<alpha> \\<CC>}", "proof(cases \\<open>\\<Z> \\<alpha>\\<close>)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Z> \\<alpha> \\<Longrightarrow>\n    small {\\<CC>. semicategory \\<alpha> \\<CC>}\n 2. \\<not> \\<Z> \\<alpha> \\<Longrightarrow>\n    small {\\<CC>. semicategory \\<alpha> \\<CC>}", "case True"], ["proof (state)\nthis:\n  \\<Z> \\<alpha>\n\ngoal (2 subgoals):\n 1. \\<Z> \\<alpha> \\<Longrightarrow>\n    small {\\<CC>. semicategory \\<alpha> \\<CC>}\n 2. \\<not> \\<Z> \\<alpha> \\<Longrightarrow>\n    small {\\<CC>. semicategory \\<alpha> \\<CC>}", "from semicategory.smc_in_Vset[of \\<alpha>]"], ["proof (chain)\npicking this:\n  \\<lbrakk>semicategory \\<alpha> ?\\<CC>; \\<Z> ?\\<beta>;\n   \\<alpha> \\<in>\\<^sub>\\<circ> ?\\<beta>\\<rbrakk>\n  \\<Longrightarrow> ?\\<CC> \\<in>\\<^sub>\\<circ> Vset ?\\<beta>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>semicategory \\<alpha> ?\\<CC>; \\<Z> ?\\<beta>;\n   \\<alpha> \\<in>\\<^sub>\\<circ> ?\\<beta>\\<rbrakk>\n  \\<Longrightarrow> ?\\<CC> \\<in>\\<^sub>\\<circ> Vset ?\\<beta>\n\ngoal (1 subgoal):\n 1. small {\\<CC>. semicategory \\<alpha> \\<CC>}", "by (intro down[of _ \\<open>Vset (\\<alpha> + \\<omega>)\\<close>]) \n      (auto simp: True \\<Z>.\\<Z>_Limit_\\<alpha>\\<omega> \\<Z>.\\<Z>_\\<omega>_\\<alpha>\\<omega> \\<Z>.intro \\<Z>.\\<Z>_\\<alpha>_\\<alpha>\\<omega>)"], ["proof (state)\nthis:\n  small {\\<CC>. semicategory \\<alpha> \\<CC>}\n\ngoal (1 subgoal):\n 1. \\<not> \\<Z> \\<alpha> \\<Longrightarrow>\n    small {\\<CC>. semicategory \\<alpha> \\<CC>}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<Z> \\<alpha> \\<Longrightarrow>\n    small {\\<CC>. semicategory \\<alpha> \\<CC>}", "case False"], ["proof (state)\nthis:\n  \\<not> \\<Z> \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<not> \\<Z> \\<alpha> \\<Longrightarrow>\n    small {\\<CC>. semicategory \\<alpha> \\<CC>}", "then"], ["proof (chain)\npicking this:\n  \\<not> \\<Z> \\<alpha>", "have \"{\\<CC>. semicategory \\<alpha> \\<CC>} = {}\""], ["proof (prove)\nusing this:\n  \\<not> \\<Z> \\<alpha>\n\ngoal (1 subgoal):\n 1. {\\<CC>. semicategory \\<alpha> \\<CC>} = {}", "by auto"], ["proof (state)\nthis:\n  {\\<CC>. semicategory \\<alpha> \\<CC>} = {}\n\ngoal (1 subgoal):\n 1. \\<not> \\<Z> \\<alpha> \\<Longrightarrow>\n    small {\\<CC>. semicategory \\<alpha> \\<CC>}", "then"], ["proof (chain)\npicking this:\n  {\\<CC>. semicategory \\<alpha> \\<CC>} = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  {\\<CC>. semicategory \\<alpha> \\<CC>} = {}\n\ngoal (1 subgoal):\n 1. small {\\<CC>. semicategory \\<alpha> \\<CC>}", "by simp"], ["proof (state)\nthis:\n  small {\\<CC>. semicategory \\<alpha> \\<CC>}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in \\<Z>) semicategories_in_Vset: \n  assumes \"\\<Z> \\<beta>\" and \"\\<alpha> \\<in>\\<^sub>\\<circ> \\<beta>\"\n  shows \"set {\\<CC>. semicategory \\<alpha> \\<CC>} \\<in>\\<^sub>\\<circ> Vset \\<beta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set {\\<CC>. semicategory \\<alpha> \\<CC>}\n    \\<in>\\<^sub>\\<circ> Vset \\<beta>", "proof(rule vsubset_in_VsetI)"], ["proof (state)\ngoal (2 subgoals):\n 1. ZFC_in_HOL.set {\\<CC>. semicategory \\<alpha> \\<CC>}\n    \\<subseteq>\\<^sub>\\<circ> ?A\n 2. ?A \\<in>\\<^sub>\\<circ> Vset \\<beta>", "interpret \\<beta>: \\<Z> \\<beta>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Z> \\<beta>", "by (rule assms(1))"], ["proof (state)\ngoal (2 subgoals):\n 1. ZFC_in_HOL.set {\\<CC>. semicategory \\<alpha> \\<CC>}\n    \\<subseteq>\\<^sub>\\<circ> ?A\n 2. ?A \\<in>\\<^sub>\\<circ> Vset \\<beta>", "show \"set {\\<CC>. semicategory \\<alpha> \\<CC>} \\<subseteq>\\<^sub>\\<circ> Vset (\\<alpha> + 4\\<^sub>\\<nat>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set {\\<CC>. semicategory \\<alpha> \\<CC>}\n    \\<subseteq>\\<^sub>\\<circ> Vset (\\<alpha> + 4\\<^sub>\\<nat>)", "proof(intro vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                              {\\<CC>.\n                               semicategory \\<alpha>\n                                \\<CC>} \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> Vset (\\<alpha> + 4\\<^sub>\\<nat>)", "fix \\<CC>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                              {\\<CC>.\n                               semicategory \\<alpha>\n                                \\<CC>} \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> Vset (\\<alpha> + 4\\<^sub>\\<nat>)", "assume prems: \"\\<CC> \\<in>\\<^sub>\\<circ> set {\\<CC>. semicategory \\<alpha> \\<CC>}\""], ["proof (state)\nthis:\n  \\<CC>\n  \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {\\<CC>. semicategory \\<alpha> \\<CC>}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                              {\\<CC>.\n                               semicategory \\<alpha>\n                                \\<CC>} \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> Vset (\\<alpha> + 4\\<^sub>\\<nat>)", "interpret semicategory \\<alpha> \\<CC>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<CC>", "using prems"], ["proof (prove)\nusing this:\n  \\<CC>\n  \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {\\<CC>. semicategory \\<alpha> \\<CC>}\n\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<CC>", "by simp"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                              {\\<CC>.\n                               semicategory \\<alpha>\n                                \\<CC>} \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> Vset (\\<alpha> + 4\\<^sub>\\<nat>)", "show \"\\<CC> \\<in>\\<^sub>\\<circ> Vset (\\<alpha> + 4\\<^sub>\\<nat>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<CC> \\<in>\\<^sub>\\<circ> Vset (\\<alpha> + 4\\<^sub>\\<nat>)", "unfolding VPow_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<CC> \\<in>\\<^sub>\\<circ> Vset (\\<alpha> + 4\\<^sub>\\<nat>)", "by (rule smc_semicategory_in_Vset_4)"], ["proof (state)\nthis:\n  \\<CC> \\<in>\\<^sub>\\<circ> Vset (\\<alpha> + 4\\<^sub>\\<nat>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ZFC_in_HOL.set {\\<CC>. semicategory \\<alpha> \\<CC>}\n  \\<subseteq>\\<^sub>\\<circ> Vset (\\<alpha> + 4\\<^sub>\\<nat>)\n\ngoal (1 subgoal):\n 1. Vset (\\<alpha> + 4\\<^sub>\\<nat>) \\<in>\\<^sub>\\<circ> Vset \\<beta>", "from assms(2)"], ["proof (chain)\npicking this:\n  \\<alpha> \\<in>\\<^sub>\\<circ> \\<beta>", "show \"Vset (\\<alpha> + 4\\<^sub>\\<nat>) \\<in>\\<^sub>\\<circ> Vset \\<beta>\""], ["proof (prove)\nusing this:\n  \\<alpha> \\<in>\\<^sub>\\<circ> \\<beta>\n\ngoal (1 subgoal):\n 1. Vset (\\<alpha> + 4\\<^sub>\\<nat>) \\<in>\\<^sub>\\<circ> Vset \\<beta>", "by (cs_concl cs_intro: V_cs_intros Ord_cs_intros)"], ["proof (state)\nthis:\n  Vset (\\<alpha> + 4\\<^sub>\\<nat>) \\<in>\\<^sub>\\<circ> Vset \\<beta>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma semicategory_if_semicategory:\n  assumes \"semicategory \\<beta> \\<CC>\"\n    and \"\\<Z> \\<alpha>\"\n    and \"\\<CC>\\<lparr>Obj\\<rparr> \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and \"\\<And>A B. \\<lbrakk> A \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>; B \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>; A \\<in>\\<^sub>\\<circ> Vset \\<alpha>; B \\<in>\\<^sub>\\<circ> Vset \\<alpha> \\<rbrakk> \\<Longrightarrow>\n      (\\<Union>\\<^sub>\\<circ>a\\<in>\\<^sub>\\<circ>A. \\<Union>\\<^sub>\\<circ>b\\<in>\\<^sub>\\<circ>B. Hom \\<CC> a b) \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"semicategory \\<alpha> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<CC>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<CC>", "interpret semicategory \\<beta> \\<CC>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<beta> \\<CC>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<CC>", "interpret \\<alpha>: \\<Z> \\<alpha>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Z> \\<alpha>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<CC>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<CC>", "proof(intro semicategoryI)"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence \\<CC>\n 3. vsv (\\<CC>\\<lparr>Comp\\<rparr>)\n 4. vcard \\<CC> = 5\\<^sub>\\<nat>\n 5. digraph \\<alpha> (smc_dg \\<CC>)\n 6. \\<And>gf.\n       (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (\\<CC>\\<lparr>Comp\\<rparr>)) =\n       (\\<exists>g f b c a.\n           gf = [g, f]\\<^sub>\\<circ> \\<and>\n           g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n           f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b)\n 7. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n 8. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f)", "show \"vfsequence \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence \\<CC>", "by (simp add: vfsequence_axioms)"], ["proof (state)\nthis:\n  vfsequence \\<CC>\n\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (\\<CC>\\<lparr>Comp\\<rparr>)\n 3. vcard \\<CC> = 5\\<^sub>\\<nat>\n 4. digraph \\<alpha> (smc_dg \\<CC>)\n 5. \\<And>gf.\n       (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (\\<CC>\\<lparr>Comp\\<rparr>)) =\n       (\\<exists>g f b c a.\n           gf = [g, f]\\<^sub>\\<circ> \\<and>\n           g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n           f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b)\n 6. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n 7. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f)", "show \"digraph \\<alpha> (smc_dg \\<CC>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. digraph \\<alpha> (smc_dg \\<CC>)", "by (rule digraph_if_digraph, unfold slicing_simps)\n        (auto intro!: assms(1,3,4) slicing_intros)"], ["proof (state)\nthis:\n  digraph \\<alpha> (smc_dg \\<CC>)\n\ngoal (6 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (\\<CC>\\<lparr>Comp\\<rparr>)\n 3. vcard \\<CC> = 5\\<^sub>\\<nat>\n 4. \\<And>gf.\n       (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (\\<CC>\\<lparr>Comp\\<rparr>)) =\n       (\\<exists>g f b c a.\n           gf = [g, f]\\<^sub>\\<circ> \\<and>\n           g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n           f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b)\n 5. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n 6. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f)", "qed (auto intro: smc_cs_intros simp: smc_cs_simps)"], ["proof (state)\nthis:\n  semicategory \\<alpha> \\<CC>\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Further elementary properties.\\<close>"], ["", "lemma (in semicategory) smc_Comp_vempty_if_Arr_vempty:\n  assumes \"\\<CC>\\<lparr>Arr\\<rparr> = 0\"\n  shows \"\\<CC>\\<lparr>Comp\\<rparr> = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>Comp\\<rparr> = []\\<^sub>\\<circ>", "using assms smc_Comp_vrange"], ["proof (prove)\nusing this:\n  \\<CC>\\<lparr>Arr\\<rparr> = []\\<^sub>\\<circ>\n  \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>Comp\\<rparr> = []\\<^sub>\\<circ>", "by (auto intro: Comp.vsv_vrange_vempty)"], ["", "subsection\\<open>Opposite semicategory\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "text\\<open>See Chapter II-2 in \\cite{mac_lane_categories_2010}.\\<close>"], ["", "definition op_smc :: \"V \\<Rightarrow> V\"\n  where \"op_smc \\<CC> = [\\<CC>\\<lparr>Obj\\<rparr>, \\<CC>\\<lparr>Arr\\<rparr>, \\<CC>\\<lparr>Cod\\<rparr>, \\<CC>\\<lparr>Dom\\<rparr>, fflip (\\<CC>\\<lparr>Comp\\<rparr>)]\\<^sub>\\<circ>\""], ["", "text\\<open>Components.\\<close>"], ["", "lemma op_smc_components:\n  shows [smc_op_simps]: \"op_smc \\<CC>\\<lparr>Obj\\<rparr> = \\<CC>\\<lparr>Obj\\<rparr>\"\n    and [smc_op_simps]: \"op_smc \\<CC>\\<lparr>Arr\\<rparr> = \\<CC>\\<lparr>Arr\\<rparr>\"\n    and [smc_op_simps]: \"op_smc \\<CC>\\<lparr>Dom\\<rparr> = \\<CC>\\<lparr>Cod\\<rparr>\"\n    and [smc_op_simps]: \"op_smc \\<CC>\\<lparr>Cod\\<rparr> = \\<CC>\\<lparr>Dom\\<rparr>\"\n    and \"op_smc \\<CC>\\<lparr>Comp\\<rparr> = fflip (\\<CC>\\<lparr>Comp\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (op_smc \\<CC>\\<lparr>Obj\\<rparr> = \\<CC>\\<lparr>Obj\\<rparr> &&&\n     op_smc \\<CC>\\<lparr>Arr\\<rparr> = \\<CC>\\<lparr>Arr\\<rparr>) &&&\n    op_smc \\<CC>\\<lparr>Dom\\<rparr> = \\<CC>\\<lparr>Cod\\<rparr> &&&\n    op_smc \\<CC>\\<lparr>Cod\\<rparr> = \\<CC>\\<lparr>Dom\\<rparr> &&&\n    op_smc \\<CC>\\<lparr>Comp\\<rparr> = fflip (\\<CC>\\<lparr>Comp\\<rparr>)", "unfolding op_smc_def dg_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>3\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      fflip\n       (\\<CC>\\<lparr>4\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n     \\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> &&&\n     [\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>3\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      fflip\n       (\\<CC>\\<lparr>4\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> =\n     \\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>) &&&\n    [\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     \\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     \\<CC>\\<lparr>3\\<^sub>\\<nat>\\<rparr>,\n     \\<CC>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n     fflip\n      (\\<CC>\\<lparr>4\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr> =\n    \\<CC>\\<lparr>3\\<^sub>\\<nat>\\<rparr> &&&\n    [\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     \\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     \\<CC>\\<lparr>3\\<^sub>\\<nat>\\<rparr>,\n     \\<CC>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n     fflip\n      (\\<CC>\\<lparr>4\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr> =\n    \\<CC>\\<lparr>2\\<^sub>\\<nat>\\<rparr> &&&\n    [\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     \\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     \\<CC>\\<lparr>3\\<^sub>\\<nat>\\<rparr>,\n     \\<CC>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n     fflip\n      (\\<CC>\\<lparr>4\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>4\\<^sub>\\<nat>\\<rparr> =\n    fflip (\\<CC>\\<lparr>4\\<^sub>\\<nat>\\<rparr>)", "by (auto simp: nat_omega_simps)"], ["", "lemma op_smc_component_intros[smc_op_intros]:\n  shows \"a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr> \\<Longrightarrow> a \\<in>\\<^sub>\\<circ> op_smc \\<CC>\\<lparr>Obj\\<rparr>\"\n    and \"f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<Longrightarrow> f \\<in>\\<^sub>\\<circ> op_smc \\<CC>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n     a \\<in>\\<^sub>\\<circ> op_smc \\<CC>\\<lparr>Obj\\<rparr>) &&&\n    (f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n     f \\<in>\\<^sub>\\<circ> op_smc \\<CC>\\<lparr>Arr\\<rparr>)", "unfolding smc_op_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n     a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>) &&&\n    (f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n     f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>)", "by simp_all"], ["", "text\\<open>Slicing.\\<close>"], ["", "lemma op_dg_smc_dg[slicing_commute]: \"op_dg (smc_dg \\<CC>) = smc_dg (op_smc \\<CC>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_dg (smc_dg \\<CC>) = smc_dg (op_smc \\<CC>)", "unfolding smc_dg_def op_smc_def op_dg_def dg_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. [[\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     [\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     [\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>,\n     [\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ> =\n    [[\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>3\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      fflip\n       (\\<CC>\\<lparr>4\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     [\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>3\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      fflip\n       (\\<CC>\\<lparr>4\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     [\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>3\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      fflip\n       (\\<CC>\\<lparr>4\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n     [\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>3\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      fflip\n       (\\<CC>\\<lparr>4\\<^sub>\\<nat>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>", "by (simp add: nat_omega_simps)"], ["", "text\\<open>Regular definitions.\\<close>"], ["", "lemma op_smc_Comp_vdomain[smc_op_simps]: \n  \"\\<D>\\<^sub>\\<circ> (op_smc \\<CC>\\<lparr>Comp\\<rparr>) = (\\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>))\\<inverse>\\<^sub>\\<bullet>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (op_smc \\<CC>\\<lparr>Comp\\<rparr>) =\n    (\\<D>\\<^sub>\\<circ>\n      (\\<CC>\\<lparr>Comp\\<rparr>))\\<inverse>\\<^sub>\\<bullet>", "unfolding op_smc_components"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (fflip (\\<CC>\\<lparr>Comp\\<rparr>)) =\n    (\\<D>\\<^sub>\\<circ>\n      (\\<CC>\\<lparr>Comp\\<rparr>))\\<inverse>\\<^sub>\\<bullet>", "by simp"], ["", "lemma op_smc_is_arr[smc_op_simps]: \"f : b \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> a \\<longleftrightarrow> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f : b \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> a =\n    f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "unfolding smc_op_simps is_arr_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n     \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = b \\<and>\n     \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = a) =\n    (f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<and>\n     \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = a \\<and>\n     \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = b)", "by auto"], ["", "lemmas [smc_op_intros] = op_smc_is_arr[THEN iffD2]"], ["", "lemma (in semicategory) op_smc_Comp_vrange[smc_op_simps]: \n  \"\\<R>\\<^sub>\\<circ> (op_smc \\<CC>\\<lparr>Comp\\<rparr>) = \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (op_smc \\<CC>\\<lparr>Comp\\<rparr>) =\n    \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)", "using Comp.vrange_fflip"], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> (fflip (\\<CC>\\<lparr>Comp\\<rparr>)) =\n  \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (op_smc \\<CC>\\<lparr>Comp\\<rparr>) =\n    \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)", "unfolding op_smc_components"], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> (fflip (\\<CC>\\<lparr>Comp\\<rparr>)) =\n  \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (fflip (\\<CC>\\<lparr>Comp\\<rparr>)) =\n    \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)", "by simp"], ["", "lemmas [smc_op_simps] = semicategory.op_smc_Comp_vrange"], ["", "lemma (in semicategory) op_smc_Comp[smc_op_simps]: \n  assumes \"f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\" and \"g : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f = f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f =\n    f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g", "using assms"], ["proof (prove)\nusing this:\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  g : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f =\n    f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g", "unfolding op_smc_components"], ["proof (prove)\nusing this:\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  g : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. fflip (\\<CC>\\<lparr>Comp\\<rparr>) \\<lparr>g, f\\<rparr>\\<^sub>\\<bullet> =\n    f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g", "by (auto intro!: fflip_app smc_cs_intros)"], ["", "lemmas [smc_op_simps] = semicategory.op_smc_Comp"], ["", "lemma op_smc_Hom[smc_op_simps]: \"Hom (op_smc \\<CC>) a b = Hom \\<CC> b a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom (op_smc \\<CC>) a b = Hom \\<CC> b a", "unfolding smc_op_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom \\<CC> b a = Hom \\<CC> b a", "by simp"], ["", "subsubsection\\<open>Further properties\\<close>"], ["", "lemma (in semicategory) semicategory_op[smc_op_intros]: \n  \"semicategory \\<alpha> (op_smc \\<CC>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (op_smc \\<CC>)", "proof(intro semicategoryI)"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (op_smc \\<CC>)\n 3. vsv (op_smc \\<CC>\\<lparr>Comp\\<rparr>)\n 4. vcard (op_smc \\<CC>) = 5\\<^sub>\\<nat>\n 5. digraph \\<alpha> (smc_dg (op_smc \\<CC>))\n 6. \\<And>gf.\n       (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (op_smc \\<CC>\\<lparr>Comp\\<rparr>)) =\n       (\\<exists>g f b c a.\n           gf = [g, f]\\<^sub>\\<circ> \\<and>\n           g : b \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> c \\<and>\n           f : a \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> b)\n 7. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n                         f : a \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> c\n 8. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f)", "from semicategory_axioms smc_digraph"], ["proof (chain)\npicking this:\n  semicategory \\<alpha> \\<CC>\n  digraph \\<alpha> (smc_dg \\<CC>)", "show \"digraph \\<alpha> (smc_dg (op_smc \\<CC>))\""], ["proof (prove)\nusing this:\n  semicategory \\<alpha> \\<CC>\n  digraph \\<alpha> (smc_dg \\<CC>)\n\ngoal (1 subgoal):\n 1. digraph \\<alpha> (smc_dg (op_smc \\<CC>))", "by (cs_concl cs_simp: slicing_commute[symmetric] cs_intro: dg_op_intros)"], ["proof (state)\nthis:\n  digraph \\<alpha> (smc_dg (op_smc \\<CC>))\n\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (op_smc \\<CC>)\n 3. vsv (op_smc \\<CC>\\<lparr>Comp\\<rparr>)\n 4. vcard (op_smc \\<CC>) = 5\\<^sub>\\<nat>\n 5. \\<And>gf.\n       (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (op_smc \\<CC>\\<lparr>Comp\\<rparr>)) =\n       (\\<exists>g f b c a.\n           gf = [g, f]\\<^sub>\\<circ> \\<and>\n           g : b \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> c \\<and>\n           f : a \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> b)\n 6. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n                         f : a \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> c\n 7. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f)", "show \"vfsequence (op_smc \\<CC>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (op_smc \\<CC>)", "unfolding op_smc_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence\n     [\\<CC>\\<lparr>Obj\\<rparr>, \\<CC>\\<lparr>Arr\\<rparr>,\n      \\<CC>\\<lparr>Cod\\<rparr>, \\<CC>\\<lparr>Dom\\<rparr>,\n      fflip (\\<CC>\\<lparr>Comp\\<rparr>)]\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  vfsequence (op_smc \\<CC>)\n\ngoal (6 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (op_smc \\<CC>\\<lparr>Comp\\<rparr>)\n 3. vcard (op_smc \\<CC>) = 5\\<^sub>\\<nat>\n 4. \\<And>gf.\n       (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (op_smc \\<CC>\\<lparr>Comp\\<rparr>)) =\n       (\\<exists>g f b c a.\n           gf = [g, f]\\<^sub>\\<circ> \\<and>\n           g : b \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> c \\<and>\n           f : a \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> b)\n 5. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n                         f : a \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> c\n 6. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f)", "show \"vcard (op_smc \\<CC>) = 5\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (op_smc \\<CC>) = 5\\<^sub>\\<nat>", "unfolding op_smc_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard\n     [\\<CC>\\<lparr>Obj\\<rparr>, \\<CC>\\<lparr>Arr\\<rparr>,\n      \\<CC>\\<lparr>Cod\\<rparr>, \\<CC>\\<lparr>Dom\\<rparr>,\n      fflip (\\<CC>\\<lparr>Comp\\<rparr>)]\\<^sub>\\<circ> =\n    5\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  vcard (op_smc \\<CC>) = 5\\<^sub>\\<nat>\n\ngoal (5 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (op_smc \\<CC>\\<lparr>Comp\\<rparr>)\n 3. \\<And>gf.\n       (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (op_smc \\<CC>\\<lparr>Comp\\<rparr>)) =\n       (\\<exists>g f b c a.\n           gf = [g, f]\\<^sub>\\<circ> \\<and>\n           g : b \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> c \\<and>\n           f : a \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> b)\n 4. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n                         f : a \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> c\n 5. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f)", "show \"(gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (op_smc \\<CC>\\<lparr>Comp\\<rparr>)) \\<longleftrightarrow>\n    (\\<exists>g f b c a. gf = [g, f]\\<^sub>\\<circ> \\<and> g : b \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> c \\<and> f : a \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> b)\"\n    for gf"], ["proof (prove)\ngoal (1 subgoal):\n 1. (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                             (op_smc \\<CC>\\<lparr>Comp\\<rparr>)) =\n    (\\<exists>g f b c a.\n        gf = [g, f]\\<^sub>\\<circ> \\<and>\n        g : b \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> c \\<and>\n        f : a \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> b)", "proof(rule iffI; unfold smc_op_simps)"], ["proof (state)\ngoal (2 subgoals):\n 1. gf \\<in>\\<^sub>\\<circ> (\\<D>\\<^sub>\\<circ>\n                             (\\<CC>\\<lparr>Comp\\<rparr>))\\<inverse>\\<^sub>\\<bullet> \\<Longrightarrow>\n    \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<and>\n       f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n 2. \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<and>\n       f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a \\<Longrightarrow>\n    gf \\<in>\\<^sub>\\<circ> (\\<D>\\<^sub>\\<circ>\n                             (\\<CC>\\<lparr>Comp\\<rparr>))\\<inverse>\\<^sub>\\<bullet>", "assume prems: \"gf \\<in>\\<^sub>\\<circ> (\\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>))\\<inverse>\\<^sub>\\<bullet>\""], ["proof (state)\nthis:\n  gf \\<in>\\<^sub>\\<circ> (\\<D>\\<^sub>\\<circ>\n                           (\\<CC>\\<lparr>Comp\\<rparr>))\\<inverse>\\<^sub>\\<bullet>\n\ngoal (2 subgoals):\n 1. gf \\<in>\\<^sub>\\<circ> (\\<D>\\<^sub>\\<circ>\n                             (\\<CC>\\<lparr>Comp\\<rparr>))\\<inverse>\\<^sub>\\<bullet> \\<Longrightarrow>\n    \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<and>\n       f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n 2. \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<and>\n       f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a \\<Longrightarrow>\n    gf \\<in>\\<^sub>\\<circ> (\\<D>\\<^sub>\\<circ>\n                             (\\<CC>\\<lparr>Comp\\<rparr>))\\<inverse>\\<^sub>\\<bullet>", "then"], ["proof (chain)\npicking this:\n  gf \\<in>\\<^sub>\\<circ> (\\<D>\\<^sub>\\<circ>\n                           (\\<CC>\\<lparr>Comp\\<rparr>))\\<inverse>\\<^sub>\\<bullet>", "obtain g' f' where gf_def: \"gf = [g', f']\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  gf \\<in>\\<^sub>\\<circ> (\\<D>\\<^sub>\\<circ>\n                           (\\<CC>\\<lparr>Comp\\<rparr>))\\<inverse>\\<^sub>\\<bullet>\n\ngoal (1 subgoal):\n 1. (\\<And>g' f'.\n        gf = [g', f']\\<^sub>\\<circ> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  gf = [g', f']\\<^sub>\\<circ>\n\ngoal (2 subgoals):\n 1. gf \\<in>\\<^sub>\\<circ> (\\<D>\\<^sub>\\<circ>\n                             (\\<CC>\\<lparr>Comp\\<rparr>))\\<inverse>\\<^sub>\\<bullet> \\<Longrightarrow>\n    \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<and>\n       f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n 2. \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<and>\n       f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a \\<Longrightarrow>\n    gf \\<in>\\<^sub>\\<circ> (\\<D>\\<^sub>\\<circ>\n                             (\\<CC>\\<lparr>Comp\\<rparr>))\\<inverse>\\<^sub>\\<bullet>", "with prems"], ["proof (chain)\npicking this:\n  gf \\<in>\\<^sub>\\<circ> (\\<D>\\<^sub>\\<circ>\n                           (\\<CC>\\<lparr>Comp\\<rparr>))\\<inverse>\\<^sub>\\<bullet>\n  gf = [g', f']\\<^sub>\\<circ>", "have \"[f', g']\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\""], ["proof (prove)\nusing this:\n  gf \\<in>\\<^sub>\\<circ> (\\<D>\\<^sub>\\<circ>\n                           (\\<CC>\\<lparr>Comp\\<rparr>))\\<inverse>\\<^sub>\\<bullet>\n  gf = [g', f']\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. [f', g']\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)", "by (auto intro: smc_cs_intros)"], ["proof (state)\nthis:\n  [f', g']\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\n\ngoal (2 subgoals):\n 1. gf \\<in>\\<^sub>\\<circ> (\\<D>\\<^sub>\\<circ>\n                             (\\<CC>\\<lparr>Comp\\<rparr>))\\<inverse>\\<^sub>\\<bullet> \\<Longrightarrow>\n    \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<and>\n       f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n 2. \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<and>\n       f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a \\<Longrightarrow>\n    gf \\<in>\\<^sub>\\<circ> (\\<D>\\<^sub>\\<circ>\n                             (\\<CC>\\<lparr>Comp\\<rparr>))\\<inverse>\\<^sub>\\<bullet>", "with smc_Comp_vdomain"], ["proof (chain)\npicking this:\n  (?gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)) =\n  (\\<exists>g f b c a.\n      ?gf = [g, f]\\<^sub>\\<circ> \\<and>\n      g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n      f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b)\n  [f', g']\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)", "show \n      \"\\<exists>g f b c a. gf = [g, f]\\<^sub>\\<circ> \\<and> g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<and> f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\""], ["proof (prove)\nusing this:\n  (?gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)) =\n  (\\<exists>g f b c a.\n      ?gf = [g, f]\\<^sub>\\<circ> \\<and>\n      g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n      f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b)\n  [f', g']\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<and>\n       f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a", "unfolding gf_def"], ["proof (prove)\nusing this:\n  (?gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)) =\n  (\\<exists>g f b c a.\n      ?gf = [g, f]\\<^sub>\\<circ> \\<and>\n      g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n      f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b)\n  [f', g']\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<exists>g f b c a.\n       [g', f']\\<^sub>\\<circ> = [g, f]\\<^sub>\\<circ> \\<and>\n       g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<and>\n       f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a", "by auto"], ["proof (state)\nthis:\n  \\<exists>g f b c a.\n     gf = [g, f]\\<^sub>\\<circ> \\<and>\n     g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<and>\n     f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n\ngoal (1 subgoal):\n 1. \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<and>\n       f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a \\<Longrightarrow>\n    gf \\<in>\\<^sub>\\<circ> (\\<D>\\<^sub>\\<circ>\n                             (\\<CC>\\<lparr>Comp\\<rparr>))\\<inverse>\\<^sub>\\<bullet>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<and>\n       f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a \\<Longrightarrow>\n    gf \\<in>\\<^sub>\\<circ> (\\<D>\\<^sub>\\<circ>\n                             (\\<CC>\\<lparr>Comp\\<rparr>))\\<inverse>\\<^sub>\\<bullet>", "assume \"\\<exists>g f b c a. gf = [g, f]\\<^sub>\\<circ> \\<and> g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<and> f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\""], ["proof (state)\nthis:\n  \\<exists>g f b c a.\n     gf = [g, f]\\<^sub>\\<circ> \\<and>\n     g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<and>\n     f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n\ngoal (1 subgoal):\n 1. \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<and>\n       f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a \\<Longrightarrow>\n    gf \\<in>\\<^sub>\\<circ> (\\<D>\\<^sub>\\<circ>\n                             (\\<CC>\\<lparr>Comp\\<rparr>))\\<inverse>\\<^sub>\\<bullet>", "then"], ["proof (chain)\npicking this:\n  \\<exists>g f b c a.\n     gf = [g, f]\\<^sub>\\<circ> \\<and>\n     g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<and>\n     f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a", "obtain g f b c a \n      where gf_def: \"gf = [g, f]\\<^sub>\\<circ>\" and g: \"g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\" and f: \"f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\""], ["proof (prove)\nusing this:\n  \\<exists>g f b c a.\n     gf = [g, f]\\<^sub>\\<circ> \\<and>\n     g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<and>\n     f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n\ngoal (1 subgoal):\n 1. (\\<And>g f c b a.\n        \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>;\n         g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b;\n         f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  gf = [g, f]\\<^sub>\\<circ>\n  g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n\ngoal (1 subgoal):\n 1. \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<and>\n       f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a \\<Longrightarrow>\n    gf \\<in>\\<^sub>\\<circ> (\\<D>\\<^sub>\\<circ>\n                             (\\<CC>\\<lparr>Comp\\<rparr>))\\<inverse>\\<^sub>\\<bullet>", "then"], ["proof (chain)\npicking this:\n  gf = [g, f]\\<^sub>\\<circ>\n  g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a", "have \"g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\" and \"f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  gf = [g, f]\\<^sub>\\<circ>\n  g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n\ngoal (1 subgoal):\n 1. g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> &&&\n    f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "by force+"], ["proof (state)\nthis:\n  g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n  f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<and>\n       f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a \\<Longrightarrow>\n    gf \\<in>\\<^sub>\\<circ> (\\<D>\\<^sub>\\<circ>\n                             (\\<CC>\\<lparr>Comp\\<rparr>))\\<inverse>\\<^sub>\\<bullet>", "from g f"], ["proof (chain)\npicking this:\n  g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a", "have \"[f, g]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\""], ["proof (prove)\nusing this:\n  g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n\ngoal (1 subgoal):\n 1. [f, g]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)", "unfolding gf_def"], ["proof (prove)\nusing this:\n  g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n\ngoal (1 subgoal):\n 1. [f, g]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)", "by (intro smc_Comp_vdomainI) auto"], ["proof (state)\nthis:\n  [f, g]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<and>\n       f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a \\<Longrightarrow>\n    gf \\<in>\\<^sub>\\<circ> (\\<D>\\<^sub>\\<circ>\n                             (\\<CC>\\<lparr>Comp\\<rparr>))\\<inverse>\\<^sub>\\<bullet>", "then"], ["proof (chain)\npicking this:\n  [f, g]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)", "show \"gf \\<in>\\<^sub>\\<circ> (\\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>))\\<inverse>\\<^sub>\\<bullet>\""], ["proof (prove)\nusing this:\n  [f, g]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. gf \\<in>\\<^sub>\\<circ> (\\<D>\\<^sub>\\<circ>\n                             (\\<CC>\\<lparr>Comp\\<rparr>))\\<inverse>\\<^sub>\\<bullet>", "unfolding gf_def"], ["proof (prove)\nusing this:\n  [f, g]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> (\\<D>\\<^sub>\\<circ>\n                          (\\<CC>\\<lparr>Comp\\<rparr>))\\<inverse>\\<^sub>\\<bullet>", "by (auto intro: smc_cs_intros)"], ["proof (state)\nthis:\n  gf \\<in>\\<^sub>\\<circ> (\\<D>\\<^sub>\\<circ>\n                           (\\<CC>\\<lparr>Comp\\<rparr>))\\<inverse>\\<^sub>\\<bullet>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (?gf\n   \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                        (op_smc \\<CC>\\<lparr>Comp\\<rparr>)) =\n  (\\<exists>g f b c a.\n      ?gf = [g, f]\\<^sub>\\<circ> \\<and>\n      g : b \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> c \\<and>\n      f : a \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> b)\n\ngoal (4 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (op_smc \\<CC>\\<lparr>Comp\\<rparr>)\n 3. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n                         f : a \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> c\n 4. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f)", "from semicategory_axioms"], ["proof (chain)\npicking this:\n  semicategory \\<alpha> \\<CC>", "show \n    \"\\<lbrakk> g : b \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> c; f : a \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> b \\<rbrakk> \\<Longrightarrow> \n      g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f : a \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> c\"\n    for g b c f a"], ["proof (prove)\nusing this:\n  semicategory \\<alpha> \\<CC>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>g : b \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> c;\n     f : a \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> b\\<rbrakk>\n    \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n                      f : a \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> c", "unfolding smc_op_simps"], ["proof (prove)\nusing this:\n  semicategory \\<alpha> \\<CC>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b;\n     f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\\<rbrakk>\n    \\<Longrightarrow> f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                      g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a", "by (cs_concl cs_simp: smc_op_simps cs_intro: smc_cs_intros)"], ["proof (state)\nthis:\n  \\<lbrakk>?g : ?b \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> ?c;\n   ?f : ?a \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> ?b\\<rbrakk>\n  \\<Longrightarrow> ?g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n                    ?f : ?a \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> ?c\n\ngoal (3 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (op_smc \\<CC>\\<lparr>Comp\\<rparr>)\n 3. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f)", "fix h c d g b f a"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (op_smc \\<CC>\\<lparr>Comp\\<rparr>)\n 3. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f)", "assume \"h : c \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> d\" \"g : b \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> c\" \"f : a \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> b\""], ["proof (state)\nthis:\n  h : c \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> d\n  g : b \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> b\n\ngoal (3 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (op_smc \\<CC>\\<lparr>Comp\\<rparr>)\n 3. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f)", "with semicategory_axioms"], ["proof (chain)\npicking this:\n  semicategory \\<alpha> \\<CC>\n  h : c \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> d\n  g : b \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> b", "show\n    \"(h \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> g) \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f = h \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> (g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f)\""], ["proof (prove)\nusing this:\n  semicategory \\<alpha> \\<CC>\n  h : c \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> d\n  g : b \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. h \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n    g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n    f =\n    h \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n    (g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f)", "unfolding smc_op_simps"], ["proof (prove)\nusing this:\n  semicategory \\<alpha> \\<CC>\n  h : d \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n\ngoal (1 subgoal):\n 1. h \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n    g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n    f =\n    h \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n    (g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f)", "by (cs_concl cs_simp: smc_op_simps smc_cs_simps cs_intro: smc_cs_intros)"], ["proof (state)\nthis:\n  h \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n  g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n  f =\n  h \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n  (g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f)\n\ngoal (2 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (op_smc \\<CC>\\<lparr>Comp\\<rparr>)", "qed (auto simp: fflip_vsv op_smc_components(5))"], ["", "lemmas semicategory_op[smc_op_intros] = semicategory.semicategory_op"], ["", "lemma (in semicategory) smc_op_smc_op_smc[smc_op_simps]: \"op_smc (op_smc \\<CC>) = \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_smc (op_smc \\<CC>) = \\<CC>", "by (rule smc_eqI, unfold smc_op_simps op_smc_components)\n    (\n      auto simp: \n        Comp.pbinop_fflip_fflip \n        semicategory_axioms\n        semicategory.semicategory_op semicategory_op\n        intro: smc_cs_intros\n    )"], ["", "lemmas smc_op_smc_op_smc[smc_op_simps] = semicategory.smc_op_smc_op_smc"], ["", "lemma eq_op_smc_iff[smc_op_simps]: \n  assumes \"semicategory \\<alpha> \\<AA>\" and \"semicategory \\<alpha> \\<BB>\"\n  shows \"op_smc \\<AA> = op_smc \\<BB> \\<longleftrightarrow> \\<AA> = \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (op_smc \\<AA> = op_smc \\<BB>) = (\\<AA> = \\<BB>)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. op_smc \\<AA> = op_smc \\<BB> \\<Longrightarrow> \\<AA> = \\<BB>\n 2. \\<AA> = \\<BB> \\<Longrightarrow> op_smc \\<AA> = op_smc \\<BB>", "interpret \\<AA>: semicategory \\<alpha> \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<AA>", "by (rule assms(1))"], ["proof (state)\ngoal (2 subgoals):\n 1. op_smc \\<AA> = op_smc \\<BB> \\<Longrightarrow> \\<AA> = \\<BB>\n 2. \\<AA> = \\<BB> \\<Longrightarrow> op_smc \\<AA> = op_smc \\<BB>", "interpret \\<BB>: semicategory \\<alpha> \\<BB>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<BB>", "by (rule assms(2))"], ["proof (state)\ngoal (2 subgoals):\n 1. op_smc \\<AA> = op_smc \\<BB> \\<Longrightarrow> \\<AA> = \\<BB>\n 2. \\<AA> = \\<BB> \\<Longrightarrow> op_smc \\<AA> = op_smc \\<BB>", "assume prems: \"op_smc \\<AA> = op_smc \\<BB>\""], ["proof (state)\nthis:\n  op_smc \\<AA> = op_smc \\<BB>\n\ngoal (2 subgoals):\n 1. op_smc \\<AA> = op_smc \\<BB> \\<Longrightarrow> \\<AA> = \\<BB>\n 2. \\<AA> = \\<BB> \\<Longrightarrow> op_smc \\<AA> = op_smc \\<BB>", "show \"\\<AA> = \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "proof(rule smc_eqI)"], ["proof (state)\ngoal (7 subgoals):\n 1. semicategory ?\\<alpha> \\<AA>\n 2. semicategory ?\\<alpha> \\<BB>\n 3. \\<AA>\\<lparr>Obj\\<rparr> = \\<BB>\\<lparr>Obj\\<rparr>\n 4. \\<AA>\\<lparr>Arr\\<rparr> = \\<BB>\\<lparr>Arr\\<rparr>\n 5. \\<AA>\\<lparr>Dom\\<rparr> = \\<BB>\\<lparr>Dom\\<rparr>\n 6. \\<AA>\\<lparr>Cod\\<rparr> = \\<BB>\\<lparr>Cod\\<rparr>\n 7. \\<AA>\\<lparr>Comp\\<rparr> = \\<BB>\\<lparr>Comp\\<rparr>", "show \n      \"\\<AA>\\<lparr>Obj\\<rparr> = \\<BB>\\<lparr>Obj\\<rparr>\" \n      \"\\<AA>\\<lparr>Arr\\<rparr> = \\<BB>\\<lparr>Arr\\<rparr>\"\n      \"\\<AA>\\<lparr>Dom\\<rparr> = \\<BB>\\<lparr>Dom\\<rparr>\" \n      \"\\<AA>\\<lparr>Cod\\<rparr> = \\<BB>\\<lparr>Cod\\<rparr>\"\n      \"\\<AA>\\<lparr>Comp\\<rparr> = \\<BB>\\<lparr>Comp\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<AA>\\<lparr>Obj\\<rparr> = \\<BB>\\<lparr>Obj\\<rparr> &&&\n     \\<AA>\\<lparr>Arr\\<rparr> = \\<BB>\\<lparr>Arr\\<rparr>) &&&\n    \\<AA>\\<lparr>Dom\\<rparr> = \\<BB>\\<lparr>Dom\\<rparr> &&&\n    \\<AA>\\<lparr>Cod\\<rparr> = \\<BB>\\<lparr>Cod\\<rparr> &&&\n    \\<AA>\\<lparr>Comp\\<rparr> = \\<BB>\\<lparr>Comp\\<rparr>", "by (metis prems \\<AA>.smc_op_smc_op_smc \\<BB>.smc_op_smc_op_smc)+"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Obj\\<rparr> = \\<BB>\\<lparr>Obj\\<rparr>\n  \\<AA>\\<lparr>Arr\\<rparr> = \\<BB>\\<lparr>Arr\\<rparr>\n  \\<AA>\\<lparr>Dom\\<rparr> = \\<BB>\\<lparr>Dom\\<rparr>\n  \\<AA>\\<lparr>Cod\\<rparr> = \\<BB>\\<lparr>Cod\\<rparr>\n  \\<AA>\\<lparr>Comp\\<rparr> = \\<BB>\\<lparr>Comp\\<rparr>\n\ngoal (2 subgoals):\n 1. semicategory ?\\<alpha> \\<AA>\n 2. semicategory ?\\<alpha> \\<BB>", "qed (auto intro: assms)"], ["proof (state)\nthis:\n  \\<AA> = \\<BB>\n\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB> \\<Longrightarrow> op_smc \\<AA> = op_smc \\<BB>", "qed auto"], ["", "subsection\\<open>Arrow with a domain and a codomain\\<close>"], ["", "lemma (in semicategory) smc_assoc_helper:\n  assumes \"f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"\n    and \"g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\"\n    and \"h : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d\"\n    and \"q : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d\"\n    and \"h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g = q\"\n  shows \"h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> (g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f) = q \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    (g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f) =\n    q \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f", "using semicategory_axioms assms(1-4)"], ["proof (prove)\nusing this:\n  semicategory \\<alpha> \\<CC>\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  h : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d\n  q : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d\n\ngoal (1 subgoal):\n 1. h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    (g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f) =\n    q \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f", "by (cs_concl cs_simp: semicategory.smc_Comp_assoc[symmetric] assms(5))"], ["", "lemma (in semicategory) smc_pattern_rectangle_right:\n  assumes \"aa' : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a'\" \n    and \"a'a'' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a''\"\n    and \"a''b'' : a'' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b''\"\n    and \"ab : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"\n    and \"bb' : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\"\n    and \"b'b'' : b' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b''\"\n    and \"a'b' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\"\n    and \"a'b' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> aa' = bb' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> ab\"\n    and \"b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> a'b' = a''b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> a'a''\"\n  shows \"a''b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> (a'a'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> aa') = (b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> bb') \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> ab\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a''b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    (a'a'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> aa') =\n    b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    bb' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    ab", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. a''b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    (a'a'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> aa') =\n    b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    bb' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    ab", "from semicategory_axioms assms(3,2,1)"], ["proof (chain)\npicking this:\n  semicategory \\<alpha> \\<CC>\n  a''b'' : a'' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b''\n  a'a'' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a''\n  aa' : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a'", "have \n    \"a''b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> (a'a'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> aa') = (a''b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> a'a'') \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> aa'\""], ["proof (prove)\nusing this:\n  semicategory \\<alpha> \\<CC>\n  a''b'' : a'' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b''\n  a'a'' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a''\n  aa' : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a'\n\ngoal (1 subgoal):\n 1. a''b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    (a'a'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> aa') =\n    a''b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    a'a'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    aa'", "by (cs_concl cs_simp: smc_cs_simps cs_intro: smc_cs_intros)"], ["proof (state)\nthis:\n  a''b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  (a'a'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> aa') =\n  a''b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  a'a'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  aa'\n\ngoal (1 subgoal):\n 1. a''b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    (a'a'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> aa') =\n    b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    bb' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    ab", "also"], ["proof (state)\nthis:\n  a''b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  (a'a'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> aa') =\n  a''b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  a'a'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  aa'\n\ngoal (1 subgoal):\n 1. a''b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    (a'a'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> aa') =\n    b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    bb' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    ab", "have \"\\<dots> = (b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> a'b') \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> aa'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a''b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    a'a'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    aa' =\n    b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    a'b' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    aa'", "unfolding assms(9)"], ["proof (prove)\ngoal (1 subgoal):\n 1. a''b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    a'a'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    aa' =\n    a''b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    a'a'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    aa'", ".."], ["proof (state)\nthis:\n  a''b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  a'a'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  aa' =\n  b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  a'b' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  aa'\n\ngoal (1 subgoal):\n 1. a''b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    (a'a'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> aa') =\n    b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    bb' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    ab", "also"], ["proof (state)\nthis:\n  a''b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  a'a'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  aa' =\n  b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  a'b' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  aa'\n\ngoal (1 subgoal):\n 1. a''b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    (a'a'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> aa') =\n    b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    bb' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    ab", "from semicategory_axioms assms(1,6,7)"], ["proof (chain)\npicking this:\n  semicategory \\<alpha> \\<CC>\n  aa' : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a'\n  b'b'' : b' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b''\n  a'b' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'", "have \n    \"\\<dots> = b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> (a'b' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> aa')\""], ["proof (prove)\nusing this:\n  semicategory \\<alpha> \\<CC>\n  aa' : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a'\n  b'b'' : b' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b''\n  a'b' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\n\ngoal (1 subgoal):\n 1. b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    a'b' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    aa' =\n    b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    (a'b' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> aa')", "by (cs_concl cs_simp: smc_cs_simps cs_intro: smc_cs_intros)"], ["proof (state)\nthis:\n  b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  a'b' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  aa' =\n  b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  (a'b' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> aa')\n\ngoal (1 subgoal):\n 1. a''b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    (a'a'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> aa') =\n    b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    bb' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    ab", "also"], ["proof (state)\nthis:\n  b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  a'b' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  aa' =\n  b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  (a'b' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> aa')\n\ngoal (1 subgoal):\n 1. a''b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    (a'a'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> aa') =\n    b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    bb' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    ab", "have \"\\<dots> = b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> (bb' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> ab)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    (a'b' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> aa') =\n    b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    (bb' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> ab)", "unfolding assms(8)"], ["proof (prove)\ngoal (1 subgoal):\n 1. b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    (bb' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> ab) =\n    b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    (bb' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> ab)", ".."], ["proof (state)\nthis:\n  b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  (a'b' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> aa') =\n  b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  (bb' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> ab)\n\ngoal (1 subgoal):\n 1. a''b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    (a'a'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> aa') =\n    b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    bb' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    ab", "also"], ["proof (state)\nthis:\n  b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  (a'b' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> aa') =\n  b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  (bb' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> ab)\n\ngoal (1 subgoal):\n 1. a''b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    (a'a'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> aa') =\n    b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    bb' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    ab", "from semicategory_axioms assms(6,5,4)"], ["proof (chain)\npicking this:\n  semicategory \\<alpha> \\<CC>\n  b'b'' : b' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b''\n  bb' : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\n  ab : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "have \n    \"\\<dots> = (b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> bb') \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> ab\""], ["proof (prove)\nusing this:\n  semicategory \\<alpha> \\<CC>\n  b'b'' : b' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b''\n  bb' : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\n  ab : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    (bb' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> ab) =\n    b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    bb' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    ab", "by (cs_concl cs_simp: smc_cs_simps cs_intro: smc_cs_intros)"], ["proof (state)\nthis:\n  b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  (bb' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> ab) =\n  b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  bb' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  ab\n\ngoal (1 subgoal):\n 1. a''b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    (a'a'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> aa') =\n    b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    bb' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    ab", "finally"], ["proof (chain)\npicking this:\n  a''b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  (a'a'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> aa') =\n  b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  bb' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  ab", "show ?thesis"], ["proof (prove)\nusing this:\n  a''b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  (a'a'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> aa') =\n  b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  bb' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  ab\n\ngoal (1 subgoal):\n 1. a''b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    (a'a'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> aa') =\n    b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    bb' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    ab", "by simp"], ["proof (state)\nthis:\n  a''b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  (a'a'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> aa') =\n  b'b'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  bb' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  ab\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas (in semicategory) smc_pattern_rectangle_left = \n  smc_pattern_rectangle_right[symmetric]"], ["", "subsection\\<open>Monic arrow and epic arrow\\<close>"], ["", "text\\<open>See Chapter I-5 in \\cite{mac_lane_categories_2010}.\\<close>"], ["", "definition is_monic_arr :: \"V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> bool\"\n  where \"is_monic_arr \\<CC> b c m \\<longleftrightarrow>\n    m : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n    (\n      \\<forall>f g a.\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<longrightarrow> g : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<longrightarrow> m \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f = m \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g \\<longrightarrow> f = g\n    )\""], ["", "syntax \"_is_monic_arr\" :: \"V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> bool\"\n  (\\<open>_ : _ \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<index> _\\<close> [51, 51, 51] 51)"], ["", "translations \"m : b \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>\\<CC>\\<^esub> c\" \\<rightleftharpoons> \"CONST is_monic_arr \\<CC> b c m\""], ["", "definition is_epic_arr :: \"V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> bool\"\n  where \"is_epic_arr \\<CC> a b e \\<equiv> e : b \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>op_smc \\<CC>\\<^esub> a\""], ["", "syntax \"_is_epic_arr\" :: \"V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> bool\"\n  (\\<open>_ : _ \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<index> _\\<close> [51, 51, 51] 51)"], ["", "translations \"e : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> b\" \\<rightleftharpoons> \"CONST is_epic_arr \\<CC> a b e\""], ["", "text\\<open>Rules.\\<close>"], ["", "mk_ide rf is_monic_arr_def\n  |intro is_monic_arrI|\n  |dest is_monic_arrD[dest]|\n  |elim is_monic_arrE[elim!]|"], ["", "lemmas [smc_arrow_cs_intros] = is_monic_arrD(1)"], ["", "lemma (in semicategory) is_epic_arrI:\n  assumes \"e : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"\n    and \"\\<And>f g c. \\<lbrakk> f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c; g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c; f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e \\<rbrakk> \\<Longrightarrow>\n      f = g\"\n  shows \"e : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> b", "unfolding is_epic_arr_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. e : b \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>op_smc \\<CC>\\<^esub> a", "proof(intro is_monic_arrI, unfold smc_op_simps)"], ["proof (state)\ngoal (2 subgoals):\n 1. e : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n 2. \\<And>f g a.\n       \\<lbrakk>f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a;\n        g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a;\n        e \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f =\n        e \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> f = g", "fix f g a"], ["proof (state)\ngoal (2 subgoals):\n 1. e : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n 2. \\<And>f g a.\n       \\<lbrakk>f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a;\n        g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a;\n        e \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f =\n        e \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> f = g", "assume prems:\n    \"f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\" \"g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\" \"e \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f = e \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> g\""], ["proof (state)\nthis:\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  e \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f =\n  e \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> g\n\ngoal (2 subgoals):\n 1. e : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n 2. \\<And>f g a.\n       \\<lbrakk>f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a;\n        g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a;\n        e \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f =\n        e \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> f = g", "show \"f = g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f = g", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. f = g", "from prems(3,1,2) assms(1) semicategory_axioms"], ["proof (chain)\npicking this:\n  e \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f =\n  e \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> g\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  e : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  semicategory \\<alpha> \\<CC>", "have \"g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e = f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e\""], ["proof (prove)\nusing this:\n  e \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f =\n  e \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> g\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  e : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  semicategory \\<alpha> \\<CC>\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e =\n    f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e", "by \n        (\n          cs_prems \n            cs_simp: smc_cs_simps smc_op_simps\n            cs_intro: smc_cs_intros smc_op_intros\n        )\n      simp"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e =\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e\n\ngoal (1 subgoal):\n 1. f = g", "from assms(2)[OF prems(2,1) this]"], ["proof (chain)\npicking this:\n  g = f", "show ?thesis"], ["proof (prove)\nusing this:\n  g = f\n\ngoal (1 subgoal):\n 1. f = g", ".."], ["proof (state)\nthis:\n  f = g\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f = g\n\ngoal (1 subgoal):\n 1. e : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "qed (rule assms(1))"], ["", "lemma is_epic_arr_is_arr[smc_arrow_cs_intros, dest]:\n  assumes \"e : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> b\"\n  shows \"e : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "using assms"], ["proof (prove)\nusing this:\n  e : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. e : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "unfolding is_epic_arr_def is_monic_arr_def smc_op_simps"], ["proof (prove)\nusing this:\n  e : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<and>\n  (\\<forall>f g a.\n      f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a \\<longrightarrow>\n      g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a \\<longrightarrow>\n      e \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f =\n      e \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> g \\<longrightarrow>\n      f = g)\n\ngoal (1 subgoal):\n 1. e : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "by simp"], ["", "lemma (in semicategory) is_epic_arrD[dest]:\n  assumes \"e : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> b\"\n  shows \"e : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"\n    and \"\\<And>f g c. \\<lbrakk> f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c; g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c; f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e \\<rbrakk> \\<Longrightarrow>\n      f = g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b &&&\n    (\\<And>f g c.\n        \\<lbrakk>f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n         g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n         f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e =\n         g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e\\<rbrakk>\n        \\<Longrightarrow> f = g)", "proof-"], ["proof (state)\ngoal (2 subgoals):\n 1. e : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n 2. \\<And>f g c.\n       \\<lbrakk>f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e =\n        g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e\\<rbrakk>\n       \\<Longrightarrow> f = g", "note is_monic_arrD = \n    assms(1)[unfolded is_epic_arr_def is_monic_arr_def smc_op_simps]"], ["proof (state)\nthis:\n  e : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<and>\n  (\\<forall>f g a.\n      f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a \\<longrightarrow>\n      g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a \\<longrightarrow>\n      e \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f =\n      e \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> g \\<longrightarrow>\n      f = g)\n\ngoal (2 subgoals):\n 1. e : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n 2. \\<And>f g c.\n       \\<lbrakk>f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e =\n        g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e\\<rbrakk>\n       \\<Longrightarrow> f = g", "from is_monic_arrD[THEN conjunct1]"], ["proof (chain)\npicking this:\n  e : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "show e: \"e : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\nusing this:\n  e : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. e : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "by simp"], ["proof (state)\nthis:\n  e : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<And>f g c.\n       \\<lbrakk>f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e =\n        g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e\\<rbrakk>\n       \\<Longrightarrow> f = g", "fix f g c"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f g c.\n       \\<lbrakk>f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e =\n        g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e\\<rbrakk>\n       \\<Longrightarrow> f = g", "assume prems: \"f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\" \"g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\" \"f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e\""], ["proof (state)\nthis:\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e =\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e\n\ngoal (1 subgoal):\n 1. \\<And>f g c.\n       \\<lbrakk>f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e =\n        g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e\\<rbrakk>\n       \\<Longrightarrow> f = g", "with semicategory_axioms e"], ["proof (chain)\npicking this:\n  semicategory \\<alpha> \\<CC>\n  e : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e =\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e", "have \"e \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f = e \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> g\""], ["proof (prove)\nusing this:\n  semicategory \\<alpha> \\<CC>\n  e : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e =\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e\n\ngoal (1 subgoal):\n 1. e \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f =\n    e \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> g", "by (cs_concl cs_simp: smc_op_simps cs_intro: smc_cs_intros)"], ["proof (state)\nthis:\n  e \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f =\n  e \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> g\n\ngoal (1 subgoal):\n 1. \\<And>f g c.\n       \\<lbrakk>f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e =\n        g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e\\<rbrakk>\n       \\<Longrightarrow> f = g", "then"], ["proof (chain)\npicking this:\n  e \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f =\n  e \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> g", "show \"f = g\""], ["proof (prove)\nusing this:\n  e \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f =\n  e \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> g\n\ngoal (1 subgoal):\n 1. f = g", "by (rule is_monic_arrD[THEN conjunct2, rule_format, OF prems(1,2)])"], ["proof (state)\nthis:\n  f = g\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in semicategory) is_epic_arrE[elim!]:\n  assumes \"e : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> b\"\n  obtains \"e : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"\n    and \"\\<And>f g c. \\<lbrakk> f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c; g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c; f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e \\<rbrakk> \\<Longrightarrow> \n      f = g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>e : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b;\n      \\<And>f g c.\n         \\<lbrakk>f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n          g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n          f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e =\n          g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e\\<rbrakk>\n         \\<Longrightarrow> f = g\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  e : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>e : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b;\n      \\<And>f g c.\n         \\<lbrakk>f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n          g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n          f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e =\n          g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> e\\<rbrakk>\n         \\<Longrightarrow> f = g\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["", "text\\<open>Elementary properties.\\<close>"], ["", "lemma (in semicategory) op_smc_is_epic_arr[smc_op_simps]: \n  \"f : b \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>op_smc \\<CC>\\<^esub> a \\<longleftrightarrow> f : a \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f : b \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>op_smc \\<CC>\\<^esub> a =\n    f : a \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>\\<CC>\\<^esub> b", "unfolding is_monic_arr_def is_epic_arr_def smc_op_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<and>\n     (\\<forall>fa g aa.\n         fa : aa \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a \\<longrightarrow>\n         g : aa \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a \\<longrightarrow>\n         f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> fa =\n         f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g \\<longrightarrow>\n         fa = g)) =\n    (f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<and>\n     (\\<forall>fa g aa.\n         fa : aa \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a \\<longrightarrow>\n         g : aa \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a \\<longrightarrow>\n         f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> fa =\n         f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g \\<longrightarrow>\n         fa = g))", ".."], ["", "lemma (in semicategory) op_smc_is_monic_arr[smc_op_simps]: \n  \"f : b \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>op_smc \\<CC>\\<^esub> a \\<longleftrightarrow> f : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f : b \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>op_smc \\<CC>\\<^esub> a =\n    f : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> b", "unfolding is_monic_arr_def is_epic_arr_def smc_op_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<and>\n     (\\<forall>fa g a.\n         fa : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a \\<longrightarrow>\n         g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a \\<longrightarrow>\n         f \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> fa =\n         f \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> g \\<longrightarrow>\n         fa = g)) =\n    (f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<and>\n     (\\<forall>fa g a.\n         fa : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a \\<longrightarrow>\n         g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a \\<longrightarrow>\n         f \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> fa =\n         f \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> g \\<longrightarrow>\n         fa = g))", ".."], ["", "lemma (in semicategory) smc_Comp_is_monic_arr[smc_arrow_cs_intros]:\n  assumes \"g : b \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>\\<CC>\\<^esub> c\" and \"f : a \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>\\<CC>\\<^esub> b\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f : a \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>\\<CC>\\<^esub> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    f : a \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>\\<CC>\\<^esub> c", "proof(intro is_monic_arrI)"], ["proof (state)\ngoal (2 subgoals):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n 2. \\<And>fa ga aa.\n       \\<lbrakk>fa : aa \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a;\n        ga : aa \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a;\n        g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        fa =\n        g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        ga\\<rbrakk>\n       \\<Longrightarrow> fa = ga", "from assms"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>\\<CC>\\<^esub> b", "show \"g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c", "by (auto intro: smc_cs_intros)"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n\ngoal (1 subgoal):\n 1. \\<And>fa ga aa.\n       \\<lbrakk>fa : aa \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a;\n        ga : aa \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a;\n        g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        fa =\n        g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        ga\\<rbrakk>\n       \\<Longrightarrow> fa = ga", "fix f' g' a'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>fa ga aa.\n       \\<lbrakk>fa : aa \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a;\n        ga : aa \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a;\n        g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        fa =\n        g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        ga\\<rbrakk>\n       \\<Longrightarrow> fa = ga", "assume f': \"f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\"\n    and g': \"g' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\"\n    and \"g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f' = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g'\""], ["proof (state)\nthis:\n  f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  g' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f' =\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  g'\n\ngoal (1 subgoal):\n 1. \\<And>fa ga aa.\n       \\<lbrakk>fa : aa \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a;\n        ga : aa \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a;\n        g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        fa =\n        g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        ga\\<rbrakk>\n       \\<Longrightarrow> fa = ga", "with assms"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>\\<CC>\\<^esub> b\n  f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  g' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f' =\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  g'", "have \"g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> (f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f') = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> (f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g')\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>\\<CC>\\<^esub> b\n  f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  g' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f' =\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  g'\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    (f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f') =\n    g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    (f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g')", "by (force simp: smc_Comp_assoc)"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  (f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f') =\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  (f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g')\n\ngoal (1 subgoal):\n 1. \\<And>fa ga aa.\n       \\<lbrakk>fa : aa \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a;\n        ga : aa \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a;\n        g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        fa =\n        g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        ga\\<rbrakk>\n       \\<Longrightarrow> fa = ga", "moreover"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  (f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f') =\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  (f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g')\n\ngoal (1 subgoal):\n 1. \\<And>fa ga aa.\n       \\<lbrakk>fa : aa \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a;\n        ga : aa \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a;\n        g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        fa =\n        g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        ga\\<rbrakk>\n       \\<Longrightarrow> fa = ga", "from assms"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>\\<CC>\\<^esub> b", "have \"f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\" \"f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b &&&\n    f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    g' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "by (auto intro: f' g' smc_cs_intros)"], ["proof (state)\nthis:\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  g' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<And>fa ga aa.\n       \\<lbrakk>fa : aa \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a;\n        ga : aa \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a;\n        g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        fa =\n        g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        ga\\<rbrakk>\n       \\<Longrightarrow> fa = ga", "ultimately"], ["proof (chain)\npicking this:\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  (f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f') =\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  (f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g')\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  g' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "have \"f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f' = f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g'\""], ["proof (prove)\nusing this:\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  (f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f') =\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  (f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g')\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  g' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f' =\n    f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g'", "using assms(1)"], ["proof (prove)\nusing this:\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  (f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f') =\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  (f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g')\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  g' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  g : b \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>\\<CC>\\<^esub> c\n\ngoal (1 subgoal):\n 1. f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f' =\n    f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g'", "by clarsimp"], ["proof (state)\nthis:\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f' =\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g'\n\ngoal (1 subgoal):\n 1. \\<And>fa ga aa.\n       \\<lbrakk>fa : aa \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a;\n        ga : aa \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a;\n        g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        fa =\n        g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        ga\\<rbrakk>\n       \\<Longrightarrow> fa = ga", "with assms f' g'"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>\\<CC>\\<^esub> b\n  f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  g' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f' =\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g'", "show \"f' = g'\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>\\<CC>\\<^esub> b\n  f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  g' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f' =\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g'\n\ngoal (1 subgoal):\n 1. f' = g'", "by clarsimp"], ["proof (state)\nthis:\n  f' = g'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [smc_arrow_cs_intros] = semicategory.smc_Comp_is_monic_arr"], ["", "lemma (in semicategory) smc_Comp_is_epic_arr[smc_arrow_cs_intros]: \n  assumes \"g : b \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> c\" and \"f : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> b\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    f : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> c", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    f : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> c", "from assms op_smc_is_arr"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> b\n  ?f : ?b \\<mapsto>\\<^bsub>op_smc ?\\<CC>\\<^esub> ?a =\n  ?f : ?a \\<mapsto>\\<^bsub>?\\<CC>\\<^esub> ?b", "have \"g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\" \"f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> b\n  ?f : ?b \\<mapsto>\\<^bsub>op_smc ?\\<CC>\\<^esub> ?a =\n  ?f : ?a \\<mapsto>\\<^bsub>?\\<CC>\\<^esub> ?b\n\ngoal (1 subgoal):\n 1. g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c &&&\n    f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "unfolding is_epic_arr_def"], ["proof (prove)\nusing this:\n  g : c \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>op_smc \\<CC>\\<^esub> b\n  f : b \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>op_smc \\<CC>\\<^esub> a\n  ?f : ?b \\<mapsto>\\<^bsub>op_smc ?\\<CC>\\<^esub> ?a =\n  ?f : ?a \\<mapsto>\\<^bsub>?\\<CC>\\<^esub> ?b\n\ngoal (1 subgoal):\n 1. g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c &&&\n    f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "by auto"], ["proof (state)\nthis:\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    f : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> c", "with semicategory_axioms"], ["proof (chain)\npicking this:\n  semicategory \\<alpha> \\<CC>\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "have \"f \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> g = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\""], ["proof (prove)\nusing this:\n  semicategory \\<alpha> \\<CC>\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. f \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> g =\n    g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f", "by (cs_concl cs_simp: smc_op_simps)"], ["proof (state)\nthis:\n  f \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> g =\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    f : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> c", "with \n    semicategory.smc_Comp_is_monic_arr[\n      OF semicategory_op,\n      OF assms(2,1)[unfolded is_epic_arr_def],\n      folded is_epic_arr_def\n      ]"], ["proof (chain)\npicking this:\n  f \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n  g : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> c\n  f \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> g =\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f", "show ?thesis"], ["proof (prove)\nusing this:\n  f \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n  g : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> c\n  f \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> g =\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    f : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> c", "by auto"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> c\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [smc_arrow_cs_intros] = semicategory.smc_Comp_is_epic_arr"], ["", "lemma (in semicategory) smc_Comp_is_monic_arr_is_monic_arr:\n  assumes \"g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\" and \"f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\" and \"g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f : a \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>\\<CC>\\<^esub> c\"\n  shows \"f : a \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f : a \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>\\<CC>\\<^esub> b", "proof(intro is_monic_arrI)"], ["proof (state)\ngoal (2 subgoals):\n 1. f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n 2. \\<And>fa g aa.\n       \\<lbrakk>fa : aa \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a;\n        g : aa \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a;\n        f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> fa =\n        f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> fa = g", "fix f' g' a'"], ["proof (state)\ngoal (2 subgoals):\n 1. f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n 2. \\<And>fa g aa.\n       \\<lbrakk>fa : aa \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a;\n        g : aa \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a;\n        f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> fa =\n        f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> fa = g", "assume f': \"f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\" \n    and g': \"g' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\" \n    and f'gg'g: \"f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f' = f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g'\""], ["proof (state)\nthis:\n  f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  g' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f' =\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g'\n\ngoal (2 subgoals):\n 1. f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n 2. \\<And>fa g aa.\n       \\<lbrakk>fa : aa \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a;\n        g : aa \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a;\n        f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> fa =\n        f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> fa = g", "from assms(1,2) f' g'"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  g' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a", "have \"(g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f) \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f' = (g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f) \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g'\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  g' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    f' =\n    g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    g'", "by (auto simp: smc_Comp_assoc f'gg'g)"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f' =\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  g'\n\ngoal (2 subgoals):\n 1. f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n 2. \\<And>fa g aa.\n       \\<lbrakk>fa : aa \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a;\n        g : aa \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a;\n        f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> fa =\n        f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g\\<rbrakk>\n       \\<Longrightarrow> fa = g", "with assms(3) f' g'"], ["proof (chain)\npicking this:\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f : a \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>\\<CC>\\<^esub> c\n  f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  g' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f' =\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  g'", "show \"f' = g'\""], ["proof (prove)\nusing this:\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f : a \\<mapsto>\\<^sub>m\\<^sub>o\\<^sub>n\\<^bsub>\\<CC>\\<^esub> c\n  f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  g' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f' =\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  g'\n\ngoal (1 subgoal):\n 1. f' = g'", "by clarsimp"], ["proof (state)\nthis:\n  f' = g'\n\ngoal (1 subgoal):\n 1. f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "qed (simp add: assms(2))"], ["", "lemma (in semicategory) smc_Comp_is_epic_arr_is_epic_arr:\n  assumes \"g : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\" and \"f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\" and \"f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> c\"\n  shows \"f : b \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f : b \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> c", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. f : b \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> c", "from assms"], ["proof (chain)\npicking this:\n  g : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  g : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> c", "have \"g : b \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> a\" \"f : c \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> b\""], ["proof (prove)\nusing this:\n  g : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  g : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> c\n\ngoal (1 subgoal):\n 1. g : b \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> a &&&\n    f : c \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> b", "unfolding smc_op_simps"], ["proof (prove)\nusing this:\n  g : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  g : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> c\n\ngoal (1 subgoal):\n 1. g : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b &&&\n    f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c", "by simp_all"], ["proof (state)\nthis:\n  g : b \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> a\n  f : c \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. f : b \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> c", "moreover"], ["proof (state)\nthis:\n  g : b \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> a\n  f : c \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. f : b \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> c", "from semicategory_axioms assms"], ["proof (chain)\npicking this:\n  semicategory \\<alpha> \\<CC>\n  g : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  g : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> c", "have \"g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> c\""], ["proof (prove)\nusing this:\n  semicategory \\<alpha> \\<CC>\n  g : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  g : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> c\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n    f : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> c", "by (cs_concl cs_simp: smc_op_simps)"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n  f : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> c\n\ngoal (1 subgoal):\n 1. f : b \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> c", "ultimately"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> a\n  f : c \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> b\n  g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n  f : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> c", "show ?thesis"], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> a\n  f : c \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> b\n  g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n  f : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> c\n\ngoal (1 subgoal):\n 1. f : b \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> c", "using \n      semicategory.smc_Comp_is_monic_arr_is_monic_arr[\n        OF semicategory_op, folded is_epic_arr_def\n        ]"], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> a\n  f : c \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> b\n  g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n  f : a \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> c\n  \\<lbrakk>?g : ?b \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> ?c;\n   ?f : ?a \\<mapsto>\\<^bsub>op_smc \\<CC>\\<^esub> ?b;\n   ?g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub>\n   ?f : ?c \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> ?a\\<rbrakk>\n  \\<Longrightarrow> ?f : ?b \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> ?a\n\ngoal (1 subgoal):\n 1. f : b \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> c", "by auto"], ["proof (state)\nthis:\n  f : b \\<mapsto>\\<^sub>e\\<^sub>p\\<^sub>i\\<^bsub>\\<CC>\\<^esub> c\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Idempotent arrow\\<close>"], ["", "text\\<open>See Chapter I-5 in \\cite{mac_lane_categories_2010}.\\<close>"], ["", "definition is_idem_arr :: \"V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> bool\"\n  where \"is_idem_arr \\<CC> b f \\<longleftrightarrow> f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<and> f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f = f\""], ["", "syntax \"_is_idem_arr\" :: \"V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> bool\" (\\<open>_ : \\<mapsto>\\<^sub>i\\<^sub>d\\<^sub>e\\<index> _\\<close> [51, 51] 51)"], ["", "translations \"f : \\<mapsto>\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<CC>\\<^esub> b\" \\<rightleftharpoons> \"CONST is_idem_arr \\<CC> b f\""], ["", "text\\<open>Rules.\\<close>"], ["", "mk_ide rf is_idem_arr_def\n  |intro is_idem_arrI|\n  |dest is_idem_arrD[dest]|\n  |elim is_idem_arrE[elim!]|"], ["", "lemmas [smc_cs_simps] = is_idem_arrD(2)"], ["", "text\\<open>Elementary properties.\\<close>"], ["", "lemma (in semicategory) op_smc_is_idem_arr[smc_op_simps]: \n  \"f : \\<mapsto>\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>op_smc \\<CC>\\<^esub> b \\<longleftrightarrow> f : \\<mapsto>\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f : \\<mapsto>\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>op_smc \\<CC>\\<^esub> b =\n    f : \\<mapsto>\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<CC>\\<^esub> b", "using op_smc_Comp"], ["proof (prove)\nusing this:\n  \\<lbrakk>?f : ?b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> ?c;\n   ?g : ?a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> ?b\\<rbrakk>\n  \\<Longrightarrow> ?g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> ?f =\n                    ?f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> ?g\n\ngoal (1 subgoal):\n 1. f : \\<mapsto>\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>op_smc \\<CC>\\<^esub> b =\n    f : \\<mapsto>\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<CC>\\<^esub> b", "unfolding is_idem_arr_def smc_op_simps"], ["proof (prove)\nusing this:\n  \\<lbrakk>?f : ?b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> ?c;\n   ?g : ?a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> ?b\\<rbrakk>\n  \\<Longrightarrow> ?g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> ?f =\n                    ?f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> ?g\n\ngoal (1 subgoal):\n 1. (f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<and>\n     f \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f = f) =\n    (f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<and>\n     f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f = f)", "by auto"], ["", "subsection\\<open>Terminal object and initial object\\<close>"], ["", "text\\<open>See Chapter I-5 in \\cite{mac_lane_categories_2010}.\\<close>"], ["", "definition obj_terminal :: \"V \\<Rightarrow> V \\<Rightarrow> bool\"\n  where \"obj_terminal \\<CC> t \\<longleftrightarrow> \n    t \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr> \\<and> (\\<forall>a. a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr> \\<longrightarrow> (\\<exists>!f. f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> t))\""], ["", "definition obj_initial :: \"V \\<Rightarrow> V \\<Rightarrow> bool\"\n  where \"obj_initial \\<CC> \\<equiv> obj_terminal (op_smc \\<CC>)\""], ["", "text\\<open>Rules.\\<close>"], ["", "mk_ide rf obj_terminal_def\n  |intro obj_terminalI|\n  |dest obj_terminalD[dest]|\n  |elim obj_terminalE[elim]|"], ["", "lemma obj_initialI:\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\" and \"\\<And>b. b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr> \\<Longrightarrow> \\<exists>!f. f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\" \n  shows \"obj_initial \\<CC> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. obj_initial \\<CC> a", "unfolding obj_initial_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. obj_terminal (op_smc \\<CC>) a", "by (simp add: obj_terminalI[of _ \\<open>op_smc \\<CC>\\<close>, unfolded smc_op_simps, OF assms])"], ["", "lemma obj_initialD[dest]:\n  assumes \"obj_initial \\<CC> a\" \n  shows \"a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\" and \"\\<And>b. b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr> \\<Longrightarrow> \\<exists>!f. f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr> &&&\n    (\\<And>b.\n        b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n        \\<exists>!f. f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b)", "by \n    (\n      simp_all add: \n        obj_terminalD[OF assms[unfolded obj_initial_def], unfolded smc_op_simps]\n    )"], ["", "lemma obj_initialE[elim]:\n  assumes \"obj_initial \\<CC> a\" \n  obtains \"a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\" and \"\\<And>b. b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr> \\<Longrightarrow> \\<exists>!f. f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>;\n      \\<And>b.\n         b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n         \\<exists>!f. f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  obj_initial \\<CC> a\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>;\n      \\<And>b.\n         b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n         \\<exists>!f. f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: obj_initialD)"], ["", "text\\<open>Elementary properties.\\<close>"], ["", "lemma op_smc_obj_initial[smc_op_simps]: \n  \"obj_initial (op_smc \\<CC>) = obj_terminal \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. obj_initial (op_smc \\<CC>) = obj_terminal \\<CC>", "unfolding obj_initial_def obj_terminal_def smc_op_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t.\n        t \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr> \\<and>\n        (\\<forall>a.\n            a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr> \\<longrightarrow>\n            (\\<exists>!f. f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> t))) =\n    (\\<lambda>t.\n        t \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr> \\<and>\n        (\\<forall>a.\n            a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr> \\<longrightarrow>\n            Ex1 (is_arr \\<CC> a t)))", ".."], ["", "lemma op_smc_obj_terminal[smc_op_simps]: \n  \"obj_terminal (op_smc \\<CC>) = obj_initial \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. obj_terminal (op_smc \\<CC>) = obj_initial \\<CC>", "unfolding obj_initial_def obj_terminal_def smc_op_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t.\n        t \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr> \\<and>\n        (\\<forall>a.\n            a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr> \\<longrightarrow>\n            Ex1 (is_arr \\<CC> t a))) =\n    (\\<lambda>t.\n        t \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr> \\<and>\n        (\\<forall>a.\n            a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr> \\<longrightarrow>\n            Ex1 (is_arr \\<CC> t a)))", ".."], ["", "subsection\\<open>Null object\\<close>"], ["", "text\\<open>See Chapter I-5 in \\cite{mac_lane_categories_2010}.\\<close>"], ["", "definition obj_null :: \"V \\<Rightarrow> V \\<Rightarrow> bool\"\n  where \"obj_null \\<CC> a \\<longleftrightarrow> obj_initial \\<CC> a \\<and> obj_terminal \\<CC> a\""], ["", "text\\<open>Rules.\\<close>"], ["", "mk_ide rf obj_null_def\n  |intro obj_nullI|\n  |dest obj_nullD[dest]|\n  |elim obj_nullE[elim]|"], ["", "text\\<open>Elementary properties.\\<close>"], ["", "lemma op_smc_obj_null[smc_op_simps]: \"obj_null (op_smc \\<CC>) a = obj_null \\<CC> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. obj_null (op_smc \\<CC>) a = obj_null \\<CC> a", "unfolding obj_null_def smc_op_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. (obj_terminal \\<CC> a \\<and> obj_initial \\<CC> a) =\n    (obj_initial \\<CC> a \\<and> obj_terminal \\<CC> a)", "by auto"], ["", "subsection\\<open>Zero arrow\\<close>"], ["", "definition is_zero_arr :: \"V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> bool\"\n  where \"is_zero_arr \\<CC> a b h \\<longleftrightarrow>\n    (\\<exists>z g f. obj_null \\<CC> z \\<and> h = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f \\<and> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> z \\<and> g : z \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b)\""], ["", "syntax \"_is_zero_arr\" :: \"V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> bool\"\n  (\\<open>_ : _ \\<mapsto>\\<^sub>0\\<index> _\\<close> [51, 51, 51] 51)"], ["", "translations \"h : a \\<mapsto>\\<^sub>0\\<^bsub>\\<CC>\\<^esub> b\" \\<rightleftharpoons> \"CONST is_zero_arr \\<CC> a b h\""], ["", "text\\<open>Rules.\\<close>"], ["", "lemma is_zero_arrI:\n  assumes \"obj_null \\<CC> z\" \n    and \"h = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\" \n    and \"f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> z\" \n    and \"g : z \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"\n  shows \"h : a \\<mapsto>\\<^sub>0\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h : a \\<mapsto>\\<^sub>0\\<^bsub>\\<CC>\\<^esub> b", "using assms"], ["proof (prove)\nusing this:\n  obj_null \\<CC> z\n  h = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> z\n  g : z \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. h : a \\<mapsto>\\<^sub>0\\<^bsub>\\<CC>\\<^esub> b", "unfolding is_zero_arr_def"], ["proof (prove)\nusing this:\n  obj_null \\<CC> z\n  h = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> z\n  g : z \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<exists>z g f.\n       obj_null \\<CC> z \\<and>\n       h = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f \\<and>\n       f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> z \\<and>\n       g : z \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "by auto"], ["", "lemma is_zero_arrD[dest]:\n  assumes \"h : a \\<mapsto>\\<^sub>0\\<^bsub>\\<CC>\\<^esub> b\"\n  shows \"\\<exists>z g f. obj_null \\<CC> z \\<and> h = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f \\<and> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> z \\<and> g : z \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>z g f.\n       obj_null \\<CC> z \\<and>\n       h = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f \\<and>\n       f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> z \\<and>\n       g : z \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "using assms"], ["proof (prove)\nusing this:\n  h : a \\<mapsto>\\<^sub>0\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<exists>z g f.\n       obj_null \\<CC> z \\<and>\n       h = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f \\<and>\n       f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> z \\<and>\n       g : z \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "unfolding is_zero_arr_def"], ["proof (prove)\nusing this:\n  \\<exists>z g f.\n     obj_null \\<CC> z \\<and>\n     h = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f \\<and>\n     f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> z \\<and>\n     g : z \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<exists>z g f.\n       obj_null \\<CC> z \\<and>\n       h = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f \\<and>\n       f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> z \\<and>\n       g : z \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "by simp"], ["", "lemma is_zero_arrE[elim]:\n  assumes \"h : a \\<mapsto>\\<^sub>0\\<^bsub>\\<CC>\\<^esub> b\"\n  obtains z g f \n    where \"obj_null \\<CC> z\"\n      and \"h = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\" \n      and \"f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> z\" \n      and \"g : z \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z g f.\n        \\<lbrakk>obj_null \\<CC> z;\n         h = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f;\n         f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> z;\n         g : z \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  h : a \\<mapsto>\\<^sub>0\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. (\\<And>z g f.\n        \\<lbrakk>obj_null \\<CC> z;\n         h = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f;\n         f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> z;\n         g : z \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["", "text\\<open>Elementary properties.\\<close>"], ["", "lemma (in semicategory) op_smc_is_zero_arr[smc_op_simps]: \n  \"f : b \\<mapsto>\\<^sub>0\\<^bsub>op_smc \\<CC>\\<^esub> a \\<longleftrightarrow> f : a \\<mapsto>\\<^sub>0\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f : b \\<mapsto>\\<^sub>0\\<^bsub>op_smc \\<CC>\\<^esub> a =\n    f : a \\<mapsto>\\<^sub>0\\<^bsub>\\<CC>\\<^esub> b", "using op_smc_Comp"], ["proof (prove)\nusing this:\n  \\<lbrakk>?f : ?b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> ?c;\n   ?g : ?a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> ?b\\<rbrakk>\n  \\<Longrightarrow> ?g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> ?f =\n                    ?f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> ?g\n\ngoal (1 subgoal):\n 1. f : b \\<mapsto>\\<^sub>0\\<^bsub>op_smc \\<CC>\\<^esub> a =\n    f : a \\<mapsto>\\<^sub>0\\<^bsub>\\<CC>\\<^esub> b", "unfolding is_zero_arr_def smc_op_simps"], ["proof (prove)\nusing this:\n  \\<lbrakk>?f : ?b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> ?c;\n   ?g : ?a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> ?b\\<rbrakk>\n  \\<Longrightarrow> ?g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> ?f =\n                    ?f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> ?g\n\ngoal (1 subgoal):\n 1. (\\<exists>z g fa.\n        obj_null \\<CC> z \\<and>\n        f = g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> fa \\<and>\n        fa : z \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<and>\n        g : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> z) =\n    (\\<exists>z g fa.\n        obj_null \\<CC> z \\<and>\n        f = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> fa \\<and>\n        fa : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> z \\<and>\n        g : z \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b)", "by metis"], ["", "lemma (in semicategory) smc_is_zero_arr_Comp_right:\n  assumes \"h : b \\<mapsto>\\<^sub>0\\<^bsub>\\<CC>\\<^esub> c\" and \"h' : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"\n  shows \"h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> h' : a \\<mapsto>\\<^sub>0\\<^bsub>\\<CC>\\<^esub> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    h' : a \\<mapsto>\\<^sub>0\\<^bsub>\\<CC>\\<^esub> c", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    h' : a \\<mapsto>\\<^sub>0\\<^bsub>\\<CC>\\<^esub> c", "from assms(1)"], ["proof (chain)\npicking this:\n  h : b \\<mapsto>\\<^sub>0\\<^bsub>\\<CC>\\<^esub> c", "obtain z g f  \n    where \"obj_null \\<CC> z\" \n      and \"h = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\" \n      and \"f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> z\" \n      and \"g : z \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\""], ["proof (prove)\nusing this:\n  h : b \\<mapsto>\\<^sub>0\\<^bsub>\\<CC>\\<^esub> c\n\ngoal (1 subgoal):\n 1. (\\<And>z g f.\n        \\<lbrakk>obj_null \\<CC> z;\n         h = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f;\n         f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> z;\n         g : z \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  obj_null \\<CC> z\n  h = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> z\n  g : z \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n\ngoal (1 subgoal):\n 1. h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    h' : a \\<mapsto>\\<^sub>0\\<^bsub>\\<CC>\\<^esub> c", "with assms"], ["proof (chain)\npicking this:\n  h : b \\<mapsto>\\<^sub>0\\<^bsub>\\<CC>\\<^esub> c\n  h' : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  obj_null \\<CC> z\n  h = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> z\n  g : z \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c", "show ?thesis"], ["proof (prove)\nusing this:\n  h : b \\<mapsto>\\<^sub>0\\<^bsub>\\<CC>\\<^esub> c\n  h' : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  obj_null \\<CC> z\n  h = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> z\n  g : z \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n\ngoal (1 subgoal):\n 1. h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    h' : a \\<mapsto>\\<^sub>0\\<^bsub>\\<CC>\\<^esub> c", "by (auto simp: smc_cs_simps intro: is_zero_arrI smc_cs_intros)"], ["proof (state)\nthis:\n  h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  h' : a \\<mapsto>\\<^sub>0\\<^bsub>\\<CC>\\<^esub> c\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [smc_arrow_cs_intros] = semicategory.smc_is_zero_arr_Comp_right"], ["", "lemma (in semicategory) smc_is_zero_arr_Comp_left:\n  assumes \"h' : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\" and \"h : a \\<mapsto>\\<^sub>0\\<^bsub>\\<CC>\\<^esub> b\" \n  shows \"h' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> h : a \\<mapsto>\\<^sub>0\\<^bsub>\\<CC>\\<^esub> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    h : a \\<mapsto>\\<^sub>0\\<^bsub>\\<CC>\\<^esub> c", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. h' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    h : a \\<mapsto>\\<^sub>0\\<^bsub>\\<CC>\\<^esub> c", "from assms(2)"], ["proof (chain)\npicking this:\n  h : a \\<mapsto>\\<^sub>0\\<^bsub>\\<CC>\\<^esub> b", "obtain z g f \n    where \"obj_null \\<CC> z\" \n      and \"h = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\" \n      and \"f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> z\" \n      and \"g : z \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\nusing this:\n  h : a \\<mapsto>\\<^sub>0\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. (\\<And>z g f.\n        \\<lbrakk>obj_null \\<CC> z;\n         h = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f;\n         f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> z;\n         g : z \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  obj_null \\<CC> z\n  h = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> z\n  g : z \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. h' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    h : a \\<mapsto>\\<^sub>0\\<^bsub>\\<CC>\\<^esub> c", "with assms(1)"], ["proof (chain)\npicking this:\n  h' : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  obj_null \\<CC> z\n  h = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> z\n  g : z \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "show ?thesis"], ["proof (prove)\nusing this:\n  h' : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  obj_null \\<CC> z\n  h = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> z\n  g : z \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. h' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    h : a \\<mapsto>\\<^sub>0\\<^bsub>\\<CC>\\<^esub> c", "by (intro is_zero_arrI[of _ _ _ \\<open>h' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g\\<close>]) \n      (auto simp: smc_Comp_assoc intro: is_zero_arrI smc_cs_intros)"], ["proof (state)\nthis:\n  h' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  h : a \\<mapsto>\\<^sub>0\\<^bsub>\\<CC>\\<^esub> c\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [smc_arrow_cs_intros] = semicategory.smc_is_zero_arr_Comp_left"], ["", "text\\<open>\\newpage\\<close>"], ["", "end"]]}