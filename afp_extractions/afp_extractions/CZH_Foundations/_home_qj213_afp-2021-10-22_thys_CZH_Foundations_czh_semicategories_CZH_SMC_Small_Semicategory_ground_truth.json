{"file_name": "/home/qj213/afp-2021-10-22/thys/CZH_Foundations/czh_semicategories/CZH_SMC_Small_Semicategory.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CZH_Foundations", "problem_names": ["lemmas [smc_cs_simps] = \n  tiny_semicategory.tiny_smc_length\n  tiny_semicategory.tiny_smc_assoc", "lemmas [slicing_intros] = \n  tiny_semicategory.tiny_smc_Comp_is_arr", "lemma (in tiny_semicategory) tiny_semicategory_axioms'[smc_small_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\"\n  shows \"tiny_semicategory \\<alpha>' \\<CC>\"", "lemma tiny_semicategoryI': \n  assumes \"semicategory \\<alpha> \\<CC>\" and \"\\<CC>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" and \"\\<CC>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"tiny_semicategory \\<alpha> \\<CC>\"", "lemma tiny_semicategoryI'':\n  assumes \"\\<Z> \\<alpha>\"\n    and \"vfsequence \\<CC>\"\n    and \"vsv (\\<CC>\\<lparr>Comp\\<rparr>)\"\n    and \"vcard \\<CC> = 5\\<^sub>\\<nat>\"\n    and \"vsv (\\<CC>\\<lparr>Dom\\<rparr>)\"\n    and \"vsv (\\<CC>\\<lparr>Cod\\<rparr>)\"\n    and \"\\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>) = \\<CC>\\<lparr>Arr\\<rparr>\"\n    and \"\\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n    and \"\\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>) = \\<CC>\\<lparr>Arr\\<rparr>\"\n    and \"\\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n    and \"\\<And>gf. gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>) \\<longleftrightarrow>\n      (\\<exists>g f b c a. gf = [g, f]\\<^sub>\\<circ> \\<and> g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b)\"\n    and \"\\<And>b c g a f. \\<lbrakk> g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c; f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<rbrakk> \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\"\n    and \"\\<And>c d h b g a f. \\<lbrakk> h : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d; g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c; f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<rbrakk> \\<Longrightarrow>\n        (h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g) \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f = h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> (g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f)\"\n    and \"\\<CC>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" \n    and \"\\<CC>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"tiny_semicategory \\<alpha> \\<CC>\"", "lemmas_with [unfolded slicing_simps]:\n  tiny_smc_Obj_in_Vset[smc_small_cs_intros] = dg.tiny_dg_Obj_in_Vset\n  and tiny_smc_Arr_in_Vset[smc_small_cs_intros] = dg.tiny_dg_Arr_in_Vset\n  and tiny_smc_Dom_in_Vset[smc_small_cs_intros] = dg.tiny_dg_Dom_in_Vset\n  and tiny_smc_Cod_in_Vset[smc_small_cs_intros] = dg.tiny_dg_Cod_in_Vset", "lemmas (in tiny_semicategory) tiny_dg_semicategory = semicategory_axioms", "lemmas [smc_small_cs_intros] = tiny_semicategory.tiny_dg_semicategory", "lemma (in tiny_semicategory) tiny_smc_Comp_in_Vset: \"\\<CC>\\<lparr>Comp\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"", "lemma (in tiny_semicategory) tiny_smc_in_Vset: \"\\<CC> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"", "lemma small_tiny_semicategories[simp]: \"small {\\<CC>. tiny_semicategory \\<alpha> \\<CC>}\"", "lemma tiny_semicategories_vsubset_Vset: \n  \"set {\\<CC>. tiny_semicategory \\<alpha> \\<CC>} \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\"", "lemma (in semicategory) smc_tiny_semicategory_if_ge_Limit:\n  assumes \"\\<Z> \\<beta>\" and \"\\<alpha> \\<in>\\<^sub>\\<circ> \\<beta>\"\n  shows \"tiny_semicategory \\<beta> \\<CC>\"", "lemma (in tiny_semicategory) tiny_semicategory_op: \n  \"tiny_semicategory \\<alpha> (op_smc \\<CC>)\"", "lemmas tiny_semicategory_op[smc_op_intros] = \n  tiny_semicategory.tiny_semicategory_op", "lemmas [smc_cs_simps] = \n  finite_semicategory.fin_smc_length\n  finite_semicategory.fin_smc_assoc", "lemmas [slicing_intros] = \n  finite_semicategory.fin_smc_Comp_is_arr", "lemma (in finite_semicategory) finite_semicategory_axioms'[smc_small_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\"\n  shows \"finite_semicategory \\<alpha>' \\<CC>\"", "lemma finite_semicategoryI': \n  assumes \"semicategory \\<alpha> \\<CC>\" and \"vfinite (\\<CC>\\<lparr>Obj\\<rparr>)\" and \"vfinite (\\<CC>\\<lparr>Arr\\<rparr>)\"\n  shows \"finite_semicategory \\<alpha> \\<CC>\"", "lemma finite_semicategoryI'': \n  assumes \"tiny_semicategory \\<alpha> \\<CC>\" and \"vfinite (\\<CC>\\<lparr>Obj\\<rparr>)\" and \"vfinite (\\<CC>\\<lparr>Arr\\<rparr>)\"\n  shows \"finite_semicategory \\<alpha> \\<CC>\"", "lemmas_with [unfolded slicing_simps]:\n  fin_smc_Obj_vfinite[smc_small_cs_intros] = dg.fin_dg_Obj_vfinite\n  and fin_smc_Arr_vfinite[smc_small_cs_intros] = dg.fin_dg_Arr_vfinite", "lemmas (in finite_semicategory) fin_smc_tiny_semicategory = \n  tiny_semicategory_axioms", "lemmas [smc_small_cs_intros] = finite_semicategory.fin_smc_tiny_semicategory", "lemma (in finite_semicategory) fin_smc_in_Vset: \"\\<CC> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"", "lemma small_finite_semicategories[simp]: \"small {\\<CC>. finite_semicategory \\<alpha> \\<CC>}\"", "lemma finite_semicategories_vsubset_Vset: \n  \"set {\\<CC>. finite_semicategory \\<alpha> \\<CC>} \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\"", "lemma (in finite_semicategory) finite_semicategory_op: \n  \"finite_semicategory \\<alpha> (op_smc \\<CC>)\"", "lemmas finite_semicategory_op[smc_op_intros] = \n  finite_semicategory.finite_semicategory_op"], "translations": [["", "lemmas [smc_cs_simps] = \n  tiny_semicategory.tiny_smc_length\n  tiny_semicategory.tiny_smc_assoc"], ["", "lemmas [slicing_intros] = \n  tiny_semicategory.tiny_smc_Comp_is_arr"], ["", "text\\<open>Rules.\\<close>"], ["", "lemma (in tiny_semicategory) tiny_semicategory_axioms'[smc_small_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\"\n  shows \"tiny_semicategory \\<alpha>' \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tiny_semicategory \\<alpha>' \\<CC>", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. tiny_semicategory \\<alpha> \\<CC>", "by (rule tiny_semicategory_axioms)"], ["", "mk_ide rf tiny_semicategory_def[unfolded tiny_semicategory_axioms_def]\n  |intro tiny_semicategoryI|\n  |dest tiny_semicategoryD[dest]|\n  |elim tiny_semicategoryE[elim]|"], ["", "lemma tiny_semicategoryI': \n  assumes \"semicategory \\<alpha> \\<CC>\" and \"\\<CC>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" and \"\\<CC>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"tiny_semicategory \\<alpha> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tiny_semicategory \\<alpha> \\<CC>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. tiny_semicategory \\<alpha> \\<CC>", "interpret semicategory \\<alpha> \\<CC>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<CC>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. tiny_semicategory \\<alpha> \\<CC>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. tiny_semicategory \\<alpha> \\<CC>", "proof(intro tiny_semicategoryI)"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence \\<CC>\n 3. vsv (\\<CC>\\<lparr>Comp\\<rparr>)\n 4. vcard \\<CC> = 5\\<^sub>\\<nat>\n 5. tiny_digraph \\<alpha> (smc_dg \\<CC>)\n 6. \\<And>gf.\n       (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (\\<CC>\\<lparr>Comp\\<rparr>)) =\n       (\\<exists>g f b c a.\n           gf = [g, f]\\<^sub>\\<circ> \\<and>\n           g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n           f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b)\n 7. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n 8. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f)", "show \"vfsequence \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence \\<CC>", "by (simp add: vfsequence_axioms)"], ["proof (state)\nthis:\n  vfsequence \\<CC>\n\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (\\<CC>\\<lparr>Comp\\<rparr>)\n 3. vcard \\<CC> = 5\\<^sub>\\<nat>\n 4. tiny_digraph \\<alpha> (smc_dg \\<CC>)\n 5. \\<And>gf.\n       (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (\\<CC>\\<lparr>Comp\\<rparr>)) =\n       (\\<exists>g f b c a.\n           gf = [g, f]\\<^sub>\\<circ> \\<and>\n           g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n           f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b)\n 6. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n 7. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f)", "from assms"], ["proof (chain)\npicking this:\n  semicategory \\<alpha> \\<CC>\n  \\<CC>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<CC>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"tiny_digraph \\<alpha> (smc_dg \\<CC>)\""], ["proof (prove)\nusing this:\n  semicategory \\<alpha> \\<CC>\n  \\<CC>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<CC>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. tiny_digraph \\<alpha> (smc_dg \\<CC>)", "by (intro tiny_digraphI') (auto simp: slicing_simps)"], ["proof (state)\nthis:\n  tiny_digraph \\<alpha> (smc_dg \\<CC>)\n\ngoal (6 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (\\<CC>\\<lparr>Comp\\<rparr>)\n 3. vcard \\<CC> = 5\\<^sub>\\<nat>\n 4. \\<And>gf.\n       (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (\\<CC>\\<lparr>Comp\\<rparr>)) =\n       (\\<exists>g f b c a.\n           gf = [g, f]\\<^sub>\\<circ> \\<and>\n           g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n           f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b)\n 5. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n 6. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f)", "qed (auto simp: smc_cs_simps intro: smc_cs_intros)"], ["proof (state)\nthis:\n  tiny_semicategory \\<alpha> \\<CC>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tiny_semicategoryI'':\n  assumes \"\\<Z> \\<alpha>\"\n    and \"vfsequence \\<CC>\"\n    and \"vsv (\\<CC>\\<lparr>Comp\\<rparr>)\"\n    and \"vcard \\<CC> = 5\\<^sub>\\<nat>\"\n    and \"vsv (\\<CC>\\<lparr>Dom\\<rparr>)\"\n    and \"vsv (\\<CC>\\<lparr>Cod\\<rparr>)\"\n    and \"\\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>) = \\<CC>\\<lparr>Arr\\<rparr>\"\n    and \"\\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n    and \"\\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>) = \\<CC>\\<lparr>Arr\\<rparr>\"\n    and \"\\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n    and \"\\<And>gf. gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>) \\<longleftrightarrow>\n      (\\<exists>g f b c a. gf = [g, f]\\<^sub>\\<circ> \\<and> g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b)\"\n    and \"\\<And>b c g a f. \\<lbrakk> g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c; f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<rbrakk> \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\"\n    and \"\\<And>c d h b g a f. \\<lbrakk> h : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d; g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c; f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<rbrakk> \\<Longrightarrow>\n        (h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g) \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f = h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> (g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f)\"\n    and \"\\<CC>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" \n    and \"\\<CC>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"tiny_semicategory \\<alpha> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tiny_semicategory \\<alpha> \\<CC>", "by (intro tiny_semicategoryI tiny_digraphI, unfold slicing_simps) \n    (simp_all add: smc_dg_def nat_omega_simps assms)"], ["", "text\\<open>Slicing.\\<close>"], ["", "context tiny_semicategory\nbegin"], ["", "interpretation dg: tiny_digraph \\<alpha> \\<open>smc_dg \\<CC>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. tiny_digraph \\<alpha> (smc_dg \\<CC>)", "by (rule tiny_smc_tiny_digraph)"], ["", "lemmas_with [unfolded slicing_simps]:\n  tiny_smc_Obj_in_Vset[smc_small_cs_intros] = dg.tiny_dg_Obj_in_Vset\n  and tiny_smc_Arr_in_Vset[smc_small_cs_intros] = dg.tiny_dg_Arr_in_Vset\n  and tiny_smc_Dom_in_Vset[smc_small_cs_intros] = dg.tiny_dg_Dom_in_Vset\n  and tiny_smc_Cod_in_Vset[smc_small_cs_intros] = dg.tiny_dg_Cod_in_Vset"], ["", "end"], ["", "text\\<open>Elementary properties.\\<close>"], ["", "sublocale tiny_semicategory \\<subseteq> semicategory"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<CC>", "by (rule semicategoryI)\n    (\n      auto \n        simp: \n          vfsequence_axioms\n          tiny_digraph.tiny_dg_digraph \n          tiny_smc_tiny_digraph\n          tiny_smc_Comp_vdomain         \n        intro: smc_cs_intros smc_cs_simps \n    )"], ["", "lemmas (in tiny_semicategory) tiny_dg_semicategory = semicategory_axioms"], ["", "lemmas [smc_small_cs_intros] = tiny_semicategory.tiny_dg_semicategory"], ["", "text\\<open>Size.\\<close>"], ["", "lemma (in tiny_semicategory) tiny_smc_Comp_in_Vset: \"\\<CC>\\<lparr>Comp\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>Comp\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>Comp\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "have \"\\<CC>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (simp add: tiny_smc_Arr_in_Vset)"], ["proof (state)\nthis:\n  \\<CC>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>Comp\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "with Axiom_of_Infinity"], ["proof (chain)\npicking this:\n  \\<omega> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<CC>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "have \"\\<CC>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times> 2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  \\<omega> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<CC>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (intro Limit_vcpower_in_VsetI) auto"], ["proof (state)\nthis:\n  \\<CC>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>Comp\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "with Comp.pnop_vdomain"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times>\n                            2\\<^sub>\\<nat>\n  \\<CC>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "have D: \"\\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>) \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times>\n                            2\\<^sub>\\<nat>\n  \\<CC>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by auto"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>Comp\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "moreover"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>Comp\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "from tiny_smc_Arr_in_Vset smc_Comp_vrange"], ["proof (chain)\npicking this:\n  \\<CC>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "have \n    \"\\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>) \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  \\<CC>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by auto"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>Comp\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "ultimately"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>)\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>Comp\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (simp add: Comp.vbrelation_Limit_in_VsetI)"], ["proof (state)\nthis:\n  \\<CC>\\<lparr>Comp\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in tiny_semicategory) tiny_smc_in_Vset: \"\\<CC> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<CC> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<CC> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "note [smc_cs_intros] = \n    tiny_smc_Obj_in_Vset \n    tiny_smc_Arr_in_Vset\n    tiny_smc_Dom_in_Vset\n    tiny_smc_Cod_in_Vset\n    tiny_smc_Comp_in_Vset"], ["proof (state)\nthis:\n  \\<CC>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<CC>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<CC>\\<lparr>Dom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<CC>\\<lparr>Cod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<CC>\\<lparr>Comp\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<CC> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<CC> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (subst smc_def) (cs_concl cs_intro: smc_cs_intros V_cs_intros)"], ["proof (state)\nthis:\n  \\<CC> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma small_tiny_semicategories[simp]: \"small {\\<CC>. tiny_semicategory \\<alpha> \\<CC>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. small {\\<CC>. tiny_semicategory \\<alpha> \\<CC>}", "proof(rule down)"], ["proof (state)\ngoal (1 subgoal):\n 1. {\\<CC>. tiny_semicategory \\<alpha> \\<CC>} \\<subseteq> elts ?x", "show \"{\\<CC>. tiny_semicategory \\<alpha> \\<CC>} \\<subseteq> elts (set {\\<CC>. semicategory \\<alpha> \\<CC>})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {\\<CC>. tiny_semicategory \\<alpha> \\<CC>}\n    \\<subseteq> elts (ZFC_in_HOL.set {\\<CC>. semicategory \\<alpha> \\<CC>})", "by (auto intro: smc_small_cs_intros)"], ["proof (state)\nthis:\n  {\\<CC>. tiny_semicategory \\<alpha> \\<CC>}\n  \\<subseteq> elts (ZFC_in_HOL.set {\\<CC>. semicategory \\<alpha> \\<CC>})\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tiny_semicategories_vsubset_Vset: \n  \"set {\\<CC>. tiny_semicategory \\<alpha> \\<CC>} \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set {\\<CC>. tiny_semicategory \\<alpha> \\<CC>}\n    \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>", "by (rule vsubsetI) (simp add: tiny_semicategory.tiny_smc_in_Vset)"], ["", "lemma (in semicategory) smc_tiny_semicategory_if_ge_Limit:\n  assumes \"\\<Z> \\<beta>\" and \"\\<alpha> \\<in>\\<^sub>\\<circ> \\<beta>\"\n  shows \"tiny_semicategory \\<beta> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tiny_semicategory \\<beta> \\<CC>", "proof(intro tiny_semicategoryI)"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<Z> \\<beta>\n 2. vfsequence \\<CC>\n 3. vsv (\\<CC>\\<lparr>Comp\\<rparr>)\n 4. vcard \\<CC> = 5\\<^sub>\\<nat>\n 5. tiny_digraph \\<beta> (smc_dg \\<CC>)\n 6. \\<And>gf.\n       (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (\\<CC>\\<lparr>Comp\\<rparr>)) =\n       (\\<exists>g f b c a.\n           gf = [g, f]\\<^sub>\\<circ> \\<and>\n           g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n           f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b)\n 7. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n 8. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f)", "show \"tiny_digraph \\<beta> (smc_dg \\<CC>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tiny_digraph \\<beta> (smc_dg \\<CC>)", "by (rule digraph.dg_tiny_digraph_if_ge_Limit, rule smc_digraph; intro assms)"], ["proof (state)\nthis:\n  tiny_digraph \\<beta> (smc_dg \\<CC>)\n\ngoal (7 subgoals):\n 1. \\<Z> \\<beta>\n 2. vfsequence \\<CC>\n 3. vsv (\\<CC>\\<lparr>Comp\\<rparr>)\n 4. vcard \\<CC> = 5\\<^sub>\\<nat>\n 5. \\<And>gf.\n       (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (\\<CC>\\<lparr>Comp\\<rparr>)) =\n       (\\<exists>g f b c a.\n           gf = [g, f]\\<^sub>\\<circ> \\<and>\n           g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n           f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b)\n 6. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n 7. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f)", "qed \n  (\n    auto simp: \n      assms(1)\n      smc_cs_simps \n      smc_cs_intros \n      smc_digraph digraph.dg_tiny_digraph_if_ge_Limit \n      smc_Comp_vdomain vfsequence_axioms\n  )"], ["", "subsubsection\\<open>Opposite tiny semicategory\\<close>"], ["", "lemma (in tiny_semicategory) tiny_semicategory_op: \n  \"tiny_semicategory \\<alpha> (op_smc \\<CC>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tiny_semicategory \\<alpha> (op_smc \\<CC>)", "by (intro tiny_semicategoryI', unfold smc_op_simps)\n    (auto simp: smc_op_intros smc_small_cs_intros)"], ["", "lemmas tiny_semicategory_op[smc_op_intros] = \n  tiny_semicategory.tiny_semicategory_op"], ["", "subsection\\<open>Finite semicategory\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "text\\<open>\nA finite semicategory is a generalization of the concept of a finite category,\nas presented in nLab \n\\cite{noauthor_nlab_nodate}\n\\footnote{\\url{https://ncatlab.org/nlab/show/finite+category}}.\n\\<close>"], ["", "locale finite_semicategory = \\<Z> \\<alpha> + vfsequence \\<CC> + Comp: vsv \\<open>\\<CC>\\<lparr>Comp\\<rparr>\\<close> for \\<alpha> \\<CC> +\n  assumes fin_smc_length[smc_cs_simps]: \"vcard \\<CC> = 5\\<^sub>\\<nat>\"\n    and fin_smc_finite_digraph[slicing_intros]: \"finite_digraph \\<alpha> (smc_dg \\<CC>)\"\n    and fin_smc_Comp_vdomain: \"gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Comp\\<rparr>) \\<longleftrightarrow>\n      (\\<exists>g f b c a. gf = [g, f]\\<^sub>\\<circ> \\<and> g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b)\"\n    and fin_smc_Comp_is_arr[smc_cs_intros]: \n      \"\\<lbrakk> g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c; f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<rbrakk> \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\"\n    and fin_smc_assoc[smc_cs_simps]:\n      \"\\<lbrakk> h : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d; g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c; f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<rbrakk> \\<Longrightarrow>\n        (h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g) \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f = h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> (g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f)\""], ["", "lemmas [smc_cs_simps] = \n  finite_semicategory.fin_smc_length\n  finite_semicategory.fin_smc_assoc"], ["", "lemmas [slicing_intros] = \n  finite_semicategory.fin_smc_Comp_is_arr"], ["", "text\\<open>Rules.\\<close>"], ["", "lemma (in finite_semicategory) finite_semicategory_axioms'[smc_small_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\"\n  shows \"finite_semicategory \\<alpha>' \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_semicategory \\<alpha>' \\<CC>", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_semicategory \\<alpha> \\<CC>", "by (rule finite_semicategory_axioms)"], ["", "mk_ide rf finite_semicategory_def[unfolded finite_semicategory_axioms_def]\n  |intro finite_semicategoryI|\n  |dest finite_semicategoryD[dest]|\n  |elim finite_semicategoryE[elim]|"], ["", "lemma finite_semicategoryI': \n  assumes \"semicategory \\<alpha> \\<CC>\" and \"vfinite (\\<CC>\\<lparr>Obj\\<rparr>)\" and \"vfinite (\\<CC>\\<lparr>Arr\\<rparr>)\"\n  shows \"finite_semicategory \\<alpha> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_semicategory \\<alpha> \\<CC>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. finite_semicategory \\<alpha> \\<CC>", "interpret semicategory \\<alpha> \\<CC>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<CC>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. finite_semicategory \\<alpha> \\<CC>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_semicategory \\<alpha> \\<CC>", "proof(intro finite_semicategoryI)"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence \\<CC>\n 3. vsv (\\<CC>\\<lparr>Comp\\<rparr>)\n 4. vcard \\<CC> = 5\\<^sub>\\<nat>\n 5. finite_digraph \\<alpha> (smc_dg \\<CC>)\n 6. \\<And>gf.\n       (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (\\<CC>\\<lparr>Comp\\<rparr>)) =\n       (\\<exists>g f b c a.\n           gf = [g, f]\\<^sub>\\<circ> \\<and>\n           g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n           f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b)\n 7. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n 8. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f)", "show \"vfsequence \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence \\<CC>", "by (simp add: vfsequence_axioms)"], ["proof (state)\nthis:\n  vfsequence \\<CC>\n\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (\\<CC>\\<lparr>Comp\\<rparr>)\n 3. vcard \\<CC> = 5\\<^sub>\\<nat>\n 4. finite_digraph \\<alpha> (smc_dg \\<CC>)\n 5. \\<And>gf.\n       (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (\\<CC>\\<lparr>Comp\\<rparr>)) =\n       (\\<exists>g f b c a.\n           gf = [g, f]\\<^sub>\\<circ> \\<and>\n           g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n           f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b)\n 6. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n 7. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f)", "from assms"], ["proof (chain)\npicking this:\n  semicategory \\<alpha> \\<CC>\n  vfinite (\\<CC>\\<lparr>Obj\\<rparr>)\n  vfinite (\\<CC>\\<lparr>Arr\\<rparr>)", "show \"finite_digraph \\<alpha> (smc_dg \\<CC>)\""], ["proof (prove)\nusing this:\n  semicategory \\<alpha> \\<CC>\n  vfinite (\\<CC>\\<lparr>Obj\\<rparr>)\n  vfinite (\\<CC>\\<lparr>Arr\\<rparr>)\n\ngoal (1 subgoal):\n 1. finite_digraph \\<alpha> (smc_dg \\<CC>)", "by (intro finite_digraphI) (auto simp: slicing_simps)"], ["proof (state)\nthis:\n  finite_digraph \\<alpha> (smc_dg \\<CC>)\n\ngoal (6 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (\\<CC>\\<lparr>Comp\\<rparr>)\n 3. vcard \\<CC> = 5\\<^sub>\\<nat>\n 4. \\<And>gf.\n       (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (\\<CC>\\<lparr>Comp\\<rparr>)) =\n       (\\<exists>g f b c a.\n           gf = [g, f]\\<^sub>\\<circ> \\<and>\n           g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c \\<and>\n           f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b)\n 5. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n 6. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f)", "qed (auto simp: smc_cs_simps intro: smc_cs_intros)"], ["proof (state)\nthis:\n  finite_semicategory \\<alpha> \\<CC>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma finite_semicategoryI'': \n  assumes \"tiny_semicategory \\<alpha> \\<CC>\" and \"vfinite (\\<CC>\\<lparr>Obj\\<rparr>)\" and \"vfinite (\\<CC>\\<lparr>Arr\\<rparr>)\"\n  shows \"finite_semicategory \\<alpha> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_semicategory \\<alpha> \\<CC>", "using assms"], ["proof (prove)\nusing this:\n  tiny_semicategory \\<alpha> \\<CC>\n  vfinite (\\<CC>\\<lparr>Obj\\<rparr>)\n  vfinite (\\<CC>\\<lparr>Arr\\<rparr>)\n\ngoal (1 subgoal):\n 1. finite_semicategory \\<alpha> \\<CC>", "by (intro finite_semicategoryI') \n    (auto intro: smc_cs_intros smc_small_cs_intros)"], ["", "text\\<open>Slicing.\\<close>"], ["", "context finite_semicategory\nbegin"], ["", "interpretation dg: finite_digraph \\<alpha> \\<open>smc_dg \\<CC>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_digraph \\<alpha> (smc_dg \\<CC>)", "by (rule fin_smc_finite_digraph)"], ["", "lemmas_with [unfolded slicing_simps]:\n  fin_smc_Obj_vfinite[smc_small_cs_intros] = dg.fin_dg_Obj_vfinite\n  and fin_smc_Arr_vfinite[smc_small_cs_intros] = dg.fin_dg_Arr_vfinite"], ["", "end"], ["", "text\\<open>Elementary properties.\\<close>"], ["", "sublocale finite_semicategory \\<subseteq> tiny_semicategory"], ["proof (prove)\ngoal (1 subgoal):\n 1. tiny_semicategory \\<alpha> \\<CC>", "by (rule tiny_semicategoryI)\n    (\n      auto simp: \n        vfsequence_axioms\n        fin_smc_Comp_vdomain         \n        fin_smc_finite_digraph \n        finite_digraph.fin_dg_tiny_digraph\n        intro: smc_cs_intros smc_cs_simps \n    )"], ["", "lemmas (in finite_semicategory) fin_smc_tiny_semicategory = \n  tiny_semicategory_axioms"], ["", "lemmas [smc_small_cs_intros] = finite_semicategory.fin_smc_tiny_semicategory"], ["", "lemma (in finite_semicategory) fin_smc_in_Vset: \"\\<CC> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<CC> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (rule tiny_smc_in_Vset)"], ["", "text\\<open>Size.\\<close>"], ["", "lemma small_finite_semicategories[simp]: \"small {\\<CC>. finite_semicategory \\<alpha> \\<CC>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. small {\\<CC>. finite_semicategory \\<alpha> \\<CC>}", "proof(rule down)"], ["proof (state)\ngoal (1 subgoal):\n 1. {\\<CC>. finite_semicategory \\<alpha> \\<CC>} \\<subseteq> elts ?x", "show \"{\\<CC>. finite_semicategory \\<alpha> \\<CC>} \\<subseteq> elts (set {\\<CC>. semicategory \\<alpha> \\<CC>})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {\\<CC>. finite_semicategory \\<alpha> \\<CC>}\n    \\<subseteq> elts (ZFC_in_HOL.set {\\<CC>. semicategory \\<alpha> \\<CC>})", "by (auto intro: smc_small_cs_intros)"], ["proof (state)\nthis:\n  {\\<CC>. finite_semicategory \\<alpha> \\<CC>}\n  \\<subseteq> elts (ZFC_in_HOL.set {\\<CC>. semicategory \\<alpha> \\<CC>})\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma finite_semicategories_vsubset_Vset: \n  \"set {\\<CC>. finite_semicategory \\<alpha> \\<CC>} \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set {\\<CC>. finite_semicategory \\<alpha> \\<CC>}\n    \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>", "by (rule vsubsetI) (simp add: finite_semicategory.fin_smc_in_Vset)"], ["", "subsubsection\\<open>Opposite finite semicategory\\<close>"], ["", "lemma (in finite_semicategory) finite_semicategory_op: \n  \"finite_semicategory \\<alpha> (op_smc \\<CC>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_semicategory \\<alpha> (op_smc \\<CC>)", "by (intro finite_semicategoryI', unfold smc_op_simps)\n    (auto simp: smc_op_intros smc_small_cs_intros)"], ["", "lemmas finite_semicategory_op[smc_op_intros] = \n  finite_semicategory.finite_semicategory_op"], ["", "text\\<open>\\newpage\\<close>"], ["", "end"]]}