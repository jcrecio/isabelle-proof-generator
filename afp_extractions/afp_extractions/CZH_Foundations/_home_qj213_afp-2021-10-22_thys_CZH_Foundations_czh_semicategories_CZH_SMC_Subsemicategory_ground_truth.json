{"file_name": "/home/qj213/afp-2021-10-22/thys/CZH_Foundations/czh_semicategories/CZH_SMC_Subsemicategory.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CZH_Foundations", "problem_names": ["lemmas [smc_sub_fw_cs_intros] = subsemicategory.subsmc_Comp", "lemma (in subsemicategory) subsemicategory_axioms'[smc_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<BB>' = \\<BB>\"\n  shows \"\\<BB>' \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>'\\<^esub> \\<CC>\"", "lemma (in subsemicategory) subsemicategory_axioms''[smc_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<CC>' = \\<CC>\"\n  shows \"\\<BB> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>'\\<^esub> \\<CC>'\"", "lemmas [smc_sub_cs_intros] = subsemicategoryD(1,2)", "lemma subsemicategoryI':\n  assumes \"semicategory \\<alpha> \\<BB>\"\n    and \"semicategory \\<alpha> \\<CC>\"\n    and \"\\<And>a. a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr> \\<Longrightarrow> a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n    and \"\\<And>a b f. f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b \\<Longrightarrow> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"\n    and \"\\<And>b c g a f. \\<lbrakk> g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c; f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b \\<rbrakk> \\<Longrightarrow>\n      g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\"\n  shows \"\\<BB> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"", "lemmas_with [unfolded slicing_simps]:\n  subsmc_Obj_vsubset = subdg.subdg_Obj_vsubset\n  and subsmc_is_arr_vsubset = subdg.subdg_is_arr_vsubset\n  and subsmc_subdigraph_op_dg_op_dg = subdg.subdg_subdigraph_op_dg_op_dg\n  and subsmc_objD = subdg.subdg_objD\n  and subsmc_arrD = subdg.subdg_arrD\n  and subsmc_dom_simp = subdg.subdg_dom_simp\n  and subsmc_cod_simp = subdg.subdg_cod_simp\n  and subsmc_is_arrD = subdg.subdg_is_arrD\n  and subsmc_dghm_inc_op_dg_is_dghm = subdg.subdg_dghm_inc_op_dg_is_dghm\n  and subsmc_op_dg_dghm_inc = subdg.subdg_op_dg_dghm_inc\n  and subsmc_inc_is_ft_dghm_axioms = subdg.inc.is_ft_dghm_axioms", "lemmas subsmc_subdigraph_op_dg_op_dg[intro] = \n  subsemicategory.subsmc_subdigraph_op_dg_op_dg", "lemmas [smc_sub_fw_cs_intros] = \n  subsemicategory.subsmc_Obj_vsubset\n  subsemicategory.subsmc_is_arr_vsubset\n  subsemicategory.subsmc_objD\n  subsemicategory.subsmc_arrD\n  subsemicategory.subsmc_is_arrD", "lemmas [smc_sub_bw_cs_simps] =\n  subsemicategory.subsmc_dom_simp\n  subsemicategory.subsmc_cod_simp", "lemma (in subsemicategory) subsmc_subsemicategory_op_smc: \n  \"op_smc \\<BB> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> op_smc \\<CC>\"", "lemmas subsmc_subsemicategory_op_smc[intro, smc_op_intros] = \n  subsemicategory.subsmc_subsemicategory_op_smc", "lemma (in subsemicategory) subsmc_Comp_simp:\n  assumes \"g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c\" and \"f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\"", "lemmas [smc_sub_bw_cs_simps] = subsemicategory.subsmc_Comp_simp", "lemma (in subsemicategory) subsmc_is_idem_arrD: \n  assumes \"f : \\<mapsto>\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<BB>\\<^esub> b\" \n  shows \"f : \\<mapsto>\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<CC>\\<^esub> b\"", "lemmas [smc_sub_fw_cs_intros] = subsemicategory.subsmc_is_idem_arrD", "lemma subsmc_refl: \n  assumes \"semicategory \\<alpha> \\<AA>\" \n  shows \"\\<AA> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\"", "lemma subsmc_trans[trans]: \n  assumes \"\\<AA> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"\\<BB> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<AA> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"", "lemma subsmc_antisym:\n  assumes \"\\<AA> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"\\<BB> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\"\n  shows \"\\<AA> = \\<BB>\"", "lemma dghm_smcf_inc[slicing_commute]: \n  \"dghm_inc (smc_dg \\<BB>) (smc_dg \\<CC>) = smcf_dghm (smcf_inc \\<BB> \\<CC>)\"", "lemmas [smc_cs_simps] = \n  dghm_inc_ObjMap_app \n  dghm_inc_ArrMap_app", "lemmas (in subsemicategory) subsmc_smcf_inc_is_ft_semifunctor = \n  inc.is_ft_semifunctor_axioms", "lemma (in subsemicategory) \n  subsemicategory_smcf_inc_op_smc_is_semifunctor[smc_sub_cs_intros]:\n  \"smcf_inc (op_smc \\<BB>) (op_smc \\<CC>) : op_smc \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> op_smc \\<CC>\"", "lemmas [smc_sub_cs_intros] = \n  subsemicategory.subsemicategory_smcf_inc_op_smc_is_semifunctor", "lemma (in subsemicategory) subdg_op_smc_smcf_inc[smc_op_simps]: \n  \"op_smcf (smcf_inc \\<BB> \\<CC>) = smcf_inc (op_smc \\<BB>) (op_smc \\<CC>)\"", "lemmas [smc_op_simps] = subsemicategory.subdg_op_smc_smcf_inc", "lemma (in fl_subsemicategory) fl_subsemicategory_axioms'[smc_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<BB>' = \\<BB>\"\n  shows \"\\<BB>' \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>'\\<^esub> \\<CC>\"", "lemma (in fl_subsemicategory) fl_subsemicategory_axioms''[smc_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<CC>' = \\<CC>\"\n  shows \"\\<BB> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>'\\<^esub> \\<CC>'\"", "lemmas [smc_sub_cs_intros] = fl_subsemicategoryD(1)", "lemma (in wide_subsemicategory) wide_subsemicategory_axioms'[smc_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<BB>' = \\<BB>\"\n  shows \"\\<BB>' \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>'\\<^esub> \\<CC>\"", "lemma (in wide_subsemicategory) wide_subsemicategory_axioms''[smc_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<CC>' = \\<CC>\"\n  shows \"\\<BB> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>'\\<^esub> \\<CC>'\"", "lemmas [smc_sub_cs_intros] = wide_subsemicategoryD(1)", "lemmas_with [unfolded slicing_simps]:\n  wide_subsmc_Obj[dg_sub_bw_cs_intros] = wide_subdg.wide_subdg_Obj\n  and wide_subsmc_obj_eq[dg_sub_bw_cs_simps] = wide_subdg.wide_subdg_obj_eq", "lemmas [dg_sub_bw_cs_intros] = wide_subsemicategory.wide_subsmc_Obj", "lemmas [dg_sub_bw_cs_simps] = wide_subsemicategory.wide_subsmc_obj_eq", "lemma wide_subsmc_refl: \n  assumes \"semicategory \\<alpha> \\<AA>\" \n  shows \"\\<AA> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<AA>\"", "lemma wide_subsmc_trans[trans]:\n  assumes \"\\<AA> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"\\<BB> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<AA> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"", "lemma wide_subsmc_antisym:\n  assumes \"\\<AA> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"\\<BB> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<AA>\"\n  shows \"\\<AA> = \\<BB>\""], "translations": [["", "lemmas [smc_sub_fw_cs_intros] = subsemicategory.subsmc_Comp"], ["", "text\\<open>Rules.\\<close>"], ["", "lemma (in subsemicategory) subsemicategory_axioms'[smc_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<BB>' = \\<BB>\"\n  shows \"\\<BB>' \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>'\\<^esub> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>'\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>'\\<^esub> \\<CC>", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule subsemicategory_axioms)"], ["", "lemma (in subsemicategory) subsemicategory_axioms''[smc_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<CC>' = \\<CC>\"\n  shows \"\\<BB> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>'\\<^esub> \\<CC>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>'\\<^esub> \\<CC>'", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule subsemicategory_axioms)"], ["", "mk_ide rf subsemicategory_def[unfolded subsemicategory_axioms_def]\n  |intro subsemicategoryI|\n  |dest subsemicategoryD[dest]|\n  |elim subsemicategoryE[elim!]|"], ["", "lemmas [smc_sub_cs_intros] = subsemicategoryD(1,2)"], ["", "lemma subsemicategoryI':\n  assumes \"semicategory \\<alpha> \\<BB>\"\n    and \"semicategory \\<alpha> \\<CC>\"\n    and \"\\<And>a. a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr> \\<Longrightarrow> a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n    and \"\\<And>a b f. f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b \\<Longrightarrow> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"\n    and \"\\<And>b c g a f. \\<lbrakk> g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c; f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b \\<rbrakk> \\<Longrightarrow>\n      g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\"\n  shows \"\\<BB> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<BB> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "interpret \\<BB>: semicategory \\<alpha> \\<BB>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<BB>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<BB> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "interpret \\<CC>: semicategory \\<alpha> \\<CC>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<CC>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<BB> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by \n      (\n        intro subsemicategoryI subdigraphI, \n        unfold slicing_simps; \n        (intro \\<BB>.smc_digraph \\<CC>.smc_digraph assms)?\n      )"], ["proof (state)\nthis:\n  \\<BB> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Subsemicategory is a subdigraph.\\<close>"], ["", "context subsemicategory\nbegin"], ["", "interpretation subdg: subdigraph \\<alpha> \\<open>smc_dg \\<BB>\\<close> \\<open>smc_dg \\<CC>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. smc_dg \\<BB>\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg \\<CC>", "by (rule subsmc_subdigraph)"], ["", "lemmas_with [unfolded slicing_simps]:\n  subsmc_Obj_vsubset = subdg.subdg_Obj_vsubset\n  and subsmc_is_arr_vsubset = subdg.subdg_is_arr_vsubset\n  and subsmc_subdigraph_op_dg_op_dg = subdg.subdg_subdigraph_op_dg_op_dg\n  and subsmc_objD = subdg.subdg_objD\n  and subsmc_arrD = subdg.subdg_arrD\n  and subsmc_dom_simp = subdg.subdg_dom_simp\n  and subsmc_cod_simp = subdg.subdg_cod_simp\n  and subsmc_is_arrD = subdg.subdg_is_arrD\n  and subsmc_dghm_inc_op_dg_is_dghm = subdg.subdg_dghm_inc_op_dg_is_dghm\n  and subsmc_op_dg_dghm_inc = subdg.subdg_op_dg_dghm_inc\n  and subsmc_inc_is_ft_dghm_axioms = subdg.inc.is_ft_dghm_axioms"], ["", "end"], ["", "lemmas subsmc_subdigraph_op_dg_op_dg[intro] = \n  subsemicategory.subsmc_subdigraph_op_dg_op_dg"], ["", "lemmas [smc_sub_fw_cs_intros] = \n  subsemicategory.subsmc_Obj_vsubset\n  subsemicategory.subsmc_is_arr_vsubset\n  subsemicategory.subsmc_objD\n  subsemicategory.subsmc_arrD\n  subsemicategory.subsmc_is_arrD"], ["", "lemmas [smc_sub_bw_cs_simps] =\n  subsemicategory.subsmc_dom_simp\n  subsemicategory.subsmc_cod_simp"], ["", "text\\<open>The opposite subsemicategory.\\<close>"], ["", "lemma (in subsemicategory) subsmc_subsemicategory_op_smc: \n  \"op_smc \\<BB> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> op_smc \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_smc \\<BB>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> op_smc \\<CC>", "proof(rule subsemicategoryI)"], ["proof (state)\ngoal (4 subgoals):\n 1. semicategory \\<alpha> (op_smc \\<BB>)\n 2. semicategory \\<alpha> (op_smc \\<CC>)\n 3. smc_dg (op_smc \\<BB>)\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                   (op_smc \\<CC>)\n 4. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>op_smc \\<BB>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>op_smc \\<BB>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<BB>\\<^esub> f =\n                         g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f", "fix g b c f a"], ["proof (state)\ngoal (4 subgoals):\n 1. semicategory \\<alpha> (op_smc \\<BB>)\n 2. semicategory \\<alpha> (op_smc \\<CC>)\n 3. smc_dg (op_smc \\<BB>)\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                   (op_smc \\<CC>)\n 4. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>op_smc \\<BB>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>op_smc \\<BB>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<BB>\\<^esub> f =\n                         g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f", "assume prems: \"g : b \\<mapsto>\\<^bsub>op_smc \\<BB>\\<^esub> c\" \"f : a \\<mapsto>\\<^bsub>op_smc \\<BB>\\<^esub> b\""], ["proof (state)\nthis:\n  g : b \\<mapsto>\\<^bsub>op_smc \\<BB>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>op_smc \\<BB>\\<^esub> b\n\ngoal (4 subgoals):\n 1. semicategory \\<alpha> (op_smc \\<BB>)\n 2. semicategory \\<alpha> (op_smc \\<CC>)\n 3. smc_dg (op_smc \\<BB>)\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                   (op_smc \\<CC>)\n 4. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>op_smc \\<BB>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>op_smc \\<BB>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<BB>\\<^esub> f =\n                         g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f", "then"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^bsub>op_smc \\<BB>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>op_smc \\<BB>\\<^esub> b", "have \"g : c \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\" and \"f : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>op_smc \\<BB>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>op_smc \\<BB>\\<^esub> b\n\ngoal (1 subgoal):\n 1. g : c \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b &&&\n    f : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a", "by (simp_all add: smc_op_simps)"], ["proof (state)\nthis:\n  g : c \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a\n\ngoal (4 subgoals):\n 1. semicategory \\<alpha> (op_smc \\<BB>)\n 2. semicategory \\<alpha> (op_smc \\<CC>)\n 3. smc_dg (op_smc \\<BB>)\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                   (op_smc \\<CC>)\n 4. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>op_smc \\<BB>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>op_smc \\<BB>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<BB>\\<^esub> f =\n                         g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f", "with subsemicategory_axioms"], ["proof (chain)\npicking this:\n  \\<BB> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  g : c \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a", "have g: \"g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\" and f: \"f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\""], ["proof (prove)\nusing this:\n  \\<BB> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  g : c \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a\n\ngoal (1 subgoal):\n 1. g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b &&&\n    f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a", "by (cs_concl cs_intro: smc_sub_fw_cs_intros)+"], ["proof (state)\nthis:\n  g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n\ngoal (4 subgoals):\n 1. semicategory \\<alpha> (op_smc \\<BB>)\n 2. semicategory \\<alpha> (op_smc \\<CC>)\n 3. smc_dg (op_smc \\<BB>)\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                   (op_smc \\<CC>)\n 4. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>op_smc \\<BB>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>op_smc \\<BB>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<BB>\\<^esub> f =\n                         g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f", "from dg.op_smc_Comp[OF this(2,1)]"], ["proof (chain)\npicking this:\n  g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f =\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g", "have \"g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f = f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g\""], ["proof (prove)\nusing this:\n  g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f =\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f =\n    f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g", "."], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f =\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g\n\ngoal (4 subgoals):\n 1. semicategory \\<alpha> (op_smc \\<BB>)\n 2. semicategory \\<alpha> (op_smc \\<CC>)\n 3. smc_dg (op_smc \\<BB>)\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                   (op_smc \\<CC>)\n 4. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>op_smc \\<BB>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>op_smc \\<BB>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<BB>\\<^esub> f =\n                         g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f", "with prems"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^bsub>op_smc \\<BB>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>op_smc \\<BB>\\<^esub> b\n  g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f =\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g", "show \"g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<BB>\\<^esub> f = g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>op_smc \\<BB>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>op_smc \\<BB>\\<^esub> b\n  g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f =\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<BB>\\<^esub> f =\n    g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f", "by (simp add: smc_op_simps subsmc_Comp)"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<BB>\\<^esub> f =\n  g \\<circ>\\<^sub>A\\<^bsub>op_smc \\<CC>\\<^esub> f\n\ngoal (3 subgoals):\n 1. semicategory \\<alpha> (op_smc \\<BB>)\n 2. semicategory \\<alpha> (op_smc \\<CC>)\n 3. smc_dg (op_smc \\<BB>)\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                   (op_smc \\<CC>)", "qed \n  (\n    auto \n      simp:\n        smc_op_simps slicing_commute[symmetric] subsmc_subdigraph_op_dg_op_dg\n      intro: smc_op_intros\n  )"], ["", "lemmas subsmc_subsemicategory_op_smc[intro, smc_op_intros] = \n  subsemicategory.subsmc_subsemicategory_op_smc"], ["", "text\\<open>Further rules.\\<close>"], ["", "lemma (in subsemicategory) subsmc_Comp_simp:\n  assumes \"g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c\" and \"f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f =\n    g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f", "using assms subsmc_Comp"], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\n  \\<lbrakk>?g : ?b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> ?c;\n   ?f : ?a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> ?b\\<rbrakk>\n  \\<Longrightarrow> ?g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> ?f =\n                    ?g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> ?f\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f =\n    g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f", "by auto"], ["", "lemmas [smc_sub_bw_cs_simps] = subsemicategory.subsmc_Comp_simp"], ["", "lemma (in subsemicategory) subsmc_is_idem_arrD: \n  assumes \"f : \\<mapsto>\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<BB>\\<^esub> b\" \n  shows \"f : \\<mapsto>\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f : \\<mapsto>\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<CC>\\<^esub> b", "using assms subsemicategory_axioms"], ["proof (prove)\nusing this:\n  f : \\<mapsto>\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<BB>\\<^esub> b\n  \\<BB> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. f : \\<mapsto>\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<CC>\\<^esub> b", "by (intro is_idem_arrI; elim is_idem_arrE)\n    (cs_concl cs_simp: smc_sub_bw_cs_simps[symmetric] cs_intro: smc_sub_fw_cs_intros)"], ["", "lemmas [smc_sub_fw_cs_intros] = subsemicategory.subsmc_is_idem_arrD"], ["", "subsubsection\\<open>Subsemicategory relation is a partial order\\<close>"], ["", "lemma subsmc_refl: \n  assumes \"semicategory \\<alpha> \\<AA>\" \n  shows \"\\<AA> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "interpret semicategory \\<alpha> \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<AA>", "by (rule assms)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "by (auto intro: smc_cs_intros slicing_intros subdg_refl subsemicategoryI)"], ["proof (state)\nthis:\n  \\<AA> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subsmc_trans[trans]: \n  assumes \"\\<AA> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"\\<BB> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<AA> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "interpret \\<AA>\\<BB>: subsemicategory \\<alpha> \\<AA> \\<BB>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "interpret \\<BB>\\<CC>: subsemicategory \\<alpha> \\<BB> \\<CC>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "proof(rule subsemicategoryI)"], ["proof (state)\ngoal (4 subgoals):\n 1. semicategory \\<alpha> \\<AA>\n 2. semicategory \\<alpha> \\<CC>\n 3. smc_dg \\<AA>\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg \\<CC>\n 4. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f =\n                         g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f", "from \\<AA>\\<BB>.subsmc_subdigraph \\<BB>\\<CC>.subsmc_subdigraph"], ["proof (chain)\npicking this:\n  smc_dg \\<AA>\n  \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg \\<BB>\n  smc_dg \\<BB>\n  \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg \\<CC>", "show \"smc_dg \\<AA> \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg \\<CC>\""], ["proof (prove)\nusing this:\n  smc_dg \\<AA>\n  \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg \\<BB>\n  smc_dg \\<BB>\n  \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg \\<CC>\n\ngoal (1 subgoal):\n 1. smc_dg \\<AA>\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg \\<CC>", "by (meson subdg_trans)"], ["proof (state)\nthis:\n  smc_dg \\<AA>\n  \\<subseteq>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg \\<CC>\n\ngoal (3 subgoals):\n 1. semicategory \\<alpha> \\<AA>\n 2. semicategory \\<alpha> \\<CC>\n 3. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f =\n                         g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f", "show \"g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\" \n      if \"g : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> c\" and \"f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\" for g b c f a"], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f =\n    g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f", "by \n        (\n          metis \n            that\n            \\<AA>\\<BB>.subsmc_is_arr_vsubset \n            \\<AA>\\<BB>.subsmc_Comp_simp \n            \\<BB>\\<CC>.subsmc_Comp_simp\n        )"], ["proof (state)\nthis:\n  \\<lbrakk>?g : ?b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> ?c;\n   ?f : ?a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> ?b\\<rbrakk>\n  \\<Longrightarrow> ?g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> ?f =\n                    ?g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> ?f\n\ngoal (2 subgoals):\n 1. semicategory \\<alpha> \\<AA>\n 2. semicategory \\<alpha> \\<CC>", "qed (auto intro: smc_cs_intros)"], ["proof (state)\nthis:\n  \\<AA> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subsmc_antisym:\n  assumes \"\\<AA> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"\\<BB> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\"\n  shows \"\\<AA> = \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "interpret \\<AA>\\<BB>: subsemicategory \\<alpha> \\<AA> \\<BB>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "interpret \\<BB>\\<AA>: subsemicategory \\<alpha> \\<BB> \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "proof(rule smc_eqI)"], ["proof (state)\ngoal (7 subgoals):\n 1. semicategory ?\\<alpha> \\<AA>\n 2. semicategory ?\\<alpha> \\<BB>\n 3. \\<AA>\\<lparr>Obj\\<rparr> = \\<BB>\\<lparr>Obj\\<rparr>\n 4. \\<AA>\\<lparr>Arr\\<rparr> = \\<BB>\\<lparr>Arr\\<rparr>\n 5. \\<AA>\\<lparr>Dom\\<rparr> = \\<BB>\\<lparr>Dom\\<rparr>\n 6. \\<AA>\\<lparr>Cod\\<rparr> = \\<BB>\\<lparr>Cod\\<rparr>\n 7. \\<AA>\\<lparr>Comp\\<rparr> = \\<BB>\\<lparr>Comp\\<rparr>", "from subdg_antisym[OF \\<AA>\\<BB>.subsmc_subdigraph \\<BB>\\<AA>.subsmc_subdigraph]"], ["proof (chain)\npicking this:\n  smc_dg \\<AA> = smc_dg \\<BB>", "have \n      \"smc_dg \\<AA>\\<lparr>Obj\\<rparr> = smc_dg \\<BB>\\<lparr>Obj\\<rparr>\" \"smc_dg \\<AA>\\<lparr>Arr\\<rparr> = smc_dg \\<BB>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  smc_dg \\<AA> = smc_dg \\<BB>\n\ngoal (1 subgoal):\n 1. smc_dg \\<AA>\\<lparr>Obj\\<rparr> = smc_dg \\<BB>\\<lparr>Obj\\<rparr> &&&\n    smc_dg \\<AA>\\<lparr>Arr\\<rparr> = smc_dg \\<BB>\\<lparr>Arr\\<rparr>", "by simp_all"], ["proof (state)\nthis:\n  smc_dg \\<AA>\\<lparr>Obj\\<rparr> = smc_dg \\<BB>\\<lparr>Obj\\<rparr>\n  smc_dg \\<AA>\\<lparr>Arr\\<rparr> = smc_dg \\<BB>\\<lparr>Arr\\<rparr>\n\ngoal (7 subgoals):\n 1. semicategory ?\\<alpha> \\<AA>\n 2. semicategory ?\\<alpha> \\<BB>\n 3. \\<AA>\\<lparr>Obj\\<rparr> = \\<BB>\\<lparr>Obj\\<rparr>\n 4. \\<AA>\\<lparr>Arr\\<rparr> = \\<BB>\\<lparr>Arr\\<rparr>\n 5. \\<AA>\\<lparr>Dom\\<rparr> = \\<BB>\\<lparr>Dom\\<rparr>\n 6. \\<AA>\\<lparr>Cod\\<rparr> = \\<BB>\\<lparr>Cod\\<rparr>\n 7. \\<AA>\\<lparr>Comp\\<rparr> = \\<BB>\\<lparr>Comp\\<rparr>", "then"], ["proof (chain)\npicking this:\n  smc_dg \\<AA>\\<lparr>Obj\\<rparr> = smc_dg \\<BB>\\<lparr>Obj\\<rparr>\n  smc_dg \\<AA>\\<lparr>Arr\\<rparr> = smc_dg \\<BB>\\<lparr>Arr\\<rparr>", "show \"\\<AA>\\<lparr>Obj\\<rparr> = \\<BB>\\<lparr>Obj\\<rparr>\" and Arr: \"\\<AA>\\<lparr>Arr\\<rparr> = \\<BB>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  smc_dg \\<AA>\\<lparr>Obj\\<rparr> = smc_dg \\<BB>\\<lparr>Obj\\<rparr>\n  smc_dg \\<AA>\\<lparr>Arr\\<rparr> = smc_dg \\<BB>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Obj\\<rparr> = \\<BB>\\<lparr>Obj\\<rparr> &&&\n    \\<AA>\\<lparr>Arr\\<rparr> = \\<BB>\\<lparr>Arr\\<rparr>", "unfolding slicing_simps"], ["proof (prove)\nusing this:\n  \\<AA>\\<lparr>Obj\\<rparr> = \\<BB>\\<lparr>Obj\\<rparr>\n  \\<AA>\\<lparr>Arr\\<rparr> = \\<BB>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Obj\\<rparr> = \\<BB>\\<lparr>Obj\\<rparr> &&&\n    \\<AA>\\<lparr>Arr\\<rparr> = \\<BB>\\<lparr>Arr\\<rparr>", "by simp_all"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Obj\\<rparr> = \\<BB>\\<lparr>Obj\\<rparr>\n  \\<AA>\\<lparr>Arr\\<rparr> = \\<BB>\\<lparr>Arr\\<rparr>\n\ngoal (5 subgoals):\n 1. semicategory ?\\<alpha> \\<AA>\n 2. semicategory ?\\<alpha> \\<BB>\n 3. \\<AA>\\<lparr>Dom\\<rparr> = \\<BB>\\<lparr>Dom\\<rparr>\n 4. \\<AA>\\<lparr>Cod\\<rparr> = \\<BB>\\<lparr>Cod\\<rparr>\n 5. \\<AA>\\<lparr>Comp\\<rparr> = \\<BB>\\<lparr>Comp\\<rparr>", "show \"\\<AA>\\<lparr>Dom\\<rparr> = \\<BB>\\<lparr>Dom\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Dom\\<rparr> = \\<BB>\\<lparr>Dom\\<rparr>", "by (rule vsv_eqI) (auto simp: smc_cs_simps \\<AA>\\<BB>.subsmc_dom_simp Arr)"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Dom\\<rparr> = \\<BB>\\<lparr>Dom\\<rparr>\n\ngoal (4 subgoals):\n 1. semicategory ?\\<alpha> \\<AA>\n 2. semicategory ?\\<alpha> \\<BB>\n 3. \\<AA>\\<lparr>Cod\\<rparr> = \\<BB>\\<lparr>Cod\\<rparr>\n 4. \\<AA>\\<lparr>Comp\\<rparr> = \\<BB>\\<lparr>Comp\\<rparr>", "show \"\\<AA>\\<lparr>Cod\\<rparr> = \\<BB>\\<lparr>Cod\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Cod\\<rparr> = \\<BB>\\<lparr>Cod\\<rparr>", "by (rule vsv_eqI) (auto simp: smc_cs_simps \\<BB>\\<AA>.subsmc_cod_simp Arr)"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Cod\\<rparr> = \\<BB>\\<lparr>Cod\\<rparr>\n\ngoal (3 subgoals):\n 1. semicategory ?\\<alpha> \\<AA>\n 2. semicategory ?\\<alpha> \\<BB>\n 3. \\<AA>\\<lparr>Comp\\<rparr> = \\<BB>\\<lparr>Comp\\<rparr>", "show \"\\<AA>\\<lparr>Comp\\<rparr> = \\<BB>\\<lparr>Comp\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Comp\\<rparr> = \\<BB>\\<lparr>Comp\\<rparr>", "proof(rule vsv_eqI)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (\\<AA>\\<lparr>Comp\\<rparr>)\n 2. vsv (\\<BB>\\<lparr>Comp\\<rparr>)\n 3. \\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>) =\n    \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>)\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (\\<AA>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       \\<AA>\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr> =\n       \\<BB>\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr>", "show \"\\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>) = \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>) =\n    \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>)", "proof(intro vsubset_antisym vsubsetI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (\\<AA>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (\\<BB>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>)", "fix gf"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (\\<AA>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (\\<BB>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>)", "assume \"gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>)\""], ["proof (state)\nthis:\n  gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (\\<AA>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (\\<BB>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>)", "then"], ["proof (chain)\npicking this:\n  gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>)", "obtain g f b c a \n          where gf_def: \"gf = [g, f]\\<^sub>\\<circ>\" \n            and g: \"g : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> c\" \n            and f: \"f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\""], ["proof (prove)\nusing this:\n  gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. (\\<And>g f b c a.\n        \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>;\n         g : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> c;\n         f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: \\<AA>\\<BB>.sdg.smc_Comp_vdomain)"], ["proof (state)\nthis:\n  gf = [g, f]\\<^sub>\\<circ>\n  g : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (\\<AA>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (\\<BB>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>)", "from g f"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b", "show \"gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>)\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\n\ngoal (1 subgoal):\n 1. gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>)", "unfolding gf_def"], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>)", "by (meson \\<AA>\\<BB>.dg.smc_Comp_vdomainI \\<AA>\\<BB>.subsmc_is_arrD)"], ["proof (state)\nthis:\n  gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (\\<BB>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (\\<BB>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>)", "fix gf"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (\\<BB>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>)", "assume \"gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>)\""], ["proof (state)\nthis:\n  gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (\\<BB>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>)", "then"], ["proof (chain)\npicking this:\n  gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>)", "obtain g f b c a \n          where gf_def: \"gf = [g, f]\\<^sub>\\<circ>\" \n            and g: \"g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c\" \n            and f: \"f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\""], ["proof (prove)\nusing this:\n  gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. (\\<And>g f b c a.\n        \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>;\n         g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c;\n         f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: \\<AA>\\<BB>.dg.smc_Comp_vdomain)"], ["proof (state)\nthis:\n  gf = [g, f]\\<^sub>\\<circ>\n  g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (\\<BB>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>)", "from g f"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b", "show \"gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>)\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\n\ngoal (1 subgoal):\n 1. gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>)", "unfolding gf_def"], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>)", "by (meson \\<AA>\\<BB>.sdg.smc_Comp_vdomainI \\<BB>\\<AA>.subsmc_is_arrD)"], ["proof (state)\nthis:\n  gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>) =\n  \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>)\n\ngoal (3 subgoals):\n 1. vsv (\\<AA>\\<lparr>Comp\\<rparr>)\n 2. vsv (\\<BB>\\<lparr>Comp\\<rparr>)\n 3. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (\\<AA>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       \\<AA>\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr> =\n       \\<BB>\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr>", "show \"a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>) \\<Longrightarrow> \\<AA>\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr> = \\<BB>\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr>\" for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                           (\\<AA>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n    \\<AA>\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr> =\n    \\<BB>\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr>", "by (metis \\<AA>\\<BB>.sdg.smc_Comp_vdomain \\<AA>\\<BB>.subsmc_Comp_simp)"], ["proof (state)\nthis:\n  ?a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                          (\\<AA>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n  \\<AA>\\<lparr>Comp\\<rparr>\\<lparr>?a\\<rparr> =\n  \\<BB>\\<lparr>Comp\\<rparr>\\<lparr>?a\\<rparr>\n\ngoal (2 subgoals):\n 1. vsv (\\<AA>\\<lparr>Comp\\<rparr>)\n 2. vsv (\\<BB>\\<lparr>Comp\\<rparr>)", "qed auto"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Comp\\<rparr> = \\<BB>\\<lparr>Comp\\<rparr>\n\ngoal (2 subgoals):\n 1. semicategory ?\\<alpha> \\<AA>\n 2. semicategory ?\\<alpha> \\<BB>", "qed (auto intro: smc_cs_intros)"], ["proof (state)\nthis:\n  \\<AA> = \\<BB>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Inclusion semifunctor\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "text\\<open>See Chapter I-3 in \\cite{mac_lane_categories_2010}.\\<close>"], ["", "abbreviation (input) smcf_inc :: \"V \\<Rightarrow> V \\<Rightarrow> V\"\n  where \"smcf_inc \\<equiv> dghm_inc\""], ["", "text\\<open>Slicing.\\<close>"], ["", "lemma dghm_smcf_inc[slicing_commute]: \n  \"dghm_inc (smc_dg \\<BB>) (smc_dg \\<CC>) = smcf_dghm (smcf_inc \\<BB> \\<CC>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_inc (smc_dg \\<BB>) (smc_dg \\<CC>) =\n    smcf_dghm (dghm_inc \\<BB> \\<CC>)", "unfolding \n    smcf_dghm_def dghm_inc_def smc_dg_def dg_field_simps dghm_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. [vid_on\n      ([\\<BB>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n        \\<BB>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n        \\<BB>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n        \\<BB>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n     vid_on\n      ([\\<BB>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n        \\<BB>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n        \\<BB>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n        \\<BB>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>),\n     [\\<BB>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<BB>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<BB>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      \\<BB>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>,\n     [\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>]\\<^sub>\\<circ> =\n    [[vid_on (\\<BB>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n      vid_on (\\<BB>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<BB>,\n      \\<CC>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     [vid_on (\\<BB>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n      vid_on (\\<BB>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<BB>,\n      \\<CC>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     [[vid_on (\\<BB>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n       vid_on (\\<BB>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<BB>,\n       \\<CC>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      [vid_on (\\<BB>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n       vid_on (\\<BB>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<BB>,\n       \\<CC>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      [vid_on (\\<BB>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n       vid_on (\\<BB>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<BB>,\n       \\<CC>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      [vid_on (\\<BB>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n       vid_on (\\<BB>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<BB>,\n       \\<CC>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>,\n     [[vid_on (\\<BB>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n       vid_on (\\<BB>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<BB>,\n       \\<CC>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      [vid_on (\\<BB>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n       vid_on (\\<BB>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<BB>,\n       \\<CC>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      [vid_on (\\<BB>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n       vid_on (\\<BB>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<BB>,\n       \\<CC>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      [vid_on (\\<BB>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n       vid_on (\\<BB>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<BB>,\n       \\<CC>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>]\\<^sub>\\<circ>", "by (simp_all add: nat_omega_simps)"], ["", "text\\<open>Elementary properties.\\<close>"], ["", "lemmas [smc_cs_simps] = \n  dghm_inc_ObjMap_app \n  dghm_inc_ArrMap_app"], ["", "subsubsection\\<open>Canonical inclusion semifunctor associated with a subsemicategory\\<close>"], ["", "sublocale subsemicategory \\<subseteq> inc: is_ft_semifunctor \\<alpha> \\<BB> \\<CC> \\<open>smcf_inc \\<BB> \\<CC>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_inc \\<BB> \\<CC> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "proof(rule is_ft_semifunctorI)"], ["proof (state)\ngoal (2 subgoals):\n 1. dghm_inc \\<BB> \\<CC> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n 2. smcf_dghm (dghm_inc \\<BB> \\<CC>) :\n    smc_dg\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                             \\<CC>", "show \"smcf_inc \\<BB> \\<CC> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_inc \\<BB> \\<CC> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "proof(rule is_semifunctorI)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (dghm_inc \\<BB> \\<CC>)\n 3. semicategory \\<alpha> \\<BB>\n 4. semicategory \\<alpha> \\<CC>\n 5. vcard (dghm_inc \\<BB> \\<CC>) = 4\\<^sub>\\<nat>\n 6. smcf_dghm (dghm_inc \\<BB> \\<CC>) :\n    smc_dg\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 \\<CC>\n 7. dghm_inc \\<BB> \\<CC>\\<lparr>HomDom\\<rparr> = \\<BB>\n 8. dghm_inc \\<BB> \\<CC>\\<lparr>HomCod\\<rparr> = \\<CC>\n 9. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> dghm_inc \\<BB>\n                          \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n                       f\\<rparr> =\n                         dghm_inc \\<BB>\n                          \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         dghm_inc \\<BB>\n                          \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "show \"vfsequence (dghm_inc \\<BB> \\<CC>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (dghm_inc \\<BB> \\<CC>)", "unfolding dghm_inc_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence\n     [vid_on (\\<BB>\\<lparr>Obj\\<rparr>), vid_on (\\<BB>\\<lparr>Arr\\<rparr>),\n      \\<BB>, \\<CC>]\\<^sub>\\<circ>", "by auto"], ["proof (state)\nthis:\n  vfsequence (dghm_inc \\<BB> \\<CC>)\n\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> \\<BB>\n 3. semicategory \\<alpha> \\<CC>\n 4. vcard (dghm_inc \\<BB> \\<CC>) = 4\\<^sub>\\<nat>\n 5. smcf_dghm (dghm_inc \\<BB> \\<CC>) :\n    smc_dg\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 \\<CC>\n 6. dghm_inc \\<BB> \\<CC>\\<lparr>HomDom\\<rparr> = \\<BB>\n 7. dghm_inc \\<BB> \\<CC>\\<lparr>HomCod\\<rparr> = \\<CC>\n 8. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> dghm_inc \\<BB>\n                          \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n                       f\\<rparr> =\n                         dghm_inc \\<BB>\n                          \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         dghm_inc \\<BB>\n                          \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "show \"vcard (dghm_inc \\<BB> \\<CC>) = 4\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (dghm_inc \\<BB> \\<CC>) = 4\\<^sub>\\<nat>", "unfolding dghm_inc_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard\n     [vid_on (\\<BB>\\<lparr>Obj\\<rparr>), vid_on (\\<BB>\\<lparr>Arr\\<rparr>),\n      \\<BB>, \\<CC>]\\<^sub>\\<circ> =\n    4\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  vcard (dghm_inc \\<BB> \\<CC>) = 4\\<^sub>\\<nat>\n\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> \\<BB>\n 3. semicategory \\<alpha> \\<CC>\n 4. smcf_dghm (dghm_inc \\<BB> \\<CC>) :\n    smc_dg\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 \\<CC>\n 5. dghm_inc \\<BB> \\<CC>\\<lparr>HomDom\\<rparr> = \\<BB>\n 6. dghm_inc \\<BB> \\<CC>\\<lparr>HomCod\\<rparr> = \\<CC>\n 7. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> dghm_inc \\<BB>\n                          \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n                       f\\<rparr> =\n                         dghm_inc \\<BB>\n                          \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         dghm_inc \\<BB>\n                          \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "fix g b c f a"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> \\<BB>\n 3. semicategory \\<alpha> \\<CC>\n 4. smcf_dghm (dghm_inc \\<BB> \\<CC>) :\n    smc_dg\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 \\<CC>\n 5. dghm_inc \\<BB> \\<CC>\\<lparr>HomDom\\<rparr> = \\<BB>\n 6. dghm_inc \\<BB> \\<CC>\\<lparr>HomCod\\<rparr> = \\<CC>\n 7. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> dghm_inc \\<BB>\n                          \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n                       f\\<rparr> =\n                         dghm_inc \\<BB>\n                          \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         dghm_inc \\<BB>\n                          \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "assume prems: \"g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c\" \"f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\""], ["proof (state)\nthis:\n  g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\n\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> \\<BB>\n 3. semicategory \\<alpha> \\<CC>\n 4. smcf_dghm (dghm_inc \\<BB> \\<CC>) :\n    smc_dg\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 \\<CC>\n 5. dghm_inc \\<BB> \\<CC>\\<lparr>HomDom\\<rparr> = \\<BB>\n 6. dghm_inc \\<BB> \\<CC>\\<lparr>HomCod\\<rparr> = \\<CC>\n 7. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> dghm_inc \\<BB>\n                          \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n                       f\\<rparr> =\n                         dghm_inc \\<BB>\n                          \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         dghm_inc \\<BB>\n                          \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "then"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b", "have \"g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n    f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c", "by (simp add: smc_cs_intros)"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c\n\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> \\<BB>\n 3. semicategory \\<alpha> \\<CC>\n 4. smcf_dghm (dghm_inc \\<BB> \\<CC>) :\n    smc_dg\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 \\<CC>\n 5. dghm_inc \\<BB> \\<CC>\\<lparr>HomDom\\<rparr> = \\<BB>\n 6. dghm_inc \\<BB> \\<CC>\\<lparr>HomCod\\<rparr> = \\<CC>\n 7. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> dghm_inc \\<BB>\n                          \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n                       f\\<rparr> =\n                         dghm_inc \\<BB>\n                          \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         dghm_inc \\<BB>\n                          \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "with subsemicategory_axioms prems"], ["proof (chain)\npicking this:\n  \\<BB> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\n  g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c", "have [simp]: \n      \"vid_on (\\<BB>\\<lparr>Arr\\<rparr>)\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f\\<rparr> = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\""], ["proof (prove)\nusing this:\n  \\<BB> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\n  g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c\n\ngoal (1 subgoal):\n 1. vid_on\n     (\\<BB>\\<lparr>Arr\\<rparr>)\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n f\\<rparr> =\n    g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f", "by (auto simp: smc_sub_bw_cs_simps)"], ["proof (state)\nthis:\n  vid_on\n   (\\<BB>\\<lparr>Arr\\<rparr>)\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n                                     f\\<rparr> =\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\n\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> \\<BB>\n 3. semicategory \\<alpha> \\<CC>\n 4. smcf_dghm (dghm_inc \\<BB> \\<CC>) :\n    smc_dg\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 \\<CC>\n 5. dghm_inc \\<BB> \\<CC>\\<lparr>HomDom\\<rparr> = \\<BB>\n 6. dghm_inc \\<BB> \\<CC>\\<lparr>HomCod\\<rparr> = \\<CC>\n 7. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> dghm_inc \\<BB>\n                          \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n                       f\\<rparr> =\n                         dghm_inc \\<BB>\n                          \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                         dghm_inc \\<BB>\n                          \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "from prems"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b", "show \"dghm_inc \\<BB> \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f\\<rparr> = \n      dghm_inc \\<BB> \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> dghm_inc \\<BB> \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\n\ngoal (1 subgoal):\n 1. dghm_inc \\<BB>\n     \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n  f\\<rparr> =\n    dghm_inc \\<BB>\n     \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    dghm_inc \\<BB> \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "by (cs_concl cs_simp: smc_cs_simps cs_intro: smc_cs_intros smc_sub_fw_cs_intros)"], ["proof (state)\nthis:\n  dghm_inc \\<BB>\n   \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\nf\\<rparr> =\n  dghm_inc \\<BB>\n   \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  dghm_inc \\<BB> \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\n\ngoal (6 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> \\<BB>\n 3. semicategory \\<alpha> \\<CC>\n 4. smcf_dghm (dghm_inc \\<BB> \\<CC>) :\n    smc_dg\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 \\<CC>\n 5. dghm_inc \\<BB> \\<CC>\\<lparr>HomDom\\<rparr> = \\<BB>\n 6. dghm_inc \\<BB> \\<CC>\\<lparr>HomCod\\<rparr> = \\<CC>", "qed \n    (\n      insert subsmc_inc_is_ft_dghm_axioms, \n      auto simp: slicing_commute[symmetric] dghm_inc_components smc_cs_intros\n    )"], ["proof (state)\nthis:\n  dghm_inc \\<BB> \\<CC> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. smcf_dghm (dghm_inc \\<BB> \\<CC>) :\n    smc_dg\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                             \\<CC>", "qed (auto simp: slicing_commute[symmetric] subsmc_inc_is_ft_dghm_axioms)"], ["", "lemmas (in subsemicategory) subsmc_smcf_inc_is_ft_semifunctor = \n  inc.is_ft_semifunctor_axioms"], ["", "subsubsection\\<open>Inclusion semifunctor for the opposite semicategories\\<close>"], ["", "lemma (in subsemicategory) \n  subsemicategory_smcf_inc_op_smc_is_semifunctor[smc_sub_cs_intros]:\n  \"smcf_inc (op_smc \\<BB>) (op_smc \\<CC>) : op_smc \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> op_smc \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_inc (op_smc \\<BB>) (op_smc \\<CC>) :\n    op_smc\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> op_smc\n                                     \\<CC>", "by \n    (\n      intro \n        subsemicategory.subsmc_smcf_inc_is_ft_semifunctor\n        subsmc_subsemicategory_op_smc\n    )"], ["", "lemmas [smc_sub_cs_intros] = \n  subsemicategory.subsemicategory_smcf_inc_op_smc_is_semifunctor"], ["", "lemma (in subsemicategory) subdg_op_smc_smcf_inc[smc_op_simps]: \n  \"op_smcf (smcf_inc \\<BB> \\<CC>) = smcf_inc (op_smc \\<BB>) (op_smc \\<CC>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_smcf (dghm_inc \\<BB> \\<CC>) = dghm_inc (op_smc \\<BB>) (op_smc \\<CC>)", "by \n    (\n      rule smcf_eqI[of \\<alpha> \\<open>op_smc \\<BB>\\<close> \\<open>op_smc \\<CC>\\<close>], \n      unfold smc_op_simps dghm_inc_components\n    )\n    (\n      auto simp: \n        is_ft_semifunctorD\n        subsemicategory_smcf_inc_op_smc_is_semifunctor\n        inc.is_semifunctor_op\n    )"], ["", "lemmas [smc_op_simps] = subsemicategory.subdg_op_smc_smcf_inc"], ["", "subsection\\<open>Full subsemicategory\\<close>"], ["", "text\\<open>See Chapter I-3 in \\cite{mac_lane_categories_2010}.\\<close>"], ["", "locale fl_subsemicategory = subsemicategory +\n  assumes fl_subsemicategory_fl_subdigraph: \"smc_dg \\<BB> \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> smc_dg \\<CC>\""], ["", "abbreviation is_fl_subsemicategory (\"(_/ \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<index> _)\" [51, 51] 50)\n  where \"\\<BB> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<equiv> fl_subsemicategory \\<alpha> \\<BB> \\<CC>\""], ["", "text\\<open>Rules.\\<close>"], ["", "lemma (in fl_subsemicategory) fl_subsemicategory_axioms'[smc_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<BB>' = \\<BB>\"\n  shows \"\\<BB>' \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>'\\<^esub> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>'\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>'\\<^esub> \\<CC>", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule fl_subsemicategory_axioms)"], ["", "lemma (in fl_subsemicategory) fl_subsemicategory_axioms''[smc_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<CC>' = \\<CC>\"\n  shows \"\\<BB> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>'\\<^esub> \\<CC>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>'\\<^esub> \\<CC>'", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule fl_subsemicategory_axioms)"], ["", "mk_ide rf fl_subsemicategory_def[unfolded fl_subsemicategory_axioms_def]\n  |intro fl_subsemicategoryI|\n  |dest fl_subsemicategoryD[dest]|\n  |elim fl_subsemicategoryE[elim!]|"], ["", "lemmas [smc_sub_cs_intros] = fl_subsemicategoryD(1)"], ["", "text\\<open>Full subsemicategory.\\<close>"], ["", "sublocale fl_subsemicategory \\<subseteq> inc: is_fl_semifunctor \\<alpha> \\<BB> \\<CC> \\<open>smcf_inc \\<BB> \\<CC>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_inc \\<BB> \\<CC> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "using fl_subsemicategory_fl_subdigraph inc.is_semifunctor_axioms"], ["proof (prove)\nusing this:\n  smc_dg \\<BB>\n  \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                   \\<CC>\n  dghm_inc \\<BB> \\<CC> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. dghm_inc \\<BB> \\<CC> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (intro is_fl_semifunctorI) (auto simp: slicing_commute[symmetric])"], ["", "subsection\\<open>Wide subsemicategory\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "text\\<open>\nSee \\cite{noauthor_nlab_nodate}\\footnote{\n\\url{https://ncatlab.org/nlab/show/wide+subcategory}\n}).\n\\<close>"], ["", "locale wide_subsemicategory = subsemicategory +\n  assumes wide_subsmc_wide_subdigraph: \"smc_dg \\<BB> \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> smc_dg \\<CC>\""], ["", "abbreviation is_wide_subsemicategory (\"(_/ \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<index> _)\" [51, 51] 50)\n  where \"\\<BB> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<equiv> wide_subsemicategory \\<alpha> \\<BB> \\<CC>\""], ["", "text\\<open>Rules.\\<close>"], ["", "lemma (in wide_subsemicategory) wide_subsemicategory_axioms'[smc_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<BB>' = \\<BB>\"\n  shows \"\\<BB>' \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>'\\<^esub> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>'\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>'\\<^esub> \\<CC>", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule wide_subsemicategory_axioms)"], ["", "lemma (in wide_subsemicategory) wide_subsemicategory_axioms''[smc_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<CC>' = \\<CC>\"\n  shows \"\\<BB> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>'\\<^esub> \\<CC>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>'\\<^esub> \\<CC>'", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule wide_subsemicategory_axioms)"], ["", "mk_ide rf wide_subsemicategory_def[unfolded wide_subsemicategory_axioms_def]\n  |intro wide_subsemicategoryI|\n  |dest wide_subsemicategoryD[dest]|\n  |elim wide_subsemicategoryE[elim!]|"], ["", "lemmas [smc_sub_cs_intros] = wide_subsemicategoryD(1)"], ["", "text\\<open>Wide subsemicategory is wide subdigraph.\\<close>"], ["", "context wide_subsemicategory\nbegin"], ["", "interpretation wide_subdg: wide_subdigraph \\<alpha> \\<open>smc_dg \\<BB>\\<close> \\<open>smc_dg \\<CC>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. smc_dg \\<BB>\n    \\<subseteq>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                     \\<CC>", "by (rule wide_subsmc_wide_subdigraph)"], ["", "lemmas_with [unfolded slicing_simps]:\n  wide_subsmc_Obj[dg_sub_bw_cs_intros] = wide_subdg.wide_subdg_Obj\n  and wide_subsmc_obj_eq[dg_sub_bw_cs_simps] = wide_subdg.wide_subdg_obj_eq"], ["", "end"], ["", "lemmas [dg_sub_bw_cs_intros] = wide_subsemicategory.wide_subsmc_Obj"], ["", "lemmas [dg_sub_bw_cs_simps] = wide_subsemicategory.wide_subsmc_obj_eq"], ["", "subsubsection\\<open>The wide subsemicategory relation is a partial order\\<close>"], ["", "lemma wide_subsmc_refl: \n  assumes \"semicategory \\<alpha> \\<AA>\" \n  shows \"\\<AA> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "interpret semicategory \\<alpha> \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<AA>", "by (rule assms)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "by \n      (\n        auto intro: \n          assms\n          slicing_intros \n          wide_subdg_refl \n          wide_subsemicategoryI \n          subsmc_refl \n      )"], ["proof (state)\nthis:\n  \\<AA>\n  \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wide_subsmc_trans[trans]:\n  assumes \"\\<AA> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"\\<BB> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<AA> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "interpret \\<AA>\\<BB>: wide_subsemicategory \\<alpha> \\<AA> \\<BB>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "interpret \\<BB>\\<CC>: wide_subsemicategory \\<alpha> \\<BB> \\<CC>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by \n      (\n        intro \n          wide_subsemicategoryI \n          subsmc_trans[\n            OF \\<AA>\\<BB>.subsemicategory_axioms \\<BB>\\<CC>.subsemicategory_axioms\n            ], \n        rule wide_subdg_trans, \n        rule \\<AA>\\<BB>.wide_subsmc_wide_subdigraph, \n        rule \\<BB>\\<CC>.wide_subsmc_wide_subdigraph\n     )"], ["proof (state)\nthis:\n  \\<AA>\n  \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wide_subsmc_antisym:\n  assumes \"\\<AA> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"\\<BB> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<AA>\"\n  shows \"\\<AA> = \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "interpret \\<AA>\\<BB>: wide_subsemicategory \\<alpha> \\<AA> \\<BB>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "interpret \\<BB>\\<AA>: wide_subsemicategory \\<alpha> \\<BB> \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "by \n      (\n        rule subsmc_antisym[\n          OF \\<AA>\\<BB>.subsemicategory_axioms \\<BB>\\<AA>.subsemicategory_axioms\n          ]\n      )"], ["proof (state)\nthis:\n  \\<AA> = \\<BB>\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>\\newpage\\<close>"], ["", "end"]]}