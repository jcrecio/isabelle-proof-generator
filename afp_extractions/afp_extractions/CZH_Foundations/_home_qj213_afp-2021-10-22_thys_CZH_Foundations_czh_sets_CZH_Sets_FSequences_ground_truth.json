{"file_name": "/home/qj213/afp-2021-10-22/thys/CZH_Foundations/czh_sets/CZH_Sets_FSequences.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CZH_Foundations", "problem_names": ["lemmas [intro] = vfsequence.axioms(1)", "lemma vfsequenceI[intro]:\n  assumes \"vsv xs\" and \"\\<D>\\<^sub>\\<circ> xs \\<in>\\<^sub>\\<circ> \\<omega>\"\n  shows \"vfsequence xs\"", "lemma vfsequenceD[dest]:\n  assumes \"vfsequence xs\"\n  shows \"\\<D>\\<^sub>\\<circ> xs \\<in>\\<^sub>\\<circ> \\<omega>\"", "lemma vfsequenceE[elim]:\n  assumes \"vfsequence xs\" and \"\\<D>\\<^sub>\\<circ> xs \\<in>\\<^sub>\\<circ> \\<omega> \\<Longrightarrow> P\"\n  shows P", "lemma vfsequence_iff: \"vfsequence xs \\<longleftrightarrow> vsv xs \\<and> \\<D>\\<^sub>\\<circ> xs \\<in>\\<^sub>\\<circ> \\<omega>\"", "lemma (in vfsequence) vfsequence_vdomain: \"\\<D>\\<^sub>\\<circ> xs = vcard xs\"", "lemma (in vfsequence) vfsequence_vcard_in_omega[simp]: \"vcard xs \\<in>\\<^sub>\\<circ> \\<omega>\"", "lemma vfsequence_vempty[intro, simp]: \"vfsequence 0\"", "lemma vfsequence_vsingleton[intro, simp]: \"vfsequence (set {\\<langle>0, a\\<rangle>})\"", "lemma (in vfsequence) vfsequence_vinsert: \n  \"vfsequence (vinsert \\<langle>vcard xs, a\\<rangle> xs)\"", "lemma (in vfsequence) vfsequence_vfinite[simp]: \"vfinite xs\"", "lemma (in vfsequence) vfsequence_vlrestriction[intro, simp]:\n  assumes \"k \\<in>\\<^sub>\\<circ> \\<omega>\"\n  shows \"vfsequence (xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> k)\"", "lemma vfsequence_vproduct: \n  assumes \"n \\<in>\\<^sub>\\<circ> \\<omega>\" and \"xs \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>n. A i)\"\n  shows \"vfsequence xs\"", "lemma vfsequence_vcpower: \n  assumes \"n \\<in>\\<^sub>\\<circ> \\<omega>\" and \"xs \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> n\"\n  shows \"vfsequence xs\"", "lemma (in vfsequence) vfsequence_vdomain_vlrestriction[intro, simp]: \n  assumes \"k \\<in>\\<^sub>\\<circ> vcard xs\"\n  shows \"\\<D>\\<^sub>\\<circ> (xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> k) = k\"", "lemma (in vfsequence) vfsequence_vlrestriction_vcard[simp]: \n  \"xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> (vcard xs) = xs\"", "lemma vfsequence_vfinite_vcardI:\n  assumes \"vsv xs\" and \"vfinite xs\" and \"\\<D>\\<^sub>\\<circ> xs = vcard xs\"\n  shows \"vfsequence xs\"", "lemma (in vfsequence) vfsequence_vrangeE:\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> xs\" \n  obtains n where \"n \\<in>\\<^sub>\\<circ> vcard xs\" and \"xs\\<lparr>n\\<rparr> = a\"", "lemma (in vfsequence) vfsequence_vrange_vproduct:\n  assumes \"\\<And>i. i \\<in>\\<^sub>\\<circ> vcard xs \\<Longrightarrow> xs\\<lparr>i\\<rparr> \\<in>\\<^sub>\\<circ> A i\" \n  shows \"xs \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>vcard xs. A i)\"", "lemma (in vfsequence) vfsequence_vrange_vcpower:\n  assumes \"\\<R>\\<^sub>\\<circ> xs \\<subseteq>\\<^sub>\\<circ> A\"\n  shows \"xs \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> (vcard xs)\"", "lemmas [intro, simp] = vfsequence.vfsequence_vcard_in_omega \n  and [intro, simp] = vfsequence.vfsequence_vfinite\n  and [intro, simp] = vfsequence.vfsequence_vlrestriction\n  and [intro, simp] = vfsequence.vfsequence_vdomain_vlrestriction\n  and [intro, simp] = vfsequence.vfsequence_vlrestriction_vcard", "lemma vconsI[intro!]: \n  assumes \"a \\<in>\\<^sub>\\<circ> vinsert \\<langle>vcard xs, x\\<rangle> xs\"\n  shows \"a \\<in>\\<^sub>\\<circ> xs #\\<^sub>\\<circ> x\"", "lemma vconsD[dest!]:\n  assumes \"a \\<in>\\<^sub>\\<circ> xs #\\<^sub>\\<circ> x\"\n  shows \"a \\<in>\\<^sub>\\<circ> vinsert \\<langle>vcard xs, x\\<rangle> xs\"", "lemma vconsE[elim!]:\n  assumes \"a \\<in>\\<^sub>\\<circ> xs #\\<^sub>\\<circ> x\"\n  obtains a where \"a \\<in>\\<^sub>\\<circ> vinsert \\<langle>vcard xs, x\\<rangle> xs\"", "lemma vcons_neq_vempty[simp]: \"ys #\\<^sub>\\<circ> y \\<noteq> []\\<^sub>\\<circ>\"", "lemma vcons_vsingleton: \"[a]\\<^sub>\\<circ> = set {\\<langle>0\\<^sub>\\<nat>, a\\<rangle>}\"", "lemma vcons_vdoubleton: \"[a, b]\\<^sub>\\<circ> = set {\\<langle>0\\<^sub>\\<nat>, a\\<rangle>, \\<langle>1\\<^sub>\\<nat>, b\\<rangle>}\"", "lemma vcons_vsubset: \"xs \\<subseteq>\\<^sub>\\<circ> xs #\\<^sub>\\<circ> x\"", "lemma vcons_vsubset':\n  assumes \"vcons xs x \\<subseteq>\\<^sub>\\<circ> ys\"\n  shows \"vcons xs x \\<subseteq>\\<^sub>\\<circ> vcons ys y\"", "lemma (in vfsequence) vfsequence_vcons[intro, simp]: \"vfsequence (xs #\\<^sub>\\<circ> x)\"", "lemma (in vfsequence) vfsequence_vcons_vdomain[simp]: \n  \"\\<D>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x) = succ (vcard xs)\"", "lemma (in vfsequence) vfsequence_vcons_vrange[simp]: \n  \"\\<R>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x) = vinsert x (\\<R>\\<^sub>\\<circ> xs)\"", "lemma (in vfsequence) vfsequence_vrange_vconsI:\n  assumes \"\\<R>\\<^sub>\\<circ> xs \\<subseteq>\\<^sub>\\<circ> X\" and \"x \\<in>\\<^sub>\\<circ> X\"\n  shows \"\\<R>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x) \\<subseteq>\\<^sub>\\<circ> X\"", "lemmas vfsequence_vrange_vconsI = vfsequence.vfsequence_vrange_vconsI[rotated 1]", "lemma vcons_vrange_mono:\n  assumes \"xs \\<subseteq>\\<^sub>\\<circ> ys\"\n  shows \"\\<R>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x) \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (ys #\\<^sub>\\<circ> x)\"", "lemma (in vfsequence) vfsequence_vlrestriction_succ:\n  assumes [simp]: \"k \\<in>\\<^sub>\\<circ> vcard xs\"\n  shows \"xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> succ k = xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> k #\\<^sub>\\<circ> (xs\\<lparr>k\\<rparr>)\"", "lemma (in vfsequence) vfsequence_vremove_vcons_vfsequence: \n  assumes \"xs = xs' #\\<^sub>\\<circ> x\"\n  shows \"vfsequence xs'\"", "lemma (in vfsequence) vfsequence_vcons_ex: \n  assumes \"xs \\<noteq> []\\<^sub>\\<circ>\" \n  obtains xs' x where \"xs = xs' #\\<^sub>\\<circ> x\" and \"vfsequence xs'\"", "lemma vfsequence_induct[consumes 1, case_names 0 vcons]:\n  assumes \"vfsequence xs\"\n    and \"P []\\<^sub>\\<circ>\"\n    and \"\\<And>xs x. \\<lbrakk>vfsequence xs; P xs\\<rbrakk> \\<Longrightarrow> P (xs #\\<^sub>\\<circ> x)\"\n  shows \"P xs\"", "lemma vfsequence_cases[consumes 1, case_names 0 vcons]: \n  assumes \"vfsequence xs\"\n    and \"xs = []\\<^sub>\\<circ> \\<Longrightarrow> P\"\n    and \"\\<And>xs' x. \\<lbrakk>xs = xs' #\\<^sub>\\<circ> x; vfsequence xs'\\<rbrakk> \\<Longrightarrow> P\"\n  shows P", "lemma (in vfsequence) vfsequence_vcard_vcons[simp]: \n  \"vcard (xs #\\<^sub>\\<circ> x) = succ (vcard xs)\"", "lemma (in vfsequence) vfsequence_at_last[intro, simp]:\n  assumes \"i = vcard xs\"\n  shows \"(xs #\\<^sub>\\<circ> x)\\<lparr>i\\<rparr> = x\"", "lemma (in vfsequence) vfsequence_at_not_last[intro, simp]:\n  assumes \"i \\<in>\\<^sub>\\<circ> vcard xs\"\n  shows \"(xs #\\<^sub>\\<circ> x)\\<lparr>i\\<rparr> = xs\\<lparr>i\\<rparr>\"", "lemmas [intro, simp] = vfsequence.vfsequence_vcons\n  and [intro, simp] = vfsequence.vfsequence_vcard_vcons\n  and [intro, simp] = vfsequence.vfsequence_at_last\n  and [intro, simp] = vfsequence.vfsequence_at_not_last\n  and [intro, simp] = vfsequence.vfsequence_vcons_vdomain\n  and [intro, simp] = vfsequence.vfsequence_vcons_vrange", "lemma vcons_eq_vcard_eq:\n  assumes \"xs\\<^sub>1 #\\<^sub>\\<circ> x\\<^sub>1 = xs\\<^sub>2 #\\<^sub>\\<circ> x\\<^sub>2\"\n  shows \"vcard xs\\<^sub>1 = vcard xs\\<^sub>2\"", "lemma vcons_eqD[dest]:\n  assumes \"xs\\<^sub>1 #\\<^sub>\\<circ> x\\<^sub>1 = xs\\<^sub>2 #\\<^sub>\\<circ> x\\<^sub>2\"\n  shows \"xs\\<^sub>1 = xs\\<^sub>2\" and \"x\\<^sub>1 = x\\<^sub>2\"", "lemma vcons_eqI:\n  assumes \"xs\\<^sub>1 = xs\\<^sub>2\" and \"x\\<^sub>1 = x\\<^sub>2\"\n  shows \"xs\\<^sub>1 #\\<^sub>\\<circ> x\\<^sub>1 = xs\\<^sub>2 #\\<^sub>\\<circ> x\\<^sub>2\"", "lemma vcons_eq_iff[simp]: \"(xs\\<^sub>1 #\\<^sub>\\<circ> x\\<^sub>1 = xs\\<^sub>2 #\\<^sub>\\<circ> x\\<^sub>2) \\<longleftrightarrow> (xs\\<^sub>1 = xs\\<^sub>2 \\<and> x\\<^sub>1 = x\\<^sub>2)\"", "lemmas_with[OF vfsequence_pair.intro[OF xs\\<^sub>1 xs\\<^sub>2]]:\n  vcons_eqD' = vfsequence_pair.vcons_eqD\n  and vcons_eq_iff[intro, simp] = vfsequence_pair.vcons_eq_iff", "lemmas vcons_eqD[dest] = vcons_eqD'[rotated -1]", "lemma vfsequence_vfsequence_of_vlist: \"vfsequence (vfsequence_of_vlist xs)\"", "lemma inj_vfsequence_of_vlist: \"inj vfsequence_of_vlist\"", "lemma range_vfsequence_of_vlist: \n  \"range vfsequence_of_vlist = {xs. vfsequence xs}\"", "lemma vlist_of_vfsequence_vfsequence_of_vlist[simp]: \n  \"vlist_of_vfsequence (vfsequence_of_vlist xs) = xs\"", "lemma (in vfsequence) vfsequence_of_vlist_vlist_of_vfsequence[simp]: \n  \"vfsequence_of_vlist (vlist_of_vfsequence xs) = xs\"", "lemmas vfsequence_of_vlist_vlist_of_vfsequence[intro, simp] =\n  vfsequence.vfsequence_of_vlist_vlist_of_vfsequence", "lemma vlist_of_vfsequence_vempty[simp]: \"vlist_of_vfsequence []\\<^sub>\\<circ> = []\"", "lemma cr_vfsequence_right_total[transfer_rule]: \"right_total cr_vfsequence\"", "lemma cr_vfsequence_bi_unqie[transfer_rule]: \"bi_unique cr_vfsequence\"", "lemma cr_vfsequence_transfer_domain_rule[transfer_domain_rule]: \n  \"Domainp cr_vfsequence = (\\<lambda>xs. vfsequence xs)\"", "lemma cr_vfsequence_vconsD:\n  assumes \"cr_vfsequence (xs #\\<^sub>\\<circ> x) (y # ys)\" \n  shows \"cr_vfsequence xs ys\" and \"x = y\"", "lemma cr_cr_vfsequence_right_total[transfer_rule]: \n  \"right_total cr_cr_vfsequence\"", "lemma cr_cr_vfsequence_bi_unqie[transfer_rule]: \"bi_unique cr_cr_vfsequence\"", "lemma cr_scalar_bi_unique[transfer_rule]:\n  assumes \"bi_unique R\"\n  shows \"bi_unique (cr_scalar R)\"", "lemma cr_scalar_right_total[transfer_rule]:\n  assumes \"right_total R\"\n  shows \"right_total (cr_scalar R)\"", "lemma cr_scalar_transfer_domain_rule[transfer_domain_rule]: \n  \"Domainp (cr_scalar R) = (\\<lambda>x. \\<exists>a. x = [a]\\<^sub>\\<circ> \\<and> Domainp R a)\"", "lemma vfsequence_vempty_transfer[transfer_rule]: \"cr_vfsequence []\\<^sub>\\<circ> []\"", "lemma vfsequence_vempty_ll_transfer[transfer_rule]: \n  \"cr_cr_vfsequence [[]\\<^sub>\\<circ>]\\<^sub>\\<circ> [[]]\"", "lemma vcons_transfer[transfer_rule]:\n  \"((=) ===> cr_vfsequence ===> cr_vfsequence) (\\<lambda>x xs. xs #\\<^sub>\\<circ> x) (\\<lambda>x xs. x # xs)\"", "lemma vcons_ll_transfer[transfer_rule]:\n  \"(cr_vfsequence ===> cr_cr_vfsequence ===> cr_cr_vfsequence) \n    (\\<lambda>x xs. xs #\\<^sub>\\<circ> x) (\\<lambda>x xs. x # xs)\"", "lemma vfsequence_vrange_transfer[transfer_rule]:\n  \"(cr_vfsequence ===> (=)) (\\<lambda>xs. elts (\\<R>\\<^sub>\\<circ> xs)) list.set\"", "lemma vcard_transfer[transfer_rule]: \n  \"(cr_vfsequence ===> cr_omega) vcard length\"", "lemma vcard_ll_transfer[transfer_rule]: \n  \"(cr_cr_vfsequence ===> cr_omega) vcard length\"", "lemma vrange_vfsequence_of_vlist: \n  \"\\<R>\\<^sub>\\<circ> (vfsequence_of_vlist xs) = set (list.set xs)\"", "lemma cr_cr_vfsequence_transfer_domain_rule[transfer_domain_rule]: \n  \"Domainp cr_cr_vfsequence = \n    (\\<lambda>xss. vfsequence xss \\<and> (\\<forall>xs\\<in>\\<^sub>\\<circ>\\<R>\\<^sub>\\<circ> xss. vfsequence xs))\"", "lemma vappend_transfer[transfer_rule]: \n  includes lifting_syntax\n  shows \"(cr_vfsequence ===> cr_vfsequence ===> cr_vfsequence) \n    (\\<lambda>xs ys. vappend ys xs) append\"", "lemma vappend_ll_transfer[transfer_rule]: \n  includes lifting_syntax\n  shows \"(cr_cr_vfsequence ===> cr_cr_vfsequence ===> cr_cr_vfsequence) \n    (\\<lambda>xs ys. vappend ys xs) append\"", "lemma (in vfsequence) vfsequence_vappend_vempty_vfsequence[simp]: \n  \"[]\\<^sub>\\<circ> @\\<^sub>\\<circ> xs = xs\"", "lemmas vfsequence_vappend_vempty_vfsequence[simp] =\n  vfsequence.vfsequence_vappend_vempty_vfsequence", "lemma (in vfsequence) vfsequence_vappend_vfsequence_vempty[simp]:\n  \"xs @\\<^sub>\\<circ> []\\<^sub>\\<circ> = xs\"", "lemmas vfsequence_vappend_vfsequence_vempty[simp] =\n  vfsequence.vfsequence_vappend_vfsequence_vempty", "lemma vappend_vcons[simp]: \n  assumes \"vfsequence xs\" and \"vfsequence ys\"\n  shows \"xs @\\<^sub>\\<circ> (ys #\\<^sub>\\<circ> y) = (xs @\\<^sub>\\<circ> ys) #\\<^sub>\\<circ> y\"", "lemma vdistinct_transfer[transfer_rule]: \n  includes lifting_syntax\n  shows \"(cr_vfsequence ===> (=)) vdistinct distinct\"", "lemma vdistinct_ll_transfer[transfer_rule]: \n  includes lifting_syntax\n  shows \"(cr_cr_vfsequence ===> (=)) vdistinct distinct\"", "lemma (in vfsequence) vfsequence_vdistinct_if_vcard_vrange_eq_vcard:\n  assumes \"vcard (\\<R>\\<^sub>\\<circ> xs) = vcard xs\"\n  shows \"vdistinct xs\"", "lemma vdistinct_vempty[intro, simp]: \"vdistinct []\\<^sub>\\<circ>\"", "lemma (in vfsequence) vfsequence_vcons_vdistinct:\n  assumes \"vdistinct (xs #\\<^sub>\\<circ> x)\" \n  shows \"vdistinct xs\"", "lemma (in vfsequence) vfsequence_vcons_nin_vrange:\n  assumes \"vdistinct (xs #\\<^sub>\\<circ> x)\" \n  shows \"x \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> xs\"", "lemma (in vfsequence) vfsequence_v11I[intro]:\n  assumes \"vdistinct xs\"\n  shows \"v11 xs\"", "lemma (in vfsequence) vfsequence_vcons_vdistinctI:\n  assumes \"vdistinct xs\" and \"x \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> xs\"\n  shows \"vdistinct (xs #\\<^sub>\\<circ> x)\"", "lemmas vfsequence_vcons_vdistinctI[intro] =\n  vfsequence.vfsequence_vcons_vdistinctI", "lemma (in vfsequence) vfsequence_nin_vrange_vcons:\n  assumes \"y \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> xs\" and \"y \\<noteq> x\"\n  shows \"y \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x)\"", "lemmas vfsequence_nin_vrange_vcons[intro] = \n  vfsequence.vfsequence_nin_vrange_vcons", "lemma vconcat_transfer[transfer_rule]: \n  includes lifting_syntax\n  shows \"(cr_cr_vfsequence ===> cr_vfsequence) vconcat concat\"", "lemma vconcat_vempty[simp]: \"vconcat []\\<^sub>\\<circ> = []\\<^sub>\\<circ>\"", "lemma vconcat_append[simp]: \n  assumes \"vfsequence xss\" \n    and \"\\<forall>xs\\<in>\\<^sub>\\<circ>\\<R>\\<^sub>\\<circ> xss. vfsequence xs\" \n    and \"vfsequence yss\"\n    and \"\\<forall>xs\\<in>\\<^sub>\\<circ>\\<R>\\<^sub>\\<circ> yss. vfsequence xs\" \n  shows \"vconcat (xss @\\<^sub>\\<circ> yss) = vconcat xss @\\<^sub>\\<circ> vconcat yss\"", "lemma vconcat_vcons[simp]: \n  assumes \"vfsequence xs\" and \"vfsequence xss\" and \"\\<forall>xs\\<in>\\<^sub>\\<circ>\\<R>\\<^sub>\\<circ> xss. vfsequence xs\"\n  shows \"vconcat (xss #\\<^sub>\\<circ> xs) = vconcat xss @\\<^sub>\\<circ> xs\"", "lemma (in vfsequence) vfsequence_vconcat_fsingleton[simp]: \"vconcat [xs]\\<^sub>\\<circ> = xs\"", "lemmas vfsequence_vconcat_fsingleton[simp] = \n  vfsequence.vfsequence_vconcat_fsingleton", "lemma vfsequence_vcons_vproductI[intro!]:\n  assumes \"n \\<in>\\<^sub>\\<circ> \\<omega>\" \n    and \"xs \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>vcard xs. A i)\" \n    and \"x \\<in>\\<^sub>\\<circ> A (vcard xs)\" \n    and \"n = vcard (xs #\\<^sub>\\<circ> x)\"\n  shows \"xs #\\<^sub>\\<circ> x \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>n. A i)\"", "lemma vfsequence_vcons_vproductD[dest]:\n  assumes \"xs #\\<^sub>\\<circ> x \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>n. A i)\" and \"n \\<in>\\<^sub>\\<circ> \\<omega>\"\n  shows \"xs \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>vcard xs. A i)\" \n    and \"x \\<in>\\<^sub>\\<circ> A (vcard xs)\" \n    and \"n = vcard (xs #\\<^sub>\\<circ> x)\"", "lemma vfsequence_vcons_vproductE[elim!]:\n  assumes \"xs #\\<^sub>\\<circ> x \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>n. A i)\" and \"n \\<in>\\<^sub>\\<circ> \\<omega>\"\n  obtains \"xs \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>vcard xs. A i)\" \n    and \"x \\<in>\\<^sub>\\<circ> A (vcard xs)\" \n    and \"n = vcard (xs #\\<^sub>\\<circ> x)\"", "lemma small_fpairs[simp]: \"small {[a, b]\\<^sub>\\<circ> | a b. [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> r}\"", "lemma ftimesI1[intro]: \n  assumes \"x = [a, b]\\<^sub>\\<circ>\" and \"a \\<in>\\<^sub>\\<circ> A\" and \"b \\<in>\\<^sub>\\<circ> B\"\n  shows \"x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<bullet> B\"", "lemma ftimesI2[intro!]: \n  assumes \"a \\<in>\\<^sub>\\<circ> A\" and \"b \\<in>\\<^sub>\\<circ> B\"\n  shows \"[a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<bullet> B\"", "lemma fproductE1[elim!]:\n  assumes \"x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<bullet> B\"\n  obtains a b where \"x = [a, b]\\<^sub>\\<circ>\" and \"a \\<in>\\<^sub>\\<circ> A\" and \"b \\<in>\\<^sub>\\<circ> B\"", "lemma fproductE2[elim!]:\n  assumes \"[a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<bullet> B\" obtains \"a \\<in>\\<^sub>\\<circ> A\" and \"b \\<in>\\<^sub>\\<circ> B\"", "lemma vfinite_0_left[simp]: \"0 \\<times>\\<^sub>\\<bullet> b = 0\"", "lemma vfinite_0_right[simp]: \"a \\<times>\\<^sub>\\<bullet> 0 = 0\"", "lemma fproduct_vintersection: \"(a \\<inter>\\<^sub>\\<circ> b) \\<times>\\<^sub>\\<bullet> (c \\<inter>\\<^sub>\\<circ> d) = (a \\<times>\\<^sub>\\<bullet> c) \\<inter>\\<^sub>\\<circ> (b \\<times>\\<^sub>\\<bullet> d)\"", "lemma fproduct_vdiff: \"a \\<times>\\<^sub>\\<bullet> (b -\\<^sub>\\<circ> c) = (a \\<times>\\<^sub>\\<bullet> b) -\\<^sub>\\<circ> (a \\<times>\\<^sub>\\<bullet> c)\"", "lemma vfinite_ftimesI[intro!]:\n  assumes \"vfinite a\" and \"vfinite b\"\n  shows \"vfinite (a \\<times>\\<^sub>\\<bullet> b)\"", "lemma vproduct_vpair: \"[a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>2\\<^sub>\\<nat>. f i) \\<longleftrightarrow> \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> f (0\\<^sub>\\<nat>) \\<times>\\<^sub>\\<circ> f (1\\<^sub>\\<nat>)\"", "lemma vcpower_two_ftimes: \"A ^\\<^sub>\\<times> 2\\<^sub>\\<nat> = A \\<times>\\<^sub>\\<bullet> A\"", "lemma vcpower_two_ftimesI[intro]: \n  assumes \"x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<bullet> A\"\n  shows \"x \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\"", "lemma vcpower_two_ftimesD[dest]:\n  assumes \"x \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\"\n  shows \"x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<bullet> A\"", "lemma vcpower_two_ftimesE[elim]:\n  assumes \"x \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\" and \"x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<bullet> A \\<Longrightarrow> P\"\n  shows P", "lemma vfsequence_vcpower_two_vpair: \"[a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> 2\\<^sub>\\<nat> \\<longleftrightarrow> \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> A\"", "lemma vsv_vfsequence_two: \n  assumes \"vsv gf\" and \"\\<D>\\<^sub>\\<circ> gf = 2\\<^sub>\\<nat>\"\n  shows \"[vpfst gf, vpsnd gf]\\<^sub>\\<circ> = gf\"", "lemma vsv_vfsequence_three: \n  assumes \"vsv hgf\" and \"\\<D>\\<^sub>\\<circ> hgf = 3\\<^sub>\\<nat>\"\n  shows \"[vpfst hgf, vpsnd hgf, vpthrd hgf]\\<^sub>\\<circ> = hgf\"", "lemma vcons_in_vcpowerI[intro!]: \n  assumes \"n \\<in>\\<^sub>\\<circ> \\<omega>\" \n    and \"xs \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> vcard xs\" \n    and \"x \\<in>\\<^sub>\\<circ> A\" \n    and \"n = vcard (xs #\\<^sub>\\<circ> x)\" \n  shows \"xs #\\<^sub>\\<circ> x \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> n\"", "lemma vcons_in_vcpowerD[dest]: \n  assumes \"xs #\\<^sub>\\<circ> x \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> n\" and \"n \\<in>\\<^sub>\\<circ> \\<omega>\"\n  shows \"xs \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> vcard xs\" \n    and \"x \\<in>\\<^sub>\\<circ> A\" \n    and \"n = vcard (xs #\\<^sub>\\<circ> x)\"", "lemma vcons_in_vcpowerE1[elim!]: \n  assumes \"xs #\\<^sub>\\<circ> x \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> n\" and \"n \\<in>\\<^sub>\\<circ> \\<omega>\"\n  obtains \"xs \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> vcard xs\" and \"x \\<in>\\<^sub>\\<circ> A\" and \"n = vcard (xs #\\<^sub>\\<circ> x)\"", "lemma vcons_in_vcpowerE2: \n  assumes \"xs \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> n\" and \"n \\<in>\\<^sub>\\<circ> \\<omega>\" and \"0 \\<in>\\<^sub>\\<circ> n\"\n  obtains x xs' where \"xs = xs' #\\<^sub>\\<circ> x\"\n    and \"xs' \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> vcard xs'\" \n    and \"x \\<in>\\<^sub>\\<circ> A\" \n    and \"n = vcard (xs' #\\<^sub>\\<circ> x)\"", "lemma vcons_vcpower1E: (*TODO: generalize*)\n  assumes \"xs \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> 1\\<^sub>\\<nat>\"  \n  obtains x where \"xs = [x]\\<^sub>\\<circ>\" and \"x \\<in>\\<^sub>\\<circ> A\""], "translations": [["", "lemmas [intro] = vfsequence.axioms(1)"], ["", "lemma vfsequenceI[intro]:\n  assumes \"vsv xs\" and \"\\<D>\\<^sub>\\<circ> xs \\<in>\\<^sub>\\<circ> \\<omega>\"\n  shows \"vfsequence xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence xs", "using assms"], ["proof (prove)\nusing this:\n  vsv xs\n  \\<D>\\<^sub>\\<circ> xs \\<in>\\<^sub>\\<circ> \\<omega>\n\ngoal (1 subgoal):\n 1. vfsequence xs", "by (simp add: vfsequence.intro vfsequence_axioms_def)"], ["", "lemma vfsequenceD[dest]:\n  assumes \"vfsequence xs\"\n  shows \"\\<D>\\<^sub>\\<circ> xs \\<in>\\<^sub>\\<circ> \\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> xs \\<in>\\<^sub>\\<circ> \\<omega>", "using assms vfsequence.vfsequence_vdomain_in_omega"], ["proof (prove)\nusing this:\n  vfsequence xs\n  vfsequence ?xs \\<Longrightarrow>\n  \\<D>\\<^sub>\\<circ> ?xs \\<in>\\<^sub>\\<circ> \\<omega>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> xs \\<in>\\<^sub>\\<circ> \\<omega>", "by simp"], ["", "lemma vfsequenceE[elim]:\n  assumes \"vfsequence xs\" and \"\\<D>\\<^sub>\\<circ> xs \\<in>\\<^sub>\\<circ> \\<omega> \\<Longrightarrow> P\"\n  shows P"], ["proof (prove)\ngoal (1 subgoal):\n 1. P", "using assms"], ["proof (prove)\nusing this:\n  vfsequence xs\n  \\<D>\\<^sub>\\<circ> xs \\<in>\\<^sub>\\<circ> \\<omega> \\<Longrightarrow> P\n\ngoal (1 subgoal):\n 1. P", "by auto"], ["", "lemma vfsequence_iff: \"vfsequence xs \\<longleftrightarrow> vsv xs \\<and> \\<D>\\<^sub>\\<circ> xs \\<in>\\<^sub>\\<circ> \\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence xs =\n    (vsv xs \\<and> \\<D>\\<^sub>\\<circ> xs \\<in>\\<^sub>\\<circ> \\<omega>)", "using vfsequence_def"], ["proof (prove)\nusing this:\n  vfsequence ?xs \\<equiv> vsv ?xs \\<and> vfsequence_axioms ?xs\n\ngoal (1 subgoal):\n 1. vfsequence xs =\n    (vsv xs \\<and> \\<D>\\<^sub>\\<circ> xs \\<in>\\<^sub>\\<circ> \\<omega>)", "by auto"], ["", "text\\<open>Elementary properties.\\<close>"], ["", "lemma (in vfsequence) vfsequence_vdomain: \"\\<D>\\<^sub>\\<circ> xs = vcard xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> xs = vcard xs", "unfolding vsv_vcard_vdomain[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> xs = vcard (\\<D>\\<^sub>\\<circ> xs)", "using vfsequence_vdomain_in_omega"], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> xs \\<in>\\<^sub>\\<circ> \\<omega>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> xs = vcard (\\<D>\\<^sub>\\<circ> xs)", "by simp"], ["", "lemma (in vfsequence) vfsequence_vcard_in_omega[simp]: \"vcard xs \\<in>\\<^sub>\\<circ> \\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard xs \\<in>\\<^sub>\\<circ> \\<omega>", "using vfsequence_vdomain_in_omega"], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> xs \\<in>\\<^sub>\\<circ> \\<omega>\n\ngoal (1 subgoal):\n 1. vcard xs \\<in>\\<^sub>\\<circ> \\<omega>", "by (simp add: vfsequence_vdomain)"], ["", "text\\<open>Set operations.\\<close>"], ["", "lemma vfsequence_vempty[intro, simp]: \"vfsequence 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence 0", "by (simp add: vfsequenceI)"], ["", "lemma vfsequence_vsingleton[intro, simp]: \"vfsequence (set {\\<langle>0, a\\<rangle>})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (set {\\<langle>0, a\\<rangle>})", "using vone_in_omega"], ["proof (prove)\nusing this:\n  1 \\<in>\\<^sub>\\<circ> \\<omega>\n\ngoal (1 subgoal):\n 1. vfsequence (set {\\<langle>0, a\\<rangle>})", "unfolding one_V_def"], ["proof (prove)\nusing this:\n  ZFC_in_HOL.succ 0 \\<in>\\<^sub>\\<circ> \\<omega>\n\ngoal (1 subgoal):\n 1. vfsequence (set {\\<langle>0, a\\<rangle>})", "by (intro vfsequenceI) (auto simp: set_vzero_eq_ord_of_nat_vone)"], ["", "lemma (in vfsequence) vfsequence_vinsert: \n  \"vfsequence (vinsert \\<langle>vcard xs, a\\<rangle> xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (vinsert \\<langle>vcard xs, a\\<rangle> xs)", "using succ_def succ_in_omega"], ["proof (prove)\nusing this:\n  ZFC_in_HOL.succ ?x \\<equiv> vinsert ?x ?x\n  ?n \\<in>\\<^sub>\\<circ> \\<omega> \\<Longrightarrow>\n  ZFC_in_HOL.succ ?n \\<in>\\<^sub>\\<circ> \\<omega>\n\ngoal (1 subgoal):\n 1. vfsequence (vinsert \\<langle>vcard xs, a\\<rangle> xs)", "by (auto simp: vfsequence_vdomain)"], ["", "text\\<open>Connections.\\<close>"], ["", "lemma (in vfsequence) vfsequence_vfinite[simp]: \"vfinite xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfinite xs", "by (simp add: vfinite_vcard_omega_iff)"], ["", "lemma (in vfsequence) vfsequence_vlrestriction[intro, simp]:\n  assumes \"k \\<in>\\<^sub>\\<circ> \\<omega>\"\n  shows \"vfsequence (xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> k)", "using assms"], ["proof (prove)\nusing this:\n  k \\<in>\\<^sub>\\<circ> \\<omega>\n\ngoal (1 subgoal):\n 1. vfsequence (xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> k)", "by (force simp: vfsequence_vdomain vdomain_vlrestriction)"], ["", "lemma vfsequence_vproduct: \n  assumes \"n \\<in>\\<^sub>\\<circ> \\<omega>\" and \"xs \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>n. A i)\"\n  shows \"vfsequence xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence xs", "using assms"], ["proof (prove)\nusing this:\n  n \\<in>\\<^sub>\\<circ> \\<omega>\n  xs \\<in>\\<^sub>\\<circ> vproduct n A\n\ngoal (1 subgoal):\n 1. vfsequence xs", "by auto"], ["", "lemma vfsequence_vcpower: \n  assumes \"n \\<in>\\<^sub>\\<circ> \\<omega>\" and \"xs \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> n\"\n  shows \"vfsequence xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence xs", "using assms vfsequence_vproduct"], ["proof (prove)\nusing this:\n  n \\<in>\\<^sub>\\<circ> \\<omega>\n  xs \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> n\n  \\<lbrakk>?n \\<in>\\<^sub>\\<circ> \\<omega>;\n   ?xs \\<in>\\<^sub>\\<circ> vproduct ?n ?A\\<rbrakk>\n  \\<Longrightarrow> vfsequence ?xs\n\ngoal (1 subgoal):\n 1. vfsequence xs", "by auto"], ["", "text\\<open>Special properties.\\<close>"], ["", "lemma (in vfsequence) vfsequence_vdomain_vlrestriction[intro, simp]: \n  assumes \"k \\<in>\\<^sub>\\<circ> vcard xs\"\n  shows \"\\<D>\\<^sub>\\<circ> (xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> k) = k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> k) = k", "using assms"], ["proof (prove)\nusing this:\n  k \\<in>\\<^sub>\\<circ> vcard xs\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> k) = k", "by \n    (\n      simp add: \n        OrdmemD \n        inf_absorb2   \n        order.strict_implies_order \n        vdomain_vlrestriction \n        vfsequence_vdomain\n    )"], ["", "lemma (in vfsequence) vfsequence_vlrestriction_vcard[simp]: \n  \"xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> (vcard xs) = xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> vcard xs = xs", "by (rule vlrestriction_vdomain[unfolded vfsequence_vdomain])"], ["", "lemma vfsequence_vfinite_vcardI:\n  assumes \"vsv xs\" and \"vfinite xs\" and \"\\<D>\\<^sub>\\<circ> xs = vcard xs\"\n  shows \"vfsequence xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence xs", "using assms"], ["proof (prove)\nusing this:\n  vsv xs\n  vfinite xs\n  \\<D>\\<^sub>\\<circ> xs = vcard xs\n\ngoal (1 subgoal):\n 1. vfsequence xs", "by (intro vfsequenceI) (auto simp: vfinite_vcard_omega)"], ["", "lemma (in vfsequence) vfsequence_vrangeE:\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> xs\" \n  obtains n where \"n \\<in>\\<^sub>\\<circ> vcard xs\" and \"xs\\<lparr>n\\<rparr> = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>n \\<in>\\<^sub>\\<circ> vcard xs;\n         xs\\<lparr>n\\<rparr> = a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms vfsequence_vdomain"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> xs\n  \\<D>\\<^sub>\\<circ> xs = vcard xs\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>n \\<in>\\<^sub>\\<circ> vcard xs;\n         xs\\<lparr>n\\<rparr> = a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["", "lemma (in vfsequence) vfsequence_vrange_vproduct:\n  assumes \"\\<And>i. i \\<in>\\<^sub>\\<circ> vcard xs \\<Longrightarrow> xs\\<lparr>i\\<rparr> \\<in>\\<^sub>\\<circ> A i\" \n  shows \"xs \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>vcard xs. A i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs \\<in>\\<^sub>\\<circ> vproduct (vcard xs) A", "using vfsequence_vdomain vsv_axioms assms"], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> xs = vcard xs\n  vsv xs\n  ?i \\<in>\\<^sub>\\<circ> vcard xs \\<Longrightarrow>\n  xs\\<lparr>?i\\<rparr> \\<in>\\<^sub>\\<circ> A ?i\n\ngoal (1 subgoal):\n 1. xs \\<in>\\<^sub>\\<circ> vproduct (vcard xs) A", "by \n    (\n      intro vproductI; \n      (intro vsv.vsv_vrange_vsubset_vifunion_app | tactic\\<open>all_tac\\<close>)\n    ) auto"], ["", "lemma (in vfsequence) vfsequence_vrange_vcpower:\n  assumes \"\\<R>\\<^sub>\\<circ> xs \\<subseteq>\\<^sub>\\<circ> A\"\n  shows \"xs \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> (vcard xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> vcard xs", "using assms"], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> xs \\<subseteq>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. xs \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> vcard xs", "proof(elim vsubsetE; intro vcpowerI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x.\n                x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n xs \\<Longrightarrow>\n                x \\<in>\\<^sub>\\<circ> A;\n     \\<R>\\<^sub>\\<circ> xs \\<subseteq>\\<^sub>\\<circ> A\\<rbrakk>\n    \\<Longrightarrow> xs \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>vcard\n            xs.\n           A)", "assume hyp: \"x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> xs \\<Longrightarrow> x \\<in>\\<^sub>\\<circ> A\" for x"], ["proof (state)\nthis:\n  ?x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> xs \\<Longrightarrow>\n  ?x \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x.\n                x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n xs \\<Longrightarrow>\n                x \\<in>\\<^sub>\\<circ> A;\n     \\<R>\\<^sub>\\<circ> xs \\<subseteq>\\<^sub>\\<circ> A\\<rbrakk>\n    \\<Longrightarrow> xs \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>vcard\n            xs.\n           A)", "from vfsequence_vdomain"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ> xs = vcard xs", "show \"xs \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>vcard xs. A)\""], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> xs = vcard xs\n\ngoal (1 subgoal):\n 1. xs \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>vcard\n                                xs.\n                               A)", "by (intro vproductI) (blast intro: hyp elim: vdomain_atE)+"], ["proof (state)\nthis:\n  xs \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>vcard xs.\n                             A)\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Alternative forms of existing results.\\<close>"], ["", "lemmas [intro, simp] = vfsequence.vfsequence_vcard_in_omega \n  and [intro, simp] = vfsequence.vfsequence_vfinite\n  and [intro, simp] = vfsequence.vfsequence_vlrestriction\n  and [intro, simp] = vfsequence.vfsequence_vdomain_vlrestriction\n  and [intro, simp] = vfsequence.vfsequence_vlrestriction_vcard"], ["", "subsection\\<open>Appending an element to a finite sequence: \\<open>vcons\\<close>\\<close>"], ["", "subsubsection\\<open>Definition and common properties\\<close>"], ["", "definition vcons :: \"V \\<Rightarrow> V \\<Rightarrow> V\"  (infixr \\<open>#\\<^sub>\\<circ>\\<close> 65) \n  where \"xs #\\<^sub>\\<circ> x = vinsert \\<langle>vcard xs, x\\<rangle> xs\""], ["", "text\\<open>Syntax.\\<close>"], ["", "abbreviation vempty_vfsequence (\\<open>[]\\<^sub>\\<circ>\\<close>) where \n  \"vempty_vfsequence \\<equiv> 0::V\""], ["", "notation vempty_vfsequence (\\<open>[]\\<^sub>\\<circ>\\<close>)"], ["", "nonterminal fsfields"], ["", "nonterminal vlist"], ["", "syntax\n  \"\" :: \"V \\<Rightarrow> fsfields\" (\"_\")\n  \"_fsfields\" :: \"fsfields \\<Rightarrow> V \\<Rightarrow> fsfields\" (\"_,/ _\")\n  \"_vlist\" :: \"fsfields \\<Rightarrow> V\" (\"[(_)]\\<^sub>\\<circ>\")\n  \"_vapp\" :: \"V \\<Rightarrow> fsfields \\<Rightarrow> V\" (\"_ \\<lparr>(_)\\<rparr>\\<^sub>\\<bullet>\" [100, 100] 100)"], ["", "translations\n  \"[xs, x]\\<^sub>\\<circ>\" == \"[xs]\\<^sub>\\<circ> #\\<^sub>\\<circ> x\"\n  \"[x]\\<^sub>\\<circ>\" == \"[]\\<^sub>\\<circ> #\\<^sub>\\<circ> x\""], ["", "translations\n  \"f\\<lparr>xs, x\\<rparr>\\<^sub>\\<bullet>\" == \"f\\<lparr>[xs, x]\\<^sub>\\<circ>\\<rparr>\"\n  \"f\\<lparr>x\\<rparr>\\<^sub>\\<bullet>\" == \"f\\<lparr>[x]\\<^sub>\\<circ>\\<rparr>\""], ["", "text\\<open>Rules.\\<close>"], ["", "lemma vconsI[intro!]: \n  assumes \"a \\<in>\\<^sub>\\<circ> vinsert \\<langle>vcard xs, x\\<rangle> xs\"\n  shows \"a \\<in>\\<^sub>\\<circ> xs #\\<^sub>\\<circ> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> xs #\\<^sub>\\<circ> x", "using assms"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> vinsert \\<langle>vcard xs, x\\<rangle> xs\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> xs #\\<^sub>\\<circ> x", "unfolding vcons_def"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> vinsert \\<langle>vcard xs, x\\<rangle> xs\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> vinsert \\<langle>vcard xs, x\\<rangle> xs", "by clarsimp"], ["", "lemma vconsD[dest!]:\n  assumes \"a \\<in>\\<^sub>\\<circ> xs #\\<^sub>\\<circ> x\"\n  shows \"a \\<in>\\<^sub>\\<circ> vinsert \\<langle>vcard xs, x\\<rangle> xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> vinsert \\<langle>vcard xs, x\\<rangle> xs", "using assms"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> xs #\\<^sub>\\<circ> x\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> vinsert \\<langle>vcard xs, x\\<rangle> xs", "unfolding vcons_def"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> vinsert \\<langle>vcard xs, x\\<rangle> xs\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> vinsert \\<langle>vcard xs, x\\<rangle> xs", "by clarsimp"], ["", "lemma vconsE[elim!]:\n  assumes \"a \\<in>\\<^sub>\\<circ> xs #\\<^sub>\\<circ> x\"\n  obtains a where \"a \\<in>\\<^sub>\\<circ> vinsert \\<langle>vcard xs, x\\<rangle> xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a.\n        a \\<in>\\<^sub>\\<circ> vinsert \\<langle>vcard xs, x\\<rangle>\n                               xs \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> xs #\\<^sub>\\<circ> x\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        a \\<in>\\<^sub>\\<circ> vinsert \\<langle>vcard xs, x\\<rangle>\n                               xs \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding vcons_def"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> vinsert \\<langle>vcard xs, x\\<rangle> xs\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        a \\<in>\\<^sub>\\<circ> vinsert \\<langle>vcard xs, x\\<rangle>\n                               xs \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["", "text\\<open>Elementary properties.\\<close>"], ["", "lemma vcons_neq_vempty[simp]: \"ys #\\<^sub>\\<circ> y \\<noteq> []\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ys #\\<^sub>\\<circ> y \\<noteq> []\\<^sub>\\<circ>", "by auto"], ["", "text\\<open>Set operations.\\<close>"], ["", "lemma vcons_vsingleton: \"[a]\\<^sub>\\<circ> = set {\\<langle>0\\<^sub>\\<nat>, a\\<rangle>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [a]\\<^sub>\\<circ> = set {\\<langle>0\\<^sub>\\<nat>, a\\<rangle>}", "unfolding vcons_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vinsert \\<langle>vcard []\\<^sub>\\<circ>, a\\<rangle> []\\<^sub>\\<circ> =\n    set {\\<langle>0\\<^sub>\\<nat>, a\\<rangle>}", "by simp"], ["", "lemma vcons_vdoubleton: \"[a, b]\\<^sub>\\<circ> = set {\\<langle>0\\<^sub>\\<nat>, a\\<rangle>, \\<langle>1\\<^sub>\\<nat>, b\\<rangle>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [a, b]\\<^sub>\\<circ> =\n    set {\\<langle>0\\<^sub>\\<nat>, a\\<rangle>,\n         \\<langle>1\\<^sub>\\<nat>, b\\<rangle>}", "unfolding vcons_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vinsert\n     \\<langle>vcard\n               (vinsert \\<langle>vcard []\\<^sub>\\<circ>, a\\<rangle>\n                 []\\<^sub>\\<circ>),\n              b\\<rangle>\n     (vinsert \\<langle>vcard []\\<^sub>\\<circ>, a\\<rangle>\n       []\\<^sub>\\<circ>) =\n    set {\\<langle>0\\<^sub>\\<nat>, a\\<rangle>,\n         \\<langle>1\\<^sub>\\<nat>, b\\<rangle>}", "using vinsert_vsingleton"], ["proof (prove)\nusing this:\n  vinsert ?a (set {?b}) = set {?a, ?b}\n\ngoal (1 subgoal):\n 1. vinsert\n     \\<langle>vcard\n               (vinsert \\<langle>vcard []\\<^sub>\\<circ>, a\\<rangle>\n                 []\\<^sub>\\<circ>),\n              b\\<rangle>\n     (vinsert \\<langle>vcard []\\<^sub>\\<circ>, a\\<rangle>\n       []\\<^sub>\\<circ>) =\n    set {\\<langle>0\\<^sub>\\<nat>, a\\<rangle>,\n         \\<langle>1\\<^sub>\\<nat>, b\\<rangle>}", "by (force simp: vinsert_set_insert_eq)"], ["", "lemma vcons_vsubset: \"xs \\<subseteq>\\<^sub>\\<circ> xs #\\<^sub>\\<circ> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs \\<subseteq>\\<^sub>\\<circ> xs #\\<^sub>\\<circ> x", "by clarsimp"], ["", "lemma vcons_vsubset':\n  assumes \"vcons xs x \\<subseteq>\\<^sub>\\<circ> ys\"\n  shows \"vcons xs x \\<subseteq>\\<^sub>\\<circ> vcons ys y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs #\\<^sub>\\<circ> x \\<subseteq>\\<^sub>\\<circ> ys #\\<^sub>\\<circ> y", "using assms"], ["proof (prove)\nusing this:\n  xs #\\<^sub>\\<circ> x \\<subseteq>\\<^sub>\\<circ> ys\n\ngoal (1 subgoal):\n 1. xs #\\<^sub>\\<circ> x \\<subseteq>\\<^sub>\\<circ> ys #\\<^sub>\\<circ> y", "unfolding vcons_def"], ["proof (prove)\nusing this:\n  vinsert \\<langle>vcard xs, x\\<rangle> xs \\<subseteq>\\<^sub>\\<circ> ys\n\ngoal (1 subgoal):\n 1. vinsert \\<langle>vcard xs, x\\<rangle> xs\n    \\<subseteq>\\<^sub>\\<circ> vinsert \\<langle>vcard ys, y\\<rangle> ys", "by auto"], ["", "text\\<open>Connections.\\<close>"], ["", "lemma (in vfsequence) vfsequence_vcons[intro, simp]: \"vfsequence (xs #\\<^sub>\\<circ> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (xs #\\<^sub>\\<circ> x)", "proof(intro vfsequenceI)"], ["proof (state)\ngoal (2 subgoals):\n 1. vsv (xs #\\<^sub>\\<circ> x)\n 2. \\<D>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x) \\<in>\\<^sub>\\<circ> \\<omega>", "from vfsequence_vdomain_in_omega vsv_vcard_vdomain"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ> xs \\<in>\\<^sub>\\<circ> \\<omega>\n  vcard (\\<D>\\<^sub>\\<circ> xs) = vcard xs", "have \"vcard xs = \\<D>\\<^sub>\\<circ> xs\""], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> xs \\<in>\\<^sub>\\<circ> \\<omega>\n  vcard (\\<D>\\<^sub>\\<circ> xs) = vcard xs\n\ngoal (1 subgoal):\n 1. vcard xs = \\<D>\\<^sub>\\<circ> xs", "by (simp add: vcard_veqpoll)"], ["proof (state)\nthis:\n  vcard xs = \\<D>\\<^sub>\\<circ> xs\n\ngoal (2 subgoals):\n 1. vsv (xs #\\<^sub>\\<circ> x)\n 2. \\<D>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x) \\<in>\\<^sub>\\<circ> \\<omega>", "show \"vsv (xs #\\<^sub>\\<circ> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (xs #\\<^sub>\\<circ> x)", "proof(intro vsvI)"], ["proof (state)\ngoal (2 subgoals):\n 1. vbrelation (xs #\\<^sub>\\<circ> x)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> xs #\\<^sub>\\<circ> x;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> xs #\\<^sub>\\<circ> x\\<rbrakk>\n       \\<Longrightarrow> b = c", "fix a b c"], ["proof (state)\ngoal (2 subgoals):\n 1. vbrelation (xs #\\<^sub>\\<circ> x)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> xs #\\<^sub>\\<circ> x;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> xs #\\<^sub>\\<circ> x\\<rbrakk>\n       \\<Longrightarrow> b = c", "assume ab: \"\\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> xs #\\<^sub>\\<circ> x\" and ac: \"\\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> xs #\\<^sub>\\<circ> x\""], ["proof (state)\nthis:\n  \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> xs #\\<^sub>\\<circ> x\n  \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> xs #\\<^sub>\\<circ> x\n\ngoal (2 subgoals):\n 1. vbrelation (xs #\\<^sub>\\<circ> x)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> xs #\\<^sub>\\<circ> x;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> xs #\\<^sub>\\<circ> x\\<rbrakk>\n       \\<Longrightarrow> b = c", "then"], ["proof (chain)\npicking this:\n  \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> xs #\\<^sub>\\<circ> x\n  \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> xs #\\<^sub>\\<circ> x", "consider (dom) \"a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs\" | (ndom) \"a = vcard xs\""], ["proof (prove)\nusing this:\n  \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> xs #\\<^sub>\\<circ> x\n  \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> xs #\\<^sub>\\<circ> x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs \\<Longrightarrow>\n             thesis;\n     a = vcard xs \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "unfolding vcons_def"], ["proof (prove)\nusing this:\n  \\<langle>a, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> vinsert \\<langle>vcard xs, x\\<rangle> xs\n  \\<langle>a, c\\<rangle>\n  \\<in>\\<^sub>\\<circ> vinsert \\<langle>vcard xs, x\\<rangle> xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs \\<Longrightarrow>\n             thesis;\n     a = vcard xs \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs \\<Longrightarrow>\n           ?thesis;\n   a = vcard xs \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (2 subgoals):\n 1. vbrelation (xs #\\<^sub>\\<circ> x)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> xs #\\<^sub>\\<circ> x;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> xs #\\<^sub>\\<circ> x\\<rbrakk>\n       \\<Longrightarrow> b = c", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs \\<Longrightarrow>\n           ?thesis;\n   a = vcard xs \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show \"b = c\""], ["proof (prove)\nusing this:\n  \\<lbrakk>a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs \\<Longrightarrow>\n           ?thesis;\n   a = vcard xs \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. b = c", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs \\<Longrightarrow> b = c\n 2. a = vcard xs \\<Longrightarrow> b = c", "case dom"], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs\n\ngoal (2 subgoals):\n 1. a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs \\<Longrightarrow> b = c\n 2. a = vcard xs \\<Longrightarrow> b = c", "with ab"], ["proof (chain)\npicking this:\n  \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> xs #\\<^sub>\\<circ> x\n  a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs", "have \"\\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> xs\""], ["proof (prove)\nusing this:\n  \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> xs #\\<^sub>\\<circ> x\n  a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs\n\ngoal (1 subgoal):\n 1. \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> xs", "unfolding vcons_def"], ["proof (prove)\nusing this:\n  \\<langle>a, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> vinsert \\<langle>vcard xs, x\\<rangle> xs\n  a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs\n\ngoal (1 subgoal):\n 1. \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> xs", "by (auto simp: \\<open>vcard xs = \\<D>\\<^sub>\\<circ> xs\\<close>)"], ["proof (state)\nthis:\n  \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> xs\n\ngoal (2 subgoals):\n 1. a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs \\<Longrightarrow> b = c\n 2. a = vcard xs \\<Longrightarrow> b = c", "moreover"], ["proof (state)\nthis:\n  \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> xs\n\ngoal (2 subgoals):\n 1. a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs \\<Longrightarrow> b = c\n 2. a = vcard xs \\<Longrightarrow> b = c", "from dom ac"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs\n  \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> xs #\\<^sub>\\<circ> x", "have \"\\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> xs\""], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs\n  \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> xs #\\<^sub>\\<circ> x\n\ngoal (1 subgoal):\n 1. \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> xs", "unfolding vcons_def"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs\n  \\<langle>a, c\\<rangle>\n  \\<in>\\<^sub>\\<circ> vinsert \\<langle>vcard xs, x\\<rangle> xs\n\ngoal (1 subgoal):\n 1. \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> xs", "by (auto simp: \\<open>vcard xs = \\<D>\\<^sub>\\<circ> xs\\<close>)"], ["proof (state)\nthis:\n  \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> xs\n\ngoal (2 subgoals):\n 1. a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs \\<Longrightarrow> b = c\n 2. a = vcard xs \\<Longrightarrow> b = c", "ultimately"], ["proof (chain)\npicking this:\n  \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> xs\n  \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> xs", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> xs\n  \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> xs\n\ngoal (1 subgoal):\n 1. b = c", "using vsv"], ["proof (prove)\nusing this:\n  \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> xs\n  \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> xs\n  \\<lbrakk>\\<langle>?a, ?b\\<rangle> \\<in>\\<^sub>\\<circ> xs;\n   \\<langle>?a, ?c\\<rangle> \\<in>\\<^sub>\\<circ> xs\\<rbrakk>\n  \\<Longrightarrow> ?b = ?c\n\ngoal (1 subgoal):\n 1. b = c", "by simp"], ["proof (state)\nthis:\n  b = c\n\ngoal (1 subgoal):\n 1. a = vcard xs \\<Longrightarrow> b = c", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a = vcard xs \\<Longrightarrow> b = c", "case ndom"], ["proof (state)\nthis:\n  a = vcard xs\n\ngoal (1 subgoal):\n 1. a = vcard xs \\<Longrightarrow> b = c", "from ab"], ["proof (chain)\npicking this:\n  \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> xs #\\<^sub>\\<circ> x", "have \"\\<langle>a, b\\<rangle> = \\<langle>vcard xs, x\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> xs #\\<^sub>\\<circ> x\n\ngoal (1 subgoal):\n 1. \\<langle>a, b\\<rangle> = \\<langle>vcard xs, x\\<rangle>", "unfolding ndom vcons_def"], ["proof (prove)\nusing this:\n  \\<langle>vcard xs, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> vinsert \\<langle>vcard xs, x\\<rangle> xs\n\ngoal (1 subgoal):\n 1. \\<langle>vcard xs, b\\<rangle> = \\<langle>vcard xs, x\\<rangle>", "using \\<open>vcard xs = \\<D>\\<^sub>\\<circ> xs\\<close> mem_not_refl"], ["proof (prove)\nusing this:\n  \\<langle>vcard xs, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> vinsert \\<langle>vcard xs, x\\<rangle> xs\n  vcard xs = \\<D>\\<^sub>\\<circ> xs\n  ?i \\<notin>\\<^sub>\\<circ> ?i\n\ngoal (1 subgoal):\n 1. \\<langle>vcard xs, b\\<rangle> = \\<langle>vcard xs, x\\<rangle>", "by blast"], ["proof (state)\nthis:\n  \\<langle>a, b\\<rangle> = \\<langle>vcard xs, x\\<rangle>\n\ngoal (1 subgoal):\n 1. a = vcard xs \\<Longrightarrow> b = c", "moreover"], ["proof (state)\nthis:\n  \\<langle>a, b\\<rangle> = \\<langle>vcard xs, x\\<rangle>\n\ngoal (1 subgoal):\n 1. a = vcard xs \\<Longrightarrow> b = c", "from ac"], ["proof (chain)\npicking this:\n  \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> xs #\\<^sub>\\<circ> x", "have \"\\<langle>a, c\\<rangle> = \\<langle>vcard xs, x\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> xs #\\<^sub>\\<circ> x\n\ngoal (1 subgoal):\n 1. \\<langle>a, c\\<rangle> = \\<langle>vcard xs, x\\<rangle>", "unfolding ndom vcons_def"], ["proof (prove)\nusing this:\n  \\<langle>vcard xs, c\\<rangle>\n  \\<in>\\<^sub>\\<circ> vinsert \\<langle>vcard xs, x\\<rangle> xs\n\ngoal (1 subgoal):\n 1. \\<langle>vcard xs, c\\<rangle> = \\<langle>vcard xs, x\\<rangle>", "using \\<open>vcard xs = \\<D>\\<^sub>\\<circ> xs\\<close> mem_not_refl"], ["proof (prove)\nusing this:\n  \\<langle>vcard xs, c\\<rangle>\n  \\<in>\\<^sub>\\<circ> vinsert \\<langle>vcard xs, x\\<rangle> xs\n  vcard xs = \\<D>\\<^sub>\\<circ> xs\n  ?i \\<notin>\\<^sub>\\<circ> ?i\n\ngoal (1 subgoal):\n 1. \\<langle>vcard xs, c\\<rangle> = \\<langle>vcard xs, x\\<rangle>", "by blast"], ["proof (state)\nthis:\n  \\<langle>a, c\\<rangle> = \\<langle>vcard xs, x\\<rangle>\n\ngoal (1 subgoal):\n 1. a = vcard xs \\<Longrightarrow> b = c", "ultimately"], ["proof (chain)\npicking this:\n  \\<langle>a, b\\<rangle> = \\<langle>vcard xs, x\\<rangle>\n  \\<langle>a, c\\<rangle> = \\<langle>vcard xs, x\\<rangle>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>a, b\\<rangle> = \\<langle>vcard xs, x\\<rangle>\n  \\<langle>a, c\\<rangle> = \\<langle>vcard xs, x\\<rangle>\n\ngoal (1 subgoal):\n 1. b = c", "by simp"], ["proof (state)\nthis:\n  b = c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  b = c\n\ngoal (1 subgoal):\n 1. vbrelation (xs #\\<^sub>\\<circ> x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. vbrelation (xs #\\<^sub>\\<circ> x)", "show \"vbrelation (xs #\\<^sub>\\<circ> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vbrelation (xs #\\<^sub>\\<circ> x)", "unfolding vcons_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vbrelation (vinsert \\<langle>vcard xs, x\\<rangle> xs)", "using vbrelation_vinsertI"], ["proof (prove)\nusing this:\n  vbrelation (vinsert \\<langle>?a, ?b\\<rangle> xs)\n\ngoal (1 subgoal):\n 1. vbrelation (vinsert \\<langle>vcard xs, x\\<rangle> xs)", "by auto"], ["proof (state)\nthis:\n  vbrelation (xs #\\<^sub>\\<circ> x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  vsv (xs #\\<^sub>\\<circ> x)\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x) \\<in>\\<^sub>\\<circ> \\<omega>", "show \"\\<D>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x) \\<in>\\<^sub>\\<circ> \\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x) \\<in>\\<^sub>\\<circ> \\<omega>", "unfolding vcons_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (vinsert \\<langle>vcard xs, x\\<rangle> xs)\n    \\<in>\\<^sub>\\<circ> \\<omega>", "using succ_in_omega"], ["proof (prove)\nusing this:\n  ?n \\<in>\\<^sub>\\<circ> \\<omega> \\<Longrightarrow>\n  ZFC_in_HOL.succ ?n \\<in>\\<^sub>\\<circ> \\<omega>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (vinsert \\<langle>vcard xs, x\\<rangle> xs)\n    \\<in>\\<^sub>\\<circ> \\<omega>", "by (auto simp: vfsequence_vdomain_in_omega succ_def \\<open>vcard xs = \\<D>\\<^sub>\\<circ> xs\\<close>)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x) \\<in>\\<^sub>\\<circ> \\<omega>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in vfsequence) vfsequence_vcons_vdomain[simp]: \n  \"\\<D>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x) = succ (vcard xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x) = ZFC_in_HOL.succ (vcard xs)", "by (simp add: succ_def vcons_def vfsequence_vdomain)"], ["", "lemma (in vfsequence) vfsequence_vcons_vrange[simp]: \n  \"\\<R>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x) = vinsert x (\\<R>\\<^sub>\\<circ> xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x) =\n    vinsert x (\\<R>\\<^sub>\\<circ> xs)", "by (simp add: vcons_def)"], ["", "lemma (in vfsequence) vfsequence_vrange_vconsI:\n  assumes \"\\<R>\\<^sub>\\<circ> xs \\<subseteq>\\<^sub>\\<circ> X\" and \"x \\<in>\\<^sub>\\<circ> X\"\n  shows \"\\<R>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x) \\<subseteq>\\<^sub>\\<circ> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x) \\<subseteq>\\<^sub>\\<circ> X", "using assms"], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> xs \\<subseteq>\\<^sub>\\<circ> X\n  x \\<in>\\<^sub>\\<circ> X\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x) \\<subseteq>\\<^sub>\\<circ> X", "unfolding vcons_def"], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> xs \\<subseteq>\\<^sub>\\<circ> X\n  x \\<in>\\<^sub>\\<circ> X\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (vinsert \\<langle>vcard xs, x\\<rangle> xs)\n    \\<subseteq>\\<^sub>\\<circ> X", "by auto"], ["", "lemmas vfsequence_vrange_vconsI = vfsequence.vfsequence_vrange_vconsI[rotated 1]"], ["", "text\\<open>Special properties.\\<close>"], ["", "lemma vcons_vrange_mono:\n  assumes \"xs \\<subseteq>\\<^sub>\\<circ> ys\"\n  shows \"\\<R>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x) \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (ys #\\<^sub>\\<circ> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x)\n    \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (ys #\\<^sub>\\<circ> x)", "using assms"], ["proof (prove)\nusing this:\n  xs \\<subseteq>\\<^sub>\\<circ> ys\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x)\n    \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (ys #\\<^sub>\\<circ> x)", "unfolding vcons_def"], ["proof (prove)\nusing this:\n  xs \\<subseteq>\\<^sub>\\<circ> ys\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (vinsert \\<langle>vcard xs, x\\<rangle> xs)\n    \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                               (vinsert \\<langle>vcard ys, x\\<rangle> ys)", "by (simp add: vrange_mono vsubset_vinsert_leftI vsubset_vinsert_rightI)"], ["", "lemma (in vfsequence) vfsequence_vlrestriction_succ:\n  assumes [simp]: \"k \\<in>\\<^sub>\\<circ> vcard xs\"\n  shows \"xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> succ k = xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> k #\\<^sub>\\<circ> (xs\\<lparr>k\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> ZFC_in_HOL.succ k =\n    xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> k #\\<^sub>\\<circ>\n    xs\\<lparr>k\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> ZFC_in_HOL.succ k =\n    xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> k #\\<^sub>\\<circ>\n    xs\\<lparr>k\\<rparr>", "interpret vlr: vfsequence \\<open>xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> k\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> k)", "using assms"], ["proof (prove)\nusing this:\n  k \\<in>\\<^sub>\\<circ> vcard xs\n\ngoal (1 subgoal):\n 1. vfsequence (xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> k)", "by (blast intro: vfsequence_vcard_in_omega Ord_trans)"], ["proof (state)\ngoal (1 subgoal):\n 1. xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> ZFC_in_HOL.succ k =\n    xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> k #\\<^sub>\\<circ>\n    xs\\<lparr>k\\<rparr>", "from vlr.vfsequence_vdomain[symmetric, simplified]"], ["proof (chain)\npicking this:\n  vcard (xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> k) = k", "show ?thesis"], ["proof (prove)\nusing this:\n  vcard (xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> k) = k\n\ngoal (1 subgoal):\n 1. xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> ZFC_in_HOL.succ k =\n    xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> k #\\<^sub>\\<circ>\n    xs\\<lparr>k\\<rparr>", "by \n      (\n        simp add: \n          vcons_def succ_def vfsequence_vdomain vsv_vlrestriction_vinsert\n      )"], ["proof (state)\nthis:\n  xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> ZFC_in_HOL.succ k =\n  xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> k #\\<^sub>\\<circ>\n  xs\\<lparr>k\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in vfsequence) vfsequence_vremove_vcons_vfsequence: \n  assumes \"xs = xs' #\\<^sub>\\<circ> x\"\n  shows \"vfsequence xs'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence xs'", "proof(cases\\<open>\\<langle>vcard xs', x\\<rangle> \\<in>\\<^sub>\\<circ> xs'\\<close>)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<langle>vcard xs', x\\<rangle> \\<in>\\<^sub>\\<circ> xs' \\<Longrightarrow>\n    vfsequence xs'\n 2. \\<langle>vcard xs', x\\<rangle>\n    \\<notin>\\<^sub>\\<circ> xs' \\<Longrightarrow>\n    vfsequence xs'", "case True"], ["proof (state)\nthis:\n  \\<langle>vcard xs', x\\<rangle> \\<in>\\<^sub>\\<circ> xs'\n\ngoal (2 subgoals):\n 1. \\<langle>vcard xs', x\\<rangle> \\<in>\\<^sub>\\<circ> xs' \\<Longrightarrow>\n    vfsequence xs'\n 2. \\<langle>vcard xs', x\\<rangle>\n    \\<notin>\\<^sub>\\<circ> xs' \\<Longrightarrow>\n    vfsequence xs'", "with assms[unfolded vcons_def]"], ["proof (chain)\npicking this:\n  xs = vinsert \\<langle>vcard xs', x\\<rangle> xs'\n  \\<langle>vcard xs', x\\<rangle> \\<in>\\<^sub>\\<circ> xs'", "have \"xs = xs'\""], ["proof (prove)\nusing this:\n  xs = vinsert \\<langle>vcard xs', x\\<rangle> xs'\n  \\<langle>vcard xs', x\\<rangle> \\<in>\\<^sub>\\<circ> xs'\n\ngoal (1 subgoal):\n 1. xs = xs'", "by auto"], ["proof (state)\nthis:\n  xs = xs'\n\ngoal (2 subgoals):\n 1. \\<langle>vcard xs', x\\<rangle> \\<in>\\<^sub>\\<circ> xs' \\<Longrightarrow>\n    vfsequence xs'\n 2. \\<langle>vcard xs', x\\<rangle>\n    \\<notin>\\<^sub>\\<circ> xs' \\<Longrightarrow>\n    vfsequence xs'", "then"], ["proof (chain)\npicking this:\n  xs = xs'", "show ?thesis"], ["proof (prove)\nusing this:\n  xs = xs'\n\ngoal (1 subgoal):\n 1. vfsequence xs'", "using vfsequence_axioms"], ["proof (prove)\nusing this:\n  xs = xs'\n  vfsequence xs\n\ngoal (1 subgoal):\n 1. vfsequence xs'", "by simp"], ["proof (state)\nthis:\n  vfsequence xs'\n\ngoal (1 subgoal):\n 1. \\<langle>vcard xs', x\\<rangle>\n    \\<notin>\\<^sub>\\<circ> xs' \\<Longrightarrow>\n    vfsequence xs'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<langle>vcard xs', x\\<rangle>\n    \\<notin>\\<^sub>\\<circ> xs' \\<Longrightarrow>\n    vfsequence xs'", "case False"], ["proof (state)\nthis:\n  \\<langle>vcard xs', x\\<rangle> \\<notin>\\<^sub>\\<circ> xs'\n\ngoal (1 subgoal):\n 1. \\<langle>vcard xs', x\\<rangle>\n    \\<notin>\\<^sub>\\<circ> xs' \\<Longrightarrow>\n    vfsequence xs'", "note x_def[simp] = assms[unfolded vcons_def]"], ["proof (state)\nthis:\n  xs = vinsert \\<langle>vcard xs', x\\<rangle> xs'\n\ngoal (1 subgoal):\n 1. \\<langle>vcard xs', x\\<rangle>\n    \\<notin>\\<^sub>\\<circ> xs' \\<Longrightarrow>\n    vfsequence xs'", "interpret xs': vsv xs'"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv xs'", "using vsv_axioms"], ["proof (prove)\nusing this:\n  vsv xs\n\ngoal (1 subgoal):\n 1. vsv xs'", "by (auto intro: vsv_vinsertD)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<langle>vcard xs', x\\<rangle>\n    \\<notin>\\<^sub>\\<circ> xs' \\<Longrightarrow>\n    vfsequence xs'", "have fin: \"vfinite xs'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfinite xs'", "using vfsequence_vfinite"], ["proof (prove)\nusing this:\n  vfinite xs\n\ngoal (1 subgoal):\n 1. vfinite xs'", "by auto"], ["proof (state)\nthis:\n  vfinite xs'\n\ngoal (1 subgoal):\n 1. \\<langle>vcard xs', x\\<rangle>\n    \\<notin>\\<^sub>\\<circ> xs' \\<Longrightarrow>\n    vfsequence xs'", "have vcard_xs: \"vcard xs = succ (vcard xs')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard xs = ZFC_in_HOL.succ (vcard xs')", "by (simp add: fin False)"], ["proof (state)\nthis:\n  vcard xs = ZFC_in_HOL.succ (vcard xs')\n\ngoal (1 subgoal):\n 1. \\<langle>vcard xs', x\\<rangle>\n    \\<notin>\\<^sub>\\<circ> xs' \\<Longrightarrow>\n    vfsequence xs'", "have [simp]: \"vcard xs' \\<notin>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard xs' \\<notin>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs'", "using False vsv_axioms"], ["proof (prove)\nusing this:\n  \\<langle>vcard xs', x\\<rangle> \\<notin>\\<^sub>\\<circ> xs'\n  vsv xs\n\ngoal (1 subgoal):\n 1. vcard xs' \\<notin>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs'", "by auto"], ["proof (state)\nthis:\n  vcard xs' \\<notin>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs'\n\ngoal (1 subgoal):\n 1. \\<langle>vcard xs', x\\<rangle>\n    \\<notin>\\<^sub>\\<circ> xs' \\<Longrightarrow>\n    vfsequence xs'", "have \"vcard xs' \\<in>\\<^sub>\\<circ> \\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard xs' \\<in>\\<^sub>\\<circ> \\<omega>", "using fin vfinite_vcard_omega"], ["proof (prove)\nusing this:\n  vfinite xs'\n  vfinite ?A \\<Longrightarrow> vcard ?A \\<in>\\<^sub>\\<circ> \\<omega>\n\ngoal (1 subgoal):\n 1. vcard xs' \\<in>\\<^sub>\\<circ> \\<omega>", "by auto"], ["proof (state)\nthis:\n  vcard xs' \\<in>\\<^sub>\\<circ> \\<omega>\n\ngoal (1 subgoal):\n 1. \\<langle>vcard xs', x\\<rangle>\n    \\<notin>\\<^sub>\\<circ> xs' \\<Longrightarrow>\n    vfsequence xs'", "have xs'_def: \"xs' = xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> (vcard xs')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs' = xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> vcard xs'", "using vcard_xs fin vfsequence_vdomain"], ["proof (prove)\nusing this:\n  vcard xs = ZFC_in_HOL.succ (vcard xs')\n  vfinite xs'\n  \\<D>\\<^sub>\\<circ> xs = vcard xs\n\ngoal (1 subgoal):\n 1. xs' = xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> vcard xs'", "by (auto simp: vinsert_ident succ_def)"], ["proof (state)\nthis:\n  xs' = xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> vcard xs'\n\ngoal (1 subgoal):\n 1. \\<langle>vcard xs', x\\<rangle>\n    \\<notin>\\<^sub>\\<circ> xs' \\<Longrightarrow>\n    vfsequence xs'", "from vfsequence_vlrestriction[OF \\<open>vcard xs' \\<in>\\<^sub>\\<circ> \\<omega>\\<close>]"], ["proof (chain)\npicking this:\n  vfsequence (xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> vcard xs')", "show ?thesis"], ["proof (prove)\nusing this:\n  vfsequence (xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> vcard xs')\n\ngoal (1 subgoal):\n 1. vfsequence xs'", "unfolding xs'_def[symmetric]"], ["proof (prove)\nusing this:\n  vfsequence xs'\n\ngoal (1 subgoal):\n 1. vfsequence xs'", "."], ["proof (state)\nthis:\n  vfsequence xs'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in vfsequence) vfsequence_vcons_ex: \n  assumes \"xs \\<noteq> []\\<^sub>\\<circ>\" \n  obtains xs' x where \"xs = xs' #\\<^sub>\\<circ> x\" and \"vfsequence xs'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>xs' x.\n        \\<lbrakk>xs = xs' #\\<^sub>\\<circ> x; vfsequence xs'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>xs' x.\n        \\<lbrakk>xs = xs' #\\<^sub>\\<circ> x; vfsequence xs'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from vcard_vempty"], ["proof (chain)\npicking this:\n  (vcard ?A = []\\<^sub>\\<circ>) = (?A = []\\<^sub>\\<circ>)", "have \"0 \\<in>\\<^sub>\\<circ> vcard xs\""], ["proof (prove)\nusing this:\n  (vcard ?A = []\\<^sub>\\<circ>) = (?A = []\\<^sub>\\<circ>)\n\ngoal (1 subgoal):\n 1. []\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> vcard xs", "by (simp add: assms mem_0_Ord)"], ["proof (state)\nthis:\n  []\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> vcard xs\n\ngoal (1 subgoal):\n 1. (\\<And>xs' x.\n        \\<lbrakk>xs = xs' #\\<^sub>\\<circ> x; vfsequence xs'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  []\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> vcard xs", "obtain k where succk: \"succ k = vcard xs\""], ["proof (prove)\nusing this:\n  []\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> vcard xs\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        ZFC_in_HOL.succ k = vcard xs \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis omega_prev vfsequence_vcard_in_omega)"], ["proof (state)\nthis:\n  ZFC_in_HOL.succ k = vcard xs\n\ngoal (1 subgoal):\n 1. (\\<And>xs' x.\n        \\<lbrakk>xs = xs' #\\<^sub>\\<circ> x; vfsequence xs'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  ZFC_in_HOL.succ k = vcard xs", "have \"k \\<in>\\<^sub>\\<circ> vcard xs\""], ["proof (prove)\nusing this:\n  ZFC_in_HOL.succ k = vcard xs\n\ngoal (1 subgoal):\n 1. k \\<in>\\<^sub>\\<circ> vcard xs", "using elts_succ"], ["proof (prove)\nusing this:\n  ZFC_in_HOL.succ k = vcard xs\n  elts (ZFC_in_HOL.succ ?x) = insert ?x (elts ?x)\n\ngoal (1 subgoal):\n 1. k \\<in>\\<^sub>\\<circ> vcard xs", "by blast"], ["proof (state)\nthis:\n  k \\<in>\\<^sub>\\<circ> vcard xs\n\ngoal (1 subgoal):\n 1. (\\<And>xs' x.\n        \\<lbrakk>xs = xs' #\\<^sub>\\<circ> x; vfsequence xs'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from vfsequence_vlrestriction_succ[OF this, unfolded succk]"], ["proof (chain)\npicking this:\n  xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> vcard xs =\n  xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> k #\\<^sub>\\<circ>\n  xs\\<lparr>k\\<rparr>", "show ?thesis"], ["proof (prove)\nusing this:\n  xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> vcard xs =\n  xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> k #\\<^sub>\\<circ>\n  xs\\<lparr>k\\<rparr>\n\ngoal (1 subgoal):\n 1. thesis", "by (simp add: vfsequence_vremove_vcons_vfsequence that)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Induction and case analysis\\<close>"], ["", "lemma vfsequence_induct[consumes 1, case_names 0 vcons]:\n  assumes \"vfsequence xs\"\n    and \"P []\\<^sub>\\<circ>\"\n    and \"\\<And>xs x. \\<lbrakk>vfsequence xs; P xs\\<rbrakk> \\<Longrightarrow> P (xs #\\<^sub>\\<circ> x)\"\n  shows \"P xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P xs", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. P xs", "interpret vfsequence xs"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence xs", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. P xs", "from assms(1)"], ["proof (chain)\npicking this:\n  vfsequence xs", "obtain n where \"n \\<in>\\<^sub>\\<circ> \\<omega>\" and \"\\<D>\\<^sub>\\<circ> xs = n\""], ["proof (prove)\nusing this:\n  vfsequence xs\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>n \\<in>\\<^sub>\\<circ> \\<omega>;\n         \\<D>\\<^sub>\\<circ> xs = n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  n \\<in>\\<^sub>\\<circ> \\<omega>\n  \\<D>\\<^sub>\\<circ> xs = n\n\ngoal (1 subgoal):\n 1. P xs", "then"], ["proof (chain)\npicking this:\n  n \\<in>\\<^sub>\\<circ> \\<omega>\n  \\<D>\\<^sub>\\<circ> xs = n", "have \"n \\<le> \\<D>\\<^sub>\\<circ> xs\""], ["proof (prove)\nusing this:\n  n \\<in>\\<^sub>\\<circ> \\<omega>\n  \\<D>\\<^sub>\\<circ> xs = n\n\ngoal (1 subgoal):\n 1. n \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs", "by auto"], ["proof (state)\nthis:\n  n \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs\n\ngoal (1 subgoal):\n 1. P xs", "define P' where \"P' k = P (xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> k)\" for k"], ["proof (state)\nthis:\n  P' ?k = P (xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> ?k)\n\ngoal (1 subgoal):\n 1. P xs", "from \\<open>n \\<in>\\<^sub>\\<circ> \\<omega>\\<close> and \\<open>n \\<le> \\<D>\\<^sub>\\<circ> xs\\<close>"], ["proof (chain)\npicking this:\n  n \\<in>\\<^sub>\\<circ> \\<omega>\n  n \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs", "have \"P' n\""], ["proof (prove)\nusing this:\n  n \\<in>\\<^sub>\\<circ> \\<omega>\n  n \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs\n\ngoal (1 subgoal):\n 1. P' n", "proof(induction rule: omega_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. []\\<^sub>\\<circ>\n    \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs \\<Longrightarrow>\n    P' []\\<^sub>\\<circ>\n 2. \\<And>n.\n       \\<lbrakk>n \\<in>\\<^sub>\\<circ> \\<omega>;\n        n \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs \\<Longrightarrow>\n        P' n;\n        ZFC_in_HOL.succ n\n        \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs\\<rbrakk>\n       \\<Longrightarrow> P' (ZFC_in_HOL.succ n)", "case (succ n')"], ["proof (state)\nthis:\n  n' \\<in>\\<^sub>\\<circ> \\<omega>\n  n' \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs \\<Longrightarrow> P' n'\n  ZFC_in_HOL.succ n' \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs\n\ngoal (2 subgoals):\n 1. []\\<^sub>\\<circ>\n    \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs \\<Longrightarrow>\n    P' []\\<^sub>\\<circ>\n 2. \\<And>n.\n       \\<lbrakk>n \\<in>\\<^sub>\\<circ> \\<omega>;\n        n \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs \\<Longrightarrow>\n        P' n;\n        ZFC_in_HOL.succ n\n        \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs\\<rbrakk>\n       \\<Longrightarrow> P' (ZFC_in_HOL.succ n)", "then"], ["proof (chain)\npicking this:\n  n' \\<in>\\<^sub>\\<circ> \\<omega>\n  n' \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs \\<Longrightarrow> P' n'\n  ZFC_in_HOL.succ n' \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs", "show ?case"], ["proof (prove)\nusing this:\n  n' \\<in>\\<^sub>\\<circ> \\<omega>\n  n' \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs \\<Longrightarrow> P' n'\n  ZFC_in_HOL.succ n' \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs\n\ngoal (1 subgoal):\n 1. P' (ZFC_in_HOL.succ n')", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>n' \\<in>\\<^sub>\\<circ> \\<omega>;\n     n' \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs \\<Longrightarrow>\n     P' n';\n     ZFC_in_HOL.succ n'\n     \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs\\<rbrakk>\n    \\<Longrightarrow> P' (ZFC_in_HOL.succ n')", "interpret vlr: vfsequence \\<open>xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> n'\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> n')", "by (simp add: succ.hyps)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>n' \\<in>\\<^sub>\\<circ> \\<omega>;\n     n' \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs \\<Longrightarrow>\n     P' n';\n     ZFC_in_HOL.succ n'\n     \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs\\<rbrakk>\n    \\<Longrightarrow> P' (ZFC_in_HOL.succ n')", "have \"P' n'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P' n'", "using succ.prems"], ["proof (prove)\nusing this:\n  ZFC_in_HOL.succ n' \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs\n\ngoal (1 subgoal):\n 1. P' n'", "by (force intro: succ.IH)"], ["proof (state)\nthis:\n  P' n'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>n' \\<in>\\<^sub>\\<circ> \\<omega>;\n     n' \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs \\<Longrightarrow>\n     P' n';\n     ZFC_in_HOL.succ n'\n     \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs\\<rbrakk>\n    \\<Longrightarrow> P' (ZFC_in_HOL.succ n')", "then"], ["proof (chain)\npicking this:\n  P' n'", "have \"P (xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> n')\""], ["proof (prove)\nusing this:\n  P' n'\n\ngoal (1 subgoal):\n 1. P (xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> n')", "unfolding P'_def"], ["proof (prove)\nusing this:\n  P (xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> n')\n\ngoal (1 subgoal):\n 1. P (xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> n')", "by assumption"], ["proof (state)\nthis:\n  P (xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> n')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>n' \\<in>\\<^sub>\\<circ> \\<omega>;\n     n' \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs \\<Longrightarrow>\n     P' n';\n     ZFC_in_HOL.succ n'\n     \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs\\<rbrakk>\n    \\<Longrightarrow> P' (ZFC_in_HOL.succ n')", "have \"n' \\<in>\\<^sub>\\<circ> vcard xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n' \\<in>\\<^sub>\\<circ> vcard xs", "using succ.prems"], ["proof (prove)\nusing this:\n  ZFC_in_HOL.succ n' \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs\n\ngoal (1 subgoal):\n 1. n' \\<in>\\<^sub>\\<circ> vcard xs", "by (auto simp: vsubset_iff vfsequence_vdomain)"], ["proof (state)\nthis:\n  n' \\<in>\\<^sub>\\<circ> vcard xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>n' \\<in>\\<^sub>\\<circ> \\<omega>;\n     n' \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs \\<Longrightarrow>\n     P' n';\n     ZFC_in_HOL.succ n'\n     \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs\\<rbrakk>\n    \\<Longrightarrow> P' (ZFC_in_HOL.succ n')", "from vfsequence_vlrestriction_succ[OF \\<open>n' \\<in>\\<^sub>\\<circ> vcard xs\\<close>]"], ["proof (chain)\npicking this:\n  xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> ZFC_in_HOL.succ n' =\n  xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> n' #\\<^sub>\\<circ>\n  xs\\<lparr>n'\\<rparr>", "show \"P' (succ n')\""], ["proof (prove)\nusing this:\n  xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> ZFC_in_HOL.succ n' =\n  xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> n' #\\<^sub>\\<circ>\n  xs\\<lparr>n'\\<rparr>\n\ngoal (1 subgoal):\n 1. P' (ZFC_in_HOL.succ n')", "by (simp add: P'_def \\<open>P (xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> n')\\<close> assms(3) vlr.vfsequence_axioms)"], ["proof (state)\nthis:\n  P' (ZFC_in_HOL.succ n')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P' (ZFC_in_HOL.succ n')\n\ngoal (1 subgoal):\n 1. []\\<^sub>\\<circ>\n    \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs \\<Longrightarrow>\n    P' []\\<^sub>\\<circ>", "qed (simp add: P'_def assms(2))"], ["proof (state)\nthis:\n  P' n\n\ngoal (1 subgoal):\n 1. P xs", "then"], ["proof (chain)\npicking this:\n  P' n", "show ?thesis"], ["proof (prove)\nusing this:\n  P' n\n\ngoal (1 subgoal):\n 1. P xs", "unfolding P'_def \\<open>\\<D>\\<^sub>\\<circ> xs = n\\<close>[symmetric]"], ["proof (prove)\nusing this:\n  P (xs \\<restriction>\\<^sup>l\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs)\n\ngoal (1 subgoal):\n 1. P xs", "by simp"], ["proof (state)\nthis:\n  P xs\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vfsequence_cases[consumes 1, case_names 0 vcons]: \n  assumes \"vfsequence xs\"\n    and \"xs = []\\<^sub>\\<circ> \\<Longrightarrow> P\"\n    and \"\\<And>xs' x. \\<lbrakk>xs = xs' #\\<^sub>\\<circ> x; vfsequence xs'\\<rbrakk> \\<Longrightarrow> P\"\n  shows P"], ["proof (prove)\ngoal (1 subgoal):\n 1. P", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. P", "interpret vfsequence xs"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence xs", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. P", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. P", "proof(cases \\<open>xs = 0\\<close>)"], ["proof (state)\ngoal (2 subgoals):\n 1. xs = []\\<^sub>\\<circ> \\<Longrightarrow> P\n 2. xs \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow> P", "case False"], ["proof (state)\nthis:\n  xs \\<noteq> []\\<^sub>\\<circ>\n\ngoal (2 subgoals):\n 1. xs = []\\<^sub>\\<circ> \\<Longrightarrow> P\n 2. xs \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow> P", "then"], ["proof (chain)\npicking this:\n  xs \\<noteq> []\\<^sub>\\<circ>", "obtain xs' x where \"xs = xs' #\\<^sub>\\<circ> x\""], ["proof (prove)\nusing this:\n  xs \\<noteq> []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. (\\<And>xs' x.\n        xs = xs' #\\<^sub>\\<circ> x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (blast intro: vfsequence_vcons_ex)"], ["proof (state)\nthis:\n  xs = xs' #\\<^sub>\\<circ> x\n\ngoal (2 subgoals):\n 1. xs = []\\<^sub>\\<circ> \\<Longrightarrow> P\n 2. xs \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow> P", "then"], ["proof (chain)\npicking this:\n  xs = xs' #\\<^sub>\\<circ> x", "show ?thesis"], ["proof (prove)\nusing this:\n  xs = xs' #\\<^sub>\\<circ> x\n\ngoal (1 subgoal):\n 1. P", "by (auto simp: assms(3) intro: vfsequence_vcons_ex)"], ["proof (state)\nthis:\n  P\n\ngoal (1 subgoal):\n 1. xs = []\\<^sub>\\<circ> \\<Longrightarrow> P", "qed (use assms(2) in auto)"], ["proof (state)\nthis:\n  P\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Evaluation\\<close>"], ["", "lemma (in vfsequence) vfsequence_vcard_vcons[simp]: \n  \"vcard (xs #\\<^sub>\\<circ> x) = succ (vcard xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (xs #\\<^sub>\\<circ> x) = ZFC_in_HOL.succ (vcard xs)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. vcard (xs #\\<^sub>\\<circ> x) = ZFC_in_HOL.succ (vcard xs)", "interpret xsx: vfsequence \\<open>xs #\\<^sub>\\<circ> x\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (xs #\\<^sub>\\<circ> x)", "by simp"], ["proof (state)\ngoal (1 subgoal):\n 1. vcard (xs #\\<^sub>\\<circ> x) = ZFC_in_HOL.succ (vcard xs)", "have \"vcard (xs #\\<^sub>\\<circ> x) = \\<D>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (xs #\\<^sub>\\<circ> x) = \\<D>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x)", "by (rule xsx.vfsequence_vdomain[symmetric])"], ["proof (state)\nthis:\n  vcard (xs #\\<^sub>\\<circ> x) = \\<D>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x)\n\ngoal (1 subgoal):\n 1. vcard (xs #\\<^sub>\\<circ> x) = ZFC_in_HOL.succ (vcard xs)", "then"], ["proof (chain)\npicking this:\n  vcard (xs #\\<^sub>\\<circ> x) = \\<D>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x)", "show ?thesis"], ["proof (prove)\nusing this:\n  vcard (xs #\\<^sub>\\<circ> x) = \\<D>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x)\n\ngoal (1 subgoal):\n 1. vcard (xs #\\<^sub>\\<circ> x) = ZFC_in_HOL.succ (vcard xs)", "by (subst vcons_def) (simp add: succ_def vcons_def vfsequence_vdomain)"], ["proof (state)\nthis:\n  vcard (xs #\\<^sub>\\<circ> x) = ZFC_in_HOL.succ (vcard xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in vfsequence) vfsequence_at_last[intro, simp]:\n  assumes \"i = vcard xs\"\n  shows \"(xs #\\<^sub>\\<circ> x)\\<lparr>i\\<rparr> = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (xs #\\<^sub>\\<circ> x)\\<lparr>i\\<rparr> = x", "by (simp add: vfsequence_vdomain vcons_def assms)"], ["", "lemma (in vfsequence) vfsequence_at_not_last[intro, simp]:\n  assumes \"i \\<in>\\<^sub>\\<circ> vcard xs\"\n  shows \"(xs #\\<^sub>\\<circ> x)\\<lparr>i\\<rparr> = xs\\<lparr>i\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (xs #\\<^sub>\\<circ> x)\\<lparr>i\\<rparr> = xs\\<lparr>i\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (xs #\\<^sub>\\<circ> x)\\<lparr>i\\<rparr> = xs\\<lparr>i\\<rparr>", "from assms"], ["proof (chain)\npicking this:\n  i \\<in>\\<^sub>\\<circ> vcard xs", "have [simp]: \"\\<D>\\<^sub>\\<circ> xs = vcard xs\""], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> vcard xs\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> xs = vcard xs", "by (auto simp: vfsequence_vdomain)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> xs = vcard xs\n\ngoal (1 subgoal):\n 1. (xs #\\<^sub>\\<circ> x)\\<lparr>i\\<rparr> = xs\\<lparr>i\\<rparr>", "from assms"], ["proof (chain)\npicking this:\n  i \\<in>\\<^sub>\\<circ> vcard xs", "have \"i \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs\""], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> vcard xs\n\ngoal (1 subgoal):\n 1. i \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs", "by simp"], ["proof (state)\nthis:\n  i \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs\n\ngoal (1 subgoal):\n 1. (xs #\\<^sub>\\<circ> x)\\<lparr>i\\<rparr> = xs\\<lparr>i\\<rparr>", "moreover"], ["proof (state)\nthis:\n  i \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs\n\ngoal (1 subgoal):\n 1. (xs #\\<^sub>\\<circ> x)\\<lparr>i\\<rparr> = xs\\<lparr>i\\<rparr>", "have \"i \\<noteq> vcard xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<noteq> vcard xs", "using assms mem_not_refl"], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> vcard xs\n  ?i \\<notin>\\<^sub>\\<circ> ?i\n\ngoal (1 subgoal):\n 1. i \\<noteq> vcard xs", "by blast"], ["proof (state)\nthis:\n  i \\<noteq> vcard xs\n\ngoal (1 subgoal):\n 1. (xs #\\<^sub>\\<circ> x)\\<lparr>i\\<rparr> = xs\\<lparr>i\\<rparr>", "ultimately"], ["proof (chain)\npicking this:\n  i \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs\n  i \\<noteq> vcard xs", "show ?thesis"], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs\n  i \\<noteq> vcard xs\n\ngoal (1 subgoal):\n 1. (xs #\\<^sub>\\<circ> x)\\<lparr>i\\<rparr> = xs\\<lparr>i\\<rparr>", "unfolding vcons_def"], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs\n  i \\<noteq> vcard xs\n\ngoal (1 subgoal):\n 1. vinsert \\<langle>vcard xs, x\\<rangle> xs\\<lparr>i\\<rparr> =\n    xs\\<lparr>i\\<rparr>", "using vsv.vsv_vinsert vsvE vsv_axioms"], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> xs\n  i \\<noteq> vcard xs\n  \\<lbrakk>vsv ?r; ?a \\<notin>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> ?r\\<rbrakk>\n  \\<Longrightarrow> vsv (vinsert \\<langle>?a, ?b\\<rangle> ?r)\n  \\<lbrakk>vsv ?r;\n   \\<lbrakk>vbrelation ?r;\n    \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> ?r;\n        \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> ?r\\<rbrakk>\n       \\<Longrightarrow> b = c\\<rbrakk>\n   \\<Longrightarrow> ?W\\<rbrakk>\n  \\<Longrightarrow> ?W\n  vsv xs\n\ngoal (1 subgoal):\n 1. vinsert \\<langle>vcard xs, x\\<rangle> xs\\<lparr>i\\<rparr> =\n    xs\\<lparr>i\\<rparr>", "by auto"], ["proof (state)\nthis:\n  (xs #\\<^sub>\\<circ> x)\\<lparr>i\\<rparr> = xs\\<lparr>i\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Alternative forms of existing results.\\<close>"], ["", "lemmas [intro, simp] = vfsequence.vfsequence_vcons\n  and [intro, simp] = vfsequence.vfsequence_vcard_vcons\n  and [intro, simp] = vfsequence.vfsequence_at_last\n  and [intro, simp] = vfsequence.vfsequence_at_not_last\n  and [intro, simp] = vfsequence.vfsequence_vcons_vdomain\n  and [intro, simp] = vfsequence.vfsequence_vcons_vrange"], ["", "subsubsection\\<open>Congruence-like properties\\<close>"], ["", "context vfsequence_pair\nbegin"], ["", "lemma vcons_eq_vcard_eq:\n  assumes \"xs\\<^sub>1 #\\<^sub>\\<circ> x\\<^sub>1 = xs\\<^sub>2 #\\<^sub>\\<circ> x\\<^sub>2\"\n  shows \"vcard xs\\<^sub>1 = vcard xs\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard xs\\<^sub>1 = vcard xs\\<^sub>2", "by \n    (\n      metis \n        assms \n        succ_inject_iff   \n        vfsequence.vfsequence_vcons_vdomain\n        r\\<^sub>1.vfsequence_axioms \n        r\\<^sub>2.vfsequence_axioms\n    )"], ["", "lemma vcons_eqD[dest]:\n  assumes \"xs\\<^sub>1 #\\<^sub>\\<circ> x\\<^sub>1 = xs\\<^sub>2 #\\<^sub>\\<circ> x\\<^sub>2\"\n  shows \"xs\\<^sub>1 = xs\\<^sub>2\" and \"x\\<^sub>1 = x\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs\\<^sub>1 = xs\\<^sub>2 &&& x\\<^sub>1 = x\\<^sub>2", "proof-"], ["proof (state)\ngoal (2 subgoals):\n 1. xs\\<^sub>1 = xs\\<^sub>2\n 2. x\\<^sub>1 = x\\<^sub>2", "have xsx1_last: \"(xs\\<^sub>1 #\\<^sub>\\<circ> x\\<^sub>1)\\<lparr>vcard xs\\<^sub>1\\<rparr> = x\\<^sub>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (xs\\<^sub>1 #\\<^sub>\\<circ> x\\<^sub>1)\\<lparr>vcard xs\\<^sub>1\\<rparr> =\n    x\\<^sub>1", "by simp"], ["proof (state)\nthis:\n  (xs\\<^sub>1 #\\<^sub>\\<circ> x\\<^sub>1)\\<lparr>vcard xs\\<^sub>1\\<rparr> =\n  x\\<^sub>1\n\ngoal (2 subgoals):\n 1. xs\\<^sub>1 = xs\\<^sub>2\n 2. x\\<^sub>1 = x\\<^sub>2", "have xsx2_last: \"(xs\\<^sub>2 #\\<^sub>\\<circ> x\\<^sub>2)\\<lparr>vcard xs\\<^sub>2\\<rparr> = x\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (xs\\<^sub>2 #\\<^sub>\\<circ> x\\<^sub>2)\\<lparr>vcard xs\\<^sub>2\\<rparr> =\n    x\\<^sub>2", "by simp"], ["proof (state)\nthis:\n  (xs\\<^sub>2 #\\<^sub>\\<circ> x\\<^sub>2)\\<lparr>vcard xs\\<^sub>2\\<rparr> =\n  x\\<^sub>2\n\ngoal (2 subgoals):\n 1. xs\\<^sub>1 = xs\\<^sub>2\n 2. x\\<^sub>1 = x\\<^sub>2", "from assms"], ["proof (chain)\npicking this:\n  xs\\<^sub>1 #\\<^sub>\\<circ> x\\<^sub>1 =\n  xs\\<^sub>2 #\\<^sub>\\<circ> x\\<^sub>2", "have vcard: \"vcard xs\\<^sub>1 = vcard xs\\<^sub>2\""], ["proof (prove)\nusing this:\n  xs\\<^sub>1 #\\<^sub>\\<circ> x\\<^sub>1 =\n  xs\\<^sub>2 #\\<^sub>\\<circ> x\\<^sub>2\n\ngoal (1 subgoal):\n 1. vcard xs\\<^sub>1 = vcard xs\\<^sub>2", "by (rule vcons_eq_vcard_eq)"], ["proof (state)\nthis:\n  vcard xs\\<^sub>1 = vcard xs\\<^sub>2\n\ngoal (2 subgoals):\n 1. xs\\<^sub>1 = xs\\<^sub>2\n 2. x\\<^sub>1 = x\\<^sub>2", "from trans[OF xsx1_last xsx1_last[unfolded vcard assms, symmetric]]"], ["proof (chain)\npicking this:\n  (xs\\<^sub>1 #\\<^sub>\\<circ> x\\<^sub>1)\\<lparr>vcard xs\\<^sub>1\\<rparr> =\n  (xs\\<^sub>2 #\\<^sub>\\<circ> x\\<^sub>2)\\<lparr>vcard xs\\<^sub>2\\<rparr>", "show \"x\\<^sub>1 = x\\<^sub>2\""], ["proof (prove)\nusing this:\n  (xs\\<^sub>1 #\\<^sub>\\<circ> x\\<^sub>1)\\<lparr>vcard xs\\<^sub>1\\<rparr> =\n  (xs\\<^sub>2 #\\<^sub>\\<circ> x\\<^sub>2)\\<lparr>vcard xs\\<^sub>2\\<rparr>\n\ngoal (1 subgoal):\n 1. x\\<^sub>1 = x\\<^sub>2", "unfolding xsx1_last xsx2_last"], ["proof (prove)\nusing this:\n  x\\<^sub>1 = x\\<^sub>2\n\ngoal (1 subgoal):\n 1. x\\<^sub>1 = x\\<^sub>2", "."], ["proof (state)\nthis:\n  x\\<^sub>1 = x\\<^sub>2\n\ngoal (1 subgoal):\n 1. xs\\<^sub>1 = xs\\<^sub>2", "have nxs1: \"\\<langle>vcard xs\\<^sub>1, x\\<^sub>1\\<rangle> \\<notin>\\<^sub>\\<circ> xs\\<^sub>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>vcard xs\\<^sub>1, x\\<^sub>1\\<rangle>\n    \\<notin>\\<^sub>\\<circ> xs\\<^sub>1", "using mem_not_refl r\\<^sub>1.vfsequence_vdomain"], ["proof (prove)\nusing this:\n  ?i \\<notin>\\<^sub>\\<circ> ?i\n  \\<D>\\<^sub>\\<circ> xs\\<^sub>1 = vcard xs\\<^sub>1\n\ngoal (1 subgoal):\n 1. \\<langle>vcard xs\\<^sub>1, x\\<^sub>1\\<rangle>\n    \\<notin>\\<^sub>\\<circ> xs\\<^sub>1", "by blast"], ["proof (state)\nthis:\n  \\<langle>vcard xs\\<^sub>1, x\\<^sub>1\\<rangle>\n  \\<notin>\\<^sub>\\<circ> xs\\<^sub>1\n\ngoal (1 subgoal):\n 1. xs\\<^sub>1 = xs\\<^sub>2", "have nxs2: \"\\<langle>vcard xs\\<^sub>2, x\\<^sub>2\\<rangle> \\<notin>\\<^sub>\\<circ> xs\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>vcard xs\\<^sub>2, x\\<^sub>2\\<rangle>\n    \\<notin>\\<^sub>\\<circ> xs\\<^sub>2", "using mem_not_refl r\\<^sub>2.vfsequence_vdomain"], ["proof (prove)\nusing this:\n  ?i \\<notin>\\<^sub>\\<circ> ?i\n  \\<D>\\<^sub>\\<circ> xs\\<^sub>2 = vcard xs\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<langle>vcard xs\\<^sub>2, x\\<^sub>2\\<rangle>\n    \\<notin>\\<^sub>\\<circ> xs\\<^sub>2", "by blast"], ["proof (state)\nthis:\n  \\<langle>vcard xs\\<^sub>2, x\\<^sub>2\\<rangle>\n  \\<notin>\\<^sub>\\<circ> xs\\<^sub>2\n\ngoal (1 subgoal):\n 1. xs\\<^sub>1 = xs\\<^sub>2", "have xsx1_xsx2: \"\\<langle>vcard xs\\<^sub>1, x\\<^sub>1\\<rangle> = \\<langle>vcard xs\\<^sub>2, x\\<^sub>2\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>vcard xs\\<^sub>1, x\\<^sub>1\\<rangle> =\n    \\<langle>vcard xs\\<^sub>2, x\\<^sub>2\\<rangle>", "unfolding vcons_eq_vcard_eq[OF assms(1)] \\<open>x\\<^sub>1 = x\\<^sub>2\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>vcard xs\\<^sub>2, x\\<^sub>2\\<rangle> =\n    \\<langle>vcard xs\\<^sub>2, x\\<^sub>2\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>vcard xs\\<^sub>1, x\\<^sub>1\\<rangle> =\n  \\<langle>vcard xs\\<^sub>2, x\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. xs\\<^sub>1 = xs\\<^sub>2", "show \"xs\\<^sub>1 = xs\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs\\<^sub>1 = xs\\<^sub>2", "proof(rule vinsert_identD[OF _ nxs1])"], ["proof (state)\ngoal (2 subgoals):\n 1. vinsert \\<langle>vcard xs\\<^sub>1, x\\<^sub>1\\<rangle> xs\\<^sub>1 =\n    vinsert \\<langle>vcard xs\\<^sub>1, x\\<^sub>1\\<rangle> xs\\<^sub>2\n 2. \\<langle>vcard xs\\<^sub>1, x\\<^sub>1\\<rangle>\n    \\<notin>\\<^sub>\\<circ> xs\\<^sub>2", "from assms(1)[unfolded vcons_def]"], ["proof (chain)\npicking this:\n  vinsert \\<langle>vcard xs\\<^sub>1, x\\<^sub>1\\<rangle> xs\\<^sub>1 =\n  vinsert \\<langle>vcard xs\\<^sub>2, x\\<^sub>2\\<rangle> xs\\<^sub>2", "show \n      \"vinsert \\<langle>vcard xs\\<^sub>1, x\\<^sub>1\\<rangle> xs\\<^sub>1 = vinsert \\<langle>vcard xs\\<^sub>1, x\\<^sub>1\\<rangle> xs\\<^sub>2\""], ["proof (prove)\nusing this:\n  vinsert \\<langle>vcard xs\\<^sub>1, x\\<^sub>1\\<rangle> xs\\<^sub>1 =\n  vinsert \\<langle>vcard xs\\<^sub>2, x\\<^sub>2\\<rangle> xs\\<^sub>2\n\ngoal (1 subgoal):\n 1. vinsert \\<langle>vcard xs\\<^sub>1, x\\<^sub>1\\<rangle> xs\\<^sub>1 =\n    vinsert \\<langle>vcard xs\\<^sub>1, x\\<^sub>1\\<rangle> xs\\<^sub>2", "by (auto simp: xsx1_xsx2)"], ["proof (state)\nthis:\n  vinsert \\<langle>vcard xs\\<^sub>1, x\\<^sub>1\\<rangle> xs\\<^sub>1 =\n  vinsert \\<langle>vcard xs\\<^sub>1, x\\<^sub>1\\<rangle> xs\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<langle>vcard xs\\<^sub>1, x\\<^sub>1\\<rangle>\n    \\<notin>\\<^sub>\\<circ> xs\\<^sub>2", "show \"\\<langle>vcard xs\\<^sub>1, x\\<^sub>1\\<rangle> \\<notin>\\<^sub>\\<circ> xs\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>vcard xs\\<^sub>1, x\\<^sub>1\\<rangle>\n    \\<notin>\\<^sub>\\<circ> xs\\<^sub>2", "by (rule nxs2[folded \\<open>x\\<^sub>1 = x\\<^sub>2\\<close> vcons_eq_vcard_eq[OF assms(1)]])"], ["proof (state)\nthis:\n  \\<langle>vcard xs\\<^sub>1, x\\<^sub>1\\<rangle>\n  \\<notin>\\<^sub>\\<circ> xs\\<^sub>2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  xs\\<^sub>1 = xs\\<^sub>2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vcons_eqI:\n  assumes \"xs\\<^sub>1 = xs\\<^sub>2\" and \"x\\<^sub>1 = x\\<^sub>2\"\n  shows \"xs\\<^sub>1 #\\<^sub>\\<circ> x\\<^sub>1 = xs\\<^sub>2 #\\<^sub>\\<circ> x\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs\\<^sub>1 #\\<^sub>\\<circ> x\\<^sub>1 =\n    xs\\<^sub>2 #\\<^sub>\\<circ> x\\<^sub>2", "using assms"], ["proof (prove)\nusing this:\n  xs\\<^sub>1 = xs\\<^sub>2\n  x\\<^sub>1 = x\\<^sub>2\n\ngoal (1 subgoal):\n 1. xs\\<^sub>1 #\\<^sub>\\<circ> x\\<^sub>1 =\n    xs\\<^sub>2 #\\<^sub>\\<circ> x\\<^sub>2", "by (rule arg_cong2)"], ["", "lemma vcons_eq_iff[simp]: \"(xs\\<^sub>1 #\\<^sub>\\<circ> x\\<^sub>1 = xs\\<^sub>2 #\\<^sub>\\<circ> x\\<^sub>2) \\<longleftrightarrow> (xs\\<^sub>1 = xs\\<^sub>2 \\<and> x\\<^sub>1 = x\\<^sub>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (xs\\<^sub>1 #\\<^sub>\\<circ> x\\<^sub>1 =\n     xs\\<^sub>2 #\\<^sub>\\<circ> x\\<^sub>2) =\n    (xs\\<^sub>1 = xs\\<^sub>2 \\<and> x\\<^sub>1 = x\\<^sub>2)", "by auto"], ["", "end"], ["", "text\\<open>Alternative forms of existing results.\\<close>"], ["", "context\n  fixes xs\\<^sub>1 xs\\<^sub>2\n  assumes xs\\<^sub>1: \"vfsequence xs\\<^sub>1\"\n    and xs\\<^sub>2: \"vfsequence xs\\<^sub>2\"\nbegin"], ["", "lemmas_with[OF vfsequence_pair.intro[OF xs\\<^sub>1 xs\\<^sub>2]]:\n  vcons_eqD' = vfsequence_pair.vcons_eqD\n  and vcons_eq_iff[intro, simp] = vfsequence_pair.vcons_eq_iff"], ["", "end"], ["", "lemmas vcons_eqD[dest] = vcons_eqD'[rotated -1]"], ["", "subsection\\<open>Transfer between the type \\<^typ>\\<open>V list\\<close> and finite sequences\\<close>"], ["", "subsubsection\\<open>Initialization\\<close>"], ["", "primrec vfsequence_of_vlist :: \"V list \\<Rightarrow> V\"\n  where \n    \"vfsequence_of_vlist [] = 0\"\n  | \"vfsequence_of_vlist (x # xs) = vfsequence_of_vlist xs #\\<^sub>\\<circ> x\""], ["", "definition vlist_of_vfsequence :: \"V \\<Rightarrow> V list\"\n  where \"vlist_of_vfsequence = inv_into UNIV vfsequence_of_vlist\""], ["", "lemma vfsequence_vfsequence_of_vlist: \"vfsequence (vfsequence_of_vlist xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (vfsequence_of_vlist xs)", "by (induction xs) auto"], ["", "lemma inj_vfsequence_of_vlist: \"inj vfsequence_of_vlist\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj vfsequence_of_vlist", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV;\n        vfsequence_of_vlist x = vfsequence_of_vlist y\\<rbrakk>\n       \\<Longrightarrow> x = y", "show \"vfsequence_of_vlist x = vfsequence_of_vlist y \\<Longrightarrow> x = y\" \n    for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence_of_vlist x = vfsequence_of_vlist y \\<Longrightarrow> x = y", "proof(induction y arbitrary: x)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       vfsequence_of_vlist x = vfsequence_of_vlist [] \\<Longrightarrow>\n       x = []\n 2. \\<And>a y x.\n       \\<lbrakk>\\<And>x.\n                   vfsequence_of_vlist x =\n                   vfsequence_of_vlist y \\<Longrightarrow>\n                   x = y;\n        vfsequence_of_vlist x = vfsequence_of_vlist (a # y)\\<rbrakk>\n       \\<Longrightarrow> x = a # y", "case Nil"], ["proof (state)\nthis:\n  vfsequence_of_vlist x = vfsequence_of_vlist []\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       vfsequence_of_vlist x = vfsequence_of_vlist [] \\<Longrightarrow>\n       x = []\n 2. \\<And>a y x.\n       \\<lbrakk>\\<And>x.\n                   vfsequence_of_vlist x =\n                   vfsequence_of_vlist y \\<Longrightarrow>\n                   x = y;\n        vfsequence_of_vlist x = vfsequence_of_vlist (a # y)\\<rbrakk>\n       \\<Longrightarrow> x = a # y", "then"], ["proof (chain)\npicking this:\n  vfsequence_of_vlist x = vfsequence_of_vlist []", "show ?case"], ["proof (prove)\nusing this:\n  vfsequence_of_vlist x = vfsequence_of_vlist []\n\ngoal (1 subgoal):\n 1. x = []", "by (cases x) auto"], ["proof (state)\nthis:\n  x = []\n\ngoal (1 subgoal):\n 1. \\<And>a y x.\n       \\<lbrakk>\\<And>x.\n                   vfsequence_of_vlist x =\n                   vfsequence_of_vlist y \\<Longrightarrow>\n                   x = y;\n        vfsequence_of_vlist x = vfsequence_of_vlist (a # y)\\<rbrakk>\n       \\<Longrightarrow> x = a # y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a y x.\n       \\<lbrakk>\\<And>x.\n                   vfsequence_of_vlist x =\n                   vfsequence_of_vlist y \\<Longrightarrow>\n                   x = y;\n        vfsequence_of_vlist x = vfsequence_of_vlist (a # y)\\<rbrakk>\n       \\<Longrightarrow> x = a # y", "case (Cons a ys)"], ["proof (state)\nthis:\n  vfsequence_of_vlist ?x = vfsequence_of_vlist ys \\<Longrightarrow> ?x = ys\n  vfsequence_of_vlist x = vfsequence_of_vlist (a # ys)\n\ngoal (1 subgoal):\n 1. \\<And>a y x.\n       \\<lbrakk>\\<And>x.\n                   vfsequence_of_vlist x =\n                   vfsequence_of_vlist y \\<Longrightarrow>\n                   x = y;\n        vfsequence_of_vlist x = vfsequence_of_vlist (a # y)\\<rbrakk>\n       \\<Longrightarrow> x = a # y", "note Cons' = Cons"], ["proof (state)\nthis:\n  vfsequence_of_vlist ?x = vfsequence_of_vlist ys \\<Longrightarrow> ?x = ys\n  vfsequence_of_vlist x = vfsequence_of_vlist (a # ys)\n\ngoal (1 subgoal):\n 1. \\<And>a y x.\n       \\<lbrakk>\\<And>x.\n                   vfsequence_of_vlist x =\n                   vfsequence_of_vlist y \\<Longrightarrow>\n                   x = y;\n        vfsequence_of_vlist x = vfsequence_of_vlist (a # y)\\<rbrakk>\n       \\<Longrightarrow> x = a # y", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. x = a # ys", "proof(cases x)"], ["proof (state)\ngoal (2 subgoals):\n 1. x = [] \\<Longrightarrow> x = a # ys\n 2. \\<And>aa list. x = aa # list \\<Longrightarrow> x = a # ys", "case Nil"], ["proof (state)\nthis:\n  x = []\n\ngoal (2 subgoals):\n 1. x = [] \\<Longrightarrow> x = a # ys\n 2. \\<And>aa list. x = aa # list \\<Longrightarrow> x = a # ys", "with Cons"], ["proof (chain)\npicking this:\n  vfsequence_of_vlist ?x = vfsequence_of_vlist ys \\<Longrightarrow> ?x = ys\n  vfsequence_of_vlist x = vfsequence_of_vlist (a # ys)\n  x = []", "show ?thesis"], ["proof (prove)\nusing this:\n  vfsequence_of_vlist ?x = vfsequence_of_vlist ys \\<Longrightarrow> ?x = ys\n  vfsequence_of_vlist x = vfsequence_of_vlist (a # ys)\n  x = []\n\ngoal (1 subgoal):\n 1. x = a # ys", "by auto"], ["proof (state)\nthis:\n  x = a # ys\n\ngoal (1 subgoal):\n 1. \\<And>aa list. x = aa # list \\<Longrightarrow> x = a # ys", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>aa list. x = aa # list \\<Longrightarrow> x = a # ys", "case (Cons b zs)"], ["proof (state)\nthis:\n  x = b # zs\n\ngoal (1 subgoal):\n 1. \\<And>aa list. x = aa # list \\<Longrightarrow> x = a # ys", "from Cons'[unfolded Cons vfsequence_of_vlist.simps]"], ["proof (chain)\npicking this:\n  vfsequence_of_vlist ?x = vfsequence_of_vlist ys \\<Longrightarrow> ?x = ys\n  vfsequence_of_vlist zs #\\<^sub>\\<circ> b =\n  vfsequence_of_vlist ys #\\<^sub>\\<circ> a", "have \n        \"vfsequence_of_vlist zs #\\<^sub>\\<circ> b = vfsequence_of_vlist ys #\\<^sub>\\<circ> a\""], ["proof (prove)\nusing this:\n  vfsequence_of_vlist ?x = vfsequence_of_vlist ys \\<Longrightarrow> ?x = ys\n  vfsequence_of_vlist zs #\\<^sub>\\<circ> b =\n  vfsequence_of_vlist ys #\\<^sub>\\<circ> a\n\ngoal (1 subgoal):\n 1. vfsequence_of_vlist zs #\\<^sub>\\<circ> b =\n    vfsequence_of_vlist ys #\\<^sub>\\<circ> a", "by simp"], ["proof (state)\nthis:\n  vfsequence_of_vlist zs #\\<^sub>\\<circ> b =\n  vfsequence_of_vlist ys #\\<^sub>\\<circ> a\n\ngoal (1 subgoal):\n 1. \\<And>aa list. x = aa # list \\<Longrightarrow> x = a # ys", "then"], ["proof (chain)\npicking this:\n  vfsequence_of_vlist zs #\\<^sub>\\<circ> b =\n  vfsequence_of_vlist ys #\\<^sub>\\<circ> a", "have \"vfsequence_of_vlist zs = vfsequence_of_vlist ys\" and \"b = a\""], ["proof (prove)\nusing this:\n  vfsequence_of_vlist zs #\\<^sub>\\<circ> b =\n  vfsequence_of_vlist ys #\\<^sub>\\<circ> a\n\ngoal (1 subgoal):\n 1. vfsequence_of_vlist zs = vfsequence_of_vlist ys &&& b = a", "by (auto simp: vfsequence_vfsequence_of_vlist)"], ["proof (state)\nthis:\n  vfsequence_of_vlist zs = vfsequence_of_vlist ys\n  b = a\n\ngoal (1 subgoal):\n 1. \\<And>aa list. x = aa # list \\<Longrightarrow> x = a # ys", "from Cons'(1)[OF this(1)] this(2)"], ["proof (chain)\npicking this:\n  zs = ys\n  b = a", "show ?thesis"], ["proof (prove)\nusing this:\n  zs = ys\n  b = a\n\ngoal (1 subgoal):\n 1. x = a # ys", "unfolding Cons"], ["proof (prove)\nusing this:\n  zs = ys\n  b = a\n\ngoal (1 subgoal):\n 1. b # zs = a # ys", "by auto"], ["proof (state)\nthis:\n  x = a # ys\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x = a # ys\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  vfsequence_of_vlist ?x = vfsequence_of_vlist ?y \\<Longrightarrow> ?x = ?y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma range_vfsequence_of_vlist: \n  \"range vfsequence_of_vlist = {xs. vfsequence xs}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range vfsequence_of_vlist = {xs. vfsequence xs}", "proof(intro subset_antisym subsetI; unfold mem_Collect_eq)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> range vfsequence_of_vlist \\<Longrightarrow> vfsequence x\n 2. \\<And>x.\n       vfsequence x \\<Longrightarrow> x \\<in> range vfsequence_of_vlist", "show \"xs \\<in> range vfsequence_of_vlist \\<Longrightarrow> vfsequence xs\" for xs"], ["proof (prove)\ngoal (1 subgoal):\n 1. xs \\<in> range vfsequence_of_vlist \\<Longrightarrow> vfsequence xs", "by (clarsimp simp: vfsequence_vfsequence_of_vlist)"], ["proof (state)\nthis:\n  ?xs \\<in> range vfsequence_of_vlist \\<Longrightarrow> vfsequence ?xs\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       vfsequence x \\<Longrightarrow> x \\<in> range vfsequence_of_vlist", "fix xs"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       vfsequence x \\<Longrightarrow> x \\<in> range vfsequence_of_vlist", "assume \"vfsequence xs\""], ["proof (state)\nthis:\n  vfsequence xs\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       vfsequence x \\<Longrightarrow> x \\<in> range vfsequence_of_vlist", "then"], ["proof (chain)\npicking this:\n  vfsequence xs", "show \"xs \\<in> range vfsequence_of_vlist\""], ["proof (prove)\nusing this:\n  vfsequence xs\n\ngoal (1 subgoal):\n 1. xs \\<in> range vfsequence_of_vlist", "proof(induction rule: vfsequence_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. []\\<^sub>\\<circ> \\<in> range vfsequence_of_vlist\n 2. \\<And>xs x.\n       \\<lbrakk>vfsequence xs; xs \\<in> range vfsequence_of_vlist\\<rbrakk>\n       \\<Longrightarrow> xs #\\<^sub>\\<circ> x\n                         \\<in> range vfsequence_of_vlist", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. []\\<^sub>\\<circ> \\<in> range vfsequence_of_vlist\n 2. \\<And>xs x.\n       \\<lbrakk>vfsequence xs; xs \\<in> range vfsequence_of_vlist\\<rbrakk>\n       \\<Longrightarrow> xs #\\<^sub>\\<circ> x\n                         \\<in> range vfsequence_of_vlist", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. []\\<^sub>\\<circ> \\<in> range vfsequence_of_vlist", "by (metis image_iff iso_tuple_UNIV_I vfsequence_of_vlist.simps(1))"], ["proof (state)\nthis:\n  []\\<^sub>\\<circ> \\<in> range vfsequence_of_vlist\n\ngoal (1 subgoal):\n 1. \\<And>xs x.\n       \\<lbrakk>vfsequence xs; xs \\<in> range vfsequence_of_vlist\\<rbrakk>\n       \\<Longrightarrow> xs #\\<^sub>\\<circ> x\n                         \\<in> range vfsequence_of_vlist", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xs x.\n       \\<lbrakk>vfsequence xs; xs \\<in> range vfsequence_of_vlist\\<rbrakk>\n       \\<Longrightarrow> xs #\\<^sub>\\<circ> x\n                         \\<in> range vfsequence_of_vlist", "case (vcons xs x)"], ["proof (state)\nthis:\n  vfsequence xs\n  xs \\<in> range vfsequence_of_vlist\n\ngoal (1 subgoal):\n 1. \\<And>xs x.\n       \\<lbrakk>vfsequence xs; xs \\<in> range vfsequence_of_vlist\\<rbrakk>\n       \\<Longrightarrow> xs #\\<^sub>\\<circ> x\n                         \\<in> range vfsequence_of_vlist", "then"], ["proof (chain)\npicking this:\n  vfsequence xs\n  xs \\<in> range vfsequence_of_vlist", "show ?case"], ["proof (prove)\nusing this:\n  vfsequence xs\n  xs \\<in> range vfsequence_of_vlist\n\ngoal (1 subgoal):\n 1. xs #\\<^sub>\\<circ> x \\<in> range vfsequence_of_vlist", "by (metis rangeE rangeI vfsequence_of_vlist.simps(2))"], ["proof (state)\nthis:\n  xs #\\<^sub>\\<circ> x \\<in> range vfsequence_of_vlist\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  xs \\<in> range vfsequence_of_vlist\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vlist_of_vfsequence_vfsequence_of_vlist[simp]: \n  \"vlist_of_vfsequence (vfsequence_of_vlist xs) = xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vlist_of_vfsequence (vfsequence_of_vlist xs) = xs", "by (simp add: inj_vfsequence_of_vlist vlist_of_vfsequence_def)"], ["", "lemma (in vfsequence) vfsequence_of_vlist_vlist_of_vfsequence[simp]: \n  \"vfsequence_of_vlist (vlist_of_vfsequence xs) = xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence_of_vlist (vlist_of_vfsequence xs) = xs", "using vfsequence_axioms range_vfsequence_of_vlist inj_vfsequence_of_vlist"], ["proof (prove)\nusing this:\n  vfsequence xs\n  range vfsequence_of_vlist = {xs. vfsequence xs}\n  inj vfsequence_of_vlist\n\ngoal (1 subgoal):\n 1. vfsequence_of_vlist (vlist_of_vfsequence xs) = xs", "by (simp add: f_inv_into_f vlist_of_vfsequence_def)"], ["", "lemmas vfsequence_of_vlist_vlist_of_vfsequence[intro, simp] =\n  vfsequence.vfsequence_of_vlist_vlist_of_vfsequence"], ["", "lemma vlist_of_vfsequence_vempty[simp]: \"vlist_of_vfsequence []\\<^sub>\\<circ> = []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vlist_of_vfsequence []\\<^sub>\\<circ> = []", "by \n    (\n      metis \n        vfsequence_of_vlist.simps(1) \n        vlist_of_vfsequence_vfsequence_of_vlist\n    )"], ["", "text\\<open>Transfer relation 1.\\<close>"], ["", "definition cr_vfsequence :: \"V \\<Rightarrow> V list \\<Rightarrow> bool\"\n  where \"cr_vfsequence a b \\<longleftrightarrow> (a = vfsequence_of_vlist b)\""], ["", "lemma cr_vfsequence_right_total[transfer_rule]: \"right_total cr_vfsequence\""], ["proof (prove)\ngoal (1 subgoal):\n 1. right_total cr_vfsequence", "unfolding cr_vfsequence_def right_total_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y. \\<exists>x. x = vfsequence_of_vlist y", "by simp"], ["", "lemma cr_vfsequence_bi_unqie[transfer_rule]: \"bi_unique cr_vfsequence\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bi_unique cr_vfsequence", "unfolding cr_vfsequence_def bi_unique_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x y z.\n        x = vfsequence_of_vlist y \\<longrightarrow>\n        x = vfsequence_of_vlist z \\<longrightarrow> y = z) \\<and>\n    (\\<forall>x y z.\n        x = vfsequence_of_vlist z \\<longrightarrow>\n        y = vfsequence_of_vlist z \\<longrightarrow> x = y)", "by (simp add: inj_eq inj_vfsequence_of_vlist)"], ["", "lemma cr_vfsequence_transfer_domain_rule[transfer_domain_rule]: \n  \"Domainp cr_vfsequence = (\\<lambda>xs. vfsequence xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Domainp cr_vfsequence = vfsequence", "unfolding cr_vfsequence_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Domainp (\\<lambda>a b. a = vfsequence_of_vlist b) = vfsequence", "proof(intro HOL.ext, rule iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xs.\n       Domainp (\\<lambda>a b. a = vfsequence_of_vlist b)\n        xs \\<Longrightarrow>\n       vfsequence xs\n 2. \\<And>xs.\n       vfsequence xs \\<Longrightarrow>\n       Domainp (\\<lambda>a b. a = vfsequence_of_vlist b) xs", "fix xs"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xs.\n       Domainp (\\<lambda>a b. a = vfsequence_of_vlist b)\n        xs \\<Longrightarrow>\n       vfsequence xs\n 2. \\<And>xs.\n       vfsequence xs \\<Longrightarrow>\n       Domainp (\\<lambda>a b. a = vfsequence_of_vlist b) xs", "assume prems: \"vfsequence xs\""], ["proof (state)\nthis:\n  vfsequence xs\n\ngoal (2 subgoals):\n 1. \\<And>xs.\n       Domainp (\\<lambda>a b. a = vfsequence_of_vlist b)\n        xs \\<Longrightarrow>\n       vfsequence xs\n 2. \\<And>xs.\n       vfsequence xs \\<Longrightarrow>\n       Domainp (\\<lambda>a b. a = vfsequence_of_vlist b) xs", "interpret vfsequence xs"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence xs", "by (rule prems)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xs.\n       Domainp (\\<lambda>a b. a = vfsequence_of_vlist b)\n        xs \\<Longrightarrow>\n       vfsequence xs\n 2. \\<And>xs.\n       vfsequence xs \\<Longrightarrow>\n       Domainp (\\<lambda>a b. a = vfsequence_of_vlist b) xs", "have \"\\<exists>ys. xs = vfsequence_of_vlist ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ys. xs = vfsequence_of_vlist ys", "using prems"], ["proof (prove)\nusing this:\n  vfsequence xs\n\ngoal (1 subgoal):\n 1. \\<exists>ys. xs = vfsequence_of_vlist ys", "proof(induction rule: vfsequence_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>ys. []\\<^sub>\\<circ> = vfsequence_of_vlist ys\n 2. \\<And>xs x.\n       \\<lbrakk>vfsequence xs;\n        \\<exists>ys. xs = vfsequence_of_vlist ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            xs #\\<^sub>\\<circ> x = vfsequence_of_vlist ys", "show \"\\<lbrakk> vfsequence xs; \\<exists>ys. xs = vfsequence_of_vlist ys \\<rbrakk> \\<Longrightarrow>\n      \\<exists>ys. xs #\\<^sub>\\<circ> x = vfsequence_of_vlist ys\"\n      for xs x"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>vfsequence xs;\n     \\<exists>ys. xs = vfsequence_of_vlist ys\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         xs #\\<^sub>\\<circ> x = vfsequence_of_vlist ys", "unfolding vfsequence_of_vlist_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>vfsequence xs;\n     \\<exists>ys.\n        xs =\n        rec_list []\\<^sub>\\<circ> (\\<lambda>x xs xsa. xsa #\\<^sub>\\<circ> x)\n         ys\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         xs #\\<^sub>\\<circ> x =\n                         rec_list []\\<^sub>\\<circ>\n                          (\\<lambda>x xs xsa. xsa #\\<^sub>\\<circ> x) ys", "by (metis list.simps(7))"], ["proof (state)\nthis:\n  \\<lbrakk>vfsequence ?xs;\n   \\<exists>ys. ?xs = vfsequence_of_vlist ys\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       ?xs #\\<^sub>\\<circ> ?x = vfsequence_of_vlist ys\n\ngoal (1 subgoal):\n 1. \\<exists>ys. []\\<^sub>\\<circ> = vfsequence_of_vlist ys", "qed auto"], ["proof (state)\nthis:\n  \\<exists>ys. xs = vfsequence_of_vlist ys\n\ngoal (2 subgoals):\n 1. \\<And>xs.\n       Domainp (\\<lambda>a b. a = vfsequence_of_vlist b)\n        xs \\<Longrightarrow>\n       vfsequence xs\n 2. \\<And>xs.\n       vfsequence xs \\<Longrightarrow>\n       Domainp (\\<lambda>a b. a = vfsequence_of_vlist b) xs", "then"], ["proof (chain)\npicking this:\n  \\<exists>ys. xs = vfsequence_of_vlist ys", "show \"Domainp (\\<lambda>a b. a = vfsequence_of_vlist b) xs\""], ["proof (prove)\nusing this:\n  \\<exists>ys. xs = vfsequence_of_vlist ys\n\ngoal (1 subgoal):\n 1. Domainp (\\<lambda>a b. a = vfsequence_of_vlist b) xs", "by auto"], ["proof (state)\nthis:\n  Domainp (\\<lambda>a b. a = vfsequence_of_vlist b) xs\n\ngoal (1 subgoal):\n 1. \\<And>xs.\n       Domainp (\\<lambda>a b. a = vfsequence_of_vlist b)\n        xs \\<Longrightarrow>\n       vfsequence xs", "qed (clarsimp simp: vfsequence_vfsequence_of_vlist)"], ["", "lemma cr_vfsequence_vconsD:\n  assumes \"cr_vfsequence (xs #\\<^sub>\\<circ> x) (y # ys)\" \n  shows \"cr_vfsequence xs ys\" and \"x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cr_vfsequence xs ys &&& x = y", "proof-"], ["proof (state)\ngoal (2 subgoals):\n 1. cr_vfsequence xs ys\n 2. x = y", "from assms[unfolded cr_vfsequence_def]"], ["proof (chain)\npicking this:\n  xs #\\<^sub>\\<circ> x = vfsequence_of_vlist (y # ys)", "have xs_x_def: \n    \"xs #\\<^sub>\\<circ> x = vfsequence_of_vlist (y # ys)\""], ["proof (prove)\nusing this:\n  xs #\\<^sub>\\<circ> x = vfsequence_of_vlist (y # ys)\n\ngoal (1 subgoal):\n 1. xs #\\<^sub>\\<circ> x = vfsequence_of_vlist (y # ys)", "."], ["proof (state)\nthis:\n  xs #\\<^sub>\\<circ> x = vfsequence_of_vlist (y # ys)\n\ngoal (2 subgoals):\n 1. cr_vfsequence xs ys\n 2. x = y", "then"], ["proof (chain)\npicking this:\n  xs #\\<^sub>\\<circ> x = vfsequence_of_vlist (y # ys)", "have xs_x: \"vfsequence (xs #\\<^sub>\\<circ> x)\""], ["proof (prove)\nusing this:\n  xs #\\<^sub>\\<circ> x = vfsequence_of_vlist (y # ys)\n\ngoal (1 subgoal):\n 1. vfsequence (xs #\\<^sub>\\<circ> x)", "by (simp add: vfsequence_vfsequence_of_vlist)"], ["proof (state)\nthis:\n  vfsequence (xs #\\<^sub>\\<circ> x)\n\ngoal (2 subgoals):\n 1. cr_vfsequence xs ys\n 2. x = y", "interpret vfsequence xs"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence xs", "by (blast intro: vfsequence.vfsequence_vremove_vcons_vfsequence xs_x)"], ["proof (state)\ngoal (2 subgoals):\n 1. cr_vfsequence xs ys\n 2. x = y", "from \n    assms[unfolded cr_vfsequence_def vfsequence_of_vlist.simps(2)]\n    vfsequence_axioms"], ["proof (chain)\npicking this:\n  xs #\\<^sub>\\<circ> x = vfsequence_of_vlist ys #\\<^sub>\\<circ> y\n  vfsequence xs", "show \"cr_vfsequence xs ys\" and \"x = y\""], ["proof (prove)\nusing this:\n  xs #\\<^sub>\\<circ> x = vfsequence_of_vlist ys #\\<^sub>\\<circ> y\n  vfsequence xs\n\ngoal (1 subgoal):\n 1. cr_vfsequence xs ys &&& x = y", "unfolding cr_vfsequence_def"], ["proof (prove)\nusing this:\n  xs #\\<^sub>\\<circ> x = vfsequence_of_vlist ys #\\<^sub>\\<circ> y\n  vfsequence xs\n\ngoal (1 subgoal):\n 1. xs = vfsequence_of_vlist ys &&& x = y", "by (auto simp: vfsequence_vfsequence_of_vlist)"], ["proof (state)\nthis:\n  cr_vfsequence xs ys\n  x = y\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Transfer relation 2.\\<close>"], ["", "definition cr_cr_vfsequence :: \"V \\<Rightarrow> V list list \\<Rightarrow> bool\"\n  where \"cr_cr_vfsequence a b \\<longleftrightarrow> \n    (a = vfsequence_of_vlist (map vfsequence_of_vlist b))\""], ["", "lemma cr_cr_vfsequence_right_total[transfer_rule]: \n  \"right_total cr_cr_vfsequence\""], ["proof (prove)\ngoal (1 subgoal):\n 1. right_total cr_cr_vfsequence", "unfolding cr_cr_vfsequence_def right_total_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y.\n       \\<exists>x. x = vfsequence_of_vlist (map vfsequence_of_vlist y)", "by simp"], ["", "lemma cr_cr_vfsequence_bi_unqie[transfer_rule]: \"bi_unique cr_cr_vfsequence\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bi_unique cr_cr_vfsequence", "unfolding cr_cr_vfsequence_def bi_unique_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x y z.\n        x =\n        vfsequence_of_vlist (map vfsequence_of_vlist y) \\<longrightarrow>\n        x =\n        vfsequence_of_vlist (map vfsequence_of_vlist z) \\<longrightarrow>\n        y = z) \\<and>\n    (\\<forall>x y z.\n        x =\n        vfsequence_of_vlist (map vfsequence_of_vlist z) \\<longrightarrow>\n        y =\n        vfsequence_of_vlist (map vfsequence_of_vlist z) \\<longrightarrow>\n        x = y)", "by (simp add: inj_eq inj_vfsequence_of_vlist)"], ["", "text\\<open>Transfer relation for scalars.\\<close>"], ["", "definition cr_scalar :: \"(V \\<Rightarrow> 'a \\<Rightarrow> bool) \\<Rightarrow> V \\<Rightarrow> 'a \\<Rightarrow> bool\"\n  where \"cr_scalar R x y = (\\<exists>a. x = [a]\\<^sub>\\<circ> \\<and> R a y)\""], ["", "lemma cr_scalar_bi_unique[transfer_rule]:\n  assumes \"bi_unique R\"\n  shows \"bi_unique (cr_scalar R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bi_unique (cr_scalar R)", "using assms"], ["proof (prove)\nusing this:\n  bi_unique R\n\ngoal (1 subgoal):\n 1. bi_unique (cr_scalar R)", "unfolding cr_scalar_def bi_unique_def"], ["proof (prove)\nusing this:\n  (\\<forall>x y z.\n      R x y \\<longrightarrow> R x z \\<longrightarrow> y = z) \\<and>\n  (\\<forall>x y z. R x z \\<longrightarrow> R y z \\<longrightarrow> x = y)\n\ngoal (1 subgoal):\n 1. (\\<forall>x y z.\n        (\\<exists>a. x = [a]\\<^sub>\\<circ> \\<and> R a y) \\<longrightarrow>\n        (\\<exists>a. x = [a]\\<^sub>\\<circ> \\<and> R a z) \\<longrightarrow>\n        y = z) \\<and>\n    (\\<forall>x y z.\n        (\\<exists>a. x = [a]\\<^sub>\\<circ> \\<and> R a z) \\<longrightarrow>\n        (\\<exists>a. y = [a]\\<^sub>\\<circ> \\<and> R a z) \\<longrightarrow>\n        x = y)", "by auto"], ["", "lemma cr_scalar_right_total[transfer_rule]:\n  assumes \"right_total R\"\n  shows \"right_total (cr_scalar R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. right_total (cr_scalar R)", "using assms"], ["proof (prove)\nusing this:\n  right_total R\n\ngoal (1 subgoal):\n 1. right_total (cr_scalar R)", "unfolding cr_scalar_def right_total_def"], ["proof (prove)\nusing this:\n  \\<forall>y. \\<exists>x. R x y\n\ngoal (1 subgoal):\n 1. \\<forall>y. \\<exists>x a. x = [a]\\<^sub>\\<circ> \\<and> R a y", "by simp"], ["", "lemma cr_scalar_transfer_domain_rule[transfer_domain_rule]: \n  \"Domainp (cr_scalar R) = (\\<lambda>x. \\<exists>a. x = [a]\\<^sub>\\<circ> \\<and> Domainp R a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Domainp (cr_scalar R) =\n    (\\<lambda>x. \\<exists>a. x = [a]\\<^sub>\\<circ> \\<and> Domainp R a)", "unfolding cr_scalar_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Domainp (\\<lambda>x y. \\<exists>a. x = [a]\\<^sub>\\<circ> \\<and> R a y) =\n    (\\<lambda>x. \\<exists>a. x = [a]\\<^sub>\\<circ> \\<and> Domainp R a)", "by auto"], ["", "subsubsection\\<open>Transfer rules for previously defined entities\\<close>"], ["", "context \n  includes lifting_syntax\nbegin"], ["", "lemma vfsequence_vempty_transfer[transfer_rule]: \"cr_vfsequence []\\<^sub>\\<circ> []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cr_vfsequence []\\<^sub>\\<circ> []", "unfolding cr_vfsequence_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. []\\<^sub>\\<circ> = vfsequence_of_vlist []", "by simp"], ["", "lemma vfsequence_vempty_ll_transfer[transfer_rule]: \n  \"cr_cr_vfsequence [[]\\<^sub>\\<circ>]\\<^sub>\\<circ> [[]]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cr_cr_vfsequence [[]\\<^sub>\\<circ>]\\<^sub>\\<circ> [[]]", "unfolding cr_cr_vfsequence_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. [[]\\<^sub>\\<circ>]\\<^sub>\\<circ> =\n    vfsequence_of_vlist (map vfsequence_of_vlist [[]])", "by simp"], ["", "lemma vcons_transfer[transfer_rule]:\n  \"((=) ===> cr_vfsequence ===> cr_vfsequence) (\\<lambda>x xs. xs #\\<^sub>\\<circ> x) (\\<lambda>x xs. x # xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((=) ===> cr_vfsequence ===> cr_vfsequence)\n     (\\<lambda>x xs. xs #\\<^sub>\\<circ> x) (#)", "by (intro rel_funI) (simp add: cr_vfsequence_def)"], ["", "lemma vcons_ll_transfer[transfer_rule]:\n  \"(cr_vfsequence ===> cr_cr_vfsequence ===> cr_cr_vfsequence) \n    (\\<lambda>x xs. xs #\\<^sub>\\<circ> x) (\\<lambda>x xs. x # xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cr_vfsequence ===> cr_cr_vfsequence ===> cr_cr_vfsequence)\n     (\\<lambda>x xs. xs #\\<^sub>\\<circ> x) (#)", "by (intro rel_funI) (simp add: cr_vfsequence_def cr_cr_vfsequence_def)"], ["", "lemma vfsequence_vrange_transfer[transfer_rule]:\n  \"(cr_vfsequence ===> (=)) (\\<lambda>xs. elts (\\<R>\\<^sub>\\<circ> xs)) list.set\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cr_vfsequence ===> (=)) (\\<lambda>xs. elts (\\<R>\\<^sub>\\<circ> xs))\n     list.set", "proof(intro rel_funI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       cr_vfsequence x y \\<Longrightarrow>\n       elts (\\<R>\\<^sub>\\<circ> x) = list.set y", "fix xs ys"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       cr_vfsequence x y \\<Longrightarrow>\n       elts (\\<R>\\<^sub>\\<circ> x) = list.set y", "assume prems: \"cr_vfsequence xs ys\""], ["proof (state)\nthis:\n  cr_vfsequence xs ys\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       cr_vfsequence x y \\<Longrightarrow>\n       elts (\\<R>\\<^sub>\\<circ> x) = list.set y", "then"], ["proof (chain)\npicking this:\n  cr_vfsequence xs ys", "have \"xs = vfsequence_of_vlist ys\""], ["proof (prove)\nusing this:\n  cr_vfsequence xs ys\n\ngoal (1 subgoal):\n 1. xs = vfsequence_of_vlist ys", "unfolding cr_vfsequence_def"], ["proof (prove)\nusing this:\n  xs = vfsequence_of_vlist ys\n\ngoal (1 subgoal):\n 1. xs = vfsequence_of_vlist ys", "by simp"], ["proof (state)\nthis:\n  xs = vfsequence_of_vlist ys\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       cr_vfsequence x y \\<Longrightarrow>\n       elts (\\<R>\\<^sub>\\<circ> x) = list.set y", "then"], ["proof (chain)\npicking this:\n  xs = vfsequence_of_vlist ys", "have \"vfsequence xs\""], ["proof (prove)\nusing this:\n  xs = vfsequence_of_vlist ys\n\ngoal (1 subgoal):\n 1. vfsequence xs", "by (simp add: vfsequence_vfsequence_of_vlist)"], ["proof (state)\nthis:\n  vfsequence xs\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       cr_vfsequence x y \\<Longrightarrow>\n       elts (\\<R>\\<^sub>\\<circ> x) = list.set y", "from this prems"], ["proof (chain)\npicking this:\n  vfsequence xs\n  cr_vfsequence xs ys", "show \"elts (\\<R>\\<^sub>\\<circ> xs) = list.set ys\""], ["proof (prove)\nusing this:\n  vfsequence xs\n  cr_vfsequence xs ys\n\ngoal (1 subgoal):\n 1. elts (\\<R>\\<^sub>\\<circ> xs) = list.set ys", "proof(induction ys arbitrary: xs)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xs.\n       \\<lbrakk>vfsequence xs; cr_vfsequence xs []\\<rbrakk>\n       \\<Longrightarrow> elts (\\<R>\\<^sub>\\<circ> xs) = list.set []\n 2. \\<And>a ys xs.\n       \\<lbrakk>\\<And>xs.\n                   \\<lbrakk>vfsequence xs; cr_vfsequence xs ys\\<rbrakk>\n                   \\<Longrightarrow> elts (\\<R>\\<^sub>\\<circ> xs) =\n                                     list.set ys;\n        vfsequence xs; cr_vfsequence xs (a # ys)\\<rbrakk>\n       \\<Longrightarrow> elts (\\<R>\\<^sub>\\<circ> xs) = list.set (a # ys)", "case (Cons a ys)"], ["proof (state)\nthis:\n  \\<lbrakk>vfsequence ?xs; cr_vfsequence ?xs ys\\<rbrakk>\n  \\<Longrightarrow> elts (\\<R>\\<^sub>\\<circ> ?xs) = list.set ys\n  vfsequence xs\n  cr_vfsequence xs (a # ys)\n\ngoal (2 subgoals):\n 1. \\<And>xs.\n       \\<lbrakk>vfsequence xs; cr_vfsequence xs []\\<rbrakk>\n       \\<Longrightarrow> elts (\\<R>\\<^sub>\\<circ> xs) = list.set []\n 2. \\<And>a ys xs.\n       \\<lbrakk>\\<And>xs.\n                   \\<lbrakk>vfsequence xs; cr_vfsequence xs ys\\<rbrakk>\n                   \\<Longrightarrow> elts (\\<R>\\<^sub>\\<circ> xs) =\n                                     list.set ys;\n        vfsequence xs; cr_vfsequence xs (a # ys)\\<rbrakk>\n       \\<Longrightarrow> elts (\\<R>\\<^sub>\\<circ> xs) = list.set (a # ys)", "from Cons(2)"], ["proof (chain)\npicking this:\n  vfsequence xs", "show ?case"], ["proof (prove)\nusing this:\n  vfsequence xs\n\ngoal (1 subgoal):\n 1. elts (\\<R>\\<^sub>\\<circ> xs) = list.set (a # ys)", "proof(cases xs rule: vfsequence_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. xs = []\\<^sub>\\<circ> \\<Longrightarrow>\n    elts (\\<R>\\<^sub>\\<circ> xs) = list.set (a # ys)\n 2. \\<And>xs' x.\n       \\<lbrakk>xs = xs' #\\<^sub>\\<circ> x; vfsequence xs'\\<rbrakk>\n       \\<Longrightarrow> elts (\\<R>\\<^sub>\\<circ> xs) = list.set (a # ys)", "case 0"], ["proof (state)\nthis:\n  xs = []\\<^sub>\\<circ>\n\ngoal (2 subgoals):\n 1. xs = []\\<^sub>\\<circ> \\<Longrightarrow>\n    elts (\\<R>\\<^sub>\\<circ> xs) = list.set (a # ys)\n 2. \\<And>xs' x.\n       \\<lbrakk>xs = xs' #\\<^sub>\\<circ> x; vfsequence xs'\\<rbrakk>\n       \\<Longrightarrow> elts (\\<R>\\<^sub>\\<circ> xs) = list.set (a # ys)", "with Cons"], ["proof (chain)\npicking this:\n  \\<lbrakk>vfsequence ?xs; cr_vfsequence ?xs ys\\<rbrakk>\n  \\<Longrightarrow> elts (\\<R>\\<^sub>\\<circ> ?xs) = list.set ys\n  vfsequence xs\n  cr_vfsequence xs (a # ys)\n  xs = []\\<^sub>\\<circ>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>vfsequence ?xs; cr_vfsequence ?xs ys\\<rbrakk>\n  \\<Longrightarrow> elts (\\<R>\\<^sub>\\<circ> ?xs) = list.set ys\n  vfsequence xs\n  cr_vfsequence xs (a # ys)\n  xs = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. elts (\\<R>\\<^sub>\\<circ> xs) = list.set (a # ys)", "by (simp add: Cons.IH cr_vfsequence_def)"], ["proof (state)\nthis:\n  elts (\\<R>\\<^sub>\\<circ> xs) = list.set (a # ys)\n\ngoal (1 subgoal):\n 1. \\<And>xs' x.\n       \\<lbrakk>xs = xs' #\\<^sub>\\<circ> x; vfsequence xs'\\<rbrakk>\n       \\<Longrightarrow> elts (\\<R>\\<^sub>\\<circ> xs) = list.set (a # ys)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xs' x.\n       \\<lbrakk>xs = xs' #\\<^sub>\\<circ> x; vfsequence xs'\\<rbrakk>\n       \\<Longrightarrow> elts (\\<R>\\<^sub>\\<circ> xs) = list.set (a # ys)", "case (vcons xs' x)"], ["proof (state)\nthis:\n  xs = xs' #\\<^sub>\\<circ> x\n  vfsequence xs'\n\ngoal (1 subgoal):\n 1. \\<And>xs' x.\n       \\<lbrakk>xs = xs' #\\<^sub>\\<circ> x; vfsequence xs'\\<rbrakk>\n       \\<Longrightarrow> elts (\\<R>\\<^sub>\\<circ> xs) = list.set (a # ys)", "interpret vfsequence xs'"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence xs'", "by (rule vcons(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xs' x.\n       \\<lbrakk>xs = xs' #\\<^sub>\\<circ> x; vfsequence xs'\\<rbrakk>\n       \\<Longrightarrow> elts (\\<R>\\<^sub>\\<circ> xs) = list.set (a # ys)", "note vcons_transfer = cr_vfsequence_vconsD[OF Cons(3)[unfolded vcons(1)]]"], ["proof (state)\nthis:\n  cr_vfsequence xs' ys\n  x = a\n\ngoal (1 subgoal):\n 1. \\<And>xs' x.\n       \\<lbrakk>xs = xs' #\\<^sub>\\<circ> x; vfsequence xs'\\<rbrakk>\n       \\<Longrightarrow> elts (\\<R>\\<^sub>\\<circ> xs) = list.set (a # ys)", "have a_ys: \"list.set (a # ys) = insert a (list.set ys)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. list.set (a # ys) = insert a (list.set ys)", "by simp"], ["proof (state)\nthis:\n  list.set (a # ys) = insert a (list.set ys)\n\ngoal (1 subgoal):\n 1. \\<And>xs' x.\n       \\<lbrakk>xs = xs' #\\<^sub>\\<circ> x; vfsequence xs'\\<rbrakk>\n       \\<Longrightarrow> elts (\\<R>\\<^sub>\\<circ> xs) = list.set (a # ys)", "from vcons(2)"], ["proof (chain)\npicking this:\n  vfsequence xs'", "have R_xs'x: \"\\<R>\\<^sub>\\<circ> (xs' #\\<^sub>\\<circ> x) = vinsert x (\\<R>\\<^sub>\\<circ> xs')\""], ["proof (prove)\nusing this:\n  vfsequence xs'\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (xs' #\\<^sub>\\<circ> x) =\n    vinsert x (\\<R>\\<^sub>\\<circ> xs')", "by simp"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (xs' #\\<^sub>\\<circ> x) =\n  vinsert x (\\<R>\\<^sub>\\<circ> xs')\n\ngoal (1 subgoal):\n 1. \\<And>xs' x.\n       \\<lbrakk>xs = xs' #\\<^sub>\\<circ> x; vfsequence xs'\\<rbrakk>\n       \\<Longrightarrow> elts (\\<R>\\<^sub>\\<circ> xs) = list.set (a # ys)", "show \"elts (\\<R>\\<^sub>\\<circ> xs) = (list.set (a # ys))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. elts (\\<R>\\<^sub>\\<circ> xs) = list.set (a # ys)", "unfolding vcons(1) R_xs'x a_ys"], ["proof (prove)\ngoal (1 subgoal):\n 1. elts (vinsert x (\\<R>\\<^sub>\\<circ> xs')) = insert a (list.set ys)", "by \n          (\n            auto simp: \n              vcons_transfer(2) Cons(1)[OF vfsequence_axioms vcons_transfer(1)]\n          )"], ["proof (state)\nthis:\n  elts (\\<R>\\<^sub>\\<circ> xs) = list.set (a # ys)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  elts (\\<R>\\<^sub>\\<circ> xs) = list.set (a # ys)\n\ngoal (1 subgoal):\n 1. \\<And>xs.\n       \\<lbrakk>vfsequence xs; cr_vfsequence xs []\\<rbrakk>\n       \\<Longrightarrow> elts (\\<R>\\<^sub>\\<circ> xs) = list.set []", "qed (auto simp: cr_vfsequence_def)"], ["proof (state)\nthis:\n  elts (\\<R>\\<^sub>\\<circ> xs) = list.set ys\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vcard_transfer[transfer_rule]: \n  \"(cr_vfsequence ===> cr_omega) vcard length\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cr_vfsequence ===> cr_omega) vcard length", "proof(intro rel_funI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       cr_vfsequence x y \\<Longrightarrow> cr_omega (vcard x) (length y)", "fix xs ys"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       cr_vfsequence x y \\<Longrightarrow> cr_omega (vcard x) (length y)", "assume prems: \"cr_vfsequence xs ys\""], ["proof (state)\nthis:\n  cr_vfsequence xs ys\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       cr_vfsequence x y \\<Longrightarrow> cr_omega (vcard x) (length y)", "then"], ["proof (chain)\npicking this:\n  cr_vfsequence xs ys", "have \"xs = vfsequence_of_vlist ys\""], ["proof (prove)\nusing this:\n  cr_vfsequence xs ys\n\ngoal (1 subgoal):\n 1. xs = vfsequence_of_vlist ys", "unfolding cr_vfsequence_def"], ["proof (prove)\nusing this:\n  xs = vfsequence_of_vlist ys\n\ngoal (1 subgoal):\n 1. xs = vfsequence_of_vlist ys", "by simp"], ["proof (state)\nthis:\n  xs = vfsequence_of_vlist ys\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       cr_vfsequence x y \\<Longrightarrow> cr_omega (vcard x) (length y)", "then"], ["proof (chain)\npicking this:\n  xs = vfsequence_of_vlist ys", "have \"vfsequence xs\""], ["proof (prove)\nusing this:\n  xs = vfsequence_of_vlist ys\n\ngoal (1 subgoal):\n 1. vfsequence xs", "by (simp add: vfsequence_vfsequence_of_vlist)"], ["proof (state)\nthis:\n  vfsequence xs\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       cr_vfsequence x y \\<Longrightarrow> cr_omega (vcard x) (length y)", "from this prems"], ["proof (chain)\npicking this:\n  vfsequence xs\n  cr_vfsequence xs ys", "show \"cr_omega (vcard xs) (length ys)\""], ["proof (prove)\nusing this:\n  vfsequence xs\n  cr_vfsequence xs ys\n\ngoal (1 subgoal):\n 1. cr_omega (vcard xs) (length ys)", "proof(induction ys arbitrary: xs)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xs.\n       \\<lbrakk>vfsequence xs; cr_vfsequence xs []\\<rbrakk>\n       \\<Longrightarrow> cr_omega (vcard xs) (length [])\n 2. \\<And>a ys xs.\n       \\<lbrakk>\\<And>xs.\n                   \\<lbrakk>vfsequence xs; cr_vfsequence xs ys\\<rbrakk>\n                   \\<Longrightarrow> cr_omega (vcard xs) (length ys);\n        vfsequence xs; cr_vfsequence xs (a # ys)\\<rbrakk>\n       \\<Longrightarrow> cr_omega (vcard xs) (length (a # ys))", "case (Cons y ys)"], ["proof (state)\nthis:\n  \\<lbrakk>vfsequence ?xs; cr_vfsequence ?xs ys\\<rbrakk>\n  \\<Longrightarrow> cr_omega (vcard ?xs) (length ys)\n  vfsequence xs\n  cr_vfsequence xs (y # ys)\n\ngoal (2 subgoals):\n 1. \\<And>xs.\n       \\<lbrakk>vfsequence xs; cr_vfsequence xs []\\<rbrakk>\n       \\<Longrightarrow> cr_omega (vcard xs) (length [])\n 2. \\<And>a ys xs.\n       \\<lbrakk>\\<And>xs.\n                   \\<lbrakk>vfsequence xs; cr_vfsequence xs ys\\<rbrakk>\n                   \\<Longrightarrow> cr_omega (vcard xs) (length ys);\n        vfsequence xs; cr_vfsequence xs (a # ys)\\<rbrakk>\n       \\<Longrightarrow> cr_omega (vcard xs) (length (a # ys))", "from Cons(2)"], ["proof (chain)\npicking this:\n  vfsequence xs", "show ?case"], ["proof (prove)\nusing this:\n  vfsequence xs\n\ngoal (1 subgoal):\n 1. cr_omega (vcard xs) (length (y # ys))", "proof(cases xs rule: vfsequence_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. xs = []\\<^sub>\\<circ> \\<Longrightarrow>\n    cr_omega (vcard xs) (length (y # ys))\n 2. \\<And>xs' x.\n       \\<lbrakk>xs = xs' #\\<^sub>\\<circ> x; vfsequence xs'\\<rbrakk>\n       \\<Longrightarrow> cr_omega (vcard xs) (length (y # ys))", "case 0"], ["proof (state)\nthis:\n  xs = []\\<^sub>\\<circ>\n\ngoal (2 subgoals):\n 1. xs = []\\<^sub>\\<circ> \\<Longrightarrow>\n    cr_omega (vcard xs) (length (y # ys))\n 2. \\<And>xs' x.\n       \\<lbrakk>xs = xs' #\\<^sub>\\<circ> x; vfsequence xs'\\<rbrakk>\n       \\<Longrightarrow> cr_omega (vcard xs) (length (y # ys))", "with Cons"], ["proof (chain)\npicking this:\n  \\<lbrakk>vfsequence ?xs; cr_vfsequence ?xs ys\\<rbrakk>\n  \\<Longrightarrow> cr_omega (vcard ?xs) (length ys)\n  vfsequence xs\n  cr_vfsequence xs (y # ys)\n  xs = []\\<^sub>\\<circ>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>vfsequence ?xs; cr_vfsequence ?xs ys\\<rbrakk>\n  \\<Longrightarrow> cr_omega (vcard ?xs) (length ys)\n  vfsequence xs\n  cr_vfsequence xs (y # ys)\n  xs = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. cr_omega (vcard xs) (length (y # ys))", "by (simp add: Cons.IH cr_vfsequence_def)"], ["proof (state)\nthis:\n  cr_omega (vcard xs) (length (y # ys))\n\ngoal (1 subgoal):\n 1. \\<And>xs' x.\n       \\<lbrakk>xs = xs' #\\<^sub>\\<circ> x; vfsequence xs'\\<rbrakk>\n       \\<Longrightarrow> cr_omega (vcard xs) (length (y # ys))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xs' x.\n       \\<lbrakk>xs = xs' #\\<^sub>\\<circ> x; vfsequence xs'\\<rbrakk>\n       \\<Longrightarrow> cr_omega (vcard xs) (length (y # ys))", "case (vcons xs' x)"], ["proof (state)\nthis:\n  xs = xs' #\\<^sub>\\<circ> x\n  vfsequence xs'\n\ngoal (1 subgoal):\n 1. \\<And>xs' x.\n       \\<lbrakk>xs = xs' #\\<^sub>\\<circ> x; vfsequence xs'\\<rbrakk>\n       \\<Longrightarrow> cr_omega (vcard xs) (length (y # ys))", "interpret vfsequence xs'"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence xs'", "by (rule vcons(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xs' x.\n       \\<lbrakk>xs = xs' #\\<^sub>\\<circ> x; vfsequence xs'\\<rbrakk>\n       \\<Longrightarrow> cr_omega (vcard xs) (length (y # ys))", "note vcons_transfer = cr_vfsequence_vconsD[OF Cons(3)[unfolded vcons(1)]]"], ["proof (state)\nthis:\n  cr_vfsequence xs' ys\n  x = y\n\ngoal (1 subgoal):\n 1. \\<And>xs' x.\n       \\<lbrakk>xs = xs' #\\<^sub>\\<circ> x; vfsequence xs'\\<rbrakk>\n       \\<Longrightarrow> cr_omega (vcard xs) (length (y # ys))", "have vcard_xs_x: \"vcard (xs' #\\<^sub>\\<circ> x) = succ (vcard xs')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (xs' #\\<^sub>\\<circ> x) = ZFC_in_HOL.succ (vcard xs')", "by simp"], ["proof (state)\nthis:\n  vcard (xs' #\\<^sub>\\<circ> x) = ZFC_in_HOL.succ (vcard xs')\n\ngoal (1 subgoal):\n 1. \\<And>xs' x.\n       \\<lbrakk>xs = xs' #\\<^sub>\\<circ> x; vfsequence xs'\\<rbrakk>\n       \\<Longrightarrow> cr_omega (vcard xs) (length (y # ys))", "have vcard_y_ys: \"length (y # ys) = Suc (length ys)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length (y # ys) = Suc (length ys)", "by simp"], ["proof (state)\nthis:\n  length (y # ys) = Suc (length ys)\n\ngoal (1 subgoal):\n 1. \\<And>xs' x.\n       \\<lbrakk>xs = xs' #\\<^sub>\\<circ> x; vfsequence xs'\\<rbrakk>\n       \\<Longrightarrow> cr_omega (vcard xs) (length (y # ys))", "from vfsequence_axioms"], ["proof (chain)\npicking this:\n  vfsequence xs'", "have [transfer_rule]: \n        \"cr_omega (vcard xs') (length ys)\""], ["proof (prove)\nusing this:\n  vfsequence xs'\n\ngoal (1 subgoal):\n 1. cr_omega (vcard xs') (length ys)", "by (simp add: vcons_transfer(1) Cons.IH)"], ["proof (state)\nthis:\n  cr_omega (vcard xs') (length ys)\n\ngoal (1 subgoal):\n 1. \\<And>xs' x.\n       \\<lbrakk>xs = xs' #\\<^sub>\\<circ> x; vfsequence xs'\\<rbrakk>\n       \\<Longrightarrow> cr_omega (vcard xs) (length (y # ys))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. cr_omega (vcard xs) (length (y # ys))", "unfolding vcons(1) vcard_xs_x vcard_y_ys"], ["proof (prove)\ngoal (1 subgoal):\n 1. cr_omega (ZFC_in_HOL.succ (vcard xs')) (Suc (length ys))", "by transfer_prover"], ["proof (state)\nthis:\n  cr_omega (vcard xs) (length (y # ys))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cr_omega (vcard xs) (length (y # ys))\n\ngoal (1 subgoal):\n 1. \\<And>xs.\n       \\<lbrakk>vfsequence xs; cr_vfsequence xs []\\<rbrakk>\n       \\<Longrightarrow> cr_omega (vcard xs) (length [])", "qed (auto simp: cr_omega_def cr_vfsequence_def)"], ["proof (state)\nthis:\n  cr_omega (vcard xs) (length ys)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vcard_ll_transfer[transfer_rule]: \n  \"(cr_cr_vfsequence ===> cr_omega) vcard length\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cr_cr_vfsequence ===> cr_omega) vcard length", "unfolding cr_cr_vfsequence_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>a b.\n         a = vfsequence_of_vlist (map vfsequence_of_vlist b)) ===>\n     cr_omega)\n     vcard length", "by (intro rel_funI)\n    (metis cr_vfsequence_def length_map rel_funD vcard_transfer)"], ["", "end"], ["", "text\\<open>Corollaries.\\<close>"], ["", "lemma vrange_vfsequence_of_vlist: \n  \"\\<R>\\<^sub>\\<circ> (vfsequence_of_vlist xs) = set (list.set xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (vfsequence_of_vlist xs) = set (list.set xs)", "proof(intro vsubset_antisym vsubsetI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (vfsequence_of_vlist xs) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> set (list.set xs)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> set (list.set xs) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (vfsequence_of_vlist xs)", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (vfsequence_of_vlist xs) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> set (list.set xs)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> set (list.set xs) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (vfsequence_of_vlist xs)", "assume prems: \"x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (vfsequence_of_vlist xs)\""], ["proof (state)\nthis:\n  x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (vfsequence_of_vlist xs)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (vfsequence_of_vlist xs) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> set (list.set xs)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> set (list.set xs) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (vfsequence_of_vlist xs)", "define ys where \"ys = vfsequence_of_vlist xs\""], ["proof (state)\nthis:\n  ys = vfsequence_of_vlist xs\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (vfsequence_of_vlist xs) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> set (list.set xs)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> set (list.set xs) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (vfsequence_of_vlist xs)", "have [transfer_rule]: \"cr_vfsequence ys xs\" \"x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cr_vfsequence ys xs &&& x = x", "unfolding ys_def cr_vfsequence_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence_of_vlist xs = vfsequence_of_vlist xs &&& x = x", "by simp_all"], ["proof (state)\nthis:\n  cr_vfsequence ys xs\n  x = x\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (vfsequence_of_vlist xs) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> set (list.set xs)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> set (list.set xs) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (vfsequence_of_vlist xs)", "show \"x \\<in>\\<^sub>\\<circ> set (list.set xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>\\<circ> set (list.set xs)", "by transfer (simp add: prems[folded ys_def])"], ["proof (state)\nthis:\n  x \\<in>\\<^sub>\\<circ> set (list.set xs)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> set (list.set xs) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (vfsequence_of_vlist xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> set (list.set xs) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (vfsequence_of_vlist xs)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> set (list.set xs) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (vfsequence_of_vlist xs)", "assume prems: \"x \\<in>\\<^sub>\\<circ> set (list.set xs)\""], ["proof (state)\nthis:\n  x \\<in>\\<^sub>\\<circ> set (list.set xs)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> set (list.set xs) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (vfsequence_of_vlist xs)", "define ys where \"ys = vfsequence_of_vlist xs\""], ["proof (state)\nthis:\n  ys = vfsequence_of_vlist xs\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> set (list.set xs) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (vfsequence_of_vlist xs)", "have [transfer_rule]: \"cr_vfsequence ys xs\" \"x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cr_vfsequence ys xs &&& x = x", "unfolding ys_def cr_vfsequence_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence_of_vlist xs = vfsequence_of_vlist xs &&& x = x", "by simp_all"], ["proof (state)\nthis:\n  cr_vfsequence ys xs\n  x = x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> set (list.set xs) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (vfsequence_of_vlist xs)", "from prems[untransferred]"], ["proof (chain)\npicking this:\n  x \\<in>\\<^sub>\\<circ> set (elts (\\<R>\\<^sub>\\<circ> ys))", "show \"x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (vfsequence_of_vlist xs)\""], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>\\<circ> set (elts (\\<R>\\<^sub>\\<circ> ys))\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (vfsequence_of_vlist xs)", "unfolding ys_def"], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>\\<circ> set (elts\n                              (\\<R>\\<^sub>\\<circ> (vfsequence_of_vlist xs)))\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (vfsequence_of_vlist xs)", "by simp"], ["proof (state)\nthis:\n  x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (vfsequence_of_vlist xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cr_cr_vfsequence_transfer_domain_rule[transfer_domain_rule]: \n  \"Domainp cr_cr_vfsequence = \n    (\\<lambda>xss. vfsequence xss \\<and> (\\<forall>xs\\<in>\\<^sub>\\<circ>\\<R>\\<^sub>\\<circ> xss. vfsequence xs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Domainp cr_cr_vfsequence =\n    (\\<lambda>xss.\n        vfsequence xss \\<and>\n        (\\<forall>xs\\<in>elts (\\<R>\\<^sub>\\<circ> xss). vfsequence xs))", "proof(intro HOL.ext, rule iffI; (elim conjE | intro conjI ballI))"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>xss. Domainp cr_cr_vfsequence xss \\<Longrightarrow> vfsequence xss\n 2. \\<And>xss xs.\n       \\<lbrakk>Domainp cr_cr_vfsequence xss;\n        xs \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> xss\\<rbrakk>\n       \\<Longrightarrow> vfsequence xs\n 3. \\<And>xss.\n       \\<lbrakk>vfsequence xss;\n        \\<forall>xs\\<in>elts (\\<R>\\<^sub>\\<circ> xss).\n           vfsequence xs\\<rbrakk>\n       \\<Longrightarrow> Domainp cr_cr_vfsequence xss", "fix xss"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>xss. Domainp cr_cr_vfsequence xss \\<Longrightarrow> vfsequence xss\n 2. \\<And>xss xs.\n       \\<lbrakk>Domainp cr_cr_vfsequence xss;\n        xs \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> xss\\<rbrakk>\n       \\<Longrightarrow> vfsequence xs\n 3. \\<And>xss.\n       \\<lbrakk>vfsequence xss;\n        \\<forall>xs\\<in>elts (\\<R>\\<^sub>\\<circ> xss).\n           vfsequence xs\\<rbrakk>\n       \\<Longrightarrow> Domainp cr_cr_vfsequence xss", "assume prems: \"Domainp cr_cr_vfsequence xss\""], ["proof (state)\nthis:\n  Domainp cr_cr_vfsequence xss\n\ngoal (3 subgoals):\n 1. \\<And>xss. Domainp cr_cr_vfsequence xss \\<Longrightarrow> vfsequence xss\n 2. \\<And>xss xs.\n       \\<lbrakk>Domainp cr_cr_vfsequence xss;\n        xs \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> xss\\<rbrakk>\n       \\<Longrightarrow> vfsequence xs\n 3. \\<And>xss.\n       \\<lbrakk>vfsequence xss;\n        \\<forall>xs\\<in>elts (\\<R>\\<^sub>\\<circ> xss).\n           vfsequence xs\\<rbrakk>\n       \\<Longrightarrow> Domainp cr_cr_vfsequence xss", "with vfsequence_vfsequence_of_vlist"], ["proof (chain)\npicking this:\n  vfsequence (vfsequence_of_vlist ?xs)\n  Domainp cr_cr_vfsequence xss", "show xss: \"vfsequence xss\""], ["proof (prove)\nusing this:\n  vfsequence (vfsequence_of_vlist ?xs)\n  Domainp cr_cr_vfsequence xss\n\ngoal (1 subgoal):\n 1. vfsequence xss", "unfolding cr_cr_vfsequence_def"], ["proof (prove)\nusing this:\n  vfsequence (vfsequence_of_vlist ?xs)\n  Domainp\n   (\\<lambda>a b. a = vfsequence_of_vlist (map vfsequence_of_vlist b)) xss\n\ngoal (1 subgoal):\n 1. vfsequence xss", "by clarsimp"], ["proof (state)\nthis:\n  vfsequence xss\n\ngoal (2 subgoals):\n 1. \\<And>xss xs.\n       \\<lbrakk>Domainp cr_cr_vfsequence xss;\n        xs \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> xss\\<rbrakk>\n       \\<Longrightarrow> vfsequence xs\n 2. \\<And>xss.\n       \\<lbrakk>vfsequence xss;\n        \\<forall>xs\\<in>elts (\\<R>\\<^sub>\\<circ> xss).\n           vfsequence xs\\<rbrakk>\n       \\<Longrightarrow> Domainp cr_cr_vfsequence xss", "interpret vfsequence xss"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence xss", "by (rule xss)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xss xs.\n       \\<lbrakk>Domainp cr_cr_vfsequence xss;\n        xs \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> xss\\<rbrakk>\n       \\<Longrightarrow> vfsequence xs\n 2. \\<And>xss.\n       \\<lbrakk>vfsequence xss;\n        \\<forall>xs\\<in>elts (\\<R>\\<^sub>\\<circ> xss).\n           vfsequence xs\\<rbrakk>\n       \\<Longrightarrow> Domainp cr_cr_vfsequence xss", "fix xs"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xss xs.\n       \\<lbrakk>Domainp cr_cr_vfsequence xss;\n        xs \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> xss\\<rbrakk>\n       \\<Longrightarrow> vfsequence xs\n 2. \\<And>xss.\n       \\<lbrakk>vfsequence xss;\n        \\<forall>xs\\<in>elts (\\<R>\\<^sub>\\<circ> xss).\n           vfsequence xs\\<rbrakk>\n       \\<Longrightarrow> Domainp cr_cr_vfsequence xss", "assume prems': \"xs \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> xss\""], ["proof (state)\nthis:\n  xs \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> xss\n\ngoal (2 subgoals):\n 1. \\<And>xss xs.\n       \\<lbrakk>Domainp cr_cr_vfsequence xss;\n        xs \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> xss\\<rbrakk>\n       \\<Longrightarrow> vfsequence xs\n 2. \\<And>xss.\n       \\<lbrakk>vfsequence xss;\n        \\<forall>xs\\<in>elts (\\<R>\\<^sub>\\<circ> xss).\n           vfsequence xs\\<rbrakk>\n       \\<Longrightarrow> Domainp cr_cr_vfsequence xss", "from prems"], ["proof (chain)\npicking this:\n  Domainp cr_cr_vfsequence xss", "obtain yss where xss_def: \n    \"xss = vfsequence_of_vlist (map vfsequence_of_vlist yss)\""], ["proof (prove)\nusing this:\n  Domainp cr_cr_vfsequence xss\n\ngoal (1 subgoal):\n 1. (\\<And>yss.\n        xss =\n        vfsequence_of_vlist (map vfsequence_of_vlist yss) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding cr_cr_vfsequence_def"], ["proof (prove)\nusing this:\n  Domainp\n   (\\<lambda>a b. a = vfsequence_of_vlist (map vfsequence_of_vlist b)) xss\n\ngoal (1 subgoal):\n 1. (\\<And>yss.\n        xss =\n        vfsequence_of_vlist (map vfsequence_of_vlist yss) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  xss = vfsequence_of_vlist (map vfsequence_of_vlist yss)\n\ngoal (2 subgoals):\n 1. \\<And>xss xs.\n       \\<lbrakk>Domainp cr_cr_vfsequence xss;\n        xs \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> xss\\<rbrakk>\n       \\<Longrightarrow> vfsequence xs\n 2. \\<And>xss.\n       \\<lbrakk>vfsequence xss;\n        \\<forall>xs\\<in>elts (\\<R>\\<^sub>\\<circ> xss).\n           vfsequence xs\\<rbrakk>\n       \\<Longrightarrow> Domainp cr_cr_vfsequence xss", "from prems'"], ["proof (chain)\npicking this:\n  xs \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> xss", "have \"xs \\<in>\\<^sub>\\<circ> set (list.set (map vfsequence_of_vlist yss))\""], ["proof (prove)\nusing this:\n  xs \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> xss\n\ngoal (1 subgoal):\n 1. xs \\<in>\\<^sub>\\<circ> set (list.set (map vfsequence_of_vlist yss))", "unfolding xss_def vrange_vfsequence_of_vlist"], ["proof (prove)\nusing this:\n  xs \\<in>\\<^sub>\\<circ> set (list.set (map vfsequence_of_vlist yss))\n\ngoal (1 subgoal):\n 1. xs \\<in>\\<^sub>\\<circ> set (list.set (map vfsequence_of_vlist yss))", "by simp"], ["proof (state)\nthis:\n  xs \\<in>\\<^sub>\\<circ> set (list.set (map vfsequence_of_vlist yss))\n\ngoal (2 subgoals):\n 1. \\<And>xss xs.\n       \\<lbrakk>Domainp cr_cr_vfsequence xss;\n        xs \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> xss\\<rbrakk>\n       \\<Longrightarrow> vfsequence xs\n 2. \\<And>xss.\n       \\<lbrakk>vfsequence xss;\n        \\<forall>xs\\<in>elts (\\<R>\\<^sub>\\<circ> xss).\n           vfsequence xs\\<rbrakk>\n       \\<Longrightarrow> Domainp cr_cr_vfsequence xss", "then"], ["proof (chain)\npicking this:\n  xs \\<in>\\<^sub>\\<circ> set (list.set (map vfsequence_of_vlist yss))", "obtain ys where xs_def: \"xs = vfsequence_of_vlist ys\""], ["proof (prove)\nusing this:\n  xs \\<in>\\<^sub>\\<circ> set (list.set (map vfsequence_of_vlist yss))\n\ngoal (1 subgoal):\n 1. (\\<And>ys.\n        xs = vfsequence_of_vlist ys \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  xs = vfsequence_of_vlist ys\n\ngoal (2 subgoals):\n 1. \\<And>xss xs.\n       \\<lbrakk>Domainp cr_cr_vfsequence xss;\n        xs \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> xss\\<rbrakk>\n       \\<Longrightarrow> vfsequence xs\n 2. \\<And>xss.\n       \\<lbrakk>vfsequence xss;\n        \\<forall>xs\\<in>elts (\\<R>\\<^sub>\\<circ> xss).\n           vfsequence xs\\<rbrakk>\n       \\<Longrightarrow> Domainp cr_cr_vfsequence xss", "show \"vfsequence xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence xs", "unfolding xs_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (vfsequence_of_vlist ys)", "by (simp add: vfsequence_vfsequence_of_vlist)"], ["proof (state)\nthis:\n  vfsequence xs\n\ngoal (1 subgoal):\n 1. \\<And>xss.\n       \\<lbrakk>vfsequence xss;\n        \\<forall>xs\\<in>elts (\\<R>\\<^sub>\\<circ> xss).\n           vfsequence xs\\<rbrakk>\n       \\<Longrightarrow> Domainp cr_cr_vfsequence xss", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xss.\n       \\<lbrakk>vfsequence xss;\n        \\<forall>xs\\<in>elts (\\<R>\\<^sub>\\<circ> xss).\n           vfsequence xs\\<rbrakk>\n       \\<Longrightarrow> Domainp cr_cr_vfsequence xss", "fix xss"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xss.\n       \\<lbrakk>vfsequence xss;\n        \\<forall>xs\\<in>elts (\\<R>\\<^sub>\\<circ> xss).\n           vfsequence xs\\<rbrakk>\n       \\<Longrightarrow> Domainp cr_cr_vfsequence xss", "assume prems: \"vfsequence xss\" \"\\<forall>xs\\<in>\\<^sub>\\<circ>\\<R>\\<^sub>\\<circ> xss. vfsequence xs\""], ["proof (state)\nthis:\n  vfsequence xss\n  \\<forall>xs\\<in>elts (\\<R>\\<^sub>\\<circ> xss). vfsequence xs\n\ngoal (1 subgoal):\n 1. \\<And>xss.\n       \\<lbrakk>vfsequence xss;\n        \\<forall>xs\\<in>elts (\\<R>\\<^sub>\\<circ> xss).\n           vfsequence xs\\<rbrakk>\n       \\<Longrightarrow> Domainp cr_cr_vfsequence xss", "have \"\\<exists>yss. xss = vfsequence_of_vlist (map vfsequence_of_vlist yss)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>yss. xss = vfsequence_of_vlist (map vfsequence_of_vlist yss)", "using prems"], ["proof (prove)\nusing this:\n  vfsequence xss\n  \\<forall>xs\\<in>elts (\\<R>\\<^sub>\\<circ> xss). vfsequence xs\n\ngoal (1 subgoal):\n 1. \\<exists>yss. xss = vfsequence_of_vlist (map vfsequence_of_vlist yss)", "proof(induction rule: vfsequence_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. Ball (elts (\\<R>\\<^sub>\\<circ> []\\<^sub>\\<circ>))\n     vfsequence \\<Longrightarrow>\n    \\<exists>yss.\n       []\\<^sub>\\<circ> = vfsequence_of_vlist (map vfsequence_of_vlist yss)\n 2. \\<And>xs x.\n       \\<lbrakk>vfsequence xs;\n        Ball (elts (\\<R>\\<^sub>\\<circ> xs)) vfsequence \\<Longrightarrow>\n        \\<exists>yss.\n           xs = vfsequence_of_vlist (map vfsequence_of_vlist yss);\n        Ball (elts (\\<R>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x)))\n         vfsequence\\<rbrakk>\n       \\<Longrightarrow> \\<exists>yss.\n                            xs #\\<^sub>\\<circ> x =\n                            vfsequence_of_vlist\n                             (map vfsequence_of_vlist yss)", "case (vcons xss x)"], ["proof (state)\nthis:\n  vfsequence xss\n  \\<forall>a\\<in>elts (\\<R>\\<^sub>\\<circ> xss).\n     vfsequence a \\<Longrightarrow>\n  \\<exists>yss. xss = vfsequence_of_vlist (map vfsequence_of_vlist yss)\n  \\<forall>a\\<in>elts (\\<R>\\<^sub>\\<circ> (xss #\\<^sub>\\<circ> x)).\n     vfsequence a\n\ngoal (2 subgoals):\n 1. Ball (elts (\\<R>\\<^sub>\\<circ> []\\<^sub>\\<circ>))\n     vfsequence \\<Longrightarrow>\n    \\<exists>yss.\n       []\\<^sub>\\<circ> = vfsequence_of_vlist (map vfsequence_of_vlist yss)\n 2. \\<And>xs x.\n       \\<lbrakk>vfsequence xs;\n        Ball (elts (\\<R>\\<^sub>\\<circ> xs)) vfsequence \\<Longrightarrow>\n        \\<exists>yss.\n           xs = vfsequence_of_vlist (map vfsequence_of_vlist yss);\n        Ball (elts (\\<R>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x)))\n         vfsequence\\<rbrakk>\n       \\<Longrightarrow> \\<exists>yss.\n                            xs #\\<^sub>\\<circ> x =\n                            vfsequence_of_vlist\n                             (map vfsequence_of_vlist yss)", "let ?y = \\<open>vlist_of_vfsequence x\\<close>"], ["proof (state)\ngoal (2 subgoals):\n 1. Ball (elts (\\<R>\\<^sub>\\<circ> []\\<^sub>\\<circ>))\n     vfsequence \\<Longrightarrow>\n    \\<exists>yss.\n       []\\<^sub>\\<circ> = vfsequence_of_vlist (map vfsequence_of_vlist yss)\n 2. \\<And>xs x.\n       \\<lbrakk>vfsequence xs;\n        Ball (elts (\\<R>\\<^sub>\\<circ> xs)) vfsequence \\<Longrightarrow>\n        \\<exists>yss.\n           xs = vfsequence_of_vlist (map vfsequence_of_vlist yss);\n        Ball (elts (\\<R>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x)))\n         vfsequence\\<rbrakk>\n       \\<Longrightarrow> \\<exists>yss.\n                            xs #\\<^sub>\\<circ> x =\n                            vfsequence_of_vlist\n                             (map vfsequence_of_vlist yss)", "from vcons(2,3)"], ["proof (chain)\npicking this:\n  \\<forall>a\\<in>elts (\\<R>\\<^sub>\\<circ> xss).\n     vfsequence a \\<Longrightarrow>\n  \\<exists>yss. xss = vfsequence_of_vlist (map vfsequence_of_vlist yss)\n  \\<forall>a\\<in>elts (\\<R>\\<^sub>\\<circ> (xss #\\<^sub>\\<circ> x)).\n     vfsequence a", "obtain yss where xss_def: \n      \"xss = vfsequence_of_vlist (map vfsequence_of_vlist yss)\""], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>elts (\\<R>\\<^sub>\\<circ> xss).\n     vfsequence a \\<Longrightarrow>\n  \\<exists>yss. xss = vfsequence_of_vlist (map vfsequence_of_vlist yss)\n  \\<forall>a\\<in>elts (\\<R>\\<^sub>\\<circ> (xss #\\<^sub>\\<circ> x)).\n     vfsequence a\n\ngoal (1 subgoal):\n 1. (\\<And>yss.\n        xss =\n        vfsequence_of_vlist (map vfsequence_of_vlist yss) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  xss = vfsequence_of_vlist (map vfsequence_of_vlist yss)\n\ngoal (2 subgoals):\n 1. Ball (elts (\\<R>\\<^sub>\\<circ> []\\<^sub>\\<circ>))\n     vfsequence \\<Longrightarrow>\n    \\<exists>yss.\n       []\\<^sub>\\<circ> = vfsequence_of_vlist (map vfsequence_of_vlist yss)\n 2. \\<And>xs x.\n       \\<lbrakk>vfsequence xs;\n        Ball (elts (\\<R>\\<^sub>\\<circ> xs)) vfsequence \\<Longrightarrow>\n        \\<exists>yss.\n           xs = vfsequence_of_vlist (map vfsequence_of_vlist yss);\n        Ball (elts (\\<R>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x)))\n         vfsequence\\<rbrakk>\n       \\<Longrightarrow> \\<exists>yss.\n                            xs #\\<^sub>\\<circ> x =\n                            vfsequence_of_vlist\n                             (map vfsequence_of_vlist yss)", "from vcons(3)"], ["proof (chain)\npicking this:\n  \\<forall>a\\<in>elts (\\<R>\\<^sub>\\<circ> (xss #\\<^sub>\\<circ> x)).\n     vfsequence a", "have \"vfsequence x\""], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>elts (\\<R>\\<^sub>\\<circ> (xss #\\<^sub>\\<circ> x)).\n     vfsequence a\n\ngoal (1 subgoal):\n 1. vfsequence x", "by auto"], ["proof (state)\nthis:\n  vfsequence x\n\ngoal (2 subgoals):\n 1. Ball (elts (\\<R>\\<^sub>\\<circ> []\\<^sub>\\<circ>))\n     vfsequence \\<Longrightarrow>\n    \\<exists>yss.\n       []\\<^sub>\\<circ> = vfsequence_of_vlist (map vfsequence_of_vlist yss)\n 2. \\<And>xs x.\n       \\<lbrakk>vfsequence xs;\n        Ball (elts (\\<R>\\<^sub>\\<circ> xs)) vfsequence \\<Longrightarrow>\n        \\<exists>yss.\n           xs = vfsequence_of_vlist (map vfsequence_of_vlist yss);\n        Ball (elts (\\<R>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x)))\n         vfsequence\\<rbrakk>\n       \\<Longrightarrow> \\<exists>yss.\n                            xs #\\<^sub>\\<circ> x =\n                            vfsequence_of_vlist\n                             (map vfsequence_of_vlist yss)", "then"], ["proof (chain)\npicking this:\n  vfsequence x", "have x_def: \"x = vfsequence_of_vlist (vlist_of_vfsequence x)\""], ["proof (prove)\nusing this:\n  vfsequence x\n\ngoal (1 subgoal):\n 1. x = vfsequence_of_vlist (vlist_of_vfsequence x)", "by simp"], ["proof (state)\nthis:\n  x = vfsequence_of_vlist (vlist_of_vfsequence x)\n\ngoal (2 subgoals):\n 1. Ball (elts (\\<R>\\<^sub>\\<circ> []\\<^sub>\\<circ>))\n     vfsequence \\<Longrightarrow>\n    \\<exists>yss.\n       []\\<^sub>\\<circ> = vfsequence_of_vlist (map vfsequence_of_vlist yss)\n 2. \\<And>xs x.\n       \\<lbrakk>vfsequence xs;\n        Ball (elts (\\<R>\\<^sub>\\<circ> xs)) vfsequence \\<Longrightarrow>\n        \\<exists>yss.\n           xs = vfsequence_of_vlist (map vfsequence_of_vlist yss);\n        Ball (elts (\\<R>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x)))\n         vfsequence\\<rbrakk>\n       \\<Longrightarrow> \\<exists>yss.\n                            xs #\\<^sub>\\<circ> x =\n                            vfsequence_of_vlist\n                             (map vfsequence_of_vlist yss)", "then"], ["proof (chain)\npicking this:\n  x = vfsequence_of_vlist (vlist_of_vfsequence x)", "have \n      \"xss #\\<^sub>\\<circ> x = vfsequence_of_vlist (map vfsequence_of_vlist (?y # yss))\""], ["proof (prove)\nusing this:\n  x = vfsequence_of_vlist (vlist_of_vfsequence x)\n\ngoal (1 subgoal):\n 1. xss #\\<^sub>\\<circ> x =\n    vfsequence_of_vlist\n     (map vfsequence_of_vlist (vlist_of_vfsequence x # yss))", "unfolding xss_def"], ["proof (prove)\nusing this:\n  x = vfsequence_of_vlist (vlist_of_vfsequence x)\n\ngoal (1 subgoal):\n 1. vfsequence_of_vlist (map vfsequence_of_vlist yss) #\\<^sub>\\<circ> x =\n    vfsequence_of_vlist\n     (map vfsequence_of_vlist (vlist_of_vfsequence x # yss))", "by simp"], ["proof (state)\nthis:\n  xss #\\<^sub>\\<circ> x =\n  vfsequence_of_vlist\n   (map vfsequence_of_vlist (vlist_of_vfsequence x # yss))\n\ngoal (2 subgoals):\n 1. Ball (elts (\\<R>\\<^sub>\\<circ> []\\<^sub>\\<circ>))\n     vfsequence \\<Longrightarrow>\n    \\<exists>yss.\n       []\\<^sub>\\<circ> = vfsequence_of_vlist (map vfsequence_of_vlist yss)\n 2. \\<And>xs x.\n       \\<lbrakk>vfsequence xs;\n        Ball (elts (\\<R>\\<^sub>\\<circ> xs)) vfsequence \\<Longrightarrow>\n        \\<exists>yss.\n           xs = vfsequence_of_vlist (map vfsequence_of_vlist yss);\n        Ball (elts (\\<R>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x)))\n         vfsequence\\<rbrakk>\n       \\<Longrightarrow> \\<exists>yss.\n                            xs #\\<^sub>\\<circ> x =\n                            vfsequence_of_vlist\n                             (map vfsequence_of_vlist yss)", "then"], ["proof (chain)\npicking this:\n  xss #\\<^sub>\\<circ> x =\n  vfsequence_of_vlist\n   (map vfsequence_of_vlist (vlist_of_vfsequence x # yss))", "show ?case"], ["proof (prove)\nusing this:\n  xss #\\<^sub>\\<circ> x =\n  vfsequence_of_vlist\n   (map vfsequence_of_vlist (vlist_of_vfsequence x # yss))\n\ngoal (1 subgoal):\n 1. \\<exists>yss.\n       xss #\\<^sub>\\<circ> x =\n       vfsequence_of_vlist (map vfsequence_of_vlist yss)", "by blast"], ["proof (state)\nthis:\n  \\<exists>yss.\n     xss #\\<^sub>\\<circ> x =\n     vfsequence_of_vlist (map vfsequence_of_vlist yss)\n\ngoal (1 subgoal):\n 1. Ball (elts (\\<R>\\<^sub>\\<circ> []\\<^sub>\\<circ>))\n     vfsequence \\<Longrightarrow>\n    \\<exists>yss.\n       []\\<^sub>\\<circ> = vfsequence_of_vlist (map vfsequence_of_vlist yss)", "qed (auto intro: exI[of _ \\<open>[]\\<close>])"], ["proof (state)\nthis:\n  \\<exists>yss. xss = vfsequence_of_vlist (map vfsequence_of_vlist yss)\n\ngoal (1 subgoal):\n 1. \\<And>xss.\n       \\<lbrakk>vfsequence xss;\n        \\<forall>xs\\<in>elts (\\<R>\\<^sub>\\<circ> xss).\n           vfsequence xs\\<rbrakk>\n       \\<Longrightarrow> Domainp cr_cr_vfsequence xss", "then"], ["proof (chain)\npicking this:\n  \\<exists>yss. xss = vfsequence_of_vlist (map vfsequence_of_vlist yss)", "show \"Domainp cr_cr_vfsequence xss\""], ["proof (prove)\nusing this:\n  \\<exists>yss. xss = vfsequence_of_vlist (map vfsequence_of_vlist yss)\n\ngoal (1 subgoal):\n 1. Domainp cr_cr_vfsequence xss", "unfolding cr_cr_vfsequence_def"], ["proof (prove)\nusing this:\n  \\<exists>yss. xss = vfsequence_of_vlist (map vfsequence_of_vlist yss)\n\ngoal (1 subgoal):\n 1. Domainp\n     (\\<lambda>a b. a = vfsequence_of_vlist (map vfsequence_of_vlist b)) xss", "by blast"], ["proof (state)\nthis:\n  Domainp cr_cr_vfsequence xss\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Appending elements\\<close>"], ["", "definition vappend :: \"V \\<Rightarrow> V \\<Rightarrow> V\" (infixr \"@\\<^sub>\\<circ>\" 65)\n  where \"xs @\\<^sub>\\<circ> ys =\n    vfsequence_of_vlist (vlist_of_vfsequence ys @ vlist_of_vfsequence xs)\""], ["", "text\\<open>Transfer.\\<close>"], ["", "lemma vappend_transfer[transfer_rule]: \n  includes lifting_syntax\n  shows \"(cr_vfsequence ===> cr_vfsequence ===> cr_vfsequence) \n    (\\<lambda>xs ys. vappend ys xs) append\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cr_vfsequence ===> cr_vfsequence ===> cr_vfsequence)\n     (\\<lambda>xs ys. ys @\\<^sub>\\<circ> xs) (@)", "by (intro rel_funI, unfold cr_vfsequence_def) (simp add: vappend_def)"], ["", "lemma vappend_ll_transfer[transfer_rule]: \n  includes lifting_syntax\n  shows \"(cr_cr_vfsequence ===> cr_cr_vfsequence ===> cr_cr_vfsequence) \n    (\\<lambda>xs ys. vappend ys xs) append\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cr_cr_vfsequence ===> cr_cr_vfsequence ===> cr_cr_vfsequence)\n     (\\<lambda>xs ys. ys @\\<^sub>\\<circ> xs) (@)", "by (intro rel_funI, unfold cr_cr_vfsequence_def) (simp add: vappend_def)"], ["", "text\\<open>Elementary properties.\\<close>"], ["", "lemma (in vfsequence) vfsequence_vappend_vempty_vfsequence[simp]: \n  \"[]\\<^sub>\\<circ> @\\<^sub>\\<circ> xs = xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. []\\<^sub>\\<circ> @\\<^sub>\\<circ> xs = xs", "unfolding vappend_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence_of_vlist\n     (vlist_of_vfsequence xs @ vlist_of_vfsequence []\\<^sub>\\<circ>) =\n    xs", "by auto"], ["", "lemmas vfsequence_vappend_vempty_vfsequence[simp] =\n  vfsequence.vfsequence_vappend_vempty_vfsequence"], ["", "lemma (in vfsequence) vfsequence_vappend_vfsequence_vempty[simp]:\n  \"xs @\\<^sub>\\<circ> []\\<^sub>\\<circ> = xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs @\\<^sub>\\<circ> []\\<^sub>\\<circ> = xs", "unfolding vappend_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence_of_vlist\n     (vlist_of_vfsequence []\\<^sub>\\<circ> @ vlist_of_vfsequence xs) =\n    xs", "by auto"], ["", "lemmas vfsequence_vappend_vfsequence_vempty[simp] =\n  vfsequence.vfsequence_vappend_vfsequence_vempty"], ["", "lemma vappend_vcons[simp]: \n  assumes \"vfsequence xs\" and \"vfsequence ys\"\n  shows \"xs @\\<^sub>\\<circ> (ys #\\<^sub>\\<circ> y) = (xs @\\<^sub>\\<circ> ys) #\\<^sub>\\<circ> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs @\\<^sub>\\<circ> ys #\\<^sub>\\<circ> y =\n    (xs @\\<^sub>\\<circ> ys) #\\<^sub>\\<circ> y", "using append_Cons[where 'a=V, untransferred, OF assms(2,1)]"], ["proof (prove)\nusing this:\n  xs @\\<^sub>\\<circ> ys #\\<^sub>\\<circ> ?x =\n  (xs @\\<^sub>\\<circ> ys) #\\<^sub>\\<circ> ?x\n\ngoal (1 subgoal):\n 1. xs @\\<^sub>\\<circ> ys #\\<^sub>\\<circ> y =\n    (xs @\\<^sub>\\<circ> ys) #\\<^sub>\\<circ> y", "by simp"], ["", "subsubsection\\<open>Distinct elements\\<close>"], ["", "definition vdistinct :: \"V \\<Rightarrow> bool\"\n  where \"vdistinct xs = distinct (vlist_of_vfsequence xs)\""], ["", "text\\<open>Transfer.\\<close>"], ["", "lemma vdistinct_transfer[transfer_rule]: \n  includes lifting_syntax\n  shows \"(cr_vfsequence ===> (=)) vdistinct distinct\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cr_vfsequence ===> (=)) vdistinct distinct", "by (intro rel_funI, unfold cr_vfsequence_def) (simp add: vdistinct_def)"], ["", "lemma vdistinct_ll_transfer[transfer_rule]: \n  includes lifting_syntax\n  shows \"(cr_cr_vfsequence ===> (=)) vdistinct distinct\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cr_cr_vfsequence ===> (=)) vdistinct distinct", "by (intro rel_funI, unfold cr_cr_vfsequence_def)\n    (\n      metis \n        vdistinct_def \n        distinct_map \n        inj_onI \n        vlist_of_vfsequence_vfsequence_of_vlist\n    )"], ["", "text\\<open>Elementary properties.\\<close>"], ["", "lemma (in vfsequence) vfsequence_vdistinct_if_vcard_vrange_eq_vcard:\n  assumes \"vcard (\\<R>\\<^sub>\\<circ> xs) = vcard xs\"\n  shows \"vdistinct xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vdistinct xs", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. vdistinct xs", "have \"finite (elts (\\<R>\\<^sub>\\<circ> xs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfinite (\\<R>\\<^sub>\\<circ> xs)", "by (simp add: assms vcard_vfinite_omega)"], ["proof (state)\nthis:\n  vfinite (\\<R>\\<^sub>\\<circ> xs)\n\ngoal (1 subgoal):\n 1. vdistinct xs", "from vcard_finite_set[OF this] assms"], ["proof (chain)\npicking this:\n  vcard (set (elts (\\<R>\\<^sub>\\<circ> xs))) =\n  card (elts (\\<R>\\<^sub>\\<circ> xs))\\<^sub>\\<nat>\n  vcard (\\<R>\\<^sub>\\<circ> xs) = vcard xs", "have \"card (elts (\\<R>\\<^sub>\\<circ> xs))\\<^sub>\\<nat> = vcard xs\""], ["proof (prove)\nusing this:\n  vcard (set (elts (\\<R>\\<^sub>\\<circ> xs))) =\n  card (elts (\\<R>\\<^sub>\\<circ> xs))\\<^sub>\\<nat>\n  vcard (\\<R>\\<^sub>\\<circ> xs) = vcard xs\n\ngoal (1 subgoal):\n 1. card (elts (\\<R>\\<^sub>\\<circ> xs))\\<^sub>\\<nat> = vcard xs", "by simp"], ["proof (state)\nthis:\n  card (elts (\\<R>\\<^sub>\\<circ> xs))\\<^sub>\\<nat> = vcard xs\n\ngoal (1 subgoal):\n 1. vdistinct xs", "from card_distinct[where ?'a=V, untransferred, OF vfsequence_axioms this]"], ["proof (chain)\npicking this:\n  vdistinct xs", "show ?thesis"], ["proof (prove)\nusing this:\n  vdistinct xs\n\ngoal (1 subgoal):\n 1. vdistinct xs", "."], ["proof (state)\nthis:\n  vdistinct xs\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vdistinct_vempty[intro, simp]: \"vdistinct []\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vdistinct []\\<^sub>\\<circ>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. vdistinct []\\<^sub>\\<circ>", "have t: \"distinct ([]::V list)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct []", "by simp"], ["proof (state)\nthis:\n  distinct []\n\ngoal (1 subgoal):\n 1. vdistinct []\\<^sub>\\<circ>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. vdistinct []\\<^sub>\\<circ>", "by (rule t[untransferred])"], ["proof (state)\nthis:\n  vdistinct []\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in vfsequence) vfsequence_vcons_vdistinct:\n  assumes \"vdistinct (xs #\\<^sub>\\<circ> x)\" \n  shows \"vdistinct xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vdistinct xs", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. vdistinct xs", "from distinct.simps(2)[where 'a=V, THEN iffD1, THEN conjunct2, untransferred]"], ["proof (chain)\npicking this:\n  \\<lbrakk>vfsequence ?xs; vdistinct (?xs #\\<^sub>\\<circ> ?x)\\<rbrakk>\n  \\<Longrightarrow> vdistinct ?xs", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>vfsequence ?xs; vdistinct (?xs #\\<^sub>\\<circ> ?x)\\<rbrakk>\n  \\<Longrightarrow> vdistinct ?xs\n\ngoal (1 subgoal):\n 1. vdistinct xs", "using vfsequence_axioms assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>vfsequence ?xs; vdistinct (?xs #\\<^sub>\\<circ> ?x)\\<rbrakk>\n  \\<Longrightarrow> vdistinct ?xs\n  vfsequence xs\n  vdistinct (xs #\\<^sub>\\<circ> x)\n\ngoal (1 subgoal):\n 1. vdistinct xs", "by simp"], ["proof (state)\nthis:\n  vdistinct xs\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in vfsequence) vfsequence_vcons_nin_vrange:\n  assumes \"vdistinct (xs #\\<^sub>\\<circ> x)\" \n  shows \"x \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> xs", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> xs", "from distinct.simps(2)[where 'a=V, THEN iffD1, THEN conjunct1, untransferred]"], ["proof (chain)\npicking this:\n  \\<lbrakk>vfsequence ?xs; vdistinct (?xs #\\<^sub>\\<circ> ?x)\\<rbrakk>\n  \\<Longrightarrow> ?x \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> ?xs", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>vfsequence ?xs; vdistinct (?xs #\\<^sub>\\<circ> ?x)\\<rbrakk>\n  \\<Longrightarrow> ?x \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> ?xs\n\ngoal (1 subgoal):\n 1. x \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> xs", "using vfsequence_axioms assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>vfsequence ?xs; vdistinct (?xs #\\<^sub>\\<circ> ?x)\\<rbrakk>\n  \\<Longrightarrow> ?x \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> ?xs\n  vfsequence xs\n  vdistinct (xs #\\<^sub>\\<circ> x)\n\ngoal (1 subgoal):\n 1. x \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> xs", "by simp"], ["proof (state)\nthis:\n  x \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> xs\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in vfsequence) vfsequence_v11I[intro]:\n  assumes \"vdistinct xs\"\n  shows \"v11 xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v11 xs", "using vfsequence_axioms assms"], ["proof (prove)\nusing this:\n  vfsequence xs\n  vdistinct xs\n\ngoal (1 subgoal):\n 1. v11 xs", "proof(induction xs rule: vfsequence_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. vdistinct []\\<^sub>\\<circ> \\<Longrightarrow> v11 []\\<^sub>\\<circ>\n 2. \\<And>xs x.\n       \\<lbrakk>vfsequence xs; vdistinct xs \\<Longrightarrow> v11 xs;\n        vdistinct (xs #\\<^sub>\\<circ> x)\\<rbrakk>\n       \\<Longrightarrow> v11 (xs #\\<^sub>\\<circ> x)", "case (vcons xs x)"], ["proof (state)\nthis:\n  vfsequence xs\n  vdistinct xs \\<Longrightarrow> v11 xs\n  vdistinct (xs #\\<^sub>\\<circ> x)\n\ngoal (2 subgoals):\n 1. vdistinct []\\<^sub>\\<circ> \\<Longrightarrow> v11 []\\<^sub>\\<circ>\n 2. \\<And>xs x.\n       \\<lbrakk>vfsequence xs; vdistinct xs \\<Longrightarrow> v11 xs;\n        vdistinct (xs #\\<^sub>\\<circ> x)\\<rbrakk>\n       \\<Longrightarrow> v11 (xs #\\<^sub>\\<circ> x)", "interpret vfsequence xs"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence xs", "by (rule vcons(1))"], ["proof (state)\ngoal (2 subgoals):\n 1. vdistinct []\\<^sub>\\<circ> \\<Longrightarrow> v11 []\\<^sub>\\<circ>\n 2. \\<And>xs x.\n       \\<lbrakk>vfsequence xs; vdistinct xs \\<Longrightarrow> v11 xs;\n        vdistinct (xs #\\<^sub>\\<circ> x)\\<rbrakk>\n       \\<Longrightarrow> v11 (xs #\\<^sub>\\<circ> x)", "from vcons(3)"], ["proof (chain)\npicking this:\n  vdistinct (xs #\\<^sub>\\<circ> x)", "have dxs: \"vdistinct xs\""], ["proof (prove)\nusing this:\n  vdistinct (xs #\\<^sub>\\<circ> x)\n\ngoal (1 subgoal):\n 1. vdistinct xs", "by (rule vfsequence_vcons_vdistinct)"], ["proof (state)\nthis:\n  vdistinct xs\n\ngoal (2 subgoals):\n 1. vdistinct []\\<^sub>\\<circ> \\<Longrightarrow> v11 []\\<^sub>\\<circ>\n 2. \\<And>xs x.\n       \\<lbrakk>vfsequence xs; vdistinct xs \\<Longrightarrow> v11 xs;\n        vdistinct (xs #\\<^sub>\\<circ> x)\\<rbrakk>\n       \\<Longrightarrow> v11 (xs #\\<^sub>\\<circ> x)", "interpret v11 xs"], ["proof (prove)\ngoal (1 subgoal):\n 1. v11 xs", "using dxs"], ["proof (prove)\nusing this:\n  vdistinct xs\n\ngoal (1 subgoal):\n 1. v11 xs", "by (rule vcons(2))"], ["proof (state)\ngoal (2 subgoals):\n 1. vdistinct []\\<^sub>\\<circ> \\<Longrightarrow> v11 []\\<^sub>\\<circ>\n 2. \\<And>xs x.\n       \\<lbrakk>vfsequence xs; vdistinct xs \\<Longrightarrow> v11 xs;\n        vdistinct (xs #\\<^sub>\\<circ> x)\\<rbrakk>\n       \\<Longrightarrow> v11 (xs #\\<^sub>\\<circ> x)", "from vfsequence_vcons_nin_vrange[OF vcons(3)]"], ["proof (chain)\npicking this:\n  x \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> xs", "have \"x \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> xs\""], ["proof (prove)\nusing this:\n  x \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> xs\n\ngoal (1 subgoal):\n 1. x \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> xs", "."], ["proof (state)\nthis:\n  x \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> xs\n\ngoal (2 subgoals):\n 1. vdistinct []\\<^sub>\\<circ> \\<Longrightarrow> v11 []\\<^sub>\\<circ>\n 2. \\<And>xs x.\n       \\<lbrakk>vfsequence xs; vdistinct xs \\<Longrightarrow> v11 xs;\n        vdistinct (xs #\\<^sub>\\<circ> x)\\<rbrakk>\n       \\<Longrightarrow> v11 (xs #\\<^sub>\\<circ> x)", "show \"v11 (xs #\\<^sub>\\<circ> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v11 (xs #\\<^sub>\\<circ> x)", "by  \n      ( \n        simp_all add: \n          vcons_def vfsequence_vdomain vfsequence_vcons_nin_vrange[OF vcons(3)]\n      )"], ["proof (state)\nthis:\n  v11 (xs #\\<^sub>\\<circ> x)\n\ngoal (1 subgoal):\n 1. vdistinct []\\<^sub>\\<circ> \\<Longrightarrow> v11 []\\<^sub>\\<circ>", "qed simp"], ["", "lemma (in vfsequence) vfsequence_vcons_vdistinctI:\n  assumes \"vdistinct xs\" and \"x \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> xs\"\n  shows \"vdistinct (xs #\\<^sub>\\<circ> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vdistinct (xs #\\<^sub>\\<circ> x)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. vdistinct (xs #\\<^sub>\\<circ> x)", "have t: \"distinct xs \\<Longrightarrow> x \\<notin> list.set xs \\<Longrightarrow> distinct (x # xs)\" \n    for x ::V and xs"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>distinct xs; x \\<notin> list.set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # xs)", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>distinct ?xs; ?x \\<notin> list.set ?xs\\<rbrakk>\n  \\<Longrightarrow> distinct (?x # ?xs)\n\ngoal (1 subgoal):\n 1. vdistinct (xs #\\<^sub>\\<circ> x)", "from vfsequence_axioms assms"], ["proof (chain)\npicking this:\n  vfsequence xs\n  vdistinct xs\n  x \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> xs", "show ?thesis"], ["proof (prove)\nusing this:\n  vfsequence xs\n  vdistinct xs\n  x \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> xs\n\ngoal (1 subgoal):\n 1. vdistinct (xs #\\<^sub>\\<circ> x)", "by (rule t[untransferred])"], ["proof (state)\nthis:\n  vdistinct (xs #\\<^sub>\\<circ> x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas vfsequence_vcons_vdistinctI[intro] =\n  vfsequence.vfsequence_vcons_vdistinctI"], ["", "lemma (in vfsequence) vfsequence_nin_vrange_vcons:\n  assumes \"y \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> xs\" and \"y \\<noteq> x\"\n  shows \"y \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x)", "have t: \"y \\<notin> list.set xs \\<Longrightarrow> y \\<noteq> x \\<Longrightarrow> y \\<notin> list.set (x # xs)\" \n    for x y :: V and xs"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<notin> list.set xs; y \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> y \\<notin> list.set (x # xs)", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>?y \\<notin> list.set ?xs; ?y \\<noteq> ?x\\<rbrakk>\n  \\<Longrightarrow> ?y \\<notin> list.set (?x # ?xs)\n\ngoal (1 subgoal):\n 1. y \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x)", "from vfsequence_axioms assms"], ["proof (chain)\npicking this:\n  vfsequence xs\n  y \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> xs\n  y \\<noteq> x", "show ?thesis"], ["proof (prove)\nusing this:\n  vfsequence xs\n  y \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> xs\n  y \\<noteq> x\n\ngoal (1 subgoal):\n 1. y \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x)", "by (rule t[untransferred])"], ["proof (state)\nthis:\n  y \\<notin>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas vfsequence_nin_vrange_vcons[intro] = \n  vfsequence.vfsequence_nin_vrange_vcons"], ["", "subsubsection\\<open>Concatenation of sequences\\<close>"], ["", "definition vconcat :: \"V \\<Rightarrow> V\"\n  where \"vconcat xss =\n    vfsequence_of_vlist(\n      concat (map vlist_of_vfsequence (vlist_of_vfsequence xss))\n    )\""], ["", "text\\<open>Transfer.\\<close>"], ["", "lemma vconcat_transfer[transfer_rule]: \n  includes lifting_syntax\n  shows \"(cr_cr_vfsequence ===> cr_vfsequence) vconcat concat\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cr_cr_vfsequence ===> cr_vfsequence) vconcat concat", "proof(intro rel_funI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       cr_cr_vfsequence x y \\<Longrightarrow>\n       cr_vfsequence (vconcat x) (concat y)", "fix xs ys"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       cr_cr_vfsequence x y \\<Longrightarrow>\n       cr_vfsequence (vconcat x) (concat y)", "assume \"cr_cr_vfsequence xs ys\""], ["proof (state)\nthis:\n  cr_cr_vfsequence xs ys\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       cr_cr_vfsequence x y \\<Longrightarrow>\n       cr_vfsequence (vconcat x) (concat y)", "then"], ["proof (chain)\npicking this:\n  cr_cr_vfsequence xs ys", "have xs_def: \"xs = vfsequence_of_vlist (map vfsequence_of_vlist ys)\""], ["proof (prove)\nusing this:\n  cr_cr_vfsequence xs ys\n\ngoal (1 subgoal):\n 1. xs = vfsequence_of_vlist (map vfsequence_of_vlist ys)", "unfolding cr_cr_vfsequence_def"], ["proof (prove)\nusing this:\n  xs = vfsequence_of_vlist (map vfsequence_of_vlist ys)\n\ngoal (1 subgoal):\n 1. xs = vfsequence_of_vlist (map vfsequence_of_vlist ys)", "by simp"], ["proof (state)\nthis:\n  xs = vfsequence_of_vlist (map vfsequence_of_vlist ys)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       cr_cr_vfsequence x y \\<Longrightarrow>\n       cr_vfsequence (vconcat x) (concat y)", "have main_eq: \"map vlist_of_vfsequence (vlist_of_vfsequence xs) = ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map vlist_of_vfsequence (vlist_of_vfsequence xs) = ys", "unfolding xs_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. map vlist_of_vfsequence\n     (vlist_of_vfsequence\n       (vfsequence_of_vlist (map vfsequence_of_vlist ys))) =\n    ys", "by (simp add: map_idI)"], ["proof (state)\nthis:\n  map vlist_of_vfsequence (vlist_of_vfsequence xs) = ys\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       cr_cr_vfsequence x y \\<Longrightarrow>\n       cr_vfsequence (vconcat x) (concat y)", "show \"cr_vfsequence (vconcat xs) (concat ys)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cr_vfsequence (vconcat xs) (concat ys)", "unfolding cr_vfsequence_def vconcat_def main_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence_of_vlist (concat ys) = vfsequence_of_vlist (concat ys)", ".."], ["proof (state)\nthis:\n  cr_vfsequence (vconcat xs) (concat ys)\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Elementary properties.\\<close>"], ["", "lemma vconcat_vempty[simp]: \"vconcat []\\<^sub>\\<circ> = []\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vconcat []\\<^sub>\\<circ> = []\\<^sub>\\<circ>", "unfolding vconcat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence_of_vlist\n     (concat\n       (map vlist_of_vfsequence (vlist_of_vfsequence []\\<^sub>\\<circ>))) =\n    []\\<^sub>\\<circ>", "by simp"], ["", "lemma vconcat_append[simp]: \n  assumes \"vfsequence xss\" \n    and \"\\<forall>xs\\<in>\\<^sub>\\<circ>\\<R>\\<^sub>\\<circ> xss. vfsequence xs\" \n    and \"vfsequence yss\"\n    and \"\\<forall>xs\\<in>\\<^sub>\\<circ>\\<R>\\<^sub>\\<circ> yss. vfsequence xs\" \n  shows \"vconcat (xss @\\<^sub>\\<circ> yss) = vconcat xss @\\<^sub>\\<circ> vconcat yss\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vconcat (xss @\\<^sub>\\<circ> yss) =\n    vconcat xss @\\<^sub>\\<circ> vconcat yss", "using assms concat_append[where 'a=V, untransferred]"], ["proof (prove)\nusing this:\n  vfsequence xss\n  \\<forall>xs\\<in>elts (\\<R>\\<^sub>\\<circ> xss). vfsequence xs\n  vfsequence yss\n  \\<forall>xs\\<in>elts (\\<R>\\<^sub>\\<circ> yss). vfsequence xs\n  \\<lbrakk>vfsequence ?xs \\<and>\n           Ball (elts (\\<R>\\<^sub>\\<circ> ?xs)) vfsequence;\n   vfsequence ?ys \\<and>\n   Ball (elts (\\<R>\\<^sub>\\<circ> ?ys)) vfsequence\\<rbrakk>\n  \\<Longrightarrow> vconcat (?ys @\\<^sub>\\<circ> ?xs) =\n                    vconcat ?ys @\\<^sub>\\<circ> vconcat ?xs\n\ngoal (1 subgoal):\n 1. vconcat (xss @\\<^sub>\\<circ> yss) =\n    vconcat xss @\\<^sub>\\<circ> vconcat yss", "by simp"], ["", "lemma vconcat_vcons[simp]: \n  assumes \"vfsequence xs\" and \"vfsequence xss\" and \"\\<forall>xs\\<in>\\<^sub>\\<circ>\\<R>\\<^sub>\\<circ> xss. vfsequence xs\"\n  shows \"vconcat (xss #\\<^sub>\\<circ> xs) = vconcat xss @\\<^sub>\\<circ> xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vconcat (xss #\\<^sub>\\<circ> xs) = vconcat xss @\\<^sub>\\<circ> xs", "using assms concat.simps(2)[where 'a=V, untransferred]"], ["proof (prove)\nusing this:\n  vfsequence xs\n  vfsequence xss\n  \\<forall>xs\\<in>elts (\\<R>\\<^sub>\\<circ> xss). vfsequence xs\n  \\<lbrakk>vfsequence ?x;\n   vfsequence ?xs \\<and>\n   Ball (elts (\\<R>\\<^sub>\\<circ> ?xs)) vfsequence\\<rbrakk>\n  \\<Longrightarrow> vconcat (?xs #\\<^sub>\\<circ> ?x) =\n                    vconcat ?xs @\\<^sub>\\<circ> ?x\n\ngoal (1 subgoal):\n 1. vconcat (xss #\\<^sub>\\<circ> xs) = vconcat xss @\\<^sub>\\<circ> xs", "by simp"], ["", "lemma (in vfsequence) vfsequence_vconcat_fsingleton[simp]: \"vconcat [xs]\\<^sub>\\<circ> = xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vconcat [xs]\\<^sub>\\<circ> = xs", "using vfsequence_axioms"], ["proof (prove)\nusing this:\n  vfsequence xs\n\ngoal (1 subgoal):\n 1. vconcat [xs]\\<^sub>\\<circ> = xs", "by \n    (\n      metis \n        vfsequence_vappend_vempty_vfsequence \n        vconcat_vcons \n        vconcat_vempty \n        vempty_nin \n        vfsequence_vempty \n        vrange_vempty\n    )"], ["", "lemmas vfsequence_vconcat_fsingleton[simp] = \n  vfsequence.vfsequence_vconcat_fsingleton"], ["", "subsection\\<open>Finite sequences and the Cartesian product\\<close>"], ["", "lemma vfsequence_vcons_vproductI[intro!]:\n  assumes \"n \\<in>\\<^sub>\\<circ> \\<omega>\" \n    and \"xs \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>vcard xs. A i)\" \n    and \"x \\<in>\\<^sub>\\<circ> A (vcard xs)\" \n    and \"n = vcard (xs #\\<^sub>\\<circ> x)\"\n  shows \"xs #\\<^sub>\\<circ> x \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>n. A i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs #\\<^sub>\\<circ> x \\<in>\\<^sub>\\<circ> vproduct n A", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. vsv (xs #\\<^sub>\\<circ> x)\n 2. \\<D>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x) = n\n 3. \\<forall>i\\<in>elts n.\n       (xs #\\<^sub>\\<circ> x)\\<lparr>i\\<rparr> \\<in>\\<^sub>\\<circ> A i", "interpret xs: vfsequence xs"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence xs", "using assms"], ["proof (prove)\nusing this:\n  n \\<in>\\<^sub>\\<circ> \\<omega>\n  xs \\<in>\\<^sub>\\<circ> vproduct (vcard xs) A\n  x \\<in>\\<^sub>\\<circ> A (vcard xs)\n  n = vcard (xs #\\<^sub>\\<circ> x)\n\ngoal (1 subgoal):\n 1. vfsequence xs", "apply(intro vfsequenceI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>n \\<in>\\<^sub>\\<circ> \\<omega>;\n     xs \\<in>\\<^sub>\\<circ> vproduct (vcard xs) A;\n     x \\<in>\\<^sub>\\<circ> A (vcard xs);\n     n = vcard (xs #\\<^sub>\\<circ> x)\\<rbrakk>\n    \\<Longrightarrow> vsv xs\n 2. \\<lbrakk>n \\<in>\\<^sub>\\<circ> \\<omega>;\n     xs \\<in>\\<^sub>\\<circ> vproduct (vcard xs) A;\n     x \\<in>\\<^sub>\\<circ> A (vcard xs);\n     n = vcard (xs #\\<^sub>\\<circ> x)\\<rbrakk>\n    \\<Longrightarrow> \\<D>\\<^sub>\\<circ> xs \\<in>\\<^sub>\\<circ> \\<omega>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n \\<in>\\<^sub>\\<circ> \\<omega>;\n     xs \\<in>\\<^sub>\\<circ> vproduct (vcard xs) A;\n     x \\<in>\\<^sub>\\<circ> A (vcard xs);\n     n = vcard (xs #\\<^sub>\\<circ> x)\\<rbrakk>\n    \\<Longrightarrow> vsv xs", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n \\<in>\\<^sub>\\<circ> \\<omega>;\n     xs \\<in>\\<^sub>\\<circ> vproduct (vcard xs) A;\n     x \\<in>\\<^sub>\\<circ> A (vcard xs);\n     n = vcard (xs #\\<^sub>\\<circ> x)\\<rbrakk>\n    \\<Longrightarrow> \\<D>\\<^sub>\\<circ> xs \\<in>\\<^sub>\\<circ> \\<omega>", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n \\<in>\\<^sub>\\<circ> \\<omega>;\n     xs \\<in>\\<^sub>\\<circ> vproduct (vcard xs) A;\n     x \\<in>\\<^sub>\\<circ> A (vcard xs);\n     n = vcard (xs #\\<^sub>\\<circ> x)\\<rbrakk>\n    \\<Longrightarrow> \\<D>\\<^sub>\\<circ> xs \\<in>\\<^sub>\\<circ> \\<omega>", "by \n        (\n          metis \n            vcard_vfinite_omega \n            vcons_vsubset \n            vfinite_vcard_omega \n            vfinite_vsubset vproductD(2)\n        )"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\ngoal (3 subgoals):\n 1. vsv (xs #\\<^sub>\\<circ> x)\n 2. \\<D>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x) = n\n 3. \\<forall>i\\<in>elts n.\n       (xs #\\<^sub>\\<circ> x)\\<lparr>i\\<rparr> \\<in>\\<^sub>\\<circ> A i", "interpret xsx: vfsequence \\<open>xs #\\<^sub>\\<circ> x\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (xs #\\<^sub>\\<circ> x)", "by auto"], ["proof (state)\ngoal (3 subgoals):\n 1. vsv (xs #\\<^sub>\\<circ> x)\n 2. \\<D>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x) = n\n 3. \\<forall>i\\<in>elts n.\n       (xs #\\<^sub>\\<circ> x)\\<lparr>i\\<rparr> \\<in>\\<^sub>\\<circ> A i", "show \"vsv (xs #\\<^sub>\\<circ> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (xs #\\<^sub>\\<circ> x)", "by (simp add: xsx.vsv_axioms)"], ["proof (state)\nthis:\n  vsv (xs #\\<^sub>\\<circ> x)\n\ngoal (2 subgoals):\n 1. \\<D>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x) = n\n 2. \\<forall>i\\<in>elts n.\n       (xs #\\<^sub>\\<circ> x)\\<lparr>i\\<rparr> \\<in>\\<^sub>\\<circ> A i", "show D: \"\\<D>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x) = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x) = n", "unfolding assms(4) xsx.vfsequence_vdomain"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (xs #\\<^sub>\\<circ> x) = vcard (xs #\\<^sub>\\<circ> x)", "by auto"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x) = n\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>elts n.\n       (xs #\\<^sub>\\<circ> x)\\<lparr>i\\<rparr> \\<in>\\<^sub>\\<circ> A i", "from vproductD[OF assms(2)]"], ["proof (chain)\npicking this:\n  vsv xs\n  \\<D>\\<^sub>\\<circ> xs = vcard xs\n  \\<forall>i\\<in>elts (vcard xs).\n     xs\\<lparr>i\\<rparr> \\<in>\\<^sub>\\<circ> A i", "have elem: \"i \\<in>\\<^sub>\\<circ> vcard xs \\<Longrightarrow> xs\\<lparr>i\\<rparr> \\<in>\\<^sub>\\<circ> A i\" for i"], ["proof (prove)\nusing this:\n  vsv xs\n  \\<D>\\<^sub>\\<circ> xs = vcard xs\n  \\<forall>i\\<in>elts (vcard xs).\n     xs\\<lparr>i\\<rparr> \\<in>\\<^sub>\\<circ> A i\n\ngoal (1 subgoal):\n 1. i \\<in>\\<^sub>\\<circ> vcard xs \\<Longrightarrow>\n    xs\\<lparr>i\\<rparr> \\<in>\\<^sub>\\<circ> A i", "by auto"], ["proof (state)\nthis:\n  ?i \\<in>\\<^sub>\\<circ> vcard xs \\<Longrightarrow>\n  xs\\<lparr>?i\\<rparr> \\<in>\\<^sub>\\<circ> A ?i\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>elts n.\n       (xs #\\<^sub>\\<circ> x)\\<lparr>i\\<rparr> \\<in>\\<^sub>\\<circ> A i", "show \"\\<forall>i\\<in>\\<^sub>\\<circ>n. (xs #\\<^sub>\\<circ> x)\\<lparr>i\\<rparr> \\<in>\\<^sub>\\<circ> A i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>elts n.\n       (xs #\\<^sub>\\<circ> x)\\<lparr>i\\<rparr> \\<in>\\<^sub>\\<circ> A i", "by (auto simp: elem assms(3,4))"], ["proof (state)\nthis:\n  \\<forall>i\\<in>elts n.\n     (xs #\\<^sub>\\<circ> x)\\<lparr>i\\<rparr> \\<in>\\<^sub>\\<circ> A i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vfsequence_vcons_vproductD[dest]:\n  assumes \"xs #\\<^sub>\\<circ> x \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>n. A i)\" and \"n \\<in>\\<^sub>\\<circ> \\<omega>\"\n  shows \"xs \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>vcard xs. A i)\" \n    and \"x \\<in>\\<^sub>\\<circ> A (vcard xs)\" \n    and \"n = vcard (xs #\\<^sub>\\<circ> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs \\<in>\\<^sub>\\<circ> vproduct (vcard xs) A &&&\n    x \\<in>\\<^sub>\\<circ> A (vcard xs) &&& n = vcard (xs #\\<^sub>\\<circ> x)", "proof-"], ["proof (state)\ngoal (3 subgoals):\n 1. xs \\<in>\\<^sub>\\<circ> vproduct (vcard xs) A\n 2. x \\<in>\\<^sub>\\<circ> A (vcard xs)\n 3. n = vcard (xs #\\<^sub>\\<circ> x)", "interpret xsx: vfsequence \\<open>xs #\\<^sub>\\<circ> x\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (xs #\\<^sub>\\<circ> x)", "by (meson assms succ_in_omega vfsequence_vproduct)"], ["proof (state)\ngoal (3 subgoals):\n 1. xs \\<in>\\<^sub>\\<circ> vproduct (vcard xs) A\n 2. x \\<in>\\<^sub>\\<circ> A (vcard xs)\n 3. n = vcard (xs #\\<^sub>\\<circ> x)", "interpret xs: vfsequence xs"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence xs", "by (blast intro: xsx.vfsequence_vremove_vcons_vfsequence)"], ["proof (state)\ngoal (3 subgoals):\n 1. xs \\<in>\\<^sub>\\<circ> vproduct (vcard xs) A\n 2. x \\<in>\\<^sub>\\<circ> A (vcard xs)\n 3. n = vcard (xs #\\<^sub>\\<circ> x)", "show n_def: \"n = vcard (xs #\\<^sub>\\<circ> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n = vcard (xs #\\<^sub>\\<circ> x)", "using assms"], ["proof (prove)\nusing this:\n  xs #\\<^sub>\\<circ> x \\<in>\\<^sub>\\<circ> vproduct n A\n  n \\<in>\\<^sub>\\<circ> \\<omega>\n\ngoal (1 subgoal):\n 1. n = vcard (xs #\\<^sub>\\<circ> x)", "using xsx.vfsequence_vdomain"], ["proof (prove)\nusing this:\n  xs #\\<^sub>\\<circ> x \\<in>\\<^sub>\\<circ> vproduct n A\n  n \\<in>\\<^sub>\\<circ> \\<omega>\n  \\<D>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x) = vcard (xs #\\<^sub>\\<circ> x)\n\ngoal (1 subgoal):\n 1. n = vcard (xs #\\<^sub>\\<circ> x)", "by blast"], ["proof (state)\nthis:\n  n = vcard (xs #\\<^sub>\\<circ> x)\n\ngoal (2 subgoals):\n 1. xs \\<in>\\<^sub>\\<circ> vproduct (vcard xs) A\n 2. x \\<in>\\<^sub>\\<circ> A (vcard xs)", "from vproductD[OF assms(1), unfolded n_def]"], ["proof (chain)\npicking this:\n  vsv (xs #\\<^sub>\\<circ> x)\n  \\<D>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x) = vcard (xs #\\<^sub>\\<circ> x)\n  \\<forall>i\\<in>elts (vcard (xs #\\<^sub>\\<circ> x)).\n     (xs #\\<^sub>\\<circ> x)\\<lparr>i\\<rparr> \\<in>\\<^sub>\\<circ> A i", "have elem_xs_x: \"i \\<in>\\<^sub>\\<circ> vcard (xs #\\<^sub>\\<circ> x) \\<Longrightarrow> (xs #\\<^sub>\\<circ> x)\\<lparr>i\\<rparr> \\<in>\\<^sub>\\<circ> A i\" \n    for i"], ["proof (prove)\nusing this:\n  vsv (xs #\\<^sub>\\<circ> x)\n  \\<D>\\<^sub>\\<circ> (xs #\\<^sub>\\<circ> x) = vcard (xs #\\<^sub>\\<circ> x)\n  \\<forall>i\\<in>elts (vcard (xs #\\<^sub>\\<circ> x)).\n     (xs #\\<^sub>\\<circ> x)\\<lparr>i\\<rparr> \\<in>\\<^sub>\\<circ> A i\n\ngoal (1 subgoal):\n 1. i \\<in>\\<^sub>\\<circ> vcard (xs #\\<^sub>\\<circ> x) \\<Longrightarrow>\n    (xs #\\<^sub>\\<circ> x)\\<lparr>i\\<rparr> \\<in>\\<^sub>\\<circ> A i", "by auto"], ["proof (state)\nthis:\n  ?i \\<in>\\<^sub>\\<circ> vcard (xs #\\<^sub>\\<circ> x) \\<Longrightarrow>\n  (xs #\\<^sub>\\<circ> x)\\<lparr>?i\\<rparr> \\<in>\\<^sub>\\<circ> A ?i\n\ngoal (2 subgoals):\n 1. xs \\<in>\\<^sub>\\<circ> vproduct (vcard xs) A\n 2. x \\<in>\\<^sub>\\<circ> A (vcard xs)", "then"], ["proof (chain)\npicking this:\n  ?i \\<in>\\<^sub>\\<circ> vcard (xs #\\<^sub>\\<circ> x) \\<Longrightarrow>\n  (xs #\\<^sub>\\<circ> x)\\<lparr>?i\\<rparr> \\<in>\\<^sub>\\<circ> A ?i", "have elem_xs[simp]: \"i \\<in>\\<^sub>\\<circ> vcard xs \\<Longrightarrow> xs\\<lparr>i\\<rparr> \\<in>\\<^sub>\\<circ> A i\" for i"], ["proof (prove)\nusing this:\n  ?i \\<in>\\<^sub>\\<circ> vcard (xs #\\<^sub>\\<circ> x) \\<Longrightarrow>\n  (xs #\\<^sub>\\<circ> x)\\<lparr>?i\\<rparr> \\<in>\\<^sub>\\<circ> A ?i\n\ngoal (1 subgoal):\n 1. i \\<in>\\<^sub>\\<circ> vcard xs \\<Longrightarrow>\n    xs\\<lparr>i\\<rparr> \\<in>\\<^sub>\\<circ> A i", "by (metis rev_vsubsetD vcard_mono vcons_vsubset xs.vfsequence_at_not_last)"], ["proof (state)\nthis:\n  ?i \\<in>\\<^sub>\\<circ> vcard xs \\<Longrightarrow>\n  xs\\<lparr>?i\\<rparr> \\<in>\\<^sub>\\<circ> A ?i\n\ngoal (2 subgoals):\n 1. xs \\<in>\\<^sub>\\<circ> vproduct (vcard xs) A\n 2. x \\<in>\\<^sub>\\<circ> A (vcard xs)", "show \"xs \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>vcard xs. A i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs \\<in>\\<^sub>\\<circ> vproduct (vcard xs) A", "by (auto simp: xs.vsv_axioms xs.vfsequence_vdomain)"], ["proof (state)\nthis:\n  xs \\<in>\\<^sub>\\<circ> vproduct (vcard xs) A\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>\\<circ> A (vcard xs)", "from elem_xs_x"], ["proof (chain)\npicking this:\n  ?i \\<in>\\<^sub>\\<circ> vcard (xs #\\<^sub>\\<circ> x) \\<Longrightarrow>\n  (xs #\\<^sub>\\<circ> x)\\<lparr>?i\\<rparr> \\<in>\\<^sub>\\<circ> A ?i", "show \"x \\<in>\\<^sub>\\<circ> A (vcard xs)\""], ["proof (prove)\nusing this:\n  ?i \\<in>\\<^sub>\\<circ> vcard (xs #\\<^sub>\\<circ> x) \\<Longrightarrow>\n  (xs #\\<^sub>\\<circ> x)\\<lparr>?i\\<rparr> \\<in>\\<^sub>\\<circ> A ?i\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>\\<circ> A (vcard xs)", "by fastforce"], ["proof (state)\nthis:\n  x \\<in>\\<^sub>\\<circ> A (vcard xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vfsequence_vcons_vproductE[elim!]:\n  assumes \"xs #\\<^sub>\\<circ> x \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>n. A i)\" and \"n \\<in>\\<^sub>\\<circ> \\<omega>\"\n  obtains \"xs \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>vcard xs. A i)\" \n    and \"x \\<in>\\<^sub>\\<circ> A (vcard xs)\" \n    and \"n = vcard (xs #\\<^sub>\\<circ> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>xs \\<in>\\<^sub>\\<circ> vproduct (vcard xs) A;\n      x \\<in>\\<^sub>\\<circ> A (vcard xs);\n      n = vcard (xs #\\<^sub>\\<circ> x)\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  xs #\\<^sub>\\<circ> x \\<in>\\<^sub>\\<circ> vproduct n A\n  n \\<in>\\<^sub>\\<circ> \\<omega>\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>xs \\<in>\\<^sub>\\<circ> vproduct (vcard xs) A;\n      x \\<in>\\<^sub>\\<circ> A (vcard xs);\n      n = vcard (xs #\\<^sub>\\<circ> x)\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: vfsequence_vcons_vproductD)"], ["", "subsection\\<open>Binary Cartesian product based on finite sequences: \\<open>ftimes\\<close>\\<close>"], ["", "definition ftimes :: \"V \\<Rightarrow> V \\<Rightarrow> V\" (infixr \\<open>\\<times>\\<^sub>\\<bullet>\\<close> 80)\n  where \"ftimes a b \\<equiv> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>2\\<^sub>\\<nat>. if i = 0 then a else b)\""], ["", "lemma small_fpairs[simp]: \"small {[a, b]\\<^sub>\\<circ> | a b. [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> r}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. small\n     {[a, b]\\<^sub>\\<circ> |a b. [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> r}", "by (rule down[of _ r]) clarsimp"], ["", "text\\<open>Rules.\\<close>"], ["", "lemma ftimesI1[intro]: \n  assumes \"x = [a, b]\\<^sub>\\<circ>\" and \"a \\<in>\\<^sub>\\<circ> A\" and \"b \\<in>\\<^sub>\\<circ> B\"\n  shows \"x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<bullet> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<bullet> B", "unfolding ftimes_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>2\\<^sub>\\<nat>.\n                              if i = []\\<^sub>\\<circ> \\<Rightarrow> A \n                               | otherwise \\<Rightarrow> B)", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. vsv x\n 2. \\<D>\\<^sub>\\<circ> x = 2\\<^sub>\\<nat>\n 3. \\<forall>i\\<in>elts (2\\<^sub>\\<nat>).\n       x\\<lparr>i\\<rparr>\n       \\<in>\\<^sub>\\<circ> (if i = []\\<^sub>\\<circ> \\<Rightarrow> A \n                             | otherwise \\<Rightarrow> B)", "show vsv: \"vsv x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv x", "by (simp add: assms(1) vfsequence.axioms(1))"], ["proof (state)\nthis:\n  vsv x\n\ngoal (2 subgoals):\n 1. \\<D>\\<^sub>\\<circ> x = 2\\<^sub>\\<nat>\n 2. \\<forall>i\\<in>elts (2\\<^sub>\\<nat>).\n       x\\<lparr>i\\<rparr>\n       \\<in>\\<^sub>\\<circ> (if i = []\\<^sub>\\<circ> \\<Rightarrow> A \n                             | otherwise \\<Rightarrow> B)", "then"], ["proof (chain)\npicking this:\n  vsv x", "interpret vsv x"], ["proof (prove)\nusing this:\n  vsv x\n\ngoal (1 subgoal):\n 1. vsv x", "."], ["proof (state)\ngoal (2 subgoals):\n 1. \\<D>\\<^sub>\\<circ> x = 2\\<^sub>\\<nat>\n 2. \\<forall>i\\<in>elts (2\\<^sub>\\<nat>).\n       x\\<lparr>i\\<rparr>\n       \\<in>\\<^sub>\\<circ> (if i = []\\<^sub>\\<circ> \\<Rightarrow> A \n                             | otherwise \\<Rightarrow> B)", "from assms"], ["proof (chain)\npicking this:\n  x = [a, b]\\<^sub>\\<circ>\n  a \\<in>\\<^sub>\\<circ> A\n  b \\<in>\\<^sub>\\<circ> B", "show D: \"\\<D>\\<^sub>\\<circ> x = 2\\<^sub>\\<nat>\""], ["proof (prove)\nusing this:\n  x = [a, b]\\<^sub>\\<circ>\n  a \\<in>\\<^sub>\\<circ> A\n  b \\<in>\\<^sub>\\<circ> B\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> x = 2\\<^sub>\\<nat>", "unfolding nat_omega_simps two One_nat_def"], ["proof (prove)\nusing this:\n  x = [a, b]\\<^sub>\\<circ>\n  a \\<in>\\<^sub>\\<circ> A\n  b \\<in>\\<^sub>\\<circ> B\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> x = set {[]\\<^sub>\\<circ>, Suc 0\\<^sub>\\<nat>}", "by auto"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> x = 2\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>elts (2\\<^sub>\\<nat>).\n       x\\<lparr>i\\<rparr>\n       \\<in>\\<^sub>\\<circ> (if i = []\\<^sub>\\<circ> \\<Rightarrow> A \n                             | otherwise \\<Rightarrow> B)", "from assms(2,3)"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> A\n  b \\<in>\\<^sub>\\<circ> B", "have i: \"i \\<in>\\<^sub>\\<circ> 2\\<^sub>\\<nat> \\<Longrightarrow> x\\<lparr>i\\<rparr> \\<in>\\<^sub>\\<circ> (if i = 0\\<^sub>\\<nat> then A else B)\" \n    for i"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> A\n  b \\<in>\\<^sub>\\<circ> B\n\ngoal (1 subgoal):\n 1. i \\<in>\\<^sub>\\<circ> 2\\<^sub>\\<nat> \\<Longrightarrow>\n    x\\<lparr>i\\<rparr>\n    \\<in>\\<^sub>\\<circ> (if i = 0\\<^sub>\\<nat> \\<Rightarrow> A \n                          | otherwise \\<Rightarrow> B)", "unfolding assms(1) two nat_omega_simps One_nat_def"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> A\n  b \\<in>\\<^sub>\\<circ> B\n\ngoal (1 subgoal):\n 1. i \\<in>\\<^sub>\\<circ> set {[]\\<^sub>\\<circ>,\n                               Suc 0\\<^sub>\\<nat>} \\<Longrightarrow>\n    [a, b]\\<^sub>\\<circ>\\<lparr>i\\<rparr>\n    \\<in>\\<^sub>\\<circ> (if i = 0\\<^sub>\\<nat> \\<Rightarrow> A \n                          | otherwise \\<Rightarrow> B)", "by auto"], ["proof (state)\nthis:\n  ?i \\<in>\\<^sub>\\<circ> 2\\<^sub>\\<nat> \\<Longrightarrow>\n  x\\<lparr>?i\\<rparr>\n  \\<in>\\<^sub>\\<circ> (if ?i = 0\\<^sub>\\<nat> \\<Rightarrow> A \n                        | otherwise \\<Rightarrow> B)\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>elts (2\\<^sub>\\<nat>).\n       x\\<lparr>i\\<rparr>\n       \\<in>\\<^sub>\\<circ> (if i = []\\<^sub>\\<circ> \\<Rightarrow> A \n                             | otherwise \\<Rightarrow> B)", "from i"], ["proof (chain)\npicking this:\n  ?i \\<in>\\<^sub>\\<circ> 2\\<^sub>\\<nat> \\<Longrightarrow>\n  x\\<lparr>?i\\<rparr>\n  \\<in>\\<^sub>\\<circ> (if ?i = 0\\<^sub>\\<nat> \\<Rightarrow> A \n                        | otherwise \\<Rightarrow> B)", "show \"\\<forall>i\\<in>\\<^sub>\\<circ>2\\<^sub>\\<nat>. x\\<lparr>i\\<rparr> \\<in>\\<^sub>\\<circ> (if i = 0 then A else B)\""], ["proof (prove)\nusing this:\n  ?i \\<in>\\<^sub>\\<circ> 2\\<^sub>\\<nat> \\<Longrightarrow>\n  x\\<lparr>?i\\<rparr>\n  \\<in>\\<^sub>\\<circ> (if ?i = 0\\<^sub>\\<nat> \\<Rightarrow> A \n                        | otherwise \\<Rightarrow> B)\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>elts (2\\<^sub>\\<nat>).\n       x\\<lparr>i\\<rparr>\n       \\<in>\\<^sub>\\<circ> (if i = []\\<^sub>\\<circ> \\<Rightarrow> A \n                             | otherwise \\<Rightarrow> B)", "by auto"], ["proof (state)\nthis:\n  \\<forall>i\\<in>elts (2\\<^sub>\\<nat>).\n     x\\<lparr>i\\<rparr>\n     \\<in>\\<^sub>\\<circ> (if i = []\\<^sub>\\<circ> \\<Rightarrow> A \n                           | otherwise \\<Rightarrow> B)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ftimesI2[intro!]: \n  assumes \"a \\<in>\\<^sub>\\<circ> A\" and \"b \\<in>\\<^sub>\\<circ> B\"\n  shows \"[a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<bullet> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<bullet> B", "using assms ftimesI1"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> A\n  b \\<in>\\<^sub>\\<circ> B\n  \\<lbrakk>?x = [?a, ?b]\\<^sub>\\<circ>; ?a \\<in>\\<^sub>\\<circ> ?A;\n   ?b \\<in>\\<^sub>\\<circ> ?B\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in>\\<^sub>\\<circ> ?A \\<times>\\<^sub>\\<bullet> ?B\n\ngoal (1 subgoal):\n 1. [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<bullet> B", "by auto"], ["", "lemma fproductE1[elim!]:\n  assumes \"x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<bullet> B\"\n  obtains a b where \"x = [a, b]\\<^sub>\\<circ>\" and \"a \\<in>\\<^sub>\\<circ> A\" and \"b \\<in>\\<^sub>\\<circ> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>x = [a, b]\\<^sub>\\<circ>; a \\<in>\\<^sub>\\<circ> A;\n         b \\<in>\\<^sub>\\<circ> B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>x = [a, b]\\<^sub>\\<circ>; a \\<in>\\<^sub>\\<circ> A;\n         b \\<in>\\<^sub>\\<circ> B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from vproduct_vdoubletonD[OF assms[unfolded two ftimes_def]]"], ["proof (chain)\npicking this:\n  vsv x\n  x\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\n  \\<in>\\<^sub>\\<circ> (if []\\<^sub>\\<circ> = []\\<^sub>\\<circ> \\<Rightarrow>\n                            A \n                        | otherwise \\<Rightarrow> B)\n  x\\<lparr>1\\<^sub>\\<nat>\\<rparr>\n  \\<in>\\<^sub>\\<circ> (if 1\\<^sub>\\<nat> = []\\<^sub>\\<circ> \\<Rightarrow> A \n                        | otherwise \\<Rightarrow> B)\n  \\<D>\\<^sub>\\<circ> x = set {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>}\n  x =\n  set {\\<langle>[]\\<^sub>\\<circ>,\n                x\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<rangle>,\n       \\<langle>1\\<^sub>\\<nat>, x\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<rangle>}", "have x_def: \"x = set {\\<langle>0\\<^sub>\\<nat>, x\\<lparr>0\\<^sub>\\<nat>\\<rparr>\\<rangle>, \\<langle>1\\<^sub>\\<nat>, x\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<rangle>}\"\n    and \"x\\<lparr>0\\<^sub>\\<nat>\\<rparr> \\<in>\\<^sub>\\<circ> A\" \n    and \"x\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<in>\\<^sub>\\<circ> B\""], ["proof (prove)\nusing this:\n  vsv x\n  x\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\n  \\<in>\\<^sub>\\<circ> (if []\\<^sub>\\<circ> = []\\<^sub>\\<circ> \\<Rightarrow>\n                            A \n                        | otherwise \\<Rightarrow> B)\n  x\\<lparr>1\\<^sub>\\<nat>\\<rparr>\n  \\<in>\\<^sub>\\<circ> (if 1\\<^sub>\\<nat> = []\\<^sub>\\<circ> \\<Rightarrow> A \n                        | otherwise \\<Rightarrow> B)\n  \\<D>\\<^sub>\\<circ> x = set {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>}\n  x =\n  set {\\<langle>[]\\<^sub>\\<circ>,\n                x\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<rangle>,\n       \\<langle>1\\<^sub>\\<nat>, x\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<rangle>}\n\ngoal (1 subgoal):\n 1. x =\n    set {\\<langle>0\\<^sub>\\<nat>, x\\<lparr>0\\<^sub>\\<nat>\\<rparr>\\<rangle>,\n         \\<langle>1\\<^sub>\\<nat>,\n                  x\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<rangle>} &&&\n    x\\<lparr>0\\<^sub>\\<nat>\\<rparr> \\<in>\\<^sub>\\<circ> A &&&\n    x\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<in>\\<^sub>\\<circ> B", "by auto"], ["proof (state)\nthis:\n  x =\n  set {\\<langle>0\\<^sub>\\<nat>, x\\<lparr>0\\<^sub>\\<nat>\\<rparr>\\<rangle>,\n       \\<langle>1\\<^sub>\\<nat>, x\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<rangle>}\n  x\\<lparr>0\\<^sub>\\<nat>\\<rparr> \\<in>\\<^sub>\\<circ> A\n  x\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<in>\\<^sub>\\<circ> B\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>x = [a, b]\\<^sub>\\<circ>; a \\<in>\\<^sub>\\<circ> A;\n         b \\<in>\\<^sub>\\<circ> B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  x =\n  set {\\<langle>0\\<^sub>\\<nat>, x\\<lparr>0\\<^sub>\\<nat>\\<rparr>\\<rangle>,\n       \\<langle>1\\<^sub>\\<nat>, x\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<rangle>}\n  x\\<lparr>0\\<^sub>\\<nat>\\<rparr> \\<in>\\<^sub>\\<circ> A\n  x\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<in>\\<^sub>\\<circ> B", "show ?thesis"], ["proof (prove)\nusing this:\n  x =\n  set {\\<langle>0\\<^sub>\\<nat>, x\\<lparr>0\\<^sub>\\<nat>\\<rparr>\\<rangle>,\n       \\<langle>1\\<^sub>\\<nat>, x\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<rangle>}\n  x\\<lparr>0\\<^sub>\\<nat>\\<rparr> \\<in>\\<^sub>\\<circ> A\n  x\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<in>\\<^sub>\\<circ> B\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  x =\n  set {\\<langle>0\\<^sub>\\<nat>, x\\<lparr>0\\<^sub>\\<nat>\\<rparr>\\<rangle>,\n       \\<langle>1\\<^sub>\\<nat>, x\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<rangle>}\n  x\\<lparr>0\\<^sub>\\<nat>\\<rparr> \\<in>\\<^sub>\\<circ> A\n  x\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<in>\\<^sub>\\<circ> B\n  \\<lbrakk>x = [?a, ?b]\\<^sub>\\<circ>; ?a \\<in>\\<^sub>\\<circ> A;\n   ?b \\<in>\\<^sub>\\<circ> B\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "using vcons_vdoubleton"], ["proof (prove)\nusing this:\n  x =\n  set {\\<langle>0\\<^sub>\\<nat>, x\\<lparr>0\\<^sub>\\<nat>\\<rparr>\\<rangle>,\n       \\<langle>1\\<^sub>\\<nat>, x\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<rangle>}\n  x\\<lparr>0\\<^sub>\\<nat>\\<rparr> \\<in>\\<^sub>\\<circ> A\n  x\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<in>\\<^sub>\\<circ> B\n  \\<lbrakk>x = [?a, ?b]\\<^sub>\\<circ>; ?a \\<in>\\<^sub>\\<circ> A;\n   ?b \\<in>\\<^sub>\\<circ> B\\<rbrakk>\n  \\<Longrightarrow> thesis\n  [?a, ?b]\\<^sub>\\<circ> =\n  set {\\<langle>0\\<^sub>\\<nat>, ?a\\<rangle>,\n       \\<langle>1\\<^sub>\\<nat>, ?b\\<rangle>}\n\ngoal (1 subgoal):\n 1. thesis", "by simp"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fproductE2[elim!]:\n  assumes \"[a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<bullet> B\" obtains \"a \\<in>\\<^sub>\\<circ> A\" and \"b \\<in>\\<^sub>\\<circ> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>a \\<in>\\<^sub>\\<circ> A; b \\<in>\\<^sub>\\<circ> B\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<bullet> B\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>a \\<in>\\<^sub>\\<circ> A; b \\<in>\\<^sub>\\<circ> B\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["", "text\\<open>Set operations.\\<close>"], ["", "lemma vfinite_0_left[simp]: \"0 \\<times>\\<^sub>\\<bullet> b = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. []\\<^sub>\\<circ> \\<times>\\<^sub>\\<bullet> b = []\\<^sub>\\<circ>", "by (meson eq0_iff fproductE1)"], ["", "lemma vfinite_0_right[simp]: \"a \\<times>\\<^sub>\\<bullet> 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<times>\\<^sub>\\<bullet> []\\<^sub>\\<circ> = []\\<^sub>\\<circ>", "by (meson eq0_iff fproductE1)"], ["", "lemma fproduct_vintersection: \"(a \\<inter>\\<^sub>\\<circ> b) \\<times>\\<^sub>\\<bullet> (c \\<inter>\\<^sub>\\<circ> d) = (a \\<times>\\<^sub>\\<bullet> c) \\<inter>\\<^sub>\\<circ> (b \\<times>\\<^sub>\\<bullet> d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<inter>\\<^sub>\\<circ> b) \\<times>\\<^sub>\\<bullet>\n    (c \\<inter>\\<^sub>\\<circ> d) =\n    a \\<times>\\<^sub>\\<bullet> c \\<inter>\\<^sub>\\<circ>\n    b \\<times>\\<^sub>\\<bullet> d", "by auto"], ["", "lemma fproduct_vdiff: \"a \\<times>\\<^sub>\\<bullet> (b -\\<^sub>\\<circ> c) = (a \\<times>\\<^sub>\\<bullet> b) -\\<^sub>\\<circ> (a \\<times>\\<^sub>\\<bullet> c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<times>\\<^sub>\\<bullet> (b -\\<^sub>\\<circ> c) =\n    a \\<times>\\<^sub>\\<bullet> b -\\<^sub>\\<circ>\n    a \\<times>\\<^sub>\\<bullet> c", "by auto"], ["", "lemma vfinite_ftimesI[intro!]:\n  assumes \"vfinite a\" and \"vfinite b\"\n  shows \"vfinite (a \\<times>\\<^sub>\\<bullet> b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfinite (a \\<times>\\<^sub>\\<bullet> b)", "using assms(1,2)"], ["proof (prove)\nusing this:\n  vfinite a\n  vfinite b\n\ngoal (1 subgoal):\n 1. vfinite (a \\<times>\\<^sub>\\<bullet> b)", "proof(induction arbitrary: b rule: vfinite_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>b.\n       vfinite b \\<Longrightarrow>\n       vfinite ([]\\<^sub>\\<circ> \\<times>\\<^sub>\\<bullet> b)\n 2. \\<And>x F b.\n       \\<lbrakk>vfinite F; x \\<notin>\\<^sub>\\<circ> F;\n        \\<And>b.\n           vfinite b \\<Longrightarrow>\n           vfinite (F \\<times>\\<^sub>\\<bullet> b);\n        vfinite b\\<rbrakk>\n       \\<Longrightarrow> vfinite (vinsert x F \\<times>\\<^sub>\\<bullet> b)", "case (vinsert x a')"], ["proof (state)\nthis:\n  vfinite a'\n  x \\<notin>\\<^sub>\\<circ> a'\n  vfinite ?b \\<Longrightarrow> vfinite (a' \\<times>\\<^sub>\\<bullet> ?b)\n  vfinite b\n\ngoal (2 subgoals):\n 1. \\<And>b.\n       vfinite b \\<Longrightarrow>\n       vfinite ([]\\<^sub>\\<circ> \\<times>\\<^sub>\\<bullet> b)\n 2. \\<And>x F b.\n       \\<lbrakk>vfinite F; x \\<notin>\\<^sub>\\<circ> F;\n        \\<And>b.\n           vfinite b \\<Longrightarrow>\n           vfinite (F \\<times>\\<^sub>\\<bullet> b);\n        vfinite b\\<rbrakk>\n       \\<Longrightarrow> vfinite (vinsert x F \\<times>\\<^sub>\\<bullet> b)", "from vinsert(4)"], ["proof (chain)\npicking this:\n  vfinite b", "have \"vfinite (set {x} \\<times>\\<^sub>\\<bullet> b)\""], ["proof (prove)\nusing this:\n  vfinite b\n\ngoal (1 subgoal):\n 1. vfinite (set {x} \\<times>\\<^sub>\\<bullet> b)", "proof(induction rule: vfinite_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. vfinite (set {x} \\<times>\\<^sub>\\<bullet> []\\<^sub>\\<circ>)\n 2. \\<And>xa F.\n       \\<lbrakk>vfinite F; xa \\<notin>\\<^sub>\\<circ> F;\n        vfinite (set {x} \\<times>\\<^sub>\\<bullet> F)\\<rbrakk>\n       \\<Longrightarrow> vfinite\n                          (set {x} \\<times>\\<^sub>\\<bullet> vinsert xa F)", "case (vinsert y b')"], ["proof (state)\nthis:\n  vfinite b'\n  y \\<notin>\\<^sub>\\<circ> b'\n  vfinite (set {x} \\<times>\\<^sub>\\<bullet> b')\n\ngoal (2 subgoals):\n 1. vfinite (set {x} \\<times>\\<^sub>\\<bullet> []\\<^sub>\\<circ>)\n 2. \\<And>xa F.\n       \\<lbrakk>vfinite F; xa \\<notin>\\<^sub>\\<circ> F;\n        vfinite (set {x} \\<times>\\<^sub>\\<bullet> F)\\<rbrakk>\n       \\<Longrightarrow> vfinite\n                          (set {x} \\<times>\\<^sub>\\<bullet> vinsert xa F)", "have \"set {x} \\<times>\\<^sub>\\<bullet> vinsert y b' = vinsert [x, y]\\<^sub>\\<circ> (set {x} \\<times>\\<^sub>\\<bullet> b')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set {x} \\<times>\\<^sub>\\<bullet> vinsert y b' =\n    vinsert [x, y]\\<^sub>\\<circ> (set {x} \\<times>\\<^sub>\\<bullet> b')", "by auto"], ["proof (state)\nthis:\n  set {x} \\<times>\\<^sub>\\<bullet> vinsert y b' =\n  vinsert [x, y]\\<^sub>\\<circ> (set {x} \\<times>\\<^sub>\\<bullet> b')\n\ngoal (2 subgoals):\n 1. vfinite (set {x} \\<times>\\<^sub>\\<bullet> []\\<^sub>\\<circ>)\n 2. \\<And>xa F.\n       \\<lbrakk>vfinite F; xa \\<notin>\\<^sub>\\<circ> F;\n        vfinite (set {x} \\<times>\\<^sub>\\<bullet> F)\\<rbrakk>\n       \\<Longrightarrow> vfinite\n                          (set {x} \\<times>\\<^sub>\\<bullet> vinsert xa F)", "with vinsert(3)"], ["proof (chain)\npicking this:\n  vfinite (set {x} \\<times>\\<^sub>\\<bullet> b')\n  set {x} \\<times>\\<^sub>\\<bullet> vinsert y b' =\n  vinsert [x, y]\\<^sub>\\<circ> (set {x} \\<times>\\<^sub>\\<bullet> b')", "show ?case"], ["proof (prove)\nusing this:\n  vfinite (set {x} \\<times>\\<^sub>\\<bullet> b')\n  set {x} \\<times>\\<^sub>\\<bullet> vinsert y b' =\n  vinsert [x, y]\\<^sub>\\<circ> (set {x} \\<times>\\<^sub>\\<bullet> b')\n\ngoal (1 subgoal):\n 1. vfinite (set {x} \\<times>\\<^sub>\\<bullet> vinsert y b')", "by simp"], ["proof (state)\nthis:\n  vfinite (set {x} \\<times>\\<^sub>\\<bullet> vinsert y b')\n\ngoal (1 subgoal):\n 1. vfinite (set {x} \\<times>\\<^sub>\\<bullet> []\\<^sub>\\<circ>)", "qed simp"], ["proof (state)\nthis:\n  vfinite (set {x} \\<times>\\<^sub>\\<bullet> b)\n\ngoal (2 subgoals):\n 1. \\<And>b.\n       vfinite b \\<Longrightarrow>\n       vfinite ([]\\<^sub>\\<circ> \\<times>\\<^sub>\\<bullet> b)\n 2. \\<And>x F b.\n       \\<lbrakk>vfinite F; x \\<notin>\\<^sub>\\<circ> F;\n        \\<And>b.\n           vfinite b \\<Longrightarrow>\n           vfinite (F \\<times>\\<^sub>\\<bullet> b);\n        vfinite b\\<rbrakk>\n       \\<Longrightarrow> vfinite (vinsert x F \\<times>\\<^sub>\\<bullet> b)", "moreover"], ["proof (state)\nthis:\n  vfinite (set {x} \\<times>\\<^sub>\\<bullet> b)\n\ngoal (2 subgoals):\n 1. \\<And>b.\n       vfinite b \\<Longrightarrow>\n       vfinite ([]\\<^sub>\\<circ> \\<times>\\<^sub>\\<bullet> b)\n 2. \\<And>x F b.\n       \\<lbrakk>vfinite F; x \\<notin>\\<^sub>\\<circ> F;\n        \\<And>b.\n           vfinite b \\<Longrightarrow>\n           vfinite (F \\<times>\\<^sub>\\<bullet> b);\n        vfinite b\\<rbrakk>\n       \\<Longrightarrow> vfinite (vinsert x F \\<times>\\<^sub>\\<bullet> b)", "have \"vinsert x a' \\<times>\\<^sub>\\<bullet> b = (set {x} \\<times>\\<^sub>\\<bullet> b) \\<union>\\<^sub>\\<circ> (a' \\<times>\\<^sub>\\<bullet> b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vinsert x a' \\<times>\\<^sub>\\<bullet> b =\n    set {x} \\<times>\\<^sub>\\<bullet> b \\<union>\\<^sub>\\<circ>\n    a' \\<times>\\<^sub>\\<bullet> b", "by auto"], ["proof (state)\nthis:\n  vinsert x a' \\<times>\\<^sub>\\<bullet> b =\n  set {x} \\<times>\\<^sub>\\<bullet> b \\<union>\\<^sub>\\<circ>\n  a' \\<times>\\<^sub>\\<bullet> b\n\ngoal (2 subgoals):\n 1. \\<And>b.\n       vfinite b \\<Longrightarrow>\n       vfinite ([]\\<^sub>\\<circ> \\<times>\\<^sub>\\<bullet> b)\n 2. \\<And>x F b.\n       \\<lbrakk>vfinite F; x \\<notin>\\<^sub>\\<circ> F;\n        \\<And>b.\n           vfinite b \\<Longrightarrow>\n           vfinite (F \\<times>\\<^sub>\\<bullet> b);\n        vfinite b\\<rbrakk>\n       \\<Longrightarrow> vfinite (vinsert x F \\<times>\\<^sub>\\<bullet> b)", "ultimately"], ["proof (chain)\npicking this:\n  vfinite (set {x} \\<times>\\<^sub>\\<bullet> b)\n  vinsert x a' \\<times>\\<^sub>\\<bullet> b =\n  set {x} \\<times>\\<^sub>\\<bullet> b \\<union>\\<^sub>\\<circ>\n  a' \\<times>\\<^sub>\\<bullet> b", "show ?case"], ["proof (prove)\nusing this:\n  vfinite (set {x} \\<times>\\<^sub>\\<bullet> b)\n  vinsert x a' \\<times>\\<^sub>\\<bullet> b =\n  set {x} \\<times>\\<^sub>\\<bullet> b \\<union>\\<^sub>\\<circ>\n  a' \\<times>\\<^sub>\\<bullet> b\n\ngoal (1 subgoal):\n 1. vfinite (vinsert x a' \\<times>\\<^sub>\\<bullet> b)", "using vinsert"], ["proof (prove)\nusing this:\n  vfinite (set {x} \\<times>\\<^sub>\\<bullet> b)\n  vinsert x a' \\<times>\\<^sub>\\<bullet> b =\n  set {x} \\<times>\\<^sub>\\<bullet> b \\<union>\\<^sub>\\<circ>\n  a' \\<times>\\<^sub>\\<bullet> b\n  vfinite a'\n  x \\<notin>\\<^sub>\\<circ> a'\n  vfinite ?b \\<Longrightarrow> vfinite (a' \\<times>\\<^sub>\\<bullet> ?b)\n  vfinite b\n\ngoal (1 subgoal):\n 1. vfinite (vinsert x a' \\<times>\\<^sub>\\<bullet> b)", "by (auto simp: vfinite_vunionI)"], ["proof (state)\nthis:\n  vfinite (vinsert x a' \\<times>\\<^sub>\\<bullet> b)\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       vfinite b \\<Longrightarrow>\n       vfinite ([]\\<^sub>\\<circ> \\<times>\\<^sub>\\<bullet> b)", "qed simp"], ["", "text\\<open>\\<open>ftimes\\<close> and \\<open>vcpower\\<close>\\<close>"], ["", "lemma vproduct_vpair: \"[a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>2\\<^sub>\\<nat>. f i) \\<longleftrightarrow> \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> f (0\\<^sub>\\<nat>) \\<times>\\<^sub>\\<circ> f (1\\<^sub>\\<nat>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> vproduct (2\\<^sub>\\<nat>) f) =\n    (\\<langle>a, b\\<rangle>\n     \\<in>\\<^sub>\\<circ> f (0\\<^sub>\\<nat>) \\<times>\\<^sub>\\<circ>\n                         f (1\\<^sub>\\<nat>))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. [a, b]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> vproduct (2\\<^sub>\\<nat>) f \\<Longrightarrow>\n    \\<langle>a, b\\<rangle>\n    \\<in>\\<^sub>\\<circ> f (0\\<^sub>\\<nat>) \\<times>\\<^sub>\\<circ>\n                        f (1\\<^sub>\\<nat>)\n 2. \\<langle>a, b\\<rangle>\n    \\<in>\\<^sub>\\<circ> f (0\\<^sub>\\<nat>) \\<times>\\<^sub>\\<circ>\n                        f (1\\<^sub>\\<nat>) \\<Longrightarrow>\n    [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> vproduct (2\\<^sub>\\<nat>) f", "interpret vfsequence \\<open>[a, b]\\<^sub>\\<circ>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence [a, b]\\<^sub>\\<circ>", "by simp"], ["proof (state)\ngoal (2 subgoals):\n 1. [a, b]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> vproduct (2\\<^sub>\\<nat>) f \\<Longrightarrow>\n    \\<langle>a, b\\<rangle>\n    \\<in>\\<^sub>\\<circ> f (0\\<^sub>\\<nat>) \\<times>\\<^sub>\\<circ>\n                        f (1\\<^sub>\\<nat>)\n 2. \\<langle>a, b\\<rangle>\n    \\<in>\\<^sub>\\<circ> f (0\\<^sub>\\<nat>) \\<times>\\<^sub>\\<circ>\n                        f (1\\<^sub>\\<nat>) \\<Longrightarrow>\n    [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> vproduct (2\\<^sub>\\<nat>) f", "show \"[a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>2\\<^sub>\\<nat>. f i) \\<Longrightarrow> \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> f (0\\<^sub>\\<nat>) \\<times>\\<^sub>\\<circ> f (1\\<^sub>\\<nat>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [a, b]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> vproduct (2\\<^sub>\\<nat>) f \\<Longrightarrow>\n    \\<langle>a, b\\<rangle>\n    \\<in>\\<^sub>\\<circ> f (0\\<^sub>\\<nat>) \\<times>\\<^sub>\\<circ>\n                        f (1\\<^sub>\\<nat>)", "unfolding vcons_vdoubleton two"], ["proof (prove)\ngoal (1 subgoal):\n 1. set {\\<langle>0\\<^sub>\\<nat>, a\\<rangle>,\n         \\<langle>1\\<^sub>\\<nat>, b\\<rangle>}\n    \\<in>\\<^sub>\\<circ> vproduct (set {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>})\n                         f \\<Longrightarrow>\n    \\<langle>a, b\\<rangle>\n    \\<in>\\<^sub>\\<circ> f (0\\<^sub>\\<nat>) \\<times>\\<^sub>\\<circ>\n                        f (1\\<^sub>\\<nat>)", "by (elim vproduct_vdoubletonE) auto"], ["proof (state)\nthis:\n  [a, b]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> vproduct (2\\<^sub>\\<nat>) f \\<Longrightarrow>\n  \\<langle>a, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> f (0\\<^sub>\\<nat>) \\<times>\\<^sub>\\<circ>\n                      f (1\\<^sub>\\<nat>)\n\ngoal (1 subgoal):\n 1. \\<langle>a, b\\<rangle>\n    \\<in>\\<^sub>\\<circ> f (0\\<^sub>\\<nat>) \\<times>\\<^sub>\\<circ>\n                        f (1\\<^sub>\\<nat>) \\<Longrightarrow>\n    [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> vproduct (2\\<^sub>\\<nat>) f", "assume hyp: \"\\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> f (0\\<^sub>\\<nat>) \\<times>\\<^sub>\\<circ> f (1\\<^sub>\\<nat>)\""], ["proof (state)\nthis:\n  \\<langle>a, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> f (0\\<^sub>\\<nat>) \\<times>\\<^sub>\\<circ>\n                      f (1\\<^sub>\\<nat>)\n\ngoal (1 subgoal):\n 1. \\<langle>a, b\\<rangle>\n    \\<in>\\<^sub>\\<circ> f (0\\<^sub>\\<nat>) \\<times>\\<^sub>\\<circ>\n                        f (1\\<^sub>\\<nat>) \\<Longrightarrow>\n    [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> vproduct (2\\<^sub>\\<nat>) f", "then"], ["proof (chain)\npicking this:\n  \\<langle>a, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> f (0\\<^sub>\\<nat>) \\<times>\\<^sub>\\<circ>\n                      f (1\\<^sub>\\<nat>)", "have af: \"a \\<in>\\<^sub>\\<circ> f (0\\<^sub>\\<nat>)\" and bf: \"b \\<in>\\<^sub>\\<circ> f (1\\<^sub>\\<nat>)\""], ["proof (prove)\nusing this:\n  \\<langle>a, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> f (0\\<^sub>\\<nat>) \\<times>\\<^sub>\\<circ>\n                      f (1\\<^sub>\\<nat>)\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> f (0\\<^sub>\\<nat>) &&&\n    b \\<in>\\<^sub>\\<circ> f (1\\<^sub>\\<nat>)", "by auto"], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> f (0\\<^sub>\\<nat>)\n  b \\<in>\\<^sub>\\<circ> f (1\\<^sub>\\<nat>)\n\ngoal (1 subgoal):\n 1. \\<langle>a, b\\<rangle>\n    \\<in>\\<^sub>\\<circ> f (0\\<^sub>\\<nat>) \\<times>\\<^sub>\\<circ>\n                        f (1\\<^sub>\\<nat>) \\<Longrightarrow>\n    [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> vproduct (2\\<^sub>\\<nat>) f", "have dom: \"\\<D>\\<^sub>\\<circ> [a, b]\\<^sub>\\<circ> = set {0\\<^sub>\\<nat>, 1\\<^sub>\\<nat>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> [a, b]\\<^sub>\\<circ> =\n    set {0\\<^sub>\\<nat>, 1\\<^sub>\\<nat>}", "by (auto intro!: vsubset_antisym)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> [a, b]\\<^sub>\\<circ> =\n  set {0\\<^sub>\\<nat>, 1\\<^sub>\\<nat>}\n\ngoal (1 subgoal):\n 1. \\<langle>a, b\\<rangle>\n    \\<in>\\<^sub>\\<circ> f (0\\<^sub>\\<nat>) \\<times>\\<^sub>\\<circ>\n                        f (1\\<^sub>\\<nat>) \\<Longrightarrow>\n    [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> vproduct (2\\<^sub>\\<nat>) f", "have ran: \"\\<R>\\<^sub>\\<circ> [a, b]\\<^sub>\\<circ> \\<subseteq>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>2\\<^sub>\\<nat>. f i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> [a, b]\\<^sub>\\<circ>\n    \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                               (VLambda (2\\<^sub>\\<nat>) f `\\<^sub>\\<circ>\n                                2\\<^sub>\\<nat>)", "unfolding two"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> [a, b]\\<^sub>\\<circ>\n    \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                               (VLambda\n                                 (set {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>})\n                                 f `\\<^sub>\\<circ>\n                                set {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>})", "using af bf vifunion_vdoubleton"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> f (0\\<^sub>\\<nat>)\n  b \\<in>\\<^sub>\\<circ> f (1\\<^sub>\\<nat>)\n  \\<Union>\\<^sub>\\<circ>\n   (VLambda (set {?i, ?j}) ?f `\\<^sub>\\<circ> set {?i, ?j}) =\n  ?f ?i \\<union>\\<^sub>\\<circ> ?f ?j\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> [a, b]\\<^sub>\\<circ>\n    \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                               (VLambda\n                                 (set {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>})\n                                 f `\\<^sub>\\<circ>\n                                set {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>})", "by auto"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> [a, b]\\<^sub>\\<circ>\n  \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                             (VLambda (2\\<^sub>\\<nat>) f `\\<^sub>\\<circ>\n                              2\\<^sub>\\<nat>)\n\ngoal (1 subgoal):\n 1. \\<langle>a, b\\<rangle>\n    \\<in>\\<^sub>\\<circ> f (0\\<^sub>\\<nat>) \\<times>\\<^sub>\\<circ>\n                        f (1\\<^sub>\\<nat>) \\<Longrightarrow>\n    [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> vproduct (2\\<^sub>\\<nat>) f", "show \"[a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>2\\<^sub>\\<nat>. f i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> vproduct (2\\<^sub>\\<nat>) f", "apply(intro vproductI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. vsv [a, b]\\<^sub>\\<circ>\n 2. \\<D>\\<^sub>\\<circ> [a, b]\\<^sub>\\<circ> = 2\\<^sub>\\<nat>\n 3. \\<forall>i\\<in>elts (2\\<^sub>\\<nat>).\n       [a, b]\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<in>\\<^sub>\\<circ> f i", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv [a, b]\\<^sub>\\<circ>", "using dom ran vsv_axioms"], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> [a, b]\\<^sub>\\<circ> =\n  set {0\\<^sub>\\<nat>, 1\\<^sub>\\<nat>}\n  \\<R>\\<^sub>\\<circ> [a, b]\\<^sub>\\<circ>\n  \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                             (VLambda (2\\<^sub>\\<nat>) f `\\<^sub>\\<circ>\n                              2\\<^sub>\\<nat>)\n  vsv [a, b]\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. vsv [a, b]\\<^sub>\\<circ>", "unfolding two"], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> [a, b]\\<^sub>\\<circ> =\n  set {0\\<^sub>\\<nat>, 1\\<^sub>\\<nat>}\n  \\<R>\\<^sub>\\<circ> [a, b]\\<^sub>\\<circ>\n  \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                             (VLambda\n                               (set {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>})\n                               f `\\<^sub>\\<circ>\n                              set {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>})\n  vsv [a, b]\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. vsv [a, b]\\<^sub>\\<circ>", "by auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<D>\\<^sub>\\<circ> [a, b]\\<^sub>\\<circ> = 2\\<^sub>\\<nat>\n 2. \\<forall>i\\<in>elts (2\\<^sub>\\<nat>).\n       [a, b]\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<in>\\<^sub>\\<circ> f i", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> [a, b]\\<^sub>\\<circ> = 2\\<^sub>\\<nat>", "using af bf"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> f (0\\<^sub>\\<nat>)\n  b \\<in>\\<^sub>\\<circ> f (1\\<^sub>\\<nat>)\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> [a, b]\\<^sub>\\<circ> = 2\\<^sub>\\<nat>", "unfolding two"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> f (0\\<^sub>\\<nat>)\n  b \\<in>\\<^sub>\\<circ> f (1\\<^sub>\\<nat>)\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> [a, b]\\<^sub>\\<circ> =\n    set {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>}", "by (auto intro!: vsubset_antisym)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>elts (2\\<^sub>\\<nat>).\n       [a, b]\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<in>\\<^sub>\\<circ> f i", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>elts (2\\<^sub>\\<nat>).\n       [a, b]\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<in>\\<^sub>\\<circ> f i", "unfolding two"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>elts (set {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>}).\n       [a, b]\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<in>\\<^sub>\\<circ> f i", "using hyp VSigmaE2 small_empty vcons_vdoubleton"], ["proof (prove)\nusing this:\n  \\<langle>a, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> f (0\\<^sub>\\<nat>) \\<times>\\<^sub>\\<circ>\n                      f (1\\<^sub>\\<nat>)\n  \\<lbrakk>\\<langle>?a, ?b\\<rangle> \\<in>\\<^sub>\\<circ> VSigma ?A ?B;\n   \\<lbrakk>?a \\<in>\\<^sub>\\<circ> ?A; ?b \\<in>\\<^sub>\\<circ> ?B ?a\\<rbrakk>\n   \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  small {}\n  [?a, ?b]\\<^sub>\\<circ> =\n  set {\\<langle>0\\<^sub>\\<nat>, ?a\\<rangle>,\n       \\<langle>1\\<^sub>\\<nat>, ?b\\<rangle>}\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>elts (set {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>}).\n       [a, b]\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<in>\\<^sub>\\<circ> f i", "by (auto simp: vinsert_set_insert_eq)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> vproduct (2\\<^sub>\\<nat>) f\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Connections.\\<close>"], ["", "lemma vcpower_two_ftimes: \"A ^\\<^sub>\\<times> 2\\<^sub>\\<nat> = A \\<times>\\<^sub>\\<bullet> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A ^\\<^sub>\\<times> 2\\<^sub>\\<nat> = A \\<times>\\<^sub>\\<bullet> A", "unfolding vcpower_def ftimes_def two"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>set\n         {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>}.\n        A) =\n    (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>set\n         {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>}.\n        if i = []\\<^sub>\\<circ> \\<Rightarrow> A | otherwise \\<Rightarrow> A)", "by simp"], ["", "lemma vcpower_two_ftimesI[intro]: \n  assumes \"x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<bullet> A\"\n  shows \"x \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> 2\\<^sub>\\<nat>", "using assms"], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<bullet> A\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> 2\\<^sub>\\<nat>", "unfolding ftimes_def two"], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>set\n                             {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>}.\n                            if i = []\\<^sub>\\<circ> \\<Rightarrow> A \n                             | otherwise \\<Rightarrow> A)\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times>\n                          set {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>}", "by auto"], ["", "lemma vcpower_two_ftimesD[dest]:\n  assumes \"x \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\"\n  shows \"x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<bullet> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<bullet> A", "using assms"], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<bullet> A", "unfolding vcpower_def ftimes_def two"], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>set\n                             {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>}.\n                            A)\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>set\n                               {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>}.\n                              if i = []\\<^sub>\\<circ> \\<Rightarrow> A \n                               | otherwise \\<Rightarrow> A)", "by simp"], ["", "lemma vcpower_two_ftimesE[elim]:\n  assumes \"x \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\" and \"x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<bullet> A \\<Longrightarrow> P\"\n  shows P"], ["proof (prove)\ngoal (1 subgoal):\n 1. P", "using assms"], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n  x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<bullet> A \\<Longrightarrow> P\n\ngoal (1 subgoal):\n 1. P", "unfolding vcpower_def ftimes_def two"], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>set\n                             {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>}.\n                            A)\n  x \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>set\n                             {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>}.\n                            if i = []\\<^sub>\\<circ> \\<Rightarrow> A \n                             | otherwise \\<Rightarrow> A) \\<Longrightarrow>\n  P\n\ngoal (1 subgoal):\n 1. P", "by simp"], ["", "lemma vfsequence_vcpower_two_vpair: \"[a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> 2\\<^sub>\\<nat> \\<longleftrightarrow> \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([a, b]\\<^sub>\\<circ>\n     \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> 2\\<^sub>\\<nat>) =\n    (\\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> A)", "proof(rule iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. [a, b]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> 2\\<^sub>\\<nat> \\<Longrightarrow>\n    \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> A\n 2. \\<langle>a, b\\<rangle>\n    \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> A \\<Longrightarrow>\n    [a, b]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> 2\\<^sub>\\<nat>", "show \"[a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> 2\\<^sub>\\<nat> \\<Longrightarrow> \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [a, b]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> 2\\<^sub>\\<nat> \\<Longrightarrow>\n    \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> A", "by (elim vcpowerE, unfold vproduct_vpair)"], ["proof (state)\nthis:\n  [a, b]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> 2\\<^sub>\\<nat> \\<Longrightarrow>\n  \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. \\<langle>a, b\\<rangle>\n    \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> A \\<Longrightarrow>\n    [a, b]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> 2\\<^sub>\\<nat>", "qed (intro vcpowerI, unfold vproduct_vpair)"], ["", "lemma vsv_vfsequence_two: \n  assumes \"vsv gf\" and \"\\<D>\\<^sub>\\<circ> gf = 2\\<^sub>\\<nat>\"\n  shows \"[vpfst gf, vpsnd gf]\\<^sub>\\<circ> = gf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ> =\n    gf", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. [gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ> =\n    gf", "interpret gf: vsv gf"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv gf", "by (auto intro: assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. [gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ> =\n    gf", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. [gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ> =\n    gf", "by\n      (\n        rule sym,\n        rule vsv_eqI, \n        blast, \n        blast, \n        simp add: assms(2) nat_omega_simps,\n        unfold assms(2),\n        elim_in_numeral,\n        all\\<open>simp add: nat_omega_simps\\<close>\n      )"], ["proof (state)\nthis:\n  [gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n   gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ> =\n  gf\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vsv_vfsequence_three: \n  assumes \"vsv hgf\" and \"\\<D>\\<^sub>\\<circ> hgf = 3\\<^sub>\\<nat>\"\n  shows \"[vpfst hgf, vpsnd hgf, vpthrd hgf]\\<^sub>\\<circ> = hgf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [hgf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>, hgf\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     hgf\\<lparr>2\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ> =\n    hgf", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. [hgf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>, hgf\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     hgf\\<lparr>2\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ> =\n    hgf", "interpret hgf: vsv hgf"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv hgf", "by (auto intro: assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. [hgf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>, hgf\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     hgf\\<lparr>2\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ> =\n    hgf", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. [hgf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>, hgf\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     hgf\\<lparr>2\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ> =\n    hgf", "by\n      (\n        rule sym,\n        rule vsv_eqI, \n        blast, \n        blast, \n        simp add: assms(2) nat_omega_simps,\n        unfold assms(2),\n        elim_in_numeral,\n        all\\<open>simp add: nat_omega_simps\\<close>\n      )"], ["proof (state)\nthis:\n  [hgf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>, hgf\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n   hgf\\<lparr>2\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ> =\n  hgf\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Sequence as an element of a Cartesian power of a set\\<close>"], ["", "lemma vcons_in_vcpowerI[intro!]: \n  assumes \"n \\<in>\\<^sub>\\<circ> \\<omega>\" \n    and \"xs \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> vcard xs\" \n    and \"x \\<in>\\<^sub>\\<circ> A\" \n    and \"n = vcard (xs #\\<^sub>\\<circ> x)\" \n  shows \"xs #\\<^sub>\\<circ> x \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs #\\<^sub>\\<circ> x \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> n", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. xs #\\<^sub>\\<circ> x \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> n", "interpret vfsequence xs"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence xs", "using assms"], ["proof (prove)\nusing this:\n  n \\<in>\\<^sub>\\<circ> \\<omega>\n  xs \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> vcard xs\n  x \\<in>\\<^sub>\\<circ> A\n  n = vcard (xs #\\<^sub>\\<circ> x)\n\ngoal (1 subgoal):\n 1. vfsequence xs", "by\n      (\n        meson \n          vcons_vsubset \n          vfinite_vcard_omega_iff \n          vfinite_vsubset \n          vfsequence_vcpower\n      )"], ["proof (state)\ngoal (1 subgoal):\n 1. xs #\\<^sub>\\<circ> x \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> n", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. xs #\\<^sub>\\<circ> x \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> n", "by \n      (\n        metis \n          assms(2,3,4)\n          vcpower_vrange \n          vfsequence_vcons \n          vfsequence_vcons_vrange \n          vfsequence.vfsequence_vrange_vcpower \n          vsubset_vinsert_leftI\n      )"], ["proof (state)\nthis:\n  xs #\\<^sub>\\<circ> x \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vcons_in_vcpowerD[dest]: \n  assumes \"xs #\\<^sub>\\<circ> x \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> n\" and \"n \\<in>\\<^sub>\\<circ> \\<omega>\"\n  shows \"xs \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> vcard xs\" \n    and \"x \\<in>\\<^sub>\\<circ> A\" \n    and \"n = vcard (xs #\\<^sub>\\<circ> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> vcard xs &&&\n    x \\<in>\\<^sub>\\<circ> A &&& n = vcard (xs #\\<^sub>\\<circ> x)", "proof-"], ["proof (state)\ngoal (3 subgoals):\n 1. xs \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> vcard xs\n 2. x \\<in>\\<^sub>\\<circ> A\n 3. n = vcard (xs #\\<^sub>\\<circ> x)", "interpret vfsequence xs"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence xs", "by \n      (\n        meson \n          assms \n          vfsequence.vfsequence_vremove_vcons_vfsequence \n          vfsequence_vcpower\n      )"], ["proof (state)\ngoal (3 subgoals):\n 1. xs \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> vcard xs\n 2. x \\<in>\\<^sub>\\<circ> A\n 3. n = vcard (xs #\\<^sub>\\<circ> x)", "from assms vfsequence_vcard_vcons"], ["proof (chain)\npicking this:\n  xs #\\<^sub>\\<circ> x \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> n\n  n \\<in>\\<^sub>\\<circ> \\<omega>\n  vcard (xs #\\<^sub>\\<circ> ?x) = ZFC_in_HOL.succ (vcard xs)", "show \"n = vcard (xs #\\<^sub>\\<circ> x)\""], ["proof (prove)\nusing this:\n  xs #\\<^sub>\\<circ> x \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> n\n  n \\<in>\\<^sub>\\<circ> \\<omega>\n  vcard (xs #\\<^sub>\\<circ> ?x) = ZFC_in_HOL.succ (vcard xs)\n\ngoal (1 subgoal):\n 1. n = vcard (xs #\\<^sub>\\<circ> x)", "by auto"], ["proof (state)\nthis:\n  n = vcard (xs #\\<^sub>\\<circ> x)\n\ngoal (2 subgoals):\n 1. xs \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> vcard xs\n 2. x \\<in>\\<^sub>\\<circ> A", "then"], ["proof (chain)\npicking this:\n  n = vcard (xs #\\<^sub>\\<circ> x)", "show \"xs \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> vcard xs\""], ["proof (prove)\nusing this:\n  n = vcard (xs #\\<^sub>\\<circ> x)\n\ngoal (1 subgoal):\n 1. xs \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> vcard xs", "by \n      (\n        metis \n          assms(1) \n          vcpower_vrange \n          vfsequence_vcons_vrange \n          vfsequence_vrange_vcpower \n          vsubset_vinsert_leftD\n      )"], ["proof (state)\nthis:\n  xs \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> vcard xs\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>\\<circ> A", "show \"x \\<in>\\<^sub>\\<circ> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>\\<circ> A", "by \n      (\n        metis \n          assms(1) \n          vcpower_vrange \n          vfsequence.vfsequence_vcons_vrange \n          vfsequence_axioms \n          vinsertI1 \n          vsubsetE\n      )"], ["proof (state)\nthis:\n  x \\<in>\\<^sub>\\<circ> A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vcons_in_vcpowerE1[elim!]: \n  assumes \"xs #\\<^sub>\\<circ> x \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> n\" and \"n \\<in>\\<^sub>\\<circ> \\<omega>\"\n  obtains \"xs \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> vcard xs\" and \"x \\<in>\\<^sub>\\<circ> A\" and \"n = vcard (xs #\\<^sub>\\<circ> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>xs \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> vcard xs;\n      x \\<in>\\<^sub>\\<circ> A; n = vcard (xs #\\<^sub>\\<circ> x)\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  xs #\\<^sub>\\<circ> x \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> n\n  n \\<in>\\<^sub>\\<circ> \\<omega>\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>xs \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> vcard xs;\n      x \\<in>\\<^sub>\\<circ> A; n = vcard (xs #\\<^sub>\\<circ> x)\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["", "lemma vcons_in_vcpowerE2: \n  assumes \"xs \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> n\" and \"n \\<in>\\<^sub>\\<circ> \\<omega>\" and \"0 \\<in>\\<^sub>\\<circ> n\"\n  obtains x xs' where \"xs = xs' #\\<^sub>\\<circ> x\"\n    and \"xs' \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> vcard xs'\" \n    and \"x \\<in>\\<^sub>\\<circ> A\" \n    and \"n = vcard (xs' #\\<^sub>\\<circ> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>xs' x.\n        \\<lbrakk>xs = xs' #\\<^sub>\\<circ> x;\n         xs' \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> vcard xs';\n         x \\<in>\\<^sub>\\<circ> A; n = vcard (xs' #\\<^sub>\\<circ> x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>xs' x.\n        \\<lbrakk>xs = xs' #\\<^sub>\\<circ> x;\n         xs' \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> vcard xs';\n         x \\<in>\\<^sub>\\<circ> A; n = vcard (xs' #\\<^sub>\\<circ> x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "interpret vfsequence xs"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence xs", "using assms(1,2)"], ["proof (prove)\nusing this:\n  xs \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> n\n  n \\<in>\\<^sub>\\<circ> \\<omega>\n\ngoal (1 subgoal):\n 1. vfsequence xs", "by auto"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>xs' x.\n        \\<lbrakk>xs = xs' #\\<^sub>\\<circ> x;\n         xs' \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> vcard xs';\n         x \\<in>\\<^sub>\\<circ> A; n = vcard (xs' #\\<^sub>\\<circ> x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms"], ["proof (chain)\npicking this:\n  xs \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> n\n  n \\<in>\\<^sub>\\<circ> \\<omega>\n  []\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> n", "obtain x xs' where xs_def: \"xs = xs' #\\<^sub>\\<circ> x\""], ["proof (prove)\nusing this:\n  xs \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> n\n  n \\<in>\\<^sub>\\<circ> \\<omega>\n  []\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> n\n\ngoal (1 subgoal):\n 1. (\\<And>xs' x.\n        xs = xs' #\\<^sub>\\<circ> x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by \n      (\n        metis \n          eq0_iff vcard_0 vcpower_vdomain vfsequence_vcons_ex vfsequence_vdomain\n      )"], ["proof (state)\nthis:\n  xs = xs' #\\<^sub>\\<circ> x\n\ngoal (1 subgoal):\n 1. (\\<And>xs' x.\n        \\<lbrakk>xs = xs' #\\<^sub>\\<circ> x;\n         xs' \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> vcard xs';\n         x \\<in>\\<^sub>\\<circ> A; n = vcard (xs' #\\<^sub>\\<circ> x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from vcons_in_vcpowerE1[OF assms(1)[unfolded xs_def] assms(2)]"], ["proof (chain)\npicking this:\n  (\\<lbrakk>xs' \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> vcard xs';\n    x \\<in>\\<^sub>\\<circ> A; n = vcard (xs' #\\<^sub>\\<circ> x)\\<rbrakk>\n   \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "have\n    \"xs' \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> vcard xs'\" and \"x \\<in>\\<^sub>\\<circ> A\" and \"n = vcard (xs' #\\<^sub>\\<circ> x)\""], ["proof (prove)\nusing this:\n  (\\<lbrakk>xs' \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> vcard xs';\n    x \\<in>\\<^sub>\\<circ> A; n = vcard (xs' #\\<^sub>\\<circ> x)\\<rbrakk>\n   \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. xs' \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> vcard xs' &&&\n    x \\<in>\\<^sub>\\<circ> A &&& n = vcard (xs' #\\<^sub>\\<circ> x)", "by blast+"], ["proof (state)\nthis:\n  xs' \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> vcard xs'\n  x \\<in>\\<^sub>\\<circ> A\n  n = vcard (xs' #\\<^sub>\\<circ> x)\n\ngoal (1 subgoal):\n 1. (\\<And>xs' x.\n        \\<lbrakk>xs = xs' #\\<^sub>\\<circ> x;\n         xs' \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> vcard xs';\n         x \\<in>\\<^sub>\\<circ> A; n = vcard (xs' #\\<^sub>\\<circ> x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from xs_def this"], ["proof (chain)\npicking this:\n  xs = xs' #\\<^sub>\\<circ> x\n  xs' \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> vcard xs'\n  x \\<in>\\<^sub>\\<circ> A\n  n = vcard (xs' #\\<^sub>\\<circ> x)", "show ?thesis"], ["proof (prove)\nusing this:\n  xs = xs' #\\<^sub>\\<circ> x\n  xs' \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> vcard xs'\n  x \\<in>\\<^sub>\\<circ> A\n  n = vcard (xs' #\\<^sub>\\<circ> x)\n\ngoal (1 subgoal):\n 1. thesis", "by (clarsimp simp: that)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vcons_vcpower1E: (*TODO: generalize*)\n  assumes \"xs \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> 1\\<^sub>\\<nat>\"  \n  obtains x where \"xs = [x]\\<^sub>\\<circ>\" and \"x \\<in>\\<^sub>\\<circ> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>xs = [x]\\<^sub>\\<circ>; x \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>xs = [x]\\<^sub>\\<circ>; x \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have 01: \"0 \\<in>\\<^sub>\\<circ> 1\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. []\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> 1\\<^sub>\\<nat>", "by simp"], ["proof (state)\nthis:\n  []\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> 1\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>xs = [x]\\<^sub>\\<circ>; x \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from vcons_in_vcpowerE2[OF assms ord_of_nat_\\<omega> 01]"], ["proof (chain)\npicking this:\n  (\\<And>x xs'.\n      \\<lbrakk>xs = xs' #\\<^sub>\\<circ> x;\n       xs' \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> vcard xs';\n       x \\<in>\\<^sub>\\<circ> A;\n       1\\<^sub>\\<nat> = vcard (xs' #\\<^sub>\\<circ> x)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain x xs' \n    where xs_def: \"xs = xs' #\\<^sub>\\<circ> x\"\n      and xs': \"xs' \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> vcard xs'\" \n      and x: \"x \\<in>\\<^sub>\\<circ> A\" \n      and one: \"1\\<^sub>\\<nat> = vcard (xs' #\\<^sub>\\<circ> x)\""], ["proof (prove)\nusing this:\n  (\\<And>x xs'.\n      \\<lbrakk>xs = xs' #\\<^sub>\\<circ> x;\n       xs' \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> vcard xs';\n       x \\<in>\\<^sub>\\<circ> A;\n       1\\<^sub>\\<nat> = vcard (xs' #\\<^sub>\\<circ> x)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>xs' x.\n        \\<lbrakk>xs = xs' #\\<^sub>\\<circ> x;\n         xs' \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> vcard xs';\n         x \\<in>\\<^sub>\\<circ> A;\n         1\\<^sub>\\<nat> = vcard (xs' #\\<^sub>\\<circ> x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  xs = xs' #\\<^sub>\\<circ> x\n  xs' \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> vcard xs'\n  x \\<in>\\<^sub>\\<circ> A\n  1\\<^sub>\\<nat> = vcard (xs' #\\<^sub>\\<circ> x)\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>xs = [x]\\<^sub>\\<circ>; x \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "interpret xs: vfsequence xs"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence xs", "using assms"], ["proof (prove)\nusing this:\n  xs \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> 1\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. vfsequence xs", "by (auto intro: vfsequence_vcpower)"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>xs = [x]\\<^sub>\\<circ>; x \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "interpret xs': vfsequence xs'"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence xs'", "using xs' xs_def xs.vfsequence_vremove_vcons_vfsequence"], ["proof (prove)\nusing this:\n  xs' \\<in>\\<^sub>\\<circ> A ^\\<^sub>\\<times> vcard xs'\n  xs = xs' #\\<^sub>\\<circ> x\n  xs = ?xs' #\\<^sub>\\<circ> ?x \\<Longrightarrow> vfsequence ?xs'\n\ngoal (1 subgoal):\n 1. vfsequence xs'", "by blast"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>xs = [x]\\<^sub>\\<circ>; x \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from one"], ["proof (chain)\npicking this:\n  1\\<^sub>\\<nat> = vcard (xs' #\\<^sub>\\<circ> x)", "have \"vcard xs' = 0\""], ["proof (prove)\nusing this:\n  1\\<^sub>\\<nat> = vcard (xs' #\\<^sub>\\<circ> x)\n\ngoal (1 subgoal):\n 1. vcard xs' = []\\<^sub>\\<circ>", "by (metis ord_of_nat_succ_vempty succ_inject_iff xs'.vfsequence_vcard_vcons)"], ["proof (state)\nthis:\n  vcard xs' = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>xs = [x]\\<^sub>\\<circ>; x \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  vcard xs' = []\\<^sub>\\<circ>", "have \"xs = [x]\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  vcard xs' = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. xs = [x]\\<^sub>\\<circ>", "unfolding xs_def"], ["proof (prove)\nusing this:\n  vcard xs' = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. xs' #\\<^sub>\\<circ> x = [x]\\<^sub>\\<circ>", "by (simp add: vcard_vempty)"], ["proof (state)\nthis:\n  xs = [x]\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>xs = [x]\\<^sub>\\<circ>; x \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with x that"], ["proof (chain)\npicking this:\n  x \\<in>\\<^sub>\\<circ> A\n  \\<lbrakk>xs = [?x]\\<^sub>\\<circ>; ?x \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n  \\<Longrightarrow> thesis\n  xs = [x]\\<^sub>\\<circ>", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>\\<circ> A\n  \\<lbrakk>xs = [?x]\\<^sub>\\<circ>; ?x \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n  \\<Longrightarrow> thesis\n  xs = [x]\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. thesis", "by simp"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>\\newpage\\<close>"], ["", "end"]]}