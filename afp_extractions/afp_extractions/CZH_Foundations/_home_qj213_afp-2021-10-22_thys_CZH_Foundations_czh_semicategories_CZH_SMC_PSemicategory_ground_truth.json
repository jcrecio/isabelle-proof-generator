{"file_name": "/home/qj213/afp-2021-10-22/thys/CZH_Foundations/czh_semicategories/CZH_SMC_PSemicategory.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CZH_Foundations", "problem_names": ["lemma smc_prod_components:\n  shows \"(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<lparr>Obj\\<rparr> = (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<lparr>Obj\\<rparr>)\"\n    and \"(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<lparr>Arr\\<rparr> = (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<lparr>Arr\\<rparr>)\"\n    and \"(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<lparr>Dom\\<rparr> = \n      (\\<lambda>f\\<in>\\<^sub>\\<circ>(\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<lparr>Arr\\<rparr>). (\\<lambda>i\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<lparr>Dom\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>))\"\n    and \"(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<lparr>Cod\\<rparr> = \n      (\\<lambda>f\\<in>\\<^sub>\\<circ>(\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<lparr>Arr\\<rparr>). (\\<lambda>i\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<lparr>Cod\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>))\"\n    and \"(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<lparr>Comp\\<rparr> = \n      (\\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs (dg_prod I \\<AA>). (\\<lambda>i\\<in>\\<^sub>\\<circ>I. gf\\<lparr>0\\<rparr>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub> gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>))\"", "lemma smc_dg_smc_prod[slicing_commute]: \n  \"dg_prod I (\\<lambda>i. smc_dg (\\<AA> i)) = smc_dg (smc_prod I \\<AA>)\"", "lemmas_with \n  [where \\<AA>=\\<open>\\<lambda>i. smc_dg (\\<AA> i)\\<close>, unfolded slicing_simps slicing_commute]:\n  smc_prod_ObjI = dg_prod_ObjI\n  and smc_prod_ObjD = dg_prod_ObjD\n  and smc_prod_ObjE = dg_prod_ObjE\n  and smc_prod_Obj_cong = dg_prod_Obj_cong\n  and smc_prod_ArrI = dg_prod_ArrI\n  and smc_prod_ArrD = dg_prod_ArrD\n  and smc_prod_ArrE = dg_prod_ArrE\n  and smc_prod_Arr_cong = dg_prod_Arr_cong\n  and smc_prod_Dom_vsv[smc_cs_intros] = dg_prod_Dom_vsv\n  and smc_prod_Dom_vdomain[smc_cs_simps] = dg_prod_Dom_vdomain\n  and smc_prod_Dom_app = dg_prod_Dom_app\n  and smc_prod_Dom_app_component_app[smc_cs_simps] = \n    dg_prod_Dom_app_component_app\n  and smc_prod_Cod_vsv[smc_cs_intros] = dg_prod_Cod_vsv\n  and smc_prod_Cod_app = dg_prod_Cod_app\n  and smc_prod_Cod_vdomain[smc_cs_simps] = dg_prod_Cod_vdomain\n  and smc_prod_Cod_app_component_app[smc_cs_simps] = \n    dg_prod_Cod_app_component_app\n  and smc_prod_vunion_Obj_in_Obj = dg_prod_vunion_Obj_in_Obj\n  and smc_prod_vdiff_vunion_Obj_in_Obj = dg_prod_vdiff_vunion_Obj_in_Obj\n  and smc_prod_vunion_Arr_in_Arr = dg_prod_vunion_Arr_in_Arr\n  and smc_prod_vdiff_vunion_Arr_in_Arr = dg_prod_vdiff_vunion_Arr_in_Arr", "lemma smc_prod_dg_prod_is_arr: \n  \"g : b \\<mapsto>\\<^bsub>\\<Prod>\\<^sub>D\\<^sub>Gi\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<^esub> c \\<longleftrightarrow> g : b \\<mapsto>\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<^esub> c\"", "lemma smc_prod_composable_arrs_dg_prod:\n  \"composable_arrs (\\<Prod>\\<^sub>D\\<^sub>Gi\\<in>\\<^sub>\\<circ>I. \\<AA> i) = composable_arrs (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\"", "lemma (in psemicategory_base) psemicategory_base_axioms'[smc_prod_cs_intros]: \n  assumes \"\\<alpha>' = \\<alpha>\" and \"I' = I\"\n  shows \"psemicategory_base \\<alpha>' I' \\<AA>\"", "lemma psemicategory_base_pdigraph_baseI:\n  assumes \"pdigraph_base \\<alpha> I (\\<lambda>i. smc_dg (\\<AA> i))\" \n    and \"\\<And>i. i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow> semicategory \\<alpha> (\\<AA> i)\"\n  shows \"psemicategory_base \\<alpha> I \\<AA>\"", "lemma psmc_pdigraph_base: \"pdigraph_base \\<alpha> I (\\<lambda>i. smc_dg (\\<AA> i))\"", "lemmas_with [unfolded slicing_simps slicing_commute]: \n  psmc_Obj_in_Vset = pdg.pdg_Obj_in_Vset\n  and psmc_Arr_in_Vset = pdg.pdg_Arr_in_Vset\n  and psmc_smc_prod_Obj_in_Vset = pdg.pdg_dg_prod_Obj_in_Vset\n  and psmc_smc_prod_Arr_in_Vset = pdg.pdg_dg_prod_Arr_in_Vset\n  and smc_prod_Dom_app_in_Obj[smc_cs_intros] = pdg.dg_prod_Dom_app_in_Obj\n  and smc_prod_Cod_app_in_Obj[smc_cs_intros] = pdg.dg_prod_Cod_app_in_Obj\n  and smc_prod_is_arrI = pdg.dg_prod_is_arrI\n  and smc_prod_is_arrD[dest] = pdg.dg_prod_is_arrD\n  and smc_prod_is_arrE[elim] = pdg.dg_prod_is_arrE", "lemmas [smc_cs_intros] = psemicategory_base.smc_prod_is_arrD(7)", "lemma (in psemicategory_base) psmc_vsubset_index_psemicategory_base:\n  assumes \"J \\<subseteq>\\<^sub>\\<circ> I\"\n  shows \"psemicategory_base \\<alpha> J \\<AA>\"", "lemma smc_prod_Comp:\n  \"(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<lparr>Comp\\<rparr> = \n    (\n      \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i). \n        (\\<lambda>i\\<in>\\<^sub>\\<circ>I. gf\\<lparr>0\\<rparr>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub> gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>)\n    )\"", "lemma smc_prod_Comp_vdomain[smc_cs_simps]: \n  \"\\<D>\\<^sub>\\<circ> ((\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<lparr>Comp\\<rparr>) = composable_arrs (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\"", "lemma smc_prod_Comp_app: \n  assumes \"g : b \\<mapsto>\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<^esub> c\" and \"f : a \\<mapsto>\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<^esub> b\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<^esub> f = (\\<lambda>i\\<in>\\<^sub>\\<circ>I. g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub> f\\<lparr>i\\<rparr>)\"", "lemma smc_prod_Comp_app_component[smc_cs_simps]: \n  assumes \"g : b \\<mapsto>\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<^esub> c\" \n    and \"f : a \\<mapsto>\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<^esub> b\"\n    and \"i \\<in>\\<^sub>\\<circ> I\"\n  shows \"(g \\<circ>\\<^sub>A\\<^bsub>(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<^esub> f)\\<lparr>i\\<rparr> = g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub> f\\<lparr>i\\<rparr>\"", "lemma (in psemicategory_base) smc_prod_Comp_vrange: \n  \"\\<R>\\<^sub>\\<circ> ((\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<lparr>Comp\\<rparr>) \\<subseteq>\\<^sub>\\<circ> (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<lparr>Arr\\<rparr>\"", "lemma smc_prod_Comp_app_vdomain[smc_cs_simps]:\n  assumes \"g : b \\<mapsto>\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<^esub> c\" and \"f : a \\<mapsto>\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<^esub> b\"\n  shows \"\\<D>\\<^sub>\\<circ> (g \\<circ>\\<^sub>A\\<^bsub>(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<^esub> f) = I\"", "lemma (in psemicategory_base) psmc_tiny_semicategory_smc_prod:\n  assumes \"\\<Z> \\<beta>\" and \"\\<alpha> \\<in>\\<^sub>\\<circ> \\<beta>\" \n  shows \"tiny_semicategory \\<beta> (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\"", "lemma (in psemicategory) psemicategory_axioms'[smc_prod_cs_intros]: \n  assumes \"\\<alpha>' = \\<alpha>\" and \"I' = I\"\n  shows \"psemicategory \\<alpha>' I' \\<AA>\"", "lemmas [smc_prod_cs_intros] = psemicategoryD(1)", "lemma psemicategory_pdigraphI:\n  assumes \"pdigraph \\<alpha> I (\\<lambda>i. smc_dg (\\<AA> i))\" \n    and \"\\<And>i. i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow> semicategory \\<alpha> (\\<AA> i)\"\n  shows \"psemicategory \\<alpha> I \\<AA>\"", "lemma psmc_pdigraph: \"pdigraph \\<alpha> I (\\<lambda>i. smc_dg (\\<AA> i))\"", "lemmas_with [unfolded slicing_simps slicing_commute]: \n  psmc_Obj_vsubset_Vset' = pdg.pdg_Obj_vsubset_Vset'\n  and psmc_Hom_vifunion_in_Vset' = pdg.pdg_Hom_vifunion_in_Vset'\n  and psmc_smc_prod_vunion_is_arr = pdg.pdg_dg_prod_vunion_is_arr\n  and psmc_smc_prod_vdiff_vunion_is_arr = pdg.pdg_dg_prod_vdiff_vunion_is_arr", "lemma (in psemicategory) psmc_vsubset_index_psemicategory:\n  assumes \"J \\<subseteq>\\<^sub>\\<circ> I\"\n  shows \"psemicategory \\<alpha> J \\<AA>\"", "lemma (in psemicategory) psmc_semicategory_smc_prod: \n  \"semicategory \\<alpha> (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\"", "lemma (in finite_psemicategory) finite_psemicategory_axioms[smc_prod_cs_intros]: \n  assumes \"\\<alpha>' = \\<alpha>\" and \"I' = I\"\n  shows \"finite_psemicategory \\<alpha>' I' \\<AA>\"", "lemmas [smc_prod_cs_intros] = finite_psemicategoryD(1)", "lemma finite_psemicategory_finite_pdigraphI:\n  assumes \"finite_pdigraph \\<alpha> I (\\<lambda>i. smc_dg (\\<AA> i))\" \n    and \"\\<And>i. i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow> semicategory \\<alpha> (\\<AA> i)\"\n  shows \"finite_psemicategory \\<alpha> I \\<AA>\"", "lemma (in psemicategory) psmc_smc_prod_vunion_Comp:\n  assumes \"vdisjnt J K\"\n    and \"J \\<subseteq>\\<^sub>\\<circ> I\"\n    and \"K \\<subseteq>\\<^sub>\\<circ> I\"\n    and \"g : b \\<mapsto>\\<^bsub>(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Cj\\<in>\\<^sub>\\<circ>J. \\<AA> j)\\<^esub> c\"\n    and \"g' : b' \\<mapsto>\\<^bsub>(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ck\\<in>\\<^sub>\\<circ>K. \\<AA> k)\\<^esub> c'\"\n    and \"f : a \\<mapsto>\\<^bsub>(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Cj\\<in>\\<^sub>\\<circ>J. \\<AA> j)\\<^esub> b\"\n    and \"f' : a' \\<mapsto>\\<^bsub>(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ck\\<in>\\<^sub>\\<circ>K. \\<AA> k)\\<^esub> b'\"\n  shows \"(g \\<circ>\\<^sub>A\\<^bsub>(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Cj\\<in>\\<^sub>\\<circ>J. \\<AA> j)\\<^esub> f) \\<union>\\<^sub>\\<circ> (g' \\<circ>\\<^sub>A\\<^bsub>(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Cj\\<in>\\<^sub>\\<circ>K. \\<AA> j)\\<^esub> f') = \n    g \\<union>\\<^sub>\\<circ> g' \\<circ>\\<^sub>A\\<^bsub>(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Cj\\<in>\\<^sub>\\<circ>J \\<union>\\<^sub>\\<circ> K. \\<AA> j)\\<^esub> f \\<union>\\<^sub>\\<circ> f'\"", "lemma (in psemicategory) psmc_smc_prod_vdiff_vunion_Comp:\n  assumes \"J \\<subseteq>\\<^sub>\\<circ> I\"   \n    and \"g : b \\<mapsto>\\<^bsub>(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Cj\\<in>\\<^sub>\\<circ>I -\\<^sub>\\<circ> J. \\<AA> j)\\<^esub> c\"\n    and \"g' : b' \\<mapsto>\\<^bsub>(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ck\\<in>\\<^sub>\\<circ>J. \\<AA> k)\\<^esub> c'\"\n    and \"f : a \\<mapsto>\\<^bsub>(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Cj\\<in>\\<^sub>\\<circ>I -\\<^sub>\\<circ> J. \\<AA> j)\\<^esub> b\"\n    and \"f' : a' \\<mapsto>\\<^bsub>(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ck\\<in>\\<^sub>\\<circ>J. \\<AA> k)\\<^esub> b'\"\n  shows \"(g \\<circ>\\<^sub>A\\<^bsub>(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Cj\\<in>\\<^sub>\\<circ>I -\\<^sub>\\<circ> J. \\<AA> j)\\<^esub> f) \\<union>\\<^sub>\\<circ> (g' \\<circ>\\<^sub>A\\<^bsub>(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Cj\\<in>\\<^sub>\\<circ>J. \\<AA> j)\\<^esub> f') = \n    g \\<union>\\<^sub>\\<circ> g' \\<circ>\\<^sub>A\\<^bsub>(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Cj\\<in>\\<^sub>\\<circ>I. \\<AA> j)\\<^esub> f \\<union>\\<^sub>\\<circ> f'\"", "lemma smcf_proj_components:\n  shows \"(\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i)\\<lparr>ObjMap\\<rparr> = (\\<lambda>a\\<in>\\<^sub>\\<circ>(\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<lparr>Obj\\<rparr>). a\\<lparr>i\\<rparr>)\"\n    and \"(\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i)\\<lparr>ArrMap\\<rparr> = (\\<lambda>f\\<in>\\<^sub>\\<circ>(\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<lparr>Arr\\<rparr>). f\\<lparr>i\\<rparr>)\"\n    and \"(\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i)\\<lparr>HomDom\\<rparr> = (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\"\n    and \"(\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i)\\<lparr>HomCod\\<rparr> = \\<AA> i\"", "lemma smcf_dghm_smcf_proj[slicing_commute]: \n  \"\\<pi>\\<^sub>D\\<^sub>G I (\\<lambda>i. smc_dg (\\<AA> i)) i = smcf_dghm (\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i)\"", "lemmas_with [unfolded slicing_simps slicing_commute]: \n  smcf_proj_is_dghm = pdg.pdg_dghm_proj_is_dghm", "lemma (in psemicategory) psmc_smcf_proj_is_semifunctor: \n  assumes \"i \\<in>\\<^sub>\\<circ> I\"\n  shows \"\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i : (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i) \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA> i\"", "lemma (in psemicategory) psmc_smcf_proj_is_semifunctor':\n  assumes \"i \\<in>\\<^sub>\\<circ> I\" and \"\\<CC> = (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\" and \"\\<DD> = \\<AA> i\"\n  shows \"\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\"", "lemmas [smc_cs_intros] = psemicategory.psmc_smcf_proj_is_semifunctor'", "lemma smcf_up_components: \n  shows \"smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>ObjMap\\<rparr> = (\\<lambda>a\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Obj\\<rparr>. (\\<lambda>i\\<in>\\<^sub>\\<circ>I. \\<phi> i\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>))\"\n    and \"smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>ArrMap\\<rparr> = (\\<lambda>f\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Arr\\<rparr>. (\\<lambda>i\\<in>\\<^sub>\\<circ>I. \\<phi> i\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>))\"\n    and \"smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>HomDom\\<rparr> = \\<CC>\"\n    and \"smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>HomCod\\<rparr> = (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\"", "lemma smcf_dghm_smcf_up[slicing_commute]: \n  \"dghm_up I (\\<lambda>i. smc_dg (\\<AA> i)) (smc_dg \\<CC>) (\\<lambda>i. smcf_dghm (\\<phi> i)) = \n    smcf_dghm (smcf_up I \\<AA> \\<CC> \\<phi>)\"", "lemmas_with \n  [\n    where \\<AA>=\\<open>\\<lambda>i. smc_dg (\\<AA> i)\\<close> and \\<phi>=\\<open>\\<lambda>i. smcf_dghm (\\<phi> i)\\<close> and \\<CC>=\\<open>smc_dg \\<CC>\\<close>, \n    unfolded slicing_simps slicing_commute\n  ]:\n  smcf_up_ObjMap_vdomain[smc_cs_simps] = dghm_up_ObjMap_vdomain\n  and smcf_up_ObjMap_app = dghm_up_ObjMap_app\n  and smcf_up_ObjMap_app_vdomain[smc_cs_simps] = dghm_up_ObjMap_app_vdomain\n  and smcf_up_ObjMap_app_component[smc_cs_simps] = dghm_up_ObjMap_app_component\n  and smcf_up_ArrMap_vdomain[smc_cs_simps] = dghm_up_ArrMap_vdomain\n  and smcf_up_ArrMap_app = dghm_up_ArrMap_app\n  and smcf_up_ArrMap_app_vdomain[smc_cs_simps] = dghm_up_ArrMap_app_vdomain\n  and smcf_up_ArrMap_app_component[smc_cs_simps] = dghm_up_ArrMap_app_component", "lemma smcf_up_ObjMap_vrange:\n  assumes \"\\<And>i. i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow> \\<phi> i : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA> i\"\n  shows \"\\<R>\\<^sub>\\<circ> (smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>ObjMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<lparr>Obj\\<rparr>\"", "lemma smcf_up_ObjMap_app_vrange:\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\" and \"\\<And>i. i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow> \\<phi> i : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA> i\"\n  shows \" \\<R>\\<^sub>\\<circ> (smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>) \\<subseteq>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<lparr>Obj\\<rparr>)\"", "lemma smcf_up_ArrMap_vrange:\n  assumes \"\\<And>i. i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow> \\<phi> i : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA> i\"\n  shows \"\\<R>\\<^sub>\\<circ> (smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>ArrMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<lparr>Arr\\<rparr>\"", "lemma smcf_up_ArrMap_app_vrange:\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\" and \"\\<And>i. i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow> \\<phi> i : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA> i\"\n  shows \"\\<R>\\<^sub>\\<circ> (smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>) \\<subseteq>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<lparr>Arr\\<rparr>)\"", "lemmas_with [unfolded slicing_simps slicing_commute]: \n  psmc_dghm_comp_dghm_proj_dghm_up = pdg.pdg_dghm_comp_dghm_proj_dghm_up\n  and psmc_dghm_up_eq_dghm_proj = pdg.pdg_dghm_up_eq_dghm_proj", "lemma (in psemicategory) psmc_smcf_up_is_semifunctor:\n  assumes \"semicategory \\<alpha> \\<CC>\" and \"\\<And>i. i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow> \\<phi> i : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA> i\"\n  shows \"smcf_up I \\<AA> \\<CC> \\<phi> : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\"", "lemma (in psemicategory) psmc_Comp_smcf_proj_smcf_up: \n  assumes \"semicategory \\<alpha> \\<CC>\" \n    and \"\\<And>i. i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow> \\<phi> i : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA> i\" \n    and \"i \\<in>\\<^sub>\\<circ> I\" \n  shows \"\\<phi> i = \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F smcf_up I \\<AA> \\<CC> \\<phi>\"", "lemma (in psemicategory) psmc_smcf_up_eq_smcf_proj:\n  assumes \"\\<FF> : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\"\n    and \"\\<And>i. i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow> \\<phi> i = \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF>\"\n  shows \"smcf_up I \\<AA> \\<CC> \\<phi> = \\<FF>\"", "lemmas_with [where \\<CC>=\\<open>smc_dg \\<CC>\\<close>, unfolded slicing_simps slicing_commute]:\n  smc_singleton_ObjI = dg_singleton_ObjI\n  and smc_singleton_ObjE = dg_singleton_ObjE\n  and smc_singleton_ArrI = dg_singleton_ArrI\n  and smc_singleton_ArrE = dg_singleton_ArrE", "lemmas_with [unfolded slicing_simps slicing_commute]:\n  smc_finite_pdigraph_smc_singleton = dg.dg_finite_pdigraph_dg_singleton\n  and smc_singleton_is_arrI = dg.dg_singleton_is_arrI\n  and smc_singleton_is_arrD = dg.dg_singleton_is_arrD\n  and smc_singleton_is_arrE = dg.dg_singleton_is_arrE", "lemma (in semicategory) smc_finite_psemicategory_smc_singleton: \n  assumes \"j \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"finite_psemicategory \\<alpha> (set {j}) (\\<lambda>i. \\<CC>)\"", "lemma (in semicategory) smc_semicategory_smc_singleton:\n  assumes \"j \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"semicategory \\<alpha> (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>set {j}. \\<CC>)\"", "lemma smcf_singleton_components:\n  shows \"smcf_singleton j \\<CC>\\<lparr>ObjMap\\<rparr> = (\\<lambda>a\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Obj\\<rparr>. set {\\<langle>j, a\\<rangle>})\"\n    and \"smcf_singleton j \\<CC>\\<lparr>ArrMap\\<rparr> = (\\<lambda>f\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Arr\\<rparr>. set {\\<langle>j, f\\<rangle>})\"\n    and \"smcf_singleton j \\<CC>\\<lparr>HomDom\\<rparr> = \\<CC>\"\n    and \"smcf_singleton j \\<CC>\\<lparr>HomCod\\<rparr> = (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>set {j}. \\<CC>)\"", "lemma smcf_dghm_smcf_singleton[slicing_commute]: \n  \"dghm_singleton j (smc_dg \\<CC>)= smcf_dghm (smcf_singleton j \\<CC>)\"", "lemmas_with [where \\<CC>=\\<open>smc_dg \\<CC>\\<close>, unfolded slicing_simps slicing_commute]:\n  smcf_singleton_ObjMap_vsv[smc_cs_intros] = dghm_singleton_ObjMap_vsv\n  and smcf_singleton_ObjMap_vdomain[smc_cs_simps] = \n    dghm_singleton_ObjMap_vdomain\n  and smcf_singleton_ObjMap_vrange = dghm_singleton_ObjMap_vrange\n  and smcf_singleton_ObjMap_app[smc_prod_cs_simps] = dghm_singleton_ObjMap_app\n  and smcf_singleton_ArrMap_vsv[smc_cs_intros] = dghm_singleton_ArrMap_vsv\n  and smcf_singleton_ArrMap_vdomain[smc_cs_simps] = \n    dghm_singleton_ArrMap_vdomain\n  and smcf_singleton_ArrMap_vrange = dghm_singleton_ArrMap_vrange\n  and smcf_singleton_ArrMap_app[smc_prod_cs_simps] = dghm_singleton_ArrMap_app", "lemmas_with [unfolded slicing_simps slicing_commute]:\n  smc_smcf_singleton_is_dghm = dg.dg_dghm_singleton_is_dghm", "lemma (in semicategory) smc_smcf_singleton_is_iso_semifunctor:\n  assumes \"j \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"smcf_singleton j \\<CC> : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>set {j}. \\<CC>)\"", "lemmas [smc_cs_intros] = semicategory.smc_smcf_singleton_is_iso_semifunctor", "lemma smc_dg_smc_prod_2[slicing_commute]: \n  \"smc_dg \\<AA> \\<times>\\<^sub>D\\<^sub>G smc_dg \\<BB> = smc_dg (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\"", "lemmas_with \n  [\n    where \\<AA>=\\<open>smc_dg \\<AA>\\<close> and \\<BB>=\\<open>smc_dg \\<BB>\\<close>, \n    unfolded slicing_simps slicing_commute, \n    OF \\<AA>.smc_digraph \\<BB>.smc_digraph\n  ]:\n  smc_prod_2_ObjI = dg_prod_2_ObjI \n  and smc_prod_2_ObjI'[smc_prod_cs_intros] = dg_prod_2_ObjI'\n  and smc_prod_2_ObjE = dg_prod_2_ObjE\n  and smc_prod_2_ArrI = dg_prod_2_ArrI\n  and smc_prod_2_ArrI'[smc_prod_cs_intros] = dg_prod_2_ArrI'\n  and smc_prod_2_ArrE = dg_prod_2_ArrE\n  and smc_prod_2_is_arrI = dg_prod_2_is_arrI\n  and smc_prod_2_is_arrI'[smc_prod_cs_intros] = dg_prod_2_is_arrI'\n  and smc_prod_2_is_arrE = dg_prod_2_is_arrE\n  and smc_prod_2_Dom_vsv = dg_prod_2_Dom_vsv\n  and smc_prod_2_Dom_vdomain[smc_cs_simps] = dg_prod_2_Dom_vdomain\n  and smc_prod_2_Dom_app[smc_prod_cs_simps] = dg_prod_2_Dom_app\n  and smc_prod_2_Dom_vrange = dg_prod_2_Dom_vrange\n  and smc_prod_2_Cod_vsv = dg_prod_2_Cod_vsv\n  and smc_prod_2_Cod_vdomain[smc_cs_simps] = dg_prod_2_Cod_vdomain\n  and smc_prod_2_Cod_app[smc_prod_cs_simps] = dg_prod_2_Cod_app\n  and smc_prod_2_Cod_vrange = dg_prod_2_Cod_vrange\n  and smc_prod_2_op_smc_smc_Obj[smc_op_simps] = dg_prod_2_op_dg_dg_Obj\n  and smc_prod_2_smc_op_smc_Obj[smc_op_simps] = dg_prod_2_dg_op_dg_Obj\n  and smc_prod_2_op_smc_smc_Arr[smc_op_simps] = dg_prod_2_op_dg_dg_Arr\n  and smc_prod_2_smc_op_smc_Arr[smc_op_simps] = dg_prod_2_dg_op_dg_Arr", "lemma finite_psemicategory_smc_prod_2: \n  \"finite_psemicategory \\<alpha> (2\\<^sub>\\<nat>) (if2 \\<AA> \\<BB>)\"", "lemma semicategory_smc_prod_2[smc_cs_intros]: \"semicategory \\<alpha> (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\"", "lemma smc_prod_2_Comp_app[smc_prod_cs_simps]:\n  assumes \"[g, g']\\<^sub>\\<circ> : [b, b']\\<^sub>\\<circ> \\<mapsto>\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub> [c, c']\\<^sub>\\<circ>\" \n    and \"[f, f']\\<^sub>\\<circ> : [a, a']\\<^sub>\\<circ> \\<mapsto>\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub> [b, b']\\<^sub>\\<circ>\"\n  shows \"[g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub> [f, f']\\<^sub>\\<circ> = [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f, g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f']\\<^sub>\\<circ>\"", "lemma op_smc_smc_prod_2[smc_op_simps]: \n  \"op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>) = op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C op_smc \\<BB>\"", "lemma smcf_dghm_smcf_proj_fst[slicing_commute]: \n  \"\\<pi>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>1 (smc_dg \\<AA>) (smc_dg \\<BB>) = smcf_dghm (\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>1 \\<AA> \\<BB>)\"", "lemma smcf_dghm_smcf_proj_snd[slicing_commute]: \n  \"\\<pi>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>2 (smc_dg \\<AA>) (smc_dg \\<BB>) = smcf_dghm (\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>2 \\<AA> \\<BB>)\"", "lemmas_with \n  [\n    where \\<AA>=\\<open>smc_dg \\<AA>\\<close> and \\<BB>=\\<open>smc_dg \\<BB>\\<close>, \n    unfolded slicing_simps slicing_commute, \n    OF \\<AA>.smc_digraph \\<BB>.smc_digraph\n  ]:\n  smcf_proj_fst_ObjMap_app[smc_cs_simps] = dghm_proj_fst_ObjMap_app \n  and smcf_proj_snd_ObjMap_app[smc_cs_simps] = dghm_proj_snd_ObjMap_app\n  and smcf_proj_fst_ArrMap_app[smc_cs_simps] = dghm_proj_fst_ArrMap_app\n  and smcf_proj_snd_ArrMap_app[smc_cs_simps] = dghm_proj_snd_ArrMap_app", "lemma smcf_proj_fst_HomDom: \"\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>1 \\<AA> \\<BB>\\<lparr>HomDom\\<rparr> = \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\"", "lemma smcf_proj_fst_HomCod: \"\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>1 \\<AA> \\<BB>\\<lparr>HomCod\\<rparr> = \\<AA>\"", "lemma smcf_proj_snd_HomDom: \"\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>2 \\<AA> \\<BB>\\<lparr>HomDom\\<rparr> = \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\"", "lemma smcf_proj_snd_HomCod: \"\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>2 \\<AA> \\<BB>\\<lparr>HomCod\\<rparr> = \\<BB>\"", "lemma smcf_proj_fst_is_semifunctor: \n  assumes \"i \\<in>\\<^sub>\\<circ> I\" \n  shows \"\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>1 \\<AA> \\<BB> : \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\"", "lemma smcf_proj_fst_is_semifunctor'[smc_cs_intros]: \n  assumes \"i \\<in>\\<^sub>\\<circ> I\" and \"\\<CC> = \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\" and \"\\<DD> = \\<AA>\"\n  shows \"\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>1 \\<AA> \\<BB> : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\"", "lemma smcf_proj_snd_is_semifunctor: \n  assumes \"i \\<in>\\<^sub>\\<circ> I\" \n  shows \"\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>2 \\<AA> \\<BB> : \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"", "lemma smcf_proj_snd_is_semifunctor'[smc_cs_intros]: \n  assumes \"i \\<in>\\<^sub>\\<circ> I\" and \"\\<CC> = \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\" and \"\\<DD> = \\<BB>\"\n  shows \"\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>2 \\<AA> \\<BB> : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\"", "lemma smc_dg_smc_prod_3[slicing_commute]: \n  \"smc_dg \\<AA> \\<times>\\<^sub>D\\<^sub>G\\<^sub>3 smc_dg \\<BB> \\<times>\\<^sub>D\\<^sub>G\\<^sub>3 smc_dg \\<CC> = smc_dg (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<BB> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<CC>)\"", "lemmas_with \n  [\n    where \\<AA>=\\<open>smc_dg \\<AA>\\<close> and \\<BB>=\\<open>smc_dg \\<BB>\\<close> and \\<CC>=\\<open>smc_dg \\<CC>\\<close>, \n    unfolded slicing_simps slicing_commute, \n    OF \\<AA>.smc_digraph \\<BB>.smc_digraph \\<CC>.smc_digraph\n  ]:\n  smc_prod_3_ObjI = dg_prod_3_ObjI \n  and smc_prod_3_ObjI'[smc_prod_cs_intros] = dg_prod_3_ObjI'\n  and smc_prod_3_ObjE = dg_prod_3_ObjE\n  and smc_prod_3_ArrI = dg_prod_3_ArrI\n  and smc_prod_3_ArrI'[smc_prod_cs_intros] = dg_prod_3_ArrI'\n  and smc_prod_3_ArrE = dg_prod_3_ArrE\n  and smc_prod_3_is_arrI = dg_prod_3_is_arrI\n  and smc_prod_3_is_arrI'[smc_prod_cs_intros] = dg_prod_3_is_arrI'\n  and smc_prod_3_is_arrE = dg_prod_3_is_arrE\n  and smc_prod_3_Dom_vsv = dg_prod_3_Dom_vsv\n  and smc_prod_3_Dom_vdomain[smc_cs_simps] = dg_prod_3_Dom_vdomain\n  and smc_prod_3_Dom_app[smc_prod_cs_simps] = dg_prod_3_Dom_app\n  and smc_prod_3_Dom_vrange = dg_prod_3_Dom_vrange\n  and smc_prod_3_Cod_vsv = dg_prod_3_Cod_vsv\n  and smc_prod_3_Cod_vdomain[smc_cs_simps] = dg_prod_3_Cod_vdomain\n  and smc_prod_3_Cod_app[smc_prod_cs_simps] = dg_prod_3_Cod_app\n  and smc_prod_3_Cod_vrange = dg_prod_3_Cod_vrange", "lemma finite_psemicategory_smc_prod_3: \n  \"finite_psemicategory \\<alpha> (3\\<^sub>\\<nat>) (if3 \\<AA> \\<BB> \\<CC>)\"", "lemma semicategory_smc_prod_3[smc_cs_intros]: \n  \"semicategory \\<alpha> (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<BB> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<CC>)\"", "lemma smc_prod_3_Comp_app[smc_prod_cs_simps]:\n  assumes \"[g, g', g'']\\<^sub>\\<circ> : [b, b', b'']\\<^sub>\\<circ> \\<mapsto>\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<BB> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<CC>\\<^esub> [c, c', c'']\\<^sub>\\<circ>\" \n    and \"[f, f', f'']\\<^sub>\\<circ> : [a, a', a'']\\<^sub>\\<circ> \\<mapsto>\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<BB> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<CC>\\<^esub> [b, b', b'']\\<^sub>\\<circ>\"\n  shows \n    \"[g, g', g'']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<BB> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<CC>\\<^esub> [f, f', f'']\\<^sub>\\<circ> =\n      [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f, g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f', g'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f'']\\<^sub>\\<circ>\""], "translations": [["", "lemma smc_prod_components:\n  shows \"(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<lparr>Obj\\<rparr> = (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<lparr>Obj\\<rparr>)\"\n    and \"(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<lparr>Arr\\<rparr> = (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<lparr>Arr\\<rparr>)\"\n    and \"(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<lparr>Dom\\<rparr> = \n      (\\<lambda>f\\<in>\\<^sub>\\<circ>(\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<lparr>Arr\\<rparr>). (\\<lambda>i\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<lparr>Dom\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>))\"\n    and \"(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<lparr>Cod\\<rparr> = \n      (\\<lambda>f\\<in>\\<^sub>\\<circ>(\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<lparr>Arr\\<rparr>). (\\<lambda>i\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<lparr>Cod\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>))\"\n    and \"(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<lparr>Comp\\<rparr> = \n      (\\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs (dg_prod I \\<AA>). (\\<lambda>i\\<in>\\<^sub>\\<circ>I. gf\\<lparr>0\\<rparr>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub> gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (smc_prod I \\<AA>\\<lparr>Obj\\<rparr> =\n     (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n         \\<AA> i\\<lparr>Obj\\<rparr>) &&&\n     smc_prod I \\<AA>\\<lparr>Arr\\<rparr> =\n     (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n         \\<AA> i\\<lparr>Arr\\<rparr>)) &&&\n    smc_prod I \\<AA>\\<lparr>Dom\\<rparr> =\n    (\\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                     \\<AA> i\\<lparr>Arr\\<rparr>.\n        \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA> i\\<lparr>Dom\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>) &&&\n    smc_prod I \\<AA>\\<lparr>Cod\\<rparr> =\n    (\\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                     \\<AA> i\\<lparr>Arr\\<rparr>.\n        \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA> i\\<lparr>Cod\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>) &&&\n    smc_prod I \\<AA>\\<lparr>Comp\\<rparr> =\n    (\\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs (dg_prod I \\<AA>).\n        \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n           gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n           gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>)", "unfolding smc_prod_def dg_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n         \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n         \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n\\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<AA>\n             i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n\\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<AA>\n             i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n      \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs (dg_prod I \\<AA>).\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<AA>\n             i\\<lparr>4\\<^sub>\\<nat>\\<rparr> \\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr>,\n               gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>\\<rparr>\\<^sub>\\<bullet>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n     (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n         \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) &&&\n     [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n         \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n         \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n\\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<AA>\n             i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n\\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<AA>\n             i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n      \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs (dg_prod I \\<AA>).\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<AA>\n             i\\<lparr>4\\<^sub>\\<nat>\\<rparr> \\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr>,\n               gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>\\<rparr>\\<^sub>\\<bullet>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> =\n     (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n         \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>)) &&&\n    [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n        \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n        \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                     \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n        \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA>\n            i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n     \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                     \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n        \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA>\n            i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n     \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs (dg_prod I \\<AA>).\n        \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA>\n            i\\<lparr>4\\<^sub>\\<nat>\\<rparr> \\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr>,\n              gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>\\<rparr>\\<^sub>\\<bullet>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr> =\n    (\\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                     \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n        \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA>\n            i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>) &&&\n    [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n        \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n        \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                     \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n        \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA>\n            i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n     \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                     \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n        \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA>\n            i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n     \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs (dg_prod I \\<AA>).\n        \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA>\n            i\\<lparr>4\\<^sub>\\<nat>\\<rparr> \\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr>,\n              gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>\\<rparr>\\<^sub>\\<bullet>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr> =\n    (\\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                     \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n        \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA>\n            i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>) &&&\n    [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n        \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n        \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                     \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n        \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA>\n            i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n     \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                     \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n        \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA>\n            i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n     \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs (dg_prod I \\<AA>).\n        \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA>\n            i\\<lparr>4\\<^sub>\\<nat>\\<rparr> \\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr>,\n              gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>\\<rparr>\\<^sub>\\<bullet>]\\<^sub>\\<circ>\\<lparr>4\\<^sub>\\<nat>\\<rparr> =\n    (\\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs (dg_prod I \\<AA>).\n        \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA>\n            i\\<lparr>4\\<^sub>\\<nat>\\<rparr> \\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr>,\n              gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>\\<rparr>\\<^sub>\\<bullet>)", "by (simp_all add: nat_omega_simps)"], ["", "text\\<open>Slicing.\\<close>"], ["", "lemma smc_dg_smc_prod[slicing_commute]: \n  \"dg_prod I (\\<lambda>i. smc_dg (\\<AA> i)) = smc_dg (smc_prod I \\<AA>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>\\<^sub>D\\<^sub>Gi\\<in>\\<^sub>\\<circ>I. smc_dg (\\<AA> i)) =\n    smc_dg (smc_prod I \\<AA>)", "unfolding dg_prod_def smc_dg_def smc_prod_def dg_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n        [\\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n         \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n         \\<AA> i\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n         \\<AA>\n          i\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n        [\\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n         \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n         \\<AA> i\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n         \\<AA>\n          i\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                     [\\<AA>\n i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n\\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n\\<AA> i\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n\\<AA>\n i\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n        \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n           [\\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n            \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n            \\<AA> i\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n            \\<AA>\n             i\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n     \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                     [\\<AA>\n i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n\\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n\\<AA> i\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n\\<AA>\n i\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n        \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n           [\\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n            \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n            \\<AA> i\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n            \\<AA>\n             i\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>]\\<^sub>\\<circ> =\n    [[\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n         \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n         \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n\\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<AA>\n             i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n\\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<AA>\n             i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n      \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs\n                                     [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n   \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n   \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n\\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n   \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n      \\<AA>\n       i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n\\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n   \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n      \\<AA>\n       i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>]\\<^sub>\\<circ>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<AA>\n             i\\<lparr>4\\<^sub>\\<nat>\\<rparr> \\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr>,\n               gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>\\<rparr>\\<^sub>\\<bullet>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n         \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n         \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n\\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<AA>\n             i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n\\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<AA>\n             i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n      \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs\n                                     [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n   \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n   \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n\\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n   \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n      \\<AA>\n       i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n\\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n   \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n      \\<AA>\n       i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>]\\<^sub>\\<circ>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<AA>\n             i\\<lparr>4\\<^sub>\\<nat>\\<rparr> \\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr>,\n               gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>\\<rparr>\\<^sub>\\<bullet>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n         \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n         \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n\\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<AA>\n             i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n\\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<AA>\n             i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n      \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs\n                                     [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n   \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n   \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n\\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n   \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n      \\<AA>\n       i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n\\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n   \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n      \\<AA>\n       i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>]\\<^sub>\\<circ>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<AA>\n             i\\<lparr>4\\<^sub>\\<nat>\\<rparr> \\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr>,\n               gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>\\<rparr>\\<^sub>\\<bullet>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n     [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n         \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n         \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n\\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<AA>\n             i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n\\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<AA>\n             i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n      \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs\n                                     [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n   \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n   \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n\\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n   \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n      \\<AA>\n       i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n\\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n   \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n      \\<AA>\n       i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>]\\<^sub>\\<circ>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<AA>\n             i\\<lparr>4\\<^sub>\\<nat>\\<rparr> \\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr>,\n               gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>\\<rparr>\\<^sub>\\<bullet>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>", "by (simp_all add: nat_omega_simps)"], ["", "context\n  fixes \\<AA> \\<phi> :: \"V \\<Rightarrow> V\"\n    and \\<CC> :: V\nbegin"], ["", "lemmas_with \n  [where \\<AA>=\\<open>\\<lambda>i. smc_dg (\\<AA> i)\\<close>, unfolded slicing_simps slicing_commute]:\n  smc_prod_ObjI = dg_prod_ObjI\n  and smc_prod_ObjD = dg_prod_ObjD\n  and smc_prod_ObjE = dg_prod_ObjE\n  and smc_prod_Obj_cong = dg_prod_Obj_cong\n  and smc_prod_ArrI = dg_prod_ArrI\n  and smc_prod_ArrD = dg_prod_ArrD\n  and smc_prod_ArrE = dg_prod_ArrE\n  and smc_prod_Arr_cong = dg_prod_Arr_cong\n  and smc_prod_Dom_vsv[smc_cs_intros] = dg_prod_Dom_vsv\n  and smc_prod_Dom_vdomain[smc_cs_simps] = dg_prod_Dom_vdomain\n  and smc_prod_Dom_app = dg_prod_Dom_app\n  and smc_prod_Dom_app_component_app[smc_cs_simps] = \n    dg_prod_Dom_app_component_app\n  and smc_prod_Cod_vsv[smc_cs_intros] = dg_prod_Cod_vsv\n  and smc_prod_Cod_app = dg_prod_Cod_app\n  and smc_prod_Cod_vdomain[smc_cs_simps] = dg_prod_Cod_vdomain\n  and smc_prod_Cod_app_component_app[smc_cs_simps] = \n    dg_prod_Cod_app_component_app\n  and smc_prod_vunion_Obj_in_Obj = dg_prod_vunion_Obj_in_Obj\n  and smc_prod_vdiff_vunion_Obj_in_Obj = dg_prod_vdiff_vunion_Obj_in_Obj\n  and smc_prod_vunion_Arr_in_Arr = dg_prod_vunion_Arr_in_Arr\n  and smc_prod_vdiff_vunion_Arr_in_Arr = dg_prod_vdiff_vunion_Arr_in_Arr"], ["", "end"], ["", "lemma smc_prod_dg_prod_is_arr: \n  \"g : b \\<mapsto>\\<^bsub>\\<Prod>\\<^sub>D\\<^sub>Gi\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<^esub> c \\<longleftrightarrow> g : b \\<mapsto>\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<^esub> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g : b \\<mapsto>\\<^bsub>dg_prod I \\<AA>\\<^esub> c =\n    g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c", "unfolding is_arr_def smc_prod_def dg_prod_def dg_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. (g \\<in>\\<^sub>\\<circ> [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                               \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n                            \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                               \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n                            \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                      \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n                               \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n                                  \\<AA>\n                                   i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n                            \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                      \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n                               \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n                                  \\<AA>\n                                   i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<and>\n     [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n         \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n         \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n\\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<AA>\n             i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n\\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<AA>\n             i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>g\\<rparr> =\n     b \\<and>\n     [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n         \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n         \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n\\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<AA>\n             i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n\\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<AA>\n             i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>g\\<rparr> =\n     c) =\n    (g \\<in>\\<^sub>\\<circ> [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                               \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n                            \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                               \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n                            \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                      \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n                               \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n                                  \\<AA>\n                                   i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n                            \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                      \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n                               \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n                                  \\<AA>\n                                   i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n                            \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs\n                     [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                         \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n                      \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                         \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n                      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n                         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n                            \\<AA>\n                             i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n                      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n                         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n                            \\<AA>\n                             i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>]\\<^sub>\\<circ>.\n                               \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n                                  \\<AA>\n                                   i\\<lparr>4\\<^sub>\\<nat>\\<rparr> \\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr>,\n                                     gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>\\<rparr>\\<^sub>\\<bullet>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<and>\n     [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n         \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n         \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n\\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<AA>\n             i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n\\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<AA>\n             i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n      \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs\n                                     [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n   \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n   \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n\\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n   \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n      \\<AA>\n       i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n\\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n   \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n      \\<AA>\n       i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>]\\<^sub>\\<circ>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<AA>\n             i\\<lparr>4\\<^sub>\\<nat>\\<rparr> \\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr>,\n               gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>\\<rparr>\\<^sub>\\<bullet>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>g\\<rparr> =\n     b \\<and>\n     [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n         \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n         \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n\\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<AA>\n             i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n\\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<AA>\n             i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n      \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs\n                                     [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n   \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n   \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n\\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n   \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n      \\<AA>\n       i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n\\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n   \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n      \\<AA>\n       i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>]\\<^sub>\\<circ>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<AA>\n             i\\<lparr>4\\<^sub>\\<nat>\\<rparr> \\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr>,\n               gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>\\<rparr>\\<^sub>\\<bullet>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>g\\<rparr> =\n     c)", "by (simp add: nat_omega_simps)"], ["", "lemma smc_prod_composable_arrs_dg_prod:\n  \"composable_arrs (\\<Prod>\\<^sub>D\\<^sub>Gi\\<in>\\<^sub>\\<circ>I. \\<AA> i) = composable_arrs (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. composable_arrs (dg_prod I \\<AA>) = composable_arrs (smc_prod I \\<AA>)", "unfolding composable_arrs_def smc_prod_dg_prod_is_arr"], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set\n     {[g, f]\\<^sub>\\<circ> |g f.\n      \\<exists>a b c.\n         g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c \\<and>\n         f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b} =\n    ZFC_in_HOL.set\n     {[g, f]\\<^sub>\\<circ> |g f.\n      \\<exists>a b c.\n         g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c \\<and>\n         f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b}", "by simp"], ["", "subsection\\<open>Local assumptions for a product semicategory\\<close>"], ["", "locale psemicategory_base = \\<Z> \\<alpha> for \\<alpha> I \\<AA> +\n  assumes psmc_semicategories[smc_prod_cs_intros]: \n    \"i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow> semicategory \\<alpha> (\\<AA> i)\"\n    and psmc_index_in_Vset[smc_cs_intros]: \"I \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["", "text\\<open>Rules.\\<close>"], ["", "lemma (in psemicategory_base) psemicategory_base_axioms'[smc_prod_cs_intros]: \n  assumes \"\\<alpha>' = \\<alpha>\" and \"I' = I\"\n  shows \"psemicategory_base \\<alpha>' I' \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. psemicategory_base \\<alpha>' I' \\<AA>", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. psemicategory_base \\<alpha> I \\<AA>", "by (rule psemicategory_base_axioms)"], ["", "mk_ide rf psemicategory_base_def[unfolded psemicategory_base_axioms_def]\n  |intro psemicategory_baseI|\n  |dest psemicategory_baseD[dest]|\n  |elim psemicategory_baseE[elim]|"], ["", "lemma psemicategory_base_pdigraph_baseI:\n  assumes \"pdigraph_base \\<alpha> I (\\<lambda>i. smc_dg (\\<AA> i))\" \n    and \"\\<And>i. i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow> semicategory \\<alpha> (\\<AA> i)\"\n  shows \"psemicategory_base \\<alpha> I \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. psemicategory_base \\<alpha> I \\<AA>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. psemicategory_base \\<alpha> I \\<AA>", "interpret pdigraph_base \\<alpha> I \\<open>\\<lambda>i. smc_dg (\\<AA> i)\\<close>\n    rewrites \"smc_dg \\<CC>'\\<lparr>Obj\\<rparr> = \\<CC>'\\<lparr>Obj\\<rparr>\" and \"smc_dg \\<CC>'\\<lparr>Arr\\<rparr> = \\<CC>'\\<lparr>Arr\\<rparr>\" for \\<CC>'"], ["proof (prove)\ngoal (1 subgoal):\n 1. pdigraph_base \\<alpha> I (\\<lambda>i. smc_dg (\\<AA> i)) &&&\n    smc_dg \\<CC>'\\<lparr>Obj\\<rparr> = \\<CC>'\\<lparr>Obj\\<rparr> &&&\n    smc_dg \\<CC>'\\<lparr>Arr\\<rparr> = \\<CC>'\\<lparr>Arr\\<rparr>", "by (rule assms(1)) (simp_all add: slicing_simps)"], ["proof (state)\ngoal (1 subgoal):\n 1. psemicategory_base \\<alpha> I \\<AA>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. psemicategory_base \\<alpha> I \\<AA>", "by (intro psemicategory_baseI)\n      (auto simp: assms(2) pdg_index_in_Vset pdg_Obj_in_Vset pdg_Arr_in_Vset)"], ["proof (state)\nthis:\n  psemicategory_base \\<alpha> I \\<AA>\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Product semicategory is a product digraph.\\<close>"], ["", "context psemicategory_base\nbegin"], ["", "lemma psmc_pdigraph_base: \"pdigraph_base \\<alpha> I (\\<lambda>i. smc_dg (\\<AA> i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pdigraph_base \\<alpha> I (\\<lambda>i. smc_dg (\\<AA> i))", "proof(intro pdigraph_baseI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<Z> \\<alpha>\n 2. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       digraph \\<alpha> (smc_dg (\\<AA> i))\n 3. I \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"digraph \\<alpha> (smc_dg (\\<AA> i))\" if \"i \\<in>\\<^sub>\\<circ> I\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. digraph \\<alpha> (smc_dg (\\<AA> i))", "using that"], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. digraph \\<alpha> (smc_dg (\\<AA> i))", "by (cs_concl cs_intro: slicing_intros smc_prod_cs_intros)"], ["proof (state)\nthis:\n  ?i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n  digraph \\<alpha> (smc_dg (\\<AA> ?i))\n\ngoal (2 subgoals):\n 1. \\<Z> \\<alpha>\n 2. I \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"I \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (cs_concl cs_intro: smc_cs_intros)"], ["proof (state)\nthis:\n  I \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<Z> \\<alpha>", "qed auto"], ["", "interpretation pdg: pdigraph_base \\<alpha> I \\<open>\\<lambda>i. smc_dg (\\<AA> i)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. pdigraph_base \\<alpha> I (\\<lambda>i. smc_dg (\\<AA> i))", "by (rule psmc_pdigraph_base)"], ["", "lemmas_with [unfolded slicing_simps slicing_commute]: \n  psmc_Obj_in_Vset = pdg.pdg_Obj_in_Vset\n  and psmc_Arr_in_Vset = pdg.pdg_Arr_in_Vset\n  and psmc_smc_prod_Obj_in_Vset = pdg.pdg_dg_prod_Obj_in_Vset\n  and psmc_smc_prod_Arr_in_Vset = pdg.pdg_dg_prod_Arr_in_Vset\n  and smc_prod_Dom_app_in_Obj[smc_cs_intros] = pdg.dg_prod_Dom_app_in_Obj\n  and smc_prod_Cod_app_in_Obj[smc_cs_intros] = pdg.dg_prod_Cod_app_in_Obj\n  and smc_prod_is_arrI = pdg.dg_prod_is_arrI\n  and smc_prod_is_arrD[dest] = pdg.dg_prod_is_arrD\n  and smc_prod_is_arrE[elim] = pdg.dg_prod_is_arrE"], ["", "end"], ["", "lemmas [smc_cs_intros] = psemicategory_base.smc_prod_is_arrD(7)"], ["", "text\\<open>Elementary properties.\\<close>"], ["", "lemma (in psemicategory_base) psmc_vsubset_index_psemicategory_base:\n  assumes \"J \\<subseteq>\\<^sub>\\<circ> I\"\n  shows \"psemicategory_base \\<alpha> J \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. psemicategory_base \\<alpha> J \\<AA>", "proof(intro psemicategory_baseI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<Z> \\<alpha>\n 2. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> J \\<Longrightarrow>\n       semicategory \\<alpha> (\\<AA> i)\n 3. J \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"semicategory \\<alpha> (\\<AA> i)\" if \"i \\<in>\\<^sub>\\<circ> J\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (\\<AA> i)", "using that assms"], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> J\n  J \\<subseteq>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (\\<AA> i)", "by (auto intro: smc_prod_cs_intros)"], ["proof (state)\nthis:\n  ?i \\<in>\\<^sub>\\<circ> J \\<Longrightarrow>\n  semicategory \\<alpha> (\\<AA> ?i)\n\ngoal (2 subgoals):\n 1. \\<Z> \\<alpha>\n 2. J \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "from assms"], ["proof (chain)\npicking this:\n  J \\<subseteq>\\<^sub>\\<circ> I", "show \"J \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  J \\<subseteq>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. J \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (simp add: vsubset_in_VsetI smc_cs_intros)"], ["proof (state)\nthis:\n  J \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<Z> \\<alpha>", "qed auto"], ["", "subsubsection\\<open>Composition\\<close>"], ["", "lemma smc_prod_Comp:\n  \"(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<lparr>Comp\\<rparr> = \n    (\n      \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i). \n        (\\<lambda>i\\<in>\\<^sub>\\<circ>I. gf\\<lparr>0\\<rparr>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub> gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>)\n    )\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smc_prod I \\<AA>\\<lparr>Comp\\<rparr> =\n    (\\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs (smc_prod I \\<AA>).\n        \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n           gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n           gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>)", "unfolding smc_prod_components smc_prod_composable_arrs_dg_prod"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs (smc_prod I \\<AA>).\n        \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n           gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n           gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>) =\n    (\\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs (smc_prod I \\<AA>).\n        \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n           gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n           gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>)", "by simp"], ["", "lemma smc_prod_Comp_vdomain[smc_cs_simps]: \n  \"\\<D>\\<^sub>\\<circ> ((\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<lparr>Comp\\<rparr>) = composable_arrs (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (smc_prod I \\<AA>\\<lparr>Comp\\<rparr>) =\n    composable_arrs (smc_prod I \\<AA>)", "unfolding smc_prod_Comp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (\\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs (smc_prod I \\<AA>).\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n            gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>) =\n    composable_arrs (smc_prod I \\<AA>)", "by simp"], ["", "lemma smc_prod_Comp_app: \n  assumes \"g : b \\<mapsto>\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<^esub> c\" and \"f : a \\<mapsto>\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<^esub> b\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<^esub> f = (\\<lambda>i\\<in>\\<^sub>\\<circ>I. g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub> f\\<lparr>i\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f =\n    (\\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n        f\\<lparr>i\\<rparr>)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f =\n    (\\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n        f\\<lparr>i\\<rparr>)", "from assms"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b", "have \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> composable_arrs (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> composable_arrs (smc_prod I \\<AA>)", "by (auto intro: smc_cs_intros)"], ["proof (state)\nthis:\n  [g, f]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> composable_arrs (smc_prod I \\<AA>)\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f =\n    (\\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n        f\\<lparr>i\\<rparr>)", "then"], ["proof (chain)\npicking this:\n  [g, f]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> composable_arrs (smc_prod I \\<AA>)", "show ?thesis"], ["proof (prove)\nusing this:\n  [g, f]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> composable_arrs (smc_prod I \\<AA>)\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f =\n    (\\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n        f\\<lparr>i\\<rparr>)", "unfolding smc_prod_Comp"], ["proof (prove)\nusing this:\n  [g, f]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> composable_arrs (smc_prod I \\<AA>)\n\ngoal (1 subgoal):\n 1. (\\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs (smc_prod I \\<AA>).\n        \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n           gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n           gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>) \\<lparr>g,\n                                f\\<rparr>\\<^sub>\\<bullet> =\n    (\\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n        f\\<lparr>i\\<rparr>)", "by (auto simp: nat_omega_simps)"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f =\n  (\\<lambda>i\\<in>\\<^sub>\\<circ>I.\n      g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n      f\\<lparr>i\\<rparr>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smc_prod_Comp_app_component[smc_cs_simps]: \n  assumes \"g : b \\<mapsto>\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<^esub> c\" \n    and \"f : a \\<mapsto>\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<^esub> b\"\n    and \"i \\<in>\\<^sub>\\<circ> I\"\n  shows \"(g \\<circ>\\<^sub>A\\<^bsub>(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<^esub> f)\\<lparr>i\\<rparr> = g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub> f\\<lparr>i\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f)\\<lparr>i\\<rparr> =\n    g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n    f\\<lparr>i\\<rparr>", "using assms(3)"], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f)\\<lparr>i\\<rparr> =\n    g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n    f\\<lparr>i\\<rparr>", "unfolding smc_prod_Comp_app[OF assms(1,2)]"], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. (\\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n        f\\<lparr>i\\<rparr>)\\<lparr>i\\<rparr> =\n    g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n    f\\<lparr>i\\<rparr>", "by simp"], ["", "lemma (in psemicategory_base) smc_prod_Comp_vrange: \n  \"\\<R>\\<^sub>\\<circ> ((\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<lparr>Comp\\<rparr>) \\<subseteq>\\<^sub>\\<circ> (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (smc_prod I \\<AA>\\<lparr>Comp\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Arr\\<rparr>", "proof(intro vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (smc_prod I\n                                \\<AA>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Arr\\<rparr>", "fix h"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (smc_prod I\n                                \\<AA>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Arr\\<rparr>", "assume prems: \"h \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> ((\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<lparr>Comp\\<rparr>)\""], ["proof (state)\nthis:\n  h \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                         (smc_prod I \\<AA>\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (smc_prod I\n                                \\<AA>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Arr\\<rparr>", "then"], ["proof (chain)\npicking this:\n  h \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                         (smc_prod I \\<AA>\\<lparr>Comp\\<rparr>)", "obtain gf \n    where h_def: \"h = (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<lparr>Comp\\<rparr>\\<lparr>gf\\<rparr>\" \n      and \"gf \\<in>\\<^sub>\\<circ> composable_arrs (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\""], ["proof (prove)\nusing this:\n  h \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                         (smc_prod I \\<AA>\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. (\\<And>gf.\n        \\<lbrakk>h = smc_prod I \\<AA>\\<lparr>Comp\\<rparr>\\<lparr>gf\\<rparr>;\n         gf \\<in>\\<^sub>\\<circ> composable_arrs (smc_prod I \\<AA>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: smc_prod_Comp intro: smc_cs_intros)"], ["proof (state)\nthis:\n  h = smc_prod I \\<AA>\\<lparr>Comp\\<rparr>\\<lparr>gf\\<rparr>\n  gf \\<in>\\<^sub>\\<circ> composable_arrs (smc_prod I \\<AA>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (smc_prod I\n                                \\<AA>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Arr\\<rparr>", "then"], ["proof (chain)\npicking this:\n  h = smc_prod I \\<AA>\\<lparr>Comp\\<rparr>\\<lparr>gf\\<rparr>\n  gf \\<in>\\<^sub>\\<circ> composable_arrs (smc_prod I \\<AA>)", "obtain g f a b c \n    where gf_def: \"gf = [g, f]\\<^sub>\\<circ>\" \n      and g: \"g : b \\<mapsto>\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<^esub> c\" \n      and f: \"f : a \\<mapsto>\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<^esub> b\""], ["proof (prove)\nusing this:\n  h = smc_prod I \\<AA>\\<lparr>Comp\\<rparr>\\<lparr>gf\\<rparr>\n  gf \\<in>\\<^sub>\\<circ> composable_arrs (smc_prod I \\<AA>)\n\ngoal (1 subgoal):\n 1. (\\<And>g f b c a.\n        \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>;\n         g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c;\n         f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  gf = [g, f]\\<^sub>\\<circ>\n  g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (smc_prod I\n                                \\<AA>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Arr\\<rparr>", "from g f"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b", "have gf_comp: \"g \\<circ>\\<^sub>A\\<^bsub>(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<^esub> f = (\\<lambda>i\\<in>\\<^sub>\\<circ>I. g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub> f\\<lparr>i\\<rparr>)\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f =\n    (\\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n        f\\<lparr>i\\<rparr>)", "by (rule smc_prod_Comp_app)"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f =\n  (\\<lambda>i\\<in>\\<^sub>\\<circ>I.\n      g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n      f\\<lparr>i\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (smc_prod I\n                                \\<AA>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Arr\\<rparr>", "show \"h \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Arr\\<rparr>", "unfolding smc_prod_components"], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                              \\<AA> i\\<lparr>Arr\\<rparr>)", "unfolding h_def gf_def gf_comp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n        f\\<lparr>i\\<rparr>)\n    \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                            \\<AA> i\\<lparr>Arr\\<rparr>)", "proof(rule VLambda_in_vproduct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n       f\\<lparr>i\\<rparr>\n       \\<in>\\<^sub>\\<circ> \\<AA> i\\<lparr>Arr\\<rparr>", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n       f\\<lparr>i\\<rparr>\n       \\<in>\\<^sub>\\<circ> \\<AA> i\\<lparr>Arr\\<rparr>", "assume prems: \"i \\<in>\\<^sub>\\<circ> I\""], ["proof (state)\nthis:\n  i \\<in>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n       f\\<lparr>i\\<rparr>\n       \\<in>\\<^sub>\\<circ> \\<AA> i\\<lparr>Arr\\<rparr>", "interpret semicategory \\<alpha> \\<open>\\<AA> i\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (\\<AA> i)", "using prems"], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (\\<AA> i)", "by (simp add: smc_prod_cs_intros)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n       f\\<lparr>i\\<rparr>\n       \\<in>\\<^sub>\\<circ> \\<AA> i\\<lparr>Arr\\<rparr>", "from prems smc_prod_is_arrD(7)[OF g] smc_prod_is_arrD(7)[OF f]"], ["proof (chain)\npicking this:\n  i \\<in>\\<^sub>\\<circ> I\n  ?i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n  g\\<lparr>?i\\<rparr> : b\\<lparr>?i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> ?i\\<^esub> c\\<lparr>?i\\<rparr>\n  ?i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n  f\\<lparr>?i\\<rparr> : a\\<lparr>?i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> ?i\\<^esub> b\\<lparr>?i\\<rparr>", "have\n      \"g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub> f\\<lparr>i\\<rparr> : a\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> c\\<lparr>i\\<rparr>\""], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> I\n  ?i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n  g\\<lparr>?i\\<rparr> : b\\<lparr>?i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> ?i\\<^esub> c\\<lparr>?i\\<rparr>\n  ?i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n  f\\<lparr>?i\\<rparr> : a\\<lparr>?i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> ?i\\<^esub> b\\<lparr>?i\\<rparr>\n\ngoal (1 subgoal):\n 1. g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n    f\\<lparr>i\\<rparr> : a\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> c\\<lparr>i\\<rparr>", "by (auto intro: smc_cs_intros)"], ["proof (state)\nthis:\n  g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n  f\\<lparr>i\\<rparr> : a\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> c\\<lparr>i\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n       f\\<lparr>i\\<rparr>\n       \\<in>\\<^sub>\\<circ> \\<AA> i\\<lparr>Arr\\<rparr>", "then"], ["proof (chain)\npicking this:\n  g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n  f\\<lparr>i\\<rparr> : a\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> c\\<lparr>i\\<rparr>", "show \"g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub> f\\<lparr>i\\<rparr> \\<in>\\<^sub>\\<circ> \\<AA> i\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n  f\\<lparr>i\\<rparr> : a\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> c\\<lparr>i\\<rparr>\n\ngoal (1 subgoal):\n 1. g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n    f\\<lparr>i\\<rparr>\n    \\<in>\\<^sub>\\<circ> \\<AA> i\\<lparr>Arr\\<rparr>", "by (simp add: smc_cs_intros)"], ["proof (state)\nthis:\n  g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n  f\\<lparr>i\\<rparr>\n  \\<in>\\<^sub>\\<circ> \\<AA> i\\<lparr>Arr\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  h \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Arr\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smc_prod_Comp_app_vdomain[smc_cs_simps]:\n  assumes \"g : b \\<mapsto>\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<^esub> c\" and \"f : a \\<mapsto>\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<^esub> b\"\n  shows \"\\<D>\\<^sub>\\<circ> (g \\<circ>\\<^sub>A\\<^bsub>(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<^esub> f) = I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f) =\n    I", "unfolding smc_prod_Comp_app[OF assms]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (\\<lambda>i\\<in>\\<^sub>\\<circ>I.\n         g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n         f\\<lparr>i\\<rparr>) =\n    I", "by simp"], ["", "subsubsection\\<open>A product \\<open>\\<alpha>\\<close>-semicategory is a tiny \\<open>\\<beta>\\<close>-semicategory\\<close>"], ["", "lemma (in psemicategory_base) psmc_tiny_semicategory_smc_prod:\n  assumes \"\\<Z> \\<beta>\" and \"\\<alpha> \\<in>\\<^sub>\\<circ> \\<beta>\" \n  shows \"tiny_semicategory \\<beta> (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tiny_semicategory \\<beta> (smc_prod I \\<AA>)", "proof(intro tiny_semicategoryI, (unfold slicing_simps)?)"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<Z> \\<beta>\n 2. vfsequence (smc_prod I \\<AA>)\n 3. vsv (smc_prod I \\<AA>\\<lparr>Comp\\<rparr>)\n 4. vcard (smc_prod I \\<AA>) = 5\\<^sub>\\<nat>\n 5. tiny_digraph \\<beta> (smc_dg (smc_prod I \\<AA>))\n 6. \\<And>gf.\n       (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (smc_prod I \\<AA>\\<lparr>Comp\\<rparr>)) =\n       (\\<exists>g f b c a.\n           gf = [g, f]\\<^sub>\\<circ> \\<and>\n           g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c \\<and>\n           f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b)\n 7. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                         f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c\n 8. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                          f)", "show \"tiny_digraph \\<beta> (smc_dg (smc_prod I \\<AA>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tiny_digraph \\<beta> (smc_dg (smc_prod I \\<AA>))", "unfolding slicing_commute[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. tiny_digraph \\<beta>\n     (\\<Prod>\\<^sub>D\\<^sub>Gi\\<in>\\<^sub>\\<circ>I. smc_dg (\\<AA> i))", "by \n      (\n        intro pdigraph_base.pdg_tiny_digraph_dg_prod; \n        (rule assms psmc_pdigraph_base)?\n      )"], ["proof (state)\nthis:\n  tiny_digraph \\<beta> (smc_dg (smc_prod I \\<AA>))\n\ngoal (7 subgoals):\n 1. \\<Z> \\<beta>\n 2. vfsequence (smc_prod I \\<AA>)\n 3. vsv (smc_prod I \\<AA>\\<lparr>Comp\\<rparr>)\n 4. vcard (smc_prod I \\<AA>) = 5\\<^sub>\\<nat>\n 5. \\<And>gf.\n       (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (smc_prod I \\<AA>\\<lparr>Comp\\<rparr>)) =\n       (\\<exists>g f b c a.\n           gf = [g, f]\\<^sub>\\<circ> \\<and>\n           g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c \\<and>\n           f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b)\n 6. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                         f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c\n 7. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                          f)", "show \"vfsequence (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (smc_prod I \\<AA>)", "unfolding smc_prod_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence\n     [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n         \\<AA> i\\<lparr>Obj\\<rparr>,\n      \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n         \\<AA> i\\<lparr>Arr\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n\\<AA> i\\<lparr>Arr\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<AA> i\\<lparr>Dom\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n\\<AA> i\\<lparr>Arr\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<AA> i\\<lparr>Cod\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n      \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs (dg_prod I \\<AA>).\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n            gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>]\\<^sub>\\<circ>", "by auto"], ["proof (state)\nthis:\n  vfsequence (smc_prod I \\<AA>)\n\ngoal (6 subgoals):\n 1. \\<Z> \\<beta>\n 2. vsv (smc_prod I \\<AA>\\<lparr>Comp\\<rparr>)\n 3. vcard (smc_prod I \\<AA>) = 5\\<^sub>\\<nat>\n 4. \\<And>gf.\n       (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (smc_prod I \\<AA>\\<lparr>Comp\\<rparr>)) =\n       (\\<exists>g f b c a.\n           gf = [g, f]\\<^sub>\\<circ> \\<and>\n           g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c \\<and>\n           f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b)\n 5. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                         f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c\n 6. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                          f)", "show \"vcard (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i) = 5\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (smc_prod I \\<AA>) = 5\\<^sub>\\<nat>", "unfolding smc_prod_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard\n     [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n         \\<AA> i\\<lparr>Obj\\<rparr>,\n      \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n         \\<AA> i\\<lparr>Arr\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n\\<AA> i\\<lparr>Arr\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<AA> i\\<lparr>Dom\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n\\<AA> i\\<lparr>Arr\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<AA> i\\<lparr>Cod\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n      \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs (dg_prod I \\<AA>).\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n            gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>]\\<^sub>\\<circ> =\n    5\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  vcard (smc_prod I \\<AA>) = 5\\<^sub>\\<nat>\n\ngoal (5 subgoals):\n 1. \\<Z> \\<beta>\n 2. vsv (smc_prod I \\<AA>\\<lparr>Comp\\<rparr>)\n 3. \\<And>gf.\n       (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (smc_prod I \\<AA>\\<lparr>Comp\\<rparr>)) =\n       (\\<exists>g f b c a.\n           gf = [g, f]\\<^sub>\\<circ> \\<and>\n           g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c \\<and>\n           f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b)\n 4. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                         f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c\n 5. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                          f)", "show \"vsv ((\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<lparr>Comp\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (smc_prod I \\<AA>\\<lparr>Comp\\<rparr>)", "unfolding smc_prod_Comp"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (\\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs (smc_prod I \\<AA>).\n            \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n               gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n               gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>)", "by simp"], ["proof (state)\nthis:\n  vsv (smc_prod I \\<AA>\\<lparr>Comp\\<rparr>)\n\ngoal (4 subgoals):\n 1. \\<Z> \\<beta>\n 2. \\<And>gf.\n       (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (smc_prod I \\<AA>\\<lparr>Comp\\<rparr>)) =\n       (\\<exists>g f b c a.\n           gf = [g, f]\\<^sub>\\<circ> \\<and>\n           g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c \\<and>\n           f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b)\n 3. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                         f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c\n 4. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                          f)", "show\n    \"(gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> ((\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<lparr>Comp\\<rparr>)) \\<longleftrightarrow>\n      (\n        \\<exists>g f b c a. \n          gf = [g, f]\\<^sub>\\<circ> \\<and> g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c \\<and> f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b\n      )\"\n    for gf"], ["proof (prove)\ngoal (1 subgoal):\n 1. (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                             (smc_prod I \\<AA>\\<lparr>Comp\\<rparr>)) =\n    (\\<exists>g f b c a.\n        gf = [g, f]\\<^sub>\\<circ> \\<and>\n        g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c \\<and>\n        f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b)", "by (auto intro: smc_cs_intros simp: smc_cs_simps)"], ["proof (state)\nthis:\n  (?gf\n   \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                        (smc_prod I \\<AA>\\<lparr>Comp\\<rparr>)) =\n  (\\<exists>g f b c a.\n      ?gf = [g, f]\\<^sub>\\<circ> \\<and>\n      g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c \\<and>\n      f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b)\n\ngoal (3 subgoals):\n 1. \\<Z> \\<beta>\n 2. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                         f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c\n 3. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                          f)", "show Comp_is_arr[intro]: \"g \\<circ>\\<^sub>A\\<^bsub>(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<^esub> f : a \\<mapsto>\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<^esub> c\"\n    if \"g : b \\<mapsto>\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<^esub> c\" and \"f : a \\<mapsto>\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<^esub> b\" \n    for g b c f a"], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n    f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c", "proof(intro smc_prod_is_arrI)"], ["proof (state)\ngoal (7 subgoals):\n 1. vsv (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f)\n 2. \\<D>\\<^sub>\\<circ>\n     (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f) =\n    I\n 3. vsv a\n 4. \\<D>\\<^sub>\\<circ> a = I\n 5. vsv c\n 6. \\<D>\\<^sub>\\<circ> c = I\n 7. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        f)\\<lparr>i\\<rparr> : a\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> c\\<lparr>i\\<rparr>", "from that"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b", "show \"vsv (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f)\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b\n\ngoal (1 subgoal):\n 1. vsv (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f)", "by (auto simp: smc_prod_Comp_app)"], ["proof (state)\nthis:\n  vsv (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f)\n\ngoal (6 subgoals):\n 1. \\<D>\\<^sub>\\<circ>\n     (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f) =\n    I\n 2. vsv a\n 3. \\<D>\\<^sub>\\<circ> a = I\n 4. vsv c\n 5. \\<D>\\<^sub>\\<circ> c = I\n 6. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        f)\\<lparr>i\\<rparr> : a\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> c\\<lparr>i\\<rparr>", "from that"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b", "show \"\\<D>\\<^sub>\\<circ> (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f) = I\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f) =\n    I", "by (auto simp: smc_prod_Comp_app)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f) =\n  I\n\ngoal (5 subgoals):\n 1. vsv a\n 2. \\<D>\\<^sub>\\<circ> a = I\n 3. vsv c\n 4. \\<D>\\<^sub>\\<circ> c = I\n 5. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        f)\\<lparr>i\\<rparr> : a\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> c\\<lparr>i\\<rparr>", "from that(2)"], ["proof (chain)\npicking this:\n  f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b", "have f: \"f \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b\n\ngoal (1 subgoal):\n 1. f \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Arr\\<rparr>", "by (elim is_arrE) (auto simp: smc_prod_components)"], ["proof (state)\nthis:\n  f \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Arr\\<rparr>\n\ngoal (5 subgoals):\n 1. vsv a\n 2. \\<D>\\<^sub>\\<circ> a = I\n 3. vsv c\n 4. \\<D>\\<^sub>\\<circ> c = I\n 5. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        f)\\<lparr>i\\<rparr> : a\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> c\\<lparr>i\\<rparr>", "from that(1)"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c", "have g: \"g \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c\n\ngoal (1 subgoal):\n 1. g \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Arr\\<rparr>", "by (elim is_arrE) (auto simp: smc_prod_components)"], ["proof (state)\nthis:\n  g \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Arr\\<rparr>\n\ngoal (5 subgoals):\n 1. vsv a\n 2. \\<D>\\<^sub>\\<circ> a = I\n 3. vsv c\n 4. \\<D>\\<^sub>\\<circ> c = I\n 5. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        f)\\<lparr>i\\<rparr> : a\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> c\\<lparr>i\\<rparr>", "from f"], ["proof (chain)\npicking this:\n  f \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Arr\\<rparr>", "have a: \"a \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  f \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Obj\\<rparr>", "by (rule smc_prod_Dom_app_in_Obj[of f, unfolded is_arrD(2)[OF that(2)]])"], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Obj\\<rparr>\n\ngoal (5 subgoals):\n 1. vsv a\n 2. \\<D>\\<^sub>\\<circ> a = I\n 3. vsv c\n 4. \\<D>\\<^sub>\\<circ> c = I\n 5. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        f)\\<lparr>i\\<rparr> : a\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> c\\<lparr>i\\<rparr>", "then"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Obj\\<rparr>", "show \"vsv a\""], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vsv a", "by (auto simp: smc_prod_components)"], ["proof (state)\nthis:\n  vsv a\n\ngoal (4 subgoals):\n 1. \\<D>\\<^sub>\\<circ> a = I\n 2. vsv c\n 3. \\<D>\\<^sub>\\<circ> c = I\n 4. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        f)\\<lparr>i\\<rparr> : a\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> c\\<lparr>i\\<rparr>", "from a"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Obj\\<rparr>", "show \"\\<D>\\<^sub>\\<circ> a = I\""], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> a = I", "by (auto simp: smc_prod_components)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> a = I\n\ngoal (3 subgoals):\n 1. vsv c\n 2. \\<D>\\<^sub>\\<circ> c = I\n 3. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        f)\\<lparr>i\\<rparr> : a\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> c\\<lparr>i\\<rparr>", "from g"], ["proof (chain)\npicking this:\n  g \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Arr\\<rparr>", "have c: \"c \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  g \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. c \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Obj\\<rparr>", "by (rule smc_prod_Cod_app_in_Obj[of g, unfolded is_arrD(3)[OF that(1)]])"], ["proof (state)\nthis:\n  c \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Obj\\<rparr>\n\ngoal (3 subgoals):\n 1. vsv c\n 2. \\<D>\\<^sub>\\<circ> c = I\n 3. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        f)\\<lparr>i\\<rparr> : a\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> c\\<lparr>i\\<rparr>", "then"], ["proof (chain)\npicking this:\n  c \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Obj\\<rparr>", "show \"vsv c\""], ["proof (prove)\nusing this:\n  c \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vsv c", "by (auto simp: smc_prod_components)"], ["proof (state)\nthis:\n  vsv c\n\ngoal (2 subgoals):\n 1. \\<D>\\<^sub>\\<circ> c = I\n 2. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        f)\\<lparr>i\\<rparr> : a\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> c\\<lparr>i\\<rparr>", "from c"], ["proof (chain)\npicking this:\n  c \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Obj\\<rparr>", "show \"\\<D>\\<^sub>\\<circ> c = I\""], ["proof (prove)\nusing this:\n  c \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> c = I", "by (auto simp: smc_prod_components)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> c = I\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        f)\\<lparr>i\\<rparr> : a\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> c\\<lparr>i\\<rparr>", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        f)\\<lparr>i\\<rparr> : a\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> c\\<lparr>i\\<rparr>", "assume prems: \"i \\<in>\\<^sub>\\<circ> I\""], ["proof (state)\nthis:\n  i \\<in>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        f)\\<lparr>i\\<rparr> : a\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> c\\<lparr>i\\<rparr>", "interpret semicategory \\<alpha> \\<open>\\<AA> i\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (\\<AA> i)", "using prems"], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (\\<AA> i)", "by (auto intro: smc_prod_cs_intros)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        f)\\<lparr>i\\<rparr> : a\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> c\\<lparr>i\\<rparr>", "from \n      prems \n      smc_prod_is_arrD(7)[OF that(1) prems] \n      smc_prod_is_arrD(7)[OF that(2) prems]"], ["proof (chain)\npicking this:\n  i \\<in>\\<^sub>\\<circ> I\n  g\\<lparr>i\\<rparr> : b\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> c\\<lparr>i\\<rparr>\n  f\\<lparr>i\\<rparr> : a\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> b\\<lparr>i\\<rparr>", "show \"(g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f)\\<lparr>i\\<rparr> : a\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> c\\<lparr>i\\<rparr>\""], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> I\n  g\\<lparr>i\\<rparr> : b\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> c\\<lparr>i\\<rparr>\n  f\\<lparr>i\\<rparr> : a\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> b\\<lparr>i\\<rparr>\n\ngoal (1 subgoal):\n 1. (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n     f)\\<lparr>i\\<rparr> : a\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> c\\<lparr>i\\<rparr>", "unfolding smc_prod_Comp_app[OF that]"], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> I\n  g\\<lparr>i\\<rparr> : b\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> c\\<lparr>i\\<rparr>\n  f\\<lparr>i\\<rparr> : a\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> b\\<lparr>i\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n        f\\<lparr>i\\<rparr>)\\<lparr>i\\<rparr> : a\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> c\\<lparr>i\\<rparr>", "by (auto intro: smc_cs_intros)"], ["proof (state)\nthis:\n  (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n   f)\\<lparr>i\\<rparr> : a\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> c\\<lparr>i\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?g : ?b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> ?c;\n   ?f : ?a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> ?b\\<rbrakk>\n  \\<Longrightarrow> ?g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                    ?f : ?a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> ?c\n\ngoal (2 subgoals):\n 1. \\<Z> \\<beta>\n 2. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                          f)", "show \n    \"h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f =\n      h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f)\"\n    if \"h : c \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> d\"\n      and \"g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c\"\n      and \"f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b\"\n    for h c d g b f a"], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n    g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n    f =\n    h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n    (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f)", "proof(rule smc_prod_Arr_cong)"], ["proof (state)\ngoal (3 subgoals):\n 1. h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n    g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n    f\n    \\<in>\\<^sub>\\<circ> smc_prod ?I ?\\<AA>\\<lparr>Arr\\<rparr>\n 2. h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n    (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f)\n    \\<in>\\<^sub>\\<circ> smc_prod ?I ?\\<AA>\\<lparr>Arr\\<rparr>\n 3. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> ?I \\<Longrightarrow>\n       (h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        f)\\<lparr>i\\<rparr> =\n       (h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n         f))\\<lparr>i\\<rparr>", "show \"(h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> g) \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n    g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n    f\n    \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Arr\\<rparr>", "by (meson that Comp_is_arr is_arrD)"], ["proof (state)\nthis:\n  h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n  g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n  f\n  \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Arr\\<rparr>\n\ngoal (2 subgoals):\n 1. h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n    (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f)\n    \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Arr\\<rparr>\n 2. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       (h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        f)\\<lparr>i\\<rparr> =\n       (h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n         f))\\<lparr>i\\<rparr>", "show \"h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f) \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n    (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f)\n    \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Arr\\<rparr>", "by (meson that Comp_is_arr is_arrD)"], ["proof (state)\nthis:\n  h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n  (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f)\n  \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       (h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        f)\\<lparr>i\\<rparr> =\n       (h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n         f))\\<lparr>i\\<rparr>", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       (h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        f)\\<lparr>i\\<rparr> =\n       (h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n         f))\\<lparr>i\\<rparr>", "assume prems: \"i \\<in>\\<^sub>\\<circ> I\""], ["proof (state)\nthis:\n  i \\<in>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       (h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        f)\\<lparr>i\\<rparr> =\n       (h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n         f))\\<lparr>i\\<rparr>", "then"], ["proof (chain)\npicking this:\n  i \\<in>\\<^sub>\\<circ> I", "interpret semicategory \\<alpha> \\<open>\\<AA> i\\<close>"], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (\\<AA> i)", "by (simp add: smc_prod_cs_intros)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       (h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        f)\\<lparr>i\\<rparr> =\n       (h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n         f))\\<lparr>i\\<rparr>", "from prems that"], ["proof (chain)\npicking this:\n  i \\<in>\\<^sub>\\<circ> I\n  h : c \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> d\n  g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b", "have \"h\\<lparr>i\\<rparr> : c\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> d\\<lparr>i\\<rparr>\"\n      and \"g\\<lparr>i\\<rparr> : b\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> c\\<lparr>i\\<rparr>\"\n      and \"f\\<lparr>i\\<rparr> : a\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> b\\<lparr>i\\<rparr>\"\n      and \"h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> d\"\n      and \"g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c\""], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> I\n  h : c \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> d\n  g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b\n\ngoal (1 subgoal):\n 1. (h\\<lparr>i\\<rparr> : c\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> d\\<lparr>i\\<rparr> &&&\n     g\\<lparr>i\\<rparr> : b\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> c\\<lparr>i\\<rparr>) &&&\n    f\\<lparr>i\\<rparr> : a\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> b\\<lparr>i\\<rparr> &&&\n    h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n    g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> d &&&\n    g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n    f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c", "by (auto simp: smc_prod_is_arrD)"], ["proof (state)\nthis:\n  h\\<lparr>i\\<rparr> : c\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> d\\<lparr>i\\<rparr>\n  g\\<lparr>i\\<rparr> : b\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> c\\<lparr>i\\<rparr>\n  f\\<lparr>i\\<rparr> : a\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> b\\<lparr>i\\<rparr>\n  h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n  g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> d\n  g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n  f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       (h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        f)\\<lparr>i\\<rparr> =\n       (h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n         f))\\<lparr>i\\<rparr>", "with prems that"], ["proof (chain)\npicking this:\n  i \\<in>\\<^sub>\\<circ> I\n  h : c \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> d\n  g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b\n  h\\<lparr>i\\<rparr> : c\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> d\\<lparr>i\\<rparr>\n  g\\<lparr>i\\<rparr> : b\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> c\\<lparr>i\\<rparr>\n  f\\<lparr>i\\<rparr> : a\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> b\\<lparr>i\\<rparr>\n  h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n  g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> d\n  g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n  f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c", "show \n      \"(h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f)\\<lparr>i\\<rparr> =\n        (h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f))\\<lparr>i\\<rparr>\""], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> I\n  h : c \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> d\n  g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b\n  h\\<lparr>i\\<rparr> : c\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> d\\<lparr>i\\<rparr>\n  g\\<lparr>i\\<rparr> : b\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> c\\<lparr>i\\<rparr>\n  f\\<lparr>i\\<rparr> : a\\<lparr>i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> i\\<^esub> b\\<lparr>i\\<rparr>\n  h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n  g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> d\n  g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n  f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c\n\ngoal (1 subgoal):\n 1. (h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n     g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n     f)\\<lparr>i\\<rparr> =\n    (h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n     (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f))\\<lparr>i\\<rparr>", "by (simp add: smc_prod_Comp_app_component smc_Comp_assoc)"], ["proof (state)\nthis:\n  (h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n   g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n   f)\\<lparr>i\\<rparr> =\n  (h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n   (g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f))\\<lparr>i\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?h : ?c \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> ?d;\n   ?g : ?b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> ?c;\n   ?f : ?a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> ?b\\<rbrakk>\n  \\<Longrightarrow> ?h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                    ?g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                    ?f =\n                    ?h \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                    (?g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> ?f)\n\ngoal (1 subgoal):\n 1. \\<Z> \\<beta>", "qed (intro assms)"], ["", "subsection\\<open>Further local assumptions for product semicategories\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "locale psemicategory = psemicategory_base \\<alpha> I \\<AA> for \\<alpha> I \\<AA> +\n  assumes psmc_Obj_vsubset_Vset: \n    \"J \\<subseteq>\\<^sub>\\<circ> I \\<Longrightarrow> (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>J. \\<AA> i)\\<lparr>Obj\\<rparr> \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and psmc_Hom_vifunion_in_Vset: \n      \"\\<lbrakk>\n        J \\<subseteq>\\<^sub>\\<circ> I;\n        A \\<subseteq>\\<^sub>\\<circ> (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>J. \\<AA> i)\\<lparr>Obj\\<rparr>;\n        B \\<subseteq>\\<^sub>\\<circ> (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>J. \\<AA> i)\\<lparr>Obj\\<rparr>;\n        A \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n        B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n      \\<rbrakk> \\<Longrightarrow> (\\<Union>\\<^sub>\\<circ>a\\<in>\\<^sub>\\<circ>A. \\<Union>\\<^sub>\\<circ>b\\<in>\\<^sub>\\<circ>B. Hom (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>J. \\<AA> i) a b) \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["", "text\\<open>Rules.\\<close>"], ["", "lemma (in psemicategory) psemicategory_axioms'[smc_prod_cs_intros]: \n  assumes \"\\<alpha>' = \\<alpha>\" and \"I' = I\"\n  shows \"psemicategory \\<alpha>' I' \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. psemicategory \\<alpha>' I' \\<AA>", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. psemicategory \\<alpha> I \\<AA>", "by (rule psemicategory_axioms)"], ["", "mk_ide rf psemicategory_def[unfolded psemicategory_axioms_def]\n  |intro psemicategoryI|\n  |dest psemicategoryD[dest]|\n  |elim psemicategoryE[elim]|"], ["", "lemmas [smc_prod_cs_intros] = psemicategoryD(1)"], ["", "lemma psemicategory_pdigraphI:\n  assumes \"pdigraph \\<alpha> I (\\<lambda>i. smc_dg (\\<AA> i))\" \n    and \"\\<And>i. i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow> semicategory \\<alpha> (\\<AA> i)\"\n  shows \"psemicategory \\<alpha> I \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. psemicategory \\<alpha> I \\<AA>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. psemicategory \\<alpha> I \\<AA>", "interpret pdigraph \\<alpha> I \\<open>\\<lambda>i. smc_dg (\\<AA> i)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. pdigraph \\<alpha> I (\\<lambda>i. smc_dg (\\<AA> i))", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. psemicategory \\<alpha> I \\<AA>", "note [unfolded slicing_simps slicing_commute, smc_cs_intros] = \n    pdg_Obj_vsubset_Vset\n    pdg_Hom_vifunion_in_Vset"], ["proof (state)\nthis:\n  ?J \\<subseteq>\\<^sub>\\<circ> I \\<Longrightarrow>\n  smc_prod ?J \\<AA>\\<lparr>Obj\\<rparr>\n  \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<lbrakk>?J \\<subseteq>\\<^sub>\\<circ> I;\n   ?A \\<subseteq>\\<^sub>\\<circ> smc_prod ?J \\<AA>\\<lparr>Obj\\<rparr>;\n   ?B \\<subseteq>\\<^sub>\\<circ> smc_prod ?J \\<AA>\\<lparr>Obj\\<rparr>;\n   ?A \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n   ?B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n  \\<Longrightarrow> \\<Union>\\<^sub>\\<circ>\n                     ((\\<lambda>a\\<in>\\<^sub>\\<circ>?A.\n                          \\<Union>\\<^sub>\\<circ>\n                           (VLambda ?B\n                             (Hom (smc_prod ?J \\<AA>) a) `\\<^sub>\\<circ>\n                            ?B)) `\\<^sub>\\<circ>\n                      ?A)\n                    \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. psemicategory \\<alpha> I \\<AA>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. psemicategory \\<alpha> I \\<AA>", "by (intro psemicategoryI psemicategory_base_pdigraph_baseI)\n      (auto simp: assms(2) dg_prod_cs_intros intro!: smc_cs_intros)"], ["proof (state)\nthis:\n  psemicategory \\<alpha> I \\<AA>\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Product semicategory is a product digraph.\\<close>"], ["", "context psemicategory\nbegin"], ["", "lemma psmc_pdigraph: \"pdigraph \\<alpha> I (\\<lambda>i. smc_dg (\\<AA> i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pdigraph \\<alpha> I (\\<lambda>i. smc_dg (\\<AA> i))", "proof(intro pdigraphI, unfold slicing_simps slicing_commute)"], ["proof (state)\ngoal (3 subgoals):\n 1. pdigraph_base \\<alpha> I (\\<lambda>i. smc_dg (\\<AA> i))\n 2. \\<And>J.\n       J \\<subseteq>\\<^sub>\\<circ> I \\<Longrightarrow>\n       smc_prod J \\<AA>\\<lparr>Obj\\<rparr>\n       \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\n 3. \\<And>J A B.\n       \\<lbrakk>J \\<subseteq>\\<^sub>\\<circ> I;\n        A \\<subseteq>\\<^sub>\\<circ> smc_prod J \\<AA>\\<lparr>Obj\\<rparr>;\n        B \\<subseteq>\\<^sub>\\<circ> smc_prod J \\<AA>\\<lparr>Obj\\<rparr>;\n        A \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n        B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<Union>\\<^sub>\\<circ>\n                          ((\\<lambda>a\\<in>\\<^sub>\\<circ>A.\n                               \\<Union>\\<^sub>\\<circ>\n                                (VLambda B\n                                  (Hom (smc_prod J \\<AA>) a) `\\<^sub>\\<circ>\n                                 B)) `\\<^sub>\\<circ>\n                           A)\n                         \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"pdigraph_base \\<alpha> I (\\<lambda>i. smc_dg (\\<AA> i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pdigraph_base \\<alpha> I (\\<lambda>i. smc_dg (\\<AA> i))", "by (rule psmc_pdigraph_base)"], ["proof (state)\nthis:\n  pdigraph_base \\<alpha> I (\\<lambda>i. smc_dg (\\<AA> i))\n\ngoal (2 subgoals):\n 1. \\<And>J.\n       J \\<subseteq>\\<^sub>\\<circ> I \\<Longrightarrow>\n       smc_prod J \\<AA>\\<lparr>Obj\\<rparr>\n       \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\n 2. \\<And>J A B.\n       \\<lbrakk>J \\<subseteq>\\<^sub>\\<circ> I;\n        A \\<subseteq>\\<^sub>\\<circ> smc_prod J \\<AA>\\<lparr>Obj\\<rparr>;\n        B \\<subseteq>\\<^sub>\\<circ> smc_prod J \\<AA>\\<lparr>Obj\\<rparr>;\n        A \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n        B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<Union>\\<^sub>\\<circ>\n                          ((\\<lambda>a\\<in>\\<^sub>\\<circ>A.\n                               \\<Union>\\<^sub>\\<circ>\n                                (VLambda B\n                                  (Hom (smc_prod J \\<AA>) a) `\\<^sub>\\<circ>\n                                 B)) `\\<^sub>\\<circ>\n                           A)\n                         \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "qed (auto intro!: psmc_Obj_vsubset_Vset psmc_Hom_vifunion_in_Vset)"], ["", "interpretation pdg: pdigraph \\<alpha> I \\<open>\\<lambda>i. smc_dg (\\<AA> i)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. pdigraph \\<alpha> I (\\<lambda>i. smc_dg (\\<AA> i))", "by (rule psmc_pdigraph)"], ["", "lemmas_with [unfolded slicing_simps slicing_commute]: \n  psmc_Obj_vsubset_Vset' = pdg.pdg_Obj_vsubset_Vset'\n  and psmc_Hom_vifunion_in_Vset' = pdg.pdg_Hom_vifunion_in_Vset'\n  and psmc_smc_prod_vunion_is_arr = pdg.pdg_dg_prod_vunion_is_arr\n  and psmc_smc_prod_vdiff_vunion_is_arr = pdg.pdg_dg_prod_vdiff_vunion_is_arr"], ["", "end"], ["", "text\\<open>Elementary properties.\\<close>"], ["", "lemma (in psemicategory) psmc_vsubset_index_psemicategory:\n  assumes \"J \\<subseteq>\\<^sub>\\<circ> I\"\n  shows \"psemicategory \\<alpha> J \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. psemicategory \\<alpha> J \\<AA>", "proof(intro psemicategoryI psemicategory_pdigraphI)"], ["proof (state)\ngoal (3 subgoals):\n 1. psemicategory_base \\<alpha> J \\<AA>\n 2. \\<And>Ja.\n       Ja \\<subseteq>\\<^sub>\\<circ> J \\<Longrightarrow>\n       smc_prod Ja \\<AA>\\<lparr>Obj\\<rparr>\n       \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\n 3. \\<And>Ja A B.\n       \\<lbrakk>Ja \\<subseteq>\\<^sub>\\<circ> J;\n        A \\<subseteq>\\<^sub>\\<circ> smc_prod Ja \\<AA>\\<lparr>Obj\\<rparr>;\n        B \\<subseteq>\\<^sub>\\<circ> smc_prod Ja \\<AA>\\<lparr>Obj\\<rparr>;\n        A \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n        B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<Union>\\<^sub>\\<circ>\n                          ((\\<lambda>a\\<in>\\<^sub>\\<circ>A.\n                               \\<Union>\\<^sub>\\<circ>\n                                (VLambda B\n                                  (Hom (smc_prod Ja \\<AA>)\n                                    a) `\\<^sub>\\<circ>\n                                 B)) `\\<^sub>\\<circ>\n                           A)\n                         \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"smc_prod J' \\<AA>\\<lparr>Obj\\<rparr> \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\" if \\<open>J' \\<subseteq>\\<^sub>\\<circ> J\\<close> for J'"], ["proof (prove)\ngoal (1 subgoal):\n 1. smc_prod J' \\<AA>\\<lparr>Obj\\<rparr>\n    \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. smc_prod J' \\<AA>\\<lparr>Obj\\<rparr>\n    \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>", "from that assms"], ["proof (chain)\npicking this:\n  J' \\<subseteq>\\<^sub>\\<circ> J\n  J \\<subseteq>\\<^sub>\\<circ> I", "have \"J' \\<subseteq>\\<^sub>\\<circ> I\""], ["proof (prove)\nusing this:\n  J' \\<subseteq>\\<^sub>\\<circ> J\n  J \\<subseteq>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. J' \\<subseteq>\\<^sub>\\<circ> I", "by simp"], ["proof (state)\nthis:\n  J' \\<subseteq>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. smc_prod J' \\<AA>\\<lparr>Obj\\<rparr>\n    \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>", "then"], ["proof (chain)\npicking this:\n  J' \\<subseteq>\\<^sub>\\<circ> I", "show \"smc_prod J' \\<AA>\\<lparr>Obj\\<rparr> \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  J' \\<subseteq>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. smc_prod J' \\<AA>\\<lparr>Obj\\<rparr>\n    \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>", "by (rule psmc_Obj_vsubset_Vset)"], ["proof (state)\nthis:\n  smc_prod J' \\<AA>\\<lparr>Obj\\<rparr>\n  \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?J' \\<subseteq>\\<^sub>\\<circ> J \\<Longrightarrow>\n  smc_prod ?J' \\<AA>\\<lparr>Obj\\<rparr>\n  \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (2 subgoals):\n 1. psemicategory_base \\<alpha> J \\<AA>\n 2. \\<And>Ja A B.\n       \\<lbrakk>Ja \\<subseteq>\\<^sub>\\<circ> J;\n        A \\<subseteq>\\<^sub>\\<circ> smc_prod Ja \\<AA>\\<lparr>Obj\\<rparr>;\n        B \\<subseteq>\\<^sub>\\<circ> smc_prod Ja \\<AA>\\<lparr>Obj\\<rparr>;\n        A \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n        B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<Union>\\<^sub>\\<circ>\n                          ((\\<lambda>a\\<in>\\<^sub>\\<circ>A.\n                               \\<Union>\\<^sub>\\<circ>\n                                (VLambda B\n                                  (Hom (smc_prod Ja \\<AA>)\n                                    a) `\\<^sub>\\<circ>\n                                 B)) `\\<^sub>\\<circ>\n                           A)\n                         \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "fix A B J'"], ["proof (state)\ngoal (2 subgoals):\n 1. psemicategory_base \\<alpha> J \\<AA>\n 2. \\<And>Ja A B.\n       \\<lbrakk>Ja \\<subseteq>\\<^sub>\\<circ> J;\n        A \\<subseteq>\\<^sub>\\<circ> smc_prod Ja \\<AA>\\<lparr>Obj\\<rparr>;\n        B \\<subseteq>\\<^sub>\\<circ> smc_prod Ja \\<AA>\\<lparr>Obj\\<rparr>;\n        A \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n        B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<Union>\\<^sub>\\<circ>\n                          ((\\<lambda>a\\<in>\\<^sub>\\<circ>A.\n                               \\<Union>\\<^sub>\\<circ>\n                                (VLambda B\n                                  (Hom (smc_prod Ja \\<AA>)\n                                    a) `\\<^sub>\\<circ>\n                                 B)) `\\<^sub>\\<circ>\n                           A)\n                         \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "assume prems:\n    \"J' \\<subseteq>\\<^sub>\\<circ> J\"\n    \"A \\<subseteq>\\<^sub>\\<circ> (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>J'. \\<AA> i)\\<lparr>Obj\\<rparr>\"\n    \"B \\<subseteq>\\<^sub>\\<circ> (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>J'. \\<AA> i)\\<lparr>Obj\\<rparr>\"\n    \"A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" \n    \"B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (state)\nthis:\n  J' \\<subseteq>\\<^sub>\\<circ> J\n  A \\<subseteq>\\<^sub>\\<circ> smc_prod J' \\<AA>\\<lparr>Obj\\<rparr>\n  B \\<subseteq>\\<^sub>\\<circ> smc_prod J' \\<AA>\\<lparr>Obj\\<rparr>\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (2 subgoals):\n 1. psemicategory_base \\<alpha> J \\<AA>\n 2. \\<And>Ja A B.\n       \\<lbrakk>Ja \\<subseteq>\\<^sub>\\<circ> J;\n        A \\<subseteq>\\<^sub>\\<circ> smc_prod Ja \\<AA>\\<lparr>Obj\\<rparr>;\n        B \\<subseteq>\\<^sub>\\<circ> smc_prod Ja \\<AA>\\<lparr>Obj\\<rparr>;\n        A \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n        B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<Union>\\<^sub>\\<circ>\n                          ((\\<lambda>a\\<in>\\<^sub>\\<circ>A.\n                               \\<Union>\\<^sub>\\<circ>\n                                (VLambda B\n                                  (Hom (smc_prod Ja \\<AA>)\n                                    a) `\\<^sub>\\<circ>\n                                 B)) `\\<^sub>\\<circ>\n                           A)\n                         \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"(\\<Union>\\<^sub>\\<circ>a\\<in>\\<^sub>\\<circ>A. \\<Union>\\<^sub>\\<circ>b\\<in>\\<^sub>\\<circ>B. Hom (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>J'. \\<AA> i) a b) \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union>\\<^sub>\\<circ>\n     ((\\<lambda>a\\<in>\\<^sub>\\<circ>A.\n          \\<Union>\\<^sub>\\<circ>\n           (VLambda B (Hom (smc_prod J' \\<AA>) a) `\\<^sub>\\<circ>\n            B)) `\\<^sub>\\<circ>\n      A)\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Union>\\<^sub>\\<circ>\n     ((\\<lambda>a\\<in>\\<^sub>\\<circ>A.\n          \\<Union>\\<^sub>\\<circ>\n           (VLambda B (Hom (smc_prod J' \\<AA>) a) `\\<^sub>\\<circ>\n            B)) `\\<^sub>\\<circ>\n      A)\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "from prems(1) assms"], ["proof (chain)\npicking this:\n  J' \\<subseteq>\\<^sub>\\<circ> J\n  J \\<subseteq>\\<^sub>\\<circ> I", "have \"J' \\<subseteq>\\<^sub>\\<circ> I\""], ["proof (prove)\nusing this:\n  J' \\<subseteq>\\<^sub>\\<circ> J\n  J \\<subseteq>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. J' \\<subseteq>\\<^sub>\\<circ> I", "by simp"], ["proof (state)\nthis:\n  J' \\<subseteq>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. \\<Union>\\<^sub>\\<circ>\n     ((\\<lambda>a\\<in>\\<^sub>\\<circ>A.\n          \\<Union>\\<^sub>\\<circ>\n           (VLambda B (Hom (smc_prod J' \\<AA>) a) `\\<^sub>\\<circ>\n            B)) `\\<^sub>\\<circ>\n      A)\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "from psmc_Hom_vifunion_in_Vset[OF this prems(2-5)]"], ["proof (chain)\npicking this:\n  \\<Union>\\<^sub>\\<circ>\n   ((\\<lambda>a\\<in>\\<^sub>\\<circ>A.\n        \\<Union>\\<^sub>\\<circ>\n         (VLambda B (Hom (smc_prod J' \\<AA>) a) `\\<^sub>\\<circ>\n          B)) `\\<^sub>\\<circ>\n    A)\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Union>\\<^sub>\\<circ>\n   ((\\<lambda>a\\<in>\\<^sub>\\<circ>A.\n        \\<Union>\\<^sub>\\<circ>\n         (VLambda B (Hom (smc_prod J' \\<AA>) a) `\\<^sub>\\<circ>\n          B)) `\\<^sub>\\<circ>\n    A)\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<Union>\\<^sub>\\<circ>\n     ((\\<lambda>a\\<in>\\<^sub>\\<circ>A.\n          \\<Union>\\<^sub>\\<circ>\n           (VLambda B (Hom (smc_prod J' \\<AA>) a) `\\<^sub>\\<circ>\n            B)) `\\<^sub>\\<circ>\n      A)\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "."], ["proof (state)\nthis:\n  \\<Union>\\<^sub>\\<circ>\n   ((\\<lambda>a\\<in>\\<^sub>\\<circ>A.\n        \\<Union>\\<^sub>\\<circ>\n         (VLambda B (Hom (smc_prod J' \\<AA>) a) `\\<^sub>\\<circ>\n          B)) `\\<^sub>\\<circ>\n    A)\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Union>\\<^sub>\\<circ>\n   ((\\<lambda>a\\<in>\\<^sub>\\<circ>A.\n        \\<Union>\\<^sub>\\<circ>\n         (VLambda B (Hom (smc_prod J' \\<AA>) a) `\\<^sub>\\<circ>\n          B)) `\\<^sub>\\<circ>\n    A)\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. psemicategory_base \\<alpha> J \\<AA>", "qed (rule psmc_vsubset_index_psemicategory_base[OF assms])"], ["", "subsubsection\\<open>A product \\<open>\\<alpha>\\<close>-semicategory is an \\<open>\\<alpha>\\<close>-semicategory\\<close>"], ["", "lemma (in psemicategory) psmc_semicategory_smc_prod: \n  \"semicategory \\<alpha> (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (smc_prod I \\<AA>)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (smc_prod I \\<AA>)", "interpret tiny_semicategory \\<open>\\<alpha> + \\<omega>\\<close> \\<open>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. tiny_semicategory (\\<alpha> + \\<omega>) (smc_prod I \\<AA>)", "by (intro psmc_tiny_semicategory_smc_prod) \n      (auto simp: \\<Z>_\\<alpha>_\\<alpha>\\<omega> \\<Z>.intro \\<Z>_Limit_\\<alpha>\\<omega> \\<Z>_\\<omega>_\\<alpha>\\<omega>)"], ["proof (state)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (smc_prod I \\<AA>)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (smc_prod I \\<AA>)", "by (rule semicategory_if_semicategory)  \n      (\n        auto \n          intro!: psmc_Hom_vifunion_in_Vset psmc_Obj_vsubset_Vset\n          intro: smc_cs_intros\n      )"], ["proof (state)\nthis:\n  semicategory \\<alpha> (smc_prod I \\<AA>)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Local assumptions for a finite product semicategory\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "locale finite_psemicategory = psemicategory_base \\<alpha> I \\<AA> for \\<alpha> I \\<AA> +\n  assumes fin_psmc_index_vfinite: \"vfinite I\""], ["", "text\\<open>Rules.\\<close>"], ["", "lemma (in finite_psemicategory) finite_psemicategory_axioms[smc_prod_cs_intros]: \n  assumes \"\\<alpha>' = \\<alpha>\" and \"I' = I\"\n  shows \"finite_psemicategory \\<alpha>' I' \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_psemicategory \\<alpha>' I' \\<AA>", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_psemicategory \\<alpha> I \\<AA>", "by (rule finite_psemicategory_axioms)"], ["", "mk_ide rf finite_psemicategory_def[unfolded finite_psemicategory_axioms_def]\n  |intro finite_psemicategoryI|\n  |dest finite_psemicategoryD[dest]|\n  |elim finite_psemicategoryE[elim]|"], ["", "lemmas [smc_prod_cs_intros] = finite_psemicategoryD(1)"], ["", "lemma finite_psemicategory_finite_pdigraphI:\n  assumes \"finite_pdigraph \\<alpha> I (\\<lambda>i. smc_dg (\\<AA> i))\" \n    and \"\\<And>i. i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow> semicategory \\<alpha> (\\<AA> i)\"\n  shows \"finite_psemicategory \\<alpha> I \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_psemicategory \\<alpha> I \\<AA>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. finite_psemicategory \\<alpha> I \\<AA>", "interpret finite_pdigraph \\<alpha> I \\<open>\\<lambda>i. smc_dg (\\<AA> i)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_pdigraph \\<alpha> I (\\<lambda>i. smc_dg (\\<AA> i))", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. finite_psemicategory \\<alpha> I \\<AA>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_psemicategory \\<alpha> I \\<AA>", "by \n      (\n        intro \n          assms\n          finite_psemicategoryI \n          psemicategory_base_pdigraph_baseI \n          finite_pdigraphD(1)[OF assms(1)]\n          fin_pdg_index_vfinite\n      )"], ["proof (state)\nthis:\n  finite_psemicategory \\<alpha> I \\<AA>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>\nLocal assumptions for a finite product semicategory and local\nassumptions for an arbitrary product semicategory\n\\<close>"], ["", "sublocale finite_psemicategory \\<subseteq> psemicategory \\<alpha> I \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. psemicategory \\<alpha> I \\<AA>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. psemicategory \\<alpha> I \\<AA>", "interpret finite_pdigraph \\<alpha> I \\<open>\\<lambda>i. smc_dg (\\<AA> i)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_pdigraph \\<alpha> I (\\<lambda>i. smc_dg (\\<AA> i))", "proof(intro finite_pdigraphI pdigraph_baseI)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<Z> \\<alpha>\n 2. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       digraph \\<alpha> (smc_dg (\\<AA> i))\n 3. I \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 4. vfinite I", "fix i"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<Z> \\<alpha>\n 2. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       digraph \\<alpha> (smc_dg (\\<AA> i))\n 3. I \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 4. vfinite I", "assume i: \"i \\<in>\\<^sub>\\<circ> I\""], ["proof (state)\nthis:\n  i \\<in>\\<^sub>\\<circ> I\n\ngoal (4 subgoals):\n 1. \\<Z> \\<alpha>\n 2. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       digraph \\<alpha> (smc_dg (\\<AA> i))\n 3. I \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 4. vfinite I", "interpret \\<AA>i: semicategory \\<alpha> \\<open>\\<AA> i\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (\\<AA> i)", "by (simp add: i psmc_semicategories)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<Z> \\<alpha>\n 2. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       digraph \\<alpha> (smc_dg (\\<AA> i))\n 3. I \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 4. vfinite I", "show \"digraph \\<alpha> (smc_dg (\\<AA> i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. digraph \\<alpha> (smc_dg (\\<AA> i))", "by (simp add: \\<AA>i.smc_digraph)"], ["proof (state)\nthis:\n  digraph \\<alpha> (smc_dg (\\<AA> i))\n\ngoal (3 subgoals):\n 1. \\<Z> \\<alpha>\n 2. I \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 3. vfinite I", "qed (auto intro!: smc_cs_intros fin_psmc_index_vfinite)"], ["proof (state)\ngoal (1 subgoal):\n 1. psemicategory \\<alpha> I \\<AA>", "show \"psemicategory \\<alpha> I \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. psemicategory \\<alpha> I \\<AA>", "by (intro psemicategory_pdigraphI) \n      (simp_all add: psmc_semicategories pdigraph_axioms)"], ["proof (state)\nthis:\n  psemicategory \\<alpha> I \\<AA>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Binary union and complement\\<close>"], ["", "lemma (in psemicategory) psmc_smc_prod_vunion_Comp:\n  assumes \"vdisjnt J K\"\n    and \"J \\<subseteq>\\<^sub>\\<circ> I\"\n    and \"K \\<subseteq>\\<^sub>\\<circ> I\"\n    and \"g : b \\<mapsto>\\<^bsub>(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Cj\\<in>\\<^sub>\\<circ>J. \\<AA> j)\\<^esub> c\"\n    and \"g' : b' \\<mapsto>\\<^bsub>(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ck\\<in>\\<^sub>\\<circ>K. \\<AA> k)\\<^esub> c'\"\n    and \"f : a \\<mapsto>\\<^bsub>(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Cj\\<in>\\<^sub>\\<circ>J. \\<AA> j)\\<^esub> b\"\n    and \"f' : a' \\<mapsto>\\<^bsub>(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ck\\<in>\\<^sub>\\<circ>K. \\<AA> k)\\<^esub> b'\"\n  shows \"(g \\<circ>\\<^sub>A\\<^bsub>(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Cj\\<in>\\<^sub>\\<circ>J. \\<AA> j)\\<^esub> f) \\<union>\\<^sub>\\<circ> (g' \\<circ>\\<^sub>A\\<^bsub>(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Cj\\<in>\\<^sub>\\<circ>K. \\<AA> j)\\<^esub> f') = \n    g \\<union>\\<^sub>\\<circ> g' \\<circ>\\<^sub>A\\<^bsub>(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Cj\\<in>\\<^sub>\\<circ>J \\<union>\\<^sub>\\<circ> K. \\<AA> j)\\<^esub> f \\<union>\\<^sub>\\<circ> f'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n     f) \\<union>\\<^sub>\\<circ>\n    (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f') =\n    g \\<union>\\<^sub>\\<circ>\n    g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n    f \\<union>\\<^sub>\\<circ> f'", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n     f) \\<union>\\<^sub>\\<circ>\n    (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f') =\n    g \\<union>\\<^sub>\\<circ>\n    g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n    f \\<union>\\<^sub>\\<circ> f'", "interpret J\\<AA>: psemicategory \\<alpha> J \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. psemicategory \\<alpha> J \\<AA>", "using assms(2)"], ["proof (prove)\nusing this:\n  J \\<subseteq>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. psemicategory \\<alpha> J \\<AA>", "by (simp add: psmc_vsubset_index_psemicategory)"], ["proof (state)\ngoal (1 subgoal):\n 1. (g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n     f) \\<union>\\<^sub>\\<circ>\n    (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f') =\n    g \\<union>\\<^sub>\\<circ>\n    g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n    f \\<union>\\<^sub>\\<circ> f'", "interpret K\\<AA>: psemicategory \\<alpha> K \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. psemicategory \\<alpha> K \\<AA>", "using assms(3)"], ["proof (prove)\nusing this:\n  K \\<subseteq>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. psemicategory \\<alpha> K \\<AA>", "by (simp add: psmc_vsubset_index_psemicategory)"], ["proof (state)\ngoal (1 subgoal):\n 1. (g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n     f) \\<union>\\<^sub>\\<circ>\n    (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f') =\n    g \\<union>\\<^sub>\\<circ>\n    g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n    f \\<union>\\<^sub>\\<circ> f'", "interpret JK\\<AA>: psemicategory \\<alpha> \\<open>J \\<union>\\<^sub>\\<circ> K\\<close> \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. psemicategory \\<alpha> (J \\<union>\\<^sub>\\<circ> K) \\<AA>", "using assms(2,3)"], ["proof (prove)\nusing this:\n  J \\<subseteq>\\<^sub>\\<circ> I\n  K \\<subseteq>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. psemicategory \\<alpha> (J \\<union>\\<^sub>\\<circ> K) \\<AA>", "by (simp add: psmc_vsubset_index_psemicategory)"], ["proof (state)\ngoal (1 subgoal):\n 1. (g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n     f) \\<union>\\<^sub>\\<circ>\n    (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f') =\n    g \\<union>\\<^sub>\\<circ>\n    g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n    f \\<union>\\<^sub>\\<circ> f'", "interpret J\\<AA>': semicategory \\<alpha> \\<open>smc_prod J \\<AA>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (smc_prod J \\<AA>)", "by (rule J\\<AA>.psmc_semicategory_smc_prod)"], ["proof (state)\ngoal (1 subgoal):\n 1. (g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n     f) \\<union>\\<^sub>\\<circ>\n    (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f') =\n    g \\<union>\\<^sub>\\<circ>\n    g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n    f \\<union>\\<^sub>\\<circ> f'", "interpret K\\<AA>': semicategory \\<alpha> \\<open>smc_prod K \\<AA>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (smc_prod K \\<AA>)", "by (rule K\\<AA>.psmc_semicategory_smc_prod)"], ["proof (state)\ngoal (1 subgoal):\n 1. (g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n     f) \\<union>\\<^sub>\\<circ>\n    (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f') =\n    g \\<union>\\<^sub>\\<circ>\n    g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n    f \\<union>\\<^sub>\\<circ> f'", "interpret JK\\<AA>': semicategory \\<alpha> \\<open>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>)", "by (rule JK\\<AA>.psmc_semicategory_smc_prod)"], ["proof (state)\ngoal (1 subgoal):\n 1. (g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n     f) \\<union>\\<^sub>\\<circ>\n    (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f') =\n    g \\<union>\\<^sub>\\<circ>\n    g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n    f \\<union>\\<^sub>\\<circ> f'", "note gg' = psmc_smc_prod_vunion_is_arr[OF assms(1-3,4,5)]\n    and ff' = psmc_smc_prod_vunion_is_arr[OF assms(1-3,6,7)]"], ["proof (state)\nthis:\n  g \\<union>\\<^sub>\\<circ>\n  g' : b \\<union>\\<^sub>\\<circ>\n       b' \\<mapsto>\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub> c \\<union>\\<^sub>\\<circ>\n   c'\n  f \\<union>\\<^sub>\\<circ>\n  f' : a \\<union>\\<^sub>\\<circ>\n       a' \\<mapsto>\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub> b \\<union>\\<^sub>\\<circ>\n   b'\n\ngoal (1 subgoal):\n 1. (g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n     f) \\<union>\\<^sub>\\<circ>\n    (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f') =\n    g \\<union>\\<^sub>\\<circ>\n    g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n    f \\<union>\\<^sub>\\<circ> f'", "note gD = J\\<AA>.smc_prod_is_arrD[OF assms(4)]\n    and g'D = K\\<AA>.smc_prod_is_arrD[OF assms(5)]\n    and fD = J\\<AA>.smc_prod_is_arrD[OF assms(6)]\n    and f'D = K\\<AA>.smc_prod_is_arrD[OF assms(7)]"], ["proof (state)\nthis:\n  vsv g\n  \\<D>\\<^sub>\\<circ> g = J\n  vsv b\n  \\<D>\\<^sub>\\<circ> b = J\n  vsv c\n  \\<D>\\<^sub>\\<circ> c = J\n  ?i \\<in>\\<^sub>\\<circ> J \\<Longrightarrow>\n  g\\<lparr>?i\\<rparr> : b\\<lparr>?i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> ?i\\<^esub> c\\<lparr>?i\\<rparr>\n  vsv g'\n  \\<D>\\<^sub>\\<circ> g' = K\n  vsv b'\n  \\<D>\\<^sub>\\<circ> b' = K\n  vsv c'\n  \\<D>\\<^sub>\\<circ> c' = K\n  ?i \\<in>\\<^sub>\\<circ> K \\<Longrightarrow>\n  g'\\<lparr>?i\\<rparr> : b'\\<lparr>?i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> ?i\\<^esub> c'\\<lparr>?i\\<rparr>\n  vsv f\n  \\<D>\\<^sub>\\<circ> f = J\n  vsv a\n  \\<D>\\<^sub>\\<circ> a = J\n  vsv b\n  \\<D>\\<^sub>\\<circ> b = J\n  ?i \\<in>\\<^sub>\\<circ> J \\<Longrightarrow>\n  f\\<lparr>?i\\<rparr> : a\\<lparr>?i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> ?i\\<^esub> b\\<lparr>?i\\<rparr>\n  vsv f'\n  \\<D>\\<^sub>\\<circ> f' = K\n  vsv a'\n  \\<D>\\<^sub>\\<circ> a' = K\n  vsv b'\n  \\<D>\\<^sub>\\<circ> b' = K\n  ?i \\<in>\\<^sub>\\<circ> K \\<Longrightarrow>\n  f'\\<lparr>?i\\<rparr> : a'\\<lparr>?i\\<rparr> \\<mapsto>\\<^bsub>\\<AA> ?i\\<^esub> b'\\<lparr>?i\\<rparr>\n\ngoal (1 subgoal):\n 1. (g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n     f) \\<union>\\<^sub>\\<circ>\n    (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f') =\n    g \\<union>\\<^sub>\\<circ>\n    g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n    f \\<union>\\<^sub>\\<circ> f'", "from assms(4,6)"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^bsub>smc_prod J \\<AA>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>smc_prod J \\<AA>\\<^esub> b", "have gf: \n    \"g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub> f : a \\<mapsto>\\<^bsub>(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Cj\\<in>\\<^sub>\\<circ>J. \\<AA> j)\\<^esub> c\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>smc_prod J \\<AA>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>smc_prod J \\<AA>\\<^esub> b\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n    f : a \\<mapsto>\\<^bsub>smc_prod J \\<AA>\\<^esub> c", "by (auto intro: smc_cs_intros)"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n  f : a \\<mapsto>\\<^bsub>smc_prod J \\<AA>\\<^esub> c\n\ngoal (1 subgoal):\n 1. (g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n     f) \\<union>\\<^sub>\\<circ>\n    (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f') =\n    g \\<union>\\<^sub>\\<circ>\n    g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n    f \\<union>\\<^sub>\\<circ> f'", "from assms(5,7)"], ["proof (chain)\npicking this:\n  g' : b' \\<mapsto>\\<^bsub>smc_prod K \\<AA>\\<^esub> c'\n  f' : a' \\<mapsto>\\<^bsub>smc_prod K \\<AA>\\<^esub> b'", "have g'f': \n    \"g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f' : a' \\<mapsto>\\<^bsub>(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ck\\<in>\\<^sub>\\<circ>K. \\<AA> k)\\<^esub> c'\""], ["proof (prove)\nusing this:\n  g' : b' \\<mapsto>\\<^bsub>smc_prod K \\<AA>\\<^esub> c'\n  f' : a' \\<mapsto>\\<^bsub>smc_prod K \\<AA>\\<^esub> b'\n\ngoal (1 subgoal):\n 1. g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n    f' : a' \\<mapsto>\\<^bsub>smc_prod K \\<AA>\\<^esub> c'", "by (auto intro: smc_cs_intros)"], ["proof (state)\nthis:\n  g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n  f' : a' \\<mapsto>\\<^bsub>smc_prod K \\<AA>\\<^esub> c'\n\ngoal (1 subgoal):\n 1. (g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n     f) \\<union>\\<^sub>\\<circ>\n    (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f') =\n    g \\<union>\\<^sub>\\<circ>\n    g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n    f \\<union>\\<^sub>\\<circ> f'", "from gf"], ["proof (chain)\npicking this:\n  g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n  f : a \\<mapsto>\\<^bsub>smc_prod J \\<AA>\\<^esub> c", "have \"g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub> f \\<in>\\<^sub>\\<circ> smc_prod J \\<AA>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n  f : a \\<mapsto>\\<^bsub>smc_prod J \\<AA>\\<^esub> c\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub> f\n    \\<in>\\<^sub>\\<circ> smc_prod J \\<AA>\\<lparr>Arr\\<rparr>", "by auto"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub> f\n  \\<in>\\<^sub>\\<circ> smc_prod J \\<AA>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. (g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n     f) \\<union>\\<^sub>\\<circ>\n    (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f') =\n    g \\<union>\\<^sub>\\<circ>\n    g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n    f \\<union>\\<^sub>\\<circ> f'", "from g'f'"], ["proof (chain)\npicking this:\n  g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n  f' : a' \\<mapsto>\\<^bsub>smc_prod K \\<AA>\\<^esub> c'", "have \"g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f' \\<in>\\<^sub>\\<circ> smc_prod K \\<AA>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n  f' : a' \\<mapsto>\\<^bsub>smc_prod K \\<AA>\\<^esub> c'\n\ngoal (1 subgoal):\n 1. g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f'\n    \\<in>\\<^sub>\\<circ> smc_prod K \\<AA>\\<lparr>Arr\\<rparr>", "by auto"], ["proof (state)\nthis:\n  g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f'\n  \\<in>\\<^sub>\\<circ> smc_prod K \\<AA>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. (g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n     f) \\<union>\\<^sub>\\<circ>\n    (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f') =\n    g \\<union>\\<^sub>\\<circ>\n    g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n    f \\<union>\\<^sub>\\<circ> f'", "from gg' ff'"], ["proof (chain)\npicking this:\n  g \\<union>\\<^sub>\\<circ>\n  g' : b \\<union>\\<^sub>\\<circ>\n       b' \\<mapsto>\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub> c \\<union>\\<^sub>\\<circ>\n   c'\n  f \\<union>\\<^sub>\\<circ>\n  f' : a \\<union>\\<^sub>\\<circ>\n       a' \\<mapsto>\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub> b \\<union>\\<^sub>\\<circ>\n   b'", "have gg'_ff': \n    \"g \\<union>\\<^sub>\\<circ> g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub> f \\<union>\\<^sub>\\<circ> f' :\n      a \\<union>\\<^sub>\\<circ> a' \\<mapsto>\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub> c \\<union>\\<^sub>\\<circ> c'\""], ["proof (prove)\nusing this:\n  g \\<union>\\<^sub>\\<circ>\n  g' : b \\<union>\\<^sub>\\<circ>\n       b' \\<mapsto>\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub> c \\<union>\\<^sub>\\<circ>\n   c'\n  f \\<union>\\<^sub>\\<circ>\n  f' : a \\<union>\\<^sub>\\<circ>\n       a' \\<mapsto>\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub> b \\<union>\\<^sub>\\<circ>\n   b'\n\ngoal (1 subgoal):\n 1. g \\<union>\\<^sub>\\<circ>\n    g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n    f \\<union>\\<^sub>\\<circ>\n    f' : a \\<union>\\<^sub>\\<circ>\n         a' \\<mapsto>\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub> c \\<union>\\<^sub>\\<circ>\n     c'", "by (simp add: smc_cs_intros)"], ["proof (state)\nthis:\n  g \\<union>\\<^sub>\\<circ>\n  g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n  f \\<union>\\<^sub>\\<circ>\n  f' : a \\<union>\\<^sub>\\<circ>\n       a' \\<mapsto>\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub> c \\<union>\\<^sub>\\<circ>\n   c'\n\ngoal (1 subgoal):\n 1. (g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n     f) \\<union>\\<^sub>\\<circ>\n    (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f') =\n    g \\<union>\\<^sub>\\<circ>\n    g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n    f \\<union>\\<^sub>\\<circ> f'", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n     f) \\<union>\\<^sub>\\<circ>\n    (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f') =\n    g \\<union>\\<^sub>\\<circ>\n    g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n    f \\<union>\\<^sub>\\<circ> f'", "proof(rule smc_prod_Arr_cong[of _ \\<open>J \\<union>\\<^sub>\\<circ> K\\<close> \\<AA>])"], ["proof (state)\ngoal (3 subgoals):\n 1. (g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n     f) \\<union>\\<^sub>\\<circ>\n    (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f')\n    \\<in>\\<^sub>\\<circ> smc_prod (J \\<union>\\<^sub>\\<circ> K)\n                         \\<AA>\\<lparr>Arr\\<rparr>\n 2. g \\<union>\\<^sub>\\<circ>\n    g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n    f \\<union>\\<^sub>\\<circ> f'\n    \\<in>\\<^sub>\\<circ> smc_prod (J \\<union>\\<^sub>\\<circ> K)\n                         \\<AA>\\<lparr>Arr\\<rparr>\n 3. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> J \\<union>\\<^sub>\\<circ> K \\<Longrightarrow>\n       ((g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n         f) \\<union>\\<^sub>\\<circ>\n        (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n         f'))\\<lparr>i\\<rparr> =\n       (g \\<union>\\<^sub>\\<circ>\n        g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n        f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr>", "from gf g'f' assms(1)"], ["proof (chain)\npicking this:\n  g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n  f : a \\<mapsto>\\<^bsub>smc_prod J \\<AA>\\<^esub> c\n  g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n  f' : a' \\<mapsto>\\<^bsub>smc_prod K \\<AA>\\<^esub> c'\n  J \\<inter>\\<^sub>\\<circ> K = []\\<^sub>\\<circ>", "show \n      \"(g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub> f) \\<union>\\<^sub>\\<circ> (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f') \\<in>\\<^sub>\\<circ> \n        smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n  f : a \\<mapsto>\\<^bsub>smc_prod J \\<AA>\\<^esub> c\n  g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n  f' : a' \\<mapsto>\\<^bsub>smc_prod K \\<AA>\\<^esub> c'\n  J \\<inter>\\<^sub>\\<circ> K = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. (g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n     f) \\<union>\\<^sub>\\<circ>\n    (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f')\n    \\<in>\\<^sub>\\<circ> smc_prod (J \\<union>\\<^sub>\\<circ> K)\n                         \\<AA>\\<lparr>Arr\\<rparr>", "by (auto intro: smc_prod_vunion_Arr_in_Arr)"], ["proof (state)\nthis:\n  (g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n   f) \\<union>\\<^sub>\\<circ>\n  (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f')\n  \\<in>\\<^sub>\\<circ> smc_prod (J \\<union>\\<^sub>\\<circ> K)\n                       \\<AA>\\<lparr>Arr\\<rparr>\n\ngoal (2 subgoals):\n 1. g \\<union>\\<^sub>\\<circ>\n    g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n    f \\<union>\\<^sub>\\<circ> f'\n    \\<in>\\<^sub>\\<circ> smc_prod (J \\<union>\\<^sub>\\<circ> K)\n                         \\<AA>\\<lparr>Arr\\<rparr>\n 2. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> J \\<union>\\<^sub>\\<circ> K \\<Longrightarrow>\n       ((g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n         f) \\<union>\\<^sub>\\<circ>\n        (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n         f'))\\<lparr>i\\<rparr> =\n       (g \\<union>\\<^sub>\\<circ>\n        g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n        f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr>", "from gg'_ff'"], ["proof (chain)\npicking this:\n  g \\<union>\\<^sub>\\<circ>\n  g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n  f \\<union>\\<^sub>\\<circ>\n  f' : a \\<union>\\<^sub>\\<circ>\n       a' \\<mapsto>\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub> c \\<union>\\<^sub>\\<circ>\n   c'", "show \n      \"g \\<union>\\<^sub>\\<circ> g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub> f \\<union>\\<^sub>\\<circ> f' \\<in>\\<^sub>\\<circ> smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  g \\<union>\\<^sub>\\<circ>\n  g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n  f \\<union>\\<^sub>\\<circ>\n  f' : a \\<union>\\<^sub>\\<circ>\n       a' \\<mapsto>\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub> c \\<union>\\<^sub>\\<circ>\n   c'\n\ngoal (1 subgoal):\n 1. g \\<union>\\<^sub>\\<circ>\n    g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n    f \\<union>\\<^sub>\\<circ> f'\n    \\<in>\\<^sub>\\<circ> smc_prod (J \\<union>\\<^sub>\\<circ> K)\n                         \\<AA>\\<lparr>Arr\\<rparr>", "by auto"], ["proof (state)\nthis:\n  g \\<union>\\<^sub>\\<circ>\n  g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n  f \\<union>\\<^sub>\\<circ> f'\n  \\<in>\\<^sub>\\<circ> smc_prod (J \\<union>\\<^sub>\\<circ> K)\n                       \\<AA>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> J \\<union>\\<^sub>\\<circ> K \\<Longrightarrow>\n       ((g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n         f) \\<union>\\<^sub>\\<circ>\n        (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n         f'))\\<lparr>i\\<rparr> =\n       (g \\<union>\\<^sub>\\<circ>\n        g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n        f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr>", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> J \\<union>\\<^sub>\\<circ> K \\<Longrightarrow>\n       ((g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n         f) \\<union>\\<^sub>\\<circ>\n        (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n         f'))\\<lparr>i\\<rparr> =\n       (g \\<union>\\<^sub>\\<circ>\n        g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n        f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr>", "assume prems: \"i \\<in>\\<^sub>\\<circ> J \\<union>\\<^sub>\\<circ> K\""], ["proof (state)\nthis:\n  i \\<in>\\<^sub>\\<circ> J \\<union>\\<^sub>\\<circ> K\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> J \\<union>\\<^sub>\\<circ> K \\<Longrightarrow>\n       ((g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n         f) \\<union>\\<^sub>\\<circ>\n        (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n         f'))\\<lparr>i\\<rparr> =\n       (g \\<union>\\<^sub>\\<circ>\n        g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n        f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr>", "then"], ["proof (chain)\npicking this:\n  i \\<in>\\<^sub>\\<circ> J \\<union>\\<^sub>\\<circ> K", "consider (iJ) \\<open>i \\<in>\\<^sub>\\<circ> J\\<close> | (iK) \\<open>i \\<in>\\<^sub>\\<circ> K\\<close>"], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> J \\<union>\\<^sub>\\<circ> K\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<in>\\<^sub>\\<circ> J \\<Longrightarrow> thesis;\n     i \\<in>\\<^sub>\\<circ> K \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>i \\<in>\\<^sub>\\<circ> J \\<Longrightarrow> ?thesis;\n   i \\<in>\\<^sub>\\<circ> K \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> J \\<union>\\<^sub>\\<circ> K \\<Longrightarrow>\n       ((g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n         f) \\<union>\\<^sub>\\<circ>\n        (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n         f'))\\<lparr>i\\<rparr> =\n       (g \\<union>\\<^sub>\\<circ>\n        g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n        f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr>", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>i \\<in>\\<^sub>\\<circ> J \\<Longrightarrow> ?thesis;\n   i \\<in>\\<^sub>\\<circ> K \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show \n      \"((g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub> f) \\<union>\\<^sub>\\<circ> (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f'))\\<lparr>i\\<rparr> =\n        (g \\<union>\\<^sub>\\<circ> g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub> f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<lbrakk>i \\<in>\\<^sub>\\<circ> J \\<Longrightarrow> ?thesis;\n   i \\<in>\\<^sub>\\<circ> K \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. ((g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n      f) \\<union>\\<^sub>\\<circ>\n     (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n      f'))\\<lparr>i\\<rparr> =\n    (g \\<union>\\<^sub>\\<circ>\n     g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n     f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr>", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. i \\<in>\\<^sub>\\<circ> J \\<Longrightarrow>\n    ((g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n      f) \\<union>\\<^sub>\\<circ>\n     (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n      f'))\\<lparr>i\\<rparr> =\n    (g \\<union>\\<^sub>\\<circ>\n     g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n     f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr>\n 2. i \\<in>\\<^sub>\\<circ> K \\<Longrightarrow>\n    ((g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n      f) \\<union>\\<^sub>\\<circ>\n     (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n      f'))\\<lparr>i\\<rparr> =\n    (g \\<union>\\<^sub>\\<circ>\n     g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n     f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr>", "case iJ"], ["proof (state)\nthis:\n  i \\<in>\\<^sub>\\<circ> J\n\ngoal (2 subgoals):\n 1. i \\<in>\\<^sub>\\<circ> J \\<Longrightarrow>\n    ((g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n      f) \\<union>\\<^sub>\\<circ>\n     (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n      f'))\\<lparr>i\\<rparr> =\n    (g \\<union>\\<^sub>\\<circ>\n     g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n     f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr>\n 2. i \\<in>\\<^sub>\\<circ> K \\<Longrightarrow>\n    ((g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n      f) \\<union>\\<^sub>\\<circ>\n     (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n      f'))\\<lparr>i\\<rparr> =\n    (g \\<union>\\<^sub>\\<circ>\n     g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n     f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr>", "have [simp]:\n        \"((g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub> f) \\<union>\\<^sub>\\<circ> (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f'))\\<lparr>i\\<rparr> = \n          g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub> f\\<lparr>i\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n      f) \\<union>\\<^sub>\\<circ>\n     (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n      f'))\\<lparr>i\\<rparr> =\n    g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n    f\\<lparr>i\\<rparr>", "proof\n        (\n          fold smc_prod_Comp_app_component[OF assms(4,6) iJ], \n          rule vsv_vunion_app_left\n        )"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub> f)\n 2. vsv (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f')\n 3. \\<D>\\<^sub>\\<circ>\n     (g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n      f) \\<inter>\\<^sub>\\<circ>\n    \\<D>\\<^sub>\\<circ>\n     (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f') =\n    []\\<^sub>\\<circ>\n 4. i \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                           (g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n                            f)", "from gf"], ["proof (chain)\npicking this:\n  g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n  f : a \\<mapsto>\\<^bsub>smc_prod J \\<AA>\\<^esub> c", "show \"vsv (g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub> f)\""], ["proof (prove)\nusing this:\n  g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n  f : a \\<mapsto>\\<^bsub>smc_prod J \\<AA>\\<^esub> c\n\ngoal (1 subgoal):\n 1. vsv (g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub> f)", "by auto"], ["proof (state)\nthis:\n  vsv (g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub> f)\n\ngoal (3 subgoals):\n 1. vsv (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f')\n 2. \\<D>\\<^sub>\\<circ>\n     (g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n      f) \\<inter>\\<^sub>\\<circ>\n    \\<D>\\<^sub>\\<circ>\n     (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f') =\n    []\\<^sub>\\<circ>\n 3. i \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                           (g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n                            f)", "from g'f'"], ["proof (chain)\npicking this:\n  g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n  f' : a' \\<mapsto>\\<^bsub>smc_prod K \\<AA>\\<^esub> c'", "show \"vsv (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f')\""], ["proof (prove)\nusing this:\n  g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n  f' : a' \\<mapsto>\\<^bsub>smc_prod K \\<AA>\\<^esub> c'\n\ngoal (1 subgoal):\n 1. vsv (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f')", "by auto"], ["proof (state)\nthis:\n  vsv (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f')\n\ngoal (2 subgoals):\n 1. \\<D>\\<^sub>\\<circ>\n     (g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n      f) \\<inter>\\<^sub>\\<circ>\n    \\<D>\\<^sub>\\<circ>\n     (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f') =\n    []\\<^sub>\\<circ>\n 2. i \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                           (g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n                            f)", "qed \n        (\n          use assms(4-7) in \n            \\<open>simp_all add: iJ assms(1) smc_prod_Comp_app_vdomain\\<close>\n        )"], ["proof (state)\nthis:\n  ((g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n    f) \\<union>\\<^sub>\\<circ>\n   (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n    f'))\\<lparr>i\\<rparr> =\n  g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n  f\\<lparr>i\\<rparr>\n\ngoal (2 subgoals):\n 1. i \\<in>\\<^sub>\\<circ> J \\<Longrightarrow>\n    ((g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n      f) \\<union>\\<^sub>\\<circ>\n     (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n      f'))\\<lparr>i\\<rparr> =\n    (g \\<union>\\<^sub>\\<circ>\n     g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n     f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr>\n 2. i \\<in>\\<^sub>\\<circ> K \\<Longrightarrow>\n    ((g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n      f) \\<union>\\<^sub>\\<circ>\n     (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n      f'))\\<lparr>i\\<rparr> =\n    (g \\<union>\\<^sub>\\<circ>\n     g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n     f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr>", "have gg'_i: \"(g \\<union>\\<^sub>\\<circ> g')\\<lparr>i\\<rparr> = g\\<lparr>i\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (g \\<union>\\<^sub>\\<circ> g')\\<lparr>i\\<rparr> = g\\<lparr>i\\<rparr>", "by (simp add: iJ assms(1) gD(1,2) g'D(1,2))"], ["proof (state)\nthis:\n  (g \\<union>\\<^sub>\\<circ> g')\\<lparr>i\\<rparr> = g\\<lparr>i\\<rparr>\n\ngoal (2 subgoals):\n 1. i \\<in>\\<^sub>\\<circ> J \\<Longrightarrow>\n    ((g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n      f) \\<union>\\<^sub>\\<circ>\n     (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n      f'))\\<lparr>i\\<rparr> =\n    (g \\<union>\\<^sub>\\<circ>\n     g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n     f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr>\n 2. i \\<in>\\<^sub>\\<circ> K \\<Longrightarrow>\n    ((g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n      f) \\<union>\\<^sub>\\<circ>\n     (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n      f'))\\<lparr>i\\<rparr> =\n    (g \\<union>\\<^sub>\\<circ>\n     g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n     f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr>", "have ff'_i: \"(f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr> = f\\<lparr>i\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr> = f\\<lparr>i\\<rparr>", "by (simp add: iJ assms(1) fD(1,2) f'D(1,2))"], ["proof (state)\nthis:\n  (f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr> = f\\<lparr>i\\<rparr>\n\ngoal (2 subgoals):\n 1. i \\<in>\\<^sub>\\<circ> J \\<Longrightarrow>\n    ((g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n      f) \\<union>\\<^sub>\\<circ>\n     (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n      f'))\\<lparr>i\\<rparr> =\n    (g \\<union>\\<^sub>\\<circ>\n     g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n     f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr>\n 2. i \\<in>\\<^sub>\\<circ> K \\<Longrightarrow>\n    ((g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n      f) \\<union>\\<^sub>\\<circ>\n     (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n      f'))\\<lparr>i\\<rparr> =\n    (g \\<union>\\<^sub>\\<circ>\n     g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n     f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr>", "have [simp]: \n        \"(g \\<union>\\<^sub>\\<circ> g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub> f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr> = g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub> f\\<lparr>i\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (g \\<union>\\<^sub>\\<circ>\n     g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n     f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr> =\n    g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n    f\\<lparr>i\\<rparr>", "by (fold gg'_i ff'_i) \n          (rule smc_prod_Comp_app_component[OF gg' ff' prems])"], ["proof (state)\nthis:\n  (g \\<union>\\<^sub>\\<circ>\n   g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n   f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr> =\n  g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n  f\\<lparr>i\\<rparr>\n\ngoal (2 subgoals):\n 1. i \\<in>\\<^sub>\\<circ> J \\<Longrightarrow>\n    ((g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n      f) \\<union>\\<^sub>\\<circ>\n     (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n      f'))\\<lparr>i\\<rparr> =\n    (g \\<union>\\<^sub>\\<circ>\n     g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n     f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr>\n 2. i \\<in>\\<^sub>\\<circ> K \\<Longrightarrow>\n    ((g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n      f) \\<union>\\<^sub>\\<circ>\n     (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n      f'))\\<lparr>i\\<rparr> =\n    (g \\<union>\\<^sub>\\<circ>\n     g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n     f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n      f) \\<union>\\<^sub>\\<circ>\n     (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n      f'))\\<lparr>i\\<rparr> =\n    (g \\<union>\\<^sub>\\<circ>\n     g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n     f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr>", "by simp"], ["proof (state)\nthis:\n  ((g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n    f) \\<union>\\<^sub>\\<circ>\n   (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n    f'))\\<lparr>i\\<rparr> =\n  (g \\<union>\\<^sub>\\<circ>\n   g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n   f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr>\n\ngoal (1 subgoal):\n 1. i \\<in>\\<^sub>\\<circ> K \\<Longrightarrow>\n    ((g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n      f) \\<union>\\<^sub>\\<circ>\n     (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n      f'))\\<lparr>i\\<rparr> =\n    (g \\<union>\\<^sub>\\<circ>\n     g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n     f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<in>\\<^sub>\\<circ> K \\<Longrightarrow>\n    ((g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n      f) \\<union>\\<^sub>\\<circ>\n     (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n      f'))\\<lparr>i\\<rparr> =\n    (g \\<union>\\<^sub>\\<circ>\n     g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n     f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr>", "case iK"], ["proof (state)\nthis:\n  i \\<in>\\<^sub>\\<circ> K\n\ngoal (1 subgoal):\n 1. i \\<in>\\<^sub>\\<circ> K \\<Longrightarrow>\n    ((g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n      f) \\<union>\\<^sub>\\<circ>\n     (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n      f'))\\<lparr>i\\<rparr> =\n    (g \\<union>\\<^sub>\\<circ>\n     g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n     f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr>", "have [simp]:\n        \"((g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub> f) \\<union>\\<^sub>\\<circ> (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f'))\\<lparr>i\\<rparr> = \n          g'\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub> f'\\<lparr>i\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n      f) \\<union>\\<^sub>\\<circ>\n     (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n      f'))\\<lparr>i\\<rparr> =\n    g'\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n    f'\\<lparr>i\\<rparr>", "proof\n        (\n          fold smc_prod_Comp_app_component[OF assms(5,7) iK], \n          rule vsv_vunion_app_right\n        )"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub> f)\n 2. vsv (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f')\n 3. \\<D>\\<^sub>\\<circ>\n     (g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n      f) \\<inter>\\<^sub>\\<circ>\n    \\<D>\\<^sub>\\<circ>\n     (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f') =\n    []\\<^sub>\\<circ>\n 4. i \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                           (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n                            f')", "from gf"], ["proof (chain)\npicking this:\n  g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n  f : a \\<mapsto>\\<^bsub>smc_prod J \\<AA>\\<^esub> c", "show \"vsv (g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub> f)\""], ["proof (prove)\nusing this:\n  g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n  f : a \\<mapsto>\\<^bsub>smc_prod J \\<AA>\\<^esub> c\n\ngoal (1 subgoal):\n 1. vsv (g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub> f)", "by auto"], ["proof (state)\nthis:\n  vsv (g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub> f)\n\ngoal (3 subgoals):\n 1. vsv (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f')\n 2. \\<D>\\<^sub>\\<circ>\n     (g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n      f) \\<inter>\\<^sub>\\<circ>\n    \\<D>\\<^sub>\\<circ>\n     (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f') =\n    []\\<^sub>\\<circ>\n 3. i \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                           (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n                            f')", "from g'f'"], ["proof (chain)\npicking this:\n  g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n  f' : a' \\<mapsto>\\<^bsub>smc_prod K \\<AA>\\<^esub> c'", "show \"vsv (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f')\""], ["proof (prove)\nusing this:\n  g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n  f' : a' \\<mapsto>\\<^bsub>smc_prod K \\<AA>\\<^esub> c'\n\ngoal (1 subgoal):\n 1. vsv (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f')", "by auto"], ["proof (state)\nthis:\n  vsv (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f')\n\ngoal (2 subgoals):\n 1. \\<D>\\<^sub>\\<circ>\n     (g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n      f) \\<inter>\\<^sub>\\<circ>\n    \\<D>\\<^sub>\\<circ>\n     (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f') =\n    []\\<^sub>\\<circ>\n 2. i \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                           (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n                            f')", "qed \n        (\n          use assms(4-7) in \n            \\<open>simp_all add: iK smc_prod_Comp_app_vdomain assms(1)\\<close>\n        )"], ["proof (state)\nthis:\n  ((g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n    f) \\<union>\\<^sub>\\<circ>\n   (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n    f'))\\<lparr>i\\<rparr> =\n  g'\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n  f'\\<lparr>i\\<rparr>\n\ngoal (1 subgoal):\n 1. i \\<in>\\<^sub>\\<circ> K \\<Longrightarrow>\n    ((g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n      f) \\<union>\\<^sub>\\<circ>\n     (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n      f'))\\<lparr>i\\<rparr> =\n    (g \\<union>\\<^sub>\\<circ>\n     g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n     f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr>", "have gg'_i: \"(g \\<union>\\<^sub>\\<circ> g')\\<lparr>i\\<rparr> = g'\\<lparr>i\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (g \\<union>\\<^sub>\\<circ> g')\\<lparr>i\\<rparr> = g'\\<lparr>i\\<rparr>", "by (simp add: iK assms(1) gD(1,2) g'D(1,2))"], ["proof (state)\nthis:\n  (g \\<union>\\<^sub>\\<circ> g')\\<lparr>i\\<rparr> = g'\\<lparr>i\\<rparr>\n\ngoal (1 subgoal):\n 1. i \\<in>\\<^sub>\\<circ> K \\<Longrightarrow>\n    ((g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n      f) \\<union>\\<^sub>\\<circ>\n     (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n      f'))\\<lparr>i\\<rparr> =\n    (g \\<union>\\<^sub>\\<circ>\n     g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n     f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr>", "have ff'_i: \"(f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr> = f'\\<lparr>i\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr> = f'\\<lparr>i\\<rparr>", "by (simp add: iK assms(1) fD(1,2) f'D(1,2))"], ["proof (state)\nthis:\n  (f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr> = f'\\<lparr>i\\<rparr>\n\ngoal (1 subgoal):\n 1. i \\<in>\\<^sub>\\<circ> K \\<Longrightarrow>\n    ((g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n      f) \\<union>\\<^sub>\\<circ>\n     (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n      f'))\\<lparr>i\\<rparr> =\n    (g \\<union>\\<^sub>\\<circ>\n     g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n     f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr>", "have [simp]:\n        \"(g \\<union>\\<^sub>\\<circ> g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub> f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr> = g'\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub> f'\\<lparr>i\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (g \\<union>\\<^sub>\\<circ>\n     g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n     f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr> =\n    g'\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n    f'\\<lparr>i\\<rparr>", "by (fold gg'_i ff'_i)\n          (rule smc_prod_Comp_app_component[OF gg' ff' prems])"], ["proof (state)\nthis:\n  (g \\<union>\\<^sub>\\<circ>\n   g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n   f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr> =\n  g'\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n  f'\\<lparr>i\\<rparr>\n\ngoal (1 subgoal):\n 1. i \\<in>\\<^sub>\\<circ> K \\<Longrightarrow>\n    ((g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n      f) \\<union>\\<^sub>\\<circ>\n     (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n      f'))\\<lparr>i\\<rparr> =\n    (g \\<union>\\<^sub>\\<circ>\n     g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n     f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n      f) \\<union>\\<^sub>\\<circ>\n     (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n      f'))\\<lparr>i\\<rparr> =\n    (g \\<union>\\<^sub>\\<circ>\n     g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n     f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr>", "by simp"], ["proof (state)\nthis:\n  ((g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n    f) \\<union>\\<^sub>\\<circ>\n   (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n    f'))\\<lparr>i\\<rparr> =\n  (g \\<union>\\<^sub>\\<circ>\n   g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n   f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ((g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n    f) \\<union>\\<^sub>\\<circ>\n   (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub>\n    f'))\\<lparr>i\\<rparr> =\n  (g \\<union>\\<^sub>\\<circ>\n   g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n   f \\<union>\\<^sub>\\<circ> f')\\<lparr>i\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (g \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub>\n   f) \\<union>\\<^sub>\\<circ>\n  (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod K \\<AA>\\<^esub> f') =\n  g \\<union>\\<^sub>\\<circ>\n  g' \\<circ>\\<^sub>A\\<^bsub>smc_prod (J \\<union>\\<^sub>\\<circ> K) \\<AA>\\<^esub>\n  f \\<union>\\<^sub>\\<circ> f'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in psemicategory) psmc_smc_prod_vdiff_vunion_Comp:\n  assumes \"J \\<subseteq>\\<^sub>\\<circ> I\"   \n    and \"g : b \\<mapsto>\\<^bsub>(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Cj\\<in>\\<^sub>\\<circ>I -\\<^sub>\\<circ> J. \\<AA> j)\\<^esub> c\"\n    and \"g' : b' \\<mapsto>\\<^bsub>(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ck\\<in>\\<^sub>\\<circ>J. \\<AA> k)\\<^esub> c'\"\n    and \"f : a \\<mapsto>\\<^bsub>(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Cj\\<in>\\<^sub>\\<circ>I -\\<^sub>\\<circ> J. \\<AA> j)\\<^esub> b\"\n    and \"f' : a' \\<mapsto>\\<^bsub>(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ck\\<in>\\<^sub>\\<circ>J. \\<AA> k)\\<^esub> b'\"\n  shows \"(g \\<circ>\\<^sub>A\\<^bsub>(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Cj\\<in>\\<^sub>\\<circ>I -\\<^sub>\\<circ> J. \\<AA> j)\\<^esub> f) \\<union>\\<^sub>\\<circ> (g' \\<circ>\\<^sub>A\\<^bsub>(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Cj\\<in>\\<^sub>\\<circ>J. \\<AA> j)\\<^esub> f') = \n    g \\<union>\\<^sub>\\<circ> g' \\<circ>\\<^sub>A\\<^bsub>(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Cj\\<in>\\<^sub>\\<circ>I. \\<AA> j)\\<^esub> f \\<union>\\<^sub>\\<circ> f'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (g \\<circ>\\<^sub>A\\<^bsub>smc_prod (I -\\<^sub>\\<circ> J) \\<AA>\\<^esub>\n     f) \\<union>\\<^sub>\\<circ>\n    (g' \\<circ>\\<^sub>A\\<^bsub>smc_prod J \\<AA>\\<^esub> f') =\n    g \\<union>\\<^sub>\\<circ>\n    g' \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n    f \\<union>\\<^sub>\\<circ> f'", "by \n    (\n      vdiff_of_vunion' \n        rule: psmc_smc_prod_vunion_Comp assms: assms(2-5) subset: assms(1)\n    )"], ["", "subsection\\<open>Projection\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "text\\<open>See Chapter II-3 in \\cite{mac_lane_categories_2010}.\\<close>"], ["", "definition smcf_proj :: \"V \\<Rightarrow> (V \\<Rightarrow> V) \\<Rightarrow> V \\<Rightarrow> V\" (\\<open>\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C\\<close>)\n  where \"\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i =\n    [\n      (\\<lambda>a\\<in>\\<^sub>\\<circ>(\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<lparr>Obj\\<rparr>). a\\<lparr>i\\<rparr>),\n      (\\<lambda>f\\<in>\\<^sub>\\<circ>(\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<lparr>Arr\\<rparr>). f\\<lparr>i\\<rparr>),\n      (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i),\n      \\<AA> i\n    ]\\<^sub>\\<circ>\""], ["", "text\\<open>Components.\\<close>"], ["", "lemma smcf_proj_components:\n  shows \"(\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i)\\<lparr>ObjMap\\<rparr> = (\\<lambda>a\\<in>\\<^sub>\\<circ>(\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<lparr>Obj\\<rparr>). a\\<lparr>i\\<rparr>)\"\n    and \"(\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i)\\<lparr>ArrMap\\<rparr> = (\\<lambda>f\\<in>\\<^sub>\\<circ>(\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<lparr>Arr\\<rparr>). f\\<lparr>i\\<rparr>)\"\n    and \"(\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i)\\<lparr>HomDom\\<rparr> = (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\"\n    and \"(\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i)\\<lparr>HomCod\\<rparr> = \\<AA> i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i\\<lparr>ObjMap\\<rparr> =\n     (\\<lambda>a\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n\\<AA> i\\<lparr>Obj\\<rparr>.\n         a\\<lparr>i\\<rparr>) &&&\n     \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i\\<lparr>ArrMap\\<rparr> =\n     (\\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n\\<AA> i\\<lparr>Arr\\<rparr>.\n         f\\<lparr>i\\<rparr>)) &&&\n    \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i\\<lparr>HomDom\\<rparr> =\n    smc_prod I \\<AA> &&&\n    \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i\\<lparr>HomCod\\<rparr> = \\<AA> i", "unfolding smcf_proj_def dghm_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([\\<lambda>a\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n\\<AA> i\\<lparr>Obj\\<rparr>.\n         a\\<lparr>i\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n\\<AA> i\\<lparr>Arr\\<rparr>.\n         f\\<lparr>i\\<rparr>,\n      smc_prod I \\<AA>,\n      \\<AA> i]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n     (\\<lambda>a\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n\\<AA> i\\<lparr>Obj\\<rparr>.\n         a\\<lparr>i\\<rparr>) &&&\n     [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n\\<AA> i\\<lparr>Obj\\<rparr>.\n         a\\<lparr>i\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n\\<AA> i\\<lparr>Arr\\<rparr>.\n         f\\<lparr>i\\<rparr>,\n      smc_prod I \\<AA>,\n      \\<AA> i]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> =\n     (\\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n\\<AA> i\\<lparr>Arr\\<rparr>.\n         f\\<lparr>i\\<rparr>)) &&&\n    [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                     \\<AA> i\\<lparr>Obj\\<rparr>.\n        a\\<lparr>i\\<rparr>,\n     \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                     \\<AA> i\\<lparr>Arr\\<rparr>.\n        f\\<lparr>i\\<rparr>,\n     smc_prod I \\<AA>,\n     \\<AA> i]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr> =\n    smc_prod I \\<AA> &&&\n    [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                     \\<AA> i\\<lparr>Obj\\<rparr>.\n        a\\<lparr>i\\<rparr>,\n     \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                     \\<AA> i\\<lparr>Arr\\<rparr>.\n        f\\<lparr>i\\<rparr>,\n     smc_prod I \\<AA>,\n     \\<AA> i]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr> =\n    \\<AA> i", "by (simp_all add: nat_omega_simps)"], ["", "text\\<open>Slicing\\<close>"], ["", "lemma smcf_dghm_smcf_proj[slicing_commute]: \n  \"\\<pi>\\<^sub>D\\<^sub>G I (\\<lambda>i. smc_dg (\\<AA> i)) i = smcf_dghm (\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>D\\<^sub>G I (\\<lambda>i. smc_dg (\\<AA> i)) i =\n    smcf_dghm (\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i)", "unfolding \n    smc_dg_def \n    smcf_dghm_def \n    smcf_proj_def \n    dghm_proj_def \n    smc_prod_def \n    dg_prod_def\n    dg_field_simps \n    dghm_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. [\\<lambda>a\\<in>\\<^sub>\\<circ>[\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n[\\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n \\<AA> i\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n \\<AA>\n  i\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n                                   \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n[\\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n \\<AA> i\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n \\<AA>\n  i\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n                                   \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                             [\\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n                              \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n                              \\<AA> i\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n                              \\<AA>\n                               i\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n\\<lambda>i\\<in>\\<^sub>\\<circ>I.\n   [\\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n    \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n    \\<AA> i\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n    \\<AA>\n     i\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n                                   \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                             [\\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n                              \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n                              \\<AA> i\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n                              \\<AA>\n                               i\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n\\<lambda>i\\<in>\\<^sub>\\<circ>I.\n   [\\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n    \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n    \\<AA> i\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n    \\<AA>\n     i\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>.\n        a\\<lparr>i\\<rparr>,\n     \\<lambda>f\\<in>\\<^sub>\\<circ>[\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n[\\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n \\<AA> i\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n \\<AA>\n  i\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n                                   \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n[\\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n \\<AA> i\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n \\<AA>\n  i\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n                                   \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                             [\\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n                              \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n                              \\<AA> i\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n                              \\<AA>\n                               i\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n\\<lambda>i\\<in>\\<^sub>\\<circ>I.\n   [\\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n    \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n    \\<AA> i\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n    \\<AA>\n     i\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n                                   \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                             [\\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n                              \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n                              \\<AA> i\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n                              \\<AA>\n                               i\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n\\<lambda>i\\<in>\\<^sub>\\<circ>I.\n   [\\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n    \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n    \\<AA> i\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n    \\<AA>\n     i\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n        f\\<lparr>i\\<rparr>,\n     [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n         [\\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n          \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n          \\<AA> i\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n          \\<AA>\n           i\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n         [\\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n          \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n          \\<AA> i\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n          \\<AA>\n           i\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n[\\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n \\<AA> i\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n \\<AA>\n  i\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            [\\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n             \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n             \\<AA> i\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n             \\<AA>\n              i\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n[\\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n \\<AA> i\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n \\<AA>\n  i\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            [\\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n             \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n             \\<AA> i\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n             \\<AA>\n              i\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>]\\<^sub>\\<circ>,\n     [\\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<AA> i\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      \\<AA> i\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>]\\<^sub>\\<circ> =\n    [[\\<lambda>a\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n\\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>.\n         a\\<lparr>i\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n\\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n         f\\<lparr>i\\<rparr>,\n      [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n          \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n       \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n          \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n       \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n          \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n             \\<AA>\n              i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n       \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n          \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n             \\<AA>\n              i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n       \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs\n[\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n    \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n    \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                 \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n    \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n       \\<AA>\n        i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                 \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n    \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n       \\<AA>\n        i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>]\\<^sub>\\<circ>.\n          \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n             \\<AA>\n              i\\<lparr>4\\<^sub>\\<nat>\\<rparr> \\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr>,\n                gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>\\<rparr>\\<^sub>\\<bullet>]\\<^sub>\\<circ>,\n      \\<AA> i]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n\\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>.\n         a\\<lparr>i\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n\\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n         f\\<lparr>i\\<rparr>,\n      [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n          \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n       \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n          \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n       \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n          \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n             \\<AA>\n              i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n       \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n          \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n             \\<AA>\n              i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n       \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs\n[\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n    \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n    \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                 \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n    \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n       \\<AA>\n        i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                 \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n    \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n       \\<AA>\n        i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>]\\<^sub>\\<circ>.\n          \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n             \\<AA>\n              i\\<lparr>4\\<^sub>\\<nat>\\<rparr> \\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr>,\n                gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>\\<rparr>\\<^sub>\\<bullet>]\\<^sub>\\<circ>,\n      \\<AA> i]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     [[\\<lambda>a\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>.\n          a\\<lparr>i\\<rparr>,\n       \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n          f\\<lparr>i\\<rparr>,\n       [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n        \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n        \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs\n [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n     \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n  \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n     \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n  \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n     \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        \\<AA>\n         i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n  \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n     \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        \\<AA>\n         i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>]\\<^sub>\\<circ>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>4\\<^sub>\\<nat>\\<rparr> \\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr>,\n                 gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>\\<rparr>\\<^sub>\\<bullet>]\\<^sub>\\<circ>,\n       \\<AA>\n        i]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>.\n          a\\<lparr>i\\<rparr>,\n       \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n          f\\<lparr>i\\<rparr>,\n       [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n        \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n        \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs\n [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n     \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n  \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n     \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n  \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n     \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        \\<AA>\n         i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n  \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n     \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        \\<AA>\n         i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>]\\<^sub>\\<circ>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>4\\<^sub>\\<nat>\\<rparr> \\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr>,\n                 gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>\\<rparr>\\<^sub>\\<bullet>]\\<^sub>\\<circ>,\n       \\<AA>\n        i]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>.\n          a\\<lparr>i\\<rparr>,\n       \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n          f\\<lparr>i\\<rparr>,\n       [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n        \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n        \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs\n [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n     \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n  \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n     \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n  \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n     \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        \\<AA>\n         i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n  \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n     \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        \\<AA>\n         i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>]\\<^sub>\\<circ>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>4\\<^sub>\\<nat>\\<rparr> \\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr>,\n                 gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>\\<rparr>\\<^sub>\\<bullet>]\\<^sub>\\<circ>,\n       \\<AA>\n        i]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>.\n          a\\<lparr>i\\<rparr>,\n       \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n          f\\<lparr>i\\<rparr>,\n       [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n        \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n        \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs\n [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n     \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n  \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n     \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n  \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n     \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        \\<AA>\n         i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n  \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n     \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        \\<AA>\n         i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>]\\<^sub>\\<circ>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>4\\<^sub>\\<nat>\\<rparr> \\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr>,\n                 gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>\\<rparr>\\<^sub>\\<bullet>]\\<^sub>\\<circ>,\n       \\<AA>\n        i]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>,\n     [[\\<lambda>a\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>.\n          a\\<lparr>i\\<rparr>,\n       \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n          f\\<lparr>i\\<rparr>,\n       [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n        \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n        \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs\n [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n     \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n  \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n     \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n  \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n     \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        \\<AA>\n         i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n  \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n     \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        \\<AA>\n         i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>]\\<^sub>\\<circ>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>4\\<^sub>\\<nat>\\<rparr> \\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr>,\n                 gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>\\<rparr>\\<^sub>\\<bullet>]\\<^sub>\\<circ>,\n       \\<AA>\n        i]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>.\n          a\\<lparr>i\\<rparr>,\n       \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n          f\\<lparr>i\\<rparr>,\n       [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n        \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n        \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs\n [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n     \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n  \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n     \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n  \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n     \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        \\<AA>\n         i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n  \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n     \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        \\<AA>\n         i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>]\\<^sub>\\<circ>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>4\\<^sub>\\<nat>\\<rparr> \\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr>,\n                 gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>\\<rparr>\\<^sub>\\<bullet>]\\<^sub>\\<circ>,\n       \\<AA>\n        i]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>.\n          a\\<lparr>i\\<rparr>,\n       \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n          f\\<lparr>i\\<rparr>,\n       [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n        \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n        \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs\n [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n     \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n  \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n     \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n  \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n     \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        \\<AA>\n         i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n  \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n     \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        \\<AA>\n         i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>]\\<^sub>\\<circ>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>4\\<^sub>\\<nat>\\<rparr> \\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr>,\n                 gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>\\<rparr>\\<^sub>\\<bullet>]\\<^sub>\\<circ>,\n       \\<AA>\n        i]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>.\n          a\\<lparr>i\\<rparr>,\n       \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n          f\\<lparr>i\\<rparr>,\n       [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n        \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n        \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs\n [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n     \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n  \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n     \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n  \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n     \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        \\<AA>\n         i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n  \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n     \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        \\<AA>\n         i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>]\\<^sub>\\<circ>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>4\\<^sub>\\<nat>\\<rparr> \\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr>,\n                 gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>\\<rparr>\\<^sub>\\<bullet>]\\<^sub>\\<circ>,\n       \\<AA>\n        i]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>]\\<^sub>\\<circ>", "by (simp add: nat_omega_simps)"], ["", "context psemicategory\nbegin"], ["", "interpretation pdg: pdigraph \\<alpha> I \\<open>\\<lambda>i. smc_dg (\\<AA> i)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. pdigraph \\<alpha> I (\\<lambda>i. smc_dg (\\<AA> i))", "by (rule psmc_pdigraph)"], ["", "lemmas_with [unfolded slicing_simps slicing_commute]: \n  smcf_proj_is_dghm = pdg.pdg_dghm_proj_is_dghm"], ["", "end"], ["", "subsubsection\\<open>Projection semifunctor is a semifunctor\\<close>"], ["", "lemma (in psemicategory) psmc_smcf_proj_is_semifunctor: \n  assumes \"i \\<in>\\<^sub>\\<circ> I\"\n  shows \"\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i : (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i) \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA> i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i :\n    smc_prod I\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n   i", "proof(intro is_semifunctorI)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i)\n 3. semicategory \\<alpha> (smc_prod I \\<AA>)\n 4. semicategory \\<alpha> (\\<AA> i)\n 5. vcard (\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i) = 4\\<^sub>\\<nat>\n 6. smcf_dghm (\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i) :\n    smc_dg\n     (smc_prod I\n       \\<AA>) \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                    (\\<AA> i)\n 7. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i\\<lparr>HomDom\\<rparr> =\n    smc_prod I \\<AA>\n 8. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i\\<lparr>HomCod\\<rparr> = \\<AA> i\n 9. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n                          i\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                   f\\<rparr> =\n                         \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n                          i\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n                         \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n                          i\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "show \"vfsequence (\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i)", "unfolding smcf_proj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence\n     [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n\\<AA> i\\<lparr>Obj\\<rparr>.\n         a\\<lparr>i\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n\\<AA> i\\<lparr>Arr\\<rparr>.\n         f\\<lparr>i\\<rparr>,\n      smc_prod I \\<AA>, \\<AA> i]\\<^sub>\\<circ>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  vfsequence (\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i)\n\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> (smc_prod I \\<AA>)\n 3. semicategory \\<alpha> (\\<AA> i)\n 4. vcard (\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i) = 4\\<^sub>\\<nat>\n 5. smcf_dghm (\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i) :\n    smc_dg\n     (smc_prod I\n       \\<AA>) \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                    (\\<AA> i)\n 6. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i\\<lparr>HomDom\\<rparr> =\n    smc_prod I \\<AA>\n 7. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i\\<lparr>HomCod\\<rparr> = \\<AA> i\n 8. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n                          i\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                   f\\<rparr> =\n                         \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n                          i\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n                         \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n                          i\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "show \"vcard (\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i) = 4\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i) = 4\\<^sub>\\<nat>", "unfolding smcf_proj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard\n     [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n\\<AA> i\\<lparr>Obj\\<rparr>.\n         a\\<lparr>i\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n\\<AA> i\\<lparr>Arr\\<rparr>.\n         f\\<lparr>i\\<rparr>,\n      smc_prod I \\<AA>, \\<AA> i]\\<^sub>\\<circ> =\n    4\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  vcard (\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i) = 4\\<^sub>\\<nat>\n\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> (smc_prod I \\<AA>)\n 3. semicategory \\<alpha> (\\<AA> i)\n 4. smcf_dghm (\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i) :\n    smc_dg\n     (smc_prod I\n       \\<AA>) \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                    (\\<AA> i)\n 5. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i\\<lparr>HomDom\\<rparr> =\n    smc_prod I \\<AA>\n 6. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i\\<lparr>HomCod\\<rparr> = \\<AA> i\n 7. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n                          i\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                   f\\<rparr> =\n                         \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n                          i\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n                         \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n                          i\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "interpret \\<AA>: semicategory \\<alpha> \\<open>smc_prod I \\<AA>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (smc_prod I \\<AA>)", "by (rule psmc_semicategory_smc_prod)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> (smc_prod I \\<AA>)\n 3. semicategory \\<alpha> (\\<AA> i)\n 4. smcf_dghm (\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i) :\n    smc_dg\n     (smc_prod I\n       \\<AA>) \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                    (\\<AA> i)\n 5. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i\\<lparr>HomDom\\<rparr> =\n    smc_prod I \\<AA>\n 6. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i\\<lparr>HomCod\\<rparr> = \\<AA> i\n 7. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n                          i\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                   f\\<rparr> =\n                         \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n                          i\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n                         \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n                          i\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "interpret \\<AA>i: semicategory \\<alpha> \\<open>\\<AA> i\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (\\<AA> i)", "using assms"], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (\\<AA> i)", "by (simp add: smc_prod_cs_intros)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> (smc_prod I \\<AA>)\n 3. semicategory \\<alpha> (\\<AA> i)\n 4. smcf_dghm (\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i) :\n    smc_dg\n     (smc_prod I\n       \\<AA>) \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                    (\\<AA> i)\n 5. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i\\<lparr>HomDom\\<rparr> =\n    smc_prod I \\<AA>\n 6. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i\\<lparr>HomCod\\<rparr> = \\<AA> i\n 7. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n                          i\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                   f\\<rparr> =\n                         \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n                          i\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n                         \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n                          i\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "show \"\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f\\<rparr> =\n    \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub> \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\"\n    if \"g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c\" and \"f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b\" for g b c f a"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n     i\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                                    f\\<rparr> =\n    \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n     i\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n    \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n     i\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n     i\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                                    f\\<rparr> =\n    \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n     i\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n    \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n     i\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "from that"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b", "have \"g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n    f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c", "by (auto simp: smc_cs_intros)"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n  f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n     i\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                                    f\\<rparr> =\n    \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n     i\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n    \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n     i\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "then"], ["proof (chain)\npicking this:\n  g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n  f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c", "have \"g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<lparr>Arr\\<rparr>)\""], ["proof (prove)\nusing this:\n  g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n  f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f\n    \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                            \\<AA> i\\<lparr>Arr\\<rparr>)", "unfolding smc_prod_components[symmetric]"], ["proof (prove)\nusing this:\n  g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n  f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f\n    \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Arr\\<rparr>", "by auto"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f\n  \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                          \\<AA> i\\<lparr>Arr\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n     i\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                                    f\\<rparr> =\n    \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n     i\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n    \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n     i\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "then"], ["proof (chain)\npicking this:\n  g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f\n  \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                          \\<AA> i\\<lparr>Arr\\<rparr>)", "have \\<pi>_gf: \"\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f\\<rparr> = g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub> f\\<lparr>i\\<rparr>\""], ["proof (prove)\nusing this:\n  g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f\n  \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                          \\<AA> i\\<lparr>Arr\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n     i\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                                    f\\<rparr> =\n    g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n    f\\<lparr>i\\<rparr>", "unfolding smcf_proj_components"], ["proof (prove)\nusing this:\n  g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> f\n  \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                          \\<AA> i\\<lparr>Arr\\<rparr>)\n\ngoal (1 subgoal):\n 1. (\\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                     \\<AA> i\\<lparr>Arr\\<rparr>.\n        f\\<lparr>i\\<rparr>)\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                                   f\\<rparr> =\n    g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n    f\\<lparr>i\\<rparr>", "by (simp add: smc_prod_Comp_app_component[OF that assms])"], ["proof (state)\nthis:\n  \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n   i\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                                  f\\<rparr> =\n  g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n  f\\<lparr>i\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n     i\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                                    f\\<rparr> =\n    \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n     i\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n    \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n     i\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "from that(1)"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c", "have g: \"g \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<lparr>Arr\\<rparr>)\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c\n\ngoal (1 subgoal):\n 1. g \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                              \\<AA> i\\<lparr>Arr\\<rparr>)", "unfolding smc_prod_components[symmetric]"], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> c\n\ngoal (1 subgoal):\n 1. g \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Arr\\<rparr>", "by auto"], ["proof (state)\nthis:\n  g \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                            \\<AA> i\\<lparr>Arr\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n     i\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                                    f\\<rparr> =\n    \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n     i\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n    \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n     i\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "from that(2)"], ["proof (chain)\npicking this:\n  f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b", "have f: \"f \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<lparr>Arr\\<rparr>)\""], ["proof (prove)\nusing this:\n  f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b\n\ngoal (1 subgoal):\n 1. f \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                              \\<AA> i\\<lparr>Arr\\<rparr>)", "unfolding smc_prod_components[symmetric]"], ["proof (prove)\nusing this:\n  f : a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> b\n\ngoal (1 subgoal):\n 1. f \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Arr\\<rparr>", "by auto"], ["proof (state)\nthis:\n  f \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                            \\<AA> i\\<lparr>Arr\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n     i\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                                    f\\<rparr> =\n    \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n     i\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n    \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n     i\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "from g f"], ["proof (chain)\npicking this:\n  g \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                            \\<AA> i\\<lparr>Arr\\<rparr>)\n  f \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                            \\<AA> i\\<lparr>Arr\\<rparr>)", "have \\<pi>g_\\<pi>f: \n      \"\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub> \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub> f\\<lparr>i\\<rparr>\""], ["proof (prove)\nusing this:\n  g \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                            \\<AA> i\\<lparr>Arr\\<rparr>)\n  f \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                            \\<AA> i\\<lparr>Arr\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n     i\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n    \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n     i\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n    f\\<lparr>i\\<rparr>", "unfolding smcf_proj_components"], ["proof (prove)\nusing this:\n  g \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                            \\<AA> i\\<lparr>Arr\\<rparr>)\n  f \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                            \\<AA> i\\<lparr>Arr\\<rparr>)\n\ngoal (1 subgoal):\n 1. (\\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                     \\<AA> i\\<lparr>Arr\\<rparr>.\n        f\\<lparr>i\\<rparr>)\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n    (\\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                     \\<AA> i\\<lparr>Arr\\<rparr>.\n        f\\<lparr>i\\<rparr>)\\<lparr>f\\<rparr> =\n    g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n    f\\<lparr>i\\<rparr>", "by simp"], ["proof (state)\nthis:\n  \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n   i\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n  \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n   i\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n  g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n  f\\<lparr>i\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n     i\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                                    f\\<rparr> =\n    \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n     i\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n    \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n     i\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "from \\<pi>_gf \\<pi>g_\\<pi>f"], ["proof (chain)\npicking this:\n  \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n   i\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                                  f\\<rparr> =\n  g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n  f\\<lparr>i\\<rparr>\n  \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n   i\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n  \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n   i\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n  g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n  f\\<lparr>i\\<rparr>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n   i\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                                  f\\<rparr> =\n  g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n  f\\<lparr>i\\<rparr>\n  \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n   i\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n  \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n   i\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n  g\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n  f\\<lparr>i\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n     i\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                                    f\\<rparr> =\n    \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n     i\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n    \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n     i\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "by simp"], ["proof (state)\nthis:\n  \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n   i\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                                  f\\<rparr> =\n  \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n   i\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n  \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n   i\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?g : ?b \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> ?c;\n   ?f : ?a \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> ?b\\<rbrakk>\n  \\<Longrightarrow> \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n                     i\\<lparr>ArrMap\\<rparr>\\<lparr>?g \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n              ?f\\<rparr> =\n                    \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n                     i\\<lparr>ArrMap\\<rparr>\\<lparr>?g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n                    \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n                     i\\<lparr>ArrMap\\<rparr>\\<lparr>?f\\<rparr>\n\ngoal (6 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> (smc_prod I \\<AA>)\n 3. semicategory \\<alpha> (\\<AA> i)\n 4. smcf_dghm (\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i) :\n    smc_dg\n     (smc_prod I\n       \\<AA>) \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                    (\\<AA> i)\n 5. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i\\<lparr>HomDom\\<rparr> =\n    smc_prod I \\<AA>\n 6. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i\\<lparr>HomCod\\<rparr> = \\<AA> i", "qed \n  (\n    auto simp:\n      smc_prod_cs_intros\n      assms\n      smcf_proj_components\n      psmc_semicategory_smc_prod \n      smcf_proj_is_dghm\n  )"], ["", "lemma (in psemicategory) psmc_smcf_proj_is_semifunctor':\n  assumes \"i \\<in>\\<^sub>\\<circ> I\" and \"\\<CC> = (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\" and \"\\<DD> = \\<AA> i\"\n  shows \"\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>", "using assms(1)"], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>", "unfolding assms(2,3)"], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i :\n    smc_prod I\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n   i", "by (rule psmc_smcf_proj_is_semifunctor)"], ["", "lemmas [smc_cs_intros] = psemicategory.psmc_smcf_proj_is_semifunctor'"], ["", "subsection\\<open>Semicategory product universal property semifunctor\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "text\\<open>\nThe following semifunctor is used in the \nproof of the universal property of the product semicategory \nlater in this work.\n\\<close>"], ["", "definition smcf_up :: \"V \\<Rightarrow> (V \\<Rightarrow> V) \\<Rightarrow> V \\<Rightarrow> (V \\<Rightarrow> V) \\<Rightarrow> V\"\n  where \"smcf_up I \\<AA> \\<CC> \\<phi> =\n    [\n      (\\<lambda>a\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Obj\\<rparr>. (\\<lambda>i\\<in>\\<^sub>\\<circ>I. \\<phi> i\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>)),\n      (\\<lambda>f\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Arr\\<rparr>. (\\<lambda>i\\<in>\\<^sub>\\<circ>I. \\<phi> i\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>)),\n      \\<CC>,\n      (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\n    ]\\<^sub>\\<circ>\""], ["", "text\\<open>Components.\\<close>"], ["", "lemma smcf_up_components: \n  shows \"smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>ObjMap\\<rparr> = (\\<lambda>a\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Obj\\<rparr>. (\\<lambda>i\\<in>\\<^sub>\\<circ>I. \\<phi> i\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>))\"\n    and \"smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>ArrMap\\<rparr> = (\\<lambda>f\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Arr\\<rparr>. (\\<lambda>i\\<in>\\<^sub>\\<circ>I. \\<phi> i\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>))\"\n    and \"smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>HomDom\\<rparr> = \\<CC>\"\n    and \"smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>HomCod\\<rparr> = (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>ObjMap\\<rparr> =\n     (\\<lambda>a\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Obj\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<phi> i\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>) &&&\n     smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>ArrMap\\<rparr> =\n     (\\<lambda>f\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Arr\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<phi> i\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>)) &&&\n    smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>HomDom\\<rparr> = \\<CC> &&&\n    smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>HomCod\\<rparr> = smc_prod I \\<AA>", "unfolding smcf_up_def dghm_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([\\<lambda>a\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Obj\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<phi> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>a\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Arr\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<phi> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<rparr>,\n      \\<CC>,\n      smc_prod I \\<AA>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n     (\\<lambda>a\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Obj\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<phi> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>a\\<rparr>) &&&\n     [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Obj\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<phi> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>a\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Arr\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<phi> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<rparr>,\n      \\<CC>, smc_prod I \\<AA>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> =\n     (\\<lambda>f\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Arr\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<phi> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<rparr>)) &&&\n    [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Obj\\<rparr>.\n        \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n           \\<phi> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>a\\<rparr>,\n     \\<lambda>f\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Arr\\<rparr>.\n        \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n           \\<phi> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<rparr>,\n     \\<CC>, smc_prod I \\<AA>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr> =\n    \\<CC> &&&\n    [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Obj\\<rparr>.\n        \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n           \\<phi> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>a\\<rparr>,\n     \\<lambda>f\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Arr\\<rparr>.\n        \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n           \\<phi> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<rparr>,\n     \\<CC>, smc_prod I \\<AA>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr> =\n    smc_prod I \\<AA>", "by (simp_all add: nat_omega_simps)"], ["", "text\\<open>Slicing.\\<close>"], ["", "lemma smcf_dghm_smcf_up[slicing_commute]: \n  \"dghm_up I (\\<lambda>i. smc_dg (\\<AA> i)) (smc_dg \\<CC>) (\\<lambda>i. smcf_dghm (\\<phi> i)) = \n    smcf_dghm (smcf_up I \\<AA> \\<CC> \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_up I (\\<lambda>i. smc_dg (\\<AA> i)) (smc_dg \\<CC>)\n     (\\<lambda>i. smcf_dghm (\\<phi> i)) =\n    smcf_dghm (smcf_up I \\<AA> \\<CC> \\<phi>)", "unfolding \n    smc_dg_def \n    smcf_dghm_def \n    smcf_up_def \n    dghm_up_def \n    smc_prod_def \n    dg_prod_def\n    dg_field_simps \n    dghm_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. [\\<lambda>a\\<in>\\<^sub>\\<circ>[\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n                                   \\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n                                   \\<CC>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n                                   \\<CC>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>.\n        \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n           [\\<phi> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n            \\<phi> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n            [\\<phi>\n              i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n             \\<phi>\n              i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n             \\<phi>\n              i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n             \\<phi>\n              i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>,\n            [\\<phi>\n              i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n             \\<phi>\n              i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n             \\<phi>\n              i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n             \\<phi>\n              i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>a\\<rparr>,\n     \\<lambda>f\\<in>\\<^sub>\\<circ>[\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n                                   \\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n                                   \\<CC>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n                                   \\<CC>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n        \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n           [\\<phi> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n            \\<phi> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n            [\\<phi>\n              i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n             \\<phi>\n              i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n             \\<phi>\n              i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n             \\<phi>\n              i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>,\n            [\\<phi>\n              i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n             \\<phi>\n              i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n             \\<phi>\n              i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n             \\<phi>\n              i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<rparr>,\n     [\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>,\n     [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n         [\\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n          \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n          \\<AA> i\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n          \\<AA>\n           i\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n         [\\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n          \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n          \\<AA> i\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n          \\<AA>\n           i\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n[\\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n \\<AA> i\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n \\<AA>\n  i\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            [\\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n             \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n             \\<AA> i\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n             \\<AA>\n              i\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n[\\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n \\<AA> i\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n \\<AA>\n  i\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            [\\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n             \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n             \\<AA> i\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n             \\<AA>\n              i\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>]\\<^sub>\\<circ>]\\<^sub>\\<circ> =\n    [[\\<lambda>a\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<phi> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>a\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<phi> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<rparr>,\n      \\<CC>,\n      [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n          \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n       \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n          \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n       \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n          \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n             \\<AA>\n              i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n       \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n          \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n             \\<AA>\n              i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n       \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs\n[\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n    \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n    \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                 \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n    \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n       \\<AA>\n        i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                 \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n    \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n       \\<AA>\n        i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>]\\<^sub>\\<circ>.\n          \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n             \\<AA>\n              i\\<lparr>4\\<^sub>\\<nat>\\<rparr> \\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr>,\n                gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>\\<rparr>\\<^sub>\\<bullet>]\\<^sub>\\<circ>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<phi> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>a\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<phi> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<rparr>,\n      \\<CC>,\n      [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n          \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n       \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n          \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n       \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n          \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n             \\<AA>\n              i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n       \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n          \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n             \\<AA>\n              i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n       \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs\n[\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n    \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n    \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                 \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n    \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n       \\<AA>\n        i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                 \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n    \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n       \\<AA>\n        i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>]\\<^sub>\\<circ>.\n          \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n             \\<AA>\n              i\\<lparr>4\\<^sub>\\<nat>\\<rparr> \\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr>,\n                gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>\\<rparr>\\<^sub>\\<bullet>]\\<^sub>\\<circ>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     [[\\<lambda>a\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>.\n          \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n             \\<phi> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>a\\<rparr>,\n       \\<lambda>f\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n          \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n             \\<phi> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<rparr>,\n       \\<CC>,\n       [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n        \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n        \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs\n [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n     \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n  \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n     \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n  \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n     \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        \\<AA>\n         i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n  \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n     \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        \\<AA>\n         i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>]\\<^sub>\\<circ>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>4\\<^sub>\\<nat>\\<rparr> \\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr>,\n                 gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>\\<rparr>\\<^sub>\\<bullet>]\\<^sub>\\<circ>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>.\n          \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n             \\<phi> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>a\\<rparr>,\n       \\<lambda>f\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n          \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n             \\<phi> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<rparr>,\n       \\<CC>,\n       [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n        \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n        \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs\n [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n     \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n  \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n     \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n  \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n     \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        \\<AA>\n         i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n  \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n     \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        \\<AA>\n         i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>]\\<^sub>\\<circ>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>4\\<^sub>\\<nat>\\<rparr> \\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr>,\n                 gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>\\<rparr>\\<^sub>\\<bullet>]\\<^sub>\\<circ>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>.\n          \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n             \\<phi> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>a\\<rparr>,\n       \\<lambda>f\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n          \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n             \\<phi> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<rparr>,\n       \\<CC>,\n       [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n        \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n        \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs\n [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n     \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n  \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n     \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n  \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n     \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        \\<AA>\n         i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n  \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n     \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        \\<AA>\n         i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>]\\<^sub>\\<circ>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>4\\<^sub>\\<nat>\\<rparr> \\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr>,\n                 gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>\\<rparr>\\<^sub>\\<bullet>]\\<^sub>\\<circ>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>.\n          \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n             \\<phi> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>a\\<rparr>,\n       \\<lambda>f\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n          \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n             \\<phi> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<rparr>,\n       \\<CC>,\n       [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n        \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n        \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs\n [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n     \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n  \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n     \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n  \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n     \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        \\<AA>\n         i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n  \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n     \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        \\<AA>\n         i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>]\\<^sub>\\<circ>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>4\\<^sub>\\<nat>\\<rparr> \\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr>,\n                 gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>\\<rparr>\\<^sub>\\<bullet>]\\<^sub>\\<circ>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>,\n     [[\\<lambda>a\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>.\n          \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n             \\<phi> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>a\\<rparr>,\n       \\<lambda>f\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n          \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n             \\<phi> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<rparr>,\n       \\<CC>,\n       [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n        \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n        \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs\n [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n     \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n  \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n     \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n  \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n     \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        \\<AA>\n         i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n  \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n     \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        \\<AA>\n         i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>]\\<^sub>\\<circ>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>4\\<^sub>\\<nat>\\<rparr> \\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr>,\n                 gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>\\<rparr>\\<^sub>\\<bullet>]\\<^sub>\\<circ>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>.\n          \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n             \\<phi> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>a\\<rparr>,\n       \\<lambda>f\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n          \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n             \\<phi> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<rparr>,\n       \\<CC>,\n       [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n        \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n        \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs\n [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n     \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n  \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n     \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n  \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n     \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        \\<AA>\n         i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n  \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n     \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        \\<AA>\n         i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>]\\<^sub>\\<circ>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>4\\<^sub>\\<nat>\\<rparr> \\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr>,\n                 gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>\\<rparr>\\<^sub>\\<bullet>]\\<^sub>\\<circ>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>.\n          \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n             \\<phi> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>a\\<rparr>,\n       \\<lambda>f\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n          \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n             \\<phi> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<rparr>,\n       \\<CC>,\n       [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n        \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n        \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs\n [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n     \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n  \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n     \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n  \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n     \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        \\<AA>\n         i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n  \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n     \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        \\<AA>\n         i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>]\\<^sub>\\<circ>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>4\\<^sub>\\<nat>\\<rparr> \\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr>,\n                 gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>\\<rparr>\\<^sub>\\<bullet>]\\<^sub>\\<circ>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>.\n          \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n             \\<phi> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>a\\<rparr>,\n       \\<lambda>f\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n          \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n             \\<phi> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<rparr>,\n       \\<CC>,\n       [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n        \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n           \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n        \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs\n [\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n     \\<AA> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n  \\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n     \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n  \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n     \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        \\<AA>\n         i\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>,\n  \\<lambda>f\\<in>\\<^sub>\\<circ>\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I.\n                                  \\<AA> i\\<lparr>1\\<^sub>\\<nat>\\<rparr>.\n     \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        \\<AA>\n         i\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>f\\<lparr>i\\<rparr>\\<rparr>]\\<^sub>\\<circ>.\n           \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<AA>\n               i\\<lparr>4\\<^sub>\\<nat>\\<rparr> \\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr>,\n                 gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>\\<rparr>\\<^sub>\\<bullet>]\\<^sub>\\<circ>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>3\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>]\\<^sub>\\<circ>", "by (simp add: nat_omega_simps)"], ["", "context\n  fixes \\<AA> \\<phi> :: \"V \\<Rightarrow> V\"\n    and \\<CC> :: V\nbegin"], ["", "lemmas_with \n  [\n    where \\<AA>=\\<open>\\<lambda>i. smc_dg (\\<AA> i)\\<close> and \\<phi>=\\<open>\\<lambda>i. smcf_dghm (\\<phi> i)\\<close> and \\<CC>=\\<open>smc_dg \\<CC>\\<close>, \n    unfolded slicing_simps slicing_commute\n  ]:\n  smcf_up_ObjMap_vdomain[smc_cs_simps] = dghm_up_ObjMap_vdomain\n  and smcf_up_ObjMap_app = dghm_up_ObjMap_app\n  and smcf_up_ObjMap_app_vdomain[smc_cs_simps] = dghm_up_ObjMap_app_vdomain\n  and smcf_up_ObjMap_app_component[smc_cs_simps] = dghm_up_ObjMap_app_component\n  and smcf_up_ArrMap_vdomain[smc_cs_simps] = dghm_up_ArrMap_vdomain\n  and smcf_up_ArrMap_app = dghm_up_ArrMap_app\n  and smcf_up_ArrMap_app_vdomain[smc_cs_simps] = dghm_up_ArrMap_app_vdomain\n  and smcf_up_ArrMap_app_component[smc_cs_simps] = dghm_up_ArrMap_app_component"], ["", "lemma smcf_up_ObjMap_vrange:\n  assumes \"\\<And>i. i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow> \\<phi> i : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA> i\"\n  shows \"\\<R>\\<^sub>\\<circ> (smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>ObjMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Obj\\<rparr>", "proof\n  (\n    rule dghm_up_ObjMap_vrange\n      [\n        where \\<AA>=\\<open>\\<lambda>i. smc_dg (\\<AA> i)\\<close> \n          and \\<phi>=\\<open>\\<lambda>i. smcf_dghm (\\<phi> i)\\<close> \n          and \\<CC>=\\<open>smc_dg \\<CC>\\<close>, \n        unfolded slicing_simps slicing_commute\n      ]\n  )"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       smcf_dghm (\\<phi> i) :\n       smc_dg\n        \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>?\\<alpha>\\<^esub> smc_dg\n                                     (\\<AA> i)", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       smcf_dghm (\\<phi> i) :\n       smc_dg\n        \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>?\\<alpha>\\<^esub> smc_dg\n                                     (\\<AA> i)", "assume \"i \\<in>\\<^sub>\\<circ> I\""], ["proof (state)\nthis:\n  i \\<in>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       smcf_dghm (\\<phi> i) :\n       smc_dg\n        \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>?\\<alpha>\\<^esub> smc_dg\n                                     (\\<AA> i)", "then"], ["proof (chain)\npicking this:\n  i \\<in>\\<^sub>\\<circ> I", "interpret is_semifunctor \\<alpha> \\<CC> \\<open>\\<AA> i\\<close> \\<open>\\<phi> i\\<close>"], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. \\<phi> i :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n  i", "by (rule assms)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       smcf_dghm (\\<phi> i) :\n       smc_dg\n        \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>?\\<alpha>\\<^esub> smc_dg\n                                     (\\<AA> i)", "show \"smcf_dghm (\\<phi> i) : smc_dg \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg (\\<AA> i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm (\\<phi> i) :\n    smc_dg\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 (\\<AA> i)", "by (rule smcf_is_dghm)"], ["proof (state)\nthis:\n  smcf_dghm (\\<phi> i) :\n  smc_dg\n   \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                               (\\<AA> i)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smcf_up_ObjMap_app_vrange:\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\" and \"\\<And>i. i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow> \\<phi> i : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA> i\"\n  shows \" \\<R>\\<^sub>\\<circ> (smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>) \\<subseteq>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<lparr>Obj\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                               ((\\<lambda>a\\<in>\\<^sub>\\<circ>I.\n                                    \\<AA>\n                                     a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                I)", "proof\n  (\n    rule dghm_up_ObjMap_app_vrange\n      [\n        where \\<AA>=\\<open>\\<lambda>i. smc_dg (\\<AA> i)\\<close> \n          and \\<phi>=\\<open>\\<lambda>i. smcf_dghm (\\<phi> i)\\<close> \n          and \\<CC>=\\<open>smc_dg \\<CC>\\<close>, \n        unfolded slicing_simps slicing_commute\n      ]\n  )"], ["proof (state)\ngoal (2 subgoals):\n 1. a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n 2. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       smcf_dghm (\\<phi> i) :\n       smc_dg\n        \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>?\\<alpha>\\<^esub> smc_dg\n                                     (\\<AA> i)", "show \"a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "by (rule assms)"], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       smcf_dghm (\\<phi> i) :\n       smc_dg\n        \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>?\\<alpha>\\<^esub> smc_dg\n                                     (\\<AA> i)", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       smcf_dghm (\\<phi> i) :\n       smc_dg\n        \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>?\\<alpha>\\<^esub> smc_dg\n                                     (\\<AA> i)", "assume \"i \\<in>\\<^sub>\\<circ> I\""], ["proof (state)\nthis:\n  i \\<in>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       smcf_dghm (\\<phi> i) :\n       smc_dg\n        \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>?\\<alpha>\\<^esub> smc_dg\n                                     (\\<AA> i)", "then"], ["proof (chain)\npicking this:\n  i \\<in>\\<^sub>\\<circ> I", "interpret is_semifunctor \\<alpha> \\<CC> \\<open>\\<AA> i\\<close> \\<open>\\<phi> i\\<close>"], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. \\<phi> i :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n  i", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       smcf_dghm (\\<phi> i) :\n       smc_dg\n        \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>?\\<alpha>\\<^esub> smc_dg\n                                     (\\<AA> i)", "show \"smcf_dghm (\\<phi> i) : smc_dg \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg (\\<AA> i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm (\\<phi> i) :\n    smc_dg\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 (\\<AA> i)", "by (rule smcf_is_dghm)"], ["proof (state)\nthis:\n  smcf_dghm (\\<phi> i) :\n  smc_dg\n   \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                               (\\<AA> i)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smcf_up_ArrMap_vrange:\n  assumes \"\\<And>i. i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow> \\<phi> i : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA> i\"\n  shows \"\\<R>\\<^sub>\\<circ> (smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>ArrMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>ArrMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Arr\\<rparr>", "proof\n  (\n    rule dghm_up_ArrMap_vrange\n      [\n        where \\<AA>=\\<open>\\<lambda>i. smc_dg (\\<AA> i)\\<close> \n          and \\<phi>=\\<open>\\<lambda>i. smcf_dghm (\\<phi> i)\\<close> \n          and \\<CC>=\\<open>smc_dg \\<CC>\\<close>, \n        unfolded slicing_simps slicing_commute\n      ]\n  )"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       smcf_dghm (\\<phi> i) :\n       smc_dg\n        \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>?\\<alpha>\\<^esub> smc_dg\n                                     (\\<AA> i)", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       smcf_dghm (\\<phi> i) :\n       smc_dg\n        \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>?\\<alpha>\\<^esub> smc_dg\n                                     (\\<AA> i)", "assume \"i \\<in>\\<^sub>\\<circ> I\""], ["proof (state)\nthis:\n  i \\<in>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       smcf_dghm (\\<phi> i) :\n       smc_dg\n        \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>?\\<alpha>\\<^esub> smc_dg\n                                     (\\<AA> i)", "then"], ["proof (chain)\npicking this:\n  i \\<in>\\<^sub>\\<circ> I", "interpret is_semifunctor \\<alpha> \\<CC> \\<open>\\<AA> i\\<close> \\<open>\\<phi> i\\<close>"], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. \\<phi> i :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n  i", "by (rule assms)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       smcf_dghm (\\<phi> i) :\n       smc_dg\n        \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>?\\<alpha>\\<^esub> smc_dg\n                                     (\\<AA> i)", "show \"smcf_dghm (\\<phi> i) : smc_dg \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg (\\<AA> i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm (\\<phi> i) :\n    smc_dg\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 (\\<AA> i)", "by (rule smcf_is_dghm)"], ["proof (state)\nthis:\n  smcf_dghm (\\<phi> i) :\n  smc_dg\n   \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                               (\\<AA> i)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smcf_up_ArrMap_app_vrange:\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\" and \"\\<And>i. i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow> \\<phi> i : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA> i\"\n  shows \"\\<R>\\<^sub>\\<circ> (smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>) \\<subseteq>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I. \\<AA> i\\<lparr>Arr\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                               ((\\<lambda>a\\<in>\\<^sub>\\<circ>I.\n                                    \\<AA>\n                                     a\\<lparr>Arr\\<rparr>) `\\<^sub>\\<circ>\n                                I)", "proof\n  (\n    rule dghm_up_ArrMap_app_vrange[\n      where \\<AA>=\\<open>\\<lambda>i. smc_dg (\\<AA> i)\\<close> \n        and \\<phi>=\\<open>\\<lambda>i. smcf_dghm (\\<phi> i)\\<close> \n        and \\<CC>=\\<open>smc_dg \\<CC>\\<close>, \n      unfolded slicing_simps slicing_commute\n      ]\n  )"], ["proof (state)\ngoal (2 subgoals):\n 1. a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n 2. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       smcf_dghm (\\<phi> i) :\n       smc_dg\n        \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>?\\<alpha>\\<^esub> smc_dg\n                                     (\\<AA> i)", "show \"a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "by (rule assms)"], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       smcf_dghm (\\<phi> i) :\n       smc_dg\n        \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>?\\<alpha>\\<^esub> smc_dg\n                                     (\\<AA> i)", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       smcf_dghm (\\<phi> i) :\n       smc_dg\n        \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>?\\<alpha>\\<^esub> smc_dg\n                                     (\\<AA> i)", "assume \"i \\<in>\\<^sub>\\<circ> I\""], ["proof (state)\nthis:\n  i \\<in>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       smcf_dghm (\\<phi> i) :\n       smc_dg\n        \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>?\\<alpha>\\<^esub> smc_dg\n                                     (\\<AA> i)", "then"], ["proof (chain)\npicking this:\n  i \\<in>\\<^sub>\\<circ> I", "interpret is_semifunctor \\<alpha> \\<CC> \\<open>\\<AA> i\\<close> \\<open>\\<phi> i\\<close>"], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. \\<phi> i :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n  i", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       smcf_dghm (\\<phi> i) :\n       smc_dg\n        \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>?\\<alpha>\\<^esub> smc_dg\n                                     (\\<AA> i)", "show \"smcf_dghm (\\<phi> i) : smc_dg \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg (\\<AA> i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm (\\<phi> i) :\n    smc_dg\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 (\\<AA> i)", "by (rule smcf_is_dghm)"], ["proof (state)\nthis:\n  smcf_dghm (\\<phi> i) :\n  smc_dg\n   \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                               (\\<AA> i)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "context psemicategory\nbegin"], ["", "interpretation pdg: pdigraph \\<alpha> I \\<open>\\<lambda>i. smc_dg (\\<AA> i)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. pdigraph \\<alpha> I (\\<lambda>i. smc_dg (\\<AA> i))", "by (rule psmc_pdigraph)"], ["", "lemmas_with [unfolded slicing_simps slicing_commute]: \n  psmc_dghm_comp_dghm_proj_dghm_up = pdg.pdg_dghm_comp_dghm_proj_dghm_up\n  and psmc_dghm_up_eq_dghm_proj = pdg.pdg_dghm_up_eq_dghm_proj"], ["", "end"], ["", "subsubsection\\<open>\nSemicategory product universal property semifunctor is a semifunctor\n\\<close>"], ["", "lemma (in psemicategory) psmc_smcf_up_is_semifunctor:\n  assumes \"semicategory \\<alpha> \\<CC>\" and \"\\<And>i. i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow> \\<phi> i : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA> i\"\n  shows \"smcf_up I \\<AA> \\<CC> \\<phi> : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_up I \\<AA> \\<CC> \\<phi> :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_prod\n  I \\<AA>", "proof(intro is_semifunctorI)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (smcf_up I \\<AA> \\<CC> \\<phi>)\n 3. semicategory \\<alpha> \\<CC>\n 4. semicategory \\<alpha> (smc_prod I \\<AA>)\n 5. vcard (smcf_up I \\<AA> \\<CC> \\<phi>) = 4\\<^sub>\\<nat>\n 6. smcf_dghm (smcf_up I \\<AA> \\<CC> \\<phi>) :\n    smc_dg\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 (smc_prod I \\<AA>)\n 7. smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>HomDom\\<rparr> = \\<CC>\n 8. smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>HomCod\\<rparr> = smc_prod I \\<AA>\n 9. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> smcf_up I \\<AA> \\<CC>\n                          \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                        f\\<rparr> =\n                         smcf_up I \\<AA> \\<CC>\n                          \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                         smcf_up I \\<AA> \\<CC>\n                          \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "interpret \\<CC>: semicategory \\<alpha> \\<CC>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<CC>", "by (simp add: assms(1))"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (smcf_up I \\<AA> \\<CC> \\<phi>)\n 3. semicategory \\<alpha> \\<CC>\n 4. semicategory \\<alpha> (smc_prod I \\<AA>)\n 5. vcard (smcf_up I \\<AA> \\<CC> \\<phi>) = 4\\<^sub>\\<nat>\n 6. smcf_dghm (smcf_up I \\<AA> \\<CC> \\<phi>) :\n    smc_dg\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 (smc_prod I \\<AA>)\n 7. smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>HomDom\\<rparr> = \\<CC>\n 8. smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>HomCod\\<rparr> = smc_prod I \\<AA>\n 9. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> smcf_up I \\<AA> \\<CC>\n                          \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                        f\\<rparr> =\n                         smcf_up I \\<AA> \\<CC>\n                          \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                         smcf_up I \\<AA> \\<CC>\n                          \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "interpret \\<AA>: semicategory \\<alpha> \\<open>smc_prod I \\<AA>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (smc_prod I \\<AA>)", "by (rule psmc_semicategory_smc_prod)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (smcf_up I \\<AA> \\<CC> \\<phi>)\n 3. semicategory \\<alpha> \\<CC>\n 4. semicategory \\<alpha> (smc_prod I \\<AA>)\n 5. vcard (smcf_up I \\<AA> \\<CC> \\<phi>) = 4\\<^sub>\\<nat>\n 6. smcf_dghm (smcf_up I \\<AA> \\<CC> \\<phi>) :\n    smc_dg\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 (smc_prod I \\<AA>)\n 7. smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>HomDom\\<rparr> = \\<CC>\n 8. smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>HomCod\\<rparr> = smc_prod I \\<AA>\n 9. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> smcf_up I \\<AA> \\<CC>\n                          \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                        f\\<rparr> =\n                         smcf_up I \\<AA> \\<CC>\n                          \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                         smcf_up I \\<AA> \\<CC>\n                          \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "show \"vfsequence (smcf_up I \\<AA> \\<CC> \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (smcf_up I \\<AA> \\<CC> \\<phi>)", "unfolding smcf_up_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence\n     [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Obj\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<phi> i\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Arr\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<phi> i\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>,\n      \\<CC>, smc_prod I \\<AA>]\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  vfsequence (smcf_up I \\<AA> \\<CC> \\<phi>)\n\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> \\<CC>\n 3. semicategory \\<alpha> (smc_prod I \\<AA>)\n 4. vcard (smcf_up I \\<AA> \\<CC> \\<phi>) = 4\\<^sub>\\<nat>\n 5. smcf_dghm (smcf_up I \\<AA> \\<CC> \\<phi>) :\n    smc_dg\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 (smc_prod I \\<AA>)\n 6. smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>HomDom\\<rparr> = \\<CC>\n 7. smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>HomCod\\<rparr> = smc_prod I \\<AA>\n 8. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> smcf_up I \\<AA> \\<CC>\n                          \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                        f\\<rparr> =\n                         smcf_up I \\<AA> \\<CC>\n                          \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                         smcf_up I \\<AA> \\<CC>\n                          \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "show \"vcard (smcf_up I \\<AA> \\<CC> \\<phi>) = 4\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (smcf_up I \\<AA> \\<CC> \\<phi>) = 4\\<^sub>\\<nat>", "unfolding smcf_up_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard\n     [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Obj\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<phi> i\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Arr\\<rparr>.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<phi> i\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>,\n      \\<CC>, smc_prod I \\<AA>]\\<^sub>\\<circ> =\n    4\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  vcard (smcf_up I \\<AA> \\<CC> \\<phi>) = 4\\<^sub>\\<nat>\n\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> \\<CC>\n 3. semicategory \\<alpha> (smc_prod I \\<AA>)\n 4. smcf_dghm (smcf_up I \\<AA> \\<CC> \\<phi>) :\n    smc_dg\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 (smc_prod I \\<AA>)\n 5. smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>HomDom\\<rparr> = \\<CC>\n 6. smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>HomCod\\<rparr> = smc_prod I \\<AA>\n 7. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> smcf_up I \\<AA> \\<CC>\n                          \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                        f\\<rparr> =\n                         smcf_up I \\<AA> \\<CC>\n                          \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                         smcf_up I \\<AA> \\<CC>\n                          \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "show dghm_smcf_up: \n    \"smcf_dghm (smcf_up I \\<AA> \\<CC> \\<phi>) : smc_dg \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg (smc_prod I \\<AA>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm (smcf_up I \\<AA> \\<CC> \\<phi>) :\n    smc_dg\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 (smc_prod I \\<AA>)", "by \n      (\n        simp add: \n          assms \n          slicing_commute[symmetric]\n          psmc_pdigraph \n          is_semifunctor.smcf_is_dghm \n          pdigraph.pdg_dghm_up_is_dghm \n          semicategory.smc_digraph\n      )"], ["proof (state)\nthis:\n  smcf_dghm (smcf_up I \\<AA> \\<CC> \\<phi>) :\n  smc_dg\n   \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                               (smc_prod I \\<AA>)\n\ngoal (6 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> \\<CC>\n 3. semicategory \\<alpha> (smc_prod I \\<AA>)\n 4. smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>HomDom\\<rparr> = \\<CC>\n 5. smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>HomCod\\<rparr> = smc_prod I \\<AA>\n 6. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> smcf_up I \\<AA> \\<CC>\n                          \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                        f\\<rparr> =\n                         smcf_up I \\<AA> \\<CC>\n                          \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                         smcf_up I \\<AA> \\<CC>\n                          \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "interpret smcf_up:\n    is_dghm \\<alpha> \\<open>smc_dg \\<CC>\\<close> \\<open>smc_dg (smc_prod I \\<AA>)\\<close> \\<open>smcf_dghm (smcf_up I \\<AA> \\<CC> \\<phi>)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm (smcf_up I \\<AA> \\<CC> \\<phi>) :\n    smc_dg\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 (smc_prod I \\<AA>)", "by (rule dghm_smcf_up)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> \\<CC>\n 3. semicategory \\<alpha> (smc_prod I \\<AA>)\n 4. smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>HomDom\\<rparr> = \\<CC>\n 5. smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>HomCod\\<rparr> = smc_prod I \\<AA>\n 6. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> smcf_up I \\<AA> \\<CC>\n                          \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                        f\\<rparr> =\n                         smcf_up I \\<AA> \\<CC>\n                          \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                         smcf_up I \\<AA> \\<CC>\n                          \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "show \"smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\\<rparr> = \n    smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\"\n    if \"g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\" and \"f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\" for g b c f a"], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_up I \\<AA> \\<CC>\n     \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n   f\\<rparr> =\n    smcf_up I \\<AA> \\<CC>\n     \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n    smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "proof(rule smc_prod_Arr_cong[of _ I \\<AA>])"], ["proof (state)\ngoal (3 subgoals):\n 1. smcf_up I \\<AA> \\<CC>\n     \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n   f\\<rparr>\n    \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Arr\\<rparr>\n 2. smcf_up I \\<AA> \\<CC>\n     \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n    smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\n    \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Arr\\<rparr>\n 3. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       smcf_up I \\<AA> \\<CC>\n        \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n      f\\<rparr>\\<lparr>i\\<rparr> =\n       (smcf_up I \\<AA> \\<CC>\n         \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        smcf_up I \\<AA> \\<CC>\n         \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>)\\<lparr>i\\<rparr>", "note smcf_up_f = \n        smcf_up.dghm_ArrMap_is_arr[unfolded slicing_simps, OF that(2)]\n      and smcf_up_g = \n        smcf_up.dghm_ArrMap_is_arr[unfolded slicing_simps, OF that(1)]"], ["proof (state)\nthis:\n  smcf_up I \\<AA> \\<CC>\n   \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> : smcf_up I \\<AA> \\<CC>\n              \\<phi>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> smcf_up\n                           I \\<AA> \\<CC>\n                           \\<phi>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\n  smcf_up I \\<AA> \\<CC>\n   \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> : smcf_up I \\<AA> \\<CC>\n              \\<phi>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr> \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> smcf_up\n                           I \\<AA> \\<CC>\n                           \\<phi>\\<lparr>ObjMap\\<rparr>\\<lparr>c\\<rparr>\n\ngoal (3 subgoals):\n 1. smcf_up I \\<AA> \\<CC>\n     \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n   f\\<rparr>\n    \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Arr\\<rparr>\n 2. smcf_up I \\<AA> \\<CC>\n     \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n    smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\n    \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Arr\\<rparr>\n 3. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       smcf_up I \\<AA> \\<CC>\n        \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n      f\\<rparr>\\<lparr>i\\<rparr> =\n       (smcf_up I \\<AA> \\<CC>\n         \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        smcf_up I \\<AA> \\<CC>\n         \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>)\\<lparr>i\\<rparr>", "from that"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "have gf: \"g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c", "by (simp add: smc_cs_intros)"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n\ngoal (3 subgoals):\n 1. smcf_up I \\<AA> \\<CC>\n     \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n   f\\<rparr>\n    \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Arr\\<rparr>\n 2. smcf_up I \\<AA> \\<CC>\n     \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n    smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\n    \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Arr\\<rparr>\n 3. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       smcf_up I \\<AA> \\<CC>\n        \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n      f\\<rparr>\\<lparr>i\\<rparr> =\n       (smcf_up I \\<AA> \\<CC>\n         \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        smcf_up I \\<AA> \\<CC>\n         \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>)\\<lparr>i\\<rparr>", "from smcf_up.dghm_ArrMap_is_arr[unfolded slicing_simps, OF this]"], ["proof (chain)\npicking this:\n  smcf_up I \\<AA> \\<CC>\n   \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n f\\<rparr> : smcf_up I \\<AA> \\<CC>\n              \\<phi>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> smcf_up\n                           I \\<AA> \\<CC>\n                           \\<phi>\\<lparr>ObjMap\\<rparr>\\<lparr>c\\<rparr>", "show\n      \"smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\\<rparr> \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  smcf_up I \\<AA> \\<CC>\n   \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n f\\<rparr> : smcf_up I \\<AA> \\<CC>\n              \\<phi>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> smcf_up\n                           I \\<AA> \\<CC>\n                           \\<phi>\\<lparr>ObjMap\\<rparr>\\<lparr>c\\<rparr>\n\ngoal (1 subgoal):\n 1. smcf_up I \\<AA> \\<CC>\n     \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n   f\\<rparr>\n    \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Arr\\<rparr>", "by (simp add: smc_cs_intros)"], ["proof (state)\nthis:\n  smcf_up I \\<AA> \\<CC>\n   \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n f\\<rparr>\n  \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Arr\\<rparr>\n\ngoal (2 subgoals):\n 1. smcf_up I \\<AA> \\<CC>\n     \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n    smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\n    \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Arr\\<rparr>\n 2. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       smcf_up I \\<AA> \\<CC>\n        \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n      f\\<rparr>\\<lparr>i\\<rparr> =\n       (smcf_up I \\<AA> \\<CC>\n         \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        smcf_up I \\<AA> \\<CC>\n         \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>)\\<lparr>i\\<rparr>", "from smcf_up_g smcf_up_f"], ["proof (chain)\npicking this:\n  smcf_up I \\<AA> \\<CC>\n   \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> : smcf_up I \\<AA> \\<CC>\n              \\<phi>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr> \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> smcf_up\n                           I \\<AA> \\<CC>\n                           \\<phi>\\<lparr>ObjMap\\<rparr>\\<lparr>c\\<rparr>\n  smcf_up I \\<AA> \\<CC>\n   \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> : smcf_up I \\<AA> \\<CC>\n              \\<phi>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> smcf_up\n                           I \\<AA> \\<CC>\n                           \\<phi>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>", "show \n      \"smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> \\<in>\\<^sub>\\<circ> \n        smc_prod I \\<AA>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  smcf_up I \\<AA> \\<CC>\n   \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> : smcf_up I \\<AA> \\<CC>\n              \\<phi>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr> \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> smcf_up\n                           I \\<AA> \\<CC>\n                           \\<phi>\\<lparr>ObjMap\\<rparr>\\<lparr>c\\<rparr>\n  smcf_up I \\<AA> \\<CC>\n   \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> : smcf_up I \\<AA> \\<CC>\n              \\<phi>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> \\<mapsto>\\<^bsub>smc_prod I \\<AA>\\<^esub> smcf_up\n                           I \\<AA> \\<CC>\n                           \\<phi>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\n\ngoal (1 subgoal):\n 1. smcf_up I \\<AA> \\<CC>\n     \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n    smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\n    \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Arr\\<rparr>", "by (meson \\<AA>.smc_is_arrE \\<AA>.smc_Comp_is_arr)"], ["proof (state)\nthis:\n  smcf_up I \\<AA> \\<CC>\n   \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n  smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\n  \\<in>\\<^sub>\\<circ> smc_prod I \\<AA>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       smcf_up I \\<AA> \\<CC>\n        \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n      f\\<rparr>\\<lparr>i\\<rparr> =\n       (smcf_up I \\<AA> \\<CC>\n         \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        smcf_up I \\<AA> \\<CC>\n         \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>)\\<lparr>i\\<rparr>", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       smcf_up I \\<AA> \\<CC>\n        \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n      f\\<rparr>\\<lparr>i\\<rparr> =\n       (smcf_up I \\<AA> \\<CC>\n         \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        smcf_up I \\<AA> \\<CC>\n         \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>)\\<lparr>i\\<rparr>", "assume prems: \"i \\<in>\\<^sub>\\<circ> I\""], ["proof (state)\nthis:\n  i \\<in>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       smcf_up I \\<AA> \\<CC>\n        \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n      f\\<rparr>\\<lparr>i\\<rparr> =\n       (smcf_up I \\<AA> \\<CC>\n         \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        smcf_up I \\<AA> \\<CC>\n         \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>)\\<lparr>i\\<rparr>", "from gf"], ["proof (chain)\npicking this:\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c", "have gf': \"g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\n    \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "by (simp add: smc_cs_intros)"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\n  \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       smcf_up I \\<AA> \\<CC>\n        \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n      f\\<rparr>\\<lparr>i\\<rparr> =\n       (smcf_up I \\<AA> \\<CC>\n         \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        smcf_up I \\<AA> \\<CC>\n         \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>)\\<lparr>i\\<rparr>", "from that"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "have g: \"g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\" and f: \"f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> &&&\n    f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "by auto"], ["proof (state)\nthis:\n  g \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n  f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       smcf_up I \\<AA> \\<CC>\n        \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n      f\\<rparr>\\<lparr>i\\<rparr> =\n       (smcf_up I \\<AA> \\<CC>\n         \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        smcf_up I \\<AA> \\<CC>\n         \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>)\\<lparr>i\\<rparr>", "interpret \\<phi>: is_semifunctor \\<alpha> \\<CC> \\<open>\\<AA> i\\<close> \\<open>\\<phi> i\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi> i :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n  i", "by (rule assms(2)[OF prems])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       smcf_up I \\<AA> \\<CC>\n        \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n      f\\<rparr>\\<lparr>i\\<rparr> =\n       (smcf_up I \\<AA> \\<CC>\n         \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n        smcf_up I \\<AA> \\<CC>\n         \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>)\\<lparr>i\\<rparr>", "from that"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "show \"smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\\<rparr>\\<lparr>i\\<rparr> = \n      (\n        smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub> smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\n      )\\<lparr>i\\<rparr>\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. smcf_up I \\<AA> \\<CC>\n     \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n   f\\<rparr>\\<lparr>i\\<rparr> =\n    (smcf_up I \\<AA> \\<CC>\n      \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n     smcf_up I \\<AA> \\<CC>\n      \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>)\\<lparr>i\\<rparr>", "unfolding \n        smcf_up_ArrMap_app_component[OF gf' prems]\n        smc_prod_Comp_app_component[OF smcf_up_g smcf_up_f prems]\n        smcf_up_ArrMap_app_component[OF g prems]\n        smcf_up_ArrMap_app_component[OF f prems]"], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<phi>\n     i\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                                    f\\<rparr> =\n    \\<phi>\n     i\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<AA> i\\<^esub>\n    \\<phi> i\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "by (rule \\<phi>.smcf_ArrMap_Comp)"], ["proof (state)\nthis:\n  smcf_up I \\<AA> \\<CC>\n   \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n f\\<rparr>\\<lparr>i\\<rparr> =\n  (smcf_up I \\<AA> \\<CC>\n    \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n   smcf_up I \\<AA> \\<CC>\n    \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>)\\<lparr>i\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?g : ?b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> ?c;\n   ?f : ?a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> ?b\\<rbrakk>\n  \\<Longrightarrow> smcf_up I \\<AA> \\<CC>\n                     \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>?g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                   ?f\\<rparr> =\n                    smcf_up I \\<AA> \\<CC>\n                     \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>?g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>smc_prod I \\<AA>\\<^esub>\n                    smcf_up I \\<AA> \\<CC>\n                     \\<phi>\\<lparr>ArrMap\\<rparr>\\<lparr>?f\\<rparr>\n\ngoal (5 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> \\<CC>\n 3. semicategory \\<alpha> (smc_prod I \\<AA>)\n 4. smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>HomDom\\<rparr> = \\<CC>\n 5. smcf_up I \\<AA> \\<CC> \\<phi>\\<lparr>HomCod\\<rparr> = smc_prod I \\<AA>", "qed (auto simp: assms(1) psmc_semicategory_smc_prod smcf_up_components)"], ["", "subsubsection\\<open>Further properties\\<close>"], ["", "lemma (in psemicategory) psmc_Comp_smcf_proj_smcf_up: \n  assumes \"semicategory \\<alpha> \\<CC>\" \n    and \"\\<And>i. i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow> \\<phi> i : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA> i\" \n    and \"i \\<in>\\<^sub>\\<circ> I\" \n  shows \"\\<phi> i = \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F smcf_up I \\<AA> \\<CC> \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi> i =\n    \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n     i \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n    smcf_up I \\<AA> \\<CC> \\<phi>", "proof(rule smcf_dghm_eqI)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<phi> i :\n    ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<BB>\n 2. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n     i \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n    smcf_up I \\<AA> \\<CC> \\<phi> :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<DD>\n 3. ?\\<AA> = ?\\<CC>\n 4. ?\\<BB> = ?\\<DD>\n 5. smcf_dghm (\\<phi> i) =\n    smcf_dghm\n     (\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n       i \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n      smcf_up I \\<AA> \\<CC> \\<phi>)", "interpret \\<phi>: is_semifunctor \\<alpha> \\<CC> \\<open>\\<AA> i\\<close> \\<open>\\<phi> i\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi> i :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n  i", "by (rule assms(2)[OF assms(3)])"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<phi> i :\n    ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<BB>\n 2. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n     i \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n    smcf_up I \\<AA> \\<CC> \\<phi> :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<DD>\n 3. ?\\<AA> = ?\\<CC>\n 4. ?\\<BB> = ?\\<DD>\n 5. smcf_dghm (\\<phi> i) =\n    smcf_dghm\n     (\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n       i \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n      smcf_up I \\<AA> \\<CC> \\<phi>)", "interpret \\<pi>: is_semifunctor \\<alpha> \\<open>smc_prod I \\<AA>\\<close> \\<open>\\<AA> i\\<close> \\<open>\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i :\n    smc_prod I\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n   i", "by (simp add: assms(3) psmc_smcf_proj_is_semifunctor)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<phi> i :\n    ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<BB>\n 2. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n     i \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n    smcf_up I \\<AA> \\<CC> \\<phi> :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<DD>\n 3. ?\\<AA> = ?\\<CC>\n 4. ?\\<BB> = ?\\<DD>\n 5. smcf_dghm (\\<phi> i) =\n    smcf_dghm\n     (\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n       i \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n      smcf_up I \\<AA> \\<CC> \\<phi>)", "interpret up: is_semifunctor \\<alpha> \\<CC> \\<open>smc_prod I \\<AA>\\<close> \\<open>smcf_up I \\<AA> \\<CC> \\<phi>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_up I \\<AA> \\<CC> \\<phi> :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_prod\n  I \\<AA>", "by \n      (\n        simp add: \n          assms(2) \\<phi>.HomDom.semicategory_axioms psmc_smcf_up_is_semifunctor\n      )"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<phi> i :\n    ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<BB>\n 2. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n     i \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n    smcf_up I \\<AA> \\<CC> \\<phi> :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<DD>\n 3. ?\\<AA> = ?\\<CC>\n 4. ?\\<BB> = ?\\<DD>\n 5. smcf_dghm (\\<phi> i) =\n    smcf_dghm\n     (\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n       i \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n      smcf_up I \\<AA> \\<CC> \\<phi>)", "show \"\\<phi> i : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA> i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi> i :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n  i", "by (simp add: smc_cs_intros)"], ["proof (state)\nthis:\n  \\<phi> i :\n  \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\ni\n\ngoal (4 subgoals):\n 1. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n     i \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n    smcf_up I \\<AA> \\<CC> \\<phi> :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<DD>\n 2. \\<CC> = ?\\<CC>\n 3. \\<AA> i = ?\\<DD>\n 4. smcf_dghm (\\<phi> i) =\n    smcf_dghm\n     (\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n       i \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n      smcf_up I \\<AA> \\<CC> \\<phi>)", "show \"\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F smcf_up I \\<AA> \\<CC> \\<phi> : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA> i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n     i \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n    smcf_up I \\<AA> \\<CC> \\<phi> :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n  i", "by (auto intro: smc_cs_intros)"], ["proof (state)\nthis:\n  \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n   i \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n  smcf_up I \\<AA> \\<CC> \\<phi> :\n  \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\ni\n\ngoal (3 subgoals):\n 1. \\<CC> = \\<CC>\n 2. \\<AA> i = \\<AA> i\n 3. smcf_dghm (\\<phi> i) =\n    smcf_dghm\n     (\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n       i \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n      smcf_up I \\<AA> \\<CC> \\<phi>)", "from assms"], ["proof (chain)\npicking this:\n  semicategory \\<alpha> \\<CC>\n  ?i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n  \\<phi> ?i :\n  \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n?i\n  i \\<in>\\<^sub>\\<circ> I", "show \n    \"smcf_dghm (\\<phi> i) = smcf_dghm (\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F smcf_up I \\<AA> \\<CC> \\<phi>)\""], ["proof (prove)\nusing this:\n  semicategory \\<alpha> \\<CC>\n  ?i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n  \\<phi> ?i :\n  \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n?i\n  i \\<in>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. smcf_dghm (\\<phi> i) =\n    smcf_dghm\n     (\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n       i \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n      smcf_up I \\<AA> \\<CC> \\<phi>)", "unfolding slicing_simps[symmetric] slicing_commute[symmetric]"], ["proof (prove)\nusing this:\n  semicategory \\<alpha> \\<CC>\n  ?i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n  \\<phi> ?i :\n  \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n?i\n  i \\<in>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. smcf_dghm (\\<phi> i) =\n    \\<pi>\\<^sub>D\\<^sub>G I (\\<lambda>i. smc_dg (\\<AA> i))\n     i \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n    dghm_up I (\\<lambda>i. smc_dg (\\<AA> i)) (smc_dg \\<CC>)\n     (\\<lambda>i. smcf_dghm (\\<phi> i))", "by \n      (\n        intro \n          psmc_dghm_comp_dghm_proj_dghm_up\n            [\n              where \\<phi>=\\<open>\\<lambda>i. smcf_dghm (\\<phi> i)\\<close>, \n              unfolded slicing_simps[symmetric] slicing_commute[symmetric]\n            ]\n      )\n      (auto simp: is_semifunctor.smcf_is_dghm)"], ["proof (state)\nthis:\n  smcf_dghm (\\<phi> i) =\n  smcf_dghm\n   (\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n     i \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n    smcf_up I \\<AA> \\<CC> \\<phi>)\n\ngoal (2 subgoals):\n 1. \\<CC> = \\<CC>\n 2. \\<AA> i = \\<AA> i", "qed simp_all"], ["", "lemma (in psemicategory) psmc_smcf_up_eq_smcf_proj:\n  assumes \"\\<FF> : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\"\n    and \"\\<And>i. i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow> \\<phi> i = \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF>\"\n  shows \"smcf_up I \\<AA> \\<CC> \\<phi> = \\<FF>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_up I \\<AA> \\<CC> \\<phi> = \\<FF>", "proof(rule smcf_dghm_eqI)"], ["proof (state)\ngoal (5 subgoals):\n 1. smcf_up I \\<AA> \\<CC> \\<phi> :\n    ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<BB>\n 2. \\<FF> :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<DD>\n 3. ?\\<AA> = ?\\<CC>\n 4. ?\\<BB> = ?\\<DD>\n 5. smcf_dghm (smcf_up I \\<AA> \\<CC> \\<phi>) = smcf_dghm \\<FF>", "interpret \\<FF>: is_semifunctor \\<alpha> \\<CC> \\<open>(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<close> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_prod\n  I \\<AA>", "by (rule assms(1))"], ["proof (state)\ngoal (5 subgoals):\n 1. smcf_up I \\<AA> \\<CC> \\<phi> :\n    ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<BB>\n 2. \\<FF> :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<DD>\n 3. ?\\<AA> = ?\\<CC>\n 4. ?\\<BB> = ?\\<DD>\n 5. smcf_dghm (smcf_up I \\<AA> \\<CC> \\<phi>) = smcf_dghm \\<FF>", "show \"smcf_up I \\<AA> \\<CC> \\<phi> : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_up I \\<AA> \\<CC> \\<phi> :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_prod\n  I \\<AA>", "proof(rule psmc_smcf_up_is_semifunctor)"], ["proof (state)\ngoal (2 subgoals):\n 1. semicategory \\<alpha> \\<CC>\n 2. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       \\<phi> i :\n       \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n     i", "fix i"], ["proof (state)\ngoal (2 subgoals):\n 1. semicategory \\<alpha> \\<CC>\n 2. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       \\<phi> i :\n       \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n     i", "assume prems: \"i \\<in>\\<^sub>\\<circ> I\""], ["proof (state)\nthis:\n  i \\<in>\\<^sub>\\<circ> I\n\ngoal (2 subgoals):\n 1. semicategory \\<alpha> \\<CC>\n 2. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       \\<phi> i :\n       \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n     i", "interpret \\<pi>: is_semifunctor \\<alpha> \\<open>(\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\\<close> \\<open>\\<AA> i\\<close> \\<open>\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i :\n    smc_prod I\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n   i", "using prems"], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA> i :\n    smc_prod I\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n   i", "by (rule psmc_smcf_proj_is_semifunctor)"], ["proof (state)\ngoal (2 subgoals):\n 1. semicategory \\<alpha> \\<CC>\n 2. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       \\<phi> i :\n       \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n     i", "show \"\\<phi> i : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA> i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi> i :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n  i", "unfolding assms(2)[OF prems]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n     i \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n    \\<FF> :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n  i", "by (auto intro: smc_cs_intros)"], ["proof (state)\nthis:\n  \\<phi> i :\n  \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\ni\n\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<CC>", "qed (auto intro: smc_cs_intros)"], ["proof (state)\nthis:\n  smcf_up I \\<AA> \\<CC> \\<phi> :\n  \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_prod\nI \\<AA>\n\ngoal (4 subgoals):\n 1. \\<FF> :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<DD>\n 2. \\<CC> = ?\\<CC>\n 3. smc_prod I \\<AA> = ?\\<DD>\n 4. smcf_dghm (smcf_up I \\<AA> \\<CC> \\<phi>) = smcf_dghm \\<FF>", "show \"\\<FF> : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>I. \\<AA> i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_prod\n  I \\<AA>", "by (rule assms(1))"], ["proof (state)\nthis:\n  \\<FF> :\n  \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_prod\nI \\<AA>\n\ngoal (3 subgoals):\n 1. \\<CC> = \\<CC>\n 2. smc_prod I \\<AA> = smc_prod I \\<AA>\n 3. smcf_dghm (smcf_up I \\<AA> \\<CC> \\<phi>) = smcf_dghm \\<FF>", "from assms"], ["proof (chain)\npicking this:\n  \\<FF> :\n  \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_prod\nI \\<AA>\n  ?i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n  \\<phi> ?i =\n  \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n   ?i \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n  \\<FF>", "show \"smcf_dghm (smcf_up I \\<AA> \\<CC> \\<phi>) = smcf_dghm \\<FF>\""], ["proof (prove)\nusing this:\n  \\<FF> :\n  \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_prod\nI \\<AA>\n  ?i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n  \\<phi> ?i =\n  \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n   ?i \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n  \\<FF>\n\ngoal (1 subgoal):\n 1. smcf_dghm (smcf_up I \\<AA> \\<CC> \\<phi>) = smcf_dghm \\<FF>", "unfolding slicing_simps[symmetric] slicing_commute[symmetric]"], ["proof (prove)\nusing this:\n  \\<FF> :\n  \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_prod\nI \\<AA>\n  ?i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n  \\<phi> ?i =\n  \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C I \\<AA>\n   ?i \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n  \\<FF>\n\ngoal (1 subgoal):\n 1. dghm_up I (\\<lambda>i. smc_dg (\\<AA> i)) (smc_dg \\<CC>)\n     (\\<lambda>i. smcf_dghm (\\<phi> i)) =\n    smcf_dghm \\<FF>", "by (intro psmc_dghm_up_eq_dghm_proj) \n      (auto simp: slicing_simps slicing_commute)"], ["proof (state)\nthis:\n  smcf_dghm (smcf_up I \\<AA> \\<CC> \\<phi>) = smcf_dghm \\<FF>\n\ngoal (2 subgoals):\n 1. \\<CC> = \\<CC>\n 2. smc_prod I \\<AA> = smc_prod I \\<AA>", "qed simp_all"], ["", "subsection\\<open>Singleton semicategory\\<close>"], ["", "subsubsection\\<open>Slicing\\<close>"], ["", "context\n  fixes \\<CC> :: V\nbegin"], ["", "lemmas_with [where \\<CC>=\\<open>smc_dg \\<CC>\\<close>, unfolded slicing_simps slicing_commute]:\n  smc_singleton_ObjI = dg_singleton_ObjI\n  and smc_singleton_ObjE = dg_singleton_ObjE\n  and smc_singleton_ArrI = dg_singleton_ArrI\n  and smc_singleton_ArrE = dg_singleton_ArrE"], ["", "end"], ["", "context semicategory\nbegin"], ["", "interpretation dg: digraph \\<alpha> \\<open>smc_dg \\<CC>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. digraph \\<alpha> (smc_dg \\<CC>)", "by (rule smc_digraph)"], ["", "lemmas_with [unfolded slicing_simps slicing_commute]:\n  smc_finite_pdigraph_smc_singleton = dg.dg_finite_pdigraph_dg_singleton\n  and smc_singleton_is_arrI = dg.dg_singleton_is_arrI\n  and smc_singleton_is_arrD = dg.dg_singleton_is_arrD\n  and smc_singleton_is_arrE = dg.dg_singleton_is_arrE"], ["", "end"], ["", "subsubsection\\<open>Singleton semicategory is a semicategory\\<close>"], ["", "lemma (in semicategory) smc_finite_psemicategory_smc_singleton: \n  assumes \"j \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"finite_psemicategory \\<alpha> (set {j}) (\\<lambda>i. \\<CC>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_psemicategory \\<alpha> (ZFC_in_HOL.set {j}) (\\<lambda>i. \\<CC>)", "by \n    (\n      auto intro: \n        assms\n        semicategory_axioms \n        finite_psemicategory_finite_pdigraphI \n        smc_finite_pdigraph_smc_singleton \n    )"], ["", "lemma (in semicategory) smc_semicategory_smc_singleton:\n  assumes \"j \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"semicategory \\<alpha> (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>set {j}. \\<CC>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha>\n     (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}.\n         \\<CC>)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. semicategory \\<alpha>\n     (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}.\n         \\<CC>)", "interpret finite_psemicategory \\<alpha> \\<open>set {j}\\<close> \\<open>\\<lambda>i. \\<CC>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_psemicategory \\<alpha> (ZFC_in_HOL.set {j}) (\\<lambda>i. \\<CC>)", "using assms"], ["proof (prove)\nusing this:\n  j \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. finite_psemicategory \\<alpha> (ZFC_in_HOL.set {j}) (\\<lambda>i. \\<CC>)", "by (rule smc_finite_psemicategory_smc_singleton)"], ["proof (state)\ngoal (1 subgoal):\n 1. semicategory \\<alpha>\n     (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}.\n         \\<CC>)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha>\n     (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}.\n         \\<CC>)", "by (rule psmc_semicategory_smc_prod)"], ["proof (state)\nthis:\n  semicategory \\<alpha>\n   (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}.\n       \\<CC>)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Singleton semifunctor\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "definition smcf_singleton :: \"V \\<Rightarrow> V \\<Rightarrow> V\"\n  where \"smcf_singleton j \\<CC> =\n    [\n      (\\<lambda>a\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Obj\\<rparr>. set {\\<langle>j, a\\<rangle>}),\n      (\\<lambda>f\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Arr\\<rparr>. set {\\<langle>j, f\\<rangle>}),\n      \\<CC>,\n      (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>set {j}. \\<CC>)\n    ]\\<^sub>\\<circ>\""], ["", "text\\<open>Components.\\<close>"], ["", "lemma smcf_singleton_components:\n  shows \"smcf_singleton j \\<CC>\\<lparr>ObjMap\\<rparr> = (\\<lambda>a\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Obj\\<rparr>. set {\\<langle>j, a\\<rangle>})\"\n    and \"smcf_singleton j \\<CC>\\<lparr>ArrMap\\<rparr> = (\\<lambda>f\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Arr\\<rparr>. set {\\<langle>j, f\\<rangle>})\"\n    and \"smcf_singleton j \\<CC>\\<lparr>HomDom\\<rparr> = \\<CC>\"\n    and \"smcf_singleton j \\<CC>\\<lparr>HomCod\\<rparr> = (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>set {j}. \\<CC>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (smcf_singleton j \\<CC>\\<lparr>ObjMap\\<rparr> =\n     (\\<lambda>a\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Obj\\<rparr>.\n         ZFC_in_HOL.set {\\<langle>j, a\\<rangle>}) &&&\n     smcf_singleton j \\<CC>\\<lparr>ArrMap\\<rparr> =\n     (\\<lambda>f\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Arr\\<rparr>.\n         ZFC_in_HOL.set {\\<langle>j, f\\<rangle>})) &&&\n    smcf_singleton j \\<CC>\\<lparr>HomDom\\<rparr> = \\<CC> &&&\n    smcf_singleton j \\<CC>\\<lparr>HomCod\\<rparr> =\n    (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}.\n        \\<CC>)", "unfolding smcf_singleton_def dghm_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([\\<lambda>a\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Obj\\<rparr>.\n         ZFC_in_HOL.set {\\<langle>j, a\\<rangle>},\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Arr\\<rparr>.\n         ZFC_in_HOL.set {\\<langle>j, f\\<rangle>},\n      \\<CC>,\n      \\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}.\n         \\<CC>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n     (\\<lambda>a\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Obj\\<rparr>.\n         ZFC_in_HOL.set {\\<langle>j, a\\<rangle>}) &&&\n     [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Obj\\<rparr>.\n         ZFC_in_HOL.set {\\<langle>j, a\\<rangle>},\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Arr\\<rparr>.\n         ZFC_in_HOL.set {\\<langle>j, f\\<rangle>},\n      \\<CC>,\n      \\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}.\n         \\<CC>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> =\n     (\\<lambda>f\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Arr\\<rparr>.\n         ZFC_in_HOL.set {\\<langle>j, f\\<rangle>})) &&&\n    [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Obj\\<rparr>.\n        ZFC_in_HOL.set {\\<langle>j, a\\<rangle>},\n     \\<lambda>f\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Arr\\<rparr>.\n        ZFC_in_HOL.set {\\<langle>j, f\\<rangle>},\n     \\<CC>,\n     \\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}.\n        \\<CC>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr> =\n    \\<CC> &&&\n    [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Obj\\<rparr>.\n        ZFC_in_HOL.set {\\<langle>j, a\\<rangle>},\n     \\<lambda>f\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Arr\\<rparr>.\n        ZFC_in_HOL.set {\\<langle>j, f\\<rangle>},\n     \\<CC>,\n     \\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}.\n        \\<CC>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr> =\n    (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}.\n        \\<CC>)", "by (simp_all add: nat_omega_simps)"], ["", "text\\<open>Slicing.\\<close>"], ["", "lemma smcf_dghm_smcf_singleton[slicing_commute]: \n  \"dghm_singleton j (smc_dg \\<CC>)= smcf_dghm (smcf_singleton j \\<CC>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_singleton j (smc_dg \\<CC>) = smcf_dghm (smcf_singleton j \\<CC>)", "unfolding dghm_singleton_def smcf_singleton_def slicing_simps slicing_commute"], ["proof (prove)\ngoal (1 subgoal):\n 1. [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Obj\\<rparr>.\n        ZFC_in_HOL.set {\\<langle>j, a\\<rangle>},\n     \\<lambda>f\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Arr\\<rparr>.\n        ZFC_in_HOL.set {\\<langle>j, f\\<rangle>},\n     smc_dg \\<CC>,\n     smc_dg\n      (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Cj\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                     {j}.\n          \\<CC>)]\\<^sub>\\<circ> =\n    smcf_dghm\n     [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Obj\\<rparr>.\n         ZFC_in_HOL.set {\\<langle>j, a\\<rangle>},\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Arr\\<rparr>.\n         ZFC_in_HOL.set {\\<langle>j, f\\<rangle>},\n      \\<CC>,\n      \\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}.\n         \\<CC>]\\<^sub>\\<circ>", "by \n    (\n      simp add: \n        nat_omega_simps dghm_field_simps dg_field_simps smc_dg_def smcf_dghm_def\n     )"], ["", "context\n  fixes \\<CC> :: V\nbegin"], ["", "lemmas_with [where \\<CC>=\\<open>smc_dg \\<CC>\\<close>, unfolded slicing_simps slicing_commute]:\n  smcf_singleton_ObjMap_vsv[smc_cs_intros] = dghm_singleton_ObjMap_vsv\n  and smcf_singleton_ObjMap_vdomain[smc_cs_simps] = \n    dghm_singleton_ObjMap_vdomain\n  and smcf_singleton_ObjMap_vrange = dghm_singleton_ObjMap_vrange\n  and smcf_singleton_ObjMap_app[smc_prod_cs_simps] = dghm_singleton_ObjMap_app\n  and smcf_singleton_ArrMap_vsv[smc_cs_intros] = dghm_singleton_ArrMap_vsv\n  and smcf_singleton_ArrMap_vdomain[smc_cs_simps] = \n    dghm_singleton_ArrMap_vdomain\n  and smcf_singleton_ArrMap_vrange = dghm_singleton_ArrMap_vrange\n  and smcf_singleton_ArrMap_app[smc_prod_cs_simps] = dghm_singleton_ArrMap_app"], ["", "end"], ["", "context semicategory\nbegin"], ["", "interpretation dg: digraph \\<alpha> \\<open>smc_dg \\<CC>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. digraph \\<alpha> (smc_dg \\<CC>)", "by (rule smc_digraph)"], ["", "lemmas_with [unfolded slicing_simps slicing_commute]:\n  smc_smcf_singleton_is_dghm = dg.dg_dghm_singleton_is_dghm"], ["", "end"], ["", "subsubsection\\<open>Singleton semifunctor is an isomorphism of semicategories\\<close>"], ["", "lemma (in semicategory) smc_smcf_singleton_is_iso_semifunctor:\n  assumes \"j \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"smcf_singleton j \\<CC> : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>set {j}. \\<CC>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_singleton j \\<CC> :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n          {j}.\n                                     \\<CC>)", "proof(intro is_iso_semifunctorI is_semifunctorI)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (smcf_singleton j \\<CC>)\n 3. semicategory \\<alpha> \\<CC>\n 4. semicategory \\<alpha>\n     (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}.\n         \\<CC>)\n 5. vcard (smcf_singleton j \\<CC>) = 4\\<^sub>\\<nat>\n 6. smcf_dghm (smcf_singleton j \\<CC>) :\n    smc_dg\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n          {j}.\n                                     \\<CC>)\n 7. smcf_singleton j \\<CC>\\<lparr>HomDom\\<rparr> = \\<CC>\n 8. smcf_singleton j \\<CC>\\<lparr>HomCod\\<rparr> =\n    (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}.\n        \\<CC>)\n 9. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> smcf_singleton j\n                          \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                       f\\<rparr> =\n                         smcf_singleton j\n                          \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}. \\<CC>\\<^esub>\n                         smcf_singleton j\n                          \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\n 10. smcf_dghm (smcf_singleton j \\<CC>) :\n     smc_dg\n      \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                            (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n     {j}.\n                                \\<CC>)", "show dghm_singleton: \n    \"smcf_dghm (smcf_singleton j \\<CC>) :\n      smc_dg \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> smc_dg (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>set {j}. \\<CC>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm (smcf_singleton j \\<CC>) :\n    smc_dg\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                           (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n    {j}.\n                               \\<CC>)", "by (rule smc_smcf_singleton_is_dghm[OF assms, unfolded slicing_simps])"], ["proof (state)\nthis:\n  smcf_dghm (smcf_singleton j \\<CC>) :\n  smc_dg\n   \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                         (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n  {j}.\n                             \\<CC>)\n\ngoal (9 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (smcf_singleton j \\<CC>)\n 3. semicategory \\<alpha> \\<CC>\n 4. semicategory \\<alpha>\n     (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}.\n         \\<CC>)\n 5. vcard (smcf_singleton j \\<CC>) = 4\\<^sub>\\<nat>\n 6. smcf_dghm (smcf_singleton j \\<CC>) :\n    smc_dg\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n          {j}.\n                                     \\<CC>)\n 7. smcf_singleton j \\<CC>\\<lparr>HomDom\\<rparr> = \\<CC>\n 8. smcf_singleton j \\<CC>\\<lparr>HomCod\\<rparr> =\n    (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}.\n        \\<CC>)\n 9. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> smcf_singleton j\n                          \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                       f\\<rparr> =\n                         smcf_singleton j\n                          \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}. \\<CC>\\<^esub>\n                         smcf_singleton j\n                          \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "show \"vfsequence (smcf_singleton j \\<CC>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (smcf_singleton j \\<CC>)", "unfolding smcf_singleton_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence\n     [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Obj\\<rparr>.\n         ZFC_in_HOL.set {\\<langle>j, a\\<rangle>},\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Arr\\<rparr>.\n         ZFC_in_HOL.set {\\<langle>j, f\\<rangle>},\n      \\<CC>,\n      \\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}.\n         \\<CC>]\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  vfsequence (smcf_singleton j \\<CC>)\n\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> \\<CC>\n 3. semicategory \\<alpha>\n     (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}.\n         \\<CC>)\n 4. vcard (smcf_singleton j \\<CC>) = 4\\<^sub>\\<nat>\n 5. smcf_dghm (smcf_singleton j \\<CC>) :\n    smc_dg\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n          {j}.\n                                     \\<CC>)\n 6. smcf_singleton j \\<CC>\\<lparr>HomDom\\<rparr> = \\<CC>\n 7. smcf_singleton j \\<CC>\\<lparr>HomCod\\<rparr> =\n    (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}.\n        \\<CC>)\n 8. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> smcf_singleton j\n                          \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                       f\\<rparr> =\n                         smcf_singleton j\n                          \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}. \\<CC>\\<^esub>\n                         smcf_singleton j\n                          \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "show \"vcard (smcf_singleton j \\<CC>) = 4\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (smcf_singleton j \\<CC>) = 4\\<^sub>\\<nat>", "unfolding smcf_singleton_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard\n     [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Obj\\<rparr>.\n         ZFC_in_HOL.set {\\<langle>j, a\\<rangle>},\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<CC>\\<lparr>Arr\\<rparr>.\n         ZFC_in_HOL.set {\\<langle>j, f\\<rangle>},\n      \\<CC>,\n      \\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}.\n         \\<CC>]\\<^sub>\\<circ> =\n    4\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  vcard (smcf_singleton j \\<CC>) = 4\\<^sub>\\<nat>\n\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> \\<CC>\n 3. semicategory \\<alpha>\n     (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}.\n         \\<CC>)\n 4. smcf_dghm (smcf_singleton j \\<CC>) :\n    smc_dg\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n          {j}.\n                                     \\<CC>)\n 5. smcf_singleton j \\<CC>\\<lparr>HomDom\\<rparr> = \\<CC>\n 6. smcf_singleton j \\<CC>\\<lparr>HomCod\\<rparr> =\n    (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}.\n        \\<CC>)\n 7. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> smcf_singleton j\n                          \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                       f\\<rparr> =\n                         smcf_singleton j\n                          \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}. \\<CC>\\<^esub>\n                         smcf_singleton j\n                          \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "from dghm_singleton"], ["proof (chain)\npicking this:\n  smcf_dghm (smcf_singleton j \\<CC>) :\n  smc_dg\n   \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                         (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n  {j}.\n                             \\<CC>)", "show \n    \"smcf_dghm (smcf_singleton j \\<CC>) :\n      smc_dg \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>set {j}. \\<CC>)\""], ["proof (prove)\nusing this:\n  smcf_dghm (smcf_singleton j \\<CC>) :\n  smc_dg\n   \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                         (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n  {j}.\n                             \\<CC>)\n\ngoal (1 subgoal):\n 1. smcf_dghm (smcf_singleton j \\<CC>) :\n    smc_dg\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                 (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n          {j}.\n                                     \\<CC>)", "by (simp add: is_iso_dghm.axioms(1))"], ["proof (state)\nthis:\n  smcf_dghm (smcf_singleton j \\<CC>) :\n  smc_dg\n   \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                               (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n        {j}.\n                                   \\<CC>)\n\ngoal (6 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> \\<CC>\n 3. semicategory \\<alpha>\n     (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}.\n         \\<CC>)\n 4. smcf_singleton j \\<CC>\\<lparr>HomDom\\<rparr> = \\<CC>\n 5. smcf_singleton j \\<CC>\\<lparr>HomCod\\<rparr> =\n    (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}.\n        \\<CC>)\n 6. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> smcf_singleton j\n                          \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                       f\\<rparr> =\n                         smcf_singleton j\n                          \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}. \\<CC>\\<^esub>\n                         smcf_singleton j\n                          \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "show \"smcf_singleton j \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\\<rparr> =\n    smcf_singleton j \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>set {j}. \\<CC>\\<^esub>\n    smcf_singleton j \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\"\n    if \"g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\" and \"f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\" for g b c f a"], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_singleton j\n     \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f\\<rparr> =\n    smcf_singleton j\n     \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}. \\<CC>\\<^esub>\n    smcf_singleton j \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. smcf_singleton j\n     \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f\\<rparr> =\n    smcf_singleton j\n     \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}. \\<CC>\\<^esub>\n    smcf_singleton j \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "let ?jg = \\<open>smcf_singleton j \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr>\\<close>\n      and ?jf = \\<open>smcf_singleton j \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. smcf_singleton j\n     \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f\\<rparr> =\n    smcf_singleton j\n     \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}. \\<CC>\\<^esub>\n    smcf_singleton j \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "from that"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "have [simp]: \"?jg = set {\\<langle>j, g\\<rangle>}\" \"?jf = set {\\<langle>j, f\\<rangle>}\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. smcf_singleton j \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> =\n    ZFC_in_HOL.set {\\<langle>j, g\\<rangle>} &&&\n    smcf_singleton j \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    ZFC_in_HOL.set {\\<langle>j, f\\<rangle>}", "by (simp_all add: smcf_singleton_ArrMap_app smc_cs_intros)"], ["proof (state)\nthis:\n  smcf_singleton j \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> =\n  ZFC_in_HOL.set {\\<langle>j, g\\<rangle>}\n  smcf_singleton j \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n  ZFC_in_HOL.set {\\<langle>j, f\\<rangle>}\n\ngoal (1 subgoal):\n 1. smcf_singleton j\n     \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f\\<rparr> =\n    smcf_singleton j\n     \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}. \\<CC>\\<^esub>\n    smcf_singleton j \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "from that"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "have \"g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c", "by (auto intro: smc_cs_intros)"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n\ngoal (1 subgoal):\n 1. smcf_singleton j\n     \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f\\<rparr> =\n    smcf_singleton j\n     \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}. \\<CC>\\<^esub>\n    smcf_singleton j \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "then"], ["proof (chain)\npicking this:\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c", "have \"smcf_singleton j \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\\<rparr> = set {\\<langle>j, g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\\<rangle>}\""], ["proof (prove)\nusing this:\n  g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n\ngoal (1 subgoal):\n 1. smcf_singleton j\n     \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>j, g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\\<rangle>}", "by (simp_all add: smcf_singleton_ArrMap_app smc_cs_intros)"], ["proof (state)\nthis:\n  smcf_singleton j\n   \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\nf\\<rparr> =\n  ZFC_in_HOL.set\n   {\\<langle>j, g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\\<rangle>}\n\ngoal (1 subgoal):\n 1. smcf_singleton j\n     \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f\\<rparr> =\n    smcf_singleton j\n     \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}. \\<CC>\\<^esub>\n    smcf_singleton j \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "moreover"], ["proof (state)\nthis:\n  smcf_singleton j\n   \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\nf\\<rparr> =\n  ZFC_in_HOL.set\n   {\\<langle>j, g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\\<rangle>}\n\ngoal (1 subgoal):\n 1. smcf_singleton j\n     \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f\\<rparr> =\n    smcf_singleton j\n     \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}. \\<CC>\\<^esub>\n    smcf_singleton j \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "from \n      smc_singleton_is_arrI[OF assms that(1)]\n      smc_singleton_is_arrI[OF assms that(2)]"], ["proof (chain)\npicking this:\n  ZFC_in_HOL.set\n   {\\<langle>j, g\\<rangle>} : ZFC_in_HOL.set\n                               {\\<langle>j,\n   b\\<rangle>} \\<mapsto>\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Cj\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}. \\<CC>\\<^esub> ZFC_in_HOL.set\n    {\\<langle>j, c\\<rangle>}\n  ZFC_in_HOL.set\n   {\\<langle>j, f\\<rangle>} : ZFC_in_HOL.set\n                               {\\<langle>j,\n   a\\<rangle>} \\<mapsto>\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Cj\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}. \\<CC>\\<^esub> ZFC_in_HOL.set\n    {\\<langle>j, b\\<rangle>}", "have \"?jg \\<circ>\\<^sub>A\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>set {j}. \\<CC>\\<^esub> ?jf = set {\\<langle>j, g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\\<rangle>}\""], ["proof (prove)\nusing this:\n  ZFC_in_HOL.set\n   {\\<langle>j, g\\<rangle>} : ZFC_in_HOL.set\n                               {\\<langle>j,\n   b\\<rangle>} \\<mapsto>\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Cj\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}. \\<CC>\\<^esub> ZFC_in_HOL.set\n    {\\<langle>j, c\\<rangle>}\n  ZFC_in_HOL.set\n   {\\<langle>j, f\\<rangle>} : ZFC_in_HOL.set\n                               {\\<langle>j,\n   a\\<rangle>} \\<mapsto>\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Cj\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}. \\<CC>\\<^esub> ZFC_in_HOL.set\n    {\\<langle>j, b\\<rangle>}\n\ngoal (1 subgoal):\n 1. smcf_singleton j\n     \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}. \\<CC>\\<^esub>\n    smcf_singleton j \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>j, g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\\<rangle>}", "by (simp add: smc_prod_Comp_app VLambda_vsingleton)"], ["proof (state)\nthis:\n  smcf_singleton j\n   \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}. \\<CC>\\<^esub>\n  smcf_singleton j \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n  ZFC_in_HOL.set\n   {\\<langle>j, g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\\<rangle>}\n\ngoal (1 subgoal):\n 1. smcf_singleton j\n     \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f\\<rparr> =\n    smcf_singleton j\n     \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}. \\<CC>\\<^esub>\n    smcf_singleton j \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "ultimately"], ["proof (chain)\npicking this:\n  smcf_singleton j\n   \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\nf\\<rparr> =\n  ZFC_in_HOL.set\n   {\\<langle>j, g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\\<rangle>}\n  smcf_singleton j\n   \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}. \\<CC>\\<^esub>\n  smcf_singleton j \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n  ZFC_in_HOL.set\n   {\\<langle>j, g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\\<rangle>}", "show ?thesis"], ["proof (prove)\nusing this:\n  smcf_singleton j\n   \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\nf\\<rparr> =\n  ZFC_in_HOL.set\n   {\\<langle>j, g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\\<rangle>}\n  smcf_singleton j\n   \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}. \\<CC>\\<^esub>\n  smcf_singleton j \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n  ZFC_in_HOL.set\n   {\\<langle>j, g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\\<rangle>}\n\ngoal (1 subgoal):\n 1. smcf_singleton j\n     \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f\\<rparr> =\n    smcf_singleton j\n     \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}. \\<CC>\\<^esub>\n    smcf_singleton j \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "by auto"], ["proof (state)\nthis:\n  smcf_singleton j\n   \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\nf\\<rparr> =\n  smcf_singleton j\n   \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}. \\<CC>\\<^esub>\n  smcf_singleton j \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?g : ?b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> ?c;\n   ?f : ?a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> ?b\\<rbrakk>\n  \\<Longrightarrow> smcf_singleton j\n                     \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>?g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                  ?f\\<rparr> =\n                    smcf_singleton j\n                     \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>?g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}. \\<CC>\\<^esub>\n                    smcf_singleton j\n                     \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>?f\\<rparr>\n\ngoal (5 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> \\<CC>\n 3. semicategory \\<alpha>\n     (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}.\n         \\<CC>)\n 4. smcf_singleton j \\<CC>\\<lparr>HomDom\\<rparr> = \\<CC>\n 5. smcf_singleton j \\<CC>\\<lparr>HomCod\\<rparr> =\n    (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {j}.\n        \\<CC>)", "qed \n  (\n    auto intro:\n      smc_cs_intros\n      assms \n      smc_semicategory_smc_singleton \n      smcf_singleton_components \n  )"], ["", "lemmas [smc_cs_intros] = semicategory.smc_smcf_singleton_is_iso_semifunctor"], ["", "subsection\\<open>Product of two semicategories\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties.\\<close>"], ["", "text\\<open>See Chapter II-3 in \\cite{mac_lane_categories_2010}.\\<close>"], ["", "definition smc_prod_2 :: \"V \\<Rightarrow> V \\<Rightarrow> V\" (infixr \\<open>\\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<close> 80)\n  where \"\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB> \\<equiv> smc_prod (2\\<^sub>\\<nat>) (\\<lambda>i. (i = 0 ? \\<AA> : \\<BB>))\""], ["", "text\\<open>Slicing.\\<close>"], ["", "lemma smc_dg_smc_prod_2[slicing_commute]: \n  \"smc_dg \\<AA> \\<times>\\<^sub>D\\<^sub>G smc_dg \\<BB> = smc_dg (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smc_dg \\<AA> \\<times>\\<^sub>D\\<^sub>G smc_dg \\<BB> =\n    smc_dg (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)", "unfolding smc_prod_2_def dg_prod_2_def slicing_commute[symmetric] if_distrib"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>\\<^sub>D\\<^sub>Gi\\<in>\\<^sub>\\<circ>2\\<^sub>\\<nat>.\n        if i = []\\<^sub>\\<circ> \\<Rightarrow> smc_dg \\<AA> \n         | otherwise \\<Rightarrow> smc_dg \\<BB>) =\n    (\\<Prod>\\<^sub>D\\<^sub>Gi\\<in>\\<^sub>\\<circ>2\\<^sub>\\<nat>.\n        if i = []\\<^sub>\\<circ> \\<Rightarrow> smc_dg \\<AA> \n         | otherwise \\<Rightarrow> smc_dg \\<BB>)", "by simp"], ["", "context \n  fixes \\<alpha> \\<AA> \\<BB>\n  assumes \\<AA>: \"semicategory \\<alpha> \\<AA>\" and \\<BB>: \"semicategory \\<alpha> \\<BB>\"\nbegin"], ["", "interpretation \\<AA>: semicategory \\<alpha> \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<AA>", "by (rule \\<AA>)"], ["", "interpretation \\<BB>: semicategory \\<alpha> \\<BB>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<BB>", "by (rule \\<BB>)"], ["", "lemmas_with \n  [\n    where \\<AA>=\\<open>smc_dg \\<AA>\\<close> and \\<BB>=\\<open>smc_dg \\<BB>\\<close>, \n    unfolded slicing_simps slicing_commute, \n    OF \\<AA>.smc_digraph \\<BB>.smc_digraph\n  ]:\n  smc_prod_2_ObjI = dg_prod_2_ObjI \n  and smc_prod_2_ObjI'[smc_prod_cs_intros] = dg_prod_2_ObjI'\n  and smc_prod_2_ObjE = dg_prod_2_ObjE\n  and smc_prod_2_ArrI = dg_prod_2_ArrI\n  and smc_prod_2_ArrI'[smc_prod_cs_intros] = dg_prod_2_ArrI'\n  and smc_prod_2_ArrE = dg_prod_2_ArrE\n  and smc_prod_2_is_arrI = dg_prod_2_is_arrI\n  and smc_prod_2_is_arrI'[smc_prod_cs_intros] = dg_prod_2_is_arrI'\n  and smc_prod_2_is_arrE = dg_prod_2_is_arrE\n  and smc_prod_2_Dom_vsv = dg_prod_2_Dom_vsv\n  and smc_prod_2_Dom_vdomain[smc_cs_simps] = dg_prod_2_Dom_vdomain\n  and smc_prod_2_Dom_app[smc_prod_cs_simps] = dg_prod_2_Dom_app\n  and smc_prod_2_Dom_vrange = dg_prod_2_Dom_vrange\n  and smc_prod_2_Cod_vsv = dg_prod_2_Cod_vsv\n  and smc_prod_2_Cod_vdomain[smc_cs_simps] = dg_prod_2_Cod_vdomain\n  and smc_prod_2_Cod_app[smc_prod_cs_simps] = dg_prod_2_Cod_app\n  and smc_prod_2_Cod_vrange = dg_prod_2_Cod_vrange\n  and smc_prod_2_op_smc_smc_Obj[smc_op_simps] = dg_prod_2_op_dg_dg_Obj\n  and smc_prod_2_smc_op_smc_Obj[smc_op_simps] = dg_prod_2_dg_op_dg_Obj\n  and smc_prod_2_op_smc_smc_Arr[smc_op_simps] = dg_prod_2_op_dg_dg_Arr\n  and smc_prod_2_smc_op_smc_Arr[smc_op_simps] = dg_prod_2_dg_op_dg_Arr"], ["", "end"], ["", "subsubsection\\<open>Product of two semicategories is a semicategory\\<close>"], ["", "context \n  fixes \\<alpha> \\<AA> \\<BB>\n  assumes \\<AA>: \"semicategory \\<alpha> \\<AA>\" and \\<BB>: \"semicategory \\<alpha> \\<BB>\"\nbegin"], ["", "interpretation \\<Z> \\<alpha>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Z> \\<alpha>", "by (rule semicategoryD[OF \\<AA>])"], ["", "interpretation \\<AA>: semicategory \\<alpha> \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<AA>", "by (rule \\<AA>)"], ["", "interpretation \\<BB>: semicategory \\<alpha> \\<BB>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<BB>", "by (rule \\<BB>)"], ["", "lemma finite_psemicategory_smc_prod_2: \n  \"finite_psemicategory \\<alpha> (2\\<^sub>\\<nat>) (if2 \\<AA> \\<BB>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_psemicategory \\<alpha> (2\\<^sub>\\<nat>)\n     (\\<lambda>i.\n         if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> \n          | otherwise \\<Rightarrow> \\<BB>)", "proof(intro finite_psemicategoryI psemicategory_baseI)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<Z> \\<alpha>\n 2. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> 2\\<^sub>\\<nat> \\<Longrightarrow>\n       semicategory \\<alpha>\n        (if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> \n          | otherwise \\<Rightarrow> \\<BB>)\n 3. 2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 4. vfinite (2\\<^sub>\\<nat>)", "from Axiom_of_Infinity"], ["proof (chain)\npicking this:\n  \\<omega> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show z1_in_Vset: \"2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  \\<omega> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. 2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by blast"], ["proof (state)\nthis:\n  2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (3 subgoals):\n 1. \\<Z> \\<alpha>\n 2. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> 2\\<^sub>\\<nat> \\<Longrightarrow>\n       semicategory \\<alpha>\n        (if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> \n          | otherwise \\<Rightarrow> \\<BB>)\n 3. vfinite (2\\<^sub>\\<nat>)", "show \"semicategory \\<alpha> (i = 0 ? \\<AA> : \\<BB>)\" if \"i \\<in>\\<^sub>\\<circ> 2\\<^sub>\\<nat>\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha>\n     (if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> \n       | otherwise \\<Rightarrow> \\<BB>)", "by (auto simp: smc_cs_intros)"], ["proof (state)\nthis:\n  ?i \\<in>\\<^sub>\\<circ> 2\\<^sub>\\<nat> \\<Longrightarrow>\n  semicategory \\<alpha>\n   (if ?i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> \n     | otherwise \\<Rightarrow> \\<BB>)\n\ngoal (2 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfinite (2\\<^sub>\\<nat>)", "qed auto"], ["", "interpretation finite_psemicategory \\<alpha> \\<open>2\\<^sub>\\<nat>\\<close> \\<open>if2 \\<AA> \\<BB>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_psemicategory \\<alpha> (2\\<^sub>\\<nat>)\n     (\\<lambda>i.\n         if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> \n          | otherwise \\<Rightarrow> \\<BB>)", "by (intro finite_psemicategory_smc_prod_2 \\<AA> \\<BB>)"], ["", "lemma semicategory_smc_prod_2[smc_cs_intros]: \"semicategory \\<alpha> (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)", "unfolding smc_prod_2_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha>\n     (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>2\\<^sub>\\<nat>.\n         if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> \n          | otherwise \\<Rightarrow> \\<BB>)", "by (rule psmc_semicategory_smc_prod)"], ["", "end"], ["", "subsubsection\\<open>Composition\\<close>"], ["", "context \n  fixes \\<alpha> \\<AA> \\<BB>\n  assumes \\<AA>: \"semicategory \\<alpha> \\<AA>\" and \\<BB>: \"semicategory \\<alpha> \\<BB>\"\nbegin"], ["", "interpretation \\<Z> \\<alpha>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Z> \\<alpha>", "by (rule semicategoryD[OF \\<AA>])"], ["", "interpretation finite_psemicategory \\<alpha> \\<open>2\\<^sub>\\<nat>\\<close> \\<open>if2 \\<AA> \\<BB>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_psemicategory \\<alpha> (2\\<^sub>\\<nat>)\n     (\\<lambda>i.\n         if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> \n          | otherwise \\<Rightarrow> \\<BB>)", "by (intro finite_psemicategory_smc_prod_2 \\<AA> \\<BB>)"], ["", "lemma smc_prod_2_Comp_app[smc_prod_cs_simps]:\n  assumes \"[g, g']\\<^sub>\\<circ> : [b, b']\\<^sub>\\<circ> \\<mapsto>\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub> [c, c']\\<^sub>\\<circ>\" \n    and \"[f, f']\\<^sub>\\<circ> : [a, a']\\<^sub>\\<circ> \\<mapsto>\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub> [b, b']\\<^sub>\\<circ>\"\n  shows \"[g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub> [f, f']\\<^sub>\\<circ> = [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f, g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f']\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub>\n    [f, f']\\<^sub>\\<circ> =\n    [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n     g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f']\\<^sub>\\<circ>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub>\n    [f, f']\\<^sub>\\<circ> =\n    [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n     g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f']\\<^sub>\\<circ>", "have \"[g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub> [f, f']\\<^sub>\\<circ> = \n    (\\<lambda>i\\<in>\\<^sub>\\<circ>2\\<^sub>\\<nat>. [g, g']\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>i = 0 ? \\<AA> : \\<BB>\\<^esub> [f, f']\\<^sub>\\<circ>\\<lparr>i\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub>\n    [f, f']\\<^sub>\\<circ> =\n    (\\<lambda>i\\<in>\\<^sub>\\<circ>2\\<^sub>\\<nat>.\n        [g, g']\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> | otherwise \\<Rightarrow> \\<BB>\\<^esub>\n        [f, f']\\<^sub>\\<circ>\\<lparr>i\\<rparr>)", "by \n      (\n        rule smc_prod_Comp_app[\n          OF assms[unfolded smc_prod_2_def], folded smc_prod_2_def\n          ]\n      )"], ["proof (state)\nthis:\n  [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub>\n  [f, f']\\<^sub>\\<circ> =\n  (\\<lambda>i\\<in>\\<^sub>\\<circ>2\\<^sub>\\<nat>.\n      [g, g']\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> | otherwise \\<Rightarrow> \\<BB>\\<^esub>\n      [f, f']\\<^sub>\\<circ>\\<lparr>i\\<rparr>)\n\ngoal (1 subgoal):\n 1. [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub>\n    [f, f']\\<^sub>\\<circ> =\n    [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n     g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f']\\<^sub>\\<circ>", "also"], ["proof (state)\nthis:\n  [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub>\n  [f, f']\\<^sub>\\<circ> =\n  (\\<lambda>i\\<in>\\<^sub>\\<circ>2\\<^sub>\\<nat>.\n      [g, g']\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> | otherwise \\<Rightarrow> \\<BB>\\<^esub>\n      [f, f']\\<^sub>\\<circ>\\<lparr>i\\<rparr>)\n\ngoal (1 subgoal):\n 1. [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub>\n    [f, f']\\<^sub>\\<circ> =\n    [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n     g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f']\\<^sub>\\<circ>", "have \n    \"(\\<lambda>i\\<in>\\<^sub>\\<circ>2\\<^sub>\\<nat>. [g, g']\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>i = 0 ? \\<AA> : \\<BB>\\<^esub> [f, f']\\<^sub>\\<circ>\\<lparr>i\\<rparr>) = \n      [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f, g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f']\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>i\\<in>\\<^sub>\\<circ>2\\<^sub>\\<nat>.\n        [g, g']\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> | otherwise \\<Rightarrow> \\<BB>\\<^esub>\n        [f, f']\\<^sub>\\<circ>\\<lparr>i\\<rparr>) =\n    [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n     g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f']\\<^sub>\\<circ>", "proof(rule vsv_eqI, unfold vdomain_VLambda)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (\\<lambda>i\\<in>\\<^sub>\\<circ>2\\<^sub>\\<nat>.\n            [g, g']\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> | otherwise \\<Rightarrow> \\<BB>\\<^esub>\n            [f, f']\\<^sub>\\<circ>\\<lparr>i\\<rparr>)\n 2. vsv [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n         g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f']\\<^sub>\\<circ>\n 3. 2\\<^sub>\\<nat> =\n    \\<D>\\<^sub>\\<circ>\n     [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n      g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f']\\<^sub>\\<circ>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> 2\\<^sub>\\<nat> \\<Longrightarrow>\n       (\\<lambda>i\\<in>\\<^sub>\\<circ>2\\<^sub>\\<nat>.\n           [g, g']\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> | otherwise \\<Rightarrow> \\<BB>\\<^esub>\n           [f, f']\\<^sub>\\<circ>\\<lparr>i\\<rparr>)\\<lparr>a\\<rparr> =\n       [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n        g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n        f']\\<^sub>\\<circ>\\<lparr>a\\<rparr>", "fix i"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (\\<lambda>i\\<in>\\<^sub>\\<circ>2\\<^sub>\\<nat>.\n            [g, g']\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> | otherwise \\<Rightarrow> \\<BB>\\<^esub>\n            [f, f']\\<^sub>\\<circ>\\<lparr>i\\<rparr>)\n 2. vsv [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n         g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f']\\<^sub>\\<circ>\n 3. 2\\<^sub>\\<nat> =\n    \\<D>\\<^sub>\\<circ>\n     [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n      g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f']\\<^sub>\\<circ>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> 2\\<^sub>\\<nat> \\<Longrightarrow>\n       (\\<lambda>i\\<in>\\<^sub>\\<circ>2\\<^sub>\\<nat>.\n           [g, g']\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> | otherwise \\<Rightarrow> \\<BB>\\<^esub>\n           [f, f']\\<^sub>\\<circ>\\<lparr>i\\<rparr>)\\<lparr>a\\<rparr> =\n       [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n        g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n        f']\\<^sub>\\<circ>\\<lparr>a\\<rparr>", "assume \"i \\<in>\\<^sub>\\<circ> 2\\<^sub>\\<nat>\""], ["proof (state)\nthis:\n  i \\<in>\\<^sub>\\<circ> 2\\<^sub>\\<nat>\n\ngoal (4 subgoals):\n 1. vsv (\\<lambda>i\\<in>\\<^sub>\\<circ>2\\<^sub>\\<nat>.\n            [g, g']\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> | otherwise \\<Rightarrow> \\<BB>\\<^esub>\n            [f, f']\\<^sub>\\<circ>\\<lparr>i\\<rparr>)\n 2. vsv [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n         g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f']\\<^sub>\\<circ>\n 3. 2\\<^sub>\\<nat> =\n    \\<D>\\<^sub>\\<circ>\n     [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n      g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f']\\<^sub>\\<circ>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> 2\\<^sub>\\<nat> \\<Longrightarrow>\n       (\\<lambda>i\\<in>\\<^sub>\\<circ>2\\<^sub>\\<nat>.\n           [g, g']\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> | otherwise \\<Rightarrow> \\<BB>\\<^esub>\n           [f, f']\\<^sub>\\<circ>\\<lparr>i\\<rparr>)\\<lparr>a\\<rparr> =\n       [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n        g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n        f']\\<^sub>\\<circ>\\<lparr>a\\<rparr>", "then"], ["proof (chain)\npicking this:\n  i \\<in>\\<^sub>\\<circ> 2\\<^sub>\\<nat>", "consider \\<open>i = 0\\<close> | \\<open>i = 1\\<^sub>\\<nat>\\<close>"], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> 2\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i = []\\<^sub>\\<circ> \\<Longrightarrow> thesis;\n     i = 1\\<^sub>\\<nat> \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "unfolding two"], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i = []\\<^sub>\\<circ> \\<Longrightarrow> thesis;\n     i = 1\\<^sub>\\<nat> \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>i = []\\<^sub>\\<circ> \\<Longrightarrow> ?thesis;\n   i = 1\\<^sub>\\<nat> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (4 subgoals):\n 1. vsv (\\<lambda>i\\<in>\\<^sub>\\<circ>2\\<^sub>\\<nat>.\n            [g, g']\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> | otherwise \\<Rightarrow> \\<BB>\\<^esub>\n            [f, f']\\<^sub>\\<circ>\\<lparr>i\\<rparr>)\n 2. vsv [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n         g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f']\\<^sub>\\<circ>\n 3. 2\\<^sub>\\<nat> =\n    \\<D>\\<^sub>\\<circ>\n     [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n      g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f']\\<^sub>\\<circ>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> 2\\<^sub>\\<nat> \\<Longrightarrow>\n       (\\<lambda>i\\<in>\\<^sub>\\<circ>2\\<^sub>\\<nat>.\n           [g, g']\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> | otherwise \\<Rightarrow> \\<BB>\\<^esub>\n           [f, f']\\<^sub>\\<circ>\\<lparr>i\\<rparr>)\\<lparr>a\\<rparr> =\n       [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n        g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n        f']\\<^sub>\\<circ>\\<lparr>a\\<rparr>", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>i = []\\<^sub>\\<circ> \\<Longrightarrow> ?thesis;\n   i = 1\\<^sub>\\<nat> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show \n      \"(\\<lambda>i\\<in>\\<^sub>\\<circ>2\\<^sub>\\<nat>. [g, g']\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>i = 0 ? \\<AA> : \\<BB>\\<^esub> [f, f']\\<^sub>\\<circ>\\<lparr>i\\<rparr>)\\<lparr>i\\<rparr> = \n        [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f, g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f']\\<^sub>\\<circ>\\<lparr>i\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<lbrakk>i = []\\<^sub>\\<circ> \\<Longrightarrow> ?thesis;\n   i = 1\\<^sub>\\<nat> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<lambda>i\\<in>\\<^sub>\\<circ>2\\<^sub>\\<nat>.\n        [g, g']\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> | otherwise \\<Rightarrow> \\<BB>\\<^esub>\n        [f, f']\\<^sub>\\<circ>\\<lparr>i\\<rparr>)\\<lparr>i\\<rparr> =\n    [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n     g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n     f']\\<^sub>\\<circ>\\<lparr>i\\<rparr>", "by cases (simp_all add: two nat_omega_simps)"], ["proof (state)\nthis:\n  (\\<lambda>i\\<in>\\<^sub>\\<circ>2\\<^sub>\\<nat>.\n      [g, g']\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> | otherwise \\<Rightarrow> \\<BB>\\<^esub>\n      [f, f']\\<^sub>\\<circ>\\<lparr>i\\<rparr>)\\<lparr>i\\<rparr> =\n  [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n   g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n   f']\\<^sub>\\<circ>\\<lparr>i\\<rparr>\n\ngoal (3 subgoals):\n 1. vsv (\\<lambda>i\\<in>\\<^sub>\\<circ>2\\<^sub>\\<nat>.\n            [g, g']\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> | otherwise \\<Rightarrow> \\<BB>\\<^esub>\n            [f, f']\\<^sub>\\<circ>\\<lparr>i\\<rparr>)\n 2. vsv [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n         g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f']\\<^sub>\\<circ>\n 3. 2\\<^sub>\\<nat> =\n    \\<D>\\<^sub>\\<circ>\n     [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n      g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f']\\<^sub>\\<circ>", "qed (auto simp: two nat_omega_simps)"], ["proof (state)\nthis:\n  (\\<lambda>i\\<in>\\<^sub>\\<circ>2\\<^sub>\\<nat>.\n      [g, g']\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> | otherwise \\<Rightarrow> \\<BB>\\<^esub>\n      [f, f']\\<^sub>\\<circ>\\<lparr>i\\<rparr>) =\n  [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n   g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f']\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub>\n    [f, f']\\<^sub>\\<circ> =\n    [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n     g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f']\\<^sub>\\<circ>", "finally"], ["proof (chain)\npicking this:\n  [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub>\n  [f, f']\\<^sub>\\<circ> =\n  [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n   g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f']\\<^sub>\\<circ>", "show ?thesis"], ["proof (prove)\nusing this:\n  [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub>\n  [f, f']\\<^sub>\\<circ> =\n  [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n   g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f']\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub>\n    [f, f']\\<^sub>\\<circ> =\n    [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n     g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f']\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub>\n  [f, f']\\<^sub>\\<circ> =\n  [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n   g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f']\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsubsection\\<open>Opposite product semicategory\\<close>"], ["", "context \n  fixes \\<alpha> \\<AA> \\<BB>\n  assumes \\<AA>: \"semicategory \\<alpha> \\<AA>\" and \\<BB>: \"semicategory \\<alpha> \\<BB>\"\nbegin"], ["", "interpretation \\<AA>: semicategory \\<alpha> \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<AA>", "by (rule \\<AA>)"], ["", "interpretation \\<BB>: semicategory \\<alpha> \\<BB>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<BB>", "by (rule \\<BB>)"], ["", "lemma op_smc_smc_prod_2[smc_op_simps]: \n  \"op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>) = op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C op_smc \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>) =\n    op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C op_smc \\<BB>", "proof(rule smc_dg_eqI[of \\<alpha>])"], ["proof (state)\ngoal (4 subgoals):\n 1. semicategory \\<alpha>\n     (op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>))\n 2. semicategory \\<alpha>\n     (op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C op_smc \\<BB>)\n 3. op_smc\n     (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<lparr>Comp\\<rparr> =\n    (op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n     op_smc \\<BB>)\\<lparr>Comp\\<rparr>\n 4. smc_dg (op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)) =\n    smc_dg (op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C op_smc \\<BB>)", "from \\<AA> \\<BB>"], ["proof (chain)\npicking this:\n  semicategory \\<alpha> \\<AA>\n  semicategory \\<alpha> \\<BB>", "show smc_lhs: \"semicategory \\<alpha> (op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>))\""], ["proof (prove)\nusing this:\n  semicategory \\<alpha> \\<AA>\n  semicategory \\<alpha> \\<BB>\n\ngoal (1 subgoal):\n 1. semicategory \\<alpha>\n     (op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>))", "by \n      (\n        cs_concl \n          cs_simp: smc_cs_simps smc_op_simps \n          cs_intro: smc_cs_intros smc_op_intros\n      )"], ["proof (state)\nthis:\n  semicategory \\<alpha>\n   (op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>))\n\ngoal (3 subgoals):\n 1. semicategory \\<alpha>\n     (op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C op_smc \\<BB>)\n 2. op_smc\n     (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<lparr>Comp\\<rparr> =\n    (op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n     op_smc \\<BB>)\\<lparr>Comp\\<rparr>\n 3. smc_dg (op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)) =\n    smc_dg (op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C op_smc \\<BB>)", "interpret smc_lhs: semicategory \\<alpha> \\<open>op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha>\n     (op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>))", "by (rule smc_lhs)"], ["proof (state)\ngoal (3 subgoals):\n 1. semicategory \\<alpha>\n     (op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C op_smc \\<BB>)\n 2. op_smc\n     (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<lparr>Comp\\<rparr> =\n    (op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n     op_smc \\<BB>)\\<lparr>Comp\\<rparr>\n 3. smc_dg (op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)) =\n    smc_dg (op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C op_smc \\<BB>)", "from \\<AA> \\<BB>"], ["proof (chain)\npicking this:\n  semicategory \\<alpha> \\<AA>\n  semicategory \\<alpha> \\<BB>", "show smc_rhs: \"semicategory \\<alpha> (op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C op_smc \\<BB>)\""], ["proof (prove)\nusing this:\n  semicategory \\<alpha> \\<AA>\n  semicategory \\<alpha> \\<BB>\n\ngoal (1 subgoal):\n 1. semicategory \\<alpha>\n     (op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C op_smc \\<BB>)", "by \n      (\n        cs_concl \n          cs_simp: smc_cs_simps smc_op_simps \n          cs_intro: smc_cs_intros smc_op_intros\n      )"], ["proof (state)\nthis:\n  semicategory \\<alpha>\n   (op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C op_smc \\<BB>)\n\ngoal (2 subgoals):\n 1. op_smc\n     (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<lparr>Comp\\<rparr> =\n    (op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n     op_smc \\<BB>)\\<lparr>Comp\\<rparr>\n 2. smc_dg (op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)) =\n    smc_dg (op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C op_smc \\<BB>)", "interpret smc_rhs: semicategory \\<alpha> \\<open>op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C op_smc \\<BB>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha>\n     (op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C op_smc \\<BB>)", "by (rule smc_rhs)"], ["proof (state)\ngoal (2 subgoals):\n 1. op_smc\n     (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<lparr>Comp\\<rparr> =\n    (op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n     op_smc \\<BB>)\\<lparr>Comp\\<rparr>\n 2. smc_dg (op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)) =\n    smc_dg (op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C op_smc \\<BB>)", "show \"op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<lparr>Comp\\<rparr> = (op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C op_smc \\<BB>)\\<lparr>Comp\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_smc\n     (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<lparr>Comp\\<rparr> =\n    (op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n     op_smc \\<BB>)\\<lparr>Comp\\<rparr>", "proof(rule vsv_eqI)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (op_smc\n          (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n           \\<BB>)\\<lparr>Comp\\<rparr>)\n 2. vsv ((op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n          op_smc \\<BB>)\\<lparr>Comp\\<rparr>)\n 3. \\<D>\\<^sub>\\<circ>\n     (op_smc\n       (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<lparr>Comp\\<rparr>) =\n    \\<D>\\<^sub>\\<circ>\n     ((op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n       op_smc \\<BB>)\\<lparr>Comp\\<rparr>)\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_smc\n                                (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                 \\<BB>)\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       op_smc\n        (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n         \\<BB>)\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr> =\n       (op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n        op_smc \\<BB>)\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr>", "show \"vsv (op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<lparr>Comp\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (op_smc\n          (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n           \\<BB>)\\<lparr>Comp\\<rparr>)", "unfolding op_smc_components"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (fflip\n          ((\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n            \\<BB>)\\<lparr>Comp\\<rparr>))", "by (rule fflip_vsv)"], ["proof (state)\nthis:\n  vsv (op_smc\n        (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<lparr>Comp\\<rparr>)\n\ngoal (3 subgoals):\n 1. vsv ((op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n          op_smc \\<BB>)\\<lparr>Comp\\<rparr>)\n 2. \\<D>\\<^sub>\\<circ>\n     (op_smc\n       (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<lparr>Comp\\<rparr>) =\n    \\<D>\\<^sub>\\<circ>\n     ((op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n       op_smc \\<BB>)\\<lparr>Comp\\<rparr>)\n 3. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_smc\n                                (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                 \\<BB>)\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       op_smc\n        (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n         \\<BB>)\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr> =\n       (op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n        op_smc \\<BB>)\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr>", "show \"vsv ((op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C op_smc \\<BB>)\\<lparr>Comp\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv ((op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n          op_smc \\<BB>)\\<lparr>Comp\\<rparr>)", "unfolding smc_prod_2_def smc_prod_components"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (\\<lambda>gf\\<in>\\<^sub>\\<circ>composable_arrs\n  (\\<Prod>\\<^sub>D\\<^sub>Gi\\<in>\\<^sub>\\<circ>2\\<^sub>\\<nat>.\n      if i = []\\<^sub>\\<circ> \\<Rightarrow> op_smc \\<AA> \n       | otherwise \\<Rightarrow> op_smc \\<BB>).\n            \\<lambda>i\\<in>\\<^sub>\\<circ>2\\<^sub>\\<nat>.\n               gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>if i = []\\<^sub>\\<circ> \\<Rightarrow> op_smc \\<AA> | otherwise \\<Rightarrow> op_smc \\<BB>\\<^esub>\n               gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>i\\<rparr>)", "by simp"], ["proof (state)\nthis:\n  vsv ((op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n        op_smc \\<BB>)\\<lparr>Comp\\<rparr>)\n\ngoal (2 subgoals):\n 1. \\<D>\\<^sub>\\<circ>\n     (op_smc\n       (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<lparr>Comp\\<rparr>) =\n    \\<D>\\<^sub>\\<circ>\n     ((op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n       op_smc \\<BB>)\\<lparr>Comp\\<rparr>)\n 2. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_smc\n                                (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                 \\<BB>)\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       op_smc\n        (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n         \\<BB>)\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr> =\n       (op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n        op_smc \\<BB>)\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr>", "show \"\\<D>\\<^sub>\\<circ> (op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<lparr>Comp\\<rparr>) = \\<D>\\<^sub>\\<circ> ((op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C op_smc \\<BB>)\\<lparr>Comp\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (op_smc\n       (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<lparr>Comp\\<rparr>) =\n    \\<D>\\<^sub>\\<circ>\n     ((op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n       op_smc \\<BB>)\\<lparr>Comp\\<rparr>)", "proof(intro vsubset_antisym vsubsetI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_smc\n                                (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                 \\<BB>)\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              ((op_smc\n                                 \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                op_smc \\<BB>)\\<lparr>Comp\\<rparr>)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              ((op_smc\n                                 \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                op_smc\n                                 \\<BB>)\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_smc\n                                (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                 \\<BB>)\\<lparr>Comp\\<rparr>)", "fix gg'ff'"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_smc\n                                (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                 \\<BB>)\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              ((op_smc\n                                 \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                op_smc \\<BB>)\\<lparr>Comp\\<rparr>)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              ((op_smc\n                                 \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                op_smc\n                                 \\<BB>)\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_smc\n                                (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                 \\<BB>)\\<lparr>Comp\\<rparr>)", "assume gf: \"gg'ff' \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<lparr>Comp\\<rparr>)\""], ["proof (state)\nthis:\n  gg'ff'\n  \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                       (op_smc\n                         (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                          \\<BB>)\\<lparr>Comp\\<rparr>)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_smc\n                                (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                 \\<BB>)\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              ((op_smc\n                                 \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                op_smc \\<BB>)\\<lparr>Comp\\<rparr>)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              ((op_smc\n                                 \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                op_smc\n                                 \\<BB>)\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_smc\n                                (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                 \\<BB>)\\<lparr>Comp\\<rparr>)", "then"], ["proof (chain)\npicking this:\n  gg'ff'\n  \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                       (op_smc\n                         (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                          \\<BB>)\\<lparr>Comp\\<rparr>)", "obtain gg' ff' aa' bb' cc' \n        where gg'ff'_def: \"gg'ff' = [gg', ff']\\<^sub>\\<circ>\" \n          and \"gg' : bb' \\<mapsto>\\<^bsub>op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<^esub> cc'\" \n          and \"ff' : aa' \\<mapsto>\\<^bsub>op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<^esub> bb'\""], ["proof (prove)\nusing this:\n  gg'ff'\n  \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                       (op_smc\n                         (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                          \\<BB>)\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. (\\<And>gg' ff' bb' cc' aa'.\n        \\<lbrakk>gg'ff' = [gg', ff']\\<^sub>\\<circ>;\n         gg' : bb' \\<mapsto>\\<^bsub>op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<^esub> cc';\n         ff' : aa' \\<mapsto>\\<^bsub>op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<^esub> bb'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  gg'ff' = [gg', ff']\\<^sub>\\<circ>\n  gg' : bb' \\<mapsto>\\<^bsub>op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<^esub> cc'\n  ff' : aa' \\<mapsto>\\<^bsub>op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<^esub> bb'\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_smc\n                                (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                 \\<BB>)\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              ((op_smc\n                                 \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                op_smc \\<BB>)\\<lparr>Comp\\<rparr>)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              ((op_smc\n                                 \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                op_smc\n                                 \\<BB>)\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_smc\n                                (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                 \\<BB>)\\<lparr>Comp\\<rparr>)", "then"], ["proof (chain)\npicking this:\n  gg'ff' = [gg', ff']\\<^sub>\\<circ>\n  gg' : bb' \\<mapsto>\\<^bsub>op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<^esub> cc'\n  ff' : aa' \\<mapsto>\\<^bsub>op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<^esub> bb'", "have gg': \"gg' : cc' \\<mapsto>\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub> bb'\" \n        and ff': \"ff' : bb' \\<mapsto>\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub> aa'\""], ["proof (prove)\nusing this:\n  gg'ff' = [gg', ff']\\<^sub>\\<circ>\n  gg' : bb' \\<mapsto>\\<^bsub>op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<^esub> cc'\n  ff' : aa' \\<mapsto>\\<^bsub>op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<^esub> bb'\n\ngoal (1 subgoal):\n 1. gg' : cc' \\<mapsto>\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub> bb' &&&\n    ff' : bb' \\<mapsto>\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub> aa'", "unfolding smc_op_simps"], ["proof (prove)\nusing this:\n  gg'ff' = [gg', ff']\\<^sub>\\<circ>\n  gg' : cc' \\<mapsto>\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub> bb'\n  ff' : bb' \\<mapsto>\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub> aa'\n\ngoal (1 subgoal):\n 1. gg' : cc' \\<mapsto>\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub> bb' &&&\n    ff' : bb' \\<mapsto>\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub> aa'", "by simp_all"], ["proof (state)\nthis:\n  gg' : cc' \\<mapsto>\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub> bb'\n  ff' : bb' \\<mapsto>\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub> aa'\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_smc\n                                (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                 \\<BB>)\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              ((op_smc\n                                 \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                op_smc \\<BB>)\\<lparr>Comp\\<rparr>)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              ((op_smc\n                                 \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                op_smc\n                                 \\<BB>)\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_smc\n                                (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                 \\<BB>)\\<lparr>Comp\\<rparr>)", "from gg'"], ["proof (chain)\npicking this:\n  gg' : cc' \\<mapsto>\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub> bb'", "obtain g g' b b' c c' \n        where gg'_def: \"gg' = [g, g']\\<^sub>\\<circ>\" \n          and \"cc' = [c, c']\\<^sub>\\<circ>\" \n          and \"bb' = [b, b']\\<^sub>\\<circ>\"\n          and g: \"g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\" \n          and g': \"g' : c' \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b'\""], ["proof (prove)\nusing this:\n  gg' : cc' \\<mapsto>\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub> bb'\n\ngoal (1 subgoal):\n 1. (\\<And>g g' c c' b b'.\n        \\<lbrakk>gg' = [g, g']\\<^sub>\\<circ>; cc' = [c, c']\\<^sub>\\<circ>;\n         bb' = [b, b']\\<^sub>\\<circ>;\n         g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b;\n         g' : c' \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (elim smc_prod_2_is_arrE[OF \\<AA> \\<BB>])"], ["proof (state)\nthis:\n  gg' = [g, g']\\<^sub>\\<circ>\n  cc' = [c, c']\\<^sub>\\<circ>\n  bb' = [b, b']\\<^sub>\\<circ>\n  g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\n  g' : c' \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b'\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_smc\n                                (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                 \\<BB>)\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              ((op_smc\n                                 \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                op_smc \\<BB>)\\<lparr>Comp\\<rparr>)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              ((op_smc\n                                 \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                op_smc\n                                 \\<BB>)\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_smc\n                                (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                 \\<BB>)\\<lparr>Comp\\<rparr>)", "with ff'"], ["proof (chain)\npicking this:\n  ff' : bb' \\<mapsto>\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub> aa'\n  gg' = [g, g']\\<^sub>\\<circ>\n  cc' = [c, c']\\<^sub>\\<circ>\n  bb' = [b, b']\\<^sub>\\<circ>\n  g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\n  g' : c' \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b'", "obtain f f' a a' \n        where ff'_def: \"ff' = [f, f']\\<^sub>\\<circ>\" \n          and \"bb' = [b, b']\\<^sub>\\<circ>\" \n          and \"aa' = [a, a']\\<^sub>\\<circ>\"\n          and f: \"f : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> a\" \n          and f': \"f' : b' \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a'\""], ["proof (prove)\nusing this:\n  ff' : bb' \\<mapsto>\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub> aa'\n  gg' = [g, g']\\<^sub>\\<circ>\n  cc' = [c, c']\\<^sub>\\<circ>\n  bb' = [b, b']\\<^sub>\\<circ>\n  g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\n  g' : c' \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b'\n\ngoal (1 subgoal):\n 1. (\\<And>f f' a a'.\n        \\<lbrakk>ff' = [f, f']\\<^sub>\\<circ>; bb' = [b, b']\\<^sub>\\<circ>;\n         aa' = [a, a']\\<^sub>\\<circ>;\n         f : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> a;\n         f' : b' \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim: smc_prod_2_is_arrE[OF \\<AA> \\<BB>])"], ["proof (state)\nthis:\n  ff' = [f, f']\\<^sub>\\<circ>\n  bb' = [b, b']\\<^sub>\\<circ>\n  aa' = [a, a']\\<^sub>\\<circ>\n  f : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> a\n  f' : b' \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a'\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_smc\n                                (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                 \\<BB>)\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              ((op_smc\n                                 \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                op_smc \\<BB>)\\<lparr>Comp\\<rparr>)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              ((op_smc\n                                 \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                op_smc\n                                 \\<BB>)\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_smc\n                                (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                 \\<BB>)\\<lparr>Comp\\<rparr>)", "from \\<AA> \\<BB> g g' f f'"], ["proof (chain)\npicking this:\n  semicategory \\<alpha> \\<AA>\n  semicategory \\<alpha> \\<BB>\n  g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\n  g' : c' \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b'\n  f : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> a\n  f' : b' \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a'", "show \"gg'ff' \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> ((op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C op_smc \\<BB>)\\<lparr>Comp\\<rparr>)\""], ["proof (prove)\nusing this:\n  semicategory \\<alpha> \\<AA>\n  semicategory \\<alpha> \\<BB>\n  g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\n  g' : c' \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b'\n  f : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> a\n  f' : b' \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a'\n\ngoal (1 subgoal):\n 1. gg'ff'\n    \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                         ((op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                           op_smc \\<BB>)\\<lparr>Comp\\<rparr>)", "by\n          (\n            intro smc_rhs.smc_Comp_vdomainI[OF _ _ gg'ff'_def], \n            unfold gg'_def ff'_def\n          )\n          (\n            cs_concl \n              cs_simp: smc_cs_simps smc_op_simps \n              cs_intro: smc_op_intros smc_prod_cs_intros\n          )"], ["proof (state)\nthis:\n  gg'ff'\n  \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                       ((op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                         op_smc \\<BB>)\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              ((op_smc\n                                 \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                op_smc\n                                 \\<BB>)\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_smc\n                                (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                 \\<BB>)\\<lparr>Comp\\<rparr>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              ((op_smc\n                                 \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                op_smc\n                                 \\<BB>)\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_smc\n                                (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                 \\<BB>)\\<lparr>Comp\\<rparr>)", "fix gg'ff'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              ((op_smc\n                                 \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                op_smc\n                                 \\<BB>)\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_smc\n                                (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                 \\<BB>)\\<lparr>Comp\\<rparr>)", "assume gf: \"gg'ff' \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> ((op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C op_smc \\<BB>)\\<lparr>Comp\\<rparr>)\""], ["proof (state)\nthis:\n  gg'ff'\n  \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                       ((op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                         op_smc \\<BB>)\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              ((op_smc\n                                 \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                op_smc\n                                 \\<BB>)\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_smc\n                                (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                 \\<BB>)\\<lparr>Comp\\<rparr>)", "then"], ["proof (chain)\npicking this:\n  gg'ff'\n  \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                       ((op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                         op_smc \\<BB>)\\<lparr>Comp\\<rparr>)", "obtain gg' ff' aa' bb' cc' \n        where gg'ff'_def: \"gg'ff' = [gg', ff']\\<^sub>\\<circ>\" \n          and gg': \"gg' : bb' \\<mapsto>\\<^bsub>op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C op_smc \\<BB>\\<^esub> cc'\" \n          and ff': \"ff' : aa' \\<mapsto>\\<^bsub>op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C op_smc \\<BB>\\<^esub> bb'\""], ["proof (prove)\nusing this:\n  gg'ff'\n  \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                       ((op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                         op_smc \\<BB>)\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. (\\<And>gg' ff' bb' cc' aa'.\n        \\<lbrakk>gg'ff' = [gg', ff']\\<^sub>\\<circ>;\n         gg' : bb' \\<mapsto>\\<^bsub>op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C op_smc \\<BB>\\<^esub> cc';\n         ff' : aa' \\<mapsto>\\<^bsub>op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C op_smc \\<BB>\\<^esub> bb'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  gg'ff' = [gg', ff']\\<^sub>\\<circ>\n  gg' : bb' \\<mapsto>\\<^bsub>op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C op_smc \\<BB>\\<^esub> cc'\n  ff' : aa' \\<mapsto>\\<^bsub>op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C op_smc \\<BB>\\<^esub> bb'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              ((op_smc\n                                 \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                op_smc\n                                 \\<BB>)\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_smc\n                                (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                 \\<BB>)\\<lparr>Comp\\<rparr>)", "from gg'"], ["proof (chain)\npicking this:\n  gg' : bb' \\<mapsto>\\<^bsub>op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C op_smc \\<BB>\\<^esub> cc'", "obtain g g' b b' c c' \n        where gg'_def: \"gg' = [g, g']\\<^sub>\\<circ>\" \n          and \"bb' = [b, b']\\<^sub>\\<circ>\"\n          and \"cc' = [c, c']\\<^sub>\\<circ>\" \n          and g: \"g : b \\<mapsto>\\<^bsub>op_smc \\<AA>\\<^esub> c\" \n          and g': \"g' : b' \\<mapsto>\\<^bsub>op_smc \\<BB>\\<^esub> c'\""], ["proof (prove)\nusing this:\n  gg' : bb' \\<mapsto>\\<^bsub>op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C op_smc \\<BB>\\<^esub> cc'\n\ngoal (1 subgoal):\n 1. (\\<And>g g' b b' c c'.\n        \\<lbrakk>gg' = [g, g']\\<^sub>\\<circ>; bb' = [b, b']\\<^sub>\\<circ>;\n         cc' = [c, c']\\<^sub>\\<circ>;\n         g : b \\<mapsto>\\<^bsub>op_smc \\<AA>\\<^esub> c;\n         g' : b' \\<mapsto>\\<^bsub>op_smc \\<BB>\\<^esub> c'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (elim smc_prod_2_is_arrE[OF \\<AA>.semicategory_op \\<BB>.semicategory_op])"], ["proof (state)\nthis:\n  gg' = [g, g']\\<^sub>\\<circ>\n  bb' = [b, b']\\<^sub>\\<circ>\n  cc' = [c, c']\\<^sub>\\<circ>\n  g : b \\<mapsto>\\<^bsub>op_smc \\<AA>\\<^esub> c\n  g' : b' \\<mapsto>\\<^bsub>op_smc \\<BB>\\<^esub> c'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              ((op_smc\n                                 \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                op_smc\n                                 \\<BB>)\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_smc\n                                (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                 \\<BB>)\\<lparr>Comp\\<rparr>)", "with ff'"], ["proof (chain)\npicking this:\n  ff' : aa' \\<mapsto>\\<^bsub>op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C op_smc \\<BB>\\<^esub> bb'\n  gg' = [g, g']\\<^sub>\\<circ>\n  bb' = [b, b']\\<^sub>\\<circ>\n  cc' = [c, c']\\<^sub>\\<circ>\n  g : b \\<mapsto>\\<^bsub>op_smc \\<AA>\\<^esub> c\n  g' : b' \\<mapsto>\\<^bsub>op_smc \\<BB>\\<^esub> c'", "obtain f f' a a' \n        where ff'_def: \"ff' = [f, f']\\<^sub>\\<circ>\" \n          and \"aa' = [a, a']\\<^sub>\\<circ>\"\n          and \"bb' = [b, b']\\<^sub>\\<circ>\" \n          and f: \"f : a \\<mapsto>\\<^bsub>op_smc \\<AA>\\<^esub> b\" \n          and f': \"f' : a' \\<mapsto>\\<^bsub>op_smc \\<BB>\\<^esub> b'\""], ["proof (prove)\nusing this:\n  ff' : aa' \\<mapsto>\\<^bsub>op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C op_smc \\<BB>\\<^esub> bb'\n  gg' = [g, g']\\<^sub>\\<circ>\n  bb' = [b, b']\\<^sub>\\<circ>\n  cc' = [c, c']\\<^sub>\\<circ>\n  g : b \\<mapsto>\\<^bsub>op_smc \\<AA>\\<^esub> c\n  g' : b' \\<mapsto>\\<^bsub>op_smc \\<BB>\\<^esub> c'\n\ngoal (1 subgoal):\n 1. (\\<And>f f' a a'.\n        \\<lbrakk>ff' = [f, f']\\<^sub>\\<circ>; aa' = [a, a']\\<^sub>\\<circ>;\n         bb' = [b, b']\\<^sub>\\<circ>;\n         f : a \\<mapsto>\\<^bsub>op_smc \\<AA>\\<^esub> b;\n         f' : a' \\<mapsto>\\<^bsub>op_smc \\<BB>\\<^esub> b'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by \n          (\n            auto elim: \n              smc_prod_2_is_arrE[OF \\<AA>.semicategory_op \\<BB>.semicategory_op]\n          )"], ["proof (state)\nthis:\n  ff' = [f, f']\\<^sub>\\<circ>\n  aa' = [a, a']\\<^sub>\\<circ>\n  bb' = [b, b']\\<^sub>\\<circ>\n  f : a \\<mapsto>\\<^bsub>op_smc \\<AA>\\<^esub> b\n  f' : a' \\<mapsto>\\<^bsub>op_smc \\<BB>\\<^esub> b'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              ((op_smc\n                                 \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                op_smc\n                                 \\<BB>)\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_smc\n                                (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                 \\<BB>)\\<lparr>Comp\\<rparr>)", "from \\<AA> \\<BB> g g' f f'"], ["proof (chain)\npicking this:\n  semicategory \\<alpha> \\<AA>\n  semicategory \\<alpha> \\<BB>\n  g : b \\<mapsto>\\<^bsub>op_smc \\<AA>\\<^esub> c\n  g' : b' \\<mapsto>\\<^bsub>op_smc \\<BB>\\<^esub> c'\n  f : a \\<mapsto>\\<^bsub>op_smc \\<AA>\\<^esub> b\n  f' : a' \\<mapsto>\\<^bsub>op_smc \\<BB>\\<^esub> b'", "show \"gg'ff' \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<lparr>Comp\\<rparr>)\""], ["proof (prove)\nusing this:\n  semicategory \\<alpha> \\<AA>\n  semicategory \\<alpha> \\<BB>\n  g : b \\<mapsto>\\<^bsub>op_smc \\<AA>\\<^esub> c\n  g' : b' \\<mapsto>\\<^bsub>op_smc \\<BB>\\<^esub> c'\n  f : a \\<mapsto>\\<^bsub>op_smc \\<AA>\\<^esub> b\n  f' : a' \\<mapsto>\\<^bsub>op_smc \\<BB>\\<^esub> b'\n\ngoal (1 subgoal):\n 1. gg'ff'\n    \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                         (op_smc\n                           (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                            \\<BB>)\\<lparr>Comp\\<rparr>)", "by \n          (\n            intro smc_lhs.smc_Comp_vdomainI[OF _ _ gg'ff'_def], \n            unfold gg'_def ff'_def smc_op_simps\n          )\n          (\n            cs_concl \n              cs_simp: smc_cs_simps smc_op_simps \n              cs_intro: smc_op_intros smc_prod_cs_intros\n          )"], ["proof (state)\nthis:\n  gg'ff'\n  \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                       (op_smc\n                         (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                          \\<BB>)\\<lparr>Comp\\<rparr>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   (op_smc\n     (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<lparr>Comp\\<rparr>) =\n  \\<D>\\<^sub>\\<circ>\n   ((op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n     op_smc \\<BB>)\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_smc\n                                (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                 \\<BB>)\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       op_smc\n        (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n         \\<BB>)\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr> =\n       (op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n        op_smc \\<BB>)\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr>", "fix gg'ff'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_smc\n                                (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                 \\<BB>)\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       op_smc\n        (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n         \\<BB>)\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr> =\n       (op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n        op_smc \\<BB>)\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr>", "assume \"gg'ff' \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<lparr>Comp\\<rparr>)\""], ["proof (state)\nthis:\n  gg'ff'\n  \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                       (op_smc\n                         (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                          \\<BB>)\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_smc\n                                (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                 \\<BB>)\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       op_smc\n        (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n         \\<BB>)\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr> =\n       (op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n        op_smc \\<BB>)\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr>", "then"], ["proof (chain)\npicking this:\n  gg'ff'\n  \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                       (op_smc\n                         (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                          \\<BB>)\\<lparr>Comp\\<rparr>)", "obtain gg' ff' aa' bb' cc' \n      where gg'ff'_def: \"gg'ff' = [gg', ff']\\<^sub>\\<circ>\" \n        and \"gg' : bb' \\<mapsto>\\<^bsub>op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<^esub> cc'\" \n        and \"ff' : aa' \\<mapsto>\\<^bsub>op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<^esub> bb'\""], ["proof (prove)\nusing this:\n  gg'ff'\n  \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                       (op_smc\n                         (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                          \\<BB>)\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. (\\<And>gg' ff' bb' cc' aa'.\n        \\<lbrakk>gg'ff' = [gg', ff']\\<^sub>\\<circ>;\n         gg' : bb' \\<mapsto>\\<^bsub>op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<^esub> cc';\n         ff' : aa' \\<mapsto>\\<^bsub>op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<^esub> bb'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  gg'ff' = [gg', ff']\\<^sub>\\<circ>\n  gg' : bb' \\<mapsto>\\<^bsub>op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<^esub> cc'\n  ff' : aa' \\<mapsto>\\<^bsub>op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<^esub> bb'\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_smc\n                                (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                 \\<BB>)\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       op_smc\n        (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n         \\<BB>)\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr> =\n       (op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n        op_smc \\<BB>)\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr>", "then"], ["proof (chain)\npicking this:\n  gg'ff' = [gg', ff']\\<^sub>\\<circ>\n  gg' : bb' \\<mapsto>\\<^bsub>op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<^esub> cc'\n  ff' : aa' \\<mapsto>\\<^bsub>op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<^esub> bb'", "have gg': \"gg' : cc' \\<mapsto>\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub> bb'\" \n      and ff': \"ff' : bb' \\<mapsto>\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub> aa'\""], ["proof (prove)\nusing this:\n  gg'ff' = [gg', ff']\\<^sub>\\<circ>\n  gg' : bb' \\<mapsto>\\<^bsub>op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<^esub> cc'\n  ff' : aa' \\<mapsto>\\<^bsub>op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<^esub> bb'\n\ngoal (1 subgoal):\n 1. gg' : cc' \\<mapsto>\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub> bb' &&&\n    ff' : bb' \\<mapsto>\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub> aa'", "unfolding smc_op_simps"], ["proof (prove)\nusing this:\n  gg'ff' = [gg', ff']\\<^sub>\\<circ>\n  gg' : cc' \\<mapsto>\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub> bb'\n  ff' : bb' \\<mapsto>\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub> aa'\n\ngoal (1 subgoal):\n 1. gg' : cc' \\<mapsto>\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub> bb' &&&\n    ff' : bb' \\<mapsto>\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub> aa'", "by simp_all"], ["proof (state)\nthis:\n  gg' : cc' \\<mapsto>\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub> bb'\n  ff' : bb' \\<mapsto>\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub> aa'\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_smc\n                                (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                 \\<BB>)\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       op_smc\n        (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n         \\<BB>)\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr> =\n       (op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n        op_smc \\<BB>)\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr>", "from gg'"], ["proof (chain)\npicking this:\n  gg' : cc' \\<mapsto>\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub> bb'", "obtain g g' b b' c c' \n      where gg'_def[smc_cs_simps]: \"gg' = [g, g']\\<^sub>\\<circ>\" \n        and \"cc' = [c, c']\\<^sub>\\<circ>\" \n        and \"bb' = [b, b']\\<^sub>\\<circ>\"\n        and g: \"g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\" \n        and g': \"g' : c' \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b'\""], ["proof (prove)\nusing this:\n  gg' : cc' \\<mapsto>\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub> bb'\n\ngoal (1 subgoal):\n 1. (\\<And>g g' c c' b b'.\n        \\<lbrakk>gg' = [g, g']\\<^sub>\\<circ>; cc' = [c, c']\\<^sub>\\<circ>;\n         bb' = [b, b']\\<^sub>\\<circ>;\n         g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b;\n         g' : c' \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (elim smc_prod_2_is_arrE[OF \\<AA> \\<BB>])"], ["proof (state)\nthis:\n  gg' = [g, g']\\<^sub>\\<circ>\n  cc' = [c, c']\\<^sub>\\<circ>\n  bb' = [b, b']\\<^sub>\\<circ>\n  g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\n  g' : c' \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b'\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_smc\n                                (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                 \\<BB>)\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       op_smc\n        (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n         \\<BB>)\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr> =\n       (op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n        op_smc \\<BB>)\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr>", "with ff'"], ["proof (chain)\npicking this:\n  ff' : bb' \\<mapsto>\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub> aa'\n  gg' = [g, g']\\<^sub>\\<circ>\n  cc' = [c, c']\\<^sub>\\<circ>\n  bb' = [b, b']\\<^sub>\\<circ>\n  g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\n  g' : c' \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b'", "obtain f f' a a' \n      where ff'_def[smc_cs_simps]: \"ff' = [f, f']\\<^sub>\\<circ>\" \n        and \"bb' = [b, b']\\<^sub>\\<circ>\" \n        and \"aa' = [a, a']\\<^sub>\\<circ>\"\n        and f: \"f : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> a\" \n        and f': \"f' : b' \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a'\""], ["proof (prove)\nusing this:\n  ff' : bb' \\<mapsto>\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\\<^esub> aa'\n  gg' = [g, g']\\<^sub>\\<circ>\n  cc' = [c, c']\\<^sub>\\<circ>\n  bb' = [b, b']\\<^sub>\\<circ>\n  g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\n  g' : c' \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b'\n\ngoal (1 subgoal):\n 1. (\\<And>f f' a a'.\n        \\<lbrakk>ff' = [f, f']\\<^sub>\\<circ>; bb' = [b, b']\\<^sub>\\<circ>;\n         aa' = [a, a']\\<^sub>\\<circ>;\n         f : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> a;\n         f' : b' \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim: smc_prod_2_is_arrE[OF \\<AA> \\<BB>])"], ["proof (state)\nthis:\n  ff' = [f, f']\\<^sub>\\<circ>\n  bb' = [b, b']\\<^sub>\\<circ>\n  aa' = [a, a']\\<^sub>\\<circ>\n  f : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> a\n  f' : b' \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a'\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_smc\n                                (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n                                 \\<BB>)\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       op_smc\n        (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n         \\<BB>)\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr> =\n       (op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n        op_smc \\<BB>)\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr>", "from \\<AA> \\<BB> g g' f f'"], ["proof (chain)\npicking this:\n  semicategory \\<alpha> \\<AA>\n  semicategory \\<alpha> \\<BB>\n  g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\n  g' : c' \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b'\n  f : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> a\n  f' : b' \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a'", "show \"op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<lparr>Comp\\<rparr>\\<lparr>gg'ff'\\<rparr> = \n      (op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C op_smc \\<BB>)\\<lparr>Comp\\<rparr>\\<lparr>gg'ff'\\<rparr>\""], ["proof (prove)\nusing this:\n  semicategory \\<alpha> \\<AA>\n  semicategory \\<alpha> \\<BB>\n  g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\n  g' : c' \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b'\n  f : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> a\n  f' : b' \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a'\n\ngoal (1 subgoal):\n 1. op_smc\n     (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n      \\<BB>)\\<lparr>Comp\\<rparr>\\<lparr>gg'ff'\\<rparr> =\n    (op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n     op_smc \\<BB>)\\<lparr>Comp\\<rparr>\\<lparr>gg'ff'\\<rparr>", "unfolding gg'ff'_def"], ["proof (prove)\nusing this:\n  semicategory \\<alpha> \\<AA>\n  semicategory \\<alpha> \\<BB>\n  g : c \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\n  g' : c' \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b'\n  f : b \\<mapsto>\\<^bsub>\\<AA>\\<^esub> a\n  f' : b' \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a'\n\ngoal (1 subgoal):\n 1. gg' \\<circ>\\<^sub>A\\<^bsub>op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<^esub>\n    ff' =\n    gg' \\<circ>\\<^sub>A\\<^bsub>op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C op_smc \\<BB>\\<^esub>\n    ff'", "by \n        (\n          cs_concl \n            cs_simp: smc_cs_simps smc_op_simps smc_prod_cs_simps\n            cs_intro: smc_cs_intros smc_op_intros smc_prod_cs_intros\n        )"], ["proof (state)\nthis:\n  op_smc\n   (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n    \\<BB>)\\<lparr>Comp\\<rparr>\\<lparr>gg'ff'\\<rparr> =\n  (op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n   op_smc \\<BB>)\\<lparr>Comp\\<rparr>\\<lparr>gg'ff'\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  op_smc\n   (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)\\<lparr>Comp\\<rparr> =\n  (op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n   op_smc \\<BB>)\\<lparr>Comp\\<rparr>\n\ngoal (1 subgoal):\n 1. smc_dg (op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)) =\n    smc_dg (op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C op_smc \\<BB>)", "from \\<AA> \\<BB>"], ["proof (chain)\npicking this:\n  semicategory \\<alpha> \\<AA>\n  semicategory \\<alpha> \\<BB>", "show \n    \"smc_dg (op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)) = smc_dg (op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C op_smc \\<BB>)\""], ["proof (prove)\nusing this:\n  semicategory \\<alpha> \\<AA>\n  semicategory \\<alpha> \\<BB>\n\ngoal (1 subgoal):\n 1. smc_dg (op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)) =\n    smc_dg (op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C op_smc \\<BB>)", "unfolding slicing_commute[symmetric]"], ["proof (prove)\nusing this:\n  semicategory \\<alpha> \\<AA>\n  semicategory \\<alpha> \\<BB>\n\ngoal (1 subgoal):\n 1. op_dg (smc_dg \\<AA> \\<times>\\<^sub>D\\<^sub>G smc_dg \\<BB>) =\n    op_dg (smc_dg \\<AA>) \\<times>\\<^sub>D\\<^sub>G op_dg (smc_dg \\<BB>)", "by (cs_concl cs_simp: dg_op_simps cs_intro: slicing_intros)"], ["proof (state)\nthis:\n  smc_dg (op_smc (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>)) =\n  smc_dg (op_smc \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C op_smc \\<BB>)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsection\\<open>Projections for the product of two semicategories\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "text\\<open>See Chapter II-3 in \\cite{mac_lane_categories_2010}.\\<close>"], ["", "definition smcf_proj_fst :: \"V \\<Rightarrow> V \\<Rightarrow> V\" (\\<open>\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>1\\<close>)\n  where \"\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>1 \\<AA> \\<BB> = smcf_proj (2\\<^sub>\\<nat>) (\\<lambda>i. (i = 0 ? \\<AA> : \\<BB>)) 0\""], ["", "definition smcf_proj_snd :: \"V \\<Rightarrow> V \\<Rightarrow> V\" (\\<open>\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>2\\<close>)\n  where \"\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>2 \\<AA> \\<BB> = smcf_proj (2\\<^sub>\\<nat>) (\\<lambda>i. (i = 0 ? \\<AA> : \\<BB>)) (1\\<^sub>\\<nat>)\""], ["", "text\\<open>Slicing\\<close>"], ["", "lemma smcf_dghm_smcf_proj_fst[slicing_commute]: \n  \"\\<pi>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>1 (smc_dg \\<AA>) (smc_dg \\<BB>) = smcf_dghm (\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>1 \\<AA> \\<BB>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>1 (smc_dg \\<AA>) (smc_dg \\<BB>) =\n    smcf_dghm (\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>1 \\<AA> \\<BB>)", "unfolding \n    smcf_proj_fst_def dghm_proj_fst_def slicing_commute[symmetric] if_distrib"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>D\\<^sub>G (2\\<^sub>\\<nat>)\n     (\\<lambda>i.\n         if i = []\\<^sub>\\<circ> \\<Rightarrow> smc_dg \\<AA> \n          | otherwise \\<Rightarrow> smc_dg \\<BB>)\n     []\\<^sub>\\<circ> =\n    \\<pi>\\<^sub>D\\<^sub>G (2\\<^sub>\\<nat>)\n     (\\<lambda>i.\n         if i = []\\<^sub>\\<circ> \\<Rightarrow> smc_dg \\<AA> \n          | otherwise \\<Rightarrow> smc_dg \\<BB>)\n     []\\<^sub>\\<circ>", ".."], ["", "lemma smcf_dghm_smcf_proj_snd[slicing_commute]: \n  \"\\<pi>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>2 (smc_dg \\<AA>) (smc_dg \\<BB>) = smcf_dghm (\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>2 \\<AA> \\<BB>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>2 (smc_dg \\<AA>) (smc_dg \\<BB>) =\n    smcf_dghm (\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>2 \\<AA> \\<BB>)", "unfolding \n    smcf_proj_snd_def dghm_proj_snd_def slicing_commute[symmetric] if_distrib"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>D\\<^sub>G (2\\<^sub>\\<nat>)\n     (\\<lambda>i.\n         if i = []\\<^sub>\\<circ> \\<Rightarrow> smc_dg \\<AA> \n          | otherwise \\<Rightarrow> smc_dg \\<BB>)\n     (1\\<^sub>\\<nat>) =\n    \\<pi>\\<^sub>D\\<^sub>G (2\\<^sub>\\<nat>)\n     (\\<lambda>i.\n         if i = []\\<^sub>\\<circ> \\<Rightarrow> smc_dg \\<AA> \n          | otherwise \\<Rightarrow> smc_dg \\<BB>)\n     (1\\<^sub>\\<nat>)", ".."], ["", "context \n  fixes \\<alpha> \\<AA> \\<BB>\n  assumes \\<AA>: \"semicategory \\<alpha> \\<AA>\" and \\<BB>: \"semicategory \\<alpha> \\<BB>\"\nbegin"], ["", "interpretation \\<Z> \\<alpha>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Z> \\<alpha>", "by (rule semicategoryD[OF \\<AA>])"], ["", "interpretation \\<AA>: semicategory \\<alpha> \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<AA>", "by (rule \\<AA>)"], ["", "interpretation \\<BB>: semicategory \\<alpha> \\<BB>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<BB>", "by (rule \\<BB>)"], ["", "lemmas_with \n  [\n    where \\<AA>=\\<open>smc_dg \\<AA>\\<close> and \\<BB>=\\<open>smc_dg \\<BB>\\<close>, \n    unfolded slicing_simps slicing_commute, \n    OF \\<AA>.smc_digraph \\<BB>.smc_digraph\n  ]:\n  smcf_proj_fst_ObjMap_app[smc_cs_simps] = dghm_proj_fst_ObjMap_app \n  and smcf_proj_snd_ObjMap_app[smc_cs_simps] = dghm_proj_snd_ObjMap_app\n  and smcf_proj_fst_ArrMap_app[smc_cs_simps] = dghm_proj_fst_ArrMap_app\n  and smcf_proj_snd_ArrMap_app[smc_cs_simps] = dghm_proj_snd_ArrMap_app"], ["", "end"], ["", "subsubsection\\<open>\nDomain and codomain of a projection of a product of two semicategories\n\\<close>"], ["", "lemma smcf_proj_fst_HomDom: \"\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>1 \\<AA> \\<BB>\\<lparr>HomDom\\<rparr> = \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>1 \\<AA>\n     \\<BB>\\<lparr>HomDom\\<rparr> =\n    \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>", "unfolding smcf_proj_fst_def smcf_proj_components smc_prod_2_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>2\\<^sub>\\<nat>.\n        if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> \n         | otherwise \\<Rightarrow> \\<BB>) =\n    (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>2\\<^sub>\\<nat>.\n        if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> \n         | otherwise \\<Rightarrow> \\<BB>)", ".."], ["", "lemma smcf_proj_fst_HomCod: \"\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>1 \\<AA> \\<BB>\\<lparr>HomCod\\<rparr> = \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>1 \\<AA>\n     \\<BB>\\<lparr>HomCod\\<rparr> =\n    \\<AA>", "unfolding smcf_proj_fst_def smcf_proj_components smc_prod_2_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if []\\<^sub>\\<circ> = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> \n      | otherwise \\<Rightarrow> \\<BB>) =\n    \\<AA>", "by simp"], ["", "lemma smcf_proj_snd_HomDom: \"\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>2 \\<AA> \\<BB>\\<lparr>HomDom\\<rparr> = \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>2 \\<AA>\n     \\<BB>\\<lparr>HomDom\\<rparr> =\n    \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>", "unfolding smcf_proj_snd_def smcf_proj_components smc_prod_2_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>2\\<^sub>\\<nat>.\n        if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> \n         | otherwise \\<Rightarrow> \\<BB>) =\n    (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>2\\<^sub>\\<nat>.\n        if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> \n         | otherwise \\<Rightarrow> \\<BB>)", ".."], ["", "lemma smcf_proj_snd_HomCod: \"\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>2 \\<AA> \\<BB>\\<lparr>HomCod\\<rparr> = \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>2 \\<AA>\n     \\<BB>\\<lparr>HomCod\\<rparr> =\n    \\<BB>", "unfolding smcf_proj_snd_def smcf_proj_components smc_prod_2_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if 1\\<^sub>\\<nat> = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> \n      | otherwise \\<Rightarrow> \\<BB>) =\n    \\<BB>", "by simp"], ["", "subsubsection\\<open>Projection of a product of two semicategories is a semifunctor\\<close>"], ["", "context \n  fixes \\<alpha> \\<AA> \\<BB>\n  assumes \\<AA>: \"semicategory \\<alpha> \\<AA>\" and \\<BB>: \"semicategory \\<alpha> \\<BB>\"\nbegin"], ["", "interpretation \\<Z> \\<alpha>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Z> \\<alpha>", "by (rule semicategoryD[OF \\<AA>])"], ["", "interpretation finite_psemicategory \\<alpha> \\<open>2\\<^sub>\\<nat>\\<close> \\<open>if2 \\<AA> \\<BB>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_psemicategory \\<alpha> (2\\<^sub>\\<nat>)\n     (\\<lambda>i.\n         if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> \n          | otherwise \\<Rightarrow> \\<BB>)", "by (intro finite_psemicategory_smc_prod_2 \\<AA> \\<BB>)"], ["", "lemma smcf_proj_fst_is_semifunctor: \n  assumes \"i \\<in>\\<^sub>\\<circ> I\" \n  shows \"\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>1 \\<AA> \\<BB> : \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>1 \\<AA> \\<BB> :\n    \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "by \n    (\n      rule \n        psmc_smcf_proj_is_semifunctor[\n          where i=0, simplified, folded smcf_proj_fst_def smc_prod_2_def\n          ]\n    )"], ["", "lemma smcf_proj_fst_is_semifunctor'[smc_cs_intros]: \n  assumes \"i \\<in>\\<^sub>\\<circ> I\" and \"\\<CC> = \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\" and \"\\<DD> = \\<AA>\"\n  shows \"\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>1 \\<AA> \\<BB> : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>1 \\<AA> \\<BB> :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>", "using assms(1)"], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>1 \\<AA> \\<BB> :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>", "unfolding assms(2,3)"], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>1 \\<AA> \\<BB> :\n    \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "by (rule smcf_proj_fst_is_semifunctor)"], ["", "lemma smcf_proj_snd_is_semifunctor: \n  assumes \"i \\<in>\\<^sub>\\<circ> I\" \n  shows \"\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>2 \\<AA> \\<BB> : \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>2 \\<AA> \\<BB> :\n    \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by \n    (\n      rule \n        psmc_smcf_proj_is_semifunctor[\n          where i=\\<open>1\\<^sub>\\<nat>\\<close>, simplified, folded smcf_proj_snd_def smc_prod_2_def\n          ]\n    )"], ["", "lemma smcf_proj_snd_is_semifunctor'[smc_cs_intros]: \n  assumes \"i \\<in>\\<^sub>\\<circ> I\" and \"\\<CC> = \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C \\<BB>\" and \"\\<DD> = \\<BB>\"\n  shows \"\\<pi>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>2 \\<AA> \\<BB> : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>2 \\<AA> \\<BB> :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>", "using assms(1)"], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>2 \\<AA> \\<BB> :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>", "unfolding assms(2,3)"], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>2 \\<AA> \\<BB> :\n    \\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule smcf_proj_snd_is_semifunctor)"], ["", "end"], ["", "subsection\\<open>Product of three semicategories\\<close>"], ["", "(*TODO: find a way to generalize to the product of n semicategories*)"], ["", "subsubsection\\<open>Definition and elementary properties.\\<close>"], ["", "definition smc_prod_3 :: \"V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V\"\n  (\"(_ \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 _ \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 _)\" [81, 81, 81] 80)\n  where \"\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<BB> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<CC> = (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>3\\<^sub>\\<nat>. if3 \\<AA> \\<BB> \\<CC> i)\""], ["", "text\\<open>Slicing.\\<close>"], ["", "lemma smc_dg_smc_prod_3[slicing_commute]: \n  \"smc_dg \\<AA> \\<times>\\<^sub>D\\<^sub>G\\<^sub>3 smc_dg \\<BB> \\<times>\\<^sub>D\\<^sub>G\\<^sub>3 smc_dg \\<CC> = smc_dg (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<BB> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<CC>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smc_dg\n     \\<AA> \\<times>\\<^sub>D\\<^sub>G\\<^sub>3 smc_dg\n       \\<BB> \\<times>\\<^sub>D\\<^sub>G\\<^sub>3 smc_dg \\<CC> =\n    smc_dg\n     (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<BB> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<CC>)", "unfolding smc_prod_3_def dg_prod_3_def slicing_commute[symmetric] if_distrib"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>\\<^sub>D\\<^sub>Gi\\<in>\\<^sub>\\<circ>3\\<^sub>\\<nat>.\n        if i = []\\<^sub>\\<circ> \\<Rightarrow>\n             (if i = []\\<^sub>\\<circ> \\<Rightarrow>\n                   multi_If (i = 1\\<^sub>\\<nat>) (smc_dg \\<AA>) \n               | otherwise \\<Rightarrow> multi_If (i = 1\\<^sub>\\<nat>)\n    (smc_dg \\<BB>))\n              (smc_dg \\<AA>) \n         | otherwise \\<Rightarrow> (if i = []\\<^sub>\\<circ> \\<Rightarrow>\n   multi_If (i = 1\\<^sub>\\<nat>) (smc_dg \\<AA>) \n                                     | otherwise \\<Rightarrow> multi_If\n                          (i = 1\\<^sub>\\<nat>) (smc_dg \\<BB>))\n                                    (smc_dg \\<CC>)) =\n    (\\<Prod>\\<^sub>D\\<^sub>Gi\\<in>\\<^sub>\\<circ>3\\<^sub>\\<nat>.\n        if i = []\\<^sub>\\<circ> \\<Rightarrow>\n             smc_dg\n              ((if i = []\\<^sub>\\<circ> \\<Rightarrow>\n                     multi_If (i = 1\\<^sub>\\<nat>) \\<AA> \n                 | otherwise \\<Rightarrow> multi_If (i = 1\\<^sub>\\<nat>)\n      \\<BB>)\n                \\<AA>) \n         | otherwise \\<Rightarrow> smc_dg\n                                    ((if i = []\\<^sub>\\<circ> \\<Rightarrow>\n     multi_If (i = 1\\<^sub>\\<nat>) \\<AA> \n | otherwise \\<Rightarrow> multi_If (i = 1\\<^sub>\\<nat>) \\<BB>)\n\\<CC>))", "by (simp add: if_distrib[symmetric])"], ["", "context\n  fixes \\<alpha> \\<AA> \\<BB> \\<CC>\n  assumes \\<AA>: \"semicategory \\<alpha> \\<AA>\" \n    and \\<BB>: \"semicategory \\<alpha> \\<BB>\"\n    and \\<CC>: \"semicategory \\<alpha> \\<CC>\"\nbegin"], ["", "interpretation \\<AA>: semicategory \\<alpha> \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<AA>", "by (rule \\<AA>)"], ["", "interpretation \\<BB>: semicategory \\<alpha> \\<BB>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<BB>", "by (rule \\<BB>)"], ["", "interpretation \\<CC>: semicategory \\<alpha> \\<CC>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<CC>", "by (rule \\<CC>)"], ["", "lemmas_with \n  [\n    where \\<AA>=\\<open>smc_dg \\<AA>\\<close> and \\<BB>=\\<open>smc_dg \\<BB>\\<close> and \\<CC>=\\<open>smc_dg \\<CC>\\<close>, \n    unfolded slicing_simps slicing_commute, \n    OF \\<AA>.smc_digraph \\<BB>.smc_digraph \\<CC>.smc_digraph\n  ]:\n  smc_prod_3_ObjI = dg_prod_3_ObjI \n  and smc_prod_3_ObjI'[smc_prod_cs_intros] = dg_prod_3_ObjI'\n  and smc_prod_3_ObjE = dg_prod_3_ObjE\n  and smc_prod_3_ArrI = dg_prod_3_ArrI\n  and smc_prod_3_ArrI'[smc_prod_cs_intros] = dg_prod_3_ArrI'\n  and smc_prod_3_ArrE = dg_prod_3_ArrE\n  and smc_prod_3_is_arrI = dg_prod_3_is_arrI\n  and smc_prod_3_is_arrI'[smc_prod_cs_intros] = dg_prod_3_is_arrI'\n  and smc_prod_3_is_arrE = dg_prod_3_is_arrE\n  and smc_prod_3_Dom_vsv = dg_prod_3_Dom_vsv\n  and smc_prod_3_Dom_vdomain[smc_cs_simps] = dg_prod_3_Dom_vdomain\n  and smc_prod_3_Dom_app[smc_prod_cs_simps] = dg_prod_3_Dom_app\n  and smc_prod_3_Dom_vrange = dg_prod_3_Dom_vrange\n  and smc_prod_3_Cod_vsv = dg_prod_3_Cod_vsv\n  and smc_prod_3_Cod_vdomain[smc_cs_simps] = dg_prod_3_Cod_vdomain\n  and smc_prod_3_Cod_app[smc_prod_cs_simps] = dg_prod_3_Cod_app\n  and smc_prod_3_Cod_vrange = dg_prod_3_Cod_vrange"], ["", "end"], ["", "subsubsection\\<open>Product of three semicategories is a semicategory\\<close>"], ["", "context \n  fixes \\<alpha> \\<AA> \\<BB> \\<CC>\n  assumes \\<AA>: \"semicategory \\<alpha> \\<AA>\" \n    and \\<BB>: \"semicategory \\<alpha> \\<BB>\"\n    and \\<CC>: \"semicategory \\<alpha> \\<CC>\"\nbegin"], ["", "interpretation \\<Z> \\<alpha>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Z> \\<alpha>", "by (rule semicategoryD[OF \\<AA>])"], ["", "interpretation \\<AA>: semicategory \\<alpha> \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<AA>", "by (rule \\<AA>)"], ["", "interpretation \\<BB>: semicategory \\<alpha> \\<BB>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<BB>", "by (rule \\<BB>)"], ["", "interpretation \\<CC>: semicategory \\<alpha> \\<CC>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<CC>", "by (rule \\<CC>)"], ["", "lemma finite_psemicategory_smc_prod_3: \n  \"finite_psemicategory \\<alpha> (3\\<^sub>\\<nat>) (if3 \\<AA> \\<BB> \\<CC>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_psemicategory \\<alpha> (3\\<^sub>\\<nat>)\n     (\\<lambda>i.\n         if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> \n          | i = 1\\<^sub>\\<nat> \\<Rightarrow> \\<BB> \n          | otherwise \\<Rightarrow> \\<CC>)", "proof(intro finite_psemicategoryI psemicategory_baseI)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<Z> \\<alpha>\n 2. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> 3\\<^sub>\\<nat> \\<Longrightarrow>\n       semicategory \\<alpha>\n        (if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> \n          | i = 1\\<^sub>\\<nat> \\<Rightarrow> \\<BB> \n          | otherwise \\<Rightarrow> \\<CC>)\n 3. 3\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 4. vfinite (3\\<^sub>\\<nat>)", "from Axiom_of_Infinity"], ["proof (chain)\npicking this:\n  \\<omega> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show z1_in_Vset: \"3\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  \\<omega> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. 3\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by blast"], ["proof (state)\nthis:\n  3\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (3 subgoals):\n 1. \\<Z> \\<alpha>\n 2. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> 3\\<^sub>\\<nat> \\<Longrightarrow>\n       semicategory \\<alpha>\n        (if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> \n          | i = 1\\<^sub>\\<nat> \\<Rightarrow> \\<BB> \n          | otherwise \\<Rightarrow> \\<CC>)\n 3. vfinite (3\\<^sub>\\<nat>)", "show \"semicategory \\<alpha> (if3 \\<AA> \\<BB> \\<CC> i)\" if \"i \\<in>\\<^sub>\\<circ> 3\\<^sub>\\<nat>\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha>\n     (if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> \n       | i = 1\\<^sub>\\<nat> \\<Rightarrow> \\<BB> \n       | otherwise \\<Rightarrow> \\<CC>)", "by (auto simp: smc_cs_intros)"], ["proof (state)\nthis:\n  ?i \\<in>\\<^sub>\\<circ> 3\\<^sub>\\<nat> \\<Longrightarrow>\n  semicategory \\<alpha>\n   (if ?i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> \n     | ?i = 1\\<^sub>\\<nat> \\<Rightarrow> \\<BB> \n     | otherwise \\<Rightarrow> \\<CC>)\n\ngoal (2 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfinite (3\\<^sub>\\<nat>)", "qed auto"], ["", "interpretation finite_psemicategory \\<alpha> \\<open>3\\<^sub>\\<nat>\\<close> \\<open>if3 \\<AA> \\<BB> \\<CC>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_psemicategory \\<alpha> (3\\<^sub>\\<nat>)\n     (\\<lambda>i.\n         if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> \n          | i = 1\\<^sub>\\<nat> \\<Rightarrow> \\<BB> \n          | otherwise \\<Rightarrow> \\<CC>)", "by (intro finite_psemicategory_smc_prod_3 \\<AA> \\<BB>)"], ["", "lemma semicategory_smc_prod_3[smc_cs_intros]: \n  \"semicategory \\<alpha> (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<BB> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<CC>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha>\n     (\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<BB> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<CC>)", "unfolding smc_prod_3_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha>\n     (\\<Prod>\\<^sub>S\\<^sub>M\\<^sub>Ci\\<in>\\<^sub>\\<circ>3\\<^sub>\\<nat>.\n         if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> \n          | i = 1\\<^sub>\\<nat> \\<Rightarrow> \\<BB> \n          | otherwise \\<Rightarrow> \\<CC>)", "by (rule psmc_semicategory_smc_prod)"], ["", "end"], ["", "subsubsection\\<open>Composition\\<close>"], ["", "context \n  fixes \\<alpha> \\<AA> \\<BB> \\<CC>\n  assumes \\<AA>: \"semicategory \\<alpha> \\<AA>\" \n    and \\<BB>: \"semicategory \\<alpha> \\<BB>\"\n    and \\<CC>: \"semicategory \\<alpha> \\<CC>\"\nbegin"], ["", "interpretation \\<Z> \\<alpha>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Z> \\<alpha>", "by (rule semicategoryD[OF \\<AA>])"], ["", "interpretation finite_psemicategory \\<alpha> \\<open>3\\<^sub>\\<nat>\\<close> \\<open>if3 \\<AA> \\<BB> \\<CC>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_psemicategory \\<alpha> (3\\<^sub>\\<nat>)\n     (\\<lambda>i.\n         if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> \n          | i = 1\\<^sub>\\<nat> \\<Rightarrow> \\<BB> \n          | otherwise \\<Rightarrow> \\<CC>)", "by (intro finite_psemicategory_smc_prod_3 \\<AA> \\<BB> \\<CC>)"], ["", "lemma smc_prod_3_Comp_app[smc_prod_cs_simps]:\n  assumes \"[g, g', g'']\\<^sub>\\<circ> : [b, b', b'']\\<^sub>\\<circ> \\<mapsto>\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<BB> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<CC>\\<^esub> [c, c', c'']\\<^sub>\\<circ>\" \n    and \"[f, f', f'']\\<^sub>\\<circ> : [a, a', a'']\\<^sub>\\<circ> \\<mapsto>\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<BB> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<CC>\\<^esub> [b, b', b'']\\<^sub>\\<circ>\"\n  shows \n    \"[g, g', g'']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<BB> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<CC>\\<^esub> [f, f', f'']\\<^sub>\\<circ> =\n      [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f, g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f', g'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f'']\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [g, g',\n     g'']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<BB> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<CC>\\<^esub>\n    [f, f', f'']\\<^sub>\\<circ> =\n    [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n     g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f',\n     g'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f'']\\<^sub>\\<circ>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. [g, g',\n     g'']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<BB> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<CC>\\<^esub>\n    [f, f', f'']\\<^sub>\\<circ> =\n    [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n     g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f',\n     g'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f'']\\<^sub>\\<circ>", "have \n    \"[g, g', g'']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<BB> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<CC>\\<^esub> [f, f', f'']\\<^sub>\\<circ> =\n      (\\<lambda>i\\<in>\\<^sub>\\<circ>3\\<^sub>\\<nat>. [g, g', g'']\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>if3 \\<AA> \\<BB> \\<CC> i\\<^esub> [f, f', f'']\\<^sub>\\<circ>\\<lparr>i\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [g, g',\n     g'']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<BB> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<CC>\\<^esub>\n    [f, f', f'']\\<^sub>\\<circ> =\n    (\\<lambda>i\\<in>\\<^sub>\\<circ>3\\<^sub>\\<nat>.\n        [g, g',\n         g'']\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> | i = 1\\<^sub>\\<nat> \\<Rightarrow> \\<BB> | otherwise \\<Rightarrow> \\<CC>\\<^esub>\n        [f, f', f'']\\<^sub>\\<circ>\\<lparr>i\\<rparr>)", "by \n      (\n        rule smc_prod_Comp_app[\n          OF assms[unfolded smc_prod_3_def], folded smc_prod_3_def\n          ]\n      )"], ["proof (state)\nthis:\n  [g, g',\n   g'']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<BB> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<CC>\\<^esub>\n  [f, f', f'']\\<^sub>\\<circ> =\n  (\\<lambda>i\\<in>\\<^sub>\\<circ>3\\<^sub>\\<nat>.\n      [g, g',\n       g'']\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> | i = 1\\<^sub>\\<nat> \\<Rightarrow> \\<BB> | otherwise \\<Rightarrow> \\<CC>\\<^esub>\n      [f, f', f'']\\<^sub>\\<circ>\\<lparr>i\\<rparr>)\n\ngoal (1 subgoal):\n 1. [g, g',\n     g'']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<BB> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<CC>\\<^esub>\n    [f, f', f'']\\<^sub>\\<circ> =\n    [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n     g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f',\n     g'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f'']\\<^sub>\\<circ>", "also"], ["proof (state)\nthis:\n  [g, g',\n   g'']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<BB> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<CC>\\<^esub>\n  [f, f', f'']\\<^sub>\\<circ> =\n  (\\<lambda>i\\<in>\\<^sub>\\<circ>3\\<^sub>\\<nat>.\n      [g, g',\n       g'']\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> | i = 1\\<^sub>\\<nat> \\<Rightarrow> \\<BB> | otherwise \\<Rightarrow> \\<CC>\\<^esub>\n      [f, f', f'']\\<^sub>\\<circ>\\<lparr>i\\<rparr>)\n\ngoal (1 subgoal):\n 1. [g, g',\n     g'']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<BB> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<CC>\\<^esub>\n    [f, f', f'']\\<^sub>\\<circ> =\n    [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n     g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f',\n     g'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f'']\\<^sub>\\<circ>", "have \n    \"(\\<lambda>i\\<in>\\<^sub>\\<circ>3\\<^sub>\\<nat>. [g, g', g'']\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>if3 \\<AA> \\<BB> \\<CC> i\\<^esub> [f, f', f'']\\<^sub>\\<circ>\\<lparr>i\\<rparr>) = \n      [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f, g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f', g'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f'']\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>i\\<in>\\<^sub>\\<circ>3\\<^sub>\\<nat>.\n        [g, g',\n         g'']\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> | i = 1\\<^sub>\\<nat> \\<Rightarrow> \\<BB> | otherwise \\<Rightarrow> \\<CC>\\<^esub>\n        [f, f', f'']\\<^sub>\\<circ>\\<lparr>i\\<rparr>) =\n    [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n     g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f',\n     g'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f'']\\<^sub>\\<circ>", "proof(rule vsv_eqI, unfold vdomain_VLambda)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (\\<lambda>i\\<in>\\<^sub>\\<circ>3\\<^sub>\\<nat>.\n            [g, g',\n             g'']\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> | i = 1\\<^sub>\\<nat> \\<Rightarrow> \\<BB> | otherwise \\<Rightarrow> \\<CC>\\<^esub>\n            [f, f', f'']\\<^sub>\\<circ>\\<lparr>i\\<rparr>)\n 2. vsv [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n         g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f',\n         g'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f'']\\<^sub>\\<circ>\n 3. 3\\<^sub>\\<nat> =\n    \\<D>\\<^sub>\\<circ>\n     [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n      g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f',\n      g'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f'']\\<^sub>\\<circ>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> 3\\<^sub>\\<nat> \\<Longrightarrow>\n       (\\<lambda>i\\<in>\\<^sub>\\<circ>3\\<^sub>\\<nat>.\n           [g, g',\n            g'']\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> | i = 1\\<^sub>\\<nat> \\<Rightarrow> \\<BB> | otherwise \\<Rightarrow> \\<CC>\\<^esub>\n           [f, f', f'']\\<^sub>\\<circ>\\<lparr>i\\<rparr>)\\<lparr>a\\<rparr> =\n       [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n        g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f',\n        g'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        f'']\\<^sub>\\<circ>\\<lparr>a\\<rparr>", "fix i"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (\\<lambda>i\\<in>\\<^sub>\\<circ>3\\<^sub>\\<nat>.\n            [g, g',\n             g'']\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> | i = 1\\<^sub>\\<nat> \\<Rightarrow> \\<BB> | otherwise \\<Rightarrow> \\<CC>\\<^esub>\n            [f, f', f'']\\<^sub>\\<circ>\\<lparr>i\\<rparr>)\n 2. vsv [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n         g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f',\n         g'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f'']\\<^sub>\\<circ>\n 3. 3\\<^sub>\\<nat> =\n    \\<D>\\<^sub>\\<circ>\n     [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n      g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f',\n      g'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f'']\\<^sub>\\<circ>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> 3\\<^sub>\\<nat> \\<Longrightarrow>\n       (\\<lambda>i\\<in>\\<^sub>\\<circ>3\\<^sub>\\<nat>.\n           [g, g',\n            g'']\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> | i = 1\\<^sub>\\<nat> \\<Rightarrow> \\<BB> | otherwise \\<Rightarrow> \\<CC>\\<^esub>\n           [f, f', f'']\\<^sub>\\<circ>\\<lparr>i\\<rparr>)\\<lparr>a\\<rparr> =\n       [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n        g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f',\n        g'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        f'']\\<^sub>\\<circ>\\<lparr>a\\<rparr>", "assume \"i \\<in>\\<^sub>\\<circ> 3\\<^sub>\\<nat>\""], ["proof (state)\nthis:\n  i \\<in>\\<^sub>\\<circ> 3\\<^sub>\\<nat>\n\ngoal (4 subgoals):\n 1. vsv (\\<lambda>i\\<in>\\<^sub>\\<circ>3\\<^sub>\\<nat>.\n            [g, g',\n             g'']\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> | i = 1\\<^sub>\\<nat> \\<Rightarrow> \\<BB> | otherwise \\<Rightarrow> \\<CC>\\<^esub>\n            [f, f', f'']\\<^sub>\\<circ>\\<lparr>i\\<rparr>)\n 2. vsv [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n         g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f',\n         g'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f'']\\<^sub>\\<circ>\n 3. 3\\<^sub>\\<nat> =\n    \\<D>\\<^sub>\\<circ>\n     [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n      g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f',\n      g'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f'']\\<^sub>\\<circ>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> 3\\<^sub>\\<nat> \\<Longrightarrow>\n       (\\<lambda>i\\<in>\\<^sub>\\<circ>3\\<^sub>\\<nat>.\n           [g, g',\n            g'']\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> | i = 1\\<^sub>\\<nat> \\<Rightarrow> \\<BB> | otherwise \\<Rightarrow> \\<CC>\\<^esub>\n           [f, f', f'']\\<^sub>\\<circ>\\<lparr>i\\<rparr>)\\<lparr>a\\<rparr> =\n       [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n        g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f',\n        g'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        f'']\\<^sub>\\<circ>\\<lparr>a\\<rparr>", "then"], ["proof (chain)\npicking this:\n  i \\<in>\\<^sub>\\<circ> 3\\<^sub>\\<nat>", "consider \\<open>i = 0\\<close> | \\<open>i = 1\\<^sub>\\<nat>\\<close> | \\<open>i = 2\\<^sub>\\<nat>\\<close>"], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> 3\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i = []\\<^sub>\\<circ> \\<Longrightarrow> thesis;\n     i = 1\\<^sub>\\<nat> \\<Longrightarrow> thesis;\n     i = 2\\<^sub>\\<nat> \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "unfolding three"], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                         {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i = []\\<^sub>\\<circ> \\<Longrightarrow> thesis;\n     i = 1\\<^sub>\\<nat> \\<Longrightarrow> thesis;\n     i = 2\\<^sub>\\<nat> \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>i = []\\<^sub>\\<circ> \\<Longrightarrow> ?thesis;\n   i = 1\\<^sub>\\<nat> \\<Longrightarrow> ?thesis;\n   i = 2\\<^sub>\\<nat> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (4 subgoals):\n 1. vsv (\\<lambda>i\\<in>\\<^sub>\\<circ>3\\<^sub>\\<nat>.\n            [g, g',\n             g'']\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> | i = 1\\<^sub>\\<nat> \\<Rightarrow> \\<BB> | otherwise \\<Rightarrow> \\<CC>\\<^esub>\n            [f, f', f'']\\<^sub>\\<circ>\\<lparr>i\\<rparr>)\n 2. vsv [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n         g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f',\n         g'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f'']\\<^sub>\\<circ>\n 3. 3\\<^sub>\\<nat> =\n    \\<D>\\<^sub>\\<circ>\n     [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n      g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f',\n      g'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f'']\\<^sub>\\<circ>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> 3\\<^sub>\\<nat> \\<Longrightarrow>\n       (\\<lambda>i\\<in>\\<^sub>\\<circ>3\\<^sub>\\<nat>.\n           [g, g',\n            g'']\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> | i = 1\\<^sub>\\<nat> \\<Rightarrow> \\<BB> | otherwise \\<Rightarrow> \\<CC>\\<^esub>\n           [f, f', f'']\\<^sub>\\<circ>\\<lparr>i\\<rparr>)\\<lparr>a\\<rparr> =\n       [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n        g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f',\n        g'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        f'']\\<^sub>\\<circ>\\<lparr>a\\<rparr>", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>i = []\\<^sub>\\<circ> \\<Longrightarrow> ?thesis;\n   i = 1\\<^sub>\\<nat> \\<Longrightarrow> ?thesis;\n   i = 2\\<^sub>\\<nat> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show \n      \"(\\<lambda>i\\<in>\\<^sub>\\<circ>3\\<^sub>\\<nat>. [g, g', g'']\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>if3 \\<AA> \\<BB> \\<CC> i\\<^esub> [f, f', f'']\\<^sub>\\<circ>\\<lparr>i\\<rparr>)\\<lparr>i\\<rparr> = \n        [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f, g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f', g'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f'']\\<^sub>\\<circ>\\<lparr>i\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<lbrakk>i = []\\<^sub>\\<circ> \\<Longrightarrow> ?thesis;\n   i = 1\\<^sub>\\<nat> \\<Longrightarrow> ?thesis;\n   i = 2\\<^sub>\\<nat> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<lambda>i\\<in>\\<^sub>\\<circ>3\\<^sub>\\<nat>.\n        [g, g',\n         g'']\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> | i = 1\\<^sub>\\<nat> \\<Rightarrow> \\<BB> | otherwise \\<Rightarrow> \\<CC>\\<^esub>\n        [f, f', f'']\\<^sub>\\<circ>\\<lparr>i\\<rparr>)\\<lparr>i\\<rparr> =\n    [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n     g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f',\n     g'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n     f'']\\<^sub>\\<circ>\\<lparr>i\\<rparr>", "by cases (simp_all add: three nat_omega_simps)"], ["proof (state)\nthis:\n  (\\<lambda>i\\<in>\\<^sub>\\<circ>3\\<^sub>\\<nat>.\n      [g, g',\n       g'']\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> | i = 1\\<^sub>\\<nat> \\<Rightarrow> \\<BB> | otherwise \\<Rightarrow> \\<CC>\\<^esub>\n      [f, f', f'']\\<^sub>\\<circ>\\<lparr>i\\<rparr>)\\<lparr>i\\<rparr> =\n  [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n   g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f',\n   g'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n   f'']\\<^sub>\\<circ>\\<lparr>i\\<rparr>\n\ngoal (3 subgoals):\n 1. vsv (\\<lambda>i\\<in>\\<^sub>\\<circ>3\\<^sub>\\<nat>.\n            [g, g',\n             g'']\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> | i = 1\\<^sub>\\<nat> \\<Rightarrow> \\<BB> | otherwise \\<Rightarrow> \\<CC>\\<^esub>\n            [f, f', f'']\\<^sub>\\<circ>\\<lparr>i\\<rparr>)\n 2. vsv [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n         g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f',\n         g'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f'']\\<^sub>\\<circ>\n 3. 3\\<^sub>\\<nat> =\n    \\<D>\\<^sub>\\<circ>\n     [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n      g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f',\n      g'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f'']\\<^sub>\\<circ>", "qed (auto simp: three nat_omega_simps)"], ["proof (state)\nthis:\n  (\\<lambda>i\\<in>\\<^sub>\\<circ>3\\<^sub>\\<nat>.\n      [g, g',\n       g'']\\<^sub>\\<circ>\\<lparr>i\\<rparr> \\<circ>\\<^sub>A\\<^bsub>if i = []\\<^sub>\\<circ> \\<Rightarrow> \\<AA> | i = 1\\<^sub>\\<nat> \\<Rightarrow> \\<BB> | otherwise \\<Rightarrow> \\<CC>\\<^esub>\n      [f, f', f'']\\<^sub>\\<circ>\\<lparr>i\\<rparr>) =\n  [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n   g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f',\n   g'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f'']\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. [g, g',\n     g'']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<BB> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<CC>\\<^esub>\n    [f, f', f'']\\<^sub>\\<circ> =\n    [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n     g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f',\n     g'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f'']\\<^sub>\\<circ>", "finally"], ["proof (chain)\npicking this:\n  [g, g',\n   g'']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<BB> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<CC>\\<^esub>\n  [f, f', f'']\\<^sub>\\<circ> =\n  [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n   g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f',\n   g'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f'']\\<^sub>\\<circ>", "show ?thesis"], ["proof (prove)\nusing this:\n  [g, g',\n   g'']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<BB> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<CC>\\<^esub>\n  [f, f', f'']\\<^sub>\\<circ> =\n  [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n   g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f',\n   g'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f'']\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. [g, g',\n     g'']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<BB> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<CC>\\<^esub>\n    [f, f', f'']\\<^sub>\\<circ> =\n    [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n     g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f',\n     g'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f'']\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  [g, g',\n   g'']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>\\<AA> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<BB> \\<times>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>3 \\<CC>\\<^esub>\n  [f, f', f'']\\<^sub>\\<circ> =\n  [g \\<circ>\\<^sub>A\\<^bsub>\\<AA>\\<^esub> f,\n   g' \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f',\n   g'' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f'']\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "text\\<open>\\newpage\\<close>"], ["", "end"]]}