{"file_name": "/home/qj213/afp-2021-10-22/thys/CZH_Foundations/czh_sets/CZH_Sets_ZQR.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CZH_Foundations", "problem_names": ["lemmas [vnumber_simps] =  \n  Collect_mem_eq Ball_def[symmetric] Bex_def[symmetric] vsubset_eq[symmetric]", "lemma inj_image_ord_of_nat: \"inj (image ord_of_nat)\"", "lemma vlepoll_VPow_omega_if_vreal_lepoll_real:\n  assumes \"x \\<lesssim> (UNIV::real set)\" \n  shows \"set x \\<lesssim>\\<^sub>\\<circ> VPow \\<omega>\"", "lemma inj_vreal_of_real_impl: \"inj vreal_of_real_impl\"", "lemma inj_on_inv_vreal_of_real_impl: \n  \"inj_on (inv vreal_of_real_impl) (range vreal_of_real_impl)\"", "lemma range_vreal_of_real_impl_vlepoll_VPow_omega: \n  \"set (range vreal_of_real_impl) \\<lesssim>\\<^sub>\\<circ> VPow \\<omega>\"", "lemma vreal_impl_eqpoll: \"range vreal_of_real_impl \\<approx> elts vreal_impl\" \n  and vreal_impl_vdisjnt: \"vdisjnt vreal_impl \\<omega>\"\n  and vreal_impl_in_Vset_ss_omega: \"vreal_impl \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)\"", "lemma vreal_of_real_impl'_bij_betw: \n  \"bij_betw vreal_of_real_impl' (range vreal_of_real_impl) (elts vreal_impl)\"", "lemma vreal_of_real_impl'': \"disjnt (range vreal_of_real_impl'') (elts \\<omega>)\"", "lemma inj_vreal_of_real_impl'': \"inj vreal_of_real_impl''\"", "lemma vreal_of_real_in_vrealI[intro, simp]: \"a\\<^sub>\\<real> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\"", "lemma vreal_of_real_in_vrealE[elim]:\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\"\n  obtains b where \"b\\<^sub>\\<real> = a\"", "lemma vnat_eq_vreal: \"x\\<^sub>\\<nat> = x\\<^sub>\\<real>\"", "lemma omega_vsubset_vreal: \"\\<omega> \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\"", "lemma inj_vreal_of_real: \"inj vreal_of_real\"", "lemma vreal_in_Vset_\\<omega>2: \"\\<real>\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)\"", "lemma real_of_vreal_vreal_of_real[simp]: \"real_of_vreal (a\\<^sub>\\<real>) = a\"", "lemma cr_vreal_right_total[transfer_rule]: \"right_total cr_vreal\"", "lemma cr_vreal_bi_uniqie[transfer_rule]: \"bi_unique cr_vreal\"", "lemma cr_vreal_transfer_domain_rule[transfer_domain_rule]: \n  \"Domainp cr_vreal = (\\<lambda>x. x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>)\"", "lemma vreal_transfer[transfer_rule]: \n  \"(rel_set cr_vreal) (elts \\<real>\\<^sub>\\<circ>) (UNIV::real set)\"", "lemma vreal_of_real_transfer[transfer_rule]: \"cr_vreal (vreal_of_real a) a\"", "lemma vreal_fsingleton_in_fproduct_vreal: \"[a\\<^sub>\\<real>]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times> 1\\<^sub>\\<nat>\"", "lemma vreal_fpair_in_fproduct_vreal: \"[a\\<^sub>\\<real>, b\\<^sub>\\<real>]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\"", "lemma vreal_zero: \"0\\<^sub>\\<real> = (0::V)\"", "lemma vreal_one: \"1\\<^sub>\\<real> = (1::V)\"", "lemma vreal_plus_transfer[transfer_rule]: \n  includes lifting_syntax\n  shows \"(cr_vreal ===> cr_vreal ===> cr_vreal) \n    (+\\<^sub>\\<real>) (+)\"", "lemma vreal_mult_transfer[transfer_rule]: \n  includes lifting_syntax\n  shows \"(cr_vreal ===> cr_vreal ===> cr_vreal) (*\\<^sub>\\<real>) (*)\"", "lemma vreal_uminus_transfer[transfer_rule]: \n  includes lifting_syntax\n  shows \"(cr_vreal ===> cr_vreal) (vreal_uminus_app) (uminus)\"", "lemma vreal_inverse_transfer[transfer_rule]: \n  includes lifting_syntax\n  shows \"(cr_vreal ===> cr_vreal) (vreal_inverse_app) (inverse)\"", "lemma small_vreal_le[simp]: \n  \"small \n    {[a, b]\\<^sub>\\<circ> | a b. [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat> \\<and> real_of_vreal a \\<le> real_of_vreal b}\"", "lemma vreal_le_transfer[transfer_rule]:\n  includes lifting_syntax\n  shows \"(cr_vreal ===> cr_vreal ===> (=)) vreal_le' (\\<le>)\"", "lemma small_vreal_ls[simp]: \n  \"small \n    {[a, b]\\<^sub>\\<circ> | a b. [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat> \\<and> real_of_vreal a < real_of_vreal b}\"", "lemma vreal_ls_transfer[transfer_rule]:\n  includes lifting_syntax\n  shows \"(cr_vreal ===> cr_vreal ===> (=)) vreal_ls' (<)\"", "lemma vreal_minus_transfer[transfer_rule]: \n  includes lifting_syntax\n  shows \"(cr_vreal ===> cr_vreal ===> cr_vreal) (-\\<^sub>\\<real>) (-)\"", "lemma vreal_zero_closed: \"0\\<^sub>\\<real> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\"", "lemma vreal_one_closed: \"1\\<^sub>\\<real> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\"", "lemma vreal_plus_closed: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" \n  shows \"x +\\<^sub>\\<real> y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\"", "lemma vreal_uminus_closed: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\"\n  shows \"-\\<^sub>\\<real> x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\"", "lemma vreal_mult_closed:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" \n  shows \"x *\\<^sub>\\<real> y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\"", "lemma vreal_inverse_closed: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\"\n  shows \"x\\<inverse>\\<^sub>\\<real> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\"", "lemma vreal_assoc_law_addition: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" and \"z \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" \n  shows \"(x +\\<^sub>\\<real> y) +\\<^sub>\\<real> z = x +\\<^sub>\\<real> (y +\\<^sub>\\<real> z)\"", "lemma vreal_commutative_law_addition:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" \n  shows \"x +\\<^sub>\\<real> y = y +\\<^sub>\\<real> x\"", "lemma vreal_identity_law_addition:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\"\n  shows \"x +\\<^sub>\\<real> 0\\<^sub>\\<real> = x\"", "lemma vreal_inverses_law_addition:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\"\n  shows \"x +\\<^sub>\\<real> (-\\<^sub>\\<real> x) = 0\\<^sub>\\<real>\"", "lemma vreal_assoc_law_multiplication: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" and \"z \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\"\n  shows \"(x *\\<^sub>\\<real> y) *\\<^sub>\\<real> z = x *\\<^sub>\\<real> (y *\\<^sub>\\<real> z)\"", "lemma vreal_commutative_law_multiplication:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" \n  shows \"x *\\<^sub>\\<real> y = y *\\<^sub>\\<real> x\"", "lemma vreal_identity_law_multiplication:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\"\n  shows \"x *\\<^sub>\\<real> 1\\<^sub>\\<real> = x\"", "lemma vreal_inverses_law_multiplication:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" and \"x \\<noteq> 0\\<^sub>\\<real>\" \n  shows \"x *\\<^sub>\\<real> x\\<inverse>\\<^sub>\\<real> = 1\\<^sub>\\<real>\"", "lemma vreal_distributive_law:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" and \"z \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\"\n  shows \"x *\\<^sub>\\<real> (y +\\<^sub>\\<real> z) = x *\\<^sub>\\<real> y +\\<^sub>\\<real> x *\\<^sub>\\<real> z\"", "lemma vreal_trichotomy_law:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" \"y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\"\n  shows \n    \"(x <\\<^sub>\\<real> y \\<and> ~(x = y) \\<and> ~(y <\\<^sub>\\<real> x)) \\<or> \n    (~(x <\\<^sub>\\<real> y) \\<and> x = y \\<and> ~(y <\\<^sub>\\<real> x)) \\<or>\n    (~(x <\\<^sub>\\<real> y) \\<and> ~(x = y) \\<and> y <\\<^sub>\\<real> x)\"", "lemma vreal_transitive_law:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" \n    and \"y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" \n    and \"z \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" \n    and \"x <\\<^sub>\\<real> y\" and \"y <\\<^sub>\\<real> z\"\n  shows \"x <\\<^sub>\\<real> z\"", "lemma vreal_addition_law_of_order:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" and \"z \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" and \"x <\\<^sub>\\<real> y\"\n  shows \"x +\\<^sub>\\<real> z <\\<^sub>\\<real> y +\\<^sub>\\<real> z\"", "lemma vreal_multiplication_law_of_order:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" \n    and \"y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" \n    and \"z \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" \n    and \"x <\\<^sub>\\<real> y\" \n    and \"0\\<^sub>\\<real> <\\<^sub>\\<real> z\"\n  shows \"x *\\<^sub>\\<real> z <\\<^sub>\\<real> y *\\<^sub>\\<real> z\"", "lemma vreal_non_triviality: \"0\\<^sub>\\<real> \\<noteq> 1\\<^sub>\\<real>\"", "lemma least_upper_bound_property:\n  defines \"vreal_ub S M \\<equiv> (S \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<and> M \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<and> (\\<forall>x\\<in>\\<^sub>\\<circ>S. x \\<le>\\<^sub>\\<real> M))\"\n  assumes \"A \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" and \"A \\<noteq> 0\" and \"\\<exists>M. vreal_ub A M\"\n  obtains M where \"vreal_ub A M\" and \"\\<And>T. vreal_ub A T \\<Longrightarrow> M \\<le>\\<^sub>\\<real> T\"", "lemma vreal_minus_closed: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\"\n  shows \"x -\\<^sub>\\<real> y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\"", "lemma vreal_minus_eq_plus_uminus: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\"\n  shows \"x -\\<^sub>\\<real> y = x +\\<^sub>\\<real> (-\\<^sub>\\<real> y)\"", "lemma vreal_uminus_uminus: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" \n  shows \"x = -\\<^sub>\\<real> (-\\<^sub>\\<real> x)\"", "lemma vreal_inverse_inverse: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" \n  shows \"x = (x\\<inverse>\\<^sub>\\<real>)\\<inverse>\\<^sub>\\<real>\"", "lemma vint_of_int_in_vintI[intro, simp]: \"a\\<^sub>\\<int> \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\"", "lemma vint_of_int_in_vintE[elim]:\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\"\n  obtains b where \"b\\<^sub>\\<int> = a\"", "lemma vint_vsubset_vreal: \"\\<int>\\<^sub>\\<circ> \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\"", "lemma inj_vint_of_int: \"inj vint_of_int\"", "lemma vint_in_Vset_\\<omega>2: \"\\<int>\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)\"", "lemma int_of_vint_vint_of_int[simp]: \"int_of_vint (a\\<^sub>\\<int>) = a\"", "lemma cr_vint_right_total[transfer_rule]: \"right_total cr_vint\"", "lemma cr_vint_bi_unqie[transfer_rule]: \"bi_unique cr_vint\"", "lemma cr_vint_transfer_domain_rule[transfer_domain_rule]: \n  \"Domainp cr_vint = (\\<lambda>x. x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>)\"", "lemma vint_transfer[transfer_rule]: \n  \"(rel_set cr_vint) (elts \\<int>\\<^sub>\\<circ>) (UNIV::int set)\"", "lemma vint_of_int_transfer[transfer_rule]: \"cr_vint (vint_of_int a) a\"", "lemma vint_fsingleton_in_fproduct_vint: \"[a\\<^sub>\\<int>]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 1\\<^sub>\\<nat>\"", "lemma vint_fpair_in_fproduct_vint: \"[a\\<^sub>\\<int>, b\\<^sub>\\<int>]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\"", "lemma vint_zero: \"0\\<^sub>\\<int> = (0::V)\"", "lemma vint_one: \"1\\<^sub>\\<int> = (1::V)\"", "lemma vint_plus_transfer[transfer_rule]: \n  includes lifting_syntax\n  shows \"(cr_vint ===> cr_vint ===> cr_vint) (+\\<^sub>\\<int>) (+)\"", "lemma vint_mult_transfer[transfer_rule]: \n  includes lifting_syntax\n  shows \"(cr_vint ===> cr_vint ===> cr_vint) (*\\<^sub>\\<int>) (*)\"", "lemma vint_uminus_transfer[transfer_rule]: \n  includes lifting_syntax\n  shows \"(cr_vint ===> cr_vint) (vint_uminus_app) (uminus)\"", "lemma small_vint_le[simp]: \n  \"small {[a, b]\\<^sub>\\<circ> | a b. [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat> \\<and> int_of_vint a \\<le> int_of_vint b}\"", "lemma vint_le_transfer[transfer_rule]:\n  includes lifting_syntax\n  shows \"(cr_vint ===> cr_vint ===> (=)) vint_le' (\\<le>)\"", "lemma small_vint_ls[simp]: \n  \"small {[a, b]\\<^sub>\\<circ> | a b. [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat> \\<and> int_of_vint a < int_of_vint b}\"", "lemma vint_ls_transfer[transfer_rule]:\n  includes lifting_syntax\n  shows \"(cr_vint ===> cr_vint ===> (=)) vint_ls' (<)\"", "lemma vint_minus_transfer[transfer_rule]: \n  includes lifting_syntax\n  shows \"(cr_vint ===> cr_vint ===> cr_vint) \n    (-\\<^sub>\\<int>) (-)\"", "lemma vint_zero_closed: \"0\\<^sub>\\<int> \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\"", "lemma vint_one_closed: \"1\\<^sub>\\<int> \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\"", "lemma vint_plus_closed: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\"\n  shows \"x +\\<^sub>\\<int> y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\"", "lemma vint_mult_closed:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" \n  shows \"x *\\<^sub>\\<int> y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\"", "lemma vint_uminus_closed: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\"\n  shows \"-\\<^sub>\\<int> x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\"", "lemma vint_assoc_law_addition: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" and \"z \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\"  \n  shows \"(x +\\<^sub>\\<int> y) +\\<^sub>\\<int> z = x +\\<^sub>\\<int> (y +\\<^sub>\\<int> z)\"", "lemma vint_commutative_law_addition: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\"    \n  shows \"x +\\<^sub>\\<int> y = y +\\<^sub>\\<int> x\"", "lemma vint_identity_law_addition: \n  assumes [simp]: \"x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\"\n  shows \"x +\\<^sub>\\<int> 0\\<^sub>\\<int> = x\"", "lemma vint_inverses_law_addition: \n  assumes [simp]: \"x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\"\n  shows \"x +\\<^sub>\\<int> (-\\<^sub>\\<int> x) = 0\\<^sub>\\<int>\"", "lemma vint_assoc_law_multiplication: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" and \"z \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\"  \n  shows \"(x *\\<^sub>\\<int> y) *\\<^sub>\\<int> z = x *\\<^sub>\\<int> (y *\\<^sub>\\<int> z)\"", "lemma vint_commutative_law_multiplication: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" \n  shows \"x *\\<^sub>\\<int> y = y *\\<^sub>\\<int> x\"", "lemma vint_identity_law_multiplication: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\"\n  shows \"x *\\<^sub>\\<int> 1\\<^sub>\\<int> = x\"", "lemma vint_distributive_law: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" and \"z \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\"  \n  shows \"x *\\<^sub>\\<int> (y +\\<^sub>\\<int> z) = (x *\\<^sub>\\<int> y) +\\<^sub>\\<int> (x *\\<^sub>\\<int> z)\"", "lemma vint_no_zero_divisors_law: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" and \"x *\\<^sub>\\<int> y = 0\\<^sub>\\<int>\"\n  shows \"x = 0\\<^sub>\\<int> \\<or> y = 0\\<^sub>\\<int>\"", "lemma vint_trichotomy_law:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\"\n  shows \n    \"(x <\\<^sub>\\<int> y \\<and> ~(x = y) \\<and> ~(y <\\<^sub>\\<int> x)) \\<or> \n    (~(x <\\<^sub>\\<int> y) \\<and> x = y \\<and> ~(y <\\<^sub>\\<int> x)) \\<or>\n    (~(x <\\<^sub>\\<int> y) \\<and> ~(x = y) \\<and> y <\\<^sub>\\<int> x)\"", "lemma vint_transitive_law:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" \n    and \"y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" \n    and \"z \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" \n    and \"x <\\<^sub>\\<int> y\" \n    and \"y <\\<^sub>\\<int> z\"\n  shows \"x <\\<^sub>\\<int> z\"", "lemma vint_addition_law_of_order:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" and \"z \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" and \"x <\\<^sub>\\<int> y\"\n  shows \"x +\\<^sub>\\<int> z <\\<^sub>\\<int> y +\\<^sub>\\<int> z\"", "lemma vint_multiplication_law_of_order:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" \n    and \"y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" \n    and \"z \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" \n    and \"x <\\<^sub>\\<int> y\"\n    and \"0\\<^sub>\\<int> <\\<^sub>\\<int> z\"\n  shows \"x *\\<^sub>\\<int> z <\\<^sub>\\<int> y *\\<^sub>\\<int> z\"", "lemma vint_non_triviality: \"0\\<^sub>\\<int> \\<noteq> 1\\<^sub>\\<int>\"", "lemma well_ordering_principle:\n  assumes \"A \\<subseteq>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" \n    and \"a \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" \n    and \"A \\<noteq> 0\" \n    and \"\\<And>x. x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow> a <\\<^sub>\\<int> x\"\n  obtains b where \"b \\<in>\\<^sub>\\<circ> A\" and \"\\<And>x. x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow> b \\<le>\\<^sub>\\<int> x\"", "lemma vint_minus_closed: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\"\n  shows \"x -\\<^sub>\\<int> y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\"", "lemma vint_minus_eq_plus_uminus: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\"\n  shows \"x -\\<^sub>\\<int> y = x +\\<^sub>\\<int> (-\\<^sub>\\<int> y)\"", "lemma vint_uminus_uminus: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" \n  shows \"x = -\\<^sub>\\<int> (-\\<^sub>\\<int> x)\"", "lemma vrat_of_rat_in_vratI[intro, simp]: \"a\\<^sub>\\<rat> \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\"", "lemma vrat_of_rat_in_vratE[elim]:\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\"\n  obtains b where \"b\\<^sub>\\<rat> = a\"", "lemma vrat_vsubset_vreal: \"\\<rat>\\<^sub>\\<circ> \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\"", "lemma vrat_in_Vset_\\<omega>2: \"\\<rat>\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)\"", "lemma inj_vrat_of_rat: \"inj vrat_of_rat\"", "lemma rat_of_vrat_vrat_of_rat[simp]: \"rat_of_vrat (a\\<^sub>\\<rat>) = a\"", "lemma cr_vrat_right_total[transfer_rule]: \"right_total cr_vrat\"", "lemma cr_vrat_bi_unqie[transfer_rule]: \"bi_unique cr_vrat\"", "lemma cr_vrat_transfer_domain_rule[transfer_domain_rule]: \n  \"Domainp cr_vrat = (\\<lambda>x. x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>)\"", "lemma vrat_transfer[transfer_rule]: \n  \"(rel_set cr_vrat) (elts \\<rat>\\<^sub>\\<circ>) (UNIV::rat set)\"", "lemma vrat_of_rat_transfer[transfer_rule]: \"cr_vrat (vrat_of_rat a) a\"", "lemma vrat_fsingleton_in_fproduct_vrat: \"[a\\<^sub>\\<rat>]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 1\\<^sub>\\<nat>\"", "lemma vrat_fpair_in_fproduct_vrat: \"[a\\<^sub>\\<rat>, b\\<^sub>\\<rat>]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\"", "lemma vrat_zero: \"0\\<^sub>\\<rat> = (0::V)\"", "lemma vrat_one: \"1\\<^sub>\\<rat> = (1::V)\"", "lemma vrat_plus_transfer[transfer_rule]: \n  includes lifting_syntax\n  shows \"(cr_vrat ===> cr_vrat ===> cr_vrat) (+\\<^sub>\\<rat>) (+)\"", "lemma vrat_mult_transfer[transfer_rule]: \n  includes lifting_syntax\n  shows \"(cr_vrat ===> cr_vrat ===> cr_vrat) (*\\<^sub>\\<rat>) (*)\"", "lemma vrat_uminus_transfer[transfer_rule]: \n  includes lifting_syntax\n  shows \"(cr_vrat ===> cr_vrat) (vrat_uminus_app) (uminus)\"", "lemma vrat_inverse_transfer[transfer_rule]: \n  includes lifting_syntax\n  shows \"(cr_vrat ===> cr_vrat) (vrat_inverse_app) (inverse)\"", "lemma small_vrat_le[simp]: \n  \"small {[a, b]\\<^sub>\\<circ> | a b. [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat> \\<and> rat_of_vrat a \\<le> rat_of_vrat b}\"", "lemma vrat_le_transfer[transfer_rule]:\n  includes lifting_syntax\n  shows \"(cr_vrat ===> cr_vrat ===> (=)) vrat_le' (\\<le>)\"", "lemma small_vrat_ls[simp]: \n  \"small {[a, b]\\<^sub>\\<circ> | a b. [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat> \\<and> rat_of_vrat a < rat_of_vrat b}\"", "lemma vrat_ls_transfer[transfer_rule]:\n  includes lifting_syntax\n  shows \"(cr_vrat ===> cr_vrat ===> (=)) vrat_ls' (<)\"", "lemma vrat_minus_transfer[transfer_rule]: \n  includes lifting_syntax\n  shows \"(cr_vrat ===> cr_vrat ===> cr_vrat)\n    (-\\<^sub>\\<rat>) (-)\"", "lemma vrat_zero_closed: \"0\\<^sub>\\<rat> \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\"", "lemma vrat_one_closed: \"1\\<^sub>\\<rat> \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\"", "lemma vrat_plus_closed: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" \"y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\"\n  shows \"x +\\<^sub>\\<rat> y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\"", "lemma vrat_mult_closed:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" \n  shows \"x *\\<^sub>\\<rat> y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\"", "lemma vrat_uminus_closed: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\"\n  shows \"-\\<^sub>\\<rat> x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\"", "lemma vrat_inverse_closed: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\"\n  shows \"x\\<inverse>\\<^sub>\\<rat> \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\"", "lemma vrat_assoc_law_addition: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" and \"z \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\"  \n  shows \"(x +\\<^sub>\\<rat> y) +\\<^sub>\\<rat> z = x +\\<^sub>\\<rat> (y +\\<^sub>\\<rat> z)\"", "lemma vrat_commutative_law_addition: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\"    \n  shows \"x +\\<^sub>\\<rat> y = y +\\<^sub>\\<rat> x\"", "lemma vrat_identity_law_addition: \n  assumes [simp]: \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\"\n  shows \"x +\\<^sub>\\<rat> 0\\<^sub>\\<rat> = x\"", "lemma vrat_inverses_law_addition: \n  assumes [simp]: \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\"\n  shows \"x +\\<^sub>\\<rat> (-\\<^sub>\\<rat> x) = 0\\<^sub>\\<rat>\"", "lemma vrat_assoc_law_multiplication: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" and \"z \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\"  \n  shows \"(x *\\<^sub>\\<rat> y) *\\<^sub>\\<rat> z = x *\\<^sub>\\<rat> (y *\\<^sub>\\<rat> z)\"", "lemma vrat_commutative_law_multiplication: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" \n  shows \"x *\\<^sub>\\<rat> y = y *\\<^sub>\\<rat> x\"", "lemma vrat_identity_law_multiplication: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\"\n  shows \"x *\\<^sub>\\<rat> 1\\<^sub>\\<rat> = x\"", "lemma vrat_inverses_law_multiplication:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" and \"x \\<noteq> 0\\<^sub>\\<rat>\" \n  shows \"x *\\<^sub>\\<rat> x\\<inverse>\\<^sub>\\<rat> = 1\\<^sub>\\<rat>\"", "lemma vrat_distributive_law: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" and \"z \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\"  \n  shows \"x *\\<^sub>\\<rat> (y +\\<^sub>\\<rat> z) = (x *\\<^sub>\\<rat> y) +\\<^sub>\\<rat> (x *\\<^sub>\\<rat> z)\"", "lemma vrat_trichotomy_law:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\"\n  shows \n    \"(x <\\<^sub>\\<rat> y \\<and> ~(x = y) \\<and> ~(y <\\<^sub>\\<rat> x)) \\<or> \n    (~(x <\\<^sub>\\<rat> y) \\<and> x = y \\<and> ~(y <\\<^sub>\\<rat> x)) \\<or>\n    (~(x <\\<^sub>\\<rat> y) \\<and> ~(x = y) \\<and> y <\\<^sub>\\<rat> x)\"", "lemma vrat_transitive_law:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" \n    and \"y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" \n    and \"z \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" \n    and \"x <\\<^sub>\\<rat> y\" \n    and \"y <\\<^sub>\\<rat> z\"\n  shows \"x <\\<^sub>\\<rat> z\"", "lemma vrat_addition_law_of_order:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" and \"z \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" and \"x <\\<^sub>\\<rat> y\"\n  shows \"x +\\<^sub>\\<rat> z <\\<^sub>\\<rat> y +\\<^sub>\\<rat> z\"", "lemma vrat_multiplication_law_of_order:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" \n    and \"y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" \n    and \"z \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" \n    and \"x <\\<^sub>\\<rat> y\"\n    and \"0\\<^sub>\\<rat> <\\<^sub>\\<rat> z\"\n  shows \"x *\\<^sub>\\<rat> z <\\<^sub>\\<rat> y *\\<^sub>\\<rat> z\"", "lemma vrat_non_triviality: \"0\\<^sub>\\<rat> \\<noteq> 1\\<^sub>\\<rat>\"", "lemma vrat_minus_closed: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\"\n  shows \"x -\\<^sub>\\<rat> y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\"", "lemma vrat_minus_eq_plus_uminus: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\"\n  shows \"x -\\<^sub>\\<rat> y = x +\\<^sub>\\<rat> (-\\<^sub>\\<rat> y)\"", "lemma vrat_uminus_uminus: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" \n  shows \"x = -\\<^sub>\\<rat> (-\\<^sub>\\<rat> x)\"", "lemma vrat_inverse_inverse: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" \n  shows \"x = (x\\<inverse>\\<^sub>\\<rat>)\\<inverse>\\<^sub>\\<rat>\"", "lemma inj_on_inv_vreal_of_real: \"inj_on (inv vreal_of_real) (elts \\<real>\\<^sub>\\<circ>)\"", "lemma vreal_vlepoll_VPow_omega: \"\\<real>\\<^sub>\\<circ> \\<lesssim>\\<^sub>\\<circ> VPow \\<omega>\""], "translations": [["", "lemmas [vnumber_simps] =  \n  Collect_mem_eq Ball_def[symmetric] Bex_def[symmetric] vsubset_eq[symmetric]"], ["", "text\\<open>\nSupplementary material for the evaluation of the upper bound of the\ncardinality of the continuum.\n\\<close>"], ["", "lemma inj_image_ord_of_nat: \"inj (image ord_of_nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj ((`) ord_of_nat)", "by (intro injI) (simp add: inj_image_eq_iff inj_ord_of_nat)"], ["", "lemma vlepoll_VPow_omega_if_vreal_lepoll_real:\n  assumes \"x \\<lesssim> (UNIV::real set)\" \n  shows \"set x \\<lesssim>\\<^sub>\\<circ> VPow \\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set x \\<lesssim>\\<^sub>\\<circ> VPow \\<omega>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set x \\<lesssim>\\<^sub>\\<circ> VPow \\<omega>", "note x = assms"], ["proof (state)\nthis:\n  x \\<lesssim> UNIV\n\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set x \\<lesssim>\\<^sub>\\<circ> VPow \\<omega>", "also"], ["proof (state)\nthis:\n  x \\<lesssim> UNIV\n\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set x \\<lesssim>\\<^sub>\\<circ> VPow \\<omega>", "from real_lepoll_natnat"], ["proof (chain)\npicking this:\n  UNIV \\<lesssim> Pow UNIV", "have \"\\<dots> \\<lesssim> (UNIV::nat set set)\""], ["proof (prove)\nusing this:\n  UNIV \\<lesssim> Pow UNIV\n\ngoal (1 subgoal):\n 1. UNIV \\<lesssim> UNIV", "unfolding Pow_UNIV"], ["proof (prove)\nusing this:\n  UNIV \\<lesssim> UNIV\n\ngoal (1 subgoal):\n 1. UNIV \\<lesssim> UNIV", "by simp"], ["proof (state)\nthis:\n  UNIV \\<lesssim> UNIV\n\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set x \\<lesssim>\\<^sub>\\<circ> VPow \\<omega>", "also"], ["proof (state)\nthis:\n  UNIV \\<lesssim> UNIV\n\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set x \\<lesssim>\\<^sub>\\<circ> VPow \\<omega>", "from inj_image_ord_of_nat"], ["proof (chain)\npicking this:\n  inj ((`) ord_of_nat)", "have \"\\<dots> \\<lesssim> Pow (elts \\<omega>)\""], ["proof (prove)\nusing this:\n  inj ((`) ord_of_nat)\n\ngoal (1 subgoal):\n 1. UNIV \\<lesssim> Pow (elts \\<omega>)", "unfolding lepoll_def"], ["proof (prove)\nusing this:\n  inj ((`) ord_of_nat)\n\ngoal (1 subgoal):\n 1. \\<exists>f. inj f \\<and> range f \\<subseteq> Pow (elts \\<omega>)", "by auto"], ["proof (state)\nthis:\n  UNIV \\<lesssim> Pow (elts \\<omega>)\n\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set x \\<lesssim>\\<^sub>\\<circ> VPow \\<omega>", "also"], ["proof (state)\nthis:\n  UNIV \\<lesssim> Pow (elts \\<omega>)\n\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set x \\<lesssim>\\<^sub>\\<circ> VPow \\<omega>", "from down"], ["proof (chain)\npicking this:\n  ?Y \\<subseteq> elts ?x \\<Longrightarrow> small ?Y", "have \"\\<dots> \\<lesssim> elts (VPow \\<omega>)\""], ["proof (prove)\nusing this:\n  ?Y \\<subseteq> elts ?x \\<Longrightarrow> small ?Y\n\ngoal (1 subgoal):\n 1. Pow (elts \\<omega>) \\<lesssim> elts (VPow \\<omega>)", "unfolding lepoll_def"], ["proof (prove)\nusing this:\n  ?Y \\<subseteq> elts ?x \\<Longrightarrow> small ?Y\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       inj_on f (Pow (elts \\<omega>)) \\<and>\n       f ` Pow (elts \\<omega>) \\<subseteq> elts (VPow \\<omega>)", "by (intro exI[of _ set] conjI inj_onI) (auto simp: elts_VPow)"], ["proof (state)\nthis:\n  Pow (elts \\<omega>) \\<lesssim> elts (VPow \\<omega>)\n\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set x \\<lesssim>\\<^sub>\\<circ> VPow \\<omega>", "finally"], ["proof (chain)\npicking this:\n  x \\<lesssim> elts (VPow \\<omega>)", "show \"set x \\<lesssim>\\<^sub>\\<circ> VPow \\<omega>\""], ["proof (prove)\nusing this:\n  x \\<lesssim> elts (VPow \\<omega>)\n\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set x \\<lesssim>\\<^sub>\\<circ> VPow \\<omega>", "by simp"], ["proof (state)\nthis:\n  ZFC_in_HOL.set x \\<lesssim>\\<^sub>\\<circ> VPow \\<omega>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Real numbers\\<close>"], ["", "subsubsection\\<open>Definition\\<close>"], ["", "abbreviation real :: \"nat \\<Rightarrow> real\"\n  where \"real \\<equiv> of_nat\""], ["", "definition nat_of_real :: \"real \\<Rightarrow> nat\"\n  where \"nat_of_real = inv_into UNIV real\""], ["", "definition vreal_of_real_impl :: \"real \\<Rightarrow> V\"\n  where \"vreal_of_real_impl = (SOME V_of::real\\<Rightarrow>V. inj V_of)\""], ["", "lemma inj_vreal_of_real_impl: \"inj vreal_of_real_impl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj vreal_of_real_impl", "unfolding vreal_of_real_impl_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. inj (SOME V_of. inj V_of)", "by (metis embeddable_class.ex_inj verit_sko_ex')"], ["", "lemma inj_on_inv_vreal_of_real_impl: \n  \"inj_on (inv vreal_of_real_impl) (range vreal_of_real_impl)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (inv vreal_of_real_impl) (range vreal_of_real_impl)", "by (intro inj_onI) (fastforce intro: inv_into_injective)"], ["", "lemma range_vreal_of_real_impl_vlepoll_VPow_omega: \n  \"set (range vreal_of_real_impl) \\<lesssim>\\<^sub>\\<circ> VPow \\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set (range vreal_of_real_impl) \\<lesssim>\\<^sub>\\<circ>\n    VPow \\<omega>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set (range vreal_of_real_impl) \\<lesssim>\\<^sub>\\<circ>\n    VPow \\<omega>", "have \"range vreal_of_real_impl \\<lesssim> (UNIV::real set)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range vreal_of_real_impl \\<lesssim> UNIV", "unfolding lepoll_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f.\n       inj_on f (range vreal_of_real_impl) \\<and>\n       f ` range vreal_of_real_impl \\<subseteq> UNIV", "by (auto intro: inj_on_inv_vreal_of_real_impl)"], ["proof (state)\nthis:\n  range vreal_of_real_impl \\<lesssim> UNIV\n\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set (range vreal_of_real_impl) \\<lesssim>\\<^sub>\\<circ>\n    VPow \\<omega>", "from vlepoll_VPow_omega_if_vreal_lepoll_real[OF this]"], ["proof (chain)\npicking this:\n  ZFC_in_HOL.set (range vreal_of_real_impl) \\<lesssim>\\<^sub>\\<circ>\n  VPow \\<omega>", "show ?thesis"], ["proof (prove)\nusing this:\n  ZFC_in_HOL.set (range vreal_of_real_impl) \\<lesssim>\\<^sub>\\<circ>\n  VPow \\<omega>\n\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set (range vreal_of_real_impl) \\<lesssim>\\<^sub>\\<circ>\n    VPow \\<omega>", "."], ["proof (state)\nthis:\n  ZFC_in_HOL.set (range vreal_of_real_impl) \\<lesssim>\\<^sub>\\<circ>\n  VPow \\<omega>\n\ngoal:\nNo subgoals!", "qed"], ["", "definition vreal_impl :: V\n  where \"vreal_impl =\n    (\n      SOME y. \n        range vreal_of_real_impl \\<approx> elts y \\<and>\n        vdisjnt y \\<omega> \\<and>\n        y \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)\n    )\""], ["", "lemma vreal_impl_eqpoll: \"range vreal_of_real_impl \\<approx> elts vreal_impl\" \n  and vreal_impl_vdisjnt: \"vdisjnt vreal_impl \\<omega>\"\n  and vreal_impl_in_Vset_ss_omega: \"vreal_impl \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range vreal_of_real_impl \\<approx> elts vreal_impl &&&\n    vreal_impl \\<inter>\\<^sub>\\<circ> \\<omega> = []\\<^sub>\\<circ> &&&\n    vreal_impl \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)", "proof-"], ["proof (state)\ngoal (3 subgoals):\n 1. range vreal_of_real_impl \\<approx> elts vreal_impl\n 2. vreal_impl \\<inter>\\<^sub>\\<circ> \\<omega> = []\\<^sub>\\<circ>\n 3. vreal_impl \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)", "from Ord_\\<omega>"], ["proof (chain)\npicking this:\n  Ord \\<omega>", "have VPow_in_Vset: \"VPow \\<omega> \\<in>\\<^sub>\\<circ> Vset (succ (succ \\<omega>))\""], ["proof (prove)\nusing this:\n  Ord \\<omega>\n\ngoal (1 subgoal):\n 1. VPow \\<omega>\n    \\<in>\\<^sub>\\<circ> Vset (ZFC_in_HOL.succ (ZFC_in_HOL.succ \\<omega>))", "by (intro Ord_VPow_in_Vset_succI) \n      (auto simp: less_TC_succ Ord_iff_rank VsetI)"], ["proof (state)\nthis:\n  VPow \\<omega>\n  \\<in>\\<^sub>\\<circ> Vset (ZFC_in_HOL.succ (ZFC_in_HOL.succ \\<omega>))\n\ngoal (3 subgoals):\n 1. range vreal_of_real_impl \\<approx> elts vreal_impl\n 2. vreal_impl \\<inter>\\<^sub>\\<circ> \\<omega> = []\\<^sub>\\<circ>\n 3. vreal_impl \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)", "have [simp]: \"small (range vreal_of_real_impl)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. small (range vreal_of_real_impl)", "by simp"], ["proof (state)\nthis:\n  small (range vreal_of_real_impl)\n\ngoal (3 subgoals):\n 1. range vreal_of_real_impl \\<approx> elts vreal_impl\n 2. vreal_impl \\<inter>\\<^sub>\\<circ> \\<omega> = []\\<^sub>\\<circ>\n 3. vreal_impl \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)", "then"], ["proof (chain)\npicking this:\n  small (range vreal_of_real_impl)", "obtain x where x: \"range vreal_of_real_impl = elts x\""], ["proof (prove)\nusing this:\n  small (range vreal_of_real_impl)\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        range vreal_of_real_impl = elts x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding small_iff"], ["proof (prove)\nusing this:\n  \\<exists>x. range vreal_of_real_impl = elts x\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        range vreal_of_real_impl = elts x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  range vreal_of_real_impl = elts x\n\ngoal (3 subgoals):\n 1. range vreal_of_real_impl \\<approx> elts vreal_impl\n 2. vreal_impl \\<inter>\\<^sub>\\<circ> \\<omega> = []\\<^sub>\\<circ>\n 3. vreal_impl \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)", "from range_vreal_of_real_impl_vlepoll_VPow_omega[unfolded x]"], ["proof (chain)\npicking this:\n  ZFC_in_HOL.set (elts x) \\<lesssim>\\<^sub>\\<circ> VPow \\<omega>", "have \n    \"x \\<lesssim>\\<^sub>\\<circ> VPow \\<omega>\""], ["proof (prove)\nusing this:\n  ZFC_in_HOL.set (elts x) \\<lesssim>\\<^sub>\\<circ> VPow \\<omega>\n\ngoal (1 subgoal):\n 1. x \\<lesssim>\\<^sub>\\<circ> VPow \\<omega>", "by simp"], ["proof (state)\nthis:\n  x \\<lesssim>\\<^sub>\\<circ> VPow \\<omega>\n\ngoal (3 subgoals):\n 1. range vreal_of_real_impl \\<approx> elts vreal_impl\n 2. vreal_impl \\<inter>\\<^sub>\\<circ> \\<omega> = []\\<^sub>\\<circ>\n 3. vreal_impl \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)", "then"], ["proof (chain)\npicking this:\n  x \\<lesssim>\\<^sub>\\<circ> VPow \\<omega>", "obtain f where \"v11 f\" and \"\\<D>\\<^sub>\\<circ> f = x\" and \"\\<R>\\<^sub>\\<circ> f \\<subseteq>\\<^sub>\\<circ> VPow \\<omega>\""], ["proof (prove)\nusing this:\n  x \\<lesssim>\\<^sub>\\<circ> VPow \\<omega>\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>v11 f; \\<D>\\<^sub>\\<circ> f = x;\n         \\<R>\\<^sub>\\<circ> f\n         \\<subseteq>\\<^sub>\\<circ> VPow \\<omega>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  v11 f\n  \\<D>\\<^sub>\\<circ> f = x\n  \\<R>\\<^sub>\\<circ> f \\<subseteq>\\<^sub>\\<circ> VPow \\<omega>\n\ngoal (3 subgoals):\n 1. range vreal_of_real_impl \\<approx> elts vreal_impl\n 2. vreal_impl \\<inter>\\<^sub>\\<circ> \\<omega> = []\\<^sub>\\<circ>\n 3. vreal_impl \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)", "moreover"], ["proof (state)\nthis:\n  v11 f\n  \\<D>\\<^sub>\\<circ> f = x\n  \\<R>\\<^sub>\\<circ> f \\<subseteq>\\<^sub>\\<circ> VPow \\<omega>\n\ngoal (3 subgoals):\n 1. range vreal_of_real_impl \\<approx> elts vreal_impl\n 2. vreal_impl \\<inter>\\<^sub>\\<circ> \\<omega> = []\\<^sub>\\<circ>\n 3. vreal_impl \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)", "have O\\<omega>2: \"Ord (succ (succ \\<omega>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ord (ZFC_in_HOL.succ (ZFC_in_HOL.succ \\<omega>))", "by auto"], ["proof (state)\nthis:\n  Ord (ZFC_in_HOL.succ (ZFC_in_HOL.succ \\<omega>))\n\ngoal (3 subgoals):\n 1. range vreal_of_real_impl \\<approx> elts vreal_impl\n 2. vreal_impl \\<inter>\\<^sub>\\<circ> \\<omega> = []\\<^sub>\\<circ>\n 3. vreal_impl \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)", "ultimately"], ["proof (chain)\npicking this:\n  v11 f\n  \\<D>\\<^sub>\\<circ> f = x\n  \\<R>\\<^sub>\\<circ> f \\<subseteq>\\<^sub>\\<circ> VPow \\<omega>\n  Ord (ZFC_in_HOL.succ (ZFC_in_HOL.succ \\<omega>))", "have x_Rf: \"x \\<approx>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> f\" and \"\\<R>\\<^sub>\\<circ> f \\<in>\\<^sub>\\<circ> Vset (succ (succ \\<omega>))\""], ["proof (prove)\nusing this:\n  v11 f\n  \\<D>\\<^sub>\\<circ> f = x\n  \\<R>\\<^sub>\\<circ> f \\<subseteq>\\<^sub>\\<circ> VPow \\<omega>\n  Ord (ZFC_in_HOL.succ (ZFC_in_HOL.succ \\<omega>))\n\ngoal (1 subgoal):\n 1. x \\<approx>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> f &&&\n    \\<R>\\<^sub>\\<circ> f\n    \\<in>\\<^sub>\\<circ> Vset (ZFC_in_HOL.succ (ZFC_in_HOL.succ \\<omega>))", "by (auto intro: VPow_in_Vset)"], ["proof (state)\nthis:\n  x \\<approx>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> f\n  \\<R>\\<^sub>\\<circ> f\n  \\<in>\\<^sub>\\<circ> Vset (ZFC_in_HOL.succ (ZFC_in_HOL.succ \\<omega>))\n\ngoal (3 subgoals):\n 1. range vreal_of_real_impl \\<approx> elts vreal_impl\n 2. vreal_impl \\<inter>\\<^sub>\\<circ> \\<omega> = []\\<^sub>\\<circ>\n 3. vreal_impl \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)", "then"], ["proof (chain)\npicking this:\n  x \\<approx>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> f\n  \\<R>\\<^sub>\\<circ> f\n  \\<in>\\<^sub>\\<circ> Vset (ZFC_in_HOL.succ (ZFC_in_HOL.succ \\<omega>))", "have \"\\<omega> \\<union>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> f \\<in>\\<^sub>\\<circ> Vset (succ (succ \\<omega>))\" and \"\\<R>\\<^sub>\\<circ> f \\<subseteq>\\<^sub>\\<circ> \\<omega> \\<union>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> f\""], ["proof (prove)\nusing this:\n  x \\<approx>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> f\n  \\<R>\\<^sub>\\<circ> f\n  \\<in>\\<^sub>\\<circ> Vset (ZFC_in_HOL.succ (ZFC_in_HOL.succ \\<omega>))\n\ngoal (1 subgoal):\n 1. \\<omega> \\<union>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> f\n    \\<in>\\<^sub>\\<circ> Vset\n                         (ZFC_in_HOL.succ (ZFC_in_HOL.succ \\<omega>)) &&&\n    \\<R>\\<^sub>\\<circ> f\n    \\<subseteq>\\<^sub>\\<circ> \\<omega> \\<union>\\<^sub>\\<circ>\n                              \\<R>\\<^sub>\\<circ> f", "by (auto simp: VPow_in_Vset VPow_in_Vset_revD vunion_in_VsetI)"], ["proof (state)\nthis:\n  \\<omega> \\<union>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> f\n  \\<in>\\<^sub>\\<circ> Vset (ZFC_in_HOL.succ (ZFC_in_HOL.succ \\<omega>))\n  \\<R>\\<^sub>\\<circ> f\n  \\<subseteq>\\<^sub>\\<circ> \\<omega> \\<union>\\<^sub>\\<circ>\n                            \\<R>\\<^sub>\\<circ> f\n\ngoal (3 subgoals):\n 1. range vreal_of_real_impl \\<approx> elts vreal_impl\n 2. vreal_impl \\<inter>\\<^sub>\\<circ> \\<omega> = []\\<^sub>\\<circ>\n 3. vreal_impl \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)", "from Ord_ex_eqpoll_vdisjnt[OF O\\<omega>2 this(2,1)]"], ["proof (chain)\npicking this:\n  (\\<And>Z.\n      \\<lbrakk>\\<R>\\<^sub>\\<circ> f \\<approx>\\<^sub>\\<circ> Z;\n       Z \\<inter>\\<^sub>\\<circ>\n       (\\<omega> \\<union>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> f) =\n       []\\<^sub>\\<circ>;\n       Z \\<subseteq>\\<^sub>\\<circ> Vset\n                                    (ZFC_in_HOL.succ\n(ZFC_in_HOL.succ (ZFC_in_HOL.succ \\<omega>)))\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain z\n    where Rf_z: \"\\<R>\\<^sub>\\<circ> f \\<approx>\\<^sub>\\<circ> z\" \n      and \"vdisjnt z (\\<omega> \\<union>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> f)\"\n      and z: \"z \\<subseteq>\\<^sub>\\<circ> Vset (succ (succ (succ \\<omega>)))\""], ["proof (prove)\nusing this:\n  (\\<And>Z.\n      \\<lbrakk>\\<R>\\<^sub>\\<circ> f \\<approx>\\<^sub>\\<circ> Z;\n       Z \\<inter>\\<^sub>\\<circ>\n       (\\<omega> \\<union>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> f) =\n       []\\<^sub>\\<circ>;\n       Z \\<subseteq>\\<^sub>\\<circ> Vset\n                                    (ZFC_in_HOL.succ\n(ZFC_in_HOL.succ (ZFC_in_HOL.succ \\<omega>)))\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<lbrakk>\\<R>\\<^sub>\\<circ> f \\<approx>\\<^sub>\\<circ> z;\n         z \\<inter>\\<^sub>\\<circ>\n         (\\<omega> \\<union>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> f) =\n         []\\<^sub>\\<circ>;\n         z \\<subseteq>\\<^sub>\\<circ> Vset\n(ZFC_in_HOL.succ (ZFC_in_HOL.succ (ZFC_in_HOL.succ \\<omega>)))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> f \\<approx>\\<^sub>\\<circ> z\n  z \\<inter>\\<^sub>\\<circ>\n  (\\<omega> \\<union>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> f) =\n  []\\<^sub>\\<circ>\n  z \\<subseteq>\\<^sub>\\<circ> Vset\n                               (ZFC_in_HOL.succ\n                                 (ZFC_in_HOL.succ\n                                   (ZFC_in_HOL.succ \\<omega>)))\n\ngoal (3 subgoals):\n 1. range vreal_of_real_impl \\<approx> elts vreal_impl\n 2. vreal_impl \\<inter>\\<^sub>\\<circ> \\<omega> = []\\<^sub>\\<circ>\n 3. vreal_impl \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)", "then"], ["proof (chain)\npicking this:\n  \\<R>\\<^sub>\\<circ> f \\<approx>\\<^sub>\\<circ> z\n  z \\<inter>\\<^sub>\\<circ>\n  (\\<omega> \\<union>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> f) =\n  []\\<^sub>\\<circ>\n  z \\<subseteq>\\<^sub>\\<circ> Vset\n                               (ZFC_in_HOL.succ\n                                 (ZFC_in_HOL.succ\n                                   (ZFC_in_HOL.succ \\<omega>)))", "have vdisjnt_z\\<omega>: \"vdisjnt z \\<omega>\" \n    and z_ssss\\<omega>: \"z \\<in>\\<^sub>\\<circ> Vset (succ (succ (succ (succ \\<omega>))))\""], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> f \\<approx>\\<^sub>\\<circ> z\n  z \\<inter>\\<^sub>\\<circ>\n  (\\<omega> \\<union>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> f) =\n  []\\<^sub>\\<circ>\n  z \\<subseteq>\\<^sub>\\<circ> Vset\n                               (ZFC_in_HOL.succ\n                                 (ZFC_in_HOL.succ\n                                   (ZFC_in_HOL.succ \\<omega>)))\n\ngoal (1 subgoal):\n 1. z \\<inter>\\<^sub>\\<circ> \\<omega> = []\\<^sub>\\<circ> &&&\n    z \\<in>\\<^sub>\\<circ> Vset\n                           (ZFC_in_HOL.succ\n                             (ZFC_in_HOL.succ\n                               (ZFC_in_HOL.succ\n                                 (ZFC_in_HOL.succ \\<omega>))))", "by \n      (\n        auto simp: \n          vdisjnt_vunion_right vsubset_in_VsetI Ord_succ Ord_Vset_in_Vset_succI\n      )"], ["proof (state)\nthis:\n  z \\<inter>\\<^sub>\\<circ> \\<omega> = []\\<^sub>\\<circ>\n  z \\<in>\\<^sub>\\<circ> Vset\n                         (ZFC_in_HOL.succ\n                           (ZFC_in_HOL.succ\n                             (ZFC_in_HOL.succ (ZFC_in_HOL.succ \\<omega>))))\n\ngoal (3 subgoals):\n 1. range vreal_of_real_impl \\<approx> elts vreal_impl\n 2. vreal_impl \\<inter>\\<^sub>\\<circ> \\<omega> = []\\<^sub>\\<circ>\n 3. vreal_impl \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)", "have \"Limit (\\<omega> + \\<omega>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Limit (\\<omega> + \\<omega>)", "by simp"], ["proof (state)\nthis:\n  Limit (\\<omega> + \\<omega>)\n\ngoal (3 subgoals):\n 1. range vreal_of_real_impl \\<approx> elts vreal_impl\n 2. vreal_impl \\<inter>\\<^sub>\\<circ> \\<omega> = []\\<^sub>\\<circ>\n 3. vreal_impl \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)", "then"], ["proof (chain)\npicking this:\n  Limit (\\<omega> + \\<omega>)", "have \"succ (succ (succ (succ \\<omega>))) \\<in>\\<^sub>\\<circ> \\<omega> + \\<omega>\""], ["proof (prove)\nusing this:\n  Limit (\\<omega> + \\<omega>)\n\ngoal (1 subgoal):\n 1. ZFC_in_HOL.succ\n     (ZFC_in_HOL.succ (ZFC_in_HOL.succ (ZFC_in_HOL.succ \\<omega>)))\n    \\<in>\\<^sub>\\<circ> \\<omega> + \\<omega>", "by (metis Limit_def add.right_neutral add_mem_right_cancel Limit_omega)"], ["proof (state)\nthis:\n  ZFC_in_HOL.succ\n   (ZFC_in_HOL.succ (ZFC_in_HOL.succ (ZFC_in_HOL.succ \\<omega>)))\n  \\<in>\\<^sub>\\<circ> \\<omega> + \\<omega>\n\ngoal (3 subgoals):\n 1. range vreal_of_real_impl \\<approx> elts vreal_impl\n 2. vreal_impl \\<inter>\\<^sub>\\<circ> \\<omega> = []\\<^sub>\\<circ>\n 3. vreal_impl \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)", "then"], ["proof (chain)\npicking this:\n  ZFC_in_HOL.succ\n   (ZFC_in_HOL.succ (ZFC_in_HOL.succ (ZFC_in_HOL.succ \\<omega>)))\n  \\<in>\\<^sub>\\<circ> \\<omega> + \\<omega>", "have \"Vset (succ (succ (succ (succ \\<omega>)))) \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)\""], ["proof (prove)\nusing this:\n  ZFC_in_HOL.succ\n   (ZFC_in_HOL.succ (ZFC_in_HOL.succ (ZFC_in_HOL.succ \\<omega>)))\n  \\<in>\\<^sub>\\<circ> \\<omega> + \\<omega>\n\ngoal (1 subgoal):\n 1. Vset\n     (ZFC_in_HOL.succ\n       (ZFC_in_HOL.succ (ZFC_in_HOL.succ (ZFC_in_HOL.succ \\<omega>))))\n    \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)", "by (simp add: Vset_in_mono)"], ["proof (state)\nthis:\n  Vset\n   (ZFC_in_HOL.succ\n     (ZFC_in_HOL.succ (ZFC_in_HOL.succ (ZFC_in_HOL.succ \\<omega>))))\n  \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)\n\ngoal (3 subgoals):\n 1. range vreal_of_real_impl \\<approx> elts vreal_impl\n 2. vreal_impl \\<inter>\\<^sub>\\<circ> \\<omega> = []\\<^sub>\\<circ>\n 3. vreal_impl \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)", "with z z_ssss\\<omega>"], ["proof (chain)\npicking this:\n  z \\<subseteq>\\<^sub>\\<circ> Vset\n                               (ZFC_in_HOL.succ\n                                 (ZFC_in_HOL.succ\n                                   (ZFC_in_HOL.succ \\<omega>)))\n  z \\<in>\\<^sub>\\<circ> Vset\n                         (ZFC_in_HOL.succ\n                           (ZFC_in_HOL.succ\n                             (ZFC_in_HOL.succ (ZFC_in_HOL.succ \\<omega>))))\n  Vset\n   (ZFC_in_HOL.succ\n     (ZFC_in_HOL.succ (ZFC_in_HOL.succ (ZFC_in_HOL.succ \\<omega>))))\n  \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)", "have \"z \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)\""], ["proof (prove)\nusing this:\n  z \\<subseteq>\\<^sub>\\<circ> Vset\n                               (ZFC_in_HOL.succ\n                                 (ZFC_in_HOL.succ\n                                   (ZFC_in_HOL.succ \\<omega>)))\n  z \\<in>\\<^sub>\\<circ> Vset\n                         (ZFC_in_HOL.succ\n                           (ZFC_in_HOL.succ\n                             (ZFC_in_HOL.succ (ZFC_in_HOL.succ \\<omega>))))\n  Vset\n   (ZFC_in_HOL.succ\n     (ZFC_in_HOL.succ (ZFC_in_HOL.succ (ZFC_in_HOL.succ \\<omega>))))\n  \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)\n\ngoal (1 subgoal):\n 1. z \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)", "by auto"], ["proof (state)\nthis:\n  z \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)\n\ngoal (3 subgoals):\n 1. range vreal_of_real_impl \\<approx> elts vreal_impl\n 2. vreal_impl \\<inter>\\<^sub>\\<circ> \\<omega> = []\\<^sub>\\<circ>\n 3. vreal_impl \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)", "moreover"], ["proof (state)\nthis:\n  z \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)\n\ngoal (3 subgoals):\n 1. range vreal_of_real_impl \\<approx> elts vreal_impl\n 2. vreal_impl \\<inter>\\<^sub>\\<circ> \\<omega> = []\\<^sub>\\<circ>\n 3. vreal_impl \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)", "from x_Rf Rf_z"], ["proof (chain)\npicking this:\n  x \\<approx>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> f\n  \\<R>\\<^sub>\\<circ> f \\<approx>\\<^sub>\\<circ> z", "have \"range vreal_of_real_impl \\<approx> elts z\""], ["proof (prove)\nusing this:\n  x \\<approx>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> f\n  \\<R>\\<^sub>\\<circ> f \\<approx>\\<^sub>\\<circ> z\n\ngoal (1 subgoal):\n 1. range vreal_of_real_impl \\<approx> elts z", "unfolding x"], ["proof (prove)\nusing this:\n  x \\<approx>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> f\n  \\<R>\\<^sub>\\<circ> f \\<approx>\\<^sub>\\<circ> z\n\ngoal (1 subgoal):\n 1. x \\<approx>\\<^sub>\\<circ> z", "by (auto intro: eqpoll_trans)"], ["proof (state)\nthis:\n  range vreal_of_real_impl \\<approx> elts z\n\ngoal (3 subgoals):\n 1. range vreal_of_real_impl \\<approx> elts vreal_impl\n 2. vreal_impl \\<inter>\\<^sub>\\<circ> \\<omega> = []\\<^sub>\\<circ>\n 3. vreal_impl \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)", "ultimately"], ["proof (chain)\npicking this:\n  z \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)\n  range vreal_of_real_impl \\<approx> elts z", "show \"range vreal_of_real_impl \\<approx> elts vreal_impl\" \n    and \"vdisjnt vreal_impl \\<omega>\"\n    and \"vreal_impl \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)\""], ["proof (prove)\nusing this:\n  z \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)\n  range vreal_of_real_impl \\<approx> elts z\n\ngoal (1 subgoal):\n 1. range vreal_of_real_impl \\<approx> elts vreal_impl &&&\n    vreal_impl \\<inter>\\<^sub>\\<circ> \\<omega> = []\\<^sub>\\<circ> &&&\n    vreal_impl \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)", "using vdisjnt_z\\<omega>"], ["proof (prove)\nusing this:\n  z \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)\n  range vreal_of_real_impl \\<approx> elts z\n  z \\<inter>\\<^sub>\\<circ> \\<omega> = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. range vreal_of_real_impl \\<approx> elts vreal_impl &&&\n    vreal_impl \\<inter>\\<^sub>\\<circ> \\<omega> = []\\<^sub>\\<circ> &&&\n    vreal_impl \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)", "unfolding vreal_impl_def"], ["proof (prove)\nusing this:\n  z \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)\n  range vreal_of_real_impl \\<approx> elts z\n  z \\<inter>\\<^sub>\\<circ> \\<omega> = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. range vreal_of_real_impl \\<approx>\n    elts\n     (SOME y.\n         range vreal_of_real_impl \\<approx> elts y \\<and>\n         y \\<inter>\\<^sub>\\<circ> \\<omega> = []\\<^sub>\\<circ> \\<and>\n         y \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)) &&&\n    (SOME y.\n        range vreal_of_real_impl \\<approx> elts y \\<and>\n        y \\<inter>\\<^sub>\\<circ> \\<omega> = []\\<^sub>\\<circ> \\<and>\n        y \\<in>\\<^sub>\\<circ> Vset\n                               (\\<omega> + \\<omega>)) \\<inter>\\<^sub>\\<circ>\n    \\<omega> =\n    []\\<^sub>\\<circ> &&&\n    (SOME y.\n        range vreal_of_real_impl \\<approx> elts y \\<and>\n        y \\<inter>\\<^sub>\\<circ> \\<omega> = []\\<^sub>\\<circ> \\<and>\n        y \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>))\n    \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)", "by (metis (mono_tags, lifting) verit_sko_ex')+"], ["proof (state)\nthis:\n  range vreal_of_real_impl \\<approx> elts vreal_impl\n  vreal_impl \\<inter>\\<^sub>\\<circ> \\<omega> = []\\<^sub>\\<circ>\n  vreal_impl \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)\n\ngoal:\nNo subgoals!", "qed"], ["", "definition vreal_of_real_impl' :: \"V \\<Rightarrow> V\"\n  where \"vreal_of_real_impl' = \n    (SOME f. bij_betw f (range vreal_of_real_impl) (elts vreal_impl))\""], ["", "lemma vreal_of_real_impl'_bij_betw: \n  \"bij_betw vreal_of_real_impl' (range vreal_of_real_impl) (elts vreal_impl)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw vreal_of_real_impl' (range vreal_of_real_impl)\n     (elts vreal_impl)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. bij_betw vreal_of_real_impl' (range vreal_of_real_impl)\n     (elts vreal_impl)", "from eqpoll_def"], ["proof (chain)\npicking this:\n  ?A \\<approx> ?B \\<equiv> \\<exists>f. bij_betw f ?A ?B", "obtain f where f: \n    \"bij_betw f (range vreal_of_real_impl) (elts vreal_impl)\""], ["proof (prove)\nusing this:\n  ?A \\<approx> ?B \\<equiv> \\<exists>f. bij_betw f ?A ?B\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        bij_betw f (range vreal_of_real_impl)\n         (elts vreal_impl) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto intro: vreal_impl_eqpoll)"], ["proof (state)\nthis:\n  bij_betw f (range vreal_of_real_impl) (elts vreal_impl)\n\ngoal (1 subgoal):\n 1. bij_betw vreal_of_real_impl' (range vreal_of_real_impl)\n     (elts vreal_impl)", "then"], ["proof (chain)\npicking this:\n  bij_betw f (range vreal_of_real_impl) (elts vreal_impl)", "show ?thesis"], ["proof (prove)\nusing this:\n  bij_betw f (range vreal_of_real_impl) (elts vreal_impl)\n\ngoal (1 subgoal):\n 1. bij_betw vreal_of_real_impl' (range vreal_of_real_impl)\n     (elts vreal_impl)", "unfolding vreal_of_real_impl'_def"], ["proof (prove)\nusing this:\n  bij_betw f (range vreal_of_real_impl) (elts vreal_impl)\n\ngoal (1 subgoal):\n 1. bij_betw\n     (SOME f. bij_betw f (range vreal_of_real_impl) (elts vreal_impl))\n     (range vreal_of_real_impl) (elts vreal_impl)", "by (metis verit_sko_ex')"], ["proof (state)\nthis:\n  bij_betw vreal_of_real_impl' (range vreal_of_real_impl) (elts vreal_impl)\n\ngoal:\nNo subgoals!", "qed"], ["", "definition vreal_of_real_impl'' :: \"real \\<Rightarrow> V\"\n  where \"vreal_of_real_impl'' = vreal_of_real_impl' \\<circ> vreal_of_real_impl\""], ["", "lemma vreal_of_real_impl'': \"disjnt (range vreal_of_real_impl'') (elts \\<omega>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disjnt (range vreal_of_real_impl'') (elts \\<omega>)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. disjnt (range vreal_of_real_impl'') (elts \\<omega>)", "from comp_apply vreal_impl_vdisjnt vreal_of_real_impl'_bij_betw"], ["proof (chain)\npicking this:\n  (?f \\<circ> ?g) ?x = ?f (?g ?x)\n  vreal_impl \\<inter>\\<^sub>\\<circ> \\<omega> = []\\<^sub>\\<circ>\n  bij_betw vreal_of_real_impl' (range vreal_of_real_impl) (elts vreal_impl)", "have \n    \"vreal_of_real_impl'' y \\<notin>\\<^sub>\\<circ> \\<omega>\" for y"], ["proof (prove)\nusing this:\n  (?f \\<circ> ?g) ?x = ?f (?g ?x)\n  vreal_impl \\<inter>\\<^sub>\\<circ> \\<omega> = []\\<^sub>\\<circ>\n  bij_betw vreal_of_real_impl' (range vreal_of_real_impl) (elts vreal_impl)\n\ngoal (1 subgoal):\n 1. vreal_of_real_impl'' y \\<notin>\\<^sub>\\<circ> \\<omega>", "unfolding vreal_of_real_impl''_def"], ["proof (prove)\nusing this:\n  (?f \\<circ> ?g) ?x = ?f (?g ?x)\n  vreal_impl \\<inter>\\<^sub>\\<circ> \\<omega> = []\\<^sub>\\<circ>\n  bij_betw vreal_of_real_impl' (range vreal_of_real_impl) (elts vreal_impl)\n\ngoal (1 subgoal):\n 1. (vreal_of_real_impl' \\<circ> vreal_of_real_impl) y\n    \\<notin>\\<^sub>\\<circ> \\<omega>", "by fastforce"], ["proof (state)\nthis:\n  vreal_of_real_impl'' ?y \\<notin>\\<^sub>\\<circ> \\<omega>\n\ngoal (1 subgoal):\n 1. disjnt (range vreal_of_real_impl'') (elts \\<omega>)", "then"], ["proof (chain)\npicking this:\n  vreal_of_real_impl'' ?y \\<notin>\\<^sub>\\<circ> \\<omega>", "show ?thesis"], ["proof (prove)\nusing this:\n  vreal_of_real_impl'' ?y \\<notin>\\<^sub>\\<circ> \\<omega>\n\ngoal (1 subgoal):\n 1. disjnt (range vreal_of_real_impl'') (elts \\<omega>)", "unfolding disjnt_iff"], ["proof (prove)\nusing this:\n  vreal_of_real_impl'' ?y \\<notin>\\<^sub>\\<circ> \\<omega>\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       \\<not> (x \\<in> range vreal_of_real_impl'' \\<and>\n               x \\<in>\\<^sub>\\<circ> \\<omega>)", "by clarsimp"], ["proof (state)\nthis:\n  disjnt (range vreal_of_real_impl'') (elts \\<omega>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inj_vreal_of_real_impl'': \"inj vreal_of_real_impl''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj vreal_of_real_impl''", "unfolding vreal_of_real_impl''_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. inj (vreal_of_real_impl' \\<circ> vreal_of_real_impl)", "by \n    (\n      meson \n        bij_betwE \n        comp_inj_on \n        inj_vreal_of_real_impl \n        vreal_of_real_impl'_bij_betw\n    )"], ["", "text\\<open>Main definitions.\\<close>"], ["", "definition vreal_of_real :: \"real \\<Rightarrow> V\"\n  where \"vreal_of_real x = \n    (if x \\<in> \\<nat> then (nat_of_real x)\\<^sub>\\<nat> else vreal_of_real_impl'' x)\""], ["", "notation vreal_of_real (\\<open>_\\<^sub>\\<real>\\<close> [1000] 999)"], ["", "declare [[coercion \"vreal_of_real :: real \\<Rightarrow> V\"]]"], ["", "definition vreal :: V (\\<open>\\<real>\\<^sub>\\<circ>\\<close>)\n  where \"vreal = set (range vreal_of_real)\""], ["", "definition real_of_vreal :: \"V \\<Rightarrow> real\"\n  where \"real_of_vreal = inv_into UNIV vreal_of_real\""], ["", "text\\<open>Rules.\\<close>"], ["", "lemma vreal_of_real_in_vrealI[intro, simp]: \"a\\<^sub>\\<real> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a\\<^sub>\\<real> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "by (simp add: vreal_def)"], ["", "lemma vreal_of_real_in_vrealE[elim]:\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\"\n  obtains b where \"b\\<^sub>\\<real> = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>b.\n        b\\<^sub>\\<real> = a \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        b\\<^sub>\\<real> = a \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding vreal_def"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set (range vreal_of_real)\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        b\\<^sub>\\<real> = a \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["", "text\\<open>Elementary properties.\\<close>"], ["", "lemma vnat_eq_vreal: \"x\\<^sub>\\<nat> = x\\<^sub>\\<real>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sub>\\<nat> = (CZH_Sets_ZQR.real x)\\<^sub>\\<real>", "by (simp add: nat_of_real_def vreal_of_real_def)"], ["", "lemma omega_vsubset_vreal: \"\\<omega> \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<omega> \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<omega> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<omega> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "assume \"x \\<in>\\<^sub>\\<circ> \\<omega>\""], ["proof (state)\nthis:\n  x \\<in>\\<^sub>\\<circ> \\<omega>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<omega> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "with nat_of_omega"], ["proof (chain)\npicking this:\n  \\<lbrakk>?n \\<in>\\<^sub>\\<circ> \\<omega>;\n   \\<And>m. ?n = m\\<^sub>\\<nat> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  x \\<in>\\<^sub>\\<circ> \\<omega>", "obtain y where x_def: \"x = y\\<^sub>\\<nat>\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?n \\<in>\\<^sub>\\<circ> \\<omega>;\n   \\<And>m. ?n = m\\<^sub>\\<nat> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  x \\<in>\\<^sub>\\<circ> \\<omega>\n\ngoal (1 subgoal):\n 1. (\\<And>y. x = y\\<^sub>\\<nat> \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x = y\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<omega> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "then"], ["proof (chain)\npicking this:\n  x = y\\<^sub>\\<nat>", "have \"vreal_of_real (real y) = (nat_of_real (real y))\\<^sub>\\<nat>\""], ["proof (prove)\nusing this:\n  x = y\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. (CZH_Sets_ZQR.real y)\\<^sub>\\<real> =\n    nat_of_real (CZH_Sets_ZQR.real y)\\<^sub>\\<nat>", "unfolding vreal_of_real_def"], ["proof (prove)\nusing this:\n  x = y\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. (if CZH_Sets_ZQR.real y \\<in> \\<nat> \\<Rightarrow>\n          nat_of_real (CZH_Sets_ZQR.real y)\\<^sub>\\<nat> \n      | otherwise \\<Rightarrow> vreal_of_real_impl''\n                                 (CZH_Sets_ZQR.real y)) =\n    nat_of_real (CZH_Sets_ZQR.real y)\\<^sub>\\<nat>", "by simp"], ["proof (state)\nthis:\n  (CZH_Sets_ZQR.real y)\\<^sub>\\<real> =\n  nat_of_real (CZH_Sets_ZQR.real y)\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<omega> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "moreover"], ["proof (state)\nthis:\n  (CZH_Sets_ZQR.real y)\\<^sub>\\<real> =\n  nat_of_real (CZH_Sets_ZQR.real y)\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<omega> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "have \"(nat_of_real (real y))\\<^sub>\\<nat> = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_of_real (CZH_Sets_ZQR.real y)\\<^sub>\\<nat> = x", "by (simp add: nat_of_real_def x_def)"], ["proof (state)\nthis:\n  nat_of_real (CZH_Sets_ZQR.real y)\\<^sub>\\<nat> = x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<omega> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "ultimately"], ["proof (chain)\npicking this:\n  (CZH_Sets_ZQR.real y)\\<^sub>\\<real> =\n  nat_of_real (CZH_Sets_ZQR.real y)\\<^sub>\\<nat>\n  nat_of_real (CZH_Sets_ZQR.real y)\\<^sub>\\<nat> = x", "show \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  (CZH_Sets_ZQR.real y)\\<^sub>\\<real> =\n  nat_of_real (CZH_Sets_ZQR.real y)\\<^sub>\\<nat>\n  nat_of_real (CZH_Sets_ZQR.real y)\\<^sub>\\<nat> = x\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "unfolding vreal_def"], ["proof (prove)\nusing this:\n  (CZH_Sets_ZQR.real y)\\<^sub>\\<real> =\n  nat_of_real (CZH_Sets_ZQR.real y)\\<^sub>\\<nat>\n  nat_of_real (CZH_Sets_ZQR.real y)\\<^sub>\\<nat> = x\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set (range vreal_of_real)", "by clarsimp"], ["proof (state)\nthis:\n  x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inj_vreal_of_real: \"inj vreal_of_real\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj vreal_of_real", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV;\n        x\\<^sub>\\<real> = y\\<^sub>\\<real>\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV;\n        x\\<^sub>\\<real> = y\\<^sub>\\<real>\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume prems: \"vreal_of_real x = vreal_of_real y\""], ["proof (state)\nthis:\n  x\\<^sub>\\<real> = y\\<^sub>\\<real>\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV;\n        x\\<^sub>\\<real> = y\\<^sub>\\<real>\\<rbrakk>\n       \\<Longrightarrow> x = y", "consider \n    (xy) \\<open>x \\<in> \\<nat> \\<and> y \\<in> \\<nat>\\<close> | \n    (x_ny) \\<open>x \\<in> \\<nat> \\<and> y \\<notin> \\<nat>\\<close> | \n    (nx_y) \\<open>x \\<notin> \\<nat> \\<and> y \\<in> \\<nat>\\<close> | \n    (nxy) \\<open>x \\<notin> \\<nat> \\<and> y \\<notin> \\<nat>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> \\<nat> \\<and> y \\<in> \\<nat> \\<Longrightarrow> thesis;\n     x \\<in> \\<nat> \\<and> y \\<notin> \\<nat> \\<Longrightarrow> thesis;\n     x \\<notin> \\<nat> \\<and> y \\<in> \\<nat> \\<Longrightarrow> thesis;\n     x \\<notin> \\<nat> \\<and> y \\<notin> \\<nat> \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>x \\<in> \\<nat> \\<and> y \\<in> \\<nat> \\<Longrightarrow> ?thesis;\n   x \\<in> \\<nat> \\<and> y \\<notin> \\<nat> \\<Longrightarrow> ?thesis;\n   x \\<notin> \\<nat> \\<and> y \\<in> \\<nat> \\<Longrightarrow> ?thesis;\n   x \\<notin> \\<nat> \\<and> y \\<notin> \\<nat> \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV;\n        x\\<^sub>\\<real> = y\\<^sub>\\<real>\\<rbrakk>\n       \\<Longrightarrow> x = y", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>x \\<in> \\<nat> \\<and> y \\<in> \\<nat> \\<Longrightarrow> ?thesis;\n   x \\<in> \\<nat> \\<and> y \\<notin> \\<nat> \\<Longrightarrow> ?thesis;\n   x \\<notin> \\<nat> \\<and> y \\<in> \\<nat> \\<Longrightarrow> ?thesis;\n   x \\<notin> \\<nat> \\<and> y \\<notin> \\<nat> \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show \"x = y\""], ["proof (prove)\nusing this:\n  \\<lbrakk>x \\<in> \\<nat> \\<and> y \\<in> \\<nat> \\<Longrightarrow> ?thesis;\n   x \\<in> \\<nat> \\<and> y \\<notin> \\<nat> \\<Longrightarrow> ?thesis;\n   x \\<notin> \\<nat> \\<and> y \\<in> \\<nat> \\<Longrightarrow> ?thesis;\n   x \\<notin> \\<nat> \\<and> y \\<notin> \\<nat> \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. x = y", "proof cases"], ["proof (state)\ngoal (4 subgoals):\n 1. x \\<in> \\<nat> \\<and> y \\<in> \\<nat> \\<Longrightarrow> x = y\n 2. x \\<in> \\<nat> \\<and> y \\<notin> \\<nat> \\<Longrightarrow> x = y\n 3. x \\<notin> \\<nat> \\<and> y \\<in> \\<nat> \\<Longrightarrow> x = y\n 4. x \\<notin> \\<nat> \\<and> y \\<notin> \\<nat> \\<Longrightarrow> x = y", "case xy"], ["proof (state)\nthis:\n  x \\<in> \\<nat> \\<and> y \\<in> \\<nat>\n\ngoal (4 subgoals):\n 1. x \\<in> \\<nat> \\<and> y \\<in> \\<nat> \\<Longrightarrow> x = y\n 2. x \\<in> \\<nat> \\<and> y \\<notin> \\<nat> \\<Longrightarrow> x = y\n 3. x \\<notin> \\<nat> \\<and> y \\<in> \\<nat> \\<Longrightarrow> x = y\n 4. x \\<notin> \\<nat> \\<and> y \\<notin> \\<nat> \\<Longrightarrow> x = y", "then"], ["proof (chain)\npicking this:\n  x \\<in> \\<nat> \\<and> y \\<in> \\<nat>", "have \"(nat_of_real x)\\<^sub>\\<nat> = (nat_of_real y)\\<^sub>\\<nat>\""], ["proof (prove)\nusing this:\n  x \\<in> \\<nat> \\<and> y \\<in> \\<nat>\n\ngoal (1 subgoal):\n 1. nat_of_real x\\<^sub>\\<nat> = nat_of_real y\\<^sub>\\<nat>", "using vreal_of_real_def prems"], ["proof (prove)\nusing this:\n  x \\<in> \\<nat> \\<and> y \\<in> \\<nat>\n  ?x\\<^sub>\\<real> =\n  (if ?x \\<in> \\<nat> \\<Rightarrow> nat_of_real ?x\\<^sub>\\<nat> \n    | otherwise \\<Rightarrow> vreal_of_real_impl'' ?x)\n  x\\<^sub>\\<real> = y\\<^sub>\\<real>\n\ngoal (1 subgoal):\n 1. nat_of_real x\\<^sub>\\<nat> = nat_of_real y\\<^sub>\\<nat>", "by simp"], ["proof (state)\nthis:\n  nat_of_real x\\<^sub>\\<nat> = nat_of_real y\\<^sub>\\<nat>\n\ngoal (4 subgoals):\n 1. x \\<in> \\<nat> \\<and> y \\<in> \\<nat> \\<Longrightarrow> x = y\n 2. x \\<in> \\<nat> \\<and> y \\<notin> \\<nat> \\<Longrightarrow> x = y\n 3. x \\<notin> \\<nat> \\<and> y \\<in> \\<nat> \\<Longrightarrow> x = y\n 4. x \\<notin> \\<nat> \\<and> y \\<notin> \\<nat> \\<Longrightarrow> x = y", "then"], ["proof (chain)\npicking this:\n  nat_of_real x\\<^sub>\\<nat> = nat_of_real y\\<^sub>\\<nat>", "show ?thesis"], ["proof (prove)\nusing this:\n  nat_of_real x\\<^sub>\\<nat> = nat_of_real y\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. x = y", "by (metis Nats_def f_inv_into_f nat_of_real_def ord_of_nat_inject xy)"], ["proof (state)\nthis:\n  x = y\n\ngoal (3 subgoals):\n 1. x \\<in> \\<nat> \\<and> y \\<notin> \\<nat> \\<Longrightarrow> x = y\n 2. x \\<notin> \\<nat> \\<and> y \\<in> \\<nat> \\<Longrightarrow> x = y\n 3. x \\<notin> \\<nat> \\<and> y \\<notin> \\<nat> \\<Longrightarrow> x = y", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. x \\<in> \\<nat> \\<and> y \\<notin> \\<nat> \\<Longrightarrow> x = y\n 2. x \\<notin> \\<nat> \\<and> y \\<in> \\<nat> \\<Longrightarrow> x = y\n 3. x \\<notin> \\<nat> \\<and> y \\<notin> \\<nat> \\<Longrightarrow> x = y", "case x_ny"], ["proof (state)\nthis:\n  x \\<in> \\<nat> \\<and> y \\<notin> \\<nat>\n\ngoal (3 subgoals):\n 1. x \\<in> \\<nat> \\<and> y \\<notin> \\<nat> \\<Longrightarrow> x = y\n 2. x \\<notin> \\<nat> \\<and> y \\<in> \\<nat> \\<Longrightarrow> x = y\n 3. x \\<notin> \\<nat> \\<and> y \\<notin> \\<nat> \\<Longrightarrow> x = y", "with prems"], ["proof (chain)\npicking this:\n  x\\<^sub>\\<real> = y\\<^sub>\\<real>\n  x \\<in> \\<nat> \\<and> y \\<notin> \\<nat>", "have eq: \"(nat_of_real x)\\<^sub>\\<nat> = vreal_of_real_impl'' y\""], ["proof (prove)\nusing this:\n  x\\<^sub>\\<real> = y\\<^sub>\\<real>\n  x \\<in> \\<nat> \\<and> y \\<notin> \\<nat>\n\ngoal (1 subgoal):\n 1. nat_of_real x\\<^sub>\\<nat> = vreal_of_real_impl'' y", "unfolding vreal_of_real_def"], ["proof (prove)\nusing this:\n  (if x \\<in> \\<nat> \\<Rightarrow> nat_of_real x\\<^sub>\\<nat> \n    | otherwise \\<Rightarrow> vreal_of_real_impl'' x) =\n  (if y \\<in> \\<nat> \\<Rightarrow> nat_of_real y\\<^sub>\\<nat> \n    | otherwise \\<Rightarrow> vreal_of_real_impl'' y)\n  x \\<in> \\<nat> \\<and> y \\<notin> \\<nat>\n\ngoal (1 subgoal):\n 1. nat_of_real x\\<^sub>\\<nat> = vreal_of_real_impl'' y", "by simp"], ["proof (state)\nthis:\n  nat_of_real x\\<^sub>\\<nat> = vreal_of_real_impl'' y\n\ngoal (3 subgoals):\n 1. x \\<in> \\<nat> \\<and> y \\<notin> \\<nat> \\<Longrightarrow> x = y\n 2. x \\<notin> \\<nat> \\<and> y \\<in> \\<nat> \\<Longrightarrow> x = y\n 3. x \\<notin> \\<nat> \\<and> y \\<notin> \\<nat> \\<Longrightarrow> x = y", "have \"vreal_of_real_impl'' y \\<notin>\\<^sub>\\<circ> \\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vreal_of_real_impl'' y \\<notin>\\<^sub>\\<circ> \\<omega>", "by (meson disjnt_iff rangeI vreal_of_real_impl'')"], ["proof (state)\nthis:\n  vreal_of_real_impl'' y \\<notin>\\<^sub>\\<circ> \\<omega>\n\ngoal (3 subgoals):\n 1. x \\<in> \\<nat> \\<and> y \\<notin> \\<nat> \\<Longrightarrow> x = y\n 2. x \\<notin> \\<nat> \\<and> y \\<in> \\<nat> \\<Longrightarrow> x = y\n 3. x \\<notin> \\<nat> \\<and> y \\<notin> \\<nat> \\<Longrightarrow> x = y", "then"], ["proof (chain)\npicking this:\n  vreal_of_real_impl'' y \\<notin>\\<^sub>\\<circ> \\<omega>", "show ?thesis"], ["proof (prove)\nusing this:\n  vreal_of_real_impl'' y \\<notin>\\<^sub>\\<circ> \\<omega>\n\ngoal (1 subgoal):\n 1. x = y", "unfolding eq[symmetric]"], ["proof (prove)\nusing this:\n  nat_of_real x\\<^sub>\\<nat> \\<notin>\\<^sub>\\<circ> \\<omega>\n\ngoal (1 subgoal):\n 1. x = y", "by auto"], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. x \\<notin> \\<nat> \\<and> y \\<in> \\<nat> \\<Longrightarrow> x = y\n 2. x \\<notin> \\<nat> \\<and> y \\<notin> \\<nat> \\<Longrightarrow> x = y", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<notin> \\<nat> \\<and> y \\<in> \\<nat> \\<Longrightarrow> x = y\n 2. x \\<notin> \\<nat> \\<and> y \\<notin> \\<nat> \\<Longrightarrow> x = y", "case nx_y"], ["proof (state)\nthis:\n  x \\<notin> \\<nat> \\<and> y \\<in> \\<nat>\n\ngoal (2 subgoals):\n 1. x \\<notin> \\<nat> \\<and> y \\<in> \\<nat> \\<Longrightarrow> x = y\n 2. x \\<notin> \\<nat> \\<and> y \\<notin> \\<nat> \\<Longrightarrow> x = y", "with prems"], ["proof (chain)\npicking this:\n  x\\<^sub>\\<real> = y\\<^sub>\\<real>\n  x \\<notin> \\<nat> \\<and> y \\<in> \\<nat>", "have eq: \"(nat_of_real y)\\<^sub>\\<nat> = vreal_of_real_impl'' x\""], ["proof (prove)\nusing this:\n  x\\<^sub>\\<real> = y\\<^sub>\\<real>\n  x \\<notin> \\<nat> \\<and> y \\<in> \\<nat>\n\ngoal (1 subgoal):\n 1. nat_of_real y\\<^sub>\\<nat> = vreal_of_real_impl'' x", "unfolding vreal_of_real_def"], ["proof (prove)\nusing this:\n  (if x \\<in> \\<nat> \\<Rightarrow> nat_of_real x\\<^sub>\\<nat> \n    | otherwise \\<Rightarrow> vreal_of_real_impl'' x) =\n  (if y \\<in> \\<nat> \\<Rightarrow> nat_of_real y\\<^sub>\\<nat> \n    | otherwise \\<Rightarrow> vreal_of_real_impl'' y)\n  x \\<notin> \\<nat> \\<and> y \\<in> \\<nat>\n\ngoal (1 subgoal):\n 1. nat_of_real y\\<^sub>\\<nat> = vreal_of_real_impl'' x", "by simp"], ["proof (state)\nthis:\n  nat_of_real y\\<^sub>\\<nat> = vreal_of_real_impl'' x\n\ngoal (2 subgoals):\n 1. x \\<notin> \\<nat> \\<and> y \\<in> \\<nat> \\<Longrightarrow> x = y\n 2. x \\<notin> \\<nat> \\<and> y \\<notin> \\<nat> \\<Longrightarrow> x = y", "have \"vreal_of_real_impl'' x \\<notin>\\<^sub>\\<circ> \\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vreal_of_real_impl'' x \\<notin>\\<^sub>\\<circ> \\<omega>", "by (meson disjnt_iff rangeI vreal_of_real_impl'')"], ["proof (state)\nthis:\n  vreal_of_real_impl'' x \\<notin>\\<^sub>\\<circ> \\<omega>\n\ngoal (2 subgoals):\n 1. x \\<notin> \\<nat> \\<and> y \\<in> \\<nat> \\<Longrightarrow> x = y\n 2. x \\<notin> \\<nat> \\<and> y \\<notin> \\<nat> \\<Longrightarrow> x = y", "then"], ["proof (chain)\npicking this:\n  vreal_of_real_impl'' x \\<notin>\\<^sub>\\<circ> \\<omega>", "show ?thesis"], ["proof (prove)\nusing this:\n  vreal_of_real_impl'' x \\<notin>\\<^sub>\\<circ> \\<omega>\n\ngoal (1 subgoal):\n 1. x = y", "unfolding eq[symmetric]"], ["proof (prove)\nusing this:\n  nat_of_real y\\<^sub>\\<nat> \\<notin>\\<^sub>\\<circ> \\<omega>\n\ngoal (1 subgoal):\n 1. x = y", "by auto"], ["proof (state)\nthis:\n  x = y\n\ngoal (1 subgoal):\n 1. x \\<notin> \\<nat> \\<and> y \\<notin> \\<nat> \\<Longrightarrow> x = y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<notin> \\<nat> \\<and> y \\<notin> \\<nat> \\<Longrightarrow> x = y", "case nxy"], ["proof (state)\nthis:\n  x \\<notin> \\<nat> \\<and> y \\<notin> \\<nat>\n\ngoal (1 subgoal):\n 1. x \\<notin> \\<nat> \\<and> y \\<notin> \\<nat> \\<Longrightarrow> x = y", "then"], ["proof (chain)\npicking this:\n  x \\<notin> \\<nat> \\<and> y \\<notin> \\<nat>", "have \"x \\<notin> \\<nat>\" and \"y \\<notin> \\<nat>\""], ["proof (prove)\nusing this:\n  x \\<notin> \\<nat> \\<and> y \\<notin> \\<nat>\n\ngoal (1 subgoal):\n 1. x \\<notin> \\<nat> &&& y \\<notin> \\<nat>", "by auto"], ["proof (state)\nthis:\n  x \\<notin> \\<nat>\n  y \\<notin> \\<nat>\n\ngoal (1 subgoal):\n 1. x \\<notin> \\<nat> \\<and> y \\<notin> \\<nat> \\<Longrightarrow> x = y", "with prems"], ["proof (chain)\npicking this:\n  x\\<^sub>\\<real> = y\\<^sub>\\<real>\n  x \\<notin> \\<nat>\n  y \\<notin> \\<nat>", "have \"vreal_of_real_impl'' x = vreal_of_real_impl'' y\""], ["proof (prove)\nusing this:\n  x\\<^sub>\\<real> = y\\<^sub>\\<real>\n  x \\<notin> \\<nat>\n  y \\<notin> \\<nat>\n\ngoal (1 subgoal):\n 1. vreal_of_real_impl'' x = vreal_of_real_impl'' y", "unfolding vreal_of_real_def"], ["proof (prove)\nusing this:\n  (if x \\<in> \\<nat> \\<Rightarrow> nat_of_real x\\<^sub>\\<nat> \n    | otherwise \\<Rightarrow> vreal_of_real_impl'' x) =\n  (if y \\<in> \\<nat> \\<Rightarrow> nat_of_real y\\<^sub>\\<nat> \n    | otherwise \\<Rightarrow> vreal_of_real_impl'' y)\n  x \\<notin> \\<nat>\n  y \\<notin> \\<nat>\n\ngoal (1 subgoal):\n 1. vreal_of_real_impl'' x = vreal_of_real_impl'' y", "by simp"], ["proof (state)\nthis:\n  vreal_of_real_impl'' x = vreal_of_real_impl'' y\n\ngoal (1 subgoal):\n 1. x \\<notin> \\<nat> \\<and> y \\<notin> \\<nat> \\<Longrightarrow> x = y", "then"], ["proof (chain)\npicking this:\n  vreal_of_real_impl'' x = vreal_of_real_impl'' y", "show ?thesis"], ["proof (prove)\nusing this:\n  vreal_of_real_impl'' x = vreal_of_real_impl'' y\n\ngoal (1 subgoal):\n 1. x = y", "by (meson inj_def inj_vreal_of_real_impl'')"], ["proof (state)\nthis:\n  x = y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x = y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vreal_in_Vset_\\<omega>2: \"\\<real>\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<real>\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)", "unfolding vreal_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set (range vreal_of_real)\n    \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set (range vreal_of_real)\n    \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)", "have \"set (range vreal_of_real) \\<subseteq>\\<^sub>\\<circ> set (range vreal_of_real_impl'') \\<union>\\<^sub>\\<circ> \\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set (range vreal_of_real)\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set\n                               (range\n                                 vreal_of_real_impl'') \\<union>\\<^sub>\\<circ>\n                              \\<omega>", "unfolding vreal_of_real_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set\n     (range\n       (\\<lambda>x.\n           if x \\<in> \\<nat> \\<Rightarrow> nat_of_real x\\<^sub>\\<nat> \n            | otherwise \\<Rightarrow> vreal_of_real_impl'' x))\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set\n                               (range\n                                 vreal_of_real_impl'') \\<union>\\<^sub>\\<circ>\n                              \\<omega>", "by auto"], ["proof (state)\nthis:\n  ZFC_in_HOL.set (range vreal_of_real)\n  \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set\n                             (range\n                               vreal_of_real_impl'') \\<union>\\<^sub>\\<circ>\n                            \\<omega>\n\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set (range vreal_of_real)\n    \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)", "moreover"], ["proof (state)\nthis:\n  ZFC_in_HOL.set (range vreal_of_real)\n  \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set\n                             (range\n                               vreal_of_real_impl'') \\<union>\\<^sub>\\<circ>\n                            \\<omega>\n\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set (range vreal_of_real)\n    \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)", "from vreal_of_real_impl'_bij_betw"], ["proof (chain)\npicking this:\n  bij_betw vreal_of_real_impl' (range vreal_of_real_impl) (elts vreal_impl)", "have \n    \"set (range vreal_of_real_impl'') \\<subseteq>\\<^sub>\\<circ> vreal_impl\""], ["proof (prove)\nusing this:\n  bij_betw vreal_of_real_impl' (range vreal_of_real_impl) (elts vreal_impl)\n\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set (range vreal_of_real_impl'')\n    \\<subseteq>\\<^sub>\\<circ> vreal_impl", "unfolding vreal_of_real_impl''_def"], ["proof (prove)\nusing this:\n  bij_betw vreal_of_real_impl' (range vreal_of_real_impl) (elts vreal_impl)\n\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set (range (vreal_of_real_impl' \\<circ> vreal_of_real_impl))\n    \\<subseteq>\\<^sub>\\<circ> vreal_impl", "by fastforce"], ["proof (state)\nthis:\n  ZFC_in_HOL.set (range vreal_of_real_impl'')\n  \\<subseteq>\\<^sub>\\<circ> vreal_impl\n\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set (range vreal_of_real)\n    \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)", "ultimately"], ["proof (chain)\npicking this:\n  ZFC_in_HOL.set (range vreal_of_real)\n  \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set\n                             (range\n                               vreal_of_real_impl'') \\<union>\\<^sub>\\<circ>\n                            \\<omega>\n  ZFC_in_HOL.set (range vreal_of_real_impl'')\n  \\<subseteq>\\<^sub>\\<circ> vreal_impl", "show \"set (range vreal_of_real) \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)\""], ["proof (prove)\nusing this:\n  ZFC_in_HOL.set (range vreal_of_real)\n  \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set\n                             (range\n                               vreal_of_real_impl'') \\<union>\\<^sub>\\<circ>\n                            \\<omega>\n  ZFC_in_HOL.set (range vreal_of_real_impl'')\n  \\<subseteq>\\<^sub>\\<circ> vreal_impl\n\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set (range vreal_of_real)\n    \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)", "using Ord_\\<omega> Ord_add"], ["proof (prove)\nusing this:\n  ZFC_in_HOL.set (range vreal_of_real)\n  \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set\n                             (range\n                               vreal_of_real_impl'') \\<union>\\<^sub>\\<circ>\n                            \\<omega>\n  ZFC_in_HOL.set (range vreal_of_real_impl'')\n  \\<subseteq>\\<^sub>\\<circ> vreal_impl\n  Ord \\<omega>\n  \\<lbrakk>Ord ?x; Ord ?y\\<rbrakk> \\<Longrightarrow> Ord (?x + ?y)\n\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set (range vreal_of_real)\n    \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)", "by \n      ( \n        auto simp: \n          Ord_iff_rank \n          Ord_VsetI\n          vreal_impl_in_Vset_ss_omega \n          vsubset_in_VsetI \n          vunion_in_VsetI\n      )"], ["proof (state)\nthis:\n  ZFC_in_HOL.set (range vreal_of_real)\n  \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma real_of_vreal_vreal_of_real[simp]: \"real_of_vreal (a\\<^sub>\\<real>) = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_vreal (a\\<^sub>\\<real>) = a", "by (simp add: inj_vreal_of_real real_of_vreal_def)"], ["", "subsubsection\\<open>Transfer rules\\<close>"], ["", "definition cr_vreal :: \"V \\<Rightarrow> real \\<Rightarrow> bool\"\n  where \"cr_vreal a b \\<longleftrightarrow> (a = vreal_of_real b)\""], ["", "lemma cr_vreal_right_total[transfer_rule]: \"right_total cr_vreal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. right_total cr_vreal", "unfolding cr_vreal_def right_total_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y. \\<exists>x. x = y\\<^sub>\\<real>", "by simp"], ["", "lemma cr_vreal_bi_uniqie[transfer_rule]: \"bi_unique cr_vreal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bi_unique cr_vreal", "unfolding cr_vreal_def bi_unique_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x y z.\n        x = y\\<^sub>\\<real> \\<longrightarrow>\n        x = z\\<^sub>\\<real> \\<longrightarrow> y = z) \\<and>\n    (\\<forall>x y z.\n        x = z\\<^sub>\\<real> \\<longrightarrow>\n        y = z\\<^sub>\\<real> \\<longrightarrow> x = y)", "by (simp add: inj_eq inj_vreal_of_real)"], ["", "lemma cr_vreal_transfer_domain_rule[transfer_domain_rule]: \n  \"Domainp cr_vreal = (\\<lambda>x. x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Domainp cr_vreal =\n    (\\<lambda>x. x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>)", "unfolding cr_vreal_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Domainp (\\<lambda>a b. a = b\\<^sub>\\<real>) =\n    (\\<lambda>x. x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>)", "by force"], ["", "lemma vreal_transfer[transfer_rule]: \n  \"(rel_set cr_vreal) (elts \\<real>\\<^sub>\\<circ>) (UNIV::real set)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_set cr_vreal (elts \\<real>\\<^sub>\\<circ>) UNIV", "unfolding cr_vreal_def rel_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x\\<in>elts \\<real>\\<^sub>\\<circ>.\n        \\<exists>b\\<in>UNIV. x = b\\<^sub>\\<real>) \\<and>\n    (\\<forall>y\\<in>UNIV.\n        \\<exists>x\\<in>elts \\<real>\\<^sub>\\<circ>. x = y\\<^sub>\\<real>)", "by auto"], ["", "lemma vreal_of_real_transfer[transfer_rule]: \"cr_vreal (vreal_of_real a) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cr_vreal (a\\<^sub>\\<real>) a", "unfolding cr_vreal_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. a\\<^sub>\\<real> = a\\<^sub>\\<real>", "by auto"], ["", "subsubsection\\<open>Constants and operations\\<close>"], ["", "text\\<open>Auxiliary.\\<close>"], ["", "lemma vreal_fsingleton_in_fproduct_vreal: \"[a\\<^sub>\\<real>]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times> 1\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [a\\<^sub>\\<real>]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                        1\\<^sub>\\<nat>", "by auto"], ["", "lemma vreal_fpair_in_fproduct_vreal: \"[a\\<^sub>\\<real>, b\\<^sub>\\<real>]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [a\\<^sub>\\<real>, b\\<^sub>\\<real>]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                        2\\<^sub>\\<nat>", "by force"], ["", "text\\<open>Zero.\\<close>"], ["", "lemma vreal_zero: \"0\\<^sub>\\<real> = (0::V)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0\\<^sub>\\<real> = []\\<^sub>\\<circ>", "by (simp add: ord_of_nat_vempty vnat_eq_vreal)"], ["", "text\\<open>One.\\<close>"], ["", "lemma vreal_one: \"1\\<^sub>\\<real> = (1::V)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1\\<^sub>\\<real> = 1", "by (simp add: ord_of_nat_vone vnat_eq_vreal)"], ["", "text\\<open>Addition.\\<close>"], ["", "definition vreal_plus :: V \n  where \"vreal_plus = \n    (\\<lambda>x\\<in>\\<^sub>\\<circ>\\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>. (real_of_vreal (x\\<lparr>0\\<^sub>\\<nat>\\<rparr>) + real_of_vreal (x\\<lparr>1\\<^sub>\\<nat>\\<rparr>))\\<^sub>\\<real>)\""], ["", "abbreviation vreal_plus_app :: \"V \\<Rightarrow> V \\<Rightarrow> V\" (infixl \"+\\<^sub>\\<real>\" 65)\n  where \"vreal_plus_app a b \\<equiv> vreal_plus\\<lparr>a, b\\<rparr>\\<^sub>\\<bullet>\""], ["", "notation vreal_plus_app (infixl \"+\\<^sub>\\<real>\" 65)"], ["", "lemma vreal_plus_transfer[transfer_rule]: \n  includes lifting_syntax\n  shows \"(cr_vreal ===> cr_vreal ===> cr_vreal) \n    (+\\<^sub>\\<real>) (+)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cr_vreal ===> cr_vreal ===> cr_vreal) (+\\<^sub>\\<real>) (+)", "using vreal_fpair_in_fproduct_vreal"], ["proof (prove)\nusing this:\n  [?a\\<^sub>\\<real>, ?b\\<^sub>\\<real>]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. (cr_vreal ===> cr_vreal ===> cr_vreal) (+\\<^sub>\\<real>) (+)", "by (intro rel_funI, unfold vreal_plus_def cr_vreal_def cr_scalar_def) \n    (simp add: nat_omega_simps)"], ["", "text\\<open>Multiplication.\\<close>"], ["", "definition vreal_mult :: V \n  where \"vreal_mult = \n    (\\<lambda>x\\<in>\\<^sub>\\<circ>\\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>. (real_of_vreal (x\\<lparr>0\\<^sub>\\<nat>\\<rparr>) * real_of_vreal (x\\<lparr>1\\<^sub>\\<nat>\\<rparr>))\\<^sub>\\<real>)\""], ["", "abbreviation vreal_mult_app (infixl \"*\\<^sub>\\<real>\" 70) \n  where \"vreal_mult_app a b \\<equiv> vreal_mult\\<lparr>a, b\\<rparr>\\<^sub>\\<bullet>\""], ["", "notation vreal_mult_app (infixl \"*\\<^sub>\\<real>\" 70)"], ["", "lemma vreal_mult_transfer[transfer_rule]: \n  includes lifting_syntax\n  shows \"(cr_vreal ===> cr_vreal ===> cr_vreal) (*\\<^sub>\\<real>) (*)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cr_vreal ===> cr_vreal ===> cr_vreal) (*\\<^sub>\\<real>) (*)", "using vreal_fpair_in_fproduct_vreal"], ["proof (prove)\nusing this:\n  [?a\\<^sub>\\<real>, ?b\\<^sub>\\<real>]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. (cr_vreal ===> cr_vreal ===> cr_vreal) (*\\<^sub>\\<real>) (*)", "by (intro rel_funI, unfold vreal_mult_def cr_vreal_def cr_scalar_def) \n    (simp add: nat_omega_simps)"], ["", "text\\<open>Unary minus.\\<close>"], ["", "definition vreal_uminus :: V \n  where \"vreal_uminus = (\\<lambda>x\\<in>\\<^sub>\\<circ>\\<real>\\<^sub>\\<circ>. (uminus (real_of_vreal x))\\<^sub>\\<real>)\""], ["", "abbreviation vreal_uminus_app (\\<open>-\\<^sub>\\<real> _\\<close> [81] 80) \n  where \"-\\<^sub>\\<real> a \\<equiv> vreal_uminus\\<lparr>a\\<rparr>\""], ["", "lemma vreal_uminus_transfer[transfer_rule]: \n  includes lifting_syntax\n  shows \"(cr_vreal ===> cr_vreal) (vreal_uminus_app) (uminus)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cr_vreal ===> cr_vreal) vreal_uminus_app uminus", "using vreal_fsingleton_in_fproduct_vreal"], ["proof (prove)\nusing this:\n  [?a\\<^sub>\\<real>]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times> 1\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. (cr_vreal ===> cr_vreal) vreal_uminus_app uminus", "by (intro rel_funI, unfold vreal_uminus_def cr_vreal_def cr_scalar_def) \n    (simp add: nat_omega_simps)"], ["", "text\\<open>Multiplicative inverse.\\<close>"], ["", "definition vreal_inverse :: V \n  where \"vreal_inverse = (\\<lambda>x\\<in>\\<^sub>\\<circ>\\<real>\\<^sub>\\<circ>. (inverse (real_of_vreal x))\\<^sub>\\<real>)\""], ["", "abbreviation vreal_inverse_app (\\<open>(_\\<inverse>\\<^sub>\\<real>)\\<close> [1000] 999) \n  where \"a\\<inverse>\\<^sub>\\<real> \\<equiv> vreal_inverse\\<lparr>a\\<rparr>\""], ["", "lemma vreal_inverse_transfer[transfer_rule]: \n  includes lifting_syntax\n  shows \"(cr_vreal ===> cr_vreal) (vreal_inverse_app) (inverse)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cr_vreal ===> cr_vreal) vreal_inverse_app inverse", "using vreal_fsingleton_in_fproduct_vreal"], ["proof (prove)\nusing this:\n  [?a\\<^sub>\\<real>]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times> 1\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. (cr_vreal ===> cr_vreal) vreal_inverse_app inverse", "by (intro rel_funI, unfold vreal_inverse_def cr_vreal_def cr_scalar_def) \n    (simp add: nat_omega_simps)"], ["", "text\\<open>Order.\\<close>"], ["", "definition vreal_le :: V \n  where \"vreal_le =\n    set {[a, b]\\<^sub>\\<circ> | a b. [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat> \\<and> real_of_vreal a \\<le> real_of_vreal b}\""], ["", "abbreviation vreal_le' (\\<open>(_/ \\<le>\\<^sub>\\<real> _)\\<close>  [51, 51] 50)\n  where \"a \\<le>\\<^sub>\\<real> b \\<equiv> [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> vreal_le\""], ["", "lemma small_vreal_le[simp]: \n  \"small \n    {[a, b]\\<^sub>\\<circ> | a b. [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat> \\<and> real_of_vreal a \\<le> real_of_vreal b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. small\n     {[a, b]\\<^sub>\\<circ> |a b.\n      [a, b]\\<^sub>\\<circ>\n      \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                          2\\<^sub>\\<nat> \\<and>\n      real_of_vreal a \\<le> real_of_vreal b}", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. small\n     {[a, b]\\<^sub>\\<circ> |a b.\n      [a, b]\\<^sub>\\<circ>\n      \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                          2\\<^sub>\\<nat> \\<and>\n      real_of_vreal a \\<le> real_of_vreal b}", "have small: \"small {[a, b]\\<^sub>\\<circ> | a b. [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. small\n     {[a, b]\\<^sub>\\<circ> |a b.\n      [a, b]\\<^sub>\\<circ>\n      \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                          2\\<^sub>\\<nat>}", "by simp"], ["proof (state)\nthis:\n  small\n   {[a, b]\\<^sub>\\<circ> |a b.\n    [a, b]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                        2\\<^sub>\\<nat>}\n\ngoal (1 subgoal):\n 1. small\n     {[a, b]\\<^sub>\\<circ> |a b.\n      [a, b]\\<^sub>\\<circ>\n      \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                          2\\<^sub>\\<nat> \\<and>\n      real_of_vreal a \\<le> real_of_vreal b}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. small\n     {[a, b]\\<^sub>\\<circ> |a b.\n      [a, b]\\<^sub>\\<circ>\n      \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                          2\\<^sub>\\<nat> \\<and>\n      real_of_vreal a \\<le> real_of_vreal b}", "by (rule smaller_than_small[OF small]) auto"], ["proof (state)\nthis:\n  small\n   {[a, b]\\<^sub>\\<circ> |a b.\n    [a, b]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                        2\\<^sub>\\<nat> \\<and>\n    real_of_vreal a \\<le> real_of_vreal b}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vreal_le_transfer[transfer_rule]:\n  includes lifting_syntax\n  shows \"(cr_vreal ===> cr_vreal ===> (=)) vreal_le' (\\<le>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cr_vreal ===> cr_vreal ===> (=)) vreal_le' (\\<le>)", "using vreal_fsingleton_in_fproduct_vreal"], ["proof (prove)\nusing this:\n  [?a\\<^sub>\\<real>]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times> 1\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. (cr_vreal ===> cr_vreal ===> (=)) vreal_le' (\\<le>)", "by (intro rel_funI, unfold cr_scalar_def cr_vreal_def vreal_le_def)\n    (auto simp: nat_omega_simps)"], ["", "text\\<open>Strict order.\\<close>"], ["", "definition vreal_ls :: V \n  where \"vreal_ls =\n    set {[a, b]\\<^sub>\\<circ> | a b. [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat> \\<and> real_of_vreal a < real_of_vreal b}\""], ["", "abbreviation vreal_ls' (\\<open>(_/ <\\<^sub>\\<real> _)\\<close> [51, 51] 50)\n  where \"a <\\<^sub>\\<real> b \\<equiv> [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> vreal_ls\""], ["", "lemma small_vreal_ls[simp]: \n  \"small \n    {[a, b]\\<^sub>\\<circ> | a b. [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat> \\<and> real_of_vreal a < real_of_vreal b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. small\n     {[a, b]\\<^sub>\\<circ> |a b.\n      [a, b]\\<^sub>\\<circ>\n      \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                          2\\<^sub>\\<nat> \\<and>\n      real_of_vreal a < real_of_vreal b}", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. small\n     {[a, b]\\<^sub>\\<circ> |a b.\n      [a, b]\\<^sub>\\<circ>\n      \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                          2\\<^sub>\\<nat> \\<and>\n      real_of_vreal a < real_of_vreal b}", "have small: \"small {[a, b]\\<^sub>\\<circ> | a b. [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. small\n     {[a, b]\\<^sub>\\<circ> |a b.\n      [a, b]\\<^sub>\\<circ>\n      \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                          2\\<^sub>\\<nat>}", "by simp"], ["proof (state)\nthis:\n  small\n   {[a, b]\\<^sub>\\<circ> |a b.\n    [a, b]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                        2\\<^sub>\\<nat>}\n\ngoal (1 subgoal):\n 1. small\n     {[a, b]\\<^sub>\\<circ> |a b.\n      [a, b]\\<^sub>\\<circ>\n      \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                          2\\<^sub>\\<nat> \\<and>\n      real_of_vreal a < real_of_vreal b}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. small\n     {[a, b]\\<^sub>\\<circ> |a b.\n      [a, b]\\<^sub>\\<circ>\n      \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                          2\\<^sub>\\<nat> \\<and>\n      real_of_vreal a < real_of_vreal b}", "by (rule smaller_than_small[OF small]) auto"], ["proof (state)\nthis:\n  small\n   {[a, b]\\<^sub>\\<circ> |a b.\n    [a, b]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                        2\\<^sub>\\<nat> \\<and>\n    real_of_vreal a < real_of_vreal b}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vreal_ls_transfer[transfer_rule]:\n  includes lifting_syntax\n  shows \"(cr_vreal ===> cr_vreal ===> (=)) vreal_ls' (<)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cr_vreal ===> cr_vreal ===> (=)) vreal_ls' (<)", "by (intro rel_funI, unfold cr_scalar_def cr_vreal_def vreal_ls_def)\n    (auto simp: nat_omega_simps)"], ["", "text\\<open>Subtraction.\\<close>"], ["", "definition vreal_minus :: V \n  where \"vreal_minus =\n    (\\<lambda>x\\<in>\\<^sub>\\<circ>\\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>. (real_of_vreal (x\\<lparr>0\\<^sub>\\<nat>\\<rparr>) - real_of_vreal (x\\<lparr>1\\<^sub>\\<nat>\\<rparr>))\\<^sub>\\<real>)\""], ["", "abbreviation vreal_minus_app (infixl \"-\\<^sub>\\<real>\" 65) \n  where \"vreal_minus_app a b \\<equiv> vreal_minus\\<lparr>a, b\\<rparr>\\<^sub>\\<bullet>\""], ["", "lemma vreal_minus_transfer[transfer_rule]: \n  includes lifting_syntax\n  shows \"(cr_vreal ===> cr_vreal ===> cr_vreal) (-\\<^sub>\\<real>) (-)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cr_vreal ===> cr_vreal ===> cr_vreal) (-\\<^sub>\\<real>) (-)", "using vreal_fpair_in_fproduct_vreal"], ["proof (prove)\nusing this:\n  [?a\\<^sub>\\<real>, ?b\\<^sub>\\<real>]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. (cr_vreal ===> cr_vreal ===> cr_vreal) (-\\<^sub>\\<real>) (-)", "by (intro rel_funI, unfold vreal_minus_def cr_vreal_def cr_scalar_def) \n    (simp add: nat_omega_simps)"], ["", "subsubsection\\<open>Axioms of an ordered field with the least upper bound property.\\<close>"], ["", "text\\<open>\nThe exposition follows the Definitions 2.2.1 and 2.2.3 from \nthe textbook \\<open>The Real Numbers and Real Analysis\\<close> by E. Bloch\n\\cite{bloch_real_2010}.\n\\<close>"], ["", "lemma vreal_zero_closed: \"0\\<^sub>\\<real> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0\\<^sub>\\<real> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. 0\\<^sub>\\<real> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "have \"(0::real) \\<in> UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<in> UNIV", "by simp"], ["proof (state)\nthis:\n  0 \\<in> UNIV\n\ngoal (1 subgoal):\n 1. 0\\<^sub>\\<real> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "from this[untransferred]"], ["proof (chain)\npicking this:\n  0\\<^sub>\\<real> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "show ?thesis"], ["proof (prove)\nusing this:\n  0\\<^sub>\\<real> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. 0\\<^sub>\\<real> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "."], ["proof (state)\nthis:\n  0\\<^sub>\\<real> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vreal_one_closed: \"1\\<^sub>\\<real> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1\\<^sub>\\<real> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. 1\\<^sub>\\<real> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "have \"(1::real) \\<in> UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<in> UNIV", "by simp"], ["proof (state)\nthis:\n  1 \\<in> UNIV\n\ngoal (1 subgoal):\n 1. 1\\<^sub>\\<real> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "from this[untransferred]"], ["proof (chain)\npicking this:\n  1\\<^sub>\\<real> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "show ?thesis"], ["proof (prove)\nusing this:\n  1\\<^sub>\\<real> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. 1\\<^sub>\\<real> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "."], ["proof (state)\nthis:\n  1\\<^sub>\\<real> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vreal_plus_closed: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" \n  shows \"x +\\<^sub>\\<real> y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<real> y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<real> y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "have \"x' + y' \\<in> UNIV\" for x' y' :: real"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' + y' \\<in> UNIV", "by simp"], ["proof (state)\nthis:\n  ?x' + ?y' \\<in> UNIV\n\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<real> y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x +\\<^sub>\\<real> y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "show ?thesis"], ["proof (prove)\nusing this:\n  x +\\<^sub>\\<real> y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<real> y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "."], ["proof (state)\nthis:\n  x +\\<^sub>\\<real> y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vreal_uminus_closed: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\"\n  shows \"-\\<^sub>\\<real> x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. -\\<^sub>\\<real> x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. -\\<^sub>\\<real> x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "have \"-x' \\<in> UNIV\" for x' :: real"], ["proof (prove)\ngoal (1 subgoal):\n 1. - x' \\<in> UNIV", "by simp"], ["proof (state)\nthis:\n  - ?x' \\<in> UNIV\n\ngoal (1 subgoal):\n 1. -\\<^sub>\\<real> x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  -\\<^sub>\\<real> x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "show ?thesis"], ["proof (prove)\nusing this:\n  -\\<^sub>\\<real> x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. -\\<^sub>\\<real> x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "."], ["proof (state)\nthis:\n  -\\<^sub>\\<real> x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vreal_mult_closed:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" \n  shows \"x *\\<^sub>\\<real> y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<real> y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<real> y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "have \"x' * y' \\<in> UNIV\" for x' y' :: real"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' * y' \\<in> UNIV", "by simp"], ["proof (state)\nthis:\n  ?x' * ?y' \\<in> UNIV\n\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<real> y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x *\\<^sub>\\<real> y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "show ?thesis"], ["proof (prove)\nusing this:\n  x *\\<^sub>\\<real> y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<real> y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "."], ["proof (state)\nthis:\n  x *\\<^sub>\\<real> y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vreal_inverse_closed: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\"\n  shows \"x\\<inverse>\\<^sub>\\<real> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<inverse>\\<^sub>\\<real> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x\\<inverse>\\<^sub>\\<real> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "have \"inverse x' \\<in> UNIV\" for x' :: real"], ["proof (prove)\ngoal (1 subgoal):\n 1. inverse x' \\<in> UNIV", "by simp"], ["proof (state)\nthis:\n  inverse ?x' \\<in> UNIV\n\ngoal (1 subgoal):\n 1. x\\<inverse>\\<^sub>\\<real> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x\\<inverse>\\<^sub>\\<real> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "show ?thesis"], ["proof (prove)\nusing this:\n  x\\<inverse>\\<^sub>\\<real> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. x\\<inverse>\\<^sub>\\<real> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "."], ["proof (state)\nthis:\n  x\\<inverse>\\<^sub>\\<real> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Associative Law for Addition: Definition 2.2.1.a.\\<close>"], ["", "lemma vreal_assoc_law_addition: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" and \"z \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" \n  shows \"(x +\\<^sub>\\<real> y) +\\<^sub>\\<real> z = x +\\<^sub>\\<real> (y +\\<^sub>\\<real> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<real> y +\\<^sub>\\<real> z =\n    x +\\<^sub>\\<real> (y +\\<^sub>\\<real> z)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<real> y +\\<^sub>\\<real> z =\n    x +\\<^sub>\\<real> (y +\\<^sub>\\<real> z)", "have \"(x' + y') + z' = x' + (y' + z')\" for x' y' z' :: real"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' + y' + z' = x' + (y' + z')", "by simp"], ["proof (state)\nthis:\n  ?x' + ?y' + ?z' = ?x' + (?y' + ?z')\n\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<real> y +\\<^sub>\\<real> z =\n    x +\\<^sub>\\<real> (y +\\<^sub>\\<real> z)", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x +\\<^sub>\\<real> y +\\<^sub>\\<real> z =\n  x +\\<^sub>\\<real> (y +\\<^sub>\\<real> z)", "show ?thesis"], ["proof (prove)\nusing this:\n  x +\\<^sub>\\<real> y +\\<^sub>\\<real> z =\n  x +\\<^sub>\\<real> (y +\\<^sub>\\<real> z)\n\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<real> y +\\<^sub>\\<real> z =\n    x +\\<^sub>\\<real> (y +\\<^sub>\\<real> z)", "."], ["proof (state)\nthis:\n  x +\\<^sub>\\<real> y +\\<^sub>\\<real> z =\n  x +\\<^sub>\\<real> (y +\\<^sub>\\<real> z)\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Commutative Law for Addition: Definition 2.2.1.b.\\<close>"], ["", "lemma vreal_commutative_law_addition:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" \n  shows \"x +\\<^sub>\\<real> y = y +\\<^sub>\\<real> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<real> y = y +\\<^sub>\\<real> x", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<real> y = y +\\<^sub>\\<real> x", "have \"(x' + y') = y' + x' \" for x' y' :: real"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' + y' = y' + x'", "by simp"], ["proof (state)\nthis:\n  ?x' + ?y' = ?y' + ?x'\n\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<real> y = y +\\<^sub>\\<real> x", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x +\\<^sub>\\<real> y = y +\\<^sub>\\<real> x", "show ?thesis"], ["proof (prove)\nusing this:\n  x +\\<^sub>\\<real> y = y +\\<^sub>\\<real> x\n\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<real> y = y +\\<^sub>\\<real> x", "."], ["proof (state)\nthis:\n  x +\\<^sub>\\<real> y = y +\\<^sub>\\<real> x\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Identity Law for Addition: Definition 2.2.1.c.\\<close>"], ["", "lemma vreal_identity_law_addition:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\"\n  shows \"x +\\<^sub>\\<real> 0\\<^sub>\\<real> = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<real> 0\\<^sub>\\<real> = x", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<real> 0\\<^sub>\\<real> = x", "have \"x' + 0 = x'\" for x' :: real"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' + 0 = x'", "by simp"], ["proof (state)\nthis:\n  ?x' + 0 = ?x'\n\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<real> 0\\<^sub>\\<real> = x", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x +\\<^sub>\\<real> 0\\<^sub>\\<real> = x", "show ?thesis"], ["proof (prove)\nusing this:\n  x +\\<^sub>\\<real> 0\\<^sub>\\<real> = x\n\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<real> 0\\<^sub>\\<real> = x", "."], ["proof (state)\nthis:\n  x +\\<^sub>\\<real> 0\\<^sub>\\<real> = x\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Inverses Law for Addition: Definition 2.2.1.d.\\<close>"], ["", "lemma vreal_inverses_law_addition:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\"\n  shows \"x +\\<^sub>\\<real> (-\\<^sub>\\<real> x) = 0\\<^sub>\\<real>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<real> -\\<^sub>\\<real> x = 0\\<^sub>\\<real>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<real> -\\<^sub>\\<real> x = 0\\<^sub>\\<real>", "have \"x' + (-x') = 0\" for x' :: real"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' + - x' = 0", "by simp"], ["proof (state)\nthis:\n  ?x' + - ?x' = 0\n\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<real> -\\<^sub>\\<real> x = 0\\<^sub>\\<real>", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x +\\<^sub>\\<real> -\\<^sub>\\<real> x = 0\\<^sub>\\<real>", "show ?thesis"], ["proof (prove)\nusing this:\n  x +\\<^sub>\\<real> -\\<^sub>\\<real> x = 0\\<^sub>\\<real>\n\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<real> -\\<^sub>\\<real> x = 0\\<^sub>\\<real>", "."], ["proof (state)\nthis:\n  x +\\<^sub>\\<real> -\\<^sub>\\<real> x = 0\\<^sub>\\<real>\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Associative Law for Multiplication: Definition 2.2.1.e.\\<close>"], ["", "lemma vreal_assoc_law_multiplication: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" and \"z \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\"\n  shows \"(x *\\<^sub>\\<real> y) *\\<^sub>\\<real> z = x *\\<^sub>\\<real> (y *\\<^sub>\\<real> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<real> y *\\<^sub>\\<real> z =\n    x *\\<^sub>\\<real> (y *\\<^sub>\\<real> z)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<real> y *\\<^sub>\\<real> z =\n    x *\\<^sub>\\<real> (y *\\<^sub>\\<real> z)", "have \"(x' * y') * z' = x' * (y' * z')\" for x' y' z' :: real"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' * y' * z' = x' * (y' * z')", "by simp"], ["proof (state)\nthis:\n  ?x' * ?y' * ?z' = ?x' * (?y' * ?z')\n\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<real> y *\\<^sub>\\<real> z =\n    x *\\<^sub>\\<real> (y *\\<^sub>\\<real> z)", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x *\\<^sub>\\<real> y *\\<^sub>\\<real> z =\n  x *\\<^sub>\\<real> (y *\\<^sub>\\<real> z)", "show ?thesis"], ["proof (prove)\nusing this:\n  x *\\<^sub>\\<real> y *\\<^sub>\\<real> z =\n  x *\\<^sub>\\<real> (y *\\<^sub>\\<real> z)\n\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<real> y *\\<^sub>\\<real> z =\n    x *\\<^sub>\\<real> (y *\\<^sub>\\<real> z)", "."], ["proof (state)\nthis:\n  x *\\<^sub>\\<real> y *\\<^sub>\\<real> z =\n  x *\\<^sub>\\<real> (y *\\<^sub>\\<real> z)\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Commutative Law for Multiplication: Definition 2.2.1.f.\\<close>"], ["", "lemma vreal_commutative_law_multiplication:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" \n  shows \"x *\\<^sub>\\<real> y = y *\\<^sub>\\<real> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<real> y = y *\\<^sub>\\<real> x", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<real> y = y *\\<^sub>\\<real> x", "have \"(x' * y') = y' * x' \" for x' y' :: real"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' * y' = y' * x'", "by simp"], ["proof (state)\nthis:\n  ?x' * ?y' = ?y' * ?x'\n\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<real> y = y *\\<^sub>\\<real> x", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x *\\<^sub>\\<real> y = y *\\<^sub>\\<real> x", "show ?thesis"], ["proof (prove)\nusing this:\n  x *\\<^sub>\\<real> y = y *\\<^sub>\\<real> x\n\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<real> y = y *\\<^sub>\\<real> x", "."], ["proof (state)\nthis:\n  x *\\<^sub>\\<real> y = y *\\<^sub>\\<real> x\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Identity Law for Multiplication: Definition 2.2.1.g.\\<close>"], ["", "lemma vreal_identity_law_multiplication:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\"\n  shows \"x *\\<^sub>\\<real> 1\\<^sub>\\<real> = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<real> 1\\<^sub>\\<real> = x", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<real> 1\\<^sub>\\<real> = x", "have \"x' * 1 = x'\" for x' :: real"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' * 1 = x'", "by simp"], ["proof (state)\nthis:\n  ?x' * 1 = ?x'\n\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<real> 1\\<^sub>\\<real> = x", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x *\\<^sub>\\<real> 1\\<^sub>\\<real> = x", "show ?thesis"], ["proof (prove)\nusing this:\n  x *\\<^sub>\\<real> 1\\<^sub>\\<real> = x\n\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<real> 1\\<^sub>\\<real> = x", "."], ["proof (state)\nthis:\n  x *\\<^sub>\\<real> 1\\<^sub>\\<real> = x\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Inverses Law for Multiplication: Definition 2.2.1.h.\\<close>"], ["", "lemma vreal_inverses_law_multiplication:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" and \"x \\<noteq> 0\\<^sub>\\<real>\" \n  shows \"x *\\<^sub>\\<real> x\\<inverse>\\<^sub>\\<real> = 1\\<^sub>\\<real>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<real> x\\<inverse>\\<^sub>\\<real> = 1\\<^sub>\\<real>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<real> x\\<inverse>\\<^sub>\\<real> = 1\\<^sub>\\<real>", "have \"x' \\<noteq> 0 \\<Longrightarrow> x' * inverse x' = 1\" for x' :: real"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' \\<noteq> 0 \\<Longrightarrow> x' * inverse x' = 1", "by simp"], ["proof (state)\nthis:\n  ?x' \\<noteq> 0 \\<Longrightarrow> ?x' * inverse ?x' = 1\n\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<real> x\\<inverse>\\<^sub>\\<real> = 1\\<^sub>\\<real>", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x *\\<^sub>\\<real> x\\<inverse>\\<^sub>\\<real> = 1\\<^sub>\\<real>", "show ?thesis"], ["proof (prove)\nusing this:\n  x *\\<^sub>\\<real> x\\<inverse>\\<^sub>\\<real> = 1\\<^sub>\\<real>\n\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<real> x\\<inverse>\\<^sub>\\<real> = 1\\<^sub>\\<real>", "."], ["proof (state)\nthis:\n  x *\\<^sub>\\<real> x\\<inverse>\\<^sub>\\<real> = 1\\<^sub>\\<real>\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Distributive Law: Definition 2.2.1.i.\\<close>"], ["", "lemma vreal_distributive_law:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" and \"z \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\"\n  shows \"x *\\<^sub>\\<real> (y +\\<^sub>\\<real> z) = x *\\<^sub>\\<real> y +\\<^sub>\\<real> x *\\<^sub>\\<real> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<real> (y +\\<^sub>\\<real> z) =\n    x *\\<^sub>\\<real> y +\\<^sub>\\<real> x *\\<^sub>\\<real> z", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<real> (y +\\<^sub>\\<real> z) =\n    x *\\<^sub>\\<real> y +\\<^sub>\\<real> x *\\<^sub>\\<real> z", "have \"x' * (y' + z') = (x' * y') + (x' * z')\" for x' y' z' :: real"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' * (y' + z') = x' * y' + x' * z'", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  ?x' * (?y' + ?z') = ?x' * ?y' + ?x' * ?z'\n\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<real> (y +\\<^sub>\\<real> z) =\n    x *\\<^sub>\\<real> y +\\<^sub>\\<real> x *\\<^sub>\\<real> z", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x *\\<^sub>\\<real> (y +\\<^sub>\\<real> z) =\n  x *\\<^sub>\\<real> y +\\<^sub>\\<real> x *\\<^sub>\\<real> z", "show ?thesis"], ["proof (prove)\nusing this:\n  x *\\<^sub>\\<real> (y +\\<^sub>\\<real> z) =\n  x *\\<^sub>\\<real> y +\\<^sub>\\<real> x *\\<^sub>\\<real> z\n\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<real> (y +\\<^sub>\\<real> z) =\n    x *\\<^sub>\\<real> y +\\<^sub>\\<real> x *\\<^sub>\\<real> z", "."], ["proof (state)\nthis:\n  x *\\<^sub>\\<real> (y +\\<^sub>\\<real> z) =\n  x *\\<^sub>\\<real> y +\\<^sub>\\<real> x *\\<^sub>\\<real> z\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Trichotomy Law: Definition 2.2.1.j.\\<close>"], ["", "lemma vreal_trichotomy_law:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" \"y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\"\n  shows \n    \"(x <\\<^sub>\\<real> y \\<and> ~(x = y) \\<and> ~(y <\\<^sub>\\<real> x)) \\<or> \n    (~(x <\\<^sub>\\<real> y) \\<and> x = y \\<and> ~(y <\\<^sub>\\<real> x)) \\<or>\n    (~(x <\\<^sub>\\<real> y) \\<and> ~(x = y) \\<and> y <\\<^sub>\\<real> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x <\\<^sub>\\<real> y \\<and>\n    x \\<noteq> y \\<and>\n    [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vreal_ls \\<or>\n    [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vreal_ls \\<and>\n    x = y \\<and> [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vreal_ls \\<or>\n    [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vreal_ls \\<and>\n    x \\<noteq> y \\<and> y <\\<^sub>\\<real> x", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x <\\<^sub>\\<real> y \\<and>\n    x \\<noteq> y \\<and>\n    [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vreal_ls \\<or>\n    [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vreal_ls \\<and>\n    x = y \\<and> [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vreal_ls \\<or>\n    [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vreal_ls \\<and>\n    x \\<noteq> y \\<and> y <\\<^sub>\\<real> x", "have \"(x' < y' \\<and> ~(x' = y') \\<and> ~(y' < x')) \\<or> \n    (~(x' < y') \\<and> x' = y' \\<and> ~(y' < x')) \\<or>\n    (~(x' < y') \\<and> ~(x' = y') \\<and> y' < x')\"\n    for x' y' z' :: real"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' < y' \\<and> x' \\<noteq> y' \\<and> \\<not> y' < x' \\<or>\n    \\<not> x' < y' \\<and> x' = y' \\<and> \\<not> y' < x' \\<or>\n    \\<not> x' < y' \\<and> x' \\<noteq> y' \\<and> y' < x'", "by auto"], ["proof (state)\nthis:\n  ?x' < ?y' \\<and> ?x' \\<noteq> ?y' \\<and> \\<not> ?y' < ?x' \\<or>\n  \\<not> ?x' < ?y' \\<and> ?x' = ?y' \\<and> \\<not> ?y' < ?x' \\<or>\n  \\<not> ?x' < ?y' \\<and> ?x' \\<noteq> ?y' \\<and> ?y' < ?x'\n\ngoal (1 subgoal):\n 1. x <\\<^sub>\\<real> y \\<and>\n    x \\<noteq> y \\<and>\n    [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vreal_ls \\<or>\n    [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vreal_ls \\<and>\n    x = y \\<and> [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vreal_ls \\<or>\n    [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vreal_ls \\<and>\n    x \\<noteq> y \\<and> y <\\<^sub>\\<real> x", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x <\\<^sub>\\<real> y \\<and>\n  x \\<noteq> y \\<and>\n  [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vreal_ls \\<or>\n  [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vreal_ls \\<and>\n  x = y \\<and> [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vreal_ls \\<or>\n  [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vreal_ls \\<and>\n  x \\<noteq> y \\<and> y <\\<^sub>\\<real> x", "show ?thesis"], ["proof (prove)\nusing this:\n  x <\\<^sub>\\<real> y \\<and>\n  x \\<noteq> y \\<and>\n  [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vreal_ls \\<or>\n  [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vreal_ls \\<and>\n  x = y \\<and> [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vreal_ls \\<or>\n  [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vreal_ls \\<and>\n  x \\<noteq> y \\<and> y <\\<^sub>\\<real> x\n\ngoal (1 subgoal):\n 1. x <\\<^sub>\\<real> y \\<and>\n    x \\<noteq> y \\<and>\n    [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vreal_ls \\<or>\n    [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vreal_ls \\<and>\n    x = y \\<and> [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vreal_ls \\<or>\n    [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vreal_ls \\<and>\n    x \\<noteq> y \\<and> y <\\<^sub>\\<real> x", "."], ["proof (state)\nthis:\n  x <\\<^sub>\\<real> y \\<and>\n  x \\<noteq> y \\<and>\n  [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vreal_ls \\<or>\n  [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vreal_ls \\<and>\n  x = y \\<and> [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vreal_ls \\<or>\n  [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vreal_ls \\<and>\n  x \\<noteq> y \\<and> y <\\<^sub>\\<real> x\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Transitive Law: Definition 2.2.1.k.\\<close>"], ["", "lemma vreal_transitive_law:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" \n    and \"y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" \n    and \"z \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" \n    and \"x <\\<^sub>\\<real> y\" and \"y <\\<^sub>\\<real> z\"\n  shows \"x <\\<^sub>\\<real> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x <\\<^sub>\\<real> z", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x <\\<^sub>\\<real> z", "have \"x' < y' \\<Longrightarrow> y' < z' \\<Longrightarrow> x' < z'\" for x' y' z' :: real"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x' < y'; y' < z'\\<rbrakk> \\<Longrightarrow> x' < z'", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>?x' < ?y'; ?y' < ?z'\\<rbrakk> \\<Longrightarrow> ?x' < ?z'\n\ngoal (1 subgoal):\n 1. x <\\<^sub>\\<real> z", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x <\\<^sub>\\<real> z", "show ?thesis"], ["proof (prove)\nusing this:\n  x <\\<^sub>\\<real> z\n\ngoal (1 subgoal):\n 1. x <\\<^sub>\\<real> z", "."], ["proof (state)\nthis:\n  x <\\<^sub>\\<real> z\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Addition Law of Order: Definition 2.2.1.l.\\<close>"], ["", "lemma vreal_addition_law_of_order:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" and \"z \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" and \"x <\\<^sub>\\<real> y\"\n  shows \"x +\\<^sub>\\<real> z <\\<^sub>\\<real> y +\\<^sub>\\<real> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<real> z <\\<^sub>\\<real> y +\\<^sub>\\<real> z", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<real> z <\\<^sub>\\<real> y +\\<^sub>\\<real> z", "have \"x' < y' \\<Longrightarrow> x' + z' < y' + z'\" for x' y' z' :: real"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' < y' \\<Longrightarrow> x' + z' < y' + z'", "by simp"], ["proof (state)\nthis:\n  ?x' < ?y' \\<Longrightarrow> ?x' + ?z' < ?y' + ?z'\n\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<real> z <\\<^sub>\\<real> y +\\<^sub>\\<real> z", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x +\\<^sub>\\<real> z <\\<^sub>\\<real> y +\\<^sub>\\<real> z", "show ?thesis"], ["proof (prove)\nusing this:\n  x +\\<^sub>\\<real> z <\\<^sub>\\<real> y +\\<^sub>\\<real> z\n\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<real> z <\\<^sub>\\<real> y +\\<^sub>\\<real> z", "."], ["proof (state)\nthis:\n  x +\\<^sub>\\<real> z <\\<^sub>\\<real> y +\\<^sub>\\<real> z\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Multiplication Law of Order: Definition 2.2.1.m.\\<close>"], ["", "lemma vreal_multiplication_law_of_order:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" \n    and \"y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" \n    and \"z \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" \n    and \"x <\\<^sub>\\<real> y\" \n    and \"0\\<^sub>\\<real> <\\<^sub>\\<real> z\"\n  shows \"x *\\<^sub>\\<real> z <\\<^sub>\\<real> y *\\<^sub>\\<real> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<real> z <\\<^sub>\\<real> y *\\<^sub>\\<real> z", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<real> z <\\<^sub>\\<real> y *\\<^sub>\\<real> z", "have \"x' < y' \\<Longrightarrow> 0 < z' \\<Longrightarrow> x' * z' < y' * z'\" for x' y' z' :: real"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x' < y'; 0 < z'\\<rbrakk> \\<Longrightarrow> x' * z' < y' * z'", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>?x' < ?y'; 0 < ?z'\\<rbrakk>\n  \\<Longrightarrow> ?x' * ?z' < ?y' * ?z'\n\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<real> z <\\<^sub>\\<real> y *\\<^sub>\\<real> z", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x *\\<^sub>\\<real> z <\\<^sub>\\<real> y *\\<^sub>\\<real> z", "show ?thesis"], ["proof (prove)\nusing this:\n  x *\\<^sub>\\<real> z <\\<^sub>\\<real> y *\\<^sub>\\<real> z\n\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<real> z <\\<^sub>\\<real> y *\\<^sub>\\<real> z", "."], ["proof (state)\nthis:\n  x *\\<^sub>\\<real> z <\\<^sub>\\<real> y *\\<^sub>\\<real> z\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Non-Triviality: Definition 2.2.1.n.\\<close>"], ["", "lemma vreal_non_triviality: \"0\\<^sub>\\<real> \\<noteq> 1\\<^sub>\\<real>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0\\<^sub>\\<real> \\<noteq> 1\\<^sub>\\<real>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. 0\\<^sub>\\<real> \\<noteq> 1\\<^sub>\\<real>", "have \"0 \\<noteq> (1::real)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<noteq> 1", "by simp"], ["proof (state)\nthis:\n  0 \\<noteq> 1\n\ngoal (1 subgoal):\n 1. 0\\<^sub>\\<real> \\<noteq> 1\\<^sub>\\<real>", "from this[untransferred]"], ["proof (chain)\npicking this:\n  0\\<^sub>\\<real> \\<noteq> 1\\<^sub>\\<real>", "show ?thesis"], ["proof (prove)\nusing this:\n  0\\<^sub>\\<real> \\<noteq> 1\\<^sub>\\<real>\n\ngoal (1 subgoal):\n 1. 0\\<^sub>\\<real> \\<noteq> 1\\<^sub>\\<real>", "."], ["proof (state)\nthis:\n  0\\<^sub>\\<real> \\<noteq> 1\\<^sub>\\<real>\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Least upper bound property: Definition 2.2.3.\\<close>"], ["", "lemma least_upper_bound_property:\n  defines \"vreal_ub S M \\<equiv> (S \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<and> M \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<and> (\\<forall>x\\<in>\\<^sub>\\<circ>S. x \\<le>\\<^sub>\\<real> M))\"\n  assumes \"A \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" and \"A \\<noteq> 0\" and \"\\<exists>M. vreal_ub A M\"\n  obtains M where \"vreal_ub A M\" and \"\\<And>T. vreal_ub A T \\<Longrightarrow> M \\<le>\\<^sub>\\<real> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>M.\n        \\<lbrakk>vreal_ub A M;\n         \\<And>T.\n            vreal_ub A T \\<Longrightarrow> M \\<le>\\<^sub>\\<real> T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>M.\n        \\<lbrakk>vreal_ub A M;\n         \\<And>T.\n            vreal_ub A T \\<Longrightarrow> M \\<le>\\<^sub>\\<real> T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note complete_real = \n    complete_real[\n      untransferred, of \\<open>elts A\\<close>, unfolded vnumber_simps, OF assms(2)\n      ]"], ["proof (state)\nthis:\n  \\<lbrakk>\\<exists>x\\<in>elts \\<real>\\<^sub>\\<circ>.\n              x \\<in>\\<^sub>\\<circ> A;\n   \\<exists>z\\<in>elts \\<real>\\<^sub>\\<circ>.\n      \\<forall>x\\<in>elts A. x \\<le>\\<^sub>\\<real> z\\<rbrakk>\n  \\<Longrightarrow> \\<exists>y\\<in>elts \\<real>\\<^sub>\\<circ>.\n                       (\\<forall>x\\<in>elts A.\n                           x \\<le>\\<^sub>\\<real> y) \\<and>\n                       (\\<forall>z\\<in>elts \\<real>\\<^sub>\\<circ>.\n                           (\\<forall>x\\<in>elts A.\n                               x \\<le>\\<^sub>\\<real> z) \\<longrightarrow>\n                           y \\<le>\\<^sub>\\<real> z)\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        \\<lbrakk>vreal_ub A M;\n         \\<And>T.\n            vreal_ub A T \\<Longrightarrow> M \\<le>\\<^sub>\\<real> T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms"], ["proof (chain)\npicking this:\n  vreal_ub ?S ?M \\<equiv>\n  ?S \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<and>\n  ?M \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<and>\n  (\\<forall>x\\<in>elts ?S. x \\<le>\\<^sub>\\<real> ?M)\n  A \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  A \\<noteq> []\\<^sub>\\<circ>\n  \\<exists>M. vreal_ub A M", "obtain x where \"x \\<in>\\<^sub>\\<circ> A\""], ["proof (prove)\nusing this:\n  vreal_ub ?S ?M \\<equiv>\n  ?S \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<and>\n  ?M \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<and>\n  (\\<forall>x\\<in>elts ?S. x \\<le>\\<^sub>\\<real> ?M)\n  A \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  A \\<noteq> []\\<^sub>\\<circ>\n  \\<exists>M. vreal_ub A M\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  x \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        \\<lbrakk>vreal_ub A M;\n         \\<And>T.\n            vreal_ub A T \\<Longrightarrow> M \\<le>\\<^sub>\\<real> T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  x \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        \\<lbrakk>vreal_ub A M;\n         \\<And>T.\n            vreal_ub A T \\<Longrightarrow> M \\<le>\\<^sub>\\<real> T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with assms"], ["proof (chain)\npicking this:\n  vreal_ub ?S ?M \\<equiv>\n  ?S \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<and>\n  ?M \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<and>\n  (\\<forall>x\\<in>elts ?S. x \\<le>\\<^sub>\\<real> ?M)\n  A \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  A \\<noteq> []\\<^sub>\\<circ>\n  \\<exists>M. vreal_ub A M\n  x \\<in>\\<^sub>\\<circ> A", "have \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  vreal_ub ?S ?M \\<equiv>\n  ?S \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<and>\n  ?M \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<and>\n  (\\<forall>x\\<in>elts ?S. x \\<le>\\<^sub>\\<real> ?M)\n  A \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  A \\<noteq> []\\<^sub>\\<circ>\n  \\<exists>M. vreal_ub A M\n  x \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "by auto"], ["proof (state)\nthis:\n  x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        \\<lbrakk>vreal_ub A M;\n         \\<And>T.\n            vreal_ub A T \\<Longrightarrow> M \\<le>\\<^sub>\\<real> T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  x \\<in>\\<^sub>\\<circ> A\n  x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "have 1: \"\\<exists>x\\<in>\\<^sub>\\<circ>\\<real>\\<^sub>\\<circ>. x \\<in>\\<^sub>\\<circ> A\""], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>\\<circ> A\n  x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>elts \\<real>\\<^sub>\\<circ>. x \\<in>\\<^sub>\\<circ> A", "by auto"], ["proof (state)\nthis:\n  \\<exists>x\\<in>elts \\<real>\\<^sub>\\<circ>. x \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        \\<lbrakk>vreal_ub A M;\n         \\<And>T.\n            vreal_ub A T \\<Longrightarrow> M \\<le>\\<^sub>\\<real> T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms"], ["proof (chain)\npicking this:\n  vreal_ub ?S ?M \\<equiv>\n  ?S \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<and>\n  ?M \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<and>\n  (\\<forall>x\\<in>elts ?S. x \\<le>\\<^sub>\\<real> ?M)\n  A \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  A \\<noteq> []\\<^sub>\\<circ>\n  \\<exists>M. vreal_ub A M", "have 2: \"\\<exists>x\\<in>\\<^sub>\\<circ>\\<real>\\<^sub>\\<circ>. \\<forall>y\\<in>\\<^sub>\\<circ>A. y \\<le>\\<^sub>\\<real> x\""], ["proof (prove)\nusing this:\n  vreal_ub ?S ?M \\<equiv>\n  ?S \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<and>\n  ?M \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<and>\n  (\\<forall>x\\<in>elts ?S. x \\<le>\\<^sub>\\<real> ?M)\n  A \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  A \\<noteq> []\\<^sub>\\<circ>\n  \\<exists>M. vreal_ub A M\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>elts \\<real>\\<^sub>\\<circ>.\n       \\<forall>y\\<in>elts A. y \\<le>\\<^sub>\\<real> x", "by auto"], ["proof (state)\nthis:\n  \\<exists>x\\<in>elts \\<real>\\<^sub>\\<circ>.\n     \\<forall>y\\<in>elts A. y \\<le>\\<^sub>\\<real> x\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        \\<lbrakk>vreal_ub A M;\n         \\<And>T.\n            vreal_ub A T \\<Longrightarrow> M \\<le>\\<^sub>\\<real> T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from complete_real[OF 1 2]"], ["proof (chain)\npicking this:\n  \\<exists>y\\<in>elts \\<real>\\<^sub>\\<circ>.\n     (\\<forall>x\\<in>elts A. x \\<le>\\<^sub>\\<real> y) \\<and>\n     (\\<forall>z\\<in>elts \\<real>\\<^sub>\\<circ>.\n         (\\<forall>x\\<in>elts A. x \\<le>\\<^sub>\\<real> z) \\<longrightarrow>\n         y \\<le>\\<^sub>\\<real> z)", "obtain M\n      where \"M \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" \n        and \"\\<And>x. x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow> x \\<le>\\<^sub>\\<real> M\" \n        and [simp]: \"\\<And>T. T \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<Longrightarrow> (\\<And>x. x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow> x \\<le>\\<^sub>\\<real> T) \\<Longrightarrow> M \\<le>\\<^sub>\\<real> T\""], ["proof (prove)\nusing this:\n  \\<exists>y\\<in>elts \\<real>\\<^sub>\\<circ>.\n     (\\<forall>x\\<in>elts A. x \\<le>\\<^sub>\\<real> y) \\<and>\n     (\\<forall>z\\<in>elts \\<real>\\<^sub>\\<circ>.\n         (\\<forall>x\\<in>elts A. x \\<le>\\<^sub>\\<real> z) \\<longrightarrow>\n         y \\<le>\\<^sub>\\<real> z)\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        \\<lbrakk>M \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>;\n         \\<And>x.\n            x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n            x \\<le>\\<^sub>\\<real> M;\n         \\<And>T.\n            \\<lbrakk>T \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>;\n             \\<And>x.\n                x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n                x \\<le>\\<^sub>\\<real> T\\<rbrakk>\n            \\<Longrightarrow> M \\<le>\\<^sub>\\<real> T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  M \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  ?x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow> ?x \\<le>\\<^sub>\\<real> M\n  \\<lbrakk>?T \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>;\n   \\<And>x.\n      x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n      x \\<le>\\<^sub>\\<real> ?T\\<rbrakk>\n  \\<Longrightarrow> M \\<le>\\<^sub>\\<real> ?T\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        \\<lbrakk>vreal_ub A M;\n         \\<And>T.\n            vreal_ub A T \\<Longrightarrow> M \\<le>\\<^sub>\\<real> T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with assms(2)"], ["proof (chain)\npicking this:\n  A \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  M \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  ?x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow> ?x \\<le>\\<^sub>\\<real> M\n  \\<lbrakk>?T \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>;\n   \\<And>x.\n      x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n      x \\<le>\\<^sub>\\<real> ?T\\<rbrakk>\n  \\<Longrightarrow> M \\<le>\\<^sub>\\<real> ?T", "have \"vreal_ub A M\""], ["proof (prove)\nusing this:\n  A \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  M \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  ?x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow> ?x \\<le>\\<^sub>\\<real> M\n  \\<lbrakk>?T \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>;\n   \\<And>x.\n      x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n      x \\<le>\\<^sub>\\<real> ?T\\<rbrakk>\n  \\<Longrightarrow> M \\<le>\\<^sub>\\<real> ?T\n\ngoal (1 subgoal):\n 1. vreal_ub A M", "unfolding vreal_ub_def"], ["proof (prove)\nusing this:\n  A \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  M \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  ?x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow> ?x \\<le>\\<^sub>\\<real> M\n  \\<lbrakk>?T \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>;\n   \\<And>x.\n      x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n      x \\<le>\\<^sub>\\<real> ?T\\<rbrakk>\n  \\<Longrightarrow> M \\<le>\\<^sub>\\<real> ?T\n\ngoal (1 subgoal):\n 1. A \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<and>\n    M \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<and>\n    (\\<forall>x\\<in>elts A. x \\<le>\\<^sub>\\<real> M)", "by simp"], ["proof (state)\nthis:\n  vreal_ub A M\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        \\<lbrakk>vreal_ub A M;\n         \\<And>T.\n            vreal_ub A T \\<Longrightarrow> M \\<le>\\<^sub>\\<real> T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  vreal_ub A M\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        \\<lbrakk>vreal_ub A M;\n         \\<And>T.\n            vreal_ub A T \\<Longrightarrow> M \\<le>\\<^sub>\\<real> T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"vreal_ub A T \\<Longrightarrow> M \\<le>\\<^sub>\\<real> T\" for T"], ["proof (prove)\ngoal (1 subgoal):\n 1. vreal_ub A T \\<Longrightarrow> M \\<le>\\<^sub>\\<real> T", "unfolding vreal_ub_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<and>\n    T \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<and>\n    (\\<forall>x\\<in>elts A. x \\<le>\\<^sub>\\<real> T) \\<Longrightarrow>\n    M \\<le>\\<^sub>\\<real> T", "by simp"], ["proof (state)\nthis:\n  vreal_ub A ?T \\<Longrightarrow> M \\<le>\\<^sub>\\<real> ?T\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        \\<lbrakk>vreal_ub A M;\n         \\<And>T.\n            vreal_ub A T \\<Longrightarrow> M \\<le>\\<^sub>\\<real> T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  vreal_ub A M\n  vreal_ub A ?T \\<Longrightarrow> M \\<le>\\<^sub>\\<real> ?T", "show ?thesis"], ["proof (prove)\nusing this:\n  vreal_ub A M\n  vreal_ub A ?T \\<Longrightarrow> M \\<le>\\<^sub>\\<real> ?T\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  vreal_ub A M\n  vreal_ub A ?T \\<Longrightarrow> M \\<le>\\<^sub>\\<real> ?T\n  \\<lbrakk>vreal_ub A ?M;\n   \\<And>T. vreal_ub A T \\<Longrightarrow> ?M \\<le>\\<^sub>\\<real> T\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Fundamental properties of other operations\\<close>"], ["", "text\\<open>Minus.\\<close>"], ["", "lemma vreal_minus_closed: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\"\n  shows \"x -\\<^sub>\\<real> y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x -\\<^sub>\\<real> y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x -\\<^sub>\\<real> y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "have \"x' - y' \\<in> UNIV\" for x' y' :: real"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' - y' \\<in> UNIV", "by simp"], ["proof (state)\nthis:\n  ?x' - ?y' \\<in> UNIV\n\ngoal (1 subgoal):\n 1. x -\\<^sub>\\<real> y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x -\\<^sub>\\<real> y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "show ?thesis"], ["proof (prove)\nusing this:\n  x -\\<^sub>\\<real> y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. x -\\<^sub>\\<real> y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "."], ["proof (state)\nthis:\n  x -\\<^sub>\\<real> y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vreal_minus_eq_plus_uminus: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\"\n  shows \"x -\\<^sub>\\<real> y = x +\\<^sub>\\<real> (-\\<^sub>\\<real> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x -\\<^sub>\\<real> y = x +\\<^sub>\\<real> -\\<^sub>\\<real> y", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x -\\<^sub>\\<real> y = x +\\<^sub>\\<real> -\\<^sub>\\<real> y", "have \"x' - y' = x' + (-y')\" for x' y' :: real"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' - y' = x' + - y'", "by simp"], ["proof (state)\nthis:\n  ?x' - ?y' = ?x' + - ?y'\n\ngoal (1 subgoal):\n 1. x -\\<^sub>\\<real> y = x +\\<^sub>\\<real> -\\<^sub>\\<real> y", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x -\\<^sub>\\<real> y = x +\\<^sub>\\<real> -\\<^sub>\\<real> y", "show ?thesis"], ["proof (prove)\nusing this:\n  x -\\<^sub>\\<real> y = x +\\<^sub>\\<real> -\\<^sub>\\<real> y\n\ngoal (1 subgoal):\n 1. x -\\<^sub>\\<real> y = x +\\<^sub>\\<real> -\\<^sub>\\<real> y", "."], ["proof (state)\nthis:\n  x -\\<^sub>\\<real> y = x +\\<^sub>\\<real> -\\<^sub>\\<real> y\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Unary minus.\\<close>"], ["", "lemma vreal_uminus_uminus: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" \n  shows \"x = -\\<^sub>\\<real> (-\\<^sub>\\<real> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = -\\<^sub>\\<real> (-\\<^sub>\\<real> x)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x = -\\<^sub>\\<real> (-\\<^sub>\\<real> x)", "have \"x' = -(-x')\" for x' :: real"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' = - (- x')", "by simp"], ["proof (state)\nthis:\n  ?x' = - (- ?x')\n\ngoal (1 subgoal):\n 1. x = -\\<^sub>\\<real> (-\\<^sub>\\<real> x)", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x = -\\<^sub>\\<real> (-\\<^sub>\\<real> x)", "show ?thesis"], ["proof (prove)\nusing this:\n  x = -\\<^sub>\\<real> (-\\<^sub>\\<real> x)\n\ngoal (1 subgoal):\n 1. x = -\\<^sub>\\<real> (-\\<^sub>\\<real> x)", "."], ["proof (state)\nthis:\n  x = -\\<^sub>\\<real> (-\\<^sub>\\<real> x)\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Multiplicative inverse.\\<close>"], ["", "lemma vreal_inverse_inverse: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" \n  shows \"x = (x\\<inverse>\\<^sub>\\<real>)\\<inverse>\\<^sub>\\<real>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = (x\\<inverse>\\<^sub>\\<real>)\\<inverse>\\<^sub>\\<real>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x = (x\\<inverse>\\<^sub>\\<real>)\\<inverse>\\<^sub>\\<real>", "have \"x' = inverse (inverse x')\" for x' :: real"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' = inverse (inverse x')", "by simp"], ["proof (state)\nthis:\n  ?x' = inverse (inverse ?x')\n\ngoal (1 subgoal):\n 1. x = (x\\<inverse>\\<^sub>\\<real>)\\<inverse>\\<^sub>\\<real>", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x = (x\\<inverse>\\<^sub>\\<real>)\\<inverse>\\<^sub>\\<real>", "show ?thesis"], ["proof (prove)\nusing this:\n  x = (x\\<inverse>\\<^sub>\\<real>)\\<inverse>\\<^sub>\\<real>\n\ngoal (1 subgoal):\n 1. x = (x\\<inverse>\\<^sub>\\<real>)\\<inverse>\\<^sub>\\<real>", "."], ["proof (state)\nthis:\n  x = (x\\<inverse>\\<^sub>\\<real>)\\<inverse>\\<^sub>\\<real>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Further properties\\<close>"], ["", "text\\<open>Addition.\\<close>"], ["", "global_interpretation vreal_plus: binop_onto \\<open>\\<real>\\<^sub>\\<circ>\\<close> vreal_plus"], ["proof (prove)\ngoal (1 subgoal):\n 1. binop_onto \\<real>\\<^sub>\\<circ> vreal_plus", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. binop_onto \\<real>\\<^sub>\\<circ> vreal_plus", "have binop: \"binop \\<real>\\<^sub>\\<circ> vreal_plus\""], ["proof (prove)\ngoal (1 subgoal):\n 1. binop \\<real>\\<^sub>\\<circ> vreal_plus", "proof(intro binopI nopI)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv vreal_plus\n 2. 2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>\n 3. \\<D>\\<^sub>\\<circ> vreal_plus =\n    \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n 4. \\<R>\\<^sub>\\<circ> vreal_plus\n    \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "show vsv: \"vsv vreal_plus\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv vreal_plus", "unfolding vreal_plus_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (\\<lambda>x\\<in>\\<^sub>\\<circ>\\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n2\\<^sub>\\<nat>.\n            (real_of_vreal (x\\<lparr>0\\<^sub>\\<nat>\\<rparr>) +\n             real_of_vreal (x\\<lparr>1\\<^sub>\\<nat>\\<rparr>))\\<^sub>\\<real>)", "by auto"], ["proof (state)\nthis:\n  vsv vreal_plus\n\ngoal (3 subgoals):\n 1. 2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>\n 2. \\<D>\\<^sub>\\<circ> vreal_plus =\n    \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n 3. \\<R>\\<^sub>\\<circ> vreal_plus\n    \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "interpret vsv vreal_plus"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv vreal_plus", "by (rule vsv)"], ["proof (state)\ngoal (3 subgoals):\n 1. 2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>\n 2. \\<D>\\<^sub>\\<circ> vreal_plus =\n    \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n 3. \\<R>\\<^sub>\\<circ> vreal_plus\n    \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "show \"2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>", "by simp"], ["proof (state)\nthis:\n  2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>\n\ngoal (2 subgoals):\n 1. \\<D>\\<^sub>\\<circ> vreal_plus =\n    \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n 2. \\<R>\\<^sub>\\<circ> vreal_plus\n    \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "show dom: \"\\<D>\\<^sub>\\<circ> vreal_plus = \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> vreal_plus =\n    \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>", "unfolding vreal_plus_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (\\<lambda>x\\<in>\\<^sub>\\<circ>\\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                                   2\\<^sub>\\<nat>.\n         (real_of_vreal (x\\<lparr>0\\<^sub>\\<nat>\\<rparr>) +\n          real_of_vreal (x\\<lparr>1\\<^sub>\\<nat>\\<rparr>))\\<^sub>\\<real>) =\n    \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>", "by simp"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> vreal_plus =\n  \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vreal_plus\n    \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "show \"\\<R>\\<^sub>\\<circ> vreal_plus \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vreal_plus\n    \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "proof(intro vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_plus \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_plus \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "assume \"y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_plus\""], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_plus\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_plus \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "then"], ["proof (chain)\npicking this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_plus", "obtain ab where \"ab \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\" and y_def: \"y = vreal_plus\\<lparr>ab\\<rparr>\""], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_plus\n\ngoal (1 subgoal):\n 1. (\\<And>ab.\n        \\<lbrakk>ab \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n  2\\<^sub>\\<nat>;\n         y = vreal_plus\\<lparr>ab\\<rparr>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding dom[symmetric]"], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_plus\n\ngoal (1 subgoal):\n 1. (\\<And>ab.\n        \\<lbrakk>ab \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> vreal_plus;\n         y = vreal_plus\\<lparr>ab\\<rparr>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  ab \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                         2\\<^sub>\\<nat>\n  y = vreal_plus\\<lparr>ab\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_plus \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "then"], ["proof (chain)\npicking this:\n  ab \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                         2\\<^sub>\\<nat>\n  y = vreal_plus\\<lparr>ab\\<rparr>", "obtain a b \n        where ab_def: \"ab = [a, b]\\<^sub>\\<circ>\" and a: \"a \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" and b: \"b \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  ab \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                         2\\<^sub>\\<nat>\n  y = vreal_plus\\<lparr>ab\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>ab = [a, b]\\<^sub>\\<circ>;\n         a \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>;\n         b \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  ab = [a, b]\\<^sub>\\<circ>\n  a \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  b \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_plus \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "then"], ["proof (chain)\npicking this:\n  ab = [a, b]\\<^sub>\\<circ>\n  a \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  b \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "show \"y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  ab = [a, b]\\<^sub>\\<circ>\n  a \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  b \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "by (simp add: vreal_plus_closed y_def)"], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> vreal_plus\n  \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  binop \\<real>\\<^sub>\\<circ> vreal_plus\n\ngoal (1 subgoal):\n 1. binop_onto \\<real>\\<^sub>\\<circ> vreal_plus", "interpret binop \\<open>\\<real>\\<^sub>\\<circ>\\<close> vreal_plus"], ["proof (prove)\ngoal (1 subgoal):\n 1. binop \\<real>\\<^sub>\\<circ> vreal_plus", "by (rule binop)"], ["proof (state)\ngoal (1 subgoal):\n 1. binop_onto \\<real>\\<^sub>\\<circ> vreal_plus", "show \"binop_onto \\<real>\\<^sub>\\<circ> vreal_plus\""], ["proof (prove)\ngoal (1 subgoal):\n 1. binop_onto \\<real>\\<^sub>\\<circ> vreal_plus", "proof(intro binop_ontoI')"], ["proof (state)\ngoal (2 subgoals):\n 1. binop \\<real>\\<^sub>\\<circ> vreal_plus\n 2. \\<real>\\<^sub>\\<circ>\n    \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_plus", "show \"binop \\<real>\\<^sub>\\<circ> vreal_plus\""], ["proof (prove)\ngoal (1 subgoal):\n 1. binop \\<real>\\<^sub>\\<circ> vreal_plus", "by (rule binop_axioms)"], ["proof (state)\nthis:\n  binop \\<real>\\<^sub>\\<circ> vreal_plus\n\ngoal (1 subgoal):\n 1. \\<real>\\<^sub>\\<circ>\n    \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_plus", "show \"\\<real>\\<^sub>\\<circ> \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_plus\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<real>\\<^sub>\\<circ>\n    \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_plus", "proof(intro vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_plus", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_plus", "assume prems: \"y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\""], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_plus", "moreover"], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_plus", "from vreal_zero vreal_zero_closed"], ["proof (chain)\npicking this:\n  0\\<^sub>\\<real> = []\\<^sub>\\<circ>\n  0\\<^sub>\\<real> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "have \"0 \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  0\\<^sub>\\<real> = []\\<^sub>\\<circ>\n  0\\<^sub>\\<real> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. []\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "by auto"], ["proof (state)\nthis:\n  []\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_plus", "ultimately"], ["proof (chain)\npicking this:\n  y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  []\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "have \"y +\\<^sub>\\<real> 0 \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_plus\""], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  []\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. y +\\<^sub>\\<real> []\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_plus", "by auto"], ["proof (state)\nthis:\n  y +\\<^sub>\\<real> []\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_plus\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_plus", "moreover"], ["proof (state)\nthis:\n  y +\\<^sub>\\<real> []\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_plus\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_plus", "from prems vreal_identity_law_addition"], ["proof (chain)\npicking this:\n  y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  ?x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<Longrightarrow>\n  ?x +\\<^sub>\\<real> 0\\<^sub>\\<real> = ?x", "have \"y = y +\\<^sub>\\<real> 0\""], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  ?x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<Longrightarrow>\n  ?x +\\<^sub>\\<real> 0\\<^sub>\\<real> = ?x\n\ngoal (1 subgoal):\n 1. y = y +\\<^sub>\\<real> []\\<^sub>\\<circ>", "by (simp add: vreal_zero)"], ["proof (state)\nthis:\n  y = y +\\<^sub>\\<real> []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_plus", "ultimately"], ["proof (chain)\npicking this:\n  y +\\<^sub>\\<real> []\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_plus\n  y = y +\\<^sub>\\<real> []\\<^sub>\\<circ>", "show \"y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_plus\""], ["proof (prove)\nusing this:\n  y +\\<^sub>\\<real> []\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_plus\n  y = y +\\<^sub>\\<real> []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_plus", "by simp"], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_plus\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<real>\\<^sub>\\<circ>\n  \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_plus\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  binop_onto \\<real>\\<^sub>\\<circ> vreal_plus\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Unary minus.\\<close>"], ["", "global_interpretation vreal_uminus: v11 vreal_uminus\n  rewrites \"\\<D>\\<^sub>\\<circ> vreal_uminus = \\<real>\\<^sub>\\<circ>\"\n    and \"\\<R>\\<^sub>\\<circ> vreal_uminus = \\<real>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v11 vreal_uminus &&&\n    \\<D>\\<^sub>\\<circ> vreal_uminus = \\<real>\\<^sub>\\<circ> &&&\n    \\<R>\\<^sub>\\<circ> vreal_uminus = \\<real>\\<^sub>\\<circ>", "proof-"], ["proof (state)\ngoal (3 subgoals):\n 1. v11 vreal_uminus\n 2. \\<D>\\<^sub>\\<circ> vreal_uminus = \\<real>\\<^sub>\\<circ>\n 3. \\<R>\\<^sub>\\<circ> vreal_uminus = \\<real>\\<^sub>\\<circ>", "show v11: \"v11 vreal_uminus\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v11 vreal_uminus", "proof(intro v11I)"], ["proof (state)\ngoal (2 subgoals):\n 1. vsv vreal_uminus\n 2. vsv (vreal_uminus\\<inverse>\\<^sub>\\<circ>)", "show vsv: \"vsv vreal_uminus\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv vreal_uminus", "unfolding vreal_uminus_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (\\<lambda>x\\<in>\\<^sub>\\<circ>\\<real>\\<^sub>\\<circ>.\n            (- real_of_vreal x)\\<^sub>\\<real>)", "by simp"], ["proof (state)\nthis:\n  vsv vreal_uminus\n\ngoal (1 subgoal):\n 1. vsv (vreal_uminus\\<inverse>\\<^sub>\\<circ>)", "interpret vsv vreal_uminus"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv vreal_uminus", "by (rule vsv)"], ["proof (state)\ngoal (1 subgoal):\n 1. vsv (vreal_uminus\\<inverse>\\<^sub>\\<circ>)", "show \"vsv (vreal_uminus\\<inverse>\\<^sub>\\<circ>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (vreal_uminus\\<inverse>\\<^sub>\\<circ>)", "proof(intro vsvI)"], ["proof (state)\ngoal (2 subgoals):\n 1. vbrelation (vreal_uminus\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> vreal_uminus\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> vreal_uminus\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "show \"vbrelation (vreal_uminus\\<inverse>\\<^sub>\\<circ>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vbrelation (vreal_uminus\\<inverse>\\<^sub>\\<circ>)", "by clarsimp"], ["proof (state)\nthis:\n  vbrelation (vreal_uminus\\<inverse>\\<^sub>\\<circ>)\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> vreal_uminus\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> vreal_uminus\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "fix a b c"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> vreal_uminus\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> vreal_uminus\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "assume prems: \"\\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> vreal_uminus\\<inverse>\\<^sub>\\<circ>\" \"\\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> vreal_uminus\\<inverse>\\<^sub>\\<circ>\""], ["proof (state)\nthis:\n  \\<langle>a, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> vreal_uminus\\<inverse>\\<^sub>\\<circ>\n  \\<langle>a, c\\<rangle>\n  \\<in>\\<^sub>\\<circ> vreal_uminus\\<inverse>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> vreal_uminus\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> vreal_uminus\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "then"], ["proof (chain)\npicking this:\n  \\<langle>a, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> vreal_uminus\\<inverse>\\<^sub>\\<circ>\n  \\<langle>a, c\\<rangle>\n  \\<in>\\<^sub>\\<circ> vreal_uminus\\<inverse>\\<^sub>\\<circ>", "have ba: \"\\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vreal_uminus\" and ca: \"\\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vreal_uminus\""], ["proof (prove)\nusing this:\n  \\<langle>a, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> vreal_uminus\\<inverse>\\<^sub>\\<circ>\n  \\<langle>a, c\\<rangle>\n  \\<in>\\<^sub>\\<circ> vreal_uminus\\<inverse>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vreal_uminus &&&\n    \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vreal_uminus", "by auto"], ["proof (state)\nthis:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vreal_uminus\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vreal_uminus\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> vreal_uminus\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> vreal_uminus\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "then"], ["proof (chain)\npicking this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vreal_uminus\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vreal_uminus", "have b: \"b \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" and c: \"c \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vreal_uminus\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vreal_uminus\n\ngoal (1 subgoal):\n 1. b \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> &&&\n    c \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "by (simp_all add: VLambda_iff2 vreal_uminus_def)"], ["proof (state)\nthis:\n  b \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  c \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> vreal_uminus\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> vreal_uminus\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "from ba ca"], ["proof (chain)\npicking this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vreal_uminus\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vreal_uminus", "have \"a = -\\<^sub>\\<real> b\" \"a = -\\<^sub>\\<real> c\""], ["proof (prove)\nusing this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vreal_uminus\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vreal_uminus\n\ngoal (1 subgoal):\n 1. a = -\\<^sub>\\<real> b &&& a = -\\<^sub>\\<real> c", "by simp_all"], ["proof (state)\nthis:\n  a = -\\<^sub>\\<real> b\n  a = -\\<^sub>\\<real> c\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> vreal_uminus\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> vreal_uminus\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "with ba ca b c"], ["proof (chain)\npicking this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vreal_uminus\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vreal_uminus\n  b \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  c \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  a = -\\<^sub>\\<real> b\n  a = -\\<^sub>\\<real> c", "show \"b = c\""], ["proof (prove)\nusing this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vreal_uminus\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vreal_uminus\n  b \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  c \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  a = -\\<^sub>\\<real> b\n  a = -\\<^sub>\\<real> c\n\ngoal (1 subgoal):\n 1. b = c", "by (metis vreal_uminus_uminus)"], ["proof (state)\nthis:\n  b = c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  vsv (vreal_uminus\\<inverse>\\<^sub>\\<circ>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  v11 vreal_uminus\n\ngoal (2 subgoals):\n 1. \\<D>\\<^sub>\\<circ> vreal_uminus = \\<real>\\<^sub>\\<circ>\n 2. \\<R>\\<^sub>\\<circ> vreal_uminus = \\<real>\\<^sub>\\<circ>", "interpret v11 vreal_uminus"], ["proof (prove)\ngoal (1 subgoal):\n 1. v11 vreal_uminus", "by (rule v11)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<D>\\<^sub>\\<circ> vreal_uminus = \\<real>\\<^sub>\\<circ>\n 2. \\<R>\\<^sub>\\<circ> vreal_uminus = \\<real>\\<^sub>\\<circ>", "show dom: \"\\<D>\\<^sub>\\<circ> vreal_uminus = \\<real>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> vreal_uminus = \\<real>\\<^sub>\\<circ>", "unfolding vreal_uminus_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (\\<lambda>x\\<in>\\<^sub>\\<circ>\\<real>\\<^sub>\\<circ>.\n         (- real_of_vreal x)\\<^sub>\\<real>) =\n    \\<real>\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> vreal_uminus = \\<real>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vreal_uminus = \\<real>\\<^sub>\\<circ>", "have \"\\<R>\\<^sub>\\<circ> vreal_uminus \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vreal_uminus\n    \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "proof(intro vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              vreal_uminus \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              vreal_uminus \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "assume \"y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_uminus\""], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_uminus\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              vreal_uminus \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "then"], ["proof (chain)\npicking this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_uminus", "obtain x where \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" and y_def: \"y = -\\<^sub>\\<real> x\""], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_uminus\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>;\n         y = -\\<^sub>\\<real> x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding dom[symmetric]"], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_uminus\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> vreal_uminus;\n         y = -\\<^sub>\\<real> x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  y = -\\<^sub>\\<real> x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              vreal_uminus \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "then"], ["proof (chain)\npicking this:\n  x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  y = -\\<^sub>\\<real> x", "show \"y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  y = -\\<^sub>\\<real> x\n\ngoal (1 subgoal):\n 1. y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "by (simp add: vreal_uminus_closed)"], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> vreal_uminus\n  \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vreal_uminus = \\<real>\\<^sub>\\<circ>", "moreover"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> vreal_uminus\n  \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vreal_uminus = \\<real>\\<^sub>\\<circ>", "have \"\\<real>\\<^sub>\\<circ> \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_uminus\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<real>\\<^sub>\\<circ>\n    \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_uminus", "by (intro vsubsetI) \n      (metis dom vdomain_atD vreal_uminus_closed vreal_uminus_uminus)"], ["proof (state)\nthis:\n  \\<real>\\<^sub>\\<circ>\n  \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_uminus\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vreal_uminus = \\<real>\\<^sub>\\<circ>", "ultimately"], ["proof (chain)\npicking this:\n  \\<R>\\<^sub>\\<circ> vreal_uminus\n  \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  \\<real>\\<^sub>\\<circ>\n  \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_uminus", "show \"\\<R>\\<^sub>\\<circ> vreal_uminus = \\<real>\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> vreal_uminus\n  \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  \\<real>\\<^sub>\\<circ>\n  \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_uminus\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vreal_uminus = \\<real>\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> vreal_uminus = \\<real>\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Multiplication.\\<close>"], ["", "global_interpretation vreal_mult: binop_onto \\<open>\\<real>\\<^sub>\\<circ>\\<close> vreal_mult"], ["proof (prove)\ngoal (1 subgoal):\n 1. binop_onto \\<real>\\<^sub>\\<circ> vreal_mult", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. binop_onto \\<real>\\<^sub>\\<circ> vreal_mult", "have binop: \"binop \\<real>\\<^sub>\\<circ> vreal_mult\""], ["proof (prove)\ngoal (1 subgoal):\n 1. binop \\<real>\\<^sub>\\<circ> vreal_mult", "proof(intro binopI nopI)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv vreal_mult\n 2. 2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>\n 3. \\<D>\\<^sub>\\<circ> vreal_mult =\n    \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n 4. \\<R>\\<^sub>\\<circ> vreal_mult\n    \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "show vsv: \"vsv vreal_mult\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv vreal_mult", "unfolding vreal_mult_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (\\<lambda>x\\<in>\\<^sub>\\<circ>\\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n2\\<^sub>\\<nat>.\n            (real_of_vreal (x\\<lparr>0\\<^sub>\\<nat>\\<rparr>) *\n             real_of_vreal (x\\<lparr>1\\<^sub>\\<nat>\\<rparr>))\\<^sub>\\<real>)", "by auto"], ["proof (state)\nthis:\n  vsv vreal_mult\n\ngoal (3 subgoals):\n 1. 2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>\n 2. \\<D>\\<^sub>\\<circ> vreal_mult =\n    \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n 3. \\<R>\\<^sub>\\<circ> vreal_mult\n    \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "interpret vsv vreal_mult"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv vreal_mult", "by (rule vsv)"], ["proof (state)\ngoal (3 subgoals):\n 1. 2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>\n 2. \\<D>\\<^sub>\\<circ> vreal_mult =\n    \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n 3. \\<R>\\<^sub>\\<circ> vreal_mult\n    \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "show \"2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>", "by simp"], ["proof (state)\nthis:\n  2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>\n\ngoal (2 subgoals):\n 1. \\<D>\\<^sub>\\<circ> vreal_mult =\n    \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n 2. \\<R>\\<^sub>\\<circ> vreal_mult\n    \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "show dom: \"\\<D>\\<^sub>\\<circ> vreal_mult = \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> vreal_mult =\n    \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>", "unfolding vreal_mult_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (\\<lambda>x\\<in>\\<^sub>\\<circ>\\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                                   2\\<^sub>\\<nat>.\n         (real_of_vreal (x\\<lparr>0\\<^sub>\\<nat>\\<rparr>) *\n          real_of_vreal (x\\<lparr>1\\<^sub>\\<nat>\\<rparr>))\\<^sub>\\<real>) =\n    \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>", "by simp"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> vreal_mult =\n  \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vreal_mult\n    \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "show \"\\<R>\\<^sub>\\<circ> vreal_mult \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vreal_mult\n    \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "proof(intro vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_mult \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_mult \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "assume \"y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_mult\""], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_mult\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_mult \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "then"], ["proof (chain)\npicking this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_mult", "obtain ab where \"ab \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\" and y_def: \"y = vreal_mult\\<lparr>ab\\<rparr>\""], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_mult\n\ngoal (1 subgoal):\n 1. (\\<And>ab.\n        \\<lbrakk>ab \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n  2\\<^sub>\\<nat>;\n         y = vreal_mult\\<lparr>ab\\<rparr>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding dom[symmetric]"], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_mult\n\ngoal (1 subgoal):\n 1. (\\<And>ab.\n        \\<lbrakk>ab \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> vreal_mult;\n         y = vreal_mult\\<lparr>ab\\<rparr>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  ab \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                         2\\<^sub>\\<nat>\n  y = vreal_mult\\<lparr>ab\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_mult \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "then"], ["proof (chain)\npicking this:\n  ab \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                         2\\<^sub>\\<nat>\n  y = vreal_mult\\<lparr>ab\\<rparr>", "obtain a b \n        where ab_def: \"ab = [a, b]\\<^sub>\\<circ>\" and a: \"a \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" and b: \"b \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  ab \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                         2\\<^sub>\\<nat>\n  y = vreal_mult\\<lparr>ab\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>ab = [a, b]\\<^sub>\\<circ>;\n         a \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>;\n         b \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  ab = [a, b]\\<^sub>\\<circ>\n  a \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  b \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_mult \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "then"], ["proof (chain)\npicking this:\n  ab = [a, b]\\<^sub>\\<circ>\n  a \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  b \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "show \"y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  ab = [a, b]\\<^sub>\\<circ>\n  a \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  b \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "by (simp add: vreal_mult_closed y_def)"], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> vreal_mult\n  \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  binop \\<real>\\<^sub>\\<circ> vreal_mult\n\ngoal (1 subgoal):\n 1. binop_onto \\<real>\\<^sub>\\<circ> vreal_mult", "interpret binop \\<open>\\<real>\\<^sub>\\<circ>\\<close> vreal_mult"], ["proof (prove)\ngoal (1 subgoal):\n 1. binop \\<real>\\<^sub>\\<circ> vreal_mult", "by (rule binop)"], ["proof (state)\ngoal (1 subgoal):\n 1. binop_onto \\<real>\\<^sub>\\<circ> vreal_mult", "show \"binop_onto \\<real>\\<^sub>\\<circ> vreal_mult\""], ["proof (prove)\ngoal (1 subgoal):\n 1. binop_onto \\<real>\\<^sub>\\<circ> vreal_mult", "proof(intro binop_ontoI')"], ["proof (state)\ngoal (2 subgoals):\n 1. binop \\<real>\\<^sub>\\<circ> vreal_mult\n 2. \\<real>\\<^sub>\\<circ>\n    \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_mult", "show \"binop \\<real>\\<^sub>\\<circ> vreal_mult\""], ["proof (prove)\ngoal (1 subgoal):\n 1. binop \\<real>\\<^sub>\\<circ> vreal_mult", "by (rule binop_axioms)"], ["proof (state)\nthis:\n  binop \\<real>\\<^sub>\\<circ> vreal_mult\n\ngoal (1 subgoal):\n 1. \\<real>\\<^sub>\\<circ>\n    \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_mult", "show \"\\<real>\\<^sub>\\<circ> \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_mult\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<real>\\<^sub>\\<circ>\n    \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_mult", "proof(intro vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_mult", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_mult", "assume prems: \"y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\""], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_mult", "moreover"], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_mult", "from vreal_one vreal_one_closed"], ["proof (chain)\npicking this:\n  1\\<^sub>\\<real> = 1\n  1\\<^sub>\\<real> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "have \"1 \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  1\\<^sub>\\<real> = 1\n  1\\<^sub>\\<real> \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. 1 \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "by auto"], ["proof (state)\nthis:\n  1 \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_mult", "ultimately"], ["proof (chain)\npicking this:\n  y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  1 \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "have \"y *\\<^sub>\\<real> 1 \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_mult\""], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  1 \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. y *\\<^sub>\\<real> 1 \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_mult", "by auto"], ["proof (state)\nthis:\n  y *\\<^sub>\\<real> 1 \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_mult\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_mult", "moreover"], ["proof (state)\nthis:\n  y *\\<^sub>\\<real> 1 \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_mult\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_mult", "from prems vreal_identity_law_multiplication"], ["proof (chain)\npicking this:\n  y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  ?x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<Longrightarrow>\n  ?x *\\<^sub>\\<real> 1\\<^sub>\\<real> = ?x", "have \"y = y *\\<^sub>\\<real> 1\""], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  ?x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<Longrightarrow>\n  ?x *\\<^sub>\\<real> 1\\<^sub>\\<real> = ?x\n\ngoal (1 subgoal):\n 1. y = y *\\<^sub>\\<real> 1", "by (simp add: vreal_one)"], ["proof (state)\nthis:\n  y = y *\\<^sub>\\<real> 1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_mult", "ultimately"], ["proof (chain)\npicking this:\n  y *\\<^sub>\\<real> 1 \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_mult\n  y = y *\\<^sub>\\<real> 1", "show \"y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_mult\""], ["proof (prove)\nusing this:\n  y *\\<^sub>\\<real> 1 \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_mult\n  y = y *\\<^sub>\\<real> 1\n\ngoal (1 subgoal):\n 1. y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_mult", "by simp"], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_mult\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<real>\\<^sub>\\<circ>\n  \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_mult\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  binop_onto \\<real>\\<^sub>\\<circ> vreal_mult\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Multiplicative inverse.\\<close>"], ["", "global_interpretation vreal_inverse: v11 vreal_inverse\n  rewrites \"\\<D>\\<^sub>\\<circ> vreal_inverse = \\<real>\\<^sub>\\<circ>\"\n    and \"\\<R>\\<^sub>\\<circ> vreal_inverse = \\<real>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v11 vreal_inverse &&&\n    \\<D>\\<^sub>\\<circ> vreal_inverse = \\<real>\\<^sub>\\<circ> &&&\n    \\<R>\\<^sub>\\<circ> vreal_inverse = \\<real>\\<^sub>\\<circ>", "proof-"], ["proof (state)\ngoal (3 subgoals):\n 1. v11 vreal_inverse\n 2. \\<D>\\<^sub>\\<circ> vreal_inverse = \\<real>\\<^sub>\\<circ>\n 3. \\<R>\\<^sub>\\<circ> vreal_inverse = \\<real>\\<^sub>\\<circ>", "show v11: \"v11 vreal_inverse\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v11 vreal_inverse", "proof(intro v11I)"], ["proof (state)\ngoal (2 subgoals):\n 1. vsv vreal_inverse\n 2. vsv (vreal_inverse\\<inverse>\\<^sub>\\<circ>)", "show vsv: \"vsv vreal_inverse\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv vreal_inverse", "unfolding vreal_inverse_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (\\<lambda>x\\<in>\\<^sub>\\<circ>\\<real>\\<^sub>\\<circ>.\n            (inverse (real_of_vreal x))\\<^sub>\\<real>)", "by simp"], ["proof (state)\nthis:\n  vsv vreal_inverse\n\ngoal (1 subgoal):\n 1. vsv (vreal_inverse\\<inverse>\\<^sub>\\<circ>)", "interpret vsv vreal_inverse"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv vreal_inverse", "by (rule vsv)"], ["proof (state)\ngoal (1 subgoal):\n 1. vsv (vreal_inverse\\<inverse>\\<^sub>\\<circ>)", "show \"vsv (vreal_inverse\\<inverse>\\<^sub>\\<circ>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (vreal_inverse\\<inverse>\\<^sub>\\<circ>)", "proof(intro vsvI)"], ["proof (state)\ngoal (2 subgoals):\n 1. vbrelation (vreal_inverse\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> vreal_inverse\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> vreal_inverse\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "show \"vbrelation (vreal_inverse\\<inverse>\\<^sub>\\<circ>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vbrelation (vreal_inverse\\<inverse>\\<^sub>\\<circ>)", "by clarsimp"], ["proof (state)\nthis:\n  vbrelation (vreal_inverse\\<inverse>\\<^sub>\\<circ>)\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> vreal_inverse\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> vreal_inverse\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "fix a b c"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> vreal_inverse\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> vreal_inverse\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "assume prems: \"\\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> vreal_inverse\\<inverse>\\<^sub>\\<circ>\" \"\\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> vreal_inverse\\<inverse>\\<^sub>\\<circ>\""], ["proof (state)\nthis:\n  \\<langle>a, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> vreal_inverse\\<inverse>\\<^sub>\\<circ>\n  \\<langle>a, c\\<rangle>\n  \\<in>\\<^sub>\\<circ> vreal_inverse\\<inverse>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> vreal_inverse\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> vreal_inverse\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "then"], ["proof (chain)\npicking this:\n  \\<langle>a, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> vreal_inverse\\<inverse>\\<^sub>\\<circ>\n  \\<langle>a, c\\<rangle>\n  \\<in>\\<^sub>\\<circ> vreal_inverse\\<inverse>\\<^sub>\\<circ>", "have ba: \"\\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vreal_inverse\" and ca: \"\\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vreal_inverse\""], ["proof (prove)\nusing this:\n  \\<langle>a, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> vreal_inverse\\<inverse>\\<^sub>\\<circ>\n  \\<langle>a, c\\<rangle>\n  \\<in>\\<^sub>\\<circ> vreal_inverse\\<inverse>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vreal_inverse &&&\n    \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vreal_inverse", "by auto"], ["proof (state)\nthis:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vreal_inverse\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vreal_inverse\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> vreal_inverse\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> vreal_inverse\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "then"], ["proof (chain)\npicking this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vreal_inverse\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vreal_inverse", "have b: \"b \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" and c: \"c \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vreal_inverse\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vreal_inverse\n\ngoal (1 subgoal):\n 1. b \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ> &&&\n    c \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "by (simp_all add: VLambda_iff2 vreal_inverse_def)"], ["proof (state)\nthis:\n  b \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  c \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> vreal_inverse\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> vreal_inverse\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "from ba ca"], ["proof (chain)\npicking this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vreal_inverse\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vreal_inverse", "have \"a = b\\<inverse>\\<^sub>\\<real>\" \"a = c\\<inverse>\\<^sub>\\<real>\""], ["proof (prove)\nusing this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vreal_inverse\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vreal_inverse\n\ngoal (1 subgoal):\n 1. a = b\\<inverse>\\<^sub>\\<real> &&& a = c\\<inverse>\\<^sub>\\<real>", "by simp_all"], ["proof (state)\nthis:\n  a = b\\<inverse>\\<^sub>\\<real>\n  a = c\\<inverse>\\<^sub>\\<real>\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> vreal_inverse\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> vreal_inverse\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "with ba ca b c"], ["proof (chain)\npicking this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vreal_inverse\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vreal_inverse\n  b \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  c \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  a = b\\<inverse>\\<^sub>\\<real>\n  a = c\\<inverse>\\<^sub>\\<real>", "show \"b = c\""], ["proof (prove)\nusing this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vreal_inverse\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vreal_inverse\n  b \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  c \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  a = b\\<inverse>\\<^sub>\\<real>\n  a = c\\<inverse>\\<^sub>\\<real>\n\ngoal (1 subgoal):\n 1. b = c", "by (metis vreal_inverse_inverse)"], ["proof (state)\nthis:\n  b = c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  vsv (vreal_inverse\\<inverse>\\<^sub>\\<circ>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  v11 vreal_inverse\n\ngoal (2 subgoals):\n 1. \\<D>\\<^sub>\\<circ> vreal_inverse = \\<real>\\<^sub>\\<circ>\n 2. \\<R>\\<^sub>\\<circ> vreal_inverse = \\<real>\\<^sub>\\<circ>", "interpret v11 vreal_inverse"], ["proof (prove)\ngoal (1 subgoal):\n 1. v11 vreal_inverse", "by (rule v11)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<D>\\<^sub>\\<circ> vreal_inverse = \\<real>\\<^sub>\\<circ>\n 2. \\<R>\\<^sub>\\<circ> vreal_inverse = \\<real>\\<^sub>\\<circ>", "show dom: \"\\<D>\\<^sub>\\<circ> vreal_inverse = \\<real>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> vreal_inverse = \\<real>\\<^sub>\\<circ>", "unfolding vreal_inverse_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (\\<lambda>x\\<in>\\<^sub>\\<circ>\\<real>\\<^sub>\\<circ>.\n         (inverse (real_of_vreal x))\\<^sub>\\<real>) =\n    \\<real>\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> vreal_inverse = \\<real>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vreal_inverse = \\<real>\\<^sub>\\<circ>", "have \"\\<R>\\<^sub>\\<circ> vreal_inverse \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vreal_inverse\n    \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "proof(intro vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              vreal_inverse \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              vreal_inverse \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "assume \"y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_inverse\""], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_inverse\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              vreal_inverse \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "then"], ["proof (chain)\npicking this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_inverse", "obtain x where \"x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\" and y_def: \"y = x\\<inverse>\\<^sub>\\<real>\""], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_inverse\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>;\n         y = x\\<inverse>\\<^sub>\\<real>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding dom[symmetric]"], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_inverse\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> vreal_inverse;\n         y = x\\<inverse>\\<^sub>\\<real>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  y = x\\<inverse>\\<^sub>\\<real>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              vreal_inverse \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "then"], ["proof (chain)\npicking this:\n  x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  y = x\\<inverse>\\<^sub>\\<real>", "show \"y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  y = x\\<inverse>\\<^sub>\\<real>\n\ngoal (1 subgoal):\n 1. y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "by (simp add: vreal_inverse_closed)"], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> vreal_inverse\n  \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vreal_inverse = \\<real>\\<^sub>\\<circ>", "moreover"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> vreal_inverse\n  \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vreal_inverse = \\<real>\\<^sub>\\<circ>", "have \"\\<real>\\<^sub>\\<circ> \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_inverse\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<real>\\<^sub>\\<circ>\n    \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_inverse", "by (intro vsubsetI) \n      (metis dom vdomain_atD vreal_inverse_closed vreal_inverse_inverse)"], ["proof (state)\nthis:\n  \\<real>\\<^sub>\\<circ>\n  \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_inverse\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vreal_inverse = \\<real>\\<^sub>\\<circ>", "ultimately"], ["proof (chain)\npicking this:\n  \\<R>\\<^sub>\\<circ> vreal_inverse\n  \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  \\<real>\\<^sub>\\<circ>\n  \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_inverse", "show \"\\<R>\\<^sub>\\<circ> vreal_inverse = \\<real>\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> vreal_inverse\n  \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  \\<real>\\<^sub>\\<circ>\n  \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vreal_inverse\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vreal_inverse = \\<real>\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> vreal_inverse = \\<real>\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Integer numbers\\<close>"], ["", "subsubsection\\<open>Definition\\<close>"], ["", "definition vint_of_int :: \"int \\<Rightarrow> V\"\n  where \"vint_of_int = vreal_of_real\""], ["", "notation vint_of_int (\\<open>_\\<^sub>\\<int>\\<close> [999] 999)"], ["", "declare [[coercion \"vint_of_int :: int \\<Rightarrow> V\"]]"], ["", "definition vint :: V (\\<open>\\<int>\\<^sub>\\<circ>\\<close>)\n  where \"vint = set (range vint_of_int)\""], ["", "definition int_of_vint :: \"V \\<Rightarrow> int\"\n  where \"int_of_vint = inv_into UNIV vint_of_int\""], ["", "text\\<open>Rules.\\<close>"], ["", "lemma vint_of_int_in_vintI[intro, simp]: \"a\\<^sub>\\<int> \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a\\<^sub>\\<int> \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "by (simp add: vint_def)"], ["", "lemma vint_of_int_in_vintE[elim]:\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\"\n  obtains b where \"b\\<^sub>\\<int> = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>b. b\\<^sub>\\<int> = a \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. (\\<And>b. b\\<^sub>\\<int> = a \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding vint_def"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set (range vint_of_int)\n\ngoal (1 subgoal):\n 1. (\\<And>b. b\\<^sub>\\<int> = a \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["", "subsubsection\\<open>Elementary properties\\<close>"], ["", "lemma vint_vsubset_vreal: \"\\<int>\\<^sub>\\<circ> \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<int>\\<^sub>\\<circ> \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "unfolding vint_def vint_of_int_def vreal_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set (range (\\<lambda>x. (real_of_int x)\\<^sub>\\<real>))\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set (range vreal_of_real)", "using image_cong"], ["proof (prove)\nusing this:\n  \\<lbrakk>?M = ?N;\n   \\<And>x. x \\<in> ?N \\<Longrightarrow> ?f x = ?g x\\<rbrakk>\n  \\<Longrightarrow> ?f ` ?M = ?g ` ?N\n\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set (range (\\<lambda>x. (real_of_int x)\\<^sub>\\<real>))\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set (range vreal_of_real)", "by auto"], ["", "lemma inj_vint_of_int: \"inj vint_of_int\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj vint_of_int", "using inj_vreal_of_real"], ["proof (prove)\nusing this:\n  inj vreal_of_real\n\ngoal (1 subgoal):\n 1. inj vint_of_int", "unfolding vint_of_int_def inj_def of_int_eq_iff"], ["proof (prove)\nusing this:\n  \\<forall>x y. x\\<^sub>\\<real> = y\\<^sub>\\<real> \\<longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       (real_of_int x)\\<^sub>\\<real> =\n       (real_of_int y)\\<^sub>\\<real> \\<longrightarrow>\n       x = y", "by force"], ["", "lemma vint_in_Vset_\\<omega>2: \"\\<int>\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<int>\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)", "using vint_vsubset_vreal vreal_in_Vset_\\<omega>2"], ["proof (prove)\nusing this:\n  \\<int>\\<^sub>\\<circ> \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  \\<real>\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)\n\ngoal (1 subgoal):\n 1. \\<int>\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)", "by auto"], ["", "lemma int_of_vint_vint_of_int[simp]: \"int_of_vint (a\\<^sub>\\<int>) = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. int_of_vint (a\\<^sub>\\<int>) = a", "by (simp add: inj_vint_of_int int_of_vint_def)"], ["", "text\\<open>Transfer rules.\\<close>"], ["", "definition cr_vint :: \"V \\<Rightarrow> int \\<Rightarrow> bool\"\n  where \"cr_vint a b \\<longleftrightarrow> (a = vint_of_int b)\""], ["", "lemma cr_vint_right_total[transfer_rule]: \"right_total cr_vint\""], ["proof (prove)\ngoal (1 subgoal):\n 1. right_total cr_vint", "unfolding cr_vint_def right_total_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y. \\<exists>x. x = y\\<^sub>\\<int>", "by simp"], ["", "lemma cr_vint_bi_unqie[transfer_rule]: \"bi_unique cr_vint\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bi_unique cr_vint", "unfolding cr_vint_def bi_unique_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x y z.\n        x = y\\<^sub>\\<int> \\<longrightarrow>\n        x = z\\<^sub>\\<int> \\<longrightarrow> y = z) \\<and>\n    (\\<forall>x y z.\n        x = z\\<^sub>\\<int> \\<longrightarrow>\n        y = z\\<^sub>\\<int> \\<longrightarrow> x = y)", "by (simp add: inj_eq inj_vint_of_int)"], ["", "lemma cr_vint_transfer_domain_rule[transfer_domain_rule]: \n  \"Domainp cr_vint = (\\<lambda>x. x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Domainp cr_vint =\n    (\\<lambda>x. x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>)", "unfolding cr_vint_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Domainp (\\<lambda>a b. a = b\\<^sub>\\<int>) =\n    (\\<lambda>x. x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>)", "by force"], ["", "lemma vint_transfer[transfer_rule]: \n  \"(rel_set cr_vint) (elts \\<int>\\<^sub>\\<circ>) (UNIV::int set)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_set cr_vint (elts \\<int>\\<^sub>\\<circ>) UNIV", "unfolding cr_vint_def rel_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x\\<in>elts \\<int>\\<^sub>\\<circ>.\n        \\<exists>b\\<in>UNIV. x = b\\<^sub>\\<int>) \\<and>\n    (\\<forall>y\\<in>UNIV.\n        \\<exists>x\\<in>elts \\<int>\\<^sub>\\<circ>. x = y\\<^sub>\\<int>)", "by auto"], ["", "lemma vint_of_int_transfer[transfer_rule]: \"cr_vint (vint_of_int a) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cr_vint (a\\<^sub>\\<int>) a", "unfolding cr_vint_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. a\\<^sub>\\<int> = a\\<^sub>\\<int>", "by auto"], ["", "subsubsection\\<open>Constants and operations\\<close>"], ["", "text\\<open>Auxiliary.\\<close>"], ["", "lemma vint_fsingleton_in_fproduct_vint: \"[a\\<^sub>\\<int>]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 1\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [a\\<^sub>\\<int>]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 1\\<^sub>\\<nat>", "by auto"], ["", "lemma vint_fpair_in_fproduct_vint: \"[a\\<^sub>\\<int>, b\\<^sub>\\<int>]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [a\\<^sub>\\<int>, b\\<^sub>\\<int>]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>", "by force"], ["", "text\\<open>Zero.\\<close>"], ["", "lemma vint_zero: \"0\\<^sub>\\<int> = (0::V)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0\\<^sub>\\<int> = []\\<^sub>\\<circ>", "by (simp add: vint_of_int_def vreal_zero)"], ["", "text\\<open>One.\\<close>"], ["", "lemma vint_one: \"1\\<^sub>\\<int> = (1::V)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1\\<^sub>\\<int> = 1", "by (simp add: vreal_one vint_of_int_def)"], ["", "text\\<open>Addition.\\<close>"], ["", "definition vint_plus :: V \n  where \"vint_plus = \n    (\\<lambda>x\\<in>\\<^sub>\\<circ>\\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>. (int_of_vint (x\\<lparr>0\\<^sub>\\<nat>\\<rparr>) + int_of_vint (x\\<lparr>1\\<^sub>\\<nat>\\<rparr>))\\<^sub>\\<int>)\""], ["", "abbreviation vint_plus_app (infixl \"+\\<^sub>\\<int>\" 65) \n  where \"vint_plus_app a b \\<equiv> vint_plus\\<lparr>a, b\\<rparr>\\<^sub>\\<bullet>\""], ["", "lemma vint_plus_transfer[transfer_rule]: \n  includes lifting_syntax\n  shows \"(cr_vint ===> cr_vint ===> cr_vint) (+\\<^sub>\\<int>) (+)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cr_vint ===> cr_vint ===> cr_vint) (+\\<^sub>\\<int>) (+)", "using vint_fpair_in_fproduct_vint"], ["proof (prove)\nusing this:\n  [?a\\<^sub>\\<int>, ?b\\<^sub>\\<int>]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. (cr_vint ===> cr_vint ===> cr_vint) (+\\<^sub>\\<int>) (+)", "by (intro rel_funI, unfold vint_plus_def cr_vint_def cr_scalar_def) \n    (simp add: nat_omega_simps)"], ["", "text\\<open>Multiplication.\\<close>"], ["", "definition vint_mult :: V \n  where \"vint_mult = \n    (\\<lambda>x\\<in>\\<^sub>\\<circ>\\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>. (int_of_vint (x\\<lparr>0\\<^sub>\\<nat>\\<rparr>) * int_of_vint (x\\<lparr>1\\<^sub>\\<nat>\\<rparr>))\\<^sub>\\<int>)\""], ["", "abbreviation vint_mult_app (infixl \"*\\<^sub>\\<int>\" 65) \n  where \"vint_mult_app a b \\<equiv> vint_mult\\<lparr>a, b\\<rparr>\\<^sub>\\<bullet>\""], ["", "lemma vint_mult_transfer[transfer_rule]: \n  includes lifting_syntax\n  shows \"(cr_vint ===> cr_vint ===> cr_vint) (*\\<^sub>\\<int>) (*)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cr_vint ===> cr_vint ===> cr_vint) (*\\<^sub>\\<int>) (*)", "using vint_fpair_in_fproduct_vint"], ["proof (prove)\nusing this:\n  [?a\\<^sub>\\<int>, ?b\\<^sub>\\<int>]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. (cr_vint ===> cr_vint ===> cr_vint) (*\\<^sub>\\<int>) (*)", "by (intro rel_funI, unfold vint_mult_def cr_vint_def cr_scalar_def) \n    (simp add: nat_omega_simps)"], ["", "text\\<open>Unary minus.\\<close>"], ["", "definition vint_uminus :: V \n  where \"vint_uminus = (\\<lambda>x\\<in>\\<^sub>\\<circ>\\<int>\\<^sub>\\<circ>. (uminus (int_of_vint x))\\<^sub>\\<int>)\""], ["", "abbreviation vint_uminus_app (\"-\\<^sub>\\<int> _\" [81] 80) \n  where \"-\\<^sub>\\<int> a \\<equiv> vint_uminus\\<lparr>a\\<rparr>\""], ["", "lemma vint_uminus_transfer[transfer_rule]: \n  includes lifting_syntax\n  shows \"(cr_vint ===> cr_vint) (vint_uminus_app) (uminus)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cr_vint ===> cr_vint) vint_uminus_app uminus", "using vint_fsingleton_in_fproduct_vint"], ["proof (prove)\nusing this:\n  [?a\\<^sub>\\<int>]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 1\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. (cr_vint ===> cr_vint) vint_uminus_app uminus", "by (intro rel_funI, unfold vint_uminus_def cr_vint_def cr_scalar_def) \n    (simp add: nat_omega_simps)"], ["", "text\\<open>Order.\\<close>"], ["", "definition vint_le :: V \n  where \"vint_le =\n    set {[a, b]\\<^sub>\\<circ> | a b. [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat> \\<and> int_of_vint a \\<le> int_of_vint b}\""], ["", "abbreviation vint_le' (\"(_/ \\<le>\\<^sub>\\<int> _)\"  [51, 51] 50)\n  where \"a \\<le>\\<^sub>\\<int> b \\<equiv> [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> vint_le\""], ["", "lemma small_vint_le[simp]: \n  \"small {[a, b]\\<^sub>\\<circ> | a b. [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat> \\<and> int_of_vint a \\<le> int_of_vint b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. small\n     {[a, b]\\<^sub>\\<circ> |a b.\n      [a, b]\\<^sub>\\<circ>\n      \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                          2\\<^sub>\\<nat> \\<and>\n      int_of_vint a \\<le> int_of_vint b}", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. small\n     {[a, b]\\<^sub>\\<circ> |a b.\n      [a, b]\\<^sub>\\<circ>\n      \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                          2\\<^sub>\\<nat> \\<and>\n      int_of_vint a \\<le> int_of_vint b}", "have small: \"small {[a, b]\\<^sub>\\<circ> | a b. [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. small\n     {[a, b]\\<^sub>\\<circ> |a b.\n      [a, b]\\<^sub>\\<circ>\n      \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                          2\\<^sub>\\<nat>}", "by simp"], ["proof (state)\nthis:\n  small\n   {[a, b]\\<^sub>\\<circ> |a b.\n    [a, b]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                        2\\<^sub>\\<nat>}\n\ngoal (1 subgoal):\n 1. small\n     {[a, b]\\<^sub>\\<circ> |a b.\n      [a, b]\\<^sub>\\<circ>\n      \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                          2\\<^sub>\\<nat> \\<and>\n      int_of_vint a \\<le> int_of_vint b}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. small\n     {[a, b]\\<^sub>\\<circ> |a b.\n      [a, b]\\<^sub>\\<circ>\n      \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                          2\\<^sub>\\<nat> \\<and>\n      int_of_vint a \\<le> int_of_vint b}", "by (rule smaller_than_small[OF small]) auto"], ["proof (state)\nthis:\n  small\n   {[a, b]\\<^sub>\\<circ> |a b.\n    [a, b]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                        2\\<^sub>\\<nat> \\<and>\n    int_of_vint a \\<le> int_of_vint b}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vint_le_transfer[transfer_rule]:\n  includes lifting_syntax\n  shows \"(cr_vint ===> cr_vint ===> (=)) vint_le' (\\<le>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cr_vint ===> cr_vint ===> (=)) vint_le' (\\<le>)", "using vint_fsingleton_in_fproduct_vint"], ["proof (prove)\nusing this:\n  [?a\\<^sub>\\<int>]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 1\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. (cr_vint ===> cr_vint ===> (=)) vint_le' (\\<le>)", "by (intro rel_funI, unfold cr_scalar_def cr_vint_def vint_le_def)\n    (auto simp: nat_omega_simps)"], ["", "text\\<open>Strict order.\\<close>"], ["", "definition vint_ls :: V \n  where \"vint_ls =\n    set {[a, b]\\<^sub>\\<circ> | a b. [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat> \\<and> int_of_vint a < int_of_vint b}\""], ["", "abbreviation vint_ls' (\"(_/ <\\<^sub>\\<int> _)\"  [51, 51] 50)\n  where \"a <\\<^sub>\\<int> b \\<equiv> [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> vint_ls\""], ["", "lemma small_vint_ls[simp]: \n  \"small {[a, b]\\<^sub>\\<circ> | a b. [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat> \\<and> int_of_vint a < int_of_vint b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. small\n     {[a, b]\\<^sub>\\<circ> |a b.\n      [a, b]\\<^sub>\\<circ>\n      \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                          2\\<^sub>\\<nat> \\<and>\n      int_of_vint a < int_of_vint b}", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. small\n     {[a, b]\\<^sub>\\<circ> |a b.\n      [a, b]\\<^sub>\\<circ>\n      \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                          2\\<^sub>\\<nat> \\<and>\n      int_of_vint a < int_of_vint b}", "have small: \"small {[a, b]\\<^sub>\\<circ> | a b. [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. small\n     {[a, b]\\<^sub>\\<circ> |a b.\n      [a, b]\\<^sub>\\<circ>\n      \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                          2\\<^sub>\\<nat>}", "by simp"], ["proof (state)\nthis:\n  small\n   {[a, b]\\<^sub>\\<circ> |a b.\n    [a, b]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                        2\\<^sub>\\<nat>}\n\ngoal (1 subgoal):\n 1. small\n     {[a, b]\\<^sub>\\<circ> |a b.\n      [a, b]\\<^sub>\\<circ>\n      \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                          2\\<^sub>\\<nat> \\<and>\n      int_of_vint a < int_of_vint b}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. small\n     {[a, b]\\<^sub>\\<circ> |a b.\n      [a, b]\\<^sub>\\<circ>\n      \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                          2\\<^sub>\\<nat> \\<and>\n      int_of_vint a < int_of_vint b}", "by (rule smaller_than_small[OF small]) auto"], ["proof (state)\nthis:\n  small\n   {[a, b]\\<^sub>\\<circ> |a b.\n    [a, b]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                        2\\<^sub>\\<nat> \\<and>\n    int_of_vint a < int_of_vint b}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vint_ls_transfer[transfer_rule]:\n  includes lifting_syntax\n  shows \"(cr_vint ===> cr_vint ===> (=)) vint_ls' (<)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cr_vint ===> cr_vint ===> (=)) vint_ls' (<)", "using vint_fsingleton_in_fproduct_vint"], ["proof (prove)\nusing this:\n  [?a\\<^sub>\\<int>]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 1\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. (cr_vint ===> cr_vint ===> (=)) vint_ls' (<)", "by (intro rel_funI, unfold cr_scalar_def cr_vint_def vint_ls_def)\n    (auto simp: nat_omega_simps)"], ["", "text\\<open>Subtraction.\\<close>"], ["", "definition vint_minus :: V \n  where \"vint_minus = \n    (\\<lambda>x\\<in>\\<^sub>\\<circ>\\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>. (int_of_vint (x\\<lparr>0\\<^sub>\\<nat>\\<rparr>) - int_of_vint (x\\<lparr>1\\<^sub>\\<nat>\\<rparr>))\\<^sub>\\<int>)\""], ["", "abbreviation vint_minus_app (infixl \"-\\<^sub>\\<int>\" 65) \n  where \"vint_minus_app a b \\<equiv> vint_minus\\<lparr>a, b\\<rparr>\\<^sub>\\<bullet>\""], ["", "lemma vint_minus_transfer[transfer_rule]: \n  includes lifting_syntax\n  shows \"(cr_vint ===> cr_vint ===> cr_vint) \n    (-\\<^sub>\\<int>) (-)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cr_vint ===> cr_vint ===> cr_vint) (-\\<^sub>\\<int>) (-)", "using vint_fpair_in_fproduct_vint"], ["proof (prove)\nusing this:\n  [?a\\<^sub>\\<int>, ?b\\<^sub>\\<int>]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. (cr_vint ===> cr_vint ===> cr_vint) (-\\<^sub>\\<int>) (-)", "by (intro rel_funI, unfold vint_minus_def cr_vint_def cr_scalar_def) \n    (simp add: nat_omega_simps)"], ["", "subsubsection\\<open>Axioms of a well ordered integral domain\\<close>"], ["", "text\\<open>The exposition follows Definition 1.4.1 from the textbook \n\\<open>The Real Numbers and Real Analysis\\<close> by E. Bloch\n\\cite{bloch_real_2010}.\\<close>"], ["", "lemma vint_zero_closed: \"0\\<^sub>\\<int> \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0\\<^sub>\\<int> \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "by auto"], ["", "lemma vint_one_closed: \"1\\<^sub>\\<int> \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1\\<^sub>\\<int> \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "by auto"], ["", "lemma vint_plus_closed: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\"\n  shows \"x +\\<^sub>\\<int> y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<int> y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<int> y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "have \"x' + y' \\<in> UNIV\" for x' y' :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' + y' \\<in> UNIV", "by simp"], ["proof (state)\nthis:\n  ?x' + ?y' \\<in> UNIV\n\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<int> y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x +\\<^sub>\\<int> y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "show ?thesis"], ["proof (prove)\nusing this:\n  x +\\<^sub>\\<int> y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<int> y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "."], ["proof (state)\nthis:\n  x +\\<^sub>\\<int> y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vint_mult_closed:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" \n  shows \"x *\\<^sub>\\<int> y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<int> y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<int> y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "have \"(x'::int) * y' \\<in> UNIV\" for x' y'"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' * y' \\<in> UNIV", "by simp"], ["proof (state)\nthis:\n  ?x' * ?y' \\<in> UNIV\n\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<int> y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x *\\<^sub>\\<int> y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "show ?thesis"], ["proof (prove)\nusing this:\n  x *\\<^sub>\\<int> y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<int> y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "."], ["proof (state)\nthis:\n  x *\\<^sub>\\<int> y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vint_uminus_closed: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\"\n  shows \"-\\<^sub>\\<int> x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. -\\<^sub>\\<int> x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. -\\<^sub>\\<int> x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "have \"(-x'::int) \\<in> UNIV\" for x'"], ["proof (prove)\ngoal (1 subgoal):\n 1. - x' \\<in> UNIV", "by simp"], ["proof (state)\nthis:\n  - ?x' \\<in> UNIV\n\ngoal (1 subgoal):\n 1. -\\<^sub>\\<int> x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  -\\<^sub>\\<int> x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "show ?thesis"], ["proof (prove)\nusing this:\n  -\\<^sub>\\<int> x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. -\\<^sub>\\<int> x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "."], ["proof (state)\nthis:\n  -\\<^sub>\\<int> x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Associative Law for Addition: Definition 1.4.1.a.\\<close>"], ["", "lemma vint_assoc_law_addition: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" and \"z \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\"  \n  shows \"(x +\\<^sub>\\<int> y) +\\<^sub>\\<int> z = x +\\<^sub>\\<int> (y +\\<^sub>\\<int> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<int> y +\\<^sub>\\<int> z =\n    x +\\<^sub>\\<int> (y +\\<^sub>\\<int> z)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<int> y +\\<^sub>\\<int> z =\n    x +\\<^sub>\\<int> (y +\\<^sub>\\<int> z)", "have \"(x' + y') + z' = x' + (y' + z')\" for x' y' z' :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' + y' + z' = x' + (y' + z')", "by simp"], ["proof (state)\nthis:\n  ?x' + ?y' + ?z' = ?x' + (?y' + ?z')\n\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<int> y +\\<^sub>\\<int> z =\n    x +\\<^sub>\\<int> (y +\\<^sub>\\<int> z)", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x +\\<^sub>\\<int> y +\\<^sub>\\<int> z =\n  x +\\<^sub>\\<int> (y +\\<^sub>\\<int> z)", "show ?thesis"], ["proof (prove)\nusing this:\n  x +\\<^sub>\\<int> y +\\<^sub>\\<int> z =\n  x +\\<^sub>\\<int> (y +\\<^sub>\\<int> z)\n\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<int> y +\\<^sub>\\<int> z =\n    x +\\<^sub>\\<int> (y +\\<^sub>\\<int> z)", "."], ["proof (state)\nthis:\n  x +\\<^sub>\\<int> y +\\<^sub>\\<int> z =\n  x +\\<^sub>\\<int> (y +\\<^sub>\\<int> z)\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Commutative Law for Addition: Definition 1.4.1.b.\\<close>"], ["", "lemma vint_commutative_law_addition: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\"    \n  shows \"x +\\<^sub>\\<int> y = y +\\<^sub>\\<int> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<int> y = y +\\<^sub>\\<int> x", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<int> y = y +\\<^sub>\\<int> x", "have \"x' + y' = y' + x'\" for x' y' :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' + y' = y' + x'", "by simp"], ["proof (state)\nthis:\n  ?x' + ?y' = ?y' + ?x'\n\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<int> y = y +\\<^sub>\\<int> x", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x +\\<^sub>\\<int> y = y +\\<^sub>\\<int> x", "show ?thesis"], ["proof (prove)\nusing this:\n  x +\\<^sub>\\<int> y = y +\\<^sub>\\<int> x\n\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<int> y = y +\\<^sub>\\<int> x", "."], ["proof (state)\nthis:\n  x +\\<^sub>\\<int> y = y +\\<^sub>\\<int> x\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Identity Law for Addition: Definition 1.4.1.c.\\<close>"], ["", "lemma vint_identity_law_addition: \n  assumes [simp]: \"x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\"\n  shows \"x +\\<^sub>\\<int> 0\\<^sub>\\<int> = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<int> 0\\<^sub>\\<int> = x", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<int> 0\\<^sub>\\<int> = x", "have \"x' + 0 = x'\" for x' :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' + 0 = x'", "by simp"], ["proof (state)\nthis:\n  ?x' + 0 = ?x'\n\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<int> 0\\<^sub>\\<int> = x", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x +\\<^sub>\\<int> 0\\<^sub>\\<int> = x", "show ?thesis"], ["proof (prove)\nusing this:\n  x +\\<^sub>\\<int> 0\\<^sub>\\<int> = x\n\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<int> 0\\<^sub>\\<int> = x", "."], ["proof (state)\nthis:\n  x +\\<^sub>\\<int> 0\\<^sub>\\<int> = x\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Inverses Law for Addition: Definition 1.4.1.d.\\<close>"], ["", "lemma vint_inverses_law_addition: \n  assumes [simp]: \"x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\"\n  shows \"x +\\<^sub>\\<int> (-\\<^sub>\\<int> x) = 0\\<^sub>\\<int>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<int> -\\<^sub>\\<int> x = 0\\<^sub>\\<int>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<int> -\\<^sub>\\<int> x = 0\\<^sub>\\<int>", "have \"x' + (-x') = 0\" for x' :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' + - x' = 0", "by simp"], ["proof (state)\nthis:\n  ?x' + - ?x' = 0\n\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<int> -\\<^sub>\\<int> x = 0\\<^sub>\\<int>", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x +\\<^sub>\\<int> -\\<^sub>\\<int> x = 0\\<^sub>\\<int>", "show ?thesis"], ["proof (prove)\nusing this:\n  x +\\<^sub>\\<int> -\\<^sub>\\<int> x = 0\\<^sub>\\<int>\n\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<int> -\\<^sub>\\<int> x = 0\\<^sub>\\<int>", "."], ["proof (state)\nthis:\n  x +\\<^sub>\\<int> -\\<^sub>\\<int> x = 0\\<^sub>\\<int>\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Associative Law for Multiplication: Definition 1.4.1.e.\\<close>"], ["", "lemma vint_assoc_law_multiplication: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" and \"z \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\"  \n  shows \"(x *\\<^sub>\\<int> y) *\\<^sub>\\<int> z = x *\\<^sub>\\<int> (y *\\<^sub>\\<int> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<int> y *\\<^sub>\\<int> z =\n    x *\\<^sub>\\<int> (y *\\<^sub>\\<int> z)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<int> y *\\<^sub>\\<int> z =\n    x *\\<^sub>\\<int> (y *\\<^sub>\\<int> z)", "have \"(x' * y') * z' = x' * (y' * z')\" for x' y' z' :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' * y' * z' = x' * (y' * z')", "by simp"], ["proof (state)\nthis:\n  ?x' * ?y' * ?z' = ?x' * (?y' * ?z')\n\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<int> y *\\<^sub>\\<int> z =\n    x *\\<^sub>\\<int> (y *\\<^sub>\\<int> z)", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x *\\<^sub>\\<int> y *\\<^sub>\\<int> z =\n  x *\\<^sub>\\<int> (y *\\<^sub>\\<int> z)", "show ?thesis"], ["proof (prove)\nusing this:\n  x *\\<^sub>\\<int> y *\\<^sub>\\<int> z =\n  x *\\<^sub>\\<int> (y *\\<^sub>\\<int> z)\n\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<int> y *\\<^sub>\\<int> z =\n    x *\\<^sub>\\<int> (y *\\<^sub>\\<int> z)", "."], ["proof (state)\nthis:\n  x *\\<^sub>\\<int> y *\\<^sub>\\<int> z =\n  x *\\<^sub>\\<int> (y *\\<^sub>\\<int> z)\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Commutative Law for Multiplication: Definition 1.4.1.f.\\<close>"], ["", "lemma vint_commutative_law_multiplication: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" \n  shows \"x *\\<^sub>\\<int> y = y *\\<^sub>\\<int> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<int> y = y *\\<^sub>\\<int> x", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<int> y = y *\\<^sub>\\<int> x", "have \"x' * y' = y' * x'\" for x' y' :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' * y' = y' * x'", "by simp"], ["proof (state)\nthis:\n  ?x' * ?y' = ?y' * ?x'\n\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<int> y = y *\\<^sub>\\<int> x", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x *\\<^sub>\\<int> y = y *\\<^sub>\\<int> x", "show ?thesis"], ["proof (prove)\nusing this:\n  x *\\<^sub>\\<int> y = y *\\<^sub>\\<int> x\n\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<int> y = y *\\<^sub>\\<int> x", "."], ["proof (state)\nthis:\n  x *\\<^sub>\\<int> y = y *\\<^sub>\\<int> x\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Identity Law for multiplication: Definition 1.4.1.g.\\<close>"], ["", "lemma vint_identity_law_multiplication: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\"\n  shows \"x *\\<^sub>\\<int> 1\\<^sub>\\<int> = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<int> 1\\<^sub>\\<int> = x", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<int> 1\\<^sub>\\<int> = x", "have \"x' * 1 = x'\" for x' :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' * 1 = x'", "by simp"], ["proof (state)\nthis:\n  ?x' * 1 = ?x'\n\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<int> 1\\<^sub>\\<int> = x", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x *\\<^sub>\\<int> 1\\<^sub>\\<int> = x", "show ?thesis"], ["proof (prove)\nusing this:\n  x *\\<^sub>\\<int> 1\\<^sub>\\<int> = x\n\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<int> 1\\<^sub>\\<int> = x", "."], ["proof (state)\nthis:\n  x *\\<^sub>\\<int> 1\\<^sub>\\<int> = x\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Distributive Law for Multiplication: Definition 1.4.1.h.\\<close>"], ["", "lemma vint_distributive_law: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" and \"z \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\"  \n  shows \"x *\\<^sub>\\<int> (y +\\<^sub>\\<int> z) = (x *\\<^sub>\\<int> y) +\\<^sub>\\<int> (x *\\<^sub>\\<int> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<int> (y +\\<^sub>\\<int> z) =\n    x *\\<^sub>\\<int> y +\\<^sub>\\<int> (x *\\<^sub>\\<int> z)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<int> (y +\\<^sub>\\<int> z) =\n    x *\\<^sub>\\<int> y +\\<^sub>\\<int> (x *\\<^sub>\\<int> z)", "have \"x' * (y' + z') = (x' * y') + (x' * z')\" for x' y' z' :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' * (y' + z') = x' * y' + x' * z'", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  ?x' * (?y' + ?z') = ?x' * ?y' + ?x' * ?z'\n\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<int> (y +\\<^sub>\\<int> z) =\n    x *\\<^sub>\\<int> y +\\<^sub>\\<int> (x *\\<^sub>\\<int> z)", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x *\\<^sub>\\<int> (y +\\<^sub>\\<int> z) =\n  x *\\<^sub>\\<int> y +\\<^sub>\\<int> (x *\\<^sub>\\<int> z)", "show ?thesis"], ["proof (prove)\nusing this:\n  x *\\<^sub>\\<int> (y +\\<^sub>\\<int> z) =\n  x *\\<^sub>\\<int> y +\\<^sub>\\<int> (x *\\<^sub>\\<int> z)\n\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<int> (y +\\<^sub>\\<int> z) =\n    x *\\<^sub>\\<int> y +\\<^sub>\\<int> (x *\\<^sub>\\<int> z)", "."], ["proof (state)\nthis:\n  x *\\<^sub>\\<int> (y +\\<^sub>\\<int> z) =\n  x *\\<^sub>\\<int> y +\\<^sub>\\<int> (x *\\<^sub>\\<int> z)\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>No Zero Divisors Law: Definition 1.4.1.i.\\<close>"], ["", "lemma vint_no_zero_divisors_law: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" and \"x *\\<^sub>\\<int> y = 0\\<^sub>\\<int>\"\n  shows \"x = 0\\<^sub>\\<int> \\<or> y = 0\\<^sub>\\<int>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = 0\\<^sub>\\<int> \\<or> y = 0\\<^sub>\\<int>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x = 0\\<^sub>\\<int> \\<or> y = 0\\<^sub>\\<int>", "have \"x' * y' = 0 \\<Longrightarrow> x' = 0 \\<or> y' = 0\" for x' y' z' :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' * y' = 0 \\<Longrightarrow> x' = 0 \\<or> y' = 0", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  ?x' * ?y' = 0 \\<Longrightarrow> ?x' = 0 \\<or> ?y' = 0\n\ngoal (1 subgoal):\n 1. x = 0\\<^sub>\\<int> \\<or> y = 0\\<^sub>\\<int>", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x = 0\\<^sub>\\<int> \\<or> y = 0\\<^sub>\\<int>", "show ?thesis"], ["proof (prove)\nusing this:\n  x = 0\\<^sub>\\<int> \\<or> y = 0\\<^sub>\\<int>\n\ngoal (1 subgoal):\n 1. x = 0\\<^sub>\\<int> \\<or> y = 0\\<^sub>\\<int>", "."], ["proof (state)\nthis:\n  x = 0\\<^sub>\\<int> \\<or> y = 0\\<^sub>\\<int>\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Trichotomy Law: Definition 1.4.1.j\\<close>"], ["", "lemma vint_trichotomy_law:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\"\n  shows \n    \"(x <\\<^sub>\\<int> y \\<and> ~(x = y) \\<and> ~(y <\\<^sub>\\<int> x)) \\<or> \n    (~(x <\\<^sub>\\<int> y) \\<and> x = y \\<and> ~(y <\\<^sub>\\<int> x)) \\<or>\n    (~(x <\\<^sub>\\<int> y) \\<and> ~(x = y) \\<and> y <\\<^sub>\\<int> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x <\\<^sub>\\<int> y \\<and>\n    x \\<noteq> y \\<and>\n    [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vint_ls \\<or>\n    [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vint_ls \\<and>\n    x = y \\<and> [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vint_ls \\<or>\n    [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vint_ls \\<and>\n    x \\<noteq> y \\<and> y <\\<^sub>\\<int> x", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x <\\<^sub>\\<int> y \\<and>\n    x \\<noteq> y \\<and>\n    [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vint_ls \\<or>\n    [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vint_ls \\<and>\n    x = y \\<and> [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vint_ls \\<or>\n    [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vint_ls \\<and>\n    x \\<noteq> y \\<and> y <\\<^sub>\\<int> x", "have\n    \"(x' < y' \\<and> ~(x' = y') \\<and> ~(y' < x')) \\<or> \n    (~(x' < y') \\<and> x' = y' \\<and> ~(y' < x')) \\<or>\n    (~(x' < y') \\<and> ~(x' = y') \\<and> y' < x')\"\n    for x' y' z' :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' < y' \\<and> x' \\<noteq> y' \\<and> \\<not> y' < x' \\<or>\n    \\<not> x' < y' \\<and> x' = y' \\<and> \\<not> y' < x' \\<or>\n    \\<not> x' < y' \\<and> x' \\<noteq> y' \\<and> y' < x'", "by auto"], ["proof (state)\nthis:\n  ?x' < ?y' \\<and> ?x' \\<noteq> ?y' \\<and> \\<not> ?y' < ?x' \\<or>\n  \\<not> ?x' < ?y' \\<and> ?x' = ?y' \\<and> \\<not> ?y' < ?x' \\<or>\n  \\<not> ?x' < ?y' \\<and> ?x' \\<noteq> ?y' \\<and> ?y' < ?x'\n\ngoal (1 subgoal):\n 1. x <\\<^sub>\\<int> y \\<and>\n    x \\<noteq> y \\<and>\n    [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vint_ls \\<or>\n    [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vint_ls \\<and>\n    x = y \\<and> [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vint_ls \\<or>\n    [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vint_ls \\<and>\n    x \\<noteq> y \\<and> y <\\<^sub>\\<int> x", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x <\\<^sub>\\<int> y \\<and>\n  x \\<noteq> y \\<and>\n  [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vint_ls \\<or>\n  [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vint_ls \\<and>\n  x = y \\<and> [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vint_ls \\<or>\n  [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vint_ls \\<and>\n  x \\<noteq> y \\<and> y <\\<^sub>\\<int> x", "show ?thesis"], ["proof (prove)\nusing this:\n  x <\\<^sub>\\<int> y \\<and>\n  x \\<noteq> y \\<and>\n  [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vint_ls \\<or>\n  [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vint_ls \\<and>\n  x = y \\<and> [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vint_ls \\<or>\n  [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vint_ls \\<and>\n  x \\<noteq> y \\<and> y <\\<^sub>\\<int> x\n\ngoal (1 subgoal):\n 1. x <\\<^sub>\\<int> y \\<and>\n    x \\<noteq> y \\<and>\n    [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vint_ls \\<or>\n    [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vint_ls \\<and>\n    x = y \\<and> [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vint_ls \\<or>\n    [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vint_ls \\<and>\n    x \\<noteq> y \\<and> y <\\<^sub>\\<int> x", "."], ["proof (state)\nthis:\n  x <\\<^sub>\\<int> y \\<and>\n  x \\<noteq> y \\<and>\n  [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vint_ls \\<or>\n  [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vint_ls \\<and>\n  x = y \\<and> [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vint_ls \\<or>\n  [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vint_ls \\<and>\n  x \\<noteq> y \\<and> y <\\<^sub>\\<int> x\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Transitive Law: Definition 1.4.1.k\\<close>"], ["", "lemma vint_transitive_law:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" \n    and \"y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" \n    and \"z \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" \n    and \"x <\\<^sub>\\<int> y\" \n    and \"y <\\<^sub>\\<int> z\"\n  shows \"x <\\<^sub>\\<int> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x <\\<^sub>\\<int> z", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x <\\<^sub>\\<int> z", "have \"x' < y' \\<Longrightarrow> y' < z' \\<Longrightarrow> x' < z'\" for x' y' z' :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x' < y'; y' < z'\\<rbrakk> \\<Longrightarrow> x' < z'", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>?x' < ?y'; ?y' < ?z'\\<rbrakk> \\<Longrightarrow> ?x' < ?z'\n\ngoal (1 subgoal):\n 1. x <\\<^sub>\\<int> z", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x <\\<^sub>\\<int> z", "show ?thesis"], ["proof (prove)\nusing this:\n  x <\\<^sub>\\<int> z\n\ngoal (1 subgoal):\n 1. x <\\<^sub>\\<int> z", "."], ["proof (state)\nthis:\n  x <\\<^sub>\\<int> z\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Addition Law of Order: Definition 1.4.1.l\\<close>"], ["", "lemma vint_addition_law_of_order:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" and \"z \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" and \"x <\\<^sub>\\<int> y\"\n  shows \"x +\\<^sub>\\<int> z <\\<^sub>\\<int> y +\\<^sub>\\<int> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<int> z <\\<^sub>\\<int> y +\\<^sub>\\<int> z", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<int> z <\\<^sub>\\<int> y +\\<^sub>\\<int> z", "have \"x' < y' \\<Longrightarrow> x' + z' < y' + z'\" for x' y' z' :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' < y' \\<Longrightarrow> x' + z' < y' + z'", "by simp"], ["proof (state)\nthis:\n  ?x' < ?y' \\<Longrightarrow> ?x' + ?z' < ?y' + ?z'\n\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<int> z <\\<^sub>\\<int> y +\\<^sub>\\<int> z", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x +\\<^sub>\\<int> z <\\<^sub>\\<int> y +\\<^sub>\\<int> z", "show ?thesis"], ["proof (prove)\nusing this:\n  x +\\<^sub>\\<int> z <\\<^sub>\\<int> y +\\<^sub>\\<int> z\n\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<int> z <\\<^sub>\\<int> y +\\<^sub>\\<int> z", "."], ["proof (state)\nthis:\n  x +\\<^sub>\\<int> z <\\<^sub>\\<int> y +\\<^sub>\\<int> z\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Multiplication Law of Order: Definition 1.4.1.m\\<close>"], ["", "lemma vint_multiplication_law_of_order:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" \n    and \"y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" \n    and \"z \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" \n    and \"x <\\<^sub>\\<int> y\"\n    and \"0\\<^sub>\\<int> <\\<^sub>\\<int> z\"\n  shows \"x *\\<^sub>\\<int> z <\\<^sub>\\<int> y *\\<^sub>\\<int> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<int> z <\\<^sub>\\<int> y *\\<^sub>\\<int> z", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<int> z <\\<^sub>\\<int> y *\\<^sub>\\<int> z", "have \"x' < y' \\<Longrightarrow> 0 < z' \\<Longrightarrow> x' * z' < y' * z'\" for x' y' z' :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x' < y'; 0 < z'\\<rbrakk> \\<Longrightarrow> x' * z' < y' * z'", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>?x' < ?y'; 0 < ?z'\\<rbrakk>\n  \\<Longrightarrow> ?x' * ?z' < ?y' * ?z'\n\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<int> z <\\<^sub>\\<int> y *\\<^sub>\\<int> z", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x *\\<^sub>\\<int> z <\\<^sub>\\<int> y *\\<^sub>\\<int> z", "show ?thesis"], ["proof (prove)\nusing this:\n  x *\\<^sub>\\<int> z <\\<^sub>\\<int> y *\\<^sub>\\<int> z\n\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<int> z <\\<^sub>\\<int> y *\\<^sub>\\<int> z", "."], ["proof (state)\nthis:\n  x *\\<^sub>\\<int> z <\\<^sub>\\<int> y *\\<^sub>\\<int> z\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Non-Triviality: Definition 1.4.1.n\\<close>"], ["", "lemma vint_non_triviality: \"0\\<^sub>\\<int> \\<noteq> 1\\<^sub>\\<int>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0\\<^sub>\\<int> \\<noteq> 1\\<^sub>\\<int>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. 0\\<^sub>\\<int> \\<noteq> 1\\<^sub>\\<int>", "have \"0 \\<noteq> (1::int)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<noteq> 1", "by simp"], ["proof (state)\nthis:\n  0 \\<noteq> 1\n\ngoal (1 subgoal):\n 1. 0\\<^sub>\\<int> \\<noteq> 1\\<^sub>\\<int>", "from this[untransferred]"], ["proof (chain)\npicking this:\n  0\\<^sub>\\<int> \\<noteq> 1\\<^sub>\\<int>", "show ?thesis"], ["proof (prove)\nusing this:\n  0\\<^sub>\\<int> \\<noteq> 1\\<^sub>\\<int>\n\ngoal (1 subgoal):\n 1. 0\\<^sub>\\<int> \\<noteq> 1\\<^sub>\\<int>", "."], ["proof (state)\nthis:\n  0\\<^sub>\\<int> \\<noteq> 1\\<^sub>\\<int>\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Well-Ordering Principle.\\<close>"], ["", "lemma well_ordering_principle:\n  assumes \"A \\<subseteq>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" \n    and \"a \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" \n    and \"A \\<noteq> 0\" \n    and \"\\<And>x. x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow> a <\\<^sub>\\<int> x\"\n  obtains b where \"b \\<in>\\<^sub>\\<circ> A\" and \"\\<And>x. x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow> b \\<le>\\<^sub>\\<int> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>b \\<in>\\<^sub>\\<circ> A;\n         \\<And>x.\n            x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n            b \\<le>\\<^sub>\\<int> x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>b \\<in>\\<^sub>\\<circ> A;\n         \\<And>x.\n            x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n            b \\<le>\\<^sub>\\<int> x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>b \\<in>\\<^sub>\\<circ> A;\n         \\<And>x.\n            x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n            b \\<le>\\<^sub>\\<int> x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "fix A' and a' :: int"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>b \\<in>\\<^sub>\\<circ> A;\n         \\<And>x.\n            x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n            b \\<le>\\<^sub>\\<int> x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "assume prems: \"A' \\<noteq> {}\" \"x \\<in> A' \\<Longrightarrow> a' < x\" for x"], ["proof (state)\nthis:\n  A' \\<noteq> {}\n  ?x \\<in> A' \\<Longrightarrow> a' < ?x\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>b \\<in>\\<^sub>\\<circ> A;\n         \\<And>x.\n            x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n            b \\<le>\\<^sub>\\<int> x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  A' \\<noteq> {}\n  ?x \\<in> A' \\<Longrightarrow> a' < ?x", "obtain a'' where a'': \"a'' \\<in> A'\""], ["proof (prove)\nusing this:\n  A' \\<noteq> {}\n  ?x \\<in> A' \\<Longrightarrow> a' < ?x\n\ngoal (1 subgoal):\n 1. (\\<And>a''. a'' \\<in> A' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  a'' \\<in> A'\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>b \\<in>\\<^sub>\\<circ> A;\n         \\<And>x.\n            x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n            b \\<le>\\<^sub>\\<int> x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from wfE_min[OF wf_int_ge_less_than[of a'], OF a'']"], ["proof (chain)\npicking this:\n  (\\<And>z.\n      \\<lbrakk>z \\<in> A';\n       \\<And>y.\n          (y, z) \\<in> int_ge_less_than a' \\<Longrightarrow>\n          y \\<notin> A'\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain b'\n      where b'_A': \"b' \\<in> A'\" \n        and yb': \"(y, b') \\<in> int_ge_less_than a' \\<Longrightarrow> y \\<notin> A'\" \n      for y"], ["proof (prove)\nusing this:\n  (\\<And>z.\n      \\<lbrakk>z \\<in> A';\n       \\<And>y.\n          (y, z) \\<in> int_ge_less_than a' \\<Longrightarrow>\n          y \\<notin> A'\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>b'.\n        \\<lbrakk>b' \\<in> A';\n         \\<And>y.\n            (y, b') \\<in> int_ge_less_than a' \\<Longrightarrow>\n            y \\<notin> A'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  b' \\<in> A'\n  (?y, b') \\<in> int_ge_less_than a' \\<Longrightarrow> ?y \\<notin> A'\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>b \\<in>\\<^sub>\\<circ> A;\n         \\<And>x.\n            x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n            b \\<le>\\<^sub>\\<int> x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  b' \\<in> A'\n  (?y, b') \\<in> int_ge_less_than a' \\<Longrightarrow> ?y \\<notin> A'\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>b \\<in>\\<^sub>\\<circ> A;\n         \\<And>x.\n            x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n            b \\<le>\\<^sub>\\<int> x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from prems b'_A' yb'"], ["proof (chain)\npicking this:\n  A' \\<noteq> {}\n  ?x \\<in> A' \\<Longrightarrow> a' < ?x\n  b' \\<in> A'\n  (?y, b') \\<in> int_ge_less_than a' \\<Longrightarrow> ?y \\<notin> A'", "have \"\\<And>x. x \\<in> A' \\<Longrightarrow> b' \\<le> x\""], ["proof (prove)\nusing this:\n  A' \\<noteq> {}\n  ?x \\<in> A' \\<Longrightarrow> a' < ?x\n  b' \\<in> A'\n  (?y, b') \\<in> int_ge_less_than a' \\<Longrightarrow> ?y \\<notin> A'\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A' \\<Longrightarrow> b' \\<le> x", "unfolding int_ge_less_than_def"], ["proof (prove)\nusing this:\n  A' \\<noteq> {}\n  ?x \\<in> A' \\<Longrightarrow> a' < ?x\n  b' \\<in> A'\n  (?y, b') \\<in> {(z', z). a' \\<le> z' \\<and> z' < z} \\<Longrightarrow>\n  ?y \\<notin> A'\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A' \\<Longrightarrow> b' \\<le> x", "by fastforce"], ["proof (state)\nthis:\n  ?x \\<in> A' \\<Longrightarrow> b' \\<le> ?x\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>b \\<in>\\<^sub>\\<circ> A;\n         \\<And>x.\n            x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n            b \\<le>\\<^sub>\\<int> x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with b'_A'"], ["proof (chain)\npicking this:\n  b' \\<in> A'\n  ?x \\<in> A' \\<Longrightarrow> b' \\<le> ?x", "have \"\\<exists>b. b \\<in> A' \\<and> (\\<forall>x. x \\<in> A' \\<longrightarrow> b \\<le> x)\""], ["proof (prove)\nusing this:\n  b' \\<in> A'\n  ?x \\<in> A' \\<Longrightarrow> b' \\<le> ?x\n\ngoal (1 subgoal):\n 1. \\<exists>b.\n       b \\<in> A' \\<and>\n       (\\<forall>x. x \\<in> A' \\<longrightarrow> b \\<le> x)", "by blast"], ["proof (state)\nthis:\n  \\<exists>b.\n     b \\<in> A' \\<and> (\\<forall>x. x \\<in> A' \\<longrightarrow> b \\<le> x)\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>b \\<in>\\<^sub>\\<circ> A;\n         \\<And>x.\n            x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n            b \\<le>\\<^sub>\\<int> x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?A'2 \\<noteq> {};\n   \\<And>x. x \\<in> ?A'2 \\<Longrightarrow> ?a'2 < x\\<rbrakk>\n  \\<Longrightarrow> \\<exists>b.\n                       b \\<in> ?A'2 \\<and>\n                       (\\<forall>x.\n                           x \\<in> ?A'2 \\<longrightarrow> b \\<le> x)\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>b \\<in>\\<^sub>\\<circ> A;\n         \\<And>x.\n            x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n            b \\<le>\\<^sub>\\<int> x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note real_wo = this"], ["proof (state)\nthis:\n  \\<lbrakk>?A'2 \\<noteq> {};\n   \\<And>x. x \\<in> ?A'2 \\<Longrightarrow> ?a'2 < x\\<rbrakk>\n  \\<Longrightarrow> \\<exists>b.\n                       b \\<in> ?A'2 \\<and>\n                       (\\<forall>x.\n                           x \\<in> ?A'2 \\<longrightarrow> b \\<le> x)\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>b \\<in>\\<^sub>\\<circ> A;\n         \\<And>x.\n            x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n            b \\<le>\\<^sub>\\<int> x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from real_wo[\n      untransferred, of \\<open>elts A\\<close>, unfolded vnumber_simps, OF assms(1,2)\n      ]"], ["proof (chain)\npicking this:\n  \\<lbrakk>elts A \\<noteq> {};\n   \\<And>x.\n      \\<lbrakk>x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>;\n       x \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n      \\<Longrightarrow> a <\\<^sub>\\<int> x\\<rbrakk>\n  \\<Longrightarrow> \\<exists>b\\<in>elts \\<int>\\<^sub>\\<circ>.\n                       b \\<in>\\<^sub>\\<circ> A \\<and>\n                       (\\<forall>x\\<in>elts \\<int>\\<^sub>\\<circ>.\n                           x \\<in>\\<^sub>\\<circ> A \\<longrightarrow>\n                           b \\<le>\\<^sub>\\<int> x)", "obtain b \n    where \"b \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" \n      and \"b \\<in>\\<^sub>\\<circ> A\" \n      and \"\\<And>x. x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> \\<Longrightarrow> x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow> b \\<le>\\<^sub>\\<int> x\""], ["proof (prove)\nusing this:\n  \\<lbrakk>elts A \\<noteq> {};\n   \\<And>x.\n      \\<lbrakk>x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>;\n       x \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n      \\<Longrightarrow> a <\\<^sub>\\<int> x\\<rbrakk>\n  \\<Longrightarrow> \\<exists>b\\<in>elts \\<int>\\<^sub>\\<circ>.\n                       b \\<in>\\<^sub>\\<circ> A \\<and>\n                       (\\<forall>x\\<in>elts \\<int>\\<^sub>\\<circ>.\n                           x \\<in>\\<^sub>\\<circ> A \\<longrightarrow>\n                           b \\<le>\\<^sub>\\<int> x)\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>b \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>;\n         b \\<in>\\<^sub>\\<circ> A;\n         \\<And>x.\n            \\<lbrakk>x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>;\n             x \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n            \\<Longrightarrow> b \\<le>\\<^sub>\\<int> x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: assms(3,4))"], ["proof (state)\nthis:\n  b \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n  b \\<in>\\<^sub>\\<circ> A\n  \\<lbrakk>?x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>;\n   ?x \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n  \\<Longrightarrow> b \\<le>\\<^sub>\\<int> ?x\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>b \\<in>\\<^sub>\\<circ> A;\n         \\<And>x.\n            x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n            b \\<le>\\<^sub>\\<int> x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with assms that"], ["proof (chain)\npicking this:\n  A \\<subseteq>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n  a \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n  A \\<noteq> []\\<^sub>\\<circ>\n  ?x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow> a <\\<^sub>\\<int> ?x\n  \\<lbrakk>?b \\<in>\\<^sub>\\<circ> A;\n   \\<And>x.\n      x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n      ?b \\<le>\\<^sub>\\<int> x\\<rbrakk>\n  \\<Longrightarrow> thesis\n  b \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n  b \\<in>\\<^sub>\\<circ> A\n  \\<lbrakk>?x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>;\n   ?x \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n  \\<Longrightarrow> b \\<le>\\<^sub>\\<int> ?x", "show ?thesis"], ["proof (prove)\nusing this:\n  A \\<subseteq>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n  a \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n  A \\<noteq> []\\<^sub>\\<circ>\n  ?x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow> a <\\<^sub>\\<int> ?x\n  \\<lbrakk>?b \\<in>\\<^sub>\\<circ> A;\n   \\<And>x.\n      x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n      ?b \\<le>\\<^sub>\\<int> x\\<rbrakk>\n  \\<Longrightarrow> thesis\n  b \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n  b \\<in>\\<^sub>\\<circ> A\n  \\<lbrakk>?x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>;\n   ?x \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n  \\<Longrightarrow> b \\<le>\\<^sub>\\<int> ?x\n\ngoal (1 subgoal):\n 1. thesis", "unfolding vsubset_iff"], ["proof (prove)\nusing this:\n  \\<forall>t.\n     t \\<in>\\<^sub>\\<circ> A \\<longrightarrow>\n     t \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n  a \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n  A \\<noteq> []\\<^sub>\\<circ>\n  ?x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow> a <\\<^sub>\\<int> ?x\n  \\<lbrakk>?b \\<in>\\<^sub>\\<circ> A;\n   \\<And>x.\n      x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n      ?b \\<le>\\<^sub>\\<int> x\\<rbrakk>\n  \\<Longrightarrow> thesis\n  b \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n  b \\<in>\\<^sub>\\<circ> A\n  \\<lbrakk>?x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>;\n   ?x \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n  \\<Longrightarrow> b \\<le>\\<^sub>\\<int> ?x\n\ngoal (1 subgoal):\n 1. thesis", "by simp"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Fundamental properties of other operations\\<close>"], ["", "text\\<open>Minus.\\<close>"], ["", "lemma vint_minus_closed: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\"\n  shows \"x -\\<^sub>\\<int> y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x -\\<^sub>\\<int> y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x -\\<^sub>\\<int> y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "have \"x' - y' \\<in> UNIV\" for x' y' :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' - y' \\<in> UNIV", "by simp"], ["proof (state)\nthis:\n  ?x' - ?y' \\<in> UNIV\n\ngoal (1 subgoal):\n 1. x -\\<^sub>\\<int> y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x -\\<^sub>\\<int> y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "show ?thesis"], ["proof (prove)\nusing this:\n  x -\\<^sub>\\<int> y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. x -\\<^sub>\\<int> y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "."], ["proof (state)\nthis:\n  x -\\<^sub>\\<int> y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vint_minus_eq_plus_uminus: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\"\n  shows \"x -\\<^sub>\\<int> y = x +\\<^sub>\\<int> (-\\<^sub>\\<int> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x -\\<^sub>\\<int> y = x +\\<^sub>\\<int> -\\<^sub>\\<int> y", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x -\\<^sub>\\<int> y = x +\\<^sub>\\<int> -\\<^sub>\\<int> y", "have \"x' - y' = x' + (-y')\" for x' y' :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' - y' = x' + - y'", "by simp"], ["proof (state)\nthis:\n  ?x' - ?y' = ?x' + - ?y'\n\ngoal (1 subgoal):\n 1. x -\\<^sub>\\<int> y = x +\\<^sub>\\<int> -\\<^sub>\\<int> y", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x -\\<^sub>\\<int> y = x +\\<^sub>\\<int> -\\<^sub>\\<int> y", "show ?thesis"], ["proof (prove)\nusing this:\n  x -\\<^sub>\\<int> y = x +\\<^sub>\\<int> -\\<^sub>\\<int> y\n\ngoal (1 subgoal):\n 1. x -\\<^sub>\\<int> y = x +\\<^sub>\\<int> -\\<^sub>\\<int> y", "."], ["proof (state)\nthis:\n  x -\\<^sub>\\<int> y = x +\\<^sub>\\<int> -\\<^sub>\\<int> y\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Unary minus.\\<close>"], ["", "lemma vint_uminus_uminus: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" \n  shows \"x = -\\<^sub>\\<int> (-\\<^sub>\\<int> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = -\\<^sub>\\<int> (-\\<^sub>\\<int> x)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x = -\\<^sub>\\<int> (-\\<^sub>\\<int> x)", "have \"x' = -(-x')\" for x' :: int"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' = - (- x')", "by simp"], ["proof (state)\nthis:\n  ?x' = - (- ?x')\n\ngoal (1 subgoal):\n 1. x = -\\<^sub>\\<int> (-\\<^sub>\\<int> x)", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x = -\\<^sub>\\<int> (-\\<^sub>\\<int> x)", "show ?thesis"], ["proof (prove)\nusing this:\n  x = -\\<^sub>\\<int> (-\\<^sub>\\<int> x)\n\ngoal (1 subgoal):\n 1. x = -\\<^sub>\\<int> (-\\<^sub>\\<int> x)", "."], ["proof (state)\nthis:\n  x = -\\<^sub>\\<int> (-\\<^sub>\\<int> x)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Further properties\\<close>"], ["", "text\\<open>Addition.\\<close>"], ["", "global_interpretation vint_plus: binop_onto \\<open>\\<int>\\<^sub>\\<circ>\\<close> vint_plus"], ["proof (prove)\ngoal (1 subgoal):\n 1. binop_onto \\<int>\\<^sub>\\<circ> vint_plus", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. binop_onto \\<int>\\<^sub>\\<circ> vint_plus", "have binop: \"binop \\<int>\\<^sub>\\<circ> vint_plus\""], ["proof (prove)\ngoal (1 subgoal):\n 1. binop \\<int>\\<^sub>\\<circ> vint_plus", "proof(intro binopI nopI)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv vint_plus\n 2. 2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>\n 3. \\<D>\\<^sub>\\<circ> vint_plus =\n    \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n 4. \\<R>\\<^sub>\\<circ> vint_plus\n    \\<subseteq>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "show vsv: \"vsv vint_plus\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv vint_plus", "unfolding vint_plus_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (\\<lambda>x\\<in>\\<^sub>\\<circ>\\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n2\\<^sub>\\<nat>.\n            (int_of_vint (x\\<lparr>0\\<^sub>\\<nat>\\<rparr>) +\n             int_of_vint (x\\<lparr>1\\<^sub>\\<nat>\\<rparr>))\\<^sub>\\<int>)", "by auto"], ["proof (state)\nthis:\n  vsv vint_plus\n\ngoal (3 subgoals):\n 1. 2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>\n 2. \\<D>\\<^sub>\\<circ> vint_plus =\n    \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n 3. \\<R>\\<^sub>\\<circ> vint_plus\n    \\<subseteq>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "interpret vsv vint_plus"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv vint_plus", "by (rule vsv)"], ["proof (state)\ngoal (3 subgoals):\n 1. 2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>\n 2. \\<D>\\<^sub>\\<circ> vint_plus =\n    \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n 3. \\<R>\\<^sub>\\<circ> vint_plus\n    \\<subseteq>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "show \"2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>", "by simp"], ["proof (state)\nthis:\n  2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>\n\ngoal (2 subgoals):\n 1. \\<D>\\<^sub>\\<circ> vint_plus =\n    \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n 2. \\<R>\\<^sub>\\<circ> vint_plus\n    \\<subseteq>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "show dom: \"\\<D>\\<^sub>\\<circ> vint_plus = \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> vint_plus =\n    \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>", "unfolding vint_plus_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (\\<lambda>x\\<in>\\<^sub>\\<circ>\\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                                   2\\<^sub>\\<nat>.\n         (int_of_vint (x\\<lparr>0\\<^sub>\\<nat>\\<rparr>) +\n          int_of_vint (x\\<lparr>1\\<^sub>\\<nat>\\<rparr>))\\<^sub>\\<int>) =\n    \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>", "by simp"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> vint_plus =\n  \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vint_plus\n    \\<subseteq>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "show \"\\<R>\\<^sub>\\<circ> vint_plus \\<subseteq>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vint_plus\n    \\<subseteq>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "proof(intro vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_plus \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_plus \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "assume \"y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_plus\""], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_plus\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_plus \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "then"], ["proof (chain)\npicking this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_plus", "obtain ab where \"ab \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\" and y_def: \"y = vint_plus\\<lparr>ab\\<rparr>\""], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_plus\n\ngoal (1 subgoal):\n 1. (\\<And>ab.\n        \\<lbrakk>ab \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n  2\\<^sub>\\<nat>;\n         y = vint_plus\\<lparr>ab\\<rparr>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding dom[symmetric]"], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_plus\n\ngoal (1 subgoal):\n 1. (\\<And>ab.\n        \\<lbrakk>ab \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> vint_plus;\n         y = vint_plus\\<lparr>ab\\<rparr>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  ab \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                         2\\<^sub>\\<nat>\n  y = vint_plus\\<lparr>ab\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_plus \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "then"], ["proof (chain)\npicking this:\n  ab \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                         2\\<^sub>\\<nat>\n  y = vint_plus\\<lparr>ab\\<rparr>", "obtain a b \n        where ab_def: \"ab = [a, b]\\<^sub>\\<circ>\" and a: \"a \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" and b: \"b \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  ab \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                         2\\<^sub>\\<nat>\n  y = vint_plus\\<lparr>ab\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>ab = [a, b]\\<^sub>\\<circ>;\n         a \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>;\n         b \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  ab = [a, b]\\<^sub>\\<circ>\n  a \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n  b \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_plus \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "then"], ["proof (chain)\npicking this:\n  ab = [a, b]\\<^sub>\\<circ>\n  a \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n  b \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "show \"y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  ab = [a, b]\\<^sub>\\<circ>\n  a \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n  b \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "by (simp add: vint_plus_closed y_def)"], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> vint_plus\n  \\<subseteq>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  binop \\<int>\\<^sub>\\<circ> vint_plus\n\ngoal (1 subgoal):\n 1. binop_onto \\<int>\\<^sub>\\<circ> vint_plus", "interpret binop \\<open>\\<int>\\<^sub>\\<circ>\\<close> vint_plus"], ["proof (prove)\ngoal (1 subgoal):\n 1. binop \\<int>\\<^sub>\\<circ> vint_plus", "by (rule binop)"], ["proof (state)\ngoal (1 subgoal):\n 1. binop_onto \\<int>\\<^sub>\\<circ> vint_plus", "show \"binop_onto \\<int>\\<^sub>\\<circ> vint_plus\""], ["proof (prove)\ngoal (1 subgoal):\n 1. binop_onto \\<int>\\<^sub>\\<circ> vint_plus", "proof(intro binop_ontoI')"], ["proof (state)\ngoal (2 subgoals):\n 1. binop \\<int>\\<^sub>\\<circ> vint_plus\n 2. \\<int>\\<^sub>\\<circ>\n    \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_plus", "show \"binop \\<int>\\<^sub>\\<circ> vint_plus\""], ["proof (prove)\ngoal (1 subgoal):\n 1. binop \\<int>\\<^sub>\\<circ> vint_plus", "by (rule binop_axioms)"], ["proof (state)\nthis:\n  binop \\<int>\\<^sub>\\<circ> vint_plus\n\ngoal (1 subgoal):\n 1. \\<int>\\<^sub>\\<circ>\n    \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_plus", "show \"\\<int>\\<^sub>\\<circ> \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_plus\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<int>\\<^sub>\\<circ>\n    \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_plus", "proof(intro vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_plus", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_plus", "assume prems: \"y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\""], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_plus", "moreover"], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_plus", "from vint_zero vint_zero_closed"], ["proof (chain)\npicking this:\n  0\\<^sub>\\<int> = []\\<^sub>\\<circ>\n  0\\<^sub>\\<int> \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "have \"0 \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  0\\<^sub>\\<int> = []\\<^sub>\\<circ>\n  0\\<^sub>\\<int> \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. []\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "by auto"], ["proof (state)\nthis:\n  []\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_plus", "ultimately"], ["proof (chain)\npicking this:\n  y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n  []\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "have \"y +\\<^sub>\\<int> 0 \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_plus\""], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n  []\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. y +\\<^sub>\\<int> []\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_plus", "by auto"], ["proof (state)\nthis:\n  y +\\<^sub>\\<int> []\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_plus\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_plus", "moreover"], ["proof (state)\nthis:\n  y +\\<^sub>\\<int> []\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_plus\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_plus", "from prems vint_identity_law_addition"], ["proof (chain)\npicking this:\n  y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n  ?x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> \\<Longrightarrow>\n  ?x +\\<^sub>\\<int> 0\\<^sub>\\<int> = ?x", "have \"y = y +\\<^sub>\\<int> 0\""], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n  ?x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> \\<Longrightarrow>\n  ?x +\\<^sub>\\<int> 0\\<^sub>\\<int> = ?x\n\ngoal (1 subgoal):\n 1. y = y +\\<^sub>\\<int> []\\<^sub>\\<circ>", "by (simp add: vint_zero)"], ["proof (state)\nthis:\n  y = y +\\<^sub>\\<int> []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_plus", "ultimately"], ["proof (chain)\npicking this:\n  y +\\<^sub>\\<int> []\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_plus\n  y = y +\\<^sub>\\<int> []\\<^sub>\\<circ>", "show \"y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_plus\""], ["proof (prove)\nusing this:\n  y +\\<^sub>\\<int> []\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_plus\n  y = y +\\<^sub>\\<int> []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_plus", "by simp"], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_plus\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<int>\\<^sub>\\<circ>\n  \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_plus\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  binop_onto \\<int>\\<^sub>\\<circ> vint_plus\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Unary minus.\\<close>"], ["", "global_interpretation vint_uminus: v11 vint_uminus\n  rewrites \"\\<D>\\<^sub>\\<circ> vint_uminus = \\<int>\\<^sub>\\<circ>\"\n    and \"\\<R>\\<^sub>\\<circ> vint_uminus = \\<int>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v11 vint_uminus &&&\n    \\<D>\\<^sub>\\<circ> vint_uminus = \\<int>\\<^sub>\\<circ> &&&\n    \\<R>\\<^sub>\\<circ> vint_uminus = \\<int>\\<^sub>\\<circ>", "proof-"], ["proof (state)\ngoal (3 subgoals):\n 1. v11 vint_uminus\n 2. \\<D>\\<^sub>\\<circ> vint_uminus = \\<int>\\<^sub>\\<circ>\n 3. \\<R>\\<^sub>\\<circ> vint_uminus = \\<int>\\<^sub>\\<circ>", "show v11: \"v11 vint_uminus\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v11 vint_uminus", "proof(intro v11I)"], ["proof (state)\ngoal (2 subgoals):\n 1. vsv vint_uminus\n 2. vsv (vint_uminus\\<inverse>\\<^sub>\\<circ>)", "show vsv: \"vsv vint_uminus\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv vint_uminus", "unfolding vint_uminus_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (\\<lambda>x\\<in>\\<^sub>\\<circ>\\<int>\\<^sub>\\<circ>.\n            (- int_of_vint x)\\<^sub>\\<int>)", "by simp"], ["proof (state)\nthis:\n  vsv vint_uminus\n\ngoal (1 subgoal):\n 1. vsv (vint_uminus\\<inverse>\\<^sub>\\<circ>)", "interpret vsv vint_uminus"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv vint_uminus", "by (rule vsv)"], ["proof (state)\ngoal (1 subgoal):\n 1. vsv (vint_uminus\\<inverse>\\<^sub>\\<circ>)", "show \"vsv (vint_uminus\\<inverse>\\<^sub>\\<circ>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (vint_uminus\\<inverse>\\<^sub>\\<circ>)", "proof(intro vsvI)"], ["proof (state)\ngoal (2 subgoals):\n 1. vbrelation (vint_uminus\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> vint_uminus\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> vint_uminus\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "show \"vbrelation (vint_uminus\\<inverse>\\<^sub>\\<circ>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vbrelation (vint_uminus\\<inverse>\\<^sub>\\<circ>)", "by clarsimp"], ["proof (state)\nthis:\n  vbrelation (vint_uminus\\<inverse>\\<^sub>\\<circ>)\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> vint_uminus\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> vint_uminus\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "fix a b c"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> vint_uminus\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> vint_uminus\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "assume prems: \"\\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> vint_uminus\\<inverse>\\<^sub>\\<circ>\" \"\\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> vint_uminus\\<inverse>\\<^sub>\\<circ>\""], ["proof (state)\nthis:\n  \\<langle>a, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> vint_uminus\\<inverse>\\<^sub>\\<circ>\n  \\<langle>a, c\\<rangle>\n  \\<in>\\<^sub>\\<circ> vint_uminus\\<inverse>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> vint_uminus\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> vint_uminus\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "then"], ["proof (chain)\npicking this:\n  \\<langle>a, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> vint_uminus\\<inverse>\\<^sub>\\<circ>\n  \\<langle>a, c\\<rangle>\n  \\<in>\\<^sub>\\<circ> vint_uminus\\<inverse>\\<^sub>\\<circ>", "have ba: \"\\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vint_uminus\" and ca: \"\\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vint_uminus\""], ["proof (prove)\nusing this:\n  \\<langle>a, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> vint_uminus\\<inverse>\\<^sub>\\<circ>\n  \\<langle>a, c\\<rangle>\n  \\<in>\\<^sub>\\<circ> vint_uminus\\<inverse>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vint_uminus &&&\n    \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vint_uminus", "by auto"], ["proof (state)\nthis:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vint_uminus\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vint_uminus\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> vint_uminus\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> vint_uminus\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "then"], ["proof (chain)\npicking this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vint_uminus\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vint_uminus", "have b: \"b \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" and c: \"c \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vint_uminus\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vint_uminus\n\ngoal (1 subgoal):\n 1. b \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> &&&\n    c \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "by (simp_all add: VLambda_iff2 vint_uminus_def)"], ["proof (state)\nthis:\n  b \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n  c \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> vint_uminus\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> vint_uminus\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "from ba ca"], ["proof (chain)\npicking this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vint_uminus\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vint_uminus", "have \"a = -\\<^sub>\\<int> b\" \"a = -\\<^sub>\\<int> c\""], ["proof (prove)\nusing this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vint_uminus\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vint_uminus\n\ngoal (1 subgoal):\n 1. a = -\\<^sub>\\<int> b &&& a = -\\<^sub>\\<int> c", "by simp_all"], ["proof (state)\nthis:\n  a = -\\<^sub>\\<int> b\n  a = -\\<^sub>\\<int> c\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> vint_uminus\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> vint_uminus\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "with ba ca b c"], ["proof (chain)\npicking this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vint_uminus\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vint_uminus\n  b \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n  c \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n  a = -\\<^sub>\\<int> b\n  a = -\\<^sub>\\<int> c", "show \"b = c\""], ["proof (prove)\nusing this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vint_uminus\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vint_uminus\n  b \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n  c \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n  a = -\\<^sub>\\<int> b\n  a = -\\<^sub>\\<int> c\n\ngoal (1 subgoal):\n 1. b = c", "by (metis vint_uminus_uminus)"], ["proof (state)\nthis:\n  b = c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  vsv (vint_uminus\\<inverse>\\<^sub>\\<circ>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  v11 vint_uminus\n\ngoal (2 subgoals):\n 1. \\<D>\\<^sub>\\<circ> vint_uminus = \\<int>\\<^sub>\\<circ>\n 2. \\<R>\\<^sub>\\<circ> vint_uminus = \\<int>\\<^sub>\\<circ>", "interpret v11 vint_uminus"], ["proof (prove)\ngoal (1 subgoal):\n 1. v11 vint_uminus", "by (rule v11)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<D>\\<^sub>\\<circ> vint_uminus = \\<int>\\<^sub>\\<circ>\n 2. \\<R>\\<^sub>\\<circ> vint_uminus = \\<int>\\<^sub>\\<circ>", "show dom: \"\\<D>\\<^sub>\\<circ> vint_uminus = \\<int>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> vint_uminus = \\<int>\\<^sub>\\<circ>", "unfolding vint_uminus_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (\\<lambda>x\\<in>\\<^sub>\\<circ>\\<int>\\<^sub>\\<circ>.\n         (- int_of_vint x)\\<^sub>\\<int>) =\n    \\<int>\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> vint_uminus = \\<int>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vint_uminus = \\<int>\\<^sub>\\<circ>", "have \"\\<R>\\<^sub>\\<circ> vint_uminus \\<subseteq>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vint_uminus\n    \\<subseteq>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "proof(intro vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              vint_uminus \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              vint_uminus \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "assume \"y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_uminus\""], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_uminus\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              vint_uminus \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "then"], ["proof (chain)\npicking this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_uminus", "obtain x where \"x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" and y_def: \"y = -\\<^sub>\\<int> x\""], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_uminus\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>;\n         y = -\\<^sub>\\<int> x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding dom[symmetric]"], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_uminus\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> vint_uminus;\n         y = -\\<^sub>\\<int> x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n  y = -\\<^sub>\\<int> x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              vint_uminus \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "then"], ["proof (chain)\npicking this:\n  x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n  y = -\\<^sub>\\<int> x", "show \"y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n  y = -\\<^sub>\\<int> x\n\ngoal (1 subgoal):\n 1. y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "by (simp add: vint_uminus_closed)"], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> vint_uminus\n  \\<subseteq>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vint_uminus = \\<int>\\<^sub>\\<circ>", "moreover"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> vint_uminus\n  \\<subseteq>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vint_uminus = \\<int>\\<^sub>\\<circ>", "have \"\\<int>\\<^sub>\\<circ> \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_uminus\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<int>\\<^sub>\\<circ>\n    \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_uminus", "by (intro vsubsetI) \n      (metis dom vdomain_atD vint_uminus_closed vint_uminus_uminus)"], ["proof (state)\nthis:\n  \\<int>\\<^sub>\\<circ>\n  \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_uminus\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vint_uminus = \\<int>\\<^sub>\\<circ>", "ultimately"], ["proof (chain)\npicking this:\n  \\<R>\\<^sub>\\<circ> vint_uminus\n  \\<subseteq>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n  \\<int>\\<^sub>\\<circ>\n  \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_uminus", "show \"\\<R>\\<^sub>\\<circ> vint_uminus = \\<int>\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> vint_uminus\n  \\<subseteq>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n  \\<int>\\<^sub>\\<circ>\n  \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_uminus\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vint_uminus = \\<int>\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> vint_uminus = \\<int>\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Multiplication.\\<close>"], ["", "global_interpretation vint_mult: binop_onto \\<open>\\<int>\\<^sub>\\<circ>\\<close> vint_mult"], ["proof (prove)\ngoal (1 subgoal):\n 1. binop_onto \\<int>\\<^sub>\\<circ> vint_mult", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. binop_onto \\<int>\\<^sub>\\<circ> vint_mult", "have binop: \"binop \\<int>\\<^sub>\\<circ> vint_mult\""], ["proof (prove)\ngoal (1 subgoal):\n 1. binop \\<int>\\<^sub>\\<circ> vint_mult", "proof(intro binopI nopI)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv vint_mult\n 2. 2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>\n 3. \\<D>\\<^sub>\\<circ> vint_mult =\n    \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n 4. \\<R>\\<^sub>\\<circ> vint_mult\n    \\<subseteq>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "show vsv: \"vsv vint_mult\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv vint_mult", "unfolding vint_mult_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (\\<lambda>x\\<in>\\<^sub>\\<circ>\\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n2\\<^sub>\\<nat>.\n            (int_of_vint (x\\<lparr>0\\<^sub>\\<nat>\\<rparr>) *\n             int_of_vint (x\\<lparr>1\\<^sub>\\<nat>\\<rparr>))\\<^sub>\\<int>)", "by auto"], ["proof (state)\nthis:\n  vsv vint_mult\n\ngoal (3 subgoals):\n 1. 2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>\n 2. \\<D>\\<^sub>\\<circ> vint_mult =\n    \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n 3. \\<R>\\<^sub>\\<circ> vint_mult\n    \\<subseteq>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "interpret vsv vint_mult"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv vint_mult", "by (rule vsv)"], ["proof (state)\ngoal (3 subgoals):\n 1. 2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>\n 2. \\<D>\\<^sub>\\<circ> vint_mult =\n    \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n 3. \\<R>\\<^sub>\\<circ> vint_mult\n    \\<subseteq>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "show \"2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>", "by simp"], ["proof (state)\nthis:\n  2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>\n\ngoal (2 subgoals):\n 1. \\<D>\\<^sub>\\<circ> vint_mult =\n    \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n 2. \\<R>\\<^sub>\\<circ> vint_mult\n    \\<subseteq>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "show dom: \"\\<D>\\<^sub>\\<circ> vint_mult = \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> vint_mult =\n    \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>", "unfolding vint_mult_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (\\<lambda>x\\<in>\\<^sub>\\<circ>\\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                                   2\\<^sub>\\<nat>.\n         (int_of_vint (x\\<lparr>0\\<^sub>\\<nat>\\<rparr>) *\n          int_of_vint (x\\<lparr>1\\<^sub>\\<nat>\\<rparr>))\\<^sub>\\<int>) =\n    \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>", "by simp"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> vint_mult =\n  \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vint_mult\n    \\<subseteq>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "show \"\\<R>\\<^sub>\\<circ> vint_mult \\<subseteq>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vint_mult\n    \\<subseteq>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "proof(intro vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_mult \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_mult \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "assume \"y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_mult\""], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_mult\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_mult \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "then"], ["proof (chain)\npicking this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_mult", "obtain ab where \"ab \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\" and y_def: \"y = vint_mult\\<lparr>ab\\<rparr>\""], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_mult\n\ngoal (1 subgoal):\n 1. (\\<And>ab.\n        \\<lbrakk>ab \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n  2\\<^sub>\\<nat>;\n         y = vint_mult\\<lparr>ab\\<rparr>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding dom[symmetric]"], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_mult\n\ngoal (1 subgoal):\n 1. (\\<And>ab.\n        \\<lbrakk>ab \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> vint_mult;\n         y = vint_mult\\<lparr>ab\\<rparr>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  ab \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                         2\\<^sub>\\<nat>\n  y = vint_mult\\<lparr>ab\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_mult \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "then"], ["proof (chain)\npicking this:\n  ab \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                         2\\<^sub>\\<nat>\n  y = vint_mult\\<lparr>ab\\<rparr>", "obtain a b \n        where ab_def: \"ab = [a, b]\\<^sub>\\<circ>\" and a: \"a \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\" and b: \"b \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  ab \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                         2\\<^sub>\\<nat>\n  y = vint_mult\\<lparr>ab\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>ab = [a, b]\\<^sub>\\<circ>;\n         a \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>;\n         b \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  ab = [a, b]\\<^sub>\\<circ>\n  a \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n  b \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_mult \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "then"], ["proof (chain)\npicking this:\n  ab = [a, b]\\<^sub>\\<circ>\n  a \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n  b \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "show \"y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  ab = [a, b]\\<^sub>\\<circ>\n  a \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n  b \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "by (simp add: vint_mult_closed y_def)"], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> vint_mult\n  \\<subseteq>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  binop \\<int>\\<^sub>\\<circ> vint_mult\n\ngoal (1 subgoal):\n 1. binop_onto \\<int>\\<^sub>\\<circ> vint_mult", "interpret binop \\<open>\\<int>\\<^sub>\\<circ>\\<close> vint_mult"], ["proof (prove)\ngoal (1 subgoal):\n 1. binop \\<int>\\<^sub>\\<circ> vint_mult", "by (rule binop)"], ["proof (state)\ngoal (1 subgoal):\n 1. binop_onto \\<int>\\<^sub>\\<circ> vint_mult", "show \"binop_onto \\<int>\\<^sub>\\<circ> vint_mult\""], ["proof (prove)\ngoal (1 subgoal):\n 1. binop_onto \\<int>\\<^sub>\\<circ> vint_mult", "proof(intro binop_ontoI')"], ["proof (state)\ngoal (2 subgoals):\n 1. binop \\<int>\\<^sub>\\<circ> vint_mult\n 2. \\<int>\\<^sub>\\<circ>\n    \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_mult", "show \"binop \\<int>\\<^sub>\\<circ> vint_mult\""], ["proof (prove)\ngoal (1 subgoal):\n 1. binop \\<int>\\<^sub>\\<circ> vint_mult", "by (rule binop_axioms)"], ["proof (state)\nthis:\n  binop \\<int>\\<^sub>\\<circ> vint_mult\n\ngoal (1 subgoal):\n 1. \\<int>\\<^sub>\\<circ>\n    \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_mult", "show \"\\<int>\\<^sub>\\<circ> \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_mult\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<int>\\<^sub>\\<circ>\n    \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_mult", "proof(intro vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_mult", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_mult", "assume prems: \"y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\""], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_mult", "moreover"], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_mult", "from vint_one vint_one_closed"], ["proof (chain)\npicking this:\n  1\\<^sub>\\<int> = 1\n  1\\<^sub>\\<int> \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "have 0: \"1 \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  1\\<^sub>\\<int> = 1\n  1\\<^sub>\\<int> \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. 1 \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "by auto"], ["proof (state)\nthis:\n  1 \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_mult", "ultimately"], ["proof (chain)\npicking this:\n  y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n  1 \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>", "have \"y *\\<^sub>\\<int> 1 \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_mult\""], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n  1 \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. y *\\<^sub>\\<int> 1 \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_mult", "by auto"], ["proof (state)\nthis:\n  y *\\<^sub>\\<int> 1 \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_mult\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_mult", "moreover"], ["proof (state)\nthis:\n  y *\\<^sub>\\<int> 1 \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_mult\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_mult", "from prems vint_identity_law_multiplication"], ["proof (chain)\npicking this:\n  y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n  ?x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> \\<Longrightarrow>\n  ?x *\\<^sub>\\<int> 1\\<^sub>\\<int> = ?x", "have \"y = y *\\<^sub>\\<int> 1\""], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ>\n  ?x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> \\<Longrightarrow>\n  ?x *\\<^sub>\\<int> 1\\<^sub>\\<int> = ?x\n\ngoal (1 subgoal):\n 1. y = y *\\<^sub>\\<int> 1", "by (simp add: vint_one)"], ["proof (state)\nthis:\n  y = y *\\<^sub>\\<int> 1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<int>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_mult", "ultimately"], ["proof (chain)\npicking this:\n  y *\\<^sub>\\<int> 1 \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_mult\n  y = y *\\<^sub>\\<int> 1", "show \"y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_mult\""], ["proof (prove)\nusing this:\n  y *\\<^sub>\\<int> 1 \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_mult\n  y = y *\\<^sub>\\<int> 1\n\ngoal (1 subgoal):\n 1. y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_mult", "by simp"], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_mult\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<int>\\<^sub>\\<circ>\n  \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vint_mult\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  binop_onto \\<int>\\<^sub>\\<circ> vint_mult\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Rational numbers\\<close>"], ["", "subsubsection\\<open>Definition\\<close>"], ["", "definition vrat_of_rat :: \"rat \\<Rightarrow> V\"\n  where \"vrat_of_rat x = vreal_of_real (real_of_rat x)\""], ["", "notation vrat_of_rat (\\<open>_\\<^sub>\\<rat>\\<close> [999] 999)"], ["", "declare [[coercion \"vrat_of_rat :: rat \\<Rightarrow> V\"]]"], ["", "definition vrat :: V (\\<open>\\<rat>\\<^sub>\\<circ>\\<close>)\n  where \"vrat = set (range vrat_of_rat)\""], ["", "definition rat_of_vrat :: \"V \\<Rightarrow> rat\"\n  where \"rat_of_vrat = inv_into UNIV vrat_of_rat\""], ["", "text\\<open>Rules.\\<close>"], ["", "lemma vrat_of_rat_in_vratI[intro, simp]: \"a\\<^sub>\\<rat> \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a\\<^sub>\\<rat> \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "by (simp add: vrat_def)"], ["", "lemma vrat_of_rat_in_vratE[elim]:\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\"\n  obtains b where \"b\\<^sub>\\<rat> = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>b. b\\<^sub>\\<rat> = a \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. (\\<And>b. b\\<^sub>\\<rat> = a \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding vrat_def"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set (range vrat_of_rat)\n\ngoal (1 subgoal):\n 1. (\\<And>b. b\\<^sub>\\<rat> = a \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["", "subsubsection\\<open>Elementary properties\\<close>"], ["", "lemma vrat_vsubset_vreal: \"\\<rat>\\<^sub>\\<circ> \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rat>\\<^sub>\\<circ> \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>", "unfolding vrat_def vrat_of_rat_def vreal_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set (range (\\<lambda>x. (real_of_rat x)\\<^sub>\\<real>))\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set (range vreal_of_real)", "using image_cong"], ["proof (prove)\nusing this:\n  \\<lbrakk>?M = ?N;\n   \\<And>x. x \\<in> ?N \\<Longrightarrow> ?f x = ?g x\\<rbrakk>\n  \\<Longrightarrow> ?f ` ?M = ?g ` ?N\n\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set (range (\\<lambda>x. (real_of_rat x)\\<^sub>\\<real>))\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set (range vreal_of_real)", "by auto"], ["", "lemma vrat_in_Vset_\\<omega>2: \"\\<rat>\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rat>\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)", "using vrat_vsubset_vreal vreal_in_Vset_\\<omega>2"], ["proof (prove)\nusing this:\n  \\<rat>\\<^sub>\\<circ> \\<subseteq>\\<^sub>\\<circ> \\<real>\\<^sub>\\<circ>\n  \\<real>\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)\n\ngoal (1 subgoal):\n 1. \\<rat>\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> Vset (\\<omega> + \\<omega>)", "by auto"], ["", "lemma inj_vrat_of_rat: \"inj vrat_of_rat\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj vrat_of_rat", "using inj_vreal_of_real"], ["proof (prove)\nusing this:\n  inj vreal_of_real\n\ngoal (1 subgoal):\n 1. inj vrat_of_rat", "unfolding vrat_of_rat_def inj_def of_rat_eq_iff"], ["proof (prove)\nusing this:\n  \\<forall>x y. x\\<^sub>\\<real> = y\\<^sub>\\<real> \\<longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       (real_of_rat x)\\<^sub>\\<real> =\n       (real_of_rat y)\\<^sub>\\<real> \\<longrightarrow>\n       x = y", "by force"], ["", "lemma rat_of_vrat_vrat_of_rat[simp]: \"rat_of_vrat (a\\<^sub>\\<rat>) = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_of_vrat (a\\<^sub>\\<rat>) = a", "by (simp add: inj_vrat_of_rat rat_of_vrat_def)"], ["", "text\\<open>Transfer rules.\\<close>"], ["", "definition cr_vrat :: \"V \\<Rightarrow> rat \\<Rightarrow> bool\"\n  where \"cr_vrat a b \\<longleftrightarrow> (a = vrat_of_rat b)\""], ["", "lemma cr_vrat_right_total[transfer_rule]: \"right_total cr_vrat\""], ["proof (prove)\ngoal (1 subgoal):\n 1. right_total cr_vrat", "unfolding cr_vrat_def right_total_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y. \\<exists>x. x = y\\<^sub>\\<rat>", "by simp"], ["", "lemma cr_vrat_bi_unqie[transfer_rule]: \"bi_unique cr_vrat\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bi_unique cr_vrat", "unfolding cr_vrat_def bi_unique_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x y z.\n        x = y\\<^sub>\\<rat> \\<longrightarrow>\n        x = z\\<^sub>\\<rat> \\<longrightarrow> y = z) \\<and>\n    (\\<forall>x y z.\n        x = z\\<^sub>\\<rat> \\<longrightarrow>\n        y = z\\<^sub>\\<rat> \\<longrightarrow> x = y)", "by (simp add: inj_eq inj_vrat_of_rat)"], ["", "lemma cr_vrat_transfer_domain_rule[transfer_domain_rule]: \n  \"Domainp cr_vrat = (\\<lambda>x. x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Domainp cr_vrat =\n    (\\<lambda>x. x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>)", "unfolding cr_vrat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Domainp (\\<lambda>a b. a = b\\<^sub>\\<rat>) =\n    (\\<lambda>x. x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>)", "by force"], ["", "lemma vrat_transfer[transfer_rule]: \n  \"(rel_set cr_vrat) (elts \\<rat>\\<^sub>\\<circ>) (UNIV::rat set)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_set cr_vrat (elts \\<rat>\\<^sub>\\<circ>) UNIV", "unfolding cr_vrat_def rel_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x\\<in>elts \\<rat>\\<^sub>\\<circ>.\n        \\<exists>b\\<in>UNIV. x = b\\<^sub>\\<rat>) \\<and>\n    (\\<forall>y\\<in>UNIV.\n        \\<exists>x\\<in>elts \\<rat>\\<^sub>\\<circ>. x = y\\<^sub>\\<rat>)", "by auto"], ["", "lemma vrat_of_rat_transfer[transfer_rule]: \"cr_vrat (vrat_of_rat a) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cr_vrat (a\\<^sub>\\<rat>) a", "unfolding cr_vrat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. a\\<^sub>\\<rat> = a\\<^sub>\\<rat>", "by auto"], ["", "subsubsection\\<open>Operations\\<close>"], ["", "lemma vrat_fsingleton_in_fproduct_vrat: \"[a\\<^sub>\\<rat>]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 1\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [a\\<^sub>\\<rat>]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 1\\<^sub>\\<nat>", "by auto"], ["", "lemma vrat_fpair_in_fproduct_vrat: \"[a\\<^sub>\\<rat>, b\\<^sub>\\<rat>]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [a\\<^sub>\\<rat>, b\\<^sub>\\<rat>]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>", "by force"], ["", "text\\<open>Zero.\\<close>"], ["", "lemma vrat_zero: \"0\\<^sub>\\<rat> = (0::V)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0\\<^sub>\\<rat> = []\\<^sub>\\<circ>", "by (simp add: vrat_of_rat_def vreal_zero)"], ["", "text\\<open>One.\\<close>"], ["", "lemma vrat_one: \"1\\<^sub>\\<rat> = (1::V)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1\\<^sub>\\<rat> = 1", "by (simp add: vreal_one vrat_of_rat_def)"], ["", "text\\<open>Addition.\\<close>"], ["", "definition vrat_plus :: V \n  where \"vrat_plus = \n    (\\<lambda>x\\<in>\\<^sub>\\<circ>\\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>. (rat_of_vrat (x\\<lparr>0\\<^sub>\\<nat>\\<rparr>) + rat_of_vrat (x\\<lparr>1\\<^sub>\\<nat>\\<rparr>))\\<^sub>\\<rat>)\""], ["", "abbreviation vrat_plus_app (infixl \"+\\<^sub>\\<rat>\" 65) \n  where \"vrat_plus_app a b \\<equiv> vrat_plus\\<lparr>a, b\\<rparr>\\<^sub>\\<bullet>\""], ["", "lemma vrat_plus_transfer[transfer_rule]: \n  includes lifting_syntax\n  shows \"(cr_vrat ===> cr_vrat ===> cr_vrat) (+\\<^sub>\\<rat>) (+)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cr_vrat ===> cr_vrat ===> cr_vrat) (+\\<^sub>\\<rat>) (+)", "using vrat_fpair_in_fproduct_vrat"], ["proof (prove)\nusing this:\n  [?a\\<^sub>\\<rat>, ?b\\<^sub>\\<rat>]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. (cr_vrat ===> cr_vrat ===> cr_vrat) (+\\<^sub>\\<rat>) (+)", "by (intro rel_funI, unfold vrat_plus_def cr_vrat_def cr_scalar_def) \n    (simp add: nat_omega_simps)"], ["", "text\\<open>Multiplication.\\<close>"], ["", "definition vrat_mult :: V \n  where \"vrat_mult =\n    (\\<lambda>x\\<in>\\<^sub>\\<circ>\\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>. (rat_of_vrat (x\\<lparr>0\\<^sub>\\<nat>\\<rparr>) * rat_of_vrat (x\\<lparr>1\\<^sub>\\<nat>\\<rparr>))\\<^sub>\\<rat>)\""], ["", "abbreviation vrat_mult_app (infixl \"*\\<^sub>\\<rat>\" 65) \n  where \"vrat_mult_app a b \\<equiv> vrat_mult\\<lparr>a, b\\<rparr>\\<^sub>\\<bullet>\""], ["", "lemma vrat_mult_transfer[transfer_rule]: \n  includes lifting_syntax\n  shows \"(cr_vrat ===> cr_vrat ===> cr_vrat) (*\\<^sub>\\<rat>) (*)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cr_vrat ===> cr_vrat ===> cr_vrat) (*\\<^sub>\\<rat>) (*)", "using vrat_fpair_in_fproduct_vrat"], ["proof (prove)\nusing this:\n  [?a\\<^sub>\\<rat>, ?b\\<^sub>\\<rat>]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. (cr_vrat ===> cr_vrat ===> cr_vrat) (*\\<^sub>\\<rat>) (*)", "by (intro rel_funI, unfold vrat_mult_def cr_vrat_def cr_scalar_def) \n    (simp add: nat_omega_simps)"], ["", "text\\<open>Unary minus.\\<close>"], ["", "definition vrat_uminus :: V \n  where \"vrat_uminus = (\\<lambda>x\\<in>\\<^sub>\\<circ>\\<rat>\\<^sub>\\<circ>. (uminus (rat_of_vrat x))\\<^sub>\\<rat>)\""], ["", "abbreviation vrat_uminus_app (\"-\\<^sub>\\<rat> _\" [81] 80) \n  where \"-\\<^sub>\\<rat> a \\<equiv> vrat_uminus\\<lparr>a\\<rparr>\""], ["", "lemma vrat_uminus_transfer[transfer_rule]: \n  includes lifting_syntax\n  shows \"(cr_vrat ===> cr_vrat) (vrat_uminus_app) (uminus)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cr_vrat ===> cr_vrat) vrat_uminus_app uminus", "using vrat_fsingleton_in_fproduct_vrat"], ["proof (prove)\nusing this:\n  [?a\\<^sub>\\<rat>]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 1\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. (cr_vrat ===> cr_vrat) vrat_uminus_app uminus", "by (intro rel_funI, unfold vrat_uminus_def cr_vrat_def cr_scalar_def) \n    (simp add: nat_omega_simps)"], ["", "text\\<open>Multiplicative inverse.\\<close>"], ["", "definition vrat_inverse :: V \n  where \"vrat_inverse = (\\<lambda>x\\<in>\\<^sub>\\<circ>\\<rat>\\<^sub>\\<circ>. (inverse (rat_of_vrat x))\\<^sub>\\<rat>)\""], ["", "abbreviation vrat_inverse_app (\"(_\\<inverse>\\<^sub>\\<rat>)\" [1000] 999) \n  where \"a\\<inverse>\\<^sub>\\<rat> \\<equiv> vrat_inverse\\<lparr>a\\<rparr>\""], ["", "lemma vrat_inverse_transfer[transfer_rule]: \n  includes lifting_syntax\n  shows \"(cr_vrat ===> cr_vrat) (vrat_inverse_app) (inverse)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cr_vrat ===> cr_vrat) vrat_inverse_app inverse", "using vrat_fsingleton_in_fproduct_vrat"], ["proof (prove)\nusing this:\n  [?a\\<^sub>\\<rat>]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 1\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. (cr_vrat ===> cr_vrat) vrat_inverse_app inverse", "by (intro rel_funI, unfold vrat_inverse_def cr_vrat_def cr_scalar_def) \n    (simp add: nat_omega_simps)"], ["", "text\\<open>Order.\\<close>"], ["", "definition vrat_le :: V \n  where \"vrat_le =\n    set {[a, b]\\<^sub>\\<circ> | a b. [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat> \\<and> rat_of_vrat a \\<le> rat_of_vrat b}\""], ["", "abbreviation vrat_le' (\"(_/ \\<le>\\<^sub>\\<rat> _)\"  [51, 51] 50)\n  where \"a \\<le>\\<^sub>\\<rat> b \\<equiv> [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> vrat_le\""], ["", "lemma small_vrat_le[simp]: \n  \"small {[a, b]\\<^sub>\\<circ> | a b. [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat> \\<and> rat_of_vrat a \\<le> rat_of_vrat b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. small\n     {[a, b]\\<^sub>\\<circ> |a b.\n      [a, b]\\<^sub>\\<circ>\n      \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                          2\\<^sub>\\<nat> \\<and>\n      rat_of_vrat a \\<le> rat_of_vrat b}", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. small\n     {[a, b]\\<^sub>\\<circ> |a b.\n      [a, b]\\<^sub>\\<circ>\n      \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                          2\\<^sub>\\<nat> \\<and>\n      rat_of_vrat a \\<le> rat_of_vrat b}", "have small: \"small {[a, b]\\<^sub>\\<circ> | a b. [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. small\n     {[a, b]\\<^sub>\\<circ> |a b.\n      [a, b]\\<^sub>\\<circ>\n      \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                          2\\<^sub>\\<nat>}", "by simp"], ["proof (state)\nthis:\n  small\n   {[a, b]\\<^sub>\\<circ> |a b.\n    [a, b]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                        2\\<^sub>\\<nat>}\n\ngoal (1 subgoal):\n 1. small\n     {[a, b]\\<^sub>\\<circ> |a b.\n      [a, b]\\<^sub>\\<circ>\n      \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                          2\\<^sub>\\<nat> \\<and>\n      rat_of_vrat a \\<le> rat_of_vrat b}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. small\n     {[a, b]\\<^sub>\\<circ> |a b.\n      [a, b]\\<^sub>\\<circ>\n      \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                          2\\<^sub>\\<nat> \\<and>\n      rat_of_vrat a \\<le> rat_of_vrat b}", "by (rule smaller_than_small[OF small]) auto"], ["proof (state)\nthis:\n  small\n   {[a, b]\\<^sub>\\<circ> |a b.\n    [a, b]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                        2\\<^sub>\\<nat> \\<and>\n    rat_of_vrat a \\<le> rat_of_vrat b}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vrat_le_transfer[transfer_rule]:\n  includes lifting_syntax\n  shows \"(cr_vrat ===> cr_vrat ===> (=)) vrat_le' (\\<le>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cr_vrat ===> cr_vrat ===> (=)) vrat_le' (\\<le>)", "using vrat_fsingleton_in_fproduct_vrat"], ["proof (prove)\nusing this:\n  [?a\\<^sub>\\<rat>]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 1\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. (cr_vrat ===> cr_vrat ===> (=)) vrat_le' (\\<le>)", "by (intro rel_funI, unfold cr_scalar_def cr_vrat_def vrat_le_def)\n    (auto simp: nat_omega_simps)"], ["", "text\\<open>Strict order.\\<close>"], ["", "definition vrat_ls :: V \n  where \"vrat_ls =\n    set {[a, b]\\<^sub>\\<circ> | a b. [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat> \\<and> rat_of_vrat a < rat_of_vrat b}\""], ["", "abbreviation vrat_ls' (\"(_/ <\\<^sub>\\<rat> _)\"  [51, 51] 50)\n  where \"a <\\<^sub>\\<rat> b \\<equiv> [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> vrat_ls\""], ["", "lemma small_vrat_ls[simp]: \n  \"small {[a, b]\\<^sub>\\<circ> | a b. [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat> \\<and> rat_of_vrat a < rat_of_vrat b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. small\n     {[a, b]\\<^sub>\\<circ> |a b.\n      [a, b]\\<^sub>\\<circ>\n      \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                          2\\<^sub>\\<nat> \\<and>\n      rat_of_vrat a < rat_of_vrat b}", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. small\n     {[a, b]\\<^sub>\\<circ> |a b.\n      [a, b]\\<^sub>\\<circ>\n      \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                          2\\<^sub>\\<nat> \\<and>\n      rat_of_vrat a < rat_of_vrat b}", "have small: \"small {[a, b]\\<^sub>\\<circ> | a b. [a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. small\n     {[a, b]\\<^sub>\\<circ> |a b.\n      [a, b]\\<^sub>\\<circ>\n      \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                          2\\<^sub>\\<nat>}", "by simp"], ["proof (state)\nthis:\n  small\n   {[a, b]\\<^sub>\\<circ> |a b.\n    [a, b]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                        2\\<^sub>\\<nat>}\n\ngoal (1 subgoal):\n 1. small\n     {[a, b]\\<^sub>\\<circ> |a b.\n      [a, b]\\<^sub>\\<circ>\n      \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                          2\\<^sub>\\<nat> \\<and>\n      rat_of_vrat a < rat_of_vrat b}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. small\n     {[a, b]\\<^sub>\\<circ> |a b.\n      [a, b]\\<^sub>\\<circ>\n      \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                          2\\<^sub>\\<nat> \\<and>\n      rat_of_vrat a < rat_of_vrat b}", "by (rule smaller_than_small[OF small]) auto"], ["proof (state)\nthis:\n  small\n   {[a, b]\\<^sub>\\<circ> |a b.\n    [a, b]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                        2\\<^sub>\\<nat> \\<and>\n    rat_of_vrat a < rat_of_vrat b}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vrat_ls_transfer[transfer_rule]:\n  includes lifting_syntax\n  shows \"(cr_vrat ===> cr_vrat ===> (=)) vrat_ls' (<)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cr_vrat ===> cr_vrat ===> (=)) vrat_ls' (<)", "by (intro rel_funI, unfold cr_scalar_def cr_vrat_def vrat_ls_def)\n    (auto simp: nat_omega_simps)"], ["", "text\\<open>Subtraction.\\<close>"], ["", "definition vrat_minus :: V \n  where \"vrat_minus = \n    (\\<lambda>x\\<in>\\<^sub>\\<circ>\\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>. (rat_of_vrat (x\\<lparr>0\\<^sub>\\<nat>\\<rparr>) - rat_of_vrat (x\\<lparr>1\\<^sub>\\<nat>\\<rparr>))\\<^sub>\\<rat>)\""], ["", "abbreviation vrat_minus_app (infixl \"-\\<^sub>\\<rat>\" 65) \n  where \"vrat_minus_app a b \\<equiv> vrat_minus\\<lparr>a, b\\<rparr>\\<^sub>\\<bullet>\""], ["", "lemma vrat_minus_transfer[transfer_rule]: \n  includes lifting_syntax\n  shows \"(cr_vrat ===> cr_vrat ===> cr_vrat)\n    (-\\<^sub>\\<rat>) (-)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cr_vrat ===> cr_vrat ===> cr_vrat) (-\\<^sub>\\<rat>) (-)", "using vrat_fpair_in_fproduct_vrat"], ["proof (prove)\nusing this:\n  [?a\\<^sub>\\<rat>, ?b\\<^sub>\\<rat>]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. (cr_vrat ===> cr_vrat ===> cr_vrat) (-\\<^sub>\\<rat>) (-)", "by (intro rel_funI, unfold vrat_minus_def cr_vrat_def cr_scalar_def) \n    (simp add: nat_omega_simps)"], ["", "subsubsection\\<open>Axioms of an ordered field\\<close>"], ["", "text\\<open>The exposition follows Theorem 1.5.5 from the textbook\n\\<open>The Real Numbers and Real Analysis\\<close> by E. Bloch\n\\cite{bloch_real_2010}.\\<close>"], ["", "lemma vrat_zero_closed: \"0\\<^sub>\\<rat> \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0\\<^sub>\\<rat> \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "by auto"], ["", "lemma vrat_one_closed: \"1\\<^sub>\\<rat> \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1\\<^sub>\\<rat> \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "by auto"], ["", "lemma vrat_plus_closed: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" \"y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\"\n  shows \"x +\\<^sub>\\<rat> y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<rat> y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<rat> y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "have \"x' + y' \\<in> UNIV\" for x' y' :: rat"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' + y' \\<in> UNIV", "by simp"], ["proof (state)\nthis:\n  ?x' + ?y' \\<in> UNIV\n\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<rat> y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x +\\<^sub>\\<rat> y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "show ?thesis"], ["proof (prove)\nusing this:\n  x +\\<^sub>\\<rat> y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<rat> y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "."], ["proof (state)\nthis:\n  x +\\<^sub>\\<rat> y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vrat_mult_closed:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" \n  shows \"x *\\<^sub>\\<rat> y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<rat> y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<rat> y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "have \"(x'::rat) * y' \\<in> UNIV\" for x' y'"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' * y' \\<in> UNIV", "by simp"], ["proof (state)\nthis:\n  ?x' * ?y' \\<in> UNIV\n\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<rat> y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x *\\<^sub>\\<rat> y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "show ?thesis"], ["proof (prove)\nusing this:\n  x *\\<^sub>\\<rat> y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<rat> y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "."], ["proof (state)\nthis:\n  x *\\<^sub>\\<rat> y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vrat_uminus_closed: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\"\n  shows \"-\\<^sub>\\<rat> x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. -\\<^sub>\\<rat> x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. -\\<^sub>\\<rat> x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "have \"(-x'::rat) \\<in> UNIV\" for x'"], ["proof (prove)\ngoal (1 subgoal):\n 1. - x' \\<in> UNIV", "by simp"], ["proof (state)\nthis:\n  - ?x' \\<in> UNIV\n\ngoal (1 subgoal):\n 1. -\\<^sub>\\<rat> x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  -\\<^sub>\\<rat> x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "show ?thesis"], ["proof (prove)\nusing this:\n  -\\<^sub>\\<rat> x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. -\\<^sub>\\<rat> x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "."], ["proof (state)\nthis:\n  -\\<^sub>\\<rat> x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vrat_inverse_closed: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\"\n  shows \"x\\<inverse>\\<^sub>\\<rat> \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<inverse>\\<^sub>\\<rat> \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x\\<inverse>\\<^sub>\\<rat> \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "have \"inverse (x'::rat) \\<in> UNIV\" for x'"], ["proof (prove)\ngoal (1 subgoal):\n 1. inverse x' \\<in> UNIV", "by simp"], ["proof (state)\nthis:\n  inverse ?x' \\<in> UNIV\n\ngoal (1 subgoal):\n 1. x\\<inverse>\\<^sub>\\<rat> \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x\\<inverse>\\<^sub>\\<rat> \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "show ?thesis"], ["proof (prove)\nusing this:\n  x\\<inverse>\\<^sub>\\<rat> \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. x\\<inverse>\\<^sub>\\<rat> \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "."], ["proof (state)\nthis:\n  x\\<inverse>\\<^sub>\\<rat> \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Associative Law for Addition: Theorem 1.5.5.1.\\<close>"], ["", "lemma vrat_assoc_law_addition: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" and \"z \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\"  \n  shows \"(x +\\<^sub>\\<rat> y) +\\<^sub>\\<rat> z = x +\\<^sub>\\<rat> (y +\\<^sub>\\<rat> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<rat> y +\\<^sub>\\<rat> z =\n    x +\\<^sub>\\<rat> (y +\\<^sub>\\<rat> z)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<rat> y +\\<^sub>\\<rat> z =\n    x +\\<^sub>\\<rat> (y +\\<^sub>\\<rat> z)", "have \"(x' + y') + z' = x' + (y' + z')\" for x' y' z' :: rat"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' + y' + z' = x' + (y' + z')", "by simp"], ["proof (state)\nthis:\n  ?x' + ?y' + ?z' = ?x' + (?y' + ?z')\n\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<rat> y +\\<^sub>\\<rat> z =\n    x +\\<^sub>\\<rat> (y +\\<^sub>\\<rat> z)", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x +\\<^sub>\\<rat> y +\\<^sub>\\<rat> z =\n  x +\\<^sub>\\<rat> (y +\\<^sub>\\<rat> z)", "show ?thesis"], ["proof (prove)\nusing this:\n  x +\\<^sub>\\<rat> y +\\<^sub>\\<rat> z =\n  x +\\<^sub>\\<rat> (y +\\<^sub>\\<rat> z)\n\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<rat> y +\\<^sub>\\<rat> z =\n    x +\\<^sub>\\<rat> (y +\\<^sub>\\<rat> z)", "."], ["proof (state)\nthis:\n  x +\\<^sub>\\<rat> y +\\<^sub>\\<rat> z =\n  x +\\<^sub>\\<rat> (y +\\<^sub>\\<rat> z)\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Commutative Law for Addition: Theorem 1.5.5.2.\\<close>"], ["", "lemma vrat_commutative_law_addition: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\"    \n  shows \"x +\\<^sub>\\<rat> y = y +\\<^sub>\\<rat> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<rat> y = y +\\<^sub>\\<rat> x", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<rat> y = y +\\<^sub>\\<rat> x", "have \"x' + y' = y' + x'\" for x' y' :: rat"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' + y' = y' + x'", "by simp"], ["proof (state)\nthis:\n  ?x' + ?y' = ?y' + ?x'\n\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<rat> y = y +\\<^sub>\\<rat> x", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x +\\<^sub>\\<rat> y = y +\\<^sub>\\<rat> x", "show ?thesis"], ["proof (prove)\nusing this:\n  x +\\<^sub>\\<rat> y = y +\\<^sub>\\<rat> x\n\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<rat> y = y +\\<^sub>\\<rat> x", "."], ["proof (state)\nthis:\n  x +\\<^sub>\\<rat> y = y +\\<^sub>\\<rat> x\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Identity Law for Addition: Theorem 1.5.5.3.\\<close>"], ["", "lemma vrat_identity_law_addition: \n  assumes [simp]: \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\"\n  shows \"x +\\<^sub>\\<rat> 0\\<^sub>\\<rat> = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<rat> 0\\<^sub>\\<rat> = x", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<rat> 0\\<^sub>\\<rat> = x", "have \"x' + 0 = x'\" for x' :: rat"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' + 0 = x'", "by simp"], ["proof (state)\nthis:\n  ?x' + 0 = ?x'\n\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<rat> 0\\<^sub>\\<rat> = x", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x +\\<^sub>\\<rat> 0\\<^sub>\\<rat> = x", "show ?thesis"], ["proof (prove)\nusing this:\n  x +\\<^sub>\\<rat> 0\\<^sub>\\<rat> = x\n\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<rat> 0\\<^sub>\\<rat> = x", "."], ["proof (state)\nthis:\n  x +\\<^sub>\\<rat> 0\\<^sub>\\<rat> = x\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Inverses Law for Addition: Theorem 1.5.5.4.\\<close>"], ["", "lemma vrat_inverses_law_addition: \n  assumes [simp]: \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\"\n  shows \"x +\\<^sub>\\<rat> (-\\<^sub>\\<rat> x) = 0\\<^sub>\\<rat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<rat> -\\<^sub>\\<rat> x = 0\\<^sub>\\<rat>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<rat> -\\<^sub>\\<rat> x = 0\\<^sub>\\<rat>", "have \"x' + (-x') = 0\" for x' :: rat"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' + - x' = 0", "by simp"], ["proof (state)\nthis:\n  ?x' + - ?x' = 0\n\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<rat> -\\<^sub>\\<rat> x = 0\\<^sub>\\<rat>", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x +\\<^sub>\\<rat> -\\<^sub>\\<rat> x = 0\\<^sub>\\<rat>", "show ?thesis"], ["proof (prove)\nusing this:\n  x +\\<^sub>\\<rat> -\\<^sub>\\<rat> x = 0\\<^sub>\\<rat>\n\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<rat> -\\<^sub>\\<rat> x = 0\\<^sub>\\<rat>", "."], ["proof (state)\nthis:\n  x +\\<^sub>\\<rat> -\\<^sub>\\<rat> x = 0\\<^sub>\\<rat>\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Associative Law for Multiplication: Theorem 1.5.5.5.\\<close>"], ["", "lemma vrat_assoc_law_multiplication: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" and \"z \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\"  \n  shows \"(x *\\<^sub>\\<rat> y) *\\<^sub>\\<rat> z = x *\\<^sub>\\<rat> (y *\\<^sub>\\<rat> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<rat> y *\\<^sub>\\<rat> z =\n    x *\\<^sub>\\<rat> (y *\\<^sub>\\<rat> z)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<rat> y *\\<^sub>\\<rat> z =\n    x *\\<^sub>\\<rat> (y *\\<^sub>\\<rat> z)", "have \"(x' * y') * z' = x' * (y' * z')\" for x' y' z' :: rat"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' * y' * z' = x' * (y' * z')", "by simp"], ["proof (state)\nthis:\n  ?x' * ?y' * ?z' = ?x' * (?y' * ?z')\n\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<rat> y *\\<^sub>\\<rat> z =\n    x *\\<^sub>\\<rat> (y *\\<^sub>\\<rat> z)", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x *\\<^sub>\\<rat> y *\\<^sub>\\<rat> z =\n  x *\\<^sub>\\<rat> (y *\\<^sub>\\<rat> z)", "show ?thesis"], ["proof (prove)\nusing this:\n  x *\\<^sub>\\<rat> y *\\<^sub>\\<rat> z =\n  x *\\<^sub>\\<rat> (y *\\<^sub>\\<rat> z)\n\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<rat> y *\\<^sub>\\<rat> z =\n    x *\\<^sub>\\<rat> (y *\\<^sub>\\<rat> z)", "."], ["proof (state)\nthis:\n  x *\\<^sub>\\<rat> y *\\<^sub>\\<rat> z =\n  x *\\<^sub>\\<rat> (y *\\<^sub>\\<rat> z)\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Commutative Law for Multiplication: Theorem 1.5.5.6.\\<close>"], ["", "lemma vrat_commutative_law_multiplication: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" \n  shows \"x *\\<^sub>\\<rat> y = y *\\<^sub>\\<rat> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<rat> y = y *\\<^sub>\\<rat> x", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<rat> y = y *\\<^sub>\\<rat> x", "have \"x' * y' = y' * x'\" for x' y' :: rat"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' * y' = y' * x'", "by simp"], ["proof (state)\nthis:\n  ?x' * ?y' = ?y' * ?x'\n\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<rat> y = y *\\<^sub>\\<rat> x", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x *\\<^sub>\\<rat> y = y *\\<^sub>\\<rat> x", "show ?thesis"], ["proof (prove)\nusing this:\n  x *\\<^sub>\\<rat> y = y *\\<^sub>\\<rat> x\n\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<rat> y = y *\\<^sub>\\<rat> x", "."], ["proof (state)\nthis:\n  x *\\<^sub>\\<rat> y = y *\\<^sub>\\<rat> x\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Identity Law for multiplication: Theorem 1.5.5.7.\\<close>"], ["", "lemma vrat_identity_law_multiplication: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\"\n  shows \"x *\\<^sub>\\<rat> 1\\<^sub>\\<rat> = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<rat> 1\\<^sub>\\<rat> = x", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<rat> 1\\<^sub>\\<rat> = x", "have \"x' * 1 = x'\" for x' :: rat"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' * 1 = x'", "by simp"], ["proof (state)\nthis:\n  ?x' * 1 = ?x'\n\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<rat> 1\\<^sub>\\<rat> = x", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x *\\<^sub>\\<rat> 1\\<^sub>\\<rat> = x", "show ?thesis"], ["proof (prove)\nusing this:\n  x *\\<^sub>\\<rat> 1\\<^sub>\\<rat> = x\n\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<rat> 1\\<^sub>\\<rat> = x", "."], ["proof (state)\nthis:\n  x *\\<^sub>\\<rat> 1\\<^sub>\\<rat> = x\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Inverses Law for Multiplication: Definition 2.2.1.8.\\<close>"], ["", "lemma vrat_inverses_law_multiplication:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" and \"x \\<noteq> 0\\<^sub>\\<rat>\" \n  shows \"x *\\<^sub>\\<rat> x\\<inverse>\\<^sub>\\<rat> = 1\\<^sub>\\<rat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<rat> x\\<inverse>\\<^sub>\\<rat> = 1\\<^sub>\\<rat>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<rat> x\\<inverse>\\<^sub>\\<rat> = 1\\<^sub>\\<rat>", "have \"x' \\<noteq> 0 \\<Longrightarrow> x' * inverse x' = 1\" for x' :: rat"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' \\<noteq> 0 \\<Longrightarrow> x' * inverse x' = 1", "by simp"], ["proof (state)\nthis:\n  ?x' \\<noteq> 0 \\<Longrightarrow> ?x' * inverse ?x' = 1\n\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<rat> x\\<inverse>\\<^sub>\\<rat> = 1\\<^sub>\\<rat>", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x *\\<^sub>\\<rat> x\\<inverse>\\<^sub>\\<rat> = 1\\<^sub>\\<rat>", "show ?thesis"], ["proof (prove)\nusing this:\n  x *\\<^sub>\\<rat> x\\<inverse>\\<^sub>\\<rat> = 1\\<^sub>\\<rat>\n\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<rat> x\\<inverse>\\<^sub>\\<rat> = 1\\<^sub>\\<rat>", "."], ["proof (state)\nthis:\n  x *\\<^sub>\\<rat> x\\<inverse>\\<^sub>\\<rat> = 1\\<^sub>\\<rat>\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Distributive Law for Multiplication: Theorem 1.5.5.9.\\<close>"], ["", "lemma vrat_distributive_law: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" and \"z \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\"  \n  shows \"x *\\<^sub>\\<rat> (y +\\<^sub>\\<rat> z) = (x *\\<^sub>\\<rat> y) +\\<^sub>\\<rat> (x *\\<^sub>\\<rat> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<rat> (y +\\<^sub>\\<rat> z) =\n    x *\\<^sub>\\<rat> y +\\<^sub>\\<rat> (x *\\<^sub>\\<rat> z)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<rat> (y +\\<^sub>\\<rat> z) =\n    x *\\<^sub>\\<rat> y +\\<^sub>\\<rat> (x *\\<^sub>\\<rat> z)", "have \"x' * (y' + z') = (x' * y') + (x' * z')\" for x' y' z' :: rat"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' * (y' + z') = x' * y' + x' * z'", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  ?x' * (?y' + ?z') = ?x' * ?y' + ?x' * ?z'\n\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<rat> (y +\\<^sub>\\<rat> z) =\n    x *\\<^sub>\\<rat> y +\\<^sub>\\<rat> (x *\\<^sub>\\<rat> z)", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x *\\<^sub>\\<rat> (y +\\<^sub>\\<rat> z) =\n  x *\\<^sub>\\<rat> y +\\<^sub>\\<rat> (x *\\<^sub>\\<rat> z)", "show ?thesis"], ["proof (prove)\nusing this:\n  x *\\<^sub>\\<rat> (y +\\<^sub>\\<rat> z) =\n  x *\\<^sub>\\<rat> y +\\<^sub>\\<rat> (x *\\<^sub>\\<rat> z)\n\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<rat> (y +\\<^sub>\\<rat> z) =\n    x *\\<^sub>\\<rat> y +\\<^sub>\\<rat> (x *\\<^sub>\\<rat> z)", "."], ["proof (state)\nthis:\n  x *\\<^sub>\\<rat> (y +\\<^sub>\\<rat> z) =\n  x *\\<^sub>\\<rat> y +\\<^sub>\\<rat> (x *\\<^sub>\\<rat> z)\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Trichotomy Law: Theorem 1.5.5.10.\\<close>"], ["", "lemma vrat_trichotomy_law:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\"\n  shows \n    \"(x <\\<^sub>\\<rat> y \\<and> ~(x = y) \\<and> ~(y <\\<^sub>\\<rat> x)) \\<or> \n    (~(x <\\<^sub>\\<rat> y) \\<and> x = y \\<and> ~(y <\\<^sub>\\<rat> x)) \\<or>\n    (~(x <\\<^sub>\\<rat> y) \\<and> ~(x = y) \\<and> y <\\<^sub>\\<rat> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x <\\<^sub>\\<rat> y \\<and>\n    x \\<noteq> y \\<and>\n    [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vrat_ls \\<or>\n    [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vrat_ls \\<and>\n    x = y \\<and> [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vrat_ls \\<or>\n    [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vrat_ls \\<and>\n    x \\<noteq> y \\<and> y <\\<^sub>\\<rat> x", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x <\\<^sub>\\<rat> y \\<and>\n    x \\<noteq> y \\<and>\n    [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vrat_ls \\<or>\n    [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vrat_ls \\<and>\n    x = y \\<and> [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vrat_ls \\<or>\n    [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vrat_ls \\<and>\n    x \\<noteq> y \\<and> y <\\<^sub>\\<rat> x", "have\n    \"(x' < y' \\<and> ~(x' = y') \\<and> ~(y' < x')) \\<or> \n    (~(x' < y') \\<and> x' = y' \\<and> ~(y' < x')) \\<or>\n    (~(x' < y') \\<and> ~(x' = y') \\<and> y' < x')\"\n    for x' y' z' :: rat"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' < y' \\<and> x' \\<noteq> y' \\<and> \\<not> y' < x' \\<or>\n    \\<not> x' < y' \\<and> x' = y' \\<and> \\<not> y' < x' \\<or>\n    \\<not> x' < y' \\<and> x' \\<noteq> y' \\<and> y' < x'", "by auto"], ["proof (state)\nthis:\n  ?x' < ?y' \\<and> ?x' \\<noteq> ?y' \\<and> \\<not> ?y' < ?x' \\<or>\n  \\<not> ?x' < ?y' \\<and> ?x' = ?y' \\<and> \\<not> ?y' < ?x' \\<or>\n  \\<not> ?x' < ?y' \\<and> ?x' \\<noteq> ?y' \\<and> ?y' < ?x'\n\ngoal (1 subgoal):\n 1. x <\\<^sub>\\<rat> y \\<and>\n    x \\<noteq> y \\<and>\n    [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vrat_ls \\<or>\n    [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vrat_ls \\<and>\n    x = y \\<and> [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vrat_ls \\<or>\n    [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vrat_ls \\<and>\n    x \\<noteq> y \\<and> y <\\<^sub>\\<rat> x", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x <\\<^sub>\\<rat> y \\<and>\n  x \\<noteq> y \\<and>\n  [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vrat_ls \\<or>\n  [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vrat_ls \\<and>\n  x = y \\<and> [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vrat_ls \\<or>\n  [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vrat_ls \\<and>\n  x \\<noteq> y \\<and> y <\\<^sub>\\<rat> x", "show ?thesis"], ["proof (prove)\nusing this:\n  x <\\<^sub>\\<rat> y \\<and>\n  x \\<noteq> y \\<and>\n  [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vrat_ls \\<or>\n  [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vrat_ls \\<and>\n  x = y \\<and> [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vrat_ls \\<or>\n  [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vrat_ls \\<and>\n  x \\<noteq> y \\<and> y <\\<^sub>\\<rat> x\n\ngoal (1 subgoal):\n 1. x <\\<^sub>\\<rat> y \\<and>\n    x \\<noteq> y \\<and>\n    [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vrat_ls \\<or>\n    [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vrat_ls \\<and>\n    x = y \\<and> [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vrat_ls \\<or>\n    [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vrat_ls \\<and>\n    x \\<noteq> y \\<and> y <\\<^sub>\\<rat> x", "."], ["proof (state)\nthis:\n  x <\\<^sub>\\<rat> y \\<and>\n  x \\<noteq> y \\<and>\n  [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vrat_ls \\<or>\n  [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vrat_ls \\<and>\n  x = y \\<and> [y, x]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vrat_ls \\<or>\n  [x, y]\\<^sub>\\<circ> \\<notin>\\<^sub>\\<circ> vrat_ls \\<and>\n  x \\<noteq> y \\<and> y <\\<^sub>\\<rat> x\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Transitive Law: Theorem 1.5.5.11.\\<close>"], ["", "lemma vrat_transitive_law:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" \n    and \"y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" \n    and \"z \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" \n    and \"x <\\<^sub>\\<rat> y\" \n    and \"y <\\<^sub>\\<rat> z\"\n  shows \"x <\\<^sub>\\<rat> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x <\\<^sub>\\<rat> z", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x <\\<^sub>\\<rat> z", "have \"x' < y' \\<Longrightarrow> y' < z' \\<Longrightarrow> x' < z'\" for x' y' z' :: rat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x' < y'; y' < z'\\<rbrakk> \\<Longrightarrow> x' < z'", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>?x' < ?y'; ?y' < ?z'\\<rbrakk> \\<Longrightarrow> ?x' < ?z'\n\ngoal (1 subgoal):\n 1. x <\\<^sub>\\<rat> z", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x <\\<^sub>\\<rat> z", "show ?thesis"], ["proof (prove)\nusing this:\n  x <\\<^sub>\\<rat> z\n\ngoal (1 subgoal):\n 1. x <\\<^sub>\\<rat> z", "."], ["proof (state)\nthis:\n  x <\\<^sub>\\<rat> z\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Addition Law of Order: Theorem 1.5.5.12.\\<close>"], ["", "lemma vrat_addition_law_of_order:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" and \"z \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" and \"x <\\<^sub>\\<rat> y\"\n  shows \"x +\\<^sub>\\<rat> z <\\<^sub>\\<rat> y +\\<^sub>\\<rat> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<rat> z <\\<^sub>\\<rat> y +\\<^sub>\\<rat> z", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<rat> z <\\<^sub>\\<rat> y +\\<^sub>\\<rat> z", "have \"x' < y' \\<Longrightarrow> x' + z' < y' + z'\" for x' y' z' :: rat"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' < y' \\<Longrightarrow> x' + z' < y' + z'", "by simp"], ["proof (state)\nthis:\n  ?x' < ?y' \\<Longrightarrow> ?x' + ?z' < ?y' + ?z'\n\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<rat> z <\\<^sub>\\<rat> y +\\<^sub>\\<rat> z", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x +\\<^sub>\\<rat> z <\\<^sub>\\<rat> y +\\<^sub>\\<rat> z", "show ?thesis"], ["proof (prove)\nusing this:\n  x +\\<^sub>\\<rat> z <\\<^sub>\\<rat> y +\\<^sub>\\<rat> z\n\ngoal (1 subgoal):\n 1. x +\\<^sub>\\<rat> z <\\<^sub>\\<rat> y +\\<^sub>\\<rat> z", "."], ["proof (state)\nthis:\n  x +\\<^sub>\\<rat> z <\\<^sub>\\<rat> y +\\<^sub>\\<rat> z\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Multiplication Law of Order: Theorem 1.5.5.13.\\<close>"], ["", "lemma vrat_multiplication_law_of_order:\n  assumes \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" \n    and \"y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" \n    and \"z \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" \n    and \"x <\\<^sub>\\<rat> y\"\n    and \"0\\<^sub>\\<rat> <\\<^sub>\\<rat> z\"\n  shows \"x *\\<^sub>\\<rat> z <\\<^sub>\\<rat> y *\\<^sub>\\<rat> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<rat> z <\\<^sub>\\<rat> y *\\<^sub>\\<rat> z", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<rat> z <\\<^sub>\\<rat> y *\\<^sub>\\<rat> z", "have \"x' < y' \\<Longrightarrow> 0 < z' \\<Longrightarrow> x' * z' < y' * z'\" for x' y' z' :: rat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x' < y'; 0 < z'\\<rbrakk> \\<Longrightarrow> x' * z' < y' * z'", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>?x' < ?y'; 0 < ?z'\\<rbrakk>\n  \\<Longrightarrow> ?x' * ?z' < ?y' * ?z'\n\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<rat> z <\\<^sub>\\<rat> y *\\<^sub>\\<rat> z", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x *\\<^sub>\\<rat> z <\\<^sub>\\<rat> y *\\<^sub>\\<rat> z", "show ?thesis"], ["proof (prove)\nusing this:\n  x *\\<^sub>\\<rat> z <\\<^sub>\\<rat> y *\\<^sub>\\<rat> z\n\ngoal (1 subgoal):\n 1. x *\\<^sub>\\<rat> z <\\<^sub>\\<rat> y *\\<^sub>\\<rat> z", "."], ["proof (state)\nthis:\n  x *\\<^sub>\\<rat> z <\\<^sub>\\<rat> y *\\<^sub>\\<rat> z\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Non-Triviality: Theorem 1.5.5.14.\\<close>"], ["", "lemma vrat_non_triviality: \"0\\<^sub>\\<rat> \\<noteq> 1\\<^sub>\\<rat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0\\<^sub>\\<rat> \\<noteq> 1\\<^sub>\\<rat>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. 0\\<^sub>\\<rat> \\<noteq> 1\\<^sub>\\<rat>", "have \"0 \\<noteq> (1::rat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<noteq> 1", "by simp"], ["proof (state)\nthis:\n  0 \\<noteq> 1\n\ngoal (1 subgoal):\n 1. 0\\<^sub>\\<rat> \\<noteq> 1\\<^sub>\\<rat>", "from this[untransferred]"], ["proof (chain)\npicking this:\n  0\\<^sub>\\<rat> \\<noteq> 1\\<^sub>\\<rat>", "show ?thesis"], ["proof (prove)\nusing this:\n  0\\<^sub>\\<rat> \\<noteq> 1\\<^sub>\\<rat>\n\ngoal (1 subgoal):\n 1. 0\\<^sub>\\<rat> \\<noteq> 1\\<^sub>\\<rat>", "."], ["proof (state)\nthis:\n  0\\<^sub>\\<rat> \\<noteq> 1\\<^sub>\\<rat>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Fundamental properties of other operations\\<close>"], ["", "text\\<open>Minus.\\<close>"], ["", "lemma vrat_minus_closed: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\"\n  shows \"x -\\<^sub>\\<rat> y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x -\\<^sub>\\<rat> y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x -\\<^sub>\\<rat> y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "have \"x' - y' \\<in> UNIV\" for x' y' :: rat"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' - y' \\<in> UNIV", "by simp"], ["proof (state)\nthis:\n  ?x' - ?y' \\<in> UNIV\n\ngoal (1 subgoal):\n 1. x -\\<^sub>\\<rat> y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x -\\<^sub>\\<rat> y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "show ?thesis"], ["proof (prove)\nusing this:\n  x -\\<^sub>\\<rat> y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. x -\\<^sub>\\<rat> y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "."], ["proof (state)\nthis:\n  x -\\<^sub>\\<rat> y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vrat_minus_eq_plus_uminus: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" and \"y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\"\n  shows \"x -\\<^sub>\\<rat> y = x +\\<^sub>\\<rat> (-\\<^sub>\\<rat> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x -\\<^sub>\\<rat> y = x +\\<^sub>\\<rat> -\\<^sub>\\<rat> y", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x -\\<^sub>\\<rat> y = x +\\<^sub>\\<rat> -\\<^sub>\\<rat> y", "have \"x' - y' = x' + (-y')\" for x' y' :: rat"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' - y' = x' + - y'", "by simp"], ["proof (state)\nthis:\n  ?x' - ?y' = ?x' + - ?y'\n\ngoal (1 subgoal):\n 1. x -\\<^sub>\\<rat> y = x +\\<^sub>\\<rat> -\\<^sub>\\<rat> y", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x -\\<^sub>\\<rat> y = x +\\<^sub>\\<rat> -\\<^sub>\\<rat> y", "show ?thesis"], ["proof (prove)\nusing this:\n  x -\\<^sub>\\<rat> y = x +\\<^sub>\\<rat> -\\<^sub>\\<rat> y\n\ngoal (1 subgoal):\n 1. x -\\<^sub>\\<rat> y = x +\\<^sub>\\<rat> -\\<^sub>\\<rat> y", "."], ["proof (state)\nthis:\n  x -\\<^sub>\\<rat> y = x +\\<^sub>\\<rat> -\\<^sub>\\<rat> y\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Unary minus.\\<close>"], ["", "lemma vrat_uminus_uminus: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" \n  shows \"x = -\\<^sub>\\<rat> (-\\<^sub>\\<rat> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = -\\<^sub>\\<rat> (-\\<^sub>\\<rat> x)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x = -\\<^sub>\\<rat> (-\\<^sub>\\<rat> x)", "have \"x' = -(-x')\" for x' :: rat"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' = - (- x')", "by simp"], ["proof (state)\nthis:\n  ?x' = - (- ?x')\n\ngoal (1 subgoal):\n 1. x = -\\<^sub>\\<rat> (-\\<^sub>\\<rat> x)", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x = -\\<^sub>\\<rat> (-\\<^sub>\\<rat> x)", "show ?thesis"], ["proof (prove)\nusing this:\n  x = -\\<^sub>\\<rat> (-\\<^sub>\\<rat> x)\n\ngoal (1 subgoal):\n 1. x = -\\<^sub>\\<rat> (-\\<^sub>\\<rat> x)", "."], ["proof (state)\nthis:\n  x = -\\<^sub>\\<rat> (-\\<^sub>\\<rat> x)\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Multiplicative inverse.\\<close>"], ["", "lemma vrat_inverse_inverse: \n  assumes \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" \n  shows \"x = (x\\<inverse>\\<^sub>\\<rat>)\\<inverse>\\<^sub>\\<rat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = (x\\<inverse>\\<^sub>\\<rat>)\\<inverse>\\<^sub>\\<rat>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x = (x\\<inverse>\\<^sub>\\<rat>)\\<inverse>\\<^sub>\\<rat>", "have \"x' = inverse (inverse x')\" for x' :: rat"], ["proof (prove)\ngoal (1 subgoal):\n 1. x' = inverse (inverse x')", "by simp"], ["proof (state)\nthis:\n  ?x' = inverse (inverse ?x')\n\ngoal (1 subgoal):\n 1. x = (x\\<inverse>\\<^sub>\\<rat>)\\<inverse>\\<^sub>\\<rat>", "from this[untransferred, OF assms]"], ["proof (chain)\npicking this:\n  x = (x\\<inverse>\\<^sub>\\<rat>)\\<inverse>\\<^sub>\\<rat>", "show ?thesis"], ["proof (prove)\nusing this:\n  x = (x\\<inverse>\\<^sub>\\<rat>)\\<inverse>\\<^sub>\\<rat>\n\ngoal (1 subgoal):\n 1. x = (x\\<inverse>\\<^sub>\\<rat>)\\<inverse>\\<^sub>\\<rat>", "."], ["proof (state)\nthis:\n  x = (x\\<inverse>\\<^sub>\\<rat>)\\<inverse>\\<^sub>\\<rat>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Further properties\\<close>"], ["", "text\\<open>Addition.\\<close>"], ["", "global_interpretation vrat_plus: binop_onto \\<open>\\<rat>\\<^sub>\\<circ>\\<close> vrat_plus"], ["proof (prove)\ngoal (1 subgoal):\n 1. binop_onto \\<rat>\\<^sub>\\<circ> vrat_plus", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. binop_onto \\<rat>\\<^sub>\\<circ> vrat_plus", "have binop: \"binop \\<rat>\\<^sub>\\<circ> vrat_plus\""], ["proof (prove)\ngoal (1 subgoal):\n 1. binop \\<rat>\\<^sub>\\<circ> vrat_plus", "proof(intro binopI nopI)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv vrat_plus\n 2. 2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>\n 3. \\<D>\\<^sub>\\<circ> vrat_plus =\n    \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n 4. \\<R>\\<^sub>\\<circ> vrat_plus\n    \\<subseteq>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "show vsv: \"vsv vrat_plus\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv vrat_plus", "unfolding vrat_plus_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (\\<lambda>x\\<in>\\<^sub>\\<circ>\\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n2\\<^sub>\\<nat>.\n            (rat_of_vrat (x\\<lparr>0\\<^sub>\\<nat>\\<rparr>) +\n             rat_of_vrat (x\\<lparr>1\\<^sub>\\<nat>\\<rparr>))\\<^sub>\\<rat>)", "by auto"], ["proof (state)\nthis:\n  vsv vrat_plus\n\ngoal (3 subgoals):\n 1. 2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>\n 2. \\<D>\\<^sub>\\<circ> vrat_plus =\n    \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n 3. \\<R>\\<^sub>\\<circ> vrat_plus\n    \\<subseteq>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "interpret vsv vrat_plus"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv vrat_plus", "by (rule vsv)"], ["proof (state)\ngoal (3 subgoals):\n 1. 2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>\n 2. \\<D>\\<^sub>\\<circ> vrat_plus =\n    \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n 3. \\<R>\\<^sub>\\<circ> vrat_plus\n    \\<subseteq>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "show \"2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>", "by simp"], ["proof (state)\nthis:\n  2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>\n\ngoal (2 subgoals):\n 1. \\<D>\\<^sub>\\<circ> vrat_plus =\n    \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n 2. \\<R>\\<^sub>\\<circ> vrat_plus\n    \\<subseteq>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "show dom: \"\\<D>\\<^sub>\\<circ> vrat_plus = \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> vrat_plus =\n    \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>", "unfolding vrat_plus_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (\\<lambda>x\\<in>\\<^sub>\\<circ>\\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                                   2\\<^sub>\\<nat>.\n         (rat_of_vrat (x\\<lparr>0\\<^sub>\\<nat>\\<rparr>) +\n          rat_of_vrat (x\\<lparr>1\\<^sub>\\<nat>\\<rparr>))\\<^sub>\\<rat>) =\n    \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>", "by simp"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> vrat_plus =\n  \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vrat_plus\n    \\<subseteq>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "show \"\\<R>\\<^sub>\\<circ> vrat_plus \\<subseteq>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vrat_plus\n    \\<subseteq>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "proof(intro vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_plus \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_plus \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "assume \"y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_plus\""], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_plus\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_plus \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "then"], ["proof (chain)\npicking this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_plus", "obtain ab where \"ab \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\" and y_def: \"y = vrat_plus\\<lparr>ab\\<rparr>\""], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_plus\n\ngoal (1 subgoal):\n 1. (\\<And>ab.\n        \\<lbrakk>ab \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n  2\\<^sub>\\<nat>;\n         y = vrat_plus\\<lparr>ab\\<rparr>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding dom[symmetric]"], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_plus\n\ngoal (1 subgoal):\n 1. (\\<And>ab.\n        \\<lbrakk>ab \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> vrat_plus;\n         y = vrat_plus\\<lparr>ab\\<rparr>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  ab \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                         2\\<^sub>\\<nat>\n  y = vrat_plus\\<lparr>ab\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_plus \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "then"], ["proof (chain)\npicking this:\n  ab \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                         2\\<^sub>\\<nat>\n  y = vrat_plus\\<lparr>ab\\<rparr>", "obtain a b \n        where ab_def: \"ab = [a, b]\\<^sub>\\<circ>\" and a: \"a \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" and b: \"b \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  ab \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                         2\\<^sub>\\<nat>\n  y = vrat_plus\\<lparr>ab\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>ab = [a, b]\\<^sub>\\<circ>;\n         a \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>;\n         b \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  ab = [a, b]\\<^sub>\\<circ>\n  a \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n  b \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_plus \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "then"], ["proof (chain)\npicking this:\n  ab = [a, b]\\<^sub>\\<circ>\n  a \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n  b \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "show \"y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  ab = [a, b]\\<^sub>\\<circ>\n  a \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n  b \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "by (simp add: vrat_plus_closed y_def)"], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> vrat_plus\n  \\<subseteq>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  binop \\<rat>\\<^sub>\\<circ> vrat_plus\n\ngoal (1 subgoal):\n 1. binop_onto \\<rat>\\<^sub>\\<circ> vrat_plus", "interpret binop \\<open>\\<rat>\\<^sub>\\<circ>\\<close> vrat_plus"], ["proof (prove)\ngoal (1 subgoal):\n 1. binop \\<rat>\\<^sub>\\<circ> vrat_plus", "by (rule binop)"], ["proof (state)\ngoal (1 subgoal):\n 1. binop_onto \\<rat>\\<^sub>\\<circ> vrat_plus", "show \"binop_onto \\<rat>\\<^sub>\\<circ> vrat_plus\""], ["proof (prove)\ngoal (1 subgoal):\n 1. binop_onto \\<rat>\\<^sub>\\<circ> vrat_plus", "proof(intro binop_ontoI')"], ["proof (state)\ngoal (2 subgoals):\n 1. binop \\<rat>\\<^sub>\\<circ> vrat_plus\n 2. \\<rat>\\<^sub>\\<circ>\n    \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_plus", "show \"binop \\<rat>\\<^sub>\\<circ> vrat_plus\""], ["proof (prove)\ngoal (1 subgoal):\n 1. binop \\<rat>\\<^sub>\\<circ> vrat_plus", "by (rule binop_axioms)"], ["proof (state)\nthis:\n  binop \\<rat>\\<^sub>\\<circ> vrat_plus\n\ngoal (1 subgoal):\n 1. \\<rat>\\<^sub>\\<circ>\n    \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_plus", "show \"\\<rat>\\<^sub>\\<circ> \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_plus\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rat>\\<^sub>\\<circ>\n    \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_plus", "proof(intro vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_plus", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_plus", "assume prems: \"y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\""], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_plus", "moreover"], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_plus", "from vrat_zero vrat_zero_closed"], ["proof (chain)\npicking this:\n  0\\<^sub>\\<rat> = []\\<^sub>\\<circ>\n  0\\<^sub>\\<rat> \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "have 0: \"0 \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  0\\<^sub>\\<rat> = []\\<^sub>\\<circ>\n  0\\<^sub>\\<rat> \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. []\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "by auto"], ["proof (state)\nthis:\n  []\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_plus", "ultimately"], ["proof (chain)\npicking this:\n  y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n  []\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "have \"y +\\<^sub>\\<rat> 0 \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_plus\""], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n  []\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. y +\\<^sub>\\<rat> []\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_plus", "by auto"], ["proof (state)\nthis:\n  y +\\<^sub>\\<rat> []\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_plus\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_plus", "moreover"], ["proof (state)\nthis:\n  y +\\<^sub>\\<rat> []\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_plus\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_plus", "from prems vrat_identity_law_addition"], ["proof (chain)\npicking this:\n  y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n  ?x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> \\<Longrightarrow>\n  ?x +\\<^sub>\\<rat> 0\\<^sub>\\<rat> = ?x", "have \"y = y +\\<^sub>\\<rat> 0\""], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n  ?x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> \\<Longrightarrow>\n  ?x +\\<^sub>\\<rat> 0\\<^sub>\\<rat> = ?x\n\ngoal (1 subgoal):\n 1. y = y +\\<^sub>\\<rat> []\\<^sub>\\<circ>", "by (simp add: vrat_zero)"], ["proof (state)\nthis:\n  y = y +\\<^sub>\\<rat> []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_plus", "ultimately"], ["proof (chain)\npicking this:\n  y +\\<^sub>\\<rat> []\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_plus\n  y = y +\\<^sub>\\<rat> []\\<^sub>\\<circ>", "show \"y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_plus\""], ["proof (prove)\nusing this:\n  y +\\<^sub>\\<rat> []\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_plus\n  y = y +\\<^sub>\\<rat> []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_plus", "by simp"], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_plus\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<rat>\\<^sub>\\<circ>\n  \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_plus\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  binop_onto \\<rat>\\<^sub>\\<circ> vrat_plus\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Unary minus.\\<close>"], ["", "global_interpretation vrat_uminus: v11 vrat_uminus\n  rewrites \"\\<D>\\<^sub>\\<circ> vrat_uminus = \\<rat>\\<^sub>\\<circ>\"\n    and \"\\<R>\\<^sub>\\<circ> vrat_uminus = \\<rat>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v11 vrat_uminus &&&\n    \\<D>\\<^sub>\\<circ> vrat_uminus = \\<rat>\\<^sub>\\<circ> &&&\n    \\<R>\\<^sub>\\<circ> vrat_uminus = \\<rat>\\<^sub>\\<circ>", "proof-"], ["proof (state)\ngoal (3 subgoals):\n 1. v11 vrat_uminus\n 2. \\<D>\\<^sub>\\<circ> vrat_uminus = \\<rat>\\<^sub>\\<circ>\n 3. \\<R>\\<^sub>\\<circ> vrat_uminus = \\<rat>\\<^sub>\\<circ>", "show v11: \"v11 vrat_uminus\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v11 vrat_uminus", "proof(intro v11I)"], ["proof (state)\ngoal (2 subgoals):\n 1. vsv vrat_uminus\n 2. vsv (vrat_uminus\\<inverse>\\<^sub>\\<circ>)", "show vsv: \"vsv vrat_uminus\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv vrat_uminus", "unfolding vrat_uminus_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (\\<lambda>x\\<in>\\<^sub>\\<circ>\\<rat>\\<^sub>\\<circ>.\n            (- rat_of_vrat x)\\<^sub>\\<rat>)", "by simp"], ["proof (state)\nthis:\n  vsv vrat_uminus\n\ngoal (1 subgoal):\n 1. vsv (vrat_uminus\\<inverse>\\<^sub>\\<circ>)", "interpret vsv vrat_uminus"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv vrat_uminus", "by (rule vsv)"], ["proof (state)\ngoal (1 subgoal):\n 1. vsv (vrat_uminus\\<inverse>\\<^sub>\\<circ>)", "show \"vsv (vrat_uminus\\<inverse>\\<^sub>\\<circ>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (vrat_uminus\\<inverse>\\<^sub>\\<circ>)", "proof(intro vsvI)"], ["proof (state)\ngoal (2 subgoals):\n 1. vbrelation (vrat_uminus\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> vrat_uminus\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> vrat_uminus\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "show \"vbrelation (vrat_uminus\\<inverse>\\<^sub>\\<circ>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vbrelation (vrat_uminus\\<inverse>\\<^sub>\\<circ>)", "by clarsimp"], ["proof (state)\nthis:\n  vbrelation (vrat_uminus\\<inverse>\\<^sub>\\<circ>)\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> vrat_uminus\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> vrat_uminus\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "fix a b c"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> vrat_uminus\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> vrat_uminus\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "assume prems: \"\\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> vrat_uminus\\<inverse>\\<^sub>\\<circ>\" \"\\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> vrat_uminus\\<inverse>\\<^sub>\\<circ>\""], ["proof (state)\nthis:\n  \\<langle>a, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> vrat_uminus\\<inverse>\\<^sub>\\<circ>\n  \\<langle>a, c\\<rangle>\n  \\<in>\\<^sub>\\<circ> vrat_uminus\\<inverse>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> vrat_uminus\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> vrat_uminus\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "then"], ["proof (chain)\npicking this:\n  \\<langle>a, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> vrat_uminus\\<inverse>\\<^sub>\\<circ>\n  \\<langle>a, c\\<rangle>\n  \\<in>\\<^sub>\\<circ> vrat_uminus\\<inverse>\\<^sub>\\<circ>", "have ba: \"\\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vrat_uminus\" and ca: \"\\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vrat_uminus\""], ["proof (prove)\nusing this:\n  \\<langle>a, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> vrat_uminus\\<inverse>\\<^sub>\\<circ>\n  \\<langle>a, c\\<rangle>\n  \\<in>\\<^sub>\\<circ> vrat_uminus\\<inverse>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vrat_uminus &&&\n    \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vrat_uminus", "by auto"], ["proof (state)\nthis:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vrat_uminus\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vrat_uminus\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> vrat_uminus\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> vrat_uminus\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "then"], ["proof (chain)\npicking this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vrat_uminus\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vrat_uminus", "have b: \"b \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" and c: \"c \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vrat_uminus\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vrat_uminus\n\ngoal (1 subgoal):\n 1. b \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> &&&\n    c \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "by (simp_all add: VLambda_iff2 vrat_uminus_def)"], ["proof (state)\nthis:\n  b \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n  c \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> vrat_uminus\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> vrat_uminus\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "from ba ca"], ["proof (chain)\npicking this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vrat_uminus\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vrat_uminus", "have \"a = -\\<^sub>\\<rat> b\" \"a = -\\<^sub>\\<rat> c\""], ["proof (prove)\nusing this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vrat_uminus\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vrat_uminus\n\ngoal (1 subgoal):\n 1. a = -\\<^sub>\\<rat> b &&& a = -\\<^sub>\\<rat> c", "by simp_all"], ["proof (state)\nthis:\n  a = -\\<^sub>\\<rat> b\n  a = -\\<^sub>\\<rat> c\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> vrat_uminus\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> vrat_uminus\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "with ba ca b c"], ["proof (chain)\npicking this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vrat_uminus\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vrat_uminus\n  b \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n  c \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n  a = -\\<^sub>\\<rat> b\n  a = -\\<^sub>\\<rat> c", "show \"b = c\""], ["proof (prove)\nusing this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vrat_uminus\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vrat_uminus\n  b \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n  c \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n  a = -\\<^sub>\\<rat> b\n  a = -\\<^sub>\\<rat> c\n\ngoal (1 subgoal):\n 1. b = c", "by (metis vrat_uminus_uminus)"], ["proof (state)\nthis:\n  b = c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  vsv (vrat_uminus\\<inverse>\\<^sub>\\<circ>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  v11 vrat_uminus\n\ngoal (2 subgoals):\n 1. \\<D>\\<^sub>\\<circ> vrat_uminus = \\<rat>\\<^sub>\\<circ>\n 2. \\<R>\\<^sub>\\<circ> vrat_uminus = \\<rat>\\<^sub>\\<circ>", "interpret v11 vrat_uminus"], ["proof (prove)\ngoal (1 subgoal):\n 1. v11 vrat_uminus", "by (rule v11)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<D>\\<^sub>\\<circ> vrat_uminus = \\<rat>\\<^sub>\\<circ>\n 2. \\<R>\\<^sub>\\<circ> vrat_uminus = \\<rat>\\<^sub>\\<circ>", "show dom: \"\\<D>\\<^sub>\\<circ> vrat_uminus = \\<rat>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> vrat_uminus = \\<rat>\\<^sub>\\<circ>", "unfolding vrat_uminus_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (\\<lambda>x\\<in>\\<^sub>\\<circ>\\<rat>\\<^sub>\\<circ>.\n         (- rat_of_vrat x)\\<^sub>\\<rat>) =\n    \\<rat>\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> vrat_uminus = \\<rat>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vrat_uminus = \\<rat>\\<^sub>\\<circ>", "have \"\\<R>\\<^sub>\\<circ> vrat_uminus \\<subseteq>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vrat_uminus\n    \\<subseteq>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "proof(intro vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              vrat_uminus \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              vrat_uminus \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "assume \"y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_uminus\""], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_uminus\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              vrat_uminus \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "then"], ["proof (chain)\npicking this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_uminus", "obtain x where \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" and y_def: \"y = -\\<^sub>\\<rat> x\""], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_uminus\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>;\n         y = -\\<^sub>\\<rat> x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding dom[symmetric]"], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_uminus\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> vrat_uminus;\n         y = -\\<^sub>\\<rat> x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n  y = -\\<^sub>\\<rat> x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              vrat_uminus \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "then"], ["proof (chain)\npicking this:\n  x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n  y = -\\<^sub>\\<rat> x", "show \"y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n  y = -\\<^sub>\\<rat> x\n\ngoal (1 subgoal):\n 1. y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "by (simp add: vrat_uminus_closed)"], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> vrat_uminus\n  \\<subseteq>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vrat_uminus = \\<rat>\\<^sub>\\<circ>", "moreover"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> vrat_uminus\n  \\<subseteq>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vrat_uminus = \\<rat>\\<^sub>\\<circ>", "have \"\\<rat>\\<^sub>\\<circ> \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_uminus\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rat>\\<^sub>\\<circ>\n    \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_uminus", "by (intro vsubsetI) \n      (metis dom vdomain_atD vrat_uminus_closed vrat_uminus_uminus)"], ["proof (state)\nthis:\n  \\<rat>\\<^sub>\\<circ>\n  \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_uminus\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vrat_uminus = \\<rat>\\<^sub>\\<circ>", "ultimately"], ["proof (chain)\npicking this:\n  \\<R>\\<^sub>\\<circ> vrat_uminus\n  \\<subseteq>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n  \\<rat>\\<^sub>\\<circ>\n  \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_uminus", "show \"\\<R>\\<^sub>\\<circ> vrat_uminus = \\<rat>\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> vrat_uminus\n  \\<subseteq>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n  \\<rat>\\<^sub>\\<circ>\n  \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_uminus\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vrat_uminus = \\<rat>\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> vrat_uminus = \\<rat>\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Multiplication.\\<close>"], ["", "global_interpretation vrat_mult: binop_onto \\<open>\\<rat>\\<^sub>\\<circ>\\<close> vrat_mult"], ["proof (prove)\ngoal (1 subgoal):\n 1. binop_onto \\<rat>\\<^sub>\\<circ> vrat_mult", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. binop_onto \\<rat>\\<^sub>\\<circ> vrat_mult", "have binop: \"binop \\<rat>\\<^sub>\\<circ> vrat_mult\""], ["proof (prove)\ngoal (1 subgoal):\n 1. binop \\<rat>\\<^sub>\\<circ> vrat_mult", "proof(intro binopI nopI)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv vrat_mult\n 2. 2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>\n 3. \\<D>\\<^sub>\\<circ> vrat_mult =\n    \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n 4. \\<R>\\<^sub>\\<circ> vrat_mult\n    \\<subseteq>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "show vsv: \"vsv vrat_mult\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv vrat_mult", "unfolding vrat_mult_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (\\<lambda>x\\<in>\\<^sub>\\<circ>\\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n2\\<^sub>\\<nat>.\n            (rat_of_vrat (x\\<lparr>0\\<^sub>\\<nat>\\<rparr>) *\n             rat_of_vrat (x\\<lparr>1\\<^sub>\\<nat>\\<rparr>))\\<^sub>\\<rat>)", "by auto"], ["proof (state)\nthis:\n  vsv vrat_mult\n\ngoal (3 subgoals):\n 1. 2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>\n 2. \\<D>\\<^sub>\\<circ> vrat_mult =\n    \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n 3. \\<R>\\<^sub>\\<circ> vrat_mult\n    \\<subseteq>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "interpret vsv vrat_mult"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv vrat_mult", "by (rule vsv)"], ["proof (state)\ngoal (3 subgoals):\n 1. 2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>\n 2. \\<D>\\<^sub>\\<circ> vrat_mult =\n    \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n 3. \\<R>\\<^sub>\\<circ> vrat_mult\n    \\<subseteq>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "show \"2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>", "by simp"], ["proof (state)\nthis:\n  2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> \\<omega>\n\ngoal (2 subgoals):\n 1. \\<D>\\<^sub>\\<circ> vrat_mult =\n    \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n 2. \\<R>\\<^sub>\\<circ> vrat_mult\n    \\<subseteq>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "show dom: \"\\<D>\\<^sub>\\<circ> vrat_mult = \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> vrat_mult =\n    \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>", "unfolding vrat_mult_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (\\<lambda>x\\<in>\\<^sub>\\<circ>\\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                                   2\\<^sub>\\<nat>.\n         (rat_of_vrat (x\\<lparr>0\\<^sub>\\<nat>\\<rparr>) *\n          rat_of_vrat (x\\<lparr>1\\<^sub>\\<nat>\\<rparr>))\\<^sub>\\<rat>) =\n    \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>", "by simp"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> vrat_mult =\n  \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vrat_mult\n    \\<subseteq>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "show \"\\<R>\\<^sub>\\<circ> vrat_mult \\<subseteq>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vrat_mult\n    \\<subseteq>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "proof(intro vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_mult \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_mult \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "assume \"y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_mult\""], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_mult\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_mult \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "then"], ["proof (chain)\npicking this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_mult", "obtain ab where \"ab \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times> 2\\<^sub>\\<nat>\" and y_def: \"y = vrat_mult\\<lparr>ab\\<rparr>\""], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_mult\n\ngoal (1 subgoal):\n 1. (\\<And>ab.\n        \\<lbrakk>ab \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n  2\\<^sub>\\<nat>;\n         y = vrat_mult\\<lparr>ab\\<rparr>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding dom[symmetric]"], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_mult\n\ngoal (1 subgoal):\n 1. (\\<And>ab.\n        \\<lbrakk>ab \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> vrat_mult;\n         y = vrat_mult\\<lparr>ab\\<rparr>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  ab \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                         2\\<^sub>\\<nat>\n  y = vrat_mult\\<lparr>ab\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_mult \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "then"], ["proof (chain)\npicking this:\n  ab \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                         2\\<^sub>\\<nat>\n  y = vrat_mult\\<lparr>ab\\<rparr>", "obtain a b \n        where ab_def: \"ab = [a, b]\\<^sub>\\<circ>\" and a: \"a \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" and b: \"b \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  ab \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> ^\\<^sub>\\<times>\n                         2\\<^sub>\\<nat>\n  y = vrat_mult\\<lparr>ab\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>ab = [a, b]\\<^sub>\\<circ>;\n         a \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>;\n         b \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  ab = [a, b]\\<^sub>\\<circ>\n  a \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n  b \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_mult \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "then"], ["proof (chain)\npicking this:\n  ab = [a, b]\\<^sub>\\<circ>\n  a \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n  b \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "show \"y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  ab = [a, b]\\<^sub>\\<circ>\n  a \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n  b \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "by (simp add: vrat_mult_closed y_def)"], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> vrat_mult\n  \\<subseteq>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  binop \\<rat>\\<^sub>\\<circ> vrat_mult\n\ngoal (1 subgoal):\n 1. binop_onto \\<rat>\\<^sub>\\<circ> vrat_mult", "interpret binop \\<open>\\<rat>\\<^sub>\\<circ>\\<close> vrat_mult"], ["proof (prove)\ngoal (1 subgoal):\n 1. binop \\<rat>\\<^sub>\\<circ> vrat_mult", "by (rule binop)"], ["proof (state)\ngoal (1 subgoal):\n 1. binop_onto \\<rat>\\<^sub>\\<circ> vrat_mult", "show \"binop_onto \\<rat>\\<^sub>\\<circ> vrat_mult\""], ["proof (prove)\ngoal (1 subgoal):\n 1. binop_onto \\<rat>\\<^sub>\\<circ> vrat_mult", "proof(intro binop_ontoI')"], ["proof (state)\ngoal (2 subgoals):\n 1. binop \\<rat>\\<^sub>\\<circ> vrat_mult\n 2. \\<rat>\\<^sub>\\<circ>\n    \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_mult", "show \"binop \\<rat>\\<^sub>\\<circ> vrat_mult\""], ["proof (prove)\ngoal (1 subgoal):\n 1. binop \\<rat>\\<^sub>\\<circ> vrat_mult", "by (rule binop_axioms)"], ["proof (state)\nthis:\n  binop \\<rat>\\<^sub>\\<circ> vrat_mult\n\ngoal (1 subgoal):\n 1. \\<rat>\\<^sub>\\<circ>\n    \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_mult", "show \"\\<rat>\\<^sub>\\<circ> \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_mult\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rat>\\<^sub>\\<circ>\n    \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_mult", "proof(intro vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_mult", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_mult", "assume prems: \"y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\""], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_mult", "moreover"], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_mult", "from vrat_one vrat_one_closed"], ["proof (chain)\npicking this:\n  1\\<^sub>\\<rat> = 1\n  1\\<^sub>\\<rat> \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "have \"1 \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  1\\<^sub>\\<rat> = 1\n  1\\<^sub>\\<rat> \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. 1 \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "by auto"], ["proof (state)\nthis:\n  1 \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_mult", "ultimately"], ["proof (chain)\npicking this:\n  y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n  1 \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "have \"y *\\<^sub>\\<rat> 1 \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_mult\""], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n  1 \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. y *\\<^sub>\\<rat> 1 \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_mult", "by auto"], ["proof (state)\nthis:\n  y *\\<^sub>\\<rat> 1 \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_mult\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_mult", "moreover"], ["proof (state)\nthis:\n  y *\\<^sub>\\<rat> 1 \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_mult\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_mult", "from prems vrat_identity_law_multiplication"], ["proof (chain)\npicking this:\n  y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n  ?x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> \\<Longrightarrow>\n  ?x *\\<^sub>\\<rat> 1\\<^sub>\\<rat> = ?x", "have \"y = y *\\<^sub>\\<rat> 1\""], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n  ?x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> \\<Longrightarrow>\n  ?x *\\<^sub>\\<rat> 1\\<^sub>\\<rat> = ?x\n\ngoal (1 subgoal):\n 1. y = y *\\<^sub>\\<rat> 1", "by (simp add: vrat_one)"], ["proof (state)\nthis:\n  y = y *\\<^sub>\\<rat> 1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_mult", "ultimately"], ["proof (chain)\npicking this:\n  y *\\<^sub>\\<rat> 1 \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_mult\n  y = y *\\<^sub>\\<rat> 1", "show \"y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_mult\""], ["proof (prove)\nusing this:\n  y *\\<^sub>\\<rat> 1 \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_mult\n  y = y *\\<^sub>\\<rat> 1\n\ngoal (1 subgoal):\n 1. y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_mult", "by simp"], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_mult\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<rat>\\<^sub>\\<circ>\n  \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_mult\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  binop_onto \\<rat>\\<^sub>\\<circ> vrat_mult\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Multiplicative inverse.\\<close>"], ["", "global_interpretation vrat_inverse: v11 vrat_inverse\n  rewrites \"\\<D>\\<^sub>\\<circ> vrat_inverse = \\<rat>\\<^sub>\\<circ>\"\n    and \"\\<R>\\<^sub>\\<circ> vrat_inverse = \\<rat>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v11 vrat_inverse &&&\n    \\<D>\\<^sub>\\<circ> vrat_inverse = \\<rat>\\<^sub>\\<circ> &&&\n    \\<R>\\<^sub>\\<circ> vrat_inverse = \\<rat>\\<^sub>\\<circ>", "proof-"], ["proof (state)\ngoal (3 subgoals):\n 1. v11 vrat_inverse\n 2. \\<D>\\<^sub>\\<circ> vrat_inverse = \\<rat>\\<^sub>\\<circ>\n 3. \\<R>\\<^sub>\\<circ> vrat_inverse = \\<rat>\\<^sub>\\<circ>", "show v11: \"v11 vrat_inverse\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v11 vrat_inverse", "proof(intro v11I)"], ["proof (state)\ngoal (2 subgoals):\n 1. vsv vrat_inverse\n 2. vsv (vrat_inverse\\<inverse>\\<^sub>\\<circ>)", "show vsv: \"vsv vrat_inverse\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv vrat_inverse", "unfolding vrat_inverse_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (\\<lambda>x\\<in>\\<^sub>\\<circ>\\<rat>\\<^sub>\\<circ>.\n            inverse (rat_of_vrat x)\\<^sub>\\<rat>)", "by simp"], ["proof (state)\nthis:\n  vsv vrat_inverse\n\ngoal (1 subgoal):\n 1. vsv (vrat_inverse\\<inverse>\\<^sub>\\<circ>)", "interpret vsv vrat_inverse"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv vrat_inverse", "by (rule vsv)"], ["proof (state)\ngoal (1 subgoal):\n 1. vsv (vrat_inverse\\<inverse>\\<^sub>\\<circ>)", "show \"vsv (vrat_inverse\\<inverse>\\<^sub>\\<circ>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (vrat_inverse\\<inverse>\\<^sub>\\<circ>)", "proof(intro vsvI)"], ["proof (state)\ngoal (2 subgoals):\n 1. vbrelation (vrat_inverse\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> vrat_inverse\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> vrat_inverse\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "show \"vbrelation (vrat_inverse\\<inverse>\\<^sub>\\<circ>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vbrelation (vrat_inverse\\<inverse>\\<^sub>\\<circ>)", "by clarsimp"], ["proof (state)\nthis:\n  vbrelation (vrat_inverse\\<inverse>\\<^sub>\\<circ>)\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> vrat_inverse\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> vrat_inverse\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "fix a b c"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> vrat_inverse\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> vrat_inverse\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "assume prems: \"\\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> vrat_inverse\\<inverse>\\<^sub>\\<circ>\" \"\\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> vrat_inverse\\<inverse>\\<^sub>\\<circ>\""], ["proof (state)\nthis:\n  \\<langle>a, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> vrat_inverse\\<inverse>\\<^sub>\\<circ>\n  \\<langle>a, c\\<rangle>\n  \\<in>\\<^sub>\\<circ> vrat_inverse\\<inverse>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> vrat_inverse\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> vrat_inverse\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "then"], ["proof (chain)\npicking this:\n  \\<langle>a, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> vrat_inverse\\<inverse>\\<^sub>\\<circ>\n  \\<langle>a, c\\<rangle>\n  \\<in>\\<^sub>\\<circ> vrat_inverse\\<inverse>\\<^sub>\\<circ>", "have ba: \"\\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vrat_inverse\" and ca: \"\\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vrat_inverse\""], ["proof (prove)\nusing this:\n  \\<langle>a, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> vrat_inverse\\<inverse>\\<^sub>\\<circ>\n  \\<langle>a, c\\<rangle>\n  \\<in>\\<^sub>\\<circ> vrat_inverse\\<inverse>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vrat_inverse &&&\n    \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vrat_inverse", "by auto"], ["proof (state)\nthis:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vrat_inverse\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vrat_inverse\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> vrat_inverse\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> vrat_inverse\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "then"], ["proof (chain)\npicking this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vrat_inverse\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vrat_inverse", "have b: \"b \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" and c: \"c \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vrat_inverse\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vrat_inverse\n\ngoal (1 subgoal):\n 1. b \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ> &&&\n    c \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "by (simp_all add: VLambda_iff2 vrat_inverse_def)"], ["proof (state)\nthis:\n  b \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n  c \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> vrat_inverse\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> vrat_inverse\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "from ba ca"], ["proof (chain)\npicking this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vrat_inverse\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vrat_inverse", "have \"a = b\\<inverse>\\<^sub>\\<rat>\" \"a = c\\<inverse>\\<^sub>\\<rat>\""], ["proof (prove)\nusing this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vrat_inverse\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vrat_inverse\n\ngoal (1 subgoal):\n 1. a = b\\<inverse>\\<^sub>\\<rat> &&& a = c\\<inverse>\\<^sub>\\<rat>", "by simp_all"], ["proof (state)\nthis:\n  a = b\\<inverse>\\<^sub>\\<rat>\n  a = c\\<inverse>\\<^sub>\\<rat>\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> vrat_inverse\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> vrat_inverse\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "with ba ca b c"], ["proof (chain)\npicking this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vrat_inverse\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vrat_inverse\n  b \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n  c \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n  a = b\\<inverse>\\<^sub>\\<rat>\n  a = c\\<inverse>\\<^sub>\\<rat>", "show \"b = c\""], ["proof (prove)\nusing this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> vrat_inverse\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> vrat_inverse\n  b \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n  c \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n  a = b\\<inverse>\\<^sub>\\<rat>\n  a = c\\<inverse>\\<^sub>\\<rat>\n\ngoal (1 subgoal):\n 1. b = c", "by (metis vrat_inverse_inverse)"], ["proof (state)\nthis:\n  b = c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  vsv (vrat_inverse\\<inverse>\\<^sub>\\<circ>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  v11 vrat_inverse\n\ngoal (2 subgoals):\n 1. \\<D>\\<^sub>\\<circ> vrat_inverse = \\<rat>\\<^sub>\\<circ>\n 2. \\<R>\\<^sub>\\<circ> vrat_inverse = \\<rat>\\<^sub>\\<circ>", "interpret v11 vrat_inverse"], ["proof (prove)\ngoal (1 subgoal):\n 1. v11 vrat_inverse", "by (rule v11)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<D>\\<^sub>\\<circ> vrat_inverse = \\<rat>\\<^sub>\\<circ>\n 2. \\<R>\\<^sub>\\<circ> vrat_inverse = \\<rat>\\<^sub>\\<circ>", "show dom: \"\\<D>\\<^sub>\\<circ> vrat_inverse = \\<rat>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> vrat_inverse = \\<rat>\\<^sub>\\<circ>", "unfolding vrat_inverse_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (\\<lambda>x\\<in>\\<^sub>\\<circ>\\<rat>\\<^sub>\\<circ>.\n         inverse (rat_of_vrat x)\\<^sub>\\<rat>) =\n    \\<rat>\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> vrat_inverse = \\<rat>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vrat_inverse = \\<rat>\\<^sub>\\<circ>", "have \"\\<R>\\<^sub>\\<circ> vrat_inverse \\<subseteq>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vrat_inverse\n    \\<subseteq>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "proof(intro vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              vrat_inverse \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              vrat_inverse \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "assume \"y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_inverse\""], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_inverse\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              vrat_inverse \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "then"], ["proof (chain)\npicking this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_inverse", "obtain x where \"x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\" and y_def: \"y = x\\<inverse>\\<^sub>\\<rat>\""], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_inverse\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>;\n         y = x\\<inverse>\\<^sub>\\<rat>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding dom[symmetric]"], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_inverse\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> vrat_inverse;\n         y = x\\<inverse>\\<^sub>\\<rat>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n  y = x\\<inverse>\\<^sub>\\<rat>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              vrat_inverse \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "then"], ["proof (chain)\npicking this:\n  x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n  y = x\\<inverse>\\<^sub>\\<rat>", "show \"y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n  y = x\\<inverse>\\<^sub>\\<rat>\n\ngoal (1 subgoal):\n 1. y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>", "by (simp add: vrat_inverse_closed)"], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> vrat_inverse\n  \\<subseteq>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vrat_inverse = \\<rat>\\<^sub>\\<circ>", "moreover"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> vrat_inverse\n  \\<subseteq>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vrat_inverse = \\<rat>\\<^sub>\\<circ>", "have \"\\<rat>\\<^sub>\\<circ> \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_inverse\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rat>\\<^sub>\\<circ>\n    \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_inverse", "by (intro vsubsetI) \n      (metis dom vdomain_atD vrat_inverse_closed vrat_inverse_inverse)"], ["proof (state)\nthis:\n  \\<rat>\\<^sub>\\<circ>\n  \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_inverse\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vrat_inverse = \\<rat>\\<^sub>\\<circ>", "ultimately"], ["proof (chain)\npicking this:\n  \\<R>\\<^sub>\\<circ> vrat_inverse\n  \\<subseteq>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n  \\<rat>\\<^sub>\\<circ>\n  \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_inverse", "show \"\\<R>\\<^sub>\\<circ> vrat_inverse = \\<rat>\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> vrat_inverse\n  \\<subseteq>\\<^sub>\\<circ> \\<rat>\\<^sub>\\<circ>\n  \\<rat>\\<^sub>\\<circ>\n  \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> vrat_inverse\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> vrat_inverse = \\<rat>\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> vrat_inverse = \\<rat>\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Upper bound on the cardinality of the continuum for \\<^typ>\\<open>V\\<close>\\<close>"], ["", "lemma inj_on_inv_vreal_of_real: \"inj_on (inv vreal_of_real) (elts \\<real>\\<^sub>\\<circ>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (inv vreal_of_real) (elts \\<real>\\<^sub>\\<circ>)", "by (intro inj_onI) (fastforce intro: inv_into_injective)"], ["", "lemma vreal_vlepoll_VPow_omega: \"\\<real>\\<^sub>\\<circ> \\<lesssim>\\<^sub>\\<circ> VPow \\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<real>\\<^sub>\\<circ> \\<lesssim>\\<^sub>\\<circ> VPow \\<omega>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<real>\\<^sub>\\<circ> \\<lesssim>\\<^sub>\\<circ> VPow \\<omega>", "have \"elts \\<real>\\<^sub>\\<circ> \\<lesssim> (UNIV::real set)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. elts \\<real>\\<^sub>\\<circ> \\<lesssim> UNIV", "unfolding lepoll_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f.\n       inj_on f (elts \\<real>\\<^sub>\\<circ>) \\<and>\n       f ` elts \\<real>\\<^sub>\\<circ> \\<subseteq> UNIV", "by (auto intro: inj_on_inv_vreal_of_real)"], ["proof (state)\nthis:\n  elts \\<real>\\<^sub>\\<circ> \\<lesssim> UNIV\n\ngoal (1 subgoal):\n 1. \\<real>\\<^sub>\\<circ> \\<lesssim>\\<^sub>\\<circ> VPow \\<omega>", "from vlepoll_VPow_omega_if_vreal_lepoll_real[OF this]"], ["proof (chain)\npicking this:\n  ZFC_in_HOL.set (elts \\<real>\\<^sub>\\<circ>) \\<lesssim>\\<^sub>\\<circ>\n  VPow \\<omega>", "show ?thesis"], ["proof (prove)\nusing this:\n  ZFC_in_HOL.set (elts \\<real>\\<^sub>\\<circ>) \\<lesssim>\\<^sub>\\<circ>\n  VPow \\<omega>\n\ngoal (1 subgoal):\n 1. \\<real>\\<^sub>\\<circ> \\<lesssim>\\<^sub>\\<circ> VPow \\<omega>", "by simp"], ["proof (state)\nthis:\n  \\<real>\\<^sub>\\<circ> \\<lesssim>\\<^sub>\\<circ> VPow \\<omega>\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>\\newpage\\<close>"], ["", "end"]]}