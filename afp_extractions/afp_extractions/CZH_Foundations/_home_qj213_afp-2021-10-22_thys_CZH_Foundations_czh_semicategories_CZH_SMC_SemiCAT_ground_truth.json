{"file_name": "/home/qj213/afp-2021-10-22/thys/CZH_Foundations/czh_semicategories/CZH_SMC_SemiCAT.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CZH_Foundations", "problem_names": ["lemma smc_SemiCAT_components:\n  shows \"smc_SemiCAT \\<alpha>\\<lparr>Obj\\<rparr> = set {\\<CC>. semicategory \\<alpha> \\<CC>}\"\n    and \"smc_SemiCAT \\<alpha>\\<lparr>Arr\\<rparr> = all_smcfs \\<alpha>\"\n    and \"smc_SemiCAT \\<alpha>\\<lparr>Dom\\<rparr> = (\\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>. \\<FF>\\<lparr>HomDom\\<rparr>)\"\n    and \"smc_SemiCAT \\<alpha>\\<lparr>Cod\\<rparr> = (\\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>. \\<FF>\\<lparr>HomCod\\<rparr>)\"\n    and \"smc_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr> =\n      (\\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs (dg_SemiCAT \\<alpha>). \\<GG>\\<FF>\\<lparr>0\\<rparr> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\"", "lemma smc_dg_SemiCAT[smc_SemiCAT_simps]: \"smc_dg (smc_SemiCAT \\<alpha>) = dg_SemiCAT \\<alpha>\"", "lemmas_with [folded smc_dg_SemiCAT, unfolded slicing_simps]: \n  smc_SemiCAT_ObjI = dg_SemiCAT_ObjI\n  and smc_SemiCAT_ObjD = dg_SemiCAT_ObjD\n  and smc_SemiCAT_ObjE = dg_SemiCAT_ObjE\n  and smc_SemiCAT_Obj_iff[smc_SemiCAT_simps] = dg_SemiCAT_Obj_iff  \n  and smc_SemiCAT_Dom_app[smc_SemiCAT_simps] = dg_SemiCAT_Dom_app\n  and smc_SemiCAT_Cod_app[smc_SemiCAT_simps] = dg_SemiCAT_Cod_app\n  and smc_SemiCAT_is_arrI = dg_SemiCAT_is_arrI\n  and smc_SemiCAT_is_arrD = dg_SemiCAT_is_arrD\n  and smc_SemiCAT_is_arrE = dg_SemiCAT_is_arrE\n  and smc_SemiCAT_is_arr_iff[smc_SemiCAT_simps] = dg_SemiCAT_is_arr_iff", "lemma smc_SemiCAT_composable_arrs_dg_SemiCAT: \n  \"composable_arrs (dg_SemiCAT \\<alpha>) = composable_arrs (smc_SemiCAT \\<alpha>)\"", "lemma smc_SemiCAT_Comp: \n  \"smc_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr> = \n    (\\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs (smc_SemiCAT \\<alpha>). \\<GG>\\<FF>\\<lparr>0\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\"", "lemma smc_SemiCAT_Comp_app[smc_SemiCAT_simps]:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<FF> = \\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF>\"", "lemma smc_SemiCAT_Comp_vdomain[smc_SemiCAT_simps]: \n  \"\\<D>\\<^sub>\\<circ> (smc_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr>) = composable_arrs (smc_SemiCAT \\<alpha>)\"", "lemma smc_SemiCAT_Comp_vrange: \"\\<R>\\<^sub>\\<circ> (smc_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr>) \\<subseteq>\\<^sub>\\<circ> all_smcfs \\<alpha>\"", "lemma (in \\<Z>) tiny_semicategory_smc_SemiCAT: \n  assumes \"\\<Z> \\<beta>\" and \"\\<alpha> \\<in>\\<^sub>\\<circ> \\<beta>\"\n  shows \"tiny_semicategory \\<beta> (smc_SemiCAT \\<alpha>)\"", "lemma (in \\<Z>) smc_SemiCAT_obj_initialI: \"obj_initial (smc_SemiCAT \\<alpha>) smc_0\"", "lemma (in \\<Z>) smc_SemiCAT_obj_initialD:\n  assumes \"obj_initial (smc_SemiCAT \\<alpha>) \\<AA>\"\n  shows \"\\<AA> = smc_0\"", "lemma (in \\<Z>) smc_SemiCAT_obj_initialE:\n  assumes \"obj_initial (smc_SemiCAT \\<alpha>) \\<AA>\"\n  obtains \"\\<AA> = smc_0\"", "lemma (in \\<Z>) smc_SemiCAT_obj_initial_iff[smc_SemiCAT_simps]:\n  \"obj_initial (smc_SemiCAT \\<alpha>) \\<AA> \\<longleftrightarrow> \\<AA> = smc_0\"", "lemma (in \\<Z>) smc_SemiCAT_obj_terminalI[smc_SemiCAT_intros]: \n  assumes \"a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" and \"f \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"obj_terminal (smc_SemiCAT \\<alpha>) (smc_1 a f)\"", "lemma (in \\<Z>) smc_SemiCAT_obj_terminalE: \n  assumes \"obj_terminal (smc_SemiCAT \\<alpha>) \\<BB>\"\n  obtains a f where \"a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" and \"f \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" and \"\\<BB> = smc_1 a f\""], "translations": [["", "lemma smc_SemiCAT_components:\n  shows \"smc_SemiCAT \\<alpha>\\<lparr>Obj\\<rparr> = set {\\<CC>. semicategory \\<alpha> \\<CC>}\"\n    and \"smc_SemiCAT \\<alpha>\\<lparr>Arr\\<rparr> = all_smcfs \\<alpha>\"\n    and \"smc_SemiCAT \\<alpha>\\<lparr>Dom\\<rparr> = (\\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>. \\<FF>\\<lparr>HomDom\\<rparr>)\"\n    and \"smc_SemiCAT \\<alpha>\\<lparr>Cod\\<rparr> = (\\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>. \\<FF>\\<lparr>HomCod\\<rparr>)\"\n    and \"smc_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr> =\n      (\\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs (dg_SemiCAT \\<alpha>). \\<GG>\\<FF>\\<lparr>0\\<rparr> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (smc_SemiCAT \\<alpha>\\<lparr>Obj\\<rparr> =\n     ZFC_in_HOL.set {\\<CC>. semicategory \\<alpha> \\<CC>} &&&\n     smc_SemiCAT \\<alpha>\\<lparr>Arr\\<rparr> = all_smcfs \\<alpha>) &&&\n    smc_SemiCAT \\<alpha>\\<lparr>Dom\\<rparr> =\n    (\\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n        \\<FF>\\<lparr>HomDom\\<rparr>) &&&\n    smc_SemiCAT \\<alpha>\\<lparr>Cod\\<rparr> =\n    (\\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n        \\<FF>\\<lparr>HomCod\\<rparr>) &&&\n    smc_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr> =\n    (\\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n      (dg_SemiCAT \\<alpha>).\n        \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n        \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>)", "unfolding smc_SemiCAT_def dg_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([ZFC_in_HOL.set (Collect (semicategory \\<alpha>)), all_smcfs \\<alpha>,\n      \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n         \\<FF>\\<lparr>HomDom\\<rparr>,\n      \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n         \\<FF>\\<lparr>HomCod\\<rparr>,\n      \\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n       (dg_SemiCAT \\<alpha>).\n         \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n         \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n     ZFC_in_HOL.set {\\<CC>. semicategory \\<alpha> \\<CC>} &&&\n     [ZFC_in_HOL.set (Collect (semicategory \\<alpha>)), all_smcfs \\<alpha>,\n      \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n         \\<FF>\\<lparr>HomDom\\<rparr>,\n      \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n         \\<FF>\\<lparr>HomCod\\<rparr>,\n      \\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n       (dg_SemiCAT \\<alpha>).\n         \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n         \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> =\n     all_smcfs \\<alpha>) &&&\n    [ZFC_in_HOL.set (Collect (semicategory \\<alpha>)), all_smcfs \\<alpha>,\n     \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n        \\<FF>\\<lparr>HomDom\\<rparr>,\n     \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n        \\<FF>\\<lparr>HomCod\\<rparr>,\n     \\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n      (dg_SemiCAT \\<alpha>).\n        \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n        \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr> =\n    (\\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n        \\<FF>\\<lparr>HomDom\\<rparr>) &&&\n    [ZFC_in_HOL.set (Collect (semicategory \\<alpha>)), all_smcfs \\<alpha>,\n     \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n        \\<FF>\\<lparr>HomDom\\<rparr>,\n     \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n        \\<FF>\\<lparr>HomCod\\<rparr>,\n     \\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n      (dg_SemiCAT \\<alpha>).\n        \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n        \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr> =\n    (\\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n        \\<FF>\\<lparr>HomCod\\<rparr>) &&&\n    [ZFC_in_HOL.set (Collect (semicategory \\<alpha>)), all_smcfs \\<alpha>,\n     \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n        \\<FF>\\<lparr>HomDom\\<rparr>,\n     \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n        \\<FF>\\<lparr>HomCod\\<rparr>,\n     \\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n      (dg_SemiCAT \\<alpha>).\n        \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n        \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>4\\<^sub>\\<nat>\\<rparr> =\n    (\\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n      (dg_SemiCAT \\<alpha>).\n        \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n        \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>)", "by (simp_all add: nat_omega_simps)"], ["", "text\\<open>Slicing.\\<close>"], ["", "lemma smc_dg_SemiCAT[smc_SemiCAT_simps]: \"smc_dg (smc_SemiCAT \\<alpha>) = dg_SemiCAT \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smc_dg (smc_SemiCAT \\<alpha>) = dg_SemiCAT \\<alpha>", "proof(rule vsv_eqI)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (smc_dg (smc_SemiCAT \\<alpha>))\n 2. vsv (dg_SemiCAT \\<alpha>)\n 3. \\<D>\\<^sub>\\<circ> (smc_dg (smc_SemiCAT \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ> (dg_SemiCAT \\<alpha>)\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (smc_dg\n                                (smc_SemiCAT \\<alpha>)) \\<Longrightarrow>\n       smc_dg (smc_SemiCAT \\<alpha>)\\<lparr>a\\<rparr> =\n       dg_SemiCAT \\<alpha>\\<lparr>a\\<rparr>", "show \"vsv (smc_dg (smc_SemiCAT \\<alpha>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (smc_dg (smc_SemiCAT \\<alpha>))", "unfolding smc_dg_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv [smc_SemiCAT \\<alpha>\\<lparr>Obj\\<rparr>,\n         smc_SemiCAT \\<alpha>\\<lparr>Arr\\<rparr>,\n         smc_SemiCAT \\<alpha>\\<lparr>Dom\\<rparr>,\n         smc_SemiCAT \\<alpha>\\<lparr>Cod\\<rparr>]\\<^sub>\\<circ>", "by auto"], ["proof (state)\nthis:\n  vsv (smc_dg (smc_SemiCAT \\<alpha>))\n\ngoal (3 subgoals):\n 1. vsv (dg_SemiCAT \\<alpha>)\n 2. \\<D>\\<^sub>\\<circ> (smc_dg (smc_SemiCAT \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ> (dg_SemiCAT \\<alpha>)\n 3. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (smc_dg\n                                (smc_SemiCAT \\<alpha>)) \\<Longrightarrow>\n       smc_dg (smc_SemiCAT \\<alpha>)\\<lparr>a\\<rparr> =\n       dg_SemiCAT \\<alpha>\\<lparr>a\\<rparr>", "show \"vsv (dg_SemiCAT \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (dg_SemiCAT \\<alpha>)", "unfolding dg_SemiCAT_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv [ZFC_in_HOL.set (Collect (semicategory \\<alpha>)),\n         all_smcfs \\<alpha>,\n         \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n            \\<FF>\\<lparr>HomDom\\<rparr>,\n         \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n            \\<FF>\\<lparr>HomCod\\<rparr>]\\<^sub>\\<circ>", "by auto"], ["proof (state)\nthis:\n  vsv (dg_SemiCAT \\<alpha>)\n\ngoal (2 subgoals):\n 1. \\<D>\\<^sub>\\<circ> (smc_dg (smc_SemiCAT \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ> (dg_SemiCAT \\<alpha>)\n 2. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (smc_dg\n                                (smc_SemiCAT \\<alpha>)) \\<Longrightarrow>\n       smc_dg (smc_SemiCAT \\<alpha>)\\<lparr>a\\<rparr> =\n       dg_SemiCAT \\<alpha>\\<lparr>a\\<rparr>", "have dom_lhs: \"\\<D>\\<^sub>\\<circ> (smc_dg (smc_SemiCAT \\<alpha>)) = 4\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (smc_dg (smc_SemiCAT \\<alpha>)) = 4\\<^sub>\\<nat>", "unfolding smc_dg_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     [smc_SemiCAT \\<alpha>\\<lparr>Obj\\<rparr>,\n      smc_SemiCAT \\<alpha>\\<lparr>Arr\\<rparr>,\n      smc_SemiCAT \\<alpha>\\<lparr>Dom\\<rparr>,\n      smc_SemiCAT \\<alpha>\\<lparr>Cod\\<rparr>]\\<^sub>\\<circ> =\n    4\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (smc_dg (smc_SemiCAT \\<alpha>)) = 4\\<^sub>\\<nat>\n\ngoal (2 subgoals):\n 1. \\<D>\\<^sub>\\<circ> (smc_dg (smc_SemiCAT \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ> (dg_SemiCAT \\<alpha>)\n 2. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (smc_dg\n                                (smc_SemiCAT \\<alpha>)) \\<Longrightarrow>\n       smc_dg (smc_SemiCAT \\<alpha>)\\<lparr>a\\<rparr> =\n       dg_SemiCAT \\<alpha>\\<lparr>a\\<rparr>", "have dom_rhs: \"\\<D>\\<^sub>\\<circ> (dg_SemiCAT \\<alpha>) = 4\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (dg_SemiCAT \\<alpha>) = 4\\<^sub>\\<nat>", "unfolding dg_SemiCAT_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     [ZFC_in_HOL.set (Collect (semicategory \\<alpha>)), all_smcfs \\<alpha>,\n      \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n         \\<FF>\\<lparr>HomDom\\<rparr>,\n      \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n         \\<FF>\\<lparr>HomCod\\<rparr>]\\<^sub>\\<circ> =\n    4\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (dg_SemiCAT \\<alpha>) = 4\\<^sub>\\<nat>\n\ngoal (2 subgoals):\n 1. \\<D>\\<^sub>\\<circ> (smc_dg (smc_SemiCAT \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ> (dg_SemiCAT \\<alpha>)\n 2. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (smc_dg\n                                (smc_SemiCAT \\<alpha>)) \\<Longrightarrow>\n       smc_dg (smc_SemiCAT \\<alpha>)\\<lparr>a\\<rparr> =\n       dg_SemiCAT \\<alpha>\\<lparr>a\\<rparr>", "show \"\\<D>\\<^sub>\\<circ> (smc_dg (smc_SemiCAT \\<alpha>)) = \\<D>\\<^sub>\\<circ> (dg_SemiCAT \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (smc_dg (smc_SemiCAT \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ> (dg_SemiCAT \\<alpha>)", "unfolding dom_lhs dom_rhs"], ["proof (prove)\ngoal (1 subgoal):\n 1. 4\\<^sub>\\<nat> = 4\\<^sub>\\<nat>", "by simp"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (smc_dg (smc_SemiCAT \\<alpha>)) =\n  \\<D>\\<^sub>\\<circ> (dg_SemiCAT \\<alpha>)\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (smc_dg\n                                (smc_SemiCAT \\<alpha>)) \\<Longrightarrow>\n       smc_dg (smc_SemiCAT \\<alpha>)\\<lparr>a\\<rparr> =\n       dg_SemiCAT \\<alpha>\\<lparr>a\\<rparr>", "show \"a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (smc_dg (smc_SemiCAT \\<alpha>)) \\<Longrightarrow> \n    smc_dg (smc_SemiCAT \\<alpha>)\\<lparr>a\\<rparr> = dg_SemiCAT \\<alpha>\\<lparr>a\\<rparr>\"\n    for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                           (smc_dg (smc_SemiCAT \\<alpha>)) \\<Longrightarrow>\n    smc_dg (smc_SemiCAT \\<alpha>)\\<lparr>a\\<rparr> =\n    dg_SemiCAT \\<alpha>\\<lparr>a\\<rparr>", "by \n      (\n        unfold dom_lhs, \n        elim_in_numeral,\n        unfold smc_dg_def dg_field_simps smc_SemiCAT_def dg_SemiCAT_def\n      )\n      (auto simp: nat_omega_simps)"], ["proof (state)\nthis:\n  ?a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                          (smc_dg (smc_SemiCAT \\<alpha>)) \\<Longrightarrow>\n  smc_dg (smc_SemiCAT \\<alpha>)\\<lparr>?a\\<rparr> =\n  dg_SemiCAT \\<alpha>\\<lparr>?a\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas_with [folded smc_dg_SemiCAT, unfolded slicing_simps]: \n  smc_SemiCAT_ObjI = dg_SemiCAT_ObjI\n  and smc_SemiCAT_ObjD = dg_SemiCAT_ObjD\n  and smc_SemiCAT_ObjE = dg_SemiCAT_ObjE\n  and smc_SemiCAT_Obj_iff[smc_SemiCAT_simps] = dg_SemiCAT_Obj_iff  \n  and smc_SemiCAT_Dom_app[smc_SemiCAT_simps] = dg_SemiCAT_Dom_app\n  and smc_SemiCAT_Cod_app[smc_SemiCAT_simps] = dg_SemiCAT_Cod_app\n  and smc_SemiCAT_is_arrI = dg_SemiCAT_is_arrI\n  and smc_SemiCAT_is_arrD = dg_SemiCAT_is_arrD\n  and smc_SemiCAT_is_arrE = dg_SemiCAT_is_arrE\n  and smc_SemiCAT_is_arr_iff[smc_SemiCAT_simps] = dg_SemiCAT_is_arr_iff"], ["", "subsection\\<open>Composable arrows\\<close>"], ["", "lemma smc_SemiCAT_composable_arrs_dg_SemiCAT: \n  \"composable_arrs (dg_SemiCAT \\<alpha>) = composable_arrs (smc_SemiCAT \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. composable_arrs (dg_SemiCAT \\<alpha>) =\n    composable_arrs (smc_SemiCAT \\<alpha>)", "unfolding composable_arrs_def smc_dg_SemiCAT[symmetric] slicing_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set\n     {[g, f]\\<^sub>\\<circ> |g f.\n      \\<exists>a b c.\n         g : b \\<mapsto>\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> c \\<and>\n         f : a \\<mapsto>\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> b} =\n    ZFC_in_HOL.set\n     {[g, f]\\<^sub>\\<circ> |g f.\n      \\<exists>a b c.\n         g : b \\<mapsto>\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> c \\<and>\n         f : a \\<mapsto>\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> b}", "by auto"], ["", "lemma smc_SemiCAT_Comp: \n  \"smc_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr> = \n    (\\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs (smc_SemiCAT \\<alpha>). \\<GG>\\<FF>\\<lparr>0\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smc_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr> =\n    (\\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n      (smc_SemiCAT \\<alpha>).\n        \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n        \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>)", "unfolding smc_SemiCAT_components smc_SemiCAT_composable_arrs_dg_SemiCAT"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n      (smc_SemiCAT \\<alpha>).\n        \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n        \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>) =\n    (\\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n      (smc_SemiCAT \\<alpha>).\n        \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n        \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>)", ".."], ["", "subsection\\<open>Composition\\<close>"], ["", "lemma smc_SemiCAT_Comp_app[smc_SemiCAT_simps]:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<FF> = \\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<FF> =\n    \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<FF> =\n    \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>", "from assms"], ["proof (chain)\npicking this:\n  \\<GG> : \\<BB> \\<mapsto>\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<CC>\n  \\<FF> : \\<AA> \\<mapsto>\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<BB>", "have \"[\\<GG>, \\<FF>]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> composable_arrs (smc_SemiCAT \\<alpha>)\""], ["proof (prove)\nusing this:\n  \\<GG> : \\<BB> \\<mapsto>\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<CC>\n  \\<FF> : \\<AA> \\<mapsto>\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. [\\<GG>, \\<FF>]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> composable_arrs (smc_SemiCAT \\<alpha>)", "by (auto simp: composable_arrsI)"], ["proof (state)\nthis:\n  [\\<GG>, \\<FF>]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> composable_arrs (smc_SemiCAT \\<alpha>)\n\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<FF> =\n    \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>", "then"], ["proof (chain)\npicking this:\n  [\\<GG>, \\<FF>]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> composable_arrs (smc_SemiCAT \\<alpha>)", "show \"\\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<FF> = \\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF>\""], ["proof (prove)\nusing this:\n  [\\<GG>, \\<FF>]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> composable_arrs (smc_SemiCAT \\<alpha>)\n\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<FF> =\n    \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>", "unfolding smc_SemiCAT_Comp"], ["proof (prove)\nusing this:\n  [\\<GG>, \\<FF>]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> composable_arrs (smc_SemiCAT \\<alpha>)\n\ngoal (1 subgoal):\n 1. (\\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n      (smc_SemiCAT \\<alpha>).\n        \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n        \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>) \\<lparr>\\<GG>,\n                    \\<FF>\\<rparr>\\<^sub>\\<bullet> =\n    \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  \\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<FF> =\n  \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smc_SemiCAT_Comp_vdomain[smc_SemiCAT_simps]: \n  \"\\<D>\\<^sub>\\<circ> (smc_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr>) = composable_arrs (smc_SemiCAT \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (smc_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr>) =\n    composable_arrs (smc_SemiCAT \\<alpha>)", "unfolding smc_SemiCAT_Comp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (\\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n       (smc_SemiCAT \\<alpha>).\n         \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n         \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>) =\n    composable_arrs (smc_SemiCAT \\<alpha>)", "by auto"], ["", "lemma smc_SemiCAT_Comp_vrange: \"\\<R>\\<^sub>\\<circ> (smc_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr>) \\<subseteq>\\<^sub>\\<circ> all_smcfs \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (smc_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> all_smcfs \\<alpha>", "proof(rule vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (smc_SemiCAT\n                                \\<alpha>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> all_smcfs \\<alpha>", "fix \\<HH>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (smc_SemiCAT\n                                \\<alpha>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> all_smcfs \\<alpha>", "assume \"\\<HH> \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (smc_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr>)\""], ["proof (state)\nthis:\n  \\<HH>\n  \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                       (smc_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (smc_SemiCAT\n                                \\<alpha>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> all_smcfs \\<alpha>", "then"], ["proof (chain)\npicking this:\n  \\<HH>\n  \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                       (smc_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr>)", "obtain \\<GG>\\<FF> \n    where \\<HH>_def: \"\\<HH> = smc_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr>\\<lparr>\\<GG>\\<FF>\\<rparr>\"\n      and \"\\<GG>\\<FF> \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (smc_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr>)\""], ["proof (prove)\nusing this:\n  \\<HH>\n  \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                       (smc_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<GG>\\<FF>.\n        \\<lbrakk>\\<HH> =\n                 smc_SemiCAT\n                  \\<alpha>\\<lparr>Comp\\<rparr>\\<lparr>\\<GG>\\<FF>\\<rparr>;\n         \\<GG>\\<FF>\n         \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (smc_SemiCAT\n                                \\<alpha>\\<lparr>Comp\\<rparr>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding smc_SemiCAT_components"], ["proof (prove)\nusing this:\n  \\<HH>\n  \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                       (\\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n                         (dg_SemiCAT \\<alpha>).\n                           \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n                           \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<GG>\\<FF>.\n        \\<lbrakk>\\<HH> =\n                 (\\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n                   (dg_SemiCAT \\<alpha>).\n                     \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n                     \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\\<lparr>\\<GG>\\<FF>\\<rparr>;\n         \\<GG>\\<FF>\n         \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (\\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n                                (dg_SemiCAT \\<alpha>).\n                                  \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n                                  \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto intro: composable_arrsI)"], ["proof (state)\nthis:\n  \\<HH> = smc_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr>\\<lparr>\\<GG>\\<FF>\\<rparr>\n  \\<GG>\\<FF>\n  \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                       (smc_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (smc_SemiCAT\n                                \\<alpha>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> all_smcfs \\<alpha>", "then"], ["proof (chain)\npicking this:\n  \\<HH> = smc_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr>\\<lparr>\\<GG>\\<FF>\\<rparr>\n  \\<GG>\\<FF>\n  \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                       (smc_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr>)", "obtain \\<GG> \\<FF> \\<AA> \\<BB> \\<CC> \n    where \"\\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ>\" \n      and \\<GG>: \"\\<GG> : \\<BB> \\<mapsto>\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<CC>\" \n      and \\<FF>: \"\\<FF> : \\<AA> \\<mapsto>\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\nusing this:\n  \\<HH> = smc_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr>\\<lparr>\\<GG>\\<FF>\\<rparr>\n  \\<GG>\\<FF>\n  \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                       (smc_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<GG> \\<FF> \\<BB> \\<CC> \\<AA>.\n        \\<lbrakk>\\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ>;\n         \\<GG> : \\<BB> \\<mapsto>\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<CC>;\n         \\<FF> : \\<AA> \\<mapsto>\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<BB>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: smc_SemiCAT_Comp_vdomain)"], ["proof (state)\nthis:\n  \\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ>\n  \\<GG> : \\<BB> \\<mapsto>\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<CC>\n  \\<FF> : \\<AA> \\<mapsto>\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (smc_SemiCAT\n                                \\<alpha>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> all_smcfs \\<alpha>", "with \\<HH>_def"], ["proof (chain)\npicking this:\n  \\<HH> = smc_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr>\\<lparr>\\<GG>\\<FF>\\<rparr>\n  \\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ>\n  \\<GG> : \\<BB> \\<mapsto>\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<CC>\n  \\<FF> : \\<AA> \\<mapsto>\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<BB>", "have \\<HH>_def': \"\\<HH> = \\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<FF>\""], ["proof (prove)\nusing this:\n  \\<HH> = smc_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr>\\<lparr>\\<GG>\\<FF>\\<rparr>\n  \\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ>\n  \\<GG> : \\<BB> \\<mapsto>\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<CC>\n  \\<FF> : \\<AA> \\<mapsto>\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<HH> = \\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<FF>", "by simp"], ["proof (state)\nthis:\n  \\<HH> = \\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<FF>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (smc_SemiCAT\n                                \\<alpha>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> all_smcfs \\<alpha>", "from \\<GG> \\<FF>"], ["proof (chain)\npicking this:\n  \\<GG> : \\<BB> \\<mapsto>\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<CC>\n  \\<FF> : \\<AA> \\<mapsto>\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<BB>", "show \"\\<HH> \\<in>\\<^sub>\\<circ> all_smcfs \\<alpha>\""], ["proof (prove)\nusing this:\n  \\<GG> : \\<BB> \\<mapsto>\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<CC>\n  \\<FF> : \\<AA> \\<mapsto>\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<HH> \\<in>\\<^sub>\\<circ> all_smcfs \\<alpha>", "unfolding \\<HH>_def'"], ["proof (prove)\nusing this:\n  \\<GG> : \\<BB> \\<mapsto>\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<CC>\n  \\<FF> : \\<AA> \\<mapsto>\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<FF>\n    \\<in>\\<^sub>\\<circ> all_smcfs \\<alpha>", "by (auto intro: smc_cs_intros simp: smc_SemiCAT_simps)"], ["proof (state)\nthis:\n  \\<HH> \\<in>\\<^sub>\\<circ> all_smcfs \\<alpha>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>\\<open>SemiCAT\\<close> is a semicategory\\<close>"], ["", "lemma (in \\<Z>) tiny_semicategory_smc_SemiCAT: \n  assumes \"\\<Z> \\<beta>\" and \"\\<alpha> \\<in>\\<^sub>\\<circ> \\<beta>\"\n  shows \"tiny_semicategory \\<beta> (smc_SemiCAT \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tiny_semicategory \\<beta> (smc_SemiCAT \\<alpha>)", "proof(intro tiny_semicategoryI, unfold smc_SemiCAT_is_arr_iff)"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<Z> \\<beta>\n 2. vfsequence (smc_SemiCAT \\<alpha>)\n 3. vsv (smc_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr>)\n 4. vcard (smc_SemiCAT \\<alpha>) = 5\\<^sub>\\<nat>\n 5. tiny_digraph \\<beta> (smc_dg (smc_SemiCAT \\<alpha>))\n 6. \\<And>gf.\n       (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (smc_SemiCAT\n                                  \\<alpha>\\<lparr>Comp\\<rparr>)) =\n       (\\<exists>g f b c a.\n           gf = [g, f]\\<^sub>\\<circ> \\<and>\n           g :\n           b \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> c \\<and>\n           f :\n           a \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> b)\n 7. \\<And>b c g a f.\n       \\<lbrakk>g :\n                b \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> c;\n        f :\n        a \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                         f :\n                         a \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> c\n 8. \\<And>c d h b g a f.\n       \\<lbrakk>h :\n                c \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> d;\n        g :\n        b \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> c;\n        f :\n        a \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                          f)", "show \"vfsequence (smc_SemiCAT \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (smc_SemiCAT \\<alpha>)", "unfolding smc_SemiCAT_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence\n     [ZFC_in_HOL.set (Collect (semicategory \\<alpha>)), all_smcfs \\<alpha>,\n      \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n         \\<FF>\\<lparr>HomDom\\<rparr>,\n      \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n         \\<FF>\\<lparr>HomCod\\<rparr>,\n      \\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n       (dg_SemiCAT \\<alpha>).\n         \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n         \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>", "by auto"], ["proof (state)\nthis:\n  vfsequence (smc_SemiCAT \\<alpha>)\n\ngoal (7 subgoals):\n 1. \\<Z> \\<beta>\n 2. vsv (smc_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr>)\n 3. vcard (smc_SemiCAT \\<alpha>) = 5\\<^sub>\\<nat>\n 4. tiny_digraph \\<beta> (smc_dg (smc_SemiCAT \\<alpha>))\n 5. \\<And>gf.\n       (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (smc_SemiCAT\n                                  \\<alpha>\\<lparr>Comp\\<rparr>)) =\n       (\\<exists>g f b c a.\n           gf = [g, f]\\<^sub>\\<circ> \\<and>\n           g :\n           b \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> c \\<and>\n           f :\n           a \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> b)\n 6. \\<And>b c g a f.\n       \\<lbrakk>g :\n                b \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> c;\n        f :\n        a \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                         f :\n                         a \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> c\n 7. \\<And>c d h b g a f.\n       \\<lbrakk>h :\n                c \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> d;\n        g :\n        b \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> c;\n        f :\n        a \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                          f)", "show \"vcard (smc_SemiCAT \\<alpha>) = 5\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (smc_SemiCAT \\<alpha>) = 5\\<^sub>\\<nat>", "unfolding smc_SemiCAT_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard\n     [ZFC_in_HOL.set (Collect (semicategory \\<alpha>)), all_smcfs \\<alpha>,\n      \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n         \\<FF>\\<lparr>HomDom\\<rparr>,\n      \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n         \\<FF>\\<lparr>HomCod\\<rparr>,\n      \\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n       (dg_SemiCAT \\<alpha>).\n         \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n         \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ> =\n    5\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  vcard (smc_SemiCAT \\<alpha>) = 5\\<^sub>\\<nat>\n\ngoal (6 subgoals):\n 1. \\<Z> \\<beta>\n 2. vsv (smc_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr>)\n 3. tiny_digraph \\<beta> (smc_dg (smc_SemiCAT \\<alpha>))\n 4. \\<And>gf.\n       (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (smc_SemiCAT\n                                  \\<alpha>\\<lparr>Comp\\<rparr>)) =\n       (\\<exists>g f b c a.\n           gf = [g, f]\\<^sub>\\<circ> \\<and>\n           g :\n           b \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> c \\<and>\n           f :\n           a \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> b)\n 5. \\<And>b c g a f.\n       \\<lbrakk>g :\n                b \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> c;\n        f :\n        a \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                         f :\n                         a \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> c\n 6. \\<And>c d h b g a f.\n       \\<lbrakk>h :\n                c \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> d;\n        g :\n        b \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> c;\n        f :\n        a \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                          f)", "show \"(\\<GG>\\<FF> \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (smc_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr>)) \\<longleftrightarrow>\n    (\\<exists>\\<GG> \\<FF> \\<BB> \\<CC> \\<AA>. \\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ> \\<and> \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<and> \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>)\"\n    for \\<GG>\\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<GG>\\<FF>\n     \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                          (smc_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr>)) =\n    (\\<exists>\\<GG> \\<FF> \\<BB> \\<CC> \\<AA>.\n        \\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ> \\<and>\n        \\<GG> :\n        \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<and>\n        \\<FF> :\n        \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>)", "unfolding smc_SemiCAT_Comp_vdomain"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<GG>\\<FF>\n     \\<in>\\<^sub>\\<circ> composable_arrs (smc_SemiCAT \\<alpha>)) =\n    (\\<exists>\\<GG> \\<FF> \\<BB> \\<CC> \\<AA>.\n        \\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ> \\<and>\n        \\<GG> :\n        \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<and>\n        \\<FF> :\n        \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<GG>\\<FF>\n    \\<in>\\<^sub>\\<circ> composable_arrs\n                         (smc_SemiCAT \\<alpha>) \\<Longrightarrow>\n    \\<exists>\\<GG> \\<FF> \\<BB> \\<CC> \\<AA>.\n       \\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ> \\<and>\n       \\<GG> :\n       \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<and>\n       \\<FF> :\n       \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n 2. \\<exists>\\<GG> \\<FF> \\<BB> \\<CC> \\<AA>.\n       \\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ> \\<and>\n       \\<GG> :\n       \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<and>\n       \\<FF> :\n       \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n    \\<GG>\\<FF> \\<in>\\<^sub>\\<circ> composable_arrs (smc_SemiCAT \\<alpha>)", "show \"\\<GG>\\<FF> \\<in>\\<^sub>\\<circ> composable_arrs (smc_SemiCAT \\<alpha>) \\<Longrightarrow> \n      \\<exists>\\<GG> \\<FF> \\<BB> \\<CC> \\<AA>. \\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ> \\<and> \\<GG>   : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<and> \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG>\\<FF>\n    \\<in>\\<^sub>\\<circ> composable_arrs\n                         (smc_SemiCAT \\<alpha>) \\<Longrightarrow>\n    \\<exists>\\<GG> \\<FF> \\<BB> \\<CC> \\<AA>.\n       \\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ> \\<and>\n       \\<GG> :\n       \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<and>\n       \\<FF> :\n       \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (elim composable_arrsE) (auto simp: smc_SemiCAT_is_arr_iff)"], ["proof (state)\nthis:\n  \\<GG>\\<FF>\n  \\<in>\\<^sub>\\<circ> composable_arrs\n                       (smc_SemiCAT \\<alpha>) \\<Longrightarrow>\n  \\<exists>\\<GG> \\<FF> \\<BB> \\<CC> \\<AA>.\n     \\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ> \\<and>\n     \\<GG> :\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<and>\n     \\<FF> :\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<GG> \\<FF> \\<BB> \\<CC> \\<AA>.\n       \\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ> \\<and>\n       \\<GG> :\n       \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<and>\n       \\<FF> :\n       \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n    \\<GG>\\<FF> \\<in>\\<^sub>\\<circ> composable_arrs (smc_SemiCAT \\<alpha>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>\\<GG> \\<FF> \\<BB> \\<CC> \\<AA>.\n       \\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ> \\<and>\n       \\<GG> :\n       \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<and>\n       \\<FF> :\n       \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n    \\<GG>\\<FF> \\<in>\\<^sub>\\<circ> composable_arrs (smc_SemiCAT \\<alpha>)", "assume \"\\<exists>\\<GG> \\<FF> \\<BB> \\<CC> \\<AA>. \\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ> \\<and> \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<and> \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (state)\nthis:\n  \\<exists>\\<GG> \\<FF> \\<BB> \\<CC> \\<AA>.\n     \\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ> \\<and>\n     \\<GG> :\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<and>\n     \\<FF> :\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<GG> \\<FF> \\<BB> \\<CC> \\<AA>.\n       \\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ> \\<and>\n       \\<GG> :\n       \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<and>\n       \\<FF> :\n       \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n    \\<GG>\\<FF> \\<in>\\<^sub>\\<circ> composable_arrs (smc_SemiCAT \\<alpha>)", "with smc_SemiCAT_is_arr_iff"], ["proof (chain)\npicking this:\n  ?\\<FF> : ?\\<AA> \\<mapsto>\\<^bsub>smc_SemiCAT ?\\<alpha>\\<^esub> ?\\<BB> =\n  ?\\<FF> :\n  ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<BB>\n  \\<exists>\\<GG> \\<FF> \\<BB> \\<CC> \\<AA>.\n     \\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ> \\<and>\n     \\<GG> :\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<and>\n     \\<FF> :\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "show \"\\<GG>\\<FF> \\<in>\\<^sub>\\<circ> composable_arrs (smc_SemiCAT \\<alpha>)\""], ["proof (prove)\nusing this:\n  ?\\<FF> : ?\\<AA> \\<mapsto>\\<^bsub>smc_SemiCAT ?\\<alpha>\\<^esub> ?\\<BB> =\n  ?\\<FF> :\n  ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<BB>\n  \\<exists>\\<GG> \\<FF> \\<BB> \\<CC> \\<AA>.\n     \\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ> \\<and>\n     \\<GG> :\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<and>\n     \\<FF> :\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<GG>\\<FF> \\<in>\\<^sub>\\<circ> composable_arrs (smc_SemiCAT \\<alpha>)", "unfolding smc_SemiCAT_Comp_vdomain"], ["proof (prove)\nusing this:\n  ?\\<FF> : ?\\<AA> \\<mapsto>\\<^bsub>smc_SemiCAT ?\\<alpha>\\<^esub> ?\\<BB> =\n  ?\\<FF> :\n  ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<BB>\n  \\<exists>\\<GG> \\<FF> \\<BB> \\<CC> \\<AA>.\n     \\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ> \\<and>\n     \\<GG> :\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<and>\n     \\<FF> :\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<GG>\\<FF> \\<in>\\<^sub>\\<circ> composable_arrs (smc_SemiCAT \\<alpha>)", "by (auto intro: smc_cs_intros)"], ["proof (state)\nthis:\n  \\<GG>\\<FF> \\<in>\\<^sub>\\<circ> composable_arrs (smc_SemiCAT \\<alpha>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (?\\<GG>\\<FF>\n   \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                        (smc_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr>)) =\n  (\\<exists>\\<GG> \\<FF> \\<BB> \\<CC> \\<AA>.\n      ?\\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ> \\<and>\n      \\<GG> :\n      \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<and>\n      \\<FF> :\n      \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>)\n\ngoal (5 subgoals):\n 1. \\<Z> \\<beta>\n 2. vsv (smc_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr>)\n 3. tiny_digraph \\<beta> (smc_dg (smc_SemiCAT \\<alpha>))\n 4. \\<And>b c g a f.\n       \\<lbrakk>g :\n                b \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> c;\n        f :\n        a \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                         f :\n                         a \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> c\n 5. \\<And>c d h b g a f.\n       \\<lbrakk>h :\n                c \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> d;\n        g :\n        b \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> c;\n        f :\n        a \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                          f)", "show \"\\<lbrakk> \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>; \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<rbrakk> \\<Longrightarrow> \n    \\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n    for \\<GG> \\<BB> \\<CC> \\<FF> \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<GG> :\n             \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>;\n     \\<FF> :\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\\<rbrakk>\n    \\<Longrightarrow> \\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                      \\<FF> :\n                      \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (auto simp: smc_SemiCAT_simps intro: smc_cs_intros)"], ["proof (state)\nthis:\n  \\<lbrakk>?\\<GG> :\n           ?\\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<CC>;\n   ?\\<FF> :\n   ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<BB>\\<rbrakk>\n  \\<Longrightarrow> ?\\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                    ?\\<FF> :\n                    ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<CC>\n\ngoal (4 subgoals):\n 1. \\<Z> \\<beta>\n 2. vsv (smc_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr>)\n 3. tiny_digraph \\<beta> (smc_dg (smc_SemiCAT \\<alpha>))\n 4. \\<And>c d h b g a f.\n       \\<lbrakk>h :\n                c \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> d;\n        g :\n        b \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> c;\n        f :\n        a \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                          f)", "fix \\<HH> \\<CC> \\<DD> \\<GG> \\<BB> \\<FF> \\<AA>"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<Z> \\<beta>\n 2. vsv (smc_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr>)\n 3. tiny_digraph \\<beta> (smc_dg (smc_SemiCAT \\<alpha>))\n 4. \\<And>c d h b g a f.\n       \\<lbrakk>h :\n                c \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> d;\n        g :\n        b \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> c;\n        f :\n        a \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                          f)", "assume \"\\<HH> : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\" \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (state)\nthis:\n  \\<HH> :\n  \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\n  \\<GG> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (4 subgoals):\n 1. \\<Z> \\<beta>\n 2. vsv (smc_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr>)\n 3. tiny_digraph \\<beta> (smc_dg (smc_SemiCAT \\<alpha>))\n 4. \\<And>c d h b g a f.\n       \\<lbrakk>h :\n                c \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> d;\n        g :\n        b \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> c;\n        f :\n        a \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                          f)", "moreover"], ["proof (state)\nthis:\n  \\<HH> :\n  \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\n  \\<GG> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (4 subgoals):\n 1. \\<Z> \\<beta>\n 2. vsv (smc_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr>)\n 3. tiny_digraph \\<beta> (smc_dg (smc_SemiCAT \\<alpha>))\n 4. \\<And>c d h b g a f.\n       \\<lbrakk>h :\n                c \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> d;\n        g :\n        b \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> c;\n        f :\n        a \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                          f)", "then"], ["proof (chain)\npicking this:\n  \\<HH> :\n  \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\n  \\<GG> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "have \"\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" \"\\<HH> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\""], ["proof (prove)\nusing this:\n  \\<HH> :\n  \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\n  \\<GG> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC> &&&\n    \\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<GG> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>", "by (auto intro: smc_cs_intros)"], ["proof (state)\nthis:\n  \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<GG> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\n\ngoal (4 subgoals):\n 1. \\<Z> \\<beta>\n 2. vsv (smc_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr>)\n 3. tiny_digraph \\<beta> (smc_dg (smc_SemiCAT \\<alpha>))\n 4. \\<And>c d h b g a f.\n       \\<lbrakk>h :\n                c \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> d;\n        g :\n        b \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> c;\n        f :\n        a \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n                          f)", "ultimately"], ["proof (chain)\npicking this:\n  \\<HH> :\n  \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\n  \\<GG> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<GG> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>", "show \"\\<HH> \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<FF> = \n    \\<HH> \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> (\\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<FF>)\""], ["proof (prove)\nusing this:\n  \\<HH> :\n  \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\n  \\<GG> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<GG> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\n\ngoal (1 subgoal):\n 1. \\<HH> \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n    \\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n    \\<FF> =\n    \\<HH> \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n    (\\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<FF>)", "by \n      (\n        simp add: \n          smc_SemiCAT_is_arr_iff smc_SemiCAT_Comp_app smcf_comp_assoc\n      )"], ["proof (state)\nthis:\n  \\<HH> \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n  \\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n  \\<FF> =\n  \\<HH> \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub>\n  (\\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_SemiCAT \\<alpha>\\<^esub> \\<FF>)\n\ngoal (3 subgoals):\n 1. \\<Z> \\<beta>\n 2. vsv (smc_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr>)\n 3. tiny_digraph \\<beta> (smc_dg (smc_SemiCAT \\<alpha>))", "qed \n  (\n    auto simp: \n      assms smc_dg_SemiCAT tiny_digraph_dg_SemiCAT smc_SemiCAT_components\n  )"], ["", "subsection\\<open>Initial object\\<close>"], ["", "lemma (in \\<Z>) smc_SemiCAT_obj_initialI: \"obj_initial (smc_SemiCAT \\<alpha>) smc_0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. obj_initial (smc_SemiCAT \\<alpha>) smc_0", "unfolding obj_initial_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. obj_terminal (op_smc (smc_SemiCAT \\<alpha>)) smc_0", "proof\n  (\n    intro obj_terminalI, \n    unfold smc_op_simps smc_SemiCAT_is_arr_iff smc_SemiCAT_Obj_iff\n  )"], ["proof (state)\ngoal (2 subgoals):\n 1. semicategory \\<alpha> smc_0\n 2. \\<And>a.\n       semicategory \\<alpha> a \\<Longrightarrow>\n       Ex1 (is_semifunctor \\<alpha> smc_0 a)", "show \"semicategory \\<alpha> smc_0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> smc_0", "by (intro semicategory_smc_0)"], ["proof (state)\nthis:\n  semicategory \\<alpha> smc_0\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       semicategory \\<alpha> a \\<Longrightarrow>\n       Ex1 (is_semifunctor \\<alpha> smc_0 a)", "fix \\<AA>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       semicategory \\<alpha> a \\<Longrightarrow>\n       Ex1 (is_semifunctor \\<alpha> smc_0 a)", "assume prems: \"semicategory \\<alpha> \\<AA>\""], ["proof (state)\nthis:\n  semicategory \\<alpha> \\<AA>\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       semicategory \\<alpha> a \\<Longrightarrow>\n       Ex1 (is_semifunctor \\<alpha> smc_0 a)", "interpret semicategory \\<alpha> \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<AA>", "using prems"], ["proof (prove)\nusing this:\n  semicategory \\<alpha> \\<AA>\n\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<AA>", "."], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       semicategory \\<alpha> a \\<Longrightarrow>\n       Ex1 (is_semifunctor \\<alpha> smc_0 a)", "show \"\\<exists>!\\<FF>. \\<FF> : smc_0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!\\<FF>.\n       \\<FF> :\n       smc_0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. ?a :\n    smc_0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n 2. \\<And>\\<FF>.\n       \\<FF> :\n       smc_0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA> \\<Longrightarrow>\n       \\<FF> = ?a", "show smcf_0: \"smcf_0 \\<AA> : smc_0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_0 \\<AA> :\n    smc_0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "by \n        (\n          simp add: \n            smcf_0_is_semifunctor semicategory_axioms is_ft_semifunctor.axioms(1)\n        )"], ["proof (state)\nthis:\n  smcf_0 \\<AA> :\n  smc_0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n\ngoal (1 subgoal):\n 1. \\<And>\\<FF>.\n       \\<FF> :\n       smc_0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA> \\<Longrightarrow>\n       \\<FF> = smcf_0 \\<AA>", "fix \\<FF>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<FF>.\n       \\<FF> :\n       smc_0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA> \\<Longrightarrow>\n       \\<FF> = smcf_0 \\<AA>", "assume prems: \"\\<FF> : smc_0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\""], ["proof (state)\nthis:\n  \\<FF> :\n  smc_0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n\ngoal (1 subgoal):\n 1. \\<And>\\<FF>.\n       \\<FF> :\n       smc_0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA> \\<Longrightarrow>\n       \\<FF> = smcf_0 \\<AA>", "then"], ["proof (chain)\npicking this:\n  \\<FF> :\n  smc_0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "interpret \\<FF>: is_semifunctor \\<alpha> smc_0 \\<AA> \\<FF>"], ["proof (prove)\nusing this:\n  \\<FF> :\n  smc_0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n\ngoal (1 subgoal):\n 1. \\<FF> :\n    smc_0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "."], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<FF>.\n       \\<FF> :\n       smc_0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA> \\<Longrightarrow>\n       \\<FF> = smcf_0 \\<AA>", "show \"\\<FF> = smcf_0 \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> = smcf_0 \\<AA>", "proof(rule smcf_eqI)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<FF> :\n    ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<BB>\n 2. smcf_0 \\<AA> :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<DD>\n 3. \\<FF>\\<lparr>ObjMap\\<rparr> = smcf_0 \\<AA>\\<lparr>ObjMap\\<rparr>\n 4. \\<FF>\\<lparr>ArrMap\\<rparr> = smcf_0 \\<AA>\\<lparr>ArrMap\\<rparr>\n 5. ?\\<AA> = ?\\<CC>\n 6. ?\\<BB> = ?\\<DD>", "show \"\\<FF> : smc_0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    smc_0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "by (auto simp: smc_cs_intros)"], ["proof (state)\nthis:\n  \\<FF> :\n  smc_0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n\ngoal (5 subgoals):\n 1. smcf_0 \\<AA> :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<DD>\n 2. \\<FF>\\<lparr>ObjMap\\<rparr> = smcf_0 \\<AA>\\<lparr>ObjMap\\<rparr>\n 3. \\<FF>\\<lparr>ArrMap\\<rparr> = smcf_0 \\<AA>\\<lparr>ArrMap\\<rparr>\n 4. smc_0 = ?\\<CC>\n 5. \\<AA> = ?\\<DD>", "from smcf_0"], ["proof (chain)\npicking this:\n  smcf_0 \\<AA> :\n  smc_0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "show \"smcf_0 \\<AA> : smc_0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\""], ["proof (prove)\nusing this:\n  smcf_0 \\<AA> :\n  smc_0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n\ngoal (1 subgoal):\n 1. smcf_0 \\<AA> :\n    smc_0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "unfolding smc_SemiCAT_is_arr_iff"], ["proof (prove)\nusing this:\n  smcf_0 \\<AA> :\n  smc_0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n\ngoal (1 subgoal):\n 1. smcf_0 \\<AA> :\n    smc_0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "by simp"], ["proof (state)\nthis:\n  smcf_0 \\<AA> :\n  smc_0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n\ngoal (4 subgoals):\n 1. \\<FF>\\<lparr>ObjMap\\<rparr> = smcf_0 \\<AA>\\<lparr>ObjMap\\<rparr>\n 2. \\<FF>\\<lparr>ArrMap\\<rparr> = smcf_0 \\<AA>\\<lparr>ArrMap\\<rparr>\n 3. smc_0 = smc_0\n 4. \\<AA> = \\<AA>", "have \"\\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = []\\<^sub>\\<circ>", "by (auto simp: smc_0_components smc_cs_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = []\\<^sub>\\<circ>\n\ngoal (4 subgoals):\n 1. \\<FF>\\<lparr>ObjMap\\<rparr> = smcf_0 \\<AA>\\<lparr>ObjMap\\<rparr>\n 2. \\<FF>\\<lparr>ArrMap\\<rparr> = smcf_0 \\<AA>\\<lparr>ArrMap\\<rparr>\n 3. smc_0 = smc_0\n 4. \\<AA> = \\<AA>", "with \\<FF>.ObjMap.vdomain_vrange_is_vempty"], ["proof (chain)\npicking this:\n  (\\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = []\\<^sub>\\<circ>) =\n  (\\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = []\\<^sub>\\<circ>)\n  \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = []\\<^sub>\\<circ>", "show \"\\<FF>\\<lparr>ObjMap\\<rparr> = smcf_0 \\<AA>\\<lparr>ObjMap\\<rparr>\""], ["proof (prove)\nusing this:\n  (\\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = []\\<^sub>\\<circ>) =\n  (\\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = []\\<^sub>\\<circ>)\n  \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<FF>\\<lparr>ObjMap\\<rparr> = smcf_0 \\<AA>\\<lparr>ObjMap\\<rparr>", "unfolding smcf_0_components"], ["proof (prove)\nusing this:\n  (\\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = []\\<^sub>\\<circ>) =\n  (\\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = []\\<^sub>\\<circ>)\n  \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<FF>\\<lparr>ObjMap\\<rparr> = []\\<^sub>\\<circ>", "by (auto intro: \\<FF>.ObjMap.vsv_vrange_vempty)"], ["proof (state)\nthis:\n  \\<FF>\\<lparr>ObjMap\\<rparr> = smcf_0 \\<AA>\\<lparr>ObjMap\\<rparr>\n\ngoal (3 subgoals):\n 1. \\<FF>\\<lparr>ArrMap\\<rparr> = smcf_0 \\<AA>\\<lparr>ArrMap\\<rparr>\n 2. smc_0 = smc_0\n 3. \\<AA> = \\<AA>", "have \"\\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) = []\\<^sub>\\<circ>", "by (auto simp: smc_0_components smc_cs_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) = []\\<^sub>\\<circ>\n\ngoal (3 subgoals):\n 1. \\<FF>\\<lparr>ArrMap\\<rparr> = smcf_0 \\<AA>\\<lparr>ArrMap\\<rparr>\n 2. smc_0 = smc_0\n 3. \\<AA> = \\<AA>", "with \\<FF>.ArrMap.vdomain_vrange_is_vempty"], ["proof (chain)\npicking this:\n  (\\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) = []\\<^sub>\\<circ>) =\n  (\\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) = []\\<^sub>\\<circ>)\n  \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) = []\\<^sub>\\<circ>", "show \"\\<FF>\\<lparr>ArrMap\\<rparr> = smcf_0 \\<AA>\\<lparr>ArrMap\\<rparr>\""], ["proof (prove)\nusing this:\n  (\\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) = []\\<^sub>\\<circ>) =\n  (\\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) = []\\<^sub>\\<circ>)\n  \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<FF>\\<lparr>ArrMap\\<rparr> = smcf_0 \\<AA>\\<lparr>ArrMap\\<rparr>", "unfolding smcf_0_components"], ["proof (prove)\nusing this:\n  (\\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) = []\\<^sub>\\<circ>) =\n  (\\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) = []\\<^sub>\\<circ>)\n  \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<FF>\\<lparr>ArrMap\\<rparr> = []\\<^sub>\\<circ>", "by (auto intro: \\<FF>.ArrMap.vsv_vrange_vempty)"], ["proof (state)\nthis:\n  \\<FF>\\<lparr>ArrMap\\<rparr> = smcf_0 \\<AA>\\<lparr>ArrMap\\<rparr>\n\ngoal (2 subgoals):\n 1. smc_0 = smc_0\n 2. \\<AA> = \\<AA>", "qed (simp_all add: smcf_0_components)"], ["proof (state)\nthis:\n  \\<FF> = smcf_0 \\<AA>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>!\\<FF>.\n     \\<FF> :\n     smc_0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in \\<Z>) smc_SemiCAT_obj_initialD:\n  assumes \"obj_initial (smc_SemiCAT \\<alpha>) \\<AA>\"\n  shows \"\\<AA> = smc_0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> = smc_0", "using assms"], ["proof (prove)\nusing this:\n  obj_initial (smc_SemiCAT \\<alpha>) \\<AA>\n\ngoal (1 subgoal):\n 1. \\<AA> = smc_0", "unfolding obj_initial_def"], ["proof (prove)\nusing this:\n  obj_terminal (op_smc (smc_SemiCAT \\<alpha>)) \\<AA>\n\ngoal (1 subgoal):\n 1. \\<AA> = smc_0", "proof\n  (\n    elim obj_terminalE,\n    unfold smc_op_simps smc_SemiCAT_is_arr_iff smc_SemiCAT_Obj_iff\n  )"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>semicategory \\<alpha> \\<AA>;\n     \\<And>a.\n        semicategory \\<alpha> a \\<Longrightarrow>\n        Ex1 (is_semifunctor \\<alpha> \\<AA> a);\n     obj_initial (smc_SemiCAT \\<alpha>) \\<AA>\\<rbrakk>\n    \\<Longrightarrow> \\<AA> = smc_0", "assume prems: \n    \"semicategory \\<alpha> \\<AA>\" \n    \"semicategory \\<alpha> \\<BB> \\<Longrightarrow> \\<exists>!\\<FF>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n    for \\<BB>"], ["proof (state)\nthis:\n  semicategory \\<alpha> \\<AA>\n  semicategory \\<alpha> ?\\<BB> \\<Longrightarrow>\n  \\<exists>!\\<FF>.\n     \\<FF> :\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<BB>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>semicategory \\<alpha> \\<AA>;\n     \\<And>a.\n        semicategory \\<alpha> a \\<Longrightarrow>\n        Ex1 (is_semifunctor \\<alpha> \\<AA> a);\n     obj_initial (smc_SemiCAT \\<alpha>) \\<AA>\\<rbrakk>\n    \\<Longrightarrow> \\<AA> = smc_0", "from prems(2)[OF semicategory_smc_0]"], ["proof (chain)\npicking this:\n  \\<exists>!\\<FF>.\n     \\<FF> :\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_0", "obtain \\<FF> where \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_0\""], ["proof (prove)\nusing this:\n  \\<exists>!\\<FF>.\n     \\<FF> :\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_0\n\ngoal (1 subgoal):\n 1. (\\<And>\\<FF>.\n        \\<FF> :\n        \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_0 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by meson"], ["proof (state)\nthis:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>semicategory \\<alpha> \\<AA>;\n     \\<And>a.\n        semicategory \\<alpha> a \\<Longrightarrow>\n        Ex1 (is_semifunctor \\<alpha> \\<AA> a);\n     obj_initial (smc_SemiCAT \\<alpha>) \\<AA>\\<rbrakk>\n    \\<Longrightarrow> \\<AA> = smc_0", "then"], ["proof (chain)\npicking this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_0", "interpret \\<FF>: is_semifunctor \\<alpha> \\<AA> smc_0 \\<FF>"], ["proof (prove)\nusing this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_0\n\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_0", "."], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>semicategory \\<alpha> \\<AA>;\n     \\<And>a.\n        semicategory \\<alpha> a \\<Longrightarrow>\n        Ex1 (is_semifunctor \\<alpha> \\<AA> a);\n     obj_initial (smc_SemiCAT \\<alpha>) \\<AA>\\<rbrakk>\n    \\<Longrightarrow> \\<AA> = smc_0", "have \"\\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> []\\<^sub>\\<circ>", "unfolding smc_0_components(1)[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> smc_0\\<lparr>Obj\\<rparr>", "by (simp add: \\<FF>.smcf_ObjMap_vrange)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>semicategory \\<alpha> \\<AA>;\n     \\<And>a.\n        semicategory \\<alpha> a \\<Longrightarrow>\n        Ex1 (is_semifunctor \\<alpha> \\<AA> a);\n     obj_initial (smc_SemiCAT \\<alpha>) \\<AA>\\<rbrakk>\n    \\<Longrightarrow> \\<AA> = smc_0", "then"], ["proof (chain)\npicking this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> []\\<^sub>\\<circ>", "have \"\\<FF>\\<lparr>ObjMap\\<rparr> = 0\""], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<FF>\\<lparr>ObjMap\\<rparr> = []\\<^sub>\\<circ>", "by (auto intro: \\<FF>.ObjMap.vsv_vrange_vempty)"], ["proof (state)\nthis:\n  \\<FF>\\<lparr>ObjMap\\<rparr> = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>semicategory \\<alpha> \\<AA>;\n     \\<And>a.\n        semicategory \\<alpha> a \\<Longrightarrow>\n        Ex1 (is_semifunctor \\<alpha> \\<AA> a);\n     obj_initial (smc_SemiCAT \\<alpha>) \\<AA>\\<rbrakk>\n    \\<Longrightarrow> \\<AA> = smc_0", "with \\<FF>.smcf_ObjMap_vdomain"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) =\n  \\<AA>\\<lparr>Obj\\<rparr>\n  \\<FF>\\<lparr>ObjMap\\<rparr> = []\\<^sub>\\<circ>", "have Obj[simp]: \"\\<AA>\\<lparr>Obj\\<rparr> = 0\""], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) =\n  \\<AA>\\<lparr>Obj\\<rparr>\n  \\<FF>\\<lparr>ObjMap\\<rparr> = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Obj\\<rparr> = []\\<^sub>\\<circ>", "by auto"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Obj\\<rparr> = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>semicategory \\<alpha> \\<AA>;\n     \\<And>a.\n        semicategory \\<alpha> a \\<Longrightarrow>\n        Ex1 (is_semifunctor \\<alpha> \\<AA> a);\n     obj_initial (smc_SemiCAT \\<alpha>) \\<AA>\\<rbrakk>\n    \\<Longrightarrow> \\<AA> = smc_0", "have \"\\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> []\\<^sub>\\<circ>", "unfolding smc_0_components(2)[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> smc_0\\<lparr>Arr\\<rparr>", "by (simp add: \\<FF>.smcf_ArrMap_vrange)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>semicategory \\<alpha> \\<AA>;\n     \\<And>a.\n        semicategory \\<alpha> a \\<Longrightarrow>\n        Ex1 (is_semifunctor \\<alpha> \\<AA> a);\n     obj_initial (smc_SemiCAT \\<alpha>) \\<AA>\\<rbrakk>\n    \\<Longrightarrow> \\<AA> = smc_0", "then"], ["proof (chain)\npicking this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> []\\<^sub>\\<circ>", "have \"\\<FF>\\<lparr>ArrMap\\<rparr> = 0\""], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<FF>\\<lparr>ArrMap\\<rparr> = []\\<^sub>\\<circ>", "by (auto intro: \\<FF>.ArrMap.vsv_vrange_vempty)"], ["proof (state)\nthis:\n  \\<FF>\\<lparr>ArrMap\\<rparr> = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>semicategory \\<alpha> \\<AA>;\n     \\<And>a.\n        semicategory \\<alpha> a \\<Longrightarrow>\n        Ex1 (is_semifunctor \\<alpha> \\<AA> a);\n     obj_initial (smc_SemiCAT \\<alpha>) \\<AA>\\<rbrakk>\n    \\<Longrightarrow> \\<AA> = smc_0", "with \\<FF>.smcf_ArrMap_vdomain"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) =\n  \\<AA>\\<lparr>Arr\\<rparr>\n  \\<FF>\\<lparr>ArrMap\\<rparr> = []\\<^sub>\\<circ>", "have Arr[simp]: \"\\<AA>\\<lparr>Arr\\<rparr> = 0\""], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) =\n  \\<AA>\\<lparr>Arr\\<rparr>\n  \\<FF>\\<lparr>ArrMap\\<rparr> = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Arr\\<rparr> = []\\<^sub>\\<circ>", "by auto"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Arr\\<rparr> = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>semicategory \\<alpha> \\<AA>;\n     \\<And>a.\n        semicategory \\<alpha> a \\<Longrightarrow>\n        Ex1 (is_semifunctor \\<alpha> \\<AA> a);\n     obj_initial (smc_SemiCAT \\<alpha>) \\<AA>\\<rbrakk>\n    \\<Longrightarrow> \\<AA> = smc_0", "from \\<FF>.HomDom.Dom.vdomain_vrange_is_vempty"], ["proof (chain)\npicking this:\n  (\\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Dom\\<rparr>) = []\\<^sub>\\<circ>) =\n  (\\<R>\\<^sub>\\<circ> (\\<AA>\\<lparr>Dom\\<rparr>) = []\\<^sub>\\<circ>)", "have [simp]: \"\\<AA>\\<lparr>Dom\\<rparr> = 0\""], ["proof (prove)\nusing this:\n  (\\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Dom\\<rparr>) = []\\<^sub>\\<circ>) =\n  (\\<R>\\<^sub>\\<circ> (\\<AA>\\<lparr>Dom\\<rparr>) = []\\<^sub>\\<circ>)\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Dom\\<rparr> = []\\<^sub>\\<circ>", "by (auto simp: smc_cs_simps intro: \\<FF>.HomDom.Dom.vsv_vrange_vempty)"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Dom\\<rparr> = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>semicategory \\<alpha> \\<AA>;\n     \\<And>a.\n        semicategory \\<alpha> a \\<Longrightarrow>\n        Ex1 (is_semifunctor \\<alpha> \\<AA> a);\n     obj_initial (smc_SemiCAT \\<alpha>) \\<AA>\\<rbrakk>\n    \\<Longrightarrow> \\<AA> = smc_0", "from \\<FF>.HomDom.Cod.vdomain_vrange_is_vempty"], ["proof (chain)\npicking this:\n  (\\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Cod\\<rparr>) = []\\<^sub>\\<circ>) =\n  (\\<R>\\<^sub>\\<circ> (\\<AA>\\<lparr>Cod\\<rparr>) = []\\<^sub>\\<circ>)", "have [simp]: \"\\<AA>\\<lparr>Cod\\<rparr> = 0\""], ["proof (prove)\nusing this:\n  (\\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Cod\\<rparr>) = []\\<^sub>\\<circ>) =\n  (\\<R>\\<^sub>\\<circ> (\\<AA>\\<lparr>Cod\\<rparr>) = []\\<^sub>\\<circ>)\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Cod\\<rparr> = []\\<^sub>\\<circ>", "by (auto simp: smc_cs_simps intro: \\<FF>.HomDom.Cod.vsv_vrange_vempty)"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Cod\\<rparr> = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>semicategory \\<alpha> \\<AA>;\n     \\<And>a.\n        semicategory \\<alpha> a \\<Longrightarrow>\n        Ex1 (is_semifunctor \\<alpha> \\<AA> a);\n     obj_initial (smc_SemiCAT \\<alpha>) \\<AA>\\<rbrakk>\n    \\<Longrightarrow> \\<AA> = smc_0", "from Arr"], ["proof (chain)\npicking this:\n  \\<AA>\\<lparr>Arr\\<rparr> = []\\<^sub>\\<circ>", "have \"\\<AA>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times> 2\\<^sub>\\<nat> = 0\""], ["proof (prove)\nusing this:\n  \\<AA>\\<lparr>Arr\\<rparr> = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times> 2\\<^sub>\\<nat> =\n    []\\<^sub>\\<circ>", "by (simp add: vcpower_of_vempty)"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times> 2\\<^sub>\\<nat> =\n  []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>semicategory \\<alpha> \\<AA>;\n     \\<And>a.\n        semicategory \\<alpha> a \\<Longrightarrow>\n        Ex1 (is_semifunctor \\<alpha> \\<AA> a);\n     obj_initial (smc_SemiCAT \\<alpha>) \\<AA>\\<rbrakk>\n    \\<Longrightarrow> \\<AA> = smc_0", "with \\<FF>.HomDom.Comp.pnop_vdomain"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<AA>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times>\n                            2\\<^sub>\\<nat>\n  \\<AA>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times> 2\\<^sub>\\<nat> =\n  []\\<^sub>\\<circ>", "have \"\\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>) = 0\""], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<AA>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times>\n                            2\\<^sub>\\<nat>\n  \\<AA>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times> 2\\<^sub>\\<nat> =\n  []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>) = []\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>) = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>semicategory \\<alpha> \\<AA>;\n     \\<And>a.\n        semicategory \\<alpha> a \\<Longrightarrow>\n        Ex1 (is_semifunctor \\<alpha> \\<AA> a);\n     obj_initial (smc_SemiCAT \\<alpha>) \\<AA>\\<rbrakk>\n    \\<Longrightarrow> \\<AA> = smc_0", "with \\<FF>.HomDom.Comp.vdomain_vrange_is_vempty"], ["proof (chain)\npicking this:\n  (\\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>) = []\\<^sub>\\<circ>) =\n  (\\<R>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>) = []\\<^sub>\\<circ>)\n  \\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>) = []\\<^sub>\\<circ>", "have [simp]: \"\\<AA>\\<lparr>Comp\\<rparr> = 0\""], ["proof (prove)\nusing this:\n  (\\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>) = []\\<^sub>\\<circ>) =\n  (\\<R>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>) = []\\<^sub>\\<circ>)\n  \\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>) = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Comp\\<rparr> = []\\<^sub>\\<circ>", "by (auto intro: \\<FF>.HomDom.Comp.vsv_vrange_vempty)"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Comp\\<rparr> = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>semicategory \\<alpha> \\<AA>;\n     \\<And>a.\n        semicategory \\<alpha> a \\<Longrightarrow>\n        Ex1 (is_semifunctor \\<alpha> \\<AA> a);\n     obj_initial (smc_SemiCAT \\<alpha>) \\<AA>\\<rbrakk>\n    \\<Longrightarrow> \\<AA> = smc_0", "show \"\\<AA> = smc_0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> = smc_0", "by (rule smc_eqI[of \\<alpha>])\n      (simp_all add: prems(1) smc_0_components semicategory_smc_0)"], ["proof (state)\nthis:\n  \\<AA> = smc_0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in \\<Z>) smc_SemiCAT_obj_initialE:\n  assumes \"obj_initial (smc_SemiCAT \\<alpha>) \\<AA>\"\n  obtains \"\\<AA> = smc_0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<AA> = smc_0 \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using assms"], ["proof (prove)\nusing this:\n  obj_initial (smc_SemiCAT \\<alpha>) \\<AA>\n\ngoal (1 subgoal):\n 1. (\\<AA> = smc_0 \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (auto dest: smc_SemiCAT_obj_initialD)"], ["", "lemma (in \\<Z>) smc_SemiCAT_obj_initial_iff[smc_SemiCAT_simps]:\n  \"obj_initial (smc_SemiCAT \\<alpha>) \\<AA> \\<longleftrightarrow> \\<AA> = smc_0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. obj_initial (smc_SemiCAT \\<alpha>) \\<AA> = (\\<AA> = smc_0)", "using smc_SemiCAT_obj_initialI smc_SemiCAT_obj_initialD"], ["proof (prove)\nusing this:\n  obj_initial (smc_SemiCAT \\<alpha>) smc_0\n  obj_initial (smc_SemiCAT \\<alpha>) ?\\<AA> \\<Longrightarrow> ?\\<AA> = smc_0\n\ngoal (1 subgoal):\n 1. obj_initial (smc_SemiCAT \\<alpha>) \\<AA> = (\\<AA> = smc_0)", "by auto"], ["", "subsection\\<open>Terminal object\\<close>"], ["", "lemma (in \\<Z>) smc_SemiCAT_obj_terminalI[smc_SemiCAT_intros]: \n  assumes \"a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" and \"f \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"obj_terminal (smc_SemiCAT \\<alpha>) (smc_1 a f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. obj_terminal (smc_SemiCAT \\<alpha>) (smc_1 a f)", "proof\n  (\n    intro obj_terminalI,\n    unfold smc_op_simps smc_SemiCAT_is_arr_iff smc_SemiCAT_Obj_iff\n  )"], ["proof (state)\ngoal (2 subgoals):\n 1. semicategory \\<alpha> (smc_1 a f)\n 2. \\<And>aa.\n       semicategory \\<alpha> aa \\<Longrightarrow>\n       \\<exists>!\\<FF>.\n          \\<FF> :\n          aa \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_1\n     a f", "fix \\<AA>"], ["proof (state)\ngoal (2 subgoals):\n 1. semicategory \\<alpha> (smc_1 a f)\n 2. \\<And>aa.\n       semicategory \\<alpha> aa \\<Longrightarrow>\n       \\<exists>!\\<FF>.\n          \\<FF> :\n          aa \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_1\n     a f", "assume \"semicategory \\<alpha> \\<AA>\""], ["proof (state)\nthis:\n  semicategory \\<alpha> \\<AA>\n\ngoal (2 subgoals):\n 1. semicategory \\<alpha> (smc_1 a f)\n 2. \\<And>aa.\n       semicategory \\<alpha> aa \\<Longrightarrow>\n       \\<exists>!\\<FF>.\n          \\<FF> :\n          aa \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_1\n     a f", "then"], ["proof (chain)\npicking this:\n  semicategory \\<alpha> \\<AA>", "interpret semicategory \\<alpha> \\<AA>"], ["proof (prove)\nusing this:\n  semicategory \\<alpha> \\<AA>\n\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<AA>", "."], ["proof (state)\ngoal (2 subgoals):\n 1. semicategory \\<alpha> (smc_1 a f)\n 2. \\<And>aa.\n       semicategory \\<alpha> aa \\<Longrightarrow>\n       \\<exists>!\\<FF>.\n          \\<FF> :\n          aa \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_1\n     a f", "show \"\\<exists>!\\<FF>'. \\<FF>' : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_1 a f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!\\<FF>'.\n       \\<FF>' :\n       \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_1\n     a f", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. ?a :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_1\n  a f\n 2. \\<And>\\<FF>'.\n       \\<FF>' :\n       \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_1\n     a f \\<Longrightarrow>\n       \\<FF>' = ?a", "show smcf_1: \"smcf_const \\<AA> (smc_1 a f) a f : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_1 a f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_const \\<AA> (smc_1 a f) a f :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_1\n  a f", "by \n        (\n          auto \n            intro: smc_cs_intros smc_1_is_arrI smcf_const_is_semifunctor\n            simp: assms semicategory_smc_1\n        )"], ["proof (state)\nthis:\n  dghm_const \\<AA> (smc_1 a f) a f :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_1\na f\n\ngoal (1 subgoal):\n 1. \\<And>\\<FF>'.\n       \\<FF>' :\n       \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_1\n     a f \\<Longrightarrow>\n       \\<FF>' = dghm_const \\<AA> (smc_1 a f) a f", "fix \\<FF>'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<FF>'.\n       \\<FF>' :\n       \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_1\n     a f \\<Longrightarrow>\n       \\<FF>' = dghm_const \\<AA> (smc_1 a f) a f", "assume \"\\<FF>' : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_1 a f\""], ["proof (state)\nthis:\n  \\<FF>' :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_1\na f\n\ngoal (1 subgoal):\n 1. \\<And>\\<FF>'.\n       \\<FF>' :\n       \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_1\n     a f \\<Longrightarrow>\n       \\<FF>' = dghm_const \\<AA> (smc_1 a f) a f", "then"], ["proof (chain)\npicking this:\n  \\<FF>' :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_1\na f", "interpret \\<FF>': is_semifunctor \\<alpha> \\<AA> \\<open>smc_1 a f\\<close> \\<FF>'"], ["proof (prove)\nusing this:\n  \\<FF>' :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_1\na f\n\ngoal (1 subgoal):\n 1. \\<FF>' :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_1\n  a f", "."], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<FF>'.\n       \\<FF>' :\n       \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_1\n     a f \\<Longrightarrow>\n       \\<FF>' = dghm_const \\<AA> (smc_1 a f) a f", "show \"\\<FF>' = smcf_const \\<AA> (smc_1 a f) a f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF>' = dghm_const \\<AA> (smc_1 a f) a f", "proof(rule smcf_eqI, unfold dghm_const_components)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<FF>' :\n    ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<BB>\n 2. dghm_const \\<AA> (smc_1 a f) a f :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<DD>\n 3. \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a\n 4. \\<FF>'\\<lparr>ArrMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Arr\\<rparr>) f\n 5. ?\\<AA> = ?\\<CC>\n 6. ?\\<BB> = ?\\<DD>", "show \"smcf_const \\<AA> (smc_1 a f) a f : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_1 a f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_const \\<AA> (smc_1 a f) a f :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_1\n  a f", "by (rule smcf_1)"], ["proof (state)\nthis:\n  dghm_const \\<AA> (smc_1 a f) a f :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_1\na f\n\ngoal (5 subgoals):\n 1. \\<FF>' :\n    ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<BB>\n 2. \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a\n 3. \\<FF>'\\<lparr>ArrMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Arr\\<rparr>) f\n 4. ?\\<AA> = \\<AA>\n 5. ?\\<BB> = smc_1 a f", "show \"\\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a", "proof(cases\\<open>\\<AA>\\<lparr>Obj\\<rparr> = 0\\<close>)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<AA>\\<lparr>Obj\\<rparr> = []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a\n 2. \\<AA>\\<lparr>Obj\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a", "case True"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Obj\\<rparr> = []\\<^sub>\\<circ>\n\ngoal (2 subgoals):\n 1. \\<AA>\\<lparr>Obj\\<rparr> = []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a\n 2. \\<AA>\\<lparr>Obj\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a", "with \\<FF>'.ObjMap.vbrelation_vintersection_vdomain"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>) \\<inter>\\<^sub>\\<circ>\n  \\<D>\\<^sub>\\<circ> ?s =\n  []\\<^sub>\\<circ> \\<Longrightarrow>\n  \\<FF>'\\<lparr>ObjMap\\<rparr> \\<inter>\\<^sub>\\<circ> ?s = []\\<^sub>\\<circ>\n  \\<AA>\\<lparr>Obj\\<rparr> = []\\<^sub>\\<circ>", "have \"\\<FF>'\\<lparr>ObjMap\\<rparr> = 0\""], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>) \\<inter>\\<^sub>\\<circ>\n  \\<D>\\<^sub>\\<circ> ?s =\n  []\\<^sub>\\<circ> \\<Longrightarrow>\n  \\<FF>'\\<lparr>ObjMap\\<rparr> \\<inter>\\<^sub>\\<circ> ?s = []\\<^sub>\\<circ>\n  \\<AA>\\<lparr>Obj\\<rparr> = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<FF>'\\<lparr>ObjMap\\<rparr> = []\\<^sub>\\<circ>", "by (auto simp: smc_cs_simps)"], ["proof (state)\nthis:\n  \\<FF>'\\<lparr>ObjMap\\<rparr> = []\\<^sub>\\<circ>\n\ngoal (2 subgoals):\n 1. \\<AA>\\<lparr>Obj\\<rparr> = []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a\n 2. \\<AA>\\<lparr>Obj\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a", "with True"], ["proof (chain)\npicking this:\n  \\<AA>\\<lparr>Obj\\<rparr> = []\\<^sub>\\<circ>\n  \\<FF>'\\<lparr>ObjMap\\<rparr> = []\\<^sub>\\<circ>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<AA>\\<lparr>Obj\\<rparr> = []\\<^sub>\\<circ>\n  \\<FF>'\\<lparr>ObjMap\\<rparr> = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a", "by simp"], ["proof (state)\nthis:\n  \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Obj\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Obj\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a", "case False"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Obj\\<rparr> \\<noteq> []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Obj\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a", "then"], ["proof (chain)\npicking this:\n  \\<AA>\\<lparr>Obj\\<rparr> \\<noteq> []\\<^sub>\\<circ>", "have \"\\<D>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<AA>\\<lparr>Obj\\<rparr> \\<noteq> []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>) \\<noteq>\n    []\\<^sub>\\<circ>", "by (auto simp: smc_cs_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>) \\<noteq>\n  []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Obj\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a", "then"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>) \\<noteq>\n  []\\<^sub>\\<circ>", "have \"\\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>) \\<noteq>\n  []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>) \\<noteq>\n    []\\<^sub>\\<circ>", "by (simp add: \\<FF>'.ObjMap.vsv_vdomain_vempty_vrange_vempty)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>) \\<noteq>\n  []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Obj\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a", "moreover"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>) \\<noteq>\n  []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Obj\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a", "from \\<FF>'.smcf_ObjMap_vrange"], ["proof (chain)\npicking this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> smc_1 a f\\<lparr>Obj\\<rparr>", "have \"\\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> set {a}\""], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> smc_1 a f\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {a}", "by (simp add: smc_1_components)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {a}\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Obj\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a", "ultimately"], ["proof (chain)\npicking this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>) \\<noteq>\n  []\\<^sub>\\<circ>\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {a}", "have \"\\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>) = set {a}\""], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>) \\<noteq>\n  []\\<^sub>\\<circ>\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {a}\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>) = ZFC_in_HOL.set {a}", "by auto"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>) = ZFC_in_HOL.set {a}\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Obj\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a", "then"], ["proof (chain)\npicking this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>) = ZFC_in_HOL.set {a}", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>) = ZFC_in_HOL.set {a}\n\ngoal (1 subgoal):\n 1. \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a", "by (intro vsv.vsv_is_vconst_onI) (auto simp: smc_cs_simps)"], ["proof (state)\nthis:\n  \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a\n\ngoal (4 subgoals):\n 1. \\<FF>' :\n    ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<BB>\n 2. \\<FF>'\\<lparr>ArrMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Arr\\<rparr>) f\n 3. ?\\<AA> = \\<AA>\n 4. ?\\<BB> = smc_1 a f", "show \"\\<FF>'\\<lparr>ArrMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Arr\\<rparr>) f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF>'\\<lparr>ArrMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Arr\\<rparr>) f", "proof(cases\\<open>\\<AA>\\<lparr>Arr\\<rparr> = 0\\<close>)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<AA>\\<lparr>Arr\\<rparr> = []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ArrMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Arr\\<rparr>) f\n 2. \\<AA>\\<lparr>Arr\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ArrMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Arr\\<rparr>) f", "case True"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Arr\\<rparr> = []\\<^sub>\\<circ>\n\ngoal (2 subgoals):\n 1. \\<AA>\\<lparr>Arr\\<rparr> = []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ArrMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Arr\\<rparr>) f\n 2. \\<AA>\\<lparr>Arr\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ArrMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Arr\\<rparr>) f", "with \\<FF>'.ArrMap.vdomain_vrange_is_vempty"], ["proof (chain)\npicking this:\n  (\\<D>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) = []\\<^sub>\\<circ>) =\n  (\\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) = []\\<^sub>\\<circ>)\n  \\<AA>\\<lparr>Arr\\<rparr> = []\\<^sub>\\<circ>", "have \"\\<FF>'\\<lparr>ArrMap\\<rparr> = 0\""], ["proof (prove)\nusing this:\n  (\\<D>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) = []\\<^sub>\\<circ>) =\n  (\\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) = []\\<^sub>\\<circ>)\n  \\<AA>\\<lparr>Arr\\<rparr> = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<FF>'\\<lparr>ArrMap\\<rparr> = []\\<^sub>\\<circ>", "by (simp add: smc_cs_simps \\<FF>'.smcf_ArrMap_vsv vsv.vsv_vrange_vempty)"], ["proof (state)\nthis:\n  \\<FF>'\\<lparr>ArrMap\\<rparr> = []\\<^sub>\\<circ>\n\ngoal (2 subgoals):\n 1. \\<AA>\\<lparr>Arr\\<rparr> = []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ArrMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Arr\\<rparr>) f\n 2. \\<AA>\\<lparr>Arr\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ArrMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Arr\\<rparr>) f", "with True"], ["proof (chain)\npicking this:\n  \\<AA>\\<lparr>Arr\\<rparr> = []\\<^sub>\\<circ>\n  \\<FF>'\\<lparr>ArrMap\\<rparr> = []\\<^sub>\\<circ>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<AA>\\<lparr>Arr\\<rparr> = []\\<^sub>\\<circ>\n  \\<FF>'\\<lparr>ArrMap\\<rparr> = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<FF>'\\<lparr>ArrMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Arr\\<rparr>) f", "by simp"], ["proof (state)\nthis:\n  \\<FF>'\\<lparr>ArrMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Arr\\<rparr>) f\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Arr\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ArrMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Arr\\<rparr>) f", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Arr\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ArrMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Arr\\<rparr>) f", "case False"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Arr\\<rparr> \\<noteq> []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Arr\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ArrMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Arr\\<rparr>) f", "then"], ["proof (chain)\npicking this:\n  \\<AA>\\<lparr>Arr\\<rparr> \\<noteq> []\\<^sub>\\<circ>", "have \"\\<D>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<AA>\\<lparr>Arr\\<rparr> \\<noteq> []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) \\<noteq>\n    []\\<^sub>\\<circ>", "by (auto simp: smc_cs_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) \\<noteq>\n  []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Arr\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ArrMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Arr\\<rparr>) f", "then"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) \\<noteq>\n  []\\<^sub>\\<circ>", "have \"\\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) \\<noteq>\n  []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) \\<noteq>\n    []\\<^sub>\\<circ>", "by (simp add: \\<FF>'.ArrMap.vsv_vdomain_vempty_vrange_vempty)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) \\<noteq>\n  []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Arr\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ArrMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Arr\\<rparr>) f", "moreover"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) \\<noteq>\n  []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Arr\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ArrMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Arr\\<rparr>) f", "from \\<FF>'.smcf_ArrMap_vrange"], ["proof (chain)\npicking this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> smc_1 a f\\<lparr>Arr\\<rparr>", "have \"\\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> set {f}\""], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> smc_1 a f\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {f}", "by (simp add: smc_1_components)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {f}\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Arr\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ArrMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Arr\\<rparr>) f", "ultimately"], ["proof (chain)\npicking this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) \\<noteq>\n  []\\<^sub>\\<circ>\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {f}", "have \"\\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) = set {f}\""], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) \\<noteq>\n  []\\<^sub>\\<circ>\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {f}\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) = ZFC_in_HOL.set {f}", "by auto"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) = ZFC_in_HOL.set {f}\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Arr\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ArrMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Arr\\<rparr>) f", "then"], ["proof (chain)\npicking this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) = ZFC_in_HOL.set {f}", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) = ZFC_in_HOL.set {f}\n\ngoal (1 subgoal):\n 1. \\<FF>'\\<lparr>ArrMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Arr\\<rparr>) f", "by (intro vsv.vsv_is_vconst_onI) (auto simp: smc_cs_simps)"], ["proof (state)\nthis:\n  \\<FF>'\\<lparr>ArrMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Arr\\<rparr>) f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<FF>'\\<lparr>ArrMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Arr\\<rparr>) f\n\ngoal (3 subgoals):\n 1. \\<FF>' :\n    ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<BB>\n 2. ?\\<AA> = \\<AA>\n 3. ?\\<BB> = smc_1 a f", "qed (auto intro: smc_cs_intros)"], ["proof (state)\nthis:\n  \\<FF>' = dghm_const \\<AA> (smc_1 a f) a f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>!\\<FF>'.\n     \\<FF>' :\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_1\n   a f\n\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (smc_1 a f)", "qed (simp add: assms semicategory_smc_1)"], ["", "lemma (in \\<Z>) smc_SemiCAT_obj_terminalE: \n  assumes \"obj_terminal (smc_SemiCAT \\<alpha>) \\<BB>\"\n  obtains a f where \"a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" and \"f \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" and \"\\<BB> = smc_1 a f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a f.\n        \\<lbrakk>a \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n         f \\<in>\\<^sub>\\<circ> Vset \\<alpha>; \\<BB> = smc_1 a f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  obj_terminal (smc_SemiCAT \\<alpha>) \\<BB>\n\ngoal (1 subgoal):\n 1. (\\<And>a f.\n        \\<lbrakk>a \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n         f \\<in>\\<^sub>\\<circ> Vset \\<alpha>; \\<BB> = smc_1 a f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof\n  (\n    elim obj_terminalE, \n    unfold smc_op_simps smc_SemiCAT_is_arr_iff smc_SemiCAT_Obj_iff\n  )"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a f.\n                \\<lbrakk>a \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n                 f \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n                 \\<BB> = smc_1 a f\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     semicategory \\<alpha> \\<BB>;\n     \\<And>a.\n        semicategory \\<alpha> a \\<Longrightarrow>\n        \\<exists>!\\<FF>.\n           \\<FF> :\n           a \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>;\n     obj_terminal (smc_SemiCAT \\<alpha>) \\<BB>\\<rbrakk>\n    \\<Longrightarrow> thesis", "assume prems: \n    \"semicategory \\<alpha> \\<BB>\" \n    \"semicategory \\<alpha> \\<AA> \\<Longrightarrow> \\<exists>!\\<FF>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n    for \\<AA>"], ["proof (state)\nthis:\n  semicategory \\<alpha> \\<BB>\n  semicategory \\<alpha> ?\\<AA> \\<Longrightarrow>\n  \\<exists>!\\<FF>.\n     \\<FF> :\n     ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a f.\n                \\<lbrakk>a \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n                 f \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n                 \\<BB> = smc_1 a f\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     semicategory \\<alpha> \\<BB>;\n     \\<And>a.\n        semicategory \\<alpha> a \\<Longrightarrow>\n        \\<exists>!\\<FF>.\n           \\<FF> :\n           a \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>;\n     obj_terminal (smc_SemiCAT \\<alpha>) \\<BB>\\<rbrakk>\n    \\<Longrightarrow> thesis", "interpret \\<BB>: semicategory \\<alpha> \\<BB>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<BB>", "by (rule prems(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a f.\n                \\<lbrakk>a \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n                 f \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n                 \\<BB> = smc_1 a f\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     semicategory \\<alpha> \\<BB>;\n     \\<And>a.\n        semicategory \\<alpha> a \\<Longrightarrow>\n        \\<exists>!\\<FF>.\n           \\<FF> :\n           a \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>;\n     obj_terminal (smc_SemiCAT \\<alpha>) \\<BB>\\<rbrakk>\n    \\<Longrightarrow> thesis", "obtain a where \\<BB>_Obj: \"\\<BB>\\<lparr>Obj\\<rparr> = set {a}\" and a: \"a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>\\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a};\n         a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>\\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a};\n         a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have semicategory_smc_10: \"semicategory \\<alpha> (smc_10 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (smc_10 []\\<^sub>\\<circ>)", "by (intro semicategory_smc_10) auto"], ["proof (state)\nthis:\n  semicategory \\<alpha> (smc_10 []\\<^sub>\\<circ>)\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>\\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a};\n         a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from prems(2)[OF semicategory_smc_10]"], ["proof (chain)\npicking this:\n  \\<exists>!\\<FF>.\n     \\<FF> :\n     smc_10\n      []\\<^sub>\\<circ> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "obtain \\<FF> \n      where \\<FF>: \"\\<FF> : smc_10 0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n        and \\<GG>\\<FF>: \"\\<GG> : smc_10 0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow> \\<GG> = \\<FF>\" for \\<GG>"], ["proof (prove)\nusing this:\n  \\<exists>!\\<FF>.\n     \\<FF> :\n     smc_10\n      []\\<^sub>\\<circ> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<FF>.\n        \\<lbrakk>\\<FF> :\n                 smc_10\n                  []\\<^sub>\\<circ> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>;\n         \\<And>\\<GG>.\n            \\<GG> :\n            smc_10\n             []\\<^sub>\\<circ> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n            \\<GG> = \\<FF>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  \\<FF> :\n  smc_10\n   []\\<^sub>\\<circ> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  ?\\<GG> :\n  smc_10\n   []\\<^sub>\\<circ> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n  ?\\<GG> = \\<FF>\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>\\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a};\n         a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "interpret \\<FF>: is_semifunctor \\<alpha> \\<open>smc_10 0\\<close> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    smc_10\n     []\\<^sub>\\<circ> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule \\<FF>)"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>\\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a};\n         a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = set {0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) =\n    ZFC_in_HOL.set {[]\\<^sub>\\<circ>}", "by (auto simp add: smc_10_components smc_cs_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) =\n  ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>\\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a};\n         a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) =\n  ZFC_in_HOL.set {[]\\<^sub>\\<circ>}", "obtain a where vrange_\\<FF>[simp]: \"\\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = set {a}\""], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) =\n  ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) =\n        ZFC_in_HOL.set {a} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto intro: \\<FF>.ObjMap.vsv_vdomain_vsingleton_vrange_vsingleton)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = ZFC_in_HOL.set {a}\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>\\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a};\n         a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with \\<BB>.smc_Obj_vsubset_Vset \\<FF>.smcf_ObjMap_vrange"], ["proof (chain)\npicking this:\n  \\<BB>\\<lparr>Obj\\<rparr> \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = ZFC_in_HOL.set {a}", "have [simp]: \"a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  \\<BB>\\<lparr>Obj\\<rparr> \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = ZFC_in_HOL.set {a}\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by auto"], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>\\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a};\n         a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from \\<FF>.smcf_ObjMap_vrange"], ["proof (chain)\npicking this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>", "have \"set {a} \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set {a} \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>", "by simp"], ["proof (state)\nthis:\n  ZFC_in_HOL.set {a} \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>\\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a};\n         a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  ZFC_in_HOL.set {a} \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>\\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a};\n         a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<BB>\\<lparr>Obj\\<rparr> \\<subseteq>\\<^sub>\\<circ> set {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>Obj\\<rparr> \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {a}", "proof(rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<BB>\\<lparr>Obj\\<rparr>\n           \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {a} \\<Longrightarrow>\n    False", "assume \"\\<not> \\<BB>\\<lparr>Obj\\<rparr> \\<subseteq>\\<^sub>\\<circ> set {a}\""], ["proof (state)\nthis:\n  \\<not> \\<BB>\\<lparr>Obj\\<rparr>\n         \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {a}\n\ngoal (1 subgoal):\n 1. \\<not> \\<BB>\\<lparr>Obj\\<rparr>\n           \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {a} \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<not> \\<BB>\\<lparr>Obj\\<rparr>\n         \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {a}", "obtain b where ba: \"b \\<noteq> a\" and b: \"b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<not> \\<BB>\\<lparr>Obj\\<rparr>\n         \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {a}\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>b \\<noteq> a;\n         b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  b \\<noteq> a\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<not> \\<BB>\\<lparr>Obj\\<rparr>\n           \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {a} \\<Longrightarrow>\n    False", "define \\<GG> where \"\\<GG> = [set {\\<langle>0, b\\<rangle>}, 0, smc_10 0, \\<BB>]\\<^sub>\\<circ>\""], ["proof (state)\nthis:\n  \\<GG> =\n  [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>}, []\\<^sub>\\<circ>,\n   smc_10 []\\<^sub>\\<circ>, \\<BB>]\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<not> \\<BB>\\<lparr>Obj\\<rparr>\n           \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {a} \\<Longrightarrow>\n    False", "have \\<GG>_components: \n        \"\\<GG>\\<lparr>ObjMap\\<rparr> = set {\\<langle>0, b\\<rangle>}\"\n        \"\\<GG>\\<lparr>ArrMap\\<rparr> = 0\"\n        \"\\<GG>\\<lparr>HomDom\\<rparr> = smc_10 0\"\n        \"\\<GG>\\<lparr>HomCod\\<rparr> = \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<GG>\\<lparr>ObjMap\\<rparr> =\n     ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>} &&&\n     \\<GG>\\<lparr>ArrMap\\<rparr> = []\\<^sub>\\<circ>) &&&\n    \\<GG>\\<lparr>HomDom\\<rparr> = smc_10 []\\<^sub>\\<circ> &&&\n    \\<GG>\\<lparr>HomCod\\<rparr> = \\<BB>", "unfolding \\<GG>_def dghm_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>},\n      []\\<^sub>\\<circ>, smc_10 []\\<^sub>\\<circ>,\n      \\<BB>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n     ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>} &&&\n     [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>},\n      []\\<^sub>\\<circ>, smc_10 []\\<^sub>\\<circ>,\n      \\<BB>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> =\n     []\\<^sub>\\<circ>) &&&\n    [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>},\n     []\\<^sub>\\<circ>, smc_10 []\\<^sub>\\<circ>,\n     \\<BB>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr> =\n    smc_10 []\\<^sub>\\<circ> &&&\n    [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>},\n     []\\<^sub>\\<circ>, smc_10 []\\<^sub>\\<circ>,\n     \\<BB>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr> =\n    \\<BB>", "by (simp_all add: nat_omega_simps)"], ["proof (state)\nthis:\n  \\<GG>\\<lparr>ObjMap\\<rparr> =\n  ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>}\n  \\<GG>\\<lparr>ArrMap\\<rparr> = []\\<^sub>\\<circ>\n  \\<GG>\\<lparr>HomDom\\<rparr> = smc_10 []\\<^sub>\\<circ>\n  \\<GG>\\<lparr>HomCod\\<rparr> = \\<BB>\n\ngoal (1 subgoal):\n 1. \\<not> \\<BB>\\<lparr>Obj\\<rparr>\n           \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {a} \\<Longrightarrow>\n    False", "have \\<GG>: \"\\<GG> : smc_10 0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> :\n    smc_10\n     []\\<^sub>\\<circ> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "proof(rule is_semifunctorI, unfold \\<GG>_components smc_10_components)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence \\<GG>\n 3. semicategory \\<alpha> (smc_10 []\\<^sub>\\<circ>)\n 4. semicategory \\<alpha> \\<BB>\n 5. vcard \\<GG> = 4\\<^sub>\\<nat>\n 6. smcf_dghm \\<GG> :\n    smc_dg\n     (smc_10\n       []\\<^sub>\\<circ>) \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n         \\<BB>\n 7. smc_10 []\\<^sub>\\<circ> = smc_10 []\\<^sub>\\<circ>\n 8. \\<BB> = \\<BB>\n 9. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>smc_10 []\\<^sub>\\<circ>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_10 []\\<^sub>\\<circ>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> []\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ> \\<lparr>g,\n                                    f\\<rparr>\\<^sub>\\<bullet>\\<rparr> =\n                         []\\<^sub>\\<circ>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n                         []\\<^sub>\\<circ>\\<lparr>f\\<rparr>", "show \"vfsequence \\<GG>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence \\<GG>", "unfolding \\<GG>_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence\n     [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>},\n      []\\<^sub>\\<circ>, smc_10 []\\<^sub>\\<circ>, \\<BB>]\\<^sub>\\<circ>", "by auto"], ["proof (state)\nthis:\n  vfsequence \\<GG>\n\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> (smc_10 []\\<^sub>\\<circ>)\n 3. semicategory \\<alpha> \\<BB>\n 4. vcard \\<GG> = 4\\<^sub>\\<nat>\n 5. smcf_dghm \\<GG> :\n    smc_dg\n     (smc_10\n       []\\<^sub>\\<circ>) \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n         \\<BB>\n 6. smc_10 []\\<^sub>\\<circ> = smc_10 []\\<^sub>\\<circ>\n 7. \\<BB> = \\<BB>\n 8. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>smc_10 []\\<^sub>\\<circ>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_10 []\\<^sub>\\<circ>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> []\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ> \\<lparr>g,\n                                    f\\<rparr>\\<^sub>\\<bullet>\\<rparr> =\n                         []\\<^sub>\\<circ>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n                         []\\<^sub>\\<circ>\\<lparr>f\\<rparr>", "show \"vcard \\<GG> = 4\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard \\<GG> = 4\\<^sub>\\<nat>", "unfolding \\<GG>_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard\n     [ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>},\n      []\\<^sub>\\<circ>, smc_10 []\\<^sub>\\<circ>, \\<BB>]\\<^sub>\\<circ> =\n    4\\<^sub>\\<nat>", "by (auto simp: nat_omega_simps)"], ["proof (state)\nthis:\n  vcard \\<GG> = 4\\<^sub>\\<nat>\n\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> (smc_10 []\\<^sub>\\<circ>)\n 3. semicategory \\<alpha> \\<BB>\n 4. smcf_dghm \\<GG> :\n    smc_dg\n     (smc_10\n       []\\<^sub>\\<circ>) \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n         \\<BB>\n 5. smc_10 []\\<^sub>\\<circ> = smc_10 []\\<^sub>\\<circ>\n 6. \\<BB> = \\<BB>\n 7. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>smc_10 []\\<^sub>\\<circ>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_10 []\\<^sub>\\<circ>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> []\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ> \\<lparr>g,\n                                    f\\<rparr>\\<^sub>\\<bullet>\\<rparr> =\n                         []\\<^sub>\\<circ>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n                         []\\<^sub>\\<circ>\\<lparr>f\\<rparr>", "show \"smcf_dghm \\<GG> : smc_dg (smc_10 0) \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm \\<GG> :\n    smc_dg\n     (smc_10\n       []\\<^sub>\\<circ>) \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n         \\<BB>", "proof(intro is_dghmI, unfold \\<GG>_components dg_10_components smc_dg_smc_10)"], ["proof (state)\ngoal (13 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (smcf_dghm \\<GG>)\n 3. digraph \\<alpha> (dg_10 []\\<^sub>\\<circ>)\n 4. digraph \\<alpha> (smc_dg \\<BB>)\n 5. vcard (smcf_dghm \\<GG>) = 4\\<^sub>\\<nat>\n 6. smcf_dghm \\<GG>\\<lparr>HomDom\\<rparr> = dg_10 []\\<^sub>\\<circ>\n 7. smcf_dghm \\<GG>\\<lparr>HomCod\\<rparr> = smc_dg \\<BB>\n 8. vsv (smcf_dghm \\<GG>\\<lparr>ObjMap\\<rparr>)\n 9. vsv (smcf_dghm \\<GG>\\<lparr>ArrMap\\<rparr>)\n 10. \\<D>\\<^sub>\\<circ> (smcf_dghm \\<GG>\\<lparr>ObjMap\\<rparr>) =\n     ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\nA total of 13 subgoals...", "show \"vfsequence (smcf_dghm \\<GG>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (smcf_dghm \\<GG>)", "unfolding smcf_dghm_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence\n     [\\<GG>\\<lparr>ObjMap\\<rparr>, \\<GG>\\<lparr>ArrMap\\<rparr>,\n      smc_dg (\\<GG>\\<lparr>HomDom\\<rparr>),\n      smc_dg (\\<GG>\\<lparr>HomCod\\<rparr>)]\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  vfsequence (smcf_dghm \\<GG>)\n\ngoal (12 subgoals):\n 1. \\<Z> \\<alpha>\n 2. digraph \\<alpha> (dg_10 []\\<^sub>\\<circ>)\n 3. digraph \\<alpha> (smc_dg \\<BB>)\n 4. vcard (smcf_dghm \\<GG>) = 4\\<^sub>\\<nat>\n 5. smcf_dghm \\<GG>\\<lparr>HomDom\\<rparr> = dg_10 []\\<^sub>\\<circ>\n 6. smcf_dghm \\<GG>\\<lparr>HomCod\\<rparr> = smc_dg \\<BB>\n 7. vsv (smcf_dghm \\<GG>\\<lparr>ObjMap\\<rparr>)\n 8. vsv (smcf_dghm \\<GG>\\<lparr>ArrMap\\<rparr>)\n 9. \\<D>\\<^sub>\\<circ> (smcf_dghm \\<GG>\\<lparr>ObjMap\\<rparr>) =\n    ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n 10. \\<R>\\<^sub>\\<circ> (smcf_dghm \\<GG>\\<lparr>ObjMap\\<rparr>)\n     \\<subseteq>\\<^sub>\\<circ> smc_dg \\<BB>\\<lparr>Obj\\<rparr>\nA total of 12 subgoals...", "show \"vcard (smcf_dghm \\<GG>) = 4\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (smcf_dghm \\<GG>) = 4\\<^sub>\\<nat>", "unfolding smcf_dghm_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard\n     [\\<GG>\\<lparr>ObjMap\\<rparr>, \\<GG>\\<lparr>ArrMap\\<rparr>,\n      smc_dg (\\<GG>\\<lparr>HomDom\\<rparr>),\n      smc_dg (\\<GG>\\<lparr>HomCod\\<rparr>)]\\<^sub>\\<circ> =\n    4\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  vcard (smcf_dghm \\<GG>) = 4\\<^sub>\\<nat>\n\ngoal (11 subgoals):\n 1. \\<Z> \\<alpha>\n 2. digraph \\<alpha> (dg_10 []\\<^sub>\\<circ>)\n 3. digraph \\<alpha> (smc_dg \\<BB>)\n 4. smcf_dghm \\<GG>\\<lparr>HomDom\\<rparr> = dg_10 []\\<^sub>\\<circ>\n 5. smcf_dghm \\<GG>\\<lparr>HomCod\\<rparr> = smc_dg \\<BB>\n 6. vsv (smcf_dghm \\<GG>\\<lparr>ObjMap\\<rparr>)\n 7. vsv (smcf_dghm \\<GG>\\<lparr>ArrMap\\<rparr>)\n 8. \\<D>\\<^sub>\\<circ> (smcf_dghm \\<GG>\\<lparr>ObjMap\\<rparr>) =\n    ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n 9. \\<R>\\<^sub>\\<circ> (smcf_dghm \\<GG>\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> smc_dg \\<BB>\\<lparr>Obj\\<rparr>\n 10. \\<D>\\<^sub>\\<circ> (smcf_dghm \\<GG>\\<lparr>ArrMap\\<rparr>) =\n     []\\<^sub>\\<circ>\nA total of 11 subgoals...", "qed \n          (\n            auto simp: \n              slicing_simps slicing_intros slicing_commute smc_dg_smc_10 \n              b \\<GG>_components dg_10_is_arr_iff digraph_dg_10 \n          )"], ["proof (state)\nthis:\n  smcf_dghm \\<GG> :\n  smc_dg\n   (smc_10\n     []\\<^sub>\\<circ>) \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^bsub>\\<alpha>\\<^esub> smc_dg\n       \\<BB>\n\ngoal (6 subgoals):\n 1. \\<Z> \\<alpha>\n 2. semicategory \\<alpha> (smc_10 []\\<^sub>\\<circ>)\n 3. semicategory \\<alpha> \\<BB>\n 4. smc_10 []\\<^sub>\\<circ> = smc_10 []\\<^sub>\\<circ>\n 5. \\<BB> = \\<BB>\n 6. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>smc_10 []\\<^sub>\\<circ>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>smc_10 []\\<^sub>\\<circ>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> []\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ> \\<lparr>g,\n                                    f\\<rparr>\\<^sub>\\<bullet>\\<rparr> =\n                         []\\<^sub>\\<circ>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n                         []\\<^sub>\\<circ>\\<lparr>f\\<rparr>", "qed (auto simp: smc_cs_intros smc_10_is_arr_iff b vsubset_vsingleton_leftI)"], ["proof (state)\nthis:\n  \\<GG> :\n  smc_10\n   []\\<^sub>\\<circ> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<not> \\<BB>\\<lparr>Obj\\<rparr>\n           \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {a} \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<GG> :\n  smc_10\n   []\\<^sub>\\<circ> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "have \\<GG>_def: \"\\<GG> = \\<FF>\""], ["proof (prove)\nusing this:\n  \\<GG> :\n  smc_10\n   []\\<^sub>\\<circ> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<GG> = \\<FF>", "by (rule \\<GG>\\<FF>)"], ["proof (state)\nthis:\n  \\<GG> = \\<FF>\n\ngoal (1 subgoal):\n 1. \\<not> \\<BB>\\<lparr>Obj\\<rparr>\n           \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {a} \\<Longrightarrow>\n    False", "have \"\\<R>\\<^sub>\\<circ> (\\<GG>\\<lparr>ObjMap\\<rparr>) = set {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (\\<GG>\\<lparr>ObjMap\\<rparr>) = ZFC_in_HOL.set {b}", "unfolding \\<GG>_components"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (ZFC_in_HOL.set {\\<langle>[]\\<^sub>\\<circ>, b\\<rangle>}) =\n    ZFC_in_HOL.set {b}", "by simp"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (\\<GG>\\<lparr>ObjMap\\<rparr>) = ZFC_in_HOL.set {b}\n\ngoal (1 subgoal):\n 1. \\<not> \\<BB>\\<lparr>Obj\\<rparr>\n           \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {a} \\<Longrightarrow>\n    False", "with vrange_\\<FF> ba"], ["proof (chain)\npicking this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = ZFC_in_HOL.set {a}\n  b \\<noteq> a\n  \\<R>\\<^sub>\\<circ> (\\<GG>\\<lparr>ObjMap\\<rparr>) = ZFC_in_HOL.set {b}", "show False"], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = ZFC_in_HOL.set {a}\n  b \\<noteq> a\n  \\<R>\\<^sub>\\<circ> (\\<GG>\\<lparr>ObjMap\\<rparr>) = ZFC_in_HOL.set {b}\n\ngoal (1 subgoal):\n 1. False", "unfolding \\<GG>_def"], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = ZFC_in_HOL.set {a}\n  b \\<noteq> a\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = ZFC_in_HOL.set {b}\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<BB>\\<lparr>Obj\\<rparr> \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {a}\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>\\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a};\n         a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  ZFC_in_HOL.set {a} \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n  \\<BB>\\<lparr>Obj\\<rparr> \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {a}", "have \"\\<BB>\\<lparr>Obj\\<rparr> = set {a}\""], ["proof (prove)\nusing this:\n  ZFC_in_HOL.set {a} \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n  \\<BB>\\<lparr>Obj\\<rparr> \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {a}\n\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}", "by simp"], ["proof (state)\nthis:\n  \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>\\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a};\n         a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with that"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {?a};\n   ?a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {?a};\n   ?a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}\n\ngoal (1 subgoal):\n 1. thesis", "by simp"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}\n  a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a f.\n                \\<lbrakk>a \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n                 f \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n                 \\<BB> = smc_1 a f\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     semicategory \\<alpha> \\<BB>;\n     \\<And>a.\n        semicategory \\<alpha> a \\<Longrightarrow>\n        \\<exists>!\\<FF>.\n           \\<FF> :\n           a \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>;\n     obj_terminal (smc_SemiCAT \\<alpha>) \\<BB>\\<rbrakk>\n    \\<Longrightarrow> thesis", "obtain f \n    where \\<BB>_Arr: \"\\<BB>\\<lparr>Arr\\<rparr> = set {f}\" \n      and f: \"f \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n      and ff_f: \"f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>\\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {f};\n         f \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n         f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f = f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>\\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {f};\n         f \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n         f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f = f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from prems(2)[OF semicategory_smc_1, of 0 0]"], ["proof (chain)\npicking this:\n  \\<lbrakk>[]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n   []\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>!\\<FF>.\n                       \\<FF> :\n                       smc_1 []\\<^sub>\\<circ>\n                        []\\<^sub>\\<circ> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "obtain \\<FF> \n      where \"\\<FF> : smc_1 0 0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n        and \"\\<GG> : smc_1 0 0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow> \\<GG> = \\<FF>\" \n      for \\<GG>"], ["proof (prove)\nusing this:\n  \\<lbrakk>[]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n   []\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>!\\<FF>.\n                       \\<FF> :\n                       smc_1 []\\<^sub>\\<circ>\n                        []\\<^sub>\\<circ> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<FF>.\n        \\<lbrakk>\\<FF> :\n                 smc_1 []\\<^sub>\\<circ>\n                  []\\<^sub>\\<circ> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>;\n         \\<And>\\<GG>.\n            \\<GG> :\n            smc_1 []\\<^sub>\\<circ>\n             []\\<^sub>\\<circ> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n            \\<GG> = \\<FF>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  \\<FF> :\n  smc_1 []\\<^sub>\\<circ>\n   []\\<^sub>\\<circ> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  ?\\<GG> :\n  smc_1 []\\<^sub>\\<circ>\n   []\\<^sub>\\<circ> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n  ?\\<GG> = \\<FF>\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>\\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {f};\n         f \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n         f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f = f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<FF> :\n  smc_1 []\\<^sub>\\<circ>\n   []\\<^sub>\\<circ> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  ?\\<GG> :\n  smc_1 []\\<^sub>\\<circ>\n   []\\<^sub>\\<circ> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n  ?\\<GG> = \\<FF>", "interpret \\<FF>: is_semifunctor \\<alpha> \\<open>smc_1 0 0\\<close> \\<BB> \\<FF>"], ["proof (prove)\nusing this:\n  \\<FF> :\n  smc_1 []\\<^sub>\\<circ>\n   []\\<^sub>\\<circ> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  ?\\<GG> :\n  smc_1 []\\<^sub>\\<circ>\n   []\\<^sub>\\<circ> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n  ?\\<GG> = \\<FF>\n\ngoal (1 subgoal):\n 1. \\<FF> :\n    smc_1 []\\<^sub>\\<circ>\n     []\\<^sub>\\<circ> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by force"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>\\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {f};\n         f \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n         f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f = f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = set {0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) =\n    ZFC_in_HOL.set {[]\\<^sub>\\<circ>}", "by (simp add: smc_cs_simps smc_1_components)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) =\n  ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>\\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {f};\n         f \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n         f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f = f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) =\n  ZFC_in_HOL.set {[]\\<^sub>\\<circ>}", "obtain a' where \"\\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = set {a'}\""], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) =\n  ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n\ngoal (1 subgoal):\n 1. (\\<And>a'.\n        \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) =\n        ZFC_in_HOL.set {a'} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto intro: \\<FF>.ObjMap.vsv_vdomain_vsingleton_vrange_vsingleton)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = ZFC_in_HOL.set {a'}\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>\\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {f};\n         f \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n         f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f = f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with \\<FF>.smcf_ObjMap_vrange"], ["proof (chain)\npicking this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = ZFC_in_HOL.set {a'}", "have \"\\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = set {a}\""], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = ZFC_in_HOL.set {a'}\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = ZFC_in_HOL.set {a}", "by (auto simp: \\<BB>_Obj)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = ZFC_in_HOL.set {a}\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>\\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {f};\n         f \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n         f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f = f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have vdomain_\\<FF>: \"\\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) = set {0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) =\n    ZFC_in_HOL.set {[]\\<^sub>\\<circ>}", "by (simp add: smc_cs_simps smc_1_components)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) =\n  ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>\\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {f};\n         f \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n         f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f = f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) =\n  ZFC_in_HOL.set {[]\\<^sub>\\<circ>}", "obtain f where vrange_\\<FF>[simp]: \"\\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) = set {f}\""], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) =\n  ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) =\n        ZFC_in_HOL.set {f} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto intro: \\<FF>.ArrMap.vsv_vdomain_vsingleton_vrange_vsingleton)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) = ZFC_in_HOL.set {f}\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>\\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {f};\n         f \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n         f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f = f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with \\<BB>.smc_Arr_vsubset_Vset \\<FF>.smcf_ArrMap_vrange"], ["proof (chain)\npicking this:\n  \\<BB>\\<lparr>Arr\\<rparr> \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) = ZFC_in_HOL.set {f}", "have [simp]: \"f \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  \\<BB>\\<lparr>Arr\\<rparr> \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) = ZFC_in_HOL.set {f}\n\ngoal (1 subgoal):\n 1. f \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by auto"], ["proof (state)\nthis:\n  f \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>\\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {f};\n         f \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n         f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f = f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from \\<FF>.smcf_ArrMap_vrange"], ["proof (chain)\npicking this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>", "have f_ss_\\<BB>: \"set {f} \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set {f} \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>", "by simp"], ["proof (state)\nthis:\n  ZFC_in_HOL.set {f} \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>\\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {f};\n         f \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n         f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f = f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  ZFC_in_HOL.set {f} \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>", "have \"f \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  ZFC_in_HOL.set {f} \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. f \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>", "by auto"], ["proof (state)\nthis:\n  f \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>\\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {f};\n         f \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n         f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f = f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  f \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>", "have f: \"f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a\""], ["proof (prove)\nusing this:\n  f \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a", "by (metis \\<BB>_Obj \\<BB>.smc_is_arrD(2,3) is_arrI vsingleton_iff)"], ["proof (state)\nthis:\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>\\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {f};\n         f \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n         f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f = f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from vdomain_\\<FF> \\<FF>.ArrMap.vsv_value"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) =\n  ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n  \\<lbrakk>?a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                   (\\<FF>\\<lparr>ArrMap\\<rparr>);\n   \\<And>b.\n      \\<lbrakk>\\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>?a\\<rparr> = b;\n       b \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (\\<FF>\\<lparr>ArrMap\\<rparr>)\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "have [simp]: \"\\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>0\\<rparr> = f\""], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) =\n  ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n  \\<lbrakk>?a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                   (\\<FF>\\<lparr>ArrMap\\<rparr>);\n   \\<And>b.\n      \\<lbrakk>\\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>?a\\<rparr> = b;\n       b \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (\\<FF>\\<lparr>ArrMap\\<rparr>)\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> = f", "by auto"], ["proof (state)\nthis:\n  \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> = f\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>\\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {f};\n         f \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n         f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f = f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from \\<FF>.smcf_is_arr_HomCod(2)"], ["proof (chain)\npicking this:\n  ?f : ?a \\<mapsto>\\<^bsub>smc_1 []\\<^sub>\\<circ> []\\<^sub>\\<circ>\\<^esub> ?b \\<Longrightarrow>\n  \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>?a\\<rparr>\n  \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>", "have [simp]: \"\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>0\\<rparr> = a\""], ["proof (prove)\nusing this:\n  ?f : ?a \\<mapsto>\\<^bsub>smc_1 []\\<^sub>\\<circ> []\\<^sub>\\<circ>\\<^esub> ?b \\<Longrightarrow>\n  \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>?a\\<rparr>\n  \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> = a", "by (auto simp: smc_1_is_arr_iff \\<BB>_Obj)"], ["proof (state)\nthis:\n  \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> = a\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>\\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {f};\n         f \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n         f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f = f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>0\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>0\\<rparr> = \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>0\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n    \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n    \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>", "by (metis smc_1_Comp_app \\<FF>.smcf_ArrMap_Comp smc_1_is_arr_iff)"], ["proof (state)\nthis:\n  \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n  \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n  \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>\\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {f};\n         f \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n         f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f = f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n  \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n  \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>", "have ff_f[simp]: \"f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f = f\""], ["proof (prove)\nusing this:\n  \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n  \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n  \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\n\ngoal (1 subgoal):\n 1. f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f = f", "by simp"], ["proof (state)\nthis:\n  f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f = f\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>\\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {f};\n         f \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n         f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f = f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have id_\\<BB>: \"smcf_id \\<BB> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_id \\<BB> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (simp add: \\<BB>.smc_smcf_id_is_semifunctor)"], ["proof (state)\nthis:\n  dghm_id \\<BB> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>\\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {f};\n         f \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n         f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f = f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "interpret id_\\<BB>: is_semifunctor \\<alpha> \\<BB> \\<BB> \\<open>smcf_id \\<BB>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_id \\<BB> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule id_\\<BB>)"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>\\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {f};\n         f \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n         f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f = f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from prems(2)[OF \\<BB>.semicategory_axioms]"], ["proof (chain)\npicking this:\n  \\<exists>!\\<FF>.\n     \\<FF> :\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "have \n      \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow> \\<GG> = smcf_id \\<BB>\" for \\<GG>"], ["proof (prove)\nusing this:\n  \\<exists>!\\<FF>.\n     \\<FF> :\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<GG> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n    \\<GG> = dghm_id \\<BB>", "by (clarsimp simp: id_\\<BB>.is_semifunctor_axioms)"], ["proof (state)\nthis:\n  ?\\<GG> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n  ?\\<GG> = dghm_id \\<BB>\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>\\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {f};\n         f \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n         f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f = f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  ?\\<GG> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n  ?\\<GG> = dghm_id \\<BB>\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>\\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {f};\n         f \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n         f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f = f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from f"], ["proof (chain)\npicking this:\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a", "have \"smcf_const \\<BB> \\<BB> a f : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\nusing this:\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a\n\ngoal (1 subgoal):\n 1. dghm_const \\<BB> \\<BB> a f :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (intro smcf_const_is_semifunctor) (auto intro: smc_cs_intros)"], ["proof (state)\nthis:\n  dghm_const \\<BB> \\<BB> a f :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>\\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {f};\n         f \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n         f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f = f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  ?\\<GG> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n  ?\\<GG> = dghm_id \\<BB>\n  dghm_const \\<BB> \\<BB> a f :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "have const_eq_id: \"smcf_const \\<BB> \\<BB> a f = smcf_id \\<BB>\""], ["proof (prove)\nusing this:\n  ?\\<GG> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n  ?\\<GG> = dghm_id \\<BB>\n  dghm_const \\<BB> \\<BB> a f :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. dghm_const \\<BB> \\<BB> a f = dghm_id \\<BB>", "by simp"], ["proof (state)\nthis:\n  dghm_const \\<BB> \\<BB> a f = dghm_id \\<BB>\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>\\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {f};\n         f \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n         f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f = f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<BB>\\<lparr>Arr\\<rparr> \\<subseteq>\\<^sub>\\<circ> set {f}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>Arr\\<rparr> \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {f}", "proof(rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<BB>\\<lparr>Arr\\<rparr>\n           \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {f} \\<Longrightarrow>\n    False", "assume \"\\<not>\\<BB>\\<lparr>Arr\\<rparr> \\<subseteq>\\<^sub>\\<circ> set {f}\""], ["proof (state)\nthis:\n  \\<not> \\<BB>\\<lparr>Arr\\<rparr>\n         \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {f}\n\ngoal (1 subgoal):\n 1. \\<not> \\<BB>\\<lparr>Arr\\<rparr>\n           \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {f} \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<not> \\<BB>\\<lparr>Arr\\<rparr>\n         \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {f}", "obtain g where gf: \"g \\<noteq> f\" and g: \"g \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<not> \\<BB>\\<lparr>Arr\\<rparr>\n         \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {f}\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<noteq> f;\n         g \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  g \\<noteq> f\n  g \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<not> \\<BB>\\<lparr>Arr\\<rparr>\n           \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {f} \\<Longrightarrow>\n    False", "have g: \"g : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a", "proof(intro is_arrI)"], ["proof (state)\ngoal (3 subgoals):\n 1. g \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\n 2. \\<BB>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> = a\n 3. \\<BB>\\<lparr>Cod\\<rparr>\\<lparr>g\\<rparr> = a", "from g \\<BB>_Obj"], ["proof (chain)\npicking this:\n  g \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\n  \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}", "show \"\\<BB>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> = a\""], ["proof (prove)\nusing this:\n  g \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\n  \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}\n\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> = a", "by (metis \\<BB>.smc_is_arrD(2) is_arr_def vsingleton_iff)"], ["proof (state)\nthis:\n  \\<BB>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> = a\n\ngoal (2 subgoals):\n 1. g \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\n 2. \\<BB>\\<lparr>Cod\\<rparr>\\<lparr>g\\<rparr> = a", "from g \\<BB>_Obj"], ["proof (chain)\npicking this:\n  g \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\n  \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}", "show \"\\<BB>\\<lparr>Cod\\<rparr>\\<lparr>g\\<rparr> = a\""], ["proof (prove)\nusing this:\n  g \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\n  \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}\n\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>Cod\\<rparr>\\<lparr>g\\<rparr> = a", "by (metis \\<BB>.smc_is_arrD(3) is_arr_def vsingleton_iff)"], ["proof (state)\nthis:\n  \\<BB>\\<lparr>Cod\\<rparr>\\<lparr>g\\<rparr> = a\n\ngoal (1 subgoal):\n 1. g \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>", "qed (auto simp: g)"], ["proof (state)\nthis:\n  g : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a\n\ngoal (1 subgoal):\n 1. \\<not> \\<BB>\\<lparr>Arr\\<rparr>\n           \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {f} \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  g : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a", "have \"smcf_const \\<BB> \\<BB> a f\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> = f\""], ["proof (prove)\nusing this:\n  g : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a\n\ngoal (1 subgoal):\n 1. dghm_const \\<BB> \\<BB> a f\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> = f", "by (cs_concl cs_simp: smc_cs_simps cs_intro: smc_cs_intros)"], ["proof (state)\nthis:\n  dghm_const \\<BB> \\<BB> a f\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> = f\n\ngoal (1 subgoal):\n 1. \\<not> \\<BB>\\<lparr>Arr\\<rparr>\n           \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {f} \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  dghm_const \\<BB> \\<BB> a f\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> = f\n\ngoal (1 subgoal):\n 1. \\<not> \\<BB>\\<lparr>Arr\\<rparr>\n           \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {f} \\<Longrightarrow>\n    False", "from g"], ["proof (chain)\npicking this:\n  g : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a", "have \"smcf_id \\<BB>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> = g\""], ["proof (prove)\nusing this:\n  g : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a\n\ngoal (1 subgoal):\n 1. dghm_id \\<BB>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> = g", "by (cs_concl cs_simp: smc_cs_simps cs_intro: smc_cs_intros)"], ["proof (state)\nthis:\n  dghm_id \\<BB>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> = g\n\ngoal (1 subgoal):\n 1. \\<not> \\<BB>\\<lparr>Arr\\<rparr>\n           \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {f} \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  dghm_const \\<BB> \\<BB> a f\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> = f\n  dghm_id \\<BB>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> = g", "show False"], ["proof (prove)\nusing this:\n  dghm_const \\<BB> \\<BB> a f\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> = f\n  dghm_id \\<BB>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> = g\n\ngoal (1 subgoal):\n 1. False", "using const_eq_id"], ["proof (prove)\nusing this:\n  dghm_const \\<BB> \\<BB> a f\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> = f\n  dghm_id \\<BB>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> = g\n  dghm_const \\<BB> \\<BB> a f = dghm_id \\<BB>\n\ngoal (1 subgoal):\n 1. False", "by (simp add: gf)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<BB>\\<lparr>Arr\\<rparr> \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {f}\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>\\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {f};\n         f \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n         f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f = f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with f_ss_\\<BB>"], ["proof (chain)\npicking this:\n  ZFC_in_HOL.set {f} \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\n  \\<BB>\\<lparr>Arr\\<rparr> \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {f}", "have \"\\<BB>\\<lparr>Arr\\<rparr> = set {f}\""], ["proof (prove)\nusing this:\n  ZFC_in_HOL.set {f} \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\n  \\<BB>\\<lparr>Arr\\<rparr> \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {f}\n\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {f}", "by simp"], ["proof (state)\nthis:\n  \\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {f}\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>\\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {f};\n         f \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n         f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f = f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with that"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {?f};\n   ?f \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n   ?f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> ?f = ?f\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {f}", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {?f};\n   ?f \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n   ?f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> ?f = ?f\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {f}\n\ngoal (1 subgoal):\n 1. thesis", "by simp"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {f}\n  f \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f = f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a f.\n                \\<lbrakk>a \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n                 f \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n                 \\<BB> = smc_1 a f\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     semicategory \\<alpha> \\<BB>;\n     \\<And>a.\n        semicategory \\<alpha> a \\<Longrightarrow>\n        \\<exists>!\\<FF>.\n           \\<FF> :\n           a \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>;\n     obj_terminal (smc_SemiCAT \\<alpha>) \\<BB>\\<rbrakk>\n    \\<Longrightarrow> thesis", "have \"\\<BB> = smc_1 a f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB> = smc_1 a f", "proof(rule smc_eqI [of \\<alpha>], unfold smc_1_components)"], ["proof (state)\ngoal (7 subgoals):\n 1. semicategory \\<alpha> \\<BB>\n 2. semicategory \\<alpha> (smc_1 a f)\n 3. \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}\n 4. \\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {f}\n 5. \\<BB>\\<lparr>Dom\\<rparr> = ZFC_in_HOL.set {\\<langle>f, a\\<rangle>}\n 6. \\<BB>\\<lparr>Cod\\<rparr> = ZFC_in_HOL.set {\\<langle>f, a\\<rangle>}\n 7. \\<BB>\\<lparr>Comp\\<rparr> =\n    ZFC_in_HOL.set {\\<langle>[f, f]\\<^sub>\\<circ>, f\\<rangle>}", "show \"\\<BB>\\<lparr>Obj\\<rparr> = set {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}", "by (simp add: \\<BB>_Obj)"], ["proof (state)\nthis:\n  \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}\n\ngoal (6 subgoals):\n 1. semicategory \\<alpha> \\<BB>\n 2. semicategory \\<alpha> (smc_1 a f)\n 3. \\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {f}\n 4. \\<BB>\\<lparr>Dom\\<rparr> = ZFC_in_HOL.set {\\<langle>f, a\\<rangle>}\n 5. \\<BB>\\<lparr>Cod\\<rparr> = ZFC_in_HOL.set {\\<langle>f, a\\<rangle>}\n 6. \\<BB>\\<lparr>Comp\\<rparr> =\n    ZFC_in_HOL.set {\\<langle>[f, f]\\<^sub>\\<circ>, f\\<rangle>}", "moreover"], ["proof (state)\nthis:\n  \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}\n\ngoal (6 subgoals):\n 1. semicategory \\<alpha> \\<BB>\n 2. semicategory \\<alpha> (smc_1 a f)\n 3. \\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {f}\n 4. \\<BB>\\<lparr>Dom\\<rparr> = ZFC_in_HOL.set {\\<langle>f, a\\<rangle>}\n 5. \\<BB>\\<lparr>Cod\\<rparr> = ZFC_in_HOL.set {\\<langle>f, a\\<rangle>}\n 6. \\<BB>\\<lparr>Comp\\<rparr> =\n    ZFC_in_HOL.set {\\<langle>[f, f]\\<^sub>\\<circ>, f\\<rangle>}", "show \"\\<BB>\\<lparr>Arr\\<rparr> = set {f}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {f}", "by (simp add: \\<BB>_Arr)"], ["proof (state)\nthis:\n  \\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {f}\n\ngoal (5 subgoals):\n 1. semicategory \\<alpha> \\<BB>\n 2. semicategory \\<alpha> (smc_1 a f)\n 3. \\<BB>\\<lparr>Dom\\<rparr> = ZFC_in_HOL.set {\\<langle>f, a\\<rangle>}\n 4. \\<BB>\\<lparr>Cod\\<rparr> = ZFC_in_HOL.set {\\<langle>f, a\\<rangle>}\n 5. \\<BB>\\<lparr>Comp\\<rparr> =\n    ZFC_in_HOL.set {\\<langle>[f, f]\\<^sub>\\<circ>, f\\<rangle>}", "ultimately"], ["proof (chain)\npicking this:\n  \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}\n  \\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {f}", "have dom: \"\\<BB>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = a\" and cod: \"\\<BB>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = a\""], ["proof (prove)\nusing this:\n  \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}\n  \\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {f}\n\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = a &&&\n    \\<BB>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = a", "by (metis \\<BB>.smc_is_arrE is_arr_def vsingleton_iff)+"], ["proof (state)\nthis:\n  \\<BB>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = a\n  \\<BB>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = a\n\ngoal (5 subgoals):\n 1. semicategory \\<alpha> \\<BB>\n 2. semicategory \\<alpha> (smc_1 a f)\n 3. \\<BB>\\<lparr>Dom\\<rparr> = ZFC_in_HOL.set {\\<langle>f, a\\<rangle>}\n 4. \\<BB>\\<lparr>Cod\\<rparr> = ZFC_in_HOL.set {\\<langle>f, a\\<rangle>}\n 5. \\<BB>\\<lparr>Comp\\<rparr> =\n    ZFC_in_HOL.set {\\<langle>[f, f]\\<^sub>\\<circ>, f\\<rangle>}", "have \"\\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Dom\\<rparr>) = set {f}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Dom\\<rparr>) = ZFC_in_HOL.set {f}", "by (simp add: \\<BB>_Arr smc_cs_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Dom\\<rparr>) = ZFC_in_HOL.set {f}\n\ngoal (5 subgoals):\n 1. semicategory \\<alpha> \\<BB>\n 2. semicategory \\<alpha> (smc_1 a f)\n 3. \\<BB>\\<lparr>Dom\\<rparr> = ZFC_in_HOL.set {\\<langle>f, a\\<rangle>}\n 4. \\<BB>\\<lparr>Cod\\<rparr> = ZFC_in_HOL.set {\\<langle>f, a\\<rangle>}\n 5. \\<BB>\\<lparr>Comp\\<rparr> =\n    ZFC_in_HOL.set {\\<langle>[f, f]\\<^sub>\\<circ>, f\\<rangle>}", "moreover"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Dom\\<rparr>) = ZFC_in_HOL.set {f}\n\ngoal (5 subgoals):\n 1. semicategory \\<alpha> \\<BB>\n 2. semicategory \\<alpha> (smc_1 a f)\n 3. \\<BB>\\<lparr>Dom\\<rparr> = ZFC_in_HOL.set {\\<langle>f, a\\<rangle>}\n 4. \\<BB>\\<lparr>Cod\\<rparr> = ZFC_in_HOL.set {\\<langle>f, a\\<rangle>}\n 5. \\<BB>\\<lparr>Comp\\<rparr> =\n    ZFC_in_HOL.set {\\<langle>[f, f]\\<^sub>\\<circ>, f\\<rangle>}", "from \\<BB>.Dom.vsv_vrange_vempty \\<BB>.smc_Dom_vdomain \\<BB>.smc_Dom_vrange"], ["proof (chain)\npicking this:\n  \\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>Dom\\<rparr>) =\n  []\\<^sub>\\<circ> \\<Longrightarrow>\n  \\<BB>\\<lparr>Dom\\<rparr> = []\\<^sub>\\<circ>\n  \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Dom\\<rparr>) = \\<BB>\\<lparr>Arr\\<rparr>\n  \\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>Dom\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>", "have \"\\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>Dom\\<rparr>) = set {a}\""], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>Dom\\<rparr>) =\n  []\\<^sub>\\<circ> \\<Longrightarrow>\n  \\<BB>\\<lparr>Dom\\<rparr> = []\\<^sub>\\<circ>\n  \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Dom\\<rparr>) = \\<BB>\\<lparr>Arr\\<rparr>\n  \\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>Dom\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>Dom\\<rparr>) = ZFC_in_HOL.set {a}", "by (fastforce simp: \\<BB>_Arr \\<BB>_Obj)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>Dom\\<rparr>) = ZFC_in_HOL.set {a}\n\ngoal (5 subgoals):\n 1. semicategory \\<alpha> \\<BB>\n 2. semicategory \\<alpha> (smc_1 a f)\n 3. \\<BB>\\<lparr>Dom\\<rparr> = ZFC_in_HOL.set {\\<langle>f, a\\<rangle>}\n 4. \\<BB>\\<lparr>Cod\\<rparr> = ZFC_in_HOL.set {\\<langle>f, a\\<rangle>}\n 5. \\<BB>\\<lparr>Comp\\<rparr> =\n    ZFC_in_HOL.set {\\<langle>[f, f]\\<^sub>\\<circ>, f\\<rangle>}", "ultimately"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Dom\\<rparr>) = ZFC_in_HOL.set {f}\n  \\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>Dom\\<rparr>) = ZFC_in_HOL.set {a}", "show \"\\<BB>\\<lparr>Dom\\<rparr> = set {\\<langle>f, a\\<rangle>}\""], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Dom\\<rparr>) = ZFC_in_HOL.set {f}\n  \\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>Dom\\<rparr>) = ZFC_in_HOL.set {a}\n\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>Dom\\<rparr> = ZFC_in_HOL.set {\\<langle>f, a\\<rangle>}", "using assms \\<BB>.Dom.vsv_vdomain_vrange_vsingleton"], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Dom\\<rparr>) = ZFC_in_HOL.set {f}\n  \\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>Dom\\<rparr>) = ZFC_in_HOL.set {a}\n  obj_terminal (smc_SemiCAT \\<alpha>) \\<BB>\n  \\<lbrakk>\\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Dom\\<rparr>) =\n           ZFC_in_HOL.set {?a};\n   \\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>Dom\\<rparr>) =\n   ZFC_in_HOL.set {?b}\\<rbrakk>\n  \\<Longrightarrow> \\<BB>\\<lparr>Dom\\<rparr> =\n                    ZFC_in_HOL.set {\\<langle>?a, ?b\\<rangle>}\n\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>Dom\\<rparr> = ZFC_in_HOL.set {\\<langle>f, a\\<rangle>}", "by simp"], ["proof (state)\nthis:\n  \\<BB>\\<lparr>Dom\\<rparr> = ZFC_in_HOL.set {\\<langle>f, a\\<rangle>}\n\ngoal (4 subgoals):\n 1. semicategory \\<alpha> \\<BB>\n 2. semicategory \\<alpha> (smc_1 a f)\n 3. \\<BB>\\<lparr>Cod\\<rparr> = ZFC_in_HOL.set {\\<langle>f, a\\<rangle>}\n 4. \\<BB>\\<lparr>Comp\\<rparr> =\n    ZFC_in_HOL.set {\\<langle>[f, f]\\<^sub>\\<circ>, f\\<rangle>}", "have \"\\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Cod\\<rparr>) = set {f}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Cod\\<rparr>) = ZFC_in_HOL.set {f}", "by (simp add: \\<BB>_Arr smc_cs_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Cod\\<rparr>) = ZFC_in_HOL.set {f}\n\ngoal (4 subgoals):\n 1. semicategory \\<alpha> \\<BB>\n 2. semicategory \\<alpha> (smc_1 a f)\n 3. \\<BB>\\<lparr>Cod\\<rparr> = ZFC_in_HOL.set {\\<langle>f, a\\<rangle>}\n 4. \\<BB>\\<lparr>Comp\\<rparr> =\n    ZFC_in_HOL.set {\\<langle>[f, f]\\<^sub>\\<circ>, f\\<rangle>}", "moreover"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Cod\\<rparr>) = ZFC_in_HOL.set {f}\n\ngoal (4 subgoals):\n 1. semicategory \\<alpha> \\<BB>\n 2. semicategory \\<alpha> (smc_1 a f)\n 3. \\<BB>\\<lparr>Cod\\<rparr> = ZFC_in_HOL.set {\\<langle>f, a\\<rangle>}\n 4. \\<BB>\\<lparr>Comp\\<rparr> =\n    ZFC_in_HOL.set {\\<langle>[f, f]\\<^sub>\\<circ>, f\\<rangle>}", "from \\<BB>.Cod.vsv_vrange_vempty \\<BB>.smc_Cod_vdomain \\<BB>.smc_Cod_vrange"], ["proof (chain)\npicking this:\n  \\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>Cod\\<rparr>) =\n  []\\<^sub>\\<circ> \\<Longrightarrow>\n  \\<BB>\\<lparr>Cod\\<rparr> = []\\<^sub>\\<circ>\n  \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Cod\\<rparr>) = \\<BB>\\<lparr>Arr\\<rparr>\n  \\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>Cod\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>", "have \"\\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>Cod\\<rparr>) = set {a}\""], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>Cod\\<rparr>) =\n  []\\<^sub>\\<circ> \\<Longrightarrow>\n  \\<BB>\\<lparr>Cod\\<rparr> = []\\<^sub>\\<circ>\n  \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Cod\\<rparr>) = \\<BB>\\<lparr>Arr\\<rparr>\n  \\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>Cod\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>Cod\\<rparr>) = ZFC_in_HOL.set {a}", "by (fastforce simp: \\<BB>_Arr \\<BB>_Obj)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>Cod\\<rparr>) = ZFC_in_HOL.set {a}\n\ngoal (4 subgoals):\n 1. semicategory \\<alpha> \\<BB>\n 2. semicategory \\<alpha> (smc_1 a f)\n 3. \\<BB>\\<lparr>Cod\\<rparr> = ZFC_in_HOL.set {\\<langle>f, a\\<rangle>}\n 4. \\<BB>\\<lparr>Comp\\<rparr> =\n    ZFC_in_HOL.set {\\<langle>[f, f]\\<^sub>\\<circ>, f\\<rangle>}", "ultimately"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Cod\\<rparr>) = ZFC_in_HOL.set {f}\n  \\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>Cod\\<rparr>) = ZFC_in_HOL.set {a}", "show \"\\<BB>\\<lparr>Cod\\<rparr> = set {\\<langle>f, a\\<rangle>}\""], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Cod\\<rparr>) = ZFC_in_HOL.set {f}\n  \\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>Cod\\<rparr>) = ZFC_in_HOL.set {a}\n\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>Cod\\<rparr> = ZFC_in_HOL.set {\\<langle>f, a\\<rangle>}", "using assms \\<BB>.Cod.vsv_vdomain_vrange_vsingleton"], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Cod\\<rparr>) = ZFC_in_HOL.set {f}\n  \\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>Cod\\<rparr>) = ZFC_in_HOL.set {a}\n  obj_terminal (smc_SemiCAT \\<alpha>) \\<BB>\n  \\<lbrakk>\\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Cod\\<rparr>) =\n           ZFC_in_HOL.set {?a};\n   \\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>Cod\\<rparr>) =\n   ZFC_in_HOL.set {?b}\\<rbrakk>\n  \\<Longrightarrow> \\<BB>\\<lparr>Cod\\<rparr> =\n                    ZFC_in_HOL.set {\\<langle>?a, ?b\\<rangle>}\n\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>Cod\\<rparr> = ZFC_in_HOL.set {\\<langle>f, a\\<rangle>}", "by simp"], ["proof (state)\nthis:\n  \\<BB>\\<lparr>Cod\\<rparr> = ZFC_in_HOL.set {\\<langle>f, a\\<rangle>}\n\ngoal (3 subgoals):\n 1. semicategory \\<alpha> \\<BB>\n 2. semicategory \\<alpha> (smc_1 a f)\n 3. \\<BB>\\<lparr>Comp\\<rparr> =\n    ZFC_in_HOL.set {\\<langle>[f, f]\\<^sub>\\<circ>, f\\<rangle>}", "show \"\\<BB>\\<lparr>Comp\\<rparr> = set {\\<langle>[f, f]\\<^sub>\\<circ>, f\\<rangle>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>Comp\\<rparr> =\n    ZFC_in_HOL.set {\\<langle>[f, f]\\<^sub>\\<circ>, f\\<rangle>}", "proof(rule vsv_eqI)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (\\<BB>\\<lparr>Comp\\<rparr>)\n 2. vsv (ZFC_in_HOL.set {\\<langle>[f, f]\\<^sub>\\<circ>, f\\<rangle>})\n 3. \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>) =\n    \\<D>\\<^sub>\\<circ>\n     (ZFC_in_HOL.set {\\<langle>[f, f]\\<^sub>\\<circ>, f\\<rangle>})\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (\\<BB>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       \\<BB>\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr> =\n       ZFC_in_HOL.set\n        {\\<langle>[f, f]\\<^sub>\\<circ>, f\\<rangle>}\\<lparr>a\\<rparr>", "show [simp]: \"\\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>) = \\<D>\\<^sub>\\<circ> (set {\\<langle>[f, f]\\<^sub>\\<circ>, f\\<rangle>})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>) =\n    \\<D>\\<^sub>\\<circ>\n     (ZFC_in_HOL.set {\\<langle>[f, f]\\<^sub>\\<circ>, f\\<rangle>})", "unfolding vdomain_vsingleton"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>) =\n    ZFC_in_HOL.set {[f, f]\\<^sub>\\<circ>}", "proof(rule vsubset_antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {[f, f]\\<^sub>\\<circ>}\n 2. ZFC_in_HOL.set {[f, f]\\<^sub>\\<circ>}\n    \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>)", "from \\<BB>.Comp.pnop_vdomain"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times>\n                            2\\<^sub>\\<nat>", "show \"\\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>) \\<subseteq>\\<^sub>\\<circ> set {[f, f]\\<^sub>\\<circ>}\""], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times>\n                            2\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {[f, f]\\<^sub>\\<circ>}", "by (auto simp: \\<BB>_Arr intro: smc_cs_intros)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {[f, f]\\<^sub>\\<circ>}\n\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set {[f, f]\\<^sub>\\<circ>}\n    \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>)", "(*slow*)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {[f, f]\\<^sub>\\<circ>}\n\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set {[f, f]\\<^sub>\\<circ>}\n    \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>)", "from \\<BB>_Arr dom cod is_arrI"], ["proof (chain)\npicking this:\n  \\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {f}\n  \\<BB>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = a\n  \\<BB>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = a\n  \\<lbrakk>?f \\<in>\\<^sub>\\<circ> ?\\<CC>\\<lparr>Arr\\<rparr>;\n   ?\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>?f\\<rparr> = ?a;\n   ?\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>?f\\<rparr> = ?b\\<rbrakk>\n  \\<Longrightarrow> ?f : ?a \\<mapsto>\\<^bsub>?\\<CC>\\<^esub> ?b", "show \"set {[f, f]\\<^sub>\\<circ>} \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>)\""], ["proof (prove)\nusing this:\n  \\<BB>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {f}\n  \\<BB>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = a\n  \\<BB>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = a\n  \\<lbrakk>?f \\<in>\\<^sub>\\<circ> ?\\<CC>\\<lparr>Arr\\<rparr>;\n   ?\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>?f\\<rparr> = ?a;\n   ?\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>?f\\<rparr> = ?b\\<rbrakk>\n  \\<Longrightarrow> ?f : ?a \\<mapsto>\\<^bsub>?\\<CC>\\<^esub> ?b\n\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set {[f, f]\\<^sub>\\<circ>}\n    \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>)", "by (metis \\<BB>.smc_Comp_vdomainI vsingletonI vsubset_vsingleton_leftI)"], ["proof (state)\nthis:\n  ZFC_in_HOL.set {[f, f]\\<^sub>\\<circ>}\n  \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>) =\n  \\<D>\\<^sub>\\<circ>\n   (ZFC_in_HOL.set {\\<langle>[f, f]\\<^sub>\\<circ>, f\\<rangle>})\n\ngoal (3 subgoals):\n 1. vsv (\\<BB>\\<lparr>Comp\\<rparr>)\n 2. vsv (ZFC_in_HOL.set {\\<langle>[f, f]\\<^sub>\\<circ>, f\\<rangle>})\n 3. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (\\<BB>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       \\<BB>\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr> =\n       ZFC_in_HOL.set\n        {\\<langle>[f, f]\\<^sub>\\<circ>, f\\<rangle>}\\<lparr>a\\<rparr>", "from ff_f"], ["proof (chain)\npicking this:\n  f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f = f", "show \"a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>) \\<Longrightarrow> \\<BB>\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr> = set {\\<langle>[f, f]\\<^sub>\\<circ>, f\\<rangle>}\\<lparr>a\\<rparr>\" \n        for a"], ["proof (prove)\nusing this:\n  f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f = f\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                           (\\<BB>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n    \\<BB>\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>[f, f]\\<^sub>\\<circ>, f\\<rangle>}\\<lparr>a\\<rparr>", "by simp"], ["proof (state)\nthis:\n  ?a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                          (\\<BB>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n  \\<BB>\\<lparr>Comp\\<rparr>\\<lparr>?a\\<rparr> =\n  ZFC_in_HOL.set\n   {\\<langle>[f, f]\\<^sub>\\<circ>, f\\<rangle>}\\<lparr>?a\\<rparr>\n\ngoal (2 subgoals):\n 1. vsv (\\<BB>\\<lparr>Comp\\<rparr>)\n 2. vsv (ZFC_in_HOL.set {\\<langle>[f, f]\\<^sub>\\<circ>, f\\<rangle>})", "qed auto"], ["proof (state)\nthis:\n  \\<BB>\\<lparr>Comp\\<rparr> =\n  ZFC_in_HOL.set {\\<langle>[f, f]\\<^sub>\\<circ>, f\\<rangle>}\n\ngoal (2 subgoals):\n 1. semicategory \\<alpha> \\<BB>\n 2. semicategory \\<alpha> (smc_1 a f)", "qed (auto intro: smc_cs_intros a f semicategory_smc_1)"], ["proof (state)\nthis:\n  \\<BB> = smc_1 a f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a f.\n                \\<lbrakk>a \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n                 f \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n                 \\<BB> = smc_1 a f\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     semicategory \\<alpha> \\<BB>;\n     \\<And>a.\n        semicategory \\<alpha> a \\<Longrightarrow>\n        \\<exists>!\\<FF>.\n           \\<FF> :\n           a \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>;\n     obj_terminal (smc_SemiCAT \\<alpha>) \\<BB>\\<rbrakk>\n    \\<Longrightarrow> thesis", "with a f that"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  f \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<lbrakk>?a \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n   ?f \\<in>\\<^sub>\\<circ> Vset \\<alpha>; \\<BB> = smc_1 ?a ?f\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<BB> = smc_1 a f", "show ?thesis"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  f \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<lbrakk>?a \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n   ?f \\<in>\\<^sub>\\<circ> Vset \\<alpha>; \\<BB> = smc_1 ?a ?f\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<BB> = smc_1 a f\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>\\newpage\\<close>"], ["", "end"]]}