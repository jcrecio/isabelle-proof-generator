{"file_name": "/home/qj213/afp-2021-10-22/thys/CZH_Foundations/czh_digraphs/CZH_DG_Small_Digraph.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CZH_Foundations", "problem_names": ["lemmas [dg_small_cs_intros] = \n  tiny_digraph.tiny_dg_Obj_in_Vset\n  tiny_digraph.tiny_dg_Arr_in_Vset", "lemma (in tiny_digraph) tiny_digraph_axioms'[dg_small_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\"\n  shows \"tiny_digraph \\<alpha>' \\<CC>\"", "lemma tiny_digraphI':\n  assumes \"digraph \\<alpha> \\<CC>\" and \"\\<CC>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" and \"\\<CC>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"tiny_digraph \\<alpha> \\<CC>\"", "lemmas (in tiny_digraph) tiny_dg_digraph = digraph_axioms", "lemmas [dg_small_cs_intros] = tiny_digraph.tiny_dg_digraph", "lemma (in tiny_digraph) tiny_dg_Dom_in_Vset: \"\\<CC>\\<lparr>Dom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"", "lemma (in tiny_digraph) tiny_dg_Cod_in_Vset: \"\\<CC>\\<lparr>Cod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"", "lemma (in tiny_digraph) tiny_dg_in_Vset: \"\\<CC> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"", "lemma small_tiny_digraphs[simp]: \"small {\\<CC>. tiny_digraph \\<alpha> \\<CC>}\"", "lemma tiny_digraphs_vsubset_Vset: \"set {\\<CC>. tiny_digraph \\<alpha> \\<CC>} \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\"", "lemma (in digraph) dg_tiny_digraph_if_ge_Limit:\n  assumes \"\\<Z> \\<beta>\" and \"\\<alpha> \\<in>\\<^sub>\\<circ> \\<beta>\"\n  shows \"tiny_digraph \\<beta> \\<CC>\"", "lemma (in tiny_digraph) tiny_digraph_op: \"tiny_digraph \\<alpha> (op_dg \\<CC>)\"", "lemmas tiny_digraph_op[dg_op_intros] = tiny_digraph.tiny_digraph_op", "lemmas [dg_small_cs_intros] = \n  finite_digraph.fin_dg_Obj_vfinite\n  finite_digraph.fin_dg_Arr_vfinite", "lemma (in finite_digraph) finite_digraph_axioms'[dg_small_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\"\n  shows \"finite_digraph \\<alpha>' \\<CC>\"", "lemmas (in finite_digraph) fin_dg_tiny_digraph = tiny_digraph_axioms", "lemmas [dg_small_cs_intros] = finite_digraph.fin_dg_tiny_digraph", "lemma small_finite_digraphs[simp]: \"small {\\<CC>. finite_digraph \\<alpha> \\<CC>}\"", "lemma finite_digraphs_vsubset_Vset: \"set {\\<CC>. finite_digraph \\<alpha> \\<CC>} \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\"", "lemma (in finite_digraph) fininte_digraph_op: \"finite_digraph \\<alpha> (op_dg \\<CC>)\"", "lemmas fininte_digraph_op[dg_op_intros] = finite_digraph.fininte_digraph_op"], "translations": [["", "lemmas [dg_small_cs_intros] = \n  tiny_digraph.tiny_dg_Obj_in_Vset\n  tiny_digraph.tiny_dg_Arr_in_Vset"], ["", "text\\<open>Rules.\\<close>"], ["", "lemma (in tiny_digraph) tiny_digraph_axioms'[dg_small_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\"\n  shows \"tiny_digraph \\<alpha>' \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tiny_digraph \\<alpha>' \\<CC>", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. tiny_digraph \\<alpha> \\<CC>", "by (rule tiny_digraph_axioms)"], ["", "mk_ide rf tiny_digraph_def[unfolded tiny_digraph_axioms_def]\n  |intro tiny_digraphI|\n  |dest tiny_digraphD[dest]|\n  |elim tiny_digraphE[elim]|"], ["", "lemma tiny_digraphI':\n  assumes \"digraph \\<alpha> \\<CC>\" and \"\\<CC>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" and \"\\<CC>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"tiny_digraph \\<alpha> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tiny_digraph \\<alpha> \\<CC>", "using assms"], ["proof (prove)\nusing this:\n  digraph \\<alpha> \\<CC>\n  \\<CC>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<CC>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. tiny_digraph \\<alpha> \\<CC>", "by (meson digraphD(5,6,7,8,9) digraph_def tiny_digraphI)"], ["", "text\\<open>Elementary properties.\\<close>"], ["", "sublocale tiny_digraph \\<subseteq> digraph"], ["proof (prove)\ngoal (1 subgoal):\n 1. digraph \\<alpha> \\<CC>", "proof(rule digraphI)"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence \\<CC>\n 3. vsv (\\<CC>\\<lparr>Dom\\<rparr>)\n 4. vsv (\\<CC>\\<lparr>Cod\\<rparr>)\n 5. vcard \\<CC> = 4\\<^sub>\\<nat>\n 6. \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>) = \\<CC>\\<lparr>Arr\\<rparr>\n 7. \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n 8. \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>) = \\<CC>\\<lparr>Arr\\<rparr>\n 9. \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n 10. \\<CC>\\<lparr>Obj\\<rparr> \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\nA total of 11 subgoals...", "from tiny_dg_Obj_in_Vset"], ["proof (chain)\npicking this:\n  \\<CC>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"\\<CC>\\<lparr>Obj\\<rparr> \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  \\<CC>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>Obj\\<rparr> \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>", "by auto"], ["proof (state)\nthis:\n  \\<CC>\\<lparr>Obj\\<rparr> \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (10 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence \\<CC>\n 3. vsv (\\<CC>\\<lparr>Dom\\<rparr>)\n 4. vsv (\\<CC>\\<lparr>Cod\\<rparr>)\n 5. vcard \\<CC> = 4\\<^sub>\\<nat>\n 6. \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>) = \\<CC>\\<lparr>Arr\\<rparr>\n 7. \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n 8. \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>) = \\<CC>\\<lparr>Arr\\<rparr>\n 9. \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n 10. \\<And>A B.\n        \\<lbrakk>A \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>;\n         B \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>;\n         A \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n         B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> \\<Union>\\<^sub>\\<circ>\n                           ((\\<lambda>a\\<in>\\<^sub>\\<circ>A.\n                                \\<Union>\\<^sub>\\<circ>\n                                 (VLambda B (Hom \\<CC> a) `\\<^sub>\\<circ>\n                                  B)) `\\<^sub>\\<circ>\n                            A)\n                          \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "fix A B"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence \\<CC>\n 3. vsv (\\<CC>\\<lparr>Dom\\<rparr>)\n 4. vsv (\\<CC>\\<lparr>Cod\\<rparr>)\n 5. vcard \\<CC> = 4\\<^sub>\\<nat>\n 6. \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>) = \\<CC>\\<lparr>Arr\\<rparr>\n 7. \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n 8. \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>) = \\<CC>\\<lparr>Arr\\<rparr>\n 9. \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n 10. \\<And>A B.\n        \\<lbrakk>A \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>;\n         B \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>;\n         A \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n         B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> \\<Union>\\<^sub>\\<circ>\n                           ((\\<lambda>a\\<in>\\<^sub>\\<circ>A.\n                                \\<Union>\\<^sub>\\<circ>\n                                 (VLambda B (Hom \\<CC> a) `\\<^sub>\\<circ>\n                                  B)) `\\<^sub>\\<circ>\n                            A)\n                          \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "assume \"A \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\" \"B \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\" \"A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" \"B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (state)\nthis:\n  A \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  B \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (10 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence \\<CC>\n 3. vsv (\\<CC>\\<lparr>Dom\\<rparr>)\n 4. vsv (\\<CC>\\<lparr>Cod\\<rparr>)\n 5. vcard \\<CC> = 4\\<^sub>\\<nat>\n 6. \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>) = \\<CC>\\<lparr>Arr\\<rparr>\n 7. \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n 8. \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>) = \\<CC>\\<lparr>Arr\\<rparr>\n 9. \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n 10. \\<And>A B.\n        \\<lbrakk>A \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>;\n         B \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>;\n         A \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n         B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> \\<Union>\\<^sub>\\<circ>\n                           ((\\<lambda>a\\<in>\\<^sub>\\<circ>A.\n                                \\<Union>\\<^sub>\\<circ>\n                                 (VLambda B (Hom \\<CC> a) `\\<^sub>\\<circ>\n                                  B)) `\\<^sub>\\<circ>\n                            A)\n                          \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "then"], ["proof (chain)\npicking this:\n  A \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  B \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "have \"(\\<Union>\\<^sub>\\<circ>a\\<in>\\<^sub>\\<circ>A. \\<Union>\\<^sub>\\<circ>b\\<in>\\<^sub>\\<circ>B. Hom \\<CC> a b) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  A \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  B \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<Union>\\<^sub>\\<circ>\n     ((\\<lambda>a\\<in>\\<^sub>\\<circ>A.\n          \\<Union>\\<^sub>\\<circ>\n           (VLambda B (Hom \\<CC> a) `\\<^sub>\\<circ> B)) `\\<^sub>\\<circ>\n      A)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "by auto"], ["proof (state)\nthis:\n  \\<Union>\\<^sub>\\<circ>\n   ((\\<lambda>a\\<in>\\<^sub>\\<circ>A.\n        \\<Union>\\<^sub>\\<circ>\n         (VLambda B (Hom \\<CC> a) `\\<^sub>\\<circ> B)) `\\<^sub>\\<circ>\n    A)\n  \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n\ngoal (10 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence \\<CC>\n 3. vsv (\\<CC>\\<lparr>Dom\\<rparr>)\n 4. vsv (\\<CC>\\<lparr>Cod\\<rparr>)\n 5. vcard \\<CC> = 4\\<^sub>\\<nat>\n 6. \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>) = \\<CC>\\<lparr>Arr\\<rparr>\n 7. \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n 8. \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>) = \\<CC>\\<lparr>Arr\\<rparr>\n 9. \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n 10. \\<And>A B.\n        \\<lbrakk>A \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>;\n         B \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>;\n         A \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n         B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> \\<Union>\\<^sub>\\<circ>\n                           ((\\<lambda>a\\<in>\\<^sub>\\<circ>A.\n                                \\<Union>\\<^sub>\\<circ>\n                                 (VLambda B (Hom \\<CC> a) `\\<^sub>\\<circ>\n                                  B)) `\\<^sub>\\<circ>\n                            A)\n                          \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "with tiny_dg_Arr_in_Vset"], ["proof (chain)\npicking this:\n  \\<CC>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<Union>\\<^sub>\\<circ>\n   ((\\<lambda>a\\<in>\\<^sub>\\<circ>A.\n        \\<Union>\\<^sub>\\<circ>\n         (VLambda B (Hom \\<CC> a) `\\<^sub>\\<circ> B)) `\\<^sub>\\<circ>\n    A)\n  \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "show \"(\\<Union>\\<^sub>\\<circ>a\\<in>\\<^sub>\\<circ>A. \\<Union>\\<^sub>\\<circ>b\\<in>\\<^sub>\\<circ>B. Hom \\<CC> a b) \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  \\<CC>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<Union>\\<^sub>\\<circ>\n   ((\\<lambda>a\\<in>\\<^sub>\\<circ>A.\n        \\<Union>\\<^sub>\\<circ>\n         (VLambda B (Hom \\<CC> a) `\\<^sub>\\<circ> B)) `\\<^sub>\\<circ>\n    A)\n  \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<Union>\\<^sub>\\<circ>\n     ((\\<lambda>a\\<in>\\<^sub>\\<circ>A.\n          \\<Union>\\<^sub>\\<circ>\n           (VLambda B (Hom \\<CC> a) `\\<^sub>\\<circ> B)) `\\<^sub>\\<circ>\n      A)\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by blast"], ["proof (state)\nthis:\n  \\<Union>\\<^sub>\\<circ>\n   ((\\<lambda>a\\<in>\\<^sub>\\<circ>A.\n        \\<Union>\\<^sub>\\<circ>\n         (VLambda B (Hom \\<CC> a) `\\<^sub>\\<circ> B)) `\\<^sub>\\<circ>\n    A)\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (9 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence \\<CC>\n 3. vsv (\\<CC>\\<lparr>Dom\\<rparr>)\n 4. vsv (\\<CC>\\<lparr>Cod\\<rparr>)\n 5. vcard \\<CC> = 4\\<^sub>\\<nat>\n 6. \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>) = \\<CC>\\<lparr>Arr\\<rparr>\n 7. \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n 8. \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>) = \\<CC>\\<lparr>Arr\\<rparr>\n 9. \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "qed \n  (\n    cs_concl \n      cs_simp: dg_cs_simps  \n      cs_intro: tiny_dg_Cod_vrange tiny_dg_Dom_vrange dg_cs_intros V_cs_intros\n  )+"], ["", "lemmas (in tiny_digraph) tiny_dg_digraph = digraph_axioms"], ["", "lemmas [dg_small_cs_intros] = tiny_digraph.tiny_dg_digraph"], ["", "text\\<open>Size.\\<close>"], ["", "lemma (in tiny_digraph) tiny_dg_Dom_in_Vset: \"\\<CC>\\<lparr>Dom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>Dom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>Dom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "from \\<Z>_Limit_\\<alpha>\\<omega>"], ["proof (chain)\npicking this:\n  Limit (\\<alpha> + \\<omega>)", "have \"\\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>) \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  Limit (\\<alpha> + \\<omega>)\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>)\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (simp add: tiny_dg_Arr_in_Vset dg_cs_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>)\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>Dom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "moreover"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>)\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>Dom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "from tiny_dg_Dom_vrange"], ["proof (chain)\npicking this:\n  \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "have \"\\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>) \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>)\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (auto intro: tiny_dg_Obj_in_Vset)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>)\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>Dom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "ultimately"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>)\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>)\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>)\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Dom\\<rparr>)\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>Dom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (simp add: Dom.vbrelation_Limit_in_VsetI \\<Z>_Limit_\\<alpha>\\<omega>)"], ["proof (state)\nthis:\n  \\<CC>\\<lparr>Dom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in tiny_digraph) tiny_dg_Cod_in_Vset: \"\\<CC>\\<lparr>Cod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>Cod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>Cod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "from \\<Z>_Limit_\\<alpha>\\<omega>"], ["proof (chain)\npicking this:\n  Limit (\\<alpha> + \\<omega>)", "have \"\\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>) \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  Limit (\\<alpha> + \\<omega>)\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>)\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (simp add: tiny_dg_Arr_in_Vset dg_cs_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>)\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>Cod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "moreover"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>)\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>Cod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "from tiny_dg_Cod_vrange"], ["proof (chain)\npicking this:\n  \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "have \"\\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>) \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>)\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (auto intro: tiny_dg_Obj_in_Vset)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>)\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>Cod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "ultimately"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>)\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>)\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>)\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<R>\\<^sub>\\<circ> (\\<CC>\\<lparr>Cod\\<rparr>)\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>Cod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (simp add: Cod.vbrelation_Limit_in_VsetI \\<Z>_Limit_\\<alpha>\\<omega>)"], ["proof (state)\nthis:\n  \\<CC>\\<lparr>Cod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in tiny_digraph) tiny_dg_in_Vset: \"\\<CC> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<CC> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<CC> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "note [dg_cs_intros] = \n    tiny_dg_Obj_in_Vset \n    tiny_dg_Arr_in_Vset\n    tiny_dg_Dom_in_Vset\n    tiny_dg_Cod_in_Vset"], ["proof (state)\nthis:\n  \\<CC>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<CC>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<CC>\\<lparr>Dom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<CC>\\<lparr>Cod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<CC> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<CC> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (subst dg_def) (cs_concl cs_intro: dg_cs_intros V_cs_intros)"], ["proof (state)\nthis:\n  \\<CC> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma small_tiny_digraphs[simp]: \"small {\\<CC>. tiny_digraph \\<alpha> \\<CC>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. small {\\<CC>. tiny_digraph \\<alpha> \\<CC>}", "proof(rule down)"], ["proof (state)\ngoal (1 subgoal):\n 1. {\\<CC>. tiny_digraph \\<alpha> \\<CC>} \\<subseteq> elts ?x", "show \"{\\<CC>. tiny_digraph \\<alpha> \\<CC>} \\<subseteq> elts (set {\\<CC>. digraph \\<alpha> \\<CC>})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {\\<CC>. tiny_digraph \\<alpha> \\<CC>}\n    \\<subseteq> elts (ZFC_in_HOL.set {\\<CC>. digraph \\<alpha> \\<CC>})", "by (auto intro: dg_small_cs_intros)"], ["proof (state)\nthis:\n  {\\<CC>. tiny_digraph \\<alpha> \\<CC>}\n  \\<subseteq> elts (ZFC_in_HOL.set {\\<CC>. digraph \\<alpha> \\<CC>})\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tiny_digraphs_vsubset_Vset: \"set {\\<CC>. tiny_digraph \\<alpha> \\<CC>} \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set {\\<CC>. tiny_digraph \\<alpha> \\<CC>}\n    \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>", "by (rule vsubsetI) (simp add: tiny_digraph.tiny_dg_in_Vset)"], ["", "lemma (in digraph) dg_tiny_digraph_if_ge_Limit:\n  assumes \"\\<Z> \\<beta>\" and \"\\<alpha> \\<in>\\<^sub>\\<circ> \\<beta>\"\n  shows \"tiny_digraph \\<beta> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tiny_digraph \\<beta> \\<CC>", "proof(intro tiny_digraphI')"], ["proof (state)\ngoal (3 subgoals):\n 1. digraph \\<beta> \\<CC>\n 2. \\<CC>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<beta>\n 3. \\<CC>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<beta>", "interpret \\<beta>: \\<Z> \\<beta>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Z> \\<beta>", "by (rule assms(1))"], ["proof (state)\ngoal (3 subgoals):\n 1. digraph \\<beta> \\<CC>\n 2. \\<CC>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<beta>\n 3. \\<CC>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<beta>", "show \"digraph \\<beta> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. digraph \\<beta> \\<CC>", "by (intro dg_digraph_if_ge_Limit)\n      (use assms(2) in \\<open>cs_concl cs_intro: dg_cs_intros\\<close>)+"], ["proof (state)\nthis:\n  digraph \\<beta> \\<CC>\n\ngoal (2 subgoals):\n 1. \\<CC>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<beta>\n 2. \\<CC>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<beta>", "show \"\\<CC>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<beta>\" \"\\<CC>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<beta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<beta> &&&\n    \\<CC>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<beta>", "by (auto simp: \\<beta>.\\<Z>_\\<beta> assms(2) dg_Obj_in_Vset dg_Arr_in_Vset)"], ["proof (state)\nthis:\n  \\<CC>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<beta>\n  \\<CC>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<beta>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Opposite tiny digraph\\<close>"], ["", "lemma (in tiny_digraph) tiny_digraph_op: \"tiny_digraph \\<alpha> (op_dg \\<CC>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tiny_digraph \\<alpha> (op_dg \\<CC>)", "by (intro tiny_digraphI', unfold dg_op_simps)\n    (auto simp: tiny_dg_Obj_in_Vset tiny_dg_Arr_in_Vset dg_cs_simps dg_op_intros)"], ["", "lemmas tiny_digraph_op[dg_op_intros] = tiny_digraph.tiny_digraph_op"], ["", "subsection\\<open>Finite digraph\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "text\\<open>\nA finite digraph is a generalization of the concept of a finite category,\nas presented in nLab \n\\cite{noauthor_nlab_nodate}\\footnote{\n\\url{https://ncatlab.org/nlab/show/finite+category}\n}.\n\\<close>"], ["", "locale finite_digraph = digraph \\<alpha> \\<CC> for \\<alpha> \\<CC> +\n  assumes fin_dg_Obj_vfinite[dg_small_cs_intros]: \"vfinite (\\<CC>\\<lparr>Obj\\<rparr>)\"\n    and fin_dg_Arr_vfinite[dg_small_cs_intros]: \"vfinite (\\<CC>\\<lparr>Arr\\<rparr>)\""], ["", "lemmas [dg_small_cs_intros] = \n  finite_digraph.fin_dg_Obj_vfinite\n  finite_digraph.fin_dg_Arr_vfinite"], ["", "text\\<open>Rules.\\<close>"], ["", "lemma (in finite_digraph) finite_digraph_axioms'[dg_small_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\"\n  shows \"finite_digraph \\<alpha>' \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_digraph \\<alpha>' \\<CC>", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_digraph \\<alpha> \\<CC>", "by (rule finite_digraph_axioms)"], ["", "mk_ide rf finite_digraph_def[unfolded finite_digraph_axioms_def]\n  |intro finite_digraphI|\n  |dest finite_digraphD[dest]|\n  |elim finite_digraphE[elim]|"], ["", "text\\<open>Elementary properties.\\<close>"], ["", "sublocale finite_digraph \\<subseteq> tiny_digraph"], ["proof (prove)\ngoal (1 subgoal):\n 1. tiny_digraph \\<alpha> \\<CC>", "proof(rule tiny_digraphI')"], ["proof (state)\ngoal (3 subgoals):\n 1. digraph \\<alpha> \\<CC>\n 2. \\<CC>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 3. \\<CC>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"\\<CC>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by\n      (\n        cs_concl cs_intro: \n          dg_small_cs_intros V_cs_intros \n          dg_Obj_vsubset_Vset Limit_vfinite_in_VsetI\n      )"], ["proof (state)\nthis:\n  \\<CC>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (2 subgoals):\n 1. digraph \\<alpha> \\<CC>\n 2. \\<CC>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"\\<CC>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by \n      (\n        cs_concl cs_intro: \n          dg_small_cs_intros V_cs_intros \n          dg_Arr_vsubset_Vset Limit_vfinite_in_VsetI\n      )"], ["proof (state)\nthis:\n  \\<CC>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. digraph \\<alpha> \\<CC>", "qed (auto intro: dg_cs_intros)"], ["", "lemmas (in finite_digraph) fin_dg_tiny_digraph = tiny_digraph_axioms"], ["", "lemmas [dg_small_cs_intros] = finite_digraph.fin_dg_tiny_digraph"], ["", "text\\<open>Size.\\<close>"], ["", "lemma small_finite_digraphs[simp]: \"small {\\<CC>. finite_digraph \\<alpha> \\<CC>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. small {\\<CC>. finite_digraph \\<alpha> \\<CC>}", "proof(rule down)"], ["proof (state)\ngoal (1 subgoal):\n 1. {\\<CC>. finite_digraph \\<alpha> \\<CC>} \\<subseteq> elts ?x", "show \"{\\<CC>. finite_digraph \\<alpha> \\<CC>} \\<subseteq> elts (set {\\<CC>. digraph \\<alpha> \\<CC>})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {\\<CC>. finite_digraph \\<alpha> \\<CC>}\n    \\<subseteq> elts (ZFC_in_HOL.set {\\<CC>. digraph \\<alpha> \\<CC>})", "by (auto intro: dg_cs_intros)"], ["proof (state)\nthis:\n  {\\<CC>. finite_digraph \\<alpha> \\<CC>}\n  \\<subseteq> elts (ZFC_in_HOL.set {\\<CC>. digraph \\<alpha> \\<CC>})\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma finite_digraphs_vsubset_Vset: \"set {\\<CC>. finite_digraph \\<alpha> \\<CC>} \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set {\\<CC>. finite_digraph \\<alpha> \\<CC>}\n    \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>", "by \n    (\n      force simp: \n        tiny_digraph.tiny_dg_in_Vset finite_digraph.fin_dg_tiny_digraph\n    )"], ["", "subsubsection\\<open>Opposite finite digraph\\<close>"], ["", "lemma (in finite_digraph) fininte_digraph_op: \"finite_digraph \\<alpha> (op_dg \\<CC>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_digraph \\<alpha> (op_dg \\<CC>)", "by (intro finite_digraphI, unfold dg_op_simps)\n    (auto simp: dg_small_cs_intros dg_op_intros)"], ["", "lemmas fininte_digraph_op[dg_op_intros] = finite_digraph.fininte_digraph_op"], ["", "text\\<open>\\newpage\\<close>"], ["", "end"]]}