{"file_name": "/home/qj213/afp-2021-10-22/thys/CZH_Foundations/czh_semicategories/CZH_SMC_Small_Semifunctor.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CZH_Foundations", "problem_names": ["lemma (in is_tm_semifunctor) tm_smcf_is_tm_dghm':\n  assumes \"\\<alpha>' = \\<alpha>\"\n    and \"\\<AA>' = smc_dg \\<AA>\"\n    and \"\\<BB>' = smc_dg \\<BB>\"\n  shows \"smcf_dghm \\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'\"", "lemmas [slicing_intros] = is_tm_semifunctor.tm_smcf_is_tm_dghm'", "lemma (in is_tm_semifunctor) is_tm_semifunctor_axioms'[smc_small_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<AA>' = \\<AA>\" and \"\\<BB>' = \\<BB>\"\n  shows \"\\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'\"", "lemmas [smc_small_cs_intros] = is_tm_semifunctorD(1)", "lemmas_with [unfolded slicing_simps]:\n  tm_smcf_ObjMap_in_Vset[smc_small_cs_intros] = dghm.tm_dghm_ObjMap_in_Vset\n  and tm_smcf_ArrMap_in_Vset[smc_small_cs_intros] = dghm.tm_dghm_ArrMap_in_Vset", "lemma is_tm_semifunctorI':\n  assumes [simp]: \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n    and [simp]: \"\\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and [simp]: \"\\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and [simp]: \"semicategory \\<alpha> \\<BB>\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"", "lemma is_tm_semifunctorD':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"semicategory \\<alpha> \\<BB>\"\n    and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n    and \"\\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and \"\\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"", "lemmas [smc_small_cs_intros] = is_tm_semifunctorD'(1)", "lemma is_tm_semifunctorE':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  obtains \"semicategory \\<alpha> \\<BB>\"\n    and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n    and \"\\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and \"\\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"", "lemma small_all_tm_smcfs[simp]: \"small {\\<FF>. \\<exists>\\<AA> \\<BB>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>}\"", "lemma (in is_tm_semifunctor) is_tm_semifunctor_op: \n  \"op_smcf \\<FF> : op_smc \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> op_smc \\<BB>\"", "lemma (in is_tm_semifunctor) is_tm_semifunctor_op'[smc_op_intros]:  \n  assumes \"\\<AA>' = op_smc \\<AA>\" and \"\\<BB>' = op_smc \\<BB>\" and \"\\<alpha>' = \\<alpha>\"\n  shows \"op_smcf \\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'\"", "lemmas is_tm_semifunctor_op[smc_op_intros] = is_tm_semifunctor.is_tm_semifunctor_op'", "lemma smcf_comp_is_tm_semifunctor[smc_small_cs_intros]:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"", "lemma (in is_semifunctor) smcf_is_tm_semifunctor_if_HomDom_finite_semicategory:\n  assumes \"finite_semicategory \\<alpha> \\<AA>\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"", "lemma smcf_const_is_tm_semifunctor: \n  assumes \"tiny_semicategory \\<alpha> \\<CC>\"\n    and \"semicategory \\<alpha> \\<DD>\" \n    and \"f : a \\<mapsto>\\<^bsub>\\<DD>\\<^esub> a\"\n    and \"f \\<circ>\\<^sub>A\\<^bsub>\\<DD>\\<^esub> f = f\"\n  shows \"smcf_const \\<CC> \\<DD> a f : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<DD>\"", "lemma smcf_const_is_tm_semifunctor':\n  assumes \"tiny_semicategory \\<alpha> \\<CC>\"\n    and \"semicategory \\<alpha> \\<DD>\" \n    and \"f : a \\<mapsto>\\<^bsub>\\<DD>\\<^esub> a\"\n    and \"f \\<circ>\\<^sub>A\\<^bsub>\\<DD>\\<^esub> f = f\"\n    and \"\\<CC>' = \\<CC>\"\n    and \"\\<DD>' = \\<DD>\"\n  shows \"smcf_const \\<CC> \\<DD> a f : \\<CC>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<DD>'\"", "lemmas [smc_small_cs_intros] = smcf_const_is_tm_semifunctor'", "lemmas [slicing_intros] = is_tiny_semifunctor.tiny_smcf_is_tiny_dghm", "lemma (in is_tiny_semifunctor) is_tiny_semifunctor_axioms'[smc_small_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<AA>' = \\<AA>\" and \"\\<BB>' = \\<BB>\"\n  shows \"\\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'\"", "lemmas [smc_small_cs_intros] = is_tiny_semifunctorD(1)", "lemma is_tiny_semifunctorI':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n    and \"tiny_semicategory \\<alpha> \\<AA>\"\n    and \"tiny_semicategory \\<alpha> \\<BB>\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"", "lemma is_tiny_semifunctorD':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n    and \"tiny_semicategory \\<alpha> \\<AA>\"\n    and \"tiny_semicategory \\<alpha> \\<BB>\"", "lemmas [smc_small_cs_intros] = is_tiny_semifunctorD'(2,3)", "lemma is_tiny_semifunctorE':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  obtains \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n    and \"tiny_semicategory \\<alpha> \\<AA>\"\n    and \"tiny_semicategory \\<alpha> \\<BB>\"", "lemma is_tiny_semifunctor_iff:\n  \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<longleftrightarrow>\n    (\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<and> tiny_semicategory \\<alpha> \\<AA> \\<and> tiny_semicategory \\<alpha> \\<BB>)\"", "lemma (in is_tiny_semifunctor) tiny_smcf_in_Vset: \"\\<FF> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"", "lemma small_all_tiny_smcfs[simp]: \"small {\\<FF>. \\<exists>\\<AA> \\<BB>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>}\"", "lemma tiny_smcfs_vsubset_Vset[simp]: \n  \"set {\\<FF>. \\<exists>\\<AA> \\<BB>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>} \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\"", "lemma (in is_semifunctor) smcf_is_tiny_semifunctor_if_ge_Limit:\n  assumes \"\\<Z> \\<beta>\" and \"\\<alpha> \\<in>\\<^sub>\\<circ> \\<beta>\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<beta>\\<^esub> \\<BB>\"", "lemma (in is_tiny_semifunctor) is_tiny_semifunctor_op: \n  \"op_smcf \\<FF> : op_smc \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> op_smc \\<BB>\"", "lemma (in is_tiny_semifunctor) is_tiny_semifunctor_op'[smc_op_intros]:  \n  assumes \"\\<AA>' = op_smc \\<AA>\" and \"\\<BB>' = op_smc \\<BB>\" and \"\\<alpha>' = \\<alpha>\"\n  shows \"op_smcf \\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'\"", "lemmas is_tiny_semifunctor_op[smc_op_intros] = \n  is_tiny_semifunctor.is_tiny_semifunctor_op'", "lemma smcf_comp_is_tiny_semifunctor[smc_small_cs_intros]:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"", "lemma smcf_const_is_tiny_semifunctor:\n  assumes \"tiny_semicategory \\<alpha> \\<CC>\" \n    and \"tiny_semicategory \\<alpha> \\<DD>\" \n    and \"f : a \\<mapsto>\\<^bsub>\\<DD>\\<^esub> a\"\n    and \"f \\<circ>\\<^sub>A\\<^bsub>\\<DD>\\<^esub> f = f\"\n  shows \"smcf_const \\<CC> \\<DD> a f : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<DD>\"", "lemma smcf_const_is_tiny_semifunctor'[smc_small_cs_intros]:\n  assumes \"tiny_semicategory \\<alpha> \\<CC>\"\n    and \"tiny_semicategory \\<alpha> \\<DD>\" \n    and \"f : a \\<mapsto>\\<^bsub>\\<DD>\\<^esub> a\"\n    and \"f \\<circ>\\<^sub>A\\<^bsub>\\<DD>\\<^esub> f = f\"\n    and \"\\<CC>' = \\<CC>\"\n    and \"\\<DD>' = \\<DD>\"\n  shows \"smcf_const \\<CC> \\<DD> a f : \\<CC>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<DD>'\""], "translations": [["", "lemma (in is_tm_semifunctor) tm_smcf_is_tm_dghm':\n  assumes \"\\<alpha>' = \\<alpha>\"\n    and \"\\<AA>' = smc_dg \\<AA>\"\n    and \"\\<BB>' = smc_dg \\<BB>\"\n  shows \"smcf_dghm \\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm \\<FF> :\n    \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm \\<FF> :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                   \\<BB>", "by (rule tm_smcf_is_tm_dghm)"], ["", "lemmas [slicing_intros] = is_tm_semifunctor.tm_smcf_is_tm_dghm'"], ["", "text\\<open>Rules.\\<close>"], ["", "lemma (in is_tm_semifunctor) is_tm_semifunctor_axioms'[smc_small_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<AA>' = \\<AA>\" and \"\\<BB>' = \\<BB>\"\n  shows \"\\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule is_tm_semifunctor_axioms)"], ["", "mk_ide rf is_tm_semifunctor_def[unfolded is_tm_semifunctor_axioms_def]\n  |intro is_tm_semifunctorI|\n  |dest is_tm_semifunctorD[dest]|\n  |elim is_tm_semifunctorE[elim]|"], ["", "lemmas [smc_small_cs_intros] = is_tm_semifunctorD(1)"], ["", "text\\<open>Slicing.\\<close>"], ["", "context is_tm_semifunctor\nbegin"], ["", "interpretation dghm: is_tm_dghm \\<alpha> \\<open>smc_dg \\<AA>\\<close> \\<open>smc_dg \\<BB>\\<close> \\<open>smcf_dghm \\<FF>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm \\<FF> :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                   \\<BB>", "by (rule tm_smcf_is_tm_dghm)"], ["", "lemmas_with [unfolded slicing_simps]:\n  tm_smcf_ObjMap_in_Vset[smc_small_cs_intros] = dghm.tm_dghm_ObjMap_in_Vset\n  and tm_smcf_ArrMap_in_Vset[smc_small_cs_intros] = dghm.tm_dghm_ArrMap_in_Vset"], ["", "end"], ["", "text\\<open>Elementary properties.\\<close>"], ["", "sublocale is_tm_semifunctor \\<subseteq> HomDom: tiny_semicategory \\<alpha> \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. tiny_semicategory \\<alpha> \\<AA>", "proof(rule tiny_semicategoryI')"], ["proof (state)\ngoal (3 subgoals):\n 1. semicategory \\<alpha> \\<AA>\n 2. \\<AA>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 3. \\<AA>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"\\<AA>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (rule vdomain_in_VsetI[OF tm_smcf_ObjMap_in_Vset, unfolded smc_cs_simps])"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (2 subgoals):\n 1. semicategory \\<alpha> \\<AA>\n 2. \\<AA>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"\\<AA>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (rule vdomain_in_VsetI[OF tm_smcf_ArrMap_in_Vset, unfolded smc_cs_simps])"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<AA>", "qed (simp add: smc_cs_intros)"], ["", "text\\<open>Further rules.\\<close>"], ["", "lemma is_tm_semifunctorI':\n  assumes [simp]: \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n    and [simp]: \"\\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and [simp]: \"\\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and [simp]: \"semicategory \\<alpha> \\<BB>\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "proof(intro is_tm_semifunctorI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n 2. smcf_dghm \\<FF> :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                   \\<BB>", "interpret is_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(1))"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n 2. smcf_dghm \\<FF> :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                   \\<BB>", "show \"smcf_dghm \\<FF> : smc_dg \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> smc_dg \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm \\<FF> :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                   \\<BB>", "by (intro is_tm_dghmI', unfold slicing_simps) (auto simp: slicing_intros)"], ["proof (state)\nthis:\n  smcf_dghm \\<FF> :\n  smc_dg\n   \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                 \\<BB>\n\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "qed simp_all"], ["", "lemma is_tm_semifunctorD':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"semicategory \\<alpha> \\<BB>\"\n    and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n    and \"\\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and \"\\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (semicategory \\<alpha> \\<BB> &&&\n     \\<FF> :\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>) &&&\n    \\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha> &&&\n    \\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "proof-"], ["proof (state)\ngoal (4 subgoals):\n 1. semicategory \\<alpha> \\<BB>\n 2. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n 3. \\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 4. \\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "interpret is_tm_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(1))"], ["proof (state)\ngoal (4 subgoals):\n 1. semicategory \\<alpha> \\<BB>\n 2. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n 3. \\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 4. \\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"semicategory \\<alpha> \\<BB>\"\n    and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n    and \"\\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and \"\\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (semicategory \\<alpha> \\<BB> &&&\n     \\<FF> :\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>) &&&\n    \\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha> &&&\n    \\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (auto intro: smc_cs_intros smc_small_cs_intros)"], ["proof (state)\nthis:\n  semicategory \\<alpha> \\<BB>\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  \\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [smc_small_cs_intros] = is_tm_semifunctorD'(1)"], ["", "lemma is_tm_semifunctorE':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  obtains \"semicategory \\<alpha> \\<BB>\"\n    and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n    and \"\\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and \"\\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>semicategory \\<alpha> \\<BB>;\n      \\<FF> :\n      \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>;\n      \\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n      \\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using is_tm_semifunctorD'[OF assms]"], ["proof (prove)\nusing this:\n  semicategory \\<alpha> \\<BB>\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  \\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>semicategory \\<alpha> \\<BB>;\n      \\<FF> :\n      \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>;\n      \\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n      \\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by simp"], ["", "text\\<open>Size.\\<close>"], ["", "lemma small_all_tm_smcfs[simp]: \"small {\\<FF>. \\<exists>\\<AA> \\<BB>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. small\n     {\\<FF>.\n      \\<exists>\\<AA> \\<BB>.\n         \\<FF> :\n         \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>}", "proof(rule down)"], ["proof (state)\ngoal (1 subgoal):\n 1. {\\<FF>.\n     \\<exists>\\<AA> \\<BB>.\n        \\<FF> :\n        \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>}\n    \\<subseteq> elts ?x", "show \n    \"{\\<FF>. \\<exists>\\<AA> \\<BB>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>} \\<subseteq>\n      elts (set {\\<FF>. \\<exists>\\<AA> \\<BB>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {\\<FF>.\n     \\<exists>\\<AA> \\<BB>.\n        \\<FF> :\n        \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>}\n    \\<subseteq> elts (all_smcfs \\<alpha>)", "proof\n    (\n      simp only: elts_of_set small_all_smcfs if_True, \n      rule subsetI, \n      unfold mem_Collect_eq\n    )"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<exists>\\<AA> \\<BB>.\n          x :\n          \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n       \\<exists>\\<AA> \\<BB>.\n          x :\n          \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "fix \\<FF>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<exists>\\<AA> \\<BB>.\n          x :\n          \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n       \\<exists>\\<AA> \\<BB>.\n          x :\n          \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "assume \"\\<exists>\\<AA> \\<BB>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (state)\nthis:\n  \\<exists>\\<AA> \\<BB>.\n     \\<FF> :\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<exists>\\<AA> \\<BB>.\n          x :\n          \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n       \\<exists>\\<AA> \\<BB>.\n          x :\n          \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "then"], ["proof (chain)\npicking this:\n  \\<exists>\\<AA> \\<BB>.\n     \\<FF> :\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "obtain \\<AA> \\<BB> where \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\nusing this:\n  \\<exists>\\<AA> \\<BB>.\n     \\<FF> :\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<AA> \\<BB>.\n        \\<FF> :\n        \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<exists>\\<AA> \\<BB>.\n          x :\n          \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n       \\<exists>\\<AA> \\<BB>.\n          x :\n          \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "then"], ["proof (chain)\npicking this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "interpret is_tm_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\nusing this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by simp"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<exists>\\<AA> \\<BB>.\n          x :\n          \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n       \\<exists>\\<AA> \\<BB>.\n          x :\n          \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "show \"\\<exists>\\<AA> \\<BB>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<AA> \\<BB>.\n       \\<FF> :\n       \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (auto intro: is_semifunctor_axioms)"], ["proof (state)\nthis:\n  \\<exists>\\<AA> \\<BB>.\n     \\<FF> :\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {\\<FF>.\n   \\<exists>\\<AA> \\<BB>.\n      \\<FF> :\n      \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>}\n  \\<subseteq> elts (all_smcfs \\<alpha>)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Opposite semifunctor with tiny maps\\<close>"], ["", "lemma (in is_tm_semifunctor) is_tm_semifunctor_op: \n  \"op_smcf \\<FF> : op_smc \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> op_smc \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_smcf \\<FF> :\n    op_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> op_smc\n                           \\<BB>", "by (intro is_tm_semifunctorI', unfold smc_op_simps)\n    (cs_concl cs_intro: smc_cs_intros smc_op_intros smc_small_cs_intros)"], ["", "lemma (in is_tm_semifunctor) is_tm_semifunctor_op'[smc_op_intros]:  \n  assumes \"\\<AA>' = op_smc \\<AA>\" and \"\\<BB>' = op_smc \\<BB>\" and \"\\<alpha>' = \\<alpha>\"\n  shows \"op_smcf \\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_smcf \\<FF> :\n    \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. op_smcf \\<FF> :\n    op_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> op_smc\n                           \\<BB>", "by (rule is_tm_semifunctor_op)"], ["", "lemmas is_tm_semifunctor_op[smc_op_intros] = is_tm_semifunctor.is_tm_semifunctor_op'"], ["", "subsubsection\\<open>Composition of semifunctors with tiny maps\\<close>"], ["", "lemma smcf_comp_is_tm_semifunctor[smc_small_cs_intros]:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "proof(rule is_tm_semifunctorI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n 2. smcf_dghm (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                   \\<CC>", "interpret \\<FF>: is_tm_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(2))"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n 2. smcf_dghm (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                   \\<CC>", "interpret \\<GG>: is_tm_semifunctor \\<alpha> \\<BB> \\<CC> \\<GG>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(1))"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n 2. smcf_dghm (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                   \\<CC>", "show \"smcf_dghm (\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF>) : smc_dg \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> smc_dg \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                   \\<CC>", "unfolding slicing_commute[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n    smcf_dghm \\<FF> :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                   \\<CC>", "using \\<FF>.tm_smcf_is_tm_dghm \\<GG>.tm_smcf_is_tm_dghm"], ["proof (prove)\nusing this:\n  smcf_dghm \\<FF> :\n  smc_dg\n   \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                 \\<BB>\n  smcf_dghm \\<GG> :\n  smc_dg\n   \\<BB> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                 \\<CC>\n\ngoal (1 subgoal):\n 1. smcf_dghm \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n    smcf_dghm \\<FF> :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                   \\<CC>", "by (auto simp: dg_small_cs_intros)"], ["proof (state)\nthis:\n  smcf_dghm (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n  smc_dg\n   \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                 \\<CC>\n\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "show \"\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (auto intro: smc_cs_intros)"], ["proof (state)\nthis:\n  \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Finite semicategories and semifunctors with tiny maps\\<close>"], ["", "lemma (in is_semifunctor) smcf_is_tm_semifunctor_if_HomDom_finite_semicategory:\n  assumes \"finite_semicategory \\<alpha> \\<AA>\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "proof(intro is_tm_semifunctorI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n 2. smcf_dghm \\<FF> :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                   \\<BB>", "interpret \\<AA>: finite_semicategory \\<alpha> \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_semicategory \\<alpha> \\<AA>", "by (rule assms(1))"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n 2. smcf_dghm \\<FF> :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                   \\<BB>", "show \"smcf_dghm \\<FF> : smc_dg \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> smc_dg \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm \\<FF> :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                   \\<BB>", "by \n      (\n        rule is_dghm.dghm_is_tm_dghm_if_HomDom_finite_digraph[\n          OF smcf_is_dghm \\<AA>.fin_smc_finite_digraph\n          ]\n      )"], ["proof (state)\nthis:\n  smcf_dghm \\<FF> :\n  smc_dg\n   \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                 \\<BB>\n\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "qed (auto intro: smc_cs_intros)"], ["", "subsubsection\\<open>Constant semifunctor with tiny maps\\<close>"], ["", "lemma smcf_const_is_tm_semifunctor: \n  assumes \"tiny_semicategory \\<alpha> \\<CC>\"\n    and \"semicategory \\<alpha> \\<DD>\" \n    and \"f : a \\<mapsto>\\<^bsub>\\<DD>\\<^esub> a\"\n    and \"f \\<circ>\\<^sub>A\\<^bsub>\\<DD>\\<^esub> f = f\"\n  shows \"smcf_const \\<CC> \\<DD> a f : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<DD>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_const \\<CC> \\<DD> a f :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<DD>", "proof(intro is_tm_semifunctorI)"], ["proof (state)\ngoal (2 subgoals):\n 1. dghm_const \\<CC> \\<DD> a f :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\n 2. smcf_dghm (dghm_const \\<CC> \\<DD> a f) :\n    smc_dg\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                   \\<DD>", "interpret \\<CC>: tiny_semicategory \\<alpha> \\<CC>"], ["proof (prove)\ngoal (1 subgoal):\n 1. tiny_semicategory \\<alpha> \\<CC>", "by (rule assms(1))"], ["proof (state)\ngoal (2 subgoals):\n 1. dghm_const \\<CC> \\<DD> a f :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\n 2. smcf_dghm (dghm_const \\<CC> \\<DD> a f) :\n    smc_dg\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                   \\<DD>", "interpret \\<DD>: semicategory \\<alpha> \\<DD>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<DD>", "by (rule assms(2))"], ["proof (state)\ngoal (2 subgoals):\n 1. dghm_const \\<CC> \\<DD> a f :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\n 2. smcf_dghm (dghm_const \\<CC> \\<DD> a f) :\n    smc_dg\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                   \\<DD>", "show \"smcf_dghm (smcf_const \\<CC> \\<DD> a f) : smc_dg \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> smc_dg \\<DD>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm (dghm_const \\<CC> \\<DD> a f) :\n    smc_dg\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                   \\<DD>", "unfolding slicing_commute[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_const (smc_dg \\<CC>) (smc_dg \\<DD>) a f :\n    smc_dg\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                   \\<DD>", "by (rule dghm_const_is_tm_dghm) \n      (auto simp: slicing_simps \\<CC>.tiny_smc_tiny_digraph assms(3) \\<DD>.smc_digraph)"], ["proof (state)\nthis:\n  smcf_dghm (dghm_const \\<CC> \\<DD> a f) :\n  smc_dg\n   \\<CC> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                 \\<DD>\n\ngoal (1 subgoal):\n 1. dghm_const \\<CC> \\<DD> a f :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>", "from assms"], ["proof (chain)\npicking this:\n  tiny_semicategory \\<alpha> \\<CC>\n  semicategory \\<alpha> \\<DD>\n  f : a \\<mapsto>\\<^bsub>\\<DD>\\<^esub> a\n  f \\<circ>\\<^sub>A\\<^bsub>\\<DD>\\<^esub> f = f", "show \"smcf_const \\<CC> \\<DD> a f : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\""], ["proof (prove)\nusing this:\n  tiny_semicategory \\<alpha> \\<CC>\n  semicategory \\<alpha> \\<DD>\n  f : a \\<mapsto>\\<^bsub>\\<DD>\\<^esub> a\n  f \\<circ>\\<^sub>A\\<^bsub>\\<DD>\\<^esub> f = f\n\ngoal (1 subgoal):\n 1. dghm_const \\<CC> \\<DD> a f :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>", "by (cs_concl cs_simp: smc_cs_simps cs_intro: smc_cs_intros)"], ["proof (state)\nthis:\n  dghm_const \\<CC> \\<DD> a f :\n  \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smcf_const_is_tm_semifunctor':\n  assumes \"tiny_semicategory \\<alpha> \\<CC>\"\n    and \"semicategory \\<alpha> \\<DD>\" \n    and \"f : a \\<mapsto>\\<^bsub>\\<DD>\\<^esub> a\"\n    and \"f \\<circ>\\<^sub>A\\<^bsub>\\<DD>\\<^esub> f = f\"\n    and \"\\<CC>' = \\<CC>\"\n    and \"\\<DD>' = \\<DD>\"\n  shows \"smcf_const \\<CC> \\<DD> a f : \\<CC>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<DD>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_const \\<CC> \\<DD> a f :\n    \\<CC>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<DD>'", "using assms(1-4)"], ["proof (prove)\nusing this:\n  tiny_semicategory \\<alpha> \\<CC>\n  semicategory \\<alpha> \\<DD>\n  f : a \\<mapsto>\\<^bsub>\\<DD>\\<^esub> a\n  f \\<circ>\\<^sub>A\\<^bsub>\\<DD>\\<^esub> f = f\n\ngoal (1 subgoal):\n 1. dghm_const \\<CC> \\<DD> a f :\n    \\<CC>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<DD>'", "unfolding assms(5,6)"], ["proof (prove)\nusing this:\n  tiny_semicategory \\<alpha> \\<CC>\n  semicategory \\<alpha> \\<DD>\n  f : a \\<mapsto>\\<^bsub>\\<DD>\\<^esub> a\n  f \\<circ>\\<^sub>A\\<^bsub>\\<DD>\\<^esub> f = f\n\ngoal (1 subgoal):\n 1. dghm_const \\<CC> \\<DD> a f :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<DD>", "by (rule smcf_const_is_tm_semifunctor)"], ["", "lemmas [smc_small_cs_intros] = smcf_const_is_tm_semifunctor'"], ["", "subsection\\<open>Tiny semifunctor\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "locale is_tiny_semifunctor = is_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF> for \\<alpha> \\<AA> \\<BB> \\<FF> + \n  assumes tiny_smcf_is_tiny_dghm[slicing_intros]: \n    \"smcf_dghm \\<FF> : smc_dg \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> smc_dg \\<BB>\""], ["", "syntax \"_is_tiny_semifunctor\" :: \"V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> bool\"\n  (\\<open>(_ :/ _ \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<index> _)\\<close> [51, 51, 51] 51)"], ["", "translations \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \\<rightleftharpoons> \"CONST is_tiny_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>\""], ["", "abbreviation (input) is_cn_tiny_smcf :: \"V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> bool\"\n  where \"is_cn_tiny_smcf \\<alpha> \\<AA> \\<BB> \\<FF> \\<equiv> \\<FF> : op_smc \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["", "syntax \"_is_cn_tiny_smcf\" :: \"V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> bool\" \n  (\\<open>(_ :/ _ \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<mapsto>\\<mapsto>\\<index> _)\\<close> [51, 51, 51] 51)"], ["", "translations \"\\<FF> : \\<AA> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \\<rightharpoonup> \"CONST is_cn_tiny_smcf \\<alpha> \\<AA> \\<BB> \\<FF>\""], ["", "abbreviation all_tiny_smcfs :: \"V \\<Rightarrow> V\"\n  where \"all_tiny_smcfs \\<alpha> \\<equiv> set {\\<FF>. \\<exists>\\<AA> \\<BB>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>}\""], ["", "abbreviation tiny_smcfs :: \"V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V\"\n  where \"tiny_smcfs \\<alpha> \\<AA> \\<BB> \\<equiv> set {\\<FF>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>}\""], ["", "lemmas [slicing_intros] = is_tiny_semifunctor.tiny_smcf_is_tiny_dghm"], ["", "text\\<open>Rules.\\<close>"], ["", "lemma (in is_tiny_semifunctor) is_tiny_semifunctor_axioms'[smc_small_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<AA>' = \\<AA>\" and \"\\<BB>' = \\<BB>\"\n  shows \"\\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule is_tiny_semifunctor_axioms)"], ["", "mk_ide rf is_tiny_semifunctor_def[unfolded is_tiny_semifunctor_axioms_def]\n  |intro is_tiny_semifunctorI|\n  |dest is_tiny_semifunctorD[dest]|\n  |elim is_tiny_semifunctorE[elim]|"], ["", "lemmas [smc_small_cs_intros] = is_tiny_semifunctorD(1)"], ["", "text\\<open>Elementary properties.\\<close>"], ["", "sublocale is_tiny_semifunctor \\<subseteq> HomDom: tiny_semicategory \\<alpha> \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. tiny_semicategory \\<alpha> \\<AA>", "proof(intro tiny_semicategoryI')"], ["proof (state)\ngoal (3 subgoals):\n 1. semicategory \\<alpha> \\<AA>\n 2. \\<AA>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 3. \\<AA>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "interpret dghm: is_tiny_dghm \\<alpha> \\<open>smc_dg \\<AA>\\<close> \\<open>smc_dg \\<BB>\\<close> \\<open>smcf_dghm \\<FF>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm \\<FF> :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                   \\<BB>", "by (rule tiny_smcf_is_tiny_dghm)"], ["proof (state)\ngoal (3 subgoals):\n 1. semicategory \\<alpha> \\<AA>\n 2. \\<AA>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 3. \\<AA>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"\\<AA>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (rule dghm.HomDom.tiny_dg_Obj_in_Vset[unfolded slicing_simps])"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (2 subgoals):\n 1. semicategory \\<alpha> \\<AA>\n 2. \\<AA>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"\\<AA>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (rule dghm.HomDom.tiny_dg_Arr_in_Vset[unfolded slicing_simps])"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<AA>", "qed (auto simp: smc_cs_intros)"], ["", "sublocale is_tiny_semifunctor \\<subseteq> HomCod: tiny_semicategory \\<alpha> \\<BB>"], ["proof (prove)\ngoal (1 subgoal):\n 1. tiny_semicategory \\<alpha> \\<BB>", "proof(intro tiny_semicategoryI')"], ["proof (state)\ngoal (3 subgoals):\n 1. semicategory \\<alpha> \\<BB>\n 2. \\<BB>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 3. \\<BB>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "interpret dghm: is_tiny_dghm \\<alpha> \\<open>smc_dg \\<AA>\\<close> \\<open>smc_dg \\<BB>\\<close> \\<open>smcf_dghm \\<FF>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm \\<FF> :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                   \\<BB>", "by (rule tiny_smcf_is_tiny_dghm)"], ["proof (state)\ngoal (3 subgoals):\n 1. semicategory \\<alpha> \\<BB>\n 2. \\<BB>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 3. \\<BB>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"\\<BB>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (rule dghm.HomCod.tiny_dg_Obj_in_Vset[unfolded slicing_simps])"], ["proof (state)\nthis:\n  \\<BB>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (2 subgoals):\n 1. semicategory \\<alpha> \\<BB>\n 2. \\<BB>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"\\<BB>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (rule dghm.HomCod.tiny_dg_Arr_in_Vset[unfolded slicing_simps])"], ["proof (state)\nthis:\n  \\<BB>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<BB>", "qed (auto simp: smc_cs_intros)"], ["", "sublocale is_tiny_semifunctor \\<subseteq> is_tm_semifunctor"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "proof(intro is_tm_semifunctorI')"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n 2. \\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 3. \\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 4. semicategory \\<alpha> \\<BB>", "interpret dghm: is_tiny_dghm \\<alpha> \\<open>smc_dg \\<AA>\\<close> \\<open>smc_dg \\<BB>\\<close> \\<open>smcf_dghm \\<FF>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm \\<FF> :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> smc_dg\n                                   \\<BB>", "by (rule tiny_smcf_is_tiny_dghm)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n 2. \\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 3. \\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 4. semicategory \\<alpha> \\<BB>", "note Vset[unfolded slicing_simps] = \n    dghm.tiny_dghm_ObjMap_in_Vset\n    dghm.tiny_dghm_ArrMap_in_Vset"], ["proof (state)\nthis:\n  \\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (4 subgoals):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n 2. \\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 3. \\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 4. semicategory \\<alpha> \\<BB>", "show \"\\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" \"\\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha> &&&\n    \\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (intro Vset)+"], ["proof (state)\nthis:\n  \\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (2 subgoals):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n 2. semicategory \\<alpha> \\<BB>", "qed (auto simp: smc_cs_intros)"], ["", "text\\<open>Further rules.\\<close>"], ["", "lemma is_tiny_semifunctorI':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n    and \"tiny_semicategory \\<alpha> \\<AA>\"\n    and \"tiny_semicategory \\<alpha> \\<BB>\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "using assms"], ["proof (prove)\nusing this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  tiny_semicategory \\<alpha> \\<AA>\n  tiny_semicategory \\<alpha> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by \n    (\n      auto simp: \n        smc_cs_simps \n        smc_cs_intros \n        is_semifunctor.smcf_is_dghm \n        is_tiny_dghm.intro \n        is_tiny_semifunctorI \n        tiny_semicategory.tiny_smc_tiny_digraph\n    )"], ["", "lemma is_tiny_semifunctorD':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n    and \"tiny_semicategory \\<alpha> \\<AA>\"\n    and \"tiny_semicategory \\<alpha> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> &&&\n    tiny_semicategory \\<alpha> \\<AA> &&& tiny_semicategory \\<alpha> \\<BB>", "proof-"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n 2. tiny_semicategory \\<alpha> \\<AA>\n 3. tiny_semicategory \\<alpha> \\<BB>", "interpret is_tiny_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(1))"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n 2. tiny_semicategory \\<alpha> \\<AA>\n 3. tiny_semicategory \\<alpha> \\<BB>", "show \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n    and \"tiny_semicategory \\<alpha> \\<AA>\" \n    and \"tiny_semicategory \\<alpha> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> &&&\n    tiny_semicategory \\<alpha> \\<AA> &&& tiny_semicategory \\<alpha> \\<BB>", "by (auto intro: smc_small_cs_intros)"], ["proof (state)\nthis:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  tiny_semicategory \\<alpha> \\<AA>\n  tiny_semicategory \\<alpha> \\<BB>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [smc_small_cs_intros] = is_tiny_semifunctorD'(2,3)"], ["", "lemma is_tiny_semifunctorE':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  obtains \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n    and \"tiny_semicategory \\<alpha> \\<AA>\"\n    and \"tiny_semicategory \\<alpha> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>\\<FF> :\n              \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>;\n      tiny_semicategory \\<alpha> \\<AA>;\n      tiny_semicategory \\<alpha> \\<BB>\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using is_tiny_semifunctorD'[OF assms]"], ["proof (prove)\nusing this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  tiny_semicategory \\<alpha> \\<AA>\n  tiny_semicategory \\<alpha> \\<BB>\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>\\<FF> :\n              \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>;\n      tiny_semicategory \\<alpha> \\<AA>;\n      tiny_semicategory \\<alpha> \\<BB>\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["", "lemma is_tiny_semifunctor_iff:\n  \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<longleftrightarrow>\n    (\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<and> tiny_semicategory \\<alpha> \\<AA> \\<and> tiny_semicategory \\<alpha> \\<BB>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB> =\n    (\\<FF> :\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<and>\n     tiny_semicategory \\<alpha> \\<AA> \\<and>\n     tiny_semicategory \\<alpha> \\<BB>)", "by (auto intro: is_tiny_semifunctorI' dest: is_tiny_semifunctorD'(2,3))"], ["", "text\\<open>Size.\\<close>"], ["", "lemma (in is_tiny_semifunctor) tiny_smcf_in_Vset: \"\\<FF> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<FF> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "note [smc_cs_intros] = \n    tm_smcf_ObjMap_in_Vset \n    tm_smcf_ArrMap_in_Vset\n    HomDom.tiny_smc_in_Vset \n    HomCod.tiny_smc_in_Vset"], ["proof (state)\nthis:\n  \\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<AA> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<BB> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<FF> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (subst smcf_def) \n      (cs_concl cs_simp: smc_cs_simps cs_intro: smc_cs_intros V_cs_intros)"], ["proof (state)\nthis:\n  \\<FF> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma small_all_tiny_smcfs[simp]: \"small {\\<FF>. \\<exists>\\<AA> \\<BB>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. small\n     {\\<FF>.\n      \\<exists>\\<AA> \\<BB>.\n         \\<FF> :\n         \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>}", "proof(rule down)"], ["proof (state)\ngoal (1 subgoal):\n 1. {\\<FF>.\n     \\<exists>\\<AA> \\<BB>.\n        \\<FF> :\n        \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>}\n    \\<subseteq> elts ?x", "show \n    \"{\\<FF>. \\<exists>\\<AA> \\<BB>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>} \\<subseteq> \n      elts (set {\\<FF>. \\<exists>\\<AA> \\<BB>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {\\<FF>.\n     \\<exists>\\<AA> \\<BB>.\n        \\<FF> :\n        \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>}\n    \\<subseteq> elts (all_smcfs \\<alpha>)", "proof\n    (\n      simp only: elts_of_set small_all_smcfs if_True, \n      rule subsetI, \n      unfold mem_Collect_eq\n    )"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<exists>\\<AA> \\<BB>.\n          x :\n          \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n       \\<exists>\\<AA> \\<BB>.\n          x :\n          \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "fix \\<FF>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<exists>\\<AA> \\<BB>.\n          x :\n          \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n       \\<exists>\\<AA> \\<BB>.\n          x :\n          \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "assume \"\\<exists>\\<AA> \\<BB>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (state)\nthis:\n  \\<exists>\\<AA> \\<BB>.\n     \\<FF> :\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<exists>\\<AA> \\<BB>.\n          x :\n          \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n       \\<exists>\\<AA> \\<BB>.\n          x :\n          \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "then"], ["proof (chain)\npicking this:\n  \\<exists>\\<AA> \\<BB>.\n     \\<FF> :\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "obtain \\<AA> \\<BB> where \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\nusing this:\n  \\<exists>\\<AA> \\<BB>.\n     \\<FF> :\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<AA> \\<BB>.\n        \\<FF> :\n        \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<exists>\\<AA> \\<BB>.\n          x :\n          \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n       \\<exists>\\<AA> \\<BB>.\n          x :\n          \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "then"], ["proof (chain)\npicking this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "interpret is_tiny_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\nusing this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by simp"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<exists>\\<AA> \\<BB>.\n          x :\n          \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n       \\<exists>\\<AA> \\<BB>.\n          x :\n          \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "show \"\\<exists>\\<AA> \\<BB>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<AA> \\<BB>.\n       \\<FF> :\n       \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "using is_semifunctor_axioms"], ["proof (prove)\nusing this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<AA> \\<BB>.\n       \\<FF> :\n       \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by auto"], ["proof (state)\nthis:\n  \\<exists>\\<AA> \\<BB>.\n     \\<FF> :\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {\\<FF>.\n   \\<exists>\\<AA> \\<BB>.\n      \\<FF> :\n      \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>}\n  \\<subseteq> elts (all_smcfs \\<alpha>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tiny_smcfs_vsubset_Vset[simp]: \n  \"set {\\<FF>. \\<exists>\\<AA> \\<BB>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>} \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. all_tiny_smcfs \\<alpha> \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>", "proof(rule vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> all_tiny_smcfs \\<alpha> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "fix \\<FF>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> all_tiny_smcfs \\<alpha> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "assume \"\\<FF> \\<in>\\<^sub>\\<circ> all_tiny_smcfs \\<alpha>\""], ["proof (state)\nthis:\n  \\<FF> \\<in>\\<^sub>\\<circ> all_tiny_smcfs \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> all_tiny_smcfs \\<alpha> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "then"], ["proof (chain)\npicking this:\n  \\<FF> \\<in>\\<^sub>\\<circ> all_tiny_smcfs \\<alpha>", "obtain \\<AA> \\<BB> where \\<FF>: \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\nusing this:\n  \\<FF> \\<in>\\<^sub>\\<circ> all_tiny_smcfs \\<alpha>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<AA> \\<BB>.\n        \\<FF> :\n        \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> all_tiny_smcfs \\<alpha> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "then"], ["proof (chain)\npicking this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "show \"\\<FF> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<FF> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (auto simp: is_tiny_semifunctor.tiny_smcf_in_Vset)"], ["proof (state)\nthis:\n  \\<FF> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in is_semifunctor) smcf_is_tiny_semifunctor_if_ge_Limit:\n  assumes \"\\<Z> \\<beta>\" and \"\\<alpha> \\<in>\\<^sub>\\<circ> \\<beta>\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<beta>\\<^esub> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<beta>\\<^esub> \\<BB>", "proof(intro is_tiny_semifunctorI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<beta>\\<^esub> \\<BB>\n 2. smcf_dghm \\<FF> :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<beta>\\<^esub> smc_dg\n                                  \\<BB>", "show \"smcf_dghm \\<FF> : smc_dg \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<beta>\\<^esub> smc_dg \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smcf_dghm \\<FF> :\n    smc_dg\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<beta>\\<^esub> smc_dg\n                                  \\<BB>", "by \n      (\n        rule is_dghm.dghm_is_tiny_dghm_if_ge_Limit, \n        rule smcf_is_dghm; \n        intro assms\n      )"], ["proof (state)\nthis:\n  smcf_dghm \\<FF> :\n  smc_dg\n   \\<AA> \\<mapsto>\\<mapsto>\\<^sub>D\\<^sub>G\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<beta>\\<^esub> smc_dg\n                                \\<BB>\n\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<beta>\\<^esub> \\<BB>", "qed (simp add: smcf_is_semifunctor_if_ge_Limit assms)"], ["", "subsubsection\\<open>Opposite tiny semifunctor\\<close>"], ["", "lemma (in is_tiny_semifunctor) is_tiny_semifunctor_op: \n  \"op_smcf \\<FF> : op_smc \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> op_smc \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_smcf \\<FF> :\n    op_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> op_smc\n     \\<BB>", "by (intro is_tiny_semifunctorI') \n    (cs_concl cs_intro: smc_small_cs_intros smc_op_intros)+"], ["", "lemma (in is_tiny_semifunctor) is_tiny_semifunctor_op'[smc_op_intros]:  \n  assumes \"\\<AA>' = op_smc \\<AA>\" and \"\\<BB>' = op_smc \\<BB>\" and \"\\<alpha>' = \\<alpha>\"\n  shows \"op_smcf \\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_smcf \\<FF> :\n    \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. op_smcf \\<FF> :\n    op_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> op_smc\n     \\<BB>", "by (rule is_tiny_semifunctor_op)"], ["", "lemmas is_tiny_semifunctor_op[smc_op_intros] = \n  is_tiny_semifunctor.is_tiny_semifunctor_op'"], ["", "subsubsection\\<open>Composition of tiny semifunctors\\<close>"], ["", "lemma smcf_comp_is_tiny_semifunctor[smc_small_cs_intros]:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "interpret \\<FF>: is_tiny_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "interpret \\<GG>: is_tiny_semifunctor \\<alpha> \\<BB> \\<CC> \\<GG>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule is_tiny_semifunctorI') \n      (cs_concl cs_intro: smc_cs_intros smc_small_cs_intros)"], ["proof (state)\nthis:\n  \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Tiny constant semifunctor\\<close>"], ["", "lemma smcf_const_is_tiny_semifunctor:\n  assumes \"tiny_semicategory \\<alpha> \\<CC>\" \n    and \"tiny_semicategory \\<alpha> \\<DD>\" \n    and \"f : a \\<mapsto>\\<^bsub>\\<DD>\\<^esub> a\"\n    and \"f \\<circ>\\<^sub>A\\<^bsub>\\<DD>\\<^esub> f = f\"\n  shows \"smcf_const \\<CC> \\<DD> a f : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<DD>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_const \\<CC> \\<DD> a f :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<DD>", "proof(intro is_tiny_semifunctorI')"], ["proof (state)\ngoal (3 subgoals):\n 1. dghm_const \\<CC> \\<DD> a f :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\n 2. tiny_semicategory \\<alpha> \\<CC>\n 3. tiny_semicategory \\<alpha> \\<DD>", "from assms"], ["proof (chain)\npicking this:\n  tiny_semicategory \\<alpha> \\<CC>\n  tiny_semicategory \\<alpha> \\<DD>\n  f : a \\<mapsto>\\<^bsub>\\<DD>\\<^esub> a\n  f \\<circ>\\<^sub>A\\<^bsub>\\<DD>\\<^esub> f = f", "show \"smcf_const \\<CC> \\<DD> a f : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\""], ["proof (prove)\nusing this:\n  tiny_semicategory \\<alpha> \\<CC>\n  tiny_semicategory \\<alpha> \\<DD>\n  f : a \\<mapsto>\\<^bsub>\\<DD>\\<^esub> a\n  f \\<circ>\\<^sub>A\\<^bsub>\\<DD>\\<^esub> f = f\n\ngoal (1 subgoal):\n 1. dghm_const \\<CC> \\<DD> a f :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>", "by (cs_concl cs_simp: smc_cs_simps cs_intro: smc_small_cs_intros)"], ["proof (state)\nthis:\n  dghm_const \\<CC> \\<DD> a f :\n  \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\n\ngoal (2 subgoals):\n 1. tiny_semicategory \\<alpha> \\<CC>\n 2. tiny_semicategory \\<alpha> \\<DD>", "qed (auto simp: assms(1,2))"], ["", "lemma smcf_const_is_tiny_semifunctor'[smc_small_cs_intros]:\n  assumes \"tiny_semicategory \\<alpha> \\<CC>\"\n    and \"tiny_semicategory \\<alpha> \\<DD>\" \n    and \"f : a \\<mapsto>\\<^bsub>\\<DD>\\<^esub> a\"\n    and \"f \\<circ>\\<^sub>A\\<^bsub>\\<DD>\\<^esub> f = f\"\n    and \"\\<CC>' = \\<CC>\"\n    and \"\\<DD>' = \\<DD>\"\n  shows \"smcf_const \\<CC> \\<DD> a f : \\<CC>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<DD>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_const \\<CC> \\<DD> a f :\n    \\<CC>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<DD>'", "using assms(1-4)"], ["proof (prove)\nusing this:\n  tiny_semicategory \\<alpha> \\<CC>\n  tiny_semicategory \\<alpha> \\<DD>\n  f : a \\<mapsto>\\<^bsub>\\<DD>\\<^esub> a\n  f \\<circ>\\<^sub>A\\<^bsub>\\<DD>\\<^esub> f = f\n\ngoal (1 subgoal):\n 1. dghm_const \\<CC> \\<DD> a f :\n    \\<CC>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<DD>'", "unfolding assms(5,6)"], ["proof (prove)\nusing this:\n  tiny_semicategory \\<alpha> \\<CC>\n  tiny_semicategory \\<alpha> \\<DD>\n  f : a \\<mapsto>\\<^bsub>\\<DD>\\<^esub> a\n  f \\<circ>\\<^sub>A\\<^bsub>\\<DD>\\<^esub> f = f\n\ngoal (1 subgoal):\n 1. dghm_const \\<CC> \\<DD> a f :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<DD>", "by (rule smcf_const_is_tiny_semifunctor)"], ["", "text\\<open>\\newpage\\<close>"], ["", "end"]]}