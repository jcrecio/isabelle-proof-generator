{"file_name": "/home/qj213/afp-2021-10-22/thys/Category2/SetCat.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Category2", "problem_names": ["lemma isZFfunE[elim]: \"\\<lbrakk>isZFfun f ; \n  \\<lbrakk>isOpair f ; isOpair (Fst f) ; isFun (Snd f) ; \n  ((Snd f) |\\<subseteq>| (Domain (Snd f)) |\\<times>| (Range (Snd f))) ; \n  (Domain (Snd f) = |dom| f) \\<and> (Range (Snd f) |\\<subseteq>| |cod| f)\\<rbrakk> \\<Longrightarrow> R\\<rbrakk> \\<Longrightarrow> R\"", "lemma ZFfunDom: \"|dom| (ZFfun A B f) = A\"", "lemma ZFfunCod: \"|cod| (ZFfun A B f) = B\"", "lemma SETfun: \n  assumes \"\\<forall> x . x |\\<in>| A \\<longrightarrow> (f x) |\\<in>| B\"\n  shows   \"isZFfun (ZFfun A B f)\"", "lemma ZFCartProd: \n  assumes \"x |\\<in>| A |\\<times>| B\"\n  shows   \"Fst x |\\<in>| A \\<and> Snd x |\\<in>| B \\<and> isOpair x\"", "lemma ZFfunDomainOpair:\n  assumes \"isFun f\"\n  and     \"x |\\<in>| Domain f\"\n  shows   \"Opair x (app f x) |\\<in>| f\"", "lemma ZFFunToLambda: \n  assumes 1: \"isFun f\"\n  and     2: \"f |\\<subseteq>| (Domain f) |\\<times>| (Range f)\"\n  shows   \"f = Lambda (Domain f) (\\<lambda>x. app f x)\"", "lemma ZFfunApp: \n  assumes \"x |\\<in>| A\"\n  shows   \"(ZFfun A B f) |@| x = f x\"", "lemma ZFfun: \n  assumes \"isZFfun f\" \n  shows   \"f = ZFfun ( |dom| f) ( |cod| f) (\\<lambda>x. f |@| x)\"", "lemma ZFfun_ext: \n  assumes \"\\<forall> x . x |\\<in>| A \\<longrightarrow> f x = g x\" \n  shows   \"(ZFfun A B f) = (ZFfun A B g)\"", "lemma ZFfunExt:\n  assumes \"|dom| f = |dom| g\" and \"|cod| f = |cod| g\" and funf: \"isZFfun f\" and fung: \"isZFfun g\"\n  and \"\\<And> x . x |\\<in>| ( |dom| f) \\<Longrightarrow> f |@| x = g |@| x\"\n  shows \"f = g\"", "lemma ZFfunDomAppCod: \n  assumes \"isZFfun f\"\n  and     \"x |\\<in>| |dom|f\"\n  shows   \"f |@| x |\\<in>| |cod|f\"", "lemma ZFfunComp: \n  assumes \"\\<forall> x . x |\\<in>| A \\<longrightarrow> f x |\\<in>| B\"\n  shows   \"(ZFfun A B f) |o| (ZFfun B C g) = ZFfun A C (g o f)\"", "lemma ZFfunCompApp: \n  assumes a:\"isZFfun f\" and b:\"isZFfun g\" and c:\"|dom|g = |cod|f\"\n  shows \"f |o| g = ZFfun ( |dom| f) ( |cod| g) (\\<lambda> x . g |@| (f |@| x))\"", "lemma ZFfunCompAppZFfun: \n  assumes \"isZFfun f\" and \"isZFfun g\" and \"|dom|g = |cod|f\"\n  shows   \"isZFfun (f |o| g)\"", "lemma ZFfunCompAssoc:\n  assumes a: \"isZFfun f\" and b:\"isZFfun h\" and c:\"|cod|g = |dom|h\" \n  and d:\"isZFfun g\" and e:\"|cod|f = |dom|g\"\n  shows \"f |o| g |o| h = f |o| (g |o| h)\"", "lemma ZFfunCompAppDomCod: \n  assumes \"isZFfun f\" and \"isZFfun g\" and \"|dom|g = |cod|f\"\n  shows   \"|dom| (f |o| g) = |dom| f \\<and> |cod| (f |o| g) = |cod| g\"", "lemma ZFfunIdLeft: \n  assumes a: \"isZFfun f\" shows \"(ZFfun ( |dom|f) ( |dom|f) (\\<lambda>x. x)) |o| f = f\"", "lemma ZFfunIdRight:\n  assumes a: \"isZFfun f\" shows \"f |o| (ZFfun ( |cod|f) ( |cod|f) (\\<lambda>x. x)) = f\"", "lemma SETCategory: \"Category(SET)\"", "lemma SETobj: \"X \\<in> Obj (SET)\"", "lemma SETcod: \"isZFfun (ZFfun A B f) \\<Longrightarrow> cod\\<^bsub>SET\\<^esub> ZFfun A B f = B\"", "lemma SETmor: \"(isZFfun f) = (f \\<in> mor\\<^bsub>SET\\<^esub>)\"", "lemma SETdom: \"isZFfun (ZFfun A B f) \\<Longrightarrow> dom\\<^bsub>SET\\<^esub> ZFfun A B f = A\"", "lemma SETId: assumes \"x |\\<in>| X\" shows \"(Id SET X) |@| x = x\"", "lemma SETCompE[elim]: \"\\<lbrakk>f \\<approx>>\\<^bsub>SET\\<^esub> g ; \\<lbrakk>isZFfun f ; isZFfun g ; |cod| f = |dom| g\\<rbrakk> \\<Longrightarrow> R\\<rbrakk> \\<Longrightarrow> R\"", "lemma SETmapsTo: \"f maps\\<^bsub>SET\\<^esub> X to Y \\<Longrightarrow> isZFfun f \\<and> |dom| f = X \\<and> |cod| f = Y\"", "lemma SETComp: assumes \"f \\<approx>>\\<^bsub>SET\\<^esub> g\" shows \"f ;;\\<^bsub>SET\\<^esub> g = f |o| g\"", "lemma SETCompAt:\n  assumes \"f \\<approx>>\\<^bsub>SET \\<^esub>g\" and \"x |\\<in>|  |dom| f\" shows \"(f ;;\\<^bsub>SET \\<^esub>g) |@| x = g |@| (f |@| x)\"", "lemma SETZFfun: \n  assumes \"f maps\\<^bsub>SET\\<^esub> X to Y\" shows \"f = ZFfun X Y (\\<lambda>x . f |@| x)\"", "lemma SETfunDomAppCod:\n  assumes \"f maps\\<^bsub>SET \\<^esub>X to Y\" and \"x |\\<in>| X\"\n  shows \"f |@| x |\\<in>| Y\"", "lemma [elim]: \"\\<lbrakk>LSCategory C ; \n  \\<lbrakk>Category C ; \\<lbrakk>x \\<in> mor\\<^bsub>C\\<^esub> ; y \\<in> mor\\<^bsub>C\\<^esub> ; m2z\\<^bsub>C\\<^esub> x = m2z\\<^bsub>C\\<^esub> y\\<rbrakk> \\<Longrightarrow>  x = y;\n  \\<lbrakk>X \\<in> obj\\<^bsub>C\\<^esub> ; Y \\<in> obj\\<^bsub>C\\<^esub>\\<rbrakk> \\<Longrightarrow> HOMCollection C X Y \\<in> range explode\\<rbrakk> \\<Longrightarrow> R\\<rbrakk> \\<Longrightarrow> R\"", "lemma [simp]: \"LSCategory C \\<Longrightarrow> Category C\"", "lemma (in LSCategory) m2zz2m: \n  assumes \"f maps X to Y\" shows \"(m2z f) |\\<in>| (Hom X Y)\"", "lemma (in LSCategory) m2zz2mInv: \n  assumes \"f \\<in> mor\"\n  shows \"z2m (m2z f) = f\"", "lemma (in LSCategory) z2mm2z: \n  assumes \"X \\<in> obj\" and \"Y \\<in> obj\" and \"f |\\<in>| (Hom X Y)\"\n  shows \"z2m f maps X to Y \\<and> m2z (z2m f) = f\"", "lemma  HomFtorMapLemma1: \n  assumes a: \"LSCategory C\" and b: \"X \\<in> obj\\<^bsub>C\\<^esub>\" and c: \"f \\<in> mor\\<^bsub>C\\<^esub>\" and d: \"x |\\<in>| (Hom\\<^bsub>C\\<^esub> X (dom\\<^bsub>C\\<^esub> f))\"\n  shows \"(m2z\\<^bsub>C \\<^esub>((z2m\\<^bsub>C \\<^esub>x) ;;\\<^bsub>C\\<^esub> f)) |\\<in>| (Hom\\<^bsub>C\\<^esub> X (cod\\<^bsub>C\\<^esub> f))\"", "lemma HomFtorInMor':\n  assumes \"LSCategory C\" and \"X \\<in> obj\\<^bsub>C\\<^esub>\" and \"f \\<in> mor\\<^bsub>C\\<^esub>\"\n  shows \"Hom\\<^bsub>C\\<^esub>[X,f] \\<in> mor\\<^bsub>SET'\\<^esub>\"", "lemma HomFtorMor':\n  assumes \"LSCategory C\" and \"X \\<in> obj\\<^bsub>C\\<^esub>\" and \"f \\<in> mor\\<^bsub>C\\<^esub>\"\n  shows   \"Hom\\<^bsub>C\\<^esub>[X,f] maps\\<^bsub>SET'\\<^esub> Hom\\<^bsub>C \\<^esub>X (dom\\<^bsub>C\\<^esub> f) to Hom\\<^bsub>C \\<^esub>X (cod\\<^bsub>C\\<^esub> f)\"", "lemma HomFtorMapsTo:\n  \"\\<lbrakk>LSCategory C ; X \\<in> obj\\<^bsub>C \\<^esub>; f \\<in> mor\\<^bsub>C \\<^esub>\\<rbrakk> \\<Longrightarrow> Hom\\<^bsub>C\\<^esub>[X,f] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>C \\<^esub>X (dom\\<^bsub>C\\<^esub> f) to Hom\\<^bsub>C \\<^esub>X (cod\\<^bsub>C\\<^esub> f)\"", "lemma HomFtorMor:\n  assumes \"LSCategory C\" and \"X \\<in> obj\\<^bsub>C\\<^esub>\" and \"f \\<in> mor\\<^bsub>C\\<^esub>\" \n  shows \"Hom\\<^bsub>C\\<^esub>[X,f] \\<in> Mor SET\" and \"dom\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) = Hom\\<^bsub>C \\<^esub>X (dom\\<^bsub>C\\<^esub> f)\" \n  and \"cod\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) = Hom\\<^bsub>C \\<^esub>X (cod\\<^bsub>C\\<^esub> f)\"", "lemma HomFtorCompDef':\n  assumes \"LSCategory C\" and \"X \\<in> obj\\<^bsub>C\\<^esub>\" and \"f \\<approx>>\\<^bsub>C\\<^esub> g\" \n  shows   \"(Hom\\<^bsub>C\\<^esub>[X,f]) \\<approx>>\\<^bsub>SET' \\<^esub>(Hom\\<^bsub>C\\<^esub>[X,g])\"", "lemma HomFtorDist': \n  assumes a: \"LSCategory C\" and b: \"X \\<in> obj\\<^bsub>C\\<^esub>\" and c: \"f \\<approx>>\\<^bsub>C\\<^esub> g\"\n  shows   \"(Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,g]) = Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]\"", "lemma HomFtorDist:\n  assumes \"LSCategory C\" and \"X \\<in> obj\\<^bsub>C\\<^esub>\" and \"f \\<approx>>\\<^bsub>C\\<^esub> g\"\n  shows   \"(Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,g]) = Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]\"", "lemma HomFtorId':\n  assumes a: \"LSCategory C\" and b: \"X \\<in> obj\\<^bsub>C\\<^esub>\" and c: \"Y \\<in> obj\\<^bsub>C\\<^esub>\"\n  shows   \"Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y] = id\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C \\<^esub>X Y)\"", "lemma HomFtorId: \n  assumes \"LSCategory C\" and \"X \\<in> obj\\<^bsub>C\\<^esub>\" and \"Y \\<in> obj\\<^bsub>C\\<^esub>\"\n  shows   \"Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y] = id\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C \\<^esub>X Y)\"", "lemma HomFtorObj':\n  assumes a: \"LSCategory C\"\n  and     b: \"PreFunctor (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\"  and c: \"X \\<in> obj\\<^bsub>C\\<^esub>\" and d: \"Y \\<in> obj\\<^bsub>C\\<^esub>\"\n  shows   \"(HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y = Hom\\<^bsub>C \\<^esub>X Y\"", "lemma HomFtorFtor': \n  assumes a: \"LSCategory C\"\n  and     b: \"X \\<in> obj\\<^bsub>C\\<^esub>\"\n  shows   \"FunctorM (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\"", "lemma HomFtorFtor: \n  assumes a: \"LSCategory C\"\n  and     b: \"X \\<in> obj\\<^bsub>C\\<^esub>\"\n  shows   \"Functor (Hom\\<^bsub>C\\<^esub>[X,\\<midarrow>])\"", "lemma HomFtorObj:\n  assumes \"LSCategory C\"\n  and     \"X \\<in> obj\\<^bsub>C\\<^esub>\" and \"Y \\<in> obj\\<^bsub>C\\<^esub>\"\n  shows   \"(Hom\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y = Hom\\<^bsub>C \\<^esub>X Y\"", "lemma HomContraAt: \"x |\\<in>| (Hom\\<^bsub>C \\<^esub>(cod\\<^bsub>C\\<^esub> f) X) \\<Longrightarrow> (HomC\\<^bsub>C\\<^esub>[f,X]) |@| x = m2z\\<^bsub>C\\<^esub> (f ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub> x))\"", "lemma mor2ZF_Op: \"mor2ZF (Op C) = mor2ZF C\"", "lemma mor_Op: \"mor\\<^bsub>Op C\\<^esub> = mor\\<^bsub>C\\<^esub>\"", "lemma obj_Op: \"obj\\<^bsub>Op C\\<^esub> = obj\\<^bsub>C\\<^esub>\"", "lemma ZF2mor_Op: \"ZF2mor (Op C) f = ZF2mor C f\"", "lemma mapsTo_Op: \"f maps\\<^bsub>Op C\\<^esub> Y to X = f maps\\<^bsub>C\\<^esub> X to Y\"", "lemma HOMCollection_Op: \"HOMCollection (Op C) X Y = HOMCollection C Y X\"", "lemma Hom_Op: \"Hom\\<^bsub>Op C\\<^esub> X Y = Hom\\<^bsub>C\\<^esub> Y X\"", "lemma HomFtorContra': \"HomP\\<^bsub>C\\<^esub>[\\<midarrow>,X] = HomP\\<^bsub>Op C\\<^esub>[X,\\<midarrow>]\"", "lemma HomFtorContra: \"Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X] = Hom\\<^bsub>Op C\\<^esub>[X,\\<midarrow>]\"", "lemma HomFtorContraDom: \"CatDom (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) = Op C\"", "lemma HomFtorContraCod: \"CatCod (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) = SET\"", "lemma LSCategory_Op: assumes \"LSCategory C\" shows \"LSCategory (Op C)\"", "lemma HomFtorContraFtor:\n  assumes \"LSCategory C\"\n  and     \"X \\<in> obj\\<^bsub>C\\<^esub>\"\n  shows   \"Ftor (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) : (Op C) \\<longrightarrow> SET\"", "lemma HomFtorOpObj:\n  assumes \"LSCategory C\"\n  and     \"X \\<in> obj\\<^bsub>C\\<^esub>\" and \"Y \\<in> obj\\<^bsub>C\\<^esub>\"\n  shows   \"(Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) @@ Y = Hom\\<^bsub>C \\<^esub>Y X\"", "lemma HomCHomOp: \"HomC\\<^bsub>C\\<^esub>[g,X] = Hom\\<^bsub>Op C\\<^esub>[X,g]\"", "lemma HomFtorContraMapsTo:\n  assumes \"LSCategory C\" and \"X \\<in> obj\\<^bsub>C\\<^esub>\" and \"f \\<in> mor\\<^bsub>C\\<^esub>\" \n  shows \"HomC\\<^bsub>C\\<^esub>[f,X] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>C \\<^esub>(cod\\<^bsub>C\\<^esub> f) X  to Hom\\<^bsub>C \\<^esub>(dom\\<^bsub>C\\<^esub> f) X\"", "lemma HomFtorContraMor:\n  assumes \"LSCategory C\" and \"X \\<in> obj\\<^bsub>C\\<^esub>\" and \"f \\<in> mor\\<^bsub>C\\<^esub>\" \n  shows \"HomC\\<^bsub>C\\<^esub>[f,X] \\<in> Mor SET\" and \"dom\\<^bsub>SET\\<^esub> (HomC\\<^bsub>C\\<^esub>[f,X]) = Hom\\<^bsub>C \\<^esub>(cod\\<^bsub>C\\<^esub> f) X\" \n  and \"cod\\<^bsub>SET\\<^esub> (HomC\\<^bsub>C\\<^esub>[f,X]) = Hom\\<^bsub>C \\<^esub>(dom\\<^bsub>C\\<^esub> f) X\"", "lemma HomContraMor:\n  assumes \"LSCategory C\" and \"f \\<in> Mor C\" \n  shows \"(Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) ## f = HomC\\<^bsub>C\\<^esub>[f,X]\"", "lemma HomCHom:\n  assumes \"LSCategory C\" and \"f \\<in> Mor C\" and \"g \\<in> Mor C\"\n  shows \"(HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) ;;\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f]) = (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) ;;\\<^bsub>SET\\<^esub> (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])\""], "translations": [["", "lemma isZFfunE[elim]: \"\\<lbrakk>isZFfun f ; \n  \\<lbrakk>isOpair f ; isOpair (Fst f) ; isFun (Snd f) ; \n  ((Snd f) |\\<subseteq>| (Domain (Snd f)) |\\<times>| (Range (Snd f))) ; \n  (Domain (Snd f) = |dom| f) \\<and> (Range (Snd f) |\\<subseteq>| |cod| f)\\<rbrakk> \\<Longrightarrow> R\\<rbrakk> \\<Longrightarrow> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>isZFfun f;\n     \\<lbrakk>isOpair f; isOpair (Fst f); isFun (Snd f);\n      Snd f |\\<subseteq>|\n      HOLZF.Domain (Snd f) |\\<times>| HOLZF.Range (Snd f);\n      HOLZF.Domain (Snd f) = |dom|f \\<and>\n      HOLZF.Range (Snd f) |\\<subseteq>| |cod|f\\<rbrakk>\n     \\<Longrightarrow> R\\<rbrakk>\n    \\<Longrightarrow> R", "by (auto simp add: isZFfun_def Let_def)"], ["", "definition  \n  SET' :: \"(ZF, ZF) Category\" where\n  \"SET' \\<equiv> \\<lparr>\n      Category.Obj = {x . True} , \n      Category.Mor = {f . isZFfun f} ,\n      Category.Dom = ZFfunDom , \n      Category.Cod = ZFfunCod , \n      Category.Id = \\<lambda>x. ZFfun x x (\\<lambda>x . x) , \n      Category.Comp = ZFfunComp\n  \\<rparr>\""], ["", "definition \"SET \\<equiv> MakeCat SET'\""], ["", "lemma ZFfunDom: \"|dom| (ZFfun A B f) = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |dom|ZFfun A B f = A", "by (auto simp add: ZFfun_def ZFfunDom_def Fst)"], ["", "lemma ZFfunCod: \"|cod| (ZFfun A B f) = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |cod|ZFfun A B f = B", "by (auto simp add: ZFfun_def ZFfunCod_def Snd Fst)"], ["", "lemma SETfun: \n  assumes \"\\<forall> x . x |\\<in>| A \\<longrightarrow> (f x) |\\<in>| B\"\n  shows   \"isZFfun (ZFfun A B f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isZFfun (ZFfun A B f)", "proof(auto simp add: isZFfun_def ZFfun_def isOpair Fst Snd \n    ZFfunCod_def ZFfunDom_def isFun_Lambda domain_Lambda Let_def)"], ["proof (state)\ngoal (2 subgoals):\n 1. Lambda A f |\\<subseteq>| A |\\<times>| HOLZF.Range (Lambda A f)\n 2. HOLZF.Range (Lambda A f) |\\<subseteq>| B", "{"], ["proof (state)\ngoal (2 subgoals):\n 1. Lambda A f |\\<subseteq>| A |\\<times>| HOLZF.Range (Lambda A f)\n 2. HOLZF.Range (Lambda A f) |\\<subseteq>| B", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. Lambda A f |\\<subseteq>| A |\\<times>| HOLZF.Range (Lambda A f)\n 2. HOLZF.Range (Lambda A f) |\\<subseteq>| B", "have \"x |\\<in>| Range (Lambda A f) \\<Longrightarrow> x |\\<in>| B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x |\\<in>| HOLZF.Range (Lambda A f) \\<Longrightarrow> x |\\<in>| B", "apply(insert isFun_Lambda[of A f])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x |\\<in>| HOLZF.Range (Lambda A f); isFun (Lambda A f)\\<rbrakk>\n    \\<Longrightarrow> x |\\<in>| B", "apply (drule fun_range_witness[of \"Lambda A f\" x], simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x |\\<in>| HOLZF.Range (Lambda A f);\n     \\<exists>xa.\n        xa |\\<in>| HOLZF.Domain (Lambda A f) \\<and>\n        Lambda A f \\<acute> xa = x\\<rbrakk>\n    \\<Longrightarrow> x |\\<in>| B", "by (auto simp add: domain_Lambda Lambda_app assms)"], ["proof (state)\nthis:\n  x |\\<in>| HOLZF.Range (Lambda A f) \\<Longrightarrow> x |\\<in>| B\n\ngoal (2 subgoals):\n 1. Lambda A f |\\<subseteq>| A |\\<times>| HOLZF.Range (Lambda A f)\n 2. HOLZF.Range (Lambda A f) |\\<subseteq>| B", "}"], ["proof (state)\nthis:\n  ?x2 |\\<in>| HOLZF.Range (Lambda A f) \\<Longrightarrow> ?x2 |\\<in>| B\n\ngoal (2 subgoals):\n 1. Lambda A f |\\<subseteq>| A |\\<times>| HOLZF.Range (Lambda A f)\n 2. HOLZF.Range (Lambda A f) |\\<subseteq>| B", "thus \"subset (Range (Lambda A f)) B\""], ["proof (prove)\nusing this:\n  ?x2 |\\<in>| HOLZF.Range (Lambda A f) \\<Longrightarrow> ?x2 |\\<in>| B\n\ngoal (1 subgoal):\n 1. HOLZF.Range (Lambda A f) |\\<subseteq>| B", "by (auto simp add: subset_def)"], ["proof (state)\nthis:\n  HOLZF.Range (Lambda A f) |\\<subseteq>| B\n\ngoal (1 subgoal):\n 1. Lambda A f |\\<subseteq>| A |\\<times>| HOLZF.Range (Lambda A f)", "{"], ["proof (state)\nthis:\n  HOLZF.Range (Lambda A f) |\\<subseteq>| B\n\ngoal (1 subgoal):\n 1. Lambda A f |\\<subseteq>| A |\\<times>| HOLZF.Range (Lambda A f)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. Lambda A f |\\<subseteq>| A |\\<times>| HOLZF.Range (Lambda A f)", "have \"x |\\<in>| (Lambda A f) \\<Longrightarrow> x |\\<in>| A |\\<times>| Range (Lambda A f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x |\\<in>| Lambda A f \\<Longrightarrow>\n    x |\\<in>| A |\\<times>| HOLZF.Range (Lambda A f)", "by(auto simp add: CartProd Lambda_def Repl Range)"], ["proof (state)\nthis:\n  x |\\<in>| Lambda A f \\<Longrightarrow>\n  x |\\<in>| A |\\<times>| HOLZF.Range (Lambda A f)\n\ngoal (1 subgoal):\n 1. Lambda A f |\\<subseteq>| A |\\<times>| HOLZF.Range (Lambda A f)", "}"], ["proof (state)\nthis:\n  ?x2 |\\<in>| Lambda A f \\<Longrightarrow>\n  ?x2 |\\<in>| A |\\<times>| HOLZF.Range (Lambda A f)\n\ngoal (1 subgoal):\n 1. Lambda A f |\\<subseteq>| A |\\<times>| HOLZF.Range (Lambda A f)", "thus \"(Lambda A f) |\\<subseteq>| (A |\\<times>| Range (Lambda A f))\""], ["proof (prove)\nusing this:\n  ?x2 |\\<in>| Lambda A f \\<Longrightarrow>\n  ?x2 |\\<in>| A |\\<times>| HOLZF.Range (Lambda A f)\n\ngoal (1 subgoal):\n 1. Lambda A f |\\<subseteq>| A |\\<times>| HOLZF.Range (Lambda A f)", "by (auto simp add: HOLZF.subset_def)"], ["proof (state)\nthis:\n  Lambda A f |\\<subseteq>| A |\\<times>| HOLZF.Range (Lambda A f)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ZFCartProd: \n  assumes \"x |\\<in>| A |\\<times>| B\"\n  shows   \"Fst x |\\<in>| A \\<and> Snd x |\\<in>| B \\<and> isOpair x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fst x |\\<in>| A \\<and> Snd x |\\<in>| B \\<and> isOpair x", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Fst x |\\<in>| A \\<and> Snd x |\\<in>| B \\<and> isOpair x", "from CartProd"], ["proof (chain)\npicking this:\n  ?x |\\<in>| ?A |\\<times>| ?B =\n  (\\<exists>a b. a |\\<in>| ?A \\<and> b |\\<in>| ?B \\<and> ?x = Opair a b)", "obtain a b \n    where \"a |\\<in>| A\" \n    and   \"b |\\<in>| B\" \n    and   \"x = Opair a b\""], ["proof (prove)\nusing this:\n  ?x |\\<in>| ?A |\\<times>| ?B =\n  (\\<exists>a b. a |\\<in>| ?A \\<and> b |\\<in>| ?B \\<and> ?x = Opair a b)\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>a |\\<in>| A; b |\\<in>| B; x = Opair a b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  ?x |\\<in>| ?A |\\<times>| ?B =\n  (\\<exists>a b. a |\\<in>| ?A \\<and> b |\\<in>| ?B \\<and> ?x = Opair a b)\n  x |\\<in>| A |\\<times>| B\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>a |\\<in>| A; b |\\<in>| B; x = Opair a b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  a |\\<in>| A\n  b |\\<in>| B\n  x = Opair a b\n\ngoal (1 subgoal):\n 1. Fst x |\\<in>| A \\<and> Snd x |\\<in>| B \\<and> isOpair x", "thus ?thesis"], ["proof (prove)\nusing this:\n  a |\\<in>| A\n  b |\\<in>| B\n  x = Opair a b\n\ngoal (1 subgoal):\n 1. Fst x |\\<in>| A \\<and> Snd x |\\<in>| B \\<and> isOpair x", "using assms"], ["proof (prove)\nusing this:\n  a |\\<in>| A\n  b |\\<in>| B\n  x = Opair a b\n  x |\\<in>| A |\\<times>| B\n\ngoal (1 subgoal):\n 1. Fst x |\\<in>| A \\<and> Snd x |\\<in>| B \\<and> isOpair x", "by (auto simp add: Fst Snd isOpair_def)"], ["proof (state)\nthis:\n  Fst x |\\<in>| A \\<and> Snd x |\\<in>| B \\<and> isOpair x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ZFfunDomainOpair:\n  assumes \"isFun f\"\n  and     \"x |\\<in>| Domain f\"\n  shows   \"Opair x (app f x) |\\<in>| f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Opair x (f \\<acute> x) |\\<in>| f", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Opair x (f \\<acute> x) |\\<in>| f", "have \"\\<exists>! y . Opair x y |\\<in>| f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!y. Opair x y |\\<in>| f", "using assms"], ["proof (prove)\nusing this:\n  isFun f\n  x |\\<in>| HOLZF.Domain f\n\ngoal (1 subgoal):\n 1. \\<exists>!y. Opair x y |\\<in>| f", "by (auto simp add: unique_fun_value)"], ["proof (state)\nthis:\n  \\<exists>!y. Opair x y |\\<in>| f\n\ngoal (1 subgoal):\n 1. Opair x (f \\<acute> x) |\\<in>| f", "thus \"Opair x (app f x) |\\<in>| f\""], ["proof (prove)\nusing this:\n  \\<exists>!y. Opair x y |\\<in>| f\n\ngoal (1 subgoal):\n 1. Opair x (f \\<acute> x) |\\<in>| f", "by (auto simp add: app_def intro: theI')"], ["proof (state)\nthis:\n  Opair x (f \\<acute> x) |\\<in>| f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ZFFunToLambda: \n  assumes 1: \"isFun f\"\n  and     2: \"f |\\<subseteq>| (Domain f) |\\<times>| (Range f)\"\n  shows   \"f = Lambda (Domain f) (\\<lambda>x. app f x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f = Lambda (HOLZF.Domain f) ((\\<acute>) f)", "proof(subst Ext, rule allI, rule iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>z.\n       z |\\<in>| f \\<Longrightarrow>\n       z |\\<in>| Lambda (HOLZF.Domain f) ((\\<acute>) f)\n 2. \\<And>z.\n       z |\\<in>| Lambda (HOLZF.Domain f) ((\\<acute>) f) \\<Longrightarrow>\n       z |\\<in>| f", "{"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>z.\n       z |\\<in>| f \\<Longrightarrow>\n       z |\\<in>| Lambda (HOLZF.Domain f) ((\\<acute>) f)\n 2. \\<And>z.\n       z |\\<in>| Lambda (HOLZF.Domain f) ((\\<acute>) f) \\<Longrightarrow>\n       z |\\<in>| f", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>z.\n       z |\\<in>| f \\<Longrightarrow>\n       z |\\<in>| Lambda (HOLZF.Domain f) ((\\<acute>) f)\n 2. \\<And>z.\n       z |\\<in>| Lambda (HOLZF.Domain f) ((\\<acute>) f) \\<Longrightarrow>\n       z |\\<in>| f", "assume a: \"x |\\<in>| f\""], ["proof (state)\nthis:\n  x |\\<in>| f\n\ngoal (2 subgoals):\n 1. \\<And>z.\n       z |\\<in>| f \\<Longrightarrow>\n       z |\\<in>| Lambda (HOLZF.Domain f) ((\\<acute>) f)\n 2. \\<And>z.\n       z |\\<in>| Lambda (HOLZF.Domain f) ((\\<acute>) f) \\<Longrightarrow>\n       z |\\<in>| f", "show \"x |\\<in>| Lambda (Domain f) (\\<lambda>x. app f x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x |\\<in>| Lambda (HOLZF.Domain f) ((\\<acute>) f)", "proof(simp add: Lambda_def Repl, rule exI[of _ \"(Fst x)\"], rule conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. Fst x |\\<in>| HOLZF.Domain f\n 2. x = Opair (Fst x) (f \\<acute> Fst x)", "have b:\"isOpair x \\<and> Fst x |\\<in>| Domain f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isOpair x \\<and> Fst x |\\<in>| HOLZF.Domain f", "using 2 a"], ["proof (prove)\nusing this:\n  f |\\<subseteq>| HOLZF.Domain f |\\<times>| HOLZF.Range f\n  x |\\<in>| f\n\ngoal (1 subgoal):\n 1. isOpair x \\<and> Fst x |\\<in>| HOLZF.Domain f", "by (auto simp add: subset_def ZFCartProd)"], ["proof (state)\nthis:\n  isOpair x \\<and> Fst x |\\<in>| HOLZF.Domain f\n\ngoal (2 subgoals):\n 1. Fst x |\\<in>| HOLZF.Domain f\n 2. x = Opair (Fst x) (f \\<acute> Fst x)", "thus \"Fst x |\\<in>| Domain f\""], ["proof (prove)\nusing this:\n  isOpair x \\<and> Fst x |\\<in>| HOLZF.Domain f\n\ngoal (1 subgoal):\n 1. Fst x |\\<in>| HOLZF.Domain f", ".."], ["proof (state)\nthis:\n  Fst x |\\<in>| HOLZF.Domain f\n\ngoal (1 subgoal):\n 1. x = Opair (Fst x) (f \\<acute> Fst x)", "hence \"Opair (Fst x) (app f (Fst x)) |\\<in>| f\""], ["proof (prove)\nusing this:\n  Fst x |\\<in>| HOLZF.Domain f\n\ngoal (1 subgoal):\n 1. Opair (Fst x) (f \\<acute> Fst x) |\\<in>| f", "using 1"], ["proof (prove)\nusing this:\n  Fst x |\\<in>| HOLZF.Domain f\n  isFun f\n\ngoal (1 subgoal):\n 1. Opair (Fst x) (f \\<acute> Fst x) |\\<in>| f", "by (simp add: ZFfunDomainOpair)"], ["proof (state)\nthis:\n  Opair (Fst x) (f \\<acute> Fst x) |\\<in>| f\n\ngoal (1 subgoal):\n 1. x = Opair (Fst x) (f \\<acute> Fst x)", "moreover"], ["proof (state)\nthis:\n  Opair (Fst x) (f \\<acute> Fst x) |\\<in>| f\n\ngoal (1 subgoal):\n 1. x = Opair (Fst x) (f \\<acute> Fst x)", "have \"Opair (Fst x) (Snd x) |\\<in>| f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Opair (Fst x) (Snd x) |\\<in>| f", "using a 2"], ["proof (prove)\nusing this:\n  x |\\<in>| f\n  f |\\<subseteq>| HOLZF.Domain f |\\<times>| HOLZF.Range f\n\ngoal (1 subgoal):\n 1. Opair (Fst x) (Snd x) |\\<in>| f", "by (auto simp add: FstSnd subset_def b)"], ["proof (state)\nthis:\n  Opair (Fst x) (Snd x) |\\<in>| f\n\ngoal (1 subgoal):\n 1. x = Opair (Fst x) (f \\<acute> Fst x)", "ultimately"], ["proof (chain)\npicking this:\n  Opair (Fst x) (f \\<acute> Fst x) |\\<in>| f\n  Opair (Fst x) (Snd x) |\\<in>| f", "have \"Snd x = (app f (Fst x))\""], ["proof (prove)\nusing this:\n  Opair (Fst x) (f \\<acute> Fst x) |\\<in>| f\n  Opair (Fst x) (Snd x) |\\<in>| f\n\ngoal (1 subgoal):\n 1. Snd x = f \\<acute> Fst x", "using 1"], ["proof (prove)\nusing this:\n  Opair (Fst x) (f \\<acute> Fst x) |\\<in>| f\n  Opair (Fst x) (Snd x) |\\<in>| f\n  isFun f\n\ngoal (1 subgoal):\n 1. Snd x = f \\<acute> Fst x", "by (auto simp add: isFun_def)"], ["proof (state)\nthis:\n  Snd x = f \\<acute> Fst x\n\ngoal (1 subgoal):\n 1. x = Opair (Fst x) (f \\<acute> Fst x)", "hence \"Opair (Fst x) (app f (Fst x)) = Opair (Fst x) (Snd x)\""], ["proof (prove)\nusing this:\n  Snd x = f \\<acute> Fst x\n\ngoal (1 subgoal):\n 1. Opair (Fst x) (f \\<acute> Fst x) = Opair (Fst x) (Snd x)", "by simp"], ["proof (state)\nthis:\n  Opair (Fst x) (f \\<acute> Fst x) = Opair (Fst x) (Snd x)\n\ngoal (1 subgoal):\n 1. x = Opair (Fst x) (f \\<acute> Fst x)", "also"], ["proof (state)\nthis:\n  Opair (Fst x) (f \\<acute> Fst x) = Opair (Fst x) (Snd x)\n\ngoal (1 subgoal):\n 1. x = Opair (Fst x) (f \\<acute> Fst x)", "have \"... = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Opair (Fst x) (Snd x) = x", "using b"], ["proof (prove)\nusing this:\n  isOpair x \\<and> Fst x |\\<in>| HOLZF.Domain f\n\ngoal (1 subgoal):\n 1. Opair (Fst x) (Snd x) = x", "by (simp add: FstSnd)"], ["proof (state)\nthis:\n  Opair (Fst x) (Snd x) = x\n\ngoal (1 subgoal):\n 1. x = Opair (Fst x) (f \\<acute> Fst x)", "finally"], ["proof (chain)\npicking this:\n  Opair (Fst x) (f \\<acute> Fst x) = x", "show \"x = Opair (Fst x) (app f (Fst x))\""], ["proof (prove)\nusing this:\n  Opair (Fst x) (f \\<acute> Fst x) = x\n\ngoal (1 subgoal):\n 1. x = Opair (Fst x) (f \\<acute> Fst x)", ".."], ["proof (state)\nthis:\n  x = Opair (Fst x) (f \\<acute> Fst x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x |\\<in>| Lambda (HOLZF.Domain f) ((\\<acute>) f)\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       z |\\<in>| Lambda (HOLZF.Domain f) ((\\<acute>) f) \\<Longrightarrow>\n       z |\\<in>| f", "}"], ["proof (state)\nthis:\n  ?x2 |\\<in>| f \\<Longrightarrow>\n  ?x2 |\\<in>| Lambda (HOLZF.Domain f) ((\\<acute>) f)\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       z |\\<in>| Lambda (HOLZF.Domain f) ((\\<acute>) f) \\<Longrightarrow>\n       z |\\<in>| f", "moreover"], ["proof (state)\nthis:\n  ?x2 |\\<in>| f \\<Longrightarrow>\n  ?x2 |\\<in>| Lambda (HOLZF.Domain f) ((\\<acute>) f)\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       z |\\<in>| Lambda (HOLZF.Domain f) ((\\<acute>) f) \\<Longrightarrow>\n       z |\\<in>| f", "{"], ["proof (state)\nthis:\n  ?x2 |\\<in>| f \\<Longrightarrow>\n  ?x2 |\\<in>| Lambda (HOLZF.Domain f) ((\\<acute>) f)\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       z |\\<in>| Lambda (HOLZF.Domain f) ((\\<acute>) f) \\<Longrightarrow>\n       z |\\<in>| f", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z.\n       z |\\<in>| Lambda (HOLZF.Domain f) ((\\<acute>) f) \\<Longrightarrow>\n       z |\\<in>| f", "assume a: \"x |\\<in>| Lambda (Domain f) (\\<lambda>x. app f x)\""], ["proof (state)\nthis:\n  x |\\<in>| Lambda (HOLZF.Domain f) ((\\<acute>) f)\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       z |\\<in>| Lambda (HOLZF.Domain f) ((\\<acute>) f) \\<Longrightarrow>\n       z |\\<in>| f", "show \"x |\\<in>| f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x |\\<in>| f", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x |\\<in>| f", "from Lambda_def"], ["proof (chain)\npicking this:\n  Lambda ?A ?f \\<equiv> Repl ?A (\\<lambda>x. Opair x (?f x))", "obtain a where \"a |\\<in>| Domain f \\<and> x = Opair a (app f a)\""], ["proof (prove)\nusing this:\n  Lambda ?A ?f \\<equiv> Repl ?A (\\<lambda>x. Opair x (?f x))\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        a |\\<in>| HOLZF.Domain f \\<and>\n        x = Opair a (f \\<acute> a) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using a"], ["proof (prove)\nusing this:\n  Lambda ?A ?f \\<equiv> Repl ?A (\\<lambda>x. Opair x (?f x))\n  x |\\<in>| Lambda (HOLZF.Domain f) ((\\<acute>) f)\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        a |\\<in>| HOLZF.Domain f \\<and>\n        x = Opair a (f \\<acute> a) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: Repl)"], ["proof (state)\nthis:\n  a |\\<in>| HOLZF.Domain f \\<and> x = Opair a (f \\<acute> a)\n\ngoal (1 subgoal):\n 1. x |\\<in>| f", "thus ?thesis"], ["proof (prove)\nusing this:\n  a |\\<in>| HOLZF.Domain f \\<and> x = Opair a (f \\<acute> a)\n\ngoal (1 subgoal):\n 1. x |\\<in>| f", "using a 1"], ["proof (prove)\nusing this:\n  a |\\<in>| HOLZF.Domain f \\<and> x = Opair a (f \\<acute> a)\n  x |\\<in>| Lambda (HOLZF.Domain f) ((\\<acute>) f)\n  isFun f\n\ngoal (1 subgoal):\n 1. x |\\<in>| f", "by (auto simp add: ZFfunDomainOpair)"], ["proof (state)\nthis:\n  x |\\<in>| f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x |\\<in>| f\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  ?x2 |\\<in>| Lambda (HOLZF.Domain f) ((\\<acute>) f) \\<Longrightarrow>\n  ?x2 |\\<in>| f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ZFfunApp: \n  assumes \"x |\\<in>| A\"\n  shows   \"(ZFfun A B f) |@| x = f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFfun A B f |@| x = f x", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. ZFfun A B f |@| x = f x", "have \"(ZFfun A B f) |@| x = app (Lambda A f) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFfun A B f |@| x = Lambda A f \\<acute> x", "by (simp add: ZFfun_def ZFfunApp_def Snd)"], ["proof (state)\nthis:\n  ZFfun A B f |@| x = Lambda A f \\<acute> x\n\ngoal (1 subgoal):\n 1. ZFfun A B f |@| x = f x", "also"], ["proof (state)\nthis:\n  ZFfun A B f |@| x = Lambda A f \\<acute> x\n\ngoal (1 subgoal):\n 1. ZFfun A B f |@| x = f x", "have \"... = f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Lambda A f \\<acute> x = f x", "using assms"], ["proof (prove)\nusing this:\n  x |\\<in>| A\n\ngoal (1 subgoal):\n 1. Lambda A f \\<acute> x = f x", "by (simp add: Lambda_app)"], ["proof (state)\nthis:\n  Lambda A f \\<acute> x = f x\n\ngoal (1 subgoal):\n 1. ZFfun A B f |@| x = f x", "finally"], ["proof (chain)\npicking this:\n  ZFfun A B f |@| x = f x", "show ?thesis"], ["proof (prove)\nusing this:\n  ZFfun A B f |@| x = f x\n\ngoal (1 subgoal):\n 1. ZFfun A B f |@| x = f x", "."], ["proof (state)\nthis:\n  ZFfun A B f |@| x = f x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ZFfun: \n  assumes \"isZFfun f\" \n  shows   \"f = ZFfun ( |dom| f) ( |cod| f) (\\<lambda>x. f |@| x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f = ZFfun (|dom|f) (|cod|f) ((|@|) f)", "proof(auto simp add: ZFfun_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. f = Opair (Opair (|dom|f) (|cod|f)) (Lambda (|dom|f) ((|@|) f))", "have \"isOpair f \\<and> isOpair (Fst f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isOpair f \\<and> isOpair (Fst f)", "using assms"], ["proof (prove)\nusing this:\n  isZFfun f\n\ngoal (1 subgoal):\n 1. isOpair f \\<and> isOpair (Fst f)", "by (simp add: isZFfun_def[of f] Let_def)"], ["proof (state)\nthis:\n  isOpair f \\<and> isOpair (Fst f)\n\ngoal (1 subgoal):\n 1. f = Opair (Opair (|dom|f) (|cod|f)) (Lambda (|dom|f) ((|@|) f))", "hence \"f = Opair (Opair (Fst (Fst f)) (Snd (Fst f))) (Snd f)\""], ["proof (prove)\nusing this:\n  isOpair f \\<and> isOpair (Fst f)\n\ngoal (1 subgoal):\n 1. f = Opair (Opair (Fst (Fst f)) (Snd (Fst f))) (Snd f)", "by (simp add: FstSnd)"], ["proof (state)\nthis:\n  f = Opair (Opair (Fst (Fst f)) (Snd (Fst f))) (Snd f)\n\ngoal (1 subgoal):\n 1. f = Opair (Opair (|dom|f) (|cod|f)) (Lambda (|dom|f) ((|@|) f))", "hence \"f = Opair (Opair ( |dom| f) ( |cod| f)) (Snd f)\""], ["proof (prove)\nusing this:\n  f = Opair (Opair (Fst (Fst f)) (Snd (Fst f))) (Snd f)\n\ngoal (1 subgoal):\n 1. f = Opair (Opair (|dom|f) (|cod|f)) (Snd f)", "using assms"], ["proof (prove)\nusing this:\n  f = Opair (Opair (Fst (Fst f)) (Snd (Fst f))) (Snd f)\n  isZFfun f\n\ngoal (1 subgoal):\n 1. f = Opair (Opair (|dom|f) (|cod|f)) (Snd f)", "by (simp add: ZFfunDom_def ZFfunCod_def)"], ["proof (state)\nthis:\n  f = Opair (Opair (|dom|f) (|cod|f)) (Snd f)\n\ngoal (1 subgoal):\n 1. f = Opair (Opair (|dom|f) (|cod|f)) (Lambda (|dom|f) ((|@|) f))", "moreover"], ["proof (state)\nthis:\n  f = Opair (Opair (|dom|f) (|cod|f)) (Snd f)\n\ngoal (1 subgoal):\n 1. f = Opair (Opair (|dom|f) (|cod|f)) (Lambda (|dom|f) ((|@|) f))", "have \"Snd f = Lambda ( |dom| f) (\\<lambda>x . f |@| x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Snd f = Lambda (|dom|f) ((|@|) f)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Snd f = Lambda (|dom|f) ((|@|) f)", "have \"|dom| f = Domain (Snd f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |dom|f = HOLZF.Domain (Snd f)", "using assms"], ["proof (prove)\nusing this:\n  isZFfun f\n\ngoal (1 subgoal):\n 1. |dom|f = HOLZF.Domain (Snd f)", "by (simp add: isZFfun_def[of f] Let_def)"], ["proof (state)\nthis:\n  |dom|f = HOLZF.Domain (Snd f)\n\ngoal (1 subgoal):\n 1. Snd f = Lambda (|dom|f) ((|@|) f)", "moreover"], ["proof (state)\nthis:\n  |dom|f = HOLZF.Domain (Snd f)\n\ngoal (1 subgoal):\n 1. Snd f = Lambda (|dom|f) ((|@|) f)", "have \"isFun (Snd f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isFun (Snd f)", "using assms"], ["proof (prove)\nusing this:\n  isZFfun f\n\ngoal (1 subgoal):\n 1. isFun (Snd f)", "by (simp add: isZFfun_def[of f] Let_def)"], ["proof (state)\nthis:\n  isFun (Snd f)\n\ngoal (1 subgoal):\n 1. Snd f = Lambda (|dom|f) ((|@|) f)", "moreover"], ["proof (state)\nthis:\n  isFun (Snd f)\n\ngoal (1 subgoal):\n 1. Snd f = Lambda (|dom|f) ((|@|) f)", "have \"(\\<lambda>x . f |@| x) = (\\<lambda>x . app (Snd f) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (|@|) f = (\\<acute>) (Snd f)", "by(simp add: ZFfunApp_def)"], ["proof (state)\nthis:\n  (|@|) f = (\\<acute>) (Snd f)\n\ngoal (1 subgoal):\n 1. Snd f = Lambda (|dom|f) ((|@|) f)", "moreover"], ["proof (state)\nthis:\n  (|@|) f = (\\<acute>) (Snd f)\n\ngoal (1 subgoal):\n 1. Snd f = Lambda (|dom|f) ((|@|) f)", "have \"(Snd f) |\\<subseteq>| (Domain (Snd f)) |\\<times>| (Range (Snd f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Snd f |\\<subseteq>| HOLZF.Domain (Snd f) |\\<times>| HOLZF.Range (Snd f)", "using assms"], ["proof (prove)\nusing this:\n  isZFfun f\n\ngoal (1 subgoal):\n 1. Snd f |\\<subseteq>| HOLZF.Domain (Snd f) |\\<times>| HOLZF.Range (Snd f)", "by (auto simp add: isZFfun_def[of f] Let_def)"], ["proof (state)\nthis:\n  Snd f |\\<subseteq>| HOLZF.Domain (Snd f) |\\<times>| HOLZF.Range (Snd f)\n\ngoal (1 subgoal):\n 1. Snd f = Lambda (|dom|f) ((|@|) f)", "ultimately"], ["proof (chain)\npicking this:\n  |dom|f = HOLZF.Domain (Snd f)\n  isFun (Snd f)\n  (|@|) f = (\\<acute>) (Snd f)\n  Snd f |\\<subseteq>| HOLZF.Domain (Snd f) |\\<times>| HOLZF.Range (Snd f)", "show ?thesis"], ["proof (prove)\nusing this:\n  |dom|f = HOLZF.Domain (Snd f)\n  isFun (Snd f)\n  (|@|) f = (\\<acute>) (Snd f)\n  Snd f |\\<subseteq>| HOLZF.Domain (Snd f) |\\<times>| HOLZF.Range (Snd f)\n\ngoal (1 subgoal):\n 1. Snd f = Lambda (|dom|f) ((|@|) f)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>|dom|f = HOLZF.Domain (Snd f); isFun (Snd f);\n     (|@|) f = (\\<acute>) (Snd f);\n     Snd f |\\<subseteq>|\n     HOLZF.Domain (Snd f) |\\<times>| HOLZF.Range (Snd f)\\<rbrakk>\n    \\<Longrightarrow> Snd f =\n                      Lambda (HOLZF.Domain (Snd f)) ((\\<acute>) (Snd f))", "by(rule ZFFunToLambda[of \"Snd f\"])"], ["proof (state)\nthis:\n  Snd f = Lambda (|dom|f) ((|@|) f)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Snd f = Lambda (|dom|f) ((|@|) f)\n\ngoal (1 subgoal):\n 1. f = Opair (Opair (|dom|f) (|cod|f)) (Lambda (|dom|f) ((|@|) f))", "ultimately"], ["proof (chain)\npicking this:\n  f = Opair (Opair (|dom|f) (|cod|f)) (Snd f)\n  Snd f = Lambda (|dom|f) ((|@|) f)", "show \"f = Opair (Opair ( |dom| f) ( |cod| f)) (Lambda ( |dom| f) (\\<lambda>x . f |@| x))\""], ["proof (prove)\nusing this:\n  f = Opair (Opair (|dom|f) (|cod|f)) (Snd f)\n  Snd f = Lambda (|dom|f) ((|@|) f)\n\ngoal (1 subgoal):\n 1. f = Opair (Opair (|dom|f) (|cod|f)) (Lambda (|dom|f) ((|@|) f))", "by simp"], ["proof (state)\nthis:\n  f = Opair (Opair (|dom|f) (|cod|f)) (Lambda (|dom|f) ((|@|) f))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ZFfun_ext: \n  assumes \"\\<forall> x . x |\\<in>| A \\<longrightarrow> f x = g x\" \n  shows   \"(ZFfun A B f) = (ZFfun A B g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFfun A B f = ZFfun A B g", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. ZFfun A B f = ZFfun A B g", "have \"Lambda A f = Lambda A g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Lambda A f = Lambda A g", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>x. x |\\<in>| A \\<longrightarrow> f x = g x\n\ngoal (1 subgoal):\n 1. Lambda A f = Lambda A g", "by (auto simp add: Lambda_ext)"], ["proof (state)\nthis:\n  Lambda A f = Lambda A g\n\ngoal (1 subgoal):\n 1. ZFfun A B f = ZFfun A B g", "thus ?thesis"], ["proof (prove)\nusing this:\n  Lambda A f = Lambda A g\n\ngoal (1 subgoal):\n 1. ZFfun A B f = ZFfun A B g", "by (simp add: ZFfun_def)"], ["proof (state)\nthis:\n  ZFfun A B f = ZFfun A B g\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ZFfunExt:\n  assumes \"|dom| f = |dom| g\" and \"|cod| f = |cod| g\" and funf: \"isZFfun f\" and fung: \"isZFfun g\"\n  and \"\\<And> x . x |\\<in>| ( |dom| f) \\<Longrightarrow> f |@| x = g |@| x\"\n  shows \"f = g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f = g", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. f = g", "have 1: \"f = ZFfun ( |dom| f) ( |cod| f) (\\<lambda>x. f |@| x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f = ZFfun (|dom|f) (|cod|f) ((|@|) f)", "using funf"], ["proof (prove)\nusing this:\n  isZFfun f\n\ngoal (1 subgoal):\n 1. f = ZFfun (|dom|f) (|cod|f) ((|@|) f)", "by (rule ZFfun)"], ["proof (state)\nthis:\n  f = ZFfun (|dom|f) (|cod|f) ((|@|) f)\n\ngoal (1 subgoal):\n 1. f = g", "have \"g = ZFfun ( |dom| g) ( |cod| g) (\\<lambda>x. g |@| x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g = ZFfun (|dom|g) (|cod|g) ((|@|) g)", "using fung"], ["proof (prove)\nusing this:\n  isZFfun g\n\ngoal (1 subgoal):\n 1. g = ZFfun (|dom|g) (|cod|g) ((|@|) g)", "by (rule ZFfun)"], ["proof (state)\nthis:\n  g = ZFfun (|dom|g) (|cod|g) ((|@|) g)\n\ngoal (1 subgoal):\n 1. f = g", "hence 2: \"g = ZFfun ( |dom| f) ( |cod| f) (\\<lambda>x. g |@| x)\""], ["proof (prove)\nusing this:\n  g = ZFfun (|dom|g) (|cod|g) ((|@|) g)\n\ngoal (1 subgoal):\n 1. g = ZFfun (|dom|f) (|cod|f) ((|@|) g)", "using assms"], ["proof (prove)\nusing this:\n  g = ZFfun (|dom|g) (|cod|g) ((|@|) g)\n  |dom|f = |dom|g\n  |cod|f = |cod|g\n  isZFfun f\n  isZFfun g\n  ?x |\\<in>| |dom|f \\<Longrightarrow> f |@| ?x = g |@| ?x\n\ngoal (1 subgoal):\n 1. g = ZFfun (|dom|f) (|cod|f) ((|@|) g)", "by simp"], ["proof (state)\nthis:\n  g = ZFfun (|dom|f) (|cod|f) ((|@|) g)\n\ngoal (1 subgoal):\n 1. f = g", "have \"ZFfun ( |dom| f) ( |cod| f) (\\<lambda>x. f |@| x) = ZFfun ( |dom| f) ( |cod| f) (\\<lambda>x. g |@| x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFfun (|dom|f) (|cod|f) ((|@|) f) = ZFfun (|dom|f) (|cod|f) ((|@|) g)", "using assms"], ["proof (prove)\nusing this:\n  |dom|f = |dom|g\n  |cod|f = |cod|g\n  isZFfun f\n  isZFfun g\n  ?x |\\<in>| |dom|f \\<Longrightarrow> f |@| ?x = g |@| ?x\n\ngoal (1 subgoal):\n 1. ZFfun (|dom|f) (|cod|f) ((|@|) f) = ZFfun (|dom|f) (|cod|f) ((|@|) g)", "by (simp add: ZFfun_ext)"], ["proof (state)\nthis:\n  ZFfun (|dom|f) (|cod|f) ((|@|) f) = ZFfun (|dom|f) (|cod|f) ((|@|) g)\n\ngoal (1 subgoal):\n 1. f = g", "thus ?thesis"], ["proof (prove)\nusing this:\n  ZFfun (|dom|f) (|cod|f) ((|@|) f) = ZFfun (|dom|f) (|cod|f) ((|@|) g)\n\ngoal (1 subgoal):\n 1. f = g", "using 1 2"], ["proof (prove)\nusing this:\n  ZFfun (|dom|f) (|cod|f) ((|@|) f) = ZFfun (|dom|f) (|cod|f) ((|@|) g)\n  f = ZFfun (|dom|f) (|cod|f) ((|@|) f)\n  g = ZFfun (|dom|f) (|cod|f) ((|@|) g)\n\ngoal (1 subgoal):\n 1. f = g", "by simp"], ["proof (state)\nthis:\n  f = g\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ZFfunDomAppCod: \n  assumes \"isZFfun f\"\n  and     \"x |\\<in>| |dom|f\"\n  shows   \"f |@| x |\\<in>| |cod|f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f |@| x |\\<in>| |cod|f", "proof(simp add: ZFfunApp_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. Snd f \\<acute> x |\\<in>| |cod|f", "have \"app (Snd f) x |\\<in>| Range (Snd f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Snd f \\<acute> x |\\<in>| HOLZF.Range (Snd f)", "using assms"], ["proof (prove)\nusing this:\n  isZFfun f\n  x |\\<in>| |dom|f\n\ngoal (1 subgoal):\n 1. Snd f \\<acute> x |\\<in>| HOLZF.Range (Snd f)", "by (auto simp add: fun_value_in_range )"], ["proof (state)\nthis:\n  Snd f \\<acute> x |\\<in>| HOLZF.Range (Snd f)\n\ngoal (1 subgoal):\n 1. Snd f \\<acute> x |\\<in>| |cod|f", "thus \"app (Snd f) x |\\<in>| |cod|f\""], ["proof (prove)\nusing this:\n  Snd f \\<acute> x |\\<in>| HOLZF.Range (Snd f)\n\ngoal (1 subgoal):\n 1. Snd f \\<acute> x |\\<in>| |cod|f", "using assms"], ["proof (prove)\nusing this:\n  Snd f \\<acute> x |\\<in>| HOLZF.Range (Snd f)\n  isZFfun f\n  x |\\<in>| |dom|f\n\ngoal (1 subgoal):\n 1. Snd f \\<acute> x |\\<in>| |cod|f", "by (auto simp add: HOLZF.subset_def)"], ["proof (state)\nthis:\n  Snd f \\<acute> x |\\<in>| |cod|f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ZFfunComp: \n  assumes \"\\<forall> x . x |\\<in>| A \\<longrightarrow> f x |\\<in>| B\"\n  shows   \"(ZFfun A B f) |o| (ZFfun B C g) = ZFfun A C (g o f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFfun A B f |o| ZFfun B C g = ZFfun A C (g \\<circ> f)", "proof (simp add: ZFfunComp_def ZFfunDom ZFfunCod)"], ["proof (state)\ngoal (1 subgoal):\n 1. ZFfun A C (\\<lambda>x. ZFfun B C g |@| (ZFfun A B f |@| x)) =\n    ZFfun A C (g \\<circ> f)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. ZFfun A C (\\<lambda>x. ZFfun B C g |@| (ZFfun A B f |@| x)) =\n    ZFfun A C (g \\<circ> f)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. ZFfun A C (\\<lambda>x. ZFfun B C g |@| (ZFfun A B f |@| x)) =\n    ZFfun A C (g \\<circ> f)", "assume a: \"x |\\<in>| A\""], ["proof (state)\nthis:\n  x |\\<in>| A\n\ngoal (1 subgoal):\n 1. ZFfun A C (\\<lambda>x. ZFfun B C g |@| (ZFfun A B f |@| x)) =\n    ZFfun A C (g \\<circ> f)", "have \"ZFfun B C g  |@| (ZFfun A B f |@| x) = (g o f) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFfun B C g |@| (ZFfun A B f |@| x) = (g \\<circ> f) x", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. ZFfun B C g |@| (ZFfun A B f |@| x) = (g \\<circ> f) x", "have \"(ZFfun A B f |@| x) = f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFfun A B f |@| x = f x", "using a"], ["proof (prove)\nusing this:\n  x |\\<in>| A\n\ngoal (1 subgoal):\n 1. ZFfun A B f |@| x = f x", "by (simp add: ZFfunApp)"], ["proof (state)\nthis:\n  ZFfun A B f |@| x = f x\n\ngoal (1 subgoal):\n 1. ZFfun B C g |@| (ZFfun A B f |@| x) = (g \\<circ> f) x", "hence \"ZFfun B C g  |@| (ZFfun A B f |@| x) = g (f x)\""], ["proof (prove)\nusing this:\n  ZFfun A B f |@| x = f x\n\ngoal (1 subgoal):\n 1. ZFfun B C g |@| (ZFfun A B f |@| x) = g (f x)", "using assms a"], ["proof (prove)\nusing this:\n  ZFfun A B f |@| x = f x\n  \\<forall>x. x |\\<in>| A \\<longrightarrow> f x |\\<in>| B\n  x |\\<in>| A\n\ngoal (1 subgoal):\n 1. ZFfun B C g |@| (ZFfun A B f |@| x) = g (f x)", "by (simp add: ZFfunApp)"], ["proof (state)\nthis:\n  ZFfun B C g |@| (ZFfun A B f |@| x) = g (f x)\n\ngoal (1 subgoal):\n 1. ZFfun B C g |@| (ZFfun A B f |@| x) = (g \\<circ> f) x", "thus ?thesis"], ["proof (prove)\nusing this:\n  ZFfun B C g |@| (ZFfun A B f |@| x) = g (f x)\n\ngoal (1 subgoal):\n 1. ZFfun B C g |@| (ZFfun A B f |@| x) = (g \\<circ> f) x", "by simp"], ["proof (state)\nthis:\n  ZFfun B C g |@| (ZFfun A B f |@| x) = (g \\<circ> f) x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ZFfun B C g |@| (ZFfun A B f |@| x) = (g \\<circ> f) x\n\ngoal (1 subgoal):\n 1. ZFfun A C (\\<lambda>x. ZFfun B C g |@| (ZFfun A B f |@| x)) =\n    ZFfun A C (g \\<circ> f)", "}"], ["proof (state)\nthis:\n  ?x2 |\\<in>| A \\<Longrightarrow>\n  ZFfun B C g |@| (ZFfun A B f |@| ?x2) = (g \\<circ> f) ?x2\n\ngoal (1 subgoal):\n 1. ZFfun A C (\\<lambda>x. ZFfun B C g |@| (ZFfun A B f |@| x)) =\n    ZFfun A C (g \\<circ> f)", "thus \"ZFfun A C (\\<lambda>x. ZFfun B C g |@| (ZFfun A B f |@| x)) = ZFfun A C (g \\<circ> f)\""], ["proof (prove)\nusing this:\n  ?x2 |\\<in>| A \\<Longrightarrow>\n  ZFfun B C g |@| (ZFfun A B f |@| ?x2) = (g \\<circ> f) ?x2\n\ngoal (1 subgoal):\n 1. ZFfun A C (\\<lambda>x. ZFfun B C g |@| (ZFfun A B f |@| x)) =\n    ZFfun A C (g \\<circ> f)", "by (simp add: ZFfun_ext)"], ["proof (state)\nthis:\n  ZFfun A C (\\<lambda>x. ZFfun B C g |@| (ZFfun A B f |@| x)) =\n  ZFfun A C (g \\<circ> f)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ZFfunCompApp: \n  assumes a:\"isZFfun f\" and b:\"isZFfun g\" and c:\"|dom|g = |cod|f\"\n  shows \"f |o| g = ZFfun ( |dom| f) ( |cod| g) (\\<lambda> x . g |@| (f |@| x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f |o| g = ZFfun (|dom|f) (|cod|g) (\\<lambda>x. g |@| (f |@| x))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. f |o| g = ZFfun (|dom|f) (|cod|g) (\\<lambda>x. g |@| (f |@| x))", "have 1: \"f = ZFfun ( |dom| f) ( |cod| f) (\\<lambda> x . f |@| x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f = ZFfun (|dom|f) (|cod|f) ((|@|) f)", "using a"], ["proof (prove)\nusing this:\n  isZFfun f\n\ngoal (1 subgoal):\n 1. f = ZFfun (|dom|f) (|cod|f) ((|@|) f)", "by (rule ZFfun)"], ["proof (state)\nthis:\n  f = ZFfun (|dom|f) (|cod|f) ((|@|) f)\n\ngoal (1 subgoal):\n 1. f |o| g = ZFfun (|dom|f) (|cod|g) (\\<lambda>x. g |@| (f |@| x))", "have 2: \"g = ZFfun ( |dom| g) ( |cod| g) (\\<lambda> x . g |@| x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g = ZFfun (|dom|g) (|cod|g) ((|@|) g)", "using b"], ["proof (prove)\nusing this:\n  isZFfun g\n\ngoal (1 subgoal):\n 1. g = ZFfun (|dom|g) (|cod|g) ((|@|) g)", "by (rule ZFfun)"], ["proof (state)\nthis:\n  g = ZFfun (|dom|g) (|cod|g) ((|@|) g)\n\ngoal (1 subgoal):\n 1. f |o| g = ZFfun (|dom|f) (|cod|g) (\\<lambda>x. g |@| (f |@| x))", "have 3: \"\\<forall> x . x |\\<in>| |dom|f \\<longrightarrow> (\\<lambda>x. f |@| x) x |\\<in>| |cod|f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. x |\\<in>| |dom|f \\<longrightarrow> f |@| x |\\<in>| |cod|f", "using a"], ["proof (prove)\nusing this:\n  isZFfun f\n\ngoal (1 subgoal):\n 1. \\<forall>x. x |\\<in>| |dom|f \\<longrightarrow> f |@| x |\\<in>| |cod|f", "by (simp add: ZFfunDomAppCod)"], ["proof (state)\nthis:\n  \\<forall>x. x |\\<in>| |dom|f \\<longrightarrow> f |@| x |\\<in>| |cod|f\n\ngoal (1 subgoal):\n 1. f |o| g = ZFfun (|dom|f) (|cod|g) (\\<lambda>x. g |@| (f |@| x))", "hence 4: \"\\<forall> x . x |\\<in>| |dom|f \\<longrightarrow> (\\<lambda>x. g |@| (f |@| x)) x |\\<in>| |cod|g\""], ["proof (prove)\nusing this:\n  \\<forall>x. x |\\<in>| |dom|f \\<longrightarrow> f |@| x |\\<in>| |cod|f\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       x |\\<in>| |dom|f \\<longrightarrow> g |@| (f |@| x) |\\<in>| |cod|g", "using a b c"], ["proof (prove)\nusing this:\n  \\<forall>x. x |\\<in>| |dom|f \\<longrightarrow> f |@| x |\\<in>| |cod|f\n  isZFfun f\n  isZFfun g\n  |dom|g = |cod|f\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       x |\\<in>| |dom|f \\<longrightarrow> g |@| (f |@| x) |\\<in>| |cod|g", "by (simp add: ZFfunDomAppCod)"], ["proof (state)\nthis:\n  \\<forall>x.\n     x |\\<in>| |dom|f \\<longrightarrow> g |@| (f |@| x) |\\<in>| |cod|g\n\ngoal (1 subgoal):\n 1. f |o| g = ZFfun (|dom|f) (|cod|g) (\\<lambda>x. g |@| (f |@| x))", "have \"f |o| g = ZFfun ( |dom| f) ( |cod| f) (\\<lambda> x . f |@| x) |o|\n    ZFfun ( |cod| f) ( |cod| g) (\\<lambda> x . g |@| x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f |o| g =\n    ZFfun (|dom|f) (|cod|f) ((|@|) f) |o| ZFfun (|cod|f) (|cod|g) ((|@|) g)", "using 1 2 c"], ["proof (prove)\nusing this:\n  f = ZFfun (|dom|f) (|cod|f) ((|@|) f)\n  g = ZFfun (|dom|g) (|cod|g) ((|@|) g)\n  |dom|g = |cod|f\n\ngoal (1 subgoal):\n 1. f |o| g =\n    ZFfun (|dom|f) (|cod|f) ((|@|) f) |o| ZFfun (|cod|f) (|cod|g) ((|@|) g)", "by simp"], ["proof (state)\nthis:\n  f |o| g =\n  ZFfun (|dom|f) (|cod|f) ((|@|) f) |o| ZFfun (|cod|f) (|cod|g) ((|@|) g)\n\ngoal (1 subgoal):\n 1. f |o| g = ZFfun (|dom|f) (|cod|g) (\\<lambda>x. g |@| (f |@| x))", "hence \"f |o| g = ZFfun ( |dom| f) ( |cod| g) (\\<lambda> x . g |@| (f |@| x))\""], ["proof (prove)\nusing this:\n  f |o| g =\n  ZFfun (|dom|f) (|cod|f) ((|@|) f) |o| ZFfun (|cod|f) (|cod|g) ((|@|) g)\n\ngoal (1 subgoal):\n 1. f |o| g = ZFfun (|dom|f) (|cod|g) (\\<lambda>x. g |@| (f |@| x))", "using 3"], ["proof (prove)\nusing this:\n  f |o| g =\n  ZFfun (|dom|f) (|cod|f) ((|@|) f) |o| ZFfun (|cod|f) (|cod|g) ((|@|) g)\n  \\<forall>x. x |\\<in>| |dom|f \\<longrightarrow> f |@| x |\\<in>| |cod|f\n\ngoal (1 subgoal):\n 1. f |o| g = ZFfun (|dom|f) (|cod|g) (\\<lambda>x. g |@| (f |@| x))", "by (simp add: ZFfunComp comp_def)"], ["proof (state)\nthis:\n  f |o| g = ZFfun (|dom|f) (|cod|g) (\\<lambda>x. g |@| (f |@| x))\n\ngoal (1 subgoal):\n 1. f |o| g = ZFfun (|dom|f) (|cod|g) (\\<lambda>x. g |@| (f |@| x))", "thus ?thesis"], ["proof (prove)\nusing this:\n  f |o| g = ZFfun (|dom|f) (|cod|g) (\\<lambda>x. g |@| (f |@| x))\n\ngoal (1 subgoal):\n 1. f |o| g = ZFfun (|dom|f) (|cod|g) (\\<lambda>x. g |@| (f |@| x))", "using 4"], ["proof (prove)\nusing this:\n  f |o| g = ZFfun (|dom|f) (|cod|g) (\\<lambda>x. g |@| (f |@| x))\n  \\<forall>x.\n     x |\\<in>| |dom|f \\<longrightarrow> g |@| (f |@| x) |\\<in>| |cod|g\n\ngoal (1 subgoal):\n 1. f |o| g = ZFfun (|dom|f) (|cod|g) (\\<lambda>x. g |@| (f |@| x))", "by (simp add: SETfun)"], ["proof (state)\nthis:\n  f |o| g = ZFfun (|dom|f) (|cod|g) (\\<lambda>x. g |@| (f |@| x))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ZFfunCompAppZFfun: \n  assumes \"isZFfun f\" and \"isZFfun g\" and \"|dom|g = |cod|f\"\n  shows   \"isZFfun (f |o| g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isZFfun (f |o| g)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. isZFfun (f |o| g)", "have \"f |o| g = ZFfun ( |dom| f) ( |cod| g) (\\<lambda> x . g |@| (f |@| x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f |o| g = ZFfun (|dom|f) (|cod|g) (\\<lambda>x. g |@| (f |@| x))", "using assms"], ["proof (prove)\nusing this:\n  isZFfun f\n  isZFfun g\n  |dom|g = |cod|f\n\ngoal (1 subgoal):\n 1. f |o| g = ZFfun (|dom|f) (|cod|g) (\\<lambda>x. g |@| (f |@| x))", "by (simp add: ZFfunCompApp)"], ["proof (state)\nthis:\n  f |o| g = ZFfun (|dom|f) (|cod|g) (\\<lambda>x. g |@| (f |@| x))\n\ngoal (1 subgoal):\n 1. isZFfun (f |o| g)", "moreover"], ["proof (state)\nthis:\n  f |o| g = ZFfun (|dom|f) (|cod|g) (\\<lambda>x. g |@| (f |@| x))\n\ngoal (1 subgoal):\n 1. isZFfun (f |o| g)", "have \"\\<forall> x . x |\\<in>| |dom|f \\<longrightarrow> ((\\<lambda> x . g |@| (f |@| x)) x) |\\<in>| |cod|g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       x |\\<in>| |dom|f \\<longrightarrow> g |@| (f |@| x) |\\<in>| |cod|g", "using assms"], ["proof (prove)\nusing this:\n  isZFfun f\n  isZFfun g\n  |dom|g = |cod|f\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       x |\\<in>| |dom|f \\<longrightarrow> g |@| (f |@| x) |\\<in>| |cod|g", "by (simp add: ZFfunDomAppCod)"], ["proof (state)\nthis:\n  \\<forall>x.\n     x |\\<in>| |dom|f \\<longrightarrow> g |@| (f |@| x) |\\<in>| |cod|g\n\ngoal (1 subgoal):\n 1. isZFfun (f |o| g)", "ultimately"], ["proof (chain)\npicking this:\n  f |o| g = ZFfun (|dom|f) (|cod|g) (\\<lambda>x. g |@| (f |@| x))\n  \\<forall>x.\n     x |\\<in>| |dom|f \\<longrightarrow> g |@| (f |@| x) |\\<in>| |cod|g", "show ?thesis"], ["proof (prove)\nusing this:\n  f |o| g = ZFfun (|dom|f) (|cod|g) (\\<lambda>x. g |@| (f |@| x))\n  \\<forall>x.\n     x |\\<in>| |dom|f \\<longrightarrow> g |@| (f |@| x) |\\<in>| |cod|g\n\ngoal (1 subgoal):\n 1. isZFfun (f |o| g)", "by (simp add: SETfun)"], ["proof (state)\nthis:\n  isZFfun (f |o| g)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ZFfunCompAssoc:\n  assumes a: \"isZFfun f\" and b:\"isZFfun h\" and c:\"|cod|g = |dom|h\" \n  and d:\"isZFfun g\" and e:\"|cod|f = |dom|g\"\n  shows \"f |o| g |o| h = f |o| (g |o| h)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f |o| g |o| h = f |o| (g |o| h)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. f |o| g |o| h = f |o| (g |o| h)", "have 1: \"f = ZFfun ( |dom| f) ( |cod| f) (\\<lambda> x . f |@| x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f = ZFfun (|dom|f) (|cod|f) ((|@|) f)", "using a"], ["proof (prove)\nusing this:\n  isZFfun f\n\ngoal (1 subgoal):\n 1. f = ZFfun (|dom|f) (|cod|f) ((|@|) f)", "by (rule ZFfun)"], ["proof (state)\nthis:\n  f = ZFfun (|dom|f) (|cod|f) ((|@|) f)\n\ngoal (1 subgoal):\n 1. f |o| g |o| h = f |o| (g |o| h)", "have 2: \"g = ZFfun ( |dom| g) ( |cod| g) (\\<lambda> x . g |@| x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g = ZFfun (|dom|g) (|cod|g) ((|@|) g)", "using d"], ["proof (prove)\nusing this:\n  isZFfun g\n\ngoal (1 subgoal):\n 1. g = ZFfun (|dom|g) (|cod|g) ((|@|) g)", "by (rule ZFfun)"], ["proof (state)\nthis:\n  g = ZFfun (|dom|g) (|cod|g) ((|@|) g)\n\ngoal (1 subgoal):\n 1. f |o| g |o| h = f |o| (g |o| h)", "have 3: \"h = ZFfun ( |dom| h) ( |cod| h) (\\<lambda> x . h |@| x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h = ZFfun (|dom|h) (|cod|h) ((|@|) h)", "using b"], ["proof (prove)\nusing this:\n  isZFfun h\n\ngoal (1 subgoal):\n 1. h = ZFfun (|dom|h) (|cod|h) ((|@|) h)", "by (rule ZFfun)"], ["proof (state)\nthis:\n  h = ZFfun (|dom|h) (|cod|h) ((|@|) h)\n\ngoal (1 subgoal):\n 1. f |o| g |o| h = f |o| (g |o| h)", "have 4: \"\\<forall> x . x |\\<in>| |dom|f \\<longrightarrow> (\\<lambda>x. f |@| x) x |\\<in>| |cod|f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. x |\\<in>| |dom|f \\<longrightarrow> f |@| x |\\<in>| |cod|f", "using a"], ["proof (prove)\nusing this:\n  isZFfun f\n\ngoal (1 subgoal):\n 1. \\<forall>x. x |\\<in>| |dom|f \\<longrightarrow> f |@| x |\\<in>| |cod|f", "by (simp add: ZFfunDomAppCod)"], ["proof (state)\nthis:\n  \\<forall>x. x |\\<in>| |dom|f \\<longrightarrow> f |@| x |\\<in>| |cod|f\n\ngoal (1 subgoal):\n 1. f |o| g |o| h = f |o| (g |o| h)", "have \"(f |o| g) |o| h = ZFfun ( |dom| f) ( |cod| h) (\\<lambda> x . h |@| (g |@| (f |@| x)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f |o| g |o| h =\n    ZFfun (|dom|f) (|cod|h) (\\<lambda>x. h |@| (g |@| (f |@| x)))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. f |o| g |o| h =\n    ZFfun (|dom|f) (|cod|h) (\\<lambda>x. h |@| (g |@| (f |@| x)))", "have 5: \"\\<forall> x . x |\\<in>| |dom|f \\<longrightarrow> (\\<lambda>x. g |@| (f |@| x)) x |\\<in>| |cod|g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       x |\\<in>| |dom|f \\<longrightarrow> g |@| (f |@| x) |\\<in>| |cod|g", "using 4 e d"], ["proof (prove)\nusing this:\n  \\<forall>x. x |\\<in>| |dom|f \\<longrightarrow> f |@| x |\\<in>| |cod|f\n  |cod|f = |dom|g\n  isZFfun g\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       x |\\<in>| |dom|f \\<longrightarrow> g |@| (f |@| x) |\\<in>| |cod|g", "by (simp add: ZFfunDomAppCod)"], ["proof (state)\nthis:\n  \\<forall>x.\n     x |\\<in>| |dom|f \\<longrightarrow> g |@| (f |@| x) |\\<in>| |cod|g\n\ngoal (1 subgoal):\n 1. f |o| g |o| h =\n    ZFfun (|dom|f) (|cod|h) (\\<lambda>x. h |@| (g |@| (f |@| x)))", "have \"(f |o| g) |o| h = (ZFfun ( |dom| f) ( |cod| f) (\\<lambda> x . f |@| x) |o|\n      ZFfun ( |cod| f) ( |cod| g) (\\<lambda> x . g |@| x)) |o|\n      ZFfun ( |cod| g) ( |cod| h) (\\<lambda> x . h |@| x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f |o| g |o| h =\n    ZFfun (|dom|f) (|cod|f) ((|@|) f) |o|\n    ZFfun (|cod|f) (|cod|g) ((|@|) g) |o|\n    ZFfun (|cod|g) (|cod|h) ((|@|) h)", "using 1 2 3 c e"], ["proof (prove)\nusing this:\n  f = ZFfun (|dom|f) (|cod|f) ((|@|) f)\n  g = ZFfun (|dom|g) (|cod|g) ((|@|) g)\n  h = ZFfun (|dom|h) (|cod|h) ((|@|) h)\n  |cod|g = |dom|h\n  |cod|f = |dom|g\n\ngoal (1 subgoal):\n 1. f |o| g |o| h =\n    ZFfun (|dom|f) (|cod|f) ((|@|) f) |o|\n    ZFfun (|cod|f) (|cod|g) ((|@|) g) |o|\n    ZFfun (|cod|g) (|cod|h) ((|@|) h)", "by (simp)"], ["proof (state)\nthis:\n  f |o| g |o| h =\n  ZFfun (|dom|f) (|cod|f) ((|@|) f) |o|\n  ZFfun (|cod|f) (|cod|g) ((|@|) g) |o|\n  ZFfun (|cod|g) (|cod|h) ((|@|) h)\n\ngoal (1 subgoal):\n 1. f |o| g |o| h =\n    ZFfun (|dom|f) (|cod|h) (\\<lambda>x. h |@| (g |@| (f |@| x)))", "thus ?thesis"], ["proof (prove)\nusing this:\n  f |o| g |o| h =\n  ZFfun (|dom|f) (|cod|f) ((|@|) f) |o|\n  ZFfun (|cod|f) (|cod|g) ((|@|) g) |o|\n  ZFfun (|cod|g) (|cod|h) ((|@|) h)\n\ngoal (1 subgoal):\n 1. f |o| g |o| h =\n    ZFfun (|dom|f) (|cod|h) (\\<lambda>x. h |@| (g |@| (f |@| x)))", "using 4 5"], ["proof (prove)\nusing this:\n  f |o| g |o| h =\n  ZFfun (|dom|f) (|cod|f) ((|@|) f) |o|\n  ZFfun (|cod|f) (|cod|g) ((|@|) g) |o|\n  ZFfun (|cod|g) (|cod|h) ((|@|) h)\n  \\<forall>x. x |\\<in>| |dom|f \\<longrightarrow> f |@| x |\\<in>| |cod|f\n  \\<forall>x.\n     x |\\<in>| |dom|f \\<longrightarrow> g |@| (f |@| x) |\\<in>| |cod|g\n\ngoal (1 subgoal):\n 1. f |o| g |o| h =\n    ZFfun (|dom|f) (|cod|h) (\\<lambda>x. h |@| (g |@| (f |@| x)))", "by (simp add: ZFfunComp comp_def)"], ["proof (state)\nthis:\n  f |o| g |o| h =\n  ZFfun (|dom|f) (|cod|h) (\\<lambda>x. h |@| (g |@| (f |@| x)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f |o| g |o| h =\n  ZFfun (|dom|f) (|cod|h) (\\<lambda>x. h |@| (g |@| (f |@| x)))\n\ngoal (1 subgoal):\n 1. f |o| g |o| h = f |o| (g |o| h)", "moreover"], ["proof (state)\nthis:\n  f |o| g |o| h =\n  ZFfun (|dom|f) (|cod|h) (\\<lambda>x. h |@| (g |@| (f |@| x)))\n\ngoal (1 subgoal):\n 1. f |o| g |o| h = f |o| (g |o| h)", "have \"f |o| (g |o| h) = ZFfun ( |dom| f) ( |cod| h) (\\<lambda> x . h |@| (g |@| (f |@| x)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f |o| (g |o| h) =\n    ZFfun (|dom|f) (|cod|h) (\\<lambda>x. h |@| (g |@| (f |@| x)))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. f |o| (g |o| h) =\n    ZFfun (|dom|f) (|cod|h) (\\<lambda>x. h |@| (g |@| (f |@| x)))", "have 5: \"\\<forall> x . x |\\<in>| |dom|g \\<longrightarrow> (\\<lambda>x. g |@| x) x |\\<in>| |cod|g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. x |\\<in>| |dom|g \\<longrightarrow> g |@| x |\\<in>| |cod|g", "using d"], ["proof (prove)\nusing this:\n  isZFfun g\n\ngoal (1 subgoal):\n 1. \\<forall>x. x |\\<in>| |dom|g \\<longrightarrow> g |@| x |\\<in>| |cod|g", "by (simp add: ZFfunDomAppCod)"], ["proof (state)\nthis:\n  \\<forall>x. x |\\<in>| |dom|g \\<longrightarrow> g |@| x |\\<in>| |cod|g\n\ngoal (1 subgoal):\n 1. f |o| (g |o| h) =\n    ZFfun (|dom|f) (|cod|h) (\\<lambda>x. h |@| (g |@| (f |@| x)))", "have \"f |o| (g |o| h) = ZFfun ( |dom| f) ( |dom| g) (\\<lambda> x . f |@| x) |o|\n      (ZFfun ( |dom| g) ( |cod| g) (\\<lambda> x . g |@| x) |o|\n      ZFfun ( |cod| g) ( |cod| h) (\\<lambda> x . h |@| x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f |o| (g |o| h) =\n    ZFfun (|dom|f) (|dom|g) ((|@|) f) |o|\n    (ZFfun (|dom|g) (|cod|g) ((|@|) g) |o|\n     ZFfun (|cod|g) (|cod|h) ((|@|) h))", "using 1 2 3 c e"], ["proof (prove)\nusing this:\n  f = ZFfun (|dom|f) (|cod|f) ((|@|) f)\n  g = ZFfun (|dom|g) (|cod|g) ((|@|) g)\n  h = ZFfun (|dom|h) (|cod|h) ((|@|) h)\n  |cod|g = |dom|h\n  |cod|f = |dom|g\n\ngoal (1 subgoal):\n 1. f |o| (g |o| h) =\n    ZFfun (|dom|f) (|dom|g) ((|@|) f) |o|\n    (ZFfun (|dom|g) (|cod|g) ((|@|) g) |o|\n     ZFfun (|cod|g) (|cod|h) ((|@|) h))", "by (simp)"], ["proof (state)\nthis:\n  f |o| (g |o| h) =\n  ZFfun (|dom|f) (|dom|g) ((|@|) f) |o|\n  (ZFfun (|dom|g) (|cod|g) ((|@|) g) |o| ZFfun (|cod|g) (|cod|h) ((|@|) h))\n\ngoal (1 subgoal):\n 1. f |o| (g |o| h) =\n    ZFfun (|dom|f) (|cod|h) (\\<lambda>x. h |@| (g |@| (f |@| x)))", "thus ?thesis"], ["proof (prove)\nusing this:\n  f |o| (g |o| h) =\n  ZFfun (|dom|f) (|dom|g) ((|@|) f) |o|\n  (ZFfun (|dom|g) (|cod|g) ((|@|) g) |o| ZFfun (|cod|g) (|cod|h) ((|@|) h))\n\ngoal (1 subgoal):\n 1. f |o| (g |o| h) =\n    ZFfun (|dom|f) (|cod|h) (\\<lambda>x. h |@| (g |@| (f |@| x)))", "using 4 e 5"], ["proof (prove)\nusing this:\n  f |o| (g |o| h) =\n  ZFfun (|dom|f) (|dom|g) ((|@|) f) |o|\n  (ZFfun (|dom|g) (|cod|g) ((|@|) g) |o| ZFfun (|cod|g) (|cod|h) ((|@|) h))\n  \\<forall>x. x |\\<in>| |dom|f \\<longrightarrow> f |@| x |\\<in>| |cod|f\n  |cod|f = |dom|g\n  \\<forall>x. x |\\<in>| |dom|g \\<longrightarrow> g |@| x |\\<in>| |cod|g\n\ngoal (1 subgoal):\n 1. f |o| (g |o| h) =\n    ZFfun (|dom|f) (|cod|h) (\\<lambda>x. h |@| (g |@| (f |@| x)))", "by (simp add: ZFfunComp comp_def)"], ["proof (state)\nthis:\n  f |o| (g |o| h) =\n  ZFfun (|dom|f) (|cod|h) (\\<lambda>x. h |@| (g |@| (f |@| x)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f |o| (g |o| h) =\n  ZFfun (|dom|f) (|cod|h) (\\<lambda>x. h |@| (g |@| (f |@| x)))\n\ngoal (1 subgoal):\n 1. f |o| g |o| h = f |o| (g |o| h)", "ultimately"], ["proof (chain)\npicking this:\n  f |o| g |o| h =\n  ZFfun (|dom|f) (|cod|h) (\\<lambda>x. h |@| (g |@| (f |@| x)))\n  f |o| (g |o| h) =\n  ZFfun (|dom|f) (|cod|h) (\\<lambda>x. h |@| (g |@| (f |@| x)))", "show ?thesis"], ["proof (prove)\nusing this:\n  f |o| g |o| h =\n  ZFfun (|dom|f) (|cod|h) (\\<lambda>x. h |@| (g |@| (f |@| x)))\n  f |o| (g |o| h) =\n  ZFfun (|dom|f) (|cod|h) (\\<lambda>x. h |@| (g |@| (f |@| x)))\n\ngoal (1 subgoal):\n 1. f |o| g |o| h = f |o| (g |o| h)", "by simp"], ["proof (state)\nthis:\n  f |o| g |o| h = f |o| (g |o| h)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ZFfunCompAppDomCod: \n  assumes \"isZFfun f\" and \"isZFfun g\" and \"|dom|g = |cod|f\"\n  shows   \"|dom| (f |o| g) = |dom| f \\<and> |cod| (f |o| g) = |cod| g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |dom|f |o| g = |dom|f \\<and> |cod|f |o| g = |cod|g", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. |dom|f |o| g = |dom|f \\<and> |cod|f |o| g = |cod|g", "have \"f |o| g = ZFfun ( |dom| f) ( |cod| g) (\\<lambda> x . g |@| (f |@| x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f |o| g = ZFfun (|dom|f) (|cod|g) (\\<lambda>x. g |@| (f |@| x))", "using assms"], ["proof (prove)\nusing this:\n  isZFfun f\n  isZFfun g\n  |dom|g = |cod|f\n\ngoal (1 subgoal):\n 1. f |o| g = ZFfun (|dom|f) (|cod|g) (\\<lambda>x. g |@| (f |@| x))", "by (simp add: ZFfunCompApp)"], ["proof (state)\nthis:\n  f |o| g = ZFfun (|dom|f) (|cod|g) (\\<lambda>x. g |@| (f |@| x))\n\ngoal (1 subgoal):\n 1. |dom|f |o| g = |dom|f \\<and> |cod|f |o| g = |cod|g", "thus ?thesis"], ["proof (prove)\nusing this:\n  f |o| g = ZFfun (|dom|f) (|cod|g) (\\<lambda>x. g |@| (f |@| x))\n\ngoal (1 subgoal):\n 1. |dom|f |o| g = |dom|f \\<and> |cod|f |o| g = |cod|g", "by (simp add: ZFfunDom ZFfunCod)"], ["proof (state)\nthis:\n  |dom|f |o| g = |dom|f \\<and> |cod|f |o| g = |cod|g\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ZFfunIdLeft: \n  assumes a: \"isZFfun f\" shows \"(ZFfun ( |dom|f) ( |dom|f) (\\<lambda>x. x)) |o| f = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFfun (|dom|f) (|dom|f) (\\<lambda>x. x) |o| f = f", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. ZFfun (|dom|f) (|dom|f) (\\<lambda>x. x) |o| f = f", "let ?g = \"(ZFfun ( |dom|f) ( |dom|f) (\\<lambda>x. x))\""], ["proof (state)\ngoal (1 subgoal):\n 1. ZFfun (|dom|f) (|dom|f) (\\<lambda>x. x) |o| f = f", "have \"ZFfun ( |dom| f) ( |cod| f) (\\<lambda> x . f |@| x) = ?g |o| f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFfun (|dom|f) (|cod|f) ((|@|) f) =\n    ZFfun (|dom|f) (|dom|f) (\\<lambda>x. x) |o| f", "using a"], ["proof (prove)\nusing this:\n  isZFfun f\n\ngoal (1 subgoal):\n 1. ZFfun (|dom|f) (|cod|f) ((|@|) f) =\n    ZFfun (|dom|f) (|dom|f) (\\<lambda>x. x) |o| f", "by (simp add: ZFfun_ext ZFfunApp ZFfunCompApp SETfun ZFfunCod ZFfunDom)"], ["proof (state)\nthis:\n  ZFfun (|dom|f) (|cod|f) ((|@|) f) =\n  ZFfun (|dom|f) (|dom|f) (\\<lambda>x. x) |o| f\n\ngoal (1 subgoal):\n 1. ZFfun (|dom|f) (|dom|f) (\\<lambda>x. x) |o| f = f", "moreover"], ["proof (state)\nthis:\n  ZFfun (|dom|f) (|cod|f) ((|@|) f) =\n  ZFfun (|dom|f) (|dom|f) (\\<lambda>x. x) |o| f\n\ngoal (1 subgoal):\n 1. ZFfun (|dom|f) (|dom|f) (\\<lambda>x. x) |o| f = f", "have \"f = ZFfun ( |dom| f) ( |cod| f) (\\<lambda> x . f |@| x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f = ZFfun (|dom|f) (|cod|f) ((|@|) f)", "using a"], ["proof (prove)\nusing this:\n  isZFfun f\n\ngoal (1 subgoal):\n 1. f = ZFfun (|dom|f) (|cod|f) ((|@|) f)", "by (rule ZFfun)"], ["proof (state)\nthis:\n  f = ZFfun (|dom|f) (|cod|f) ((|@|) f)\n\ngoal (1 subgoal):\n 1. ZFfun (|dom|f) (|dom|f) (\\<lambda>x. x) |o| f = f", "ultimately"], ["proof (chain)\npicking this:\n  ZFfun (|dom|f) (|cod|f) ((|@|) f) =\n  ZFfun (|dom|f) (|dom|f) (\\<lambda>x. x) |o| f\n  f = ZFfun (|dom|f) (|cod|f) ((|@|) f)", "show ?thesis"], ["proof (prove)\nusing this:\n  ZFfun (|dom|f) (|cod|f) ((|@|) f) =\n  ZFfun (|dom|f) (|dom|f) (\\<lambda>x. x) |o| f\n  f = ZFfun (|dom|f) (|cod|f) ((|@|) f)\n\ngoal (1 subgoal):\n 1. ZFfun (|dom|f) (|dom|f) (\\<lambda>x. x) |o| f = f", "by simp"], ["proof (state)\nthis:\n  ZFfun (|dom|f) (|dom|f) (\\<lambda>x. x) |o| f = f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ZFfunIdRight:\n  assumes a: \"isZFfun f\" shows \"f |o| (ZFfun ( |cod|f) ( |cod|f) (\\<lambda>x. x)) = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f |o| ZFfun (|cod|f) (|cod|f) (\\<lambda>x. x) = f", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. f |o| ZFfun (|cod|f) (|cod|f) (\\<lambda>x. x) = f", "let ?g = \"(ZFfun ( |cod|f) ( |cod|f) (\\<lambda>x. x))\""], ["proof (state)\ngoal (1 subgoal):\n 1. f |o| ZFfun (|cod|f) (|cod|f) (\\<lambda>x. x) = f", "have 1: \"\\<forall> x . x |\\<in>| |dom|f \\<longrightarrow> (\\<lambda>x. f |@| x) x |\\<in>| |cod|f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. x |\\<in>| |dom|f \\<longrightarrow> f |@| x |\\<in>| |cod|f", "using a"], ["proof (prove)\nusing this:\n  isZFfun f\n\ngoal (1 subgoal):\n 1. \\<forall>x. x |\\<in>| |dom|f \\<longrightarrow> f |@| x |\\<in>| |cod|f", "by (simp add: ZFfunDomAppCod)"], ["proof (state)\nthis:\n  \\<forall>x. x |\\<in>| |dom|f \\<longrightarrow> f |@| x |\\<in>| |cod|f\n\ngoal (1 subgoal):\n 1. f |o| ZFfun (|cod|f) (|cod|f) (\\<lambda>x. x) = f", "have \"ZFfun ( |dom| f) ( |cod| f) (\\<lambda> x . f |@| x) = f |o| ?g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFfun (|dom|f) (|cod|f) ((|@|) f) =\n    f |o| ZFfun (|cod|f) (|cod|f) (\\<lambda>x. x)", "using a 1"], ["proof (prove)\nusing this:\n  isZFfun f\n  \\<forall>x. x |\\<in>| |dom|f \\<longrightarrow> f |@| x |\\<in>| |cod|f\n\ngoal (1 subgoal):\n 1. ZFfun (|dom|f) (|cod|f) ((|@|) f) =\n    f |o| ZFfun (|cod|f) (|cod|f) (\\<lambda>x. x)", "by (simp add: ZFfun_ext ZFfunApp ZFfunCompApp SETfun ZFfunCod ZFfunDom)"], ["proof (state)\nthis:\n  ZFfun (|dom|f) (|cod|f) ((|@|) f) =\n  f |o| ZFfun (|cod|f) (|cod|f) (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. f |o| ZFfun (|cod|f) (|cod|f) (\\<lambda>x. x) = f", "moreover"], ["proof (state)\nthis:\n  ZFfun (|dom|f) (|cod|f) ((|@|) f) =\n  f |o| ZFfun (|cod|f) (|cod|f) (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. f |o| ZFfun (|cod|f) (|cod|f) (\\<lambda>x. x) = f", "have \"f = ZFfun ( |dom| f) ( |cod| f) (\\<lambda> x . f |@| x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f = ZFfun (|dom|f) (|cod|f) ((|@|) f)", "using a"], ["proof (prove)\nusing this:\n  isZFfun f\n\ngoal (1 subgoal):\n 1. f = ZFfun (|dom|f) (|cod|f) ((|@|) f)", "by (rule ZFfun)"], ["proof (state)\nthis:\n  f = ZFfun (|dom|f) (|cod|f) ((|@|) f)\n\ngoal (1 subgoal):\n 1. f |o| ZFfun (|cod|f) (|cod|f) (\\<lambda>x. x) = f", "ultimately"], ["proof (chain)\npicking this:\n  ZFfun (|dom|f) (|cod|f) ((|@|) f) =\n  f |o| ZFfun (|cod|f) (|cod|f) (\\<lambda>x. x)\n  f = ZFfun (|dom|f) (|cod|f) ((|@|) f)", "show ?thesis"], ["proof (prove)\nusing this:\n  ZFfun (|dom|f) (|cod|f) ((|@|) f) =\n  f |o| ZFfun (|cod|f) (|cod|f) (\\<lambda>x. x)\n  f = ZFfun (|dom|f) (|cod|f) ((|@|) f)\n\ngoal (1 subgoal):\n 1. f |o| ZFfun (|cod|f) (|cod|f) (\\<lambda>x. x) = f", "by simp"], ["proof (state)\nthis:\n  f |o| ZFfun (|cod|f) (|cod|f) (\\<lambda>x. x) = f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma SETCategory: \"Category(SET)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Category SET", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Category SET", "have \"Category_axioms SET'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Category_axioms SET'", "by (auto simp add: Category_axioms_def SET'_def ZFfunCompAppDomCod \n      ZFfunCompAppZFfun ZFfunCompAssoc ZFfunIdLeft ZFfunIdRight ZFfunDom ZFfunCod SETfun MapsTo_def CompDefined_def)"], ["proof (state)\nthis:\n  Category_axioms SET'\n\ngoal (1 subgoal):\n 1. Category SET", "thus ?thesis"], ["proof (prove)\nusing this:\n  Category_axioms SET'\n\ngoal (1 subgoal):\n 1. Category SET", "by (auto simp add: SET_def MakeCat)"], ["proof (state)\nthis:\n  Category SET\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma SETobj: \"X \\<in> Obj (SET)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<in> obj\\<^bsub>SET\\<^esub>", "by (simp add: SET_def SET'_def MakeCat_def)"], ["", "lemma SETcod: \"isZFfun (ZFfun A B f) \\<Longrightarrow> cod\\<^bsub>SET\\<^esub> ZFfun A B f = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isZFfun (ZFfun A B f) \\<Longrightarrow>\n    cod\\<^bsub>SET\\<^esub> ZFfun A B f = B", "by(simp add: SET_def MakeCat_def SET'_def ZFfunCod)"], ["", "lemma SETmor: \"(isZFfun f) = (f \\<in> mor\\<^bsub>SET\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isZFfun f = (f \\<in> mor\\<^bsub>SET\\<^esub>)", "by(simp add: SET_def MakeCat_def SET'_def)"], ["", "lemma SETdom: \"isZFfun (ZFfun A B f) \\<Longrightarrow> dom\\<^bsub>SET\\<^esub> ZFfun A B f = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isZFfun (ZFfun A B f) \\<Longrightarrow>\n    dom\\<^bsub>SET\\<^esub> ZFfun A B f = A", "by(simp add: SET_def MakeCat_def SET'_def ZFfunDom)"], ["", "lemma SETId: assumes \"x |\\<in>| X\" shows \"(Id SET X) |@| x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. id\\<^bsub>SET\\<^esub> X |@| x = x", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. id\\<^bsub>SET\\<^esub> X |@| x = x", "have \"X \\<in> Obj SET\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<in> obj\\<^bsub>SET\\<^esub>", "by (simp add: SET_def SET'_def MakeCat_def)"], ["proof (state)\nthis:\n  X \\<in> obj\\<^bsub>SET\\<^esub>\n\ngoal (1 subgoal):\n 1. id\\<^bsub>SET\\<^esub> X |@| x = x", "hence \"isZFfun(Id SET X)\""], ["proof (prove)\nusing this:\n  X \\<in> obj\\<^bsub>SET\\<^esub>\n\ngoal (1 subgoal):\n 1. isZFfun (id\\<^bsub>SET\\<^esub> X)", "by (simp add: SETCategory Category.CatIdInMor SETmor)"], ["proof (state)\nthis:\n  isZFfun (id\\<^bsub>SET\\<^esub> X)\n\ngoal (1 subgoal):\n 1. id\\<^bsub>SET\\<^esub> X |@| x = x", "moreover"], ["proof (state)\nthis:\n  isZFfun (id\\<^bsub>SET\\<^esub> X)\n\ngoal (1 subgoal):\n 1. id\\<^bsub>SET\\<^esub> X |@| x = x", "have \"(Id SET X) = ZFfun X X (\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. id\\<^bsub>SET\\<^esub> X = ZFfun X X (\\<lambda>x. x)", "using assms"], ["proof (prove)\nusing this:\n  x |\\<in>| X\n\ngoal (1 subgoal):\n 1. id\\<^bsub>SET\\<^esub> X = ZFfun X X (\\<lambda>x. x)", "by (simp add: SET_def SET'_def MakeCat_def)"], ["proof (state)\nthis:\n  id\\<^bsub>SET\\<^esub> X = ZFfun X X (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. id\\<^bsub>SET\\<^esub> X |@| x = x", "ultimately"], ["proof (chain)\npicking this:\n  isZFfun (id\\<^bsub>SET\\<^esub> X)\n  id\\<^bsub>SET\\<^esub> X = ZFfun X X (\\<lambda>x. x)", "show ?thesis"], ["proof (prove)\nusing this:\n  isZFfun (id\\<^bsub>SET\\<^esub> X)\n  id\\<^bsub>SET\\<^esub> X = ZFfun X X (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. id\\<^bsub>SET\\<^esub> X |@| x = x", "using assms"], ["proof (prove)\nusing this:\n  isZFfun (id\\<^bsub>SET\\<^esub> X)\n  id\\<^bsub>SET\\<^esub> X = ZFfun X X (\\<lambda>x. x)\n  x |\\<in>| X\n\ngoal (1 subgoal):\n 1. id\\<^bsub>SET\\<^esub> X |@| x = x", "by (simp add: ZFfunApp)"], ["proof (state)\nthis:\n  id\\<^bsub>SET\\<^esub> X |@| x = x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma SETCompE[elim]: \"\\<lbrakk>f \\<approx>>\\<^bsub>SET\\<^esub> g ; \\<lbrakk>isZFfun f ; isZFfun g ; |cod| f = |dom| g\\<rbrakk> \\<Longrightarrow> R\\<rbrakk> \\<Longrightarrow> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<approx>>\\<^bsub>SET\\<^esub> g;\n     \\<lbrakk>isZFfun f; isZFfun g; |cod|f = |dom|g\\<rbrakk>\n     \\<Longrightarrow> R\\<rbrakk>\n    \\<Longrightarrow> R", "by (auto simp add: SET_def SET'_def MakeCat_def)"], ["", "lemma SETmapsTo: \"f maps\\<^bsub>SET\\<^esub> X to Y \\<Longrightarrow> isZFfun f \\<and> |dom| f = X \\<and> |cod| f = Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f maps\\<^bsub>SET\\<^esub> X to Y \\<Longrightarrow>\n    isZFfun f \\<and> |dom|f = X \\<and> |cod|f = Y", "by(auto simp add: MapsTo_def SET_def SET'_def MakeCat_def)"], ["", "lemma SETComp: assumes \"f \\<approx>>\\<^bsub>SET\\<^esub> g\" shows \"f ;;\\<^bsub>SET\\<^esub> g = f |o| g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ;;\\<^bsub>SET\\<^esub> g = f |o| g", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. f ;;\\<^bsub>SET\\<^esub> g = f |o| g", "have a: \"f \\<approx>>\\<^bsub>MakeCat SET'\\<^esub> g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<approx>>\\<^bsub>MakeCat SET'\\<^esub> g", "using assms"], ["proof (prove)\nusing this:\n  f \\<approx>>\\<^bsub>SET\\<^esub> g\n\ngoal (1 subgoal):\n 1. f \\<approx>>\\<^bsub>MakeCat SET'\\<^esub> g", "by (simp add: SET_def)"], ["proof (state)\nthis:\n  f \\<approx>>\\<^bsub>MakeCat SET'\\<^esub> g\n\ngoal (1 subgoal):\n 1. f ;;\\<^bsub>SET\\<^esub> g = f |o| g", "have \"f ;;\\<^bsub>SET\\<^esub> g = f ;;\\<^bsub>MakeCat SET'\\<^esub> g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ;;\\<^bsub>SET\\<^esub> g = f ;;\\<^bsub>MakeCat SET'\\<^esub> g", "by (simp add: SET_def)"], ["proof (state)\nthis:\n  f ;;\\<^bsub>SET\\<^esub> g = f ;;\\<^bsub>MakeCat SET'\\<^esub> g\n\ngoal (1 subgoal):\n 1. f ;;\\<^bsub>SET\\<^esub> g = f |o| g", "also"], ["proof (state)\nthis:\n  f ;;\\<^bsub>SET\\<^esub> g = f ;;\\<^bsub>MakeCat SET'\\<^esub> g\n\ngoal (1 subgoal):\n 1. f ;;\\<^bsub>SET\\<^esub> g = f |o| g", "have \"... = f ;;\\<^bsub>SET'\\<^esub> g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ;;\\<^bsub>MakeCat SET'\\<^esub> g = f ;;\\<^bsub>SET'\\<^esub> g", "using a"], ["proof (prove)\nusing this:\n  f \\<approx>>\\<^bsub>MakeCat SET'\\<^esub> g\n\ngoal (1 subgoal):\n 1. f ;;\\<^bsub>MakeCat SET'\\<^esub> g = f ;;\\<^bsub>SET'\\<^esub> g", "by (simp  add: MakeCatComp2)"], ["proof (state)\nthis:\n  f ;;\\<^bsub>MakeCat SET'\\<^esub> g = f ;;\\<^bsub>SET'\\<^esub> g\n\ngoal (1 subgoal):\n 1. f ;;\\<^bsub>SET\\<^esub> g = f |o| g", "finally"], ["proof (chain)\npicking this:\n  f ;;\\<^bsub>SET\\<^esub> g = f ;;\\<^bsub>SET'\\<^esub> g", "show ?thesis"], ["proof (prove)\nusing this:\n  f ;;\\<^bsub>SET\\<^esub> g = f ;;\\<^bsub>SET'\\<^esub> g\n\ngoal (1 subgoal):\n 1. f ;;\\<^bsub>SET\\<^esub> g = f |o| g", "by (simp add: SET'_def)"], ["proof (state)\nthis:\n  f ;;\\<^bsub>SET\\<^esub> g = f |o| g\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma SETCompAt:\n  assumes \"f \\<approx>>\\<^bsub>SET \\<^esub>g\" and \"x |\\<in>|  |dom| f\" shows \"(f ;;\\<^bsub>SET \\<^esub>g) |@| x = g |@| (f |@| x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ;;\\<^bsub>SET\\<^esub> g) |@| x = g |@| (f |@| x)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (f ;;\\<^bsub>SET\\<^esub> g) |@| x = g |@| (f |@| x)", "have \"f ;;\\<^bsub>SET\\<^esub> g = f |o| g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ;;\\<^bsub>SET\\<^esub> g = f |o| g", "using assms"], ["proof (prove)\nusing this:\n  f \\<approx>>\\<^bsub>SET\\<^esub> g\n  x |\\<in>| |dom|f\n\ngoal (1 subgoal):\n 1. f ;;\\<^bsub>SET\\<^esub> g = f |o| g", "by (simp add: SETComp)"], ["proof (state)\nthis:\n  f ;;\\<^bsub>SET\\<^esub> g = f |o| g\n\ngoal (1 subgoal):\n 1. (f ;;\\<^bsub>SET\\<^esub> g) |@| x = g |@| (f |@| x)", "also"], ["proof (state)\nthis:\n  f ;;\\<^bsub>SET\\<^esub> g = f |o| g\n\ngoal (1 subgoal):\n 1. (f ;;\\<^bsub>SET\\<^esub> g) |@| x = g |@| (f |@| x)", "have \"... = ZFfun ( |dom| f) ( |cod| g) (\\<lambda> x . g |@| (f |@| x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f |o| g = ZFfun (|dom|f) (|cod|g) (\\<lambda>x. g |@| (f |@| x))", "using assms"], ["proof (prove)\nusing this:\n  f \\<approx>>\\<^bsub>SET\\<^esub> g\n  x |\\<in>| |dom|f\n\ngoal (1 subgoal):\n 1. f |o| g = ZFfun (|dom|f) (|cod|g) (\\<lambda>x. g |@| (f |@| x))", "by (auto simp add: ZFfunCompApp)"], ["proof (state)\nthis:\n  f |o| g = ZFfun (|dom|f) (|cod|g) (\\<lambda>x. g |@| (f |@| x))\n\ngoal (1 subgoal):\n 1. (f ;;\\<^bsub>SET\\<^esub> g) |@| x = g |@| (f |@| x)", "finally"], ["proof (chain)\npicking this:\n  f ;;\\<^bsub>SET\\<^esub> g =\n  ZFfun (|dom|f) (|cod|g) (\\<lambda>x. g |@| (f |@| x))", "show ?thesis"], ["proof (prove)\nusing this:\n  f ;;\\<^bsub>SET\\<^esub> g =\n  ZFfun (|dom|f) (|cod|g) (\\<lambda>x. g |@| (f |@| x))\n\ngoal (1 subgoal):\n 1. (f ;;\\<^bsub>SET\\<^esub> g) |@| x = g |@| (f |@| x)", "using assms"], ["proof (prove)\nusing this:\n  f ;;\\<^bsub>SET\\<^esub> g =\n  ZFfun (|dom|f) (|cod|g) (\\<lambda>x. g |@| (f |@| x))\n  f \\<approx>>\\<^bsub>SET\\<^esub> g\n  x |\\<in>| |dom|f\n\ngoal (1 subgoal):\n 1. (f ;;\\<^bsub>SET\\<^esub> g) |@| x = g |@| (f |@| x)", "by (simp add: ZFfunApp)"], ["proof (state)\nthis:\n  (f ;;\\<^bsub>SET\\<^esub> g) |@| x = g |@| (f |@| x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma SETZFfun: \n  assumes \"f maps\\<^bsub>SET\\<^esub> X to Y\" shows \"f = ZFfun X Y (\\<lambda>x . f |@| x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f = ZFfun X Y ((|@|) f)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. f = ZFfun X Y ((|@|) f)", "have \"isZFfun f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isZFfun f", "using assms"], ["proof (prove)\nusing this:\n  f maps\\<^bsub>SET\\<^esub> X to Y\n\ngoal (1 subgoal):\n 1. isZFfun f", "by (auto simp add: SETmor)"], ["proof (state)\nthis:\n  isZFfun f\n\ngoal (1 subgoal):\n 1. f = ZFfun X Y ((|@|) f)", "hence \"f = ZFfun ( |dom| f) ( |cod| f) (\\<lambda>x. f |@| x)\""], ["proof (prove)\nusing this:\n  isZFfun f\n\ngoal (1 subgoal):\n 1. f = ZFfun (|dom|f) (|cod|f) ((|@|) f)", "by (simp add: ZFfun)"], ["proof (state)\nthis:\n  f = ZFfun (|dom|f) (|cod|f) ((|@|) f)\n\ngoal (1 subgoal):\n 1. f = ZFfun X Y ((|@|) f)", "moreover"], ["proof (state)\nthis:\n  f = ZFfun (|dom|f) (|cod|f) ((|@|) f)\n\ngoal (1 subgoal):\n 1. f = ZFfun X Y ((|@|) f)", "have \"|dom| f = X\" and \"|cod| f = Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |dom|f = X &&& |cod|f = Y", "using assms"], ["proof (prove)\nusing this:\n  f maps\\<^bsub>SET\\<^esub> X to Y\n\ngoal (1 subgoal):\n 1. |dom|f = X &&& |cod|f = Y", "by (auto simp add: SET_def SET'_def MakeCat_def)"], ["proof (state)\nthis:\n  |dom|f = X\n  |cod|f = Y\n\ngoal (1 subgoal):\n 1. f = ZFfun X Y ((|@|) f)", "ultimately"], ["proof (chain)\npicking this:\n  f = ZFfun (|dom|f) (|cod|f) ((|@|) f)\n  |dom|f = X\n  |cod|f = Y", "show ?thesis"], ["proof (prove)\nusing this:\n  f = ZFfun (|dom|f) (|cod|f) ((|@|) f)\n  |dom|f = X\n  |cod|f = Y\n\ngoal (1 subgoal):\n 1. f = ZFfun X Y ((|@|) f)", "by (simp)"], ["proof (state)\nthis:\n  f = ZFfun X Y ((|@|) f)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma SETfunDomAppCod:\n  assumes \"f maps\\<^bsub>SET \\<^esub>X to Y\" and \"x |\\<in>| X\"\n  shows \"f |@| x |\\<in>| Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f |@| x |\\<in>| Y", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. f |@| x |\\<in>| Y", "have 1: \"isZFfun f\" and \"|dom| f = X\" and 2: \"|cod| f = Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isZFfun f &&& |dom|f = X &&& |cod|f = Y", "using assms"], ["proof (prove)\nusing this:\n  f maps\\<^bsub>SET\\<^esub> X to Y\n  x |\\<in>| X\n\ngoal (1 subgoal):\n 1. isZFfun f &&& |dom|f = X &&& |cod|f = Y", "by (auto simp add: SETmapsTo)"], ["proof (state)\nthis:\n  isZFfun f\n  |dom|f = X\n  |cod|f = Y\n\ngoal (1 subgoal):\n 1. f |@| x |\\<in>| Y", "hence \"x |\\<in>| |dom| f\""], ["proof (prove)\nusing this:\n  isZFfun f\n  |dom|f = X\n  |cod|f = Y\n\ngoal (1 subgoal):\n 1. x |\\<in>| |dom|f", "using assms"], ["proof (prove)\nusing this:\n  isZFfun f\n  |dom|f = X\n  |cod|f = Y\n  f maps\\<^bsub>SET\\<^esub> X to Y\n  x |\\<in>| X\n\ngoal (1 subgoal):\n 1. x |\\<in>| |dom|f", "by simp"], ["proof (state)\nthis:\n  x |\\<in>| |dom|f\n\ngoal (1 subgoal):\n 1. f |@| x |\\<in>| Y", "hence \"f |@| x |\\<in>| |cod| f\""], ["proof (prove)\nusing this:\n  x |\\<in>| |dom|f\n\ngoal (1 subgoal):\n 1. f |@| x |\\<in>| |cod|f", "using 1"], ["proof (prove)\nusing this:\n  x |\\<in>| |dom|f\n  isZFfun f\n\ngoal (1 subgoal):\n 1. f |@| x |\\<in>| |cod|f", "by (simp add: ZFfunDomAppCod)"], ["proof (state)\nthis:\n  f |@| x |\\<in>| |cod|f\n\ngoal (1 subgoal):\n 1. f |@| x |\\<in>| Y", "thus ?thesis"], ["proof (prove)\nusing this:\n  f |@| x |\\<in>| |cod|f\n\ngoal (1 subgoal):\n 1. f |@| x |\\<in>| Y", "using 2"], ["proof (prove)\nusing this:\n  f |@| x |\\<in>| |cod|f\n  |cod|f = Y\n\ngoal (1 subgoal):\n 1. f |@| x |\\<in>| Y", "by simp"], ["proof (state)\nthis:\n  f |@| x |\\<in>| Y\n\ngoal:\nNo subgoals!", "qed"], ["", "(*Locally Small Category has an injective map from the morphisms to ZF*)"], ["", "record ('o,'m) LSCategory = \"('o,'m) Category\" +\n  mor2ZF :: \"'m \\<Rightarrow> ZF\" (\"m2z\\<index>_\" [70] 70)"], ["", "definition \n  ZF2mor (\"z2m\\<index>_\" [70] 70) where\n  \"ZF2mor C f \\<equiv> THE m . m \\<in> mor\\<^bsub>C\\<^esub> \\<and> m2z\\<^bsub>C\\<^esub> m = f\""], ["", "definition\n  \"HOMCollection C X Y \\<equiv> {m2z\\<^bsub>C\\<^esub> f | f . f maps\\<^bsub>C\\<^esub> X to Y}\""], ["", "definition\n  HomSet (\"Hom\\<index> _ _\" [65, 65] 65)  where\n  \"HomSet C X Y \\<equiv> implode (HOMCollection C X Y)\""], ["", "locale LSCategory = Category +\n  assumes mor2ZFInj: \"\\<lbrakk>x \\<in> mor ; y \\<in> mor ; m2z x = m2z y\\<rbrakk> \\<Longrightarrow> x = y\"\n  and HOMSetIsSet: \"\\<lbrakk>X \\<in> obj ; Y \\<in> obj\\<rbrakk> \\<Longrightarrow> HOMCollection C X Y \\<in> range explode\"\n  and m2zExt: \"mor2ZF C \\<in> extensional (Mor C)\""], ["", "lemma [elim]: \"\\<lbrakk>LSCategory C ; \n  \\<lbrakk>Category C ; \\<lbrakk>x \\<in> mor\\<^bsub>C\\<^esub> ; y \\<in> mor\\<^bsub>C\\<^esub> ; m2z\\<^bsub>C\\<^esub> x = m2z\\<^bsub>C\\<^esub> y\\<rbrakk> \\<Longrightarrow>  x = y;\n  \\<lbrakk>X \\<in> obj\\<^bsub>C\\<^esub> ; Y \\<in> obj\\<^bsub>C\\<^esub>\\<rbrakk> \\<Longrightarrow> HOMCollection C X Y \\<in> range explode\\<rbrakk> \\<Longrightarrow> R\\<rbrakk> \\<Longrightarrow> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>LSCategory C;\n     \\<lbrakk>Category C;\n      \\<lbrakk>x \\<in> mor\\<^bsub>C\\<^esub>; y \\<in> mor\\<^bsub>C\\<^esub>;\n       m2z\\<^bsub>C\\<^esub>x = m2z\\<^bsub>C\\<^esub>y\\<rbrakk>\n      \\<Longrightarrow> x = y;\n      \\<lbrakk>X \\<in> obj\\<^bsub>C\\<^esub>;\n       Y \\<in> obj\\<^bsub>C\\<^esub>\\<rbrakk>\n      \\<Longrightarrow> HOMCollection C X Y \\<in> range explode\\<rbrakk>\n     \\<Longrightarrow> R\\<rbrakk>\n    \\<Longrightarrow> R", "by(simp add: LSCategory_def LSCategory_axioms_def)"], ["", "definition\n  HomFtorMap :: \"('o,'m,'a) LSCategory_scheme \\<Rightarrow> 'o \\<Rightarrow> 'm \\<Rightarrow> ZF\" (\"Hom\\<index>[_,_]\" [65,65] 65) where\n  \"HomFtorMap C X g \\<equiv> ZFfun (Hom\\<^bsub>C\\<^esub> X (dom\\<^bsub>C\\<^esub> g)) (Hom\\<^bsub>C\\<^esub> X (cod\\<^bsub>C\\<^esub> g)) (\\<lambda> f . m2z\\<^bsub>C\\<^esub> ((z2m\\<^bsub>C\\<^esub> f) ;;\\<^bsub>C\\<^esub> g))\""], ["", "definition \n  HomFtor' :: \"('o,'m,'a) LSCategory_scheme \\<Rightarrow> 'o \\<Rightarrow> \n      ('o,ZF,'m,ZF,\\<lparr>mor2ZF :: 'm \\<Rightarrow> ZF, \\<dots> :: 'a\\<rparr>,unit) Functor\" (\"HomP\\<index>[_,\\<midarrow>]\" [65] 65) where\n  \"HomFtor' C X \\<equiv> \\<lparr>\n        CatDom = C, \n        CatCod = SET ,\n        MapM   = \\<lambda> g . Hom\\<^bsub>C\\<^esub>[X,g]\n  \\<rparr>\""], ["", "definition HomFtor (\"Hom\\<index>[_,\\<midarrow>]\" [65] 65) where \"HomFtor C X \\<equiv> MakeFtor (HomFtor' C X)\""], ["", "lemma [simp]: \"LSCategory C \\<Longrightarrow> Category C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LSCategory C \\<Longrightarrow> Category C", "by (simp add: LSCategory_def)"], ["", "lemma (in LSCategory) m2zz2m: \n  assumes \"f maps X to Y\" shows \"(m2z f) |\\<in>| (Hom X Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m2zf |\\<in>| (Hom X Y)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. m2zf |\\<in>| (Hom X Y)", "have \"X \\<in> Obj C\" and \"Y \\<in> Obj C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<in> obj &&& Y \\<in> obj", "using assms"], ["proof (prove)\nusing this:\n  f maps X to Y\n\ngoal (1 subgoal):\n 1. X \\<in> obj &&& Y \\<in> obj", "by (simp add: MapsToObj)+"], ["proof (state)\nthis:\n  X \\<in> obj\n  Y \\<in> obj\n\ngoal (1 subgoal):\n 1. m2zf |\\<in>| (Hom X Y)", "hence \"HOMCollection C X Y \\<in> range explode\""], ["proof (prove)\nusing this:\n  X \\<in> obj\n  Y \\<in> obj\n\ngoal (1 subgoal):\n 1. HOMCollection C X Y \\<in> range explode", "using assms"], ["proof (prove)\nusing this:\n  X \\<in> obj\n  Y \\<in> obj\n  f maps X to Y\n\ngoal (1 subgoal):\n 1. HOMCollection C X Y \\<in> range explode", "by (simp add: HOMSetIsSet)"], ["proof (state)\nthis:\n  HOMCollection C X Y \\<in> range explode\n\ngoal (1 subgoal):\n 1. m2zf |\\<in>| (Hom X Y)", "moreover"], ["proof (state)\nthis:\n  HOMCollection C X Y \\<in> range explode\n\ngoal (1 subgoal):\n 1. m2zf |\\<in>| (Hom X Y)", "have \"(m2z f) \\<in> HOMCollection C X Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m2zf \\<in> HOMCollection C X Y", "using assms"], ["proof (prove)\nusing this:\n  f maps X to Y\n\ngoal (1 subgoal):\n 1. m2zf \\<in> HOMCollection C X Y", "by (auto simp add: HOMCollection_def)"], ["proof (state)\nthis:\n  m2zf \\<in> HOMCollection C X Y\n\ngoal (1 subgoal):\n 1. m2zf |\\<in>| (Hom X Y)", "ultimately"], ["proof (chain)\npicking this:\n  HOMCollection C X Y \\<in> range explode\n  m2zf \\<in> HOMCollection C X Y", "have \"(m2z f) |\\<in>| implode (HOMCollection C X Y)\""], ["proof (prove)\nusing this:\n  HOMCollection C X Y \\<in> range explode\n  m2zf \\<in> HOMCollection C X Y\n\ngoal (1 subgoal):\n 1. m2zf |\\<in>| implode (HOMCollection C X Y)", "by (simp add: Elem_implode)"], ["proof (state)\nthis:\n  m2zf |\\<in>| implode (HOMCollection C X Y)\n\ngoal (1 subgoal):\n 1. m2zf |\\<in>| (Hom X Y)", "thus ?thesis"], ["proof (prove)\nusing this:\n  m2zf |\\<in>| implode (HOMCollection C X Y)\n\ngoal (1 subgoal):\n 1. m2zf |\\<in>| (Hom X Y)", "by (simp add: HomSet_def)"], ["proof (state)\nthis:\n  m2zf |\\<in>| (Hom X Y)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in LSCategory) m2zz2mInv: \n  assumes \"f \\<in> mor\"\n  shows \"z2m (m2z f) = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z2mm2zf = f", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. z2mm2zf = f", "have 1: \"f \\<in> mor \\<and> m2z f = m2z f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> mor \\<and> m2zf = m2zf", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> mor\n\ngoal (1 subgoal):\n 1. f \\<in> mor \\<and> m2zf = m2zf", "by simp"], ["proof (state)\nthis:\n  f \\<in> mor \\<and> m2zf = m2zf\n\ngoal (1 subgoal):\n 1. z2mm2zf = f", "moreover"], ["proof (state)\nthis:\n  f \\<in> mor \\<and> m2zf = m2zf\n\ngoal (1 subgoal):\n 1. z2mm2zf = f", "have \"\\<exists>! m . m \\<in> mor \\<and> m2z m = (m2z f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!m. m \\<in> mor \\<and> m2zm = m2zf", "proof(rule ex_ex1I)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>m. m \\<in> mor \\<and> m2zm = m2zf\n 2. \\<And>m y.\n       \\<lbrakk>m \\<in> mor \\<and> m2zm = m2zf;\n        y \\<in> mor \\<and> m2zy = m2zf\\<rbrakk>\n       \\<Longrightarrow> m = y", "show \"\\<exists> m . m \\<in> mor \\<and> m2z m = (m2z f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m. m \\<in> mor \\<and> m2zm = m2zf", "by(rule exI[of _ f], insert 1, simp)"], ["proof (state)\nthis:\n  \\<exists>m. m \\<in> mor \\<and> m2zm = m2zf\n\ngoal (1 subgoal):\n 1. \\<And>m y.\n       \\<lbrakk>m \\<in> mor \\<and> m2zm = m2zf;\n        y \\<in> mor \\<and> m2zy = m2zf\\<rbrakk>\n       \\<Longrightarrow> m = y", "{"], ["proof (state)\nthis:\n  \\<exists>m. m \\<in> mor \\<and> m2zm = m2zf\n\ngoal (1 subgoal):\n 1. \\<And>m y.\n       \\<lbrakk>m \\<in> mor \\<and> m2zm = m2zf;\n        y \\<in> mor \\<and> m2zy = m2zf\\<rbrakk>\n       \\<Longrightarrow> m = y", "fix m y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m y.\n       \\<lbrakk>m \\<in> mor \\<and> m2zm = m2zf;\n        y \\<in> mor \\<and> m2zy = m2zf\\<rbrakk>\n       \\<Longrightarrow> m = y", "assume \"m \\<in> mor \\<and> m2z m = (m2z f)\" and \"y \\<in> mor \\<and> m2z y = (m2z f)\""], ["proof (state)\nthis:\n  m \\<in> mor \\<and> m2zm = m2zf\n  y \\<in> mor \\<and> m2zy = m2zf\n\ngoal (1 subgoal):\n 1. \\<And>m y.\n       \\<lbrakk>m \\<in> mor \\<and> m2zm = m2zf;\n        y \\<in> mor \\<and> m2zy = m2zf\\<rbrakk>\n       \\<Longrightarrow> m = y", "thus \"m = y\""], ["proof (prove)\nusing this:\n  m \\<in> mor \\<and> m2zm = m2zf\n  y \\<in> mor \\<and> m2zy = m2zf\n\ngoal (1 subgoal):\n 1. m = y", "by(simp add: mor2ZFInj)"], ["proof (state)\nthis:\n  m = y\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?m2 \\<in> mor \\<and> m2z?m2 = m2zf;\n   ?y2 \\<in> mor \\<and> m2z?y2 = m2zf\\<rbrakk>\n  \\<Longrightarrow> ?m2 = ?y2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>!m. m \\<in> mor \\<and> m2zm = m2zf\n\ngoal (1 subgoal):\n 1. z2mm2zf = f", "ultimately"], ["proof (chain)\npicking this:\n  f \\<in> mor \\<and> m2zf = m2zf\n  \\<exists>!m. m \\<in> mor \\<and> m2zm = m2zf", "show ?thesis"], ["proof (prove)\nusing this:\n  f \\<in> mor \\<and> m2zf = m2zf\n  \\<exists>!m. m \\<in> mor \\<and> m2zm = m2zf\n\ngoal (1 subgoal):\n 1. z2mm2zf = f", "by(simp add: ZF2mor_def the1_equality)"], ["proof (state)\nthis:\n  z2mm2zf = f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in LSCategory) z2mm2z: \n  assumes \"X \\<in> obj\" and \"Y \\<in> obj\" and \"f |\\<in>| (Hom X Y)\"\n  shows \"z2m f maps X to Y \\<and> m2z (z2m f) = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z2mf maps X to Y \\<and> m2zz2mf = f", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. z2mf maps X to Y \\<and> m2zz2mf = f", "have 1: \"\\<exists> m . m maps X to Y \\<and> m2z m = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m. m maps X to Y \\<and> m2zm = f", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>m. m maps X to Y \\<and> m2zm = f", "have \"HOMCollection C X Y \\<in> range explode\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HOMCollection C X Y \\<in> range explode", "using assms"], ["proof (prove)\nusing this:\n  X \\<in> obj\n  Y \\<in> obj\n  f |\\<in>| (Hom X Y)\n\ngoal (1 subgoal):\n 1. HOMCollection C X Y \\<in> range explode", "by (simp add: HOMSetIsSet)"], ["proof (state)\nthis:\n  HOMCollection C X Y \\<in> range explode\n\ngoal (1 subgoal):\n 1. \\<exists>m. m maps X to Y \\<and> m2zm = f", "moreover"], ["proof (state)\nthis:\n  HOMCollection C X Y \\<in> range explode\n\ngoal (1 subgoal):\n 1. \\<exists>m. m maps X to Y \\<and> m2zm = f", "have \"f |\\<in>| implode (HOMCollection C X Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f |\\<in>| implode (HOMCollection C X Y)", "using assms(3)"], ["proof (prove)\nusing this:\n  f |\\<in>| (Hom X Y)\n\ngoal (1 subgoal):\n 1. f |\\<in>| implode (HOMCollection C X Y)", "by (simp add: HomSet_def)"], ["proof (state)\nthis:\n  f |\\<in>| implode (HOMCollection C X Y)\n\ngoal (1 subgoal):\n 1. \\<exists>m. m maps X to Y \\<and> m2zm = f", "ultimately"], ["proof (chain)\npicking this:\n  HOMCollection C X Y \\<in> range explode\n  f |\\<in>| implode (HOMCollection C X Y)", "have \"f \\<in> HOMCollection C X Y\""], ["proof (prove)\nusing this:\n  HOMCollection C X Y \\<in> range explode\n  f |\\<in>| implode (HOMCollection C X Y)\n\ngoal (1 subgoal):\n 1. f \\<in> HOMCollection C X Y", "by (simp add: HOLZF.Elem_implode)"], ["proof (state)\nthis:\n  f \\<in> HOMCollection C X Y\n\ngoal (1 subgoal):\n 1. \\<exists>m. m maps X to Y \\<and> m2zm = f", "thus ?thesis"], ["proof (prove)\nusing this:\n  f \\<in> HOMCollection C X Y\n\ngoal (1 subgoal):\n 1. \\<exists>m. m maps X to Y \\<and> m2zm = f", "by (auto simp add: HOMCollection_def)"], ["proof (state)\nthis:\n  \\<exists>m. m maps X to Y \\<and> m2zm = f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>m. m maps X to Y \\<and> m2zm = f\n\ngoal (1 subgoal):\n 1. z2mf maps X to Y \\<and> m2zz2mf = f", "have 2: \"\\<exists>! m . m \\<in> mor \\<and> m2z m = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!m. m \\<in> mor \\<and> m2zm = f", "proof(rule ex_ex1I)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>m. m \\<in> mor \\<and> m2zm = f\n 2. \\<And>m y.\n       \\<lbrakk>m \\<in> mor \\<and> m2zm = f;\n        y \\<in> mor \\<and> m2zy = f\\<rbrakk>\n       \\<Longrightarrow> m = y", "show \"\\<exists> m . m \\<in> mor \\<and> m2z m = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m. m \\<in> mor \\<and> m2zm = f", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>m. m \\<in> mor \\<and> m2zm = f", "from 1"], ["proof (chain)\npicking this:\n  \\<exists>m. m maps X to Y \\<and> m2zm = f", "obtain m where \"m \\<in> mor \\<and> m2z m = f\""], ["proof (prove)\nusing this:\n  \\<exists>m. m maps X to Y \\<and> m2zm = f\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        m \\<in> mor \\<and> m2zm = f \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  m \\<in> mor \\<and> m2zm = f\n\ngoal (1 subgoal):\n 1. \\<exists>m. m \\<in> mor \\<and> m2zm = f", "thus ?thesis"], ["proof (prove)\nusing this:\n  m \\<in> mor \\<and> m2zm = f\n\ngoal (1 subgoal):\n 1. \\<exists>m. m \\<in> mor \\<and> m2zm = f", "by auto"], ["proof (state)\nthis:\n  \\<exists>m. m \\<in> mor \\<and> m2zm = f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>m. m \\<in> mor \\<and> m2zm = f\n\ngoal (1 subgoal):\n 1. \\<And>m y.\n       \\<lbrakk>m \\<in> mor \\<and> m2zm = f;\n        y \\<in> mor \\<and> m2zy = f\\<rbrakk>\n       \\<Longrightarrow> m = y", "{"], ["proof (state)\nthis:\n  \\<exists>m. m \\<in> mor \\<and> m2zm = f\n\ngoal (1 subgoal):\n 1. \\<And>m y.\n       \\<lbrakk>m \\<in> mor \\<and> m2zm = f;\n        y \\<in> mor \\<and> m2zy = f\\<rbrakk>\n       \\<Longrightarrow> m = y", "fix m y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m y.\n       \\<lbrakk>m \\<in> mor \\<and> m2zm = f;\n        y \\<in> mor \\<and> m2zy = f\\<rbrakk>\n       \\<Longrightarrow> m = y", "assume \"m \\<in> mor \\<and> m2z m = f\" and \"y \\<in> mor \\<and> m2z y = f\""], ["proof (state)\nthis:\n  m \\<in> mor \\<and> m2zm = f\n  y \\<in> mor \\<and> m2zy = f\n\ngoal (1 subgoal):\n 1. \\<And>m y.\n       \\<lbrakk>m \\<in> mor \\<and> m2zm = f;\n        y \\<in> mor \\<and> m2zy = f\\<rbrakk>\n       \\<Longrightarrow> m = y", "thus \"m = y\""], ["proof (prove)\nusing this:\n  m \\<in> mor \\<and> m2zm = f\n  y \\<in> mor \\<and> m2zy = f\n\ngoal (1 subgoal):\n 1. m = y", "by(simp add: mor2ZFInj)"], ["proof (state)\nthis:\n  m = y\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?m2 \\<in> mor \\<and> m2z?m2 = f;\n   ?y2 \\<in> mor \\<and> m2z?y2 = f\\<rbrakk>\n  \\<Longrightarrow> ?m2 = ?y2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>!m. m \\<in> mor \\<and> m2zm = f\n\ngoal (1 subgoal):\n 1. z2mf maps X to Y \\<and> m2zz2mf = f", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>!m. m \\<in> mor \\<and> m2zm = f\n\ngoal (1 subgoal):\n 1. z2mf maps X to Y \\<and> m2zz2mf = f", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>!m. m \\<in> mor \\<and> m2zm = f \\<Longrightarrow>\n    z2mf maps X to Y \\<and> m2zz2mf = f", "from 1"], ["proof (chain)\npicking this:\n  \\<exists>m. m maps X to Y \\<and> m2zm = f", "obtain a where 3: \"a maps X to Y \\<and> m2z a = f\""], ["proof (prove)\nusing this:\n  \\<exists>m. m maps X to Y \\<and> m2zm = f\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        a maps X to Y \\<and> m2za = f \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  a maps X to Y \\<and> m2za = f\n\ngoal (1 subgoal):\n 1. \\<exists>!m. m \\<in> mor \\<and> m2zm = f \\<Longrightarrow>\n    z2mf maps X to Y \\<and> m2zz2mf = f", "have 4: \"a \\<in> mor\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> mor", "using 3"], ["proof (prove)\nusing this:\n  a maps X to Y \\<and> m2za = f\n\ngoal (1 subgoal):\n 1. a \\<in> mor", "by auto"], ["proof (state)\nthis:\n  a \\<in> mor\n\ngoal (1 subgoal):\n 1. \\<exists>!m. m \\<in> mor \\<and> m2zm = f \\<Longrightarrow>\n    z2mf maps X to Y \\<and> m2zz2mf = f", "have \"z2m f = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z2mf = a", "apply (auto simp add: 3 ZF2mor_def[of _ f])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (THE m. m \\<in> mor \\<and> m2zm = f) = a", "apply (rule the1_equality[of \"\\<lambda> m . m \\<in> mor \\<and> m2z m = f\" a])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<exists>!m. m \\<in> mor \\<and> m2zm = f\n 2. a \\<in> mor \\<and> m2za = f", "apply (auto simp add: 2 3 4)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  z2mf = a\n\ngoal (1 subgoal):\n 1. \\<exists>!m. m \\<in> mor \\<and> m2zm = f \\<Longrightarrow>\n    z2mf maps X to Y \\<and> m2zz2mf = f", "thus ?thesis"], ["proof (prove)\nusing this:\n  z2mf = a\n\ngoal (1 subgoal):\n 1. z2mf maps X to Y \\<and> m2zz2mf = f", "by (simp add: 3)"], ["proof (state)\nthis:\n  z2mf maps X to Y \\<and> m2zz2mf = f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z2mf maps X to Y \\<and> m2zz2mf = f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma  HomFtorMapLemma1: \n  assumes a: \"LSCategory C\" and b: \"X \\<in> obj\\<^bsub>C\\<^esub>\" and c: \"f \\<in> mor\\<^bsub>C\\<^esub>\" and d: \"x |\\<in>| (Hom\\<^bsub>C\\<^esub> X (dom\\<^bsub>C\\<^esub> f))\"\n  shows \"(m2z\\<^bsub>C \\<^esub>((z2m\\<^bsub>C \\<^esub>x) ;;\\<^bsub>C\\<^esub> f)) |\\<in>| (Hom\\<^bsub>C\\<^esub> X (cod\\<^bsub>C\\<^esub> f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub> f |\\<in>|\n    (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub> f |\\<in>|\n    (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)", "have 1: \"dom\\<^bsub>C\\<^esub> f \\<in> obj\\<^bsub>C\\<^esub>\" and 2: \"cod\\<^bsub>C\\<^esub> f \\<in> obj\\<^bsub>C\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dom\\<^bsub>C\\<^esub> f \\<in> obj\\<^bsub>C\\<^esub> &&&\n    cod\\<^bsub>C\\<^esub> f \\<in> obj\\<^bsub>C\\<^esub>", "using a c"], ["proof (prove)\nusing this:\n  LSCategory C\n  f \\<in> mor\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. dom\\<^bsub>C\\<^esub> f \\<in> obj\\<^bsub>C\\<^esub> &&&\n    cod\\<^bsub>C\\<^esub> f \\<in> obj\\<^bsub>C\\<^esub>", "by (simp add: Category.Simps)+"], ["proof (state)\nthis:\n  dom\\<^bsub>C\\<^esub> f \\<in> obj\\<^bsub>C\\<^esub>\n  cod\\<^bsub>C\\<^esub> f \\<in> obj\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub> f |\\<in>|\n    (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)", "have \"z2m\\<^bsub>C\\<^esub> x maps\\<^bsub>C\\<^esub> X to (dom\\<^bsub>C\\<^esub> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z2m\\<^bsub>C\\<^esub>x maps\\<^bsub>C\\<^esub> X to dom\\<^bsub>C\\<^esub> f", "using a b d 1"], ["proof (prove)\nusing this:\n  LSCategory C\n  X \\<in> obj\\<^bsub>C\\<^esub>\n  x |\\<in>| (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n  dom\\<^bsub>C\\<^esub> f \\<in> obj\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. z2m\\<^bsub>C\\<^esub>x maps\\<^bsub>C\\<^esub> X to dom\\<^bsub>C\\<^esub> f", "by (auto simp add: LSCategory.z2mm2z)"], ["proof (state)\nthis:\n  z2m\\<^bsub>C\\<^esub>x maps\\<^bsub>C\\<^esub> X to dom\\<^bsub>C\\<^esub> f\n\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub> f |\\<in>|\n    (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)", "hence \"(z2m\\<^bsub>C\\<^esub> x) ;;\\<^bsub>C\\<^esub> f maps\\<^bsub>C\\<^esub> X to (cod\\<^bsub>C\\<^esub> f)\""], ["proof (prove)\nusing this:\n  z2m\\<^bsub>C\\<^esub>x maps\\<^bsub>C\\<^esub> X to dom\\<^bsub>C\\<^esub> f\n\ngoal (1 subgoal):\n 1. z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub>\n    f maps\\<^bsub>C\\<^esub> X to cod\\<^bsub>C\\<^esub> f", "using a c"], ["proof (prove)\nusing this:\n  z2m\\<^bsub>C\\<^esub>x maps\\<^bsub>C\\<^esub> X to dom\\<^bsub>C\\<^esub> f\n  LSCategory C\n  f \\<in> mor\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub>\n    f maps\\<^bsub>C\\<^esub> X to cod\\<^bsub>C\\<^esub> f", "by (auto intro: Category.Ccompt)"], ["proof (state)\nthis:\n  z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub>\n  f maps\\<^bsub>C\\<^esub> X to cod\\<^bsub>C\\<^esub> f\n\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub> f |\\<in>|\n    (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)", "hence \"(m2z\\<^bsub>C\\<^esub> ((z2m\\<^bsub>C\\<^esub> x) ;;\\<^bsub>C\\<^esub> f)) |\\<in>| (Hom\\<^bsub>C\\<^esub> X (cod\\<^bsub>C\\<^esub> f))\""], ["proof (prove)\nusing this:\n  z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub>\n  f maps\\<^bsub>C\\<^esub> X to cod\\<^bsub>C\\<^esub> f\n\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub> f |\\<in>|\n    (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)", "using a b d 2"], ["proof (prove)\nusing this:\n  z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub>\n  f maps\\<^bsub>C\\<^esub> X to cod\\<^bsub>C\\<^esub> f\n  LSCategory C\n  X \\<in> obj\\<^bsub>C\\<^esub>\n  x |\\<in>| (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n  cod\\<^bsub>C\\<^esub> f \\<in> obj\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub> f |\\<in>|\n    (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)", "by (auto simp add: LSCategory.m2zz2m)"], ["proof (state)\nthis:\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub> f |\\<in>|\n  (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)\n\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub> f |\\<in>|\n    (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)", "thus ?thesis"], ["proof (prove)\nusing this:\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub> f |\\<in>|\n  (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)\n\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub> f |\\<in>|\n    (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)", "using c"], ["proof (prove)\nusing this:\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub> f |\\<in>|\n  (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)\n  f \\<in> mor\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub> f |\\<in>|\n    (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)", "by (simp add: Category.Simps)"], ["proof (state)\nthis:\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub> f |\\<in>|\n  (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HomFtorInMor':\n  assumes \"LSCategory C\" and \"X \\<in> obj\\<^bsub>C\\<^esub>\" and \"f \\<in> mor\\<^bsub>C\\<^esub>\"\n  shows \"Hom\\<^bsub>C\\<^esub>[X,f] \\<in> mor\\<^bsub>SET'\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,f] \\<in> mor\\<^bsub>SET'\\<^esub>", "proof(simp add: HomFtorMap_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n     (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)\n     (\\<lambda>fa.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>fa ;;\\<^bsub>C\\<^esub> f)\n    \\<in> mor\\<^bsub>SET'\\<^esub>", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n     (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)\n     (\\<lambda>fa.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>fa ;;\\<^bsub>C\\<^esub> f)\n    \\<in> mor\\<^bsub>SET'\\<^esub>", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n     (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)\n     (\\<lambda>fa.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>fa ;;\\<^bsub>C\\<^esub> f)\n    \\<in> mor\\<^bsub>SET'\\<^esub>", "assume \"x |\\<in>| (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\""], ["proof (state)\nthis:\n  x |\\<in>| (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n\ngoal (1 subgoal):\n 1. ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n     (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)\n     (\\<lambda>fa.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>fa ;;\\<^bsub>C\\<^esub> f)\n    \\<in> mor\\<^bsub>SET'\\<^esub>", "hence \"m2z\\<^bsub>C \\<^esub>((z2m\\<^bsub>C \\<^esub>x) ;;\\<^bsub>C\\<^esub> f) |\\<in>| (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)\""], ["proof (prove)\nusing this:\n  x |\\<in>| (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub> f |\\<in>|\n    (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)", "using assms"], ["proof (prove)\nusing this:\n  x |\\<in>| (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n  LSCategory C\n  X \\<in> obj\\<^bsub>C\\<^esub>\n  f \\<in> mor\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub> f |\\<in>|\n    (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)", "by (blast intro: HomFtorMapLemma1)"], ["proof (state)\nthis:\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub> f |\\<in>|\n  (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)\n\ngoal (1 subgoal):\n 1. ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n     (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)\n     (\\<lambda>fa.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>fa ;;\\<^bsub>C\\<^esub> f)\n    \\<in> mor\\<^bsub>SET'\\<^esub>", "}"], ["proof (state)\nthis:\n  ?x2 |\\<in>|\n  (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f) \\<Longrightarrow>\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>?x2 ;;\\<^bsub>C\\<^esub> f |\\<in>|\n  (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)\n\ngoal (1 subgoal):\n 1. ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n     (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)\n     (\\<lambda>fa.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>fa ;;\\<^bsub>C\\<^esub> f)\n    \\<in> mor\\<^bsub>SET'\\<^esub>", "hence \"\\<forall> x . x |\\<in>| (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f) \\<longrightarrow> (m2z\\<^bsub>C \\<^esub>((z2m\\<^bsub>C \\<^esub>x) ;;\\<^bsub>C\\<^esub> f)) |\\<in>| (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)\""], ["proof (prove)\nusing this:\n  ?x2 |\\<in>|\n  (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f) \\<Longrightarrow>\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>?x2 ;;\\<^bsub>C\\<^esub> f |\\<in>|\n  (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       x |\\<in>|\n       (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f) \\<longrightarrow>\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub>\n                           f |\\<in>|\n       (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)", "by (simp)"], ["proof (state)\nthis:\n  \\<forall>x.\n     x |\\<in>|\n     (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f) \\<longrightarrow>\n     m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub> f |\\<in>|\n     (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)\n\ngoal (1 subgoal):\n 1. ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n     (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)\n     (\\<lambda>fa.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>fa ;;\\<^bsub>C\\<^esub> f)\n    \\<in> mor\\<^bsub>SET'\\<^esub>", "hence \"isZFfun (ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f) (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f) (\\<lambda> x . m2z\\<^bsub>C \\<^esub>((z2m\\<^bsub>C \\<^esub>x) ;;\\<^bsub>C\\<^esub> f)))\""], ["proof (prove)\nusing this:\n  \\<forall>x.\n     x |\\<in>|\n     (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f) \\<longrightarrow>\n     m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub> f |\\<in>|\n     (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)\n\ngoal (1 subgoal):\n 1. isZFfun\n     (ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n       (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)\n       (\\<lambda>x.\n           m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub> f))", "by (simp add: SETfun)"], ["proof (state)\nthis:\n  isZFfun\n   (ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n     (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)\n     (\\<lambda>x.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub> f))\n\ngoal (1 subgoal):\n 1. ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n     (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)\n     (\\<lambda>fa.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>fa ;;\\<^bsub>C\\<^esub> f)\n    \\<in> mor\\<^bsub>SET'\\<^esub>", "thus \"ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f) (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f) (\\<lambda> x . m2z\\<^bsub>C \\<^esub>((z2m\\<^bsub>C \\<^esub>x) ;;\\<^bsub>C\\<^esub> f)) \\<in> mor\\<^bsub>SET'\\<^esub>\""], ["proof (prove)\nusing this:\n  isZFfun\n   (ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n     (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)\n     (\\<lambda>x.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub> f))\n\ngoal (1 subgoal):\n 1. ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n     (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)\n     (\\<lambda>x.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub> f)\n    \\<in> mor\\<^bsub>SET'\\<^esub>", "by (simp add: SET'_def)"], ["proof (state)\nthis:\n  ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n   (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)\n   (\\<lambda>x.\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub> f)\n  \\<in> mor\\<^bsub>SET'\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HomFtorMor':\n  assumes \"LSCategory C\" and \"X \\<in> obj\\<^bsub>C\\<^esub>\" and \"f \\<in> mor\\<^bsub>C\\<^esub>\"\n  shows   \"Hom\\<^bsub>C\\<^esub>[X,f] maps\\<^bsub>SET'\\<^esub> Hom\\<^bsub>C \\<^esub>X (dom\\<^bsub>C\\<^esub> f) to Hom\\<^bsub>C \\<^esub>X (cod\\<^bsub>C\\<^esub> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,f] maps\\<^bsub>SET'\\<^esub> Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f to Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,f] maps\\<^bsub>SET'\\<^esub> Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f to Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f", "have \"Hom\\<^bsub>C\\<^esub>[X,f] \\<in> mor\\<^bsub>SET'\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,f] \\<in> mor\\<^bsub>SET'\\<^esub>", "using assms"], ["proof (prove)\nusing this:\n  LSCategory C\n  X \\<in> obj\\<^bsub>C\\<^esub>\n  f \\<in> mor\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,f] \\<in> mor\\<^bsub>SET'\\<^esub>", "by (simp add: HomFtorInMor')"], ["proof (state)\nthis:\n  Hom\\<^bsub>C\\<^esub>[X,f] \\<in> mor\\<^bsub>SET'\\<^esub>\n\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,f] maps\\<^bsub>SET'\\<^esub> Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f to Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f", "moreover"], ["proof (state)\nthis:\n  Hom\\<^bsub>C\\<^esub>[X,f] \\<in> mor\\<^bsub>SET'\\<^esub>\n\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,f] maps\\<^bsub>SET'\\<^esub> Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f to Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f", "have \"dom\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) = Hom\\<^bsub>C \\<^esub>X (dom\\<^bsub>C\\<^esub> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dom\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) =\n    Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f", "by(simp add: HomFtorMap_def SET'_def ZFfunDom)"], ["proof (state)\nthis:\n  dom\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) =\n  Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f\n\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,f] maps\\<^bsub>SET'\\<^esub> Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f to Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f", "moreover"], ["proof (state)\nthis:\n  dom\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) =\n  Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f\n\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,f] maps\\<^bsub>SET'\\<^esub> Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f to Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f", "have \"cod\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) = Hom\\<^bsub>C \\<^esub>X (cod\\<^bsub>C\\<^esub> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cod\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) =\n    Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f", "by(simp add: HomFtorMap_def SET'_def ZFfunCod)"], ["proof (state)\nthis:\n  cod\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) =\n  Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f\n\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,f] maps\\<^bsub>SET'\\<^esub> Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f to Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f", "ultimately"], ["proof (chain)\npicking this:\n  Hom\\<^bsub>C\\<^esub>[X,f] \\<in> mor\\<^bsub>SET'\\<^esub>\n  dom\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) =\n  Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f\n  cod\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) =\n  Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f", "show ?thesis"], ["proof (prove)\nusing this:\n  Hom\\<^bsub>C\\<^esub>[X,f] \\<in> mor\\<^bsub>SET'\\<^esub>\n  dom\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) =\n  Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f\n  cod\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) =\n  Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f\n\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,f] maps\\<^bsub>SET'\\<^esub> Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f to Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f", "by (auto simp add: SET_def)"], ["proof (state)\nthis:\n  Hom\\<^bsub>C\\<^esub>[X,f] maps\\<^bsub>SET'\\<^esub> Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f to Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HomFtorMapsTo:\n  \"\\<lbrakk>LSCategory C ; X \\<in> obj\\<^bsub>C \\<^esub>; f \\<in> mor\\<^bsub>C \\<^esub>\\<rbrakk> \\<Longrightarrow> Hom\\<^bsub>C\\<^esub>[X,f] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>C \\<^esub>X (dom\\<^bsub>C\\<^esub> f) to Hom\\<^bsub>C \\<^esub>X (cod\\<^bsub>C\\<^esub> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>LSCategory C; X \\<in> obj\\<^bsub>C\\<^esub>;\n     f \\<in> mor\\<^bsub>C\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> Hom\\<^bsub>C\\<^esub>[X,f] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f to Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f", "by (simp add: HomFtorMor' SET_def MakeCatMapsTo)"], ["", "lemma HomFtorMor:\n  assumes \"LSCategory C\" and \"X \\<in> obj\\<^bsub>C\\<^esub>\" and \"f \\<in> mor\\<^bsub>C\\<^esub>\" \n  shows \"Hom\\<^bsub>C\\<^esub>[X,f] \\<in> Mor SET\" and \"dom\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) = Hom\\<^bsub>C \\<^esub>X (dom\\<^bsub>C\\<^esub> f)\" \n  and \"cod\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) = Hom\\<^bsub>C \\<^esub>X (cod\\<^bsub>C\\<^esub> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,f] \\<in> mor\\<^bsub>SET\\<^esub> &&&\n    dom\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) =\n    Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f &&&\n    cod\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) =\n    Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f", "proof-"], ["proof (state)\ngoal (3 subgoals):\n 1. Hom\\<^bsub>C\\<^esub>[X,f] \\<in> mor\\<^bsub>SET\\<^esub>\n 2. dom\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) =\n    Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f\n 3. cod\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) =\n    Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f", "have \"Hom\\<^bsub>C\\<^esub>[X,f] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>C \\<^esub>X (dom\\<^bsub>C\\<^esub> f) to Hom\\<^bsub>C \\<^esub>X (cod\\<^bsub>C\\<^esub> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,f] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f to Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f", "using assms"], ["proof (prove)\nusing this:\n  LSCategory C\n  X \\<in> obj\\<^bsub>C\\<^esub>\n  f \\<in> mor\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,f] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f to Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f", "by (simp add: HomFtorMapsTo)"], ["proof (state)\nthis:\n  Hom\\<^bsub>C\\<^esub>[X,f] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f to Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f\n\ngoal (3 subgoals):\n 1. Hom\\<^bsub>C\\<^esub>[X,f] \\<in> mor\\<^bsub>SET\\<^esub>\n 2. dom\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) =\n    Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f\n 3. cod\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) =\n    Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f", "thus \"Hom\\<^bsub>C\\<^esub>[X,f] \\<in> Mor SET\" and \"dom\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) = Hom\\<^bsub>C \\<^esub>X (dom\\<^bsub>C\\<^esub> f)\" and \"cod\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) = Hom\\<^bsub>C \\<^esub>X (cod\\<^bsub>C\\<^esub> f)\""], ["proof (prove)\nusing this:\n  Hom\\<^bsub>C\\<^esub>[X,f] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f to Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f\n\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,f] \\<in> mor\\<^bsub>SET\\<^esub> &&&\n    dom\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) =\n    Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f &&&\n    cod\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) =\n    Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f", "by auto"], ["proof (state)\nthis:\n  Hom\\<^bsub>C\\<^esub>[X,f] \\<in> mor\\<^bsub>SET\\<^esub>\n  dom\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) =\n  Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f\n  cod\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) =\n  Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HomFtorCompDef':\n  assumes \"LSCategory C\" and \"X \\<in> obj\\<^bsub>C\\<^esub>\" and \"f \\<approx>>\\<^bsub>C\\<^esub> g\" \n  shows   \"(Hom\\<^bsub>C\\<^esub>[X,f]) \\<approx>>\\<^bsub>SET' \\<^esub>(Hom\\<^bsub>C\\<^esub>[X,g])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,f] \\<approx>>\\<^bsub>SET'\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[X,g])", "proof(rule CompDefinedI)"], ["proof (state)\ngoal (3 subgoals):\n 1. Hom\\<^bsub>C\\<^esub>[X,f] \\<in> mor\\<^bsub>SET'\\<^esub>\n 2. Hom\\<^bsub>C\\<^esub>[X,g] \\<in> mor\\<^bsub>SET'\\<^esub>\n 3. cod\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) =\n    dom\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,g])", "have a: \"f \\<in> mor\\<^bsub>C\\<^esub>\" and b: \"g \\<in> mor\\<^bsub>C\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> mor\\<^bsub>C\\<^esub> &&& g \\<in> mor\\<^bsub>C\\<^esub>", "using assms(3)"], ["proof (prove)\nusing this:\n  f \\<approx>>\\<^bsub>C\\<^esub> g\n\ngoal (1 subgoal):\n 1. f \\<in> mor\\<^bsub>C\\<^esub> &&& g \\<in> mor\\<^bsub>C\\<^esub>", "by auto"], ["proof (state)\nthis:\n  f \\<in> mor\\<^bsub>C\\<^esub>\n  g \\<in> mor\\<^bsub>C\\<^esub>\n\ngoal (3 subgoals):\n 1. Hom\\<^bsub>C\\<^esub>[X,f] \\<in> mor\\<^bsub>SET'\\<^esub>\n 2. Hom\\<^bsub>C\\<^esub>[X,g] \\<in> mor\\<^bsub>SET'\\<^esub>\n 3. cod\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) =\n    dom\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,g])", "thus \"Hom\\<^bsub>C\\<^esub>[X,f] \\<in> mor\\<^bsub>SET'\\<^esub>\" and \"Hom\\<^bsub>C\\<^esub>[X,g] \\<in> mor\\<^bsub>SET'\\<^esub>\""], ["proof (prove)\nusing this:\n  f \\<in> mor\\<^bsub>C\\<^esub>\n  g \\<in> mor\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,f] \\<in> mor\\<^bsub>SET'\\<^esub> &&&\n    Hom\\<^bsub>C\\<^esub>[X,g] \\<in> mor\\<^bsub>SET'\\<^esub>", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> mor\\<^bsub>C\\<^esub>\n  g \\<in> mor\\<^bsub>C\\<^esub>\n  LSCategory C\n  X \\<in> obj\\<^bsub>C\\<^esub>\n  f \\<approx>>\\<^bsub>C\\<^esub> g\n\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,f] \\<in> mor\\<^bsub>SET'\\<^esub> &&&\n    Hom\\<^bsub>C\\<^esub>[X,g] \\<in> mor\\<^bsub>SET'\\<^esub>", "by (simp add:HomFtorInMor')+"], ["proof (state)\nthis:\n  Hom\\<^bsub>C\\<^esub>[X,f] \\<in> mor\\<^bsub>SET'\\<^esub>\n  Hom\\<^bsub>C\\<^esub>[X,g] \\<in> mor\\<^bsub>SET'\\<^esub>\n\ngoal (1 subgoal):\n 1. cod\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) =\n    dom\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,g])", "have \"(Hom\\<^bsub>C\\<^esub>[X,f]) maps\\<^bsub>SET'\\<^esub> Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f to Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f\"\n    and \"(Hom\\<^bsub>C\\<^esub>[X,g]) maps\\<^bsub>SET'\\<^esub> Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g to Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,f] maps\\<^bsub>SET'\\<^esub> Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f to Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f &&&\n    Hom\\<^bsub>C\\<^esub>[X,g] maps\\<^bsub>SET'\\<^esub> Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g to Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> g", "using assms a b"], ["proof (prove)\nusing this:\n  LSCategory C\n  X \\<in> obj\\<^bsub>C\\<^esub>\n  f \\<approx>>\\<^bsub>C\\<^esub> g\n  f \\<in> mor\\<^bsub>C\\<^esub>\n  g \\<in> mor\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,f] maps\\<^bsub>SET'\\<^esub> Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f to Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f &&&\n    Hom\\<^bsub>C\\<^esub>[X,g] maps\\<^bsub>SET'\\<^esub> Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g to Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> g", "by (simp add: HomFtorMor')+"], ["proof (state)\nthis:\n  Hom\\<^bsub>C\\<^esub>[X,f] maps\\<^bsub>SET'\\<^esub> Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f to Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f\n  Hom\\<^bsub>C\\<^esub>[X,g] maps\\<^bsub>SET'\\<^esub> Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g to Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> g\n\ngoal (1 subgoal):\n 1. cod\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) =\n    dom\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,g])", "hence \"cod\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) = Hom\\<^bsub>C\\<^esub> X (cod\\<^bsub>C\\<^esub> f)\" \n    and \"dom\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,g]) = Hom\\<^bsub>C\\<^esub> X (dom\\<^bsub>C\\<^esub> g)\""], ["proof (prove)\nusing this:\n  Hom\\<^bsub>C\\<^esub>[X,f] maps\\<^bsub>SET'\\<^esub> Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f to Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f\n  Hom\\<^bsub>C\\<^esub>[X,g] maps\\<^bsub>SET'\\<^esub> Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g to Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> g\n\ngoal (1 subgoal):\n 1. cod\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) =\n    Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f &&&\n    dom\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,g]) =\n    Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g", "by auto"], ["proof (state)\nthis:\n  cod\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) =\n  Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f\n  dom\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,g]) =\n  Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g\n\ngoal (1 subgoal):\n 1. cod\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) =\n    dom\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,g])", "moreover"], ["proof (state)\nthis:\n  cod\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) =\n  Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f\n  dom\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,g]) =\n  Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g\n\ngoal (1 subgoal):\n 1. cod\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) =\n    dom\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,g])", "have \"(cod\\<^bsub>C\\<^esub> f) = (dom\\<^bsub>C\\<^esub> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cod\\<^bsub>C\\<^esub> f = dom\\<^bsub>C\\<^esub> g", "using assms(3)"], ["proof (prove)\nusing this:\n  f \\<approx>>\\<^bsub>C\\<^esub> g\n\ngoal (1 subgoal):\n 1. cod\\<^bsub>C\\<^esub> f = dom\\<^bsub>C\\<^esub> g", "by auto"], ["proof (state)\nthis:\n  cod\\<^bsub>C\\<^esub> f = dom\\<^bsub>C\\<^esub> g\n\ngoal (1 subgoal):\n 1. cod\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) =\n    dom\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,g])", "ultimately"], ["proof (chain)\npicking this:\n  cod\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) =\n  Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f\n  dom\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,g]) =\n  Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g\n  cod\\<^bsub>C\\<^esub> f = dom\\<^bsub>C\\<^esub> g", "show \"cod\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) = dom\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,g])\""], ["proof (prove)\nusing this:\n  cod\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) =\n  Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f\n  dom\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,g]) =\n  Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g\n  cod\\<^bsub>C\\<^esub> f = dom\\<^bsub>C\\<^esub> g\n\ngoal (1 subgoal):\n 1. cod\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) =\n    dom\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,g])", "by simp"], ["proof (state)\nthis:\n  cod\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,f]) =\n  dom\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,g])\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HomFtorDist': \n  assumes a: \"LSCategory C\" and b: \"X \\<in> obj\\<^bsub>C\\<^esub>\" and c: \"f \\<approx>>\\<^bsub>C\\<^esub> g\"\n  shows   \"(Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,g]) = Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET'\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[X,g]) =\n    Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET'\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[X,g]) =\n    Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]", "let ?A = \"(Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\""], ["proof (state)\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET'\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[X,g]) =\n    Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]", "let ?B = \"(Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g)\""], ["proof (state)\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET'\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[X,g]) =\n    Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]", "let ?C = \"(Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> g)\""], ["proof (state)\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET'\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[X,g]) =\n    Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]", "let ?f = \"(\\<lambda>h. m2z\\<^bsub>C \\<^esub>((z2m\\<^bsub>C \\<^esub>h) ;;\\<^bsub>C\\<^esub> f))\""], ["proof (state)\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET'\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[X,g]) =\n    Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]", "let ?g = \"(\\<lambda>f. m2z\\<^bsub>C \\<^esub>((z2m\\<^bsub>C \\<^esub>f) ;;\\<^bsub>C\\<^esub> g))\""], ["proof (state)\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET'\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[X,g]) =\n    Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]", "have 1: \"cod\\<^bsub>C\\<^esub> f = dom\\<^bsub>C\\<^esub> g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cod\\<^bsub>C\\<^esub> f = dom\\<^bsub>C\\<^esub> g", "using c"], ["proof (prove)\nusing this:\n  f \\<approx>>\\<^bsub>C\\<^esub> g\n\ngoal (1 subgoal):\n 1. cod\\<^bsub>C\\<^esub> f = dom\\<^bsub>C\\<^esub> g", "by auto"], ["proof (state)\nthis:\n  cod\\<^bsub>C\\<^esub> f = dom\\<^bsub>C\\<^esub> g\n\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET'\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[X,g]) =\n    Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]", "have 2: \"dom\\<^bsub>C\\<^esub> (f ;;\\<^bsub>C\\<^esub> g) = dom\\<^bsub>C\\<^esub> f\" and 3: \"cod\\<^bsub>C\\<^esub> (f ;;\\<^bsub>C\\<^esub> g) = cod\\<^bsub>C\\<^esub> g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dom\\<^bsub>C\\<^esub> (f ;;\\<^bsub>C\\<^esub> g) =\n    dom\\<^bsub>C\\<^esub> f &&&\n    cod\\<^bsub>C\\<^esub> (f ;;\\<^bsub>C\\<^esub> g) = cod\\<^bsub>C\\<^esub> g", "using assms"], ["proof (prove)\nusing this:\n  LSCategory C\n  X \\<in> obj\\<^bsub>C\\<^esub>\n  f \\<approx>>\\<^bsub>C\\<^esub> g\n\ngoal (1 subgoal):\n 1. dom\\<^bsub>C\\<^esub> (f ;;\\<^bsub>C\\<^esub> g) =\n    dom\\<^bsub>C\\<^esub> f &&&\n    cod\\<^bsub>C\\<^esub> (f ;;\\<^bsub>C\\<^esub> g) = cod\\<^bsub>C\\<^esub> g", "by (auto simp add: Category.MapsToMorDomCod)"], ["proof (state)\nthis:\n  dom\\<^bsub>C\\<^esub> (f ;;\\<^bsub>C\\<^esub> g) = dom\\<^bsub>C\\<^esub> f\n  cod\\<^bsub>C\\<^esub> (f ;;\\<^bsub>C\\<^esub> g) = cod\\<^bsub>C\\<^esub> g\n\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET'\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[X,g]) =\n    Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]", "have \"(Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,g]) = (ZFfun ?A (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f) ?f) |o| (ZFfun ?B ?C ?g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET'\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[X,g]) =\n    ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n     (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)\n     (\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                             f) |o|\n    ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g)\n     (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> g)\n     (\\<lambda>f.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>f ;;\\<^bsub>C\\<^esub> g)", "by (simp add: HomFtorMap_def SET'_def)"], ["proof (state)\nthis:\n  (Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET'\\<^esub>\n  (Hom\\<^bsub>C\\<^esub>[X,g]) =\n  ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n   (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)\n   (\\<lambda>h.\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f) |o|\n  ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g)\n   (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> g)\n   (\\<lambda>f.\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>f ;;\\<^bsub>C\\<^esub> g)\n\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET'\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[X,g]) =\n    Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]", "also"], ["proof (state)\nthis:\n  (Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET'\\<^esub>\n  (Hom\\<^bsub>C\\<^esub>[X,g]) =\n  ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n   (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)\n   (\\<lambda>h.\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f) |o|\n  ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g)\n   (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> g)\n   (\\<lambda>f.\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>f ;;\\<^bsub>C\\<^esub> g)\n\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET'\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[X,g]) =\n    Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]", "have \"... = (ZFfun ?A ?B ?f) |o| (ZFfun ?B ?C ?g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n     (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)\n     (\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                             f) |o|\n    ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g)\n     (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> g)\n     (\\<lambda>f.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>f ;;\\<^bsub>C\\<^esub> g) =\n    ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n     (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g)\n     (\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                             f) |o|\n    ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g)\n     (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> g)\n     (\\<lambda>f.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>f ;;\\<^bsub>C\\<^esub> g)", "using 1"], ["proof (prove)\nusing this:\n  cod\\<^bsub>C\\<^esub> f = dom\\<^bsub>C\\<^esub> g\n\ngoal (1 subgoal):\n 1. ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n     (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)\n     (\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                             f) |o|\n    ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g)\n     (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> g)\n     (\\<lambda>f.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>f ;;\\<^bsub>C\\<^esub> g) =\n    ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n     (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g)\n     (\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                             f) |o|\n    ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g)\n     (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> g)\n     (\\<lambda>f.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>f ;;\\<^bsub>C\\<^esub> g)", "by simp"], ["proof (state)\nthis:\n  ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n   (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)\n   (\\<lambda>h.\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f) |o|\n  ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g)\n   (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> g)\n   (\\<lambda>f.\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>f ;;\\<^bsub>C\\<^esub> g) =\n  ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n   (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g)\n   (\\<lambda>h.\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f) |o|\n  ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g)\n   (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> g)\n   (\\<lambda>f.\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>f ;;\\<^bsub>C\\<^esub> g)\n\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET'\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[X,g]) =\n    Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]", "also"], ["proof (state)\nthis:\n  ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n   (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)\n   (\\<lambda>h.\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f) |o|\n  ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g)\n   (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> g)\n   (\\<lambda>f.\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>f ;;\\<^bsub>C\\<^esub> g) =\n  ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n   (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g)\n   (\\<lambda>h.\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f) |o|\n  ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g)\n   (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> g)\n   (\\<lambda>f.\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>f ;;\\<^bsub>C\\<^esub> g)\n\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET'\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[X,g]) =\n    Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]", "have \"... = ZFfun ?A ?C (?g o ?f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n     (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g)\n     (\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                             f) |o|\n    ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g)\n     (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> g)\n     (\\<lambda>f.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>f ;;\\<^bsub>C\\<^esub> g) =\n    ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n     (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> g)\n     ((\\<lambda>f.\n          m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>f ;;\\<^bsub>C\\<^esub>\n                              g) \\<circ>\n      (\\<lambda>h.\n          m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f))", "proof(rule ZFfunComp, rule allI, rule impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x |\\<in>|\n       (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f) \\<Longrightarrow>\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub>\n                           f |\\<in>|\n       (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x |\\<in>|\n       (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f) \\<Longrightarrow>\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub>\n                           f |\\<in>|\n       (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g)", "fix h"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x |\\<in>|\n       (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f) \\<Longrightarrow>\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub>\n                           f |\\<in>|\n       (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g)", "assume aa: \"h |\\<in>| ?A\""], ["proof (state)\nthis:\n  h |\\<in>| (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x |\\<in>|\n       (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f) \\<Longrightarrow>\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub>\n                           f |\\<in>|\n       (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g)", "show \"?f h |\\<in>| ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f |\\<in>|\n    (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f |\\<in>|\n    (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g)", "have \"f \\<in> mor\\<^bsub>C\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> mor\\<^bsub>C\\<^esub>", "using assms"], ["proof (prove)\nusing this:\n  LSCategory C\n  X \\<in> obj\\<^bsub>C\\<^esub>\n  f \\<approx>>\\<^bsub>C\\<^esub> g\n\ngoal (1 subgoal):\n 1. f \\<in> mor\\<^bsub>C\\<^esub>", "by auto"], ["proof (state)\nthis:\n  f \\<in> mor\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f |\\<in>|\n    (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g)", "hence \"?f h |\\<in>| (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)\""], ["proof (prove)\nusing this:\n  f \\<in> mor\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f |\\<in>|\n    (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)", "using assms aa"], ["proof (prove)\nusing this:\n  f \\<in> mor\\<^bsub>C\\<^esub>\n  LSCategory C\n  X \\<in> obj\\<^bsub>C\\<^esub>\n  f \\<approx>>\\<^bsub>C\\<^esub> g\n  h |\\<in>| (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f |\\<in>|\n    (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)", "by (simp add: HomFtorMapLemma1)"], ["proof (state)\nthis:\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f |\\<in>|\n  (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)\n\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f |\\<in>|\n    (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g)", "thus ?thesis"], ["proof (prove)\nusing this:\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f |\\<in>|\n  (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)\n\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f |\\<in>|\n    (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g)", "using 1"], ["proof (prove)\nusing this:\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f |\\<in>|\n  (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f)\n  cod\\<^bsub>C\\<^esub> f = dom\\<^bsub>C\\<^esub> g\n\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f |\\<in>|\n    (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g)", "by simp"], ["proof (state)\nthis:\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f |\\<in>|\n  (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f |\\<in>|\n  (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g)\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  ?h2 |\\<in>|\n  (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f) \\<Longrightarrow>\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>?h2 ;;\\<^bsub>C\\<^esub> f |\\<in>|\n  (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n   (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g)\n   (\\<lambda>h.\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f) |o|\n  ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g)\n   (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> g)\n   (\\<lambda>f.\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>f ;;\\<^bsub>C\\<^esub> g) =\n  ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n   (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> g)\n   ((\\<lambda>f.\n        m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>f ;;\\<^bsub>C\\<^esub>\n                            g) \\<circ>\n    (\\<lambda>h.\n        m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f))\n\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET'\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[X,g]) =\n    Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]", "also"], ["proof (state)\nthis:\n  ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n   (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g)\n   (\\<lambda>h.\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f) |o|\n  ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> g)\n   (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> g)\n   (\\<lambda>f.\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>f ;;\\<^bsub>C\\<^esub> g) =\n  ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n   (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> g)\n   ((\\<lambda>f.\n        m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>f ;;\\<^bsub>C\\<^esub>\n                            g) \\<circ>\n    (\\<lambda>h.\n        m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f))\n\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET'\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[X,g]) =\n    Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]", "have \"... = ZFfun ?A ?C (\\<lambda>h. m2z\\<^bsub>C \\<^esub>((z2m\\<^bsub>C \\<^esub>h) ;;\\<^bsub>C\\<^esub> (f ;;\\<^bsub>C\\<^esub> g)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n     (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> g)\n     ((\\<lambda>f.\n          m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>f ;;\\<^bsub>C\\<^esub>\n                              g) \\<circ>\n      (\\<lambda>h.\n          m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                              f)) =\n    ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n     (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> g)\n     (\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                             (f ;;\\<^bsub>C\\<^esub> g))", "proof(rule ZFfun_ext, rule allI, rule impI, simp add: comp_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x |\\<in>|\n       (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f) \\<Longrightarrow>\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub>\n                             f ;;\\<^bsub>C\\<^esub>\n                           g =\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub>\n                           (f ;;\\<^bsub>C\\<^esub> g)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x |\\<in>|\n       (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f) \\<Longrightarrow>\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub>\n                             f ;;\\<^bsub>C\\<^esub>\n                           g =\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub>\n                           (f ;;\\<^bsub>C\\<^esub> g)", "fix h"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x |\\<in>|\n       (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f) \\<Longrightarrow>\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub>\n                             f ;;\\<^bsub>C\\<^esub>\n                           g =\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub>\n                           (f ;;\\<^bsub>C\\<^esub> g)", "assume aa: \"h |\\<in>| ?A\""], ["proof (state)\nthis:\n  h |\\<in>| (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x |\\<in>|\n       (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f) \\<Longrightarrow>\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub>\n                             f ;;\\<^bsub>C\\<^esub>\n                           g =\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub>\n                           (f ;;\\<^bsub>C\\<^esub> g)", "show \"m2z\\<^bsub>C\\<^esub> ((z2m\\<^bsub>C\\<^esub> (m2z\\<^bsub>C\\<^esub>((z2m\\<^bsub>C\\<^esub> h) ;;\\<^bsub>C\\<^esub> f))) ;;\\<^bsub>C\\<^esub> g) = m2z\\<^bsub>C\\<^esub> ((z2m\\<^bsub>C\\<^esub> h) ;;\\<^bsub>C\\<^esub> (f ;;\\<^bsub>C\\<^esub> g))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                          f ;;\\<^bsub>C\\<^esub>\n                        g =\n    m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                        (f ;;\\<^bsub>C\\<^esub> g)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                          f ;;\\<^bsub>C\\<^esub>\n                        g =\n    m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                        (f ;;\\<^bsub>C\\<^esub> g)", "have bb: \"(z2m\\<^bsub>C\\<^esub> h) \\<approx>>\\<^bsub>C\\<^esub> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z2m\\<^bsub>C\\<^esub>h \\<approx>>\\<^bsub>C\\<^esub> f", "proof(rule CompDefinedI)"], ["proof (state)\ngoal (3 subgoals):\n 1. z2m\\<^bsub>C\\<^esub>h \\<in> mor\\<^bsub>C\\<^esub>\n 2. f \\<in> mor\\<^bsub>C\\<^esub>\n 3. cod\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h) = dom\\<^bsub>C\\<^esub> f", "show \"f \\<in> mor\\<^bsub>C\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> mor\\<^bsub>C\\<^esub>", "using c"], ["proof (prove)\nusing this:\n  f \\<approx>>\\<^bsub>C\\<^esub> g\n\ngoal (1 subgoal):\n 1. f \\<in> mor\\<^bsub>C\\<^esub>", "by auto"], ["proof (state)\nthis:\n  f \\<in> mor\\<^bsub>C\\<^esub>\n\ngoal (2 subgoals):\n 1. z2m\\<^bsub>C\\<^esub>h \\<in> mor\\<^bsub>C\\<^esub>\n 2. cod\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h) = dom\\<^bsub>C\\<^esub> f", "hence \"dom\\<^bsub>C\\<^esub> f \\<in> obj\\<^bsub>C\\<^esub>\""], ["proof (prove)\nusing this:\n  f \\<in> mor\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. dom\\<^bsub>C\\<^esub> f \\<in> obj\\<^bsub>C\\<^esub>", "using a"], ["proof (prove)\nusing this:\n  f \\<in> mor\\<^bsub>C\\<^esub>\n  LSCategory C\n\ngoal (1 subgoal):\n 1. dom\\<^bsub>C\\<^esub> f \\<in> obj\\<^bsub>C\\<^esub>", "by (simp add: Category.Cdom)"], ["proof (state)\nthis:\n  dom\\<^bsub>C\\<^esub> f \\<in> obj\\<^bsub>C\\<^esub>\n\ngoal (2 subgoals):\n 1. z2m\\<^bsub>C\\<^esub>h \\<in> mor\\<^bsub>C\\<^esub>\n 2. cod\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h) = dom\\<^bsub>C\\<^esub> f", "hence \"(z2m\\<^bsub>C\\<^esub> h) maps\\<^bsub>C\\<^esub> X to dom\\<^bsub>C\\<^esub> f\""], ["proof (prove)\nusing this:\n  dom\\<^bsub>C\\<^esub> f \\<in> obj\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. z2m\\<^bsub>C\\<^esub>h maps\\<^bsub>C\\<^esub> X to dom\\<^bsub>C\\<^esub> f", "using assms aa"], ["proof (prove)\nusing this:\n  dom\\<^bsub>C\\<^esub> f \\<in> obj\\<^bsub>C\\<^esub>\n  LSCategory C\n  X \\<in> obj\\<^bsub>C\\<^esub>\n  f \\<approx>>\\<^bsub>C\\<^esub> g\n  h |\\<in>| (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n\ngoal (1 subgoal):\n 1. z2m\\<^bsub>C\\<^esub>h maps\\<^bsub>C\\<^esub> X to dom\\<^bsub>C\\<^esub> f", "by (simp add: LSCategory.z2mm2z)"], ["proof (state)\nthis:\n  z2m\\<^bsub>C\\<^esub>h maps\\<^bsub>C\\<^esub> X to dom\\<^bsub>C\\<^esub> f\n\ngoal (2 subgoals):\n 1. z2m\\<^bsub>C\\<^esub>h \\<in> mor\\<^bsub>C\\<^esub>\n 2. cod\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h) = dom\\<^bsub>C\\<^esub> f", "thus \"(z2m\\<^bsub>C\\<^esub> h) \\<in> mor\\<^bsub>C\\<^esub>\" and \"cod\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub> h) = dom\\<^bsub>C\\<^esub> f\""], ["proof (prove)\nusing this:\n  z2m\\<^bsub>C\\<^esub>h maps\\<^bsub>C\\<^esub> X to dom\\<^bsub>C\\<^esub> f\n\ngoal (1 subgoal):\n 1. z2m\\<^bsub>C\\<^esub>h \\<in> mor\\<^bsub>C\\<^esub> &&&\n    cod\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h) = dom\\<^bsub>C\\<^esub> f", "by auto"], ["proof (state)\nthis:\n  z2m\\<^bsub>C\\<^esub>h \\<in> mor\\<^bsub>C\\<^esub>\n  cod\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h) = dom\\<^bsub>C\\<^esub> f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z2m\\<^bsub>C\\<^esub>h \\<approx>>\\<^bsub>C\\<^esub> f\n\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                          f ;;\\<^bsub>C\\<^esub>\n                        g =\n    m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                        (f ;;\\<^bsub>C\\<^esub> g)", "hence \"(z2m\\<^bsub>C\\<^esub> h) ;;\\<^bsub>C\\<^esub> f \\<in> mor\\<^bsub>C\\<^esub>\""], ["proof (prove)\nusing this:\n  z2m\\<^bsub>C\\<^esub>h \\<approx>>\\<^bsub>C\\<^esub> f\n\ngoal (1 subgoal):\n 1. z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f \\<in> mor\\<^bsub>C\\<^esub>", "using a"], ["proof (prove)\nusing this:\n  z2m\\<^bsub>C\\<^esub>h \\<approx>>\\<^bsub>C\\<^esub> f\n  LSCategory C\n\ngoal (1 subgoal):\n 1. z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f \\<in> mor\\<^bsub>C\\<^esub>", "by (simp add: Category.MapsToMorDomCod)"], ["proof (state)\nthis:\n  z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f \\<in> mor\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                          f ;;\\<^bsub>C\\<^esub>\n                        g =\n    m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                        (f ;;\\<^bsub>C\\<^esub> g)", "hence \"z2m\\<^bsub>C\\<^esub> (m2z\\<^bsub>C\\<^esub> ((z2m\\<^bsub>C\\<^esub> h) ;;\\<^bsub>C\\<^esub> f)) = (z2m\\<^bsub>C\\<^esub> h) ;;\\<^bsub>C\\<^esub> f\""], ["proof (prove)\nusing this:\n  z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f \\<in> mor\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n      f =\n    z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f", "using a"], ["proof (prove)\nusing this:\n  z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f \\<in> mor\\<^bsub>C\\<^esub>\n  LSCategory C\n\ngoal (1 subgoal):\n 1. z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n      f =\n    z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f", "by (simp add: LSCategory.m2zz2mInv)"], ["proof (state)\nthis:\n  z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n    f =\n  z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f\n\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                          f ;;\\<^bsub>C\\<^esub>\n                        g =\n    m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                        (f ;;\\<^bsub>C\\<^esub> g)", "hence \"m2z\\<^bsub>C\\<^esub> ((z2m\\<^bsub>C\\<^esub> (m2z\\<^bsub>C\\<^esub>((z2m\\<^bsub>C\\<^esub> h) ;;\\<^bsub>C\\<^esub> f))) ;;\\<^bsub>C\\<^esub> g) = m2z\\<^bsub>C\\<^esub> (((z2m\\<^bsub>C\\<^esub> h) ;;\\<^bsub>C\\<^esub> f) ;;\\<^bsub>C\\<^esub> g)\""], ["proof (prove)\nusing this:\n  z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n    f =\n  z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f\n\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                          f ;;\\<^bsub>C\\<^esub>\n                        g =\n    m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                        f ;;\\<^bsub>C\\<^esub>\n                        g", "by simp"], ["proof (state)\nthis:\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                        f ;;\\<^bsub>C\\<^esub>\n                      g =\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                      f ;;\\<^bsub>C\\<^esub>\n                      g\n\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                          f ;;\\<^bsub>C\\<^esub>\n                        g =\n    m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                        (f ;;\\<^bsub>C\\<^esub> g)", "also"], ["proof (state)\nthis:\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                        f ;;\\<^bsub>C\\<^esub>\n                      g =\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                      f ;;\\<^bsub>C\\<^esub>\n                      g\n\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                          f ;;\\<^bsub>C\\<^esub>\n                        g =\n    m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                        (f ;;\\<^bsub>C\\<^esub> g)", "have \"... = m2z\\<^bsub>C\\<^esub> ((z2m\\<^bsub>C\\<^esub> h) ;;\\<^bsub>C\\<^esub> (f ;;\\<^bsub>C\\<^esub> g))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                        f ;;\\<^bsub>C\\<^esub>\n                        g =\n    m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                        (f ;;\\<^bsub>C\\<^esub> g)", "using bb c a"], ["proof (prove)\nusing this:\n  z2m\\<^bsub>C\\<^esub>h \\<approx>>\\<^bsub>C\\<^esub> f\n  f \\<approx>>\\<^bsub>C\\<^esub> g\n  LSCategory C\n\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                        f ;;\\<^bsub>C\\<^esub>\n                        g =\n    m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                        (f ;;\\<^bsub>C\\<^esub> g)", "by (simp add: Category.Cassoc)"], ["proof (state)\nthis:\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                      f ;;\\<^bsub>C\\<^esub>\n                      g =\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                      (f ;;\\<^bsub>C\\<^esub> g)\n\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                          f ;;\\<^bsub>C\\<^esub>\n                        g =\n    m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                        (f ;;\\<^bsub>C\\<^esub> g)", "finally"], ["proof (chain)\npicking this:\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                        f ;;\\<^bsub>C\\<^esub>\n                      g =\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                      (f ;;\\<^bsub>C\\<^esub> g)", "show ?thesis"], ["proof (prove)\nusing this:\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                        f ;;\\<^bsub>C\\<^esub>\n                      g =\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                      (f ;;\\<^bsub>C\\<^esub> g)\n\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                          f ;;\\<^bsub>C\\<^esub>\n                        g =\n    m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                        (f ;;\\<^bsub>C\\<^esub> g)", "."], ["proof (state)\nthis:\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                        f ;;\\<^bsub>C\\<^esub>\n                      g =\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                      (f ;;\\<^bsub>C\\<^esub> g)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                        f ;;\\<^bsub>C\\<^esub>\n                      g =\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                      (f ;;\\<^bsub>C\\<^esub> g)\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  ?h2 |\\<in>|\n  (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f) \\<Longrightarrow>\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>?h2 ;;\\<^bsub>C\\<^esub>\n                        f ;;\\<^bsub>C\\<^esub>\n                      g =\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>?h2 ;;\\<^bsub>C\\<^esub>\n                      (f ;;\\<^bsub>C\\<^esub> g)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n   (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> g)\n   ((\\<lambda>f.\n        m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>f ;;\\<^bsub>C\\<^esub>\n                            g) \\<circ>\n    (\\<lambda>h.\n        m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f)) =\n  ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n   (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> g)\n   (\\<lambda>h.\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                           (f ;;\\<^bsub>C\\<^esub> g))\n\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET'\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[X,g]) =\n    Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]", "also"], ["proof (state)\nthis:\n  ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n   (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> g)\n   ((\\<lambda>f.\n        m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>f ;;\\<^bsub>C\\<^esub>\n                            g) \\<circ>\n    (\\<lambda>h.\n        m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f)) =\n  ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n   (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> g)\n   (\\<lambda>h.\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                           (f ;;\\<^bsub>C\\<^esub> g))\n\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET'\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[X,g]) =\n    Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]", "have \"... = ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> (f ;;\\<^bsub>C\\<^esub> g)) (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> (f ;;\\<^bsub>C\\<^esub> g)) (\\<lambda>h. m2z\\<^bsub>C \\<^esub>((z2m\\<^bsub>C \\<^esub>h) ;;\\<^bsub>C\\<^esub> (f ;;\\<^bsub>C\\<^esub> g)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n     (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> g)\n     (\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                             (f ;;\\<^bsub>C\\<^esub> g)) =\n    ZFfun\n     (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> (f ;;\\<^bsub>C\\<^esub> g))\n     (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> (f ;;\\<^bsub>C\\<^esub> g))\n     (\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                             (f ;;\\<^bsub>C\\<^esub> g))", "using 2 3"], ["proof (prove)\nusing this:\n  dom\\<^bsub>C\\<^esub> (f ;;\\<^bsub>C\\<^esub> g) = dom\\<^bsub>C\\<^esub> f\n  cod\\<^bsub>C\\<^esub> (f ;;\\<^bsub>C\\<^esub> g) = cod\\<^bsub>C\\<^esub> g\n\ngoal (1 subgoal):\n 1. ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n     (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> g)\n     (\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                             (f ;;\\<^bsub>C\\<^esub> g)) =\n    ZFfun\n     (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> (f ;;\\<^bsub>C\\<^esub> g))\n     (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> (f ;;\\<^bsub>C\\<^esub> g))\n     (\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                             (f ;;\\<^bsub>C\\<^esub> g))", "by simp"], ["proof (state)\nthis:\n  ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n   (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> g)\n   (\\<lambda>h.\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                           (f ;;\\<^bsub>C\\<^esub> g)) =\n  ZFfun\n   (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> (f ;;\\<^bsub>C\\<^esub> g))\n   (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> (f ;;\\<^bsub>C\\<^esub> g))\n   (\\<lambda>h.\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                           (f ;;\\<^bsub>C\\<^esub> g))\n\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET'\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[X,g]) =\n    Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]", "also"], ["proof (state)\nthis:\n  ZFfun (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f)\n   (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> g)\n   (\\<lambda>h.\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                           (f ;;\\<^bsub>C\\<^esub> g)) =\n  ZFfun\n   (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> (f ;;\\<^bsub>C\\<^esub> g))\n   (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> (f ;;\\<^bsub>C\\<^esub> g))\n   (\\<lambda>h.\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                           (f ;;\\<^bsub>C\\<^esub> g))\n\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET'\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[X,g]) =\n    Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]", "have \"... = Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFfun\n     (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> (f ;;\\<^bsub>C\\<^esub> g))\n     (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> (f ;;\\<^bsub>C\\<^esub> g))\n     (\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                             (f ;;\\<^bsub>C\\<^esub> g)) =\n    Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]", "by (simp add:  HomFtorMap_def)"], ["proof (state)\nthis:\n  ZFfun\n   (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> (f ;;\\<^bsub>C\\<^esub> g))\n   (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> (f ;;\\<^bsub>C\\<^esub> g))\n   (\\<lambda>h.\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                           (f ;;\\<^bsub>C\\<^esub> g)) =\n  Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]\n\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET'\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[X,g]) =\n    Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]", "finally"], ["proof (chain)\npicking this:\n  (Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET'\\<^esub>\n  (Hom\\<^bsub>C\\<^esub>[X,g]) =\n  Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]", "show ?thesis"], ["proof (prove)\nusing this:\n  (Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET'\\<^esub>\n  (Hom\\<^bsub>C\\<^esub>[X,g]) =\n  Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]\n\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET'\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[X,g]) =\n    Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]", "by (auto simp add: SET_def)"], ["proof (state)\nthis:\n  (Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET'\\<^esub>\n  (Hom\\<^bsub>C\\<^esub>[X,g]) =\n  Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HomFtorDist:\n  assumes \"LSCategory C\" and \"X \\<in> obj\\<^bsub>C\\<^esub>\" and \"f \\<approx>>\\<^bsub>C\\<^esub> g\"\n  shows   \"(Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,g]) = Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[X,g]) =\n    Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[X,g]) =\n    Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]", "have \"(Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,g]) = Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET'\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[X,g]) =\n    Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]", "using assms"], ["proof (prove)\nusing this:\n  LSCategory C\n  X \\<in> obj\\<^bsub>C\\<^esub>\n  f \\<approx>>\\<^bsub>C\\<^esub> g\n\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET'\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[X,g]) =\n    Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]", "by (simp add: HomFtorDist')"], ["proof (state)\nthis:\n  (Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET'\\<^esub>\n  (Hom\\<^bsub>C\\<^esub>[X,g]) =\n  Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]\n\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[X,g]) =\n    Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]", "moreover"], ["proof (state)\nthis:\n  (Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET'\\<^esub>\n  (Hom\\<^bsub>C\\<^esub>[X,g]) =\n  Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]\n\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[X,g]) =\n    Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]", "have \"(Hom\\<^bsub>C\\<^esub>[X,f]) \\<approx>>\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub>[X,g])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,f] \\<approx>>\\<^bsub>SET'\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[X,g])", "using assms"], ["proof (prove)\nusing this:\n  LSCategory C\n  X \\<in> obj\\<^bsub>C\\<^esub>\n  f \\<approx>>\\<^bsub>C\\<^esub> g\n\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,f] \\<approx>>\\<^bsub>SET'\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[X,g])", "by (simp add: HomFtorCompDef')"], ["proof (state)\nthis:\n  Hom\\<^bsub>C\\<^esub>[X,f] \\<approx>>\\<^bsub>SET'\\<^esub>\n  (Hom\\<^bsub>C\\<^esub>[X,g])\n\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[X,g]) =\n    Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]", "ultimately"], ["proof (chain)\npicking this:\n  (Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET'\\<^esub>\n  (Hom\\<^bsub>C\\<^esub>[X,g]) =\n  Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]\n  Hom\\<^bsub>C\\<^esub>[X,f] \\<approx>>\\<^bsub>SET'\\<^esub>\n  (Hom\\<^bsub>C\\<^esub>[X,g])", "show ?thesis"], ["proof (prove)\nusing this:\n  (Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET'\\<^esub>\n  (Hom\\<^bsub>C\\<^esub>[X,g]) =\n  Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]\n  Hom\\<^bsub>C\\<^esub>[X,f] \\<approx>>\\<^bsub>SET'\\<^esub>\n  (Hom\\<^bsub>C\\<^esub>[X,g])\n\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[X,g]) =\n    Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]", "by (simp add: MakeCatComp SET_def)"], ["proof (state)\nthis:\n  (Hom\\<^bsub>C\\<^esub>[X,f]) ;;\\<^bsub>SET\\<^esub>\n  (Hom\\<^bsub>C\\<^esub>[X,g]) =\n  Hom\\<^bsub>C\\<^esub>[X,f ;;\\<^bsub>C\\<^esub> g]\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HomFtorId':\n  assumes a: \"LSCategory C\" and b: \"X \\<in> obj\\<^bsub>C\\<^esub>\" and c: \"Y \\<in> obj\\<^bsub>C\\<^esub>\"\n  shows   \"Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y] = id\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C \\<^esub>X Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y] =\n    id\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub> X Y)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y] =\n    id\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub> X Y)", "have \"(id\\<^bsub>C\\<^esub> Y) maps\\<^bsub>C\\<^esub> Y to Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. id\\<^bsub>C\\<^esub> Y maps\\<^bsub>C\\<^esub> Y to Y", "using a c"], ["proof (prove)\nusing this:\n  LSCategory C\n  Y \\<in> obj\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. id\\<^bsub>C\\<^esub> Y maps\\<^bsub>C\\<^esub> Y to Y", "by (simp add: Category.Simps)"], ["proof (state)\nthis:\n  id\\<^bsub>C\\<^esub> Y maps\\<^bsub>C\\<^esub> Y to Y\n\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y] =\n    id\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub> X Y)", "hence 1: \"(dom\\<^bsub>C\\<^esub> (id\\<^bsub>C\\<^esub> Y)) = Y\" and 2: \"(cod\\<^bsub>C\\<^esub> (id\\<^bsub>C\\<^esub> Y)) = Y\""], ["proof (prove)\nusing this:\n  id\\<^bsub>C\\<^esub> Y maps\\<^bsub>C\\<^esub> Y to Y\n\ngoal (1 subgoal):\n 1. dom\\<^bsub>C\\<^esub> (id\\<^bsub>C\\<^esub> Y) = Y &&&\n    cod\\<^bsub>C\\<^esub> (id\\<^bsub>C\\<^esub> Y) = Y", "by auto"], ["proof (state)\nthis:\n  dom\\<^bsub>C\\<^esub> (id\\<^bsub>C\\<^esub> Y) = Y\n  cod\\<^bsub>C\\<^esub> (id\\<^bsub>C\\<^esub> Y) = Y\n\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y] =\n    id\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub> X Y)", "have \"Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y] = ZFfun (Hom\\<^bsub>C \\<^esub>X (dom\\<^bsub>C\\<^esub> (id\\<^bsub>C\\<^esub> Y))) (Hom\\<^bsub>C \\<^esub>X (cod\\<^bsub>C\\<^esub> (id\\<^bsub>C\\<^esub> Y))) (\\<lambda> f . m2z\\<^bsub>C\\<^esub> ((z2m\\<^bsub>C\\<^esub> f) ;;\\<^bsub>C\\<^esub> (id\\<^bsub>C\\<^esub> Y)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y] =\n    ZFfun\n     (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> (id\\<^bsub>C\\<^esub> Y))\n     (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> (id\\<^bsub>C\\<^esub> Y))\n     (\\<lambda>f.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>f ;;\\<^bsub>C\\<^esub>\n                             id\\<^bsub>C\\<^esub> Y)", "by (simp add: HomFtorMap_def)"], ["proof (state)\nthis:\n  Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y] =\n  ZFfun\n   (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> (id\\<^bsub>C\\<^esub> Y))\n   (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> (id\\<^bsub>C\\<^esub> Y))\n   (\\<lambda>f.\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>f ;;\\<^bsub>C\\<^esub>\n                           id\\<^bsub>C\\<^esub> Y)\n\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y] =\n    id\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub> X Y)", "also"], ["proof (state)\nthis:\n  Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y] =\n  ZFfun\n   (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> (id\\<^bsub>C\\<^esub> Y))\n   (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> (id\\<^bsub>C\\<^esub> Y))\n   (\\<lambda>f.\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>f ;;\\<^bsub>C\\<^esub>\n                           id\\<^bsub>C\\<^esub> Y)\n\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y] =\n    id\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub> X Y)", "have \"... = ZFfun (Hom\\<^bsub>C \\<^esub>X Y) (Hom\\<^bsub>C \\<^esub>X Y) (\\<lambda> f . m2z\\<^bsub>C\\<^esub> ((z2m\\<^bsub>C\\<^esub> f) ;;\\<^bsub>C\\<^esub> (id\\<^bsub>C\\<^esub> Y)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFfun\n     (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> (id\\<^bsub>C\\<^esub> Y))\n     (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> (id\\<^bsub>C\\<^esub> Y))\n     (\\<lambda>f.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>f ;;\\<^bsub>C\\<^esub>\n                             id\\<^bsub>C\\<^esub> Y) =\n    ZFfun (Hom\\<^bsub>C\\<^esub> X Y) (Hom\\<^bsub>C\\<^esub> X Y)\n     (\\<lambda>f.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>f ;;\\<^bsub>C\\<^esub>\n                             id\\<^bsub>C\\<^esub> Y)", "using 1 2"], ["proof (prove)\nusing this:\n  dom\\<^bsub>C\\<^esub> (id\\<^bsub>C\\<^esub> Y) = Y\n  cod\\<^bsub>C\\<^esub> (id\\<^bsub>C\\<^esub> Y) = Y\n\ngoal (1 subgoal):\n 1. ZFfun\n     (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> (id\\<^bsub>C\\<^esub> Y))\n     (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> (id\\<^bsub>C\\<^esub> Y))\n     (\\<lambda>f.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>f ;;\\<^bsub>C\\<^esub>\n                             id\\<^bsub>C\\<^esub> Y) =\n    ZFfun (Hom\\<^bsub>C\\<^esub> X Y) (Hom\\<^bsub>C\\<^esub> X Y)\n     (\\<lambda>f.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>f ;;\\<^bsub>C\\<^esub>\n                             id\\<^bsub>C\\<^esub> Y)", "by simp"], ["proof (state)\nthis:\n  ZFfun\n   (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> (id\\<^bsub>C\\<^esub> Y))\n   (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> (id\\<^bsub>C\\<^esub> Y))\n   (\\<lambda>f.\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>f ;;\\<^bsub>C\\<^esub>\n                           id\\<^bsub>C\\<^esub> Y) =\n  ZFfun (Hom\\<^bsub>C\\<^esub> X Y) (Hom\\<^bsub>C\\<^esub> X Y)\n   (\\<lambda>f.\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>f ;;\\<^bsub>C\\<^esub>\n                           id\\<^bsub>C\\<^esub> Y)\n\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y] =\n    id\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub> X Y)", "also"], ["proof (state)\nthis:\n  ZFfun\n   (Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> (id\\<^bsub>C\\<^esub> Y))\n   (Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> (id\\<^bsub>C\\<^esub> Y))\n   (\\<lambda>f.\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>f ;;\\<^bsub>C\\<^esub>\n                           id\\<^bsub>C\\<^esub> Y) =\n  ZFfun (Hom\\<^bsub>C\\<^esub> X Y) (Hom\\<^bsub>C\\<^esub> X Y)\n   (\\<lambda>f.\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>f ;;\\<^bsub>C\\<^esub>\n                           id\\<^bsub>C\\<^esub> Y)\n\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y] =\n    id\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub> X Y)", "have \"... = ZFfun (Hom\\<^bsub>C \\<^esub>X Y) (Hom\\<^bsub>C \\<^esub>X Y) (\\<lambda> f . f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFfun (Hom\\<^bsub>C\\<^esub> X Y) (Hom\\<^bsub>C\\<^esub> X Y)\n     (\\<lambda>f.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>f ;;\\<^bsub>C\\<^esub>\n                             id\\<^bsub>C\\<^esub> Y) =\n    ZFfun (Hom\\<^bsub>C\\<^esub> X Y) (Hom\\<^bsub>C\\<^esub> X Y)\n     (\\<lambda>f. f)", "proof(rule ZFfun_ext, rule allI, rule impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x |\\<in>| (Hom\\<^bsub>C\\<^esub> X Y) \\<Longrightarrow>\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub>\n                           id\\<^bsub>C\\<^esub> Y =\n       x", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x |\\<in>| (Hom\\<^bsub>C\\<^esub> X Y) \\<Longrightarrow>\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub>\n                           id\\<^bsub>C\\<^esub> Y =\n       x", "fix h"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x |\\<in>| (Hom\\<^bsub>C\\<^esub> X Y) \\<Longrightarrow>\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub>\n                           id\\<^bsub>C\\<^esub> Y =\n       x", "assume aa: \"h |\\<in>| (Hom\\<^bsub>C\\<^esub> X Y)\""], ["proof (state)\nthis:\n  h |\\<in>| (Hom\\<^bsub>C\\<^esub> X Y)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x |\\<in>| (Hom\\<^bsub>C\\<^esub> X Y) \\<Longrightarrow>\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub>\n                           id\\<^bsub>C\\<^esub> Y =\n       x", "show \"m2z\\<^bsub>C\\<^esub> ((z2m\\<^bsub>C\\<^esub> h) ;;\\<^bsub>C\\<^esub> (id\\<^bsub>C\\<^esub> Y)) = h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                        id\\<^bsub>C\\<^esub> Y =\n    h", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                        id\\<^bsub>C\\<^esub> Y =\n    h", "have \"(z2m\\<^bsub>C\\<^esub> h) maps\\<^bsub>C\\<^esub> X to Y\" and bb: \"m2z\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub> h) = h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z2m\\<^bsub>C\\<^esub>h maps\\<^bsub>C\\<^esub> X to Y &&&\n    m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h = h", "using assms aa"], ["proof (prove)\nusing this:\n  LSCategory C\n  X \\<in> obj\\<^bsub>C\\<^esub>\n  Y \\<in> obj\\<^bsub>C\\<^esub>\n  h |\\<in>| (Hom\\<^bsub>C\\<^esub> X Y)\n\ngoal (1 subgoal):\n 1. z2m\\<^bsub>C\\<^esub>h maps\\<^bsub>C\\<^esub> X to Y &&&\n    m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h = h", "by (simp add: LSCategory.z2mm2z)+"], ["proof (state)\nthis:\n  z2m\\<^bsub>C\\<^esub>h maps\\<^bsub>C\\<^esub> X to Y\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h = h\n\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                        id\\<^bsub>C\\<^esub> Y =\n    h", "hence \"(z2m\\<^bsub>C\\<^esub> h) ;;\\<^bsub>C\\<^esub> (id\\<^bsub>C\\<^esub> Y) = (z2m\\<^bsub>C\\<^esub> h)\""], ["proof (prove)\nusing this:\n  z2m\\<^bsub>C\\<^esub>h maps\\<^bsub>C\\<^esub> X to Y\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h = h\n\ngoal (1 subgoal):\n 1. z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> id\\<^bsub>C\\<^esub> Y =\n    z2m\\<^bsub>C\\<^esub>h", "using a"], ["proof (prove)\nusing this:\n  z2m\\<^bsub>C\\<^esub>h maps\\<^bsub>C\\<^esub> X to Y\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h = h\n  LSCategory C\n\ngoal (1 subgoal):\n 1. z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> id\\<^bsub>C\\<^esub> Y =\n    z2m\\<^bsub>C\\<^esub>h", "by (auto simp add: Category.Simps)"], ["proof (state)\nthis:\n  z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> id\\<^bsub>C\\<^esub> Y =\n  z2m\\<^bsub>C\\<^esub>h\n\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                        id\\<^bsub>C\\<^esub> Y =\n    h", "hence \"m2z\\<^bsub>C\\<^esub> ((z2m\\<^bsub>C\\<^esub> h) ;;\\<^bsub>C\\<^esub> (id\\<^bsub>C\\<^esub> Y)) = m2z\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub> h)\""], ["proof (prove)\nusing this:\n  z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> id\\<^bsub>C\\<^esub> Y =\n  z2m\\<^bsub>C\\<^esub>h\n\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                        id\\<^bsub>C\\<^esub> Y =\n    m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h", "by simp"], ["proof (state)\nthis:\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                      id\\<^bsub>C\\<^esub> Y =\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h\n\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                        id\\<^bsub>C\\<^esub> Y =\n    h", "also"], ["proof (state)\nthis:\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                      id\\<^bsub>C\\<^esub> Y =\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h\n\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                        id\\<^bsub>C\\<^esub> Y =\n    h", "have \"... = h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h = h", "using bb"], ["proof (prove)\nusing this:\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h = h\n\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h = h", "."], ["proof (state)\nthis:\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h = h\n\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                        id\\<^bsub>C\\<^esub> Y =\n    h", "finally"], ["proof (chain)\npicking this:\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                      id\\<^bsub>C\\<^esub> Y =\n  h", "show ?thesis"], ["proof (prove)\nusing this:\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                      id\\<^bsub>C\\<^esub> Y =\n  h\n\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                        id\\<^bsub>C\\<^esub> Y =\n    h", "."], ["proof (state)\nthis:\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                      id\\<^bsub>C\\<^esub> Y =\n  h\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                      id\\<^bsub>C\\<^esub> Y =\n  h\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  ?h2 |\\<in>| (Hom\\<^bsub>C\\<^esub> X Y) \\<Longrightarrow>\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>?h2 ;;\\<^bsub>C\\<^esub>\n                      id\\<^bsub>C\\<^esub> Y =\n  ?h2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ZFfun (Hom\\<^bsub>C\\<^esub> X Y) (Hom\\<^bsub>C\\<^esub> X Y)\n   (\\<lambda>f.\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>f ;;\\<^bsub>C\\<^esub>\n                           id\\<^bsub>C\\<^esub> Y) =\n  ZFfun (Hom\\<^bsub>C\\<^esub> X Y) (Hom\\<^bsub>C\\<^esub> X Y)\n   (\\<lambda>f. f)\n\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y] =\n    id\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub> X Y)", "finally"], ["proof (chain)\npicking this:\n  Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y] =\n  ZFfun (Hom\\<^bsub>C\\<^esub> X Y) (Hom\\<^bsub>C\\<^esub> X Y)\n   (\\<lambda>f. f)", "show ?thesis"], ["proof (prove)\nusing this:\n  Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y] =\n  ZFfun (Hom\\<^bsub>C\\<^esub> X Y) (Hom\\<^bsub>C\\<^esub> X Y)\n   (\\<lambda>f. f)\n\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y] =\n    id\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub> X Y)", "by (simp add: SET'_def)"], ["proof (state)\nthis:\n  Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y] =\n  id\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub> X Y)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HomFtorId: \n  assumes \"LSCategory C\" and \"X \\<in> obj\\<^bsub>C\\<^esub>\" and \"Y \\<in> obj\\<^bsub>C\\<^esub>\"\n  shows   \"Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y] = id\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C \\<^esub>X Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y] =\n    id\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub> X Y)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y] =\n    id\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub> X Y)", "have \"Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y] = id\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C \\<^esub>X Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y] =\n    id\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub> X Y)", "using assms"], ["proof (prove)\nusing this:\n  LSCategory C\n  X \\<in> obj\\<^bsub>C\\<^esub>\n  Y \\<in> obj\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y] =\n    id\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub> X Y)", "by (simp add: HomFtorId')"], ["proof (state)\nthis:\n  Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y] =\n  id\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub> X Y)\n\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y] =\n    id\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub> X Y)", "moreover"], ["proof (state)\nthis:\n  Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y] =\n  id\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub> X Y)\n\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y] =\n    id\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub> X Y)", "have \"(Hom\\<^bsub>C \\<^esub>X Y) \\<in> obj\\<^bsub>SET'\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub> X Y \\<in> obj\\<^bsub>SET'\\<^esub>", "by (simp add: SET'_def)"], ["proof (state)\nthis:\n  Hom\\<^bsub>C\\<^esub> X Y \\<in> obj\\<^bsub>SET'\\<^esub>\n\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y] =\n    id\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub> X Y)", "ultimately"], ["proof (chain)\npicking this:\n  Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y] =\n  id\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub> X Y)\n  Hom\\<^bsub>C\\<^esub> X Y \\<in> obj\\<^bsub>SET'\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y] =\n  id\\<^bsub>SET'\\<^esub> (Hom\\<^bsub>C\\<^esub> X Y)\n  Hom\\<^bsub>C\\<^esub> X Y \\<in> obj\\<^bsub>SET'\\<^esub>\n\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y] =\n    id\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub> X Y)", "by (simp add: MakeCatId SET_def)"], ["proof (state)\nthis:\n  Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y] =\n  id\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub> X Y)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HomFtorObj':\n  assumes a: \"LSCategory C\"\n  and     b: \"PreFunctor (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\"  and c: \"X \\<in> obj\\<^bsub>C\\<^esub>\" and d: \"Y \\<in> obj\\<^bsub>C\\<^esub>\"\n  shows   \"(HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y = Hom\\<^bsub>C \\<^esub>X Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y = Hom\\<^bsub>C\\<^esub> X Y", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y = Hom\\<^bsub>C\\<^esub> X Y", "let ?F = \"(HomFtor' C X)\""], ["proof (state)\ngoal (1 subgoal):\n 1. (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y = Hom\\<^bsub>C\\<^esub> X Y", "have \"?F ## (id\\<^bsub>CatDom ?F\\<^esub> Y) = Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) ##\n    id\\<^bsub>CatDom (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\\<^esub> Y =\n    Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y]", "by (simp add: HomFtor'_def)"], ["proof (state)\nthis:\n  (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) ##\n  id\\<^bsub>CatDom (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\\<^esub> Y =\n  Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y]\n\ngoal (1 subgoal):\n 1. (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y = Hom\\<^bsub>C\\<^esub> X Y", "also"], ["proof (state)\nthis:\n  (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) ##\n  id\\<^bsub>CatDom (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\\<^esub> Y =\n  Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y]\n\ngoal (1 subgoal):\n 1. (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y = Hom\\<^bsub>C\\<^esub> X Y", "have \"... = id\\<^bsub>CatCod ?F\\<^esub> (Hom\\<^bsub>C \\<^esub>X Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y] =\n    id\\<^bsub>CatCod (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\\<^esub> (Hom\\<^bsub>C\\<^esub> X Y)", "using assms"], ["proof (prove)\nusing this:\n  LSCategory C\n  PreFunctor (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\n  X \\<in> obj\\<^bsub>C\\<^esub>\n  Y \\<in> obj\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y] =\n    id\\<^bsub>CatCod (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\\<^esub> (Hom\\<^bsub>C\\<^esub> X Y)", "by (simp add: HomFtorId HomFtor'_def)"], ["proof (state)\nthis:\n  Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Y] =\n  id\\<^bsub>CatCod (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\\<^esub> (Hom\\<^bsub>C\\<^esub> X Y)\n\ngoal (1 subgoal):\n 1. (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y = Hom\\<^bsub>C\\<^esub> X Y", "finally"], ["proof (chain)\npicking this:\n  (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) ##\n  id\\<^bsub>CatDom (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\\<^esub> Y =\n  id\\<^bsub>CatCod (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\\<^esub> (Hom\\<^bsub>C\\<^esub> X Y)", "have \"?F ## (id\\<^bsub>CatDom ?F\\<^esub> Y) = id\\<^bsub>CatCod ?F\\<^esub> (Hom\\<^bsub>C \\<^esub>X Y)\""], ["proof (prove)\nusing this:\n  (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) ##\n  id\\<^bsub>CatDom (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\\<^esub> Y =\n  id\\<^bsub>CatCod (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\\<^esub> (Hom\\<^bsub>C\\<^esub> X Y)\n\ngoal (1 subgoal):\n 1. (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) ##\n    id\\<^bsub>CatDom (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\\<^esub> Y =\n    id\\<^bsub>CatCod (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\\<^esub> (Hom\\<^bsub>C\\<^esub> X Y)", "by simp"], ["proof (state)\nthis:\n  (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) ##\n  id\\<^bsub>CatDom (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\\<^esub> Y =\n  id\\<^bsub>CatCod (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\\<^esub> (Hom\\<^bsub>C\\<^esub> X Y)\n\ngoal (1 subgoal):\n 1. (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y = Hom\\<^bsub>C\\<^esub> X Y", "moreover"], ["proof (state)\nthis:\n  (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) ##\n  id\\<^bsub>CatDom (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\\<^esub> Y =\n  id\\<^bsub>CatCod (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\\<^esub> (Hom\\<^bsub>C\\<^esub> X Y)\n\ngoal (1 subgoal):\n 1. (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y = Hom\\<^bsub>C\\<^esub> X Y", "have \"Hom\\<^bsub>C \\<^esub>X Y \\<in> obj\\<^bsub>CatCod ?F\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub> X Y\n    \\<in> obj\\<^bsub>CatCod (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\\<^esub>", "using assms"], ["proof (prove)\nusing this:\n  LSCategory C\n  PreFunctor (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\n  X \\<in> obj\\<^bsub>C\\<^esub>\n  Y \\<in> obj\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub> X Y\n    \\<in> obj\\<^bsub>CatCod (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\\<^esub>", "by (simp add: HomFtorId HomFtor'_def SET_def SET'_def MakeCatObj)"], ["proof (state)\nthis:\n  Hom\\<^bsub>C\\<^esub> X Y\n  \\<in> obj\\<^bsub>CatCod (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\\<^esub>\n\ngoal (1 subgoal):\n 1. (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y = Hom\\<^bsub>C\\<^esub> X Y", "moreover"], ["proof (state)\nthis:\n  Hom\\<^bsub>C\\<^esub> X Y\n  \\<in> obj\\<^bsub>CatCod (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\\<^esub>\n\ngoal (1 subgoal):\n 1. (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y = Hom\\<^bsub>C\\<^esub> X Y", "have \"Y \\<in> obj\\<^bsub>CatDom ?F\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Y \\<in> obj\\<^bsub>CatDom (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\\<^esub>", "using d"], ["proof (prove)\nusing this:\n  Y \\<in> obj\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. Y \\<in> obj\\<^bsub>CatDom (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\\<^esub>", "by (simp add: HomFtor'_def)"], ["proof (state)\nthis:\n  Y \\<in> obj\\<^bsub>CatDom (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\\<^esub>\n\ngoal (1 subgoal):\n 1. (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y = Hom\\<^bsub>C\\<^esub> X Y", "ultimately"], ["proof (chain)\npicking this:\n  (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) ##\n  id\\<^bsub>CatDom (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\\<^esub> Y =\n  id\\<^bsub>CatCod (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\\<^esub> (Hom\\<^bsub>C\\<^esub> X Y)\n  Hom\\<^bsub>C\\<^esub> X Y\n  \\<in> obj\\<^bsub>CatCod (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\\<^esub>\n  Y \\<in> obj\\<^bsub>CatDom (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) ##\n  id\\<^bsub>CatDom (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\\<^esub> Y =\n  id\\<^bsub>CatCod (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\\<^esub> (Hom\\<^bsub>C\\<^esub> X Y)\n  Hom\\<^bsub>C\\<^esub> X Y\n  \\<in> obj\\<^bsub>CatCod (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\\<^esub>\n  Y \\<in> obj\\<^bsub>CatDom (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\\<^esub>\n\ngoal (1 subgoal):\n 1. (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y = Hom\\<^bsub>C\\<^esub> X Y", "using b"], ["proof (prove)\nusing this:\n  (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) ##\n  id\\<^bsub>CatDom (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\\<^esub> Y =\n  id\\<^bsub>CatCod (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\\<^esub> (Hom\\<^bsub>C\\<^esub> X Y)\n  Hom\\<^bsub>C\\<^esub> X Y\n  \\<in> obj\\<^bsub>CatCod (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\\<^esub>\n  Y \\<in> obj\\<^bsub>CatDom (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\\<^esub>\n  PreFunctor (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\n\ngoal (1 subgoal):\n 1. (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y = Hom\\<^bsub>C\\<^esub> X Y", "by(simp add: PreFunctor.FmToFo[of ?F Y \"Hom\\<^bsub>C \\<^esub>X Y\"])"], ["proof (state)\nthis:\n  (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y = Hom\\<^bsub>C\\<^esub> X Y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HomFtorFtor': \n  assumes a: \"LSCategory C\"\n  and     b: \"X \\<in> obj\\<^bsub>C\\<^esub>\"\n  shows   \"FunctorM (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. FunctorM (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])", "proof(intro_locales)"], ["proof (state)\ngoal (2 subgoals):\n 1. PreFunctor (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\n 2. FunctorM_axioms (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])", "show PF: \"PreFunctor (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PreFunctor (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])", "proof(auto simp add: HomFtor'_def PreFunctor_def SETCategory a HomFtorDist b)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Xa.\n       Xa \\<in> obj\\<^bsub>C\\<^esub> \\<Longrightarrow>\n       \\<exists>Y\\<in>obj\\<^bsub>SET\\<^esub>.\n          Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Xa] =\n          id\\<^bsub>SET\\<^esub> Y", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Xa.\n       Xa \\<in> obj\\<^bsub>C\\<^esub> \\<Longrightarrow>\n       \\<exists>Y\\<in>obj\\<^bsub>SET\\<^esub>.\n          Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Xa] =\n          id\\<^bsub>SET\\<^esub> Y", "fix Z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Xa.\n       Xa \\<in> obj\\<^bsub>C\\<^esub> \\<Longrightarrow>\n       \\<exists>Y\\<in>obj\\<^bsub>SET\\<^esub>.\n          Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Xa] =\n          id\\<^bsub>SET\\<^esub> Y", "assume aa: \"Z \\<in> obj\\<^bsub>C\\<^esub>\""], ["proof (state)\nthis:\n  Z \\<in> obj\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>Xa.\n       Xa \\<in> obj\\<^bsub>C\\<^esub> \\<Longrightarrow>\n       \\<exists>Y\\<in>obj\\<^bsub>SET\\<^esub>.\n          Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Xa] =\n          id\\<^bsub>SET\\<^esub> Y", "show \"\\<exists> Y \\<in> obj\\<^bsub>SET \\<^esub>. Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Z] = id\\<^bsub>SET\\<^esub> Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>Y\\<in>obj\\<^bsub>SET\\<^esub>.\n       Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Z] =\n       id\\<^bsub>SET\\<^esub> Y", "proof(rule_tac x=\"Hom\\<^bsub>C \\<^esub>X Z\" in Set.rev_bexI)"], ["proof (state)\ngoal (2 subgoals):\n 1. Hom\\<^bsub>C\\<^esub> X Z \\<in> obj\\<^bsub>SET\\<^esub>\n 2. Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Z] =\n    id\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub> X Z)", "show \"Hom\\<^bsub>C\\<^esub> X Z \\<in> obj\\<^bsub>SET\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub> X Z \\<in> obj\\<^bsub>SET\\<^esub>", "by (simp add: SET_def SET'_def MakeCatObj)"], ["proof (state)\nthis:\n  Hom\\<^bsub>C\\<^esub> X Z \\<in> obj\\<^bsub>SET\\<^esub>\n\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Z] =\n    id\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub> X Z)", "show \"Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Z] = id\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub> X Z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Z] =\n    id\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub> X Z)", "using assms aa"], ["proof (prove)\nusing this:\n  LSCategory C\n  X \\<in> obj\\<^bsub>C\\<^esub>\n  Z \\<in> obj\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Z] =\n    id\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub> X Z)", "by(simp add:HomFtorId)"], ["proof (state)\nthis:\n  Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Z] =\n  id\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub> X Z)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>Y\\<in>obj\\<^bsub>SET\\<^esub>.\n     Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> Z] = id\\<^bsub>SET\\<^esub> Y\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  ?Z2 \\<in> obj\\<^bsub>C\\<^esub> \\<Longrightarrow>\n  \\<exists>Y\\<in>obj\\<^bsub>SET\\<^esub>.\n     Hom\\<^bsub>C\\<^esub>[X,id\\<^bsub>C\\<^esub> ?Z2] =\n     id\\<^bsub>SET\\<^esub> Y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  PreFunctor (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\n\ngoal (1 subgoal):\n 1. FunctorM_axioms (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])", "{"], ["proof (state)\nthis:\n  PreFunctor (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\n\ngoal (1 subgoal):\n 1. FunctorM_axioms (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])", "fix f Z Y"], ["proof (state)\ngoal (1 subgoal):\n 1. FunctorM_axioms (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])", "assume aa: \"f maps\\<^bsub>C \\<^esub>Z to Y\""], ["proof (state)\nthis:\n  f maps\\<^bsub>C\\<^esub> Z to Y\n\ngoal (1 subgoal):\n 1. FunctorM_axioms (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])", "have \"(HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) ## f maps\\<^bsub>SET\\<^esub> ((HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Z) to ((HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) ##\n    f maps\\<^bsub>SET\\<^esub> (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@\n                              Z to (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@\n                                   Y", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) ##\n    f maps\\<^bsub>SET\\<^esub> (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@\n                              Z to (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@\n                                   Y", "have bb: \"Z \\<in> obj\\<^bsub>C\\<^esub>\" and cc: \"Y \\<in> obj\\<^bsub>C\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Z \\<in> obj\\<^bsub>C\\<^esub> &&& Y \\<in> obj\\<^bsub>C\\<^esub>", "using aa a"], ["proof (prove)\nusing this:\n  f maps\\<^bsub>C\\<^esub> Z to Y\n  LSCategory C\n\ngoal (1 subgoal):\n 1. Z \\<in> obj\\<^bsub>C\\<^esub> &&& Y \\<in> obj\\<^bsub>C\\<^esub>", "by (simp add: Category.MapsToObj)+"], ["proof (state)\nthis:\n  Z \\<in> obj\\<^bsub>C\\<^esub>\n  Y \\<in> obj\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) ##\n    f maps\\<^bsub>SET\\<^esub> (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@\n                              Z to (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@\n                                   Y", "have dd: \"dom\\<^bsub>C\\<^esub> f = Z\" and ee: \"cod\\<^bsub>C\\<^esub> f = Y\" and ff: \"f \\<in> mor\\<^bsub>C\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dom\\<^bsub>C\\<^esub> f = Z &&&\n    cod\\<^bsub>C\\<^esub> f = Y &&& f \\<in> mor\\<^bsub>C\\<^esub>", "using aa"], ["proof (prove)\nusing this:\n  f maps\\<^bsub>C\\<^esub> Z to Y\n\ngoal (1 subgoal):\n 1. dom\\<^bsub>C\\<^esub> f = Z &&&\n    cod\\<^bsub>C\\<^esub> f = Y &&& f \\<in> mor\\<^bsub>C\\<^esub>", "by auto"], ["proof (state)\nthis:\n  dom\\<^bsub>C\\<^esub> f = Z\n  cod\\<^bsub>C\\<^esub> f = Y\n  f \\<in> mor\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) ##\n    f maps\\<^bsub>SET\\<^esub> (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@\n                              Z to (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@\n                                   Y", "have \"(HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) ## f = Hom\\<^bsub>C\\<^esub>[X,f]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) ## f = Hom\\<^bsub>C\\<^esub>[X,f]", "by (simp add: HomFtor'_def)"], ["proof (state)\nthis:\n  (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) ## f = Hom\\<^bsub>C\\<^esub>[X,f]\n\ngoal (1 subgoal):\n 1. (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) ##\n    f maps\\<^bsub>SET\\<^esub> (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@\n                              Z to (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@\n                                   Y", "moreover"], ["proof (state)\nthis:\n  (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) ## f = Hom\\<^bsub>C\\<^esub>[X,f]\n\ngoal (1 subgoal):\n 1. (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) ##\n    f maps\\<^bsub>SET\\<^esub> (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@\n                              Z to (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@\n                                   Y", "have \"(HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Z = Hom\\<^bsub>C \\<^esub>X Z\" \n        and \"(HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y = Hom\\<^bsub>C \\<^esub>X Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Z =\n    Hom\\<^bsub>C\\<^esub> X Z &&&\n    (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y = Hom\\<^bsub>C\\<^esub> X Y", "using assms bb cc PF"], ["proof (prove)\nusing this:\n  LSCategory C\n  X \\<in> obj\\<^bsub>C\\<^esub>\n  Z \\<in> obj\\<^bsub>C\\<^esub>\n  Y \\<in> obj\\<^bsub>C\\<^esub>\n  PreFunctor (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\n\ngoal (1 subgoal):\n 1. (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Z =\n    Hom\\<^bsub>C\\<^esub> X Z &&&\n    (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y = Hom\\<^bsub>C\\<^esub> X Y", "by (simp add: HomFtorObj')+"], ["proof (state)\nthis:\n  (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Z = Hom\\<^bsub>C\\<^esub> X Z\n  (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y = Hom\\<^bsub>C\\<^esub> X Y\n\ngoal (1 subgoal):\n 1. (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) ##\n    f maps\\<^bsub>SET\\<^esub> (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@\n                              Z to (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@\n                                   Y", "moreover"], ["proof (state)\nthis:\n  (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Z = Hom\\<^bsub>C\\<^esub> X Z\n  (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y = Hom\\<^bsub>C\\<^esub> X Y\n\ngoal (1 subgoal):\n 1. (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) ##\n    f maps\\<^bsub>SET\\<^esub> (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@\n                              Z to (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@\n                                   Y", "have \"Hom\\<^bsub>C\\<^esub>[X,f] maps\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C \\<^esub>X (dom\\<^bsub>C\\<^esub> f)) to (Hom\\<^bsub>C \\<^esub>X (cod\\<^bsub>C\\<^esub> f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,f] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f to Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f", "using assms ff"], ["proof (prove)\nusing this:\n  LSCategory C\n  X \\<in> obj\\<^bsub>C\\<^esub>\n  f \\<in> mor\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[X,f] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f to Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f", "by (simp add: HomFtorMapsTo)"], ["proof (state)\nthis:\n  Hom\\<^bsub>C\\<^esub>[X,f] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f to Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f\n\ngoal (1 subgoal):\n 1. (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) ##\n    f maps\\<^bsub>SET\\<^esub> (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@\n                              Z to (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@\n                                   Y", "ultimately"], ["proof (chain)\npicking this:\n  (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) ## f = Hom\\<^bsub>C\\<^esub>[X,f]\n  (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Z = Hom\\<^bsub>C\\<^esub> X Z\n  (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y = Hom\\<^bsub>C\\<^esub> X Y\n  Hom\\<^bsub>C\\<^esub>[X,f] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f to Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f", "show ?thesis"], ["proof (prove)\nusing this:\n  (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) ## f = Hom\\<^bsub>C\\<^esub>[X,f]\n  (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Z = Hom\\<^bsub>C\\<^esub> X Z\n  (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y = Hom\\<^bsub>C\\<^esub> X Y\n  Hom\\<^bsub>C\\<^esub>[X,f] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f to Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f\n\ngoal (1 subgoal):\n 1. (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) ##\n    f maps\\<^bsub>SET\\<^esub> (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@\n                              Z to (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@\n                                   Y", "using dd ee"], ["proof (prove)\nusing this:\n  (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) ## f = Hom\\<^bsub>C\\<^esub>[X,f]\n  (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Z = Hom\\<^bsub>C\\<^esub> X Z\n  (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y = Hom\\<^bsub>C\\<^esub> X Y\n  Hom\\<^bsub>C\\<^esub>[X,f] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>C\\<^esub> X dom\\<^bsub>C\\<^esub> f to Hom\\<^bsub>C\\<^esub> X cod\\<^bsub>C\\<^esub> f\n  dom\\<^bsub>C\\<^esub> f = Z\n  cod\\<^bsub>C\\<^esub> f = Y\n\ngoal (1 subgoal):\n 1. (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) ##\n    f maps\\<^bsub>SET\\<^esub> (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@\n                              Z to (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@\n                                   Y", "by simp"], ["proof (state)\nthis:\n  (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) ##\n  f maps\\<^bsub>SET\\<^esub> (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@\n                            Z to (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) ##\n  f maps\\<^bsub>SET\\<^esub> (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@\n                            Z to (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y\n\ngoal (1 subgoal):\n 1. FunctorM_axioms (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])", "}"], ["proof (state)\nthis:\n  ?f2 maps\\<^bsub>C\\<^esub> ?Z2 to ?Y2 \\<Longrightarrow>\n  (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) ##\n  ?f2 maps\\<^bsub>SET\\<^esub> (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@\n                              ?Z2 to (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@\n                                     ?Y2\n\ngoal (1 subgoal):\n 1. FunctorM_axioms (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])", "thus \"FunctorM_axioms (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\""], ["proof (prove)\nusing this:\n  ?f2 maps\\<^bsub>C\\<^esub> ?Z2 to ?Y2 \\<Longrightarrow>\n  (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) ##\n  ?f2 maps\\<^bsub>SET\\<^esub> (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@\n                              ?Z2 to (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@\n                                     ?Y2\n\ngoal (1 subgoal):\n 1. FunctorM_axioms (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])", "using PF"], ["proof (prove)\nusing this:\n  ?f2 maps\\<^bsub>C\\<^esub> ?Z2 to ?Y2 \\<Longrightarrow>\n  (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) ##\n  ?f2 maps\\<^bsub>SET\\<^esub> (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@\n                              ?Z2 to (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@\n                                     ?Y2\n  PreFunctor (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\n\ngoal (1 subgoal):\n 1. FunctorM_axioms (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])", "by (auto simp add: FunctorM_axioms_def HomFtor'_def)"], ["proof (state)\nthis:\n  FunctorM_axioms (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HomFtorFtor: \n  assumes a: \"LSCategory C\"\n  and     b: \"X \\<in> obj\\<^bsub>C\\<^esub>\"\n  shows   \"Functor (Hom\\<^bsub>C\\<^esub>[X,\\<midarrow>])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Functor (Hom\\<^bsub>C\\<^esub>[X,\\<midarrow>])", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Functor (Hom\\<^bsub>C\\<^esub>[X,\\<midarrow>])", "have \"FunctorM (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. FunctorM (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])", "using assms"], ["proof (prove)\nusing this:\n  LSCategory C\n  X \\<in> obj\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. FunctorM (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])", "by (rule HomFtorFtor')"], ["proof (state)\nthis:\n  FunctorM (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\n\ngoal (1 subgoal):\n 1. Functor (Hom\\<^bsub>C\\<^esub>[X,\\<midarrow>])", "thus ?thesis"], ["proof (prove)\nusing this:\n  FunctorM (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\n\ngoal (1 subgoal):\n 1. Functor (Hom\\<^bsub>C\\<^esub>[X,\\<midarrow>])", "by (simp add: HomFtor_def MakeFtor)"], ["proof (state)\nthis:\n  Functor (Hom\\<^bsub>C\\<^esub>[X,\\<midarrow>])\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HomFtorObj:\n  assumes \"LSCategory C\"\n  and     \"X \\<in> obj\\<^bsub>C\\<^esub>\" and \"Y \\<in> obj\\<^bsub>C\\<^esub>\"\n  shows   \"(Hom\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y = Hom\\<^bsub>C \\<^esub>X Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y = Hom\\<^bsub>C\\<^esub> X Y", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y = Hom\\<^bsub>C\\<^esub> X Y", "have \"FunctorM (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. FunctorM (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])", "using assms"], ["proof (prove)\nusing this:\n  LSCategory C\n  X \\<in> obj\\<^bsub>C\\<^esub>\n  Y \\<in> obj\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. FunctorM (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])", "by (simp add: HomFtorFtor')"], ["proof (state)\nthis:\n  FunctorM (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\n\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y = Hom\\<^bsub>C\\<^esub> X Y", "hence 1: \"PreFunctor (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\""], ["proof (prove)\nusing this:\n  FunctorM (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\n\ngoal (1 subgoal):\n 1. PreFunctor (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])", "by (simp add: FunctorM_def)"], ["proof (state)\nthis:\n  PreFunctor (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\n\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y = Hom\\<^bsub>C\\<^esub> X Y", "moreover"], ["proof (state)\nthis:\n  PreFunctor (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\n\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y = Hom\\<^bsub>C\\<^esub> X Y", "have \"CatDom (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) = C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CatDom (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) = C", "by (simp add: HomFtor'_def)"], ["proof (state)\nthis:\n  CatDom (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) = C\n\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y = Hom\\<^bsub>C\\<^esub> X Y", "ultimately"], ["proof (chain)\npicking this:\n  PreFunctor (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\n  CatDom (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) = C", "have \"(Hom\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y = (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y\""], ["proof (prove)\nusing this:\n  PreFunctor (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\n  CatDom (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) = C\n\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y =\n    (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y", "using assms"], ["proof (prove)\nusing this:\n  PreFunctor (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\n  CatDom (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) = C\n  LSCategory C\n  X \\<in> obj\\<^bsub>C\\<^esub>\n  Y \\<in> obj\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y =\n    (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y", "by (simp add: MakeFtorObj HomFtor_def)"], ["proof (state)\nthis:\n  (Hom\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y =\n  (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y\n\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y = Hom\\<^bsub>C\\<^esub> X Y", "thus ?thesis"], ["proof (prove)\nusing this:\n  (Hom\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y =\n  (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y\n\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y = Hom\\<^bsub>C\\<^esub> X Y", "using assms 1"], ["proof (prove)\nusing this:\n  (Hom\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y =\n  (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y\n  LSCategory C\n  X \\<in> obj\\<^bsub>C\\<^esub>\n  Y \\<in> obj\\<^bsub>C\\<^esub>\n  PreFunctor (HomP\\<^bsub>C\\<^esub>[X,\\<midarrow>])\n\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y = Hom\\<^bsub>C\\<^esub> X Y", "by (simp add: HomFtorObj')"], ["proof (state)\nthis:\n  (Hom\\<^bsub>C\\<^esub>[X,\\<midarrow>]) @@ Y = Hom\\<^bsub>C\\<^esub> X Y\n\ngoal:\nNo subgoals!", "qed"], ["", "definition\n  HomFtorMapContra :: \"('o,'m,'a) LSCategory_scheme \\<Rightarrow> 'm \\<Rightarrow> 'o \\<Rightarrow> ZF\" (\"HomC\\<index>[_,_]\" [65,65] 65) where\n  \"HomFtorMapContra C g X \\<equiv> ZFfun (Hom\\<^bsub>C\\<^esub> (cod\\<^bsub>C\\<^esub> g) X) (Hom\\<^bsub>C\\<^esub> (dom\\<^bsub>C\\<^esub> g) X) (\\<lambda> f . m2z\\<^bsub>C\\<^esub> (g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub> f)))\""], ["", "definition \n  HomFtorContra' :: \"('o,'m,'a) LSCategory_scheme \\<Rightarrow> 'o \\<Rightarrow> \n      ('o,ZF,'m,ZF,\\<lparr>mor2ZF :: 'm \\<Rightarrow> ZF, \\<dots> :: 'a\\<rparr>,unit) Functor\" (\"HomP\\<index>[\\<midarrow>,_]\" [65] 65) where\n  \"HomFtorContra' C X \\<equiv> \\<lparr>\n        CatDom = (Op C), \n        CatCod = SET ,\n        MapM   = \\<lambda> g . HomC\\<^bsub>C\\<^esub>[g,X]\n  \\<rparr>\""], ["", "definition HomFtorContra (\"Hom\\<index>[\\<midarrow>,_]\" [65] 65) where \"HomFtorContra C X \\<equiv> MakeFtor(HomFtorContra' C X)\""], ["", "lemma HomContraAt: \"x |\\<in>| (Hom\\<^bsub>C \\<^esub>(cod\\<^bsub>C\\<^esub> f) X) \\<Longrightarrow> (HomC\\<^bsub>C\\<^esub>[f,X]) |@| x = m2z\\<^bsub>C\\<^esub> (f ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub> x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x |\\<in>|\n    (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> f X) \\<Longrightarrow>\n    (HomC\\<^bsub>C\\<^esub>[f,X]) |@| x =\n    m2z\\<^bsub>C\\<^esub>f ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>x)", "by (simp add: HomFtorMapContra_def ZFfunApp)"], ["", "lemma mor2ZF_Op: \"mor2ZF (Op C) = mor2ZF C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mor2ZF (Op C) = mor2ZF C", "apply (cases C)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Obj Mor Dom Cod Id Comp mor2ZFa more.\n       C =\n       \\<lparr>Obj = Obj, Mor = Mor, Dom = Dom, Cod = Cod, Id = Id,\n          Comp = Comp, mor2ZF = mor2ZFa,\n          \\<dots> = more\\<rparr> \\<Longrightarrow>\n       mor2ZF (Op C) = mor2ZF C", "apply (simp add: OppositeCategory_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma mor_Op: \"mor\\<^bsub>Op C\\<^esub> = mor\\<^bsub>C\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mor\\<^bsub>Op C\\<^esub> = mor\\<^bsub>C\\<^esub>", "by (simp add: OppositeCategory_def)"], ["", "lemma obj_Op: \"obj\\<^bsub>Op C\\<^esub> = obj\\<^bsub>C\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. obj\\<^bsub>Op C\\<^esub> = obj\\<^bsub>C\\<^esub>", "by (simp add: OppositeCategory_def)"], ["", "lemma ZF2mor_Op: \"ZF2mor (Op C) f = ZF2mor C f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z2m\\<^bsub>Op C\\<^esub>f = z2m\\<^bsub>C\\<^esub>f", "by (simp add: ZF2mor_def mor2ZF_Op mor_Op)"], ["", "lemma mapsTo_Op: \"f maps\\<^bsub>Op C\\<^esub> Y to X = f maps\\<^bsub>C\\<^esub> X to Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f maps\\<^bsub>Op C\\<^esub> Y to X = f maps\\<^bsub>C\\<^esub> X to Y", "by (auto simp add: OppositeCategory_def mor_Op MapsTo_def)"], ["", "lemma HOMCollection_Op: \"HOMCollection (Op C) X Y = HOMCollection C Y X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HOMCollection (Op C) X Y = HOMCollection C Y X", "by (simp add: HOMCollection_def mapsTo_Op mor2ZF_Op)"], ["", "lemma Hom_Op: \"Hom\\<^bsub>Op C\\<^esub> X Y = Hom\\<^bsub>C\\<^esub> Y X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^bsub>Op C\\<^esub> X Y = Hom\\<^bsub>C\\<^esub> Y X", "by (simp add: HomSet_def HOMCollection_Op)"], ["", "lemma HomFtorContra': \"HomP\\<^bsub>C\\<^esub>[\\<midarrow>,X] = HomP\\<^bsub>Op C\\<^esub>[X,\\<midarrow>]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HomP\\<^bsub>C\\<^esub>[\\<midarrow>,X] =\n    HomP\\<^bsub>Op C\\<^esub>[X,\\<midarrow>]", "apply (simp add:  HomFtorContra'_def \n                      HomFtor'_def HomFtorMapContra_def HomFtorMap_def mor2ZF_Op ZF2mor_Op Hom_Op)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>g.\n        ZFfun (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g X)\n         (Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> g X)\n         (\\<lambda>f.\n             m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                                 (z2m\\<^bsub>C\\<^esub>f))) =\n    (\\<lambda>g.\n        ZFfun (Hom\\<^bsub>C\\<^esub> dom\\<^bsub>Op C\\<^esub> g X)\n         (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>Op C\\<^esub> g X)\n         (\\<lambda>f.\n             m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>f ;;\\<^bsub>Op C\\<^esub>\n                                 g))", "by (simp add: OppositeCategory_def)"], ["", "lemma HomFtorContra: \"Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X] = Hom\\<^bsub>Op C\\<^esub>[X,\\<midarrow>]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X] =\n    Hom\\<^bsub>Op C\\<^esub>[X,\\<midarrow>]", "by (auto simp add: HomFtorContra' HomFtorContra_def HomFtor_def)"], ["", "lemma HomFtorContraDom: \"CatDom (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) = Op C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CatDom (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) = Op C", "by(simp add: HomFtorContra_def HomFtorContra'_def MakeFtor_def)"], ["", "lemma HomFtorContraCod: \"CatCod (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) = SET\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CatCod (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) = SET", "by(simp add: HomFtorContra_def HomFtorContra'_def MakeFtor_def)"], ["", "lemma LSCategory_Op: assumes \"LSCategory C\" shows \"LSCategory (Op C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LSCategory (Op C)", "proof(auto simp only: LSCategory_def)"], ["proof (state)\ngoal (2 subgoals):\n 1. Category (Op C)\n 2. LSCategory_axioms (Op C)", "show \"Category (Op C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Category (Op C)", "using assms"], ["proof (prove)\nusing this:\n  LSCategory C\n\ngoal (1 subgoal):\n 1. Category (Op C)", "by (simp add: OpCatCat)"], ["proof (state)\nthis:\n  Category (Op C)\n\ngoal (1 subgoal):\n 1. LSCategory_axioms (Op C)", "show \"LSCategory_axioms (Op C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LSCategory_axioms (Op C)", "using assms"], ["proof (prove)\nusing this:\n  LSCategory C\n\ngoal (1 subgoal):\n 1. LSCategory_axioms (Op C)", "by (simp add: LSCategory_axioms_def mor_Op obj_Op mor2ZF_Op HOMCollection_Op \n                     LSCategory.mor2ZFInj LSCategory.HOMSetIsSet LSCategory.m2zExt)"], ["proof (state)\nthis:\n  LSCategory_axioms (Op C)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HomFtorContraFtor:\n  assumes \"LSCategory C\"\n  and     \"X \\<in> obj\\<^bsub>C\\<^esub>\"\n  shows   \"Ftor (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) : (Op C) \\<longrightarrow> SET\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ftor (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) : Op C \\<longrightarrow> SET", "proof(auto simp only: functor_abbrev_def)"], ["proof (state)\ngoal (3 subgoals):\n 1. Functor (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X])\n 2. CatDom (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) = Op C\n 3. CatCod (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) = SET", "show \"Functor (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Functor (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X])", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Functor (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X])", "have \"Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X] = Hom\\<^bsub>Op C\\<^esub>[X,\\<midarrow>]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X] =\n    Hom\\<^bsub>Op C\\<^esub>[X,\\<midarrow>]", "by (simp add: HomFtorContra)"], ["proof (state)\nthis:\n  Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X] =\n  Hom\\<^bsub>Op C\\<^esub>[X,\\<midarrow>]\n\ngoal (1 subgoal):\n 1. Functor (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X])", "moreover"], ["proof (state)\nthis:\n  Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X] =\n  Hom\\<^bsub>Op C\\<^esub>[X,\\<midarrow>]\n\ngoal (1 subgoal):\n 1. Functor (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X])", "have \"LSCategory (Op C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LSCategory (Op C)", "using assms"], ["proof (prove)\nusing this:\n  LSCategory C\n  X \\<in> obj\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. LSCategory (Op C)", "by (simp add: LSCategory_Op)"], ["proof (state)\nthis:\n  LSCategory (Op C)\n\ngoal (1 subgoal):\n 1. Functor (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X])", "moreover"], ["proof (state)\nthis:\n  LSCategory (Op C)\n\ngoal (1 subgoal):\n 1. Functor (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X])", "have \"X \\<in> obj\\<^bsub>Op C\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<in> obj\\<^bsub>Op C\\<^esub>", "using assms"], ["proof (prove)\nusing this:\n  LSCategory C\n  X \\<in> obj\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. X \\<in> obj\\<^bsub>Op C\\<^esub>", "by (simp add: OppositeCategory_def)"], ["proof (state)\nthis:\n  X \\<in> obj\\<^bsub>Op C\\<^esub>\n\ngoal (1 subgoal):\n 1. Functor (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X])", "ultimately"], ["proof (chain)\npicking this:\n  Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X] =\n  Hom\\<^bsub>Op C\\<^esub>[X,\\<midarrow>]\n  LSCategory (Op C)\n  X \\<in> obj\\<^bsub>Op C\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X] =\n  Hom\\<^bsub>Op C\\<^esub>[X,\\<midarrow>]\n  LSCategory (Op C)\n  X \\<in> obj\\<^bsub>Op C\\<^esub>\n\ngoal (1 subgoal):\n 1. Functor (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X])", "using assms"], ["proof (prove)\nusing this:\n  Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X] =\n  Hom\\<^bsub>Op C\\<^esub>[X,\\<midarrow>]\n  LSCategory (Op C)\n  X \\<in> obj\\<^bsub>Op C\\<^esub>\n  LSCategory C\n  X \\<in> obj\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. Functor (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X])", "by (simp add: HomFtorFtor)"], ["proof (state)\nthis:\n  Functor (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X])\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Functor (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X])\n\ngoal (2 subgoals):\n 1. CatDom (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) = Op C\n 2. CatCod (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) = SET", "show \"CatDom (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) = Op C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CatDom (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) = Op C", "by(simp add: HomFtorContra_def HomFtorContra'_def MakeFtor_def)"], ["proof (state)\nthis:\n  CatDom (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) = Op C\n\ngoal (1 subgoal):\n 1. CatCod (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) = SET", "show \"CatCod (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) = SET\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CatCod (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) = SET", "by(simp add: HomFtorContra_def HomFtorContra'_def MakeFtor_def)"], ["proof (state)\nthis:\n  CatCod (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) = SET\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HomFtorOpObj:\n  assumes \"LSCategory C\"\n  and     \"X \\<in> obj\\<^bsub>C\\<^esub>\" and \"Y \\<in> obj\\<^bsub>C\\<^esub>\"\n  shows   \"(Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) @@ Y = Hom\\<^bsub>C \\<^esub>Y X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) @@ Y = Hom\\<^bsub>C\\<^esub> Y X", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) @@ Y = Hom\\<^bsub>C\\<^esub> Y X", "have 1: \"X \\<in> Obj (Op C)\" and 2: \"Y \\<in> Obj (Op C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<in> obj\\<^bsub>Op C\\<^esub> &&& Y \\<in> obj\\<^bsub>Op C\\<^esub>", "using assms"], ["proof (prove)\nusing this:\n  LSCategory C\n  X \\<in> obj\\<^bsub>C\\<^esub>\n  Y \\<in> obj\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. X \\<in> obj\\<^bsub>Op C\\<^esub> &&& Y \\<in> obj\\<^bsub>Op C\\<^esub>", "by (simp add: OppositeCategory_def)+"], ["proof (state)\nthis:\n  X \\<in> obj\\<^bsub>Op C\\<^esub>\n  Y \\<in> obj\\<^bsub>Op C\\<^esub>\n\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) @@ Y = Hom\\<^bsub>C\\<^esub> Y X", "have \"(Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) @@ Y = (Hom\\<^bsub>Op C\\<^esub>[X,\\<midarrow>]) @@ Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) @@ Y =\n    (Hom\\<^bsub>Op C\\<^esub>[X,\\<midarrow>]) @@ Y", "by (simp add: HomFtorContra)"], ["proof (state)\nthis:\n  (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) @@ Y =\n  (Hom\\<^bsub>Op C\\<^esub>[X,\\<midarrow>]) @@ Y\n\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) @@ Y = Hom\\<^bsub>C\\<^esub> Y X", "also"], ["proof (state)\nthis:\n  (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) @@ Y =\n  (Hom\\<^bsub>Op C\\<^esub>[X,\\<midarrow>]) @@ Y\n\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) @@ Y = Hom\\<^bsub>C\\<^esub> Y X", "have \"... = (Hom\\<^bsub>Op C \\<^esub>X Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>Op C\\<^esub>[X,\\<midarrow>]) @@ Y =\n    Hom\\<^bsub>Op C\\<^esub> X Y", "using assms(1) 1 2"], ["proof (prove)\nusing this:\n  LSCategory C\n  X \\<in> obj\\<^bsub>Op C\\<^esub>\n  Y \\<in> obj\\<^bsub>Op C\\<^esub>\n\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>Op C\\<^esub>[X,\\<midarrow>]) @@ Y =\n    Hom\\<^bsub>Op C\\<^esub> X Y", "by (simp add: LSCategory_Op HomFtorObj)"], ["proof (state)\nthis:\n  (Hom\\<^bsub>Op C\\<^esub>[X,\\<midarrow>]) @@ Y =\n  Hom\\<^bsub>Op C\\<^esub> X Y\n\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) @@ Y = Hom\\<^bsub>C\\<^esub> Y X", "also"], ["proof (state)\nthis:\n  (Hom\\<^bsub>Op C\\<^esub>[X,\\<midarrow>]) @@ Y =\n  Hom\\<^bsub>Op C\\<^esub> X Y\n\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) @@ Y = Hom\\<^bsub>C\\<^esub> Y X", "have \"... = (Hom\\<^bsub>C \\<^esub>Y X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^bsub>Op C\\<^esub> X Y = Hom\\<^bsub>C\\<^esub> Y X", "by (simp add: Hom_Op)"], ["proof (state)\nthis:\n  Hom\\<^bsub>Op C\\<^esub> X Y = Hom\\<^bsub>C\\<^esub> Y X\n\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) @@ Y = Hom\\<^bsub>C\\<^esub> Y X", "finally"], ["proof (chain)\npicking this:\n  (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) @@ Y = Hom\\<^bsub>C\\<^esub> Y X", "show ?thesis"], ["proof (prove)\nusing this:\n  (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) @@ Y = Hom\\<^bsub>C\\<^esub> Y X\n\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) @@ Y = Hom\\<^bsub>C\\<^esub> Y X", "."], ["proof (state)\nthis:\n  (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) @@ Y = Hom\\<^bsub>C\\<^esub> Y X\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HomCHomOp: \"HomC\\<^bsub>C\\<^esub>[g,X] = Hom\\<^bsub>Op C\\<^esub>[X,g]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HomC\\<^bsub>C\\<^esub>[g,X] = Hom\\<^bsub>Op C\\<^esub>[X,g]", "apply (simp add:  HomFtorContra'_def \n                      HomFtor'_def HomFtorMapContra_def HomFtorMap_def mor2ZF_Op ZF2mor_Op Hom_Op)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFfun (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g X)\n     (Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> g X)\n     (\\<lambda>f.\n         m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                             (z2m\\<^bsub>C\\<^esub>f)) =\n    ZFfun (Hom\\<^bsub>C\\<^esub> dom\\<^bsub>Op C\\<^esub> g X)\n     (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>Op C\\<^esub> g X)\n     (\\<lambda>f.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>f ;;\\<^bsub>Op C\\<^esub> g)", "by (simp add: OppositeCategory_def)"], ["", "lemma HomFtorContraMapsTo:\n  assumes \"LSCategory C\" and \"X \\<in> obj\\<^bsub>C\\<^esub>\" and \"f \\<in> mor\\<^bsub>C\\<^esub>\" \n  shows \"HomC\\<^bsub>C\\<^esub>[f,X] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>C \\<^esub>(cod\\<^bsub>C\\<^esub> f) X  to Hom\\<^bsub>C \\<^esub>(dom\\<^bsub>C\\<^esub> f) X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HomC\\<^bsub>C\\<^esub>[f,X] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> f X to Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> f X", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. HomC\\<^bsub>C\\<^esub>[f,X] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> f X to Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> f X", "have \"LSCategory (Op C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LSCategory (Op C)", "using assms"], ["proof (prove)\nusing this:\n  LSCategory C\n  X \\<in> obj\\<^bsub>C\\<^esub>\n  f \\<in> mor\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. LSCategory (Op C)", "by(simp add: LSCategory_Op)"], ["proof (state)\nthis:\n  LSCategory (Op C)\n\ngoal (1 subgoal):\n 1. HomC\\<^bsub>C\\<^esub>[f,X] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> f X to Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> f X", "moreover"], ["proof (state)\nthis:\n  LSCategory (Op C)\n\ngoal (1 subgoal):\n 1. HomC\\<^bsub>C\\<^esub>[f,X] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> f X to Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> f X", "have \"X \\<in> Obj (Op C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<in> obj\\<^bsub>Op C\\<^esub>", "using assms"], ["proof (prove)\nusing this:\n  LSCategory C\n  X \\<in> obj\\<^bsub>C\\<^esub>\n  f \\<in> mor\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. X \\<in> obj\\<^bsub>Op C\\<^esub>", "by (simp add: OppositeCategory_def)"], ["proof (state)\nthis:\n  X \\<in> obj\\<^bsub>Op C\\<^esub>\n\ngoal (1 subgoal):\n 1. HomC\\<^bsub>C\\<^esub>[f,X] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> f X to Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> f X", "moreover"], ["proof (state)\nthis:\n  X \\<in> obj\\<^bsub>Op C\\<^esub>\n\ngoal (1 subgoal):\n 1. HomC\\<^bsub>C\\<^esub>[f,X] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> f X to Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> f X", "have \"f \\<in> Mor (Op C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> mor\\<^bsub>Op C\\<^esub>", "using assms"], ["proof (prove)\nusing this:\n  LSCategory C\n  X \\<in> obj\\<^bsub>C\\<^esub>\n  f \\<in> mor\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. f \\<in> mor\\<^bsub>Op C\\<^esub>", "by (simp add: OppositeCategory_def)"], ["proof (state)\nthis:\n  f \\<in> mor\\<^bsub>Op C\\<^esub>\n\ngoal (1 subgoal):\n 1. HomC\\<^bsub>C\\<^esub>[f,X] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> f X to Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> f X", "ultimately"], ["proof (chain)\npicking this:\n  LSCategory (Op C)\n  X \\<in> obj\\<^bsub>Op C\\<^esub>\n  f \\<in> mor\\<^bsub>Op C\\<^esub>", "have \"Hom\\<^bsub>Op C\\<^esub>[X,f] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>Op C \\<^esub>X (dom\\<^bsub>Op C\\<^esub> f) to Hom\\<^bsub>Op C \\<^esub>X (cod\\<^bsub>Op C\\<^esub> f)\""], ["proof (prove)\nusing this:\n  LSCategory (Op C)\n  X \\<in> obj\\<^bsub>Op C\\<^esub>\n  f \\<in> mor\\<^bsub>Op C\\<^esub>\n\ngoal (1 subgoal):\n 1. Hom\\<^bsub>Op C\\<^esub>[X,f] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>Op C\\<^esub> X dom\\<^bsub>Op C\\<^esub> f to Hom\\<^bsub>Op C\\<^esub> X cod\\<^bsub>Op C\\<^esub> f", "using assms"], ["proof (prove)\nusing this:\n  LSCategory (Op C)\n  X \\<in> obj\\<^bsub>Op C\\<^esub>\n  f \\<in> mor\\<^bsub>Op C\\<^esub>\n  LSCategory C\n  X \\<in> obj\\<^bsub>C\\<^esub>\n  f \\<in> mor\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. Hom\\<^bsub>Op C\\<^esub>[X,f] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>Op C\\<^esub> X dom\\<^bsub>Op C\\<^esub> f to Hom\\<^bsub>Op C\\<^esub> X cod\\<^bsub>Op C\\<^esub> f", "by (simp add: HomFtorMapsTo)"], ["proof (state)\nthis:\n  Hom\\<^bsub>Op C\\<^esub>[X,f] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>Op C\\<^esub> X dom\\<^bsub>Op C\\<^esub> f to Hom\\<^bsub>Op C\\<^esub> X cod\\<^bsub>Op C\\<^esub> f\n\ngoal (1 subgoal):\n 1. HomC\\<^bsub>C\\<^esub>[f,X] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> f X to Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> f X", "moreover"], ["proof (state)\nthis:\n  Hom\\<^bsub>Op C\\<^esub>[X,f] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>Op C\\<^esub> X dom\\<^bsub>Op C\\<^esub> f to Hom\\<^bsub>Op C\\<^esub> X cod\\<^bsub>Op C\\<^esub> f\n\ngoal (1 subgoal):\n 1. HomC\\<^bsub>C\\<^esub>[f,X] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> f X to Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> f X", "have \"HomC\\<^bsub>C\\<^esub>[f,X] = Hom\\<^bsub>Op C\\<^esub>[X,f]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HomC\\<^bsub>C\\<^esub>[f,X] = Hom\\<^bsub>Op C\\<^esub>[X,f]", "by (simp add: HomCHomOp)"], ["proof (state)\nthis:\n  HomC\\<^bsub>C\\<^esub>[f,X] = Hom\\<^bsub>Op C\\<^esub>[X,f]\n\ngoal (1 subgoal):\n 1. HomC\\<^bsub>C\\<^esub>[f,X] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> f X to Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> f X", "moreover"], ["proof (state)\nthis:\n  HomC\\<^bsub>C\\<^esub>[f,X] = Hom\\<^bsub>Op C\\<^esub>[X,f]\n\ngoal (1 subgoal):\n 1. HomC\\<^bsub>C\\<^esub>[f,X] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> f X to Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> f X", "have \"Hom\\<^bsub>Op C \\<^esub>X (dom\\<^bsub>Op C\\<^esub> f) = Hom\\<^bsub>C \\<^esub>(cod\\<^bsub>C\\<^esub> f) X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^bsub>Op C\\<^esub> X dom\\<^bsub>Op C\\<^esub> f =\n    Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> f X", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Hom\\<^bsub>Op C\\<^esub> X dom\\<^bsub>Op C\\<^esub> f =\n    Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> f X", "have \"Hom\\<^bsub>Op C \\<^esub>X (dom\\<^bsub>Op C\\<^esub> f) = Hom\\<^bsub>C\\<^esub> (dom\\<^bsub>Op C\\<^esub> f) X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^bsub>Op C\\<^esub> X dom\\<^bsub>Op C\\<^esub> f =\n    Hom\\<^bsub>C\\<^esub> dom\\<^bsub>Op C\\<^esub> f X", "by (simp add: Hom_Op)"], ["proof (state)\nthis:\n  Hom\\<^bsub>Op C\\<^esub> X dom\\<^bsub>Op C\\<^esub> f =\n  Hom\\<^bsub>C\\<^esub> dom\\<^bsub>Op C\\<^esub> f X\n\ngoal (1 subgoal):\n 1. Hom\\<^bsub>Op C\\<^esub> X dom\\<^bsub>Op C\\<^esub> f =\n    Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> f X", "thus ?thesis"], ["proof (prove)\nusing this:\n  Hom\\<^bsub>Op C\\<^esub> X dom\\<^bsub>Op C\\<^esub> f =\n  Hom\\<^bsub>C\\<^esub> dom\\<^bsub>Op C\\<^esub> f X\n\ngoal (1 subgoal):\n 1. Hom\\<^bsub>Op C\\<^esub> X dom\\<^bsub>Op C\\<^esub> f =\n    Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> f X", "by (simp add:  OppositeCategory_def)"], ["proof (state)\nthis:\n  Hom\\<^bsub>Op C\\<^esub> X dom\\<^bsub>Op C\\<^esub> f =\n  Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> f X\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Hom\\<^bsub>Op C\\<^esub> X dom\\<^bsub>Op C\\<^esub> f =\n  Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> f X\n\ngoal (1 subgoal):\n 1. HomC\\<^bsub>C\\<^esub>[f,X] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> f X to Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> f X", "moreover"], ["proof (state)\nthis:\n  Hom\\<^bsub>Op C\\<^esub> X dom\\<^bsub>Op C\\<^esub> f =\n  Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> f X\n\ngoal (1 subgoal):\n 1. HomC\\<^bsub>C\\<^esub>[f,X] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> f X to Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> f X", "have \"Hom\\<^bsub>Op C \\<^esub>X (cod\\<^bsub>Op C\\<^esub> f) = Hom\\<^bsub>C \\<^esub>(dom\\<^bsub>C\\<^esub> f) X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^bsub>Op C\\<^esub> X cod\\<^bsub>Op C\\<^esub> f =\n    Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> f X", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Hom\\<^bsub>Op C\\<^esub> X cod\\<^bsub>Op C\\<^esub> f =\n    Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> f X", "have \"Hom\\<^bsub>Op C \\<^esub>X (cod\\<^bsub>Op C\\<^esub> f) = Hom\\<^bsub>C\\<^esub> (cod\\<^bsub>Op C\\<^esub> f) X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^bsub>Op C\\<^esub> X cod\\<^bsub>Op C\\<^esub> f =\n    Hom\\<^bsub>C\\<^esub> cod\\<^bsub>Op C\\<^esub> f X", "by (simp add: Hom_Op)"], ["proof (state)\nthis:\n  Hom\\<^bsub>Op C\\<^esub> X cod\\<^bsub>Op C\\<^esub> f =\n  Hom\\<^bsub>C\\<^esub> cod\\<^bsub>Op C\\<^esub> f X\n\ngoal (1 subgoal):\n 1. Hom\\<^bsub>Op C\\<^esub> X cod\\<^bsub>Op C\\<^esub> f =\n    Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> f X", "thus ?thesis"], ["proof (prove)\nusing this:\n  Hom\\<^bsub>Op C\\<^esub> X cod\\<^bsub>Op C\\<^esub> f =\n  Hom\\<^bsub>C\\<^esub> cod\\<^bsub>Op C\\<^esub> f X\n\ngoal (1 subgoal):\n 1. Hom\\<^bsub>Op C\\<^esub> X cod\\<^bsub>Op C\\<^esub> f =\n    Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> f X", "by (simp add:  OppositeCategory_def)"], ["proof (state)\nthis:\n  Hom\\<^bsub>Op C\\<^esub> X cod\\<^bsub>Op C\\<^esub> f =\n  Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> f X\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Hom\\<^bsub>Op C\\<^esub> X cod\\<^bsub>Op C\\<^esub> f =\n  Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> f X\n\ngoal (1 subgoal):\n 1. HomC\\<^bsub>C\\<^esub>[f,X] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> f X to Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> f X", "ultimately"], ["proof (chain)\npicking this:\n  Hom\\<^bsub>Op C\\<^esub>[X,f] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>Op C\\<^esub> X dom\\<^bsub>Op C\\<^esub> f to Hom\\<^bsub>Op C\\<^esub> X cod\\<^bsub>Op C\\<^esub> f\n  HomC\\<^bsub>C\\<^esub>[f,X] = Hom\\<^bsub>Op C\\<^esub>[X,f]\n  Hom\\<^bsub>Op C\\<^esub> X dom\\<^bsub>Op C\\<^esub> f =\n  Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> f X\n  Hom\\<^bsub>Op C\\<^esub> X cod\\<^bsub>Op C\\<^esub> f =\n  Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> f X", "show ?thesis"], ["proof (prove)\nusing this:\n  Hom\\<^bsub>Op C\\<^esub>[X,f] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>Op C\\<^esub> X dom\\<^bsub>Op C\\<^esub> f to Hom\\<^bsub>Op C\\<^esub> X cod\\<^bsub>Op C\\<^esub> f\n  HomC\\<^bsub>C\\<^esub>[f,X] = Hom\\<^bsub>Op C\\<^esub>[X,f]\n  Hom\\<^bsub>Op C\\<^esub> X dom\\<^bsub>Op C\\<^esub> f =\n  Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> f X\n  Hom\\<^bsub>Op C\\<^esub> X cod\\<^bsub>Op C\\<^esub> f =\n  Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> f X\n\ngoal (1 subgoal):\n 1. HomC\\<^bsub>C\\<^esub>[f,X] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> f X to Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> f X", "by simp"], ["proof (state)\nthis:\n  HomC\\<^bsub>C\\<^esub>[f,X] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> f X to Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> f X\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HomFtorContraMor:\n  assumes \"LSCategory C\" and \"X \\<in> obj\\<^bsub>C\\<^esub>\" and \"f \\<in> mor\\<^bsub>C\\<^esub>\" \n  shows \"HomC\\<^bsub>C\\<^esub>[f,X] \\<in> Mor SET\" and \"dom\\<^bsub>SET\\<^esub> (HomC\\<^bsub>C\\<^esub>[f,X]) = Hom\\<^bsub>C \\<^esub>(cod\\<^bsub>C\\<^esub> f) X\" \n  and \"cod\\<^bsub>SET\\<^esub> (HomC\\<^bsub>C\\<^esub>[f,X]) = Hom\\<^bsub>C \\<^esub>(dom\\<^bsub>C\\<^esub> f) X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HomC\\<^bsub>C\\<^esub>[f,X] \\<in> mor\\<^bsub>SET\\<^esub> &&&\n    dom\\<^bsub>SET\\<^esub> (HomC\\<^bsub>C\\<^esub>[f,X]) =\n    Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> f X &&&\n    cod\\<^bsub>SET\\<^esub> (HomC\\<^bsub>C\\<^esub>[f,X]) =\n    Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> f X", "proof-"], ["proof (state)\ngoal (3 subgoals):\n 1. HomC\\<^bsub>C\\<^esub>[f,X] \\<in> mor\\<^bsub>SET\\<^esub>\n 2. dom\\<^bsub>SET\\<^esub> (HomC\\<^bsub>C\\<^esub>[f,X]) =\n    Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> f X\n 3. cod\\<^bsub>SET\\<^esub> (HomC\\<^bsub>C\\<^esub>[f,X]) =\n    Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> f X", "have \"HomC\\<^bsub>C\\<^esub>[f,X] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>C \\<^esub>(cod\\<^bsub>C\\<^esub> f) X  to Hom\\<^bsub>C \\<^esub>(dom\\<^bsub>C\\<^esub> f) X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HomC\\<^bsub>C\\<^esub>[f,X] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> f X to Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> f X", "using assms"], ["proof (prove)\nusing this:\n  LSCategory C\n  X \\<in> obj\\<^bsub>C\\<^esub>\n  f \\<in> mor\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. HomC\\<^bsub>C\\<^esub>[f,X] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> f X to Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> f X", "by (simp add: HomFtorContraMapsTo)"], ["proof (state)\nthis:\n  HomC\\<^bsub>C\\<^esub>[f,X] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> f X to Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> f X\n\ngoal (3 subgoals):\n 1. HomC\\<^bsub>C\\<^esub>[f,X] \\<in> mor\\<^bsub>SET\\<^esub>\n 2. dom\\<^bsub>SET\\<^esub> (HomC\\<^bsub>C\\<^esub>[f,X]) =\n    Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> f X\n 3. cod\\<^bsub>SET\\<^esub> (HomC\\<^bsub>C\\<^esub>[f,X]) =\n    Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> f X", "thus \"HomC\\<^bsub>C\\<^esub>[f,X] \\<in> Mor SET\" and \"dom\\<^bsub>SET\\<^esub> (HomC\\<^bsub>C\\<^esub>[f,X]) = Hom\\<^bsub>C \\<^esub>(cod\\<^bsub>C\\<^esub> f) X\" \n  and \"cod\\<^bsub>SET\\<^esub> (HomC\\<^bsub>C\\<^esub>[f,X]) = Hom\\<^bsub>C \\<^esub>(dom\\<^bsub>C\\<^esub> f) X\""], ["proof (prove)\nusing this:\n  HomC\\<^bsub>C\\<^esub>[f,X] maps\\<^bsub>SET\\<^esub> Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> f X to Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> f X\n\ngoal (1 subgoal):\n 1. HomC\\<^bsub>C\\<^esub>[f,X] \\<in> mor\\<^bsub>SET\\<^esub> &&&\n    dom\\<^bsub>SET\\<^esub> (HomC\\<^bsub>C\\<^esub>[f,X]) =\n    Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> f X &&&\n    cod\\<^bsub>SET\\<^esub> (HomC\\<^bsub>C\\<^esub>[f,X]) =\n    Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> f X", "by auto"], ["proof (state)\nthis:\n  HomC\\<^bsub>C\\<^esub>[f,X] \\<in> mor\\<^bsub>SET\\<^esub>\n  dom\\<^bsub>SET\\<^esub> (HomC\\<^bsub>C\\<^esub>[f,X]) =\n  Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> f X\n  cod\\<^bsub>SET\\<^esub> (HomC\\<^bsub>C\\<^esub>[f,X]) =\n  Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> f X\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HomContraMor:\n  assumes \"LSCategory C\" and \"f \\<in> Mor C\" \n  shows \"(Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) ## f = HomC\\<^bsub>C\\<^esub>[f,X]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[\\<midarrow>,X]) ## f = HomC\\<^bsub>C\\<^esub>[f,X]", "by(simp add: HomFtorContra_def HomFtorContra'_def MakeFtor_def assms OppositeCategory_def)"], ["", "(*This is used in the proof of the naturality of the Yoneda trans*)"], ["", "lemma HomCHom:\n  assumes \"LSCategory C\" and \"f \\<in> Mor C\" and \"g \\<in> Mor C\"\n  shows \"(HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) ;;\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f]) = (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) ;;\\<^bsub>SET\\<^esub> (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) ;;\\<^bsub>SET\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f]) =\n    (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) ;;\\<^bsub>SET\\<^esub>\n    (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) ;;\\<^bsub>SET\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f]) =\n    (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) ;;\\<^bsub>SET\\<^esub>\n    (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])", "have ObjDf: \"dom\\<^bsub>C\\<^esub> f \\<in> obj\\<^bsub>C\\<^esub>\" and ObjDg: \"dom\\<^bsub>C\\<^esub> g \\<in> obj\\<^bsub>C\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dom\\<^bsub>C\\<^esub> f \\<in> obj\\<^bsub>C\\<^esub> &&&\n    dom\\<^bsub>C\\<^esub> g \\<in> obj\\<^bsub>C\\<^esub>", "using assms"], ["proof (prove)\nusing this:\n  LSCategory C\n  f \\<in> mor\\<^bsub>C\\<^esub>\n  g \\<in> mor\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. dom\\<^bsub>C\\<^esub> f \\<in> obj\\<^bsub>C\\<^esub> &&&\n    dom\\<^bsub>C\\<^esub> g \\<in> obj\\<^bsub>C\\<^esub>", "by (simp add: Category.Cdom)+"], ["proof (state)\nthis:\n  dom\\<^bsub>C\\<^esub> f \\<in> obj\\<^bsub>C\\<^esub>\n  dom\\<^bsub>C\\<^esub> g \\<in> obj\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) ;;\\<^bsub>SET\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f]) =\n    (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) ;;\\<^bsub>SET\\<^esub>\n    (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])", "have ObjCg: \"cod\\<^bsub>C\\<^esub> g \\<in> obj\\<^bsub>C\\<^esub>\" and ObjCf: \"cod\\<^bsub>C\\<^esub> f \\<in> obj\\<^bsub>C\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cod\\<^bsub>C\\<^esub> g \\<in> obj\\<^bsub>C\\<^esub> &&&\n    cod\\<^bsub>C\\<^esub> f \\<in> obj\\<^bsub>C\\<^esub>", "using assms"], ["proof (prove)\nusing this:\n  LSCategory C\n  f \\<in> mor\\<^bsub>C\\<^esub>\n  g \\<in> mor\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. cod\\<^bsub>C\\<^esub> g \\<in> obj\\<^bsub>C\\<^esub> &&&\n    cod\\<^bsub>C\\<^esub> f \\<in> obj\\<^bsub>C\\<^esub>", "by (simp add: Category.Ccod)+"], ["proof (state)\nthis:\n  cod\\<^bsub>C\\<^esub> g \\<in> obj\\<^bsub>C\\<^esub>\n  cod\\<^bsub>C\\<^esub> f \\<in> obj\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) ;;\\<^bsub>SET\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f]) =\n    (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) ;;\\<^bsub>SET\\<^esub>\n    (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])", "have \"(HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) ;;\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f]) = (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) |o| (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) ;;\\<^bsub>SET\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f]) =\n    (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) |o|\n    (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f])", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) ;;\\<^bsub>SET\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f]) =\n    (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) |o|\n    (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f])", "have \"(HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) \\<approx>>\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f] \\<approx>>\\<^bsub>SET\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f])", "proof(rule CompDefinedI)"], ["proof (state)\ngoal (3 subgoals):\n 1. HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]\n    \\<in> mor\\<^bsub>SET\\<^esub>\n 2. Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f]\n    \\<in> mor\\<^bsub>SET\\<^esub>\n 3. cod\\<^bsub>SET\\<^esub> (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) =\n    dom\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f])", "show \"Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f] \\<in> Mor SET\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f]\n    \\<in> mor\\<^bsub>SET\\<^esub>", "using assms ObjDg"], ["proof (prove)\nusing this:\n  LSCategory C\n  f \\<in> mor\\<^bsub>C\\<^esub>\n  g \\<in> mor\\<^bsub>C\\<^esub>\n  dom\\<^bsub>C\\<^esub> g \\<in> obj\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f]\n    \\<in> mor\\<^bsub>SET\\<^esub>", "by (simp add: HomFtorMor)"], ["proof (state)\nthis:\n  Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f]\n  \\<in> mor\\<^bsub>SET\\<^esub>\n\ngoal (2 subgoals):\n 1. HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]\n    \\<in> mor\\<^bsub>SET\\<^esub>\n 2. cod\\<^bsub>SET\\<^esub> (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) =\n    dom\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f])", "show \"HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f] \\<in> Mor SET\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]\n    \\<in> mor\\<^bsub>SET\\<^esub>", "using assms ObjDf"], ["proof (prove)\nusing this:\n  LSCategory C\n  f \\<in> mor\\<^bsub>C\\<^esub>\n  g \\<in> mor\\<^bsub>C\\<^esub>\n  dom\\<^bsub>C\\<^esub> f \\<in> obj\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]\n    \\<in> mor\\<^bsub>SET\\<^esub>", "by (simp add: HomFtorContraMor)"], ["proof (state)\nthis:\n  HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]\n  \\<in> mor\\<^bsub>SET\\<^esub>\n\ngoal (1 subgoal):\n 1. cod\\<^bsub>SET\\<^esub> (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) =\n    dom\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f])", "show \"cod\\<^bsub>SET\\<^esub> (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) = dom\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cod\\<^bsub>SET\\<^esub> (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) =\n    dom\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f])", "using assms ObjDg ObjDf"], ["proof (prove)\nusing this:\n  LSCategory C\n  f \\<in> mor\\<^bsub>C\\<^esub>\n  g \\<in> mor\\<^bsub>C\\<^esub>\n  dom\\<^bsub>C\\<^esub> g \\<in> obj\\<^bsub>C\\<^esub>\n  dom\\<^bsub>C\\<^esub> f \\<in> obj\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. cod\\<^bsub>SET\\<^esub> (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) =\n    dom\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f])", "by (simp add: HomFtorMor HomFtorContraMor)"], ["proof (state)\nthis:\n  cod\\<^bsub>SET\\<^esub> (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) =\n  dom\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f])\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f] \\<approx>>\\<^bsub>SET\\<^esub>\n  (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f])\n\ngoal (1 subgoal):\n 1. (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) ;;\\<^bsub>SET\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f]) =\n    (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) |o|\n    (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f])", "thus ?thesis"], ["proof (prove)\nusing this:\n  HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f] \\<approx>>\\<^bsub>SET\\<^esub>\n  (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f])\n\ngoal (1 subgoal):\n 1. (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) ;;\\<^bsub>SET\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f]) =\n    (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) |o|\n    (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f])", "by(simp add: SET_def SET'_def MakeCatComp2)"], ["proof (state)\nthis:\n  (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) ;;\\<^bsub>SET\\<^esub>\n  (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f]) =\n  (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) |o|\n  (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f])\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) ;;\\<^bsub>SET\\<^esub>\n  (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f]) =\n  (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) |o|\n  (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f])\n\ngoal (1 subgoal):\n 1. (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) ;;\\<^bsub>SET\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f]) =\n    (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) ;;\\<^bsub>SET\\<^esub>\n    (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])", "also"], ["proof (state)\nthis:\n  (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) ;;\\<^bsub>SET\\<^esub>\n  (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f]) =\n  (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) |o|\n  (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f])\n\ngoal (1 subgoal):\n 1. (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) ;;\\<^bsub>SET\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f]) =\n    (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) ;;\\<^bsub>SET\\<^esub>\n    (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])", "have \"... = ZFfun (Hom\\<^bsub>C\\<^esub> (cod\\<^bsub>C\\<^esub> g) (dom\\<^bsub>C\\<^esub> f)) (Hom\\<^bsub>C\\<^esub> (dom\\<^bsub>C\\<^esub> g) (cod\\<^bsub>C\\<^esub> f)) \n              ((\\<lambda> h . m2z\\<^bsub>C\\<^esub> ((z2m\\<^bsub>C\\<^esub> h) ;;\\<^bsub>C\\<^esub> f)) o (\\<lambda> h . m2z\\<^bsub>C\\<^esub> (g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub> h))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) |o|\n    (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f]) =\n    ZFfun\n     (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f)\n     (Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> g cod\\<^bsub>C\\<^esub> f)\n     ((\\<lambda>h.\n          m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                              f) \\<circ>\n      (\\<lambda>h.\n          m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                              (z2m\\<^bsub>C\\<^esub>h)))", "proof(simp add: HomFtorMapContra_def HomFtorMap_def, rule ZFfunComp, rule allI, rule impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x |\\<in>|\n       (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f) \\<Longrightarrow>\n       m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                           (z2m\\<^bsub>C\\<^esub>x) |\\<in>|\n       (Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x |\\<in>|\n       (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f) \\<Longrightarrow>\n       m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                           (z2m\\<^bsub>C\\<^esub>x) |\\<in>|\n       (Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x |\\<in>|\n       (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f) \\<Longrightarrow>\n       m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                           (z2m\\<^bsub>C\\<^esub>x) |\\<in>|\n       (Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f)", "assume aa: \"x |\\<in>| (Hom\\<^bsub>C\\<^esub> (cod\\<^bsub>C\\<^esub> g) (dom\\<^bsub>C\\<^esub> f))\""], ["proof (state)\nthis:\n  x |\\<in>|\n  (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x |\\<in>|\n       (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f) \\<Longrightarrow>\n       m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                           (z2m\\<^bsub>C\\<^esub>x) |\\<in>|\n       (Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f)", "show \"(m2z\\<^bsub>C \\<^esub>(g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C \\<^esub>x))) |\\<in>| (Hom\\<^bsub>C\\<^esub> (dom\\<^bsub>C\\<^esub> g) (dom\\<^bsub>C\\<^esub> f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                        (z2m\\<^bsub>C\\<^esub>x) |\\<in>|\n    (Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f)", "proof(rule LSCategory.m2zz2m, simp_all add: assms(1) ObjDg ObjDf)"], ["proof (state)\ngoal (1 subgoal):\n 1. g ;;\\<^bsub>C\\<^esub>\n    (z2m\\<^bsub>C\\<^esub>x) maps\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> g to dom\\<^bsub>C\\<^esub> f", "have \"g maps\\<^bsub>C\\<^esub> (dom\\<^bsub>C\\<^esub> g) to (cod\\<^bsub>C\\<^esub> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g maps\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> g to cod\\<^bsub>C\\<^esub> g", "using assms"], ["proof (prove)\nusing this:\n  LSCategory C\n  f \\<in> mor\\<^bsub>C\\<^esub>\n  g \\<in> mor\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. g maps\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> g to cod\\<^bsub>C\\<^esub> g", "by auto"], ["proof (state)\nthis:\n  g maps\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> g to cod\\<^bsub>C\\<^esub> g\n\ngoal (1 subgoal):\n 1. g ;;\\<^bsub>C\\<^esub>\n    (z2m\\<^bsub>C\\<^esub>x) maps\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> g to dom\\<^bsub>C\\<^esub> f", "moreover"], ["proof (state)\nthis:\n  g maps\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> g to cod\\<^bsub>C\\<^esub> g\n\ngoal (1 subgoal):\n 1. g ;;\\<^bsub>C\\<^esub>\n    (z2m\\<^bsub>C\\<^esub>x) maps\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> g to dom\\<^bsub>C\\<^esub> f", "have \"(z2m\\<^bsub>C \\<^esub>x) maps\\<^bsub>C\\<^esub> (cod\\<^bsub>C\\<^esub> g) to (dom\\<^bsub>C\\<^esub> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z2m\\<^bsub>C\\<^esub>x maps\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g to dom\\<^bsub>C\\<^esub> f", "using aa ObjCg ObjDf assms(1)"], ["proof (prove)\nusing this:\n  x |\\<in>|\n  (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f)\n  cod\\<^bsub>C\\<^esub> g \\<in> obj\\<^bsub>C\\<^esub>\n  dom\\<^bsub>C\\<^esub> f \\<in> obj\\<^bsub>C\\<^esub>\n  LSCategory C\n\ngoal (1 subgoal):\n 1. z2m\\<^bsub>C\\<^esub>x maps\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g to dom\\<^bsub>C\\<^esub> f", "by (simp add: LSCategory.z2mm2z)"], ["proof (state)\nthis:\n  z2m\\<^bsub>C\\<^esub>x maps\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g to dom\\<^bsub>C\\<^esub> f\n\ngoal (1 subgoal):\n 1. g ;;\\<^bsub>C\\<^esub>\n    (z2m\\<^bsub>C\\<^esub>x) maps\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> g to dom\\<^bsub>C\\<^esub> f", "ultimately"], ["proof (chain)\npicking this:\n  g maps\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> g to cod\\<^bsub>C\\<^esub> g\n  z2m\\<^bsub>C\\<^esub>x maps\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g to dom\\<^bsub>C\\<^esub> f", "show \"g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C \\<^esub>x) maps\\<^bsub>C\\<^esub> (dom\\<^bsub>C\\<^esub> g) to (dom\\<^bsub>C\\<^esub> f)\""], ["proof (prove)\nusing this:\n  g maps\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> g to cod\\<^bsub>C\\<^esub> g\n  z2m\\<^bsub>C\\<^esub>x maps\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g to dom\\<^bsub>C\\<^esub> f\n\ngoal (1 subgoal):\n 1. g ;;\\<^bsub>C\\<^esub>\n    (z2m\\<^bsub>C\\<^esub>x) maps\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> g to dom\\<^bsub>C\\<^esub> f", "using assms(1)"], ["proof (prove)\nusing this:\n  g maps\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> g to cod\\<^bsub>C\\<^esub> g\n  z2m\\<^bsub>C\\<^esub>x maps\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g to dom\\<^bsub>C\\<^esub> f\n  LSCategory C\n\ngoal (1 subgoal):\n 1. g ;;\\<^bsub>C\\<^esub>\n    (z2m\\<^bsub>C\\<^esub>x) maps\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> g to dom\\<^bsub>C\\<^esub> f", "by (simp add: Category.Ccompt)"], ["proof (state)\nthis:\n  g ;;\\<^bsub>C\\<^esub>\n  (z2m\\<^bsub>C\\<^esub>x) maps\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> g to dom\\<^bsub>C\\<^esub> f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>x) |\\<in>|\n  (Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f)\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  ?x2 |\\<in>|\n  (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f) \\<Longrightarrow>\n  m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                      (z2m\\<^bsub>C\\<^esub>?x2) |\\<in>|\n  (Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) |o|\n  (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f]) =\n  ZFfun (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f)\n   (Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> g cod\\<^bsub>C\\<^esub> f)\n   ((\\<lambda>h.\n        m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                            f) \\<circ>\n    (\\<lambda>h.\n        m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h)))\n\ngoal (1 subgoal):\n 1. (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) ;;\\<^bsub>SET\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f]) =\n    (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) ;;\\<^bsub>SET\\<^esub>\n    (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])", "also"], ["proof (state)\nthis:\n  (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) |o|\n  (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f]) =\n  ZFfun (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f)\n   (Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> g cod\\<^bsub>C\\<^esub> f)\n   ((\\<lambda>h.\n        m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                            f) \\<circ>\n    (\\<lambda>h.\n        m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h)))\n\ngoal (1 subgoal):\n 1. (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) ;;\\<^bsub>SET\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f]) =\n    (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) ;;\\<^bsub>SET\\<^esub>\n    (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])", "have \"... = ZFfun (Hom\\<^bsub>C\\<^esub> (cod\\<^bsub>C\\<^esub> g) (dom\\<^bsub>C\\<^esub> f)) (Hom\\<^bsub>C\\<^esub> (dom\\<^bsub>C\\<^esub> g) (cod\\<^bsub>C\\<^esub> f)) \n              ((\\<lambda> h . m2z\\<^bsub>C\\<^esub> (g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub> h))) o (\\<lambda> h . m2z\\<^bsub>C\\<^esub> ((z2m\\<^bsub>C\\<^esub> h) ;;\\<^bsub>C\\<^esub> f)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFfun\n     (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f)\n     (Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> g cod\\<^bsub>C\\<^esub> f)\n     ((\\<lambda>h.\n          m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                              f) \\<circ>\n      (\\<lambda>h.\n          m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                              (z2m\\<^bsub>C\\<^esub>h))) =\n    ZFfun\n     (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f)\n     (Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> g cod\\<^bsub>C\\<^esub> f)\n     ((\\<lambda>h.\n          m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                              (z2m\\<^bsub>C\\<^esub>h)) \\<circ>\n      (\\<lambda>h.\n          m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f))", "proof(rule ZFfun_ext, rule allI, rule impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x |\\<in>|\n       (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f) \\<Longrightarrow>\n       ((\\<lambda>h.\n            m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                                f) \\<circ>\n        (\\<lambda>h.\n            m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                                (z2m\\<^bsub>C\\<^esub>h)))\n        x =\n       ((\\<lambda>h.\n            m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                                (z2m\\<^bsub>C\\<^esub>h)) \\<circ>\n        (\\<lambda>h.\n            m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                                f))\n        x", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x |\\<in>|\n       (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f) \\<Longrightarrow>\n       ((\\<lambda>h.\n            m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                                f) \\<circ>\n        (\\<lambda>h.\n            m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                                (z2m\\<^bsub>C\\<^esub>h)))\n        x =\n       ((\\<lambda>h.\n            m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                                (z2m\\<^bsub>C\\<^esub>h)) \\<circ>\n        (\\<lambda>h.\n            m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                                f))\n        x", "fix h"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x |\\<in>|\n       (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f) \\<Longrightarrow>\n       ((\\<lambda>h.\n            m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                                f) \\<circ>\n        (\\<lambda>h.\n            m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                                (z2m\\<^bsub>C\\<^esub>h)))\n        x =\n       ((\\<lambda>h.\n            m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                                (z2m\\<^bsub>C\\<^esub>h)) \\<circ>\n        (\\<lambda>h.\n            m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                                f))\n        x", "assume aa: \"h |\\<in>| (Hom\\<^bsub>C\\<^esub> (cod\\<^bsub>C\\<^esub> g) (dom\\<^bsub>C\\<^esub> f))\""], ["proof (state)\nthis:\n  h |\\<in>|\n  (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x |\\<in>|\n       (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f) \\<Longrightarrow>\n       ((\\<lambda>h.\n            m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                                f) \\<circ>\n        (\\<lambda>h.\n            m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                                (z2m\\<^bsub>C\\<^esub>h)))\n        x =\n       ((\\<lambda>h.\n            m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                                (z2m\\<^bsub>C\\<^esub>h)) \\<circ>\n        (\\<lambda>h.\n            m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                                f))\n        x", "show \"((\\<lambda> h . m2z\\<^bsub>C\\<^esub> ((z2m\\<^bsub>C\\<^esub> h) ;;\\<^bsub>C\\<^esub> f)) o (\\<lambda> h . m2z\\<^bsub>C\\<^esub> (g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub> h)))) h = \n        ((\\<lambda> h . m2z\\<^bsub>C\\<^esub> (g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub> h))) o (\\<lambda> h . m2z\\<^bsub>C\\<^esub> ((z2m\\<^bsub>C\\<^esub> h) ;;\\<^bsub>C\\<^esub> f))) h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                             f) \\<circ>\n     (\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h)))\n     h =\n    ((\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                             (z2m\\<^bsub>C\\<^esub>h)) \\<circ>\n     (\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f))\n     h", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. ((\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                             f) \\<circ>\n     (\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h)))\n     h =\n    ((\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                             (z2m\\<^bsub>C\\<^esub>h)) \\<circ>\n     (\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f))\n     h", "have MapsTo1: \"(z2m\\<^bsub>C\\<^esub> h) maps\\<^bsub>C\\<^esub> (cod\\<^bsub>C\\<^esub> g) to (dom\\<^bsub>C\\<^esub> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z2m\\<^bsub>C\\<^esub>h maps\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g to dom\\<^bsub>C\\<^esub> f", "using assms(1) ObjCg ObjDf aa"], ["proof (prove)\nusing this:\n  LSCategory C\n  cod\\<^bsub>C\\<^esub> g \\<in> obj\\<^bsub>C\\<^esub>\n  dom\\<^bsub>C\\<^esub> f \\<in> obj\\<^bsub>C\\<^esub>\n  h |\\<in>|\n  (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f)\n\ngoal (1 subgoal):\n 1. z2m\\<^bsub>C\\<^esub>h maps\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g to dom\\<^bsub>C\\<^esub> f", "by (simp add: LSCategory.z2mm2z)"], ["proof (state)\nthis:\n  z2m\\<^bsub>C\\<^esub>h maps\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g to dom\\<^bsub>C\\<^esub> f\n\ngoal (1 subgoal):\n 1. ((\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                             f) \\<circ>\n     (\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h)))\n     h =\n    ((\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                             (z2m\\<^bsub>C\\<^esub>h)) \\<circ>\n     (\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f))\n     h", "have CompDef1: \"(z2m\\<^bsub>C\\<^esub> h) \\<approx>>\\<^bsub>C\\<^esub> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z2m\\<^bsub>C\\<^esub>h \\<approx>>\\<^bsub>C\\<^esub> f", "proof(rule CompDefinedI)"], ["proof (state)\ngoal (3 subgoals):\n 1. z2m\\<^bsub>C\\<^esub>h \\<in> mor\\<^bsub>C\\<^esub>\n 2. f \\<in> mor\\<^bsub>C\\<^esub>\n 3. cod\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h) = dom\\<^bsub>C\\<^esub> f", "show \"f \\<in> mor\\<^bsub>C\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> mor\\<^bsub>C\\<^esub>", "using assms"], ["proof (prove)\nusing this:\n  LSCategory C\n  f \\<in> mor\\<^bsub>C\\<^esub>\n  g \\<in> mor\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. f \\<in> mor\\<^bsub>C\\<^esub>", "by simp"], ["proof (state)\nthis:\n  f \\<in> mor\\<^bsub>C\\<^esub>\n\ngoal (2 subgoals):\n 1. z2m\\<^bsub>C\\<^esub>h \\<in> mor\\<^bsub>C\\<^esub>\n 2. cod\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h) = dom\\<^bsub>C\\<^esub> f", "show \"(z2m\\<^bsub>C\\<^esub> h) \\<in> mor\\<^bsub>C\\<^esub>\" and \"cod\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub> h) = dom\\<^bsub>C\\<^esub> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z2m\\<^bsub>C\\<^esub>h \\<in> mor\\<^bsub>C\\<^esub> &&&\n    cod\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h) = dom\\<^bsub>C\\<^esub> f", "using MapsTo1"], ["proof (prove)\nusing this:\n  z2m\\<^bsub>C\\<^esub>h maps\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g to dom\\<^bsub>C\\<^esub> f\n\ngoal (1 subgoal):\n 1. z2m\\<^bsub>C\\<^esub>h \\<in> mor\\<^bsub>C\\<^esub> &&&\n    cod\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h) = dom\\<^bsub>C\\<^esub> f", "by auto"], ["proof (state)\nthis:\n  z2m\\<^bsub>C\\<^esub>h \\<in> mor\\<^bsub>C\\<^esub>\n  cod\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h) = dom\\<^bsub>C\\<^esub> f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z2m\\<^bsub>C\\<^esub>h \\<approx>>\\<^bsub>C\\<^esub> f\n\ngoal (1 subgoal):\n 1. ((\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                             f) \\<circ>\n     (\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h)))\n     h =\n    ((\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                             (z2m\\<^bsub>C\\<^esub>h)) \\<circ>\n     (\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f))\n     h", "have CompDef2: \"g \\<approx>>\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub> h)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<approx>>\\<^bsub>C\\<^esub> z2m\\<^bsub>C\\<^esub>h", "proof(rule CompDefinedI)"], ["proof (state)\ngoal (3 subgoals):\n 1. g \\<in> mor\\<^bsub>C\\<^esub>\n 2. z2m\\<^bsub>C\\<^esub>h \\<in> mor\\<^bsub>C\\<^esub>\n 3. cod\\<^bsub>C\\<^esub> g = dom\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h)", "show \"g \\<in> mor\\<^bsub>C\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<in> mor\\<^bsub>C\\<^esub>", "using assms"], ["proof (prove)\nusing this:\n  LSCategory C\n  f \\<in> mor\\<^bsub>C\\<^esub>\n  g \\<in> mor\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. g \\<in> mor\\<^bsub>C\\<^esub>", "by simp"], ["proof (state)\nthis:\n  g \\<in> mor\\<^bsub>C\\<^esub>\n\ngoal (2 subgoals):\n 1. z2m\\<^bsub>C\\<^esub>h \\<in> mor\\<^bsub>C\\<^esub>\n 2. cod\\<^bsub>C\\<^esub> g = dom\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h)", "thus \"(z2m\\<^bsub>C\\<^esub> h) \\<in> mor\\<^bsub>C\\<^esub>\" and \"cod\\<^bsub>C\\<^esub> g = dom\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub> h)\""], ["proof (prove)\nusing this:\n  g \\<in> mor\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. z2m\\<^bsub>C\\<^esub>h \\<in> mor\\<^bsub>C\\<^esub> &&&\n    cod\\<^bsub>C\\<^esub> g = dom\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h)", "using MapsTo1"], ["proof (prove)\nusing this:\n  g \\<in> mor\\<^bsub>C\\<^esub>\n  z2m\\<^bsub>C\\<^esub>h maps\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g to dom\\<^bsub>C\\<^esub> f\n\ngoal (1 subgoal):\n 1. z2m\\<^bsub>C\\<^esub>h \\<in> mor\\<^bsub>C\\<^esub> &&&\n    cod\\<^bsub>C\\<^esub> g = dom\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h)", "by auto"], ["proof (state)\nthis:\n  z2m\\<^bsub>C\\<^esub>h \\<in> mor\\<^bsub>C\\<^esub>\n  cod\\<^bsub>C\\<^esub> g = dom\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  g \\<approx>>\\<^bsub>C\\<^esub> z2m\\<^bsub>C\\<^esub>h\n\ngoal (1 subgoal):\n 1. ((\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                             f) \\<circ>\n     (\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h)))\n     h =\n    ((\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                             (z2m\\<^bsub>C\\<^esub>h)) \\<circ>\n     (\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f))\n     h", "have c1: \"(z2m\\<^bsub>C\\<^esub> h) ;;\\<^bsub>C\\<^esub> f \\<in> Mor C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f \\<in> mor\\<^bsub>C\\<^esub>", "using assms CompDef1"], ["proof (prove)\nusing this:\n  LSCategory C\n  f \\<in> mor\\<^bsub>C\\<^esub>\n  g \\<in> mor\\<^bsub>C\\<^esub>\n  z2m\\<^bsub>C\\<^esub>h \\<approx>>\\<^bsub>C\\<^esub> f\n\ngoal (1 subgoal):\n 1. z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f \\<in> mor\\<^bsub>C\\<^esub>", "by (simp add: Category.MapsToMorDomCod)"], ["proof (state)\nthis:\n  z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f \\<in> mor\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. ((\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                             f) \\<circ>\n     (\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h)))\n     h =\n    ((\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                             (z2m\\<^bsub>C\\<^esub>h)) \\<circ>\n     (\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f))\n     h", "have c2: \"g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub> h) \\<in> Mor C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h) \\<in> mor\\<^bsub>C\\<^esub>", "using assms CompDef2"], ["proof (prove)\nusing this:\n  LSCategory C\n  f \\<in> mor\\<^bsub>C\\<^esub>\n  g \\<in> mor\\<^bsub>C\\<^esub>\n  g \\<approx>>\\<^bsub>C\\<^esub> z2m\\<^bsub>C\\<^esub>h\n\ngoal (1 subgoal):\n 1. g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h) \\<in> mor\\<^bsub>C\\<^esub>", "by (simp add: Category.MapsToMorDomCod)"], ["proof (state)\nthis:\n  g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h) \\<in> mor\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. ((\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                             f) \\<circ>\n     (\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h)))\n     h =\n    ((\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                             (z2m\\<^bsub>C\\<^esub>h)) \\<circ>\n     (\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f))\n     h", "have \"g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub> (m2z\\<^bsub>C\\<^esub> ((z2m\\<^bsub>C\\<^esub> h) ;;\\<^bsub>C\\<^esub> f))) = g ;;\\<^bsub>C\\<^esub> ((z2m\\<^bsub>C\\<^esub> h) ;;\\<^bsub>C\\<^esub> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g ;;\\<^bsub>C\\<^esub>\n    (z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n       f) =\n    g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f)", "using assms(1) c1"], ["proof (prove)\nusing this:\n  LSCategory C\n  z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f \\<in> mor\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. g ;;\\<^bsub>C\\<^esub>\n    (z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n       f) =\n    g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f)", "by (simp add: LSCategory.m2zz2mInv)"], ["proof (state)\nthis:\n  g ;;\\<^bsub>C\\<^esub>\n  (z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n     f) =\n  g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                             f) \\<circ>\n     (\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h)))\n     h =\n    ((\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                             (z2m\\<^bsub>C\\<^esub>h)) \\<circ>\n     (\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f))\n     h", "also"], ["proof (state)\nthis:\n  g ;;\\<^bsub>C\\<^esub>\n  (z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n     f) =\n  g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                             f) \\<circ>\n     (\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h)))\n     h =\n    ((\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                             (z2m\\<^bsub>C\\<^esub>h)) \\<circ>\n     (\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f))\n     h", "have \"... = (g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub> h)) ;;\\<^bsub>C\\<^esub> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f) =\n    g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h) ;;\\<^bsub>C\\<^esub> f", "using CompDef1 CompDef2 assms"], ["proof (prove)\nusing this:\n  z2m\\<^bsub>C\\<^esub>h \\<approx>>\\<^bsub>C\\<^esub> f\n  g \\<approx>>\\<^bsub>C\\<^esub> z2m\\<^bsub>C\\<^esub>h\n  LSCategory C\n  f \\<in> mor\\<^bsub>C\\<^esub>\n  g \\<in> mor\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f) =\n    g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h) ;;\\<^bsub>C\\<^esub> f", "by (simp add: Category.Cassoc)"], ["proof (state)\nthis:\n  g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f) =\n  g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h) ;;\\<^bsub>C\\<^esub> f\n\ngoal (1 subgoal):\n 1. ((\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                             f) \\<circ>\n     (\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h)))\n     h =\n    ((\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                             (z2m\\<^bsub>C\\<^esub>h)) \\<circ>\n     (\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f))\n     h", "also"], ["proof (state)\nthis:\n  g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f) =\n  g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h) ;;\\<^bsub>C\\<^esub> f\n\ngoal (1 subgoal):\n 1. ((\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                             f) \\<circ>\n     (\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h)))\n     h =\n    ((\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                             (z2m\\<^bsub>C\\<^esub>h)) \\<circ>\n     (\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f))\n     h", "have \"... = (z2m\\<^bsub>C\\<^esub> (m2z\\<^bsub>C\\<^esub> (g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub> h)))) ;;\\<^bsub>C\\<^esub> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h) ;;\\<^bsub>C\\<^esub> f =\n    z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n      (z2m\\<^bsub>C\\<^esub>h) ;;\\<^bsub>C\\<^esub>\n    f", "using assms(1) c2"], ["proof (prove)\nusing this:\n  LSCategory C\n  g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h) \\<in> mor\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h) ;;\\<^bsub>C\\<^esub> f =\n    z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n      (z2m\\<^bsub>C\\<^esub>h) ;;\\<^bsub>C\\<^esub>\n    f", "by (simp add: LSCategory.m2zz2mInv)"], ["proof (state)\nthis:\n  g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h) ;;\\<^bsub>C\\<^esub> f =\n  z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n    (z2m\\<^bsub>C\\<^esub>h) ;;\\<^bsub>C\\<^esub>\n  f\n\ngoal (1 subgoal):\n 1. ((\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                             f) \\<circ>\n     (\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h)))\n     h =\n    ((\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                             (z2m\\<^bsub>C\\<^esub>h)) \\<circ>\n     (\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f))\n     h", "finally"], ["proof (chain)\npicking this:\n  g ;;\\<^bsub>C\\<^esub>\n  (z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n     f) =\n  z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n    (z2m\\<^bsub>C\\<^esub>h) ;;\\<^bsub>C\\<^esub>\n  f", "have \"g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub> (m2z\\<^bsub>C\\<^esub> ((z2m\\<^bsub>C\\<^esub> h) ;;\\<^bsub>C\\<^esub> f))) = (z2m\\<^bsub>C\\<^esub> (m2z\\<^bsub>C\\<^esub> (g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub> h)))) ;;\\<^bsub>C\\<^esub> f\""], ["proof (prove)\nusing this:\n  g ;;\\<^bsub>C\\<^esub>\n  (z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n     f) =\n  z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n    (z2m\\<^bsub>C\\<^esub>h) ;;\\<^bsub>C\\<^esub>\n  f\n\ngoal (1 subgoal):\n 1. g ;;\\<^bsub>C\\<^esub>\n    (z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n       f) =\n    z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n      (z2m\\<^bsub>C\\<^esub>h) ;;\\<^bsub>C\\<^esub>\n    f", "."], ["proof (state)\nthis:\n  g ;;\\<^bsub>C\\<^esub>\n  (z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n     f) =\n  z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n    (z2m\\<^bsub>C\\<^esub>h) ;;\\<^bsub>C\\<^esub>\n  f\n\ngoal (1 subgoal):\n 1. ((\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                             f) \\<circ>\n     (\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h)))\n     h =\n    ((\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                             (z2m\\<^bsub>C\\<^esub>h)) \\<circ>\n     (\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f))\n     h", "thus ?thesis"], ["proof (prove)\nusing this:\n  g ;;\\<^bsub>C\\<^esub>\n  (z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n     f) =\n  z2m\\<^bsub>C\\<^esub>m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n    (z2m\\<^bsub>C\\<^esub>h) ;;\\<^bsub>C\\<^esub>\n  f\n\ngoal (1 subgoal):\n 1. ((\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                             f) \\<circ>\n     (\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h)))\n     h =\n    ((\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                             (z2m\\<^bsub>C\\<^esub>h)) \\<circ>\n     (\\<lambda>h.\n         m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f))\n     h", "by simp"], ["proof (state)\nthis:\n  ((\\<lambda>h.\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                           f) \\<circ>\n   (\\<lambda>h.\n       m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h)))\n   h =\n  ((\\<lambda>h.\n       m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                           (z2m\\<^bsub>C\\<^esub>h)) \\<circ>\n   (\\<lambda>h.\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f))\n   h\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ((\\<lambda>h.\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                           f) \\<circ>\n   (\\<lambda>h.\n       m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h)))\n   h =\n  ((\\<lambda>h.\n       m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                           (z2m\\<^bsub>C\\<^esub>h)) \\<circ>\n   (\\<lambda>h.\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f))\n   h\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  ?h2 |\\<in>|\n  (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f) \\<Longrightarrow>\n  ((\\<lambda>h.\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                           f) \\<circ>\n   (\\<lambda>h.\n       m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub> (z2m\\<^bsub>C\\<^esub>h)))\n   ?h2 =\n  ((\\<lambda>h.\n       m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                           (z2m\\<^bsub>C\\<^esub>h)) \\<circ>\n   (\\<lambda>h.\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f))\n   ?h2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ZFfun (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f)\n   (Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> g cod\\<^bsub>C\\<^esub> f)\n   ((\\<lambda>h.\n        m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                            f) \\<circ>\n    (\\<lambda>h.\n        m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                            (z2m\\<^bsub>C\\<^esub>h))) =\n  ZFfun (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f)\n   (Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> g cod\\<^bsub>C\\<^esub> f)\n   ((\\<lambda>h.\n        m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                            (z2m\\<^bsub>C\\<^esub>h)) \\<circ>\n    (\\<lambda>h.\n        m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f))\n\ngoal (1 subgoal):\n 1. (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) ;;\\<^bsub>SET\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f]) =\n    (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) ;;\\<^bsub>SET\\<^esub>\n    (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])", "also"], ["proof (state)\nthis:\n  ZFfun (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f)\n   (Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> g cod\\<^bsub>C\\<^esub> f)\n   ((\\<lambda>h.\n        m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                            f) \\<circ>\n    (\\<lambda>h.\n        m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                            (z2m\\<^bsub>C\\<^esub>h))) =\n  ZFfun (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f)\n   (Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> g cod\\<^bsub>C\\<^esub> f)\n   ((\\<lambda>h.\n        m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                            (z2m\\<^bsub>C\\<^esub>h)) \\<circ>\n    (\\<lambda>h.\n        m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f))\n\ngoal (1 subgoal):\n 1. (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) ;;\\<^bsub>SET\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f]) =\n    (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) ;;\\<^bsub>SET\\<^esub>\n    (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])", "have \"... = (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) |o| (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFfun\n     (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f)\n     (Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> g cod\\<^bsub>C\\<^esub> f)\n     ((\\<lambda>h.\n          m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                              (z2m\\<^bsub>C\\<^esub>h)) \\<circ>\n      (\\<lambda>h.\n          m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub>\n                              f)) =\n    (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) |o|\n    (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])", "proof(simp add: HomFtorMapContra_def HomFtorMap_def, rule ZFfunComp[THEN sym], rule allI, rule impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x |\\<in>|\n       (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f) \\<Longrightarrow>\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub>\n                           f |\\<in>|\n       (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g cod\\<^bsub>C\\<^esub> f)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x |\\<in>|\n       (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f) \\<Longrightarrow>\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub>\n                           f |\\<in>|\n       (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g cod\\<^bsub>C\\<^esub> f)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x |\\<in>|\n       (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f) \\<Longrightarrow>\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub>\n                           f |\\<in>|\n       (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g cod\\<^bsub>C\\<^esub> f)", "assume aa: \"x |\\<in>| (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f)\""], ["proof (state)\nthis:\n  x |\\<in>|\n  (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x |\\<in>|\n       (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f) \\<Longrightarrow>\n       m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub>\n                           f |\\<in>|\n       (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g cod\\<^bsub>C\\<^esub> f)", "show \"m2z\\<^bsub>C \\<^esub>((z2m\\<^bsub>C \\<^esub>x) ;;\\<^bsub>C\\<^esub> f) |\\<in>| (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g cod\\<^bsub>C\\<^esub> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub> f |\\<in>|\n    (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g cod\\<^bsub>C\\<^esub> f)", "proof(rule LSCategory.m2zz2m, simp_all add: assms(1) ObjCg ObjCf)"], ["proof (state)\ngoal (1 subgoal):\n 1. z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub>\n    f maps\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g to cod\\<^bsub>C\\<^esub> f", "have \"f maps\\<^bsub>C\\<^esub> (dom\\<^bsub>C\\<^esub> f) to (cod\\<^bsub>C\\<^esub> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f maps\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> f to cod\\<^bsub>C\\<^esub> f", "using assms"], ["proof (prove)\nusing this:\n  LSCategory C\n  f \\<in> mor\\<^bsub>C\\<^esub>\n  g \\<in> mor\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. f maps\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> f to cod\\<^bsub>C\\<^esub> f", "by auto"], ["proof (state)\nthis:\n  f maps\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> f to cod\\<^bsub>C\\<^esub> f\n\ngoal (1 subgoal):\n 1. z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub>\n    f maps\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g to cod\\<^bsub>C\\<^esub> f", "moreover"], ["proof (state)\nthis:\n  f maps\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> f to cod\\<^bsub>C\\<^esub> f\n\ngoal (1 subgoal):\n 1. z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub>\n    f maps\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g to cod\\<^bsub>C\\<^esub> f", "have \"(z2m\\<^bsub>C \\<^esub>x) maps\\<^bsub>C\\<^esub> (cod\\<^bsub>C\\<^esub> g) to (dom\\<^bsub>C\\<^esub> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z2m\\<^bsub>C\\<^esub>x maps\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g to dom\\<^bsub>C\\<^esub> f", "using aa ObjCg ObjDf assms(1)"], ["proof (prove)\nusing this:\n  x |\\<in>|\n  (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f)\n  cod\\<^bsub>C\\<^esub> g \\<in> obj\\<^bsub>C\\<^esub>\n  dom\\<^bsub>C\\<^esub> f \\<in> obj\\<^bsub>C\\<^esub>\n  LSCategory C\n\ngoal (1 subgoal):\n 1. z2m\\<^bsub>C\\<^esub>x maps\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g to dom\\<^bsub>C\\<^esub> f", "by (simp add: LSCategory.z2mm2z)"], ["proof (state)\nthis:\n  z2m\\<^bsub>C\\<^esub>x maps\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g to dom\\<^bsub>C\\<^esub> f\n\ngoal (1 subgoal):\n 1. z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub>\n    f maps\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g to cod\\<^bsub>C\\<^esub> f", "ultimately"], ["proof (chain)\npicking this:\n  f maps\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> f to cod\\<^bsub>C\\<^esub> f\n  z2m\\<^bsub>C\\<^esub>x maps\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g to dom\\<^bsub>C\\<^esub> f", "show \"(z2m\\<^bsub>C \\<^esub>x) ;;\\<^bsub>C\\<^esub> f maps\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g to cod\\<^bsub>C\\<^esub> f\""], ["proof (prove)\nusing this:\n  f maps\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> f to cod\\<^bsub>C\\<^esub> f\n  z2m\\<^bsub>C\\<^esub>x maps\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g to dom\\<^bsub>C\\<^esub> f\n\ngoal (1 subgoal):\n 1. z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub>\n    f maps\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g to cod\\<^bsub>C\\<^esub> f", "using assms(1)"], ["proof (prove)\nusing this:\n  f maps\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> f to cod\\<^bsub>C\\<^esub> f\n  z2m\\<^bsub>C\\<^esub>x maps\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g to dom\\<^bsub>C\\<^esub> f\n  LSCategory C\n\ngoal (1 subgoal):\n 1. z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub>\n    f maps\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g to cod\\<^bsub>C\\<^esub> f", "by (simp add: Category.Ccompt)"], ["proof (state)\nthis:\n  z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub>\n  f maps\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g to cod\\<^bsub>C\\<^esub> f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>x ;;\\<^bsub>C\\<^esub> f |\\<in>|\n  (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g cod\\<^bsub>C\\<^esub> f)\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  ?x2 |\\<in>|\n  (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f) \\<Longrightarrow>\n  m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>?x2 ;;\\<^bsub>C\\<^esub> f |\\<in>|\n  (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g cod\\<^bsub>C\\<^esub> f)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ZFfun (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f)\n   (Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> g cod\\<^bsub>C\\<^esub> f)\n   ((\\<lambda>h.\n        m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                            (z2m\\<^bsub>C\\<^esub>h)) \\<circ>\n    (\\<lambda>h.\n        m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f)) =\n  (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) |o|\n  (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])\n\ngoal (1 subgoal):\n 1. (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) ;;\\<^bsub>SET\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f]) =\n    (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) ;;\\<^bsub>SET\\<^esub>\n    (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])", "also"], ["proof (state)\nthis:\n  ZFfun (Hom\\<^bsub>C\\<^esub> cod\\<^bsub>C\\<^esub> g dom\\<^bsub>C\\<^esub> f)\n   (Hom\\<^bsub>C\\<^esub> dom\\<^bsub>C\\<^esub> g cod\\<^bsub>C\\<^esub> f)\n   ((\\<lambda>h.\n        m2z\\<^bsub>C\\<^esub>g ;;\\<^bsub>C\\<^esub>\n                            (z2m\\<^bsub>C\\<^esub>h)) \\<circ>\n    (\\<lambda>h.\n        m2z\\<^bsub>C\\<^esub>z2m\\<^bsub>C\\<^esub>h ;;\\<^bsub>C\\<^esub> f)) =\n  (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) |o|\n  (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])\n\ngoal (1 subgoal):\n 1. (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) ;;\\<^bsub>SET\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f]) =\n    (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) ;;\\<^bsub>SET\\<^esub>\n    (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])", "have \"... = (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) ;;\\<^bsub>SET\\<^esub> (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) |o|\n    (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f]) =\n    (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) ;;\\<^bsub>SET\\<^esub>\n    (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) |o|\n    (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f]) =\n    (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) ;;\\<^bsub>SET\\<^esub>\n    (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])", "have \"(Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) \\<approx>>\\<^bsub>SET\\<^esub> (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f] \\<approx>>\\<^bsub>SET\\<^esub>\n    (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])", "proof(rule CompDefinedI)"], ["proof (state)\ngoal (3 subgoals):\n 1. Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]\n    \\<in> mor\\<^bsub>SET\\<^esub>\n 2. HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f]\n    \\<in> mor\\<^bsub>SET\\<^esub>\n 3. cod\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) =\n    dom\\<^bsub>SET\\<^esub> (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])", "show \"Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f] \\<in> Mor SET\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]\n    \\<in> mor\\<^bsub>SET\\<^esub>", "using assms ObjCg"], ["proof (prove)\nusing this:\n  LSCategory C\n  f \\<in> mor\\<^bsub>C\\<^esub>\n  g \\<in> mor\\<^bsub>C\\<^esub>\n  cod\\<^bsub>C\\<^esub> g \\<in> obj\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]\n    \\<in> mor\\<^bsub>SET\\<^esub>", "by (simp add: HomFtorMor)"], ["proof (state)\nthis:\n  Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]\n  \\<in> mor\\<^bsub>SET\\<^esub>\n\ngoal (2 subgoals):\n 1. HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f]\n    \\<in> mor\\<^bsub>SET\\<^esub>\n 2. cod\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) =\n    dom\\<^bsub>SET\\<^esub> (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])", "show \"HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f] \\<in> Mor SET\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f]\n    \\<in> mor\\<^bsub>SET\\<^esub>", "using assms ObjCf"], ["proof (prove)\nusing this:\n  LSCategory C\n  f \\<in> mor\\<^bsub>C\\<^esub>\n  g \\<in> mor\\<^bsub>C\\<^esub>\n  cod\\<^bsub>C\\<^esub> f \\<in> obj\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f]\n    \\<in> mor\\<^bsub>SET\\<^esub>", "by (simp add: HomFtorContraMor)"], ["proof (state)\nthis:\n  HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f]\n  \\<in> mor\\<^bsub>SET\\<^esub>\n\ngoal (1 subgoal):\n 1. cod\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) =\n    dom\\<^bsub>SET\\<^esub> (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])", "show \"cod\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) = dom\\<^bsub>SET\\<^esub> (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cod\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) =\n    dom\\<^bsub>SET\\<^esub> (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])", "using assms ObjCg ObjCf"], ["proof (prove)\nusing this:\n  LSCategory C\n  f \\<in> mor\\<^bsub>C\\<^esub>\n  g \\<in> mor\\<^bsub>C\\<^esub>\n  cod\\<^bsub>C\\<^esub> g \\<in> obj\\<^bsub>C\\<^esub>\n  cod\\<^bsub>C\\<^esub> f \\<in> obj\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. cod\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) =\n    dom\\<^bsub>SET\\<^esub> (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])", "by (simp add: HomFtorMor HomFtorContraMor)"], ["proof (state)\nthis:\n  cod\\<^bsub>SET\\<^esub> (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) =\n  dom\\<^bsub>SET\\<^esub> (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f] \\<approx>>\\<^bsub>SET\\<^esub>\n  (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])\n\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) |o|\n    (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f]) =\n    (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) ;;\\<^bsub>SET\\<^esub>\n    (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])", "thus ?thesis"], ["proof (prove)\nusing this:\n  Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f] \\<approx>>\\<^bsub>SET\\<^esub>\n  (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])\n\ngoal (1 subgoal):\n 1. (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) |o|\n    (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f]) =\n    (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) ;;\\<^bsub>SET\\<^esub>\n    (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])", "by(simp add: SET_def SET'_def MakeCatComp2)"], ["proof (state)\nthis:\n  (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) |o|\n  (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f]) =\n  (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) ;;\\<^bsub>SET\\<^esub>\n  (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) |o|\n  (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f]) =\n  (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) ;;\\<^bsub>SET\\<^esub>\n  (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])\n\ngoal (1 subgoal):\n 1. (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) ;;\\<^bsub>SET\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f]) =\n    (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) ;;\\<^bsub>SET\\<^esub>\n    (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])", "finally"], ["proof (chain)\npicking this:\n  (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) ;;\\<^bsub>SET\\<^esub>\n  (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f]) =\n  (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) ;;\\<^bsub>SET\\<^esub>\n  (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])", "show ?thesis"], ["proof (prove)\nusing this:\n  (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) ;;\\<^bsub>SET\\<^esub>\n  (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f]) =\n  (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) ;;\\<^bsub>SET\\<^esub>\n  (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])\n\ngoal (1 subgoal):\n 1. (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) ;;\\<^bsub>SET\\<^esub>\n    (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f]) =\n    (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) ;;\\<^bsub>SET\\<^esub>\n    (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])", "."], ["proof (state)\nthis:\n  (HomC\\<^bsub>C\\<^esub>[g,dom\\<^bsub>C\\<^esub> f]) ;;\\<^bsub>SET\\<^esub>\n  (Hom\\<^bsub>C\\<^esub>[dom\\<^bsub>C\\<^esub> g,f]) =\n  (Hom\\<^bsub>C\\<^esub>[cod\\<^bsub>C\\<^esub> g,f]) ;;\\<^bsub>SET\\<^esub>\n  (HomC\\<^bsub>C\\<^esub>[g,cod\\<^bsub>C\\<^esub> f])\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}