{"file_name": "/home/qj213/afp-2021-10-22/thys/Category2/Functors.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Category2", "problem_names": ["lemma PreFunctorFunctor[simp]: \"Functor F \\<Longrightarrow> PreFunctor F\"", "lemmas functor_simps = PreFunctor.FunctorComp PreFunctor.FunctorId", "lemma functor_abbrevE[elim]: \"\\<lbrakk>Ftor F : A \\<longrightarrow> B ; \\<lbrakk>(Functor F) ; (CatDom F = A) ; (CatCod F = B)\\<rbrakk> \\<Longrightarrow> R\\<rbrakk> \\<Longrightarrow> R\"", "lemma functor_comp_def[elim]: \"\\<lbrakk>F \\<approx>>;;; G ; \\<lbrakk>Functor F ; Functor G ; CatDom G = CatCod F\\<rbrakk> \\<Longrightarrow> R\\<rbrakk> \\<Longrightarrow> R\"", "lemma (in Functor) FunctorMapsTo:\n  assumes \"f \\<in> mor\\<^bsub>CatDom F\\<^esub>\"\n  shows   \"F ## f maps\\<^bsub>CatCod F\\<^esub> (F @@ (dom\\<^bsub>CatDom F\\<^esub> f)) to (F @@ (cod\\<^bsub>CatDom F\\<^esub> f))\"", "lemma (in Functor) FunctorCodDom: \n  assumes \"f \\<in> mor\\<^bsub>CatDom F\\<^esub>\"\n  shows \"dom\\<^bsub>CatCod F\\<^esub>(F ## f) = F @@ (dom\\<^bsub>CatDom F\\<^esub> f)\" and \"cod\\<^bsub>CatCod F\\<^esub>(F ## f) = F @@ (cod\\<^bsub>CatDom F\\<^esub> f)\"", "lemma (in Functor) FunctorCompPreserved: \"f \\<in> mor\\<^bsub>CatDom F\\<^esub> \\<Longrightarrow> F ## f \\<in> mor\\<^bsub>CatCod F\\<^esub>\"", "lemma (in Functor) FunctorCompDef: \n  assumes \"f \\<approx>>\\<^bsub>CatDom F\\<^esub> g\" shows \"(F ## f) \\<approx>>\\<^bsub>CatCod F\\<^esub> (F ## g)\"", "lemma FunctorComp: \"\\<lbrakk>Ftor F : A \\<longrightarrow> B ; f \\<approx>>\\<^bsub>A\\<^esub> g\\<rbrakk> \\<Longrightarrow> F ## (f ;;\\<^bsub>A\\<^esub> g) = (F ## f) ;;\\<^bsub>B\\<^esub> (F ## g)\"", "lemma FunctorCompDef: \"\\<lbrakk>Ftor F : A \\<longrightarrow> B ; f \\<approx>>\\<^bsub>A\\<^esub> g\\<rbrakk> \\<Longrightarrow> (F ## f) \\<approx>>\\<^bsub>B\\<^esub> (F ## g)\"", "lemma FunctorMapsTo: \n  assumes \"Ftor F : A \\<longrightarrow> B\" and \"f maps\\<^bsub>A\\<^esub> X to Y\" \n  shows \"(F ## f) maps\\<^bsub>B\\<^esub> (F @@ X) to (F @@ Y)\"", "lemma (in PreFunctor) FunctorId2: \n  assumes \"X \\<in> obj\\<^bsub>CatDom F\\<^esub>\"\n  shows   \"F @@ X \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and> F ## (id\\<^bsub>CatDom F\\<^esub> X) = id\\<^bsub>CatCod F\\<^esub> (F @@ X)\"", "lemma FunctorId:\n  assumes \"Ftor F : C \\<longrightarrow> D\" and \"X \\<in> Obj C\"\n  shows \"F ## (Id C X) = Id D (F @@ X)\"", "lemma (in Functor) DomFunctor: \"f \\<in> mor\\<^bsub>CatDom F\\<^esub> \\<Longrightarrow> dom\\<^bsub>CatCod F\\<^esub> (F ## f) = F @@ (dom\\<^bsub>CatDom F\\<^esub> f)\"", "lemma (in Functor) CodFunctor: \"f \\<in> mor\\<^bsub>CatDom F\\<^esub> \\<Longrightarrow> cod\\<^bsub>CatCod F\\<^esub> (F ## f) = F @@ (cod\\<^bsub>CatDom F\\<^esub> f)\"", "lemma (in Functor) FunctorId3Dom:\n  assumes \"f \\<in> mor\\<^bsub>CatDom F\\<^esub>\"\n  shows   \"F ## (id\\<^bsub>CatDom F\\<^esub> (dom\\<^bsub>CatDom F\\<^esub> f)) = id\\<^bsub>CatCod F\\<^esub> (dom\\<^bsub>CatCod F\\<^esub> (F ## f))\"", "lemma (in Functor) FunctorId3Cod:\n  assumes \"f \\<in> mor\\<^bsub>CatDom F\\<^esub>\"\n  shows   \"F ## (id\\<^bsub>CatDom F\\<^esub> (cod\\<^bsub>CatDom F\\<^esub> f)) = id\\<^bsub>CatCod F\\<^esub> (cod\\<^bsub>CatCod F\\<^esub> (F ## f))\"", "lemma (in PreFunctor) FmToFo: \"\\<lbrakk>X \\<in> obj\\<^bsub>CatDom F\\<^esub> ; Y \\<in> obj\\<^bsub>CatCod F\\<^esub> ; F ## (id\\<^bsub>CatDom F\\<^esub> X) = id\\<^bsub>CatCod F\\<^esub> Y\\<rbrakk> \\<Longrightarrow> F @@ X = Y\"", "lemma MakeFtorPreFtor: \n  assumes \"PreFunctor F\" shows \"PreFunctor (MakeFtor F)\"", "lemma MakeFtorMor: \"f \\<in> mor\\<^bsub>CatDom F\\<^esub> \\<Longrightarrow> MakeFtor F ## f = F ## f\"", "lemma MakeFtorObj: \n  assumes \"PreFunctor F\" and \"X \\<in> obj\\<^bsub>CatDom F\\<^esub>\"\n  shows \"MakeFtor F @@ X = F @@ X\"", "lemma MakeFtor: assumes \"FunctorM F\" shows \"Functor (MakeFtor F)\"", "lemma IdFtor'PreFunctor: \"Category C \\<Longrightarrow> PreFunctor (FId' C)\"", "lemma IdFtor'Obj:\n  assumes \"Category C\" and \"X \\<in> obj\\<^bsub>CatDom (FId' C)\\<^esub>\"\n  shows \"(FId' C) @@ X = X\"", "lemma IdFtor'FtorM:  \n  assumes \"Category C\" shows \"FunctorM (FId' C)\"", "lemma IdFtorFtor:  \"Category C \\<Longrightarrow> Functor (FId C)\"", "lemma ConstFtor' : \n  assumes \"Category A\" \"Category B\" \"b \\<in> (Obj B)\"\n  shows   \"PreFunctor (ConstFunctor' A B b)\"\n  and     \"FunctorM (ConstFunctor' A B b)\"", "lemma ConstFtor: \n  assumes \"Category A\" \"Category B\" \"b \\<in> (Obj B)\"\n  shows \"Functor (ConstFunctor A B b)\"", "lemma UnitFtor: \n  assumes \"Category C\" \n  shows \"Functor(UnitFunctor C)\"", "lemma FtorCompComp':\n  assumes \"f \\<approx>>\\<^bsub>CatDom F\\<^esub> g\"\n  and \"F \\<approx>>;;; G\"\n  shows \"G ## (F ## (f ;;\\<^bsub>CatDom F\\<^esub> g)) = (G ## (F ## f)) ;;\\<^bsub>CatCod G\\<^esub> (G ## (F ## g))\"", "lemma FtorCompId: \n  assumes a: \"X \\<in> (Obj (CatDom F))\"\n  and \"F \\<approx>>;;; G\"\n  shows \"G ## (F ## (id\\<^bsub>CatDom F \\<^esub>X)) = id\\<^bsub>CatCod G\\<^esub>(G @@ (F @@ X)) \\<and> G @@ (F @@ X) \\<in> (Obj (CatCod G))\"", "lemma FtorCompIdDef: \n  assumes a: \"X \\<in> (Obj (CatDom F))\" and b: \"PreFunctor (F ;;: G)\" \n  and \"F \\<approx>>;;; G\"\n  shows \"(F ;;: G) @@ X = (G @@ (F @@ X))\"", "lemma FunctorCompMapsTo: \n  assumes \"f \\<in> mor\\<^bsub>CatDom (F ;;: G)\\<^esub>\" and \"F \\<approx>>;;; G\"\n  shows \"(G ## (F ## f)) maps\\<^bsub>CatCod G\\<^esub> (G @@ (F @@ (dom\\<^bsub>CatDom F\\<^esub> f))) to (G @@ (F @@ (cod\\<^bsub>CatDom F\\<^esub> f)))\"", "lemma FunctorCompMapsTo2:\n  assumes \"f \\<in> mor\\<^bsub>CatDom (F ;;: G)\\<^esub>\" \n  and \"F \\<approx>>;;; G\"\n  and \"PreFunctor (F ;;: G)\" \n  shows \"((F ;;: G) ## f) maps\\<^bsub>CatCod (F ;;: G)\\<^esub> ((F ;;: G) @@ (dom\\<^bsub>CatDom (F ;;: G)\\<^esub> f)) to \n                                               ((F ;;: G) @@ (cod\\<^bsub>CatDom (F ;;: G)\\<^esub> f))\"", "lemma FunctorCompMapsTo3:\n  assumes \"f maps\\<^bsub>CatDom (F ;;: G)\\<^esub> X to Y\"\n  and \"F \\<approx>>;;; G\"\n  and \"PreFunctor (F ;;: G)\" \n  shows \"F ;;: G ## f maps\\<^bsub>CatCod (F ;;: G)\\<^esub> F ;;: G @@ X to F ;;: G @@ Y\"", "lemma FtorCompPreFtor:\n  assumes \"F \\<approx>>;;; G\"\n  shows   \"PreFunctor (F ;;: G)\"", "lemma FtorCompM : \n  assumes \"F \\<approx>>;;; G\"\n  shows   \"FunctorM (F ;;: G)\"", "lemma FtorComp:   \n  assumes \"F \\<approx>>;;; G\"\n  shows   \"Functor (F ;;; G)\"", "lemma (in Functor) FunctorPreservesIso: \n  assumes     \"ciso\\<^bsub>CatDom F\\<^esub> k\"\n  shows       \"ciso\\<^bsub>CatCod F\\<^esub> (F ## k)\"", "lemma FunctorMFunctor[simp]: \"Functor F \\<Longrightarrow> FunctorM F\""], "translations": [["", "lemma PreFunctorFunctor[simp]: \"Functor F \\<Longrightarrow> PreFunctor F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Functor F \\<Longrightarrow> PreFunctor F", "by (simp add: Functor_def FunctorM_def)"], ["", "lemmas functor_simps = PreFunctor.FunctorComp PreFunctor.FunctorId"], ["", "definition \n  functor_abbrev (\"Ftor _ : _ \\<longrightarrow> _\" [81]) where\n  \"Ftor F : A \\<longrightarrow> B \\<equiv> (Functor F) \\<and> (CatDom F = A) \\<and> (CatCod F = B)\""], ["", "lemma functor_abbrevE[elim]: \"\\<lbrakk>Ftor F : A \\<longrightarrow> B ; \\<lbrakk>(Functor F) ; (CatDom F = A) ; (CatCod F = B)\\<rbrakk> \\<Longrightarrow> R\\<rbrakk> \\<Longrightarrow> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ftor F : A \\<longrightarrow> B;\n     \\<lbrakk>Functor F; CatDom F = A; CatCod F = B\\<rbrakk>\n     \\<Longrightarrow> R\\<rbrakk>\n    \\<Longrightarrow> R", "by (auto simp add: functor_abbrev_def)"], ["", "definition\n  functor_comp_def (\"_ \\<approx>>;;; _\" [81]) where\n  \"functor_comp_def F G \\<equiv> (Functor F) \\<and> (Functor G) \\<and> (CatDom G = CatCod F)\""], ["", "lemma functor_comp_def[elim]: \"\\<lbrakk>F \\<approx>>;;; G ; \\<lbrakk>Functor F ; Functor G ; CatDom G = CatCod F\\<rbrakk> \\<Longrightarrow> R\\<rbrakk> \\<Longrightarrow> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>F \\<approx>>;;; G;\n     \\<lbrakk>Functor F; Functor G; CatDom G = CatCod F\\<rbrakk>\n     \\<Longrightarrow> R\\<rbrakk>\n    \\<Longrightarrow> R", "by (auto simp add: functor_comp_def_def)"], ["", "lemma (in Functor) FunctorMapsTo:\n  assumes \"f \\<in> mor\\<^bsub>CatDom F\\<^esub>\"\n  shows   \"F ## f maps\\<^bsub>CatCod F\\<^esub> (F @@ (dom\\<^bsub>CatDom F\\<^esub> f)) to (F @@ (cod\\<^bsub>CatDom F\\<^esub> f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F ##\n    f maps\\<^bsub>CatCod F\\<^esub> F @@\n                                   dom\\<^bsub>CatDom F\\<^esub> f to F @@\n                              cod\\<^bsub>CatDom F\\<^esub> f", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. F ##\n    f maps\\<^bsub>CatCod F\\<^esub> F @@\n                                   dom\\<^bsub>CatDom F\\<^esub> f to F @@\n                              cod\\<^bsub>CatDom F\\<^esub> f", "have \"f maps\\<^bsub>CatDom F\\<^esub> (dom\\<^bsub>CatDom F\\<^esub> f) to (cod\\<^bsub>CatDom F\\<^esub> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f maps\\<^bsub>CatDom F\\<^esub> dom\\<^bsub>CatDom F\\<^esub> f to cod\\<^bsub>CatDom F\\<^esub> f", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> mor\\<^bsub>CatDom F\\<^esub>\n\ngoal (1 subgoal):\n 1. f maps\\<^bsub>CatDom F\\<^esub> dom\\<^bsub>CatDom F\\<^esub> f to cod\\<^bsub>CatDom F\\<^esub> f", "by auto"], ["proof (state)\nthis:\n  f maps\\<^bsub>CatDom F\\<^esub> dom\\<^bsub>CatDom F\\<^esub> f to cod\\<^bsub>CatDom F\\<^esub> f\n\ngoal (1 subgoal):\n 1. F ##\n    f maps\\<^bsub>CatCod F\\<^esub> F @@\n                                   dom\\<^bsub>CatDom F\\<^esub> f to F @@\n                              cod\\<^bsub>CatDom F\\<^esub> f", "thus ?thesis"], ["proof (prove)\nusing this:\n  f maps\\<^bsub>CatDom F\\<^esub> dom\\<^bsub>CatDom F\\<^esub> f to cod\\<^bsub>CatDom F\\<^esub> f\n\ngoal (1 subgoal):\n 1. F ##\n    f maps\\<^bsub>CatCod F\\<^esub> F @@\n                                   dom\\<^bsub>CatDom F\\<^esub> f to F @@\n                              cod\\<^bsub>CatDom F\\<^esub> f", "by (simp add: FunctorCompM[of f \"dom\\<^bsub>CatDom F\\<^esub> f\" \"cod\\<^bsub>CatDom F\\<^esub> f\"])"], ["proof (state)\nthis:\n  F ##\n  f maps\\<^bsub>CatCod F\\<^esub> F @@\n                                 dom\\<^bsub>CatDom F\\<^esub> f to F @@\n                            cod\\<^bsub>CatDom F\\<^esub> f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in Functor) FunctorCodDom: \n  assumes \"f \\<in> mor\\<^bsub>CatDom F\\<^esub>\"\n  shows \"dom\\<^bsub>CatCod F\\<^esub>(F ## f) = F @@ (dom\\<^bsub>CatDom F\\<^esub> f)\" and \"cod\\<^bsub>CatCod F\\<^esub>(F ## f) = F @@ (cod\\<^bsub>CatDom F\\<^esub> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dom\\<^bsub>CatCod F\\<^esub> (F ## f) =\n    F @@ dom\\<^bsub>CatDom F\\<^esub> f &&&\n    cod\\<^bsub>CatCod F\\<^esub> (F ## f) =\n    F @@ cod\\<^bsub>CatDom F\\<^esub> f", "proof-"], ["proof (state)\ngoal (2 subgoals):\n 1. dom\\<^bsub>CatCod F\\<^esub> (F ## f) =\n    F @@ dom\\<^bsub>CatDom F\\<^esub> f\n 2. cod\\<^bsub>CatCod F\\<^esub> (F ## f) =\n    F @@ cod\\<^bsub>CatDom F\\<^esub> f", "have \"F ## f maps\\<^bsub>CatCod F\\<^esub> (F @@ (dom\\<^bsub>CatDom F\\<^esub> f)) to (F @@ (cod\\<^bsub>CatDom F\\<^esub> f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F ##\n    f maps\\<^bsub>CatCod F\\<^esub> F @@\n                                   dom\\<^bsub>CatDom F\\<^esub> f to F @@\n                              cod\\<^bsub>CatDom F\\<^esub> f", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> mor\\<^bsub>CatDom F\\<^esub>\n\ngoal (1 subgoal):\n 1. F ##\n    f maps\\<^bsub>CatCod F\\<^esub> F @@\n                                   dom\\<^bsub>CatDom F\\<^esub> f to F @@\n                              cod\\<^bsub>CatDom F\\<^esub> f", "by (simp add: FunctorMapsTo)"], ["proof (state)\nthis:\n  F ##\n  f maps\\<^bsub>CatCod F\\<^esub> F @@\n                                 dom\\<^bsub>CatDom F\\<^esub> f to F @@\n                            cod\\<^bsub>CatDom F\\<^esub> f\n\ngoal (2 subgoals):\n 1. dom\\<^bsub>CatCod F\\<^esub> (F ## f) =\n    F @@ dom\\<^bsub>CatDom F\\<^esub> f\n 2. cod\\<^bsub>CatCod F\\<^esub> (F ## f) =\n    F @@ cod\\<^bsub>CatDom F\\<^esub> f", "thus \"dom\\<^bsub>CatCod F\\<^esub>(F ## f) = F @@ (dom\\<^bsub>CatDom F\\<^esub> f)\" and \"cod\\<^bsub>CatCod F\\<^esub>(F ## f) = F @@ (cod\\<^bsub>CatDom F\\<^esub> f)\""], ["proof (prove)\nusing this:\n  F ##\n  f maps\\<^bsub>CatCod F\\<^esub> F @@\n                                 dom\\<^bsub>CatDom F\\<^esub> f to F @@\n                            cod\\<^bsub>CatDom F\\<^esub> f\n\ngoal (1 subgoal):\n 1. dom\\<^bsub>CatCod F\\<^esub> (F ## f) =\n    F @@ dom\\<^bsub>CatDom F\\<^esub> f &&&\n    cod\\<^bsub>CatCod F\\<^esub> (F ## f) =\n    F @@ cod\\<^bsub>CatDom F\\<^esub> f", "by auto"], ["proof (state)\nthis:\n  dom\\<^bsub>CatCod F\\<^esub> (F ## f) = F @@ dom\\<^bsub>CatDom F\\<^esub> f\n  cod\\<^bsub>CatCod F\\<^esub> (F ## f) = F @@ cod\\<^bsub>CatDom F\\<^esub> f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in Functor) FunctorCompPreserved: \"f \\<in> mor\\<^bsub>CatDom F\\<^esub> \\<Longrightarrow> F ## f \\<in> mor\\<^bsub>CatCod F\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> mor\\<^bsub>CatDom F\\<^esub> \\<Longrightarrow>\n    F ## f \\<in> mor\\<^bsub>CatCod F\\<^esub>", "by (auto dest:FunctorMapsTo)"], ["", "lemma (in Functor) FunctorCompDef: \n  assumes \"f \\<approx>>\\<^bsub>CatDom F\\<^esub> g\" shows \"(F ## f) \\<approx>>\\<^bsub>CatCod F\\<^esub> (F ## g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F ## f \\<approx>>\\<^bsub>CatCod F\\<^esub> F ## g", "proof(auto simp add: CompDefined_def)"], ["proof (state)\ngoal (3 subgoals):\n 1. F ## f \\<in> mor\\<^bsub>CatCod F\\<^esub>\n 2. F ## g \\<in> mor\\<^bsub>CatCod F\\<^esub>\n 3. cod\\<^bsub>CatCod F\\<^esub> (F ## f) =\n    dom\\<^bsub>CatCod F\\<^esub> (F ## g)", "show \"F ## f \\<in> mor\\<^bsub>CatCod F\\<^esub>\" and \"F ## g \\<in> mor\\<^bsub>CatCod F\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F ## f \\<in> mor\\<^bsub>CatCod F\\<^esub> &&&\n    F ## g \\<in> mor\\<^bsub>CatCod F\\<^esub>", "using assms"], ["proof (prove)\nusing this:\n  f \\<approx>>\\<^bsub>CatDom F\\<^esub> g\n\ngoal (1 subgoal):\n 1. F ## f \\<in> mor\\<^bsub>CatCod F\\<^esub> &&&\n    F ## g \\<in> mor\\<^bsub>CatCod F\\<^esub>", "by (auto simp add: FunctorCompPreserved)"], ["proof (state)\nthis:\n  F ## f \\<in> mor\\<^bsub>CatCod F\\<^esub>\n  F ## g \\<in> mor\\<^bsub>CatCod F\\<^esub>\n\ngoal (1 subgoal):\n 1. cod\\<^bsub>CatCod F\\<^esub> (F ## f) =\n    dom\\<^bsub>CatCod F\\<^esub> (F ## g)", "have \"f \\<in> mor\\<^bsub>CatDom F\\<^esub>\" and \"g \\<in> mor\\<^bsub>CatDom F\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> mor\\<^bsub>CatDom F\\<^esub> &&&\n    g \\<in> mor\\<^bsub>CatDom F\\<^esub>", "using assms"], ["proof (prove)\nusing this:\n  f \\<approx>>\\<^bsub>CatDom F\\<^esub> g\n\ngoal (1 subgoal):\n 1. f \\<in> mor\\<^bsub>CatDom F\\<^esub> &&&\n    g \\<in> mor\\<^bsub>CatDom F\\<^esub>", "by auto"], ["proof (state)\nthis:\n  f \\<in> mor\\<^bsub>CatDom F\\<^esub>\n  g \\<in> mor\\<^bsub>CatDom F\\<^esub>\n\ngoal (1 subgoal):\n 1. cod\\<^bsub>CatCod F\\<^esub> (F ## f) =\n    dom\\<^bsub>CatCod F\\<^esub> (F ## g)", "hence a: \"cod\\<^bsub>CatCod F\\<^esub> (F ## f) = F @@ (cod\\<^bsub>CatDom F\\<^esub> f)\" and b: \"dom\\<^bsub>CatCod F\\<^esub>(F ## g) = F @@ (dom\\<^bsub>CatDom F\\<^esub> g)\""], ["proof (prove)\nusing this:\n  f \\<in> mor\\<^bsub>CatDom F\\<^esub>\n  g \\<in> mor\\<^bsub>CatDom F\\<^esub>\n\ngoal (1 subgoal):\n 1. cod\\<^bsub>CatCod F\\<^esub> (F ## f) =\n    F @@ cod\\<^bsub>CatDom F\\<^esub> f &&&\n    dom\\<^bsub>CatCod F\\<^esub> (F ## g) =\n    F @@ dom\\<^bsub>CatDom F\\<^esub> g", "by (simp add: FunctorCodDom)+"], ["proof (state)\nthis:\n  cod\\<^bsub>CatCod F\\<^esub> (F ## f) = F @@ cod\\<^bsub>CatDom F\\<^esub> f\n  dom\\<^bsub>CatCod F\\<^esub> (F ## g) = F @@ dom\\<^bsub>CatDom F\\<^esub> g\n\ngoal (1 subgoal):\n 1. cod\\<^bsub>CatCod F\\<^esub> (F ## f) =\n    dom\\<^bsub>CatCod F\\<^esub> (F ## g)", "have \"cod\\<^bsub>CatCod F\\<^esub> (F ## f) = F @@ (dom\\<^bsub>CatDom F\\<^esub> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cod\\<^bsub>CatCod F\\<^esub> (F ## f) =\n    F @@ dom\\<^bsub>CatDom F\\<^esub> g", "using assms a"], ["proof (prove)\nusing this:\n  f \\<approx>>\\<^bsub>CatDom F\\<^esub> g\n  cod\\<^bsub>CatCod F\\<^esub> (F ## f) = F @@ cod\\<^bsub>CatDom F\\<^esub> f\n\ngoal (1 subgoal):\n 1. cod\\<^bsub>CatCod F\\<^esub> (F ## f) =\n    F @@ dom\\<^bsub>CatDom F\\<^esub> g", "by auto"], ["proof (state)\nthis:\n  cod\\<^bsub>CatCod F\\<^esub> (F ## f) = F @@ dom\\<^bsub>CatDom F\\<^esub> g\n\ngoal (1 subgoal):\n 1. cod\\<^bsub>CatCod F\\<^esub> (F ## f) =\n    dom\\<^bsub>CatCod F\\<^esub> (F ## g)", "also"], ["proof (state)\nthis:\n  cod\\<^bsub>CatCod F\\<^esub> (F ## f) = F @@ dom\\<^bsub>CatDom F\\<^esub> g\n\ngoal (1 subgoal):\n 1. cod\\<^bsub>CatCod F\\<^esub> (F ## f) =\n    dom\\<^bsub>CatCod F\\<^esub> (F ## g)", "have \"... = dom\\<^bsub>CatCod F\\<^esub> (F ## g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F @@ dom\\<^bsub>CatDom F\\<^esub> g =\n    dom\\<^bsub>CatCod F\\<^esub> (F ## g)", "using b"], ["proof (prove)\nusing this:\n  dom\\<^bsub>CatCod F\\<^esub> (F ## g) = F @@ dom\\<^bsub>CatDom F\\<^esub> g\n\ngoal (1 subgoal):\n 1. F @@ dom\\<^bsub>CatDom F\\<^esub> g =\n    dom\\<^bsub>CatCod F\\<^esub> (F ## g)", "by simp"], ["proof (state)\nthis:\n  F @@ dom\\<^bsub>CatDom F\\<^esub> g = dom\\<^bsub>CatCod F\\<^esub> (F ## g)\n\ngoal (1 subgoal):\n 1. cod\\<^bsub>CatCod F\\<^esub> (F ## f) =\n    dom\\<^bsub>CatCod F\\<^esub> (F ## g)", "finally"], ["proof (chain)\npicking this:\n  cod\\<^bsub>CatCod F\\<^esub> (F ## f) =\n  dom\\<^bsub>CatCod F\\<^esub> (F ## g)", "show \"cod\\<^bsub>CatCod F\\<^esub> (F ## f) = dom\\<^bsub>CatCod F\\<^esub> (F ## g)\""], ["proof (prove)\nusing this:\n  cod\\<^bsub>CatCod F\\<^esub> (F ## f) =\n  dom\\<^bsub>CatCod F\\<^esub> (F ## g)\n\ngoal (1 subgoal):\n 1. cod\\<^bsub>CatCod F\\<^esub> (F ## f) =\n    dom\\<^bsub>CatCod F\\<^esub> (F ## g)", "."], ["proof (state)\nthis:\n  cod\\<^bsub>CatCod F\\<^esub> (F ## f) =\n  dom\\<^bsub>CatCod F\\<^esub> (F ## g)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma FunctorComp: \"\\<lbrakk>Ftor F : A \\<longrightarrow> B ; f \\<approx>>\\<^bsub>A\\<^esub> g\\<rbrakk> \\<Longrightarrow> F ## (f ;;\\<^bsub>A\\<^esub> g) = (F ## f) ;;\\<^bsub>B\\<^esub> (F ## g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ftor F : A \\<longrightarrow> B;\n     f \\<approx>>\\<^bsub>A\\<^esub> g\\<rbrakk>\n    \\<Longrightarrow> F ## f ;;\\<^bsub>A\\<^esub> g =\n                      F ## f ;;\\<^bsub>B\\<^esub> (F ## g)", "by (auto simp add: PreFunctor.FunctorComp)"], ["", "lemma FunctorCompDef: \"\\<lbrakk>Ftor F : A \\<longrightarrow> B ; f \\<approx>>\\<^bsub>A\\<^esub> g\\<rbrakk> \\<Longrightarrow> (F ## f) \\<approx>>\\<^bsub>B\\<^esub> (F ## g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Ftor F : A \\<longrightarrow> B;\n     f \\<approx>>\\<^bsub>A\\<^esub> g\\<rbrakk>\n    \\<Longrightarrow> F ## f \\<approx>>\\<^bsub>B\\<^esub> F ## g", "by (auto simp add: Functor.FunctorCompDef)"], ["", "lemma FunctorMapsTo: \n  assumes \"Ftor F : A \\<longrightarrow> B\" and \"f maps\\<^bsub>A\\<^esub> X to Y\" \n  shows \"(F ## f) maps\\<^bsub>B\\<^esub> (F @@ X) to (F @@ Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F ## f maps\\<^bsub>B\\<^esub> F @@ X to F @@ Y", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. F ## f maps\\<^bsub>B\\<^esub> F @@ X to F @@ Y", "have b: \"CatCod F = B\" and a: \"CatDom F = A\" and ff: \"Functor F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CatCod F = B &&& CatDom F = A &&& Functor F", "using assms"], ["proof (prove)\nusing this:\n  Ftor F : A \\<longrightarrow> B\n  f maps\\<^bsub>A\\<^esub> X to Y\n\ngoal (1 subgoal):\n 1. CatCod F = B &&& CatDom F = A &&& Functor F", "by auto"], ["proof (state)\nthis:\n  CatCod F = B\n  CatDom F = A\n  Functor F\n\ngoal (1 subgoal):\n 1. F ## f maps\\<^bsub>B\\<^esub> F @@ X to F @@ Y", "have df: \"(dom\\<^bsub>CatDom F\\<^esub> f) = X\" and cf: \"(cod\\<^bsub>CatDom F\\<^esub> f) = Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dom\\<^bsub>CatDom F\\<^esub> f = X &&& cod\\<^bsub>CatDom F\\<^esub> f = Y", "using a assms"], ["proof (prove)\nusing this:\n  CatDom F = A\n  Ftor F : A \\<longrightarrow> B\n  f maps\\<^bsub>A\\<^esub> X to Y\n\ngoal (1 subgoal):\n 1. dom\\<^bsub>CatDom F\\<^esub> f = X &&& cod\\<^bsub>CatDom F\\<^esub> f = Y", "by auto"], ["proof (state)\nthis:\n  dom\\<^bsub>CatDom F\\<^esub> f = X\n  cod\\<^bsub>CatDom F\\<^esub> f = Y\n\ngoal (1 subgoal):\n 1. F ## f maps\\<^bsub>B\\<^esub> F @@ X to F @@ Y", "have \"f \\<in> mor\\<^bsub>CatDom F\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> mor\\<^bsub>CatDom F\\<^esub>", "using assms"], ["proof (prove)\nusing this:\n  Ftor F : A \\<longrightarrow> B\n  f maps\\<^bsub>A\\<^esub> X to Y\n\ngoal (1 subgoal):\n 1. f \\<in> mor\\<^bsub>CatDom F\\<^esub>", "by auto"], ["proof (state)\nthis:\n  f \\<in> mor\\<^bsub>CatDom F\\<^esub>\n\ngoal (1 subgoal):\n 1. F ## f maps\\<^bsub>B\\<^esub> F @@ X to F @@ Y", "hence \"F ## f maps\\<^bsub>CatCod F\\<^esub> (F @@ (dom\\<^bsub>CatDom F\\<^esub> f)) to (F @@ (cod\\<^bsub>CatDom F\\<^esub> f))\""], ["proof (prove)\nusing this:\n  f \\<in> mor\\<^bsub>CatDom F\\<^esub>\n\ngoal (1 subgoal):\n 1. F ##\n    f maps\\<^bsub>CatCod F\\<^esub> F @@\n                                   dom\\<^bsub>CatDom F\\<^esub> f to F @@\n                              cod\\<^bsub>CatDom F\\<^esub> f", "using ff"], ["proof (prove)\nusing this:\n  f \\<in> mor\\<^bsub>CatDom F\\<^esub>\n  Functor F\n\ngoal (1 subgoal):\n 1. F ##\n    f maps\\<^bsub>CatCod F\\<^esub> F @@\n                                   dom\\<^bsub>CatDom F\\<^esub> f to F @@\n                              cod\\<^bsub>CatDom F\\<^esub> f", "by (simp add: Functor.FunctorMapsTo)"], ["proof (state)\nthis:\n  F ##\n  f maps\\<^bsub>CatCod F\\<^esub> F @@\n                                 dom\\<^bsub>CatDom F\\<^esub> f to F @@\n                            cod\\<^bsub>CatDom F\\<^esub> f\n\ngoal (1 subgoal):\n 1. F ## f maps\\<^bsub>B\\<^esub> F @@ X to F @@ Y", "thus ?thesis"], ["proof (prove)\nusing this:\n  F ##\n  f maps\\<^bsub>CatCod F\\<^esub> F @@\n                                 dom\\<^bsub>CatDom F\\<^esub> f to F @@\n                            cod\\<^bsub>CatDom F\\<^esub> f\n\ngoal (1 subgoal):\n 1. F ## f maps\\<^bsub>B\\<^esub> F @@ X to F @@ Y", "using df cf b"], ["proof (prove)\nusing this:\n  F ##\n  f maps\\<^bsub>CatCod F\\<^esub> F @@\n                                 dom\\<^bsub>CatDom F\\<^esub> f to F @@\n                            cod\\<^bsub>CatDom F\\<^esub> f\n  dom\\<^bsub>CatDom F\\<^esub> f = X\n  cod\\<^bsub>CatDom F\\<^esub> f = Y\n  CatCod F = B\n\ngoal (1 subgoal):\n 1. F ## f maps\\<^bsub>B\\<^esub> F @@ X to F @@ Y", "by simp"], ["proof (state)\nthis:\n  F ## f maps\\<^bsub>B\\<^esub> F @@ X to F @@ Y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in PreFunctor) FunctorId2: \n  assumes \"X \\<in> obj\\<^bsub>CatDom F\\<^esub>\"\n  shows   \"F @@ X \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and> F ## (id\\<^bsub>CatDom F\\<^esub> X) = id\\<^bsub>CatCod F\\<^esub> (F @@ X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F @@ X \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n    F ## id\\<^bsub>CatDom F\\<^esub> X = id\\<^bsub>CatCod F\\<^esub> (F @@ X)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. F @@ X \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n    F ## id\\<^bsub>CatDom F\\<^esub> X = id\\<^bsub>CatCod F\\<^esub> (F @@ X)", "let ?Q = \"\\<lambda> E Y . Y \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and> E = id\\<^bsub>CatCod F\\<^esub> Y\""], ["proof (state)\ngoal (1 subgoal):\n 1. F @@ X \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n    F ## id\\<^bsub>CatDom F\\<^esub> X = id\\<^bsub>CatCod F\\<^esub> (F @@ X)", "let ?P = \"?Q (F ## (id\\<^bsub>CatDom F\\<^esub> X))\""], ["proof (state)\ngoal (1 subgoal):\n 1. F @@ X \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n    F ## id\\<^bsub>CatDom F\\<^esub> X = id\\<^bsub>CatCod F\\<^esub> (F @@ X)", "from assms FunctorId"], ["proof (chain)\npicking this:\n  X \\<in> obj\\<^bsub>CatDom F\\<^esub>\n  ?X \\<in> obj\\<^bsub>CatDom F\\<^esub> \\<Longrightarrow>\n  \\<exists>Y\\<in>obj\\<^bsub>CatCod F\\<^esub>.\n     F ## id\\<^bsub>CatDom F\\<^esub> ?X = id\\<^bsub>CatCod F\\<^esub> Y", "obtain Y where \"?P Y\""], ["proof (prove)\nusing this:\n  X \\<in> obj\\<^bsub>CatDom F\\<^esub>\n  ?X \\<in> obj\\<^bsub>CatDom F\\<^esub> \\<Longrightarrow>\n  \\<exists>Y\\<in>obj\\<^bsub>CatCod F\\<^esub>.\n     F ## id\\<^bsub>CatDom F\\<^esub> ?X = id\\<^bsub>CatCod F\\<^esub> Y\n\ngoal (1 subgoal):\n 1. (\\<And>Y.\n        Y \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n        F ## id\\<^bsub>CatDom F\\<^esub> X =\n        id\\<^bsub>CatCod F\\<^esub> Y \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  Y \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n  F ## id\\<^bsub>CatDom F\\<^esub> X = id\\<^bsub>CatCod F\\<^esub> Y\n\ngoal (1 subgoal):\n 1. F @@ X \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n    F ## id\\<^bsub>CatDom F\\<^esub> X = id\\<^bsub>CatCod F\\<^esub> (F @@ X)", "moreover"], ["proof (state)\nthis:\n  Y \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n  F ## id\\<^bsub>CatDom F\\<^esub> X = id\\<^bsub>CatCod F\\<^esub> Y\n\ngoal (1 subgoal):\n 1. F @@ X \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n    F ## id\\<^bsub>CatDom F\\<^esub> X = id\\<^bsub>CatCod F\\<^esub> (F @@ X)", "{"], ["proof (state)\nthis:\n  Y \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n  F ## id\\<^bsub>CatDom F\\<^esub> X = id\\<^bsub>CatCod F\\<^esub> Y\n\ngoal (1 subgoal):\n 1. F @@ X \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n    F ## id\\<^bsub>CatDom F\\<^esub> X = id\\<^bsub>CatCod F\\<^esub> (F @@ X)", "fix y e z"], ["proof (state)\ngoal (1 subgoal):\n 1. F @@ X \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n    F ## id\\<^bsub>CatDom F\\<^esub> X = id\\<^bsub>CatCod F\\<^esub> (F @@ X)", "have \"\\<lbrakk>?Q e y ; ?Q e z\\<rbrakk> \\<Longrightarrow> y = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n             e = id\\<^bsub>CatCod F\\<^esub> y;\n     z \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n     e = id\\<^bsub>CatCod F\\<^esub> z\\<rbrakk>\n    \\<Longrightarrow> y = z", "by (auto intro: Category.IdInj[of \"CatCod F\" y z])"], ["proof (state)\nthis:\n  \\<lbrakk>y \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n           e = id\\<^bsub>CatCod F\\<^esub> y;\n   z \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n   e = id\\<^bsub>CatCod F\\<^esub> z\\<rbrakk>\n  \\<Longrightarrow> y = z\n\ngoal (1 subgoal):\n 1. F @@ X \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n    F ## id\\<^bsub>CatDom F\\<^esub> X = id\\<^bsub>CatCod F\\<^esub> (F @@ X)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?y2 \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n           ?e2 = id\\<^bsub>CatCod F\\<^esub> ?y2;\n   ?z2 \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n   ?e2 = id\\<^bsub>CatCod F\\<^esub> ?z2\\<rbrakk>\n  \\<Longrightarrow> ?y2 = ?z2\n\ngoal (1 subgoal):\n 1. F @@ X \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n    F ## id\\<^bsub>CatDom F\\<^esub> X = id\\<^bsub>CatCod F\\<^esub> (F @@ X)", "ultimately"], ["proof (chain)\npicking this:\n  Y \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n  F ## id\\<^bsub>CatDom F\\<^esub> X = id\\<^bsub>CatCod F\\<^esub> Y\n  \\<lbrakk>?y2 \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n           ?e2 = id\\<^bsub>CatCod F\\<^esub> ?y2;\n   ?z2 \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n   ?e2 = id\\<^bsub>CatCod F\\<^esub> ?z2\\<rbrakk>\n  \\<Longrightarrow> ?y2 = ?z2", "have \"\\<exists>! Z . ?P Z\""], ["proof (prove)\nusing this:\n  Y \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n  F ## id\\<^bsub>CatDom F\\<^esub> X = id\\<^bsub>CatCod F\\<^esub> Y\n  \\<lbrakk>?y2 \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n           ?e2 = id\\<^bsub>CatCod F\\<^esub> ?y2;\n   ?z2 \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n   ?e2 = id\\<^bsub>CatCod F\\<^esub> ?z2\\<rbrakk>\n  \\<Longrightarrow> ?y2 = ?z2\n\ngoal (1 subgoal):\n 1. \\<exists>!Z.\n       Z \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n       F ## id\\<^bsub>CatDom F\\<^esub> X = id\\<^bsub>CatCod F\\<^esub> Z", "by auto"], ["proof (state)\nthis:\n  \\<exists>!Z.\n     Z \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n     F ## id\\<^bsub>CatDom F\\<^esub> X = id\\<^bsub>CatCod F\\<^esub> Z\n\ngoal (1 subgoal):\n 1. F @@ X \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n    F ## id\\<^bsub>CatDom F\\<^esub> X = id\\<^bsub>CatCod F\\<^esub> (F @@ X)", "hence \"?P (THE Y . ?P Y)\""], ["proof (prove)\nusing this:\n  \\<exists>!Z.\n     Z \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n     F ## id\\<^bsub>CatDom F\\<^esub> X = id\\<^bsub>CatCod F\\<^esub> Z\n\ngoal (1 subgoal):\n 1. (THE Y.\n        Y \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n        F ## id\\<^bsub>CatDom F\\<^esub> X = id\\<^bsub>CatCod F\\<^esub> Y)\n    \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n    F ## id\\<^bsub>CatDom F\\<^esub> X =\n    id\\<^bsub>CatCod F\\<^esub> (THE Y.\n                                   Y \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n                                   F ## id\\<^bsub>CatDom F\\<^esub> X =\n                                   id\\<^bsub>CatCod F\\<^esub> Y)", "by (rule theI')"], ["proof (state)\nthis:\n  (THE Y.\n      Y \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n      F ## id\\<^bsub>CatDom F\\<^esub> X = id\\<^bsub>CatCod F\\<^esub> Y)\n  \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n  F ## id\\<^bsub>CatDom F\\<^esub> X =\n  id\\<^bsub>CatCod F\\<^esub> (THE Y.\n                                 Y \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n                                 F ## id\\<^bsub>CatDom F\\<^esub> X =\n                                 id\\<^bsub>CatCod F\\<^esub> Y)\n\ngoal (1 subgoal):\n 1. F @@ X \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n    F ## id\\<^bsub>CatDom F\\<^esub> X = id\\<^bsub>CatCod F\\<^esub> (F @@ X)", "thus ?thesis"], ["proof (prove)\nusing this:\n  (THE Y.\n      Y \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n      F ## id\\<^bsub>CatDom F\\<^esub> X = id\\<^bsub>CatCod F\\<^esub> Y)\n  \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n  F ## id\\<^bsub>CatDom F\\<^esub> X =\n  id\\<^bsub>CatCod F\\<^esub> (THE Y.\n                                 Y \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n                                 F ## id\\<^bsub>CatDom F\\<^esub> X =\n                                 id\\<^bsub>CatCod F\\<^esub> Y)\n\ngoal (1 subgoal):\n 1. F @@ X \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n    F ## id\\<^bsub>CatDom F\\<^esub> X = id\\<^bsub>CatCod F\\<^esub> (F @@ X)", "by (auto simp add: MapO_def)"], ["proof (state)\nthis:\n  F @@ X \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n  F ## id\\<^bsub>CatDom F\\<^esub> X = id\\<^bsub>CatCod F\\<^esub> (F @@ X)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma FunctorId:\n  assumes \"Ftor F : C \\<longrightarrow> D\" and \"X \\<in> Obj C\"\n  shows \"F ## (Id C X) = Id D (F @@ X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F ## id\\<^bsub>C\\<^esub> X = id\\<^bsub>D\\<^esub> (F @@ X)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. F ## id\\<^bsub>C\\<^esub> X = id\\<^bsub>D\\<^esub> (F @@ X)", "have \"CatDom F = C\" and \"CatCod F = D\" and \"PreFunctor F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CatDom F = C &&& CatCod F = D &&& PreFunctor F", "using assms"], ["proof (prove)\nusing this:\n  Ftor F : C \\<longrightarrow> D\n  X \\<in> obj\\<^bsub>C\\<^esub>\n\ngoal (1 subgoal):\n 1. CatDom F = C &&& CatCod F = D &&& PreFunctor F", "by auto"], ["proof (state)\nthis:\n  CatDom F = C\n  CatCod F = D\n  PreFunctor F\n\ngoal (1 subgoal):\n 1. F ## id\\<^bsub>C\\<^esub> X = id\\<^bsub>D\\<^esub> (F @@ X)", "thus ?thesis"], ["proof (prove)\nusing this:\n  CatDom F = C\n  CatCod F = D\n  PreFunctor F\n\ngoal (1 subgoal):\n 1. F ## id\\<^bsub>C\\<^esub> X = id\\<^bsub>D\\<^esub> (F @@ X)", "using assms PreFunctor.FunctorId2[of F X]"], ["proof (prove)\nusing this:\n  CatDom F = C\n  CatCod F = D\n  PreFunctor F\n  Ftor F : C \\<longrightarrow> D\n  X \\<in> obj\\<^bsub>C\\<^esub>\n  \\<lbrakk>PreFunctor F; X \\<in> obj\\<^bsub>CatDom F\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> F @@ X \\<in> obj\\<^bsub>CatCod F\\<^esub> \\<and>\n                    F ## id\\<^bsub>CatDom F\\<^esub> X =\n                    id\\<^bsub>CatCod F\\<^esub> (F @@ X)\n\ngoal (1 subgoal):\n 1. F ## id\\<^bsub>C\\<^esub> X = id\\<^bsub>D\\<^esub> (F @@ X)", "by simp"], ["proof (state)\nthis:\n  F ## id\\<^bsub>C\\<^esub> X = id\\<^bsub>D\\<^esub> (F @@ X)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in Functor) DomFunctor: \"f \\<in> mor\\<^bsub>CatDom F\\<^esub> \\<Longrightarrow> dom\\<^bsub>CatCod F\\<^esub> (F ## f) = F @@ (dom\\<^bsub>CatDom F\\<^esub> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> mor\\<^bsub>CatDom F\\<^esub> \\<Longrightarrow>\n    dom\\<^bsub>CatCod F\\<^esub> (F ## f) =\n    F @@ dom\\<^bsub>CatDom F\\<^esub> f", "by (simp add: FunctorCodDom)"], ["", "lemma (in Functor) CodFunctor: \"f \\<in> mor\\<^bsub>CatDom F\\<^esub> \\<Longrightarrow> cod\\<^bsub>CatCod F\\<^esub> (F ## f) = F @@ (cod\\<^bsub>CatDom F\\<^esub> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> mor\\<^bsub>CatDom F\\<^esub> \\<Longrightarrow>\n    cod\\<^bsub>CatCod F\\<^esub> (F ## f) =\n    F @@ cod\\<^bsub>CatDom F\\<^esub> f", "by (simp add: FunctorCodDom)"], ["", "lemma (in Functor) FunctorId3Dom:\n  assumes \"f \\<in> mor\\<^bsub>CatDom F\\<^esub>\"\n  shows   \"F ## (id\\<^bsub>CatDom F\\<^esub> (dom\\<^bsub>CatDom F\\<^esub> f)) = id\\<^bsub>CatCod F\\<^esub> (dom\\<^bsub>CatCod F\\<^esub> (F ## f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F ## id\\<^bsub>CatDom F\\<^esub> (dom\\<^bsub>CatDom F\\<^esub> f) =\n    id\\<^bsub>CatCod F\\<^esub> (dom\\<^bsub>CatCod F\\<^esub> (F ## f))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. F ## id\\<^bsub>CatDom F\\<^esub> (dom\\<^bsub>CatDom F\\<^esub> f) =\n    id\\<^bsub>CatCod F\\<^esub> (dom\\<^bsub>CatCod F\\<^esub> (F ## f))", "have \"(dom\\<^bsub>CatDom F\\<^esub> f) \\<in> obj\\<^bsub>CatDom F\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dom\\<^bsub>CatDom F\\<^esub> f \\<in> obj\\<^bsub>CatDom F\\<^esub>", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> mor\\<^bsub>CatDom F\\<^esub>\n\ngoal (1 subgoal):\n 1. dom\\<^bsub>CatDom F\\<^esub> f \\<in> obj\\<^bsub>CatDom F\\<^esub>", "by (simp add: Category.Cdom)"], ["proof (state)\nthis:\n  dom\\<^bsub>CatDom F\\<^esub> f \\<in> obj\\<^bsub>CatDom F\\<^esub>\n\ngoal (1 subgoal):\n 1. F ## id\\<^bsub>CatDom F\\<^esub> (dom\\<^bsub>CatDom F\\<^esub> f) =\n    id\\<^bsub>CatCod F\\<^esub> (dom\\<^bsub>CatCod F\\<^esub> (F ## f))", "hence \"F ## (id\\<^bsub>CatDom F\\<^esub> (dom\\<^bsub>CatDom F\\<^esub> f)) = id\\<^bsub>CatCod F\\<^esub> (F @@ (dom\\<^bsub>CatDom F\\<^esub> f))\""], ["proof (prove)\nusing this:\n  dom\\<^bsub>CatDom F\\<^esub> f \\<in> obj\\<^bsub>CatDom F\\<^esub>\n\ngoal (1 subgoal):\n 1. F ## id\\<^bsub>CatDom F\\<^esub> (dom\\<^bsub>CatDom F\\<^esub> f) =\n    id\\<^bsub>CatCod F\\<^esub> (F @@ dom\\<^bsub>CatDom F\\<^esub> f)", "by (simp add: FunctorId2)"], ["proof (state)\nthis:\n  F ## id\\<^bsub>CatDom F\\<^esub> (dom\\<^bsub>CatDom F\\<^esub> f) =\n  id\\<^bsub>CatCod F\\<^esub> (F @@ dom\\<^bsub>CatDom F\\<^esub> f)\n\ngoal (1 subgoal):\n 1. F ## id\\<^bsub>CatDom F\\<^esub> (dom\\<^bsub>CatDom F\\<^esub> f) =\n    id\\<^bsub>CatCod F\\<^esub> (dom\\<^bsub>CatCod F\\<^esub> (F ## f))", "also"], ["proof (state)\nthis:\n  F ## id\\<^bsub>CatDom F\\<^esub> (dom\\<^bsub>CatDom F\\<^esub> f) =\n  id\\<^bsub>CatCod F\\<^esub> (F @@ dom\\<^bsub>CatDom F\\<^esub> f)\n\ngoal (1 subgoal):\n 1. F ## id\\<^bsub>CatDom F\\<^esub> (dom\\<^bsub>CatDom F\\<^esub> f) =\n    id\\<^bsub>CatCod F\\<^esub> (dom\\<^bsub>CatCod F\\<^esub> (F ## f))", "have \"... = id\\<^bsub>CatCod F\\<^esub> (dom\\<^bsub>CatCod F\\<^esub> (F ## f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. id\\<^bsub>CatCod F\\<^esub> (F @@ dom\\<^bsub>CatDom F\\<^esub> f) =\n    id\\<^bsub>CatCod F\\<^esub> (dom\\<^bsub>CatCod F\\<^esub> (F ## f))", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> mor\\<^bsub>CatDom F\\<^esub>\n\ngoal (1 subgoal):\n 1. id\\<^bsub>CatCod F\\<^esub> (F @@ dom\\<^bsub>CatDom F\\<^esub> f) =\n    id\\<^bsub>CatCod F\\<^esub> (dom\\<^bsub>CatCod F\\<^esub> (F ## f))", "by (simp add: DomFunctor)"], ["proof (state)\nthis:\n  id\\<^bsub>CatCod F\\<^esub> (F @@ dom\\<^bsub>CatDom F\\<^esub> f) =\n  id\\<^bsub>CatCod F\\<^esub> (dom\\<^bsub>CatCod F\\<^esub> (F ## f))\n\ngoal (1 subgoal):\n 1. F ## id\\<^bsub>CatDom F\\<^esub> (dom\\<^bsub>CatDom F\\<^esub> f) =\n    id\\<^bsub>CatCod F\\<^esub> (dom\\<^bsub>CatCod F\\<^esub> (F ## f))", "finally"], ["proof (chain)\npicking this:\n  F ## id\\<^bsub>CatDom F\\<^esub> (dom\\<^bsub>CatDom F\\<^esub> f) =\n  id\\<^bsub>CatCod F\\<^esub> (dom\\<^bsub>CatCod F\\<^esub> (F ## f))", "show ?thesis"], ["proof (prove)\nusing this:\n  F ## id\\<^bsub>CatDom F\\<^esub> (dom\\<^bsub>CatDom F\\<^esub> f) =\n  id\\<^bsub>CatCod F\\<^esub> (dom\\<^bsub>CatCod F\\<^esub> (F ## f))\n\ngoal (1 subgoal):\n 1. F ## id\\<^bsub>CatDom F\\<^esub> (dom\\<^bsub>CatDom F\\<^esub> f) =\n    id\\<^bsub>CatCod F\\<^esub> (dom\\<^bsub>CatCod F\\<^esub> (F ## f))", "by simp"], ["proof (state)\nthis:\n  F ## id\\<^bsub>CatDom F\\<^esub> (dom\\<^bsub>CatDom F\\<^esub> f) =\n  id\\<^bsub>CatCod F\\<^esub> (dom\\<^bsub>CatCod F\\<^esub> (F ## f))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in Functor) FunctorId3Cod:\n  assumes \"f \\<in> mor\\<^bsub>CatDom F\\<^esub>\"\n  shows   \"F ## (id\\<^bsub>CatDom F\\<^esub> (cod\\<^bsub>CatDom F\\<^esub> f)) = id\\<^bsub>CatCod F\\<^esub> (cod\\<^bsub>CatCod F\\<^esub> (F ## f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F ## id\\<^bsub>CatDom F\\<^esub> (cod\\<^bsub>CatDom F\\<^esub> f) =\n    id\\<^bsub>CatCod F\\<^esub> (cod\\<^bsub>CatCod F\\<^esub> (F ## f))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. F ## id\\<^bsub>CatDom F\\<^esub> (cod\\<^bsub>CatDom F\\<^esub> f) =\n    id\\<^bsub>CatCod F\\<^esub> (cod\\<^bsub>CatCod F\\<^esub> (F ## f))", "have \"(cod\\<^bsub>CatDom F\\<^esub> f) \\<in> obj\\<^bsub>CatDom F\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cod\\<^bsub>CatDom F\\<^esub> f \\<in> obj\\<^bsub>CatDom F\\<^esub>", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> mor\\<^bsub>CatDom F\\<^esub>\n\ngoal (1 subgoal):\n 1. cod\\<^bsub>CatDom F\\<^esub> f \\<in> obj\\<^bsub>CatDom F\\<^esub>", "by (simp add: Category.Ccod)"], ["proof (state)\nthis:\n  cod\\<^bsub>CatDom F\\<^esub> f \\<in> obj\\<^bsub>CatDom F\\<^esub>\n\ngoal (1 subgoal):\n 1. F ## id\\<^bsub>CatDom F\\<^esub> (cod\\<^bsub>CatDom F\\<^esub> f) =\n    id\\<^bsub>CatCod F\\<^esub> (cod\\<^bsub>CatCod F\\<^esub> (F ## f))", "hence \"F ## (id\\<^bsub>CatDom F\\<^esub> (cod\\<^bsub>CatDom F\\<^esub> f)) = id\\<^bsub>CatCod F\\<^esub> (F @@ (cod\\<^bsub>CatDom F\\<^esub> f))\""], ["proof (prove)\nusing this:\n  cod\\<^bsub>CatDom F\\<^esub> f \\<in> obj\\<^bsub>CatDom F\\<^esub>\n\ngoal (1 subgoal):\n 1. F ## id\\<^bsub>CatDom F\\<^esub> (cod\\<^bsub>CatDom F\\<^esub> f) =\n    id\\<^bsub>CatCod F\\<^esub> (F @@ cod\\<^bsub>CatDom F\\<^esub> f)", "by (simp add: FunctorId2)"], ["proof (state)\nthis:\n  F ## id\\<^bsub>CatDom F\\<^esub> (cod\\<^bsub>CatDom F\\<^esub> f) =\n  id\\<^bsub>CatCod F\\<^esub> (F @@ cod\\<^bsub>CatDom F\\<^esub> f)\n\ngoal (1 subgoal):\n 1. F ## id\\<^bsub>CatDom F\\<^esub> (cod\\<^bsub>CatDom F\\<^esub> f) =\n    id\\<^bsub>CatCod F\\<^esub> (cod\\<^bsub>CatCod F\\<^esub> (F ## f))", "also"], ["proof (state)\nthis:\n  F ## id\\<^bsub>CatDom F\\<^esub> (cod\\<^bsub>CatDom F\\<^esub> f) =\n  id\\<^bsub>CatCod F\\<^esub> (F @@ cod\\<^bsub>CatDom F\\<^esub> f)\n\ngoal (1 subgoal):\n 1. F ## id\\<^bsub>CatDom F\\<^esub> (cod\\<^bsub>CatDom F\\<^esub> f) =\n    id\\<^bsub>CatCod F\\<^esub> (cod\\<^bsub>CatCod F\\<^esub> (F ## f))", "have \"... = id\\<^bsub>CatCod F\\<^esub> (cod\\<^bsub>CatCod F\\<^esub> (F ## f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. id\\<^bsub>CatCod F\\<^esub> (F @@ cod\\<^bsub>CatDom F\\<^esub> f) =\n    id\\<^bsub>CatCod F\\<^esub> (cod\\<^bsub>CatCod F\\<^esub> (F ## f))", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> mor\\<^bsub>CatDom F\\<^esub>\n\ngoal (1 subgoal):\n 1. id\\<^bsub>CatCod F\\<^esub> (F @@ cod\\<^bsub>CatDom F\\<^esub> f) =\n    id\\<^bsub>CatCod F\\<^esub> (cod\\<^bsub>CatCod F\\<^esub> (F ## f))", "by (simp add: CodFunctor)"], ["proof (state)\nthis:\n  id\\<^bsub>CatCod F\\<^esub> (F @@ cod\\<^bsub>CatDom F\\<^esub> f) =\n  id\\<^bsub>CatCod F\\<^esub> (cod\\<^bsub>CatCod F\\<^esub> (F ## f))\n\ngoal (1 subgoal):\n 1. F ## id\\<^bsub>CatDom F\\<^esub> (cod\\<^bsub>CatDom F\\<^esub> f) =\n    id\\<^bsub>CatCod F\\<^esub> (cod\\<^bsub>CatCod F\\<^esub> (F ## f))", "finally"], ["proof (chain)\npicking this:\n  F ## id\\<^bsub>CatDom F\\<^esub> (cod\\<^bsub>CatDom F\\<^esub> f) =\n  id\\<^bsub>CatCod F\\<^esub> (cod\\<^bsub>CatCod F\\<^esub> (F ## f))", "show ?thesis"], ["proof (prove)\nusing this:\n  F ## id\\<^bsub>CatDom F\\<^esub> (cod\\<^bsub>CatDom F\\<^esub> f) =\n  id\\<^bsub>CatCod F\\<^esub> (cod\\<^bsub>CatCod F\\<^esub> (F ## f))\n\ngoal (1 subgoal):\n 1. F ## id\\<^bsub>CatDom F\\<^esub> (cod\\<^bsub>CatDom F\\<^esub> f) =\n    id\\<^bsub>CatCod F\\<^esub> (cod\\<^bsub>CatCod F\\<^esub> (F ## f))", "by simp"], ["proof (state)\nthis:\n  F ## id\\<^bsub>CatDom F\\<^esub> (cod\\<^bsub>CatDom F\\<^esub> f) =\n  id\\<^bsub>CatCod F\\<^esub> (cod\\<^bsub>CatCod F\\<^esub> (F ## f))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in PreFunctor) FmToFo: \"\\<lbrakk>X \\<in> obj\\<^bsub>CatDom F\\<^esub> ; Y \\<in> obj\\<^bsub>CatCod F\\<^esub> ; F ## (id\\<^bsub>CatDom F\\<^esub> X) = id\\<^bsub>CatCod F\\<^esub> Y\\<rbrakk> \\<Longrightarrow> F @@ X = Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<in> obj\\<^bsub>CatDom F\\<^esub>;\n     Y \\<in> obj\\<^bsub>CatCod F\\<^esub>;\n     F ## id\\<^bsub>CatDom F\\<^esub> X =\n     id\\<^bsub>CatCod F\\<^esub> Y\\<rbrakk>\n    \\<Longrightarrow> F @@ X = Y", "by (auto simp add: FunctorId2 intro: Category.IdInj[of \"CatCod F\" \"F @@ X\" Y])"], ["", "lemma MakeFtorPreFtor: \n  assumes \"PreFunctor F\" shows \"PreFunctor (MakeFtor F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PreFunctor (MakeFtor F)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. PreFunctor (MakeFtor F)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. PreFunctor (MakeFtor F)", "fix X"], ["proof (state)\ngoal (1 subgoal):\n 1. PreFunctor (MakeFtor F)", "assume a: \"X \\<in> obj\\<^bsub>CatDom F\\<^esub>\""], ["proof (state)\nthis:\n  X \\<in> obj\\<^bsub>CatDom F\\<^esub>\n\ngoal (1 subgoal):\n 1. PreFunctor (MakeFtor F)", "have \"id\\<^bsub>CatDom F \\<^esub>X \\<in> mor\\<^bsub>CatDom F\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. id\\<^bsub>CatDom F\\<^esub> X \\<in> mor\\<^bsub>CatDom F\\<^esub>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. id\\<^bsub>CatDom F\\<^esub> X \\<in> mor\\<^bsub>CatDom F\\<^esub>", "have \"Category (CatDom F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Category (CatDom F)", "using assms"], ["proof (prove)\nusing this:\n  PreFunctor F\n\ngoal (1 subgoal):\n 1. Category (CatDom F)", "by (simp add: PreFunctor_def)"], ["proof (state)\nthis:\n  Category (CatDom F)\n\ngoal (1 subgoal):\n 1. id\\<^bsub>CatDom F\\<^esub> X \\<in> mor\\<^bsub>CatDom F\\<^esub>", "hence \"id\\<^bsub>CatDom F \\<^esub>X maps\\<^bsub>CatDom F\\<^esub> X to X\""], ["proof (prove)\nusing this:\n  Category (CatDom F)\n\ngoal (1 subgoal):\n 1. id\\<^bsub>CatDom F\\<^esub> X maps\\<^bsub>CatDom F\\<^esub> X to X", "using a"], ["proof (prove)\nusing this:\n  Category (CatDom F)\n  X \\<in> obj\\<^bsub>CatDom F\\<^esub>\n\ngoal (1 subgoal):\n 1. id\\<^bsub>CatDom F\\<^esub> X maps\\<^bsub>CatDom F\\<^esub> X to X", "by (simp add: Category.Cidm)"], ["proof (state)\nthis:\n  id\\<^bsub>CatDom F\\<^esub> X maps\\<^bsub>CatDom F\\<^esub> X to X\n\ngoal (1 subgoal):\n 1. id\\<^bsub>CatDom F\\<^esub> X \\<in> mor\\<^bsub>CatDom F\\<^esub>", "thus ?thesis"], ["proof (prove)\nusing this:\n  id\\<^bsub>CatDom F\\<^esub> X maps\\<^bsub>CatDom F\\<^esub> X to X\n\ngoal (1 subgoal):\n 1. id\\<^bsub>CatDom F\\<^esub> X \\<in> mor\\<^bsub>CatDom F\\<^esub>", "using a"], ["proof (prove)\nusing this:\n  id\\<^bsub>CatDom F\\<^esub> X maps\\<^bsub>CatDom F\\<^esub> X to X\n  X \\<in> obj\\<^bsub>CatDom F\\<^esub>\n\ngoal (1 subgoal):\n 1. id\\<^bsub>CatDom F\\<^esub> X \\<in> mor\\<^bsub>CatDom F\\<^esub>", "by (auto)"], ["proof (state)\nthis:\n  id\\<^bsub>CatDom F\\<^esub> X \\<in> mor\\<^bsub>CatDom F\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  id\\<^bsub>CatDom F\\<^esub> X \\<in> mor\\<^bsub>CatDom F\\<^esub>\n\ngoal (1 subgoal):\n 1. PreFunctor (MakeFtor F)", "}"], ["proof (state)\nthis:\n  ?X2 \\<in> obj\\<^bsub>CatDom F\\<^esub> \\<Longrightarrow>\n  id\\<^bsub>CatDom F\\<^esub> ?X2 \\<in> mor\\<^bsub>CatDom F\\<^esub>\n\ngoal (1 subgoal):\n 1. PreFunctor (MakeFtor F)", "thus \"PreFunctor (MakeFtor F)\""], ["proof (prove)\nusing this:\n  ?X2 \\<in> obj\\<^bsub>CatDom F\\<^esub> \\<Longrightarrow>\n  id\\<^bsub>CatDom F\\<^esub> ?X2 \\<in> mor\\<^bsub>CatDom F\\<^esub>\n\ngoal (1 subgoal):\n 1. PreFunctor (MakeFtor F)", "using assms"], ["proof (prove)\nusing this:\n  ?X2 \\<in> obj\\<^bsub>CatDom F\\<^esub> \\<Longrightarrow>\n  id\\<^bsub>CatDom F\\<^esub> ?X2 \\<in> mor\\<^bsub>CatDom F\\<^esub>\n  PreFunctor F\n\ngoal (1 subgoal):\n 1. PreFunctor (MakeFtor F)", "by(auto simp add: PreFunctor_def MakeFtor_def Category.MapsToMorDomCod)"], ["proof (state)\nthis:\n  PreFunctor (MakeFtor F)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma MakeFtorMor: \"f \\<in> mor\\<^bsub>CatDom F\\<^esub> \\<Longrightarrow> MakeFtor F ## f = F ## f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> mor\\<^bsub>CatDom F\\<^esub> \\<Longrightarrow>\n    MakeFtor F ## f = F ## f", "by(simp add: MakeFtor_def)"], ["", "lemma MakeFtorObj: \n  assumes \"PreFunctor F\" and \"X \\<in> obj\\<^bsub>CatDom F\\<^esub>\"\n  shows \"MakeFtor F @@ X = F @@ X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. MakeFtor F @@ X = F @@ X", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. MakeFtor F @@ X = F @@ X", "have \"X \\<in> obj\\<^bsub>CatDom (MakeFtor F)\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<in> obj\\<^bsub>CatDom (MakeFtor F)\\<^esub>", "using assms(2)"], ["proof (prove)\nusing this:\n  X \\<in> obj\\<^bsub>CatDom F\\<^esub>\n\ngoal (1 subgoal):\n 1. X \\<in> obj\\<^bsub>CatDom (MakeFtor F)\\<^esub>", "by (simp add: MakeFtor_def)"], ["proof (state)\nthis:\n  X \\<in> obj\\<^bsub>CatDom (MakeFtor F)\\<^esub>\n\ngoal (1 subgoal):\n 1. MakeFtor F @@ X = F @@ X", "moreover"], ["proof (state)\nthis:\n  X \\<in> obj\\<^bsub>CatDom (MakeFtor F)\\<^esub>\n\ngoal (1 subgoal):\n 1. MakeFtor F @@ X = F @@ X", "have \"(F @@ X) \\<in> obj\\<^bsub>CatCod (MakeFtor F)\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F @@ X \\<in> obj\\<^bsub>CatCod (MakeFtor F)\\<^esub>", "using assms"], ["proof (prove)\nusing this:\n  PreFunctor F\n  X \\<in> obj\\<^bsub>CatDom F\\<^esub>\n\ngoal (1 subgoal):\n 1. F @@ X \\<in> obj\\<^bsub>CatCod (MakeFtor F)\\<^esub>", "by (simp add: PreFunctor.FunctorId2 MakeFtor_def)"], ["proof (state)\nthis:\n  F @@ X \\<in> obj\\<^bsub>CatCod (MakeFtor F)\\<^esub>\n\ngoal (1 subgoal):\n 1. MakeFtor F @@ X = F @@ X", "moreover"], ["proof (state)\nthis:\n  F @@ X \\<in> obj\\<^bsub>CatCod (MakeFtor F)\\<^esub>\n\ngoal (1 subgoal):\n 1. MakeFtor F @@ X = F @@ X", "have \"MakeFtor F ## id\\<^bsub>CatDom (MakeFtor F) \\<^esub>X = id\\<^bsub>CatCod (MakeFtor F) \\<^esub>(F @@ X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. MakeFtor F ## id\\<^bsub>CatDom (MakeFtor F)\\<^esub> X =\n    id\\<^bsub>CatCod (MakeFtor F)\\<^esub> (F @@ X)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. MakeFtor F ## id\\<^bsub>CatDom (MakeFtor F)\\<^esub> X =\n    id\\<^bsub>CatCod (MakeFtor F)\\<^esub> (F @@ X)", "have \"Category (CatDom F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Category (CatDom F)", "using assms(1)"], ["proof (prove)\nusing this:\n  PreFunctor F\n\ngoal (1 subgoal):\n 1. Category (CatDom F)", "by (simp add: PreFunctor_def)"], ["proof (state)\nthis:\n  Category (CatDom F)\n\ngoal (1 subgoal):\n 1. MakeFtor F ## id\\<^bsub>CatDom (MakeFtor F)\\<^esub> X =\n    id\\<^bsub>CatCod (MakeFtor F)\\<^esub> (F @@ X)", "hence \"id\\<^bsub>CatDom F \\<^esub>X  maps\\<^bsub>CatDom F\\<^esub> X to X\""], ["proof (prove)\nusing this:\n  Category (CatDom F)\n\ngoal (1 subgoal):\n 1. id\\<^bsub>CatDom F\\<^esub> X maps\\<^bsub>CatDom F\\<^esub> X to X", "using assms(2)"], ["proof (prove)\nusing this:\n  Category (CatDom F)\n  X \\<in> obj\\<^bsub>CatDom F\\<^esub>\n\ngoal (1 subgoal):\n 1. id\\<^bsub>CatDom F\\<^esub> X maps\\<^bsub>CatDom F\\<^esub> X to X", "by (auto simp add: Category.Cidm)"], ["proof (state)\nthis:\n  id\\<^bsub>CatDom F\\<^esub> X maps\\<^bsub>CatDom F\\<^esub> X to X\n\ngoal (1 subgoal):\n 1. MakeFtor F ## id\\<^bsub>CatDom (MakeFtor F)\\<^esub> X =\n    id\\<^bsub>CatCod (MakeFtor F)\\<^esub> (F @@ X)", "hence \"id\\<^bsub>CatDom F \\<^esub>X \\<in> mor\\<^bsub>CatDom F\\<^esub>\""], ["proof (prove)\nusing this:\n  id\\<^bsub>CatDom F\\<^esub> X maps\\<^bsub>CatDom F\\<^esub> X to X\n\ngoal (1 subgoal):\n 1. id\\<^bsub>CatDom F\\<^esub> X \\<in> mor\\<^bsub>CatDom F\\<^esub>", "by auto"], ["proof (state)\nthis:\n  id\\<^bsub>CatDom F\\<^esub> X \\<in> mor\\<^bsub>CatDom F\\<^esub>\n\ngoal (1 subgoal):\n 1. MakeFtor F ## id\\<^bsub>CatDom (MakeFtor F)\\<^esub> X =\n    id\\<^bsub>CatCod (MakeFtor F)\\<^esub> (F @@ X)", "hence \"MakeFtor F ## id\\<^bsub>CatDom (MakeFtor F) \\<^esub>X = F ## id\\<^bsub>CatDom F \\<^esub>X\""], ["proof (prove)\nusing this:\n  id\\<^bsub>CatDom F\\<^esub> X \\<in> mor\\<^bsub>CatDom F\\<^esub>\n\ngoal (1 subgoal):\n 1. MakeFtor F ## id\\<^bsub>CatDom (MakeFtor F)\\<^esub> X =\n    F ## id\\<^bsub>CatDom F\\<^esub> X", "by (simp add: MakeFtor_def)"], ["proof (state)\nthis:\n  MakeFtor F ## id\\<^bsub>CatDom (MakeFtor F)\\<^esub> X =\n  F ## id\\<^bsub>CatDom F\\<^esub> X\n\ngoal (1 subgoal):\n 1. MakeFtor F ## id\\<^bsub>CatDom (MakeFtor F)\\<^esub> X =\n    id\\<^bsub>CatCod (MakeFtor F)\\<^esub> (F @@ X)", "also"], ["proof (state)\nthis:\n  MakeFtor F ## id\\<^bsub>CatDom (MakeFtor F)\\<^esub> X =\n  F ## id\\<^bsub>CatDom F\\<^esub> X\n\ngoal (1 subgoal):\n 1. MakeFtor F ## id\\<^bsub>CatDom (MakeFtor F)\\<^esub> X =\n    id\\<^bsub>CatCod (MakeFtor F)\\<^esub> (F @@ X)", "have \"... = id\\<^bsub>CatCod F \\<^esub>(F @@ X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F ## id\\<^bsub>CatDom F\\<^esub> X = id\\<^bsub>CatCod F\\<^esub> (F @@ X)", "using assms"], ["proof (prove)\nusing this:\n  PreFunctor F\n  X \\<in> obj\\<^bsub>CatDom F\\<^esub>\n\ngoal (1 subgoal):\n 1. F ## id\\<^bsub>CatDom F\\<^esub> X = id\\<^bsub>CatCod F\\<^esub> (F @@ X)", "by (simp add: PreFunctor.FunctorId2)"], ["proof (state)\nthis:\n  F ## id\\<^bsub>CatDom F\\<^esub> X = id\\<^bsub>CatCod F\\<^esub> (F @@ X)\n\ngoal (1 subgoal):\n 1. MakeFtor F ## id\\<^bsub>CatDom (MakeFtor F)\\<^esub> X =\n    id\\<^bsub>CatCod (MakeFtor F)\\<^esub> (F @@ X)", "finally"], ["proof (chain)\npicking this:\n  MakeFtor F ## id\\<^bsub>CatDom (MakeFtor F)\\<^esub> X =\n  id\\<^bsub>CatCod F\\<^esub> (F @@ X)", "show ?thesis"], ["proof (prove)\nusing this:\n  MakeFtor F ## id\\<^bsub>CatDom (MakeFtor F)\\<^esub> X =\n  id\\<^bsub>CatCod F\\<^esub> (F @@ X)\n\ngoal (1 subgoal):\n 1. MakeFtor F ## id\\<^bsub>CatDom (MakeFtor F)\\<^esub> X =\n    id\\<^bsub>CatCod (MakeFtor F)\\<^esub> (F @@ X)", "by (simp add: MakeFtor_def)"], ["proof (state)\nthis:\n  MakeFtor F ## id\\<^bsub>CatDom (MakeFtor F)\\<^esub> X =\n  id\\<^bsub>CatCod (MakeFtor F)\\<^esub> (F @@ X)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  MakeFtor F ## id\\<^bsub>CatDom (MakeFtor F)\\<^esub> X =\n  id\\<^bsub>CatCod (MakeFtor F)\\<^esub> (F @@ X)\n\ngoal (1 subgoal):\n 1. MakeFtor F @@ X = F @@ X", "moreover"], ["proof (state)\nthis:\n  MakeFtor F ## id\\<^bsub>CatDom (MakeFtor F)\\<^esub> X =\n  id\\<^bsub>CatCod (MakeFtor F)\\<^esub> (F @@ X)\n\ngoal (1 subgoal):\n 1. MakeFtor F @@ X = F @@ X", "have \"PreFunctor (MakeFtor F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PreFunctor (MakeFtor F)", "using assms(1)"], ["proof (prove)\nusing this:\n  PreFunctor F\n\ngoal (1 subgoal):\n 1. PreFunctor (MakeFtor F)", "by (simp add: MakeFtorPreFtor)"], ["proof (state)\nthis:\n  PreFunctor (MakeFtor F)\n\ngoal (1 subgoal):\n 1. MakeFtor F @@ X = F @@ X", "ultimately"], ["proof (chain)\npicking this:\n  X \\<in> obj\\<^bsub>CatDom (MakeFtor F)\\<^esub>\n  F @@ X \\<in> obj\\<^bsub>CatCod (MakeFtor F)\\<^esub>\n  MakeFtor F ## id\\<^bsub>CatDom (MakeFtor F)\\<^esub> X =\n  id\\<^bsub>CatCod (MakeFtor F)\\<^esub> (F @@ X)\n  PreFunctor (MakeFtor F)", "show ?thesis"], ["proof (prove)\nusing this:\n  X \\<in> obj\\<^bsub>CatDom (MakeFtor F)\\<^esub>\n  F @@ X \\<in> obj\\<^bsub>CatCod (MakeFtor F)\\<^esub>\n  MakeFtor F ## id\\<^bsub>CatDom (MakeFtor F)\\<^esub> X =\n  id\\<^bsub>CatCod (MakeFtor F)\\<^esub> (F @@ X)\n  PreFunctor (MakeFtor F)\n\ngoal (1 subgoal):\n 1. MakeFtor F @@ X = F @@ X", "by (simp add: PreFunctor.FmToFo)"], ["proof (state)\nthis:\n  MakeFtor F @@ X = F @@ X\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma MakeFtor: assumes \"FunctorM F\" shows \"Functor (MakeFtor F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Functor (MakeFtor F)", "proof(intro_locales)"], ["proof (state)\ngoal (3 subgoals):\n 1. PreFunctor (MakeFtor F)\n 2. FunctorM_axioms (MakeFtor F)\n 3. FunctorExt (MakeFtor F)", "show \"PreFunctor (MakeFtor F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PreFunctor (MakeFtor F)", "using assms"], ["proof (prove)\nusing this:\n  FunctorM F\n\ngoal (1 subgoal):\n 1. PreFunctor (MakeFtor F)", "by (simp add: MakeFtorPreFtor FunctorM_def)"], ["proof (state)\nthis:\n  PreFunctor (MakeFtor F)\n\ngoal (2 subgoals):\n 1. FunctorM_axioms (MakeFtor F)\n 2. FunctorExt (MakeFtor F)", "show \"FunctorM_axioms (MakeFtor F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. FunctorM_axioms (MakeFtor F)", "proof(auto simp add: FunctorM_axioms_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f X Y.\n       f maps\\<^bsub>CatDom (MakeFtor F)\\<^esub> X to Y \\<Longrightarrow>\n       MakeFtor F ##\n       f maps\\<^bsub>CatCod (MakeFtor F)\\<^esub> MakeFtor F @@\n           X to MakeFtor F @@ Y", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f X Y.\n       f maps\\<^bsub>CatDom (MakeFtor F)\\<^esub> X to Y \\<Longrightarrow>\n       MakeFtor F ##\n       f maps\\<^bsub>CatCod (MakeFtor F)\\<^esub> MakeFtor F @@\n           X to MakeFtor F @@ Y", "fix f X Y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f X Y.\n       f maps\\<^bsub>CatDom (MakeFtor F)\\<^esub> X to Y \\<Longrightarrow>\n       MakeFtor F ##\n       f maps\\<^bsub>CatCod (MakeFtor F)\\<^esub> MakeFtor F @@\n           X to MakeFtor F @@ Y", "assume aa: \"f maps\\<^bsub>CatDom (MakeFtor F)\\<^esub> X to Y\""], ["proof (state)\nthis:\n  f maps\\<^bsub>CatDom (MakeFtor F)\\<^esub> X to Y\n\ngoal (1 subgoal):\n 1. \\<And>f X Y.\n       f maps\\<^bsub>CatDom (MakeFtor F)\\<^esub> X to Y \\<Longrightarrow>\n       MakeFtor F ##\n       f maps\\<^bsub>CatCod (MakeFtor F)\\<^esub> MakeFtor F @@\n           X to MakeFtor F @@ Y", "show \"((MakeFtor F) ## f) maps\\<^bsub>CatCod (MakeFtor F)\\<^esub> ((MakeFtor F) @@ X) to ((MakeFtor F) @@ Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. MakeFtor F ##\n    f maps\\<^bsub>CatCod (MakeFtor F)\\<^esub> MakeFtor F @@\n        X to MakeFtor F @@ Y", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. MakeFtor F ##\n    f maps\\<^bsub>CatCod (MakeFtor F)\\<^esub> MakeFtor F @@\n        X to MakeFtor F @@ Y", "have \"((MakeFtor F) ## f) = F ## f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. MakeFtor F ## f = F ## f", "using aa"], ["proof (prove)\nusing this:\n  f maps\\<^bsub>CatDom (MakeFtor F)\\<^esub> X to Y\n\ngoal (1 subgoal):\n 1. MakeFtor F ## f = F ## f", "by (auto simp add: MakeFtor_def)"], ["proof (state)\nthis:\n  MakeFtor F ## f = F ## f\n\ngoal (1 subgoal):\n 1. MakeFtor F ##\n    f maps\\<^bsub>CatCod (MakeFtor F)\\<^esub> MakeFtor F @@\n        X to MakeFtor F @@ Y", "moreover"], ["proof (state)\nthis:\n  MakeFtor F ## f = F ## f\n\ngoal (1 subgoal):\n 1. MakeFtor F ##\n    f maps\\<^bsub>CatCod (MakeFtor F)\\<^esub> MakeFtor F @@\n        X to MakeFtor F @@ Y", "have \"((MakeFtor F) @@ X) = F @@ X\" and \"((MakeFtor F) @@ Y) = F @@ Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. MakeFtor F @@ X = F @@ X &&& MakeFtor F @@ Y = F @@ Y", "proof-"], ["proof (state)\ngoal (2 subgoals):\n 1. MakeFtor F @@ X = F @@ X\n 2. MakeFtor F @@ Y = F @@ Y", "have \"Category (CatDom F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Category (CatDom F)", "using assms"], ["proof (prove)\nusing this:\n  FunctorM F\n\ngoal (1 subgoal):\n 1. Category (CatDom F)", "by (simp add: FunctorM_def PreFunctor_def)"], ["proof (state)\nthis:\n  Category (CatDom F)\n\ngoal (2 subgoals):\n 1. MakeFtor F @@ X = F @@ X\n 2. MakeFtor F @@ Y = F @@ Y", "hence \"X \\<in> obj\\<^bsub>CatDom F\\<^esub>\" and \"Y \\<in> obj\\<^bsub>CatDom F\\<^esub>\""], ["proof (prove)\nusing this:\n  Category (CatDom F)\n\ngoal (1 subgoal):\n 1. X \\<in> obj\\<^bsub>CatDom F\\<^esub> &&&\n    Y \\<in> obj\\<^bsub>CatDom F\\<^esub>", "using aa"], ["proof (prove)\nusing this:\n  Category (CatDom F)\n  f maps\\<^bsub>CatDom (MakeFtor F)\\<^esub> X to Y\n\ngoal (1 subgoal):\n 1. X \\<in> obj\\<^bsub>CatDom F\\<^esub> &&&\n    Y \\<in> obj\\<^bsub>CatDom F\\<^esub>", "by (auto simp add: Category.MapsToObj MakeFtor_def)"], ["proof (state)\nthis:\n  X \\<in> obj\\<^bsub>CatDom F\\<^esub>\n  Y \\<in> obj\\<^bsub>CatDom F\\<^esub>\n\ngoal (2 subgoals):\n 1. MakeFtor F @@ X = F @@ X\n 2. MakeFtor F @@ Y = F @@ Y", "moreover"], ["proof (state)\nthis:\n  X \\<in> obj\\<^bsub>CatDom F\\<^esub>\n  Y \\<in> obj\\<^bsub>CatDom F\\<^esub>\n\ngoal (2 subgoals):\n 1. MakeFtor F @@ X = F @@ X\n 2. MakeFtor F @@ Y = F @@ Y", "have \"PreFunctor F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PreFunctor F", "using assms(1)"], ["proof (prove)\nusing this:\n  FunctorM F\n\ngoal (1 subgoal):\n 1. PreFunctor F", "by (simp add: FunctorM_def)"], ["proof (state)\nthis:\n  PreFunctor F\n\ngoal (2 subgoals):\n 1. MakeFtor F @@ X = F @@ X\n 2. MakeFtor F @@ Y = F @@ Y", "ultimately"], ["proof (chain)\npicking this:\n  X \\<in> obj\\<^bsub>CatDom F\\<^esub>\n  Y \\<in> obj\\<^bsub>CatDom F\\<^esub>\n  PreFunctor F", "show \"((MakeFtor F) @@ X) = F @@ X\" and \"((MakeFtor F) @@ Y) = F @@ Y\""], ["proof (prove)\nusing this:\n  X \\<in> obj\\<^bsub>CatDom F\\<^esub>\n  Y \\<in> obj\\<^bsub>CatDom F\\<^esub>\n  PreFunctor F\n\ngoal (1 subgoal):\n 1. MakeFtor F @@ X = F @@ X &&& MakeFtor F @@ Y = F @@ Y", "by (simp add: MakeFtorObj)+"], ["proof (state)\nthis:\n  MakeFtor F @@ X = F @@ X\n  MakeFtor F @@ Y = F @@ Y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  MakeFtor F @@ X = F @@ X\n  MakeFtor F @@ Y = F @@ Y\n\ngoal (1 subgoal):\n 1. MakeFtor F ##\n    f maps\\<^bsub>CatCod (MakeFtor F)\\<^esub> MakeFtor F @@\n        X to MakeFtor F @@ Y", "moreover"], ["proof (state)\nthis:\n  MakeFtor F @@ X = F @@ X\n  MakeFtor F @@ Y = F @@ Y\n\ngoal (1 subgoal):\n 1. MakeFtor F ##\n    f maps\\<^bsub>CatCod (MakeFtor F)\\<^esub> MakeFtor F @@\n        X to MakeFtor F @@ Y", "have \"F ## f maps\\<^bsub>CatCod F\\<^esub> (F @@ X) to (F @@ Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F ## f maps\\<^bsub>CatCod F\\<^esub> F @@ X to F @@ Y", "using assms(1) aa"], ["proof (prove)\nusing this:\n  FunctorM F\n  f maps\\<^bsub>CatDom (MakeFtor F)\\<^esub> X to Y\n\ngoal (1 subgoal):\n 1. F ## f maps\\<^bsub>CatCod F\\<^esub> F @@ X to F @@ Y", "by (simp add: FunctorM.FunctorCompM MakeFtor_def)"], ["proof (state)\nthis:\n  F ## f maps\\<^bsub>CatCod F\\<^esub> F @@ X to F @@ Y\n\ngoal (1 subgoal):\n 1. MakeFtor F ##\n    f maps\\<^bsub>CatCod (MakeFtor F)\\<^esub> MakeFtor F @@\n        X to MakeFtor F @@ Y", "ultimately"], ["proof (chain)\npicking this:\n  MakeFtor F ## f = F ## f\n  MakeFtor F @@ X = F @@ X\n  MakeFtor F @@ Y = F @@ Y\n  F ## f maps\\<^bsub>CatCod F\\<^esub> F @@ X to F @@ Y", "show ?thesis"], ["proof (prove)\nusing this:\n  MakeFtor F ## f = F ## f\n  MakeFtor F @@ X = F @@ X\n  MakeFtor F @@ Y = F @@ Y\n  F ## f maps\\<^bsub>CatCod F\\<^esub> F @@ X to F @@ Y\n\ngoal (1 subgoal):\n 1. MakeFtor F ##\n    f maps\\<^bsub>CatCod (MakeFtor F)\\<^esub> MakeFtor F @@\n        X to MakeFtor F @@ Y", "by (simp add: MakeFtor_def)"], ["proof (state)\nthis:\n  MakeFtor F ##\n  f maps\\<^bsub>CatCod (MakeFtor F)\\<^esub> MakeFtor F @@\n      X to MakeFtor F @@ Y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  MakeFtor F ##\n  f maps\\<^bsub>CatCod (MakeFtor F)\\<^esub> MakeFtor F @@\n      X to MakeFtor F @@ Y\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  ?f2 maps\\<^bsub>CatDom (MakeFtor F)\\<^esub> ?X2 to ?Y2 \\<Longrightarrow>\n  MakeFtor F ##\n  ?f2 maps\\<^bsub>CatCod (MakeFtor F)\\<^esub> MakeFtor F @@\n        ?X2 to MakeFtor F @@ ?Y2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  FunctorM_axioms (MakeFtor F)\n\ngoal (1 subgoal):\n 1. FunctorExt (MakeFtor F)", "show \"FunctorExt (MakeFtor F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. FunctorExt (MakeFtor F)", "by(simp add: FunctorExt_def MakeFtor_def)"], ["proof (state)\nthis:\n  FunctorExt (MakeFtor F)\n\ngoal:\nNo subgoals!", "qed"], ["", "definition \n  IdentityFunctor' :: \"('o,'m,'a) Category_scheme \\<Rightarrow> ('o,'o,'m,'m,'a,'a) Functor\" (\"FId'' _\" [70]) where\n  \"IdentityFunctor' C \\<equiv> \\<lparr>CatDom = C , CatCod = C , MapM = (\\<lambda> f . f) \\<rparr>\""], ["", "definition \n  IdentityFunctor (\"FId _\" [70]) where\n  \"IdentityFunctor C \\<equiv> MakeFtor(IdentityFunctor' C)\""], ["", "lemma IdFtor'PreFunctor: \"Category C \\<Longrightarrow> PreFunctor (FId' C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Category C \\<Longrightarrow> PreFunctor FId' C", "by(auto simp add: PreFunctor_def IdentityFunctor'_def)"], ["", "lemma IdFtor'Obj:\n  assumes \"Category C\" and \"X \\<in> obj\\<^bsub>CatDom (FId' C)\\<^esub>\"\n  shows \"(FId' C) @@ X = X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. FId' C @@ X = X", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. FId' C @@ X = X", "have \"(FId' C) ## id\\<^bsub>CatDom (FId' C)\\<^esub> X = id\\<^bsub>CatCod (FId' C)\\<^esub> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. FId' C ## id\\<^bsub>CatDom FId' C\\<^esub> X =\n    id\\<^bsub>CatCod FId' C\\<^esub> X", "by(simp add: IdentityFunctor'_def)"], ["proof (state)\nthis:\n  FId' C ## id\\<^bsub>CatDom FId' C\\<^esub> X =\n  id\\<^bsub>CatCod FId' C\\<^esub> X\n\ngoal (1 subgoal):\n 1. FId' C @@ X = X", "moreover"], ["proof (state)\nthis:\n  FId' C ## id\\<^bsub>CatDom FId' C\\<^esub> X =\n  id\\<^bsub>CatCod FId' C\\<^esub> X\n\ngoal (1 subgoal):\n 1. FId' C @@ X = X", "have \"X \\<in> obj\\<^bsub>CatCod (FId' C)\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<in> obj\\<^bsub>CatCod FId' C\\<^esub>", "using assms"], ["proof (prove)\nusing this:\n  Category C\n  X \\<in> obj\\<^bsub>CatDom FId' C\\<^esub>\n\ngoal (1 subgoal):\n 1. X \\<in> obj\\<^bsub>CatCod FId' C\\<^esub>", "by (simp add: IdentityFunctor'_def)"], ["proof (state)\nthis:\n  X \\<in> obj\\<^bsub>CatCod FId' C\\<^esub>\n\ngoal (1 subgoal):\n 1. FId' C @@ X = X", "ultimately"], ["proof (chain)\npicking this:\n  FId' C ## id\\<^bsub>CatDom FId' C\\<^esub> X =\n  id\\<^bsub>CatCod FId' C\\<^esub> X\n  X \\<in> obj\\<^bsub>CatCod FId' C\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  FId' C ## id\\<^bsub>CatDom FId' C\\<^esub> X =\n  id\\<^bsub>CatCod FId' C\\<^esub> X\n  X \\<in> obj\\<^bsub>CatCod FId' C\\<^esub>\n\ngoal (1 subgoal):\n 1. FId' C @@ X = X", "using assms"], ["proof (prove)\nusing this:\n  FId' C ## id\\<^bsub>CatDom FId' C\\<^esub> X =\n  id\\<^bsub>CatCod FId' C\\<^esub> X\n  X \\<in> obj\\<^bsub>CatCod FId' C\\<^esub>\n  Category C\n  X \\<in> obj\\<^bsub>CatDom FId' C\\<^esub>\n\ngoal (1 subgoal):\n 1. FId' C @@ X = X", "by (simp add: PreFunctor.FmToFo IdFtor'PreFunctor)"], ["proof (state)\nthis:\n  FId' C @@ X = X\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma IdFtor'FtorM:  \n  assumes \"Category C\" shows \"FunctorM (FId' C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. FunctorM FId' C", "proof(auto simp add: FunctorM_def IdFtor'PreFunctor assms FunctorM_axioms_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f X Y.\n       f maps\\<^bsub>CatDom FId' C\\<^esub> X to Y \\<Longrightarrow>\n       FId' C ##\n       f maps\\<^bsub>CatCod FId' C\\<^esub> FId' C @@ X to FId' C @@ Y", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f X Y.\n       f maps\\<^bsub>CatDom FId' C\\<^esub> X to Y \\<Longrightarrow>\n       FId' C ##\n       f maps\\<^bsub>CatCod FId' C\\<^esub> FId' C @@ X to FId' C @@ Y", "fix f X Y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f X Y.\n       f maps\\<^bsub>CatDom FId' C\\<^esub> X to Y \\<Longrightarrow>\n       FId' C ##\n       f maps\\<^bsub>CatCod FId' C\\<^esub> FId' C @@ X to FId' C @@ Y", "assume a: \"f maps\\<^bsub>CatDom (FId' C)\\<^esub> X to Y\""], ["proof (state)\nthis:\n  f maps\\<^bsub>CatDom FId' C\\<^esub> X to Y\n\ngoal (1 subgoal):\n 1. \\<And>f X Y.\n       f maps\\<^bsub>CatDom FId' C\\<^esub> X to Y \\<Longrightarrow>\n       FId' C ##\n       f maps\\<^bsub>CatCod FId' C\\<^esub> FId' C @@ X to FId' C @@ Y", "show \"((FId' C) ## f) maps\\<^bsub>CatCod (FId' C)\\<^esub> ((FId' C) @@ X) to ((FId' C) @@ Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. FId' C ## f maps\\<^bsub>CatCod FId' C\\<^esub> FId' C @@ X to FId' C @@ Y", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. FId' C ## f maps\\<^bsub>CatCod FId' C\\<^esub> FId' C @@ X to FId' C @@ Y", "have \"X \\<in> obj\\<^bsub>CatDom (FId' C)\\<^esub>\" and \"Y \\<in> obj\\<^bsub>CatDom (FId' C)\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<in> obj\\<^bsub>CatDom FId' C\\<^esub> &&&\n    Y \\<in> obj\\<^bsub>CatDom FId' C\\<^esub>", "using a assms"], ["proof (prove)\nusing this:\n  f maps\\<^bsub>CatDom FId' C\\<^esub> X to Y\n  Category C\n\ngoal (1 subgoal):\n 1. X \\<in> obj\\<^bsub>CatDom FId' C\\<^esub> &&&\n    Y \\<in> obj\\<^bsub>CatDom FId' C\\<^esub>", "by (simp add: Category.MapsToObj IdentityFunctor'_def)+"], ["proof (state)\nthis:\n  X \\<in> obj\\<^bsub>CatDom FId' C\\<^esub>\n  Y \\<in> obj\\<^bsub>CatDom FId' C\\<^esub>\n\ngoal (1 subgoal):\n 1. FId' C ## f maps\\<^bsub>CatCod FId' C\\<^esub> FId' C @@ X to FId' C @@ Y", "moreover"], ["proof (state)\nthis:\n  X \\<in> obj\\<^bsub>CatDom FId' C\\<^esub>\n  Y \\<in> obj\\<^bsub>CatDom FId' C\\<^esub>\n\ngoal (1 subgoal):\n 1. FId' C ## f maps\\<^bsub>CatCod FId' C\\<^esub> FId' C @@ X to FId' C @@ Y", "have \"(FId' C) ## f = f\" and \"CatDom (FId' C) = CatCod (FId' C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. FId' C ## f = f &&& CatDom FId' C = CatCod FId' C", "by (simp add: IdentityFunctor'_def)+"], ["proof (state)\nthis:\n  FId' C ## f = f\n  CatDom FId' C = CatCod FId' C\n\ngoal (1 subgoal):\n 1. FId' C ## f maps\\<^bsub>CatCod FId' C\\<^esub> FId' C @@ X to FId' C @@ Y", "ultimately"], ["proof (chain)\npicking this:\n  X \\<in> obj\\<^bsub>CatDom FId' C\\<^esub>\n  Y \\<in> obj\\<^bsub>CatDom FId' C\\<^esub>\n  FId' C ## f = f\n  CatDom FId' C = CatCod FId' C", "show ?thesis"], ["proof (prove)\nusing this:\n  X \\<in> obj\\<^bsub>CatDom FId' C\\<^esub>\n  Y \\<in> obj\\<^bsub>CatDom FId' C\\<^esub>\n  FId' C ## f = f\n  CatDom FId' C = CatCod FId' C\n\ngoal (1 subgoal):\n 1. FId' C ## f maps\\<^bsub>CatCod FId' C\\<^esub> FId' C @@ X to FId' C @@ Y", "using assms a"], ["proof (prove)\nusing this:\n  X \\<in> obj\\<^bsub>CatDom FId' C\\<^esub>\n  Y \\<in> obj\\<^bsub>CatDom FId' C\\<^esub>\n  FId' C ## f = f\n  CatDom FId' C = CatCod FId' C\n  Category C\n  f maps\\<^bsub>CatDom FId' C\\<^esub> X to Y\n\ngoal (1 subgoal):\n 1. FId' C ## f maps\\<^bsub>CatCod FId' C\\<^esub> FId' C @@ X to FId' C @@ Y", "by(simp add: IdFtor'Obj)"], ["proof (state)\nthis:\n  FId' C ## f maps\\<^bsub>CatCod FId' C\\<^esub> FId' C @@ X to FId' C @@ Y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  FId' C ## f maps\\<^bsub>CatCod FId' C\\<^esub> FId' C @@ X to FId' C @@ Y\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  ?f2 maps\\<^bsub>CatDom FId' C\\<^esub> ?X2 to ?Y2 \\<Longrightarrow>\n  FId' C ##\n  ?f2 maps\\<^bsub>CatCod FId' C\\<^esub> FId' C @@ ?X2 to FId' C @@ ?Y2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma IdFtorFtor:  \"Category C \\<Longrightarrow> Functor (FId C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Category C \\<Longrightarrow> Functor FId C", "by (auto simp add: IdentityFunctor_def IdFtor'FtorM intro: MakeFtor)"], ["", "definition \n  ConstFunctor' :: \"('o1,'m1,'a) Category_scheme \\<Rightarrow> \n                  ('o2,'m2,'b) Category_scheme \\<Rightarrow> 'o2 \\<Rightarrow> ('o1,'o2,'m1,'m2,'a,'b) Functor\"  where\n  \"ConstFunctor' A B b \\<equiv> \\<lparr>\n         CatDom = A , \n         CatCod = B , \n         MapM = (\\<lambda> f . (Id B) b)\n  \\<rparr>\""], ["", "definition \"ConstFunctor A B b \\<equiv> MakeFtor(ConstFunctor' A B b)\""], ["", "lemma ConstFtor' : \n  assumes \"Category A\" \"Category B\" \"b \\<in> (Obj B)\"\n  shows   \"PreFunctor (ConstFunctor' A B b)\"\n  and     \"FunctorM (ConstFunctor' A B b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PreFunctor (ConstFunctor' A B b) &&& FunctorM (ConstFunctor' A B b)", "proof-"], ["proof (state)\ngoal (2 subgoals):\n 1. PreFunctor (ConstFunctor' A B b)\n 2. FunctorM (ConstFunctor' A B b)", "show \"PreFunctor (ConstFunctor' A B b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PreFunctor (ConstFunctor' A B b)", "using assms"], ["proof (prove)\nusing this:\n  Category A\n  Category B\n  b \\<in> obj\\<^bsub>B\\<^esub>\n\ngoal (1 subgoal):\n 1. PreFunctor (ConstFunctor' A B b)", "apply (subst PreFunctor_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Category A; Category B; b \\<in> obj\\<^bsub>B\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> ((\\<forall>f g.\n                           f \\<approx>>\\<^bsub>CatDom (ConstFunctor' A B b)\\<^esub>\n                           g \\<longrightarrow>\n                           ConstFunctor' A B b ##\n                           f ;;\\<^bsub>CatDom (ConstFunctor' A B b)\\<^esub>\n                           g =\n                           ConstFunctor' A B b ##\n                           f ;;\\<^bsub>CatCod (ConstFunctor' A B b)\\<^esub>\n                           (ConstFunctor' A B b ## g)) \\<and>\n                       (\\<forall>X.\n                           X \\<in> obj\\<^bsub>CatDom (ConstFunctor' A B b)\\<^esub> \\<longrightarrow>\n                           (\\<exists>Y\\<in>obj\\<^bsub>CatCod (ConstFunctor' A B b)\\<^esub>.\n                               ConstFunctor' A B b ##\n                               id\\<^bsub>CatDom (ConstFunctor' A B b)\\<^esub> X =\n                               id\\<^bsub>CatCod (ConstFunctor' A B b)\\<^esub> Y))) \\<and>\n                      Category (CatDom (ConstFunctor' A B b)) \\<and>\n                      Category (CatCod (ConstFunctor' A B b))", "apply (rule conjI)+"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Category A; Category B; b \\<in> obj\\<^bsub>B\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> \\<forall>f g.\n                         f \\<approx>>\\<^bsub>CatDom (ConstFunctor' A B b)\\<^esub>\n                         g \\<longrightarrow>\n                         ConstFunctor' A B b ##\n                         f ;;\\<^bsub>CatDom (ConstFunctor' A B b)\\<^esub>\n                         g =\n                         ConstFunctor' A B b ##\n                         f ;;\\<^bsub>CatCod (ConstFunctor' A B b)\\<^esub>\n                         (ConstFunctor' A B b ## g)\n 2. \\<lbrakk>Category A; Category B; b \\<in> obj\\<^bsub>B\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> \\<forall>X.\n                         X \\<in> obj\\<^bsub>CatDom (ConstFunctor' A B b)\\<^esub> \\<longrightarrow>\n                         (\\<exists>Y\\<in>obj\\<^bsub>CatCod (ConstFunctor' A B b)\\<^esub>.\n                             ConstFunctor' A B b ##\n                             id\\<^bsub>CatDom (ConstFunctor' A B b)\\<^esub> X =\n                             id\\<^bsub>CatCod (ConstFunctor' A B b)\\<^esub> Y)\n 3. \\<lbrakk>Category A; Category B; b \\<in> obj\\<^bsub>B\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> Category (CatDom (ConstFunctor' A B b)) \\<and>\n                      Category (CatCod (ConstFunctor' A B b))", "by (auto simp add: ConstFunctor'_def Category.Simps Category.CatIdCompId)"], ["proof (state)\nthis:\n  PreFunctor (ConstFunctor' A B b)\n\ngoal (1 subgoal):\n 1. FunctorM (ConstFunctor' A B b)", "moreover"], ["proof (state)\nthis:\n  PreFunctor (ConstFunctor' A B b)\n\ngoal (1 subgoal):\n 1. FunctorM (ConstFunctor' A B b)", "{"], ["proof (state)\nthis:\n  PreFunctor (ConstFunctor' A B b)\n\ngoal (1 subgoal):\n 1. FunctorM (ConstFunctor' A B b)", "fix X"], ["proof (state)\ngoal (1 subgoal):\n 1. FunctorM (ConstFunctor' A B b)", "assume \"X \\<in> obj\\<^bsub>A\\<^esub>\" \"b \\<in> obj\\<^bsub>B\\<^esub>\" \"PreFunctor (ConstFunctor' A B b)\""], ["proof (state)\nthis:\n  X \\<in> obj\\<^bsub>A\\<^esub>\n  b \\<in> obj\\<^bsub>B\\<^esub>\n  PreFunctor (ConstFunctor' A B b)\n\ngoal (1 subgoal):\n 1. FunctorM (ConstFunctor' A B b)", "hence \"(ConstFunctor' A B b) @@ X = b\""], ["proof (prove)\nusing this:\n  X \\<in> obj\\<^bsub>A\\<^esub>\n  b \\<in> obj\\<^bsub>B\\<^esub>\n  PreFunctor (ConstFunctor' A B b)\n\ngoal (1 subgoal):\n 1. ConstFunctor' A B b @@ X = b", "by (auto simp add: ConstFunctor'_def PreFunctor.FmToFo Category.Simps)"], ["proof (state)\nthis:\n  ConstFunctor' A B b @@ X = b\n\ngoal (1 subgoal):\n 1. FunctorM (ConstFunctor' A B b)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?X2 \\<in> obj\\<^bsub>A\\<^esub>; b \\<in> obj\\<^bsub>B\\<^esub>;\n   PreFunctor (ConstFunctor' A B b)\\<rbrakk>\n  \\<Longrightarrow> ConstFunctor' A B b @@ ?X2 = b\n\ngoal (1 subgoal):\n 1. FunctorM (ConstFunctor' A B b)", "ultimately"], ["proof (chain)\npicking this:\n  PreFunctor (ConstFunctor' A B b)\n  \\<lbrakk>?X2 \\<in> obj\\<^bsub>A\\<^esub>; b \\<in> obj\\<^bsub>B\\<^esub>;\n   PreFunctor (ConstFunctor' A B b)\\<rbrakk>\n  \\<Longrightarrow> ConstFunctor' A B b @@ ?X2 = b", "show \"FunctorM (ConstFunctor' A B b)\""], ["proof (prove)\nusing this:\n  PreFunctor (ConstFunctor' A B b)\n  \\<lbrakk>?X2 \\<in> obj\\<^bsub>A\\<^esub>; b \\<in> obj\\<^bsub>B\\<^esub>;\n   PreFunctor (ConstFunctor' A B b)\\<rbrakk>\n  \\<Longrightarrow> ConstFunctor' A B b @@ ?X2 = b\n\ngoal (1 subgoal):\n 1. FunctorM (ConstFunctor' A B b)", "using assms"], ["proof (prove)\nusing this:\n  PreFunctor (ConstFunctor' A B b)\n  \\<lbrakk>?X2 \\<in> obj\\<^bsub>A\\<^esub>; b \\<in> obj\\<^bsub>B\\<^esub>;\n   PreFunctor (ConstFunctor' A B b)\\<rbrakk>\n  \\<Longrightarrow> ConstFunctor' A B b @@ ?X2 = b\n  Category A\n  Category B\n  b \\<in> obj\\<^bsub>B\\<^esub>\n\ngoal (1 subgoal):\n 1. FunctorM (ConstFunctor' A B b)", "by (intro_locales, auto simp add: ConstFunctor'_def Category.Simps FunctorM_axioms_def)"], ["proof (state)\nthis:\n  FunctorM (ConstFunctor' A B b)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ConstFtor: \n  assumes \"Category A\" \"Category B\" \"b \\<in> (Obj B)\"\n  shows \"Functor (ConstFunctor A B b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Functor (ConstFunctor A B b)", "by (auto simp add: assms ConstFtor' ConstFunctor_def MakeFtor)"], ["", "definition \n  UnitFunctor :: \"('o,'m,'a) Category_scheme \\<Rightarrow> ('o,unit,'m,unit,'a,unit) Functor\"  where\n  \"UnitFunctor C \\<equiv> ConstFunctor C UnitCategory ()\""], ["", "lemma UnitFtor: \n  assumes \"Category C\" \n  shows \"Functor(UnitFunctor C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Functor (UnitFunctor C)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Functor (UnitFunctor C)", "have \"() \\<in> obj\\<^bsub>UnitCategory\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. () \\<in> obj\\<^bsub>UnitCategory\\<^esub>", "by (simp add: UnitCategory_def MakeCatObj)"], ["proof (state)\nthis:\n  () \\<in> obj\\<^bsub>UnitCategory\\<^esub>\n\ngoal (1 subgoal):\n 1. Functor (UnitFunctor C)", "hence \"Functor(ConstFunctor C UnitCategory ())\""], ["proof (prove)\nusing this:\n  () \\<in> obj\\<^bsub>UnitCategory\\<^esub>\n\ngoal (1 subgoal):\n 1. Functor (ConstFunctor C UnitCategory ())", "using assms"], ["proof (prove)\nusing this:\n  () \\<in> obj\\<^bsub>UnitCategory\\<^esub>\n  Category C\n\ngoal (1 subgoal):\n 1. Functor (ConstFunctor C UnitCategory ())", "by (simp add: ConstFtor)"], ["proof (state)\nthis:\n  Functor (ConstFunctor C UnitCategory ())\n\ngoal (1 subgoal):\n 1. Functor (UnitFunctor C)", "thus ?thesis"], ["proof (prove)\nusing this:\n  Functor (ConstFunctor C UnitCategory ())\n\ngoal (1 subgoal):\n 1. Functor (UnitFunctor C)", "by (simp add: UnitFunctor_def)"], ["proof (state)\nthis:\n  Functor (UnitFunctor C)\n\ngoal:\nNo subgoals!", "qed"], ["", "definition\n  FunctorComp' :: \"('o1,'o2,'m1,'m2,'a1,'a2) Functor \\<Rightarrow> ('o2,'o3,'m2,'m3,'b1,'b2) Functor\n                    \\<Rightarrow> ('o1,'o3,'m1,'m3,'a1,'b2) Functor\" (infixl \";;:\" 71) where\n  \"FunctorComp' F G \\<equiv> \\<lparr>\n        CatDom = CatDom F , \n        CatCod = CatCod G ,\n        MapM   = \\<lambda> f . (MapM G)((MapM F) f)\n  \\<rparr>\""], ["", "definition FunctorComp (infixl \";;;\" 71) where \"FunctorComp F G \\<equiv> MakeFtor (FunctorComp' F G)\""], ["", "lemma FtorCompComp':\n  assumes \"f \\<approx>>\\<^bsub>CatDom F\\<^esub> g\"\n  and \"F \\<approx>>;;; G\"\n  shows \"G ## (F ## (f ;;\\<^bsub>CatDom F\\<^esub> g)) = (G ## (F ## f)) ;;\\<^bsub>CatCod G\\<^esub> (G ## (F ## g))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G ## F ## f ;;\\<^bsub>CatDom F\\<^esub> g =\n    G ## F ## f ;;\\<^bsub>CatCod G\\<^esub> (G ## F ## g)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. G ## F ## f ;;\\<^bsub>CatDom F\\<^esub> g =\n    G ## F ## f ;;\\<^bsub>CatCod G\\<^esub> (G ## F ## g)", "have [simp]: \"PreFunctor G \\<and> PreFunctor F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PreFunctor G \\<and> PreFunctor F", "using assms"], ["proof (prove)\nusing this:\n  f \\<approx>>\\<^bsub>CatDom F\\<^esub> g\n  F \\<approx>>;;; G\n\ngoal (1 subgoal):\n 1. PreFunctor G \\<and> PreFunctor F", "by auto"], ["proof (state)\nthis:\n  PreFunctor G \\<and> PreFunctor F\n\ngoal (1 subgoal):\n 1. G ## F ## f ;;\\<^bsub>CatDom F\\<^esub> g =\n    G ## F ## f ;;\\<^bsub>CatCod G\\<^esub> (G ## F ## g)", "have [simp]: \"(F ## f) \\<approx>>\\<^bsub>CatDom G\\<^esub> (F ## g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F ## f \\<approx>>\\<^bsub>CatDom G\\<^esub> F ## g", "using assms"], ["proof (prove)\nusing this:\n  f \\<approx>>\\<^bsub>CatDom F\\<^esub> g\n  F \\<approx>>;;; G\n\ngoal (1 subgoal):\n 1. F ## f \\<approx>>\\<^bsub>CatDom G\\<^esub> F ## g", "by (auto simp add: Functor.FunctorCompDef[of F f g])"], ["proof (state)\nthis:\n  F ## f \\<approx>>\\<^bsub>CatDom G\\<^esub> F ## g\n\ngoal (1 subgoal):\n 1. G ## F ## f ;;\\<^bsub>CatDom F\\<^esub> g =\n    G ## F ## f ;;\\<^bsub>CatCod G\\<^esub> (G ## F ## g)", "have \"F ## (f ;;\\<^bsub>CatDom F\\<^esub> g) = (F ## f) ;;\\<^bsub>CatCod F\\<^esub> (F ## g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F ## f ;;\\<^bsub>CatDom F\\<^esub> g =\n    F ## f ;;\\<^bsub>CatCod F\\<^esub> (F ## g)", "using assms"], ["proof (prove)\nusing this:\n  f \\<approx>>\\<^bsub>CatDom F\\<^esub> g\n  F \\<approx>>;;; G\n\ngoal (1 subgoal):\n 1. F ## f ;;\\<^bsub>CatDom F\\<^esub> g =\n    F ## f ;;\\<^bsub>CatCod F\\<^esub> (F ## g)", "by (auto simp add: PreFunctor.FunctorComp)"], ["proof (state)\nthis:\n  F ## f ;;\\<^bsub>CatDom F\\<^esub> g =\n  F ## f ;;\\<^bsub>CatCod F\\<^esub> (F ## g)\n\ngoal (1 subgoal):\n 1. G ## F ## f ;;\\<^bsub>CatDom F\\<^esub> g =\n    G ## F ## f ;;\\<^bsub>CatCod G\\<^esub> (G ## F ## g)", "hence \"G ## (F ## (f ;;\\<^bsub>CatDom F\\<^esub> g)) = G ## ((F ## f) ;;\\<^bsub>CatCod F\\<^esub> (F ## g))\""], ["proof (prove)\nusing this:\n  F ## f ;;\\<^bsub>CatDom F\\<^esub> g =\n  F ## f ;;\\<^bsub>CatCod F\\<^esub> (F ## g)\n\ngoal (1 subgoal):\n 1. G ## F ## f ;;\\<^bsub>CatDom F\\<^esub> g =\n    G ## F ## f ;;\\<^bsub>CatCod F\\<^esub> (F ## g)", "by simp"], ["proof (state)\nthis:\n  G ## F ## f ;;\\<^bsub>CatDom F\\<^esub> g =\n  G ## F ## f ;;\\<^bsub>CatCod F\\<^esub> (F ## g)\n\ngoal (1 subgoal):\n 1. G ## F ## f ;;\\<^bsub>CatDom F\\<^esub> g =\n    G ## F ## f ;;\\<^bsub>CatCod G\\<^esub> (G ## F ## g)", "also"], ["proof (state)\nthis:\n  G ## F ## f ;;\\<^bsub>CatDom F\\<^esub> g =\n  G ## F ## f ;;\\<^bsub>CatCod F\\<^esub> (F ## g)\n\ngoal (1 subgoal):\n 1. G ## F ## f ;;\\<^bsub>CatDom F\\<^esub> g =\n    G ## F ## f ;;\\<^bsub>CatCod G\\<^esub> (G ## F ## g)", "have \"... = G ## ((F ## f) ;;\\<^bsub>CatDom G\\<^esub> (F ## g))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G ## F ## f ;;\\<^bsub>CatCod F\\<^esub> (F ## g) =\n    G ## F ## f ;;\\<^bsub>CatDom G\\<^esub> (F ## g)", "using assms"], ["proof (prove)\nusing this:\n  f \\<approx>>\\<^bsub>CatDom F\\<^esub> g\n  F \\<approx>>;;; G\n\ngoal (1 subgoal):\n 1. G ## F ## f ;;\\<^bsub>CatCod F\\<^esub> (F ## g) =\n    G ## F ## f ;;\\<^bsub>CatDom G\\<^esub> (F ## g)", "by auto"], ["proof (state)\nthis:\n  G ## F ## f ;;\\<^bsub>CatCod F\\<^esub> (F ## g) =\n  G ## F ## f ;;\\<^bsub>CatDom G\\<^esub> (F ## g)\n\ngoal (1 subgoal):\n 1. G ## F ## f ;;\\<^bsub>CatDom F\\<^esub> g =\n    G ## F ## f ;;\\<^bsub>CatCod G\\<^esub> (G ## F ## g)", "also"], ["proof (state)\nthis:\n  G ## F ## f ;;\\<^bsub>CatCod F\\<^esub> (F ## g) =\n  G ## F ## f ;;\\<^bsub>CatDom G\\<^esub> (F ## g)\n\ngoal (1 subgoal):\n 1. G ## F ## f ;;\\<^bsub>CatDom F\\<^esub> g =\n    G ## F ## f ;;\\<^bsub>CatCod G\\<^esub> (G ## F ## g)", "have \"... = (G ## (F ## f)) ;;\\<^bsub>CatCod G\\<^esub> (G ## (F ## g))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G ## F ## f ;;\\<^bsub>CatDom G\\<^esub> (F ## g) =\n    G ## F ## f ;;\\<^bsub>CatCod G\\<^esub> (G ## F ## g)", "by (simp add: PreFunctor.FunctorComp[of G \"(F ## f)\" \"(F ## g)\"])"], ["proof (state)\nthis:\n  G ## F ## f ;;\\<^bsub>CatDom G\\<^esub> (F ## g) =\n  G ## F ## f ;;\\<^bsub>CatCod G\\<^esub> (G ## F ## g)\n\ngoal (1 subgoal):\n 1. G ## F ## f ;;\\<^bsub>CatDom F\\<^esub> g =\n    G ## F ## f ;;\\<^bsub>CatCod G\\<^esub> (G ## F ## g)", "finally"], ["proof (chain)\npicking this:\n  G ## F ## f ;;\\<^bsub>CatDom F\\<^esub> g =\n  G ## F ## f ;;\\<^bsub>CatCod G\\<^esub> (G ## F ## g)", "show ?thesis"], ["proof (prove)\nusing this:\n  G ## F ## f ;;\\<^bsub>CatDom F\\<^esub> g =\n  G ## F ## f ;;\\<^bsub>CatCod G\\<^esub> (G ## F ## g)\n\ngoal (1 subgoal):\n 1. G ## F ## f ;;\\<^bsub>CatDom F\\<^esub> g =\n    G ## F ## f ;;\\<^bsub>CatCod G\\<^esub> (G ## F ## g)", "by simp"], ["proof (state)\nthis:\n  G ## F ## f ;;\\<^bsub>CatDom F\\<^esub> g =\n  G ## F ## f ;;\\<^bsub>CatCod G\\<^esub> (G ## F ## g)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma FtorCompId: \n  assumes a: \"X \\<in> (Obj (CatDom F))\"\n  and \"F \\<approx>>;;; G\"\n  shows \"G ## (F ## (id\\<^bsub>CatDom F \\<^esub>X)) = id\\<^bsub>CatCod G\\<^esub>(G @@ (F @@ X)) \\<and> G @@ (F @@ X) \\<in> (Obj (CatCod G))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G ## F ## id\\<^bsub>CatDom F\\<^esub> X =\n    id\\<^bsub>CatCod G\\<^esub> (G @@ F @@ X) \\<and>\n    G @@ F @@ X \\<in> obj\\<^bsub>CatCod G\\<^esub>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. G ## F ## id\\<^bsub>CatDom F\\<^esub> X =\n    id\\<^bsub>CatCod G\\<^esub> (G @@ F @@ X) \\<and>\n    G @@ F @@ X \\<in> obj\\<^bsub>CatCod G\\<^esub>", "have [simp]: \"PreFunctor G \\<and> PreFunctor F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PreFunctor G \\<and> PreFunctor F", "using assms"], ["proof (prove)\nusing this:\n  X \\<in> obj\\<^bsub>CatDom F\\<^esub>\n  F \\<approx>>;;; G\n\ngoal (1 subgoal):\n 1. PreFunctor G \\<and> PreFunctor F", "by auto"], ["proof (state)\nthis:\n  PreFunctor G \\<and> PreFunctor F\n\ngoal (1 subgoal):\n 1. G ## F ## id\\<^bsub>CatDom F\\<^esub> X =\n    id\\<^bsub>CatCod G\\<^esub> (G @@ F @@ X) \\<and>\n    G @@ F @@ X \\<in> obj\\<^bsub>CatCod G\\<^esub>", "have b: \"(F @@ X) \\<in> obj\\<^bsub>CatDom G\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F @@ X \\<in> obj\\<^bsub>CatDom G\\<^esub>", "using assms"], ["proof (prove)\nusing this:\n  X \\<in> obj\\<^bsub>CatDom F\\<^esub>\n  F \\<approx>>;;; G\n\ngoal (1 subgoal):\n 1. F @@ X \\<in> obj\\<^bsub>CatDom G\\<^esub>", "by (auto simp add: PreFunctor.FunctorId2)"], ["proof (state)\nthis:\n  F @@ X \\<in> obj\\<^bsub>CatDom G\\<^esub>\n\ngoal (1 subgoal):\n 1. G ## F ## id\\<^bsub>CatDom F\\<^esub> X =\n    id\\<^bsub>CatCod G\\<^esub> (G @@ F @@ X) \\<and>\n    G @@ F @@ X \\<in> obj\\<^bsub>CatCod G\\<^esub>", "have \"G ## F ## (id\\<^bsub>CatDom F \\<^esub>X) = G ## (id\\<^bsub>CatCod F\\<^esub>(F @@ X))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G ## F ## id\\<^bsub>CatDom F\\<^esub> X =\n    G ## id\\<^bsub>CatCod F\\<^esub> (F @@ X)", "using b a"], ["proof (prove)\nusing this:\n  F @@ X \\<in> obj\\<^bsub>CatDom G\\<^esub>\n  X \\<in> obj\\<^bsub>CatDom F\\<^esub>\n\ngoal (1 subgoal):\n 1. G ## F ## id\\<^bsub>CatDom F\\<^esub> X =\n    G ## id\\<^bsub>CatCod F\\<^esub> (F @@ X)", "by (simp add: PreFunctor.FunctorId2[of F \"X\"])"], ["proof (state)\nthis:\n  G ## F ## id\\<^bsub>CatDom F\\<^esub> X =\n  G ## id\\<^bsub>CatCod F\\<^esub> (F @@ X)\n\ngoal (1 subgoal):\n 1. G ## F ## id\\<^bsub>CatDom F\\<^esub> X =\n    id\\<^bsub>CatCod G\\<^esub> (G @@ F @@ X) \\<and>\n    G @@ F @@ X \\<in> obj\\<^bsub>CatCod G\\<^esub>", "also"], ["proof (state)\nthis:\n  G ## F ## id\\<^bsub>CatDom F\\<^esub> X =\n  G ## id\\<^bsub>CatCod F\\<^esub> (F @@ X)\n\ngoal (1 subgoal):\n 1. G ## F ## id\\<^bsub>CatDom F\\<^esub> X =\n    id\\<^bsub>CatCod G\\<^esub> (G @@ F @@ X) \\<and>\n    G @@ F @@ X \\<in> obj\\<^bsub>CatCod G\\<^esub>", "have \"... = G ## (id\\<^bsub>CatDom G\\<^esub>(F @@ X))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G ## id\\<^bsub>CatCod F\\<^esub> (F @@ X) =\n    G ## id\\<^bsub>CatDom G\\<^esub> (F @@ X)", "using assms"], ["proof (prove)\nusing this:\n  X \\<in> obj\\<^bsub>CatDom F\\<^esub>\n  F \\<approx>>;;; G\n\ngoal (1 subgoal):\n 1. G ## id\\<^bsub>CatCod F\\<^esub> (F @@ X) =\n    G ## id\\<^bsub>CatDom G\\<^esub> (F @@ X)", "by auto"], ["proof (state)\nthis:\n  G ## id\\<^bsub>CatCod F\\<^esub> (F @@ X) =\n  G ## id\\<^bsub>CatDom G\\<^esub> (F @@ X)\n\ngoal (1 subgoal):\n 1. G ## F ## id\\<^bsub>CatDom F\\<^esub> X =\n    id\\<^bsub>CatCod G\\<^esub> (G @@ F @@ X) \\<and>\n    G @@ F @@ X \\<in> obj\\<^bsub>CatCod G\\<^esub>", "also"], ["proof (state)\nthis:\n  G ## id\\<^bsub>CatCod F\\<^esub> (F @@ X) =\n  G ## id\\<^bsub>CatDom G\\<^esub> (F @@ X)\n\ngoal (1 subgoal):\n 1. G ## F ## id\\<^bsub>CatDom F\\<^esub> X =\n    id\\<^bsub>CatCod G\\<^esub> (G @@ F @@ X) \\<and>\n    G @@ F @@ X \\<in> obj\\<^bsub>CatCod G\\<^esub>", "have \"... = id\\<^bsub>CatCod G\\<^esub>(G @@ (F @@ X)) \\<and> G @@ (F @@ X) \\<in> (Obj (CatCod G))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G ## id\\<^bsub>CatDom G\\<^esub> (F @@ X) =\n    id\\<^bsub>CatCod G\\<^esub> (G @@ F @@ X) \\<and>\n    G @@ F @@ X \\<in> obj\\<^bsub>CatCod G\\<^esub>", "using b"], ["proof (prove)\nusing this:\n  F @@ X \\<in> obj\\<^bsub>CatDom G\\<^esub>\n\ngoal (1 subgoal):\n 1. G ## id\\<^bsub>CatDom G\\<^esub> (F @@ X) =\n    id\\<^bsub>CatCod G\\<^esub> (G @@ F @@ X) \\<and>\n    G @@ F @@ X \\<in> obj\\<^bsub>CatCod G\\<^esub>", "by (simp add: PreFunctor.FunctorId2[of G \"(F @@ X)\"])"], ["proof (state)\nthis:\n  G ## id\\<^bsub>CatDom G\\<^esub> (F @@ X) =\n  id\\<^bsub>CatCod G\\<^esub> (G @@ F @@ X) \\<and>\n  G @@ F @@ X \\<in> obj\\<^bsub>CatCod G\\<^esub>\n\ngoal (1 subgoal):\n 1. G ## F ## id\\<^bsub>CatDom F\\<^esub> X =\n    id\\<^bsub>CatCod G\\<^esub> (G @@ F @@ X) \\<and>\n    G @@ F @@ X \\<in> obj\\<^bsub>CatCod G\\<^esub>", "finally"], ["proof (chain)\npicking this:\n  G ## F ## id\\<^bsub>CatDom F\\<^esub> X =\n  id\\<^bsub>CatCod G\\<^esub> (G @@ F @@ X) \\<and>\n  G @@ F @@ X \\<in> obj\\<^bsub>CatCod G\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  G ## F ## id\\<^bsub>CatDom F\\<^esub> X =\n  id\\<^bsub>CatCod G\\<^esub> (G @@ F @@ X) \\<and>\n  G @@ F @@ X \\<in> obj\\<^bsub>CatCod G\\<^esub>\n\ngoal (1 subgoal):\n 1. G ## F ## id\\<^bsub>CatDom F\\<^esub> X =\n    id\\<^bsub>CatCod G\\<^esub> (G @@ F @@ X) \\<and>\n    G @@ F @@ X \\<in> obj\\<^bsub>CatCod G\\<^esub>", "by simp"], ["proof (state)\nthis:\n  G ## F ## id\\<^bsub>CatDom F\\<^esub> X =\n  id\\<^bsub>CatCod G\\<^esub> (G @@ F @@ X) \\<and>\n  G @@ F @@ X \\<in> obj\\<^bsub>CatCod G\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma FtorCompIdDef: \n  assumes a: \"X \\<in> (Obj (CatDom F))\" and b: \"PreFunctor (F ;;: G)\" \n  and \"F \\<approx>>;;; G\"\n  shows \"(F ;;: G) @@ X = (G @@ (F @@ X))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F ;;: G @@ X = G @@ F @@ X", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. F ;;: G @@ X = G @@ F @@ X", "have \"(F ;;: G) ## (id\\<^bsub>CatDom (F ;;: G)\\<^esub>(X)) = G ## (F ## (id\\<^bsub>CatDom F\\<^esub>(X)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F ;;: G ## id\\<^bsub>CatDom (F ;;: G)\\<^esub> X =\n    G ## F ## id\\<^bsub>CatDom F\\<^esub> X", "using assms"], ["proof (prove)\nusing this:\n  X \\<in> obj\\<^bsub>CatDom F\\<^esub>\n  PreFunctor (F ;;: G)\n  F \\<approx>>;;; G\n\ngoal (1 subgoal):\n 1. F ;;: G ## id\\<^bsub>CatDom (F ;;: G)\\<^esub> X =\n    G ## F ## id\\<^bsub>CatDom F\\<^esub> X", "by (simp add: FunctorComp'_def)"], ["proof (state)\nthis:\n  F ;;: G ## id\\<^bsub>CatDom (F ;;: G)\\<^esub> X =\n  G ## F ## id\\<^bsub>CatDom F\\<^esub> X\n\ngoal (1 subgoal):\n 1. F ;;: G @@ X = G @@ F @@ X", "also"], ["proof (state)\nthis:\n  F ;;: G ## id\\<^bsub>CatDom (F ;;: G)\\<^esub> X =\n  G ## F ## id\\<^bsub>CatDom F\\<^esub> X\n\ngoal (1 subgoal):\n 1. F ;;: G @@ X = G @@ F @@ X", "have \"... = id\\<^bsub>CatCod G\\<^esub>(G @@ (F @@ (X)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G ## F ## id\\<^bsub>CatDom F\\<^esub> X =\n    id\\<^bsub>CatCod G\\<^esub> (G @@ F @@ X)", "using assms a"], ["proof (prove)\nusing this:\n  X \\<in> obj\\<^bsub>CatDom F\\<^esub>\n  PreFunctor (F ;;: G)\n  F \\<approx>>;;; G\n  X \\<in> obj\\<^bsub>CatDom F\\<^esub>\n\ngoal (1 subgoal):\n 1. G ## F ## id\\<^bsub>CatDom F\\<^esub> X =\n    id\\<^bsub>CatCod G\\<^esub> (G @@ F @@ X)", "by(auto simp add: FtorCompId[of _ F G])"], ["proof (state)\nthis:\n  G ## F ## id\\<^bsub>CatDom F\\<^esub> X =\n  id\\<^bsub>CatCod G\\<^esub> (G @@ F @@ X)\n\ngoal (1 subgoal):\n 1. F ;;: G @@ X = G @@ F @@ X", "finally"], ["proof (chain)\npicking this:\n  F ;;: G ## id\\<^bsub>CatDom (F ;;: G)\\<^esub> X =\n  id\\<^bsub>CatCod G\\<^esub> (G @@ F @@ X)", "have \"(F ;;: G) ## (id\\<^bsub>CatDom (F ;;: G)\\<^esub>(X)) = id\\<^bsub>CatCod (F ;;: G)\\<^esub>(G @@ (F @@ X))\""], ["proof (prove)\nusing this:\n  F ;;: G ## id\\<^bsub>CatDom (F ;;: G)\\<^esub> X =\n  id\\<^bsub>CatCod G\\<^esub> (G @@ F @@ X)\n\ngoal (1 subgoal):\n 1. F ;;: G ## id\\<^bsub>CatDom (F ;;: G)\\<^esub> X =\n    id\\<^bsub>CatCod (F ;;: G)\\<^esub> (G @@ F @@ X)", "using assms"], ["proof (prove)\nusing this:\n  F ;;: G ## id\\<^bsub>CatDom (F ;;: G)\\<^esub> X =\n  id\\<^bsub>CatCod G\\<^esub> (G @@ F @@ X)\n  X \\<in> obj\\<^bsub>CatDom F\\<^esub>\n  PreFunctor (F ;;: G)\n  F \\<approx>>;;; G\n\ngoal (1 subgoal):\n 1. F ;;: G ## id\\<^bsub>CatDom (F ;;: G)\\<^esub> X =\n    id\\<^bsub>CatCod (F ;;: G)\\<^esub> (G @@ F @@ X)", "by (simp add: FunctorComp'_def)"], ["proof (state)\nthis:\n  F ;;: G ## id\\<^bsub>CatDom (F ;;: G)\\<^esub> X =\n  id\\<^bsub>CatCod (F ;;: G)\\<^esub> (G @@ F @@ X)\n\ngoal (1 subgoal):\n 1. F ;;: G @@ X = G @@ F @@ X", "moreover"], ["proof (state)\nthis:\n  F ;;: G ## id\\<^bsub>CatDom (F ;;: G)\\<^esub> X =\n  id\\<^bsub>CatCod (F ;;: G)\\<^esub> (G @@ F @@ X)\n\ngoal (1 subgoal):\n 1. F ;;: G @@ X = G @@ F @@ X", "have \"G @@ (F @@ (X)) \\<in> (Obj (CatCod (F ;;: G)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G @@ F @@ X \\<in> obj\\<^bsub>CatCod (F ;;: G)\\<^esub>", "using assms a"], ["proof (prove)\nusing this:\n  X \\<in> obj\\<^bsub>CatDom F\\<^esub>\n  PreFunctor (F ;;: G)\n  F \\<approx>>;;; G\n  X \\<in> obj\\<^bsub>CatDom F\\<^esub>\n\ngoal (1 subgoal):\n 1. G @@ F @@ X \\<in> obj\\<^bsub>CatCod (F ;;: G)\\<^esub>", "by(auto simp add: FtorCompId[of _ F G] FunctorComp'_def)"], ["proof (state)\nthis:\n  G @@ F @@ X \\<in> obj\\<^bsub>CatCod (F ;;: G)\\<^esub>\n\ngoal (1 subgoal):\n 1. F ;;: G @@ X = G @@ F @@ X", "moreover"], ["proof (state)\nthis:\n  G @@ F @@ X \\<in> obj\\<^bsub>CatCod (F ;;: G)\\<^esub>\n\ngoal (1 subgoal):\n 1. F ;;: G @@ X = G @@ F @@ X", "have \"X \\<in> obj\\<^bsub>CatDom (F ;;: G)\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<in> obj\\<^bsub>CatDom (F ;;: G)\\<^esub>", "using a"], ["proof (prove)\nusing this:\n  X \\<in> obj\\<^bsub>CatDom F\\<^esub>\n\ngoal (1 subgoal):\n 1. X \\<in> obj\\<^bsub>CatDom (F ;;: G)\\<^esub>", "by (simp add: FunctorComp'_def)"], ["proof (state)\nthis:\n  X \\<in> obj\\<^bsub>CatDom (F ;;: G)\\<^esub>\n\ngoal (1 subgoal):\n 1. F ;;: G @@ X = G @@ F @@ X", "ultimately"], ["proof (chain)\npicking this:\n  F ;;: G ## id\\<^bsub>CatDom (F ;;: G)\\<^esub> X =\n  id\\<^bsub>CatCod (F ;;: G)\\<^esub> (G @@ F @@ X)\n  G @@ F @@ X \\<in> obj\\<^bsub>CatCod (F ;;: G)\\<^esub>\n  X \\<in> obj\\<^bsub>CatDom (F ;;: G)\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  F ;;: G ## id\\<^bsub>CatDom (F ;;: G)\\<^esub> X =\n  id\\<^bsub>CatCod (F ;;: G)\\<^esub> (G @@ F @@ X)\n  G @@ F @@ X \\<in> obj\\<^bsub>CatCod (F ;;: G)\\<^esub>\n  X \\<in> obj\\<^bsub>CatDom (F ;;: G)\\<^esub>\n\ngoal (1 subgoal):\n 1. F ;;: G @@ X = G @@ F @@ X", "using b"], ["proof (prove)\nusing this:\n  F ;;: G ## id\\<^bsub>CatDom (F ;;: G)\\<^esub> X =\n  id\\<^bsub>CatCod (F ;;: G)\\<^esub> (G @@ F @@ X)\n  G @@ F @@ X \\<in> obj\\<^bsub>CatCod (F ;;: G)\\<^esub>\n  X \\<in> obj\\<^bsub>CatDom (F ;;: G)\\<^esub>\n  PreFunctor (F ;;: G)\n\ngoal (1 subgoal):\n 1. F ;;: G @@ X = G @@ F @@ X", "by (simp add: PreFunctor.FmToFo[of \"F ;;: G\" X \"G @@ (F @@ X)\"])"], ["proof (state)\nthis:\n  F ;;: G @@ X = G @@ F @@ X\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma FunctorCompMapsTo: \n  assumes \"f \\<in> mor\\<^bsub>CatDom (F ;;: G)\\<^esub>\" and \"F \\<approx>>;;; G\"\n  shows \"(G ## (F ## f)) maps\\<^bsub>CatCod G\\<^esub> (G @@ (F @@ (dom\\<^bsub>CatDom F\\<^esub> f))) to (G @@ (F @@ (cod\\<^bsub>CatDom F\\<^esub> f)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G ##\n    F ##\n    f maps\\<^bsub>CatCod G\\<^esub> G @@\n                                   F @@\n                                   dom\\<^bsub>CatDom F\\<^esub> f to G @@\n                              F @@ cod\\<^bsub>CatDom F\\<^esub> f", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. G ##\n    F ##\n    f maps\\<^bsub>CatCod G\\<^esub> G @@\n                                   F @@\n                                   dom\\<^bsub>CatDom F\\<^esub> f to G @@\n                              F @@ cod\\<^bsub>CatDom F\\<^esub> f", "have \"f \\<in> mor\\<^bsub>CatDom F \\<^esub>\\<and> Functor F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> mor\\<^bsub>CatDom F\\<^esub> \\<and> Functor F", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> mor\\<^bsub>CatDom (F ;;: G)\\<^esub>\n  F \\<approx>>;;; G\n\ngoal (1 subgoal):\n 1. f \\<in> mor\\<^bsub>CatDom F\\<^esub> \\<and> Functor F", "by (auto simp add: FunctorComp'_def)"], ["proof (state)\nthis:\n  f \\<in> mor\\<^bsub>CatDom F\\<^esub> \\<and> Functor F\n\ngoal (1 subgoal):\n 1. G ##\n    F ##\n    f maps\\<^bsub>CatCod G\\<^esub> G @@\n                                   F @@\n                                   dom\\<^bsub>CatDom F\\<^esub> f to G @@\n                              F @@ cod\\<^bsub>CatDom F\\<^esub> f", "hence \"(F ## f) maps\\<^bsub>CatDom G\\<^esub> (F @@ (dom\\<^bsub>CatDom F\\<^esub> f)) to (F @@ (cod\\<^bsub>CatDom F\\<^esub> f))\""], ["proof (prove)\nusing this:\n  f \\<in> mor\\<^bsub>CatDom F\\<^esub> \\<and> Functor F\n\ngoal (1 subgoal):\n 1. F ##\n    f maps\\<^bsub>CatDom G\\<^esub> F @@\n                                   dom\\<^bsub>CatDom F\\<^esub> f to F @@\n                              cod\\<^bsub>CatDom F\\<^esub> f", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> mor\\<^bsub>CatDom F\\<^esub> \\<and> Functor F\n  f \\<in> mor\\<^bsub>CatDom (F ;;: G)\\<^esub>\n  F \\<approx>>;;; G\n\ngoal (1 subgoal):\n 1. F ##\n    f maps\\<^bsub>CatDom G\\<^esub> F @@\n                                   dom\\<^bsub>CatDom F\\<^esub> f to F @@\n                              cod\\<^bsub>CatDom F\\<^esub> f", "by (auto simp add: Functor.FunctorMapsTo[of F f])"], ["proof (state)\nthis:\n  F ##\n  f maps\\<^bsub>CatDom G\\<^esub> F @@\n                                 dom\\<^bsub>CatDom F\\<^esub> f to F @@\n                            cod\\<^bsub>CatDom F\\<^esub> f\n\ngoal (1 subgoal):\n 1. G ##\n    F ##\n    f maps\\<^bsub>CatCod G\\<^esub> G @@\n                                   F @@\n                                   dom\\<^bsub>CatDom F\\<^esub> f to G @@\n                              F @@ cod\\<^bsub>CatDom F\\<^esub> f", "moreover"], ["proof (state)\nthis:\n  F ##\n  f maps\\<^bsub>CatDom G\\<^esub> F @@\n                                 dom\\<^bsub>CatDom F\\<^esub> f to F @@\n                            cod\\<^bsub>CatDom F\\<^esub> f\n\ngoal (1 subgoal):\n 1. G ##\n    F ##\n    f maps\\<^bsub>CatCod G\\<^esub> G @@\n                                   F @@\n                                   dom\\<^bsub>CatDom F\\<^esub> f to G @@\n                              F @@ cod\\<^bsub>CatDom F\\<^esub> f", "have \"FunctorM G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. FunctorM G", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> mor\\<^bsub>CatDom (F ;;: G)\\<^esub>\n  F \\<approx>>;;; G\n\ngoal (1 subgoal):\n 1. FunctorM G", "by (auto simp add: FunctorComp_def Functor_def)"], ["proof (state)\nthis:\n  FunctorM G\n\ngoal (1 subgoal):\n 1. G ##\n    F ##\n    f maps\\<^bsub>CatCod G\\<^esub> G @@\n                                   F @@\n                                   dom\\<^bsub>CatDom F\\<^esub> f to G @@\n                              F @@ cod\\<^bsub>CatDom F\\<^esub> f", "ultimately"], ["proof (chain)\npicking this:\n  F ##\n  f maps\\<^bsub>CatDom G\\<^esub> F @@\n                                 dom\\<^bsub>CatDom F\\<^esub> f to F @@\n                            cod\\<^bsub>CatDom F\\<^esub> f\n  FunctorM G", "show ?thesis"], ["proof (prove)\nusing this:\n  F ##\n  f maps\\<^bsub>CatDom G\\<^esub> F @@\n                                 dom\\<^bsub>CatDom F\\<^esub> f to F @@\n                            cod\\<^bsub>CatDom F\\<^esub> f\n  FunctorM G\n\ngoal (1 subgoal):\n 1. G ##\n    F ##\n    f maps\\<^bsub>CatCod G\\<^esub> G @@\n                                   F @@\n                                   dom\\<^bsub>CatDom F\\<^esub> f to G @@\n                              F @@ cod\\<^bsub>CatDom F\\<^esub> f", "by(simp add: FunctorM.FunctorCompM[of G \"F ## f\" \"F @@ (dom\\<^bsub>CatDom F\\<^esub> f)\" \"F @@ (cod\\<^bsub>CatDom F\\<^esub> f)\"])"], ["proof (state)\nthis:\n  G ##\n  F ##\n  f maps\\<^bsub>CatCod G\\<^esub> G @@\n                                 F @@\n                                 dom\\<^bsub>CatDom F\\<^esub> f to G @@\n                            F @@ cod\\<^bsub>CatDom F\\<^esub> f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma FunctorCompMapsTo2:\n  assumes \"f \\<in> mor\\<^bsub>CatDom (F ;;: G)\\<^esub>\" \n  and \"F \\<approx>>;;; G\"\n  and \"PreFunctor (F ;;: G)\" \n  shows \"((F ;;: G) ## f) maps\\<^bsub>CatCod (F ;;: G)\\<^esub> ((F ;;: G) @@ (dom\\<^bsub>CatDom (F ;;: G)\\<^esub> f)) to \n                                               ((F ;;: G) @@ (cod\\<^bsub>CatDom (F ;;: G)\\<^esub> f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F ;;: G ##\n    f maps\\<^bsub>CatCod (F ;;: G)\\<^esub> F ;;: G @@\n     dom\\<^bsub>CatDom (F ;;: G)\\<^esub> f to F ;;: G @@\n        cod\\<^bsub>CatDom (F ;;: G)\\<^esub> f", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. F ;;: G ##\n    f maps\\<^bsub>CatCod (F ;;: G)\\<^esub> F ;;: G @@\n     dom\\<^bsub>CatDom (F ;;: G)\\<^esub> f to F ;;: G @@\n        cod\\<^bsub>CatDom (F ;;: G)\\<^esub> f", "have \"Category (CatDom (F ;;: G))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Category (CatDom (F ;;: G))", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> mor\\<^bsub>CatDom (F ;;: G)\\<^esub>\n  F \\<approx>>;;; G\n  PreFunctor (F ;;: G)\n\ngoal (1 subgoal):\n 1. Category (CatDom (F ;;: G))", "by (simp add: PreFunctor_def)"], ["proof (state)\nthis:\n  Category (CatDom (F ;;: G))\n\ngoal (1 subgoal):\n 1. F ;;: G ##\n    f maps\\<^bsub>CatCod (F ;;: G)\\<^esub> F ;;: G @@\n     dom\\<^bsub>CatDom (F ;;: G)\\<^esub> f to F ;;: G @@\n        cod\\<^bsub>CatDom (F ;;: G)\\<^esub> f", "hence 1: \"(dom\\<^bsub>CatDom (F ;;: G)\\<^esub> f) \\<in> obj\\<^bsub>CatDom F \\<^esub>\\<and> (cod\\<^bsub>CatDom (F ;;: G)\\<^esub> f) \\<in> obj\\<^bsub>CatDom F\\<^esub>\""], ["proof (prove)\nusing this:\n  Category (CatDom (F ;;: G))\n\ngoal (1 subgoal):\n 1. dom\\<^bsub>CatDom (F ;;: G)\\<^esub> f\n    \\<in> obj\\<^bsub>CatDom F\\<^esub> \\<and>\n    cod\\<^bsub>CatDom (F ;;: G)\\<^esub> f \\<in> obj\\<^bsub>CatDom F\\<^esub>", "using assms"], ["proof (prove)\nusing this:\n  Category (CatDom (F ;;: G))\n  f \\<in> mor\\<^bsub>CatDom (F ;;: G)\\<^esub>\n  F \\<approx>>;;; G\n  PreFunctor (F ;;: G)\n\ngoal (1 subgoal):\n 1. dom\\<^bsub>CatDom (F ;;: G)\\<^esub> f\n    \\<in> obj\\<^bsub>CatDom F\\<^esub> \\<and>\n    cod\\<^bsub>CatDom (F ;;: G)\\<^esub> f \\<in> obj\\<^bsub>CatDom F\\<^esub>", "by (auto simp add: Category.Simps FunctorComp'_def)"], ["proof (state)\nthis:\n  dom\\<^bsub>CatDom (F ;;: G)\\<^esub> f\n  \\<in> obj\\<^bsub>CatDom F\\<^esub> \\<and>\n  cod\\<^bsub>CatDom (F ;;: G)\\<^esub> f \\<in> obj\\<^bsub>CatDom F\\<^esub>\n\ngoal (1 subgoal):\n 1. F ;;: G ##\n    f maps\\<^bsub>CatCod (F ;;: G)\\<^esub> F ;;: G @@\n     dom\\<^bsub>CatDom (F ;;: G)\\<^esub> f to F ;;: G @@\n        cod\\<^bsub>CatDom (F ;;: G)\\<^esub> f", "have \"(G ## (F ## f)) maps\\<^bsub>CatCod G\\<^esub> (G @@ (F @@ (dom\\<^bsub>CatDom F\\<^esub> f))) to (G @@ (F @@ (cod\\<^bsub>CatDom F\\<^esub> f)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G ##\n    F ##\n    f maps\\<^bsub>CatCod G\\<^esub> G @@\n                                   F @@\n                                   dom\\<^bsub>CatDom F\\<^esub> f to G @@\n                              F @@ cod\\<^bsub>CatDom F\\<^esub> f", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> mor\\<^bsub>CatDom (F ;;: G)\\<^esub>\n  F \\<approx>>;;; G\n  PreFunctor (F ;;: G)\n\ngoal (1 subgoal):\n 1. G ##\n    F ##\n    f maps\\<^bsub>CatCod G\\<^esub> G @@\n                                   F @@\n                                   dom\\<^bsub>CatDom F\\<^esub> f to G @@\n                              F @@ cod\\<^bsub>CatDom F\\<^esub> f", "by (auto simp add: FunctorCompMapsTo[of f F G])"], ["proof (state)\nthis:\n  G ##\n  F ##\n  f maps\\<^bsub>CatCod G\\<^esub> G @@\n                                 F @@\n                                 dom\\<^bsub>CatDom F\\<^esub> f to G @@\n                            F @@ cod\\<^bsub>CatDom F\\<^esub> f\n\ngoal (1 subgoal):\n 1. F ;;: G ##\n    f maps\\<^bsub>CatCod (F ;;: G)\\<^esub> F ;;: G @@\n     dom\\<^bsub>CatDom (F ;;: G)\\<^esub> f to F ;;: G @@\n        cod\\<^bsub>CatDom (F ;;: G)\\<^esub> f", "moreover"], ["proof (state)\nthis:\n  G ##\n  F ##\n  f maps\\<^bsub>CatCod G\\<^esub> G @@\n                                 F @@\n                                 dom\\<^bsub>CatDom F\\<^esub> f to G @@\n                            F @@ cod\\<^bsub>CatDom F\\<^esub> f\n\ngoal (1 subgoal):\n 1. F ;;: G ##\n    f maps\\<^bsub>CatCod (F ;;: G)\\<^esub> F ;;: G @@\n     dom\\<^bsub>CatDom (F ;;: G)\\<^esub> f to F ;;: G @@\n        cod\\<^bsub>CatDom (F ;;: G)\\<^esub> f", "have \"CatDom F = CatDom(F ;;: G) \\<and> CatCod G = CatCod(F ;;: G) \\<and> (G ## (F ## f)) = ((F ;;: G) ## f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CatDom F = CatDom (F ;;: G) \\<and>\n    CatCod G = CatCod (F ;;: G) \\<and> G ## F ## f = F ;;: G ## f", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> mor\\<^bsub>CatDom (F ;;: G)\\<^esub>\n  F \\<approx>>;;; G\n  PreFunctor (F ;;: G)\n\ngoal (1 subgoal):\n 1. CatDom F = CatDom (F ;;: G) \\<and>\n    CatCod G = CatCod (F ;;: G) \\<and> G ## F ## f = F ;;: G ## f", "by (simp add: FunctorComp'_def)"], ["proof (state)\nthis:\n  CatDom F = CatDom (F ;;: G) \\<and>\n  CatCod G = CatCod (F ;;: G) \\<and> G ## F ## f = F ;;: G ## f\n\ngoal (1 subgoal):\n 1. F ;;: G ##\n    f maps\\<^bsub>CatCod (F ;;: G)\\<^esub> F ;;: G @@\n     dom\\<^bsub>CatDom (F ;;: G)\\<^esub> f to F ;;: G @@\n        cod\\<^bsub>CatDom (F ;;: G)\\<^esub> f", "moreover"], ["proof (state)\nthis:\n  CatDom F = CatDom (F ;;: G) \\<and>\n  CatCod G = CatCod (F ;;: G) \\<and> G ## F ## f = F ;;: G ## f\n\ngoal (1 subgoal):\n 1. F ;;: G ##\n    f maps\\<^bsub>CatCod (F ;;: G)\\<^esub> F ;;: G @@\n     dom\\<^bsub>CatDom (F ;;: G)\\<^esub> f to F ;;: G @@\n        cod\\<^bsub>CatDom (F ;;: G)\\<^esub> f", "have \"(F ;;: G) @@ (dom\\<^bsub>CatDom (F ;;: G)\\<^esub> f) = (G @@ (F @@ (dom\\<^bsub>CatDom(F ;;: G)\\<^esub> f))) \\<and>\n        (F ;;: G) @@ (cod\\<^bsub>CatDom (F ;;: G)\\<^esub> f) = (G @@ (F @@ (cod\\<^bsub>CatDom(F ;;: G)\\<^esub> f)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F ;;: G @@ dom\\<^bsub>CatDom (F ;;: G)\\<^esub> f =\n    G @@ F @@ dom\\<^bsub>CatDom (F ;;: G)\\<^esub> f \\<and>\n    F ;;: G @@ cod\\<^bsub>CatDom (F ;;: G)\\<^esub> f =\n    G @@ F @@ cod\\<^bsub>CatDom (F ;;: G)\\<^esub> f", "by (auto simp add: FtorCompIdDef[of _ F G] 1 assms)"], ["proof (state)\nthis:\n  F ;;: G @@ dom\\<^bsub>CatDom (F ;;: G)\\<^esub> f =\n  G @@ F @@ dom\\<^bsub>CatDom (F ;;: G)\\<^esub> f \\<and>\n  F ;;: G @@ cod\\<^bsub>CatDom (F ;;: G)\\<^esub> f =\n  G @@ F @@ cod\\<^bsub>CatDom (F ;;: G)\\<^esub> f\n\ngoal (1 subgoal):\n 1. F ;;: G ##\n    f maps\\<^bsub>CatCod (F ;;: G)\\<^esub> F ;;: G @@\n     dom\\<^bsub>CatDom (F ;;: G)\\<^esub> f to F ;;: G @@\n        cod\\<^bsub>CatDom (F ;;: G)\\<^esub> f", "ultimately"], ["proof (chain)\npicking this:\n  G ##\n  F ##\n  f maps\\<^bsub>CatCod G\\<^esub> G @@\n                                 F @@\n                                 dom\\<^bsub>CatDom F\\<^esub> f to G @@\n                            F @@ cod\\<^bsub>CatDom F\\<^esub> f\n  CatDom F = CatDom (F ;;: G) \\<and>\n  CatCod G = CatCod (F ;;: G) \\<and> G ## F ## f = F ;;: G ## f\n  F ;;: G @@ dom\\<^bsub>CatDom (F ;;: G)\\<^esub> f =\n  G @@ F @@ dom\\<^bsub>CatDom (F ;;: G)\\<^esub> f \\<and>\n  F ;;: G @@ cod\\<^bsub>CatDom (F ;;: G)\\<^esub> f =\n  G @@ F @@ cod\\<^bsub>CatDom (F ;;: G)\\<^esub> f", "show ?thesis"], ["proof (prove)\nusing this:\n  G ##\n  F ##\n  f maps\\<^bsub>CatCod G\\<^esub> G @@\n                                 F @@\n                                 dom\\<^bsub>CatDom F\\<^esub> f to G @@\n                            F @@ cod\\<^bsub>CatDom F\\<^esub> f\n  CatDom F = CatDom (F ;;: G) \\<and>\n  CatCod G = CatCod (F ;;: G) \\<and> G ## F ## f = F ;;: G ## f\n  F ;;: G @@ dom\\<^bsub>CatDom (F ;;: G)\\<^esub> f =\n  G @@ F @@ dom\\<^bsub>CatDom (F ;;: G)\\<^esub> f \\<and>\n  F ;;: G @@ cod\\<^bsub>CatDom (F ;;: G)\\<^esub> f =\n  G @@ F @@ cod\\<^bsub>CatDom (F ;;: G)\\<^esub> f\n\ngoal (1 subgoal):\n 1. F ;;: G ##\n    f maps\\<^bsub>CatCod (F ;;: G)\\<^esub> F ;;: G @@\n     dom\\<^bsub>CatDom (F ;;: G)\\<^esub> f to F ;;: G @@\n        cod\\<^bsub>CatDom (F ;;: G)\\<^esub> f", "by auto"], ["proof (state)\nthis:\n  F ;;: G ##\n  f maps\\<^bsub>CatCod (F ;;: G)\\<^esub> F ;;: G @@\n   dom\\<^bsub>CatDom (F ;;: G)\\<^esub> f to F ;;: G @@\n      cod\\<^bsub>CatDom (F ;;: G)\\<^esub> f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma FunctorCompMapsTo3:\n  assumes \"f maps\\<^bsub>CatDom (F ;;: G)\\<^esub> X to Y\"\n  and \"F \\<approx>>;;; G\"\n  and \"PreFunctor (F ;;: G)\" \n  shows \"F ;;: G ## f maps\\<^bsub>CatCod (F ;;: G)\\<^esub> F ;;: G @@ X to F ;;: G @@ Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F ;;: G ##\n    f maps\\<^bsub>CatCod (F ;;: G)\\<^esub> F ;;: G @@ X to F ;;: G @@ Y", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. F ;;: G ##\n    f maps\\<^bsub>CatCod (F ;;: G)\\<^esub> F ;;: G @@ X to F ;;: G @@ Y", "have  \"f \\<in> mor\\<^bsub>CatDom (F ;;: G)\\<^esub>\" \n    and \"dom\\<^bsub>CatDom (F ;;: G)\\<^esub> f = X\" \n    and \"cod\\<^bsub>CatDom (F ;;: G)\\<^esub> f = Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> mor\\<^bsub>CatDom (F ;;: G)\\<^esub> &&&\n    dom\\<^bsub>CatDom (F ;;: G)\\<^esub> f = X &&&\n    cod\\<^bsub>CatDom (F ;;: G)\\<^esub> f = Y", "using assms"], ["proof (prove)\nusing this:\n  f maps\\<^bsub>CatDom (F ;;: G)\\<^esub> X to Y\n  F \\<approx>>;;; G\n  PreFunctor (F ;;: G)\n\ngoal (1 subgoal):\n 1. f \\<in> mor\\<^bsub>CatDom (F ;;: G)\\<^esub> &&&\n    dom\\<^bsub>CatDom (F ;;: G)\\<^esub> f = X &&&\n    cod\\<^bsub>CatDom (F ;;: G)\\<^esub> f = Y", "by auto"], ["proof (state)\nthis:\n  f \\<in> mor\\<^bsub>CatDom (F ;;: G)\\<^esub>\n  dom\\<^bsub>CatDom (F ;;: G)\\<^esub> f = X\n  cod\\<^bsub>CatDom (F ;;: G)\\<^esub> f = Y\n\ngoal (1 subgoal):\n 1. F ;;: G ##\n    f maps\\<^bsub>CatCod (F ;;: G)\\<^esub> F ;;: G @@ X to F ;;: G @@ Y", "thus ?thesis"], ["proof (prove)\nusing this:\n  f \\<in> mor\\<^bsub>CatDom (F ;;: G)\\<^esub>\n  dom\\<^bsub>CatDom (F ;;: G)\\<^esub> f = X\n  cod\\<^bsub>CatDom (F ;;: G)\\<^esub> f = Y\n\ngoal (1 subgoal):\n 1. F ;;: G ##\n    f maps\\<^bsub>CatCod (F ;;: G)\\<^esub> F ;;: G @@ X to F ;;: G @@ Y", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> mor\\<^bsub>CatDom (F ;;: G)\\<^esub>\n  dom\\<^bsub>CatDom (F ;;: G)\\<^esub> f = X\n  cod\\<^bsub>CatDom (F ;;: G)\\<^esub> f = Y\n  f maps\\<^bsub>CatDom (F ;;: G)\\<^esub> X to Y\n  F \\<approx>>;;; G\n  PreFunctor (F ;;: G)\n\ngoal (1 subgoal):\n 1. F ;;: G ##\n    f maps\\<^bsub>CatCod (F ;;: G)\\<^esub> F ;;: G @@ X to F ;;: G @@ Y", "by (auto intro: FunctorCompMapsTo2)"], ["proof (state)\nthis:\n  F ;;: G ##\n  f maps\\<^bsub>CatCod (F ;;: G)\\<^esub> F ;;: G @@ X to F ;;: G @@ Y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma FtorCompPreFtor:\n  assumes \"F \\<approx>>;;; G\"\n  shows   \"PreFunctor (F ;;: G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PreFunctor (F ;;: G)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. PreFunctor (F ;;: G)", "have 1: \"PreFunctor G \\<and> PreFunctor F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PreFunctor G \\<and> PreFunctor F", "using assms"], ["proof (prove)\nusing this:\n  F \\<approx>>;;; G\n\ngoal (1 subgoal):\n 1. PreFunctor G \\<and> PreFunctor F", "by auto"], ["proof (state)\nthis:\n  PreFunctor G \\<and> PreFunctor F\n\ngoal (1 subgoal):\n 1. PreFunctor (F ;;: G)", "show \"PreFunctor (F ;;: G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PreFunctor (F ;;: G)", "using assms"], ["proof (prove)\nusing this:\n  F \\<approx>>;;; G\n\ngoal (1 subgoal):\n 1. PreFunctor (F ;;: G)", "proof(auto simp add: PreFunctor_def FunctorComp'_def Category.Simps\n       FtorCompId[of _ F G] intro:FtorCompComp')"], ["proof (state)\ngoal (2 subgoals):\n 1. F \\<approx>>;;; G \\<Longrightarrow> Category (CatDom F)\n 2. F \\<approx>>;;; G \\<Longrightarrow> Category (CatCod G)", "show \"Category (CatDom F)\" and \"Category (CatCod G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Category (CatDom F) &&& Category (CatCod G)", "using assms 1"], ["proof (prove)\nusing this:\n  F \\<approx>>;;; G\n  PreFunctor G \\<and> PreFunctor F\n\ngoal (1 subgoal):\n 1. Category (CatDom F) &&& Category (CatCod G)", "by (auto simp add: PreFunctor_def)"], ["proof (state)\nthis:\n  Category (CatDom F)\n  Category (CatCod G)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  PreFunctor (F ;;: G)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma FtorCompM : \n  assumes \"F \\<approx>>;;; G\"\n  shows   \"FunctorM (F ;;: G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. FunctorM (F ;;: G)", "proof(auto simp only: FunctorM_def)"], ["proof (state)\ngoal (2 subgoals):\n 1. PreFunctor (F ;;: G)\n 2. FunctorM_axioms (F ;;: G)", "show 1: \"PreFunctor (F ;;: G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PreFunctor (F ;;: G)", "using assms"], ["proof (prove)\nusing this:\n  F \\<approx>>;;; G\n\ngoal (1 subgoal):\n 1. PreFunctor (F ;;: G)", "by (rule FtorCompPreFtor)"], ["proof (state)\nthis:\n  PreFunctor (F ;;: G)\n\ngoal (1 subgoal):\n 1. FunctorM_axioms (F ;;: G)", "{"], ["proof (state)\nthis:\n  PreFunctor (F ;;: G)\n\ngoal (1 subgoal):\n 1. FunctorM_axioms (F ;;: G)", "fix X Y f"], ["proof (state)\ngoal (1 subgoal):\n 1. FunctorM_axioms (F ;;: G)", "assume a: \"f maps\\<^bsub>CatDom (F ;;: G)\\<^esub> X to Y\""], ["proof (state)\nthis:\n  f maps\\<^bsub>CatDom (F ;;: G)\\<^esub> X to Y\n\ngoal (1 subgoal):\n 1. FunctorM_axioms (F ;;: G)", "have \"F ;;: G ## f maps\\<^bsub>CatCod (F ;;: G)\\<^esub> F ;;: G @@ X to F ;;: G @@ Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F ;;: G ##\n    f maps\\<^bsub>CatCod (F ;;: G)\\<^esub> F ;;: G @@ X to F ;;: G @@ Y", "using a assms 1"], ["proof (prove)\nusing this:\n  f maps\\<^bsub>CatDom (F ;;: G)\\<^esub> X to Y\n  F \\<approx>>;;; G\n  PreFunctor (F ;;: G)\n\ngoal (1 subgoal):\n 1. F ;;: G ##\n    f maps\\<^bsub>CatCod (F ;;: G)\\<^esub> F ;;: G @@ X to F ;;: G @@ Y", "by (rule FunctorCompMapsTo3)"], ["proof (state)\nthis:\n  F ;;: G ##\n  f maps\\<^bsub>CatCod (F ;;: G)\\<^esub> F ;;: G @@ X to F ;;: G @@ Y\n\ngoal (1 subgoal):\n 1. FunctorM_axioms (F ;;: G)", "}"], ["proof (state)\nthis:\n  ?f2 maps\\<^bsub>CatDom (F ;;: G)\\<^esub> ?X2 to ?Y2 \\<Longrightarrow>\n  F ;;: G ##\n  ?f2 maps\\<^bsub>CatCod (F ;;: G)\\<^esub> F ;;: G @@ ?X2 to F ;;: G @@ ?Y2\n\ngoal (1 subgoal):\n 1. FunctorM_axioms (F ;;: G)", "thus \"FunctorM_axioms (F ;;: G)\""], ["proof (prove)\nusing this:\n  ?f2 maps\\<^bsub>CatDom (F ;;: G)\\<^esub> ?X2 to ?Y2 \\<Longrightarrow>\n  F ;;: G ##\n  ?f2 maps\\<^bsub>CatCod (F ;;: G)\\<^esub> F ;;: G @@ ?X2 to F ;;: G @@ ?Y2\n\ngoal (1 subgoal):\n 1. FunctorM_axioms (F ;;: G)", "by(auto simp add: 1 FunctorM_axioms_def)"], ["proof (state)\nthis:\n  FunctorM_axioms (F ;;: G)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma FtorComp:   \n  assumes \"F \\<approx>>;;; G\"\n  shows   \"Functor (F ;;; G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Functor (F ;;; G)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Functor (F ;;; G)", "have \"FunctorM (F ;;: G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. FunctorM (F ;;: G)", "using assms"], ["proof (prove)\nusing this:\n  F \\<approx>>;;; G\n\ngoal (1 subgoal):\n 1. FunctorM (F ;;: G)", "by (rule FtorCompM)"], ["proof (state)\nthis:\n  FunctorM (F ;;: G)\n\ngoal (1 subgoal):\n 1. Functor (F ;;; G)", "thus ?thesis"], ["proof (prove)\nusing this:\n  FunctorM (F ;;: G)\n\ngoal (1 subgoal):\n 1. Functor (F ;;; G)", "by (simp add: FunctorComp_def MakeFtor)"], ["proof (state)\nthis:\n  Functor (F ;;; G)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in Functor) FunctorPreservesIso: \n  assumes     \"ciso\\<^bsub>CatDom F\\<^esub> k\"\n  shows       \"ciso\\<^bsub>CatCod F\\<^esub> (F ## k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ciso\\<^bsub>CatCod F\\<^esub> F ## k", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. ciso\\<^bsub>CatCod F\\<^esub> F ## k", "have [simp]: \"k \\<in> mor\\<^bsub>CatDom F\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<in> mor\\<^bsub>CatDom F\\<^esub>", "using assms"], ["proof (prove)\nusing this:\n  ciso\\<^bsub>CatDom F\\<^esub> k\n\ngoal (1 subgoal):\n 1. k \\<in> mor\\<^bsub>CatDom F\\<^esub>", "by (simp add: Category.IsoIsMor)"], ["proof (state)\nthis:\n  k \\<in> mor\\<^bsub>CatDom F\\<^esub>\n\ngoal (1 subgoal):\n 1. ciso\\<^bsub>CatCod F\\<^esub> F ## k", "have \"cinv\\<^bsub>CatCod F\\<^esub> (F ## k) (F ## (Cinv\\<^bsub>CatDom F\\<^esub> k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cinv\\<^bsub>CatCod F\\<^esub> F ## k F ## Cinv\\<^bsub>CatDom F\\<^esub> k", "proof(rule Category.Inverse_relI)"], ["proof (state)\ngoal (4 subgoals):\n 1. Category (CatCod F)\n 2. F ## k \\<approx>>\\<^bsub>CatCod F\\<^esub>\n    F ## Cinv\\<^bsub>CatDom F\\<^esub> k\n 3. F ## k ;;\\<^bsub>CatCod F\\<^esub>\n    (F ## Cinv\\<^bsub>CatDom F\\<^esub> k) =\n    id\\<^bsub>CatCod F\\<^esub> (dom\\<^bsub>CatCod F\\<^esub> (F ## k))\n 4. F ## Cinv\\<^bsub>CatDom F\\<^esub> k ;;\\<^bsub>CatCod F\\<^esub>\n    (F ## k) =\n    id\\<^bsub>CatCod F\\<^esub> (cod\\<^bsub>CatCod F\\<^esub> (F ## k))", "show \"Category (CatCod F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Category (CatCod F)", "by simp"], ["proof (state)\nthis:\n  Category (CatCod F)\n\ngoal (3 subgoals):\n 1. F ## k \\<approx>>\\<^bsub>CatCod F\\<^esub>\n    F ## Cinv\\<^bsub>CatDom F\\<^esub> k\n 2. F ## k ;;\\<^bsub>CatCod F\\<^esub>\n    (F ## Cinv\\<^bsub>CatDom F\\<^esub> k) =\n    id\\<^bsub>CatCod F\\<^esub> (dom\\<^bsub>CatCod F\\<^esub> (F ## k))\n 3. F ## Cinv\\<^bsub>CatDom F\\<^esub> k ;;\\<^bsub>CatCod F\\<^esub>\n    (F ## k) =\n    id\\<^bsub>CatCod F\\<^esub> (cod\\<^bsub>CatCod F\\<^esub> (F ## k))", "show \"(F ## k) \\<approx>>\\<^bsub>CatCod F\\<^esub> (F ## (Cinv\\<^bsub>CatDom F\\<^esub> k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F ## k \\<approx>>\\<^bsub>CatCod F\\<^esub>\n    F ## Cinv\\<^bsub>CatDom F\\<^esub> k", "by (rule FunctorCompDef, simp add: Category.IsoCompInv assms)"], ["proof (state)\nthis:\n  F ## k \\<approx>>\\<^bsub>CatCod F\\<^esub>\n  F ## Cinv\\<^bsub>CatDom F\\<^esub> k\n\ngoal (2 subgoals):\n 1. F ## k ;;\\<^bsub>CatCod F\\<^esub>\n    (F ## Cinv\\<^bsub>CatDom F\\<^esub> k) =\n    id\\<^bsub>CatCod F\\<^esub> (dom\\<^bsub>CatCod F\\<^esub> (F ## k))\n 2. F ## Cinv\\<^bsub>CatDom F\\<^esub> k ;;\\<^bsub>CatCod F\\<^esub>\n    (F ## k) =\n    id\\<^bsub>CatCod F\\<^esub> (cod\\<^bsub>CatCod F\\<^esub> (F ## k))", "show \"(F ## k) ;;\\<^bsub>CatCod F\\<^esub> (F ## (Cinv\\<^bsub>CatDom F\\<^esub> k)) = id\\<^bsub>CatCod F\\<^esub> (dom\\<^bsub>CatCod F\\<^esub> (F ## k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F ## k ;;\\<^bsub>CatCod F\\<^esub>\n    (F ## Cinv\\<^bsub>CatDom F\\<^esub> k) =\n    id\\<^bsub>CatCod F\\<^esub> (dom\\<^bsub>CatCod F\\<^esub> (F ## k))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. F ## k ;;\\<^bsub>CatCod F\\<^esub>\n    (F ## Cinv\\<^bsub>CatDom F\\<^esub> k) =\n    id\\<^bsub>CatCod F\\<^esub> (dom\\<^bsub>CatCod F\\<^esub> (F ## k))", "have      \"(F ## k) ;;\\<^bsub>CatCod F\\<^esub> (F ## (Cinv\\<^bsub>CatDom F\\<^esub> k)) = F ## (k ;;\\<^bsub>CatDom F\\<^esub> (Cinv\\<^bsub>CatDom F\\<^esub> k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F ## k ;;\\<^bsub>CatCod F\\<^esub>\n    (F ## Cinv\\<^bsub>CatDom F\\<^esub> k) =\n    F ## k ;;\\<^bsub>CatDom F\\<^esub> Cinv\\<^bsub>CatDom F\\<^esub> k", "using assms"], ["proof (prove)\nusing this:\n  ciso\\<^bsub>CatDom F\\<^esub> k\n\ngoal (1 subgoal):\n 1. F ## k ;;\\<^bsub>CatCod F\\<^esub>\n    (F ## Cinv\\<^bsub>CatDom F\\<^esub> k) =\n    F ## k ;;\\<^bsub>CatDom F\\<^esub> Cinv\\<^bsub>CatDom F\\<^esub> k", "by(auto simp add: FunctorComp Category.IsoCompInv)"], ["proof (state)\nthis:\n  F ## k ;;\\<^bsub>CatCod F\\<^esub> (F ## Cinv\\<^bsub>CatDom F\\<^esub> k) =\n  F ## k ;;\\<^bsub>CatDom F\\<^esub> Cinv\\<^bsub>CatDom F\\<^esub> k\n\ngoal (1 subgoal):\n 1. F ## k ;;\\<^bsub>CatCod F\\<^esub>\n    (F ## Cinv\\<^bsub>CatDom F\\<^esub> k) =\n    id\\<^bsub>CatCod F\\<^esub> (dom\\<^bsub>CatCod F\\<^esub> (F ## k))", "also"], ["proof (state)\nthis:\n  F ## k ;;\\<^bsub>CatCod F\\<^esub> (F ## Cinv\\<^bsub>CatDom F\\<^esub> k) =\n  F ## k ;;\\<^bsub>CatDom F\\<^esub> Cinv\\<^bsub>CatDom F\\<^esub> k\n\ngoal (1 subgoal):\n 1. F ## k ;;\\<^bsub>CatCod F\\<^esub>\n    (F ## Cinv\\<^bsub>CatDom F\\<^esub> k) =\n    id\\<^bsub>CatCod F\\<^esub> (dom\\<^bsub>CatCod F\\<^esub> (F ## k))", "have \"... = F ## (id\\<^bsub>CatDom F\\<^esub> (dom\\<^bsub>CatDom F\\<^esub> k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F ## k ;;\\<^bsub>CatDom F\\<^esub> Cinv\\<^bsub>CatDom F\\<^esub> k =\n    F ## id\\<^bsub>CatDom F\\<^esub> (dom\\<^bsub>CatDom F\\<^esub> k)", "using assms"], ["proof (prove)\nusing this:\n  ciso\\<^bsub>CatDom F\\<^esub> k\n\ngoal (1 subgoal):\n 1. F ## k ;;\\<^bsub>CatDom F\\<^esub> Cinv\\<^bsub>CatDom F\\<^esub> k =\n    F ## id\\<^bsub>CatDom F\\<^esub> (dom\\<^bsub>CatDom F\\<^esub> k)", "by (simp add: Category.IsoInvId2)"], ["proof (state)\nthis:\n  F ## k ;;\\<^bsub>CatDom F\\<^esub> Cinv\\<^bsub>CatDom F\\<^esub> k =\n  F ## id\\<^bsub>CatDom F\\<^esub> (dom\\<^bsub>CatDom F\\<^esub> k)\n\ngoal (1 subgoal):\n 1. F ## k ;;\\<^bsub>CatCod F\\<^esub>\n    (F ## Cinv\\<^bsub>CatDom F\\<^esub> k) =\n    id\\<^bsub>CatCod F\\<^esub> (dom\\<^bsub>CatCod F\\<^esub> (F ## k))", "also"], ["proof (state)\nthis:\n  F ## k ;;\\<^bsub>CatDom F\\<^esub> Cinv\\<^bsub>CatDom F\\<^esub> k =\n  F ## id\\<^bsub>CatDom F\\<^esub> (dom\\<^bsub>CatDom F\\<^esub> k)\n\ngoal (1 subgoal):\n 1. F ## k ;;\\<^bsub>CatCod F\\<^esub>\n    (F ## Cinv\\<^bsub>CatDom F\\<^esub> k) =\n    id\\<^bsub>CatCod F\\<^esub> (dom\\<^bsub>CatCod F\\<^esub> (F ## k))", "have \"... = id\\<^bsub>CatCod F\\<^esub> (dom\\<^bsub>CatCod F\\<^esub> (F ## k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F ## id\\<^bsub>CatDom F\\<^esub> (dom\\<^bsub>CatDom F\\<^esub> k) =\n    id\\<^bsub>CatCod F\\<^esub> (dom\\<^bsub>CatCod F\\<^esub> (F ## k))", "by (simp add: FunctorId3Dom)"], ["proof (state)\nthis:\n  F ## id\\<^bsub>CatDom F\\<^esub> (dom\\<^bsub>CatDom F\\<^esub> k) =\n  id\\<^bsub>CatCod F\\<^esub> (dom\\<^bsub>CatCod F\\<^esub> (F ## k))\n\ngoal (1 subgoal):\n 1. F ## k ;;\\<^bsub>CatCod F\\<^esub>\n    (F ## Cinv\\<^bsub>CatDom F\\<^esub> k) =\n    id\\<^bsub>CatCod F\\<^esub> (dom\\<^bsub>CatCod F\\<^esub> (F ## k))", "finally"], ["proof (chain)\npicking this:\n  F ## k ;;\\<^bsub>CatCod F\\<^esub> (F ## Cinv\\<^bsub>CatDom F\\<^esub> k) =\n  id\\<^bsub>CatCod F\\<^esub> (dom\\<^bsub>CatCod F\\<^esub> (F ## k))", "show ?thesis"], ["proof (prove)\nusing this:\n  F ## k ;;\\<^bsub>CatCod F\\<^esub> (F ## Cinv\\<^bsub>CatDom F\\<^esub> k) =\n  id\\<^bsub>CatCod F\\<^esub> (dom\\<^bsub>CatCod F\\<^esub> (F ## k))\n\ngoal (1 subgoal):\n 1. F ## k ;;\\<^bsub>CatCod F\\<^esub>\n    (F ## Cinv\\<^bsub>CatDom F\\<^esub> k) =\n    id\\<^bsub>CatCod F\\<^esub> (dom\\<^bsub>CatCod F\\<^esub> (F ## k))", "by simp"], ["proof (state)\nthis:\n  F ## k ;;\\<^bsub>CatCod F\\<^esub> (F ## Cinv\\<^bsub>CatDom F\\<^esub> k) =\n  id\\<^bsub>CatCod F\\<^esub> (dom\\<^bsub>CatCod F\\<^esub> (F ## k))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  F ## k ;;\\<^bsub>CatCod F\\<^esub> (F ## Cinv\\<^bsub>CatDom F\\<^esub> k) =\n  id\\<^bsub>CatCod F\\<^esub> (dom\\<^bsub>CatCod F\\<^esub> (F ## k))\n\ngoal (1 subgoal):\n 1. F ## Cinv\\<^bsub>CatDom F\\<^esub> k ;;\\<^bsub>CatCod F\\<^esub>\n    (F ## k) =\n    id\\<^bsub>CatCod F\\<^esub> (cod\\<^bsub>CatCod F\\<^esub> (F ## k))", "show \"(F ## (Cinv\\<^bsub>CatDom F\\<^esub> k)) ;;\\<^bsub>CatCod F\\<^esub> (F ## k) = id\\<^bsub>CatCod F\\<^esub> (cod\\<^bsub>CatCod F\\<^esub> (F ## k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F ## Cinv\\<^bsub>CatDom F\\<^esub> k ;;\\<^bsub>CatCod F\\<^esub>\n    (F ## k) =\n    id\\<^bsub>CatCod F\\<^esub> (cod\\<^bsub>CatCod F\\<^esub> (F ## k))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. F ## Cinv\\<^bsub>CatDom F\\<^esub> k ;;\\<^bsub>CatCod F\\<^esub>\n    (F ## k) =\n    id\\<^bsub>CatCod F\\<^esub> (cod\\<^bsub>CatCod F\\<^esub> (F ## k))", "have      \"(F ## (Cinv\\<^bsub>CatDom F\\<^esub> k)) ;;\\<^bsub>CatCod F\\<^esub> (F ## k) = F ## ((Cinv\\<^bsub>CatDom F\\<^esub> k) ;;\\<^bsub>CatDom F\\<^esub>  k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F ## Cinv\\<^bsub>CatDom F\\<^esub> k ;;\\<^bsub>CatCod F\\<^esub>\n    (F ## k) =\n    F ## Cinv\\<^bsub>CatDom F\\<^esub> k ;;\\<^bsub>CatDom F\\<^esub> k", "using assms"], ["proof (prove)\nusing this:\n  ciso\\<^bsub>CatDom F\\<^esub> k\n\ngoal (1 subgoal):\n 1. F ## Cinv\\<^bsub>CatDom F\\<^esub> k ;;\\<^bsub>CatCod F\\<^esub>\n    (F ## k) =\n    F ## Cinv\\<^bsub>CatDom F\\<^esub> k ;;\\<^bsub>CatDom F\\<^esub> k", "by(auto simp add: FunctorComp Category.InvCompIso)"], ["proof (state)\nthis:\n  F ## Cinv\\<^bsub>CatDom F\\<^esub> k ;;\\<^bsub>CatCod F\\<^esub> (F ## k) =\n  F ## Cinv\\<^bsub>CatDom F\\<^esub> k ;;\\<^bsub>CatDom F\\<^esub> k\n\ngoal (1 subgoal):\n 1. F ## Cinv\\<^bsub>CatDom F\\<^esub> k ;;\\<^bsub>CatCod F\\<^esub>\n    (F ## k) =\n    id\\<^bsub>CatCod F\\<^esub> (cod\\<^bsub>CatCod F\\<^esub> (F ## k))", "also"], ["proof (state)\nthis:\n  F ## Cinv\\<^bsub>CatDom F\\<^esub> k ;;\\<^bsub>CatCod F\\<^esub> (F ## k) =\n  F ## Cinv\\<^bsub>CatDom F\\<^esub> k ;;\\<^bsub>CatDom F\\<^esub> k\n\ngoal (1 subgoal):\n 1. F ## Cinv\\<^bsub>CatDom F\\<^esub> k ;;\\<^bsub>CatCod F\\<^esub>\n    (F ## k) =\n    id\\<^bsub>CatCod F\\<^esub> (cod\\<^bsub>CatCod F\\<^esub> (F ## k))", "have \"... = F ## (id\\<^bsub>CatDom F\\<^esub> (cod\\<^bsub>CatDom F\\<^esub> k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F ## Cinv\\<^bsub>CatDom F\\<^esub> k ;;\\<^bsub>CatDom F\\<^esub> k =\n    F ## id\\<^bsub>CatDom F\\<^esub> (cod\\<^bsub>CatDom F\\<^esub> k)", "using assms"], ["proof (prove)\nusing this:\n  ciso\\<^bsub>CatDom F\\<^esub> k\n\ngoal (1 subgoal):\n 1. F ## Cinv\\<^bsub>CatDom F\\<^esub> k ;;\\<^bsub>CatDom F\\<^esub> k =\n    F ## id\\<^bsub>CatDom F\\<^esub> (cod\\<^bsub>CatDom F\\<^esub> k)", "by (simp add: Category.IsoInvId1)"], ["proof (state)\nthis:\n  F ## Cinv\\<^bsub>CatDom F\\<^esub> k ;;\\<^bsub>CatDom F\\<^esub> k =\n  F ## id\\<^bsub>CatDom F\\<^esub> (cod\\<^bsub>CatDom F\\<^esub> k)\n\ngoal (1 subgoal):\n 1. F ## Cinv\\<^bsub>CatDom F\\<^esub> k ;;\\<^bsub>CatCod F\\<^esub>\n    (F ## k) =\n    id\\<^bsub>CatCod F\\<^esub> (cod\\<^bsub>CatCod F\\<^esub> (F ## k))", "also"], ["proof (state)\nthis:\n  F ## Cinv\\<^bsub>CatDom F\\<^esub> k ;;\\<^bsub>CatDom F\\<^esub> k =\n  F ## id\\<^bsub>CatDom F\\<^esub> (cod\\<^bsub>CatDom F\\<^esub> k)\n\ngoal (1 subgoal):\n 1. F ## Cinv\\<^bsub>CatDom F\\<^esub> k ;;\\<^bsub>CatCod F\\<^esub>\n    (F ## k) =\n    id\\<^bsub>CatCod F\\<^esub> (cod\\<^bsub>CatCod F\\<^esub> (F ## k))", "have \"... = id\\<^bsub>CatCod F\\<^esub> (cod\\<^bsub>CatCod F\\<^esub> (F ## k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F ## id\\<^bsub>CatDom F\\<^esub> (cod\\<^bsub>CatDom F\\<^esub> k) =\n    id\\<^bsub>CatCod F\\<^esub> (cod\\<^bsub>CatCod F\\<^esub> (F ## k))", "using assms"], ["proof (prove)\nusing this:\n  ciso\\<^bsub>CatDom F\\<^esub> k\n\ngoal (1 subgoal):\n 1. F ## id\\<^bsub>CatDom F\\<^esub> (cod\\<^bsub>CatDom F\\<^esub> k) =\n    id\\<^bsub>CatCod F\\<^esub> (cod\\<^bsub>CatCod F\\<^esub> (F ## k))", "by (simp add: FunctorId3Cod)"], ["proof (state)\nthis:\n  F ## id\\<^bsub>CatDom F\\<^esub> (cod\\<^bsub>CatDom F\\<^esub> k) =\n  id\\<^bsub>CatCod F\\<^esub> (cod\\<^bsub>CatCod F\\<^esub> (F ## k))\n\ngoal (1 subgoal):\n 1. F ## Cinv\\<^bsub>CatDom F\\<^esub> k ;;\\<^bsub>CatCod F\\<^esub>\n    (F ## k) =\n    id\\<^bsub>CatCod F\\<^esub> (cod\\<^bsub>CatCod F\\<^esub> (F ## k))", "finally"], ["proof (chain)\npicking this:\n  F ## Cinv\\<^bsub>CatDom F\\<^esub> k ;;\\<^bsub>CatCod F\\<^esub> (F ## k) =\n  id\\<^bsub>CatCod F\\<^esub> (cod\\<^bsub>CatCod F\\<^esub> (F ## k))", "show ?thesis"], ["proof (prove)\nusing this:\n  F ## Cinv\\<^bsub>CatDom F\\<^esub> k ;;\\<^bsub>CatCod F\\<^esub> (F ## k) =\n  id\\<^bsub>CatCod F\\<^esub> (cod\\<^bsub>CatCod F\\<^esub> (F ## k))\n\ngoal (1 subgoal):\n 1. F ## Cinv\\<^bsub>CatDom F\\<^esub> k ;;\\<^bsub>CatCod F\\<^esub>\n    (F ## k) =\n    id\\<^bsub>CatCod F\\<^esub> (cod\\<^bsub>CatCod F\\<^esub> (F ## k))", "by simp"], ["proof (state)\nthis:\n  F ## Cinv\\<^bsub>CatDom F\\<^esub> k ;;\\<^bsub>CatCod F\\<^esub> (F ## k) =\n  id\\<^bsub>CatCod F\\<^esub> (cod\\<^bsub>CatCod F\\<^esub> (F ## k))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  F ## Cinv\\<^bsub>CatDom F\\<^esub> k ;;\\<^bsub>CatCod F\\<^esub> (F ## k) =\n  id\\<^bsub>CatCod F\\<^esub> (cod\\<^bsub>CatCod F\\<^esub> (F ## k))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cinv\\<^bsub>CatCod F\\<^esub> F ## k F ## Cinv\\<^bsub>CatDom F\\<^esub> k\n\ngoal (1 subgoal):\n 1. ciso\\<^bsub>CatCod F\\<^esub> F ## k", "thus ?thesis"], ["proof (prove)\nusing this:\n  cinv\\<^bsub>CatCod F\\<^esub> F ## k F ## Cinv\\<^bsub>CatDom F\\<^esub> k\n\ngoal (1 subgoal):\n 1. ciso\\<^bsub>CatCod F\\<^esub> F ## k", "by(auto simp add: isomorphism_def)"], ["proof (state)\nthis:\n  ciso\\<^bsub>CatCod F\\<^esub> F ## k\n\ngoal:\nNo subgoals!", "qed"], ["", "declare PreFunctor.CatDom[simp] PreFunctor.CatCod [simp]"], ["", "lemma FunctorMFunctor[simp]: \"Functor F \\<Longrightarrow> FunctorM F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Functor F \\<Longrightarrow> FunctorM F", "by (simp add: Functor_def)"], ["", "locale Equivalence = Functor +\n  assumes Full: \"\\<lbrakk>A \\<in> Obj (CatDom F) ; B \\<in> Obj (CatDom F) ; \n                  h maps\\<^bsub>CatCod F\\<^esub> (F @@ A) to (F @@ B)\\<rbrakk> \\<Longrightarrow>\n                 \\<exists> f . (f maps\\<^bsub>CatDom F\\<^esub> A to B) \\<and> (F ## f = h)\"\n  and Faithful: \"\\<lbrakk>f maps\\<^bsub>CatDom F\\<^esub> A to B ; g maps\\<^bsub>CatDom F\\<^esub> A to B ; F ## f = F ## g\\<rbrakk> \\<Longrightarrow> f = g\"\n  and IsoDense: \"C \\<in> Obj (CatCod F) \\<Longrightarrow> \\<exists> A \\<in> Obj (CatDom F) . ObjIso (CatCod F) (F @@ A) C\""], ["", "end"]]}