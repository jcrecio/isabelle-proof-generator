{"file_name": "/home/qj213/afp-2021-10-22/thys/LTL/Code_Equations.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/LTL", "problem_names": ["lemma val_ifex:\n  \"val_ifex (ifex_of_ltl b) s = {x. s x} \\<Turnstile>\\<^sub>P b\"", "lemma reduced_ifex:\n  \"reduced (ifex_of_ltl b) {}\"", "lemma ifex_of_ltl_reduced_bdt_checker:\n  \"reduced_bdt_checkers ifex_of_ltl (\\<lambda>y s. {x. s x} \\<Turnstile>\\<^sub>P y)\"", "lemma ltl_prop_equiv_impl[code]:\n  \"(\\<phi> \\<sim>\\<^sub>P \\<psi>) = equiv_test ifex_of_ltl \\<phi> \\<psi>\"", "lemma ltl_prop_implies_impl[code]:\n  \"(\\<phi> \\<longrightarrow>\\<^sub>P \\<psi>) = impl_test ifex_of_ltl \\<phi> \\<psi>\""], "translations": [["", "lemma val_ifex:\n  \"val_ifex (ifex_of_ltl b) s = {x. s x} \\<Turnstile>\\<^sub>P b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_ifex (ifex_of_ltl b) s = {x. s x} \\<Turnstile>\\<^sub>P b", "by (induction b) (simp add: agree_Nil val_normif)+"], ["", "lemma reduced_ifex:\n  \"reduced (ifex_of_ltl b) {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reduced (ifex_of_ltl b) {}", "by (induction b) (simp; metis keys_empty reduced_normif)+"], ["", "lemma ifex_of_ltl_reduced_bdt_checker:\n  \"reduced_bdt_checkers ifex_of_ltl (\\<lambda>y s. {x. s x} \\<Turnstile>\\<^sub>P y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reduced_bdt_checkers ifex_of_ltl\n     (\\<lambda>y s. {x. s x} \\<Turnstile>\\<^sub>P y)", "unfolding reduced_bdt_checkers_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>b s.\n        val_ifex (ifex_of_ltl b) s =\n        Collect s \\<Turnstile>\\<^sub>P b) \\<and>\n    (\\<forall>b. reduced (ifex_of_ltl b) {})", "using val_ifex reduced_ifex"], ["proof (prove)\nusing this:\n  val_ifex (ifex_of_ltl ?b) ?s = {x. ?s x} \\<Turnstile>\\<^sub>P ?b\n  reduced (ifex_of_ltl ?b) {}\n\ngoal (1 subgoal):\n 1. (\\<forall>b s.\n        val_ifex (ifex_of_ltl b) s =\n        Collect s \\<Turnstile>\\<^sub>P b) \\<and>\n    (\\<forall>b. reduced (ifex_of_ltl b) {})", "by blast"], ["", "lemma ltl_prop_equiv_impl[code]:\n  \"(\\<phi> \\<sim>\\<^sub>P \\<psi>) = equiv_test ifex_of_ltl \\<phi> \\<psi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi> \\<sim>\\<^sub>P \\<psi> = equiv_test ifex_of_ltl \\<phi> \\<psi>", "by (simp add: ltl_prop_equiv_def reduced_bdt_checkers.equiv_test[OF ifex_of_ltl_reduced_bdt_checker]; fastforce)"], ["", "lemma ltl_prop_implies_impl[code]:\n  \"(\\<phi> \\<longrightarrow>\\<^sub>P \\<psi>) = impl_test ifex_of_ltl \\<phi> \\<psi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi> \\<longrightarrow>\\<^sub>P \\<psi> =\n    impl_test ifex_of_ltl \\<phi> \\<psi>", "by (simp add: ltl_prop_implies_def reduced_bdt_checkers.impl_test[OF ifex_of_ltl_reduced_bdt_checker]; force)\n\n\\<comment> \\<open>Check code export\\<close>"], ["", "export_code \"(\\<sim>\\<^sub>P)\" \"(\\<longrightarrow>\\<^sub>P)\" checking"], ["", "end"]]}