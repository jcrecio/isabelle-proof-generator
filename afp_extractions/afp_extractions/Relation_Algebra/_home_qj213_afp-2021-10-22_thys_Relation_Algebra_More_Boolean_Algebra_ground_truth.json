{"file_name": "/home/qj213/afp-2021-10-22/thys/Relation_Algebra/More_Boolean_Algebra.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Relation_Algebra", "problem_names": ["lemma meet_assoc: \"x \\<cdot> (y \\<cdot> z) = (x \\<cdot> y) \\<cdot> z\"", "lemma aux4 [simp]: \"x \\<cdot> y + x \\<cdot> -y = x\"", "lemma aux4_comm [simp]: \"x \\<cdot> -y + x \\<cdot> y = x\"", "lemma aux6 [simp]: \"(x + y) \\<cdot> -x = y \\<cdot> -x\"", "lemma aux6_var [simp]: \"(-x + y) \\<cdot> x = x \\<cdot> y\"", "lemma aux9 [simp]: \"x + -x \\<cdot> y = x + y\"", "lemma join_iso: \"x \\<le> y \\<Longrightarrow> x + z \\<le> y + z\"", "lemma join_isol: \"x \\<le> y \\<Longrightarrow> z + x \\<le> z + y\"", "lemma join_double_iso: \"x \\<le> y \\<Longrightarrow> w + x + z \\<le> w + y + z\"", "lemma comp_anti: \"x \\<le> y \\<longleftrightarrow> -y \\<le> -x\"", "lemma meet_iso: \"x \\<le> y \\<Longrightarrow> x \\<cdot> z \\<le> y \\<cdot> z\"", "lemma meet_isor: \"x \\<le> y \\<Longrightarrow> z \\<cdot> x \\<le> z \\<cdot> y\"", "lemma meet_double_iso: \"x \\<le> y \\<Longrightarrow> w \\<cdot> x \\<cdot> z \\<le> w \\<cdot> y \\<cdot> z\"", "lemma de_morgan_3 [simp]: \"-(-x \\<cdot> -y) = x + y\"", "lemma subdist_2_var: \"x + y \\<cdot> z \\<le> x + y\"", "lemma dist_alt: \"\\<lbrakk>x + z = y + z; x \\<cdot> z = y \\<cdot> z\\<rbrakk> \\<Longrightarrow> x = y\"", "lemma galois_aux: \"x \\<cdot> y = 0 \\<longleftrightarrow> x \\<le> -y\"", "lemma galois_aux2: \"x \\<cdot> -y = 0 \\<longleftrightarrow> x \\<le> y\"", "lemma galois_1: \"x \\<cdot> -y \\<le> z \\<longleftrightarrow> x \\<le> y + z\"", "lemma galois_2: \"x \\<le> y + -z \\<longleftrightarrow> x \\<cdot> z \\<le> y\"", "lemma galois_aux3: \"x + y = 1 \\<longleftrightarrow> -x \\<le> y\"", "lemma galois_aux4: \"-x + y = 1 \\<longleftrightarrow> x \\<le> y\"", "lemma is_conjugation_sym: \"is_conjugation f g \\<longleftrightarrow> is_conjugation g f\"", "lemma is_conjugation_unique: \"\\<lbrakk>is_conjugation f g; is_conjugation f h\\<rbrakk> \\<Longrightarrow> g = h\"", "lemma conj_galois_1:\n  assumes \"is_conjugation f g\"\n  shows \"f x \\<le> y \\<longleftrightarrow> x \\<le> -g (-y)\"", "lemma conj_galois_2:\n  assumes \"is_conjugation f g\"\n  shows \"g x \\<le> y \\<longleftrightarrow> x \\<le> -f (-y)\"", "lemma f_pre_additive:\n  assumes \"is_conjugation f g\"\n  shows \"f (x + y) \\<le> z \\<longleftrightarrow> f x + f y \\<le> z\"", "lemma f_additive:\n  assumes \"is_conjugation f g\"\n  shows \"f (sup x y) = sup (f x) (f y)\"", "lemma g_pre_additive:\n  assumes \"is_conjugation f g\"\n  shows \"g (sup x y) \\<le> z \\<longleftrightarrow> sup (g x) (g y) \\<le> z\"", "lemma g_additive:\n  assumes \"is_conjugation f g\"\n  shows \"g (sup x y) = sup (g x) (g y)\"", "lemma f_iso:\n  assumes \"is_conjugation f g\"\n  shows \"x \\<le> y \\<longrightarrow> f x \\<le> f y\"", "lemma g_iso:\n  assumes \"is_conjugation f g\"\n  shows \"x \\<le> y \\<longrightarrow> g x \\<le> g y\"", "lemma f_subdist:\n  assumes \"is_conjugation f g\"\n  shows \"f (x \\<cdot> y) \\<le> f x\"", "lemma g_subdist:\n  assumes \"is_conjugation f g\"\n  shows \"g (x \\<cdot> y) \\<le> g x\"", "lemma cancellation_1:\n  assumes \"is_conjugation f g\"\n  shows \"f (-g x) \\<le> -x\"", "lemma cancellation_2:\n  assumes \"is_conjugation f g\"\n  shows \"g (-f x) \\<le> -x\"", "lemma f_strict:\n  assumes \"is_conjugation f g\"\n  shows \"f 0 = 0\"", "lemma g_strict:\n  assumes \"is_conjugation f g\"\n  shows \"g 0 = 0\"", "lemma modular_1_aux:\n  assumes \"is_conjugation f g\"\n  shows \"f (x \\<cdot> -g y) \\<cdot> y = 0\"", "lemma modular_2_aux:\n  assumes \"is_conjugation f g\"\n  shows \"g (x \\<cdot> -f y) \\<cdot> y = 0\"", "lemma modular_1:\n  assumes \"is_conjugation f g\"\n  shows \"f x \\<cdot> y = f (x \\<cdot> g y) \\<cdot> y\"", "lemma modular_2:\n  assumes \"is_conjugation f g\"\n  shows \"g x \\<cdot> y = g (x \\<cdot> f y) \\<cdot> y\"", "lemma conjugate_eq_aux:\n  \"is_conjugation f g \\<Longrightarrow> f (x \\<cdot> -g y) \\<le> f x \\<cdot> -y\"", "lemma conjugate_eq:\n  \"is_conjugation f g \\<longleftrightarrow> (\\<forall>x y. f (x \\<cdot> -g y) \\<le> f x \\<cdot> -y \\<and> g (y \\<cdot> -f x) \\<le> g y \\<cdot> -x)\"\n    (is \"?l \\<longleftrightarrow> ?r\")", "lemma conjugation_prop1: \"is_conjugation f g \\<Longrightarrow> f y \\<cdot> z \\<le> f (y \\<cdot> g z)\"", "lemma conjugation_prop2: \"is_conjugation f g \\<Longrightarrow> g z \\<cdot> y \\<le> g (z \\<cdot> f y)\""], "translations": [["", "lemma meet_assoc: \"x \\<cdot> (y \\<cdot> z) = (x \\<cdot> y) \\<cdot> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z", "by (metis inf_assoc)"], ["", "lemma aux4 [simp]: \"x \\<cdot> y + x \\<cdot> -y = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<cdot> y + x \\<cdot> - y = x", "by (metis inf_sup_distrib1 inf_top_right sup_compl_top)"], ["", "lemma aux4_comm [simp]: \"x \\<cdot> -y + x \\<cdot> y = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<cdot> - y + x \\<cdot> y = x", "by (metis aux4 sup.commute)"], ["", "lemma aux6 [simp]: \"(x + y) \\<cdot> -x = y \\<cdot> -x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x + y) \\<cdot> - x = y \\<cdot> - x", "by (metis inf_compl_bot inf_sup_distrib2 sup_bot_left)"], ["", "lemma aux6_var [simp]: \"(-x + y) \\<cdot> x = x \\<cdot> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (- x + y) \\<cdot> x = x \\<cdot> y", "by (metis compl_inf_bot inf_commute inf_sup_distrib2 sup_bot_left)"], ["", "lemma aux9 [simp]: \"x + -x \\<cdot> y = x + y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x + - x \\<cdot> y = x + y", "by (metis aux4 aux6 inf.commute inf_sup_absorb)"], ["", "lemma join_iso: \"x \\<le> y \\<Longrightarrow> x + z \\<le> y + z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow> x + z \\<le> y + z", "by (metis eq_refl sup_mono)"], ["", "lemma join_isol: \"x \\<le> y \\<Longrightarrow> z + x \\<le> z + y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow> z + x \\<le> z + y", "by (metis join_iso sup.commute)"], ["", "lemma join_double_iso: \"x \\<le> y \\<Longrightarrow> w + x + z \\<le> w + y + z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow> w + x + z \\<le> w + y + z", "by (metis le_iff_inf sup_inf_distrib1 sup_inf_distrib2)"], ["", "lemma comp_anti: \"x \\<le> y \\<longleftrightarrow> -y \\<le> -x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<le> y) = (- y \\<le> - x)", "by (metis compl_le_swap2 double_compl)"], ["", "lemma meet_iso: \"x \\<le> y \\<Longrightarrow> x \\<cdot> z \\<le> y \\<cdot> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow> x \\<cdot> z \\<le> y \\<cdot> z", "by (metis eq_refl inf_mono)"], ["", "lemma meet_isor: \"x \\<le> y \\<Longrightarrow> z \\<cdot> x \\<le> z \\<cdot> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow> z \\<cdot> x \\<le> z \\<cdot> y", "by (metis inf.commute meet_iso)"], ["", "lemma meet_double_iso: \"x \\<le> y \\<Longrightarrow> w \\<cdot> x \\<cdot> z \\<le> w \\<cdot> y \\<cdot> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow>\n    w \\<cdot> x \\<cdot> z \\<le> w \\<cdot> y \\<cdot> z", "by (metis meet_iso meet_isor)"], ["", "lemma de_morgan_3 [simp]: \"-(-x \\<cdot> -y) = x + y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (- x \\<cdot> - y) = x + y", "by (metis compl_sup double_compl)"], ["", "lemma subdist_2_var: \"x + y \\<cdot> z \\<le> x + y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x + y \\<cdot> z \\<le> x + y", "by (metis eq_refl inf_le1 sup_mono)"], ["", "lemma dist_alt: \"\\<lbrakk>x + z = y + z; x \\<cdot> z = y \\<cdot> z\\<rbrakk> \\<Longrightarrow> x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x + z = y + z; x \\<cdot> z = y \\<cdot> z\\<rbrakk>\n    \\<Longrightarrow> x = y", "by (metis aux4 aux6 sup.commute)"], ["", "text \\<open>Finally we prove the Galois connections for complementation.\\<close>"], ["", "lemma galois_aux: \"x \\<cdot> y = 0 \\<longleftrightarrow> x \\<le> -y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<cdot> y = 0) = (x \\<le> - y)", "by (metis aux6 compl_sup double_compl inf.commute le_iff_inf sup_bot_right sup_compl_top)"], ["", "lemma galois_aux2: \"x \\<cdot> -y = 0 \\<longleftrightarrow> x \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<cdot> - y = 0) = (x \\<le> y)", "by (metis double_compl galois_aux)"], ["", "lemma galois_1: \"x \\<cdot> -y \\<le> z \\<longleftrightarrow> x \\<le> y + z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<cdot> - y \\<le> z) = (x \\<le> y + z)", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. x \\<cdot> - y \\<le> z \\<Longrightarrow> x \\<le> y + z\n 2. x \\<le> y + z \\<Longrightarrow> x \\<cdot> - y \\<le> z", "apply (metis inf_le2 join_iso le_iff_sup le_supE join_isol aux4)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y + z \\<Longrightarrow> x \\<cdot> - y \\<le> z", "apply (metis meet_iso aux6 le_infE)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma galois_2: \"x \\<le> y + -z \\<longleftrightarrow> x \\<cdot> z \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<le> y + - z) = (x \\<cdot> z \\<le> y)", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. x \\<le> y + - z \\<Longrightarrow> x \\<cdot> z \\<le> y\n 2. x \\<cdot> z \\<le> y \\<Longrightarrow> x \\<le> y + - z", "apply (metis compl_sup double_compl galois_1 inf.commute)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<cdot> z \\<le> y \\<Longrightarrow> x \\<le> y + - z", "apply (metis inf.commute order_trans subdist_2_var aux4 join_iso)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma galois_aux3: \"x + y = 1 \\<longleftrightarrow> -x \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x + y = 1) = (- x \\<le> y)", "by (metis galois_1 inf_top_left top_unique)"], ["", "lemma galois_aux4: \"-x + y = 1 \\<longleftrightarrow> x \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (- x + y = 1) = (x \\<le> y)", "by (metis double_compl galois_aux3)"], ["", "subsection \\<open>Boolean Algebras with Operators\\<close>"], ["", "text \\<open>We follow J\\'onsson and Tarski to define pairs of conjugate functions\non Boolean algebras. We also consider material from Maddux's article. This\ngives rise to a Galois connection and the notion of Boolean algebras with\noperators.\n\nWe do not explicitly define families of functions over Boolean algebras as a\ntype class.\n\nThis development should certainly be expanded do deal with complete Boolean\nalgebras one the one hand and other lattices on the other hand.\n\nBoolean algebras with operators and their variants can be applied in various\nways. The prime example are relation algebras. The modular laws, for instance,\ncan be derived by instantiation. Other applications are antidomain semirings\nwhere modal operators satisfy conjugations and Galois connections, and algebras\nof predicate transformers.\\<close>"], ["", "text\\<open>We define conjugation as a predicate which holds if a pair of functions\nare conjugates.\\<close>"], ["", "definition is_conjugation :: \"('a \\<Rightarrow> 'a) \\<Rightarrow> ('a \\<Rightarrow> 'a) \\<Rightarrow> bool\"\n  where \"is_conjugation f g \\<equiv> (\\<forall>x y . f x \\<cdot> y = 0 \\<longleftrightarrow> x \\<cdot> g y = 0)\""], ["", "text \\<open>We now prove the standard lemmas. First we show that conjugation is\nsymmetric and that conjugates are uniqely defined.\\<close>"], ["", "lemma is_conjugation_sym: \"is_conjugation f g \\<longleftrightarrow> is_conjugation g f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_conjugation f g = is_conjugation g f", "by (metis inf.commute is_conjugation_def)"], ["", "lemma is_conjugation_unique: \"\\<lbrakk>is_conjugation f g; is_conjugation f h\\<rbrakk> \\<Longrightarrow> g = h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>is_conjugation f g; is_conjugation f h\\<rbrakk>\n    \\<Longrightarrow> g = h", "by (metis galois_aux inf.commute double_compl eq_iff ext is_conjugation_def)"], ["", "text \\<open>Next we show that conjugates give rise to adjoints in a Galois\nconnection.\\<close>"], ["", "lemma conj_galois_1:\n  assumes \"is_conjugation f g\"\n  shows \"f x \\<le> y \\<longleftrightarrow> x \\<le> -g (-y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f x \\<le> y) = (x \\<le> - g (- y))", "by (metis assms is_conjugation_def double_compl galois_aux)"], ["", "lemma conj_galois_2:\n  assumes \"is_conjugation f g\"\n  shows \"g x \\<le> y \\<longleftrightarrow> x \\<le> -f (-y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (g x \\<le> y) = (x \\<le> - f (- y))", "by (metis assms is_conjugation_sym conj_galois_1)"], ["", "text \\<open>Now we prove some of the standard properties of adjoints and\nconjugates. In fact, conjugate functions even distribute over all existing\nsuprema. We display the next proof in detail because it is elegant.\\<close>"], ["", "lemma f_pre_additive:\n  assumes \"is_conjugation f g\"\n  shows \"f (x + y) \\<le> z \\<longleftrightarrow> f x + f y \\<le> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f (x + y) \\<le> z) = (f x + f y \\<le> z)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (f (x + y) \\<le> z) = (f x + f y \\<le> z)", "have \"f (x + y) \\<le> z \\<longleftrightarrow> x + y \\<le> -g (-z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f (x + y) \\<le> z) = (x + y \\<le> - g (- z))", "by (metis assms conj_galois_1)"], ["proof (state)\nthis:\n  (f (x + y) \\<le> z) = (x + y \\<le> - g (- z))\n\ngoal (1 subgoal):\n 1. (f (x + y) \\<le> z) = (f x + f y \\<le> z)", "also"], ["proof (state)\nthis:\n  (f (x + y) \\<le> z) = (x + y \\<le> - g (- z))\n\ngoal (1 subgoal):\n 1. (f (x + y) \\<le> z) = (f x + f y \\<le> z)", "have \"... \\<longleftrightarrow> x \\<le> -g (-z) \\<and> y \\<le> -g (-z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x + y \\<le> - g (- z)) = (x \\<le> - g (- z) \\<and> y \\<le> - g (- z))", "by (metis le_sup_iff)"], ["proof (state)\nthis:\n  (x + y \\<le> - g (- z)) = (x \\<le> - g (- z) \\<and> y \\<le> - g (- z))\n\ngoal (1 subgoal):\n 1. (f (x + y) \\<le> z) = (f x + f y \\<le> z)", "also"], ["proof (state)\nthis:\n  (x + y \\<le> - g (- z)) = (x \\<le> - g (- z) \\<and> y \\<le> - g (- z))\n\ngoal (1 subgoal):\n 1. (f (x + y) \\<le> z) = (f x + f y \\<le> z)", "have \"... \\<longleftrightarrow> f x \\<le> z \\<and> f y \\<le> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<le> - g (- z) \\<and> y \\<le> - g (- z)) =\n    (f x \\<le> z \\<and> f y \\<le> z)", "by (metis assms conj_galois_1)"], ["proof (state)\nthis:\n  (x \\<le> - g (- z) \\<and> y \\<le> - g (- z)) =\n  (f x \\<le> z \\<and> f y \\<le> z)\n\ngoal (1 subgoal):\n 1. (f (x + y) \\<le> z) = (f x + f y \\<le> z)", "thus ?thesis"], ["proof (prove)\nusing this:\n  (x \\<le> - g (- z) \\<and> y \\<le> - g (- z)) =\n  (f x \\<le> z \\<and> f y \\<le> z)\n\ngoal (1 subgoal):\n 1. (f (x + y) \\<le> z) = (f x + f y \\<le> z)", "by (metis le_sup_iff calculation)"], ["proof (state)\nthis:\n  (f (x + y) \\<le> z) = (f x + f y \\<le> z)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma f_additive:\n  assumes \"is_conjugation f g\"\n  shows \"f (sup x y) = sup (f x) (f y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (x + y) = f x + f y", "by (metis assms eq_iff f_pre_additive)"], ["", "lemma g_pre_additive:\n  assumes \"is_conjugation f g\"\n  shows \"g (sup x y) \\<le> z \\<longleftrightarrow> sup (g x) (g y) \\<le> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (g (x + y) \\<le> z) = (g x + g y \\<le> z)", "by (metis assms is_conjugation_sym f_pre_additive)"], ["", "lemma g_additive:\n  assumes \"is_conjugation f g\"\n  shows \"g (sup x y) = sup (g x) (g y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g (x + y) = g x + g y", "by (metis assms is_conjugation_sym f_additive)"], ["", "text \\<open>Additivity of adjoints obviously implies their isotonicity.\\<close>"], ["", "lemma f_iso:\n  assumes \"is_conjugation f g\"\n  shows \"x \\<le> y \\<longrightarrow> f x \\<le> f y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<longrightarrow> f x \\<le> f y", "by (metis assms f_additive le_iff_sup)"], ["", "lemma g_iso:\n  assumes \"is_conjugation f g\"\n  shows \"x \\<le> y \\<longrightarrow> g x \\<le> g y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<longrightarrow> g x \\<le> g y", "by (metis assms is_conjugation_sym f_iso)"], ["", "lemma f_subdist:\n  assumes \"is_conjugation f g\"\n  shows \"f (x \\<cdot> y) \\<le> f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (x \\<cdot> y) \\<le> f x", "by (metis assms f_iso inf_le1)"], ["", "lemma g_subdist:\n  assumes \"is_conjugation f g\"\n  shows \"g (x \\<cdot> y) \\<le> g x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g (x \\<cdot> y) \\<le> g x", "by (metis assms g_iso inf_le1)"], ["", "text \\<open>Next we prove cancellation and strictness laws.\\<close>"], ["", "lemma cancellation_1:\n  assumes \"is_conjugation f g\"\n  shows \"f (-g x) \\<le> -x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (- g x) \\<le> - x", "by (metis assms conj_galois_1 double_compl eq_refl)"], ["", "lemma cancellation_2:\n  assumes \"is_conjugation f g\"\n  shows \"g (-f x) \\<le> -x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g (- f x) \\<le> - x", "by (metis assms is_conjugation_sym cancellation_1)"], ["", "lemma f_strict:\n  assumes \"is_conjugation f g\"\n  shows \"f 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f 0 = 0", "by (metis assms inf.idem inf_bot_left is_conjugation_def)"], ["", "lemma g_strict:\n  assumes \"is_conjugation f g\"\n  shows \"g 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g 0 = 0", "by (metis assms is_conjugation_sym f_strict)"], ["", "text \\<open>The following variants of modular laws have more concrete counterparts\nin relation algebra.\\<close>"], ["", "lemma modular_1_aux:\n  assumes \"is_conjugation f g\"\n  shows \"f (x \\<cdot> -g y) \\<cdot> y = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (x \\<cdot> - g y) \\<cdot> y = 0", "by (metis assms galois_aux inf_le2 is_conjugation_def)"], ["", "lemma modular_2_aux:\n  assumes \"is_conjugation f g\"\n  shows \"g (x \\<cdot> -f y) \\<cdot> y = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g (x \\<cdot> - f y) \\<cdot> y = 0", "by (metis assms is_conjugation_sym modular_1_aux)"], ["", "lemma modular_1:\n  assumes \"is_conjugation f g\"\n  shows \"f x \\<cdot> y = f (x \\<cdot> g y) \\<cdot> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x \\<cdot> y = f (x \\<cdot> g y) \\<cdot> y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f x \\<cdot> y = f (x \\<cdot> g y) \\<cdot> y", "have \"f x \\<cdot> y = f (x \\<cdot> g y + x \\<cdot> -g y) \\<cdot> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x \\<cdot> y = f (x \\<cdot> g y + x \\<cdot> - g y) \\<cdot> y", "by (metis aux4)"], ["proof (state)\nthis:\n  f x \\<cdot> y = f (x \\<cdot> g y + x \\<cdot> - g y) \\<cdot> y\n\ngoal (1 subgoal):\n 1. f x \\<cdot> y = f (x \\<cdot> g y) \\<cdot> y", "hence \"f x \\<cdot> y = (f (x \\<cdot> g y) + f (x \\<cdot> -g y)) \\<cdot> y\""], ["proof (prove)\nusing this:\n  f x \\<cdot> y = f (x \\<cdot> g y + x \\<cdot> - g y) \\<cdot> y\n\ngoal (1 subgoal):\n 1. f x \\<cdot> y = (f (x \\<cdot> g y) + f (x \\<cdot> - g y)) \\<cdot> y", "by (metis assms f_additive)"], ["proof (state)\nthis:\n  f x \\<cdot> y = (f (x \\<cdot> g y) + f (x \\<cdot> - g y)) \\<cdot> y\n\ngoal (1 subgoal):\n 1. f x \\<cdot> y = f (x \\<cdot> g y) \\<cdot> y", "hence \"f x \\<cdot> y = f (x \\<cdot> g y) \\<cdot> y + f (x \\<cdot> -g y) \\<cdot> y\""], ["proof (prove)\nusing this:\n  f x \\<cdot> y = (f (x \\<cdot> g y) + f (x \\<cdot> - g y)) \\<cdot> y\n\ngoal (1 subgoal):\n 1. f x \\<cdot> y =\n    f (x \\<cdot> g y) \\<cdot> y + f (x \\<cdot> - g y) \\<cdot> y", "by (metis inf.commute inf_sup_distrib1)"], ["proof (state)\nthis:\n  f x \\<cdot> y =\n  f (x \\<cdot> g y) \\<cdot> y + f (x \\<cdot> - g y) \\<cdot> y\n\ngoal (1 subgoal):\n 1. f x \\<cdot> y = f (x \\<cdot> g y) \\<cdot> y", "thus ?thesis"], ["proof (prove)\nusing this:\n  f x \\<cdot> y =\n  f (x \\<cdot> g y) \\<cdot> y + f (x \\<cdot> - g y) \\<cdot> y\n\ngoal (1 subgoal):\n 1. f x \\<cdot> y = f (x \\<cdot> g y) \\<cdot> y", "by (metis assms modular_1_aux sup_bot_right)"], ["proof (state)\nthis:\n  f x \\<cdot> y = f (x \\<cdot> g y) \\<cdot> y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma modular_2:\n  assumes \"is_conjugation f g\"\n  shows \"g x \\<cdot> y = g (x \\<cdot> f y) \\<cdot> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g x \\<cdot> y = g (x \\<cdot> f y) \\<cdot> y", "by (metis assms is_conjugation_sym modular_1)"], ["", "lemma conjugate_eq_aux:\n  \"is_conjugation f g \\<Longrightarrow> f (x \\<cdot> -g y) \\<le> f x \\<cdot> -y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_conjugation f g \\<Longrightarrow>\n    f (x \\<cdot> - g y) \\<le> f x \\<cdot> - y", "by (metis f_subdist galois_aux le_inf_iff modular_1_aux)"], ["", "lemma conjugate_eq:\n  \"is_conjugation f g \\<longleftrightarrow> (\\<forall>x y. f (x \\<cdot> -g y) \\<le> f x \\<cdot> -y \\<and> g (y \\<cdot> -f x) \\<le> g y \\<cdot> -x)\"\n    (is \"?l \\<longleftrightarrow> ?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_conjugation f g =\n    (\\<forall>x y.\n        f (x \\<cdot> - g y) \\<le> f x \\<cdot> - y \\<and>\n        g (y \\<cdot> - f x) \\<le> g y \\<cdot> - x)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. is_conjugation f g \\<Longrightarrow>\n    \\<forall>x y.\n       f (x \\<cdot> - g y) \\<le> f x \\<cdot> - y \\<and>\n       g (y \\<cdot> - f x) \\<le> g y \\<cdot> - x\n 2. \\<forall>x y.\n       f (x \\<cdot> - g y) \\<le> f x \\<cdot> - y \\<and>\n       g (y \\<cdot> - f x) \\<le> g y \\<cdot> - x \\<Longrightarrow>\n    is_conjugation f g", "assume ?l"], ["proof (state)\nthis:\n  is_conjugation f g\n\ngoal (2 subgoals):\n 1. is_conjugation f g \\<Longrightarrow>\n    \\<forall>x y.\n       f (x \\<cdot> - g y) \\<le> f x \\<cdot> - y \\<and>\n       g (y \\<cdot> - f x) \\<le> g y \\<cdot> - x\n 2. \\<forall>x y.\n       f (x \\<cdot> - g y) \\<le> f x \\<cdot> - y \\<and>\n       g (y \\<cdot> - f x) \\<le> g y \\<cdot> - x \\<Longrightarrow>\n    is_conjugation f g", "thus ?r"], ["proof (prove)\nusing this:\n  is_conjugation f g\n\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       f (x \\<cdot> - g y) \\<le> f x \\<cdot> - y \\<and>\n       g (y \\<cdot> - f x) \\<le> g y \\<cdot> - x", "by (metis is_conjugation_sym conjugate_eq_aux)"], ["proof (state)\nthis:\n  \\<forall>x y.\n     f (x \\<cdot> - g y) \\<le> f x \\<cdot> - y \\<and>\n     g (y \\<cdot> - f x) \\<le> g y \\<cdot> - x\n\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       f (x \\<cdot> - g y) \\<le> f x \\<cdot> - y \\<and>\n       g (y \\<cdot> - f x) \\<le> g y \\<cdot> - x \\<Longrightarrow>\n    is_conjugation f g", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       f (x \\<cdot> - g y) \\<le> f x \\<cdot> - y \\<and>\n       g (y \\<cdot> - f x) \\<le> g y \\<cdot> - x \\<Longrightarrow>\n    is_conjugation f g", "assume r: ?r"], ["proof (state)\nthis:\n  \\<forall>x y.\n     f (x \\<cdot> - g y) \\<le> f x \\<cdot> - y \\<and>\n     g (y \\<cdot> - f x) \\<le> g y \\<cdot> - x\n\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       f (x \\<cdot> - g y) \\<le> f x \\<cdot> - y \\<and>\n       g (y \\<cdot> - f x) \\<le> g y \\<cdot> - x \\<Longrightarrow>\n    is_conjugation f g", "have \"\\<forall>x y. f x \\<cdot> y = 0 \\<longrightarrow> x \\<cdot> g y = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y. f x \\<cdot> y = 0 \\<longrightarrow> x \\<cdot> g y = 0", "by (metis aux4 inf.left_commute inf_absorb1 inf_compl_bot inf_left_idem sup_bot_left r)"], ["proof (state)\nthis:\n  \\<forall>x y. f x \\<cdot> y = 0 \\<longrightarrow> x \\<cdot> g y = 0\n\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       f (x \\<cdot> - g y) \\<le> f x \\<cdot> - y \\<and>\n       g (y \\<cdot> - f x) \\<le> g y \\<cdot> - x \\<Longrightarrow>\n    is_conjugation f g", "hence \"\\<forall>x y. x \\<cdot> g y = 0 \\<longleftrightarrow> f x \\<cdot> y = 0\""], ["proof (prove)\nusing this:\n  \\<forall>x y. f x \\<cdot> y = 0 \\<longrightarrow> x \\<cdot> g y = 0\n\ngoal (1 subgoal):\n 1. \\<forall>x y. (x \\<cdot> g y = 0) = (f x \\<cdot> y = 0)", "by (metis aux4 inf.commute inf.left_commute inf_absorb1 inf_compl_bot sup_commute sup_inf_absorb r)"], ["proof (state)\nthis:\n  \\<forall>x y. (x \\<cdot> g y = 0) = (f x \\<cdot> y = 0)\n\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       f (x \\<cdot> - g y) \\<le> f x \\<cdot> - y \\<and>\n       g (y \\<cdot> - f x) \\<le> g y \\<cdot> - x \\<Longrightarrow>\n    is_conjugation f g", "thus \"is_conjugation f g\""], ["proof (prove)\nusing this:\n  \\<forall>x y. (x \\<cdot> g y = 0) = (f x \\<cdot> y = 0)\n\ngoal (1 subgoal):\n 1. is_conjugation f g", "by (metis is_conjugation_def)"], ["proof (state)\nthis:\n  is_conjugation f g\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma conjugation_prop1: \"is_conjugation f g \\<Longrightarrow> f y \\<cdot> z \\<le> f (y \\<cdot> g z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_conjugation f g \\<Longrightarrow>\n    f y \\<cdot> z \\<le> f (y \\<cdot> g z)", "by (metis le_infE modular_1 order_refl)"], ["", "lemma conjugation_prop2: \"is_conjugation f g \\<Longrightarrow> g z \\<cdot> y \\<le> g (z \\<cdot> f y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_conjugation f g \\<Longrightarrow>\n    g z \\<cdot> y \\<le> g (z \\<cdot> f y)", "by (metis is_conjugation_sym conjugation_prop1)"], ["", "end"], ["", "(* boolean_algebra *)"], ["", "end"]]}