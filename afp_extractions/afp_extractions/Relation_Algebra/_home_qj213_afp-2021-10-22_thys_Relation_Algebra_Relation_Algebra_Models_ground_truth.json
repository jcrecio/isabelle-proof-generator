{"file_name": "/home/qj213/afp-2021-10-22/thys/Relation_Algebra/Relation_Algebra_Models.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Relation_Algebra", "problem_names": ["lemma le_funI2: \"(\\<And>i j. f i j \\<le> g i j) \\<Longrightarrow> f \\<le> g\"", "lemma mat_mult_var: \"(f \\<otimes> g) = (\\<lambda>i j. \\<Sum> {(f i k) * (g k j) | k. k \\<in> UNIV})\"", "lemma mat_res_pointwise:\n  fixes i j :: \"'a::finite\"\n    and x :: \"('a, 'a, bool) matrix\"\n  shows \"(x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c) i j \\<le> (y\\<^sup>c) i j\""], "translations": [["", "lemma le_funI2: \"(\\<And>i j. f i j \\<le> g i j) \\<Longrightarrow> f \\<le> g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i j. f i j \\<le> g i j) \\<Longrightarrow> f \\<le> g", "by (metis le_funI)"], ["", "interpretation matrix_ba: boolean_algebra \"\\<lambda>f g. f \\<sqinter> g\\<^sup>c\" mat_complement \"(\\<sqinter>)\" \"(\\<le>)\" \"(<)\" mat_add mat_zero mat_top"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.boolean_algebra (\\<lambda>f g. f \\<sqinter> g\\<^sup>c)\n     mat_complement (\\<sqinter>) (\\<le>) (<) (\\<oplus>) \\<delta> \\<tau>", "by standard (force intro!: le_funI simp: mat_inter_def plus_bool_def mat_add_def mat_zero_def zero_bool_def mat_top_def mat_complement_def)+"], ["", "text \\<open>We continue working towards the main result of this section, that\ninfinite Boolean matrices form a relation algebra.\\<close>"], ["", "lemma mat_mult_var: \"(f \\<otimes> g) = (\\<lambda>i j. \\<Sum> {(f i k) * (g k j) | k. k \\<in> UNIV})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<otimes> g = (\\<lambda>i j. \\<Sum> {f i k * g k j |k. k \\<in> UNIV})", "by (rule ext)+ (simp add: mat_mult_def)"], ["", "text \\<open>The following fact is related to proving the last relation algebra\naxiom in the matrix model. It is more complicated than necessary since finite\ninfima are not well developed in Isabelle. Instead we translate properties of\nfinite infima into properties of finite suprema by using Boolean algebra. For\nfinite suprema we have developed special-purpose theorems in the Kleene algebra\nfiles.\\<close>"], ["", "lemma mat_res_pointwise:\n  fixes i j :: \"'a::finite\"\n    and x :: \"('a, 'a, bool) matrix\"\n  shows \"(x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c) i j \\<le> (y\\<^sup>c) i j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c) i j\n    \\<le> (y\\<^sup>c) i j", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c) i j\n    \\<le> (y\\<^sup>c) i j", "have \"\\<Sum>{(x\\<^sup>\\<dagger>) i k \\<and> ((x \\<otimes> y)\\<^sup>c) k j |k. k \\<in> UNIV} \\<le> (y\\<^sup>c) i j \\<longleftrightarrow> (\\<forall>k. ((x\\<^sup>\\<dagger>) i k \\<and> ((x \\<otimes> y)\\<^sup>c) k j) \\<le> (y\\<^sup>c) i j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\n      {(x\\<^sup>\\<dagger>) i k \\<and> ((x \\<otimes> y)\\<^sup>c) k j |k.\n       k \\<in> UNIV}\n     \\<le> (y\\<^sup>c) i j) =\n    (\\<forall>k.\n        ((x\\<^sup>\\<dagger>) i k \\<and> ((x \\<otimes> y)\\<^sup>c) k j)\n        \\<le> (y\\<^sup>c) i j)", "by (subst sum_sup) auto"], ["proof (state)\nthis:\n  (\\<Sum>\n    {(x\\<^sup>\\<dagger>) i k \\<and> ((x \\<otimes> y)\\<^sup>c) k j |k.\n     k \\<in> UNIV}\n   \\<le> (y\\<^sup>c) i j) =\n  (\\<forall>k.\n      ((x\\<^sup>\\<dagger>) i k \\<and> ((x \\<otimes> y)\\<^sup>c) k j)\n      \\<le> (y\\<^sup>c) i j)\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c) i j\n    \\<le> (y\\<^sup>c) i j", "also"], ["proof (state)\nthis:\n  (\\<Sum>\n    {(x\\<^sup>\\<dagger>) i k \\<and> ((x \\<otimes> y)\\<^sup>c) k j |k.\n     k \\<in> UNIV}\n   \\<le> (y\\<^sup>c) i j) =\n  (\\<forall>k.\n      ((x\\<^sup>\\<dagger>) i k \\<and> ((x \\<otimes> y)\\<^sup>c) k j)\n      \\<le> (y\\<^sup>c) i j)\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c) i j\n    \\<le> (y\\<^sup>c) i j", "have \"\\<dots> \\<longleftrightarrow> (\\<forall>k. ((x\\<^sup>\\<dagger>) i k \\<and> - (x \\<otimes> y) k j) \\<le> (y\\<^sup>c) i j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>k.\n        ((x\\<^sup>\\<dagger>) i k \\<and> ((x \\<otimes> y)\\<^sup>c) k j)\n        \\<le> (y\\<^sup>c) i j) =\n    (\\<forall>k.\n        ((x\\<^sup>\\<dagger>) i k \\<and> - (x \\<otimes> y) k j)\n        \\<le> (y\\<^sup>c) i j)", "by (simp only: mat_complement_def)"], ["proof (state)\nthis:\n  (\\<forall>k.\n      ((x\\<^sup>\\<dagger>) i k \\<and> ((x \\<otimes> y)\\<^sup>c) k j)\n      \\<le> (y\\<^sup>c) i j) =\n  (\\<forall>k.\n      ((x\\<^sup>\\<dagger>) i k \\<and> - (x \\<otimes> y) k j)\n      \\<le> (y\\<^sup>c) i j)\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c) i j\n    \\<le> (y\\<^sup>c) i j", "also"], ["proof (state)\nthis:\n  (\\<forall>k.\n      ((x\\<^sup>\\<dagger>) i k \\<and> ((x \\<otimes> y)\\<^sup>c) k j)\n      \\<le> (y\\<^sup>c) i j) =\n  (\\<forall>k.\n      ((x\\<^sup>\\<dagger>) i k \\<and> - (x \\<otimes> y) k j)\n      \\<le> (y\\<^sup>c) i j)\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c) i j\n    \\<le> (y\\<^sup>c) i j", "have \"\\<dots> \\<longleftrightarrow> (\\<forall>k. (x\\<^sup>\\<dagger>) i k \\<le> ((y\\<^sup>c) i j \\<or> (x \\<otimes> y) k j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>k.\n        ((x\\<^sup>\\<dagger>) i k \\<and> - (x \\<otimes> y) k j)\n        \\<le> (y\\<^sup>c) i j) =\n    (\\<forall>k.\n        (x\\<^sup>\\<dagger>) i k\n        \\<le> ((y\\<^sup>c) i j \\<or> (x \\<otimes> y) k j))", "by auto"], ["proof (state)\nthis:\n  (\\<forall>k.\n      ((x\\<^sup>\\<dagger>) i k \\<and> - (x \\<otimes> y) k j)\n      \\<le> (y\\<^sup>c) i j) =\n  (\\<forall>k.\n      (x\\<^sup>\\<dagger>) i k\n      \\<le> ((y\\<^sup>c) i j \\<or> (x \\<otimes> y) k j))\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c) i j\n    \\<le> (y\\<^sup>c) i j", "also"], ["proof (state)\nthis:\n  (\\<forall>k.\n      ((x\\<^sup>\\<dagger>) i k \\<and> - (x \\<otimes> y) k j)\n      \\<le> (y\\<^sup>c) i j) =\n  (\\<forall>k.\n      (x\\<^sup>\\<dagger>) i k\n      \\<le> ((y\\<^sup>c) i j \\<or> (x \\<otimes> y) k j))\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c) i j\n    \\<le> (y\\<^sup>c) i j", "have \"\\<dots> \\<longleftrightarrow> (\\<forall>k. (x\\<^sup>\\<dagger>) i k \\<le> (- y i j \\<or> (x \\<otimes> y) k j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>k.\n        (x\\<^sup>\\<dagger>) i k\n        \\<le> ((y\\<^sup>c) i j \\<or> (x \\<otimes> y) k j)) =\n    (\\<forall>k.\n        (x\\<^sup>\\<dagger>) i k \\<le> (- y i j \\<or> (x \\<otimes> y) k j))", "by (simp only: mat_complement_def)"], ["proof (state)\nthis:\n  (\\<forall>k.\n      (x\\<^sup>\\<dagger>) i k\n      \\<le> ((y\\<^sup>c) i j \\<or> (x \\<otimes> y) k j)) =\n  (\\<forall>k.\n      (x\\<^sup>\\<dagger>) i k \\<le> (- y i j \\<or> (x \\<otimes> y) k j))\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c) i j\n    \\<le> (y\\<^sup>c) i j", "also"], ["proof (state)\nthis:\n  (\\<forall>k.\n      (x\\<^sup>\\<dagger>) i k\n      \\<le> ((y\\<^sup>c) i j \\<or> (x \\<otimes> y) k j)) =\n  (\\<forall>k.\n      (x\\<^sup>\\<dagger>) i k \\<le> (- y i j \\<or> (x \\<otimes> y) k j))\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c) i j\n    \\<le> (y\\<^sup>c) i j", "have \"\\<dots> \\<longleftrightarrow> (\\<forall>k. ((x\\<^sup>\\<dagger>) i k \\<and> y i j) \\<le> (x \\<otimes> y) k j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>k.\n        (x\\<^sup>\\<dagger>) i k \\<le> (- y i j \\<or> (x \\<otimes> y) k j)) =\n    (\\<forall>k.\n        ((x\\<^sup>\\<dagger>) i k \\<and> y i j) \\<le> (x \\<otimes> y) k j)", "by auto"], ["proof (state)\nthis:\n  (\\<forall>k.\n      (x\\<^sup>\\<dagger>) i k \\<le> (- y i j \\<or> (x \\<otimes> y) k j)) =\n  (\\<forall>k.\n      ((x\\<^sup>\\<dagger>) i k \\<and> y i j) \\<le> (x \\<otimes> y) k j)\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c) i j\n    \\<le> (y\\<^sup>c) i j", "also"], ["proof (state)\nthis:\n  (\\<forall>k.\n      (x\\<^sup>\\<dagger>) i k \\<le> (- y i j \\<or> (x \\<otimes> y) k j)) =\n  (\\<forall>k.\n      ((x\\<^sup>\\<dagger>) i k \\<and> y i j) \\<le> (x \\<otimes> y) k j)\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c) i j\n    \\<le> (y\\<^sup>c) i j", "have \"\\<dots> \\<longleftrightarrow> (\\<forall>k. (x k i \\<and> y i j) \\<le> (x \\<otimes> y) k j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>k.\n        ((x\\<^sup>\\<dagger>) i k \\<and> y i j) \\<le> (x \\<otimes> y) k j) =\n    (\\<forall>k. (x k i \\<and> y i j) \\<le> (x \\<otimes> y) k j)", "by (simp add: mat_transpose_def)"], ["proof (state)\nthis:\n  (\\<forall>k.\n      ((x\\<^sup>\\<dagger>) i k \\<and> y i j) \\<le> (x \\<otimes> y) k j) =\n  (\\<forall>k. (x k i \\<and> y i j) \\<le> (x \\<otimes> y) k j)\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c) i j\n    \\<le> (y\\<^sup>c) i j", "also"], ["proof (state)\nthis:\n  (\\<forall>k.\n      ((x\\<^sup>\\<dagger>) i k \\<and> y i j) \\<le> (x \\<otimes> y) k j) =\n  (\\<forall>k. (x k i \\<and> y i j) \\<le> (x \\<otimes> y) k j)\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c) i j\n    \\<le> (y\\<^sup>c) i j", "have \"\\<dots> \\<longleftrightarrow> (\\<forall>k. (x k i \\<and> y i j) \\<le> \\<Sum>{x k l \\<and> y l j |l. l \\<in> UNIV})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>k. (x k i \\<and> y i j) \\<le> (x \\<otimes> y) k j) =\n    (\\<forall>k.\n        (x k i \\<and> y i j)\n        \\<le> \\<Sum> {x k l \\<and> y l j |l. l \\<in> UNIV})", "by (simp add: mat_mult_def times_bool_def)"], ["proof (state)\nthis:\n  (\\<forall>k. (x k i \\<and> y i j) \\<le> (x \\<otimes> y) k j) =\n  (\\<forall>k.\n      (x k i \\<and> y i j)\n      \\<le> \\<Sum> {x k l \\<and> y l j |l. l \\<in> UNIV})\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c) i j\n    \\<le> (y\\<^sup>c) i j", "also"], ["proof (state)\nthis:\n  (\\<forall>k. (x k i \\<and> y i j) \\<le> (x \\<otimes> y) k j) =\n  (\\<forall>k.\n      (x k i \\<and> y i j)\n      \\<le> \\<Sum> {x k l \\<and> y l j |l. l \\<in> UNIV})\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c) i j\n    \\<le> (y\\<^sup>c) i j", "have \"\\<dots> \\<longleftrightarrow> (\\<forall>k. \\<Sum>{x k i \\<and> y i j} \\<le> \\<Sum>{x k l \\<and> y l j |l. l \\<in> UNIV})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>k.\n        (x k i \\<and> y i j)\n        \\<le> \\<Sum> {x k l \\<and> y l j |l. l \\<in> UNIV}) =\n    (\\<forall>k.\n        \\<Sum> {x k i \\<and> y i j}\n        \\<le> \\<Sum> {x k l \\<and> y l j |l. l \\<in> UNIV})", "by simp"], ["proof (state)\nthis:\n  (\\<forall>k.\n      (x k i \\<and> y i j)\n      \\<le> \\<Sum> {x k l \\<and> y l j |l. l \\<in> UNIV}) =\n  (\\<forall>k.\n      \\<Sum> {x k i \\<and> y i j}\n      \\<le> \\<Sum> {x k l \\<and> y l j |l. l \\<in> UNIV})\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c) i j\n    \\<le> (y\\<^sup>c) i j", "also"], ["proof (state)\nthis:\n  (\\<forall>k.\n      (x k i \\<and> y i j)\n      \\<le> \\<Sum> {x k l \\<and> y l j |l. l \\<in> UNIV}) =\n  (\\<forall>k.\n      \\<Sum> {x k i \\<and> y i j}\n      \\<le> \\<Sum> {x k l \\<and> y l j |l. l \\<in> UNIV})\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c) i j\n    \\<le> (y\\<^sup>c) i j", "have \"\\<dots> \\<longleftrightarrow> True\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>k.\n        \\<Sum> {x k i \\<and> y i j}\n        \\<le> \\<Sum> {x k l \\<and> y l j |l. l \\<in> UNIV}) =\n    True", "by (intro iffI TrueI allI sum_intro[rule_format]) auto"], ["proof (state)\nthis:\n  (\\<forall>k.\n      \\<Sum> {x k i \\<and> y i j}\n      \\<le> \\<Sum> {x k l \\<and> y l j |l. l \\<in> UNIV}) =\n  True\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c) i j\n    \\<le> (y\\<^sup>c) i j", "moreover"], ["proof (state)\nthis:\n  (\\<forall>k.\n      \\<Sum> {x k i \\<and> y i j}\n      \\<le> \\<Sum> {x k l \\<and> y l j |l. l \\<in> UNIV}) =\n  True\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c) i j\n    \\<le> (y\\<^sup>c) i j", "have \"(x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c) i j = \\<Sum>{(x\\<^sup>\\<dagger>) i k \\<and> ((x \\<otimes> y)\\<^sup>c) k j |k. k \\<in> UNIV}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c) i j =\n    \\<Sum>\n     {(x\\<^sup>\\<dagger>) i k \\<and> ((x \\<otimes> y)\\<^sup>c) k j |k.\n      k \\<in> UNIV}", "by (subst mat_mult_def) (simp add: times_bool_def)"], ["proof (state)\nthis:\n  (x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c) i j =\n  \\<Sum>\n   {(x\\<^sup>\\<dagger>) i k \\<and> ((x \\<otimes> y)\\<^sup>c) k j |k.\n    k \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c) i j\n    \\<le> (y\\<^sup>c) i j", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Sum>\n    {(x\\<^sup>\\<dagger>) i k \\<and> ((x \\<otimes> y)\\<^sup>c) k j |k.\n     k \\<in> UNIV}\n   \\<le> (y\\<^sup>c) i j) =\n  (\\<forall>k.\n      \\<Sum> {x k i \\<and> y i j}\n      \\<le> \\<Sum> {x k l \\<and> y l j |l. l \\<in> UNIV})\n  (\\<forall>k.\n      \\<Sum> {x k i \\<and> y i j}\n      \\<le> \\<Sum> {x k l \\<and> y l j |l. l \\<in> UNIV}) =\n  True\n  (x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c) i j =\n  \\<Sum>\n   {(x\\<^sup>\\<dagger>) i k \\<and> ((x \\<otimes> y)\\<^sup>c) k j |k.\n    k \\<in> UNIV}", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>\n    {(x\\<^sup>\\<dagger>) i k \\<and> ((x \\<otimes> y)\\<^sup>c) k j |k.\n     k \\<in> UNIV}\n   \\<le> (y\\<^sup>c) i j) =\n  (\\<forall>k.\n      \\<Sum> {x k i \\<and> y i j}\n      \\<le> \\<Sum> {x k l \\<and> y l j |l. l \\<in> UNIV})\n  (\\<forall>k.\n      \\<Sum> {x k i \\<and> y i j}\n      \\<le> \\<Sum> {x k l \\<and> y l j |l. l \\<in> UNIV}) =\n  True\n  (x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c) i j =\n  \\<Sum>\n   {(x\\<^sup>\\<dagger>) i k \\<and> ((x \\<otimes> y)\\<^sup>c) k j |k.\n    k \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c) i j\n    \\<le> (y\\<^sup>c) i j", "by auto"], ["proof (state)\nthis:\n  (x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c) i j\n  \\<le> (y\\<^sup>c) i j\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Finally the main result of this section.\\<close>"], ["", "interpretation matrix_ra: relation_algebra \"\\<lambda>f g. f \\<sqinter> g\\<^sup>c\" mat_complement \"(\\<sqinter>)\" \"(\\<le>)\" \"(<)\" \"(\\<oplus>)\" \"\\<lambda>i j. False\" \\<tau> \"(\\<otimes>)\" mat_transpose \\<epsilon>"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.relation_algebra (\\<lambda>f g. f \\<sqinter> g\\<^sup>c)\n     mat_complement (\\<sqinter>) (\\<le>) (<) (\\<oplus>)\n     (\\<lambda>i j. False) \\<tau> (\\<otimes>) mat_transpose \\<epsilon>", "proof"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>a. (\\<lambda>i j. False) \\<le> a\n 2. \\<And>x. x \\<sqinter> x\\<^sup>c = (\\<lambda>i j. False)\n 3. \\<And>x. x \\<oplus> x\\<^sup>c = \\<tau>\n 4. \\<And>x y. x \\<sqinter> y\\<^sup>c = x \\<sqinter> y\\<^sup>c\n 5. \\<And>x y z. x \\<otimes> y \\<otimes> z = x \\<otimes> (y \\<otimes> z)\n 6. \\<And>x. x \\<otimes> \\<epsilon> = x\n 7. \\<And>x y z.\n       x \\<oplus> y \\<otimes> z = (x \\<otimes> z) \\<oplus> (y \\<otimes> z)\n 8. \\<And>x. (x\\<^sup>\\<dagger>)\\<^sup>\\<dagger> = x\n 9. \\<And>x y.\n       (x \\<oplus> y)\\<^sup>\\<dagger> =\n       x\\<^sup>\\<dagger> \\<oplus> y\\<^sup>\\<dagger>\n 10. \\<And>x y.\n        (x \\<otimes> y)\\<^sup>\\<dagger> =\n        y\\<^sup>\\<dagger> \\<otimes> x\\<^sup>\\<dagger>\nA total of 11 subgoals...", "fix x y z :: \"'a::finite \\<Rightarrow> 'a \\<Rightarrow> bool\""], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>a. (\\<lambda>i j. False) \\<le> a\n 2. \\<And>x. x \\<sqinter> x\\<^sup>c = (\\<lambda>i j. False)\n 3. \\<And>x. x \\<oplus> x\\<^sup>c = \\<tau>\n 4. \\<And>x y. x \\<sqinter> y\\<^sup>c = x \\<sqinter> y\\<^sup>c\n 5. \\<And>x y z. x \\<otimes> y \\<otimes> z = x \\<otimes> (y \\<otimes> z)\n 6. \\<And>x. x \\<otimes> \\<epsilon> = x\n 7. \\<And>x y z.\n       x \\<oplus> y \\<otimes> z = (x \\<otimes> z) \\<oplus> (y \\<otimes> z)\n 8. \\<And>x. (x\\<^sup>\\<dagger>)\\<^sup>\\<dagger> = x\n 9. \\<And>x y.\n       (x \\<oplus> y)\\<^sup>\\<dagger> =\n       x\\<^sup>\\<dagger> \\<oplus> y\\<^sup>\\<dagger>\n 10. \\<And>x y.\n        (x \\<otimes> y)\\<^sup>\\<dagger> =\n        y\\<^sup>\\<dagger> \\<otimes> x\\<^sup>\\<dagger>\nA total of 11 subgoals...", "show \"(\\<lambda>(i::'a) j::'a. False) \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>i j. False) \\<le> x", "by (metis predicate2I)"], ["proof (state)\nthis:\n  (\\<lambda>i j. False) \\<le> x\n\ngoal (10 subgoals):\n 1. \\<And>x. x \\<sqinter> x\\<^sup>c = (\\<lambda>i j. False)\n 2. \\<And>x. x \\<oplus> x\\<^sup>c = \\<tau>\n 3. \\<And>x y. x \\<sqinter> y\\<^sup>c = x \\<sqinter> y\\<^sup>c\n 4. \\<And>x y z. x \\<otimes> y \\<otimes> z = x \\<otimes> (y \\<otimes> z)\n 5. \\<And>x. x \\<otimes> \\<epsilon> = x\n 6. \\<And>x y z.\n       x \\<oplus> y \\<otimes> z = (x \\<otimes> z) \\<oplus> (y \\<otimes> z)\n 7. \\<And>x. (x\\<^sup>\\<dagger>)\\<^sup>\\<dagger> = x\n 8. \\<And>x y.\n       (x \\<oplus> y)\\<^sup>\\<dagger> =\n       x\\<^sup>\\<dagger> \\<oplus> y\\<^sup>\\<dagger>\n 9. \\<And>x y.\n       (x \\<otimes> y)\\<^sup>\\<dagger> =\n       y\\<^sup>\\<dagger> \\<otimes> x\\<^sup>\\<dagger>\n 10. \\<And>x y.\n        x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c \\<le> y\\<^sup>c", "show \"x \\<sqinter> x\\<^sup>c = (\\<lambda>i j. False)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sqinter> x\\<^sup>c = (\\<lambda>i j. False)", "by (metis matrix_ba.bot.extremum matrix_ba.inf_compl_bot rev_predicate2D)"], ["proof (state)\nthis:\n  x \\<sqinter> x\\<^sup>c = (\\<lambda>i j. False)\n\ngoal (9 subgoals):\n 1. \\<And>x. x \\<oplus> x\\<^sup>c = \\<tau>\n 2. \\<And>x y. x \\<sqinter> y\\<^sup>c = x \\<sqinter> y\\<^sup>c\n 3. \\<And>x y z. x \\<otimes> y \\<otimes> z = x \\<otimes> (y \\<otimes> z)\n 4. \\<And>x. x \\<otimes> \\<epsilon> = x\n 5. \\<And>x y z.\n       x \\<oplus> y \\<otimes> z = (x \\<otimes> z) \\<oplus> (y \\<otimes> z)\n 6. \\<And>x. (x\\<^sup>\\<dagger>)\\<^sup>\\<dagger> = x\n 7. \\<And>x y.\n       (x \\<oplus> y)\\<^sup>\\<dagger> =\n       x\\<^sup>\\<dagger> \\<oplus> y\\<^sup>\\<dagger>\n 8. \\<And>x y.\n       (x \\<otimes> y)\\<^sup>\\<dagger> =\n       y\\<^sup>\\<dagger> \\<otimes> x\\<^sup>\\<dagger>\n 9. \\<And>x y.\n       x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c \\<le> y\\<^sup>c", "show \"x \\<oplus> x\\<^sup>c = \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<oplus> x\\<^sup>c = \\<tau>", "by (fact matrix_ba.sup_compl_top)"], ["proof (state)\nthis:\n  x \\<oplus> x\\<^sup>c = \\<tau>\n\ngoal (8 subgoals):\n 1. \\<And>x y. x \\<sqinter> y\\<^sup>c = x \\<sqinter> y\\<^sup>c\n 2. \\<And>x y z. x \\<otimes> y \\<otimes> z = x \\<otimes> (y \\<otimes> z)\n 3. \\<And>x. x \\<otimes> \\<epsilon> = x\n 4. \\<And>x y z.\n       x \\<oplus> y \\<otimes> z = (x \\<otimes> z) \\<oplus> (y \\<otimes> z)\n 5. \\<And>x. (x\\<^sup>\\<dagger>)\\<^sup>\\<dagger> = x\n 6. \\<And>x y.\n       (x \\<oplus> y)\\<^sup>\\<dagger> =\n       x\\<^sup>\\<dagger> \\<oplus> y\\<^sup>\\<dagger>\n 7. \\<And>x y.\n       (x \\<otimes> y)\\<^sup>\\<dagger> =\n       y\\<^sup>\\<dagger> \\<otimes> x\\<^sup>\\<dagger>\n 8. \\<And>x y.\n       x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c \\<le> y\\<^sup>c", "show \"x \\<sqinter> y\\<^sup>c = x \\<sqinter> y\\<^sup>c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sqinter> y\\<^sup>c = x \\<sqinter> y\\<^sup>c", "by (fact refl)"], ["proof (state)\nthis:\n  x \\<sqinter> y\\<^sup>c = x \\<sqinter> y\\<^sup>c\n\ngoal (7 subgoals):\n 1. \\<And>x y z. x \\<otimes> y \\<otimes> z = x \\<otimes> (y \\<otimes> z)\n 2. \\<And>x. x \\<otimes> \\<epsilon> = x\n 3. \\<And>x y z.\n       x \\<oplus> y \\<otimes> z = (x \\<otimes> z) \\<oplus> (y \\<otimes> z)\n 4. \\<And>x. (x\\<^sup>\\<dagger>)\\<^sup>\\<dagger> = x\n 5. \\<And>x y.\n       (x \\<oplus> y)\\<^sup>\\<dagger> =\n       x\\<^sup>\\<dagger> \\<oplus> y\\<^sup>\\<dagger>\n 6. \\<And>x y.\n       (x \\<otimes> y)\\<^sup>\\<dagger> =\n       y\\<^sup>\\<dagger> \\<otimes> x\\<^sup>\\<dagger>\n 7. \\<And>x y.\n       x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c \\<le> y\\<^sup>c", "show \"x \\<otimes> y \\<otimes> z = x \\<otimes> (y \\<otimes> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes> y \\<otimes> z = x \\<otimes> (y \\<otimes> z)", "by (metis mat_mult_assoc)"], ["proof (state)\nthis:\n  x \\<otimes> y \\<otimes> z = x \\<otimes> (y \\<otimes> z)\n\ngoal (6 subgoals):\n 1. \\<And>x. x \\<otimes> \\<epsilon> = x\n 2. \\<And>x y z.\n       x \\<oplus> y \\<otimes> z = (x \\<otimes> z) \\<oplus> (y \\<otimes> z)\n 3. \\<And>x. (x\\<^sup>\\<dagger>)\\<^sup>\\<dagger> = x\n 4. \\<And>x y.\n       (x \\<oplus> y)\\<^sup>\\<dagger> =\n       x\\<^sup>\\<dagger> \\<oplus> y\\<^sup>\\<dagger>\n 5. \\<And>x y.\n       (x \\<otimes> y)\\<^sup>\\<dagger> =\n       y\\<^sup>\\<dagger> \\<otimes> x\\<^sup>\\<dagger>\n 6. \\<And>x y.\n       x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c \\<le> y\\<^sup>c", "show \"x \\<otimes> \\<epsilon> = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes> \\<epsilon> = x", "by (fact mat_oner)"], ["proof (state)\nthis:\n  x \\<otimes> \\<epsilon> = x\n\ngoal (5 subgoals):\n 1. \\<And>x y z.\n       x \\<oplus> y \\<otimes> z = (x \\<otimes> z) \\<oplus> (y \\<otimes> z)\n 2. \\<And>x. (x\\<^sup>\\<dagger>)\\<^sup>\\<dagger> = x\n 3. \\<And>x y.\n       (x \\<oplus> y)\\<^sup>\\<dagger> =\n       x\\<^sup>\\<dagger> \\<oplus> y\\<^sup>\\<dagger>\n 4. \\<And>x y.\n       (x \\<otimes> y)\\<^sup>\\<dagger> =\n       y\\<^sup>\\<dagger> \\<otimes> x\\<^sup>\\<dagger>\n 5. \\<And>x y.\n       x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c \\<le> y\\<^sup>c", "show \"x \\<oplus> y \\<otimes> z = (x \\<otimes> z) \\<oplus> (y \\<otimes> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<oplus> y \\<otimes> z = (x \\<otimes> z) \\<oplus> (y \\<otimes> z)", "by (fact mat_distr)"], ["proof (state)\nthis:\n  x \\<oplus> y \\<otimes> z = (x \\<otimes> z) \\<oplus> (y \\<otimes> z)\n\ngoal (4 subgoals):\n 1. \\<And>x. (x\\<^sup>\\<dagger>)\\<^sup>\\<dagger> = x\n 2. \\<And>x y.\n       (x \\<oplus> y)\\<^sup>\\<dagger> =\n       x\\<^sup>\\<dagger> \\<oplus> y\\<^sup>\\<dagger>\n 3. \\<And>x y.\n       (x \\<otimes> y)\\<^sup>\\<dagger> =\n       y\\<^sup>\\<dagger> \\<otimes> x\\<^sup>\\<dagger>\n 4. \\<And>x y.\n       x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c \\<le> y\\<^sup>c", "show \"(x\\<^sup>\\<dagger>)\\<^sup>\\<dagger> = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<dagger>)\\<^sup>\\<dagger> = x", "by (simp add: mat_transpose_def)"], ["proof (state)\nthis:\n  (x\\<^sup>\\<dagger>)\\<^sup>\\<dagger> = x\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       (x \\<oplus> y)\\<^sup>\\<dagger> =\n       x\\<^sup>\\<dagger> \\<oplus> y\\<^sup>\\<dagger>\n 2. \\<And>x y.\n       (x \\<otimes> y)\\<^sup>\\<dagger> =\n       y\\<^sup>\\<dagger> \\<otimes> x\\<^sup>\\<dagger>\n 3. \\<And>x y.\n       x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c \\<le> y\\<^sup>c", "show \"(x \\<oplus> y)\\<^sup>\\<dagger> = x\\<^sup>\\<dagger> \\<oplus> y\\<^sup>\\<dagger>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<oplus> y)\\<^sup>\\<dagger> =\n    x\\<^sup>\\<dagger> \\<oplus> y\\<^sup>\\<dagger>", "by (simp add: mat_transpose_def mat_add_def)"], ["proof (state)\nthis:\n  (x \\<oplus> y)\\<^sup>\\<dagger> =\n  x\\<^sup>\\<dagger> \\<oplus> y\\<^sup>\\<dagger>\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       (x \\<otimes> y)\\<^sup>\\<dagger> =\n       y\\<^sup>\\<dagger> \\<otimes> x\\<^sup>\\<dagger>\n 2. \\<And>x y.\n       x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c \\<le> y\\<^sup>c", "show \"(x \\<otimes> y)\\<^sup>\\<dagger> = y\\<^sup>\\<dagger> \\<otimes> x\\<^sup>\\<dagger>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<otimes> y)\\<^sup>\\<dagger> =\n    y\\<^sup>\\<dagger> \\<otimes> x\\<^sup>\\<dagger>", "by (simp add: mat_transpose_def mat_mult_var times_bool_def conj_commute)"], ["proof (state)\nthis:\n  (x \\<otimes> y)\\<^sup>\\<dagger> =\n  y\\<^sup>\\<dagger> \\<otimes> x\\<^sup>\\<dagger>\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c \\<le> y\\<^sup>c", "show \"x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c \\<le> y\\<^sup>c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c \\<le> y\\<^sup>c", "by (metis le_funI2 mat_res_pointwise)"], ["proof (state)\nthis:\n  x\\<^sup>\\<dagger> \\<otimes> (x \\<otimes> y)\\<^sup>c \\<le> y\\<^sup>c\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}